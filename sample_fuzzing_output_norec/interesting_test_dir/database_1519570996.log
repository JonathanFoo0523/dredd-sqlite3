-- Time: 2024/06/09 03:49:09
-- Database: database96
-- Database version: 3.40.0
-- seed value: 1519570996
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE TABLE t0 (c0 INTEGER ); -- 0ms;
PRAGMA temp.checkpoint_fullfsync; -- 0ms;
ANALYZE main; -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, prefix = 914); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.47427547319105645); -- 0ms;
PRAGMA cache_size; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('0.47427547319105645'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (0.9259450270805385); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL), (''), (0.05258902337522409); -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
END; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL), (0.46684893072649913), (0.47427547319105645); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
END TRANSACTION; -- 0ms;
REINDEX BINARY; -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1) VALUES ((((~ (0x355d94a5)))|((('钥W')!=('0.9259450270805385')))), 0x6b93238e, 'V'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '43180'); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL WHERE (((rt0.c0) NOTNULL) IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.05887259431544334; -- 0ms;
PRAGMA main.default_cache_size = -129085500; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
REINDEX RTRIM; -- 0ms;
END; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL); -- 0ms;
PRAGMA auto_vacuum = FULL; -- 0ms;
PRAGMA main.foreign_keys = false; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.05258902337522409); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (-1.290855E8); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0x5708f7a0); -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c1, c2) VALUES ('钥w', '895325349', 8.95325349E8); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c56; -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES ('jQ'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=NULL, c1=NULL; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''), (x''), (0.1332012620552404); -- 0ms;
END; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
PRAGMA main.defer_foreign_keys = true; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (')1a틋YJK%z'), (NULL), (x''); -- 0ms;
ALTER TABLE t1 ADD COLUMN c15 REAL; -- 1ms;
DROP TABLE IF EXISTS t1; -- 0ms;
PRAGMA mmap_size; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 2145187675);\n; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES ('', x'', x''), ('-1303701001', '1412898814', '-1556909032'), (NULL, 0Xffffffffa3337418, x'2e35'); -- 0ms;
INSERT OR ABORT INTO rt0 VALUES (x'27b7', NULL, x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.19352286034716604); -- 1ms;
PRAGMA cell_size_check; -- 0ms;
ANALYZE; -- 1ms;
REINDEX; -- 0ms;
CREATE TEMPORARY VIEW v0(c0) AS SELECT DISTINCT GLOB((rt0.c2 IN ()), rt0.c2) FROM rt0, vt0 WHERE (((((0.8177042966562729))!=(('1491422044'))) IN ())); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (0.19568615796912048), (0.05258902337522409), (1.491422044E9), (NULL), ('1545766574'); -- 0ms;
INSERT OR FAIL INTO rt0(c2, c1) VALUES (x'd60c', x'a14a'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'vt0', ' unordered'); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (-1.556909032E9), ('1545766574'), (0.5457203871780089); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c2) VALUES (x'6d76', 0.49599786209965424, 0.3562975842131678); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
END; -- 0ms;
PRAGMA legacy_file_format = true; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.5613408356758607); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (0.017315038779637693), (0.8332286653048397), (0.8011667169879472); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(''); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES ('5_Z蚄'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''), (x''), ('1491422044'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-464915665,15');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '41141'); -- 0ms;
PRAGMA main.ignore_check_constraints; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1491422044);\n; -- 0ms;
PRAGMA main.legacy_file_format = false; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('Wia6<'), (0.23168552783495833), (''), ('!JTOEc'), ('1412898814'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (NULL); -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE NULL  WHEN ((((((((vt0.c0)OR(0.9106750782094748)))OR(vt0.c0)))OR(vt0.c0)))OR('y}w^*')) THEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN ((((((((vt0.c0)OR(0.9106750782094748)))OR(vt0.c0)))OR(vt0.c0)))OR('y}w^*')) THEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE NULL  WHEN ((((((((vt0.c0)OR(0.9106750782094748)))OR(vt0.c0)))OR(vt0.c0)))OR('y}w^*')) THEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN ((((((((vt0.c0)OR(0.9106750782094748)))OR(vt0.c0)))OR(vt0.c0)))OR('y}w^*')) THEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE NULL  WHEN ((((((((vt0.c0)OR(0.9106750782094748)))OR(vt0.c0)))OR(vt0.c0)))OR('y}w^*')) THEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN CAST(v0.c0 AS NUMERIC) WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END THEN v0.c0 COLLATE NOCASE ELSE v0.c0 END) ORDER BY vt0.c0 DESC, '-979882502';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS TEXT) THEN CAST(v0.c0 AS NUMERIC) WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END THEN v0.c0 COLLATE NOCASE ELSE v0.c0 END) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0 DESC, '-979882502');
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN CAST(v0.c0 AS NUMERIC) WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END THEN v0.c0 COLLATE NOCASE ELSE v0.c0 END) ORDER BY vt0.c0 DESC, '-979882502';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS TEXT) THEN CAST(v0.c0 AS NUMERIC) WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END THEN v0.c0 COLLATE NOCASE ELSE v0.c0 END) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0 DESC, '-979882502');
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN CAST(v0.c0 AS NUMERIC) WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END THEN v0.c0 COLLATE NOCASE ELSE v0.c0 END) ORDER BY vt0.c0 DESC, '-979882502';
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(((((rt0.c0)OR(v0.c0)))OR(rt0.c0)) AS NUMERIC)) ORDER BY (((rt0.c1 IN ()))=(((rt0.c0)OR('1027616593'))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)OR(v0.c0)))OR(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((rt0.c1 IN ()))=(((rt0.c0)OR('1027616593')))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(((((rt0.c0)OR(v0.c0)))OR(rt0.c0)) AS NUMERIC)) ORDER BY (((rt0.c1 IN ()))=(((rt0.c0)OR('1027616593'))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)OR(v0.c0)))OR(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((rt0.c1 IN ()))=(((rt0.c0)OR('1027616593')))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(((((rt0.c0)OR(v0.c0)))OR(rt0.c0)) AS NUMERIC)) ORDER BY (((rt0.c1 IN ()))=(((rt0.c0)OR('1027616593'))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) IS TRUE));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((LOWER(DISTINCT vt0.c0))<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END)) LEFT OUTER JOIN vt0 ON CASE WHEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END THEN ((v0.c0)&(rt0.c2)) WHEN ((rt0.c0)|(v0.c0)) THEN v0.c0 WHEN CASE WHEN 0.4756671111648787 THEN 'e\r' END THEN v0.c0 COLLATE NOCASE WHEN 'g첆O}>ᥣ^E' THEN (rt0.c2 IN (v0.c0)) WHEN ((((((((v0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(v0.c0)))AND(v0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) END WHERE (v0.c0) ORDER BY CASE ((v0.c0) NOT NULL)  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((NULL))) THEN CAST(rt0.c1 AS REAL) END;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((LOWER(DISTINCT vt0.c0))<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END)) LEFT OUTER JOIN vt0 ON CASE WHEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END THEN ((v0.c0)&(rt0.c2)) WHEN ((rt0.c0)|(v0.c0)) THEN v0.c0 WHEN CASE WHEN 0.4756671111648787 THEN 'e\r' END THEN v0.c0 COLLATE NOCASE WHEN 'g첆O}>ᥣ^E' THEN (rt0.c2 IN (v0.c0)) WHEN ((((((((v0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(v0.c0)))AND(v0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) END ORDER BY CASE ((v0.c0) NOT NULL)  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((NULL))) THEN CAST(rt0.c1 AS REAL) END);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((LOWER(DISTINCT vt0.c0))<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END)) LEFT OUTER JOIN vt0 ON CASE WHEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END THEN ((v0.c0)&(rt0.c2)) WHEN ((rt0.c0)|(v0.c0)) THEN v0.c0 WHEN CASE WHEN 0.4756671111648787 THEN 'e\r' END THEN v0.c0 COLLATE NOCASE WHEN 'g첆O}>ᥣ^E' THEN (rt0.c2 IN (v0.c0)) WHEN ((((((((v0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(v0.c0)))AND(v0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) END WHERE (v0.c0) ORDER BY CASE ((v0.c0) NOT NULL)  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((NULL))) THEN CAST(rt0.c1 AS REAL) END;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((LOWER(DISTINCT vt0.c0))<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END)) LEFT OUTER JOIN vt0 ON CASE WHEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END THEN ((v0.c0)&(rt0.c2)) WHEN ((rt0.c0)|(v0.c0)) THEN v0.c0 WHEN CASE WHEN 0.4756671111648787 THEN 'e\r' END THEN v0.c0 COLLATE NOCASE WHEN 'g첆O}>ᥣ^E' THEN (rt0.c2 IN (v0.c0)) WHEN ((((((((v0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(v0.c0)))AND(v0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) END ORDER BY CASE ((v0.c0) NOT NULL)  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((NULL))) THEN CAST(rt0.c1 AS REAL) END);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)*(v0.c0)))<<(((v0.c0)>>(v0.c0))))) ORDER BY (UPPER(v0.c0) IN (((((v0.c0)AND(NULL)))AND(v0.c0))))  NULLS FIRST, (((v0.c0) IS FALSE) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)*(v0.c0)))<<(((v0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (UPPER(v0.c0) IN (((((v0.c0)AND(NULL)))AND(v0.c0))))  NULLS FIRST, (((v0.c0) IS FALSE) IN ()));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)*(v0.c0)))<<(((v0.c0)>>(v0.c0))))) ORDER BY (UPPER(v0.c0) IN (((((v0.c0)AND(NULL)))AND(v0.c0))))  NULLS FIRST, (((v0.c0) IS FALSE) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)*(v0.c0)))<<(((v0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (UPPER(v0.c0) IN (((((v0.c0)AND(NULL)))AND(v0.c0))))  NULLS FIRST, (((v0.c0) IS FALSE) IN ()));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)*(v0.c0)))<<(((v0.c0)>>(v0.c0))))) ORDER BY (UPPER(v0.c0) IN (((((v0.c0)AND(NULL)))AND(v0.c0))))  NULLS FIRST, (((v0.c0) IS FALSE) IN ());
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0)>(v0.c0)) COLLATE BINARY) ORDER BY ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)>(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0)>(v0.c0)) COLLATE BINARY) ORDER BY ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)>(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0)>(v0.c0)) COLLATE BINARY) ORDER BY ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT NULL));
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN v0 ON ABS(vt0.c0) WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))|(0.37544501197895386))) ORDER BY (- ((((rt0.c0))>=((rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))|(0.37544501197895386))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN v0 ON ABS(vt0.c0) ORDER BY (- ((((rt0.c0))>=((rt0.c1))))) DESC);
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN v0 ON ABS(vt0.c0) WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))|(0.37544501197895386))) ORDER BY (- ((((rt0.c0))>=((rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))|(0.37544501197895386))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN v0 ON ABS(vt0.c0) ORDER BY (- ((((rt0.c0))>=((rt0.c1))))) DESC);
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN v0 ON ABS(vt0.c0) WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))|(0.37544501197895386))) ORDER BY (- ((((rt0.c0))>=((rt0.c1))))) DESC;
SELECT ALL * FROM vt0, v0 WHERE ((((NOT (v0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0, v0 WHERE ((((NOT (v0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0, v0 WHERE ((((NOT (v0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY vt0.c0;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((NULL) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((NULL) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((NULL) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (CAST(v0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (json_patch(((rt0.c2)>=(rt0.c2)), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (('-1303701001')))));
SELECT SUM(count) FROM (SELECT ((json_patch(((rt0.c2)>=(rt0.c2)), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (('-1303701001'))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (json_patch(((rt0.c2)>=(rt0.c2)), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (('-1303701001')))));
SELECT SUM(count) FROM (SELECT ((json_patch(((rt0.c2)>=(rt0.c2)), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (('-1303701001'))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (json_patch(((rt0.c2)>=(rt0.c2)), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (('-1303701001')))));
SELECT * FROM rt0 WHERE (1.491422044E9) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((1.491422044E9) IS TRUE)  as count FROM rt0 ORDER BY x'');
SELECT * FROM rt0 WHERE (1.491422044E9) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((1.491422044E9) IS TRUE)  as count FROM rt0 ORDER BY x'');
SELECT * FROM rt0 WHERE (1.491422044E9) ORDER BY x'';
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0)-(v0.c0)))GLOB((vt0.c0 IN ())))) ORDER BY CAST(((((v0.c0)OR(v0.c0)))AND(v0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(v0.c0)))GLOB((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((((v0.c0)OR(v0.c0)))AND(v0.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0)-(v0.c0)))GLOB((vt0.c0 IN ())))) ORDER BY CAST(((((v0.c0)OR(v0.c0)))AND(v0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(v0.c0)))GLOB((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((((v0.c0)OR(v0.c0)))AND(v0.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0)-(v0.c0)))GLOB((vt0.c0 IN ())))) ORDER BY CAST(((((v0.c0)OR(v0.c0)))AND(v0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((x'')&(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((x'')&(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((x'')&(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((x'')&(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((x'')&(vt0.c0)) END);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((rt0.c2)) BETWEEN ((((vt0.c0)>>(rt0.c1)))) AND ((((rt0.c1) ISNULL))))) ORDER BY ((((x'6dd1')OR(CAST(rt0.c2 AS NUMERIC))))AND(SQLITE_SOURCE_ID()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((vt0.c0)>>(rt0.c1)))) AND ((((rt0.c1) ISNULL))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((x'6dd1')OR(CAST(rt0.c2 AS NUMERIC))))AND(SQLITE_SOURCE_ID())));
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((rt0.c2)) BETWEEN ((((vt0.c0)>>(rt0.c1)))) AND ((((rt0.c1) ISNULL))))) ORDER BY ((((x'6dd1')OR(CAST(rt0.c2 AS NUMERIC))))AND(SQLITE_SOURCE_ID()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((vt0.c0)>>(rt0.c1)))) AND ((((rt0.c1) ISNULL))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((x'6dd1')OR(CAST(rt0.c2 AS NUMERIC))))AND(SQLITE_SOURCE_ID())));
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((rt0.c2)) BETWEEN ((((vt0.c0)>>(rt0.c1)))) AND ((((rt0.c1) ISNULL))))) ORDER BY ((((x'6dd1')OR(CAST(rt0.c2 AS NUMERIC))))AND(SQLITE_SOURCE_ID()));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))<>(CAST(rt0.c2 AS BLOB)))) ORDER BY CASE rt0.c0  WHEN ((rt0.c0)<>(rt0.c2)) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))<>(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c0  WHEN ((rt0.c0)!=(rt0.c2)) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))<>(CAST(rt0.c2 AS BLOB)))) ORDER BY CASE rt0.c0  WHEN ((rt0.c0)<>(rt0.c2)) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))<>(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c0  WHEN ((rt0.c0)!=(rt0.c2)) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))<>(CAST(rt0.c2 AS BLOB)))) ORDER BY CASE rt0.c0  WHEN ((rt0.c0)<>(rt0.c2)) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END END  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (UPPER(DISTINCT (x'' IN ()))) ORDER BY (((((v0.c0))==((x''))))*((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (x'' IN ()))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0))==((x''))))*((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (UPPER(DISTINCT (x'' IN ()))) ORDER BY (((((v0.c0))==((x''))))*((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (x'' IN ()))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0))==((x''))))*((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (UPPER(DISTINCT (x'' IN ()))) ORDER BY (((((v0.c0))==((x''))))*((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC  NULLS LAST;
SELECT * FROM rt0, v0, vt0 WHERE (((((rt0.c1) NOTNULL)) NOT BETWEEN ((- (-979882502))) AND (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL)) NOT BETWEEN ((- (-979882502))) AND (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (((((rt0.c1) NOTNULL)) NOT BETWEEN ((- (-979882502))) AND (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL)) NOT BETWEEN ((- (-979882502))) AND (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (((((rt0.c1) NOTNULL)) NOT BETWEEN ((- (-979882502))) AND (v0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt0, v0 WHERE ((- (v0.c0))) ORDER BY ((((CAST(v0.c0 AS INTEGER))OR(0.7261884723925609)))AND(((((v0.c0)OR(vt0.c0)))AND(NULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (v0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((CAST(v0.c0 AS INTEGER))OR(0.7261884723925609)))AND(((((v0.c0)OR(vt0.c0)))AND(NULL)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE ((- (v0.c0))) ORDER BY ((((CAST(v0.c0 AS INTEGER))OR(0.7261884723925609)))AND(((((v0.c0)OR(vt0.c0)))AND(NULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (v0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((CAST(v0.c0 AS INTEGER))OR(0.7261884723925609)))AND(((((v0.c0)OR(vt0.c0)))AND(NULL)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE ((- (v0.c0))) ORDER BY ((((CAST(v0.c0 AS INTEGER))OR(0.7261884723925609)))AND(((((v0.c0)OR(vt0.c0)))AND(NULL)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0 NOT INDEXED);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0 NOT INDEXED);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0)<<(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0)<<(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0)<<(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0)<<(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0)<<(v0.c0))))));
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c2)AND(rt0.c1))) BETWEEN (v0.c0) AND (((rt0.c2)-(v0.c0))))) ORDER BY ((TRIM(DISTINCT rt0.c0))|(CAST(rt0.c2 AS REAL))) ASC, (((rt0.c2 IN ()))+(v0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c1))) BETWEEN (v0.c0) AND (((rt0.c2)-(v0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((TRIM(DISTINCT rt0.c0))|(CAST(rt0.c2 AS REAL))) ASC, (((rt0.c2 IN ()))+(v0.c0)) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c2)AND(rt0.c1))) BETWEEN (v0.c0) AND (((rt0.c2)-(v0.c0))))) ORDER BY ((TRIM(DISTINCT rt0.c0))|(CAST(rt0.c2 AS REAL))) ASC, (((rt0.c2 IN ()))+(v0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c1))) BETWEEN (v0.c0) AND (((rt0.c2)-(v0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((TRIM(DISTINCT rt0.c0))|(CAST(rt0.c2 AS REAL))) ASC, (((rt0.c2 IN ()))+(v0.c0)) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c2)AND(rt0.c1))) BETWEEN (v0.c0) AND (((rt0.c2)-(v0.c0))))) ORDER BY ((TRIM(DISTINCT rt0.c0))|(CAST(rt0.c2 AS REAL))) ASC, (((rt0.c2 IN ()))+(v0.c0)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON 0.4671254055778692 WHERE (LOWER(v0.c0));
SELECT SUM(count) FROM (SELECT ((LOWER(v0.c0)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON 0.4671254055778692);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON 0.4671254055778692 WHERE (LOWER(v0.c0));
SELECT SUM(count) FROM (SELECT ((LOWER(v0.c0)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON 0.4671254055778692);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON 0.4671254055778692 WHERE (LOWER(v0.c0));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0) ISNULL))<=(v0.c0 COLLATE NOCASE))  NULLS FIRST, 0.4378881153209847;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) ISNULL))<=(v0.c0 COLLATE NOCASE))  NULLS FIRST, 0.4378881153209847);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0) ISNULL))<=(v0.c0 COLLATE NOCASE))  NULLS FIRST, 0.4378881153209847;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) ISNULL))<=(v0.c0 COLLATE NOCASE))  NULLS FIRST, 0.4378881153209847);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0) ISNULL))<=(v0.c0 COLLATE NOCASE))  NULLS FIRST, 0.4378881153209847;
SELECT * FROM vt0 WHERE (CAST(IFNULL(DISTINCT vt0.c0, vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(DISTINCT vt0.c0, vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(IFNULL(DISTINCT vt0.c0, vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(DISTINCT vt0.c0, vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(IFNULL(DISTINCT vt0.c0, vt0.c0) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (TIME(CAST(v0.c0 AS INTEGER), ((rt0.c0)|(rt0.c0)), 0.1551039446454039)) ORDER BY NULL ASC, CAST(rt0.c0 COLLATE BINARY AS TEXT) DESC, CASE WHEN DATETIME(rt0.c2, rt0.c2, v0.c0) THEN (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN (v0.c0 IN ()) THEN ((rt0.c2) IS FALSE) WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) THEN vt0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TIME(CAST(v0.c0 AS INTEGER), ((rt0.c0)|(rt0.c0)), 0.1551039446454039)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY NULL ASC, CAST(rt0.c0 COLLATE BINARY AS TEXT) DESC, CASE WHEN DATETIME(rt0.c2, rt0.c2, v0.c0) THEN (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN (v0.c0 IN ()) THEN ((rt0.c2) IS FALSE) WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) THEN vt0.c0 END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (TIME(CAST(v0.c0 AS INTEGER), ((rt0.c0)|(rt0.c0)), 0.1551039446454039)) ORDER BY NULL ASC, CAST(rt0.c0 COLLATE BINARY AS TEXT) DESC, CASE WHEN DATETIME(rt0.c2, rt0.c2, v0.c0) THEN (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN (v0.c0 IN ()) THEN ((rt0.c2) IS FALSE) WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) THEN vt0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TIME(CAST(v0.c0 AS INTEGER), ((rt0.c0)|(rt0.c0)), 0.1551039446454039)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY NULL ASC, CAST(rt0.c0 COLLATE BINARY AS TEXT) DESC, CASE WHEN DATETIME(rt0.c2, rt0.c2, v0.c0) THEN (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN (v0.c0 IN ()) THEN ((rt0.c2) IS FALSE) WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) THEN vt0.c0 END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (TIME(CAST(v0.c0 AS INTEGER), ((rt0.c0)|(rt0.c0)), 0.1551039446454039)) ORDER BY NULL ASC, CAST(rt0.c0 COLLATE BINARY AS TEXT) DESC, CASE WHEN DATETIME(rt0.c2, rt0.c2, v0.c0) THEN (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN (v0.c0 IN ()) THEN ((rt0.c2) IS FALSE) WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) THEN vt0.c0 END DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (UPPER(DISTINCT ((v0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((v0.c0) NOTNULL))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (UPPER(DISTINCT ((v0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((v0.c0) NOTNULL))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (UPPER(DISTINCT ((v0.c0) NOTNULL)));
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)) AS INTEGER)) ORDER BY ((((((rt0.c0)>=(vt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(CAST(rt0.c1 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c0)>=(vt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(CAST(rt0.c1 AS TEXT))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)) AS INTEGER)) ORDER BY ((((((rt0.c0)>=(vt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(CAST(rt0.c1 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c0)>=(vt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(CAST(rt0.c1 AS TEXT))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)) AS INTEGER)) ORDER BY ((((((rt0.c0)>=(vt0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(CAST(rt0.c1 AS TEXT))) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (CAST((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))) AS TEXT)) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT * FROM v0 WHERE (CAST((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))) AS TEXT)) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT * FROM v0 WHERE (CAST((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))) AS TEXT)) ORDER BY v0.c0  NULLS LAST;
SELECT ALL * FROM rt0, vt0 INNER JOIN v0 ON json_insert(IFNULL(DISTINCT rt0.c0, rt0.c1), rt0.c2, CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END, CAST(v0.c0 AS REAL), rt0.c2) WHERE ((((rt0.c2)) BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((rt0.c2)))) ORDER BY CASE (vt0.c0 IN ())  WHEN (NOT (rt0.c2)) THEN ((('O*V໑QsJE'))!=((rt0.c1))) END DESC, (- (rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((rt0.c2)))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON json_insert(IFNULL(DISTINCT rt0.c0, rt0.c1), rt0.c2, CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END, CAST(v0.c0 AS REAL), rt0.c2) ORDER BY CASE (vt0.c0 IN ())  WHEN (NOT (rt0.c2)) THEN ((('O*V໑QsJE'))<>((rt0.c1))) END DESC, (- (rt0.c0))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 INNER JOIN v0 ON json_insert(IFNULL(DISTINCT rt0.c0, rt0.c1), rt0.c2, CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END, CAST(v0.c0 AS REAL), rt0.c2) WHERE ((((rt0.c2)) BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((rt0.c2)))) ORDER BY CASE (vt0.c0 IN ())  WHEN (NOT (rt0.c2)) THEN ((('O*V໑QsJE'))!=((rt0.c1))) END DESC, (- (rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((rt0.c2)))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON json_insert(IFNULL(DISTINCT rt0.c0, rt0.c1), rt0.c2, CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END, CAST(v0.c0 AS REAL), rt0.c2) ORDER BY CASE (vt0.c0 IN ())  WHEN (NOT (rt0.c2)) THEN ((('O*V໑QsJE'))<>((rt0.c1))) END DESC, (- (rt0.c0))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 INNER JOIN v0 ON json_insert(IFNULL(DISTINCT rt0.c0, rt0.c1), rt0.c2, CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END, CAST(v0.c0 AS REAL), rt0.c2) WHERE ((((rt0.c2)) BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((rt0.c2)))) ORDER BY CASE (vt0.c0 IN ())  WHEN (NOT (rt0.c2)) THEN ((('O*V໑QsJE'))!=((rt0.c1))) END DESC, (- (rt0.c0))  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (CAST((rt0.c2 IN (rt0.c2)) AS NUMERIC)) ORDER BY ((~ (rt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((~ (rt0.c0)) IN ()) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CAST((rt0.c2 IN (rt0.c2)) AS NUMERIC)) ORDER BY ((~ (rt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((~ (rt0.c0)) IN ()) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CAST((rt0.c2 IN (rt0.c2)) AS NUMERIC)) ORDER BY ((~ (rt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((rt0.c1)GLOB(vt0.c0)))&(((rt0.c0) IS TRUE)))) ORDER BY (~ (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))), TRIM(TRIM(x'', rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)GLOB(vt0.c0)))&(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (~ (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))), TRIM(TRIM(x'', rt0.c2)) DESC);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((rt0.c1)GLOB(vt0.c0)))&(((rt0.c0) IS TRUE)))) ORDER BY (~ (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))), TRIM(TRIM(x'', rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)GLOB(vt0.c0)))&(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (~ (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))), TRIM(TRIM(x'', rt0.c2)) DESC);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((rt0.c1)GLOB(vt0.c0)))&(((rt0.c0) IS TRUE)))) ORDER BY (~ (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))), TRIM(TRIM(x'', rt0.c2)) DESC;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (COALESCE(DISTINCT CAST(rt0.c2 AS INTEGER), (rt0.c1 IN (vt0.c0, rt0.c1)))) ORDER BY ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN x'4c2d' THEN v0.c0 END) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 END) AND (((rt0.c1)OR(x''))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT CAST(rt0.c2 AS INTEGER), (rt0.c1 IN (vt0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN x'4c2d' THEN v0.c0 END) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 END) AND (((rt0.c1)OR(x'')))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (COALESCE(DISTINCT CAST(rt0.c2 AS INTEGER), (rt0.c1 IN (vt0.c0, rt0.c1)))) ORDER BY ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN x'4c2d' THEN v0.c0 END) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 END) AND (((rt0.c1)OR(x''))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT CAST(rt0.c2 AS INTEGER), (rt0.c1 IN (vt0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN x'4c2d' THEN v0.c0 END) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 END) AND (((rt0.c1)OR(x'')))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (COALESCE(DISTINCT CAST(rt0.c2 AS INTEGER), (rt0.c1 IN (vt0.c0, rt0.c1)))) ORDER BY ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN x'4c2d' THEN v0.c0 END) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 END) AND (((rt0.c1)OR(x''))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1)LIKE(x'')) IN ()) WHERE (0.4951939454098425 COLLATE BINARY) ORDER BY (((rt0.c1, rt0.c1, rt0.c2))<=((rt0.c2, rt0.c1, v0.c0))) COLLATE NOCASE ASC  NULLS FIRST, (rt0.c1 COLLATE BINARY IN (((rt0.c0) ISNULL), CASE WHEN rt0.c1 THEN '-473059084' END));
SELECT SUM(count) FROM (SELECT ((0.4951939454098425 COLLATE BINARY) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1)LIKE(x'')) IN ()) ORDER BY (((rt0.c1, rt0.c1, rt0.c2))<=((rt0.c2, rt0.c1, v0.c0))) COLLATE NOCASE ASC  NULLS FIRST, (rt0.c1 COLLATE BINARY IN (((rt0.c0) ISNULL), CASE WHEN rt0.c1 THEN '-473059084' END)));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1)LIKE(x'')) IN ()) WHERE (0.4951939454098425 COLLATE BINARY) ORDER BY (((rt0.c1, rt0.c1, rt0.c2))<=((rt0.c2, rt0.c1, v0.c0))) COLLATE NOCASE ASC  NULLS FIRST, (rt0.c1 COLLATE BINARY IN (((rt0.c0) ISNULL), CASE WHEN rt0.c1 THEN '-473059084' END));
SELECT SUM(count) FROM (SELECT ((0.4951939454098425 COLLATE BINARY) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1)LIKE(x'')) IN ()) ORDER BY (((rt0.c1, rt0.c1, rt0.c2))<=((rt0.c2, rt0.c1, v0.c0))) COLLATE NOCASE ASC  NULLS FIRST, (rt0.c1 COLLATE BINARY IN (((rt0.c0) ISNULL), CASE WHEN rt0.c1 THEN '-473059084' END)));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1)LIKE(x'')) IN ()) WHERE (0.4951939454098425 COLLATE BINARY) ORDER BY (((rt0.c1, rt0.c1, rt0.c2))<=((rt0.c2, rt0.c1, v0.c0))) COLLATE NOCASE ASC  NULLS FIRST, (rt0.c1 COLLATE BINARY IN (((rt0.c0) ISNULL), CASE WHEN rt0.c1 THEN '-473059084' END));
SELECT * FROM rt0, vt0, v0 WHERE (TRIM(CASE rt0.c0  WHEN v0.c0 THEN v0.c0 END)) ORDER BY ((CAST(NULL AS BLOB))LIKE(CAST(v0.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(CASE rt0.c0  WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((CAST(NULL AS BLOB))LIKE(CAST(v0.c0 AS INTEGER))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0, v0 WHERE (TRIM(CASE rt0.c0  WHEN v0.c0 THEN v0.c0 END)) ORDER BY ((CAST(NULL AS BLOB))LIKE(CAST(v0.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(CASE rt0.c0  WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((CAST(NULL AS BLOB))LIKE(CAST(v0.c0 AS INTEGER))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0, v0 WHERE (TRIM(CASE rt0.c0  WHEN v0.c0 THEN v0.c0 END)) ORDER BY ((CAST(NULL AS BLOB))LIKE(CAST(v0.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) IS TRUE)) ORDER BY ((vt0.c0 IN ()) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) IS TRUE)) ORDER BY ((vt0.c0 IN ()) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) IS TRUE)) ORDER BY ((vt0.c0 IN ()) IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(rt0.c0 AS BLOB))IS((rt0.c1 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB))IS((rt0.c1 IN (rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(rt0.c0 AS BLOB))IS((rt0.c1 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB))IS((rt0.c1 IN (rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(rt0.c0 AS BLOB))IS((rt0.c1 IN (rt0.c0)))));
SELECT ALL * FROM rt0, vt0, v0 WHERE ('611026564') ORDER BY ((load_extension(v0.c0)) BETWEEN (NULLIF(rt0.c1, vt0.c0)) AND (CAST('0.19568615796912048' AS BLOB))), (((v0.c0)) BETWEEN ((((vt0.c0) NOTNULL))) AND ((((rt0.c1)%(v0.c0))))) DESC  NULLS LAST, '-675369780' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('611026564') IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((load_extension(v0.c0)) BETWEEN (NULLIF(rt0.c1, vt0.c0)) AND (CAST('0.19568615796912048' AS BLOB))), (((v0.c0)) BETWEEN ((((vt0.c0) NOTNULL))) AND ((((rt0.c1)%(v0.c0))))) DESC  NULLS LAST, '-675369780' DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE ('611026564') ORDER BY ((load_extension(v0.c0)) BETWEEN (NULLIF(rt0.c1, vt0.c0)) AND (CAST('0.19568615796912048' AS BLOB))), (((v0.c0)) BETWEEN ((((vt0.c0) NOTNULL))) AND ((((rt0.c1)%(v0.c0))))) DESC  NULLS LAST, '-675369780' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('611026564') IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((load_extension(v0.c0)) BETWEEN (NULLIF(rt0.c1, vt0.c0)) AND (CAST('0.19568615796912048' AS BLOB))), (((v0.c0)) BETWEEN ((((vt0.c0) NOTNULL))) AND ((((rt0.c1)%(v0.c0))))) DESC  NULLS LAST, '-675369780' DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE ('611026564') ORDER BY ((load_extension(v0.c0)) BETWEEN (NULLIF(rt0.c1, vt0.c0)) AND (CAST('0.19568615796912048' AS BLOB))), (((v0.c0)) BETWEEN ((((vt0.c0) NOTNULL))) AND ((((rt0.c1)%(v0.c0))))) DESC  NULLS LAST, '-675369780' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1, rt0.c0 COLLATE NOCASE, (((vt0.c0, rt0.c0, rt0.c2))<=((rt0.c0, vt0.c0, rt0.c0)))))<=((rt0.c0, ((((rt0.c1)AND('1491422044')))AND(v0.c0)), CHAR(NULL)))) FULL OUTER JOIN v0 ON ABS(DISTINCT ((((((((rt0.c0)AND(v0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(0.19731189778457103))) WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))), '}8', LOWER(rt0.c1)))=((((rt0.c2) NOTNULL), UPPER(rt0.c2), ((rt0.c1)>>(rt0.c0)))))) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c1 ELSE NULL END IN ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), CASE WHEN rt0.c1 THEN NULL ELSE vt0.c0 END))  NULLS FIRST, ((((LIKE(v0.c0, rt0.c0))AND(NULL)))OR(CAST(rt0.c2 AS NUMERIC))) ASC  NULLS FIRST, ((((rt0.c2)LIKE(rt0.c1)))GLOB(UNICODE(v0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))), '}8', LOWER(rt0.c1)))==((((rt0.c2) NOTNULL), UPPER(rt0.c2), ((rt0.c1)>>(rt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1, rt0.c0 COLLATE NOCASE, (((vt0.c0, rt0.c0, rt0.c2))<=((rt0.c0, vt0.c0, rt0.c0)))))<=((rt0.c0, ((((rt0.c1)AND('1491422044')))AND(v0.c0)), CHAR(NULL)))) FULL OUTER JOIN v0 ON ABS(DISTINCT ((((((((rt0.c0)AND(v0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(0.19731189778457103))) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c1 ELSE NULL END IN ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), CASE WHEN rt0.c1 THEN NULL ELSE vt0.c0 END))  NULLS FIRST, ((((LIKE(v0.c0, rt0.c0))AND(NULL)))OR(CAST(rt0.c2 AS NUMERIC))) ASC  NULLS FIRST, ((((rt0.c2)LIKE(rt0.c1)))GLOB(UNICODE(v0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1, rt0.c0 COLLATE NOCASE, (((vt0.c0, rt0.c0, rt0.c2))<=((rt0.c0, vt0.c0, rt0.c0)))))<=((rt0.c0, ((((rt0.c1)AND('1491422044')))AND(v0.c0)), CHAR(NULL)))) FULL OUTER JOIN v0 ON ABS(DISTINCT ((((((((rt0.c0)AND(v0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(0.19731189778457103))) WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))), '}8', LOWER(rt0.c1)))=((((rt0.c2) NOTNULL), UPPER(rt0.c2), ((rt0.c1)>>(rt0.c0)))))) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c1 ELSE NULL END IN ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), CASE WHEN rt0.c1 THEN NULL ELSE vt0.c0 END))  NULLS FIRST, ((((LIKE(v0.c0, rt0.c0))AND(NULL)))OR(CAST(rt0.c2 AS NUMERIC))) ASC  NULLS FIRST, ((((rt0.c2)LIKE(rt0.c1)))GLOB(UNICODE(v0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))), '}8', LOWER(rt0.c1)))==((((rt0.c2) NOTNULL), UPPER(rt0.c2), ((rt0.c1)>>(rt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1, rt0.c0 COLLATE NOCASE, (((vt0.c0, rt0.c0, rt0.c2))<=((rt0.c0, vt0.c0, rt0.c0)))))<=((rt0.c0, ((((rt0.c1)AND('1491422044')))AND(v0.c0)), CHAR(NULL)))) FULL OUTER JOIN v0 ON ABS(DISTINCT ((((((((rt0.c0)AND(v0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(0.19731189778457103))) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c1 ELSE NULL END IN ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), CASE WHEN rt0.c1 THEN NULL ELSE vt0.c0 END))  NULLS FIRST, ((((LIKE(v0.c0, rt0.c0))AND(NULL)))OR(CAST(rt0.c2 AS NUMERIC))) ASC  NULLS FIRST, ((((rt0.c2)LIKE(rt0.c1)))GLOB(UNICODE(v0.c0))) DESC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((v0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((v0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((v0.c0) IS TRUE));
SELECT ALL * FROM vt0, rt0 WHERE ((rt0.c2 COLLATE BINARY IN (((rt0.c1) NOT NULL)))) ORDER BY CASE WHEN ((rt0.c0)>>(vt0.c0)) THEN ((vt0.c0) IS TRUE) END DESC;
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE BINARY IN (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN ((rt0.c0)>>(vt0.c0)) THEN ((vt0.c0) IS TRUE) END DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((rt0.c2 COLLATE BINARY IN (((rt0.c1) NOT NULL)))) ORDER BY CASE WHEN ((rt0.c0)>>(vt0.c0)) THEN ((vt0.c0) IS TRUE) END DESC;
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE BINARY IN (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN ((rt0.c0)>>(vt0.c0)) THEN ((vt0.c0) IS TRUE) END DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((rt0.c2 COLLATE BINARY IN (((rt0.c1) NOT NULL)))) ORDER BY CASE WHEN ((rt0.c0)>>(vt0.c0)) THEN ((vt0.c0) IS TRUE) END DESC;
SELECT * FROM v0 CROSS JOIN rt0 ON (((~ (rt0.c2))) NOT NULL) WHERE (((((rt0.c1)&(v0.c0)))IS NOT(((v0.c0)*(rt0.c0))))) ORDER BY CASE ((((((((v0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(0.22929804552673094)))AND(v0.c0))  WHEN (((rt0.c1))==((rt0.c0))) THEN rt0.c2 COLLATE NOCASE WHEN rt0.c0 COLLATE RTRIM THEN CASE rt0.c0  WHEN 'd!' THEN NULL ELSE rt0.c0 END WHEN x'' THEN ((rt0.c0)+(rt0.c1)) WHEN (((rt0.c1))>=((rt0.c0))) THEN CASE rt0.c0  WHEN x'' THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END WHEN MAX(rt0.c2, rt0.c2, rt0.c0, rt0.c0) THEN (((rt0.c0, rt0.c2, '194438167'))>=((rt0.c0, rt0.c2, x'019b'))) ELSE 0.3421859857484909 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)&(v0.c0)))IS NOT(((v0.c0)*(rt0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (((~ (rt0.c2))) NOT NULL) ORDER BY CASE ((((((((v0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(0.22929804552673094)))AND(v0.c0))  WHEN (((rt0.c1))==((rt0.c0))) THEN rt0.c2 COLLATE NOCASE WHEN rt0.c0 COLLATE RTRIM THEN CASE rt0.c0  WHEN 'd!' THEN NULL ELSE rt0.c0 END WHEN x'' THEN ((rt0.c0)+(rt0.c1)) WHEN (((rt0.c1))>=((rt0.c0))) THEN CASE rt0.c0  WHEN x'' THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END WHEN MAX(rt0.c2, rt0.c2, rt0.c0, rt0.c0) THEN (((rt0.c0, rt0.c2, '194438167'))>=((rt0.c0, rt0.c2, x'019b'))) ELSE 0.3421859857484909 END  NULLS FIRST);
SELECT * FROM v0 CROSS JOIN rt0 ON (((~ (rt0.c2))) NOT NULL) WHERE (((((rt0.c1)&(v0.c0)))IS NOT(((v0.c0)*(rt0.c0))))) ORDER BY CASE ((((((((v0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(0.22929804552673094)))AND(v0.c0))  WHEN (((rt0.c1))==((rt0.c0))) THEN rt0.c2 COLLATE NOCASE WHEN rt0.c0 COLLATE RTRIM THEN CASE rt0.c0  WHEN 'd!' THEN NULL ELSE rt0.c0 END WHEN x'' THEN ((rt0.c0)+(rt0.c1)) WHEN (((rt0.c1))>=((rt0.c0))) THEN CASE rt0.c0  WHEN x'' THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END WHEN MAX(rt0.c2, rt0.c2, rt0.c0, rt0.c0) THEN (((rt0.c0, rt0.c2, '194438167'))>=((rt0.c0, rt0.c2, x'019b'))) ELSE 0.3421859857484909 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)&(v0.c0)))IS NOT(((v0.c0)*(rt0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (((~ (rt0.c2))) NOT NULL) ORDER BY CASE ((((((((v0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(0.22929804552673094)))AND(v0.c0))  WHEN (((rt0.c1))==((rt0.c0))) THEN rt0.c2 COLLATE NOCASE WHEN rt0.c0 COLLATE RTRIM THEN CASE rt0.c0  WHEN 'd!' THEN NULL ELSE rt0.c0 END WHEN x'' THEN ((rt0.c0)+(rt0.c1)) WHEN (((rt0.c1))>=((rt0.c0))) THEN CASE rt0.c0  WHEN x'' THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END WHEN MAX(rt0.c2, rt0.c2, rt0.c0, rt0.c0) THEN (((rt0.c0, rt0.c2, '194438167'))>=((rt0.c0, rt0.c2, x'019b'))) ELSE 0.3421859857484909 END  NULLS FIRST);
SELECT * FROM v0 CROSS JOIN rt0 ON (((~ (rt0.c2))) NOT NULL) WHERE (((((rt0.c1)&(v0.c0)))IS NOT(((v0.c0)*(rt0.c0))))) ORDER BY CASE ((((((((v0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(0.22929804552673094)))AND(v0.c0))  WHEN (((rt0.c1))==((rt0.c0))) THEN rt0.c2 COLLATE NOCASE WHEN rt0.c0 COLLATE RTRIM THEN CASE rt0.c0  WHEN 'd!' THEN NULL ELSE rt0.c0 END WHEN x'' THEN ((rt0.c0)+(rt0.c1)) WHEN (((rt0.c1))>=((rt0.c0))) THEN CASE rt0.c0  WHEN x'' THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END WHEN MAX(rt0.c2, rt0.c2, rt0.c0, rt0.c0) THEN (((rt0.c0, rt0.c2, '194438167'))>=((rt0.c0, rt0.c2, x'019b'))) ELSE 0.3421859857484909 END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0)<<(vt0.c0)) COLLATE NOCASE) ORDER BY (((vt0.c0)*(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<<(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0)*(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0)<<(vt0.c0)) COLLATE NOCASE) ORDER BY (((vt0.c0)*(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<<(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0)*(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0)<<(vt0.c0)) COLLATE NOCASE) ORDER BY (((vt0.c0)*(vt0.c0)) IN ());
SELECT * FROM rt0, vt0 WHERE (CASE (('jQ') IS FALSE)  WHEN (~ (rt0.c0)) THEN ((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(NULL)) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN x'' WHEN CASE WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN NULL THEN vt0.c0 END END) ORDER BY LIKELY(((((vt0.c0)OR(rt0.c0)))OR(rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (('jQ') IS FALSE)  WHEN (~ (rt0.c0)) THEN ((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(NULL)) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN x'' WHEN CASE WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN NULL THEN vt0.c0 END END) IS TRUE)  as count FROM rt0, vt0 ORDER BY LIKELY(((((vt0.c0)OR(rt0.c0)))OR(rt0.c2)))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CASE (('jQ') IS FALSE)  WHEN (~ (rt0.c0)) THEN ((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(NULL)) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN x'' WHEN CASE WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN NULL THEN vt0.c0 END END) ORDER BY LIKELY(((((vt0.c0)OR(rt0.c0)))OR(rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (('jQ') IS FALSE)  WHEN (~ (rt0.c0)) THEN ((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(NULL)) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN x'' WHEN CASE WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN NULL THEN vt0.c0 END END) IS TRUE)  as count FROM rt0, vt0 ORDER BY LIKELY(((((vt0.c0)OR(rt0.c0)))OR(rt0.c2)))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CASE (('jQ') IS FALSE)  WHEN (~ (rt0.c0)) THEN ((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(NULL)) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN x'' WHEN CASE WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN NULL THEN vt0.c0 END END) ORDER BY LIKELY(((((vt0.c0)OR(rt0.c0)))OR(rt0.c2)))  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0) IS FALSE))|(((vt0.c0)*(vt0.c0)))) WHERE (2136593841) ORDER BY TRIM(v0.c0) COLLATE RTRIM ASC  NULLS FIRST, (((vt0.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((v0.c0)))  NULLS FIRST, (((vt0.c0) IS TRUE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((2136593841) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0) IS FALSE))|(((vt0.c0)*(vt0.c0)))) ORDER BY TRIM(v0.c0) COLLATE RTRIM ASC  NULLS FIRST, (((vt0.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((v0.c0)))  NULLS FIRST, (((vt0.c0) IS TRUE) IN ()) DESC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0) IS FALSE))|(((vt0.c0)*(vt0.c0)))) WHERE (2136593841) ORDER BY TRIM(v0.c0) COLLATE RTRIM ASC  NULLS FIRST, (((vt0.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((v0.c0)))  NULLS FIRST, (((vt0.c0) IS TRUE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((2136593841) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0) IS FALSE))|(((vt0.c0)*(vt0.c0)))) ORDER BY TRIM(v0.c0) COLLATE RTRIM ASC  NULLS FIRST, (((vt0.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((v0.c0)))  NULLS FIRST, (((vt0.c0) IS TRUE) IN ()) DESC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0) IS FALSE))|(((vt0.c0)*(vt0.c0)))) WHERE (2136593841) ORDER BY TRIM(v0.c0) COLLATE RTRIM ASC  NULLS FIRST, (((vt0.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((v0.c0)))  NULLS FIRST, (((vt0.c0) IS TRUE) IN ()) DESC;
SELECT * FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c1 THEN (rt0.c2 IN (x'')) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN rt0.c1 THEN (rt0.c2 IN (x'')) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c1 THEN (rt0.c2 IN (x'')) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN rt0.c1 THEN (rt0.c2 IN (x'')) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c1 THEN (rt0.c2 IN (x'')) END);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0 COLLATE NOCASE))>((((((v0.c0)OR(0.17548151760783903)))OR(vt0.c0)))))) ORDER BY ((((((v0.c0) IS FALSE))OR(json_array_length(vt0.c0))))AND(((vt0.c0)+(NULL)))) DESC, '2145187675', v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE NOCASE))>((((((v0.c0)OR(0.17548151760783903)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((v0.c0) IS FALSE))OR(json_array_length(vt0.c0))))AND(((vt0.c0)+(NULL)))) DESC, '2145187675', v0.c0 DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0 COLLATE NOCASE))>((((((v0.c0)OR(0.17548151760783903)))OR(vt0.c0)))))) ORDER BY ((((((v0.c0) IS FALSE))OR(json_array_length(vt0.c0))))AND(((vt0.c0)+(NULL)))) DESC, '2145187675', v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE NOCASE))>((((((v0.c0)OR(0.17548151760783903)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((v0.c0) IS FALSE))OR(json_array_length(vt0.c0))))AND(((vt0.c0)+(NULL)))) DESC, '2145187675', v0.c0 DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0 COLLATE NOCASE))>((((((v0.c0)OR(0.17548151760783903)))OR(vt0.c0)))))) ORDER BY ((((((v0.c0) IS FALSE))OR(json_array_length(vt0.c0))))AND(((vt0.c0)+(NULL)))) DESC, '2145187675', v0.c0 DESC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE json_array_length(v0.c0, vt0.c0)  WHEN JULIANDAY(vt0.c0, v0.c0, vt0.c0) THEN ((vt0.c0)<<(v0.c0)) WHEN CASE vt0.c0  WHEN NULL THEN vt0.c0 END THEN v0.c0 COLLATE RTRIM WHEN ((v0.c0) IS TRUE) THEN CASE vt0.c0  WHEN x'' THEN v0.c0 ELSE NULL END END) ORDER BY ((((v0.c0) IS FALSE))!=(((((vt0.c0)AND(vt0.c0)))OR('1313787014')))) ASC, ((vt0.c0)>(((vt0.c0) BETWEEN (vt0.c0) AND ('yYusi0xEi')))) ASC  NULLS LAST, ((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST, (- (ABS(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE json_array_length(v0.c0, vt0.c0)  WHEN JULIANDAY(vt0.c0, v0.c0, vt0.c0) THEN ((vt0.c0)<<(v0.c0)) WHEN CASE vt0.c0  WHEN NULL THEN vt0.c0 END THEN v0.c0 COLLATE RTRIM WHEN ((v0.c0) IS TRUE) THEN CASE vt0.c0  WHEN x'' THEN v0.c0 ELSE NULL END END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) IS FALSE))<>(((((vt0.c0)AND(vt0.c0)))OR('1313787014')))) ASC, ((vt0.c0)>(((vt0.c0) BETWEEN (vt0.c0) AND ('yYusi0xEi')))) ASC  NULLS LAST, ((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST, (- (ABS(DISTINCT vt0.c0))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE json_array_length(v0.c0, vt0.c0)  WHEN JULIANDAY(vt0.c0, v0.c0, vt0.c0) THEN ((vt0.c0)<<(v0.c0)) WHEN CASE vt0.c0  WHEN NULL THEN vt0.c0 END THEN v0.c0 COLLATE RTRIM WHEN ((v0.c0) IS TRUE) THEN CASE vt0.c0  WHEN x'' THEN v0.c0 ELSE NULL END END) ORDER BY ((((v0.c0) IS FALSE))!=(((((vt0.c0)AND(vt0.c0)))OR('1313787014')))) ASC, ((vt0.c0)>(((vt0.c0) BETWEEN (vt0.c0) AND ('yYusi0xEi')))) ASC  NULLS LAST, ((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST, (- (ABS(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE json_array_length(v0.c0, vt0.c0)  WHEN JULIANDAY(vt0.c0, v0.c0, vt0.c0) THEN ((vt0.c0)<<(v0.c0)) WHEN CASE vt0.c0  WHEN NULL THEN vt0.c0 END THEN v0.c0 COLLATE RTRIM WHEN ((v0.c0) IS TRUE) THEN CASE vt0.c0  WHEN x'' THEN v0.c0 ELSE NULL END END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) IS FALSE))<>(((((vt0.c0)AND(vt0.c0)))OR('1313787014')))) ASC, ((vt0.c0)>(((vt0.c0) BETWEEN (vt0.c0) AND ('yYusi0xEi')))) ASC  NULLS LAST, ((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST, (- (ABS(DISTINCT vt0.c0))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE json_array_length(v0.c0, vt0.c0)  WHEN JULIANDAY(vt0.c0, v0.c0, vt0.c0) THEN ((vt0.c0)<<(v0.c0)) WHEN CASE vt0.c0  WHEN NULL THEN vt0.c0 END THEN v0.c0 COLLATE RTRIM WHEN ((v0.c0) IS TRUE) THEN CASE vt0.c0  WHEN x'' THEN v0.c0 ELSE NULL END END) ORDER BY ((((v0.c0) IS FALSE))!=(((((vt0.c0)AND(vt0.c0)))OR('1313787014')))) ASC, ((vt0.c0)>(((vt0.c0) BETWEEN (vt0.c0) AND ('yYusi0xEi')))) ASC  NULLS LAST, ((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST, (- (ABS(DISTINCT vt0.c0)));
SELECT * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL);
SELECT * FROM rt0 WHERE (NULL) ORDER BY CAST((~ (rt0.c1)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY CAST((~ (rt0.c1)) AS INTEGER) ASC);
SELECT * FROM rt0 WHERE (NULL) ORDER BY CAST((~ (rt0.c1)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY CAST((~ (rt0.c1)) AS INTEGER) ASC);
SELECT * FROM rt0 WHERE (NULL) ORDER BY CAST((~ (rt0.c1)) AS INTEGER) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((((((x'')IS NOT(rt0.c2)))OR(((rt0.c0)<<(rt0.c0)))))AND(CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((x'')IS NOT(rt0.c2)))OR(((rt0.c0)<<(rt0.c0)))))AND(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((x'')IS NOT(rt0.c2)))OR(((rt0.c0)<<(rt0.c0)))))AND(CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((x'')IS NOT(rt0.c2)))OR(((rt0.c0)<<(rt0.c0)))))AND(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((x'')IS NOT(rt0.c2)))OR(((rt0.c0)<<(rt0.c0)))))AND(CAST(rt0.c1 AS TEXT))));
SELECT * FROM vt0, v0, rt0 WHERE ((((~ (rt0.c1))) NOT NULL)) ORDER BY -190104187 ASC  NULLS LAST, ((((((v0.c0) ISNULL))OR(CAST(v0.c0 AS BLOB))))AND(CASE WHEN vt0.c0 THEN rt0.c1 ELSE v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY -190104187 ASC  NULLS LAST, ((((((v0.c0) ISNULL))OR(CAST(v0.c0 AS BLOB))))AND(CASE WHEN vt0.c0 THEN rt0.c1 ELSE v0.c0 END))  NULLS LAST);
SELECT * FROM vt0, v0, rt0 WHERE ((((~ (rt0.c1))) NOT NULL)) ORDER BY -190104187 ASC  NULLS LAST, ((((((v0.c0) ISNULL))OR(CAST(v0.c0 AS BLOB))))AND(CASE WHEN vt0.c0 THEN rt0.c1 ELSE v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY -190104187 ASC  NULLS LAST, ((((((v0.c0) ISNULL))OR(CAST(v0.c0 AS BLOB))))AND(CASE WHEN vt0.c0 THEN rt0.c1 ELSE v0.c0 END))  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CAST(((NULL)/(rt0.c1)) AS NUMERIC) WHERE (((CAST(rt0.c0 AS REAL))%((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS REAL))%((~ (vt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(((NULL)/(rt0.c1)) AS NUMERIC));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CAST(((NULL)/(rt0.c1)) AS NUMERIC) WHERE (((CAST(rt0.c0 AS REAL))%((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS REAL))%((~ (vt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(((NULL)/(rt0.c1)) AS NUMERIC));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CAST(((NULL)/(rt0.c1)) AS NUMERIC) WHERE (((CAST(rt0.c0 AS REAL))%((~ (vt0.c0)))));
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0) IS FALSE))>=((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))>=((NOT (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0) IS FALSE))>=((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))>=((NOT (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0) IS FALSE))>=((NOT (rt0.c2)))));
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN (v0.c0)))<<(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c0)))<<(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN (v0.c0)))<<(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c0)))<<(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN (v0.c0)))<<(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c0) IS TRUE))>(SUBSTR(rt0.c2, rt0.c0))) WHERE (((((rt0.c1) ISNULL)) BETWEEN (((rt0.c0) IS FALSE)) AND (CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL)) BETWEEN (((rt0.c0) IS FALSE)) AND (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c0) IS TRUE))>(SUBSTR(rt0.c2, rt0.c0))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c0) IS TRUE))>(SUBSTR(rt0.c2, rt0.c0))) WHERE (((((rt0.c1) ISNULL)) BETWEEN (((rt0.c0) IS FALSE)) AND (CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL)) BETWEEN (((rt0.c0) IS FALSE)) AND (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c0) IS TRUE))>(SUBSTR(rt0.c2, rt0.c0))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c0) IS TRUE))>(SUBSTR(rt0.c2, rt0.c0))) WHERE (((((rt0.c1) ISNULL)) BETWEEN (((rt0.c0) IS FALSE)) AND (CAST(v0.c0 AS REAL))));
SELECT * FROM rt0 WHERE (((((rt0.c2) IS FALSE))<<('FALSE'))) ORDER BY ((((rt0.c1)!=(rt0.c0)))<>(UPPER(rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE))<<('FALSE'))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<>(rt0.c0)))<>(UPPER(rt0.c2))) ASC);
SELECT * FROM rt0 WHERE (((((rt0.c2) IS FALSE))<<('FALSE'))) ORDER BY ((((rt0.c1)!=(rt0.c0)))<>(UPPER(rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE))<<('FALSE'))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<>(rt0.c0)))<>(UPPER(rt0.c2))) ASC);
SELECT * FROM rt0 WHERE (((((rt0.c2) IS FALSE))<<('FALSE'))) ORDER BY ((((rt0.c1)!=(rt0.c0)))<>(UPPER(rt0.c2))) ASC;
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ORDER BY (+ ((~ (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (+ ((~ (v0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ORDER BY (+ ((~ (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (+ ((~ (v0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ORDER BY (+ ((~ (v0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((v0.c0)>>('-687911321')) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)>>('-687911321')) AS REAL)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((v0.c0)>>('-687911321')) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)>>('-687911321')) AS REAL)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((v0.c0)>>('-687911321')) AS REAL));
SELECT ALL COUNT(*) FROM v0 WHERE ((JULIANDAY(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0) IN (TRIM(DISTINCT v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT (((JULIANDAY(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0) IN (TRIM(DISTINCT v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((JULIANDAY(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0) IN (TRIM(DISTINCT v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT (((JULIANDAY(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0) IN (TRIM(DISTINCT v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((JULIANDAY(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0) IN (TRIM(DISTINCT v0.c0, v0.c0))));
SELECT * FROM rt0 WHERE ((~ ('998982777')));
SELECT SUM(count) FROM (SELECT (((~ ('998982777'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ ('998982777')));
SELECT SUM(count) FROM (SELECT (((~ ('998982777'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ ('998982777')));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))&(((rt0.c1)/(rt0.c1)))) FULL OUTER JOIN rt0 ON ((((((rt0.c2) BETWEEN (vt0.c0) AND (v0.c0)))AND(CASE WHEN rt0.c0 THEN vt0.c0 END)))AND(NULL)) WHERE (((v0.c0) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c2)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c2)<=(rt0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))&(((rt0.c1)/(rt0.c1)))) FULL OUTER JOIN rt0 ON ((((((rt0.c2) BETWEEN (vt0.c0) AND (v0.c0)))AND(CASE WHEN rt0.c0 THEN vt0.c0 END)))AND(NULL)));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))&(((rt0.c1)/(rt0.c1)))) FULL OUTER JOIN rt0 ON ((((((rt0.c2) BETWEEN (vt0.c0) AND (v0.c0)))AND(CASE WHEN rt0.c0 THEN vt0.c0 END)))AND(NULL)) WHERE (((v0.c0) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c2)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c2)<=(rt0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))&(((rt0.c1)/(rt0.c1)))) FULL OUTER JOIN rt0 ON ((((((rt0.c2) BETWEEN (vt0.c0) AND (v0.c0)))AND(CASE WHEN rt0.c0 THEN vt0.c0 END)))AND(NULL)));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (x'') AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (x'') AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (x'') AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (x'') AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (x'') AND (vt0.c0)) COLLATE NOCASE);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c1) AND (x''))) BETWEEN (rt0.c1) AND (CAST(NULL AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (x''))) BETWEEN (rt0.c1) AND (CAST(NULL AS TEXT)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c1) AND (x''))) BETWEEN (rt0.c1) AND (CAST(NULL AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (x''))) BETWEEN (rt0.c1) AND (CAST(NULL AS TEXT)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c1) AND (x''))) BETWEEN (rt0.c1) AND (CAST(NULL AS TEXT))));
SELECT ALL * FROM v0 WHERE (x'') ORDER BY ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE, ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))%(CAST(v0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE, ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))%(CAST(v0.c0 AS INTEGER))) ASC);
SELECT ALL * FROM v0 WHERE (x'') ORDER BY ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE, ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))%(CAST(v0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE, ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))%(CAST(v0.c0 AS INTEGER))) ASC);
SELECT ALL * FROM v0 WHERE (x'') ORDER BY ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE, ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))%(CAST(v0.c0 AS INTEGER))) ASC;
SELECT * FROM vt0, rt0 WHERE (((rt0.c1)*(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)*(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c1)*(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)*(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c1)*(rt0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((0Xfffffffff1c24f9d)AND((rt0.c2 IN ()))))OR(((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((0xfffffffff1c24f9d)AND((rt0.c2 IN ()))))OR(((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((0Xfffffffff1c24f9d)AND((rt0.c2 IN ()))))OR(((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((0xfffffffff1c24f9d)AND((rt0.c2 IN ()))))OR(((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((0Xfffffffff1c24f9d)AND((rt0.c2 IN ()))))OR(((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))) WHERE (rt0.c0);
SELECT * FROM v0, rt0, vt0 WHERE (((CASE ''  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 END)IS(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((CASE ''  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 END)IS(rt0.c1))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((CASE ''  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 END)IS(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((CASE ''  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 END)IS(rt0.c1))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((CASE ''  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 END)IS(rt0.c1)));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)), vt0.c0 COLLATE RTRIM, 0X246b8684))<(((((rt0.c0, x'', '-473059084')) NOT BETWEEN ((v0.c0, v0.c0, rt0.c1)) AND ((rt0.c0, v0.c0, rt0.c1))), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)>>(rt0.c2)))))) ORDER BY (CASE rt0.c1  WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN rt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT (((((((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)), vt0.c0 COLLATE RTRIM, 0x246b8684))<(((((rt0.c0, x'', '-473059084')) NOT BETWEEN ((v0.c0, v0.c0, rt0.c1)) AND ((rt0.c0, v0.c0, rt0.c1))), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)>>(rt0.c2)))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (CASE rt0.c1  WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN rt0.c0 END IN ()));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)), vt0.c0 COLLATE RTRIM, 0X246b8684))<(((((rt0.c0, x'', '-473059084')) NOT BETWEEN ((v0.c0, v0.c0, rt0.c1)) AND ((rt0.c0, v0.c0, rt0.c1))), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)>>(rt0.c2)))))) ORDER BY (CASE rt0.c1  WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN rt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT (((((((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)), vt0.c0 COLLATE RTRIM, 0x246b8684))<(((((rt0.c0, x'', '-473059084')) NOT BETWEEN ((v0.c0, v0.c0, rt0.c1)) AND ((rt0.c0, v0.c0, rt0.c1))), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)>>(rt0.c2)))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (CASE rt0.c1  WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN rt0.c0 END IN ()));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)), vt0.c0 COLLATE RTRIM, 0X246b8684))<(((((rt0.c0, x'', '-473059084')) NOT BETWEEN ((v0.c0, v0.c0, rt0.c1)) AND ((rt0.c0, v0.c0, rt0.c1))), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)>>(rt0.c2)))))) ORDER BY (CASE rt0.c1  WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN rt0.c0 END IN ());
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c0)OR('-1e500')))OR(x'')))<('혧	)')));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR('-1e500')))OR(x'')))<('혧	)'))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c0)OR('-1e500')))OR(x'')))<('혧	)')));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR('-1e500')))OR(x'')))<('혧	)'))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c0)OR('-1e500')))OR(x'')))<('혧	)')));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((((vt0.c0)AND(x'')))AND(rt0.c1)))||((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(x'')))AND(rt0.c1)))||((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((((vt0.c0)AND(x'')))AND(rt0.c1)))||((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(x'')))AND(rt0.c1)))||((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((((vt0.c0)AND(x'')))AND(rt0.c1)))||((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0)!=(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)!=(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0)!=(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)!=(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0)!=(rt0.c0)) COLLATE NOCASE);
SELECT * FROM rt0, vt0, v0 WHERE (rt0.c1) ORDER BY (NOT (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (NOT (vt0.c0))  NULLS LAST);
SELECT * FROM rt0, vt0, v0 WHERE (rt0.c1) ORDER BY (NOT (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (NOT (vt0.c0))  NULLS LAST);
SELECT * FROM rt0, vt0, v0 WHERE (rt0.c1) ORDER BY (NOT (vt0.c0))  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (((CAST(rt0.c2 AS TEXT)) BETWEEN ((+ (v0.c0))) AND (((rt0.c1)%(v0.c0))))) ORDER BY '鈕r%' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS TEXT)) BETWEEN ((+ (v0.c0))) AND (((rt0.c1)%(v0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY '鈕r%' ASC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (((CAST(rt0.c2 AS TEXT)) BETWEEN ((+ (v0.c0))) AND (((rt0.c1)%(v0.c0))))) ORDER BY '鈕r%' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS TEXT)) BETWEEN ((+ (v0.c0))) AND (((rt0.c1)%(v0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY '鈕r%' ASC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (((CAST(rt0.c2 AS TEXT)) BETWEEN ((+ (v0.c0))) AND (((rt0.c1)%(v0.c0))))) ORDER BY '鈕r%' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((0.6606601040051207 IN (rt0.c0))) NOT NULL)) ORDER BY ((((vt0.c0)OR(x'397d')))AND(CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((((0.6606601040051207 IN (rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((vt0.c0)OR(x'397d')))AND(CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((0.6606601040051207 IN (rt0.c0))) NOT NULL)) ORDER BY ((((vt0.c0)OR(x'397d')))AND(CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((((0.6606601040051207 IN (rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((vt0.c0)OR(x'397d')))AND(CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((0.6606601040051207 IN (rt0.c0))) NOT NULL)) ORDER BY ((((vt0.c0)OR(x'397d')))AND(CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)%(((rt0.c0)<(0.18630147269642605))))) ORDER BY ((((((rt0.c2)OR(rt0.c2)))OR((rt0.c2 IN (rt0.c1, rt0.c2)))))OR(((rt0.c0)GLOB(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE)%(((rt0.c0)<(0.18630147269642605))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)OR(rt0.c2)))OR((rt0.c2 IN (rt0.c1, rt0.c2)))))OR(((rt0.c0)GLOB(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)%(((rt0.c0)<(0.18630147269642605))))) ORDER BY ((((((rt0.c2)OR(rt0.c2)))OR((rt0.c2 IN (rt0.c1, rt0.c2)))))OR(((rt0.c0)GLOB(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE)%(((rt0.c0)<(0.18630147269642605))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)OR(rt0.c2)))OR((rt0.c2 IN (rt0.c1, rt0.c2)))))OR(((rt0.c0)GLOB(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)%(((rt0.c0)<(0.18630147269642605))))) ORDER BY ((((((rt0.c2)OR(rt0.c2)))OR((rt0.c2 IN (rt0.c1, rt0.c2)))))OR(((rt0.c0)GLOB(rt0.c1))))  NULLS FIRST;
SELECT * FROM v0, rt0, vt0 WHERE (LOWER(LIKELY(rt0.c0))) ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(LIKELY(rt0.c0))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0, vt0 ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) ASC  NULLS LAST);
SELECT * FROM v0, rt0, vt0 WHERE (LOWER(LIKELY(rt0.c0))) ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(LIKELY(rt0.c0))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0, vt0 ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) ASC  NULLS LAST);
SELECT * FROM v0, rt0, vt0 WHERE (LOWER(LIKELY(rt0.c0))) ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((vt0.c0 IN (rt0.c1, rt0.c0)) AS INTEGER)) ORDER BY ((rt0.c2 IN ()) IN (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN (rt0.c1, rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c2 IN ()) IN (vt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((vt0.c0 IN (rt0.c1, rt0.c0)) AS INTEGER)) ORDER BY ((rt0.c2 IN ()) IN (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN (rt0.c1, rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c2 IN ()) IN (vt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((vt0.c0 IN (rt0.c1, rt0.c0)) AS INTEGER)) ORDER BY ((rt0.c2 IN ()) IN (vt0.c0))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (json_array(((vt0.c0)+('')), ((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)), ((rt0.c1) NOT NULL), rt0.c2)) ORDER BY ((((rt0.c0)>(rt0.c2)))-(((((((((vt0.c0)AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_array(((vt0.c0)+('')), ((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)), ((rt0.c1) NOT NULL), rt0.c2)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0)>(rt0.c2)))-(((((((((vt0.c0)AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (json_array(((vt0.c0)+('')), ((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)), ((rt0.c1) NOT NULL), rt0.c2)) ORDER BY ((((rt0.c0)>(rt0.c2)))-(((((((((vt0.c0)AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_array(((vt0.c0)+('')), ((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)), ((rt0.c1) NOT NULL), rt0.c2)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0)>(rt0.c2)))-(((((((((vt0.c0)AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (json_array(((vt0.c0)+('')), ((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)), ((rt0.c1) NOT NULL), rt0.c2)) ORDER BY ((((rt0.c0)>(rt0.c2)))-(((((((((vt0.c0)AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 NOT INDEXED WHERE ((((rt0.c0, '0.8177042966562729', NULL, vt0.c0, rt0.c1)) NOT BETWEEN (((rt0.c1 IN ()), ((vt0.c0)=(vt0.c0)), CASE x'f273a898'  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, (NOT (rt0.c1)), ((rt0.c1) ISNULL))) AND ((LAST_INSERT_ROWID(), ((rt0.c1) NOT NULL), TYPEOF(DISTINCT rt0.c1), rt0.c0, x'5a6e1847')))) ORDER BY ((UPPER(rt0.c1)) BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(rt0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c0 END))  NULLS FIRST, (((((((((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((vt0.c0, vt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0))))OR(((rt0.c0)GLOB(rt0.c1)))))OR((vt0.c0 IN (vt0.c0, rt0.c2)))))AND(rt0.c2)))OR((- (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, '0.8177042966562729', NULL, vt0.c0, rt0.c1)) NOT BETWEEN (((rt0.c1 IN ()), ((vt0.c0)==(vt0.c0)), CASE x'f273a898'  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, (NOT (rt0.c1)), ((rt0.c1) ISNULL))) AND ((LAST_INSERT_ROWID(), ((rt0.c1) NOT NULL), TYPEOF(DISTINCT rt0.c1), rt0.c0, x'5a6e1847')))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((UPPER(rt0.c1)) BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(rt0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c0 END))  NULLS FIRST, (((((((((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((vt0.c0, vt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0))))OR(((rt0.c0)GLOB(rt0.c1)))))OR((vt0.c0 IN (vt0.c0, rt0.c2)))))AND(rt0.c2)))OR((- (rt0.c1)))) DESC);
SELECT ALL * FROM vt0, rt0 NOT INDEXED WHERE ((((rt0.c0, '0.8177042966562729', NULL, vt0.c0, rt0.c1)) NOT BETWEEN (((rt0.c1 IN ()), ((vt0.c0)=(vt0.c0)), CASE x'f273a898'  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, (NOT (rt0.c1)), ((rt0.c1) ISNULL))) AND ((LAST_INSERT_ROWID(), ((rt0.c1) NOT NULL), TYPEOF(DISTINCT rt0.c1), rt0.c0, x'5a6e1847')))) ORDER BY ((UPPER(rt0.c1)) BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(rt0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c0 END))  NULLS FIRST, (((((((((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((vt0.c0, vt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0))))OR(((rt0.c0)GLOB(rt0.c1)))))OR((vt0.c0 IN (vt0.c0, rt0.c2)))))AND(rt0.c2)))OR((- (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, '0.8177042966562729', NULL, vt0.c0, rt0.c1)) NOT BETWEEN (((rt0.c1 IN ()), ((vt0.c0)==(vt0.c0)), CASE x'f273a898'  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, (NOT (rt0.c1)), ((rt0.c1) ISNULL))) AND ((LAST_INSERT_ROWID(), ((rt0.c1) NOT NULL), TYPEOF(DISTINCT rt0.c1), rt0.c0, x'5a6e1847')))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((UPPER(rt0.c1)) BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(rt0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c0 END))  NULLS FIRST, (((((((((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((vt0.c0, vt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0))))OR(((rt0.c0)GLOB(rt0.c1)))))OR((vt0.c0 IN (vt0.c0, rt0.c2)))))AND(rt0.c2)))OR((- (rt0.c1)))) DESC);
SELECT ALL * FROM vt0, rt0 NOT INDEXED WHERE ((((rt0.c0, '0.8177042966562729', NULL, vt0.c0, rt0.c1)) NOT BETWEEN (((rt0.c1 IN ()), ((vt0.c0)=(vt0.c0)), CASE x'f273a898'  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, (NOT (rt0.c1)), ((rt0.c1) ISNULL))) AND ((LAST_INSERT_ROWID(), ((rt0.c1) NOT NULL), TYPEOF(DISTINCT rt0.c1), rt0.c0, x'5a6e1847')))) ORDER BY ((UPPER(rt0.c1)) BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(rt0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c0 END))  NULLS FIRST, (((((((((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((vt0.c0, vt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0))))OR(((rt0.c0)GLOB(rt0.c1)))))OR((vt0.c0 IN (vt0.c0, rt0.c2)))))AND(rt0.c2)))OR((- (rt0.c1)))) DESC;
SELECT * FROM vt0, v0 WHERE ((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END IN ((NOT (vt0.c0)), vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END IN ((NOT (vt0.c0)), vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END IN ((NOT (vt0.c0)), vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END IN ((NOT (vt0.c0)), vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END IN ((NOT (vt0.c0)), vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN vt0.c0 COLLATE RTRIM THEN ((x'')>(vt0.c0)) END) ORDER BY ((((((vt0.c0) NOT NULL))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)<=(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE RTRIM  WHEN vt0.c0 COLLATE RTRIM THEN ((x'')>(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT NULL))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)<=(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN vt0.c0 COLLATE RTRIM THEN ((x'')>(vt0.c0)) END) ORDER BY ((((((vt0.c0) NOT NULL))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)<=(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE RTRIM  WHEN vt0.c0 COLLATE RTRIM THEN ((x'')>(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT NULL))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)<=(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN vt0.c0 COLLATE RTRIM THEN ((x'')>(vt0.c0)) END) ORDER BY ((((((vt0.c0) NOT NULL))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)<=(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (UNLIKELY(((((rt0.c1)AND(rt0.c1)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((((rt0.c1)AND(rt0.c1)))AND(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (UNLIKELY(((((rt0.c1)AND(rt0.c1)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((((rt0.c1)AND(rt0.c1)))AND(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (UNLIKELY(((((rt0.c1)AND(rt0.c1)))AND(vt0.c0))));
SELECT * FROM v0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))AND(CAST(vt0.c0 AS REAL)))) ORDER BY CASE CASE WHEN 1.545766574E9 THEN vt0.c0 END  WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE ELSE (vt0.c0 IN ()) END ASC  NULLS FIRST, (((((((((((vt0.c0, v0.c0, vt0.c0))<((vt0.c0, vt0.c0, v0.c0))))AND(((vt0.c0)*('70903530')))))AND(((1.491422044E9) NOT BETWEEN (vt0.c0) AND (v0.c0)))))AND((v0.c0 IN ()))))AND(((v0.c0)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))AND(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE CASE WHEN 1.545766574E9 THEN vt0.c0 END  WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE ELSE (vt0.c0 IN ()) END ASC  NULLS FIRST, (((((((((((vt0.c0, v0.c0, vt0.c0))<((vt0.c0, vt0.c0, v0.c0))))AND(((vt0.c0)*('70903530')))))AND(((1.491422044E9) NOT BETWEEN (vt0.c0) AND (v0.c0)))))AND((v0.c0 IN ()))))AND(((v0.c0)>=(vt0.c0)))));
SELECT * FROM v0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))AND(CAST(vt0.c0 AS REAL)))) ORDER BY CASE CASE WHEN 1.545766574E9 THEN vt0.c0 END  WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE ELSE (vt0.c0 IN ()) END ASC  NULLS FIRST, (((((((((((vt0.c0, v0.c0, vt0.c0))<((vt0.c0, vt0.c0, v0.c0))))AND(((vt0.c0)*('70903530')))))AND(((1.491422044E9) NOT BETWEEN (vt0.c0) AND (v0.c0)))))AND((v0.c0 IN ()))))AND(((v0.c0)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))AND(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE CASE WHEN 1.545766574E9 THEN vt0.c0 END  WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE ELSE (vt0.c0 IN ()) END ASC  NULLS FIRST, (((((((((((vt0.c0, v0.c0, vt0.c0))<((vt0.c0, vt0.c0, v0.c0))))AND(((vt0.c0)*('70903530')))))AND(((1.491422044E9) NOT BETWEEN (vt0.c0) AND (v0.c0)))))AND((v0.c0 IN ()))))AND(((v0.c0)>=(vt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY ((((rt0.c2)IS NOT(vt0.c0))) BETWEEN ((('y}w^*') NOT NULL)) AND ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)IS NOT(vt0.c0))) BETWEEN ((('y}w^*') NOT NULL)) AND ((vt0.c0 IN ()))));
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY ((((rt0.c2)IS NOT(vt0.c0))) BETWEEN ((('y}w^*') NOT NULL)) AND ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)IS NOT(vt0.c0))) BETWEEN ((('y}w^*') NOT NULL)) AND ((vt0.c0 IN ()))));
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY ((((rt0.c2)IS NOT(vt0.c0))) BETWEEN ((('y}w^*') NOT NULL)) AND ((vt0.c0 IN ())));
SELECT * FROM v0, vt0, rt0 WHERE (((TRIM(DISTINCT NULL, rt0.c2))<(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT NULL, rt0.c2))<(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((TRIM(DISTINCT NULL, rt0.c2))<(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT NULL, rt0.c2))<(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((TRIM(DISTINCT NULL, rt0.c2))<(((vt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((((rt0.c1)OR('')))OR(rt0.c1))) BETWEEN (((rt0.c0)>(vt0.c0))) AND (((rt0.c2)==(rt0.c0)))) WHERE (CAST(CAST(vt0.c0 AS REAL) AS REAL)) ORDER BY '0.4756671111648787'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((((rt0.c1)OR('')))OR(rt0.c1))) BETWEEN (((rt0.c0)>(vt0.c0))) AND (((rt0.c2)==(rt0.c0)))) ORDER BY '0.4756671111648787'  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((((rt0.c1)OR('')))OR(rt0.c1))) BETWEEN (((rt0.c0)>(vt0.c0))) AND (((rt0.c2)==(rt0.c0)))) WHERE (CAST(CAST(vt0.c0 AS REAL) AS REAL)) ORDER BY '0.4756671111648787'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((((rt0.c1)OR('')))OR(rt0.c1))) BETWEEN (((rt0.c0)>(vt0.c0))) AND (((rt0.c2)==(rt0.c0)))) ORDER BY '0.4756671111648787'  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((((rt0.c1)OR('')))OR(rt0.c1))) BETWEEN (((rt0.c0)>(vt0.c0))) AND (((rt0.c2)==(rt0.c0)))) WHERE (CAST(CAST(vt0.c0 AS REAL) AS REAL)) ORDER BY '0.4756671111648787'  NULLS FIRST;
SELECT * FROM rt0 WHERE ('' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('' COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('' COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('' COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS REAL)) ORDER BY ((((rt0.c2)<=(NULL))) NOT NULL) DESC  NULLS LAST, ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(rt0.c2)))))OR(((((((((rt0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND('ng')))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((rt0.c2)<=(NULL))) NOT NULL) DESC  NULLS LAST, ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(rt0.c2)))))OR(((((((((rt0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND('ng')))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS REAL)) ORDER BY ((((rt0.c2)<=(NULL))) NOT NULL) DESC  NULLS LAST, ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(rt0.c2)))))OR(((((((((rt0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND('ng')))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((rt0.c2)<=(NULL))) NOT NULL) DESC  NULLS LAST, ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(rt0.c2)))))OR(((((((((rt0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND('ng')))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS REAL)) ORDER BY ((((rt0.c2)<=(NULL))) NOT NULL) DESC  NULLS LAST, ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(rt0.c2)))))OR(((((((((rt0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND('ng')))) DESC;
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((rt0.c0)>>(rt0.c0))) NOTNULL)) ORDER BY ((((0.0749193928443126)OR(vt0.c0)))LIKE(((rt0.c1)!=('-1556909032')))) DESC, ((((v0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, rt0.c0, vt0.c0))) IN (CASE WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END, ((rt0.c1) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>>(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((0.0749193928443126)OR(vt0.c0)))LIKE(((rt0.c1)!=('-1556909032')))) DESC, ((((v0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, rt0.c0, vt0.c0))) IN (CASE WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END, ((rt0.c1) NOTNULL))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((rt0.c0)>>(rt0.c0))) NOTNULL)) ORDER BY ((((0.0749193928443126)OR(vt0.c0)))LIKE(((rt0.c1)!=('-1556909032')))) DESC, ((((v0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, rt0.c0, vt0.c0))) IN (CASE WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END, ((rt0.c1) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>>(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((0.0749193928443126)OR(vt0.c0)))LIKE(((rt0.c1)!=('-1556909032')))) DESC, ((((v0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, rt0.c0, vt0.c0))) IN (CASE WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END, ((rt0.c1) NOTNULL))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((rt0.c0)>>(rt0.c0))) NOTNULL)) ORDER BY ((((0.0749193928443126)OR(vt0.c0)))LIKE(((rt0.c1)!=('-1556909032')))) DESC, ((((v0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, rt0.c0, vt0.c0))) IN (CASE WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END, ((rt0.c1) NOTNULL))) ASC;
SELECT * FROM rt0 WHERE (CAST('-380568993' AS BLOB)) ORDER BY ((GLOB(rt0.c2, '\7')) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('-380568993' AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((GLOB(rt0.c2, '\7')) NOTNULL)  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST('-380568993' AS BLOB)) ORDER BY ((GLOB(rt0.c2, '\7')) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('-380568993' AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((GLOB(rt0.c2, '\7')) NOTNULL)  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST('-380568993' AS BLOB)) ORDER BY ((GLOB(rt0.c2, '\7')) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((+ (((NULL)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((NULL)<=(rt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((+ (((NULL)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((NULL)<=(rt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((+ (((NULL)<=(rt0.c0)))));
SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((+ (vt0.c0)))));
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON (((NULL)) BETWEEN ((((vt0.c0)>(rt0.c1)))) AND ((((rt0.c0)IS(rt0.c0))))) WHERE (rt0.c0) ORDER BY ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END)<>(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON (((NULL)) BETWEEN ((((vt0.c0)>(rt0.c1)))) AND ((((rt0.c0)IS(rt0.c0))))) ORDER BY ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END)<>(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON (((NULL)) BETWEEN ((((vt0.c0)>(rt0.c1)))) AND ((((rt0.c0)IS(rt0.c0))))) WHERE (rt0.c0) ORDER BY ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END)<>(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON (((NULL)) BETWEEN ((((vt0.c0)>(rt0.c1)))) AND ((((rt0.c0)IS(rt0.c0))))) ORDER BY ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END)<>(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON (((NULL)) BETWEEN ((((vt0.c0)>(rt0.c1)))) AND ((((rt0.c0)IS(rt0.c0))))) WHERE (rt0.c0) ORDER BY ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END)<>(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (load_extension(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((load_extension(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (load_extension(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((load_extension(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (load_extension(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(v0.c0))));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(((vt0.c0)>('')) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>('')) AS BLOB)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(((vt0.c0)>('')) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>('')) AS BLOB)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(((vt0.c0)>('')) AS BLOB));
SELECT ALL * FROM v0, vt0, rt0 WHERE (((rt0.c1 IN ()) IN ())) ORDER BY (((v0.c0) IS FALSE) IN (((rt0.c0)|(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((v0.c0) IS FALSE) IN (((rt0.c0)|(v0.c0)))) DESC);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((rt0.c1 IN ()) IN ())) ORDER BY (((v0.c0) IS FALSE) IN (((rt0.c0)|(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((v0.c0) IS FALSE) IN (((rt0.c0)|(v0.c0)))) DESC);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((rt0.c1 IN ()) IN ())) ORDER BY (((v0.c0) IS FALSE) IN (((rt0.c0)|(v0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (rt0.c1) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (rt0.c1) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (rt0.c1) ORDER BY vt0.c0;
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) NOTNULL)) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) NOTNULL)) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) NOTNULL)) ORDER BY rt0.c2 DESC;
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(rt0.c1 COLLATE NOCASE AS TEXT) WHERE ((((rt0.c1 IN ()))>=((vt0.c0 IN ())))) ORDER BY (+ (x''));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))>=((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(rt0.c1 COLLATE NOCASE AS TEXT) ORDER BY (+ (x'')));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(rt0.c1 COLLATE NOCASE AS TEXT) WHERE ((((rt0.c1 IN ()))>=((vt0.c0 IN ())))) ORDER BY (+ (x''));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))>=((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(rt0.c1 COLLATE NOCASE AS TEXT) ORDER BY (+ (x'')));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(rt0.c1 COLLATE NOCASE AS TEXT) WHERE ((((rt0.c1 IN ()))>=((vt0.c0 IN ())))) ORDER BY (+ (x''));
SELECT ALL COUNT(*) FROM rt0 WHERE (GLOB(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CASE WHEN '}8' THEN '-67311712' END));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CASE WHEN '}8' THEN '-67311712' END)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (GLOB(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CASE WHEN '}8' THEN '-67311712' END));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CASE WHEN '}8' THEN '-67311712' END)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (GLOB(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CASE WHEN '}8' THEN '-67311712' END));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON v0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY FULL OUTER JOIN rt0 ON (((((((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))AND((NOT (0.7930972948860996)))))AND(IFNULL(DISTINCT rt0.c1, rt0.c2))))AND(LIKELY(DISTINCT 0.14894444514497918))))AND(((rt0.c0) ISNULL))) WHERE ((- ('0.8011667169879472'))) ORDER BY ((v0.c0)IS NOT(SQLITE_COMPILEOPTION_GET(rt0.c0)));
SELECT SUM(count) FROM (SELECT (((- ('0.8011667169879472'))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON v0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY FULL OUTER JOIN rt0 ON (((((((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))AND((NOT (0.7930972948860996)))))AND(IFNULL(DISTINCT rt0.c1, rt0.c2))))AND(LIKELY(DISTINCT 0.14894444514497918))))AND(((rt0.c0) ISNULL))) ORDER BY ((v0.c0)IS NOT(SQLITE_COMPILEOPTION_GET(rt0.c0))));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON v0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY FULL OUTER JOIN rt0 ON (((((((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))AND((NOT (0.7930972948860996)))))AND(IFNULL(DISTINCT rt0.c1, rt0.c2))))AND(LIKELY(DISTINCT 0.14894444514497918))))AND(((rt0.c0) ISNULL))) WHERE ((- ('0.8011667169879472'))) ORDER BY ((v0.c0)IS NOT(SQLITE_COMPILEOPTION_GET(rt0.c0)));
SELECT SUM(count) FROM (SELECT (((- ('0.8011667169879472'))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON v0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY FULL OUTER JOIN rt0 ON (((((((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))AND((NOT (0.7930972948860996)))))AND(IFNULL(DISTINCT rt0.c1, rt0.c2))))AND(LIKELY(DISTINCT 0.14894444514497918))))AND(((rt0.c0) ISNULL))) ORDER BY ((v0.c0)IS NOT(SQLITE_COMPILEOPTION_GET(rt0.c0))));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON v0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY FULL OUTER JOIN rt0 ON (((((((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))AND((NOT (0.7930972948860996)))))AND(IFNULL(DISTINCT rt0.c1, rt0.c2))))AND(LIKELY(DISTINCT 0.14894444514497918))))AND(((rt0.c0) ISNULL))) WHERE ((- ('0.8011667169879472'))) ORDER BY ((v0.c0)IS NOT(SQLITE_COMPILEOPTION_GET(rt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM ASC  NULLS LAST, CAST(vt0.c0 AS NUMERIC) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM ASC  NULLS LAST, CAST(vt0.c0 AS NUMERIC) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM ASC  NULLS LAST, CAST(vt0.c0 AS NUMERIC) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM ASC  NULLS LAST, CAST(vt0.c0 AS NUMERIC) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM ASC  NULLS LAST, CAST(vt0.c0 AS NUMERIC) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON (- (rt0.c0)) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON (((((rt0.c1))>=((rt0.c0))))AND(((((v0.c0)AND(rt0.c1)))AND(vt0.c0)))) WHERE ((((rt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (- (rt0.c0)) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON (((((rt0.c1))>=((rt0.c0))))AND(((((v0.c0)AND(rt0.c1)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON (- (rt0.c0)) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON (((((rt0.c1))>=((rt0.c0))))AND(((((v0.c0)AND(rt0.c1)))AND(vt0.c0)))) WHERE ((((rt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (- (rt0.c0)) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON (((((rt0.c1))>=((rt0.c0))))AND(((((v0.c0)AND(rt0.c1)))AND(vt0.c0)))));
SELECT * FROM v0, rt0 WHERE ((NOT (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((NOT (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((NOT (rt0.c0)));
SELECT ALL * FROM vt0 WHERE (GLOB((vt0.c0 IN (vt0.c0)), TRIM(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((GLOB((vt0.c0 IN (vt0.c0)), TRIM(vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (GLOB((vt0.c0 IN (vt0.c0)), TRIM(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((GLOB((vt0.c0 IN (vt0.c0)), TRIM(vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (GLOB((vt0.c0 IN (vt0.c0)), TRIM(vt0.c0, vt0.c0)));
SELECT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((vt0.c0 COLLATE NOCASE)<<(((rt0.c2)==(vt0.c0)))) WHERE (((((((rt0.c2)LIKE(rt0.c2)))AND(CAST(vt0.c0 AS INTEGER))))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY HEX(DISTINCT ((NULL) NOT NULL)), ((x'') BETWEEN (rt0.c1) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST, (NOT (((rt0.c1)IS(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)LIKE(rt0.c2)))AND(CAST(vt0.c0 AS INTEGER))))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((vt0.c0 COLLATE NOCASE)<<(((rt0.c2)=(vt0.c0)))) ORDER BY HEX(DISTINCT ((NULL) NOT NULL)), ((x'') BETWEEN (rt0.c1) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST, (NOT (((rt0.c1)IS(rt0.c1)))) DESC);
SELECT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((vt0.c0 COLLATE NOCASE)<<(((rt0.c2)==(vt0.c0)))) WHERE (((((((rt0.c2)LIKE(rt0.c2)))AND(CAST(vt0.c0 AS INTEGER))))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY HEX(DISTINCT ((NULL) NOT NULL)), ((x'') BETWEEN (rt0.c1) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST, (NOT (((rt0.c1)IS(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)LIKE(rt0.c2)))AND(CAST(vt0.c0 AS INTEGER))))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((vt0.c0 COLLATE NOCASE)<<(((rt0.c2)=(vt0.c0)))) ORDER BY HEX(DISTINCT ((NULL) NOT NULL)), ((x'') BETWEEN (rt0.c1) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST, (NOT (((rt0.c1)IS(rt0.c1)))) DESC);
SELECT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((vt0.c0 COLLATE NOCASE)<<(((rt0.c2)==(vt0.c0)))) WHERE (((((((rt0.c2)LIKE(rt0.c2)))AND(CAST(vt0.c0 AS INTEGER))))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY HEX(DISTINCT ((NULL) NOT NULL)), ((x'') BETWEEN (rt0.c1) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST, (NOT (((rt0.c1)IS(rt0.c1)))) DESC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ('' COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ('' COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ('' COLLATE BINARY COLLATE RTRIM);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON vt0.c0 WHERE (CASE (((vt0.c0))<=((vt0.c0)))  WHEN ((((((((v0.c0)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) THEN ((((((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)) WHEN ((v0.c0) ISNULL) THEN ((vt0.c0) NOT NULL) WHEN CAST(vt0.c0 AS TEXT) THEN ((v0.c0)=(vt0.c0)) ELSE ((vt0.c0) IS TRUE) END) ORDER BY (HEX(vt0.c0) IN ())  NULLS FIRST, ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0))<=((vt0.c0)))  WHEN ((((((((v0.c0)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) THEN ((((((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)) WHEN ((v0.c0) ISNULL) THEN ((vt0.c0) NOT NULL) WHEN CAST(vt0.c0 AS TEXT) THEN ((v0.c0)==(vt0.c0)) ELSE ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON vt0.c0 ORDER BY (HEX(vt0.c0) IN ())  NULLS FIRST, ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ISNULL));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON vt0.c0 WHERE (CASE (((vt0.c0))<=((vt0.c0)))  WHEN ((((((((v0.c0)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) THEN ((((((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)) WHEN ((v0.c0) ISNULL) THEN ((vt0.c0) NOT NULL) WHEN CAST(vt0.c0 AS TEXT) THEN ((v0.c0)=(vt0.c0)) ELSE ((vt0.c0) IS TRUE) END) ORDER BY (HEX(vt0.c0) IN ())  NULLS FIRST, ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0))<=((vt0.c0)))  WHEN ((((((((v0.c0)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) THEN ((((((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)) WHEN ((v0.c0) ISNULL) THEN ((vt0.c0) NOT NULL) WHEN CAST(vt0.c0 AS TEXT) THEN ((v0.c0)==(vt0.c0)) ELSE ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON vt0.c0 ORDER BY (HEX(vt0.c0) IN ())  NULLS FIRST, ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ISNULL));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON vt0.c0 WHERE (CASE (((vt0.c0))<=((vt0.c0)))  WHEN ((((((((v0.c0)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) THEN ((((((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)) WHEN ((v0.c0) ISNULL) THEN ((vt0.c0) NOT NULL) WHEN CAST(vt0.c0 AS TEXT) THEN ((v0.c0)=(vt0.c0)) ELSE ((vt0.c0) IS TRUE) END) ORDER BY (HEX(vt0.c0) IN ())  NULLS FIRST, ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ISNULL);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((((CAST(x'd5d8' AS REAL))AND((NOT (rt0.c1)))))AND(((rt0.c0)==(rt0.c1)))))OR(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2)))))OR(MIN(v0.c0, rt0.c0, rt0.c1, 'gA8'))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(x'd5d8' AS REAL))AND((NOT (rt0.c1)))))AND(((rt0.c0)==(rt0.c1)))))OR(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2)))))OR(MIN(v0.c0, rt0.c0, rt0.c1, 'gA8')))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((((CAST(x'd5d8' AS REAL))AND((NOT (rt0.c1)))))AND(((rt0.c0)==(rt0.c1)))))OR(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2)))))OR(MIN(v0.c0, rt0.c0, rt0.c1, 'gA8'))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(x'd5d8' AS REAL))AND((NOT (rt0.c1)))))AND(((rt0.c0)==(rt0.c1)))))OR(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2)))))OR(MIN(v0.c0, rt0.c0, rt0.c1, 'gA8')))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((((CAST(x'd5d8' AS REAL))AND((NOT (rt0.c1)))))AND(((rt0.c0)==(rt0.c1)))))OR(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2)))))OR(MIN(v0.c0, rt0.c0, rt0.c1, 'gA8'))));
SELECT * FROM v0, vt0 WHERE (((((((x'', v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt0.c0, v0.c0, v0.c0)))))>((((v0.c0)GLOB(v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((x'', v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt0.c0, v0.c0, v0.c0)))))>((((v0.c0)GLOB(v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((((x'', v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt0.c0, v0.c0, v0.c0)))))>((((v0.c0)GLOB(v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((x'', v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt0.c0, v0.c0, v0.c0)))))>((((v0.c0)GLOB(v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((((x'', v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt0.c0, v0.c0, v0.c0)))))>((((v0.c0)GLOB(v0.c0))))));
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON (~ (rt0.c1 COLLATE RTRIM)) WHERE ((+ (CASE rt0.c1  WHEN x'9a31' THEN rt0.c0 END))) ORDER BY CASE CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END  WHEN ((((((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(0.42591082430566574)) THEN (- ('-473059084')) ELSE ((rt0.c0)IS(v0.c0)) END ASC  NULLS FIRST, CAST(CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END AS BLOB) ASC  NULLS LAST, ((NULL) NOT BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((NOT (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE rt0.c1  WHEN x'9a31' THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON (~ (rt0.c1 COLLATE RTRIM)) ORDER BY CASE CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END  WHEN ((((((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(0.42591082430566574)) THEN (- ('-473059084')) ELSE ((rt0.c0)IS(v0.c0)) END ASC  NULLS FIRST, CAST(CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END AS BLOB) ASC  NULLS LAST, ((NULL) NOT BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((NOT (rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON (~ (rt0.c1 COLLATE RTRIM)) WHERE ((+ (CASE rt0.c1  WHEN x'9a31' THEN rt0.c0 END))) ORDER BY CASE CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END  WHEN ((((((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(0.42591082430566574)) THEN (- ('-473059084')) ELSE ((rt0.c0)IS(v0.c0)) END ASC  NULLS FIRST, CAST(CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END AS BLOB) ASC  NULLS LAST, ((NULL) NOT BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((NOT (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE rt0.c1  WHEN x'9a31' THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON (~ (rt0.c1 COLLATE RTRIM)) ORDER BY CASE CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END  WHEN ((((((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(0.42591082430566574)) THEN (- ('-473059084')) ELSE ((rt0.c0)IS(v0.c0)) END ASC  NULLS FIRST, CAST(CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END AS BLOB) ASC  NULLS LAST, ((NULL) NOT BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((NOT (rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON (~ (rt0.c1 COLLATE RTRIM)) WHERE ((+ (CASE rt0.c1  WHEN x'9a31' THEN rt0.c0 END))) ORDER BY CASE CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END  WHEN ((((((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(0.42591082430566574)) THEN (- ('-473059084')) ELSE ((rt0.c0)IS(v0.c0)) END ASC  NULLS FIRST, CAST(CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END AS BLOB) ASC  NULLS LAST, ((NULL) NOT BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((NOT (rt0.c0))))  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE ('^쟊la뜊|');
SELECT SUM(count) FROM (SELECT ALL (('^쟊la뜊|') IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ('^쟊la뜊|');
SELECT SUM(count) FROM (SELECT ALL (('^쟊la뜊|') IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ('^쟊la뜊|');
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (((~ (v0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((~ (v0.c0))) NOT NULL)  NULLS LAST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (((~ (v0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((~ (v0.c0))) NOT NULL)  NULLS LAST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (((~ (v0.c0))) NOT NULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c0 AS BLOB)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c0 AS BLOB)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c0 AS BLOB)) IS FALSE));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((+ (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((+ (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((+ (CAST(vt0.c0 AS REAL))));
SELECT * FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((((((v0.c0)<=(rt0.c1)))OR(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR(CAST(NULL AS BLOB))) WHERE (((((((((rt0.c0)AND(((rt0.c1) NOT NULL))))OR(CAST(v0.c0 AS BLOB))))AND(CASE WHEN v0.c0 THEN rt0.c2 ELSE '1460205472' END)))AND(((0.36645615652485297) NOT BETWEEN (vt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)AND(((rt0.c1) NOT NULL))))OR(CAST(v0.c0 AS BLOB))))AND(CASE WHEN v0.c0 THEN rt0.c2 ELSE '1460205472' END)))AND(((0.36645615652485297) NOT BETWEEN (vt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((((((v0.c0)<=(rt0.c1)))OR(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR(CAST(NULL AS BLOB))));
SELECT * FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((((((v0.c0)<=(rt0.c1)))OR(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR(CAST(NULL AS BLOB))) WHERE (((((((((rt0.c0)AND(((rt0.c1) NOT NULL))))OR(CAST(v0.c0 AS BLOB))))AND(CASE WHEN v0.c0 THEN rt0.c2 ELSE '1460205472' END)))AND(((0.36645615652485297) NOT BETWEEN (vt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)AND(((rt0.c1) NOT NULL))))OR(CAST(v0.c0 AS BLOB))))AND(CASE WHEN v0.c0 THEN rt0.c2 ELSE '1460205472' END)))AND(((0.36645615652485297) NOT BETWEEN (vt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((((((v0.c0)<=(rt0.c1)))OR(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR(CAST(NULL AS BLOB))));
SELECT * FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((((((v0.c0)<=(rt0.c1)))OR(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR(CAST(NULL AS BLOB))) WHERE (((((((((rt0.c0)AND(((rt0.c1) NOT NULL))))OR(CAST(v0.c0 AS BLOB))))AND(CASE WHEN v0.c0 THEN rt0.c2 ELSE '1460205472' END)))AND(((0.36645615652485297) NOT BETWEEN (vt0.c0) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) IS FALSE));
SELECT * FROM v0 WHERE (((v0.c0)%((('-464915665') IS FALSE)))) ORDER BY CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)%((('-464915665') IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB));
SELECT * FROM v0 WHERE (((v0.c0)%((('-464915665') IS FALSE)))) ORDER BY CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)%((('-464915665') IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB));
SELECT * FROM v0 WHERE (((v0.c0)%((('-464915665') IS FALSE)))) ORDER BY CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB);
SELECT * FROM vt0 WHERE ('') ORDER BY (((vt0.c0 IN ())) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT NULL)  NULLS FIRST);
SELECT * FROM vt0 WHERE ('') ORDER BY (((vt0.c0 IN ())) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT NULL)  NULLS FIRST);
SELECT * FROM vt0 WHERE ('') ORDER BY (((vt0.c0 IN ())) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (UPPER(DISTINCT ((vt0.c0)AND('-474864049'))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((vt0.c0)AND('-474864049')))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (UPPER(DISTINCT ((vt0.c0)AND('-474864049'))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((vt0.c0)AND('-474864049')))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (UPPER(DISTINCT ((vt0.c0)AND('-474864049'))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0);
SELECT ALL * FROM v0 WHERE (((((NULL)OR(((v0.c0)-(x'')))))OR(((v0.c0) NOTNULL)))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(((v0.c0)-(x'')))))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((NULL)OR(((v0.c0)-(x'')))))OR(((v0.c0) NOTNULL)))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(((v0.c0)-(x'')))))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((NULL)OR(((v0.c0)-(x'')))))OR(((v0.c0) NOTNULL)))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((((((v0.c0)OR(v0.c0)))AND(rt0.c0)))AND(((((((((v0.c0)AND(rt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(rt0.c1)))))OR(((v0.c0)>>(rt0.c1))))) ORDER BY (((rt0.c0 IN ())) NOT BETWEEN (rt0.c0) AND (((v0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))) DESC  NULLS FIRST, ((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))GLOB(((((0.5299732316326652)OR(rt0.c2)))AND(rt0.c2))))  NULLS FIRST, CAST(((vt0.c0)GLOB(rt0.c2)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)OR(v0.c0)))AND(rt0.c0)))AND(((((((((v0.c0)AND(rt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(rt0.c1)))))OR(((v0.c0)>>(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((rt0.c0 IN ())) NOT BETWEEN (rt0.c0) AND (((v0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))) DESC  NULLS FIRST, ((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))GLOB(((((0.5299732316326652)OR(rt0.c2)))AND(rt0.c2))))  NULLS FIRST, CAST(((vt0.c0)GLOB(rt0.c2)) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((((((v0.c0)OR(v0.c0)))AND(rt0.c0)))AND(((((((((v0.c0)AND(rt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(rt0.c1)))))OR(((v0.c0)>>(rt0.c1))))) ORDER BY (((rt0.c0 IN ())) NOT BETWEEN (rt0.c0) AND (((v0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))) DESC  NULLS FIRST, ((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))GLOB(((((0.5299732316326652)OR(rt0.c2)))AND(rt0.c2))))  NULLS FIRST, CAST(((vt0.c0)GLOB(rt0.c2)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)OR(v0.c0)))AND(rt0.c0)))AND(((((((((v0.c0)AND(rt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(rt0.c1)))))OR(((v0.c0)>>(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((rt0.c0 IN ())) NOT BETWEEN (rt0.c0) AND (((v0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))) DESC  NULLS FIRST, ((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))GLOB(((((0.5299732316326652)OR(rt0.c2)))AND(rt0.c2))))  NULLS FIRST, CAST(((vt0.c0)GLOB(rt0.c2)) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((((((v0.c0)OR(v0.c0)))AND(rt0.c0)))AND(((((((((v0.c0)AND(rt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(rt0.c1)))))OR(((v0.c0)>>(rt0.c1))))) ORDER BY (((rt0.c0 IN ())) NOT BETWEEN (rt0.c0) AND (((v0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))) DESC  NULLS FIRST, ((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))GLOB(((((0.5299732316326652)OR(rt0.c2)))AND(rt0.c2))))  NULLS FIRST, CAST(((vt0.c0)GLOB(rt0.c2)) AS TEXT)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (((- (vt0.c0)))*(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) ISNULL)) ORDER BY ABS(DISTINCT CAST(vt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) ISNULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((- (vt0.c0)))*(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) ORDER BY ABS(DISTINCT CAST(vt0.c0 AS TEXT)));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (((- (vt0.c0)))*(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) ISNULL)) ORDER BY ABS(DISTINCT CAST(vt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) ISNULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((- (vt0.c0)))*(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) ORDER BY ABS(DISTINCT CAST(vt0.c0 AS TEXT)));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (((- (vt0.c0)))*(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) ISNULL)) ORDER BY ABS(DISTINCT CAST(vt0.c0 AS TEXT));
SELECT * FROM vt0, rt0, v0 WHERE ((((+ (x''))) ISNULL)) ORDER BY ((rt0.c1)>(v0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (x''))) ISNULL)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((rt0.c1)>(v0.c0))  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE ((((+ (x''))) ISNULL)) ORDER BY ((rt0.c1)>(v0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (x''))) ISNULL)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((rt0.c1)>(v0.c0))  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE ((((+ (x''))) ISNULL)) ORDER BY ((rt0.c1)>(v0.c0))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(vt0.c0))) NOTNULL)) ORDER BY CASE WHEN (+ (rt0.c1)) THEN (v0.c0 IN (rt0.c0)) ELSE v0.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CASE WHEN (+ (rt0.c1)) THEN (v0.c0 IN (rt0.c0)) ELSE v0.c0 COLLATE NOCASE END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(vt0.c0))) NOTNULL)) ORDER BY CASE WHEN (+ (rt0.c1)) THEN (v0.c0 IN (rt0.c0)) ELSE v0.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CASE WHEN (+ (rt0.c1)) THEN (v0.c0 IN (rt0.c0)) ELSE v0.c0 COLLATE NOCASE END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(vt0.c0))) NOTNULL)) ORDER BY CASE WHEN (+ (rt0.c1)) THEN (v0.c0 IN (rt0.c0)) ELSE v0.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (TYPEOF((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((NOT (v0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (TYPEOF((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((NOT (v0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (TYPEOF((NOT (v0.c0))));
SELECT * FROM rt0 WHERE (TYPEOF(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND('-1303701001'))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND('-1303701001')))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TYPEOF(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND('-1303701001'))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND('-1303701001')))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TYPEOF(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND('-1303701001'))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((((((rt0.c0)OR('')))OR(rt0.c2)))OR(vt0.c0)))OR(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR('')))OR(rt0.c2)))OR(vt0.c0)))OR(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((((((rt0.c0)OR('')))OR(rt0.c2)))OR(vt0.c0)))OR(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR('')))OR(rt0.c2)))OR(vt0.c0)))OR(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((((((rt0.c0)OR('')))OR(rt0.c2)))OR(vt0.c0)))OR(rt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0, v0 WHERE ((((('653231044') NOT BETWEEN (vt0.c0) AND (v0.c0)))<(CAST(-6.7536978E8 AS INTEGER)))) ORDER BY CASE (('') ISNULL)  WHEN '-238923875' THEN json_insert(NULL, vt0.c0, v0.c0, x'', v0.c0) WHEN (v0.c0 IN (vt0.c0)) THEN (9.61205799E8 IN ()) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (v0.c0 IN ()) WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) THEN NULLIF(DISTINCT vt0.c0, v0.c0) ELSE ((vt0.c0)*(vt0.c0)) END DESC  NULLS FIRST, NULLIF(DISTINCT 0.9344563178668899, 0.49357391298171893)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('653231044') NOT BETWEEN (vt0.c0) AND (v0.c0)))<(CAST(-6.7536978E8 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE (('') ISNULL)  WHEN '-238923875' THEN json_insert(NULL, vt0.c0, v0.c0, x'', v0.c0) WHEN (v0.c0 IN (vt0.c0)) THEN (9.61205799E8 IN ()) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (v0.c0 IN ()) WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) THEN NULLIF(DISTINCT vt0.c0, v0.c0) ELSE ((vt0.c0)*(vt0.c0)) END DESC  NULLS FIRST, NULLIF(DISTINCT 0.9344563178668899, 0.49357391298171893)  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((((('653231044') NOT BETWEEN (vt0.c0) AND (v0.c0)))<(CAST(-6.7536978E8 AS INTEGER)))) ORDER BY CASE (('') ISNULL)  WHEN '-238923875' THEN json_insert(NULL, vt0.c0, v0.c0, x'', v0.c0) WHEN (v0.c0 IN (vt0.c0)) THEN (9.61205799E8 IN ()) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (v0.c0 IN ()) WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) THEN NULLIF(DISTINCT vt0.c0, v0.c0) ELSE ((vt0.c0)*(vt0.c0)) END DESC  NULLS FIRST, NULLIF(DISTINCT 0.9344563178668899, 0.49357391298171893)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('653231044') NOT BETWEEN (vt0.c0) AND (v0.c0)))<(CAST(-6.7536978E8 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE (('') ISNULL)  WHEN '-238923875' THEN json_insert(NULL, vt0.c0, v0.c0, x'', v0.c0) WHEN (v0.c0 IN (vt0.c0)) THEN (9.61205799E8 IN ()) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (v0.c0 IN ()) WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) THEN NULLIF(DISTINCT vt0.c0, v0.c0) ELSE ((vt0.c0)*(vt0.c0)) END DESC  NULLS FIRST, NULLIF(DISTINCT 0.9344563178668899, 0.49357391298171893)  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((((('653231044') NOT BETWEEN (vt0.c0) AND (v0.c0)))<(CAST(-6.7536978E8 AS INTEGER)))) ORDER BY CASE (('') ISNULL)  WHEN '-238923875' THEN json_insert(NULL, vt0.c0, v0.c0, x'', v0.c0) WHEN (v0.c0 IN (vt0.c0)) THEN (9.61205799E8 IN ()) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (v0.c0 IN ()) WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) THEN NULLIF(DISTINCT vt0.c0, v0.c0) ELSE ((vt0.c0)*(vt0.c0)) END DESC  NULLS FIRST, NULLIF(DISTINCT 0.9344563178668899, 0.49357391298171893)  NULLS LAST;
SELECT * FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN (v0.c0)))*('f'))) ORDER BY ((((SQLITE_COMPILEOPTION_USED(v0.c0))AND((NOT (v0.c0)))))AND(((v0.c0) IS TRUE))) DESC, v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (v0.c0)))*('f'))) IS TRUE)  as count FROM v0 ORDER BY ((((SQLITE_COMPILEOPTION_USED(v0.c0))AND((NOT (v0.c0)))))AND(((v0.c0) IS TRUE))) DESC, v0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN (v0.c0)))*('f'))) ORDER BY ((((SQLITE_COMPILEOPTION_USED(v0.c0))AND((NOT (v0.c0)))))AND(((v0.c0) IS TRUE))) DESC, v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (v0.c0)))*('f'))) IS TRUE)  as count FROM v0 ORDER BY ((((SQLITE_COMPILEOPTION_USED(v0.c0))AND((NOT (v0.c0)))))AND(((v0.c0) IS TRUE))) DESC, v0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN (v0.c0)))*('f'))) ORDER BY ((((SQLITE_COMPILEOPTION_USED(v0.c0))AND((NOT (v0.c0)))))AND(((v0.c0) IS TRUE))) DESC, v0.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((CAST(rt0.c2 AS BLOB))+(0.792440940199)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB))+(0.792440940199))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((CAST(rt0.c2 AS BLOB))+(0.792440940199)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB))+(0.792440940199))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((CAST(rt0.c2 AS BLOB))+(0.792440940199)));
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0))>((vt0.c0)))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))<<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))<<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0))>((vt0.c0)))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))<<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))<<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0))>((vt0.c0)))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))<<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT * FROM vt0 WHERE ((((((((((((((+ (vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c0)<<(NULL)))))AND((~ (vt0.c0))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS NOT((NOT (vt0.c0)))), (~ (((vt0.c0)-(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((+ (vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c0)<<(NULL)))))AND((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS NOT((NOT (vt0.c0)))), (~ (((vt0.c0)-(vt0.c0)))));
SELECT * FROM vt0 WHERE ((((((((((((((+ (vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c0)<<(NULL)))))AND((~ (vt0.c0))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS NOT((NOT (vt0.c0)))), (~ (((vt0.c0)-(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((+ (vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c0)<<(NULL)))))AND((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS NOT((NOT (vt0.c0)))), (~ (((vt0.c0)-(vt0.c0)))));
SELECT * FROM vt0 WHERE ((((((((((((((+ (vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c0)<<(NULL)))))AND((~ (vt0.c0))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS NOT((NOT (vt0.c0)))), (~ (((vt0.c0)-(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 NOT INDEXED WHERE (x'e48d5425');
SELECT SUM(count) FROM (SELECT ALL ((x'e48d5425') IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 NOT INDEXED WHERE (x'e48d5425');
SELECT SUM(count) FROM (SELECT ALL ((x'e48d5425') IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 NOT INDEXED WHERE (x'e48d5425');
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END) ISNULL) LEFT OUTER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))/(0.026377461424465398)) WHERE ((((rt0.c0)) NOT BETWEEN (((((v0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))) AND ((((((v0.c0)AND(vt0.c0)))AND(rt0.c0)))))) ORDER BY (+ (rt0.c0)) COLLATE NOCASE COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN (((((v0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))) AND ((((((v0.c0)AND(vt0.c0)))AND(rt0.c0)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END) ISNULL) LEFT OUTER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))/(0.026377461424465398)) ORDER BY (+ (rt0.c0)) COLLATE NOCASE COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END) ISNULL) LEFT OUTER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))/(0.026377461424465398)) WHERE ((((rt0.c0)) NOT BETWEEN (((((v0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))) AND ((((((v0.c0)AND(vt0.c0)))AND(rt0.c0)))))) ORDER BY (+ (rt0.c0)) COLLATE NOCASE COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN (((((v0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))) AND ((((((v0.c0)AND(vt0.c0)))AND(rt0.c0)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END) ISNULL) LEFT OUTER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))/(0.026377461424465398)) ORDER BY (+ (rt0.c0)) COLLATE NOCASE COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(NULL)))AND(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(NULL)))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(NULL)))AND(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(NULL)))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(NULL)))AND(CAST(vt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON 0.8866113813089933 RIGHT OUTER JOIN vt0 ON ((RTRIM(v0.c0))IS(((rt0.c0) BETWEEN (rt0.c1) AND (0Xffffffff8b58cfa1)))) WHERE ((+ (((v0.c0)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON 0.8866113813089933 RIGHT OUTER JOIN vt0 ON ((RTRIM(v0.c0))IS(((rt0.c0) BETWEEN (rt0.c1) AND (0xffffffff8b58cfa1)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON 0.8866113813089933 RIGHT OUTER JOIN vt0 ON ((RTRIM(v0.c0))IS(((rt0.c0) BETWEEN (rt0.c1) AND (0Xffffffff8b58cfa1)))) WHERE ((+ (((v0.c0)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON 0.8866113813089933 RIGHT OUTER JOIN vt0 ON ((RTRIM(v0.c0))IS(((rt0.c0) BETWEEN (rt0.c1) AND (0xffffffff8b58cfa1)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON 0.8866113813089933 RIGHT OUTER JOIN vt0 ON ((RTRIM(v0.c0))IS(((rt0.c0) BETWEEN (rt0.c1) AND (0Xffffffff8b58cfa1)))) WHERE ((+ (((v0.c0)LIKE(rt0.c2)))));
SELECT ALL * FROM v0 WHERE ('-1955279641' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('-1955279641' COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ('-1955279641' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('-1955279641' COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ('-1955279641' COLLATE NOCASE);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (TYPEOF(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (TYPEOF(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (TYPEOF(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT COUNT(*) FROM rt0, v0 WHERE ('wd}QwZ' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('wd}QwZ' COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ('wd}QwZ' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('wd}QwZ' COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ('wd}QwZ' COLLATE RTRIM);
SELECT * FROM v0 WHERE (((GLOB(0.3421859857484909, v0.c0)) BETWEEN ((NOT (v0.c0))) AND ((+ (v0.c0))))) ORDER BY 0.12356754267612169 DESC, ((v0.c0)*(v0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((GLOB(0.3421859857484909, v0.c0)) BETWEEN ((NOT (v0.c0))) AND ((+ (v0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY 0.12356754267612169 DESC, ((v0.c0)*(v0.c0)) COLLATE NOCASE DESC);
SELECT * FROM v0 WHERE (((GLOB(0.3421859857484909, v0.c0)) BETWEEN ((NOT (v0.c0))) AND ((+ (v0.c0))))) ORDER BY 0.12356754267612169 DESC, ((v0.c0)*(v0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((GLOB(0.3421859857484909, v0.c0)) BETWEEN ((NOT (v0.c0))) AND ((+ (v0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY 0.12356754267612169 DESC, ((v0.c0)*(v0.c0)) COLLATE NOCASE DESC);
SELECT * FROM v0 WHERE (((GLOB(0.3421859857484909, v0.c0)) BETWEEN ((NOT (v0.c0))) AND ((+ (v0.c0))))) ORDER BY 0.12356754267612169 DESC, ((v0.c0)*(v0.c0)) COLLATE NOCASE DESC;
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))) BETWEEN (v0.c0) AND (CASE WHEN rt0.c0 THEN rt0.c1 END)) RIGHT OUTER JOIN vt0 ON NULLIF((('263882067') NOT BETWEEN (NULL) AND (rt0.c0)), (- (v0.c0))) WHERE (0.08814829232751187);
SELECT SUM(count) FROM (SELECT ((0.08814829232751187) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))) BETWEEN (v0.c0) AND (CASE WHEN rt0.c0 THEN rt0.c1 END)) RIGHT OUTER JOIN vt0 ON NULLIF((('263882067') NOT BETWEEN (NULL) AND (rt0.c0)), (- (v0.c0))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))) BETWEEN (v0.c0) AND (CASE WHEN rt0.c0 THEN rt0.c1 END)) RIGHT OUTER JOIN vt0 ON NULLIF((('263882067') NOT BETWEEN (NULL) AND (rt0.c0)), (- (v0.c0))) WHERE (0.08814829232751187);
SELECT SUM(count) FROM (SELECT ((0.08814829232751187) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))) BETWEEN (v0.c0) AND (CASE WHEN rt0.c0 THEN rt0.c1 END)) RIGHT OUTER JOIN vt0 ON NULLIF((('263882067') NOT BETWEEN (NULL) AND (rt0.c0)), (- (v0.c0))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))) BETWEEN (v0.c0) AND (CASE WHEN rt0.c0 THEN rt0.c1 END)) RIGHT OUTER JOIN vt0 ON NULLIF((('263882067') NOT BETWEEN (NULL) AND (rt0.c0)), (- (v0.c0))) WHERE (0.08814829232751187);
SELECT * FROM v0, rt0 WHERE ((((rt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((rt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((rt0.c0 IN ())) IS TRUE));
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((rt0.c2) NOT NULL)) ORDER BY CAST(CASE WHEN v0.c0 THEN vt0.c0 END AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT NULL)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CAST(CASE WHEN v0.c0 THEN vt0.c0 END AS REAL) ASC);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((rt0.c2) NOT NULL)) ORDER BY CAST(CASE WHEN v0.c0 THEN vt0.c0 END AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT NULL)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CAST(CASE WHEN v0.c0 THEN vt0.c0 END AS REAL) ASC);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((rt0.c2) NOT NULL)) ORDER BY CAST(CASE WHEN v0.c0 THEN vt0.c0 END AS REAL) ASC;
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((((((0.5982015993253245))>=((rt0.c1)))))>=(((NOT (vt0.c0))))) RIGHT OUTER JOIN vt0 ON (((+ (v0.c0)))GLOB(LOWER(v0.c0))) WHERE ((rt0.c2 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((0.5982015993253245))>=((rt0.c1)))))>=(((NOT (vt0.c0))))) RIGHT OUTER JOIN vt0 ON (((+ (v0.c0)))GLOB(LOWER(v0.c0))));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((((((0.5982015993253245))>=((rt0.c1)))))>=(((NOT (vt0.c0))))) RIGHT OUTER JOIN vt0 ON (((+ (v0.c0)))GLOB(LOWER(v0.c0))) WHERE ((rt0.c2 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((0.5982015993253245))>=((rt0.c1)))))>=(((NOT (vt0.c0))))) RIGHT OUTER JOIN vt0 ON (((+ (v0.c0)))GLOB(LOWER(v0.c0))));
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))&(v0.c0 COLLATE BINARY))) ORDER BY CASE ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN LIKELIHOOD(rt0.c1, 0.866052898784944) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END WHEN ((rt0.c1)GLOB(v0.c0)) THEN ABS(0x7fdcf75b) WHEN ((NULL) NOT BETWEEN (rt0.c2) AND (v0.c0)) THEN ((rt0.c0)/(v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))&(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN LIKELIHOOD(rt0.c1, 0.866052898784944) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END WHEN ((rt0.c1)GLOB(v0.c0)) THEN ABS(0X7fdcf75b) WHEN ((NULL) NOT BETWEEN (rt0.c2) AND (v0.c0)) THEN ((rt0.c0)/(v0.c0)) END);
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))&(v0.c0 COLLATE BINARY))) ORDER BY CASE ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN LIKELIHOOD(rt0.c1, 0.866052898784944) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END WHEN ((rt0.c1)GLOB(v0.c0)) THEN ABS(0x7fdcf75b) WHEN ((NULL) NOT BETWEEN (rt0.c2) AND (v0.c0)) THEN ((rt0.c0)/(v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))&(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN LIKELIHOOD(rt0.c1, 0.866052898784944) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END WHEN ((rt0.c1)GLOB(v0.c0)) THEN ABS(0X7fdcf75b) WHEN ((NULL) NOT BETWEEN (rt0.c2) AND (v0.c0)) THEN ((rt0.c0)/(v0.c0)) END);
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))&(v0.c0 COLLATE BINARY))) ORDER BY CASE ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN LIKELIHOOD(rt0.c1, 0.866052898784944) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END WHEN ((rt0.c1)GLOB(v0.c0)) THEN ABS(0x7fdcf75b) WHEN ((NULL) NOT BETWEEN (rt0.c2) AND (v0.c0)) THEN ((rt0.c0)/(v0.c0)) END;
SELECT ALL COUNT(*) FROM v0 WHERE ((- (LIKELIHOOD(v0.c0, 0.9442362124213368)))) ORDER BY LIKE(((v0.c0)<<(0.4845380329103346)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))  NULLS LAST, CAST(((v0.c0)!=(v0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELIHOOD(v0.c0, 0.9442362124213368)))) IS TRUE)  as count FROM v0 ORDER BY LIKE(((v0.c0)<<(0.4845380329103346)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))  NULLS LAST, CAST(((v0.c0)<>(v0.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (LIKELIHOOD(v0.c0, 0.9442362124213368)))) ORDER BY LIKE(((v0.c0)<<(0.4845380329103346)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))  NULLS LAST, CAST(((v0.c0)!=(v0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELIHOOD(v0.c0, 0.9442362124213368)))) IS TRUE)  as count FROM v0 ORDER BY LIKE(((v0.c0)<<(0.4845380329103346)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))  NULLS LAST, CAST(((v0.c0)<>(v0.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (LIKELIHOOD(v0.c0, 0.9442362124213368)))) ORDER BY LIKE(((v0.c0)<<(0.4845380329103346)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))  NULLS LAST, CAST(((v0.c0)!=(v0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE BINARY) ISNULL) FULL OUTER JOIN vt0 ON (((rt0.c2, rt0.c0, v0.c0, vt0.c0, x'', v0.c0, rt0.c2)) NOT BETWEEN ((((((x'')AND(v0.c0)))AND(v0.c0)), CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN x'2646' THEN v0.c0 ELSE v0.c0 END, UPPER(DISTINCT '-1556909032'), (- (rt0.c2)), (((rt0.c1))==((v0.c0))), ((rt0.c2)>(v0.c0)), ('0.4845380329103346' IN (v0.c0)))) AND (((((NULL))=((vt0.c0))), ((v0.c0)>(vt0.c0)), TRIM(rt0.c2), ((v0.c0)||(NULL)), ((rt0.c0) NOT NULL), vt0.c0, CASE v0.c0  WHEN rt0.c0 THEN v0.c0 END))) WHERE (((961205799) BETWEEN (((0.9479025401473599)LIKE(vt0.c0))) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((961205799) BETWEEN (((0.9479025401473599)LIKE(vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE BINARY) ISNULL) FULL OUTER JOIN vt0 ON (((rt0.c2, rt0.c0, v0.c0, vt0.c0, x'', v0.c0, rt0.c2)) NOT BETWEEN ((((((x'')AND(v0.c0)))AND(v0.c0)), CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN x'2646' THEN v0.c0 ELSE v0.c0 END, UPPER(DISTINCT '-1556909032'), (- (rt0.c2)), (((rt0.c1))=((v0.c0))), ((rt0.c2)>(v0.c0)), ('0.4845380329103346' IN (v0.c0)))) AND (((((NULL))=((vt0.c0))), ((v0.c0)>(vt0.c0)), TRIM(rt0.c2), ((v0.c0)||(NULL)), ((rt0.c0) NOT NULL), vt0.c0, CASE v0.c0  WHEN rt0.c0 THEN v0.c0 END))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE BINARY) ISNULL) FULL OUTER JOIN vt0 ON (((rt0.c2, rt0.c0, v0.c0, vt0.c0, x'', v0.c0, rt0.c2)) NOT BETWEEN ((((((x'')AND(v0.c0)))AND(v0.c0)), CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN x'2646' THEN v0.c0 ELSE v0.c0 END, UPPER(DISTINCT '-1556909032'), (- (rt0.c2)), (((rt0.c1))==((v0.c0))), ((rt0.c2)>(v0.c0)), ('0.4845380329103346' IN (v0.c0)))) AND (((((NULL))=((vt0.c0))), ((v0.c0)>(vt0.c0)), TRIM(rt0.c2), ((v0.c0)||(NULL)), ((rt0.c0) NOT NULL), vt0.c0, CASE v0.c0  WHEN rt0.c0 THEN v0.c0 END))) WHERE (((961205799) BETWEEN (((0.9479025401473599)LIKE(vt0.c0))) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((961205799) BETWEEN (((0.9479025401473599)LIKE(vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE BINARY) ISNULL) FULL OUTER JOIN vt0 ON (((rt0.c2, rt0.c0, v0.c0, vt0.c0, x'', v0.c0, rt0.c2)) NOT BETWEEN ((((((x'')AND(v0.c0)))AND(v0.c0)), CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN x'2646' THEN v0.c0 ELSE v0.c0 END, UPPER(DISTINCT '-1556909032'), (- (rt0.c2)), (((rt0.c1))=((v0.c0))), ((rt0.c2)>(v0.c0)), ('0.4845380329103346' IN (v0.c0)))) AND (((((NULL))=((vt0.c0))), ((v0.c0)>(vt0.c0)), TRIM(rt0.c2), ((v0.c0)||(NULL)), ((rt0.c0) NOT NULL), vt0.c0, CASE v0.c0  WHEN rt0.c0 THEN v0.c0 END))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE BINARY) ISNULL) FULL OUTER JOIN vt0 ON (((rt0.c2, rt0.c0, v0.c0, vt0.c0, x'', v0.c0, rt0.c2)) NOT BETWEEN ((((((x'')AND(v0.c0)))AND(v0.c0)), CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN x'2646' THEN v0.c0 ELSE v0.c0 END, UPPER(DISTINCT '-1556909032'), (- (rt0.c2)), (((rt0.c1))==((v0.c0))), ((rt0.c2)>(v0.c0)), ('0.4845380329103346' IN (v0.c0)))) AND (((((NULL))=((vt0.c0))), ((v0.c0)>(vt0.c0)), TRIM(rt0.c2), ((v0.c0)||(NULL)), ((rt0.c0) NOT NULL), vt0.c0, CASE v0.c0  WHEN rt0.c0 THEN v0.c0 END))) WHERE (((961205799) BETWEEN (((0.9479025401473599)LIKE(vt0.c0))) AND (vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)/(v0.c0)) IN ())) ORDER BY (((((v0.c0)AND(vt0.c0)))AND(v0.c0)) IN ()) ASC, ((x'')/((v0.c0 IN ()))) ASC, (NOT ((((v0.c0, vt0.c0, x'')) BETWEEN ((v0.c0, NULL, vt0.c0)) AND ((v0.c0, '0.08814829232751187', x''))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)/(v0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((v0.c0)AND(vt0.c0)))AND(v0.c0)) IN ()) ASC, ((x'')/((v0.c0 IN ()))) ASC, (NOT ((((v0.c0, vt0.c0, x'')) BETWEEN ((v0.c0, NULL, vt0.c0)) AND ((v0.c0, '0.08814829232751187', x''))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)/(v0.c0)) IN ())) ORDER BY (((((v0.c0)AND(vt0.c0)))AND(v0.c0)) IN ()) ASC, ((x'')/((v0.c0 IN ()))) ASC, (NOT ((((v0.c0, vt0.c0, x'')) BETWEEN ((v0.c0, NULL, vt0.c0)) AND ((v0.c0, '0.08814829232751187', x''))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)/(v0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((v0.c0)AND(vt0.c0)))AND(v0.c0)) IN ()) ASC, ((x'')/((v0.c0 IN ()))) ASC, (NOT ((((v0.c0, vt0.c0, x'')) BETWEEN ((v0.c0, NULL, vt0.c0)) AND ((v0.c0, '0.08814829232751187', x''))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)/(v0.c0)) IN ())) ORDER BY (((((v0.c0)AND(vt0.c0)))AND(v0.c0)) IN ()) ASC, ((x'')/((v0.c0 IN ()))) ASC, (NOT ((((v0.c0, vt0.c0, x'')) BETWEEN ((v0.c0, NULL, vt0.c0)) AND ((v0.c0, '0.08814829232751187', x''))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((((rt0.c0)IS(rt0.c2)))OR((vt0.c0 IN ()))))AND(UPPER(rt0.c1))) WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c0) ISNULL))) AND ((((rt0.c0)/(rt0.c2)))))) ORDER BY (((x'' IN ())) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((((rt0.c0) ISNULL))) AND ((((rt0.c0)/(rt0.c2)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((((rt0.c0)IS(rt0.c2)))OR((vt0.c0 IN ()))))AND(UPPER(rt0.c1))) ORDER BY (((x'' IN ())) NOT NULL));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((((rt0.c0)IS(rt0.c2)))OR((vt0.c0 IN ()))))AND(UPPER(rt0.c1))) WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c0) ISNULL))) AND ((((rt0.c0)/(rt0.c2)))))) ORDER BY (((x'' IN ())) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((((rt0.c0) ISNULL))) AND ((((rt0.c0)/(rt0.c2)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((((rt0.c0)IS(rt0.c2)))OR((vt0.c0 IN ()))))AND(UPPER(rt0.c1))) ORDER BY (((x'' IN ())) NOT NULL));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((((rt0.c0)IS(rt0.c2)))OR((vt0.c0 IN ()))))AND(UPPER(rt0.c1))) WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c0) ISNULL))) AND ((((rt0.c0)/(rt0.c2)))))) ORDER BY (((x'' IN ())) NOT NULL);
SELECT ALL * FROM rt0, v0 INNER JOIN vt0 ON ((rt0.c1) NOTNULL) WHERE ((((((rt0.c2) IS FALSE)))<>((NULL COLLATE BINARY)))) ORDER BY ((+ (vt0.c0)) IN (((v0.c0)|(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) IS FALSE)))<>((NULL COLLATE BINARY)))) IS TRUE)  as count FROM rt0, v0 INNER JOIN vt0 ON ((rt0.c1) NOTNULL) ORDER BY ((+ (vt0.c0)) IN (((v0.c0)|(rt0.c1)))));
SELECT ALL * FROM rt0, v0 INNER JOIN vt0 ON ((rt0.c1) NOTNULL) WHERE ((((((rt0.c2) IS FALSE)))<>((NULL COLLATE BINARY)))) ORDER BY ((+ (vt0.c0)) IN (((v0.c0)|(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) IS FALSE)))<>((NULL COLLATE BINARY)))) IS TRUE)  as count FROM rt0, v0 INNER JOIN vt0 ON ((rt0.c1) NOTNULL) ORDER BY ((+ (vt0.c0)) IN (((v0.c0)|(rt0.c1)))));
SELECT ALL * FROM rt0, v0 INNER JOIN vt0 ON ((rt0.c1) NOTNULL) WHERE ((((((rt0.c2) IS FALSE)))<>((NULL COLLATE BINARY)))) ORDER BY ((+ (vt0.c0)) IN (((v0.c0)|(rt0.c1))));
SELECT * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))OR((((rt0.c0))==((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))OR((((rt0.c0))==((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))OR((((rt0.c0))==((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))OR((((rt0.c0))==((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))OR((((rt0.c0))==((rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((NOT (CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((NOT (CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((NOT (CAST(rt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((+ (v0.c0)) COLLATE NOCASE) ORDER BY (NOT (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((+ (v0.c0)) COLLATE NOCASE) ORDER BY (NOT (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((+ (v0.c0)) COLLATE NOCASE) ORDER BY (NOT (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE ((((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR(rt0.c2)))OR(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END))) ORDER BY (- (CAST(rt0.c2 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR(rt0.c2)))OR(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (CAST(rt0.c2 AS TEXT)))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR(rt0.c2)))OR(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END))) ORDER BY (- (CAST(rt0.c2 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR(rt0.c2)))OR(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (CAST(rt0.c2 AS TEXT)))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))OR(rt0.c2)))OR(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END))) ORDER BY (- (CAST(rt0.c2 AS TEXT)))  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE (CASE ((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0))  WHEN ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) THEN v0.c0 COLLATE RTRIM END) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0))  WHEN ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) THEN v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (CASE ((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0))  WHEN ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) THEN v0.c0 COLLATE RTRIM END) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0))  WHEN ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) THEN v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (CASE ((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0))  WHEN ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) THEN v0.c0 COLLATE RTRIM END) ORDER BY v0.c0  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c1)||(vt0.c0)) ELSE ((rt0.c0)>>(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c1)||(vt0.c0)) ELSE ((rt0.c0)>>(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c1)||(vt0.c0)) ELSE ((rt0.c0)>>(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c1)||(vt0.c0)) ELSE ((rt0.c0)>>(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c1)||(vt0.c0)) ELSE ((rt0.c0)>>(vt0.c0)) END);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((NOT (0.7618681619432004)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.7618681619432004))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((NOT (0.7618681619432004)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.7618681619432004))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((NOT (0.7618681619432004)));
SELECT * FROM vt0 WHERE ((((NULL)) BETWEEN ((((vt0.c0)GLOB(vt0.c0)))) AND ((NULLIF(DISTINCT vt0.c0, vt0.c0))))) ORDER BY vt0.c0 ASC, CAST((((vt0.c0, vt0.c0, x'c165'))>((x'd03a', vt0.c0, vt0.c0))) AS INTEGER) DESC, vt0.c0 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((((vt0.c0)GLOB(vt0.c0)))) AND ((NULLIF(DISTINCT vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC, CAST((((vt0.c0, vt0.c0, x'c165'))>((x'd03a', vt0.c0, vt0.c0))) AS INTEGER) DESC, vt0.c0 COLLATE NOCASE DESC);
SELECT * FROM vt0 WHERE ((((NULL)) BETWEEN ((((vt0.c0)GLOB(vt0.c0)))) AND ((NULLIF(DISTINCT vt0.c0, vt0.c0))))) ORDER BY vt0.c0 ASC, CAST((((vt0.c0, vt0.c0, x'c165'))>((x'd03a', vt0.c0, vt0.c0))) AS INTEGER) DESC, vt0.c0 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((((vt0.c0)GLOB(vt0.c0)))) AND ((NULLIF(DISTINCT vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC, CAST((((vt0.c0, vt0.c0, x'c165'))>((x'd03a', vt0.c0, vt0.c0))) AS INTEGER) DESC, vt0.c0 COLLATE NOCASE DESC);
SELECT * FROM vt0 WHERE ((((NULL)) BETWEEN ((((vt0.c0)GLOB(vt0.c0)))) AND ((NULLIF(DISTINCT vt0.c0, vt0.c0))))) ORDER BY vt0.c0 ASC, CAST((((vt0.c0, vt0.c0, x'c165'))>((x'd03a', vt0.c0, vt0.c0))) AS INTEGER) DESC, vt0.c0 COLLATE NOCASE DESC;
SELECT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON vt0.c0 WHERE (((json_valid(rt0.c0)) NOTNULL)) ORDER BY (rt0.c1 COLLATE BINARY IN (vt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(rt0.c0)) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON vt0.c0 ORDER BY (rt0.c1 COLLATE BINARY IN (vt0.c0)) ASC  NULLS LAST);
SELECT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON vt0.c0 WHERE (((json_valid(rt0.c0)) NOTNULL)) ORDER BY (rt0.c1 COLLATE BINARY IN (vt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(rt0.c0)) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON vt0.c0 ORDER BY (rt0.c1 COLLATE BINARY IN (vt0.c0)) ASC  NULLS LAST);
SELECT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON vt0.c0 WHERE (((json_valid(rt0.c0)) NOTNULL)) ORDER BY (rt0.c1 COLLATE BINARY IN (vt0.c0)) ASC  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (CAST(rt0.c1 AS INTEGER) COLLATE NOCASE) ORDER BY (+ ('8\rxD')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY (+ ('8\rxD')) DESC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (CAST(rt0.c1 AS INTEGER) COLLATE NOCASE) ORDER BY (+ ('8\rxD')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY (+ ('8\rxD')) DESC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (CAST(rt0.c1 AS INTEGER) COLLATE NOCASE) ORDER BY (+ ('8\rxD')) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((~ (((v0.c0)<<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0)<<(v0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((~ (((v0.c0)<<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0)<<(v0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((~ (((v0.c0)<<(v0.c0)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON (((v0.c0)) BETWEEN ((-979882502)) AND ((((vt0.c0)<(vt0.c0))))) WHERE (CASE WHEN (- (v0.c0)) THEN x'f8aa' WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN CAST(vt0.c0 AS NUMERIC) THEN (((x''))<=((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (v0.c0)) THEN x'f8aa' WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN CAST(vt0.c0 AS NUMERIC) THEN (((x''))<=((vt0.c0))) END) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((v0.c0)) BETWEEN ((-979882502)) AND ((((vt0.c0)<(vt0.c0))))));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON (((v0.c0)) BETWEEN ((-979882502)) AND ((((vt0.c0)<(vt0.c0))))) WHERE (CASE WHEN (- (v0.c0)) THEN x'f8aa' WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN CAST(vt0.c0 AS NUMERIC) THEN (((x''))<=((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (v0.c0)) THEN x'f8aa' WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN CAST(vt0.c0 AS NUMERIC) THEN (((x''))<=((vt0.c0))) END) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((v0.c0)) BETWEEN ((-979882502)) AND ((((vt0.c0)<(vt0.c0))))));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON (((v0.c0)) BETWEEN ((-979882502)) AND ((((vt0.c0)<(vt0.c0))))) WHERE (CASE WHEN (- (v0.c0)) THEN x'f8aa' WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 WHEN CAST(vt0.c0 AS NUMERIC) THEN (((x''))<=((vt0.c0))) END);
SELECT * FROM v0, vt0, rt0 WHERE (((0.4188995514556215)>(UNLIKELY(v0.c0)))) ORDER BY CASE WHEN ((rt0.c1)>(vt0.c0)) THEN v0.c0 WHEN ((v0.c0) ISNULL) THEN json_valid(vt0.c0) WHEN (vt0.c0 IN (rt0.c0)) THEN x'' ELSE CAST(rt0.c2 AS REAL) END;
SELECT SUM(count) FROM (SELECT ((((0.4188995514556215)>(UNLIKELY(v0.c0)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE WHEN ((rt0.c1)>(vt0.c0)) THEN v0.c0 WHEN ((v0.c0) ISNULL) THEN json_valid(vt0.c0) WHEN (vt0.c0 IN (rt0.c0)) THEN x'' ELSE CAST(rt0.c2 AS REAL) END);
SELECT * FROM v0, vt0, rt0 WHERE (((0.4188995514556215)>(UNLIKELY(v0.c0)))) ORDER BY CASE WHEN ((rt0.c1)>(vt0.c0)) THEN v0.c0 WHEN ((v0.c0) ISNULL) THEN json_valid(vt0.c0) WHEN (vt0.c0 IN (rt0.c0)) THEN x'' ELSE CAST(rt0.c2 AS REAL) END;
SELECT SUM(count) FROM (SELECT ((((0.4188995514556215)>(UNLIKELY(v0.c0)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE WHEN ((rt0.c1)>(vt0.c0)) THEN v0.c0 WHEN ((v0.c0) ISNULL) THEN json_valid(vt0.c0) WHEN (vt0.c0 IN (rt0.c0)) THEN x'' ELSE CAST(rt0.c2 AS REAL) END);
SELECT * FROM v0, vt0, rt0 WHERE (((0.4188995514556215)>(UNLIKELY(v0.c0)))) ORDER BY CASE WHEN ((rt0.c1)>(vt0.c0)) THEN v0.c0 WHEN ((v0.c0) ISNULL) THEN json_valid(vt0.c0) WHEN (vt0.c0 IN (rt0.c0)) THEN x'' ELSE CAST(rt0.c2 AS REAL) END;
SELECT * FROM v0, vt0 WHERE (((((CAST(vt0.c0 AS REAL))AND(NULL)))OR(v0.c0))) ORDER BY (((v0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((LIKELY(DISTINCT v0.c0)))) DESC, CASE WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN ((((NULL)OR(v0.c0)))OR(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (('i7&^') IS TRUE) WHEN ((((v0.c0)AND(vt0.c0)))OR(v0.c0)) THEN ((vt0.c0)>(v0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS REAL))AND(NULL)))OR(v0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((LIKELY(DISTINCT v0.c0)))) DESC, CASE WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN ((((NULL)OR(v0.c0)))OR(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (('i7&^') IS TRUE) WHEN ((((v0.c0)AND(vt0.c0)))OR(v0.c0)) THEN ((vt0.c0)>(v0.c0)) END ASC);
SELECT * FROM v0, vt0 WHERE (((((CAST(vt0.c0 AS REAL))AND(NULL)))OR(v0.c0))) ORDER BY (((v0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((LIKELY(DISTINCT v0.c0)))) DESC, CASE WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN ((((NULL)OR(v0.c0)))OR(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (('i7&^') IS TRUE) WHEN ((((v0.c0)AND(vt0.c0)))OR(v0.c0)) THEN ((vt0.c0)>(v0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS REAL))AND(NULL)))OR(v0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((LIKELY(DISTINCT v0.c0)))) DESC, CASE WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN ((((NULL)OR(v0.c0)))OR(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (('i7&^') IS TRUE) WHEN ((((v0.c0)AND(vt0.c0)))OR(v0.c0)) THEN ((vt0.c0)>(v0.c0)) END ASC);
SELECT * FROM v0, vt0 WHERE (((((CAST(vt0.c0 AS REAL))AND(NULL)))OR(v0.c0))) ORDER BY (((v0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((LIKELY(DISTINCT v0.c0)))) DESC, CASE WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN ((((NULL)OR(v0.c0)))OR(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (('i7&^') IS TRUE) WHEN ((((v0.c0)AND(vt0.c0)))OR(v0.c0)) THEN ((vt0.c0)>(v0.c0)) END ASC;
SELECT ALL * FROM rt0 NOT INDEXED, v0, vt0 WHERE (TYPEOF(CAST(rt0.c1 AS NUMERIC))) ORDER BY (+ (rt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(CAST(rt0.c1 AS NUMERIC))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (+ (rt0.c0)) COLLATE RTRIM ASC);
SELECT ALL * FROM rt0 NOT INDEXED, v0, vt0 WHERE (TYPEOF(CAST(rt0.c1 AS NUMERIC))) ORDER BY (+ (rt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(CAST(rt0.c1 AS NUMERIC))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (+ (rt0.c0)) COLLATE RTRIM ASC);
SELECT ALL * FROM rt0 NOT INDEXED, v0, vt0 WHERE (TYPEOF(CAST(rt0.c1 AS NUMERIC))) ORDER BY (+ (rt0.c0)) COLLATE RTRIM ASC;
SELECT * FROM vt0, rt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0)>(rt0.c0)) THEN rt0.c1 COLLATE BINARY WHEN ((rt0.c2)<(0.9106750782094748)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN NULL THEN ((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN ((vt0.c0)>(rt0.c0)) THEN rt0.c1 COLLATE BINARY WHEN ((rt0.c2)<(0.9106750782094748)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN NULL THEN ((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0)>(rt0.c0)) THEN rt0.c1 COLLATE BINARY WHEN ((rt0.c2)<(0.9106750782094748)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN NULL THEN ((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN ((vt0.c0)>(rt0.c0)) THEN rt0.c1 COLLATE BINARY WHEN ((rt0.c2)<(0.9106750782094748)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN NULL THEN ((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0)>(rt0.c0)) THEN rt0.c1 COLLATE BINARY WHEN ((rt0.c2)<(0.9106750782094748)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN NULL THEN ((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) END);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)>(rt0.c2))) NOT BETWEEN ((((('^쟊la뜊|')AND(rt0.c1)))OR(rt0.c0))) AND (((rt0.c2)*(rt0.c2))))) ORDER BY IFNULL(NULL, 0.5414506057730415) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>(rt0.c2))) NOT BETWEEN ((((('^쟊la뜊|')AND(rt0.c1)))OR(rt0.c0))) AND (((rt0.c2)*(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY IFNULL(NULL, 0.5414506057730415) ASC);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)>(rt0.c2))) NOT BETWEEN ((((('^쟊la뜊|')AND(rt0.c1)))OR(rt0.c0))) AND (((rt0.c2)*(rt0.c2))))) ORDER BY IFNULL(NULL, 0.5414506057730415) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>(rt0.c2))) NOT BETWEEN ((((('^쟊la뜊|')AND(rt0.c1)))OR(rt0.c0))) AND (((rt0.c2)*(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY IFNULL(NULL, 0.5414506057730415) ASC);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)>(rt0.c2))) NOT BETWEEN ((((('^쟊la뜊|')AND(rt0.c1)))OR(rt0.c0))) AND (((rt0.c2)*(rt0.c2))))) ORDER BY IFNULL(NULL, 0.5414506057730415) ASC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN ((v0.c0) NOT NULL) THEN 0.05304261934643861 WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN COALESCE(rt0.c1, rt0.c0) WHEN CAST(v0.c0 AS INTEGER) THEN rt0.c1 COLLATE NOCASE WHEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(v0.c0)) THEN ((rt0.c1)|(rt0.c0)) WHEN rt0.c1 THEN (((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) NOT NULL) THEN 0.05304261934643861 WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN COALESCE(rt0.c1, rt0.c0) WHEN CAST(v0.c0 AS INTEGER) THEN rt0.c1 COLLATE NOCASE WHEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(v0.c0)) THEN ((rt0.c1)|(rt0.c0)) WHEN rt0.c1 THEN (((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1))) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN ((v0.c0) NOT NULL) THEN 0.05304261934643861 WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN COALESCE(rt0.c1, rt0.c0) WHEN CAST(v0.c0 AS INTEGER) THEN rt0.c1 COLLATE NOCASE WHEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(v0.c0)) THEN ((rt0.c1)|(rt0.c0)) WHEN rt0.c1 THEN (((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) NOT NULL) THEN 0.05304261934643861 WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN COALESCE(rt0.c1, rt0.c0) WHEN CAST(v0.c0 AS INTEGER) THEN rt0.c1 COLLATE NOCASE WHEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(v0.c0)) THEN ((rt0.c1)|(rt0.c0)) WHEN rt0.c1 THEN (((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1))) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN ((v0.c0) NOT NULL) THEN 0.05304261934643861 WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN COALESCE(rt0.c1, rt0.c0) WHEN CAST(v0.c0 AS INTEGER) THEN rt0.c1 COLLATE NOCASE WHEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(v0.c0)) THEN ((rt0.c1)|(rt0.c0)) WHEN rt0.c1 THEN (((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1))) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c2)IS(rt0.c2)))AND(LIKELY(rt0.c0))))OR((((rt0.c2, '', rt0.c2))!=((rt0.c0, rt0.c1, rt0.c1))))))OR(((((((((x'e47b')AND(rt0.c2)))AND(rt0.c0)))OR(0xffffffff9320edb9)))OR(rt0.c0)))))OR(((rt0.c2) BETWEEN (NULL) AND (x'')))))AND((((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, 0.12356754267612169, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c1, rt0.c0))))))AND(((rt0.c2)/(rt0.c1))))) ORDER BY rt0.c2  NULLS LAST, 0xffffffffb726924c, (- ((((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((x'', rt0.c0, rt0.c1)) AND ((rt0.c1, NULL, rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c2)IS(rt0.c2)))AND(LIKELY(rt0.c0))))OR((((rt0.c2, '', rt0.c2))<>((rt0.c0, rt0.c1, rt0.c1))))))OR(((((((((x'e47b')AND(rt0.c2)))AND(rt0.c0)))OR(0Xffffffff9320edb9)))OR(rt0.c0)))))OR(((rt0.c2) BETWEEN (NULL) AND (x'')))))AND((((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, 0.12356754267612169, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c1, rt0.c0))))))AND(((rt0.c2)/(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS LAST, 0Xffffffffb726924c, (- ((((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((x'', rt0.c0, rt0.c1)) AND ((rt0.c1, NULL, rt0.c2))))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c2)IS(rt0.c2)))AND(LIKELY(rt0.c0))))OR((((rt0.c2, '', rt0.c2))!=((rt0.c0, rt0.c1, rt0.c1))))))OR(((((((((x'e47b')AND(rt0.c2)))AND(rt0.c0)))OR(0xffffffff9320edb9)))OR(rt0.c0)))))OR(((rt0.c2) BETWEEN (NULL) AND (x'')))))AND((((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, 0.12356754267612169, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c1, rt0.c0))))))AND(((rt0.c2)/(rt0.c1))))) ORDER BY rt0.c2  NULLS LAST, 0xffffffffb726924c, (- ((((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((x'', rt0.c0, rt0.c1)) AND ((rt0.c1, NULL, rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c2)IS(rt0.c2)))AND(LIKELY(rt0.c0))))OR((((rt0.c2, '', rt0.c2))<>((rt0.c0, rt0.c1, rt0.c1))))))OR(((((((((x'e47b')AND(rt0.c2)))AND(rt0.c0)))OR(0Xffffffff9320edb9)))OR(rt0.c0)))))OR(((rt0.c2) BETWEEN (NULL) AND (x'')))))AND((((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, 0.12356754267612169, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c1, rt0.c0))))))AND(((rt0.c2)/(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS LAST, 0Xffffffffb726924c, (- ((((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((x'', rt0.c0, rt0.c1)) AND ((rt0.c1, NULL, rt0.c2))))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c2)IS(rt0.c2)))AND(LIKELY(rt0.c0))))OR((((rt0.c2, '', rt0.c2))!=((rt0.c0, rt0.c1, rt0.c1))))))OR(((((((((x'e47b')AND(rt0.c2)))AND(rt0.c0)))OR(0xffffffff9320edb9)))OR(rt0.c0)))))OR(((rt0.c2) BETWEEN (NULL) AND (x'')))))AND((((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, 0.12356754267612169, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c1, rt0.c0))))))AND(((rt0.c2)/(rt0.c1))))) ORDER BY rt0.c2  NULLS LAST, 0xffffffffb726924c, (- ((((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((x'', rt0.c0, rt0.c1)) AND ((rt0.c1, NULL, rt0.c2))))) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((+ (ROUND('|M៮Cc', rt0.c2))));
SELECT SUM(count) FROM (SELECT (((+ (ROUND('|M៮Cc', rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (ROUND('|M៮Cc', rt0.c2))));
SELECT SUM(count) FROM (SELECT (((+ (ROUND('|M៮Cc', rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (ROUND('|M៮Cc', rt0.c2))));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((''))>((rt0.c0))) IN ())) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN -1507339137 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((''))>((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN -1507339137 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((''))>((rt0.c0))) IN ())) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN -1507339137 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((''))>((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN -1507339137 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((''))>((rt0.c0))) IN ())) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN -1507339137 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END IN ())  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)LIKE((((vt0.c0))=(('-1937734226'))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)LIKE((((vt0.c0))==(('-1937734226')))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)LIKE((((vt0.c0))=(('-1937734226'))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)LIKE((((vt0.c0))==(('-1937734226')))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)LIKE((((vt0.c0))=(('-1937734226'))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND('1217377394')))AND(vt0.c0)))))OR(0.8663461375085323)))OR(x'')))OR((vt0.c0 IN ())))) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND('1217377394')))AND(vt0.c0)))))OR(0.8663461375085323)))OR(x'')))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE RTRIM AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND('1217377394')))AND(vt0.c0)))))OR(0.8663461375085323)))OR(x'')))OR((vt0.c0 IN ())))) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND('1217377394')))AND(vt0.c0)))))OR(0.8663461375085323)))OR(x'')))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE RTRIM AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND('1217377394')))AND(vt0.c0)))))OR(0.8663461375085323)))OR(x'')))OR((vt0.c0 IN ())))) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS INTEGER);
SELECT ALL COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON ((((rt0.c2) NOTNULL)) NOT BETWEEN ((+ (vt0.c0))) AND (rt0.c2)) WHERE ((CAST(rt0.c1 AS BLOB) IN ())) ORDER BY (((rt0.c0 IN ())) NOTNULL);
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS BLOB) IN ())) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON ((((rt0.c2) NOTNULL)) NOT BETWEEN ((+ (vt0.c0))) AND (rt0.c2)) ORDER BY (((rt0.c0 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON ((((rt0.c2) NOTNULL)) NOT BETWEEN ((+ (vt0.c0))) AND (rt0.c2)) WHERE ((CAST(rt0.c1 AS BLOB) IN ())) ORDER BY (((rt0.c0 IN ())) NOTNULL);
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS BLOB) IN ())) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON ((((rt0.c2) NOTNULL)) NOT BETWEEN ((+ (vt0.c0))) AND (rt0.c2)) ORDER BY (((rt0.c0 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON ((((rt0.c2) NOTNULL)) NOT BETWEEN ((+ (vt0.c0))) AND (rt0.c2)) WHERE ((CAST(rt0.c1 AS BLOB) IN ())) ORDER BY (((rt0.c0 IN ())) NOTNULL);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ()))AND(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))AND(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ()))AND(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))AND(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ()))AND(v0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((((v0.c0)) BETWEEN ((x'2154512b')) AND ((vt0.c0))) IN (((0.029851868220522992)*(v0.c0))))) ORDER BY ((((v0.c0)OR(v0.c0)))>(COALESCE(DISTINCT 0.4295522253901465, v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)) BETWEEN ((x'2154512b')) AND ((vt0.c0))) IN (((0.029851868220522992)*(v0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY ((((v0.c0)OR(v0.c0)))>(COALESCE(DISTINCT 0.4295522253901465, v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((((v0.c0)) BETWEEN ((x'2154512b')) AND ((vt0.c0))) IN (((0.029851868220522992)*(v0.c0))))) ORDER BY ((((v0.c0)OR(v0.c0)))>(COALESCE(DISTINCT 0.4295522253901465, v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)) BETWEEN ((x'2154512b')) AND ((vt0.c0))) IN (((0.029851868220522992)*(v0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY ((((v0.c0)OR(v0.c0)))>(COALESCE(DISTINCT 0.4295522253901465, v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((((v0.c0)) BETWEEN ((x'2154512b')) AND ((vt0.c0))) IN (((0.029851868220522992)*(v0.c0))))) ORDER BY ((((v0.c0)OR(v0.c0)))>(COALESCE(DISTINCT 0.4295522253901465, v0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((((v0.c0)AND(rt0.c0))))) INNER JOIN v0 ON CASE WHEN (+ (v0.c0)) THEN (vt0.c0 IN ()) WHEN (((vt0.c0))>=((rt0.c2))) THEN rt0.c2 WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)) THEN rt0.c1 ELSE ((x'')IS(rt0.c2)) END WHERE (CAST(((rt0.c2) NOT BETWEEN (v0.c0) AND (vt0.c0)) AS REAL)) ORDER BY ((((((((((rt0.c1)/(rt0.c1)))OR((- (rt0.c0)))))AND(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 END)))AND(((rt0.c1)==(rt0.c1)))))AND(((v0.c0)OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT BETWEEN (v0.c0) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((((v0.c0)AND(rt0.c0))))) INNER JOIN v0 ON CASE WHEN (+ (v0.c0)) THEN (vt0.c0 IN ()) WHEN (((vt0.c0))>=((rt0.c2))) THEN rt0.c2 WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)) THEN rt0.c1 ELSE ((x'')IS(rt0.c2)) END ORDER BY ((((((((((rt0.c1)/(rt0.c1)))OR((- (rt0.c0)))))AND(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 END)))AND(((rt0.c1)==(rt0.c1)))))AND(((v0.c0)OR(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((((v0.c0)AND(rt0.c0))))) INNER JOIN v0 ON CASE WHEN (+ (v0.c0)) THEN (vt0.c0 IN ()) WHEN (((vt0.c0))>=((rt0.c2))) THEN rt0.c2 WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)) THEN rt0.c1 ELSE ((x'')IS(rt0.c2)) END WHERE (CAST(((rt0.c2) NOT BETWEEN (v0.c0) AND (vt0.c0)) AS REAL)) ORDER BY ((((((((((rt0.c1)/(rt0.c1)))OR((- (rt0.c0)))))AND(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 END)))AND(((rt0.c1)==(rt0.c1)))))AND(((v0.c0)OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT BETWEEN (v0.c0) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((((v0.c0)AND(rt0.c0))))) INNER JOIN v0 ON CASE WHEN (+ (v0.c0)) THEN (vt0.c0 IN ()) WHEN (((vt0.c0))>=((rt0.c2))) THEN rt0.c2 WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)) THEN rt0.c1 ELSE ((x'')IS(rt0.c2)) END ORDER BY ((((((((((rt0.c1)/(rt0.c1)))OR((- (rt0.c0)))))AND(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 END)))AND(((rt0.c1)==(rt0.c1)))))AND(((v0.c0)OR(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((((v0.c0)AND(rt0.c0))))) INNER JOIN v0 ON CASE WHEN (+ (v0.c0)) THEN (vt0.c0 IN ()) WHEN (((vt0.c0))>=((rt0.c2))) THEN rt0.c2 WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)) THEN rt0.c1 ELSE ((x'')IS(rt0.c2)) END WHERE (CAST(((rt0.c2) NOT BETWEEN (v0.c0) AND (vt0.c0)) AS REAL)) ORDER BY ((((((((((rt0.c1)/(rt0.c1)))OR((- (rt0.c0)))))AND(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 END)))AND(((rt0.c1)==(rt0.c1)))))AND(((v0.c0)OR(rt0.c1))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((+ (NULL)))>>((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (NULL)))>>((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((+ (NULL)))>>((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (NULL)))>>((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((+ (NULL)))>>((~ (rt0.c2)))));
SELECT * FROM v0 WHERE ((~ (v0.c0)) COLLATE BINARY) ORDER BY (((+ (v0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((+ (v0.c0))) NOTNULL)  NULLS LAST);
SELECT * FROM v0 WHERE ((~ (v0.c0)) COLLATE BINARY) ORDER BY (((+ (v0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((+ (v0.c0))) NOTNULL)  NULLS LAST);
SELECT * FROM v0 WHERE ((~ (v0.c0)) COLLATE BINARY) ORDER BY (((+ (v0.c0))) NOTNULL)  NULLS LAST;
SELECT * FROM v0 WHERE ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))>((((x'')<(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))>((((x'')<(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))>((((x'')<(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))>((((x'')<(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))>((((x'')<(v0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (((((NULL) IS TRUE)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) IS TRUE)) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((NULL) IS TRUE)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) IS TRUE)) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((NULL) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0 WHERE ((((x'68e5'))<=((((rt0.c0)<<(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((x'68e5'))<=((((rt0.c0)<<(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((x'68e5'))<=((((rt0.c0)<<(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((x'68e5'))<=((((rt0.c0)<<(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((x'68e5'))<=((((rt0.c0)<<(rt0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE ((('-1507122259')-(TYPEOF(rt0.c2)))) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS TEXT), CASE ((((((((x'')OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2))  WHEN NULLIF(DISTINCT rt0.c0, rt0.c1) THEN CASE WHEN rt0.c1 THEN rt0.c0 END ELSE (rt0.c0 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((('-1507122259')-(TYPEOF(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 COLLATE RTRIM AS TEXT), CASE ((((((((x'')OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2))  WHEN NULLIF(DISTINCT rt0.c0, rt0.c1) THEN CASE WHEN rt0.c1 THEN rt0.c0 END ELSE (rt0.c0 IN ()) END DESC);
SELECT COUNT(*) FROM rt0 WHERE ((('-1507122259')-(TYPEOF(rt0.c2)))) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS TEXT), CASE ((((((((x'')OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2))  WHEN NULLIF(DISTINCT rt0.c0, rt0.c1) THEN CASE WHEN rt0.c1 THEN rt0.c0 END ELSE (rt0.c0 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((('-1507122259')-(TYPEOF(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 COLLATE RTRIM AS TEXT), CASE ((((((((x'')OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2))  WHEN NULLIF(DISTINCT rt0.c0, rt0.c1) THEN CASE WHEN rt0.c1 THEN rt0.c0 END ELSE (rt0.c0 IN ()) END DESC);
SELECT COUNT(*) FROM rt0 WHERE ((('-1507122259')-(TYPEOF(rt0.c2)))) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS TEXT), CASE ((((((((x'')OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2))  WHEN NULLIF(DISTINCT rt0.c0, rt0.c1) THEN CASE WHEN rt0.c1 THEN rt0.c0 END ELSE (rt0.c0 IN ()) END DESC;
SELECT ALL * FROM v0 WHERE ((NOT (v0.c0)) COLLATE BINARY) ORDER BY (~ ((((v0.c0))<((v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (~ ((((v0.c0))<((v0.c0)))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((NOT (v0.c0)) COLLATE BINARY) ORDER BY (~ ((((v0.c0))<((v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (~ ((((v0.c0))<((v0.c0)))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((NOT (v0.c0)) COLLATE BINARY) ORDER BY (~ ((((v0.c0))<((v0.c0)))))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))LIKE(((v0.c0)-(v0.c0))))) ORDER BY (+ (v0.c0)) COLLATE BINARY DESC, ((CAST(v0.c0 AS BLOB))<>(LIKELIHOOD(v0.c0, 0.7162334429549106)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))LIKE(((v0.c0)-(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0)) COLLATE BINARY DESC, ((CAST(v0.c0 AS BLOB))<>(LIKELIHOOD(v0.c0, 0.7162334429549106))));
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))LIKE(((v0.c0)-(v0.c0))))) ORDER BY (+ (v0.c0)) COLLATE BINARY DESC, ((CAST(v0.c0 AS BLOB))<>(LIKELIHOOD(v0.c0, 0.7162334429549106)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))LIKE(((v0.c0)-(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0)) COLLATE BINARY DESC, ((CAST(v0.c0 AS BLOB))<>(LIKELIHOOD(v0.c0, 0.7162334429549106))));
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))LIKE(((v0.c0)-(v0.c0))))) ORDER BY (+ (v0.c0)) COLLATE BINARY DESC, ((CAST(v0.c0 AS BLOB))<>(LIKELIHOOD(v0.c0, 0.7162334429549106)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (x'7c0d' COLLATE BINARY) ORDER BY SQLITE_VERSION() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'7c0d' COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 ORDER BY SQLITE_VERSION() ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (x'7c0d' COLLATE BINARY) ORDER BY SQLITE_VERSION() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'7c0d' COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 ORDER BY SQLITE_VERSION() ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (x'7c0d' COLLATE BINARY) ORDER BY SQLITE_VERSION() ASC  NULLS LAST;
SELECT ALL * FROM v0, vt0, rt0 WHERE (CASE NULL  WHEN CAST(rt0.c0 AS BLOB) THEN ((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)) WHEN vt0.c0 COLLATE BINARY THEN v0.c0 WHEN ((rt0.c1)!=(vt0.c0)) THEN ((rt0.c0) IS TRUE) ELSE ((vt0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN CAST(rt0.c0 AS BLOB) THEN ((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)) WHEN vt0.c0 COLLATE BINARY THEN v0.c0 WHEN ((rt0.c1)!=(vt0.c0)) THEN ((rt0.c0) IS TRUE) ELSE ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CASE NULL  WHEN CAST(rt0.c0 AS BLOB) THEN ((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)) WHEN vt0.c0 COLLATE BINARY THEN v0.c0 WHEN ((rt0.c1)!=(vt0.c0)) THEN ((rt0.c0) IS TRUE) ELSE ((vt0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN CAST(rt0.c0 AS BLOB) THEN ((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)) WHEN vt0.c0 COLLATE BINARY THEN v0.c0 WHEN ((rt0.c1)!=(vt0.c0)) THEN ((rt0.c0) IS TRUE) ELSE ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CASE NULL  WHEN CAST(rt0.c0 AS BLOB) THEN ((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)) WHEN vt0.c0 COLLATE BINARY THEN v0.c0 WHEN ((rt0.c1)!=(vt0.c0)) THEN ((rt0.c0) IS TRUE) ELSE ((vt0.c0) ISNULL) END);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE x'50f0' END)<>(v0.c0))) ORDER BY (((((vt0.c0 IN ()))AND(v0.c0)))OR('-157544751')) DESC, (+ (x'')) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE x'50f0' END)<>(v0.c0))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY (((((vt0.c0 IN ()))AND(v0.c0)))OR('-157544751')) DESC, (+ (x'')) COLLATE BINARY);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE x'50f0' END)<>(v0.c0))) ORDER BY (((((vt0.c0 IN ()))AND(v0.c0)))OR('-157544751')) DESC, (+ (x'')) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE x'50f0' END)<>(v0.c0))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY (((((vt0.c0 IN ()))AND(v0.c0)))OR('-157544751')) DESC, (+ (x'')) COLLATE BINARY);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE x'50f0' END)<>(v0.c0))) ORDER BY (((((vt0.c0 IN ()))AND(v0.c0)))OR('-157544751')) DESC, (+ (x'')) COLLATE BINARY;
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((TRIM(rt0.c2, vt0.c0))*(rt0.c0)) INNER JOIN rt0 ON (~ ('1658722659')) WHERE (((NULL)<<((((rt0.c1))==((rt0.c0)))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')))LIKE(((rt0.c1)IS NOT(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<<((((rt0.c1))=((rt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((TRIM(rt0.c2, vt0.c0))*(rt0.c0)) INNER JOIN rt0 ON (~ ('1658722659')) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')))LIKE(((rt0.c1)IS NOT(rt0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((TRIM(rt0.c2, vt0.c0))*(rt0.c0)) INNER JOIN rt0 ON (~ ('1658722659')) WHERE (((NULL)<<((((rt0.c1))==((rt0.c0)))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')))LIKE(((rt0.c1)IS NOT(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<<((((rt0.c1))=((rt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((TRIM(rt0.c2, vt0.c0))*(rt0.c0)) INNER JOIN rt0 ON (~ ('1658722659')) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')))LIKE(((rt0.c1)IS NOT(rt0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((TRIM(rt0.c2, vt0.c0))*(rt0.c0)) INNER JOIN rt0 ON (~ ('1658722659')) WHERE (((NULL)<<((((rt0.c1))==((rt0.c0)))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')))LIKE(((rt0.c1)IS NOT(rt0.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((QUOTE(vt0.c0)) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((QUOTE(vt0.c0)) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((QUOTE(vt0.c0)) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((QUOTE(vt0.c0)) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((QUOTE(vt0.c0)) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt0, v0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (rt0.c1);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0)OR(v0.c0))) BETWEEN ((((0.5162266483626842))>((vt0.c0)))) AND (((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(v0.c0))) BETWEEN ((((0.5162266483626842))>((vt0.c0)))) AND (((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0)OR(v0.c0))) BETWEEN ((((0.5162266483626842))>((vt0.c0)))) AND (((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(v0.c0))) BETWEEN ((((0.5162266483626842))>((vt0.c0)))) AND (((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0)OR(v0.c0))) BETWEEN ((((0.5162266483626842))>((vt0.c0)))) AND (((vt0.c0)-(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (rt0.c0) ORDER BY ((x'ab29') BETWEEN (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c0))) AND (vt0.c0))  NULLS LAST, ((0.5508670805538409) BETWEEN (((vt0.c0) IS TRUE)) AND ((v0.c0 IN ())))  NULLS LAST, CAST(((rt0.c2)<('\n荨2/퉠U4')) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((x'ab29') BETWEEN (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c0))) AND (vt0.c0))  NULLS LAST, ((0.5508670805538409) BETWEEN (((vt0.c0) IS TRUE)) AND ((v0.c0 IN ())))  NULLS LAST, CAST(((rt0.c2)<('\n荨2/퉠U4')) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (rt0.c0) ORDER BY ((x'ab29') BETWEEN (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c0))) AND (vt0.c0))  NULLS LAST, ((0.5508670805538409) BETWEEN (((vt0.c0) IS TRUE)) AND ((v0.c0 IN ())))  NULLS LAST, CAST(((rt0.c2)<('\n荨2/퉠U4')) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((x'ab29') BETWEEN (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c0))) AND (vt0.c0))  NULLS LAST, ((0.5508670805538409) BETWEEN (((vt0.c0) IS TRUE)) AND ((v0.c0 IN ())))  NULLS LAST, CAST(((rt0.c2)<('\n荨2/퉠U4')) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (rt0.c0) ORDER BY ((x'ab29') BETWEEN (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c0))) AND (vt0.c0))  NULLS LAST, ((0.5508670805538409) BETWEEN (((vt0.c0) IS TRUE)) AND ((v0.c0 IN ())))  NULLS LAST, CAST(((rt0.c2)<('\n荨2/퉠U4')) AS NUMERIC);
SELECT COUNT(*) FROM rt0, v0 WHERE (0.4204936314140021) ORDER BY (- (QUOTE(rt0.c1))) DESC, json_extract(((rt0.c0)+('-687911321')), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((0.4204936314140021) IS TRUE)  as count FROM rt0, v0 ORDER BY (- (QUOTE(rt0.c1))) DESC, json_extract(((rt0.c0)+('-687911321')), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT COUNT(*) FROM rt0, v0 WHERE (0.4204936314140021) ORDER BY (- (QUOTE(rt0.c1))) DESC, json_extract(((rt0.c0)+('-687911321')), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((0.4204936314140021) IS TRUE)  as count FROM rt0, v0 ORDER BY (- (QUOTE(rt0.c1))) DESC, json_extract(((rt0.c0)+('-687911321')), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT COUNT(*) FROM rt0, v0 WHERE (0.4204936314140021) ORDER BY (- (QUOTE(rt0.c1))) DESC, json_extract(((rt0.c0)+('-687911321')), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)));
SELECT ALL * FROM v0, rt0, vt0 WHERE (x'e6aa') ORDER BY ((x'573cbf5b') NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'e6aa') IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((x'573cbf5b') NOT NULL)  NULLS LAST);
SELECT ALL * FROM v0, rt0, vt0 WHERE (x'e6aa') ORDER BY ((x'573cbf5b') NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'e6aa') IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((x'573cbf5b') NOT NULL)  NULLS LAST);
SELECT ALL * FROM v0, rt0, vt0 WHERE (x'e6aa') ORDER BY ((x'573cbf5b') NOT NULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY CASE WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c2)>(rt0.c2)) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c2)>(rt0.c2)) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY CASE WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c2)>(rt0.c2)) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c2)>(rt0.c2)) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY CASE WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c2)>(rt0.c2)) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) END  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN (((v0.c0, vt0.c0, vt0.c0))<((v0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) ELSE ((vt0.c0)>=(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS NUMERIC)  WHEN (((v0.c0, vt0.c0, vt0.c0))<((v0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) ELSE ((vt0.c0)>=(v0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN (((v0.c0, vt0.c0, vt0.c0))<((v0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) ELSE ((vt0.c0)>=(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS NUMERIC)  WHEN (((v0.c0, vt0.c0, vt0.c0))<((v0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) ELSE ((vt0.c0)>=(v0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN (((v0.c0, vt0.c0, vt0.c0))<((v0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) ELSE ((vt0.c0)>=(v0.c0)) END);
SELECT ALL * FROM rt0, v0 NATURAL JOIN vt0 WHERE (x'744f') ORDER BY (((((((vt0.c0, NULL, rt0.c2))<((NULL, rt0.c2, v0.c0))))AND(((vt0.c0)|(vt0.c0)))))OR(LIKELY(rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'744f') IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0 ORDER BY (((((((vt0.c0, NULL, rt0.c2))<((NULL, rt0.c2, v0.c0))))AND(((vt0.c0)|(vt0.c0)))))OR(LIKELY(rt0.c2)))  NULLS LAST);
SELECT ALL * FROM rt0, v0 NATURAL JOIN vt0 WHERE (x'744f') ORDER BY (((((((vt0.c0, NULL, rt0.c2))<((NULL, rt0.c2, v0.c0))))AND(((vt0.c0)|(vt0.c0)))))OR(LIKELY(rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'744f') IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0 ORDER BY (((((((vt0.c0, NULL, rt0.c2))<((NULL, rt0.c2, v0.c0))))AND(((vt0.c0)|(vt0.c0)))))OR(LIKELY(rt0.c2)))  NULLS LAST);
SELECT ALL * FROM rt0, v0 NATURAL JOIN vt0 WHERE (x'744f') ORDER BY (((((((vt0.c0, NULL, rt0.c2))<((NULL, rt0.c2, v0.c0))))AND(((vt0.c0)|(vt0.c0)))))OR(LIKELY(rt0.c2)))  NULLS LAST;
SELECT * FROM v0 WHERE (x'9589a335');
SELECT SUM(count) FROM (SELECT ALL ((x'9589a335') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (x'9589a335');
SELECT SUM(count) FROM (SELECT ALL ((x'9589a335') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (x'9589a335');
SELECT ALL * FROM rt0, vt0, v0 WHERE ((rt0.c2 COLLATE RTRIM IN ())) ORDER BY ((NULL)*(rt0.c2 COLLATE RTRIM))  NULLS FIRST, ((((rt0.c0, rt0.c0, rt0.c0, rt0.c2, 0.1025166181046997)) BETWEEN ((rt0.c0, rt0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, x'', x'', v0.c0, rt0.c2))) IN ());
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((NULL)*(rt0.c2 COLLATE RTRIM))  NULLS FIRST, ((((rt0.c0, rt0.c0, rt0.c0, rt0.c2, 0.1025166181046997)) BETWEEN ((rt0.c0, rt0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, x'', x'', v0.c0, rt0.c2))) IN ()));
SELECT ALL * FROM rt0, vt0, v0 WHERE ((rt0.c2 COLLATE RTRIM IN ())) ORDER BY ((NULL)*(rt0.c2 COLLATE RTRIM))  NULLS FIRST, ((((rt0.c0, rt0.c0, rt0.c0, rt0.c2, 0.1025166181046997)) BETWEEN ((rt0.c0, rt0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, x'', x'', v0.c0, rt0.c2))) IN ());
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((NULL)*(rt0.c2 COLLATE RTRIM))  NULLS FIRST, ((((rt0.c0, rt0.c0, rt0.c0, rt0.c2, 0.1025166181046997)) BETWEEN ((rt0.c0, rt0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, x'', x'', v0.c0, rt0.c2))) IN ()));
SELECT ALL * FROM rt0, vt0, v0 WHERE ((rt0.c2 COLLATE RTRIM IN ())) ORDER BY ((NULL)*(rt0.c2 COLLATE RTRIM))  NULLS FIRST, ((((rt0.c0, rt0.c0, rt0.c0, rt0.c2, 0.1025166181046997)) BETWEEN ((rt0.c0, rt0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, x'', x'', v0.c0, rt0.c2))) IN ());
SELECT * FROM v0, vt0, rt0 WHERE (ROUND(NULL, rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((ROUND(NULL, rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (ROUND(NULL, rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((ROUND(NULL, rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (ROUND(NULL, rt0.c0 COLLATE BINARY));
SELECT ALL * FROM rt0, vt0 NATURAL JOIN v0 WHERE (UNLIKELY(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0);
SELECT ALL * FROM rt0, vt0 NATURAL JOIN v0 WHERE (UNLIKELY(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0);
SELECT ALL * FROM rt0, vt0 NATURAL JOIN v0 WHERE (UNLIKELY(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END));
SELECT ALL * FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (v0.c0);
SELECT * FROM rt0, vt0, v0 WHERE ((((rt0.c1)|(rt0.c2)) IN (CAST(v0.c0 AS REAL)))) ORDER BY DATETIME(rt0.c1, rt0.c1, NULL) COLLATE BINARY ASC, ((((((((rt0.c1)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)|(rt0.c2)) IN (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY DATETIME(rt0.c1, rt0.c1, NULL) COLLATE BINARY ASC, ((((((((rt0.c1)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM rt0, vt0, v0 WHERE ((((rt0.c1)|(rt0.c2)) IN (CAST(v0.c0 AS REAL)))) ORDER BY DATETIME(rt0.c1, rt0.c1, NULL) COLLATE BINARY ASC, ((((((((rt0.c1)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)|(rt0.c2)) IN (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY DATETIME(rt0.c1, rt0.c1, NULL) COLLATE BINARY ASC, ((((((((rt0.c1)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM rt0, vt0, v0 WHERE ((((rt0.c1)|(rt0.c2)) IN (CAST(v0.c0 AS REAL)))) ORDER BY DATETIME(rt0.c1, rt0.c1, NULL) COLLATE BINARY ASC, ((((((((rt0.c1)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (v0.c0)) THEN ((v0.c0)/(0.19731189778457103)) END) ORDER BY (((vt0.c0)) BETWEEN ((((v0.c0)+(vt0.c0)))) AND ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (v0.c0)) THEN ((v0.c0)/(0.19731189778457103)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0)) BETWEEN ((((v0.c0)+(vt0.c0)))) AND ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (v0.c0)) THEN ((v0.c0)/(0.19731189778457103)) END) ORDER BY (((vt0.c0)) BETWEEN ((((v0.c0)+(vt0.c0)))) AND ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (v0.c0)) THEN ((v0.c0)/(0.19731189778457103)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0)) BETWEEN ((((v0.c0)+(vt0.c0)))) AND ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (v0.c0)) THEN ((v0.c0)/(0.19731189778457103)) END) ORDER BY (((vt0.c0)) BETWEEN ((((v0.c0)+(vt0.c0)))) AND ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC;
SELECT * FROM v0 WHERE (((((+ (v0.c0))))>((((v0.c0) ISNULL))))) ORDER BY (((v0.c0)) BETWEEN ((x'ea68')) AND ((((v0.c0)&(v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((+ (v0.c0))))>((((v0.c0) ISNULL))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((x'ea68')) AND ((((v0.c0)&(v0.c0)))))  NULLS LAST);
SELECT * FROM v0 WHERE (((((+ (v0.c0))))>((((v0.c0) ISNULL))))) ORDER BY (((v0.c0)) BETWEEN ((x'ea68')) AND ((((v0.c0)&(v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((+ (v0.c0))))>((((v0.c0) ISNULL))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((x'ea68')) AND ((((v0.c0)&(v0.c0)))))  NULLS LAST);
SELECT * FROM v0 WHERE (((((+ (v0.c0))))>((((v0.c0) ISNULL))))) ORDER BY (((v0.c0)) BETWEEN ((x'ea68')) AND ((((v0.c0)&(v0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))OR(((rt0.c2)AND(vt0.c0)))))AND(((0Xfffffffff137af21) BETWEEN (rt0.c2) AND (vt0.c0))))) ORDER BY ((0.5286968169519208) NOT BETWEEN (TRIM(v0.c0)) AND (rt0.c2));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))OR(((rt0.c2)AND(vt0.c0)))))AND(((0xfffffffff137af21) BETWEEN (rt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((0.5286968169519208) NOT BETWEEN (TRIM(v0.c0)) AND (rt0.c2)));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))OR(((rt0.c2)AND(vt0.c0)))))AND(((0Xfffffffff137af21) BETWEEN (rt0.c2) AND (vt0.c0))))) ORDER BY ((0.5286968169519208) NOT BETWEEN (TRIM(v0.c0)) AND (rt0.c2));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))OR(((rt0.c2)AND(vt0.c0)))))AND(((0xfffffffff137af21) BETWEEN (rt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((0.5286968169519208) NOT BETWEEN (TRIM(v0.c0)) AND (rt0.c2)));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))OR(((rt0.c2)AND(vt0.c0)))))AND(((0Xfffffffff137af21) BETWEEN (rt0.c2) AND (vt0.c0))))) ORDER BY ((0.5286968169519208) NOT BETWEEN (TRIM(v0.c0)) AND (rt0.c2));
SELECT * FROM v0, rt0 INNER JOIN vt0 ON (- ((rt0.c0 IN (v0.c0)))) WHERE ((~ (((rt0.c0) BETWEEN (rt0.c2) AND (v0.c0))))) ORDER BY ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))))=((rt0.c2 COLLATE BINARY))) ASC  NULLS LAST, (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND (((((rt0.c0))>((vt0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) BETWEEN (rt0.c2) AND (v0.c0))))) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt0 ON (- ((rt0.c0 IN (v0.c0)))) ORDER BY ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))))=((rt0.c2 COLLATE BINARY))) ASC  NULLS LAST, (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND (((((rt0.c0))>((vt0.c0)))))) ASC);
SELECT * FROM v0, rt0 INNER JOIN vt0 ON (- ((rt0.c0 IN (v0.c0)))) WHERE ((~ (((rt0.c0) BETWEEN (rt0.c2) AND (v0.c0))))) ORDER BY ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))))=((rt0.c2 COLLATE BINARY))) ASC  NULLS LAST, (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND (((((rt0.c0))>((vt0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) BETWEEN (rt0.c2) AND (v0.c0))))) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt0 ON (- ((rt0.c0 IN (v0.c0)))) ORDER BY ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))))=((rt0.c2 COLLATE BINARY))) ASC  NULLS LAST, (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND (((((rt0.c0))>((vt0.c0)))))) ASC);
SELECT * FROM v0, rt0 INNER JOIN vt0 ON (- ((rt0.c0 IN (v0.c0)))) WHERE ((~ (((rt0.c0) BETWEEN (rt0.c2) AND (v0.c0))))) ORDER BY ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))))=((rt0.c2 COLLATE BINARY))) ASC  NULLS LAST, (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND (((((rt0.c0))>((vt0.c0)))))) ASC;
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((((v0.c0))>((vt0.c0)))))) ORDER BY CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))  WHEN (~ (v0.c0)) THEN ((v0.c0)<(v0.c0)) ELSE ((v0.c0)*(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((((v0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))  WHEN (~ (v0.c0)) THEN ((v0.c0)<(v0.c0)) ELSE ((v0.c0)*(vt0.c0)) END);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((((v0.c0))>((vt0.c0)))))) ORDER BY CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))  WHEN (~ (v0.c0)) THEN ((v0.c0)<(v0.c0)) ELSE ((v0.c0)*(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((((v0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))  WHEN (~ (v0.c0)) THEN ((v0.c0)<(v0.c0)) ELSE ((v0.c0)*(vt0.c0)) END);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((((v0.c0))>((vt0.c0)))))) ORDER BY CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))  WHEN (~ (v0.c0)) THEN ((v0.c0)<(v0.c0)) ELSE ((v0.c0)*(vt0.c0)) END;
SELECT ALL * FROM rt0 WHERE (((CAST(0.46026083812527185 AS INTEGER)) NOT BETWEEN (rt0.c0) AND (((rt0.c1) IS FALSE)))) ORDER BY ((((x'')OR(((rt0.c2) NOT NULL))))OR(CAST(rt0.c2 AS INTEGER))) DESC  NULLS LAST, (~ (((rt0.c2) NOTNULL))), rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(0.46026083812527185 AS INTEGER)) NOT BETWEEN (rt0.c0) AND (((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY ((((x'')OR(((rt0.c2) NOT NULL))))OR(CAST(rt0.c2 AS INTEGER))) DESC  NULLS LAST, (~ (((rt0.c2) NOTNULL))), rt0.c1 DESC);
SELECT ALL * FROM rt0 WHERE (((CAST(0.46026083812527185 AS INTEGER)) NOT BETWEEN (rt0.c0) AND (((rt0.c1) IS FALSE)))) ORDER BY ((((x'')OR(((rt0.c2) NOT NULL))))OR(CAST(rt0.c2 AS INTEGER))) DESC  NULLS LAST, (~ (((rt0.c2) NOTNULL))), rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(0.46026083812527185 AS INTEGER)) NOT BETWEEN (rt0.c0) AND (((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY ((((x'')OR(((rt0.c2) NOT NULL))))OR(CAST(rt0.c2 AS INTEGER))) DESC  NULLS LAST, (~ (((rt0.c2) NOTNULL))), rt0.c1 DESC);
SELECT ALL * FROM rt0 WHERE (((CAST(0.46026083812527185 AS INTEGER)) NOT BETWEEN (rt0.c0) AND (((rt0.c1) IS FALSE)))) ORDER BY ((((x'')OR(((rt0.c2) NOT NULL))))OR(CAST(rt0.c2 AS INTEGER))) DESC  NULLS LAST, (~ (((rt0.c2) NOTNULL))), rt0.c1 DESC;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((NOT ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (v0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((NOT ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (v0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((NOT ((- (v0.c0)))));
SELECT * FROM v0 WHERE ((((((('bn')OR(v0.c0)))OR(v0.c0)))-(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((('bn')OR(v0.c0)))OR(v0.c0)))-(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((('bn')OR(v0.c0)))OR(v0.c0)))-(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((('bn')OR(v0.c0)))OR(v0.c0)))-(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((('bn')OR(v0.c0)))OR(v0.c0)))-(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('-680947204');
SELECT SUM(count) FROM (SELECT ALL (('-680947204') IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('-680947204');
SELECT SUM(count) FROM (SELECT ALL (('-680947204') IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('-680947204');
SELECT * FROM vt0, v0, rt0 WHERE (CAST(((v0.c0)>>(rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)>>(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (CAST(((v0.c0)>>(rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)>>(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (CAST(((v0.c0)>>(rt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM v0 WHERE ((~ (v0.c0)) COLLATE NOCASE) ORDER BY (- (HEX(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (- (HEX(v0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((~ (v0.c0)) COLLATE NOCASE) ORDER BY (- (HEX(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (- (HEX(v0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((~ (v0.c0)) COLLATE NOCASE) ORDER BY (- (HEX(v0.c0)))  NULLS FIRST;
SELECT ALL * FROM v0, vt0, rt0 WHERE (IFNULL('1491422044', ((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((IFNULL('1491422044', ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (IFNULL('1491422044', ((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((IFNULL('1491422044', ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (IFNULL('1491422044', ((vt0.c0) IS FALSE)));
SELECT * FROM vt0, rt0 WHERE (((((x'')AND((NOT (rt0.c2)))))OR((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((x'')AND((NOT (rt0.c2)))))OR((+ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((x'')AND((NOT (rt0.c2)))))OR((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((x'')AND((NOT (rt0.c2)))))OR((+ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((x'')AND((NOT (rt0.c2)))))OR((+ (rt0.c1)))));
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL))IS(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))IS(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL))IS(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))IS(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL))IS(((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)<>(v0.c0))) NOT BETWEEN (json_insert(v0.c0, '鉌|B?''', v0.c0)) AND ((NOT (v0.c0))))) ORDER BY (((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<>(v0.c0))) NOT BETWEEN (json_insert(v0.c0, '鉌|B?''', v0.c0)) AND ((NOT (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)<>(v0.c0))) NOT BETWEEN (json_insert(v0.c0, '鉌|B?''', v0.c0)) AND ((NOT (v0.c0))))) ORDER BY (((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<>(v0.c0))) NOT BETWEEN (json_insert(v0.c0, '鉌|B?''', v0.c0)) AND ((NOT (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)<>(v0.c0))) NOT BETWEEN (json_insert(v0.c0, '鉌|B?''', v0.c0)) AND ((NOT (v0.c0))))) ORDER BY (((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT COUNT(*) FROM v0 WHERE (x'') ORDER BY CAST((+ (v0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 ORDER BY CAST((+ (v0.c0)) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (x'') ORDER BY CAST((+ (v0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 ORDER BY CAST((+ (v0.c0)) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (x'') ORDER BY CAST((+ (v0.c0)) AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE -4.73059084E8  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)) AND ((CAST(rt0.c1 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((CASE -4.73059084E8  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)) AND ((CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE -4.73059084E8  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)) AND ((CAST(rt0.c1 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((CASE -4.73059084E8  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)) AND ((CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE -4.73059084E8  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)) AND ((CAST(rt0.c1 AS TEXT)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR(UPPER(0.6838232581849994))))AND(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))) WHERE ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN NULL WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END IN ())) ORDER BY ((((rt0.c2)OR((((rt0.c2))<>((rt0.c1))))))OR(((rt0.c1) IS FALSE))), (((('-238923875')<<(rt0.c2)))IS((NOT (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN NULL WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR(UPPER(0.6838232581849994))))AND(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))) ORDER BY ((((rt0.c2)OR((((rt0.c2))<>((rt0.c1))))))OR(((rt0.c1) IS FALSE))), (((('-238923875')<<(rt0.c2)))IS((NOT (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR(UPPER(0.6838232581849994))))AND(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))) WHERE ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN NULL WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END IN ())) ORDER BY ((((rt0.c2)OR((((rt0.c2))<>((rt0.c1))))))OR(((rt0.c1) IS FALSE))), (((('-238923875')<<(rt0.c2)))IS((NOT (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN NULL WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR(UPPER(0.6838232581849994))))AND(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))) ORDER BY ((((rt0.c2)OR((((rt0.c2))<>((rt0.c1))))))OR(((rt0.c1) IS FALSE))), (((('-238923875')<<(rt0.c2)))IS((NOT (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR(UPPER(0.6838232581849994))))AND(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))) WHERE ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN NULL WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END IN ())) ORDER BY ((((rt0.c2)OR((((rt0.c2))<>((rt0.c1))))))OR(((rt0.c1) IS FALSE))), (((('-238923875')<<(rt0.c2)))IS((NOT (rt0.c2))))  NULLS LAST;
SELECT * FROM v0, vt0, rt0 WHERE ('-680947204') ORDER BY (rt0.c0 COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT ALL (('-680947204') IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (rt0.c0 COLLATE BINARY IN ()));
SELECT * FROM v0, vt0, rt0 WHERE ('-680947204') ORDER BY (rt0.c0 COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT ALL (('-680947204') IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (rt0.c0 COLLATE BINARY IN ()));
SELECT * FROM v0, vt0, rt0 WHERE ('-680947204') ORDER BY (rt0.c0 COLLATE BINARY IN ());
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS REAL)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS REAL)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS REAL)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT ALL COUNT(*) FROM v0 WHERE ('&a');
SELECT SUM(count) FROM (SELECT ALL (('&a') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('&a');
SELECT SUM(count) FROM (SELECT ALL (('&a') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('&a');
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ('') ORDER BY NULLIF(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)), ((rt0.c2)<<(rt0.c1))) DESC  NULLS LAST, ((((('1804805006') NOT BETWEEN (rt0.c2) AND (rt0.c2))))<=((HEX(DISTINCT rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY NULLIF(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)), ((rt0.c2)<<(rt0.c1))) DESC  NULLS LAST, ((((('1804805006') NOT BETWEEN (rt0.c2) AND (rt0.c2))))<=((HEX(DISTINCT rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ('') ORDER BY NULLIF(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)), ((rt0.c2)<<(rt0.c1))) DESC  NULLS LAST, ((((('1804805006') NOT BETWEEN (rt0.c2) AND (rt0.c2))))<=((HEX(DISTINCT rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY NULLIF(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)), ((rt0.c2)<<(rt0.c1))) DESC  NULLS LAST, ((((('1804805006') NOT BETWEEN (rt0.c2) AND (rt0.c2))))<=((HEX(DISTINCT rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ('') ORDER BY NULLIF(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)), ((rt0.c2)<<(rt0.c1))) DESC  NULLS LAST, ((((('1804805006') NOT BETWEEN (rt0.c2) AND (rt0.c2))))<=((HEX(DISTINCT rt0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (v0.c0);
SELECT * FROM vt0, v0, rt0 NOT INDEXED WHERE ((v0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 NOT INDEXED WHERE ((v0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 NOT INDEXED WHERE ((v0.c0 IN ()) COLLATE BINARY);
SELECT * FROM rt0, vt0, v0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND ((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND ((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND ((NOT (rt0.c1)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0.5082555737675902 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((0.5082555737675902 COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0.5082555737675902 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((0.5082555737675902 COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0.5082555737675902 COLLATE NOCASE);
SELECT ALL * FROM v0, rt0 WHERE (((((CASE 0.3188697621255253  WHEN NULL THEN rt0.c2 ELSE rt0.c2 END)OR(x'f3648ee4')))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((CASE 0.3188697621255253  WHEN NULL THEN rt0.c2 ELSE rt0.c2 END)OR(x'f3648ee4')))AND(rt0.c2))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((CASE 0.3188697621255253  WHEN NULL THEN rt0.c2 ELSE rt0.c2 END)OR(x'f3648ee4')))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((CASE 0.3188697621255253  WHEN NULL THEN rt0.c2 ELSE rt0.c2 END)OR(x'f3648ee4')))AND(rt0.c2))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((CASE 0.3188697621255253  WHEN NULL THEN rt0.c2 ELSE rt0.c2 END)OR(x'f3648ee4')))AND(rt0.c2)));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((TRIM(DISTINCT vt0.c0, rt0.c1)) NOTNULL)) ORDER BY (0Xffffffffa627d47f IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c0, rt0.c1)) NOTNULL)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (0xffffffffa627d47f IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((TRIM(DISTINCT vt0.c0, rt0.c1)) NOTNULL)) ORDER BY (0Xffffffffa627d47f IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c0, rt0.c1)) NOTNULL)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (0xffffffffa627d47f IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((TRIM(DISTINCT vt0.c0, rt0.c1)) NOTNULL)) ORDER BY (0Xffffffffa627d47f IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (v0.c0 COLLATE RTRIM IN (vt0.c0)) WHERE (v0.c0) ORDER BY (+ (v0.c0 COLLATE RTRIM)) DESC, (NOT ((('') IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (v0.c0 COLLATE RTRIM IN (vt0.c0)) ORDER BY (+ (v0.c0 COLLATE RTRIM)) DESC, (NOT ((('') IS FALSE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (v0.c0 COLLATE RTRIM IN (vt0.c0)) WHERE (v0.c0) ORDER BY (+ (v0.c0 COLLATE RTRIM)) DESC, (NOT ((('') IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (v0.c0 COLLATE RTRIM IN (vt0.c0)) ORDER BY (+ (v0.c0 COLLATE RTRIM)) DESC, (NOT ((('') IS FALSE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (v0.c0 COLLATE RTRIM IN (vt0.c0)) WHERE (v0.c0) ORDER BY (+ (v0.c0 COLLATE RTRIM)) DESC, (NOT ((('') IS FALSE))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN (vt0.c0 IN ()) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE NOCASE  WHEN (vt0.c0 IN ()) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN (vt0.c0 IN ()) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE NOCASE  WHEN (vt0.c0 IN ()) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN (vt0.c0 IN ()) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT ALL * FROM v0 WHERE ((('eOe2') NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) ORDER BY STRFTIME(CAST(v0.c0 AS TEXT), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), CAST(v0.c0 AS REAL), (((v0.c0)) NOT BETWEEN ((x'')) AND ((v0.c0))), MAX(v0.c0, v0.c0)), CASE ((((((((v0.c0)AND(x'')))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN (v0.c0 IN (v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (NOT (v0.c0)) WHEN ((v0.c0)%(x'')) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('eOe2') NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY STRFTIME(CAST(v0.c0 AS TEXT), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), CAST(v0.c0 AS REAL), (((v0.c0)) NOT BETWEEN ((x'')) AND ((v0.c0))), MAX(v0.c0, v0.c0)), CASE ((((((((v0.c0)AND(x'')))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN (v0.c0 IN (v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (NOT (v0.c0)) WHEN ((v0.c0)%(x'')) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((('eOe2') NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) ORDER BY STRFTIME(CAST(v0.c0 AS TEXT), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), CAST(v0.c0 AS REAL), (((v0.c0)) NOT BETWEEN ((x'')) AND ((v0.c0))), MAX(v0.c0, v0.c0)), CASE ((((((((v0.c0)AND(x'')))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN (v0.c0 IN (v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (NOT (v0.c0)) WHEN ((v0.c0)%(x'')) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('eOe2') NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY STRFTIME(CAST(v0.c0 AS TEXT), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), CAST(v0.c0 AS REAL), (((v0.c0)) NOT BETWEEN ((x'')) AND ((v0.c0))), MAX(v0.c0, v0.c0)), CASE ((((((((v0.c0)AND(x'')))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN (v0.c0 IN (v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (NOT (v0.c0)) WHEN ((v0.c0)%(x'')) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((('eOe2') NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) ORDER BY STRFTIME(CAST(v0.c0 AS TEXT), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), CAST(v0.c0 AS REAL), (((v0.c0)) NOT BETWEEN ((x'')) AND ((v0.c0))), MAX(v0.c0, v0.c0)), CASE ((((((((v0.c0)AND(x'')))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN (v0.c0 IN (v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (NOT (v0.c0)) WHEN ((v0.c0)%(x'')) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN ((v0.c0) IS TRUE) THEN ((('{'))<=((v0.c0))) ELSE v0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN ((v0.c0) IS TRUE) THEN ((('{'))<=((v0.c0))) ELSE v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN ((v0.c0) IS TRUE) THEN ((('{'))<=((v0.c0))) ELSE v0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN ((v0.c0) IS TRUE) THEN ((('{'))<=((v0.c0))) ELSE v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN ((v0.c0) IS TRUE) THEN ((('{'))<=((v0.c0))) ELSE v0.c0 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (NOT (((((rt0.c1)AND(rt0.c0)))AND(vt0.c0)))) LEFT OUTER JOIN vt0 ON (((((- (0.4845380329103346)))OR(CAST(v0.c0 AS BLOB))))AND(v0.c0)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (NOT (((((rt0.c1)AND(rt0.c0)))AND(vt0.c0)))) LEFT OUTER JOIN vt0 ON (((((- (0.4845380329103346)))OR(CAST(v0.c0 AS BLOB))))AND(v0.c0)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (NOT (((((rt0.c1)AND(rt0.c0)))AND(vt0.c0)))) LEFT OUTER JOIN vt0 ON (((((- (0.4845380329103346)))OR(CAST(v0.c0 AS BLOB))))AND(v0.c0)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (NOT (((((rt0.c1)AND(rt0.c0)))AND(vt0.c0)))) LEFT OUTER JOIN vt0 ON (((((- (0.4845380329103346)))OR(CAST(v0.c0 AS BLOB))))AND(v0.c0)));
SELECT * FROM v0, rt0 WHERE (((((((v0.c0)AND(rt0.c2)))AND(v0.c0))) NOTNULL)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(rt0.c2)))AND(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY NULL DESC);
SELECT * FROM v0, rt0 WHERE (((((((v0.c0)AND(rt0.c2)))AND(v0.c0))) NOTNULL)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(rt0.c2)))AND(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY NULL DESC);
SELECT * FROM v0, rt0 WHERE (((((((v0.c0)AND(rt0.c2)))AND(v0.c0))) NOTNULL)) ORDER BY NULL DESC;
SELECT ALL * FROM vt0, rt0, v0 WHERE (((rtreenode('^%sdR\n', v0.c0))+(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode('^%sdR\n', v0.c0))+(v0.c0))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((rtreenode('^%sdR\n', v0.c0))+(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode('^%sdR\n', v0.c0))+(v0.c0))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((rtreenode('^%sdR\n', v0.c0))+(v0.c0)));
SELECT * FROM v0, rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0, v0 WHERE (CASE (- (v0.c0))  WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0)AND(0.9276381818044283)) ELSE (+ (vt0.c0)) END) ORDER BY ((vt0.c0)&(vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (v0.c0))  WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0)AND(0.9276381818044283)) ELSE (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0)&(vt0.c0)) COLLATE NOCASE ASC);
SELECT ALL * FROM vt0, v0 WHERE (CASE (- (v0.c0))  WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0)AND(0.9276381818044283)) ELSE (+ (vt0.c0)) END) ORDER BY ((vt0.c0)&(vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (v0.c0))  WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0)AND(0.9276381818044283)) ELSE (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0)&(vt0.c0)) COLLATE NOCASE ASC);
SELECT ALL * FROM vt0, v0 WHERE (CASE (- (v0.c0))  WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0)AND(0.9276381818044283)) ELSE (+ (vt0.c0)) END) ORDER BY ((vt0.c0)&(vt0.c0)) COLLATE NOCASE ASC;
SELECT * FROM v0 WHERE ((((NULL))==(((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))=(((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((NULL))==(((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))=(((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((NULL))==(((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))));
SELECT * FROM v0 WHERE ((((NOT (v0.c0))) NOT BETWEEN (((v0.c0)<=(v0.c0))) AND (NULLIF(DISTINCT 0.23168552783495833, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0))) NOT BETWEEN (((v0.c0)<=(v0.c0))) AND (NULLIF(DISTINCT 0.23168552783495833, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((NOT (v0.c0))) NOT BETWEEN (((v0.c0)<=(v0.c0))) AND (NULLIF(DISTINCT 0.23168552783495833, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0))) NOT BETWEEN (((v0.c0)<=(v0.c0))) AND (NULLIF(DISTINCT 0.23168552783495833, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((NOT (v0.c0))) NOT BETWEEN (((v0.c0)<=(v0.c0))) AND (NULLIF(DISTINCT 0.23168552783495833, v0.c0))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))<>(((+ (vt0.c0)))))) ORDER BY CASE CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END  WHEN (((rt0.c1))>=((rt0.c1))) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)) ELSE (((vt0.c0, vt0.c0, rt0.c1, '0.3562975842131678', v0.c0))<=((vt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))!=(((+ (vt0.c0)))))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0, vt0 ORDER BY CASE CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END  WHEN (((rt0.c1))>=((rt0.c1))) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)) ELSE (((vt0.c0, vt0.c0, rt0.c1, '0.3562975842131678', v0.c0))<=((vt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c0))) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))<>(((+ (vt0.c0)))))) ORDER BY CASE CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END  WHEN (((rt0.c1))>=((rt0.c1))) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)) ELSE (((vt0.c0, vt0.c0, rt0.c1, '0.3562975842131678', v0.c0))<=((vt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))!=(((+ (vt0.c0)))))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0, vt0 ORDER BY CASE CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END  WHEN (((rt0.c1))>=((rt0.c1))) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)) ELSE (((vt0.c0, vt0.c0, rt0.c1, '0.3562975842131678', v0.c0))<=((vt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c0))) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))<>(((+ (vt0.c0)))))) ORDER BY CASE CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END  WHEN (((rt0.c1))>=((rt0.c1))) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)) ELSE (((vt0.c0, vt0.c0, rt0.c1, '0.3562975842131678', v0.c0))<=((vt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c0))) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c2 COLLATE NOCASE)AND(0.3562975842131678 COLLATE RTRIM)))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(x'ccfe2b44')))OR(((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2 COLLATE NOCASE)AND(0.3562975842131678 COLLATE RTRIM)))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(x'ccfe2b44')))OR(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c2 COLLATE NOCASE)AND(0.3562975842131678 COLLATE RTRIM)))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(x'ccfe2b44')))OR(((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2 COLLATE NOCASE)AND(0.3562975842131678 COLLATE RTRIM)))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(x'ccfe2b44')))OR(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c2 COLLATE NOCASE)AND(0.3562975842131678 COLLATE RTRIM)))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(x'ccfe2b44')))OR(((rt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((~ (((vt0.c0) ISNULL)))) ORDER BY TRIM(DISTINCT ((vt0.c0)>=(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0 ORDER BY TRIM(DISTINCT ((vt0.c0)>=(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((~ (((vt0.c0) ISNULL)))) ORDER BY TRIM(DISTINCT ((vt0.c0)>=(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0 ORDER BY TRIM(DISTINCT ((vt0.c0)>=(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((~ (((vt0.c0) ISNULL)))) ORDER BY TRIM(DISTINCT ((vt0.c0)>=(vt0.c0))) DESC;
SELECT ALL * FROM v0, vt0 NOT INDEXED FULL OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c2 AS REAL) THEN (((vt0.c0, rt0.c0, v0.c0))>=((rt0.c1, rt0.c0, rt0.c2))) WHEN '-1850489841' THEN (NOT (v0.c0)) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 END THEN ((rt0.c0) NOTNULL) ELSE CAST(v0.c0 AS NUMERIC) END WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c2 AS REAL) THEN (((vt0.c0, rt0.c0, v0.c0))>=((rt0.c1, rt0.c0, rt0.c2))) WHEN '-1850489841' THEN (NOT (v0.c0)) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 END THEN ((rt0.c0) NOTNULL) ELSE CAST(v0.c0 AS NUMERIC) END);
SELECT ALL * FROM v0, vt0 NOT INDEXED FULL OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c2 AS REAL) THEN (((vt0.c0, rt0.c0, v0.c0))>=((rt0.c1, rt0.c0, rt0.c2))) WHEN '-1850489841' THEN (NOT (v0.c0)) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 END THEN ((rt0.c0) NOTNULL) ELSE CAST(v0.c0 AS NUMERIC) END WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c2 AS REAL) THEN (((vt0.c0, rt0.c0, v0.c0))>=((rt0.c1, rt0.c0, rt0.c2))) WHEN '-1850489841' THEN (NOT (v0.c0)) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 END THEN ((rt0.c0) NOTNULL) ELSE CAST(v0.c0 AS NUMERIC) END);
SELECT ALL * FROM v0, vt0 NOT INDEXED FULL OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c2 AS REAL) THEN (((vt0.c0, rt0.c0, v0.c0))>=((rt0.c1, rt0.c0, rt0.c2))) WHEN '-1850489841' THEN (NOT (v0.c0)) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 END THEN ((rt0.c0) NOTNULL) ELSE CAST(v0.c0 AS NUMERIC) END WHERE (x'');
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM v0 WHERE (TYPEOF(DISTINCT CAST(v0.c0 AS TEXT))) ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))IS(NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CAST(v0.c0 AS TEXT))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))IS(NULL)) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (TYPEOF(DISTINCT CAST(v0.c0 AS TEXT))) ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))IS(NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CAST(v0.c0 AS TEXT))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))IS(NULL)) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (TYPEOF(DISTINCT CAST(v0.c0 AS TEXT))) ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))IS(NULL)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((vt0.c0)&(rt0.c2))) NOT NULL)) ORDER BY x'771f';
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY x'771f');
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((vt0.c0)&(rt0.c2))) NOT NULL)) ORDER BY x'771f';
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY x'771f');
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((vt0.c0)&(rt0.c2))) NOT NULL)) ORDER BY x'771f';
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((vt0.c0))<=((rt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<=((rt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((vt0.c0))<=((rt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<=((rt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((vt0.c0))<=((rt0.c1))) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((0.9549931870847919)AND(rt0.c2)) IN ())) ORDER BY vt0.c0 ASC, (((((NOT (rt0.c1)))AND((~ (rt0.c2)))))AND(((NULL) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.9549931870847919)AND(rt0.c2)) IN ())) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY vt0.c0 ASC, (((((NOT (rt0.c1)))AND((~ (rt0.c2)))))AND(((NULL) NOTNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((0.9549931870847919)AND(rt0.c2)) IN ())) ORDER BY vt0.c0 ASC, (((((NOT (rt0.c1)))AND((~ (rt0.c2)))))AND(((NULL) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.9549931870847919)AND(rt0.c2)) IN ())) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY vt0.c0 ASC, (((((NOT (rt0.c1)))AND((~ (rt0.c2)))))AND(((NULL) NOTNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((0.9549931870847919)AND(rt0.c2)) IN ())) ORDER BY vt0.c0 ASC, (((((NOT (rt0.c1)))AND((~ (rt0.c2)))))AND(((NULL) NOTNULL))) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (0.9259450270805385);
SELECT SUM(count) FROM (SELECT ALL ((0.9259450270805385) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (0.9259450270805385);
SELECT SUM(count) FROM (SELECT ALL ((0.9259450270805385) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (0.9259450270805385);
SELECT ALL * FROM vt0, rt0, v0 WHERE (CAST(((rt0.c0)GLOB(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)GLOB(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (CAST(((rt0.c0)GLOB(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)GLOB(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (CAST(((rt0.c0)GLOB(vt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (COALESCE(((rt0.c2)||(vt0.c0)), (~ (rt0.c2)))) ORDER BY (((((((rt0.c2, rt0.c2, rt0.c1))>=((rt0.c1, rt0.c2, vt0.c0))))OR((vt0.c0 IN (vt0.c0)))))OR(x'd951')), x'd000' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((rt0.c2)||(vt0.c0)), (~ (rt0.c2)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((((rt0.c2, rt0.c2, rt0.c1))>=((rt0.c1, rt0.c2, vt0.c0))))OR((vt0.c0 IN (vt0.c0)))))OR(x'd951')), x'd000' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (COALESCE(((rt0.c2)||(vt0.c0)), (~ (rt0.c2)))) ORDER BY (((((((rt0.c2, rt0.c2, rt0.c1))>=((rt0.c1, rt0.c2, vt0.c0))))OR((vt0.c0 IN (vt0.c0)))))OR(x'd951')), x'd000' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((rt0.c2)||(vt0.c0)), (~ (rt0.c2)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((((rt0.c2, rt0.c2, rt0.c1))>=((rt0.c1, rt0.c2, vt0.c0))))OR((vt0.c0 IN (vt0.c0)))))OR(x'd951')), x'd000' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (COALESCE(((rt0.c2)||(vt0.c0)), (~ (rt0.c2)))) ORDER BY (((((((rt0.c2, rt0.c2, rt0.c1))>=((rt0.c1, rt0.c2, vt0.c0))))OR((vt0.c0 IN (vt0.c0)))))OR(x'd951')), x'd000' ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((+ (rt0.c1))) NOT BETWEEN (LIKELY(vt0.c0)) AND (CASE vt0.c0  WHEN NULL THEN rt0.c2 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) NOT BETWEEN (LIKELY(vt0.c0)) AND (CASE vt0.c0  WHEN NULL THEN rt0.c2 ELSE v0.c0 END))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((+ (rt0.c1))) NOT BETWEEN (LIKELY(vt0.c0)) AND (CASE vt0.c0  WHEN NULL THEN rt0.c2 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) NOT BETWEEN (LIKELY(vt0.c0)) AND (CASE vt0.c0  WHEN NULL THEN rt0.c2 ELSE v0.c0 END))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((+ (rt0.c1))) NOT BETWEEN (LIKELY(vt0.c0)) AND (CASE vt0.c0  WHEN NULL THEN rt0.c2 ELSE v0.c0 END)));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (v0.c0) ORDER BY CAST((rt0.c1 IN ()) AS INTEGER)  NULLS FIRST, ((((v0.c0)OR(rt0.c0)))AND(rt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CAST((rt0.c1 IN ()) AS INTEGER)  NULLS FIRST, ((((v0.c0)OR(rt0.c0)))AND(rt0.c0)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (v0.c0) ORDER BY CAST((rt0.c1 IN ()) AS INTEGER)  NULLS FIRST, ((((v0.c0)OR(rt0.c0)))AND(rt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CAST((rt0.c1 IN ()) AS INTEGER)  NULLS FIRST, ((((v0.c0)OR(rt0.c0)))AND(rt0.c0)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (v0.c0) ORDER BY CAST((rt0.c1 IN ()) AS INTEGER)  NULLS FIRST, ((((v0.c0)OR(rt0.c0)))AND(rt0.c0)) ASC  NULLS LAST;
SELECT * FROM rt0, v0, vt0 WHERE (((((((rt0.c2) BETWEEN (v0.c0) AND (vt0.c0)))AND(((rt0.c0) NOTNULL))))AND(CAST(v0.c0 AS NUMERIC)))) ORDER BY 209992532 ASC  NULLS LAST, (((((+ (v0.c0)))AND(vt0.c0 COLLATE RTRIM)))OR(((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) BETWEEN (v0.c0) AND (vt0.c0)))AND(((rt0.c0) NOTNULL))))AND(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY 209992532 ASC  NULLS LAST, (((((+ (v0.c0)))AND(vt0.c0 COLLATE RTRIM)))OR(((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))) ASC);
SELECT * FROM rt0, v0, vt0 WHERE (((((((rt0.c2) BETWEEN (v0.c0) AND (vt0.c0)))AND(((rt0.c0) NOTNULL))))AND(CAST(v0.c0 AS NUMERIC)))) ORDER BY 209992532 ASC  NULLS LAST, (((((+ (v0.c0)))AND(vt0.c0 COLLATE RTRIM)))OR(((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) BETWEEN (v0.c0) AND (vt0.c0)))AND(((rt0.c0) NOTNULL))))AND(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY 209992532 ASC  NULLS LAST, (((((+ (v0.c0)))AND(vt0.c0 COLLATE RTRIM)))OR(((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE ((((x'')) BETWEEN ((((((v0.c0)AND(v0.c0)))OR('Dw]6D')))) AND (((v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((x'')) BETWEEN ((((((v0.c0)AND(v0.c0)))OR('Dw]6D')))) AND (((v0.c0 IN ()))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((x'')) BETWEEN ((((((v0.c0)AND(v0.c0)))OR('Dw]6D')))) AND (((v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((x'')) BETWEEN ((((((v0.c0)AND(v0.c0)))OR('Dw]6D')))) AND (((v0.c0 IN ()))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((x'')) BETWEEN ((((((v0.c0)AND(v0.c0)))OR('Dw]6D')))) AND (((v0.c0 IN ())))));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON (- (CASE rt0.c1  WHEN v0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN x'e95e' THEN vt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END)) RIGHT OUTER JOIN vt0 ON (((LOWER(rt0.c2)))>(((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (('CK*|3')))))) WHERE ((('') NOT BETWEEN (((((rt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (rt0.c0))) ORDER BY CASE (~ (rt0.c0))  WHEN CASE v0.c0  WHEN rt0.c2 THEN v0.c0 END THEN (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE ((vt0.c0) NOTNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('') NOT BETWEEN (((((rt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (rt0.c0))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (- (CASE rt0.c1  WHEN v0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN x'e95e' THEN vt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END)) RIGHT OUTER JOIN vt0 ON (((LOWER(rt0.c2)))>(((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (('CK*|3')))))) ORDER BY CASE (~ (rt0.c0))  WHEN CASE v0.c0  WHEN rt0.c2 THEN v0.c0 END THEN (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE ((vt0.c0) NOTNULL) END  NULLS LAST);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON (- (CASE rt0.c1  WHEN v0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN x'e95e' THEN vt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END)) RIGHT OUTER JOIN vt0 ON (((LOWER(rt0.c2)))>(((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (('CK*|3')))))) WHERE ((('') NOT BETWEEN (((((rt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (rt0.c0))) ORDER BY CASE (~ (rt0.c0))  WHEN CASE v0.c0  WHEN rt0.c2 THEN v0.c0 END THEN (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE ((vt0.c0) NOTNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('') NOT BETWEEN (((((rt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (rt0.c0))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (- (CASE rt0.c1  WHEN v0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN x'e95e' THEN vt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END)) RIGHT OUTER JOIN vt0 ON (((LOWER(rt0.c2)))>(((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (('CK*|3')))))) ORDER BY CASE (~ (rt0.c0))  WHEN CASE v0.c0  WHEN rt0.c2 THEN v0.c0 END THEN (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE ((vt0.c0) NOTNULL) END  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((v0.c0))<>((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0))<>((v0.c0))) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0))<>((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0))<>((v0.c0))) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0))<>((v0.c0))) IN ()));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((('') BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((('') BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((('') BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((('') BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((('') BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE);
SELECT * FROM vt0, v0 LEFT OUTER JOIN rt0 ON (~ (((((v0.c0)AND(vt0.c0)))AND(rt0.c0)))) WHERE (((((((((((vt0.c0)|(1)))OR(LOWER(v0.c0))))OR((v0.c0 IN ()))))OR(rt0.c1 COLLATE BINARY)))AND(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)|(1)))OR(LOWER(v0.c0))))OR((v0.c0 IN ()))))OR(rt0.c1 COLLATE BINARY)))AND(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON (~ (((((v0.c0)AND(vt0.c0)))AND(rt0.c0)))));
SELECT * FROM vt0, v0 LEFT OUTER JOIN rt0 ON (~ (((((v0.c0)AND(vt0.c0)))AND(rt0.c0)))) WHERE (((((((((((vt0.c0)|(1)))OR(LOWER(v0.c0))))OR((v0.c0 IN ()))))OR(rt0.c1 COLLATE BINARY)))AND(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)|(1)))OR(LOWER(v0.c0))))OR((v0.c0 IN ()))))OR(rt0.c1 COLLATE BINARY)))AND(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON (~ (((((v0.c0)AND(vt0.c0)))AND(rt0.c0)))));
SELECT * FROM vt0, v0 LEFT OUTER JOIN rt0 ON (~ (((((v0.c0)AND(vt0.c0)))AND(rt0.c0)))) WHERE (((((((((((vt0.c0)|(1)))OR(LOWER(v0.c0))))OR((v0.c0 IN ()))))OR(rt0.c1 COLLATE BINARY)))AND(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((((rt0.c0)<(v0.c0)))/(RTRIM(rt0.c1)))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((rt0.c1) ISNULL)) AND (v0.c0)), CAST(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(v0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<(v0.c0)))/(RTRIM(rt0.c1)))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((rt0.c1) ISNULL)) AND (v0.c0)), CAST(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(v0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((((rt0.c0)<(v0.c0)))/(RTRIM(rt0.c1)))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((rt0.c1) ISNULL)) AND (v0.c0)), CAST(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(v0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<(v0.c0)))/(RTRIM(rt0.c1)))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((rt0.c1) ISNULL)) AND (v0.c0)), CAST(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(v0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((((rt0.c0)<(v0.c0)))/(RTRIM(rt0.c1)))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((rt0.c1) ISNULL)) AND (v0.c0)), CAST(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(v0.c0)) AS INTEGER);
SELECT COUNT(*) FROM rt0 WHERE (((COALESCE(DISTINCT rt0.c1, rt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT rt0.c1, rt0.c0)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((COALESCE(DISTINCT rt0.c1, rt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT rt0.c1, rt0.c0)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((COALESCE(DISTINCT rt0.c1, rt0.c0)) IS TRUE));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))))) ORDER BY ((((((x'268f')OR(v0.c0)))AND(v0.c0)))IS(((v0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((x'268f')OR(v0.c0)))AND(v0.c0)))IS(((v0.c0) IS TRUE))) ASC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))))) ORDER BY ((((((x'268f')OR(v0.c0)))AND(v0.c0)))IS(((v0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((x'268f')OR(v0.c0)))AND(v0.c0)))IS(((v0.c0) IS TRUE))) ASC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))))) ORDER BY ((((((x'268f')OR(v0.c0)))AND(v0.c0)))IS(((v0.c0) IS TRUE))) ASC;
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c0) IS FALSE))IS((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) WHERE ((- (CASE v0.c0  WHEN v0.c0 THEN rt0.c1 END))) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((- (CASE v0.c0  WHEN v0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c0) IS FALSE))IS((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ()) ASC);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c0) IS FALSE))IS((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) WHERE ((- (CASE v0.c0  WHEN v0.c0 THEN rt0.c1 END))) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((- (CASE v0.c0  WHEN v0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c0) IS FALSE))IS((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ()) ASC);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c0) IS FALSE))IS((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) WHERE ((- (CASE v0.c0  WHEN v0.c0 THEN rt0.c1 END))) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ()) ASC;
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((HEX(v0.c0))) AND ((CAST(v0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((HEX(v0.c0))) AND ((CAST(v0.c0 AS TEXT))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((HEX(v0.c0))) AND ((CAST(v0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((HEX(v0.c0))) AND ((CAST(v0.c0 AS TEXT))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((HEX(v0.c0))) AND ((CAST(v0.c0 AS TEXT)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (CAST(rt0.c0 AS BLOB)))) ORDER BY ((((rt0.c0) ISNULL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) ISNULL)) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (CAST(rt0.c0 AS BLOB)))) ORDER BY ((((rt0.c0) ISNULL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) ISNULL)) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (CAST(rt0.c0 AS BLOB)))) ORDER BY ((((rt0.c0) ISNULL)) IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END IN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), (NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END IN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), (NOT (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END IN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), (NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END IN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), (NOT (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END IN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), (NOT (v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE ((vt0.c0) IS FALSE)  WHEN (((v0.c0, NULL, v0.c0))==((v0.c0, vt0.c0, vt0.c0))) THEN ((v0.c0)<(vt0.c0)) ELSE (~ (vt0.c0)) END) ORDER BY (((vt0.c0 IN (v0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN NULL ELSE v0.c0 END)), (((v0.c0)) BETWEEN ((NULL)) AND ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) IS FALSE)  WHEN (((v0.c0, NULL, v0.c0))=((v0.c0, vt0.c0, vt0.c0))) THEN ((v0.c0)<(vt0.c0)) ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0 IN (v0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN NULL ELSE v0.c0 END)), (((v0.c0)) BETWEEN ((NULL)) AND ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE ((vt0.c0) IS FALSE)  WHEN (((v0.c0, NULL, v0.c0))==((v0.c0, vt0.c0, vt0.c0))) THEN ((v0.c0)<(vt0.c0)) ELSE (~ (vt0.c0)) END) ORDER BY (((vt0.c0 IN (v0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN NULL ELSE v0.c0 END)), (((v0.c0)) BETWEEN ((NULL)) AND ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) IS FALSE)  WHEN (((v0.c0, NULL, v0.c0))=((v0.c0, vt0.c0, vt0.c0))) THEN ((v0.c0)<(vt0.c0)) ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0 IN (v0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN NULL ELSE v0.c0 END)), (((v0.c0)) BETWEEN ((NULL)) AND ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE ((vt0.c0) IS FALSE)  WHEN (((v0.c0, NULL, v0.c0))==((v0.c0, vt0.c0, vt0.c0))) THEN ((v0.c0)<(vt0.c0)) ELSE (~ (vt0.c0)) END) ORDER BY (((vt0.c0 IN (v0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN NULL ELSE v0.c0 END)), (((v0.c0)) BETWEEN ((NULL)) AND ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((v0.c0)AND(v0.c0)))OR(v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)AND(v0.c0)))OR(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((v0.c0)AND(v0.c0)))OR(v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)AND(v0.c0)))OR(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((v0.c0)AND(v0.c0)))OR(v0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN 0X6b3790cb END IN ((vt0.c0 IN ())))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN 0X6b3790cb END IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN 0X6b3790cb END IN ((vt0.c0 IN ())))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN 0X6b3790cb END IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN 0X6b3790cb END IN ((vt0.c0 IN ())))) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((v0.c0)%(v0.c0))) NOT BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (((v0.c0)=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)%(v0.c0))) NOT BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (((v0.c0)=(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)%(v0.c0))) NOT BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (((v0.c0)=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)%(v0.c0))) NOT BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (((v0.c0)=(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)%(v0.c0))) NOT BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (((v0.c0)=(v0.c0)))));
SELECT * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(((v0.c0)+(v0.c0)))))AND((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(((v0.c0)+(v0.c0)))))AND((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(((v0.c0)+(v0.c0)))))AND((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(((v0.c0)+(v0.c0)))))AND((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(((v0.c0)+(v0.c0)))))AND((v0.c0 IN ()))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (((((((rt0.c0, rt0.c2, v0.c0))==((v0.c0, rt0.c0, ''))))OR(((rt0.c2)IS NOT(rt0.c0)))))OR(rt0.c1)) WHERE (CAST(rt0.c1 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((((((rt0.c0, rt0.c2, v0.c0))==((v0.c0, rt0.c0, ''))))OR(((rt0.c2)IS NOT(rt0.c0)))))OR(rt0.c1)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (((((((rt0.c0, rt0.c2, v0.c0))==((v0.c0, rt0.c0, ''))))OR(((rt0.c2)IS NOT(rt0.c0)))))OR(rt0.c1)) WHERE (CAST(rt0.c1 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((((((rt0.c0, rt0.c2, v0.c0))==((v0.c0, rt0.c0, ''))))OR(((rt0.c2)IS NOT(rt0.c0)))))OR(rt0.c1)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (((((((rt0.c0, rt0.c2, v0.c0))==((v0.c0, rt0.c0, ''))))OR(((rt0.c2)IS NOT(rt0.c0)))))OR(rt0.c1)) WHERE (CAST(rt0.c1 AS REAL) COLLATE RTRIM);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN (vt0.c0 IN (rt0.c0)) END) ORDER BY (((~ (rt0.c0)))<>(((vt0.c0)-(vt0.c0)))) DESC, ((((rt0.c0)-(vt0.c0))) NOT BETWEEN ((((rt0.c2, NULL, rt0.c0))<>((rt0.c2, rt0.c2, rt0.c1)))) AND (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN (vt0.c0 IN (rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((~ (rt0.c0)))<>(((vt0.c0)-(vt0.c0)))) DESC, ((((rt0.c0)-(vt0.c0))) NOT BETWEEN ((((rt0.c2, NULL, rt0.c0))!=((rt0.c2, rt0.c2, rt0.c1)))) AND (vt0.c0))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN (vt0.c0 IN (rt0.c0)) END) ORDER BY (((~ (rt0.c0)))<>(((vt0.c0)-(vt0.c0)))) DESC, ((((rt0.c0)-(vt0.c0))) NOT BETWEEN ((((rt0.c2, NULL, rt0.c0))<>((rt0.c2, rt0.c2, rt0.c1)))) AND (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN (vt0.c0 IN (rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((~ (rt0.c0)))<>(((vt0.c0)-(vt0.c0)))) DESC, ((((rt0.c0)-(vt0.c0))) NOT BETWEEN ((((rt0.c2, NULL, rt0.c0))!=((rt0.c2, rt0.c2, rt0.c1)))) AND (vt0.c0))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN (vt0.c0 IN (rt0.c0)) END) ORDER BY (((~ (rt0.c0)))<>(((vt0.c0)-(vt0.c0)))) DESC, ((((rt0.c0)-(vt0.c0))) NOT BETWEEN ((((rt0.c2, NULL, rt0.c0))<>((rt0.c2, rt0.c2, rt0.c1)))) AND (vt0.c0))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((('1217377394', 1412898814, vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'y3' THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)>(vt0.c0)), (NOT (vt0.c0)))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)))))) ORDER BY ((vt0.c0) IS TRUE)  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN (NOT (vt0.c0)) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('1217377394', 1412898814, vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'y3' THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)>(vt0.c0)), (NOT (vt0.c0)))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS TRUE)  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN (NOT (vt0.c0)) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END  NULLS LAST);
SELECT * FROM vt0 WHERE (((('1217377394', 1412898814, vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'y3' THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)>(vt0.c0)), (NOT (vt0.c0)))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)))))) ORDER BY ((vt0.c0) IS TRUE)  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN (NOT (vt0.c0)) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('1217377394', 1412898814, vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'y3' THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)>(vt0.c0)), (NOT (vt0.c0)))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS TRUE)  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN (NOT (vt0.c0)) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END  NULLS LAST);
SELECT * FROM vt0 WHERE (((('1217377394', 1412898814, vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'y3' THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)>(vt0.c0)), (NOT (vt0.c0)))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)))))) ORDER BY ((vt0.c0) IS TRUE)  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN (NOT (vt0.c0)) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS(vt0.c0)))LIKE(((vt0.c0)LIKE(vt0.c0))))) ORDER BY (- ((- (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(vt0.c0)))LIKE(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (- ((- (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS(vt0.c0)))LIKE(((vt0.c0)LIKE(vt0.c0))))) ORDER BY (- ((- (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(vt0.c0)))LIKE(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (- ((- (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS(vt0.c0)))LIKE(((vt0.c0)LIKE(vt0.c0))))) ORDER BY (- ((- (vt0.c0)))) ASC;
SELECT * FROM v0 WHERE (((((v0.c0) ISNULL))IS NOT(((v0.c0)IS(v0.c0))))) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL))IS NOT(((v0.c0)IS(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0) ISNULL))IS NOT(((v0.c0)IS(v0.c0))))) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL))IS NOT(((v0.c0)IS(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0) ISNULL))IS NOT(((v0.c0)IS(v0.c0))))) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS TEXT)) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (rt0.c1) ORDER BY (((((rt0.c0)&(rt0.c1))))==((0.8562169369572036 COLLATE NOCASE))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((((rt0.c0)&(rt0.c1))))=((0.8562169369572036 COLLATE NOCASE))) ASC);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (rt0.c1) ORDER BY (((((rt0.c0)&(rt0.c1))))==((0.8562169369572036 COLLATE NOCASE))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((((rt0.c0)&(rt0.c1))))=((0.8562169369572036 COLLATE NOCASE))) ASC);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (rt0.c1) ORDER BY (((((rt0.c0)&(rt0.c1))))==((0.8562169369572036 COLLATE NOCASE))) ASC;
SELECT * FROM rt0 WHERE (((((('' IN ()))AND(DATE(rt0.c1, rt0.c1, rt0.c0))))OR((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((('' IN ()))AND(DATE(rt0.c1, rt0.c1, rt0.c0))))OR((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((('' IN ()))AND(DATE(rt0.c1, rt0.c1, rt0.c0))))OR((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((('' IN ()))AND(DATE(rt0.c1, rt0.c1, rt0.c0))))OR((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((('' IN ()))AND(DATE(rt0.c1, rt0.c1, rt0.c0))))OR((rt0.c0 IN ()))));
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((CASE WHEN '' THEN rt0.c0 END)AND(CAST(rt0.c0 AS BLOB))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c2) NOT NULL))))OR(rt0.c1 COLLATE BINARY))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END) NOT BETWEEN ('194438167') AND (((rt0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN '' THEN rt0.c0 END)AND(CAST(rt0.c0 AS BLOB))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c2) NOT NULL))))OR(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END) NOT BETWEEN ('194438167') AND (((rt0.c0) NOTNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((CASE WHEN '' THEN rt0.c0 END)AND(CAST(rt0.c0 AS BLOB))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c2) NOT NULL))))OR(rt0.c1 COLLATE BINARY))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END) NOT BETWEEN ('194438167') AND (((rt0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN '' THEN rt0.c0 END)AND(CAST(rt0.c0 AS BLOB))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c2) NOT NULL))))OR(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END) NOT BETWEEN ('194438167') AND (((rt0.c0) NOTNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((CASE WHEN '' THEN rt0.c0 END)AND(CAST(rt0.c0 AS BLOB))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c2) NOT NULL))))OR(rt0.c1 COLLATE BINARY))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END) NOT BETWEEN ('194438167') AND (((rt0.c0) NOTNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((CAST(rt0.c1 AS NUMERIC) IN ())) ORDER BY CAST(rt0.c0 AS TEXT) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(rt0.c0 AS TEXT) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((CAST(rt0.c1 AS NUMERIC) IN ())) ORDER BY CAST(rt0.c0 AS TEXT) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(rt0.c0 AS TEXT) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((CAST(rt0.c1 AS NUMERIC) IN ())) ORDER BY CAST(rt0.c0 AS TEXT) COLLATE NOCASE DESC;
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ISNULL));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CAST(((rt0.c1) NOTNULL) AS INTEGER)) ORDER BY (((NOT (0X70ae4b7e))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((NOT (0X70ae4b7e))) IS FALSE));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CAST(((rt0.c1) NOTNULL) AS INTEGER)) ORDER BY (((NOT (0X70ae4b7e))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((NOT (0X70ae4b7e))) IS FALSE));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CAST(((rt0.c1) NOTNULL) AS INTEGER)) ORDER BY (((NOT (0X70ae4b7e))) IS FALSE);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (('' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (('' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (('' IN ()));
SELECT ALL * FROM vt0, rt0 WHERE (json_insert((- (rt0.c0)), CAST(rt0.c0 AS REAL), json_array_length(rt0.c0, rt0.c2))) ORDER BY 0.09041091028906867 DESC, (((vt0.c0, 0xffffffffd844958a, (NOT (vt0.c0))))==(((vt0.c0 IN ()), rt0.c0 COLLATE NOCASE, (NOT (rt0.c1))))) ASC  NULLS FIRST, ((2.136593841E9) BETWEEN ((((x''))=((rt0.c0)))) AND (((rt0.c1) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_insert((- (rt0.c0)), CAST(rt0.c0 AS REAL), json_array_length(rt0.c0, rt0.c2))) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.09041091028906867 DESC, (((vt0.c0, 0Xffffffffd844958a, (NOT (vt0.c0))))==(((vt0.c0 IN ()), rt0.c0 COLLATE NOCASE, (NOT (rt0.c1))))) ASC  NULLS FIRST, ((2.136593841E9) BETWEEN ((((x''))==((rt0.c0)))) AND (((rt0.c1) IS FALSE))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (json_insert((- (rt0.c0)), CAST(rt0.c0 AS REAL), json_array_length(rt0.c0, rt0.c2))) ORDER BY 0.09041091028906867 DESC, (((vt0.c0, 0xffffffffd844958a, (NOT (vt0.c0))))==(((vt0.c0 IN ()), rt0.c0 COLLATE NOCASE, (NOT (rt0.c1))))) ASC  NULLS FIRST, ((2.136593841E9) BETWEEN ((((x''))=((rt0.c0)))) AND (((rt0.c1) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_insert((- (rt0.c0)), CAST(rt0.c0 AS REAL), json_array_length(rt0.c0, rt0.c2))) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.09041091028906867 DESC, (((vt0.c0, 0Xffffffffd844958a, (NOT (vt0.c0))))==(((vt0.c0 IN ()), rt0.c0 COLLATE NOCASE, (NOT (rt0.c1))))) ASC  NULLS FIRST, ((2.136593841E9) BETWEEN ((((x''))==((rt0.c0)))) AND (((rt0.c1) IS FALSE))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN ((rt0.c2)+(vt0.c0)) THEN (+ (rt0.c1)) END) ORDER BY (+ ((rt0.c0 IN ('')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS BLOB)  WHEN ((rt0.c2)+(vt0.c0)) THEN (+ (rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ ((rt0.c0 IN ('')))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN ((rt0.c2)+(vt0.c0)) THEN (+ (rt0.c1)) END) ORDER BY (+ ((rt0.c0 IN ('')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS BLOB)  WHEN ((rt0.c2)+(vt0.c0)) THEN (+ (rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ ((rt0.c0 IN ('')))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN ((rt0.c2)+(vt0.c0)) THEN (+ (rt0.c1)) END) ORDER BY (+ ((rt0.c0 IN ('')))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE RTRIM);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))<=(((rt0.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))<=(((rt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))<=(((rt0.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))<=(((rt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))<=(((rt0.c0)||(vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR((vt0.c0 IN ()))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR((vt0.c0 IN ()))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR((vt0.c0 IN ()))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR((vt0.c0 IN ()))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR((vt0.c0 IN ()))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT * FROM vt0, rt0, v0 WHERE (CAST(((vt0.c0)IS NOT(v0.c0)) AS REAL)) ORDER BY ((((rt0.c1) ISNULL)) BETWEEN (1143419485) AND (((v0.c0)IS NOT(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)IS NOT(v0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((rt0.c1) ISNULL)) BETWEEN (1143419485) AND (((v0.c0)IS NOT(rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0, v0 WHERE (CAST(((vt0.c0)IS NOT(v0.c0)) AS REAL)) ORDER BY ((((rt0.c1) ISNULL)) BETWEEN (1143419485) AND (((v0.c0)IS NOT(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)IS NOT(v0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((rt0.c1) ISNULL)) BETWEEN (1143419485) AND (((v0.c0)IS NOT(rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0, v0 WHERE (CAST(((vt0.c0)IS NOT(v0.c0)) AS REAL)) ORDER BY ((((rt0.c1) ISNULL)) BETWEEN (1143419485) AND (((v0.c0)IS NOT(rt0.c2)))) ASC  NULLS FIRST;
SELECT ALL * FROM v0, vt0, rt0 WHERE ((NOT ((~ (vt0.c0))))) ORDER BY rt0.c0 DESC, ((HEX(rt0.c1))<((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (vt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY rt0.c0 DESC, ((HEX(rt0.c1))<((rt0.c2 IN ()))));
SELECT ALL * FROM v0, vt0, rt0 WHERE ((NOT ((~ (vt0.c0))))) ORDER BY rt0.c0 DESC, ((HEX(rt0.c1))<((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (vt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY rt0.c0 DESC, ((HEX(rt0.c1))<((rt0.c2 IN ()))));
SELECT ALL * FROM v0, vt0, rt0 WHERE ((NOT ((~ (vt0.c0))))) ORDER BY rt0.c0 DESC, ((HEX(rt0.c1))<((rt0.c2 IN ())));
SELECT * FROM rt0, v0 WHERE ((((~ (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((~ (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((~ (rt0.c1))) IS FALSE));
SELECT * FROM vt0, v0 WHERE (((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND((v0.c0 IN ())))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL DESC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND((v0.c0 IN ())))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL DESC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND((v0.c0 IN ())))) ORDER BY NULL DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((x'')>=(0x4f2b2317))) ISNULL)) ORDER BY ((((v0.c0) IS FALSE))GLOB(((v0.c0) NOTNULL))), ((v0.c0)=(((NULL) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST, CAST('-1261602940' AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'')>=(0x4f2b2317))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS FALSE))GLOB(((v0.c0) NOTNULL))), ((v0.c0)=(((NULL) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST, CAST('-1261602940' AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((x'')>=(0x4f2b2317))) ISNULL)) ORDER BY ((((v0.c0) IS FALSE))GLOB(((v0.c0) NOTNULL))), ((v0.c0)=(((NULL) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST, CAST('-1261602940' AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'')>=(0x4f2b2317))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS FALSE))GLOB(((v0.c0) NOTNULL))), ((v0.c0)=(((NULL) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST, CAST('-1261602940' AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((x'')>=(0x4f2b2317))) ISNULL)) ORDER BY ((((v0.c0) IS FALSE))GLOB(((v0.c0) NOTNULL))), ((v0.c0)=(((NULL) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST, CAST('-1261602940' AS BLOB) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)*(v0.c0)))<<('1034240716')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(v0.c0)))<<('1034240716'))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)*(v0.c0)))<<('1034240716')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(v0.c0)))<<('1034240716'))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)*(v0.c0)))<<('1034240716')));
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (SQLITE_COMPILEOPTION_USED(-9.79882502E8));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(-9.79882502E8)) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (SQLITE_COMPILEOPTION_USED(-9.79882502E8));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(-9.79882502E8)) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (SQLITE_COMPILEOPTION_USED(-9.79882502E8));
SELECT * FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN (rt0.c2 IN ()) ELSE ((rt0.c0) IS TRUE) END) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c1 AS BLOB) THEN (rt0.c2 IN ()) ELSE ((rt0.c0) IS TRUE) END) IS TRUE)  as count FROM rt0 ORDER BY '' ASC);
SELECT * FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN (rt0.c2 IN ()) ELSE ((rt0.c0) IS TRUE) END) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c1 AS BLOB) THEN (rt0.c2 IN ()) ELSE ((rt0.c0) IS TRUE) END) IS TRUE)  as count FROM rt0 ORDER BY '' ASC);
SELECT * FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN (rt0.c2 IN ()) ELSE ((rt0.c0) IS TRUE) END) ORDER BY '' ASC;
SELECT * FROM vt0 WHERE ((NOT (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (TYPEOF(DISTINCT ((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)))) ORDER BY 70903530  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY 70903530  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (TYPEOF(DISTINCT ((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)))) ORDER BY 70903530  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY 70903530  NULLS FIRST);
SELECT * FROM rt0, vt0, v0 WHERE (((CAST(vt0.c0 AS TEXT))GLOB(LENGTH(v0.c0)))) ORDER BY (((('-970960480' IN ()), (vt0.c0 IN ()), ((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c0))))<((((x'1a8bf5c7') NOT BETWEEN (v0.c0) AND (vt0.c0)), NULL, LENGTH(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))GLOB(LENGTH(v0.c0)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((('-970960480' IN ()), (vt0.c0 IN ()), ((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c0))))<((((x'1a8bf5c7') NOT BETWEEN (v0.c0) AND (vt0.c0)), NULL, LENGTH(rt0.c0)))) DESC);
SELECT * FROM rt0, vt0, v0 WHERE (((CAST(vt0.c0 AS TEXT))GLOB(LENGTH(v0.c0)))) ORDER BY (((('-970960480' IN ()), (vt0.c0 IN ()), ((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c0))))<((((x'1a8bf5c7') NOT BETWEEN (v0.c0) AND (vt0.c0)), NULL, LENGTH(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))GLOB(LENGTH(v0.c0)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((('-970960480' IN ()), (vt0.c0 IN ()), ((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c0))))<((((x'1a8bf5c7') NOT BETWEEN (v0.c0) AND (vt0.c0)), NULL, LENGTH(rt0.c0)))) DESC);
SELECT * FROM rt0, vt0, v0 WHERE (((CAST(vt0.c0 AS TEXT))GLOB(LENGTH(v0.c0)))) ORDER BY (((('-970960480' IN ()), (vt0.c0 IN ()), ((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c0))))<((((x'1a8bf5c7') NOT BETWEEN (v0.c0) AND (vt0.c0)), NULL, LENGTH(rt0.c0)))) DESC;
SELECT * FROM rt0, vt0, v0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE ('');
SELECT * FROM v0, rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c0) IS TRUE))) AND (('819466746' COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((((rt0.c0) IS TRUE))) AND (('819466746' COLLATE RTRIM)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c0) IS TRUE))) AND (('819466746' COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((((rt0.c0) IS TRUE))) AND (('819466746' COLLATE RTRIM)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c0) IS TRUE))) AND (('819466746' COLLATE RTRIM))));
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(((v0.c0) IS TRUE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(((v0.c0) IS TRUE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(((v0.c0) IS TRUE) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (((((v0.c0)AND(v0.c0)))AND(NULL)))) WHERE (((((v0.c0)GLOB(v0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)GLOB(v0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (NULL))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (((((v0.c0)AND(v0.c0)))AND(NULL)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (((((v0.c0)AND(v0.c0)))AND(NULL)))) WHERE (((((v0.c0)GLOB(v0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)GLOB(v0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (NULL))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (((((v0.c0)AND(v0.c0)))AND(NULL)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (((((v0.c0)AND(v0.c0)))AND(NULL)))) WHERE (((((v0.c0)GLOB(v0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) AND (NULL)));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)<>(rt0.c0))) IS FALSE)) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0)>=(rt0.c1)))) AND ((CASE WHEN rt0.c1 THEN 0.6839081301967077 END))) ASC  NULLS LAST, (NOT ((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)!=(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0)>=(rt0.c1)))) AND ((CASE WHEN rt0.c1 THEN 0.6839081301967077 END))) ASC  NULLS LAST, (NOT ((rt0.c0 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)<>(rt0.c0))) IS FALSE)) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0)>=(rt0.c1)))) AND ((CASE WHEN rt0.c1 THEN 0.6839081301967077 END))) ASC  NULLS LAST, (NOT ((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)!=(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0)>=(rt0.c1)))) AND ((CASE WHEN rt0.c1 THEN 0.6839081301967077 END))) ASC  NULLS LAST, (NOT ((rt0.c0 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)<>(rt0.c0))) IS FALSE)) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0)>=(rt0.c1)))) AND ((CASE WHEN rt0.c1 THEN 0.6839081301967077 END))) ASC  NULLS LAST, (NOT ((rt0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((rt0.c1) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) NOT NULL) IN ())) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((rt0.c1) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) NOT NULL) IN ())) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((rt0.c1) NOT NULL) IN ()));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((((vt0.c0, rt0.c0, rt0.c1))<>((vt0.c0, rt0.c2, v0.c0)))) IS TRUE)) ORDER BY ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))))<(((+ (v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, rt0.c0, rt0.c1))<>((vt0.c0, rt0.c2, v0.c0)))) IS TRUE)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))))<(((+ (v0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((((vt0.c0, rt0.c0, rt0.c1))<>((vt0.c0, rt0.c2, v0.c0)))) IS TRUE)) ORDER BY ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))))<(((+ (v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, rt0.c0, rt0.c1))<>((vt0.c0, rt0.c2, v0.c0)))) IS TRUE)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))))<(((+ (v0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((((vt0.c0, rt0.c0, rt0.c1))<>((vt0.c0, rt0.c2, v0.c0)))) IS TRUE)) ORDER BY ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))))<(((+ (v0.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN v0 ON rt0.c2 WHERE ((((rt0.c2)) BETWEEN ((-4.65399275E8)) AND (('+<3f'))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((-4.65399275E8)) AND (('+<3f')))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON rt0.c2);
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN v0 ON rt0.c2 WHERE ((((rt0.c2)) BETWEEN ((-4.65399275E8)) AND (('+<3f'))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((-4.65399275E8)) AND (('+<3f')))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON rt0.c2);
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN v0 ON rt0.c2 WHERE ((((rt0.c2)) BETWEEN ((-4.65399275E8)) AND (('+<3f'))));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY)/(v0.c0 COLLATE BINARY))) ORDER BY ((v0.c0)>(v0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)/(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)>(v0.c0)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY)/(v0.c0 COLLATE BINARY))) ORDER BY ((v0.c0)>(v0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)/(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)>(v0.c0)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY)/(v0.c0 COLLATE BINARY))) ORDER BY ((v0.c0)>(v0.c0)) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0, rt0.c2, vt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c2, CAST(v0.c0 AS INTEGER), v0.c0 COLLATE BINARY, CAST(rt0.c1 AS REAL), ((((((((((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))AND(v0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))) AND ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)), (vt0.c0 IN ()), CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 END, rt0.c1 COLLATE NOCASE, rt0.c1))) CROSS JOIN v0 ON highlight(v0.c0, CAST(rt0.c2 AS INTEGER), (((rt0.c0, vt0.c0, v0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, vt0.c0, rt0.c2, rt0.c2)) AND (('1027616593', NULL, rt0.c2, rt0.c2, rt0.c2))), (~ (v0.c0))) WHERE ((('-1479984698') NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((('-1479984698') NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0, rt0.c2, vt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c2, CAST(v0.c0 AS INTEGER), v0.c0 COLLATE BINARY, CAST(rt0.c1 AS REAL), ((((((((((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))AND(v0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))) AND ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)), (vt0.c0 IN ()), CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 END, rt0.c1 COLLATE NOCASE, rt0.c1))) CROSS JOIN v0 ON highlight(v0.c0, CAST(rt0.c2 AS INTEGER), (((rt0.c0, vt0.c0, v0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, vt0.c0, rt0.c2, rt0.c2)) AND (('1027616593', NULL, rt0.c2, rt0.c2, rt0.c2))), (~ (v0.c0))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0, rt0.c2, vt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c2, CAST(v0.c0 AS INTEGER), v0.c0 COLLATE BINARY, CAST(rt0.c1 AS REAL), ((((((((((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))AND(v0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))) AND ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)), (vt0.c0 IN ()), CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 END, rt0.c1 COLLATE NOCASE, rt0.c1))) CROSS JOIN v0 ON highlight(v0.c0, CAST(rt0.c2 AS INTEGER), (((rt0.c0, vt0.c0, v0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, vt0.c0, rt0.c2, rt0.c2)) AND (('1027616593', NULL, rt0.c2, rt0.c2, rt0.c2))), (~ (v0.c0))) WHERE ((('-1479984698') NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((('-1479984698') NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0, rt0.c2, vt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c2, CAST(v0.c0 AS INTEGER), v0.c0 COLLATE BINARY, CAST(rt0.c1 AS REAL), ((((((((((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))AND(v0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))) AND ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)), (vt0.c0 IN ()), CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 END, rt0.c1 COLLATE NOCASE, rt0.c1))) CROSS JOIN v0 ON highlight(v0.c0, CAST(rt0.c2 AS INTEGER), (((rt0.c0, vt0.c0, v0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, vt0.c0, rt0.c2, rt0.c2)) AND (('1027616593', NULL, rt0.c2, rt0.c2, rt0.c2))), (~ (v0.c0))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CAST(((vt0.c0)GLOB(v0.c0)) AS NUMERIC) WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (((v0.c0) IS TRUE)) AND (vt0.c0))) ORDER BY (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<(('-1729546183'))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOT BETWEEN (((v0.c0) IS TRUE)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST(((vt0.c0)GLOB(v0.c0)) AS NUMERIC) ORDER BY (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<(('-1729546183'))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CAST(((vt0.c0)GLOB(v0.c0)) AS NUMERIC) WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (((v0.c0) IS TRUE)) AND (vt0.c0))) ORDER BY (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<(('-1729546183'))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOT BETWEEN (((v0.c0) IS TRUE)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST(((vt0.c0)GLOB(v0.c0)) AS NUMERIC) ORDER BY (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<(('-1729546183'))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CAST(((vt0.c0)GLOB(v0.c0)) AS NUMERIC) WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (((v0.c0) IS TRUE)) AND (vt0.c0))) ORDER BY (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<(('-1729546183'))) ASC  NULLS FIRST;
SELECT * FROM v0, rt0, vt0 WHERE (vt0.c0) ORDER BY CASE x''  WHEN vt0.c0 THEN ((((v0.c0)AND(NULL)))AND(v0.c0)) WHEN ((rt0.c1)/(v0.c0)) THEN 'ee95' WHEN CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 END THEN LTRIM(rt0.c2, v0.c0) ELSE TRIM(rt0.c0, v0.c0) END, (((((rt0.c0))<=((v0.c0)))) NOTNULL) ASC  NULLS LAST, LIKELY(((vt0.c0)IS(rt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CASE x''  WHEN vt0.c0 THEN ((((v0.c0)AND(NULL)))AND(v0.c0)) WHEN ((rt0.c1)/(v0.c0)) THEN 'ee95' WHEN CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 END THEN LTRIM(rt0.c2, v0.c0) ELSE TRIM(rt0.c0, v0.c0) END, (((((rt0.c0))<=((v0.c0)))) NOTNULL) ASC  NULLS LAST, LIKELY(((vt0.c0)IS(rt0.c1))) DESC  NULLS FIRST);
SELECT * FROM v0, rt0, vt0 WHERE (vt0.c0) ORDER BY CASE x''  WHEN vt0.c0 THEN ((((v0.c0)AND(NULL)))AND(v0.c0)) WHEN ((rt0.c1)/(v0.c0)) THEN 'ee95' WHEN CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 END THEN LTRIM(rt0.c2, v0.c0) ELSE TRIM(rt0.c0, v0.c0) END, (((((rt0.c0))<=((v0.c0)))) NOTNULL) ASC  NULLS LAST, LIKELY(((vt0.c0)IS(rt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CASE x''  WHEN vt0.c0 THEN ((((v0.c0)AND(NULL)))AND(v0.c0)) WHEN ((rt0.c1)/(v0.c0)) THEN 'ee95' WHEN CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 END THEN LTRIM(rt0.c2, v0.c0) ELSE TRIM(rt0.c0, v0.c0) END, (((((rt0.c0))<=((v0.c0)))) NOTNULL) ASC  NULLS LAST, LIKELY(((vt0.c0)IS(rt0.c1))) DESC  NULLS FIRST);
SELECT * FROM v0, rt0, vt0 WHERE (vt0.c0) ORDER BY CASE x''  WHEN vt0.c0 THEN ((((v0.c0)AND(NULL)))AND(v0.c0)) WHEN ((rt0.c1)/(v0.c0)) THEN 'ee95' WHEN CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 END THEN LTRIM(rt0.c2, v0.c0) ELSE TRIM(rt0.c0, v0.c0) END, (((((rt0.c0))<=((v0.c0)))) NOTNULL) ASC  NULLS LAST, LIKELY(((vt0.c0)IS(rt0.c1))) DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0, v0.c0, '-687911321'))) IN (((v0.c0) NOT NULL), v0.c0))) ORDER BY CASE WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM, (((v0.c0))>=((v0.c0))) COLLATE BINARY ASC  NULLS LAST, ((((v0.c0) NOTNULL))<<((((-1149598715))>((v0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0, v0.c0, '-687911321'))) IN (((v0.c0) NOT NULL), v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM, (((v0.c0))>=((v0.c0))) COLLATE BINARY ASC  NULLS LAST, ((((v0.c0) NOTNULL))<<((((-1149598715))>((v0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0, v0.c0, '-687911321'))) IN (((v0.c0) NOT NULL), v0.c0))) ORDER BY CASE WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM, (((v0.c0))>=((v0.c0))) COLLATE BINARY ASC  NULLS LAST, ((((v0.c0) NOTNULL))<<((((-1149598715))>((v0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0, v0.c0, '-687911321'))) IN (((v0.c0) NOT NULL), v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM, (((v0.c0))>=((v0.c0))) COLLATE BINARY ASC  NULLS LAST, ((((v0.c0) NOTNULL))<<((((-1149598715))>((v0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0, v0.c0, '-687911321'))) IN (((v0.c0) NOT NULL), v0.c0))) ORDER BY CASE WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM, (((v0.c0))>=((v0.c0))) COLLATE BINARY ASC  NULLS LAST, ((((v0.c0) NOTNULL))<<((((-1149598715))>((v0.c0))))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c1)<=(rt0.c1))) IS TRUE)) ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))||(rt0.c0)) DESC  NULLS FIRST, rt0.c1, (rt0.c2 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<=(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))||(rt0.c0)) DESC  NULLS FIRST, rt0.c1, (rt0.c2 IN ())  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c1)<=(rt0.c1))) IS TRUE)) ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))||(rt0.c0)) DESC  NULLS FIRST, rt0.c1, (rt0.c2 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<=(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))||(rt0.c0)) DESC  NULLS FIRST, rt0.c1, (rt0.c2 IN ())  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c1)<=(rt0.c1))) IS TRUE)) ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))||(rt0.c0)) DESC  NULLS FIRST, rt0.c1, (rt0.c2 IN ())  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((- ((('1491422044') NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ORDER BY CAST((('-644688191')=(rt0.c2)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((('1491422044') NOT BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CAST((('-644688191')=(rt0.c2)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((- ((('1491422044') NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ORDER BY CAST((('-644688191')=(rt0.c2)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((('1491422044') NOT BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CAST((('-644688191')=(rt0.c2)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((- ((('1491422044') NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ORDER BY CAST((('-644688191')=(rt0.c2)) AS TEXT)  NULLS LAST;
SELECT * FROM vt0, rt0, v0 WHERE (((((vt0.c0)=(vt0.c0)))>=(rt0.c2 COLLATE BINARY))) ORDER BY (((((((((vt0.c0 IN ()))AND(rt0.c1 COLLATE RTRIM)))OR((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0))))))AND((((rt0.c1, vt0.c0, v0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c1))))))OR(rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)=(vt0.c0)))>=(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((((((((vt0.c0 IN ()))AND(rt0.c1 COLLATE RTRIM)))OR((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0))))))AND((((rt0.c1, vt0.c0, v0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c1))))))OR(rt0.c2 COLLATE RTRIM)));
SELECT * FROM vt0, rt0, v0 WHERE (((((vt0.c0)=(vt0.c0)))>=(rt0.c2 COLLATE BINARY))) ORDER BY (((((((((vt0.c0 IN ()))AND(rt0.c1 COLLATE RTRIM)))OR((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0))))))AND((((rt0.c1, vt0.c0, v0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c1))))))OR(rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)=(vt0.c0)))>=(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((((((((vt0.c0 IN ()))AND(rt0.c1 COLLATE RTRIM)))OR((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0))))))AND((((rt0.c1, vt0.c0, v0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c1))))))OR(rt0.c2 COLLATE RTRIM)));
SELECT * FROM vt0, rt0, v0 WHERE (((((vt0.c0)=(vt0.c0)))>=(rt0.c2 COLLATE BINARY))) ORDER BY (((((((((vt0.c0 IN ()))AND(rt0.c1 COLLATE RTRIM)))OR((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0))))))AND((((rt0.c1, vt0.c0, v0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c1))))))OR(rt0.c2 COLLATE RTRIM));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOTNULL));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED INNER JOIN vt0 ON UNLIKELY(((0.5082555737675902) IS TRUE)) WHERE (((vt0.c0)LIKE(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)LIKE(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON UNLIKELY(((0.5082555737675902) IS TRUE)));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED INNER JOIN vt0 ON UNLIKELY(((0.5082555737675902) IS TRUE)) WHERE (((vt0.c0)LIKE(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)LIKE(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON UNLIKELY(((0.5082555737675902) IS TRUE)));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED INNER JOIN vt0 ON UNLIKELY(((0.5082555737675902) IS TRUE)) WHERE (((vt0.c0)LIKE(v0.c0)) COLLATE NOCASE);
SELECT * FROM v0, rt0 NATURAL JOIN vt0 WHERE ((~ ((((rt0.c0))<>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c0))!=((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN vt0);
SELECT * FROM v0, rt0 NATURAL JOIN vt0 WHERE ((~ ((((rt0.c0))<>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c0))!=((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN vt0);
SELECT * FROM v0, rt0 NATURAL JOIN vt0 WHERE ((~ ((((rt0.c0))<>((rt0.c2))))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))) BETWEEN (((rt0.c2)IS(v0.c0))) AND ((((v0.c0, rt0.c0, 0Xffffffffcf89695a)) NOT BETWEEN ((rt0.c2, v0.c0, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c2)))))) ORDER BY ((((((rt0.c1)OR('')))AND(v0.c0)))AND(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))) DESC, ((v0.c0)IS(NULL)) COLLATE RTRIM, (((rt0.c1)AND(rt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))) BETWEEN (((rt0.c2)IS(v0.c0))) AND ((((v0.c0, rt0.c0, 0Xffffffffcf89695a)) NOT BETWEEN ((rt0.c2, v0.c0, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((rt0.c1)OR('')))AND(v0.c0)))AND(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))) DESC, ((v0.c0)IS(NULL)) COLLATE RTRIM, (((rt0.c1)AND(rt0.c0)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))) BETWEEN (((rt0.c2)IS(v0.c0))) AND ((((v0.c0, rt0.c0, 0Xffffffffcf89695a)) NOT BETWEEN ((rt0.c2, v0.c0, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c2)))))) ORDER BY ((((((rt0.c1)OR('')))AND(v0.c0)))AND(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))) DESC, ((v0.c0)IS(NULL)) COLLATE RTRIM, (((rt0.c1)AND(rt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))) BETWEEN (((rt0.c2)IS(v0.c0))) AND ((((v0.c0, rt0.c0, 0Xffffffffcf89695a)) NOT BETWEEN ((rt0.c2, v0.c0, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((rt0.c1)OR('')))AND(v0.c0)))AND(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))) DESC, ((v0.c0)IS(NULL)) COLLATE RTRIM, (((rt0.c1)AND(rt0.c0)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))) BETWEEN (((rt0.c2)IS(v0.c0))) AND ((((v0.c0, rt0.c0, 0Xffffffffcf89695a)) NOT BETWEEN ((rt0.c2, v0.c0, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c2)))))) ORDER BY ((((((rt0.c1)OR('')))AND(v0.c0)))AND(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))) DESC, ((v0.c0)IS(NULL)) COLLATE RTRIM, (((rt0.c1)AND(rt0.c0)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((NOT (x'c185'))) ORDER BY ((NULL) BETWEEN ((- (rt0.c2))) AND (LIKELIHOOD(DISTINCT vt0.c0, 0.008689817131654731))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (x'c185'))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((NULL) BETWEEN ((- (rt0.c2))) AND (LIKELIHOOD(DISTINCT vt0.c0, 0.008689817131654731))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((NOT (x'c185'))) ORDER BY ((NULL) BETWEEN ((- (rt0.c2))) AND (LIKELIHOOD(DISTINCT vt0.c0, 0.008689817131654731))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (x'c185'))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((NULL) BETWEEN ((- (rt0.c2))) AND (LIKELIHOOD(DISTINCT vt0.c0, 0.008689817131654731))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((NOT (x'c185'))) ORDER BY ((NULL) BETWEEN ((- (rt0.c2))) AND (LIKELIHOOD(DISTINCT vt0.c0, 0.008689817131654731))) ASC;
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))<(vt0.c0))) ORDER BY '<䂸.\', (((CASE rt0.c1  WHEN rt0.c1 THEN NULL END))<((CAST(rt0.c1 AS REAL)))) ASC, (((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), ((rt0.c1) NOT NULL), rt0.c1 COLLATE BINARY)) AND ((CAST(rt0.c1 AS REAL), CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 1908679917 THEN rt0.c1 ELSE rt0.c0 END, LIKELY(DISTINCT rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS NUMERIC))<(vt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY '<䂸.\', (((CASE rt0.c1  WHEN rt0.c1 THEN NULL END))<((CAST(rt0.c1 AS REAL)))) ASC, (((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), ((rt0.c1) NOT NULL), rt0.c1 COLLATE BINARY)) AND ((CAST(rt0.c1 AS REAL), CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 1908679917 THEN rt0.c1 ELSE rt0.c0 END, LIKELY(DISTINCT rt0.c0)))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))<(vt0.c0))) ORDER BY '<䂸.\', (((CASE rt0.c1  WHEN rt0.c1 THEN NULL END))<((CAST(rt0.c1 AS REAL)))) ASC, (((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), ((rt0.c1) NOT NULL), rt0.c1 COLLATE BINARY)) AND ((CAST(rt0.c1 AS REAL), CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 1908679917 THEN rt0.c1 ELSE rt0.c0 END, LIKELY(DISTINCT rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS NUMERIC))<(vt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY '<䂸.\', (((CASE rt0.c1  WHEN rt0.c1 THEN NULL END))<((CAST(rt0.c1 AS REAL)))) ASC, (((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), ((rt0.c1) NOT NULL), rt0.c1 COLLATE BINARY)) AND ((CAST(rt0.c1 AS REAL), CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 1908679917 THEN rt0.c1 ELSE rt0.c0 END, LIKELY(DISTINCT rt0.c0)))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))<(vt0.c0))) ORDER BY '<䂸.\', (((CASE rt0.c1  WHEN rt0.c1 THEN NULL END))<((CAST(rt0.c1 AS REAL)))) ASC, (((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), ((rt0.c1) NOT NULL), rt0.c1 COLLATE BINARY)) AND ((CAST(rt0.c1 AS REAL), CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 1908679917 THEN rt0.c1 ELSE rt0.c0 END, LIKELY(DISTINCT rt0.c0)))) DESC;
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN (v0.c0 IN (v0.c0)) THEN x'10d1' COLLATE NOCASE ELSE NULL END;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (v0.c0 IN (v0.c0)) THEN x'10d1' COLLATE NOCASE ELSE NULL END);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN (v0.c0 IN (v0.c0)) THEN x'10d1' COLLATE NOCASE ELSE NULL END;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (v0.c0 IN (v0.c0)) THEN x'10d1' COLLATE NOCASE ELSE NULL END);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN (v0.c0 IN (v0.c0)) THEN x'10d1' COLLATE NOCASE ELSE NULL END;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((~ (NULL)))>(TIME(rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (NULL)))>(TIME(rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((~ (NULL)))>(TIME(rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (NULL)))>(TIME(rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((~ (NULL)))>(TIME(rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c2, v0.c0, rt0.c2))));
SELECT * FROM vt0, v0 WHERE (((NULL) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((NULL) IS TRUE)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((NULL) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((NULL) IS TRUE)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((NULL) IS TRUE));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((x'da70fefc')AND(rt0.c0)))AND(rt0.c1)) COLLATE BINARY) ORDER BY ((((((vt0.c0)LIKE(vt0.c0)))AND((rt0.c2 IN ()))))OR(((rt0.c2)IS NOT(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'da70fefc')AND(rt0.c0)))AND(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((((vt0.c0)LIKE(vt0.c0)))AND((rt0.c2 IN ()))))OR(((rt0.c2)IS NOT(rt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((x'da70fefc')AND(rt0.c0)))AND(rt0.c1)) COLLATE BINARY) ORDER BY ((((((vt0.c0)LIKE(vt0.c0)))AND((rt0.c2 IN ()))))OR(((rt0.c2)IS NOT(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'da70fefc')AND(rt0.c0)))AND(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((((vt0.c0)LIKE(vt0.c0)))AND((rt0.c2 IN ()))))OR(((rt0.c2)IS NOT(rt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((x'da70fefc')AND(rt0.c0)))AND(rt0.c1)) COLLATE BINARY) ORDER BY ((((((vt0.c0)LIKE(vt0.c0)))AND((rt0.c2 IN ()))))OR(((rt0.c2)IS NOT(rt0.c1)))) DESC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (CASE WHEN ((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) THEN '-931784722' ELSE (NOT (rt0.c2)) END) ORDER BY (x'3198' IN ()), (- (TIME(rt0.c2, '}*c4', vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) THEN '-931784722' ELSE (NOT (rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (x'3198' IN ()), (- (TIME(rt0.c2, '}*c4', vt0.c0))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN ((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) THEN '-931784722' ELSE (NOT (rt0.c2)) END) ORDER BY (x'3198' IN ()), (- (TIME(rt0.c2, '}*c4', vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) THEN '-931784722' ELSE (NOT (rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (x'3198' IN ()), (- (TIME(rt0.c2, '}*c4', vt0.c0))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN ((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) THEN '-931784722' ELSE (NOT (rt0.c2)) END) ORDER BY (x'3198' IN ()), (- (TIME(rt0.c2, '}*c4', vt0.c0))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((('') ISNULL))AND((- (rt0.c0)))))OR(((x'') NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((((('') ISNULL))AND((- (rt0.c0)))))OR(((x'') NOTNULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((('') ISNULL))AND((- (rt0.c0)))))OR(((x'') NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((((('') ISNULL))AND((- (rt0.c0)))))OR(((x'') NOTNULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((('') ISNULL))AND((- (rt0.c0)))))OR(((x'') NOTNULL))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2)IS(vt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))AND(((rt0.c2)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)IS(vt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))AND(((rt0.c2)&(rt0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2)IS(vt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))AND(((rt0.c2)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)IS(vt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))AND(((rt0.c2)&(rt0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2)IS(vt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))AND(((rt0.c2)&(rt0.c1)))));
SELECT ALL * FROM vt0, v0 INNER JOIN rt0 ON ((LOWER(rt0.c0))<=(rt0.c1 COLLATE RTRIM)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON ((LOWER(rt0.c0))<=(rt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM vt0, v0 INNER JOIN rt0 ON ((LOWER(rt0.c0))<=(rt0.c1 COLLATE RTRIM)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON ((LOWER(rt0.c0))<=(rt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM vt0, v0 INNER JOIN rt0 ON ((LOWER(rt0.c0))<=(rt0.c1 COLLATE RTRIM)) WHERE (NULL);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))))=((((rt0.c0) BETWEEN (rt0.c1) AND (NULL))))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))))==((((rt0.c0) BETWEEN (rt0.c1) AND (NULL)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))))=((((rt0.c0) BETWEEN (rt0.c1) AND (NULL))))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))))==((((rt0.c0) BETWEEN (rt0.c1) AND (NULL)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))))=((((rt0.c0) BETWEEN (rt0.c1) AND (NULL))))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END))>=((((0xffffffffafb6b909) NOTNULL)))) FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c0)>=(rt0.c2)) THEN (+ (v0.c0)) ELSE (- (v0.c0)) END WHERE (json_patch(UPPER(rt0.c1), (-1131826479 IN ()))) ORDER BY (((rt0.c0 IN ())) BETWEEN (((rt0.c1)&(vt0.c0))) AND (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) ASC  NULLS LAST, ((((((((((rt0.c1)AND(v0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))+(UPPER(DISTINCT vt0.c0))) ASC  NULLS FIRST, (CASE WHEN vt0.c0 THEN rt0.c0 ELSE 0xffffffffd76991fc END IN ()) ASC, (vt0.c0 IN (rt0.c1 COLLATE NOCASE, rt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(UPPER(rt0.c1), (-1131826479 IN ()))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END))>=((((0xffffffffafb6b909) NOTNULL)))) FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c0)>=(rt0.c2)) THEN (+ (v0.c0)) ELSE (- (v0.c0)) END ORDER BY (((rt0.c0 IN ())) BETWEEN (((rt0.c1)&(vt0.c0))) AND (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) ASC  NULLS LAST, ((((((((((rt0.c1)AND(v0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))+(UPPER(DISTINCT vt0.c0))) ASC  NULLS FIRST, (CASE WHEN vt0.c0 THEN rt0.c0 ELSE 0xffffffffd76991fc END IN ()) ASC, (vt0.c0 IN (rt0.c1 COLLATE NOCASE, rt0.c0 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END))>=((((0xffffffffafb6b909) NOTNULL)))) FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c0)>=(rt0.c2)) THEN (+ (v0.c0)) ELSE (- (v0.c0)) END WHERE (json_patch(UPPER(rt0.c1), (-1131826479 IN ()))) ORDER BY (((rt0.c0 IN ())) BETWEEN (((rt0.c1)&(vt0.c0))) AND (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) ASC  NULLS LAST, ((((((((((rt0.c1)AND(v0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))+(UPPER(DISTINCT vt0.c0))) ASC  NULLS FIRST, (CASE WHEN vt0.c0 THEN rt0.c0 ELSE 0xffffffffd76991fc END IN ()) ASC, (vt0.c0 IN (rt0.c1 COLLATE NOCASE, rt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(UPPER(rt0.c1), (-1131826479 IN ()))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END))>=((((0xffffffffafb6b909) NOTNULL)))) FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c0)>=(rt0.c2)) THEN (+ (v0.c0)) ELSE (- (v0.c0)) END ORDER BY (((rt0.c0 IN ())) BETWEEN (((rt0.c1)&(vt0.c0))) AND (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) ASC  NULLS LAST, ((((((((((rt0.c1)AND(v0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))+(UPPER(DISTINCT vt0.c0))) ASC  NULLS FIRST, (CASE WHEN vt0.c0 THEN rt0.c0 ELSE 0xffffffffd76991fc END IN ()) ASC, (vt0.c0 IN (rt0.c1 COLLATE NOCASE, rt0.c0 COLLATE BINARY)) DESC);
SELECT * FROM v0 WHERE (IFNULL(v0.c0 COLLATE RTRIM, ((v0.c0) NOTNULL))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))%(v0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(v0.c0 COLLATE RTRIM, ((v0.c0) NOTNULL))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))%(v0.c0)) ASC);
SELECT * FROM v0 WHERE (IFNULL(v0.c0 COLLATE RTRIM, ((v0.c0) NOTNULL))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))%(v0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(v0.c0 COLLATE RTRIM, ((v0.c0) NOTNULL))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))%(v0.c0)) ASC);
SELECT * FROM v0 WHERE (IFNULL(v0.c0 COLLATE RTRIM, ((v0.c0) NOTNULL))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))%(v0.c0)) ASC;
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR((((vt0.c0, '-1507339137', v0.c0, v0.c0, v0.c0))<((0.35222276367796823, 'Y뀶OM}\n', '263882067', vt0.c0, 0.3950210985121232))))))OR(((((0.6814424241734298)OR(v0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR((((vt0.c0, '-1507339137', v0.c0, v0.c0, v0.c0))<((0.35222276367796823, 'Y뀶OM}\n', '263882067', vt0.c0, 0.3950210985121232))))))OR(((((0.6814424241734298)OR(v0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR((((vt0.c0, '-1507339137', v0.c0, v0.c0, v0.c0))<((0.35222276367796823, 'Y뀶OM}\n', '263882067', vt0.c0, 0.3950210985121232))))))OR(((((0.6814424241734298)OR(v0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR((((vt0.c0, '-1507339137', v0.c0, v0.c0, v0.c0))<((0.35222276367796823, 'Y뀶OM}\n', '263882067', vt0.c0, 0.3950210985121232))))))OR(((((0.6814424241734298)OR(v0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR((((vt0.c0, '-1507339137', v0.c0, v0.c0, v0.c0))<((0.35222276367796823, 'Y뀶OM}\n', '263882067', vt0.c0, 0.3950210985121232))))))OR(((((0.6814424241734298)OR(v0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1) NOTNULL))) AND ((CAST(NULL AS REAL))))) ORDER BY ((CAST(rt0.c1 AS INTEGER))/((rt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((((rt0.c1) NOTNULL))) AND ((CAST(NULL AS REAL))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((CAST(rt0.c1 AS INTEGER))/((rt0.c0 IN (vt0.c0)))));
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1) NOTNULL))) AND ((CAST(NULL AS REAL))))) ORDER BY ((CAST(rt0.c1 AS INTEGER))/((rt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((((rt0.c1) NOTNULL))) AND ((CAST(NULL AS REAL))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((CAST(rt0.c1 AS INTEGER))/((rt0.c0 IN (vt0.c0)))));
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1) NOTNULL))) AND ((CAST(NULL AS REAL))))) ORDER BY ((CAST(rt0.c1 AS INTEGER))/((rt0.c0 IN (vt0.c0))));
SELECT COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt0 ON ((rt0.c2) IS TRUE) WHERE ((CASE WHEN '-687911321' THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN 2136593841 THEN v0.c0 ELSE v0.c0 END IN ())) ORDER BY vt0.c0, (((((vt0.c0) NOT NULL), ((((rt0.c2)OR(v0.c0)))OR(v0.c0)), rt0.c1 COLLATE BINARY))==((TYPEOF(x''), ((vt0.c0) NOT NULL), rt0.c0))), ((((rt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))<>(((rt0.c1)OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN '-687911321' THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN 2136593841 THEN v0.c0 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt0 ON ((rt0.c2) IS TRUE) ORDER BY vt0.c0, (((((vt0.c0) NOT NULL), ((((rt0.c2)OR(v0.c0)))OR(v0.c0)), rt0.c1 COLLATE BINARY))==((TYPEOF(x''), ((vt0.c0) NOT NULL), rt0.c0))), ((((rt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))!=(((rt0.c1)OR(rt0.c1)))));
SELECT COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt0 ON ((rt0.c2) IS TRUE) WHERE ((CASE WHEN '-687911321' THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN 2136593841 THEN v0.c0 ELSE v0.c0 END IN ())) ORDER BY vt0.c0, (((((vt0.c0) NOT NULL), ((((rt0.c2)OR(v0.c0)))OR(v0.c0)), rt0.c1 COLLATE BINARY))==((TYPEOF(x''), ((vt0.c0) NOT NULL), rt0.c0))), ((((rt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))<>(((rt0.c1)OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN '-687911321' THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN 2136593841 THEN v0.c0 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt0 ON ((rt0.c2) IS TRUE) ORDER BY vt0.c0, (((((vt0.c0) NOT NULL), ((((rt0.c2)OR(v0.c0)))OR(v0.c0)), rt0.c1 COLLATE BINARY))==((TYPEOF(x''), ((vt0.c0) NOT NULL), rt0.c0))), ((((rt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))!=(((rt0.c1)OR(rt0.c1)))));
SELECT COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt0 ON ((rt0.c2) IS TRUE) WHERE ((CASE WHEN '-687911321' THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN 2136593841 THEN v0.c0 ELSE v0.c0 END IN ())) ORDER BY vt0.c0, (((((vt0.c0) NOT NULL), ((((rt0.c2)OR(v0.c0)))OR(v0.c0)), rt0.c1 COLLATE BINARY))==((TYPEOF(x''), ((vt0.c0) NOT NULL), rt0.c0))), ((((rt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))<>(((rt0.c1)OR(rt0.c1))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (vt0.c0 COLLATE BINARY IN ()) WHERE (CASE WHEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN NULL ELSE ((vt0.c0)+(v0.c0)) END) ORDER BY CAST(((((v0.c0)OR(vt0.c0)))AND(v0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN NULL ELSE ((vt0.c0)+(v0.c0)) END) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (vt0.c0 COLLATE BINARY IN ()) ORDER BY CAST(((((v0.c0)OR(vt0.c0)))AND(v0.c0)) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (vt0.c0 COLLATE BINARY IN ()) WHERE (CASE WHEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN NULL ELSE ((vt0.c0)+(v0.c0)) END) ORDER BY CAST(((((v0.c0)OR(vt0.c0)))AND(v0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN NULL ELSE ((vt0.c0)+(v0.c0)) END) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (vt0.c0 COLLATE BINARY IN ()) ORDER BY CAST(((((v0.c0)OR(vt0.c0)))AND(v0.c0)) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (vt0.c0 COLLATE BINARY IN ()) WHERE (CASE WHEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN NULL ELSE ((vt0.c0)+(v0.c0)) END) ORDER BY CAST(((((v0.c0)OR(vt0.c0)))AND(v0.c0)) AS BLOB) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON (rt0.c1 IN ()) WHERE ((((((rt0.c1)OR(rt0.c0)), (~ (rt0.c2)), (((rt0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c2)))))>((((rt0.c1)>>(rt0.c2)), (((rt0.c2))<((NULL))), (((rt0.c2))<=((rt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR(rt0.c0)), (~ (rt0.c2)), (((rt0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c2)))))>((((rt0.c1)>>(rt0.c2)), (((rt0.c2))<((NULL))), (((rt0.c2))<=((rt0.c0))))))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON (rt0.c1 IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON (rt0.c1 IN ()) WHERE ((((((rt0.c1)OR(rt0.c0)), (~ (rt0.c2)), (((rt0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c2)))))>((((rt0.c1)>>(rt0.c2)), (((rt0.c2))<((NULL))), (((rt0.c2))<=((rt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR(rt0.c0)), (~ (rt0.c2)), (((rt0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c2)))))>((((rt0.c1)>>(rt0.c2)), (((rt0.c2))<((NULL))), (((rt0.c2))<=((rt0.c0))))))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON (rt0.c1 IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON (rt0.c1 IN ()) WHERE ((((((rt0.c1)OR(rt0.c0)), (~ (rt0.c2)), (((rt0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c2)))))>((((rt0.c1)>>(rt0.c2)), (((rt0.c2))<((NULL))), (((rt0.c2))<=((rt0.c0)))))));
SELECT ALL * FROM vt0, v0, rt0 WHERE (0.4671254055778692);
SELECT SUM(count) FROM (SELECT ALL ((0.4671254055778692) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (0.4671254055778692);
SELECT SUM(count) FROM (SELECT ALL ((0.4671254055778692) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (0.4671254055778692);
SELECT COUNT(*) FROM vt0 WHERE (((UPPER(DISTINCT vt0.c0))==(-828507072)));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT vt0.c0))==(-828507072))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((UPPER(DISTINCT vt0.c0))==(-828507072)));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT vt0.c0))==(-828507072))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((UPPER(DISTINCT vt0.c0))==(-828507072)));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((((((vt0.c0 COLLATE RTRIM)AND(x'')))AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)))AND((((v0.c0))<=((v0.c0))))))OR(ABS(vt0.c0))))OR(CAST(v0.c0 AS NUMERIC))))AND(((v0.c0)AND(v0.c0))))) ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN ((('俄,') IS TRUE)) AND (((vt0.c0)%(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0 COLLATE RTRIM)AND(x'')))AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)))AND((((v0.c0))<=((v0.c0))))))OR(ABS(vt0.c0))))OR(CAST(v0.c0 AS NUMERIC))))AND(((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN ((('俄,') IS TRUE)) AND (((vt0.c0)%(vt0.c0)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((((((vt0.c0 COLLATE RTRIM)AND(x'')))AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)))AND((((v0.c0))<=((v0.c0))))))OR(ABS(vt0.c0))))OR(CAST(v0.c0 AS NUMERIC))))AND(((v0.c0)AND(v0.c0))))) ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN ((('俄,') IS TRUE)) AND (((vt0.c0)%(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0 COLLATE RTRIM)AND(x'')))AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)))AND((((v0.c0))<=((v0.c0))))))OR(ABS(vt0.c0))))OR(CAST(v0.c0 AS NUMERIC))))AND(((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN ((('俄,') IS TRUE)) AND (((vt0.c0)%(vt0.c0)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((((((vt0.c0 COLLATE RTRIM)AND(x'')))AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)))AND((((v0.c0))<=((v0.c0))))))OR(ABS(vt0.c0))))OR(CAST(v0.c0 AS NUMERIC))))AND(((v0.c0)AND(v0.c0))))) ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN ((('俄,') IS TRUE)) AND (((vt0.c0)%(vt0.c0))));
SELECT ALL * FROM rt0, v0 WHERE ((((LOWER(DISTINCT rt0.c1)))<((((v0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((LOWER(DISTINCT rt0.c1)))<((((v0.c0) ISNULL))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((LOWER(DISTINCT rt0.c1)))<((((v0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((LOWER(DISTINCT rt0.c1)))<((((v0.c0) ISNULL))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((LOWER(DISTINCT rt0.c1)))<((((v0.c0) ISNULL)))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)LIKE(vt0.c0)) THEN (- (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)LIKE(vt0.c0)) THEN (- (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)LIKE(vt0.c0)) THEN (- (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)LIKE(vt0.c0)) THEN (- (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)LIKE(vt0.c0)) THEN (- (vt0.c0)) END);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((+ (UNLIKELY(DISTINCT rt0.c2)))) ORDER BY ((((vt0.c0)IS(rt0.c2)))&((((v0.c0, rt0.c1, -157544751))>((rt0.c0, x'', rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (UNLIKELY(DISTINCT rt0.c2)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((vt0.c0)IS(rt0.c2)))&((((v0.c0, rt0.c1, -157544751))>((rt0.c0, x'', rt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((+ (UNLIKELY(DISTINCT rt0.c2)))) ORDER BY ((((vt0.c0)IS(rt0.c2)))&((((v0.c0, rt0.c1, -157544751))>((rt0.c0, x'', rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (UNLIKELY(DISTINCT rt0.c2)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((vt0.c0)IS(rt0.c2)))&((((v0.c0, rt0.c1, -157544751))>((rt0.c0, x'', rt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((+ (UNLIKELY(DISTINCT rt0.c2)))) ORDER BY ((((vt0.c0)IS(rt0.c2)))&((((v0.c0, rt0.c1, -157544751))>((rt0.c0, x'', rt0.c0)))))  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 WHEN vt0.c0 THEN rt0.c2 END)AND(TRIM(DISTINCT vt0.c0))))AND(COALESCE(vt0.c0, v0.c0))))OR(v0.c0)))OR((('0.19568615796912048') BETWEEN (rt0.c1) AND (v0.c0)))) CROSS JOIN v0 ON CAST(v0.c0 AS REAL) COLLATE RTRIM WHERE ((((x'', CAST(rt0.c2 AS NUMERIC), ((rt0.c1)>>(0x16a76c31)), TRIM(DISTINCT rt0.c0, vt0.c0), 0.4951939454098425))>=((((((x'1ee2')AND(rt0.c0)))AND(rt0.c2)), (((v0.c0)) BETWEEN ((vt0.c0)) AND ((x'7a7b'))), ((rt0.c1) BETWEEN (v0.c0) AND (0Xffffffffc0682568)), (~ (rt0.c1)), (((vt0.c0, v0.c0, rt0.c1, 0.21621589458361712, rt0.c1))>((rt0.c2, rt0.c1, v0.c0, v0.c0, rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((x'', CAST(rt0.c2 AS NUMERIC), ((rt0.c1)>>(0x16a76c31)), TRIM(DISTINCT rt0.c0, vt0.c0), 0.4951939454098425))>=((((((x'1ee2')AND(rt0.c0)))AND(rt0.c2)), (((v0.c0)) BETWEEN ((vt0.c0)) AND ((x'7a7b'))), ((rt0.c1) BETWEEN (v0.c0) AND (0xffffffffc0682568)), (~ (rt0.c1)), (((vt0.c0, v0.c0, rt0.c1, 0.21621589458361712, rt0.c1))>((rt0.c2, rt0.c1, v0.c0, v0.c0, rt0.c1))))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 WHEN vt0.c0 THEN rt0.c2 END)AND(TRIM(DISTINCT vt0.c0))))AND(COALESCE(vt0.c0, v0.c0))))OR(v0.c0)))OR((('0.19568615796912048') BETWEEN (rt0.c1) AND (v0.c0)))) CROSS JOIN v0 ON CAST(v0.c0 AS REAL) COLLATE RTRIM);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 WHEN vt0.c0 THEN rt0.c2 END)AND(TRIM(DISTINCT vt0.c0))))AND(COALESCE(vt0.c0, v0.c0))))OR(v0.c0)))OR((('0.19568615796912048') BETWEEN (rt0.c1) AND (v0.c0)))) CROSS JOIN v0 ON CAST(v0.c0 AS REAL) COLLATE RTRIM WHERE ((((x'', CAST(rt0.c2 AS NUMERIC), ((rt0.c1)>>(0x16a76c31)), TRIM(DISTINCT rt0.c0, vt0.c0), 0.4951939454098425))>=((((((x'1ee2')AND(rt0.c0)))AND(rt0.c2)), (((v0.c0)) BETWEEN ((vt0.c0)) AND ((x'7a7b'))), ((rt0.c1) BETWEEN (v0.c0) AND (0Xffffffffc0682568)), (~ (rt0.c1)), (((vt0.c0, v0.c0, rt0.c1, 0.21621589458361712, rt0.c1))>((rt0.c2, rt0.c1, v0.c0, v0.c0, rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((x'', CAST(rt0.c2 AS NUMERIC), ((rt0.c1)>>(0x16a76c31)), TRIM(DISTINCT rt0.c0, vt0.c0), 0.4951939454098425))>=((((((x'1ee2')AND(rt0.c0)))AND(rt0.c2)), (((v0.c0)) BETWEEN ((vt0.c0)) AND ((x'7a7b'))), ((rt0.c1) BETWEEN (v0.c0) AND (0xffffffffc0682568)), (~ (rt0.c1)), (((vt0.c0, v0.c0, rt0.c1, 0.21621589458361712, rt0.c1))>((rt0.c2, rt0.c1, v0.c0, v0.c0, rt0.c1))))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 WHEN vt0.c0 THEN rt0.c2 END)AND(TRIM(DISTINCT vt0.c0))))AND(COALESCE(vt0.c0, v0.c0))))OR(v0.c0)))OR((('0.19568615796912048') BETWEEN (rt0.c1) AND (v0.c0)))) CROSS JOIN v0 ON CAST(v0.c0 AS REAL) COLLATE RTRIM);
SELECT * FROM vt0 WHERE ((((((vt0.c0)>=(vt0.c0))))<=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)>=(vt0.c0))))<=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)>=(vt0.c0))))<=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)>=(vt0.c0))))<=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)>=(vt0.c0))))<=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))));
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0) NOT NULL))));
SELECT * FROM v0 CROSS JOIN vt0 ON ((((((0.47087245326812543)OR(v0.c0)))OR(vt0.c0))) IS TRUE) CROSS JOIN rt0 ON ((vt0.c0 COLLATE BINARY) IS TRUE) WHERE ((((rt0.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((((0.47087245326812543)OR(v0.c0)))OR(vt0.c0))) IS TRUE) CROSS JOIN rt0 ON ((vt0.c0 COLLATE BINARY) IS TRUE));
SELECT * FROM v0 CROSS JOIN vt0 ON ((((((0.47087245326812543)OR(v0.c0)))OR(vt0.c0))) IS TRUE) CROSS JOIN rt0 ON ((vt0.c0 COLLATE BINARY) IS TRUE) WHERE ((((rt0.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((((0.47087245326812543)OR(v0.c0)))OR(vt0.c0))) IS TRUE) CROSS JOIN rt0 ON ((vt0.c0 COLLATE BINARY) IS TRUE));
SELECT * FROM v0 CROSS JOIN vt0 ON ((((((0.47087245326812543)OR(v0.c0)))OR(vt0.c0))) IS TRUE) CROSS JOIN rt0 ON ((vt0.c0 COLLATE BINARY) IS TRUE) WHERE ((((rt0.c0 IN ())) NOT NULL));
SELECT ALL * FROM v0 INNER JOIN rt0 ON UNLIKELY(((rt0.c1)GLOB(rt0.c0))) WHERE (((((rt0.c2) NOT NULL))LIKE((((rt0.c0))>=((v0.c0)))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0)<(rt0.c1)))) AND ((rt0.c0)))  NULLS FIRST, (((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))||((((rt0.c0))>((rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL))LIKE((((rt0.c0))>=((v0.c0)))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON UNLIKELY(((rt0.c1)GLOB(rt0.c0))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0)<(rt0.c1)))) AND ((rt0.c0)))  NULLS FIRST, (((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))||((((rt0.c0))>((rt0.c2)))))  NULLS FIRST);
SELECT ALL * FROM v0 INNER JOIN rt0 ON UNLIKELY(((rt0.c1)GLOB(rt0.c0))) WHERE (((((rt0.c2) NOT NULL))LIKE((((rt0.c0))>=((v0.c0)))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0)<(rt0.c1)))) AND ((rt0.c0)))  NULLS FIRST, (((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))||((((rt0.c0))>((rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL))LIKE((((rt0.c0))>=((v0.c0)))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON UNLIKELY(((rt0.c1)GLOB(rt0.c0))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0)<(rt0.c1)))) AND ((rt0.c0)))  NULLS FIRST, (((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))||((((rt0.c0))>((rt0.c2)))))  NULLS FIRST);
SELECT ALL * FROM v0 INNER JOIN rt0 ON UNLIKELY(((rt0.c1)GLOB(rt0.c0))) WHERE (((((rt0.c2) NOT NULL))LIKE((((rt0.c0))>=((v0.c0)))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0)<(rt0.c1)))) AND ((rt0.c0)))  NULLS FIRST, (((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))||((((rt0.c0))>((rt0.c2)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)LIKE(rt0.c2)))-(LIKELIHOOD(DISTINCT rt0.c0, 0.12387782490609744))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)LIKE(rt0.c2)))-(LIKELIHOOD(DISTINCT rt0.c0, 0.12387782490609744)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)LIKE(rt0.c2)))-(LIKELIHOOD(DISTINCT rt0.c0, 0.12387782490609744))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)LIKE(rt0.c2)))-(LIKELIHOOD(DISTINCT rt0.c0, 0.12387782490609744)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)LIKE(rt0.c2)))-(LIKELIHOOD(DISTINCT rt0.c0, 0.12387782490609744))));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((- (((0.8866113813089933) ISNULL)))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((0.8866113813089933) ISNULL)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((- (((0.8866113813089933) ISNULL)))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((0.8866113813089933) ISNULL)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((- (((0.8866113813089933) ISNULL)))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT ALL * FROM vt0, v0, rt0 WHERE ((('1328227095') BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((('1328227095') BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((('1328227095') BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((('1328227095') BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((('1328227095') BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((+ (rt0.c1)) AS TEXT)) ORDER BY (x'' IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (x'' IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((+ (rt0.c1)) AS TEXT)) ORDER BY (x'' IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (x'' IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((+ (rt0.c1)) AS TEXT)) ORDER BY (x'' IN ()) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 INNER JOIN v0 ON (((+ (vt0.c0)))&((rt0.c1 IN ()))) WHERE (((rt0.c1) NOT BETWEEN (x'') AND (json(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (x'') AND (json(NULL)))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON (((+ (vt0.c0)))&((rt0.c1 IN ()))));
SELECT ALL * FROM vt0, rt0 INNER JOIN v0 ON (((+ (vt0.c0)))&((rt0.c1 IN ()))) WHERE (((rt0.c1) NOT BETWEEN (x'') AND (json(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (x'') AND (json(NULL)))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON (((+ (vt0.c0)))&((rt0.c1 IN ()))));
SELECT ALL * FROM vt0, rt0 INNER JOIN v0 ON (((+ (vt0.c0)))&((rt0.c1 IN ()))) WHERE (((rt0.c1) NOT BETWEEN (x'') AND (json(NULL))));
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c0) ORDER BY CAST(((0.03166526400874892) BETWEEN (v0.c0) AND (vt0.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((0.03166526400874892) BETWEEN (v0.c0) AND (vt0.c0)) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c0) ORDER BY CAST(((0.03166526400874892) BETWEEN (v0.c0) AND (vt0.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((0.03166526400874892) BETWEEN (v0.c0) AND (vt0.c0)) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c0) ORDER BY CAST(((0.03166526400874892) BETWEEN (v0.c0) AND (vt0.c0)) AS REAL)  NULLS LAST;
SELECT * FROM v0 WHERE (CASE ((v0.c0) NOT NULL)  WHEN SQLITE_COMPILEOPTION_GET(v0.c0) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) ELSE (v0.c0 IN (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOT NULL)  WHEN SQLITE_COMPILEOPTION_GET(v0.c0) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) ELSE (v0.c0 IN (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE ((v0.c0) NOT NULL)  WHEN SQLITE_COMPILEOPTION_GET(v0.c0) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) ELSE (v0.c0 IN (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOT NULL)  WHEN SQLITE_COMPILEOPTION_GET(v0.c0) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) ELSE (v0.c0 IN (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE ((v0.c0) NOT NULL)  WHEN SQLITE_COMPILEOPTION_GET(v0.c0) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) ELSE (v0.c0 IN (v0.c0)) END);
SELECT * FROM rt0 WHERE (((((rt0.c0 IN ())))<((CASE WHEN 0xfffffffff1c24f9d THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 IN ())))<((CASE WHEN 0xfffffffff1c24f9d THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0 IN ())))<((CASE WHEN 0xfffffffff1c24f9d THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 IN ())))<((CASE WHEN 0xfffffffff1c24f9d THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0 IN ())))<((CASE WHEN 0xfffffffff1c24f9d THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(NULL AS BLOB)) ORDER BY (~ (CASE WHEN 'fX3}bFb\' THEN rt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM rt0, v0 ORDER BY (~ (CASE WHEN 'fX3}bFb\' THEN rt0.c1 END)) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(NULL AS BLOB)) ORDER BY (~ (CASE WHEN 'fX3}bFb\' THEN rt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM rt0, v0 ORDER BY (~ (CASE WHEN 'fX3}bFb\' THEN rt0.c1 END)) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(NULL AS BLOB)) ORDER BY (~ (CASE WHEN 'fX3}bFb\' THEN rt0.c1 END)) ASC;
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c1)>(v0.c0)) COLLATE BINARY WHERE (rt0.c2) ORDER BY (((rt0.c1 IN ())) NOT BETWEEN (json_insert(v0.c0, rt0.c2, v0.c0)) AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c1)>(v0.c0)) COLLATE BINARY ORDER BY (((rt0.c1 IN ())) NOT BETWEEN (json_insert(v0.c0, rt0.c2, v0.c0)) AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c1)>(v0.c0)) COLLATE BINARY WHERE (rt0.c2) ORDER BY (((rt0.c1 IN ())) NOT BETWEEN (json_insert(v0.c0, rt0.c2, v0.c0)) AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c1)>(v0.c0)) COLLATE BINARY ORDER BY (((rt0.c1 IN ())) NOT BETWEEN (json_insert(v0.c0, rt0.c2, v0.c0)) AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c1)>(v0.c0)) COLLATE BINARY WHERE (rt0.c2) ORDER BY (((rt0.c1 IN ())) NOT BETWEEN (json_insert(v0.c0, rt0.c2, v0.c0)) AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN rt0 WHERE (((((LIKELIHOOD(v0.c0, 0.04796603224525009))OR((((NULL)) NOT BETWEEN ((NULL)) AND ((rt0.c0))))))OR(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELIHOOD(v0.c0, 0.04796603224525009))OR((((NULL)) NOT BETWEEN ((NULL)) AND ((rt0.c0))))))OR(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN rt0 WHERE (((((LIKELIHOOD(v0.c0, 0.04796603224525009))OR((((NULL)) NOT BETWEEN ((NULL)) AND ((rt0.c0))))))OR(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELIHOOD(v0.c0, 0.04796603224525009))OR((((NULL)) NOT BETWEEN ((NULL)) AND ((rt0.c0))))))OR(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN rt0 WHERE (((((LIKELIHOOD(v0.c0, 0.04796603224525009))OR((((NULL)) NOT BETWEEN ((NULL)) AND ((rt0.c0))))))OR(((v0.c0) IS TRUE))));
SELECT COUNT(*) FROM v0 WHERE (COALESCE(DISTINCT ('653231044' IN ()), v0.c0)) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ('653231044' IN ()), v0.c0)) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC);
SELECT COUNT(*) FROM v0 WHERE (COALESCE(DISTINCT ('653231044' IN ()), v0.c0)) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ('653231044' IN ()), v0.c0)) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC);
SELECT COUNT(*) FROM v0 WHERE (COALESCE(DISTINCT ('653231044' IN ()), v0.c0)) ORDER BY v0.c0 DESC;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST(CAST(rt0.c2 AS TEXT) AS REAL) WHERE (rt0.c1) ORDER BY ((((vt0.c0)!=(vt0.c0))) BETWEEN (((0.5286968169519208) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (CAST(rt0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(CAST(rt0.c2 AS TEXT) AS REAL) ORDER BY ((((vt0.c0)<>(vt0.c0))) BETWEEN (((0.5286968169519208) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (CAST(rt0.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST(CAST(rt0.c2 AS TEXT) AS REAL) WHERE (rt0.c1) ORDER BY ((((vt0.c0)!=(vt0.c0))) BETWEEN (((0.5286968169519208) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (CAST(rt0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(CAST(rt0.c2 AS TEXT) AS REAL) ORDER BY ((((vt0.c0)<>(vt0.c0))) BETWEEN (((0.5286968169519208) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (CAST(rt0.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST(CAST(rt0.c2 AS TEXT) AS REAL) WHERE (rt0.c1) ORDER BY ((((vt0.c0)!=(vt0.c0))) BETWEEN (((0.5286968169519208) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (CAST(rt0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0) ISNULL))IS NOT(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))IS NOT(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0) ISNULL))IS NOT(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))IS NOT(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0) ISNULL))IS NOT(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END)));
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN ((rt0.c0)LIKE(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (x'f22a276c')) ELSE (rt0.c2 IN ()) END) ORDER BY ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(vt0.c0)) COLLATE NOCASE ASC, ((CAST(vt0.c0 AS NUMERIC))<<(((vt0.c0)<=(rt0.c0)))) ASC  NULLS FIRST, CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)LIKE(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (x'f22a276c')) ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(vt0.c0)) COLLATE NOCASE ASC, ((CAST(vt0.c0 AS NUMERIC))<<(((vt0.c0)<=(rt0.c0)))) ASC  NULLS FIRST, CHANGES() DESC);
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN ((rt0.c0)LIKE(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (x'f22a276c')) ELSE (rt0.c2 IN ()) END) ORDER BY ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(vt0.c0)) COLLATE NOCASE ASC, ((CAST(vt0.c0 AS NUMERIC))<<(((vt0.c0)<=(rt0.c0)))) ASC  NULLS FIRST, CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)LIKE(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (x'f22a276c')) ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(vt0.c0)) COLLATE NOCASE ASC, ((CAST(vt0.c0 AS NUMERIC))<<(((vt0.c0)<=(rt0.c0)))) ASC  NULLS FIRST, CHANGES() DESC);
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN ((rt0.c0)LIKE(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (x'f22a276c')) ELSE (rt0.c2 IN ()) END) ORDER BY ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(vt0.c0)) COLLATE NOCASE ASC, ((CAST(vt0.c0 AS NUMERIC))<<(((vt0.c0)<=(rt0.c0)))) ASC  NULLS FIRST, CHANGES() DESC;
SELECT * FROM vt0, rt0 FULL OUTER JOIN v0 ON (+ (CAST(rt0.c2 AS NUMERIC))) WHERE (CAST((((v0.c0))>=((rt0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0))>=((rt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON (+ (CAST(rt0.c2 AS NUMERIC))));
SELECT * FROM vt0, rt0 FULL OUTER JOIN v0 ON (+ (CAST(rt0.c2 AS NUMERIC))) WHERE (CAST((((v0.c0))>=((rt0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0))>=((rt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON (+ (CAST(rt0.c2 AS NUMERIC))));
SELECT * FROM vt0, rt0 FULL OUTER JOIN v0 ON (+ (CAST(rt0.c2 AS NUMERIC))) WHERE (CAST((((v0.c0))>=((rt0.c0))) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE NULL END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE NULL END)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE NULL END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE NULL END)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE NULL END))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((0.37232751109872797)OR(rt0.c1)))AND(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((0.37232751109872797)OR(rt0.c1)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((0.37232751109872797)OR(rt0.c1)))AND(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((0.37232751109872797)OR(rt0.c1)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((0.37232751109872797)OR(rt0.c1)))AND(rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((MIN(x'', rt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((MIN(x'', rt0.c1) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((MIN(x'', rt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((MIN(x'', rt0.c1) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((MIN(x'', rt0.c1) IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY 0.6648822499332949  NULLS LAST, (vt0.c0 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY 0.6648822499332949  NULLS LAST, (vt0.c0 IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY 0.6648822499332949  NULLS LAST, (vt0.c0 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY 0.6648822499332949  NULLS LAST, (vt0.c0 IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY 0.6648822499332949  NULLS LAST, (vt0.c0 IN ())  NULLS LAST;
SELECT * FROM rt0, v0, vt0 WHERE (TRIM(((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (TRIM(((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (TRIM(((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))));
SELECT * FROM vt0 WHERE (CASE WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((vt0.c0)+(vt0.c0)) WHEN ((vt0.c0)&(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN (~ (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c0)<(vt0.c0)) THEN (vt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN (((vt0.c0))=((vt0.c0))) END) ORDER BY (((NOT (vt0.c0))) ISNULL), load_extension((x'' IN ()), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((vt0.c0)+(vt0.c0)) WHEN ((vt0.c0)&(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN (~ (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c0)<(vt0.c0)) THEN (vt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN (((vt0.c0))==((vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0))) ISNULL), load_extension((x'' IN ()), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT * FROM vt0 WHERE (CASE WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((vt0.c0)+(vt0.c0)) WHEN ((vt0.c0)&(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN (~ (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c0)<(vt0.c0)) THEN (vt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN (((vt0.c0))=((vt0.c0))) END) ORDER BY (((NOT (vt0.c0))) ISNULL), load_extension((x'' IN ()), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((vt0.c0)+(vt0.c0)) WHEN ((vt0.c0)&(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN (~ (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c0)<(vt0.c0)) THEN (vt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN (((vt0.c0))==((vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0))) ISNULL), load_extension((x'' IN ()), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL))/(((v0.c0) NOT NULL)))) ORDER BY (v0.c0 IN ()) COLLATE NOCASE DESC, (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)>=(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL))/(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN ()) COLLATE NOCASE DESC, (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)>=(v0.c0)))) ASC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL))/(((v0.c0) NOT NULL)))) ORDER BY (v0.c0 IN ()) COLLATE NOCASE DESC, (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)>=(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL))/(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN ()) COLLATE NOCASE DESC, (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)>=(v0.c0)))) ASC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL))/(((v0.c0) NOT NULL)))) ORDER BY (v0.c0 IN ()) COLLATE NOCASE DESC, (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)>=(v0.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT)) ORDER BY ((((rt0.c0)OR(CAST(rt0.c2 AS TEXT))))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)OR(CAST(rt0.c2 AS TEXT))))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT)) ORDER BY ((((rt0.c0)OR(CAST(rt0.c2 AS TEXT))))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)OR(CAST(rt0.c2 AS TEXT))))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT)) ORDER BY ((((rt0.c0)OR(CAST(rt0.c2 AS TEXT))))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (IFNULL('钥Q依2', HEX(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL('钥Q依2', HEX(v0.c0))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (IFNULL('钥Q依2', HEX(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL('钥Q依2', HEX(v0.c0))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (IFNULL('钥Q依2', HEX(v0.c0)));
SELECT * FROM vt0 INNER JOIN v0 ON ((((((((CASE WHEN vt0.c0 THEN v0.c0 END)AND(((vt0.c0) IS FALSE))))AND(v0.c0 COLLATE BINARY)))OR((NOT (v0.c0)))))AND(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)) WHERE (((TYPEOF(vt0.c0))<(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(vt0.c0))<(v0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((((((CASE WHEN vt0.c0 THEN v0.c0 END)AND(((vt0.c0) IS FALSE))))AND(v0.c0 COLLATE BINARY)))OR((NOT (v0.c0)))))AND(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)));
SELECT * FROM vt0 INNER JOIN v0 ON ((((((((CASE WHEN vt0.c0 THEN v0.c0 END)AND(((vt0.c0) IS FALSE))))AND(v0.c0 COLLATE BINARY)))OR((NOT (v0.c0)))))AND(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)) WHERE (((TYPEOF(vt0.c0))<(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(vt0.c0))<(v0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((((((CASE WHEN vt0.c0 THEN v0.c0 END)AND(((vt0.c0) IS FALSE))))AND(v0.c0 COLLATE BINARY)))OR((NOT (v0.c0)))))AND(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)));
SELECT * FROM vt0 INNER JOIN v0 ON ((((((((CASE WHEN vt0.c0 THEN v0.c0 END)AND(((vt0.c0) IS FALSE))))AND(v0.c0 COLLATE BINARY)))OR((NOT (v0.c0)))))AND(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END)) WHERE (((TYPEOF(vt0.c0))<(v0.c0)));
SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c2)OR(v0.c0)))OR(v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(v0.c0)))OR(v0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c2)OR(v0.c0)))OR(v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(v0.c0)))OR(v0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c2)OR(v0.c0)))OR(v0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END  WHEN rt0.c0 THEN LIKELIHOOD(rt0.c0, 0.3819468827085617) ELSE ((rt0.c0) NOTNULL) END WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (IFNULL(DISTINCT rt0.c1, rt0.c0)) AND (194438167)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) NOT BETWEEN (IFNULL(DISTINCT rt0.c1, rt0.c0)) AND (194438167))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END  WHEN rt0.c0 THEN LIKELIHOOD(rt0.c0, 0.3819468827085617) ELSE ((rt0.c0) NOTNULL) END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END  WHEN rt0.c0 THEN LIKELIHOOD(rt0.c0, 0.3819468827085617) ELSE ((rt0.c0) NOTNULL) END WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (IFNULL(DISTINCT rt0.c1, rt0.c0)) AND (194438167)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) NOT BETWEEN (IFNULL(DISTINCT rt0.c1, rt0.c0)) AND (194438167))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END  WHEN rt0.c0 THEN LIKELIHOOD(rt0.c0, 0.3819468827085617) ELSE ((rt0.c0) NOTNULL) END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END  WHEN rt0.c0 THEN LIKELIHOOD(rt0.c0, 0.3819468827085617) ELSE ((rt0.c0) NOTNULL) END WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (IFNULL(DISTINCT rt0.c1, rt0.c0)) AND (194438167)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c2 COLLATE RTRIM))) ORDER BY IFNULL(263882067, (rt0.c2 IN (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(263882067, (rt0.c2 IN (rt0.c2))));
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c2 COLLATE RTRIM))) ORDER BY IFNULL(263882067, (rt0.c2 IN (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(263882067, (rt0.c2 IN (rt0.c2))));
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c2 COLLATE RTRIM))) ORDER BY IFNULL(263882067, (rt0.c2 IN (rt0.c2)));
SELECT * FROM vt0, v0 WHERE ((((((((((v0.c0)OR(v0.c0)))OR(0x3b6c2dd4)))OR(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY (+ (((vt0.c0) IS FALSE)))  NULLS FIRST, v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((v0.c0)OR(v0.c0)))OR(0x3b6c2dd4)))OR(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ (((vt0.c0) IS FALSE)))  NULLS FIRST, v0.c0 DESC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE ((((((((((v0.c0)OR(v0.c0)))OR(0x3b6c2dd4)))OR(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY (+ (((vt0.c0) IS FALSE)))  NULLS FIRST, v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((v0.c0)OR(v0.c0)))OR(0x3b6c2dd4)))OR(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ (((vt0.c0) IS FALSE)))  NULLS FIRST, v0.c0 DESC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE ((((((((((v0.c0)OR(v0.c0)))OR(0x3b6c2dd4)))OR(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY (+ (((vt0.c0) IS FALSE)))  NULLS FIRST, v0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((rt0.c2 IN (v0.c0)))<(CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (v0.c0)))<(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((rt0.c2 IN (v0.c0)))<(CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (v0.c0)))<(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((rt0.c2 IN (v0.c0)))<(CAST(rt0.c2 AS INTEGER))));
SELECT * FROM rt0, vt0, v0 WHERE (((rt0.c2 COLLATE RTRIM) NOTNULL)) ORDER BY (+ (CASE vt0.c0  WHEN rt0.c0 THEN v0.c0 END)), (((rt0.c0)) BETWEEN ((SQLITE_COMPILEOPTION_USED(0.726541328159314))) AND (((~ (rt0.c0))))) DESC, ((CASE WHEN rt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 END) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (+ (CASE vt0.c0  WHEN rt0.c0 THEN v0.c0 END)), (((rt0.c0)) BETWEEN ((SQLITE_COMPILEOPTION_USED(0.726541328159314))) AND (((~ (rt0.c0))))) DESC, ((CASE WHEN rt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 END) NOT NULL) DESC);
SELECT * FROM rt0, vt0, v0 WHERE (((rt0.c2 COLLATE RTRIM) NOTNULL)) ORDER BY (+ (CASE vt0.c0  WHEN rt0.c0 THEN v0.c0 END)), (((rt0.c0)) BETWEEN ((SQLITE_COMPILEOPTION_USED(0.726541328159314))) AND (((~ (rt0.c0))))) DESC, ((CASE WHEN rt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 END) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (+ (CASE vt0.c0  WHEN rt0.c0 THEN v0.c0 END)), (((rt0.c0)) BETWEEN ((SQLITE_COMPILEOPTION_USED(0.726541328159314))) AND (((~ (rt0.c0))))) DESC, ((CASE WHEN rt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 END) NOT NULL) DESC);
SELECT * FROM rt0, vt0, v0 WHERE (((rt0.c2 COLLATE RTRIM) NOTNULL)) ORDER BY (+ (CASE vt0.c0  WHEN rt0.c0 THEN v0.c0 END)), (((rt0.c0)) BETWEEN ((SQLITE_COMPILEOPTION_USED(0.726541328159314))) AND (((~ (rt0.c0))))) DESC, ((CASE WHEN rt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 END) NOT NULL) DESC;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END ELSE (rt0.c2 IN ()) END) ORDER BY 895325349;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0 ORDER BY 895325349);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END ELSE (rt0.c2 IN ()) END) ORDER BY 895325349;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0 ORDER BY 895325349);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (rt0.c1 IN ()) RIGHT OUTER JOIN vt0 ON ((load_extension(NULL, vt0.c0))OR('')) WHERE (((SQLITE_SOURCE_ID())+(((rt0.c1)AND('-238923875'))))) ORDER BY 0.741198898022016 COLLATE NOCASE  NULLS FIRST, (('0.6199514593707136')*(TRIM(rt0.c1, vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID())+(((rt0.c1)AND('-238923875'))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (rt0.c1 IN ()) RIGHT OUTER JOIN vt0 ON ((load_extension(NULL, vt0.c0))OR('')) ORDER BY 0.741198898022016 COLLATE NOCASE  NULLS FIRST, (('0.6199514593707136')*(TRIM(rt0.c1, vt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (rt0.c1 IN ()) RIGHT OUTER JOIN vt0 ON ((load_extension(NULL, vt0.c0))OR('')) WHERE (((SQLITE_SOURCE_ID())+(((rt0.c1)AND('-238923875'))))) ORDER BY 0.741198898022016 COLLATE NOCASE  NULLS FIRST, (('0.6199514593707136')*(TRIM(rt0.c1, vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID())+(((rt0.c1)AND('-238923875'))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (rt0.c1 IN ()) RIGHT OUTER JOIN vt0 ON ((load_extension(NULL, vt0.c0))OR('')) ORDER BY 0.741198898022016 COLLATE NOCASE  NULLS FIRST, (('0.6199514593707136')*(TRIM(rt0.c1, vt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (rt0.c1 IN ()) RIGHT OUTER JOIN vt0 ON ((load_extension(NULL, vt0.c0))OR('')) WHERE (((SQLITE_SOURCE_ID())+(((rt0.c1)AND('-238923875'))))) ORDER BY 0.741198898022016 COLLATE NOCASE  NULLS FIRST, (('0.6199514593707136')*(TRIM(rt0.c1, vt0.c0))) ASC  NULLS FIRST;
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN ((rt0.c1)>>(rt0.c2)) THEN ((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE CAST(rt0.c1 AS BLOB) END) ORDER BY v0.c0 ASC  NULLS FIRST, (('0.6648822499332949') BETWEEN (((v0.c0)<<(rt0.c1))) AND (rt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)>>(rt0.c2)) THEN ((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE CAST(rt0.c1 AS BLOB) END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY v0.c0 ASC  NULLS FIRST, (('0.6648822499332949') BETWEEN (((v0.c0)<<(rt0.c1))) AND (rt0.c1 COLLATE NOCASE)));
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN ((rt0.c1)>>(rt0.c2)) THEN ((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE CAST(rt0.c1 AS BLOB) END) ORDER BY v0.c0 ASC  NULLS FIRST, (('0.6648822499332949') BETWEEN (((v0.c0)<<(rt0.c1))) AND (rt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)>>(rt0.c2)) THEN ((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE CAST(rt0.c1 AS BLOB) END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY v0.c0 ASC  NULLS FIRST, (('0.6648822499332949') BETWEEN (((v0.c0)<<(rt0.c1))) AND (rt0.c1 COLLATE NOCASE)));
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN ((rt0.c1)>>(rt0.c2)) THEN ((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE CAST(rt0.c1 AS BLOB) END) ORDER BY v0.c0 ASC  NULLS FIRST, (('0.6648822499332949') BETWEEN (((v0.c0)<<(rt0.c1))) AND (rt0.c1 COLLATE NOCASE));
SELECT ALL * FROM v0 WHERE (((((v0.c0) IS FALSE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) IS FALSE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) IS FALSE)) IS FALSE));
SELECT COUNT(*) FROM rt0, vt0 WHERE (LTRIM(CAST(rt0.c2 AS INTEGER), (NULL IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(CAST(rt0.c2 AS INTEGER), (NULL IN ()))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (LTRIM(CAST(rt0.c2 AS INTEGER), (NULL IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(CAST(rt0.c2 AS INTEGER), (NULL IN ()))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (LTRIM(CAST(rt0.c2 AS INTEGER), (NULL IN ())));
SELECT * FROM rt0, v0, vt0 WHERE (0.40057322054328703) ORDER BY (+ (rt0.c0));
SELECT SUM(count) FROM (SELECT ((0.40057322054328703) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (+ (rt0.c0)));
SELECT * FROM rt0, v0, vt0 WHERE (0.40057322054328703) ORDER BY (+ (rt0.c0));
SELECT SUM(count) FROM (SELECT ((0.40057322054328703) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (+ (rt0.c0)));
SELECT * FROM rt0, v0, vt0 WHERE (0.40057322054328703) ORDER BY (+ (rt0.c0));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) ORDER BY ((UNICODE(v0.c0)) NOTNULL) ASC, CAST(((v0.c0) IS FALSE) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((UNICODE(v0.c0)) NOTNULL) ASC, CAST(((v0.c0) IS FALSE) AS TEXT));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) ORDER BY ((UNICODE(v0.c0)) NOTNULL) ASC, CAST(((v0.c0) IS FALSE) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((UNICODE(v0.c0)) NOTNULL) ASC, CAST(((v0.c0) IS FALSE) AS TEXT));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) ORDER BY ((UNICODE(v0.c0)) NOTNULL) ASC, CAST(((v0.c0) IS FALSE) AS TEXT);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CASE WHEN (+ (v0.c0)) THEN '1837629726' WHEN ((vt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) THEN (rt0.c1 IN ()) WHEN LIKELY(DISTINCT '-514195623') THEN (rt0.c0 IN (rt0.c2)) END) ORDER BY ((((rt0.c1) NOTNULL))>(((rt0.c1)/(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (v0.c0)) THEN '1837629726' WHEN ((vt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) THEN (rt0.c1 IN ()) WHEN LIKELY(DISTINCT '-514195623') THEN (rt0.c0 IN (rt0.c2)) END) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((rt0.c1) NOTNULL))>(((rt0.c1)/(rt0.c0)))) DESC);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CASE WHEN (+ (v0.c0)) THEN '1837629726' WHEN ((vt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) THEN (rt0.c1 IN ()) WHEN LIKELY(DISTINCT '-514195623') THEN (rt0.c0 IN (rt0.c2)) END) ORDER BY ((((rt0.c1) NOTNULL))>(((rt0.c1)/(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (v0.c0)) THEN '1837629726' WHEN ((vt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) THEN (rt0.c1 IN ()) WHEN LIKELY(DISTINCT '-514195623') THEN (rt0.c0 IN (rt0.c2)) END) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((rt0.c1) NOTNULL))>(((rt0.c1)/(rt0.c0)))) DESC);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CASE WHEN (+ (v0.c0)) THEN '1837629726' WHEN ((vt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) THEN (rt0.c1 IN ()) WHEN LIKELY(DISTINCT '-514195623') THEN (rt0.c0 IN (rt0.c2)) END) ORDER BY ((((rt0.c1) NOTNULL))>(((rt0.c1)/(rt0.c0)))) DESC;
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN rt0 ON CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END COLLATE NOCASE WHERE (((((SQLITE_COMPILEOPTION_USED(rt0.c2))AND(((rt0.c0)|(rt0.c0)))))AND(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((SQLITE_COMPILEOPTION_USED(rt0.c2))AND(((rt0.c0)|(rt0.c0)))))AND(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt0 ON CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END COLLATE NOCASE);
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN rt0 ON CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END COLLATE NOCASE WHERE (((((SQLITE_COMPILEOPTION_USED(rt0.c2))AND(((rt0.c0)|(rt0.c0)))))AND(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((SQLITE_COMPILEOPTION_USED(rt0.c2))AND(((rt0.c0)|(rt0.c0)))))AND(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt0 ON CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END COLLATE NOCASE);
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN rt0 ON CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END COLLATE NOCASE WHERE (((((SQLITE_COMPILEOPTION_USED(rt0.c2))AND(((rt0.c0)|(rt0.c0)))))AND(CAST(rt0.c1 AS REAL))));
SELECT * FROM vt0, rt0 INNER JOIN v0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 END)*(((vt0.c0) NOT NULL))) WHERE ((((rt0.c2 IN (rt0.c0, 1.94438167E8))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt0.c0, 1.94438167E8))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 END)*(((vt0.c0) NOT NULL))));
SELECT * FROM vt0, rt0 INNER JOIN v0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 END)*(((vt0.c0) NOT NULL))) WHERE ((((rt0.c2 IN (rt0.c0, 1.94438167E8))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt0.c0, 1.94438167E8))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 END)*(((vt0.c0) NOT NULL))));
SELECT * FROM vt0, rt0 INNER JOIN v0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 END)*(((vt0.c0) NOT NULL))) WHERE ((((rt0.c2 IN (rt0.c0, 1.94438167E8))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))  WHEN x'' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(TRIM(DISTINCT vt0.c0))))OR((((vt0.c0))<((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))  WHEN x'' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(TRIM(DISTINCT vt0.c0))))OR((((vt0.c0))<((vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))  WHEN x'' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(TRIM(DISTINCT vt0.c0))))OR((((vt0.c0))<((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))  WHEN x'' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(TRIM(DISTINCT vt0.c0))))OR((((vt0.c0))<((vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))  WHEN x'' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(TRIM(DISTINCT vt0.c0))))OR((((vt0.c0))<((vt0.c0))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c0)OR(rt0.c0)))AND('}?')) COLLATE BINARY) ORDER BY (((((v0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c2, v0.c0)) AND ((rt0.c2, rt0.c1, rt0.c2))))==('1227928107')) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(rt0.c0)))AND('}?')) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((v0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c2, v0.c0)) AND ((rt0.c2, rt0.c1, rt0.c2))))=('1227928107')) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c0)OR(rt0.c0)))AND('}?')) COLLATE BINARY) ORDER BY (((((v0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c2, v0.c0)) AND ((rt0.c2, rt0.c1, rt0.c2))))==('1227928107')) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(rt0.c0)))AND('}?')) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((v0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c2, v0.c0)) AND ((rt0.c2, rt0.c1, rt0.c2))))=('1227928107')) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c0)OR(rt0.c0)))AND('}?')) COLLATE BINARY) ORDER BY (((((v0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c2, v0.c0)) AND ((rt0.c2, rt0.c1, rt0.c2))))==('1227928107')) DESC;
SELECT COUNT(*) FROM v0 WHERE (RTRIM('-1112992623')) ORDER BY ((v0.c0)<(((v0.c0)>>(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM('-1112992623')) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)<(((v0.c0)>>(v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (RTRIM('-1112992623')) ORDER BY ((v0.c0)<(((v0.c0)>>(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM('-1112992623')) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)<(((v0.c0)>>(v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (RTRIM('-1112992623')) ORDER BY ((v0.c0)<(((v0.c0)>>(v0.c0)))) ASC  NULLS LAST;
SELECT * FROM rt0, vt0, v0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN rt0.c0 END) ORDER BY NULL DESC, CASE WHEN json_type(vt0.c0) THEN ((vt0.c0)*(rt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) ISNULL) THEN rt0.c0 END) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY NULL DESC, CASE WHEN json_type(vt0.c0) THEN ((vt0.c0)*(rt0.c2)) END  NULLS FIRST);
SELECT * FROM rt0, vt0, v0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN rt0.c0 END) ORDER BY NULL DESC, CASE WHEN json_type(vt0.c0) THEN ((vt0.c0)*(rt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) ISNULL) THEN rt0.c0 END) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY NULL DESC, CASE WHEN json_type(vt0.c0) THEN ((vt0.c0)*(rt0.c2)) END  NULLS FIRST);
SELECT * FROM rt0, vt0, v0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN rt0.c0 END) ORDER BY NULL DESC, CASE WHEN json_type(vt0.c0) THEN ((vt0.c0)*(rt0.c2)) END  NULLS FIRST;
SELECT * FROM v0, rt0, vt0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE ((rt0.c1 IN ()));
SELECT ALL * FROM v0 WHERE ((((NOT (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((NOT (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((NOT (v0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((TYPEOF(DISTINCT rt0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt0.c0)) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((TYPEOF(DISTINCT rt0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt0.c0)) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((TYPEOF(DISTINCT rt0.c0)) NOTNULL));
SELECT ALL * FROM v0 WHERE ((~ (v0.c0))) ORDER BY CASE WHEN CAST(0.37544501197895386 AS NUMERIC) THEN UPPER(v0.c0) ELSE CASE v0.c0  WHEN v0.c0 THEN x'' END END  NULLS FIRST, ((0.3236233757774516) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(0.37544501197895386 AS NUMERIC) THEN UPPER(v0.c0) ELSE CASE v0.c0  WHEN v0.c0 THEN x'' END END  NULLS FIRST, ((0.3236233757774516) IS TRUE)  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((~ (v0.c0))) ORDER BY CASE WHEN CAST(0.37544501197895386 AS NUMERIC) THEN UPPER(v0.c0) ELSE CASE v0.c0  WHEN v0.c0 THEN x'' END END  NULLS FIRST, ((0.3236233757774516) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(0.37544501197895386 AS NUMERIC) THEN UPPER(v0.c0) ELSE CASE v0.c0  WHEN v0.c0 THEN x'' END END  NULLS FIRST, ((0.3236233757774516) IS TRUE)  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((~ (v0.c0))) ORDER BY CASE WHEN CAST(0.37544501197895386 AS NUMERIC) THEN UPPER(v0.c0) ELSE CASE v0.c0  WHEN v0.c0 THEN x'' END END  NULLS FIRST, ((0.3236233757774516) IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (NOT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (NOT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (NOT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((- (rt0.c0)) IN ())) ORDER BY rt0.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((- (rt0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY rt0.c0 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((- (rt0.c0)) IN ())) ORDER BY rt0.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((- (rt0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY rt0.c0 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((- (rt0.c0)) IN ())) ORDER BY rt0.c0 COLLATE RTRIM;
SELECT * FROM vt0, rt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND ('1630458571')) THEN ((vt0.c0) ISNULL) WHEN ((rt0.c2)=(rt0.c1)) THEN (~ (rt0.c2)) WHEN (rt0.c2 IN ()) THEN vt0.c0 ELSE NULL COLLATE BINARY END) ORDER BY (IFNULL(rt0.c2, rt0.c0) IN ()), ((rt0.c2)GLOB(UPPER(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND ('1630458571')) THEN ((vt0.c0) ISNULL) WHEN ((rt0.c2)=(rt0.c1)) THEN (~ (rt0.c2)) WHEN (rt0.c2 IN ()) THEN vt0.c0 ELSE NULL COLLATE BINARY END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (IFNULL(rt0.c2, rt0.c0) IN ()), ((rt0.c2)GLOB(UPPER(rt0.c1))) ASC);
SELECT * FROM vt0, rt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND ('1630458571')) THEN ((vt0.c0) ISNULL) WHEN ((rt0.c2)=(rt0.c1)) THEN (~ (rt0.c2)) WHEN (rt0.c2 IN ()) THEN vt0.c0 ELSE NULL COLLATE BINARY END) ORDER BY (IFNULL(rt0.c2, rt0.c0) IN ()), ((rt0.c2)GLOB(UPPER(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND ('1630458571')) THEN ((vt0.c0) ISNULL) WHEN ((rt0.c2)=(rt0.c1)) THEN (~ (rt0.c2)) WHEN (rt0.c2 IN ()) THEN vt0.c0 ELSE NULL COLLATE BINARY END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (IFNULL(rt0.c2, rt0.c0) IN ()), ((rt0.c2)GLOB(UPPER(rt0.c1))) ASC);
SELECT * FROM vt0, rt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND ('1630458571')) THEN ((vt0.c0) ISNULL) WHEN ((rt0.c2)=(rt0.c1)) THEN (~ (rt0.c2)) WHEN (rt0.c2 IN ()) THEN vt0.c0 ELSE NULL COLLATE BINARY END) ORDER BY (IFNULL(rt0.c2, rt0.c0) IN ()), ((rt0.c2)GLOB(UPPER(rt0.c1))) ASC;
SELECT COUNT(*) FROM v0, vt0 WHERE ((((+ (v0.c0)))<<(x''))) ORDER BY (((~ (v0.c0))) BETWEEN ((- (vt0.c0))) AND (((v0.c0) NOT NULL)))  NULLS FIRST, IFNULL(((vt0.c0)<>(vt0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0)))<<(x''))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((~ (v0.c0))) BETWEEN ((- (vt0.c0))) AND (((v0.c0) NOT NULL)))  NULLS FIRST, IFNULL(((vt0.c0)!=(vt0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((+ (v0.c0)))<<(x''))) ORDER BY (((~ (v0.c0))) BETWEEN ((- (vt0.c0))) AND (((v0.c0) NOT NULL)))  NULLS FIRST, IFNULL(((vt0.c0)<>(vt0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0)))<<(x''))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((~ (v0.c0))) BETWEEN ((- (vt0.c0))) AND (((v0.c0) NOT NULL)))  NULLS FIRST, IFNULL(((vt0.c0)!=(vt0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((+ (v0.c0)))<<(x''))) ORDER BY (((~ (v0.c0))) BETWEEN ((- (vt0.c0))) AND (((v0.c0) NOT NULL)))  NULLS FIRST, IFNULL(((vt0.c0)<>(vt0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) DESC;
SELECT * FROM rt0 WHERE ((((('6')) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((('6')) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((('6')) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((('6')) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((('6')) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (((LIKELY(v0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((LIKELY(v0.c0)) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((LIKELY(v0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((LIKELY(v0.c0)) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((LIKELY(v0.c0)) IS TRUE));
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (x''))  WHEN x'' THEN CAST(v0.c0 AS TEXT) ELSE v0.c0 END) ORDER BY v0.c0 COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) BETWEEN (v0.c0) AND (x''))  WHEN x'' THEN CAST(v0.c0 AS TEXT) ELSE v0.c0 END) IS TRUE)  as count FROM v0 ORDER BY v0.c0 COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (x''))  WHEN x'' THEN CAST(v0.c0 AS TEXT) ELSE v0.c0 END) ORDER BY v0.c0 COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) BETWEEN (v0.c0) AND (x''))  WHEN x'' THEN CAST(v0.c0 AS TEXT) ELSE v0.c0 END) IS TRUE)  as count FROM v0 ORDER BY v0.c0 COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (x''))  WHEN x'' THEN CAST(v0.c0 AS TEXT) ELSE v0.c0 END) ORDER BY v0.c0 COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)<>(vt0.c0)))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))) ORDER BY ((((vt0.c0) ISNULL))/((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL))/((- (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)<>(vt0.c0)))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))) ORDER BY ((((vt0.c0) ISNULL))/((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL))/((- (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)<>(vt0.c0)))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))) ORDER BY ((((vt0.c0) ISNULL))/((- (vt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) IS TRUE) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(0.08429319013004455 AS NUMERIC)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ((rt0.c0 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.08429319013004455 AS NUMERIC)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ((rt0.c0 IN (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(0.08429319013004455 AS NUMERIC)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ((rt0.c0 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.08429319013004455 AS NUMERIC)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ((rt0.c0 IN (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(0.08429319013004455 AS NUMERIC)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ((rt0.c0 IN (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'd긿' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN (~ (vt0.c0)) END) ORDER BY ((TRIM(DISTINCT vt0.c0)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'd긿' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(DISTINCT vt0.c0)) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'd긿' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN (~ (vt0.c0)) END) ORDER BY ((TRIM(DISTINCT vt0.c0)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'd긿' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(DISTINCT vt0.c0)) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'd긿' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN (~ (vt0.c0)) END) ORDER BY ((TRIM(DISTINCT vt0.c0)) IS TRUE) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))<=(('2693530')))) NOT BETWEEN ((((vt0.c0))<((vt0.c0)))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((LIKELIHOOD(DISTINCT '-380568993', 0.3214569684791435))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<=(('2693530')))) NOT BETWEEN ((((vt0.c0))<((vt0.c0)))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELIHOOD(DISTINCT '-380568993', 0.3214569684791435))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))<=(('2693530')))) NOT BETWEEN ((((vt0.c0))<((vt0.c0)))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((LIKELIHOOD(DISTINCT '-380568993', 0.3214569684791435))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<=(('2693530')))) NOT BETWEEN ((((vt0.c0))<((vt0.c0)))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELIHOOD(DISTINCT '-380568993', 0.3214569684791435))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))<=(('2693530')))) NOT BETWEEN ((((vt0.c0))<((vt0.c0)))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((LIKELIHOOD(DISTINCT '-380568993', 0.3214569684791435))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (v0.c0 COLLATE BINARY IN (((v0.c0)>(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 COLLATE BINARY IN (((v0.c0)>(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (v0.c0 COLLATE BINARY IN (((v0.c0)>(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 COLLATE BINARY IN (((v0.c0)>(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (v0.c0 COLLATE BINARY IN (((v0.c0)>(v0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(vt0.c0, vt0.c0)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(vt0.c0, vt0.c0)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT * FROM vt0, rt0, v0 WHERE (CAST(((((rt0.c1)OR(v0.c0)))OR(rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c1)OR(v0.c0)))OR(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (CAST(((((rt0.c1)OR(v0.c0)))OR(rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c1)OR(v0.c0)))OR(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (CAST(((((rt0.c1)OR(v0.c0)))OR(rt0.c0)) AS NUMERIC));
SELECT ALL * FROM v0, vt0 NATURAL JOIN rt0 WHERE (((((((((CAST(rt0.c2 AS TEXT))AND(((rt0.c0)&(rt0.c0)))))AND((NOT (rt0.c1)))))AND((0.6526447319889134 IN ()))))AND((vt0.c0 IN (vt0.c0, -1.826558535E9))))) ORDER BY ((rt0.c2) BETWEEN ('0.5508670805538409') AND (CAST(rt0.c1 AS BLOB))), ((rt0.c2)>>(rt0.c0)) COLLATE NOCASE, (((((rt0.c1))>((rt0.c2))))IS(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c2 AS TEXT))AND(((rt0.c0)&(rt0.c0)))))AND((NOT (rt0.c1)))))AND((0.6526447319889134 IN ()))))AND((vt0.c0 IN (vt0.c0, -1.826558535E9))))) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0 ORDER BY ((rt0.c2) BETWEEN ('0.5508670805538409') AND (CAST(rt0.c1 AS BLOB))), ((rt0.c2)>>(rt0.c0)) COLLATE NOCASE, (((((rt0.c1))>((rt0.c2))))IS(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))))  NULLS LAST);
SELECT ALL * FROM v0, vt0 NATURAL JOIN rt0 WHERE (((((((((CAST(rt0.c2 AS TEXT))AND(((rt0.c0)&(rt0.c0)))))AND((NOT (rt0.c1)))))AND((0.6526447319889134 IN ()))))AND((vt0.c0 IN (vt0.c0, -1.826558535E9))))) ORDER BY ((rt0.c2) BETWEEN ('0.5508670805538409') AND (CAST(rt0.c1 AS BLOB))), ((rt0.c2)>>(rt0.c0)) COLLATE NOCASE, (((((rt0.c1))>((rt0.c2))))IS(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c2 AS TEXT))AND(((rt0.c0)&(rt0.c0)))))AND((NOT (rt0.c1)))))AND((0.6526447319889134 IN ()))))AND((vt0.c0 IN (vt0.c0, -1.826558535E9))))) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0 ORDER BY ((rt0.c2) BETWEEN ('0.5508670805538409') AND (CAST(rt0.c1 AS BLOB))), ((rt0.c2)>>(rt0.c0)) COLLATE NOCASE, (((((rt0.c1))>((rt0.c2))))IS(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))))  NULLS LAST);
SELECT ALL * FROM v0, vt0 NATURAL JOIN rt0 WHERE (((((((((CAST(rt0.c2 AS TEXT))AND(((rt0.c0)&(rt0.c0)))))AND((NOT (rt0.c1)))))AND((0.6526447319889134 IN ()))))AND((vt0.c0 IN (vt0.c0, -1.826558535E9))))) ORDER BY ((rt0.c2) BETWEEN ('0.5508670805538409') AND (CAST(rt0.c1 AS BLOB))), ((rt0.c2)>>(rt0.c0)) COLLATE NOCASE, (((((rt0.c1))>((rt0.c2))))IS(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))))  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (((((LIKELY(v0.c0))AND(CHANGES())))OR(((v0.c0) NOT BETWEEN (rt0.c2) AND (x'fe1d'))))) ORDER BY CASE WHEN (((rt0.c2))>((NULL))) THEN (((rt0.c0))>((rt0.c2))) WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c1)GLOB(rt0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE IFNULL(rt0.c2, rt0.c1) END;
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELY(v0.c0))AND(CHANGES())))OR(((v0.c0) NOT BETWEEN (rt0.c2) AND (x'fe1d'))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN (((rt0.c2))>((NULL))) THEN (((rt0.c0))>((rt0.c2))) WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c1)GLOB(rt0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE IFNULL(rt0.c2, rt0.c1) END);
SELECT * FROM v0, rt0 WHERE (((((LIKELY(v0.c0))AND(CHANGES())))OR(((v0.c0) NOT BETWEEN (rt0.c2) AND (x'fe1d'))))) ORDER BY CASE WHEN (((rt0.c2))>((NULL))) THEN (((rt0.c0))>((rt0.c2))) WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c1)GLOB(rt0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE IFNULL(rt0.c2, rt0.c1) END;
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELY(v0.c0))AND(CHANGES())))OR(((v0.c0) NOT BETWEEN (rt0.c2) AND (x'fe1d'))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN (((rt0.c2))>((NULL))) THEN (((rt0.c0))>((rt0.c2))) WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c1)GLOB(rt0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE IFNULL(rt0.c2, rt0.c1) END);
SELECT * FROM v0, rt0 WHERE (((((LIKELY(v0.c0))AND(CHANGES())))OR(((v0.c0) NOT BETWEEN (rt0.c2) AND (x'fe1d'))))) ORDER BY CASE WHEN (((rt0.c2))>((NULL))) THEN (((rt0.c0))>((rt0.c2))) WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c1)GLOB(rt0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE IFNULL(rt0.c2, rt0.c1) END;
SELECT * FROM vt0, v0 WHERE ((+ (0.31386249190077753)));
SELECT SUM(count) FROM (SELECT (((+ (0.31386249190077753))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((+ (0.31386249190077753)));
SELECT SUM(count) FROM (SELECT (((+ (0.31386249190077753))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((+ (0.31386249190077753)));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (((0.37434897825780866 IN ()))>>(CASE WHEN x'' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)) WHERE ((rt0.c2 COLLATE BINARY IN ())) ORDER BY (((((0.3421859857484909) NOT BETWEEN (v0.c0) AND (rt0.c1)), ((((rt0.c0)AND(x'')))OR(rt0.c0)), TRIM(rt0.c1)))==((((0.9344563178668899) NOT BETWEEN (rt0.c0) AND (x'')), (v0.c0 IN ()), (+ (rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((0.37434897825780866 IN ()))>>(CASE WHEN x'' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)) ORDER BY (((((0.3421859857484909) NOT BETWEEN (v0.c0) AND (rt0.c1)), ((((rt0.c0)AND(x'')))OR(rt0.c0)), TRIM(rt0.c1)))=((((0.9344563178668899) NOT BETWEEN (rt0.c0) AND (x'')), (v0.c0 IN ()), (+ (rt0.c1))))) ASC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (((0.37434897825780866 IN ()))>>(CASE WHEN x'' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)) WHERE ((rt0.c2 COLLATE BINARY IN ())) ORDER BY (((((0.3421859857484909) NOT BETWEEN (v0.c0) AND (rt0.c1)), ((((rt0.c0)AND(x'')))OR(rt0.c0)), TRIM(rt0.c1)))==((((0.9344563178668899) NOT BETWEEN (rt0.c0) AND (x'')), (v0.c0 IN ()), (+ (rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((0.37434897825780866 IN ()))>>(CASE WHEN x'' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)) ORDER BY (((((0.3421859857484909) NOT BETWEEN (v0.c0) AND (rt0.c1)), ((((rt0.c0)AND(x'')))OR(rt0.c0)), TRIM(rt0.c1)))=((((0.9344563178668899) NOT BETWEEN (rt0.c0) AND (x'')), (v0.c0 IN ()), (+ (rt0.c1))))) ASC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (((0.37434897825780866 IN ()))>>(CASE WHEN x'' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)) WHERE ((rt0.c2 COLLATE BINARY IN ())) ORDER BY (((((0.3421859857484909) NOT BETWEEN (v0.c0) AND (rt0.c1)), ((((rt0.c0)AND(x'')))OR(rt0.c0)), TRIM(rt0.c1)))==((((0.9344563178668899) NOT BETWEEN (rt0.c0) AND (x'')), (v0.c0 IN ()), (+ (rt0.c1))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY, (((vt0.c0)IS(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY, (((vt0.c0)IS(vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY, (((vt0.c0)IS(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY, (((vt0.c0)IS(vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY, (((vt0.c0)IS(vt0.c0)) IN ()) ASC;
SELECT * FROM rt0 INNER JOIN vt0 ON (- (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END)) CROSS JOIN v0 ON LIKELY(DISTINCT (rt0.c1 IN ())) WHERE (((CAST(rt0.c0 AS NUMERIC))GLOB(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC))GLOB(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (- (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END)) CROSS JOIN v0 ON LIKELY(DISTINCT (rt0.c1 IN ())));
SELECT * FROM rt0 INNER JOIN vt0 ON (- (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END)) CROSS JOIN v0 ON LIKELY(DISTINCT (rt0.c1 IN ())) WHERE (((CAST(rt0.c0 AS NUMERIC))GLOB(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC))GLOB(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (- (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END)) CROSS JOIN v0 ON LIKELY(DISTINCT (rt0.c1 IN ())));
SELECT * FROM rt0 INNER JOIN vt0 ON (- (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END)) CROSS JOIN v0 ON LIKELY(DISTINCT (rt0.c1 IN ())) WHERE (((CAST(rt0.c0 AS NUMERIC))GLOB(rt0.c2 COLLATE BINARY)));
SELECT * FROM rt0, vt0, v0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN 0.8174137999073773 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN ((+ (rt0.c2))) AND (((vt0.c0)LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN 0.8174137999073773 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN ((+ (rt0.c2))) AND (((vt0.c0)LIKE(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN 0.8174137999073773 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN ((+ (rt0.c2))) AND (((vt0.c0)LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN 0.8174137999073773 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN ((+ (rt0.c2))) AND (((vt0.c0)LIKE(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN 0.8174137999073773 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN ((+ (rt0.c2))) AND (((vt0.c0)LIKE(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((rt0.c0 IN ((rt0.c0 IN ()), rt0.c2 COLLATE BINARY))) ORDER BY CHAR(((vt0.c0)<>(vt0.c0)), CAST(vt0.c0 AS REAL), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ((rt0.c0 IN ()), rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CHAR(((vt0.c0)!=(vt0.c0)), CAST(vt0.c0 AS REAL), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((rt0.c0 IN ((rt0.c0 IN ()), rt0.c2 COLLATE BINARY))) ORDER BY CHAR(((vt0.c0)<>(vt0.c0)), CAST(vt0.c0 AS REAL), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ((rt0.c0 IN ()), rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CHAR(((vt0.c0)!=(vt0.c0)), CAST(vt0.c0 AS REAL), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((rt0.c0 IN ((rt0.c0 IN ()), rt0.c2 COLLATE BINARY))) ORDER BY CHAR(((vt0.c0)<>(vt0.c0)), CAST(vt0.c0 AS REAL), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN (((rt0.c0, rt0.c1, rt0.c1))>((v0.c0, rt0.c2, rt0.c1))) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN ((v0.c0)<>(vt0.c0)) THEN rt0.c1 COLLATE NOCASE WHEN v0.c0 COLLATE NOCASE THEN UNLIKELY(v0.c0) ELSE CASE WHEN rt0.c2 THEN rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c0, rt0.c1, rt0.c1))>((v0.c0, rt0.c2, rt0.c1))) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN ((v0.c0)<>(vt0.c0)) THEN rt0.c1 COLLATE NOCASE WHEN v0.c0 COLLATE NOCASE THEN UNLIKELY(v0.c0) ELSE CASE WHEN rt0.c2 THEN rt0.c2 END END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN (((rt0.c0, rt0.c1, rt0.c1))>((v0.c0, rt0.c2, rt0.c1))) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN ((v0.c0)<>(vt0.c0)) THEN rt0.c1 COLLATE NOCASE WHEN v0.c0 COLLATE NOCASE THEN UNLIKELY(v0.c0) ELSE CASE WHEN rt0.c2 THEN rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c0, rt0.c1, rt0.c1))>((v0.c0, rt0.c2, rt0.c1))) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN ((v0.c0)<>(vt0.c0)) THEN rt0.c1 COLLATE NOCASE WHEN v0.c0 COLLATE NOCASE THEN UNLIKELY(v0.c0) ELSE CASE WHEN rt0.c2 THEN rt0.c2 END END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN (((rt0.c0, rt0.c1, rt0.c1))>((v0.c0, rt0.c2, rt0.c1))) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN ((v0.c0)<>(vt0.c0)) THEN rt0.c1 COLLATE NOCASE WHEN v0.c0 COLLATE NOCASE THEN UNLIKELY(v0.c0) ELSE CASE WHEN rt0.c2 THEN rt0.c2 END END);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((('199420228' IN ()) IN ())) ORDER BY ((((vt0.c0)AND((- (v0.c0)))))OR(LIKE(vt0.c0, vt0.c0))) DESC  NULLS LAST, ((((vt0.c0, vt0.c0, v0.c0))<((v0.c0, v0.c0, vt0.c0))) IN ())  NULLS LAST, CAST(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END AS BLOB) DESC  NULLS LAST, ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END)IS(((vt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((('199420228' IN ()) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0)AND((- (v0.c0)))))OR(LIKE(vt0.c0, vt0.c0))) DESC  NULLS LAST, ((((vt0.c0, vt0.c0, v0.c0))<((v0.c0, v0.c0, vt0.c0))) IN ())  NULLS LAST, CAST(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END AS BLOB) DESC  NULLS LAST, ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END)IS(((vt0.c0) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((('199420228' IN ()) IN ())) ORDER BY ((((vt0.c0)AND((- (v0.c0)))))OR(LIKE(vt0.c0, vt0.c0))) DESC  NULLS LAST, ((((vt0.c0, vt0.c0, v0.c0))<((v0.c0, v0.c0, vt0.c0))) IN ())  NULLS LAST, CAST(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END AS BLOB) DESC  NULLS LAST, ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END)IS(((vt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((('199420228' IN ()) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0)AND((- (v0.c0)))))OR(LIKE(vt0.c0, vt0.c0))) DESC  NULLS LAST, ((((vt0.c0, vt0.c0, v0.c0))<((v0.c0, v0.c0, vt0.c0))) IN ())  NULLS LAST, CAST(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END AS BLOB) DESC  NULLS LAST, ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END)IS(((vt0.c0) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((('199420228' IN ()) IN ())) ORDER BY ((((vt0.c0)AND((- (v0.c0)))))OR(LIKE(vt0.c0, vt0.c0))) DESC  NULLS LAST, ((((vt0.c0, vt0.c0, v0.c0))<((v0.c0, v0.c0, vt0.c0))) IN ())  NULLS LAST, CAST(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END AS BLOB) DESC  NULLS LAST, ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END)IS(((vt0.c0) NOT NULL))) ASC;
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2 COLLATE RTRIM)OR(rt0.c2 COLLATE RTRIM)))OR((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 COLLATE RTRIM)OR(rt0.c2 COLLATE RTRIM)))OR((NOT (rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2 COLLATE RTRIM)OR(rt0.c2 COLLATE RTRIM)))OR((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 COLLATE RTRIM)OR(rt0.c2 COLLATE RTRIM)))OR((NOT (rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2 COLLATE RTRIM)OR(rt0.c2 COLLATE RTRIM)))OR((NOT (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c1))<((v0.c0)))))<>(((((rt0.c1))>=((v0.c0))))))) ORDER BY (- ((rt0.c1 IN (v0.c0, rt0.c2, rt0.c2)))) ASC  NULLS LAST, ((((rt0.c2)>(v0.c0))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (RTRIM(rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1))<((v0.c0)))))<>(((((rt0.c1))>=((v0.c0))))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (- ((rt0.c1 IN (v0.c0, rt0.c2, rt0.c2)))) ASC  NULLS LAST, ((((rt0.c2)>(v0.c0))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (RTRIM(rt0.c1))) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c1))<((v0.c0)))))<>(((((rt0.c1))>=((v0.c0))))))) ORDER BY (- ((rt0.c1 IN (v0.c0, rt0.c2, rt0.c2)))) ASC  NULLS LAST, ((((rt0.c2)>(v0.c0))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (RTRIM(rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1))<((v0.c0)))))<>(((((rt0.c1))>=((v0.c0))))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (- ((rt0.c1 IN (v0.c0, rt0.c2, rt0.c2)))) ASC  NULLS LAST, ((((rt0.c2)>(v0.c0))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (RTRIM(rt0.c1))) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c1))<((v0.c0)))))<>(((((rt0.c1))>=((v0.c0))))))) ORDER BY (- ((rt0.c1 IN (v0.c0, rt0.c2, rt0.c2)))) ASC  NULLS LAST, ((((rt0.c2)>(v0.c0))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (RTRIM(rt0.c1))) DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.03166526400874892) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))<(((((((((vt0.c0)AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.03166526400874892) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))<(((((((((vt0.c0)AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.03166526400874892) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))<(((((((((vt0.c0)AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.03166526400874892) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))<(((((((((vt0.c0)AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.03166526400874892) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))<(((((((((vt0.c0)AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END)AND(((rt0.c1) NOTNULL)))) ORDER BY ((((rt0.c0)<=(rt0.c1)))||((~ (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END)AND(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c0)<=(rt0.c1)))||((~ (rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END)AND(((rt0.c1) NOTNULL)))) ORDER BY ((((rt0.c0)<=(rt0.c1)))||((~ (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END)AND(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c0)<=(rt0.c1)))||((~ (rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END)AND(((rt0.c1) NOTNULL)))) ORDER BY ((((rt0.c0)<=(rt0.c1)))||((~ (rt0.c0))))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (NULLIF(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ABS(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ABS(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (NULLIF(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ABS(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ABS(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (NULLIF(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ABS(v0.c0)));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(CASE WHEN x'' THEN '1673927899' ELSE vt0.c0 END)))AND((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE RTRIM) ISNULL)  NULLS LAST, CAST(CAST(vt0.c0 AS INTEGER) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(CASE WHEN x'' THEN '1673927899' ELSE vt0.c0 END)))AND((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) ISNULL)  NULLS LAST, CAST(CAST(vt0.c0 AS INTEGER) AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(CASE WHEN x'' THEN '1673927899' ELSE vt0.c0 END)))AND((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE RTRIM) ISNULL)  NULLS LAST, CAST(CAST(vt0.c0 AS INTEGER) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(CASE WHEN x'' THEN '1673927899' ELSE vt0.c0 END)))AND((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) ISNULL)  NULLS LAST, CAST(CAST(vt0.c0 AS INTEGER) AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(CASE WHEN x'' THEN '1673927899' ELSE vt0.c0 END)))AND((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE RTRIM) ISNULL)  NULLS LAST, CAST(CAST(vt0.c0 AS INTEGER) AS TEXT)  NULLS LAST;
SELECT * FROM v0, rt0, vt0 WHERE (((NULL)IS NOT((+ (v0.c0))))) ORDER BY 0.8332286653048397;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS NOT((+ (v0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY 0.8332286653048397);
SELECT * FROM v0, rt0, vt0 WHERE (((NULL)IS NOT((+ (v0.c0))))) ORDER BY 0.8332286653048397;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS NOT((+ (v0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY 0.8332286653048397);
SELECT * FROM v0, rt0, vt0 WHERE (((NULL)IS NOT((+ (v0.c0))))) ORDER BY 0.8332286653048397;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('0.37434897825780866' COLLATE RTRIM) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c0 END) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (('0.37434897825780866' COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c0 END) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('0.37434897825780866' COLLATE RTRIM) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c0 END) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (('0.37434897825780866' COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c0 END) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('0.37434897825780866' COLLATE RTRIM) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c0 END) NOT NULL) DESC;
SELECT * FROM vt0 WHERE (((((vt0.c0)==(vt0.c0))) ISNULL)) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)==(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0)==(vt0.c0))) ISNULL)) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)==(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0)==(vt0.c0))) ISNULL)) ORDER BY vt0.c0 ASC;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)AND(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE)AND(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)AND(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE)AND(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)AND(CAST(rt0.c2 AS BLOB))));
SELECT ALL * FROM vt0, v0 WHERE ((+ (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((+ (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((+ (CAST(vt0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON v0.c0 WHERE ('396143524');
SELECT SUM(count) FROM (SELECT ALL (('396143524') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON v0.c0);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON v0.c0 WHERE ('396143524');
SELECT SUM(count) FROM (SELECT ALL (('396143524') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON v0.c0);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON v0.c0 WHERE ('396143524');
SELECT * FROM v0 WHERE (((json_array(v0.c0, v0.c0)) NOTNULL)) ORDER BY (+ (((v0.c0)OR(v0.c0)))) DESC  NULLS FIRST, (TYPEOF(DISTINCT v0.c0) IN ()) DESC, ((TRIM(DISTINCT v0.c0, v0.c0)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_array(v0.c0, v0.c0)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c0)OR(v0.c0)))) DESC  NULLS FIRST, (TYPEOF(DISTINCT v0.c0) IN ()) DESC, ((TRIM(DISTINCT v0.c0, v0.c0)) IS TRUE) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((json_array(v0.c0, v0.c0)) NOTNULL)) ORDER BY (+ (((v0.c0)OR(v0.c0)))) DESC  NULLS FIRST, (TYPEOF(DISTINCT v0.c0) IN ()) DESC, ((TRIM(DISTINCT v0.c0, v0.c0)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_array(v0.c0, v0.c0)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c0)OR(v0.c0)))) DESC  NULLS FIRST, (TYPEOF(DISTINCT v0.c0) IN ()) DESC, ((TRIM(DISTINCT v0.c0, v0.c0)) IS TRUE) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((json_array(v0.c0, v0.c0)) NOTNULL)) ORDER BY (+ (((v0.c0)OR(v0.c0)))) DESC  NULLS FIRST, (TYPEOF(DISTINCT v0.c0) IN ()) DESC, ((TRIM(DISTINCT v0.c0, v0.c0)) IS TRUE) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((((((((((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0 COLLATE RTRIM)))AND(rt0.c1 COLLATE BINARY)))AND(((rt0.c2)*(rt0.c1)))))OR(((rt0.c0)GLOB(rt0.c1)))))OR(x'abe4')))AND((- (rt0.c2)))))AND((rt0.c1 IN ()))))OR((- (rt0.c2))))) ORDER BY CASE ((((rt0.c1)OR(NULL)))AND(rt0.c1))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (('-7292114') NOTNULL) WHEN (rt0.c2 IN ()) THEN 0.9380537764151811 WHEN CASE WHEN rt0.c0 THEN rt0.c0 END THEN 1804805006 COLLATE BINARY ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0 COLLATE RTRIM)))AND(rt0.c1 COLLATE BINARY)))AND(((rt0.c2)*(rt0.c1)))))OR(((rt0.c0)GLOB(rt0.c1)))))OR(x'abe4')))AND((- (rt0.c2)))))AND((rt0.c1 IN ()))))OR((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((((rt0.c1)OR(NULL)))AND(rt0.c1))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (('-7292114') NOTNULL) WHEN (rt0.c2 IN ()) THEN 0.9380537764151811 WHEN CASE WHEN rt0.c0 THEN rt0.c0 END THEN 1804805006 COLLATE BINARY ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((((((((((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0 COLLATE RTRIM)))AND(rt0.c1 COLLATE BINARY)))AND(((rt0.c2)*(rt0.c1)))))OR(((rt0.c0)GLOB(rt0.c1)))))OR(x'abe4')))AND((- (rt0.c2)))))AND((rt0.c1 IN ()))))OR((- (rt0.c2))))) ORDER BY CASE ((((rt0.c1)OR(NULL)))AND(rt0.c1))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (('-7292114') NOTNULL) WHEN (rt0.c2 IN ()) THEN 0.9380537764151811 WHEN CASE WHEN rt0.c0 THEN rt0.c0 END THEN 1804805006 COLLATE BINARY ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0 COLLATE RTRIM)))AND(rt0.c1 COLLATE BINARY)))AND(((rt0.c2)*(rt0.c1)))))OR(((rt0.c0)GLOB(rt0.c1)))))OR(x'abe4')))AND((- (rt0.c2)))))AND((rt0.c1 IN ()))))OR((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((((rt0.c1)OR(NULL)))AND(rt0.c1))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (('-7292114') NOTNULL) WHEN (rt0.c2 IN ()) THEN 0.9380537764151811 WHEN CASE WHEN rt0.c0 THEN rt0.c0 END THEN 1804805006 COLLATE BINARY ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((((((((((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0 COLLATE RTRIM)))AND(rt0.c1 COLLATE BINARY)))AND(((rt0.c2)*(rt0.c1)))))OR(((rt0.c0)GLOB(rt0.c1)))))OR(x'abe4')))AND((- (rt0.c2)))))AND((rt0.c1 IN ()))))OR((- (rt0.c2))))) ORDER BY CASE ((((rt0.c1)OR(NULL)))AND(rt0.c1))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (('-7292114') NOTNULL) WHEN (rt0.c2 IN ()) THEN 0.9380537764151811 WHEN CASE WHEN rt0.c0 THEN rt0.c0 END THEN 1804805006 COLLATE BINARY ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))+(vt0.c0)) WHERE (CASE ((rt0.c0)/('-1139695135'))  WHEN ((1.99420228E8)>(rt0.c1)) THEN ((v0.c0)=(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)/('-1139695135'))  WHEN ((1.99420228E8)>(rt0.c1)) THEN ((v0.c0)==(v0.c0)) END) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))+(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))+(vt0.c0)) WHERE (CASE ((rt0.c0)/('-1139695135'))  WHEN ((1.99420228E8)>(rt0.c1)) THEN ((v0.c0)=(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)/('-1139695135'))  WHEN ((1.99420228E8)>(rt0.c1)) THEN ((v0.c0)==(v0.c0)) END) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))+(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))+(vt0.c0)) WHERE (CASE ((rt0.c0)/('-1139695135'))  WHEN ((1.99420228E8)>(rt0.c1)) THEN ((v0.c0)=(v0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN INSTR(vt0.c0, vt0.c0) THEN x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN INSTR(vt0.c0, vt0.c0) THEN x'' END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN INSTR(vt0.c0, vt0.c0) THEN x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN INSTR(vt0.c0, vt0.c0) THEN x'' END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN INSTR(vt0.c0, vt0.c0) THEN x'' END);
SELECT * FROM rt0, v0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(rt0.c1)))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((0.09577240762530859))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(rt0.c1)))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((0.09577240762530859)))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(rt0.c1)))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((0.09577240762530859))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(rt0.c1)))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((0.09577240762530859)))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(rt0.c1)))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((0.09577240762530859))))));
SELECT * FROM rt0, v0 WHERE (NULL) ORDER BY ((((((((CAST(rt0.c1 AS TEXT))AND(CAST(x'0beb' AS INTEGER))))AND(CAST(rt0.c0 AS INTEGER))))AND((((rt0.c0))<=((rt0.c1))))))OR(((rt0.c2)!=(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((CAST(rt0.c1 AS TEXT))AND(CAST(x'0beb' AS INTEGER))))AND(CAST(rt0.c0 AS INTEGER))))AND((((rt0.c0))<=((rt0.c1))))))OR(((rt0.c2)<>(rt0.c0))))  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (NULL) ORDER BY ((((((((CAST(rt0.c1 AS TEXT))AND(CAST(x'0beb' AS INTEGER))))AND(CAST(rt0.c0 AS INTEGER))))AND((((rt0.c0))<=((rt0.c1))))))OR(((rt0.c2)!=(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((CAST(rt0.c1 AS TEXT))AND(CAST(x'0beb' AS INTEGER))))AND(CAST(rt0.c0 AS INTEGER))))AND((((rt0.c0))<=((rt0.c1))))))OR(((rt0.c2)<>(rt0.c0))))  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (NULL) ORDER BY ((((((((CAST(rt0.c1 AS TEXT))AND(CAST(x'0beb' AS INTEGER))))AND(CAST(rt0.c0 AS INTEGER))))AND((((rt0.c0))<=((rt0.c1))))))OR(((rt0.c2)!=(rt0.c0))))  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (((((('on'))<>((x''))))|(UNLIKELY(vt0.c0)))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((('on'))!=((x''))))|(UNLIKELY(vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END) NOTNULL)  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (((((('on'))<>((x''))))|(UNLIKELY(vt0.c0)))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((('on'))!=((x''))))|(UNLIKELY(vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END) NOTNULL)  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (((((('on'))<>((x''))))|(UNLIKELY(vt0.c0)))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END) NOTNULL)  NULLS LAST;
SELECT * FROM rt0 INNER JOIN v0 ON ((((rt0.c1) NOT NULL))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) ORDER BY ((((rt0.c0)-(x''))) NOT BETWEEN (((rt0.c1)<>(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((rt0.c1) NOT NULL))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) ORDER BY ((((rt0.c0)-(x''))) NOT BETWEEN (((rt0.c1)<>(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) DESC);
SELECT * FROM rt0 INNER JOIN v0 ON ((((rt0.c1) NOT NULL))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) ORDER BY ((((rt0.c0)-(x''))) NOT BETWEEN (((rt0.c1)<>(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((rt0.c1) NOT NULL))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) ORDER BY ((((rt0.c0)-(x''))) NOT BETWEEN (((rt0.c1)<>(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) DESC);
SELECT * FROM rt0 INNER JOIN v0 ON ((((rt0.c1) NOT NULL))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) ORDER BY ((((rt0.c0)-(x''))) NOT BETWEEN (((rt0.c1)<>(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) DESC;
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) IS TRUE)))) ORDER BY ((((((((((vt0.c0)<=(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(vt0.c0)))AND(vt0.c0)) DESC  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)<=(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(vt0.c0)))AND(vt0.c0)) DESC  NULLS FIRST, vt0.c0);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) IS TRUE)))) ORDER BY ((((((((((vt0.c0)<=(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(vt0.c0)))AND(vt0.c0)) DESC  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)<=(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(vt0.c0)))AND(vt0.c0)) DESC  NULLS FIRST, vt0.c0);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) IS TRUE)))) ORDER BY ((((((((((vt0.c0)<=(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(vt0.c0)))AND(vt0.c0)) DESC  NULLS FIRST, vt0.c0;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ()) LEFT OUTER JOIN vt0 ON ((v0.c0)<>(NULL)) COLLATE RTRIM WHERE (((((((((vt0.c0)OR(NULL)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)) COLLATE RTRIM) ORDER BY CASE CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN 0.43246815113311954 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN NULL THEN rt0.c1 END  WHEN CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 END THEN CASE v0.c0  WHEN 1.7976931348623157E308 THEN '' WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) THEN (- (rt0.c2)) WHEN LIKE(rt0.c1, v0.c0, '0') THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(NULL)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ()) LEFT OUTER JOIN vt0 ON ((v0.c0)<>(NULL)) COLLATE RTRIM ORDER BY CASE CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN 0.43246815113311954 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN NULL THEN rt0.c1 END  WHEN CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 END THEN CASE v0.c0  WHEN 1.7976931348623157E308 THEN '' WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) THEN (- (rt0.c2)) WHEN LIKE(rt0.c1, v0.c0, '0') THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) END DESC);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ()) LEFT OUTER JOIN vt0 ON ((v0.c0)<>(NULL)) COLLATE RTRIM WHERE (((((((((vt0.c0)OR(NULL)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)) COLLATE RTRIM) ORDER BY CASE CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN 0.43246815113311954 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN NULL THEN rt0.c1 END  WHEN CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 END THEN CASE v0.c0  WHEN 1.7976931348623157E308 THEN '' WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) THEN (- (rt0.c2)) WHEN LIKE(rt0.c1, v0.c0, '0') THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(NULL)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ()) LEFT OUTER JOIN vt0 ON ((v0.c0)<>(NULL)) COLLATE RTRIM ORDER BY CASE CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN 0.43246815113311954 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN NULL THEN rt0.c1 END  WHEN CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 END THEN CASE v0.c0  WHEN 1.7976931348623157E308 THEN '' WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) THEN (- (rt0.c2)) WHEN LIKE(rt0.c1, v0.c0, '0') THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) END DESC);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ()) LEFT OUTER JOIN vt0 ON ((v0.c0)<>(NULL)) COLLATE RTRIM WHERE (((((((((vt0.c0)OR(NULL)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)) COLLATE RTRIM) ORDER BY CASE CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN 0.43246815113311954 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN NULL THEN rt0.c1 END  WHEN CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 END THEN CASE v0.c0  WHEN 1.7976931348623157E308 THEN '' WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) THEN (- (rt0.c2)) WHEN LIKE(rt0.c1, v0.c0, '0') THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) END DESC;
SELECT * FROM rt0, v0, vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) WHEN ((v0.c0)<=(rt0.c2)) THEN CASE rt0.c1  WHEN x'b108' THEN rt0.c1 ELSE rt0.c1 END WHEN (((rt0.c1))>((rt0.c0))) THEN vt0.c0 END) ORDER BY rt0.c0, CAST(((((0.2625248187425826)OR(0.5804645613122916)))AND(rt0.c0)) AS BLOB)  NULLS LAST, CASE WHEN json_array(rt0.c0, v0.c0) THEN ((rt0.c2) NOT BETWEEN ('') AND (rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) WHEN ((v0.c0)<=(rt0.c2)) THEN CASE rt0.c1  WHEN x'b108' THEN rt0.c1 ELSE rt0.c1 END WHEN (((rt0.c1))>((rt0.c0))) THEN vt0.c0 END) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY rt0.c0, CAST(((((0.2625248187425826)OR(0.5804645613122916)))AND(rt0.c0)) AS BLOB)  NULLS LAST, CASE WHEN json_array(rt0.c0, v0.c0) THEN ((rt0.c2) NOT BETWEEN ('') AND (rt0.c1)) END  NULLS FIRST);
SELECT * FROM rt0, v0, vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) WHEN ((v0.c0)<=(rt0.c2)) THEN CASE rt0.c1  WHEN x'b108' THEN rt0.c1 ELSE rt0.c1 END WHEN (((rt0.c1))>((rt0.c0))) THEN vt0.c0 END) ORDER BY rt0.c0, CAST(((((0.2625248187425826)OR(0.5804645613122916)))AND(rt0.c0)) AS BLOB)  NULLS LAST, CASE WHEN json_array(rt0.c0, v0.c0) THEN ((rt0.c2) NOT BETWEEN ('') AND (rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) WHEN ((v0.c0)<=(rt0.c2)) THEN CASE rt0.c1  WHEN x'b108' THEN rt0.c1 ELSE rt0.c1 END WHEN (((rt0.c1))>((rt0.c0))) THEN vt0.c0 END) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY rt0.c0, CAST(((((0.2625248187425826)OR(0.5804645613122916)))AND(rt0.c0)) AS BLOB)  NULLS LAST, CASE WHEN json_array(rt0.c0, v0.c0) THEN ((rt0.c2) NOT BETWEEN ('') AND (rt0.c1)) END  NULLS FIRST);
SELECT * FROM rt0, v0, vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) WHEN ((v0.c0)<=(rt0.c2)) THEN CASE rt0.c1  WHEN x'b108' THEN rt0.c1 ELSE rt0.c1 END WHEN (((rt0.c1))>((rt0.c0))) THEN vt0.c0 END) ORDER BY rt0.c0, CAST(((((0.2625248187425826)OR(0.5804645613122916)))AND(rt0.c0)) AS BLOB)  NULLS LAST, CASE WHEN json_array(rt0.c0, v0.c0) THEN ((rt0.c2) NOT BETWEEN ('') AND (rt0.c1)) END  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN v0 ON (((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) WHERE (x'7b1a' COLLATE RTRIM) ORDER BY ((CAST(vt0.c0 AS INTEGER))||(-3.80568993E8))  NULLS FIRST, ((CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c1 END)AND('')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'7b1a' COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED LEFT OUTER JOIN v0 ON (((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) ORDER BY ((CAST(vt0.c0 AS INTEGER))||(-3.80568993E8))  NULLS FIRST, ((CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c1 END)AND('')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN v0 ON (((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) WHERE (x'7b1a' COLLATE RTRIM) ORDER BY ((CAST(vt0.c0 AS INTEGER))||(-3.80568993E8))  NULLS FIRST, ((CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c1 END)AND('')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'7b1a' COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED LEFT OUTER JOIN v0 ON (((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) ORDER BY ((CAST(vt0.c0 AS INTEGER))||(-3.80568993E8))  NULLS FIRST, ((CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c1 END)AND('')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN v0 ON (((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) WHERE (x'7b1a' COLLATE RTRIM) ORDER BY ((CAST(vt0.c0 AS INTEGER))||(-3.80568993E8))  NULLS FIRST, ((CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c1 END)AND('')) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((- (LENGTH(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (LENGTH(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (LENGTH(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (LENGTH(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (LENGTH(vt0.c0))));
SELECT ALL * FROM vt0, v0, rt0 WHERE (vt0.c0) ORDER BY ((INSTR(v0.c0, rt0.c0)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((INSTR(v0.c0, rt0.c0)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0, rt0 WHERE (vt0.c0) ORDER BY ((INSTR(v0.c0, rt0.c0)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((INSTR(v0.c0, rt0.c0)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0, rt0 WHERE (vt0.c0) ORDER BY ((INSTR(v0.c0, rt0.c0)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON ((rt0.c2)>=('868299884')) COLLATE RTRIM WHERE ((((rt0.c2)) BETWEEN (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((((rt0.c1)>>(rt0.c0)))))) ORDER BY ((NOT (rt0.c2)) IN ()) DESC  NULLS LAST, ((TRIM(DISTINCT v0.c0)) NOT BETWEEN ((v0.c0 IN (rt0.c2, v0.c0))) AND (rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((((rt0.c1)>>(rt0.c0)))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((rt0.c2)>=('868299884')) COLLATE RTRIM ORDER BY ((NOT (rt0.c2)) IN ()) DESC  NULLS LAST, ((TRIM(DISTINCT v0.c0)) NOT BETWEEN ((v0.c0 IN (rt0.c2, v0.c0))) AND (rt0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON ((rt0.c2)>=('868299884')) COLLATE RTRIM WHERE ((((rt0.c2)) BETWEEN (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((((rt0.c1)>>(rt0.c0)))))) ORDER BY ((NOT (rt0.c2)) IN ()) DESC  NULLS LAST, ((TRIM(DISTINCT v0.c0)) NOT BETWEEN ((v0.c0 IN (rt0.c2, v0.c0))) AND (rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((((rt0.c1)>>(rt0.c0)))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((rt0.c2)>=('868299884')) COLLATE RTRIM ORDER BY ((NOT (rt0.c2)) IN ()) DESC  NULLS LAST, ((TRIM(DISTINCT v0.c0)) NOT BETWEEN ((v0.c0 IN (rt0.c2, v0.c0))) AND (rt0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON ((rt0.c2)>=('868299884')) COLLATE RTRIM WHERE ((((rt0.c2)) BETWEEN (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((((rt0.c1)>>(rt0.c0)))))) ORDER BY ((NOT (rt0.c2)) IN ()) DESC  NULLS LAST, ((TRIM(DISTINCT v0.c0)) NOT BETWEEN ((v0.c0 IN (rt0.c2, v0.c0))) AND (rt0.c2 COLLATE BINARY));
SELECT * FROM v0, vt0, rt0 WHERE ((NOT (((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE ((NOT (((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE ((NOT (((rt0.c0) NOTNULL))));
SELECT ALL * FROM v0 WHERE (((((((((HEX('f\Yu'))OR(((v0.c0)|(v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)>>(v0.c0)))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((HEX('f\Yu'))OR(((v0.c0)|(v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)>>(v0.c0)))))AND(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((HEX('f\Yu'))OR(((v0.c0)|(v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)>>(v0.c0)))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((HEX('f\Yu'))OR(((v0.c0)|(v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)>>(v0.c0)))))AND(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((HEX('f\Yu'))OR(((v0.c0)|(v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)>>(v0.c0)))))AND(v0.c0)));
SELECT ALL * FROM vt0, rt0, v0 WHERE (0.49599786209965424) ORDER BY x'66dc'  NULLS FIRST, vt0.c0  NULLS LAST, 0.6606601040051207 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.49599786209965424) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY x'66dc'  NULLS FIRST, vt0.c0  NULLS LAST, 0.6606601040051207 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (0.49599786209965424) ORDER BY x'66dc'  NULLS FIRST, vt0.c0  NULLS LAST, 0.6606601040051207 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.49599786209965424) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY x'66dc'  NULLS FIRST, vt0.c0  NULLS LAST, 0.6606601040051207 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (0.49599786209965424) ORDER BY x'66dc'  NULLS FIRST, vt0.c0  NULLS LAST, 0.6606601040051207 ASC  NULLS FIRST;
SELECT * FROM v0, rt0 INNER JOIN vt0 ON (+ (((rt0.c0)AND(v0.c0)))) WHERE (((0.483461713257484)+((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((x'')))))) ORDER BY (((rt0.c2)) BETWEEN (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.483461713257484)+((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((x'')))))) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt0 ON (+ (((rt0.c0)AND(v0.c0)))) ORDER BY (((rt0.c2)) BETWEEN (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((((((rt0.c1)AND(rt0.c2)))AND(v0.c0))))));
SELECT * FROM v0, rt0 INNER JOIN vt0 ON (+ (((rt0.c0)AND(v0.c0)))) WHERE (((0.483461713257484)+((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((x'')))))) ORDER BY (((rt0.c2)) BETWEEN (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.483461713257484)+((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((x'')))))) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt0 ON (+ (((rt0.c0)AND(v0.c0)))) ORDER BY (((rt0.c2)) BETWEEN (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((((((rt0.c1)AND(rt0.c2)))AND(v0.c0))))));
SELECT * FROM v0, rt0 INNER JOIN vt0 ON (+ (((rt0.c0)AND(v0.c0)))) WHERE (((0.483461713257484)+((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((x'')))))) ORDER BY (((rt0.c2)) BETWEEN (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ('805643862') ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('805643862') IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ('805643862') ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('805643862') IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ('805643862') ORDER BY v0.c0  NULLS FIRST;
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((0.5622250315519943)>(x'')))AND(((vt0.c0)<(v0.c0)))))AND((((vt0.c0, rt0.c2, v0.c0))==((rt0.c1, vt0.c0, rt0.c2))))) LEFT OUTER JOIN v0 ON SQLITE_COMPILEOPTION_GET(((((vt0.c0)OR(rt0.c2)))AND(v0.c0))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((0.5622250315519943)>(x'')))AND(((vt0.c0)<(v0.c0)))))AND((((vt0.c0, rt0.c2, v0.c0))=((rt0.c1, vt0.c0, rt0.c2))))) LEFT OUTER JOIN v0 ON SQLITE_COMPILEOPTION_GET(((((vt0.c0)OR(rt0.c2)))AND(v0.c0))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((0.5622250315519943)>(x'')))AND(((vt0.c0)<(v0.c0)))))AND((((vt0.c0, rt0.c2, v0.c0))==((rt0.c1, vt0.c0, rt0.c2))))) LEFT OUTER JOIN v0 ON SQLITE_COMPILEOPTION_GET(((((vt0.c0)OR(rt0.c2)))AND(v0.c0))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((0.5622250315519943)>(x'')))AND(((vt0.c0)<(v0.c0)))))AND((((vt0.c0, rt0.c2, v0.c0))=((rt0.c1, vt0.c0, rt0.c2))))) LEFT OUTER JOIN v0 ON SQLITE_COMPILEOPTION_GET(((((vt0.c0)OR(rt0.c2)))AND(v0.c0))));
SELECT * FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((x'' IN (rt0.c0)) COLLATE RTRIM) ORDER BY 0.38067003247090636 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.38067003247090636 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((x'' IN (rt0.c0)) COLLATE RTRIM) ORDER BY 0.38067003247090636 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.38067003247090636 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((x'' IN (rt0.c0)) COLLATE RTRIM) ORDER BY 0.38067003247090636 ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) ISNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) ISNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) ISNULL)) IS TRUE));
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((rt0.c1) BETWEEN (vt0.c0) AND ('')), (rt0.c1 IN ()), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))==(((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((v0.c0)*(v0.c0)), IFNULL(DISTINCT v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) BETWEEN (vt0.c0) AND ('')), (rt0.c1 IN ()), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))=(((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((v0.c0)*(v0.c0)), IFNULL(DISTINCT v0.c0, v0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((rt0.c1) BETWEEN (vt0.c0) AND ('')), (rt0.c1 IN ()), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))==(((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((v0.c0)*(v0.c0)), IFNULL(DISTINCT v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) BETWEEN (vt0.c0) AND ('')), (rt0.c1 IN ()), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))=(((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((v0.c0)*(v0.c0)), IFNULL(DISTINCT v0.c0, v0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((rt0.c1) BETWEEN (vt0.c0) AND ('')), (rt0.c1 IN ()), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))==(((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((v0.c0)*(v0.c0)), IFNULL(DISTINCT v0.c0, v0.c0)))));
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))|(rt0.c0))) ORDER BY CAST(CAST(rt0.c0 AS REAL) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))|(rt0.c0))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CAST(CAST(rt0.c0 AS REAL) AS REAL) ASC);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))|(rt0.c0))) ORDER BY CAST(CAST(rt0.c0 AS REAL) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))|(rt0.c0))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CAST(CAST(rt0.c0 AS REAL) AS REAL) ASC);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))|(rt0.c0))) ORDER BY CAST(CAST(rt0.c0 AS REAL) AS REAL) ASC;
SELECT ALL * FROM rt0 WHERE (CASE ((('rㆿ'))>((rt0.c0)))  WHEN LENGTH(rt0.c0) THEN CAST(rt0.c1 AS REAL) WHEN rt0.c1 THEN rt0.c2 COLLATE BINARY WHEN (((rt0.c0))<=((rt0.c0))) THEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) END) ORDER BY ((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))AND(x'')))OR(CAST(rt0.c2 AS NUMERIC))))OR(((rt0.c2)-(NULL)))))AND('-1955279641'));
SELECT SUM(count) FROM (SELECT ((CASE ((('rㆿ'))>((rt0.c0)))  WHEN LENGTH(rt0.c0) THEN CAST(rt0.c1 AS REAL) WHEN rt0.c1 THEN rt0.c2 COLLATE BINARY WHEN (((rt0.c0))<=((rt0.c0))) THEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))AND(x'')))OR(CAST(rt0.c2 AS NUMERIC))))OR(((rt0.c2)-(NULL)))))AND('-1955279641')));
SELECT ALL * FROM rt0 WHERE (CASE ((('rㆿ'))>((rt0.c0)))  WHEN LENGTH(rt0.c0) THEN CAST(rt0.c1 AS REAL) WHEN rt0.c1 THEN rt0.c2 COLLATE BINARY WHEN (((rt0.c0))<=((rt0.c0))) THEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) END) ORDER BY ((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))AND(x'')))OR(CAST(rt0.c2 AS NUMERIC))))OR(((rt0.c2)-(NULL)))))AND('-1955279641'));
SELECT SUM(count) FROM (SELECT ((CASE ((('rㆿ'))>((rt0.c0)))  WHEN LENGTH(rt0.c0) THEN CAST(rt0.c1 AS REAL) WHEN rt0.c1 THEN rt0.c2 COLLATE BINARY WHEN (((rt0.c0))<=((rt0.c0))) THEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))AND(x'')))OR(CAST(rt0.c2 AS NUMERIC))))OR(((rt0.c2)-(NULL)))))AND('-1955279641')));
SELECT ALL * FROM rt0 WHERE (CASE ((('rㆿ'))>((rt0.c0)))  WHEN LENGTH(rt0.c0) THEN CAST(rt0.c1 AS REAL) WHEN rt0.c1 THEN rt0.c2 COLLATE BINARY WHEN (((rt0.c0))<=((rt0.c0))) THEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) END) ORDER BY ((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))AND(x'')))OR(CAST(rt0.c2 AS NUMERIC))))OR(((rt0.c2)-(NULL)))))AND('-1955279641'));
SELECT ALL * FROM rt0, v0, vt0 WHERE ((+ ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((v0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((+ ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((v0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((+ ((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))>>(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))>>(NULL))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))>>(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))>>(NULL))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))>>(NULL)));
SELECT COUNT(*) FROM vt0, v0 WHERE (json_array_length(((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)), (((vt0.c0))==((vt0.c0))))) ORDER BY (((x'aecb', ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), ((v0.c0)&(vt0.c0))))>=(((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((vt0.c0)>=(vt0.c0)), IFNULL(DISTINCT vt0.c0, v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length(((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)), (((vt0.c0))==((vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((x'aecb', ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), ((v0.c0)&(vt0.c0))))>=(((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((vt0.c0)>=(vt0.c0)), IFNULL(DISTINCT vt0.c0, v0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (json_array_length(((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)), (((vt0.c0))==((vt0.c0))))) ORDER BY (((x'aecb', ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), ((v0.c0)&(vt0.c0))))>=(((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((vt0.c0)>=(vt0.c0)), IFNULL(DISTINCT vt0.c0, v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length(((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)), (((vt0.c0))==((vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((x'aecb', ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), ((v0.c0)&(vt0.c0))))>=(((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((vt0.c0)>=(vt0.c0)), IFNULL(DISTINCT vt0.c0, v0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (json_array_length(((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)), (((vt0.c0))==((vt0.c0))))) ORDER BY (((x'aecb', ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), ((v0.c0)&(vt0.c0))))>=(((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((vt0.c0)>=(vt0.c0)), IFNULL(DISTINCT vt0.c0, v0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((v0.c0)AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))) CROSS JOIN rt0 ON CASE ((NULL)&(v0.c0))  WHEN (rt0.c2 IN (v0.c0)) THEN ((x'') ISNULL) END WHERE (UPPER(DISTINCT ((rt0.c0)OR(rt0.c1)))) ORDER BY ((NULLIF(DISTINCT 0.49246664869498347, rt0.c2)) ISNULL), (NOT (NULL));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((rt0.c0)OR(rt0.c1)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((v0.c0)AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))) CROSS JOIN rt0 ON CASE ((NULL)&(v0.c0))  WHEN (rt0.c2 IN (v0.c0)) THEN ((x'') ISNULL) END ORDER BY ((NULLIF(DISTINCT 0.49246664869498347, rt0.c2)) ISNULL), (NOT (NULL)));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((v0.c0)AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))) CROSS JOIN rt0 ON CASE ((NULL)&(v0.c0))  WHEN (rt0.c2 IN (v0.c0)) THEN ((x'') ISNULL) END WHERE (UPPER(DISTINCT ((rt0.c0)OR(rt0.c1)))) ORDER BY ((NULLIF(DISTINCT 0.49246664869498347, rt0.c2)) ISNULL), (NOT (NULL));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((rt0.c0)OR(rt0.c1)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((v0.c0)AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))) CROSS JOIN rt0 ON CASE ((NULL)&(v0.c0))  WHEN (rt0.c2 IN (v0.c0)) THEN ((x'') ISNULL) END ORDER BY ((NULLIF(DISTINCT 0.49246664869498347, rt0.c2)) ISNULL), (NOT (NULL)));
SELECT ALL * FROM rt0, v0, vt0 WHERE (((CASE WHEN rt0.c2 THEN v0.c0 ELSE 0.9279441303325368 END)!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN v0.c0 ELSE 0.9279441303325368 END)!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((CASE WHEN rt0.c2 THEN v0.c0 ELSE 0.9279441303325368 END)!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN v0.c0 ELSE 0.9279441303325368 END)!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((CASE WHEN rt0.c2 THEN v0.c0 ELSE 0.9279441303325368 END)!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT ALL * FROM v0, rt0, vt0 WHERE (rt0.c2 COLLATE BINARY) ORDER BY (((((((((((vt0.c0, rt0.c1, rt0.c1))<=((rt0.c1, '', rt0.c0))))AND(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((vt0.c0) IS TRUE))))OR((+ (vt0.c0)))))OR(CASE ''  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END))  NULLS LAST, 0.8050199310211801 ASC, NULLIF(CASE WHEN x'' THEN rt0.c0 ELSE rt0.c2 END, ((((((((((((rt0.c1)AND(v0.c0)))OR(vt0.c0)))OR(rt0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((((((((((vt0.c0, rt0.c1, rt0.c1))<=((rt0.c1, '', rt0.c0))))AND(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((vt0.c0) IS TRUE))))OR((+ (vt0.c0)))))OR(CASE ''  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END))  NULLS LAST, 0.8050199310211801 ASC, NULLIF(CASE WHEN x'' THEN rt0.c0 ELSE rt0.c2 END, ((((((((((((rt0.c1)AND(v0.c0)))OR(vt0.c0)))OR(rt0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(rt0.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0, vt0 WHERE (rt0.c2 COLLATE BINARY) ORDER BY (((((((((((vt0.c0, rt0.c1, rt0.c1))<=((rt0.c1, '', rt0.c0))))AND(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((vt0.c0) IS TRUE))))OR((+ (vt0.c0)))))OR(CASE ''  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END))  NULLS LAST, 0.8050199310211801 ASC, NULLIF(CASE WHEN x'' THEN rt0.c0 ELSE rt0.c2 END, ((((((((((((rt0.c1)AND(v0.c0)))OR(vt0.c0)))OR(rt0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((((((((((vt0.c0, rt0.c1, rt0.c1))<=((rt0.c1, '', rt0.c0))))AND(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((vt0.c0) IS TRUE))))OR((+ (vt0.c0)))))OR(CASE ''  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END))  NULLS LAST, 0.8050199310211801 ASC, NULLIF(CASE WHEN x'' THEN rt0.c0 ELSE rt0.c2 END, ((((((((((((rt0.c1)AND(v0.c0)))OR(vt0.c0)))OR(rt0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(rt0.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0, vt0 WHERE (rt0.c2 COLLATE BINARY) ORDER BY (((((((((((vt0.c0, rt0.c1, rt0.c1))<=((rt0.c1, '', rt0.c0))))AND(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((vt0.c0) IS TRUE))))OR((+ (vt0.c0)))))OR(CASE ''  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END))  NULLS LAST, 0.8050199310211801 ASC, NULLIF(CASE WHEN x'' THEN rt0.c0 ELSE rt0.c2 END, ((((((((((((rt0.c1)AND(v0.c0)))OR(vt0.c0)))OR(rt0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(rt0.c1))) ASC  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (0.25641957112284053) ORDER BY COALESCE(DISTINCT v0.c0, rt0.c0, rt0.c0, v0.c0) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.25641957112284053) IS TRUE)  as count FROM v0, rt0 ORDER BY COALESCE(DISTINCT v0.c0, rt0.c0, rt0.c0, v0.c0) COLLATE BINARY  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (0.25641957112284053) ORDER BY COALESCE(DISTINCT v0.c0, rt0.c0, rt0.c0, v0.c0) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.25641957112284053) IS TRUE)  as count FROM v0, rt0 ORDER BY COALESCE(DISTINCT v0.c0, rt0.c0, rt0.c0, v0.c0) COLLATE BINARY  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (0.25641957112284053) ORDER BY COALESCE(DISTINCT v0.c0, rt0.c0, rt0.c0, v0.c0) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE ((+ ((rt0.c0 IN ())))) ORDER BY ((CASE NULL  WHEN rt0.c1 THEN rt0.c2 END) ISNULL), rt0.c0 ASC, ((((rt0.c2 COLLATE BINARY)OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE x'' END)))OR((~ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE NULL  WHEN rt0.c1 THEN rt0.c2 END) ISNULL), rt0.c0 ASC, ((((rt0.c2 COLLATE BINARY)OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE x'' END)))OR((~ (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((+ ((rt0.c0 IN ())))) ORDER BY ((CASE NULL  WHEN rt0.c1 THEN rt0.c2 END) ISNULL), rt0.c0 ASC, ((((rt0.c2 COLLATE BINARY)OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE x'' END)))OR((~ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE NULL  WHEN rt0.c1 THEN rt0.c2 END) ISNULL), rt0.c0 ASC, ((((rt0.c2 COLLATE BINARY)OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE x'' END)))OR((~ (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((+ ((rt0.c0 IN ())))) ORDER BY ((CASE NULL  WHEN rt0.c1 THEN rt0.c2 END) ISNULL), rt0.c0 ASC, ((((rt0.c2 COLLATE BINARY)OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE x'' END)))OR((~ (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)AND(vt0.c0))  WHEN vt0.c0 THEN (vt0.c0 IN ()) ELSE ((vt0.c0)-(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)AND(vt0.c0))  WHEN vt0.c0 THEN (vt0.c0 IN ()) ELSE ((vt0.c0)-(vt0.c0)) END) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)AND(vt0.c0))  WHEN vt0.c0 THEN (vt0.c0 IN ()) ELSE ((vt0.c0)-(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)AND(vt0.c0))  WHEN vt0.c0 THEN (vt0.c0 IN ()) ELSE ((vt0.c0)-(vt0.c0)) END) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)AND(vt0.c0))  WHEN vt0.c0 THEN (vt0.c0 IN ()) ELSE ((vt0.c0)-(vt0.c0)) END);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON NULL FULL OUTER JOIN rt0 ON ((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ()) WHERE (NULL) ORDER BY ((vt0.c0) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON NULL FULL OUTER JOIN rt0 ON ((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ()) ORDER BY ((vt0.c0) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c1) NOT NULL))));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON NULL FULL OUTER JOIN rt0 ON ((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ()) WHERE (NULL) ORDER BY ((vt0.c0) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON NULL FULL OUTER JOIN rt0 ON ((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ()) ORDER BY ((vt0.c0) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c1) NOT NULL))));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON NULL FULL OUTER JOIN rt0 ON ((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ()) WHERE (NULL) ORDER BY ((vt0.c0) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c1) NOT NULL)));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (LIKELIHOOD(((v0.c0) IS FALSE), 0.07387168234465535));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((v0.c0) IS FALSE), 0.07387168234465535)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (LIKELIHOOD(((v0.c0) IS FALSE), 0.07387168234465535));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((v0.c0) IS FALSE), 0.07387168234465535)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (LIKELIHOOD(((v0.c0) IS FALSE), 0.07387168234465535));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, rt0.c2)) AND ((v0.c0, '763606997', rt0.c2)))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((rt0.c1) ISNULL))) INNER JOIN v0 ON ((((rt0.c1)>=(rt0.c2)))%((~ (rt0.c2)))) WHERE (((((CAST(v0.c0 AS BLOB))OR(((rt0.c2)GLOB(rt0.c0)))))AND((((rt0.c1))==((v0.c0)))))) ORDER BY -9.79882502E8 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS BLOB))OR(((rt0.c2)GLOB(rt0.c0)))))AND((((rt0.c1))=((v0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, rt0.c2)) AND ((v0.c0, '763606997', rt0.c2)))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((rt0.c1) ISNULL))) INNER JOIN v0 ON ((((rt0.c1)>=(rt0.c2)))%((~ (rt0.c2)))) ORDER BY -9.79882502E8 DESC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, rt0.c2)) AND ((v0.c0, '763606997', rt0.c2)))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((rt0.c1) ISNULL))) INNER JOIN v0 ON ((((rt0.c1)>=(rt0.c2)))%((~ (rt0.c2)))) WHERE (((((CAST(v0.c0 AS BLOB))OR(((rt0.c2)GLOB(rt0.c0)))))AND((((rt0.c1))==((v0.c0)))))) ORDER BY -9.79882502E8 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS BLOB))OR(((rt0.c2)GLOB(rt0.c0)))))AND((((rt0.c1))=((v0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, rt0.c2)) AND ((v0.c0, '763606997', rt0.c2)))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((rt0.c1) ISNULL))) INNER JOIN v0 ON ((((rt0.c1)>=(rt0.c2)))%((~ (rt0.c2)))) ORDER BY -9.79882502E8 DESC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, rt0.c2)) AND ((v0.c0, '763606997', rt0.c2)))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((rt0.c1) ISNULL))) INNER JOIN v0 ON ((((rt0.c1)>=(rt0.c2)))%((~ (rt0.c2)))) WHERE (((((CAST(v0.c0 AS BLOB))OR(((rt0.c2)GLOB(rt0.c0)))))AND((((rt0.c1))==((v0.c0)))))) ORDER BY -9.79882502E8 DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY((vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY((vt0.c0 IN (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY((vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY((vt0.c0 IN (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY((vt0.c0 IN (vt0.c0))));
SELECT ALL * FROM v0 WHERE ((((((v0.c0))>=((v0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))>=((v0.c0)))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0))>=((v0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))>=((v0.c0)))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0))>=((v0.c0)))) NOT NULL));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ()));
SELECT * FROM rt0 WHERE ((NOT (rt0.c0 COLLATE BINARY))) ORDER BY CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY DESC);
SELECT * FROM rt0 WHERE ((NOT (rt0.c0 COLLATE BINARY))) ORDER BY CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY DESC);
SELECT * FROM rt0 WHERE ((NOT (rt0.c0 COLLATE BINARY))) ORDER BY CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS REAL)) ORDER BY rt0.c2  NULLS FIRST, (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 END IN (rt0.c0, CASE -1511478287  WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END))  NULLS LAST, CASE WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN SQLITE_COMPILEOPTION_USED(rt0.c2) ELSE rt0.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY rt0.c2  NULLS FIRST, (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 END IN (rt0.c0, CASE -1511478287  WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END))  NULLS LAST, CASE WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN SQLITE_COMPILEOPTION_USED(rt0.c2) ELSE rt0.c0 COLLATE NOCASE END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS REAL)) ORDER BY rt0.c2  NULLS FIRST, (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 END IN (rt0.c0, CASE -1511478287  WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END))  NULLS LAST, CASE WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN SQLITE_COMPILEOPTION_USED(rt0.c2) ELSE rt0.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY rt0.c2  NULLS FIRST, (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 END IN (rt0.c0, CASE -1511478287  WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END))  NULLS LAST, CASE WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN SQLITE_COMPILEOPTION_USED(rt0.c2) ELSE rt0.c0 COLLATE NOCASE END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS REAL)) ORDER BY rt0.c2  NULLS FIRST, (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 END IN (rt0.c0, CASE -1511478287  WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END))  NULLS LAST, CASE WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN SQLITE_COMPILEOPTION_USED(rt0.c2) ELSE rt0.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((- (vt0.c0))) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((- (vt0.c0))) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((- (vt0.c0))) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL)) ORDER BY HEX(DISTINCT (((vt0.c0))==((vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT (((vt0.c0))=((vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL)) ORDER BY HEX(DISTINCT (((vt0.c0))==((vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT (((vt0.c0))=((vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL)) ORDER BY HEX(DISTINCT (((vt0.c0))==((vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0) IS TRUE)) IS TRUE)) ORDER BY (((- (0.8805328393005718)))-(x'')), TRIM((- (rt0.c1)), CAST(rt0.c1 AS BLOB))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM v0 NOT INDEXED, rt0 ORDER BY (((- (0.8805328393005718)))-(x'')), TRIM((- (rt0.c1)), CAST(rt0.c1 AS BLOB))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0) IS TRUE)) IS TRUE)) ORDER BY (((- (0.8805328393005718)))-(x'')), TRIM((- (rt0.c1)), CAST(rt0.c1 AS BLOB))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM v0 NOT INDEXED, rt0 ORDER BY (((- (0.8805328393005718)))-(x'')), TRIM((- (rt0.c1)), CAST(rt0.c1 AS BLOB))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0) IS TRUE)) IS TRUE)) ORDER BY (((- (0.8805328393005718)))-(x'')), TRIM((- (rt0.c1)), CAST(rt0.c1 AS BLOB))  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((+ (((v0.c0)OR(rt0.c0))))) ORDER BY (((('264464246')) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ()) ASC, ((NULL)<>(((((((((v0.c0)AND('FVW~')))AND(v0.c0)))OR(v0.c0)))AND(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0)OR(rt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((('264464246')) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ()) ASC, ((NULL)!=(((((((((v0.c0)AND('FVW~')))AND(v0.c0)))OR(v0.c0)))AND(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((+ (((v0.c0)OR(rt0.c0))))) ORDER BY (((('264464246')) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ()) ASC, ((NULL)<>(((((((((v0.c0)AND('FVW~')))AND(v0.c0)))OR(v0.c0)))AND(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0)OR(rt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((('264464246')) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ()) ASC, ((NULL)!=(((((((((v0.c0)AND('FVW~')))AND(v0.c0)))OR(v0.c0)))AND(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((+ (((v0.c0)OR(rt0.c0))))) ORDER BY (((('264464246')) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ()) ASC, ((NULL)<>(((((((((v0.c0)AND('FVW~')))AND(v0.c0)))OR(v0.c0)))AND(rt0.c1))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((+ (LENGTH(vt0.c0)))) ORDER BY ((((vt0.c0)>=(vt0.c0))) NOTNULL) DESC, ((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)IS((x'' IN ()))) ASC, (ABS(-1729546183) IN (((((NULL)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (LENGTH(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>=(vt0.c0))) NOTNULL) DESC, ((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)IS((x'' IN ()))) ASC, (ABS(-1729546183) IN (((((NULL)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) IS FALSE))) ASC);
SELECT ALL * FROM vt0 WHERE ((+ (LENGTH(vt0.c0)))) ORDER BY ((((vt0.c0)>=(vt0.c0))) NOTNULL) DESC, ((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)IS((x'' IN ()))) ASC, (ABS(-1729546183) IN (((((NULL)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (LENGTH(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>=(vt0.c0))) NOTNULL) DESC, ((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)IS((x'' IN ()))) ASC, (ABS(-1729546183) IN (((((NULL)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) IS FALSE))) ASC);
SELECT ALL * FROM vt0 WHERE ((+ (LENGTH(vt0.c0)))) ORDER BY ((((vt0.c0)>=(vt0.c0))) NOTNULL) DESC, ((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)IS((x'' IN ()))) ASC, (ABS(-1729546183) IN (((((NULL)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) IS FALSE))) ASC;
SELECT ALL * FROM vt0, v0 WHERE (CAST(((v0.c0)=(v0.c0)) AS INTEGER)) ORDER BY ((vt0.c0)|(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)=(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0)|(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (CAST(((v0.c0)=(v0.c0)) AS INTEGER)) ORDER BY ((vt0.c0)|(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)=(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0)|(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (CAST(((v0.c0)=(v0.c0)) AS INTEGER)) ORDER BY ((vt0.c0)|(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN (rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS TEXT) IN (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN (rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS TEXT) IN (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN (rt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)IS NOT(rt0.c2)))AND(CAST(rt0.c0 AS NUMERIC))))AND(((rt0.c1)/(vt0.c0)))) LEFT OUTER JOIN rt0 ON CAST((((vt0.c0, vt0.c0, rt0.c0)) BETWEEN ((0Xffffffffa7c939c6, vt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c0, v0.c0))) AS INTEGER) WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END) NOT NULL)) ORDER BY ((x'')-((NOT (rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)IS NOT(rt0.c2)))AND(CAST(rt0.c0 AS NUMERIC))))AND(((rt0.c1)/(vt0.c0)))) LEFT OUTER JOIN rt0 ON CAST((((vt0.c0, vt0.c0, rt0.c0)) BETWEEN ((0xffffffffa7c939c6, vt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c0, v0.c0))) AS INTEGER) ORDER BY ((x'')-((NOT (rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)IS NOT(rt0.c2)))AND(CAST(rt0.c0 AS NUMERIC))))AND(((rt0.c1)/(vt0.c0)))) LEFT OUTER JOIN rt0 ON CAST((((vt0.c0, vt0.c0, rt0.c0)) BETWEEN ((0Xffffffffa7c939c6, vt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c0, v0.c0))) AS INTEGER) WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END) NOT NULL)) ORDER BY ((x'')-((NOT (rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)IS NOT(rt0.c2)))AND(CAST(rt0.c0 AS NUMERIC))))AND(((rt0.c1)/(vt0.c0)))) LEFT OUTER JOIN rt0 ON CAST((((vt0.c0, vt0.c0, rt0.c0)) BETWEEN ((0xffffffffa7c939c6, vt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c0, v0.c0))) AS INTEGER) ORDER BY ((x'')-((NOT (rt0.c0)))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c2))<((rt0.c2)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<((rt0.c2)))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2))<((rt0.c2)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<((rt0.c2)))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2))<((rt0.c2)))) NOTNULL));
SELECT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))LIKE(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))LIKE(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))LIKE(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))LIKE(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))LIKE(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((x'')OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))+('<86fE')));
SELECT SUM(count) FROM (SELECT ((((((((((((x'')OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))+('<86fE'))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((x'')OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))+('<86fE')));
SELECT SUM(count) FROM (SELECT ((((((((((((x'')OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))+('<86fE'))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((x'')OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))+('<86fE')));
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c1))<=((rt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c1))<=((rt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c0))) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c1))<=((rt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c1))<=((rt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c0))) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c1))<=((rt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c0))) AS BLOB));
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((x'') BETWEEN (rt0.c0) AND (0.8826066846237681))) BETWEEN ((((rt0.c2, rt0.c1, rt0.c1))<((rt0.c0, rt0.c1, rt0.c0)))) AND ('')));
SELECT SUM(count) FROM (SELECT ((((((x'') BETWEEN (rt0.c0) AND (0.8826066846237681))) BETWEEN ((((rt0.c2, rt0.c1, rt0.c1))<((rt0.c0, rt0.c1, rt0.c0)))) AND (''))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((x'') BETWEEN (rt0.c0) AND (0.8826066846237681))) BETWEEN ((((rt0.c2, rt0.c1, rt0.c1))<((rt0.c0, rt0.c1, rt0.c0)))) AND ('')));
SELECT SUM(count) FROM (SELECT ((((((x'') BETWEEN (rt0.c0) AND (0.8826066846237681))) BETWEEN ((((rt0.c2, rt0.c1, rt0.c1))<((rt0.c0, rt0.c1, rt0.c0)))) AND (''))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((x'') BETWEEN (rt0.c0) AND (0.8826066846237681))) BETWEEN ((((rt0.c2, rt0.c1, rt0.c1))<((rt0.c0, rt0.c1, rt0.c0)))) AND ('')));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE CAST(rt0.c2 AS BLOB)  WHEN ((vt0.c0) NOT NULL) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((vt0.c0) NOT NULL) THEN (+ (vt0.c0)) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN rt0.c1 WHEN rt0.c0 THEN (((rt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1))) WHEN rt0.c0 THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1) IS FALSE) THEN (((vt0.c0))<>((rt0.c2))) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))) THEN (~ (rt0.c1)) ELSE NULL END WHERE (((LENGTH(rt0.c1)) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((NOT (rt0.c2))))) ORDER BY ((((rt0.c0) IS TRUE)) BETWEEN (((rt0.c1) ISNULL)) AND (rt0.c2 COLLATE NOCASE))  NULLS FIRST, ((((rt0.c2)IS NOT(vt0.c0))) BETWEEN (rt0.c2 COLLATE BINARY) AND (rt0.c1 COLLATE RTRIM))  NULLS FIRST, '-2104413188';
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(rt0.c1)) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((NOT (rt0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE CAST(rt0.c2 AS BLOB)  WHEN ((vt0.c0) NOT NULL) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((vt0.c0) NOT NULL) THEN (+ (vt0.c0)) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN rt0.c1 WHEN rt0.c0 THEN (((rt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1))) WHEN rt0.c0 THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1) IS FALSE) THEN (((vt0.c0))<>((rt0.c2))) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))) THEN (~ (rt0.c1)) ELSE NULL END ORDER BY ((((rt0.c0) IS TRUE)) BETWEEN (((rt0.c1) ISNULL)) AND (rt0.c2 COLLATE NOCASE))  NULLS FIRST, ((((rt0.c2)IS NOT(vt0.c0))) BETWEEN (rt0.c2 COLLATE BINARY) AND (rt0.c1 COLLATE RTRIM))  NULLS FIRST, '-2104413188');
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE CAST(rt0.c2 AS BLOB)  WHEN ((vt0.c0) NOT NULL) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((vt0.c0) NOT NULL) THEN (+ (vt0.c0)) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN rt0.c1 WHEN rt0.c0 THEN (((rt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1))) WHEN rt0.c0 THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1) IS FALSE) THEN (((vt0.c0))<>((rt0.c2))) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))) THEN (~ (rt0.c1)) ELSE NULL END WHERE (((LENGTH(rt0.c1)) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((NOT (rt0.c2))))) ORDER BY ((((rt0.c0) IS TRUE)) BETWEEN (((rt0.c1) ISNULL)) AND (rt0.c2 COLLATE NOCASE))  NULLS FIRST, ((((rt0.c2)IS NOT(vt0.c0))) BETWEEN (rt0.c2 COLLATE BINARY) AND (rt0.c1 COLLATE RTRIM))  NULLS FIRST, '-2104413188';
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(rt0.c1)) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((NOT (rt0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE CAST(rt0.c2 AS BLOB)  WHEN ((vt0.c0) NOT NULL) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((vt0.c0) NOT NULL) THEN (+ (vt0.c0)) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN rt0.c1 WHEN rt0.c0 THEN (((rt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1))) WHEN rt0.c0 THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1) IS FALSE) THEN (((vt0.c0))<>((rt0.c2))) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))) THEN (~ (rt0.c1)) ELSE NULL END ORDER BY ((((rt0.c0) IS TRUE)) BETWEEN (((rt0.c1) ISNULL)) AND (rt0.c2 COLLATE NOCASE))  NULLS FIRST, ((((rt0.c2)IS NOT(vt0.c0))) BETWEEN (rt0.c2 COLLATE BINARY) AND (rt0.c1 COLLATE RTRIM))  NULLS FIRST, '-2104413188');
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE CAST(rt0.c2 AS BLOB)  WHEN ((vt0.c0) NOT NULL) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((vt0.c0) NOT NULL) THEN (+ (vt0.c0)) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN rt0.c1 WHEN rt0.c0 THEN (((rt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1))) WHEN rt0.c0 THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1) IS FALSE) THEN (((vt0.c0))<>((rt0.c2))) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))) THEN (~ (rt0.c1)) ELSE NULL END WHERE (((LENGTH(rt0.c1)) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((NOT (rt0.c2))))) ORDER BY ((((rt0.c0) IS TRUE)) BETWEEN (((rt0.c1) ISNULL)) AND (rt0.c2 COLLATE NOCASE))  NULLS FIRST, ((((rt0.c2)IS NOT(vt0.c0))) BETWEEN (rt0.c2 COLLATE BINARY) AND (rt0.c1 COLLATE RTRIM))  NULLS FIRST, '-2104413188';
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN (vt0.c0) AND (1545766574)) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN (vt0.c0) AND (1545766574)) DESC);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN (vt0.c0) AND (1545766574)) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN (vt0.c0) AND (1545766574)) DESC);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN (vt0.c0) AND (1545766574)) DESC;
SELECT ALL * FROM vt0 WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN v0 WHERE ((((rt0.c0, 0.39644254881492436, vt0.c0)) NOT BETWEEN ((((rt0.c2)IS NOT(vt0.c0)), (+ (x'')), ((rt0.c1)-(vt0.c0)))) AND ((CASE rt0.c2  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, (rt0.c2 IN ()), x'83da'))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, 0.39644254881492436, vt0.c0)) NOT BETWEEN ((((rt0.c2)IS NOT(vt0.c0)), (+ (x'')), ((rt0.c1)-(vt0.c0)))) AND ((CASE rt0.c2  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, (rt0.c2 IN ()), x'83da')))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN v0 WHERE ((((rt0.c0, 0.39644254881492436, vt0.c0)) NOT BETWEEN ((((rt0.c2)IS NOT(vt0.c0)), (+ (x'')), ((rt0.c1)-(vt0.c0)))) AND ((CASE rt0.c2  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, (rt0.c2 IN ()), x'83da'))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, 0.39644254881492436, vt0.c0)) NOT BETWEEN ((((rt0.c2)IS NOT(vt0.c0)), (+ (x'')), ((rt0.c1)-(vt0.c0)))) AND ((CASE rt0.c2  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, (rt0.c2 IN ()), x'83da')))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN v0 WHERE ((((rt0.c0, 0.39644254881492436, vt0.c0)) NOT BETWEEN ((((rt0.c2)IS NOT(vt0.c0)), (+ (x'')), ((rt0.c1)-(vt0.c0)))) AND ((CASE rt0.c2  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, (rt0.c2 IN ()), x'83da'))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((+ (v0.c0))) NOTNULL)) ORDER BY (('' IN (vt0.c0)) IN (CAST(rt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (('' IN (vt0.c0)) IN (CAST(rt0.c1 AS INTEGER)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((+ (v0.c0))) NOTNULL)) ORDER BY (('' IN (vt0.c0)) IN (CAST(rt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (('' IN (vt0.c0)) IN (CAST(rt0.c1 AS INTEGER)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((+ (v0.c0))) NOTNULL)) ORDER BY (('' IN (vt0.c0)) IN (CAST(rt0.c1 AS INTEGER)))  NULLS FIRST;
