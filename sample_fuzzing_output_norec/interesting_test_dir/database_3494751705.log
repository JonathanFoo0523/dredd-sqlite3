-- Time: 2024/06/09 10:20:46
-- Database: database5
-- Database version: 3.40.0
-- seed value: 3494751705
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 6ms;
COMMIT TRANSACTION; -- 7ms;
UPDATE OR FAIL rt0 SET c0=642493704 WHERE rt0.c0; -- 5ms;
UPDATE OR IGNORE rt0 SET c1=x''; -- 0ms;
REINDEX  rt0; -- 3ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR ABORT rt0 SET (c2, c1)=(0X264bad08, 642493704); -- 4ms;
INSERT OR ROLLBACK INTO rt0(c0, c1) VALUES (x'bba6', -1442948643); -- 7ms;
UPDATE OR IGNORE rt0 SET (c0)=(0xffffffff9ef4912e); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('-1628139218'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0 VALUES (NULL, 0.24898446333906898, ''); -- 0ms;
INSERT OR FAIL INTO rt0(c0) VALUES (''); -- 7ms;
UPDATE rt0 SET c0=0.4369887366827888; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=NULL WHERE x'f6ed'; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(0.7090584423051518); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, , columnsize=1); -- 0ms;
UPDATE OR REPLACE rt0 SET c2=0.8183768688694272; -- 2ms;
UPDATE OR IGNORE rt0 SET c2=x'8dc3' WHERE ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) IS FALSE); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=-1628139218 WHERE (((+ (rt0.c2))) IS TRUE); -- 0ms;
UPDATE rt0 SET c1=0x5e298e3c; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0Xffffffff818ff00c WHERE (((((0xffffffff95c06c28)) NOT BETWEEN ((0.7090584423051518)) AND ((rt0.c0)))) NOT NULL); -- 11ms;
VACUUM main; -- 1ms;
UPDATE OR IGNORE rt0 SET c0=NULL WHERE UNLIKELY(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 8ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '64694'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE vt0 SET (c0)=(x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.175938039245098), (0.24898446333906898), (x'4ff1'); -- 0ms;
REINDEX; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('8lh') BETWEEN ('0.4369887366827888') AND (0.20930009815326123)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-558552208 2 sz=-558552208 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2121273332 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-558552208 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '642493704 sz=-2121273332 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-159564692 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.4739435267363743) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 4ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'') NOT BETWEEN (0.6650582215713061) AND ('䡖ᛎdWn6#')) IN ()); -- 9ms;
DELETE FROM sqlite_stat1 WHERE load_extension(((0.02587105984427085)!=('-460651550')), HEX(DISTINCT 0.6876065812089567)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '155360707 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(NULL COLLATE NOCASE, ((0.20930009815326123) BETWEEN (x'') AND (0.8433974842661657))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (QUOTE(0X5e7f8e36))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 1254639702 sz=-2091124689'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.24898446333906898; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '577590569 unordered'); -- 23ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1638581765 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-238676184 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1502630471 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2136450668 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) IS FALSE) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2121273332'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.7907671074521356 THEN x'' END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1978306246)) NOT BETWEEN ((((x'') IS TRUE))) AND (((((('1312399498')AND(NULL)))AND('8lh'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ (-159564692)) THEN ((0.5255932955271666) IS FALSE) ELSE CAST(NULL AS INTEGER) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1767446210'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(x'')))OR(''))) BETWEEN (HEX(NULL)) AND (CASE WHEN '642493704' THEN '8lh' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-558552208 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(1784257372))) NOT BETWEEN (((NULL) BETWEEN (NULL) AND (''))) AND (json('-1812023231'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1502630471 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD((~ (0.4091687012992733)), 0.7402417073327843); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1978306246 -1985603890 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-558552208 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert(CAST(x'e832' AS INTEGER), ((-4.6065155E8) ISNULL), (((NULL, '-2121273332', 0.2850933794023408)) NOT BETWEEN ((0.6230715002626298, 0.8440824187867746, x'')) AND ((0.8506320655026254, 0.23893734968615077, '1528286263')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=891988046'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=585400418'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 sz=731993476 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0.09856423263342284)))|(HEX(DISTINCT x'973f'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (((NULL IN ()))) AND ((UPPER(0.9248336597704501)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('YVWM)~EQ') IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.9378593723686679 IN ()))>>(((NULL) BETWEEN ('i8h&7<') AND (0.05768598721596785)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS NUMERIC) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('䡖ᛎdwn6#')<=((((0.24095707553065504, 0.1212665921849082, '-2130535762')) BETWEEN ((NULL, 'C', x'')) AND ((NULL, '1954818161', NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((('-379646287')OR(x'')))AND('8lh')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('166020738')<<(5.77590569E8)))!=(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '1667213849 sz=-1628139218 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)/(x'')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1954818161 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'6528')/(NULL)) THEN LIKE(1473550156, x'', '&') WHEN '1978306246' THEN ((x'')%(0Xffffffff9e5539fb)) WHEN CASE 0.4091687012992733  WHEN NULL THEN -1028670325 WHEN x'' THEN 1.312399498E9 WHEN x'' THEN x'' WHEN x'' THEN 0Xffffffffbe0a8863 WHEN NULL THEN 0.9643344681470049 ELSE 1.312399498E9 END THEN x'' COLLATE NOCASE ELSE DATE(0.5611639228914042, 'K*J[', -1.106605981E9) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1510459201 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1462212648 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1312399498 sz=1335057635 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-1342852788 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-273184123 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN (-2099625916) AND (((((x'')OR(NULL)))AND(x'e90a')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1689137098 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '2 sz=1254639702 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1412283495 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1265255539 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=1848554200 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(UPPER(x'') AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=87881073'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1106605981'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-1317027988 sz=-1689137098 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE INSTR('0.7090584423051518', x'466f'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2091124689 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1120762759 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(126642806 AS TEXT))); -- 1ms;
DELETE FROM sqlite_stat1; -- 11ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '1932482446 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-159564692 sz=431574691'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1343872584 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'63f5')) BETWEEN ((CAST('yvwm)~eq' AS REAL))) AND ((0.47166204669558076 COLLATE NOCASE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '64901315 sz=-379646287 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2091124689 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 unordered'); -- 7ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NULL IN ('391728626')))AND((+ ('')))))AND((((('')AND(0.0613534427126573)))AND(x'')))))OR(((NULL) NOT BETWEEN ('_<') AND ('J\rH')))))AND(((((0.7680897200138416)OR(NULL)))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER((((x'')) BETWEEN ((NULL)) AND ((NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ''  WHEN CASE WHEN -1806615981 THEN 0.7090584423051518 WHEN 0.16334936823908885 THEN x'' WHEN NULL THEN NULL ELSE '1784257372' END THEN -1.782551512E9 WHEN (NOT ('')) THEN CASE WHEN x'c5ab' THEN NULL ELSE '1120762759' END WHEN 0.5394276451981684 THEN (0.5095130569835232 IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0.5229060554892482 IN ()) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1229531851 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1198163586 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'3e87') NOT NULL) THEN CASE 0x352aa84e  WHEN 0.488854727842012 THEN NULL WHEN 1120762759 THEN NULL WHEN 0Xffffffff9a0f9272 THEN x'' WHEN '879262035' THEN x'' WHEN '731993476' THEN NULL END ELSE (((((((((((('')AND(x'5b2d1fd3')))AND('4K\nNf?8E(')))AND(0.6708313491690608)))AND(NULL)))AND('1948158581')))AND(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(0Xffffffffd2f6a948 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1242527696 sz=109114371'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=-1352869590 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('-1028670325')<>('')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=335859617 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(DISTINCT 1986072169, NULL)) NOT BETWEEN ((((('YDI%2cU4')AND('197757321')))OR(0.5127196613570318))) AND (UNLIKELY(DISTINCT ''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1343872584'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=391728626 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(SUBSTR(x'', NULL) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1229531851 unordered'); -- 14ms;
DELETE FROM sqlite_stat1 WHERE CASE (((((((('')AND(x'')))OR(x'')))AND('')))OR(x''))  WHEN (('\r+	7(i\r\r?')%(NULL)) THEN (NOT (x'')) ELSE (((1.667213849E9)) BETWEEN ((x'1e78')) AND (('RG/&'))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER((('-1104852777')IS NOT(x''))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1613933386 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1373735495' IN ('-17789156', '\ngOl'))) IS TRUE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1361440044 unordered noskipscan'); -- 9ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN 0.01861366423490174 ELSE NULL END) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'9542') NOT NULL)) NOT BETWEEN (CASE WHEN 1.97757321E8 THEN 0.31805958503993026 WHEN 0.45471890185959163 THEN x'' WHEN x'' THEN x'' ELSE 0.5127196613570318 END) AND ((('1986072169')+('y8>v,')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1184713647'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0Xfffffffffd056e05 THEN '0.4739435267363743' END) NOT BETWEEN ((((NULL)) NOT BETWEEN ((1373735495)) AND ((x'')))) AND (('-306338857' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1106605981'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '423611577 sz=-1656408805 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('鄮L')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((((NULL) ISNULL))) AND ((('1' IN (x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1516286221 -1826675390 sz=-637556999 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_type((((('2r|j◈2!')OR(x'1661')))OR('?{ZA'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE NULL  WHEN NULL THEN 0.599349662750622 WHEN 0.7955745114270173 THEN 0x5b17cc37 WHEN '-379646287' THEN NULL END IN (CAST(NULL AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 7ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.3238632696182837 AS TEXT) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(DISTINCT '\r+	7(i\r\r?', NULL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1596351705'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1458036792'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1986072169 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1021322325 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2021987381 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=731993476'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((0.35721904723778264)) AND (((('TRUE') NOT BETWEEN (x'') AND (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=2063868523 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-306338857 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=943382664 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '791876414 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x''))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1929818696 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=663181408 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-625790651 292233199 sz=1639937670 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-130324029 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS TRUE); -- 1ms;
DELETE FROM sqlite_stat1 WHERE INSTR((- (NULL)), ((-61470711) BETWEEN (NULL) AND (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=391728626 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.5154724004670523)!=(0X73df7c04)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=130022247 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((2.92233199E8)<<(NULL)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.812023231E9) BETWEEN (NULL) AND (0xffffffffbfb33199))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1516286221 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1358742217 1929933548 sz=-1104852777 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(0X17594df2 AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 17ms;
DELETE FROM sqlite_stat1 WHERE json_insert(CASE WHEN x'' THEN '{' ELSE '-37330635' END, CAST(0.5479670904417873 AS REAL), CASE '126642806'  WHEN 0.09856423263342284 THEN 0.514179715692778 ELSE '-816214558' END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X21713cb6 IN (0Xffffffffe95f0eb1, 0.2703314157714247))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '511113193 sz=769397295 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=130949948'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL))) BETWEEN ((('ob')IS NOT(x''))) AND ((('1639937670')-('2076454009')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((+ (x'fdbb')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2136450668 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') IS FALSE) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1749112588'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x''))>((x''))))AND((((('pE䔖#l%V')OR(x'')))OR(1.613933386E9)))))AND(('Cg' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1.028670325E9; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1104852777 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-839123634 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-558552208 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1731713516 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=453413076'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1959988265'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('')AND(0.27116480662524656)))OR(NULL)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(NULL AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)*(NULL)))-(NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-637556999 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (-440553614 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 9ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('126642806' COLLATE NOCASE)OR('335859617' COLLATE NOCASE)))AND(x'' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1.944026116E9)AND('\n ꏗtKReB铬')))OR(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1710057760 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-609611019 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1667213849 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-690297421') ISNULL))<=(NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=335859617 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2080743711 sz=728331480'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1948158581 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1254639702 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND((x'' IN ()))))OR(0.4616899124756457 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'Ck'; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT ('k')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 -2050642447 sz=-1831744300'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1021322325 noskipscan'); -- 10ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=937134413 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1888520831 4 sz=256929368 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=2063868523 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1108063879 -1761140044 sz=1717885384 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=827355483 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1.355214425E9) ISNULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(0.25242453231364226))|((+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE RTRIM IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=948631866 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.4202885324969333) BETWEEN (-1.82667539E9) AND (x'')))AND((((''))=(('1120762759'))))))AND((((('598978071')OR(NULL)))OR(NULL)))))OR(((((NULL)AND('')))OR('W/7')))))OR((((('lw}C5-{4')AND('-230244201')))OR(0.5602792754617842)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)/(NULL))) BETWEEN (((x'06ce')/('Z>T~9utmB'))) AND (CAST('1335057635' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1740240517 2 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1009742876 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.4305986837800443)<(NULL))  WHEN (((NULL)) NOT BETWEEN (('-304986611')) AND (('-1806615981'))) THEN ((((NULL)AND(x'')))AND('(''')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT NULL)) BETWEEN ((((x'eaeb'))>((x'')))) AND (UNLIKELY(NULL))); -- 6ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=197757321 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8330922935974225, 0.05768598721596785, '-1394137394')) BETWEEN ((((-1993280226)!=(NULL)), 0.35721904723778264, x'd60c')) AND ((((0.8393471506388134) NOT NULL), ((NULL)&(6.42493704E8)), CASE WHEN 0.6185746445909195 THEN 0.9197100721723122 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((0.9527729056893566)OR(NULL)))OR(' Jt')))AND(x'')))OR(-350170865)) AS BLOB); -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN (x'') AND (x''))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1104852777 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS NUMERIC) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=585400418'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 sz=-1342852788 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5630834035231963 IN ())) NOT BETWEEN ('0.8506320655026254') AND ((('335859617') NOT BETWEEN (0.8910996617007181) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(((('-0E9', '1566959520', NULL)) NOT BETWEEN (('0.7680897200138416', '', 0xffffffff82da4044)) AND (('	Oi', '1e500', x'b39e'))), 0.758697544790712); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=84101761 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (ABS(x'') IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1244557091 unordered noskipscan'); -- 12ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('' AS NUMERIC) THEN ((NULL) NOTNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1456880051 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (NULL) AND ('-1403942205'))) NOT BETWEEN (TRIM(DISTINCT '%Dw²[et黛/')) AND (CAST(NULL AS INTEGER))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=436576109'); -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1815727638 sz=629647577'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL))%(((x'1e87c0dc') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-49975803'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1321144632'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=248163718 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '621283003 sz=642493704'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1954818161 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-427777486 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-845617018'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-115071544 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=610864953'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2121273332 unordered noskipscan'); -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-313844947 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '109114371' THEN 0.2288530129072882 WHEN NULL THEN x'' WHEN 0x7cc00860 THEN 0.7500607622608606 WHEN -460651550 THEN 0x60ad1db4 WHEN '^/녌	*f' THEN x'b0f5' ELSE 0.1399977703630818 END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((((((601847258)OR('1965256331')))OR('-932188499')))OR(x'')))AND(x'')) THEN ((0.28320867415332573) IS TRUE) ELSE ((((NULL)OR(NULL)))OR(0x18e92706)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 7ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=406660648'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-1001755172 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN ('JY6퍁ȿj行6') AND (0.6754696171278011)))*(((NULL) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1458036792 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=431574691'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 66757635 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-189317441 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1826675390'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.03837736479052267 COLLATE RTRIM AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=197757321 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((((((('-130324029')OR('	oi')))AND(NULL)))OR(x'1508')))OR(0.09140361733062052)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF(x''))%((('') NOT BETWEEN (0.2607950883386754) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1767446210 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(1.528286263E9 COLLATE RTRIM AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=1578884452 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1845845072 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1229531851 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((NOT ('431574691')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=207596421 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (LENGTH(0.040180030121860444))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1412283495') NOT BETWEEN (0.95557755500305) AND (0.5479670904417873)))AND(x'')))AND(CAST(0Xffffffffcce92f9d AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-816214558') NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xffffffff8408cf48)) BETWEEN ((NULL COLLATE NOCASE)) AND ((NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((391728626) BETWEEN (x'') AND ('2r|j◈2!')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1985603890 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0X23ff7c7c COLLATE BINARY IN (((-1.442948643E9)||(NULL)), ((0.4032582818418139)LIKE(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=987584300 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0X78851435)AND(NULL)))AND('J\rH')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '2 sz=-755586744 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ('ob' IN (989366764)) THEN 0.05146384644351654 COLLATE BINARY ELSE CASE WHEN NULL THEN '64901315' END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((((((x'')AND('YDI%2cU4')))OR(NULL)))) AND (((x'' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-1812023231 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xfffffffff9453980)AND(((NULL)OR(NULL)))))AND(((0.5479670904417873)LIKE(0.9913526213866353)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '64901315 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('r' AS INTEGER)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1373735495'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-2130535762' AS BLOB))<=(CASE '_\nLr'  WHEN '?U' THEN '16553593' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 8ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1062923850 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=604744633 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-716130023 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-971807728'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (-860005315) AND ('O&Osq亣b'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT BETWEEN (NULL) AND ((('-1412283495') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-17789156 sz=-771545741 unordered noskipscan'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE LOWER((('')=('-1e500'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')OR(0.2289205166020647)))AND(0X5973c37c)))<((x'90ec' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1361440044'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.34192202231618607)OR(((((NULL)OR(NULL)))AND('-429510')))))OR(-1761691757)))OR(((0.3439771600617165)<(NULL)))))AND(CAST('䡖ᛎdWn6#' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1342044219 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('-1242527696')/('0.6754696171278011')) THEN (('-174267430')AND(NULL)) ELSE ((('-846102550'))<((0.77284315578774))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-444147643'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1767446210 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-625790651' COLLATE NOCASE) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2130535762'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN highlight('0.77284315578774', 0.33246785715649363, '-1034978385', '-1412283495') THEN CAST(NULL AS NUMERIC) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=-510884164'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1473550156 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1913244156'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-159564692'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=155360707 noskipscan'); -- 10ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1028670325'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1374137726'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=121243347 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '1830650233 0 sz=1120762759'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1959649818 sz=1335057635 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1336734524 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '174246660 sz=-1049194350 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((1e500)AND(x'a764')) THEN '%-2gblTT[*]' COLLATE BINARY WHEN CAST(0.701325073316386 AS TEXT) THEN CAST(x'' AS INTEGER) WHEN 'ꡎ' THEN ((0.3105505915866953) NOTNULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1985603890 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'3ebb'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('7 yvskg~ጾ') BETWEEN (NULL) AND ('-660259375')))<<(((NULL)GLOB(0Xffffffff9850786f)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 2 sz=-158169946 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN -1.502630471E9 THEN '' END) NOT BETWEEN (0.34740406213783215) AND (LIKELY(DISTINCT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2021987381 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1613933386 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB(NULL COLLATE BINARY, (~ ('141429370'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1317027988 sz=908636597 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-29333545 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('U-i蠰?(') ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '64901315 -1988829735 sz=-1027708621 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.34861927988251296))!=((x''))))IS NOT((((0.19343911848649376, '퀬V', x'5f36')) NOT BETWEEN ((x'', 0.013983138244602067, x'')) AND ((x'', -1490857381, ' s'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'3dc3') BETWEEN (0.14301550678729824) AND (1423497184)))<<(TRIM(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.77284315578774)IS NOT('1590663227'))) NOT BETWEEN (NULL) AND ((('0i_[N]D)') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.0526033244813926)LIKE(x'519e')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1656408805 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-2091124689'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=126642806'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6875347932857707; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=-1949542621 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER((((1456214611, x'd1b7', NULL, x'', '292233199'))>=(('', -733735381, x'bc53', NULL, NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1280072387 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '4 sz=1586074333'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '639361840 1596351705 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'572c8c7f')AND('1735353984')))OR(0.7374261430084931)))|(CASE WHEN '675620148' THEN 0.1859848390933062 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1929818696 sz=1065302129 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=31604362'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2021987381 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS TRUE) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE)) NOT BETWEEN ((('	Oi') NOTNULL)) AND ((((NULL)) NOT BETWEEN ((x'')) AND (('ꡎ'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-77592488 sz=-1021322325 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NOT (x'')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-225580669 1596351705 sz=-735830690 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=-558552208'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=-2130535762 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1954818161 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1108430082 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('-1028670325' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKE(0.01141310687691044, 'dg	꫞%ჯu')) NOT BETWEEN ((NOT ('M''	u'))) AND ('V\nN/p')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LIKELY('*ﱀR}q') AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL COLLATE RTRIM)AND(CASE 0.19929001289284665  WHEN -1.412283495E9 THEN 'bs' ELSE NULL END)))AND(LOWER(DISTINCT 'ES'))))OR(((0.8279114788897854)OR(NULL)))))OR(0.18539917580291854)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=751892509'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1318046560 1462212648 sz=1'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL)) BETWEEN ((('0.95557755500305')GLOB(0Xffffffffe258886c))) AND (((x'382d8378')IS(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'f9d1')!=(NULL)) COLLATE RTRIM; -- 16ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=472441505 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NOT ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1192704066'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY)=(((0.5156569121325145)>>(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1235052783 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('277554626')AND(NULL)))OR('-1826675390')))OR(0.03837736479052267)))AND(0.9324610023377611))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 sz=383314249 noskipscan'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1579781692 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((''))>(((((((((('423611577')AND(x'')))OR(0.48259461669119763)))OR(x'')))OR('0.0'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1 sz=2103490702'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'' COLLATE BINARY)OR((0.5682023340219682 IN ()))))AND(NULLIF(NULL, '1613933386'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('肳p')||(NULL))) NOT NULL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.5089424983783212 COLLATE BINARY) BETWEEN (CAST(-1021322325 AS TEXT)) AND (((('肳p', x'5abb2bd5', '-1628139218'))>=(('9B', x'', x'83e6'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1955704002 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1710255502 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-522481959 unordered noskipscan'); -- 6ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('-630229875')<(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=319194641 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)>(NULL)))AND((- (NULL)))))AND(((NULL)<=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1093435999 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('U/')) NOT BETWEEN ((x'')) AND (('-1442948643'))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((' s') NOT BETWEEN (0.5630834035231963) AND ('-17789156'))) NOT BETWEEN ((((0Xffffffff931f2542, 0.4631244824700116, NULL))<((NULL, 0.5310866437161401, '2')))) AND ('}R).H1q')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (load_extension(0.8433974842661657, NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2021987381 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7582972297853421)) BETWEEN (('')) AND ((LIKELY(DISTINCT x'74e6')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')+(NULL))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-273184123 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-783508374 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1768579600'); -- 9ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x383ae088)LIKE(NULL)))/(((0x5b17cc37) NOT BETWEEN ('') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x53be980d)%('1014840922')) IN (((NULL) IS FALSE), CAST(x'' AS REAL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.0526033244813926)OR(0X6ce80f73)))OR(NULL)))AND(((NULL) NOT BETWEEN (0.970263433447608) AND (NULL)))))AND((('1585417782') NOT BETWEEN (x'1b89') AND (x'c9ad')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7311645918919454) ISNULL)) BETWEEN (('-0.0' IN ())) AND (CASE WHEN NULL THEN 0.01861366423490174 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5210138161975155)<<(NULL))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-1798808940'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-624569201'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-557962658 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '943382664 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 0 sz=-1555652290 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(CASE -6.37556999E8  WHEN '-1826675390' THEN 0.6703568569528119 END, CASE NULL  WHEN x'' THEN NULL WHEN x'' THEN x'1ae6' WHEN '' THEN -542163631 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 2 sz=1978306246 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(0.3360525703197119, 0X288f660f)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=431574691'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (''))) BETWEEN ('-1794066285' COLLATE RTRIM) AND (((0.060917763335124886) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-755586744'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.670435537316963))!=((x'a25c'))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')AND(x'')))OR(NULL)))GLOB(((NULL) NOT BETWEEN (-191178140) AND (x'')))); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-729163710'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '379621242 sz=274147350 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', 0.19493996576600037, x'82a2')) BETWEEN ((((0.9052689169020665) NOT BETWEEN ('') AND ('-17789156')), CASE x'9793'  WHEN x'9520' THEN 0.25070802640788437 END, ((0.9997484273534087)AND(0.9272493784180043)))) AND ((CAST('' AS NUMERIC), ((NULL) BETWEEN (x'') AND (NULL)), (((NULL))<=((0xffffffffdfb6b154)))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((' 롁DZ\raX')AND(NULL)))AND('-631754684'))  WHEN ((0.31805958503993026) BETWEEN (NULL) AND (0.8157357427333649)) THEN (('0.7680897200138416')<=(-1.7976931348623157E308)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE RTRIM IN ()); -- 10ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1102786948 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((')鷃')AND('155360707')))OR(NULL)))OR(LIKELY(DISTINCT x''))))OR(NULL COLLATE RTRIM)))AND(0.9560983133040549)))AND(((x'') NOT BETWEEN (0.22186360343876443) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '354349465 sz=671637783'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '1283370924 sz=-1929818696 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('', '-1106605981', -1.806615981E9)) BETWEEN (('', '197757321', 0.9999542190295058)) AND ((NULL, '0.9527729056893566', 'e{0J'))) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.6708137301005961 IN (TRIM(x'', NULL), ((NULL) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-441056570 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN (((('') NOT BETWEEN (NULL) AND (x'')))) AND ((x'd5136035' COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('C')==(('812036553' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1887743567 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0X16a0322e)LIKE((NULL IN (1.585417782E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<('')))-((((x'', '''pJq%E1', '497615448')) NOT BETWEEN ((x'', x'3578', 'FALSE')) AND ((0xffffffffea4185d8, 'D', x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NOT (0.468233837745865)))OR((('7tESK(x w')>>(0X7f69e38a)))))OR(('0.2703314157714247' IN ()))))AND((('') NOTNULL))))OR(CAST(x'' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-18109321 sz=1932482446 noskipscan'); -- 8ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(CASE WHEN '-1049700205' THEN x'9ebf' ELSE NULL END, ((x'')<=(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') IS FALSE)) BETWEEN (((((64901315)AND(0.09199342333174954)))OR(x''))) AND ((('')<=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY(0.918282061114136, ((0Xfffffffff76c0fe0)*('')), ((0.14301550678729824)AND('-1e500'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')AND('1450532653')) AS TEXT); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-2086594252 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1490978551'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'E擦'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2000789318'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1094137934')-(1188673010)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=2063868523 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'a4e7'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=122453644'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffff8af3780a COLLATE NOCASE)AND(CAST(NULL AS TEXT))))AND((('v~zP') NOT BETWEEN ('') AND (0.7206985271982077)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN '' THEN 0.4503921175794251 ELSE x'24d2' END AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('7NO{')) BETWEEN ((-7.55586744E8)) AND ((0.0613534427126573))))>(((0.24898446333906898) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=991049122 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')AND(0.028457300138742703)))OR(809188716))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-641872770 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-956825164'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '1312399498 sz=-1021322325 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('ꡎ') NOTNULL)) NOT BETWEEN (((NULL) NOTNULL)) AND ((('')<<(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2099625916 -1963480365 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((~ (x''))))>=(((('1986072169') NOTNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1985894214 -954589289 1503232220 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((NULL)AND(NULL)))OR(0X63a47861)))AND(0.07299979420969216)))AND(')Nw/<읁W')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1663839882 1363671410 sz=1462212648'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ())) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(json_array_length('DZU', x'926f')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '525168186 632079224 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'')GLOB(x''))  WHEN CAST('1978306246' AS BLOB) THEN ((-1985603890)!=('o5')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((0.4739435267363743)OR(NULL)))OR('-49975803'))  WHEN CAST('%^' AS TEXT) THEN (NOT (x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(-2099625916 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-273184123 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=780669854 unordered noskipscan'); -- 8ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-130324029'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((((((-1071899164)AND(0.9891498353475581)))AND(x'')))OR(NULL)))OR(x'9404'))  WHEN CAST(0.9324610023377611 AS TEXT) THEN LIKELIHOOD(NULL, 0.46074207369669185) ELSE CAST(NULL AS TEXT) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1714162033 0 sz=-10163266'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, 0.24898446333906898, NULL))<(('', 0.3260592192188607, '()')))) NOT BETWEEN ('-87401226' COLLATE RTRIM) AND ((~ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.8649516991333197)) NOT BETWEEN ((0.45471890185959163)) AND ((x'9102'))))|((- (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-845957185 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-1106605981'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT (((NULL))>=((x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.9378593723686679') NOT BETWEEN ((((-569422469)) NOT BETWEEN ((x'6b4e')) AND (('159631522')))) AND (NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE INSTR(((x'') IS TRUE), '663181408' COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-774291078 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)AND('-1628139218')))AND(NULL)))AND((((('+~')OR(x'1ba3')))OR('-379646287')))))AND(((1510459201) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '24529977 sz=-586810448'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2030465511 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-651442219 sz=1472242921'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN x'20e8' THEN '' ELSE 0.8841502072038799 END, CAST(0.6912064216975258 AS TEXT), CASE 0.273991887611024  WHEN '-816001459' THEN -398902404 END, (((0xffffffff8d1e5735))<>((x''))), ((NULL) BETWEEN (0.16709358133086638) AND (-1.689137098E9)), (((0.757441528301027, '1784257372', 0.9885172347570835)) BETWEEN ((x'db37', x'', '-721662100')) AND (('1944026116', x'afe2', NULL))), 1312399498 COLLATE RTRIM))=(((0.7992721562251743 IN ()), -1.028670325E9, CAST(0X264bad08 AS BLOB), CASE NULL  WHEN 0.8510851297490342 THEN NULL END, CASE 'M'  WHEN -1.265255539E9 THEN NULL WHEN 'X' THEN x'' WHEN 4.23611577E8 THEN NULL ELSE 0.847663602812329 END, ((NULL)GLOB(NULL)), CHAR(x'91f9')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(CAST(x'12b2' AS NUMERIC)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=209330044 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (HEX(x'') IN (CASE 1.355214425E9  WHEN '335859617' THEN '9223372036854775807' WHEN 8.79262035E8 THEN '0.2607950883386754' WHEN x'' THEN NULL END, ('1746440892' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 11ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=505015446'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (0xffffffff81029aae)))AND(ABS('\r?.aX'))))AND(-1.812023231E9 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=130022247'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=2041536140'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1299970996 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=130022247 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)IS(((NULL) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1120762759 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2110364890 1687328991 sz=-586271818 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '885259549 0 -2074292200 sz=1974650011'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '695058807 sz=-1115680865 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1646969148')) BETWEEN ((0.2607950883386754)) AND ((x'f5b0'))))%(((x'')%(x'3901')))); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-292441308 0 sz=-1843652843 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 0 sz=-542425372 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' IN ()) IN (((-1056737949) BETWEEN ('') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('1613933386') NOT BETWEEN ('Sr') AND ('-149267088')))); -- 14ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'b713') NOT BETWEEN ((('2089056383')OR('5'))) AND (((0.75231585827082)LIKE(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.47529817652656003 COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-2110573299'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 11ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1680989277 sz=1405853242'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM('-1352869590' COLLATE BINARY, ((NULL) NOTNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1180382246'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')+(x''))) BETWEEN ((('')>=(''))) AND (CAST('-1184713647' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-245085136') NOT BETWEEN (NULL) AND (NULL))) NOT BETWEEN (CAST('n()>' AS BLOB)) AND (((0X9429dc3) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9773547859645705; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1319232262 sz=642493704 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-937493115 2 sz=1543520856'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1904811629 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=5235681 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-65849299 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.45671427697225675) BETWEEN (0.06250536891801983) AND ('꓇s|WO2*X8'))  WHEN (+ (NULL)) THEN ((('n'))>((x''))) ELSE (((0.5504146669720128)) BETWEEN ((x'')) AND ((0.743093004965866))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1130216148 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 391728626; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1511635315'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=326334960 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '701127514 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')+('뛋MA%jBP'))) BETWEEN (((x'') IS FALSE)) AND (((x'') BETWEEN (NULL) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') BETWEEN ('Os+槃mOhz') AND (NULL))  WHEN (~ (0.3469954565115897)) THEN ('-1309453937' IN (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-342912274'; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0Xfffffffff92425c8 THEN ((x'') NOT BETWEEN ('v}r6W킧Gi') AND (x'c19d')) WHEN HEX(DISTINCT NULL) THEN (NULL IN ()) WHEN (NULL IN ('(e\AXruu')) THEN ((0.2607950883386754)%(NULL)) ELSE (('1510459201')%(0Xffffffffba062adf)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((~ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '46\nPe]' THEN '' WHEN x'' THEN '-1782551512' WHEN 0.5859238884055799 THEN 0.33246785715649363 ELSE '' END) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-1028670325 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE 'CcEs츰jY'  WHEN 0x78851435 THEN 1986072169 WHEN 0.08137751547749705 THEN 7.31993476E8 WHEN '-1317027988' THEN NULL WHEN 'ha6*C1P' THEN 0.36895028264523766 WHEN x'' THEN x'' ELSE 0.19929001289284665 END))<((CAST(x'717a' AS NUMERIC)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0X272bb2d8)<(0.5895673343133118)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, 1.55360707E8, '-1352869590', -4806638, NULL)) BETWEEN ((0Xffffffff818ff00c, '挦䍶S(FR', x'7210', x'', NULL)) AND (('-1121641939', NULL, NULL, '', x'1ca8')))) BETWEEN (0xbc98989 COLLATE BINARY) AND (CASE WHEN 0.35125865559610836 THEN '0.25242453231364226' ELSE 0.38686091642279286 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'8152')) NOT BETWEEN (('O')) AND ((NULL))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(0X1fbc8682 AS INTEGER))OR(HEX(DISTINCT '-1106605981'))))AND(-8.16214558E8 COLLATE NOCASE)))AND(0.7992154304542313 COLLATE NOCASE)))OR(CASE WHEN x'' THEN NULL ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=2087040376 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((0.24361971171583174, NULL, '1579781692'))!=(('pI', 0.9413897175768843, 0.2850933794023408)))  WHEN (~ (-1.30324029E8)) THEN TYPEOF(NULL) ELSE ((1209174697)<<(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((('155360707')AND(NULL)))AND('-1675882066')))OR(x'')))OR('4k\nnf?8e(')))AND((('1978306246') BETWEEN (NULL) AND (-1.35286959E9)))))OR((('-1915868530')+(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')GLOB(x''))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0X741e8a75 COLLATE NOCASE  WHEN ((((1.09114371E8)AND(1984125768)))AND('372586726')) THEN CASE WHEN 0.8183768688694272 THEN 2083615061 WHEN x'c8d4' THEN -1623939121 WHEN 0.8999393638910684 THEN NULL WHEN '슦ꥈ䤥l뙑~' THEN x'' WHEN 0.29013423972041763 THEN 0.7672846263647983 ELSE 61807555 END WHEN TYPEOF(DISTINCT '1343872584') THEN CASE WHEN NULL THEN -1.15071544E8 END WHEN ('1960016167' IN ()) THEN ((('-61470711')) NOT BETWEEN ((7.91876414E8)) AND (('蛭ibFퟱ0'))) END; -- 8ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1978306246'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1896111383 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1697501688)*(NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1639937670'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-764848615 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1470094707 -1352869590 sz=-1985603890 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((101862412 IN ()))>>((x'' IN ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-1502630471 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.9243897286975932) NOT BETWEEN ('') AND (-1.7976931348623157E308)))AND(CASE WHEN NULL THEN '清ḟ' WHEN '%TEq扛' THEN 'J<覉r?p-DU' WHEN x'' THEN NULL ELSE 0.5156569121325145 END)))OR((((((((('yjfPv')OR(x'fce5')))OR(1230953600)))AND(x'')))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-704822959 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1982404733'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-361642089 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1833147561'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-294809975 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1849820815 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE TRIM(CASE WHEN x'd5a2' THEN NULL WHEN x'88d5' THEN x'5d05' WHEN '0.9643344681470049' THEN '585400418' ELSE x'' END, 0.1825365162016125); -- 26ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '2 sz=1871117044 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1844330676 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(x'')))OR(x'9318')))&(((x'') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL, '', NULL, NULL, x''))<=(('1585417782', NULL, x'', '0i_[N]D)', x''))))OR((('-583075763') NOT BETWEEN ('1ເ') AND (NULL)))))OR(((NULL) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS INTEGER))OR((('')%(0x6084fbac)))))AND(CAST('' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('CDis|+c鍩') NOTNULL))||(((0.7090584423051518)IS('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('-2125590403' AS INTEGER), x'7349' COLLATE BINARY, '-854212724' COLLATE NOCASE))==((0.47728857160939964 COLLATE BINARY, CASE WHEN '1983252263' THEN 0.8669899676455554 WHEN x'' THEN '#b' WHEN x'' THEN 0X75ea8ec6 ELSE '-2130535762' END, ((((x'd119')OR('-1096686986')))OR(0.2393200631024679))))); -- 10ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1458036792 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'7f50' COLLATE BINARY)>=(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1669033856 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LTRIM(0.892218239473851)) BETWEEN ('-1656408805') AND (CASE NULL  WHEN 0.7125062910076334 THEN x'' WHEN NULL THEN '1373735495' WHEN NULL THEN x'' WHEN NULL THEN 0.08703010925974652 WHEN x'' THEN 'N\' ELSE 292233199 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(NULL, 0.5598488944769348)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1757642264)AND(0xffffffffa9fe59dd)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.3238632696182837 IN (NULL)) IN ()); -- 8ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1178317324 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 197757321 THEN x'' WHEN NULL THEN '1215794834' WHEN NULL THEN 1361440044 END) NOT BETWEEN (((('-378007540', NULL, x'', x'', 0Xffffffffbc53036b, NULL, 0xffffffffa8218049)) BETWEEN ((0.3334641509776234, 0.5630834035231963, 'A ', NULL, 642493704, NULL, 0.14546619881045175)) AND ((NULL, '?0', 'E-?q', '787435793', '-869676902', NULL, 'Qc}S0e4Pi')))) AND (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X7bceb33c; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=313763498 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=791876414'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-976957022 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1812023231 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE)) NOTNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=456520892 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1667449746')) BETWEEN ((ABS(NULL))) AND ((CASE x'c2b1'  WHEN '	.3(F' THEN NULL END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(0x3ad9fd3) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('-273184123')))|((NOT (x'')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2121273332 sz=625317588 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((('')AND(x'6188')))AND(-1.59564692E8))  WHEN CASE WHEN x'8807' THEN 1.978306246E9 END THEN CASE WHEN NULL THEN x'' ELSE x'' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-831172602 sz=1700725078'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1='jQcv뮍Jf', c1=-828548421 WHERE 0X6455e7ea; -- 5ms;
DROP TABLE IF EXISTS rt0; -- 9ms;
INSERT INTO vt0(vt0) VALUES('automerge=13'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ANALYZE vt0; -- 13ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=('-1962739460', 1387600063, x'314d') WHERE TYPEOF(DISTINCT ((vt0.c0)IS(vt0.c0))); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (''); -- 0ms;
REINDEX; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.18539917580291854); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(-1073090158) WHERE HEX(vt0.c0) COLLATE BINARY; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(NULL) WHERE vt0.c0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 146316616); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('663181408'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 5); -- 9ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (596262165); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (x''); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(69934161) WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))>=(((vt0.c0) IS FALSE))); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('4K\nNF?8E('); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL); -- 1ms;
BEGIN  TRANSACTION; -- 6ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '41197'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1026765081); -- 0ms;
UPDATE OR ABORT vt0 SET (c0, c0)=(0.36394758517057724, 0.8890025286598254); -- 17ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (1596351705); -- 0ms;
REINDEX; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR ABORT vt0 SET c0='OJS<'; -- 9ms;
UPDATE OR REPLACE vt0 SET c0=x'', c0=0X75ea8ec6 WHERE ((((vt0.c0)GLOB(vt0.c0))) ISNULL); -- 2ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 10ms;
UPDATE OR ABORT vt0 SET c0=0.3973342266994757, c0=x'72cb8929' WHERE vt0.c0; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (1.473550156E9); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0xffffffffa63ab598); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('0.701325073316386'), (0.3439771600617165), (((((((NULL)) NOT BETWEEN ((NULL)) AND ((0.33524476382706225)))))=(((((((((('869638763')OR(NULL)))AND('-1929818696')))OR('9B')))OR('166020738')))))); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''), (NULL), (0.28391838709018136), (NULL), ('399086202'); -- 1ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))>(((((vt0.c0))=((vt0.c0)))))); -- 12ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 5ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='1022736338' WHERE (vt0.c0 COLLATE RTRIM IN ()); -- 0ms;
UPDATE OR REPLACE vt0 SET c0='1335057635'; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 731993476);\n; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHANGES() COLLATE BINARY; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-888063648'); -- 0ms;
END; -- 5ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x'51db'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'', c0='-2136450668', c0=x'686e' WHERE TRIM(CAST(vt0.c0 AS TEXT)); -- 1ms;
ROLLBACK TRANSACTION; -- 8ms;
END; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)>>(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)>>(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)>>(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((((((vt0.c0)OR(vt0.c0)))OR(x''))))) DESC  NULLS FIRST, ((vt0.c0)<>(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((((((vt0.c0)OR(vt0.c0)))OR(x''))))) DESC  NULLS FIRST, ((vt0.c0)!=(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST, vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((((((vt0.c0)OR(vt0.c0)))OR(x''))))) DESC  NULLS FIRST, ((vt0.c0)<>(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((((((vt0.c0)OR(vt0.c0)))OR(x''))))) DESC  NULLS FIRST, ((vt0.c0)!=(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST, vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((((((vt0.c0)OR(vt0.c0)))OR(x''))))) DESC  NULLS FIRST, ((vt0.c0)<>(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)||(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)||(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)||(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)||(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)||(((vt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (x'')) DESC, CAST((vt0.c0 IN ()) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (x'')) DESC, CAST((vt0.c0 IN ()) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (x'')) DESC, CAST((vt0.c0 IN ()) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (x'')) DESC, CAST((vt0.c0 IN ()) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (x'')) DESC, CAST((vt0.c0 IN ()) AS TEXT) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 IN ()), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))))==(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(vt0.c0 AS REAL), 0.37888131192640406)))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (((vt0.c0)|(vt0.c0))))  NULLS FIRST, ((vt0.c0 COLLATE BINARY) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN ()), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))))=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(vt0.c0 AS REAL), 0.37888131192640406)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (((vt0.c0)|(vt0.c0))))  NULLS FIRST, ((vt0.c0 COLLATE BINARY) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 IN ()), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))))==(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(vt0.c0 AS REAL), 0.37888131192640406)))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (((vt0.c0)|(vt0.c0))))  NULLS FIRST, ((vt0.c0 COLLATE BINARY) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN ()), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))))=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(vt0.c0 AS REAL), 0.37888131192640406)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (((vt0.c0)|(vt0.c0))))  NULLS FIRST, ((vt0.c0 COLLATE BINARY) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 IN ()), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))))==(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(vt0.c0 AS REAL), 0.37888131192640406)))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (((vt0.c0)|(vt0.c0))))  NULLS FIRST, ((vt0.c0 COLLATE BINARY) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0)) DESC;
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((CASE WHEN 9.43382664E8 THEN NULL ELSE vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN 9.43382664E8 THEN NULL ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((CASE WHEN 9.43382664E8 THEN NULL ELSE vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN 9.43382664E8 THEN NULL ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((CASE WHEN 9.43382664E8 THEN NULL ELSE vt0.c0 END IN ()));
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))LIKE(((vt0.c0) NOT NULL)))) ORDER BY ((CAST(vt0.c0 AS REAL)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))LIKE(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL)) NOT NULL));
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))LIKE(((vt0.c0) NOT NULL)))) ORDER BY ((CAST(vt0.c0 AS REAL)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))LIKE(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL)) NOT NULL));
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))LIKE(((vt0.c0) NOT NULL)))) ORDER BY ((CAST(vt0.c0 AS REAL)) NOT NULL);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS INTEGER)))) ORDER BY JULIANDAY(vt0.c0 COLLATE RTRIM, LIKELIHOOD(vt0.c0, 0.774033192515312), (vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY JULIANDAY(vt0.c0 COLLATE RTRIM, LIKELIHOOD(vt0.c0, 0.774033192515312), (vt0.c0 IN ())));
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS INTEGER)))) ORDER BY JULIANDAY(vt0.c0 COLLATE RTRIM, LIKELIHOOD(vt0.c0, 0.774033192515312), (vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY JULIANDAY(vt0.c0 COLLATE RTRIM, LIKELIHOOD(vt0.c0, 0.774033192515312), (vt0.c0 IN ())));
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS INTEGER)))) ORDER BY JULIANDAY(vt0.c0 COLLATE RTRIM, LIKELIHOOD(vt0.c0, 0.774033192515312), (vt0.c0 IN ()));
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0)||(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((vt0.c0)||(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0)||(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((vt0.c0)||(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0)||(vt0.c0))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((('-784442566'))!=((vt0.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((('-784442566'))<>((vt0.c0 COLLATE BINARY)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((('-784442566'))!=((vt0.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((('-784442566'))<>((vt0.c0 COLLATE BINARY)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((('-784442566'))!=((vt0.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((NULL)OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND(vt0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((NULL)OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND(vt0.c0 COLLATE RTRIM)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((NULL)OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND(vt0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((NULL)OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND(vt0.c0 COLLATE RTRIM)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((NULL)OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND(vt0.c0 COLLATE RTRIM)) DESC;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE) COLLATE NOCASE COLLATE NOCASE) ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN ((- (0x23ff906a))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN ((- (0x23ff906a))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE) COLLATE NOCASE COLLATE NOCASE) ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN ((- (0x23ff906a))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN ((- (0x23ff906a))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE) COLLATE NOCASE COLLATE NOCASE) ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN ((- (0x23ff906a))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN '1458036792' THEN vt0.c0 ELSE vt0.c0 END AS REAL)) ORDER BY (((- (vt0.c0)))<<(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN '1458036792' THEN vt0.c0 ELSE vt0.c0 END AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))<<(vt0.c0)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN '1458036792' THEN vt0.c0 ELSE vt0.c0 END AS REAL)) ORDER BY (((- (vt0.c0)))<<(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN '1458036792' THEN vt0.c0 ELSE vt0.c0 END AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))<<(vt0.c0)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN '1458036792' THEN vt0.c0 ELSE vt0.c0 END AS REAL)) ORDER BY (((- (vt0.c0)))<<(vt0.c0)) ASC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY ((((vt0.c0)<>(vt0.c0)))GLOB(((vt0.c0) IS TRUE))), x'', (((((vt0.c0)AND(vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<>(vt0.c0)))GLOB(((vt0.c0) IS TRUE))), x'', (((((vt0.c0)AND(vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) DESC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY ((((vt0.c0)<>(vt0.c0)))GLOB(((vt0.c0) IS TRUE))), x'', (((((vt0.c0)AND(vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<>(vt0.c0)))GLOB(((vt0.c0) IS TRUE))), x'', (((((vt0.c0)AND(vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) DESC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY ((((vt0.c0)<>(vt0.c0)))GLOB(((vt0.c0) IS TRUE))), x'', (((((vt0.c0)AND(vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) DESC;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)||(((((((((x'')AND(vt0.c0)))AND(vt0.c0)))OR(NULL)))OR(vt0.c0))))) ORDER BY (CASE WHEN vt0.c0 THEN 0.19439550960808294 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)||(((((((((x'')AND(vt0.c0)))AND(vt0.c0)))OR(NULL)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN vt0.c0 THEN 0.19439550960808294 END IN ()));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)||(((((((((x'')AND(vt0.c0)))AND(vt0.c0)))OR(NULL)))OR(vt0.c0))))) ORDER BY (CASE WHEN vt0.c0 THEN 0.19439550960808294 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)||(((((((((x'')AND(vt0.c0)))AND(vt0.c0)))OR(NULL)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN vt0.c0 THEN 0.19439550960808294 END IN ()));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)||(((((((((x'')AND(vt0.c0)))AND(vt0.c0)))OR(NULL)))OR(vt0.c0))))) ORDER BY (CASE WHEN vt0.c0 THEN 0.19439550960808294 END IN ());
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (((vt0.c0)-(vt0.c0)))));
SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, 0.2720269712104225, vt0.c0)))))) ORDER BY ((1.596351705E9) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0)<=(0.31805958503993026)))) ASC  NULLS LAST, ((LIKELY(vt0.c0))-(TRIM(vt0.c0, vt0.c0))) ASC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 END)>=(CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, 0.2720269712104225, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((1.596351705E9) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0)<=(0.31805958503993026)))) ASC  NULLS LAST, ((LIKELY(vt0.c0))-(TRIM(vt0.c0, vt0.c0))) ASC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 END)>=(CAST(vt0.c0 AS INTEGER))));
SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, 0.2720269712104225, vt0.c0)))))) ORDER BY ((1.596351705E9) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0)<=(0.31805958503993026)))) ASC  NULLS LAST, ((LIKELY(vt0.c0))-(TRIM(vt0.c0, vt0.c0))) ASC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 END)>=(CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, 0.2720269712104225, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((1.596351705E9) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0)<=(0.31805958503993026)))) ASC  NULLS LAST, ((LIKELY(vt0.c0))-(TRIM(vt0.c0, vt0.c0))) ASC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 END)>=(CAST(vt0.c0 AS INTEGER))));
SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, 0.2720269712104225, vt0.c0)))))) ORDER BY ((1.596351705E9) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0)<=(0.31805958503993026)))) ASC  NULLS LAST, ((LIKELY(vt0.c0))-(TRIM(vt0.c0, vt0.c0))) ASC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 END)>=(CAST(vt0.c0 AS INTEGER)));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)<<(vt0.c0))  WHEN vt0.c0 THEN ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)<<(vt0.c0))  WHEN vt0.c0 THEN ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)<<(vt0.c0))  WHEN vt0.c0 THEN ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)<<(vt0.c0))  WHEN vt0.c0 THEN ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)<<(vt0.c0))  WHEN vt0.c0 THEN ((vt0.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (((vt0.c0)+(vt0.c0))) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (((vt0.c0)+(vt0.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (((vt0.c0)+(vt0.c0))) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (((vt0.c0)+(vt0.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (((vt0.c0)+(vt0.c0))) AND ((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (x'') AND (((vt0.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (x'') AND (((vt0.c0) IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (x'') AND (((vt0.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (x'') AND (((vt0.c0) IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (x'') AND (((vt0.c0) IS TRUE)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE 0.8506320655026254  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((0.5921691514511288) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN ())))) ORDER BY ((CASE vt0.c0  WHEN '-1265255539' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.8506320655026254  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((0.5921691514511288) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN '-1265255539' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE 0.8506320655026254  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((0.5921691514511288) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN ())))) ORDER BY ((CASE vt0.c0  WHEN '-1265255539' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.8506320655026254  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((0.5921691514511288) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN '-1265255539' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE 0.8506320655026254  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((0.5921691514511288) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN ())))) ORDER BY ((CASE vt0.c0  WHEN '-1265255539' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))>=((vt0.c0)))) ORDER BY ((((vt0.c0)+('-1974220195'))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE BINARY))>=((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)+('-1974220195'))) IS TRUE) ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))>=((vt0.c0)))) ORDER BY ((((vt0.c0)+('-1974220195'))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE BINARY))>=((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)+('-1974220195'))) IS TRUE) ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))>=((vt0.c0)))) ORDER BY ((((vt0.c0)+('-1974220195'))) IS TRUE) ASC;
SELECT ALL * FROM vt0 WHERE (0.805640183361639);
SELECT SUM(count) FROM (SELECT ((0.805640183361639) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.805640183361639);
SELECT SUM(count) FROM (SELECT ((0.805640183361639) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.805640183361639);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS NOT(((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS NOT(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS NOT(((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS NOT(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))IS NOT(((vt0.c0)/(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ ('')) COLLATE RTRIM) ORDER BY DATETIME(((vt0.c0) IS FALSE), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE BINARY, (((vt0.c0))!=((vt0.c0))), (((('596017319')OR(vt0.c0)))OR(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ('')) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY DATETIME(((vt0.c0) IS FALSE), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE BINARY, (((vt0.c0))<>((vt0.c0))), (((('596017319')OR(vt0.c0)))OR(vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ ('')) COLLATE RTRIM) ORDER BY DATETIME(((vt0.c0) IS FALSE), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE BINARY, (((vt0.c0))!=((vt0.c0))), (((('596017319')OR(vt0.c0)))OR(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ('')) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY DATETIME(((vt0.c0) IS FALSE), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE BINARY, (((vt0.c0))<>((vt0.c0))), (((('596017319')OR(vt0.c0)))OR(vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ ('')) COLLATE RTRIM) ORDER BY DATETIME(((vt0.c0) IS FALSE), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE BINARY, (((vt0.c0))!=((vt0.c0))), (((('596017319')OR(vt0.c0)))OR(vt0.c0))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)>>(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0 IN ())) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0 IN ())) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0 IN ())) ISNULL)  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((vt0.c0)>(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(NULL AS NUMERIC)) AND (vt0.c0))  NULLS FIRST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)>(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(NULL AS NUMERIC)) AND (vt0.c0))  NULLS FIRST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL));
SELECT * FROM vt0 WHERE (((((((vt0.c0)>(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(NULL AS NUMERIC)) AND (vt0.c0))  NULLS FIRST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)>(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(NULL AS NUMERIC)) AND (vt0.c0))  NULLS FIRST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL));
SELECT * FROM vt0 WHERE (((((((vt0.c0)>(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(NULL AS NUMERIC)) AND (vt0.c0))  NULLS FIRST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL);
SELECT * FROM vt0 WHERE ((NOT (((vt0.c0)|(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((vt0.c0) IS TRUE)))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((vt0.c0) IS TRUE)))) DESC);
SELECT * FROM vt0 WHERE ((NOT (((vt0.c0)|(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((vt0.c0) IS TRUE)))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((vt0.c0) IS TRUE)))) DESC);
SELECT * FROM vt0 WHERE ((NOT (((vt0.c0)|(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((vt0.c0) IS TRUE)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (NOT (1.528286263E9)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (NOT (1.528286263E9)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (NOT (1.528286263E9)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (NOT (1.528286263E9)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (NOT (1.528286263E9)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0))) NOT NULL)) ORDER BY ((((vt0.c0)>=(vt0.c0)))||((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>=(vt0.c0)))||((vt0.c0 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0))) NOT NULL)) ORDER BY ((((vt0.c0)>=(vt0.c0)))||((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>=(vt0.c0)))||((vt0.c0 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0))) NOT NULL)) ORDER BY ((((vt0.c0)>=(vt0.c0)))||((vt0.c0 IN ())))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)>=('!Jg?u5Eu'))) ORDER BY ((HEX('~Ky6')) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)>=('!Jg?u5Eu'))) IS TRUE)  as count FROM vt0 ORDER BY ((HEX('~Ky6')) NOTNULL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)>=('!Jg?u5Eu'))) ORDER BY ((HEX('~Ky6')) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)>=('!Jg?u5Eu'))) IS TRUE)  as count FROM vt0 ORDER BY ((HEX('~Ky6')) NOTNULL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)>=('!Jg?u5Eu'))) ORDER BY ((HEX('~Ky6')) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOTNULL)) ORDER BY '' DESC, ((vt0.c0)*(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY '' DESC, ((vt0.c0)*(NULL)));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOTNULL)) ORDER BY '' DESC, ((vt0.c0)*(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY '' DESC, ((vt0.c0)*(NULL)));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOTNULL)) ORDER BY '' DESC, ((vt0.c0)*(NULL));
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) ISNULL)  WHEN (+ (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE 642493704 END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) ISNULL)  WHEN (+ (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE 642493704 END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) ISNULL)  WHEN (+ (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE 642493704 END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) ISNULL)  WHEN (+ (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE 642493704 END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) ISNULL)  WHEN (+ (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE 642493704 END);
SELECT * FROM vt0 WHERE (((']')<=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((']')<=(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((']')<=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((']')<=(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((']')<=(vt0.c0)));
SELECT ALL * FROM vt0 WHERE (CASE UNLIKELY(DISTINCT vt0.c0)  WHEN TYPEOF(DISTINCT vt0.c0) THEN vt0.c0 ELSE vt0.c0 END) ORDER BY (~ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE UNLIKELY(DISTINCT vt0.c0)  WHEN TYPEOF(DISTINCT vt0.c0) THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY (~ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE UNLIKELY(DISTINCT vt0.c0)  WHEN TYPEOF(DISTINCT vt0.c0) THEN vt0.c0 ELSE vt0.c0 END) ORDER BY (~ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE UNLIKELY(DISTINCT vt0.c0)  WHEN TYPEOF(DISTINCT vt0.c0) THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY (~ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE UNLIKELY(DISTINCT vt0.c0)  WHEN TYPEOF(DISTINCT vt0.c0) THEN vt0.c0 ELSE vt0.c0 END) ORDER BY (~ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST((vt0.c0 IN (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((vt0.c0 IN (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((vt0.c0 IN (vt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('Q6')<(vt0.c0)))IS(COALESCE(vt0.c0, vt0.c0)))) ORDER BY '1129704779';
SELECT SUM(count) FROM (SELECT ALL (((((('Q6')<(vt0.c0)))IS(COALESCE(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY '1129704779');
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('Q6')<(vt0.c0)))IS(COALESCE(vt0.c0, vt0.c0)))) ORDER BY '1129704779';
SELECT SUM(count) FROM (SELECT ALL (((((('Q6')<(vt0.c0)))IS(COALESCE(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY '1129704779');
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('Q6')<(vt0.c0)))IS(COALESCE(vt0.c0, vt0.c0)))) ORDER BY '1129704779';
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (0X2e9cd1bc)) THEN vt0.c0 WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)==(NULL)) WHEN ((((((((vt0.c0)AND('1312399498')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)LIKE(vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)LIKE(vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (NOT (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN COALESCE('-805902563', vt0.c0) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (0X2e9cd1bc)) THEN vt0.c0 WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)=(NULL)) WHEN ((((((((vt0.c0)AND('1312399498')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)LIKE(vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)LIKE(vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (NOT (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN COALESCE('-805902563', vt0.c0) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (0X2e9cd1bc)) THEN vt0.c0 WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)==(NULL)) WHEN ((((((((vt0.c0)AND('1312399498')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)LIKE(vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)LIKE(vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (NOT (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN COALESCE('-805902563', vt0.c0) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (0X2e9cd1bc)) THEN vt0.c0 WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)=(NULL)) WHEN ((((((((vt0.c0)AND('1312399498')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)LIKE(vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)LIKE(vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (NOT (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN COALESCE('-805902563', vt0.c0) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (0X2e9cd1bc)) THEN vt0.c0 WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)==(NULL)) WHEN ((((((((vt0.c0)AND('1312399498')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)LIKE(vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)LIKE(vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (NOT (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN COALESCE('-805902563', vt0.c0) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)|(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)|(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)|(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)|(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)|(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('(e|&eU橶')))AND(vt0.c0)))<=('6⫋o'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('(e|&eU橶')))AND(vt0.c0)))<=('6⫋o'))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('(e|&eU橶')))AND(vt0.c0)))<=('6⫋o'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('(e|&eU橶')))AND(vt0.c0)))<=('6⫋o'))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('(e|&eU橶')))AND(vt0.c0)))<=('6⫋o'))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((-1.317027988E9) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((~ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((-1.317027988E9) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((~ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((-1.317027988E9) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((~ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((-1.317027988E9) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((~ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((-1.317027988E9) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((~ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT * FROM vt0 WHERE (CASE ((((1528286263)AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOTNULL) END) ORDER BY ((vt0.c0)GLOB(vt0.c0)) COLLATE NOCASE COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((((1528286263)AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)GLOB(vt0.c0)) COLLATE NOCASE COLLATE NOCASE DESC);
SELECT * FROM vt0 WHERE (CASE ((((1528286263)AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOTNULL) END) ORDER BY ((vt0.c0)GLOB(vt0.c0)) COLLATE NOCASE COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((((1528286263)AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)GLOB(vt0.c0)) COLLATE NOCASE COLLATE NOCASE DESC);
SELECT * FROM vt0 WHERE (CASE ((((1528286263)AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOTNULL) END) ORDER BY ((vt0.c0)GLOB(vt0.c0)) COLLATE NOCASE COLLATE NOCASE DESC;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE ((((- (''))) NOT NULL)) ORDER BY vt0.c0 ASC  NULLS LAST, (('')|((vt0.c0 IN ()))), vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((- (''))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST, (('')|((vt0.c0 IN ()))), vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((- (''))) NOT NULL)) ORDER BY vt0.c0 ASC  NULLS LAST, (('')|((vt0.c0 IN ()))), vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((- (''))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST, (('')|((vt0.c0 IN ()))), vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((- (''))) NOT NULL)) ORDER BY vt0.c0 ASC  NULLS LAST, (('')|((vt0.c0 IN ()))), vt0.c0 ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))!=((vt0.c0))))<=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))!=((vt0.c0))))<=(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))!=((vt0.c0))))<=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))!=((vt0.c0))))<=(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))!=((vt0.c0))))<=(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((TYPEOF(vt0.c0), CAST(vt0.c0 AS BLOB), ((vt0.c0)<('646329223'))))>=((0.09944278782586646 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN (vt0.c0)))))) ORDER BY CAST(((vt0.c0)OR(vt0.c0)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((TYPEOF(vt0.c0), CAST(vt0.c0 AS BLOB), ((vt0.c0)<('646329223'))))>=((0.09944278782586646 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)OR(vt0.c0)) AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((TYPEOF(vt0.c0), CAST(vt0.c0 AS BLOB), ((vt0.c0)<('646329223'))))>=((0.09944278782586646 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN (vt0.c0)))))) ORDER BY CAST(((vt0.c0)OR(vt0.c0)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((TYPEOF(vt0.c0), CAST(vt0.c0 AS BLOB), ((vt0.c0)<('646329223'))))>=((0.09944278782586646 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)OR(vt0.c0)) AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((TYPEOF(vt0.c0), CAST(vt0.c0 AS BLOB), ((vt0.c0)<('646329223'))))>=((0.09944278782586646 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN (vt0.c0)))))) ORDER BY CAST(((vt0.c0)OR(vt0.c0)) AS TEXT) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((vt0.c0))==((x'')))) BETWEEN (((vt0.c0)OR(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))==((x'')))) BETWEEN (((vt0.c0)OR(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0))==((x'')))) BETWEEN (((vt0.c0)OR(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))==((x'')))) BETWEEN (((vt0.c0)OR(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0))==((x'')))) BETWEEN (((vt0.c0)OR(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (((SUBSTR(vt0.c0, NULL)) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (vt0.c0))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.09856423263342284 END)<=(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((SUBSTR(vt0.c0, NULL)) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.09856423263342284 END)<=(vt0.c0)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((SUBSTR(vt0.c0, NULL)) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (vt0.c0))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.09856423263342284 END)<=(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((SUBSTR(vt0.c0, NULL)) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.09856423263342284 END)<=(vt0.c0)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((SUBSTR(vt0.c0, NULL)) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (vt0.c0))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.09856423263342284 END)<=(vt0.c0)) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (TYPEOF(((vt0.c0) ISNULL))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN HEX(vt0.c0) ELSE ((vt0.c0)>(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN HEX(vt0.c0) ELSE ((vt0.c0)>(vt0.c0)) END);
SELECT * FROM vt0 WHERE (TYPEOF(((vt0.c0) ISNULL))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN HEX(vt0.c0) ELSE ((vt0.c0)>(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN HEX(vt0.c0) ELSE ((vt0.c0)>(vt0.c0)) END);
SELECT * FROM vt0 WHERE (TYPEOF(((vt0.c0) ISNULL))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN HEX(vt0.c0) ELSE ((vt0.c0)>(vt0.c0)) END;
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN '' END AS INTEGER)) ORDER BY ((((vt0.c0 IN ())))>((vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN '' END AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN ())))>((vt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN '' END AS INTEGER)) ORDER BY ((((vt0.c0 IN ())))>((vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN '' END AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN ())))>((vt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN '' END AS INTEGER)) ORDER BY ((((vt0.c0 IN ())))>((vt0.c0))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (x'') ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(((495127055)-(vt0.c0)))))OR(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(((495127055)-(vt0.c0)))))OR(vt0.c0))  NULLS FIRST);
SELECT * FROM vt0 WHERE (x'') ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(((495127055)-(vt0.c0)))))OR(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(((495127055)-(vt0.c0)))))OR(vt0.c0))  NULLS FIRST);
SELECT * FROM vt0 WHERE (x'') ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(((495127055)-(vt0.c0)))))OR(vt0.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY ((+ (vt0.c0)) IN ((- (vt0.c0)), ((vt0.c0)&(vt0.c0)))), (('NⓊ') IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((+ (vt0.c0)) IN ((- (vt0.c0)), ((vt0.c0)&(vt0.c0)))), (('NⓊ') IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY ((+ (vt0.c0)) IN ((- (vt0.c0)), ((vt0.c0)&(vt0.c0)))), (('NⓊ') IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((+ (vt0.c0)) IN ((- (vt0.c0)), ((vt0.c0)&(vt0.c0)))), (('NⓊ') IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY ((+ (vt0.c0)) IN ((- (vt0.c0)), ((vt0.c0)&(vt0.c0)))), (('NⓊ') IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)<>(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((NULL)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((vt0.c0 IN ()))<=(((vt0.c0)%(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((NULL)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))<=(((vt0.c0)%(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((NULL)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((vt0.c0 IN ()))<=(((vt0.c0)%(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((NULL)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))<=(((vt0.c0)%(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((NULL)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((vt0.c0 IN ()))<=(((vt0.c0)%(vt0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)) ORDER BY x'3e9e' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY x'3e9e' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)) ORDER BY x'3e9e' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY x'3e9e' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)) ORDER BY x'3e9e' ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((json_remove(vt0.c0, '585400418'))+(((vt0.c0)+(vt0.c0))))) ORDER BY (((vt0.c0 COLLATE RTRIM))=((((vt0.c0) NOTNULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(vt0.c0, '585400418'))+(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 COLLATE RTRIM))=((((vt0.c0) NOTNULL))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((json_remove(vt0.c0, '585400418'))+(((vt0.c0)+(vt0.c0))))) ORDER BY (((vt0.c0 COLLATE RTRIM))=((((vt0.c0) NOTNULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(vt0.c0, '585400418'))+(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 COLLATE RTRIM))=((((vt0.c0) NOTNULL))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)-((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)-((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)-((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)-((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)-((vt0.c0 IN ()))));
SELECT * FROM vt0 WHERE (NULL) ORDER BY ((vt0.c0) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (NULL) ORDER BY ((vt0.c0) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (NULL) ORDER BY ((vt0.c0) ISNULL) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((- (vt0.c0 COLLATE RTRIM))) ORDER BY ((((6.63181408E8)-(vt0.c0)))<>((((vt0.c0, vt0.c0, vt0.c0))>(('0ᏱQ,W', vt0.c0, vt0.c0))))), CAST((((vt0.c0))=((vt0.c0))) AS INTEGER), ((CAST(x'ba971188d31c' AS TEXT))OR('N,QRKﴜ'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((((6.63181408E8)-(vt0.c0)))<>((((vt0.c0, vt0.c0, vt0.c0))>(('0ᏱQ,W', vt0.c0, vt0.c0))))), CAST((((vt0.c0))=((vt0.c0))) AS INTEGER), ((CAST(x'ba971188d31c' AS TEXT))OR('N,QRKﴜ'))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((- (vt0.c0 COLLATE RTRIM))) ORDER BY ((((6.63181408E8)-(vt0.c0)))<>((((vt0.c0, vt0.c0, vt0.c0))>(('0ᏱQ,W', vt0.c0, vt0.c0))))), CAST((((vt0.c0))=((vt0.c0))) AS INTEGER), ((CAST(x'ba971188d31c' AS TEXT))OR('N,QRKﴜ'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((((6.63181408E8)-(vt0.c0)))<>((((vt0.c0, vt0.c0, vt0.c0))>(('0ᏱQ,W', vt0.c0, vt0.c0))))), CAST((((vt0.c0))=((vt0.c0))) AS INTEGER), ((CAST(x'ba971188d31c' AS TEXT))OR('N,QRKﴜ'))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((- (vt0.c0 COLLATE RTRIM))) ORDER BY ((((6.63181408E8)-(vt0.c0)))<>((((vt0.c0, vt0.c0, vt0.c0))>(('0ᏱQ,W', vt0.c0, vt0.c0))))), CAST((((vt0.c0))=((vt0.c0))) AS INTEGER), ((CAST(x'ba971188d31c' AS TEXT))OR('N,QRKﴜ'))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT TIME(vt0.c0, vt0.c0, vt0.c0))) ORDER BY CASE WHEN ((vt0.c0)|(vt0.c0)) THEN 0.14125136584520548 COLLATE BINARY ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END ASC, ((vt0.c0 IN ()) IN (((vt0.c0)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT TIME(vt0.c0, vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)|(vt0.c0)) THEN 0.14125136584520548 COLLATE BINARY ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END ASC, ((vt0.c0 IN ()) IN (((vt0.c0)<<(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT TIME(vt0.c0, vt0.c0, vt0.c0))) ORDER BY CASE WHEN ((vt0.c0)|(vt0.c0)) THEN 0.14125136584520548 COLLATE BINARY ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END ASC, ((vt0.c0 IN ()) IN (((vt0.c0)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT TIME(vt0.c0, vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)|(vt0.c0)) THEN 0.14125136584520548 COLLATE BINARY ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END ASC, ((vt0.c0 IN ()) IN (((vt0.c0)<<(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT TIME(vt0.c0, vt0.c0, vt0.c0))) ORDER BY CASE WHEN ((vt0.c0)|(vt0.c0)) THEN 0.14125136584520548 COLLATE BINARY ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END ASC, ((vt0.c0 IN ()) IN (((vt0.c0)<<(vt0.c0))));
SELECT ALL * FROM vt0 WHERE (((((((((x'')AND(HEX(''))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND((NOT (vt0.c0)))))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((x'')AND(HEX(''))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND((NOT (vt0.c0)))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((x'')AND(HEX(''))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND((NOT (vt0.c0)))))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((x'')AND(HEX(''))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND((NOT (vt0.c0)))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((x'')AND(HEX(''))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND((NOT (vt0.c0)))))OR((vt0.c0 IN ()))));
SELECT ALL * FROM vt0 WHERE (NULLIF((~ (vt0.c0)), x'b563' COLLATE NOCASE)) ORDER BY CAST(TRIM(vt0.c0, vt0.c0) AS REAL)  NULLS FIRST, ((UNLIKELY(vt0.c0)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((~ (vt0.c0)), x'b563' COLLATE NOCASE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(TRIM(vt0.c0, vt0.c0) AS REAL)  NULLS FIRST, ((UNLIKELY(vt0.c0)) IS TRUE) DESC);
SELECT ALL * FROM vt0 WHERE (NULLIF((~ (vt0.c0)), x'b563' COLLATE NOCASE)) ORDER BY CAST(TRIM(vt0.c0, vt0.c0) AS REAL)  NULLS FIRST, ((UNLIKELY(vt0.c0)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((~ (vt0.c0)), x'b563' COLLATE NOCASE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(TRIM(vt0.c0, vt0.c0) AS REAL)  NULLS FIRST, ((UNLIKELY(vt0.c0)) IS TRUE) DESC);
SELECT ALL * FROM vt0 WHERE (NULLIF((~ (vt0.c0)), x'b563' COLLATE NOCASE)) ORDER BY CAST(TRIM(vt0.c0, vt0.c0) AS REAL)  NULLS FIRST, ((UNLIKELY(vt0.c0)) IS TRUE) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c0) ISNULL))))) ORDER BY (vt0.c0 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c0) ISNULL))))) ORDER BY (vt0.c0 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c0) ISNULL))))) ORDER BY (vt0.c0 IN ()) COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (0x79173e0a))) ORDER BY (((((NOT (x'19049be7')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((((((((vt0.c0)AND(x'')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0x79173e0a))) IS TRUE)  as count FROM vt0 ORDER BY (((((NOT (x'19049be7')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((((((((vt0.c0)AND(x'')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (0x79173e0a))) ORDER BY (((((NOT (x'19049be7')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((((((((vt0.c0)AND(x'')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0x79173e0a))) IS TRUE)  as count FROM vt0 ORDER BY (((((NOT (x'19049be7')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((((((((vt0.c0)AND(x'')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (0x79173e0a))) ORDER BY (((((NOT (x'19049be7')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((((((((vt0.c0)AND(x'')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0)))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) ORDER BY (~ (SQLITE_COMPILEOPTION_GET(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (~ (SQLITE_COMPILEOPTION_GET(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) ORDER BY (~ (SQLITE_COMPILEOPTION_GET(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (~ (SQLITE_COMPILEOPTION_GET(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) ORDER BY (~ (SQLITE_COMPILEOPTION_GET(vt0.c0)));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)>=(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>=(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)>=(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>=(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)>=(vt0.c0)) AS INTEGER));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (((NOT (vt0.c0)) IN ((((((((('943382664')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN ((((((((('943382664')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE (((NOT (vt0.c0)) IN ((((((((('943382664')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN ((((((((('943382664')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE (((NOT (vt0.c0)) IN ((((((((('943382664')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ()), (((x'd99e'))>((vt0.c0))))) AND ((((vt0.c0) IS FALSE), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)LIKE(vt0.c0)))))) ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ()), (((x'd99e'))>((vt0.c0))))) AND ((((vt0.c0) IS FALSE), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)LIKE(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS REAL) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ()), (((x'd99e'))>((vt0.c0))))) AND ((((vt0.c0) IS FALSE), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)LIKE(vt0.c0)))))) ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ()), (((x'd99e'))>((vt0.c0))))) AND ((((vt0.c0) IS FALSE), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)LIKE(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS REAL) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ()), (((x'd99e'))>((vt0.c0))))) AND ((((vt0.c0) IS FALSE), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)LIKE(vt0.c0)))))) ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'' IN ()) IN ())) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0)))) NOT BETWEEN (NULL) AND (((vt0.c0)/(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'' IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0)))) NOT BETWEEN (NULL) AND (((vt0.c0)/(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'' IN ()) IN ())) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0)))) NOT BETWEEN (NULL) AND (((vt0.c0)/(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'' IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0)))) NOT BETWEEN (NULL) AND (((vt0.c0)/(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'' IN ()) IN ())) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0)))) NOT BETWEEN (NULL) AND (((vt0.c0)/(vt0.c0))))  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0)>(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0)>(NULL))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0)>(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0)>(NULL))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0)>(NULL)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOTNULL)) ORDER BY NULL DESC, HEX((vt0.c0 IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC, HEX((vt0.c0 IN ())) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOTNULL)) ORDER BY NULL DESC, HEX((vt0.c0 IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC, HEX((vt0.c0 IN ())) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOTNULL)) ORDER BY NULL DESC, HEX((vt0.c0 IN ())) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((+ (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((LIKELIHOOD(vt0.c0, 0.47104949033502586)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(vt0.c0, 0.47104949033502586)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((LIKELIHOOD(vt0.c0, 0.47104949033502586)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(vt0.c0, 0.47104949033502586)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((LIKELIHOOD(vt0.c0, 0.47104949033502586)) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((NOT (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)-(vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE vt0.c0  WHEN '-0.0' THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)-(vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE vt0.c0  WHEN '-0.0' THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)-(vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE vt0.c0  WHEN '-0.0' THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)-(vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE vt0.c0  WHEN '-0.0' THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)-(vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE vt0.c0  WHEN '-0.0' THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((((vt0.c0) ISNULL))))) ORDER BY (~ (vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((((vt0.c0) ISNULL))))) ORDER BY (~ (vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((((vt0.c0) ISNULL))))) ORDER BY (~ (vt0.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN (TYPEOF(vt0.c0)) AND ((('')IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN (TYPEOF(vt0.c0)) AND ((('')IS(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN (TYPEOF(vt0.c0)) AND ((('')IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN (TYPEOF(vt0.c0)) AND ((('')IS(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN (TYPEOF(vt0.c0)) AND ((('')IS(vt0.c0)))));
SELECT * FROM vt0 WHERE (((((('-2017443178', vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))/(((vt0.c0)*(vt0.c0))))) ORDER BY NULLIF(CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0);
SELECT SUM(count) FROM (SELECT ((((((('-2017443178', vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))/(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0));
SELECT * FROM vt0 WHERE (((((('-2017443178', vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))/(((vt0.c0)*(vt0.c0))))) ORDER BY NULLIF(CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0);
SELECT SUM(count) FROM (SELECT ((((((('-2017443178', vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))/(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0));
SELECT * FROM vt0 WHERE (((((('-2017443178', vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))/(((vt0.c0)*(vt0.c0))))) ORDER BY NULLIF(CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((((NULL)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((NULL)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((((NULL)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((NULL)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((((NULL)AND(vt0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY 0Xffffffffcd661c09  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY 0Xffffffffcd661c09  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY 0Xffffffffcd661c09  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY 0Xffffffffcd661c09  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY 0Xffffffffcd661c09  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)!=(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)<>(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)!=(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)<>(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)!=(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0)))/(LIKELIHOOD(vt0.c0, 0.18379592895261465)))) ORDER BY ((((((vt0.c0)>>(vt0.c0)))OR((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0, vt0.c0)))/(LIKELIHOOD(vt0.c0, 0.18379592895261465)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)>>(vt0.c0)))OR((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0)))/(LIKELIHOOD(vt0.c0, 0.18379592895261465)))) ORDER BY ((((((vt0.c0)>>(vt0.c0)))OR((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0, vt0.c0)))/(LIKELIHOOD(vt0.c0, 0.18379592895261465)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)>>(vt0.c0)))OR((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0)))/(LIKELIHOOD(vt0.c0, 0.18379592895261465)))) ORDER BY ((((((vt0.c0)>>(vt0.c0)))OR((vt0.c0 IN ()))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.14549664578044985))), ((vt0.c0)>>(vt0.c0)), ((vt0.c0)>(vt0.c0)), vt0.c0, vt0.c0 COLLATE BINARY)) AND ((CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE RTRIM, CASE WHEN x'' THEN vt0.c0 END, CAST(vt0.c0 AS INTEGER), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ORDER BY CAST(x'' AS NUMERIC), vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.14549664578044985))), ((vt0.c0)>>(vt0.c0)), ((vt0.c0)>(vt0.c0)), vt0.c0, vt0.c0 COLLATE BINARY)) AND ((CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE RTRIM, CASE WHEN x'' THEN vt0.c0 END, CAST(vt0.c0 AS INTEGER), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(x'' AS NUMERIC), vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.14549664578044985))), ((vt0.c0)>>(vt0.c0)), ((vt0.c0)>(vt0.c0)), vt0.c0, vt0.c0 COLLATE BINARY)) AND ((CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE RTRIM, CASE WHEN x'' THEN vt0.c0 END, CAST(vt0.c0 AS INTEGER), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ORDER BY CAST(x'' AS NUMERIC), vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.14549664578044985))), ((vt0.c0)>>(vt0.c0)), ((vt0.c0)>(vt0.c0)), vt0.c0, vt0.c0 COLLATE BINARY)) AND ((CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE RTRIM, CASE WHEN x'' THEN vt0.c0 END, CAST(vt0.c0 AS INTEGER), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(x'' AS NUMERIC), vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.14549664578044985))), ((vt0.c0)>>(vt0.c0)), ((vt0.c0)>(vt0.c0)), vt0.c0, vt0.c0 COLLATE BINARY)) AND ((CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE RTRIM, CASE WHEN x'' THEN vt0.c0 END, CAST(vt0.c0 AS INTEGER), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ORDER BY CAST(x'' AS NUMERIC), vt0.c0 ASC;
SELECT ALL * FROM vt0 WHERE (((x'') NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY LIKELIHOOD((NOT (vt0.c0)), 0.017911341265526404) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD((NOT (vt0.c0)), 0.017911341265526404) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((x'') NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY LIKELIHOOD((NOT (vt0.c0)), 0.017911341265526404) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD((NOT (vt0.c0)), 0.017911341265526404) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((x'') NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY LIKELIHOOD((NOT (vt0.c0)), 0.017911341265526404) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT * FROM vt0 WHERE (((((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) ISNULL)) ORDER BY (NOT (vt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) ISNULL)) ORDER BY (NOT (vt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) ISNULL)) ORDER BY (NOT (vt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS BLOB)) ORDER BY ((((((x'')OR(vt0.c0)))AND(vt0.c0)))<(CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS FALSE) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((((x'')OR(vt0.c0)))AND(vt0.c0)))<(CAST(vt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS BLOB)) ORDER BY ((((((x'')OR(vt0.c0)))AND(vt0.c0)))<(CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS FALSE) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((((x'')OR(vt0.c0)))AND(vt0.c0)))<(CAST(vt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS BLOB)) ORDER BY ((((((x'')OR(vt0.c0)))AND(vt0.c0)))<(CAST(vt0.c0 AS INTEGER)));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB));
SELECT * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))<<(((vt0.c0)+(vt0.c0))))) ORDER BY ((((vt0.c0)%(vt0.c0)))-(0.49053260714864333))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0)))<<(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)%(vt0.c0)))-(0.49053260714864333))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))<<(((vt0.c0)+(vt0.c0))))) ORDER BY ((((vt0.c0)%(vt0.c0)))-(0.49053260714864333))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0)))<<(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)%(vt0.c0)))-(0.49053260714864333))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))<<(((vt0.c0)+(vt0.c0))))) ORDER BY ((((vt0.c0)%(vt0.c0)))-(0.49053260714864333))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)*(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)*(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)*(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)*(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)*(vt0.c0)) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))LIKE(((vt0.c0) NOTNULL)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))LIKE(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))LIKE(((vt0.c0) NOTNULL)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))LIKE(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))LIKE(((vt0.c0) NOTNULL)))) ORDER BY vt0.c0;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((-257435447)) AND (((NOT (vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS NUMERIC)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((-257435447)) AND (((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC)) NOT NULL) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((-257435447)) AND (((NOT (vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS NUMERIC)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((-257435447)) AND (((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC)) NOT NULL) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((-257435447)) AND (((NOT (vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS NUMERIC)) NOT NULL) ASC;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))!=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CASE WHEN 0x6e2eb2d8 THEN vt0.c0 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))!=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN 0x6e2eb2d8 THEN vt0.c0 END ASC);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))!=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CASE WHEN 0x6e2eb2d8 THEN vt0.c0 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))!=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN 0x6e2eb2d8 THEN vt0.c0 END ASC);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))!=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CASE WHEN 0x6e2eb2d8 THEN vt0.c0 END ASC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0))!=((((vt0.c0)IS(vt0.c0)))))) ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))!=((((vt0.c0)IS(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0))!=((((vt0.c0)IS(vt0.c0)))))) ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))!=((((vt0.c0)IS(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0))!=((((vt0.c0)IS(vt0.c0)))))) ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS BLOB)  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c0)&((('d')!=(vt0.c0))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)&((('d')<>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (((vt0.c0)&((('d')!=(vt0.c0))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)&((('d')<>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (((vt0.c0)&((('d')!=(vt0.c0))))) ORDER BY vt0.c0;
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) IS FALSE)) ORDER BY (- (vt0.c0 COLLATE NOCASE))  NULLS LAST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c0 COLLATE NOCASE))  NULLS LAST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) IS FALSE)) ORDER BY (- (vt0.c0 COLLATE NOCASE))  NULLS LAST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c0 COLLATE NOCASE))  NULLS LAST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) IS FALSE)) ORDER BY (- (vt0.c0 COLLATE NOCASE))  NULLS LAST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0) IS FALSE)) AND ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0) IS FALSE)) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0) IS FALSE)) AND ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0) IS FALSE)) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0) IS FALSE)) AND ((~ (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN (((vt0.c0)-(vt0.c0))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT((- (x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN (((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT((- (x''))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN (((vt0.c0)-(vt0.c0))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT((- (x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN (((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT((- (x''))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN (((vt0.c0)-(vt0.c0))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT((- (x''))))  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))IS NOT((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))IS NOT((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))IS NOT((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))IS NOT((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))IS NOT((+ (vt0.c0)))));
SELECT * FROM vt0 WHERE ((((NOT ('㚞7M[<''L')))>>(((vt0.c0)IS(vt0.c0))))) ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT ('㚞7M[<''L')))>>(((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((NOT ('㚞7M[<''L')))>>(((vt0.c0)IS(vt0.c0))))) ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT ('㚞7M[<''L')))>>(((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((NOT ('㚞7M[<''L')))>>(((vt0.c0)IS(vt0.c0))))) ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NULL IN ()));
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOT NULL))OR(vt0.c0 COLLATE NOCASE)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT NULL))OR(vt0.c0 COLLATE NOCASE)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOT NULL))OR(vt0.c0 COLLATE NOCASE)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT NULL))OR(vt0.c0 COLLATE NOCASE)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOT NULL))OR(vt0.c0 COLLATE NOCASE)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY LAST_INSERT_ROWID());
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY LAST_INSERT_ROWID());
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY LAST_INSERT_ROWID();
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(x'f1b5')))>=(TRIM(vt0.c0)))) ORDER BY ((CAST(vt0.c0 AS TEXT))&((('h╂EX8') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(x'f1b5')))>=(TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((CAST(vt0.c0 AS TEXT))&((('h╂EX8') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(x'f1b5')))>=(TRIM(vt0.c0)))) ORDER BY ((CAST(vt0.c0 AS TEXT))&((('h╂EX8') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(x'f1b5')))>=(TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((CAST(vt0.c0 AS TEXT))&((('h╂EX8') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(x'f1b5')))>=(TRIM(vt0.c0)))) ORDER BY ((CAST(vt0.c0 AS TEXT))&((('h╂EX8') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE RTRIM) ORDER BY ((json_type(vt0.c0)) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((json_type(vt0.c0)) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE RTRIM) ORDER BY ((json_type(vt0.c0)) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((json_type(vt0.c0)) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE (+ (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN RTRIM(vt0.c0) WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0xffffffffcf598de2)) THEN vt0.c0 END) ORDER BY ((TYPEOF(vt0.c0)) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN RTRIM(vt0.c0) WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0xffffffffcf598de2)) THEN vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY ((TYPEOF(vt0.c0)) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE (+ (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN RTRIM(vt0.c0) WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0xffffffffcf598de2)) THEN vt0.c0 END) ORDER BY ((TYPEOF(vt0.c0)) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN RTRIM(vt0.c0) WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0xffffffffcf598de2)) THEN vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY ((TYPEOF(vt0.c0)) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE (+ (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN RTRIM(vt0.c0) WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0xffffffffcf598de2)) THEN vt0.c0 END) ORDER BY ((TYPEOF(vt0.c0)) NOTNULL) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)<<(ABS(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)<<(ABS(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)<<(ABS(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)<<(ABS(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)<<(ABS(DISTINCT vt0.c0))));
SELECT * FROM vt0 WHERE (((((vt0.c0)IS(''))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) BETWEEN (x'') AND (NULL))))) ORDER BY (+ (((vt0.c0)GLOB(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(''))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) BETWEEN (x'') AND (NULL))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0)GLOB(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0)IS(''))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) BETWEEN (x'') AND (NULL))))) ORDER BY (+ (((vt0.c0)GLOB(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(''))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) BETWEEN (x'') AND (NULL))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0)GLOB(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0)IS(''))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) BETWEEN (x'') AND (NULL))))) ORDER BY (+ (((vt0.c0)GLOB(vt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (0.21729134635318292)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (0.21729134635318292))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (0.21729134635318292)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (0.21729134635318292))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (0.21729134635318292)));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE BINARY);
SELECT * FROM vt0 WHERE (((vt0.c0)||(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)||(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)||(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)||(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)||(vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE ((((((0x467f730c) IS TRUE), (((vt0.c0))<((vt0.c0))), vt0.c0))>((((vt0.c0) ISNULL), (NOT (vt0.c0)), ((vt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((0x467f730c) IS TRUE), (((vt0.c0))<((vt0.c0))), vt0.c0))>((((vt0.c0) ISNULL), (NOT (vt0.c0)), ((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((0x467f730c) IS TRUE), (((vt0.c0))<((vt0.c0))), vt0.c0))>((((vt0.c0) ISNULL), (NOT (vt0.c0)), ((vt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((0x467f730c) IS TRUE), (((vt0.c0))<((vt0.c0))), vt0.c0))>((((vt0.c0) ISNULL), (NOT (vt0.c0)), ((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((0x467f730c) IS TRUE), (((vt0.c0))<((vt0.c0))), vt0.c0))>((((vt0.c0) ISNULL), (NOT (vt0.c0)), ((vt0.c0) NOT NULL)))));
SELECT ALL * FROM vt0 WHERE ((~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))GLOB(vt0.c0))) ORDER BY (((((vt0.c0, vt0.c0, '-1242527696')) NOT BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((0.46456524319566594, vt0.c0, vt0.c0)))) BETWEEN ('642493704') AND (CAST(vt0.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt0.c0)))GLOB(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, '-1242527696')) NOT BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((0.46456524319566594, vt0.c0, vt0.c0)))) BETWEEN ('642493704') AND (CAST(vt0.c0 AS TEXT))) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))GLOB(vt0.c0))) ORDER BY (((((vt0.c0, vt0.c0, '-1242527696')) NOT BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((0.46456524319566594, vt0.c0, vt0.c0)))) BETWEEN ('642493704') AND (CAST(vt0.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt0.c0)))GLOB(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, '-1242527696')) NOT BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((0.46456524319566594, vt0.c0, vt0.c0)))) BETWEEN ('642493704') AND (CAST(vt0.c0 AS TEXT))) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))GLOB(vt0.c0))) ORDER BY (((((vt0.c0, vt0.c0, '-1242527696')) NOT BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((0.46456524319566594, vt0.c0, vt0.c0)))) BETWEEN ('642493704') AND (CAST(vt0.c0 AS TEXT))) DESC;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()));
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))+(IFNULL(DISTINCT vt0.c0, vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))+(IFNULL(DISTINCT vt0.c0, vt0.c0)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))+(IFNULL(DISTINCT vt0.c0, vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))+(IFNULL(DISTINCT vt0.c0, vt0.c0)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))+(IFNULL(DISTINCT vt0.c0, vt0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 IN ())))<(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN ())))<(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 IN ())))<(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN ())))<(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 IN ())))<(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT ALL * FROM vt0 WHERE ((((((((((0.7835586124149877 IN ()))AND((NOT (x'641b')))))OR(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)!=(vt0.c0)))))AND(NULLIF(DISTINCT vt0.c0, vt0.c0)))) ORDER BY CAST(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0.9188149560120629)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS BLOB), CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((0.7835586124149877 IN ()))AND((NOT (x'641b')))))OR(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)<>(vt0.c0)))))AND(NULLIF(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0.9188149560120629)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS BLOB), CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((((((0.7835586124149877 IN ()))AND((NOT (x'641b')))))OR(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)!=(vt0.c0)))))AND(NULLIF(DISTINCT vt0.c0, vt0.c0)))) ORDER BY CAST(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0.9188149560120629)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS BLOB), CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((0.7835586124149877 IN ()))AND((NOT (x'641b')))))OR(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)<>(vt0.c0)))))AND(NULLIF(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0.9188149560120629)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS BLOB), CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((((((0.7835586124149877 IN ()))AND((NOT (x'641b')))))OR(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)!=(vt0.c0)))))AND(NULLIF(DISTINCT vt0.c0, vt0.c0)))) ORDER BY CAST(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0.9188149560120629)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS BLOB), CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND ((0.6157017196157746)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND ((0.6157017196157746))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND ((0.6157017196157746)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND ((0.6157017196157746))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND ((0.6157017196157746)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC));
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c0 AS INTEGER)))<=((((vt0.c0)<(0.3208972411826382))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS INTEGER)))<=((((vt0.c0)<(0.3208972411826382)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c0 AS INTEGER)))<=((((vt0.c0)<(0.3208972411826382))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS INTEGER)))<=((((vt0.c0)<(0.3208972411826382)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c0 AS INTEGER)))<=((((vt0.c0)<(0.3208972411826382))))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<>((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<>((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<>((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<>((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<>((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(x''))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(x''))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(x''))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(x''))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(x''))) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN ('') AND (vt0.c0 COLLATE NOCASE))) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)) ASC  NULLS FIRST, (((vt0.c0 IN ()))AND((+ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) BETWEEN ('') AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)) ASC  NULLS FIRST, (((vt0.c0 IN ()))AND((+ (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN ('') AND (vt0.c0 COLLATE NOCASE))) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)) ASC  NULLS FIRST, (((vt0.c0 IN ()))AND((+ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) BETWEEN ('') AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)) ASC  NULLS FIRST, (((vt0.c0 IN ()))AND((+ (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((NULL)|(vt0.c0)) COLLATE RTRIM) ORDER BY (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))OR(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((NULL)|(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))OR(vt0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE (((NULL)|(vt0.c0)) COLLATE RTRIM) ORDER BY (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))OR(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((NULL)|(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))OR(vt0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE (((NULL)|(vt0.c0)) COLLATE RTRIM) ORDER BY (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))OR(vt0.c0)) IN ());
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY CAST(NULL AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(NULL AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY CAST(NULL AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(NULL AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY CAST(NULL AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (NULLIF(vt0.c0, (~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(vt0.c0, (~ (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULLIF(vt0.c0, (~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(vt0.c0, (~ (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULLIF(vt0.c0, (~ (vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (5.85400418E8)))) AND ((CAST(vt0.c0 AS TEXT))))) ORDER BY '1758923378'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (5.85400418E8)))) AND ((CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0 ORDER BY '1758923378'  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (5.85400418E8)))) AND ((CAST(vt0.c0 AS TEXT))))) ORDER BY '1758923378'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (5.85400418E8)))) AND ((CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0 ORDER BY '1758923378'  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (5.85400418E8)))) AND ((CAST(vt0.c0 AS TEXT))))) ORDER BY '1758923378'  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)&(vt0.c0)))AND(((vt0.c0)>=(vt0.c0))))) ORDER BY x'c933', ((((vt0.c0) IS FALSE))OR((vt0.c0 IN (vt0.c0)))), (((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c0)))AND(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY x'c933', ((((vt0.c0) IS FALSE))OR((vt0.c0 IN (vt0.c0)))), (((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0) IS TRUE)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)&(vt0.c0)))AND(((vt0.c0)>=(vt0.c0))))) ORDER BY x'c933', ((((vt0.c0) IS FALSE))OR((vt0.c0 IN (vt0.c0)))), (((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c0)))AND(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY x'c933', ((((vt0.c0) IS FALSE))OR((vt0.c0 IN (vt0.c0)))), (((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0) IS TRUE)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)&(vt0.c0)))AND(((vt0.c0)>=(vt0.c0))))) ORDER BY x'c933', ((((vt0.c0) IS FALSE))OR((vt0.c0 IN (vt0.c0)))), (((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM vt0 WHERE ((- ((NOT (x'2556')))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (x'2556'))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- ((NOT (x'2556')))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (x'2556'))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- ((NOT (x'2556')))));
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0))=((vt0.c0))) AS REAL)) ORDER BY 8.7881073E7  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))=((vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY 8.7881073E7  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0))=((vt0.c0))) AS REAL)) ORDER BY 8.7881073E7  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))=((vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY 8.7881073E7  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0))=((vt0.c0))) AS REAL)) ORDER BY 8.7881073E7  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))<=(NULLIF(vt0.c0, vt0.c0)))) ORDER BY CAST(vt0.c0 AS REAL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.c0)))<=(NULLIF(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS REAL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))<=(NULLIF(vt0.c0, vt0.c0)))) ORDER BY CAST(vt0.c0 AS REAL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.c0)))<=(NULLIF(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS REAL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))<=(NULLIF(vt0.c0, vt0.c0)))) ORDER BY CAST(vt0.c0 AS REAL) COLLATE NOCASE;
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0)&(vt0.c0)))));
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT * FROM vt0 WHERE (CASE 0Xffffffffb6b1d30c  WHEN vt0.c0 THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '', vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE 0xffffffffb6b1d30c  WHEN vt0.c0 THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '', vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE 0Xffffffffb6b1d30c  WHEN vt0.c0 THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '', vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE 0xffffffffb6b1d30c  WHEN vt0.c0 THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '', vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE 0Xffffffffb6b1d30c  WHEN vt0.c0 THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '', vt0.c0))) END);
SELECT * FROM vt0 WHERE (x'') ORDER BY (NOT (0.8803070118664552)), CAST(vt0.c0 COLLATE BINARY AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY (NOT (0.8803070118664552)), CAST(vt0.c0 COLLATE BINARY AS NUMERIC) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (x'') ORDER BY (NOT (0.8803070118664552)), CAST(vt0.c0 COLLATE BINARY AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY (NOT (0.8803070118664552)), CAST(vt0.c0 COLLATE BINARY AS NUMERIC) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (x'') ORDER BY (NOT (0.8803070118664552)), CAST(vt0.c0 COLLATE BINARY AS NUMERIC) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)!=(vt0.c0))  WHEN LIKELY(vt0.c0) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0) NOTNULL) END) ORDER BY CAST(vt0.c0 AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)!=(vt0.c0))  WHEN LIKELY(vt0.c0) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS TEXT));
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)!=(vt0.c0))  WHEN LIKELY(vt0.c0) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0) NOTNULL) END) ORDER BY CAST(vt0.c0 AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)!=(vt0.c0))  WHEN LIKELY(vt0.c0) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS TEXT));
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)!=(vt0.c0))  WHEN LIKELY(vt0.c0) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0) NOTNULL) END) ORDER BY CAST(vt0.c0 AS TEXT);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((- (vt0.c0)))))AND(MAX(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((- (vt0.c0)))))AND(MAX(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((- (vt0.c0)))))AND(MAX(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((- (vt0.c0)))))AND(MAX(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((- (vt0.c0)))))AND(MAX(vt0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))<=('-1964685013')));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<=('-1964685013'))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))<=('-1964685013')));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<=('-1964685013'))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))<=('-1964685013')));
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT ALL * FROM vt0 WHERE ('1472460175') ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(0.4483472133753611))) NOT NULL);
SELECT SUM(count) FROM (SELECT (('1472460175') IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(0.4483472133753611))) NOT NULL));
SELECT ALL * FROM vt0 WHERE ('1472460175') ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(0.4483472133753611))) NOT NULL);
SELECT SUM(count) FROM (SELECT (('1472460175') IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(0.4483472133753611))) NOT NULL));
SELECT ALL * FROM vt0 WHERE ('1472460175') ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(0.4483472133753611))) NOT NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)) ORDER BY CASE WHEN (~ (vt0.c0)) THEN (- (vt0.c0)) ELSE x'' END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (~ (vt0.c0)) THEN (- (vt0.c0)) ELSE x'' END DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)) ORDER BY CASE WHEN (~ (vt0.c0)) THEN (- (vt0.c0)) ELSE x'' END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (~ (vt0.c0)) THEN (- (vt0.c0)) ELSE x'' END DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)) ORDER BY CASE WHEN (~ (vt0.c0)) THEN (- (vt0.c0)) ELSE x'' END DESC;
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), 0.20930009815326123)) AND ((IFNULL(vt0.c0, vt0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), NULL)))) ORDER BY ((0.06728109637757851)LIKE(vt0.c0 COLLATE BINARY)), json_type(CASE WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), 0.20930009815326123)) AND ((IFNULL(vt0.c0, vt0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), NULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((0.06728109637757851)LIKE(vt0.c0 COLLATE BINARY)), json_type(CASE WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) DESC);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), 0.20930009815326123)) AND ((IFNULL(vt0.c0, vt0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), NULL)))) ORDER BY ((0.06728109637757851)LIKE(vt0.c0 COLLATE BINARY)), json_type(CASE WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), 0.20930009815326123)) AND ((IFNULL(vt0.c0, vt0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), NULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((0.06728109637757851)LIKE(vt0.c0 COLLATE BINARY)), json_type(CASE WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((HEX(vt0.c0))OR((~ (vt0.c0))))) ORDER BY CASE WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 COLLATE BINARY WHEN CHANGES() THEN (~ (vt0.c0)) WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c0)<<(vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((HEX(vt0.c0))OR((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 COLLATE BINARY WHEN CHANGES() THEN (~ (vt0.c0)) WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c0)<<(vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((HEX(vt0.c0))OR((~ (vt0.c0))))) ORDER BY CASE WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 COLLATE BINARY WHEN CHANGES() THEN (~ (vt0.c0)) WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c0)<<(vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((HEX(vt0.c0))OR((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 COLLATE BINARY WHEN CHANGES() THEN (~ (vt0.c0)) WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c0)<<(vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((HEX(vt0.c0))OR((~ (vt0.c0))))) ORDER BY CASE WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 COLLATE BINARY WHEN CHANGES() THEN (~ (vt0.c0)) WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c0)<<(vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))OR(((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))OR(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))OR(((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))OR(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))OR(((vt0.c0)>=(vt0.c0)))));
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (((vt0.c0 COLLATE BINARY)+(((vt0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)+(((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (((vt0.c0 COLLATE BINARY)+(((vt0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)+(((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (((vt0.c0 COLLATE BINARY)+(((vt0.c0)%(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(x'')))OR(vt0.c0)))AND(vt0.c0)))) AND ((CAST('' AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(x'')))OR(vt0.c0)))AND(vt0.c0)))) AND ((CAST('' AS INTEGER))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(x'')))OR(vt0.c0)))AND(vt0.c0)))) AND ((CAST('' AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(x'')))OR(vt0.c0)))AND(vt0.c0)))) AND ((CAST('' AS INTEGER))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(x'')))OR(vt0.c0)))AND(vt0.c0)))) AND ((CAST('' AS INTEGER)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE BINARY)));
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (x''))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (x''))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (x'')));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((NULL) IS TRUE)) AND (((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((NULL) IS TRUE)) AND (((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((NULL) IS TRUE)) AND (((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((NULL) IS TRUE)) AND (((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((NULL) IS TRUE)) AND (((vt0.c0)>>(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((HEX(vt0.c0))) AND ((((vt0.c0)IS NOT(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((HEX(vt0.c0))) AND ((((vt0.c0)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((HEX(vt0.c0))) AND ((((vt0.c0)IS NOT(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((HEX(vt0.c0))) AND ((((vt0.c0)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((HEX(vt0.c0))) AND ((((vt0.c0)IS NOT(vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND(((vt0.c0) ISNULL))));
SELECT * FROM vt0 WHERE (NULL) ORDER BY '';
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY '');
SELECT * FROM vt0 WHERE (NULL) ORDER BY '';
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY '');
SELECT * FROM vt0 WHERE (NULL) ORDER BY '';
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((~ (vt0.c0))) IS FALSE), (((vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(0Xffffffff9996f9eb)))) AND ((CAST(x'5b8c' AS REAL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) IS FALSE), (((vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(0Xffffffff9996f9eb)))) AND ((CAST(x'5b8c' AS REAL))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((~ (vt0.c0))) IS FALSE), (((vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(0Xffffffff9996f9eb)))) AND ((CAST(x'5b8c' AS REAL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) IS FALSE), (((vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(0Xffffffff9996f9eb)))) AND ((CAST(x'5b8c' AS REAL))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((~ (vt0.c0))) IS FALSE), (((vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(0Xffffffff9996f9eb)))) AND ((CAST(x'5b8c' AS REAL))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) ISNULL), ((vt0.c0)+(vt0.c0)), CAST(vt0.c0 AS NUMERIC))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0 COLLATE RTRIM, -1356189695)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) ISNULL), ((vt0.c0)+(vt0.c0)), CAST(vt0.c0 AS NUMERIC))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0 COLLATE RTRIM, -1356189695))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) ISNULL), ((vt0.c0)+(vt0.c0)), CAST(vt0.c0 AS NUMERIC))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0 COLLATE RTRIM, -1356189695)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) ISNULL), ((vt0.c0)+(vt0.c0)), CAST(vt0.c0 AS NUMERIC))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0 COLLATE RTRIM, -1356189695))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) ISNULL), ((vt0.c0)+(vt0.c0)), CAST(vt0.c0 AS NUMERIC))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0 COLLATE RTRIM, -1356189695)));
SELECT COUNT(*) FROM vt0 WHERE (((SQLITE_COMPILEOPTION_GET(vt0.c0))GLOB(TRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_GET(vt0.c0))GLOB(TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((SQLITE_COMPILEOPTION_GET(vt0.c0))GLOB(TRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_GET(vt0.c0))GLOB(TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((SQLITE_COMPILEOPTION_GET(vt0.c0))GLOB(TRIM(vt0.c0))));
SELECT * FROM vt0 WHERE (((x'')AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'')AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((x'')AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'')AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((x'')AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)) ORDER BY vt0.c0 ASC  NULLS FIRST, CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '-2136450668' END THEN 0.7485613777087898 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST, CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '-2136450668' END THEN 0.7485613777087898 END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)) ORDER BY vt0.c0 ASC  NULLS FIRST, CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '-2136450668' END THEN 0.7485613777087898 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST, CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '-2136450668' END THEN 0.7485613777087898 END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)) ORDER BY vt0.c0 ASC  NULLS FIRST, CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '-2136450668' END THEN 0.7485613777087898 END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(CAST(vt0.c0 AS INTEGER))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(CAST(vt0.c0 AS INTEGER))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(CAST(vt0.c0 AS INTEGER))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(CAST(vt0.c0 AS INTEGER))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(CAST(vt0.c0 AS INTEGER))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))>>(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))>>(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))>>(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))>>(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))>>(vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c0 COLLATE NOCASE)))OR(CAST(0.6961628679619837 AS TEXT))))OR((vt0.c0 IN ()))))OR(((vt0.c0)>=(vt0.c0))))) ORDER BY ((0.3162981724460787) IS TRUE) ASC, (HEX(vt0.c0) IN ((+ (vt0.c0)))), (- (vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c0 COLLATE NOCASE)))OR(CAST(0.6961628679619837 AS TEXT))))OR((vt0.c0 IN ()))))OR(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((0.3162981724460787) IS TRUE) ASC, (HEX(vt0.c0) IN ((+ (vt0.c0)))), (- (vt0.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c0 COLLATE NOCASE)))OR(CAST(0.6961628679619837 AS TEXT))))OR((vt0.c0 IN ()))))OR(((vt0.c0)>=(vt0.c0))))) ORDER BY ((0.3162981724460787) IS TRUE) ASC, (HEX(vt0.c0) IN ((+ (vt0.c0)))), (- (vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c0 COLLATE NOCASE)))OR(CAST(0.6961628679619837 AS TEXT))))OR((vt0.c0 IN ()))))OR(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((0.3162981724460787) IS TRUE) ASC, (HEX(vt0.c0) IN ((+ (vt0.c0)))), (- (vt0.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c0 COLLATE NOCASE)))OR(CAST(0.6961628679619837 AS TEXT))))OR((vt0.c0 IN ()))))OR(((vt0.c0)>=(vt0.c0))))) ORDER BY ((0.3162981724460787) IS TRUE) ASC, (HEX(vt0.c0) IN ((+ (vt0.c0)))), (- (vt0.c0 COLLATE BINARY)) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((x'')>(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'')>(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((x'')>(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'')>(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((x'')>(vt0.c0)) AS REAL));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT NULL)) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) DESC, CASE WHEN vt0.c0 THEN COALESCE(DISTINCT vt0.c0, vt0.c0, NULL, vt0.c0) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN ((vt0.c0)|(vt0.c0)) WHEN (vt0.c0 IN ()) THEN (+ (vt0.c0)) ELSE COALESCE(vt0.c0, vt0.c0) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) DESC, CASE WHEN vt0.c0 THEN COALESCE(DISTINCT vt0.c0, vt0.c0, NULL, vt0.c0) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN ((vt0.c0)|(vt0.c0)) WHEN (vt0.c0 IN ()) THEN (+ (vt0.c0)) ELSE COALESCE(vt0.c0, vt0.c0) END ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT NULL)) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) DESC, CASE WHEN vt0.c0 THEN COALESCE(DISTINCT vt0.c0, vt0.c0, NULL, vt0.c0) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN ((vt0.c0)|(vt0.c0)) WHEN (vt0.c0 IN ()) THEN (+ (vt0.c0)) ELSE COALESCE(vt0.c0, vt0.c0) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) DESC, CASE WHEN vt0.c0 THEN COALESCE(DISTINCT vt0.c0, vt0.c0, NULL, vt0.c0) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN ((vt0.c0)|(vt0.c0)) WHEN (vt0.c0 IN ()) THEN (+ (vt0.c0)) ELSE COALESCE(vt0.c0, vt0.c0) END ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT NULL)) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) DESC, CASE WHEN vt0.c0 THEN COALESCE(DISTINCT vt0.c0, vt0.c0, NULL, vt0.c0) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN ((vt0.c0)|(vt0.c0)) WHEN (vt0.c0 IN ()) THEN (+ (vt0.c0)) ELSE COALESCE(vt0.c0, vt0.c0) END ASC;
SELECT * FROM vt0 WHERE ((((vt0.c0))==((vt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))=((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0))==((vt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))=((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0))==((vt0.c0))) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0) ISNULL)))) ORDER BY (((vt0.c0)==(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)==(vt0.c0)) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0) ISNULL)))) ORDER BY (((vt0.c0)==(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)==(vt0.c0)) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0) ISNULL)))) ORDER BY (((vt0.c0)==(vt0.c0)) IN ()) DESC;
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY vt0.c0;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOT NULL))OR(((vt0.c0)LIKE(vt0.c0)))))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT NULL))OR(((vt0.c0)LIKE(vt0.c0)))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOT NULL))OR(((vt0.c0)LIKE(vt0.c0)))))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT NULL))OR(((vt0.c0)LIKE(vt0.c0)))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOT NULL))OR(((vt0.c0)LIKE(vt0.c0)))))OR((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))IS NOT(((vt0.c0)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))IS NOT(((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))IS NOT(((vt0.c0)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))IS NOT(((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))IS NOT(((vt0.c0)>(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-2136450668')))))) ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ('ILk誅/}J'));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-2136450668')))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ('ILk誅/}J')));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-2136450668')))))) ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ('ILk誅/}J'));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-2136450668')))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ('ILk誅/}J')));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-2136450668')))))) ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ('ILk誅/}J'));
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY) ORDER BY (NOT (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY) ORDER BY (NOT (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY) ORDER BY (NOT (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)/(((x'')|(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM  NULLS LAST, CASE CASE vt0.c0  WHEN vt0.c0 THEN '1675882552' ELSE vt0.c0 END  WHEN (~ (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)/(((x'')|(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM  NULLS LAST, CASE CASE vt0.c0  WHEN vt0.c0 THEN '1675882552' ELSE vt0.c0 END  WHEN (~ (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)/(((x'')|(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM  NULLS LAST, CASE CASE vt0.c0  WHEN vt0.c0 THEN '1675882552' ELSE vt0.c0 END  WHEN (~ (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)/(((x'')|(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM  NULLS LAST, CASE CASE vt0.c0  WHEN vt0.c0 THEN '1675882552' ELSE vt0.c0 END  WHEN (~ (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)/(((x'')|(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM  NULLS LAST, CASE CASE vt0.c0  WHEN vt0.c0 THEN '1675882552' ELSE vt0.c0 END  WHEN (~ (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS LAST;
SELECT * FROM vt0 WHERE (((- (vt0.c0)) IN ())) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((- (vt0.c0)) IN ())) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((- (vt0.c0)) IN ())) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)OR('')))OR('1051416187')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE NOCASE)OR('')))OR('1051416187'))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)OR('')))OR('1051416187')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE NOCASE)OR('')))OR('1051416187'))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)OR('')))OR('1051416187')));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)<<(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)<<(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)<<(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)<<(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)<<(vt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT vt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT vt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT vt0.c0) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)>(vt0.c0)), ((vt0.c0)&(vt0.c0)), vt0.c0))<>((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ORDER BY (((vt0.c0))<=((((vt0.c0)IS(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)>(vt0.c0)), ((vt0.c0)&(vt0.c0)), vt0.c0))!=((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))<=((((vt0.c0)IS(vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)>(vt0.c0)), ((vt0.c0)&(vt0.c0)), vt0.c0))<>((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ORDER BY (((vt0.c0))<=((((vt0.c0)IS(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)>(vt0.c0)), ((vt0.c0)&(vt0.c0)), vt0.c0))!=((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))<=((((vt0.c0)IS(vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)>(vt0.c0)), ((vt0.c0)&(vt0.c0)), vt0.c0))<>((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ORDER BY (((vt0.c0))<=((((vt0.c0)IS(vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (NOT (vt0.c0)) ELSE (vt0.c0 IN ()) END) ORDER BY ((((vt0.c0 COLLATE RTRIM)OR(vt0.c0 COLLATE NOCASE)))AND((vt0.c0 IN ()))) ASC, (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (NOT (vt0.c0)) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE RTRIM)OR(vt0.c0 COLLATE NOCASE)))AND((vt0.c0 IN ()))) ASC, (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (NOT (vt0.c0)) ELSE (vt0.c0 IN ()) END) ORDER BY ((((vt0.c0 COLLATE RTRIM)OR(vt0.c0 COLLATE NOCASE)))AND((vt0.c0 IN ()))) ASC, (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (NOT (vt0.c0)) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE RTRIM)OR(vt0.c0 COLLATE NOCASE)))AND((vt0.c0 IN ()))) ASC, (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0))));
SELECT * FROM vt0 WHERE ((((~ (vt0.c0))) IS FALSE)) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM vt0 WHERE ((((~ (vt0.c0))) IS FALSE)) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM vt0 WHERE ((((~ (vt0.c0))) IS FALSE)) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (-704712286);
SELECT SUM(count) FROM (SELECT ALL ((-704712286) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (-704712286);
SELECT SUM(count) FROM (SELECT ALL ((-704712286) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (-704712286);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) NOTNULL)))=(('109114371')))) ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOTNULL)))=(('109114371')))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) NOTNULL)))=(('109114371')))) ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOTNULL)))=(('109114371')))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) NOTNULL)))=(('109114371')))) ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN x'd15c' THEN (((vt0.c0, '-1038234947', vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, '1596351705', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ELSE (+ (vt0.c0)) END DESC, CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0X51e18a47 END AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN x'd15c' THEN (((vt0.c0, '-1038234947', vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, '1596351705', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ELSE (+ (vt0.c0)) END DESC, CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0X51e18a47 END AS REAL));
SELECT COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN x'd15c' THEN (((vt0.c0, '-1038234947', vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, '1596351705', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ELSE (+ (vt0.c0)) END DESC, CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0X51e18a47 END AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN x'd15c' THEN (((vt0.c0, '-1038234947', vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, '1596351705', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ELSE (+ (vt0.c0)) END DESC, CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0X51e18a47 END AS REAL));
SELECT COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN x'd15c' THEN (((vt0.c0, '-1038234947', vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, '1596351705', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ELSE (+ (vt0.c0)) END DESC, CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0X51e18a47 END AS REAL);
SELECT * FROM vt0 WHERE (((((((vt0.c0)*(vt0.c0)))AND(((vt0.c0)&(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)*(vt0.c0)))AND(((vt0.c0)&(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)*(vt0.c0)))AND(((vt0.c0)&(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)*(vt0.c0)))AND(((vt0.c0)&(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)*(vt0.c0)))AND(((vt0.c0)&(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND ((0.5399144671092502)))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND ((0.5399144671092502)))) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND ((0.5399144671092502)))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND ((0.5399144671092502)))) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND ((0.5399144671092502)))) ORDER BY NULL ASC;
SELECT * FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE BINARY) ORDER BY (((+ ('-905665127')))LIKE(((vt0.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((+ ('-905665127')))LIKE(((vt0.c0) IS TRUE)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE BINARY) ORDER BY (((+ ('-905665127')))LIKE(((vt0.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((+ ('-905665127')))LIKE(((vt0.c0) IS TRUE)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE BINARY) ORDER BY (((+ ('-905665127')))LIKE(((vt0.c0) IS TRUE)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((x'')-(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'')-(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((x'')-(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'')-(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((x'')-(vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)/(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)/(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)/(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)/(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)/(vt0.c0)) AS TEXT));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)IS NOT('220581843'))) ORDER BY (((- (vt0.c0))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)IS NOT('220581843'))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0))) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)IS NOT('220581843'))) ORDER BY (((- (vt0.c0))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)IS NOT('220581843'))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0))) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)IS NOT('220581843'))) ORDER BY (((- (vt0.c0))) IS FALSE) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, '0.18539917580291854', vt0.c0, vt0.c0)))) AND (((vt0.c0)>(vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE)<<(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, '0.18539917580291854', vt0.c0, vt0.c0)))) AND (((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)<<(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST, vt0.c0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, '0.18539917580291854', vt0.c0, vt0.c0)))) AND (((vt0.c0)>(vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE)<<(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, '0.18539917580291854', vt0.c0, vt0.c0)))) AND (((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)<<(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST, vt0.c0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, '0.18539917580291854', vt0.c0, vt0.c0)))) AND (((vt0.c0)>(vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE)<<(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST, vt0.c0;
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(DISTINCT ((vt0.c0)|(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((vt0.c0)|(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(DISTINCT ((vt0.c0)|(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((vt0.c0)|(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(DISTINCT ((vt0.c0)|(vt0.c0))));
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)IS(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))AND((- (vt0.c0)))))OR(vt0.c0)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)IS(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))AND((- (vt0.c0)))))OR(vt0.c0)))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)IS(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))AND((- (vt0.c0)))))OR(vt0.c0)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)IS(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))AND((- (vt0.c0)))))OR(vt0.c0)))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)IS(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))AND((- (vt0.c0)))))OR(vt0.c0)))AND(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM COLLATE RTRIM) ORDER BY CAST(((vt0.c0)+(NULL)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)+(NULL)) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM COLLATE RTRIM) ORDER BY CAST(((vt0.c0)+(NULL)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)+(NULL)) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM COLLATE RTRIM) ORDER BY CAST(((vt0.c0)+(NULL)) AS REAL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))&(((vt0.c0) NOT BETWEEN ('') AND ('1335057635')))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))&(((vt0.c0) NOT BETWEEN ('') AND ('1335057635'))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))&(((vt0.c0) NOT BETWEEN ('') AND ('1335057635')))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))&(((vt0.c0) NOT BETWEEN ('') AND ('1335057635'))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))&(((vt0.c0) NOT BETWEEN ('') AND ('1335057635')))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)) ORDER BY ((((vt0.c0)<<(vt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<<(vt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)) ORDER BY ((((vt0.c0)<<(vt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<<(vt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)) ORDER BY ((((vt0.c0)<<(vt0.c0))) IS FALSE);
SELECT * FROM vt0 WHERE (((HEX(vt0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((HEX(vt0.c0)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((HEX(vt0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((HEX(vt0.c0)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((HEX(vt0.c0)) NOTNULL));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)LIKE(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)LIKE(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)LIKE(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)LIKE(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)LIKE(vt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE ((vt0.c0)-(vt0.c0))  WHEN x'' THEN vt0.c0 COLLATE BINARY END, 0.24456865222303836, ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))&((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)-(vt0.c0))  WHEN x'' THEN vt0.c0 COLLATE BINARY END, 0.24456865222303836, ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))&((- (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE ((vt0.c0)-(vt0.c0))  WHEN x'' THEN vt0.c0 COLLATE BINARY END, 0.24456865222303836, ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))&((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)-(vt0.c0))  WHEN x'' THEN vt0.c0 COLLATE BINARY END, 0.24456865222303836, ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))&((- (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE ((vt0.c0)-(vt0.c0))  WHEN x'' THEN vt0.c0 COLLATE BINARY END, 0.24456865222303836, ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))&((- (vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0))) ORDER BY NULL ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN 0xffffffff94c04359 WHEN ABS(vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c0 IN ()) THEN 0Xffffffff94c04359 WHEN ABS(vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN 0xffffffff94c04359 WHEN ABS(vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c0 IN ()) THEN 0Xffffffff94c04359 WHEN ABS(vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN 0xffffffff94c04359 WHEN ABS(vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) END);
SELECT * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))IS NOT('1177647309'))) ORDER BY ((((vt0.c0)<(vt0.c0)))IS(((((x'')AND(vt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST, IFNULL(vt0.c0 COLLATE RTRIM, ((vt0.c0)&(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c0)))IS NOT('1177647309'))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<(vt0.c0)))IS(((((x'')AND(vt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST, IFNULL(vt0.c0 COLLATE RTRIM, ((vt0.c0)&(vt0.c0))) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))IS NOT('1177647309'))) ORDER BY ((((vt0.c0)<(vt0.c0)))IS(((((x'')AND(vt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST, IFNULL(vt0.c0 COLLATE RTRIM, ((vt0.c0)&(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c0)))IS NOT('1177647309'))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<(vt0.c0)))IS(((((x'')AND(vt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST, IFNULL(vt0.c0 COLLATE RTRIM, ((vt0.c0)&(vt0.c0))) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))IS NOT('1177647309'))) ORDER BY ((((vt0.c0)<(vt0.c0)))IS(((((x'')AND(vt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST, IFNULL(vt0.c0 COLLATE RTRIM, ((vt0.c0)&(vt0.c0))) DESC;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)||(vt0.c0)), (+ (vt0.c0)), CAST(vt0.c0 AS BLOB)))>=((((0X73df7c04) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0, (vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)||(vt0.c0)), (+ (vt0.c0)), CAST(vt0.c0 AS BLOB)))>=((((0X73df7c04) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0, (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)||(vt0.c0)), (+ (vt0.c0)), CAST(vt0.c0 AS BLOB)))>=((((0X73df7c04) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0, (vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)||(vt0.c0)), (+ (vt0.c0)), CAST(vt0.c0 AS BLOB)))>=((((0X73df7c04) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0, (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)||(vt0.c0)), (+ (vt0.c0)), CAST(vt0.c0 AS BLOB)))>=((((0X73df7c04) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0, (vt0.c0 IN ())))));
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.20142912421516068 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '-908319206' THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.20142912421516068 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '-908319206' THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.20142912421516068 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '-908319206' THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.20142912421516068 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '-908319206' THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.20142912421516068 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '-908319206' THEN vt0.c0 ELSE vt0.c0 END END);
SELECT * FROM vt0 WHERE ((((((vt0.c0)>(vt0.c0))))>((CAST(vt0.c0 AS REAL))))) ORDER BY (((vt0.c0)) BETWEEN (('tK')) AND ((((vt0.c0)*(vt0.c0)))))  NULLS FIRST, (- (CAST(vt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)>(vt0.c0))))>((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (('tK')) AND ((((vt0.c0)*(vt0.c0)))))  NULLS FIRST, (- (CAST(vt0.c0 AS INTEGER))) ASC);
SELECT * FROM vt0 WHERE ((((((vt0.c0)>(vt0.c0))))>((CAST(vt0.c0 AS REAL))))) ORDER BY (((vt0.c0)) BETWEEN (('tK')) AND ((((vt0.c0)*(vt0.c0)))))  NULLS FIRST, (- (CAST(vt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)>(vt0.c0))))>((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (('tK')) AND ((((vt0.c0)*(vt0.c0)))))  NULLS FIRST, (- (CAST(vt0.c0 AS INTEGER))) ASC);
SELECT * FROM vt0 WHERE ((((((vt0.c0)>(vt0.c0))))>((CAST(vt0.c0 AS REAL))))) ORDER BY (((vt0.c0)) BETWEEN (('tK')) AND ((((vt0.c0)*(vt0.c0)))))  NULLS FIRST, (- (CAST(vt0.c0 AS INTEGER))) ASC;
SELECT * FROM vt0 WHERE (((HEX(vt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((HEX(vt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((HEX(vt0.c0)) IS FALSE));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM ASC, ((((vt0.c0) ISNULL))>>(((vt0.c0)%(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM ASC, ((((vt0.c0) ISNULL))>>(((vt0.c0)%(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM ASC, ((((vt0.c0) ISNULL))>>(((vt0.c0)%(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM ASC, ((((vt0.c0) ISNULL))>>(((vt0.c0)%(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM ASC, ((((vt0.c0) ISNULL))>>(((vt0.c0)%(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT (+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (+ (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT (+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (+ (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT (+ (vt0.c0))));
SELECT * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0) IS FALSE)));
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))+(json(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))+(json(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))+(json(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))+(json(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((- (vt0.c0)))<(vt0.c0))) ORDER BY LIKELIHOOD(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, 0.046840395377990784) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))<(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, 0.046840395377990784) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((- (vt0.c0)))<(vt0.c0))) ORDER BY LIKELIHOOD(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, 0.046840395377990784) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))<(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, 0.046840395377990784) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((- (vt0.c0)))<(vt0.c0))) ORDER BY LIKELIHOOD(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, 0.046840395377990784) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) ISNULL))));
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)+(vt0.c0)) COLLATE BINARY) ORDER BY (((((vt0.c0) ISNULL)))!=((((vt0.c0)LIKE(vt0.c0)))))  NULLS LAST, CAST((NOT (vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)+(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) ISNULL)))!=((((vt0.c0)LIKE(vt0.c0)))))  NULLS LAST, CAST((NOT (vt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)+(vt0.c0)) COLLATE BINARY) ORDER BY (((((vt0.c0) ISNULL)))!=((((vt0.c0)LIKE(vt0.c0)))))  NULLS LAST, CAST((NOT (vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)+(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) ISNULL)))!=((((vt0.c0)LIKE(vt0.c0)))))  NULLS LAST, CAST((NOT (vt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)+(vt0.c0)) COLLATE BINARY) ORDER BY (((((vt0.c0) ISNULL)))!=((((vt0.c0)LIKE(vt0.c0)))))  NULLS LAST, CAST((NOT (vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0))))>=(((vt0.c0 IN (vt0.c0, vt0.c0)))))) ORDER BY UPPER(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(x'')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)%(vt0.c0))))>=(((vt0.c0 IN (vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY UPPER(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(x'')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ASC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0))))>=(((vt0.c0 IN (vt0.c0, vt0.c0)))))) ORDER BY UPPER(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(x'')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)%(vt0.c0))))>=(((vt0.c0 IN (vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY UPPER(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(x'')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ASC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0))))>=(((vt0.c0 IN (vt0.c0, vt0.c0)))))) ORDER BY UPPER(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(x'')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))==((vt0.c0 IN ()))) ASC  NULLS LAST, LIKELY((+ (vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))==((vt0.c0 IN ()))) ASC  NULLS LAST, LIKELY((+ (vt0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))==((vt0.c0 IN ()))) ASC  NULLS LAST, LIKELY((+ (vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))==((vt0.c0 IN ()))) ASC  NULLS LAST, LIKELY((+ (vt0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))==((vt0.c0 IN ()))) ASC  NULLS LAST, LIKELY((+ (vt0.c0))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN ()), vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS BLOB), (~ (vt0.c0)))) AND ((vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS INTEGER), ((vt0.c0)>=(vt0.c0)), (vt0.c0 IN ('c2ag')), ((vt0.c0) NOT BETWEEN (0.16334936823908885) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN ()), vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS BLOB), (~ (vt0.c0)))) AND ((vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS INTEGER), ((vt0.c0)>=(vt0.c0)), (vt0.c0 IN ('c2ag')), ((vt0.c0) NOT BETWEEN (0.16334936823908885) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN ()), vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS BLOB), (~ (vt0.c0)))) AND ((vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS INTEGER), ((vt0.c0)>=(vt0.c0)), (vt0.c0 IN ('c2ag')), ((vt0.c0) NOT BETWEEN (0.16334936823908885) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN ()), vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS BLOB), (~ (vt0.c0)))) AND ((vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS INTEGER), ((vt0.c0)>=(vt0.c0)), (vt0.c0 IN ('c2ag')), ((vt0.c0) NOT BETWEEN (0.16334936823908885) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN ()), vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS BLOB), (~ (vt0.c0)))) AND ((vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS INTEGER), ((vt0.c0)>=(vt0.c0)), (vt0.c0 IN ('c2ag')), ((vt0.c0) NOT BETWEEN (0.16334936823908885) AND (vt0.c0))))));
SELECT * FROM vt0 WHERE (LIKELIHOOD(((vt0.c0)*(vt0.c0)), 0.2466405324738885));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt0.c0)*(vt0.c0)), 0.2466405324738885)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKELIHOOD(((vt0.c0)*(vt0.c0)), 0.2466405324738885));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt0.c0)*(vt0.c0)), 0.2466405324738885)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKELIHOOD(((vt0.c0)*(vt0.c0)), 0.2466405324738885));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) IS TRUE)) ORDER BY (((vt0.c0)>(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)>(vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) IS TRUE)) ORDER BY (((vt0.c0)>(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)>(vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) IS TRUE)) ORDER BY (((vt0.c0)>(vt0.c0)) IN ()) ASC;
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOT NULL)) ORDER BY CAST(LIKELIHOOD(DISTINCT vt0.c0, 0.3618398262556499) AS TEXT) DESC  NULLS FIRST, CASE (vt0.c0 IN ())  WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) NOT NULL) END;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(LIKELIHOOD(DISTINCT vt0.c0, 0.3618398262556499) AS TEXT) DESC  NULLS FIRST, CASE (vt0.c0 IN ())  WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) NOT NULL) END);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOT NULL)) ORDER BY CAST(LIKELIHOOD(DISTINCT vt0.c0, 0.3618398262556499) AS TEXT) DESC  NULLS FIRST, CASE (vt0.c0 IN ())  WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) NOT NULL) END;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(LIKELIHOOD(DISTINCT vt0.c0, 0.3618398262556499) AS TEXT) DESC  NULLS FIRST, CASE (vt0.c0 IN ())  WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) NOT NULL) END);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOT NULL)) ORDER BY CAST(LIKELIHOOD(DISTINCT vt0.c0, 0.3618398262556499) AS TEXT) DESC  NULLS FIRST, CASE (vt0.c0 IN ())  WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) NOT NULL) END;
SELECT ALL * FROM vt0 WHERE ((((NULL)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY)))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((NULL)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY)))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((NULL)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY)))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN IFNULL(vt0.c0, vt0.c0) THEN (NOT (vt0.c0)) ELSE ABS(DISTINCT vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN IFNULL(vt0.c0, vt0.c0) THEN (NOT (vt0.c0)) ELSE ABS(DISTINCT vt0.c0) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN IFNULL(vt0.c0, vt0.c0) THEN (NOT (vt0.c0)) ELSE ABS(DISTINCT vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN IFNULL(vt0.c0, vt0.c0) THEN (NOT (vt0.c0)) ELSE ABS(DISTINCT vt0.c0) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN IFNULL(vt0.c0, vt0.c0) THEN (NOT (vt0.c0)) ELSE ABS(DISTINCT vt0.c0) END);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((('-1342852788')&(vt0.c0)), vt0.c0 COLLATE RTRIM, IFNULL(vt0.c0, vt0.c0))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (~ (vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((('-1342852788')&(vt0.c0)), vt0.c0 COLLATE RTRIM, IFNULL(vt0.c0, vt0.c0))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (~ (vt0.c0))))) DESC);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((('-1342852788')&(vt0.c0)), vt0.c0 COLLATE RTRIM, IFNULL(vt0.c0, vt0.c0))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (~ (vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((('-1342852788')&(vt0.c0)), vt0.c0 COLLATE RTRIM, IFNULL(vt0.c0, vt0.c0))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (~ (vt0.c0))))) DESC);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((('-1342852788')&(vt0.c0)), vt0.c0 COLLATE RTRIM, IFNULL(vt0.c0, vt0.c0))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (~ (vt0.c0))))) DESC;
SELECT ALL * FROM vt0 WHERE (((CAST(x'' AS NUMERIC)) NOT BETWEEN (((x'7099')OR(vt0.c0))) AND (vt0.c0))) ORDER BY '747714268'  NULLS LAST, (((vt0.c0 COLLATE NOCASE))<=((((vt0.c0) NOTNULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS NUMERIC)) NOT BETWEEN (((x'7099')OR(vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY '747714268'  NULLS LAST, (((vt0.c0 COLLATE NOCASE))<=((((vt0.c0) NOTNULL)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CAST(x'' AS NUMERIC)) NOT BETWEEN (((x'7099')OR(vt0.c0))) AND (vt0.c0))) ORDER BY '747714268'  NULLS LAST, (((vt0.c0 COLLATE NOCASE))<=((((vt0.c0) NOTNULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS NUMERIC)) NOT BETWEEN (((x'7099')OR(vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY '747714268'  NULLS LAST, (((vt0.c0 COLLATE NOCASE))<=((((vt0.c0) NOTNULL)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CAST(x'' AS NUMERIC)) NOT BETWEEN (((x'7099')OR(vt0.c0))) AND (vt0.c0))) ORDER BY '747714268'  NULLS LAST, (((vt0.c0 COLLATE NOCASE))<=((((vt0.c0) NOTNULL)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN (0.139199855362096)));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN (0.139199855362096))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN (0.139199855362096)));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN (0.139199855362096))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN (0.139199855362096)));
SELECT COUNT(*) FROM vt0 WHERE (ABS(DISTINCT (vt0.c0 IN ()))) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)>>(vt0.c0)) ELSE vt0.c0 COLLATE BINARY END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)>>(vt0.c0)) ELSE vt0.c0 COLLATE BINARY END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (ABS(DISTINCT (vt0.c0 IN ()))) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)>>(vt0.c0)) ELSE vt0.c0 COLLATE BINARY END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)>>(vt0.c0)) ELSE vt0.c0 COLLATE BINARY END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (ABS(DISTINCT (vt0.c0 IN ()))) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)>>(vt0.c0)) ELSE vt0.c0 COLLATE BINARY END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)>=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)>=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)>=(vt0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((+ (vt0.c0)))))AND(((vt0.c0) IS FALSE))))AND(vt0.c0 COLLATE BINARY))) ORDER BY ((vt0.c0 COLLATE NOCASE)=((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((+ (vt0.c0)))))AND(((vt0.c0) IS FALSE))))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)==((NOT (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((+ (vt0.c0)))))AND(((vt0.c0) IS FALSE))))AND(vt0.c0 COLLATE BINARY))) ORDER BY ((vt0.c0 COLLATE NOCASE)=((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((+ (vt0.c0)))))AND(((vt0.c0) IS FALSE))))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)==((NOT (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((+ (vt0.c0)))))AND(((vt0.c0) IS FALSE))))AND(vt0.c0 COLLATE BINARY))) ORDER BY ((vt0.c0 COLLATE NOCASE)=((NOT (vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)LIKE(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)LIKE(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)LIKE(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)LIKE(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)LIKE(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE (vt0.c0 IN ()) END) ORDER BY ((((CAST('%-2GBLTT[*]' AS REAL))AND(TRIM(vt0.c0))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, (((- (vt0.c0)))&((NOT ('197757321')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST('%-2GBLTT[*]' AS REAL))AND(TRIM(vt0.c0))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, (((- (vt0.c0)))&((NOT ('197757321')))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE (vt0.c0 IN ()) END) ORDER BY ((((CAST('%-2GBLTT[*]' AS REAL))AND(TRIM(vt0.c0))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, (((- (vt0.c0)))&((NOT ('197757321')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST('%-2GBLTT[*]' AS REAL))AND(TRIM(vt0.c0))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, (((- (vt0.c0)))&((NOT ('197757321')))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE (vt0.c0 IN ()) END) ORDER BY ((((CAST('%-2GBLTT[*]' AS REAL))AND(TRIM(vt0.c0))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, (((- (vt0.c0)))&((NOT ('197757321')))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (vt0.c0 IN (vt0.c0)) THEN ((NULL) NOTNULL) ELSE (vt0.c0 IN ()) END) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((0xffffffffa2940531) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (vt0.c0 IN (vt0.c0)) THEN ((NULL) NOTNULL) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((0Xffffffffa2940531) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (vt0.c0 IN (vt0.c0)) THEN ((NULL) NOTNULL) ELSE (vt0.c0 IN ()) END) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((0xffffffffa2940531) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (vt0.c0 IN (vt0.c0)) THEN ((NULL) NOTNULL) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((0Xffffffffa2940531) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (vt0.c0 IN (vt0.c0)) THEN ((NULL) NOTNULL) ELSE (vt0.c0 IN ()) END) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((0xffffffffa2940531) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, 'mw')))) ISNULL)  NULLS LAST, '-1445584257' DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, 'mw')))) ISNULL)  NULLS LAST, '-1445584257' DESC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, 'mw')))) ISNULL)  NULLS LAST, '-1445584257' DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, 'mw')))) ISNULL)  NULLS LAST, '-1445584257' DESC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, 'mw')))) ISNULL)  NULLS LAST, '-1445584257' DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS(vt0.c0)))) AND ((((vt0.c0) IS FALSE))))) ORDER BY CASE WHEN NULL THEN ((vt0.c0)>=(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS(vt0.c0)))) AND ((((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN NULL THEN ((vt0.c0)>=(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS(vt0.c0)))) AND ((((vt0.c0) IS FALSE))))) ORDER BY CASE WHEN NULL THEN ((vt0.c0)>=(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS(vt0.c0)))) AND ((((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN NULL THEN ((vt0.c0)>=(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS(vt0.c0)))) AND ((((vt0.c0) IS FALSE))))) ORDER BY CASE WHEN NULL THEN ((vt0.c0)>=(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END ASC;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (CAST(vt0.c0 AS TEXT)))) ORDER BY ((((vt0.c0) ISNULL))!=(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL))<>(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (CAST(vt0.c0 AS TEXT)))) ORDER BY ((((vt0.c0) ISNULL))!=(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL))<>(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (CAST(vt0.c0 AS TEXT)))) ORDER BY ((((vt0.c0) ISNULL))!=(vt0.c0));
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((+ (vt0.c0)))AND(TYPEOF(DISTINCT vt0.c0))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS FIRST, LIKELY(DISTINCT (NOT (vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((+ (vt0.c0)))AND(TYPEOF(DISTINCT vt0.c0))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS FIRST, LIKELY(DISTINCT (NOT (vt0.c0))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((+ (vt0.c0)))AND(TYPEOF(DISTINCT vt0.c0))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS FIRST, LIKELY(DISTINCT (NOT (vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((+ (vt0.c0)))AND(TYPEOF(DISTINCT vt0.c0))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS FIRST, LIKELY(DISTINCT (NOT (vt0.c0))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((+ (vt0.c0)))AND(TYPEOF(DISTINCT vt0.c0))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS FIRST, LIKELY(DISTINCT (NOT (vt0.c0))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(0x87c09b0))) ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN (vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(0x87c09b0))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(0x87c09b0))) ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN (vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(0x87c09b0))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(0x87c09b0))) ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) IS FALSE)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)&(vt0.c0)))-(load_extension(vt0.c0)))) ORDER BY ((vt0.c0)<<(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c0)))-(load_extension(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<<(vt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)&(vt0.c0)))-(load_extension(vt0.c0)))) ORDER BY ((vt0.c0)<<(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c0)))-(load_extension(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<<(vt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (IFNULL(vt0.c0, vt0.c0)) AND (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (IFNULL(vt0.c0, vt0.c0)) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (IFNULL(vt0.c0, vt0.c0)) AND (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (IFNULL(vt0.c0, vt0.c0)) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (IFNULL(vt0.c0, vt0.c0)) AND (CAST(vt0.c0 AS BLOB))));
SELECT COUNT(*) FROM vt0 WHERE (LOWER(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))!=(((vt0.c0)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))!=(((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))!=(((vt0.c0)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))!=(((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))!=(((vt0.c0)OR(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((0Xfffffffff92425c8 COLLATE NOCASE) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((x'')OR(-1481868124)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0Xfffffffff92425c8 COLLATE NOCASE) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((x'')OR(-1481868124)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((0Xfffffffff92425c8 COLLATE NOCASE) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((x'')OR(-1481868124)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0Xfffffffff92425c8 COLLATE NOCASE) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((x'')OR(-1481868124)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((0Xfffffffff92425c8 COLLATE NOCASE) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((x'')OR(-1481868124)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE ((((((- (vt0.c0)))AND(SQLITE_VERSION())))OR(CASE vt0.c0  WHEN vt0.c0 THEN 0xffffffffdeb52b70 ELSE vt0.c0 END))) ORDER BY CASE WHEN ((vt0.c0)IS(vt0.c0)) THEN (((1.229531851E9, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END ASC  NULLS FIRST, 0xffffffffaff5b14c;
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt0.c0)))AND(SQLITE_VERSION())))OR(CASE vt0.c0  WHEN vt0.c0 THEN 0xffffffffdeb52b70 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)IS(vt0.c0)) THEN (((1.229531851E9, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END ASC  NULLS FIRST, 0Xffffffffaff5b14c);
SELECT ALL * FROM vt0 WHERE ((((((- (vt0.c0)))AND(SQLITE_VERSION())))OR(CASE vt0.c0  WHEN vt0.c0 THEN 0xffffffffdeb52b70 ELSE vt0.c0 END))) ORDER BY CASE WHEN ((vt0.c0)IS(vt0.c0)) THEN (((1.229531851E9, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END ASC  NULLS FIRST, 0xffffffffaff5b14c;
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt0.c0)))AND(SQLITE_VERSION())))OR(CASE vt0.c0  WHEN vt0.c0 THEN 0xffffffffdeb52b70 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)IS(vt0.c0)) THEN (((1.229531851E9, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END ASC  NULLS FIRST, 0Xffffffffaff5b14c);
SELECT ALL * FROM vt0 WHERE ((((((- (vt0.c0)))AND(SQLITE_VERSION())))OR(CASE vt0.c0  WHEN vt0.c0 THEN 0xffffffffdeb52b70 ELSE vt0.c0 END))) ORDER BY CASE WHEN ((vt0.c0)IS(vt0.c0)) THEN (((1.229531851E9, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END ASC  NULLS FIRST, 0xffffffffaff5b14c;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((x'064f') BETWEEN (vt0.c0) AND (vt0.c0)))AND((- (NULL)))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(((vt0.c0) NOTNULL))))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('8l')))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((x'064f') BETWEEN (vt0.c0) AND (vt0.c0)))AND((- (NULL)))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(((vt0.c0) NOTNULL))))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('8l')))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((x'064f') BETWEEN (vt0.c0) AND (vt0.c0)))AND((- (NULL)))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(((vt0.c0) NOTNULL))))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('8l')))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((x'064f') BETWEEN (vt0.c0) AND (vt0.c0)))AND((- (NULL)))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(((vt0.c0) NOTNULL))))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('8l')))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((x'064f') BETWEEN (vt0.c0) AND (vt0.c0)))AND((- (NULL)))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(((vt0.c0) NOTNULL))))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('8l')))AND(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (json_array_length(((((vt0.c0)AND(NULL)))OR(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_array_length(((((vt0.c0)AND(NULL)))OR(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (json_array_length(((((vt0.c0)AND(NULL)))OR(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_array_length(((((vt0.c0)AND(NULL)))OR(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>(vt0.c0))) ORDER BY CAST((vt0.c0 IN ()) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>(vt0.c0))) ORDER BY CAST((vt0.c0 IN ()) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>(vt0.c0))) ORDER BY CAST((vt0.c0 IN ()) AS TEXT) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ('s''') ORDER BY ((- (vt0.c0)) IN ())  NULLS FIRST, ((vt0.c0 COLLATE RTRIM) BETWEEN ((((vt0.c0, vt0.c0, '1978306246', NULL, vt0.c0))<=((vt0.c0, vt0.c0, NULL, vt0.c0, vt0.c0)))) AND ((vt0.c0 IN (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('s''') IS TRUE)  as count FROM vt0 ORDER BY ((- (vt0.c0)) IN ())  NULLS FIRST, ((vt0.c0 COLLATE RTRIM) BETWEEN ((((vt0.c0, vt0.c0, '1978306246', NULL, vt0.c0))<=((vt0.c0, vt0.c0, NULL, vt0.c0, vt0.c0)))) AND ((vt0.c0 IN (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('s''') ORDER BY ((- (vt0.c0)) IN ())  NULLS FIRST, ((vt0.c0 COLLATE RTRIM) BETWEEN ((((vt0.c0, vt0.c0, '1978306246', NULL, vt0.c0))<=((vt0.c0, vt0.c0, NULL, vt0.c0, vt0.c0)))) AND ((vt0.c0 IN (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('s''') IS TRUE)  as count FROM vt0 ORDER BY ((- (vt0.c0)) IN ())  NULLS FIRST, ((vt0.c0 COLLATE RTRIM) BETWEEN ((((vt0.c0, vt0.c0, '1978306246', NULL, vt0.c0))<=((vt0.c0, vt0.c0, NULL, vt0.c0, vt0.c0)))) AND ((vt0.c0 IN (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('s''') ORDER BY ((- (vt0.c0)) IN ())  NULLS FIRST, ((vt0.c0 COLLATE RTRIM) BETWEEN ((((vt0.c0, vt0.c0, '1978306246', NULL, vt0.c0))<=((vt0.c0, vt0.c0, NULL, vt0.c0, vt0.c0)))) AND ((vt0.c0 IN (vt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((((vt0.c0)>>(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE -1.412283495E9 END)))OR(((vt0.c0)IS NOT(vt0.c0)))))AND(CAST(vt0.c0 AS REAL))))AND(((((vt0.c0)OR('0.175938039245098')))OR(vt0.c0)))))OR('-1395891529')))OR(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0)>>(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE -1.412283495E9 END)))OR(((vt0.c0)IS NOT(vt0.c0)))))AND(CAST(vt0.c0 AS REAL))))AND(((((vt0.c0)OR('0.175938039245098')))OR(vt0.c0)))))OR('-1395891529')))OR(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((((vt0.c0)>>(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE -1.412283495E9 END)))OR(((vt0.c0)IS NOT(vt0.c0)))))AND(CAST(vt0.c0 AS REAL))))AND(((((vt0.c0)OR('0.175938039245098')))OR(vt0.c0)))))OR('-1395891529')))OR(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0)>>(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE -1.412283495E9 END)))OR(((vt0.c0)IS NOT(vt0.c0)))))AND(CAST(vt0.c0 AS REAL))))AND(((((vt0.c0)OR('0.175938039245098')))OR(vt0.c0)))))OR('-1395891529')))OR(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((((vt0.c0)>>(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE -1.412283495E9 END)))OR(((vt0.c0)IS NOT(vt0.c0)))))AND(CAST(vt0.c0 AS REAL))))AND(((((vt0.c0)OR('0.175938039245098')))OR(vt0.c0)))))OR('-1395891529')))OR(((vt0.c0) ISNULL))));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((ABS(vt0.c0))|(json_valid(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((ABS(vt0.c0))|(json_valid(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((ABS(vt0.c0))|(json_valid(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((ABS(vt0.c0))|(json_valid(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((ABS(vt0.c0))|(json_valid(vt0.c0))));
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS REAL) DESC, ((((UNICODE('⒉?'))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'vG' THEN vt0.c0 END)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -1.98560389E9 WHEN vt0.c0 THEN vt0.c0 WHEN 957859125 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS REAL) DESC, ((((UNICODE('⒉?'))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'vG' THEN vt0.c0 END)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -1.98560389E9 WHEN vt0.c0 THEN vt0.c0 WHEN 957859125 THEN vt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS REAL) DESC, ((((UNICODE('⒉?'))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'vG' THEN vt0.c0 END)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -1.98560389E9 WHEN vt0.c0 THEN vt0.c0 WHEN 957859125 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS REAL) DESC, ((((UNICODE('⒉?'))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'vG' THEN vt0.c0 END)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -1.98560389E9 WHEN vt0.c0 THEN vt0.c0 WHEN 957859125 THEN vt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS REAL) DESC, ((((UNICODE('⒉?'))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'vG' THEN vt0.c0 END)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -1.98560389E9 WHEN vt0.c0 THEN vt0.c0 WHEN 957859125 THEN vt0.c0 END))  NULLS LAST;
SELECT * FROM vt0 WHERE (HEX(DISTINCT CAST(vt0.c0 AS INTEGER))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (HEX(DISTINCT CAST(vt0.c0 AS INTEGER))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (HEX(DISTINCT CAST(vt0.c0 AS INTEGER))) ORDER BY vt0.c0;
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND((((vt0.c0, -2.136450668E9, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))))AND(vt0.c0)))AND(CAST(vt0.c0 AS REAL))))OR(ABS('^c'))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND((((vt0.c0, -2.136450668E9, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))))AND(vt0.c0)))AND(CAST(vt0.c0 AS REAL))))OR(ABS('^c'))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND((((vt0.c0, -2.136450668E9, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))))AND(vt0.c0)))AND(CAST(vt0.c0 AS REAL))))OR(ABS('^c'))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND((((vt0.c0, -2.136450668E9, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))))AND(vt0.c0)))AND(CAST(vt0.c0 AS REAL))))OR(ABS('^c'))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND((((vt0.c0, -2.136450668E9, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))))AND(vt0.c0)))AND(CAST(vt0.c0 AS REAL))))OR(ABS('^c'))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) IS FALSE) IN (vt0.c0))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS FALSE) IN (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<(vt0.c0)) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) IS FALSE) IN (vt0.c0))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS FALSE) IN (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<(vt0.c0)) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) IS FALSE) IN (vt0.c0))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<(vt0.c0)) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)*(vt0.c0))))<=((0x4ef01cd3 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)*(vt0.c0))))<=((0X4ef01cd3 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)*(vt0.c0))))<=((0x4ef01cd3 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)*(vt0.c0))))<=((0X4ef01cd3 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)*(vt0.c0))))<=((0x4ef01cd3 COLLATE BINARY))));
SELECT COUNT(*) FROM vt0 WHERE (((+ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((+ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((+ (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN (vt0.c0 IN ()) END) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR('')))OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, json_patch(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)), STRFTIME(vt0.c0, vt0.c0, vt0.c0)) DESC, 0.16334936823908885  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR('')))OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, json_patch(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)), STRFTIME(vt0.c0, vt0.c0, vt0.c0)) DESC, 0.16334936823908885  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN (vt0.c0 IN ()) END) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR('')))OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, json_patch(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)), STRFTIME(vt0.c0, vt0.c0, vt0.c0)) DESC, 0.16334936823908885  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR('')))OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, json_patch(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)), STRFTIME(vt0.c0, vt0.c0, vt0.c0)) DESC, 0.16334936823908885  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN (vt0.c0 IN ()) END) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))OR('')))OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, json_patch(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)), STRFTIME(vt0.c0, vt0.c0, vt0.c0)) DESC, 0.16334936823908885  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), IFNULL(vt0.c0, vt0.c0), CAST(vt0.c0 AS BLOB))) AND ((0.7200401375496697, UNLIKELY(DISTINCT vt0.c0), ((vt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), IFNULL(vt0.c0, vt0.c0), CAST(vt0.c0 AS BLOB))) AND ((0.7200401375496697, UNLIKELY(DISTINCT vt0.c0), ((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), IFNULL(vt0.c0, vt0.c0), CAST(vt0.c0 AS BLOB))) AND ((0.7200401375496697, UNLIKELY(DISTINCT vt0.c0), ((vt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), IFNULL(vt0.c0, vt0.c0), CAST(vt0.c0 AS BLOB))) AND ((0.7200401375496697, UNLIKELY(DISTINCT vt0.c0), ((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), IFNULL(vt0.c0, vt0.c0), CAST(vt0.c0 AS BLOB))) AND ((0.7200401375496697, UNLIKELY(DISTINCT vt0.c0), ((vt0.c0) IS TRUE)))));
SELECT ALL * FROM vt0 WHERE (IFNULL(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('1833418055')), ((vt0.c0)||(vt0.c0)))) ORDER BY ((((vt0.c0) ISNULL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('1833418055')), ((vt0.c0)||(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (IFNULL(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('1833418055')), ((vt0.c0)||(vt0.c0)))) ORDER BY ((((vt0.c0) ISNULL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('1833418055')), ((vt0.c0)||(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (IFNULL(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('1833418055')), ((vt0.c0)||(vt0.c0)))) ORDER BY ((((vt0.c0) ISNULL)) NOTNULL)  NULLS FIRST;
SELECT * FROM vt0 NOT INDEXED WHERE (((((vt0.c0)*(0.9865090063431002))) IS FALSE)) ORDER BY CAST(((vt0.c0)AND(vt0.c0)) AS TEXT) DESC  NULLS LAST, CAST(SUBSTR(x'', vt0.c0) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(0.9865090063431002))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)AND(vt0.c0)) AS TEXT) DESC  NULLS LAST, CAST(SUBSTR(x'', vt0.c0) AS REAL) DESC);
SELECT * FROM vt0 NOT INDEXED WHERE (((((vt0.c0)*(0.9865090063431002))) IS FALSE)) ORDER BY CAST(((vt0.c0)AND(vt0.c0)) AS TEXT) DESC  NULLS LAST, CAST(SUBSTR(x'', vt0.c0) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(0.9865090063431002))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)AND(vt0.c0)) AS TEXT) DESC  NULLS LAST, CAST(SUBSTR(x'', vt0.c0) AS REAL) DESC);
SELECT * FROM vt0 NOT INDEXED WHERE (((((vt0.c0)*(0.9865090063431002))) IS FALSE)) ORDER BY CAST(((vt0.c0)AND(vt0.c0)) AS TEXT) DESC  NULLS LAST, CAST(SUBSTR(x'', vt0.c0) AS REAL) DESC;
SELECT COUNT(*) FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) ORDER BY highlight((~ (vt0.c0)), TYPEOF('SDaHdays即'), ((vt0.c0) ISNULL), vt0.c0) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY highlight((~ (vt0.c0)), TYPEOF('SDaHdays即'), ((vt0.c0) ISNULL), vt0.c0) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) ORDER BY highlight((~ (vt0.c0)), TYPEOF('SDaHdays即'), ((vt0.c0) ISNULL), vt0.c0) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY highlight((~ (vt0.c0)), TYPEOF('SDaHdays即'), ((vt0.c0) ISNULL), vt0.c0) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE BINARY) ORDER BY ((vt0.c0) BETWEEN ((+ (vt0.c0))) AND ((vt0.c0 IN (vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN ((+ (vt0.c0))) AND ((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE BINARY) ORDER BY ((vt0.c0) BETWEEN ((+ (vt0.c0))) AND ((vt0.c0 IN (vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN ((+ (vt0.c0))) AND ((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE BINARY) ORDER BY ((vt0.c0) BETWEEN ((+ (vt0.c0))) AND ((vt0.c0 IN (vt0.c0, vt0.c0))));
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS((((vt0.c0))=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS((((vt0.c0))=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS((((vt0.c0))=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS((((vt0.c0))=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS((((vt0.c0))=((vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((vt0.c0)<=((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<=((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((vt0.c0)<=((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<=((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((vt0.c0)<=((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (HEX(DISTINCT UPPER(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT UPPER(DISTINCT vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (HEX(DISTINCT UPPER(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT UPPER(DISTINCT vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (HEX(DISTINCT UPPER(DISTINCT vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((CASE 0.5229060554892482  WHEN vt0.c0 THEN vt0.c0 END)IS NOT(((vt0.c0) ISNULL)))) ORDER BY (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE 0.5229060554892482  WHEN vt0.c0 THEN vt0.c0 END)IS NOT(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ()) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CASE 0.5229060554892482  WHEN vt0.c0 THEN vt0.c0 END)IS NOT(((vt0.c0) ISNULL)))) ORDER BY (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE 0.5229060554892482  WHEN vt0.c0 THEN vt0.c0 END)IS NOT(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ()) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CASE 0.5229060554892482  WHEN vt0.c0 THEN vt0.c0 END)IS NOT(((vt0.c0) ISNULL)))) ORDER BY (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN (vt0.c0)) AS REAL));
SELECT COUNT(*) FROM vt0 WHERE (LOWER(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'f8da' WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'f8da' WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'f8da' WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'f8da' WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'f8da' WHEN vt0.c0 THEN vt0.c0 END));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0)))||(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<<(vt0.c0)))||(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0)))||(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<<(vt0.c0)))||(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0)))||(CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.9777052248130036) ORDER BY ((((vt0.c0)AND(SQLITE_COMPILEOPTION_GET(vt0.c0))))OR(CASE vt0.c0  WHEN '-816214558' THEN vt0.c0 END))  NULLS LAST, CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN CAST(vt0.c0 AS TEXT) THEN LOWER(vt0.c0) ELSE ((vt0.c0)<>(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.9777052248130036) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(SQLITE_COMPILEOPTION_GET(vt0.c0))))OR(CASE vt0.c0  WHEN '-816214558' THEN vt0.c0 END))  NULLS LAST, CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN CAST(vt0.c0 AS TEXT) THEN LOWER(vt0.c0) ELSE ((vt0.c0)<>(vt0.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.9777052248130036) ORDER BY ((((vt0.c0)AND(SQLITE_COMPILEOPTION_GET(vt0.c0))))OR(CASE vt0.c0  WHEN '-816214558' THEN vt0.c0 END))  NULLS LAST, CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN CAST(vt0.c0 AS TEXT) THEN LOWER(vt0.c0) ELSE ((vt0.c0)<>(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.9777052248130036) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(SQLITE_COMPILEOPTION_GET(vt0.c0))))OR(CASE vt0.c0  WHEN '-816214558' THEN vt0.c0 END))  NULLS LAST, CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN CAST(vt0.c0 AS TEXT) THEN LOWER(vt0.c0) ELSE ((vt0.c0)<>(vt0.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.9777052248130036) ORDER BY ((((vt0.c0)AND(SQLITE_COMPILEOPTION_GET(vt0.c0))))OR(CASE vt0.c0  WHEN '-816214558' THEN vt0.c0 END))  NULLS LAST, CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN CAST(vt0.c0 AS TEXT) THEN LOWER(vt0.c0) ELSE ((vt0.c0)<>(vt0.c0)) END ASC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN (vt0.c0))))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN (vt0.c0))))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN (vt0.c0))))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN (vt0.c0))))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN (vt0.c0))))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT * FROM vt0 WHERE ('-1185980734');
SELECT SUM(count) FROM (SELECT ALL (('-1185980734') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('-1185980734');
SELECT SUM(count) FROM (SELECT ALL (('-1185980734') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('-1185980734');
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)||((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)||((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)||((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)||((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)||((vt0.c0 IN ()))));
SELECT ALL * FROM vt0 WHERE ((('') ISNULL)) ORDER BY CAST(0.694718082543863 AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('') ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(0.694718082543863 AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((('') ISNULL)) ORDER BY CAST(0.694718082543863 AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('') ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(0.694718082543863 AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((('') ISNULL)) ORDER BY CAST(0.694718082543863 AS NUMERIC) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((~ (vt0.c0)), vt0.c0, ''))<((((vt0.c0)>=(vt0.c0)), '-0e9', (NOT (vt0.c0)))))) ORDER BY ((((((vt0.c0) NOT BETWEEN (-1826675390) AND (vt0.c0)))OR(vt0.c0)))OR((((vt0.c0))>=((vt0.c0))))) DESC, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((~ (vt0.c0)), vt0.c0, ''))<((((vt0.c0)>=(vt0.c0)), '-0e9', (NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (-1826675390) AND (vt0.c0)))OR(vt0.c0)))OR((((vt0.c0))>=((vt0.c0))))) DESC, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((((~ (vt0.c0)), vt0.c0, ''))<((((vt0.c0)>=(vt0.c0)), '-0e9', (NOT (vt0.c0)))))) ORDER BY ((((((vt0.c0) NOT BETWEEN (-1826675390) AND (vt0.c0)))OR(vt0.c0)))OR((((vt0.c0))>=((vt0.c0))))) DESC, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((~ (vt0.c0)), vt0.c0, ''))<((((vt0.c0)>=(vt0.c0)), '-0e9', (NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (-1826675390) AND (vt0.c0)))OR(vt0.c0)))OR((((vt0.c0))>=((vt0.c0))))) DESC, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((((~ (vt0.c0)), vt0.c0, ''))<((((vt0.c0)>=(vt0.c0)), '-0e9', (NOT (vt0.c0)))))) ORDER BY ((((((vt0.c0) NOT BETWEEN (-1826675390) AND (vt0.c0)))OR(vt0.c0)))OR((((vt0.c0))>=((vt0.c0))))) DESC, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM;
SELECT * FROM vt0 WHERE ((((- (1655564368)))GLOB(CASE WHEN vt0.c0 THEN '-755586744' ELSE vt0.c0 END))) ORDER BY CASE WHEN PRINTF(vt0.c0) THEN (+ (vt0.c0)) ELSE '[t' END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (1655564368)))GLOB(CASE WHEN vt0.c0 THEN '-755586744' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN PRINTF(vt0.c0) THEN (+ (vt0.c0)) ELSE '[t' END ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((- (1655564368)))GLOB(CASE WHEN vt0.c0 THEN '-755586744' ELSE vt0.c0 END))) ORDER BY CASE WHEN PRINTF(vt0.c0) THEN (+ (vt0.c0)) ELSE '[t' END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (1655564368)))GLOB(CASE WHEN vt0.c0 THEN '-755586744' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN PRINTF(vt0.c0) THEN (+ (vt0.c0)) ELSE '[t' END ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((- (1655564368)))GLOB(CASE WHEN vt0.c0 THEN '-755586744' ELSE vt0.c0 END))) ORDER BY CASE WHEN PRINTF(vt0.c0) THEN (+ (vt0.c0)) ELSE '[t' END ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((NULL))<>((vt0.c0))))<(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((NULL))<>((vt0.c0))))<(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((NULL))<>((vt0.c0))))<(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((NULL))<>((vt0.c0))))<(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((NULL))<>((vt0.c0))))<(vt0.c0)));
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (vt0.c0) AND ((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) BETWEEN (vt0.c0) AND ((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (vt0.c0) AND ((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) BETWEEN (vt0.c0) AND ((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (vt0.c0) AND ((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) NOT NULL)) ORDER BY ((((vt0.c0)IS(vt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) NOT NULL)) ORDER BY ((((vt0.c0)IS(vt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) NOT NULL)) ORDER BY ((((vt0.c0)IS(vt0.c0))) IS FALSE);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((('')*(vt0.c0)) IN (TYPEOF(DISTINCT vt0.c0), vt0.c0 COLLATE BINARY)) ASC, (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()), ((vt0.c0) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ((('')*(vt0.c0)) IN (TYPEOF(DISTINCT vt0.c0), vt0.c0 COLLATE BINARY)) ASC, (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()), ((vt0.c0) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((('')*(vt0.c0)) IN (TYPEOF(DISTINCT vt0.c0), vt0.c0 COLLATE BINARY)) ASC, (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()), ((vt0.c0) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ((('')*(vt0.c0)) IN (TYPEOF(DISTINCT vt0.c0), vt0.c0 COLLATE BINARY)) ASC, (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()), ((vt0.c0) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((('')*(vt0.c0)) IN (TYPEOF(DISTINCT vt0.c0), vt0.c0 COLLATE BINARY)) ASC, (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()), ((vt0.c0) NOT NULL) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))>=((json_valid(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))>=((json_valid(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))>=((json_valid(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))>=((json_valid(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))>=((json_valid(vt0.c0)))));
SELECT * FROM vt0 WHERE (((((((((vt0.c0)OR((vt0.c0 IN ()))))AND(((vt0.c0)|(vt0.c0)))))AND(vt0.c0)))OR(((((((((((((vt0.c0)OR(vt0.c0)))AND(0xffffffffad8339ba)))OR(vt0.c0)))AND(NULL)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((vt0.c0) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR((vt0.c0 IN ()))))AND(((vt0.c0)|(vt0.c0)))))AND(vt0.c0)))OR(((((((((((((vt0.c0)OR(vt0.c0)))AND(0xffffffffad8339ba)))OR(vt0.c0)))AND(NULL)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOTNULL) ASC);
SELECT * FROM vt0 WHERE (((((((((vt0.c0)OR((vt0.c0 IN ()))))AND(((vt0.c0)|(vt0.c0)))))AND(vt0.c0)))OR(((((((((((((vt0.c0)OR(vt0.c0)))AND(0xffffffffad8339ba)))OR(vt0.c0)))AND(NULL)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((vt0.c0) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR((vt0.c0 IN ()))))AND(((vt0.c0)|(vt0.c0)))))AND(vt0.c0)))OR(((((((((((((vt0.c0)OR(vt0.c0)))AND(0xffffffffad8339ba)))OR(vt0.c0)))AND(NULL)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOTNULL) ASC);
SELECT * FROM vt0 WHERE (((((((((vt0.c0)OR((vt0.c0 IN ()))))AND(((vt0.c0)|(vt0.c0)))))AND(vt0.c0)))OR(((((((((((((vt0.c0)OR(vt0.c0)))AND(0xffffffffad8339ba)))OR(vt0.c0)))AND(NULL)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((vt0.c0) NOTNULL) ASC;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)IS(0.9372080776557212))))<=((((vt0.c0)<=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)IS(0.9372080776557212))))<=((((vt0.c0)<=(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)IS(0.9372080776557212))))<=((((vt0.c0)<=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)IS(0.9372080776557212))))<=((((vt0.c0)<=(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)IS(0.9372080776557212))))<=((((vt0.c0)<=(vt0.c0))))));
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))AND(0.33246785715649363)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))AND(0.33246785715649363)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))AND(0.33246785715649363)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))AND(0.33246785715649363)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))AND(0.33246785715649363)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt0 WHERE ((((('0.4032582818418139') ISNULL))IS NOT(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((('0.4032582818418139') ISNULL))IS NOT(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((('0.4032582818418139') ISNULL))IS NOT(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((('0.4032582818418139') ISNULL))IS NOT(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((('0.4032582818418139') ISNULL))IS NOT(((vt0.c0) ISNULL))));
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))GLOB((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))GLOB((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))GLOB((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))GLOB((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))GLOB((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(NULLIF(vt0.c0, vt0.c0), ((vt0.c0)-(vt0.c0)))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(NULLIF(vt0.c0, vt0.c0), ((vt0.c0)-(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(NULLIF(vt0.c0, vt0.c0), ((vt0.c0)-(vt0.c0)))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(NULLIF(vt0.c0, vt0.c0), ((vt0.c0)-(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(NULLIF(vt0.c0, vt0.c0), ((vt0.c0)-(vt0.c0)))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END) IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)==(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)==(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)==(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)==(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)==(vt0.c0)));
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER)) ORDER BY (CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER)) ORDER BY (CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER)) ORDER BY (CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE (TRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)<<(vt0.c0)))) ORDER BY CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((vt0.c0)) BETWEEN ((x'f980039d')) AND ((vt0.c0))) WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE '-1184713647' END THEN CAST(vt0.c0 AS NUMERIC) ELSE CAST(vt0.c0 AS NUMERIC) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)<<(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((vt0.c0)) BETWEEN ((x'f980039d')) AND ((vt0.c0))) WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE '-1184713647' END THEN CAST(vt0.c0 AS NUMERIC) ELSE CAST(vt0.c0 AS NUMERIC) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)<<(vt0.c0)))) ORDER BY CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((vt0.c0)) BETWEEN ((x'f980039d')) AND ((vt0.c0))) WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE '-1184713647' END THEN CAST(vt0.c0 AS NUMERIC) ELSE CAST(vt0.c0 AS NUMERIC) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)<<(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((vt0.c0)) BETWEEN ((x'f980039d')) AND ((vt0.c0))) WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE '-1184713647' END THEN CAST(vt0.c0 AS NUMERIC) ELSE CAST(vt0.c0 AS NUMERIC) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)<<(vt0.c0)))) ORDER BY CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((vt0.c0)) BETWEEN ((x'f980039d')) AND ((vt0.c0))) WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE '-1184713647' END THEN CAST(vt0.c0 AS NUMERIC) ELSE CAST(vt0.c0 AS NUMERIC) END  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (NULL) AND ((0x12293952 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (NULL) AND ((0X12293952 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (NULL) AND ((0x12293952 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (NULL) AND ((0X12293952 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (NULL) AND ((0x12293952 IN ()))));
SELECT ALL * FROM vt0 WHERE ((NOT ('!}b0')));
SELECT SUM(count) FROM (SELECT (((NOT ('!}b0'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT ('!}b0')));
SELECT SUM(count) FROM (SELECT (((NOT ('!}b0'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT ('!}b0')));
SELECT ALL COUNT(*) FROM vt0 WHERE (((+ (vt0.c0)) IN ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((+ (vt0.c0)) IN ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((+ (vt0.c0)) IN ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE ('-1497930946');
SELECT SUM(count) FROM (SELECT ALL (('-1497930946') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-1497930946');
SELECT SUM(count) FROM (SELECT ALL (('-1497930946') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-1497930946');
SELECT * FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0))>>(vt0.c0))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (-1.82667539E9 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0))>>(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (-1.82667539E9 COLLATE BINARY)) ASC);
SELECT * FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0))>>(vt0.c0))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (-1.82667539E9 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0))>>(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (-1.82667539E9 COLLATE BINARY)) ASC);
SELECT * FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0))>>(vt0.c0))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (-1.82667539E9 COLLATE BINARY)) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)OR(vt0.c0))  WHEN -674520449 THEN ((vt0.c0)*(vt0.c0)) WHEN ((x'')GLOB(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)OR(vt0.c0))  WHEN -674520449 THEN ((vt0.c0)*(vt0.c0)) WHEN ((x'')GLOB(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)OR(vt0.c0))  WHEN -674520449 THEN ((vt0.c0)*(vt0.c0)) WHEN ((x'')GLOB(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)OR(vt0.c0))  WHEN -674520449 THEN ((vt0.c0)*(vt0.c0)) WHEN ((x'')GLOB(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)OR(vt0.c0))  WHEN -674520449 THEN ((vt0.c0)*(vt0.c0)) WHEN ((x'')GLOB(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) IS TRUE) END);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE ((vt0.c0) NOTNULL)  WHEN (~ (vt0.c0)) THEN ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN CAST(vt0.c0 AS BLOB) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOTNULL)  WHEN (~ (vt0.c0)) THEN ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN CAST(vt0.c0 AS BLOB) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE ((vt0.c0) NOTNULL)  WHEN (~ (vt0.c0)) THEN ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN CAST(vt0.c0 AS BLOB) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOTNULL)  WHEN (~ (vt0.c0)) THEN ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN CAST(vt0.c0 AS BLOB) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE ((vt0.c0) NOTNULL)  WHEN (~ (vt0.c0)) THEN ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN CAST(vt0.c0 AS BLOB) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))!=((CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (vt0.c0)), ((vt0.c0)GLOB(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))!=((CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (vt0.c0)), ((vt0.c0)GLOB(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))!=((CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (vt0.c0)), ((vt0.c0)GLOB(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))!=((CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (vt0.c0)), ((vt0.c0)GLOB(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))!=((CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (vt0.c0)), ((vt0.c0)GLOB(vt0.c0))))));
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS TEXT), ((0.5986370861904833)&(vt0.c0))))<=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0))<>((vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY CAST(']9' AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS TEXT), ((0.5986370861904833)&(vt0.c0))))<=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0))!=((vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(']9' AS TEXT) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS TEXT), ((0.5986370861904833)&(vt0.c0))))<=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0))<>((vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY CAST(']9' AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS TEXT), ((0.5986370861904833)&(vt0.c0))))<=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0))!=((vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(']9' AS TEXT) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS TEXT), ((0.5986370861904833)&(vt0.c0))))<=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0))<>((vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY CAST(']9' AS TEXT) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) BETWEEN (0xffffffffa7d7e22c) AND ((NULL IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt0.c0))) BETWEEN (0xffffffffa7d7e22c) AND ((NULL IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) BETWEEN (0xffffffffa7d7e22c) AND ((NULL IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt0.c0))) BETWEEN (0xffffffffa7d7e22c) AND ((NULL IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) BETWEEN (0xffffffffa7d7e22c) AND ((NULL IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((ABS((vt0.c0 IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((ABS((vt0.c0 IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS((vt0.c0 IN ())));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT NULL)) ORDER BY ((((vt0.c0)LIKE(vt0.c0)))=(CASE vt0.c0  WHEN NULL THEN vt0.c0 END))  NULLS FIRST, vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)LIKE(vt0.c0)))=(CASE vt0.c0  WHEN NULL THEN vt0.c0 END))  NULLS FIRST, vt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT NULL)) ORDER BY ((((vt0.c0)LIKE(vt0.c0)))=(CASE vt0.c0  WHEN NULL THEN vt0.c0 END))  NULLS FIRST, vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)LIKE(vt0.c0)))=(CASE vt0.c0  WHEN NULL THEN vt0.c0 END))  NULLS FIRST, vt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT NULL)) ORDER BY ((((vt0.c0)LIKE(vt0.c0)))=(CASE vt0.c0  WHEN NULL THEN vt0.c0 END))  NULLS FIRST, vt0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(((vt0.c0) IS FALSE)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))), '1510459201', CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (('V⡱', (vt0.c0 IN ()), vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))), '1510459201', CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (('V⡱', (vt0.c0 IN ()), vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))), '1510459201', CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (('V⡱', (vt0.c0 IN ()), vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))), '1510459201', CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (('V⡱', (vt0.c0 IN ()), vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))), '1510459201', CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (('V⡱', (vt0.c0 IN ()), vt0.c0))));
SELECT * FROM vt0 WHERE ((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB), ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB), ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT * FROM vt0 WHERE ((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB), ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB), ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT * FROM vt0 WHERE ((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB), ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.15269775630728089);
SELECT SUM(count) FROM (SELECT ALL ((0.15269775630728089) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.15269775630728089);
SELECT SUM(count) FROM (SELECT ALL ((0.15269775630728089) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.15269775630728089);
SELECT * FROM vt0 WHERE ((((TRIM(DISTINCT vt0.c0), ((vt0.c0) IS FALSE), (vt0.c0 IN (vt0.c0, vt0.c0))))<>((((vt0.c0) NOTNULL), HEX(vt0.c0), vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(DISTINCT vt0.c0), ((vt0.c0) IS FALSE), (vt0.c0 IN (vt0.c0, vt0.c0))))!=((((vt0.c0) NOTNULL), HEX(vt0.c0), vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((TRIM(DISTINCT vt0.c0), ((vt0.c0) IS FALSE), (vt0.c0 IN (vt0.c0, vt0.c0))))<>((((vt0.c0) NOTNULL), HEX(vt0.c0), vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(DISTINCT vt0.c0), ((vt0.c0) IS FALSE), (vt0.c0 IN (vt0.c0, vt0.c0))))!=((((vt0.c0) NOTNULL), HEX(vt0.c0), vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((TRIM(DISTINCT vt0.c0), ((vt0.c0) IS FALSE), (vt0.c0 IN (vt0.c0, vt0.c0))))<>((((vt0.c0) NOTNULL), HEX(vt0.c0), vt0.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE((vt0.c0 IN (vt0.c0)), ((vt0.c0)<<(vt0.c0)))) ORDER BY NULL DESC, ((((vt0.c0)!=(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((vt0.c0 IN (vt0.c0)), ((vt0.c0)<<(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC, ((((vt0.c0)!=(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE((vt0.c0 IN (vt0.c0)), ((vt0.c0)<<(vt0.c0)))) ORDER BY NULL DESC, ((((vt0.c0)!=(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((vt0.c0 IN (vt0.c0)), ((vt0.c0)<<(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC, ((((vt0.c0)!=(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE((vt0.c0 IN (vt0.c0)), ((vt0.c0)<<(vt0.c0)))) ORDER BY NULL DESC, ((((vt0.c0)!=(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((SUBSTR(vt0.c0, vt0.c0))<(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((SUBSTR(vt0.c0, vt0.c0))<(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((SUBSTR(vt0.c0, vt0.c0))<(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((SUBSTR(vt0.c0, vt0.c0))<(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((SUBSTR(vt0.c0, vt0.c0))<(((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM vt0 WHERE ((~ ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ ((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('sg')OR('偽')))||(json_array(vt0.c0, '0.7907671074521356'))));
SELECT SUM(count) FROM (SELECT ALL (((((('sg')OR('偽')))||(json_array(vt0.c0, '0.7907671074521356')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('sg')OR('偽')))||(json_array(vt0.c0, '0.7907671074521356'))));
SELECT SUM(count) FROM (SELECT ALL (((((('sg')OR('偽')))||(json_array(vt0.c0, '0.7907671074521356')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((NOT (vt0.c0)))));
SELECT * FROM vt0 WHERE (((NULL)+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0)*(vt0.c0)) THEN vt0.c0 WHEN (vt0.c0 IN (vt0.c0)) THEN vt0.c0 WHEN ((vt0.c0)/(vt0.c0)) THEN (vt0.c0 IN ()) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END;
SELECT SUM(count) FROM (SELECT ((((NULL)+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)*(vt0.c0)) THEN vt0.c0 WHEN (vt0.c0 IN (vt0.c0)) THEN vt0.c0 WHEN ((vt0.c0)/(vt0.c0)) THEN (vt0.c0 IN ()) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END);
SELECT * FROM vt0 WHERE (((NULL)+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0)*(vt0.c0)) THEN vt0.c0 WHEN (vt0.c0 IN (vt0.c0)) THEN vt0.c0 WHEN ((vt0.c0)/(vt0.c0)) THEN (vt0.c0 IN ()) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END;
SELECT SUM(count) FROM (SELECT ((((NULL)+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)*(vt0.c0)) THEN vt0.c0 WHEN (vt0.c0 IN (vt0.c0)) THEN vt0.c0 WHEN ((vt0.c0)/(vt0.c0)) THEN (vt0.c0 IN ()) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END);
SELECT * FROM vt0 WHERE (((NULL)+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0)*(vt0.c0)) THEN vt0.c0 WHEN (vt0.c0 IN (vt0.c0)) THEN vt0.c0 WHEN ((vt0.c0)/(vt0.c0)) THEN (vt0.c0 IN ()) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END;
SELECT ALL COUNT(*) FROM vt0 WHERE (0.6520549029338525);
SELECT SUM(count) FROM (SELECT ((0.6520549029338525) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.6520549029338525);
SELECT SUM(count) FROM (SELECT ((0.6520549029338525) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.6520549029338525);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) ORDER BY (((vt0.c0 IN ())) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) ORDER BY (((vt0.c0 IN ())) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) ORDER BY (((vt0.c0 IN ())) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((CAST(vt0.c0 AS BLOB), 0.3434694929412, 0.5745314085253388))==(((- (vt0.c0)), vt0.c0, TRIM(DISTINCT vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS BLOB), 0.3434694929412, 0.5745314085253388))=(((- (vt0.c0)), vt0.c0, TRIM(DISTINCT vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((CAST(vt0.c0 AS BLOB), 0.3434694929412, 0.5745314085253388))==(((- (vt0.c0)), vt0.c0, TRIM(DISTINCT vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS BLOB), 0.3434694929412, 0.5745314085253388))=(((- (vt0.c0)), vt0.c0, TRIM(DISTINCT vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((CAST(vt0.c0 AS BLOB), 0.3434694929412, 0.5745314085253388))==(((- (vt0.c0)), vt0.c0, TRIM(DISTINCT vt0.c0, vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY 0.534591570653541;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY 0.534591570653541);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY 0.534591570653541;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY 0.534591570653541);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY 0.534591570653541;
SELECT COUNT(*) FROM vt0 WHERE (((IFNULL(vt0.c0, vt0.c0))<=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (((((vt0.c0))>((vt0.c0)))) BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt0.c0, vt0.c0))<=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))>((vt0.c0)))) BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((IFNULL(vt0.c0, vt0.c0))<=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (((((vt0.c0))>((vt0.c0)))) BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt0.c0, vt0.c0))<=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))>((vt0.c0)))) BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((IFNULL(vt0.c0, vt0.c0))<=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (((((vt0.c0))>((vt0.c0)))) BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((1596351705) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0)OR(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CAST(LIKELY(DISTINCT vt0.c0) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((1596351705) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0)OR(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(LIKELY(DISTINCT vt0.c0) AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((1596351705) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0)OR(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CAST(LIKELY(DISTINCT vt0.c0) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((1596351705) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0)OR(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(LIKELY(DISTINCT vt0.c0) AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((1596351705) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0)OR(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CAST(LIKELY(DISTINCT vt0.c0) AS REAL) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) ORDER BY (~ (vt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0 COLLATE BINARY)) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) ORDER BY (~ (vt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0 COLLATE BINARY)) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) ORDER BY (~ (vt0.c0 COLLATE BINARY)) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)&(vt0.c0))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CAST(vt0.c0 AS BLOB))))  NULLS FIRST, '' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)&(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CAST(vt0.c0 AS BLOB))))  NULLS FIRST, '' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)&(vt0.c0))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CAST(vt0.c0 AS BLOB))))  NULLS FIRST, '' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)&(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CAST(vt0.c0 AS BLOB))))  NULLS FIRST, '' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)&(vt0.c0))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CAST(vt0.c0 AS BLOB))))  NULLS FIRST, '' ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((+ (vt0.c0))) ORDER BY (((NOT (vt0.c0)))&(CAST(vt0.c0 AS INTEGER))), UNLIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))&(CAST(vt0.c0 AS INTEGER))), UNLIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))));
SELECT * FROM vt0 WHERE ((+ (vt0.c0))) ORDER BY (((NOT (vt0.c0)))&(CAST(vt0.c0 AS INTEGER))), UNLIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))&(CAST(vt0.c0 AS INTEGER))), UNLIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))));
SELECT * FROM vt0 WHERE ((+ (vt0.c0))) ORDER BY (((NOT (vt0.c0)))&(CAST(vt0.c0 AS INTEGER))), UNLIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN ((x'0bbf') BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN ()) WHEN CASE '815342827'  WHEN vt0.c0 THEN vt0.c0 ELSE x'd703' END THEN ((vt0.c0)>>(vt0.c0)) END) ORDER BY (+ ('GF'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (vt0.c0)) THEN ((x'0bbf') BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN ()) WHEN CASE '815342827'  WHEN vt0.c0 THEN vt0.c0 ELSE x'd703' END THEN ((vt0.c0)>>(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (+ ('GF'))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN ((x'0bbf') BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN ()) WHEN CASE '815342827'  WHEN vt0.c0 THEN vt0.c0 ELSE x'd703' END THEN ((vt0.c0)>>(vt0.c0)) END) ORDER BY (+ ('GF'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (vt0.c0)) THEN ((x'0bbf') BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN ()) WHEN CASE '815342827'  WHEN vt0.c0 THEN vt0.c0 ELSE x'd703' END THEN ((vt0.c0)>>(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (+ ('GF'))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN ((x'0bbf') BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN ()) WHEN CASE '815342827'  WHEN vt0.c0 THEN vt0.c0 ELSE x'd703' END THEN ((vt0.c0)>>(vt0.c0)) END) ORDER BY (+ ('GF'))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c0)<=(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<=(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)<=(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<=(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)<=(((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE))<(CAST(vt0.c0 AS REAL)))) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (-2.130535762E9))) AND (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))<(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (-2.130535762E9))) AND (vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE))<(CAST(vt0.c0 AS REAL)))) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (-2.130535762E9))) AND (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))<(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (-2.130535762E9))) AND (vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE))<(CAST(vt0.c0 AS REAL)))) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (-2.130535762E9))) AND (vt0.c0));
SELECT * FROM vt0 WHERE ((('')<=(((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('')<=(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('')<=(((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('')<=(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('')<=(((vt0.c0)>>(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0)<(vt0.c0))))) ORDER BY (NOT (((vt0.c0)>>(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0)>>(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0)<(vt0.c0))))) ORDER BY (NOT (((vt0.c0)>>(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0)>>(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0)<(vt0.c0))))) ORDER BY (NOT (((vt0.c0)>>(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((-544523750))<((vt0.c0))))AND(LOWER(vt0.c0))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((-544523750))<((vt0.c0))))AND(LOWER(vt0.c0))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((-544523750))<((vt0.c0))))AND(LOWER(vt0.c0))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((-544523750))<((vt0.c0))))AND(LOWER(vt0.c0))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((-544523750))<((vt0.c0))))AND(LOWER(vt0.c0))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.5261984679978384);
SELECT SUM(count) FROM (SELECT ((0.5261984679978384) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.5261984679978384);
SELECT SUM(count) FROM (SELECT ((0.5261984679978384) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.5261984679978384);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY ((json_type(vt0.c0)) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((json_type(vt0.c0)) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY ((json_type(vt0.c0)) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((json_type(vt0.c0)) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>(vt0.c0)) COLLATE RTRIM) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>(vt0.c0)) COLLATE RTRIM) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>(vt0.c0)) COLLATE RTRIM) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((((((0.8909062447353002) NOTNULL), (vt0.c0 IN (vt0.c0)), ((vt0.c0) NOTNULL), vt0.c0 COLLATE BINARY, ((vt0.c0)%(0.4205560332008116))))<=((('117369671' IN ()), -6.25790651E8, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), COALESCE(vt0.c0, vt0.c0), ((((((((vt0.c0)OR(x'')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))) ORDER BY ABS(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 1528286263 WHEN vt0.c0 THEN vt0.c0 END) DESC  NULLS LAST, (((vt0.c0 IN ())) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((0.8909062447353002) NOTNULL), (vt0.c0 IN (vt0.c0)), ((vt0.c0) NOTNULL), vt0.c0 COLLATE BINARY, ((vt0.c0)%(0.4205560332008116))))<=((('117369671' IN ()), -6.25790651E8, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), COALESCE(vt0.c0, vt0.c0), ((((((((vt0.c0)OR(x'')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ABS(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 1528286263 WHEN vt0.c0 THEN vt0.c0 END) DESC  NULLS LAST, (((vt0.c0 IN ())) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((0.8909062447353002) NOTNULL), (vt0.c0 IN (vt0.c0)), ((vt0.c0) NOTNULL), vt0.c0 COLLATE BINARY, ((vt0.c0)%(0.4205560332008116))))<=((('117369671' IN ()), -6.25790651E8, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), COALESCE(vt0.c0, vt0.c0), ((((((((vt0.c0)OR(x'')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))) ORDER BY ABS(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 1528286263 WHEN vt0.c0 THEN vt0.c0 END) DESC  NULLS LAST, (((vt0.c0 IN ())) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((0.8909062447353002) NOTNULL), (vt0.c0 IN (vt0.c0)), ((vt0.c0) NOTNULL), vt0.c0 COLLATE BINARY, ((vt0.c0)%(0.4205560332008116))))<=((('117369671' IN ()), -6.25790651E8, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), COALESCE(vt0.c0, vt0.c0), ((((((((vt0.c0)OR(x'')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ABS(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 1528286263 WHEN vt0.c0 THEN vt0.c0 END) DESC  NULLS LAST, (((vt0.c0 IN ())) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((0.8909062447353002) NOTNULL), (vt0.c0 IN (vt0.c0)), ((vt0.c0) NOTNULL), vt0.c0 COLLATE BINARY, ((vt0.c0)%(0.4205560332008116))))<=((('117369671' IN ()), -6.25790651E8, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), COALESCE(vt0.c0, vt0.c0), ((((((((vt0.c0)OR(x'')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))) ORDER BY ABS(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 1528286263 WHEN vt0.c0 THEN vt0.c0 END) DESC  NULLS LAST, (((vt0.c0 IN ())) NOT NULL)  NULLS FIRST;
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)GLOB(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)GLOB(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)GLOB(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)GLOB(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)GLOB(CAST(vt0.c0 AS INTEGER))));
SELECT * FROM vt0 WHERE (CASE WHEN CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END THEN (NOT (vt0.c0)) END) ORDER BY ((((vt0.c0)<<(vt0.c0))) ISNULL), (((0.4443398428990021 IN ())) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END THEN (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<<(vt0.c0))) ISNULL), (((0.4443398428990021 IN ())) IS FALSE) ASC);
SELECT * FROM vt0 WHERE (CASE WHEN CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END THEN (NOT (vt0.c0)) END) ORDER BY ((((vt0.c0)<<(vt0.c0))) ISNULL), (((0.4443398428990021 IN ())) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END THEN (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<<(vt0.c0))) ISNULL), (((0.4443398428990021 IN ())) IS FALSE) ASC);
SELECT * FROM vt0 WHERE (CASE WHEN CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END THEN (NOT (vt0.c0)) END) ORDER BY ((((vt0.c0)<<(vt0.c0))) ISNULL), (((0.4443398428990021 IN ())) IS FALSE) ASC;
SELECT ALL * FROM vt0 WHERE ((NOT (((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((+ (vt0.c0)))AND(((x'')*(vt0.c0)))))OR(((vt0.c0)||(vt0.c0)))), ((((((((vt0.c0 COLLATE BINARY)OR(((vt0.c0) IS TRUE))))AND(UPPER(vt0.c0))))AND(load_extension(vt0.c0))))AND((((vt0.c0))>=((vt0.c0)))))  NULLS FIRST, '' COLLATE NOCASE  NULLS FIRST, (((+ (vt0.c0))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)GLOB(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((+ (vt0.c0)))AND(((x'')*(vt0.c0)))))OR(((vt0.c0)||(vt0.c0)))), ((((((((vt0.c0 COLLATE BINARY)OR(((vt0.c0) IS TRUE))))AND(UPPER(vt0.c0))))AND(load_extension(vt0.c0))))AND((((vt0.c0))>=((vt0.c0)))))  NULLS FIRST, '' COLLATE NOCASE  NULLS FIRST, (((+ (vt0.c0))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)GLOB(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((NOT (((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((+ (vt0.c0)))AND(((x'')*(vt0.c0)))))OR(((vt0.c0)||(vt0.c0)))), ((((((((vt0.c0 COLLATE BINARY)OR(((vt0.c0) IS TRUE))))AND(UPPER(vt0.c0))))AND(load_extension(vt0.c0))))AND((((vt0.c0))>=((vt0.c0)))))  NULLS FIRST, '' COLLATE NOCASE  NULLS FIRST, (((+ (vt0.c0))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)GLOB(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((+ (vt0.c0)))AND(((x'')*(vt0.c0)))))OR(((vt0.c0)||(vt0.c0)))), ((((((((vt0.c0 COLLATE BINARY)OR(((vt0.c0) IS TRUE))))AND(UPPER(vt0.c0))))AND(load_extension(vt0.c0))))AND((((vt0.c0))>=((vt0.c0)))))  NULLS FIRST, '' COLLATE NOCASE  NULLS FIRST, (((+ (vt0.c0))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)GLOB(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY vt0.c0 DESC  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN COALESCE(vt0.c0, vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END  NULLS FIRST, CAST(CAST(vt0.c0 AS TEXT) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN COALESCE(vt0.c0, vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END  NULLS FIRST, CAST(CAST(vt0.c0 AS TEXT) AS INTEGER) ASC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY vt0.c0 DESC  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN COALESCE(vt0.c0, vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END  NULLS FIRST, CAST(CAST(vt0.c0 AS TEXT) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN COALESCE(vt0.c0, vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END  NULLS FIRST, CAST(CAST(vt0.c0 AS TEXT) AS INTEGER) ASC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY vt0.c0 DESC  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN COALESCE(vt0.c0, vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END  NULLS FIRST, CAST(CAST(vt0.c0 AS TEXT) AS INTEGER) ASC;
SELECT * FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN ())) ORDER BY ((load_extension(vt0.c0, vt0.c0))AND(vt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((load_extension(vt0.c0, vt0.c0))AND(vt0.c0)) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN ())) ORDER BY ((load_extension(vt0.c0, vt0.c0))AND(vt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((load_extension(vt0.c0, vt0.c0))AND(vt0.c0)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (CASE WHEN vt0.c0 THEN 1.97757321E8 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY RTRIM(CAST(vt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN vt0.c0 THEN 1.97757321E8 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY RTRIM(CAST(vt0.c0 AS REAL)));
SELECT COUNT(*) FROM vt0 WHERE ((+ (CASE WHEN vt0.c0 THEN 1.97757321E8 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY RTRIM(CAST(vt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN vt0.c0 THEN 1.97757321E8 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY RTRIM(CAST(vt0.c0 AS REAL)));
SELECT COUNT(*) FROM vt0 WHERE ((+ (CASE WHEN vt0.c0 THEN 1.97757321E8 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY RTRIM(CAST(vt0.c0 AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)==(vt0.c0)) IN ())) ORDER BY '', (((NOT (vt0.c0)))AND('qN')) DESC, ((SQLITE_VERSION()) BETWEEN ((+ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)==(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY '', (((NOT (vt0.c0)))AND('qN')) DESC, ((SQLITE_VERSION()) BETWEEN ((+ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)==(vt0.c0)) IN ())) ORDER BY '', (((NOT (vt0.c0)))AND('qN')) DESC, ((SQLITE_VERSION()) BETWEEN ((+ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)==(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY '', (((NOT (vt0.c0)))AND('qN')) DESC, ((SQLITE_VERSION()) BETWEEN ((+ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)==(vt0.c0)) IN ())) ORDER BY '', (((NOT (vt0.c0)))AND('qN')) DESC, ((SQLITE_VERSION()) BETWEEN ((+ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS INTEGER)  WHEN ((((vt0.c0)AND(x'')))OR(vt0.c0)) THEN load_extension(vt0.c0, NULL) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)AND(vt0.c0)) WHEN ((vt0.c0)>>(vt0.c0)) THEN ((vt0.c0)LIKE(vt0.c0)) WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0, vt0.c0, 0.9470998288409722))<=((vt0.c0, vt0.c0, vt0.c0))) WHEN ((vt0.c0)<(vt0.c0)) THEN x'' WHEN CAST(vt0.c0 AS INTEGER) THEN (- (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS INTEGER)  WHEN ((((vt0.c0)AND(x'')))OR(vt0.c0)) THEN load_extension(vt0.c0, NULL) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)AND(vt0.c0)) WHEN ((vt0.c0)>>(vt0.c0)) THEN ((vt0.c0)LIKE(vt0.c0)) WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0, vt0.c0, 0.9470998288409722))<=((vt0.c0, vt0.c0, vt0.c0))) WHEN ((vt0.c0)<(vt0.c0)) THEN x'' WHEN CAST(vt0.c0 AS INTEGER) THEN (- (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS INTEGER)  WHEN ((((vt0.c0)AND(x'')))OR(vt0.c0)) THEN load_extension(vt0.c0, NULL) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)AND(vt0.c0)) WHEN ((vt0.c0)>>(vt0.c0)) THEN ((vt0.c0)LIKE(vt0.c0)) WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0, vt0.c0, 0.9470998288409722))<=((vt0.c0, vt0.c0, vt0.c0))) WHEN ((vt0.c0)<(vt0.c0)) THEN x'' WHEN CAST(vt0.c0 AS INTEGER) THEN (- (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS INTEGER)  WHEN ((((vt0.c0)AND(x'')))OR(vt0.c0)) THEN load_extension(vt0.c0, NULL) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)AND(vt0.c0)) WHEN ((vt0.c0)>>(vt0.c0)) THEN ((vt0.c0)LIKE(vt0.c0)) WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0, vt0.c0, 0.9470998288409722))<=((vt0.c0, vt0.c0, vt0.c0))) WHEN ((vt0.c0)<(vt0.c0)) THEN x'' WHEN CAST(vt0.c0 AS INTEGER) THEN (- (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0)<>(vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE) ORDER BY (+ (CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE) ORDER BY (+ (CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE) ORDER BY (+ (CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(CASE WHEN '-1106605981' THEN vt0.c0 END)))OR(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(CASE WHEN '-1106605981' THEN vt0.c0 END)))OR(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(CASE WHEN '-1106605981' THEN vt0.c0 END)))OR(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(CASE WHEN '-1106605981' THEN vt0.c0 END)))OR(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(CASE WHEN '-1106605981' THEN vt0.c0 END)))OR(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ORDER BY CASE '	oi'  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '-1773469099' THEN vt0.c0 END ELSE ((vt0.c0)LIKE(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((TRIM((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE '	oi'  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '-1773469099' THEN vt0.c0 END ELSE ((vt0.c0)LIKE(vt0.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ORDER BY CASE '	oi'  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '-1773469099' THEN vt0.c0 END ELSE ((vt0.c0)LIKE(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((TRIM((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE '	oi'  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '-1773469099' THEN vt0.c0 END ELSE ((vt0.c0)LIKE(vt0.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ORDER BY CASE '	oi'  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '-1773469099' THEN vt0.c0 END ELSE ((vt0.c0)LIKE(vt0.c0)) END ASC;
SELECT COUNT(*) FROM vt0 WHERE (-1628139218) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1628139218) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (-1628139218) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1628139218) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (-1628139218) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN ()))))OR(UNICODE(vt0.c0))))AND((vt0.c0 IN ()))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN ()))))OR(UNICODE(vt0.c0))))AND((vt0.c0 IN ()))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN ()))))OR(UNICODE(vt0.c0))))AND((vt0.c0 IN ()))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN ()))))OR(UNICODE(vt0.c0))))AND((vt0.c0 IN ()))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN ()))))OR(UNICODE(vt0.c0))))AND((vt0.c0 IN ()))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<<(ABS(DISTINCT vt0.c0)))) ORDER BY (NOT (CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)<<(ABS(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CAST(vt0.c0 AS BLOB))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<<(ABS(DISTINCT vt0.c0)))) ORDER BY (NOT (CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)<<(ABS(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CAST(vt0.c0 AS BLOB))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<<(ABS(DISTINCT vt0.c0)))) ORDER BY (NOT (CAST(vt0.c0 AS BLOB)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))||((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))||((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))||((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))||((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))||((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (CASE WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS TEXT) ELSE ((vt0.c0)GLOB(vt0.c0)) END) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS TEXT) ELSE ((vt0.c0)GLOB(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (CASE WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS TEXT) ELSE ((vt0.c0)GLOB(vt0.c0)) END) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS TEXT) ELSE ((vt0.c0)GLOB(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (CASE WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS TEXT) ELSE ((vt0.c0)GLOB(vt0.c0)) END) ORDER BY vt0.c0 DESC;
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)=('*t&59')))OR((((vt0.c0, NULL, vt0.c0)) BETWEEN ((-1436705970, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(PRINTF(vt0.c0))))AND(((vt0.c0)/(vt0.c0)))))OR(ABS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)=('*t&59')))OR((((vt0.c0, NULL, vt0.c0)) BETWEEN ((-1436705970, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(PRINTF(vt0.c0))))AND(((vt0.c0)/(vt0.c0)))))OR(ABS(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)=('*t&59')))OR((((vt0.c0, NULL, vt0.c0)) BETWEEN ((-1436705970, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(PRINTF(vt0.c0))))AND(((vt0.c0)/(vt0.c0)))))OR(ABS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)=('*t&59')))OR((((vt0.c0, NULL, vt0.c0)) BETWEEN ((-1436705970, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(PRINTF(vt0.c0))))AND(((vt0.c0)/(vt0.c0)))))OR(ABS(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)=('*t&59')))OR((((vt0.c0, NULL, vt0.c0)) BETWEEN ((-1436705970, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(PRINTF(vt0.c0))))AND(((vt0.c0)/(vt0.c0)))))OR(ABS(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(vt0.c0 COLLATE NOCASE));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY '-275751149' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY '-275751149' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY '-275751149' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY '-275751149' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY '-275751149' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (TRIM(DISTINCT vt0.c0, vt0.c0)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (TRIM(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (TRIM(DISTINCT vt0.c0, vt0.c0)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (TRIM(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (TRIM(DISTINCT vt0.c0, vt0.c0)))) ORDER BY vt0.c0;
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN x'0218' ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(0.8673613510673781)) END) ORDER BY ((vt0.c0)+((vt0.c0 IN ())))  NULLS LAST, (+ (CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN x'0218' ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(0.8673613510673781)) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)+((vt0.c0 IN ())))  NULLS LAST, (+ (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN x'0218' ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(0.8673613510673781)) END) ORDER BY ((vt0.c0)+((vt0.c0 IN ())))  NULLS LAST, (+ (CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN x'0218' ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(0.8673613510673781)) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)+((vt0.c0 IN ())))  NULLS LAST, (+ (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN x'0218' ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(0.8673613510673781)) END) ORDER BY ((vt0.c0)+((vt0.c0 IN ())))  NULLS LAST, (+ (CAST(vt0.c0 AS NUMERIC)));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS TEXT)) ORDER BY ((((vt0.c0 IN (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS REAL)))<>((((vt0.c0)&(vt0.c0)), ((vt0.c0)%(vt0.c0)), CAST(vt0.c0 AS TEXT)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS REAL)))<>((((vt0.c0)&(vt0.c0)), ((vt0.c0)%(vt0.c0)), CAST(vt0.c0 AS TEXT)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS TEXT)) ORDER BY ((((vt0.c0 IN (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS REAL)))<>((((vt0.c0)&(vt0.c0)), ((vt0.c0)%(vt0.c0)), CAST(vt0.c0 AS TEXT)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS REAL)))<>((((vt0.c0)&(vt0.c0)), ((vt0.c0)%(vt0.c0)), CAST(vt0.c0 AS TEXT)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS TEXT)) ORDER BY ((((vt0.c0 IN (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS REAL)))<>((((vt0.c0)&(vt0.c0)), ((vt0.c0)%(vt0.c0)), CAST(vt0.c0 AS TEXT)))) ASC;
SELECT ALL * FROM vt0 WHERE ((- ((((vt0.c0))>((vt0.c0)))))) ORDER BY (((NOT (vt0.c0)))/(CASE vt0.c0  WHEN vt0.c0 THEN '2' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((''))))))  NULLS FIRST, CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))/(CASE vt0.c0  WHEN vt0.c0 THEN '2' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((''))))))  NULLS FIRST, CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0 WHERE ((- ((((vt0.c0))>((vt0.c0)))))) ORDER BY (((NOT (vt0.c0)))/(CASE vt0.c0  WHEN vt0.c0 THEN '2' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((''))))))  NULLS FIRST, CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))/(CASE vt0.c0  WHEN vt0.c0 THEN '2' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((''))))))  NULLS FIRST, CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0 WHERE ((- ((((vt0.c0))>((vt0.c0)))))) ORDER BY (((NOT (vt0.c0)))/(CASE vt0.c0  WHEN vt0.c0 THEN '2' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((''))))))  NULLS FIRST, CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE DESC;
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) NOT NULL))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0))))>=((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) ORDER BY (((~ (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)%(vt0.c0))))>=((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, vt0.c0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0))))>=((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) ORDER BY (((~ (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)%(vt0.c0))))>=((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, vt0.c0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0))))>=((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) ORDER BY (((~ (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, vt0.c0;
SELECT COUNT(*) FROM vt0 WHERE (CAST(SQLITE_VERSION() AS BLOB)) ORDER BY ((('1667213849') NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_VERSION() AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((('1667213849') NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(SQLITE_VERSION() AS BLOB)) ORDER BY ((('1667213849') NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_VERSION() AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((('1667213849') NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(SQLITE_VERSION() AS BLOB)) ORDER BY ((('1667213849') NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC;
SELECT * FROM vt0 WHERE (((LIKE(vt0.c0, vt0.c0, 'ᐵ'))/((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((LIKE(vt0.c0, vt0.c0, 'ᐵ'))/((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((LIKE(vt0.c0, vt0.c0, 'ᐵ'))/((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((LIKE(vt0.c0, vt0.c0, 'ᐵ'))/((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((LIKE(vt0.c0, vt0.c0, 'ᐵ'))/((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((+ (NULL))))) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN json_extract(NULL, 0.023829843297181075) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END DESC  NULLS FIRST, ((vt0.c0)<(vt0.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (NULL))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN json_extract(NULL, 0.023829843297181075) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END DESC  NULLS FIRST, ((vt0.c0)<(vt0.c0)) COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((+ (NULL))))) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN json_extract(NULL, 0.023829843297181075) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END DESC  NULLS FIRST, ((vt0.c0)<(vt0.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (NULL))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN json_extract(NULL, 0.023829843297181075) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END DESC  NULLS FIRST, ((vt0.c0)<(vt0.c0)) COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((+ (NULL))))) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN json_extract(NULL, 0.023829843297181075) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END DESC  NULLS FIRST, ((vt0.c0)<(vt0.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST((- (vt0.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST((- (vt0.c0)) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST((- (vt0.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST((- (vt0.c0)) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST((- (vt0.c0)) AS REAL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(DISTINCT vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(DISTINCT vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(DISTINCT vt0.c0 COLLATE BINARY));
SELECT COUNT(*) FROM vt0 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(NULL AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (HEX(ABS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(ABS(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (HEX(ABS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(ABS(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (HEX(ABS(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ('k') ORDER BY ((((vt0.c0)IS(vt0.c0))) BETWEEN ((+ (vt0.c0))) AND (((',''j')=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (('k') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c0))) BETWEEN ((+ (vt0.c0))) AND (((',''j')==(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ('k') ORDER BY ((((vt0.c0)IS(vt0.c0))) BETWEEN ((+ (vt0.c0))) AND (((',''j')=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (('k') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c0))) BETWEEN ((+ (vt0.c0))) AND (((',''j')==(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ('k') ORDER BY ((((vt0.c0)IS(vt0.c0))) BETWEEN ((+ (vt0.c0))) AND (((',''j')=(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS(('' IN ()))), CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (~ (NULL)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS(('' IN ()))), CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (~ (NULL)) END DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS(('' IN ()))), CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (~ (NULL)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS(('' IN ()))), CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (~ (NULL)) END DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS(('' IN ()))), CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (~ (NULL)) END DESC;
SELECT ALL * FROM vt0 WHERE (TRIM(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TRIM(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TRIM(vt0.c0));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE ((((NULL))=(((+ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((NULL))=(((+ (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NULL))=(((+ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((NULL))=(((+ (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NULL))=(((+ (vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)=(vt0.c0))))) ORDER BY (((''))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))), CAST((vt0.c0 IN (vt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((''))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))), CAST((vt0.c0 IN (vt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)=(vt0.c0))))) ORDER BY (((''))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))), CAST((vt0.c0 IN (vt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((''))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))), CAST((vt0.c0 IN (vt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)=(vt0.c0))))) ORDER BY (((''))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))), CAST((vt0.c0 IN (vt0.c0)) AS INTEGER);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0, (+ (vt0.c0)), vt0.c0))<=((ROUND(vt0.c0, vt0.c0), vt0.c0 COLLATE NOCASE, ((vt0.c0) IS TRUE))))  NULLS LAST, (~ ((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, (+ (vt0.c0)), vt0.c0))<=((ROUND(vt0.c0, vt0.c0), vt0.c0 COLLATE NOCASE, ((vt0.c0) IS TRUE))))  NULLS LAST, (~ ((~ (vt0.c0)))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0, (+ (vt0.c0)), vt0.c0))<=((ROUND(vt0.c0, vt0.c0), vt0.c0 COLLATE NOCASE, ((vt0.c0) IS TRUE))))  NULLS LAST, (~ ((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, (+ (vt0.c0)), vt0.c0))<=((ROUND(vt0.c0, vt0.c0), vt0.c0 COLLATE NOCASE, ((vt0.c0) IS TRUE))))  NULLS LAST, (~ ((~ (vt0.c0)))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0, (+ (vt0.c0)), vt0.c0))<=((ROUND(vt0.c0, vt0.c0), vt0.c0 COLLATE NOCASE, ((vt0.c0) IS TRUE))))  NULLS LAST, (~ ((~ (vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((((vt0.c0) NOTNULL))))) ORDER BY vt0.c0, ((((vt0.c0))<=((vt0.c0))) IN (vt0.c0 COLLATE NOCASE)), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((((vt0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((vt0.c0))<=((vt0.c0))) IN (vt0.c0 COLLATE NOCASE)), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((((vt0.c0) NOTNULL))))) ORDER BY vt0.c0, ((((vt0.c0))<=((vt0.c0))) IN (vt0.c0 COLLATE NOCASE)), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((((vt0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((vt0.c0))<=((vt0.c0))) IN (vt0.c0 COLLATE NOCASE)), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((((vt0.c0) NOTNULL))))) ORDER BY vt0.c0, ((((vt0.c0))<=((vt0.c0))) IN (vt0.c0 COLLATE NOCASE)), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN '1024776162' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY ((((vt0.c0) NOTNULL))>>(0.2289205166020647)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '1024776162' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL))>>(0.2289205166020647)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN '1024776162' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY ((((vt0.c0) NOTNULL))>>(0.2289205166020647)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '1024776162' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL))>>(0.2289205166020647)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN '1024776162' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY ((((vt0.c0) NOTNULL))>>(0.2289205166020647)) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOTNULL)) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0)|(vt0.c0)) ELSE ((vt0.c0)|(vt0.c0)) END  NULLS FIRST, (CAST(vt0.c0 AS NUMERIC) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0)|(vt0.c0)) ELSE ((vt0.c0)|(vt0.c0)) END  NULLS FIRST, (CAST(vt0.c0 AS NUMERIC) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOTNULL)) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0)|(vt0.c0)) ELSE ((vt0.c0)|(vt0.c0)) END  NULLS FIRST, (CAST(vt0.c0 AS NUMERIC) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0)|(vt0.c0)) ELSE ((vt0.c0)|(vt0.c0)) END  NULLS FIRST, (CAST(vt0.c0 AS NUMERIC) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOTNULL)) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0)|(vt0.c0)) ELSE ((vt0.c0)|(vt0.c0)) END  NULLS FIRST, (CAST(vt0.c0 AS NUMERIC) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0))<((vt0.c0))) IN (((vt0.c0) IS FALSE)))) ORDER BY ((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN ((('TTM5+(fR') BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))<((vt0.c0))) IN (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN ((('TTM5+(fR') BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0))<((vt0.c0))) IN (((vt0.c0) IS FALSE)))) ORDER BY ((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN ((('TTM5+(fR') BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))<((vt0.c0))) IN (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN ((('TTM5+(fR') BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0))<((vt0.c0))) IN (((vt0.c0) IS FALSE)))) ORDER BY ((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN ((('TTM5+(fR') BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN ('q.f?.Z%') AND (x'')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN ('q.f?.Z%') AND (x'')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN ('q.f?.Z%') AND (x'')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN ('q.f?.Z%') AND (x'')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN ('q.f?.Z%') AND (x'')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)>>(vt0.c0)))));
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT COALESCE(vt0.c0, vt0.c0))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(NULL)))+(UNLIKELY(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT COALESCE(vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(NULL)))+(UNLIKELY(vt0.c0))));
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT COALESCE(vt0.c0, vt0.c0))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(NULL)))+(UNLIKELY(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT COALESCE(vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(NULL)))+(UNLIKELY(vt0.c0))));
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT COALESCE(vt0.c0, vt0.c0))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(NULL)))+(UNLIKELY(vt0.c0)));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)GLOB(vt0.c0)))))OR(CAST(vt0.c0 AS TEXT)))) ORDER BY CASE WHEN CHAR(vt0.c0) THEN COALESCE(x'', x'') END;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)GLOB(vt0.c0)))))OR(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CHAR(vt0.c0) THEN COALESCE(x'', x'') END);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)GLOB(vt0.c0)))))OR(CAST(vt0.c0 AS TEXT)))) ORDER BY CASE WHEN CHAR(vt0.c0) THEN COALESCE(x'', x'') END;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)GLOB(vt0.c0)))))OR(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CHAR(vt0.c0) THEN COALESCE(x'', x'') END);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)GLOB(vt0.c0)))))OR(CAST(vt0.c0 AS TEXT)))) ORDER BY CASE WHEN CHAR(vt0.c0) THEN COALESCE(x'', x'') END;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)/(vt0.c0)))OR(((vt0.c0) ISNULL))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (''))))) ORDER BY CAST(LIKELIHOOD(DISTINCT vt0.c0, 0.7063311953973773) AS BLOB), (+ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST, CAST(((vt0.c0)-(vt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)/(vt0.c0)))OR(((vt0.c0) ISNULL))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (''))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY CAST(LIKELIHOOD(DISTINCT vt0.c0, 0.7063311953973773) AS BLOB), (+ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST, CAST(((vt0.c0)-(vt0.c0)) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)/(vt0.c0)))OR(((vt0.c0) ISNULL))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (''))))) ORDER BY CAST(LIKELIHOOD(DISTINCT vt0.c0, 0.7063311953973773) AS BLOB), (+ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST, CAST(((vt0.c0)-(vt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)/(vt0.c0)))OR(((vt0.c0) ISNULL))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (''))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY CAST(LIKELIHOOD(DISTINCT vt0.c0, 0.7063311953973773) AS BLOB), (+ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST, CAST(((vt0.c0)-(vt0.c0)) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)/(vt0.c0)))OR(((vt0.c0) ISNULL))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (''))))) ORDER BY CAST(LIKELIHOOD(DISTINCT vt0.c0, 0.7063311953973773) AS BLOB), (+ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST, CAST(((vt0.c0)-(vt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY vt0.c0 ASC;
SELECT COUNT(*) FROM vt0 WHERE (INSTR(((((vt0.c0)AND(NULL)))OR(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY CASE WHEN ((x'')>=(vt0.c0)) THEN vt0.c0 WHEN ((vt0.c0)GLOB(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((INSTR(((((vt0.c0)AND(NULL)))OR(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((x'')>=(vt0.c0)) THEN vt0.c0 WHEN ((vt0.c0)GLOB(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (INSTR(((((vt0.c0)AND(NULL)))OR(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY CASE WHEN ((x'')>=(vt0.c0)) THEN vt0.c0 WHEN ((vt0.c0)GLOB(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((INSTR(((((vt0.c0)AND(NULL)))OR(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((x'')>=(vt0.c0)) THEN vt0.c0 WHEN ((vt0.c0)GLOB(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (INSTR(((((vt0.c0)AND(NULL)))OR(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY CASE WHEN ((x'')>=(vt0.c0)) THEN vt0.c0 WHEN ((vt0.c0)GLOB(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END  NULLS LAST;
SELECT * FROM vt0 WHERE ((~ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN (NOT (vt0.c0)) THEN ((('-1625987835'))==((vt0.c0))) WHEN (+ (vt0.c0)) THEN NULL ELSE (+ (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN (NOT (vt0.c0)) THEN ((('-1625987835'))=((vt0.c0))) WHEN (+ (vt0.c0)) THEN NULL ELSE (+ (vt0.c0)) END);
SELECT * FROM vt0 WHERE ((~ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN (NOT (vt0.c0)) THEN ((('-1625987835'))==((vt0.c0))) WHEN (+ (vt0.c0)) THEN NULL ELSE (+ (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN (NOT (vt0.c0)) THEN ((('-1625987835'))=((vt0.c0))) WHEN (+ (vt0.c0)) THEN NULL ELSE (+ (vt0.c0)) END);
SELECT * FROM vt0 WHERE ((~ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN (NOT (vt0.c0)) THEN ((('-1625987835'))==((vt0.c0))) WHEN (+ (vt0.c0)) THEN NULL ELSE (+ (vt0.c0)) END;
SELECT * FROM vt0 WHERE (CASE WHEN CASE '-1409913405'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '' END THEN ((vt0.c0)AND(vt0.c0)) END) ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((+ (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE '-1409913405'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '' END THEN ((vt0.c0)AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((+ (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN CASE '-1409913405'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '' END THEN ((vt0.c0)AND(vt0.c0)) END) ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((+ (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE '-1409913405'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '' END THEN ((vt0.c0)AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((+ (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN CASE '-1409913405'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '' END THEN ((vt0.c0)AND(vt0.c0)) END) ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((+ (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN (0.2607950883386754, ((vt0.c0)>=(vt0.c0)), vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c0 COLLATE NOCASE) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN (0.2607950883386754, ((vt0.c0)>=(vt0.c0)), vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN (0.2607950883386754, ((vt0.c0)>=(vt0.c0)), vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c0 COLLATE NOCASE) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN (0.2607950883386754, ((vt0.c0)>=(vt0.c0)), vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN (0.2607950883386754, ((vt0.c0)>=(vt0.c0)), vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c0 COLLATE NOCASE) IS TRUE) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS REAL)) ORDER BY (((0.19999798389059875 IN (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (((0.19999798389059875 IN (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0) NOT NULL)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS REAL)) ORDER BY (((0.19999798389059875 IN (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (((0.19999798389059875 IN (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0) NOT NULL)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS REAL)) ORDER BY (((0.19999798389059875 IN (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0) NOT NULL)))  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((NOT (vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((NOT (vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((NOT (vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((NOT (vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((NOT (vt0.c0))))>((CAST(vt0.c0 AS TEXT)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((+ (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (CAST(vt0.c0 AS TEXT))));
SELECT * FROM vt0 WHERE (x'') ORDER BY (((((vt0.c0))>((vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)>(0.685867216289136)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))>((vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)>(0.685867216289136)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (x'') ORDER BY (((((vt0.c0))>((vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)>(0.685867216289136)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))>((vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)>(0.685867216289136)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (x'') ORDER BY (((((vt0.c0))>((vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)>(0.685867216289136)))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY (vt0.c0 IN (vt0.c0)) COLLATE RTRIM, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, (- (vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (vt0.c0)) COLLATE RTRIM, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, (- (vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY (vt0.c0 IN (vt0.c0)) COLLATE RTRIM, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, (- (vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (vt0.c0)) COLLATE RTRIM, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, (- (vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY (vt0.c0 IN (vt0.c0)) COLLATE RTRIM, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, (- (vt0.c0)) COLLATE RTRIM;
SELECT * FROM vt0 WHERE ((~ (vt0.c0))) ORDER BY ((vt0.c0 COLLATE NOCASE)IS((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)IS((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT * FROM vt0 WHERE ((~ (vt0.c0))) ORDER BY ((vt0.c0 COLLATE NOCASE)IS((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)IS((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT * FROM vt0 WHERE ((~ (vt0.c0))) ORDER BY ((vt0.c0 COLLATE NOCASE)IS((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT * FROM vt0 WHERE ((NOT ((('') BETWEEN (NULL) AND ('GTHSu2')))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((('') BETWEEN (NULL) AND ('GTHSu2'))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT ((('') BETWEEN (NULL) AND ('GTHSu2')))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((('') BETWEEN (NULL) AND ('GTHSu2'))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT ((('') BETWEEN (NULL) AND ('GTHSu2')))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN CAST(vt0.c0 AS TEXT) THEN NULL WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0))) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE BINARY  WHEN CAST(vt0.c0 AS TEXT) THEN NULL WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0))) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN CAST(vt0.c0 AS TEXT) THEN NULL WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0))) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE BINARY  WHEN CAST(vt0.c0 AS TEXT) THEN NULL WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0))) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN CAST(vt0.c0 AS TEXT) THEN NULL WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0))) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS('-1789596439'))) NOTNULL)) ORDER BY load_extension(((vt0.c0) NOTNULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS('-1789596439'))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY load_extension(((vt0.c0) NOTNULL)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS('-1789596439'))) NOTNULL)) ORDER BY load_extension(((vt0.c0) NOTNULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS('-1789596439'))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY load_extension(((vt0.c0) NOTNULL)) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (x'59f7') AND (vt0.c0))) NOT BETWEEN (((((((((((((vt0.c0)OR('-133840400')))AND(0.24898446333906898)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(0.2703314157714247))) AND (NULLIF(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (x'59f7') AND (vt0.c0))) NOT BETWEEN (((((((((((((vt0.c0)OR('-133840400')))AND(0.24898446333906898)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(0.2703314157714247))) AND (NULLIF(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (x'59f7') AND (vt0.c0))) NOT BETWEEN (((((((((((((vt0.c0)OR('-133840400')))AND(0.24898446333906898)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(0.2703314157714247))) AND (NULLIF(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (x'59f7') AND (vt0.c0))) NOT BETWEEN (((((((((((((vt0.c0)OR('-133840400')))AND(0.24898446333906898)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(0.2703314157714247))) AND (NULLIF(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (x'59f7') AND (vt0.c0))) NOT BETWEEN (((((((((((((vt0.c0)OR('-133840400')))AND(0.24898446333906898)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(0.2703314157714247))) AND (NULLIF(vt0.c0, vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((((vt0.c0)OR(0Xffffffff99dd03e6)))OR(vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((((vt0.c0)OR(0Xffffffff99dd03e6)))OR(vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((((vt0.c0)OR(0Xffffffff99dd03e6)))OR(vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((((vt0.c0)OR(0Xffffffff99dd03e6)))OR(vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((((vt0.c0)OR(0Xffffffff99dd03e6)))OR(vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END;
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL))GLOB((((vt0.c0))==((vt0.c0)))))) ORDER BY (((vt0.c0)!=(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))GLOB((((vt0.c0))=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)<>(vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL))GLOB((((vt0.c0))==((vt0.c0)))))) ORDER BY (((vt0.c0)!=(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))GLOB((((vt0.c0))=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)<>(vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL))GLOB((((vt0.c0))==((vt0.c0)))))) ORDER BY (((vt0.c0)!=(vt0.c0)) IN ());
SELECT * FROM vt0 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY (((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY ASC, (- (((vt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY ASC, (- (((vt0.c0) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY (((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY ASC, (- (((vt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY ASC, (- (((vt0.c0) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY (((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY ASC, (- (((vt0.c0) ISNULL)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)LIKE(1167245388))) ORDER BY (~ ((NOT (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)LIKE(1167245388))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((NOT (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)LIKE(1167245388))) ORDER BY (~ ((NOT (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)LIKE(1167245388))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((NOT (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)LIKE(1167245388))) ORDER BY (~ ((NOT (vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), 0.8250573463736421)) ORDER BY CASE WHEN CAST(vt0.c0 AS TEXT) THEN CASE '746400454'  WHEN vt0.c0 THEN vt0.c0 END WHEN (((0X4e39a08a)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)IS(vt0.c0)) WHEN (+ (vt0.c0)) THEN x'' END;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), 0.8250573463736421)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS TEXT) THEN CASE '746400454'  WHEN vt0.c0 THEN vt0.c0 END WHEN (((0X4e39a08a)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)IS(vt0.c0)) WHEN (+ (vt0.c0)) THEN x'' END);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), 0.8250573463736421)) ORDER BY CASE WHEN CAST(vt0.c0 AS TEXT) THEN CASE '746400454'  WHEN vt0.c0 THEN vt0.c0 END WHEN (((0X4e39a08a)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)IS(vt0.c0)) WHEN (+ (vt0.c0)) THEN x'' END;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), 0.8250573463736421)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS TEXT) THEN CASE '746400454'  WHEN vt0.c0 THEN vt0.c0 END WHEN (((0X4e39a08a)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)IS(vt0.c0)) WHEN (+ (vt0.c0)) THEN x'' END);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), 0.8250573463736421)) ORDER BY CASE WHEN CAST(vt0.c0 AS TEXT) THEN CASE '746400454'  WHEN vt0.c0 THEN vt0.c0 END WHEN (((0X4e39a08a)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)IS(vt0.c0)) WHEN (+ (vt0.c0)) THEN x'' END;
SELECT COUNT(*) FROM vt0 WHERE (CAST((- (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((- (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((- (vt0.c0)) AS REAL));
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0)AND(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (COALESCE(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (NOT (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (COALESCE(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (NOT (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (COALESCE(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (NOT (vt0.c0))));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (('Lf' IN ())) AND (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)AND(vt0.c0)) WHEN json_array_length(vt0.c0, vt0.c0) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c0)/(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (('Lf' IN ())) AND (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)AND(vt0.c0)) WHEN json_array_length(vt0.c0, vt0.c0) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c0)/(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (('Lf' IN ())) AND (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)AND(vt0.c0)) WHEN json_array_length(vt0.c0, vt0.c0) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c0)/(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (('Lf' IN ())) AND (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)AND(vt0.c0)) WHEN json_array_length(vt0.c0, vt0.c0) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c0)/(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (('Lf' IN ())) AND (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)AND(vt0.c0)) WHEN json_array_length(vt0.c0, vt0.c0) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c0)/(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((~ (x'')))GLOB(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((~ (x'')))GLOB(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (x'')))GLOB(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((~ (x'')))GLOB(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (x'')))GLOB(vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (ABS(vt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((ABS(vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (ABS(vt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((ABS(vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (ABS(vt0.c0) COLLATE RTRIM);
SELECT * FROM vt0 NOT INDEXED WHERE ('L嵂	~');
SELECT SUM(count) FROM (SELECT ALL (('L嵂	~') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE ('L嵂	~');
SELECT SUM(count) FROM (SELECT ALL (('L嵂	~') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE ('L嵂	~');
SELECT ALL * FROM vt0 WHERE (((((('(S') NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((((vt0.c0)+(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((('(S') NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((((vt0.c0)+(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((('(S') NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((((vt0.c0)+(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((('(S') NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((((vt0.c0)+(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((('(S') NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((((vt0.c0)+(vt0.c0))))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((COALESCE(0.8535983233925591, vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((COALESCE(0.8535983233925591, vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((COALESCE(0.8535983233925591, vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((COALESCE(0.8535983233925591, vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((COALESCE(0.8535983233925591, vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((('') BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN x'b4dd' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((('') BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN x'b4dd' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('') BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN x'b4dd' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((('') BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN x'b4dd' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('') BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN x'b4dd' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1985603890' WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1985603890' WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1985603890' WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1985603890' WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1985603890' WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (json_array(((vt0.c0)>=(vt0.c0)), CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((json_array(((vt0.c0)>=(vt0.c0)), CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (json_array(((vt0.c0)>=(vt0.c0)), CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((json_array(((vt0.c0)>=(vt0.c0)), CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (json_array(((vt0.c0)>=(vt0.c0)), CAST(vt0.c0 AS NUMERIC)));
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0) ISNULL)));
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))AND(((((vt0.c0)OR(vt0.c0)))OR(NULL)))))AND((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS TEXT))AND(((((vt0.c0)OR(vt0.c0)))OR(NULL)))))AND((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))AND(((((vt0.c0)OR(vt0.c0)))OR(NULL)))))AND((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS TEXT))AND(((((vt0.c0)OR(vt0.c0)))OR(NULL)))))AND((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))AND(((((vt0.c0)OR(vt0.c0)))OR(NULL)))))AND((+ (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR((vt0.c0 IN (vt0.c0)))))OR((~ (vt0.c0))))) ORDER BY (~ (LOWER(DISTINCT vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS INTEGER))OR((vt0.c0 IN (vt0.c0)))))OR((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (LOWER(DISTINCT vt0.c0))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR((vt0.c0 IN (vt0.c0)))))OR((~ (vt0.c0))))) ORDER BY (~ (LOWER(DISTINCT vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS INTEGER))OR((vt0.c0 IN (vt0.c0)))))OR((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (LOWER(DISTINCT vt0.c0))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR((vt0.c0 IN (vt0.c0)))))OR((~ (vt0.c0))))) ORDER BY (~ (LOWER(DISTINCT vt0.c0))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (((0.672601025805568)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOT NULL) THEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (((0.672601025805568)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (((0.672601025805568)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOT NULL) THEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (((0.672601025805568)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (((0.672601025805568)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT * FROM vt0 WHERE (NULL) ORDER BY LIKELIHOOD(CAST(vt0.c0 AS BLOB), 0.8422158408043602)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(CAST(vt0.c0 AS BLOB), 0.8422158408043602)  NULLS FIRST);
SELECT * FROM vt0 WHERE (NULL) ORDER BY LIKELIHOOD(CAST(vt0.c0 AS BLOB), 0.8422158408043602)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(CAST(vt0.c0 AS BLOB), 0.8422158408043602)  NULLS FIRST);
SELECT * FROM vt0 WHERE (NULL) ORDER BY LIKELIHOOD(CAST(vt0.c0 AS BLOB), 0.8422158408043602)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ()));
SELECT * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '[LQz{sc86' END))<>((CASE vt0.c0  WHEN 0.24839609440603094 THEN vt0.c0 END)))) ORDER BY ((((((((((vt0.c0) IS TRUE))OR(CAST(vt0.c0 AS NUMERIC))))AND((('\n97s\rd)')IS NOT(vt0.c0)))))AND(((vt0.c0) IS TRUE))))OR(CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '[LQz{sc86' END))!=((CASE vt0.c0  WHEN 0.24839609440603094 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0) IS TRUE))OR(CAST(vt0.c0 AS NUMERIC))))AND((('\n97s\rd)')IS NOT(vt0.c0)))))AND(((vt0.c0) IS TRUE))))OR(CAST(vt0.c0 AS NUMERIC))) DESC);
SELECT * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '[LQz{sc86' END))<>((CASE vt0.c0  WHEN 0.24839609440603094 THEN vt0.c0 END)))) ORDER BY ((((((((((vt0.c0) IS TRUE))OR(CAST(vt0.c0 AS NUMERIC))))AND((('\n97s\rd)')IS NOT(vt0.c0)))))AND(((vt0.c0) IS TRUE))))OR(CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '[LQz{sc86' END))!=((CASE vt0.c0  WHEN 0.24839609440603094 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0) IS TRUE))OR(CAST(vt0.c0 AS NUMERIC))))AND((('\n97s\rd)')IS NOT(vt0.c0)))))AND(((vt0.c0) IS TRUE))))OR(CAST(vt0.c0 AS NUMERIC))) DESC);
SELECT * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '[LQz{sc86' END))<>((CASE vt0.c0  WHEN 0.24839609440603094 THEN vt0.c0 END)))) ORDER BY ((((((((((vt0.c0) IS TRUE))OR(CAST(vt0.c0 AS NUMERIC))))AND((('\n97s\rd)')IS NOT(vt0.c0)))))AND(((vt0.c0) IS TRUE))))OR(CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((((vt0.c0)AND(json_quote(vt0.c0))))OR(CAST(vt0.c0 AS BLOB)))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(json_quote(vt0.c0))))OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((((vt0.c0)AND(json_quote(vt0.c0))))OR(CAST(vt0.c0 AS BLOB)))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(json_quote(vt0.c0))))OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((((vt0.c0) NOT NULL))))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS TEXT) DESC  NULLS FIRST, (((NOT (0.47195838080098074))) NOT BETWEEN ((NOT (vt0.c0))) AND (QUOTE(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS TEXT) DESC  NULLS FIRST, (((NOT (0.47195838080098074))) NOT BETWEEN ((NOT (vt0.c0))) AND (QUOTE(vt0.c0))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((((vt0.c0) NOT NULL))))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS TEXT) DESC  NULLS FIRST, (((NOT (0.47195838080098074))) NOT BETWEEN ((NOT (vt0.c0))) AND (QUOTE(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS TEXT) DESC  NULLS FIRST, (((NOT (0.47195838080098074))) NOT BETWEEN ((NOT (vt0.c0))) AND (QUOTE(vt0.c0))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((((vt0.c0) NOT NULL))))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS TEXT) DESC  NULLS FIRST, (((NOT (0.47195838080098074))) NOT BETWEEN ((NOT (vt0.c0))) AND (QUOTE(vt0.c0))) ASC;
SELECT * FROM vt0 WHERE (highlight(CASE WHEN vt0.c0 THEN vt0.c0 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((highlight(CASE WHEN vt0.c0 THEN vt0.c0 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (highlight(CASE WHEN vt0.c0 THEN vt0.c0 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((highlight(CASE WHEN vt0.c0 THEN vt0.c0 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))/(((vt0.c0)LIKE(vt0.c0))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))/(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY x'');
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))/(((vt0.c0)LIKE(vt0.c0))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))/(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY x'');
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))/(((vt0.c0)LIKE(vt0.c0))))) ORDER BY x'';
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(vt0.c0)) ORDER BY (vt0.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(vt0.c0)) ORDER BY (vt0.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(vt0.c0)) ORDER BY (vt0.c0 IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((rtreenode(vt0.c0, vt0.c0))GLOB((((NULL, vt0.c0, '1373735495'))<=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(vt0.c0, vt0.c0))GLOB((((NULL, vt0.c0, '1373735495'))<=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((rtreenode(vt0.c0, vt0.c0))GLOB((((NULL, vt0.c0, '1373735495'))<=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(vt0.c0, vt0.c0))GLOB((((NULL, vt0.c0, '1373735495'))<=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((rtreenode(vt0.c0, vt0.c0))GLOB((((NULL, vt0.c0, '1373735495'))<=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT * FROM vt0 WHERE (NULLIF(DISTINCT (~ (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (~ (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULLIF(DISTINCT (~ (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (~ (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULLIF(DISTINCT (~ (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)*(vt0.c0)))>=(x''))) ORDER BY ((((vt0.c0)<(vt0.c0))) NOTNULL), vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(vt0.c0)))>=(x''))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<(vt0.c0))) NOTNULL), vt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)*(vt0.c0)))>=(x''))) ORDER BY ((((vt0.c0)<(vt0.c0))) NOTNULL), vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(vt0.c0)))>=(x''))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<(vt0.c0))) NOTNULL), vt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)*(vt0.c0)))>=(x''))) ORDER BY ((((vt0.c0)<(vt0.c0))) NOTNULL), vt0.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (~ ((~ (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (~ ((~ (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (~ ((~ (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (~ ((~ (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (~ ((~ (vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((x'c59f')) BETWEEN ((vt0.c0)) AND ((x'')))) NOTNULL)) ORDER BY ((((vt0.c0) NOTNULL))=(((vt0.c0)*(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'c59f')) BETWEEN ((vt0.c0)) AND ((x'')))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL))=(((vt0.c0)*(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((x'c59f')) BETWEEN ((vt0.c0)) AND ((x'')))) NOTNULL)) ORDER BY ((((vt0.c0) NOTNULL))=(((vt0.c0)*(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'c59f')) BETWEEN ((vt0.c0)) AND ((x'')))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL))=(((vt0.c0)*(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((x'c59f')) BETWEEN ((vt0.c0)) AND ((x'')))) NOTNULL)) ORDER BY ((((vt0.c0) NOTNULL))=(((vt0.c0)*(vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (ABS(((vt0.c0) NOT BETWEEN ('-1068996793') AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(((vt0.c0) NOT BETWEEN ('-1068996793') AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (ABS(((vt0.c0) NOT BETWEEN ('-1068996793') AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(((vt0.c0) NOT BETWEEN ('-1068996793') AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (ABS(((vt0.c0) NOT BETWEEN ('-1068996793') AND (vt0.c0))));
SELECT * FROM vt0 NOT INDEXED WHERE (CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE (CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE (CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))<<((vt0.c0 IN (vt0.c0))))) ORDER BY (((vt0.c0 IN ()))>>(((((-1.412283495E9)AND(vt0.c0)))AND(vt0.c0)))) DESC, ((((CAST(vt0.c0 AS INTEGER))AND(vt0.c0 COLLATE RTRIM)))OR((NOT (vt0.c0)))) ASC  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)>(vt0.c0)), 533997045, (NOT (vt0.c0)))) AND ((((vt0.c0) IS TRUE), x'', (~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))<<((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))>>(((((-1.412283495E9)AND(vt0.c0)))AND(vt0.c0)))) DESC, ((((CAST(vt0.c0 AS INTEGER))AND(vt0.c0 COLLATE RTRIM)))OR((NOT (vt0.c0)))) ASC  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)>(vt0.c0)), 533997045, (NOT (vt0.c0)))) AND ((((vt0.c0) IS TRUE), x'', (~ (vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))<<((vt0.c0 IN (vt0.c0))))) ORDER BY (((vt0.c0 IN ()))>>(((((-1.412283495E9)AND(vt0.c0)))AND(vt0.c0)))) DESC, ((((CAST(vt0.c0 AS INTEGER))AND(vt0.c0 COLLATE RTRIM)))OR((NOT (vt0.c0)))) ASC  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)>(vt0.c0)), 533997045, (NOT (vt0.c0)))) AND ((((vt0.c0) IS TRUE), x'', (~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))<<((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))>>(((((-1.412283495E9)AND(vt0.c0)))AND(vt0.c0)))) DESC, ((((CAST(vt0.c0 AS INTEGER))AND(vt0.c0 COLLATE RTRIM)))OR((NOT (vt0.c0)))) ASC  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)>(vt0.c0)), 533997045, (NOT (vt0.c0)))) AND ((((vt0.c0) IS TRUE), x'', (~ (vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))<<((vt0.c0 IN (vt0.c0))))) ORDER BY (((vt0.c0 IN ()))>>(((((-1.412283495E9)AND(vt0.c0)))AND(vt0.c0)))) DESC, ((((CAST(vt0.c0 AS INTEGER))AND(vt0.c0 COLLATE RTRIM)))OR((NOT (vt0.c0)))) ASC  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)>(vt0.c0)), 533997045, (NOT (vt0.c0)))) AND ((((vt0.c0) IS TRUE), x'', (~ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))==(((vt0.c0)<=('-aul')))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL))==(((vt0.c0)<=('-aul'))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))==(((vt0.c0)<=('-aul')))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL))==(((vt0.c0)<=('-aul'))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))==(((vt0.c0)<=('-aul')))));
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN '1120762759' THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (0.6892681902321405) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOTNULL)  WHEN '1120762759' THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (0.6892681902321405) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN '1120762759' THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (0.6892681902321405) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOTNULL)  WHEN '1120762759' THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (0.6892681902321405) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN '1120762759' THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (0.6892681902321405) AND (vt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))>(vt0.c0))) ORDER BY CAST(vt0.c0 AS BLOB), ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(x'')))AND(vt0.c0)))&(TYPEOF(x''))), ((vt0.c0) NOTNULL) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))>(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB), ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(x'')))AND(vt0.c0)))&(TYPEOF(x''))), ((vt0.c0) NOTNULL) COLLATE BINARY);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))>(vt0.c0))) ORDER BY CAST(vt0.c0 AS BLOB), ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(x'')))AND(vt0.c0)))&(TYPEOF(x''))), ((vt0.c0) NOTNULL) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))>(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB), ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(x'')))AND(vt0.c0)))&(TYPEOF(x''))), ((vt0.c0) NOTNULL) COLLATE BINARY);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))>(vt0.c0))) ORDER BY CAST(vt0.c0 AS BLOB), ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(x'')))AND(vt0.c0)))&(TYPEOF(x''))), ((vt0.c0) NOTNULL) COLLATE BINARY;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((~ (vt0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, (((vt0.c0) IS TRUE) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, (((vt0.c0) IS TRUE) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) ISNULL))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((~ (vt0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, (((vt0.c0) IS TRUE) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, (((vt0.c0) IS TRUE) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) ISNULL))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((~ (vt0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, (((vt0.c0) IS TRUE) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) ISNULL)));
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))<(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))<(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))<(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))<(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))<(vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 WHERE ((UPPER(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((UPPER(vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((UPPER(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((UPPER(vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((UPPER(vt0.c0) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)OR(NULL)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)OR(NULL)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)OR(NULL)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)OR(NULL)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)OR(NULL)) END DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)), 0.5845522248198828));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)), 0.5845522248198828)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)), 0.5845522248198828));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)), 0.5845522248198828)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)), 0.5845522248198828));
SELECT * FROM vt0 WHERE ((((- (vt0.c0)))GLOB(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))GLOB(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((- (vt0.c0)))GLOB(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))GLOB(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((- (vt0.c0)))GLOB(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (0X1f348cb0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (0X1f348cb0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (0X1f348cb0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (0X1f348cb0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (0X1f348cb0)));
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS TRUE)) ORDER BY ((((vt0.c0)+(vt0.c0)))<<(GLOB(vt0.c0, vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)+(vt0.c0)))<<(GLOB(vt0.c0, vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS TRUE)) ORDER BY ((((vt0.c0)+(vt0.c0)))<<(GLOB(vt0.c0, vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)+(vt0.c0)))<<(GLOB(vt0.c0, vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS TRUE)) ORDER BY ((((vt0.c0)+(vt0.c0)))<<(GLOB(vt0.c0, vt0.c0)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)/(vt0.c0)))))OR((((vt0.c0))<((vt0.c0))))))AND((~ ('')))))OR(LIKELIHOOD(DISTINCT vt0.c0, 0.6277146958869274)))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)/(vt0.c0)))))OR((((vt0.c0))<((vt0.c0))))))AND((~ ('')))))OR(LIKELIHOOD(DISTINCT vt0.c0, 0.6277146958869274)))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)/(vt0.c0)))))OR((((vt0.c0))<((vt0.c0))))))AND((~ ('')))))OR(LIKELIHOOD(DISTINCT vt0.c0, 0.6277146958869274)))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)/(vt0.c0)))))OR((((vt0.c0))<((vt0.c0))))))AND((~ ('')))))OR(LIKELIHOOD(DISTINCT vt0.c0, 0.6277146958869274)))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)/(vt0.c0)))))OR((((vt0.c0))<((vt0.c0))))))AND((~ ('')))))OR(LIKELIHOOD(DISTINCT vt0.c0, 0.6277146958869274)))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM;
SELECT * FROM vt0 WHERE (TRIM(CAST(vt0.c0 AS NUMERIC))) ORDER BY TRIM(vt0.c0 COLLATE BINARY, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ASC, LOWER(CAST(vt0.c0 AS TEXT)) ASC  NULLS LAST, (((vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))>=((((vt0.c0) IS TRUE), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (((vt0.c0))<=((vt0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(vt0.c0 COLLATE BINARY, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ASC, LOWER(CAST(vt0.c0 AS TEXT)) ASC  NULLS LAST, (((vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))>=((((vt0.c0) IS TRUE), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (((vt0.c0))<=((vt0.c0)))))) ASC);
SELECT * FROM vt0 WHERE (TRIM(CAST(vt0.c0 AS NUMERIC))) ORDER BY TRIM(vt0.c0 COLLATE BINARY, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ASC, LOWER(CAST(vt0.c0 AS TEXT)) ASC  NULLS LAST, (((vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))>=((((vt0.c0) IS TRUE), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (((vt0.c0))<=((vt0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(vt0.c0 COLLATE BINARY, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ASC, LOWER(CAST(vt0.c0 AS TEXT)) ASC  NULLS LAST, (((vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))>=((((vt0.c0) IS TRUE), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (((vt0.c0))<=((vt0.c0)))))) ASC);
SELECT * FROM vt0 WHERE (TRIM(CAST(vt0.c0 AS NUMERIC))) ORDER BY TRIM(vt0.c0 COLLATE BINARY, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ASC, LOWER(CAST(vt0.c0 AS TEXT)) ASC  NULLS LAST, (((vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))>=((((vt0.c0) IS TRUE), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (((vt0.c0))<=((vt0.c0)))))) ASC;
SELECT * FROM vt0 WHERE ((x'' IN ())) ORDER BY (+ (vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)) DESC);
SELECT * FROM vt0 WHERE ((x'' IN ())) ORDER BY (+ (vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)) DESC);
SELECT * FROM vt0 WHERE ((x'' IN ())) ORDER BY (+ (vt0.c0)) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND('1784257372'))) AND (((vt0.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND('1784257372'))) AND (((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND('1784257372'))) AND (((vt0.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND('1784257372'))) AND (((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND('1784257372'))) AND (((vt0.c0)||(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'')>=(((((vt0.c0)OR(vt0.c0)))AND(x'')))));
SELECT SUM(count) FROM (SELECT ((((x'')>=(((((vt0.c0)OR(vt0.c0)))AND(x''))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'')>=(((((vt0.c0)OR(vt0.c0)))AND(x'')))));
SELECT SUM(count) FROM (SELECT ((((x'')>=(((((vt0.c0)OR(vt0.c0)))AND(x''))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'')>=(((((vt0.c0)OR(vt0.c0)))AND(x'')))));
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(((vt0.c0) IS FALSE), 0.7303011055639803));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt0.c0) IS FALSE), 0.7303011055639803)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(((vt0.c0) IS FALSE), 0.7303011055639803));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt0.c0) IS FALSE), 0.7303011055639803)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(((vt0.c0) IS FALSE), 0.7303011055639803));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((0.3638812760524449 COLLATE RTRIM)) AND ((CAST(vt0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((0.3638812760524449 COLLATE RTRIM)) AND ((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((0.3638812760524449 COLLATE RTRIM)) AND ((CAST(vt0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((0.3638812760524449 COLLATE RTRIM)) AND ((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((0.3638812760524449 COLLATE RTRIM)) AND ((CAST(vt0.c0 AS REAL)))));
SELECT ALL * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM, vt0.c0 COLLATE BINARY))!=(((- (vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM, vt0.c0 COLLATE BINARY))!=(((- (vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM, vt0.c0 COLLATE BINARY))!=(((- (vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM, vt0.c0 COLLATE BINARY))!=(((- (vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM, vt0.c0 COLLATE BINARY))!=(((- (vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT * FROM vt0 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))OR(0xfffffffff849f78b)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('0.4091687012992733')))GLOB(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN UNLIKELY(DISTINCT vt0.c0) THEN vt0.c0 WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0)OR(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0)AND(vt0.c0)))OR(0xfffffffff849f78b)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('0.4091687012992733')))GLOB(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN UNLIKELY(DISTINCT vt0.c0) THEN vt0.c0 WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0)OR(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) IS FALSE) ASC);
SELECT * FROM vt0 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))OR(0xfffffffff849f78b)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('0.4091687012992733')))GLOB(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN UNLIKELY(DISTINCT vt0.c0) THEN vt0.c0 WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0)OR(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0)AND(vt0.c0)))OR(0xfffffffff849f78b)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('0.4091687012992733')))GLOB(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN UNLIKELY(DISTINCT vt0.c0) THEN vt0.c0 WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0)OR(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) IS FALSE) ASC);
SELECT * FROM vt0 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))OR(0xfffffffff849f78b)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('0.4091687012992733')))GLOB(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN UNLIKELY(DISTINCT vt0.c0) THEN vt0.c0 WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0)OR(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) IS FALSE) ASC;
