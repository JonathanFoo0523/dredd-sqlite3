-- Time: 2024/06/10 14:24:51
-- Database: database17
-- Database version: 3.40.0
-- seed value: 519391217
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1); -- 1ms;
ROLLBACK TRANSACTION; -- 4ms;
PRAGMA main.cache_size; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
PRAGMA short_column_names = false; -- 0ms;
UPDATE vt0 SET (c0, c0)=(0.24942987257190796, NULL) WHERE TOTAL_CHANGES(); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
END; -- 0ms;
PRAGMA optimize; -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA main.cell_size_check = false; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL); -- 0ms;
REINDEX  vt0; -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0.24942987257190796); -- 0ms;
UPDATE OR FAIL vt0 SET c0=0.21174321106257632 WHERE CASE WHEN ((vt0.c1)<<(vt0.c0)) THEN ((x'') NOT NULL) END; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=198483141,3');\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 198483141);\n; -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
REINDEX; -- 0ms;
PRAGMA temp.incremental_vacuum; -- 1ms;
END; -- 0ms;
COMMIT; -- 0ms;
PRAGMA temp.cell_size_check; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1906509806);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
VACUUM main; -- 1ms;
PRAGMA main.optimize; -- 1ms;
ANALYZE vt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 633498898); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 1ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 0ms;
PRAGMA optimize; -- 0ms;
UPDATE vt0 SET c0=0xffffffffe93172ac WHERE (NOT ((((vt0.c0))<=((vt0.c1))))); -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
PRAGMA journal_mode = DELETE; -- 0ms;
UPDATE vt0 SET c0='-382635348', c1=0.023256366945255347 WHERE ((LOWER(vt0.c1)) NOTNULL); -- 0ms;
UPDATE vt0 SET c0=0.0957697702136685 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END IN ()); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA main.automatic_index; -- 0ms;
UPDATE vt0 SET c0=0.8018943897173907; -- 0ms;
INSERT OR ABORT INTO vt0(c1) VALUES (0.3198101823954923); -- 1ms;
PRAGMA incremental_vacuum; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=NULL; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA journal_mode = PERSIST; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 REAL ); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c0) VALUES ('1629591345', 'lN[!훸'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (x'', '俬JPg7-A'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
UPDATE t0 SET c0=NULL WHERE ((CASE t0.c0  WHEN '198483141' THEN t0.c0 END)+((((t0.c0))<((t0.c0))))); -- 0ms;
PRAGMA integrity_check; -- 0ms;
PRAGMA main.busy_timeout = 0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1765029228);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1765029228);\n; -- 0ms;
PRAGMA journal_mode = TRUNCATE; -- 0ms;
CREATE INDEX IF NOT EXISTS i10 ON t0((x'b763' IN ((((c0)) NOT BETWEEN ((c0)) AND ((c0))))) COLLATE BINARY ASC) WHERE ((((((c0) NOT BETWEEN (c0) AND (c0)))OR(c0)))OR(((x'')&(c0)))); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
PRAGMA temp.foreign_keys = false; -- 0ms;
COMMIT; -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 935620709); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0 WHERE (NULL COLLATE RTRIM) ORDER BY CASE vt0.c1 COLLATE BINARY  WHEN vt0.c1 COLLATE NOCASE THEN vt0.c1 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1 COLLATE BINARY  WHEN vt0.c1 COLLATE NOCASE THEN vt0.c1 COLLATE BINARY END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (NULL COLLATE RTRIM) ORDER BY CASE vt0.c1 COLLATE BINARY  WHEN vt0.c1 COLLATE NOCASE THEN vt0.c1 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1 COLLATE BINARY  WHEN vt0.c1 COLLATE NOCASE THEN vt0.c1 COLLATE BINARY END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (NULL COLLATE RTRIM) ORDER BY CASE vt0.c1 COLLATE BINARY  WHEN vt0.c1 COLLATE NOCASE THEN vt0.c1 COLLATE BINARY END  NULLS LAST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((NULL)) NOT BETWEEN (((vt0.c1 IN (t0.c0)))) AND (((- (t0.c0))))) FULL OUTER JOIN vt0 ON CASE WHEN (((vt0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c2))) THEN ABS(DISTINCT rt0.c0) ELSE rt0.c1 COLLATE BINARY END WHERE (x'63ad') ORDER BY 0.5602982848479805;
SELECT SUM(count) FROM (SELECT ALL ((x'63ad') IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((NULL)) NOT BETWEEN (((vt0.c1 IN (t0.c0)))) AND (((- (t0.c0))))) FULL OUTER JOIN vt0 ON CASE WHEN (((vt0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c2))) THEN ABS(DISTINCT rt0.c0) ELSE rt0.c1 COLLATE BINARY END ORDER BY 0.5602982848479805);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((NULL)) NOT BETWEEN (((vt0.c1 IN (t0.c0)))) AND (((- (t0.c0))))) FULL OUTER JOIN vt0 ON CASE WHEN (((vt0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c2))) THEN ABS(DISTINCT rt0.c0) ELSE rt0.c1 COLLATE BINARY END WHERE (x'63ad') ORDER BY 0.5602982848479805;
SELECT SUM(count) FROM (SELECT ALL ((x'63ad') IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((NULL)) NOT BETWEEN (((vt0.c1 IN (t0.c0)))) AND (((- (t0.c0))))) FULL OUTER JOIN vt0 ON CASE WHEN (((vt0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c2))) THEN ABS(DISTINCT rt0.c0) ELSE rt0.c1 COLLATE BINARY END ORDER BY 0.5602982848479805);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 IN ()) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 IN ()) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c1 IN ()) IN ()));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)>>(t0.c0)) IN ())) ORDER BY t0.c0  NULLS LAST, CAST((t0.c0 IN (t0.c0, t0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)>>(t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY t0.c0  NULLS LAST, CAST((t0.c0 IN (t0.c0, t0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)>>(t0.c0)) IN ())) ORDER BY t0.c0  NULLS LAST, CAST((t0.c0 IN (t0.c0, t0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)>>(t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY t0.c0  NULLS LAST, CAST((t0.c0 IN (t0.c0, t0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)>>(t0.c0)) IN ())) ORDER BY t0.c0  NULLS LAST, CAST((t0.c0 IN (t0.c0, t0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE (((((((((((((rt0.c1)OR(rt0.c1)))AND(t0.c0)))AND(t0.c0 COLLATE RTRIM)))AND(CASE WHEN '-242952456' THEN rt0.c1 WHEN t0.c0 THEN 0.05439167472568318 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((rt0.c2)-(rt0.c2))))) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c1 END)AND(((rt0.c1)IS NOT(rt0.c2)))))AND(((rt0.c1)<(rt0.c2)))), ((((rt0.c1)|(rt0.c2))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c1)OR(rt0.c1)))AND(t0.c0)))AND(t0.c0 COLLATE RTRIM)))AND(CASE WHEN '-242952456' THEN rt0.c1 WHEN t0.c0 THEN 0.05439167472568318 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((rt0.c2)-(rt0.c2))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c1 END)AND(((rt0.c1)IS NOT(rt0.c2)))))AND(((rt0.c1)<(rt0.c2)))), ((((rt0.c1)|(rt0.c2))) IS FALSE) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (((((((((((((rt0.c1)OR(rt0.c1)))AND(t0.c0)))AND(t0.c0 COLLATE RTRIM)))AND(CASE WHEN '-242952456' THEN rt0.c1 WHEN t0.c0 THEN 0.05439167472568318 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((rt0.c2)-(rt0.c2))))) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c1 END)AND(((rt0.c1)IS NOT(rt0.c2)))))AND(((rt0.c1)<(rt0.c2)))), ((((rt0.c1)|(rt0.c2))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c1)OR(rt0.c1)))AND(t0.c0)))AND(t0.c0 COLLATE RTRIM)))AND(CASE WHEN '-242952456' THEN rt0.c1 WHEN t0.c0 THEN 0.05439167472568318 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((rt0.c2)-(rt0.c2))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c1 END)AND(((rt0.c1)IS NOT(rt0.c2)))))AND(((rt0.c1)<(rt0.c2)))), ((((rt0.c1)|(rt0.c2))) IS FALSE) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (((((((((((((rt0.c1)OR(rt0.c1)))AND(t0.c0)))AND(t0.c0 COLLATE RTRIM)))AND(CASE WHEN '-242952456' THEN rt0.c1 WHEN t0.c0 THEN 0.05439167472568318 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((rt0.c2)-(rt0.c2))))) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c1 END)AND(((rt0.c1)IS NOT(rt0.c2)))))AND(((rt0.c1)<(rt0.c2)))), ((((rt0.c1)|(rt0.c2))) IS FALSE) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON vt0.c0 WHERE (CASE WHEN CASE vt0.c1  WHEN t0.c0 THEN x'' ELSE t0.c0 END THEN ((t0.c0)<=(vt0.c1)) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c1  WHEN t0.c0 THEN x'' ELSE t0.c0 END THEN ((t0.c0)<=(vt0.c1)) ELSE NULL END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON vt0.c0);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON vt0.c0 WHERE (CASE WHEN CASE vt0.c1  WHEN t0.c0 THEN x'' ELSE t0.c0 END THEN ((t0.c0)<=(vt0.c1)) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c1  WHEN t0.c0 THEN x'' ELSE t0.c0 END THEN ((t0.c0)<=(vt0.c1)) ELSE NULL END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON vt0.c0);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON vt0.c0 WHERE (CASE WHEN CASE vt0.c1  WHEN t0.c0 THEN x'' ELSE t0.c0 END THEN ((t0.c0)<=(vt0.c1)) ELSE NULL END);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0))) ORDER BY x'' DESC;
SELECT ALL * FROM rt0 NOT INDEXED, vt0, t0 WHERE (TRIM(((t0.c0)==(rt0.c2)))) ORDER BY ((QUOTE(rt0.c1)) BETWEEN (CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) AND (TYPEOF(t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((t0.c0)==(rt0.c2)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((QUOTE(rt0.c1)) BETWEEN (CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) AND (TYPEOF(t0.c0)))  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED, vt0, t0 WHERE (TRIM(((t0.c0)==(rt0.c2)))) ORDER BY ((QUOTE(rt0.c1)) BETWEEN (CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) AND (TYPEOF(t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((t0.c0)==(rt0.c2)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((QUOTE(rt0.c1)) BETWEEN (CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) AND (TYPEOF(t0.c0)))  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED, vt0, t0 WHERE (TRIM(((t0.c0)==(rt0.c2)))) ORDER BY ((QUOTE(rt0.c1)) BETWEEN (CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) AND (TYPEOF(t0.c0)))  NULLS FIRST;
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))||('-1025736833')) FULL OUTER JOIN t0 ON TRIM(DISTINCT (((vt0.c0))=((vt0.c1)))) WHERE (((((rt0.c0) NOTNULL))!=(((t0.c0) NOTNULL)))) ORDER BY (NOT (((rt0.c2) IS FALSE))) ASC, (((((t0.c0, '0.05439167472568318', vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((t0.c0, rt0.c0, vt0.c0, rt0.c1, t0.c0)) AND ((rt0.c1, vt0.c0, t0.c0, rt0.c1, vt0.c1))))>>(t0.c0 COLLATE RTRIM)), (((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ('-382635348', vt0.c1 COLLATE NOCASE)) DESC, ((((vt0.c1)/(rt0.c2))) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(t0.c0)))AND(vt0.c0))) AND (((rt0.c0)/(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL))<>(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))||('-1025736833')) FULL OUTER JOIN t0 ON TRIM(DISTINCT (((vt0.c0))==((vt0.c1)))) ORDER BY (NOT (((rt0.c2) IS FALSE))) ASC, (((((t0.c0, '0.05439167472568318', vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((t0.c0, rt0.c0, vt0.c0, rt0.c1, t0.c0)) AND ((rt0.c1, vt0.c0, t0.c0, rt0.c1, vt0.c1))))>>(t0.c0 COLLATE RTRIM)), (((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ('-382635348', vt0.c1 COLLATE NOCASE)) DESC, ((((vt0.c1)/(rt0.c2))) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(t0.c0)))AND(vt0.c0))) AND (((rt0.c0)/(vt0.c1))))  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))||('-1025736833')) FULL OUTER JOIN t0 ON TRIM(DISTINCT (((vt0.c0))=((vt0.c1)))) WHERE (((((rt0.c0) NOTNULL))!=(((t0.c0) NOTNULL)))) ORDER BY (NOT (((rt0.c2) IS FALSE))) ASC, (((((t0.c0, '0.05439167472568318', vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((t0.c0, rt0.c0, vt0.c0, rt0.c1, t0.c0)) AND ((rt0.c1, vt0.c0, t0.c0, rt0.c1, vt0.c1))))>>(t0.c0 COLLATE RTRIM)), (((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ('-382635348', vt0.c1 COLLATE NOCASE)) DESC, ((((vt0.c1)/(rt0.c2))) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(t0.c0)))AND(vt0.c0))) AND (((rt0.c0)/(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL))<>(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))||('-1025736833')) FULL OUTER JOIN t0 ON TRIM(DISTINCT (((vt0.c0))==((vt0.c1)))) ORDER BY (NOT (((rt0.c2) IS FALSE))) ASC, (((((t0.c0, '0.05439167472568318', vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((t0.c0, rt0.c0, vt0.c0, rt0.c1, t0.c0)) AND ((rt0.c1, vt0.c0, t0.c0, rt0.c1, vt0.c1))))>>(t0.c0 COLLATE RTRIM)), (((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ('-382635348', vt0.c1 COLLATE NOCASE)) DESC, ((((vt0.c1)/(rt0.c2))) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(t0.c0)))AND(vt0.c0))) AND (((rt0.c0)/(vt0.c1))))  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))||('-1025736833')) FULL OUTER JOIN t0 ON TRIM(DISTINCT (((vt0.c0))=((vt0.c1)))) WHERE (((((rt0.c0) NOTNULL))!=(((t0.c0) NOTNULL)))) ORDER BY (NOT (((rt0.c2) IS FALSE))) ASC, (((((t0.c0, '0.05439167472568318', vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((t0.c0, rt0.c0, vt0.c0, rt0.c1, t0.c0)) AND ((rt0.c1, vt0.c0, t0.c0, rt0.c1, vt0.c1))))>>(t0.c0 COLLATE RTRIM)), (((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ('-382635348', vt0.c1 COLLATE NOCASE)) DESC, ((((vt0.c1)/(rt0.c2))) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(t0.c0)))AND(vt0.c0))) AND (((rt0.c0)/(vt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (NULLIF(DISTINCT ((rt0.c2) NOT NULL), t0.c0));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((rt0.c2) NOT NULL), t0.c0)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (NULLIF(DISTINCT ((rt0.c2) NOT NULL), t0.c0));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((rt0.c2) NOT NULL), t0.c0)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (NULLIF(DISTINCT ((rt0.c2) NOT NULL), t0.c0));
SELECT ALL * FROM rt0, vt0 WHERE (LIKELY(DISTINCT (NOT (rt0.c0)))) ORDER BY ((((rt0.c1) BETWEEN (x'') AND (rt0.c0))) NOT BETWEEN (((vt0.c0)<<(rt0.c2))) AND ((+ (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (NOT (rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1) BETWEEN (x'') AND (rt0.c0))) NOT BETWEEN (((vt0.c0)<<(rt0.c2))) AND ((+ (rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (LIKELY(DISTINCT (NOT (rt0.c0)))) ORDER BY ((((rt0.c1) BETWEEN (x'') AND (rt0.c0))) NOT BETWEEN (((vt0.c0)<<(rt0.c2))) AND ((+ (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (NOT (rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1) BETWEEN (x'') AND (rt0.c0))) NOT BETWEEN (((vt0.c0)<<(rt0.c2))) AND ((+ (rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (LIKELY(DISTINCT (NOT (rt0.c0)))) ORDER BY ((((rt0.c1) BETWEEN (x'') AND (rt0.c0))) NOT BETWEEN (((vt0.c0)<<(rt0.c2))) AND ((+ (rt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE BINARY) ORDER BY (((vt0.c0 IN ())) BETWEEN (((vt0.c1) NOT NULL)) AND (((((vt0.c0)OR(vt0.c1)))OR(0.17844879110778178)))) DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) BETWEEN (((vt0.c1) NOT NULL)) AND (((((vt0.c0)OR(vt0.c1)))OR(0.17844879110778178)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE BINARY) ORDER BY (((vt0.c0 IN ())) BETWEEN (((vt0.c1) NOT NULL)) AND (((((vt0.c0)OR(vt0.c1)))OR(0.17844879110778178)))) DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) BETWEEN (((vt0.c1) NOT NULL)) AND (((((vt0.c0)OR(vt0.c1)))OR(0.17844879110778178)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE BINARY) ORDER BY (((vt0.c0 IN ())) BETWEEN (((vt0.c1) NOT NULL)) AND (((((vt0.c0)OR(vt0.c1)))OR(0.17844879110778178)))) DESC;
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0)) COLLATE BINARY COLLATE RTRIM) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c1 DESC);
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0)) COLLATE BINARY COLLATE RTRIM) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c1 DESC);
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0)) COLLATE BINARY COLLATE RTRIM) ORDER BY vt0.c1 DESC;
SELECT ALL * FROM rt0, vt0 WHERE (CAST((0Xffffffffc2dc7f7f IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((0xffffffffc2dc7f7f IN ()) AS REAL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST((0Xffffffffc2dc7f7f IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((0xffffffffc2dc7f7f IN ()) AS REAL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST((0Xffffffffc2dc7f7f IN ()) AS REAL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)) AS BLOB));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0))>=((((t0.c0) IS TRUE))))) ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN '91959696' ELSE t0.c0 END AS NUMERIC) ASC  NULLS LAST, ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))IS(((t0.c0)<(t0.c0))))  NULLS LAST, ((((t0.c0)||(t0.c0)))IS(((t0.c0)*(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0))>=((((t0.c0) IS TRUE))))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN '91959696' ELSE t0.c0 END AS NUMERIC) ASC  NULLS LAST, ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))IS(((t0.c0)<(t0.c0))))  NULLS LAST, ((((t0.c0)||(t0.c0)))IS(((t0.c0)*(t0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0))>=((((t0.c0) IS TRUE))))) ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN '91959696' ELSE t0.c0 END AS NUMERIC) ASC  NULLS LAST, ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))IS(((t0.c0)<(t0.c0))))  NULLS LAST, ((((t0.c0)||(t0.c0)))IS(((t0.c0)*(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0))>=((((t0.c0) IS TRUE))))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN '91959696' ELSE t0.c0 END AS NUMERIC) ASC  NULLS LAST, ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))IS(((t0.c0)<(t0.c0))))  NULLS LAST, ((((t0.c0)||(t0.c0)))IS(((t0.c0)*(t0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0))>=((((t0.c0) IS TRUE))))) ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN '91959696' ELSE t0.c0 END AS NUMERIC) ASC  NULLS LAST, ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))IS(((t0.c0)<(t0.c0))))  NULLS LAST, ((((t0.c0)||(t0.c0)))IS(((t0.c0)*(t0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CAST((((vt0.c1))>=((rt0.c0))) AS REAL)) ORDER BY (('-1025736833') NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1))>=((rt0.c0))) AS REAL)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (('-1025736833') NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CAST((((vt0.c1))>=((rt0.c0))) AS REAL)) ORDER BY (('-1025736833') NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1))>=((rt0.c0))) AS REAL)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (('-1025736833') NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CAST((((vt0.c1))>=((rt0.c0))) AS REAL)) ORDER BY (('-1025736833') NOT NULL)  NULLS LAST;
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN rt0 ON ((((rt0.c0)!=(0xbd49cc5)))||(CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END)) WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON ((((rt0.c0)!=(0xbd49cc5)))||(CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END)));
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN rt0 ON ((((rt0.c0)!=(0xbd49cc5)))||(CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END)) WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON ((((rt0.c0)!=(0xbd49cc5)))||(CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END)));
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN rt0 ON ((((rt0.c0)!=(0xbd49cc5)))||(CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END)) WHERE (vt0.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN 0.6558757800175319 THEN HEX(NULL) END INNER JOIN vt0 ON (((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))>((CAST(t0.c0 AS INTEGER)))) WHERE ((((((t0.c0, vt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c0)) AND ((t0.c0, rt0.c0, x'dd5d'))))LIKE(rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((((t0.c0, vt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c0)) AND ((t0.c0, rt0.c0, x'dd5d'))))LIKE(rt0.c1))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN 0.6558757800175319 THEN HEX(NULL) END INNER JOIN vt0 ON (((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))>((CAST(t0.c0 AS INTEGER)))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN 0.6558757800175319 THEN HEX(NULL) END INNER JOIN vt0 ON (((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))>((CAST(t0.c0 AS INTEGER)))) WHERE ((((((t0.c0, vt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c0)) AND ((t0.c0, rt0.c0, x'dd5d'))))LIKE(rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((((t0.c0, vt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c0)) AND ((t0.c0, rt0.c0, x'dd5d'))))LIKE(rt0.c1))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN 0.6558757800175319 THEN HEX(NULL) END INNER JOIN vt0 ON (((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))>((CAST(t0.c0 AS INTEGER)))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN 0.6558757800175319 THEN HEX(NULL) END INNER JOIN vt0 ON (((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))>((CAST(t0.c0 AS INTEGER)))) WHERE ((((((t0.c0, vt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c0)) AND ((t0.c0, rt0.c0, x'dd5d'))))LIKE(rt0.c1)));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CAST(((NULL)<<('0.17844879110778178')) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)<<('0.17844879110778178')) AS BLOB)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CAST(((NULL)<<('0.17844879110778178')) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)<<('0.17844879110778178')) AS BLOB)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CAST(((NULL)<<('0.17844879110778178')) AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((x'') NOT BETWEEN (vt0.c0) AND (t0.c0))))>=(((0.05439167472568318 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'') NOT BETWEEN (vt0.c0) AND (t0.c0))))>=(((0.05439167472568318 IN ()))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((x'') NOT BETWEEN (vt0.c0) AND (t0.c0))))>=(((0.05439167472568318 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'') NOT BETWEEN (vt0.c0) AND (t0.c0))))>=(((0.05439167472568318 IN ()))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((x'') NOT BETWEEN (vt0.c0) AND (t0.c0))))>=(((0.05439167472568318 IN ())))));
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t0 NATURAL JOIN rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, vt0.c1, t0.c0)) AND ((vt0.c0, t0.c0, vt0.c0)))) NOT BETWEEN ((rt0.c1 IN (rt0.c1, rt0.c2))) AND (rt0.c0 COLLATE NOCASE))) ORDER BY rt0.c2 COLLATE NOCASE ASC, (CAST('俬JPg7-A' AS NUMERIC) IN ()) DESC  NULLS FIRST, CAST(CAST(rt0.c0 AS BLOB) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, vt0.c1, t0.c0)) AND ((vt0.c0, t0.c0, vt0.c0)))) NOT BETWEEN ((rt0.c1 IN (rt0.c1, rt0.c2))) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN rt0 ORDER BY rt0.c2 COLLATE NOCASE ASC, (CAST('俬JPg7-A' AS NUMERIC) IN ()) DESC  NULLS FIRST, CAST(CAST(rt0.c0 AS BLOB) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 NATURAL JOIN rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, vt0.c1, t0.c0)) AND ((vt0.c0, t0.c0, vt0.c0)))) NOT BETWEEN ((rt0.c1 IN (rt0.c1, rt0.c2))) AND (rt0.c0 COLLATE NOCASE))) ORDER BY rt0.c2 COLLATE NOCASE ASC, (CAST('俬JPg7-A' AS NUMERIC) IN ()) DESC  NULLS FIRST, CAST(CAST(rt0.c0 AS BLOB) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, vt0.c1, t0.c0)) AND ((vt0.c0, t0.c0, vt0.c0)))) NOT BETWEEN ((rt0.c1 IN (rt0.c1, rt0.c2))) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN rt0 ORDER BY rt0.c2 COLLATE NOCASE ASC, (CAST('俬JPg7-A' AS NUMERIC) IN ()) DESC  NULLS FIRST, CAST(CAST(rt0.c0 AS BLOB) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 NATURAL JOIN rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, vt0.c1, t0.c0)) AND ((vt0.c0, t0.c0, vt0.c0)))) NOT BETWEEN ((rt0.c1 IN (rt0.c1, rt0.c2))) AND (rt0.c0 COLLATE NOCASE))) ORDER BY rt0.c2 COLLATE NOCASE ASC, (CAST('俬JPg7-A' AS NUMERIC) IN ()) DESC  NULLS FIRST, CAST(CAST(rt0.c0 AS BLOB) AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((((CAST(t0.c0 AS REAL))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(CAST(t0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS REAL))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((CAST(t0.c0 AS REAL))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(CAST(t0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS REAL))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((CAST(t0.c0 AS REAL))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(CAST(t0.c0 AS NUMERIC))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((('378372631')AND(vt0.c1)), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)) AND (('P7F[-O', (~ (vt0.c1)), vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((('378372631')AND(vt0.c1)), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)) AND (('P7F[-O', (~ (vt0.c1)), vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((('378372631')AND(vt0.c1)), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)) AND (('P7F[-O', (~ (vt0.c1)), vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((('378372631')AND(vt0.c1)), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)) AND (('P7F[-O', (~ (vt0.c1)), vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((('378372631')AND(vt0.c1)), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)) AND (('P7F[-O', (~ (vt0.c1)), vt0.c1))));
SELECT ALL * FROM vt0 WHERE ((((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) IN (TYPEOF(DISTINCT vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) IN (TYPEOF(DISTINCT vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) IN (TYPEOF(DISTINCT vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) IN (TYPEOF(DISTINCT vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) IN (TYPEOF(DISTINCT vt0.c1))));
SELECT COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt0 ON CASE (vt0.c1 IN (rt0.c0, rt0.c0))  WHEN LOWER(',N') THEN (((vt0.c1, vt0.c1, rt0.c2))<=((vt0.c1, rt0.c1, rt0.c1))) ELSE ((((vt0.c1)OR(NULL)))AND(rt0.c0)) END WHERE (((t0.c0)>(rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)>(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt0 ON CASE (vt0.c1 IN (rt0.c0, rt0.c0))  WHEN LOWER(',N') THEN (((vt0.c1, vt0.c1, rt0.c2))<=((vt0.c1, rt0.c1, rt0.c1))) ELSE ((((vt0.c1)OR(NULL)))AND(rt0.c0)) END);
SELECT COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt0 ON CASE (vt0.c1 IN (rt0.c0, rt0.c0))  WHEN LOWER(',N') THEN (((vt0.c1, vt0.c1, rt0.c2))<=((vt0.c1, rt0.c1, rt0.c1))) ELSE ((((vt0.c1)OR(NULL)))AND(rt0.c0)) END WHERE (((t0.c0)>(rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)>(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt0 ON CASE (vt0.c1 IN (rt0.c0, rt0.c0))  WHEN LOWER(',N') THEN (((vt0.c1, vt0.c1, rt0.c2))<=((vt0.c1, rt0.c1, rt0.c1))) ELSE ((((vt0.c1)OR(NULL)))AND(rt0.c0)) END);
SELECT COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt0 ON CASE (vt0.c1 IN (rt0.c0, rt0.c0))  WHEN LOWER(',N') THEN (((vt0.c1, vt0.c1, rt0.c2))<=((vt0.c1, rt0.c1, rt0.c1))) ELSE ((((vt0.c1)OR(NULL)))AND(rt0.c0)) END WHERE (((t0.c0)>(rt0.c2)) COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c0)%(t0.c0))  WHEN (((0Xffffffffafa5d986, t0.c0, x'')) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, NULL, t0.c0))) THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN CAST(t0.c0 AS BLOB) THEN t0.c0 WHEN ((NULL)+(t0.c0)) THEN x'1658' ELSE ((t0.c0)IS NOT(x'')) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0)%(t0.c0))  WHEN (((0Xffffffffafa5d986, t0.c0, x'')) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, NULL, t0.c0))) THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN CAST(t0.c0 AS BLOB) THEN t0.c0 WHEN ((NULL)+(t0.c0)) THEN x'1658' ELSE ((t0.c0)IS NOT(x'')) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c0)%(t0.c0))  WHEN (((0Xffffffffafa5d986, t0.c0, x'')) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, NULL, t0.c0))) THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN CAST(t0.c0 AS BLOB) THEN t0.c0 WHEN ((NULL)+(t0.c0)) THEN x'1658' ELSE ((t0.c0)IS NOT(x'')) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0)%(t0.c0))  WHEN (((0Xffffffffafa5d986, t0.c0, x'')) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, NULL, t0.c0))) THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN CAST(t0.c0 AS BLOB) THEN t0.c0 WHEN ((NULL)+(t0.c0)) THEN x'1658' ELSE ((t0.c0)IS NOT(x'')) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c0)%(t0.c0))  WHEN (((0Xffffffffafa5d986, t0.c0, x'')) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, NULL, t0.c0))) THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN CAST(t0.c0 AS BLOB) THEN t0.c0 WHEN ((NULL)+(t0.c0)) THEN x'1658' ELSE ((t0.c0)IS NOT(x'')) END);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM)<<(((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)<<(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM)<<(((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)<<(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM)<<(((vt0.c1) IS TRUE))));
SELECT ALL * FROM vt0, t0 WHERE (((json_patch(vt0.c1, t0.c0)) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((json_patch(vt0.c1, t0.c0)) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c1))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((json_patch(vt0.c1, t0.c0)) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((json_patch(vt0.c1, t0.c0)) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c1))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((json_patch(vt0.c1, t0.c0)) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c1)));
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((NULL IN ()) IN ()) WHERE (CASE WHEN '5>' THEN rt0.c1 COLLATE NOCASE ELSE rt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '5>' THEN rt0.c1 COLLATE NOCASE ELSE rt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((NULL IN ()) IN ()));
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((NULL IN ()) IN ()) WHERE (CASE WHEN '5>' THEN rt0.c1 COLLATE NOCASE ELSE rt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '5>' THEN rt0.c1 COLLATE NOCASE ELSE rt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((NULL IN ()) IN ()));
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((NULL IN ()) IN ()) WHERE (CASE WHEN '5>' THEN rt0.c1 COLLATE NOCASE ELSE rt0.c0 COLLATE NOCASE END);
SELECT * FROM rt0 WHERE ((((NOT (NULL))) NOT BETWEEN (((rt0.c2)GLOB(rt0.c1))) AND (((rt0.c1) IS TRUE)))) ORDER BY ((((((((((rt0.c2) NOT NULL))OR('1629591345')))AND(((rt0.c0)*(rt0.c1)))))AND(((0.5602982848479805)|(rt0.c0)))))OR((NOT (rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (NULL))) NOT BETWEEN (((rt0.c2)GLOB(rt0.c1))) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c2) NOT NULL))OR('1629591345')))AND(((rt0.c0)*(rt0.c1)))))AND(((0.5602982848479805)|(rt0.c0)))))OR((NOT (rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((NOT (NULL))) NOT BETWEEN (((rt0.c2)GLOB(rt0.c1))) AND (((rt0.c1) IS TRUE)))) ORDER BY ((((((((((rt0.c2) NOT NULL))OR('1629591345')))AND(((rt0.c0)*(rt0.c1)))))AND(((0.5602982848479805)|(rt0.c0)))))OR((NOT (rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (NULL))) NOT BETWEEN (((rt0.c2)GLOB(rt0.c1))) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c2) NOT NULL))OR('1629591345')))AND(((rt0.c0)*(rt0.c1)))))AND(((0.5602982848479805)|(rt0.c0)))))OR((NOT (rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((NOT (NULL))) NOT BETWEEN (((rt0.c2)GLOB(rt0.c1))) AND (((rt0.c1) IS TRUE)))) ORDER BY ((((((((((rt0.c2) NOT NULL))OR('1629591345')))AND(((rt0.c0)*(rt0.c1)))))AND(((0.5602982848479805)|(rt0.c0)))))OR((NOT (rt0.c2)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT * FROM vt0 WHERE (TRIM(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TRIM(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TRIM(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE ((x'' COLLATE BINARY IN ())) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END)>>(CAST(t0.c0 AS INTEGER))) DESC, ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)AND(((t0.c0)>=(t0.c0)))))AND(CAST(t0.c0 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'' COLLATE BINARY IN ())) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END)>>(CAST(t0.c0 AS INTEGER))) DESC, ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)AND(((t0.c0)>=(t0.c0)))))AND(CAST(t0.c0 AS TEXT))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((x'' COLLATE BINARY IN ())) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END)>>(CAST(t0.c0 AS INTEGER))) DESC, ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)AND(((t0.c0)>=(t0.c0)))))AND(CAST(t0.c0 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'' COLLATE BINARY IN ())) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END)>>(CAST(t0.c0 AS INTEGER))) DESC, ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)AND(((t0.c0)>=(t0.c0)))))AND(CAST(t0.c0 AS TEXT))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((x'' COLLATE BINARY IN ())) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END)>>(CAST(t0.c0 AS INTEGER))) DESC, ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)AND(((t0.c0)>=(t0.c0)))))AND(CAST(t0.c0 AS TEXT))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((((((((0x585b4fec)OR(vt0.c1)))OR(vt0.c0)))AND(t0.c0)))AND(vt0.c1)))))OR(CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((((((((0x585b4fec)OR(vt0.c1)))OR(vt0.c0)))AND(t0.c0)))AND(vt0.c1)))))OR(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((((((((0x585b4fec)OR(vt0.c1)))OR(vt0.c0)))AND(t0.c0)))AND(vt0.c1)))))OR(CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((((((((0x585b4fec)OR(vt0.c1)))OR(vt0.c0)))AND(t0.c0)))AND(vt0.c1)))))OR(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((((((((0x585b4fec)OR(vt0.c1)))OR(vt0.c0)))AND(t0.c0)))AND(vt0.c1)))))OR(CAST(t0.c0 AS REAL))));
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN (((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)), ((vt0.c0)>(1736883663)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS TEXT) IN (((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)), ((vt0.c0)>(1736883663))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN (((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)), ((vt0.c0)>(1736883663)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS TEXT) IN (((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)), ((vt0.c0)>(1736883663))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN (((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)), ((vt0.c0)>(1736883663)))));
SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0)GLOB('0.21174321106257632')) AS REAL) WHERE ((((t0.c0)<=(t0.c0)) IN ())) ORDER BY CASE ((((vt0.c1)AND(t0.c0)))OR(t0.c0))  WHEN (NOT (rt0.c2)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE ((t0.c0)AND(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)<=(t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0)GLOB('0.21174321106257632')) AS REAL) ORDER BY CASE ((((vt0.c1)AND(t0.c0)))OR(t0.c0))  WHEN (NOT (rt0.c2)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE ((t0.c0)AND(vt0.c0)) END  NULLS LAST);
SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0)GLOB('0.21174321106257632')) AS REAL) WHERE ((((t0.c0)<=(t0.c0)) IN ())) ORDER BY CASE ((((vt0.c1)AND(t0.c0)))OR(t0.c0))  WHEN (NOT (rt0.c2)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE ((t0.c0)AND(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)<=(t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0)GLOB('0.21174321106257632')) AS REAL) ORDER BY CASE ((((vt0.c1)AND(t0.c0)))OR(t0.c0))  WHEN (NOT (rt0.c2)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE ((t0.c0)AND(vt0.c0)) END  NULLS LAST);
SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0)GLOB('0.21174321106257632')) AS REAL) WHERE ((((t0.c0)<=(t0.c0)) IN ())) ORDER BY CASE ((((vt0.c1)AND(t0.c0)))OR(t0.c0))  WHEN (NOT (rt0.c2)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE ((t0.c0)AND(vt0.c0)) END  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (UNLIKELY(rt0.c1) COLLATE NOCASE) ORDER BY ((((rt0.c2) NOT BETWEEN (0.03081392920150683) AND (vt0.c0))) NOT BETWEEN ((NOT (rt0.c1))) AND (rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(rt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (0.03081392920150683) AND (vt0.c0))) NOT BETWEEN ((NOT (rt0.c1))) AND (rt0.c0)));
SELECT * FROM vt0, rt0 WHERE (UNLIKELY(rt0.c1) COLLATE NOCASE) ORDER BY ((((rt0.c2) NOT BETWEEN (0.03081392920150683) AND (vt0.c0))) NOT BETWEEN ((NOT (rt0.c1))) AND (rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(rt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (0.03081392920150683) AND (vt0.c0))) NOT BETWEEN ((NOT (rt0.c1))) AND (rt0.c0)));
SELECT * FROM vt0, rt0 WHERE (UNLIKELY(rt0.c1) COLLATE NOCASE) ORDER BY ((((rt0.c2) NOT BETWEEN (0.03081392920150683) AND (vt0.c0))) NOT BETWEEN ((NOT (rt0.c1))) AND (rt0.c0));
SELECT ALL COUNT(*) FROM rt0 WHERE (((json_object(rt0.c0, rt0.c1, rt0.c2, rt0.c1)) ISNULL)) ORDER BY ((rt0.c0)LIKE(CASE WHEN rt0.c1 THEN rt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_object(rt0.c0, rt0.c1, rt0.c2, rt0.c1)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0)LIKE(CASE WHEN rt0.c1 THEN rt0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((json_object(rt0.c0, rt0.c1, rt0.c2, rt0.c1)) ISNULL)) ORDER BY ((rt0.c0)LIKE(CASE WHEN rt0.c1 THEN rt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_object(rt0.c0, rt0.c1, rt0.c2, rt0.c1)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0)LIKE(CASE WHEN rt0.c1 THEN rt0.c0 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (UPPER(COALESCE(t0.c0, t0.c0, t0.c0, t0.c0)));
SELECT SUM(count) FROM (SELECT ((UPPER(COALESCE(t0.c0, t0.c0, t0.c0, t0.c0))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (UPPER(COALESCE(t0.c0, t0.c0, t0.c0, t0.c0)));
SELECT SUM(count) FROM (SELECT ((UPPER(COALESCE(t0.c0, t0.c0, t0.c0, t0.c0))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (UPPER(COALESCE(t0.c0, t0.c0, t0.c0, t0.c0)));
SELECT * FROM t0 WHERE ((('91959696') NOT NULL)) ORDER BY CAST(((t0.c0)/(t0.c0)) AS INTEGER)  NULLS LAST, (((((x'') IS FALSE), ((t0.c0) NOT NULL), t0.c0 COLLATE BINARY))<=((t0.c0, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, 1139573141)))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('91959696') NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0)/(t0.c0)) AS INTEGER)  NULLS LAST, (((((x'') IS FALSE), ((t0.c0) NOT NULL), t0.c0 COLLATE BINARY))<=((t0.c0, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, 1139573141)))))) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((('91959696') NOT NULL)) ORDER BY CAST(((t0.c0)/(t0.c0)) AS INTEGER)  NULLS LAST, (((((x'') IS FALSE), ((t0.c0) NOT NULL), t0.c0 COLLATE BINARY))<=((t0.c0, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, 1139573141)))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('91959696') NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0)/(t0.c0)) AS INTEGER)  NULLS LAST, (((((x'') IS FALSE), ((t0.c0) NOT NULL), t0.c0 COLLATE BINARY))<=((t0.c0, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, 1139573141)))))) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((('91959696') NOT NULL)) ORDER BY CAST(((t0.c0)/(t0.c0)) AS INTEGER)  NULLS LAST, (((((x'') IS FALSE), ((t0.c0) NOT NULL), t0.c0 COLLATE BINARY))<=((t0.c0, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, 1139573141)))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON (('N_lu)') BETWEEN ((- (vt0.c0))) AND (LTRIM(x'fa1b', rt0.c2))) WHERE ((TRIM(DISTINCT vt0.c1, x'') IN (((x'4aea') NOTNULL)))) ORDER BY rt0.c1 COLLATE BINARY  NULLS FIRST, ((((vt0.c1) IS TRUE))LIKE(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT vt0.c1, x'') IN (((x'4aea') NOTNULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (('N_lu)') BETWEEN ((- (vt0.c0))) AND (LTRIM(x'fa1b', rt0.c2))) ORDER BY rt0.c1 COLLATE BINARY  NULLS FIRST, ((((vt0.c1) IS TRUE))LIKE(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON (('N_lu)') BETWEEN ((- (vt0.c0))) AND (LTRIM(x'fa1b', rt0.c2))) WHERE ((TRIM(DISTINCT vt0.c1, x'') IN (((x'4aea') NOTNULL)))) ORDER BY rt0.c1 COLLATE BINARY  NULLS FIRST, ((((vt0.c1) IS TRUE))LIKE(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT vt0.c1, x'') IN (((x'4aea') NOTNULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (('N_lu)') BETWEEN ((- (vt0.c0))) AND (LTRIM(x'fa1b', rt0.c2))) ORDER BY rt0.c1 COLLATE BINARY  NULLS FIRST, ((((vt0.c1) IS TRUE))LIKE(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON (('N_lu)') BETWEEN ((- (vt0.c0))) AND (LTRIM(x'fa1b', rt0.c2))) WHERE ((TRIM(DISTINCT vt0.c1, x'') IN (((x'4aea') NOTNULL)))) ORDER BY rt0.c1 COLLATE BINARY  NULLS FIRST, ((((vt0.c1) IS TRUE))LIKE(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (TYPEOF((~ (t0.c0)))) ORDER BY (((+ (rt0.c1))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF((~ (t0.c0)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((+ (rt0.c1))) ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (TYPEOF((~ (t0.c0)))) ORDER BY (((+ (rt0.c1))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF((~ (t0.c0)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((+ (rt0.c1))) ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (TYPEOF((~ (t0.c0)))) ORDER BY (((+ (rt0.c1))) ISNULL) ASC  NULLS LAST;
SELECT * FROM t0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (NULL) AND (t0.c0)))&((((rt0.c2, t0.c0, rt0.c0))<((rt0.c2, rt0.c0, rt0.c1)))))) ORDER BY 'k^箨cr?9j/' COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (NULL) AND (t0.c0)))&((((rt0.c2, t0.c0, rt0.c0))<((rt0.c2, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY 'k^箨cr?9j/' COLLATE BINARY  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (NULL) AND (t0.c0)))&((((rt0.c2, t0.c0, rt0.c0))<((rt0.c2, rt0.c0, rt0.c1)))))) ORDER BY 'k^箨cr?9j/' COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (NULL) AND (t0.c0)))&((((rt0.c2, t0.c0, rt0.c0))<((rt0.c2, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY 'k^箨cr?9j/' COLLATE BINARY  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (NULL) AND (t0.c0)))&((((rt0.c2, t0.c0, rt0.c0))<((rt0.c2, rt0.c0, rt0.c1)))))) ORDER BY 'k^箨cr?9j/' COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE (((0.41748500816002065)OR(rt0.c0 COLLATE RTRIM))) ORDER BY ((CAST('' AS INTEGER)) NOT BETWEEN ('') AND (0.7974886142293898))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.41748500816002065)OR(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST('' AS INTEGER)) NOT BETWEEN ('') AND (0.7974886142293898))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (((0.41748500816002065)OR(rt0.c0 COLLATE RTRIM))) ORDER BY ((CAST('' AS INTEGER)) NOT BETWEEN ('') AND (0.7974886142293898))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.41748500816002065)OR(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST('' AS INTEGER)) NOT BETWEEN ('') AND (0.7974886142293898))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (((0.41748500816002065)OR(rt0.c0 COLLATE RTRIM))) ORDER BY ((CAST('' AS INTEGER)) NOT BETWEEN ('') AND (0.7974886142293898))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST(LTRIM(rt0.c1) AS TEXT)) ORDER BY rt0.c2  NULLS FIRST, (rt0.c2 IN (MAX(rt0.c1, rt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LTRIM(rt0.c1) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST, (rt0.c2 IN (MAX(rt0.c1, rt0.c2))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(LTRIM(rt0.c1) AS TEXT)) ORDER BY rt0.c2  NULLS FIRST, (rt0.c2 IN (MAX(rt0.c1, rt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LTRIM(rt0.c1) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST, (rt0.c2 IN (MAX(rt0.c1, rt0.c2))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(LTRIM(rt0.c1) AS TEXT)) ORDER BY rt0.c2  NULLS FIRST, (rt0.c2 IN (MAX(rt0.c1, rt0.c2))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END COLLATE NOCASE);
SELECT * FROM rt0 WHERE (((rt0.c1)AND(rt0.c0)) COLLATE BINARY) ORDER BY CASE WHEN ((rt0.c0)GLOB(rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN (+ (rt0.c1)) THEN (((rt0.c1)) NOT BETWEEN ((0.4526666062389261)) AND ((rt0.c1))) WHEN x'' THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END ELSE IFNULL(0.05439167472568318, rt0.c1) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)AND(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c0)GLOB(rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN (+ (rt0.c1)) THEN (((rt0.c1)) NOT BETWEEN ((0.4526666062389261)) AND ((rt0.c1))) WHEN x'' THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END ELSE IFNULL(0.05439167472568318, rt0.c1) END ASC);
SELECT * FROM rt0 WHERE (((rt0.c1)AND(rt0.c0)) COLLATE BINARY) ORDER BY CASE WHEN ((rt0.c0)GLOB(rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN (+ (rt0.c1)) THEN (((rt0.c1)) NOT BETWEEN ((0.4526666062389261)) AND ((rt0.c1))) WHEN x'' THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END ELSE IFNULL(0.05439167472568318, rt0.c1) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)AND(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c0)GLOB(rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN (+ (rt0.c1)) THEN (((rt0.c1)) NOT BETWEEN ((0.4526666062389261)) AND ((rt0.c1))) WHEN x'' THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END ELSE IFNULL(0.05439167472568318, rt0.c1) END ASC);
SELECT * FROM rt0 WHERE (((rt0.c1)AND(rt0.c0)) COLLATE BINARY) ORDER BY CASE WHEN ((rt0.c0)GLOB(rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN (+ (rt0.c1)) THEN (((rt0.c1)) NOT BETWEEN ((0.4526666062389261)) AND ((rt0.c1))) WHEN x'' THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END ELSE IFNULL(0.05439167472568318, rt0.c1) END ASC;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((x'9240' IN (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((x'9240' IN (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((x'9240' IN (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((x'9240' IN (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((x'9240' IN (vt0.c0))) NOTNULL));
SELECT COUNT(*) FROM rt0, t0 WHERE (GLOB(x'', CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(x'', CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (GLOB(x'', CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(x'', CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (GLOB(x'', CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END));
SELECT * FROM rt0, vt0, t0 WHERE (((((vt0.c0)AND(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((((vt0.c0)AND(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((((vt0.c0)AND(vt0.c0))) IS TRUE));
SELECT * FROM t0, rt0 WHERE ((((- (t0.c0)))=(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((- (t0.c0)))=(rt0.c2))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((- (t0.c0)))=(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((- (t0.c0)))=(rt0.c2))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((- (t0.c0)))=(rt0.c2)));
SELECT ALL * FROM vt0 WHERE ((((((+ (vt0.c0)))AND(NULL)))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((+ (vt0.c0)))AND(NULL)))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((+ (vt0.c0)))AND(NULL)))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((+ (vt0.c0)))AND(NULL)))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((+ (vt0.c0)))AND(NULL)))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (3.78372631E8);
SELECT SUM(count) FROM (SELECT ALL ((3.78372631E8) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (3.78372631E8);
SELECT SUM(count) FROM (SELECT ALL ((3.78372631E8) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (3.78372631E8);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(((rt0.c1)LIKE(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)LIKE(rt0.c0)) AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(((rt0.c1)LIKE(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)LIKE(rt0.c0)) AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(((rt0.c1)LIKE(rt0.c0)) AS REAL));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))LIKE(((vt0.c1)IS(vt0.c1))))) ORDER BY '1736883663';
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))LIKE(((vt0.c1)IS(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY '1736883663');
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))LIKE(((vt0.c1)IS(vt0.c1))))) ORDER BY '1736883663';
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))LIKE(((vt0.c1)IS(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY '1736883663');
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))LIKE(((vt0.c1)IS(vt0.c1))))) ORDER BY '1736883663';
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c1)>=(rt0.c2)))OR(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))))AND(rt0.c2)))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))))OR((rt0.c1 IN ())))) ORDER BY (('78759020') NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)>=(rt0.c2)))OR(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))))AND(rt0.c2)))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (('78759020') NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (rt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c1)>=(rt0.c2)))OR(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))))AND(rt0.c2)))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))))OR((rt0.c1 IN ())))) ORDER BY (('78759020') NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)>=(rt0.c2)))OR(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))))AND(rt0.c2)))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (('78759020') NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (rt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c1)>=(rt0.c2)))OR(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))))AND(rt0.c2)))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))))OR((rt0.c1 IN ())))) ORDER BY (('78759020') NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (rt0.c0 COLLATE NOCASE));
SELECT * FROM rt0, vt0 CROSS JOIN t0 ON STRFTIME(((rt0.c2)&(rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE t0.c0 END, ((vt0.c1) BETWEEN (t0.c0) AND (t0.c0))) WHERE (((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON STRFTIME(((rt0.c2)&(rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE t0.c0 END, ((vt0.c1) BETWEEN (t0.c0) AND (t0.c0))));
SELECT * FROM rt0, vt0 CROSS JOIN t0 ON STRFTIME(((rt0.c2)&(rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE t0.c0 END, ((vt0.c1) BETWEEN (t0.c0) AND (t0.c0))) WHERE (((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON STRFTIME(((rt0.c2)&(rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE t0.c0 END, ((vt0.c1) BETWEEN (t0.c0) AND (t0.c0))));
SELECT * FROM rt0, vt0 CROSS JOIN t0 ON STRFTIME(((rt0.c2)&(rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE t0.c0 END, ((vt0.c1) BETWEEN (t0.c0) AND (t0.c0))) WHERE (((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END) IS FALSE));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (NULL);
SELECT * FROM t0 WHERE ((((t0.c0 IN (t0.c0))) BETWEEN (((t0.c0)|(x''))) AND (NULL)));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (t0.c0))) BETWEEN (((t0.c0)|(x''))) AND (NULL))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0 IN (t0.c0))) BETWEEN (((t0.c0)|(x''))) AND (NULL)));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (t0.c0))) BETWEEN (((t0.c0)|(x''))) AND (NULL))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0 IN (t0.c0))) BETWEEN (((t0.c0)|(x''))) AND (NULL)));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((- (((rt0.c0)<>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)<>(rt0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((- (((rt0.c0)<>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)<>(rt0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((- (((rt0.c0)<>(rt0.c2)))));
SELECT * FROM vt0, rt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (x'');
SELECT * FROM vt0, rt0 WHERE (CASE ((rt0.c0)/(rt0.c0))  WHEN vt0.c1 COLLATE BINARY THEN vt0.c1 END) ORDER BY 'k^箨cr?9j/' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)/(rt0.c0))  WHEN vt0.c1 COLLATE BINARY THEN vt0.c1 END) IS TRUE)  as count FROM vt0, rt0 ORDER BY 'k^箨cr?9j/' DESC);
SELECT * FROM vt0, rt0 WHERE (CASE ((rt0.c0)/(rt0.c0))  WHEN vt0.c1 COLLATE BINARY THEN vt0.c1 END) ORDER BY 'k^箨cr?9j/' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)/(rt0.c0))  WHEN vt0.c1 COLLATE BINARY THEN vt0.c1 END) IS TRUE)  as count FROM vt0, rt0 ORDER BY 'k^箨cr?9j/' DESC);
SELECT * FROM vt0, rt0 WHERE (CASE ((rt0.c0)/(rt0.c0))  WHEN vt0.c1 COLLATE BINARY THEN vt0.c1 END) ORDER BY 'k^箨cr?9j/' DESC;
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)*(((t0.c0)-(t0.c0))))) ORDER BY CASE ((t0.c0)>>(t0.c0))  WHEN ((t0.c0) BETWEEN ('') AND (t0.c0)) THEN (((t0.c0))<>((x'e060'))) END;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)*(((t0.c0)-(t0.c0))))) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY CASE ((t0.c0)>>(t0.c0))  WHEN ((t0.c0) BETWEEN ('') AND (t0.c0)) THEN (((t0.c0))!=((x'e060'))) END);
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)*(((t0.c0)-(t0.c0))))) ORDER BY CASE ((t0.c0)>>(t0.c0))  WHEN ((t0.c0) BETWEEN ('') AND (t0.c0)) THEN (((t0.c0))<>((x'e060'))) END;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)*(((t0.c0)-(t0.c0))))) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY CASE ((t0.c0)>>(t0.c0))  WHEN ((t0.c0) BETWEEN ('') AND (t0.c0)) THEN (((t0.c0))!=((x'e060'))) END);
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)*(((t0.c0)-(t0.c0))))) ORDER BY CASE ((t0.c0)>>(t0.c0))  WHEN ((t0.c0) BETWEEN ('') AND (t0.c0)) THEN (((t0.c0))<>((x'e060'))) END;
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 END)-(rt0.c2))) ORDER BY CAST(((rt0.c1)*(rt0.c2)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c0 END)-(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)*(rt0.c2)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 END)-(rt0.c2))) ORDER BY CAST(((rt0.c1)*(rt0.c2)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c0 END)-(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)*(rt0.c2)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 END)-(rt0.c2))) ORDER BY CAST(((rt0.c1)*(rt0.c2)) AS TEXT)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (DATE(vt0.c0 COLLATE NOCASE, (NOT (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((DATE(vt0.c0 COLLATE NOCASE, (NOT (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (DATE(vt0.c0 COLLATE NOCASE, (NOT (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((DATE(vt0.c0 COLLATE NOCASE, (NOT (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (DATE(vt0.c0 COLLATE NOCASE, (NOT (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END));
SELECT * FROM t0, rt0, vt0 WHERE ((((((((t0.c0)AND(rt0.c2)))AND(rt0.c2)), CASE vt0.c0  WHEN t0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END, (((vt0.c1))<((vt0.c0)))))==((((rt0.c1)OR(rt0.c2)), -8.26704984E8, (-233866196 IN ())))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c0)AND(rt0.c2)))AND(rt0.c2)), CASE vt0.c0  WHEN t0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END, (((vt0.c1))<((vt0.c0)))))=((((rt0.c1)OR(rt0.c2)), -8.26704984E8, (-233866196 IN ()))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE ((((((((t0.c0)AND(rt0.c2)))AND(rt0.c2)), CASE vt0.c0  WHEN t0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END, (((vt0.c1))<((vt0.c0)))))==((((rt0.c1)OR(rt0.c2)), -8.26704984E8, (-233866196 IN ())))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c0)AND(rt0.c2)))AND(rt0.c2)), CASE vt0.c0  WHEN t0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END, (((vt0.c1))<((vt0.c0)))))=((((rt0.c1)OR(rt0.c2)), -8.26704984E8, (-233866196 IN ()))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE ((((((((t0.c0)AND(rt0.c2)))AND(rt0.c2)), CASE vt0.c0  WHEN t0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END, (((vt0.c1))<((vt0.c0)))))==((((rt0.c1)OR(rt0.c2)), -8.26704984E8, (-233866196 IN ())))));
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c1)+(((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)+(((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c1)+(((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)+(((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c1)+(((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY CASE WHEN (('1110462489') BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c1))<((rt0.c1))) ELSE ((1.736883663E9) NOTNULL) END, CASE WHEN DATE(rt0.c2, x'b75b', rt0.c1) THEN rt0.c2 ELSE rt0.c2 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (('1110462489') BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c1))<((rt0.c1))) ELSE ((1.736883663E9) NOTNULL) END, CASE WHEN DATE(rt0.c2, x'b75b', rt0.c1) THEN rt0.c2 ELSE rt0.c2 END DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY CASE WHEN (('1110462489') BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c1))<((rt0.c1))) ELSE ((1.736883663E9) NOTNULL) END, CASE WHEN DATE(rt0.c2, x'b75b', rt0.c1) THEN rt0.c2 ELSE rt0.c2 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (('1110462489') BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c1))<((rt0.c1))) ELSE ((1.736883663E9) NOTNULL) END, CASE WHEN DATE(rt0.c2, x'b75b', rt0.c1) THEN rt0.c2 ELSE rt0.c2 END DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY CASE WHEN (('1110462489') BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c1))<((rt0.c1))) ELSE ((1.736883663E9) NOTNULL) END, CASE WHEN DATE(rt0.c2, x'b75b', rt0.c1) THEN rt0.c2 ELSE rt0.c2 END DESC;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON LOWER(rt0.c2 COLLATE NOCASE) LEFT OUTER JOIN t0 ON (((t0.c0 IN ())) NOTNULL) WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) ORDER BY CASE ((rt0.c2) NOTNULL)  WHEN (- (rt0.c0)) THEN (((t0.c0))>((rt0.c1))) END DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON LOWER(rt0.c2 COLLATE NOCASE) LEFT OUTER JOIN t0 ON (((t0.c0 IN ())) NOTNULL) ORDER BY CASE ((rt0.c2) NOTNULL)  WHEN (- (rt0.c0)) THEN (((t0.c0))>((rt0.c1))) END DESC);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON LOWER(rt0.c2 COLLATE NOCASE) LEFT OUTER JOIN t0 ON (((t0.c0 IN ())) NOTNULL) WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) ORDER BY CASE ((rt0.c2) NOTNULL)  WHEN (- (rt0.c0)) THEN (((t0.c0))>((rt0.c1))) END DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON LOWER(rt0.c2 COLLATE NOCASE) LEFT OUTER JOIN t0 ON (((t0.c0 IN ())) NOTNULL) ORDER BY CASE ((rt0.c2) NOTNULL)  WHEN (- (rt0.c0)) THEN (((t0.c0))>((rt0.c1))) END DESC);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON LOWER(rt0.c2 COLLATE NOCASE) LEFT OUTER JOIN t0 ON (((t0.c0 IN ())) NOTNULL) WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) ORDER BY CASE ((rt0.c2) NOTNULL)  WHEN (- (rt0.c0)) THEN (((t0.c0))>((rt0.c1))) END DESC;
SELECT * FROM rt0 WHERE (TYPEOF(x'')) ORDER BY rt0.c0 COLLATE BINARY, ((((rt0.c2)OR(((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))))AND(CAST(rt0.c2 AS REAL)))  NULLS FIRST, ((json_insert(NULL, rt0.c1, rt0.c0))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(x'')) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 COLLATE BINARY, ((((rt0.c2)OR(((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))))AND(CAST(rt0.c2 AS REAL)))  NULLS FIRST, ((json_insert(NULL, rt0.c1, rt0.c0))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) ASC);
SELECT * FROM rt0 WHERE (TYPEOF(x'')) ORDER BY rt0.c0 COLLATE BINARY, ((((rt0.c2)OR(((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))))AND(CAST(rt0.c2 AS REAL)))  NULLS FIRST, ((json_insert(NULL, rt0.c1, rt0.c0))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(x'')) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 COLLATE BINARY, ((((rt0.c2)OR(((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))))AND(CAST(rt0.c2 AS REAL)))  NULLS FIRST, ((json_insert(NULL, rt0.c1, rt0.c0))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) ASC);
SELECT * FROM rt0 WHERE (TYPEOF(x'')) ORDER BY rt0.c0 COLLATE BINARY, ((((rt0.c2)OR(((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))))AND(CAST(rt0.c2 AS REAL)))  NULLS FIRST, ((json_insert(NULL, rt0.c1, rt0.c0))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (CASE ''  WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c1 END) AND (x'655b'))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))>>(rt0.c2 COLLATE RTRIM)) DESC, ((rt0.c0 IN ()) IN ((((rt0.c0))=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (CASE ''  WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c1 END) AND (x'655b'))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))>>(rt0.c2 COLLATE RTRIM)) DESC, ((rt0.c0 IN ()) IN ((((rt0.c0))==((vt0.c0))))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (CASE ''  WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c1 END) AND (x'655b'))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))>>(rt0.c2 COLLATE RTRIM)) DESC, ((rt0.c0 IN ()) IN ((((rt0.c0))=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (CASE ''  WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c1 END) AND (x'655b'))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))>>(rt0.c2 COLLATE RTRIM)) DESC, ((rt0.c0 IN ()) IN ((((rt0.c0))==((vt0.c0))))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (CASE ''  WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c1 END) AND (x'655b'))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))>>(rt0.c2 COLLATE RTRIM)) DESC, ((rt0.c0 IN ()) IN ((((rt0.c0))=((vt0.c0)))));
SELECT * FROM rt0, vt0 INNER JOIN t0 ON (UNLIKELY(DISTINCT rt0.c1) IN ()) WHERE ((((NULL)) BETWEEN ((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(t0.c0)))AND(vt0.c0)))) AND ((rt0.c2)))) ORDER BY CAST(((t0.c0)%(rt0.c2)) AS INTEGER) DESC, CAST((- (vt0.c0)) AS NUMERIC) DESC, (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))>(UPPER(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(t0.c0)))AND(vt0.c0)))) AND ((rt0.c2)))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t0 ON (UNLIKELY(DISTINCT rt0.c1) IN ()) ORDER BY CAST(((t0.c0)%(rt0.c2)) AS INTEGER) DESC, CAST((- (vt0.c0)) AS NUMERIC) DESC, (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))>(UPPER(rt0.c2))));
SELECT * FROM rt0, vt0 INNER JOIN t0 ON (UNLIKELY(DISTINCT rt0.c1) IN ()) WHERE ((((NULL)) BETWEEN ((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(t0.c0)))AND(vt0.c0)))) AND ((rt0.c2)))) ORDER BY CAST(((t0.c0)%(rt0.c2)) AS INTEGER) DESC, CAST((- (vt0.c0)) AS NUMERIC) DESC, (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))>(UPPER(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(t0.c0)))AND(vt0.c0)))) AND ((rt0.c2)))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t0 ON (UNLIKELY(DISTINCT rt0.c1) IN ()) ORDER BY CAST(((t0.c0)%(rt0.c2)) AS INTEGER) DESC, CAST((- (vt0.c0)) AS NUMERIC) DESC, (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))>(UPPER(rt0.c2))));
SELECT * FROM rt0, vt0 INNER JOIN t0 ON (UNLIKELY(DISTINCT rt0.c1) IN ()) WHERE ((((NULL)) BETWEEN ((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(t0.c0)))AND(vt0.c0)))) AND ((rt0.c2)))) ORDER BY CAST(((t0.c0)%(rt0.c2)) AS INTEGER) DESC, CAST((- (vt0.c0)) AS NUMERIC) DESC, (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))>(UPPER(rt0.c2)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(NULL))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(NULL))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(NULL)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c1, rt0.c2, rt0.c2))==((vt0.c0, vt0.c1, rt0.c1))))&(x'')) WHERE ((rt0.c2 COLLATE RTRIM IN (((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE RTRIM IN (((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c1, rt0.c2, rt0.c2))=((vt0.c0, vt0.c1, rt0.c1))))&(x'')));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c1, rt0.c2, rt0.c2))==((vt0.c0, vt0.c1, rt0.c1))))&(x'')) WHERE ((rt0.c2 COLLATE RTRIM IN (((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE RTRIM IN (((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c1, rt0.c2, rt0.c2))=((vt0.c0, vt0.c1, rt0.c1))))&(x'')));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c1, rt0.c2, rt0.c2))==((vt0.c0, vt0.c1, rt0.c1))))&(x'')) WHERE ((rt0.c2 COLLATE RTRIM IN (((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))));
SELECT * FROM t0, vt0, rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))=(((NOT (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))==(((NOT (vt0.c1)))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))=(((NOT (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))==(((NOT (vt0.c1)))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))=(((NOT (vt0.c1))))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c0))==((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END)))) ORDER BY ((CAST(t0.c0 AS REAL)) BETWEEN (rt0.c0) AND (((rt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0))==((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(t0.c0 AS REAL)) BETWEEN (rt0.c0) AND (((rt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c0))==((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END)))) ORDER BY ((CAST(t0.c0 AS REAL)) BETWEEN (rt0.c0) AND (((rt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0))==((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(t0.c0 AS REAL)) BETWEEN (rt0.c0) AND (((rt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c0))==((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END)))) ORDER BY ((CAST(t0.c0 AS REAL)) BETWEEN (rt0.c0) AND (((rt0.c0) NOT NULL)));
SELECT ALL * FROM rt0, t0 WHERE (((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))OR(t0.c0)))OR(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))OR(t0.c0)))OR(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))OR(t0.c0)))OR(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))OR(t0.c0)))OR(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))OR(t0.c0)))OR(rt0.c2))) ISNULL));
SELECT ALL * FROM rt0, t0 WHERE ((((t0.c0 IN ()))IS((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))IS((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((t0.c0 IN ()))IS((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))IS((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((t0.c0 IN ()))IS((NOT (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('316106088') NOT NULL)) NOT NULL)) ORDER BY ((CAST(vt0.c1 AS TEXT))*((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('316106088') NOT NULL)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS TEXT))*((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('316106088') NOT NULL)) NOT NULL)) ORDER BY ((CAST(vt0.c1 AS TEXT))*((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('316106088') NOT NULL)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS TEXT))*((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('316106088') NOT NULL)) NOT NULL)) ORDER BY ((CAST(vt0.c1 AS TEXT))*((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT * FROM vt0, rt0, t0 WHERE ((+ (((t0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 NOT INDEXED);
SELECT * FROM vt0, rt0, t0 WHERE ((+ (((t0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 NOT INDEXED);
SELECT * FROM vt0, rt0, t0 WHERE ((+ (((t0.c0)>=(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ((((vt0.c0, NULL, 0X60d598ba)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))), ((vt0.c0)OR(vt0.c0))))) ORDER BY MIN(((vt0.c0)+(vt0.c1)), (vt0.c1 IN ())) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS REAL) IN ((((vt0.c0, NULL, 0x60d598ba)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))), ((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY MIN(((vt0.c0)+(vt0.c1)), (vt0.c1 IN ())) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ((((vt0.c0, NULL, 0X60d598ba)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))), ((vt0.c0)OR(vt0.c0))))) ORDER BY MIN(((vt0.c0)+(vt0.c1)), (vt0.c1 IN ())) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS REAL) IN ((((vt0.c0, NULL, 0x60d598ba)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))), ((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY MIN(((vt0.c0)+(vt0.c1)), (vt0.c1 IN ())) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ((((vt0.c0, NULL, 0X60d598ba)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))), ((vt0.c0)OR(vt0.c0))))) ORDER BY MIN(((vt0.c0)+(vt0.c1)), (vt0.c1 IN ())) DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c1)GLOB(rt0.c2)))AND(((x'e506') BETWEEN (vt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)GLOB(rt0.c2)))AND(((x'e506') BETWEEN (vt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c1)GLOB(rt0.c2)))AND(((x'e506') BETWEEN (vt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)GLOB(rt0.c2)))AND(((x'e506') BETWEEN (vt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c1)GLOB(rt0.c2)))AND(((x'e506') BETWEEN (vt0.c0) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON DATE(x'c598', '198483141', rt0.c0, load_extension(rt0.c1, rt0.c2), (- (rt0.c0)), CAST(vt0.c0 AS TEXT), rt0.c1 COLLATE BINARY) WHERE (((json_valid(rt0.c0))&(rt0.c1))) ORDER BY 0.004114497868099809 ASC  NULLS FIRST, CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((json_valid(rt0.c0))&(rt0.c1))) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON DATE(x'c598', '198483141', rt0.c0, load_extension(rt0.c1, rt0.c2), (- (rt0.c0)), CAST(vt0.c0 AS TEXT), rt0.c1 COLLATE BINARY) ORDER BY 0.004114497868099809 ASC  NULLS FIRST, CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON DATE(x'c598', '198483141', rt0.c0, load_extension(rt0.c1, rt0.c2), (- (rt0.c0)), CAST(vt0.c0 AS TEXT), rt0.c1 COLLATE BINARY) WHERE (((json_valid(rt0.c0))&(rt0.c1))) ORDER BY 0.004114497868099809 ASC  NULLS FIRST, CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((json_valid(rt0.c0))&(rt0.c1))) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON DATE(x'c598', '198483141', rt0.c0, load_extension(rt0.c1, rt0.c2), (- (rt0.c0)), CAST(vt0.c0 AS TEXT), rt0.c1 COLLATE BINARY) ORDER BY 0.004114497868099809 ASC  NULLS FIRST, CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS INTEGER));
SELECT * FROM rt0 INNER JOIN t0 ON (((((rt0.c1)IS(rt0.c2))))>=((rt0.c1 COLLATE NOCASE))) WHERE ((NOT (rt0.c1))) ORDER BY UPPER(((((rt0.c2)AND(rt0.c1)))OR(t0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((((rt0.c1)IS(rt0.c2))))>=((rt0.c1 COLLATE NOCASE))) ORDER BY UPPER(((((rt0.c2)AND(rt0.c1)))OR(t0.c0))) DESC  NULLS LAST);
SELECT * FROM rt0 INNER JOIN t0 ON (((((rt0.c1)IS(rt0.c2))))>=((rt0.c1 COLLATE NOCASE))) WHERE ((NOT (rt0.c1))) ORDER BY UPPER(((((rt0.c2)AND(rt0.c1)))OR(t0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((((rt0.c1)IS(rt0.c2))))>=((rt0.c1 COLLATE NOCASE))) ORDER BY UPPER(((((rt0.c2)AND(rt0.c1)))OR(t0.c0))) DESC  NULLS LAST);
SELECT * FROM rt0 INNER JOIN t0 ON (((((rt0.c1)IS(rt0.c2))))>=((rt0.c1 COLLATE NOCASE))) WHERE ((NOT (rt0.c1))) ORDER BY UPPER(((((rt0.c2)AND(rt0.c1)))OR(t0.c0))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (0.1734010129432909);
SELECT SUM(count) FROM (SELECT ALL ((0.1734010129432909) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (0.1734010129432909);
SELECT SUM(count) FROM (SELECT ALL ((0.1734010129432909) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (0.1734010129432909);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((vt0.c1)>=(vt0.c0))) NOT BETWEEN (((rt0.c2)<<(vt0.c1))) AND (x'8ba5'))) ORDER BY 'pk';
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>=(vt0.c0))) NOT BETWEEN (((rt0.c2)<<(vt0.c1))) AND (x'8ba5'))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY 'pk');
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((vt0.c1)>=(vt0.c0))) NOT BETWEEN (((rt0.c2)<<(vt0.c1))) AND (x'8ba5'))) ORDER BY 'pk';
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>=(vt0.c0))) NOT BETWEEN (((rt0.c2)<<(vt0.c1))) AND (x'8ba5'))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY 'pk');
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((vt0.c1)>=(vt0.c0))) NOT BETWEEN (((rt0.c2)<<(vt0.c1))) AND (x'8ba5'))) ORDER BY 'pk';
SELECT * FROM t0, vt0, rt0 WHERE (TYPEOF(DISTINCT NULL)) ORDER BY ((((vt0.c0)|(rt0.c2)))/(((vt0.c0) NOTNULL))), ((((((t0.c0)OR(0.824571709720809)))AND(t0.c0))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT NULL)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((vt0.c0)|(rt0.c2)))/(((vt0.c0) NOTNULL))), ((((((t0.c0)OR(0.824571709720809)))AND(t0.c0))) IS TRUE) DESC);
SELECT * FROM t0, vt0, rt0 WHERE (TYPEOF(DISTINCT NULL)) ORDER BY ((((vt0.c0)|(rt0.c2)))/(((vt0.c0) NOTNULL))), ((((((t0.c0)OR(0.824571709720809)))AND(t0.c0))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT NULL)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((vt0.c0)|(rt0.c2)))/(((vt0.c0) NOTNULL))), ((((((t0.c0)OR(0.824571709720809)))AND(t0.c0))) IS TRUE) DESC);
SELECT * FROM t0, vt0, rt0 WHERE (TYPEOF(DISTINCT NULL)) ORDER BY ((((vt0.c0)|(rt0.c2)))/(((vt0.c0) NOTNULL))), ((((((t0.c0)OR(0.824571709720809)))AND(t0.c0))) IS TRUE) DESC;
SELECT ALL * FROM vt0 WHERE ((((((NULL))!=((vt0.c1)))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CAST(NULL AS NUMERIC)))) ORDER BY CASE WHEN (((vt0.c1, vt0.c0, vt0.c0))>((x'', vt0.c0, vt0.c1))) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0) NOT NULL) THEN (+ (vt0.c0)) WHEN ((vt0.c1)==(vt0.c0)) THEN ((vt0.c0)/(vt0.c1)) END  NULLS FIRST, ((vt0.c1) BETWEEN (load_extension(vt0.c0, vt0.c1)) AND ((- (0X42a1d4e)))) DESC, ((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, x'3581'))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL))<>((vt0.c1)))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c1, vt0.c0, vt0.c0))>((x'', vt0.c0, vt0.c1))) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0) NOT NULL) THEN (+ (vt0.c0)) WHEN ((vt0.c1)==(vt0.c0)) THEN ((vt0.c0)/(vt0.c1)) END  NULLS FIRST, ((vt0.c1) BETWEEN (load_extension(vt0.c0, vt0.c1)) AND ((- (0x42a1d4e)))) DESC, ((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, x'3581'))) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((NULL))!=((vt0.c1)))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CAST(NULL AS NUMERIC)))) ORDER BY CASE WHEN (((vt0.c1, vt0.c0, vt0.c0))>((x'', vt0.c0, vt0.c1))) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0) NOT NULL) THEN (+ (vt0.c0)) WHEN ((vt0.c1)==(vt0.c0)) THEN ((vt0.c0)/(vt0.c1)) END  NULLS FIRST, ((vt0.c1) BETWEEN (load_extension(vt0.c0, vt0.c1)) AND ((- (0X42a1d4e)))) DESC, ((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, x'3581'))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL))<>((vt0.c1)))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c1, vt0.c0, vt0.c0))>((x'', vt0.c0, vt0.c1))) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0) NOT NULL) THEN (+ (vt0.c0)) WHEN ((vt0.c1)==(vt0.c0)) THEN ((vt0.c0)/(vt0.c1)) END  NULLS FIRST, ((vt0.c1) BETWEEN (load_extension(vt0.c0, vt0.c1)) AND ((- (0x42a1d4e)))) DESC, ((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, x'3581'))) IN ())  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE ((((t0.c0)) NOT BETWEEN ((CHAR(rt0.c1))) AND (((NOT (t0.c0)))))) ORDER BY IFNULL(((((((((((((rt0.c2)OR(rt0.c2)))OR(t0.c0)))AND(rt0.c0)))OR(t0.c0)))OR(rt0.c0)))AND(rt0.c1)), rt0.c2 COLLATE NOCASE)  NULLS LAST, HEX(DISTINCT CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((CHAR(rt0.c1))) AND (((NOT (t0.c0)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY IFNULL(((((((((((((rt0.c2)OR(rt0.c2)))OR(t0.c0)))AND(rt0.c0)))OR(t0.c0)))OR(rt0.c0)))AND(rt0.c1)), rt0.c2 COLLATE NOCASE)  NULLS LAST, HEX(DISTINCT CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END) DESC);
SELECT ALL * FROM rt0, t0 WHERE ((((t0.c0)) NOT BETWEEN ((CHAR(rt0.c1))) AND (((NOT (t0.c0)))))) ORDER BY IFNULL(((((((((((((rt0.c2)OR(rt0.c2)))OR(t0.c0)))AND(rt0.c0)))OR(t0.c0)))OR(rt0.c0)))AND(rt0.c1)), rt0.c2 COLLATE NOCASE)  NULLS LAST, HEX(DISTINCT CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((CHAR(rt0.c1))) AND (((NOT (t0.c0)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY IFNULL(((((((((((((rt0.c2)OR(rt0.c2)))OR(t0.c0)))AND(rt0.c0)))OR(t0.c0)))OR(rt0.c0)))AND(rt0.c1)), rt0.c2 COLLATE NOCASE)  NULLS LAST, HEX(DISTINCT CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END) DESC);
SELECT ALL * FROM rt0, t0 WHERE ((((t0.c0)) NOT BETWEEN ((CHAR(rt0.c1))) AND (((NOT (t0.c0)))))) ORDER BY IFNULL(((((((((((((rt0.c2)OR(rt0.c2)))OR(t0.c0)))AND(rt0.c0)))OR(t0.c0)))OR(rt0.c0)))AND(rt0.c1)), rt0.c2 COLLATE NOCASE)  NULLS LAST, HEX(DISTINCT CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END) DESC;
SELECT ALL * FROM t0, rt0, vt0 WHERE (CASE (((vt0.c0, '1736883663', t0.c0, rt0.c2, rt0.c2)) BETWEEN ((t0.c0, rt0.c1, rt0.c1, vt0.c0, NULL)) AND ((rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c2)))  WHEN '149632214' THEN vt0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0, '1736883663', t0.c0, rt0.c2, rt0.c2)) BETWEEN ((t0.c0, rt0.c1, rt0.c1, vt0.c0, NULL)) AND ((rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c2)))  WHEN '149632214' THEN vt0.c1 END) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (CASE (((vt0.c0, '1736883663', t0.c0, rt0.c2, rt0.c2)) BETWEEN ((t0.c0, rt0.c1, rt0.c1, vt0.c0, NULL)) AND ((rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c2)))  WHEN '149632214' THEN vt0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0, '1736883663', t0.c0, rt0.c2, rt0.c2)) BETWEEN ((t0.c0, rt0.c1, rt0.c1, vt0.c0, NULL)) AND ((rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c2)))  WHEN '149632214' THEN vt0.c1 END) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (CASE (((vt0.c0, '1736883663', t0.c0, rt0.c2, rt0.c2)) BETWEEN ((t0.c0, rt0.c1, rt0.c1, vt0.c0, NULL)) AND ((rt0.c1, t0.c0, rt0.c2, rt0.c0, rt0.c2)))  WHEN '149632214' THEN vt0.c1 END);
SELECT ALL * FROM rt0, vt0 CROSS JOIN t0 ON highlight(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), (((vt0.c0))<((t0.c0))), x'', ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) WHERE ((((((vt0.c1))!=((t0.c0))))<<(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE 0.8944192013359846 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))!=((t0.c0))))<<(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE 0.8944192013359846 END))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 CROSS JOIN t0 ON highlight(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), (((vt0.c0))<((t0.c0))), x'', ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT ALL * FROM rt0, vt0 CROSS JOIN t0 ON highlight(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), (((vt0.c0))<((t0.c0))), x'', ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) WHERE ((((((vt0.c1))!=((t0.c0))))<<(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE 0.8944192013359846 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))!=((t0.c0))))<<(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE 0.8944192013359846 END))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 CROSS JOIN t0 ON highlight(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), (((vt0.c0))<((t0.c0))), x'', ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (0.09781991093676035);
SELECT SUM(count) FROM (SELECT ALL ((0.09781991093676035) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (0.09781991093676035);
SELECT SUM(count) FROM (SELECT ALL ((0.09781991093676035) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (0.09781991093676035);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c1 COLLATE NOCASE) IS TRUE) WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE vt0.c0  WHEN '' THEN t0.c0 END) AND (json_patch(vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE vt0.c0  WHEN '' THEN t0.c0 END) AND (json_patch(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c1 COLLATE NOCASE) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c1 COLLATE NOCASE) IS TRUE) WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE vt0.c0  WHEN '' THEN t0.c0 END) AND (json_patch(vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE vt0.c0  WHEN '' THEN t0.c0 END) AND (json_patch(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c1 COLLATE NOCASE) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c1 COLLATE NOCASE) IS TRUE) WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE vt0.c0  WHEN '' THEN t0.c0 END) AND (json_patch(vt0.c0, vt0.c1))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (CAST(rt0.c2 AS INTEGER) IN ()) ASC  NULLS LAST, rt0.c1;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c2 AS INTEGER) IN ()) ASC  NULLS LAST, rt0.c1);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (CAST(rt0.c2 AS INTEGER) IN ()) ASC  NULLS LAST, rt0.c1;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c2 AS INTEGER) IN ()) ASC  NULLS LAST, rt0.c1);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (CAST(rt0.c2 AS INTEGER) IN ()) ASC  NULLS LAST, rt0.c1;
SELECT * FROM vt0, t0 WHERE ((NOT ((t0.c0 IN ())))) ORDER BY (x'' IN ((- (t0.c0)), ((t0.c0) ISNULL))), ((((vt0.c0)IS NOT(vt0.c1)))*(((t0.c0)=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY (x'' IN ((- (t0.c0)), ((t0.c0) ISNULL))), ((((vt0.c0)IS NOT(vt0.c1)))*(((t0.c0)=(vt0.c0)))));
SELECT * FROM vt0, t0 WHERE ((NOT ((t0.c0 IN ())))) ORDER BY (x'' IN ((- (t0.c0)), ((t0.c0) ISNULL))), ((((vt0.c0)IS NOT(vt0.c1)))*(((t0.c0)=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY (x'' IN ((- (t0.c0)), ((t0.c0) ISNULL))), ((((vt0.c0)IS NOT(vt0.c1)))*(((t0.c0)=(vt0.c0)))));
SELECT * FROM vt0, t0 WHERE ((NOT ((t0.c0 IN ())))) ORDER BY (x'' IN ((- (t0.c0)), ((t0.c0) ISNULL))), ((((vt0.c0)IS NOT(vt0.c1)))*(((t0.c0)=(vt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c0 AS REAL), (NOT (rt0.c2)), (((rt0.c0))=((rt0.c0)))))==((CAST(rt0.c0 AS TEXT), ((rt0.c0)-(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))))) ORDER BY ((((rt0.c1) NOT NULL)) ISNULL), NULLIF(DISTINCT ((rt0.c2)!=(rt0.c0)), (- (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS REAL), (NOT (rt0.c2)), (((rt0.c0))==((rt0.c0)))))==((CAST(rt0.c0 AS TEXT), ((rt0.c0)-(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) NOT NULL)) ISNULL), NULLIF(DISTINCT ((rt0.c2)<>(rt0.c0)), (- (rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c0 AS REAL), (NOT (rt0.c2)), (((rt0.c0))=((rt0.c0)))))==((CAST(rt0.c0 AS TEXT), ((rt0.c0)-(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))))) ORDER BY ((((rt0.c1) NOT NULL)) ISNULL), NULLIF(DISTINCT ((rt0.c2)!=(rt0.c0)), (- (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS REAL), (NOT (rt0.c2)), (((rt0.c0))==((rt0.c0)))))==((CAST(rt0.c0 AS TEXT), ((rt0.c0)-(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) NOT NULL)) ISNULL), NULLIF(DISTINCT ((rt0.c2)<>(rt0.c0)), (- (rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c0 AS REAL), (NOT (rt0.c2)), (((rt0.c0))=((rt0.c0)))))==((CAST(rt0.c0 AS TEXT), ((rt0.c0)-(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))))) ORDER BY ((((rt0.c1) NOT NULL)) ISNULL), NULLIF(DISTINCT ((rt0.c2)!=(rt0.c0)), (- (rt0.c2)));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((rt0.c2)LIKE(rt0.c2))) BETWEEN ((~ (vt0.c0))) AND ('0.023256366945255347'))) ORDER BY (('1736883663')=(((vt0.c1)-(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)LIKE(rt0.c2))) BETWEEN ((~ (vt0.c0))) AND ('0.023256366945255347'))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (('1736883663')=(((vt0.c1)-(vt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((rt0.c2)LIKE(rt0.c2))) BETWEEN ((~ (vt0.c0))) AND ('0.023256366945255347'))) ORDER BY (('1736883663')=(((vt0.c1)-(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)LIKE(rt0.c2))) BETWEEN ((~ (vt0.c0))) AND ('0.023256366945255347'))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (('1736883663')=(((vt0.c1)-(vt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((rt0.c2)LIKE(rt0.c2))) BETWEEN ((~ (vt0.c0))) AND ('0.023256366945255347'))) ORDER BY (('1736883663')=(((vt0.c1)-(vt0.c1)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) IS TRUE)) ORDER BY CAST(((t0.c0)-(t0.c0)) AS INTEGER) ASC  NULLS LAST, 0xffffffffaa0654c8  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0)-(t0.c0)) AS INTEGER) ASC  NULLS LAST, 0Xffffffffaa0654c8  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) IS TRUE)) ORDER BY CAST(((t0.c0)-(t0.c0)) AS INTEGER) ASC  NULLS LAST, 0xffffffffaa0654c8  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0)-(t0.c0)) AS INTEGER) ASC  NULLS LAST, 0Xffffffffaa0654c8  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) IS TRUE)) ORDER BY CAST(((t0.c0)-(t0.c0)) AS INTEGER) ASC  NULLS LAST, 0xffffffffaa0654c8  NULLS FIRST;
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE ((rt0.c2)IS NOT(rt0.c2))  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) THEN ((-8.46221375E8) NOT BETWEEN (t0.c0) AND (vt0.c1)) ELSE LENGTH(rt0.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)IS NOT(rt0.c2))  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) THEN ((-8.46221375E8) NOT BETWEEN (t0.c0) AND (vt0.c1)) ELSE LENGTH(rt0.c2) END) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE ((rt0.c2)IS NOT(rt0.c2))  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) THEN ((-8.46221375E8) NOT BETWEEN (t0.c0) AND (vt0.c1)) ELSE LENGTH(rt0.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)IS NOT(rt0.c2))  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) THEN ((-8.46221375E8) NOT BETWEEN (t0.c0) AND (vt0.c1)) ELSE LENGTH(rt0.c2) END) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CASE ((rt0.c2)IS NOT(rt0.c2))  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) THEN ((-8.46221375E8) NOT BETWEEN (t0.c0) AND (vt0.c1)) ELSE LENGTH(rt0.c2) END);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((+ (rt0.c1))) NOT BETWEEN ((- (vt0.c1))) AND (((vt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) NOT BETWEEN ((- (vt0.c1))) AND (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((+ (rt0.c1))) NOT BETWEEN ((- (vt0.c1))) AND (((vt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) NOT BETWEEN ((- (vt0.c1))) AND (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((+ (rt0.c1))) NOT BETWEEN ((- (vt0.c1))) AND (((vt0.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND(((rt0.c2)>=(t0.c0))))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))GLOB(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND(((rt0.c2)>=(t0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))GLOB(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND(((rt0.c2)>=(t0.c0))))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))GLOB(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND(((rt0.c2)>=(t0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))GLOB(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND(((rt0.c2)>=(t0.c0))))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))GLOB(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0)LIKE((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)LIKE((NOT (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0)LIKE((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)LIKE((NOT (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0)LIKE((NOT (rt0.c0)))));
SELECT ALL * FROM rt0, t0, vt0 WHERE (CAST(rt0.c1 AS TEXT) COLLATE RTRIM) ORDER BY (((rt0.c2)<=(vt0.c0)) IN (t0.c0));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((rt0.c2)<=(vt0.c0)) IN (t0.c0)));
SELECT ALL * FROM rt0, t0, vt0 WHERE (CAST(rt0.c1 AS TEXT) COLLATE RTRIM) ORDER BY (((rt0.c2)<=(vt0.c0)) IN (t0.c0));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((rt0.c2)<=(vt0.c0)) IN (t0.c0)));
SELECT ALL * FROM rt0, t0, vt0 WHERE (CAST(rt0.c1 AS TEXT) COLLATE RTRIM) ORDER BY (((rt0.c2)<=(vt0.c0)) IN (t0.c0));
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELY(DISTINCT (((x''))!=((t0.c0))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 316106088 END) AND (((t0.c0)IS NOT(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (((x''))<>((t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 316106088 END) AND (((t0.c0)IS NOT(t0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELY(DISTINCT (((x''))!=((t0.c0))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 316106088 END) AND (((t0.c0)IS NOT(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (((x''))<>((t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 316106088 END) AND (((t0.c0)IS NOT(t0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELY(DISTINCT (((x''))!=((t0.c0))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 316106088 END) AND (((t0.c0)IS NOT(t0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c0)) NOT BETWEEN (((((vt0.c1, '', 0.00851125546496756)) NOT BETWEEN ((t0.c0, rt0.c2, rt0.c2)) AND ((0.9085502361521216, rt0.c2, rt0.c1))))) AND ((CASE rt0.c1  WHEN vt0.c1 THEN vt0.c0 END))) FULL OUTER JOIN rt0 ON ((((rt0.c2)LIKE(x'9b5e')))=(((NULL)<(rt0.c2)))) WHERE (CASE WHEN json(rt0.c2) THEN (('1629591345') BETWEEN (3.78372631E8) AND (vt0.c0)) ELSE 0X48d016c5 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json(rt0.c2) THEN (('1629591345') BETWEEN (3.78372631E8) AND (vt0.c0)) ELSE 0X48d016c5 COLLATE BINARY END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c0)) NOT BETWEEN (((((vt0.c1, '', 0.00851125546496756)) NOT BETWEEN ((t0.c0, rt0.c2, rt0.c2)) AND ((0.9085502361521216, rt0.c2, rt0.c1))))) AND ((CASE rt0.c1  WHEN vt0.c1 THEN vt0.c0 END))) FULL OUTER JOIN rt0 ON ((((rt0.c2)LIKE(x'9b5e')))=(((NULL)<(rt0.c2)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c0)) NOT BETWEEN (((((vt0.c1, '', 0.00851125546496756)) NOT BETWEEN ((t0.c0, rt0.c2, rt0.c2)) AND ((0.9085502361521216, rt0.c2, rt0.c1))))) AND ((CASE rt0.c1  WHEN vt0.c1 THEN vt0.c0 END))) FULL OUTER JOIN rt0 ON ((((rt0.c2)LIKE(x'9b5e')))=(((NULL)<(rt0.c2)))) WHERE (CASE WHEN json(rt0.c2) THEN (('1629591345') BETWEEN (3.78372631E8) AND (vt0.c0)) ELSE 0X48d016c5 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json(rt0.c2) THEN (('1629591345') BETWEEN (3.78372631E8) AND (vt0.c0)) ELSE 0X48d016c5 COLLATE BINARY END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c0)) NOT BETWEEN (((((vt0.c1, '', 0.00851125546496756)) NOT BETWEEN ((t0.c0, rt0.c2, rt0.c2)) AND ((0.9085502361521216, rt0.c2, rt0.c1))))) AND ((CASE rt0.c1  WHEN vt0.c1 THEN vt0.c0 END))) FULL OUTER JOIN rt0 ON ((((rt0.c2)LIKE(x'9b5e')))=(((NULL)<(rt0.c2)))));
SELECT * FROM vt0 WHERE (0.1734010129432909) ORDER BY 'w\n|?' ASC, CASE WHEN ((vt0.c1) IS TRUE) THEN ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) END DESC  NULLS LAST, (x'' IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.1734010129432909) IS TRUE)  as count FROM vt0 ORDER BY 'w\n|?' ASC, CASE WHEN ((vt0.c1) IS TRUE) THEN ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) END DESC  NULLS LAST, (x'' IN ()) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (0.1734010129432909) ORDER BY 'w\n|?' ASC, CASE WHEN ((vt0.c1) IS TRUE) THEN ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) END DESC  NULLS LAST, (x'' IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.1734010129432909) IS TRUE)  as count FROM vt0 ORDER BY 'w\n|?' ASC, CASE WHEN ((vt0.c1) IS TRUE) THEN ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) END DESC  NULLS LAST, (x'' IN ()) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (0.1734010129432909) ORDER BY 'w\n|?' ASC, CASE WHEN ((vt0.c1) IS TRUE) THEN ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) END DESC  NULLS LAST, (x'' IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON IFNULL(((((vt0.c0)OR(0.35038224411871755)))AND(t0.c0)), ((((t0.c0)OR(rt0.c2)))AND(rt0.c1))) INNER JOIN t0 ON ((t0.c0)IS NOT(((((rt0.c2)OR(t0.c0)))AND(vt0.c1)))) WHERE ((((+ (rt0.c1))) NOT BETWEEN ('9223372036854775807') AND (CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) NOT BETWEEN ('9223372036854775807') AND (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON IFNULL(((((vt0.c0)OR(0.35038224411871755)))AND(t0.c0)), ((((t0.c0)OR(rt0.c2)))AND(rt0.c1))) INNER JOIN t0 ON ((t0.c0)IS NOT(((((rt0.c2)OR(t0.c0)))AND(vt0.c1)))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON IFNULL(((((vt0.c0)OR(0.35038224411871755)))AND(t0.c0)), ((((t0.c0)OR(rt0.c2)))AND(rt0.c1))) INNER JOIN t0 ON ((t0.c0)IS NOT(((((rt0.c2)OR(t0.c0)))AND(vt0.c1)))) WHERE ((((+ (rt0.c1))) NOT BETWEEN ('9223372036854775807') AND (CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) NOT BETWEEN ('9223372036854775807') AND (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON IFNULL(((((vt0.c0)OR(0.35038224411871755)))AND(t0.c0)), ((((t0.c0)OR(rt0.c2)))AND(rt0.c1))) INNER JOIN t0 ON ((t0.c0)IS NOT(((((rt0.c2)OR(t0.c0)))AND(vt0.c1)))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON IFNULL(((((vt0.c0)OR(0.35038224411871755)))AND(t0.c0)), ((((t0.c0)OR(rt0.c2)))AND(rt0.c1))) INNER JOIN t0 ON ((t0.c0)IS NOT(((((rt0.c2)OR(t0.c0)))AND(vt0.c1)))) WHERE ((((+ (rt0.c1))) NOT BETWEEN ('9223372036854775807') AND (CAST(rt0.c2 AS BLOB))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0)*(vt0.c1)) AS REAL) FULL OUTER JOIN t0 ON (((((rt0.c1))>=((rt0.c0))))-((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))) WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END) BETWEEN ((- (t0.c0))) AND (((rt0.c1)|(rt0.c0))))) ORDER BY CASE ((vt0.c0) BETWEEN (t0.c0) AND (NULL))  WHEN ((((vt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN (t0.c0 IN (rt0.c2)) WHEN (~ (vt0.c1)) THEN vt0.c1 WHEN CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END THEN ((rt0.c0)<<(rt0.c0)) ELSE CAST(vt0.c1 AS REAL) END DESC, ((((NOT (rt0.c0))))<((0.4309132122314002))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END) BETWEEN ((- (t0.c0))) AND (((rt0.c1)|(rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0)*(vt0.c1)) AS REAL) FULL OUTER JOIN t0 ON (((((rt0.c1))>=((rt0.c0))))-((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))) ORDER BY CASE ((vt0.c0) BETWEEN (t0.c0) AND (NULL))  WHEN ((((vt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN (t0.c0 IN (rt0.c2)) WHEN (~ (vt0.c1)) THEN vt0.c1 WHEN CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END THEN ((rt0.c0)<<(rt0.c0)) ELSE CAST(vt0.c1 AS REAL) END DESC, ((((NOT (rt0.c0))))<((0.4309132122314002))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0)*(vt0.c1)) AS REAL) FULL OUTER JOIN t0 ON (((((rt0.c1))>=((rt0.c0))))-((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))) WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END) BETWEEN ((- (t0.c0))) AND (((rt0.c1)|(rt0.c0))))) ORDER BY CASE ((vt0.c0) BETWEEN (t0.c0) AND (NULL))  WHEN ((((vt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN (t0.c0 IN (rt0.c2)) WHEN (~ (vt0.c1)) THEN vt0.c1 WHEN CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END THEN ((rt0.c0)<<(rt0.c0)) ELSE CAST(vt0.c1 AS REAL) END DESC, ((((NOT (rt0.c0))))<((0.4309132122314002))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END) BETWEEN ((- (t0.c0))) AND (((rt0.c1)|(rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0)*(vt0.c1)) AS REAL) FULL OUTER JOIN t0 ON (((((rt0.c1))>=((rt0.c0))))-((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))) ORDER BY CASE ((vt0.c0) BETWEEN (t0.c0) AND (NULL))  WHEN ((((vt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN (t0.c0 IN (rt0.c2)) WHEN (~ (vt0.c1)) THEN vt0.c1 WHEN CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END THEN ((rt0.c0)<<(rt0.c0)) ELSE CAST(vt0.c1 AS REAL) END DESC, ((((NOT (rt0.c0))))<((0.4309132122314002))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0)*(vt0.c1)) AS REAL) FULL OUTER JOIN t0 ON (((((rt0.c1))>=((rt0.c0))))-((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))) WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END) BETWEEN ((- (t0.c0))) AND (((rt0.c1)|(rt0.c0))))) ORDER BY CASE ((vt0.c0) BETWEEN (t0.c0) AND (NULL))  WHEN ((((vt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN (t0.c0 IN (rt0.c2)) WHEN (~ (vt0.c1)) THEN vt0.c1 WHEN CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END THEN ((rt0.c0)<<(rt0.c0)) ELSE CAST(vt0.c1 AS REAL) END DESC, ((((NOT (rt0.c0))))<((0.4309132122314002))) ASC  NULLS FIRST;
SELECT * FROM t0, vt0 FULL OUTER JOIN rt0 ON CASE WHEN (~ ('')) THEN ((0Xffffffffe93172ac)||(rt0.c1)) WHEN vt0.c1 THEN (vt0.c0 IN ()) WHEN ((((((((vt0.c0)OR(473694624)))AND(NULL)))OR(vt0.c0)))OR(rt0.c2)) THEN vt0.c0 ELSE CAST(vt0.c1 AS TEXT) END WHERE (((((vt0.c0)<=(rt0.c2))) BETWEEN ((~ (rt0.c1))) AND ((((rt0.c0))>((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(rt0.c2))) BETWEEN ((~ (rt0.c1))) AND ((((rt0.c0))>((rt0.c0)))))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN rt0 ON CASE WHEN (~ ('')) THEN ((0xffffffffe93172ac)||(rt0.c1)) WHEN vt0.c1 THEN (vt0.c0 IN ()) WHEN ((((((((vt0.c0)OR(473694624)))AND(NULL)))OR(vt0.c0)))OR(rt0.c2)) THEN vt0.c0 ELSE CAST(vt0.c1 AS TEXT) END);
SELECT * FROM t0, vt0 FULL OUTER JOIN rt0 ON CASE WHEN (~ ('')) THEN ((0Xffffffffe93172ac)||(rt0.c1)) WHEN vt0.c1 THEN (vt0.c0 IN ()) WHEN ((((((((vt0.c0)OR(473694624)))AND(NULL)))OR(vt0.c0)))OR(rt0.c2)) THEN vt0.c0 ELSE CAST(vt0.c1 AS TEXT) END WHERE (((((vt0.c0)<=(rt0.c2))) BETWEEN ((~ (rt0.c1))) AND ((((rt0.c0))>((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(rt0.c2))) BETWEEN ((~ (rt0.c1))) AND ((((rt0.c0))>((rt0.c0)))))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN rt0 ON CASE WHEN (~ ('')) THEN ((0xffffffffe93172ac)||(rt0.c1)) WHEN vt0.c1 THEN (vt0.c0 IN ()) WHEN ((((((((vt0.c0)OR(473694624)))AND(NULL)))OR(vt0.c0)))OR(rt0.c2)) THEN vt0.c0 ELSE CAST(vt0.c1 AS TEXT) END);
SELECT * FROM t0, vt0 FULL OUTER JOIN rt0 ON CASE WHEN (~ ('')) THEN ((0Xffffffffe93172ac)||(rt0.c1)) WHEN vt0.c1 THEN (vt0.c0 IN ()) WHEN ((((((((vt0.c0)OR(473694624)))AND(NULL)))OR(vt0.c0)))OR(rt0.c2)) THEN vt0.c0 ELSE CAST(vt0.c1 AS TEXT) END WHERE (((((vt0.c0)<=(rt0.c2))) BETWEEN ((~ (rt0.c1))) AND ((((rt0.c0))>((rt0.c0))))));
SELECT * FROM vt0, t0 WHERE ((+ (vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((+ (vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((+ (vt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(DISTINCT (rt0.c2 IN ()))) ORDER BY ((IFNULL(rt0.c0, rt0.c1))<<((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))  NULLS LAST, (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END IN (rt0.c1 COLLATE BINARY, 0.945543248911755)) ASC;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (rt0.c2 IN ()))) IS TRUE)  as count FROM rt0 ORDER BY ((IFNULL(rt0.c0, rt0.c1))<<((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))  NULLS LAST, (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END IN (rt0.c1 COLLATE BINARY, 0.945543248911755)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(DISTINCT (rt0.c2 IN ()))) ORDER BY ((IFNULL(rt0.c0, rt0.c1))<<((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))  NULLS LAST, (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END IN (rt0.c1 COLLATE BINARY, 0.945543248911755)) ASC;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (rt0.c2 IN ()))) IS TRUE)  as count FROM rt0 ORDER BY ((IFNULL(rt0.c0, rt0.c1))<<((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))  NULLS LAST, (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END IN (rt0.c1 COLLATE BINARY, 0.945543248911755)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(DISTINCT (rt0.c2 IN ()))) ORDER BY ((IFNULL(rt0.c0, rt0.c1))<<((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))  NULLS LAST, (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END IN (rt0.c1 COLLATE BINARY, 0.945543248911755)) ASC;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1 COLLATE NOCASE)<=(((rt0.c1) ISNULL))) WHERE (((CASE WHEN vt0.c1 THEN NULL ELSE rt0.c0 END) IS TRUE)) ORDER BY (((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN NULL ELSE rt0.c0 END) IS TRUE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1 COLLATE NOCASE)<=(((rt0.c1) ISNULL))) ORDER BY (((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) IN ()) DESC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1 COLLATE NOCASE)<=(((rt0.c1) ISNULL))) WHERE (((CASE WHEN vt0.c1 THEN NULL ELSE rt0.c0 END) IS TRUE)) ORDER BY (((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN NULL ELSE rt0.c0 END) IS TRUE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1 COLLATE NOCASE)<=(((rt0.c1) ISNULL))) ORDER BY (((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) IN ()) DESC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1 COLLATE NOCASE)<=(((rt0.c1) ISNULL))) WHERE (((CASE WHEN vt0.c1 THEN NULL ELSE rt0.c0 END) IS TRUE)) ORDER BY (((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) IN ()) DESC;
SELECT * FROM t0, rt0 INNER JOIN vt0 ON (((rt0.c1)) NOT BETWEEN ((CASE rt0.c0  WHEN vt0.c0 THEN x'2a90' ELSE t0.c0 END)) AND (((rt0.c2 IN ())))) WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c1)&(vt0.c1)) WHEN CASE WHEN NULL THEN rt0.c2 END THEN CASE WHEN 0.7830128013592329 THEN rt0.c1 ELSE vt0.c1 END WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c1) NOTNULL) END) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c1)&(vt0.c1)) WHEN CASE WHEN NULL THEN rt0.c2 END THEN CASE WHEN 0.7830128013592329 THEN rt0.c1 ELSE vt0.c1 END WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c1) NOTNULL) END) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON (((rt0.c1)) NOT BETWEEN ((CASE rt0.c0  WHEN vt0.c0 THEN x'2a90' ELSE t0.c0 END)) AND (((rt0.c2 IN ())))) ORDER BY rt0.c1 ASC);
SELECT * FROM t0, rt0 INNER JOIN vt0 ON (((rt0.c1)) NOT BETWEEN ((CASE rt0.c0  WHEN vt0.c0 THEN x'2a90' ELSE t0.c0 END)) AND (((rt0.c2 IN ())))) WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c1)&(vt0.c1)) WHEN CASE WHEN NULL THEN rt0.c2 END THEN CASE WHEN 0.7830128013592329 THEN rt0.c1 ELSE vt0.c1 END WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c1) NOTNULL) END) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c1)&(vt0.c1)) WHEN CASE WHEN NULL THEN rt0.c2 END THEN CASE WHEN 0.7830128013592329 THEN rt0.c1 ELSE vt0.c1 END WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c1) NOTNULL) END) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON (((rt0.c1)) NOT BETWEEN ((CASE rt0.c0  WHEN vt0.c0 THEN x'2a90' ELSE t0.c0 END)) AND (((rt0.c2 IN ())))) ORDER BY rt0.c1 ASC);
SELECT * FROM t0, rt0 INNER JOIN vt0 ON (((rt0.c1)) NOT BETWEEN ((CASE rt0.c0  WHEN vt0.c0 THEN x'2a90' ELSE t0.c0 END)) AND (((rt0.c2 IN ())))) WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c1)&(vt0.c1)) WHEN CASE WHEN NULL THEN rt0.c2 END THEN CASE WHEN 0.7830128013592329 THEN rt0.c1 ELSE vt0.c1 END WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c1) NOTNULL) END) ORDER BY rt0.c1 ASC;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((''))<=((((rt0.c0) ISNULL))))) ORDER BY ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (((rt0.c2) IS TRUE)) AND ((((vt0.c0, t0.c0, rt0.c0))<((NULL, vt0.c0, rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (((((''))<=((((rt0.c0) ISNULL))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (((rt0.c2) IS TRUE)) AND ((((vt0.c0, t0.c0, rt0.c0))<((NULL, vt0.c0, rt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((''))<=((((rt0.c0) ISNULL))))) ORDER BY ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (((rt0.c2) IS TRUE)) AND ((((vt0.c0, t0.c0, rt0.c0))<((NULL, vt0.c0, rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (((((''))<=((((rt0.c0) ISNULL))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (((rt0.c2) IS TRUE)) AND ((((vt0.c0, t0.c0, rt0.c0))<((NULL, vt0.c0, rt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((''))<=((((rt0.c0) ISNULL))))) ORDER BY ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (((rt0.c2) IS TRUE)) AND ((((vt0.c0, t0.c0, rt0.c0))<((NULL, vt0.c0, rt0.c1))))) DESC;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((((x'', vt0.c1, t0.c0, t0.c0, rt0.c1)) NOT BETWEEN (('1402204599', vt0.c0, rt0.c2, x'', -573860764)) AND ((vt0.c0, vt0.c1, rt0.c1, 0.10034434602122388, rt0.c1)))) IS TRUE) LEFT OUTER JOIN rt0 ON CAST(CAST(t0.c0 AS BLOB) AS REAL) WHERE ((((CAST(vt0.c1 AS REAL)))=((((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))))) ORDER BY DATE(((vt0.c0) NOT NULL), (((rt0.c2))>=((vt0.c1))), (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c1 AS REAL)))==((((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((((x'', vt0.c1, t0.c0, t0.c0, rt0.c1)) NOT BETWEEN (('1402204599', vt0.c0, rt0.c2, x'', -573860764)) AND ((vt0.c0, vt0.c1, rt0.c1, 0.10034434602122388, rt0.c1)))) IS TRUE) LEFT OUTER JOIN rt0 ON CAST(CAST(t0.c0 AS BLOB) AS REAL) ORDER BY DATE(((vt0.c0) NOT NULL), (((rt0.c2))>=((vt0.c1))), (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((((x'', vt0.c1, t0.c0, t0.c0, rt0.c1)) NOT BETWEEN (('1402204599', vt0.c0, rt0.c2, x'', -573860764)) AND ((vt0.c0, vt0.c1, rt0.c1, 0.10034434602122388, rt0.c1)))) IS TRUE) LEFT OUTER JOIN rt0 ON CAST(CAST(t0.c0 AS BLOB) AS REAL) WHERE ((((CAST(vt0.c1 AS REAL)))=((((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))))) ORDER BY DATE(((vt0.c0) NOT NULL), (((rt0.c2))>=((vt0.c1))), (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c1 AS REAL)))==((((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((((x'', vt0.c1, t0.c0, t0.c0, rt0.c1)) NOT BETWEEN (('1402204599', vt0.c0, rt0.c2, x'', -573860764)) AND ((vt0.c0, vt0.c1, rt0.c1, 0.10034434602122388, rt0.c1)))) IS TRUE) LEFT OUTER JOIN rt0 ON CAST(CAST(t0.c0 AS BLOB) AS REAL) ORDER BY DATE(((vt0.c0) NOT NULL), (((rt0.c2))>=((vt0.c1))), (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (0.4426617538023987) ORDER BY json_object(((rt0.c2) NOT NULL), TRIM(DISTINCT rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.4426617538023987) IS TRUE)  as count FROM t0, rt0 ORDER BY json_object(((rt0.c2) NOT NULL), TRIM(DISTINCT rt0.c2))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (0.4426617538023987) ORDER BY json_object(((rt0.c2) NOT NULL), TRIM(DISTINCT rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.4426617538023987) IS TRUE)  as count FROM t0, rt0 ORDER BY json_object(((rt0.c2) NOT NULL), TRIM(DISTINCT rt0.c2))  NULLS FIRST);
SELECT * FROM vt0, t0, rt0 WHERE (((((((rt0.c2) IS FALSE))OR(COALESCE(DISTINCT t0.c0, vt0.c0))))AND(CASE rt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN '0.9085502361521216' END))) ORDER BY ((((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)OR((vt0.c0 IN (rt0.c1, vt0.c1)))))AND(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST, (((rt0.c1 IN ())) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) IS FALSE))OR(COALESCE(DISTINCT t0.c0, vt0.c0))))AND(CASE rt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN '0.9085502361521216' END))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)OR((vt0.c0 IN (rt0.c1, vt0.c1)))))AND(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST, (((rt0.c1 IN ())) IS TRUE)  NULLS FIRST);
SELECT * FROM vt0, t0, rt0 WHERE (((((((rt0.c2) IS FALSE))OR(COALESCE(DISTINCT t0.c0, vt0.c0))))AND(CASE rt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN '0.9085502361521216' END))) ORDER BY ((((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)OR((vt0.c0 IN (rt0.c1, vt0.c1)))))AND(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST, (((rt0.c1 IN ())) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) IS FALSE))OR(COALESCE(DISTINCT t0.c0, vt0.c0))))AND(CASE rt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN '0.9085502361521216' END))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)OR((vt0.c0 IN (rt0.c1, vt0.c1)))))AND(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST, (((rt0.c1 IN ())) IS TRUE)  NULLS FIRST);
SELECT * FROM vt0, t0, rt0 WHERE (((((((rt0.c2) IS FALSE))OR(COALESCE(DISTINCT t0.c0, vt0.c0))))AND(CASE rt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN '0.9085502361521216' END))) ORDER BY ((((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)OR((vt0.c0 IN (rt0.c1, vt0.c1)))))AND(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST, (((rt0.c1 IN ())) IS TRUE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((x'5590'))<>((rt0.c1)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((x'5590'))!=((rt0.c1)))) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((x'5590'))<>((rt0.c1)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((x'5590'))!=((rt0.c1)))) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((x'5590'))<>((rt0.c1)))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND ('俬JPg7-A')))OR(TRIM(vt0.c0, rt0.c1)))) ORDER BY (((rt0.c1)) NOT BETWEEN ((CAST(0.6371594393813155 AS REAL))) AND ((((rt0.c0) NOT NULL)))) ASC  NULLS LAST, CAST(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND ('俬JPg7-A')))OR(TRIM(vt0.c0, rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((CAST(0.6371594393813155 AS REAL))) AND ((((rt0.c0) NOT NULL)))) ASC  NULLS LAST, CAST(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND ('俬JPg7-A')))OR(TRIM(vt0.c0, rt0.c1)))) ORDER BY (((rt0.c1)) NOT BETWEEN ((CAST(0.6371594393813155 AS REAL))) AND ((((rt0.c0) NOT NULL)))) ASC  NULLS LAST, CAST(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND ('俬JPg7-A')))OR(TRIM(vt0.c0, rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((CAST(0.6371594393813155 AS REAL))) AND ((((rt0.c0) NOT NULL)))) ASC  NULLS LAST, CAST(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND ('俬JPg7-A')))OR(TRIM(vt0.c0, rt0.c1)))) ORDER BY (((rt0.c1)) NOT BETWEEN ((CAST(0.6371594393813155 AS REAL))) AND ((((rt0.c0) NOT NULL)))) ASC  NULLS LAST, CAST(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS REAL) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON CASE ((((rt0.c1)OR(rt0.c0)))AND(1.629591345E9))  WHEN CAST(1963604352 AS REAL) THEN ((t0.c0) BETWEEN (rt0.c2) AND (vt0.c1)) WHEN ((t0.c0) NOT NULL) THEN CAST(vt0.c0 AS NUMERIC) WHEN t0.c0 COLLATE RTRIM THEN vt0.c0 ELSE (+ (vt0.c0)) END WHERE (x'') ORDER BY vt0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON CASE ((((rt0.c1)OR(rt0.c0)))AND(1.629591345E9))  WHEN CAST(1963604352 AS REAL) THEN ((t0.c0) BETWEEN (rt0.c2) AND (vt0.c1)) WHEN ((t0.c0) NOT NULL) THEN CAST(vt0.c0 AS NUMERIC) WHEN t0.c0 COLLATE RTRIM THEN vt0.c0 ELSE (+ (vt0.c0)) END ORDER BY vt0.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON CASE ((((rt0.c1)OR(rt0.c0)))AND(1.629591345E9))  WHEN CAST(1963604352 AS REAL) THEN ((t0.c0) BETWEEN (rt0.c2) AND (vt0.c1)) WHEN ((t0.c0) NOT NULL) THEN CAST(vt0.c0 AS NUMERIC) WHEN t0.c0 COLLATE RTRIM THEN vt0.c0 ELSE (+ (vt0.c0)) END WHERE (x'') ORDER BY vt0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON CASE ((((rt0.c1)OR(rt0.c0)))AND(1.629591345E9))  WHEN CAST(1963604352 AS REAL) THEN ((t0.c0) BETWEEN (rt0.c2) AND (vt0.c1)) WHEN ((t0.c0) NOT NULL) THEN CAST(vt0.c0 AS NUMERIC) WHEN t0.c0 COLLATE RTRIM THEN vt0.c0 ELSE (+ (vt0.c0)) END ORDER BY vt0.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON CASE ((((rt0.c1)OR(rt0.c0)))AND(1.629591345E9))  WHEN CAST(1963604352 AS REAL) THEN ((t0.c0) BETWEEN (rt0.c2) AND (vt0.c1)) WHEN ((t0.c0) NOT NULL) THEN CAST(vt0.c0 AS NUMERIC) WHEN t0.c0 COLLATE RTRIM THEN vt0.c0 ELSE (+ (vt0.c0)) END WHERE (x'') ORDER BY vt0.c0 COLLATE NOCASE;
SELECT * FROM t0, rt0 INNER JOIN vt0 ON LIKELIHOOD(((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), 0.06194669661110441) WHERE (x'') ORDER BY CAST(((((((((rt0.c2)OR(rt0.c1)))OR('i\')))OR(vt0.c0)))OR(rt0.c2)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON LIKELIHOOD(((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), 0.06194669661110441) ORDER BY CAST(((((((((rt0.c2)OR(rt0.c1)))OR('i\')))OR(vt0.c0)))OR(rt0.c2)) AS BLOB)  NULLS LAST);
SELECT * FROM t0, rt0 INNER JOIN vt0 ON LIKELIHOOD(((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), 0.06194669661110441) WHERE (x'') ORDER BY CAST(((((((((rt0.c2)OR(rt0.c1)))OR('i\')))OR(vt0.c0)))OR(rt0.c2)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON LIKELIHOOD(((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), 0.06194669661110441) ORDER BY CAST(((((((((rt0.c2)OR(rt0.c1)))OR('i\')))OR(vt0.c0)))OR(rt0.c2)) AS BLOB)  NULLS LAST);
SELECT * FROM t0, rt0 INNER JOIN vt0 ON LIKELIHOOD(((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), 0.06194669661110441) WHERE (x'') ORDER BY CAST(((((((((rt0.c2)OR(rt0.c1)))OR('i\')))OR(vt0.c0)))OR(rt0.c2)) AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM(DISTINCT NULL, ((t0.c0)%(t0.c0)))) ORDER BY t0.c0 COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT NULL, ((t0.c0)%(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM(DISTINCT NULL, ((t0.c0)%(t0.c0)))) ORDER BY t0.c0 COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT NULL, ((t0.c0)%(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM(DISTINCT NULL, ((t0.c0)%(t0.c0)))) ORDER BY t0.c0 COLLATE BINARY ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN t0 ON rtreenode(((rt0.c2)%(vt0.c0)), CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c1 END) WHERE ((NOT (((vt0.c0)>=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)>=(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t0 ON rtreenode(((rt0.c2)%(vt0.c0)), CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c1 END));
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN t0 ON rtreenode(((rt0.c2)%(vt0.c0)), CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c1 END) WHERE ((NOT (((vt0.c0)>=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)>=(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t0 ON rtreenode(((rt0.c2)%(vt0.c0)), CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c1 END));
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN t0 ON rtreenode(((rt0.c2)%(vt0.c0)), CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c1 END) WHERE ((NOT (((vt0.c0)>=(vt0.c1)))));
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c1, rt0.c0 COLLATE BINARY, LIKELIHOOD(t0.c0, 0.9135850715419)))>((CASE WHEN rt0.c1 THEN '1249925918' ELSE rt0.c2 END, (rt0.c2 IN (rt0.c2, rt0.c0)), ((t0.c0)|(rt0.c2)))))) ORDER BY ((((((((((t0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c0 COLLATE BINARY, LIKELIHOOD(t0.c0, 0.9135850715419)))>((CASE WHEN rt0.c1 THEN '1249925918' ELSE rt0.c2 END, (rt0.c2 IN (rt0.c2, rt0.c0)), ((t0.c0)|(rt0.c2)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((((t0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2))) NOT NULL) ASC);
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c1, rt0.c0 COLLATE BINARY, LIKELIHOOD(t0.c0, 0.9135850715419)))>((CASE WHEN rt0.c1 THEN '1249925918' ELSE rt0.c2 END, (rt0.c2 IN (rt0.c2, rt0.c0)), ((t0.c0)|(rt0.c2)))))) ORDER BY ((((((((((t0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c0 COLLATE BINARY, LIKELIHOOD(t0.c0, 0.9135850715419)))>((CASE WHEN rt0.c1 THEN '1249925918' ELSE rt0.c2 END, (rt0.c2 IN (rt0.c2, rt0.c0)), ((t0.c0)|(rt0.c2)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((((t0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2))) NOT NULL) ASC);
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c1, rt0.c0 COLLATE BINARY, LIKELIHOOD(t0.c0, 0.9135850715419)))>((CASE WHEN rt0.c1 THEN '1249925918' ELSE rt0.c2 END, (rt0.c2 IN (rt0.c2, rt0.c0)), ((t0.c0)|(rt0.c2)))))) ORDER BY ((((((((((t0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2))) NOT NULL) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((vt0.c0)OR(vt0.c1)), ((vt0.c1) NOTNULL), COALESCE(DISTINCT 0.6254631054789103, vt0.c1), TYPEOF(DISTINCT vt0.c0), ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))) AND ((ABS(vt0.c1), (vt0.c1 IN ()), SUBSTR(vt0.c0, vt0.c1), ((vt0.c0)>=(vt0.c1)), ((vt0.c1)<=(vt0.c1)))))) ORDER BY (((vt0.c0 IN ()))-(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((vt0.c0)OR(vt0.c1)), ((vt0.c1) NOTNULL), COALESCE(DISTINCT 0.6254631054789103, vt0.c1), TYPEOF(DISTINCT vt0.c0), ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))) AND ((ABS(vt0.c1), (vt0.c1 IN ()), SUBSTR(vt0.c0, vt0.c1), ((vt0.c0)>=(vt0.c1)), ((vt0.c1)<=(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))-(vt0.c0)) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((vt0.c0)OR(vt0.c1)), ((vt0.c1) NOTNULL), COALESCE(DISTINCT 0.6254631054789103, vt0.c1), TYPEOF(DISTINCT vt0.c0), ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))) AND ((ABS(vt0.c1), (vt0.c1 IN ()), SUBSTR(vt0.c0, vt0.c1), ((vt0.c0)>=(vt0.c1)), ((vt0.c1)<=(vt0.c1)))))) ORDER BY (((vt0.c0 IN ()))-(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((vt0.c0)OR(vt0.c1)), ((vt0.c1) NOTNULL), COALESCE(DISTINCT 0.6254631054789103, vt0.c1), TYPEOF(DISTINCT vt0.c0), ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))) AND ((ABS(vt0.c1), (vt0.c1 IN ()), SUBSTR(vt0.c0, vt0.c1), ((vt0.c0)>=(vt0.c1)), ((vt0.c1)<=(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))-(vt0.c0)) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((vt0.c0)OR(vt0.c1)), ((vt0.c1) NOTNULL), COALESCE(DISTINCT 0.6254631054789103, vt0.c1), TYPEOF(DISTINCT vt0.c0), ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))) AND ((ABS(vt0.c1), (vt0.c1 IN ()), SUBSTR(vt0.c0, vt0.c1), ((vt0.c0)>=(vt0.c1)), ((vt0.c1)<=(vt0.c1)))))) ORDER BY (((vt0.c0 IN ()))-(vt0.c0)) ASC;
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt0 ON rt0.c0 WHERE (((((((((((rt0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))<(LOWER(DISTINCT vt0.c1)))) ORDER BY ((((((vt0.c0, vt0.c0, 0.6502697326882239))<((rt0.c1, vt0.c0, vt0.c0)))))=((((vt0.c0) ISNULL)))), CAST(x'db50' AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))<(LOWER(DISTINCT vt0.c1)))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON rt0.c0 ORDER BY ((((((vt0.c0, vt0.c0, 0.6502697326882239))<((rt0.c1, vt0.c0, vt0.c0)))))=((((vt0.c0) ISNULL)))), CAST(x'db50' AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt0 ON rt0.c0 WHERE (((((((((((rt0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))<(LOWER(DISTINCT vt0.c1)))) ORDER BY ((((((vt0.c0, vt0.c0, 0.6502697326882239))<((rt0.c1, vt0.c0, vt0.c0)))))=((((vt0.c0) ISNULL)))), CAST(x'db50' AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))<(LOWER(DISTINCT vt0.c1)))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON rt0.c0 ORDER BY ((((((vt0.c0, vt0.c0, 0.6502697326882239))<((rt0.c1, vt0.c0, vt0.c0)))))=((((vt0.c0) ISNULL)))), CAST(x'db50' AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt0 ON rt0.c0 WHERE (((((((((((rt0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))<(LOWER(DISTINCT vt0.c1)))) ORDER BY ((((((vt0.c0, vt0.c0, 0.6502697326882239))<((rt0.c1, vt0.c0, vt0.c0)))))=((((vt0.c0) ISNULL)))), CAST(x'db50' AS TEXT) ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt0, vt0 WHERE (((x'')GLOB(('1' IN ())))) ORDER BY ((((((((((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE t0.c0 END)AND(t0.c0)))AND(CAST(rt0.c0 AS TEXT))))OR(CAST(rt0.c0 AS TEXT))))AND(((rt0.c2)IS(t0.c0)))))AND((((rt0.c1))<((rt0.c2))))))AND((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((x'')GLOB(('1' IN ())))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((((((((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE t0.c0 END)AND(t0.c0)))AND(CAST(rt0.c0 AS TEXT))))OR(CAST(rt0.c0 AS TEXT))))AND(((rt0.c2)IS(t0.c0)))))AND((((rt0.c1))<((rt0.c2))))))AND((rt0.c0 IN ()))) ASC);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((x'')GLOB(('1' IN ())))) ORDER BY ((((((((((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE t0.c0 END)AND(t0.c0)))AND(CAST(rt0.c0 AS TEXT))))OR(CAST(rt0.c0 AS TEXT))))AND(((rt0.c2)IS(t0.c0)))))AND((((rt0.c1))<((rt0.c2))))))AND((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((x'')GLOB(('1' IN ())))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((((((((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE t0.c0 END)AND(t0.c0)))AND(CAST(rt0.c0 AS TEXT))))OR(CAST(rt0.c0 AS TEXT))))AND(((rt0.c2)IS(t0.c0)))))AND((((rt0.c1))<((rt0.c2))))))AND((rt0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM t0, vt0 INDEXED BY i10 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN (((+ (t0.c0)), (NOT (t0.c0)), '-698815170')) AND (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))), vt0.c0, UPPER(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c0, t0.c0)) BETWEEN (((+ (t0.c0)), (NOT (t0.c0)), '-698815170')) AND (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))), vt0.c0, UPPER(t0.c0))))) IS TRUE)  as count FROM t0, vt0 INDEXED BY i10);
SELECT COUNT(*) FROM t0, vt0 INDEXED BY i10 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN (((+ (t0.c0)), (NOT (t0.c0)), '-698815170')) AND (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))), vt0.c0, UPPER(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c0, t0.c0)) BETWEEN (((+ (t0.c0)), (NOT (t0.c0)), '-698815170')) AND (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))), vt0.c0, UPPER(t0.c0))))) IS TRUE)  as count FROM t0, vt0 INDEXED BY i10);
SELECT * FROM t0, rt0 WHERE (((((t0.c0)GLOB(rt0.c0))) BETWEEN ((((rt0.c1))>=((t0.c0)))) AND (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)GLOB(rt0.c0))) BETWEEN ((((rt0.c1))>=((t0.c0)))) AND (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((t0.c0)GLOB(rt0.c0))) BETWEEN ((((rt0.c1))>=((t0.c0)))) AND (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)GLOB(rt0.c0))) BETWEEN ((((rt0.c1))>=((t0.c0)))) AND (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((t0.c0)GLOB(rt0.c0))) BETWEEN ((((rt0.c1))>=((t0.c0)))) AND (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT * FROM t0 CROSS JOIN vt0 ON LOWER(x'' COLLATE RTRIM) RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))) AND ((((((((((((((rt0.c2)AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(x'e8bd')))AND('0.9085502361521216')))OR('365173724'))))) WHERE (CASE t0.c0 COLLATE NOCASE  WHEN (~ (x'')) THEN ((((vt0.c1)OR(rt0.c0)))AND(t0.c0)) ELSE vt0.c0 END) ORDER BY ((((0.32986921083923737)AND('')))OR((- (rt0.c2)))), ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ()) DESC  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)<=((((vt0.c0))<((rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE NOCASE  WHEN (~ (x'')) THEN ((((vt0.c1)OR(rt0.c0)))AND(t0.c0)) ELSE vt0.c0 END) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON LOWER(x'' COLLATE RTRIM) RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))) AND ((((((((((((((rt0.c2)AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(x'e8bd')))AND('0.9085502361521216')))OR('365173724'))))) ORDER BY ((((0.32986921083923737)AND('')))OR((- (rt0.c2)))), ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ()) DESC  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)<=((((vt0.c0))<((rt0.c1))))) ASC  NULLS LAST);
SELECT * FROM t0 CROSS JOIN vt0 ON LOWER(x'' COLLATE RTRIM) RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))) AND ((((((((((((((rt0.c2)AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(x'e8bd')))AND('0.9085502361521216')))OR('365173724'))))) WHERE (CASE t0.c0 COLLATE NOCASE  WHEN (~ (x'')) THEN ((((vt0.c1)OR(rt0.c0)))AND(t0.c0)) ELSE vt0.c0 END) ORDER BY ((((0.32986921083923737)AND('')))OR((- (rt0.c2)))), ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ()) DESC  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)<=((((vt0.c0))<((rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE NOCASE  WHEN (~ (x'')) THEN ((((vt0.c1)OR(rt0.c0)))AND(t0.c0)) ELSE vt0.c0 END) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON LOWER(x'' COLLATE RTRIM) RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))) AND ((((((((((((((rt0.c2)AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(x'e8bd')))AND('0.9085502361521216')))OR('365173724'))))) ORDER BY ((((0.32986921083923737)AND('')))OR((- (rt0.c2)))), ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ()) DESC  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)<=((((vt0.c0))<((rt0.c1))))) ASC  NULLS LAST);
SELECT * FROM t0 CROSS JOIN vt0 ON LOWER(x'' COLLATE RTRIM) RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))) AND ((((((((((((((rt0.c2)AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(x'e8bd')))AND('0.9085502361521216')))OR('365173724'))))) WHERE (CASE t0.c0 COLLATE NOCASE  WHEN (~ (x'')) THEN ((((vt0.c1)OR(rt0.c0)))AND(t0.c0)) ELSE vt0.c0 END) ORDER BY ((((0.32986921083923737)AND('')))OR((- (rt0.c2)))), ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ()) DESC  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)<=((((vt0.c0))<((rt0.c1))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((ABS(rt0.c1)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt0.c1)) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((ABS(rt0.c1)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt0.c1)) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((ABS(rt0.c1)) NOTNULL));
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((((rt0.c2) IS FALSE)))<>((((vt0.c1)!=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) IS FALSE)))!=((((vt0.c1)!=(vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((((rt0.c2) IS FALSE)))<>((((vt0.c1)!=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) IS FALSE)))!=((((vt0.c1)!=(vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((((rt0.c2) IS FALSE)))<>((((vt0.c1)!=(vt0.c0))))));
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((((((vt0.c0)OR(rt0.c0)))OR(rt0.c1)), (((rt0.c2))>=((rt0.c1))), CASE WHEN t0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '2069036527' WHEN rt0.c0 THEN t0.c0 END)) AND (((((t0.c0))<=((vt0.c1))), ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)), ((vt0.c0)AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((((((vt0.c0)OR(rt0.c0)))OR(rt0.c1)), (((rt0.c2))>=((rt0.c1))), CASE WHEN t0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '2069036527' WHEN rt0.c0 THEN t0.c0 END)) AND (((((t0.c0))<=((vt0.c1))), ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)), ((vt0.c0)AND(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((((((vt0.c0)OR(rt0.c0)))OR(rt0.c1)), (((rt0.c2))>=((rt0.c1))), CASE WHEN t0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '2069036527' WHEN rt0.c0 THEN t0.c0 END)) AND (((((t0.c0))<=((vt0.c1))), ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)), ((vt0.c0)AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((((((vt0.c0)OR(rt0.c0)))OR(rt0.c1)), (((rt0.c2))>=((rt0.c1))), CASE WHEN t0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '2069036527' WHEN rt0.c0 THEN t0.c0 END)) AND (((((t0.c0))<=((vt0.c1))), ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)), ((vt0.c0)AND(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((((((vt0.c0)OR(rt0.c0)))OR(rt0.c1)), (((rt0.c2))>=((rt0.c1))), CASE WHEN t0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '2069036527' WHEN rt0.c0 THEN t0.c0 END)) AND (((((t0.c0))<=((vt0.c1))), ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)), ((vt0.c0)AND(rt0.c0))))));
SELECT * FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((vt0.c1)OR(0.878993315668315)))/(((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(vt0.c1)))AND(rt0.c0)))) WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))AND(rt0.c1)))AND(((rt0.c2) IS TRUE)))) ORDER BY CASE rt0.c0  WHEN rt0.c0 THEN 0.24942987257190796 WHEN vt0.c1 THEN rt0.c0 WHEN t0.c0 THEN vt0.c1 ELSE rt0.c0 END COLLATE BINARY DESC  NULLS LAST, ((vt0.c0)>=(t0.c0)) COLLATE NOCASE ASC, ABS(DISTINCT ((((((((rt0.c1)OR(rt0.c2)))AND(0.41748500816002065)))OR(vt0.c0)))OR(rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))AND(rt0.c1)))AND(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((vt0.c1)OR(0.878993315668315)))/(((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(vt0.c1)))AND(rt0.c0)))) ORDER BY CASE rt0.c0  WHEN rt0.c0 THEN 0.24942987257190796 WHEN vt0.c1 THEN rt0.c0 WHEN t0.c0 THEN vt0.c1 ELSE rt0.c0 END COLLATE BINARY DESC  NULLS LAST, ((vt0.c0)>=(t0.c0)) COLLATE NOCASE ASC, ABS(DISTINCT ((((((((rt0.c1)OR(rt0.c2)))AND(0.41748500816002065)))OR(vt0.c0)))OR(rt0.c1)))  NULLS LAST);
SELECT * FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((vt0.c1)OR(0.878993315668315)))/(((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(vt0.c1)))AND(rt0.c0)))) WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))AND(rt0.c1)))AND(((rt0.c2) IS TRUE)))) ORDER BY CASE rt0.c0  WHEN rt0.c0 THEN 0.24942987257190796 WHEN vt0.c1 THEN rt0.c0 WHEN t0.c0 THEN vt0.c1 ELSE rt0.c0 END COLLATE BINARY DESC  NULLS LAST, ((vt0.c0)>=(t0.c0)) COLLATE NOCASE ASC, ABS(DISTINCT ((((((((rt0.c1)OR(rt0.c2)))AND(0.41748500816002065)))OR(vt0.c0)))OR(rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))AND(rt0.c1)))AND(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((vt0.c1)OR(0.878993315668315)))/(((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(vt0.c1)))AND(rt0.c0)))) ORDER BY CASE rt0.c0  WHEN rt0.c0 THEN 0.24942987257190796 WHEN vt0.c1 THEN rt0.c0 WHEN t0.c0 THEN vt0.c1 ELSE rt0.c0 END COLLATE BINARY DESC  NULLS LAST, ((vt0.c0)>=(t0.c0)) COLLATE NOCASE ASC, ABS(DISTINCT ((((((((rt0.c1)OR(rt0.c2)))AND(0.41748500816002065)))OR(vt0.c0)))OR(rt0.c1)))  NULLS LAST);
SELECT * FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((vt0.c1)OR(0.878993315668315)))/(((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(vt0.c1)))AND(rt0.c0)))) WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))AND(rt0.c1)))AND(((rt0.c2) IS TRUE)))) ORDER BY CASE rt0.c0  WHEN rt0.c0 THEN 0.24942987257190796 WHEN vt0.c1 THEN rt0.c0 WHEN t0.c0 THEN vt0.c1 ELSE rt0.c0 END COLLATE BINARY DESC  NULLS LAST, ((vt0.c0)>=(t0.c0)) COLLATE NOCASE ASC, ABS(DISTINCT ((((((((rt0.c1)OR(rt0.c2)))AND(0.41748500816002065)))OR(vt0.c0)))OR(rt0.c1)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)>=(rt0.c0)))IS(NULLIF(rt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>=(rt0.c0)))IS(NULLIF(rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)>=(rt0.c0)))IS(NULLIF(rt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>=(rt0.c0)))IS(NULLIF(rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)>=(rt0.c0)))IS(NULLIF(rt0.c0, rt0.c0))));
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON CASE rt0.c2 COLLATE NOCASE  WHEN ((vt0.c1) ISNULL) THEN (+ (vt0.c1)) END WHERE (((CAST(rt0.c1 AS REAL)) NOT BETWEEN ((+ (rt0.c2))) AND (((vt0.c1) NOTNULL)))) ORDER BY CAST((rt0.c1 IN ('')) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL)) NOT BETWEEN ((+ (rt0.c2))) AND (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED LEFT OUTER JOIN t0 ON CASE rt0.c2 COLLATE NOCASE  WHEN ((vt0.c1) ISNULL) THEN (+ (vt0.c1)) END ORDER BY CAST((rt0.c1 IN ('')) AS BLOB) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON CASE rt0.c2 COLLATE NOCASE  WHEN ((vt0.c1) ISNULL) THEN (+ (vt0.c1)) END WHERE (((CAST(rt0.c1 AS REAL)) NOT BETWEEN ((+ (rt0.c2))) AND (((vt0.c1) NOTNULL)))) ORDER BY CAST((rt0.c1 IN ('')) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL)) NOT BETWEEN ((+ (rt0.c2))) AND (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED LEFT OUTER JOIN t0 ON CASE rt0.c2 COLLATE NOCASE  WHEN ((vt0.c1) ISNULL) THEN (+ (vt0.c1)) END ORDER BY CAST((rt0.c1 IN ('')) AS BLOB) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON CASE rt0.c2 COLLATE NOCASE  WHEN ((vt0.c1) ISNULL) THEN (+ (vt0.c1)) END WHERE (((CAST(rt0.c1 AS REAL)) NOT BETWEEN ((+ (rt0.c2))) AND (((vt0.c1) NOTNULL)))) ORDER BY CAST((rt0.c1 IN ('')) AS BLOB) DESC  NULLS LAST;
SELECT * FROM vt0, rt0, t0 WHERE (((((rt0.c2) NOT NULL))|('2069036527')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL))|('2069036527'))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (((((rt0.c2) NOT NULL))|('2069036527')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL))|('2069036527'))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (((((rt0.c2) NOT NULL))|('2069036527')));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c1  WHEN ((rt0.c1)OR(rt0.c2)) THEN (((rt0.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c2))==((rt0.c2, rt0.c2, rt0.c2, rt0.c0, rt0.c1))) END) ORDER BY (- (rt0.c2 COLLATE BINARY)), CAST(((rt0.c2) IS TRUE) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN ((rt0.c1)OR(rt0.c2)) THEN (((rt0.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c2))==((rt0.c2, rt0.c2, rt0.c2, rt0.c0, rt0.c1))) END) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c2 COLLATE BINARY)), CAST(((rt0.c2) IS TRUE) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c1  WHEN ((rt0.c1)OR(rt0.c2)) THEN (((rt0.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c2))==((rt0.c2, rt0.c2, rt0.c2, rt0.c0, rt0.c1))) END) ORDER BY (- (rt0.c2 COLLATE BINARY)), CAST(((rt0.c2) IS TRUE) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN ((rt0.c1)OR(rt0.c2)) THEN (((rt0.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c2))==((rt0.c2, rt0.c2, rt0.c2, rt0.c0, rt0.c1))) END) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c2 COLLATE BINARY)), CAST(((rt0.c2) IS TRUE) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c1  WHEN ((rt0.c1)OR(rt0.c2)) THEN (((rt0.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c2))==((rt0.c2, rt0.c2, rt0.c2, rt0.c0, rt0.c1))) END) ORDER BY (- (rt0.c2 COLLATE BINARY)), CAST(((rt0.c2) IS TRUE) AS TEXT)  NULLS LAST;
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (CAST(t0.c0 AS REAL) IN (CASE WHEN vt0.c0 THEN t0.c0 END)) WHERE ((((((((((vt0.c1 IN ()))AND(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)||(t0.c0)))))OR(((vt0.c0)LIKE(t0.c0)))))AND(t0.c0))) ORDER BY (((((('4\()')||(vt0.c0)))OR((((vt0.c0))>((vt0.c0))))))OR(((vt0.c1)|(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c1 IN ()))AND(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)||(t0.c0)))))OR(((vt0.c0)LIKE(t0.c0)))))AND(t0.c0))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (CAST(t0.c0 AS REAL) IN (CASE WHEN vt0.c0 THEN t0.c0 END)) ORDER BY (((((('4\()')||(vt0.c0)))OR((((vt0.c0))>((vt0.c0))))))OR(((vt0.c1)|(t0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (CAST(t0.c0 AS REAL) IN (CASE WHEN vt0.c0 THEN t0.c0 END)) WHERE ((((((((((vt0.c1 IN ()))AND(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)||(t0.c0)))))OR(((vt0.c0)LIKE(t0.c0)))))AND(t0.c0))) ORDER BY (((((('4\()')||(vt0.c0)))OR((((vt0.c0))>((vt0.c0))))))OR(((vt0.c1)|(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c1 IN ()))AND(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)||(t0.c0)))))OR(((vt0.c0)LIKE(t0.c0)))))AND(t0.c0))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (CAST(t0.c0 AS REAL) IN (CASE WHEN vt0.c0 THEN t0.c0 END)) ORDER BY (((((('4\()')||(vt0.c0)))OR((((vt0.c0))>((vt0.c0))))))OR(((vt0.c1)|(t0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (CAST(t0.c0 AS REAL) IN (CASE WHEN vt0.c0 THEN t0.c0 END)) WHERE ((((((((((vt0.c1 IN ()))AND(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)||(t0.c0)))))OR(((vt0.c0)LIKE(t0.c0)))))AND(t0.c0))) ORDER BY (((((('4\()')||(vt0.c0)))OR((((vt0.c0))>((vt0.c0))))))OR(((vt0.c1)|(t0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST(((((t0.c0)OR('1931867436')))AND(t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c0)OR('1931867436')))AND(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((((t0.c0)OR('1931867436')))AND(t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c0)OR('1931867436')))AND(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((((t0.c0)OR('1931867436')))AND(t0.c0)) AS NUMERIC));
SELECT ALL * FROM t0, rt0, vt0 WHERE ((((NULL, NULL, NULL)) NOT BETWEEN ((t0.c0, vt0.c1, t0.c0)) AND ((t0.c0, rt0.c2, x''))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((NULL, NULL, NULL)) NOT BETWEEN ((t0.c0, vt0.c1, t0.c0)) AND ((t0.c0, rt0.c2, x''))) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((((NULL, NULL, NULL)) NOT BETWEEN ((t0.c0, vt0.c1, t0.c0)) AND ((t0.c0, rt0.c2, x''))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((NULL, NULL, NULL)) NOT BETWEEN ((t0.c0, vt0.c1, t0.c0)) AND ((t0.c0, rt0.c2, x''))) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((((NULL, NULL, NULL)) NOT BETWEEN ((t0.c0, vt0.c1, t0.c0)) AND ((t0.c0, rt0.c2, x''))) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (((((((rt0.c2)<(rt0.c1)))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(CAST(1963604352 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)<(rt0.c1)))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(CAST(1963604352 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c2)<(rt0.c1)))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(CAST(1963604352 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)<(rt0.c1)))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(CAST(1963604352 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c2)<(rt0.c1)))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(CAST(1963604352 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) COLLATE BINARY WHERE ((((((((((t0.c0 IN (t0.c0, rt0.c1)))AND(rt0.c0)))OR((((((((('r')AND(t0.c0)))OR(0.8416759275884654)))AND(rt0.c1)))AND(rt0.c0)))))AND((+ (t0.c0)))))OR((t0.c0 IN ())))) ORDER BY CASE WHEN ((((t0.c0)OR(rt0.c2)))OR(rt0.c1)) THEN ((t0.c0) IS TRUE) WHEN ((((t0.c0)OR(rt0.c2)))OR(rt0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN NULL THEN CAST(rt0.c2 AS NUMERIC) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c0 IN (t0.c0, rt0.c1)))AND(rt0.c0)))OR((((((((('r')AND(t0.c0)))OR(0.8416759275884654)))AND(rt0.c1)))AND(rt0.c0)))))AND((+ (t0.c0)))))OR((t0.c0 IN ())))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) COLLATE BINARY ORDER BY CASE WHEN ((((t0.c0)OR(rt0.c2)))OR(rt0.c1)) THEN ((t0.c0) IS TRUE) WHEN ((((t0.c0)OR(rt0.c2)))OR(rt0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN NULL THEN CAST(rt0.c2 AS NUMERIC) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) COLLATE BINARY WHERE ((((((((((t0.c0 IN (t0.c0, rt0.c1)))AND(rt0.c0)))OR((((((((('r')AND(t0.c0)))OR(0.8416759275884654)))AND(rt0.c1)))AND(rt0.c0)))))AND((+ (t0.c0)))))OR((t0.c0 IN ())))) ORDER BY CASE WHEN ((((t0.c0)OR(rt0.c2)))OR(rt0.c1)) THEN ((t0.c0) IS TRUE) WHEN ((((t0.c0)OR(rt0.c2)))OR(rt0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN NULL THEN CAST(rt0.c2 AS NUMERIC) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c0 IN (t0.c0, rt0.c1)))AND(rt0.c0)))OR((((((((('r')AND(t0.c0)))OR(0.8416759275884654)))AND(rt0.c1)))AND(rt0.c0)))))AND((+ (t0.c0)))))OR((t0.c0 IN ())))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) COLLATE BINARY ORDER BY CASE WHEN ((((t0.c0)OR(rt0.c2)))OR(rt0.c1)) THEN ((t0.c0) IS TRUE) WHEN ((((t0.c0)OR(rt0.c2)))OR(rt0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN NULL THEN CAST(rt0.c2 AS NUMERIC) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) COLLATE BINARY WHERE ((((((((((t0.c0 IN (t0.c0, rt0.c1)))AND(rt0.c0)))OR((((((((('r')AND(t0.c0)))OR(0.8416759275884654)))AND(rt0.c1)))AND(rt0.c0)))))AND((+ (t0.c0)))))OR((t0.c0 IN ())))) ORDER BY CASE WHEN ((((t0.c0)OR(rt0.c2)))OR(rt0.c1)) THEN ((t0.c0) IS TRUE) WHEN ((((t0.c0)OR(rt0.c2)))OR(rt0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN NULL THEN CAST(rt0.c2 AS NUMERIC) END  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((NULL)>>(rt0.c2)))OR(CAST(rt0.c0 AS INTEGER))))OR((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((NULL)>>(rt0.c2)))OR(CAST(rt0.c0 AS INTEGER))))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((NULL)>>(rt0.c2)))OR(CAST(rt0.c0 AS INTEGER))))OR((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((NULL)>>(rt0.c2)))OR(CAST(rt0.c0 AS INTEGER))))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((NULL)>>(rt0.c2)))OR(CAST(rt0.c0 AS INTEGER))))OR((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (((rt0.c2) IS TRUE)))) ORDER BY ((CAST(rt0.c2 AS INTEGER)) ISNULL)  NULLS LAST, CASE WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN (((vt0.c1, rt0.c0, x'f976'))=((vt0.c0, rt0.c0, rt0.c0))) THEN (((rt0.c1, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, vt0.c0))) WHEN CAST(rt0.c1 AS BLOB) THEN CASE rt0.c1  WHEN vt0.c0 THEN '0.09781991093676035' END END ASC, UNLIKELY(((-6.67355765E8) IS TRUE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c2 AS INTEGER)) ISNULL)  NULLS LAST, CASE WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN (((vt0.c1, rt0.c0, x'f976'))==((vt0.c0, rt0.c0, rt0.c0))) THEN (((rt0.c1, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, vt0.c0))) WHEN CAST(rt0.c1 AS BLOB) THEN CASE rt0.c1  WHEN vt0.c0 THEN '0.09781991093676035' END END ASC, UNLIKELY(((-6.67355765E8) IS TRUE)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (((rt0.c2) IS TRUE)))) ORDER BY ((CAST(rt0.c2 AS INTEGER)) ISNULL)  NULLS LAST, CASE WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN (((vt0.c1, rt0.c0, x'f976'))=((vt0.c0, rt0.c0, rt0.c0))) THEN (((rt0.c1, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, vt0.c0))) WHEN CAST(rt0.c1 AS BLOB) THEN CASE rt0.c1  WHEN vt0.c0 THEN '0.09781991093676035' END END ASC, UNLIKELY(((-6.67355765E8) IS TRUE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c2 AS INTEGER)) ISNULL)  NULLS LAST, CASE WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN (((vt0.c1, rt0.c0, x'f976'))==((vt0.c0, rt0.c0, rt0.c0))) THEN (((rt0.c1, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, vt0.c0))) WHEN CAST(rt0.c1 AS BLOB) THEN CASE rt0.c1  WHEN vt0.c0 THEN '0.09781991093676035' END END ASC, UNLIKELY(((-6.67355765E8) IS TRUE)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (((rt0.c2) IS TRUE)))) ORDER BY ((CAST(rt0.c2 AS INTEGER)) ISNULL)  NULLS LAST, CASE WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN (((vt0.c1, rt0.c0, x'f976'))=((vt0.c0, rt0.c0, rt0.c0))) THEN (((rt0.c1, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, vt0.c0))) WHEN CAST(rt0.c1 AS BLOB) THEN CASE rt0.c1  WHEN vt0.c0 THEN '0.09781991093676035' END END ASC, UNLIKELY(((-6.67355765E8) IS TRUE)) ASC  NULLS LAST;
SELECT * FROM t0, vt0, rt0 WHERE (CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END  WHEN t0.c0 THEN UPPER(rt0.c1) ELSE (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END  WHEN t0.c0 THEN UPPER(rt0.c1) ELSE (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END  WHEN t0.c0 THEN UPPER(rt0.c1) ELSE (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END  WHEN t0.c0 THEN UPPER(rt0.c1) ELSE (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END  WHEN t0.c0 THEN UPPER(rt0.c1) ELSE (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) END);
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY) NOT NULL));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON vt0.c1 WHERE ((~ ((((vt0.c0))>((0xffffffffdfb7ee20))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c0))>((0xffffffffdfb7ee20)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON vt0.c1);
SELECT * FROM t0 FULL OUTER JOIN vt0 ON vt0.c1 WHERE ((~ ((((vt0.c0))>((0xffffffffdfb7ee20))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c0))>((0xffffffffdfb7ee20)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON vt0.c1);
SELECT * FROM t0 FULL OUTER JOIN vt0 ON vt0.c1 WHERE ((~ ((((vt0.c0))>((0xffffffffdfb7ee20))))));
SELECT ALL COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)<((((rt0.c0))>=((rt0.c1))))) WHERE ((((((vt0.c0)OR(t0.c0)))OR(rt0.c1)) IN (((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), 0x9451cd9))) ORDER BY (((((((rt0.c1)) BETWEEN ((t0.c0)) AND ((x''))))AND((0.427449607596188 IN ()))))OR((('181539905')<>(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(t0.c0)))OR(rt0.c1)) IN (((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), 0X9451cd9))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)<((((rt0.c0))>=((rt0.c1))))) ORDER BY (((((((rt0.c1)) BETWEEN ((t0.c0)) AND ((x''))))AND((0.427449607596188 IN ()))))OR((('181539905')<>(rt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)<((((rt0.c0))>=((rt0.c1))))) WHERE ((((((vt0.c0)OR(t0.c0)))OR(rt0.c1)) IN (((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), 0x9451cd9))) ORDER BY (((((((rt0.c1)) BETWEEN ((t0.c0)) AND ((x''))))AND((0.427449607596188 IN ()))))OR((('181539905')<>(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(t0.c0)))OR(rt0.c1)) IN (((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), 0X9451cd9))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)<((((rt0.c0))>=((rt0.c1))))) ORDER BY (((((((rt0.c1)) BETWEEN ((t0.c0)) AND ((x''))))AND((0.427449607596188 IN ()))))OR((('181539905')<>(rt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)<((((rt0.c0))>=((rt0.c1))))) WHERE ((((((vt0.c0)OR(t0.c0)))OR(rt0.c1)) IN (((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), 0x9451cd9))) ORDER BY (((((((rt0.c1)) BETWEEN ((t0.c0)) AND ((x''))))AND((0.427449607596188 IN ()))))OR((('181539905')<>(rt0.c1)))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (CAST(x'' AS TEXT)) ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c0 END  WHEN ((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((vt0.c1) BETWEEN ('-242952456') AND (vt0.c1)) ELSE x'' END, (NOT (CASE WHEN rt0.c0 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c0 END  WHEN ((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((vt0.c1) BETWEEN ('-242952456') AND (vt0.c1)) ELSE x'' END, (NOT (CASE WHEN rt0.c0 THEN rt0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (CAST(x'' AS TEXT)) ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c0 END  WHEN ((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((vt0.c1) BETWEEN ('-242952456') AND (vt0.c1)) ELSE x'' END, (NOT (CASE WHEN rt0.c0 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c0 END  WHEN ((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((vt0.c1) BETWEEN ('-242952456') AND (vt0.c1)) ELSE x'' END, (NOT (CASE WHEN rt0.c0 THEN rt0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (CAST(x'' AS TEXT)) ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c0 END  WHEN ((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((vt0.c1) BETWEEN ('-242952456') AND (vt0.c1)) ELSE x'' END, (NOT (CASE WHEN rt0.c0 THEN rt0.c0 END))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c1)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND((- (vt0.c1))))) ORDER BY '0.10034434602122388' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND((- (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY '0.10034434602122388' DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c1)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND((- (vt0.c1))))) ORDER BY '0.10034434602122388' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND((- (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY '0.10034434602122388' DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c1)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND((- (vt0.c1))))) ORDER BY '0.10034434602122388' DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (CASE WHEN rt0.c0 THEN rt0.c0 END IN ()) RIGHT OUTER JOIN rt0 ON CAST(((((rt0.c0)OR(t0.c0)))OR(vt0.c0)) AS INTEGER) WHERE ((ABS(vt0.c1) IN ())) ORDER BY NULL  NULLS LAST, ((((vt0.c1)+(rt0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1))) AND (((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))OR(t0.c0)))OR(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((ABS(vt0.c1) IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (CASE WHEN rt0.c0 THEN rt0.c0 END IN ()) RIGHT OUTER JOIN rt0 ON CAST(((((rt0.c0)OR(t0.c0)))OR(vt0.c0)) AS INTEGER) ORDER BY NULL  NULLS LAST, ((((vt0.c1)+(rt0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1))) AND (((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))OR(t0.c0)))OR(vt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (CASE WHEN rt0.c0 THEN rt0.c0 END IN ()) RIGHT OUTER JOIN rt0 ON CAST(((((rt0.c0)OR(t0.c0)))OR(vt0.c0)) AS INTEGER) WHERE ((ABS(vt0.c1) IN ())) ORDER BY NULL  NULLS LAST, ((((vt0.c1)+(rt0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1))) AND (((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))OR(t0.c0)))OR(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((ABS(vt0.c1) IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (CASE WHEN rt0.c0 THEN rt0.c0 END IN ()) RIGHT OUTER JOIN rt0 ON CAST(((((rt0.c0)OR(t0.c0)))OR(vt0.c0)) AS INTEGER) ORDER BY NULL  NULLS LAST, ((((vt0.c1)+(rt0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1))) AND (((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))OR(t0.c0)))OR(vt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (CASE WHEN rt0.c0 THEN rt0.c0 END IN ()) RIGHT OUTER JOIN rt0 ON CAST(((((rt0.c0)OR(t0.c0)))OR(vt0.c0)) AS INTEGER) WHERE ((ABS(vt0.c1) IN ())) ORDER BY NULL  NULLS LAST, ((((vt0.c1)+(rt0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1))) AND (((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))OR(t0.c0)))OR(vt0.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (- ((rt0.c1 IN ()))) CROSS JOIN rt0 ON ((rt0.c2 COLLATE NOCASE) IS TRUE) WHERE ((~ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (- ((rt0.c1 IN ()))) CROSS JOIN rt0 ON ((rt0.c2 COLLATE NOCASE) IS TRUE));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (- ((rt0.c1 IN ()))) CROSS JOIN rt0 ON ((rt0.c2 COLLATE NOCASE) IS TRUE) WHERE ((~ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (- ((rt0.c1 IN ()))) CROSS JOIN rt0 ON ((rt0.c2 COLLATE NOCASE) IS TRUE));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (- ((rt0.c1 IN ()))) CROSS JOIN rt0 ON ((rt0.c2 COLLATE NOCASE) IS TRUE) WHERE ((~ (vt0.c0)));
SELECT COUNT(*) FROM rt0 INDEXED BY i10, vt0 INDEXED BY i10 WHERE (UNICODE(CASE WHEN rt0.c2 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((UNICODE(CASE WHEN rt0.c2 THEN rt0.c1 END)) IS TRUE)  as count FROM rt0 INDEXED BY i10, vt0 INDEXED BY i10);
SELECT COUNT(*) FROM rt0 INDEXED BY i10, vt0 INDEXED BY i10 WHERE (UNICODE(CASE WHEN rt0.c2 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((UNICODE(CASE WHEN rt0.c2 THEN rt0.c1 END)) IS TRUE)  as count FROM rt0 INDEXED BY i10, vt0 INDEXED BY i10);
SELECT * FROM vt0, rt0 WHERE (((((((((rt0.c0)OR(x'fbe9')))OR(3.78372631E8)))AND(((((((((vt0.c1)OR(rt0.c1)))OR(vt0.c0)))OR(x'4eda')))OR(-6.9881517E8)))))AND((~ (rt0.c1))))) ORDER BY CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((rt0.c1)AND(vt0.c0)))AND('1239636327')) ELSE vt0.c0 END;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR(x'fbe9')))OR(3.78372631E8)))AND(((((((((vt0.c1)OR(rt0.c1)))OR(vt0.c0)))OR(x'4eda')))OR(-6.9881517E8)))))AND((~ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((rt0.c1)AND(vt0.c0)))AND('1239636327')) ELSE vt0.c0 END);
SELECT * FROM vt0, rt0 WHERE (((((((((rt0.c0)OR(x'fbe9')))OR(3.78372631E8)))AND(((((((((vt0.c1)OR(rt0.c1)))OR(vt0.c0)))OR(x'4eda')))OR(-6.9881517E8)))))AND((~ (rt0.c1))))) ORDER BY CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((rt0.c1)AND(vt0.c0)))AND('1239636327')) ELSE vt0.c0 END;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR(x'fbe9')))OR(3.78372631E8)))AND(((((((((vt0.c1)OR(rt0.c1)))OR(vt0.c0)))OR(x'4eda')))OR(-6.9881517E8)))))AND((~ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((rt0.c1)AND(vt0.c0)))AND('1239636327')) ELSE vt0.c0 END);
SELECT * FROM vt0, rt0 WHERE (((((((((rt0.c0)OR(x'fbe9')))OR(3.78372631E8)))AND(((((((((vt0.c1)OR(rt0.c1)))OR(vt0.c0)))OR(x'4eda')))OR(-6.9881517E8)))))AND((~ (rt0.c1))))) ORDER BY CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((rt0.c1)AND(vt0.c0)))AND('1239636327')) ELSE vt0.c0 END;
SELECT ALL * FROM t0 WHERE (CASE 0.928533730650022  WHEN (t0.c0 IN ()) THEN ((((((((((((t0.c0)AND(NULL)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE 0.928533730650022  WHEN (t0.c0 IN ()) THEN ((((((((((((t0.c0)AND(NULL)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE 0.928533730650022  WHEN (t0.c0 IN ()) THEN ((((((((((((t0.c0)AND(NULL)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE 0.928533730650022  WHEN (t0.c0 IN ()) THEN ((((((((((((t0.c0)AND(NULL)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE 0.928533730650022  WHEN (t0.c0 IN ()) THEN ((((((((((((t0.c0)AND(NULL)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END);
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR('-1348085370')))AND(rt0.c2)))AND(rt0.c2)))AND(((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))) WHERE (((vt0.c0) NOT BETWEEN (json_object(rt0.c1, NULL)) AND (((((vt0.c1)OR(rt0.c1)))AND(rt0.c1))))) ORDER BY (((((vt0.c0, rt0.c0, rt0.c1))<((rt0.c0, rt0.c0, t0.c0)))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (json_object(rt0.c1, NULL)) AND (((((vt0.c1)OR(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR('-1348085370')))AND(rt0.c2)))AND(rt0.c2)))AND(((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))) ORDER BY (((((vt0.c0, rt0.c0, rt0.c1))<((rt0.c0, rt0.c0, t0.c0)))) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR('-1348085370')))AND(rt0.c2)))AND(rt0.c2)))AND(((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))) WHERE (((vt0.c0) NOT BETWEEN (json_object(rt0.c1, NULL)) AND (((((vt0.c1)OR(rt0.c1)))AND(rt0.c1))))) ORDER BY (((((vt0.c0, rt0.c0, rt0.c1))<((rt0.c0, rt0.c0, t0.c0)))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (json_object(rt0.c1, NULL)) AND (((((vt0.c1)OR(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR('-1348085370')))AND(rt0.c2)))AND(rt0.c2)))AND(((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))) ORDER BY (((((vt0.c0, rt0.c0, rt0.c1))<((rt0.c0, rt0.c0, t0.c0)))) NOT NULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (-833112762) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'')));
SELECT SUM(count) FROM (SELECT ALL ((-833112762) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (-833112762) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'')));
SELECT SUM(count) FROM (SELECT ALL ((-833112762) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (-833112762) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'')));
SELECT ALL * FROM t0 WHERE (IFNULL(DISTINCT ((t0.c0) ISNULL), ((t0.c0)LIKE(x'')))) ORDER BY ((t0.c0 COLLATE NOCASE)>(t0.c0 COLLATE BINARY))  NULLS FIRST, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((t0.c0) ISNULL), ((t0.c0)LIKE(x'')))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE NOCASE)>(t0.c0 COLLATE BINARY))  NULLS FIRST, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) ASC);
SELECT ALL * FROM t0 WHERE (IFNULL(DISTINCT ((t0.c0) ISNULL), ((t0.c0)LIKE(x'')))) ORDER BY ((t0.c0 COLLATE NOCASE)>(t0.c0 COLLATE BINARY))  NULLS FIRST, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((t0.c0) ISNULL), ((t0.c0)LIKE(x'')))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE NOCASE)>(t0.c0 COLLATE BINARY))  NULLS FIRST, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) ASC);
SELECT ALL * FROM t0 WHERE (IFNULL(DISTINCT ((t0.c0) ISNULL), ((t0.c0)LIKE(x'')))) ORDER BY ((t0.c0 COLLATE NOCASE)>(t0.c0 COLLATE BINARY))  NULLS FIRST, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS INTEGER));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ())) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (TRIM(t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (TRIM(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ())) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (TRIM(t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (TRIM(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ())) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (TRIM(t0.c0, t0.c0))));
SELECT ALL * FROM rt0, t0, vt0 WHERE ((('J3')-((NOT (vt0.c1))))) ORDER BY ((((vt0.c1 IN ())))<((rt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('J3')-((NOT (vt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((vt0.c1 IN ())))<((rt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((('J3')-((NOT (vt0.c1))))) ORDER BY ((((vt0.c1 IN ())))<((rt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('J3')-((NOT (vt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((vt0.c1 IN ())))<((rt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((('J3')-((NOT (vt0.c1))))) ORDER BY ((((vt0.c1 IN ())))<((rt0.c0))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0) ORDER BY vt0.c1, 0.8519665886758198 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c1, 0.8519665886758198 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0) ORDER BY vt0.c1, 0.8519665886758198 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c1, 0.8519665886758198 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0) ORDER BY vt0.c1, 0.8519665886758198 DESC  NULLS LAST;
SELECT * FROM vt0, rt0, t0 WHERE (((((rt0.c1)AND(rt0.c1)))>((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(rt0.c1)))>((+ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (((((rt0.c1)AND(rt0.c1)))>((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(rt0.c1)))>((+ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (((((rt0.c1)AND(rt0.c1)))>((+ (rt0.c1)))));
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY ((vt0.c1 COLLATE NOCASE) BETWEEN (vt0.c1 COLLATE BINARY) AND ((~ (vt0.c1)))) ASC, (((((- (vt0.c0)))AND(((vt0.c0)||(0.44607796073537453)))))AND(0.37372021086615714));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE NOCASE) BETWEEN (vt0.c1 COLLATE BINARY) AND ((~ (vt0.c1)))) ASC, (((((- (vt0.c0)))AND(((vt0.c0)||(0.44607796073537453)))))AND(0.37372021086615714)));
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY ((vt0.c1 COLLATE NOCASE) BETWEEN (vt0.c1 COLLATE BINARY) AND ((~ (vt0.c1)))) ASC, (((((- (vt0.c0)))AND(((vt0.c0)||(0.44607796073537453)))))AND(0.37372021086615714));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE NOCASE) BETWEEN (vt0.c1 COLLATE BINARY) AND ((~ (vt0.c1)))) ASC, (((((- (vt0.c0)))AND(((vt0.c0)||(0.44607796073537453)))))AND(0.37372021086615714)));
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY ((vt0.c1 COLLATE NOCASE) BETWEEN (vt0.c1 COLLATE BINARY) AND ((~ (vt0.c1)))) ASC, (((((- (vt0.c0)))AND(((vt0.c0)||(0.44607796073537453)))))AND(0.37372021086615714));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS REAL));
SELECT * FROM rt0 WHERE (((rt0.c2) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2) NOTNULL) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, t0 WHERE ((- ((- (vt0.c1))))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))<(t0.c0)) DESC;
SELECT SUM(count) FROM (SELECT (((- ((- (vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))<(t0.c0)) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((- ((- (vt0.c1))))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))<(t0.c0)) DESC;
SELECT SUM(count) FROM (SELECT (((- ((- (vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))<(t0.c0)) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((- ((- (vt0.c1))))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))<(t0.c0)) DESC;
SELECT * FROM t0 WHERE ((((t0.c0 IN (t0.c0))) BETWEEN (CAST(t0.c0 AS BLOB)) AND (t0.c0))) ORDER BY (~ (CAST(t0.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (t0.c0))) BETWEEN (CAST(t0.c0 AS BLOB)) AND (t0.c0))) IS TRUE)  as count FROM t0 ORDER BY (~ (CAST(t0.c0 AS BLOB)))  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c0 IN (t0.c0))) BETWEEN (CAST(t0.c0 AS BLOB)) AND (t0.c0))) ORDER BY (~ (CAST(t0.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (t0.c0))) BETWEEN (CAST(t0.c0 AS BLOB)) AND (t0.c0))) IS TRUE)  as count FROM t0 ORDER BY (~ (CAST(t0.c0 AS BLOB)))  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c0 IN (t0.c0))) BETWEEN (CAST(t0.c0 AS BLOB)) AND (t0.c0))) ORDER BY (~ (CAST(t0.c0 AS BLOB)))  NULLS LAST;
SELECT * FROM vt0, t0 WHERE ((- ((- (vt0.c0))))) ORDER BY QUOTE(((vt0.c1) NOTNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((- (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY QUOTE(((vt0.c1) NOTNULL))  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((- ((- (vt0.c0))))) ORDER BY QUOTE(((vt0.c1) NOTNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((- (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY QUOTE(((vt0.c1) NOTNULL))  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((- ((- (vt0.c0))))) ORDER BY QUOTE(((vt0.c1) NOTNULL))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT * FROM rt0, vt0, t0 WHERE (rt0.c2) ORDER BY ((((vt0.c0)LIKE(rt0.c2)))==(CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((vt0.c0)LIKE(rt0.c2)))=(CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)) DESC  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE (rt0.c2) ORDER BY ((((vt0.c0)LIKE(rt0.c2)))==(CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((vt0.c0)LIKE(rt0.c2)))=(CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)) DESC  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE (rt0.c2) ORDER BY ((((vt0.c0)LIKE(rt0.c2)))==(CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (((((t0.c0) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (((((t0.c0) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (((((t0.c0) NOTNULL)) IS TRUE));
SELECT ALL COUNT(*) FROM t0 INDEXED BY i10, rt0, vt0 WHERE (CASE WHEN ((vt0.c1)<<(vt0.c1)) THEN CASE t0.c0  WHEN rt0.c0 THEN t0.c0 ELSE t0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)<<(vt0.c1)) THEN CASE t0.c0  WHEN rt0.c0 THEN t0.c0 ELSE t0.c0 END END) IS TRUE)  as count FROM t0 INDEXED BY i10, rt0, vt0);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i10, rt0, vt0 WHERE (CASE WHEN ((vt0.c1)<<(vt0.c1)) THEN CASE t0.c0  WHEN rt0.c0 THEN t0.c0 ELSE t0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)<<(vt0.c1)) THEN CASE t0.c0  WHEN rt0.c0 THEN t0.c0 ELSE t0.c0 END END) IS TRUE)  as count FROM t0 INDEXED BY i10, rt0, vt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN (~ (rt0.c0)) THEN ((vt0.c1) NOTNULL) ELSE ((vt0.c0)/(rt0.c1)) END) ORDER BY SQLITE_VERSION() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (rt0.c0)) THEN ((vt0.c1) NOTNULL) ELSE ((vt0.c0)/(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY SQLITE_VERSION() ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN (~ (rt0.c0)) THEN ((vt0.c1) NOTNULL) ELSE ((vt0.c0)/(rt0.c1)) END) ORDER BY SQLITE_VERSION() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (rt0.c0)) THEN ((vt0.c1) NOTNULL) ELSE ((vt0.c0)/(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY SQLITE_VERSION() ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN (~ (rt0.c0)) THEN ((vt0.c1) NOTNULL) ELSE ((vt0.c0)/(rt0.c1)) END) ORDER BY SQLITE_VERSION() ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CAST((((rt0.c2, rt0.c2, vt0.c1))>=((vt0.c0, rt0.c1, vt0.c1))) AS REAL) FULL OUTER JOIN vt0 ON CAST(t0.c0 AS NUMERIC) COLLATE BINARY WHERE (((((((vt0.c1) IS TRUE))AND(NULL)))AND(((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) IS TRUE))AND(NULL)))AND(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON CAST((((rt0.c2, rt0.c2, vt0.c1))>=((vt0.c0, rt0.c1, vt0.c1))) AS REAL) FULL OUTER JOIN vt0 ON CAST(t0.c0 AS NUMERIC) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CAST((((rt0.c2, rt0.c2, vt0.c1))>=((vt0.c0, rt0.c1, vt0.c1))) AS REAL) FULL OUTER JOIN vt0 ON CAST(t0.c0 AS NUMERIC) COLLATE BINARY WHERE (((((((vt0.c1) IS TRUE))AND(NULL)))AND(((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) IS TRUE))AND(NULL)))AND(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON CAST((((rt0.c2, rt0.c2, vt0.c1))>=((vt0.c0, rt0.c1, vt0.c1))) AS REAL) FULL OUTER JOIN vt0 ON CAST(t0.c0 AS NUMERIC) COLLATE BINARY);
SELECT * FROM t0 WHERE ((~ (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c0))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((~ (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c0))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((~ (t0.c0)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((~ (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((~ (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((~ (vt0.c1)) IN ()));
SELECT * FROM t0 WHERE (CAST(TRIM(t0.c0, t0.c0) AS BLOB)) ORDER BY (t0.c0 COLLATE BINARY IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(t0.c0, t0.c0) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 COLLATE BINARY IN ()) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(TRIM(t0.c0, t0.c0) AS BLOB)) ORDER BY (t0.c0 COLLATE BINARY IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(t0.c0, t0.c0) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 COLLATE BINARY IN ()) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(TRIM(t0.c0, t0.c0) AS BLOB)) ORDER BY (t0.c0 COLLATE BINARY IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1))>=((vt0.c0))))IS NOT(CAST(vt0.c1 AS INTEGER)))) ORDER BY ((((vt0.c1) NOT NULL))||(vt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>=((vt0.c0))))IS NOT(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT NULL))||(vt0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1))>=((vt0.c0))))IS NOT(CAST(vt0.c1 AS INTEGER)))) ORDER BY ((((vt0.c1) NOT NULL))||(vt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>=((vt0.c0))))IS NOT(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT NULL))||(vt0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1))>=((vt0.c0))))IS NOT(CAST(vt0.c1 AS INTEGER)))) ORDER BY ((((vt0.c1) NOT NULL))||(vt0.c1 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (NULL);
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) BETWEEN ((rt0.c1 IN ())) AND ((((0.41163741930236064, vt0.c1, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c0, t0.c0)) AND ((rt0.c0, t0.c0, rt0.c0))))) WHERE (x'2848') ORDER BY (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c0))))AND(rt0.c0 COLLATE BINARY)))OR('2069036527')) DESC  NULLS FIRST, (('O{q}?!o')>>(CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'2848') IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) BETWEEN ((rt0.c1 IN ())) AND ((((0.41163741930236064, vt0.c1, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c0, t0.c0)) AND ((rt0.c0, t0.c0, rt0.c0))))) ORDER BY (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c0))))AND(rt0.c0 COLLATE BINARY)))OR('2069036527')) DESC  NULLS FIRST, (('O{q}?!o')>>(CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END)) DESC);
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) BETWEEN ((rt0.c1 IN ())) AND ((((0.41163741930236064, vt0.c1, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c0, t0.c0)) AND ((rt0.c0, t0.c0, rt0.c0))))) WHERE (x'2848') ORDER BY (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c0))))AND(rt0.c0 COLLATE BINARY)))OR('2069036527')) DESC  NULLS FIRST, (('O{q}?!o')>>(CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'2848') IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) BETWEEN ((rt0.c1 IN ())) AND ((((0.41163741930236064, vt0.c1, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c0, t0.c0)) AND ((rt0.c0, t0.c0, rt0.c0))))) ORDER BY (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c0))))AND(rt0.c0 COLLATE BINARY)))OR('2069036527')) DESC  NULLS FIRST, (('O{q}?!o')>>(CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END)) DESC);
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) BETWEEN ((rt0.c1 IN ())) AND ((((0.41163741930236064, vt0.c1, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c0, t0.c0)) AND ((rt0.c0, t0.c0, rt0.c0))))) WHERE (x'2848') ORDER BY (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c0))))AND(rt0.c0 COLLATE BINARY)))OR('2069036527')) DESC  NULLS FIRST, (('O{q}?!o')>>(CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END)) DESC;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON HEX(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) WHERE (LTRIM(CASE WHEN vt0.c0 THEN 0.916532282641077 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 END, (- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(CASE WHEN vt0.c0 THEN 0.916532282641077 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 END, (- (vt0.c0)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON HEX(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON HEX(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) WHERE (LTRIM(CASE WHEN vt0.c0 THEN 0.916532282641077 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 END, (- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(CASE WHEN vt0.c0 THEN 0.916532282641077 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 END, (- (vt0.c0)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON HEX(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON HEX(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) WHERE (LTRIM(CASE WHEN vt0.c0 THEN 0.916532282641077 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 END, (- (vt0.c0))));
SELECT ALL * FROM vt0 WHERE (COALESCE(vt0.c0, (+ (x'068e')))) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(vt0.c0, (+ (x'068e')))) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (COALESCE(vt0.c0, (+ (x'068e')))) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(vt0.c0, (+ (x'068e')))) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (COALESCE(vt0.c0, (+ (x'068e')))) ORDER BY x'' DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c1))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c1))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c1))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c1))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c1))) IS TRUE)  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (CAST(LIKELY(t0.c0) AS TEXT)) ORDER BY vt0.c0 COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(t0.c0) AS TEXT)) IS TRUE)  as count FROM t0, vt0 NOT INDEXED ORDER BY vt0.c0 COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (CAST(LIKELY(t0.c0) AS TEXT)) ORDER BY vt0.c0 COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(t0.c0) AS TEXT)) IS TRUE)  as count FROM t0, vt0 NOT INDEXED ORDER BY vt0.c0 COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (CAST(LIKELY(t0.c0) AS TEXT)) ORDER BY vt0.c0 COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 COLLATE NOCASE, (t0.c0 IN ()), t0.c0))!=((((((t0.c0)OR(x'')))OR(t0.c0)), ((t0.c0)LIKE(t0.c0)), (t0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 COLLATE NOCASE, (t0.c0 IN ()), t0.c0))<>((((((t0.c0)OR(x'')))OR(t0.c0)), ((t0.c0)LIKE(t0.c0)), (t0.c0 IN ()))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 COLLATE NOCASE, (t0.c0 IN ()), t0.c0))!=((((((t0.c0)OR(x'')))OR(t0.c0)), ((t0.c0)LIKE(t0.c0)), (t0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 COLLATE NOCASE, (t0.c0 IN ()), t0.c0))<>((((((t0.c0)OR(x'')))OR(t0.c0)), ((t0.c0)LIKE(t0.c0)), (t0.c0 IN ()))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 COLLATE NOCASE, (t0.c0 IN ()), t0.c0))!=((((((t0.c0)OR(x'')))OR(t0.c0)), ((t0.c0)LIKE(t0.c0)), (t0.c0 IN ())))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(LOWER(DISTINCT rt0.c2) AS REAL)) ORDER BY (rt0.c0 IN ()) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(DISTINCT rt0.c2) AS REAL)) IS TRUE)  as count FROM rt0, t0 ORDER BY (rt0.c0 IN ()) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(LOWER(DISTINCT rt0.c2) AS REAL)) ORDER BY (rt0.c0 IN ()) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(DISTINCT rt0.c2) AS REAL)) IS TRUE)  as count FROM rt0, t0 ORDER BY (rt0.c0 IN ()) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(LOWER(DISTINCT rt0.c2) AS REAL)) ORDER BY (rt0.c0 IN ()) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((((0.7742424652750015) IS FALSE), rt0.c1 COLLATE RTRIM, ((rt0.c2)OR(rt0.c2)), NULL COLLATE RTRIM, TRIM(DISTINCT rt0.c1, rt0.c1))) AND (((~ (t0.c0)), 'zOT基-z!)v', ((vt0.c0)==(-644075832)), (- (t0.c0)), (((rt0.c0, vt0.c0, rt0.c1))>((rt0.c0, rt0.c0, rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((((0.7742424652750015) IS FALSE), rt0.c1 COLLATE RTRIM, ((rt0.c2)OR(rt0.c2)), NULL COLLATE RTRIM, TRIM(DISTINCT rt0.c1, rt0.c1))) AND (((~ (t0.c0)), 'zOT基-z!)v', ((vt0.c0)=(-644075832)), (- (t0.c0)), (((rt0.c0, vt0.c0, rt0.c1))>((rt0.c0, rt0.c0, rt0.c1))))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((((0.7742424652750015) IS FALSE), rt0.c1 COLLATE RTRIM, ((rt0.c2)OR(rt0.c2)), NULL COLLATE RTRIM, TRIM(DISTINCT rt0.c1, rt0.c1))) AND (((~ (t0.c0)), 'zOT基-z!)v', ((vt0.c0)==(-644075832)), (- (t0.c0)), (((rt0.c0, vt0.c0, rt0.c1))>((rt0.c0, rt0.c0, rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((((0.7742424652750015) IS FALSE), rt0.c1 COLLATE RTRIM, ((rt0.c2)OR(rt0.c2)), NULL COLLATE RTRIM, TRIM(DISTINCT rt0.c1, rt0.c1))) AND (((~ (t0.c0)), 'zOT基-z!)v', ((vt0.c0)=(-644075832)), (- (t0.c0)), (((rt0.c0, vt0.c0, rt0.c1))>((rt0.c0, rt0.c0, rt0.c1))))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((((0.7742424652750015) IS FALSE), rt0.c1 COLLATE RTRIM, ((rt0.c2)OR(rt0.c2)), NULL COLLATE RTRIM, TRIM(DISTINCT rt0.c1, rt0.c1))) AND (((~ (t0.c0)), 'zOT基-z!)v', ((vt0.c0)==(-644075832)), (- (t0.c0)), (((rt0.c0, vt0.c0, rt0.c1))>((rt0.c0, rt0.c0, rt0.c1)))))));
SELECT ALL * FROM t0, rt0, vt0 WHERE (rt0.c0) ORDER BY (((CAST(vt0.c1 AS INTEGER), IFNULL(0.16445771574071366, vt0.c0), json_array_length(t0.c0)))>=(((- (rt0.c1)), (- (rt0.c2)), vt0.c1 COLLATE RTRIM))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((CAST(vt0.c1 AS INTEGER), IFNULL(0.16445771574071366, vt0.c0), json_array_length(t0.c0)))>=(((- (rt0.c1)), (- (rt0.c2)), vt0.c1 COLLATE RTRIM))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt0 WHERE (rt0.c0) ORDER BY (((CAST(vt0.c1 AS INTEGER), IFNULL(0.16445771574071366, vt0.c0), json_array_length(t0.c0)))>=(((- (rt0.c1)), (- (rt0.c2)), vt0.c1 COLLATE RTRIM))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((CAST(vt0.c1 AS INTEGER), IFNULL(0.16445771574071366, vt0.c0), json_array_length(t0.c0)))>=(((- (rt0.c1)), (- (rt0.c2)), vt0.c1 COLLATE RTRIM))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt0 WHERE (rt0.c0) ORDER BY (((CAST(vt0.c1 AS INTEGER), IFNULL(0.16445771574071366, vt0.c0), json_array_length(t0.c0)))>=(((- (rt0.c1)), (- (rt0.c2)), vt0.c1 COLLATE RTRIM))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (6.9868878E7);
SELECT SUM(count) FROM (SELECT ((6.9868878E7) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (6.9868878E7);
SELECT SUM(count) FROM (SELECT ((6.9868878E7) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (6.9868878E7);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((0x39e44927)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((('378372631')LIKE(rt0.c1)))))) ORDER BY CASE WHEN CASE '69868878'  WHEN 0Xffffffffbdb00009 THEN rt0.c0 ELSE rt0.c2 END THEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) END;
SELECT SUM(count) FROM (SELECT (((((0X39e44927)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((('378372631')LIKE(rt0.c1)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN CASE '69868878'  WHEN 0Xffffffffbdb00009 THEN rt0.c0 ELSE rt0.c2 END THEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) END);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((0x39e44927)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((('378372631')LIKE(rt0.c1)))))) ORDER BY CASE WHEN CASE '69868878'  WHEN 0Xffffffffbdb00009 THEN rt0.c0 ELSE rt0.c2 END THEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) END;
SELECT SUM(count) FROM (SELECT (((((0X39e44927)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((('378372631')LIKE(rt0.c1)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN CASE '69868878'  WHEN 0Xffffffffbdb00009 THEN rt0.c0 ELSE rt0.c2 END THEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) END);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((0x39e44927)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((('378372631')LIKE(rt0.c1)))))) ORDER BY CASE WHEN CASE '69868878'  WHEN 0Xffffffffbdb00009 THEN rt0.c0 ELSE rt0.c2 END THEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) END;
SELECT COUNT(*) FROM t0, vt0 WHERE (DATE(IFNULL(t0.c0, vt0.c0), t0.c0, vt0.c0));
SELECT SUM(count) FROM (SELECT ((DATE(IFNULL(t0.c0, vt0.c0), t0.c0, vt0.c0)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (DATE(IFNULL(t0.c0, vt0.c0), t0.c0, vt0.c0));
SELECT SUM(count) FROM (SELECT ((DATE(IFNULL(t0.c0, vt0.c0), t0.c0, vt0.c0)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (DATE(IFNULL(t0.c0, vt0.c0), t0.c0, vt0.c0));
SELECT * FROM rt0 INDEXED BY i10 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))) ORDER BY ((((rt0.c1) NOT NULL)) IS TRUE) ASC  NULLS LAST, CAST(0Xffffffffafa5d986 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))) IS TRUE)  as count FROM rt0 INDEXED BY i10 ORDER BY ((((rt0.c1) NOT NULL)) IS TRUE) ASC  NULLS LAST, CAST(0xffffffffafa5d986 AS NUMERIC) ASC);
SELECT * FROM rt0 INDEXED BY i10 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))) ORDER BY ((((rt0.c1) NOT NULL)) IS TRUE) ASC  NULLS LAST, CAST(0Xffffffffafa5d986 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))) IS TRUE)  as count FROM rt0 INDEXED BY i10 ORDER BY ((((rt0.c1) NOT NULL)) IS TRUE) ASC  NULLS LAST, CAST(0xffffffffafa5d986 AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (LIKE(((rt0.c1)GLOB(vt0.c0)), ((vt0.c1) BETWEEN (rt0.c1) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKE(((rt0.c1)GLOB(vt0.c0)), ((vt0.c1) BETWEEN (rt0.c1) AND (t0.c0)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (LIKE(((rt0.c1)GLOB(vt0.c0)), ((vt0.c1) BETWEEN (rt0.c1) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKE(((rt0.c1)GLOB(vt0.c0)), ((vt0.c1) BETWEEN (rt0.c1) AND (t0.c0)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (LIKE(((rt0.c1)GLOB(vt0.c0)), ((vt0.c1) BETWEEN (rt0.c1) AND (t0.c0))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((((t0.c0)IS NOT(vt0.c0)))) AND ((((vt0.c0)IS(vt0.c0))))) FULL OUTER JOIN rt0 ON ((t0.c0) BETWEEN ('1931867436') AND (vt0.c1)) COLLATE NOCASE WHERE (CASE ((((((((rt0.c2)OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c0))  WHEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) THEN vt0.c1 COLLATE BINARY ELSE ((((((((vt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(vt0.c1)))OR(rt0.c0)) END) ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c0 END) NOT NULL) DESC  NULLS LAST, CASE WHEN rt0.c0 THEN rt0.c1 WHEN (NULL IN ()) THEN ((vt0.c0)-(t0.c0)) WHEN (((rt0.c2))>((rt0.c2))) THEN CASE rt0.c2  WHEN t0.c0 THEN rt0.c0 END END  NULLS LAST, ((((rt0.c0 IN ()), json_array(t0.c0, rt0.c2), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))<=((((-342194024) BETWEEN (t0.c0) AND (NULL)), ((rt0.c0) NOT NULL), (~ (x'')))));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((rt0.c2)OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c0))  WHEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) THEN vt0.c1 COLLATE BINARY ELSE ((((((((vt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(vt0.c1)))OR(rt0.c0)) END) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((((t0.c0)IS NOT(vt0.c0)))) AND ((((vt0.c0)IS(vt0.c0))))) FULL OUTER JOIN rt0 ON ((t0.c0) BETWEEN ('1931867436') AND (vt0.c1)) COLLATE NOCASE ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c0 END) NOT NULL) DESC  NULLS LAST, CASE WHEN rt0.c0 THEN rt0.c1 WHEN (NULL IN ()) THEN ((vt0.c0)-(t0.c0)) WHEN (((rt0.c2))>((rt0.c2))) THEN CASE rt0.c2  WHEN t0.c0 THEN rt0.c0 END END  NULLS LAST, ((((rt0.c0 IN ()), json_array(t0.c0, rt0.c2), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))<=((((-342194024) BETWEEN (t0.c0) AND (NULL)), ((rt0.c0) NOT NULL), (~ (x''))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((((t0.c0)IS NOT(vt0.c0)))) AND ((((vt0.c0)IS(vt0.c0))))) FULL OUTER JOIN rt0 ON ((t0.c0) BETWEEN ('1931867436') AND (vt0.c1)) COLLATE NOCASE WHERE (CASE ((((((((rt0.c2)OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c0))  WHEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) THEN vt0.c1 COLLATE BINARY ELSE ((((((((vt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(vt0.c1)))OR(rt0.c0)) END) ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c0 END) NOT NULL) DESC  NULLS LAST, CASE WHEN rt0.c0 THEN rt0.c1 WHEN (NULL IN ()) THEN ((vt0.c0)-(t0.c0)) WHEN (((rt0.c2))>((rt0.c2))) THEN CASE rt0.c2  WHEN t0.c0 THEN rt0.c0 END END  NULLS LAST, ((((rt0.c0 IN ()), json_array(t0.c0, rt0.c2), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))<=((((-342194024) BETWEEN (t0.c0) AND (NULL)), ((rt0.c0) NOT NULL), (~ (x'')))));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((rt0.c2)OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c0))  WHEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) THEN vt0.c1 COLLATE BINARY ELSE ((((((((vt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(vt0.c1)))OR(rt0.c0)) END) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((((t0.c0)IS NOT(vt0.c0)))) AND ((((vt0.c0)IS(vt0.c0))))) FULL OUTER JOIN rt0 ON ((t0.c0) BETWEEN ('1931867436') AND (vt0.c1)) COLLATE NOCASE ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c0 END) NOT NULL) DESC  NULLS LAST, CASE WHEN rt0.c0 THEN rt0.c1 WHEN (NULL IN ()) THEN ((vt0.c0)-(t0.c0)) WHEN (((rt0.c2))>((rt0.c2))) THEN CASE rt0.c2  WHEN t0.c0 THEN rt0.c0 END END  NULLS LAST, ((((rt0.c0 IN ()), json_array(t0.c0, rt0.c2), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))<=((((-342194024) BETWEEN (t0.c0) AND (NULL)), ((rt0.c0) NOT NULL), (~ (x''))))));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON ((rt0.c2)=((- (rt0.c2)))) WHERE ((- (CAST('1482379244' AS NUMERIC)))) ORDER BY (- (((rt0.c1) BETWEEN (NULL) AND (rt0.c1)))) ASC, CHAR(CASE t0.c0  WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END, (- (rt0.c0)), CASE 0.37372021086615714  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CAST('1482379244' AS NUMERIC)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((rt0.c2)==((- (rt0.c2)))) ORDER BY (- (((rt0.c1) BETWEEN (NULL) AND (rt0.c1)))) ASC, CHAR(CASE t0.c0  WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END, (- (rt0.c0)), CASE 0.37372021086615714  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END)  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON ((rt0.c2)=((- (rt0.c2)))) WHERE ((- (CAST('1482379244' AS NUMERIC)))) ORDER BY (- (((rt0.c1) BETWEEN (NULL) AND (rt0.c1)))) ASC, CHAR(CASE t0.c0  WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END, (- (rt0.c0)), CASE 0.37372021086615714  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CAST('1482379244' AS NUMERIC)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((rt0.c2)==((- (rt0.c2)))) ORDER BY (- (((rt0.c1) BETWEEN (NULL) AND (rt0.c1)))) ASC, CHAR(CASE t0.c0  WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END, (- (rt0.c0)), CASE 0.37372021086615714  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END)  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON ((rt0.c2)=((- (rt0.c2)))) WHERE ((- (CAST('1482379244' AS NUMERIC)))) ORDER BY (- (((rt0.c1) BETWEEN (NULL) AND (rt0.c1)))) ASC, CHAR(CASE t0.c0  WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END, (- (rt0.c0)), CASE 0.37372021086615714  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END)  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (((TIME(vt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((x'0cca')))) AND (vt0.c0))) ORDER BY ((vt0.c1)<=(vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TIME(vt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((x'0cca')))) AND (vt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c1)<=(vt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((TIME(vt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((x'0cca')))) AND (vt0.c0))) ORDER BY ((vt0.c1)<=(vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TIME(vt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((x'0cca')))) AND (vt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c1)<=(vt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((TIME(vt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((x'0cca')))) AND (vt0.c0))) ORDER BY ((vt0.c1)<=(vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE (0xffffffffed357382);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffed357382) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (0xffffffffed357382);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffed357382) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (0xffffffffed357382);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)IS(vt0.c1)) IN ()) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)IS(vt0.c1)) IN ()));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)IS(vt0.c1)) IN ()) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)IS(vt0.c1)) IN ()));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)IS(vt0.c1)) IN ()) WHERE (vt0.c0);
SELECT * FROM t0, vt0 WHERE (((((((t0.c0)AND(t0.c0)))OR(vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c0)))OR(vt0.c1))) ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((t0.c0)AND(t0.c0)))OR(vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c0)))OR(vt0.c1))) ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((t0.c0)AND(t0.c0)))OR(vt0.c1))) ISNULL));
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c0)|(t0.c0)) COLLATE NOCASE) ORDER BY CAST(TIME(rt0.c0, rt0.c1, t0.c0) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)|(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(TIME(rt0.c0, rt0.c1, t0.c0) AS TEXT));
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c0)|(t0.c0)) COLLATE NOCASE) ORDER BY CAST(TIME(rt0.c0, rt0.c1, t0.c0) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)|(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(TIME(rt0.c0, rt0.c1, t0.c0) AS TEXT));
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c0)|(t0.c0)) COLLATE NOCASE) ORDER BY CAST(TIME(rt0.c0, rt0.c1, t0.c0) AS TEXT);
SELECT COUNT(*) FROM t0 WHERE ((((('톑9⟽W+') NOT BETWEEN (t0.c0) AND (t0.c0)))/((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((('톑9⟽W+') NOT BETWEEN (t0.c0) AND (t0.c0)))/((t0.c0 IN ())))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((('톑9⟽W+') NOT BETWEEN (t0.c0) AND (t0.c0)))/((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((('톑9⟽W+') NOT BETWEEN (t0.c0) AND (t0.c0)))/((t0.c0 IN ())))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((('톑9⟽W+') NOT BETWEEN (t0.c0) AND (t0.c0)))/((t0.c0 IN ()))));
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE ((NOT (rt0.c2)) COLLATE RTRIM) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE ((NOT (rt0.c2)) COLLATE RTRIM) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE ((NOT (rt0.c2)) COLLATE RTRIM) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((1249925918)*(vt0.c1))) BETWEEN (((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))) AND (1919936337))) ORDER BY ((((vt0.c1)AND(vt0.c1))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((1249925918)*(vt0.c1))) BETWEEN (((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))) AND (1919936337))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)AND(vt0.c1))) ISNULL) ASC);
SELECT ALL * FROM vt0 WHERE (((((1249925918)*(vt0.c1))) BETWEEN (((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))) AND (1919936337))) ORDER BY ((((vt0.c1)AND(vt0.c1))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((1249925918)*(vt0.c1))) BETWEEN (((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))) AND (1919936337))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)AND(vt0.c1))) ISNULL) ASC);
SELECT ALL * FROM vt0 WHERE (((((1249925918)*(vt0.c1))) BETWEEN (((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))) AND (1919936337))) ORDER BY ((((vt0.c1)AND(vt0.c1))) ISNULL) ASC;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END) IS TRUE) WHERE ('1139573141') ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1139573141') IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END) IS TRUE) ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END) IS TRUE) WHERE ('1139573141') ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1139573141') IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END) IS TRUE) ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((CASE WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END) IS TRUE) WHERE ('1139573141') ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (0.30991477829540426) ORDER BY (- (((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.30991477829540426) IS TRUE)  as count FROM vt0, t0 ORDER BY (- (((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE (0.30991477829540426) ORDER BY (- (((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.30991477829540426) IS TRUE)  as count FROM vt0, t0 ORDER BY (- (((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE (0.30991477829540426) ORDER BY (- (((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))) DESC;
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((((((COALESCE(0.7441105380117692, vt0.c1))OR(((rt0.c1)GLOB(rt0.c1)))))OR(0xffffffffee2db9ba)))OR(((vt0.c1) IS FALSE))))AND(CASE WHEN vt0.c1 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((COALESCE(0.7441105380117692, vt0.c1))OR(((rt0.c1)GLOB(rt0.c1)))))OR(0Xffffffffee2db9ba)))OR(((vt0.c1) IS FALSE))))AND(CASE WHEN vt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((((((COALESCE(0.7441105380117692, vt0.c1))OR(((rt0.c1)GLOB(rt0.c1)))))OR(0xffffffffee2db9ba)))OR(((vt0.c1) IS FALSE))))AND(CASE WHEN vt0.c1 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((COALESCE(0.7441105380117692, vt0.c1))OR(((rt0.c1)GLOB(rt0.c1)))))OR(0Xffffffffee2db9ba)))OR(((vt0.c1) IS FALSE))))AND(CASE WHEN vt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((((((COALESCE(0.7441105380117692, vt0.c1))OR(((rt0.c1)GLOB(rt0.c1)))))OR(0xffffffffee2db9ba)))OR(((vt0.c1) IS FALSE))))AND(CASE WHEN vt0.c1 THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((CAST(rt0.c1 AS BLOB) IN ())) ORDER BY ((t0.c0)IS NOT(((((rt0.c1)AND(rt0.c2)))AND(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS BLOB) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY ((t0.c0)IS NOT(((((rt0.c1)AND(rt0.c2)))AND(t0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((CAST(rt0.c1 AS BLOB) IN ())) ORDER BY ((t0.c0)IS NOT(((((rt0.c1)AND(rt0.c2)))AND(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS BLOB) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY ((t0.c0)IS NOT(((((rt0.c1)AND(rt0.c2)))AND(t0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((CAST(rt0.c1 AS BLOB) IN ())) ORDER BY ((t0.c0)IS NOT(((((rt0.c1)AND(rt0.c2)))AND(t0.c0)))) DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)<<(rt0.c2)))>((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<<(rt0.c2)))>((- (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)<<(rt0.c2)))>((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<<(rt0.c2)))>((- (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)<<(rt0.c2)))>((- (vt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE rt0.c1 END)==(CASE t0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c0 END))) ORDER BY (((rt0.c1) ISNULL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE rt0.c1 END)=(CASE t0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c1) ISNULL) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE rt0.c1 END)==(CASE t0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c0 END))) ORDER BY (((rt0.c1) ISNULL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE rt0.c1 END)=(CASE t0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c1) ISNULL) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE rt0.c1 END)==(CASE t0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c0 END))) ORDER BY (((rt0.c1) ISNULL) IN ())  NULLS LAST;
SELECT * FROM vt0, rt0, t0 WHERE (CAST(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (CAST(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (CAST(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)) AS BLOB));
SELECT * FROM vt0, rt0 WHERE (((((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(((x'409a')IS NOT(vt0.c1))))) ORDER BY (+ (rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(((x'409a')IS NOT(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (rt0.c0)) DESC);
SELECT * FROM vt0, rt0 WHERE (((((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(((x'409a')IS NOT(vt0.c1))))) ORDER BY (+ (rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(((x'409a')IS NOT(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (rt0.c0)) DESC);
SELECT * FROM vt0, rt0 WHERE (((((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(((x'409a')IS NOT(vt0.c1))))) ORDER BY (+ (rt0.c0)) DESC;
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))IS NOT(((rt0.c0)%(0.8850651920276592)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))IS NOT(((rt0.c0)%(0.8850651920276592))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))IS NOT(((rt0.c0)%(0.8850651920276592)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))IS NOT(((rt0.c0)%(0.8850651920276592))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))IS NOT(((rt0.c0)%(0.8850651920276592)))));
SELECT * FROM vt0 WHERE ((((CAST(vt0.c0 AS TEXT)))<((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS TEXT)))<((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((CAST(vt0.c0 AS TEXT)))<((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS TEXT)))<((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((CAST(vt0.c0 AS TEXT)))<((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((IFNULL(rt0.c2, vt0.c0)))>=((vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((IFNULL(rt0.c2, vt0.c0)))>=((vt0.c1)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((IFNULL(rt0.c2, vt0.c0)))>=((vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((IFNULL(rt0.c2, vt0.c0)))>=((vt0.c1)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((IFNULL(rt0.c2, vt0.c0)))>=((vt0.c1))));
SELECT ALL * FROM vt0, rt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))LIKE(MAX(rt0.c2, vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))LIKE(MAX(rt0.c2, vt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))LIKE(MAX(rt0.c2, vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))LIKE(MAX(rt0.c2, vt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))LIKE(MAX(rt0.c2, vt0.c1))));
SELECT * FROM t0 WHERE (PRINTF((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT ((PRINTF((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (PRINTF((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT ((PRINTF((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (PRINTF((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT * FROM rt0 WHERE (((((rt0.c2)AND(MAX(rt0.c0, rt0.c0))))OR(((((0X58909e46)AND(rt0.c2)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(MAX(rt0.c0, rt0.c0))))OR(((((0X58909e46)AND(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)AND(MAX(rt0.c0, rt0.c0))))OR(((((0X58909e46)AND(rt0.c2)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(MAX(rt0.c0, rt0.c0))))OR(((((0X58909e46)AND(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)AND(MAX(rt0.c0, rt0.c0))))OR(((((0X58909e46)AND(rt0.c2)))AND(rt0.c1)))));
SELECT * FROM rt0, t0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END) IS FALSE)) ORDER BY (((((rt0.c2))<((x'54c6')))) IS FALSE) ASC, (~ (((rt0.c2)>(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END) IS FALSE)) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((rt0.c2))<((x'54c6')))) IS FALSE) ASC, (~ (((rt0.c2)>(rt0.c2)))) DESC);
SELECT * FROM rt0, t0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END) IS FALSE)) ORDER BY (((((rt0.c2))<((x'54c6')))) IS FALSE) ASC, (~ (((rt0.c2)>(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END) IS FALSE)) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((rt0.c2))<((x'54c6')))) IS FALSE) ASC, (~ (((rt0.c2)>(rt0.c2)))) DESC);
SELECT * FROM rt0, t0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END) IS FALSE)) ORDER BY (((((rt0.c2))<((x'54c6')))) IS FALSE) ASC, (~ (((rt0.c2)>(rt0.c2)))) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((x'411b')%(rt0.c1)) IN (((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((x'411b')%(rt0.c1)) IN (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((x'411b')%(rt0.c1)) IN (((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((x'411b')%(rt0.c1)) IN (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((x'411b')%(rt0.c1)) IN (((t0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((~ (((vt0.c0)==(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)==(t0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((~ (((vt0.c0)==(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)==(t0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((~ (((vt0.c0)==(t0.c0)))));
SELECT * FROM t0 WHERE ((((('-1172634000')AND(((NULL)-(t0.c0)))))AND(((t0.c0) ISNULL)))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND ((- (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('-1172634000')AND(((NULL)-(t0.c0)))))AND(((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND ((- (t0.c0)))) ASC);
SELECT * FROM t0 WHERE ((((('-1172634000')AND(((NULL)-(t0.c0)))))AND(((t0.c0) ISNULL)))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND ((- (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('-1172634000')AND(((NULL)-(t0.c0)))))AND(((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND ((- (t0.c0)))) ASC);
SELECT * FROM t0 WHERE ((((('-1172634000')AND(((NULL)-(t0.c0)))))AND(((t0.c0) ISNULL)))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND ((- (t0.c0)))) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c0) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c0) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c0) ORDER BY rt0.c2  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC));
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.38383489250711567);
SELECT SUM(count) FROM (SELECT ALL ((0.38383489250711567) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.38383489250711567);
SELECT SUM(count) FROM (SELECT ALL ((0.38383489250711567) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.38383489250711567);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE (IFNULL(CAST(vt0.c0 AS TEXT), TYPEOF(t0.c0)));
SELECT SUM(count) FROM (SELECT ((IFNULL(CAST(vt0.c0 AS TEXT), TYPEOF(t0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE (IFNULL(CAST(vt0.c0 AS TEXT), TYPEOF(t0.c0)));
SELECT SUM(count) FROM (SELECT ((IFNULL(CAST(vt0.c0 AS TEXT), TYPEOF(t0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE (IFNULL(CAST(vt0.c0 AS TEXT), TYPEOF(t0.c0)));
SELECT * FROM t0, vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)) IN ())) ORDER BY ((((((vt0.c1) IS TRUE))OR(((t0.c0) ISNULL))))AND((vt0.c0 IN (vt0.c1, t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((vt0.c1) IS TRUE))OR(((t0.c0) ISNULL))))AND((vt0.c0 IN (vt0.c1, t0.c0)))) ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)) IN ())) ORDER BY ((((((vt0.c1) IS TRUE))OR(((t0.c0) ISNULL))))AND((vt0.c0 IN (vt0.c1, t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((vt0.c1) IS TRUE))OR(((t0.c0) ISNULL))))AND((vt0.c0 IN (vt0.c1, t0.c0)))) ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)) IN ())) ORDER BY ((((((vt0.c1) IS TRUE))OR(((t0.c0) ISNULL))))AND((vt0.c0 IN (vt0.c1, t0.c0)))) ASC  NULLS LAST;
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1)+(t0.c0)) THEN ((vt0.c1)IS(t0.c0)) END WHERE (TYPEOF(((vt0.c0)LIKE(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0)LIKE(vt0.c1)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1)+(t0.c0)) THEN ((vt0.c1)IS(t0.c0)) END);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1)+(t0.c0)) THEN ((vt0.c1)IS(t0.c0)) END WHERE (TYPEOF(((vt0.c0)LIKE(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0)LIKE(vt0.c1)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1)+(t0.c0)) THEN ((vt0.c1)IS(t0.c0)) END);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1)+(t0.c0)) THEN ((vt0.c1)IS(t0.c0)) END WHERE (TYPEOF(((vt0.c0)LIKE(vt0.c1))));
SELECT * FROM rt0 WHERE ((NOT (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (rt0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((t0.c0) IS FALSE) COLLATE RTRIM) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY NULL);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((t0.c0) IS FALSE) COLLATE RTRIM) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY NULL);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((t0.c0) IS FALSE) COLLATE RTRIM) ORDER BY NULL;
SELECT * FROM rt0 WHERE ((+ (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (rt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1)IS('0.928533730650022')))) AND ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((rt0.c1)IS('0.928533730650022')))) AND ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1)IS('0.928533730650022')))) AND ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((rt0.c1)IS('0.928533730650022')))) AND ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1)IS('0.928533730650022')))) AND ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END))));
SELECT COUNT(*) FROM vt0 WHERE (LIKELY((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((LIKELY((vt0.c1 IN ()))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((LIKELY((vt0.c1 IN ()))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY((vt0.c1 IN ())));
SELECT COUNT(*) FROM rt0, t0 WHERE ((~ (((rt0.c1) NOTNULL)))) ORDER BY CASE rt0.c2  WHEN CAST(t0.c0 AS REAL) THEN ((rt0.c2)>>(rt0.c0)) ELSE (((rt0.c2))<((rt0.c2))) END;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE rt0.c2  WHEN CAST(t0.c0 AS REAL) THEN ((rt0.c2)>>(rt0.c0)) ELSE (((rt0.c2))<((rt0.c2))) END);
SELECT COUNT(*) FROM rt0, t0 WHERE ((~ (((rt0.c1) NOTNULL)))) ORDER BY CASE rt0.c2  WHEN CAST(t0.c0 AS REAL) THEN ((rt0.c2)>>(rt0.c0)) ELSE (((rt0.c2))<((rt0.c2))) END;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE rt0.c2  WHEN CAST(t0.c0 AS REAL) THEN ((rt0.c2)>>(rt0.c0)) ELSE (((rt0.c2))<((rt0.c2))) END);
SELECT COUNT(*) FROM rt0, t0 WHERE ((~ (((rt0.c1) NOTNULL)))) ORDER BY CASE rt0.c2  WHEN CAST(t0.c0 AS REAL) THEN ((rt0.c2)>>(rt0.c0)) ELSE (((rt0.c2))<((rt0.c2))) END;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2))) IS TRUE) RIGHT OUTER JOIN t0 ON ((x'') IS FALSE) WHERE ((+ ((rt0.c2 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c2 IN (vt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2))) IS TRUE) RIGHT OUTER JOIN t0 ON ((x'') IS FALSE));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2))) IS TRUE) RIGHT OUTER JOIN t0 ON ((x'') IS FALSE) WHERE ((+ ((rt0.c2 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c2 IN (vt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2))) IS TRUE) RIGHT OUTER JOIN t0 ON ((x'') IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) ISNULL) AS NUMERIC)) ORDER BY CAST('tq' AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY CAST('tq' AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) ISNULL) AS NUMERIC)) ORDER BY CAST('tq' AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY CAST('tq' AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) ISNULL) AS NUMERIC)) ORDER BY CAST('tq' AS INTEGER) ASC;
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0)<(t0.c0)) THEN (+ (rt0.c1)) ELSE CAST(t0.c0 AS NUMERIC) END WHERE (((((((((((((((t0.c0)IS NOT(t0.c0)))OR(CAST(rt0.c0 AS INTEGER))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (t0.c0)))))OR((- (rt0.c1)))))AND((NOT (rt0.c1)))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(UNLIKELY(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c0)IS NOT(t0.c0)))OR(CAST(rt0.c0 AS INTEGER))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (t0.c0)))))OR((- (rt0.c1)))))AND((NOT (rt0.c1)))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(UNLIKELY(rt0.c1)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0)<(t0.c0)) THEN (+ (rt0.c1)) ELSE CAST(t0.c0 AS NUMERIC) END);
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0)<(t0.c0)) THEN (+ (rt0.c1)) ELSE CAST(t0.c0 AS NUMERIC) END WHERE (((((((((((((((t0.c0)IS NOT(t0.c0)))OR(CAST(rt0.c0 AS INTEGER))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (t0.c0)))))OR((- (rt0.c1)))))AND((NOT (rt0.c1)))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(UNLIKELY(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c0)IS NOT(t0.c0)))OR(CAST(rt0.c0 AS INTEGER))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (t0.c0)))))OR((- (rt0.c1)))))AND((NOT (rt0.c1)))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(UNLIKELY(rt0.c1)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0)<(t0.c0)) THEN (+ (rt0.c1)) ELSE CAST(t0.c0 AS NUMERIC) END);
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0)<(t0.c0)) THEN (+ (rt0.c1)) ELSE CAST(t0.c0 AS NUMERIC) END WHERE (((((((((((((((t0.c0)IS NOT(t0.c0)))OR(CAST(rt0.c0 AS INTEGER))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (t0.c0)))))OR((- (rt0.c1)))))AND((NOT (rt0.c1)))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(UNLIKELY(rt0.c1))));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON UPPER((vt0.c1 IN ())) WHERE (CAST((- (rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON UPPER((vt0.c1 IN ())));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON UPPER((vt0.c1 IN ())) WHERE (CAST((- (rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON UPPER((vt0.c1 IN ())));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON UPPER((vt0.c1 IN ())) WHERE (CAST((- (rt0.c2)) AS REAL));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (((t0.c0) ISNULL))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN rt0.c2 END)));
SELECT * FROM t0, vt0, rt0 WHERE ((('-1874551552')>>(((rt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0))))) ORDER BY ((CASE rt0.c2  WHEN t0.c0 THEN NULL ELSE rt0.c2 END) BETWEEN (CASE WHEN '' THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 END) AND (((rt0.c1) IS FALSE))), (~ (SQLITE_COMPILEOPTION_GET('/H2u0D/xO'))) DESC, ((((vt0.c0)OR((((vt0.c1))!=((rt0.c2))))))OR(CASE vt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-1874551552')>>(((rt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((CASE rt0.c2  WHEN t0.c0 THEN NULL ELSE rt0.c2 END) BETWEEN (CASE WHEN '' THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 END) AND (((rt0.c1) IS FALSE))), (~ (SQLITE_COMPILEOPTION_GET('/H2u0D/xO'))) DESC, ((((vt0.c0)OR((((vt0.c1))!=((rt0.c2))))))OR(CASE vt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END))  NULLS FIRST);
SELECT * FROM t0, vt0, rt0 WHERE ((('-1874551552')>>(((rt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0))))) ORDER BY ((CASE rt0.c2  WHEN t0.c0 THEN NULL ELSE rt0.c2 END) BETWEEN (CASE WHEN '' THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 END) AND (((rt0.c1) IS FALSE))), (~ (SQLITE_COMPILEOPTION_GET('/H2u0D/xO'))) DESC, ((((vt0.c0)OR((((vt0.c1))!=((rt0.c2))))))OR(CASE vt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-1874551552')>>(((rt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((CASE rt0.c2  WHEN t0.c0 THEN NULL ELSE rt0.c2 END) BETWEEN (CASE WHEN '' THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 END) AND (((rt0.c1) IS FALSE))), (~ (SQLITE_COMPILEOPTION_GET('/H2u0D/xO'))) DESC, ((((vt0.c0)OR((((vt0.c1))!=((rt0.c2))))))OR(CASE vt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END))  NULLS FIRST);
SELECT * FROM t0, vt0, rt0 WHERE ((('-1874551552')>>(((rt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0))))) ORDER BY ((CASE rt0.c2  WHEN t0.c0 THEN NULL ELSE rt0.c2 END) BETWEEN (CASE WHEN '' THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 END) AND (((rt0.c1) IS FALSE))), (~ (SQLITE_COMPILEOPTION_GET('/H2u0D/xO'))) DESC, ((((vt0.c0)OR((((vt0.c1))!=((rt0.c2))))))OR(CASE vt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END))  NULLS FIRST;
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT ALL * FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c0) IS FALSE)));
SELECT * FROM t0, vt0 WHERE ((((vt0.c0, CAST(vt0.c0 AS REAL), ((vt0.c1)==(t0.c0))))>((0.7296880575553406, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((t0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, CAST(vt0.c0 AS REAL), ((vt0.c1)=(t0.c0))))>((0.7296880575553406, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((t0.c0) IS TRUE))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((vt0.c0, CAST(vt0.c0 AS REAL), ((vt0.c1)==(t0.c0))))>((0.7296880575553406, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((t0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, CAST(vt0.c0 AS REAL), ((vt0.c1)=(t0.c0))))>((0.7296880575553406, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((t0.c0) IS TRUE))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((vt0.c0, CAST(vt0.c0 AS REAL), ((vt0.c1)==(t0.c0))))>((0.7296880575553406, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((t0.c0) IS TRUE)))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((vt0.c0)GLOB(UNLIKELY(rt0.c0))) WHERE ((~ ((((rt0.c1, vt0.c0, vt0.c1))>((vt0.c0, rt0.c1, rt0.c2)))))) ORDER BY (((- (vt0.c1))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c1, vt0.c0, vt0.c1))>((vt0.c0, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((vt0.c0)GLOB(UNLIKELY(rt0.c0))) ORDER BY (((- (vt0.c1))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((vt0.c0)GLOB(UNLIKELY(rt0.c0))) WHERE ((~ ((((rt0.c1, vt0.c0, vt0.c1))>((vt0.c0, rt0.c1, rt0.c2)))))) ORDER BY (((- (vt0.c1))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c1, vt0.c0, vt0.c1))>((vt0.c0, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((vt0.c0)GLOB(UNLIKELY(rt0.c0))) ORDER BY (((- (vt0.c1))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((vt0.c0)GLOB(UNLIKELY(rt0.c0))) WHERE ((~ ((((rt0.c1, vt0.c0, vt0.c1))>((vt0.c0, rt0.c1, rt0.c2)))))) ORDER BY (((- (vt0.c1))) IS FALSE)  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((+ (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((+ (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((+ (t0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))  WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CAST(vt0.c0 AS BLOB) END) ORDER BY ((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND((- (vt0.c1)))))OR((vt0.c1 IN (vt0.c0))))  NULLS LAST, LIKELY(DISTINCT CAST(vt0.c0 AS INTEGER))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))  WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND((- (vt0.c1)))))OR((vt0.c1 IN (vt0.c0))))  NULLS LAST, LIKELY(DISTINCT CAST(vt0.c0 AS INTEGER))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))  WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CAST(vt0.c0 AS BLOB) END) ORDER BY ((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND((- (vt0.c1)))))OR((vt0.c1 IN (vt0.c0))))  NULLS LAST, LIKELY(DISTINCT CAST(vt0.c0 AS INTEGER))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))  WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND((- (vt0.c1)))))OR((vt0.c1 IN (vt0.c0))))  NULLS LAST, LIKELY(DISTINCT CAST(vt0.c0 AS INTEGER))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))  WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CAST(vt0.c0 AS BLOB) END) ORDER BY ((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND((- (vt0.c1)))))OR((vt0.c1 IN (vt0.c0))))  NULLS LAST, LIKELY(DISTINCT CAST(vt0.c0 AS INTEGER))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) ISNULL))+((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL))+((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) ISNULL))+((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL))+((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) ISNULL))+((NOT (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((CAST(rt0.c1 AS INTEGER))IS((rt0.c1 IN (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS INTEGER))IS((rt0.c1 IN (t0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((CAST(rt0.c1 AS INTEGER))IS((rt0.c1 IN (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS INTEGER))IS((rt0.c1 IN (t0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((CAST(rt0.c1 AS INTEGER))IS((rt0.c1 IN (t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))<>('nKxXD'))) ORDER BY ((((vt0.c0)IS NOT(vt0.c1))) BETWEEN (COALESCE(vt0.c0, vt0.c1)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))<>('nKxXD'))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS NOT(vt0.c1))) BETWEEN (COALESCE(vt0.c0, vt0.c1)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))<>('nKxXD'))) ORDER BY ((((vt0.c0)IS NOT(vt0.c1))) BETWEEN (COALESCE(vt0.c0, vt0.c1)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))<>('nKxXD'))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS NOT(vt0.c1))) BETWEEN (COALESCE(vt0.c0, vt0.c1)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))<>('nKxXD'))) ORDER BY ((((vt0.c0)IS NOT(vt0.c1))) BETWEEN (COALESCE(vt0.c0, vt0.c1)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC;
SELECT * FROM rt0 INNER JOIN vt0 ON (((rt0.c1)) BETWEEN ((x'' COLLATE RTRIM)) AND ((((rt0.c0)>=(vt0.c1))))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((rt0.c1)) BETWEEN ((x'' COLLATE RTRIM)) AND ((((rt0.c0)>=(vt0.c1))))));
SELECT * FROM rt0 INNER JOIN vt0 ON (((rt0.c1)) BETWEEN ((x'' COLLATE RTRIM)) AND ((((rt0.c0)>=(vt0.c1))))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((rt0.c1)) BETWEEN ((x'' COLLATE RTRIM)) AND ((((rt0.c0)>=(vt0.c1))))));
SELECT * FROM rt0 INNER JOIN vt0 ON (((rt0.c1)) BETWEEN ((x'' COLLATE RTRIM)) AND ((((rt0.c0)>=(vt0.c1))))) WHERE (rt0.c1);
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CASE NULL  WHEN t0.c0 THEN x'7818' END, ((t0.c0)IS(t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)))) AND (((t0.c0 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (t0.c0 IN (t0.c0)))))) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CASE NULL  WHEN t0.c0 THEN x'7818' END, ((t0.c0)IS(t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)))) AND (((t0.c0 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (t0.c0 IN (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC);
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CASE NULL  WHEN t0.c0 THEN x'7818' END, ((t0.c0)IS(t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)))) AND (((t0.c0 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (t0.c0 IN (t0.c0)))))) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CASE NULL  WHEN t0.c0 THEN x'7818' END, ((t0.c0)IS(t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)))) AND (((t0.c0 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (t0.c0 IN (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC);
SELECT ALL * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CASE NULL  WHEN t0.c0 THEN x'7818' END, ((t0.c0)IS(t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)))) AND (((t0.c0 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (t0.c0 IN (t0.c0)))))) ORDER BY t0.c0 ASC;
SELECT COUNT(*) FROM vt0 WHERE (ABS(CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (ABS(CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (ABS(CAST(vt0.c0 AS BLOB)));
SELECT ALL * FROM vt0 INNER JOIN t0 ON (((((rt0.c0, t0.c0, vt0.c1))>((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((((rt0.c1)OR(t0.c0)))OR(rt0.c0))) AND (((vt0.c0)OR(rt0.c2)))) INNER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN (((x'' IN ()))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) WHERE (((((((((CAST(vt0.c0 AS REAL))OR(((rt0.c2)GLOB(vt0.c1)))))OR(478355026)))OR(x'bd5b')))OR(rt0.c2 COLLATE RTRIM))) ORDER BY ((((rt0.c2) NOTNULL))AND((- (vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c0 AS REAL))OR(((rt0.c2)GLOB(vt0.c1)))))OR(478355026)))OR(x'bd5b')))OR(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((((rt0.c0, t0.c0, vt0.c1))>((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((((rt0.c1)OR(t0.c0)))OR(rt0.c0))) AND (((vt0.c0)OR(rt0.c2)))) INNER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN (((x'' IN ()))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY ((((rt0.c2) NOTNULL))AND((- (vt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN t0 ON (((((rt0.c0, t0.c0, vt0.c1))>((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((((rt0.c1)OR(t0.c0)))OR(rt0.c0))) AND (((vt0.c0)OR(rt0.c2)))) INNER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN (((x'' IN ()))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) WHERE (((((((((CAST(vt0.c0 AS REAL))OR(((rt0.c2)GLOB(vt0.c1)))))OR(478355026)))OR(x'bd5b')))OR(rt0.c2 COLLATE RTRIM))) ORDER BY ((((rt0.c2) NOTNULL))AND((- (vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c0 AS REAL))OR(((rt0.c2)GLOB(vt0.c1)))))OR(478355026)))OR(x'bd5b')))OR(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((((rt0.c0, t0.c0, vt0.c1))>((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((((rt0.c1)OR(t0.c0)))OR(rt0.c0))) AND (((vt0.c0)OR(rt0.c2)))) INNER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN (((x'' IN ()))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY ((((rt0.c2) NOTNULL))AND((- (vt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN t0 ON (((((rt0.c0, t0.c0, vt0.c1))>((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((((rt0.c1)OR(t0.c0)))OR(rt0.c0))) AND (((vt0.c0)OR(rt0.c2)))) INNER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN (((x'' IN ()))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) WHERE (((((((((CAST(vt0.c0 AS REAL))OR(((rt0.c2)GLOB(vt0.c1)))))OR(478355026)))OR(x'bd5b')))OR(rt0.c2 COLLATE RTRIM))) ORDER BY ((((rt0.c2) NOTNULL))AND((- (vt0.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON LOWER(((t0.c0) ISNULL)) WHERE (CAST((NOT (rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON LOWER(((t0.c0) ISNULL)));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON LOWER(((t0.c0) ISNULL)) WHERE (CAST((NOT (rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON LOWER(((t0.c0) ISNULL)));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON LOWER(((t0.c0) ISNULL)) WHERE (CAST((NOT (rt0.c2)) AS TEXT));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (- (((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))) WHERE (CAST(((t0.c0)IS NOT(x'6613')) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)IS NOT(x'6613')) AS REAL)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (- (((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (- (((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))) WHERE (CAST(((t0.c0)IS NOT(x'6613')) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)IS NOT(x'6613')) AS REAL)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (- (((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (- (((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))) WHERE (CAST(((t0.c0)IS NOT(x'6613')) AS REAL));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0) NOTNULL)))==((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0) NOTNULL)))==((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0) NOTNULL)))==((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0) NOTNULL)))==((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0) NOTNULL)))==((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1)))LIKE(CAST(x'' AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1)))LIKE(CAST(x'' AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1)))LIKE(CAST(x'' AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1)))LIKE(CAST(x'' AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1)))LIKE(CAST(x'' AS TEXT))));
SELECT COUNT(*) FROM rt0, t0 INDEXED BY i10 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0 INDEXED BY i10);
SELECT COUNT(*) FROM rt0, t0 INDEXED BY i10 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0 INDEXED BY i10);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((rt0.c2) IS FALSE)) ISNULL)) ORDER BY ((CAST(rt0.c0 AS TEXT))&(rt0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE)) ISNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(rt0.c0 AS TEXT))&(rt0.c0 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((rt0.c2) IS FALSE)) ISNULL)) ORDER BY ((CAST(rt0.c0 AS TEXT))&(rt0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE)) ISNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(rt0.c0 AS TEXT))&(rt0.c0 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((rt0.c2) IS FALSE)) ISNULL)) ORDER BY ((CAST(rt0.c0 AS TEXT))&(rt0.c0 COLLATE RTRIM)) ASC;
SELECT * FROM t0, vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1))))) ORDER BY ((NULLIF(t0.c0, vt0.c1))&(TRIM(t0.c0)))  NULLS LAST, (+ ((((vt0.c0, vt0.c1, '1221596869', vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, t0.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((NULLIF(t0.c0, vt0.c1))&(TRIM(t0.c0)))  NULLS LAST, (+ ((((vt0.c0, vt0.c1, '1221596869', vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, t0.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1))))) ORDER BY ((NULLIF(t0.c0, vt0.c1))&(TRIM(t0.c0)))  NULLS LAST, (+ ((((vt0.c0, vt0.c1, '1221596869', vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, t0.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((NULLIF(t0.c0, vt0.c1))&(TRIM(t0.c0)))  NULLS LAST, (+ ((((vt0.c0, vt0.c1, '1221596869', vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, t0.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1))))) ORDER BY ((NULLIF(t0.c0, vt0.c1))&(TRIM(t0.c0)))  NULLS LAST, (+ ((((vt0.c0, vt0.c1, '1221596869', vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, t0.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST;
SELECT * FROM rt0, t0 WHERE (((-1950936881)<=(CAST(rt0.c0 AS BLOB)))) ORDER BY CASE WHEN ((rt0.c0)*(rt0.c2)) THEN ((rt0.c1) NOT BETWEEN ('c|') AND (t0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((-1950936881)<=(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN ((rt0.c0)*(rt0.c2)) THEN ((rt0.c1) NOT BETWEEN ('c|') AND (t0.c0)) END ASC);
SELECT * FROM rt0, t0 WHERE (((-1950936881)<=(CAST(rt0.c0 AS BLOB)))) ORDER BY CASE WHEN ((rt0.c0)*(rt0.c2)) THEN ((rt0.c1) NOT BETWEEN ('c|') AND (t0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((-1950936881)<=(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN ((rt0.c0)*(rt0.c2)) THEN ((rt0.c1) NOT BETWEEN ('c|') AND (t0.c0)) END ASC);
SELECT * FROM rt0, t0 WHERE (((-1950936881)<=(CAST(rt0.c0 AS BLOB)))) ORDER BY CASE WHEN ((rt0.c0)*(rt0.c2)) THEN ((rt0.c1) NOT BETWEEN ('c|') AND (t0.c0)) END ASC;
SELECT COUNT(*) FROM rt0, t0 WHERE ((JULIANDAY(t0.c0, 1410485459, rt0.c2) IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((JULIANDAY(t0.c0, 1410485459, rt0.c2) IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((JULIANDAY(t0.c0, 1410485459, rt0.c2) IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((JULIANDAY(t0.c0, 1410485459, rt0.c2) IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((JULIANDAY(t0.c0, 1410485459, rt0.c2) IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN rt0.c0 THEN ((vt0.c1) NOTNULL) WHEN t0.c0 COLLATE BINARY THEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c1))) WHEN '478355026' THEN (vt0.c0 IN ()) WHEN ((vt0.c0) IS FALSE) THEN (((((((('?.DQ\')AND(vt0.c1)))AND(t0.c0)))OR(rt0.c2)))AND(rt0.c1)) WHEN (vt0.c0 IN ()) THEN ((rt0.c1)<(t0.c0)) ELSE CASE WHEN rt0.c0 THEN vt0.c1 END END RIGHT OUTER JOIN vt0 ON CASE (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c0)))  WHEN ((rt0.c0)%(rt0.c1)) THEN ((((vt0.c1)OR(rt0.c2)))AND(rt0.c2)) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1))) THEN ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ((rt0.c0)>(vt0.c1)) THEN x'616d' COLLATE RTRIM ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END WHERE (((((((((0.24942987257190796)AND(vt0.c0)))AND(0.47641745095018206)))OR(rt0.c0)))OR((0.8465977831891319 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.24942987257190796)AND(vt0.c0)))AND(0.47641745095018206)))OR(rt0.c0)))OR((0.8465977831891319 IN ())))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN rt0.c0 THEN ((vt0.c1) NOTNULL) WHEN t0.c0 COLLATE BINARY THEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c1))) WHEN '478355026' THEN (vt0.c0 IN ()) WHEN ((vt0.c0) IS FALSE) THEN (((((((('?.DQ\')AND(vt0.c1)))AND(t0.c0)))OR(rt0.c2)))AND(rt0.c1)) WHEN (vt0.c0 IN ()) THEN ((rt0.c1)<(t0.c0)) ELSE CASE WHEN rt0.c0 THEN vt0.c1 END END RIGHT OUTER JOIN vt0 ON CASE (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c0)))  WHEN ((rt0.c0)%(rt0.c1)) THEN ((((vt0.c1)OR(rt0.c2)))AND(rt0.c2)) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1))) THEN ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ((rt0.c0)>(vt0.c1)) THEN x'616d' COLLATE RTRIM ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN rt0.c0 THEN ((vt0.c1) NOTNULL) WHEN t0.c0 COLLATE BINARY THEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c1))) WHEN '478355026' THEN (vt0.c0 IN ()) WHEN ((vt0.c0) IS FALSE) THEN (((((((('?.DQ\')AND(vt0.c1)))AND(t0.c0)))OR(rt0.c2)))AND(rt0.c1)) WHEN (vt0.c0 IN ()) THEN ((rt0.c1)<(t0.c0)) ELSE CASE WHEN rt0.c0 THEN vt0.c1 END END RIGHT OUTER JOIN vt0 ON CASE (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c0)))  WHEN ((rt0.c0)%(rt0.c1)) THEN ((((vt0.c1)OR(rt0.c2)))AND(rt0.c2)) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1))) THEN ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ((rt0.c0)>(vt0.c1)) THEN x'616d' COLLATE RTRIM ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END WHERE (((((((((0.24942987257190796)AND(vt0.c0)))AND(0.47641745095018206)))OR(rt0.c0)))OR((0.8465977831891319 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.24942987257190796)AND(vt0.c0)))AND(0.47641745095018206)))OR(rt0.c0)))OR((0.8465977831891319 IN ())))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN rt0.c0 THEN ((vt0.c1) NOTNULL) WHEN t0.c0 COLLATE BINARY THEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c1))) WHEN '478355026' THEN (vt0.c0 IN ()) WHEN ((vt0.c0) IS FALSE) THEN (((((((('?.DQ\')AND(vt0.c1)))AND(t0.c0)))OR(rt0.c2)))AND(rt0.c1)) WHEN (vt0.c0 IN ()) THEN ((rt0.c1)<(t0.c0)) ELSE CASE WHEN rt0.c0 THEN vt0.c1 END END RIGHT OUTER JOIN vt0 ON CASE (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c0)))  WHEN ((rt0.c0)%(rt0.c1)) THEN ((((vt0.c1)OR(rt0.c2)))AND(rt0.c2)) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1))) THEN ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ((rt0.c0)>(vt0.c1)) THEN x'616d' COLLATE RTRIM ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (x'' IN ()) FULL OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) WHERE ((CASE t0.c0  WHEN t0.c0 THEN rt0.c2 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 END IN (CASE WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY CAST(COALESCE(vt0.c1, rt0.c0) AS INTEGER) DESC  NULLS FIRST, ((vt0.c0)IS(t0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c0  WHEN t0.c0 THEN rt0.c2 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 END IN (CASE WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (x'' IN ()) FULL OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) ORDER BY CAST(COALESCE(vt0.c1, rt0.c0) AS INTEGER) DESC  NULLS FIRST, ((vt0.c0)IS(t0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (x'' IN ()) FULL OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) WHERE ((CASE t0.c0  WHEN t0.c0 THEN rt0.c2 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 END IN (CASE WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY CAST(COALESCE(vt0.c1, rt0.c0) AS INTEGER) DESC  NULLS FIRST, ((vt0.c0)IS(t0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c0  WHEN t0.c0 THEN rt0.c2 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 END IN (CASE WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (x'' IN ()) FULL OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) ORDER BY CAST(COALESCE(vt0.c1, rt0.c0) AS INTEGER) DESC  NULLS FIRST, ((vt0.c0)IS(t0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (x'' IN ()) FULL OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) WHERE ((CASE t0.c0  WHEN t0.c0 THEN rt0.c2 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 END IN (CASE WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY CAST(COALESCE(vt0.c1, rt0.c0) AS INTEGER) DESC  NULLS FIRST, ((vt0.c0)IS(t0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE 4.73694624E8  WHEN vt0.c1 THEN ((((vt0.c1)AND(0.46021902943649307)))OR(vt0.c0)) WHEN x'af34fc22' THEN ((vt0.c1) ISNULL) WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)) THEN ((vt0.c0)||(vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (0xffffffff8b874251) AND (vt0.c0)) THEN 0.1649758212349709 WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c1) IS FALSE) ELSE ((vt0.c0)!=(vt0.c1)) END) ORDER BY CAST(((vt0.c1) ISNULL) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE 4.73694624E8  WHEN vt0.c1 THEN ((((vt0.c1)AND(0.46021902943649307)))OR(vt0.c0)) WHEN x'af34fc22' THEN ((vt0.c1) ISNULL) WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)) THEN ((vt0.c0)||(vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (0xffffffff8b874251) AND (vt0.c0)) THEN 0.1649758212349709 WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c1) IS FALSE) ELSE ((vt0.c0)<>(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) ISNULL) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE 4.73694624E8  WHEN vt0.c1 THEN ((((vt0.c1)AND(0.46021902943649307)))OR(vt0.c0)) WHEN x'af34fc22' THEN ((vt0.c1) ISNULL) WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)) THEN ((vt0.c0)||(vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (0xffffffff8b874251) AND (vt0.c0)) THEN 0.1649758212349709 WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c1) IS FALSE) ELSE ((vt0.c0)!=(vt0.c1)) END) ORDER BY CAST(((vt0.c1) ISNULL) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE 4.73694624E8  WHEN vt0.c1 THEN ((((vt0.c1)AND(0.46021902943649307)))OR(vt0.c0)) WHEN x'af34fc22' THEN ((vt0.c1) ISNULL) WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)) THEN ((vt0.c0)||(vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (0xffffffff8b874251) AND (vt0.c0)) THEN 0.1649758212349709 WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c1) IS FALSE) ELSE ((vt0.c0)<>(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) ISNULL) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE 4.73694624E8  WHEN vt0.c1 THEN ((((vt0.c1)AND(0.46021902943649307)))OR(vt0.c0)) WHEN x'af34fc22' THEN ((vt0.c1) ISNULL) WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)) THEN ((vt0.c0)||(vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (0xffffffff8b874251) AND (vt0.c0)) THEN 0.1649758212349709 WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c1) IS FALSE) ELSE ((vt0.c0)!=(vt0.c1)) END) ORDER BY CAST(((vt0.c1) ISNULL) AS NUMERIC) ASC;
SELECT COUNT(*) FROM t0 INDEXED BY i10, rt0 WHERE (CASE WHEN ((((((((rt0.c1)OR(t0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END END) ORDER BY (((rt0.c2, t0.c0, rt0.c0)) NOT BETWEEN (((((rt0.c2, t0.c0, rt0.c0))<=((rt0.c2, rt0.c2, rt0.c2))), rt0.c2 COLLATE RTRIM, ((rt0.c1)=(rt0.c1)))) AND ((t0.c0 COLLATE BINARY, (rt0.c1 IN ()), ((((x'75d8')AND(t0.c0)))AND(rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt0.c1)OR(t0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END END) IS TRUE)  as count FROM t0 INDEXED BY i10, rt0 NOT INDEXED ORDER BY (((rt0.c2, t0.c0, rt0.c0)) NOT BETWEEN (((((rt0.c2, t0.c0, rt0.c0))<=((rt0.c2, rt0.c2, rt0.c2))), rt0.c2 COLLATE RTRIM, ((rt0.c1)==(rt0.c1)))) AND ((t0.c0 COLLATE BINARY, (rt0.c1 IN ()), ((((x'75d8')AND(t0.c0)))AND(rt0.c2)))))  NULLS LAST);
SELECT COUNT(*) FROM t0 INDEXED BY i10, rt0 WHERE (CASE WHEN ((((((((rt0.c1)OR(t0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END END) ORDER BY (((rt0.c2, t0.c0, rt0.c0)) NOT BETWEEN (((((rt0.c2, t0.c0, rt0.c0))<=((rt0.c2, rt0.c2, rt0.c2))), rt0.c2 COLLATE RTRIM, ((rt0.c1)=(rt0.c1)))) AND ((t0.c0 COLLATE BINARY, (rt0.c1 IN ()), ((((x'75d8')AND(t0.c0)))AND(rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt0.c1)OR(t0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END END) IS TRUE)  as count FROM t0 INDEXED BY i10, rt0 NOT INDEXED ORDER BY (((rt0.c2, t0.c0, rt0.c0)) NOT BETWEEN (((((rt0.c2, t0.c0, rt0.c0))<=((rt0.c2, rt0.c2, rt0.c2))), rt0.c2 COLLATE RTRIM, ((rt0.c1)==(rt0.c1)))) AND ((t0.c0 COLLATE BINARY, (rt0.c1 IN ()), ((((x'75d8')AND(t0.c0)))AND(rt0.c2)))))  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2 WHERE ((((vt0.c1)) NOT BETWEEN (((((vt0.c1, rt0.c2, rt0.c0, '', rt0.c1)) BETWEEN ((NULL, vt0.c1, vt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c0))))) AND ((((rt0.c1)&(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN (((((vt0.c1, rt0.c2, rt0.c0, '', rt0.c1)) BETWEEN ((NULL, vt0.c1, vt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c0))))) AND ((((rt0.c1)&(vt0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2 WHERE ((((vt0.c1)) NOT BETWEEN (((((vt0.c1, rt0.c2, rt0.c0, '', rt0.c1)) BETWEEN ((NULL, vt0.c1, vt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c0))))) AND ((((rt0.c1)&(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN (((((vt0.c1, rt0.c2, rt0.c0, '', rt0.c1)) BETWEEN ((NULL, vt0.c1, vt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c0))))) AND ((((rt0.c1)&(vt0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2 WHERE ((((vt0.c1)) NOT BETWEEN (((((vt0.c1, rt0.c2, rt0.c0, '', rt0.c1)) BETWEEN ((NULL, vt0.c1, vt0.c0, rt0.c0, vt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c0))))) AND ((((rt0.c1)&(vt0.c0))))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((t0.c0)<=(rt0.c2)) IN (((rt0.c2)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)<=(rt0.c2)) IN (((rt0.c2)*(rt0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((t0.c0)<=(rt0.c2)) IN (((rt0.c2)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)<=(rt0.c2)) IN (((rt0.c2)*(rt0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((t0.c0)<=(rt0.c2)) IN (((rt0.c2)*(rt0.c0)))));
SELECT * FROM rt0, vt0, t0 WHERE ((~ ((NOT (t0.c0))))) ORDER BY ((((rt0.c2) NOT BETWEEN (t0.c0) AND (vt0.c1))) BETWEEN (((t0.c0)==(vt0.c0))) AND (((t0.c0)-(NULL)))), ((CAST('-315264126' AS REAL)) BETWEEN (((((t0.c0)AND(rt0.c2)))AND(t0.c0))) AND (((vt0.c1)LIKE(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((NOT (t0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((rt0.c2) NOT BETWEEN (t0.c0) AND (vt0.c1))) BETWEEN (((t0.c0)==(vt0.c0))) AND (((t0.c0)-(NULL)))), ((CAST('-315264126' AS REAL)) BETWEEN (((((t0.c0)AND(rt0.c2)))AND(t0.c0))) AND (((vt0.c1)LIKE(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE ((~ ((NOT (t0.c0))))) ORDER BY ((((rt0.c2) NOT BETWEEN (t0.c0) AND (vt0.c1))) BETWEEN (((t0.c0)==(vt0.c0))) AND (((t0.c0)-(NULL)))), ((CAST('-315264126' AS REAL)) BETWEEN (((((t0.c0)AND(rt0.c2)))AND(t0.c0))) AND (((vt0.c1)LIKE(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((NOT (t0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((rt0.c2) NOT BETWEEN (t0.c0) AND (vt0.c1))) BETWEEN (((t0.c0)==(vt0.c0))) AND (((t0.c0)-(NULL)))), ((CAST('-315264126' AS REAL)) BETWEEN (((((t0.c0)AND(rt0.c2)))AND(t0.c0))) AND (((vt0.c1)LIKE(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE ((~ ((NOT (t0.c0))))) ORDER BY ((((rt0.c2) NOT BETWEEN (t0.c0) AND (vt0.c1))) BETWEEN (((t0.c0)==(vt0.c0))) AND (((t0.c0)-(NULL)))), ((CAST('-315264126' AS REAL)) BETWEEN (((((t0.c0)AND(rt0.c2)))AND(t0.c0))) AND (((vt0.c1)LIKE(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)<(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)<(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)<(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)<(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)<(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))));
SELECT * FROM rt0 WHERE ((~ (((rt0.c1)|(rt0.c0))))) ORDER BY ((MIN(rt0.c2, rt0.c1)) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1)|(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((MIN(rt0.c2, rt0.c1)) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS LAST);
SELECT * FROM rt0 WHERE ((~ (((rt0.c1)|(rt0.c0))))) ORDER BY ((MIN(rt0.c2, rt0.c1)) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1)|(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((MIN(rt0.c2, rt0.c1)) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS LAST);
SELECT * FROM rt0 WHERE ((~ (((rt0.c1)|(rt0.c0))))) ORDER BY ((MIN(rt0.c2, rt0.c1)) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS LAST;
SELECT ALL * FROM vt0 INDEXED BY i10, t0 WHERE (((0X68b6a4ce)<<(CASE vt0.c1  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((0X68b6a4ce)<<(CASE vt0.c1  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 INDEXED BY i10, t0);
SELECT ALL * FROM vt0 INDEXED BY i10, t0 WHERE (((0X68b6a4ce)<<(CASE vt0.c1  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((0X68b6a4ce)<<(CASE vt0.c1  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 INDEXED BY i10, t0);
SELECT * FROM rt0, t0, vt0 WHERE (((((TRIM(rt0.c0))AND((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.3234036734093395))))))OR(x''))) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS TEXT) DESC, (((t0.c0, rt0.c2, 0xffffffffd5a35b18)) BETWEEN ((CAST(t0.c0 AS REAL), CAST(vt0.c1 AS INTEGER), rt0.c0)) AND ((((rt0.c0) BETWEEN (rt0.c0) AND (0.5847605449973117)), t0.c0 COLLATE BINARY, ABS(DISTINCT vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(rt0.c0))AND((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.3234036734093395))))))OR(x''))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CAST(rt0.c1 COLLATE RTRIM AS TEXT) DESC, (((t0.c0, rt0.c2, 0Xffffffffd5a35b18)) BETWEEN ((CAST(t0.c0 AS REAL), CAST(vt0.c1 AS INTEGER), rt0.c0)) AND ((((rt0.c0) BETWEEN (rt0.c0) AND (0.5847605449973117)), t0.c0 COLLATE BINARY, ABS(DISTINCT vt0.c1)))));
SELECT * FROM rt0, t0, vt0 WHERE (((((TRIM(rt0.c0))AND((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.3234036734093395))))))OR(x''))) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS TEXT) DESC, (((t0.c0, rt0.c2, 0xffffffffd5a35b18)) BETWEEN ((CAST(t0.c0 AS REAL), CAST(vt0.c1 AS INTEGER), rt0.c0)) AND ((((rt0.c0) BETWEEN (rt0.c0) AND (0.5847605449973117)), t0.c0 COLLATE BINARY, ABS(DISTINCT vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(rt0.c0))AND((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.3234036734093395))))))OR(x''))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CAST(rt0.c1 COLLATE RTRIM AS TEXT) DESC, (((t0.c0, rt0.c2, 0Xffffffffd5a35b18)) BETWEEN ((CAST(t0.c0 AS REAL), CAST(vt0.c1 AS INTEGER), rt0.c0)) AND ((((rt0.c0) BETWEEN (rt0.c0) AND (0.5847605449973117)), t0.c0 COLLATE BINARY, ABS(DISTINCT vt0.c1)))));
SELECT * FROM rt0, t0, vt0 WHERE (((((TRIM(rt0.c0))AND((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.3234036734093395))))))OR(x''))) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS TEXT) DESC, (((t0.c0, rt0.c2, 0xffffffffd5a35b18)) BETWEEN ((CAST(t0.c0 AS REAL), CAST(vt0.c1 AS INTEGER), rt0.c0)) AND ((((rt0.c0) BETWEEN (rt0.c0) AND (0.5847605449973117)), t0.c0 COLLATE BINARY, ABS(DISTINCT vt0.c1))));
SELECT ALL * FROM t0, rt0 WHERE (((ABS(DISTINCT t0.c0))>=(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT t0.c0))>=(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((ABS(DISTINCT t0.c0))>=(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT t0.c0))>=(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((ABS(DISTINCT t0.c0))>=(rt0.c0 COLLATE BINARY)));
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2)*(rt0.c0)))>>(vt0.c0)) INNER JOIN t0 ON ((NOT (vt0.c1)) IN (CAST(x'' AS NUMERIC))) WHERE (CAST(CASE vt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE '1166004521' END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE '1166004521' END AS REAL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2)*(rt0.c0)))>>(vt0.c0)) INNER JOIN t0 ON ((NOT (vt0.c1)) IN (CAST(x'' AS NUMERIC))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2)*(rt0.c0)))>>(vt0.c0)) INNER JOIN t0 ON ((NOT (vt0.c1)) IN (CAST(x'' AS NUMERIC))) WHERE (CAST(CASE vt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE '1166004521' END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE '1166004521' END AS REAL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2)*(rt0.c0)))>>(vt0.c0)) INNER JOIN t0 ON ((NOT (vt0.c1)) IN (CAST(x'' AS NUMERIC))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2)*(rt0.c0)))>>(vt0.c0)) INNER JOIN t0 ON ((NOT (vt0.c1)) IN (CAST(x'' AS NUMERIC))) WHERE (CAST(CASE vt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE '1166004521' END AS REAL));
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END COLLATE NOCASE) ORDER BY (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) IN (vt0.c1 COLLATE RTRIM, ((((vt0.c0)AND('0.16445771574071366')))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) IN (vt0.c1 COLLATE RTRIM, ((((vt0.c0)AND('0.16445771574071366')))OR(vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END COLLATE NOCASE) ORDER BY (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) IN (vt0.c1 COLLATE RTRIM, ((((vt0.c0)AND('0.16445771574071366')))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) IN (vt0.c1 COLLATE RTRIM, ((((vt0.c0)AND('0.16445771574071366')))OR(vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END COLLATE NOCASE) ORDER BY (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) IN (vt0.c1 COLLATE RTRIM, ((((vt0.c0)AND('0.16445771574071366')))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (CAST(TRIM(DISTINCT t0.c0) AS REAL)) ORDER BY ((((((((CAST(vt0.c1 AS BLOB))OR(json_array(t0.c0, -400797394))))AND(((t0.c0)&(t0.c0)))))AND(vt0.c1)))OR((~ (vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT t0.c0) AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((CAST(vt0.c1 AS BLOB))OR(json_array(t0.c0, -400797394))))AND(((t0.c0)&(t0.c0)))))AND(vt0.c1)))OR((~ (vt0.c1)))) DESC);
SELECT * FROM t0, vt0 WHERE (CAST(TRIM(DISTINCT t0.c0) AS REAL)) ORDER BY ((((((((CAST(vt0.c1 AS BLOB))OR(json_array(t0.c0, -400797394))))AND(((t0.c0)&(t0.c0)))))AND(vt0.c1)))OR((~ (vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT t0.c0) AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((CAST(vt0.c1 AS BLOB))OR(json_array(t0.c0, -400797394))))AND(((t0.c0)&(t0.c0)))))AND(vt0.c1)))OR((~ (vt0.c1)))) DESC);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON rt0.c0 CROSS JOIN rt0 ON (t0.c0 IN ()) COLLATE NOCASE WHERE (GLOB(((t0.c0) NOT BETWEEN (0.7035743191299331) AND (rt0.c0)), (((rt0.c0))>=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((GLOB(((t0.c0) NOT BETWEEN (0.7035743191299331) AND (rt0.c0)), (((rt0.c0))>=((rt0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON rt0.c0 CROSS JOIN rt0 ON (t0.c0 IN ()) COLLATE NOCASE);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON rt0.c0 CROSS JOIN rt0 ON (t0.c0 IN ()) COLLATE NOCASE WHERE (GLOB(((t0.c0) NOT BETWEEN (0.7035743191299331) AND (rt0.c0)), (((rt0.c0))>=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((GLOB(((t0.c0) NOT BETWEEN (0.7035743191299331) AND (rt0.c0)), (((rt0.c0))>=((rt0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON rt0.c0 CROSS JOIN rt0 ON (t0.c0 IN ()) COLLATE NOCASE);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON rt0.c0 CROSS JOIN rt0 ON (t0.c0 IN ()) COLLATE NOCASE WHERE (GLOB(((t0.c0) NOT BETWEEN (0.7035743191299331) AND (rt0.c0)), (((rt0.c0))>=((rt0.c0)))));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((((((((vt0.c0) IS TRUE))OR(ROUND(rt0.c0, vt0.c1))))OR((((t0.c0, rt0.c0, vt0.c0))=((rt0.c1, rt0.c1, vt0.c0))))))OR((vt0.c0 IN ()))))OR(0.6488656506208613))) ORDER BY (((((vt0.c0))<=((rt0.c0))))OR(CAST(vt0.c1 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) IS TRUE))OR(ROUND(rt0.c0, vt0.c1))))OR((((t0.c0, rt0.c0, vt0.c0))=((rt0.c1, rt0.c1, vt0.c0))))))OR((vt0.c0 IN ()))))OR(0.6488656506208613))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((((vt0.c0))<=((rt0.c0))))OR(CAST(vt0.c1 AS INTEGER))) DESC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((((((((vt0.c0) IS TRUE))OR(ROUND(rt0.c0, vt0.c1))))OR((((t0.c0, rt0.c0, vt0.c0))=((rt0.c1, rt0.c1, vt0.c0))))))OR((vt0.c0 IN ()))))OR(0.6488656506208613))) ORDER BY (((((vt0.c0))<=((rt0.c0))))OR(CAST(vt0.c1 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) IS TRUE))OR(ROUND(rt0.c0, vt0.c1))))OR((((t0.c0, rt0.c0, vt0.c0))=((rt0.c1, rt0.c1, vt0.c0))))))OR((vt0.c0 IN ()))))OR(0.6488656506208613))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((((vt0.c0))<=((rt0.c0))))OR(CAST(vt0.c1 AS INTEGER))) DESC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((((((((vt0.c0) IS TRUE))OR(ROUND(rt0.c0, vt0.c1))))OR((((t0.c0, rt0.c0, vt0.c0))=((rt0.c1, rt0.c1, vt0.c0))))))OR((vt0.c0 IN ()))))OR(0.6488656506208613))) ORDER BY (((((vt0.c0))<=((rt0.c0))))OR(CAST(vt0.c1 AS INTEGER))) DESC;
SELECT ALL * FROM vt0, rt0 WHERE (DATE(CASE WHEN rt0.c2 THEN vt0.c1 END, ((((vt0.c1)OR(rt0.c2)))AND(vt0.c1)), ((rt0.c1) IS TRUE))) ORDER BY ((MIN(rt0.c1, vt0.c1, rt0.c2, rt0.c1)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((DATE(CASE WHEN rt0.c2 THEN vt0.c1 END, ((((vt0.c1)OR(rt0.c2)))AND(vt0.c1)), ((rt0.c1) IS TRUE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((MIN(rt0.c1, vt0.c1, rt0.c2, rt0.c1)) IS TRUE));
SELECT ALL * FROM vt0, rt0 WHERE (DATE(CASE WHEN rt0.c2 THEN vt0.c1 END, ((((vt0.c1)OR(rt0.c2)))AND(vt0.c1)), ((rt0.c1) IS TRUE))) ORDER BY ((MIN(rt0.c1, vt0.c1, rt0.c2, rt0.c1)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((DATE(CASE WHEN rt0.c2 THEN vt0.c1 END, ((((vt0.c1)OR(rt0.c2)))AND(vt0.c1)), ((rt0.c1) IS TRUE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((MIN(rt0.c1, vt0.c1, rt0.c2, rt0.c1)) IS TRUE));
SELECT ALL * FROM vt0, rt0 WHERE (DATE(CASE WHEN rt0.c2 THEN vt0.c1 END, ((((vt0.c1)OR(rt0.c2)))AND(vt0.c1)), ((rt0.c1) IS TRUE))) ORDER BY ((MIN(rt0.c1, vt0.c1, rt0.c2, rt0.c1)) IS TRUE);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (((((HEX(DISTINCT vt0.c0))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN 0.44607796073537453 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY RTRIM(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS FIRST, LIKELIHOOD(DISTINCT TRIM(vt0.c1), 0.7676236070914447), ((vt0.c1) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(DISTINCT vt0.c0))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN 0.44607796073537453 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY RTRIM(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS FIRST, LIKELIHOOD(DISTINCT TRIM(vt0.c1), 0.7676236070914447), ((vt0.c1) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((HEX(DISTINCT vt0.c0))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN 0.44607796073537453 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY RTRIM(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS FIRST, LIKELIHOOD(DISTINCT TRIM(vt0.c1), 0.7676236070914447), ((vt0.c1) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(DISTINCT vt0.c0))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN 0.44607796073537453 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY RTRIM(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS FIRST, LIKELIHOOD(DISTINCT TRIM(vt0.c1), 0.7676236070914447), ((vt0.c1) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((HEX(DISTINCT vt0.c0))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN 0.44607796073537453 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY RTRIM(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS FIRST, LIKELIHOOD(DISTINCT TRIM(vt0.c1), 0.7676236070914447), ((vt0.c1) ISNULL)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c0)<(vt0.c1)))IS(((x'519f')<=(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<(vt0.c1)))IS(((x'519f')<=(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c0)<(vt0.c1)))IS(((x'519f')<=(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<(vt0.c1)))IS(((x'519f')<=(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c0)<(vt0.c1)))IS(((x'519f')<=(vt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE ('-233866196') ORDER BY vt0.c1, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (('-233866196') IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c1, rt0.c1 ASC);
SELECT * FROM rt0, vt0 WHERE ('-233866196') ORDER BY vt0.c1, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (('-233866196') IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c1, rt0.c1 ASC);
SELECT * FROM rt0, vt0 WHERE ('-233866196') ORDER BY vt0.c1, rt0.c1 ASC;
SELECT COUNT(*) FROM vt0, t0 WHERE ((+ (((x'') IS TRUE)))) ORDER BY ((MAX(t0.c0, t0.c0))LIKE((((x'')) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (((x'') IS TRUE)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((MAX(t0.c0, t0.c0))LIKE((((x'')) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((+ (((x'') IS TRUE)))) ORDER BY ((MAX(t0.c0, t0.c0))LIKE((((x'')) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (((x'') IS TRUE)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((MAX(t0.c0, t0.c0))LIKE((((x'')) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((+ (((x'') IS TRUE)))) ORDER BY ((MAX(t0.c0, t0.c0))LIKE((((x'')) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) ASC;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))%(((rt0.c2)OR(rt0.c0)))) FULL OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN ('1624611002') AND (vt0.c1 COLLATE RTRIM)) WHERE ((((vt0.c0)) NOT BETWEEN ((CASE rt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 ELSE vt0.c1 END)) AND (((rt0.c0 IN (vt0.c1)))))) ORDER BY UNLIKELY(vt0.c0) DESC, ((((vt0.c1)<(rt0.c1))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((CASE rt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 ELSE vt0.c1 END)) AND (((rt0.c0 IN (vt0.c1)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))%(((rt0.c2)OR(rt0.c0)))) FULL OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN ('1624611002') AND (vt0.c1 COLLATE RTRIM)) ORDER BY UNLIKELY(vt0.c0) DESC, ((((vt0.c1)<(rt0.c1))) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))%(((rt0.c2)OR(rt0.c0)))) FULL OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN ('1624611002') AND (vt0.c1 COLLATE RTRIM)) WHERE ((((vt0.c0)) NOT BETWEEN ((CASE rt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 ELSE vt0.c1 END)) AND (((rt0.c0 IN (vt0.c1)))))) ORDER BY UNLIKELY(vt0.c0) DESC, ((((vt0.c1)<(rt0.c1))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((CASE rt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 ELSE vt0.c1 END)) AND (((rt0.c0 IN (vt0.c1)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))%(((rt0.c2)OR(rt0.c0)))) FULL OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN ('1624611002') AND (vt0.c1 COLLATE RTRIM)) ORDER BY UNLIKELY(vt0.c0) DESC, ((((vt0.c1)<(rt0.c1))) NOT NULL) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) IN ()));
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON t0.c0 WHERE (((((((((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0)))OR(x'a8a3')))OR(rt0.c1 COLLATE RTRIM)))AND(rt0.c2 COLLATE NOCASE)))OR(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0)))OR(x'a8a3')))OR(rt0.c1 COLLATE RTRIM)))AND(rt0.c2 COLLATE NOCASE)))OR(rt0.c2))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON t0.c0);
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON t0.c0 WHERE (((((((((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0)))OR(x'a8a3')))OR(rt0.c1 COLLATE RTRIM)))AND(rt0.c2 COLLATE NOCASE)))OR(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0)))OR(x'a8a3')))OR(rt0.c1 COLLATE RTRIM)))AND(rt0.c2 COLLATE NOCASE)))OR(rt0.c2))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON t0.c0);
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON t0.c0 WHERE (((((((((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0)))OR(x'a8a3')))OR(rt0.c1 COLLATE RTRIM)))AND(rt0.c2 COLLATE NOCASE)))OR(rt0.c2)));
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((t0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN x'' END) ORDER BY ((LENGTH(-1838006445)) BETWEEN ((+ (vt0.c1))) AND (NULL));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN x'' END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((LENGTH(-1838006445)) BETWEEN ((+ (vt0.c1))) AND (NULL)));
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((t0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN x'' END) ORDER BY ((LENGTH(-1838006445)) BETWEEN ((+ (vt0.c1))) AND (NULL));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN x'' END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((LENGTH(-1838006445)) BETWEEN ((+ (vt0.c1))) AND (NULL)));
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((t0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN x'' END) ORDER BY ((LENGTH(-1838006445)) BETWEEN ((+ (vt0.c1))) AND (NULL));
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT ALL * FROM t0 WHERE (((t0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0) IS FALSE));
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c0 AS TEXT))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))AND((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, NULL, 'P7F[-O')) AND ((rt0.c1, rt0.c0, '-233866196')))))) ORDER BY ((((rt0.c0) IS FALSE)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c0 AS TEXT))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))AND((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, NULL, 'P7F[-O')) AND ((rt0.c1, rt0.c0, '-233866196')))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) IS FALSE)) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c0 AS TEXT))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))AND((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, NULL, 'P7F[-O')) AND ((rt0.c1, rt0.c0, '-233866196')))))) ORDER BY ((((rt0.c0) IS FALSE)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c0 AS TEXT))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))AND((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, NULL, 'P7F[-O')) AND ((rt0.c1, rt0.c0, '-233866196')))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) IS FALSE)) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c0 AS TEXT))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))AND((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, NULL, 'P7F[-O')) AND ((rt0.c1, rt0.c0, '-233866196')))))) ORDER BY ((((rt0.c0) IS FALSE)) NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c0))))=((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c0))))=((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c0))))=((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c0))))=((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c0))))=((~ (rt0.c1)))));
SELECT ALL * FROM rt0, vt0, t0 WHERE (CAST((((x''))>=((rt0.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((x''))>=((rt0.c0))) AS REAL)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CAST((((x''))>=((rt0.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((x''))>=((rt0.c0))) AS REAL)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CAST((((x''))>=((rt0.c0))) AS REAL));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)))OR(((vt0.c0)<>(vt0.c1)))))OR(TIME(t0.c0, '-696785987', NULL, vt0.c1, t0.c0)))) ORDER BY (+ (vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)))OR(((vt0.c0)!=(vt0.c1)))))OR(TIME(t0.c0, '-696785987', NULL, vt0.c1, t0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (+ (vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)))OR(((vt0.c0)<>(vt0.c1)))))OR(TIME(t0.c0, '-696785987', NULL, vt0.c1, t0.c0)))) ORDER BY (+ (vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)))OR(((vt0.c0)!=(vt0.c1)))))OR(TIME(t0.c0, '-696785987', NULL, vt0.c1, t0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (+ (vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)))OR(((vt0.c0)<>(vt0.c1)))))OR(TIME(t0.c0, '-696785987', NULL, vt0.c1, t0.c0)))) ORDER BY (+ (vt0.c0)) COLLATE BINARY;
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR(((rt0.c2)<>(rt0.c0)))))AND(CASE WHEN 0.6072082943012251 THEN '-1348085370' ELSE rt0.c2 END)))OR(x'')))OR((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0)))))) ORDER BY (NOT ((+ (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR(((rt0.c2)!=(rt0.c0)))))AND(CASE WHEN 0.6072082943012251 THEN '-1348085370' ELSE rt0.c2 END)))OR(x'')))OR((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((+ (rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR(((rt0.c2)<>(rt0.c0)))))AND(CASE WHEN 0.6072082943012251 THEN '-1348085370' ELSE rt0.c2 END)))OR(x'')))OR((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0)))))) ORDER BY (NOT ((+ (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR(((rt0.c2)!=(rt0.c0)))))AND(CASE WHEN 0.6072082943012251 THEN '-1348085370' ELSE rt0.c2 END)))OR(x'')))OR((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((+ (rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR(((rt0.c2)<>(rt0.c0)))))AND(CASE WHEN 0.6072082943012251 THEN '-1348085370' ELSE rt0.c2 END)))OR(x'')))OR((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0)))))) ORDER BY (NOT ((+ (rt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (((- (t0.c0)))!=(t0.c0))  NULLS FIRST, ((t0.c0) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (((((t0.c0)OR(t0.c0)))AND(''))))  NULLS FIRST, t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (((- (t0.c0)))!=(t0.c0))  NULLS FIRST, ((t0.c0) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (((((t0.c0)OR(t0.c0)))AND(''))))  NULLS FIRST, t0.c0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (((- (t0.c0)))!=(t0.c0))  NULLS FIRST, ((t0.c0) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (((((t0.c0)OR(t0.c0)))AND(''))))  NULLS FIRST, t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (((- (t0.c0)))!=(t0.c0))  NULLS FIRST, ((t0.c0) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (((((t0.c0)OR(t0.c0)))AND(''))))  NULLS FIRST, t0.c0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (((- (t0.c0)))!=(t0.c0))  NULLS FIRST, ((t0.c0) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (((((t0.c0)OR(t0.c0)))AND(''))))  NULLS FIRST, t0.c0;
SELECT ALL COUNT(*) FROM t0, rt0 NATURAL JOIN vt0 WHERE (((((vt0.c1) IS TRUE))||(((rt0.c1)+(t0.c0))))) ORDER BY CASE WHEN 0.81060468049416 THEN x'' ELSE ((rt0.c2) IS FALSE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS TRUE))||(((rt0.c1)+(t0.c0))))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt0 ORDER BY CASE WHEN 0.81060468049416 THEN x'' ELSE ((rt0.c2) IS FALSE) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 NATURAL JOIN vt0 WHERE (((((vt0.c1) IS TRUE))||(((rt0.c1)+(t0.c0))))) ORDER BY CASE WHEN 0.81060468049416 THEN x'' ELSE ((rt0.c2) IS FALSE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS TRUE))||(((rt0.c1)+(t0.c0))))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt0 ORDER BY CASE WHEN 0.81060468049416 THEN x'' ELSE ((rt0.c2) IS FALSE) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 NATURAL JOIN vt0 WHERE (((((vt0.c1) IS TRUE))||(((rt0.c1)+(t0.c0))))) ORDER BY CASE WHEN 0.81060468049416 THEN x'' ELSE ((rt0.c2) IS FALSE) END  NULLS LAST;
SELECT * FROM t0, vt0, rt0 WHERE (((((LOWER(t0.c0))AND(json(rt0.c0))))AND((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((LOWER(t0.c0))AND(json(rt0.c0))))AND((NOT (rt0.c1))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((((LOWER(t0.c0))AND(json(rt0.c0))))AND((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((LOWER(t0.c0))AND(json(rt0.c0))))AND((NOT (rt0.c1))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((((LOWER(t0.c0))AND(json(rt0.c0))))AND((NOT (rt0.c1)))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((rt0.c0 COLLATE BINARY) NOT BETWEEN (((((rt0.c1)AND(rt0.c0)))AND(vt0.c0))) AND (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))AND(x'')))OR(vt0.c1)))) WHERE (((vt0.c0) IS TRUE) COLLATE RTRIM) ORDER BY CAST(vt0.c0 AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c0 COLLATE BINARY) NOT BETWEEN (((((rt0.c1)AND(rt0.c0)))AND(vt0.c0))) AND (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))AND(x'')))OR(vt0.c1)))) ORDER BY CAST(vt0.c0 AS TEXT));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((rt0.c0 COLLATE BINARY) NOT BETWEEN (((((rt0.c1)AND(rt0.c0)))AND(vt0.c0))) AND (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))AND(x'')))OR(vt0.c1)))) WHERE (((vt0.c0) IS TRUE) COLLATE RTRIM) ORDER BY CAST(vt0.c0 AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c0 COLLATE BINARY) NOT BETWEEN (((((rt0.c1)AND(rt0.c0)))AND(vt0.c0))) AND (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))AND(x'')))OR(vt0.c1)))) ORDER BY CAST(vt0.c0 AS TEXT));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((rt0.c0 COLLATE BINARY) NOT BETWEEN (((((rt0.c1)AND(rt0.c0)))AND(vt0.c0))) AND (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))AND(x'')))OR(vt0.c1)))) WHERE (((vt0.c0) IS TRUE) COLLATE RTRIM) ORDER BY CAST(vt0.c0 AS TEXT);
SELECT * FROM rt0, vt0, t0 WHERE (LIKELIHOOD(((rt0.c0)%(vt0.c1)), 0.26520681814290903)) ORDER BY ((QUOTE(t0.c0)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt0.c0)%(vt0.c1)), 0.26520681814290903)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((QUOTE(t0.c0)) IS FALSE)  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE (LIKELIHOOD(((rt0.c0)%(vt0.c1)), 0.26520681814290903)) ORDER BY ((QUOTE(t0.c0)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt0.c0)%(vt0.c1)), 0.26520681814290903)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((QUOTE(t0.c0)) IS FALSE)  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE (LIKELIHOOD(((rt0.c0)%(vt0.c1)), 0.26520681814290903)) ORDER BY ((QUOTE(t0.c0)) IS FALSE)  NULLS LAST;
SELECT ALL * FROM rt0, t0 WHERE (((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))-(((rt0.c1)<(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))-(((rt0.c1)<(NULL))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))-(((rt0.c1)<(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))-(((rt0.c1)<(NULL))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))-(((rt0.c1)<(NULL)))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON CAST(CAST(x'' AS BLOB) AS INTEGER) WHERE (UNLIKELY(0.41163741930236064)) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(0.41163741930236064)) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST(CAST(x'' AS BLOB) AS INTEGER) ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON CAST(CAST(x'' AS BLOB) AS INTEGER) WHERE (UNLIKELY(0.41163741930236064)) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(0.41163741930236064)) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST(CAST(x'' AS BLOB) AS INTEGER) ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON CAST(CAST(x'' AS BLOB) AS INTEGER) WHERE (UNLIKELY(0.41163741930236064)) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (0.6944014595369087) ORDER BY (((((0.21403781718255477))<=((x''))))IS(((rt0.c0)IS NOT(rt0.c0)))), ((((+ (rt0.c1))))>=(((((rt0.c1))>=((rt0.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.6944014595369087) IS TRUE)  as count FROM rt0 ORDER BY (((((0.21403781718255477))<=((x''))))IS(((rt0.c0)IS NOT(rt0.c0)))), ((((+ (rt0.c1))))>=(((((rt0.c1))>=((rt0.c0)))))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (0.6944014595369087) ORDER BY (((((0.21403781718255477))<=((x''))))IS(((rt0.c0)IS NOT(rt0.c0)))), ((((+ (rt0.c1))))>=(((((rt0.c1))>=((rt0.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.6944014595369087) IS TRUE)  as count FROM rt0 ORDER BY (((((0.21403781718255477))<=((x''))))IS(((rt0.c0)IS NOT(rt0.c0)))), ((((+ (rt0.c1))))>=(((((rt0.c1))>=((rt0.c0)))))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (0.6944014595369087) ORDER BY (((((0.21403781718255477))<=((x''))))IS(((rt0.c0)IS NOT(rt0.c0)))), ((((+ (rt0.c1))))>=(((((rt0.c1))>=((rt0.c0)))))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((((CAST(t0.c0 AS BLOB))OR(((t0.c0)<<(t0.c0)))))AND(0.4913902272679036))) ORDER BY UPPER(DISTINCT (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, x'')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS BLOB))OR(((t0.c0)<<(t0.c0)))))AND(0.4913902272679036))) IS TRUE)  as count FROM t0 ORDER BY UPPER(DISTINCT (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, x'')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((CAST(t0.c0 AS BLOB))OR(((t0.c0)<<(t0.c0)))))AND(0.4913902272679036))) ORDER BY UPPER(DISTINCT (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, x'')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS BLOB))OR(((t0.c0)<<(t0.c0)))))AND(0.4913902272679036))) IS TRUE)  as count FROM t0 ORDER BY UPPER(DISTINCT (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, x'')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((CAST(t0.c0 AS BLOB))OR(((t0.c0)<<(t0.c0)))))AND(0.4913902272679036))) ORDER BY UPPER(DISTINCT (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, x'')))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)/(vt0.c1)))) AND ((((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((vt0.c1)/(vt0.c1)))) AND ((((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)/(vt0.c1)))) AND ((((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((vt0.c1)/(vt0.c1)))) AND ((((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)/(vt0.c1)))) AND ((((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))));
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((((rt0.c1)>=(rt0.c1)))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c1 END)))AND((~ (rt0.c1))))) ORDER BY CAST(NULL AS NUMERIC), ((rt0.c0 IN ()) IN (rt0.c0 COLLATE NOCASE)) ASC, (((rt0.c0)/(vt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)>=(rt0.c1)))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c1 END)))AND((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST(NULL AS NUMERIC), ((rt0.c0 IN ()) IN (rt0.c0 COLLATE NOCASE)) ASC, (((rt0.c0)/(vt0.c1)) IN ()) ASC);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((((rt0.c1)>=(rt0.c1)))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c1 END)))AND((~ (rt0.c1))))) ORDER BY CAST(NULL AS NUMERIC), ((rt0.c0 IN ()) IN (rt0.c0 COLLATE NOCASE)) ASC, (((rt0.c0)/(vt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)>=(rt0.c1)))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c1 END)))AND((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST(NULL AS NUMERIC), ((rt0.c0 IN ()) IN (rt0.c0 COLLATE NOCASE)) ASC, (((rt0.c0)/(vt0.c1)) IN ()) ASC);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((((rt0.c1)>=(rt0.c1)))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c1 END)))AND((~ (rt0.c1))))) ORDER BY CAST(NULL AS NUMERIC), ((rt0.c0 IN ()) IN (rt0.c0 COLLATE NOCASE)) ASC, (((rt0.c0)/(vt0.c1)) IN ()) ASC;
SELECT ALL * FROM t0, rt0, vt0 WHERE ((NOT (((vt0.c1)>=(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1)>=(t0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((NOT (((vt0.c1)>=(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1)>=(t0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((NOT (((vt0.c1)>=(t0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON ((((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c1)))&(((t0.c0)/(rt0.c1)))) WHERE (((CAST(t0.c0 AS REAL)) NOT BETWEEN (((rt0.c1)>=(rt0.c2))) AND (HEX(DISTINCT vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS REAL)) NOT BETWEEN (((rt0.c1)>=(rt0.c2))) AND (HEX(DISTINCT vt0.c1)))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON ((((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c1)))&(((t0.c0)/(rt0.c1)))));
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON ((((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c1)))&(((t0.c0)/(rt0.c1)))) WHERE (((CAST(t0.c0 AS REAL)) NOT BETWEEN (((rt0.c1)>=(rt0.c2))) AND (HEX(DISTINCT vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS REAL)) NOT BETWEEN (((rt0.c1)>=(rt0.c2))) AND (HEX(DISTINCT vt0.c1)))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON ((((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c1)))&(((t0.c0)/(rt0.c1)))));
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON ((((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c1)))&(((t0.c0)/(rt0.c1)))) WHERE (((CAST(t0.c0 AS REAL)) NOT BETWEEN (((rt0.c1)>=(rt0.c2))) AND (HEX(DISTINCT vt0.c1))));
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS REAL)) NOT BETWEEN (CASE WHEN t0.c0 THEN -1819313013 ELSE t0.c0 END) AND (((t0.c0)+(t0.c0))))) ORDER BY UNLIKELY(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ASC, t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS REAL)) NOT BETWEEN (CASE WHEN t0.c0 THEN -1819313013 ELSE t0.c0 END) AND (((t0.c0)+(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY UNLIKELY(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ASC, t0.c0  NULLS LAST);
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS REAL)) NOT BETWEEN (CASE WHEN t0.c0 THEN -1819313013 ELSE t0.c0 END) AND (((t0.c0)+(t0.c0))))) ORDER BY UNLIKELY(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ASC, t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS REAL)) NOT BETWEEN (CASE WHEN t0.c0 THEN -1819313013 ELSE t0.c0 END) AND (((t0.c0)+(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY UNLIKELY(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ASC, t0.c0  NULLS LAST);
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS REAL)) NOT BETWEEN (CASE WHEN t0.c0 THEN -1819313013 ELSE t0.c0 END) AND (((t0.c0)+(t0.c0))))) ORDER BY UNLIKELY(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ASC, t0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((((t0.c0)OR(vt0.c1)))AND(rt0.c2))) BETWEEN (((vt0.c0) BETWEEN (t0.c0) AND (rt0.c1))) AND (((((((((t0.c0)AND(rt0.c2)))AND(vt0.c1)))AND(vt0.c1)))AND(rt0.c0))))) ORDER BY ((((((rt0.c1)IS(rt0.c0)))OR(((vt0.c1) ISNULL))))AND(((vt0.c1)GLOB(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(vt0.c1)))AND(rt0.c2))) BETWEEN (((vt0.c0) BETWEEN (t0.c0) AND (rt0.c1))) AND (((((((((t0.c0)AND(rt0.c2)))AND(vt0.c1)))AND(vt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((((rt0.c1)IS(rt0.c0)))OR(((vt0.c1) ISNULL))))AND(((vt0.c1)GLOB(rt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((((t0.c0)OR(vt0.c1)))AND(rt0.c2))) BETWEEN (((vt0.c0) BETWEEN (t0.c0) AND (rt0.c1))) AND (((((((((t0.c0)AND(rt0.c2)))AND(vt0.c1)))AND(vt0.c1)))AND(rt0.c0))))) ORDER BY ((((((rt0.c1)IS(rt0.c0)))OR(((vt0.c1) ISNULL))))AND(((vt0.c1)GLOB(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(vt0.c1)))AND(rt0.c2))) BETWEEN (((vt0.c0) BETWEEN (t0.c0) AND (rt0.c1))) AND (((((((((t0.c0)AND(rt0.c2)))AND(vt0.c1)))AND(vt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((((rt0.c1)IS(rt0.c0)))OR(((vt0.c1) ISNULL))))AND(((vt0.c1)GLOB(rt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((((t0.c0)OR(vt0.c1)))AND(rt0.c2))) BETWEEN (((vt0.c0) BETWEEN (t0.c0) AND (rt0.c1))) AND (((((((((t0.c0)AND(rt0.c2)))AND(vt0.c1)))AND(vt0.c1)))AND(rt0.c0))))) ORDER BY ((((((rt0.c1)IS(rt0.c0)))OR(((vt0.c1) ISNULL))))AND(((vt0.c1)GLOB(rt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((t0.c0, NULL, rt0.c2)) AND ((rt0.c1, rt0.c2, x'4f66'))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((t0.c0, NULL, rt0.c2)) AND ((rt0.c1, rt0.c2, x'4f66'))) AS INTEGER)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((t0.c0, NULL, rt0.c2)) AND ((rt0.c1, rt0.c2, x'4f66'))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((t0.c0, NULL, rt0.c2)) AND ((rt0.c1, rt0.c2, x'4f66'))) AS INTEGER)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((t0.c0, NULL, rt0.c2)) AND ((rt0.c1, rt0.c2, x'4f66'))) AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE ((+ (CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (CAST(rt0.c2 AS REAL))));
SELECT * FROM vt0, rt0, t0 WHERE (HEX(DISTINCT CAST(vt0.c0 AS NUMERIC))) ORDER BY ((((t0.c0)AND(((((((((rt0.c2)AND(vt0.c1)))OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c1)))))OR((((vt0.c0))>((vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((t0.c0)AND(((((((((rt0.c2)AND(vt0.c1)))OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c1)))))OR((((vt0.c0))>((vt0.c1))))) DESC  NULLS LAST);
SELECT * FROM vt0, rt0, t0 WHERE (HEX(DISTINCT CAST(vt0.c0 AS NUMERIC))) ORDER BY ((((t0.c0)AND(((((((((rt0.c2)AND(vt0.c1)))OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c1)))))OR((((vt0.c0))>((vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((t0.c0)AND(((((((((rt0.c2)AND(vt0.c1)))OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c1)))))OR((((vt0.c0))>((vt0.c1))))) DESC  NULLS LAST);
SELECT * FROM vt0, rt0, t0 WHERE (HEX(DISTINCT CAST(vt0.c0 AS NUMERIC))) ORDER BY ((((t0.c0)AND(((((((((rt0.c2)AND(vt0.c1)))OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c1)))))OR((((vt0.c0))>((vt0.c1))))) DESC  NULLS LAST;
SELECT * FROM vt0, t0, rt0 WHERE (LIKELY(DISTINCT x'f567')) ORDER BY ((json_valid(t0.c0)) ISNULL);
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT x'f567')) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((json_valid(t0.c0)) ISNULL));
SELECT * FROM vt0, t0, rt0 WHERE (LIKELY(DISTINCT x'f567')) ORDER BY ((json_valid(t0.c0)) ISNULL);
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT x'f567')) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((json_valid(t0.c0)) ISNULL));
SELECT * FROM vt0, t0, rt0 WHERE (LIKELY(DISTINCT x'f567')) ORDER BY ((json_valid(t0.c0)) ISNULL);
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((CAST(0.21473833036846224 AS BLOB)) BETWEEN (json_insert(rt0.c2, rt0.c1, rt0.c2)) AND (((rt0.c1)|(0.9070480181204879)))) WHERE (((((((((((rt0.c2)GLOB(rt0.c1)))OR(((rt0.c2)-(t0.c0)))))OR((rt0.c0 IN (vt0.c0)))))OR(CAST(rt0.c2 AS TEXT))))OR(((rt0.c1) IS FALSE)))) ORDER BY json_quote((t0.c0 IN ())) DESC, (((rt0.c0) NOTNULL) IN (CASE WHEN rt0.c1 THEN vt0.c1 END)) DESC  NULLS FIRST, (((x'50c2' IN (vt0.c0, vt0.c1)))<<(MAX(vt0.c1, rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)GLOB(rt0.c1)))OR(((rt0.c2)-(t0.c0)))))OR((rt0.c0 IN (vt0.c0)))))OR(CAST(rt0.c2 AS TEXT))))OR(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((CAST(0.21473833036846224 AS BLOB)) BETWEEN (json_insert(rt0.c2, rt0.c1, rt0.c2)) AND (((rt0.c1)|(0.9070480181204879)))) ORDER BY json_quote((t0.c0 IN ())) DESC, (((rt0.c0) NOTNULL) IN (CASE WHEN rt0.c1 THEN vt0.c1 END)) DESC  NULLS FIRST, (((x'50c2' IN (vt0.c0, vt0.c1)))<<(MAX(vt0.c1, rt0.c1))));
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((CAST(0.21473833036846224 AS BLOB)) BETWEEN (json_insert(rt0.c2, rt0.c1, rt0.c2)) AND (((rt0.c1)|(0.9070480181204879)))) WHERE (((((((((((rt0.c2)GLOB(rt0.c1)))OR(((rt0.c2)-(t0.c0)))))OR((rt0.c0 IN (vt0.c0)))))OR(CAST(rt0.c2 AS TEXT))))OR(((rt0.c1) IS FALSE)))) ORDER BY json_quote((t0.c0 IN ())) DESC, (((rt0.c0) NOTNULL) IN (CASE WHEN rt0.c1 THEN vt0.c1 END)) DESC  NULLS FIRST, (((x'50c2' IN (vt0.c0, vt0.c1)))<<(MAX(vt0.c1, rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)GLOB(rt0.c1)))OR(((rt0.c2)-(t0.c0)))))OR((rt0.c0 IN (vt0.c0)))))OR(CAST(rt0.c2 AS TEXT))))OR(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((CAST(0.21473833036846224 AS BLOB)) BETWEEN (json_insert(rt0.c2, rt0.c1, rt0.c2)) AND (((rt0.c1)|(0.9070480181204879)))) ORDER BY json_quote((t0.c0 IN ())) DESC, (((rt0.c0) NOTNULL) IN (CASE WHEN rt0.c1 THEN vt0.c1 END)) DESC  NULLS FIRST, (((x'50c2' IN (vt0.c0, vt0.c1)))<<(MAX(vt0.c1, rt0.c1))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ((((vt0.c1))<=((vt0.c0)))))) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR('-781415006')) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ((((vt0.c1))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR('-781415006')) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ((((vt0.c1))<=((vt0.c0)))))) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR('-781415006')) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ((((vt0.c1))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR('-781415006')) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ((((vt0.c1))<=((vt0.c0)))))) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR('-781415006')) AS TEXT);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))>=((0X34aefcad)))) ORDER BY CASE CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c0 END  WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN 0.16282782478700086 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))>=((0x34aefcad)))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c0 END  WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN 0.16282782478700086 END END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))>=((0X34aefcad)))) ORDER BY CASE CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c0 END  WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN 0.16282782478700086 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))>=((0x34aefcad)))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c0 END  WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN 0.16282782478700086 END END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))>=((0X34aefcad)))) ORDER BY CASE CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c0 END  WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN 0.16282782478700086 END END DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (((((x'')!=(vt0.c0))) NOT BETWEEN (1882166204) AND (t0.c0))) ORDER BY (((t0.c0)) BETWEEN ((0xfffffffffeecba9d)) AND ((CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((x'')<>(vt0.c0))) NOT BETWEEN (1882166204) AND (t0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0)) BETWEEN ((0Xfffffffffeecba9d)) AND ((CAST(vt0.c0 AS REAL)))));
SELECT ALL * FROM vt0, t0 WHERE (((((x'')!=(vt0.c0))) NOT BETWEEN (1882166204) AND (t0.c0))) ORDER BY (((t0.c0)) BETWEEN ((0xfffffffffeecba9d)) AND ((CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((x'')<>(vt0.c0))) NOT BETWEEN (1882166204) AND (t0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0)) BETWEEN ((0Xfffffffffeecba9d)) AND ((CAST(vt0.c0 AS REAL)))));
SELECT ALL * FROM vt0, t0 WHERE (((((x'')!=(vt0.c0))) NOT BETWEEN (1882166204) AND (t0.c0))) ORDER BY (((t0.c0)) BETWEEN ((0xfffffffffeecba9d)) AND ((CAST(vt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((vt0.c0)||(vt0.c1)) COLLATE BINARY WHERE (NULL) ORDER BY (((t0.c0, vt0.c0, t0.c0)) BETWEEN ((CAST(vt0.c1 AS TEXT), 0.1451696469965884, ((((vt0.c1)OR(t0.c0)))AND(vt0.c1)))) AND (((t0.c0 IN ()), CASE 1738534947  WHEN 'pC' THEN vt0.c0 END, (t0.c0 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((vt0.c0)||(vt0.c1)) COLLATE BINARY ORDER BY (((t0.c0, vt0.c0, t0.c0)) BETWEEN ((CAST(vt0.c1 AS TEXT), 0.1451696469965884, ((((vt0.c1)OR(t0.c0)))AND(vt0.c1)))) AND (((t0.c0 IN ()), CASE 1738534947  WHEN 'pC' THEN vt0.c0 END, (t0.c0 IN ()))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((vt0.c0)||(vt0.c1)) COLLATE BINARY WHERE (NULL) ORDER BY (((t0.c0, vt0.c0, t0.c0)) BETWEEN ((CAST(vt0.c1 AS TEXT), 0.1451696469965884, ((((vt0.c1)OR(t0.c0)))AND(vt0.c1)))) AND (((t0.c0 IN ()), CASE 1738534947  WHEN 'pC' THEN vt0.c0 END, (t0.c0 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((vt0.c0)||(vt0.c1)) COLLATE BINARY ORDER BY (((t0.c0, vt0.c0, t0.c0)) BETWEEN ((CAST(vt0.c1 AS TEXT), 0.1451696469965884, ((((vt0.c1)OR(t0.c0)))AND(vt0.c1)))) AND (((t0.c0 IN ()), CASE 1738534947  WHEN 'pC' THEN vt0.c0 END, (t0.c0 IN ()))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((vt0.c0)||(vt0.c1)) COLLATE BINARY WHERE (NULL) ORDER BY (((t0.c0, vt0.c0, t0.c0)) BETWEEN ((CAST(vt0.c1 AS TEXT), 0.1451696469965884, ((((vt0.c1)OR(t0.c0)))AND(vt0.c1)))) AND (((t0.c0 IN ()), CASE 1738534947  WHEN 'pC' THEN vt0.c0 END, (t0.c0 IN ()))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((('dk')) BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN ());
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((('dk')) BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((('dk')) BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN ());
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((('dk')) BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((('dk')) BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN ());
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) AND ((((rt0.c0, vt0.c0, vt0.c1, vt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1)))))) ORDER BY '1830665671'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) BETWEEN (CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) AND ((((rt0.c0, vt0.c0, vt0.c1, vt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY '1830665671'  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) AND ((((rt0.c0, vt0.c0, vt0.c1, vt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1)))))) ORDER BY '1830665671'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) BETWEEN (CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) AND ((((rt0.c0, vt0.c0, vt0.c1, vt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY '1830665671'  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) AND ((((rt0.c0, vt0.c0, vt0.c1, vt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1)))))) ORDER BY '1830665671'  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CASE (((vt0.c0))>=((t0.c0)))  WHEN json_array(rt0.c2, vt0.c1) THEN vt0.c1 COLLATE NOCASE WHEN ((vt0.c0)LIKE(rt0.c0)) THEN ((rt0.c2)IS NOT(t0.c0)) WHEN vt0.c0 THEN ((t0.c0)<<(vt0.c0)) END) ORDER BY UNLIKELY(DISTINCT CAST(rt0.c1 AS REAL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0))>=((t0.c0)))  WHEN json_array(rt0.c2, vt0.c1) THEN vt0.c1 COLLATE NOCASE WHEN ((vt0.c0)LIKE(rt0.c0)) THEN ((rt0.c2)IS NOT(t0.c0)) WHEN vt0.c0 THEN ((t0.c0)<<(vt0.c0)) END) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY UNLIKELY(DISTINCT CAST(rt0.c1 AS REAL)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CASE (((vt0.c0))>=((t0.c0)))  WHEN json_array(rt0.c2, vt0.c1) THEN vt0.c1 COLLATE NOCASE WHEN ((vt0.c0)LIKE(rt0.c0)) THEN ((rt0.c2)IS NOT(t0.c0)) WHEN vt0.c0 THEN ((t0.c0)<<(vt0.c0)) END) ORDER BY UNLIKELY(DISTINCT CAST(rt0.c1 AS REAL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0))>=((t0.c0)))  WHEN json_array(rt0.c2, vt0.c1) THEN vt0.c1 COLLATE NOCASE WHEN ((vt0.c0)LIKE(rt0.c0)) THEN ((rt0.c2)IS NOT(t0.c0)) WHEN vt0.c0 THEN ((t0.c0)<<(vt0.c0)) END) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY UNLIKELY(DISTINCT CAST(rt0.c1 AS REAL)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CASE (((vt0.c0))>=((t0.c0)))  WHEN json_array(rt0.c2, vt0.c1) THEN vt0.c1 COLLATE NOCASE WHEN ((vt0.c0)LIKE(rt0.c0)) THEN ((rt0.c2)IS NOT(t0.c0)) WHEN vt0.c0 THEN ((t0.c0)<<(vt0.c0)) END) ORDER BY UNLIKELY(DISTINCT CAST(rt0.c1 AS REAL)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) IS FALSE))&(((((((((((((vt0.c0)OR(0.8465977831891319)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(NULL)))AND(vt0.c1))))) ORDER BY ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE))&(((((((((((((vt0.c0)OR(0.8465977831891319)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(NULL)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) IS FALSE))&(((((((((((((vt0.c0)OR(0.8465977831891319)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(NULL)))AND(vt0.c1))))) ORDER BY ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE))&(((((((((((((vt0.c0)OR(0.8465977831891319)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(NULL)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) IS FALSE))&(((((((((((((vt0.c0)OR(0.8465977831891319)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(NULL)))AND(vt0.c1))))) ORDER BY ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (HEX(DISTINCT (('\nvc9}E%')<>(vt0.c0)))) ORDER BY (((((NOT (vt0.c1)))AND(1.963604352E9)))AND(((vt0.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (('\nvc9}E%')<>(vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((NOT (vt0.c1)))AND(1.963604352E9)))AND(((vt0.c1) NOTNULL))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (HEX(DISTINCT (('\nvc9}E%')<>(vt0.c0)))) ORDER BY (((((NOT (vt0.c1)))AND(1.963604352E9)))AND(((vt0.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (('\nvc9}E%')<>(vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((NOT (vt0.c1)))AND(1.963604352E9)))AND(((vt0.c1) NOTNULL))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (HEX(DISTINCT (('\nvc9}E%')<>(vt0.c0)))) ORDER BY (((((NOT (vt0.c1)))AND(1.963604352E9)))AND(((vt0.c1) NOTNULL))) DESC;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (rt0.c2) ORDER BY json_array(rt0.c1, ((rt0.c0)>('FSD [흐)uᢹ')), CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN 0xad21441 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END, ((vt0.c1)<('1249925918')));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY json_array(rt0.c1, ((rt0.c0)>('FSD [흐)uᢹ')), CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN 0Xad21441 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END, ((vt0.c1)<('1249925918'))));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (rt0.c2) ORDER BY json_array(rt0.c1, ((rt0.c0)>('FSD [흐)uᢹ')), CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN 0xad21441 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END, ((vt0.c1)<('1249925918')));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY json_array(rt0.c1, ((rt0.c0)>('FSD [흐)uᢹ')), CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN 0Xad21441 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END, ((vt0.c1)<('1249925918'))));
SELECT ALL * FROM rt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((CAST(rt0.c1 AS INTEGER))AND(CAST(0.9938008317536811 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER))AND(CAST(0.9938008317536811 AS BLOB)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((CAST(rt0.c1 AS INTEGER))AND(CAST(0.9938008317536811 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER))AND(CAST(0.9938008317536811 AS BLOB)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((CAST(rt0.c1 AS INTEGER))AND(CAST(0.9938008317536811 AS BLOB))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))IS(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))IS(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))IS(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))IS(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))IS(CAST(rt0.c1 AS REAL))));
SELECT COUNT(*) FROM rt0 WHERE ((NOT ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT ((~ (rt0.c1)))));
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((((((((rt0.c0)AND(t0.c0)))OR(vt0.c0)))OR(0.15503702487822624)))AND(rt0.c2)))+(x'f823'))) ORDER BY ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))LIKE(((vt0.c1)!=(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(t0.c0)))OR(vt0.c0)))OR(0.15503702487822624)))AND(rt0.c2)))+(x'f823'))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))LIKE(((vt0.c1)<>(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((((((((rt0.c0)AND(t0.c0)))OR(vt0.c0)))OR(0.15503702487822624)))AND(rt0.c2)))+(x'f823'))) ORDER BY ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))LIKE(((vt0.c1)!=(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(t0.c0)))OR(vt0.c0)))OR(0.15503702487822624)))AND(rt0.c2)))+(x'f823'))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))LIKE(((vt0.c1)<>(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((((((((rt0.c0)AND(t0.c0)))OR(vt0.c0)))OR(0.15503702487822624)))AND(rt0.c2)))+(x'f823'))) ORDER BY ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))LIKE(((vt0.c1)!=(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((NOT (rt0.c1))) BETWEEN (rt0.c1 COLLATE RTRIM) AND (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY ((((rt0.c0)OR((~ (rt0.c2)))))OR(SQLITE_COMPILEOPTION_USED(rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1))) BETWEEN (rt0.c1 COLLATE RTRIM) AND (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c0)OR((~ (rt0.c2)))))OR(SQLITE_COMPILEOPTION_USED(rt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((NOT (rt0.c1))) BETWEEN (rt0.c1 COLLATE RTRIM) AND (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY ((((rt0.c0)OR((~ (rt0.c2)))))OR(SQLITE_COMPILEOPTION_USED(rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1))) BETWEEN (rt0.c1 COLLATE RTRIM) AND (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c0)OR((~ (rt0.c2)))))OR(SQLITE_COMPILEOPTION_USED(rt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((NOT (rt0.c1))) BETWEEN (rt0.c1 COLLATE RTRIM) AND (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY ((((rt0.c0)OR((~ (rt0.c2)))))OR(SQLITE_COMPILEOPTION_USED(rt0.c0)))  NULLS FIRST;
SELECT * FROM vt0 WHERE (0xffffffff91191eb6) ORDER BY (NOT (vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0xffffffff91191eb6) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM vt0 WHERE (0xffffffff91191eb6) ORDER BY (NOT (vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0xffffffff91191eb6) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM vt0 WHERE (0xffffffff91191eb6) ORDER BY (NOT (vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((TRIM(-1.906509806E9, vt0.c0))AND(((vt0.c0)>>(vt0.c1))))) ORDER BY (((((((((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))))OR(vt0.c1)))OR(CASE WHEN '' THEN vt0.c1 ELSE vt0.c0 END)))OR((NOT (vt0.c1)))))OR(((vt0.c0)+(vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(-1.906509806E9, vt0.c0))AND(((vt0.c0)>>(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))))OR(vt0.c1)))OR(CASE WHEN '' THEN vt0.c1 ELSE vt0.c0 END)))OR((NOT (vt0.c1)))))OR(((vt0.c0)+(vt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((TRIM(-1.906509806E9, vt0.c0))AND(((vt0.c0)>>(vt0.c1))))) ORDER BY (((((((((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))))OR(vt0.c1)))OR(CASE WHEN '' THEN vt0.c1 ELSE vt0.c0 END)))OR((NOT (vt0.c1)))))OR(((vt0.c0)+(vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(-1.906509806E9, vt0.c0))AND(((vt0.c0)>>(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))))OR(vt0.c1)))OR(CASE WHEN '' THEN vt0.c1 ELSE vt0.c0 END)))OR((NOT (vt0.c1)))))OR(((vt0.c0)+(vt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((TRIM(-1.906509806E9, vt0.c0))AND(((vt0.c0)>>(vt0.c1))))) ORDER BY (((((((((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))))OR(vt0.c1)))OR(CASE WHEN '' THEN vt0.c1 ELSE vt0.c0 END)))OR((NOT (vt0.c1)))))OR(((vt0.c0)+(vt0.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON NULL INNER JOIN vt0 ON ((((vt0.c0) ISNULL)) ISNULL) WHERE ((((0.6136054846043552) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ())) ORDER BY ((0.10034434602122388)LIKE(rt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.6136054846043552) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON NULL INNER JOIN vt0 ON ((((vt0.c0) ISNULL)) ISNULL) ORDER BY ((0.10034434602122388)LIKE(rt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON NULL INNER JOIN vt0 ON ((((vt0.c0) ISNULL)) ISNULL) WHERE ((((0.6136054846043552) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ())) ORDER BY ((0.10034434602122388)LIKE(rt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.6136054846043552) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON NULL INNER JOIN vt0 ON ((((vt0.c0) ISNULL)) ISNULL) ORDER BY ((0.10034434602122388)LIKE(rt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON NULL INNER JOIN vt0 ON ((((vt0.c0) ISNULL)) ISNULL) WHERE ((((0.6136054846043552) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ())) ORDER BY ((0.10034434602122388)LIKE(rt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c0))&(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT rt0.c0))&(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c0))&(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT rt0.c0))&(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c0))&(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((TYPEOF(vt0.c1)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(vt0.c1)) NOT NULL)) IS TRUE)  as count FROM rt0 NOT INDEXED, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((TYPEOF(vt0.c1)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(vt0.c1)) NOT NULL)) IS TRUE)  as count FROM rt0 NOT INDEXED, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((TYPEOF(vt0.c1)) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0)AND(vt0.c0)))<=(rt0.c0 COLLATE NOCASE))) ORDER BY (((rt0.c1)) BETWEEN ((CAST('H)' AS NUMERIC))) AND ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ASC  NULLS FIRST, CAST(HEX(0Xffffffffcb6506ae) AS BLOB)  NULLS LAST, (((((((((vt0.c1 IN ()))OR(((((rt0.c0)OR(0.8385426609330509)))AND(rt0.c2)))))OR('-221607047')))AND(TIME(rt0.c1, rt0.c2, x''))))OR((+ (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(vt0.c0)))<=(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1)) BETWEEN ((CAST('H)' AS NUMERIC))) AND ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ASC  NULLS FIRST, CAST(HEX(0xffffffffcb6506ae) AS BLOB)  NULLS LAST, (((((((((vt0.c1 IN ()))OR(((((rt0.c0)OR(0.8385426609330509)))AND(rt0.c2)))))OR('-221607047')))AND(TIME(rt0.c1, rt0.c2, x''))))OR((+ (rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0)AND(vt0.c0)))<=(rt0.c0 COLLATE NOCASE))) ORDER BY (((rt0.c1)) BETWEEN ((CAST('H)' AS NUMERIC))) AND ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ASC  NULLS FIRST, CAST(HEX(0Xffffffffcb6506ae) AS BLOB)  NULLS LAST, (((((((((vt0.c1 IN ()))OR(((((rt0.c0)OR(0.8385426609330509)))AND(rt0.c2)))))OR('-221607047')))AND(TIME(rt0.c1, rt0.c2, x''))))OR((+ (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(vt0.c0)))<=(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1)) BETWEEN ((CAST('H)' AS NUMERIC))) AND ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ASC  NULLS FIRST, CAST(HEX(0xffffffffcb6506ae) AS BLOB)  NULLS LAST, (((((((((vt0.c1 IN ()))OR(((((rt0.c0)OR(0.8385426609330509)))AND(rt0.c2)))))OR('-221607047')))AND(TIME(rt0.c1, rt0.c2, x''))))OR((+ (rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0)AND(vt0.c0)))<=(rt0.c0 COLLATE NOCASE))) ORDER BY (((rt0.c1)) BETWEEN ((CAST('H)' AS NUMERIC))) AND ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ASC  NULLS FIRST, CAST(HEX(0Xffffffffcb6506ae) AS BLOB)  NULLS LAST, (((((((((vt0.c1 IN ()))OR(((((rt0.c0)OR(0.8385426609330509)))AND(rt0.c2)))))OR('-221607047')))AND(TIME(rt0.c1, rt0.c2, x''))))OR((+ (rt0.c2)))) ASC;
SELECT ALL * FROM rt0, t0 WHERE (((IFNULL(DISTINCT rt0.c1, rt0.c2))LIKE(rt0.c0))) ORDER BY ABS(CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c1 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT rt0.c1, rt0.c2))LIKE(rt0.c0))) IS TRUE)  as count FROM rt0, t0 ORDER BY ABS(CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c1 END) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (((IFNULL(DISTINCT rt0.c1, rt0.c2))LIKE(rt0.c0))) ORDER BY ABS(CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c1 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT rt0.c1, rt0.c2))LIKE(rt0.c0))) IS TRUE)  as count FROM rt0, t0 ORDER BY ABS(CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c1 END) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (((IFNULL(DISTINCT rt0.c1, rt0.c2))LIKE(rt0.c0))) ORDER BY ABS(CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c1 END) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((rt0.c1)<=(t0.c0)) IN ())) ORDER BY CAST(((vt0.c0)>=(rt0.c2)) AS NUMERIC)  NULLS FIRST, ((NULL)*(x'')) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)<=(t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(((vt0.c0)>=(rt0.c2)) AS NUMERIC)  NULLS FIRST, ((NULL)*(x'')) DESC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((rt0.c1)<=(t0.c0)) IN ())) ORDER BY CAST(((vt0.c0)>=(rt0.c2)) AS NUMERIC)  NULLS FIRST, ((NULL)*(x'')) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)<=(t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(((vt0.c0)>=(rt0.c2)) AS NUMERIC)  NULLS FIRST, ((NULL)*(x'')) DESC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((rt0.c1)<=(t0.c0)) IN ())) ORDER BY CAST(((vt0.c0)>=(rt0.c2)) AS NUMERIC)  NULLS FIRST, ((NULL)*(x'')) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (COALESCE(DISTINCT ((((((((vt0.c1)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(0.3808799078681725)), ((rt0.c0)OR(rt0.c0)))) ORDER BY CAST(((rt0.c0) NOT NULL) AS BLOB)  NULLS LAST, ((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((((((((vt0.c1)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(0.3808799078681725)), ((rt0.c0)OR(rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c0) NOT NULL) AS BLOB)  NULLS LAST, ((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))) ISNULL) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (COALESCE(DISTINCT ((((((((vt0.c1)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(0.3808799078681725)), ((rt0.c0)OR(rt0.c0)))) ORDER BY CAST(((rt0.c0) NOT NULL) AS BLOB)  NULLS LAST, ((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((((((((vt0.c1)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(0.3808799078681725)), ((rt0.c0)OR(rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c0) NOT NULL) AS BLOB)  NULLS LAST, ((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))) ISNULL) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (COALESCE(DISTINCT ((((((((vt0.c1)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(0.3808799078681725)), ((rt0.c0)OR(rt0.c0)))) ORDER BY CAST(((rt0.c0) NOT NULL) AS BLOB)  NULLS LAST, ((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))) ISNULL) ASC;
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((UNLIKELY(t0.c0)) IS TRUE) RIGHT OUTER JOIN vt0 ON vt0.c1 WHERE (LIKELY(DISTINCT TYPEOF(vt0.c1))) ORDER BY CAST(t0.c0 COLLATE RTRIM AS REAL);
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT TYPEOF(vt0.c1))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((UNLIKELY(t0.c0)) IS TRUE) RIGHT OUTER JOIN vt0 ON vt0.c1 ORDER BY CAST(t0.c0 COLLATE RTRIM AS REAL));
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((UNLIKELY(t0.c0)) IS TRUE) RIGHT OUTER JOIN vt0 ON vt0.c1 WHERE (LIKELY(DISTINCT TYPEOF(vt0.c1))) ORDER BY CAST(t0.c0 COLLATE RTRIM AS REAL);
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT TYPEOF(vt0.c1))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((UNLIKELY(t0.c0)) IS TRUE) RIGHT OUTER JOIN vt0 ON vt0.c1 ORDER BY CAST(t0.c0 COLLATE RTRIM AS REAL));
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((UNLIKELY(t0.c0)) IS TRUE) RIGHT OUTER JOIN vt0 ON vt0.c1 WHERE (LIKELY(DISTINCT TYPEOF(vt0.c1))) ORDER BY CAST(t0.c0 COLLATE RTRIM AS REAL);
SELECT * FROM rt0 CROSS JOIN t0 ON ((((((((((vt0.c0)-(vt0.c0)))OR(('447189568' IN ()))))AND(IFNULL(rt0.c2, rt0.c1))))OR(((rt0.c0)>>(vt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) RIGHT OUTER JOIN vt0 ON ((((((vt0.c1)AND(t0.c0)))AND(rt0.c0)))&(((rt0.c2)||(vt0.c1)))) WHERE (((((((NULL) BETWEEN (rt0.c1) AND (t0.c0)))OR(((((rt0.c1)AND(rt0.c0)))AND(NULL)))))OR(CASE vt0.c1  WHEN '1727916887' THEN t0.c0 ELSE vt0.c0 END))) ORDER BY (((((vt0.c1)IS NOT(vt0.c1))))>((0.687006813617477))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL) BETWEEN (rt0.c1) AND (t0.c0)))OR(((((rt0.c1)AND(rt0.c0)))AND(NULL)))))OR(CASE vt0.c1  WHEN '1727916887' THEN t0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((((((((vt0.c0)-(vt0.c0)))OR(('447189568' IN ()))))AND(IFNULL(rt0.c2, rt0.c1))))OR(((rt0.c0)>>(vt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) RIGHT OUTER JOIN vt0 ON ((((((vt0.c1)AND(t0.c0)))AND(rt0.c0)))&(((rt0.c2)||(vt0.c1)))) ORDER BY (((((vt0.c1)IS NOT(vt0.c1))))>((0.687006813617477))) DESC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN t0 ON ((((((((((vt0.c0)-(vt0.c0)))OR(('447189568' IN ()))))AND(IFNULL(rt0.c2, rt0.c1))))OR(((rt0.c0)>>(vt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) RIGHT OUTER JOIN vt0 ON ((((((vt0.c1)AND(t0.c0)))AND(rt0.c0)))&(((rt0.c2)||(vt0.c1)))) WHERE (((((((NULL) BETWEEN (rt0.c1) AND (t0.c0)))OR(((((rt0.c1)AND(rt0.c0)))AND(NULL)))))OR(CASE vt0.c1  WHEN '1727916887' THEN t0.c0 ELSE vt0.c0 END))) ORDER BY (((((vt0.c1)IS NOT(vt0.c1))))>((0.687006813617477))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL) BETWEEN (rt0.c1) AND (t0.c0)))OR(((((rt0.c1)AND(rt0.c0)))AND(NULL)))))OR(CASE vt0.c1  WHEN '1727916887' THEN t0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((((((((vt0.c0)-(vt0.c0)))OR(('447189568' IN ()))))AND(IFNULL(rt0.c2, rt0.c1))))OR(((rt0.c0)>>(vt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) RIGHT OUTER JOIN vt0 ON ((((((vt0.c1)AND(t0.c0)))AND(rt0.c0)))&(((rt0.c2)||(vt0.c1)))) ORDER BY (((((vt0.c1)IS NOT(vt0.c1))))>((0.687006813617477))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE ((((vt0.c1 IN ())) ISNULL)) ORDER BY ((((vt0.c0)+(rt0.c0))) BETWEEN (((vt0.c1)IS NOT(NULL))) AND (((0.16445771574071366) IS FALSE))) DESC  NULLS LAST, rt0.c0, (((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c0)))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)+(rt0.c0))) BETWEEN (((vt0.c1)IS NOT(NULL))) AND (((0.16445771574071366) IS FALSE))) DESC  NULLS LAST, rt0.c0, (((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c0)))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE ((((vt0.c1 IN ())) ISNULL)) ORDER BY ((((vt0.c0)+(rt0.c0))) BETWEEN (((vt0.c1)IS NOT(NULL))) AND (((0.16445771574071366) IS FALSE))) DESC  NULLS LAST, rt0.c0, (((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c0)))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)+(rt0.c0))) BETWEEN (((vt0.c1)IS NOT(NULL))) AND (((0.16445771574071366) IS FALSE))) DESC  NULLS LAST, rt0.c0, (((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c0)))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE ((((vt0.c1 IN ())) ISNULL)) ORDER BY ((((vt0.c0)+(rt0.c0))) BETWEEN (((vt0.c1)IS NOT(NULL))) AND (((0.16445771574071366) IS FALSE))) DESC  NULLS LAST, rt0.c0, (((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c0)))) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (ABS(DISTINCT ((vt0.c0)GLOB(vt0.c1)))) ORDER BY TYPEOF(t0.c0 COLLATE RTRIM)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((vt0.c0)GLOB(vt0.c1)))) IS TRUE)  as count FROM vt0, t0 ORDER BY TYPEOF(t0.c0 COLLATE RTRIM)  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (ABS(DISTINCT ((vt0.c0)GLOB(vt0.c1)))) ORDER BY TYPEOF(t0.c0 COLLATE RTRIM)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((vt0.c0)GLOB(vt0.c1)))) IS TRUE)  as count FROM vt0, t0 ORDER BY TYPEOF(t0.c0 COLLATE RTRIM)  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (ABS(DISTINCT ((vt0.c0)GLOB(vt0.c1)))) ORDER BY TYPEOF(t0.c0 COLLATE RTRIM)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (x'') ORDER BY (- (x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (x'')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (x'') ORDER BY (- (x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (x'')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (x'') ORDER BY (- (x'')) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((vt0.c1 IN ()))-(((((rt0.c1)OR(vt0.c1)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))-(((((rt0.c1)OR(vt0.c1)))AND(t0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((vt0.c1 IN ()))-(((((rt0.c1)OR(vt0.c1)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))-(((((rt0.c1)OR(vt0.c1)))AND(t0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((vt0.c1 IN ()))-(((((rt0.c1)OR(vt0.c1)))AND(t0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))+((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))+((- (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))+((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))+((- (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))+((- (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM rt0, vt0 WHERE (vt0.c0) ORDER BY (((x'' IN ()))*(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((x'' IN ()))*(rt0.c1))  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (vt0.c0) ORDER BY (((x'' IN ()))*(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((x'' IN ()))*(rt0.c1))  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (vt0.c0) ORDER BY (((x'' IN ()))*(rt0.c1))  NULLS LAST;
SELECT ALL * FROM vt0 INDEXED BY i10, rt0 WHERE (('-400797394' IN ())) ORDER BY ((((((rt0.c0)AND(rt0.c1)))AND(vt0.c1))) BETWEEN ((rt0.c0 IN (rt0.c0, x''))) AND ((('1166004521')IS NOT(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('-400797394' IN ())) IS TRUE)  as count FROM vt0 INDEXED BY i10, rt0 ORDER BY ((((((rt0.c0)AND(rt0.c1)))AND(vt0.c1))) BETWEEN ((rt0.c0 IN (rt0.c0, x''))) AND ((('1166004521')IS NOT(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0 INDEXED BY i10, rt0 WHERE (('-400797394' IN ())) ORDER BY ((((((rt0.c0)AND(rt0.c1)))AND(vt0.c1))) BETWEEN ((rt0.c0 IN (rt0.c0, x''))) AND ((('1166004521')IS NOT(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('-400797394' IN ())) IS TRUE)  as count FROM vt0 INDEXED BY i10, rt0 ORDER BY ((((((rt0.c0)AND(rt0.c1)))AND(vt0.c1))) BETWEEN ((rt0.c0 IN (rt0.c0, x''))) AND ((('1166004521')IS NOT(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (677324797);
SELECT SUM(count) FROM (SELECT ALL ((677324797) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (677324797);
SELECT SUM(count) FROM (SELECT ALL ((677324797) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (677324797);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ())) ORDER BY ((((((vt0.c1) IS TRUE))OR(((vt0.c0)<(vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN x'138d' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1) IS TRUE))OR(((vt0.c0)<(vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN x'138d' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ())) ORDER BY ((((((vt0.c1) IS TRUE))OR(((vt0.c0)<(vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN x'138d' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1) IS TRUE))OR(((vt0.c0)<(vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN x'138d' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ())) ORDER BY ((((((vt0.c1) IS TRUE))OR(((vt0.c0)<(vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN x'138d' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE ((RTRIM(NULL) IN ())) ORDER BY '-883858478' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((RTRIM(NULL) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY '-883858478' ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((RTRIM(NULL) IN ())) ORDER BY '-883858478' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((RTRIM(NULL) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY '-883858478' ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((RTRIM(NULL) IN ())) ORDER BY '-883858478' ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR('-541594080')))AND(t0.c0)))))AND(t0.c0)))AND((+ (t0.c0)))))OR(x'44ea')));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR('-541594080')))AND(t0.c0)))))AND(t0.c0)))AND((+ (t0.c0)))))OR(x'44ea'))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR('-541594080')))AND(t0.c0)))))AND(t0.c0)))AND((+ (t0.c0)))))OR(x'44ea')));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR('-541594080')))AND(t0.c0)))))AND(t0.c0)))AND((+ (t0.c0)))))OR(x'44ea'))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR('-541594080')))AND(t0.c0)))))AND(t0.c0)))AND((+ (t0.c0)))))OR(x'44ea')));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(x'' AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(x'' AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(x'' AS INTEGER));
SELECT * FROM t0, rt0 NOT INDEXED, vt0 WHERE ((~ (((vt0.c1)<=(vt0.c1))))) ORDER BY ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c1)))>(((vt0.c1)>=(rt0.c0)))) ASC  NULLS LAST, ((rt0.c1 COLLATE RTRIM)*(((vt0.c1)IS NOT(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c1)<=(vt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c1)))>(((vt0.c1)>=(rt0.c0)))) ASC  NULLS LAST, ((rt0.c1 COLLATE RTRIM)*(((vt0.c1)IS NOT(rt0.c0)))) ASC  NULLS LAST);
SELECT * FROM t0, rt0 NOT INDEXED, vt0 WHERE ((~ (((vt0.c1)<=(vt0.c1))))) ORDER BY ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c1)))>(((vt0.c1)>=(rt0.c0)))) ASC  NULLS LAST, ((rt0.c1 COLLATE RTRIM)*(((vt0.c1)IS NOT(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c1)<=(vt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c1)))>(((vt0.c1)>=(rt0.c0)))) ASC  NULLS LAST, ((rt0.c1 COLLATE RTRIM)*(((vt0.c1)IS NOT(rt0.c0)))) ASC  NULLS LAST);
SELECT * FROM t0, rt0 NOT INDEXED, vt0 WHERE ((~ (((vt0.c1)<=(vt0.c1))))) ORDER BY ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c1)))>(((vt0.c1)>=(rt0.c0)))) ASC  NULLS LAST, ((rt0.c1 COLLATE RTRIM)*(((vt0.c1)IS NOT(rt0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND ('')) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (rt0.c1) AND ('')) AS BLOB)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND ('')) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (rt0.c1) AND ('')) AS BLOB)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND ('')) AS BLOB));
SELECT ALL * FROM rt0 WHERE (CASE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0))  WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c2)>>(rt0.c2)) ELSE UPPER(rt0.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0))  WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c2)>>(rt0.c2)) ELSE UPPER(rt0.c2) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0))  WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c2)>>(rt0.c2)) ELSE UPPER(rt0.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0))  WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c2)>>(rt0.c2)) ELSE UPPER(rt0.c2) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0))  WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c2)>>(rt0.c2)) ELSE UPPER(rt0.c2) END);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE ((- (CAST(t0.c0 AS NUMERIC)))) ORDER BY (((t0.c0)) NOT BETWEEN ((json_extract(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) AND ((t0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) NOT BETWEEN ((json_extract(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) AND ((t0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE ((- (CAST(t0.c0 AS NUMERIC)))) ORDER BY (((t0.c0)) NOT BETWEEN ((json_extract(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) AND ((t0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) NOT BETWEEN ((json_extract(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) AND ((t0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((vt0.c1)*(vt0.c1))) BETWEEN (((rt0.c2) NOTNULL)) AND (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN t0.c0 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)*(vt0.c1))) BETWEEN (((rt0.c2) NOTNULL)) AND (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN t0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((vt0.c1)*(vt0.c1))) BETWEEN (((rt0.c2) NOTNULL)) AND (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN t0.c0 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)*(vt0.c1))) BETWEEN (((rt0.c2) NOTNULL)) AND (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN t0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((vt0.c1)*(vt0.c1))) BETWEEN (((rt0.c2) NOTNULL)) AND (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN t0.c0 THEN rt0.c2 END)));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((CASE vt0.c0  WHEN '-1653797477' THEN vt0.c1 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END)AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))) ORDER BY ((x'')GLOB(((vt0.c1)&(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN '-1653797477' THEN vt0.c1 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END)AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((x'')GLOB(((vt0.c1)&(rt0.c0)))));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((CASE vt0.c0  WHEN '-1653797477' THEN vt0.c1 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END)AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))) ORDER BY ((x'')GLOB(((vt0.c1)&(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN '-1653797477' THEN vt0.c1 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END)AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((x'')GLOB(((vt0.c1)&(rt0.c0)))));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((CASE vt0.c0  WHEN '-1653797477' THEN vt0.c1 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END)AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))) ORDER BY ((x'')GLOB(((vt0.c1)&(rt0.c0))));
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (UNLIKELY(DISTINCT ((rt0.c1)=(t0.c0)))) ORDER BY ((((((((((vt0.c0)+(t0.c0)))AND(vt0.c1 COLLATE BINARY)))AND(NULLIF(rt0.c0, vt0.c1))))AND(((vt0.c1)AND(vt0.c0)))))OR(((((((((rt0.c2)OR(t0.c0)))AND(rt0.c2)))OR(x'')))OR(vt0.c0)))), (+ ('+ڮ')) ASC, CASE WHEN (NOT ('J3')) THEN ((rt0.c0)||(vt0.c1)) ELSE t0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((rt0.c1)==(t0.c0)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((((((((vt0.c0)+(t0.c0)))AND(vt0.c1 COLLATE BINARY)))AND(NULLIF(rt0.c0, vt0.c1))))AND(((vt0.c1)AND(vt0.c0)))))OR(((((((((rt0.c2)OR(t0.c0)))AND(rt0.c2)))OR(x'')))OR(vt0.c0)))), (+ ('+ڮ')) ASC, CASE WHEN (NOT ('J3')) THEN ((rt0.c0)||(vt0.c1)) ELSE t0.c0 END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (UNLIKELY(DISTINCT ((rt0.c1)=(t0.c0)))) ORDER BY ((((((((((vt0.c0)+(t0.c0)))AND(vt0.c1 COLLATE BINARY)))AND(NULLIF(rt0.c0, vt0.c1))))AND(((vt0.c1)AND(vt0.c0)))))OR(((((((((rt0.c2)OR(t0.c0)))AND(rt0.c2)))OR(x'')))OR(vt0.c0)))), (+ ('+ڮ')) ASC, CASE WHEN (NOT ('J3')) THEN ((rt0.c0)||(vt0.c1)) ELSE t0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((rt0.c1)==(t0.c0)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((((((((vt0.c0)+(t0.c0)))AND(vt0.c1 COLLATE BINARY)))AND(NULLIF(rt0.c0, vt0.c1))))AND(((vt0.c1)AND(vt0.c0)))))OR(((((((((rt0.c2)OR(t0.c0)))AND(rt0.c2)))OR(x'')))OR(vt0.c0)))), (+ ('+ڮ')) ASC, CASE WHEN (NOT ('J3')) THEN ((rt0.c0)||(vt0.c1)) ELSE t0.c0 END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (UNLIKELY(DISTINCT ((rt0.c1)=(t0.c0)))) ORDER BY ((((((((((vt0.c0)+(t0.c0)))AND(vt0.c1 COLLATE BINARY)))AND(NULLIF(rt0.c0, vt0.c1))))AND(((vt0.c1)AND(vt0.c0)))))OR(((((((((rt0.c2)OR(t0.c0)))AND(rt0.c2)))OR(x'')))OR(vt0.c0)))), (+ ('+ڮ')) ASC, CASE WHEN (NOT ('J3')) THEN ((rt0.c0)||(vt0.c1)) ELSE t0.c0 END  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE (((CAST(rt0.c1 AS TEXT))LIKE(TRIM(DISTINCT rt0.c1, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT))LIKE(TRIM(DISTINCT rt0.c1, rt0.c0)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((CAST(rt0.c1 AS TEXT))LIKE(TRIM(DISTINCT rt0.c1, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT))LIKE(TRIM(DISTINCT rt0.c1, rt0.c0)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((CAST(rt0.c1 AS TEXT))LIKE(TRIM(DISTINCT rt0.c1, rt0.c0))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((((t0.c0)AND(rt0.c1)))OR(rt0.c2)) COLLATE RTRIM WHERE (((((rt0.c2 IN (rt0.c1))))<((rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 IN (rt0.c1))))<((rt0.c0)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((((t0.c0)AND(rt0.c1)))OR(rt0.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((((t0.c0)AND(rt0.c1)))OR(rt0.c2)) COLLATE RTRIM WHERE (((((rt0.c2 IN (rt0.c1))))<((rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 IN (rt0.c1))))<((rt0.c0)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((((t0.c0)AND(rt0.c1)))OR(rt0.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((((t0.c0)AND(rt0.c1)))OR(rt0.c2)) COLLATE RTRIM WHERE (((((rt0.c2 IN (rt0.c1))))<((rt0.c0))));
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((((~ (rt0.c0)))AND((rt0.c2 IN ()))))OR(CAST(rt0.c0 AS NUMERIC)))) ORDER BY (('971262247') NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))) AND (ABS(x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt0.c0)))AND((rt0.c2 IN ()))))OR(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (('971262247') NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))) AND (ABS(x'')))  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((((~ (rt0.c0)))AND((rt0.c2 IN ()))))OR(CAST(rt0.c0 AS NUMERIC)))) ORDER BY (('971262247') NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))) AND (ABS(x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt0.c0)))AND((rt0.c2 IN ()))))OR(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (('971262247') NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))) AND (ABS(x'')))  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((((~ (rt0.c0)))AND((rt0.c2 IN ()))))OR(CAST(rt0.c0 AS NUMERIC)))) ORDER BY (('971262247') NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))) AND (ABS(x'')))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CAST(ABS(vt0.c0) AS NUMERIC) RIGHT OUTER JOIN rt0 ON ((x'' IN (vt0.c0, rt0.c1)) IN ()) WHERE (((((t0.c0)>>(rt0.c2)))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>>(rt0.c2)))AND(rt0.c2))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST(ABS(vt0.c0) AS NUMERIC) RIGHT OUTER JOIN rt0 ON ((x'' IN (vt0.c0, rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CAST(ABS(vt0.c0) AS NUMERIC) RIGHT OUTER JOIN rt0 ON ((x'' IN (vt0.c0, rt0.c1)) IN ()) WHERE (((((t0.c0)>>(rt0.c2)))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>>(rt0.c2)))AND(rt0.c2))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST(ABS(vt0.c0) AS NUMERIC) RIGHT OUTER JOIN rt0 ON ((x'' IN (vt0.c0, rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CAST(ABS(vt0.c0) AS NUMERIC) RIGHT OUTER JOIN rt0 ON ((x'' IN (vt0.c0, rt0.c1)) IN ()) WHERE (((((t0.c0)>>(rt0.c2)))AND(rt0.c2)));
SELECT * FROM vt0, t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) ISNULL));
SELECT ALL * FROM rt0 WHERE (((CHAR(rt0.c0)) IS FALSE)) ORDER BY ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR(rt0.c0 COLLATE BINARY)))OR(0xffffffffc0dfde62)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CHAR(rt0.c0)) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR(rt0.c0 COLLATE BINARY)))OR(0Xffffffffc0dfde62)) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CHAR(rt0.c0)) IS FALSE)) ORDER BY ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR(rt0.c0 COLLATE BINARY)))OR(0xffffffffc0dfde62)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CHAR(rt0.c0)) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR(rt0.c0 COLLATE BINARY)))OR(0Xffffffffc0dfde62)) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CHAR(rt0.c0)) IS FALSE)) ORDER BY ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR(rt0.c0 COLLATE BINARY)))OR(0xffffffffc0dfde62)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((NOT (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((NOT (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((NOT (vt0.c0)) IN ()));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY (- (rt0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c0)) COLLATE RTRIM DESC);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY (- (rt0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c0)) COLLATE RTRIM DESC);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY (- (rt0.c0)) COLLATE RTRIM DESC;
SELECT * FROM t0, vt0 WHERE ((((((('0.6425215826373487')IS(t0.c0)))AND(t0.c0)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((('0.6425215826373487')IS(t0.c0)))AND(t0.c0)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((('0.6425215826373487')IS(t0.c0)))AND(t0.c0)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((('0.6425215826373487')IS(t0.c0)))AND(t0.c0)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((('0.6425215826373487')IS(t0.c0)))AND(t0.c0)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))));
SELECT COUNT(*) FROM t0 INDEXED BY i10 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0)+(t0.c0)))) AND (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))) ORDER BY CAST(CAST(t0.c0 AS INTEGER) AS REAL);
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((((t0.c0)+(t0.c0)))) AND (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))) IS TRUE)  as count FROM t0 INDEXED BY i10 ORDER BY CAST(CAST(t0.c0 AS INTEGER) AS REAL));
SELECT COUNT(*) FROM t0 INDEXED BY i10 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0)+(t0.c0)))) AND (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))) ORDER BY CAST(CAST(t0.c0 AS INTEGER) AS REAL);
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((((t0.c0)+(t0.c0)))) AND (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))) IS TRUE)  as count FROM t0 INDEXED BY i10 ORDER BY CAST(CAST(t0.c0 AS INTEGER) AS REAL));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (((((rt0.c1)/(rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)/(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (((((rt0.c1)/(rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)/(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (((((rt0.c1)/(rt0.c1))) ISNULL));
SELECT ALL * FROM rt0 WHERE ((~ (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ (rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (NULL);
SELECT * FROM rt0, t0 FULL OUTER JOIN vt0 ON (((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)), ((0X57d33b33) IS FALSE), ((vt0.c1) BETWEEN (t0.c0) AND (rt0.c1)))) AND ((((((vt0.c0)OR(vt0.c1)))OR(rt0.c0)), ((-4.00797394E8)OR(rt0.c1)), ((vt0.c1)||(rt0.c2))))) WHERE ((t0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON (((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)), ((0x57d33b33) IS FALSE), ((vt0.c1) BETWEEN (t0.c0) AND (rt0.c1)))) AND ((((((vt0.c0)OR(vt0.c1)))OR(rt0.c0)), ((-4.00797394E8)OR(rt0.c1)), ((vt0.c1)||(rt0.c2))))));
SELECT * FROM rt0, t0 FULL OUTER JOIN vt0 ON (((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)), ((0X57d33b33) IS FALSE), ((vt0.c1) BETWEEN (t0.c0) AND (rt0.c1)))) AND ((((((vt0.c0)OR(vt0.c1)))OR(rt0.c0)), ((-4.00797394E8)OR(rt0.c1)), ((vt0.c1)||(rt0.c2))))) WHERE ((t0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON (((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)), ((0x57d33b33) IS FALSE), ((vt0.c1) BETWEEN (t0.c0) AND (rt0.c1)))) AND ((((((vt0.c0)OR(vt0.c1)))OR(rt0.c0)), ((-4.00797394E8)OR(rt0.c1)), ((vt0.c1)||(rt0.c2))))));
SELECT * FROM rt0, t0 FULL OUTER JOIN vt0 ON (((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)), ((0X57d33b33) IS FALSE), ((vt0.c1) BETWEEN (t0.c0) AND (rt0.c1)))) AND ((((((vt0.c0)OR(vt0.c1)))OR(rt0.c0)), ((-4.00797394E8)OR(rt0.c1)), ((vt0.c1)||(rt0.c2))))) WHERE ((t0.c0 COLLATE NOCASE IN ()));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c1 WHERE (TRIM((('1946196565')||(vt0.c1)), ((vt0.c1)IS NOT(vt0.c1)))) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN (vt0.c0 IN ()) THEN CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END END, (((((vt0.c1))<>((vt0.c1))))<>(t0.c0 COLLATE NOCASE)), vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM((('1946196565')||(vt0.c1)), ((vt0.c1)IS NOT(vt0.c1)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c1 ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN (vt0.c0 IN ()) THEN CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END END, (((((vt0.c1))!=((vt0.c1))))!=(t0.c0 COLLATE NOCASE)), vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c1 WHERE (TRIM((('1946196565')||(vt0.c1)), ((vt0.c1)IS NOT(vt0.c1)))) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN (vt0.c0 IN ()) THEN CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END END, (((((vt0.c1))<>((vt0.c1))))<>(t0.c0 COLLATE NOCASE)), vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM((('1946196565')||(vt0.c1)), ((vt0.c1)IS NOT(vt0.c1)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c1 ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN (vt0.c0 IN ()) THEN CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END END, (((((vt0.c1))!=((vt0.c1))))!=(t0.c0 COLLATE NOCASE)), vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c1 WHERE (TRIM((('1946196565')||(vt0.c1)), ((vt0.c1)IS NOT(vt0.c1)))) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN (vt0.c0 IN ()) THEN CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END END, (((((vt0.c1))<>((vt0.c1))))<>(t0.c0 COLLATE NOCASE)), vt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((vt0.c1) BETWEEN ('-1906509806') AND (vt0.c0)))<<(vt0.c1)) RIGHT OUTER JOIN t0 ON 0.43625238490842577 WHERE (LOWER(DISTINCT rt0.c2) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT rt0.c2) COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((vt0.c1) BETWEEN ('-1906509806') AND (vt0.c0)))<<(vt0.c1)) RIGHT OUTER JOIN t0 ON 0.43625238490842577);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((vt0.c1) BETWEEN ('-1906509806') AND (vt0.c0)))<<(vt0.c1)) RIGHT OUTER JOIN t0 ON 0.43625238490842577 WHERE (LOWER(DISTINCT rt0.c2) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT rt0.c2) COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((vt0.c1) BETWEEN ('-1906509806') AND (vt0.c0)))<<(vt0.c1)) RIGHT OUTER JOIN t0 ON 0.43625238490842577);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((vt0.c1) BETWEEN ('-1906509806') AND (vt0.c0)))<<(vt0.c1)) RIGHT OUTER JOIN t0 ON 0.43625238490842577 WHERE (LOWER(DISTINCT rt0.c2) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS REAL))OR(((vt0.c1) NOT BETWEEN (x'') AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL))OR(((vt0.c1) NOT BETWEEN (x'') AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS REAL))OR(((vt0.c1) NOT BETWEEN (x'') AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL))OR(((vt0.c1) NOT BETWEEN (x'') AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS REAL))OR(((vt0.c1) NOT BETWEEN (x'') AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('yOC膕Q>')&(-630664697))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (LIKELIHOOD(rt0.c2, 0.5790232868080708)))) ORDER BY (- ((~ (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('yOC膕Q>')&(-630664697))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (LIKELIHOOD(rt0.c2, 0.5790232868080708)))) IS TRUE)  as count FROM rt0 ORDER BY (- ((~ (rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('yOC膕Q>')&(-630664697))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (LIKELIHOOD(rt0.c2, 0.5790232868080708)))) ORDER BY (- ((~ (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('yOC膕Q>')&(-630664697))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (LIKELIHOOD(rt0.c2, 0.5790232868080708)))) IS TRUE)  as count FROM rt0 ORDER BY (- ((~ (rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('yOC膕Q>')&(-630664697))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (LIKELIHOOD(rt0.c2, 0.5790232868080708)))) ORDER BY (- ((~ (rt0.c2)))) DESC;
SELECT * FROM rt0, t0 WHERE (CASE WHEN CASE rt0.c1  WHEN NULL THEN rt0.c1 END THEN ((t0.c0)/(t0.c0)) WHEN CAST(rt0.c1 AS TEXT) THEN 0xffffffffd53175fe WHEN CAST(t0.c0 AS INTEGER) THEN ((x'') IS TRUE) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c1  WHEN NULL THEN rt0.c1 END THEN ((t0.c0)/(t0.c0)) WHEN CAST(rt0.c1 AS TEXT) THEN 0Xffffffffd53175fe WHEN CAST(t0.c0 AS INTEGER) THEN ((x'') IS TRUE) ELSE NULL END) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CASE WHEN CASE rt0.c1  WHEN NULL THEN rt0.c1 END THEN ((t0.c0)/(t0.c0)) WHEN CAST(rt0.c1 AS TEXT) THEN 0xffffffffd53175fe WHEN CAST(t0.c0 AS INTEGER) THEN ((x'') IS TRUE) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c1  WHEN NULL THEN rt0.c1 END THEN ((t0.c0)/(t0.c0)) WHEN CAST(rt0.c1 AS TEXT) THEN 0Xffffffffd53175fe WHEN CAST(t0.c0 AS INTEGER) THEN ((x'') IS TRUE) ELSE NULL END) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CASE WHEN CASE rt0.c1  WHEN NULL THEN rt0.c1 END THEN ((t0.c0)/(t0.c0)) WHEN CAST(rt0.c1 AS TEXT) THEN 0xffffffffd53175fe WHEN CAST(t0.c0 AS INTEGER) THEN ((x'') IS TRUE) ELSE NULL END);
SELECT * FROM vt0 WHERE (CAST(((vt0.c1) ISNULL) AS BLOB)) ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0))=((vt0.c1))))) AND (((vt0.c1 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0))==((vt0.c1))))) AND (((vt0.c1 IN ()))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(((vt0.c1) ISNULL) AS BLOB)) ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0))=((vt0.c1))))) AND (((vt0.c1 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0))==((vt0.c1))))) AND (((vt0.c1 IN ()))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(((vt0.c1) ISNULL) AS BLOB)) ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0))=((vt0.c1))))) AND (((vt0.c1 IN ()))))  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((~ ('1221596869')))/(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN 'K刌' WHEN rt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((~ ('1221596869')))/(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN 'K刌' WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((~ ('1221596869')))/(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN 'K刌' WHEN rt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((~ ('1221596869')))/(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN 'K刌' WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((~ ('1221596869')))/(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN 'K刌' WHEN rt0.c0 THEN rt0.c0 END)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) COLLATE BINARY) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY NULL);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) COLLATE BINARY) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY NULL);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) COLLATE BINARY) ORDER BY NULL;
SELECT ALL * FROM rt0 WHERE ((NOT (((NULL)&(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((NULL)&(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (((NULL)&(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((NULL)&(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (((NULL)&(rt0.c2)))));
SELECT * FROM vt0 CROSS JOIN rt0 ON (((NOT (rt0.c2)))<(((rt0.c1) BETWEEN ('') AND (rt0.c2)))) WHERE (((((vt0.c0)<=(vt0.c1)))>>((- (vt0.c0))))) ORDER BY (((rt0.c1)) BETWEEN ((((vt0.c0)>(x'')))) AND (((vt0.c1 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c1)))>>((- (vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((NOT (rt0.c2)))<(((rt0.c1) BETWEEN ('') AND (rt0.c2)))) ORDER BY (((rt0.c1)) BETWEEN ((((vt0.c0)>(x'')))) AND (((vt0.c1 IN ())))) DESC);
SELECT * FROM vt0 CROSS JOIN rt0 ON (((NOT (rt0.c2)))<(((rt0.c1) BETWEEN ('') AND (rt0.c2)))) WHERE (((((vt0.c0)<=(vt0.c1)))>>((- (vt0.c0))))) ORDER BY (((rt0.c1)) BETWEEN ((((vt0.c0)>(x'')))) AND (((vt0.c1 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c1)))>>((- (vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((NOT (rt0.c2)))<(((rt0.c1) BETWEEN ('') AND (rt0.c2)))) ORDER BY (((rt0.c1)) BETWEEN ((((vt0.c0)>(x'')))) AND (((vt0.c1 IN ())))) DESC);
SELECT * FROM vt0 CROSS JOIN rt0 ON (((NOT (rt0.c2)))<(((rt0.c1) BETWEEN ('') AND (rt0.c2)))) WHERE (((((vt0.c0)<=(vt0.c1)))>>((- (vt0.c0))))) ORDER BY (((rt0.c1)) BETWEEN ((((vt0.c0)>(x'')))) AND (((vt0.c1 IN ())))) DESC;
SELECT ALL * FROM vt0, t0, rt0 WHERE (-7.107146E8) ORDER BY ((((((((('18754017' IN ()))OR(UNICODE(rt0.c0))))OR(((rt0.c2) NOTNULL))))OR((+ (x'0033')))))AND(rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((-7.107146E8) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((((((('18754017' IN ()))OR(UNICODE(rt0.c0))))OR(((rt0.c2) NOTNULL))))OR((+ (x'0033')))))AND(rt0.c2 COLLATE BINARY)));
SELECT ALL * FROM vt0, t0, rt0 WHERE (-7.107146E8) ORDER BY ((((((((('18754017' IN ()))OR(UNICODE(rt0.c0))))OR(((rt0.c2) NOTNULL))))OR((+ (x'0033')))))AND(rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((-7.107146E8) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((((((('18754017' IN ()))OR(UNICODE(rt0.c0))))OR(((rt0.c2) NOTNULL))))OR((+ (x'0033')))))AND(rt0.c2 COLLATE BINARY)));
SELECT ALL * FROM vt0, t0, rt0 WHERE (-7.107146E8) ORDER BY ((((((((('18754017' IN ()))OR(UNICODE(rt0.c0))))OR(((rt0.c2) NOTNULL))))OR((+ (x'0033')))))AND(rt0.c2 COLLATE BINARY));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((vt0.c1) BETWEEN (rt0.c1) AND (-1325340004)))AND(CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND((+ (x'')))))OR(UPPER(vt0.c0))))OR(rtreenode(rt0.c2, rt0.c0)))) ORDER BY CAST(((vt0.c1)|(rt0.c2)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1) BETWEEN (rt0.c1) AND (-1325340004)))AND(CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND((+ (x'')))))OR(UPPER(vt0.c0))))OR(rtreenode(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((vt0.c1)|(rt0.c2)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((vt0.c1) BETWEEN (rt0.c1) AND (-1325340004)))AND(CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND((+ (x'')))))OR(UPPER(vt0.c0))))OR(rtreenode(rt0.c2, rt0.c0)))) ORDER BY CAST(((vt0.c1)|(rt0.c2)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1) BETWEEN (rt0.c1) AND (-1325340004)))AND(CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND((+ (x'')))))OR(UPPER(vt0.c0))))OR(rtreenode(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((vt0.c1)|(rt0.c2)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((vt0.c1) BETWEEN (rt0.c1) AND (-1325340004)))AND(CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND((+ (x'')))))OR(UPPER(vt0.c0))))OR(rtreenode(rt0.c2, rt0.c0)))) ORDER BY CAST(((vt0.c1)|(rt0.c2)) AS NUMERIC) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL)) NOT BETWEEN (((vt0.c1)>>(vt0.c1))) AND (((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL)) NOT BETWEEN (((vt0.c1)>>(vt0.c1))) AND (((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL)) NOT BETWEEN (((vt0.c1)>>(vt0.c1))) AND (((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL)) NOT BETWEEN (((vt0.c1)>>(vt0.c1))) AND (((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL)) NOT BETWEEN (((vt0.c1)>>(vt0.c1))) AND (((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))));
SELECT ALL * FROM rt0, t0 WHERE (CASE CAST(rt0.c0 AS TEXT)  WHEN CASE x''  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END THEN ((rt0.c2)OR(t0.c0)) WHEN rt0.c2 COLLATE NOCASE THEN (NOT (t0.c0)) WHEN rt0.c1 THEN TRIM(rt0.c2, rt0.c0) END) ORDER BY (((- (t0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS TEXT)  WHEN CASE x''  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END THEN ((rt0.c2)OR(t0.c0)) WHEN rt0.c2 COLLATE NOCASE THEN (NOT (t0.c0)) WHEN rt0.c1 THEN TRIM(rt0.c2, rt0.c0) END) IS TRUE)  as count FROM rt0, t0 ORDER BY (((- (t0.c0))) IS FALSE));
SELECT ALL * FROM rt0, t0 WHERE (CASE CAST(rt0.c0 AS TEXT)  WHEN CASE x''  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END THEN ((rt0.c2)OR(t0.c0)) WHEN rt0.c2 COLLATE NOCASE THEN (NOT (t0.c0)) WHEN rt0.c1 THEN TRIM(rt0.c2, rt0.c0) END) ORDER BY (((- (t0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS TEXT)  WHEN CASE x''  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END THEN ((rt0.c2)OR(t0.c0)) WHEN rt0.c2 COLLATE NOCASE THEN (NOT (t0.c0)) WHEN rt0.c1 THEN TRIM(rt0.c2, rt0.c0) END) IS TRUE)  as count FROM rt0, t0 ORDER BY (((- (t0.c0))) IS FALSE));
SELECT ALL * FROM rt0, t0 WHERE (CASE CAST(rt0.c0 AS TEXT)  WHEN CASE x''  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END THEN ((rt0.c2)OR(t0.c0)) WHEN rt0.c2 COLLATE NOCASE THEN (NOT (t0.c0)) WHEN rt0.c1 THEN TRIM(rt0.c2, rt0.c0) END) ORDER BY (((- (t0.c0))) IS FALSE);
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'b08d');
SELECT SUM(count) FROM (SELECT ALL ((x'b08d') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'b08d');
SELECT SUM(count) FROM (SELECT ALL ((x'b08d') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'b08d');
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) ISNULL) THEN ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN (vt0.c1)) WHEN x'' THEN x'' ELSE (((vt0.c1))==((''))) END) ORDER BY CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN x'' ELSE vt0.c1 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) ISNULL) THEN ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN (vt0.c1)) WHEN x'' THEN x'' ELSE (((vt0.c1))==((''))) END) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN x'' ELSE vt0.c1 END COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) ISNULL) THEN ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN (vt0.c1)) WHEN x'' THEN x'' ELSE (((vt0.c1))==((''))) END) ORDER BY CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN x'' ELSE vt0.c1 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) ISNULL) THEN ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN (vt0.c1)) WHEN x'' THEN x'' ELSE (((vt0.c1))==((''))) END) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN x'' ELSE vt0.c1 END COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) ISNULL) THEN ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN (vt0.c1)) WHEN x'' THEN x'' ELSE (((vt0.c1))==((''))) END) ORDER BY CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN x'' ELSE vt0.c1 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON CASE vt0.c1  WHEN '7㰅' THEN ((rt0.c0) IS FALSE) END WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CASE vt0.c1  WHEN '7㰅' THEN ((rt0.c0) IS FALSE) END);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON CASE vt0.c1  WHEN '7㰅' THEN ((rt0.c0) IS FALSE) END WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CASE vt0.c1  WHEN '7㰅' THEN ((rt0.c0) IS FALSE) END);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON CASE vt0.c1  WHEN '7㰅' THEN ((rt0.c0) IS FALSE) END WHERE (x'');
SELECT ALL * FROM vt0, rt0 WHERE ((rt0.c2 IN ())) ORDER BY ((ABS(DISTINCT vt0.c0))GLOB(((rt0.c2)+(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((ABS(DISTINCT vt0.c0))GLOB(((rt0.c2)+(vt0.c0)))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE ((rt0.c2 IN ())) ORDER BY ((ABS(DISTINCT vt0.c0))GLOB(((rt0.c2)+(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((ABS(DISTINCT vt0.c0))GLOB(((rt0.c2)+(vt0.c0)))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE ((rt0.c2 IN ())) ORDER BY ((ABS(DISTINCT vt0.c0))GLOB(((rt0.c2)+(vt0.c0)))) ASC;
SELECT ALL * FROM t0, rt0, vt0 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY t0.c0 DESC);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY t0.c0 DESC);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE) ORDER BY t0.c0 DESC;
SELECT * FROM rt0, vt0 WHERE ('-2005397266' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('-2005397266' COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ('-2005397266' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('-2005397266' COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ('-2005397266' COLLATE NOCASE);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0) IS FALSE), (~ ('378197896')))) AND (((t0.c0 IN ()), t0.c0, NULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, t0.c0)) BETWEEN (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0) IS FALSE), (~ ('378197896')))) AND (((t0.c0 IN ()), t0.c0, NULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0) IS FALSE), (~ ('378197896')))) AND (((t0.c0 IN ()), t0.c0, NULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, t0.c0)) BETWEEN (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0) IS FALSE), (~ ('378197896')))) AND (((t0.c0 IN ()), t0.c0, NULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) BETWEEN (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0) IS FALSE), (~ ('378197896')))) AND (((t0.c0 IN ()), t0.c0, NULL))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (((((rt0.c1 IN (rt0.c1)))AND(((rt0.c1) IS TRUE))))OR(CAST(vt0.c1 AS INTEGER))) INNER JOIN vt0 ON '0.6136054846043552' WHERE (CASE ((rt0.c2) NOT NULL)  WHEN ((rt0.c2)IS NOT('')) THEN vt0.c0 WHEN ((vt0.c1) IS FALSE) THEN LIKELY(DISTINCT 0.8444913691318906) WHEN ((t0.c0)GLOB(rt0.c2)) THEN CAST(rt0.c0 AS INTEGER) ELSE json_valid(rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) NOT NULL)  WHEN ((rt0.c2)IS NOT('')) THEN vt0.c0 WHEN ((vt0.c1) IS FALSE) THEN LIKELY(DISTINCT 0.8444913691318906) WHEN ((t0.c0)GLOB(rt0.c2)) THEN CAST(rt0.c0 AS INTEGER) ELSE json_valid(rt0.c0) END) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((((rt0.c1 IN (rt0.c1)))AND(((rt0.c1) IS TRUE))))OR(CAST(vt0.c1 AS INTEGER))) INNER JOIN vt0 ON '0.6136054846043552');
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (((((rt0.c1 IN (rt0.c1)))AND(((rt0.c1) IS TRUE))))OR(CAST(vt0.c1 AS INTEGER))) INNER JOIN vt0 ON '0.6136054846043552' WHERE (CASE ((rt0.c2) NOT NULL)  WHEN ((rt0.c2)IS NOT('')) THEN vt0.c0 WHEN ((vt0.c1) IS FALSE) THEN LIKELY(DISTINCT 0.8444913691318906) WHEN ((t0.c0)GLOB(rt0.c2)) THEN CAST(rt0.c0 AS INTEGER) ELSE json_valid(rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) NOT NULL)  WHEN ((rt0.c2)IS NOT('')) THEN vt0.c0 WHEN ((vt0.c1) IS FALSE) THEN LIKELY(DISTINCT 0.8444913691318906) WHEN ((t0.c0)GLOB(rt0.c2)) THEN CAST(rt0.c0 AS INTEGER) ELSE json_valid(rt0.c0) END) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((((rt0.c1 IN (rt0.c1)))AND(((rt0.c1) IS TRUE))))OR(CAST(vt0.c1 AS INTEGER))) INNER JOIN vt0 ON '0.6136054846043552');
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (((((rt0.c1 IN (rt0.c1)))AND(((rt0.c1) IS TRUE))))OR(CAST(vt0.c1 AS INTEGER))) INNER JOIN vt0 ON '0.6136054846043552' WHERE (CASE ((rt0.c2) NOT NULL)  WHEN ((rt0.c2)IS NOT('')) THEN vt0.c0 WHEN ((vt0.c1) IS FALSE) THEN LIKELY(DISTINCT 0.8444913691318906) WHEN ((t0.c0)GLOB(rt0.c2)) THEN CAST(rt0.c0 AS INTEGER) ELSE json_valid(rt0.c0) END);
SELECT * FROM vt0 NOT INDEXED RIGHT OUTER JOIN t0 ON ((0x9451cd9) BETWEEN (((-155042628)%(vt0.c0))) AND (((((((((NULL)AND(vt0.c1)))OR(NULL)))AND(vt0.c0)))OR(vt0.c1)))) WHERE (((((x'c883')OR(((t0.c0)OR(vt0.c0)))))OR(((t0.c0)>(vt0.c0))))) ORDER BY ((vt0.c1)!=(t0.c0)) COLLATE RTRIM  NULLS LAST, UPPER(DISTINCT (+ (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'c883')OR(((t0.c0)OR(vt0.c0)))))OR(((t0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((0X9451cd9) BETWEEN (((-155042628)%(vt0.c0))) AND (((((((((NULL)AND(vt0.c1)))OR(NULL)))AND(vt0.c0)))OR(vt0.c1)))) ORDER BY ((vt0.c1)!=(t0.c0)) COLLATE RTRIM  NULLS LAST, UPPER(DISTINCT (+ (vt0.c0))) DESC  NULLS FIRST);
SELECT * FROM vt0 NOT INDEXED RIGHT OUTER JOIN t0 ON ((0x9451cd9) BETWEEN (((-155042628)%(vt0.c0))) AND (((((((((NULL)AND(vt0.c1)))OR(NULL)))AND(vt0.c0)))OR(vt0.c1)))) WHERE (((((x'c883')OR(((t0.c0)OR(vt0.c0)))))OR(((t0.c0)>(vt0.c0))))) ORDER BY ((vt0.c1)!=(t0.c0)) COLLATE RTRIM  NULLS LAST, UPPER(DISTINCT (+ (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'c883')OR(((t0.c0)OR(vt0.c0)))))OR(((t0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((0X9451cd9) BETWEEN (((-155042628)%(vt0.c0))) AND (((((((((NULL)AND(vt0.c1)))OR(NULL)))AND(vt0.c0)))OR(vt0.c1)))) ORDER BY ((vt0.c1)!=(t0.c0)) COLLATE RTRIM  NULLS LAST, UPPER(DISTINCT (+ (vt0.c0))) DESC  NULLS FIRST);
SELECT * FROM vt0 NOT INDEXED RIGHT OUTER JOIN t0 ON ((0x9451cd9) BETWEEN (((-155042628)%(vt0.c0))) AND (((((((((NULL)AND(vt0.c1)))OR(NULL)))AND(vt0.c0)))OR(vt0.c1)))) WHERE (((((x'c883')OR(((t0.c0)OR(vt0.c0)))))OR(((t0.c0)>(vt0.c0))))) ORDER BY ((vt0.c1)!=(t0.c0)) COLLATE RTRIM  NULLS LAST, UPPER(DISTINCT (+ (vt0.c0))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1) ORDER BY (((((((((((((((rt0.c0)AND(x'')))OR(rt0.c2)))OR(vt0.c1)))OR(rt0.c2)))OR(vt0.c0)))AND(t0.c0)), (~ (t0.c0)), ((vt0.c1)<(rt0.c0))))<=((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)), CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN x'9731' ELSE t0.c0 END, CASE vt0.c1  WHEN vt0.c0 THEN rt0.c2 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((((((((((((((rt0.c0)AND(x'')))OR(rt0.c2)))OR(vt0.c1)))OR(rt0.c2)))OR(vt0.c0)))AND(t0.c0)), (~ (t0.c0)), ((vt0.c1)<(rt0.c0))))<=((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)), CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN x'9731' ELSE t0.c0 END, CASE vt0.c1  WHEN vt0.c0 THEN rt0.c2 END))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1) ORDER BY (((((((((((((((rt0.c0)AND(x'')))OR(rt0.c2)))OR(vt0.c1)))OR(rt0.c2)))OR(vt0.c0)))AND(t0.c0)), (~ (t0.c0)), ((vt0.c1)<(rt0.c0))))<=((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)), CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN x'9731' ELSE t0.c0 END, CASE vt0.c1  WHEN vt0.c0 THEN rt0.c2 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((((((((((((((rt0.c0)AND(x'')))OR(rt0.c2)))OR(vt0.c1)))OR(rt0.c2)))OR(vt0.c0)))AND(t0.c0)), (~ (t0.c0)), ((vt0.c1)<(rt0.c0))))<=((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)), CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN x'9731' ELSE t0.c0 END, CASE vt0.c1  WHEN vt0.c0 THEN rt0.c2 END))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1) ORDER BY (((((((((((((((rt0.c0)AND(x'')))OR(rt0.c2)))OR(vt0.c1)))OR(rt0.c2)))OR(vt0.c0)))AND(t0.c0)), (~ (t0.c0)), ((vt0.c1)<(rt0.c0))))<=((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)), CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN x'9731' ELSE t0.c0 END, CASE vt0.c1  WHEN vt0.c0 THEN rt0.c2 END))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY (x'' IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (x'' IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY (x'' IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (x'' IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY (x'' IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0)LIKE(rt0.c0))) BETWEEN (vt0.c1) AND (((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c1)))OR(rt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)LIKE(rt0.c0))) BETWEEN (vt0.c1) AND (((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c1)))OR(rt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0)LIKE(rt0.c0))) BETWEEN (vt0.c1) AND (((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c1)))OR(rt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)LIKE(rt0.c0))) BETWEEN (vt0.c1) AND (((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c1)))OR(rt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0)LIKE(rt0.c0))) BETWEEN (vt0.c1) AND (((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c1)))OR(rt0.c1)))OR(vt0.c1)))));
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((CAST(rt0.c0 AS BLOB)))<>(((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))))) ORDER BY (((- ('-644075832')))+(((('D[?>'))<>(('-1348085370'))))) ASC;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS BLOB)))<>(((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((- ('-644075832')))+(((('D[?>'))!=(('-1348085370'))))) ASC);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((CAST(rt0.c0 AS BLOB)))<>(((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))))) ORDER BY (((- ('-644075832')))+(((('D[?>'))<>(('-1348085370'))))) ASC;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS BLOB)))<>(((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((- ('-644075832')))+(((('D[?>'))!=(('-1348085370'))))) ASC);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((CAST(rt0.c0 AS BLOB)))<>(((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))))) ORDER BY (((- ('-644075832')))+(((('D[?>'))<>(('-1348085370'))))) ASC;
SELECT ALL * FROM rt0, t0, vt0 WHERE (((CAST(t0.c0 AS NUMERIC))LIKE(((vt0.c0)|(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS NUMERIC))LIKE(((vt0.c0)|(rt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((CAST(t0.c0 AS NUMERIC))LIKE(((vt0.c0)|(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS NUMERIC))LIKE(((vt0.c0)|(rt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((CAST(t0.c0 AS NUMERIC))LIKE(((vt0.c0)|(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON rt0.c2 WHERE (CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN CASE WHEN vt0.c1 THEN '' END ELSE vt0.c1 END) ORDER BY (CAST(rt0.c0 AS NUMERIC) IN ())  NULLS FIRST, rt0.c0;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN CASE WHEN vt0.c1 THEN '' END ELSE vt0.c1 END) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON rt0.c2 ORDER BY (CAST(rt0.c0 AS NUMERIC) IN ())  NULLS FIRST, rt0.c0);
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON rt0.c2 WHERE (CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN CASE WHEN vt0.c1 THEN '' END ELSE vt0.c1 END) ORDER BY (CAST(rt0.c0 AS NUMERIC) IN ())  NULLS FIRST, rt0.c0;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN CASE WHEN vt0.c1 THEN '' END ELSE vt0.c1 END) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON rt0.c2 ORDER BY (CAST(rt0.c0 AS NUMERIC) IN ())  NULLS FIRST, rt0.c0);
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON rt0.c2 WHERE (CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN CASE WHEN vt0.c1 THEN '' END ELSE vt0.c1 END) ORDER BY (CAST(rt0.c0 AS NUMERIC) IN ())  NULLS FIRST, rt0.c0;
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN t0 ON (((rt0.c0 IN ()))-((- (rt0.c1)))) WHERE ((~ (json_patch(rt0.c0, vt0.c1)))) ORDER BY (((rt0.c2)) BETWEEN (((NOT ('E SWl~+)J')))) AND ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))))) ASC  NULLS LAST, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((~ (json_patch(rt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t0 ON (((rt0.c0 IN ()))-((- (rt0.c1)))) ORDER BY (((rt0.c2)) BETWEEN (((NOT ('E SWl~+)J')))) AND ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))))) ASC  NULLS LAST, rt0.c1 ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN t0 ON (((rt0.c0 IN ()))-((- (rt0.c1)))) WHERE ((~ (json_patch(rt0.c0, vt0.c1)))) ORDER BY (((rt0.c2)) BETWEEN (((NOT ('E SWl~+)J')))) AND ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))))) ASC  NULLS LAST, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((~ (json_patch(rt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t0 ON (((rt0.c0 IN ()))-((- (rt0.c1)))) ORDER BY (((rt0.c2)) BETWEEN (((NOT ('E SWl~+)J')))) AND ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))))) ASC  NULLS LAST, rt0.c1 ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN t0 ON (((rt0.c0 IN ()))-((- (rt0.c1)))) WHERE ((~ (json_patch(rt0.c0, vt0.c1)))) ORDER BY (((rt0.c2)) BETWEEN (((NOT ('E SWl~+)J')))) AND ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))))) ASC  NULLS LAST, rt0.c1 ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c1)OR(x'')) THEN CAST(vt0.c0 AS TEXT) ELSE (((rt0.c0, rt0.c1, vt0.c1))>=((rt0.c2, rt0.c1, rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)OR(x'')) THEN CAST(vt0.c0 AS TEXT) ELSE (((rt0.c0, rt0.c1, vt0.c1))>=((rt0.c2, rt0.c1, rt0.c1))) END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c1)OR(x'')) THEN CAST(vt0.c0 AS TEXT) ELSE (((rt0.c0, rt0.c1, vt0.c1))>=((rt0.c2, rt0.c1, rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)OR(x'')) THEN CAST(vt0.c0 AS TEXT) ELSE (((rt0.c0, rt0.c1, vt0.c1))>=((rt0.c2, rt0.c1, rt0.c1))) END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c1)OR(x'')) THEN CAST(vt0.c0 AS TEXT) ELSE (((rt0.c0, rt0.c1, vt0.c1))>=((rt0.c2, rt0.c1, rt0.c1))) END);
SELECT ALL * FROM t0 WHERE (0xffffffff8d060a87) ORDER BY (~ ((- (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((0Xffffffff8d060a87) IS TRUE)  as count FROM t0 ORDER BY (~ ((- (t0.c0)))) DESC);
SELECT ALL * FROM t0 WHERE (0xffffffff8d060a87) ORDER BY (~ ((- (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((0Xffffffff8d060a87) IS TRUE)  as count FROM t0 ORDER BY (~ ((- (t0.c0)))) DESC);
SELECT ALL * FROM t0 WHERE (0xffffffff8d060a87) ORDER BY (~ ((- (t0.c0)))) DESC;
SELECT * FROM rt0, vt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c2 END END) ORDER BY (((((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))))%(rt0.c2 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c2 END END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))))%(rt0.c2 COLLATE RTRIM)) ASC);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c2 END END) ORDER BY (((((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))))%(rt0.c2 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c2 END END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))))%(rt0.c2 COLLATE RTRIM)) ASC);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c2 END END) ORDER BY (((((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))))%(rt0.c2 COLLATE RTRIM)) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ ((+ (vt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((NULL) BETWEEN (rt0.c0) AND (((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (rt0.c0) AND (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((NULL) BETWEEN (rt0.c0) AND (((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (rt0.c0) AND (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((NULL) BETWEEN (rt0.c0) AND (((rt0.c2) ISNULL))));
SELECT ALL * FROM rt0, vt0 WHERE (((~ (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((~ (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((~ (rt0.c1)) IN ()));
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(vt0.c1 AS REAL)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY CAST(((rt0.c1)*(vt0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c1)*(vt0.c0)) AS NUMERIC) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(vt0.c1 AS REAL)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY CAST(((rt0.c1)*(vt0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c1)*(vt0.c0)) AS NUMERIC) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(vt0.c1 AS REAL)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY CAST(((rt0.c1)*(vt0.c0)) AS NUMERIC) ASC;
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY) IS TRUE));
SELECT * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (CAST(rt0.c0 AS NUMERIC) IN ()) WHERE (((CASE WHEN '181539905' THEN rt0.c0 END)/(((rt0.c2) IS FALSE)))) ORDER BY ((((rt0.c2)OR(vt0.c0))) NOT BETWEEN (((((rt0.c0)OR(vt0.c0)))OR(t0.c0))) AND (((rt0.c0)IS(x''))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN '181539905' THEN rt0.c0 END)/(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (CAST(rt0.c0 AS NUMERIC) IN ()) ORDER BY ((((rt0.c2)OR(vt0.c0))) NOT BETWEEN (((((rt0.c0)OR(vt0.c0)))OR(t0.c0))) AND (((rt0.c0)IS(x'')))));
SELECT * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (CAST(rt0.c0 AS NUMERIC) IN ()) WHERE (((CASE WHEN '181539905' THEN rt0.c0 END)/(((rt0.c2) IS FALSE)))) ORDER BY ((((rt0.c2)OR(vt0.c0))) NOT BETWEEN (((((rt0.c0)OR(vt0.c0)))OR(t0.c0))) AND (((rt0.c0)IS(x''))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN '181539905' THEN rt0.c0 END)/(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (CAST(rt0.c0 AS NUMERIC) IN ()) ORDER BY ((((rt0.c2)OR(vt0.c0))) NOT BETWEEN (((((rt0.c0)OR(vt0.c0)))OR(t0.c0))) AND (((rt0.c0)IS(x'')))));
SELECT * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (CAST(rt0.c0 AS NUMERIC) IN ()) WHERE (((CASE WHEN '181539905' THEN rt0.c0 END)/(((rt0.c2) IS FALSE)))) ORDER BY ((((rt0.c2)OR(vt0.c0))) NOT BETWEEN (((((rt0.c0)OR(vt0.c0)))OR(t0.c0))) AND (((rt0.c0)IS(x''))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0)<(rt0.c1))) NOT NULL) WHERE (((((((rt0.c2)LIKE(rt0.c2)))AND(((t0.c0)<(t0.c0)))))AND((t0.c0 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)LIKE(rt0.c2)))AND(((t0.c0)<(t0.c0)))))AND((t0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0)<(rt0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0)<(rt0.c1))) NOT NULL) WHERE (((((((rt0.c2)LIKE(rt0.c2)))AND(((t0.c0)<(t0.c0)))))AND((t0.c0 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)LIKE(rt0.c2)))AND(((t0.c0)<(t0.c0)))))AND((t0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0)<(rt0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0)<(rt0.c1))) NOT NULL) WHERE (((((((rt0.c2)LIKE(rt0.c2)))AND(((t0.c0)<(t0.c0)))))AND((t0.c0 IN (rt0.c0)))));
SELECT * FROM rt0 INNER JOIN t0 ON CASE WHEN ((t0.c0)<=(rt0.c2)) THEN t0.c0 COLLATE NOCASE END WHERE (0.49266287645287565) ORDER BY (((t0.c0 IN ())) BETWEEN (-1.325340004E9) AND (t0.c0 COLLATE RTRIM)), ((rt0.c2) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END) AND (CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.49266287645287565) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CASE WHEN ((t0.c0)<=(rt0.c2)) THEN t0.c0 COLLATE NOCASE END ORDER BY (((t0.c0 IN ())) BETWEEN (-1.325340004E9) AND (t0.c0 COLLATE RTRIM)), ((rt0.c2) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END) AND (CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN t0 ON CASE WHEN ((t0.c0)<=(rt0.c2)) THEN t0.c0 COLLATE NOCASE END WHERE (0.49266287645287565) ORDER BY (((t0.c0 IN ())) BETWEEN (-1.325340004E9) AND (t0.c0 COLLATE RTRIM)), ((rt0.c2) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END) AND (CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.49266287645287565) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CASE WHEN ((t0.c0)<=(rt0.c2)) THEN t0.c0 COLLATE NOCASE END ORDER BY (((t0.c0 IN ())) BETWEEN (-1.325340004E9) AND (t0.c0 COLLATE RTRIM)), ((rt0.c2) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END) AND (CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN t0 ON CASE WHEN ((t0.c0)<=(rt0.c2)) THEN t0.c0 COLLATE NOCASE END WHERE (0.49266287645287565) ORDER BY (((t0.c0 IN ())) BETWEEN (-1.325340004E9) AND (t0.c0 COLLATE RTRIM)), ((rt0.c2) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END) AND (CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (t0.c0 COLLATE RTRIM))) ORDER BY ((((t0.c0)AND(((t0.c0)OR(t0.c0)))))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))  NULLS FIRST, (((((- (t0.c0)))AND(0Xffffffffe93172ac COLLATE RTRIM)))AND(t0.c0 COLLATE BINARY)), json_extract(((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)), ((t0.c0)!=(0.35038224411871755)), t0.c0, ((t0.c0) NOT NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)AND(((t0.c0)OR(t0.c0)))))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))  NULLS FIRST, (((((- (t0.c0)))AND(0Xffffffffe93172ac COLLATE RTRIM)))AND(t0.c0 COLLATE BINARY)), json_extract(((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)), ((t0.c0)<>(0.35038224411871755)), t0.c0, ((t0.c0) NOT NULL)) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (t0.c0 COLLATE RTRIM))) ORDER BY ((((t0.c0)AND(((t0.c0)OR(t0.c0)))))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))  NULLS FIRST, (((((- (t0.c0)))AND(0Xffffffffe93172ac COLLATE RTRIM)))AND(t0.c0 COLLATE BINARY)), json_extract(((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)), ((t0.c0)!=(0.35038224411871755)), t0.c0, ((t0.c0) NOT NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)AND(((t0.c0)OR(t0.c0)))))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))  NULLS FIRST, (((((- (t0.c0)))AND(0Xffffffffe93172ac COLLATE RTRIM)))AND(t0.c0 COLLATE BINARY)), json_extract(((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)), ((t0.c0)<>(0.35038224411871755)), t0.c0, ((t0.c0) NOT NULL)) DESC);
SELECT * FROM rt0, t0, vt0 WHERE (0.37372021086615714) ORDER BY 0.5918141782219958 DESC;
SELECT SUM(count) FROM (SELECT ((0.37372021086615714) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY 0.5918141782219958 DESC);
SELECT * FROM rt0, t0, vt0 WHERE (0.37372021086615714) ORDER BY 0.5918141782219958 DESC;
SELECT SUM(count) FROM (SELECT ((0.37372021086615714) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY 0.5918141782219958 DESC);
SELECT * FROM rt0, t0, vt0 WHERE (0.37372021086615714) ORDER BY 0.5918141782219958 DESC;
SELECT * FROM vt0, t0 WHERE ((TYPEOF(DISTINCT '1757514795') IN ()));
SELECT SUM(count) FROM (SELECT (((TYPEOF(DISTINCT '1757514795') IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((TYPEOF(DISTINCT '1757514795') IN ()));
SELECT SUM(count) FROM (SELECT (((TYPEOF(DISTINCT '1757514795') IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((TYPEOF(DISTINCT '1757514795') IN ()));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST((+ (vt0.c0)) AS NUMERIC)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST((+ (vt0.c0)) AS NUMERIC)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST((+ (vt0.c0)) AS NUMERIC)) ORDER BY NULL;
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(CASE WHEN rt0.c1 THEN '' ELSE rt0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c1 THEN '' ELSE rt0.c0 END AS BLOB)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(CASE WHEN rt0.c1 THEN '' ELSE rt0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c1 THEN '' ELSE rt0.c0 END AS BLOB)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(CASE WHEN rt0.c1 THEN '' ELSE rt0.c0 END AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE vt0.c1  WHEN 0x27debe8f THEN vt0.c1 ELSE vt0.c0 END  WHEN ((vt0.c1) NOTNULL) THEN vt0.c0 WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c0) NOTNULL) WHEN (+ (vt0.c0)) THEN (~ (NULL)) END) ORDER BY NULLIF((NOT (vt0.c0)), vt0.c1)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c1  WHEN 0x27debe8f THEN vt0.c1 ELSE vt0.c0 END  WHEN ((vt0.c1) NOTNULL) THEN vt0.c0 WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c0) NOTNULL) WHEN (+ (vt0.c0)) THEN (~ (NULL)) END) IS TRUE)  as count FROM vt0 ORDER BY NULLIF((NOT (vt0.c0)), vt0.c1)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE vt0.c1  WHEN 0x27debe8f THEN vt0.c1 ELSE vt0.c0 END  WHEN ((vt0.c1) NOTNULL) THEN vt0.c0 WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c0) NOTNULL) WHEN (+ (vt0.c0)) THEN (~ (NULL)) END) ORDER BY NULLIF((NOT (vt0.c0)), vt0.c1)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c1  WHEN 0x27debe8f THEN vt0.c1 ELSE vt0.c0 END  WHEN ((vt0.c1) NOTNULL) THEN vt0.c0 WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c0) NOTNULL) WHEN (+ (vt0.c0)) THEN (~ (NULL)) END) IS TRUE)  as count FROM vt0 ORDER BY NULLIF((NOT (vt0.c0)), vt0.c1)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE vt0.c1  WHEN 0x27debe8f THEN vt0.c1 ELSE vt0.c0 END  WHEN ((vt0.c1) NOTNULL) THEN vt0.c0 WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c0) NOTNULL) WHEN (+ (vt0.c0)) THEN (~ (NULL)) END) ORDER BY NULLIF((NOT (vt0.c0)), vt0.c1)  NULLS FIRST;
SELECT * FROM rt0, t0 WHERE ((((rt0.c1 IN ())) ISNULL)) ORDER BY (((((rt0.c2)<<(rt0.c2)), t0.c0, ((t0.c0)/(rt0.c0))))<(('0.6072082943012251', (((rt0.c1))>=((rt0.c1))), -594733764)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) ISNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((rt0.c2)<<(rt0.c2)), t0.c0, ((t0.c0)/(rt0.c0))))<(('0.6072082943012251', (((rt0.c1))>=((rt0.c1))), -594733764)))  NULLS LAST);
SELECT * FROM rt0, t0 WHERE ((((rt0.c1 IN ())) ISNULL)) ORDER BY (((((rt0.c2)<<(rt0.c2)), t0.c0, ((t0.c0)/(rt0.c0))))<(('0.6072082943012251', (((rt0.c1))>=((rt0.c1))), -594733764)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) ISNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((rt0.c2)<<(rt0.c2)), t0.c0, ((t0.c0)/(rt0.c0))))<(('0.6072082943012251', (((rt0.c1))>=((rt0.c1))), -594733764)))  NULLS LAST);
SELECT * FROM rt0, t0 WHERE ((((rt0.c1 IN ())) ISNULL)) ORDER BY (((((rt0.c2)<<(rt0.c2)), t0.c0, ((t0.c0)/(rt0.c0))))<(('0.6072082943012251', (((rt0.c1))>=((rt0.c1))), -594733764)))  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE ((((CAST(rt0.c0 AS REAL)))<=((CAST(vt0.c0 AS REAL))))) ORDER BY (rt0.c2 IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS REAL)))<=((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (rt0.c2 IN ()) DESC);
SELECT * FROM rt0, vt0 WHERE ((((CAST(rt0.c0 AS REAL)))<=((CAST(vt0.c0 AS REAL))))) ORDER BY (rt0.c2 IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS REAL)))<=((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (rt0.c2 IN ()) DESC);
SELECT * FROM rt0, vt0 WHERE ((((CAST(rt0.c0 AS REAL)))<=((CAST(vt0.c0 AS REAL))))) ORDER BY (rt0.c2 IN ()) DESC;
SELECT * FROM rt0, t0 WHERE (((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (((t0.c0)%(rt0.c2))) AND (((t0.c0)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (((t0.c0)%(rt0.c2))) AND (((t0.c0)<=(rt0.c0))))) IS TRUE)  as count FROM rt0 NOT INDEXED, t0);
SELECT * FROM rt0, t0 WHERE (((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (((t0.c0)%(rt0.c2))) AND (((t0.c0)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (((t0.c0)%(rt0.c2))) AND (((t0.c0)<=(rt0.c0))))) IS TRUE)  as count FROM rt0 NOT INDEXED, t0);
SELECT * FROM rt0, t0 WHERE (((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (((t0.c0)%(rt0.c2))) AND (((t0.c0)<=(rt0.c0)))));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED LEFT OUTER JOIN rt0 ON ((((t0.c0)<(rt0.c1))) BETWEEN (((rt0.c2) ISNULL)) AND (((('k'))!=((rt0.c2))))) WHERE (((CASE rt0.c2  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 END) NOT NULL)) ORDER BY ((((0X7c4e48d COLLATE BINARY)OR(x'c37cfc74')))OR(rt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((t0.c0)<(rt0.c1))) BETWEEN (((rt0.c2) ISNULL)) AND (((('k'))<>((rt0.c2))))) ORDER BY ((((0X7c4e48d COLLATE BINARY)OR(x'c37cfc74')))OR(rt0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED LEFT OUTER JOIN rt0 ON ((((t0.c0)<(rt0.c1))) BETWEEN (((rt0.c2) ISNULL)) AND (((('k'))!=((rt0.c2))))) WHERE (((CASE rt0.c2  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 END) NOT NULL)) ORDER BY ((((0X7c4e48d COLLATE BINARY)OR(x'c37cfc74')))OR(rt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((t0.c0)<(rt0.c1))) BETWEEN (((rt0.c2) ISNULL)) AND (((('k'))<>((rt0.c2))))) ORDER BY ((((0X7c4e48d COLLATE BINARY)OR(x'c37cfc74')))OR(rt0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED LEFT OUTER JOIN rt0 ON ((((t0.c0)<(rt0.c1))) BETWEEN (((rt0.c2) ISNULL)) AND (((('k'))!=((rt0.c2))))) WHERE (((CASE rt0.c2  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 END) NOT NULL)) ORDER BY ((((0X7c4e48d COLLATE BINARY)OR(x'c37cfc74')))OR(rt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT ALL * FROM t0 NOT INDEXED INNER JOIN vt0 ON CASE CASE rt0.c2  WHEN rt0.c2 THEN NULL ELSE '-745841108' END  WHEN (NOT (rt0.c2)) THEN LOWER(DISTINCT rt0.c0) WHEN rt0.c1 THEN vt0.c1 WHEN ((((vt0.c1)OR(rt0.c0)))OR(0.09066835943715656)) THEN (NOT (vt0.c0)) ELSE rt0.c1 COLLATE BINARY END LEFT OUTER JOIN rt0 ON ((((0.2871882823073494)*(rt0.c2))) IS FALSE) WHERE ((((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c2))))<>(rt0.c1))) ORDER BY (((((rt0.c0))<((rt0.c0)))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c2))))!=(rt0.c1))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CASE CASE rt0.c2  WHEN rt0.c2 THEN NULL ELSE '-745841108' END  WHEN (NOT (rt0.c2)) THEN LOWER(DISTINCT rt0.c0) WHEN rt0.c1 THEN vt0.c1 WHEN ((((vt0.c1)OR(rt0.c0)))OR(0.09066835943715656)) THEN (NOT (vt0.c0)) ELSE rt0.c1 COLLATE BINARY END LEFT OUTER JOIN rt0 ON ((((0.2871882823073494)*(rt0.c2))) IS FALSE) ORDER BY (((((rt0.c0))<((rt0.c0)))) IS FALSE) ASC);
SELECT ALL * FROM t0 NOT INDEXED INNER JOIN vt0 ON CASE CASE rt0.c2  WHEN rt0.c2 THEN NULL ELSE '-745841108' END  WHEN (NOT (rt0.c2)) THEN LOWER(DISTINCT rt0.c0) WHEN rt0.c1 THEN vt0.c1 WHEN ((((vt0.c1)OR(rt0.c0)))OR(0.09066835943715656)) THEN (NOT (vt0.c0)) ELSE rt0.c1 COLLATE BINARY END LEFT OUTER JOIN rt0 ON ((((0.2871882823073494)*(rt0.c2))) IS FALSE) WHERE ((((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c2))))<>(rt0.c1))) ORDER BY (((((rt0.c0))<((rt0.c0)))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c2))))!=(rt0.c1))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CASE CASE rt0.c2  WHEN rt0.c2 THEN NULL ELSE '-745841108' END  WHEN (NOT (rt0.c2)) THEN LOWER(DISTINCT rt0.c0) WHEN rt0.c1 THEN vt0.c1 WHEN ((((vt0.c1)OR(rt0.c0)))OR(0.09066835943715656)) THEN (NOT (vt0.c0)) ELSE rt0.c1 COLLATE BINARY END LEFT OUTER JOIN rt0 ON ((((0.2871882823073494)*(rt0.c2))) IS FALSE) ORDER BY (((((rt0.c0))<((rt0.c0)))) IS FALSE) ASC);
SELECT ALL * FROM t0 NOT INDEXED INNER JOIN vt0 ON CASE CASE rt0.c2  WHEN rt0.c2 THEN NULL ELSE '-745841108' END  WHEN (NOT (rt0.c2)) THEN LOWER(DISTINCT rt0.c0) WHEN rt0.c1 THEN vt0.c1 WHEN ((((vt0.c1)OR(rt0.c0)))OR(0.09066835943715656)) THEN (NOT (vt0.c0)) ELSE rt0.c1 COLLATE BINARY END LEFT OUTER JOIN rt0 ON ((((0.2871882823073494)*(rt0.c2))) IS FALSE) WHERE ((((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c2))))<>(rt0.c1))) ORDER BY (((((rt0.c0))<((rt0.c0)))) IS FALSE) ASC;
SELECT * FROM vt0, rt0 WHERE ((- (rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((- (rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((- (rt0.c0 COLLATE BINARY)));
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(((t0.c0) IS TRUE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(((t0.c0) IS TRUE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(((t0.c0) IS TRUE) AS INTEGER));
SELECT * FROM vt0 WHERE (INSTR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), (+ (vt0.c1)))) ORDER BY x'', (((CAST(vt0.c0 AS TEXT)))<((((vt0.c0)||(vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), (+ (vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY x'', (((CAST(vt0.c0 AS TEXT)))<((((vt0.c0)||(vt0.c1))))) ASC);
SELECT * FROM vt0 WHERE (INSTR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), (+ (vt0.c1)))) ORDER BY x'', (((CAST(vt0.c0 AS TEXT)))<((((vt0.c0)||(vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), (+ (vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY x'', (((CAST(vt0.c0 AS TEXT)))<((((vt0.c0)||(vt0.c1))))) ASC);
SELECT * FROM vt0 WHERE (INSTR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), (+ (vt0.c1)))) ORDER BY x'', (((CAST(vt0.c0 AS TEXT)))<((((vt0.c0)||(vt0.c1))))) ASC;
SELECT ALL * FROM t0, vt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (LAST_INSERT_ROWID());
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT * FROM t0, vt0 INDEXED BY i10, rt0 WHERE (NULLIF(((rt0.c1)/(vt0.c1)), LENGTH(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((rt0.c1)/(vt0.c1)), LENGTH(t0.c0))) IS TRUE)  as count FROM t0, vt0 INDEXED BY i10, rt0);
SELECT * FROM t0, vt0 INDEXED BY i10, rt0 WHERE (NULLIF(((rt0.c1)/(vt0.c1)), LENGTH(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((rt0.c1)/(vt0.c1)), LENGTH(t0.c0))) IS TRUE)  as count FROM t0, vt0 INDEXED BY i10, rt0);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((x'') IS TRUE) WHERE (CAST(rt0.c0 AS BLOB) COLLATE BINARY) ORDER BY ((((t0.c0)LIKE(rt0.c0)))!=(((rt0.c0)LIKE(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((x'') IS TRUE) ORDER BY ((((t0.c0)LIKE(rt0.c0)))!=(((rt0.c0)LIKE(t0.c0)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((x'') IS TRUE) WHERE (CAST(rt0.c0 AS BLOB) COLLATE BINARY) ORDER BY ((((t0.c0)LIKE(rt0.c0)))!=(((rt0.c0)LIKE(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((x'') IS TRUE) ORDER BY ((((t0.c0)LIKE(rt0.c0)))!=(((rt0.c0)LIKE(t0.c0)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((x'') IS TRUE) WHERE (CAST(rt0.c0 AS BLOB) COLLATE BINARY) ORDER BY ((((t0.c0)LIKE(rt0.c0)))!=(((rt0.c0)LIKE(t0.c0))));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((CASE rt0.c0  WHEN vt0.c1 THEN 'l\#09LRnW' WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)AND(CAST(rt0.c2 AS NUMERIC))))AND(CASE t0.c0  WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY (('	+')LIKE(((vt0.c0)OR(rt0.c0)))) ASC  NULLS FIRST, json_array(((t0.c0) BETWEEN (0.5291391140387525) AND (rt0.c0)), CASE WHEN rt0.c0 THEN vt0.c1 END, (NOT (rt0.c1)), (NOT (rt0.c2))), rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c0  WHEN vt0.c1 THEN 'l\#09LRnW' WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)AND(CAST(rt0.c2 AS NUMERIC))))AND(CASE t0.c0  WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM t0, rt0, vt0 NOT INDEXED ORDER BY (('	+')LIKE(((vt0.c0)OR(rt0.c0)))) ASC  NULLS FIRST, json_array(((t0.c0) BETWEEN (0.5291391140387525) AND (rt0.c0)), CASE WHEN rt0.c0 THEN vt0.c1 END, (NOT (rt0.c1)), (NOT (rt0.c2))), rt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((CASE rt0.c0  WHEN vt0.c1 THEN 'l\#09LRnW' WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)AND(CAST(rt0.c2 AS NUMERIC))))AND(CASE t0.c0  WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY (('	+')LIKE(((vt0.c0)OR(rt0.c0)))) ASC  NULLS FIRST, json_array(((t0.c0) BETWEEN (0.5291391140387525) AND (rt0.c0)), CASE WHEN rt0.c0 THEN vt0.c1 END, (NOT (rt0.c1)), (NOT (rt0.c2))), rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c0  WHEN vt0.c1 THEN 'l\#09LRnW' WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)AND(CAST(rt0.c2 AS NUMERIC))))AND(CASE t0.c0  WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM t0, rt0, vt0 NOT INDEXED ORDER BY (('	+')LIKE(((vt0.c0)OR(rt0.c0)))) ASC  NULLS FIRST, json_array(((t0.c0) BETWEEN (0.5291391140387525) AND (rt0.c0)), CASE WHEN rt0.c0 THEN vt0.c1 END, (NOT (rt0.c1)), (NOT (rt0.c2))), rt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((CASE rt0.c0  WHEN vt0.c1 THEN 'l\#09LRnW' WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)AND(CAST(rt0.c2 AS NUMERIC))))AND(CASE t0.c0  WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY (('	+')LIKE(((vt0.c0)OR(rt0.c0)))) ASC  NULLS FIRST, json_array(((t0.c0) BETWEEN (0.5291391140387525) AND (rt0.c0)), CASE WHEN rt0.c0 THEN vt0.c1 END, (NOT (rt0.c1)), (NOT (rt0.c2))), rt0.c0 ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0, t0 WHERE (CAST(LIKELIHOOD(DISTINCT -1112539127, 0.3824594888484637) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(DISTINCT -1112539127, 0.3824594888484637) AS REAL)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CAST(LIKELIHOOD(DISTINCT -1112539127, 0.3824594888484637) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(DISTINCT -1112539127, 0.3824594888484637) AS REAL)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CAST(LIKELIHOOD(DISTINCT -1112539127, 0.3824594888484637) AS REAL));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (rt0.c1) ORDER BY x'' ASC, HEX((rt0.c0 IN (NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0 ORDER BY x'' ASC, HEX((rt0.c0 IN (NULL))) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (rt0.c1) ORDER BY x'' ASC, HEX((rt0.c0 IN (NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0 ORDER BY x'' ASC, HEX((rt0.c0 IN (NULL))) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (rt0.c1) ORDER BY x'' ASC, HEX((rt0.c0 IN (NULL))) DESC;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0)IS(t0.c0))) BETWEEN (INSTR(rt0.c0, t0.c0)) AND (((rt0.c1) IS TRUE))) WHERE (((((rt0.c2 COLLATE RTRIM)OR(((((((((t0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(NULL)))AND(rt0.c2)))))AND((((rt0.c2))<((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 COLLATE RTRIM)OR(((((((((t0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(NULL)))AND(rt0.c2)))))AND((((rt0.c2))<((rt0.c1)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0)IS(t0.c0))) BETWEEN (INSTR(rt0.c0, t0.c0)) AND (((rt0.c1) IS TRUE))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0)IS(t0.c0))) BETWEEN (INSTR(rt0.c0, t0.c0)) AND (((rt0.c1) IS TRUE))) WHERE (((((rt0.c2 COLLATE RTRIM)OR(((((((((t0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(NULL)))AND(rt0.c2)))))AND((((rt0.c2))<((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 COLLATE RTRIM)OR(((((((((t0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(NULL)))AND(rt0.c2)))))AND((((rt0.c2))<((rt0.c1)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0)IS(t0.c0))) BETWEEN (INSTR(rt0.c0, t0.c0)) AND (((rt0.c1) IS TRUE))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0)IS(t0.c0))) BETWEEN (INSTR(rt0.c0, t0.c0)) AND (((rt0.c1) IS TRUE))) WHERE (((((rt0.c2 COLLATE RTRIM)OR(((((((((t0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(NULL)))AND(rt0.c2)))))AND((((rt0.c2))<((rt0.c1))))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))OR((((rt0.c2))>((rt0.c2))))))AND((('!0')<(rt0.c1)))) WHERE (rtreenode(((rt0.c2) IS TRUE), (('1757514795')<=(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((rtreenode(((rt0.c2) IS TRUE), (('1757514795')<=(rt0.c1)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))OR((((rt0.c2))>((rt0.c2))))))AND((('!0')<(rt0.c1)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))OR((((rt0.c2))>((rt0.c2))))))AND((('!0')<(rt0.c1)))) WHERE (rtreenode(((rt0.c2) IS TRUE), (('1757514795')<=(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((rtreenode(((rt0.c2) IS TRUE), (('1757514795')<=(rt0.c1)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))OR((((rt0.c2))>((rt0.c2))))))AND((('!0')<(rt0.c1)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))OR((((rt0.c2))>((rt0.c2))))))AND((('!0')<(rt0.c1)))) WHERE (rtreenode(((rt0.c2) IS TRUE), (('1757514795')<=(rt0.c1))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(t0.c0 AS TEXT)) ORDER BY ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(t0.c0))) BETWEEN (((rt0.c2)||(t0.c0))) AND (((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS TEXT)) IS TRUE)  as count FROM t0, rt0 NOT INDEXED ORDER BY ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(t0.c0))) BETWEEN (((rt0.c2)||(t0.c0))) AND (((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(t0.c0 AS TEXT)) ORDER BY ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(t0.c0))) BETWEEN (((rt0.c2)||(t0.c0))) AND (((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS TEXT)) IS TRUE)  as count FROM t0, rt0 NOT INDEXED ORDER BY ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(t0.c0))) BETWEEN (((rt0.c2)||(t0.c0))) AND (((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(t0.c0 AS TEXT)) ORDER BY ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(t0.c0))) BETWEEN (((rt0.c2)||(t0.c0))) AND (((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS FIRST;
SELECT * FROM vt0, t0 INNER JOIN rt0 ON (((~ (rt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c1 END) AND (vt0.c0 COLLATE NOCASE)) WHERE ((((((x'')IS(vt0.c0)), ((((vt0.c0)AND(t0.c0)))OR(rt0.c2)), vt0.c1 COLLATE NOCASE))>((((rt0.c1)<>(0.37127627304955)), ((((NULL)AND(rt0.c1)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))) ORDER BY ((vt0.c1 IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'')IS(vt0.c0)), ((((vt0.c0)AND(t0.c0)))OR(rt0.c2)), vt0.c1 COLLATE NOCASE))>((((rt0.c1)<>(0.37127627304955)), ((((NULL)AND(rt0.c1)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON (((~ (rt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c1 END) AND (vt0.c0 COLLATE NOCASE)) ORDER BY ((vt0.c1 IN ()) IN ()) DESC  NULLS LAST);
SELECT * FROM vt0, t0 INNER JOIN rt0 ON (((~ (rt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c1 END) AND (vt0.c0 COLLATE NOCASE)) WHERE ((((((x'')IS(vt0.c0)), ((((vt0.c0)AND(t0.c0)))OR(rt0.c2)), vt0.c1 COLLATE NOCASE))>((((rt0.c1)<>(0.37127627304955)), ((((NULL)AND(rt0.c1)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))) ORDER BY ((vt0.c1 IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'')IS(vt0.c0)), ((((vt0.c0)AND(t0.c0)))OR(rt0.c2)), vt0.c1 COLLATE NOCASE))>((((rt0.c1)<>(0.37127627304955)), ((((NULL)AND(rt0.c1)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON (((~ (rt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c1 END) AND (vt0.c0 COLLATE NOCASE)) ORDER BY ((vt0.c1 IN ()) IN ()) DESC  NULLS LAST);
SELECT * FROM vt0, t0 INNER JOIN rt0 ON (((~ (rt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c1 END) AND (vt0.c0 COLLATE NOCASE)) WHERE ((((((x'')IS(vt0.c0)), ((((vt0.c0)AND(t0.c0)))OR(rt0.c2)), vt0.c1 COLLATE NOCASE))>((((rt0.c1)<>(0.37127627304955)), ((((NULL)AND(rt0.c1)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))) ORDER BY ((vt0.c1 IN ()) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (x'24f7') ORDER BY (vt0.c1 COLLATE RTRIM IN (((vt0.c0)*(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'24f7') IS TRUE)  as count FROM vt0, t0 ORDER BY (vt0.c1 COLLATE RTRIM IN (((vt0.c0)*(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (x'24f7') ORDER BY (vt0.c1 COLLATE RTRIM IN (((vt0.c0)*(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'24f7') IS TRUE)  as count FROM vt0, t0 ORDER BY (vt0.c1 COLLATE RTRIM IN (((vt0.c0)*(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (x'24f7') ORDER BY (vt0.c1 COLLATE RTRIM IN (((vt0.c0)*(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (t0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (t0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (t0.c0)));
SELECT * FROM rt0, t0 WHERE (CASE CASE '1963604352'  WHEN NULL THEN t0.c0 ELSE t0.c0 END  WHEN ((rt0.c1) BETWEEN (t0.c0) AND (rt0.c0)) THEN ((t0.c0)IS NOT(t0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 COLLATE RTRIM ELSE rt0.c0 COLLATE NOCASE END) ORDER BY (+ (t0.c0))  NULLS LAST, (('c|') BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE '1963604352'  WHEN NULL THEN t0.c0 ELSE t0.c0 END  WHEN ((rt0.c1) BETWEEN (t0.c0) AND (rt0.c0)) THEN ((t0.c0)IS NOT(t0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 COLLATE RTRIM ELSE rt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, t0 ORDER BY (+ (t0.c0))  NULLS LAST, (('c|') BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))));
SELECT * FROM rt0, t0 WHERE (CASE CASE '1963604352'  WHEN NULL THEN t0.c0 ELSE t0.c0 END  WHEN ((rt0.c1) BETWEEN (t0.c0) AND (rt0.c0)) THEN ((t0.c0)IS NOT(t0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 COLLATE RTRIM ELSE rt0.c0 COLLATE NOCASE END) ORDER BY (+ (t0.c0))  NULLS LAST, (('c|') BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE '1963604352'  WHEN NULL THEN t0.c0 ELSE t0.c0 END  WHEN ((rt0.c1) BETWEEN (t0.c0) AND (rt0.c0)) THEN ((t0.c0)IS NOT(t0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 COLLATE RTRIM ELSE rt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, t0 ORDER BY (+ (t0.c0))  NULLS LAST, (('c|') BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))));
SELECT * FROM rt0, t0 WHERE (CASE CASE '1963604352'  WHEN NULL THEN t0.c0 ELSE t0.c0 END  WHEN ((rt0.c1) BETWEEN (t0.c0) AND (rt0.c0)) THEN ((t0.c0)IS NOT(t0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 COLLATE RTRIM ELSE rt0.c0 COLLATE NOCASE END) ORDER BY (+ (t0.c0))  NULLS LAST, (('c|') BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN rt0.c2 COLLATE NOCASE THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) WHEN json_array(t0.c0, rt0.c2) THEN (rt0.c1 IN ()) WHEN CAST(rt0.c0 AS REAL) THEN (+ (0X22c6c344)) END WHERE (((((- (NULL))))>((t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (NULL))))>((t0.c0)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN rt0.c2 COLLATE NOCASE THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) WHEN json_array(t0.c0, rt0.c2) THEN (rt0.c1 IN ()) WHEN CAST(rt0.c0 AS REAL) THEN (+ (0x22c6c344)) END);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN rt0.c2 COLLATE NOCASE THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) WHEN json_array(t0.c0, rt0.c2) THEN (rt0.c1 IN ()) WHEN CAST(rt0.c0 AS REAL) THEN (+ (0X22c6c344)) END WHERE (((((- (NULL))))>((t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (NULL))))>((t0.c0)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN rt0.c2 COLLATE NOCASE THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) WHEN json_array(t0.c0, rt0.c2) THEN (rt0.c1 IN ()) WHEN CAST(rt0.c0 AS REAL) THEN (+ (0x22c6c344)) END);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((DATETIME(t0.c0, vt0.c1, rt0.c1)) BETWEEN ((rt0.c0 IN ())) AND (vt0.c1))) ORDER BY (~ (vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(t0.c0, vt0.c1, rt0.c1)) BETWEEN ((rt0.c0 IN ())) AND (vt0.c1))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (~ (vt0.c0)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((DATETIME(t0.c0, vt0.c1, rt0.c1)) BETWEEN ((rt0.c0 IN ())) AND (vt0.c1))) ORDER BY (~ (vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(t0.c0, vt0.c1, rt0.c1)) BETWEEN ((rt0.c0 IN ())) AND (vt0.c1))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (~ (vt0.c0)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((DATETIME(t0.c0, vt0.c1, rt0.c1)) BETWEEN ((rt0.c0 IN ())) AND (vt0.c1))) ORDER BY (~ (vt0.c0)) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((PRINTF(rt0.c1))>=((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((PRINTF(rt0.c1))>=((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((PRINTF(rt0.c1))>=((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((PRINTF(rt0.c1))>=((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((PRINTF(rt0.c1))>=((~ (vt0.c0)))));
SELECT ALL * FROM rt0, vt0 WHERE ((((('1829024795')<<(vt0.c0)))*(((vt0.c0)>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('1829024795')<<(vt0.c0)))*(((vt0.c0)>(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((('1829024795')<<(vt0.c0)))*(((vt0.c0)>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('1829024795')<<(vt0.c0)))*(((vt0.c0)>(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((('1829024795')<<(vt0.c0)))*(((vt0.c0)>(rt0.c0)))));
SELECT * FROM t0, vt0, rt0 WHERE (((((rt0.c2)+(t0.c0)))||(((vt0.c0)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)+(t0.c0)))||(((vt0.c0)IS(rt0.c1))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((((rt0.c2)+(t0.c0)))||(((vt0.c0)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)+(t0.c0)))||(((vt0.c0)IS(rt0.c1))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((((rt0.c2)+(t0.c0)))||(((vt0.c0)IS(rt0.c1)))));
SELECT * FROM t0, vt0 WHERE (((ABS(DISTINCT vt0.c0))>=(t0.c0))) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT vt0.c0))>=(t0.c0))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (((ABS(DISTINCT vt0.c0))>=(t0.c0))) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT vt0.c0))>=(t0.c0))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (((ABS(DISTINCT vt0.c0))>=(t0.c0))) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 WHERE (GLOB(((t0.c0)GLOB(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((t0.c0)GLOB(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (GLOB(((t0.c0)GLOB(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((t0.c0)GLOB(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (GLOB(((t0.c0)GLOB(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))));
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY HEX(DISTINCT t0.c0) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY HEX(DISTINCT t0.c0) COLLATE BINARY DESC);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY HEX(DISTINCT t0.c0) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY HEX(DISTINCT t0.c0) COLLATE BINARY DESC);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY HEX(DISTINCT t0.c0) COLLATE BINARY DESC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((NOT (vt0.c0)) IN ()) CROSS JOIN t0 ON CASE ((vt0.c0) IS TRUE)  WHEN LIKE('-630664697', rt0.c0) THEN rt0.c1 END WHERE (LIKELY(((rt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((rt0.c2) NOT NULL))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((NOT (vt0.c0)) IN ()) CROSS JOIN t0 ON CASE ((vt0.c0) IS TRUE)  WHEN LIKE('-630664697', rt0.c0) THEN rt0.c1 END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((NOT (vt0.c0)) IN ()) CROSS JOIN t0 ON CASE ((vt0.c0) IS TRUE)  WHEN LIKE('-630664697', rt0.c0) THEN rt0.c1 END WHERE (LIKELY(((rt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((rt0.c2) NOT NULL))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((NOT (vt0.c0)) IN ()) CROSS JOIN t0 ON CASE ((vt0.c0) IS TRUE)  WHEN LIKE('-630664697', rt0.c0) THEN rt0.c1 END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((NOT (vt0.c0)) IN ()) CROSS JOIN t0 ON CASE ((vt0.c0) IS TRUE)  WHEN LIKE('-630664697', rt0.c0) THEN rt0.c1 END WHERE (LIKELY(((rt0.c2) NOT NULL)));
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c1, CAST(t0.c0 AS BLOB), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(vt0.c1)))OR(vt0.c1))))<(((((vt0.c1))>=((vt0.c0))), ((vt0.c0) NOT NULL), vt0.c1)))) ORDER BY (vt0.c0 COLLATE NOCASE IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1, CAST(t0.c0 AS BLOB), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(vt0.c1)))OR(vt0.c1))))<(((((vt0.c1))>=((vt0.c0))), ((vt0.c0) NOT NULL), vt0.c1)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (vt0.c0 COLLATE NOCASE IN ()) ASC);
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c1, CAST(t0.c0 AS BLOB), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(vt0.c1)))OR(vt0.c1))))<(((((vt0.c1))>=((vt0.c0))), ((vt0.c0) NOT NULL), vt0.c1)))) ORDER BY (vt0.c0 COLLATE NOCASE IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1, CAST(t0.c0 AS BLOB), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(vt0.c1)))OR(vt0.c1))))<(((((vt0.c1))>=((vt0.c0))), ((vt0.c0) NOT NULL), vt0.c1)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (vt0.c0 COLLATE NOCASE IN ()) ASC);
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c1, CAST(t0.c0 AS BLOB), ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(vt0.c1)))OR(vt0.c1))))<(((((vt0.c1))>=((vt0.c0))), ((vt0.c0) NOT NULL), vt0.c1)))) ORDER BY (vt0.c0 COLLATE NOCASE IN ()) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))LIKE(CAST(rt0.c2 AS REAL)))) ORDER BY (((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1)))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))LIKE(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1)))) IS FALSE) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))LIKE(CAST(rt0.c2 AS REAL)))) ORDER BY (((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1)))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))LIKE(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1)))) IS FALSE) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))LIKE(CAST(rt0.c2 AS REAL)))) ORDER BY (((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1)))) IS FALSE) DESC;
SELECT ALL * FROM t0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c1);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((((((((CAST(t0.c0 AS BLOB))OR(((((((((((((vt0.c1)OR(0.9039705986290396)))AND(t0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(vt0.c1)))))AND(CAST(x'' AS REAL))))OR((((vt0.c0))<=((t0.c0))))))AND((t0.c0 IN (vt0.c1, t0.c0)))) WHERE (((((vt0.c1)OR(vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0 NOT INDEXED CROSS JOIN t0 ON ((((((((CAST(t0.c0 AS BLOB))OR(((((((((((((vt0.c1)OR(0.9039705986290396)))AND(t0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(vt0.c1)))))AND(CAST(x'' AS REAL))))OR((((vt0.c0))<=((t0.c0))))))AND((t0.c0 IN (vt0.c1, t0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((((((((CAST(t0.c0 AS BLOB))OR(((((((((((((vt0.c1)OR(0.9039705986290396)))AND(t0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(vt0.c1)))))AND(CAST(x'' AS REAL))))OR((((vt0.c0))<=((t0.c0))))))AND((t0.c0 IN (vt0.c1, t0.c0)))) WHERE (((((vt0.c1)OR(vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0 NOT INDEXED CROSS JOIN t0 ON ((((((((CAST(t0.c0 AS BLOB))OR(((((((((((((vt0.c1)OR(0.9039705986290396)))AND(t0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(vt0.c1)))))AND(CAST(x'' AS REAL))))OR((((vt0.c0))<=((t0.c0))))))AND((t0.c0 IN (vt0.c1, t0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((((((((CAST(t0.c0 AS BLOB))OR(((((((((((((vt0.c1)OR(0.9039705986290396)))AND(t0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(vt0.c1)))))AND(CAST(x'' AS REAL))))OR((((vt0.c0))<=((t0.c0))))))AND((t0.c0 IN (vt0.c1, t0.c0)))) WHERE (((((vt0.c1)OR(vt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))) ISNULL));
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN ((SQLITE_COMPILEOPTION_GET(vt0.c1))) AND ((((rt0.c2) IS TRUE))))) ORDER BY (NOT (vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((SQLITE_COMPILEOPTION_GET(vt0.c1))) AND ((((rt0.c2) IS TRUE))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN ((SQLITE_COMPILEOPTION_GET(vt0.c1))) AND ((((rt0.c2) IS TRUE))))) ORDER BY (NOT (vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((SQLITE_COMPILEOPTION_GET(vt0.c1))) AND ((((rt0.c2) IS TRUE))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN ((SQLITE_COMPILEOPTION_GET(vt0.c1))) AND ((((rt0.c2) IS TRUE))))) ORDER BY (NOT (vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c0)IS NOT(rt0.c0))) BETWEEN (json_valid(rt0.c2)) AND (((rt0.c1)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(rt0.c0))) BETWEEN (json_valid(rt0.c2)) AND (((rt0.c1)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c0)IS NOT(rt0.c0))) BETWEEN (json_valid(rt0.c2)) AND (((rt0.c1)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(rt0.c0))) BETWEEN (json_valid(rt0.c2)) AND (((rt0.c1)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c0)IS NOT(rt0.c0))) BETWEEN (json_valid(rt0.c2)) AND (((rt0.c1)IS NOT(rt0.c1)))));
SELECT ALL * FROM t0 WHERE ((- (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY (((('!0') IS TRUE)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((('!0') IS TRUE)) IS FALSE)  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((- (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY (((('!0') IS TRUE)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((('!0') IS TRUE)) IS FALSE)  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((- (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY (((('!0') IS TRUE)) IS FALSE)  NULLS LAST;
SELECT * FROM vt0 INNER JOIN rt0 ON x'' WHERE (CAST(((rt0.c1)&(0.1803424234694111)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)&(0.1803424234694111)) AS INTEGER)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON x'');
SELECT * FROM vt0 INNER JOIN rt0 ON x'' WHERE (CAST(((rt0.c1)&(0.1803424234694111)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)&(0.1803424234694111)) AS INTEGER)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON x'');
SELECT * FROM vt0 INNER JOIN rt0 ON x'' WHERE (CAST(((rt0.c1)&(0.1803424234694111)) AS INTEGER));
SELECT * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) IS FALSE));
SELECT ALL * FROM vt0, rt0, t0 WHERE (CASE WHEN ((vt0.c1)|(vt0.c1)) THEN LENGTH(rt0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1)|(vt0.c1)) THEN LENGTH(rt0.c1) END) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (CASE WHEN ((vt0.c1)|(vt0.c1)) THEN LENGTH(rt0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1)|(vt0.c1)) THEN LENGTH(rt0.c1) END) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (CASE WHEN ((vt0.c1)|(vt0.c1)) THEN LENGTH(rt0.c1) END);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (rt0.c2)) COLLATE NOCASE WHERE (((((((((TYPEOF(DISTINCT rt0.c2))OR((rt0.c2 IN (rt0.c0)))))AND(json_valid(vt0.c1))))AND((NULL IN ()))))OR(((vt0.c0)<=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((TYPEOF(DISTINCT rt0.c2))OR((rt0.c2 IN (rt0.c0)))))AND(json_valid(vt0.c1))))AND((NULL IN ()))))OR(((vt0.c0)<=(rt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (rt0.c2)) COLLATE NOCASE WHERE (((((((((TYPEOF(DISTINCT rt0.c2))OR((rt0.c2 IN (rt0.c0)))))AND(json_valid(vt0.c1))))AND((NULL IN ()))))OR(((vt0.c0)<=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((TYPEOF(DISTINCT rt0.c2))OR((rt0.c2 IN (rt0.c0)))))AND(json_valid(vt0.c1))))AND((NULL IN ()))))OR(((vt0.c0)<=(rt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (rt0.c2)) COLLATE NOCASE WHERE (((((((((TYPEOF(DISTINCT rt0.c2))OR((rt0.c2 IN (rt0.c0)))))AND(json_valid(vt0.c1))))AND((NULL IN ()))))OR(((vt0.c0)<=(rt0.c1)))));
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((t0.c0)) BETWEEN ((((rt0.c1) NOTNULL))) AND ((((rt0.c0)IS(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((((rt0.c1) NOTNULL))) AND ((((rt0.c0)IS(t0.c0)))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((t0.c0)) BETWEEN ((((rt0.c1) NOTNULL))) AND ((((rt0.c0)IS(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((((rt0.c1) NOTNULL))) AND ((((rt0.c0)IS(t0.c0)))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((t0.c0)) BETWEEN ((((rt0.c1) NOTNULL))) AND ((((rt0.c0)IS(t0.c0))))));
SELECT ALL * FROM t0, vt0, rt0 WHERE (json_array(t0.c0 COLLATE BINARY, ((rt0.c1)GLOB(vt0.c1)), 'N蹸315', CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END)) ORDER BY CASE (+ (vt0.c0))  WHEN ((rt0.c0)%(vt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) WHEN 124901488 THEN NULL WHEN ((((vt0.c1)OR(NULL)))OR(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) END, UNICODE(rt0.c2) DESC;
SELECT SUM(count) FROM (SELECT ((json_array(t0.c0 COLLATE BINARY, ((rt0.c1)GLOB(vt0.c1)), 'N蹸315', CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE (+ (vt0.c0))  WHEN ((rt0.c0)%(vt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) WHEN 124901488 THEN NULL WHEN ((((vt0.c1)OR(NULL)))OR(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) END, UNICODE(rt0.c2) DESC);
SELECT ALL * FROM t0, vt0, rt0 WHERE (json_array(t0.c0 COLLATE BINARY, ((rt0.c1)GLOB(vt0.c1)), 'N蹸315', CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END)) ORDER BY CASE (+ (vt0.c0))  WHEN ((rt0.c0)%(vt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) WHEN 124901488 THEN NULL WHEN ((((vt0.c1)OR(NULL)))OR(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) END, UNICODE(rt0.c2) DESC;
SELECT SUM(count) FROM (SELECT ((json_array(t0.c0 COLLATE BINARY, ((rt0.c1)GLOB(vt0.c1)), 'N蹸315', CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE (+ (vt0.c0))  WHEN ((rt0.c0)%(vt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) WHEN 124901488 THEN NULL WHEN ((((vt0.c1)OR(NULL)))OR(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) END, UNICODE(rt0.c2) DESC);
SELECT * FROM t0 WHERE (((((((t0.c0, t0.c0, 0.159217542292441)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND (('', t0.c0, t0.c0)))))<=((((((t0.c0)AND(0.9085502361521216)))OR(t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0, t0.c0, 0.159217542292441)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND (('', t0.c0, t0.c0)))))<=((((((t0.c0)AND(0.9085502361521216)))OR(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c0, t0.c0, 0.159217542292441)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND (('', t0.c0, t0.c0)))))<=((((((t0.c0)AND(0.9085502361521216)))OR(t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0, t0.c0, 0.159217542292441)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND (('', t0.c0, t0.c0)))))<=((((((t0.c0)AND(0.9085502361521216)))OR(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c0, t0.c0, 0.159217542292441)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND (('', t0.c0, t0.c0)))))<=((((((t0.c0)AND(0.9085502361521216)))OR(t0.c0))))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (COALESCE((('478355026') NOT BETWEEN (rt0.c1) AND (rt0.c2)), CAST('OxI>|F' AS BLOB))) ORDER BY (NOT ((rt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE((('478355026') NOT BETWEEN (rt0.c1) AND (rt0.c2)), CAST('OxI>|F' AS BLOB))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (NOT ((rt0.c2 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (COALESCE((('478355026') NOT BETWEEN (rt0.c1) AND (rt0.c2)), CAST('OxI>|F' AS BLOB))) ORDER BY (NOT ((rt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE((('478355026') NOT BETWEEN (rt0.c1) AND (rt0.c2)), CAST('OxI>|F' AS BLOB))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (NOT ((rt0.c2 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (COALESCE((('478355026') NOT BETWEEN (rt0.c1) AND (rt0.c2)), CAST('OxI>|F' AS BLOB))) ORDER BY (NOT ((rt0.c2 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((t0.c0)<=(rt0.c1)), (rt0.c2 IN (rt0.c1)), ((rt0.c2)%(rt0.c0))))<=((rt0.c0, HEX(DISTINCT t0.c0), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))))) ORDER BY CAST(((rt0.c1) IS TRUE) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)<=(rt0.c1)), (rt0.c2 IN (rt0.c1)), ((rt0.c2)%(rt0.c0))))<=((rt0.c0, HEX(DISTINCT t0.c0), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(((rt0.c1) IS TRUE) AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((t0.c0)<=(rt0.c1)), (rt0.c2 IN (rt0.c1)), ((rt0.c2)%(rt0.c0))))<=((rt0.c0, HEX(DISTINCT t0.c0), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))))) ORDER BY CAST(((rt0.c1) IS TRUE) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)<=(rt0.c1)), (rt0.c2 IN (rt0.c1)), ((rt0.c2)%(rt0.c0))))<=((rt0.c0, HEX(DISTINCT t0.c0), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(((rt0.c1) IS TRUE) AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((t0.c0)<=(rt0.c1)), (rt0.c2 IN (rt0.c1)), ((rt0.c2)%(rt0.c0))))<=((rt0.c0, HEX(DISTINCT t0.c0), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))))) ORDER BY CAST(((rt0.c1) IS TRUE) AS INTEGER) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT * FROM t0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))>((((t0.c0)>>(t0.c0))))) ASC  NULLS LAST, ((t0.c0 COLLATE NOCASE)AND(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))>((((t0.c0)>>(t0.c0))))) ASC  NULLS LAST, ((t0.c0 COLLATE NOCASE)AND(NULL)) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))>((((t0.c0)>>(t0.c0))))) ASC  NULLS LAST, ((t0.c0 COLLATE NOCASE)AND(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))>((((t0.c0)>>(t0.c0))))) ASC  NULLS LAST, ((t0.c0 COLLATE NOCASE)AND(NULL)) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))>((((t0.c0)>>(t0.c0))))) ASC  NULLS LAST, ((t0.c0 COLLATE NOCASE)AND(NULL)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c1, x'', vt0.c0, rt0.c0, rt0.c0)) BETWEEN ((CASE rt0.c0  WHEN vt0.c1 THEN rt0.c0 END, ((((rt0.c1)AND(vt0.c0)))OR(vt0.c0)), rt0.c1, vt0.c1, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((NULL, ((rt0.c0)IS(rt0.c0)), ((vt0.c0)*(rt0.c0)), CASE WHEN '0.09781991093676035' THEN rt0.c2 ELSE '' END, 0.3956499649903794))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, x'', vt0.c0, rt0.c0, rt0.c0)) BETWEEN ((CASE rt0.c0  WHEN vt0.c1 THEN rt0.c0 END, ((((rt0.c1)AND(vt0.c0)))OR(vt0.c0)), rt0.c1, vt0.c1, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((NULL, ((rt0.c0)IS(rt0.c0)), ((vt0.c0)*(rt0.c0)), CASE WHEN '0.09781991093676035' THEN rt0.c2 ELSE '' END, 0.3956499649903794)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c1, x'', vt0.c0, rt0.c0, rt0.c0)) BETWEEN ((CASE rt0.c0  WHEN vt0.c1 THEN rt0.c0 END, ((((rt0.c1)AND(vt0.c0)))OR(vt0.c0)), rt0.c1, vt0.c1, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((NULL, ((rt0.c0)IS(rt0.c0)), ((vt0.c0)*(rt0.c0)), CASE WHEN '0.09781991093676035' THEN rt0.c2 ELSE '' END, 0.3956499649903794))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, x'', vt0.c0, rt0.c0, rt0.c0)) BETWEEN ((CASE rt0.c0  WHEN vt0.c1 THEN rt0.c0 END, ((((rt0.c1)AND(vt0.c0)))OR(vt0.c0)), rt0.c1, vt0.c1, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((NULL, ((rt0.c0)IS(rt0.c0)), ((vt0.c0)*(rt0.c0)), CASE WHEN '0.09781991093676035' THEN rt0.c2 ELSE '' END, 0.3956499649903794)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c1, x'', vt0.c0, rt0.c0, rt0.c0)) BETWEEN ((CASE rt0.c0  WHEN vt0.c1 THEN rt0.c0 END, ((((rt0.c1)AND(vt0.c0)))OR(vt0.c0)), rt0.c1, vt0.c1, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((NULL, ((rt0.c0)IS(rt0.c0)), ((vt0.c0)*(rt0.c0)), CASE WHEN '0.09781991093676035' THEN rt0.c2 ELSE '' END, 0.3956499649903794))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((((rt0.c0)AND(vt0.c1)))OR(t0.c0)) AS NUMERIC)) ORDER BY CAST('-1172634000' AS BLOB) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)AND(vt0.c1)))OR(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CAST('-1172634000' AS BLOB) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((((rt0.c0)AND(vt0.c1)))OR(t0.c0)) AS NUMERIC)) ORDER BY CAST('-1172634000' AS BLOB) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)AND(vt0.c1)))OR(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CAST('-1172634000' AS BLOB) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((((rt0.c0)AND(vt0.c1)))OR(t0.c0)) AS NUMERIC)) ORDER BY CAST('-1172634000' AS BLOB) COLLATE NOCASE;
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0))) NOT NULL) WHERE (((TYPEOF(DISTINCT rt0.c1)) NOT BETWEEN (IFNULL(rt0.c0, rt0.c2)) AND (((rt0.c2)/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt0.c1)) NOT BETWEEN (IFNULL(rt0.c0, rt0.c2)) AND (((rt0.c2)/(rt0.c2))))) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0))) NOT NULL));
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0))) NOT NULL) WHERE (((TYPEOF(DISTINCT rt0.c1)) NOT BETWEEN (IFNULL(rt0.c0, rt0.c2)) AND (((rt0.c2)/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt0.c1)) NOT BETWEEN (IFNULL(rt0.c0, rt0.c2)) AND (((rt0.c2)/(rt0.c2))))) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0))) NOT NULL));
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0))) NOT NULL) WHERE (((TYPEOF(DISTINCT rt0.c1)) NOT BETWEEN (IFNULL(rt0.c0, rt0.c2)) AND (((rt0.c2)/(rt0.c2)))));
SELECT * FROM vt0, t0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR(CAST(t0.c0 AS NUMERIC))))AND(json_insert(vt0.c0, vt0.c1, t0.c0)))) ORDER BY ((t0.c0 COLLATE RTRIM) NOT BETWEEN ((vt0.c1 IN ())) AND ((t0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR(CAST(t0.c0 AS NUMERIC))))AND(json_insert(vt0.c0, vt0.c1, t0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c0 COLLATE RTRIM) NOT BETWEEN ((vt0.c1 IN ())) AND ((t0.c0 IN ())))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR(CAST(t0.c0 AS NUMERIC))))AND(json_insert(vt0.c0, vt0.c1, t0.c0)))) ORDER BY ((t0.c0 COLLATE RTRIM) NOT BETWEEN ((vt0.c1 IN ())) AND ((t0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR(CAST(t0.c0 AS NUMERIC))))AND(json_insert(vt0.c0, vt0.c1, t0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c0 COLLATE RTRIM) NOT BETWEEN ((vt0.c1 IN ())) AND ((t0.c0 IN ())))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR(CAST(t0.c0 AS NUMERIC))))AND(json_insert(vt0.c0, vt0.c1, t0.c0)))) ORDER BY ((t0.c0 COLLATE RTRIM) NOT BETWEEN ((vt0.c1 IN ())) AND ((t0.c0 IN ())))  NULLS FIRST;
SELECT ALL * FROM t0, vt0, rt0 WHERE ('1756800206');
SELECT SUM(count) FROM (SELECT ALL (('1756800206') IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ('1756800206');
SELECT SUM(count) FROM (SELECT ALL (('1756800206') IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ('1756800206');
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((CAST(rt0.c0 AS NUMERIC)))<(((+ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS NUMERIC)))<(((+ (vt0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((CAST(rt0.c0 AS NUMERIC)))<(((+ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS NUMERIC)))<(((+ (vt0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((CAST(rt0.c0 AS NUMERIC)))<(((+ (vt0.c0))))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((('') IS FALSE) IN (vt0.c0)) WHERE (((CAST('1688885667' AS INTEGER)) IS FALSE)) ORDER BY ((((((t0.c0)OR(vt0.c1)))OR(vt0.c1)))*(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))), ((('?.x*gh')!=(vt0.c0)) IN (CAST(vt0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('1688885667' AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((('') IS FALSE) IN (vt0.c0)) ORDER BY ((((((t0.c0)OR(vt0.c1)))OR(vt0.c1)))*(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))), ((('?.x*gh')!=(vt0.c0)) IN (CAST(vt0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((('') IS FALSE) IN (vt0.c0)) WHERE (((CAST('1688885667' AS INTEGER)) IS FALSE)) ORDER BY ((((((t0.c0)OR(vt0.c1)))OR(vt0.c1)))*(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))), ((('?.x*gh')!=(vt0.c0)) IN (CAST(vt0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('1688885667' AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((('') IS FALSE) IN (vt0.c0)) ORDER BY ((((((t0.c0)OR(vt0.c1)))OR(vt0.c1)))*(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))), ((('?.x*gh')!=(vt0.c0)) IN (CAST(vt0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((('') IS FALSE) IN (vt0.c0)) WHERE (((CAST('1688885667' AS INTEGER)) IS FALSE)) ORDER BY ((((((t0.c0)OR(vt0.c1)))OR(vt0.c1)))*(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))), ((('?.x*gh')!=(vt0.c0)) IN (CAST(vt0.c1 AS TEXT)));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((0.09483017880784361)!=(((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((0.09483017880784361)<>(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((0.09483017880784361)!=(((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((0.09483017880784361)<>(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((0.09483017880784361)!=(((rt0.c2) NOTNULL))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON t0.c0 RIGHT OUTER JOIN t0 ON vt0.c0 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON t0.c0 RIGHT OUTER JOIN t0 ON vt0.c0);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON t0.c0 RIGHT OUTER JOIN t0 ON vt0.c0 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON t0.c0 RIGHT OUTER JOIN t0 ON vt0.c0);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON '' COLLATE RTRIM WHERE (CASE t0.c0  WHEN ROUND(vt0.c0, vt0.c0) THEN vt0.c1 END) ORDER BY ABS(((vt0.c0) NOT NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN ROUND(vt0.c0, vt0.c0) THEN vt0.c1 END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON '' COLLATE RTRIM ORDER BY ABS(((vt0.c0) NOT NULL))  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON '' COLLATE RTRIM WHERE (CASE t0.c0  WHEN ROUND(vt0.c0, vt0.c0) THEN vt0.c1 END) ORDER BY ABS(((vt0.c0) NOT NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN ROUND(vt0.c0, vt0.c0) THEN vt0.c1 END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON '' COLLATE RTRIM ORDER BY ABS(((vt0.c0) NOT NULL))  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON '' COLLATE RTRIM WHERE (CASE t0.c0  WHEN ROUND(vt0.c0, vt0.c0) THEN vt0.c1 END) ORDER BY ABS(((vt0.c0) NOT NULL))  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (CAST('' AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS REAL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CAST('' AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS REAL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CAST('' AS REAL));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (json_valid((+ (t0.c0)))) ORDER BY (~ (0.45757680234856657 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((json_valid((+ (t0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (0.45757680234856657 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (json_valid((+ (t0.c0)))) ORDER BY (~ (0.45757680234856657 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((json_valid((+ (t0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (0.45757680234856657 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (json_valid((+ (t0.c0)))) ORDER BY (~ (0.45757680234856657 COLLATE NOCASE));
SELECT ALL * FROM t0 WHERE ((~ ((NOT (t0.c0))))) ORDER BY ((PRINTF(t0.c0)) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND ((t0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((PRINTF(t0.c0)) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND ((t0.c0 IN ()))) DESC);
SELECT ALL * FROM t0 WHERE ((~ ((NOT (t0.c0))))) ORDER BY ((PRINTF(t0.c0)) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND ((t0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((PRINTF(t0.c0)) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND ((t0.c0 IN ()))) DESC);
SELECT ALL * FROM t0 WHERE ((~ ((NOT (t0.c0))))) ORDER BY ((PRINTF(t0.c0)) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND ((t0.c0 IN ()))) DESC;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (0.707701444320161) AND (t0.c0)))==(t0.c0))) ORDER BY (((t0.c0, t0.c0, '130344077')) BETWEEN ((NULL, LAST_INSERT_ROWID(), ((t0.c0)<(t0.c0)))) AND ((((((t0.c0)OR(t0.c0)))AND(t0.c0)), t0.c0 COLLATE RTRIM, t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (0.707701444320161) AND (t0.c0)))=(t0.c0))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, '130344077')) BETWEEN ((NULL, LAST_INSERT_ROWID(), ((t0.c0)<(t0.c0)))) AND ((((((t0.c0)OR(t0.c0)))AND(t0.c0)), t0.c0 COLLATE RTRIM, t0.c0))) ASC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (0.707701444320161) AND (t0.c0)))==(t0.c0))) ORDER BY (((t0.c0, t0.c0, '130344077')) BETWEEN ((NULL, LAST_INSERT_ROWID(), ((t0.c0)<(t0.c0)))) AND ((((((t0.c0)OR(t0.c0)))AND(t0.c0)), t0.c0 COLLATE RTRIM, t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (0.707701444320161) AND (t0.c0)))=(t0.c0))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, '130344077')) BETWEEN ((NULL, LAST_INSERT_ROWID(), ((t0.c0)<(t0.c0)))) AND ((((((t0.c0)OR(t0.c0)))AND(t0.c0)), t0.c0 COLLATE RTRIM, t0.c0))) ASC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (0.707701444320161) AND (t0.c0)))==(t0.c0))) ORDER BY (((t0.c0, t0.c0, '130344077')) BETWEEN ((NULL, LAST_INSERT_ROWID(), ((t0.c0)<(t0.c0)))) AND ((((((t0.c0)OR(t0.c0)))AND(t0.c0)), t0.c0 COLLATE RTRIM, t0.c0))) ASC;
SELECT * FROM vt0, rt0 NATURAL JOIN t0 WHERE ((~ ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t0);
SELECT * FROM vt0, rt0 NATURAL JOIN t0 WHERE ((~ ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t0);
SELECT * FROM vt0, rt0 NATURAL JOIN t0 WHERE ((~ ((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE (NULLIF(COALESCE(DISTINCT rt0.c2, rt0.c2), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(COALESCE(DISTINCT rt0.c2, rt0.c2), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULLIF(COALESCE(DISTINCT rt0.c2, rt0.c2), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(COALESCE(DISTINCT rt0.c2, rt0.c2), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULLIF(COALESCE(DISTINCT rt0.c2, rt0.c2), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((NOT (rt0.c1)) COLLATE RTRIM) ORDER BY json_object(CASE rt0.c0  WHEN t0.c0 THEN vt0.c1 END, vt0.c0 COLLATE NOCASE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY json_object(CASE rt0.c0  WHEN t0.c0 THEN vt0.c1 END, vt0.c0 COLLATE NOCASE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((NOT (rt0.c1)) COLLATE RTRIM) ORDER BY json_object(CASE rt0.c0  WHEN t0.c0 THEN vt0.c1 END, vt0.c0 COLLATE NOCASE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY json_object(CASE rt0.c0  WHEN t0.c0 THEN vt0.c1 END, vt0.c0 COLLATE NOCASE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((UNLIKELY(rt0.c1)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(rt0.c1)) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((UNLIKELY(rt0.c1)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(rt0.c1)) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((UNLIKELY(rt0.c1)) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c2) ORDER BY CASE WHEN (((rt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c0, t0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, rt0.c0))) THEN ((rt0.c0) ISNULL) ELSE t0.c0 END DESC, ((NULLIF(rt0.c2, x''))>(0x6d1dbdc7))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CASE WHEN (((rt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c0, t0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, rt0.c0))) THEN ((rt0.c0) ISNULL) ELSE t0.c0 END DESC, ((NULLIF(rt0.c2, x''))>(0x6d1dbdc7))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c2) ORDER BY CASE WHEN (((rt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c0, t0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, rt0.c0))) THEN ((rt0.c0) ISNULL) ELSE t0.c0 END DESC, ((NULLIF(rt0.c2, x''))>(0x6d1dbdc7))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CASE WHEN (((rt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c0, t0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, rt0.c0))) THEN ((rt0.c0) ISNULL) ELSE t0.c0 END DESC, ((NULLIF(rt0.c2, x''))>(0x6d1dbdc7))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c2) ORDER BY CASE WHEN (((rt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c0, t0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, rt0.c0))) THEN ((rt0.c0) ISNULL) ELSE t0.c0 END DESC, ((NULLIF(rt0.c2, x''))>(0x6d1dbdc7))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (-1.653797477E9) ORDER BY TRIM(DISTINCT ((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)), ((((((((rt0.c2)OR(-1856087114)))AND(NULL)))OR(rt0.c0)))AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((-1.653797477E9) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY TRIM(DISTINCT ((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)), ((((((((rt0.c2)OR(-1856087114)))AND(NULL)))OR(rt0.c0)))AND(rt0.c1))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (-1.653797477E9) ORDER BY TRIM(DISTINCT ((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)), ((((((((rt0.c2)OR(-1856087114)))AND(NULL)))OR(rt0.c0)))AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((-1.653797477E9) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY TRIM(DISTINCT ((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)), ((((((((rt0.c2)OR(-1856087114)))AND(NULL)))OR(rt0.c0)))AND(rt0.c1))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (-1.653797477E9) ORDER BY TRIM(DISTINCT ((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)), ((((((((rt0.c2)OR(-1856087114)))AND(NULL)))OR(rt0.c0)))AND(rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1)=(rt0.c2))))<=((TOTAL_CHANGES())))) ORDER BY ((((((rt0.c0) NOTNULL))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)==(rt0.c2))))<=((TOTAL_CHANGES())))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0) NOTNULL))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(rt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1)=(rt0.c2))))<=((TOTAL_CHANGES())))) ORDER BY ((((((rt0.c0) NOTNULL))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)==(rt0.c2))))<=((TOTAL_CHANGES())))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0) NOTNULL))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(rt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1)=(rt0.c2))))<=((TOTAL_CHANGES())))) ORDER BY ((((((rt0.c0) NOTNULL))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(rt0.c0))  NULLS LAST;
SELECT * FROM t0, vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY (CAST(rt0.c1 AS TEXT) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (CAST(rt0.c1 AS TEXT) IN ())  NULLS FIRST);
SELECT * FROM t0, vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY (CAST(rt0.c1 AS TEXT) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (CAST(rt0.c1 AS TEXT) IN ())  NULLS FIRST);
SELECT * FROM t0, vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY (CAST(rt0.c1 AS TEXT) IN ())  NULLS FIRST;
SELECT * FROM vt0 WHERE ((('447189568')/((vt0.c1 IN (vt0.c0, vt0.c1))))) ORDER BY ((vt0.c0)/(((vt0.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('447189568')/((vt0.c1 IN (vt0.c0, vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)/(((vt0.c0)IS(vt0.c0)))));
SELECT * FROM vt0 WHERE ((('447189568')/((vt0.c1 IN (vt0.c0, vt0.c1))))) ORDER BY ((vt0.c0)/(((vt0.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('447189568')/((vt0.c1 IN (vt0.c0, vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)/(((vt0.c0)IS(vt0.c0)))));
SELECT * FROM vt0 WHERE ((('447189568')/((vt0.c1 IN (vt0.c0, vt0.c1))))) ORDER BY ((vt0.c0)/(((vt0.c0)IS(vt0.c0))));
SELECT * FROM rt0, t0 WHERE ((~ (((rt0.c1)>=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1)>=(rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((~ (((rt0.c1)>=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1)>=(rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((~ (((rt0.c1)>=(rt0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((((rt0.c2)AND(0.4763434684904254)))OR(t0.c0)) AS REAL)) ORDER BY ((((rt0.c0)IS NOT(rt0.c2)))LIKE(((((vt0.c1)OR(rt0.c2)))OR(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)AND(0.4763434684904254)))OR(t0.c0)) AS REAL)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((rt0.c0)IS NOT(rt0.c2)))LIKE(((((vt0.c1)OR(rt0.c2)))OR(t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((((rt0.c2)AND(0.4763434684904254)))OR(t0.c0)) AS REAL)) ORDER BY ((((rt0.c0)IS NOT(rt0.c2)))LIKE(((((vt0.c1)OR(rt0.c2)))OR(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)AND(0.4763434684904254)))OR(t0.c0)) AS REAL)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((rt0.c0)IS NOT(rt0.c2)))LIKE(((((vt0.c1)OR(rt0.c2)))OR(t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((((rt0.c2)AND(0.4763434684904254)))OR(t0.c0)) AS REAL)) ORDER BY ((((rt0.c0)IS NOT(rt0.c2)))LIKE(((((vt0.c1)OR(rt0.c2)))OR(t0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt0 ON ((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN ((vt0.c1 IN ())) AND (rt0.c0)) WHERE (((((rt0.c1)/(rt0.c2)))>=(LIKELIHOOD(vt0.c1, 0.9636112999239068)))) ORDER BY CAST(0.41338901895406455 AS INTEGER) COLLATE BINARY DESC  NULLS FIRST, LIKELIHOOD(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)), 0.7140301512077848) DESC  NULLS LAST, t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)/(rt0.c2)))>=(LIKELIHOOD(vt0.c1, 0.9636112999239068)))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON ((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN ((vt0.c1 IN ())) AND (rt0.c0)) ORDER BY CAST(0.41338901895406455 AS INTEGER) COLLATE BINARY DESC  NULLS FIRST, LIKELIHOOD(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)), 0.7140301512077848) DESC  NULLS LAST, t0.c0 DESC);
SELECT COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt0 ON ((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN ((vt0.c1 IN ())) AND (rt0.c0)) WHERE (((((rt0.c1)/(rt0.c2)))>=(LIKELIHOOD(vt0.c1, 0.9636112999239068)))) ORDER BY CAST(0.41338901895406455 AS INTEGER) COLLATE BINARY DESC  NULLS FIRST, LIKELIHOOD(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)), 0.7140301512077848) DESC  NULLS LAST, t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)/(rt0.c2)))>=(LIKELIHOOD(vt0.c1, 0.9636112999239068)))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON ((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN ((vt0.c1 IN ())) AND (rt0.c0)) ORDER BY CAST(0.41338901895406455 AS INTEGER) COLLATE BINARY DESC  NULLS FIRST, LIKELIHOOD(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)), 0.7140301512077848) DESC  NULLS LAST, t0.c0 DESC);
SELECT COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt0 ON ((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN ((vt0.c1 IN ())) AND (rt0.c0)) WHERE (((((rt0.c1)/(rt0.c2)))>=(LIKELIHOOD(vt0.c1, 0.9636112999239068)))) ORDER BY CAST(0.41338901895406455 AS INTEGER) COLLATE BINARY DESC  NULLS FIRST, LIKELIHOOD(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)), 0.7140301512077848) DESC  NULLS LAST, t0.c0 DESC;
SELECT * FROM t0, rt0 WHERE (((NULL) NOT NULL)) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY ''  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((NULL) NOT NULL)) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY ''  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((NULL) NOT NULL)) ORDER BY ''  NULLS LAST;
SELECT * FROM vt0 WHERE (0.824571709720809) ORDER BY (~ (((vt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.824571709720809) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0) NOT NULL))) ASC);
SELECT * FROM vt0 WHERE (0.824571709720809) ORDER BY (~ (((vt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.824571709720809) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0) NOT NULL))) ASC);
SELECT * FROM vt0 WHERE (0.824571709720809) ORDER BY (~ (((vt0.c0) NOT NULL))) ASC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON 0.5804240204033674 FULL OUTER JOIN rt0 ON ((TOTAL_CHANGES())GLOB(((rt0.c1) NOT NULL))) WHERE (('Mr,e྇\rPO' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('Mr,e྇\rPO' IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON 0.5804240204033674 FULL OUTER JOIN rt0 ON ((TOTAL_CHANGES())GLOB(((rt0.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON 0.5804240204033674 FULL OUTER JOIN rt0 ON ((TOTAL_CHANGES())GLOB(((rt0.c1) NOT NULL))) WHERE (('Mr,e྇\rPO' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('Mr,e྇\rPO' IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON 0.5804240204033674 FULL OUTER JOIN rt0 ON ((TOTAL_CHANGES())GLOB(((rt0.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON 0.5804240204033674 FULL OUTER JOIN rt0 ON ((TOTAL_CHANGES())GLOB(((rt0.c1) NOT NULL))) WHERE (('Mr,e྇\rPO' IN ()));
SELECT * FROM rt0 WHERE (CASE (rt0.c0 IN ())  WHEN LTRIM(rt0.c0, rt0.c2) THEN (~ (rt0.c2)) END) ORDER BY (NOT (rt0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c0 IN ())  WHEN LTRIM(rt0.c0, rt0.c2) THEN (~ (rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c1)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE (rt0.c0 IN ())  WHEN LTRIM(rt0.c0, rt0.c2) THEN (~ (rt0.c2)) END) ORDER BY (NOT (rt0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c0 IN ())  WHEN LTRIM(rt0.c0, rt0.c2) THEN (~ (rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c1)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE (rt0.c0 IN ())  WHEN LTRIM(rt0.c0, rt0.c2) THEN (~ (rt0.c2)) END) ORDER BY (NOT (rt0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM rt0, vt0, t0 WHERE ((rt0.c0 IN (vt0.c1)) COLLATE BINARY) ORDER BY (((t0.c0)) BETWEEN ((((rt0.c2)|(rt0.c1)))) AND ((((vt0.c0)-(vt0.c0))))) DESC, LIKELY(DISTINCT HEX(DISTINCT rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((t0.c0)) BETWEEN ((((rt0.c2)|(rt0.c1)))) AND ((((vt0.c0)-(vt0.c0))))) DESC, LIKELY(DISTINCT HEX(DISTINCT rt0.c0)) DESC);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((rt0.c0 IN (vt0.c1)) COLLATE BINARY) ORDER BY (((t0.c0)) BETWEEN ((((rt0.c2)|(rt0.c1)))) AND ((((vt0.c0)-(vt0.c0))))) DESC, LIKELY(DISTINCT HEX(DISTINCT rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((t0.c0)) BETWEEN ((((rt0.c2)|(rt0.c1)))) AND ((((vt0.c0)-(vt0.c0))))) DESC, LIKELY(DISTINCT HEX(DISTINCT rt0.c0)) DESC);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((rt0.c0 IN (vt0.c1)) COLLATE BINARY) ORDER BY (((t0.c0)) BETWEEN ((((rt0.c2)|(rt0.c1)))) AND ((((vt0.c0)-(vt0.c0))))) DESC, LIKELY(DISTINCT HEX(DISTINCT rt0.c0)) DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c1 COLLATE RTRIM)IS(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (- (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC, ((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(t0.c0)))AND(vt0.c0)))-(((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM)IS(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (- (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC, ((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(t0.c0)))AND(vt0.c0)))-(((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c1 COLLATE RTRIM)IS(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (- (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC, ((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(t0.c0)))AND(vt0.c0)))-(((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM)IS(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (- (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC, ((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(t0.c0)))AND(vt0.c0)))-(((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c1 COLLATE RTRIM)IS(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (- (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC, ((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(t0.c0)))AND(vt0.c0)))-(((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 INDEXED BY i10, vt0, t0 WHERE ((((NULL))==((TIME(t0.c0, vt0.c0, rt0.c0, rt0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NULL))==((TIME(t0.c0, vt0.c0, rt0.c0, rt0.c0, t0.c0))))) IS TRUE)  as count FROM rt0 INDEXED BY i10, vt0, t0);
SELECT COUNT(*) FROM rt0 INDEXED BY i10, vt0, t0 WHERE ((((NULL))==((TIME(t0.c0, vt0.c0, rt0.c0, rt0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NULL))==((TIME(t0.c0, vt0.c0, rt0.c0, rt0.c0, t0.c0))))) IS TRUE)  as count FROM rt0 INDEXED BY i10, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((rt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((rt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((rt0.c0 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT ((vt0.c1)==(vt0.c1))) INNER JOIN t0 ON ((CAST(t0.c0 AS REAL))>((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))))) WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND ('1221596869')))AND(((((vt0.c1)AND(vt0.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND ('1221596869')))AND(((((vt0.c1)AND(vt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT ((vt0.c1)==(vt0.c1))) INNER JOIN t0 ON ((CAST(t0.c0 AS REAL))>((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT ((vt0.c1)==(vt0.c1))) INNER JOIN t0 ON ((CAST(t0.c0 AS REAL))>((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))))) WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND ('1221596869')))AND(((((vt0.c1)AND(vt0.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND ('1221596869')))AND(((((vt0.c1)AND(vt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT ((vt0.c1)==(vt0.c1))) INNER JOIN t0 ON ((CAST(t0.c0 AS REAL))>((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT ((vt0.c1)==(vt0.c1))) INNER JOIN t0 ON ((CAST(t0.c0 AS REAL))>((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))))) WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND ('1221596869')))AND(((((vt0.c1)AND(vt0.c0)))OR(rt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CAST(((vt0.c1)IS NOT(vt0.c0)) AS BLOB)) ORDER BY LIKELIHOOD(((t0.c0) IS FALSE), 0.037368050413466136) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)IS NOT(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY LIKELIHOOD(((t0.c0) IS FALSE), 0.037368050413466136) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CAST(((vt0.c1)IS NOT(vt0.c0)) AS BLOB)) ORDER BY LIKELIHOOD(((t0.c0) IS FALSE), 0.037368050413466136) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)IS NOT(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY LIKELIHOOD(((t0.c0) IS FALSE), 0.037368050413466136) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CAST(((vt0.c1)IS NOT(vt0.c0)) AS BLOB)) ORDER BY LIKELIHOOD(((t0.c0) IS FALSE), 0.037368050413466136) DESC  NULLS FIRST;
SELECT * FROM rt0, t0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))>>(CASE rt0.c2  WHEN 0.5947745833290272 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))>>(CASE rt0.c2  WHEN 0.5947745833290272 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))>>(CASE rt0.c2  WHEN 0.5947745833290272 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))>>(CASE rt0.c2  WHEN 0.5947745833290272 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))>>(CASE rt0.c2  WHEN 0.5947745833290272 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((x'')GLOB(vt0.c0))  WHEN 0.6358176232833531 THEN ((vt0.c0)>(vt0.c1)) ELSE (+ (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((x'')GLOB(vt0.c0))  WHEN 0.6358176232833531 THEN ((vt0.c0)>(vt0.c1)) ELSE (+ (vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((x'')GLOB(vt0.c0))  WHEN 0.6358176232833531 THEN ((vt0.c0)>(vt0.c1)) ELSE (+ (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((x'')GLOB(vt0.c0))  WHEN 0.6358176232833531 THEN ((vt0.c0)>(vt0.c1)) ELSE (+ (vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((x'')GLOB(vt0.c0))  WHEN 0.6358176232833531 THEN ((vt0.c0)>(vt0.c1)) ELSE (+ (vt0.c1)) END);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) ISNULL)) IS TRUE) CROSS JOIN vt0 ON (((rt0.c1 IN ()))<=(TRIM(vt0.c0))) WHERE (CAST(((((t0.c0)AND(vt0.c1)))AND(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c0)AND(vt0.c1)))AND(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) ISNULL)) IS TRUE) CROSS JOIN vt0 ON (((rt0.c1 IN ()))<=(TRIM(vt0.c0))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) ISNULL)) IS TRUE) CROSS JOIN vt0 ON (((rt0.c1 IN ()))<=(TRIM(vt0.c0))) WHERE (CAST(((((t0.c0)AND(vt0.c1)))AND(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c0)AND(vt0.c1)))AND(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) ISNULL)) IS TRUE) CROSS JOIN vt0 ON (((rt0.c1 IN ()))<=(TRIM(vt0.c0))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) ISNULL)) IS TRUE) CROSS JOIN vt0 ON (((rt0.c1 IN ()))<=(TRIM(vt0.c0))) WHERE (CAST(((((t0.c0)AND(vt0.c1)))AND(vt0.c0)) AS INTEGER));
SELECT * FROM rt0, t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (NULL);
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))<=((((rt0.c1) IS TRUE)))) WHERE ((((((((((t0.c0)AND(rt0.c0)))OR(',F')))AND(rt0.c1)))AND(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c0)AND(rt0.c0)))OR(',F')))AND(rt0.c1)))AND(rt0.c0)) IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))<=((((rt0.c1) IS TRUE)))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))<=((((rt0.c1) IS TRUE)))) WHERE ((((((((((t0.c0)AND(rt0.c0)))OR(',F')))AND(rt0.c1)))AND(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c0)AND(rt0.c0)))OR(',F')))AND(rt0.c1)))AND(rt0.c0)) IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))<=((((rt0.c1) IS TRUE)))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))<=((((rt0.c1) IS TRUE)))) WHERE ((((((((((t0.c0)AND(rt0.c0)))OR(',F')))AND(rt0.c1)))AND(rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c0)AND(vt0.c1)))AND(vt0.c0))) BETWEEN (((x'') BETWEEN (t0.c0) AND (vt0.c1))) AND ((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(vt0.c1)))AND(vt0.c0))) BETWEEN (((x'') BETWEEN (t0.c0) AND (vt0.c1))) AND ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c0)AND(vt0.c1)))AND(vt0.c0))) BETWEEN (((x'') BETWEEN (t0.c0) AND (vt0.c1))) AND ((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(vt0.c1)))AND(vt0.c0))) BETWEEN (((x'') BETWEEN (t0.c0) AND (vt0.c1))) AND ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c0)AND(vt0.c1)))AND(vt0.c0))) BETWEEN (((x'') BETWEEN (t0.c0) AND (vt0.c1))) AND ((~ (vt0.c1)))));
