-- Time: 2024/06/10 06:02:53
-- Database: database87
-- Database version: 3.40.0
-- seed value: 3992318987
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
INSERT OR FAIL INTO rt0 VALUES (-1369133794, x'98ae', NULL), (NULL, 0.6616094940508137, x''), (NULL, x'', '-1369133794'), (NULL, x'', '899953137'), ('', 0.023083001134350356, ''); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c0) VALUES (NULL, 8.99953137E8); -- 5ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c1, c2) VALUES (NULL, '', '&H57(Ol<'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=x'' WHERE NULL; -- 0ms;
PRAGMA temp.journal_size_limit; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
UPDATE rt0 SET c2=x'8e62'; -- 1ms;
UPDATE OR IGNORE rt0 SET c1='W,+' WHERE (((+ (rt0.c2)))&(CASE WHEN rt0.c0 THEN rt0.c2 END)); -- 0ms;
PRAGMA cache_size; -- 0ms;
REINDEX  rt0; -- 0ms;
UPDATE OR ABORT rt0 SET (c2, c0)=(NULL, x'7448') WHERE 0.023083001134350356; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c1, c0)=(NULL, NULL, 0.3333006156293665) WHERE (((((rt0.c1))>((rt0.c1))))>>(ABS(rt0.c1))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(x'') WHERE ((rt0.c2) ISNULL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1369133794 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1369133794 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)<<('224384814')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')AND(x'6ebf')))OR(NULL)) IN ((((x'')) BETWEEN (('0.3333006156293665')) AND ((0.761543074049322))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((x'392d'))=((-1.369133794E9))) THEN (~ (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1369133794 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=899953137 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((- (0.6021460466541932)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((NOT (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (+ (NULL))  WHEN CAST(x'' AS NUMERIC) THEN ((0X3f4203c5) BETWEEN (0.14907416947396868) AND (x'')) ELSE NULL END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>>('')))<=(((('')) BETWEEN ((0xffffffffb0628ac6)) AND ((''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1061290949 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'a1d4')AND(0.6021460466541932)))OR(x'')))<((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))>=((x'69c1'))))IS NOT(((0.3333006156293665)<=(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 899953137  WHEN -517277657 THEN '899953137' ELSE 'ᑲA荰>j낅U[{],' END COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1443883918 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-517277657'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1061290949 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-512924911'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '336247420 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1369133794 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1097793375', NULL, 0.22452708526864062)) BETWEEN (('0.023083001134350356', '', x'')) AND ((x'', 0Xffffffffdd5671cd, x'a3b0bc44')))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2129375365 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-445152400 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'8f22' COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1097793375 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-445152400')&(NULL)) IN (HEX(''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.22452708526864062)IS NOT('224384814')) IN ((NOT (x'')), 0.48234370299560714 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((1293944732))>((0X3f1c5b7f))) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((2129375365)AND(0.48234370299560714)))AND('1067578984')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '0.48234370299560714' COLLATE NOCASE  WHEN 0.9309723177374121 COLLATE NOCASE THEN (NOT (x'')) WHEN (NOT (NULL)) THEN CAST(NULL AS REAL) WHEN ((((NULL)AND('336247420')))AND(NULL)) THEN (+ (NULL)) ELSE ((x'') BETWEEN (NULL) AND (0.6014084159858988)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1061290949 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=1067578984 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'e28f')>(NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2141169043 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('~ꜫYW)+')=('+')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL))<=(NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 'C1', '-1236913204')) NOT BETWEEN ((CASE WHEN NULL THEN x'' ELSE '1067578984' END, 'FALSE', ((0.524968087213608)>(0.6762275391341691)))) AND ((CAST(-1335719226 AS TEXT), CASE WHEN NULL THEN 1e500 ELSE NULL END, (((-5.17277657E8)) NOT BETWEEN ((NULL)) AND ((0.14907416947396868)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((0xffffffff9dddea17))<=((-1.335719226E9))))AND(NULL)))AND(((((((((NULL)OR(NULL)))OR(x'')))AND(NULL)))AND('-1335719226')))))AND(((x'0336') BETWEEN (0x73a033d9) AND (NULL)))))AND(((0.6205218843222498) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-512924911'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('2129375365')) BETWEEN ((-1.646401001E9)) AND ((x'96a2'))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1088188963 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ ('M*')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1097793375 sz=891367333 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS BLOB) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1594660537 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'a1f0')OR(0.6616094940508137)))AND(x'0e96'))) BETWEEN (((1067578984) IS FALSE)) AND (('-1852657486' IN (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(((x'') IS FALSE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '336247420 sz=2142741901 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN x'' THEN 0x35a431f1 END THEN json(NULL) WHEN ((('579121226', '-203670954', NULL)) NOT BETWEEN ((NULL, '0.6762275391341691', x'3f7ac1f6')) AND ((0.6616094940508137, x'158c', '1803426423'))) THEN ((((NULL)AND(NULL)))AND(NULL)) WHEN (((NULL))>=((x'1b49'))) THEN (~ ('')) ELSE (+ (0.22019766295424914)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-703275214 sz=1528479083 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-203670954 -1443883918 sz=948741324 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((2142741901)AND('M*')))AND(x'')))OR(x'')))AND(NULL)))&(((((((((NULL)AND('')))AND('1236826512')))AND('2036691924')))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension((((0.6209779716717838)) NOT BETWEEN ((0.7874241839797926)) AND (('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-691659882 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0X51a4af14)>(0.7220763711156157)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1443883918 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)+(x'')))AND(CASE WHEN NULL THEN '0.6205218843222498' WHEN '2036691924' THEN 'ꧫaOi\r_-c' WHEN '' THEN x'' ELSE 0.13658186070160538 END)))OR(((-1.443883918E9) NOT BETWEEN ('8 %*Enⅷ_>') AND (NULL)))))OR(CASE WHEN '1528479083' THEN NULL WHEN 1.236826512E9 THEN NULL WHEN '294658771' THEN x'' END)))OR((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('294658771')>=(2.94658771E8)))IS NOT((('1088188963')&(2.129375365E9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_VERSION()) NOT BETWEEN (CASE '79390245'  WHEN 0X6893f279 THEN x'' WHEN '-963401312' THEN 0.22452708526864062 WHEN x'' THEN NULL ELSE NULL END) AND (((NULL) BETWEEN (x'897a') AND (1088188963)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1088188963'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'f5a4')-('-1254678889')))/(((NULL) NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((((x'')AND(0.6090271514400238)))AND(0.6205218843222498)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8876455475170202)IS(0.7554630139775609)))OR((('79390245') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((('')AND('SwD|o垂轢')))AND(x'')))OR((- (x'')))))AND(CASE WHEN x'' THEN '1251281615' WHEN 0.22452708526864062 THEN NULL WHEN '+' THEN x'' END)))OR(x'' COLLATE RTRIM)))AND((('-600825481')AND(0.02802628408470098)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-280800933 sz=1061988139 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '455605778 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (2010677205 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1236826512 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1594660537 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'e7b3' AS BLOB))>=((('333879124') BETWEEN ('Ow') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'32ed'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=891367333 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2010677205 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -1614399595 sz=-1594660537'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((SQLITE_COMPILEOPTION_USED(x''))OR(('0.02802628408470098' IN (-1.236913204E9)))))OR(CAST('' AS REAL))))OR(((x'') IS TRUE))))OR((((0.978082843263196, 0.7220763711156157, '899953137')) NOT BETWEEN (('492776303', -703275214, 0.4620293841298513)) AND ((x'43bd', x'', NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-595932875 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-622405428 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1097793375 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-571771327 -371550146 sz=-945500541'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN (403028801) AND (0.17829249428053395)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=138469171 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN x'6b71' THEN 0.8670577103890874 END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2132565298 sz=2075991836 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1484265728 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-945500541')|(0.6847964096719358)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-4.451524E8)|(NULL)))IS NOT(x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1902846384 sz=2035269682 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1434880686'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.6021460466541932' COLLATE NOCASE)||(((0.8182135450925146) NOT BETWEEN (0xffffffff88cd420c) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1061290949'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1938429718 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1058823039 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '958266287 0 sz=-782855914 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-420349406 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('249769560')<<('&H57(OL<')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=333879124 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1142319060')) BETWEEN ((TRIM(DISTINCT 295755566, 0.7220763711156157))) AND ((CAST(NULL AS NUMERIC)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'5793' IN ('')))OR('' COLLATE NOCASE)))OR(((-5.12924911E8)<<('0.6847964096719358')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN '-1326138164' COLLATE NOCASE THEN (NULL IN ()) ELSE ((x'') NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1613485977 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '492776303' THEN x'' ELSE NULL END)/(CAST(x'' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-420349406 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1254678889 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1950845297 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1251281615 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL)))==((0xffffffff8c86f26e IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1466343431'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.8142597015976851) ISNULL))AND(((('M*'))>=((NULL))))))AND(x'ce0f')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1088188963 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1503706196'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-603473861'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2042487158 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=294658771'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1326138164')LIKE(0.24403463947012338))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-280743371 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1088188963 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1641311673'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'f7de')/(CAST('-280800933' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=492776303 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1534021408 1905205296'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN NULL THEN x'672b' END THEN (x'0b56' IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.5651477069756308 IN ()) COLLATE BINARY; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1236913204 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '35xW9'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1852657486 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=277253234 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1670307410' COLLATE RTRIM) NOT BETWEEN (x'') AND (HEX(2.075991836E9))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-691659882 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ (0.5831012914483745)) THEN ((x'9ef9')/(NULL)) WHEN (('-963401312') IS TRUE) THEN '891367333' WHEN NULL COLLATE RTRIM THEN CASE 0.978082843263196  WHEN NULL THEN x'' ELSE 0.4588803493345226 END WHEN (- ('295755566')) THEN (('0')>>('1060956544')) WHEN '461192063' COLLATE NOCASE THEN ((NULL)%('-861144704')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-1452386761 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.0465845363068752 THEN x'' ELSE '' END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')AND(x'2770')))AND(NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('-280800933' AS REAL) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('1533472848') BETWEEN ('w,+') AND ('*')) THEN IFNULL(x'', 0.13613697902387456) ELSE (NULL IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL)IS NOT('᫂5')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1448687131 -1466343431'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('7P')) BETWEEN (((+ ('')))) AND (((x'' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT ((x'1fdf')>=(-1.93731317E9))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.9758006843285596 AS TEXT) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (1.38469171E8)))*(x'' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '' THEN 0.8149661294380997 WHEN x'' THEN 0.7083768795818656 WHEN '-1589314518' THEN 0Xffffffffa9758871 END) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=579121226'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1335719226 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-494858790 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8149661294380997)AND(((('-1097793375')) BETWEEN (('72285441')) AND (('1060956544'))))))OR(-2141169043 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 -846283659 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2036691924 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=736138478 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-636766208 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1060956544 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=990378124 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(((('-595932875'))=((x'b408'))), (~ ('u꽋zF%k]'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1238578539'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-834073333 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-57128780 sz=-1443883918 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-920171160 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-571771327 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0xffffffff8a40e8fb THEN 0.47704220626253646 ELSE '948741324' END)+(0.6832939767874436 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=514344102 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL)))||(CASE 2.24384814E8  WHEN -863759699 THEN x'' WHEN 0xee32e58 THEN NULL WHEN NULL THEN 0.41936055217039503 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 82107364 sz=279627700'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-238733367 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)-(0.8507528247575712))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1680226325 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'686b')GLOB(NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1986050107 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ ('W㘛z(')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1254711402 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE ''  WHEN 0.5199019235913374 THEN '愥BB*\rO' END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1766423571 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-842029609'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1939878873 2026467639'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1374361675'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -494858790 sz=791217182 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -371022936'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')) NOT BETWEEN ((NULL)) AND ((0.23436047208314836))))+(CASE WHEN -861144704 THEN NULL WHEN NULL THEN '-203670954' WHEN 0.7581320245190977 THEN '' ELSE 0.275165204360986 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '203729122 sz=-540151032 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((((((('|B')OR(988589515)))AND(0.3752508572505304)))OR('')))AND(1872857031)) THEN CASE WHEN '_REM' THEN '' WHEN 0.5815614290456629 THEN x'3d37' WHEN x'a8df' THEN 0.524968087213608 END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.25752359133270786) IS TRUE) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')=(x'50c4'))) NOT BETWEEN ((('1-500000')<>('17952683'))) AND (0.17829249428053395)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN 0.6050214211319971 WHEN x'' THEN 0.2594589548084222 WHEN 0.24403463947012338 THEN 0.6997089052965203 ELSE '' END)>=(((0.20836098995970598)IS NOT(x'288c')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-815719312 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1483420357'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=572939555 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1178775972'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-643023451'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '165122068' THEN 0X1 WHEN NULL THEN '' WHEN -1301813259 THEN NULL ELSE 0.7218172028712934 END) NOT BETWEEN ((+ (0.9105516025098436))) AND (((x'')IS(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')>>(((0.13613697902387456) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x'' COLLATE NOCASE  WHEN CAST(x'' AS INTEGER) THEN (('-1527587273')<(0.32902440601147054)) WHEN (('KO')LIKE('1905205296')) THEN '' COLLATE RTRIM WHEN ((NULL)|(x'')) THEN (('1403078689') NOT NULL) ELSE ((1.528479083E9) IS FALSE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1503706196 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-160892531 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2071789514 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((- ('-1670307410')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1045286971'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3147454385657893) NOT NULL))<(((x'2a4a') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT CASE WHEN 0.6271626148150448 THEN NULL WHEN 0.3669775510812199 THEN '-1619216883' WHEN NULL THEN x'' ELSE NULL END, 0.9322737680089119); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=926660184 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-280800933'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST('1417346713' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER)) BETWEEN (CASE WHEN x'' THEN 0Xfde1f5 WHEN x'' THEN NULL WHEN '-785842392' THEN 0.4826734833307674 ELSE '0.6014084159858988' END) AND (((((0X6eff3c94)AND(901179128)))OR(2.4976956E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2087585183 sz=1251281615 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2110200649'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-622405428'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1335719226 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.11298939596897095)&('0.4826734833307674'))))>=((x'' COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS REAL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1487924857 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((('')AND(1803426423)))OR(x'')))OR('1685033179')))AND(''))))>((TYPEOF(0.7624930901022451)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))<>((0.9525822041949257))))IS NOT(((0Xffffffff9ba42e93) NOT NULL))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1939878873 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.19474356739672383) IS FALSE))OR(CAST(0.5109120375472389 AS NUMERIC))))OR(CAST('1159690447' AS BLOB))))AND(x'')))AND(((((x'0c8a')AND(0.48510169942525205)))OR('0.6050214211319971')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-691659882 sz=79390245 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE -1.254678889E9  WHEN '200293723' THEN '-733471155' WHEN x'85ea' THEN x'432c' WHEN NULL THEN NULL ELSE x'' END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2035269682 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'b23c')<=('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=79390245 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((NOT (0.04574361062350918)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-7815659 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1390036445 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-512924911 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 109894052 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0X7fb7a58d) NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-274326639 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2129375365'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffffc7245f78 COLLATE RTRIM) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(((0.6920827912645892)OR('458978816'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1136170692 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-517277657 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)IS(0.8670577103890874)))OR((('-1181719040') NOT NULL))))OR('휮o9H쳯DZ' COLLATE NOCASE)))AND(((NULL) BETWEEN (NULL) AND ('-9223372036854775808')))))AND(((0.3147454385657893)>=('/M1%R9N9')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-698894301' AS BLOB)) NOT BETWEEN (UNICODE(0Xffffffffcd8ebc75)) AND (((0.8103366892929446) BETWEEN (x'') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1541488716 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1088188963 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-929361898 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1158094217'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1905205296 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-59297137 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1950845297' IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2010824909 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1778453660 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=523800127 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1414852081 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1469131083 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0xf3ea9c)OR('64832781')))AND('-846283659')) IN ((('-394948314')==('_REM')), json_valid(0.23575411247275835))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM('gt9崲R%H') COLLATE BINARY COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1166345381 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1089496075 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1594660537 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1825679472 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1278029297 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7695761711215632)) NOT BETWEEN (((('-26735623') BETWEEN (0.9745033865904319) AND ('wJvS&\rk')))) AND ((((x'')/(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.17829249428053395; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL) BETWEEN ('1945069871') AND ('-1097793375')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('' AS NUMERIC) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-5614318 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '638479957 sz=0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '556027549 sz=2142741901 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(((-1.589314518E9) NOT BETWEEN (NULL) AND (NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.8267404715173561  WHEN x'c1fa' THEN x'9eae' ELSE -6.22405428E8 END)LIKE(0.683634403031751 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1841539614 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ ('-675864942')))AND('' COLLATE BINARY)))OR((+ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-644557811 sz=294658771 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE x'' COLLATE BINARY  WHEN ((((((((0.9864212984633759)OR(NULL)))OR(x'ff56')))OR(NULL)))OR('-719322764')) THEN (((-8.46283659E8))<>((1792910039))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1852657486'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1905205296' COLLATE NOCASE) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('ꜫ7oY')&(((NULL) BETWEEN (x'') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('7p')OR(NULL)))AND(x''))) BETWEEN (CAST(x'ca44' AS REAL)) AND (((-299789744)*(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1443883918 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 579121226 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2087874777 sz=1310341366 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'13f1'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 325434689 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1335719226'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ']/o' COLLATE RTRIM THEN (('\r*	lIy') IS TRUE) ELSE CAST('-1369133794' AS INTEGER) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1311729166'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -2101809608 sz=-1113247215 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=5678862 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1335719226 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('336247420')|('')))<(CASE WHEN '\n6r' THEN x'' ELSE '-' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((2.94658771E8)AND(0.7874241839797926)), x'' COLLATE NOCASE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1938429718 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (INSTR(x'f5d4', 0.27930065704831375))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1424929540 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '535431287 295755566 sz=2142741901 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '102498183'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-945500541')<(0.5831012914483745))) NOT BETWEEN (CASE NULL  WHEN 0.7651068017047279 THEN x'' END) AND (CAST('c1' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1905205296 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1295094172 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1213725392 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE x'a686'  WHEN '-203670954' THEN x'' WHEN '<RN#瘓v*' THEN 0.5815614290456629 WHEN 0.7103979335246247 THEN 0.11298939596897095 ELSE 'my<l7maGI' END)AND((NOT (x'79f9')))))AND('0.8182135450925146')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1966380444 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(-193241219 AS INTEGER) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1339424448 772063923 sz=2143136518 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('p ')||(0.2858494888176514)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1381986013 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1939878873'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xfffffffff5cfd475; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.8103366892929446) NOT BETWEEN ('-571771327') AND ('᫽%395T6984354645628356366 301--1877788696197366237T1374 8488611202839944160--1828348237994090253:-1149280299419842437:5449379423768709936-A?b↰*''')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '899953137 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT CASE WHEN x'' THEN NULL WHEN -2103666411 THEN 0.8063901850610574 WHEN '-770130382' THEN x'' ELSE 0.4588803493345226 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1338547932 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=-324416400'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('1012008116')) NOT BETWEEN ((0.7634486018187406)) AND ((''))) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=277253234 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=72285441 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-1097793375' COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=336247420 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '⣥dP70!'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '-1770958049' THEN ((0.27688058062849163)OR(x'a57b')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1443102552 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 1.5234378257011905E-4  WHEN -1453633668 THEN '-1142319060' WHEN NULL THEN 0.4433124345393129 WHEN NULL THEN '-1815774168' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL((~ (1.061988139E9)), CASE WHEN 1448627737 THEN x'' WHEN 'u꽋zF%k]' THEN x'' WHEN 0.33611004459100835 THEN 0.6133567159687796 ELSE NULL END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1527034123 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-622405428 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)!=(x'4634')))AND(((x'a0ab') NOTNULL))))OR('-2042487158' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')&(0X49f17cca))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.0439377611997569) BETWEEN ('Nq') AND (''))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('wl!粜' IN ())  WHEN (0.700346833471855 IN (0.6674894100788663)) THEN ((('')) NOT BETWEEN ((x'')) AND ((x'b86d1cfa'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1452386761 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 79390245'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((json_array_length(x''))AND(CASE 0.32722956975490824  WHEN -9.63401312E8 THEN x'' END)))AND(CASE WHEN 1293944732 THEN 't3' ELSE 0.3752508572505304 END)))OR(((x'd179') IS TRUE))))OR(CAST(x'' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'3630') NOT BETWEEN (x'') AND (NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('u꽋zf%k]')<=(x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1408540376'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1329625071' IN ()))>(-1746648799)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-600825481 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS INTEGER) IN (2123983352, -589461418 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1446831422 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((CASE 0.07024517970769029  WHEN '' THEN '-861144704' WHEN x'' THEN NULL WHEN '' THEN '1293944732' ELSE '->' END)OR((~ (x'')))))AND(CAST('Wc' AS REAL))))OR(CASE NULL  WHEN '887026670' THEN ' %/' ELSE NULL END)))AND((NOT ('2045704717')))))OR(((0.09320851981997369) ISNULL))))OR((~ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('')AND(NULL)))OR(x'')))OR(((x'') BETWEEN (0.79450591124776) AND (x'')))))AND((('B')&(0.24403463947012338)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2110357197 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE))<(CAST(0.17771700271248558 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1369133794 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.5109120375472389 AS NUMERIC))>=(SQLITE_VERSION())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -528269971 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1519870011 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=336247420 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2111883088 sz=-600825481 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE rtreenode(CAST(-7.82855914E8 AS BLOB), ((NULL)<<(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=242890681 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'')-(''))  WHEN x'2421' THEN ((((((((x'a078')OR(0.7380980109568498)))OR('*4!1]䧥U1>')))OR(' 4-LSJ')))AND('-600825481')) ELSE ((x'') NOTNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((1.061290949E9)LIKE('-891456000')) THEN ((NULL) NOT NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(DISTINCT 0.22452708526864062)) NOT BETWEEN (NULLIF(DISTINCT '2010677205', '-1443883918')) AND (((((x'')AND(x'')))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-1594660537 AS REAL))>(-1.484265728E9)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1847673793 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.39231288782573037)AND(((('0.8142597015976851'))=((0Xfffffffff668f98d))))))AND(('*뀕)' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(((NULL) NOT BETWEEN (0.5092124066269507) AND (-1667538035)), NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-2070099833 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1376076281 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT (('_yjB[z')IS(x'7322'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE NULL  WHEN 0.7549462576796266 THEN x'' ELSE NULL END IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('#+St')AND(NULL)))AND('')) IN (0.799992791012059 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_type(NULL COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2139475071 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1371293794'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL((0.9477714029144515 IN ()), ((x'') BETWEEN (NULL) AND (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1938429718 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -740370791'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=568491014 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2036691924 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=969247262'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(NULL AS BLOB))OR(CASE WHEN 0x59d680e7 THEN 0x1 WHEN x'' THEN '0.8876455475170202' WHEN '<RN#瘓v*' THEN NULL ELSE '1369747220' END)))AND(ROUND('mQA', '^1'))))OR((((x'83ef')) NOT BETWEEN ((1221429477)) AND ((''))))))AND(NULLIF(DISTINCT NULL, NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((''' ')!=('SwD|o垂轢')) THEN TYPEOF(DISTINCT x'') ELSE '-812024015' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1807062399 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6893298061386977, x'1c8f', '1236962731')) NOT BETWEEN ((((((((((NULL)AND(x'')))AND(x'')))OR('')))OR(0Xffffffff970f4445)), -2036790052, (NULL IN ()))) AND ((ABS(1369747220), GLOB('9?8e', '᫂5'), (('T'']') NOTNULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-600825481 sz=403028801 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1814592657 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') IS TRUE))OR(((286558166) NOT BETWEEN (NULL) AND ('')))))AND(CAST('' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=557886779 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-930534056 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=420653749 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=2083824267 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- ('*<w83>')) IN ((((0.004836344926126501)) NOT BETWEEN (('?(cQ?QIq')) AND ((NULL))), NULL COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2132565298 -603473861 sz=-523023007 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'e947', '336247420', NULL)) BETWEEN (((- (NULL)), (- ('336247420')), CAST(x'43f3' AS INTEGER))) AND ((((('', x'', 'cx'))=(('-494858790', NULL, '-445152400'))), json_remove(0.7705276989690069, '1619269075'), 0.878416502145889))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1130709437 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1706417422'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 240260715 sz=1615721931 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-494858790 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')&(NULL)))|(CASE '-861144704'  WHEN 0X488ee81 THEN 0.3495305469663923 ELSE -9.63401312E8 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-936470686 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '294658771 sz=-1811702673'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT x'') COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((NULL))==((NULL)))  WHEN (NULL IN ()) THEN ((0.20836098995970598)|(NULL)) ELSE (+ (x'6982')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6295966964715571) IS TRUE))<<(CASE x'0405'  WHEN ',W' THEN x'' ELSE '-782855914' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (json_quote(NULL) IN (CASE WHEN '' THEN 'Ub' ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(976984754 AS NUMERIC) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=79390245 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-782855914 -469204696 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1803426423 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(CASE WHEN x'6392' THEN NULL WHEN x'' THEN NULL WHEN x'' THEN '' ELSE x'' END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-203670954')<=(NULL)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=673162467 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1767251986 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL)<<(0Xffffffffc7a4ce83)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-420349406 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN (((((x'')) BETWEEN ((NULL)) AND ((''))))) AND ((((NULL)-(x'3e5b'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1533472848 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1505785200 sz=9223372036854775807 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1766070053 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1409420884 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=820285071 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')<<(0.28868055349931854)) IN (((x'a236') NOT BETWEEN ('kL') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(((NULL)GLOB(x'')), ((('gU#|~', NULL, '277253234')) BETWEEN ((0.9149510778368423, NULL, '')) AND (('-1840471493', -225335573, 1448687131)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT HEX(DISTINCT '()'), ((x'') BETWEEN (NULL) AND (NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.2996353173813201 THEN '1-500000' END) BETWEEN ((1.060956544E9 IN ())) AND ((((1.07304834E8, 0.02802628408470098, '0')) BETWEEN ((NULL, '914829639', '')) AND ((0.5575328495195169, x'efb9', NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-840882786 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1322825123 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-510709483 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((x'ec4d')OR(0.8083341837665423)))AND(NULL)))OR('1533472848')))OR(NULL)))AND(0.7955669543829099)))OR(4.03028801E8)))||(x'8482200b')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN '340434326' THEN 'EHJ|4' ELSE NULL END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')AND(0.6720622848653217)))OR(-1.7976931348623157E308)))OR(-1.646401001E9)))OR(x''))) NOT BETWEEN ((('k}2>') NOTNULL)) AND (((')*o 2ne#3')GLOB(0.0244512355328822)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1689337413 572307164 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=333879124 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1881335108 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-503416332 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-806072824'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=127379123 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1466472489'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1086909295 sz=-1631962968 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2120284929 0 sz=1120119678 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.6847964096719358')) NOT BETWEEN ((((x'') BETWEEN (NULL) AND (0.2922018927791379)))) AND ((((0.9996912081831641)<<('915709041'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((x'f965')AND(-573980858)))AND(NULL)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1250074608 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('鎠^%tDsAjE')) BETWEEN ((((x'') NOT NULL))) AND ((((0.6416222014604941) NOT BETWEEN (0.5092124066269507) AND (x'a31b'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=492776303 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-203670954' AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1710633749 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '707951506 sz=-1670307410 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('904544744' AS REAL))>(((NULL) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1646401001 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((('0.4826734833307674')AND((((NULL, x'3ad4', 0.5469883645011313)) NOT BETWEEN ((NULL, '1060956544', 'v')) AND ((0Xffffffffe07f136f, x'', NULL))))))OR((((x''))>=(('걌pJUZ'))))))AND(NULL)))OR(((1950845297)>=('1167967591')))))AND(((0.7648811188926196)IS(-1.446831422E9)))))AND((((0.8670577103890874)) BETWEEN ((NULL)) AND ((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1670307410 -512924911'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1061988139 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT ((x'')||(0.6398426786343548))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1151998443'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1533472848 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1164404773 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1236826512 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1905205296 sz=2090737825'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=69126764'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2142741901 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffff951878f5) NOT BETWEEN ('-791451232') AND ('扫)᭕a\ra){+')))+((((7.36138478E8))>(('900582960'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1852657486'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1235631729 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'247b')) BETWEEN ((0.44442160658552043)) AND (('0.24403463947012338'))))AND('?gg.PWn' COLLATE NOCASE)))OR(')*o 2ne#3' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=922742353'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)<=('1939878873'))  WHEN (((NULL))!=(('-280743371'))) THEN CAST(x'6524' AS TEXT) ELSE (+ ('0')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'a84b')AND(CAST(NULL AS INTEGER))))AND(((NULL) NOT BETWEEN (0.6373843688963142) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(CASE WHEN 455605778 THEN NULL WHEN x'' THEN '-1105287853' WHEN '-1037447940' THEN x'' WHEN '2027138830' THEN NULL WHEN 0.7549462576796266 THEN 0.27898274183701877 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1579792564'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffb532101c COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 2 sz=-1337487837 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=700253565'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS NUMERIC)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1774536908 -512123043 sz=1453604492'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1388316323 1673094916 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-450579589'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2076488143 sz=295755566 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.5848853882806527 AS REAL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.023083001134350356; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=964050642 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '403028801 sz=1950845297 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1142319060 sz=-1589314518 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>=(x''))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-861144704') IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE BINARY AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 751365007 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5335397171079337)) NOT BETWEEN ((((1924165168) BETWEEN (0.41887088947140105) AND ('')))) AND ((('' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE x'69c1'  WHEN x'' THEN 0.7624930901022451 WHEN 'qI j' THEN -120849570 WHEN x'' THEN 0.3122559496731062 ELSE NULL END THEN SQLITE_COMPILEOPTION_USED(NULL) ELSE (('밚^')<>('1727795110')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(((((1754526329)OR(NULL)))AND(x'')), ((((((((0xffffffffa03f3700)OR('wlj,e*X뇚')))OR(x'')))OR(0.04574361062350918)))AND(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1010534736 unordered'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=295755566 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((948741324, -1801949803, 0x119022d3)) NOT BETWEEN (((('+A') IS TRUE), (((((((('')OR(x'')))OR(0.38954343434495053)))AND(NULL)))AND(692995323)), (- (x'')))) AND (((x'3089' IN ()), load_extension(x'2268'), DATE(NULL, x'0a48', 0.9864212984633759)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1204290337 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(x'5a34')))OR(0.33603303209407864))) NOT BETWEEN (CAST('-963401312' AS INTEGER)) AND ((0.7350926685658307 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1612607315 sz=-1345385920'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=295524072 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1405246222 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-838069393'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1594660537 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1088188963 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))>=(('*4!1]䧥U1>')))) NOT BETWEEN (((0.8267404715173561) NOT NULL)) AND (TOTAL_CHANGES())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-130210018'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '835296146 sz=-2090574251'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1614399595 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=857544008'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1938429718 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '9875909'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2075991836 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')OR(x'')))AND(0.9024466592379266)) IN (CASE 'PJ'  WHEN x'' THEN '-445152400' ELSE 1.950845297E9 END, NULL COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=919999759 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=277253234 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1483201589'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2042487158 sz=-1545528052 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_array_length('+A', NULL))AND(((0.961385395242203) BETWEEN ('') AND (x'6c7d')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (SQLITE_COMPILEOPTION_USED(1.38469171E8) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1341208313 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) BETWEEN ((0xffffffffa96e5637)) AND ((NULL)))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '986819942 sz=-1169393859 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1798534134 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1361046467 0 549808339 sz=-1484265728 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE NOCASE IN (CASE WHEN NULL THEN 8.99953137E8 WHEN '-494858790' THEN x'' WHEN 0x1d0294d9 THEN 0.21263027153238512 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2009401997'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=948741324 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('0.6209779716717838' COLLATE BINARY)OR(((4.03028801E8) IS TRUE))))AND(CASE WHEN 'CIF{pyG' THEN '-1974885036' WHEN '-1670307410' THEN 'ޜS' WHEN x'' THEN 0.7214131649654488 WHEN 0.6660954249371914 THEN -1466343431 WHEN '' THEN '2129375365' ELSE 3.3624742E8 END)))AND(CASE WHEN '1433457106' THEN 'Ntb' ELSE 0X7d89302a END)))OR('1677705682' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.24930713101265145) IS FALSE) IN (CAST(0.44396422153497916 AS NUMERIC), (((-1452386761)) NOT BETWEEN (('2129375365')) AND ((2.4976956E8))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST('L' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('1061290949' AS NUMERIC)) NOT BETWEEN ('-1660137359') AND (((((x'9831')OR(NULL)))OR(0.5403411269397799)))); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0.8544096272269533; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-280905821'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((-226302429 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(x'') COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-923503080 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2132565298 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.33611004459100835'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(0.42804336600293, 5.79121226E8)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('&Kꊗ*N')) BETWEEN ((((0.07176941359938538) ISNULL))) AND ((CAST('' AS INTEGER)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-512924911'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.0703793353610126)) NOT BETWEEN ((((0.6090271514400238) NOT BETWEEN (NULL) AND (0xffffffff9c21b5bf)))) AND ((((x'07eb') NOT BETWEEN ('') AND (0.5548160503999869))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-861144704 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_object(x'51fdf906', x''))<=((+ (0xffffffffc09c6616)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=181612738 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-804974472 -445152400 sz=640063165 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL)) BETWEEN ((x'')) AND ((0.0014011681629655381))))AND((((x'0ffe', NULL, '1754526329'))==((0.689923705811335, '-280743371', 0.6322150721434378))))))AND(((('1277706445', '52071098', x'7b53', '', 0.09908099380387214)) NOT BETWEEN (('-1594660537', NULL, NULL, 0.09320851981997369, 0.2770754658270027)) AND ((NULL, 0.04262168860977278, x'9d1a', x'b358', NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1997903949 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((0.04944320176971917)) AND (((('1236826512') BETWEEN (x'') AND ('-1466343431'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'9cc3'))) NOT BETWEEN (((((NULL)AND(NULL)))AND(NULL))) AND (CAST(NULL AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '656891404 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1177712320 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1308379633 sz=-614600784 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL))*(-148865935 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '975395184 0 sz=-1641311673'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-634776982 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=828782964 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-600825481 sz=2080309878 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('')OR('2035269682')))AND('EHJ|4'))))<((('+!' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'ww'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1087445390'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=79556216 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1369747220'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=282922381 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-784672020 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.8936202161349703) IS TRUE) AS INTEGER); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(json(NULL) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'2c63' AS BLOB))==((~ (0.7564512862856616)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=333879124'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1259779962 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(NULL AS INTEGER) THEN CAST('-1200260920' AS INTEGER) ELSE CASE WHEN '' THEN 2.94658771E8 ELSE 0.049549974706148414 END END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 -203670954 sz=1236826512 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(TRIM(x'f8455a3a'), CASE NULL  WHEN '591147383' THEN 0xffffffffc872851c WHEN '1902846384' THEN '252553912' WHEN x'' THEN 1528479083 WHEN 0.10521581471128649 THEN '-352266152' WHEN 0.2763491443934917 THEN NULL END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1528479083 sz=-1689982525 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1305773261 0 sz=898379231 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE x'1386'  WHEN '' THEN x'' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1571636430 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN 0.32615474865190397 THEN x'' WHEN '1293944732' THEN x'' WHEN NULL THEN 0.5643323298372604 ELSE 'Ntb' END)AND(((0x86faec4) IS TRUE))))OR(x'' COLLATE RTRIM)))AND(((-1.614399595E9)GLOB(NULL)))))OR(json_extract('', x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE UNLIKELY(DISTINCT -1340189953)  WHEN CAST(x'9a41' AS INTEGER) THEN ((x'464f')||(NULL)) ELSE ((NULL)OR(x'e114d4af')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1369747220') NOTNULL) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('497056781' IN ()))<>((('p?o ') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1369747220 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1097793375 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=915378321 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'de3d')|(NULL)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=492776303 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-856950109 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-268370174 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1067578984 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN (x'') AND (0.27995249104419273)))|('')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (('AiX8' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT (x'305e7faf')))AND((('w㘛z(') IS TRUE))))AND(('1477601764' IN (-1449024952)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((1061290949) NOT BETWEEN ('1538370799') AND (1.36974722E9)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1308190624'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(0.24403463947012338 AS NUMERIC))OR((x'' IN ('-1747027046')))))OR(((('0.02802628408470098')) NOT BETWEEN ((x'')) AND ((x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1875644120 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-600825481 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 0.25752359133270786, NULL)) NOT BETWEEN (((NOT ('↰L2')), (~ (NULL)), (((('-1646401001')AND(NULL)))AND('A\nQ!')))) AND ((NULL COLLATE NOCASE, (((',iY&9iWm*')) NOT BETWEEN ((x'ea50')) AND ((NULL))), '302273765'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.6105408275927494 AS NUMERIC))-((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-13601206 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-282939007 0 sz=237200210 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('Rk') IS FALSE) IN ()); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) BETWEEN ('1B') AND (0.8977239600782844)))AND((('0.3669775510812199') ISNULL))))OR(((x'bf28') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1186308296 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE NULL  WHEN 0xffffffff9192b0b2 THEN '躠ohOd' ELSE NULL END THEN 0X1cd59f3 ELSE ((NULL)IS('1369747220')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('-1104809278')==('0.524968087213608')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2093920043 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE MAX(CAST(x'' AS TEXT), IFNULL(DISTINCT '', x''), '-2082098904' COLLATE BINARY, json_quote(0.9781598095724569)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=526297579 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1663428197'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1528410240 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_VERSION(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2100916267'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1236913204 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1219077506'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1369133794 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST('[AhB' AS INTEGER)  WHEN (~ (x'')) THEN (('-592603439')IS NOT(NULL)) ELSE (((NULL)) NOT BETWEEN (('L')) AND ((x''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=526297579 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=829031167 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE '1938429718'  WHEN 0.9432949960617556 THEN NULL ELSE NULL END AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ (x'3ae9400c')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LTRIM('', '素{N()}d')) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1754526329 -622405428 sz=-546288813 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-782855914 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.48510169942525205; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-797245567'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2035269682'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (0xffffffffbbe9982c) AND (x''))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((NULL)OR(NULL)))OR(x'')))AND((NOT ('dgZ줒fE#Bb')))))AND(((NULL)|(0.32983342055320863)))))OR(((((0.07309755624739012)AND(1240009356)))AND('-1097793375')))))AND(((((0.3052908304205717)AND('2075991836')))AND(0.0883126368694711)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.49984797116747104)AND(x'c6a4')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0T9', 651483303, x'')) NOT BETWEEN ((x'', ((((NULL)AND(NULL)))AND(0.8449111095677514)), (- (x'')))) AND (('0.32902440601147054', (('') BETWEEN ('693467530') AND ('0.9477714029144515')), (((NULL, 1953793884, x'91e0')) BETWEEN (('26081640', '2132565298', NULL)) AND ((x'58f3', '9223372036854775807', '-1679775956')))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=1236611123'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 2.132565298E9; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=403028801 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-979072765 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '72285441 sz=15226334'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1648224089 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1484265728 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2048150078'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))>=(((x'')%('⡧㡑')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1825535735 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('351539103')OR((((NULL, NULL, 'x)Pip/Hil')) NOT BETWEEN ((0Xffffffff9de2ad9d, '', x'2ad1')) AND ((x'', NULL, 0.7364129299579533))))))AND((NOT (0.19745852535575437)))))OR(TYPEOF(DISTINCT '-668611711'))))AND((('-')>(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)*(0.339307587509317)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('*TB惪')GLOB(0.35351494971177233))))>=((0.41936055217039503 COLLATE NOCASE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1754526329 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (''))) BETWEEN (((NULL)*(0.8073120971551612))) AND (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-517277657'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=336247420 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1943964011'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1709665291 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -92747215 2142741901 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1951049539 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x7fb7a58d) IS TRUE))<('' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1546569206 sz=-396792910 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1058823039 1060956544 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1647788112'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-660426051 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', x'eb7c', '1939878873')) NOT BETWEEN (((- ('336247420')), (~ (x'')), CAST(NULL AS NUMERIC))) AND ((UPPER(-1613485977), ((0xffffffffdd5671cd)LIKE(x'd1df')), CASE WHEN NULL THEN '/䦸 7巺{RX' ELSE -1610754822 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-811188982 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0xffffffff9dddea17))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1565417695 sz=-1875241680'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ ('579121226')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('圵 ?{E7	N' AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2132565298 sz=1088188963'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((rtreenode(NULL, x''))OR(((NULL)>(1067578984)))))AND(UNLIKELY(0x196dd298))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7457104350326424)) BETWEEN ((ABS(1.293944732E9))) AND ((''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')<('-1646401001')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-771989131'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2015020276 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('eQ#I') BETWEEN (((x'') NOTNULL)) AND (((x'') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1236587236 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('Uu?lB')!=('-1443883918')))OR(0.6657503136195152)))AND((((0.4727892772661476)) NOT BETWEEN ((x'754e97c7')) AND ((x'3838'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-487541040 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1452386761'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '689078903 sz=-1369133794 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1481256346 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-581537331'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))>>(((x'') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-949607867 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1868720949 sz=-402663001'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE TRIM(x'', 0.4925527423072801)  WHEN (NOT (0.3127627526707557)) THEN ((NULL) BETWEEN (0x1804bd8a) AND ('-1620139628')) ELSE ((NULL) BETWEEN ('1528479083') AND (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-600825481 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=44005720 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1899171227 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-777660534'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1457119871' COLLATE BINARY)LIKE((+ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=52920919 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.9149656543579286)AND('1329279638')))AND('1088188963')))>>(((0.9632194704641821)&(-1.614399595E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) ISNULL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('-420349406')AND(x'406cdb40')))AND(0X57693a2d)))AND(((NULL) BETWEEN (0x5b1abd6b) AND ('✇E-*j')))))AND((('-1236913204') BETWEEN ('710631830') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=224384814 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('y7''兛U㍺t>')AND('↰L2')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(DISTINCT '', '*U''yg]s')) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1548999254 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1948454805 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (0x987042a IN ()) THEN ((NULL)<=(x'')) ELSE CAST(NULL AS INTEGER) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1589314518 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-644568632 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT (((((((('-603473861')OR('1061988139')))OR(549043860)))OR(x'')))OR(0.9525822041949257))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1367185742 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '596048730'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=824394056 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-4.451524E8)>(1429035116)))/(json_object('589327113', x'0cbe', 0.47704220626253646, '339255677'))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1369747220 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffffb0628ac6 COLLATE NOCASE) BETWEEN ((+ (0.11412046059511693))) AND (((NULL) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-887091801 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1486357313 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1950845297 sz=-1222702231 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1777937686 1162831090 sz=1434880686 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1.533472848E9 COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (UPPER(DISTINCT '-1142319060'))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (95644672 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))==(('-392503193'))))+(((('29125025'))<(('1676027037'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=650902618 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1670307410 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x75745c50; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=706757338 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x'bc50'  WHEN x'' THEN 'Eahp鉇f>V' ELSE '403028801' END COLLATE NOCASE COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '336247420 -38635754 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-945500541 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('705698895')) NOT BETWEEN ((((x'')<('')))) AND ((((((((((NULL)AND(x'')))AND(NULL)))AND(0.5815614290456629)))OR(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('249769560')==(NULL))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=958266287 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE(CAST(x'' AS BLOB)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((0.8526783367485311))<=(('vY꜠'))) THEN '249769560' WHEN (NULL IN ()) THEN (('') NOTNULL) WHEN ((NULL) BETWEEN (x'478e83f4c178') AND (x'9351')) THEN (('[J821XM')LIKE(0.4433124345393129)) WHEN (((('336247420')OR('14H')))OR(x'4374')) THEN CAST(x'' AS NUMERIC) WHEN (((('-2073996570')OR('-1999814132')))OR('(6)')) THEN ((x'') IS TRUE) ELSE TOTAL_CHANGES() END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 0.2663100954859823 END) NOT BETWEEN ((- (NULL))) AND ((+ ('-945500541')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(CASE 0X673e5ead  WHEN x'' THEN '' ELSE 0.9834430085541632 END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') NOT BETWEEN (NULL) AND (0.8660391365581833))  WHEN (((('')AND(-1336770179)))AND(NULL)) THEN (+ ('1533472848')) WHEN ((((NULL)OR('1902846384')))OR('-1852657486')) THEN (~ ('65')) WHEN ('' IN ()) THEN CASE NULL  WHEN NULL THEN NULL WHEN 0.46044677747117835 THEN x'' WHEN 294658771 THEN 0.7380980109568498 ELSE x'' END ELSE NULL END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-755699647 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xffffffffae03cdd2))>=((''))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('', 'cPiv', 0.7631202718087983)) BETWEEN ((CASE 0.10652533159996025  WHEN 0.6021460466541932 THEN '' ELSE '9223372036854775807' END, (((((((('1938429718')OR(NULL)))OR(0.9908685063921197)))OR('HiC嫕⇥7K ')))OR(0X6893f279)), (+ (NULL)))) AND (((('en')%(NULL)), ((NULL) BETWEEN (0.5912343752994066) AND (0.7554630139775609)), (('2035269682')/(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2010677205'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1369133794 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1203617069 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-622405428 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1886378170 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '294658771'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=199918747 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((('82'))>=((0.48352625297207785))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x''))) NOT BETWEEN ((('0.6674894100788663') NOT BETWEEN (0Xfffffffff7f7443f) AND ('-371550146'))) AND (CAST('-600825481' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('kl' IN ())  WHEN '' THEN -416835738 ELSE CASE WHEN 0.6186596816503938 THEN 0.45210621699133025 ELSE x'f9b6' END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL COLLATE NOCASE  WHEN ((('N\nY10', '/M9', NULL)) BETWEEN ((x'2950', NULL, NULL)) AND ((NULL, 0.05425418550246108, x''))) THEN x'' COLLATE RTRIM WHEN (('948741324')/('-2086126377')) THEN NULL WHEN CASE '1061988139'  WHEN '142572713' THEN 'h>G]j~pof' ELSE 'm\ngyw\r>)' END THEN (('403028801')%('Q-')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('1N뉻Hbaka' AS BLOB)) BETWEEN ((('-754266102') BETWEEN (NULL) AND (x'c3f063ab'))) AND (((((0x3b40d5a6)OR(x'')))OR(-1937313170)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'aec7') BETWEEN ('810880504') AND (NULL)))-((- (x'c7a4')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-571771327'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -822715658 sz=-494858790 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE highlight((((x'', 0.22019766295424914, x''))<>((0.2858494888176514, -1.614399595E9, 0X1f083a9a))), -6.91659882E8, ((0.5807554177194508)<=('B')), (('-945500541')AND('1104629643'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=687284542 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1637983323 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=881974114 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2142741901'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1688671184 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 4 sz=1370275010 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<(0X7bbd1f1c)))!=((((x''))<((0.9832226492316659))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE ''  WHEN '0.0439377611997569' THEN '1236826512' ELSE '-1670307410' END AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', NULL, NULL)) BETWEEN ((CASE x'de1c'  WHEN NULL THEN NULL ELSE 'R]' END, ('-1082840742' IN ()), ((x'') NOT BETWEEN (-6.00825481E8) AND (0.10660265019355653)))) AND (((+ (-512924911)), (- (0.5775419168920514)), ((-438198834)!=(0.08384709047114292))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((0.013570751141416926)) BETWEEN (('-1452386761')) AND ((''))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1434880686 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1950845297 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-229276700 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1613355766 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (-1.484265728E9))) NOT BETWEEN ((((0.5500477498618482)) BETWEEN (('1088188963')) AND ((NULL)))) AND (NULLIF(NULL, 'En렻m+6'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(CASE ''  WHEN 0xffffffffcbfd71ec THEN NULL WHEN '-1880815287' THEN 0.060570909918869376 WHEN '\' THEN '2036691924' WHEN -6.22405428E8 THEN '1793703459' WHEN x'' THEN 'P5d.' ELSE 0X13e69754 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-595932875 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'fe58'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1434880686 sz=1098739888 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')<=(0.9237172062181532)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY((((NULL))<((NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-699078794 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-866984847'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('' COLLATE BINARY)AND(0.22916642087115813)))OR('-2042487158')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE '1929391668'  WHEN '' THEN 0x16ed41f END IN (CASE WHEN x'' THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=474704353 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MIN((~ (x'')), (('-1655333026') IS FALSE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1238812975 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('')OR(NULL)))OR('')))OR(0.5218989395194027)))AND(0.5728918192772757))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.8141269712659299))=(('-753534014'))) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-939317174 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1081696444'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('142825473' AS BLOB)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1058823039'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) NOT BETWEEN (NULL COLLATE BINARY) AND ((('1169806927')/(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL)AND(NULL)))OR(x'')), (('249769560')<(x'17f3')), ((-1335455769) IS FALSE)))==((x'8a64' COLLATE BINARY, (((NULL)) NOT BETWEEN ((x'')) AND ((0.17829249428053395))), CASE 0.9974485162385782  WHEN '' THEN 0.9042119649760644 END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOT NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0.926504695436446))) NOT BETWEEN ((+ (0x1805bb41))) AND (0.4483183349986464)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1533472848 sz=-1049977903 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') ISNULL)  WHEN json_insert(x'3adb', '-1531222073', '-1503706196') THEN ('Pq' IN ()) WHEN UPPER(DISTINCT -1.503706196E9) THEN ((x'') BETWEEN ('岫쀲+in') AND (x'')) WHEN ((0.4071419533628615) IS FALSE) THEN NULL COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1058823039 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('a' AS REAL)) BETWEEN ((NULL IN ())) AND (x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>>(('102717667' IN (0.6271626148150448, x'3644')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')OR(((0.6482256017094805)-(x'')))))OR((((('1902846384')AND(x'')))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=928509124 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=909076249'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-603473861' COLLATE BINARY  WHEN ((((0.5834910843886219)AND(0.7218172028712934)))AND('-2012039839')) THEN ((x'')<<(x'')) ELSE '0.7103979335246247' COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')OR(0.31519197296130286)))OR((((x'3c70')) BETWEEN (('U\r䊀')) AND ((0X30be911a))))))AND((('1533472848') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1533472848'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-171807807 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1935829719 0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1679833471 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=476837795 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1326138164 -736518124 sz=1279941764 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')>=(NULL)) IN (CASE '-846283659'  WHEN 'my<l7magi' THEN '1088188963' WHEN ']' THEN '0.22452708526864062' WHEN x'' THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-250253969 -1589314518 4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1902846384 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((((((NULL)OR(1903774241)))OR(x'')))AND(0.3357304454809291)))OR(0.9375573905923809))  WHEN CASE 0.587825651543777  WHEN 0x79caca57 THEN NULL ELSE 0.32902440601147054 END THEN SQLITE_COMPILEOPTION_USED(NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1236826512 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -2040937946 sz=2035269682'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('-160892531')OR(0.9525822041949257)))AND(x'')))OR((+ (x'')))))AND((('-500230350')-(-0.0)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1335719226 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=815907359'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 5.26297579E8; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)<=('-782855914')))AND(2021837658)))OR(TRIM(DISTINCT '131869591'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-543712965 sz=-1999814132 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=157197384 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1.5234378257011905E-4)) BETWEEN ((((-1.614399595E9) NOT BETWEEN (0Xffffffff80605a6d) AND ('2010677205')))) AND ((CAST(x'' AS NUMERIC)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((',W', NULL, 9.58266287E8)) NOT BETWEEN ((((0.9267204964581264)GLOB('844960434')), (('288060907') IS TRUE), (0Xffffffffdc07b83b IN (0.9392502456931987)))) AND ((CAST('j3' AS REAL), 0.9482169815841902, CAST(0Xffffffff9c7121ae AS BLOB)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATETIME(json_quote(0.6724650586620292), ((0.3848301491522491)>(NULL)), NULL COLLATE BINARY, ((1.251281615E9) BETWEEN (NULL) AND (NULL)), (+ (''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2109210038 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-508745681 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1563224334', '-1209844', 0xffffffffa144fc2a))<>((x'e910', NULL, 0x50ab6ace)))))>=((COALESCE(DISTINCT 0.139703284269594, 0.4826734833307674)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '999368579'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1565702980 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.2858494888176514; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-9531507 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1722889502'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2001366509 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1363145316 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((((((((((NULL)OR(-2018116240)))OR(277253234)))OR('fP')))OR(x'')))OR(0X796573d4)))OR('1787409755'))  WHEN ((0.8374426943043239)%(NULL)) THEN (1548710836 IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1443883918 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=13356435'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.008657464673744841)OR(CAST(x'' AS BLOB))))OR(CASE WHEN x'62a5' THEN '1448687131' WHEN 0.7106789841173816 THEN 0.3445827747087814 WHEN '' THEN '-291403700' ELSE '-1458986268' END)))OR(((((x'')AND('')))AND(0.23436047208314836)))))OR(LIKELY(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1772120280'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF(DISTINCT NULL)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1938429718 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)AND('-1466343431'))  WHEN ((x'045d') BETWEEN (NULL) AND (-4.20349406E8)) THEN CASE 0.9584452589832061  WHEN NULL THEN 0Xffffffffc8a5fc0e WHEN 0.31889967845666245 THEN 0.9309723177374121 WHEN x'' THEN NULL END ELSE (((x'6dc6'))==(('64292577'))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '*'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)==('-540823571')))&(x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '948741324 2 sz=294658771 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1123252882 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=899953137 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((((((('P0~o9')AND(NULL)))OR(x'c08e')))AND(x'dc69')))AND('-280800933')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('*EaV' AS TEXT))AND((((NULL)) BETWEEN ((NULL)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'fcf8') NOTNULL))+(CAST(-1438425848 AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1335719226 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('<	x瞢{' AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-195408714 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1546163292'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-947836974 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1487254809 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT ((((x'5886')AND(NULL)))AND(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.1239588535804178)))<((('138469171') NOT BETWEEN (x'') AND ('삒\n')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-782855914 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((-945500541 COLLATE NOCASE)AND(CAST(625191454 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('249769560')IS NOT(CAST('r-' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1369133794 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>>('0.4826734833307674'))) NOT BETWEEN (((0.8247574078942429) NOT BETWEEN (0.07024517970769029) AND (0.3215783627038371))) AND ((('') BETWEEN (0.8487518997210092) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1055047058 940800777 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1446831422 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1118189359'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((((('fTP</	')OR(x'')))OR(NULL)))AND(CAST('1988343962' AS BLOB))))AND(((455605778)&(x'')))))OR(((((((((0.07485891788276788)AND(891367333)))AND(0.7581320245190977)))AND(NULL)))AND('')))))AND(CAST(x'' AS REAL))))OR((('1122195204') IS FALSE))))AND(CAST('' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'1787' AS REAL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NOT (0.672687040376366)) THEN CASE ''  WHEN NULL THEN -1322084715 END WHEN ((NULL) NOT BETWEEN (NULL) AND (0.6285127357922299)) THEN (((NULL))>((x''))) WHEN ((x'') NOT BETWEEN (1067578984) AND ('>|/')) THEN CASE WHEN x'' THEN x'' ELSE x'' END ELSE ((('-40889262'))>=((x'826c'))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.1621607934842142) NOT NULL) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT (('0.6133567159687796')<<('-1793179935')), ((x'')<<(x'233b'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LIKE('', x'dbcd'))OR(CASE '1734458035'  WHEN 0x61177145 THEN x'' END)))OR(json_remove(0.7076600467570511, NULL, 0.5815614290456629, NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1293944732 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2081462925 -512924911 sz=-1756007748 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'')))>>(('>u' IN (x'9e67b551', 0.7624930901022451)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1061988139'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1862385458 sz=1905205296'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '72285441'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=451709150 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '⃜(Ho''a'  WHEN x'd180' THEN 0x1f5ea9eb WHEN NULL THEN NULL WHEN 'u/H' THEN '' ELSE -6.00825481E8 END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1614399595 sz=-2016213282 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ())) NOT BETWEEN ((0.49675086769497756 IN ())) AND (CASE WHEN NULL THEN '-1514311628' WHEN x'4485' THEN '' WHEN '' THEN '958266287' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=588459622 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6616094940508137)<(x'')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1392719775 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-707529398 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'f9a0')IS NOT('&')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=928073473 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1513667991 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-836896190 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'')!=('z	ᮖN鱳8c離\')) THEN ((((((((((((1906185506)OR('-987676389')))AND('-1097793375')))AND(x'830e')))OR('-824308125')))OR('499749957')))OR('-1852657486')) WHEN ((((0.683396591059027)OR(138469171)))OR(NULL)) THEN ((NULL) NOTNULL) WHEN 0.9441641533166244 THEN NULL COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9795588570268768 IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -116041671 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=136610229 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=382638923 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1067578984'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1060956544 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1995375008 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json(0.39812160175313915 COLLATE RTRIM); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1218306571 403028801 sz=-1241892753 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 2045194112; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ('o')))/(((0.5815614290456629) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' COLLATE BINARY) BETWEEN (CAST(0.08973334659262011 AS BLOB)) AND (NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1924431405 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '194809455 0 sz=1740235829 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((highlight(0.006884821695717469, '0.7103979335246247', -1547032021, '-2002846931')) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1568325485 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-2025819054 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-203670954')) BETWEEN ((CAST(NULL AS REAL))) AND ((((((0xfffffffff6533850)OR(0xd0fbc65)))OR(-1.466343431E9))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-154456924 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-842393241 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-444420953'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2075991836 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN NULL ELSE 0.06342868115371036 END) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=126976258 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE 0.5488153587894707  WHEN '' THEN x'04ac' WHEN NULL THEN x'' WHEN '-846283659' THEN 316273906 END  WHEN (((x''))<>((x'6182'))) THEN ((((NULL)AND(-4.20349406E8)))OR(1004928779)) WHEN (NOT ('+')) THEN (('') NOT BETWEEN (0.20878308156911474) AND ('295755566')) WHEN ((NULL) BETWEEN (x'6d11') AND (NULL)) THEN ((0.7181912300262974)>(240188516)) ELSE ((NULL) NOT BETWEEN (0.20258981332268555) AND (x'5379')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((LIKELIHOOD(1.236826512E9, 0.11169157569250665)))=((CAST('-1614399595' AS TEXT)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1168717467 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1429076996 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)&(0x14d8c930)) THEN (0x76b6e9e0 IN ('qI j')) ELSE (((0.8727659463797826))<(('1770978134'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2132565298 sz=-861144704 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=2129375365 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-160892531'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1042523986 -1247804591 sz=-274598656'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1194827031 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=-1208267177'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1710999860 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1941104526'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1528479083' IN ()) IN (((((((((x'')AND('**1*5n+䧹e')))AND(x'')))AND(0x7cd99cd2)))OR(x'4e685ae7')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.03452842930489186)) BETWEEN (((((0.8182135450925146))>=((NULL))))) AND ((CASE NULL  WHEN -445152400 THEN '*' END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-571771327)AND(x'')))AND('k*w╫Q4B#'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2027528302 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=570261993'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') BETWEEN ('-2042487158') AND (NULL)) IN (('뵫4' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-376469950 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-770038984 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1594660537 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'8250')>=(0.22452708526864062)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((x'')AND(0.1987025290425578)))OR(NULL))  WHEN ((('', '', '-406270160'))<=((x'', x'', 1.36974722E9))) THEN (NOT ('40727029')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('p꤉Y<鹋' IN ()))||(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1292207169'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1061290949 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1619877761'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.19773238710348162)AND(x'baafd8be')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.2675198533281751)GLOB('0T9')))/(((NULL)IS NOT(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=403028801 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.1658482447503622) BETWEEN (NULL) AND ('*?兛y崲+b'))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.5799815246625106) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-536395389'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1570242829 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=-918066264 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 sz=1112875374 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1127558533'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(((-2042487158)IS(0.20225555847781373)), (((x'', x'', x'')) NOT BETWEEN ((0x36f39ace, NULL, '-1097793375')) AND ((0.5781385401302095, '<RN#瘓V*', '301415637')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-688120034 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-239336365 sz=-1326451293'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-581537331' AS NUMERIC)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1670307410'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('0.7549462576796266' IN (0.7549462576796266))  WHEN CAST(NULL AS NUMERIC) THEN (0x28b2a1b0 IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 sz=1912146531'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1280928438'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '403028801 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((0.49289723510750894)OR(x'')))OR('')))OR(295755566)))AND('')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.30492318929982276) BETWEEN (NULL) AND (NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-78620178 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-861144704'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2075991836 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-581537331 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-846283659 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1586928374'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN x'' THEN 2143920623 ELSE x'' END))=((0.2389455119104562 COLLATE NOCASE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=138469171 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1531082572 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER))LIKE(('-273213898' IN (x'a0e5', NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1859156791'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((ABS(0.11687302621343931))OR(CAST('-512163037' AS REAL))))OR(CASE WHEN NULL THEN 'ⅷ4' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1251281615)>(0Xffffffffc7a4ce83)))<>(((x'563d') NOT BETWEEN (NULL) AND ('-1802980397')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1422585998'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(0Xfffffffff84b31e0 AS BLOB)  WHEN LIKELIHOOD(NULL, 0.835960926244218) THEN CASE 0.20925893080350555  WHEN '889240120' THEN '' ELSE '-75651699' END ELSE 'KMℽ<' COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('?WM6')) BETWEEN (((('1061290949') NOT NULL))) AND ((NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('Tm1' COLLATE BINARY)AND(((('-479954756'))<((x''))))))OR(TRIM('(L'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1852726241 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=948741324'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT ('0.8670577103890874')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, x'53d4', NULL)) NOT BETWEEN ((((',W')OR(0.32738702048514523)), CASE WHEN x'' THEN NULL WHEN x'' THEN 0.6255465952494202 WHEN 0X19109475 THEN NULL END, NULL)) AND ((json_array_length('tVahh6', x''), ((x'df48') NOT BETWEEN (1387477650) AND ('0.6832939767874436')), (NOT ('Q(J%'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(((x'')|(0.9648403491945416)))))OR(CASE NULL  WHEN NULL THEN 'P?O ' WHEN '()' THEN '7' WHEN x'97a7' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1625094426 -1593124646 sz=-1937313170 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-971958810 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=2143765287 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM)>=(((0.5969884439153684)*('꓌3\r&R<''')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(((0.627164335594832)IS NOT(0.5483267577497425))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-512924911 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-371550146 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('1098390354')OR(0.39231288782573037)))AND('1915274888')))AND('-1369133794')))AND(x'')))>>(CASE 'o1'  WHEN NULL THEN 0.4620293841298513 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-146951284') BETWEEN ('') AND (0Xffffffffc2c7afdd)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-441009706 sz=-668316116 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=309860972 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-2060868487 AS NUMERIC) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((('#W~o{\|ẗ'))>=((''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1080338521' IN ()))<=(CASE -4.9485879E8  WHEN NULL THEN -7.82855914E8 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1098795763 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8063901850610574; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1236826512 sz=232008366 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=79390245 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1428016962 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1061988139 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-91774988 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2042487158 sz=0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('yMT\rA&c', NULL, NULL, '-892603792', NULL))==((0.8142597015976851, x'', '-1367091609', 1088188963, NULL))))>=((((x'ebe9', 1034927740, '')) BETWEEN ((x'49b6', '1434880686', 1.36974722E9)) AND ((-443910926, x'', 0x37f6ec3c))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1760525924 sz=1754526329 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1028183973 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-646706252 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1079326040 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1300607791 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=79390245 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2043221603 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=492776303 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=96680497 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(x'')))OR('6z뱵q4I⭯C?')))GLOB(CAST(NULL AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2063046576 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1951906001 -494772852 sz=1780667051 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1528479083 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=923165165 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL COLLATE BINARY)AND(CAST(0.27930065704831375 AS TEXT))))OR((((NULL))=((0.5101279993418623))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '30359150'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_USED(((((NULL)AND(x'985d')))OR(138469171))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0xffffffffd2a4ac0c  WHEN x'e909d603' THEN x'' ELSE x'' END COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-559272545 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1528479083'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1415865684 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-498471562 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-595997876 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=295755566 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-517961232 sz=403028801'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(CASE 0.878434709430778  WHEN '958266287' THEN 0.052609627869050435 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 sz=-1569032051'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) BETWEEN ('-1236913204') AND ('0.22019766295424914')))OR((~ (0.776621614173839)))))AND(((('', x'', -624595521))!=(('750133624', NULL, 0X688f6067))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'0356'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (x'' IN ())  WHEN (NULL IN ()) THEN 0.43851089449841796 WHEN 0.548922812815618 COLLATE RTRIM THEN ((NULL)||('1860237966')) WHEN x'7ce6' COLLATE RTRIM THEN TYPEOF(DISTINCT x'e75d') WHEN (- (x'd8e3')) THEN json_array('294658771', NULL) WHEN CAST(NULL AS INTEGER) THEN CASE WHEN 0.9931445816693459 THEN '' WHEN '' THEN 0.12409361968094124 WHEN 0.766632874656645 THEN NULL WHEN '0.7103979335246247' THEN 0.07849077336191357 WHEN 1.803426423E9 THEN 0.799992791012059 END ELSE ((x'') BETWEEN ('') AND ('<cl笈')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0x5c3b89ed, 0.4925585474515334, x''))>((x'', NULL, '2075991836')))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE 0X47225ab7  WHEN '-1318505343' THEN '455605778' WHEN 0.9477714029144515 THEN x'606b15a3' WHEN 0.27930065704831375 THEN '1975672983' END AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN '' THEN x'' ELSE '-490729461' END AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1614399595'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-517277657 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-806772771'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-866540961 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1784231073'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.9525822041949257' COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1336034912 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1338196263'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-945500541 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-877191747 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN 1097412654 THEN x'' END) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5199019235913374) NOT BETWEEN ('Ec') AND (x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1054545553 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1415172586 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL))<=((0.7997310811428803))) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('o-C%' AS TEXT))AND(((0.5739397144885269) NOT BETWEEN ('2''') AND (NULL)))))AND(LIKELIHOOD(DISTINCT 0.9923386391281875, 0.8182685877710975))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER('0.8182135450925146' COLLATE NOCASE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1923290257 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert('1448154564', json_array_length(0.5642871487424068, NULL), CASE x''  WHEN x'' THEN '0.7874241839797926' END, x'' COLLATE RTRIM, ((NULL)<<(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (NULL) AND (NULL))) BETWEEN ((('') BETWEEN (x'') AND (NULL))) AND (((0.44064377745220795) NOT BETWEEN (x'add1') AND (x'e98839fdbce0')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2136606713 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-869070486 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1858334060 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1293944732 -1254678889'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=706713021 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-212162427 sz=-1613485977'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((4.03028801E8) NOT BETWEEN (x'') AND ('ꜫ 3')))>((('r3/')==(x'59c7')))); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
PRAGMA cache_size; -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR FAIL rt0 SET (c2, c2)=('-846283659', NULL) WHERE (+ ((rt0.c2 IN (rt0.c0)))); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c2='-1614399595', c0=-846283659; -- 1ms;
UPDATE OR IGNORE rt0 SET c1=x'a20d' WHERE NULLIF(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, CAST(rt0.c2 AS TEXT)); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 INT ); -- 1ms;
ANALYZE temp; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=(0.589264214167147) WHERE CASE WHEN rt1.c1 THEN rt1.c0 END COLLATE RTRIM; -- 0ms;
END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR REPLACE rt1 SET (c1)=('195937260') WHERE ((DATE(rt1.c3, 0.8321092924658718, rt1.c3)) BETWEEN (CAST(rt1.c3 AS REAL)) AND (((rt1.c3)>=(rt1.c2)))); -- 1ms;
PRAGMA auto_vacuum = NONE; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c2=NULL WHERE ((COALESCE(rt0.c0, rt0.c1)) NOTNULL); -- 0ms;
UPDATE OR FAIL rt1 SET c1='mQA', c2=0X627512e8, c0='iO' WHERE (((rt1.c0) IS TRUE) IN ()); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.708197513232005), (x''), (x'00d1'); -- 0ms;
ANALYZE rt1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c1='-1898772117', c0='.('; -- 0ms;
UPDATE OR ABORT rt1 SET (c2)=(x'') WHERE ((((0.47704220626253646)AND(((((((((rt1.c2)OR(rt1.c3)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c0)))))AND(CAST(rt1.c1 AS REAL))); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR FAIL rt0 SET c2='642636140'; -- 0ms;
ANALYZE; -- 1ms;
PRAGMA temp.integrity_check; -- 0ms;
UPDATE rt0 SET c1=x'4e47bb97', c2=NULL, c0=-1369133794; -- 0ms;
UPDATE OR IGNORE rt1 SET (c3, c2)=(NULL, NULL); -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR IGNORE rt1 SET (c3)=('8bK+V᧸') WHERE ((((((((0.670065028702741)AND(((rt1.c3)|(x'')))))OR(((rt1.c2)+(rt1.c0)))))AND(LIKELIHOOD(DISTINCT rt1.c0, 0.585879934263166))))OR(((((rt1.c2)AND(rt1.c2)))AND(-94697411)))); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0) VALUES ('IhHb[-', NULL); -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c2, c0, c1)=(x'7335', NULL, 'MS'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c0)=(x'', NULL); -- 0ms;
UPDATE OR REPLACE rt1 SET (c1)=(x'') WHERE TRIM((((2.142741901E9))<((rt1.c0)))); -- 0ms;
UPDATE rt1 SET c1='-1646401001'; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=('0.2858494888176514') WHERE '0.8267404715173561'; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (0.5957140857516555, 972380296); -- 0ms;
INSERT OR ABORT INTO rt1(c3) VALUES (NULL); -- 0ms;
ANALYZE; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL ((((rt1.c3))>=((rt0.c1))) IN ()) FROM rt0, rt1 WHERE ((x'68a6' COLLATE RTRIM IN ())); -- 0ms;
INSERT OR ABORT INTO rt1 VALUES (x'', NULL, x'', 0xffffffffeffcc3b1); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES ('-1999814132'); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
END TRANSACTION; -- 1ms;
INSERT OR FAIL INTO rt1(c3, c1, c2, c0) VALUES ('-468104799', x'', NULL, x''); -- 0ms;
INSERT OR REPLACE INTO rt1(c0, c1, c3) VALUES (',', '-1867501560', 'N<a'); -- 1ms;
UPDATE OR IGNORE rt0 SET (c2)=(-0.0); -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
REINDEX; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt0, v0 WHERE (((((CAST(rt0.c0 AS INTEGER))AND((rt0.c2 IN ()))))AND(((rt0.c0)*(rt0.c2))))) ORDER BY (((NOT (v0.c0))) BETWEEN ((v0.c0 IN ())) AND (CASE rt0.c2  WHEN v0.c0 THEN x'' END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c0 AS INTEGER))AND((rt0.c2 IN ()))))AND(((rt0.c0)*(rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((NOT (v0.c0))) BETWEEN ((v0.c0 IN ())) AND (CASE rt0.c2  WHEN v0.c0 THEN x'' END)) ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((((CAST(rt0.c0 AS INTEGER))AND((rt0.c2 IN ()))))AND(((rt0.c0)*(rt0.c2))))) ORDER BY (((NOT (v0.c0))) BETWEEN ((v0.c0 IN ())) AND (CASE rt0.c2  WHEN v0.c0 THEN x'' END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c0 AS INTEGER))AND((rt0.c2 IN ()))))AND(((rt0.c0)*(rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((NOT (v0.c0))) BETWEEN ((v0.c0 IN ())) AND (CASE rt0.c2  WHEN v0.c0 THEN x'' END)) ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((((CAST(rt0.c0 AS INTEGER))AND((rt0.c2 IN ()))))AND(((rt0.c0)*(rt0.c2))))) ORDER BY (((NOT (v0.c0))) BETWEEN ((v0.c0 IN ())) AND (CASE rt0.c2  WHEN v0.c0 THEN x'' END)) ASC  NULLS LAST;
SELECT * FROM v0, rt1 FULL OUTER JOIN rt0 ON (((((v0.c0) IS TRUE)))=((CASE WHEN rt0.c1 THEN NULL END))) WHERE (((v0.c0 COLLATE BINARY)/(((rt1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)/(((rt1.c1) ISNULL)))) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN rt0 ON (((((v0.c0) IS TRUE)))==((CASE WHEN rt0.c1 THEN NULL END))));
SELECT * FROM v0, rt1 FULL OUTER JOIN rt0 ON (((((v0.c0) IS TRUE)))=((CASE WHEN rt0.c1 THEN NULL END))) WHERE (((v0.c0 COLLATE BINARY)/(((rt1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)/(((rt1.c1) ISNULL)))) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN rt0 ON (((((v0.c0) IS TRUE)))==((CASE WHEN rt0.c1 THEN NULL END))));
SELECT * FROM v0, rt1 FULL OUTER JOIN rt0 ON (((((v0.c0) IS TRUE)))=((CASE WHEN rt0.c1 THEN NULL END))) WHERE (((v0.c0 COLLATE BINARY)/(((rt1.c1) ISNULL))));
SELECT COUNT(*) FROM v0 CROSS JOIN rt1 ON x'' INNER JOIN rt0 ON (((('336812299')|(rt1.c1))) NOTNULL) WHERE ((NOT (((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c0)))AND(rt0.c1)))OR(rt1.c1)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c0)))AND(rt0.c1)))OR(rt1.c1)))AND(rt1.c2))))) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON x'' INNER JOIN rt0 ON (((('336812299')|(rt1.c1))) NOTNULL));
SELECT COUNT(*) FROM v0 CROSS JOIN rt1 ON x'' INNER JOIN rt0 ON (((('336812299')|(rt1.c1))) NOTNULL) WHERE ((NOT (((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c0)))AND(rt0.c1)))OR(rt1.c1)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c0)))AND(rt0.c1)))OR(rt1.c1)))AND(rt1.c2))))) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON x'' INNER JOIN rt0 ON (((('336812299')|(rt1.c1))) NOTNULL));
SELECT COUNT(*) FROM v0 CROSS JOIN rt1 ON x'' INNER JOIN rt0 ON (((('336812299')|(rt1.c1))) NOTNULL) WHERE ((NOT (((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c0)))AND(rt0.c1)))OR(rt1.c1)))AND(rt1.c2)))));
SELECT * FROM rt0, v0 WHERE (((((NULL) ISNULL))<<(NULL)));
SELECT SUM(count) FROM (SELECT ((((((NULL) ISNULL))<<(NULL))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((NULL) ISNULL))<<(NULL)));
SELECT SUM(count) FROM (SELECT ((((((NULL) ISNULL))<<(NULL))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((NULL) ISNULL))<<(NULL)));
SELECT ALL * FROM rt1, v0 WHERE (CASE ((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c3)))AND(v0.c0)))OR(rt1.c0))  WHEN (((rt1.c1)) BETWEEN ((0.5453496448293239)) AND ((rt1.c3))) THEN ((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c3)))AND(v0.c0)))OR(rt1.c0))  WHEN (((rt1.c1)) BETWEEN ((0.5453496448293239)) AND ((rt1.c3))) THEN ((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) END) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (CASE ((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c3)))AND(v0.c0)))OR(rt1.c0))  WHEN (((rt1.c1)) BETWEEN ((0.5453496448293239)) AND ((rt1.c3))) THEN ((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c3)))AND(v0.c0)))OR(rt1.c0))  WHEN (((rt1.c1)) BETWEEN ((0.5453496448293239)) AND ((rt1.c3))) THEN ((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) END) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (CASE ((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c3)))AND(v0.c0)))OR(rt1.c0))  WHEN (((rt1.c1)) BETWEEN ((0.5453496448293239)) AND ((rt1.c3))) THEN ((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) END);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt0.c1)-(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)-(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt0.c1)-(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)-(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt0.c1)-(rt0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM v0 WHERE ((~ ((v0.c0 IN ())))) ORDER BY CAST(((v0.c0)GLOB('!')) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)GLOB('!')) AS TEXT) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ ((v0.c0 IN ())))) ORDER BY CAST(((v0.c0)GLOB('!')) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)GLOB('!')) AS TEXT) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ ((v0.c0 IN ())))) ORDER BY CAST(((v0.c0)GLOB('!')) AS TEXT) DESC;
SELECT ALL * FROM v0, rt1, rt0 WHERE ('V>') ORDER BY json_array(((v0.c0)*(rt0.c2)), -57298479)  NULLS FIRST, (((rt0.c2 IN (v0.c0, v0.c0)))-(((rt0.c2) BETWEEN ('k&') AND (rt1.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('V>') IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY json_array(((v0.c0)*(rt0.c2)), -57298479)  NULLS FIRST, (((rt0.c2 IN (v0.c0, v0.c0)))-(((rt0.c2) BETWEEN ('k&') AND (rt1.c3)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt1, rt0 WHERE ('V>') ORDER BY json_array(((v0.c0)*(rt0.c2)), -57298479)  NULLS FIRST, (((rt0.c2 IN (v0.c0, v0.c0)))-(((rt0.c2) BETWEEN ('k&') AND (rt1.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('V>') IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY json_array(((v0.c0)*(rt0.c2)), -57298479)  NULLS FIRST, (((rt0.c2 IN (v0.c0, v0.c0)))-(((rt0.c2) BETWEEN ('k&') AND (rt1.c3)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt1, rt0 WHERE ('V>') ORDER BY json_array(((v0.c0)*(rt0.c2)), -57298479)  NULLS FIRST, (((rt0.c2 IN (v0.c0, v0.c0)))-(((rt0.c2) BETWEEN ('k&') AND (rt1.c3)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)LIKE(rt0.c1)))>>(CAST(rt0.c2 AS INTEGER)))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)LIKE(rt0.c1)))>>(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)LIKE(rt0.c1)))>>(CAST(rt0.c2 AS INTEGER)))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)LIKE(rt0.c1)))>>(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)LIKE(rt0.c1)))>>(CAST(rt0.c2 AS INTEGER)))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (HEX(((v0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((HEX(((v0.c0) NOTNULL))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (HEX(((v0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((HEX(((v0.c0) NOTNULL))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (HEX(((v0.c0) NOTNULL)));
SELECT ALL * FROM v0 WHERE ((((0.4500395776158739 IN ()))<=('먙Md7')));
SELECT SUM(count) FROM (SELECT (((((0.4500395776158739 IN ()))<=('먙Md7'))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((0.4500395776158739 IN ()))<=('먙Md7')));
SELECT SUM(count) FROM (SELECT (((((0.4500395776158739 IN ()))<=('먙Md7'))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((0.4500395776158739 IN ()))<=('먙Md7')));
SELECT * FROM v0, rt1, rt0 WHERE ((((rt0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT * FROM v0, rt1, rt0 WHERE ((((rt0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT * FROM v0, rt1, rt0 WHERE ((((rt0.c0) IS FALSE) IN ()));
SELECT ALL * FROM rt1, v0, rt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))  WHEN ((v0.c0) NOTNULL) THEN (+ (rt0.c2)) WHEN (rt1.c1 IN (rt1.c1)) THEN json_insert(rt0.c0, x'', rt0.c1, x'', rt1.c0, rt0.c2, rt0.c0) WHEN UNLIKELY(DISTINCT rt0.c1) THEN (((rt1.c3))!=((rt1.c0))) ELSE CAST(rt1.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))  WHEN ((v0.c0) NOTNULL) THEN (+ (rt0.c2)) WHEN (rt1.c1 IN (rt1.c1)) THEN json_insert(rt0.c0, x'', rt0.c1, x'', rt1.c0, rt0.c2, rt0.c0) WHEN UNLIKELY(DISTINCT rt0.c1) THEN (((rt1.c3))<>((rt1.c0))) ELSE CAST(rt1.c0 AS INTEGER) END) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL * FROM rt1, v0, rt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))  WHEN ((v0.c0) NOTNULL) THEN (+ (rt0.c2)) WHEN (rt1.c1 IN (rt1.c1)) THEN json_insert(rt0.c0, x'', rt0.c1, x'', rt1.c0, rt0.c2, rt0.c0) WHEN UNLIKELY(DISTINCT rt0.c1) THEN (((rt1.c3))!=((rt1.c0))) ELSE CAST(rt1.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))  WHEN ((v0.c0) NOTNULL) THEN (+ (rt0.c2)) WHEN (rt1.c1 IN (rt1.c1)) THEN json_insert(rt0.c0, x'', rt0.c1, x'', rt1.c0, rt0.c2, rt0.c0) WHEN UNLIKELY(DISTINCT rt0.c1) THEN (((rt1.c3))<>((rt1.c0))) ELSE CAST(rt1.c0 AS INTEGER) END) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL * FROM rt1, v0, rt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))  WHEN ((v0.c0) NOTNULL) THEN (+ (rt0.c2)) WHEN (rt1.c1 IN (rt1.c1)) THEN json_insert(rt0.c0, x'', rt0.c1, x'', rt1.c0, rt0.c2, rt0.c0) WHEN UNLIKELY(DISTINCT rt0.c1) THEN (((rt1.c3))!=((rt1.c0))) ELSE CAST(rt1.c0 AS INTEGER) END);
SELECT * FROM v0, rt1 FULL OUTER JOIN rt0 ON (- (((rt1.c2)<<(rt1.c3)))) WHERE ((('-918940676')>=(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((('-918940676')>=(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN rt0 ON (- (((rt1.c2)<<(rt1.c3)))));
SELECT * FROM v0, rt1 FULL OUTER JOIN rt0 ON (- (((rt1.c2)<<(rt1.c3)))) WHERE ((('-918940676')>=(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((('-918940676')>=(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN rt0 ON (- (((rt1.c2)<<(rt1.c3)))));
SELECT * FROM v0, rt1 FULL OUTER JOIN rt0 ON (- (((rt1.c2)<<(rt1.c3)))) WHERE ((('-918940676')>=(((v0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE ((+ ((((v0.c0))<>((rt1.c3)))))) ORDER BY (+ (TRIM(rt0.c1)))  NULLS FIRST, (+ (((rt1.c0) NOT NULL)))  NULLS FIRST, (~ (((rt0.c0)>>(rt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((v0.c0))<>((rt1.c3)))))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY (+ (TRIM(rt0.c1)))  NULLS FIRST, (+ (((rt1.c0) NOT NULL)))  NULLS FIRST, (~ (((rt0.c0)>>(rt1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE ((+ ((((v0.c0))<>((rt1.c3)))))) ORDER BY (+ (TRIM(rt0.c1)))  NULLS FIRST, (+ (((rt1.c0) NOT NULL)))  NULLS FIRST, (~ (((rt0.c0)>>(rt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((v0.c0))<>((rt1.c3)))))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY (+ (TRIM(rt0.c1)))  NULLS FIRST, (+ (((rt1.c0) NOT NULL)))  NULLS FIRST, (~ (((rt0.c0)>>(rt1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE ((+ ((((v0.c0))<>((rt1.c3)))))) ORDER BY (+ (TRIM(rt0.c1)))  NULLS FIRST, (+ (((rt1.c0) NOT NULL)))  NULLS FIRST, (~ (((rt0.c0)>>(rt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM v0 NOT INDEXED, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM v0 NOT INDEXED, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (((((((((CAST(rt0.c2 AS REAL))AND(CAST('' AS INTEGER))))AND(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND('1001789654')))OR(rt0.c1)))))OR(((rt0.c2) NOT NULL))))AND(NULL COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c2 AS REAL))AND(CAST('' AS INTEGER))))AND(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND('1001789654')))OR(rt0.c1)))))OR(((rt0.c2) NOT NULL))))AND(NULL COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((CAST(rt0.c2 AS REAL))AND(CAST('' AS INTEGER))))AND(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND('1001789654')))OR(rt0.c1)))))OR(((rt0.c2) NOT NULL))))AND(NULL COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c2 AS REAL))AND(CAST('' AS INTEGER))))AND(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND('1001789654')))OR(rt0.c1)))))OR(((rt0.c2) NOT NULL))))AND(NULL COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((CAST(rt0.c2 AS REAL))AND(CAST('' AS INTEGER))))AND(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND('1001789654')))OR(rt0.c1)))))OR(((rt0.c2) NOT NULL))))AND(NULL COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0 WHERE (ABS(DISTINCT ((rt0.c2)IS NOT(rt0.c2)))) ORDER BY ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)) COLLATE BINARY COLLATE BINARY ASC, ((NULL) ISNULL) ASC  NULLS LAST, load_extension(CAST(rt0.c2 AS TEXT)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((rt0.c2)IS NOT(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)) COLLATE BINARY COLLATE BINARY ASC, ((NULL) ISNULL) ASC  NULLS LAST, load_extension(CAST(rt0.c2 AS TEXT)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (ABS(DISTINCT ((rt0.c2)IS NOT(rt0.c2)))) ORDER BY ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)) COLLATE BINARY COLLATE BINARY ASC, ((NULL) ISNULL) ASC  NULLS LAST, load_extension(CAST(rt0.c2 AS TEXT)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((rt0.c2)IS NOT(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)) COLLATE BINARY COLLATE BINARY ASC, ((NULL) ISNULL) ASC  NULLS LAST, load_extension(CAST(rt0.c2 AS TEXT)) ASC  NULLS LAST);
SELECT ALL * FROM rt1 NATURAL JOIN v0 WHERE ((((rt1.c2)) BETWEEN (((+ (rt1.c3)))) AND ((((rt1.c3)>=(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN (((+ (rt1.c3)))) AND ((((rt1.c3)>=(rt1.c2)))))) IS TRUE)  as count FROM rt1 NATURAL JOIN v0);
SELECT ALL * FROM rt1 NATURAL JOIN v0 WHERE ((((rt1.c2)) BETWEEN (((+ (rt1.c3)))) AND ((((rt1.c3)>=(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN (((+ (rt1.c3)))) AND ((((rt1.c3)>=(rt1.c2)))))) IS TRUE)  as count FROM rt1 NATURAL JOIN v0);
SELECT ALL * FROM rt1 NATURAL JOIN v0 WHERE ((((rt1.c2)) BETWEEN (((+ (rt1.c3)))) AND ((((rt1.c3)>=(rt1.c2))))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c2 THEN rt1.c2 COLLATE RTRIM WHEN CAST(rt1.c0 AS INTEGER) THEN (rt1.c3 IN (x'', rt1.c3)) WHEN ((rt1.c2)IS NOT(rt1.c3)) THEN rt1.c1 ELSE ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)) END) ORDER BY ((((rt1.c3) IS TRUE)) IS FALSE) ASC, (- (((((rt1.c0)AND(rt1.c3)))AND(rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 THEN rt1.c2 COLLATE RTRIM WHEN CAST(rt1.c0 AS INTEGER) THEN (rt1.c3 IN (x'', rt1.c3)) WHEN ((rt1.c2)IS NOT(rt1.c3)) THEN rt1.c1 ELSE ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)) END) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3) IS TRUE)) IS FALSE) ASC, (- (((((rt1.c0)AND(rt1.c3)))AND(rt1.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c2 THEN rt1.c2 COLLATE RTRIM WHEN CAST(rt1.c0 AS INTEGER) THEN (rt1.c3 IN (x'', rt1.c3)) WHEN ((rt1.c2)IS NOT(rt1.c3)) THEN rt1.c1 ELSE ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)) END) ORDER BY ((((rt1.c3) IS TRUE)) IS FALSE) ASC, (- (((((rt1.c0)AND(rt1.c3)))AND(rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 THEN rt1.c2 COLLATE RTRIM WHEN CAST(rt1.c0 AS INTEGER) THEN (rt1.c3 IN (x'', rt1.c3)) WHEN ((rt1.c2)IS NOT(rt1.c3)) THEN rt1.c1 ELSE ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)) END) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3) IS TRUE)) IS FALSE) ASC, (- (((((rt1.c0)AND(rt1.c3)))AND(rt1.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c2 THEN rt1.c2 COLLATE RTRIM WHEN CAST(rt1.c0 AS INTEGER) THEN (rt1.c3 IN (x'', rt1.c3)) WHEN ((rt1.c2)IS NOT(rt1.c3)) THEN rt1.c1 ELSE ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)) END) ORDER BY ((((rt1.c3) IS TRUE)) IS FALSE) ASC, (- (((((rt1.c0)AND(rt1.c3)))AND(rt1.c1))))  NULLS LAST;
SELECT * FROM v0 INNER JOIN rt1 ON (((v0.c0, rt1.c2, rt1.c1)) NOT BETWEEN ((((((((((rt1.c3)OR(rt1.c0)))OR(0.3382791692198076)))AND(rt1.c2)))OR(rt1.c0)), ((v0.c0) BETWEEN (rt1.c1) AND ('-1503706196')), ((rt1.c0)&(v0.c0)))) AND ((CASE WHEN rt1.c2 THEN rt1.c0 END, (v0.c0 IN ()), ((rt1.c2) NOT NULL)))) WHERE (((rt1.c1)AND(rt1.c3)) COLLATE BINARY) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1)AND(rt1.c3)) COLLATE BINARY) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON (((v0.c0, rt1.c2, rt1.c1)) NOT BETWEEN ((((((((((rt1.c3)OR(rt1.c0)))OR(0.3382791692198076)))AND(rt1.c2)))OR(rt1.c0)), ((v0.c0) BETWEEN (rt1.c1) AND ('-1503706196')), ((rt1.c0)&(v0.c0)))) AND ((CASE WHEN rt1.c2 THEN rt1.c0 END, (v0.c0 IN ()), ((rt1.c2) NOT NULL)))) ORDER BY NULL ASC  NULLS FIRST);
SELECT * FROM v0 INNER JOIN rt1 ON (((v0.c0, rt1.c2, rt1.c1)) NOT BETWEEN ((((((((((rt1.c3)OR(rt1.c0)))OR(0.3382791692198076)))AND(rt1.c2)))OR(rt1.c0)), ((v0.c0) BETWEEN (rt1.c1) AND ('-1503706196')), ((rt1.c0)&(v0.c0)))) AND ((CASE WHEN rt1.c2 THEN rt1.c0 END, (v0.c0 IN ()), ((rt1.c2) NOT NULL)))) WHERE (((rt1.c1)AND(rt1.c3)) COLLATE BINARY) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1)AND(rt1.c3)) COLLATE BINARY) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON (((v0.c0, rt1.c2, rt1.c1)) NOT BETWEEN ((((((((((rt1.c3)OR(rt1.c0)))OR(0.3382791692198076)))AND(rt1.c2)))OR(rt1.c0)), ((v0.c0) BETWEEN (rt1.c1) AND ('-1503706196')), ((rt1.c0)&(v0.c0)))) AND ((CASE WHEN rt1.c2 THEN rt1.c0 END, (v0.c0 IN ()), ((rt1.c2) NOT NULL)))) ORDER BY NULL ASC  NULLS FIRST);
SELECT * FROM v0 INNER JOIN rt1 ON (((v0.c0, rt1.c2, rt1.c1)) NOT BETWEEN ((((((((((rt1.c3)OR(rt1.c0)))OR(0.3382791692198076)))AND(rt1.c2)))OR(rt1.c0)), ((v0.c0) BETWEEN (rt1.c1) AND ('-1503706196')), ((rt1.c0)&(v0.c0)))) AND ((CASE WHEN rt1.c2 THEN rt1.c0 END, (v0.c0 IN ()), ((rt1.c2) NOT NULL)))) WHERE (((rt1.c1)AND(rt1.c3)) COLLATE BINARY) ORDER BY NULL ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (INSTR(CASE NULL  WHEN rt1.c0 THEN rt1.c1 END, ((((rt1.c1)OR(rt1.c3)))OR(rt1.c3))));
SELECT SUM(count) FROM (SELECT ((INSTR(CASE NULL  WHEN rt1.c0 THEN rt1.c1 END, ((((rt1.c1)OR(rt1.c3)))OR(rt1.c3)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (INSTR(CASE NULL  WHEN rt1.c0 THEN rt1.c1 END, ((((rt1.c1)OR(rt1.c3)))OR(rt1.c3))));
SELECT SUM(count) FROM (SELECT ((INSTR(CASE NULL  WHEN rt1.c0 THEN rt1.c1 END, ((((rt1.c1)OR(rt1.c3)))OR(rt1.c3)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (INSTR(CASE NULL  WHEN rt1.c0 THEN rt1.c1 END, ((((rt1.c1)OR(rt1.c3)))OR(rt1.c3))));
SELECT COUNT(*) FROM rt0, rt1 WHERE ('2035269682') ORDER BY (((-394521407))<=(((rt0.c1 IN (rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('2035269682') IS TRUE)  as count FROM rt0, rt1 ORDER BY (((-394521407))<=(((rt0.c1 IN (rt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE ('2035269682') ORDER BY (((-394521407))<=(((rt0.c1 IN (rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('2035269682') IS TRUE)  as count FROM rt0, rt1 ORDER BY (((-394521407))<=(((rt0.c1 IN (rt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE ('2035269682') ORDER BY (((-394521407))<=(((rt0.c1 IN (rt0.c2)))))  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (((LIKE(rt0.c0, '-1937313170')) NOTNULL)) ORDER BY (+ (((rt0.c1) NOT BETWEEN (x'81a1') AND (rt0.c1)))) ASC, (RTRIM(rt0.c1) IN ()), (('-600825481')*(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(rt0.c0, '-1937313170')) NOTNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY (+ (((rt0.c1) NOT BETWEEN (x'81a1') AND (rt0.c1)))) ASC, (RTRIM(rt0.c1) IN ()), (('-600825481')*(rt0.c1))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((LIKE(rt0.c0, '-1937313170')) NOTNULL)) ORDER BY (+ (((rt0.c1) NOT BETWEEN (x'81a1') AND (rt0.c1)))) ASC, (RTRIM(rt0.c1) IN ()), (('-600825481')*(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(rt0.c0, '-1937313170')) NOTNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY (+ (((rt0.c1) NOT BETWEEN (x'81a1') AND (rt0.c1)))) ASC, (RTRIM(rt0.c1) IN ()), (('-600825481')*(rt0.c1))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((LIKE(rt0.c0, '-1937313170')) NOTNULL)) ORDER BY (+ (((rt0.c1) NOT BETWEEN (x'81a1') AND (rt0.c1)))) ASC, (RTRIM(rt0.c1) IN ()), (('-600825481')*(rt0.c1))  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (((((rt1.c1 COLLATE RTRIM)OR((v0.c0 IN ()))))OR(((rt1.c0)AND(rt1.c0))))) ORDER BY CAST(IFNULL(NULL, rt0.c2) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((rt1.c1 COLLATE RTRIM)OR((v0.c0 IN ()))))OR(((rt1.c0)AND(rt1.c0))))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY CAST(IFNULL(NULL, rt0.c2) AS INTEGER));
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (((((rt1.c1 COLLATE RTRIM)OR((v0.c0 IN ()))))OR(((rt1.c0)AND(rt1.c0))))) ORDER BY CAST(IFNULL(NULL, rt0.c2) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((rt1.c1 COLLATE RTRIM)OR((v0.c0 IN ()))))OR(((rt1.c0)AND(rt1.c0))))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY CAST(IFNULL(NULL, rt0.c2) AS INTEGER));
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (((((rt1.c1 COLLATE RTRIM)OR((v0.c0 IN ()))))OR(((rt1.c0)AND(rt1.c0))))) ORDER BY CAST(IFNULL(NULL, rt0.c2) AS INTEGER);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON CAST(v0.c0 AS NUMERIC) WHERE ((((rt0.c2)) BETWEEN ((((rt0.c2) NOTNULL))) AND (('0.7624930901022451')))) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt0.c2) NOTNULL))) AND (('0.7624930901022451')))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CAST(v0.c0 AS NUMERIC) ORDER BY rt0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON CAST(v0.c0 AS NUMERIC) WHERE ((((rt0.c2)) BETWEEN ((((rt0.c2) NOTNULL))) AND (('0.7624930901022451')))) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt0.c2) NOTNULL))) AND (('0.7624930901022451')))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CAST(v0.c0 AS NUMERIC) ORDER BY rt0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON CAST(v0.c0 AS NUMERIC) WHERE ((((rt0.c2)) BETWEEN ((((rt0.c2) NOTNULL))) AND (('0.7624930901022451')))) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt1 WHERE (CASE (~ (rt1.c1))  WHEN ((v0.c0) IS TRUE) THEN ((rt1.c2)=(rt1.c3)) WHEN ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)) THEN rt1.c3 WHEN (('958266287') IS FALSE) THEN v0.c0 COLLATE NOCASE END) ORDER BY (((v0.c0, v0.c0, rt1.c2, rt1.c1, NULL)) NOT BETWEEN ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END, ((rt1.c3)==(rt1.c0)), '2137569254', rt1.c2 COLLATE NOCASE, rt1.c2)) AND ((((rt1.c3)<(rt1.c3)), (~ (v0.c0)), CAST(rt1.c3 AS REAL), ((rt1.c2) ISNULL), NULLIF(DISTINCT rt1.c2, rt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (rt1.c1))  WHEN ((v0.c0) IS TRUE) THEN ((rt1.c2)=(rt1.c3)) WHEN ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)) THEN rt1.c3 WHEN (('958266287') IS FALSE) THEN v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0, rt1 ORDER BY (((v0.c0, v0.c0, rt1.c2, rt1.c1, NULL)) NOT BETWEEN ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END, ((rt1.c3)==(rt1.c0)), '2137569254', rt1.c2 COLLATE NOCASE, rt1.c2)) AND ((((rt1.c3)<(rt1.c3)), (~ (v0.c0)), CAST(rt1.c3 AS REAL), ((rt1.c2) ISNULL), NULLIF(DISTINCT rt1.c2, rt1.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt1 WHERE (CASE (~ (rt1.c1))  WHEN ((v0.c0) IS TRUE) THEN ((rt1.c2)=(rt1.c3)) WHEN ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)) THEN rt1.c3 WHEN (('958266287') IS FALSE) THEN v0.c0 COLLATE NOCASE END) ORDER BY (((v0.c0, v0.c0, rt1.c2, rt1.c1, NULL)) NOT BETWEEN ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END, ((rt1.c3)==(rt1.c0)), '2137569254', rt1.c2 COLLATE NOCASE, rt1.c2)) AND ((((rt1.c3)<(rt1.c3)), (~ (v0.c0)), CAST(rt1.c3 AS REAL), ((rt1.c2) ISNULL), NULLIF(DISTINCT rt1.c2, rt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (rt1.c1))  WHEN ((v0.c0) IS TRUE) THEN ((rt1.c2)=(rt1.c3)) WHEN ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)) THEN rt1.c3 WHEN (('958266287') IS FALSE) THEN v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0, rt1 ORDER BY (((v0.c0, v0.c0, rt1.c2, rt1.c1, NULL)) NOT BETWEEN ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END, ((rt1.c3)==(rt1.c0)), '2137569254', rt1.c2 COLLATE NOCASE, rt1.c2)) AND ((((rt1.c3)<(rt1.c3)), (~ (v0.c0)), CAST(rt1.c3 AS REAL), ((rt1.c2) ISNULL), NULLIF(DISTINCT rt1.c2, rt1.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt1 WHERE (CASE (~ (rt1.c1))  WHEN ((v0.c0) IS TRUE) THEN ((rt1.c2)=(rt1.c3)) WHEN ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)) THEN rt1.c3 WHEN (('958266287') IS FALSE) THEN v0.c0 COLLATE NOCASE END) ORDER BY (((v0.c0, v0.c0, rt1.c2, rt1.c1, NULL)) NOT BETWEEN ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END, ((rt1.c3)==(rt1.c0)), '2137569254', rt1.c2 COLLATE NOCASE, rt1.c2)) AND ((((rt1.c3)<(rt1.c3)), (~ (v0.c0)), CAST(rt1.c3 AS REAL), ((rt1.c2) ISNULL), NULLIF(DISTINCT rt1.c2, rt1.c1)))) ASC  NULLS FIRST;
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON UPPER(DISTINCT rt0.c2) COLLATE BINARY CROSS JOIN v0 ON CHAR(((((rt0.c1)AND(rt0.c1)))AND(rt1.c3)), CASE WHEN 0.4515688952924468 THEN rt1.c1 END, ((((rt1.c0)AND(v0.c0)))OR(rt0.c2))) WHERE (CAST(rt1.c2 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON UPPER(DISTINCT rt0.c2) COLLATE BINARY CROSS JOIN v0 ON CHAR(((((rt0.c1)AND(rt0.c1)))AND(rt1.c3)), CASE WHEN 0.4515688952924468 THEN rt1.c1 END, ((((rt1.c0)AND(v0.c0)))OR(rt0.c2))));
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON UPPER(DISTINCT rt0.c2) COLLATE BINARY CROSS JOIN v0 ON CHAR(((((rt0.c1)AND(rt0.c1)))AND(rt1.c3)), CASE WHEN 0.4515688952924468 THEN rt1.c1 END, ((((rt1.c0)AND(v0.c0)))OR(rt0.c2))) WHERE (CAST(rt1.c2 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON UPPER(DISTINCT rt0.c2) COLLATE BINARY CROSS JOIN v0 ON CHAR(((((rt0.c1)AND(rt0.c1)))AND(rt1.c3)), CASE WHEN 0.4515688952924468 THEN rt1.c1 END, ((((rt1.c0)AND(v0.c0)))OR(rt0.c2))));
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON UPPER(DISTINCT rt0.c2) COLLATE BINARY CROSS JOIN v0 ON CHAR(((((rt0.c1)AND(rt0.c1)))AND(rt1.c3)), CASE WHEN 0.4515688952924468 THEN rt1.c1 END, ((((rt1.c0)AND(v0.c0)))OR(rt0.c2))) WHERE (CAST(rt1.c2 COLLATE NOCASE AS TEXT));
SELECT * FROM v0 WHERE ((((((v0.c0) NOT NULL)))>((CAST(v0.c0 AS INTEGER))))) ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0) NOTNULL), ((v0.c0)*(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND (((0.5027338288959906 IN ()), (v0.c0 IN ()), ((v0.c0)<=(v0.c0))))) ASC  NULLS FIRST, (((CAST(v0.c0 AS BLOB)))>=((((v0.c0) NOT BETWEEN (v0.c0) AND (''))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0) NOT NULL)))>((CAST(v0.c0 AS INTEGER))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0) NOTNULL), ((v0.c0)*(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND (((0.5027338288959906 IN ()), (v0.c0 IN ()), ((v0.c0)<=(v0.c0))))) ASC  NULLS FIRST, (((CAST(v0.c0 AS BLOB)))>=((((v0.c0) NOT BETWEEN (v0.c0) AND (''))))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((((v0.c0) NOT NULL)))>((CAST(v0.c0 AS INTEGER))))) ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0) NOTNULL), ((v0.c0)*(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND (((0.5027338288959906 IN ()), (v0.c0 IN ()), ((v0.c0)<=(v0.c0))))) ASC  NULLS FIRST, (((CAST(v0.c0 AS BLOB)))>=((((v0.c0) NOT BETWEEN (v0.c0) AND (''))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0) NOT NULL)))>((CAST(v0.c0 AS INTEGER))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0) NOTNULL), ((v0.c0)*(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND (((0.5027338288959906 IN ()), (v0.c0 IN ()), ((v0.c0)<=(v0.c0))))) ASC  NULLS FIRST, (((CAST(v0.c0 AS BLOB)))>=((((v0.c0) NOT BETWEEN (v0.c0) AND (''))))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((((v0.c0) NOT NULL)))>((CAST(v0.c0 AS INTEGER))))) ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0) NOTNULL), ((v0.c0)*(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND (((0.5027338288959906 IN ()), (v0.c0 IN ()), ((v0.c0)<=(v0.c0))))) ASC  NULLS FIRST, (((CAST(v0.c0 AS BLOB)))>=((((v0.c0) NOT BETWEEN (v0.c0) AND (''))))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON PRINTF((~ (rt1.c0))) WHERE ((('') BETWEEN (((rt1.c0) NOT NULL)) AND (((rt0.c1) IS FALSE)))) ORDER BY ((((((((((rt1.c2)AND(rt0.c0)))AND('响')))OR(rt1.c1)))AND(x'e7725e0c'))) NOT BETWEEN ((NOT (rt0.c2))) AND (rt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('') BETWEEN (((rt1.c0) NOT NULL)) AND (((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON PRINTF((~ (rt1.c0))) ORDER BY ((((((((((rt1.c2)AND(rt0.c0)))AND('响')))OR(rt1.c1)))AND(x'e7725e0c'))) NOT BETWEEN ((NOT (rt0.c2))) AND (rt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON PRINTF((~ (rt1.c0))) WHERE ((('') BETWEEN (((rt1.c0) NOT NULL)) AND (((rt0.c1) IS FALSE)))) ORDER BY ((((((((((rt1.c2)AND(rt0.c0)))AND('响')))OR(rt1.c1)))AND(x'e7725e0c'))) NOT BETWEEN ((NOT (rt0.c2))) AND (rt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('') BETWEEN (((rt1.c0) NOT NULL)) AND (((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON PRINTF((~ (rt1.c0))) ORDER BY ((((((((((rt1.c2)AND(rt0.c0)))AND('响')))OR(rt1.c1)))AND(x'e7725e0c'))) NOT BETWEEN ((NOT (rt0.c2))) AND (rt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON PRINTF((~ (rt1.c0))) WHERE ((('') BETWEEN (((rt1.c0) NOT NULL)) AND (((rt0.c1) IS FALSE)))) ORDER BY ((((((((((rt1.c2)AND(rt0.c0)))AND('响')))OR(rt1.c1)))AND(x'e7725e0c'))) NOT BETWEEN ((NOT (rt0.c2))) AND (rt0.c0)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c0)<(NULL)) AS INTEGER) LEFT OUTER JOIN rt1 ON ((('1515965726')) NOT BETWEEN ((ABS(rt1.c2))) AND (((rt1.c3 IN ())))) WHERE (CASE rt1.c2  WHEN x'' THEN ((rt0.c2)>(v0.c0)) END) ORDER BY (((((((rt1.c2)OR(rt0.c2)))AND(rt1.c2)), '0P섣t\rdfJ', IFNULL(rt1.c0, rt1.c3)))<((rt0.c2, (~ (rt1.c1)), rt1.c3)));
SELECT SUM(count) FROM (SELECT ((CASE rt1.c2  WHEN x'' THEN ((rt0.c2)>(v0.c0)) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c0)<(NULL)) AS INTEGER) LEFT OUTER JOIN rt1 ON ((('1515965726')) NOT BETWEEN ((ABS(rt1.c2))) AND (((rt1.c3 IN ())))) ORDER BY (((((((rt1.c2)OR(rt0.c2)))AND(rt1.c2)), '0P섣t\rdfJ', IFNULL(rt1.c0, rt1.c3)))<((rt0.c2, (~ (rt1.c1)), rt1.c3))));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c0)<(NULL)) AS INTEGER) LEFT OUTER JOIN rt1 ON ((('1515965726')) NOT BETWEEN ((ABS(rt1.c2))) AND (((rt1.c3 IN ())))) WHERE (CASE rt1.c2  WHEN x'' THEN ((rt0.c2)>(v0.c0)) END) ORDER BY (((((((rt1.c2)OR(rt0.c2)))AND(rt1.c2)), '0P섣t\rdfJ', IFNULL(rt1.c0, rt1.c3)))<((rt0.c2, (~ (rt1.c1)), rt1.c3)));
SELECT SUM(count) FROM (SELECT ((CASE rt1.c2  WHEN x'' THEN ((rt0.c2)>(v0.c0)) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c0)<(NULL)) AS INTEGER) LEFT OUTER JOIN rt1 ON ((('1515965726')) NOT BETWEEN ((ABS(rt1.c2))) AND (((rt1.c3 IN ())))) ORDER BY (((((((rt1.c2)OR(rt0.c2)))AND(rt1.c2)), '0P섣t\rdfJ', IFNULL(rt1.c0, rt1.c3)))<((rt0.c2, (~ (rt1.c1)), rt1.c3))));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c0)<(NULL)) AS INTEGER) LEFT OUTER JOIN rt1 ON ((('1515965726')) NOT BETWEEN ((ABS(rt1.c2))) AND (((rt1.c3 IN ())))) WHERE (CASE rt1.c2  WHEN x'' THEN ((rt0.c2)>(v0.c0)) END) ORDER BY (((((((rt1.c2)OR(rt0.c2)))AND(rt1.c2)), '0P섣t\rdfJ', IFNULL(rt1.c0, rt1.c3)))<((rt0.c2, (~ (rt1.c1)), rt1.c3)));
SELECT * FROM rt1, v0 WHERE (CASE WHEN COALESCE(DISTINCT rt1.c3, v0.c0, rt1.c0, v0.c0) THEN (x'2bd4' IN ()) ELSE ((rt1.c3)&(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN COALESCE(DISTINCT rt1.c3, v0.c0, rt1.c0, v0.c0) THEN (x'2bd4' IN ()) ELSE ((rt1.c3)&(rt1.c1)) END) IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 WHERE (CASE WHEN COALESCE(DISTINCT rt1.c3, v0.c0, rt1.c0, v0.c0) THEN (x'2bd4' IN ()) ELSE ((rt1.c3)&(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN COALESCE(DISTINCT rt1.c3, v0.c0, rt1.c0, v0.c0) THEN (x'2bd4' IN ()) ELSE ((rt1.c3)&(rt1.c1)) END) IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 WHERE (CASE WHEN COALESCE(DISTINCT rt1.c3, v0.c0, rt1.c0, v0.c0) THEN (x'2bd4' IN ()) ELSE ((rt1.c3)&(rt1.c1)) END);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON CASE CAST(rt1.c0 AS REAL)  WHEN v0.c0 COLLATE NOCASE THEN (((rt1.c0))<=((rt0.c0))) ELSE CASE WHEN rt1.c3 THEN rt0.c2 ELSE rt1.c2 END END FULL OUTER JOIN v0 ON ((v0.c0 COLLATE RTRIM)IS(v0.c0 COLLATE BINARY)) WHERE (((((((rt1.c1)AND(rt0.c2)))AND(rt1.c3)))>(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)AND(rt0.c2)))AND(rt1.c3)))>(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CASE CAST(rt1.c0 AS REAL)  WHEN v0.c0 COLLATE NOCASE THEN (((rt1.c0))<=((rt0.c0))) ELSE CASE WHEN rt1.c3 THEN rt0.c2 ELSE rt1.c2 END END FULL OUTER JOIN v0 ON ((v0.c0 COLLATE RTRIM)IS(v0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON CASE CAST(rt1.c0 AS REAL)  WHEN v0.c0 COLLATE NOCASE THEN (((rt1.c0))<=((rt0.c0))) ELSE CASE WHEN rt1.c3 THEN rt0.c2 ELSE rt1.c2 END END FULL OUTER JOIN v0 ON ((v0.c0 COLLATE RTRIM)IS(v0.c0 COLLATE BINARY)) WHERE (((((((rt1.c1)AND(rt0.c2)))AND(rt1.c3)))>(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)AND(rt0.c2)))AND(rt1.c3)))>(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CASE CAST(rt1.c0 AS REAL)  WHEN v0.c0 COLLATE NOCASE THEN (((rt1.c0))<=((rt0.c0))) ELSE CASE WHEN rt1.c3 THEN rt0.c2 ELSE rt1.c2 END END FULL OUTER JOIN v0 ON ((v0.c0 COLLATE RTRIM)IS(v0.c0 COLLATE BINARY)));
SELECT ALL * FROM v0 WHERE (((((v0.c0) IS TRUE)) ISNULL)) ORDER BY ((((((NULL)AND(v0.c0)))AND(v0.c0))) ISNULL) ASC  NULLS FIRST, ((x'35da') NOTNULL)  NULLS FIRST, ((((v0.c0 IN ())))>((((((v0.c0)OR(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE)) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY ((((((NULL)AND(v0.c0)))AND(v0.c0))) ISNULL) ASC  NULLS FIRST, ((x'35da') NOTNULL)  NULLS FIRST, ((((v0.c0 IN ())))>((((((v0.c0)OR(v0.c0)))AND(v0.c0))))));
SELECT ALL * FROM v0 WHERE (((((v0.c0) IS TRUE)) ISNULL)) ORDER BY ((((((NULL)AND(v0.c0)))AND(v0.c0))) ISNULL) ASC  NULLS FIRST, ((x'35da') NOTNULL)  NULLS FIRST, ((((v0.c0 IN ())))>((((((v0.c0)OR(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE)) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY ((((((NULL)AND(v0.c0)))AND(v0.c0))) ISNULL) ASC  NULLS FIRST, ((x'35da') NOTNULL)  NULLS FIRST, ((((v0.c0 IN ())))>((((((v0.c0)OR(v0.c0)))AND(v0.c0))))));
SELECT ALL * FROM v0 WHERE (((((v0.c0) IS TRUE)) ISNULL)) ORDER BY ((((((NULL)AND(v0.c0)))AND(v0.c0))) ISNULL) ASC  NULLS FIRST, ((x'35da') NOTNULL)  NULLS FIRST, ((((v0.c0 IN ())))>((((((v0.c0)OR(v0.c0)))AND(v0.c0)))));
SELECT * FROM v0, rt1 WHERE (((((((((((x'45e3')<(rt1.c3)))OR(rt1.c0 COLLATE NOCASE)))OR(CHAR(v0.c0, rt1.c2, rt1.c2))))AND(TRIM(v0.c0, rt1.c2))))AND(CAST(rt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((((x'45e3')<(rt1.c3)))OR(rt1.c0 COLLATE NOCASE)))OR(CHAR(v0.c0, rt1.c2, rt1.c2))))AND(TRIM(v0.c0, rt1.c2))))AND(CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (((((((((((x'45e3')<(rt1.c3)))OR(rt1.c0 COLLATE NOCASE)))OR(CHAR(v0.c0, rt1.c2, rt1.c2))))AND(TRIM(v0.c0, rt1.c2))))AND(CAST(rt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((((x'45e3')<(rt1.c3)))OR(rt1.c0 COLLATE NOCASE)))OR(CHAR(v0.c0, rt1.c2, rt1.c2))))AND(TRIM(v0.c0, rt1.c2))))AND(CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (((((((((((x'45e3')<(rt1.c3)))OR(rt1.c0 COLLATE NOCASE)))OR(CHAR(v0.c0, rt1.c2, rt1.c2))))AND(TRIM(v0.c0, rt1.c2))))AND(CAST(rt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM v0 WHERE (NULL COLLATE RTRIM) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (NULL COLLATE RTRIM) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (NULL COLLATE RTRIM) ORDER BY v0.c0  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (NULL);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON CASE ((v0.c0)%('W㘛z('))  WHEN CAST(rt1.c3 AS TEXT) THEN -1301870887 END INNER JOIN rt0 ON ((rt1.c1)*(rt0.c0)) COLLATE BINARY WHERE (((rt0.c1 COLLATE RTRIM)AND(((rt0.c2)%(rt1.c2))))) ORDER BY ((((rt0.c0)/(rt1.c1)))||(CASE rt1.c1  WHEN 0.2898360412910418 THEN rt0.c2 END)) ASC  NULLS FIRST, (((rt0.c1)) BETWEEN (((v0.c0 IN ()))) AND ((((x'') BETWEEN (rt1.c1) AND (rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)AND(((rt0.c2)%(rt1.c2))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON CASE ((v0.c0)%('W㘛z('))  WHEN CAST(rt1.c3 AS TEXT) THEN -1301870887 END INNER JOIN rt0 ON ((rt1.c1)*(rt0.c0)) COLLATE BINARY ORDER BY ((((rt0.c0)/(rt1.c1)))||(CASE rt1.c1  WHEN 0.2898360412910418 THEN rt0.c2 END)) ASC  NULLS FIRST, (((rt0.c1)) BETWEEN (((v0.c0 IN ()))) AND ((((x'') BETWEEN (rt1.c1) AND (rt0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON CASE ((v0.c0)%('W㘛z('))  WHEN CAST(rt1.c3 AS TEXT) THEN -1301870887 END INNER JOIN rt0 ON ((rt1.c1)*(rt0.c0)) COLLATE BINARY WHERE (((rt0.c1 COLLATE RTRIM)AND(((rt0.c2)%(rt1.c2))))) ORDER BY ((((rt0.c0)/(rt1.c1)))||(CASE rt1.c1  WHEN 0.2898360412910418 THEN rt0.c2 END)) ASC  NULLS FIRST, (((rt0.c1)) BETWEEN (((v0.c0 IN ()))) AND ((((x'') BETWEEN (rt1.c1) AND (rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)AND(((rt0.c2)%(rt1.c2))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON CASE ((v0.c0)%('W㘛z('))  WHEN CAST(rt1.c3 AS TEXT) THEN -1301870887 END INNER JOIN rt0 ON ((rt1.c1)*(rt0.c0)) COLLATE BINARY ORDER BY ((((rt0.c0)/(rt1.c1)))||(CASE rt1.c1  WHEN 0.2898360412910418 THEN rt0.c2 END)) ASC  NULLS FIRST, (((rt0.c1)) BETWEEN (((v0.c0 IN ()))) AND ((((x'') BETWEEN (rt1.c1) AND (rt0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON CASE ((v0.c0)%('W㘛z('))  WHEN CAST(rt1.c3 AS TEXT) THEN -1301870887 END INNER JOIN rt0 ON ((rt1.c1)*(rt0.c0)) COLLATE BINARY WHERE (((rt0.c1 COLLATE RTRIM)AND(((rt0.c2)%(rt1.c2))))) ORDER BY ((((rt0.c0)/(rt1.c1)))||(CASE rt1.c1  WHEN 0.2898360412910418 THEN rt0.c2 END)) ASC  NULLS FIRST, (((rt0.c1)) BETWEEN (((v0.c0 IN ()))) AND ((((x'') BETWEEN (rt1.c1) AND (rt0.c1))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((((rt1.c2)<=(rt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)<=(rt1.c1))) NOT NULL)) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((((rt1.c2)<=(rt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)<=(rt1.c1))) NOT NULL)) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((((rt1.c2)<=(rt1.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c1 COLLATE BINARY, 0.06968482498702033)) ORDER BY ((CAST(rt0.c1 AS TEXT)) BETWEEN (TRIM(DISTINCT v0.c0)) AND (rt0.c2));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT rt0.c1 COLLATE BINARY, 0.06968482498702033)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CAST(rt0.c1 AS TEXT)) BETWEEN (TRIM(DISTINCT v0.c0)) AND (rt0.c2)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c1 COLLATE BINARY, 0.06968482498702033)) ORDER BY ((CAST(rt0.c1 AS TEXT)) BETWEEN (TRIM(DISTINCT v0.c0)) AND (rt0.c2));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT rt0.c1 COLLATE BINARY, 0.06968482498702033)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CAST(rt0.c1 AS TEXT)) BETWEEN (TRIM(DISTINCT v0.c0)) AND (rt0.c2)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c1 COLLATE BINARY, 0.06968482498702033)) ORDER BY ((CAST(rt0.c1 AS TEXT)) BETWEEN (TRIM(DISTINCT v0.c0)) AND (rt0.c2));
SELECT ALL * FROM rt1, rt0, v0 WHERE (((rt0.c0 IN ()) IN ())) ORDER BY (((((rt1.c3)) BETWEEN ((rt0.c0)) AND ((rt1.c1))))<<((rt0.c0 IN ()))), ((CASE v0.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c2 END)LIKE(CAST(rt1.c3 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY (((((rt1.c3)) BETWEEN ((rt0.c0)) AND ((rt1.c1))))<<((rt0.c0 IN ()))), ((CASE v0.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c2 END)LIKE(CAST(rt1.c3 AS TEXT)))  NULLS LAST);
SELECT ALL * FROM rt1, rt0, v0 WHERE (((rt0.c0 IN ()) IN ())) ORDER BY (((((rt1.c3)) BETWEEN ((rt0.c0)) AND ((rt1.c1))))<<((rt0.c0 IN ()))), ((CASE v0.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c2 END)LIKE(CAST(rt1.c3 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY (((((rt1.c3)) BETWEEN ((rt0.c0)) AND ((rt1.c1))))<<((rt0.c0 IN ()))), ((CASE v0.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c2 END)LIKE(CAST(rt1.c3 AS TEXT)))  NULLS LAST);
SELECT ALL * FROM rt1, rt0, v0 WHERE (((rt0.c0 IN ()) IN ())) ORDER BY (((((rt1.c3)) BETWEEN ((rt0.c0)) AND ((rt1.c1))))<<((rt0.c0 IN ()))), ((CASE v0.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c2 END)LIKE(CAST(rt1.c3 AS TEXT)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c2))) BETWEEN ((((rt0.c2, x'', rt0.c2))!=((rt0.c2, rt0.c1, rt0.c2)))) AND (((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2))) BETWEEN ((((rt0.c2, x'', rt0.c2))<>((rt0.c2, rt0.c1, rt0.c2)))) AND (((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c2))) BETWEEN ((((rt0.c2, x'', rt0.c2))!=((rt0.c2, rt0.c1, rt0.c2)))) AND (((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2))) BETWEEN ((((rt0.c2, x'', rt0.c2))<>((rt0.c2, rt0.c1, rt0.c2)))) AND (((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c2))) BETWEEN ((((rt0.c2, x'', rt0.c2))!=((rt0.c2, rt0.c1, rt0.c2)))) AND (((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))));
SELECT COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) NOT NULL)) NOT NULL) WHERE (((((LIKE(v0.c0, 1.061988139E9, '-'))OR(((((rt1.c0)AND(rt0.c1)))OR(rt0.c0)))))OR((~ (rt0.c2))))) ORDER BY ((CAST(rt1.c2 AS REAL))<<((v0.c0 IN ()))), CASE WHEN (((rt1.c2, rt0.c1, ''))==((rt1.c0, rt0.c0, v0.c0))) THEN (rt0.c1 IN ()) END ASC  NULLS FIRST, ((rt1.c0)/(rt1.c3)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((LIKE(v0.c0, 1.061988139E9, '-'))OR(((((rt1.c0)AND(rt0.c1)))OR(rt0.c0)))))OR((~ (rt0.c2))))) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) NOT NULL)) NOT NULL) ORDER BY ((CAST(rt1.c2 AS REAL))<<((v0.c0 IN ()))), CASE WHEN (((rt1.c2, rt0.c1, ''))=((rt1.c0, rt0.c0, v0.c0))) THEN (rt0.c1 IN ()) END ASC  NULLS FIRST, ((rt1.c0)/(rt1.c3)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) NOT NULL)) NOT NULL) WHERE (((((LIKE(v0.c0, 1.061988139E9, '-'))OR(((((rt1.c0)AND(rt0.c1)))OR(rt0.c0)))))OR((~ (rt0.c2))))) ORDER BY ((CAST(rt1.c2 AS REAL))<<((v0.c0 IN ()))), CASE WHEN (((rt1.c2, rt0.c1, ''))==((rt1.c0, rt0.c0, v0.c0))) THEN (rt0.c1 IN ()) END ASC  NULLS FIRST, ((rt1.c0)/(rt1.c3)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((LIKE(v0.c0, 1.061988139E9, '-'))OR(((((rt1.c0)AND(rt0.c1)))OR(rt0.c0)))))OR((~ (rt0.c2))))) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) NOT NULL)) NOT NULL) ORDER BY ((CAST(rt1.c2 AS REAL))<<((v0.c0 IN ()))), CASE WHEN (((rt1.c2, rt0.c1, ''))=((rt1.c0, rt0.c0, v0.c0))) THEN (rt0.c1 IN ()) END ASC  NULLS FIRST, ((rt1.c0)/(rt1.c3)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) NOT NULL)) NOT NULL) WHERE (((((LIKE(v0.c0, 1.061988139E9, '-'))OR(((((rt1.c0)AND(rt0.c1)))OR(rt0.c0)))))OR((~ (rt0.c2))))) ORDER BY ((CAST(rt1.c2 AS REAL))<<((v0.c0 IN ()))), CASE WHEN (((rt1.c2, rt0.c1, ''))==((rt1.c0, rt0.c0, v0.c0))) THEN (rt0.c1 IN ()) END ASC  NULLS FIRST, ((rt1.c0)/(rt1.c3)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE (((CAST('0.22019766295424914' AS NUMERIC))==(((rt0.c0)AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST('0.22019766295424914' AS NUMERIC))=(((rt0.c0)AND(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((CAST('0.22019766295424914' AS NUMERIC))==(((rt0.c0)AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST('0.22019766295424914' AS NUMERIC))=(((rt0.c0)AND(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((CAST('0.22019766295424914' AS NUMERIC))==(((rt0.c0)AND(rt0.c1)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON ((v0.c0 COLLATE RTRIM) BETWEEN (rt1.c3) AND (v0.c0 COLLATE RTRIM)) WHERE ((('-1259600362') NOT NULL)) ORDER BY ((((rt1.c0)OR('p2ZS^n')))*(rt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((('-1259600362') NOT NULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON ((v0.c0 COLLATE RTRIM) BETWEEN (rt1.c3) AND (v0.c0 COLLATE RTRIM)) ORDER BY ((((rt1.c0)OR('p2ZS^n')))*(rt1.c0 COLLATE NOCASE)));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON ((v0.c0 COLLATE RTRIM) BETWEEN (rt1.c3) AND (v0.c0 COLLATE RTRIM)) WHERE ((('-1259600362') NOT NULL)) ORDER BY ((((rt1.c0)OR('p2ZS^n')))*(rt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((('-1259600362') NOT NULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON ((v0.c0 COLLATE RTRIM) BETWEEN (rt1.c3) AND (v0.c0 COLLATE RTRIM)) ORDER BY ((((rt1.c0)OR('p2ZS^n')))*(rt1.c0 COLLATE NOCASE)));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON ((v0.c0 COLLATE RTRIM) BETWEEN (rt1.c3) AND (v0.c0 COLLATE RTRIM)) WHERE ((('-1259600362') NOT NULL)) ORDER BY ((((rt1.c0)OR('p2ZS^n')))*(rt1.c0 COLLATE NOCASE));
SELECT COUNT(*) FROM rt0 NOT INDEXED FULL OUTER JOIN v0 ON (+ (CAST(rt0.c0 AS BLOB))) WHERE ((((('')OR((+ (rt0.c1)))))AND(0Xfffffffff10c6ddf))) ORDER BY 'ꉲq{F*D_bz' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('')OR((+ (rt0.c1)))))AND(0xfffffffff10c6ddf))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (+ (CAST(rt0.c0 AS BLOB))) ORDER BY 'ꉲq{F*D_bz' ASC);
SELECT COUNT(*) FROM rt0 NOT INDEXED FULL OUTER JOIN v0 ON (+ (CAST(rt0.c0 AS BLOB))) WHERE ((((('')OR((+ (rt0.c1)))))AND(0Xfffffffff10c6ddf))) ORDER BY 'ꉲq{F*D_bz' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('')OR((+ (rt0.c1)))))AND(0xfffffffff10c6ddf))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (+ (CAST(rt0.c0 AS BLOB))) ORDER BY 'ꉲq{F*D_bz' ASC);
SELECT COUNT(*) FROM rt0 NOT INDEXED FULL OUTER JOIN v0 ON (+ (CAST(rt0.c0 AS BLOB))) WHERE ((((('')OR((+ (rt0.c1)))))AND(0Xfffffffff10c6ddf))) ORDER BY 'ꉲq{F*D_bz' ASC;
SELECT * FROM v0, rt0, rt1 WHERE (((((rt1.c2)IS(rt1.c1)))OR('')));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)IS(rt1.c1)))OR(''))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT * FROM v0, rt0, rt1 WHERE (((((rt1.c2)IS(rt1.c1)))OR('')));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)IS(rt1.c1)))OR(''))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT * FROM v0, rt0, rt1 WHERE (((((rt1.c2)IS(rt1.c1)))OR('')));
SELECT * FROM rt0, v0, rt1 WHERE (((((((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3)))OR(((((rt1.c1)OR(rt0.c1)))OR(v0.c0)))))AND((NULL IN ())))) ORDER BY UNLIKELY(DISTINCT (((rt0.c2, v0.c0, rt1.c2)) NOT BETWEEN ((rt0.c2, rt1.c2, rt0.c1)) AND ((rt1.c3, rt1.c3, rt1.c3)))) DESC  NULLS FIRST, CASE WHEN ((v0.c0)=(rt1.c0)) THEN ((rt1.c3)>=('n/')) END, ((((v0.c0) NOTNULL)) NOT BETWEEN (((((rt1.c1)OR(v0.c0)))AND(NULL))) AND (((x'') NOT BETWEEN (-1852657486) AND (rt1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3)))OR(((((rt1.c1)OR(rt0.c1)))OR(v0.c0)))))AND((NULL IN ())))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY UNLIKELY(DISTINCT (((rt0.c2, v0.c0, rt1.c2)) NOT BETWEEN ((rt0.c2, rt1.c2, rt0.c1)) AND ((rt1.c3, rt1.c3, rt1.c3)))) DESC  NULLS FIRST, CASE WHEN ((v0.c0)=(rt1.c0)) THEN ((rt1.c3)>=('n/')) END, ((((v0.c0) NOTNULL)) NOT BETWEEN (((((rt1.c1)OR(v0.c0)))AND(NULL))) AND (((x'') NOT BETWEEN (-1852657486) AND (rt1.c3)))) DESC);
SELECT * FROM rt0, v0, rt1 WHERE (((((((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3)))OR(((((rt1.c1)OR(rt0.c1)))OR(v0.c0)))))AND((NULL IN ())))) ORDER BY UNLIKELY(DISTINCT (((rt0.c2, v0.c0, rt1.c2)) NOT BETWEEN ((rt0.c2, rt1.c2, rt0.c1)) AND ((rt1.c3, rt1.c3, rt1.c3)))) DESC  NULLS FIRST, CASE WHEN ((v0.c0)=(rt1.c0)) THEN ((rt1.c3)>=('n/')) END, ((((v0.c0) NOTNULL)) NOT BETWEEN (((((rt1.c1)OR(v0.c0)))AND(NULL))) AND (((x'') NOT BETWEEN (-1852657486) AND (rt1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3)))OR(((((rt1.c1)OR(rt0.c1)))OR(v0.c0)))))AND((NULL IN ())))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY UNLIKELY(DISTINCT (((rt0.c2, v0.c0, rt1.c2)) NOT BETWEEN ((rt0.c2, rt1.c2, rt0.c1)) AND ((rt1.c3, rt1.c3, rt1.c3)))) DESC  NULLS FIRST, CASE WHEN ((v0.c0)=(rt1.c0)) THEN ((rt1.c3)>=('n/')) END, ((((v0.c0) NOTNULL)) NOT BETWEEN (((((rt1.c1)OR(v0.c0)))AND(NULL))) AND (((x'') NOT BETWEEN (-1852657486) AND (rt1.c3)))) DESC);
SELECT * FROM rt0, v0, rt1 WHERE (((((((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3)))OR(((((rt1.c1)OR(rt0.c1)))OR(v0.c0)))))AND((NULL IN ())))) ORDER BY UNLIKELY(DISTINCT (((rt0.c2, v0.c0, rt1.c2)) NOT BETWEEN ((rt0.c2, rt1.c2, rt0.c1)) AND ((rt1.c3, rt1.c3, rt1.c3)))) DESC  NULLS FIRST, CASE WHEN ((v0.c0)=(rt1.c0)) THEN ((rt1.c3)>=('n/')) END, ((((v0.c0) NOTNULL)) NOT BETWEEN (((((rt1.c1)OR(v0.c0)))AND(NULL))) AND (((x'') NOT BETWEEN (-1852657486) AND (rt1.c3)))) DESC;
SELECT ALL * FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((((rt1.c1, rt1.c1, rt1.c3)) NOT BETWEEN ((rt1.c0, rt1.c0, rt1.c1)) AND ((rt1.c1, rt1.c2, rt1.c1))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c1, rt1.c1, rt1.c3)) NOT BETWEEN ((rt1.c0, rt1.c0, rt1.c1)) AND ((rt1.c1, rt1.c2, rt1.c1))) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((((rt1.c1, rt1.c1, rt1.c3)) NOT BETWEEN ((rt1.c0, rt1.c0, rt1.c1)) AND ((rt1.c1, rt1.c2, rt1.c1))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c1, rt1.c1, rt1.c3)) NOT BETWEEN ((rt1.c0, rt1.c0, rt1.c1)) AND ((rt1.c1, rt1.c2, rt1.c1))) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((((rt1.c1, rt1.c1, rt1.c3)) NOT BETWEEN ((rt1.c0, rt1.c0, rt1.c1)) AND ((rt1.c1, rt1.c2, rt1.c1))) AS TEXT));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((((rt1.c3)AND(rt1.c2)))AND(rt1.c0)) AS REAL)) ORDER BY ((((x'')AND(rt1.c3 COLLATE RTRIM)))OR(CAST(rt1.c0 AS NUMERIC))) DESC  NULLS LAST, '1905205296' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c3)AND(rt1.c2)))AND(rt1.c0)) AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY ((((x'')AND(rt1.c3 COLLATE RTRIM)))OR(CAST(rt1.c0 AS NUMERIC))) DESC  NULLS LAST, '1905205296' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((((rt1.c3)AND(rt1.c2)))AND(rt1.c0)) AS REAL)) ORDER BY ((((x'')AND(rt1.c3 COLLATE RTRIM)))OR(CAST(rt1.c0 AS NUMERIC))) DESC  NULLS LAST, '1905205296' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c3)AND(rt1.c2)))AND(rt1.c0)) AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY ((((x'')AND(rt1.c3 COLLATE RTRIM)))OR(CAST(rt1.c0 AS NUMERIC))) DESC  NULLS LAST, '1905205296' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((((rt1.c3)AND(rt1.c2)))AND(rt1.c0)) AS REAL)) ORDER BY ((((x'')AND(rt1.c3 COLLATE RTRIM)))OR(CAST(rt1.c0 AS NUMERIC))) DESC  NULLS LAST, '1905205296' ASC  NULLS FIRST;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((((CAST(rt1.c1 AS REAL))OR(((rt0.c1)>(NULL)))))AND(((2.075991836E9)>(rt1.c3)))))OR(((x'')AND(rt1.c3)))))AND(rt1.c0 COLLATE BINARY)) LEFT OUTER JOIN v0 ON ((rt1.c2)LIKE(v0.c0)) COLLATE RTRIM WHERE (json_extract((- (rt0.c2)), ((((((((rt0.c2)AND(rt1.c0)))AND(rt0.c1)))OR(rt1.c3)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((json_extract((- (rt0.c2)), ((((((((rt0.c2)AND(rt1.c0)))AND(rt0.c1)))OR(rt1.c3)))OR(v0.c0)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((((CAST(rt1.c1 AS REAL))OR(((rt0.c1)>(NULL)))))AND(((2.075991836E9)>(rt1.c3)))))OR(((x'')AND(rt1.c3)))))AND(rt1.c0 COLLATE BINARY)) LEFT OUTER JOIN v0 ON ((rt1.c2)LIKE(v0.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((((CAST(rt1.c1 AS REAL))OR(((rt0.c1)>(NULL)))))AND(((2.075991836E9)>(rt1.c3)))))OR(((x'')AND(rt1.c3)))))AND(rt1.c0 COLLATE BINARY)) LEFT OUTER JOIN v0 ON ((rt1.c2)LIKE(v0.c0)) COLLATE RTRIM WHERE (json_extract((- (rt0.c2)), ((((((((rt0.c2)AND(rt1.c0)))AND(rt0.c1)))OR(rt1.c3)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((json_extract((- (rt0.c2)), ((((((((rt0.c2)AND(rt1.c0)))AND(rt0.c1)))OR(rt1.c3)))OR(v0.c0)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((((CAST(rt1.c1 AS REAL))OR(((rt0.c1)>(NULL)))))AND(((2.075991836E9)>(rt1.c3)))))OR(((x'')AND(rt1.c3)))))AND(rt1.c0 COLLATE BINARY)) LEFT OUTER JOIN v0 ON ((rt1.c2)LIKE(v0.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((((CAST(rt1.c1 AS REAL))OR(((rt0.c1)>(NULL)))))AND(((2.075991836E9)>(rt1.c3)))))OR(((x'')AND(rt1.c3)))))AND(rt1.c0 COLLATE BINARY)) LEFT OUTER JOIN v0 ON ((rt1.c2)LIKE(v0.c0)) COLLATE RTRIM WHERE (json_extract((- (rt0.c2)), ((((((((rt0.c2)AND(rt1.c0)))AND(rt0.c1)))OR(rt1.c3)))OR(v0.c0))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((- (((rt0.c2) IS TRUE)))) ORDER BY (((rt0.c0, rt1.c1, rt1.c1)) BETWEEN ((((rt0.c0) NOT NULL), CAST(rt1.c2 AS NUMERIC), ((rt1.c2)IS NOT(rt0.c1)))) AND (((NULL IN (rt0.c1)), ((rt0.c0) NOT NULL), (((rt1.c1, rt1.c3, ''))<=((rt1.c1, rt1.c0, rt0.c2)))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt0.c0, rt1.c1, rt1.c1)) BETWEEN ((((rt0.c0) NOT NULL), CAST(rt1.c2 AS NUMERIC), ((rt1.c2)IS NOT(rt0.c1)))) AND (((NULL IN (rt0.c1)), ((rt0.c0) NOT NULL), (((rt1.c1, rt1.c3, ''))<=((rt1.c1, rt1.c0, rt0.c2)))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((- (((rt0.c2) IS TRUE)))) ORDER BY (((rt0.c0, rt1.c1, rt1.c1)) BETWEEN ((((rt0.c0) NOT NULL), CAST(rt1.c2 AS NUMERIC), ((rt1.c2)IS NOT(rt0.c1)))) AND (((NULL IN (rt0.c1)), ((rt0.c0) NOT NULL), (((rt1.c1, rt1.c3, ''))<=((rt1.c1, rt1.c0, rt0.c2)))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt0.c0, rt1.c1, rt1.c1)) BETWEEN ((((rt0.c0) NOT NULL), CAST(rt1.c2 AS NUMERIC), ((rt1.c2)IS NOT(rt0.c1)))) AND (((NULL IN (rt0.c1)), ((rt0.c0) NOT NULL), (((rt1.c1, rt1.c3, ''))<=((rt1.c1, rt1.c0, rt0.c2)))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((- (((rt0.c2) IS TRUE)))) ORDER BY (((rt0.c0, rt1.c1, rt1.c1)) BETWEEN ((((rt0.c0) NOT NULL), CAST(rt1.c2 AS NUMERIC), ((rt1.c2)IS NOT(rt0.c1)))) AND (((NULL IN (rt0.c1)), ((rt0.c0) NOT NULL), (((rt1.c1, rt1.c3, ''))<=((rt1.c1, rt1.c0, rt0.c2)))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE ((CASE WHEN rt0.c1 THEN 0.807790382538592 WHEN x'' THEN v0.c0 WHEN rt1.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt1.c3 THEN rt1.c1 END IN ())) ORDER BY (((x''))>=((((rt1.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c1 THEN 0.807790382538592 WHEN x'' THEN v0.c0 WHEN rt1.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt1.c3 THEN rt1.c1 END IN ())) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY (((x''))>=((((rt1.c3) NOT NULL)))));
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE ((CASE WHEN rt0.c1 THEN 0.807790382538592 WHEN x'' THEN v0.c0 WHEN rt1.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt1.c3 THEN rt1.c1 END IN ())) ORDER BY (((x''))>=((((rt1.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c1 THEN 0.807790382538592 WHEN x'' THEN v0.c0 WHEN rt1.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt1.c3 THEN rt1.c1 END IN ())) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY (((x''))>=((((rt1.c3) NOT NULL)))));
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE ((CASE WHEN rt0.c1 THEN 0.807790382538592 WHEN x'' THEN v0.c0 WHEN rt1.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt1.c3 THEN rt1.c1 END IN ())) ORDER BY (((x''))>=((((rt1.c3) NOT NULL))));
SELECT COUNT(*) FROM rt1 WHERE (0.9902592191016591) ORDER BY rt1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.9902592191016591) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (0.9902592191016591) ORDER BY rt1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.9902592191016591) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (0.9902592191016591) ORDER BY rt1.c2  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((TIME(rt0.c0, rt0.c0, rt0.c0))>(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((TIME(rt0.c0, rt0.c0, rt0.c0))>(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((TIME(rt0.c0, rt0.c0, rt0.c0))>(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((TIME(rt0.c0, rt0.c0, rt0.c0))>(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((TIME(rt0.c0, rt0.c0, rt0.c0))>(CAST(rt0.c1 AS REAL))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((- (CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((- (CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((- (CAST(rt0.c2 AS INTEGER))));
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c2 WHEN '' THEN rt0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c2 WHEN '' THEN rt0.c2 END IN ())) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c2 WHEN '' THEN rt0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c2 WHEN '' THEN rt0.c2 END IN ())) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c2 WHEN '' THEN rt0.c2 END IN ()));
SELECT * FROM rt1 CROSS JOIN v0 ON CAST(IFNULL(DISTINCT rt1.c3, x'') AS TEXT) WHERE (((((((((((((((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)))AND(v0.c0 COLLATE BINARY)))AND(rt1.c3)))AND(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(rt1.c3)))OR(CASE rt1.c1  WHEN v0.c0 THEN rt1.c2 END)))AND(rt1.c1))) ORDER BY (((CAST('' AS BLOB)))!=((CASE WHEN NULL THEN rt1.c3 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)))AND(v0.c0 COLLATE BINARY)))AND(rt1.c3)))AND(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(rt1.c3)))OR(CASE rt1.c1  WHEN v0.c0 THEN rt1.c2 END)))AND(rt1.c1))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON CAST(IFNULL(DISTINCT rt1.c3, x'') AS TEXT) ORDER BY (((CAST('' AS BLOB)))<>((CASE WHEN NULL THEN rt1.c3 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 END))) DESC);
SELECT * FROM rt1 CROSS JOIN v0 ON CAST(IFNULL(DISTINCT rt1.c3, x'') AS TEXT) WHERE (((((((((((((((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)))AND(v0.c0 COLLATE BINARY)))AND(rt1.c3)))AND(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(rt1.c3)))OR(CASE rt1.c1  WHEN v0.c0 THEN rt1.c2 END)))AND(rt1.c1))) ORDER BY (((CAST('' AS BLOB)))!=((CASE WHEN NULL THEN rt1.c3 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)))AND(v0.c0 COLLATE BINARY)))AND(rt1.c3)))AND(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(rt1.c3)))OR(CASE rt1.c1  WHEN v0.c0 THEN rt1.c2 END)))AND(rt1.c1))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON CAST(IFNULL(DISTINCT rt1.c3, x'') AS TEXT) ORDER BY (((CAST('' AS BLOB)))<>((CASE WHEN NULL THEN rt1.c3 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 END))) DESC);
SELECT * FROM rt1 CROSS JOIN v0 ON CAST(IFNULL(DISTINCT rt1.c3, x'') AS TEXT) WHERE (((((((((((((((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)))AND(v0.c0 COLLATE BINARY)))AND(rt1.c3)))AND(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(rt1.c3)))OR(CASE rt1.c1  WHEN v0.c0 THEN rt1.c2 END)))AND(rt1.c1))) ORDER BY (((CAST('' AS BLOB)))!=((CASE WHEN NULL THEN rt1.c3 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 END))) DESC;
SELECT ALL * FROM rt0, v0, rt1 WHERE (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY) ORDER BY (~ ((- (rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY (~ ((- (rt1.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, v0, rt1 WHERE (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY) ORDER BY (~ ((- (rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY (~ ((- (rt1.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, v0, rt1 WHERE (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY) ORDER BY (~ ((- (rt1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c1) AND (CAST(v0.c0 AS TEXT)))) ORDER BY CASE rt0.c0  WHEN rt0.c0 COLLATE RTRIM THEN (((v0.c0))==((rt0.c1))) ELSE ((rt0.c1) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE rt0.c0  WHEN rt0.c0 COLLATE RTRIM THEN (((v0.c0))==((rt0.c1))) ELSE ((rt0.c1) NOT NULL) END);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c1) AND (CAST(v0.c0 AS TEXT)))) ORDER BY CASE rt0.c0  WHEN rt0.c0 COLLATE RTRIM THEN (((v0.c0))==((rt0.c1))) ELSE ((rt0.c1) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE rt0.c0  WHEN rt0.c0 COLLATE RTRIM THEN (((v0.c0))==((rt0.c1))) ELSE ((rt0.c1) NOT NULL) END);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c1) AND (CAST(v0.c0 AS TEXT)))) ORDER BY CASE rt0.c0  WHEN rt0.c0 COLLATE RTRIM THEN (((v0.c0))==((rt0.c1))) ELSE ((rt0.c1) NOT NULL) END;
SELECT ALL COUNT(*) FROM v0, rt0 NATURAL JOIN rt1 WHERE ((((((rt0.c0))>((NULL))))OR(CAST(rt1.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))>((NULL))))OR(CAST(rt1.c3 AS INTEGER)))) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM v0, rt0 NATURAL JOIN rt1 WHERE ((((((rt0.c0))>((NULL))))OR(CAST(rt1.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))>((NULL))))OR(CAST(rt1.c3 AS INTEGER)))) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM v0, rt0 NATURAL JOIN rt1 WHERE ((((((rt0.c0))>((NULL))))OR(CAST(rt1.c3 AS INTEGER))));
SELECT COUNT(*) FROM rt1 WHERE ((+ (((rt1.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c3) NOTNULL)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((+ (((rt1.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c3) NOTNULL)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((+ (((rt1.c3) NOTNULL))));
SELECT * FROM rt1 WHERE (CAST(CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END AS BLOB));
SELECT * FROM v0 INNER JOIN rt0 ON ((COALESCE(DISTINCT v0.c0, v0.c0)) NOTNULL) WHERE (rt0.c2) ORDER BY ((v0.c0) NOT BETWEEN (rt0.c2) AND (0.6836616119320169)) COLLATE RTRIM COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((COALESCE(DISTINCT v0.c0, v0.c0)) NOTNULL) ORDER BY ((v0.c0) NOT BETWEEN (rt0.c2) AND (0.6836616119320169)) COLLATE RTRIM COLLATE NOCASE);
SELECT * FROM v0 INNER JOIN rt0 ON ((COALESCE(DISTINCT v0.c0, v0.c0)) NOTNULL) WHERE (rt0.c2) ORDER BY ((v0.c0) NOT BETWEEN (rt0.c2) AND (0.6836616119320169)) COLLATE RTRIM COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((COALESCE(DISTINCT v0.c0, v0.c0)) NOTNULL) ORDER BY ((v0.c0) NOT BETWEEN (rt0.c2) AND (0.6836616119320169)) COLLATE RTRIM COLLATE NOCASE);
SELECT * FROM v0 INNER JOIN rt0 ON ((COALESCE(DISTINCT v0.c0, v0.c0)) NOTNULL) WHERE (rt0.c2) ORDER BY ((v0.c0) NOT BETWEEN (rt0.c2) AND (0.6836616119320169)) COLLATE RTRIM COLLATE NOCASE;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN NULLIF(v0.c0, v0.c0) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND ('455605778')) END) ORDER BY (0.1692098309590636 IN ()) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULLIF(v0.c0, v0.c0) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND ('455605778')) END) IS TRUE)  as count FROM v0 ORDER BY (0.1692098309590636 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN NULLIF(v0.c0, v0.c0) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND ('455605778')) END) ORDER BY (0.1692098309590636 IN ()) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULLIF(v0.c0, v0.c0) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND ('455605778')) END) IS TRUE)  as count FROM v0 ORDER BY (0.1692098309590636 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN NULLIF(v0.c0, v0.c0) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND ('455605778')) END) ORDER BY (0.1692098309590636 IN ()) COLLATE RTRIM;
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)*(v0.c0)))+(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)*(v0.c0)))+(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)*(v0.c0)))+(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)*(v0.c0)))+(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)*(v0.c0)))+(v0.c0 COLLATE NOCASE)));
SELECT ALL * FROM rt1 WHERE ((('By*')>(((rt1.c3) NOTNULL)))) ORDER BY ((((rt1.c2)>>(rt1.c0)))IS(((rt1.c1)==(rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('By*')>(((rt1.c3) NOTNULL)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)>>(rt1.c0)))IS(((rt1.c1)=(rt1.c1))))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((('By*')>(((rt1.c3) NOTNULL)))) ORDER BY ((((rt1.c2)>>(rt1.c0)))IS(((rt1.c1)==(rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('By*')>(((rt1.c3) NOTNULL)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)>>(rt1.c0)))IS(((rt1.c1)=(rt1.c1))))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((('By*')>(((rt1.c3) NOTNULL)))) ORDER BY ((((rt1.c2)>>(rt1.c0)))IS(((rt1.c1)==(rt1.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3))) IS TRUE) CROSS JOIN v0 ON ((((rt0.c1 COLLATE RTRIM)OR(((((rt1.c1)OR(rt0.c2)))AND(rt1.c1)))))OR(((((rt0.c1)AND(rt1.c2)))OR(rt0.c1)))) WHERE (((((rt1.c1)AND(rt1.c3)))OR(rt0.c1)) COLLATE NOCASE) ORDER BY ((UNLIKELY(DISTINCT rt0.c0)) NOT BETWEEN (((rt1.c3) BETWEEN (rt1.c2) AND (rt0.c1))) AND (CAST(rt0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)AND(rt1.c3)))OR(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3))) IS TRUE) CROSS JOIN v0 ON ((((rt0.c1 COLLATE RTRIM)OR(((((rt1.c1)OR(rt0.c2)))AND(rt1.c1)))))OR(((((rt0.c1)AND(rt1.c2)))OR(rt0.c1)))) ORDER BY ((UNLIKELY(DISTINCT rt0.c0)) NOT BETWEEN (((rt1.c3) BETWEEN (rt1.c2) AND (rt0.c1))) AND (CAST(rt0.c2 AS INTEGER))));
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3))) IS TRUE) CROSS JOIN v0 ON ((((rt0.c1 COLLATE RTRIM)OR(((((rt1.c1)OR(rt0.c2)))AND(rt1.c1)))))OR(((((rt0.c1)AND(rt1.c2)))OR(rt0.c1)))) WHERE (((((rt1.c1)AND(rt1.c3)))OR(rt0.c1)) COLLATE NOCASE) ORDER BY ((UNLIKELY(DISTINCT rt0.c0)) NOT BETWEEN (((rt1.c3) BETWEEN (rt1.c2) AND (rt0.c1))) AND (CAST(rt0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)AND(rt1.c3)))OR(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3))) IS TRUE) CROSS JOIN v0 ON ((((rt0.c1 COLLATE RTRIM)OR(((((rt1.c1)OR(rt0.c2)))AND(rt1.c1)))))OR(((((rt0.c1)AND(rt1.c2)))OR(rt0.c1)))) ORDER BY ((UNLIKELY(DISTINCT rt0.c0)) NOT BETWEEN (((rt1.c3) BETWEEN (rt1.c2) AND (rt0.c1))) AND (CAST(rt0.c2 AS INTEGER))));
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3))) IS TRUE) CROSS JOIN v0 ON ((((rt0.c1 COLLATE RTRIM)OR(((((rt1.c1)OR(rt0.c2)))AND(rt1.c1)))))OR(((((rt0.c1)AND(rt1.c2)))OR(rt0.c1)))) WHERE (((((rt1.c1)AND(rt1.c3)))OR(rt0.c1)) COLLATE NOCASE) ORDER BY ((UNLIKELY(DISTINCT rt0.c0)) NOT BETWEEN (((rt1.c3) BETWEEN (rt1.c2) AND (rt0.c1))) AND (CAST(rt0.c2 AS INTEGER)));
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY ((CAST(rt1.c0 AS REAL))<<(CAST(rt1.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c0 AS REAL))<<(CAST(rt1.c0 AS BLOB))) ASC);
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY ((CAST(rt1.c0 AS REAL))<<(CAST(rt1.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c0 AS REAL))<<(CAST(rt1.c0 AS BLOB))) ASC);
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY ((CAST(rt1.c0 AS REAL))<<(CAST(rt1.c0 AS BLOB))) ASC;
SELECT * FROM rt0, rt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY CAST(NULL AS REAL) DESC  NULLS FIRST, rt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(NULL AS REAL) DESC  NULLS FIRST, rt1.c2 DESC);
SELECT * FROM rt0, rt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY CAST(NULL AS REAL) DESC  NULLS FIRST, rt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(NULL AS REAL) DESC  NULLS FIRST, rt1.c2 DESC);
SELECT * FROM rt0, rt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY CAST(NULL AS REAL) DESC  NULLS FIRST, rt1.c2 DESC;
SELECT ALL * FROM rt0, v0 WHERE (((CAST(0x11a0df2e AS NUMERIC))IS NOT(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0x11a0df2e AS NUMERIC))IS NOT(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((CAST(0x11a0df2e AS NUMERIC))IS NOT(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0x11a0df2e AS NUMERIC))IS NOT(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((CAST(0x11a0df2e AS NUMERIC))IS NOT(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED INNER JOIN rt1 ON ((((rt1.c3, NULL, rt1.c1)) BETWEEN ((rt1.c0, rt1.c3, rt1.c2)) AND ((rt1.c3, rt1.c3, rt0.c0))) IN (((rt0.c2) IS FALSE))) WHERE (RTRIM(CAST(rt1.c0 AS REAL))) ORDER BY (((rt0.c2)<>(rt0.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(CAST(rt1.c0 AS REAL))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((((rt1.c3, NULL, rt1.c1)) BETWEEN ((rt1.c0, rt1.c3, rt1.c2)) AND ((rt1.c3, rt1.c3, rt0.c0))) IN (((rt0.c2) IS FALSE))) ORDER BY (((rt0.c2)!=(rt0.c2)) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED INNER JOIN rt1 ON ((((rt1.c3, NULL, rt1.c1)) BETWEEN ((rt1.c0, rt1.c3, rt1.c2)) AND ((rt1.c3, rt1.c3, rt0.c0))) IN (((rt0.c2) IS FALSE))) WHERE (RTRIM(CAST(rt1.c0 AS REAL))) ORDER BY (((rt0.c2)<>(rt0.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(CAST(rt1.c0 AS REAL))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((((rt1.c3, NULL, rt1.c1)) BETWEEN ((rt1.c0, rt1.c3, rt1.c2)) AND ((rt1.c3, rt1.c3, rt0.c0))) IN (((rt0.c2) IS FALSE))) ORDER BY (((rt0.c2)!=(rt0.c2)) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED INNER JOIN rt1 ON ((((rt1.c3, NULL, rt1.c1)) BETWEEN ((rt1.c0, rt1.c3, rt1.c2)) AND ((rt1.c3, rt1.c3, rt0.c0))) IN (((rt0.c2) IS FALSE))) WHERE (RTRIM(CAST(rt1.c0 AS REAL))) ORDER BY (((rt0.c2)<>(rt0.c2)) IN ()) ASC;
SELECT * FROM rt1, rt0 WHERE ((NOT (CASE rt1.c3  WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt1.c3  WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ((NOT (CASE rt1.c3  WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt1.c3  WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ((NOT (CASE rt1.c3  WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c0 END)));
SELECT ALL * FROM rt1, v0, rt0 WHERE ((((rt0.c2)*(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)*(rt0.c2)) IN ())) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL * FROM rt1, v0, rt0 WHERE ((((rt0.c2)*(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)*(rt0.c2)) IN ())) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL * FROM rt1, v0, rt0 WHERE ((((rt0.c2)*(rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c3)) NOT BETWEEN ((((rt1.c1)<=(rt0.c2)))) AND ((rt0.c1)))) ORDER BY (~ ((+ (rt1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) NOT BETWEEN ((((rt1.c1)<=(rt0.c2)))) AND ((rt0.c1)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (~ ((+ (rt1.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c3)) NOT BETWEEN ((((rt1.c1)<=(rt0.c2)))) AND ((rt0.c1)))) ORDER BY (~ ((+ (rt1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) NOT BETWEEN ((((rt1.c1)<=(rt0.c2)))) AND ((rt0.c1)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (~ ((+ (rt1.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c3)) NOT BETWEEN ((((rt1.c1)<=(rt0.c2)))) AND ((rt0.c1)))) ORDER BY (~ ((+ (rt1.c3))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((((x'cbbe') BETWEEN (0.14634179860960717) AND (rt0.c2))) BETWEEN ((NOT (rt0.c2))) AND (rt0.c0 COLLATE RTRIM))) ORDER BY (NOT (((rt0.c2)+(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((x'cbbe') BETWEEN (0.14634179860960717) AND (rt0.c2))) BETWEEN ((NOT (rt0.c2))) AND (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0 ORDER BY (NOT (((rt0.c2)+(rt0.c2)))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((x'cbbe') BETWEEN (0.14634179860960717) AND (rt0.c2))) BETWEEN ((NOT (rt0.c2))) AND (rt0.c0 COLLATE RTRIM))) ORDER BY (NOT (((rt0.c2)+(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((x'cbbe') BETWEEN (0.14634179860960717) AND (rt0.c2))) BETWEEN ((NOT (rt0.c2))) AND (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0 ORDER BY (NOT (((rt0.c2)+(rt0.c2)))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((x'cbbe') BETWEEN (0.14634179860960717) AND (rt0.c2))) BETWEEN ((NOT (rt0.c2))) AND (rt0.c0 COLLATE RTRIM))) ORDER BY (NOT (((rt0.c2)+(rt0.c2)))) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))OR(CAST(v0.c0 AS BLOB))))AND(json_array_length(-1.369133794E9)))) ORDER BY ((NULL)!=(((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(0.8103366892929446)))OR(v0.c0)))AND(v0.c0))))  NULLS FIRST, CASE WHEN (((0.6920827912645892, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) THEN ((v0.c0) IS FALSE) WHEN (((v0.c0)) BETWEEN ((x'')) AND ((v0.c0))) THEN x'' WHEN x'72de' THEN (v0.c0 IN (v0.c0, v0.c0)) ELSE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))OR(CAST(v0.c0 AS BLOB))))AND(json_array_length(-1.369133794E9)))) IS TRUE)  as count FROM v0 ORDER BY ((NULL)<>(((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(0.8103366892929446)))OR(v0.c0)))AND(v0.c0))))  NULLS FIRST, CASE WHEN (((0.6920827912645892, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) THEN ((v0.c0) IS FALSE) WHEN (((v0.c0)) BETWEEN ((x'')) AND ((v0.c0))) THEN x'' WHEN x'72de' THEN (v0.c0 IN (v0.c0, v0.c0)) ELSE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))OR(CAST(v0.c0 AS BLOB))))AND(json_array_length(-1.369133794E9)))) ORDER BY ((NULL)!=(((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(0.8103366892929446)))OR(v0.c0)))AND(v0.c0))))  NULLS FIRST, CASE WHEN (((0.6920827912645892, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) THEN ((v0.c0) IS FALSE) WHEN (((v0.c0)) BETWEEN ((x'')) AND ((v0.c0))) THEN x'' WHEN x'72de' THEN (v0.c0 IN (v0.c0, v0.c0)) ELSE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))OR(CAST(v0.c0 AS BLOB))))AND(json_array_length(-1.369133794E9)))) IS TRUE)  as count FROM v0 ORDER BY ((NULL)<>(((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(0.8103366892929446)))OR(v0.c0)))AND(v0.c0))))  NULLS FIRST, CASE WHEN (((0.6920827912645892, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) THEN ((v0.c0) IS FALSE) WHEN (((v0.c0)) BETWEEN ((x'')) AND ((v0.c0))) THEN x'' WHEN x'72de' THEN (v0.c0 IN (v0.c0, v0.c0)) ELSE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))OR(CAST(v0.c0 AS BLOB))))AND(json_array_length(-1.369133794E9)))) ORDER BY ((NULL)!=(((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(0.8103366892929446)))OR(v0.c0)))AND(v0.c0))))  NULLS FIRST, CASE WHEN (((0.6920827912645892, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) THEN ((v0.c0) IS FALSE) WHEN (((v0.c0)) BETWEEN ((x'')) AND ((v0.c0))) THEN x'' WHEN x'72de' THEN (v0.c0 IN (v0.c0, v0.c0)) ELSE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) END  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1 IN (rt1.c2))) NOT BETWEEN ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))) AND (((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN (rt1.c2))) NOT BETWEEN ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))) AND (((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1 IN (rt1.c2))) NOT BETWEEN ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))) AND (((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN (rt1.c2))) NOT BETWEEN ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))) AND (((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1 IN (rt1.c2))) NOT BETWEEN ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))) AND (((rt1.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c2)+(rt0.c1)))) AND ((CASE rt0.c0  WHEN rt0.c1 THEN x'793d' ELSE '-1190950359' END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((rt0.c2)+(rt0.c1)))) AND ((CASE rt0.c0  WHEN rt0.c1 THEN x'793d' ELSE '-1190950359' END)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c2)+(rt0.c1)))) AND ((CASE rt0.c0  WHEN rt0.c1 THEN x'793d' ELSE '-1190950359' END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((rt0.c2)+(rt0.c1)))) AND ((CASE rt0.c0  WHEN rt0.c1 THEN x'793d' ELSE '-1190950359' END)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c2)+(rt0.c1)))) AND ((CASE rt0.c0  WHEN rt0.c1 THEN x'793d' ELSE '-1190950359' END))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END THEN (~ (rt1.c2)) ELSE (((rt1.c3, NULL, x'db4b', rt1.c3, rt1.c2))<((rt1.c3, rt1.c1, rt1.c2, rt1.c1, rt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END THEN (~ (rt1.c2)) ELSE (((rt1.c3, NULL, x'db4b', rt1.c3, rt1.c2))<((rt1.c3, rt1.c1, rt1.c2, rt1.c1, rt1.c0))) END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END THEN (~ (rt1.c2)) ELSE (((rt1.c3, NULL, x'db4b', rt1.c3, rt1.c2))<((rt1.c3, rt1.c1, rt1.c2, rt1.c1, rt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END THEN (~ (rt1.c2)) ELSE (((rt1.c3, NULL, x'db4b', rt1.c3, rt1.c2))<((rt1.c3, rt1.c1, rt1.c2, rt1.c1, rt1.c0))) END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END THEN (~ (rt1.c2)) ELSE (((rt1.c3, NULL, x'db4b', rt1.c3, rt1.c2))<((rt1.c3, rt1.c1, rt1.c2, rt1.c1, rt1.c0))) END);
SELECT COUNT(*) FROM v0, rt1 WHERE ((- (((-4.451524E8) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((-4.451524E8) NOT NULL)))) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE ((- (((-4.451524E8) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((-4.451524E8) NOT NULL)))) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE ((- (((-4.451524E8) NOT NULL))));
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) ORDER BY rt0.c0 ASC, ((((((rt0.c1)&(rt0.c1)))OR(((rt0.c0)LIKE(rt0.c1)))))AND(rt0.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c0 ASC, ((((((rt0.c1)&(rt0.c1)))OR(((rt0.c0)LIKE(rt0.c1)))))AND(rt0.c1)) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) ORDER BY rt0.c0 ASC, ((((((rt0.c1)&(rt0.c1)))OR(((rt0.c0)LIKE(rt0.c1)))))AND(rt0.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c0 ASC, ((((((rt0.c1)&(rt0.c1)))OR(((rt0.c0)LIKE(rt0.c1)))))AND(rt0.c1)) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) ORDER BY rt0.c0 ASC, ((((((rt0.c1)&(rt0.c1)))OR(((rt0.c0)LIKE(rt0.c1)))))AND(rt0.c1)) ASC  NULLS LAST;
SELECT * FROM rt1, v0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT * FROM rt1, v0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT * FROM rt1, v0, rt0 WHERE (NULL);
SELECT * FROM v0, rt1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c2))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT * FROM v0, rt1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c2))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT * FROM v0, rt1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c2))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (((rt1.c0)IS NOT(NULL))))) ORDER BY (((((NULL))<((rt1.c2))))=(((x'')/(0.19856827472538263)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c0)IS NOT(NULL))))) IS TRUE)  as count FROM rt1 ORDER BY (((((NULL))<((rt1.c2))))=(((x'')/(0.19856827472538263)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (((rt1.c0)IS NOT(NULL))))) ORDER BY (((((NULL))<((rt1.c2))))=(((x'')/(0.19856827472538263)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c0)IS NOT(NULL))))) IS TRUE)  as count FROM rt1 ORDER BY (((((NULL))<((rt1.c2))))=(((x'')/(0.19856827472538263)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (((rt1.c0)IS NOT(NULL))))) ORDER BY (((((NULL))<((rt1.c2))))=(((x'')/(0.19856827472538263)))) ASC;
SELECT ALL * FROM rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN 0.12761769134015066 THEN 0.6851001450813519 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ((rt0.c1 IN (rt0.c0, NULL)), CHAR(rt0.c2)))) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (LTRIM(rt0.c0, rt0.c0)) AND ((((rt0.c1))!=((rt0.c1))))) ASC, CAST(rt0.c0 COLLATE RTRIM AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN 0.12761769134015066 THEN 0.6851001450813519 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ((rt0.c1 IN (rt0.c0, NULL)), CHAR(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (LTRIM(rt0.c0, rt0.c0)) AND ((((rt0.c1))<>((rt0.c1))))) ASC, CAST(rt0.c0 COLLATE RTRIM AS BLOB)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN 0.12761769134015066 THEN 0.6851001450813519 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ((rt0.c1 IN (rt0.c0, NULL)), CHAR(rt0.c2)))) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (LTRIM(rt0.c0, rt0.c0)) AND ((((rt0.c1))!=((rt0.c1))))) ASC, CAST(rt0.c0 COLLATE RTRIM AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN 0.12761769134015066 THEN 0.6851001450813519 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ((rt0.c1 IN (rt0.c0, NULL)), CHAR(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (LTRIM(rt0.c0, rt0.c0)) AND ((((rt0.c1))<>((rt0.c1))))) ASC, CAST(rt0.c0 COLLATE RTRIM AS BLOB)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN 0.12761769134015066 THEN 0.6851001450813519 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ((rt0.c1 IN (rt0.c0, NULL)), CHAR(rt0.c2)))) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (LTRIM(rt0.c0, rt0.c0)) AND ((((rt0.c1))!=((rt0.c1))))) ASC, CAST(rt0.c0 COLLATE RTRIM AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (HEX(DISTINCT rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT rt0.c2)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (HEX(DISTINCT rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT rt0.c2)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (HEX(DISTINCT rt0.c2));
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c1 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c3)))||(((rt0.c0)IS NOT(rt1.c2)))) WHERE ((((rt0.c1)) BETWEEN ((rt1.c3)) AND ((0.6854730621419463))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((rt1.c3)) AND ((0.6854730621419463))) COLLATE BINARY) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c3)))||(((rt0.c0)IS NOT(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c3)))||(((rt0.c0)IS NOT(rt1.c2)))) WHERE ((((rt0.c1)) BETWEEN ((rt1.c3)) AND ((0.6854730621419463))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((rt1.c3)) AND ((0.6854730621419463))) COLLATE BINARY) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c3)))||(((rt0.c0)IS NOT(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c3)))||(((rt0.c0)IS NOT(rt1.c2)))) WHERE ((((rt0.c1)) BETWEEN ((rt1.c3)) AND ((0.6854730621419463))) COLLATE BINARY);
SELECT * FROM v0, rt1, rt0 WHERE (((CASE rt1.c1  WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c1  WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c0 END) IS FALSE)) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT * FROM v0, rt1, rt0 WHERE (((CASE rt1.c1  WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c1  WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c0 END) IS FALSE)) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT * FROM v0, rt1, rt0 WHERE (((CASE rt1.c1  WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c0 END) IS FALSE));
SELECT ALL * FROM rt1, rt0, v0 WHERE (LIKELIHOOD('2o', 0.5392064329660213)) ORDER BY '4119JQF)挎', rt0.c2  NULLS FIRST, (~ (CAST('|F' AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD('2o', 0.5392064329660213)) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY '4119JQF)挎', rt0.c2  NULLS FIRST, (~ (CAST('|F' AS INTEGER))) ASC  NULLS LAST);
SELECT ALL * FROM rt1, rt0, v0 WHERE (LIKELIHOOD('2o', 0.5392064329660213)) ORDER BY '4119JQF)挎', rt0.c2  NULLS FIRST, (~ (CAST('|F' AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD('2o', 0.5392064329660213)) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY '4119JQF)挎', rt0.c2  NULLS FIRST, (~ (CAST('|F' AS INTEGER))) ASC  NULLS LAST);
SELECT ALL * FROM rt1, rt0, v0 WHERE (LIKELIHOOD('2o', 0.5392064329660213)) ORDER BY '4119JQF)挎', rt0.c2  NULLS FIRST, (~ (CAST('|F' AS INTEGER))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (CASE ((rt0.c2)>(rt0.c2))  WHEN -203670954 THEN ((rt1.c1) NOTNULL) ELSE v0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)>(rt0.c2))  WHEN -203670954 THEN ((rt1.c1) NOTNULL) ELSE v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (CASE ((rt0.c2)>(rt0.c2))  WHEN -203670954 THEN ((rt1.c1) NOTNULL) ELSE v0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)>(rt0.c2))  WHEN -203670954 THEN ((rt1.c1) NOTNULL) ELSE v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (CASE ((rt0.c2)>(rt0.c2))  WHEN -203670954 THEN ((rt1.c1) NOTNULL) ELSE v0.c0 COLLATE NOCASE END);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((COALESCE(DISTINCT rt1.c2, rt0.c1))OR(((rt0.c0) NOT NULL))))OR(rt1.c1))) ORDER BY CAST(((rt0.c2)IS(rt1.c3)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((COALESCE(DISTINCT rt1.c2, rt0.c1))OR(((rt0.c0) NOT NULL))))OR(rt1.c1))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(((rt0.c2)IS(rt1.c3)) AS INTEGER));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((COALESCE(DISTINCT rt1.c2, rt0.c1))OR(((rt0.c0) NOT NULL))))OR(rt1.c1))) ORDER BY CAST(((rt0.c2)IS(rt1.c3)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((COALESCE(DISTINCT rt1.c2, rt0.c1))OR(((rt0.c0) NOT NULL))))OR(rt1.c1))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(((rt0.c2)IS(rt1.c3)) AS INTEGER));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((COALESCE(DISTINCT rt1.c2, rt0.c1))OR(((rt0.c0) NOT NULL))))OR(rt1.c1))) ORDER BY CAST(((rt0.c2)IS(rt1.c3)) AS INTEGER);
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((rt1.c0 COLLATE RTRIM)LIKE(x'')) WHERE (CASE WHEN (NOT (v0.c0)) THEN ((rt1.c0) NOT NULL) WHEN LIKELIHOOD(DISTINCT rt1.c1, 0.3075508408846719) THEN CAST(rt1.c1 AS NUMERIC) WHEN (rt1.c0 IN ()) THEN ABS(DISTINCT rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (v0.c0)) THEN ((rt1.c0) NOT NULL) WHEN LIKELIHOOD(DISTINCT rt1.c1, 0.3075508408846719) THEN CAST(rt1.c1 AS NUMERIC) WHEN (rt1.c0 IN ()) THEN ABS(DISTINCT rt0.c0) END) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((rt1.c0 COLLATE RTRIM)LIKE(x'')));
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((rt1.c0 COLLATE RTRIM)LIKE(x'')) WHERE (CASE WHEN (NOT (v0.c0)) THEN ((rt1.c0) NOT NULL) WHEN LIKELIHOOD(DISTINCT rt1.c1, 0.3075508408846719) THEN CAST(rt1.c1 AS NUMERIC) WHEN (rt1.c0 IN ()) THEN ABS(DISTINCT rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (v0.c0)) THEN ((rt1.c0) NOT NULL) WHEN LIKELIHOOD(DISTINCT rt1.c1, 0.3075508408846719) THEN CAST(rt1.c1 AS NUMERIC) WHEN (rt1.c0 IN ()) THEN ABS(DISTINCT rt0.c0) END) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((rt1.c0 COLLATE RTRIM)LIKE(x'')));
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((rt1.c0 COLLATE RTRIM)LIKE(x'')) WHERE (CASE WHEN (NOT (v0.c0)) THEN ((rt1.c0) NOT NULL) WHEN LIKELIHOOD(DISTINCT rt1.c1, 0.3075508408846719) THEN CAST(rt1.c1 AS NUMERIC) WHEN (rt1.c0 IN ()) THEN ABS(DISTINCT rt0.c0) END);
SELECT ALL * FROM rt1 WHERE ((((~ (rt1.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c3))) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((~ (rt1.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c3))) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((~ (rt1.c3))) IS FALSE));
SELECT ALL COUNT(*) FROM v0 WHERE (-2086847718) ORDER BY CAST((v0.c0 IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT ((-2086847718) IS TRUE)  as count FROM v0 ORDER BY CAST((v0.c0 IN ()) AS REAL));
SELECT ALL COUNT(*) FROM v0 WHERE (-2086847718) ORDER BY CAST((v0.c0 IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT ((-2086847718) IS TRUE)  as count FROM v0 ORDER BY CAST((v0.c0 IN ()) AS REAL));
SELECT ALL COUNT(*) FROM v0 WHERE (-2086847718) ORDER BY CAST((v0.c0 IN ()) AS REAL);
SELECT * FROM rt0 WHERE (CASE ((rt0.c2) IS TRUE)  WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) THEN (rt0.c2 IN ()) ELSE ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) IS TRUE)  WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) THEN (rt0.c2 IN ()) ELSE ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c2) IS TRUE)  WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) THEN (rt0.c2 IN ()) ELSE ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) IS TRUE)  WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) THEN (rt0.c2 IN ()) ELSE ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c2) IS TRUE)  WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) THEN (rt0.c2 IN ()) ELSE ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) END);
SELECT * FROM rt0 WHERE (((CASE WHEN 0.22540092545170698 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN '' THEN rt0.c2 ELSE rt0.c1 END)GLOB((rt0.c1 IN (rt0.c1))))) ORDER BY ((CAST(rt0.c2 AS REAL)) ISNULL), COALESCE(((rt0.c1)IS NOT(rt0.c0)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END, (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0.22540092545170698 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN '' THEN rt0.c2 ELSE rt0.c1 END)GLOB((rt0.c1 IN (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS REAL)) ISNULL), COALESCE(((rt0.c1)IS NOT(rt0.c0)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END, (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CASE WHEN 0.22540092545170698 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN '' THEN rt0.c2 ELSE rt0.c1 END)GLOB((rt0.c1 IN (rt0.c1))))) ORDER BY ((CAST(rt0.c2 AS REAL)) ISNULL), COALESCE(((rt0.c1)IS NOT(rt0.c0)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END, (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0.22540092545170698 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN '' THEN rt0.c2 ELSE rt0.c1 END)GLOB((rt0.c1 IN (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS REAL)) ISNULL), COALESCE(((rt0.c1)IS NOT(rt0.c0)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END, (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CASE WHEN 0.22540092545170698 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN '' THEN rt0.c2 ELSE rt0.c1 END)GLOB((rt0.c1 IN (rt0.c1))))) ORDER BY ((CAST(rt0.c2 AS REAL)) ISNULL), COALESCE(((rt0.c1)IS NOT(rt0.c0)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END, (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))  NULLS FIRST;
SELECT * FROM rt1 NOT INDEXED, rt0, v0 WHERE (CASE ((rt1.c3)>>(rt0.c1))  WHEN ((rt0.c1)<>(rt0.c0)) THEN ((v0.c0)GLOB(NULL)) WHEN ((rt0.c1)<<(v0.c0)) THEN ((rt1.c3) NOT NULL) WHEN TRIM(DISTINCT rt1.c1) THEN rt1.c3 ELSE '|*' END) ORDER BY ((0.5527045888552796)>(rt1.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c3)>>(rt0.c1))  WHEN ((rt0.c1)!=(rt0.c0)) THEN ((v0.c0)GLOB(NULL)) WHEN ((rt0.c1)<<(v0.c0)) THEN ((rt1.c3) NOT NULL) WHEN TRIM(DISTINCT rt1.c1) THEN rt1.c3 ELSE '|*' END) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((0.5527045888552796)>(rt1.c1)) COLLATE BINARY);
SELECT * FROM rt1 NOT INDEXED, rt0, v0 WHERE (CASE ((rt1.c3)>>(rt0.c1))  WHEN ((rt0.c1)<>(rt0.c0)) THEN ((v0.c0)GLOB(NULL)) WHEN ((rt0.c1)<<(v0.c0)) THEN ((rt1.c3) NOT NULL) WHEN TRIM(DISTINCT rt1.c1) THEN rt1.c3 ELSE '|*' END) ORDER BY ((0.5527045888552796)>(rt1.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c3)>>(rt0.c1))  WHEN ((rt0.c1)!=(rt0.c0)) THEN ((v0.c0)GLOB(NULL)) WHEN ((rt0.c1)<<(v0.c0)) THEN ((rt1.c3) NOT NULL) WHEN TRIM(DISTINCT rt1.c1) THEN rt1.c3 ELSE '|*' END) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((0.5527045888552796)>(rt1.c1)) COLLATE BINARY);
SELECT * FROM rt1 NOT INDEXED, rt0, v0 WHERE (CASE ((rt1.c3)>>(rt0.c1))  WHEN ((rt0.c1)<>(rt0.c0)) THEN ((v0.c0)GLOB(NULL)) WHEN ((rt0.c1)<<(v0.c0)) THEN ((rt1.c3) NOT NULL) WHEN TRIM(DISTINCT rt1.c1) THEN rt1.c3 ELSE '|*' END) ORDER BY ((0.5527045888552796)>(rt1.c1)) COLLATE BINARY;
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON ((((((((CASE WHEN rt0.c2 THEN rt0.c1 END)AND(((rt0.c1) NOTNULL))))OR(rt0.c1 COLLATE RTRIM)))OR(-278081510)))OR(CAST(rt0.c1 AS BLOB))) WHERE (((json_type(rt1.c0)) BETWEEN ((rt1.c3 IN ())) AND (CAST(rt0.c2 AS TEXT)))) ORDER BY ((((rt1.c0) ISNULL)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((json_type(rt1.c0)) BETWEEN ((rt1.c3 IN ())) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((((((CASE WHEN rt0.c2 THEN rt0.c1 END)AND(((rt0.c1) NOTNULL))))OR(rt0.c1 COLLATE RTRIM)))OR(-278081510)))OR(CAST(rt0.c1 AS BLOB))) ORDER BY ((((rt1.c0) ISNULL)) IS TRUE) DESC);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON ((((((((CASE WHEN rt0.c2 THEN rt0.c1 END)AND(((rt0.c1) NOTNULL))))OR(rt0.c1 COLLATE RTRIM)))OR(-278081510)))OR(CAST(rt0.c1 AS BLOB))) WHERE (((json_type(rt1.c0)) BETWEEN ((rt1.c3 IN ())) AND (CAST(rt0.c2 AS TEXT)))) ORDER BY ((((rt1.c0) ISNULL)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((json_type(rt1.c0)) BETWEEN ((rt1.c3 IN ())) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((((((CASE WHEN rt0.c2 THEN rt0.c1 END)AND(((rt0.c1) NOTNULL))))OR(rt0.c1 COLLATE RTRIM)))OR(-278081510)))OR(CAST(rt0.c1 AS BLOB))) ORDER BY ((((rt1.c0) ISNULL)) IS TRUE) DESC);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON ((((((((CASE WHEN rt0.c2 THEN rt0.c1 END)AND(((rt0.c1) NOTNULL))))OR(rt0.c1 COLLATE RTRIM)))OR(-278081510)))OR(CAST(rt0.c1 AS BLOB))) WHERE (((json_type(rt1.c0)) BETWEEN ((rt1.c3 IN ())) AND (CAST(rt0.c2 AS TEXT)))) ORDER BY ((((rt1.c0) ISNULL)) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt0.c0) ORDER BY CAST(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt0.c0) ORDER BY CAST(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt0.c0) ORDER BY CAST(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)) AS REAL) DESC;
SELECT * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((CAST(rt0.c2 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((CAST(rt0.c2 AS TEXT))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((CAST(rt0.c2 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((CAST(rt0.c2 AS TEXT))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((CAST(rt0.c2 AS TEXT)))));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)))>>(rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)))>>(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)))>>(rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)))>>(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)))>>(rt1.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0, rt0 FULL OUTER JOIN rt1 ON ((rt0.c0 COLLATE BINARY) NOT BETWEEN (((((rt0.c0)OR(rt1.c0)))OR(rt1.c1))) AND (v0.c0 COLLATE RTRIM)) WHERE ((~ (((v0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1))))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1))))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN rt1 ON ((rt0.c0 COLLATE BINARY) NOT BETWEEN (((((rt0.c0)OR(rt1.c0)))OR(rt1.c1))) AND (v0.c0 COLLATE RTRIM)) ORDER BY v0.c0  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 FULL OUTER JOIN rt1 ON ((rt0.c0 COLLATE BINARY) NOT BETWEEN (((((rt0.c0)OR(rt1.c0)))OR(rt1.c1))) AND (v0.c0 COLLATE RTRIM)) WHERE ((~ (((v0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1))))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1))))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN rt1 ON ((rt0.c0 COLLATE BINARY) NOT BETWEEN (((((rt0.c0)OR(rt1.c0)))OR(rt1.c1))) AND (v0.c0 COLLATE RTRIM)) ORDER BY v0.c0  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 FULL OUTER JOIN rt1 ON ((rt0.c0 COLLATE BINARY) NOT BETWEEN (((((rt0.c0)OR(rt1.c0)))OR(rt1.c1))) AND (v0.c0 COLLATE RTRIM)) WHERE ((~ (((v0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1))))) ORDER BY v0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (((+ (rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt1.c0)) IN ())) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (((+ (rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt1.c0)) IN ())) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (((+ (rt1.c0)) IN ()));
SELECT * FROM v0, rt0, rt1 WHERE (((rt0.c0)GLOB(rt1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)GLOB(rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT * FROM v0, rt0, rt1 WHERE (((rt0.c0)GLOB(rt1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)GLOB(rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT * FROM v0, rt0, rt1 WHERE (((rt0.c0)GLOB(rt1.c2)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN v0 ON v0.c0 COLLATE BINARY WHERE ((((NOT (0.6369177240870024))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND (CASE rt1.c1  WHEN v0.c0 THEN rt1.c0 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT (((((NOT (0.6369177240870024))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND (CASE rt1.c1  WHEN v0.c0 THEN rt1.c0 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON v0.c0 COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN v0 ON v0.c0 COLLATE BINARY WHERE ((((NOT (0.6369177240870024))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND (CASE rt1.c1  WHEN v0.c0 THEN rt1.c0 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT (((((NOT (0.6369177240870024))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND (CASE rt1.c1  WHEN v0.c0 THEN rt1.c0 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON v0.c0 COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN v0 ON v0.c0 COLLATE BINARY WHERE ((((NOT (0.6369177240870024))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND (CASE rt1.c1  WHEN v0.c0 THEN rt1.c0 ELSE rt1.c2 END)));
SELECT COUNT(*) FROM rt0 WHERE (COALESCE(DISTINCT ((x'') NOT BETWEEN (rt0.c1) AND (rt0.c1)), ((rt0.c2) NOT NULL), ((rt0.c1) IS TRUE), HEX(DISTINCT rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((x'') NOT BETWEEN (rt0.c1) AND (rt0.c1)), ((rt0.c2) NOT NULL), ((rt0.c1) IS TRUE), HEX(DISTINCT rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (COALESCE(DISTINCT ((x'') NOT BETWEEN (rt0.c1) AND (rt0.c1)), ((rt0.c2) NOT NULL), ((rt0.c1) IS TRUE), HEX(DISTINCT rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((x'') NOT BETWEEN (rt0.c1) AND (rt0.c1)), ((rt0.c2) NOT NULL), ((rt0.c1) IS TRUE), HEX(DISTINCT rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (COALESCE(DISTINCT ((x'') NOT BETWEEN (rt0.c1) AND (rt0.c1)), ((rt0.c2) NOT NULL), ((rt0.c1) IS TRUE), HEX(DISTINCT rt0.c0)));
SELECT ALL * FROM rt1 WHERE ((CASE '0.4433124345393129'  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN NULL THEN rt1.c3 ELSE rt1.c0 END IN ())) ORDER BY CASE WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((rt1.c2)IS NOT(rt1.c2)) END;
SELECT SUM(count) FROM (SELECT ALL (((CASE '0.4433124345393129'  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN NULL THEN rt1.c3 ELSE rt1.c0 END IN ())) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((rt1.c2)IS NOT(rt1.c2)) END);
SELECT ALL * FROM rt1 WHERE ((CASE '0.4433124345393129'  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN NULL THEN rt1.c3 ELSE rt1.c0 END IN ())) ORDER BY CASE WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((rt1.c2)IS NOT(rt1.c2)) END;
SELECT SUM(count) FROM (SELECT ALL (((CASE '0.4433124345393129'  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN NULL THEN rt1.c3 ELSE rt1.c0 END IN ())) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((rt1.c2)IS NOT(rt1.c2)) END);
SELECT ALL * FROM rt1 WHERE ((CASE '0.4433124345393129'  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN NULL THEN rt1.c3 ELSE rt1.c0 END IN ())) ORDER BY CASE WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((rt1.c2)IS NOT(rt1.c2)) END;
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)<=(0.5877533126834401))) ORDER BY CASE ((v0.c0) BETWEEN (0.2544807640556981) AND (NULL))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE (v0.c0 IN ()) END ASC, (- (CAST(v0.c0 AS NUMERIC))) ASC  NULLS FIRST, RTRIM(((v0.c0)&(v0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<=(0.5877533126834401))) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0) BETWEEN (0.2544807640556981) AND (NULL))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE (v0.c0 IN ()) END ASC, (- (CAST(v0.c0 AS NUMERIC))) ASC  NULLS FIRST, RTRIM(((v0.c0)&(v0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)<=(0.5877533126834401))) ORDER BY CASE ((v0.c0) BETWEEN (0.2544807640556981) AND (NULL))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE (v0.c0 IN ()) END ASC, (- (CAST(v0.c0 AS NUMERIC))) ASC  NULLS FIRST, RTRIM(((v0.c0)&(v0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<=(0.5877533126834401))) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0) BETWEEN (0.2544807640556981) AND (NULL))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE (v0.c0 IN ()) END ASC, (- (CAST(v0.c0 AS NUMERIC))) ASC  NULLS FIRST, RTRIM(((v0.c0)&(v0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)<=(0.5877533126834401))) ORDER BY CASE ((v0.c0) BETWEEN (0.2544807640556981) AND (NULL))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE (v0.c0 IN ()) END ASC, (- (CAST(v0.c0 AS NUMERIC))) ASC  NULLS FIRST, RTRIM(((v0.c0)&(v0.c0))) ASC  NULLS LAST;
SELECT * FROM rt1, rt0, v0 WHERE (((LIKELY(DISTINCT rt1.c1)) IS TRUE)) ORDER BY (((rt1.c3 IN ())) BETWEEN (((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c1))) AND (((((rt0.c2)OR(rt0.c2)))OR('-517277657')))) DESC  NULLS FIRST, INSTR(rt0.c0, ((((rt1.c0)AND(rt0.c0)))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT rt1.c1)) IS TRUE)) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY (((rt1.c3 IN ())) BETWEEN (((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c1))) AND (((((rt0.c2)OR(rt0.c2)))OR('-517277657')))) DESC  NULLS FIRST, INSTR(rt0.c0, ((((rt1.c0)AND(rt0.c0)))OR(v0.c0))));
SELECT * FROM rt1, rt0, v0 WHERE (((LIKELY(DISTINCT rt1.c1)) IS TRUE)) ORDER BY (((rt1.c3 IN ())) BETWEEN (((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c1))) AND (((((rt0.c2)OR(rt0.c2)))OR('-517277657')))) DESC  NULLS FIRST, INSTR(rt0.c0, ((((rt1.c0)AND(rt0.c0)))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT rt1.c1)) IS TRUE)) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY (((rt1.c3 IN ())) BETWEEN (((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c1))) AND (((((rt0.c2)OR(rt0.c2)))OR('-517277657')))) DESC  NULLS FIRST, INSTR(rt0.c0, ((((rt1.c0)AND(rt0.c0)))OR(v0.c0))));
SELECT * FROM rt1, rt0, v0 WHERE (((LIKELY(DISTINCT rt1.c1)) IS TRUE)) ORDER BY (((rt1.c3 IN ())) BETWEEN (((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c1))) AND (((((rt0.c2)OR(rt0.c2)))OR('-517277657')))) DESC  NULLS FIRST, INSTR(rt0.c0, ((((rt1.c0)AND(rt0.c0)))OR(v0.c0)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (NULL) ORDER BY (QUOTE(v0.c0) IN ())  NULLS LAST, ((((((((rt0.c2)AND(((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))))OR(((((rt0.c1)OR(rt0.c2)))OR(v0.c0)))))OR(x'')))AND((((rt0.c2))<((rt0.c2))))) ASC, '%tU)08|/G'  NULLS FIRST, (CAST(NULL AS NUMERIC) IN (CASE WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0 ORDER BY (QUOTE(v0.c0) IN ())  NULLS LAST, ((((((((rt0.c2)AND(((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))))OR(((((rt0.c1)OR(rt0.c2)))OR(v0.c0)))))OR(x'')))AND((((rt0.c2))<((rt0.c2))))) ASC, '%tU)08|/G'  NULLS FIRST, (CAST(NULL AS NUMERIC) IN (CASE WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (NULL) ORDER BY (QUOTE(v0.c0) IN ())  NULLS LAST, ((((((((rt0.c2)AND(((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))))OR(((((rt0.c1)OR(rt0.c2)))OR(v0.c0)))))OR(x'')))AND((((rt0.c2))<((rt0.c2))))) ASC, '%tU)08|/G'  NULLS FIRST, (CAST(NULL AS NUMERIC) IN (CASE WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0 ORDER BY (QUOTE(v0.c0) IN ())  NULLS LAST, ((((((((rt0.c2)AND(((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))))OR(((((rt0.c1)OR(rt0.c2)))OR(v0.c0)))))OR(x'')))AND((((rt0.c2))<((rt0.c2))))) ASC, '%tU)08|/G'  NULLS FIRST, (CAST(NULL AS NUMERIC) IN (CASE WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (NULL) ORDER BY (QUOTE(v0.c0) IN ())  NULLS LAST, ((((((((rt0.c2)AND(((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))))OR(((((rt0.c1)OR(rt0.c2)))OR(v0.c0)))))OR(x'')))AND((((rt0.c2))<((rt0.c2))))) ASC, '%tU)08|/G'  NULLS FIRST, (CAST(NULL AS NUMERIC) IN (CASE WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END)) ASC;
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c0)||(rt0.c0)))OR(((rt0.c2) ISNULL)))) ORDER BY ((rt0.c2) NOT NULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)||(rt0.c0)))OR(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c2) NOT NULL) COLLATE NOCASE);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c0)||(rt0.c0)))OR(((rt0.c2) ISNULL)))) ORDER BY ((rt0.c2) NOT NULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)||(rt0.c0)))OR(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c2) NOT NULL) COLLATE NOCASE);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c0)||(rt0.c0)))OR(((rt0.c2) ISNULL)))) ORDER BY ((rt0.c2) NOT NULL) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (CAST(x'503f' AS REAL) COLLATE RTRIM) ORDER BY (+ ((((NULL, v0.c0, rt0.c2)) BETWEEN ((rt1.c0, rt0.c2, rt1.c1)) AND ((rt0.c2, rt1.c0, v0.c0))))) DESC, ((((rt1.c3 IN ())))!=(((((rt0.c0)) NOT BETWEEN ((0.9309723177374121)) AND ((rt1.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(x'503f' AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY (+ ((((NULL, v0.c0, rt0.c2)) BETWEEN ((rt1.c0, rt0.c2, rt1.c1)) AND ((rt0.c2, rt1.c0, v0.c0))))) DESC, ((((rt1.c3 IN ())))<>(((((rt0.c0)) NOT BETWEEN ((0.9309723177374121)) AND ((rt1.c0))))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (CAST(x'503f' AS REAL) COLLATE RTRIM) ORDER BY (+ ((((NULL, v0.c0, rt0.c2)) BETWEEN ((rt1.c0, rt0.c2, rt1.c1)) AND ((rt0.c2, rt1.c0, v0.c0))))) DESC, ((((rt1.c3 IN ())))!=(((((rt0.c0)) NOT BETWEEN ((0.9309723177374121)) AND ((rt1.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(x'503f' AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY (+ ((((NULL, v0.c0, rt0.c2)) BETWEEN ((rt1.c0, rt0.c2, rt1.c1)) AND ((rt0.c2, rt1.c0, v0.c0))))) DESC, ((((rt1.c3 IN ())))<>(((((rt0.c0)) NOT BETWEEN ((0.9309723177374121)) AND ((rt1.c0))))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (CAST(x'503f' AS REAL) COLLATE RTRIM) ORDER BY (+ ((((NULL, v0.c0, rt0.c2)) BETWEEN ((rt1.c0, rt0.c2, rt1.c1)) AND ((rt0.c2, rt1.c0, v0.c0))))) DESC, ((((rt1.c3 IN ())))!=(((((rt0.c0)) NOT BETWEEN ((0.9309723177374121)) AND ((rt1.c0))))))  NULLS FIRST;
SELECT * FROM v0 INNER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM) NOT NULL) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM) NOT NULL));
SELECT * FROM v0 INNER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM) NOT NULL) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM) NOT NULL));
SELECT * FROM v0 INNER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM) NOT NULL) WHERE (rt0.c0);
SELECT * FROM rt1, rt0 WHERE ((((rt0.c0)GLOB(rt0.c2)) IN (((rt1.c0) ISNULL)))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)GLOB(rt0.c2)) IN (((rt1.c0) ISNULL)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt0.c0);
SELECT * FROM rt1, rt0 WHERE ((((rt0.c0)GLOB(rt0.c2)) IN (((rt1.c0) ISNULL)))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)GLOB(rt0.c2)) IN (((rt1.c0) ISNULL)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt0.c0);
SELECT * FROM rt1, rt0 WHERE ((((rt0.c0)GLOB(rt0.c2)) IN (((rt1.c0) ISNULL)))) ORDER BY rt0.c0;
SELECT ALL * FROM rt0 WHERE ((NOT ((- (rt0.c2))))) ORDER BY ((((rt0.c1)LIKE(rt0.c1)))<>(CAST(rt0.c2 AS BLOB))) ASC  NULLS FIRST, (((rt0.c2) ISNULL) IN ())  NULLS FIRST, ((((rt0.c2)<=(rt0.c0)))|(CAST(rt0.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)LIKE(rt0.c1)))!=(CAST(rt0.c2 AS BLOB))) ASC  NULLS FIRST, (((rt0.c2) ISNULL) IN ())  NULLS FIRST, ((((rt0.c2)<=(rt0.c0)))|(CAST(rt0.c0 AS NUMERIC)))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((NOT ((- (rt0.c2))))) ORDER BY ((((rt0.c1)LIKE(rt0.c1)))<>(CAST(rt0.c2 AS BLOB))) ASC  NULLS FIRST, (((rt0.c2) ISNULL) IN ())  NULLS FIRST, ((((rt0.c2)<=(rt0.c0)))|(CAST(rt0.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)LIKE(rt0.c1)))!=(CAST(rt0.c2 AS BLOB))) ASC  NULLS FIRST, (((rt0.c2) ISNULL) IN ())  NULLS FIRST, ((((rt0.c2)<=(rt0.c0)))|(CAST(rt0.c0 AS NUMERIC)))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((NOT ((- (rt0.c2))))) ORDER BY ((((rt0.c1)LIKE(rt0.c1)))<>(CAST(rt0.c2 AS BLOB))) ASC  NULLS FIRST, (((rt0.c2) ISNULL) IN ())  NULLS FIRST, ((((rt0.c2)<=(rt0.c0)))|(CAST(rt0.c0 AS NUMERIC)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE ((NOT ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (rt0.c1))))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE ((NOT ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (rt0.c1))))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE ((NOT ((- (rt0.c1)))));
SELECT * FROM rt1, v0, rt0 WHERE ((+ (0X6b7e1a77)));
SELECT SUM(count) FROM (SELECT ALL (((+ (0x6b7e1a77))) IS TRUE)  as count FROM rt1, v0 NOT INDEXED, rt0);
SELECT * FROM rt1, v0, rt0 WHERE ((+ (0X6b7e1a77)));
SELECT SUM(count) FROM (SELECT ALL (((+ (0x6b7e1a77))) IS TRUE)  as count FROM rt1, v0 NOT INDEXED, rt0);
SELECT * FROM rt1, v0, rt0 WHERE ((+ (0X6b7e1a77)));
SELECT * FROM rt0 WHERE (CAST('-1443883918' AS BLOB)) ORDER BY (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END, (((rt0.c2))>=((rt0.c2))), ((rt0.c1) IS FALSE), (NOT (NULL)), rt0.c2))<>((rt0.c2, ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)), NULL, (- (rt0.c2)), ((rt0.c0)IS(rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-1443883918' AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END, (((rt0.c2))>=((rt0.c2))), ((rt0.c1) IS FALSE), (NOT (NULL)), rt0.c2))!=((rt0.c2, ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)), NULL, (- (rt0.c2)), ((rt0.c0)IS(rt0.c2))))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST('-1443883918' AS BLOB)) ORDER BY (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END, (((rt0.c2))>=((rt0.c2))), ((rt0.c1) IS FALSE), (NOT (NULL)), rt0.c2))<>((rt0.c2, ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)), NULL, (- (rt0.c2)), ((rt0.c0)IS(rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-1443883918' AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END, (((rt0.c2))>=((rt0.c2))), ((rt0.c1) IS FALSE), (NOT (NULL)), rt0.c2))!=((rt0.c2, ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)), NULL, (- (rt0.c2)), ((rt0.c0)IS(rt0.c2))))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST('-1443883918' AS BLOB)) ORDER BY (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END, (((rt0.c2))>=((rt0.c2))), ((rt0.c1) IS FALSE), (NOT (NULL)), rt0.c2))<>((rt0.c2, ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)), NULL, (- (rt0.c2)), ((rt0.c0)IS(rt0.c2))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt1 WHERE ((- (UPPER(0.8332259907073309))));
SELECT SUM(count) FROM (SELECT ALL (((- (UPPER(0.8332259907073309)))) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE ((- (UPPER(0.8332259907073309))));
SELECT SUM(count) FROM (SELECT ALL (((- (UPPER(0.8332259907073309)))) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE ((- (UPPER(0.8332259907073309))));
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)<(((rt1.c0)>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)<(((rt1.c0)>=(rt0.c1))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)<(((rt1.c0)>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)<(((rt1.c0)>=(rt0.c1))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)<(((rt1.c0)>=(rt0.c1)))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c2 END) NOTNULL) INNER JOIN rt0 ON CAST(((((rt0.c2)OR(v0.c0)))AND(rt0.c1)) AS REAL) WHERE (CASE WHEN (((rt0.c2, rt0.c2, rt1.c3)) NOT BETWEEN ((rt0.c1, rt1.c3, rt0.c1)) AND ((v0.c0, rt0.c0, v0.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c0)) WHEN ((rt1.c3)IS NOT(rt1.c3)) THEN LIKELY(rt0.c2) WHEN (~ (rt0.c0)) THEN ((rt1.c2)|(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2, rt0.c2, rt1.c3)) NOT BETWEEN ((rt0.c1, rt1.c3, rt0.c1)) AND ((v0.c0, rt0.c0, v0.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c0)) WHEN ((rt1.c3)IS NOT(rt1.c3)) THEN LIKELY(rt0.c2) WHEN (~ (rt0.c0)) THEN ((rt1.c2)|(rt0.c2)) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c2 END) NOTNULL) INNER JOIN rt0 ON CAST(((((rt0.c2)OR(v0.c0)))AND(rt0.c1)) AS REAL));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c2 END) NOTNULL) INNER JOIN rt0 ON CAST(((((rt0.c2)OR(v0.c0)))AND(rt0.c1)) AS REAL) WHERE (CASE WHEN (((rt0.c2, rt0.c2, rt1.c3)) NOT BETWEEN ((rt0.c1, rt1.c3, rt0.c1)) AND ((v0.c0, rt0.c0, v0.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c0)) WHEN ((rt1.c3)IS NOT(rt1.c3)) THEN LIKELY(rt0.c2) WHEN (~ (rt0.c0)) THEN ((rt1.c2)|(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2, rt0.c2, rt1.c3)) NOT BETWEEN ((rt0.c1, rt1.c3, rt0.c1)) AND ((v0.c0, rt0.c0, v0.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c0)) WHEN ((rt1.c3)IS NOT(rt1.c3)) THEN LIKELY(rt0.c2) WHEN (~ (rt0.c0)) THEN ((rt1.c2)|(rt0.c2)) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c2 END) NOTNULL) INNER JOIN rt0 ON CAST(((((rt0.c2)OR(v0.c0)))AND(rt0.c1)) AS REAL));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c0) BETWEEN (NULL) AND (rt1.c3))) IS TRUE)) ORDER BY CASE 0.7848389747133502  WHEN rt0.c1 THEN rt1.c3 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) BETWEEN (NULL) AND (rt1.c3))) IS TRUE)) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE 0.7848389747133502  WHEN rt0.c1 THEN rt1.c3 END COLLATE NOCASE);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c0) BETWEEN (NULL) AND (rt1.c3))) IS TRUE)) ORDER BY CASE 0.7848389747133502  WHEN rt0.c1 THEN rt1.c3 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) BETWEEN (NULL) AND (rt1.c3))) IS TRUE)) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE 0.7848389747133502  WHEN rt0.c1 THEN rt1.c3 END COLLATE NOCASE);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c0) BETWEEN (NULL) AND (rt1.c3))) IS TRUE)) ORDER BY CASE 0.7848389747133502  WHEN rt0.c1 THEN rt1.c3 END COLLATE NOCASE;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN v0 ON MAX(x'', ((rt1.c3)>>(rt0.c1)), ((rt1.c1)-(rt1.c3)), ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))OR(rt1.c3))) FULL OUTER JOIN rt0 ON ((((x'') BETWEEN (rt1.c3) AND (rt0.c1)))*(((rt1.c3)/(rt1.c3)))) WHERE ((- (rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c0))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON MAX(x'', ((rt1.c3)>>(rt0.c1)), ((rt1.c1)-(rt1.c3)), ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))OR(rt1.c3))) FULL OUTER JOIN rt0 ON ((((x'') BETWEEN (rt1.c3) AND (rt0.c1)))*(((rt1.c3)/(rt1.c3)))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN v0 ON MAX(x'', ((rt1.c3)>>(rt0.c1)), ((rt1.c1)-(rt1.c3)), ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))OR(rt1.c3))) FULL OUTER JOIN rt0 ON ((((x'') BETWEEN (rt1.c3) AND (rt0.c1)))*(((rt1.c3)/(rt1.c3)))) WHERE ((- (rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c0))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON MAX(x'', ((rt1.c3)>>(rt0.c1)), ((rt1.c1)-(rt1.c3)), ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))OR(rt1.c3))) FULL OUTER JOIN rt0 ON ((((x'') BETWEEN (rt1.c3) AND (rt0.c1)))*(((rt1.c3)/(rt1.c3)))));
SELECT ALL * FROM rt1, v0 WHERE (rt1.c2) ORDER BY rt1.c2 DESC  NULLS FIRST, ((((rt1.c1)>=(rt1.c3))) NOT BETWEEN ((rt1.c3 IN ())) AND ((((rt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c2 DESC  NULLS FIRST, ((((rt1.c1)>=(rt1.c3))) NOT BETWEEN ((rt1.c3 IN ())) AND ((((rt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt1.c1)))))  NULLS FIRST);
SELECT ALL * FROM rt1, v0 WHERE (rt1.c2) ORDER BY rt1.c2 DESC  NULLS FIRST, ((((rt1.c1)>=(rt1.c3))) NOT BETWEEN ((rt1.c3 IN ())) AND ((((rt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c2 DESC  NULLS FIRST, ((((rt1.c1)>=(rt1.c3))) NOT BETWEEN ((rt1.c3 IN ())) AND ((((rt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt1.c1)))))  NULLS FIRST);
SELECT ALL * FROM rt1, v0 WHERE (rt1.c2) ORDER BY rt1.c2 DESC  NULLS FIRST, ((((rt1.c1)>=(rt1.c3))) NOT BETWEEN ((rt1.c3 IN ())) AND ((((rt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt1.c1)))))  NULLS FIRST;
SELECT * FROM rt0, v0 NATURAL JOIN rt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN rt1);
SELECT * FROM rt0, v0 NATURAL JOIN rt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN rt1);
SELECT * FROM rt0, v0 NATURAL JOIN rt1 WHERE (rt0.c1);
SELECT ALL * FROM rt0, v0 CROSS JOIN rt1 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2))))OR(1571924255)) WHERE ((+ (x'')));
SELECT SUM(count) FROM (SELECT (((+ (x''))) IS TRUE)  as count FROM rt0, v0 CROSS JOIN rt1 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2))))OR(1571924255)));
SELECT ALL * FROM rt0, v0 CROSS JOIN rt1 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2))))OR(1571924255)) WHERE ((+ (x'')));
SELECT SUM(count) FROM (SELECT (((+ (x''))) IS TRUE)  as count FROM rt0, v0 CROSS JOIN rt1 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2))))OR(1571924255)));
SELECT ALL * FROM rt0, v0 CROSS JOIN rt1 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2))))OR(1571924255)) WHERE ((+ (x'')));
SELECT COUNT(*) FROM rt1, v0 WHERE ((((rt1.c1)) NOT BETWEEN ((QUOTE(rt1.c0))) AND (((((v0.c0)) BETWEEN ((NULL)) AND ((NULL))))))) ORDER BY ((rt1.c0)/(rt1.c3)) COLLATE RTRIM DESC  NULLS FIRST, rt1.c0 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((QUOTE(rt1.c0))) AND (((((v0.c0)) BETWEEN ((NULL)) AND ((NULL))))))) IS TRUE)  as count FROM rt1, v0 ORDER BY ((rt1.c0)/(rt1.c3)) COLLATE RTRIM DESC  NULLS FIRST, rt1.c0 COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt1, v0 WHERE ((((rt1.c1)) NOT BETWEEN ((QUOTE(rt1.c0))) AND (((((v0.c0)) BETWEEN ((NULL)) AND ((NULL))))))) ORDER BY ((rt1.c0)/(rt1.c3)) COLLATE RTRIM DESC  NULLS FIRST, rt1.c0 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((QUOTE(rt1.c0))) AND (((((v0.c0)) BETWEEN ((NULL)) AND ((NULL))))))) IS TRUE)  as count FROM rt1, v0 ORDER BY ((rt1.c0)/(rt1.c3)) COLLATE RTRIM DESC  NULLS FIRST, rt1.c0 COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt1, v0 WHERE ((((rt1.c1)) NOT BETWEEN ((QUOTE(rt1.c0))) AND (((((v0.c0)) BETWEEN ((NULL)) AND ((NULL))))))) ORDER BY ((rt1.c0)/(rt1.c3)) COLLATE RTRIM DESC  NULLS FIRST, rt1.c0 COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3)))||((((rt1.c0))==((rt1.c3)))))) ORDER BY (CASE WHEN v0.c0 THEN rt1.c1 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3)))||((((rt1.c0))=((rt1.c3)))))) IS TRUE)  as count FROM v0, rt1 ORDER BY (CASE WHEN v0.c0 THEN rt1.c1 END IN ()) DESC);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3)))||((((rt1.c0))==((rt1.c3)))))) ORDER BY (CASE WHEN v0.c0 THEN rt1.c1 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3)))||((((rt1.c0))=((rt1.c3)))))) IS TRUE)  as count FROM v0, rt1 ORDER BY (CASE WHEN v0.c0 THEN rt1.c1 END IN ()) DESC);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3)))||((((rt1.c0))==((rt1.c3)))))) ORDER BY (CASE WHEN v0.c0 THEN rt1.c1 END IN ()) DESC;
SELECT * FROM rt0, rt1, v0 WHERE (CASE (~ (rt0.c2))  WHEN CASE WHEN 'qu5r爣7%{|' THEN rt1.c1 ELSE rt1.c1 END THEN ((rt0.c1)GLOB(0.35708971376049037)) ELSE ((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (rt0.c2))  WHEN CASE WHEN 'qu5r爣7%{|' THEN rt1.c1 ELSE rt1.c1 END THEN ((rt0.c1)GLOB(0.35708971376049037)) ELSE ((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (CASE (~ (rt0.c2))  WHEN CASE WHEN 'qu5r爣7%{|' THEN rt1.c1 ELSE rt1.c1 END THEN ((rt0.c1)GLOB(0.35708971376049037)) ELSE ((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (rt0.c2))  WHEN CASE WHEN 'qu5r爣7%{|' THEN rt1.c1 ELSE rt1.c1 END THEN ((rt0.c1)GLOB(0.35708971376049037)) ELSE ((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (CASE (~ (rt0.c2))  WHEN CASE WHEN 'qu5r爣7%{|' THEN rt1.c1 ELSE rt1.c1 END THEN ((rt0.c1)GLOB(0.35708971376049037)) ELSE ((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt1.c0 COLLATE RTRIM)-(((rt1.c1)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE RTRIM)-(((rt1.c1)&(rt0.c1))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt1.c0 COLLATE RTRIM)-(((rt1.c1)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE RTRIM)-(((rt1.c1)&(rt0.c1))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt1.c0 COLLATE RTRIM)-(((rt1.c1)&(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c2)<<(rt0.c0))) NOT BETWEEN (TYPEOF(DISTINCT rt1.c1)) AND (((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)<<(rt0.c0))) NOT BETWEEN (TYPEOF(DISTINCT rt1.c1)) AND (((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c2)<<(rt0.c0))) NOT BETWEEN (TYPEOF(DISTINCT rt1.c1)) AND (((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)<<(rt0.c0))) NOT BETWEEN (TYPEOF(DISTINCT rt1.c1)) AND (((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c2)<<(rt0.c0))) NOT BETWEEN (TYPEOF(DISTINCT rt1.c1)) AND (((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0)))));
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (((((((rt0.c0) NOT NULL))AND(((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)))))OR(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT NULL))AND(((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)))))OR(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (((((((rt0.c0) NOT NULL))AND(((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)))))OR(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT NULL))AND(((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)))))OR(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (((((((rt0.c0) NOT NULL))AND(((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)))))OR(CAST(rt0.c1 AS BLOB))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c1)||(NULL)))) AND ((-1451915151))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0 NOT INDEXED FULL OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c1)||(NULL)))) AND ((-1451915151))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c1)||(NULL)))) AND ((-1451915151))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0 NOT INDEXED FULL OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c1)||(NULL)))) AND ((-1451915151))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c1)||(NULL)))) AND ((-1451915151))) WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt1 WHERE ('Qfn!	d㏌E') ORDER BY rt1.c0 DESC, CAST(NULL AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (('Qfn!	d㏌E') IS TRUE)  as count FROM rt1 ORDER BY rt1.c0 DESC, CAST(NULL AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ('Qfn!	d㏌E') ORDER BY rt1.c0 DESC, CAST(NULL AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (('Qfn!	d㏌E') IS TRUE)  as count FROM rt1 ORDER BY rt1.c0 DESC, CAST(NULL AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ('Qfn!	d㏌E') ORDER BY rt1.c0 DESC, CAST(NULL AS INTEGER) ASC;
SELECT COUNT(*) FROM rt1 WHERE (((((((x'')&(rt1.c3)))OR(rt1.c3 COLLATE NOCASE)))OR((+ (rt1.c3))))) ORDER BY CAST(((rt1.c0)LIKE(rt1.c3)) AS REAL) DESC  NULLS FIRST, ((x'e71f') ISNULL) DESC  NULLS FIRST, json_array_length(LTRIM(rt1.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')&(rt1.c3)))OR(rt1.c3 COLLATE NOCASE)))OR((+ (rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c0)LIKE(rt1.c3)) AS REAL) DESC  NULLS FIRST, ((x'e71f') ISNULL) DESC  NULLS FIRST, json_array_length(LTRIM(rt1.c2)) ASC);
SELECT COUNT(*) FROM rt1 WHERE (((((((x'')&(rt1.c3)))OR(rt1.c3 COLLATE NOCASE)))OR((+ (rt1.c3))))) ORDER BY CAST(((rt1.c0)LIKE(rt1.c3)) AS REAL) DESC  NULLS FIRST, ((x'e71f') ISNULL) DESC  NULLS FIRST, json_array_length(LTRIM(rt1.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')&(rt1.c3)))OR(rt1.c3 COLLATE NOCASE)))OR((+ (rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c0)LIKE(rt1.c3)) AS REAL) DESC  NULLS FIRST, ((x'e71f') ISNULL) DESC  NULLS FIRST, json_array_length(LTRIM(rt1.c2)) ASC);
SELECT COUNT(*) FROM rt1 WHERE (((((((x'')&(rt1.c3)))OR(rt1.c3 COLLATE NOCASE)))OR((+ (rt1.c3))))) ORDER BY CAST(((rt1.c0)LIKE(rt1.c3)) AS REAL) DESC  NULLS FIRST, ((x'e71f') ISNULL) DESC  NULLS FIRST, json_array_length(LTRIM(rt1.c2)) ASC;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (+ (((rt0.c0) IS FALSE))) INNER JOIN rt1 ON ((v0.c0) BETWEEN (rt1.c3) AND (rt0.c1)) COLLATE RTRIM WHERE (CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt1.c0)&(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt1.c0)&(NULL)) END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (+ (((rt0.c0) IS FALSE))) INNER JOIN rt1 ON ((v0.c0) BETWEEN (rt1.c3) AND (rt0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (+ (((rt0.c0) IS FALSE))) INNER JOIN rt1 ON ((v0.c0) BETWEEN (rt1.c3) AND (rt0.c1)) COLLATE RTRIM WHERE (CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt1.c0)&(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt1.c0)&(NULL)) END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (+ (((rt0.c0) IS FALSE))) INNER JOIN rt1 ON ((v0.c0) BETWEEN (rt1.c3) AND (rt0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (+ (((rt0.c0) IS FALSE))) INNER JOIN rt1 ON ((v0.c0) BETWEEN (rt1.c3) AND (rt0.c1)) COLLATE RTRIM WHERE (CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt1.c0)&(NULL)) END);
SELECT * FROM v0 WHERE ((((((v0.c0))<>((v0.c0)))) NOTNULL)) ORDER BY (NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))), (((+ (v0.c0)))>(((v0.c0)-(v0.c0)))) ASC  NULLS FIRST, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))<>((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))), (((+ (v0.c0)))>(((v0.c0)-(v0.c0)))) ASC  NULLS FIRST, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((((v0.c0))<>((v0.c0)))) NOTNULL)) ORDER BY (NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))), (((+ (v0.c0)))>(((v0.c0)-(v0.c0)))) ASC  NULLS FIRST, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))<>((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))), (((+ (v0.c0)))>(((v0.c0)-(v0.c0)))) ASC  NULLS FIRST, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((((v0.c0))<>((v0.c0)))) NOTNULL)) ORDER BY (NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))), (((+ (v0.c0)))>(((v0.c0)-(v0.c0)))) ASC  NULLS FIRST, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c0) NOT BETWEEN ('1293944732') AND (rt0.c2)) WHEN (((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((rt0.c1, rt0.c2, rt0.c1))) THEN (rt0.c1 IN (v0.c0)) WHEN ((rt0.c1)<=('0.7581320245190977')) THEN ((rt0.c1)OR(v0.c0)) END) ORDER BY (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))<((((((v0.c0)AND(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c0) NOT BETWEEN ('1293944732') AND (rt0.c2)) WHEN (((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((rt0.c1, rt0.c2, rt0.c1))) THEN (rt0.c1 IN (v0.c0)) WHEN ((rt0.c1)<=('0.7581320245190977')) THEN ((rt0.c1)OR(v0.c0)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))<((((((v0.c0)AND(rt0.c0)))OR(rt0.c1))))));
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c0) NOT BETWEEN ('1293944732') AND (rt0.c2)) WHEN (((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((rt0.c1, rt0.c2, rt0.c1))) THEN (rt0.c1 IN (v0.c0)) WHEN ((rt0.c1)<=('0.7581320245190977')) THEN ((rt0.c1)OR(v0.c0)) END) ORDER BY (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))<((((((v0.c0)AND(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c0) NOT BETWEEN ('1293944732') AND (rt0.c2)) WHEN (((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((rt0.c1, rt0.c2, rt0.c1))) THEN (rt0.c1 IN (v0.c0)) WHEN ((rt0.c1)<=('0.7581320245190977')) THEN ((rt0.c1)OR(v0.c0)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))<((((((v0.c0)AND(rt0.c0)))OR(rt0.c1))))));
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c0) NOT BETWEEN ('1293944732') AND (rt0.c2)) WHEN (((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((rt0.c1, rt0.c2, rt0.c1))) THEN (rt0.c1 IN (v0.c0)) WHEN ((rt0.c1)<=('0.7581320245190977')) THEN ((rt0.c1)OR(v0.c0)) END) ORDER BY (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))<((((((v0.c0)AND(rt0.c0)))OR(rt0.c1)))));
SELECT ALL * FROM v0, rt0, rt1 WHERE ((NOT (TYPEOF(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (TYPEOF(rt0.c0)))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE ((NOT (TYPEOF(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (TYPEOF(rt0.c0)))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE ((NOT (TYPEOF(rt0.c0))));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2)+((((rt1.c3))>((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2)+((((rt1.c3))>((rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2)+((((rt1.c3))>((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2)+((((rt1.c3))>((rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2)+((((rt1.c3))>((rt1.c2))))));
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c0)GLOB(rt1.c2))))=((((rt1.c1) NOT NULL))))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)GLOB(rt1.c2))))=((((rt1.c1) NOT NULL))))) IS TRUE)  as count FROM rt1 ORDER BY x'' DESC);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c0)GLOB(rt1.c2))))=((((rt1.c1) NOT NULL))))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)GLOB(rt1.c2))))=((((rt1.c1) NOT NULL))))) IS TRUE)  as count FROM rt1 ORDER BY x'' DESC);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c0)GLOB(rt1.c2))))=((((rt1.c1) NOT NULL))))) ORDER BY x'' DESC;
SELECT COUNT(*) FROM rt0 WHERE ((- ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- ((rt0.c2 IN ()))));
SELECT * FROM rt1 WHERE (((HEX(rt1.c0))|((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt1.c0))|((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((HEX(rt1.c0))|((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt1.c0))|((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((HEX(rt1.c0))|((rt1.c1 IN ()))));
SELECT ALL * FROM rt1, rt0 WHERE (0.6779778404623437) ORDER BY CAST(INSTR(rt0.c1, '''4') AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.6779778404623437) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(INSTR(rt0.c1, '''4') AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE (0.6779778404623437) ORDER BY CAST(INSTR(rt0.c1, '''4') AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.6779778404623437) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(INSTR(rt0.c1, '''4') AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE (0.6779778404623437) ORDER BY CAST(INSTR(rt0.c1, '''4') AS INTEGER) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt1 RIGHT OUTER JOIN rt0 ON (((+ (rt0.c0))) NOT BETWEEN (((v0.c0)<(v0.c0))) AND (SQLITE_COMPILEOPTION_USED(rt1.c3))) WHERE (SQLITE_COMPILEOPTION_USED((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))) ORDER BY ((((((((((rt0.c1) NOT NULL))OR(((rt1.c0)OR(v0.c0)))))OR(CASE rt1.c3  WHEN 0.6997089052965203 THEN x'f075' ELSE 0xffffffffde074bd6 END)))AND(((rt0.c1)/(rt1.c0)))))AND(((rt0.c1)<>(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))) IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN rt0 ON (((+ (rt0.c0))) NOT BETWEEN (((v0.c0)<(v0.c0))) AND (SQLITE_COMPILEOPTION_USED(rt1.c3))) ORDER BY ((((((((((rt0.c1) NOT NULL))OR(((rt1.c0)OR(v0.c0)))))OR(CASE rt1.c3  WHEN 0.6997089052965203 THEN x'f075' ELSE 0Xffffffffde074bd6 END)))AND(((rt0.c1)/(rt1.c0)))))AND(((rt0.c1)!=(rt1.c0)))));
SELECT COUNT(*) FROM v0, rt1 RIGHT OUTER JOIN rt0 ON (((+ (rt0.c0))) NOT BETWEEN (((v0.c0)<(v0.c0))) AND (SQLITE_COMPILEOPTION_USED(rt1.c3))) WHERE (SQLITE_COMPILEOPTION_USED((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))) ORDER BY ((((((((((rt0.c1) NOT NULL))OR(((rt1.c0)OR(v0.c0)))))OR(CASE rt1.c3  WHEN 0.6997089052965203 THEN x'f075' ELSE 0xffffffffde074bd6 END)))AND(((rt0.c1)/(rt1.c0)))))AND(((rt0.c1)<>(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))) IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN rt0 ON (((+ (rt0.c0))) NOT BETWEEN (((v0.c0)<(v0.c0))) AND (SQLITE_COMPILEOPTION_USED(rt1.c3))) ORDER BY ((((((((((rt0.c1) NOT NULL))OR(((rt1.c0)OR(v0.c0)))))OR(CASE rt1.c3  WHEN 0.6997089052965203 THEN x'f075' ELSE 0Xffffffffde074bd6 END)))AND(((rt0.c1)/(rt1.c0)))))AND(((rt0.c1)!=(rt1.c0)))));
SELECT COUNT(*) FROM v0, rt1 RIGHT OUTER JOIN rt0 ON (((+ (rt0.c0))) NOT BETWEEN (((v0.c0)<(v0.c0))) AND (SQLITE_COMPILEOPTION_USED(rt1.c3))) WHERE (SQLITE_COMPILEOPTION_USED((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))) ORDER BY ((((((((((rt0.c1) NOT NULL))OR(((rt1.c0)OR(v0.c0)))))OR(CASE rt1.c3  WHEN 0.6997089052965203 THEN x'f075' ELSE 0xffffffffde074bd6 END)))AND(((rt0.c1)/(rt1.c0)))))AND(((rt0.c1)<>(rt1.c0))));
SELECT ALL * FROM v0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((v0.c0)*(v0.c0))))) ORDER BY CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((v0.c0)*(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((v0.c0)*(v0.c0))))) ORDER BY CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((v0.c0)*(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((v0.c0)*(v0.c0))))) ORDER BY CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ('-503384033') ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (('-503384033') IS TRUE)  as count FROM rt1 ORDER BY NULL);
SELECT ALL COUNT(*) FROM rt1 WHERE ('-503384033') ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (('-503384033') IS TRUE)  as count FROM rt1 ORDER BY NULL);
SELECT ALL COUNT(*) FROM rt1 WHERE ('-503384033') ORDER BY NULL;
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt1 WHERE (CASE WHEN ((rt1.c2) NOTNULL) THEN CASE rt1.c0  WHEN 0.6220685108626406 THEN rt1.c1 ELSE rt1.c0 END WHEN ((((((((0.6271626148150448)AND(rt1.c3)))OR(rt1.c2)))AND(v0.c0)))OR(v0.c0)) THEN ((rt1.c0) IS FALSE) WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2))) THEN (NOT (rt1.c1)) END) ORDER BY (((((rt1.c2) IS FALSE)))>((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2) NOTNULL) THEN CASE rt1.c0  WHEN 0.6220685108626406 THEN rt1.c1 ELSE rt1.c0 END WHEN ((((((((0.6271626148150448)AND(rt1.c3)))OR(rt1.c2)))AND(v0.c0)))OR(v0.c0)) THEN ((rt1.c0) IS FALSE) WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2))) THEN (NOT (rt1.c1)) END) IS TRUE)  as count FROM v0 NATURAL JOIN rt1 ORDER BY (((((rt1.c2) IS FALSE)))>((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt1 WHERE (CASE WHEN ((rt1.c2) NOTNULL) THEN CASE rt1.c0  WHEN 0.6220685108626406 THEN rt1.c1 ELSE rt1.c0 END WHEN ((((((((0.6271626148150448)AND(rt1.c3)))OR(rt1.c2)))AND(v0.c0)))OR(v0.c0)) THEN ((rt1.c0) IS FALSE) WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2))) THEN (NOT (rt1.c1)) END) ORDER BY (((((rt1.c2) IS FALSE)))>((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2) NOTNULL) THEN CASE rt1.c0  WHEN 0.6220685108626406 THEN rt1.c1 ELSE rt1.c0 END WHEN ((((((((0.6271626148150448)AND(rt1.c3)))OR(rt1.c2)))AND(v0.c0)))OR(v0.c0)) THEN ((rt1.c0) IS FALSE) WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2))) THEN (NOT (rt1.c1)) END) IS TRUE)  as count FROM v0 NATURAL JOIN rt1 ORDER BY (((((rt1.c2) IS FALSE)))>((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt1 WHERE (CASE WHEN ((rt1.c2) NOTNULL) THEN CASE rt1.c0  WHEN 0.6220685108626406 THEN rt1.c1 ELSE rt1.c0 END WHEN ((((((((0.6271626148150448)AND(rt1.c3)))OR(rt1.c2)))AND(v0.c0)))OR(v0.c0)) THEN ((rt1.c0) IS FALSE) WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2))) THEN (NOT (rt1.c1)) END) ORDER BY (((((rt1.c2) IS FALSE)))>((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))))  NULLS LAST;
SELECT * FROM rt1, rt0 WHERE (((CAST(rt1.c2 AS INTEGER)) NOT BETWEEN (((rt0.c2)<=(rt1.c2))) AND (UPPER(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS INTEGER)) NOT BETWEEN (((rt0.c2)<=(rt1.c2))) AND (UPPER(rt0.c1)))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((CAST(rt1.c2 AS INTEGER)) NOT BETWEEN (((rt0.c2)<=(rt1.c2))) AND (UPPER(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS INTEGER)) NOT BETWEEN (((rt0.c2)<=(rt1.c2))) AND (UPPER(rt0.c1)))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((CAST(rt1.c2 AS INTEGER)) NOT BETWEEN (((rt0.c2)<=(rt1.c2))) AND (UPPER(rt0.c1))));
SELECT * FROM rt0 CROSS JOIN rt1 ON NULL WHERE (CAST((rt0.c1 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON NULL);
SELECT * FROM rt0 CROSS JOIN rt1 ON NULL WHERE (CAST((rt0.c1 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON NULL);
SELECT * FROM rt0 CROSS JOIN rt1 ON NULL WHERE (CAST((rt0.c1 IN ()) AS NUMERIC));
SELECT ALL * FROM rt1, rt0 WHERE ((((rt1.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((LIKE(rt0.c0, rt1.c3), (+ (rt0.c0)), ((((rt1.c3)OR(rt1.c0)))AND(rt1.c3)))) AND ((((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c2)), ((((((((((((rt0.c0)AND(rt1.c3)))OR(rt0.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c2)))AND(rt0.c0)), CAST(rt1.c1 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((LIKE(rt0.c0, rt1.c3), (+ (rt0.c0)), ((((rt1.c3)OR(rt1.c0)))AND(rt1.c3)))) AND ((((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c2)), ((((((((((((rt0.c0)AND(rt1.c3)))OR(rt0.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c2)))AND(rt0.c0)), CAST(rt1.c1 AS REAL))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((rt1.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((LIKE(rt0.c0, rt1.c3), (+ (rt0.c0)), ((((rt1.c3)OR(rt1.c0)))AND(rt1.c3)))) AND ((((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c2)), ((((((((((((rt0.c0)AND(rt1.c3)))OR(rt0.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c2)))AND(rt0.c0)), CAST(rt1.c1 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((LIKE(rt0.c0, rt1.c3), (+ (rt0.c0)), ((((rt1.c3)OR(rt1.c0)))AND(rt1.c3)))) AND ((((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c2)), ((((((((((((rt0.c0)AND(rt1.c3)))OR(rt0.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c2)))AND(rt0.c0)), CAST(rt1.c1 AS REAL))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((rt1.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((LIKE(rt0.c0, rt1.c3), (+ (rt0.c0)), ((((rt1.c3)OR(rt1.c0)))AND(rt1.c3)))) AND ((((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c2)), ((((((((((((rt0.c0)AND(rt1.c3)))OR(rt0.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c2)))AND(rt0.c0)), CAST(rt1.c1 AS REAL)))));
SELECT ALL * FROM v0, rt0, rt1 WHERE (CASE WHEN JULIANDAY(rt0.c1, v0.c0, rt0.c2, rt1.c3, rt1.c1) THEN CAST(1.061988139E9 AS INTEGER) ELSE ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN JULIANDAY(rt0.c1, v0.c0, rt0.c2, rt1.c3, rt1.c1) THEN CAST(1.061988139E9 AS INTEGER) ELSE ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) END) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE (CASE WHEN JULIANDAY(rt0.c1, v0.c0, rt0.c2, rt1.c3, rt1.c1) THEN CAST(1.061988139E9 AS INTEGER) ELSE ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN JULIANDAY(rt0.c1, v0.c0, rt0.c2, rt1.c3, rt1.c1) THEN CAST(1.061988139E9 AS INTEGER) ELSE ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) END) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE (CASE WHEN JULIANDAY(rt0.c1, v0.c0, rt0.c2, rt1.c3, rt1.c1) THEN CAST(1.061988139E9 AS INTEGER) ELSE ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) END);
SELECT ALL * FROM v0, rt0, rt1 WHERE (LOWER(rt0.c2)) ORDER BY (((((rt1.c1)) BETWEEN ((2130346095)) AND ((rt1.c2)))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(rt0.c2)) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (((((rt1.c1)) BETWEEN ((2130346095)) AND ((rt1.c2)))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM v0, rt0, rt1 WHERE (LOWER(rt0.c2)) ORDER BY (((((rt1.c1)) BETWEEN ((2130346095)) AND ((rt1.c2)))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(rt0.c2)) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (((((rt1.c1)) BETWEEN ((2130346095)) AND ((rt1.c2)))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM v0, rt0, rt1 WHERE (LOWER(rt0.c2)) ORDER BY (((((rt1.c1)) BETWEEN ((2130346095)) AND ((rt1.c2)))) IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (x'de11') ORDER BY x'' COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'de11') IS TRUE)  as count FROM rt1 ORDER BY x'' COLLATE BINARY ASC);
SELECT COUNT(*) FROM rt1 WHERE (x'de11') ORDER BY x'' COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'de11') IS TRUE)  as count FROM rt1 ORDER BY x'' COLLATE BINARY ASC);
SELECT COUNT(*) FROM rt1 WHERE (x'de11') ORDER BY x'' COLLATE BINARY ASC;
SELECT ALL * FROM rt1 WHERE ((('336247420') BETWEEN (CAST(rt1.c2 AS TEXT)) AND ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) ORDER BY TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT (((('336247420') BETWEEN (CAST(rt1.c2 AS TEXT)) AND ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY TOTAL_CHANGES());
SELECT ALL * FROM rt1 WHERE ((('336247420') BETWEEN (CAST(rt1.c2 AS TEXT)) AND ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) ORDER BY TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT (((('336247420') BETWEEN (CAST(rt1.c2 AS TEXT)) AND ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY TOTAL_CHANGES());
SELECT ALL * FROM rt1 WHERE ((('336247420') BETWEEN (CAST(rt1.c2 AS TEXT)) AND ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) ORDER BY TOTAL_CHANGES();
SELECT * FROM v0, rt1 WHERE ((~ ((rt1.c3 IN (v0.c0, rt1.c0))))) ORDER BY CASE WHEN ((((rt1.c2)AND(rt1.c2)))OR(rt1.c0)) THEN (- (v0.c0)) WHEN ((rt1.c1) IS TRUE) THEN (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c3))) WHEN ((rt1.c0)>>(rt1.c3)) THEN ((v0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0)) ELSE (~ (rt1.c1)) END, ((rt1.c1 IN (v0.c0)) IN (((rt1.c3)<=(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ ((rt1.c3 IN (v0.c0, rt1.c0))))) IS TRUE)  as count FROM v0, rt1 ORDER BY CASE WHEN ((((rt1.c2)AND(rt1.c2)))OR(rt1.c0)) THEN (- (v0.c0)) WHEN ((rt1.c1) IS TRUE) THEN (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c3))) WHEN ((rt1.c0)>>(rt1.c3)) THEN ((v0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0)) ELSE (~ (rt1.c1)) END, ((rt1.c1 IN (v0.c0)) IN (((rt1.c3)<=(v0.c0)))) ASC);
SELECT * FROM v0, rt1 WHERE ((~ ((rt1.c3 IN (v0.c0, rt1.c0))))) ORDER BY CASE WHEN ((((rt1.c2)AND(rt1.c2)))OR(rt1.c0)) THEN (- (v0.c0)) WHEN ((rt1.c1) IS TRUE) THEN (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c3))) WHEN ((rt1.c0)>>(rt1.c3)) THEN ((v0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0)) ELSE (~ (rt1.c1)) END, ((rt1.c1 IN (v0.c0)) IN (((rt1.c3)<=(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ ((rt1.c3 IN (v0.c0, rt1.c0))))) IS TRUE)  as count FROM v0, rt1 ORDER BY CASE WHEN ((((rt1.c2)AND(rt1.c2)))OR(rt1.c0)) THEN (- (v0.c0)) WHEN ((rt1.c1) IS TRUE) THEN (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c3))) WHEN ((rt1.c0)>>(rt1.c3)) THEN ((v0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0)) ELSE (~ (rt1.c1)) END, ((rt1.c1 IN (v0.c0)) IN (((rt1.c3)<=(v0.c0)))) ASC);
SELECT * FROM v0, rt1 WHERE ((~ ((rt1.c3 IN (v0.c0, rt1.c0))))) ORDER BY CASE WHEN ((((rt1.c2)AND(rt1.c2)))OR(rt1.c0)) THEN (- (v0.c0)) WHEN ((rt1.c1) IS TRUE) THEN (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c3))) WHEN ((rt1.c0)>>(rt1.c3)) THEN ((v0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0)) ELSE (~ (rt1.c1)) END, ((rt1.c1 IN (v0.c0)) IN (((rt1.c3)<=(v0.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE CAST(rt0.c2 AS INTEGER)  WHEN (~ (rt0.c0)) THEN ((rt0.c2)IS NOT(rt0.c1)) ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)) END) ORDER BY CASE WHEN STRFTIME(rt0.c2, rt0.c0, rt0.c0, v0.c0, -2.141169043E9) THEN (((rt0.c0))<=((rt0.c1))) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c2 AS INTEGER)  WHEN (~ (rt0.c0)) THEN ((rt0.c2)IS NOT(rt0.c1)) ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN STRFTIME(rt0.c2, rt0.c0, rt0.c0, v0.c0, -2.141169043E9) THEN (((rt0.c0))<=((rt0.c1))) END DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE CAST(rt0.c2 AS INTEGER)  WHEN (~ (rt0.c0)) THEN ((rt0.c2)IS NOT(rt0.c1)) ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)) END) ORDER BY CASE WHEN STRFTIME(rt0.c2, rt0.c0, rt0.c0, v0.c0, -2.141169043E9) THEN (((rt0.c0))<=((rt0.c1))) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c2 AS INTEGER)  WHEN (~ (rt0.c0)) THEN ((rt0.c2)IS NOT(rt0.c1)) ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN STRFTIME(rt0.c2, rt0.c0, rt0.c0, v0.c0, -2.141169043E9) THEN (((rt0.c0))<=((rt0.c1))) END DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE CAST(rt0.c2 AS INTEGER)  WHEN (~ (rt0.c0)) THEN ((rt0.c2)IS NOT(rt0.c1)) ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)) END) ORDER BY CASE WHEN STRFTIME(rt0.c2, rt0.c0, rt0.c0, v0.c0, -2.141169043E9) THEN (((rt0.c0))<=((rt0.c1))) END DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 ELSE NULL END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 ELSE NULL END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 ELSE NULL END)));
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM rt1 WHERE ((+ ((rt1.c3 IN (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((+ ((rt1.c3 IN (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((+ ((rt1.c3 IN (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((+ ((rt1.c3 IN (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((+ ((rt1.c3 IN (rt1.c1)))));
SELECT COUNT(*) FROM rt1 WHERE (SUBSTR(((rt1.c3) NOTNULL), (rt1.c3 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((rt1.c3) NOTNULL), (rt1.c3 IN ()))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (SUBSTR(((rt1.c3) NOTNULL), (rt1.c3 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((rt1.c3) NOTNULL), (rt1.c3 IN ()))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (SUBSTR(((rt1.c3) NOTNULL), (rt1.c3 IN ())));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((v0.c0)) NOT BETWEEN (((((rt1.c0, rt0.c2, rt0.c0))<>((rt0.c2, rt0.c0, rt1.c3))))) AND ((LOWER(rt1.c3)))) LEFT OUTER JOIN rt1 ON CASE WHEN x'' THEN ((rt1.c0) NOTNULL) WHEN ((((rt1.c0)AND(v0.c0)))AND(rt1.c0)) THEN IFNULL(rt1.c3, rt0.c0) WHEN rt1.c1 THEN CAST(rt1.c0 AS REAL) ELSE ((rt1.c1)/(v0.c0)) END WHERE (((CAST(rt0.c2 AS INTEGER)) IS FALSE)) ORDER BY TRIM(DISTINCT rt0.c1 COLLATE NOCASE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((v0.c0)) NOT BETWEEN (((((rt1.c0, rt0.c2, rt0.c0))<>((rt0.c2, rt0.c0, rt1.c3))))) AND ((LOWER(rt1.c3)))) LEFT OUTER JOIN rt1 ON CASE WHEN x'' THEN ((rt1.c0) NOTNULL) WHEN ((((rt1.c0)AND(v0.c0)))AND(rt1.c0)) THEN IFNULL(rt1.c3, rt0.c0) WHEN rt1.c1 THEN CAST(rt1.c0 AS REAL) ELSE ((rt1.c1)/(v0.c0)) END ORDER BY TRIM(DISTINCT rt0.c1 COLLATE NOCASE)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((v0.c0)) NOT BETWEEN (((((rt1.c0, rt0.c2, rt0.c0))<>((rt0.c2, rt0.c0, rt1.c3))))) AND ((LOWER(rt1.c3)))) LEFT OUTER JOIN rt1 ON CASE WHEN x'' THEN ((rt1.c0) NOTNULL) WHEN ((((rt1.c0)AND(v0.c0)))AND(rt1.c0)) THEN IFNULL(rt1.c3, rt0.c0) WHEN rt1.c1 THEN CAST(rt1.c0 AS REAL) ELSE ((rt1.c1)/(v0.c0)) END WHERE (((CAST(rt0.c2 AS INTEGER)) IS FALSE)) ORDER BY TRIM(DISTINCT rt0.c1 COLLATE NOCASE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((v0.c0)) NOT BETWEEN (((((rt1.c0, rt0.c2, rt0.c0))<>((rt0.c2, rt0.c0, rt1.c3))))) AND ((LOWER(rt1.c3)))) LEFT OUTER JOIN rt1 ON CASE WHEN x'' THEN ((rt1.c0) NOTNULL) WHEN ((((rt1.c0)AND(v0.c0)))AND(rt1.c0)) THEN IFNULL(rt1.c3, rt0.c0) WHEN rt1.c1 THEN CAST(rt1.c0 AS REAL) ELSE ((rt1.c1)/(v0.c0)) END ORDER BY TRIM(DISTINCT rt0.c1 COLLATE NOCASE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (((((rt0.c2)IS(rt1.c3)))<<(((rt1.c3)>>(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS(rt1.c3)))<<(((rt1.c3)>>(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (((((rt0.c2)IS(rt1.c3)))<<(((rt1.c3)>>(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS(rt1.c3)))<<(((rt1.c3)>>(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (((((rt0.c2)IS(rt1.c3)))<<(((rt1.c3)>>(rt1.c2)))));
SELECT * FROM rt0, v0 WHERE (((((rt0.c1))<=((v0.c0))) IN ())) ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))OR(v0.c0)))OR(rt0.c0)))OR('0.7874241839797926')))OR(((rt0.c2) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1))<=((v0.c0))) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))OR(v0.c0)))OR(rt0.c0)))OR('0.7874241839797926')))OR(((rt0.c2) ISNULL)))  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (((((rt0.c1))<=((v0.c0))) IN ())) ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))OR(v0.c0)))OR(rt0.c0)))OR('0.7874241839797926')))OR(((rt0.c2) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1))<=((v0.c0))) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))OR(v0.c0)))OR(rt0.c0)))OR('0.7874241839797926')))OR(((rt0.c2) ISNULL)))  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (((((rt0.c1))<=((v0.c0))) IN ())) ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))OR(v0.c0)))OR(rt0.c0)))OR('0.7874241839797926')))OR(((rt0.c2) ISNULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 0.2656045697777354 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE x'1490' END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 0.2656045697777354 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE x'1490' END END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 0.2656045697777354 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE x'1490' END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 0.2656045697777354 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE x'1490' END END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 0.2656045697777354 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE x'1490' END END);
SELECT * FROM rt1 WHERE (((((CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 END)OR(-43567156)))OR(((rt1.c2)IS(rt1.c0))))) ORDER BY (('[*s᫂') IS FALSE), ((((0.589537209631917)<<(rt1.c2))) BETWEEN (((rt1.c3)>>(rt1.c1))) AND (CASE rt1.c3  WHEN rt1.c1 THEN rt1.c3 END)), ((((((0.7220763711156157)AND(rt1.c2)))AND(rt1.c2))) NOT BETWEEN (rt1.c3) AND (NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 END)OR(-43567156)))OR(((rt1.c2)IS(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (('[*s᫂') IS FALSE), ((((0.589537209631917)<<(rt1.c2))) BETWEEN (((rt1.c3)>>(rt1.c1))) AND (CASE rt1.c3  WHEN rt1.c1 THEN rt1.c3 END)), ((((((0.7220763711156157)AND(rt1.c2)))AND(rt1.c2))) NOT BETWEEN (rt1.c3) AND (NULL)) DESC);
SELECT * FROM rt1 WHERE (((((CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 END)OR(-43567156)))OR(((rt1.c2)IS(rt1.c0))))) ORDER BY (('[*s᫂') IS FALSE), ((((0.589537209631917)<<(rt1.c2))) BETWEEN (((rt1.c3)>>(rt1.c1))) AND (CASE rt1.c3  WHEN rt1.c1 THEN rt1.c3 END)), ((((((0.7220763711156157)AND(rt1.c2)))AND(rt1.c2))) NOT BETWEEN (rt1.c3) AND (NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 END)OR(-43567156)))OR(((rt1.c2)IS(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (('[*s᫂') IS FALSE), ((((0.589537209631917)<<(rt1.c2))) BETWEEN (((rt1.c3)>>(rt1.c1))) AND (CASE rt1.c3  WHEN rt1.c1 THEN rt1.c3 END)), ((((((0.7220763711156157)AND(rt1.c2)))AND(rt1.c2))) NOT BETWEEN (rt1.c3) AND (NULL)) DESC);
SELECT * FROM rt1 WHERE (((((CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 END)OR(-43567156)))OR(((rt1.c2)IS(rt1.c0))))) ORDER BY (('[*s᫂') IS FALSE), ((((0.589537209631917)<<(rt1.c2))) BETWEEN (((rt1.c3)>>(rt1.c1))) AND (CASE rt1.c3  WHEN rt1.c1 THEN rt1.c3 END)), ((((((0.7220763711156157)AND(rt1.c2)))AND(rt1.c2))) NOT BETWEEN (rt1.c3) AND (NULL)) DESC;
SELECT COUNT(*) FROM rt1, v0 WHERE ('-1869169213') ORDER BY ((((CAST(rt1.c1 AS REAL))OR(rt1.c0 COLLATE BINARY)))OR(((rt1.c1) BETWEEN (rt1.c3) AND (v0.c0)))) ASC, ((LOWER(rt1.c1)) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1869169213') IS TRUE)  as count FROM rt1, v0 ORDER BY ((((CAST(rt1.c1 AS REAL))OR(rt1.c0 COLLATE BINARY)))OR(((rt1.c1) BETWEEN (rt1.c3) AND (v0.c0)))) ASC, ((LOWER(rt1.c1)) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, v0 WHERE ('-1869169213') ORDER BY ((((CAST(rt1.c1 AS REAL))OR(rt1.c0 COLLATE BINARY)))OR(((rt1.c1) BETWEEN (rt1.c3) AND (v0.c0)))) ASC, ((LOWER(rt1.c1)) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1869169213') IS TRUE)  as count FROM rt1, v0 ORDER BY ((((CAST(rt1.c1 AS REAL))OR(rt1.c0 COLLATE BINARY)))OR(((rt1.c1) BETWEEN (rt1.c3) AND (v0.c0)))) ASC, ((LOWER(rt1.c1)) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, v0 WHERE ('-1869169213') ORDER BY ((((CAST(rt1.c1 AS REAL))OR(rt1.c0 COLLATE BINARY)))OR(((rt1.c1) BETWEEN (rt1.c3) AND (v0.c0)))) ASC, ((LOWER(rt1.c1)) ISNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CAST((+ (rt1.c2)) AS REAL)) ORDER BY ((x'')IS NOT(0.6037881276117042)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt1, v0 ORDER BY ((x'')IS NOT(0.6037881276117042)) ASC);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CAST((+ (rt1.c2)) AS REAL)) ORDER BY ((x'')IS NOT(0.6037881276117042)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt1, v0 ORDER BY ((x'')IS NOT(0.6037881276117042)) ASC);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CAST((+ (rt1.c2)) AS REAL)) ORDER BY ((x'')IS NOT(0.6037881276117042)) ASC;
SELECT ALL * FROM rt0, rt1 WHERE ((~ (((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((~ (((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((~ (((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c1)-(rt0.c1)))) AND (((rt0.c1 IN ()))))) ORDER BY json_quote((rt0.c1 IN ())) ASC, (((rt0.c2)LIKE(rt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((rt0.c1)-(rt0.c1)))) AND (((rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0 ORDER BY json_quote((rt0.c1 IN ())) ASC, (((rt0.c2)LIKE(rt0.c0)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c1)-(rt0.c1)))) AND (((rt0.c1 IN ()))))) ORDER BY json_quote((rt0.c1 IN ())) ASC, (((rt0.c2)LIKE(rt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((rt0.c1)-(rt0.c1)))) AND (((rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0 ORDER BY json_quote((rt0.c1 IN ())) ASC, (((rt0.c2)LIKE(rt0.c0)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c1)-(rt0.c1)))) AND (((rt0.c1 IN ()))))) ORDER BY json_quote((rt0.c1 IN ())) ASC, (((rt0.c2)LIKE(rt0.c0)) IN ())  NULLS LAST;
SELECT ALL * FROM rt0, rt1 RIGHT OUTER JOIN v0 ON rt1.c1 COLLATE NOCASE WHERE (highlight(((v0.c0) NOT BETWEEN (v0.c0) AND (rt1.c0)), (NOT (v0.c0)), ((rt1.c1)<<(rt1.c0)), ((rt0.c1)OR(v0.c0)))) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c1)))OR(((rt1.c1) IS TRUE))))OR(((rt0.c1)>=(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((highlight(((v0.c0) NOT BETWEEN (v0.c0) AND (rt1.c0)), (NOT (v0.c0)), ((rt1.c1)<<(rt1.c0)), ((rt0.c1)OR(v0.c0)))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN v0 ON rt1.c1 COLLATE NOCASE ORDER BY ((((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c1)))OR(((rt1.c1) IS TRUE))))OR(((rt0.c1)>=(rt0.c1)))) ASC);
SELECT ALL * FROM rt0, rt1 RIGHT OUTER JOIN v0 ON rt1.c1 COLLATE NOCASE WHERE (highlight(((v0.c0) NOT BETWEEN (v0.c0) AND (rt1.c0)), (NOT (v0.c0)), ((rt1.c1)<<(rt1.c0)), ((rt0.c1)OR(v0.c0)))) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c1)))OR(((rt1.c1) IS TRUE))))OR(((rt0.c1)>=(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((highlight(((v0.c0) NOT BETWEEN (v0.c0) AND (rt1.c0)), (NOT (v0.c0)), ((rt1.c1)<<(rt1.c0)), ((rt0.c1)OR(v0.c0)))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN v0 ON rt1.c1 COLLATE NOCASE ORDER BY ((((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c1)))OR(((rt1.c1) IS TRUE))))OR(((rt0.c1)>=(rt0.c1)))) ASC);
SELECT ALL * FROM rt0, rt1 RIGHT OUTER JOIN v0 ON rt1.c1 COLLATE NOCASE WHERE (highlight(((v0.c0) NOT BETWEEN (v0.c0) AND (rt1.c0)), (NOT (v0.c0)), ((rt1.c1)<<(rt1.c0)), ((rt0.c1)OR(v0.c0)))) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c1)))OR(((rt1.c1) IS TRUE))))OR(((rt0.c1)>=(rt0.c1)))) ASC;
SELECT * FROM v0 CROSS JOIN rt1 ON ((((rt0.c1)+(rt0.c2)))|((- (rt1.c2)))) CROSS JOIN rt0 ON HEX(GLOB(rt1.c3, rt1.c1)) WHERE (((rt1.c0)>=(rt1.c3)) COLLATE NOCASE) ORDER BY ((x'') IS FALSE)  NULLS LAST, ((rt0.c2 COLLATE BINARY)AND((- (0.8774100872039169))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)>=(rt1.c3)) COLLATE NOCASE) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON ((((rt0.c1)+(rt0.c2)))|((- (rt1.c2)))) CROSS JOIN rt0 ON HEX(GLOB(rt1.c3, rt1.c1)) ORDER BY ((x'') IS FALSE)  NULLS LAST, ((rt0.c2 COLLATE BINARY)AND((- (0.8774100872039169))))  NULLS LAST);
SELECT * FROM v0 CROSS JOIN rt1 ON ((((rt0.c1)+(rt0.c2)))|((- (rt1.c2)))) CROSS JOIN rt0 ON HEX(GLOB(rt1.c3, rt1.c1)) WHERE (((rt1.c0)>=(rt1.c3)) COLLATE NOCASE) ORDER BY ((x'') IS FALSE)  NULLS LAST, ((rt0.c2 COLLATE BINARY)AND((- (0.8774100872039169))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)>=(rt1.c3)) COLLATE NOCASE) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON ((((rt0.c1)+(rt0.c2)))|((- (rt1.c2)))) CROSS JOIN rt0 ON HEX(GLOB(rt1.c3, rt1.c1)) ORDER BY ((x'') IS FALSE)  NULLS LAST, ((rt0.c2 COLLATE BINARY)AND((- (0.8774100872039169))))  NULLS LAST);
SELECT * FROM v0 CROSS JOIN rt1 ON ((((rt0.c1)+(rt0.c2)))|((- (rt1.c2)))) CROSS JOIN rt0 ON HEX(GLOB(rt1.c3, rt1.c1)) WHERE (((rt1.c0)>=(rt1.c3)) COLLATE NOCASE) ORDER BY ((x'') IS FALSE)  NULLS LAST, ((rt0.c2 COLLATE BINARY)AND((- (0.8774100872039169))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (UNLIKELY(DISTINCT CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)) ORDER BY ((CASE rt1.c3  WHEN rt1.c3 THEN NULL END) BETWEEN (rt1.c2 COLLATE RTRIM) AND (rt1.c3));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c3  WHEN rt1.c3 THEN NULL END) BETWEEN (rt1.c2 COLLATE RTRIM) AND (rt1.c3)));
SELECT ALL * FROM rt1 WHERE (UNLIKELY(DISTINCT CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)) ORDER BY ((CASE rt1.c3  WHEN rt1.c3 THEN NULL END) BETWEEN (rt1.c2 COLLATE RTRIM) AND (rt1.c3));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c3  WHEN rt1.c3 THEN NULL END) BETWEEN (rt1.c2 COLLATE RTRIM) AND (rt1.c3)));
SELECT ALL * FROM rt1 WHERE (UNLIKELY(DISTINCT CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)) ORDER BY ((CASE rt1.c3  WHEN rt1.c3 THEN NULL END) BETWEEN (rt1.c2 COLLATE RTRIM) AND (rt1.c3));
SELECT COUNT(*) FROM v0, rt1 WHERE (((rt1.c1)>>(((rt1.c2)-(NULL))))) ORDER BY ((CAST(v0.c0 AS REAL)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1)>>(((rt1.c2)-(NULL))))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((CAST(v0.c0 AS REAL)) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1 WHERE (((rt1.c1)>>(((rt1.c2)-(NULL))))) ORDER BY ((CAST(v0.c0 AS REAL)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1)>>(((rt1.c2)-(NULL))))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((CAST(v0.c0 AS REAL)) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1 WHERE (((rt1.c1)>>(((rt1.c2)-(NULL))))) ORDER BY ((CAST(v0.c0 AS REAL)) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON rt0.c1 WHERE (ABS(CAST(v0.c0 AS NUMERIC))) ORDER BY (((((rt0.c0 IN ()))OR(((((rt0.c2)AND(0.7448511800426274)))AND(rt0.c2)))))OR((rt0.c2 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(v0.c0 AS NUMERIC))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON rt0.c1 ORDER BY (((((rt0.c0 IN ()))OR(((((rt0.c2)AND(0.7448511800426274)))AND(rt0.c2)))))OR((rt0.c2 IN ()))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON rt0.c1 WHERE (ABS(CAST(v0.c0 AS NUMERIC))) ORDER BY (((((rt0.c0 IN ()))OR(((((rt0.c2)AND(0.7448511800426274)))AND(rt0.c2)))))OR((rt0.c2 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(v0.c0 AS NUMERIC))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON rt0.c1 ORDER BY (((((rt0.c0 IN ()))OR(((((rt0.c2)AND(0.7448511800426274)))AND(rt0.c2)))))OR((rt0.c2 IN ()))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON rt0.c1 WHERE (ABS(CAST(v0.c0 AS NUMERIC))) ORDER BY (((((rt0.c0 IN ()))OR(((((rt0.c2)AND(0.7448511800426274)))AND(rt0.c2)))))OR((rt0.c2 IN ()))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)) ORDER BY x'' DESC, (v0.c0 IN ()) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY x'' DESC, (v0.c0 IN ()) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)) ORDER BY x'' DESC, (v0.c0 IN ()) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY x'' DESC, (v0.c0 IN ()) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)) ORDER BY x'' DESC, (v0.c0 IN ()) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL * FROM v0, rt1, rt0 WHERE (((rt1.c0) NOT NULL)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0) NOT NULL)) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM v0, rt1, rt0 WHERE (((rt1.c0) NOT NULL)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0) NOT NULL)) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM v0, rt1, rt0 WHERE (((rt1.c0) NOT NULL)) ORDER BY NULL  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (CASE rt1.c0 COLLATE RTRIM  WHEN (- (rt1.c3)) THEN rt0.c1 COLLATE NOCASE END) ORDER BY (rt1.c3 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c0 COLLATE RTRIM  WHEN (- (rt1.c3)) THEN rt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (rt1.c3 IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (CASE rt1.c0 COLLATE RTRIM  WHEN (- (rt1.c3)) THEN rt0.c1 COLLATE NOCASE END) ORDER BY (rt1.c3 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c0 COLLATE RTRIM  WHEN (- (rt1.c3)) THEN rt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (rt1.c3 IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (CASE rt1.c0 COLLATE RTRIM  WHEN (- (rt1.c3)) THEN rt0.c1 COLLATE NOCASE END) ORDER BY (rt1.c3 IN ())  NULLS LAST;
SELECT ALL * FROM rt1, v0, rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((((x'5a02')&(rt1.c2)), (+ (rt0.c1)), (- (rt0.c0)))) AND ((((0.7218172028712934)>(rt0.c1)), rt0.c1 COLLATE RTRIM, ((rt1.c1) IS FALSE))))) ORDER BY ((((rt1.c0, rt1.c0, rt1.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((0x5b6f4f20, rt1.c0, rt1.c1))) IN (((rt1.c1) IS TRUE))) DESC, (((rt1.c0, x'7401', rt1.c3)) BETWEEN ((CASE rt1.c2  WHEN NULL THEN rt0.c1 END, ((v0.c0)>=(rt1.c2)), ((v0.c0)OR(rt0.c0)))) AND (((rt1.c3 IN ()), ((rt0.c0)IS NOT(rt1.c2)), rt1.c1))) ASC, rt1.c2 ASC, ((CAST(rt1.c3 AS REAL)) BETWEEN (rt0.c0 COLLATE RTRIM) AND (rt1.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((((x'5a02')&(rt1.c2)), (+ (rt0.c1)), (- (rt0.c0)))) AND ((((0.7218172028712934)>(rt0.c1)), rt0.c1 COLLATE RTRIM, ((rt1.c1) IS FALSE))))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY ((((rt1.c0, rt1.c0, rt1.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((0x5b6f4f20, rt1.c0, rt1.c1))) IN (((rt1.c1) IS TRUE))) DESC, (((rt1.c0, x'7401', rt1.c3)) BETWEEN ((CASE rt1.c2  WHEN NULL THEN rt0.c1 END, ((v0.c0)>=(rt1.c2)), ((v0.c0)OR(rt0.c0)))) AND (((rt1.c3 IN ()), ((rt0.c0)IS NOT(rt1.c2)), rt1.c1))) ASC, rt1.c2 ASC, ((CAST(rt1.c3 AS REAL)) BETWEEN (rt0.c0 COLLATE RTRIM) AND (rt1.c1 COLLATE RTRIM)) ASC);
SELECT ALL * FROM rt1, v0, rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((((x'5a02')&(rt1.c2)), (+ (rt0.c1)), (- (rt0.c0)))) AND ((((0.7218172028712934)>(rt0.c1)), rt0.c1 COLLATE RTRIM, ((rt1.c1) IS FALSE))))) ORDER BY ((((rt1.c0, rt1.c0, rt1.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((0x5b6f4f20, rt1.c0, rt1.c1))) IN (((rt1.c1) IS TRUE))) DESC, (((rt1.c0, x'7401', rt1.c3)) BETWEEN ((CASE rt1.c2  WHEN NULL THEN rt0.c1 END, ((v0.c0)>=(rt1.c2)), ((v0.c0)OR(rt0.c0)))) AND (((rt1.c3 IN ()), ((rt0.c0)IS NOT(rt1.c2)), rt1.c1))) ASC, rt1.c2 ASC, ((CAST(rt1.c3 AS REAL)) BETWEEN (rt0.c0 COLLATE RTRIM) AND (rt1.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((((x'5a02')&(rt1.c2)), (+ (rt0.c1)), (- (rt0.c0)))) AND ((((0.7218172028712934)>(rt0.c1)), rt0.c1 COLLATE RTRIM, ((rt1.c1) IS FALSE))))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY ((((rt1.c0, rt1.c0, rt1.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((0x5b6f4f20, rt1.c0, rt1.c1))) IN (((rt1.c1) IS TRUE))) DESC, (((rt1.c0, x'7401', rt1.c3)) BETWEEN ((CASE rt1.c2  WHEN NULL THEN rt0.c1 END, ((v0.c0)>=(rt1.c2)), ((v0.c0)OR(rt0.c0)))) AND (((rt1.c3 IN ()), ((rt0.c0)IS NOT(rt1.c2)), rt1.c1))) ASC, rt1.c2 ASC, ((CAST(rt1.c3 AS REAL)) BETWEEN (rt0.c0 COLLATE RTRIM) AND (rt1.c1 COLLATE RTRIM)) ASC);
SELECT ALL * FROM rt1, v0, rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((((x'5a02')&(rt1.c2)), (+ (rt0.c1)), (- (rt0.c0)))) AND ((((0.7218172028712934)>(rt0.c1)), rt0.c1 COLLATE RTRIM, ((rt1.c1) IS FALSE))))) ORDER BY ((((rt1.c0, rt1.c0, rt1.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((0x5b6f4f20, rt1.c0, rt1.c1))) IN (((rt1.c1) IS TRUE))) DESC, (((rt1.c0, x'7401', rt1.c3)) BETWEEN ((CASE rt1.c2  WHEN NULL THEN rt0.c1 END, ((v0.c0)>=(rt1.c2)), ((v0.c0)OR(rt0.c0)))) AND (((rt1.c3 IN ()), ((rt0.c0)IS NOT(rt1.c2)), rt1.c1))) ASC, rt1.c2 ASC, ((CAST(rt1.c3 AS REAL)) BETWEEN (rt0.c0 COLLATE RTRIM) AND (rt1.c1 COLLATE RTRIM)) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c1 IN ())) ORDER BY ((((CAST(rt1.c2 AS TEXT))OR(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END)))OR(rt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((((CAST(rt1.c2 AS TEXT))OR(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END)))OR(rt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c1 IN ())) ORDER BY ((((CAST(rt1.c2 AS TEXT))OR(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END)))OR(rt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((((CAST(rt1.c2 AS TEXT))OR(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END)))OR(rt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c1 IN ())) ORDER BY ((((CAST(rt1.c2 AS TEXT))OR(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END)))OR(rt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (CASE DATE(rt0.c1, rt1.c0, v0.c0)  WHEN (NOT (v0.c0)) THEN ((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) ELSE (+ (0.33611004459100835)) END);
SELECT SUM(count) FROM (SELECT ((CASE DATE(rt0.c1, rt1.c0, v0.c0)  WHEN (NOT (v0.c0)) THEN ((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) ELSE (+ (0.33611004459100835)) END) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (CASE DATE(rt0.c1, rt1.c0, v0.c0)  WHEN (NOT (v0.c0)) THEN ((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) ELSE (+ (0.33611004459100835)) END);
SELECT SUM(count) FROM (SELECT ((CASE DATE(rt0.c1, rt1.c0, v0.c0)  WHEN (NOT (v0.c0)) THEN ((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) ELSE (+ (0.33611004459100835)) END) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (CASE DATE(rt0.c1, rt1.c0, v0.c0)  WHEN (NOT (v0.c0)) THEN ((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) ELSE (+ (0.33611004459100835)) END);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))IS(rt0.c1))) ORDER BY NULLIF(CAST(rt0.c1 AS INTEGER), ((rt0.c0)&(rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))IS(rt0.c1))) IS TRUE)  as count FROM rt0, v0 ORDER BY NULLIF(CAST(rt0.c1 AS INTEGER), ((rt0.c0)&(rt0.c0)))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))IS(rt0.c1))) ORDER BY NULLIF(CAST(rt0.c1 AS INTEGER), ((rt0.c0)&(rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))IS(rt0.c1))) IS TRUE)  as count FROM rt0, v0 ORDER BY NULLIF(CAST(rt0.c1 AS INTEGER), ((rt0.c0)&(rt0.c0)))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))IS(rt0.c1))) ORDER BY NULLIF(CAST(rt0.c1 AS INTEGER), ((rt0.c0)&(rt0.c0)))  NULLS LAST;
SELECT * FROM v0, rt1, rt0 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN rt1.c1 END THEN ((rt1.c1)IS NOT(rt1.c3)) WHEN ((x'') NOT BETWEEN (v0.c0) AND (rt1.c3)) THEN (rt0.c2 IN (rt0.c0)) WHEN ((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c1)) THEN ((rt1.c1) BETWEEN (0.43028905948801266) AND (rt0.c1)) WHEN rt1.c1 COLLATE BINARY THEN ((rt0.c1) NOTNULL) WHEN 0.8154016221253738 THEN CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c0 THEN rt1.c1 END THEN ((rt1.c1)IS NOT(rt1.c3)) WHEN ((x'') NOT BETWEEN (v0.c0) AND (rt1.c3)) THEN (rt0.c2 IN (rt0.c0)) WHEN ((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c1)) THEN ((rt1.c1) BETWEEN (0.43028905948801266) AND (rt0.c1)) WHEN rt1.c1 COLLATE BINARY THEN ((rt0.c1) NOTNULL) WHEN 0.8154016221253738 THEN CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c1 END END) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT * FROM v0, rt1, rt0 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN rt1.c1 END THEN ((rt1.c1)IS NOT(rt1.c3)) WHEN ((x'') NOT BETWEEN (v0.c0) AND (rt1.c3)) THEN (rt0.c2 IN (rt0.c0)) WHEN ((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c1)) THEN ((rt1.c1) BETWEEN (0.43028905948801266) AND (rt0.c1)) WHEN rt1.c1 COLLATE BINARY THEN ((rt0.c1) NOTNULL) WHEN 0.8154016221253738 THEN CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c0 THEN rt1.c1 END THEN ((rt1.c1)IS NOT(rt1.c3)) WHEN ((x'') NOT BETWEEN (v0.c0) AND (rt1.c3)) THEN (rt0.c2 IN (rt0.c0)) WHEN ((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c1)) THEN ((rt1.c1) BETWEEN (0.43028905948801266) AND (rt0.c1)) WHEN rt1.c1 COLLATE BINARY THEN ((rt0.c1) NOTNULL) WHEN 0.8154016221253738 THEN CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c1 END END) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT * FROM v0, rt1, rt0 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN rt1.c1 END THEN ((rt1.c1)IS NOT(rt1.c3)) WHEN ((x'') NOT BETWEEN (v0.c0) AND (rt1.c3)) THEN (rt0.c2 IN (rt0.c0)) WHEN ((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c1)) THEN ((rt1.c1) BETWEEN (0.43028905948801266) AND (rt0.c1)) WHEN rt1.c1 COLLATE BINARY THEN ((rt0.c1) NOTNULL) WHEN 0.8154016221253738 THEN CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c1 END END);
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS BLOB)) ORDER BY UNLIKELY(DISTINCT (~ (rt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(DISTINCT (~ (rt0.c1))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS BLOB)) ORDER BY UNLIKELY(DISTINCT (~ (rt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(DISTINCT (~ (rt0.c1))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS BLOB)) ORDER BY UNLIKELY(DISTINCT (~ (rt0.c1))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (0Xffffffff82c6b3e1);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff82c6b3e1) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (0Xffffffff82c6b3e1);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff82c6b3e1) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (0Xffffffff82c6b3e1);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2)IS(-1446831422)))AND(((rt1.c1)*(rt1.c1)))))AND(((((rt1.c3)AND(rt1.c2)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)IS(-1446831422)))AND(((rt1.c1)*(rt1.c1)))))AND(((((rt1.c3)AND(rt1.c2)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2)IS(-1446831422)))AND(((rt1.c1)*(rt1.c1)))))AND(((((rt1.c3)AND(rt1.c2)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)IS(-1446831422)))AND(((rt1.c1)*(rt1.c1)))))AND(((((rt1.c3)AND(rt1.c2)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2)IS(-1446831422)))AND(((rt1.c1)*(rt1.c1)))))AND(((((rt1.c3)AND(rt1.c2)))AND(rt1.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE (json_extract('-247967516', (+ (v0.c0)))) ORDER BY v0.c0  NULLS LAST, SQLITE_SOURCE_ID();
SELECT SUM(count) FROM (SELECT ALL ((json_extract('-247967516', (+ (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST, SQLITE_SOURCE_ID());
SELECT ALL COUNT(*) FROM v0 WHERE (json_extract('-247967516', (+ (v0.c0)))) ORDER BY v0.c0  NULLS LAST, SQLITE_SOURCE_ID();
SELECT SUM(count) FROM (SELECT ALL ((json_extract('-247967516', (+ (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST, SQLITE_SOURCE_ID());
SELECT ALL COUNT(*) FROM v0 WHERE (json_extract('-247967516', (+ (v0.c0)))) ORDER BY v0.c0  NULLS LAST, SQLITE_SOURCE_ID();
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1)/(rt1.c1)))>>('AC#\nJ⍎>/'))) ORDER BY (((((rt1.c2) NOTNULL), 'kl', ((rt1.c1)+(rt1.c2))))=((COALESCE(rt1.c3, NULL), (rt1.c2 IN ()), ((((((((rt1.c2)OR(NULL)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)/(rt1.c1)))>>('AC#\nJ⍎>/'))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c2) NOTNULL), 'kl', ((rt1.c1)+(rt1.c2))))=((COALESCE(rt1.c3, NULL), (rt1.c2 IN ()), ((((((((rt1.c2)OR(NULL)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c3))))) DESC);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1)/(rt1.c1)))>>('AC#\nJ⍎>/'))) ORDER BY (((((rt1.c2) NOTNULL), 'kl', ((rt1.c1)+(rt1.c2))))=((COALESCE(rt1.c3, NULL), (rt1.c2 IN ()), ((((((((rt1.c2)OR(NULL)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)/(rt1.c1)))>>('AC#\nJ⍎>/'))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c2) NOTNULL), 'kl', ((rt1.c1)+(rt1.c2))))=((COALESCE(rt1.c3, NULL), (rt1.c2 IN ()), ((((((((rt1.c2)OR(NULL)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c3))))) DESC);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1)/(rt1.c1)))>>('AC#\nJ⍎>/'))) ORDER BY (((((rt1.c2) NOTNULL), 'kl', ((rt1.c1)+(rt1.c2))))=((COALESCE(rt1.c3, NULL), (rt1.c2 IN ()), ((((((((rt1.c2)OR(NULL)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c3))))) DESC;
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN LIKELY(DISTINCT rt1.c0) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c1 THEN x'' ELSE rt1.c0 END ELSE (NOT (-373561290)) END) ORDER BY (NOT (TRIM(DISTINCT rt1.c3, rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE RTRIM  WHEN LIKELY(DISTINCT rt1.c0) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c1 THEN x'' ELSE rt1.c0 END ELSE (NOT (-373561290)) END) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY (NOT (TRIM(DISTINCT rt1.c3, rt0.c2))) ASC);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN LIKELY(DISTINCT rt1.c0) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c1 THEN x'' ELSE rt1.c0 END ELSE (NOT (-373561290)) END) ORDER BY (NOT (TRIM(DISTINCT rt1.c3, rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE RTRIM  WHEN LIKELY(DISTINCT rt1.c0) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c1 THEN x'' ELSE rt1.c0 END ELSE (NOT (-373561290)) END) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY (NOT (TRIM(DISTINCT rt1.c3, rt0.c2))) ASC);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN LIKELY(DISTINCT rt1.c0) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c1 THEN x'' ELSE rt1.c0 END ELSE (NOT (-373561290)) END) ORDER BY (NOT (TRIM(DISTINCT rt1.c3, rt0.c2))) ASC;
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (JULIANDAY(((rt0.c1)IS(rt1.c3)), (rt0.c1 IN ()), DATE(rt0.c0, rt0.c0, rt1.c0), CAST('-938138691' AS TEXT), ((((rt1.c2)AND(rt0.c2)))OR(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(((rt0.c1)IS(rt1.c3)), (rt0.c1 IN ()), DATE(rt0.c0, rt0.c0, rt1.c0), CAST('-938138691' AS TEXT), ((((rt1.c2)AND(rt0.c2)))OR(rt1.c2)))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (JULIANDAY(((rt0.c1)IS(rt1.c3)), (rt0.c1 IN ()), DATE(rt0.c0, rt0.c0, rt1.c0), CAST('-938138691' AS TEXT), ((((rt1.c2)AND(rt0.c2)))OR(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(((rt0.c1)IS(rt1.c3)), (rt0.c1 IN ()), DATE(rt0.c0, rt0.c0, rt1.c0), CAST('-938138691' AS TEXT), ((((rt1.c2)AND(rt0.c2)))OR(rt1.c2)))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (JULIANDAY(((rt0.c1)IS(rt1.c3)), (rt0.c1 IN ()), DATE(rt0.c0, rt0.c0, rt1.c0), CAST('-938138691' AS TEXT), ((((rt1.c2)AND(rt0.c2)))OR(rt1.c2))));
SELECT COUNT(*) FROM v0, rt1 WHERE (((('C{R\nB^', ((rt1.c2) IS FALSE), (~ (rt1.c2))))<>((v0.c0, ((v0.c0)<=(rt1.c3)), ((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)))))) ORDER BY ('&e*S皴0' IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('C{R\nB^', ((rt1.c2) IS FALSE), (~ (rt1.c2))))<>((v0.c0, ((v0.c0)<=(rt1.c3)), ((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)))))) IS TRUE)  as count FROM v0, rt1 ORDER BY ('&e*S皴0' IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1 WHERE (((('C{R\nB^', ((rt1.c2) IS FALSE), (~ (rt1.c2))))<>((v0.c0, ((v0.c0)<=(rt1.c3)), ((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)))))) ORDER BY ('&e*S皴0' IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('C{R\nB^', ((rt1.c2) IS FALSE), (~ (rt1.c2))))<>((v0.c0, ((v0.c0)<=(rt1.c3)), ((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)))))) IS TRUE)  as count FROM v0, rt1 ORDER BY ('&e*S皴0' IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1 WHERE (((('C{R\nB^', ((rt1.c2) IS FALSE), (~ (rt1.c2))))<>((v0.c0, ((v0.c0)<=(rt1.c3)), ((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)))))) ORDER BY ('&e*S皴0' IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)AND(v0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (IFNULL('-883403447', v0.c0) IN (json(v0.c0), ((v0.c0)==(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE NOCASE)AND(v0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (IFNULL('-883403447', v0.c0) IN (json(v0.c0), ((v0.c0)==(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)AND(v0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (IFNULL('-883403447', v0.c0) IN (json(v0.c0), ((v0.c0)==(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE NOCASE)AND(v0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (IFNULL('-883403447', v0.c0) IN (json(v0.c0), ((v0.c0)==(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)AND(v0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (IFNULL('-883403447', v0.c0) IN (json(v0.c0), ((v0.c0)==(v0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((x'4274')>(((v0.c0)>(rt1.c1))))) ORDER BY json_quote(((rt1.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'4274')>(((v0.c0)>(rt1.c1))))) IS TRUE)  as count FROM v0, rt1 ORDER BY json_quote(((rt1.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((x'4274')>(((v0.c0)>(rt1.c1))))) ORDER BY json_quote(((rt1.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'4274')>(((v0.c0)>(rt1.c1))))) IS TRUE)  as count FROM v0, rt1 ORDER BY json_quote(((rt1.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((x'4274')>(((v0.c0)>(rt1.c1))))) ORDER BY json_quote(((rt1.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON ((((rt1.c3)>=(rt1.c3))) NOT BETWEEN (((rt0.c2)>>(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c2)))) WHERE (CASE WHEN ('1902846384' IN ()) THEN (('0.20836098995970598') NOT BETWEEN (rt0.c1) AND (rt1.c3)) WHEN ((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c2)) THEN CASE rt1.c2  WHEN rt0.c0 THEN rt1.c1 END WHEN CAST(rt0.c2 AS BLOB) THEN ((((rt0.c1)OR(rt1.c2)))AND(NULL)) ELSE rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ('1902846384' IN ()) THEN (('0.20836098995970598') NOT BETWEEN (rt0.c1) AND (rt1.c3)) WHEN ((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c2)) THEN CASE rt1.c2  WHEN rt0.c0 THEN rt1.c1 END WHEN CAST(rt0.c2 AS BLOB) THEN ((((rt0.c1)OR(rt1.c2)))AND(NULL)) ELSE rt0.c2 END) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((((rt1.c3)>=(rt1.c3))) NOT BETWEEN (((rt0.c2)>>(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON ((((rt1.c3)>=(rt1.c3))) NOT BETWEEN (((rt0.c2)>>(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c2)))) WHERE (CASE WHEN ('1902846384' IN ()) THEN (('0.20836098995970598') NOT BETWEEN (rt0.c1) AND (rt1.c3)) WHEN ((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c2)) THEN CASE rt1.c2  WHEN rt0.c0 THEN rt1.c1 END WHEN CAST(rt0.c2 AS BLOB) THEN ((((rt0.c1)OR(rt1.c2)))AND(NULL)) ELSE rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ('1902846384' IN ()) THEN (('0.20836098995970598') NOT BETWEEN (rt0.c1) AND (rt1.c3)) WHEN ((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c2)) THEN CASE rt1.c2  WHEN rt0.c0 THEN rt1.c1 END WHEN CAST(rt0.c2 AS BLOB) THEN ((((rt0.c1)OR(rt1.c2)))AND(NULL)) ELSE rt0.c2 END) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((((rt1.c3)>=(rt1.c3))) NOT BETWEEN (((rt0.c2)>>(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON ((((rt1.c3)>=(rt1.c3))) NOT BETWEEN (((rt0.c2)>>(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c2)))) WHERE (CASE WHEN ('1902846384' IN ()) THEN (('0.20836098995970598') NOT BETWEEN (rt0.c1) AND (rt1.c3)) WHEN ((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c2)) THEN CASE rt1.c2  WHEN rt0.c0 THEN rt1.c1 END WHEN CAST(rt0.c2 AS BLOB) THEN ((((rt0.c1)OR(rt1.c2)))AND(NULL)) ELSE rt0.c2 END);
SELECT * FROM v0 WHERE (((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) IN ())) ORDER BY (((v0.c0 IN ())) NOT BETWEEN ((((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0)))) AND (((v0.c0)<<(v0.c0)))), CAST(v0.c0 AS REAL) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) IN ())) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) NOT BETWEEN ((((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0)))) AND (((v0.c0)<<(v0.c0)))), CAST(v0.c0 AS REAL) COLLATE RTRIM  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) IN ())) ORDER BY (((v0.c0 IN ())) NOT BETWEEN ((((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0)))) AND (((v0.c0)<<(v0.c0)))), CAST(v0.c0 AS REAL) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) IN ())) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) NOT BETWEEN ((((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0)))) AND (((v0.c0)<<(v0.c0)))), CAST(v0.c0 AS REAL) COLLATE RTRIM  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) IN ())) ORDER BY (((v0.c0 IN ())) NOT BETWEEN ((((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0)))) AND (((v0.c0)<<(v0.c0)))), CAST(v0.c0 AS REAL) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY NULL, ((SQLITE_VERSION()) NOT BETWEEN (((rt0.c1)!=(rt0.c1))) AND ((NOT ('0.11298939596897095')))), ((rt0.c1)>>(TRIM(rt0.c0))) DESC  NULLS FIRST, CASE WHEN (~ (rt0.c1)) THEN (NULL IN (rt0.c0, rt0.c0)) ELSE rt0.c2 END;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY NULL, ((SQLITE_VERSION()) NOT BETWEEN (((rt0.c1)<>(rt0.c1))) AND ((NOT ('0.11298939596897095')))), ((rt0.c1)>>(TRIM(rt0.c0))) DESC  NULLS FIRST, CASE WHEN (~ (rt0.c1)) THEN (NULL IN (rt0.c0, rt0.c0)) ELSE rt0.c2 END);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY NULL, ((SQLITE_VERSION()) NOT BETWEEN (((rt0.c1)!=(rt0.c1))) AND ((NOT ('0.11298939596897095')))), ((rt0.c1)>>(TRIM(rt0.c0))) DESC  NULLS FIRST, CASE WHEN (~ (rt0.c1)) THEN (NULL IN (rt0.c0, rt0.c0)) ELSE rt0.c2 END;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY NULL, ((SQLITE_VERSION()) NOT BETWEEN (((rt0.c1)<>(rt0.c1))) AND ((NOT ('0.11298939596897095')))), ((rt0.c1)>>(TRIM(rt0.c0))) DESC  NULLS FIRST, CASE WHEN (~ (rt0.c1)) THEN (NULL IN (rt0.c0, rt0.c0)) ELSE rt0.c2 END);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY NULL, ((SQLITE_VERSION()) NOT BETWEEN (((rt0.c1)!=(rt0.c1))) AND ((NOT ('0.11298939596897095')))), ((rt0.c1)>>(TRIM(rt0.c0))) DESC  NULLS FIRST, CASE WHEN (~ (rt0.c1)) THEN (NULL IN (rt0.c0, rt0.c0)) ELSE rt0.c2 END;
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON (- (NULL)) COLLATE BINARY LEFT OUTER JOIN rt0 ON rt1.c0 WHERE (((rt1.c1 COLLATE NOCASE)/(((((((((((((rt0.c2)OR(rt0.c1)))OR(v0.c0)))AND(x'')))OR(rt0.c0)))OR(rt1.c3)))OR(rt0.c0))))) ORDER BY '' ASC  NULLS LAST, rt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE NOCASE)/(((((((((((((rt0.c2)OR(rt0.c1)))OR(v0.c0)))AND(x'')))OR(rt0.c0)))OR(rt1.c3)))OR(rt0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON (- (NULL)) COLLATE BINARY LEFT OUTER JOIN rt0 ON rt1.c0 ORDER BY '' ASC  NULLS LAST, rt1.c1 DESC);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON (- (NULL)) COLLATE BINARY LEFT OUTER JOIN rt0 ON rt1.c0 WHERE (((rt1.c1 COLLATE NOCASE)/(((((((((((((rt0.c2)OR(rt0.c1)))OR(v0.c0)))AND(x'')))OR(rt0.c0)))OR(rt1.c3)))OR(rt0.c0))))) ORDER BY '' ASC  NULLS LAST, rt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE NOCASE)/(((((((((((((rt0.c2)OR(rt0.c1)))OR(v0.c0)))AND(x'')))OR(rt0.c0)))OR(rt1.c3)))OR(rt0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON (- (NULL)) COLLATE BINARY LEFT OUTER JOIN rt0 ON rt1.c0 ORDER BY '' ASC  NULLS LAST, rt1.c1 DESC);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON (- (NULL)) COLLATE BINARY LEFT OUTER JOIN rt0 ON rt1.c0 WHERE (((rt1.c1 COLLATE NOCASE)/(((((((((((((rt0.c2)OR(rt0.c1)))OR(v0.c0)))AND(x'')))OR(rt0.c0)))OR(rt1.c3)))OR(rt0.c0))))) ORDER BY '' ASC  NULLS LAST, rt1.c1 DESC;
SELECT COUNT(*) FROM v0, rt1 WHERE (rt1.c3 COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3 COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (rt1.c3 COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3 COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (rt1.c3 COLLATE RTRIM COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (((rt0.c0) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (((rt0.c0) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (((rt0.c0) NOT NULL) COLLATE RTRIM);
SELECT ALL * FROM rt1, rt0, v0 WHERE ((IFNULL(rt1.c0, rt1.c2) IN (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c0))))) ORDER BY ((rt1.c0 IN ()) IN ()) DESC, (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c0))))IS NOT(CAST(v0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT (((IFNULL(rt1.c0, rt1.c2) IN (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((rt1.c0 IN ()) IN ()) DESC, (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c0))))IS NOT(CAST(v0.c0 AS BLOB))));
SELECT ALL * FROM rt1, rt0, v0 WHERE ((IFNULL(rt1.c0, rt1.c2) IN (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c0))))) ORDER BY ((rt1.c0 IN ()) IN ()) DESC, (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c0))))IS NOT(CAST(v0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT (((IFNULL(rt1.c0, rt1.c2) IN (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((rt1.c0 IN ()) IN ()) DESC, (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c0))))IS NOT(CAST(v0.c0 AS BLOB))));
SELECT ALL * FROM rt1, rt0, v0 WHERE ((IFNULL(rt1.c0, rt1.c2) IN (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c0))))) ORDER BY ((rt1.c0 IN ()) IN ()) DESC, (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c0))))IS NOT(CAST(v0.c0 AS BLOB)));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c1, '146870533')) BETWEEN ((CAST(rt0.c1 AS REAL), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (rt0.c1 IN ()))) AND (((rt0.c2 IN ()), ((rt0.c0)AND(rt0.c0)), ((rt0.c0) NOTNULL))))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c1, '146870533')) BETWEEN ((CAST(rt0.c1 AS REAL), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (rt0.c1 IN ()))) AND (((rt0.c2 IN ()), ((rt0.c0)AND(rt0.c0)), ((rt0.c0) NOTNULL))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c1, '146870533')) BETWEEN ((CAST(rt0.c1 AS REAL), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (rt0.c1 IN ()))) AND (((rt0.c2 IN ()), ((rt0.c0)AND(rt0.c0)), ((rt0.c0) NOTNULL))))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c1, '146870533')) BETWEEN ((CAST(rt0.c1 AS REAL), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (rt0.c1 IN ()))) AND (((rt0.c2 IN ()), ((rt0.c0)AND(rt0.c0)), ((rt0.c0) NOTNULL))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c1, '146870533')) BETWEEN ((CAST(rt0.c1 AS REAL), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), (rt0.c1 IN ()))) AND (((rt0.c2 IN ()), ((rt0.c0)AND(rt0.c0)), ((rt0.c0) NOTNULL))))) ORDER BY rt0.c1 DESC;
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((HEX(rt1.c3))OR(((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))))AND((- (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(rt1.c3))OR(((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))))AND((- (rt1.c2))))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((HEX(rt1.c3))OR(((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))))AND((- (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(rt1.c3))OR(((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))))AND((- (rt1.c2))))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((HEX(rt1.c3))OR(((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))))AND((- (rt1.c2)))));
SELECT * FROM rt0, rt1, v0 WHERE (((((((v0.c0)AND(-1.594660537E9)))AND(rt1.c1))) BETWEEN ((v0.c0 IN ())) AND (((rt1.c3)/(rt0.c1))))) ORDER BY IFNULL(DISTINCT ((rt1.c3) NOT NULL), x'ecf2') DESC  NULLS LAST, (NOT (rt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(-1.594660537E9)))AND(rt1.c1))) BETWEEN ((v0.c0 IN ())) AND (((rt1.c3)/(rt0.c1))))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY IFNULL(DISTINCT ((rt1.c3) NOT NULL), x'ecf2') DESC  NULLS LAST, (NOT (rt1.c0)) DESC  NULLS FIRST);
SELECT * FROM rt0, rt1, v0 WHERE (((((((v0.c0)AND(-1.594660537E9)))AND(rt1.c1))) BETWEEN ((v0.c0 IN ())) AND (((rt1.c3)/(rt0.c1))))) ORDER BY IFNULL(DISTINCT ((rt1.c3) NOT NULL), x'ecf2') DESC  NULLS LAST, (NOT (rt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(-1.594660537E9)))AND(rt1.c1))) BETWEEN ((v0.c0 IN ())) AND (((rt1.c3)/(rt0.c1))))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY IFNULL(DISTINCT ((rt1.c3) NOT NULL), x'ecf2') DESC  NULLS LAST, (NOT (rt1.c0)) DESC  NULLS FIRST);
SELECT * FROM rt0, rt1, v0 WHERE (((((((v0.c0)AND(-1.594660537E9)))AND(rt1.c1))) BETWEEN ((v0.c0 IN ())) AND (((rt1.c3)/(rt0.c1))))) ORDER BY IFNULL(DISTINCT ((rt1.c3) NOT NULL), x'ecf2') DESC  NULLS LAST, (NOT (rt1.c0)) DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((rt1.c3)OR(rt1.c3))) NOT BETWEEN (((rt1.c3)!=(x'4ac3'))) AND (CASE rt1.c3  WHEN rt1.c1 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)OR(rt1.c3))) NOT BETWEEN (((rt1.c3)<>(x'4ac3'))) AND (CASE rt1.c3  WHEN rt1.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c3)OR(rt1.c3))) NOT BETWEEN (((rt1.c3)!=(x'4ac3'))) AND (CASE rt1.c3  WHEN rt1.c1 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)OR(rt1.c3))) NOT BETWEEN (((rt1.c3)<>(x'4ac3'))) AND (CASE rt1.c3  WHEN rt1.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c3)OR(rt1.c3))) NOT BETWEEN (((rt1.c3)!=(x'4ac3'))) AND (CASE rt1.c3  WHEN rt1.c1 THEN rt1.c2 END)));
SELECT * FROM v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((v0.c0 IN ()));
SELECT ALL * FROM rt0 WHERE (CASE WHEN (rt0.c1 IN (rt0.c0)) THEN (((rt0.c2))>=((rt0.c0))) WHEN ((0.2858558562879778)||(rt0.c2)) THEN 1509485664 WHEN CAST(rt0.c1 AS INTEGER) THEN (NOT (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c1 IN (rt0.c0)) THEN (((rt0.c2))>=((rt0.c0))) WHEN ((0.2858558562879778)||(rt0.c2)) THEN 1509485664 WHEN CAST(rt0.c1 AS INTEGER) THEN (NOT (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN (rt0.c1 IN (rt0.c0)) THEN (((rt0.c2))>=((rt0.c0))) WHEN ((0.2858558562879778)||(rt0.c2)) THEN 1509485664 WHEN CAST(rt0.c1 AS INTEGER) THEN (NOT (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c1 IN (rt0.c0)) THEN (((rt0.c2))>=((rt0.c0))) WHEN ((0.2858558562879778)||(rt0.c2)) THEN 1509485664 WHEN CAST(rt0.c1 AS INTEGER) THEN (NOT (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN (rt0.c1 IN (rt0.c0)) THEN (((rt0.c2))>=((rt0.c0))) WHEN ((0.2858558562879778)||(rt0.c2)) THEN 1509485664 WHEN CAST(rt0.c1 AS INTEGER) THEN (NOT (rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt1, v0 NATURAL JOIN rt0 WHERE (x'8b16a204' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((x'8b16a204' COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM rt1, v0 NATURAL JOIN rt0 WHERE (x'8b16a204' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((x'8b16a204' COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM rt1, v0 NATURAL JOIN rt0 WHERE (x'8b16a204' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c0 COLLATE BINARY AS NUMERIC)) ORDER BY ((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE BINARY DESC, CAST(CAST(rt1.c0 AS INTEGER) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE BINARY DESC, CAST(CAST(rt1.c0 AS INTEGER) AS INTEGER) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c0 COLLATE BINARY AS NUMERIC)) ORDER BY ((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE BINARY DESC, CAST(CAST(rt1.c0 AS INTEGER) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE BINARY DESC, CAST(CAST(rt1.c0 AS INTEGER) AS INTEGER) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c0 COLLATE BINARY AS NUMERIC)) ORDER BY ((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE BINARY DESC, CAST(CAST(rt1.c0 AS INTEGER) AS INTEGER) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((x'') BETWEEN (((((((((rt1.c1)AND(rt1.c1)))OR(v0.c0)))AND(rt1.c3)))AND(rt1.c1))) AND (ABS(DISTINCT rt1.c3)))) ORDER BY (- (((rt1.c2)|(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (((((((((rt1.c1)AND(rt1.c1)))OR(v0.c0)))AND(rt1.c3)))AND(rt1.c1))) AND (ABS(DISTINCT rt1.c3)))) IS TRUE)  as count FROM rt1, v0 ORDER BY (- (((rt1.c2)|(rt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((x'') BETWEEN (((((((((rt1.c1)AND(rt1.c1)))OR(v0.c0)))AND(rt1.c3)))AND(rt1.c1))) AND (ABS(DISTINCT rt1.c3)))) ORDER BY (- (((rt1.c2)|(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (((((((((rt1.c1)AND(rt1.c1)))OR(v0.c0)))AND(rt1.c3)))AND(rt1.c1))) AND (ABS(DISTINCT rt1.c3)))) IS TRUE)  as count FROM rt1, v0 ORDER BY (- (((rt1.c2)|(rt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((x'') BETWEEN (((((((((rt1.c1)AND(rt1.c1)))OR(v0.c0)))AND(rt1.c3)))AND(rt1.c1))) AND (ABS(DISTINCT rt1.c3)))) ORDER BY (- (((rt1.c2)|(rt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0)<=(rt0.c0))) NOT BETWEEN ((((rt0.c1))>=((rt0.c2)))) AND (UPPER(rt0.c2))) WHERE (LOWER(rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(rt0.c2)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0)<=(rt0.c0))) NOT BETWEEN ((((rt0.c1))>=((rt0.c2)))) AND (UPPER(rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0)<=(rt0.c0))) NOT BETWEEN ((((rt0.c1))>=((rt0.c2)))) AND (UPPER(rt0.c2))) WHERE (LOWER(rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(rt0.c2)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0)<=(rt0.c0))) NOT BETWEEN ((((rt0.c1))>=((rt0.c2)))) AND (UPPER(rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0)<=(rt0.c0))) NOT BETWEEN ((((rt0.c1))>=((rt0.c2)))) AND (UPPER(rt0.c2))) WHERE (LOWER(rt0.c2));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c0 COLLATE RTRIM) ORDER BY (((((v0.c0) ISNULL)))<(((- (rt0.c1))))), (((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL))))<(rt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((v0.c0) ISNULL)))<(((- (rt0.c1))))), (((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL))))<(rt0.c1)) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c0 COLLATE RTRIM) ORDER BY (((((v0.c0) ISNULL)))<(((- (rt0.c1))))), (((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL))))<(rt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((v0.c0) ISNULL)))<(((- (rt0.c1))))), (((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL))))<(rt0.c1)) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c0 COLLATE RTRIM) ORDER BY (((((v0.c0) ISNULL)))<(((- (rt0.c1))))), (((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL))))<(rt0.c1)) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))AND(-1050270657)))LIKE(((rt0.c0) BETWEEN ('2123395326') AND (rt0.c2))))) ORDER BY rt0.c2 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c0)))AND(-1050270657)))LIKE(((rt0.c0) BETWEEN ('2123395326') AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))AND(-1050270657)))LIKE(((rt0.c0) BETWEEN ('2123395326') AND (rt0.c2))))) ORDER BY rt0.c2 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c0)))AND(-1050270657)))LIKE(((rt0.c0) BETWEEN ('2123395326') AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))AND(-1050270657)))LIKE(((rt0.c0) BETWEEN ('2123395326') AND (rt0.c2))))) ORDER BY rt0.c2 COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON ((QUOTE(rt0.c1)) BETWEEN (((rt1.c1) IS FALSE)) AND ((- ('461192063')))) WHERE (rt1.c0) ORDER BY (- (rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((QUOTE(rt0.c1)) BETWEEN (((rt1.c1) IS FALSE)) AND ((- ('461192063')))) ORDER BY (- (rt0.c1))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON ((QUOTE(rt0.c1)) BETWEEN (((rt1.c1) IS FALSE)) AND ((- ('461192063')))) WHERE (rt1.c0) ORDER BY (- (rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((QUOTE(rt0.c1)) BETWEEN (((rt1.c1) IS FALSE)) AND ((- ('461192063')))) ORDER BY (- (rt0.c1))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON ((QUOTE(rt0.c1)) BETWEEN (((rt1.c1) IS FALSE)) AND ((- ('461192063')))) WHERE (rt1.c0) ORDER BY (- (rt0.c1))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(rt0.c2) COLLATE RTRIM) ORDER BY ((rt0.c1)IS NOT(rt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(rt0.c2) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)IS NOT(rt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(rt0.c2) COLLATE RTRIM) ORDER BY ((rt0.c1)IS NOT(rt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(rt0.c2) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)IS NOT(rt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(rt0.c2) COLLATE RTRIM) ORDER BY ((rt0.c1)IS NOT(rt0.c0)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (((rt1.c0)) NOT BETWEEN (((('455605778') ISNULL))) AND ((v0.c0))) CROSS JOIN v0 ON ((rt1.c2)==(rt1.c0)) COLLATE NOCASE WHERE (2.77253234E8);
SELECT SUM(count) FROM (SELECT ((2.77253234E8) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (((rt1.c0)) NOT BETWEEN (((('455605778') ISNULL))) AND ((v0.c0))) CROSS JOIN v0 ON ((rt1.c2)==(rt1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (((rt1.c0)) NOT BETWEEN (((('455605778') ISNULL))) AND ((v0.c0))) CROSS JOIN v0 ON ((rt1.c2)==(rt1.c0)) COLLATE NOCASE WHERE (2.77253234E8);
SELECT SUM(count) FROM (SELECT ((2.77253234E8) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (((rt1.c0)) NOT BETWEEN (((('455605778') ISNULL))) AND ((v0.c0))) CROSS JOIN v0 ON ((rt1.c2)==(rt1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (((rt1.c0)) NOT BETWEEN (((('455605778') ISNULL))) AND ((v0.c0))) CROSS JOIN v0 ON ((rt1.c2)==(rt1.c0)) COLLATE NOCASE WHERE (2.77253234E8);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt1 ON ((3.3624742E8)-((((rt1.c0))>=((rt1.c3))))) WHERE (CAST(CASE WHEN rt1.c0 THEN v0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c0 THEN v0.c0 END AS NUMERIC)) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON ((3.3624742E8)-((((rt1.c0))>=((rt1.c3))))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt1 ON ((3.3624742E8)-((((rt1.c0))>=((rt1.c3))))) WHERE (CAST(CASE WHEN rt1.c0 THEN v0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c0 THEN v0.c0 END AS NUMERIC)) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON ((3.3624742E8)-((((rt1.c0))>=((rt1.c3))))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt1 ON ((3.3624742E8)-((((rt1.c0))>=((rt1.c3))))) WHERE (CAST(CASE WHEN rt1.c0 THEN v0.c0 END AS NUMERIC));
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (((NULL) BETWEEN ((rt0.c0 IN ())) AND (((((((((rt1.c0)AND(rt1.c2)))OR(v0.c0)))OR(rt1.c1)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN ((rt0.c0 IN ())) AND (((((((((rt1.c0)AND(rt1.c2)))OR(v0.c0)))OR(rt1.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (((NULL) BETWEEN ((rt0.c0 IN ())) AND (((((((((rt1.c0)AND(rt1.c2)))OR(v0.c0)))OR(rt1.c1)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN ((rt0.c0 IN ())) AND (((((((((rt1.c0)AND(rt1.c2)))OR(v0.c0)))OR(rt1.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (((NULL) BETWEEN ((rt0.c0 IN ())) AND (((((((((rt1.c0)AND(rt1.c2)))OR(v0.c0)))OR(rt1.c1)))OR(rt0.c0)))));
SELECT ALL * FROM v0, rt1 CROSS JOIN rt0 ON (((((rt0.c2))>((rt0.c0)))) BETWEEN (((((((((rt1.c1)AND(rt0.c2)))AND(rt0.c2)))OR('vV忹pht')))AND(rt0.c2))) AND (rt0.c1 COLLATE BINARY)) WHERE (CAST(IFNULL(0.27688058062849163, rt0.c1) AS TEXT)) ORDER BY ((((((((((((((((rt1.c3)OR(rt1.c0)))AND(rt1.c3)))AND(rt0.c0)))OR(v0.c0)))AND(((((v0.c0)AND(rt0.c1)))OR(v0.c0)))))AND((~ (NULL)))))AND(((rt1.c3)IS(rt0.c0)))))OR((((rt0.c1)) BETWEEN ((rt1.c0)) AND ((0.19019854889958931))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(IFNULL(0.27688058062849163, rt0.c1) AS TEXT)) IS TRUE)  as count FROM v0, rt1 CROSS JOIN rt0 ON (((((rt0.c2))>((rt0.c0)))) BETWEEN (((((((((rt1.c1)AND(rt0.c2)))AND(rt0.c2)))OR('vV忹pht')))AND(rt0.c2))) AND (rt0.c1 COLLATE BINARY)) ORDER BY ((((((((((((((((rt1.c3)OR(rt1.c0)))AND(rt1.c3)))AND(rt0.c0)))OR(v0.c0)))AND(((((v0.c0)AND(rt0.c1)))OR(v0.c0)))))AND((~ (NULL)))))AND(((rt1.c3)IS(rt0.c0)))))OR((((rt0.c1)) BETWEEN ((rt1.c0)) AND ((0.19019854889958931))))) DESC);
SELECT ALL * FROM v0, rt1 CROSS JOIN rt0 ON (((((rt0.c2))>((rt0.c0)))) BETWEEN (((((((((rt1.c1)AND(rt0.c2)))AND(rt0.c2)))OR('vV忹pht')))AND(rt0.c2))) AND (rt0.c1 COLLATE BINARY)) WHERE (CAST(IFNULL(0.27688058062849163, rt0.c1) AS TEXT)) ORDER BY ((((((((((((((((rt1.c3)OR(rt1.c0)))AND(rt1.c3)))AND(rt0.c0)))OR(v0.c0)))AND(((((v0.c0)AND(rt0.c1)))OR(v0.c0)))))AND((~ (NULL)))))AND(((rt1.c3)IS(rt0.c0)))))OR((((rt0.c1)) BETWEEN ((rt1.c0)) AND ((0.19019854889958931))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(IFNULL(0.27688058062849163, rt0.c1) AS TEXT)) IS TRUE)  as count FROM v0, rt1 CROSS JOIN rt0 ON (((((rt0.c2))>((rt0.c0)))) BETWEEN (((((((((rt1.c1)AND(rt0.c2)))AND(rt0.c2)))OR('vV忹pht')))AND(rt0.c2))) AND (rt0.c1 COLLATE BINARY)) ORDER BY ((((((((((((((((rt1.c3)OR(rt1.c0)))AND(rt1.c3)))AND(rt0.c0)))OR(v0.c0)))AND(((((v0.c0)AND(rt0.c1)))OR(v0.c0)))))AND((~ (NULL)))))AND(((rt1.c3)IS(rt0.c0)))))OR((((rt0.c1)) BETWEEN ((rt1.c0)) AND ((0.19019854889958931))))) DESC);
SELECT ALL * FROM v0, rt1 CROSS JOIN rt0 ON (((((rt0.c2))>((rt0.c0)))) BETWEEN (((((((((rt1.c1)AND(rt0.c2)))AND(rt0.c2)))OR('vV忹pht')))AND(rt0.c2))) AND (rt0.c1 COLLATE BINARY)) WHERE (CAST(IFNULL(0.27688058062849163, rt0.c1) AS TEXT)) ORDER BY ((((((((((((((((rt1.c3)OR(rt1.c0)))AND(rt1.c3)))AND(rt0.c0)))OR(v0.c0)))AND(((((v0.c0)AND(rt0.c1)))OR(v0.c0)))))AND((~ (NULL)))))AND(((rt1.c3)IS(rt0.c0)))))OR((((rt0.c1)) BETWEEN ((rt1.c0)) AND ((0.19019854889958931))))) DESC;
SELECT ALL * FROM v0, rt0, rt1 WHERE (CASE ((((rt0.c2)AND(rt0.c1)))OR(rt1.c1))  WHEN ((v0.c0)GLOB(rt0.c1)) THEN (NOT (NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c2)AND(rt0.c1)))OR(rt1.c1))  WHEN ((v0.c0)GLOB(rt0.c1)) THEN (NOT (NULL)) END) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE (CASE ((((rt0.c2)AND(rt0.c1)))OR(rt1.c1))  WHEN ((v0.c0)GLOB(rt0.c1)) THEN (NOT (NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c2)AND(rt0.c1)))OR(rt1.c1))  WHEN ((v0.c0)GLOB(rt0.c1)) THEN (NOT (NULL)) END) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE (CASE ((((rt0.c2)AND(rt0.c1)))OR(rt1.c1))  WHEN ((v0.c0)GLOB(rt0.c1)) THEN (NOT (NULL)) END);
SELECT * FROM v0, rt0, rt1 WHERE (CASE x''  WHEN ((rt1.c0)<<(rt0.c0)) THEN '-703275214' ELSE (rt0.c2 IN ()) END) ORDER BY rt1.c3, ((((rt1.c2)=('-1452386761'))) IS FALSE)  NULLS FIRST, GLOB(((((((((NULL)AND(rt1.c3)))AND(rt0.c1)))AND(0.43470360645949746)))AND(rt1.c2)), (((rt0.c2))>=((rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN ((rt1.c0)<<(rt0.c0)) THEN '-703275214' ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY rt1.c3, ((((rt1.c2)==('-1452386761'))) IS FALSE)  NULLS FIRST, GLOB(((((((((NULL)AND(rt1.c3)))AND(rt0.c1)))AND(0.43470360645949746)))AND(rt1.c2)), (((rt0.c2))>=((rt1.c1))))  NULLS FIRST);
SELECT * FROM v0, rt0, rt1 WHERE (CASE x''  WHEN ((rt1.c0)<<(rt0.c0)) THEN '-703275214' ELSE (rt0.c2 IN ()) END) ORDER BY rt1.c3, ((((rt1.c2)=('-1452386761'))) IS FALSE)  NULLS FIRST, GLOB(((((((((NULL)AND(rt1.c3)))AND(rt0.c1)))AND(0.43470360645949746)))AND(rt1.c2)), (((rt0.c2))>=((rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN ((rt1.c0)<<(rt0.c0)) THEN '-703275214' ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY rt1.c3, ((((rt1.c2)==('-1452386761'))) IS FALSE)  NULLS FIRST, GLOB(((((((((NULL)AND(rt1.c3)))AND(rt0.c1)))AND(0.43470360645949746)))AND(rt1.c2)), (((rt0.c2))>=((rt1.c1))))  NULLS FIRST);
SELECT * FROM v0, rt0, rt1 WHERE (CASE x''  WHEN ((rt1.c0)<<(rt0.c0)) THEN '-703275214' ELSE (rt0.c2 IN ()) END) ORDER BY rt1.c3, ((((rt1.c2)=('-1452386761'))) IS FALSE)  NULLS FIRST, GLOB(((((((((NULL)AND(rt1.c3)))AND(rt0.c1)))AND(0.43470360645949746)))AND(rt1.c2)), (((rt0.c2))>=((rt1.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((((rt0.c1)-(rt1.c0)))&((+ (rt1.c2)))) FULL OUTER JOIN rt1 ON '&d4\>' WHERE ('TRUE') ORDER BY CASE WHEN (rt1.c0 IN ()) THEN ((rt0.c2) NOT NULL) WHEN (((rt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN (NOT (NULL)) WHEN rt0.c2 COLLATE NOCASE THEN CASE rt0.c1  WHEN rt1.c2 THEN rt1.c2 WHEN '' THEN NULL WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c0 END WHEN ((rt1.c3)<(rt1.c0)) THEN ((rt1.c3) IS FALSE) WHEN (rt1.c3 IN ()) THEN LIKELY(rt1.c2) END DESC;
SELECT SUM(count) FROM (SELECT ALL (('TRUE') IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((rt0.c1)-(rt1.c0)))&((+ (rt1.c2)))) FULL OUTER JOIN rt1 ON '&d4\>' ORDER BY CASE WHEN (rt1.c0 IN ()) THEN ((rt0.c2) NOT NULL) WHEN (((rt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN (NOT (NULL)) WHEN rt0.c2 COLLATE NOCASE THEN CASE rt0.c1  WHEN rt1.c2 THEN rt1.c2 WHEN '' THEN NULL WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c0 END WHEN ((rt1.c3)<(rt1.c0)) THEN ((rt1.c3) IS FALSE) WHEN (rt1.c3 IN ()) THEN LIKELY(rt1.c2) END DESC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((((rt0.c1)-(rt1.c0)))&((+ (rt1.c2)))) FULL OUTER JOIN rt1 ON '&d4\>' WHERE ('TRUE') ORDER BY CASE WHEN (rt1.c0 IN ()) THEN ((rt0.c2) NOT NULL) WHEN (((rt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN (NOT (NULL)) WHEN rt0.c2 COLLATE NOCASE THEN CASE rt0.c1  WHEN rt1.c2 THEN rt1.c2 WHEN '' THEN NULL WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c0 END WHEN ((rt1.c3)<(rt1.c0)) THEN ((rt1.c3) IS FALSE) WHEN (rt1.c3 IN ()) THEN LIKELY(rt1.c2) END DESC;
SELECT SUM(count) FROM (SELECT ALL (('TRUE') IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((rt0.c1)-(rt1.c0)))&((+ (rt1.c2)))) FULL OUTER JOIN rt1 ON '&d4\>' ORDER BY CASE WHEN (rt1.c0 IN ()) THEN ((rt0.c2) NOT NULL) WHEN (((rt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN (NOT (NULL)) WHEN rt0.c2 COLLATE NOCASE THEN CASE rt0.c1  WHEN rt1.c2 THEN rt1.c2 WHEN '' THEN NULL WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c0 END WHEN ((rt1.c3)<(rt1.c0)) THEN ((rt1.c3) IS FALSE) WHEN (rt1.c3 IN ()) THEN LIKELY(rt1.c2) END DESC);
SELECT ALL * FROM rt1, v0, rt0 WHERE (CAST(((rt0.c0)LIKE(rt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)LIKE(rt1.c1)) AS REAL)) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL * FROM rt1, v0, rt0 WHERE (CAST(((rt0.c0)LIKE(rt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)LIKE(rt1.c1)) AS REAL)) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL * FROM rt1, v0, rt0 WHERE (CAST(((rt0.c0)LIKE(rt1.c1)) AS REAL));
SELECT COUNT(*) FROM v0, rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 NOT INDEXED);
SELECT COUNT(*) FROM v0, rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 NOT INDEXED);
SELECT COUNT(*) FROM v0, rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((- (rt0.c2))) BETWEEN (rt0.c1) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY ((LIKELY(DISTINCT rt0.c0)) BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) AND ((v0.c0 IN ()))) ASC  NULLS FIRST, ((v0.c0)*(rt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2))) BETWEEN (rt0.c1) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((LIKELY(DISTINCT rt0.c0)) BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) AND ((v0.c0 IN ()))) ASC  NULLS FIRST, ((v0.c0)*(rt0.c0)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((- (rt0.c2))) BETWEEN (rt0.c1) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY ((LIKELY(DISTINCT rt0.c0)) BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) AND ((v0.c0 IN ()))) ASC  NULLS FIRST, ((v0.c0)*(rt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2))) BETWEEN (rt0.c1) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((LIKELY(DISTINCT rt0.c0)) BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) AND ((v0.c0 IN ()))) ASC  NULLS FIRST, ((v0.c0)*(rt0.c0)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((- (rt0.c2))) BETWEEN (rt0.c1) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY ((LIKELY(DISTINCT rt0.c0)) BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) AND ((v0.c0 IN ()))) ASC  NULLS FIRST, ((v0.c0)*(rt0.c0)) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((rt0.c2) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) ISNULL) AS TEXT)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((rt0.c2) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) ISNULL) AS TEXT)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((rt0.c2) ISNULL) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (v0.c0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (((((v0.c0) NOT NULL)) NOT BETWEEN (ABS(rt1.c0)) AND (v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT NULL)) NOT BETWEEN (ABS(rt1.c0)) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (((((v0.c0) NOT NULL)) NOT BETWEEN (ABS(rt1.c0)) AND (v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT NULL)) NOT BETWEEN (ABS(rt1.c0)) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (((((v0.c0) NOT NULL)) NOT BETWEEN (ABS(rt1.c0)) AND (v0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON CAST(CASE rt0.c0  WHEN rt1.c3 THEN x'3e08' END AS BLOB) INNER JOIN rt0 ON ((((((((rt1.c0)OR(rt1.c2)))AND(x'')))AND((- (rt0.c0)))))AND((((x'', v0.c0, 0.5781303399866111))>=((rt1.c3, rt1.c0, rt1.c1))))) WHERE ((((v0.c0 IN (rt1.c0))) IS TRUE)) ORDER BY (~ (HEX(rt1.c3))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (rt1.c0))) IS TRUE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON CAST(CASE rt0.c0  WHEN rt1.c3 THEN x'3e08' END AS BLOB) INNER JOIN rt0 ON ((((((((rt1.c0)OR(rt1.c2)))AND(x'')))AND((- (rt0.c0)))))AND((((x'', v0.c0, 0.5781303399866111))>=((rt1.c3, rt1.c0, rt1.c1))))) ORDER BY (~ (HEX(rt1.c3))) ASC);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON CAST(CASE rt0.c0  WHEN rt1.c3 THEN x'3e08' END AS BLOB) INNER JOIN rt0 ON ((((((((rt1.c0)OR(rt1.c2)))AND(x'')))AND((- (rt0.c0)))))AND((((x'', v0.c0, 0.5781303399866111))>=((rt1.c3, rt1.c0, rt1.c1))))) WHERE ((((v0.c0 IN (rt1.c0))) IS TRUE)) ORDER BY (~ (HEX(rt1.c3))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (rt1.c0))) IS TRUE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON CAST(CASE rt0.c0  WHEN rt1.c3 THEN x'3e08' END AS BLOB) INNER JOIN rt0 ON ((((((((rt1.c0)OR(rt1.c2)))AND(x'')))AND((- (rt0.c0)))))AND((((x'', v0.c0, 0.5781303399866111))>=((rt1.c3, rt1.c0, rt1.c1))))) ORDER BY (~ (HEX(rt1.c3))) ASC);
SELECT * FROM rt0 WHERE (MIN(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)), ((rt0.c2)<=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((MIN(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)), ((rt0.c2)<=(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (MIN(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)), ((rt0.c2)<=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((MIN(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)), ((rt0.c2)<=(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (MIN(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)), ((rt0.c2)<=(rt0.c0))));
SELECT ALL * FROM v0 WHERE (CAST((v0.c0 IN ()) AS NUMERIC)) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((((v0.c0)OR(v0.c0)))AND('-1142319060')) END  NULLS FIRST, ((((v0.c0) ISNULL)) BETWEEN (v0.c0) AND (v0.c0 COLLATE NOCASE))  NULLS FIRST, (NOT ((- (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((((v0.c0)OR(v0.c0)))AND('-1142319060')) END  NULLS FIRST, ((((v0.c0) ISNULL)) BETWEEN (v0.c0) AND (v0.c0 COLLATE NOCASE))  NULLS FIRST, (NOT ((- (v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST((v0.c0 IN ()) AS NUMERIC)) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((((v0.c0)OR(v0.c0)))AND('-1142319060')) END  NULLS FIRST, ((((v0.c0) ISNULL)) BETWEEN (v0.c0) AND (v0.c0 COLLATE NOCASE))  NULLS FIRST, (NOT ((- (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((((v0.c0)OR(v0.c0)))AND('-1142319060')) END  NULLS FIRST, ((((v0.c0) ISNULL)) BETWEEN (v0.c0) AND (v0.c0 COLLATE NOCASE))  NULLS FIRST, (NOT ((- (v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST((v0.c0 IN ()) AS NUMERIC)) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((((v0.c0)OR(v0.c0)))AND('-1142319060')) END  NULLS FIRST, ((((v0.c0) ISNULL)) BETWEEN (v0.c0) AND (v0.c0 COLLATE NOCASE))  NULLS FIRST, (NOT ((- (v0.c0))))  NULLS FIRST;
SELECT * FROM rt0, v0 FULL OUTER JOIN rt1 ON ((v0.c0) BETWEEN (rt0.c2) AND (rt1.c1)) COLLATE NOCASE WHERE ((((((rt0.c1) IS TRUE), LIKELIHOOD(rt1.c3, 0.3404222638561333), ((rt0.c2) ISNULL)))<((rt0.c1 COLLATE NOCASE, CAST(rt0.c2 AS INTEGER), SQLITE_COMPILEOPTION_GET(rt1.c1))))) ORDER BY CASE (~ (rt1.c1))  WHEN 333879124 THEN rt0.c0 ELSE ((v0.c0) IS TRUE) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1) IS TRUE), LIKELIHOOD(rt1.c3, 0.3404222638561333), ((rt0.c2) ISNULL)))<((rt0.c1 COLLATE NOCASE, CAST(rt0.c2 AS INTEGER), SQLITE_COMPILEOPTION_GET(rt1.c1))))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN rt1 ON ((v0.c0) BETWEEN (rt0.c2) AND (rt1.c1)) COLLATE NOCASE ORDER BY CASE (~ (rt1.c1))  WHEN 333879124 THEN rt0.c0 ELSE ((v0.c0) IS TRUE) END  NULLS FIRST);
SELECT * FROM rt0, v0 FULL OUTER JOIN rt1 ON ((v0.c0) BETWEEN (rt0.c2) AND (rt1.c1)) COLLATE NOCASE WHERE ((((((rt0.c1) IS TRUE), LIKELIHOOD(rt1.c3, 0.3404222638561333), ((rt0.c2) ISNULL)))<((rt0.c1 COLLATE NOCASE, CAST(rt0.c2 AS INTEGER), SQLITE_COMPILEOPTION_GET(rt1.c1))))) ORDER BY CASE (~ (rt1.c1))  WHEN 333879124 THEN rt0.c0 ELSE ((v0.c0) IS TRUE) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1) IS TRUE), LIKELIHOOD(rt1.c3, 0.3404222638561333), ((rt0.c2) ISNULL)))<((rt0.c1 COLLATE NOCASE, CAST(rt0.c2 AS INTEGER), SQLITE_COMPILEOPTION_GET(rt1.c1))))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN rt1 ON ((v0.c0) BETWEEN (rt0.c2) AND (rt1.c1)) COLLATE NOCASE ORDER BY CASE (~ (rt1.c1))  WHEN 333879124 THEN rt0.c0 ELSE ((v0.c0) IS TRUE) END  NULLS FIRST);
SELECT * FROM rt0, v0 FULL OUTER JOIN rt1 ON ((v0.c0) BETWEEN (rt0.c2) AND (rt1.c1)) COLLATE NOCASE WHERE ((((((rt0.c1) IS TRUE), LIKELIHOOD(rt1.c3, 0.3404222638561333), ((rt0.c2) ISNULL)))<((rt0.c1 COLLATE NOCASE, CAST(rt0.c2 AS INTEGER), SQLITE_COMPILEOPTION_GET(rt1.c1))))) ORDER BY CASE (~ (rt1.c1))  WHEN 333879124 THEN rt0.c0 ELSE ((v0.c0) IS TRUE) END  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE ((~ ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (rt0.c0))))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE ((~ ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (rt0.c0))))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE ((~ ((~ (rt0.c0)))));
SELECT * FROM v0, rt0, rt1 WHERE (CAST('eF&2FFQ' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST('eF&2FFQ' AS NUMERIC)) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT * FROM v0, rt0, rt1 WHERE (CAST('eF&2FFQ' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST('eF&2FFQ' AS NUMERIC)) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT * FROM v0, rt0, rt1 WHERE (CAST('eF&2FFQ' AS NUMERIC));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM) ORDER BY ((((('')) BETWEEN ((x'')) AND ((rt0.c2))))<>((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, x'ce11')) AND ((rt0.c2, rt0.c0, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((('')) BETWEEN ((x'')) AND ((rt0.c2))))!=((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, x'ce11')) AND ((rt0.c2, rt0.c0, rt0.c2))))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM) ORDER BY ((((('')) BETWEEN ((x'')) AND ((rt0.c2))))<>((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, x'ce11')) AND ((rt0.c2, rt0.c0, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((('')) BETWEEN ((x'')) AND ((rt0.c2))))!=((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, x'ce11')) AND ((rt0.c2, rt0.c0, rt0.c2))))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM) ORDER BY ((((('')) BETWEEN ((x'')) AND ((rt0.c2))))<>((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, x'ce11')) AND ((rt0.c2, rt0.c0, rt0.c2)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((NULL))<>((rt1.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL))<>((rt1.c0)))) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((NULL))<>((rt1.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL))<>((rt1.c0)))) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((NULL))<>((rt1.c0)))) NOT NULL));
SELECT * FROM rt1 WHERE ((- (((rt1.c0)LIKE(rt1.c0))))) ORDER BY CASE WHEN ((rt1.c3) NOT NULL) THEN rt1.c3 COLLATE BINARY WHEN CAST('1151529479' AS TEXT) THEN CASE rt1.c3  WHEN rt1.c2 THEN rt1.c2 END WHEN ((rt1.c3)%(rt1.c2)) THEN ((((rt1.c3)AND(rt1.c0)))AND(rt1.c3)) ELSE ((rt1.c1)>(rt1.c3)) END;
SELECT SUM(count) FROM (SELECT (((- (((rt1.c0)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((rt1.c3) NOT NULL) THEN rt1.c3 COLLATE BINARY WHEN CAST('1151529479' AS TEXT) THEN CASE rt1.c3  WHEN rt1.c2 THEN rt1.c2 END WHEN ((rt1.c3)%(rt1.c2)) THEN ((((rt1.c3)AND(rt1.c0)))AND(rt1.c3)) ELSE ((rt1.c1)>(rt1.c3)) END);
SELECT * FROM rt1 WHERE ((- (((rt1.c0)LIKE(rt1.c0))))) ORDER BY CASE WHEN ((rt1.c3) NOT NULL) THEN rt1.c3 COLLATE BINARY WHEN CAST('1151529479' AS TEXT) THEN CASE rt1.c3  WHEN rt1.c2 THEN rt1.c2 END WHEN ((rt1.c3)%(rt1.c2)) THEN ((((rt1.c3)AND(rt1.c0)))AND(rt1.c3)) ELSE ((rt1.c1)>(rt1.c3)) END;
SELECT SUM(count) FROM (SELECT (((- (((rt1.c0)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((rt1.c3) NOT NULL) THEN rt1.c3 COLLATE BINARY WHEN CAST('1151529479' AS TEXT) THEN CASE rt1.c3  WHEN rt1.c2 THEN rt1.c2 END WHEN ((rt1.c3)%(rt1.c2)) THEN ((((rt1.c3)AND(rt1.c0)))AND(rt1.c3)) ELSE ((rt1.c1)>(rt1.c3)) END);
SELECT * FROM rt1 WHERE ((- (((rt1.c0)LIKE(rt1.c0))))) ORDER BY CASE WHEN ((rt1.c3) NOT NULL) THEN rt1.c3 COLLATE BINARY WHEN CAST('1151529479' AS TEXT) THEN CASE rt1.c3  WHEN rt1.c2 THEN rt1.c2 END WHEN ((rt1.c3)%(rt1.c2)) THEN ((((rt1.c3)AND(rt1.c0)))AND(rt1.c3)) ELSE ((rt1.c1)>(rt1.c3)) END;
SELECT ALL * FROM v0 WHERE ('') ORDER BY ((v0.c0)&(v0.c0)) COLLATE NOCASE, v0.c0 DESC, UPPER((v0.c0 IN ())) DESC, (NOT ((+ (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)&(v0.c0)) COLLATE NOCASE, v0.c0 DESC, UPPER((v0.c0 IN ())) DESC, (NOT ((+ (v0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ('') ORDER BY ((v0.c0)&(v0.c0)) COLLATE NOCASE, v0.c0 DESC, UPPER((v0.c0 IN ())) DESC, (NOT ((+ (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)&(v0.c0)) COLLATE NOCASE, v0.c0 DESC, UPPER((v0.c0 IN ())) DESC, (NOT ((+ (v0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ('') ORDER BY ((v0.c0)&(v0.c0)) COLLATE NOCASE, v0.c0 DESC, UPPER((v0.c0 IN ())) DESC, (NOT ((+ (v0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE ((rt0.c1 COLLATE NOCASE IN ())) ORDER BY rt0.c2 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY rt0.c2 COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE ((rt0.c1 COLLATE NOCASE IN ())) ORDER BY rt0.c2 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY rt0.c2 COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE ((rt0.c1 COLLATE NOCASE IN ())) ORDER BY rt0.c2 COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE ((CAST(rt0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE ((CAST(rt0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE ((CAST(rt0.c0 AS TEXT) IN ()));
SELECT * FROM rt1, rt0 WHERE ((((0.542802838810007)) BETWEEN ((((((((((rt1.c2)OR(rt0.c2)))AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c3)))) AND ((CASE WHEN '-1' THEN rt1.c0 ELSE rt0.c1 END)))) ORDER BY (-1.335719226E9 IN (rt0.c1));
SELECT SUM(count) FROM (SELECT ALL (((((0.542802838810007)) BETWEEN ((((((((((rt1.c2)OR(rt0.c2)))AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c3)))) AND ((CASE WHEN '-1' THEN rt1.c0 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (-1.335719226E9 IN (rt0.c1)));
SELECT * FROM rt1, rt0 WHERE ((((0.542802838810007)) BETWEEN ((((((((((rt1.c2)OR(rt0.c2)))AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c3)))) AND ((CASE WHEN '-1' THEN rt1.c0 ELSE rt0.c1 END)))) ORDER BY (-1.335719226E9 IN (rt0.c1));
SELECT SUM(count) FROM (SELECT ALL (((((0.542802838810007)) BETWEEN ((((((((((rt1.c2)OR(rt0.c2)))AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c3)))) AND ((CASE WHEN '-1' THEN rt1.c0 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (-1.335719226E9 IN (rt0.c1)));
SELECT * FROM rt1, rt0 WHERE ((((0.542802838810007)) BETWEEN ((((((((((rt1.c2)OR(rt0.c2)))AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c3)))) AND ((CASE WHEN '-1' THEN rt1.c0 ELSE rt0.c1 END)))) ORDER BY (-1.335719226E9 IN (rt0.c1));
SELECT * FROM v0 WHERE (UPPER((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((~ (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (UPPER((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((~ (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (UPPER((~ (v0.c0))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON ((((rt0.c0) IS TRUE)) IS FALSE) RIGHT OUTER JOIN rt0 ON (((NULL)IS NOT(0.17829249428053395)) IN (CASE WHEN rt0.c1 THEN NULL ELSE rt0.c1 END)) WHERE (CAST(ABS(v0.c0) AS INTEGER)) ORDER BY (((((rt1.c0)AND(rt0.c2)))AND(rt1.c1)) IN (UPPER(rt0.c0)))  NULLS LAST, rt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(ABS(v0.c0) AS INTEGER)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON ((((rt0.c0) IS TRUE)) IS FALSE) RIGHT OUTER JOIN rt0 ON (((NULL)IS NOT(0.17829249428053395)) IN (CASE WHEN rt0.c1 THEN NULL ELSE rt0.c1 END)) ORDER BY (((((rt1.c0)AND(rt0.c2)))AND(rt1.c1)) IN (UPPER(rt0.c0)))  NULLS LAST, rt1.c1  NULLS LAST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON ((((rt0.c0) IS TRUE)) IS FALSE) RIGHT OUTER JOIN rt0 ON (((NULL)IS NOT(0.17829249428053395)) IN (CASE WHEN rt0.c1 THEN NULL ELSE rt0.c1 END)) WHERE (CAST(ABS(v0.c0) AS INTEGER)) ORDER BY (((((rt1.c0)AND(rt0.c2)))AND(rt1.c1)) IN (UPPER(rt0.c0)))  NULLS LAST, rt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(ABS(v0.c0) AS INTEGER)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON ((((rt0.c0) IS TRUE)) IS FALSE) RIGHT OUTER JOIN rt0 ON (((NULL)IS NOT(0.17829249428053395)) IN (CASE WHEN rt0.c1 THEN NULL ELSE rt0.c1 END)) ORDER BY (((((rt1.c0)AND(rt0.c2)))AND(rt1.c1)) IN (UPPER(rt0.c0)))  NULLS LAST, rt1.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)AND(((0.9309723177374121)||(rt1.c3)))))OR(0Xb497772)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)AND(((0.9309723177374121)||(rt1.c3)))))OR(0xb497772))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)AND(((0.9309723177374121)||(rt1.c3)))))OR(0Xb497772)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)AND(((0.9309723177374121)||(rt1.c3)))))OR(0xb497772))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)AND(((0.9309723177374121)||(rt1.c3)))))OR(0Xb497772)));
SELECT ALL * FROM rt0 WHERE (IFNULL(DISTINCT (rt0.c2 IN ()), ((rt0.c0)IS(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT (rt0.c2 IN ()), ((rt0.c0)IS(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (IFNULL(DISTINCT (rt0.c2 IN ()), ((rt0.c0)IS(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT (rt0.c2 IN ()), ((rt0.c0)IS(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (IFNULL(DISTINCT (rt0.c2 IN ()), ((rt0.c0)IS(rt0.c1))));
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c1 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c1 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c1 AS NUMERIC) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (LENGTH(CASE rt1.c2  WHEN rt1.c1 THEN NULL ELSE rt1.c0 END));
SELECT SUM(count) FROM (SELECT ((LENGTH(CASE rt1.c2  WHEN rt1.c1 THEN NULL ELSE rt1.c0 END)) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (LENGTH(CASE rt1.c2  WHEN rt1.c1 THEN NULL ELSE rt1.c0 END));
SELECT SUM(count) FROM (SELECT ((LENGTH(CASE rt1.c2  WHEN rt1.c1 THEN NULL ELSE rt1.c0 END)) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (LENGTH(CASE rt1.c2  WHEN rt1.c1 THEN NULL ELSE rt1.c0 END));
SELECT * FROM rt0 WHERE (((((((((x'')OR('-581537331' COLLATE RTRIM)))AND((rt0.c0 IN ()))))OR((NOT (rt0.c0)))))OR(((rt0.c1)&(x''))))) ORDER BY IFNULL(((x'')IS(x'')), ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1))) DESC  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((x'')OR('-581537331' COLLATE RTRIM)))AND((rt0.c0 IN ()))))OR((NOT (rt0.c0)))))OR(((rt0.c1)&(x''))))) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(((x'')IS(x'')), ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1))) DESC  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((((x'')OR('-581537331' COLLATE RTRIM)))AND((rt0.c0 IN ()))))OR((NOT (rt0.c0)))))OR(((rt0.c1)&(x''))))) ORDER BY IFNULL(((x'')IS(x'')), ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1))) DESC  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((x'')OR('-581537331' COLLATE RTRIM)))AND((rt0.c0 IN ()))))OR((NOT (rt0.c0)))))OR(((rt0.c1)&(x''))))) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(((x'')IS(x'')), ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1))) DESC  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((((x'')OR('-581537331' COLLATE RTRIM)))AND((rt0.c0 IN ()))))OR((NOT (rt0.c0)))))OR(((rt0.c1)&(x''))))) ORDER BY IFNULL(((x'')IS(x'')), ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1))) DESC  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c1)))AND(2.132565298E9)))AND(rt0.c1)))AND(rt0.c2)))IS NOT(CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(rt0.c1)))AND(2.132565298E9)))AND(rt0.c1)))AND(rt0.c2)))IS NOT(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c1)))AND(2.132565298E9)))AND(rt0.c1)))AND(rt0.c2)))IS NOT(CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(rt0.c1)))AND(2.132565298E9)))AND(rt0.c1)))AND(rt0.c2)))IS NOT(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c1)))AND(2.132565298E9)))AND(rt0.c1)))AND(rt0.c2)))IS NOT(CAST(rt0.c0 AS BLOB))));
SELECT * FROM rt1, v0 WHERE (v0.c0) ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 WHEN '[y''\r>' THEN rt1.c3 WHEN v0.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c0 END) NOT NULL) ASC  NULLS FIRST, ((NULLIF(DISTINCT rt1.c2, '-945500541')) NOT BETWEEN (CAST(rt1.c1 AS INTEGER)) AND (((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1)))) ASC  NULLS FIRST, TRIM(DISTINCT ((((rt1.c0)OR(rt1.c3)))OR(rt1.c3)), CAST(rt1.c1 AS INTEGER)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt1, v0 ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 WHEN '[y''\r>' THEN rt1.c3 WHEN v0.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c0 END) NOT NULL) ASC  NULLS FIRST, ((NULLIF(DISTINCT rt1.c2, '-945500541')) NOT BETWEEN (CAST(rt1.c1 AS INTEGER)) AND (((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1)))) ASC  NULLS FIRST, TRIM(DISTINCT ((((rt1.c0)OR(rt1.c3)))OR(rt1.c3)), CAST(rt1.c1 AS INTEGER)) ASC  NULLS LAST);
SELECT * FROM rt1, v0 WHERE (v0.c0) ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 WHEN '[y''\r>' THEN rt1.c3 WHEN v0.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c0 END) NOT NULL) ASC  NULLS FIRST, ((NULLIF(DISTINCT rt1.c2, '-945500541')) NOT BETWEEN (CAST(rt1.c1 AS INTEGER)) AND (((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1)))) ASC  NULLS FIRST, TRIM(DISTINCT ((((rt1.c0)OR(rt1.c3)))OR(rt1.c3)), CAST(rt1.c1 AS INTEGER)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt1, v0 ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 WHEN '[y''\r>' THEN rt1.c3 WHEN v0.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c0 END) NOT NULL) ASC  NULLS FIRST, ((NULLIF(DISTINCT rt1.c2, '-945500541')) NOT BETWEEN (CAST(rt1.c1 AS INTEGER)) AND (((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1)))) ASC  NULLS FIRST, TRIM(DISTINCT ((((rt1.c0)OR(rt1.c3)))OR(rt1.c3)), CAST(rt1.c1 AS INTEGER)) ASC  NULLS LAST);
SELECT * FROM rt1, v0 WHERE (v0.c0) ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 WHEN '[y''\r>' THEN rt1.c3 WHEN v0.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c0 END) NOT NULL) ASC  NULLS FIRST, ((NULLIF(DISTINCT rt1.c2, '-945500541')) NOT BETWEEN (CAST(rt1.c1 AS INTEGER)) AND (((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1)))) ASC  NULLS FIRST, TRIM(DISTINCT ((((rt1.c0)OR(rt1.c3)))OR(rt1.c3)), CAST(rt1.c1 AS INTEGER)) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt1 CROSS JOIN rt0 ON ((0.7083768795818656) BETWEEN ((NULL IN ())) AND (((v0.c0)/(rt1.c2)))) WHERE ((((((~ (rt1.c3)))OR(((((rt0.c2)OR(rt1.c2)))OR(v0.c0)))))AND(CAST(rt1.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt1.c3)))OR(((((rt0.c2)OR(rt1.c2)))OR(v0.c0)))))AND(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM v0, rt1 CROSS JOIN rt0 ON ((0.7083768795818656) BETWEEN ((NULL IN ())) AND (((v0.c0)/(rt1.c2)))));
SELECT COUNT(*) FROM v0, rt1 CROSS JOIN rt0 ON ((0.7083768795818656) BETWEEN ((NULL IN ())) AND (((v0.c0)/(rt1.c2)))) WHERE ((((((~ (rt1.c3)))OR(((((rt0.c2)OR(rt1.c2)))OR(v0.c0)))))AND(CAST(rt1.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt1.c3)))OR(((((rt0.c2)OR(rt1.c2)))OR(v0.c0)))))AND(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM v0, rt1 CROSS JOIN rt0 ON ((0.7083768795818656) BETWEEN ((NULL IN ())) AND (((v0.c0)/(rt1.c2)))));
SELECT COUNT(*) FROM v0, rt1 CROSS JOIN rt0 ON ((0.7083768795818656) BETWEEN ((NULL IN ())) AND (((v0.c0)/(rt1.c2)))) WHERE ((((((~ (rt1.c3)))OR(((((rt0.c2)OR(rt1.c2)))OR(v0.c0)))))AND(CAST(rt1.c2 AS INTEGER))));
SELECT ALL * FROM rt0, v0 WHERE ((NOT (NULL))) ORDER BY ((((NULLIF(rt0.c2, rt0.c1))AND((rt0.c1 IN ()))))AND(((rt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((NULLIF(rt0.c2, rt0.c1))AND((rt0.c1 IN ()))))AND(((rt0.c0) NOT NULL))));
SELECT ALL * FROM rt0, v0 WHERE ((NOT (NULL))) ORDER BY ((((NULLIF(rt0.c2, rt0.c1))AND((rt0.c1 IN ()))))AND(((rt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((NULLIF(rt0.c2, rt0.c1))AND((rt0.c1 IN ()))))AND(((rt0.c0) NOT NULL))));
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((((rt0.c1)<<(NULL)))))) ORDER BY (CAST(rt0.c2 AS TEXT) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((((rt0.c1)<<(NULL)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (CAST(rt0.c2 AS TEXT) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((((rt0.c1)<<(NULL)))))) ORDER BY (CAST(rt0.c2 AS TEXT) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((((rt0.c1)<<(NULL)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (CAST(rt0.c2 AS TEXT) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((((rt0.c1)<<(NULL)))))) ORDER BY (CAST(rt0.c2 AS TEXT) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM rt1, rt0, v0 WHERE (((CAST(rt1.c0 AS BLOB))GLOB(((rt1.c3) NOTNULL)))) ORDER BY ((UNICODE(rt1.c0)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS BLOB))GLOB(((rt1.c3) NOTNULL)))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((UNICODE(rt1.c0)) NOTNULL) DESC);
SELECT ALL * FROM rt1, rt0, v0 WHERE (((CAST(rt1.c0 AS BLOB))GLOB(((rt1.c3) NOTNULL)))) ORDER BY ((UNICODE(rt1.c0)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS BLOB))GLOB(((rt1.c3) NOTNULL)))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((UNICODE(rt1.c0)) NOTNULL) DESC);
SELECT ALL * FROM rt1, rt0, v0 WHERE (((CAST(rt1.c0 AS BLOB))GLOB(((rt1.c3) NOTNULL)))) ORDER BY ((UNICODE(rt1.c0)) NOTNULL) DESC;
SELECT COUNT(*) FROM rt1 WHERE (x'bae2');
SELECT SUM(count) FROM (SELECT ALL ((x'bae2') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (x'bae2');
SELECT SUM(count) FROM (SELECT ALL ((x'bae2') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (x'bae2');
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE ((~ (LTRIM(v0.c0, rt1.c1)))) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (LTRIM(v0.c0, rt1.c1)))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE ((~ (LTRIM(v0.c0, rt1.c1)))) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (LTRIM(v0.c0, rt1.c1)))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE ((~ (LTRIM(v0.c0, rt1.c1)))) ORDER BY rt0.c0  NULLS LAST;
SELECT ALL * FROM rt1, rt0, v0 WHERE (((((rt1.c0)+(rt1.c3)))>=(((rt0.c1)>>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)+(rt1.c3)))>=(((rt0.c1)>>(v0.c0))))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE (((((rt1.c0)+(rt1.c3)))>=(((rt0.c1)>>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)+(rt1.c3)))>=(((rt0.c1)>>(v0.c0))))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE (((((rt1.c0)+(rt1.c3)))>=(((rt0.c1)>>(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) NOT NULL));
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) ISNULL)) ORDER BY (NOT (LAST_INSERT_ROWID())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (NOT (LAST_INSERT_ROWID())) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) ISNULL)) ORDER BY (NOT (LAST_INSERT_ROWID())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (NOT (LAST_INSERT_ROWID())) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) ISNULL)) ORDER BY (NOT (LAST_INSERT_ROWID())) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0) IS TRUE))AND(CAST(v0.c0 AS TEXT))))AND((+ (v0.c0))))) ORDER BY (- (((v0.c0)AND(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) IS TRUE))AND(CAST(v0.c0 AS TEXT))))AND((+ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (- (((v0.c0)AND(v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0) IS TRUE))AND(CAST(v0.c0 AS TEXT))))AND((+ (v0.c0))))) ORDER BY (- (((v0.c0)AND(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) IS TRUE))AND(CAST(v0.c0 AS TEXT))))AND((+ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (- (((v0.c0)AND(v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0) IS TRUE))AND(CAST(v0.c0 AS TEXT))))AND((+ (v0.c0))))) ORDER BY (- (((v0.c0)AND(v0.c0)))) DESC  NULLS FIRST;
SELECT * FROM v0, rt1 NOT INDEXED FULL OUTER JOIN rt0 ON CASE CASE WHEN rt0.c2 THEN rt1.c3 ELSE rt1.c3 END  WHEN (rt1.c0 IN ()) THEN CAST(rt0.c2 AS INTEGER) ELSE CAST(rt0.c0 AS REAL) END WHERE (((json_array_length(rt1.c3, rt1.c2))<<('Q2I饎Z]谥⤤')));
SELECT SUM(count) FROM (SELECT ((((json_array_length(rt1.c3, rt1.c2))<<('Q2I饎Z]谥⤤'))) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN rt0 ON CASE CASE WHEN rt0.c2 THEN rt1.c3 ELSE rt1.c3 END  WHEN (rt1.c0 IN ()) THEN CAST(rt0.c2 AS INTEGER) ELSE CAST(rt0.c0 AS REAL) END);
SELECT * FROM v0, rt1 NOT INDEXED FULL OUTER JOIN rt0 ON CASE CASE WHEN rt0.c2 THEN rt1.c3 ELSE rt1.c3 END  WHEN (rt1.c0 IN ()) THEN CAST(rt0.c2 AS INTEGER) ELSE CAST(rt0.c0 AS REAL) END WHERE (((json_array_length(rt1.c3, rt1.c2))<<('Q2I饎Z]谥⤤')));
SELECT SUM(count) FROM (SELECT ((((json_array_length(rt1.c3, rt1.c2))<<('Q2I饎Z]谥⤤'))) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN rt0 ON CASE CASE WHEN rt0.c2 THEN rt1.c3 ELSE rt1.c3 END  WHEN (rt1.c0 IN ()) THEN CAST(rt0.c2 AS INTEGER) ELSE CAST(rt0.c0 AS REAL) END);
SELECT * FROM v0, rt1 NOT INDEXED FULL OUTER JOIN rt0 ON CASE CASE WHEN rt0.c2 THEN rt1.c3 ELSE rt1.c3 END  WHEN (rt1.c0 IN ()) THEN CAST(rt0.c2 AS INTEGER) ELSE CAST(rt0.c0 AS REAL) END WHERE (((json_array_length(rt1.c3, rt1.c2))<<('Q2I饎Z]谥⤤')));
SELECT COUNT(*) FROM rt1 WHERE ((('72285441')%(rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((('72285441')%(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((('72285441')%(rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((('72285441')%(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((('72285441')%(rt1.c0 COLLATE BINARY)));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (x'' IN ()) WHERE ((NOT (rt1.c0 COLLATE NOCASE))) ORDER BY (- (((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c3)))), ((((NULL)IS NOT(rt0.c1))) NOT BETWEEN (x'') AND (((rt1.c0)=(0.21242190764815383))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (x'' IN ()) ORDER BY (- (((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c3)))), ((((NULL)IS NOT(rt0.c1))) NOT BETWEEN (x'') AND (((rt1.c0)=(0.21242190764815383))))  NULLS LAST);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (x'' IN ()) WHERE ((NOT (rt1.c0 COLLATE NOCASE))) ORDER BY (- (((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c3)))), ((((NULL)IS NOT(rt0.c1))) NOT BETWEEN (x'') AND (((rt1.c0)=(0.21242190764815383))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (x'' IN ()) ORDER BY (- (((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c3)))), ((((NULL)IS NOT(rt0.c1))) NOT BETWEEN (x'') AND (((rt1.c0)=(0.21242190764815383))))  NULLS LAST);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (x'' IN ()) WHERE ((NOT (rt1.c0 COLLATE NOCASE))) ORDER BY (- (((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c3)))), ((((NULL)IS NOT(rt0.c1))) NOT BETWEEN (x'') AND (((rt1.c0)=(0.21242190764815383))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))|(CASE WHEN x'' THEN rt0.c0 ELSE rt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))|(CASE WHEN x'' THEN rt0.c0 ELSE rt0.c2 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))|(CASE WHEN x'' THEN rt0.c0 ELSE rt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))|(CASE WHEN x'' THEN rt0.c0 ELSE rt0.c2 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))|(CASE WHEN x'' THEN rt0.c0 ELSE rt0.c2 END))  NULLS LAST;
SELECT * FROM rt0, v0 LEFT OUTER JOIN rt1 ON TRIM(CASE rt0.c2  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN v0.c0 ELSE rt1.c0 END) WHERE (CASE CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END  WHEN rt1.c3 THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END  WHEN rt1.c3 THEN rt0.c2 END) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN rt1 ON TRIM(CASE rt0.c2  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN v0.c0 ELSE rt1.c0 END));
SELECT * FROM rt0, v0 LEFT OUTER JOIN rt1 ON TRIM(CASE rt0.c2  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN v0.c0 ELSE rt1.c0 END) WHERE (CASE CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END  WHEN rt1.c3 THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END  WHEN rt1.c3 THEN rt0.c2 END) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN rt1 ON TRIM(CASE rt0.c2  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN v0.c0 ELSE rt1.c0 END));
SELECT * FROM rt0, v0 LEFT OUTER JOIN rt1 ON TRIM(CASE rt0.c2  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN v0.c0 ELSE rt1.c0 END) WHERE (CASE CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END  WHEN rt1.c3 THEN rt0.c2 END);
SELECT * FROM v0, rt0 WHERE ('' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ('' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ('' COLLATE BINARY);
SELECT COUNT(*) FROM rt1 WHERE (CAST(CAST(rt1.c2 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c2 AS REAL) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(CAST(rt1.c2 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c2 AS REAL) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(CAST(rt1.c2 AS REAL) AS REAL));
SELECT * FROM v0, rt0 WHERE (IFNULL(DISTINCT (rt0.c0 IN ()), ((-1.503706196E9) NOT NULL))) ORDER BY (NOT (SQLITE_COMPILEOPTION_USED(rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT (rt0.c0 IN ()), ((-1.503706196E9) NOT NULL))) IS TRUE)  as count FROM v0, rt0 ORDER BY (NOT (SQLITE_COMPILEOPTION_USED(rt0.c1))) DESC);
SELECT * FROM v0, rt0 WHERE (IFNULL(DISTINCT (rt0.c0 IN ()), ((-1.503706196E9) NOT NULL))) ORDER BY (NOT (SQLITE_COMPILEOPTION_USED(rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT (rt0.c0 IN ()), ((-1.503706196E9) NOT NULL))) IS TRUE)  as count FROM v0, rt0 ORDER BY (NOT (SQLITE_COMPILEOPTION_USED(rt0.c1))) DESC);
SELECT * FROM v0, rt0 WHERE (IFNULL(DISTINCT (rt0.c0 IN ()), ((-1.503706196E9) NOT NULL))) ORDER BY (NOT (SQLITE_COMPILEOPTION_USED(rt0.c1))) DESC;
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (0.136947529075942);
SELECT SUM(count) FROM (SELECT ALL ((0.136947529075942) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (0.136947529075942);
SELECT SUM(count) FROM (SELECT ALL ((0.136947529075942) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (0.136947529075942);
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON LIKELY((+ (rt1.c3))) CROSS JOIN rt0 ON ((CASE v0.c0  WHEN rt1.c0 THEN NULL ELSE rt1.c2 END)OR(rt1.c0 COLLATE BINARY)) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON LIKELY((+ (rt1.c3))) CROSS JOIN rt0 ON ((CASE v0.c0  WHEN rt1.c0 THEN NULL ELSE rt1.c2 END)OR(rt1.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON LIKELY((+ (rt1.c3))) CROSS JOIN rt0 ON ((CASE v0.c0  WHEN rt1.c0 THEN NULL ELSE rt1.c2 END)OR(rt1.c0 COLLATE BINARY)) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON LIKELY((+ (rt1.c3))) CROSS JOIN rt0 ON ((CASE v0.c0  WHEN rt1.c0 THEN NULL ELSE rt1.c2 END)OR(rt1.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON LIKELY((+ (rt1.c3))) CROSS JOIN rt0 ON ((CASE v0.c0  WHEN rt1.c0 THEN NULL ELSE rt1.c2 END)OR(rt1.c0 COLLATE BINARY)) WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT ((((x'')) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((x'')) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT ((((x'')) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((x'')) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT ((((x'')) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) ISNULL)) ORDER BY ((LOWER('-721286057')) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) ISNULL)) IS TRUE)  as count FROM rt1 ORDER BY ((LOWER('-721286057')) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) ISNULL)) ORDER BY ((LOWER('-721286057')) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) ISNULL)) IS TRUE)  as count FROM rt1 ORDER BY ((LOWER('-721286057')) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) ISNULL)) ORDER BY ((LOWER('-721286057')) IS FALSE)  NULLS LAST;
SELECT ALL * FROM rt1, rt0, v0 WHERE ((((v0.c0, rt1.c0, rt0.c0, x'', rt1.c1)) NOT BETWEEN ((CASE rt0.c1  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c0 END, (rt1.c1 IN (rt1.c1)), ((rt0.c1)LIKE(rt0.c2)), ((rt1.c1)+(rt1.c2)), IFNULL(rt0.c1, rt0.c1))) AND ((0.7444286301143412, (((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((''))), ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2)), v0.c0 COLLATE NOCASE, ((v0.c0)||(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, rt1.c0, rt0.c0, x'', rt1.c1)) NOT BETWEEN ((CASE rt0.c1  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c0 END, (rt1.c1 IN (rt1.c1)), ((rt0.c1)LIKE(rt0.c2)), ((rt1.c1)+(rt1.c2)), IFNULL(rt0.c1, rt0.c1))) AND ((0.7444286301143412, (((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((''))), ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2)), v0.c0 COLLATE NOCASE, ((v0.c0)||(rt0.c0)))))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE ((((v0.c0, rt1.c0, rt0.c0, x'', rt1.c1)) NOT BETWEEN ((CASE rt0.c1  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c0 END, (rt1.c1 IN (rt1.c1)), ((rt0.c1)LIKE(rt0.c2)), ((rt1.c1)+(rt1.c2)), IFNULL(rt0.c1, rt0.c1))) AND ((0.7444286301143412, (((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((''))), ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2)), v0.c0 COLLATE NOCASE, ((v0.c0)||(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, rt1.c0, rt0.c0, x'', rt1.c1)) NOT BETWEEN ((CASE rt0.c1  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c0 END, (rt1.c1 IN (rt1.c1)), ((rt0.c1)LIKE(rt0.c2)), ((rt1.c1)+(rt1.c2)), IFNULL(rt0.c1, rt0.c1))) AND ((0.7444286301143412, (((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((''))), ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2)), v0.c0 COLLATE NOCASE, ((v0.c0)||(rt0.c0)))))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE ((((v0.c0, rt1.c0, rt0.c0, x'', rt1.c1)) NOT BETWEEN ((CASE rt0.c1  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c0 END, (rt1.c1 IN (rt1.c1)), ((rt0.c1)LIKE(rt0.c2)), ((rt1.c1)+(rt1.c2)), IFNULL(rt0.c1, rt0.c1))) AND ((0.7444286301143412, (((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((''))), ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2)), v0.c0 COLLATE NOCASE, ((v0.c0)||(rt0.c0))))));
SELECT * FROM rt0 WHERE ((NOT (rt0.c1))) ORDER BY json_extract(((rt0.c2) NOT BETWEEN ('H?tA') AND (rt0.c2)), ((rt0.c1) BETWEEN ('-861144704') AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY json_extract(((rt0.c2) NOT BETWEEN ('H?tA') AND (rt0.c2)), ((rt0.c1) BETWEEN ('-861144704') AND (rt0.c2))));
SELECT * FROM rt0 WHERE ((NOT (rt0.c1))) ORDER BY json_extract(((rt0.c2) NOT BETWEEN ('H?tA') AND (rt0.c2)), ((rt0.c1) BETWEEN ('-861144704') AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY json_extract(((rt0.c2) NOT BETWEEN ('H?tA') AND (rt0.c2)), ((rt0.c1) BETWEEN ('-861144704') AND (rt0.c2))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)<=(v0.c0)))) AND ((((v0.c0) ISNULL))))) ORDER BY (('AR%')|(CASE WHEN '-782855914' THEN v0.c0 ELSE v0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((v0.c0)<=(v0.c0)))) AND ((((v0.c0) ISNULL))))) IS TRUE)  as count FROM v0 ORDER BY (('AR%')|(CASE WHEN '-782855914' THEN v0.c0 ELSE v0.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)<=(v0.c0)))) AND ((((v0.c0) ISNULL))))) ORDER BY (('AR%')|(CASE WHEN '-782855914' THEN v0.c0 ELSE v0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((v0.c0)<=(v0.c0)))) AND ((((v0.c0) ISNULL))))) IS TRUE)  as count FROM v0 ORDER BY (('AR%')|(CASE WHEN '-782855914' THEN v0.c0 ELSE v0.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)<=(v0.c0)))) AND ((((v0.c0) ISNULL))))) ORDER BY (('AR%')|(CASE WHEN '-782855914' THEN v0.c0 ELSE v0.c0 END)) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((- (CASE WHEN x'b1b0' THEN rt1.c3 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN x'b1b0' THEN rt1.c3 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((- (CASE WHEN x'b1b0' THEN rt1.c3 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN x'b1b0' THEN rt1.c3 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((- (CASE WHEN x'b1b0' THEN rt1.c3 ELSE rt1.c2 END)));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY CAST(((rt0.c0)IS('1905205296')) AS INTEGER) ASC  NULLS FIRST, 's룝' COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)IS('1905205296')) AS INTEGER) ASC  NULLS FIRST, 's룝' COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY CAST(((rt0.c0)IS('1905205296')) AS INTEGER) ASC  NULLS FIRST, 's룝' COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)IS('1905205296')) AS INTEGER) ASC  NULLS FIRST, 's룝' COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY CAST(((rt0.c0)IS('1905205296')) AS INTEGER) ASC  NULLS FIRST, 's룝' COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE (((CASE rt1.c2  WHEN x'' THEN rt1.c3 ELSE rt0.c1 END) NOT NULL)) ORDER BY CASE CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt0.c1 END  WHEN LIKELY(rt1.c0) THEN ((rt0.c1)LIKE(rt1.c1)) ELSE ((rt1.c1) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c2  WHEN x'' THEN rt1.c3 ELSE rt0.c1 END) NOT NULL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt0.c1 END  WHEN LIKELY(rt1.c0) THEN ((rt0.c1)LIKE(rt1.c1)) ELSE ((rt1.c1) IS TRUE) END);
SELECT ALL * FROM rt1, rt0 WHERE (((CASE rt1.c2  WHEN x'' THEN rt1.c3 ELSE rt0.c1 END) NOT NULL)) ORDER BY CASE CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt0.c1 END  WHEN LIKELY(rt1.c0) THEN ((rt0.c1)LIKE(rt1.c1)) ELSE ((rt1.c1) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c2  WHEN x'' THEN rt1.c3 ELSE rt0.c1 END) NOT NULL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt0.c1 END  WHEN LIKELY(rt1.c0) THEN ((rt0.c1)LIKE(rt1.c1)) ELSE ((rt1.c1) IS TRUE) END);
SELECT ALL * FROM rt1, rt0 WHERE (((CASE rt1.c2  WHEN x'' THEN rt1.c3 ELSE rt0.c1 END) NOT NULL)) ORDER BY CASE CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt0.c1 END  WHEN LIKELY(rt1.c0) THEN ((rt0.c1)LIKE(rt1.c1)) ELSE ((rt1.c1) IS TRUE) END;
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END) NOT BETWEEN (NULL) AND (''))) ORDER BY 0.0465845363068752, TYPEOF((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))  NULLS FIRST, QUOTE(rt0.c1) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END) NOT BETWEEN (NULL) AND (''))) IS TRUE)  as count FROM rt0 ORDER BY 0.0465845363068752, TYPEOF((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))  NULLS FIRST, QUOTE(rt0.c1) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END) NOT BETWEEN (NULL) AND (''))) ORDER BY 0.0465845363068752, TYPEOF((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))  NULLS FIRST, QUOTE(rt0.c1) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END) NOT BETWEEN (NULL) AND (''))) IS TRUE)  as count FROM rt0 ORDER BY 0.0465845363068752, TYPEOF((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))  NULLS FIRST, QUOTE(rt0.c1) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END) NOT BETWEEN (NULL) AND (''))) ORDER BY 0.0465845363068752, TYPEOF((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))  NULLS FIRST, QUOTE(rt0.c1) COLLATE BINARY;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt1 ON rt1.c1 WHERE ((+ (rt1.c2 COLLATE RTRIM))) ORDER BY ((((((((v0.c0 COLLATE RTRIM)AND(1.251281615E9)))AND((NOT (rt1.c2)))))AND(rt1.c2 COLLATE NOCASE)))OR(CAST(rt1.c1 AS BLOB))) DESC  NULLS LAST, rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON rt1.c1 ORDER BY ((((((((v0.c0 COLLATE RTRIM)AND(1.251281615E9)))AND((NOT (rt1.c2)))))AND(rt1.c2 COLLATE NOCASE)))OR(CAST(rt1.c1 AS BLOB))) DESC  NULLS LAST, rt1.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt1 ON rt1.c1 WHERE ((+ (rt1.c2 COLLATE RTRIM))) ORDER BY ((((((((v0.c0 COLLATE RTRIM)AND(1.251281615E9)))AND((NOT (rt1.c2)))))AND(rt1.c2 COLLATE NOCASE)))OR(CAST(rt1.c1 AS BLOB))) DESC  NULLS LAST, rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON rt1.c1 ORDER BY ((((((((v0.c0 COLLATE RTRIM)AND(1.251281615E9)))AND((NOT (rt1.c2)))))AND(rt1.c2 COLLATE NOCASE)))OR(CAST(rt1.c1 AS BLOB))) DESC  NULLS LAST, rt1.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt1 ON rt1.c1 WHERE ((+ (rt1.c2 COLLATE RTRIM))) ORDER BY ((((((((v0.c0 COLLATE RTRIM)AND(1.251281615E9)))AND((NOT (rt1.c2)))))AND(rt1.c2 COLLATE NOCASE)))OR(CAST(rt1.c1 AS BLOB))) DESC  NULLS LAST, rt1.c2  NULLS FIRST;
SELECT * FROM v0, rt0, rt1 WHERE (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT * FROM v0, rt0, rt1 WHERE (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT * FROM v0, rt0, rt1 WHERE (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(((rt1.c2)&(rt1.c2)) AS REAL)) ORDER BY ((rt1.c0) BETWEEN ((((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND (('hm')))) AND (((rt1.c1)/(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)&(rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c0) BETWEEN ((((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND (('hm')))) AND (((rt1.c1)/(rt0.c2)))));
SELECT ALL * FROM rt0, rt1 WHERE (CAST(((rt1.c2)&(rt1.c2)) AS REAL)) ORDER BY ((rt1.c0) BETWEEN ((((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND (('hm')))) AND (((rt1.c1)/(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)&(rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c0) BETWEEN ((((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND (('hm')))) AND (((rt1.c1)/(rt0.c2)))));
SELECT ALL * FROM rt0, rt1 WHERE (CAST(((rt1.c2)&(rt1.c2)) AS REAL)) ORDER BY ((rt1.c0) BETWEEN ((((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND (('hm')))) AND (((rt1.c1)/(rt0.c2))));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT ALL * FROM rt1 WHERE ((~ ((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((~ ((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((~ ((rt1.c1 IN ()))));
SELECT * FROM rt1 RIGHT OUTER JOIN v0 ON rt1.c1 WHERE (((CASE v0.c0  WHEN v0.c0 THEN rt1.c2 END)/(CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN rt1.c2 END)/(CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON rt1.c1);
SELECT * FROM rt1 RIGHT OUTER JOIN v0 ON rt1.c1 WHERE (((CASE v0.c0  WHEN v0.c0 THEN rt1.c2 END)/(CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN rt1.c2 END)/(CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON rt1.c1);
SELECT * FROM rt1 RIGHT OUTER JOIN v0 ON rt1.c1 WHERE (((CASE v0.c0  WHEN v0.c0 THEN rt1.c2 END)/(CAST(rt1.c2 AS BLOB))));
SELECT * FROM v0, rt1, rt0 WHERE (((CASE rt1.c3  WHEN rt0.c0 THEN rt1.c1 END) NOT BETWEEN (((rt1.c1) NOTNULL)) AND (x'e357')));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c3  WHEN rt0.c0 THEN rt1.c1 END) NOT BETWEEN (((rt1.c1) NOTNULL)) AND (x'e357'))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT * FROM v0, rt1, rt0 WHERE (((CASE rt1.c3  WHEN rt0.c0 THEN rt1.c1 END) NOT BETWEEN (((rt1.c1) NOTNULL)) AND (x'e357')));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c3  WHEN rt0.c0 THEN rt1.c1 END) NOT BETWEEN (((rt1.c1) NOTNULL)) AND (x'e357'))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT * FROM v0, rt1, rt0 WHERE (((CASE rt1.c3  WHEN rt0.c0 THEN rt1.c1 END) NOT BETWEEN (((rt1.c1) NOTNULL)) AND (x'e357')));
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE ((- (((rt0.c2)>>(rt1.c3))))) ORDER BY ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))==(((rt0.c2) IS FALSE))) DESC, '0.48234370299560714', ((((((((((rt0.c1)OR(rt1.c1)))AND(rt0.c0)))AND(rt1.c0)))OR(v0.c0))) NOT BETWEEN (CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt0.c1 END) AND (rt1.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2)>>(rt1.c3))))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))==(((rt0.c2) IS FALSE))) DESC, '0.48234370299560714', ((((((((((rt0.c1)OR(rt1.c1)))AND(rt0.c0)))AND(rt1.c0)))OR(v0.c0))) NOT BETWEEN (CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt0.c1 END) AND (rt1.c2))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE ((- (((rt0.c2)>>(rt1.c3))))) ORDER BY ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))==(((rt0.c2) IS FALSE))) DESC, '0.48234370299560714', ((((((((((rt0.c1)OR(rt1.c1)))AND(rt0.c0)))AND(rt1.c0)))OR(v0.c0))) NOT BETWEEN (CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt0.c1 END) AND (rt1.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2)>>(rt1.c3))))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))==(((rt0.c2) IS FALSE))) DESC, '0.48234370299560714', ((((((((((rt0.c1)OR(rt1.c1)))AND(rt0.c0)))AND(rt1.c0)))OR(v0.c0))) NOT BETWEEN (CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt0.c1 END) AND (rt1.c2))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE ((- (((rt0.c2)>>(rt1.c3))))) ORDER BY ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))==(((rt0.c2) IS FALSE))) DESC, '0.48234370299560714', ((((((((((rt0.c1)OR(rt1.c1)))AND(rt0.c0)))AND(rt1.c0)))OR(v0.c0))) NOT BETWEEN (CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt0.c1 END) AND (rt1.c2))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON ((((rt1.c3)&(rt1.c3)))AND(((rt1.c0)<<(rt1.c1)))) WHERE ((((v0.c0)|(rt1.c0)) IN (((rt1.c3) NOT BETWEEN (v0.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)|(rt1.c0)) IN (((rt1.c3) NOT BETWEEN (v0.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((rt1.c3)&(rt1.c3)))AND(((rt1.c0)<<(rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON ((((rt1.c3)&(rt1.c3)))AND(((rt1.c0)<<(rt1.c1)))) WHERE ((((v0.c0)|(rt1.c0)) IN (((rt1.c3) NOT BETWEEN (v0.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)|(rt1.c0)) IN (((rt1.c3) NOT BETWEEN (v0.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((rt1.c3)&(rt1.c3)))AND(((rt1.c0)<<(rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON ((((rt1.c3)&(rt1.c3)))AND(((rt1.c0)<<(rt1.c1)))) WHERE ((((v0.c0)|(rt1.c0)) IN (((rt1.c3) NOT BETWEEN (v0.c0) AND (rt1.c2)))));
SELECT ALL * FROM v0, rt1 NATURAL JOIN rt0 WHERE (CASE ((v0.c0)%(x'e76a'))  WHEN ((v0.c0) IS TRUE) THEN (- (rt1.c3)) WHEN rt0.c0 COLLATE RTRIM THEN (((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2))) WHEN (rt1.c2 IN ()) THEN ((rt0.c2)<(rt0.c2)) ELSE (((rt1.c3, rt1.c0, rt0.c0))>=((v0.c0, rt0.c2, rt1.c1))) END) ORDER BY '	jM椡)' COLLATE BINARY  NULLS LAST, (((rt0.c2, rt1.c0, rt1.c1, v0.c0, rt1.c3, rt0.c1, rt1.c1)) NOT BETWEEN ((rt0.c2, NULL, rt0.c1, rt1.c3, rt1.c0, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c3, x'', rt1.c0, v0.c0, rt0.c1, rt1.c0))) COLLATE RTRIM ASC  NULLS LAST, ((((v0.c0 COLLATE BINARY)AND((rt1.c0 IN ()))))OR(CASE WHEN rt1.c1 THEN rt0.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)%(x'e76a'))  WHEN ((v0.c0) IS TRUE) THEN (- (rt1.c3)) WHEN rt0.c0 COLLATE RTRIM THEN (((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2))) WHEN (rt1.c2 IN ()) THEN ((rt0.c2)<(rt0.c2)) ELSE (((rt1.c3, rt1.c0, rt0.c0))>=((v0.c0, rt0.c2, rt1.c1))) END) IS TRUE)  as count FROM v0, rt1 NATURAL JOIN rt0 ORDER BY '	jM椡)' COLLATE BINARY  NULLS LAST, (((rt0.c2, rt1.c0, rt1.c1, v0.c0, rt1.c3, rt0.c1, rt1.c1)) NOT BETWEEN ((rt0.c2, NULL, rt0.c1, rt1.c3, rt1.c0, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c3, x'', rt1.c0, v0.c0, rt0.c1, rt1.c0))) COLLATE RTRIM ASC  NULLS LAST, ((((v0.c0 COLLATE BINARY)AND((rt1.c0 IN ()))))OR(CASE WHEN rt1.c1 THEN rt0.c2 END)) DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt1 NATURAL JOIN rt0 WHERE (CASE ((v0.c0)%(x'e76a'))  WHEN ((v0.c0) IS TRUE) THEN (- (rt1.c3)) WHEN rt0.c0 COLLATE RTRIM THEN (((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2))) WHEN (rt1.c2 IN ()) THEN ((rt0.c2)<(rt0.c2)) ELSE (((rt1.c3, rt1.c0, rt0.c0))>=((v0.c0, rt0.c2, rt1.c1))) END) ORDER BY '	jM椡)' COLLATE BINARY  NULLS LAST, (((rt0.c2, rt1.c0, rt1.c1, v0.c0, rt1.c3, rt0.c1, rt1.c1)) NOT BETWEEN ((rt0.c2, NULL, rt0.c1, rt1.c3, rt1.c0, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c3, x'', rt1.c0, v0.c0, rt0.c1, rt1.c0))) COLLATE RTRIM ASC  NULLS LAST, ((((v0.c0 COLLATE BINARY)AND((rt1.c0 IN ()))))OR(CASE WHEN rt1.c1 THEN rt0.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)%(x'e76a'))  WHEN ((v0.c0) IS TRUE) THEN (- (rt1.c3)) WHEN rt0.c0 COLLATE RTRIM THEN (((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2))) WHEN (rt1.c2 IN ()) THEN ((rt0.c2)<(rt0.c2)) ELSE (((rt1.c3, rt1.c0, rt0.c0))>=((v0.c0, rt0.c2, rt1.c1))) END) IS TRUE)  as count FROM v0, rt1 NATURAL JOIN rt0 ORDER BY '	jM椡)' COLLATE BINARY  NULLS LAST, (((rt0.c2, rt1.c0, rt1.c1, v0.c0, rt1.c3, rt0.c1, rt1.c1)) NOT BETWEEN ((rt0.c2, NULL, rt0.c1, rt1.c3, rt1.c0, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c3, x'', rt1.c0, v0.c0, rt0.c1, rt1.c0))) COLLATE RTRIM ASC  NULLS LAST, ((((v0.c0 COLLATE BINARY)AND((rt1.c0 IN ()))))OR(CASE WHEN rt1.c1 THEN rt0.c2 END)) DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt1 NATURAL JOIN rt0 WHERE (CASE ((v0.c0)%(x'e76a'))  WHEN ((v0.c0) IS TRUE) THEN (- (rt1.c3)) WHEN rt0.c0 COLLATE RTRIM THEN (((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2))) WHEN (rt1.c2 IN ()) THEN ((rt0.c2)<(rt0.c2)) ELSE (((rt1.c3, rt1.c0, rt0.c0))>=((v0.c0, rt0.c2, rt1.c1))) END) ORDER BY '	jM椡)' COLLATE BINARY  NULLS LAST, (((rt0.c2, rt1.c0, rt1.c1, v0.c0, rt1.c3, rt0.c1, rt1.c1)) NOT BETWEEN ((rt0.c2, NULL, rt0.c1, rt1.c3, rt1.c0, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c3, x'', rt1.c0, v0.c0, rt0.c1, rt1.c0))) COLLATE RTRIM ASC  NULLS LAST, ((((v0.c0 COLLATE BINARY)AND((rt1.c0 IN ()))))OR(CASE WHEN rt1.c1 THEN rt0.c2 END)) DESC  NULLS FIRST;
SELECT * FROM v0, rt1, rt0 WHERE (((((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))OR(((rt1.c3)=(rt0.c1)))))OR((rt1.c1 IN ())))) ORDER BY ABS(DISTINCT rt0.c1 COLLATE BINARY) ASC, '-1594660537', ((((v0.c0)OR((NOT (v0.c0)))))AND(UPPER(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))OR(((rt1.c3)==(rt0.c1)))))OR((rt1.c1 IN ())))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ABS(DISTINCT rt0.c1 COLLATE BINARY) ASC, '-1594660537', ((((v0.c0)OR((NOT (v0.c0)))))AND(UPPER(rt0.c0))));
SELECT * FROM v0, rt1, rt0 WHERE (((((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))OR(((rt1.c3)=(rt0.c1)))))OR((rt1.c1 IN ())))) ORDER BY ABS(DISTINCT rt0.c1 COLLATE BINARY) ASC, '-1594660537', ((((v0.c0)OR((NOT (v0.c0)))))AND(UPPER(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))OR(((rt1.c3)==(rt0.c1)))))OR((rt1.c1 IN ())))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ABS(DISTINCT rt0.c1 COLLATE BINARY) ASC, '-1594660537', ((((v0.c0)OR((NOT (v0.c0)))))AND(UPPER(rt0.c0))));
SELECT * FROM v0, rt1, rt0 WHERE (((((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))OR(((rt1.c3)=(rt0.c1)))))OR((rt1.c1 IN ())))) ORDER BY ABS(DISTINCT rt0.c1 COLLATE BINARY) ASC, '-1594660537', ((((v0.c0)OR((NOT (v0.c0)))))AND(UPPER(rt0.c0)));
SELECT * FROM rt1, rt0, v0 WHERE ((-1228945374 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((-1228945374 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT * FROM rt1, rt0, v0 WHERE ((-1228945374 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((-1228945374 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT * FROM rt1, rt0, v0 WHERE ((-1228945374 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, rt0, v0 WHERE ((((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)) IN ())) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, rt0, v0 WHERE ((((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)) IN ())) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, rt0, v0 WHERE ((((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)) IN ()));
SELECT * FROM rt0, v0 WHERE ((+ (((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((+ (((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((+ (((rt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt1, v0 FULL OUTER JOIN rt0 ON (v0.c0 IN ()) COLLATE NOCASE WHERE (((((rt1.c1) ISNULL))<>(((rt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) ISNULL))<>(((rt1.c0) ISNULL)))) IS TRUE)  as count FROM rt1, v0 FULL OUTER JOIN rt0 ON (v0.c0 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, v0 FULL OUTER JOIN rt0 ON (v0.c0 IN ()) COLLATE NOCASE WHERE (((((rt1.c1) ISNULL))<>(((rt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) ISNULL))<>(((rt1.c0) ISNULL)))) IS TRUE)  as count FROM rt1, v0 FULL OUTER JOIN rt0 ON (v0.c0 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, v0 FULL OUTER JOIN rt0 ON (v0.c0 IN ()) COLLATE NOCASE WHERE (((((rt1.c1) ISNULL))<>(((rt1.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c0)OR(((rt0.c2)IS NOT(rt0.c2)))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (0.09538580608945368))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)OR(((rt0.c2)IS NOT(rt0.c2)))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (0.09538580608945368))))) IS TRUE)  as count FROM rt0, v0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c0)OR(((rt0.c2)IS NOT(rt0.c2)))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (0.09538580608945368))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)OR(((rt0.c2)IS NOT(rt0.c2)))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (0.09538580608945368))))) IS TRUE)  as count FROM rt0, v0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c0)OR(((rt0.c2)IS NOT(rt0.c2)))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (0.09538580608945368))))) ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM v0, rt1, rt0 WHERE ((NOT (((0.8161088683186761)>=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((0.8161088683186761)>=(rt0.c0))))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL * FROM v0, rt1, rt0 WHERE ((NOT (((0.8161088683186761)>=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((0.8161088683186761)>=(rt0.c0))))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL * FROM v0, rt1, rt0 WHERE ((NOT (((0.8161088683186761)>=(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON (((((('-1466343431')OR(rt0.c2)))AND(rt0.c1))) NOTNULL) WHERE ('1950845297') ORDER BY ((((CAST(rt0.c1 AS REAL))AND(CASE rt1.c2  WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c1 END)))AND('2102725398')) ASC  NULLS LAST, CASE WHEN rt1.c0 THEN rt0.c0 ELSE ((rt1.c0)<=(rt1.c2)) END DESC  NULLS LAST, ((((rt1.c0)GLOB(rt0.c2)))&(NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1950845297') IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((((('-1466343431')OR(rt0.c2)))AND(rt0.c1))) NOTNULL) ORDER BY ((((CAST(rt0.c1 AS REAL))AND(CASE rt1.c2  WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c1 END)))AND('2102725398')) ASC  NULLS LAST, CASE WHEN rt1.c0 THEN rt0.c0 ELSE ((rt1.c0)<=(rt1.c2)) END DESC  NULLS LAST, ((((rt1.c0)GLOB(rt0.c2)))&(NULL)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON (((((('-1466343431')OR(rt0.c2)))AND(rt0.c1))) NOTNULL) WHERE ('1950845297') ORDER BY ((((CAST(rt0.c1 AS REAL))AND(CASE rt1.c2  WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c1 END)))AND('2102725398')) ASC  NULLS LAST, CASE WHEN rt1.c0 THEN rt0.c0 ELSE ((rt1.c0)<=(rt1.c2)) END DESC  NULLS LAST, ((((rt1.c0)GLOB(rt0.c2)))&(NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1950845297') IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((((('-1466343431')OR(rt0.c2)))AND(rt0.c1))) NOTNULL) ORDER BY ((((CAST(rt0.c1 AS REAL))AND(CASE rt1.c2  WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c1 END)))AND('2102725398')) ASC  NULLS LAST, CASE WHEN rt1.c0 THEN rt0.c0 ELSE ((rt1.c0)<=(rt1.c2)) END DESC  NULLS LAST, ((((rt1.c0)GLOB(rt0.c2)))&(NULL)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON (((((('-1466343431')OR(rt0.c2)))AND(rt0.c1))) NOTNULL) WHERE ('1950845297') ORDER BY ((((CAST(rt0.c1 AS REAL))AND(CASE rt1.c2  WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c1 END)))AND('2102725398')) ASC  NULLS LAST, CASE WHEN rt1.c0 THEN rt0.c0 ELSE ((rt1.c0)<=(rt1.c2)) END DESC  NULLS LAST, ((((rt1.c0)GLOB(rt0.c2)))&(NULL)) ASC  NULLS FIRST;
SELECT * FROM rt0 INNER JOIN v0 ON ((((rt0.c0)IS(v0.c0)))IS(((((rt0.c2)AND(v0.c0)))AND(rt0.c2)))) WHERE (CASE rt0.c1  WHEN MAX(v0.c0, x'', rt0.c1, v0.c0) THEN (+ (rt0.c0)) ELSE ((rt0.c1)IS(v0.c0)) END) ORDER BY (~ (((v0.c0)-(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN MAX(v0.c0, x'', rt0.c1, v0.c0) THEN (+ (rt0.c0)) ELSE ((rt0.c1)IS(v0.c0)) END) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((rt0.c0)IS(v0.c0)))IS(((((rt0.c2)AND(v0.c0)))AND(rt0.c2)))) ORDER BY (~ (((v0.c0)-(rt0.c0))))  NULLS LAST);
SELECT * FROM rt0 INNER JOIN v0 ON ((((rt0.c0)IS(v0.c0)))IS(((((rt0.c2)AND(v0.c0)))AND(rt0.c2)))) WHERE (CASE rt0.c1  WHEN MAX(v0.c0, x'', rt0.c1, v0.c0) THEN (+ (rt0.c0)) ELSE ((rt0.c1)IS(v0.c0)) END) ORDER BY (~ (((v0.c0)-(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN MAX(v0.c0, x'', rt0.c1, v0.c0) THEN (+ (rt0.c0)) ELSE ((rt0.c1)IS(v0.c0)) END) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((rt0.c0)IS(v0.c0)))IS(((((rt0.c2)AND(v0.c0)))AND(rt0.c2)))) ORDER BY (~ (((v0.c0)-(rt0.c0))))  NULLS LAST);
SELECT * FROM rt0 INNER JOIN v0 ON ((((rt0.c0)IS(v0.c0)))IS(((((rt0.c2)AND(v0.c0)))AND(rt0.c2)))) WHERE (CASE rt0.c1  WHEN MAX(v0.c0, x'', rt0.c1, v0.c0) THEN (+ (rt0.c0)) ELSE ((rt0.c1)IS(v0.c0)) END) ORDER BY (~ (((v0.c0)-(rt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ('') ORDER BY rt0.c1 ASC, (((((((((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND (('', rt0.c0, '[<eC&Mz'))))AND((- (rt0.c1)))))OR(x'27f8')))OR(((rt0.c2) IS TRUE))))AND(0.0890770918173992)) DESC  NULLS LAST, (NOT (rt0.c1)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC, (((((((((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND (('', rt0.c0, '[<eC&Mz'))))AND((- (rt0.c1)))))OR(x'27f8')))OR(((rt0.c2) IS TRUE))))AND(0.0890770918173992)) DESC  NULLS LAST, (NOT (rt0.c1)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('') ORDER BY rt0.c1 ASC, (((((((((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND (('', rt0.c0, '[<eC&Mz'))))AND((- (rt0.c1)))))OR(x'27f8')))OR(((rt0.c2) IS TRUE))))AND(0.0890770918173992)) DESC  NULLS LAST, (NOT (rt0.c1)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC, (((((((((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND (('', rt0.c0, '[<eC&Mz'))))AND((- (rt0.c1)))))OR(x'27f8')))OR(((rt0.c2) IS TRUE))))AND(0.0890770918173992)) DESC  NULLS LAST, (NOT (rt0.c1)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('') ORDER BY rt0.c1 ASC, (((((((((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND (('', rt0.c0, '[<eC&Mz'))))AND((- (rt0.c1)))))OR(x'27f8')))OR(((rt0.c2) IS TRUE))))AND(0.0890770918173992)) DESC  NULLS LAST, (NOT (rt0.c1)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1 INNER JOIN v0 ON (((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((-1.335719226E9))) COLLATE NOCASE WHERE ((((v0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt0.c2 WHEN x'6fcf7ac1' THEN rt1.c1 ELSE 0.48510169942525205 END)) AND ((((((rt1.c1)AND(v0.c0)))AND(rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt0.c2 WHEN x'6fcf7ac1' THEN rt1.c1 ELSE 0.48510169942525205 END)) AND ((((((rt1.c1)AND(v0.c0)))AND(rt1.c3)))))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN v0 ON (((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((-1.335719226E9))) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, rt1 INNER JOIN v0 ON (((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((-1.335719226E9))) COLLATE NOCASE WHERE ((((v0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt0.c2 WHEN x'6fcf7ac1' THEN rt1.c1 ELSE 0.48510169942525205 END)) AND ((((((rt1.c1)AND(v0.c0)))AND(rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt0.c2 WHEN x'6fcf7ac1' THEN rt1.c1 ELSE 0.48510169942525205 END)) AND ((((((rt1.c1)AND(v0.c0)))AND(rt1.c3)))))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN v0 ON (((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((-1.335719226E9))) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, rt1 INNER JOIN v0 ON (((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((-1.335719226E9))) COLLATE NOCASE WHERE ((((v0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt0.c2 WHEN x'6fcf7ac1' THEN rt1.c1 ELSE 0.48510169942525205 END)) AND ((((((rt1.c1)AND(v0.c0)))AND(rt1.c3))))));
SELECT * FROM v0, rt0, rt1 WHERE (rt1.c3 COLLATE NOCASE) ORDER BY CASE CAST(v0.c0 AS BLOB)  WHEN CASE WHEN rt0.c1 THEN rt1.c2 END THEN ((v0.c0)IS(x'b9e5')) WHEN CAST(rt1.c0 AS REAL) THEN json_array_length(rt1.c0) WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt1.c2 WHEN ((v0.c0)&(rt1.c1)) THEN CAST(rt1.c3 AS BLOB) WHEN CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END THEN ((rt1.c1) IS FALSE) END ASC  NULLS FIRST, (((rt1.c2) NOT BETWEEN (x'') AND (rt1.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3 COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY CASE CAST(v0.c0 AS BLOB)  WHEN CASE WHEN rt0.c1 THEN rt1.c2 END THEN ((v0.c0)IS(x'b9e5')) WHEN CAST(rt1.c0 AS REAL) THEN json_array_length(rt1.c0) WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt1.c2 WHEN ((v0.c0)&(rt1.c1)) THEN CAST(rt1.c3 AS BLOB) WHEN CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END THEN ((rt1.c1) IS FALSE) END ASC  NULLS FIRST, (((rt1.c2) NOT BETWEEN (x'') AND (rt1.c2)) IN ())  NULLS FIRST);
SELECT * FROM v0, rt0, rt1 WHERE (rt1.c3 COLLATE NOCASE) ORDER BY CASE CAST(v0.c0 AS BLOB)  WHEN CASE WHEN rt0.c1 THEN rt1.c2 END THEN ((v0.c0)IS(x'b9e5')) WHEN CAST(rt1.c0 AS REAL) THEN json_array_length(rt1.c0) WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt1.c2 WHEN ((v0.c0)&(rt1.c1)) THEN CAST(rt1.c3 AS BLOB) WHEN CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END THEN ((rt1.c1) IS FALSE) END ASC  NULLS FIRST, (((rt1.c2) NOT BETWEEN (x'') AND (rt1.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3 COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY CASE CAST(v0.c0 AS BLOB)  WHEN CASE WHEN rt0.c1 THEN rt1.c2 END THEN ((v0.c0)IS(x'b9e5')) WHEN CAST(rt1.c0 AS REAL) THEN json_array_length(rt1.c0) WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt1.c2 WHEN ((v0.c0)&(rt1.c1)) THEN CAST(rt1.c3 AS BLOB) WHEN CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END THEN ((rt1.c1) IS FALSE) END ASC  NULLS FIRST, (((rt1.c2) NOT BETWEEN (x'') AND (rt1.c2)) IN ())  NULLS FIRST);
SELECT * FROM v0, rt0, rt1 WHERE (rt1.c3 COLLATE NOCASE) ORDER BY CASE CAST(v0.c0 AS BLOB)  WHEN CASE WHEN rt0.c1 THEN rt1.c2 END THEN ((v0.c0)IS(x'b9e5')) WHEN CAST(rt1.c0 AS REAL) THEN json_array_length(rt1.c0) WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt1.c2 WHEN ((v0.c0)&(rt1.c1)) THEN CAST(rt1.c3 AS BLOB) WHEN CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END THEN ((rt1.c1) IS FALSE) END ASC  NULLS FIRST, (((rt1.c2) NOT BETWEEN (x'') AND (rt1.c2)) IN ())  NULLS FIRST;
SELECT * FROM rt1 WHERE ((((- (rt1.c1)))||(((rt1.c3)>>(rt1.c1))))) ORDER BY (~ (((x'')<=(rt1.c1))));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c1)))||(((rt1.c3)>>(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (~ (((x'')<=(rt1.c1)))));
SELECT * FROM rt1 WHERE ((((- (rt1.c1)))||(((rt1.c3)>>(rt1.c1))))) ORDER BY (~ (((x'')<=(rt1.c1))));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c1)))||(((rt1.c3)>>(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (~ (((x'')<=(rt1.c1)))));
SELECT * FROM rt1 WHERE ((((- (rt1.c1)))||(((rt1.c3)>>(rt1.c1))))) ORDER BY (~ (((x'')<=(rt1.c1))));
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN rt1 ON (((rt1.c3) IS FALSE) IN ()) WHERE ((((x''))!=(((('Ꭶ0\s\2')<<(rt0.c1)))))) ORDER BY (x'f7d9' IN (load_extension(rt0.c1), ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((x''))!=(((('Ꭶ0\s\2')<<(rt0.c1)))))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN rt1 ON (((rt1.c3) IS FALSE) IN ()) ORDER BY (x'f7d9' IN (load_extension(rt0.c1), ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN rt1 ON (((rt1.c3) IS FALSE) IN ()) WHERE ((((x''))!=(((('Ꭶ0\s\2')<<(rt0.c1)))))) ORDER BY (x'f7d9' IN (load_extension(rt0.c1), ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((x''))!=(((('Ꭶ0\s\2')<<(rt0.c1)))))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN rt1 ON (((rt1.c3) IS FALSE) IN ()) ORDER BY (x'f7d9' IN (load_extension(rt0.c1), ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (((rt1.c3, rt0.c1, rt0.c1, rt1.c0, x'')) BETWEEN (((rt1.c3 IN ()), ((((rt1.c1)OR(rt0.c2)))OR(rt1.c0)), CAST(0.37345187969443294 AS NUMERIC), ((rt1.c3)>=(rt0.c1)), ((((rt1.c3)AND('-280743371')))OR(rt1.c2)))) AND ((x'58f3', CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt0.c2 END, ((((rt0.c0)AND(rt0.c0)))OR(rt1.c1)), CASE WHEN rt0.c2 THEN rt1.c1 END, rt1.c0 COLLATE NOCASE))) FULL OUTER JOIN rt1 ON CASE WHEN x'' COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c0 THEN v0.c0 ELSE rt1.c3 END ELSE ((rt1.c3)==(v0.c0)) END WHERE ((((((v0.c0)) BETWEEN ((rt1.c3)) AND ((v0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((rt1.c3)) AND ((v0.c0)))) IS TRUE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((rt1.c3, rt0.c1, rt0.c1, rt1.c0, x'')) BETWEEN (((rt1.c3 IN ()), ((((rt1.c1)OR(rt0.c2)))OR(rt1.c0)), CAST(0.37345187969443294 AS NUMERIC), ((rt1.c3)>=(rt0.c1)), ((((rt1.c3)AND('-280743371')))OR(rt1.c2)))) AND ((x'58f3', CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt0.c2 END, ((((rt0.c0)AND(rt0.c0)))OR(rt1.c1)), CASE WHEN rt0.c2 THEN rt1.c1 END, rt1.c0 COLLATE NOCASE))) FULL OUTER JOIN rt1 ON CASE WHEN x'' COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c0 THEN v0.c0 ELSE rt1.c3 END ELSE ((rt1.c3)==(v0.c0)) END);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (((rt1.c3, rt0.c1, rt0.c1, rt1.c0, x'')) BETWEEN (((rt1.c3 IN ()), ((((rt1.c1)OR(rt0.c2)))OR(rt1.c0)), CAST(0.37345187969443294 AS NUMERIC), ((rt1.c3)>=(rt0.c1)), ((((rt1.c3)AND('-280743371')))OR(rt1.c2)))) AND ((x'58f3', CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt0.c2 END, ((((rt0.c0)AND(rt0.c0)))OR(rt1.c1)), CASE WHEN rt0.c2 THEN rt1.c1 END, rt1.c0 COLLATE NOCASE))) FULL OUTER JOIN rt1 ON CASE WHEN x'' COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c0 THEN v0.c0 ELSE rt1.c3 END ELSE ((rt1.c3)==(v0.c0)) END WHERE ((((((v0.c0)) BETWEEN ((rt1.c3)) AND ((v0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((rt1.c3)) AND ((v0.c0)))) IS TRUE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((rt1.c3, rt0.c1, rt0.c1, rt1.c0, x'')) BETWEEN (((rt1.c3 IN ()), ((((rt1.c1)OR(rt0.c2)))OR(rt1.c0)), CAST(0.37345187969443294 AS NUMERIC), ((rt1.c3)>=(rt0.c1)), ((((rt1.c3)AND('-280743371')))OR(rt1.c2)))) AND ((x'58f3', CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt0.c2 END, ((((rt0.c0)AND(rt0.c0)))OR(rt1.c1)), CASE WHEN rt0.c2 THEN rt1.c1 END, rt1.c0 COLLATE NOCASE))) FULL OUTER JOIN rt1 ON CASE WHEN x'' COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c0 THEN v0.c0 ELSE rt1.c3 END ELSE ((rt1.c3)==(v0.c0)) END);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((0.8267404715173561)IS(rt0.c0))) NOT BETWEEN ((+ (rt1.c3))) AND (((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((0.8267404715173561)IS(rt0.c0))) NOT BETWEEN ((+ (rt1.c3))) AND (((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((0.8267404715173561)IS(rt0.c0))) NOT BETWEEN ((+ (rt1.c3))) AND (((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((0.8267404715173561)IS(rt0.c0))) NOT BETWEEN ((+ (rt1.c3))) AND (((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((0.8267404715173561)IS(rt0.c0))) NOT BETWEEN ((+ (rt1.c3))) AND (((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2)))));
SELECT COUNT(*) FROM rt1 WHERE ((~ (TYPEOF(DISTINCT rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((~ (TYPEOF(DISTINCT rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((~ (TYPEOF(DISTINCT rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((~ (TYPEOF(DISTINCT rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((~ (TYPEOF(DISTINCT rt1.c1))));
SELECT ALL * FROM v0, rt1 RIGHT OUTER JOIN rt0 ON CAST((+ (rt0.c2)) AS INTEGER) WHERE (((TRIM(rt0.c0, NULL)) NOT NULL)) ORDER BY (NOT (rt1.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c0, NULL)) NOT NULL)) IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN rt0 ON CAST((+ (rt0.c2)) AS INTEGER) ORDER BY (NOT (rt1.c1)) ASC);
SELECT ALL * FROM v0, rt1 RIGHT OUTER JOIN rt0 ON CAST((+ (rt0.c2)) AS INTEGER) WHERE (((TRIM(rt0.c0, NULL)) NOT NULL)) ORDER BY (NOT (rt1.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c0, NULL)) NOT NULL)) IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN rt0 ON CAST((+ (rt0.c2)) AS INTEGER) ORDER BY (NOT (rt1.c1)) ASC);
SELECT ALL * FROM v0, rt1 RIGHT OUTER JOIN rt0 ON CAST((+ (rt0.c2)) AS INTEGER) WHERE (((TRIM(rt0.c0, NULL)) NOT NULL)) ORDER BY (NOT (rt1.c1)) ASC;
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((((v0.c0))<>((NULL))) IN ())) ORDER BY rt0.c1, CASE WHEN UNLIKELY(DISTINCT rt1.c0) THEN ((rt1.c1) IS FALSE) ELSE rt1.c2 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0))!=((NULL))) IN ())) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY rt0.c1, CASE WHEN UNLIKELY(DISTINCT rt1.c0) THEN ((rt1.c1) IS FALSE) ELSE rt1.c2 COLLATE NOCASE END ASC);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((((v0.c0))<>((NULL))) IN ())) ORDER BY rt0.c1, CASE WHEN UNLIKELY(DISTINCT rt1.c0) THEN ((rt1.c1) IS FALSE) ELSE rt1.c2 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0))!=((NULL))) IN ())) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY rt0.c1, CASE WHEN UNLIKELY(DISTINCT rt1.c0) THEN ((rt1.c1) IS FALSE) ELSE rt1.c2 COLLATE NOCASE END ASC);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((((v0.c0))<>((NULL))) IN ())) ORDER BY rt0.c1, CASE WHEN UNLIKELY(DISTINCT rt1.c0) THEN ((rt1.c1) IS FALSE) ELSE rt1.c2 COLLATE NOCASE END ASC;
SELECT ALL * FROM rt0, rt1, v0 WHERE ((((((rt0.c2, rt1.c1, rt0.c0))>=((rt0.c0, rt0.c2, rt0.c2)))) NOT BETWEEN ((rt1.c2 IN ())) AND ('Z')));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt1.c1, rt0.c0))>=((rt0.c0, rt0.c2, rt0.c2)))) NOT BETWEEN ((rt1.c2 IN ())) AND ('Z'))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL * FROM rt0, rt1, v0 WHERE ((((((rt0.c2, rt1.c1, rt0.c0))>=((rt0.c0, rt0.c2, rt0.c2)))) NOT BETWEEN ((rt1.c2 IN ())) AND ('Z')));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt1.c1, rt0.c0))>=((rt0.c0, rt0.c2, rt0.c2)))) NOT BETWEEN ((rt1.c2 IN ())) AND ('Z'))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL * FROM rt0, rt1, v0 WHERE ((((((rt0.c2, rt1.c1, rt0.c0))>=((rt0.c0, rt0.c2, rt0.c2)))) NOT BETWEEN ((rt1.c2 IN ())) AND ('Z')));
SELECT * FROM v0, rt0 WHERE (((((v0.c0) NOT NULL))|((+ (rt0.c0))))) ORDER BY ((CAST('736138478' AS INTEGER))IS((rt0.c2 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL))|((+ (rt0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CAST('736138478' AS INTEGER))IS((rt0.c2 IN ()))) ASC  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (((((v0.c0) NOT NULL))|((+ (rt0.c0))))) ORDER BY ((CAST('736138478' AS INTEGER))IS((rt0.c2 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL))|((+ (rt0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CAST('736138478' AS INTEGER))IS((rt0.c2 IN ()))) ASC  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (((((v0.c0) NOT NULL))|((+ (rt0.c0))))) ORDER BY ((CAST('736138478' AS INTEGER))IS((rt0.c2 IN ()))) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOT NULL));
SELECT * FROM rt0, rt1 WHERE (TRIM(rt0.c0) COLLATE NOCASE) ORDER BY (('461192063')%(rt1.c2)) COLLATE RTRIM ASC, UPPER(DISTINCT (NOT (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(rt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY (('461192063')%(rt1.c2)) COLLATE RTRIM ASC, UPPER(DISTINCT (NOT (rt0.c0))));
SELECT * FROM rt0, rt1 WHERE (TRIM(rt0.c0) COLLATE NOCASE) ORDER BY (('461192063')%(rt1.c2)) COLLATE RTRIM ASC, UPPER(DISTINCT (NOT (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(rt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY (('461192063')%(rt1.c2)) COLLATE RTRIM ASC, UPPER(DISTINCT (NOT (rt0.c0))));
SELECT * FROM rt0, rt1 WHERE (TRIM(rt0.c0) COLLATE NOCASE) ORDER BY (('461192063')%(rt1.c2)) COLLATE RTRIM ASC, UPPER(DISTINCT (NOT (rt0.c0)));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON CAST(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c0 END AS REAL) INNER JOIN rt0 ON (rt1.c2 IN ()) COLLATE NOCASE WHERE ('i');
SELECT SUM(count) FROM (SELECT ALL (('i') IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON CAST(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c0 END AS REAL) INNER JOIN rt0 ON (rt1.c2 IN ()) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON CAST(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c0 END AS REAL) INNER JOIN rt0 ON (rt1.c2 IN ()) COLLATE NOCASE WHERE ('i');
SELECT SUM(count) FROM (SELECT ALL (('i') IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON CAST(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c0 END AS REAL) INNER JOIN rt0 ON (rt1.c2 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((((rt1.c2)/(rt1.c3)))==(CAST(v0.c0 AS REAL)))) ORDER BY rt1.c3, CAST(CAST(rt1.c0 AS INTEGER) AS INTEGER), -1.852657486E9;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)/(rt1.c3)))=(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0, rt1 NOT INDEXED, rt0 ORDER BY rt1.c3, CAST(CAST(rt1.c0 AS INTEGER) AS INTEGER), -1.852657486E9);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((((rt1.c2)/(rt1.c3)))==(CAST(v0.c0 AS REAL)))) ORDER BY rt1.c3, CAST(CAST(rt1.c0 AS INTEGER) AS INTEGER), -1.852657486E9;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)/(rt1.c3)))=(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0, rt1 NOT INDEXED, rt0 ORDER BY rt1.c3, CAST(CAST(rt1.c0 AS INTEGER) AS INTEGER), -1.852657486E9);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((((rt1.c2)/(rt1.c3)))==(CAST(v0.c0 AS REAL)))) ORDER BY rt1.c3, CAST(CAST(rt1.c0 AS INTEGER) AS INTEGER), -1.852657486E9;
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (((CASE WHEN rt1.c0 THEN rt0.c0 END)<=(rt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c0 THEN rt0.c0 END)<=(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (((CASE WHEN rt1.c0 THEN rt0.c0 END)<=(rt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c0 THEN rt0.c0 END)<=(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (((CASE WHEN rt1.c0 THEN rt0.c0 END)<=(rt1.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON 1.803426423E9 FULL OUTER JOIN v0 ON (((rt1.c1)<<(v0.c0)) IN ()) WHERE (((TRIM(rt1.c0)) BETWEEN (((rt0.c2) ISNULL)) AND (CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt1.c0)) BETWEEN (((rt0.c2) ISNULL)) AND (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON 1.803426423E9 FULL OUTER JOIN v0 ON (((rt1.c1)<<(v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON 1.803426423E9 FULL OUTER JOIN v0 ON (((rt1.c1)<<(v0.c0)) IN ()) WHERE (((TRIM(rt1.c0)) BETWEEN (((rt0.c2) ISNULL)) AND (CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt1.c0)) BETWEEN (((rt0.c2) ISNULL)) AND (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON 1.803426423E9 FULL OUTER JOIN v0 ON (((rt1.c1)<<(v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON 1.803426423E9 FULL OUTER JOIN v0 ON (((rt1.c1)<<(v0.c0)) IN ()) WHERE (((TRIM(rt1.c0)) BETWEEN (((rt0.c2) ISNULL)) AND (CAST(rt0.c1 AS NUMERIC))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (2129375365) ORDER BY ((((rt0.c1)*(rt0.c0)))<(((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((2129375365) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c1)*(rt0.c0)))<(((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (2129375365) ORDER BY ((((rt0.c1)*(rt0.c0)))<(((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((2129375365) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c1)*(rt0.c0)))<(((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (2129375365) ORDER BY ((((rt0.c1)*(rt0.c0)))<(((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c3) NOT BETWEEN (rt1.c2) AND (x'022f'))  WHEN (rt1.c2 IN ()) THEN rt1.c3 ELSE NULL END) ORDER BY (~ (((rt1.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c3) NOT BETWEEN (rt1.c2) AND (x'022f'))  WHEN (rt1.c2 IN ()) THEN rt1.c3 ELSE NULL END) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c0) ISNULL))) DESC);
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c3) NOT BETWEEN (rt1.c2) AND (x'022f'))  WHEN (rt1.c2 IN ()) THEN rt1.c3 ELSE NULL END) ORDER BY (~ (((rt1.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c3) NOT BETWEEN (rt1.c2) AND (x'022f'))  WHEN (rt1.c2 IN ()) THEN rt1.c3 ELSE NULL END) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c0) ISNULL))) DESC);
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c3) NOT BETWEEN (rt1.c2) AND (x'022f'))  WHEN (rt1.c2 IN ()) THEN rt1.c3 ELSE NULL END) ORDER BY (~ (((rt1.c0) ISNULL))) DESC;
SELECT * FROM rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (NULLIF(CASE WHEN rt1.c0 THEN rt1.c0 END, ((v0.c0) BETWEEN (rt1.c3) AND (rt1.c2)))) ORDER BY ((((rt1.c0)+(v0.c0))) NOTNULL) ASC  NULLS LAST, (((((rt1.c0)<(rt1.c3))))=((((rt1.c3) ISNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULLIF(CASE WHEN rt1.c0 THEN rt1.c0 END, ((v0.c0) BETWEEN (rt1.c3) AND (rt1.c2)))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((((rt1.c0)+(v0.c0))) NOTNULL) ASC  NULLS LAST, (((((rt1.c0)<(rt1.c3))))=((((rt1.c3) ISNULL)))) ASC);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (NULLIF(CASE WHEN rt1.c0 THEN rt1.c0 END, ((v0.c0) BETWEEN (rt1.c3) AND (rt1.c2)))) ORDER BY ((((rt1.c0)+(v0.c0))) NOTNULL) ASC  NULLS LAST, (((((rt1.c0)<(rt1.c3))))=((((rt1.c3) ISNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULLIF(CASE WHEN rt1.c0 THEN rt1.c0 END, ((v0.c0) BETWEEN (rt1.c3) AND (rt1.c2)))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((((rt1.c0)+(v0.c0))) NOTNULL) ASC  NULLS LAST, (((((rt1.c0)<(rt1.c3))))=((((rt1.c3) ISNULL)))) ASC);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (NULLIF(CASE WHEN rt1.c0 THEN rt1.c0 END, ((v0.c0) BETWEEN (rt1.c3) AND (rt1.c2)))) ORDER BY ((((rt1.c0)+(v0.c0))) NOTNULL) ASC  NULLS LAST, (((((rt1.c0)<(rt1.c3))))=((((rt1.c3) ISNULL)))) ASC;
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE ((rt1.c0 IN ())) ORDER BY (~ (((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN ())) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (~ (((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE ((rt1.c0 IN ())) ORDER BY (~ (((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN ())) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (~ (((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE ((rt1.c0 IN ())) ORDER BY (~ (((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)) BETWEEN ((v0.c0)) AND ((NULL))) IN (((((v0.c0)AND(x'')))OR(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY CAST('1670476344' AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((NULL))) IN (((((v0.c0)AND(x'')))OR(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY CAST('1670476344' AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)) BETWEEN ((v0.c0)) AND ((NULL))) IN (((((v0.c0)AND(x'')))OR(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY CAST('1670476344' AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((NULL))) IN (((((v0.c0)AND(x'')))OR(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY CAST('1670476344' AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)) BETWEEN ((v0.c0)) AND ((NULL))) IN (((((v0.c0)AND(x'')))OR(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY CAST('1670476344' AS TEXT)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0);
SELECT ALL * FROM rt1, v0, rt0 WHERE ((((rt1.c2 IN ()))<<((((rt1.c3))<=((rt0.c2)))))) ORDER BY CAST(((((((((rt1.c3)OR(NULL)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN ()))<<((((rt1.c3))<=((rt0.c2)))))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY CAST(((((((((rt1.c3)OR(NULL)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, v0, rt0 WHERE ((((rt1.c2 IN ()))<<((((rt1.c3))<=((rt0.c2)))))) ORDER BY CAST(((((((((rt1.c3)OR(NULL)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN ()))<<((((rt1.c3))<=((rt0.c2)))))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY CAST(((((((((rt1.c3)OR(NULL)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, v0, rt0 WHERE ((((rt1.c2 IN ()))<<((((rt1.c3))<=((rt0.c2)))))) ORDER BY CAST(((((((((rt1.c3)OR(NULL)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)) AS INTEGER) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ())) IS FALSE));
SELECT * FROM rt1 WHERE (((rt1.c3 COLLATE RTRIM) NOT BETWEEN ((((((((('-258376035')AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c1))) AND (rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE RTRIM) NOT BETWEEN ((((((((('-258376035')AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c1))) AND (rt1.c1))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c3 COLLATE RTRIM) NOT BETWEEN ((((((((('-258376035')AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c1))) AND (rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE RTRIM) NOT BETWEEN ((((((((('-258376035')AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c1))) AND (rt1.c1))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c3 COLLATE RTRIM) NOT BETWEEN ((((((((('-258376035')AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c1))) AND (rt1.c1)));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (- (HEX(DISTINCT rt0.c1))) CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((LIKELY(DISTINCT rt0.c2))) AND (((rt1.c0 IN ())))) WHERE (CASE WHEN ((rt0.c0)GLOB(rt1.c0)) THEN rt0.c1 ELSE '0.9864212984633759' END) ORDER BY ((('')) NOT BETWEEN ((((rt1.c3) NOT NULL))) AND ((((v0.c0) BETWEEN (rt1.c1) AND (rt0.c1))))) ASC, (+ (((v0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)GLOB(rt1.c0)) THEN rt0.c1 ELSE '0.9864212984633759' END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (- (HEX(DISTINCT rt0.c1))) CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((LIKELY(DISTINCT rt0.c2))) AND (((rt1.c0 IN ())))) ORDER BY ((('')) NOT BETWEEN ((((rt1.c3) NOT NULL))) AND ((((v0.c0) BETWEEN (rt1.c1) AND (rt0.c1))))) ASC, (+ (((v0.c0) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (- (HEX(DISTINCT rt0.c1))) CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((LIKELY(DISTINCT rt0.c2))) AND (((rt1.c0 IN ())))) WHERE (CASE WHEN ((rt0.c0)GLOB(rt1.c0)) THEN rt0.c1 ELSE '0.9864212984633759' END) ORDER BY ((('')) NOT BETWEEN ((((rt1.c3) NOT NULL))) AND ((((v0.c0) BETWEEN (rt1.c1) AND (rt0.c1))))) ASC, (+ (((v0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)GLOB(rt1.c0)) THEN rt0.c1 ELSE '0.9864212984633759' END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (- (HEX(DISTINCT rt0.c1))) CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((LIKELY(DISTINCT rt0.c2))) AND (((rt1.c0 IN ())))) ORDER BY ((('')) NOT BETWEEN ((((rt1.c3) NOT NULL))) AND ((((v0.c0) BETWEEN (rt1.c1) AND (rt0.c1))))) ASC, (+ (((v0.c0) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (- (HEX(DISTINCT rt0.c1))) CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((LIKELY(DISTINCT rt0.c2))) AND (((rt1.c0 IN ())))) WHERE (CASE WHEN ((rt0.c0)GLOB(rt1.c0)) THEN rt0.c1 ELSE '0.9864212984633759' END) ORDER BY ((('')) NOT BETWEEN ((((rt1.c3) NOT NULL))) AND ((((v0.c0) BETWEEN (rt1.c1) AND (rt0.c1))))) ASC, (+ (((v0.c0) NOT NULL)))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (x'8c30') ORDER BY CASE ((rt1.c3) ISNULL)  WHEN '-1646401001' COLLATE BINARY THEN 0x3fa1f668 WHEN rt1.c2 THEN ((((rt1.c3)AND(rt1.c0)))OR(rt1.c2)) WHEN (rt1.c2 IN ()) THEN CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END END, ((((rt1.c2)>(rt1.c3)))|(UNLIKELY(rt1.c2))), NULL;
SELECT SUM(count) FROM (SELECT ((x'8c30') IS TRUE)  as count FROM rt1 ORDER BY CASE ((rt1.c3) ISNULL)  WHEN '-1646401001' COLLATE BINARY THEN 0X3fa1f668 WHEN rt1.c2 THEN ((((rt1.c3)AND(rt1.c0)))OR(rt1.c2)) WHEN (rt1.c2 IN ()) THEN CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END END, ((((rt1.c2)>(rt1.c3)))|(UNLIKELY(rt1.c2))), NULL);
SELECT COUNT(*) FROM rt1 WHERE (x'8c30') ORDER BY CASE ((rt1.c3) ISNULL)  WHEN '-1646401001' COLLATE BINARY THEN 0x3fa1f668 WHEN rt1.c2 THEN ((((rt1.c3)AND(rt1.c0)))OR(rt1.c2)) WHEN (rt1.c2 IN ()) THEN CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END END, ((((rt1.c2)>(rt1.c3)))|(UNLIKELY(rt1.c2))), NULL;
SELECT SUM(count) FROM (SELECT ((x'8c30') IS TRUE)  as count FROM rt1 ORDER BY CASE ((rt1.c3) ISNULL)  WHEN '-1646401001' COLLATE BINARY THEN 0X3fa1f668 WHEN rt1.c2 THEN ((((rt1.c3)AND(rt1.c0)))OR(rt1.c2)) WHEN (rt1.c2 IN ()) THEN CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END END, ((((rt1.c2)>(rt1.c3)))|(UNLIKELY(rt1.c2))), NULL);
SELECT COUNT(*) FROM rt1 WHERE (x'8c30') ORDER BY CASE ((rt1.c3) ISNULL)  WHEN '-1646401001' COLLATE BINARY THEN 0x3fa1f668 WHEN rt1.c2 THEN ((((rt1.c3)AND(rt1.c0)))OR(rt1.c2)) WHEN (rt1.c2 IN ()) THEN CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END END, ((((rt1.c2)>(rt1.c3)))|(UNLIKELY(rt1.c2))), NULL;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1)>=(rt0.c2)) THEN ((rt0.c2)!=(rt0.c0)) WHEN '' COLLATE NOCASE THEN CAST(rt0.c2 AS BLOB) WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN '-1837490053' ELSE rt0.c1 END THEN ((rt0.c0)IS NOT(rt0.c1)) ELSE ((rt0.c0)>(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)>=(rt0.c2)) THEN ((rt0.c2)<>(rt0.c0)) WHEN '' COLLATE NOCASE THEN CAST(rt0.c2 AS BLOB) WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN '-1837490053' ELSE rt0.c1 END THEN ((rt0.c0)IS NOT(rt0.c1)) ELSE ((rt0.c0)>(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1)>=(rt0.c2)) THEN ((rt0.c2)!=(rt0.c0)) WHEN '' COLLATE NOCASE THEN CAST(rt0.c2 AS BLOB) WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN '-1837490053' ELSE rt0.c1 END THEN ((rt0.c0)IS NOT(rt0.c1)) ELSE ((rt0.c0)>(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)>=(rt0.c2)) THEN ((rt0.c2)<>(rt0.c0)) WHEN '' COLLATE NOCASE THEN CAST(rt0.c2 AS BLOB) WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN '-1837490053' ELSE rt0.c1 END THEN ((rt0.c0)IS NOT(rt0.c1)) ELSE ((rt0.c0)>(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1)>=(rt0.c2)) THEN ((rt0.c2)!=(rt0.c0)) WHEN '' COLLATE NOCASE THEN CAST(rt0.c2 AS BLOB) WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN '-1837490053' ELSE rt0.c1 END THEN ((rt0.c0)IS NOT(rt0.c1)) ELSE ((rt0.c0)>(rt0.c0)) END);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c2)*(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)*(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c2)*(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)*(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c2)*(v0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (NULLIF(rt1.c0, v0.c0) IN ()) FULL OUTER JOIN v0 ON ((rt1.c2)<=(v0.c0)) COLLATE BINARY WHERE (((rt1.c3) IS TRUE)) ORDER BY ((rt0.c2) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) IS TRUE)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (NULLIF(rt1.c0, v0.c0) IN ()) FULL OUTER JOIN v0 ON ((rt1.c2)<=(v0.c0)) COLLATE BINARY ORDER BY ((rt0.c2) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (NULLIF(rt1.c0, v0.c0) IN ()) FULL OUTER JOIN v0 ON ((rt1.c2)<=(v0.c0)) COLLATE BINARY WHERE (((rt1.c3) IS TRUE)) ORDER BY ((rt0.c2) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) IS TRUE)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (NULLIF(rt1.c0, v0.c0) IN ()) FULL OUTER JOIN v0 ON ((rt1.c2)<=(v0.c0)) COLLATE BINARY ORDER BY ((rt0.c2) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (NULLIF(rt1.c0, v0.c0) IN ()) FULL OUTER JOIN v0 ON ((rt1.c2)<=(v0.c0)) COLLATE BINARY WHERE (((rt1.c3) IS TRUE)) ORDER BY ((rt0.c2) NOTNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((CAST(v0.c0 AS NUMERIC))>>(CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))>>(CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c3 END))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((CAST(v0.c0 AS NUMERIC))>>(CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))>>(CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c3 END))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((CAST(v0.c0 AS NUMERIC))>>(CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c3 END)));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON UNICODE((((rt1.c3, rt1.c2, v0.c0))<=((v0.c0, rt0.c0, x'')))) FULL OUTER JOIN rt1 ON ((rt0.c0) IS TRUE) WHERE (((((((rt0.c0)OR(rt0.c2)))AND(NULL)))==((+ (rt1.c3))))) ORDER BY ((rt0.c2 COLLATE BINARY) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c2)))AND(NULL)))=((+ (rt1.c3))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON UNICODE((((rt1.c3, rt1.c2, v0.c0))<=((v0.c0, rt0.c0, x'')))) FULL OUTER JOIN rt1 ON ((rt0.c0) IS TRUE) ORDER BY ((rt0.c2 COLLATE BINARY) ISNULL) DESC);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON UNICODE((((rt1.c3, rt1.c2, v0.c0))<=((v0.c0, rt0.c0, x'')))) FULL OUTER JOIN rt1 ON ((rt0.c0) IS TRUE) WHERE (((((((rt0.c0)OR(rt0.c2)))AND(NULL)))==((+ (rt1.c3))))) ORDER BY ((rt0.c2 COLLATE BINARY) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c2)))AND(NULL)))=((+ (rt1.c3))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON UNICODE((((rt1.c3, rt1.c2, v0.c0))<=((v0.c0, rt0.c0, x'')))) FULL OUTER JOIN rt1 ON ((rt0.c0) IS TRUE) ORDER BY ((rt0.c2 COLLATE BINARY) ISNULL) DESC);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON NULL COLLATE BINARY INNER JOIN v0 ON ((json_remove(NULL, rt0.c2)) IS TRUE) WHERE ('-1466343431') ORDER BY (('-4564359') BETWEEN (((((rt1.c3)OR(rt0.c2)))AND(rt1.c0))) AND ((+ (rt0.c0)))), (((x'', rt0.c0, rt0.c1)) BETWEEN ((v0.c0 COLLATE BINARY, (+ (v0.c0)), rt1.c0 COLLATE NOCASE)) AND (((- (rt0.c2)), CAST(rt1.c2 AS TEXT), rt1.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1466343431') IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON NULL COLLATE BINARY INNER JOIN v0 ON ((json_remove(NULL, rt0.c2)) IS TRUE) ORDER BY (('-4564359') BETWEEN (((((rt1.c3)OR(rt0.c2)))AND(rt1.c0))) AND ((+ (rt0.c0)))), (((x'', rt0.c0, rt0.c1)) BETWEEN ((v0.c0 COLLATE BINARY, (+ (v0.c0)), rt1.c0 COLLATE NOCASE)) AND (((- (rt0.c2)), CAST(rt1.c2 AS TEXT), rt1.c0 COLLATE BINARY)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON NULL COLLATE BINARY INNER JOIN v0 ON ((json_remove(NULL, rt0.c2)) IS TRUE) WHERE ('-1466343431') ORDER BY (('-4564359') BETWEEN (((((rt1.c3)OR(rt0.c2)))AND(rt1.c0))) AND ((+ (rt0.c0)))), (((x'', rt0.c0, rt0.c1)) BETWEEN ((v0.c0 COLLATE BINARY, (+ (v0.c0)), rt1.c0 COLLATE NOCASE)) AND (((- (rt0.c2)), CAST(rt1.c2 AS TEXT), rt1.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1466343431') IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON NULL COLLATE BINARY INNER JOIN v0 ON ((json_remove(NULL, rt0.c2)) IS TRUE) ORDER BY (('-4564359') BETWEEN (((((rt1.c3)OR(rt0.c2)))AND(rt1.c0))) AND ((+ (rt0.c0)))), (((x'', rt0.c0, rt0.c1)) BETWEEN ((v0.c0 COLLATE BINARY, (+ (v0.c0)), rt1.c0 COLLATE NOCASE)) AND (((- (rt0.c2)), CAST(rt1.c2 AS TEXT), rt1.c0 COLLATE BINARY)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON NULL COLLATE BINARY INNER JOIN v0 ON ((json_remove(NULL, rt0.c2)) IS TRUE) WHERE ('-1466343431') ORDER BY (('-4564359') BETWEEN (((((rt1.c3)OR(rt0.c2)))AND(rt1.c0))) AND ((+ (rt0.c0)))), (((x'', rt0.c0, rt0.c1)) BETWEEN ((v0.c0 COLLATE BINARY, (+ (v0.c0)), rt1.c0 COLLATE NOCASE)) AND (((- (rt0.c2)), CAST(rt1.c2 AS TEXT), rt1.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, v0 WHERE ((((rt1.c2)) BETWEEN (((((rt1.c2))>((rt1.c1))))) AND ((((rt1.c1)=(rt1.c3)))))) ORDER BY TYPEOF(rt1.c0) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN (((((rt1.c2))>((rt1.c1))))) AND ((((rt1.c1)=(rt1.c3)))))) IS TRUE)  as count FROM rt1, v0 ORDER BY TYPEOF(rt1.c0) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0 WHERE ((((rt1.c2)) BETWEEN (((((rt1.c2))>((rt1.c1))))) AND ((((rt1.c1)=(rt1.c3)))))) ORDER BY TYPEOF(rt1.c0) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN (((((rt1.c2))>((rt1.c1))))) AND ((((rt1.c1)=(rt1.c3)))))) IS TRUE)  as count FROM rt1, v0 ORDER BY TYPEOF(rt1.c0) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0 WHERE ((((rt1.c2)) BETWEEN (((((rt1.c2))>((rt1.c1))))) AND ((((rt1.c1)=(rt1.c3)))))) ORDER BY TYPEOF(rt1.c0) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) ISNULL)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ((- (rt0.c1))))) ORDER BY rt0.c1, CASE ((rt0.c2) BETWEEN ('') AND (rt0.c0))  WHEN (NOT (NULL)) THEN '736138478' END  NULLS FIRST, (((((((((((((NOT (0.7312616866331424)))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(CAST(rt0.c2 AS BLOB))))OR((rt0.c2 IN ()))))AND(NULL)))AND(CAST(rt0.c0 AS BLOB))))AND(rt0.c2));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ((- (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1, CASE ((rt0.c2) BETWEEN ('') AND (rt0.c0))  WHEN (NOT (NULL)) THEN '736138478' END  NULLS FIRST, (((((((((((((NOT (0.7312616866331424)))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(CAST(rt0.c2 AS BLOB))))OR((rt0.c2 IN ()))))AND(NULL)))AND(CAST(rt0.c0 AS BLOB))))AND(rt0.c2)));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) ISNULL)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ((- (rt0.c1))))) ORDER BY rt0.c1, CASE ((rt0.c2) BETWEEN ('') AND (rt0.c0))  WHEN (NOT (NULL)) THEN '736138478' END  NULLS FIRST, (((((((((((((NOT (0.7312616866331424)))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(CAST(rt0.c2 AS BLOB))))OR((rt0.c2 IN ()))))AND(NULL)))AND(CAST(rt0.c0 AS BLOB))))AND(rt0.c2));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ((- (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1, CASE ((rt0.c2) BETWEEN ('') AND (rt0.c0))  WHEN (NOT (NULL)) THEN '736138478' END  NULLS FIRST, (((((((((((((NOT (0.7312616866331424)))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(CAST(rt0.c2 AS BLOB))))OR((rt0.c2 IN ()))))AND(NULL)))AND(CAST(rt0.c0 AS BLOB))))AND(rt0.c2)));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) ISNULL)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ((- (rt0.c1))))) ORDER BY rt0.c1, CASE ((rt0.c2) BETWEEN ('') AND (rt0.c0))  WHEN (NOT (NULL)) THEN '736138478' END  NULLS FIRST, (((((((((((((NOT (0.7312616866331424)))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(CAST(rt0.c2 AS BLOB))))OR((rt0.c2 IN ()))))AND(NULL)))AND(CAST(rt0.c0 AS BLOB))))AND(rt0.c2));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0 COLLATE NOCASE)OR((((v0.c0))>=((v0.c0))))))AND('B0gcq4Y-')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0 COLLATE NOCASE)OR((((v0.c0))>=((v0.c0))))))AND('B0gcq4Y-')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0 COLLATE NOCASE)OR((((v0.c0))>=((v0.c0))))))AND('B0gcq4Y-')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0 COLLATE NOCASE)OR((((v0.c0))>=((v0.c0))))))AND('B0gcq4Y-')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0 COLLATE NOCASE)OR((((v0.c0))>=((v0.c0))))))AND('B0gcq4Y-')) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((x'') BETWEEN (0Xe81e6) AND ((rt0.c2 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (0Xe81e6) AND ((rt0.c2 IN (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((x'') BETWEEN (0Xe81e6) AND ((rt0.c2 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (0Xe81e6) AND ((rt0.c2 IN (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((x'') BETWEEN (0Xe81e6) AND ((rt0.c2 IN (rt0.c1)))));
SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c1) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c1) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c1) NOT NULL)) IS FALSE));
SELECT COUNT(*) FROM v0 WHERE (((-1.254678889E9)=(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))%(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR('-1096535693')))) DESC, ((COALESCE(v0.c0, v0.c0)) NOT NULL) ASC  NULLS FIRST, ((CAST(v0.c0 AS NUMERIC))<>(v0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-1.254678889E9)=(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))%(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR('-1096535693')))) DESC, ((COALESCE(v0.c0, v0.c0)) NOT NULL) ASC  NULLS FIRST, ((CAST(v0.c0 AS NUMERIC))!=(v0.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((-1.254678889E9)=(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))%(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR('-1096535693')))) DESC, ((COALESCE(v0.c0, v0.c0)) NOT NULL) ASC  NULLS FIRST, ((CAST(v0.c0 AS NUMERIC))<>(v0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-1.254678889E9)=(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))%(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR('-1096535693')))) DESC, ((COALESCE(v0.c0, v0.c0)) NOT NULL) ASC  NULLS FIRST, ((CAST(v0.c0 AS NUMERIC))!=(v0.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((-1.254678889E9)=(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))%(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR('-1096535693')))) DESC, ((COALESCE(v0.c0, v0.c0)) NOT NULL) ASC  NULLS FIRST, ((CAST(v0.c0 AS NUMERIC))<>(v0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, v0 WHERE (((rt1.c0) IS FALSE) COLLATE NOCASE) ORDER BY (NOT (NULL)), (((((((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((NULL))))AND(rt1.c2)))AND(((((rt1.c3)OR(rt1.c2)))AND(rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt1, v0 ORDER BY (NOT (NULL)), (((((((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((NULL))))AND(rt1.c2)))AND(((((rt1.c3)OR(rt1.c2)))AND(rt1.c1))))  NULLS LAST);
SELECT ALL * FROM rt1, v0 WHERE (((rt1.c0) IS FALSE) COLLATE NOCASE) ORDER BY (NOT (NULL)), (((((((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((NULL))))AND(rt1.c2)))AND(((((rt1.c3)OR(rt1.c2)))AND(rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt1, v0 ORDER BY (NOT (NULL)), (((((((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((NULL))))AND(rt1.c2)))AND(((((rt1.c3)OR(rt1.c2)))AND(rt1.c1))))  NULLS LAST);
SELECT ALL * FROM rt1, v0 WHERE (((rt1.c0) IS FALSE) COLLATE NOCASE) ORDER BY (NOT (NULL)), (((((((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((NULL))))AND(rt1.c2)))AND(((((rt1.c3)OR(rt1.c2)))AND(rt1.c1))))  NULLS LAST;
SELECT * FROM rt1 WHERE (((rt1.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c0) ISNULL));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0 COLLATE BINARY))>(((+ (rt1.c1)))))) ORDER BY (NOT ((rt1.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 COLLATE BINARY))>(((+ (rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY (NOT ((rt1.c2 IN ()))) DESC);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0 COLLATE BINARY))>(((+ (rt1.c1)))))) ORDER BY (NOT ((rt1.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 COLLATE BINARY))>(((+ (rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY (NOT ((rt1.c2 IN ()))) DESC);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0 COLLATE BINARY))>(((+ (rt1.c1)))))) ORDER BY (NOT ((rt1.c2 IN ()))) DESC;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('-1443883918');
SELECT SUM(count) FROM (SELECT ALL (('-1443883918') IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('-1443883918');
SELECT SUM(count) FROM (SELECT ALL (('-1443883918') IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('-1443883918');
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL))=(((v0.c0) NOTNULL)))) ORDER BY ((v0.c0)AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL))=(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL))=(((v0.c0) NOTNULL)))) ORDER BY ((v0.c0)AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL))=(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL))=(((v0.c0) NOTNULL)))) ORDER BY ((v0.c0)AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT ALL * FROM v0 WHERE (((COALESCE(DISTINCT -540782092, v0.c0))<(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT -540782092, v0.c0))<(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((COALESCE(DISTINCT -540782092, v0.c0))<(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT -540782092, v0.c0))<(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((COALESCE(DISTINCT -540782092, v0.c0))<(v0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((CAST(rt0.c1 AS INTEGER)) IS FALSE)) ORDER BY rt1.c0 ASC, (((rt1.c2)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c2)))) AND ((rt1.c3))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c0 ASC, (((rt1.c2)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c2)))) AND ((rt1.c3))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((CAST(rt0.c1 AS INTEGER)) IS FALSE)) ORDER BY rt1.c0 ASC, (((rt1.c2)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c2)))) AND ((rt1.c3))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c0 ASC, (((rt1.c2)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c2)))) AND ((rt1.c3))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((CAST(rt0.c1 AS INTEGER)) IS FALSE)) ORDER BY rt1.c0 ASC, (((rt1.c2)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c2)))) AND ((rt1.c3))) DESC  NULLS LAST;
SELECT ALL * FROM rt1, v0 WHERE (((CAST(v0.c0 AS TEXT))=(((rt1.c0) NOT NULL)))) ORDER BY CASE CAST(rt1.c1 AS INTEGER)  WHEN (- (rt1.c0)) THEN v0.c0 WHEN (- (rt1.c0)) THEN (+ (208217906)) WHEN ((('1954957614'))>=((v0.c0))) THEN rt1.c3 COLLATE NOCASE ELSE 0.7876892646779502 END ASC, ((((rt1.c0)%(v0.c0)))GLOB(CASE rt1.c1  WHEN rt1.c0 THEN v0.c0 ELSE '-420349406' END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT))==(((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM rt1, v0 ORDER BY CASE CAST(rt1.c1 AS INTEGER)  WHEN (- (rt1.c0)) THEN v0.c0 WHEN (- (rt1.c0)) THEN (+ (208217906)) WHEN ((('1954957614'))>=((v0.c0))) THEN rt1.c3 COLLATE NOCASE ELSE 0.7876892646779502 END ASC, ((((rt1.c0)%(v0.c0)))GLOB(CASE rt1.c1  WHEN rt1.c0 THEN v0.c0 ELSE '-420349406' END)) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, v0 WHERE (((CAST(v0.c0 AS TEXT))=(((rt1.c0) NOT NULL)))) ORDER BY CASE CAST(rt1.c1 AS INTEGER)  WHEN (- (rt1.c0)) THEN v0.c0 WHEN (- (rt1.c0)) THEN (+ (208217906)) WHEN ((('1954957614'))>=((v0.c0))) THEN rt1.c3 COLLATE NOCASE ELSE 0.7876892646779502 END ASC, ((((rt1.c0)%(v0.c0)))GLOB(CASE rt1.c1  WHEN rt1.c0 THEN v0.c0 ELSE '-420349406' END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT))==(((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM rt1, v0 ORDER BY CASE CAST(rt1.c1 AS INTEGER)  WHEN (- (rt1.c0)) THEN v0.c0 WHEN (- (rt1.c0)) THEN (+ (208217906)) WHEN ((('1954957614'))>=((v0.c0))) THEN rt1.c3 COLLATE NOCASE ELSE 0.7876892646779502 END ASC, ((((rt1.c0)%(v0.c0)))GLOB(CASE rt1.c1  WHEN rt1.c0 THEN v0.c0 ELSE '-420349406' END)) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, v0 WHERE (((CAST(v0.c0 AS TEXT))=(((rt1.c0) NOT NULL)))) ORDER BY CASE CAST(rt1.c1 AS INTEGER)  WHEN (- (rt1.c0)) THEN v0.c0 WHEN (- (rt1.c0)) THEN (+ (208217906)) WHEN ((('1954957614'))>=((v0.c0))) THEN rt1.c3 COLLATE NOCASE ELSE 0.7876892646779502 END ASC, ((((rt1.c0)%(v0.c0)))GLOB(CASE rt1.c1  WHEN rt1.c0 THEN v0.c0 ELSE '-420349406' END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((('1502594408')/(UNLIKELY('1434880686')))) ORDER BY ((rt0.c1) BETWEEN (NULL) AND (rt1.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('1502594408')/(UNLIKELY('1434880686')))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt0.c1) BETWEEN (NULL) AND (rt1.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((('1502594408')/(UNLIKELY('1434880686')))) ORDER BY ((rt0.c1) BETWEEN (NULL) AND (rt1.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('1502594408')/(UNLIKELY('1434880686')))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt0.c1) BETWEEN (NULL) AND (rt1.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((('1502594408')/(UNLIKELY('1434880686')))) ORDER BY ((rt0.c1) BETWEEN (NULL) AND (rt1.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((rt0.c2)&('-1914954431')))OR(CASE WHEN rt0.c0 THEN '-371550146' ELSE rt0.c1 END)))OR((((rt0.c0))==((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)&('-1914954431')))OR(CASE WHEN rt0.c0 THEN '-371550146' ELSE rt0.c1 END)))OR((((rt0.c0))=((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c2)&('-1914954431')))OR(CASE WHEN rt0.c0 THEN '-371550146' ELSE rt0.c1 END)))OR((((rt0.c0))==((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)&('-1914954431')))OR(CASE WHEN rt0.c0 THEN '-371550146' ELSE rt0.c1 END)))OR((((rt0.c0))=((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c2)&('-1914954431')))OR(CASE WHEN rt0.c0 THEN '-371550146' ELSE rt0.c1 END)))OR((((rt0.c0))==((rt0.c0))))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN LENGTH(rt0.c1) END) ORDER BY ((((~ (rt0.c1))))>=((((0Xffffffffec2c7404)<=(0X5a498aff)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN LENGTH(rt0.c1) END) IS TRUE)  as count FROM rt0 ORDER BY ((((~ (rt0.c1))))>=((((0Xffffffffec2c7404)<=(0X5a498aff)))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN LENGTH(rt0.c1) END) ORDER BY ((((~ (rt0.c1))))>=((((0Xffffffffec2c7404)<=(0X5a498aff)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN LENGTH(rt0.c1) END) IS TRUE)  as count FROM rt0 ORDER BY ((((~ (rt0.c1))))>=((((0Xffffffffec2c7404)<=(0X5a498aff)))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN LENGTH(rt0.c1) END) ORDER BY ((((~ (rt0.c1))))>=((((0Xffffffffec2c7404)<=(0X5a498aff)))))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((((CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<=(('249769560')))) ORDER BY ((ABS(v0.c0)) BETWEEN (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))) AND (CAST(v0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<=(('249769560')))) IS TRUE)  as count FROM v0 ORDER BY ((ABS(v0.c0)) BETWEEN (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))) AND (CAST(v0.c0 AS TEXT)))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<=(('249769560')))) ORDER BY ((ABS(v0.c0)) BETWEEN (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))) AND (CAST(v0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<=(('249769560')))) IS TRUE)  as count FROM v0 ORDER BY ((ABS(v0.c0)) BETWEEN (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))) AND (CAST(v0.c0 AS TEXT)))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<=(('249769560')))) ORDER BY ((ABS(v0.c0)) BETWEEN (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))) AND (CAST(v0.c0 AS TEXT)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0) NOT NULL)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1)))) AND (NULL))) ORDER BY CAST(rt0.c1 COLLATE NOCASE AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1)))) AND (NULL))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(rt0.c1 COLLATE NOCASE AS INTEGER));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0) NOT NULL)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1)))) AND (NULL))) ORDER BY CAST(rt0.c1 COLLATE NOCASE AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1)))) AND (NULL))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(rt0.c1 COLLATE NOCASE AS INTEGER));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0) NOT NULL)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1)))) AND (NULL))) ORDER BY CAST(rt0.c1 COLLATE NOCASE AS INTEGER);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE ((((NOT (rt1.c2)))>(((NULL) NOT BETWEEN (rt1.c3) AND ('_zP6dv涱'))))) ORDER BY (+ (TIME(rt1.c2, rt0.c0, v0.c0, rt1.c1, ''))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c2)))>(((NULL) NOT BETWEEN (rt1.c3) AND ('_zP6dv涱'))))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY (+ (TIME(rt1.c2, rt0.c0, v0.c0, rt1.c1, ''))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE ((((NOT (rt1.c2)))>(((NULL) NOT BETWEEN (rt1.c3) AND ('_zP6dv涱'))))) ORDER BY (+ (TIME(rt1.c2, rt0.c0, v0.c0, rt1.c1, ''))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c2)))>(((NULL) NOT BETWEEN (rt1.c3) AND ('_zP6dv涱'))))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY (+ (TIME(rt1.c2, rt0.c0, v0.c0, rt1.c1, ''))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE ((((NOT (rt1.c2)))>(((NULL) NOT BETWEEN (rt1.c3) AND ('_zP6dv涱'))))) ORDER BY (+ (TIME(rt1.c2, rt0.c0, v0.c0, rt1.c1, ''))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((rt0.c0 IN ())))) ORDER BY ((((rt0.c2)>(rt0.c0))) NOT BETWEEN (rt0.c1) AND ((((rt0.c1, rt0.c0, x''))<=((rt0.c2, rt0.c2, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)>(rt0.c0))) NOT BETWEEN (rt0.c1) AND ((((rt0.c1, rt0.c0, x''))<=((rt0.c2, rt0.c2, rt0.c2))))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((rt0.c0 IN ())))) ORDER BY ((((rt0.c2)>(rt0.c0))) NOT BETWEEN (rt0.c1) AND ((((rt0.c1, rt0.c0, x''))<=((rt0.c2, rt0.c2, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)>(rt0.c0))) NOT BETWEEN (rt0.c1) AND ((((rt0.c1, rt0.c0, x''))<=((rt0.c2, rt0.c2, rt0.c2))))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((rt0.c0 IN ())))) ORDER BY ((((rt0.c2)>(rt0.c0))) NOT BETWEEN (rt0.c1) AND ((((rt0.c1, rt0.c0, x''))<=((rt0.c2, rt0.c2, rt0.c2)))));
SELECT COUNT(*) FROM v0, rt1 WHERE (0.2481799297773598);
SELECT SUM(count) FROM (SELECT ALL ((0.2481799297773598) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (0.2481799297773598);
SELECT SUM(count) FROM (SELECT ALL ((0.2481799297773598) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (0.2481799297773598);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE rt1.c1  WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c3 ELSE '1938429718' END COLLATE NOCASE) ORDER BY CAST(highlight(rt1.c2, rt1.c1, rt1.c1, rt1.c2) AS REAL) DESC, x'';
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c1  WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c3 ELSE '1938429718' END COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(highlight(rt1.c2, rt1.c1, rt1.c1, rt1.c2) AS REAL) DESC, x'');
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE rt1.c1  WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c3 ELSE '1938429718' END COLLATE NOCASE) ORDER BY CAST(highlight(rt1.c2, rt1.c1, rt1.c1, rt1.c2) AS REAL) DESC, x'';
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c1  WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c3 ELSE '1938429718' END COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(highlight(rt1.c2, rt1.c1, rt1.c1, rt1.c2) AS REAL) DESC, x'');
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (((rt0.c0)LIKE(rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)LIKE(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (((rt0.c0)LIKE(rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)LIKE(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (((rt0.c0)LIKE(rt1.c2 COLLATE NOCASE)));
SELECT * FROM v0 WHERE (((TYPEOF(DISTINCT v0.c0)) BETWEEN (((v0.c0)<=(v0.c0))) AND (''))) ORDER BY v0.c0 DESC  NULLS FIRST, NULL, ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (((v0.c0)<=(-1451915151)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT v0.c0)) BETWEEN (((v0.c0)<=(v0.c0))) AND (''))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS FIRST, NULL, ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (((v0.c0)<=(-1451915151)))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((TYPEOF(DISTINCT v0.c0)) BETWEEN (((v0.c0)<=(v0.c0))) AND (''))) ORDER BY v0.c0 DESC  NULLS FIRST, NULL, ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (((v0.c0)<=(-1451915151)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT v0.c0)) BETWEEN (((v0.c0)<=(v0.c0))) AND (''))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS FIRST, NULL, ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (((v0.c0)<=(-1451915151)))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((TYPEOF(DISTINCT v0.c0)) BETWEEN (((v0.c0)<=(v0.c0))) AND (''))) ORDER BY v0.c0 DESC  NULLS FIRST, NULL, ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (((v0.c0)<=(-1451915151)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c2)|(rt0.c0))  WHEN rt0.c2 COLLATE RTRIM THEN (~ (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)|(rt0.c0))  WHEN rt0.c2 COLLATE RTRIM THEN (~ (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c2)|(rt0.c0))  WHEN rt0.c2 COLLATE RTRIM THEN (~ (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)|(rt0.c0))  WHEN rt0.c2 COLLATE RTRIM THEN (~ (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c2)|(rt0.c0))  WHEN rt0.c2 COLLATE RTRIM THEN (~ (rt0.c0)) END);
SELECT * FROM v0 WHERE ((((((v0.c0))==((v0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))==((v0.c0)))) ISNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0))==((v0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))==((v0.c0)))) ISNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0))==((v0.c0)))) ISNULL));
SELECT ALL * FROM v0, rt0 WHERE ((((v0.c0 IN ()))<=(COALESCE(rt0.c1, rt0.c2, rt0.c0, rt0.c2)))) ORDER BY CASE WHEN (+ (rt0.c0)) THEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)) END, v0.c0  NULLS FIRST, ((UPPER(rt0.c2))<<((((rt0.c2, rt0.c2, v0.c0)) BETWEEN ((v0.c0, rt0.c0, v0.c0)) AND ((rt0.c2, rt0.c2, v0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))<=(COALESCE(rt0.c1, rt0.c2, rt0.c0, rt0.c2)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN (+ (rt0.c0)) THEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)) END, v0.c0  NULLS FIRST, ((UPPER(rt0.c2))<<((((rt0.c2, rt0.c2, v0.c0)) BETWEEN ((v0.c0, rt0.c0, v0.c0)) AND ((rt0.c2, rt0.c2, v0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE ((((v0.c0 IN ()))<=(COALESCE(rt0.c1, rt0.c2, rt0.c0, rt0.c2)))) ORDER BY CASE WHEN (+ (rt0.c0)) THEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)) END, v0.c0  NULLS FIRST, ((UPPER(rt0.c2))<<((((rt0.c2, rt0.c2, v0.c0)) BETWEEN ((v0.c0, rt0.c0, v0.c0)) AND ((rt0.c2, rt0.c2, v0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))<=(COALESCE(rt0.c1, rt0.c2, rt0.c0, rt0.c2)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN (+ (rt0.c0)) THEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)) END, v0.c0  NULLS FIRST, ((UPPER(rt0.c2))<<((((rt0.c2, rt0.c2, v0.c0)) BETWEEN ((v0.c0, rt0.c0, v0.c0)) AND ((rt0.c2, rt0.c2, v0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE ((((v0.c0 IN ()))<=(COALESCE(rt0.c1, rt0.c2, rt0.c0, rt0.c2)))) ORDER BY CASE WHEN (+ (rt0.c0)) THEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)) END, v0.c0  NULLS FIRST, ((UPPER(rt0.c2))<<((((rt0.c2, rt0.c2, v0.c0)) BETWEEN ((v0.c0, rt0.c0, v0.c0)) AND ((rt0.c2, rt0.c2, v0.c0))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(x'' AS REAL)) ORDER BY 0.7346859108749499  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS REAL)) IS TRUE)  as count FROM v0 ORDER BY 0.7346859108749499  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(x'' AS REAL)) ORDER BY 0.7346859108749499  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS REAL)) IS TRUE)  as count FROM v0 ORDER BY 0.7346859108749499  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(x'' AS REAL)) ORDER BY 0.7346859108749499  NULLS LAST;
SELECT ALL * FROM rt0, v0, rt1 WHERE ((((rt1.c1 IN (rt1.c2, rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN (rt1.c2, rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL * FROM rt0, v0, rt1 WHERE ((((rt1.c1 IN (rt1.c2, rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN (rt1.c2, rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL * FROM rt0, v0, rt1 WHERE ((((rt1.c1 IN (rt1.c2, rt0.c1))) NOTNULL));
SELECT * FROM v0, rt1 WHERE (CASE WHEN NULL THEN v0.c0 WHEN rt1.c0 THEN rt1.c3 WHEN v0.c0 THEN rt1.c1 ELSE rt1.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN v0.c0 WHEN rt1.c0 THEN rt1.c3 WHEN v0.c0 THEN rt1.c1 ELSE rt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (CASE WHEN NULL THEN v0.c0 WHEN rt1.c0 THEN rt1.c3 WHEN v0.c0 THEN rt1.c1 ELSE rt1.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN v0.c0 WHEN rt1.c0 THEN rt1.c3 WHEN v0.c0 THEN rt1.c1 ELSE rt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (CASE WHEN NULL THEN v0.c0 WHEN rt1.c0 THEN rt1.c3 WHEN v0.c0 THEN rt1.c1 ELSE rt1.c0 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (rt1.c0) ORDER BY ((0.8142597015976851) BETWEEN (((v0.c0)<>(rt1.c1))) AND (x'')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY ((0.8142597015976851) BETWEEN (((v0.c0)<>(rt1.c1))) AND (x'')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (rt1.c0) ORDER BY ((0.8142597015976851) BETWEEN (((v0.c0)<>(rt1.c1))) AND (x'')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY ((0.8142597015976851) BETWEEN (((v0.c0)<>(rt1.c1))) AND (x'')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (rt1.c0) ORDER BY ((0.8142597015976851) BETWEEN (((v0.c0)<>(rt1.c1))) AND (x'')) DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (PRINTF(CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END, (rt1.c0 IN (rt1.c1, rt1.c3)), (NOT (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((PRINTF(CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END, (rt1.c0 IN (rt1.c1, rt1.c3)), (NOT (rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (PRINTF(CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END, (rt1.c0 IN (rt1.c1, rt1.c3)), (NOT (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((PRINTF(CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END, (rt1.c0 IN (rt1.c1, rt1.c3)), (NOT (rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (PRINTF(CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END, (rt1.c0 IN (rt1.c1, rt1.c3)), (NOT (rt1.c1))));
SELECT * FROM rt1, v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS TEXT));
SELECT COUNT(*) FROM rt0, v0 WHERE ((('FALSE')IS NOT(((rt0.c0)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('FALSE')IS NOT(((rt0.c0)<=(rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((('FALSE')IS NOT(((rt0.c0)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('FALSE')IS NOT(((rt0.c0)<=(rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((('FALSE')IS NOT(((rt0.c0)<=(rt0.c0)))));
SELECT * FROM rt0, rt1 WHERE (((((rt0.c1) ISNULL)) NOT BETWEEN ((((rt1.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1, rt0.c0, rt1.c0)) AND ((rt0.c2, 0.2708229754121353, rt0.c2, rt1.c1, rt1.c2)))) AND (CASE WHEN rt1.c0 THEN rt1.c0 END))) ORDER BY (- (CASE rt1.c0  WHEN rt1.c2 THEN rt0.c0 ELSE '1058823039' END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL)) NOT BETWEEN ((((rt1.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1, rt0.c0, rt1.c0)) AND ((rt0.c2, 0.2708229754121353, rt0.c2, rt1.c1, rt1.c2)))) AND (CASE WHEN rt1.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (- (CASE rt1.c0  WHEN rt1.c2 THEN rt0.c0 ELSE '1058823039' END)) ASC);
SELECT * FROM rt0, rt1 WHERE (((((rt0.c1) ISNULL)) NOT BETWEEN ((((rt1.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1, rt0.c0, rt1.c0)) AND ((rt0.c2, 0.2708229754121353, rt0.c2, rt1.c1, rt1.c2)))) AND (CASE WHEN rt1.c0 THEN rt1.c0 END))) ORDER BY (- (CASE rt1.c0  WHEN rt1.c2 THEN rt0.c0 ELSE '1058823039' END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL)) NOT BETWEEN ((((rt1.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1, rt0.c0, rt1.c0)) AND ((rt0.c2, 0.2708229754121353, rt0.c2, rt1.c1, rt1.c2)))) AND (CASE WHEN rt1.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (- (CASE rt1.c0  WHEN rt1.c2 THEN rt0.c0 ELSE '1058823039' END)) ASC);
SELECT * FROM rt0, rt1 WHERE (((((rt0.c1) ISNULL)) NOT BETWEEN ((((rt1.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1, rt0.c0, rt1.c0)) AND ((rt0.c2, 0.2708229754121353, rt0.c2, rt1.c1, rt1.c2)))) AND (CASE WHEN rt1.c0 THEN rt1.c0 END))) ORDER BY (- (CASE rt1.c0  WHEN rt1.c2 THEN rt0.c0 ELSE '1058823039' END)) ASC;
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (rt1.c3) ORDER BY ((rt0.c1 IN ()) IN (((rt0.c0)>=(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY ((rt0.c1 IN ()) IN (((rt0.c0)>=(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (rt1.c3) ORDER BY ((rt0.c1 IN ()) IN (((rt0.c0)>=(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY ((rt0.c1 IN ()) IN (((rt0.c0)>=(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (rt1.c3) ORDER BY ((rt0.c1 IN ()) IN (((rt0.c0)>=(rt0.c0))))  NULLS FIRST;
SELECT ALL * FROM v0, rt1, rt0 WHERE (((((CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c0 WHEN x'6b42ead1' THEN rt0.c2 ELSE rt0.c1 END)AND(CAST(rt0.c1 AS NUMERIC))))OR((((rt1.c2)) BETWEEN ((rt0.c0)) AND ((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c0 WHEN x'6b42ead1' THEN rt0.c2 ELSE rt0.c1 END)AND(CAST(rt0.c1 AS NUMERIC))))OR((((rt1.c2)) BETWEEN ((rt0.c0)) AND ((rt1.c2)))))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL * FROM v0, rt1, rt0 WHERE (((((CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c0 WHEN x'6b42ead1' THEN rt0.c2 ELSE rt0.c1 END)AND(CAST(rt0.c1 AS NUMERIC))))OR((((rt1.c2)) BETWEEN ((rt0.c0)) AND ((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c0 WHEN x'6b42ead1' THEN rt0.c2 ELSE rt0.c1 END)AND(CAST(rt0.c1 AS NUMERIC))))OR((((rt1.c2)) BETWEEN ((rt0.c0)) AND ((rt1.c2)))))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL * FROM v0, rt1, rt0 WHERE (((((CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c0 WHEN x'6b42ead1' THEN rt0.c2 ELSE rt0.c1 END)AND(CAST(rt0.c1 AS NUMERIC))))OR((((rt1.c2)) BETWEEN ((rt0.c0)) AND ((rt1.c2))))));
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (LIKELY(DISTINCT ((rt1.c1)-(v0.c0)))) ORDER BY (((rt0.c0, rt0.c0, rt1.c0))<((rt0.c1, rt0.c0, rt1.c0))) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((rt1.c1)-(v0.c0)))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY (((rt0.c0, rt0.c0, rt1.c0))<((rt0.c1, rt0.c0, rt1.c0))) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (LIKELY(DISTINCT ((rt1.c1)-(v0.c0)))) ORDER BY (((rt0.c0, rt0.c0, rt1.c0))<((rt0.c1, rt0.c0, rt1.c0))) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((rt1.c1)-(v0.c0)))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY (((rt0.c0, rt0.c0, rt1.c0))<((rt0.c1, rt0.c0, rt1.c0))) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (LIKELY(DISTINCT ((rt1.c1)-(v0.c0)))) ORDER BY (((rt0.c0, rt0.c0, rt1.c0))<((rt0.c1, rt0.c0, rt1.c0))) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)IS(rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)IS(rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)IS(rt0.c0))) NOTNULL));
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON ((rt0.c0)%(((((rt0.c1)AND(rt1.c0)))AND(v0.c0)))) INNER JOIN rt0 ON (((~ (rt1.c3))) IS TRUE) WHERE (((((((rt0.c1)|(0.06874594923407429)))OR((((rt0.c0, rt0.c2, '\r,'))<=((rt0.c0, rt0.c2, v0.c0))))))OR(((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)|(0.06874594923407429)))OR((((rt0.c0, rt0.c2, '\r,'))<=((rt0.c0, rt0.c2, v0.c0))))))OR(((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON ((rt0.c0)%(((((rt0.c1)AND(rt1.c0)))AND(v0.c0)))) INNER JOIN rt0 ON (((~ (rt1.c3))) IS TRUE));
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON ((rt0.c0)%(((((rt0.c1)AND(rt1.c0)))AND(v0.c0)))) INNER JOIN rt0 ON (((~ (rt1.c3))) IS TRUE) WHERE (((((((rt0.c1)|(0.06874594923407429)))OR((((rt0.c0, rt0.c2, '\r,'))<=((rt0.c0, rt0.c2, v0.c0))))))OR(((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)|(0.06874594923407429)))OR((((rt0.c0, rt0.c2, '\r,'))<=((rt0.c0, rt0.c2, v0.c0))))))OR(((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON ((rt0.c0)%(((((rt0.c1)AND(rt1.c0)))AND(v0.c0)))) INNER JOIN rt0 ON (((~ (rt1.c3))) IS TRUE));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c0 COLLATE NOCASE IN ((v0.c0 IN (x''))))) ORDER BY 0.9670323615947868 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE NOCASE IN ((v0.c0 IN (x''))))) IS TRUE)  as count FROM v0, rt0 ORDER BY 0.9670323615947868 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c0 COLLATE NOCASE IN ((v0.c0 IN (x''))))) ORDER BY 0.9670323615947868 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE NOCASE IN ((v0.c0 IN (x''))))) IS TRUE)  as count FROM v0, rt0 ORDER BY 0.9670323615947868 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c0 COLLATE NOCASE IN ((v0.c0 IN (x''))))) ORDER BY 0.9670323615947868 DESC  NULLS FIRST;
SELECT * FROM v0, rt1 WHERE ((('5hf+')-(rt1.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((('5hf+')-(rt1.c3)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE ((('5hf+')-(rt1.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((('5hf+')-(rt1.c3)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE ((('5hf+')-(rt1.c3)) COLLATE BINARY);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON ((((((rt0.c0) ISNULL))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND ('1803426423')))))AND(((((v0.c0)AND(rt0.c1)))OR('U?')))) LEFT OUTER JOIN v0 ON ((x'') IS TRUE) WHERE ((- (((rt1.c3)=(rt0.c2))))) ORDER BY 1.938429718E9 ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c3)==(rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((((((rt0.c0) ISNULL))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND ('1803426423')))))AND(((((v0.c0)AND(rt0.c1)))OR('U?')))) LEFT OUTER JOIN v0 ON ((x'') IS TRUE) ORDER BY 1.938429718E9 ASC);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON ((((((rt0.c0) ISNULL))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND ('1803426423')))))AND(((((v0.c0)AND(rt0.c1)))OR('U?')))) LEFT OUTER JOIN v0 ON ((x'') IS TRUE) WHERE ((- (((rt1.c3)=(rt0.c2))))) ORDER BY 1.938429718E9 ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c3)==(rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((((((rt0.c0) ISNULL))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND ('1803426423')))))AND(((((v0.c0)AND(rt0.c1)))OR('U?')))) LEFT OUTER JOIN v0 ON ((x'') IS TRUE) ORDER BY 1.938429718E9 ASC);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON ((((((rt0.c0) ISNULL))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND ('1803426423')))))AND(((((v0.c0)AND(rt0.c1)))OR('U?')))) LEFT OUTER JOIN v0 ON ((x'') IS TRUE) WHERE ((- (((rt1.c3)=(rt0.c2))))) ORDER BY 1.938429718E9 ASC;
SELECT ALL * FROM v0, rt0, rt1 WHERE (((((rt1.c1) NOTNULL))OR((((v0.c0))<>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOTNULL))OR((((v0.c0))<>((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE (((((rt1.c1) NOTNULL))OR((((v0.c0))<>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOTNULL))OR((((v0.c0))<>((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE (((((rt1.c1) NOTNULL))OR((((v0.c0))<>((rt0.c2))))));
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE ((+ (rt1.c3)));
SELECT SUM(count) FROM (SELECT (((+ (rt1.c3))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE ((+ (rt1.c3)));
SELECT SUM(count) FROM (SELECT (((+ (rt1.c3))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE ((+ (rt1.c3)));
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (CASE (0xffffffff88cd420c IN ())  WHEN CASE rt0.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 WHEN NULL THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE 0X6e3ad5cb END THEN '0.7220763711156157' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (0xffffffff88cd420c IN ())  WHEN CASE rt0.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 WHEN NULL THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE 0X6e3ad5cb END THEN '0.7220763711156157' END) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (CASE (0xffffffff88cd420c IN ())  WHEN CASE rt0.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 WHEN NULL THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE 0X6e3ad5cb END THEN '0.7220763711156157' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (0xffffffff88cd420c IN ())  WHEN CASE rt0.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 WHEN NULL THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE 0X6e3ad5cb END THEN '0.7220763711156157' END) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (CASE (0xffffffff88cd420c IN ())  WHEN CASE rt0.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 WHEN NULL THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE 0X6e3ad5cb END THEN '0.7220763711156157' END);
SELECT ALL * FROM rt1 WHERE ((CAST(rt1.c1 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((CAST(rt1.c1 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((CAST(rt1.c1 AS INTEGER) IN ()));
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (((CASE WHEN rt1.c1 THEN rt0.c1 ELSE rt0.c1 END) NOT BETWEEN (((((rt1.c0)AND(rt1.c1)))AND(v0.c0))) AND (((((v0.c0)AND(rt1.c3)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c1 THEN rt0.c1 ELSE rt0.c1 END) NOT BETWEEN (((((rt1.c0)AND(rt1.c1)))AND(v0.c0))) AND (((((v0.c0)AND(rt1.c3)))AND(rt0.c2))))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (((CASE WHEN rt1.c1 THEN rt0.c1 ELSE rt0.c1 END) NOT BETWEEN (((((rt1.c0)AND(rt1.c1)))AND(v0.c0))) AND (((((v0.c0)AND(rt1.c3)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c1 THEN rt0.c1 ELSE rt0.c1 END) NOT BETWEEN (((((rt1.c0)AND(rt1.c1)))AND(v0.c0))) AND (((((v0.c0)AND(rt1.c3)))AND(rt0.c2))))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (((CASE WHEN rt1.c1 THEN rt0.c1 ELSE rt0.c1 END) NOT BETWEEN (((((rt1.c0)AND(rt1.c1)))AND(v0.c0))) AND (((((v0.c0)AND(rt1.c3)))AND(rt0.c2)))));
SELECT ALL * FROM rt0, v0, rt1 WHERE (CAST((((')*o 2ne#3'))<((rt0.c2))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((')*o 2ne#3'))<((rt0.c2))) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL * FROM rt0, v0, rt1 WHERE (CAST((((')*o 2ne#3'))<((rt0.c2))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((')*o 2ne#3'))<((rt0.c2))) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL * FROM rt0, v0, rt1 WHERE (CAST((((')*o 2ne#3'))<((rt0.c2))) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c2 COLLATE NOCASE IN (((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE NOCASE IN (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c2 COLLATE NOCASE IN (((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE NOCASE IN (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c2 COLLATE NOCASE IN (((v0.c0) IS TRUE))));
SELECT * FROM rt1 WHERE (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((((+ (rt1.c0)))=(CAST(rt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c0)))=(CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((((+ (rt1.c0)))=(CAST(rt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c0)))=(CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((((+ (rt1.c0)))=(CAST(rt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt0, rt1 WHERE ((+ (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((+ (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((+ (rt0.c0)) COLLATE BINARY);
SELECT ALL * FROM v0, rt1 CROSS JOIN rt0 ON ((((((rt1.c3)==(rt0.c2)))AND((NOT (v0.c0)))))OR((+ (v0.c0)))) WHERE (x'') ORDER BY (NOT ((~ (rt1.c2))))  NULLS FIRST, (((- (-1774283090))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, rt1 CROSS JOIN rt0 ON ((((((rt1.c3)=(rt0.c2)))AND((NOT (v0.c0)))))OR((+ (v0.c0)))) ORDER BY (NOT ((~ (rt1.c2))))  NULLS FIRST, (((- (-1774283090))) IS TRUE) ASC);
SELECT ALL * FROM v0, rt1 CROSS JOIN rt0 ON ((((((rt1.c3)==(rt0.c2)))AND((NOT (v0.c0)))))OR((+ (v0.c0)))) WHERE (x'') ORDER BY (NOT ((~ (rt1.c2))))  NULLS FIRST, (((- (-1774283090))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, rt1 CROSS JOIN rt0 ON ((((((rt1.c3)=(rt0.c2)))AND((NOT (v0.c0)))))OR((+ (v0.c0)))) ORDER BY (NOT ((~ (rt1.c2))))  NULLS FIRST, (((- (-1774283090))) IS TRUE) ASC);
SELECT ALL * FROM v0, rt1 CROSS JOIN rt0 ON ((((((rt1.c3)==(rt0.c2)))AND((NOT (v0.c0)))))OR((+ (v0.c0)))) WHERE (x'') ORDER BY (NOT ((~ (rt1.c2))))  NULLS FIRST, (((- (-1774283090))) IS TRUE) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((QUOTE(rt0.c1))==(0.349093590498059))) ORDER BY (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), ((0.7701256800924408)<(rt0.c0)), CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))>=((((rt0.c0)OR(rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END, ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2))))), CAST(rt0.c1 AS NUMERIC) COLLATE BINARY ASC  NULLS FIRST, (((((rt0.c2))<((rt0.c1)))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((QUOTE(rt0.c1))==(0.349093590498059))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), ((0.7701256800924408)<(rt0.c0)), CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))>=((((rt0.c0)OR(rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END, ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2))))), CAST(rt0.c1 AS NUMERIC) COLLATE BINARY ASC  NULLS FIRST, (((((rt0.c2))<((rt0.c1)))) IS FALSE) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((QUOTE(rt0.c1))==(0.349093590498059))) ORDER BY (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), ((0.7701256800924408)<(rt0.c0)), CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))>=((((rt0.c0)OR(rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END, ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2))))), CAST(rt0.c1 AS NUMERIC) COLLATE BINARY ASC  NULLS FIRST, (((((rt0.c2))<((rt0.c1)))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((QUOTE(rt0.c1))==(0.349093590498059))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), ((0.7701256800924408)<(rt0.c0)), CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))>=((((rt0.c0)OR(rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END, ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2))))), CAST(rt0.c1 AS NUMERIC) COLLATE BINARY ASC  NULLS FIRST, (((((rt0.c2))<((rt0.c1)))) IS FALSE) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((QUOTE(rt0.c1))==(0.349093590498059))) ORDER BY (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), ((0.7701256800924408)<(rt0.c0)), CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))>=((((rt0.c0)OR(rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END, ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2))))), CAST(rt0.c1 AS NUMERIC) COLLATE BINARY ASC  NULLS FIRST, (((((rt0.c2))<((rt0.c1)))) IS FALSE) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN ((((rt1.c2)AND(rt1.c2)))AND(rt1.c3)) THEN (+ (rt0.c0)) ELSE (+ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt1.c2)AND(rt1.c2)))AND(rt1.c3)) THEN (+ (rt0.c0)) ELSE (+ (rt0.c2)) END) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN ((((rt1.c2)AND(rt1.c2)))AND(rt1.c3)) THEN (+ (rt0.c0)) ELSE (+ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt1.c2)AND(rt1.c2)))AND(rt1.c3)) THEN (+ (rt0.c0)) ELSE (+ (rt0.c2)) END) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN ((((rt1.c2)AND(rt1.c2)))AND(rt1.c3)) THEN (+ (rt0.c0)) ELSE (+ (rt0.c2)) END);
SELECT ALL * FROM rt1, v0, rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((rt1.c0) NOT NULL)) AND (((rt1.c2) NOT NULL)))) ORDER BY ((((((((((rt1.c1)IS(rt0.c2)))OR(INSTR(rt0.c2, rt0.c0))))OR(TRIM(rt0.c2))))OR(rt1.c1 COLLATE RTRIM)))AND(CASE rt0.c1  WHEN rt1.c0 THEN rt1.c0 END)) ASC  NULLS LAST, ((rt0.c0)GLOB(rt0.c1)) COLLATE RTRIM DESC  NULLS FIRST, (~ (rt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((rt1.c0) NOT NULL)) AND (((rt1.c2) NOT NULL)))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY ((((((((((rt1.c1)IS(rt0.c2)))OR(INSTR(rt0.c2, rt0.c0))))OR(TRIM(rt0.c2))))OR(rt1.c1 COLLATE RTRIM)))AND(CASE rt0.c1  WHEN rt1.c0 THEN rt1.c0 END)) ASC  NULLS LAST, ((rt0.c0)GLOB(rt0.c1)) COLLATE RTRIM DESC  NULLS FIRST, (~ (rt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt1, v0, rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((rt1.c0) NOT NULL)) AND (((rt1.c2) NOT NULL)))) ORDER BY ((((((((((rt1.c1)IS(rt0.c2)))OR(INSTR(rt0.c2, rt0.c0))))OR(TRIM(rt0.c2))))OR(rt1.c1 COLLATE RTRIM)))AND(CASE rt0.c1  WHEN rt1.c0 THEN rt1.c0 END)) ASC  NULLS LAST, ((rt0.c0)GLOB(rt0.c1)) COLLATE RTRIM DESC  NULLS FIRST, (~ (rt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((rt1.c0) NOT NULL)) AND (((rt1.c2) NOT NULL)))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY ((((((((((rt1.c1)IS(rt0.c2)))OR(INSTR(rt0.c2, rt0.c0))))OR(TRIM(rt0.c2))))OR(rt1.c1 COLLATE RTRIM)))AND(CASE rt0.c1  WHEN rt1.c0 THEN rt1.c0 END)) ASC  NULLS LAST, ((rt0.c0)GLOB(rt0.c1)) COLLATE RTRIM DESC  NULLS FIRST, (~ (rt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt1, v0, rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (((rt1.c0) NOT NULL)) AND (((rt1.c2) NOT NULL)))) ORDER BY ((((((((((rt1.c1)IS(rt0.c2)))OR(INSTR(rt0.c2, rt0.c0))))OR(TRIM(rt0.c2))))OR(rt1.c1 COLLATE RTRIM)))AND(CASE rt0.c1  WHEN rt1.c0 THEN rt1.c0 END)) ASC  NULLS LAST, ((rt0.c0)GLOB(rt0.c1)) COLLATE RTRIM DESC  NULLS FIRST, (~ (rt1.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (v0.c0 COLLATE RTRIM) ORDER BY (('-261910021') NOT BETWEEN (NULL) AND (CASE rt1.c1  WHEN v0.c0 THEN rt1.c3 END));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0 ORDER BY (('-261910021') NOT BETWEEN (NULL) AND (CASE rt1.c1  WHEN v0.c0 THEN rt1.c3 END)));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (v0.c0 COLLATE RTRIM) ORDER BY (('-261910021') NOT BETWEEN (NULL) AND (CASE rt1.c1  WHEN v0.c0 THEN rt1.c3 END));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0 ORDER BY (('-261910021') NOT BETWEEN (NULL) AND (CASE rt1.c1  WHEN v0.c0 THEN rt1.c3 END)));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (v0.c0 COLLATE RTRIM) ORDER BY (('-261910021') NOT BETWEEN (NULL) AND (CASE rt1.c1  WHEN v0.c0 THEN rt1.c3 END));
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON (CASE rt1.c3  WHEN v0.c0 THEN rt0.c1 END IN ()) CROSS JOIN rt0 ON CASE WHEN ((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))AND(v0.c0)) THEN ((rt0.c1)OR(rt0.c2)) WHEN rt0.c2 COLLATE RTRIM THEN NULL WHEN rt1.c1 COLLATE NOCASE THEN ((rt0.c0) NOTNULL) END WHERE ((((((((('1877545156')AND(v0.c0 COLLATE NOCASE)))OR((((rt0.c1)) BETWEEN ((rt1.c0)) AND ((rt0.c2))))))OR(((rt1.c2)IS(rt0.c1)))))AND((rt1.c3 IN ())))) ORDER BY rt1.c2, ((((v0.c0)AND(rt0.c2)))AND(NULL)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((('1877545156')AND(v0.c0 COLLATE NOCASE)))OR((((rt0.c1)) BETWEEN ((rt1.c0)) AND ((rt0.c2))))))OR(((rt1.c2)IS(rt0.c1)))))AND((rt1.c3 IN ())))) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON (CASE rt1.c3  WHEN v0.c0 THEN rt0.c1 END IN ()) CROSS JOIN rt0 ON CASE WHEN ((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))AND(v0.c0)) THEN ((rt0.c1)OR(rt0.c2)) WHEN rt0.c2 COLLATE RTRIM THEN NULL WHEN rt1.c1 COLLATE NOCASE THEN ((rt0.c0) NOTNULL) END ORDER BY rt1.c2, ((((v0.c0)AND(rt0.c2)))AND(NULL)) COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON (CASE rt1.c3  WHEN v0.c0 THEN rt0.c1 END IN ()) CROSS JOIN rt0 ON CASE WHEN ((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))AND(v0.c0)) THEN ((rt0.c1)OR(rt0.c2)) WHEN rt0.c2 COLLATE RTRIM THEN NULL WHEN rt1.c1 COLLATE NOCASE THEN ((rt0.c0) NOTNULL) END WHERE ((((((((('1877545156')AND(v0.c0 COLLATE NOCASE)))OR((((rt0.c1)) BETWEEN ((rt1.c0)) AND ((rt0.c2))))))OR(((rt1.c2)IS(rt0.c1)))))AND((rt1.c3 IN ())))) ORDER BY rt1.c2, ((((v0.c0)AND(rt0.c2)))AND(NULL)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((('1877545156')AND(v0.c0 COLLATE NOCASE)))OR((((rt0.c1)) BETWEEN ((rt1.c0)) AND ((rt0.c2))))))OR(((rt1.c2)IS(rt0.c1)))))AND((rt1.c3 IN ())))) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON (CASE rt1.c3  WHEN v0.c0 THEN rt0.c1 END IN ()) CROSS JOIN rt0 ON CASE WHEN ((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))AND(v0.c0)) THEN ((rt0.c1)OR(rt0.c2)) WHEN rt0.c2 COLLATE RTRIM THEN NULL WHEN rt1.c1 COLLATE NOCASE THEN ((rt0.c0) NOTNULL) END ORDER BY rt1.c2, ((((v0.c0)AND(rt0.c2)))AND(NULL)) COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON (CASE rt1.c3  WHEN v0.c0 THEN rt0.c1 END IN ()) CROSS JOIN rt0 ON CASE WHEN ((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))AND(v0.c0)) THEN ((rt0.c1)OR(rt0.c2)) WHEN rt0.c2 COLLATE RTRIM THEN NULL WHEN rt1.c1 COLLATE NOCASE THEN ((rt0.c0) NOTNULL) END WHERE ((((((((('1877545156')AND(v0.c0 COLLATE NOCASE)))OR((((rt0.c1)) BETWEEN ((rt1.c0)) AND ((rt0.c2))))))OR(((rt1.c2)IS(rt0.c1)))))AND((rt1.c3 IN ())))) ORDER BY rt1.c2, ((((v0.c0)AND(rt0.c2)))AND(NULL)) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (((((((rt0.c2)<=(rt1.c1)))AND((~ (rt1.c3)))))AND(CASE WHEN rt0.c2 THEN rt1.c1 WHEN v0.c0 THEN NULL WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c3 THEN x'' WHEN rt0.c1 THEN rt1.c1 END))) ORDER BY NULL ASC  NULLS LAST, '';
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)<=(rt1.c1)))AND((~ (rt1.c3)))))AND(CASE WHEN rt0.c2 THEN rt1.c1 WHEN v0.c0 THEN NULL WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c3 THEN x'' WHEN rt0.c1 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY NULL ASC  NULLS LAST, '');
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (((((((rt0.c2)<=(rt1.c1)))AND((~ (rt1.c3)))))AND(CASE WHEN rt0.c2 THEN rt1.c1 WHEN v0.c0 THEN NULL WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c3 THEN x'' WHEN rt0.c1 THEN rt1.c1 END))) ORDER BY NULL ASC  NULLS LAST, '';
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)<=(rt1.c1)))AND((~ (rt1.c3)))))AND(CASE WHEN rt0.c2 THEN rt1.c1 WHEN v0.c0 THEN NULL WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c3 THEN x'' WHEN rt0.c1 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY NULL ASC  NULLS LAST, '');
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (((((((rt0.c2)<=(rt1.c1)))AND((~ (rt1.c3)))))AND(CASE WHEN rt0.c2 THEN rt1.c1 WHEN v0.c0 THEN NULL WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c3 THEN x'' WHEN rt0.c1 THEN rt1.c1 END))) ORDER BY NULL ASC  NULLS LAST, '';
SELECT COUNT(*) FROM v0 WHERE ((+ (((v0.c0) ISNULL)))) ORDER BY (((v0.c0)) BETWEEN ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((((v0.c0)||(v0.c0)))))  NULLS FIRST, ((v0.c0 COLLATE NOCASE) IS FALSE) ASC  NULLS LAST, (((('oPYⷶU4')-(v0.c0)))IS(v0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((((v0.c0)||(v0.c0)))))  NULLS FIRST, ((v0.c0 COLLATE NOCASE) IS FALSE) ASC  NULLS LAST, (((('oPYⷶU4')-(v0.c0)))IS(v0.c0)) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((+ (((v0.c0) ISNULL)))) ORDER BY (((v0.c0)) BETWEEN ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((((v0.c0)||(v0.c0)))))  NULLS FIRST, ((v0.c0 COLLATE NOCASE) IS FALSE) ASC  NULLS LAST, (((('oPYⷶU4')-(v0.c0)))IS(v0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((((v0.c0)||(v0.c0)))))  NULLS FIRST, ((v0.c0 COLLATE NOCASE) IS FALSE) ASC  NULLS LAST, (((('oPYⷶU4')-(v0.c0)))IS(v0.c0)) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((+ (((v0.c0) ISNULL)))) ORDER BY (((v0.c0)) BETWEEN ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((((v0.c0)||(v0.c0)))))  NULLS FIRST, ((v0.c0 COLLATE NOCASE) IS FALSE) ASC  NULLS LAST, (((('oPYⷶU4')-(v0.c0)))IS(v0.c0)) ASC  NULLS LAST;
SELECT * FROM v0 INNER JOIN rt0 ON (UNLIKELY(rt0.c0) IN ()) CROSS JOIN rt1 ON (+ (CAST(1226819742 AS BLOB))) WHERE (0Xffffffffdcd27ab6) ORDER BY CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN rt1.c1 WHEN (- (rt1.c1)) THEN (+ (rt0.c0)) WHEN CASE WHEN rt1.c2 THEN rt1.c0 END THEN ((((-1216922264)AND(rt0.c2)))AND(rt0.c0)) ELSE (rt1.c3 IN ()) END;
SELECT SUM(count) FROM (SELECT ((0xffffffffdcd27ab6) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (UNLIKELY(rt0.c0) IN ()) CROSS JOIN rt1 ON (+ (CAST(1226819742 AS BLOB))) ORDER BY CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN rt1.c1 WHEN (- (rt1.c1)) THEN (+ (rt0.c0)) WHEN CASE WHEN rt1.c2 THEN rt1.c0 END THEN ((((-1216922264)AND(rt0.c2)))AND(rt0.c0)) ELSE (rt1.c3 IN ()) END);
SELECT * FROM v0 INNER JOIN rt0 ON (UNLIKELY(rt0.c0) IN ()) CROSS JOIN rt1 ON (+ (CAST(1226819742 AS BLOB))) WHERE (0Xffffffffdcd27ab6) ORDER BY CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN rt1.c1 WHEN (- (rt1.c1)) THEN (+ (rt0.c0)) WHEN CASE WHEN rt1.c2 THEN rt1.c0 END THEN ((((-1216922264)AND(rt0.c2)))AND(rt0.c0)) ELSE (rt1.c3 IN ()) END;
SELECT SUM(count) FROM (SELECT ((0xffffffffdcd27ab6) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (UNLIKELY(rt0.c0) IN ()) CROSS JOIN rt1 ON (+ (CAST(1226819742 AS BLOB))) ORDER BY CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN rt1.c1 WHEN (- (rt1.c1)) THEN (+ (rt0.c0)) WHEN CASE WHEN rt1.c2 THEN rt1.c0 END THEN ((((-1216922264)AND(rt0.c2)))AND(rt0.c0)) ELSE (rt1.c3 IN ()) END);
SELECT * FROM v0 INNER JOIN rt0 ON (UNLIKELY(rt0.c0) IN ()) CROSS JOIN rt1 ON (+ (CAST(1226819742 AS BLOB))) WHERE (0Xffffffffdcd27ab6) ORDER BY CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN rt1.c1 WHEN (- (rt1.c1)) THEN (+ (rt0.c0)) WHEN CASE WHEN rt1.c2 THEN rt1.c0 END THEN ((((-1216922264)AND(rt0.c2)))AND(rt0.c0)) ELSE (rt1.c3 IN ()) END;
SELECT * FROM v0, rt1 WHERE ((((('') IS TRUE)) NOT BETWEEN (CAST(rt1.c3 AS BLOB)) AND ((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((('') IS TRUE)) NOT BETWEEN (CAST(rt1.c3 AS BLOB)) AND ((rt1.c2 IN ())))) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE ((((('') IS TRUE)) NOT BETWEEN (CAST(rt1.c3 AS BLOB)) AND ((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((('') IS TRUE)) NOT BETWEEN (CAST(rt1.c3 AS BLOB)) AND ((rt1.c2 IN ())))) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE ((((('') IS TRUE)) NOT BETWEEN (CAST(rt1.c3 AS BLOB)) AND ((rt1.c2 IN ()))));
SELECT * FROM rt1 WHERE (rt1.c3) ORDER BY ((rt1.c1 COLLATE BINARY)IS(((rt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1 COLLATE BINARY)IS(((rt1.c0) ISNULL))));
SELECT * FROM rt1 WHERE (rt1.c3) ORDER BY ((rt1.c1 COLLATE BINARY)IS(((rt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1 COLLATE BINARY)IS(((rt1.c0) ISNULL))));
SELECT * FROM rt1 WHERE (rt1.c3) ORDER BY ((rt1.c1 COLLATE BINARY)IS(((rt1.c0) ISNULL)));
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON UNLIKELY('') RIGHT OUTER JOIN v0 ON (((rt0.c2) NOTNULL) IN ()) WHERE ((((+ (rt0.c2)))&(rt1.c1 COLLATE RTRIM))) ORDER BY (+ ((rt1.c2 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2)))&(rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON UNLIKELY('') RIGHT OUTER JOIN v0 ON (((rt0.c2) NOTNULL) IN ()) ORDER BY (+ ((rt1.c2 IN ())))  NULLS FIRST);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON UNLIKELY('') RIGHT OUTER JOIN v0 ON (((rt0.c2) NOTNULL) IN ()) WHERE ((((+ (rt0.c2)))&(rt1.c1 COLLATE RTRIM))) ORDER BY (+ ((rt1.c2 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2)))&(rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON UNLIKELY('') RIGHT OUTER JOIN v0 ON (((rt0.c2) NOTNULL) IN ()) ORDER BY (+ ((rt1.c2 IN ())))  NULLS FIRST);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON UNLIKELY('') RIGHT OUTER JOIN v0 ON (((rt0.c2) NOTNULL) IN ()) WHERE ((((+ (rt0.c2)))&(rt1.c1 COLLATE RTRIM))) ORDER BY (+ ((rt1.c2 IN ())))  NULLS FIRST;
SELECT ALL * FROM rt1, rt0, v0 WHERE (((((v0.c0)GLOB(rt1.c0))) BETWEEN (((rt1.c2)GLOB(rt0.c2))) AND (((rt1.c1)||(rt1.c2))))) ORDER BY (('r')-((rt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)GLOB(rt1.c0))) BETWEEN (((rt1.c2)GLOB(rt0.c2))) AND (((rt1.c1)||(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY (('r')-((rt0.c1 IN ()))) ASC);
SELECT ALL * FROM rt1, rt0, v0 WHERE (((((v0.c0)GLOB(rt1.c0))) BETWEEN (((rt1.c2)GLOB(rt0.c2))) AND (((rt1.c1)||(rt1.c2))))) ORDER BY (('r')-((rt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)GLOB(rt1.c0))) BETWEEN (((rt1.c2)GLOB(rt0.c2))) AND (((rt1.c1)||(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY (('r')-((rt0.c1 IN ()))) ASC);
SELECT ALL * FROM rt1, rt0, v0 WHERE (((((v0.c0)GLOB(rt1.c0))) BETWEEN (((rt1.c2)GLOB(rt0.c2))) AND (((rt1.c1)||(rt1.c2))))) ORDER BY (('r')-((rt0.c1 IN ()))) ASC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c1);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c1);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY rt0.c1;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((~ (rt0.c1)))<=(((rt1.c3)>>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1)))<=(((rt1.c3)>>(rt1.c1))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((~ (rt0.c1)))<=(((rt1.c3)>>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1)))<=(((rt1.c3)>>(rt1.c1))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((~ (rt0.c1)))<=(((rt1.c3)>>(rt1.c1)))));
SELECT * FROM rt0, rt1, v0 WHERE (((SQLITE_VERSION())<<((((rt0.c2))<=((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION())<<((((rt0.c2))<=((rt1.c1)))))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (((SQLITE_VERSION())<<((((rt0.c2))<=((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION())<<((((rt0.c2))<=((rt1.c1)))))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (((SQLITE_VERSION())<<((((rt0.c2))<=((rt1.c1))))));
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (ABS(DISTINCT (((x''))>=((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (((x''))>=((rt0.c2))))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (ABS(DISTINCT (((x''))>=((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (((x''))>=((rt0.c2))))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (ABS(DISTINCT (((x''))>=((rt0.c2)))));
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE ((rt0.c1 COLLATE BINARY IN ((~ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE BINARY IN ((~ (rt1.c0))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE ((rt0.c1 COLLATE BINARY IN ((~ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE BINARY IN ((~ (rt1.c0))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE ((rt0.c1 COLLATE BINARY IN ((~ (rt1.c0)))));
SELECT * FROM rt1, v0, rt0 WHERE (CAST(NULL AS BLOB)) ORDER BY json_quote(((rt0.c2)*(rt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY json_quote(((rt0.c2)*(rt1.c1))) DESC);
SELECT * FROM rt1, v0, rt0 WHERE (CAST(NULL AS BLOB)) ORDER BY json_quote(((rt0.c2)*(rt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY json_quote(((rt0.c2)*(rt1.c1))) DESC);
SELECT * FROM rt1, v0, rt0 WHERE (CAST(NULL AS BLOB)) ORDER BY json_quote(((rt0.c2)*(rt1.c1))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2)))>=((((rt0.c1))<=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2)))>=((((rt0.c1))<=((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2)))>=((((rt0.c1))<=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2)))>=((((rt0.c1))<=((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2)))>=((((rt0.c1))<=((rt0.c2))))));
SELECT * FROM rt0, rt1, v0 WHERE ((((((v0.c0, rt0.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c0, rt0.c0)) AND ((v0.c0, rt0.c0, rt1.c3))))LIKE(CAST(rt0.c0 AS NUMERIC)))) ORDER BY (- ((rt0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0, rt0.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c0, rt0.c0)) AND ((v0.c0, rt0.c0, rt1.c3))))LIKE(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (- ((rt0.c1 IN ()))) DESC);
SELECT * FROM rt0, rt1, v0 WHERE ((((((v0.c0, rt0.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c0, rt0.c0)) AND ((v0.c0, rt0.c0, rt1.c3))))LIKE(CAST(rt0.c0 AS NUMERIC)))) ORDER BY (- ((rt0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0, rt0.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c0, rt0.c0)) AND ((v0.c0, rt0.c0, rt1.c3))))LIKE(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (- ((rt0.c1 IN ()))) DESC);
SELECT * FROM rt0, rt1, v0 WHERE ((((((v0.c0, rt0.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c0, rt0.c0)) AND ((v0.c0, rt0.c0, rt1.c3))))LIKE(CAST(rt0.c0 AS NUMERIC)))) ORDER BY (- ((rt0.c1 IN ()))) DESC;
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON CAST(((rt1.c3) BETWEEN (x'') AND (rt0.c1)) AS TEXT) RIGHT OUTER JOIN v0 ON COALESCE((rt1.c1 IN ()), JULIANDAY(v0.c0, rt1.c3, rt1.c1)) WHERE ((rt1.c1 IN (rt1.c3, v0.c0)) COLLATE RTRIM) ORDER BY (NOT (CASE WHEN rt0.c0 THEN rt1.c0 WHEN v0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c3 END)) ASC  NULLS LAST, (~ (rt0.c1 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN (rt1.c3, v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON CAST(((rt1.c3) BETWEEN (x'') AND (rt0.c1)) AS TEXT) RIGHT OUTER JOIN v0 ON COALESCE((rt1.c1 IN ()), JULIANDAY(v0.c0, rt1.c3, rt1.c1)) ORDER BY (NOT (CASE WHEN rt0.c0 THEN rt1.c0 WHEN v0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c3 END)) ASC  NULLS LAST, (~ (rt0.c1 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON CAST(((rt1.c3) BETWEEN (x'') AND (rt0.c1)) AS TEXT) RIGHT OUTER JOIN v0 ON COALESCE((rt1.c1 IN ()), JULIANDAY(v0.c0, rt1.c3, rt1.c1)) WHERE ((rt1.c1 IN (rt1.c3, v0.c0)) COLLATE RTRIM) ORDER BY (NOT (CASE WHEN rt0.c0 THEN rt1.c0 WHEN v0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c3 END)) ASC  NULLS LAST, (~ (rt0.c1 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN (rt1.c3, v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON CAST(((rt1.c3) BETWEEN (x'') AND (rt0.c1)) AS TEXT) RIGHT OUTER JOIN v0 ON COALESCE((rt1.c1 IN ()), JULIANDAY(v0.c0, rt1.c3, rt1.c1)) ORDER BY (NOT (CASE WHEN rt0.c0 THEN rt1.c0 WHEN v0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c3 END)) ASC  NULLS LAST, (~ (rt0.c1 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON CAST(((rt1.c3) BETWEEN (x'') AND (rt0.c1)) AS TEXT) RIGHT OUTER JOIN v0 ON COALESCE((rt1.c1 IN ()), JULIANDAY(v0.c0, rt1.c3, rt1.c1)) WHERE ((rt1.c1 IN (rt1.c3, v0.c0)) COLLATE RTRIM) ORDER BY (NOT (CASE WHEN rt0.c0 THEN rt1.c0 WHEN v0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c3 END)) ASC  NULLS LAST, (~ (rt0.c1 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (json_array_length(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY ABS(((v0.c0)|(v0.c0))), NULL ASC;
SELECT SUM(count) FROM (SELECT ((json_array_length(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ABS(((v0.c0)|(v0.c0))), NULL ASC);
SELECT ALL * FROM v0 WHERE (json_array_length(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY ABS(((v0.c0)|(v0.c0))), NULL ASC;
SELECT SUM(count) FROM (SELECT ((json_array_length(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ABS(((v0.c0)|(v0.c0))), NULL ASC);
SELECT ALL * FROM v0 WHERE (json_array_length(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY ABS(((v0.c0)|(v0.c0))), NULL ASC;
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((rt1.c0) IS TRUE)))>=((rt1.c2)))) ORDER BY (((rt0.c2 IN ()))+(CAST(rt0.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0) IS TRUE)))>=((rt1.c2)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c2 IN ()))+(CAST(rt0.c0 AS BLOB)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((rt1.c0) IS TRUE)))>=((rt1.c2)))) ORDER BY (((rt0.c2 IN ()))+(CAST(rt0.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0) IS TRUE)))>=((rt1.c2)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c2 IN ()))+(CAST(rt0.c0 AS BLOB)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((rt1.c0) IS TRUE)))>=((rt1.c2)))) ORDER BY (((rt0.c2 IN ()))+(CAST(rt0.c0 AS BLOB)))  NULLS FIRST;
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT rt0.c0, (((rt0.c2))>((rt0.c1))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND ((((x'cf692cd0')<=(rt0.c1))))), (((((NULL, rt0.c2, rt0.c0))<=((rt0.c1, rt0.c1, rt0.c0))))&(rt0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT rt0.c0, (((rt0.c2))>((rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND ((((x'cf692cd0')<=(rt0.c1))))), (((((NULL, rt0.c2, rt0.c0))<=((rt0.c1, rt0.c1, rt0.c0))))&(rt0.c2)) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT rt0.c0, (((rt0.c2))>((rt0.c1))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND ((((x'cf692cd0')<=(rt0.c1))))), (((((NULL, rt0.c2, rt0.c0))<=((rt0.c1, rt0.c1, rt0.c0))))&(rt0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT rt0.c0, (((rt0.c2))>((rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND ((((x'cf692cd0')<=(rt0.c1))))), (((((NULL, rt0.c2, rt0.c0))<=((rt0.c1, rt0.c1, rt0.c0))))&(rt0.c2)) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT rt0.c0, (((rt0.c2))>((rt0.c1))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND ((((x'cf692cd0')<=(rt0.c1))))), (((((NULL, rt0.c2, rt0.c0))<=((rt0.c1, rt0.c1, rt0.c0))))&(rt0.c2)) ASC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (TOTAL_CHANGES());
SELECT * FROM v0 WHERE (TRIM(DISTINCT CAST(v0.c0 AS NUMERIC), (v0.c0 IN (v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CAST(v0.c0 AS NUMERIC), (v0.c0 IN (v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (TRIM(DISTINCT CAST(v0.c0 AS NUMERIC), (v0.c0 IN (v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CAST(v0.c0 AS NUMERIC), (v0.c0 IN (v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (TRIM(DISTINCT CAST(v0.c0 AS NUMERIC), (v0.c0 IN (v0.c0, v0.c0))));
SELECT * FROM rt0, v0, rt1 WHERE ((~ ('2*''8z?{n'))) ORDER BY ((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(-1579589171)))OR(rt1.c1))) NOT BETWEEN (((v0.c0)LIKE(rt1.c2))) AND (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ ('2*''8z?{n'))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY ((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(-1579589171)))OR(rt1.c1))) NOT BETWEEN (((v0.c0)LIKE(rt1.c2))) AND (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2)))) ASC);
SELECT * FROM rt0, v0, rt1 WHERE ((~ ('2*''8z?{n'))) ORDER BY ((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(-1579589171)))OR(rt1.c1))) NOT BETWEEN (((v0.c0)LIKE(rt1.c2))) AND (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ ('2*''8z?{n'))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY ((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(-1579589171)))OR(rt1.c1))) NOT BETWEEN (((v0.c0)LIKE(rt1.c2))) AND (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2)))) ASC);
SELECT * FROM rt0, v0, rt1 WHERE ((~ ('2*''8z?{n'))) ORDER BY ((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(-1579589171)))OR(rt1.c1))) NOT BETWEEN (((v0.c0)LIKE(rt1.c2))) AND (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2)))) ASC;
SELECT COUNT(*) FROM rt1 WHERE (-99941487);
SELECT SUM(count) FROM (SELECT ((-99941487) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (-99941487);
SELECT SUM(count) FROM (SELECT ((-99941487) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (-99941487);
SELECT ALL * FROM rt0, rt1, v0 WHERE (((((v0.c0)AND((~ (rt1.c2)))))AND((- (x''))))) ORDER BY (~ ((~ (rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND((~ (rt1.c2)))))AND((- (x''))))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (~ ((~ (rt1.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, v0 WHERE (((((v0.c0)AND((~ (rt1.c2)))))AND((- (x''))))) ORDER BY (~ ((~ (rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND((~ (rt1.c2)))))AND((- (x''))))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (~ ((~ (rt1.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, v0 WHERE (((((v0.c0)AND((~ (rt1.c2)))))AND((- (x''))))) ORDER BY (~ ((~ (rt1.c1))))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY CASE CAST(rt1.c2 AS TEXT)  WHEN rt1.c0 COLLATE BINARY THEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c3 WHEN '' THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN '' THEN rt1.c3 WHEN rt1.c0 THEN x'' END ELSE (~ (rt1.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY CASE CAST(rt1.c2 AS TEXT)  WHEN rt1.c0 COLLATE BINARY THEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c3 WHEN '' THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN '' THEN rt1.c3 WHEN rt1.c0 THEN x'' END ELSE (~ (rt1.c1)) END);
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY CASE CAST(rt1.c2 AS TEXT)  WHEN rt1.c0 COLLATE BINARY THEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c3 WHEN '' THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN '' THEN rt1.c3 WHEN rt1.c0 THEN x'' END ELSE (~ (rt1.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY CASE CAST(rt1.c2 AS TEXT)  WHEN rt1.c0 COLLATE BINARY THEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c3 WHEN '' THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN '' THEN rt1.c3 WHEN rt1.c0 THEN x'' END ELSE (~ (rt1.c1)) END);
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY CASE CAST(rt1.c2 AS TEXT)  WHEN rt1.c0 COLLATE BINARY THEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c3 WHEN '' THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN '' THEN rt1.c3 WHEN rt1.c0 THEN x'' END ELSE (~ (rt1.c1)) END;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((((rt1.c3)<>(rt0.c0)))OR('-1280999963')))AND(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3)!=(rt0.c0)))OR('-1280999963')))AND(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((((rt1.c3)<>(rt0.c0)))OR('-1280999963')))AND(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3)!=(rt0.c0)))OR('-1280999963')))AND(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((((rt1.c3)<>(rt0.c0)))OR('-1280999963')))AND(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN TYPEOF(rt0.c1) THEN HEX(rt0.c2) END) ORDER BY ABS(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END) DESC  NULLS LAST, (NOT (rt0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TYPEOF(rt0.c1) THEN HEX(rt0.c2) END) IS TRUE)  as count FROM rt0 ORDER BY ABS(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END) DESC  NULLS LAST, (NOT (rt0.c2)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN TYPEOF(rt0.c1) THEN HEX(rt0.c2) END) ORDER BY ABS(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END) DESC  NULLS LAST, (NOT (rt0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TYPEOF(rt0.c1) THEN HEX(rt0.c2) END) IS TRUE)  as count FROM rt0 ORDER BY ABS(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END) DESC  NULLS LAST, (NOT (rt0.c2)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN TYPEOF(rt0.c1) THEN HEX(rt0.c2) END) ORDER BY ABS(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END) DESC  NULLS LAST, (NOT (rt0.c2)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 INNER JOIN v0 ON (- (rt1.c0)) WHERE ((((+ (v0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (v0.c0 COLLATE NOCASE))) ORDER BY ((((v0.c0) IS FALSE))<((((rt1.c2))<>((rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON (- (rt1.c0)) ORDER BY ((((v0.c0) IS FALSE))<((((rt1.c2))<>((rt1.c1))))));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN v0 ON (- (rt1.c0)) WHERE ((((+ (v0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (v0.c0 COLLATE NOCASE))) ORDER BY ((((v0.c0) IS FALSE))<((((rt1.c2))<>((rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON (- (rt1.c0)) ORDER BY ((((v0.c0) IS FALSE))<((((rt1.c2))<>((rt1.c1))))));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN v0 ON (- (rt1.c0)) WHERE ((((+ (v0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (v0.c0 COLLATE NOCASE))) ORDER BY ((((v0.c0) IS FALSE))<((((rt1.c2))<>((rt1.c1)))));
SELECT * FROM rt1, rt0 FULL OUTER JOIN v0 ON ((((rt1.c0 COLLATE RTRIM)OR(((((rt0.c2)AND(rt0.c0)))AND(v0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))) WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY 0.07518774573662357  NULLS FIRST, ((((rt1.c2)IS NOT(rt0.c1))) BETWEEN (((rt0.c0)>('1534021408'))) AND (((rt1.c2)<<(rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN v0 ON ((((rt1.c0 COLLATE RTRIM)OR(((((rt0.c2)AND(rt0.c0)))AND(v0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))) ORDER BY 0.07518774573662357  NULLS FIRST, ((((rt1.c2)IS NOT(rt0.c1))) BETWEEN (((rt0.c0)>('1534021408'))) AND (((rt1.c2)<<(rt1.c1)))) ASC);
SELECT * FROM rt1, rt0 FULL OUTER JOIN v0 ON ((((rt1.c0 COLLATE RTRIM)OR(((((rt0.c2)AND(rt0.c0)))AND(v0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))) WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY 0.07518774573662357  NULLS FIRST, ((((rt1.c2)IS NOT(rt0.c1))) BETWEEN (((rt0.c0)>('1534021408'))) AND (((rt1.c2)<<(rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN v0 ON ((((rt1.c0 COLLATE RTRIM)OR(((((rt0.c2)AND(rt0.c0)))AND(v0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))) ORDER BY 0.07518774573662357  NULLS FIRST, ((((rt1.c2)IS NOT(rt0.c1))) BETWEEN (((rt0.c0)>('1534021408'))) AND (((rt1.c2)<<(rt1.c1)))) ASC);
SELECT * FROM rt1, rt0 FULL OUTER JOIN v0 ON ((((rt1.c0 COLLATE RTRIM)OR(((((rt0.c2)AND(rt0.c0)))AND(v0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))) WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY 0.07518774573662357  NULLS FIRST, ((((rt1.c2)IS NOT(rt0.c1))) BETWEEN (((rt0.c0)>('1534021408'))) AND (((rt1.c2)<<(rt1.c1)))) ASC;
SELECT * FROM v0, rt0, rt1 WHERE (LIKELY((((rt0.c2))>=((rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((LIKELY((((rt0.c2))>=((rt1.c0))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT * FROM v0, rt0, rt1 WHERE (LIKELY((((rt0.c2))>=((rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((LIKELY((((rt0.c2))>=((rt1.c0))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT * FROM v0, rt0, rt1 WHERE (LIKELY((((rt0.c2))>=((rt1.c0)))));
SELECT ALL * FROM rt1, v0, rt0 WHERE (NULL) ORDER BY ((((rt1.c2) BETWEEN (rt1.c3) AND (0.16574541559244804))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY ((((rt1.c2) BETWEEN (rt1.c3) AND (0.16574541559244804))) ISNULL) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, v0, rt0 WHERE (NULL) ORDER BY ((((rt1.c2) BETWEEN (rt1.c3) AND (0.16574541559244804))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY ((((rt1.c2) BETWEEN (rt1.c3) AND (0.16574541559244804))) ISNULL) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, v0, rt0 WHERE (NULL) ORDER BY ((((rt1.c2) BETWEEN (rt1.c3) AND (0.16574541559244804))) ISNULL) ASC  NULLS FIRST;
SELECT * FROM rt1, v0 WHERE (((((((((((rt1.c3)OR(rt1.c2)))AND(v0.c0)))OR(v0.c0)))OR(rt1.c2)))<(((rt1.c0)>=(rt1.c2))))) ORDER BY 0.045673442210196424 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c3)OR(rt1.c2)))AND(v0.c0)))OR(v0.c0)))OR(rt1.c2)))<(((rt1.c0)>=(rt1.c2))))) IS TRUE)  as count FROM rt1, v0 ORDER BY 0.045673442210196424 DESC  NULLS FIRST);
SELECT * FROM rt1, v0 WHERE (((((((((((rt1.c3)OR(rt1.c2)))AND(v0.c0)))OR(v0.c0)))OR(rt1.c2)))<(((rt1.c0)>=(rt1.c2))))) ORDER BY 0.045673442210196424 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c3)OR(rt1.c2)))AND(v0.c0)))OR(v0.c0)))OR(rt1.c2)))<(((rt1.c0)>=(rt1.c2))))) IS TRUE)  as count FROM rt1, v0 ORDER BY 0.045673442210196424 DESC  NULLS FIRST);
SELECT * FROM rt1, v0 WHERE (((((((((((rt1.c3)OR(rt1.c2)))AND(v0.c0)))OR(v0.c0)))OR(rt1.c2)))<(((rt1.c0)>=(rt1.c2))))) ORDER BY 0.045673442210196424 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1, 'E-N oM(N', rt0.c0)) BETWEEN (((- (rt0.c0)), CAST(rt0.c1 AS TEXT), 5.26297579E8)) AND ((CAST(rt0.c0 AS BLOB), ((rt0.c2)/(rt0.c1)), SUBSTR(rt0.c1, rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, 'E-N oM(N', rt0.c0)) BETWEEN (((- (rt0.c0)), CAST(rt0.c1 AS TEXT), 5.26297579E8)) AND ((CAST(rt0.c0 AS BLOB), ((rt0.c2)/(rt0.c1)), SUBSTR(rt0.c1, rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1, 'E-N oM(N', rt0.c0)) BETWEEN (((- (rt0.c0)), CAST(rt0.c1 AS TEXT), 5.26297579E8)) AND ((CAST(rt0.c0 AS BLOB), ((rt0.c2)/(rt0.c1)), SUBSTR(rt0.c1, rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, 'E-N oM(N', rt0.c0)) BETWEEN (((- (rt0.c0)), CAST(rt0.c1 AS TEXT), 5.26297579E8)) AND ((CAST(rt0.c0 AS BLOB), ((rt0.c2)/(rt0.c1)), SUBSTR(rt0.c1, rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1, 'E-N oM(N', rt0.c0)) BETWEEN (((- (rt0.c0)), CAST(rt0.c1 AS TEXT), 5.26297579E8)) AND ((CAST(rt0.c0 AS BLOB), ((rt0.c2)/(rt0.c1)), SUBSTR(rt0.c1, rt0.c0)))));
SELECT * FROM rt0, v0 WHERE (CASE rt0.c2  WHEN 1886119506 THEN rt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN 1886119506 THEN rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CASE rt0.c2  WHEN 1886119506 THEN rt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN 1886119506 THEN rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CASE rt0.c2  WHEN 1886119506 THEN rt0.c0 END COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('');
SELECT ALL * FROM v0, rt0, rt1 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))-(((rt0.c2)IS NOT(rt0.c2))))) ORDER BY NULL COLLATE NOCASE COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))-(((rt0.c2)IS NOT(rt0.c2))))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY NULL COLLATE NOCASE COLLATE RTRIM DESC);
SELECT ALL * FROM v0, rt0, rt1 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))-(((rt0.c2)IS NOT(rt0.c2))))) ORDER BY NULL COLLATE NOCASE COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))-(((rt0.c2)IS NOT(rt0.c2))))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY NULL COLLATE NOCASE COLLATE RTRIM DESC);
SELECT ALL * FROM v0, rt0, rt1 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))-(((rt0.c2)IS NOT(rt0.c2))))) ORDER BY NULL COLLATE NOCASE COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (((((rt0.c1)>(v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (((((rt0.c1)>(v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (((((rt0.c1)>(v0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((LIKELIHOOD(DISTINCT rt0.c2, 0.7928620802694702))OR(rt0.c1 COLLATE NOCASE)))AND(0.7904534665876177)));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELIHOOD(DISTINCT rt0.c2, 0.7928620802694702))OR(rt0.c1 COLLATE NOCASE)))AND(0.7904534665876177))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((LIKELIHOOD(DISTINCT rt0.c2, 0.7928620802694702))OR(rt0.c1 COLLATE NOCASE)))AND(0.7904534665876177)));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELIHOOD(DISTINCT rt0.c2, 0.7928620802694702))OR(rt0.c1 COLLATE NOCASE)))AND(0.7904534665876177))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((LIKELIHOOD(DISTINCT rt0.c2, 0.7928620802694702))OR(rt0.c1 COLLATE NOCASE)))AND(0.7904534665876177)));
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)))OR(v0.c0)))AND((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)))OR(v0.c0)))AND((- (rt0.c1))))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)))OR(v0.c0)))AND((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)))OR(v0.c0)))AND((- (rt0.c1))))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)))OR(v0.c0)))AND((- (rt0.c1)))));
SELECT ALL * FROM rt1 WHERE (1434880686);
SELECT SUM(count) FROM (SELECT ((1434880686) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (1434880686);
SELECT SUM(count) FROM (SELECT ((1434880686) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (1434880686);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (IFNULL((('207705640')<<(rt0.c2)), TRIM(DISTINCT v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((('207705640')<<(rt0.c2)), TRIM(DISTINCT v0.c0))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (IFNULL((('207705640')<<(rt0.c2)), TRIM(DISTINCT v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((('207705640')<<(rt0.c2)), TRIM(DISTINCT v0.c0))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (IFNULL((('207705640')<<(rt0.c2)), TRIM(DISTINCT v0.c0)));
SELECT COUNT(*) FROM v0, rt0 WHERE (highlight(v0.c0 COLLATE BINARY, CAST(rt0.c1 AS NUMERIC), (((('899953137')OR(rt0.c1)))AND(v0.c0)), (~ (rt0.c1)))) ORDER BY ((UPPER(rt0.c2)) NOT BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END)) ASC, IFNULL(DISTINCT x'6e1b', ((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((highlight(v0.c0 COLLATE BINARY, CAST(rt0.c1 AS NUMERIC), (((('899953137')OR(rt0.c1)))AND(v0.c0)), (~ (rt0.c1)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((UPPER(rt0.c2)) NOT BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END)) ASC, IFNULL(DISTINCT x'6e1b', ((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (highlight(v0.c0 COLLATE BINARY, CAST(rt0.c1 AS NUMERIC), (((('899953137')OR(rt0.c1)))AND(v0.c0)), (~ (rt0.c1)))) ORDER BY ((UPPER(rt0.c2)) NOT BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END)) ASC, IFNULL(DISTINCT x'6e1b', ((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((highlight(v0.c0 COLLATE BINARY, CAST(rt0.c1 AS NUMERIC), (((('899953137')OR(rt0.c1)))AND(v0.c0)), (~ (rt0.c1)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((UPPER(rt0.c2)) NOT BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END)) ASC, IFNULL(DISTINCT x'6e1b', ((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (highlight(v0.c0 COLLATE BINARY, CAST(rt0.c1 AS NUMERIC), (((('899953137')OR(rt0.c1)))AND(v0.c0)), (~ (rt0.c1)))) ORDER BY ((UPPER(rt0.c2)) NOT BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END)) ASC, IFNULL(DISTINCT x'6e1b', ((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE ((((rt1.c3)OR(rt1.c1)))OR(rt0.c2))  WHEN ((rt0.c2)>=(rt1.c3)) THEN MAX(rt0.c2, rt1.c1, rt1.c0, rt0.c1) ELSE (NOT (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt1.c3)OR(rt1.c1)))OR(rt0.c2))  WHEN ((rt0.c2)>=(rt1.c3)) THEN MAX(rt0.c2, rt1.c1, rt1.c0, rt0.c1) ELSE (NOT (rt1.c1)) END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE ((((rt1.c3)OR(rt1.c1)))OR(rt0.c2))  WHEN ((rt0.c2)>=(rt1.c3)) THEN MAX(rt0.c2, rt1.c1, rt1.c0, rt0.c1) ELSE (NOT (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt1.c3)OR(rt1.c1)))OR(rt0.c2))  WHEN ((rt0.c2)>=(rt1.c3)) THEN MAX(rt0.c2, rt1.c1, rt1.c0, rt0.c1) ELSE (NOT (rt1.c1)) END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE ((((rt1.c3)OR(rt1.c1)))OR(rt0.c2))  WHEN ((rt0.c2)>=(rt1.c3)) THEN MAX(rt0.c2, rt1.c1, rt1.c0, rt0.c1) ELSE (NOT (rt1.c1)) END);
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(0.08002918877186316)))!=(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(0.08002918877186316)))<>(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(0.08002918877186316)))!=(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(0.08002918877186316)))<>(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(0.08002918877186316)))!=(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((SUBSTR(rt0.c2, rt0.c0))<=(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((SUBSTR(rt0.c2, rt0.c0))<=(rt0.c2))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((SUBSTR(rt0.c2, rt0.c0))<=(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((SUBSTR(rt0.c2, rt0.c0))<=(rt0.c2))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((SUBSTR(rt0.c2, rt0.c0))<=(rt0.c2)));
SELECT * FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((rt1.c2 COLLATE BINARY)) AND (('''ET1i'))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((rt1.c2 COLLATE BINARY)) AND (('''ET1i')))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((rt1.c2 COLLATE BINARY)) AND (('''ET1i'))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((rt1.c2 COLLATE BINARY)) AND (('''ET1i')))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((rt1.c2 COLLATE BINARY)) AND (('''ET1i'))));
SELECT ALL * FROM v0, rt1, rt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL * FROM v0, rt1, rt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL * FROM v0, rt1, rt0 WHERE (rt1.c0);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (NOT ((((rt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c1))))) RIGHT OUTER JOIN rt1 ON (- (load_extension(rt1.c0))) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (NOT ((((rt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c1))))) RIGHT OUTER JOIN rt1 ON (- (load_extension(rt1.c0))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (NOT ((((rt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c1))))) RIGHT OUTER JOIN rt1 ON (- (load_extension(rt1.c0))) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (NOT ((((rt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c1))))) RIGHT OUTER JOIN rt1 ON (- (load_extension(rt1.c0))));
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c2) NOT NULL)) ORDER BY CAST((((rt0.c2))<=((rt0.c1))) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((((rt0.c2))<=((rt0.c1))) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c2) NOT NULL)) ORDER BY CAST((((rt0.c2))<=((rt0.c1))) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((((rt0.c2))<=((rt0.c1))) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c2) NOT NULL)) ORDER BY CAST((((rt0.c2))<=((rt0.c1))) AS NUMERIC) DESC  NULLS LAST;
SELECT * FROM rt1 CROSS JOIN rt0 ON (((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c0)) IN ()) WHERE ((((((rt1.c0))==((rt1.c3)))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c1))) AND (CAST(rt1.c0 AS INTEGER)))) ORDER BY ((((rt1.c1)GLOB(rt0.c1))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0))=((rt1.c3)))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c1))) AND (CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON (((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c0)) IN ()) ORDER BY ((((rt1.c1)GLOB(rt0.c1))) ISNULL) DESC  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN rt0 ON (((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c0)) IN ()) WHERE ((((((rt1.c0))==((rt1.c3)))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c1))) AND (CAST(rt1.c0 AS INTEGER)))) ORDER BY ((((rt1.c1)GLOB(rt0.c1))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0))=((rt1.c3)))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c1))) AND (CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON (((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c0)) IN ()) ORDER BY ((((rt1.c1)GLOB(rt0.c1))) ISNULL) DESC  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN rt0 ON (((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c0)) IN ()) WHERE ((((((rt1.c0))==((rt1.c3)))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c1))) AND (CAST(rt1.c0 AS INTEGER)))) ORDER BY ((((rt1.c1)GLOB(rt0.c1))) ISNULL) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) WHERE (((json(rt1.c3)) IS FALSE)) ORDER BY CAST((((rt1.c2, rt0.c0, rt0.c2))>((rt0.c2, rt1.c3, rt0.c1))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((json(rt1.c3)) IS FALSE)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) ORDER BY CAST((((rt1.c2, rt0.c0, rt0.c2))>((rt0.c2, rt1.c3, rt0.c1))) AS NUMERIC));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) WHERE (((json(rt1.c3)) IS FALSE)) ORDER BY CAST((((rt1.c2, rt0.c0, rt0.c2))>((rt0.c2, rt1.c3, rt0.c1))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((json(rt1.c3)) IS FALSE)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) ORDER BY CAST((((rt1.c2, rt0.c0, rt0.c2))>((rt0.c2, rt1.c3, rt0.c1))) AS NUMERIC));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)<(rt0.c0)), ((rt0.c1)*(rt0.c0)), (((rt0.c2))<>((rt0.c1)))))>(((+ (rt0.c1)), CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, LIKELY(NULL))))) ORDER BY (((rt0.c0 IN ()))<>(((rt0.c0)==(rt0.c1)))), ((((rt0.c0) IS TRUE))>=(rt0.c0));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)<(rt0.c0)), ((rt0.c1)*(rt0.c0)), (((rt0.c2))<>((rt0.c1)))))>(((+ (rt0.c1)), CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, LIKELY(NULL))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))<>(((rt0.c0)==(rt0.c1)))), ((((rt0.c0) IS TRUE))>=(rt0.c0)));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)<(rt0.c0)), ((rt0.c1)*(rt0.c0)), (((rt0.c2))<>((rt0.c1)))))>(((+ (rt0.c1)), CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, LIKELY(NULL))))) ORDER BY (((rt0.c0 IN ()))<>(((rt0.c0)==(rt0.c1)))), ((((rt0.c0) IS TRUE))>=(rt0.c0));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)<(rt0.c0)), ((rt0.c1)*(rt0.c0)), (((rt0.c2))<>((rt0.c1)))))>(((+ (rt0.c1)), CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, LIKELY(NULL))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))<>(((rt0.c0)==(rt0.c1)))), ((((rt0.c0) IS TRUE))>=(rt0.c0)));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)<(rt0.c0)), ((rt0.c1)*(rt0.c0)), (((rt0.c2))<>((rt0.c1)))))>(((+ (rt0.c1)), CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, LIKELY(NULL))))) ORDER BY (((rt0.c0 IN ()))<>(((rt0.c0)==(rt0.c1)))), ((((rt0.c0) IS TRUE))>=(rt0.c0));
SELECT * FROM v0, rt0, rt1 WHERE (((CASE WHEN rt0.c1 THEN x'be33' END) BETWEEN ((- (rt1.c1))) AND (rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN x'be33' END) BETWEEN ((- (rt1.c1))) AND (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0, rt1);
SELECT * FROM v0, rt0, rt1 WHERE (((CASE WHEN rt0.c1 THEN x'be33' END) BETWEEN ((- (rt1.c1))) AND (rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN x'be33' END) BETWEEN ((- (rt1.c1))) AND (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0, rt1);
SELECT * FROM v0, rt0, rt1 WHERE (((CASE WHEN rt0.c1 THEN x'be33' END) BETWEEN ((- (rt1.c1))) AND (rt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0 IN (rt0.c0))))>=((rt0.c0)))) ORDER BY (((rt0.c1 IN ())) NOT BETWEEN (((v0.c0)<>(rt0.c1))) AND (((rt0.c1)%(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 IN (rt0.c0))))>=((rt0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c1 IN ())) NOT BETWEEN (((v0.c0)!=(rt0.c1))) AND (((rt0.c1)%(v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0 IN (rt0.c0))))>=((rt0.c0)))) ORDER BY (((rt0.c1 IN ())) NOT BETWEEN (((v0.c0)<>(rt0.c1))) AND (((rt0.c1)%(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 IN (rt0.c0))))>=((rt0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c1 IN ())) NOT BETWEEN (((v0.c0)!=(rt0.c1))) AND (((rt0.c1)%(v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0 IN (rt0.c0))))>=((rt0.c0)))) ORDER BY (((rt0.c1 IN ())) NOT BETWEEN (((v0.c0)<>(rt0.c1))) AND (((rt0.c1)%(v0.c0)))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY TYPEOF(v0.c0) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY TYPEOF(v0.c0) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY TYPEOF(v0.c0) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY TYPEOF(v0.c0) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY TYPEOF(v0.c0) COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((NULL)!=(rt0.c1)) COLLATE NOCASE) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (CAST(NULL AS BLOB)) AND (((rt0.c0)GLOB(NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((NULL)<>(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (CAST(NULL AS BLOB)) AND (((rt0.c0)GLOB(NULL)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)!=(rt0.c1)) COLLATE NOCASE) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (CAST(NULL AS BLOB)) AND (((rt0.c0)GLOB(NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((NULL)<>(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (CAST(NULL AS BLOB)) AND (((rt0.c0)GLOB(NULL)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)!=(rt0.c1)) COLLATE NOCASE) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (CAST(NULL AS BLOB)) AND (((rt0.c0)GLOB(NULL)))) DESC;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CAST(json_array_length(0.7634486018187406) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_array_length(0.7634486018187406) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CAST(json_array_length(0.7634486018187406) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_array_length(0.7634486018187406) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CAST(json_array_length(0.7634486018187406) AS NUMERIC));
SELECT * FROM rt1, rt0 WHERE ((+ (x''))) ORDER BY CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) AS REAL) DESC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE ((+ (x''))) ORDER BY CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) AS REAL) DESC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE ((+ (x''))) ORDER BY CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) AS REAL) DESC  NULLS LAST;
SELECT * FROM rt1, rt0 WHERE (((((rt1.c1) IS FALSE))GLOB(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) IS FALSE))GLOB(rt0.c0))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((rt1.c1) IS FALSE))GLOB(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) IS FALSE))GLOB(rt0.c0))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((rt1.c1) IS FALSE))GLOB(rt0.c0)));
SELECT COUNT(*) FROM rt1, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END) NOTNULL)) ORDER BY ((((-6.03473861E8)IS NOT(rt0.c0))) NOTNULL) DESC  NULLS LAST, CAST(((rt1.c1)>(rt1.c3)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END) NOTNULL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((-6.03473861E8)IS NOT(rt0.c0))) NOTNULL) DESC  NULLS LAST, CAST(((rt1.c1)>(rt1.c3)) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END) NOTNULL)) ORDER BY ((((-6.03473861E8)IS NOT(rt0.c0))) NOTNULL) DESC  NULLS LAST, CAST(((rt1.c1)>(rt1.c3)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END) NOTNULL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((-6.03473861E8)IS NOT(rt0.c0))) NOTNULL) DESC  NULLS LAST, CAST(((rt1.c1)>(rt1.c3)) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END) NOTNULL)) ORDER BY ((((-6.03473861E8)IS NOT(rt0.c0))) NOTNULL) DESC  NULLS LAST, CAST(((rt1.c1)>(rt1.c3)) AS TEXT)  NULLS FIRST;
SELECT * FROM rt1, v0, rt0 WHERE ((NOT (1754093147)));
SELECT SUM(count) FROM (SELECT (((NOT (1754093147))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT * FROM rt1, v0, rt0 WHERE ((NOT (1754093147)));
SELECT SUM(count) FROM (SELECT (((NOT (1754093147))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT * FROM rt1, v0, rt0 WHERE ((NOT (1754093147)));
SELECT ALL * FROM rt1, rt0 WHERE (((rt1.c0) BETWEEN (CASE WHEN rt0.c1 THEN 0.4636026091146632 ELSE rt0.c1 END) AND (rt1.c1))) ORDER BY (((~ (rt0.c0)))LIKE(NULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c0) BETWEEN (CASE WHEN rt0.c1 THEN 0.4636026091146632 ELSE rt0.c1 END) AND (rt1.c1))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((~ (rt0.c0)))LIKE(NULL)));
SELECT ALL * FROM rt1, rt0 WHERE (((rt1.c0) BETWEEN (CASE WHEN rt0.c1 THEN 0.4636026091146632 ELSE rt0.c1 END) AND (rt1.c1))) ORDER BY (((~ (rt0.c0)))LIKE(NULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c0) BETWEEN (CASE WHEN rt0.c1 THEN 0.4636026091146632 ELSE rt0.c1 END) AND (rt1.c1))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((~ (rt0.c0)))LIKE(NULL)));
SELECT ALL * FROM rt1, rt0 WHERE (((rt1.c0) BETWEEN (CASE WHEN rt0.c1 THEN 0.4636026091146632 ELSE rt0.c1 END) AND (rt1.c1))) ORDER BY (((~ (rt0.c0)))LIKE(NULL));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON json(((rt0.c1) IS TRUE)) LEFT OUTER JOIN v0 ON CASE WHEN (+ (rt1.c1)) THEN (+ (rt0.c0)) WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)) THEN (rt0.c1 IN ()) WHEN ((rt0.c0)-(rt0.c0)) THEN rt0.c1 END WHERE (((CAST(rt0.c0 AS INTEGER))GLOB('877038774')));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER))GLOB('877038774'))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON json(((rt0.c1) IS TRUE)) LEFT OUTER JOIN v0 ON CASE WHEN (+ (rt1.c1)) THEN (+ (rt0.c0)) WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)) THEN (rt0.c1 IN ()) WHEN ((rt0.c0)-(rt0.c0)) THEN rt0.c1 END);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON json(((rt0.c1) IS TRUE)) LEFT OUTER JOIN v0 ON CASE WHEN (+ (rt1.c1)) THEN (+ (rt0.c0)) WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)) THEN (rt0.c1 IN ()) WHEN ((rt0.c0)-(rt0.c0)) THEN rt0.c1 END WHERE (((CAST(rt0.c0 AS INTEGER))GLOB('877038774')));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER))GLOB('877038774'))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON json(((rt0.c1) IS TRUE)) LEFT OUTER JOIN v0 ON CASE WHEN (+ (rt1.c1)) THEN (+ (rt0.c0)) WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)) THEN (rt0.c1 IN ()) WHEN ((rt0.c0)-(rt0.c0)) THEN rt0.c1 END);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON json(((rt0.c1) IS TRUE)) LEFT OUTER JOIN v0 ON CASE WHEN (+ (rt1.c1)) THEN (+ (rt0.c0)) WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)) THEN (rt0.c1 IN ()) WHEN ((rt0.c0)-(rt0.c0)) THEN rt0.c1 END WHERE (((CAST(rt0.c0 AS INTEGER))GLOB('877038774')));
SELECT ALL * FROM rt0, v0 WHERE ((((~ (rt0.c2))) NOT BETWEEN (CASE WHEN 0.9864212984633759 THEN rt0.c2 ELSE rt0.c2 END) AND (((((((((rt0.c1)AND('1612536975')))OR(NULL)))AND(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2))) NOT BETWEEN (CASE WHEN 0.9864212984633759 THEN rt0.c2 ELSE rt0.c2 END) AND (((((((((rt0.c1)AND('1612536975')))OR(NULL)))AND(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((~ (rt0.c2))) NOT BETWEEN (CASE WHEN 0.9864212984633759 THEN rt0.c2 ELSE rt0.c2 END) AND (((((((((rt0.c1)AND('1612536975')))OR(NULL)))AND(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2))) NOT BETWEEN (CASE WHEN 0.9864212984633759 THEN rt0.c2 ELSE rt0.c2 END) AND (((((((((rt0.c1)AND('1612536975')))OR(NULL)))AND(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((~ (rt0.c2))) NOT BETWEEN (CASE WHEN 0.9864212984633759 THEN rt0.c2 ELSE rt0.c2 END) AND (((((((((rt0.c1)AND('1612536975')))OR(NULL)))AND(rt0.c0)))OR(rt0.c1)))));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c3);
SELECT COUNT(*) FROM rt1 WHERE ('?[-fN');
SELECT SUM(count) FROM (SELECT ALL (('?[-fN') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ('?[-fN');
SELECT SUM(count) FROM (SELECT ALL (('?[-fN') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ('?[-fN');
SELECT ALL * FROM rt0 WHERE ((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN 'k}2>' THEN rt0.c2 END, (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), CAST(rt0.c0 AS REAL)))<((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c2)=(rt0.c1)), load_extension(rt0.c1, rt0.c0))))) ORDER BY ((DATETIME('-49695716', rt0.c0, rt0.c0))GLOB(((rt0.c1)>=(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN 'k}2>' THEN rt0.c2 END, (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), CAST(rt0.c0 AS REAL)))<((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c2)=(rt0.c1)), load_extension(rt0.c1, rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((DATETIME('-49695716', rt0.c0, rt0.c0))GLOB(((rt0.c1)>=(rt0.c0)))) DESC);
SELECT ALL * FROM rt0 WHERE ((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN 'k}2>' THEN rt0.c2 END, (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), CAST(rt0.c0 AS REAL)))<((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c2)=(rt0.c1)), load_extension(rt0.c1, rt0.c0))))) ORDER BY ((DATETIME('-49695716', rt0.c0, rt0.c0))GLOB(((rt0.c1)>=(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN 'k}2>' THEN rt0.c2 END, (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), CAST(rt0.c0 AS REAL)))<((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c2)=(rt0.c1)), load_extension(rt0.c1, rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((DATETIME('-49695716', rt0.c0, rt0.c0))GLOB(((rt0.c1)>=(rt0.c0)))) DESC);
SELECT ALL * FROM rt0 WHERE ((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN 'k}2>' THEN rt0.c2 END, (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), CAST(rt0.c0 AS REAL)))<((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c2)=(rt0.c1)), load_extension(rt0.c1, rt0.c0))))) ORDER BY ((DATETIME('-49695716', rt0.c0, rt0.c0))GLOB(((rt0.c1)>=(rt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((((rt1.c3)OR(rt1.c0)))AND('-1613485977')) AS NUMERIC)) ORDER BY CAST(((rt1.c1)*(rt1.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c3)OR(rt1.c0)))AND('-1613485977')) AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c1)*(rt1.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((((rt1.c3)OR(rt1.c0)))AND('-1613485977')) AS NUMERIC)) ORDER BY CAST(((rt1.c1)*(rt1.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c3)OR(rt1.c0)))AND('-1613485977')) AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c1)*(rt1.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((((rt1.c3)OR(rt1.c0)))AND('-1613485977')) AS NUMERIC)) ORDER BY CAST(((rt1.c1)*(rt1.c0)) AS NUMERIC);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (rt1.c0 IN ()) WHERE (CASE WHEN (((rt0.c1, rt0.c1, rt1.c1)) BETWEEN ((rt1.c2, rt1.c1, rt0.c1)) AND ((rt0.c2, rt1.c3, rt0.c2))) THEN rt0.c2 COLLATE NOCASE ELSE '1985479989' END) ORDER BY ((CAST(rt1.c1 AS TEXT)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c1, rt0.c1, rt1.c1)) BETWEEN ((rt1.c2, rt1.c1, rt0.c1)) AND ((rt0.c2, rt1.c3, rt0.c2))) THEN rt0.c2 COLLATE NOCASE ELSE '1985479989' END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (rt1.c0 IN ()) ORDER BY ((CAST(rt1.c1 AS TEXT)) ISNULL) DESC);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (rt1.c0 IN ()) WHERE (CASE WHEN (((rt0.c1, rt0.c1, rt1.c1)) BETWEEN ((rt1.c2, rt1.c1, rt0.c1)) AND ((rt0.c2, rt1.c3, rt0.c2))) THEN rt0.c2 COLLATE NOCASE ELSE '1985479989' END) ORDER BY ((CAST(rt1.c1 AS TEXT)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c1, rt0.c1, rt1.c1)) BETWEEN ((rt1.c2, rt1.c1, rt0.c1)) AND ((rt0.c2, rt1.c3, rt0.c2))) THEN rt0.c2 COLLATE NOCASE ELSE '1985479989' END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (rt1.c0 IN ()) ORDER BY ((CAST(rt1.c1 AS TEXT)) ISNULL) DESC);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (rt1.c0 IN ()) WHERE (CASE WHEN (((rt0.c1, rt0.c1, rt1.c1)) BETWEEN ((rt1.c2, rt1.c1, rt0.c1)) AND ((rt0.c2, rt1.c3, rt0.c2))) THEN rt0.c2 COLLATE NOCASE ELSE '1985479989' END) ORDER BY ((CAST(rt1.c1 AS TEXT)) ISNULL) DESC;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1) NOT NULL), ((0.4345606769386361) ISNULL), ((NULL)<<(rt0.c2))))<=(((('') BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c1 COLLATE RTRIM, (+ (NULL)))))) ORDER BY 1.060956544E9;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) NOT NULL), ((0.4345606769386361) ISNULL), ((NULL)<<(rt0.c2))))<=(((('') BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c1 COLLATE RTRIM, (+ (NULL)))))) IS TRUE)  as count FROM rt0 ORDER BY 1.060956544E9);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1) NOT NULL), ((0.4345606769386361) ISNULL), ((NULL)<<(rt0.c2))))<=(((('') BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c1 COLLATE RTRIM, (+ (NULL)))))) ORDER BY 1.060956544E9;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) NOT NULL), ((0.4345606769386361) ISNULL), ((NULL)<<(rt0.c2))))<=(((('') BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c1 COLLATE RTRIM, (+ (NULL)))))) IS TRUE)  as count FROM rt0 ORDER BY 1.060956544E9);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1) NOT NULL), ((0.4345606769386361) ISNULL), ((NULL)<<(rt0.c2))))<=(((('') BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c1 COLLATE RTRIM, (+ (NULL)))))) ORDER BY 1.060956544E9;
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (+ (ABS(rt0.c1))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (+ (ABS(rt0.c1))));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (+ (ABS(rt0.c1))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (+ (ABS(rt0.c1))));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (+ (ABS(rt0.c1))) WHERE (v0.c0);
SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))))) ORDER BY SUBSTR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)), (rt0.c0 IN ())), CASE ((rt0.c2)>=(rt0.c2))  WHEN ((rt0.c2)<<(rt0.c2)) THEN (- ('1503658746')) ELSE ((rt0.c2)&(rt0.c2)) END, (+ (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY SUBSTR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)), (rt0.c0 IN ())), CASE ((rt0.c2)>=(rt0.c2))  WHEN ((rt0.c2)<<(rt0.c2)) THEN (- ('1503658746')) ELSE ((rt0.c2)&(rt0.c2)) END, (+ (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))))) ORDER BY SUBSTR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)), (rt0.c0 IN ())), CASE ((rt0.c2)>=(rt0.c2))  WHEN ((rt0.c2)<<(rt0.c2)) THEN (- ('1503658746')) ELSE ((rt0.c2)&(rt0.c2)) END, (+ (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY SUBSTR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)), (rt0.c0 IN ())), CASE ((rt0.c2)>=(rt0.c2))  WHEN ((rt0.c2)<<(rt0.c2)) THEN (- ('1503658746')) ELSE ((rt0.c2)&(rt0.c2)) END, (+ (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))))) ORDER BY SUBSTR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)), (rt0.c0 IN ())), CASE ((rt0.c2)>=(rt0.c2))  WHEN ((rt0.c2)<<(rt0.c2)) THEN (- ('1503658746')) ELSE ((rt0.c2)&(rt0.c2)) END, (+ (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END));
SELECT * FROM rt1 WHERE ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)) IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)) IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)) IN ()));
SELECT ALL * FROM rt1 WHERE ((- (((((rt1.c1)OR(rt1.c3)))OR(rt1.c2))))) ORDER BY ((((((rt1.c2)AND(rt1.c1)))OR(rt1.c1)))<(((rt1.c0)>(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt1.c1)OR(rt1.c3)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2)AND(rt1.c1)))OR(rt1.c1)))<(((rt1.c0)>(rt1.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((- (((((rt1.c1)OR(rt1.c3)))OR(rt1.c2))))) ORDER BY ((((((rt1.c2)AND(rt1.c1)))OR(rt1.c1)))<(((rt1.c0)>(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt1.c1)OR(rt1.c3)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2)AND(rt1.c1)))OR(rt1.c1)))<(((rt1.c0)>(rt1.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((- (((((rt1.c1)OR(rt1.c3)))OR(rt1.c2))))) ORDER BY ((((((rt1.c2)AND(rt1.c1)))OR(rt1.c1)))<(((rt1.c0)>(rt1.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1))<=((((rt0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1))<=((((rt0.c0) NOTNULL))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1))<=((((rt0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1))<=((((rt0.c0) NOTNULL))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1))<=((((rt0.c0) NOTNULL)))));
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE ((((rt1.c1, rt0.c0, x'ce0b')) BETWEEN ((CAST(rt1.c1 AS NUMERIC), DATETIME(rt1.c1, NULL, rt1.c0), (((rt0.c2)) NOT BETWEEN ((x'')) AND ((-188376238))))) AND (((rt1.c0 IN (rt1.c2)), CAST(v0.c0 AS REAL), CAST(rt0.c0 AS BLOB))))) ORDER BY (((rt0.c2)|(rt1.c2)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1, rt0.c0, x'ce0b')) BETWEEN ((CAST(rt1.c1 AS NUMERIC), DATETIME(rt1.c1, NULL, rt1.c0), (((rt0.c2)) NOT BETWEEN ((x'')) AND ((-188376238))))) AND (((rt1.c0 IN (rt1.c2)), CAST(v0.c0 AS REAL), CAST(rt0.c0 AS BLOB))))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (((rt0.c2)|(rt1.c2)) IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE ((((rt1.c1, rt0.c0, x'ce0b')) BETWEEN ((CAST(rt1.c1 AS NUMERIC), DATETIME(rt1.c1, NULL, rt1.c0), (((rt0.c2)) NOT BETWEEN ((x'')) AND ((-188376238))))) AND (((rt1.c0 IN (rt1.c2)), CAST(v0.c0 AS REAL), CAST(rt0.c0 AS BLOB))))) ORDER BY (((rt0.c2)|(rt1.c2)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1, rt0.c0, x'ce0b')) BETWEEN ((CAST(rt1.c1 AS NUMERIC), DATETIME(rt1.c1, NULL, rt1.c0), (((rt0.c2)) NOT BETWEEN ((x'')) AND ((-188376238))))) AND (((rt1.c0 IN (rt1.c2)), CAST(v0.c0 AS REAL), CAST(rt0.c0 AS BLOB))))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (((rt0.c2)|(rt1.c2)) IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE ((((rt1.c1, rt0.c0, x'ce0b')) BETWEEN ((CAST(rt1.c1 AS NUMERIC), DATETIME(rt1.c1, NULL, rt1.c0), (((rt0.c2)) NOT BETWEEN ((x'')) AND ((-188376238))))) AND (((rt1.c0 IN (rt1.c2)), CAST(v0.c0 AS REAL), CAST(rt0.c0 AS BLOB))))) ORDER BY (((rt0.c2)|(rt1.c2)) IN ()) DESC;
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 AS BLOB));
SELECT COUNT(*) FROM v0, rt1 WHERE (CASE ((rt1.c2) NOTNULL)  WHEN ((x'')<(v0.c0)) THEN rt1.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2) NOTNULL)  WHEN ((x'')<(v0.c0)) THEN rt1.c1 END) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (CASE ((rt1.c2) NOTNULL)  WHEN ((x'')<(v0.c0)) THEN rt1.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2) NOTNULL)  WHEN ((x'')<(v0.c0)) THEN rt1.c1 END) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (CASE ((rt1.c2) NOTNULL)  WHEN ((x'')<(v0.c0)) THEN rt1.c1 END);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2 COLLATE RTRIM))<=((rt1.c3 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 COLLATE RTRIM))<=((rt1.c3 COLLATE BINARY)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2 COLLATE RTRIM))<=((rt1.c3 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 COLLATE RTRIM))<=((rt1.c3 COLLATE BINARY)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2 COLLATE RTRIM))<=((rt1.c3 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN ((((rt0.c0, rt0.c1, rt0.c1))<=((rt0.c1, rt0.c2, rt0.c2))), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY json_insert(rt0.c0 COLLATE BINARY, rt0.c0, ((rt0.c1)||(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN ((((rt0.c0, rt0.c1, rt0.c1))<=((rt0.c1, rt0.c2, rt0.c2))), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY json_insert(rt0.c0 COLLATE BINARY, rt0.c0, ((rt0.c1)||(rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN ((((rt0.c0, rt0.c1, rt0.c1))<=((rt0.c1, rt0.c2, rt0.c2))), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY json_insert(rt0.c0 COLLATE BINARY, rt0.c0, ((rt0.c1)||(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN ((((rt0.c0, rt0.c1, rt0.c1))<=((rt0.c1, rt0.c2, rt0.c2))), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY json_insert(rt0.c0 COLLATE BINARY, rt0.c0, ((rt0.c1)||(rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE ((x'59a0' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'59a0' IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((x'59a0' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'59a0' IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((x'59a0' IN ()));
SELECT * FROM rt1, v0 WHERE (((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 END) NOT BETWEEN ((((rt1.c1))>((rt1.c3)))) AND (rt1.c0))) ORDER BY ((CASE WHEN rt1.c1 THEN x'210d' ELSE v0.c0 END) NOT BETWEEN (((rt1.c2) NOT NULL)) AND (((rt1.c1)GLOB(rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 END) NOT BETWEEN ((((rt1.c1))>((rt1.c3)))) AND (rt1.c0))) IS TRUE)  as count FROM rt1, v0 ORDER BY ((CASE WHEN rt1.c1 THEN x'210d' ELSE v0.c0 END) NOT BETWEEN (((rt1.c2) NOT NULL)) AND (((rt1.c1)GLOB(rt1.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt1, v0 WHERE (((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 END) NOT BETWEEN ((((rt1.c1))>((rt1.c3)))) AND (rt1.c0))) ORDER BY ((CASE WHEN rt1.c1 THEN x'210d' ELSE v0.c0 END) NOT BETWEEN (((rt1.c2) NOT NULL)) AND (((rt1.c1)GLOB(rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 END) NOT BETWEEN ((((rt1.c1))>((rt1.c3)))) AND (rt1.c0))) IS TRUE)  as count FROM rt1, v0 ORDER BY ((CASE WHEN rt1.c1 THEN x'210d' ELSE v0.c0 END) NOT BETWEEN (((rt1.c2) NOT NULL)) AND (((rt1.c1)GLOB(rt1.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt1, v0 WHERE (((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 END) NOT BETWEEN ((((rt1.c1))>((rt1.c3)))) AND (rt1.c0))) ORDER BY ((CASE WHEN rt1.c1 THEN x'210d' ELSE v0.c0 END) NOT BETWEEN (((rt1.c2) NOT NULL)) AND (((rt1.c1)GLOB(rt1.c2)))) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((IFNULL(DISTINCT v0.c0, v0.c0)) IS TRUE)) ORDER BY CASE (((v0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0)))  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 COLLATE RTRIM THEN v0.c0 COLLATE NOCASE WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE BINARY ELSE ((((v0.c0)AND(x'')))OR(v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT v0.c0, v0.c0)) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY CASE (((v0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0)))  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 COLLATE RTRIM THEN v0.c0 COLLATE NOCASE WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE BINARY ELSE ((((v0.c0)AND(x'')))OR(v0.c0)) END);
SELECT ALL * FROM v0 WHERE (((IFNULL(DISTINCT v0.c0, v0.c0)) IS TRUE)) ORDER BY CASE (((v0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0)))  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 COLLATE RTRIM THEN v0.c0 COLLATE NOCASE WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE BINARY ELSE ((((v0.c0)AND(x'')))OR(v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT v0.c0, v0.c0)) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY CASE (((v0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0)))  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 COLLATE RTRIM THEN v0.c0 COLLATE NOCASE WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE BINARY ELSE ((((v0.c0)AND(x'')))OR(v0.c0)) END);
SELECT ALL * FROM v0 WHERE (((IFNULL(DISTINCT v0.c0, v0.c0)) IS TRUE)) ORDER BY CASE (((v0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0)))  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 COLLATE RTRIM THEN v0.c0 COLLATE NOCASE WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE BINARY ELSE ((((v0.c0)AND(x'')))OR(v0.c0)) END;
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON (- ((((rt1.c2, v0.c0, rt1.c1))!=((v0.c0, rt1.c0, rt1.c3))))) WHERE (((((rt1.c2)IS NOT(v0.c0)))%(((rt1.c0)-(v0.c0))))) ORDER BY rt1.c2  NULLS FIRST, ((rt1.c3) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)IS NOT(v0.c0)))%(((rt1.c0)-(v0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON (- ((((rt1.c2, v0.c0, rt1.c1))!=((v0.c0, rt1.c0, rt1.c3))))) ORDER BY rt1.c2  NULLS FIRST, ((rt1.c3) IS TRUE) ASC  NULLS LAST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON (- ((((rt1.c2, v0.c0, rt1.c1))!=((v0.c0, rt1.c0, rt1.c3))))) WHERE (((((rt1.c2)IS NOT(v0.c0)))%(((rt1.c0)-(v0.c0))))) ORDER BY rt1.c2  NULLS FIRST, ((rt1.c3) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)IS NOT(v0.c0)))%(((rt1.c0)-(v0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON (- ((((rt1.c2, v0.c0, rt1.c1))!=((v0.c0, rt1.c0, rt1.c3))))) ORDER BY rt1.c2  NULLS FIRST, ((rt1.c3) IS TRUE) ASC  NULLS LAST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON (- ((((rt1.c2, v0.c0, rt1.c1))!=((v0.c0, rt1.c0, rt1.c3))))) WHERE (((((rt1.c2)IS NOT(v0.c0)))%(((rt1.c0)-(v0.c0))))) ORDER BY rt1.c2  NULLS FIRST, ((rt1.c3) IS TRUE) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE ((((rt1.c1)) BETWEEN ((CAST(rt0.c0 AS REAL))) AND ((rt0.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((CAST(rt0.c0 AS REAL))) AND ((rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE ((((rt1.c1)) BETWEEN ((CAST(rt0.c0 AS REAL))) AND ((rt0.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((CAST(rt0.c0 AS REAL))) AND ((rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE ((((rt1.c1)) BETWEEN ((CAST(rt0.c0 AS REAL))) AND ((rt0.c2 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))>=(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))>=(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))>=(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))>=(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))>=(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT * FROM rt1 WHERE (((rt1.c3) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt1.c3) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c3) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt1.c3) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c3) IS TRUE));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON CAST(rt1.c2 AS NUMERIC) WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE NULL END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE NULL END) IS TRUE)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON CAST(rt1.c2 AS NUMERIC));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON CAST(rt1.c2 AS NUMERIC) WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE NULL END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE NULL END) IS TRUE)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON CAST(rt1.c2 AS NUMERIC));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON CAST(rt1.c2 AS NUMERIC) WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE NULL END) IS TRUE));
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0)))));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1)>(rt1.c3)))==(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2))))) ORDER BY (((rt1.c1)) NOT BETWEEN ((((('^T{᜖C\n⋹\n<'))<((rt1.c2))))) AND ((CAST(rt1.c3 AS TEXT))))  NULLS FIRST, (((((rt1.c3)) NOT BETWEEN ((0.4131162321012751)) AND ((rt1.c1)))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)>(rt1.c3)))==(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1)) NOT BETWEEN ((((('^T{᜖C\n⋹\n<'))<((rt1.c2))))) AND ((CAST(rt1.c3 AS TEXT))))  NULLS FIRST, (((((rt1.c3)) NOT BETWEEN ((0.4131162321012751)) AND ((rt1.c1)))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1)>(rt1.c3)))==(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2))))) ORDER BY (((rt1.c1)) NOT BETWEEN ((((('^T{᜖C\n⋹\n<'))<((rt1.c2))))) AND ((CAST(rt1.c3 AS TEXT))))  NULLS FIRST, (((((rt1.c3)) NOT BETWEEN ((0.4131162321012751)) AND ((rt1.c1)))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)>(rt1.c3)))==(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1)) NOT BETWEEN ((((('^T{᜖C\n⋹\n<'))<((rt1.c2))))) AND ((CAST(rt1.c3 AS TEXT))))  NULLS FIRST, (((((rt1.c3)) NOT BETWEEN ((0.4131162321012751)) AND ((rt1.c1)))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1)>(rt1.c3)))==(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2))))) ORDER BY (((rt1.c1)) NOT BETWEEN ((((('^T{᜖C\n⋹\n<'))<((rt1.c2))))) AND ((CAST(rt1.c3 AS TEXT))))  NULLS FIRST, (((((rt1.c3)) NOT BETWEEN ((0.4131162321012751)) AND ((rt1.c1)))) IS TRUE)  NULLS FIRST;
SELECT ALL * FROM v0, rt1, rt0 WHERE (CAST(((0.8299870017007982)GLOB(v0.c0)) AS NUMERIC)) ORDER BY (((rt0.c0) BETWEEN (rt1.c3) AND (v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CAST(((0.8299870017007982)GLOB(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY (((rt0.c0) BETWEEN (rt1.c3) AND (v0.c0)) IN ()));
SELECT ALL * FROM v0, rt1, rt0 WHERE (CAST(((0.8299870017007982)GLOB(v0.c0)) AS NUMERIC)) ORDER BY (((rt0.c0) BETWEEN (rt1.c3) AND (v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CAST(((0.8299870017007982)GLOB(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY (((rt0.c0) BETWEEN (rt1.c3) AND (v0.c0)) IN ()));
SELECT ALL * FROM v0, rt1, rt0 WHERE (CAST(((0.8299870017007982)GLOB(v0.c0)) AS NUMERIC)) ORDER BY (((rt0.c0) BETWEEN (rt1.c3) AND (v0.c0)) IN ());
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE ((NOT (((rt0.c0) NOT BETWEEN (-6.91659882E8) AND (rt1.c1))))) ORDER BY (ABS(DISTINCT rt1.c2) IN ((rt1.c1 IN ()))), (~ ((((rt0.c1))>=((rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0) NOT BETWEEN (-6.91659882E8) AND (rt1.c1))))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (ABS(DISTINCT rt1.c2) IN ((rt1.c1 IN ()))), (~ ((((rt0.c1))>=((rt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE ((NOT (((rt0.c0) NOT BETWEEN (-6.91659882E8) AND (rt1.c1))))) ORDER BY (ABS(DISTINCT rt1.c2) IN ((rt1.c1 IN ()))), (~ ((((rt0.c1))>=((rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0) NOT BETWEEN (-6.91659882E8) AND (rt1.c1))))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (ABS(DISTINCT rt1.c2) IN ((rt1.c1 IN ()))), (~ ((((rt0.c1))>=((rt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE ((NOT (((rt0.c0) NOT BETWEEN (-6.91659882E8) AND (rt1.c1))))) ORDER BY (ABS(DISTINCT rt1.c2) IN ((rt1.c1 IN ()))), (~ ((((rt0.c1))>=((rt0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0 COLLATE BINARY))) ORDER BY x'6857' DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY x'6857' DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0 COLLATE BINARY))) ORDER BY x'6857' DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY x'6857' DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0 COLLATE BINARY))) ORDER BY x'6857' DESC;
SELECT * FROM v0 RIGHT OUTER JOIN rt1 ON (('B')&(((rt1.c0) NOT BETWEEN (rt1.c0) AND (v0.c0)))) WHERE ('-280743371');
SELECT SUM(count) FROM (SELECT (('-280743371') IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON (('B')&(((rt1.c0) NOT BETWEEN (rt1.c0) AND (v0.c0)))));
SELECT * FROM v0 RIGHT OUTER JOIN rt1 ON (('B')&(((rt1.c0) NOT BETWEEN (rt1.c0) AND (v0.c0)))) WHERE ('-280743371');
SELECT SUM(count) FROM (SELECT (('-280743371') IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON (('B')&(((rt1.c0) NOT BETWEEN (rt1.c0) AND (v0.c0)))));
SELECT * FROM v0 RIGHT OUTER JOIN rt1 ON (('B')&(((rt1.c0) NOT BETWEEN (rt1.c0) AND (v0.c0)))) WHERE ('-280743371');
SELECT * FROM v0, rt1, rt0 WHERE (((TRIM(v0.c0)) NOTNULL)) ORDER BY (((rt0.c0 IN (rt1.c2)))==(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(v0.c0)) NOTNULL)) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY (((rt0.c0 IN (rt1.c2)))==(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0))))  NULLS FIRST);
SELECT * FROM v0, rt1, rt0 WHERE (((TRIM(v0.c0)) NOTNULL)) ORDER BY (((rt0.c0 IN (rt1.c2)))==(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(v0.c0)) NOTNULL)) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY (((rt0.c0 IN (rt1.c2)))==(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0))))  NULLS FIRST);
SELECT * FROM v0, rt1, rt0 WHERE (((TRIM(v0.c0)) NOTNULL)) ORDER BY (((rt0.c0 IN (rt1.c2)))==(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0))))  NULLS FIRST;
SELECT * FROM rt0 WHERE ((~ (((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))));
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (((((((((((((v0.c0)AND(rt0.c0)))AND(rt1.c0)))AND(v0.c0)))OR(0.9307990079451975)))AND((((rt0.c1))==((rt1.c0))))))OR(((((rt0.c1)AND(rt0.c2)))OR(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((v0.c0)AND(rt0.c0)))AND(rt1.c0)))AND(v0.c0)))OR(0.9307990079451975)))AND((((rt0.c1))==((rt1.c0))))))OR(((((rt0.c1)AND(rt0.c2)))OR(rt1.c3))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (((((((((((((v0.c0)AND(rt0.c0)))AND(rt1.c0)))AND(v0.c0)))OR(0.9307990079451975)))AND((((rt0.c1))==((rt1.c0))))))OR(((((rt0.c1)AND(rt0.c2)))OR(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((v0.c0)AND(rt0.c0)))AND(rt1.c0)))AND(v0.c0)))OR(0.9307990079451975)))AND((((rt0.c1))==((rt1.c0))))))OR(((((rt0.c1)AND(rt0.c2)))OR(rt1.c3))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (((((((((((((v0.c0)AND(rt0.c0)))AND(rt1.c0)))AND(v0.c0)))OR(0.9307990079451975)))AND((((rt0.c1))==((rt1.c0))))))OR(((((rt0.c1)AND(rt0.c2)))OR(rt1.c3)))));
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (CAST((v0.c0 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (CAST((v0.c0 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (CAST((v0.c0 IN ()) AS TEXT));
SELECT ALL * FROM rt1 WHERE ((((~ (rt1.c2)))>=(CASE WHEN rt1.c3 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2)))>=(CASE WHEN rt1.c3 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((~ (rt1.c2)))>=(CASE WHEN rt1.c3 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2)))>=(CASE WHEN rt1.c3 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((~ (rt1.c2)))>=(CASE WHEN rt1.c3 THEN rt1.c0 END)));
SELECT * FROM rt1, v0 WHERE (NULL) ORDER BY 'c1' ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, v0 ORDER BY 'c1' ASC);
SELECT * FROM rt1, v0 WHERE (NULL) ORDER BY 'c1' ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, v0 ORDER BY 'c1' ASC);
SELECT * FROM rt1, v0 WHERE (NULL) ORDER BY 'c1' ASC;
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c3 AS BLOB))/(rt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c3 AS BLOB))/(rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c3 AS BLOB))/(rt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c3 AS BLOB))/(rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c3 AS BLOB))/(rt1.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt1 ON ((((((rt1.c2)OR(v0.c0)))AND(rt1.c1))) ISNULL) WHERE ((((rt1.c1 IN ()))*(((rt1.c1)GLOB(0.3128841595143601)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))*(((rt1.c1)GLOB(0.3128841595143601))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON ((((((rt1.c2)OR(v0.c0)))AND(rt1.c1))) ISNULL));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt1 ON ((((((rt1.c2)OR(v0.c0)))AND(rt1.c1))) ISNULL) WHERE ((((rt1.c1 IN ()))*(((rt1.c1)GLOB(0.3128841595143601)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))*(((rt1.c1)GLOB(0.3128841595143601))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON ((((((rt1.c2)OR(v0.c0)))AND(rt1.c1))) ISNULL));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt1 ON ((((((rt1.c2)OR(v0.c0)))AND(rt1.c1))) ISNULL) WHERE ((((rt1.c1 IN ()))*(((rt1.c1)GLOB(0.3128841595143601)))));
SELECT ALL * FROM rt1 WHERE (((rt1.c3 COLLATE NOCASE) IS TRUE)) ORDER BY UNLIKELY(DISTINCT ((((rt1.c0)AND(rt1.c1)))OR(rt1.c3))) ASC, CAST((rt1.c0 IN ()) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY UNLIKELY(DISTINCT ((((rt1.c0)AND(rt1.c1)))OR(rt1.c3))) ASC, CAST((rt1.c0 IN ()) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((rt1.c3 COLLATE NOCASE) IS TRUE)) ORDER BY UNLIKELY(DISTINCT ((((rt1.c0)AND(rt1.c1)))OR(rt1.c3))) ASC, CAST((rt1.c0 IN ()) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY UNLIKELY(DISTINCT ((((rt1.c0)AND(rt1.c1)))OR(rt1.c3))) ASC, CAST((rt1.c0 IN ()) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((rt1.c3 COLLATE NOCASE) IS TRUE)) ORDER BY UNLIKELY(DISTINCT ((((rt1.c0)AND(rt1.c1)))OR(rt1.c3))) ASC, CAST((rt1.c0 IN ()) AS TEXT)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT COUNT(*) FROM v0 CROSS JOIN rt1 ON ((((rt1.c0) ISNULL)) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((('b9h뙿NdN')<=(rt1.c1)))) WHERE (rt1.c1) ORDER BY ((((rt1.c2) IS FALSE)) NOT BETWEEN (((-1.335719226E9) IS FALSE)) AND (((rt1.c1) BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON ((((rt1.c0) ISNULL)) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((('b9h뙿NdN')<=(rt1.c1)))) ORDER BY ((((rt1.c2) IS FALSE)) NOT BETWEEN (((-1.335719226E9) IS FALSE)) AND (((rt1.c1) BETWEEN (v0.c0) AND (v0.c0)))) DESC);
SELECT COUNT(*) FROM v0 CROSS JOIN rt1 ON ((((rt1.c0) ISNULL)) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((('b9h뙿NdN')<=(rt1.c1)))) WHERE (rt1.c1) ORDER BY ((((rt1.c2) IS FALSE)) NOT BETWEEN (((-1.335719226E9) IS FALSE)) AND (((rt1.c1) BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON ((((rt1.c0) ISNULL)) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((('b9h뙿NdN')<=(rt1.c1)))) ORDER BY ((((rt1.c2) IS FALSE)) NOT BETWEEN (((-1.335719226E9) IS FALSE)) AND (((rt1.c1) BETWEEN (v0.c0) AND (v0.c0)))) DESC);
SELECT COUNT(*) FROM v0 CROSS JOIN rt1 ON ((((rt1.c0) ISNULL)) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((('b9h뙿NdN')<=(rt1.c1)))) WHERE (rt1.c1) ORDER BY ((((rt1.c2) IS FALSE)) NOT BETWEEN (((-1.335719226E9) IS FALSE)) AND (((rt1.c1) BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON ((rt1.c1)AND(v0.c0)) WHERE ((((MIN(rt1.c2, rt1.c1), ((rt1.c3) IS TRUE), ((v0.c0)<>(rt1.c2))))>((((rt1.c2)<(rt1.c1)), (- (rt1.c0)), (('-945500541') NOT BETWEEN (rt1.c1) AND ('H?2k#')))))) ORDER BY CASE ((v0.c0) IS TRUE)  WHEN (rt1.c1 IN ()) THEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((MIN(rt1.c2, rt1.c1), ((rt1.c3) IS TRUE), ((v0.c0)<>(rt1.c2))))>((((rt1.c2)<(rt1.c1)), (- (rt1.c0)), (('-945500541') NOT BETWEEN (rt1.c1) AND ('H?2k#')))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON ((rt1.c1)AND(v0.c0)) ORDER BY CASE ((v0.c0) IS TRUE)  WHEN (rt1.c1 IN ()) THEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) END ASC  NULLS FIRST);
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON ((rt1.c1)AND(v0.c0)) WHERE ((((MIN(rt1.c2, rt1.c1), ((rt1.c3) IS TRUE), ((v0.c0)<>(rt1.c2))))>((((rt1.c2)<(rt1.c1)), (- (rt1.c0)), (('-945500541') NOT BETWEEN (rt1.c1) AND ('H?2k#')))))) ORDER BY CASE ((v0.c0) IS TRUE)  WHEN (rt1.c1 IN ()) THEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((MIN(rt1.c2, rt1.c1), ((rt1.c3) IS TRUE), ((v0.c0)<>(rt1.c2))))>((((rt1.c2)<(rt1.c1)), (- (rt1.c0)), (('-945500541') NOT BETWEEN (rt1.c1) AND ('H?2k#')))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON ((rt1.c1)AND(v0.c0)) ORDER BY CASE ((v0.c0) IS TRUE)  WHEN (rt1.c1 IN ()) THEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) END ASC  NULLS FIRST);
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON ((rt1.c1)AND(v0.c0)) WHERE ((((MIN(rt1.c2, rt1.c1), ((rt1.c3) IS TRUE), ((v0.c0)<>(rt1.c2))))>((((rt1.c2)<(rt1.c1)), (- (rt1.c0)), (('-945500541') NOT BETWEEN (rt1.c1) AND ('H?2k#')))))) ORDER BY CASE ((v0.c0) IS TRUE)  WHEN (rt1.c1 IN ()) THEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) END ASC  NULLS FIRST;
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON '' WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN (-581537331) AND (rt1.c0))) ORDER BY (((((((rt1.c1))<((rt0.c0))))OR((rt1.c3 IN (rt1.c0)))))OR(((rt1.c0)||(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB)) BETWEEN (-581537331) AND (rt1.c0))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON '' ORDER BY (((((((rt1.c1))<((rt0.c0))))OR((rt1.c3 IN (rt1.c0)))))OR(((rt1.c0)||(rt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON '' WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN (-581537331) AND (rt1.c0))) ORDER BY (((((((rt1.c1))<((rt0.c0))))OR((rt1.c3 IN (rt1.c0)))))OR(((rt1.c0)||(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB)) BETWEEN (-581537331) AND (rt1.c0))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON '' ORDER BY (((((((rt1.c1))<((rt0.c0))))OR((rt1.c3 IN (rt1.c0)))))OR(((rt1.c0)||(rt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON '' WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN (-581537331) AND (rt1.c0))) ORDER BY (((((((rt1.c1))<((rt0.c0))))OR((rt1.c3 IN (rt1.c0)))))OR(((rt1.c0)||(rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c2)LIKE(v0.c0)))==(((-1452386761) NOT NULL)))) ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (LIKELIHOOD(v0.c0, 0.46043066020482093)) AND (((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(NULL)))) ASC  NULLS FIRST, ((((((v0.c0)AND(v0.c0)))OR(rt0.c0)))||(0.23436047208314836))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)LIKE(v0.c0)))==(((-1452386761) NOT NULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (LIKELIHOOD(v0.c0, 0.46043066020482093)) AND (((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(NULL)))) ASC  NULLS FIRST, ((((((v0.c0)AND(v0.c0)))OR(rt0.c0)))||(0.23436047208314836))  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c2)LIKE(v0.c0)))==(((-1452386761) NOT NULL)))) ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (LIKELIHOOD(v0.c0, 0.46043066020482093)) AND (((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(NULL)))) ASC  NULLS FIRST, ((((((v0.c0)AND(v0.c0)))OR(rt0.c0)))||(0.23436047208314836))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)LIKE(v0.c0)))==(((-1452386761) NOT NULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (LIKELIHOOD(v0.c0, 0.46043066020482093)) AND (((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(NULL)))) ASC  NULLS FIRST, ((((((v0.c0)AND(v0.c0)))OR(rt0.c0)))||(0.23436047208314836))  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c2)LIKE(v0.c0)))==(((-1452386761) NOT NULL)))) ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (LIKELIHOOD(v0.c0, 0.46043066020482093)) AND (((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(NULL)))) ASC  NULLS FIRST, ((((((v0.c0)AND(v0.c0)))OR(rt0.c0)))||(0.23436047208314836))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE rt1.c2  WHEN ((((((((rt1.c2)AND(0.3080160328704612)))AND(rt1.c2)))OR(rt1.c0)))OR(rt0.c1)) THEN rt0.c2 COLLATE RTRIM END) ORDER BY ((((((rt1.c3) IS FALSE))OR(MIN(rt0.c2, rt0.c0))))AND(CAST(rt0.c2 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c2  WHEN ((((((((rt1.c2)AND(0.3080160328704612)))AND(rt1.c2)))OR(rt1.c0)))OR(rt0.c1)) THEN rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((((rt1.c3) IS FALSE))OR(MIN(rt0.c2, rt0.c0))))AND(CAST(rt0.c2 AS BLOB)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE rt1.c2  WHEN ((((((((rt1.c2)AND(0.3080160328704612)))AND(rt1.c2)))OR(rt1.c0)))OR(rt0.c1)) THEN rt0.c2 COLLATE RTRIM END) ORDER BY ((((((rt1.c3) IS FALSE))OR(MIN(rt0.c2, rt0.c0))))AND(CAST(rt0.c2 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c2  WHEN ((((((((rt1.c2)AND(0.3080160328704612)))AND(rt1.c2)))OR(rt1.c0)))OR(rt0.c1)) THEN rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((((rt1.c3) IS FALSE))OR(MIN(rt0.c2, rt0.c0))))AND(CAST(rt0.c2 AS BLOB)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE rt1.c2  WHEN ((((((((rt1.c2)AND(0.3080160328704612)))AND(rt1.c2)))OR(rt1.c0)))OR(rt0.c1)) THEN rt0.c2 COLLATE RTRIM END) ORDER BY ((((((rt1.c3) IS FALSE))OR(MIN(rt0.c2, rt0.c0))))AND(CAST(rt0.c2 AS BLOB)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT NULL))IS(((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c2)))OR(0.0535035160928643)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT NULL))IS(((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c2)))OR(0.0535035160928643))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT NULL))IS(((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c2)))OR(0.0535035160928643)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT NULL))IS(((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c2)))OR(0.0535035160928643))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT NULL))IS(((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c2)))OR(0.0535035160928643)))));
SELECT * FROM rt0, rt1 WHERE ((((rt1.c0, rt1.c0, rt0.c1, rt1.c0, '᩷')) BETWEEN ((json_valid(rt0.c0), rt1.c3 COLLATE RTRIM, ((rt1.c3)/(rt1.c3)), (('-1443883918') ISNULL), NULL)) AND (((rt1.c2 IN ()), (rt1.c0 IN (rt1.c0, rt1.c1)), (NOT (rt1.c3)), (rt1.c1 IN ()), NULL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c0, rt0.c1, rt1.c0, '᩷')) BETWEEN ((json_valid(rt0.c0), rt1.c3 COLLATE RTRIM, ((rt1.c3)/(rt1.c3)), (('-1443883918') ISNULL), NULL)) AND (((rt1.c2 IN ()), (rt1.c0 IN (rt1.c0, rt1.c1)), (NOT (rt1.c3)), (rt1.c1 IN ()), NULL)))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c0, rt1.c0, rt0.c1, rt1.c0, '᩷')) BETWEEN ((json_valid(rt0.c0), rt1.c3 COLLATE RTRIM, ((rt1.c3)/(rt1.c3)), (('-1443883918') ISNULL), NULL)) AND (((rt1.c2 IN ()), (rt1.c0 IN (rt1.c0, rt1.c1)), (NOT (rt1.c3)), (rt1.c1 IN ()), NULL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c0, rt0.c1, rt1.c0, '᩷')) BETWEEN ((json_valid(rt0.c0), rt1.c3 COLLATE RTRIM, ((rt1.c3)/(rt1.c3)), (('-1443883918') ISNULL), NULL)) AND (((rt1.c2 IN ()), (rt1.c0 IN (rt1.c0, rt1.c1)), (NOT (rt1.c3)), (rt1.c1 IN ()), NULL)))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c0, rt1.c0, rt0.c1, rt1.c0, '᩷')) BETWEEN ((json_valid(rt0.c0), rt1.c3 COLLATE RTRIM, ((rt1.c3)/(rt1.c3)), (('-1443883918') ISNULL), NULL)) AND (((rt1.c2 IN ()), (rt1.c0 IN (rt1.c0, rt1.c1)), (NOT (rt1.c3)), (rt1.c1 IN ()), NULL))));
SELECT ALL * FROM rt1 WHERE (CAST('0.6847964096719358' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST('0.6847964096719358' AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST('0.6847964096719358' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST('0.6847964096719358' AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST('0.6847964096719358' AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)%(0.1432881508639977))) NOTNULL)) ORDER BY rt0.c0  NULLS LAST, TRIM(DISTINCT CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END, CASE WHEN rt0.c2 THEN rt0.c0 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)%(0.1432881508639977))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST, TRIM(DISTINCT CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END, CASE WHEN rt0.c2 THEN rt0.c0 END) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)%(0.1432881508639977))) NOTNULL)) ORDER BY rt0.c0  NULLS LAST, TRIM(DISTINCT CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END, CASE WHEN rt0.c2 THEN rt0.c0 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)%(0.1432881508639977))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST, TRIM(DISTINCT CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END, CASE WHEN rt0.c2 THEN rt0.c0 END) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)%(0.1432881508639977))) NOTNULL)) ORDER BY rt0.c0  NULLS LAST, TRIM(DISTINCT CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END, CASE WHEN rt0.c2 THEN rt0.c0 END) ASC  NULLS FIRST;
