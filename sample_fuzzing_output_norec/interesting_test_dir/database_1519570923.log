-- Time: 2024/06/09 03:49:08
-- Database: database23
-- Database version: 3.40.0
-- seed value: 1519570923
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4, +c5 INT ); -- 2ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
UPDATE rt1 SET c1='w]鈆}abRL*', c4=0x5c83314b WHERE (((NOT (rt1.c2))) BETWEEN ((0.6724287137299674 IN (0.6724287137299674))) AND (((x'')/(rt1.c0)))); -- 1ms;
UPDATE OR IGNORE rt0 SET c2=x'' WHERE rt0.c1; -- 0ms;
UPDATE rt1 SET (c2)=('qc滷鈆	eZD') WHERE TRIM((rt1.c4 IN ())); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c1)=(0.6585180223470315, ',<ḵ\rf#--'); -- 0ms;
UPDATE rt0 SET (c1)=('48g_.'); -- 0ms;
UPDATE OR IGNORE rt1 SET c1=0.7384242328016168 WHERE (- (NULL COLLATE RTRIM)); -- 1ms;
REINDEX  rt1; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('' AS INTEGER) COLLATE RTRIM; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2140836358 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1738050770'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')LIKE('0.7384242328016168')))IS NOT(((0.633889457203212) NOT BETWEEN (x'') AND (x'')))); -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.194846577375673)<(CAST('-1677125006' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '951427479 sz=-2045686544 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((x'')OR((0X32abdde4 IN ()))))OR(CASE 0.6337962002575088  WHEN x'' THEN 0.6772533738276094 WHEN 'I.' THEN 'tBḵ尃OHx_' WHEN '1738050770' THEN '' ELSE x'' END)))AND(('' IN ('I.')))))AND(NULL)))OR(CAST(x'' AS BLOB))))AND(CAST('k''%qJkU\r' AS NUMERIC))))AND(((x'')>>('''#is')))))OR(((NULL)-(x'0805fd6c')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=326811636 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '850124260 sz=161070322 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.07444568438214205 COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-717456608'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1496674594 sz=846767736 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-2020328692 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=551072064 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=199415452'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=2145571907 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND(NULL)))OR('48g_.')))<<(ABS(DISTINCT x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1356456459 sz=-2078903041 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 sz=326811636'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffa0aa00d0 IN ('1617108533')))-((('1356456459') NOT BETWEEN (-655302804) AND ('&u')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 37979539 -717806923 sz=-1677125006 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((('k''%qJkU\r', x'', 0Xffffffff86114cf0, 0.030927745351052693, NULL))<=((0.6110004401314824, x'0450', '2145571907', 0.7116161476801843, x'adbf'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1599471408'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((('')AND(NULL)))OR(0Xffffffffc0d3804e)))AND((('a&')IS NOT(1.73805077E9)))))OR(CAST(NULL AS TEXT))))OR((('?~|Qu,') NOT NULL))))OR('1677492571' COLLATE BINARY)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=-19898300'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (0.030927745351052693)) AS TEXT); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT (-1.496674594E9 IN ('A薓K'))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-1599471408 204176970 sz=533464654 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(NULL COLLATE BINARY); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2108091205 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'6b2f') BETWEEN (NULL) AND ('199415452')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2069715500'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1356456459 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'') IS TRUE) THEN ((0.5398923365805061) IS TRUE) WHEN (('846767736')*(-182313409)) THEN (('-1025200755')!=(0.30820512834259495)) WHEN (~ (NULL)) THEN 0.16151786868896456 ELSE ((1896051625) NOT BETWEEN (x'') AND ('k''%qjku\r')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(0.6430065214062216)))GLOB(((9.51427479E8) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1677492571'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.6110004401314824')LIKE(0X6e588d84)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-895313659 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('''[is' IN ('-421346764', NULL)) IN ()); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=241175581 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=515369999 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-160177435 -1567697735'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 187144908 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE NULL  WHEN NULL THEN '-717806923' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=527158141'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-895313659 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(((((((((NULL)OR('-1567697735')))OR(x'')))AND(x'')))OR('-2069715500'))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-717806923 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1462057959'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2108091205 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM((NOT (NULL)), ((0.10606309360707478) IS FALSE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')/(x'a72a')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2045686544 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2031499317 104056363 sz=-1353125215 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=133945943'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -620489115 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1460362723 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1281129925')AND(0x2fcf2993)))AND(NULL))) NOT BETWEEN ((+ ('156034467'))) AND (((x'') NOT BETWEEN ('') AND (NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-300473222' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-559222778 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1.677492571E9)+(CASE WHEN '-717806923' THEN 0.5602578112837213 ELSE x'1527' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1453238228 2 -2002235358 sz=244226610 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.7114600247044542) BETWEEN (x'') AND ('>Vy#''*I')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '1153171021 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-421346764 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1500549385 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1277207173 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-421346764 1536386736 2 sz=271531153 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-156508993 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL))||(((('', 0X7fbda57, NULL))<=((0.5398923365805061, '1536386736', x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x7ca306b2, '6&', x'')) BETWEEN ((NULL, x'a665', NULL)) AND ((0X4c20a285, NULL, '-300473222'))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=515369999 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1803645895'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1888401043 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-655302804 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ ('')))OR(CAST(NULL AS BLOB))))AND(((0xffffffff994479bd)OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 1711351913 sz=-783959294 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-378563070 sz=37979539 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '218147486 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=404156072 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X7ca306b2; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=460008775 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((x'')OR('nB')))AND(x'')))OR(NULL)))AND(x'')))AND(0.00277631777046905)))OR('M')) IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1277207173 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1117104413 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=411739166 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((load_extension('', 0.34581724542639425)))>((NULL COLLATE BINARY))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 sz=-759133271 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(x'')))OR(0.007922118128087408))) BETWEEN ((('nLe[') IS TRUE)) AND ((((1657423659, -644999641, '411739166'))>((1160751628, '1898685045', '326811636'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 1552101707 sz=133945943 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'd769')) NOT BETWEEN ((LIKE('', x'4703', ''))) AND (((((0.32986734568090004)) BETWEEN (('1914613388')) AND ((',<ḵ\rf#--')))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')OR(TYPEOF(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('A&') NOTNULL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((('-19898300')AND('C')))AND('-1677125006'))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -156508993'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD((0.635967994905538 IN (NULL)), 0.9064526072609407); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (1438074019)) COLLATE NOCASE; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1677125006'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '1835193518'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-928081290 0 sz=1536386736 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN (0X457e8ebe) AND (0.2234683296802068)))%((((('')AND('-1e500')))AND('nLe[')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)!=('-643717008')))LIKE(((((NULL)OR(0.007922118128087408)))AND(0.2814199383044642)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((541545621)%(NULL)))*(CASE WHEN NULL THEN 0.6585180223470315 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(0.09616809862350972 AS NUMERIC))OR(((NULL)IS('-1496674594')))))AND(((0.6585180223470315)>=(NULL)))))AND(((NULL)IS('\n?')))))AND((('d#') NOT BETWEEN (-4.21346764E8) AND (0.38494727066970935)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE '344702022'  WHEN NULL THEN x'' END)AND(MAX('412344659', '-620489115'))))AND((('-1281129925')%(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1842765494 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1.552101707E9; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-523387783'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-900078158 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('h#K&D')<>('0T')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ ('(')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1496674594 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=1536386736 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1979999518 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1358457434 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1366404592'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=375406188'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1701368313 sz=1552101707 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1835193518 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=271531153 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1780830553 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (LIKE(0X388fdf44, x'', 'k'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-620489115')+('')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=208854102'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x'')) BETWEEN (('-586618105')) AND ((-9.00078158E8)))  WHEN x'' COLLATE RTRIM THEN COALESCE(DISTINCT NULL, 0.4157259959838622) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN NULL WHEN NULL THEN NULL WHEN NULL THEN NULL ELSE x'0b22' END)IS(CASE NULL  WHEN x'bc96' THEN x'' WHEN '1851297156' THEN '551718723' WHEN 826166821 THEN 0.6337962002575088 ELSE 0.10606309360707478 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1324476432 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=104056363 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)<<(0.7413626328234669))  WHEN CAST(0.06322145488513109 AS INTEGER) THEN 0.46275841941029805 WHEN x'' COLLATE RTRIM THEN CASE 0.097938067784891  WHEN '0.00277631777046905' THEN -1.888401043E9 WHEN '0.00277631777046905' THEN 0.06532567938106126 WHEN '1028621106' THEN 0Xffffffff97af5e32 END WHEN NULL THEN NULL COLLATE BINARY ELSE ((0.2234683296802068) BETWEEN (x'') AND (380617711)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-928081290 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.32986734568090004 AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2140288512 sz=-848555344 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'') NOT BETWEEN ('-505076252') AND (0x21bb48e1)))OR(CAST('8*ZL8⊵}~A' AS TEXT))))OR(((NULL)>('#쟵zO')))))OR((NULL IN ()))))OR(((((((((x'')AND(2.145571907E9)))AND(NULL)))AND(NULL)))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1923370091 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('338368561'))) BETWEEN (((('2091058866', '1153171021', NULL))=((NULL, -6.44999641E8, 2044848071)))) AND ((- ('￿Pq>vLq')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=2091058866'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1368135311 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1716093551'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=526055602'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=146603338 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1715851023'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1490012349 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=-1156222489'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x1b6b2d47) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=971608480 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=1898685045'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1738685644 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS REAL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) NOT BETWEEN (((('FuG1k*I&') ISNULL))) AND (((('') IS TRUE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-755014557 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1785332553 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')<>('￿Pq>vLq')))AND(('' IN ()))))OR('1711351913')))AND(CAST(x'8775' AS REAL))))AND(NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2036429232 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=846767736 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-895313659 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE x''  WHEN 0xffffffffdeec5424 THEN '850124260' END))>(((~ (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2020328692'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.8829640576308497)) NOT BETWEEN ((NULL)) AND ((NULL)))))>=((((NULL)|(0.09433626323287236))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(x'', x'209ac994'))*((('1552101707')&('1745737057')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-767101050 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1378920693 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '1246369360'  WHEN x'' THEN x'' ELSE NULL END)>(CASE x''  WHEN x'' THEN '' WHEN 0.5085975315659771 THEN x'fd5d' WHEN NULL THEN x'' ELSE '2016092204' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x7d02ceef)) BETWEEN (((('') BETWEEN (0.1819583363395869) AND (x'')))) AND (((((((((('451679431')AND(NULL)))OR(NULL)))OR(NULL)))OR(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1539632028 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((((NULL)AND(271531153)))AND(x'9294')))AND(x'6ec1')))OR(0.9140848900569785)))AND('-1842765494')))OR(NULL)))AND('')))AND(x''))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')-('-160177435')))OR(CASE WHEN 0.9927538684285214 THEN NULL WHEN x'' THEN 0.22527841171220964 WHEN 2.140836358E9 THEN '1165921982' ELSE '1311356407' END)))OR(((NULL) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1496674594 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((1.165921982E9) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1183361514 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-651497512 0 sz=-928081290'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=541545621 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'I.'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1779734005 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.4872110054096882, NULL, 0X1ac78643)) BETWEEN ((x'', x'', x'')) AND ((0.30820512834259495, 1.61070322E8, '')))) BETWEEN (((0x498c2250) BETWEEN (0.9140848900569785) AND (x'9dcb'))) AND (CASE NULL  WHEN 'lpGn*7' THEN x'' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=412344659 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.32986734568090004)) BETWEEN ((x'')) AND ((NULL))))>(((((0.2811754000840456)AND(NULL)))AND('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-685160510 noskipscan'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1617630436 sz=161070322 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') BETWEEN (-523387783) AND (NULL)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=1351636064 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2085840061 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x28cc27f4; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1902125944 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(json_type('*뱹') AS INTEGER); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(HEX(0Xfffffffffa0f005e) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('0' AS BLOB) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-760640312 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('2091058866')) BETWEEN ((x'65de')) AND ((x''))))!=(COALESCE(DISTINCT 0.2811754000840456, NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1358457434'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=92192564 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '595542143 sz=1148573157'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '989560854 sz=-1701368313'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.6938849862827764 IN ()) COLLATE BINARY; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=936764693 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=9223372036854775807 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1127079839 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('?W' AS NUMERIC))>>(('l,sF/' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 2 sz=-605934912 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-789027525 -895313659'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT ((NULL)>=(0.47879572584552665))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(0x6e4afdbb)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-347820772 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1388674235 515369999 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1006674224 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1576463239 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=856880234 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1011049275)<<(NULL))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=753365329 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN (1967586256 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 1184519000 sz=254717979 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-9223372036854775808 sz=636390780 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1888401043 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1873633052 sz=-1567697735 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '169534430 0 sz=1432591531 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=893907876'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE json_insert(x'', NULL, 'ꇷvG')  WHEN (NOT (0.8351013403192992)) THEN (('x*2N}')/(x'')) WHEN 0.48075403514870907 THEN SQLITE_COMPILEOPTION_GET('-1301117839') WHEN (((NULL)) BETWEEN ((448686280)) AND ((-6.20489115E8))) THEN 0.4157259959838622 COLLATE RTRIM END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '931410610 218147486 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((('I孫?,>|')OR(NULL)))AND('-1888401043')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF((((-2.0697155E9)) NOT BETWEEN (('4')) AND ((37979539)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN (('U<qr8')) AND (('V'))))>>(LIKELY(DISTINCT '0.8351013403192992'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '983192548 2 sz=-1667731101'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('-1366404592') NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-2090125266 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE LIKE(1.914613388E9, '-110876807', '[')  WHEN (+ (x'')) THEN CASE WHEN '-1946510480' THEN 0.8752056108373202 END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1356456459 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((0.10606309360707478) NOT NULL))AND((((('')OR(x'')))AND('')))))OR((('1914613388') NOT NULL))))OR(((((0.8043472727131257)OR('')))AND(NULL)))))OR(((0.5293503315205732) NOT BETWEEN (x'23d7') AND (NULL)))))OR((((('')OR(-277538760)))AND('-1384877366')))))OR(((NULL)<=('Vo,')))); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.06532567938106126 THEN ((0.6335558208656157)>(x'')) WHEN CASE 0.46634813834804223  WHEN -274553342 THEN 1657423659 ELSE x'' END THEN ((((((((((((x'3307')OR(x'')))OR(0.3571903980262163)))AND(NULL)))AND(0.549983822000527)))OR('-1467159535')))AND(0x7fe2d443)) WHEN CASE x'c4cf'  WHEN '' THEN NULL WHEN '959284793' THEN NULL WHEN '2128996074' THEN x'11b0' ELSE 0.29546589506607146 END THEN NULL COLLATE RTRIM END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=734787499 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=384871946 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=931263764 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(''))IS NOT(TRIM(0.8807424499516604))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '404156072 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-900078158 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB(((x'')/('2H')), '1896051625' COLLATE NOCASE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-841547515'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0x55b744a3 THEN NULL END) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY((((-430519770)) BETWEEN ((x'')) AND ((NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('濣c') IS FALSE) COLLATE RTRIM COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1567697735, '50', NULL)) NOT BETWEEN ((((((0.2234683296802068)OR(0.08323820397897985)))AND('')), HEX(DISTINCT '-1108771935'), ((0.11831631927115072)*(1067217623)))) AND ((((((((((x'')AND(NULL)))OR('''#is')))AND(NULL)))OR('-553332547')), CAST(NULL AS NUMERIC), (NULL IN ())))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1721436387 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-428460759 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=-1950771786'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1142521465)IS NOT(0x1d435c35))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '460008775 1474530565 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=158528829 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'8ff7' COLLATE RTRIM IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('#' COLLATE BINARY) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=111625440 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9693132876795552, NULL, 0.19455962173822272)) NOT BETWEEN ((((x'') NOT BETWEEN (-2022471518) AND (NULL)), NULL COLLATE BINARY, (('''#is')=(x'')))) AND (('', x'', (('d\nh')==(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=187144908'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1388435271 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '832059793 sz=1165297632 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1592733006'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1987753202'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((SQLITE_COMPILEOPTION_GET(x''))AND(json_valid(-729837350))))AND((((0.6585180223470315)) BETWEEN ((x'e576')) AND ((0.08385047588689687))))))OR(((0.5637013197646229)IS NOT(x'6962')))))OR(PRINTF(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-229838865') BETWEEN (NULL) AND (0.31364990211695953)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=389561887 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1914613388'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1059880882')IS NOT('볎F丕谹⹈wt\')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1174954877'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-523387783 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((NULL)) NOT BETWEEN ((NULL)) AND ((''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=526055602 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-900078158 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.1344834390131554 COLLATE RTRIM IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1082708905'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 1ms;
DELETE FROM sqlite_stat1 WHERE 104056363; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=380944188 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1954244198 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '볎f丕谹⹈wt\'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1292175450 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-231416342'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1833249624'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '639086594 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7413626328234669; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS BLOB) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1494029189') IS FALSE))|((0.7930106710658341 IN (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1811478458 -141858673 908530168 sz=-1551316341'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1453238228 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1898685045 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2021403473 sz=1160751628 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-19898300')>(-1.60177435E8))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('133945943')<('')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1358457434 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0X7da6eb45)) BETWEEN ((0.0028919736183786737)) AND ((x'b873ff19')))))<((((NULL) BETWEEN (NULL) AND (x'17fd'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-717456608 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1200024638 sz=1657423659 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-928081290 195230531 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=880098532 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((NULL)AND(x'8e18')))OR(x'')) THEN '' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE QUOTE(('Ci>rNMK' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1883630896'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE TRIM(DISTINCT '793174158')  WHEN (((0X1097e160, NULL, 1.657423659E9))>=(('0.46275841941029805', '-1025200755', 0.4582060659782744))) THEN (+ (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE x'd28f'  WHEN 0.7574278634991624 THEN NULL ELSE NULL END))!=(((NOT (-79036809))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1575193308 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((-1500549385) NOT BETWEEN (1.617108533E9) AND (x'2c57')))OR(((x'c97e')<<(1.165921982E9)))))AND(((-438537255) NOTNULL))))OR((NOT (0.1819583363395869)))))AND(IFNULL(DISTINCT 0Xffffffffe96f9602, x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1356456459'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (0.7267316274502152)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1162091451'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=971978180 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2020328692 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN '-1659157525' THEN 0.07444568438214205 END AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 's'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1657423659 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1292605759'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1972745219 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-243405296'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1994327497 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((((NULL)OR(375406188)))OR(x'')), ((x'')>(x'')), ((((0.20155867395808957)AND(x'd21b')))AND(0.08385047588689687)), (NULL IN ('-16371392', 0.822514010370024))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=37979539'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '4 2 sz=-1150194592 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY((0.8489890597313857 IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=-1 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1741464551 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-1732465514' COLLATE RTRIM  WHEN (((x'')) BETWEEN (('436060769')) AND (('_(#3>0*}'))) THEN ((x'')IS(NULL)) WHEN (('1949653788') BETWEEN (NULL) AND ('1914613388')) THEN ROUND('1460362723', x'') WHEN CAST(NULL AS BLOB) THEN (~ ('1851297156')) ELSE NULL END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))<((NULL))))==(CAST(NULL AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '2 412344659 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1551454749 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'u\n'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-271747941 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1026670349'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1848056558 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=800813092'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('N')))!=((('0.00277631777046905')*(603346428)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-895313659 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.7193529804465127)AND('1730124586')) THEN (('E<6끵') BETWEEN ('HDPIv') AND (0.002567672282845268)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=706929821'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=404156072 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')=('845305150')))&(((0.12184460659106566) BETWEEN ('-899981029') AND (x'b6de')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1177037886 sz=490863453 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 sz=-1173282199'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=655681140'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1590007774 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(DISTINCT '-801769091')) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=551072064 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-19898300'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1759697710 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('-1453238228'))) NOT BETWEEN (json('1058273358')) AND (CAST(x'' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=435551759 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=404156072 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0Xfffffffffed2c12f)))|(((NULL)LIKE('1115408017')))); -- 3ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.2811754000840456)) BETWEEN ((1253473324)) AND ((NULL))))OR(0.5741890125041278 COLLATE RTRIM)))AND(0.03946500927228025)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1277026989 1160751628 0 sz=-1073156944 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-717806923 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -492888729 sz=9223372036854775807'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL))) BETWEEN ((NULL IN (0.6110004401314824))) AND ((((0.17444853986414666)) NOT BETWEEN ((x'')) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x''))<=(('-741803999'))) AS TEXT); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1999981613'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=394995286 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=594080810'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-171649427'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=758322760'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=686642668 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-378563070'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT (x'' IN ()), 0.14844928035645932); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=256189033 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-1676576297 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=161070322 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(x'')) BETWEEN ((~ (x'4651'))) AND ((('2030162692')*('271531153')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD('1,', 0.9166479877414467))<(((NULL)/(0Xffffffffde17a0f0)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '' COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=515369999 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0 sz=2058467141 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD((((NULL)) NOT BETWEEN ((1936351114)) AND ((''))), 0.39560892061576103); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) NOT BETWEEN ((x'')) AND ((NULL)))) NOT BETWEEN ((-156508993 IN ())) AND (((x'74b8') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-722261249 2042264148 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)-(x'')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=-1453238228 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1321473660'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (('|*' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9975015745338758 IN ())) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 -1677125006 sz=-2078397236'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1277207173 sz=378895642 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1491195368 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0.34581724542639425 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2133097302 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=964058767 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 -2045686544 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (MIN(x'', 'XZ', 0.5840896591376481, '<	') IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1.888401043E9; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '141540634'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-783959294'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (json_insert('0.7114600247044542', NULL, x'103d'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-1781239071'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1907127670 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '474462941 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((('cꍆD' IN (NULL, x'b946')))AND((((((((('kxq')OR(x'')))AND(0.10054576929549686)))OR(x'')))AND(0.9975015745338758)))))OR((~ (x'')))))AND((+ (NULL)))))OR('-353583611' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (UNICODE('2145571907') IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '204176970 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (0x27992a1f)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('u\n')<(NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1025200755 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1.56034467E8 COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC))<=(((-1.888401043E9) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1701915484 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1568057296 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1143660561 2089529639 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '1898685045 1552101707 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-895313659 -1117104413 sz=824019803'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1212635350 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-814720707 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'774b' COLLATE BINARY IN (((NULL)OR(NULL)), CASE WHEN '-717456608' THEN 1.33945943E8 WHEN 1417545497 THEN x'40e8' WHEN 0.8375550825201925 THEN 0Xffffffffe3b1f6c1 ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((2.0417697E8)) BETWEEN ((x'')) AND (('&V'))))+(CAST(NULL AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-643717008 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1371136726'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1471523177 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1448814907) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0x1eb7ec0f THEN '禽!3' ELSE -1688590004 END) BETWEEN ((~ (x''))) AND (COALESCE(x'21af', 802494779, 3.26811636E8, x'40c8'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER((NULL IN ('|(.	64'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=104056363 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.60177435E8)<=('2043178814'))) BETWEEN (((NULL) ISNULL)) AND ((((('1904974218')AND('-170007880')))OR('-1059880882')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=37979539 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-759133271 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=391443797 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '795333267 sz=-422565854'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1746988635 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '1696441751 -421346764 sz=-160177435 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1398426088 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((TRIM(DISTINCT NULL), (((0.1988488161786215, 0.9834666588614299, -733925147))!=((1104634162, 'a&', -1908749119))), (((x'1ce2', 0.193276019263816, ''))>((0.24642296573389255, -1.723565635E9, x'')))))>((NULL, (('0.2234683296802068') BETWEEN (NULL) AND (0.5992536400884317)), CAST(0.9445480591631799 AS INTEGER)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 1083264560 sz=-183748509 unordered'); -- 4ms;
DELETE FROM sqlite_stat1 WHERE '-2130010761'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1640498729 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=187144908 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6427527923877472)) NOT BETWEEN ((((x'') IS TRUE))) AND ((((NULL) IS FALSE)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('2145571907') ISNULL)) NOT BETWEEN (CAST(0.615616956627935 AS NUMERIC)) AND ((~ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=224789921 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-845931161 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(x'' AS REAL))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (ABS(x'4205'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1932667385' IN (1163966131, NULL)))+(((('o*', x'', NULL))>((0.9638186745917741, 3.26811636E8, 0.9026752038868645))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x'')))>>(((((x'533b')AND(x'266c')))OR(x'')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '758667068 sz=850124260 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-19898300 0 sz=-2020080739 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CHANGES())||((~ ('0.193276019263816')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=669904970 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' COLLATE BINARY AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((ABS(DISTINCT '1134380553'))AND(((0.6575991160971653) IS TRUE))))OR(((NULL)/(x'')))))AND(0x12612ee4)))OR(CAST(NULL AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=106030324'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1462057959 IN (NULL, x''))))<=((((((((((x'563b')AND(-401598566)))AND(x'')))AND(-1.60177435E8)))AND(0Xffffffff98505f3d))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.8752056108373202)>>(x'')))AND(CASE 0.7202053970719453  WHEN '474959330' THEN NULL ELSE x'' END)))OR(('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)/('1716003270'))) NOTNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-629212373 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0X76c44d4e) NOT BETWEEN (CASE 0X45794666  WHEN x'' THEN x'' WHEN '202503204' THEN x'' WHEN NULL THEN 0.5204026741824226 ELSE '-378563070' END) AND ((('蝸x%T')<=(0X38b5a197)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)OR(x'')))OR(x'')))AND('1462057959')))OR(((-449655705)>(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0Xffffffffa961582c))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1657423659 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-928081290'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-970492237 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=271531153 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '4 0 sz=1438074019 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((((x'3251')=('')))) AND ((((((NULL)OR(375406188)))OR('ԼU쩎,{F~z'))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)IS(NULL)) IN ((+ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1353617695 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1366404592 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1153171021 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 sz=1418018459'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('i')<<(0.9806534960534057)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('橚#' COLLATE RTRIM AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 2 sz=460008775 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-253433040'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1887332108'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-299239738 sz=1552101707'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '395105509 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-927672035 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS REAL)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-867032529 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-65602644 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0x50f86a5a COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '515369999 sz=-717806923 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-717456608) IS TRUE)) NOT BETWEEN (CASE WHEN 0.7611938888721528 THEN 2112512882 ELSE x'5211' END) AND ((('Ze츷읨')>>('1356456459')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_remove((((('gPbhu')AND(0.38748873828376995)))AND('')), (('1155394298') IS TRUE), CAST(NULL AS BLOB), (NOT (x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=454219382 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.21367165885437833) BETWEEN (x'b625') AND ('')))||((('349958453')==(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=918146769'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1277207173 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1529049244 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=28691130 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.034447592428763274 IN ()))*(CASE '37979539'  WHEN NULL THEN x'd505' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-910672340 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (x'f635')))OR(UNLIKELY(NULL))))OR(CASE 0.6871897959824876  WHEN NULL THEN 0.09616809862350972 ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2031499317 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((0.43550978327323664)AND(0.9282851032380398)))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1964725097 sz=114336423'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.194846577375673' COLLATE NOCASE) BETWEEN (CAST(x'' AS INTEGER)) AND (x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') IS TRUE))<=((((x'', '', NULL, NULL, x'')) NOT BETWEEN ((x'', -7.17456608E8, 0.8879386357796176, '', -1815980188)) AND ((x'', '-1570660074', 0.07779551839386023, '1e500', '.^'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '156034467 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS REAL) IN ((('(') ISNULL))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)%(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2055310502 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1330248389 unordered'); -- 1ms;
REINDEX; -- 0ms;
UPDATE rt1 SET (c5)=(NULL) WHERE ((rt1.c1) ISNULL) COLLATE NOCASE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR REPLACE rt1 SET c0=-0.0; -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES ('C%Fld}Ri', '꺌8}', '-759133271'), (NULL, NULL, x'd907'), (0.7845001534139586, 0.097938067784891, NULL); -- 1ms;
INSERT OR ROLLBACK INTO rt1(c0, c3) VALUES (0Xffffffffd9a1a870, -1059880882); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c4) VALUES (x'82bd', 0.2723669680539149), (1.358457434E9, x''), ('2126652531', x''); -- 4ms;
INSERT OR IGNORE INTO rt1(c5, c1, c4, c3) VALUES (0.5885136581382636, NULL, 'm|2Z', x'653c'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c5, c1) VALUES ('', 'w]鈆}abRL*'), (-630958997, NULL), (NULL, 0.8612470660653114); -- 1ms;
INSERT OR IGNORE INTO rt1(c3, c5, c0, c1) VALUES ('I^C-_N>P[', '-2047428110', NULL, '1356456459'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c0) VALUES (NULL, 0xffffffff9229a14a), (0.4404116099119634, x'4325'), (NULL, 0X34aae987); -- 0ms;
INSERT OR ROLLBACK INTO rt1 VALUES ('-1945539770', 1.851297156E9, '132581826', 0.6697216119939018, x'', '8i{w'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES ('1460362723', 2.78389088E8); -- 6ms;
INSERT OR ABORT INTO rt1(c3, c4, c1, c0) VALUES (-2144556869, '202971320', 0.12184460659106566, NULL), (NULL, '%J', '2140836358', '-14347213'), (x'', 0.686869340289597, x'6ba7', '1711351913'); -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (-1.842765494E9, x'bba8', NULL, NULL, '', x'2d32'); -- 0ms;
UPDATE OR REPLACE rt0 SET c2=NULL, c0='-160177435', c1=NULL WHERE HEX(DISTINCT UNLIKELY(DISTINCT rt0.c1)); -- 0ms;
UPDATE OR IGNORE rt1 SET (c5)=(489349758) WHERE TRIM(((-1.888401043E9) ISNULL), rt1.c4 COLLATE BINARY); -- 1ms;
UPDATE OR IGNORE rt1 SET (c1)=(858440589); -- 8ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c2) VALUES (NULL, '-2028791005'); -- 0ms;
INSERT OR REPLACE INTO rt0(c1) VALUES ('zsk6w{谹'); -- 20ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  rt1; -- 0ms;
UPDATE OR REPLACE rt0 SET c2=1064750737 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)), ABS(DISTINCT x'9e1b'), rt0.c2 COLLATE BINARY))>=((load_extension(rt0.c2), HEX(rt0.c2), CAST(rt0.c1 AS NUMERIC)))); -- 0ms;
UPDATE OR ABORT rt1 SET c3=0.8261694547378564; -- 1ms;
INSERT OR ABORT INTO rt0(c1) VALUES ('CGvv'), (0.6334693144599659), (0Xffffffffa0aa00d0); -- 0ms;
INSERT OR ABORT INTO rt1(c0) VALUES ('䒣^#P3'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ANALYZE; -- 0ms;
UPDATE rt1 SET (c1, c2)=(0.1988488161786215, 0.5923438977825918); -- 1ms;
INSERT OR REPLACE INTO rt0(c0, c2, c1) VALUES (x'c14a', NULL, '푃9~㦃f'); -- 7ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('JyGRjxvjN', 'uIG', NULL); -- 1ms;
INSERT OR ABORT INTO rt0(c1, c2, c0) VALUES (x'3908', 'SF^gE', 0Xffffffffc180a287), ('R25mb(fe', 0.2298425769593493, x''), ('1813864687', '375406188', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, NULL, '8/'); -- 13ms;
UPDATE rt0 SET c0=NULL, c0=0.633889457203212, c1=0Xffffffffbc994132; -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=(NULL); -- 0ms;
DROP TABLE IF EXISTS rt1; -- 1ms;
REINDEX; -- 0ms;
CREATE VIEW v0(c0) AS SELECT ALL ((((CAST(rt0.c0 AS REAL))OR(SQLITE_COMPILEOPTION_GET(rt0.c0))))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) FROM rt0; -- 2ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES ('-300473222', NULL); -- 3ms;
REINDEX; -- 0ms;
UPDATE OR ABORT rt0 SET c2='0.002567672282845268' WHERE ((rt0.c1 COLLATE RTRIM)<=(((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL) WHERE ((rt0.c0)<(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))); -- 8ms;
UPDATE OR IGNORE rt0 SET c1=x'' WHERE rt0.c0; -- 0ms;
DELETE FROM sqlite_stat1; -- 8ms;
BEGIN  TRANSACTION; -- 1ms;
UPDATE OR IGNORE rt0 SET (c2)=(x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET c1=NULL WHERE ((((rt0.c2)<(rt0.c2))) NOTNULL); -- 21ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c2)=(x'', 0xc2b7e4a) WHERE (0Xfffffffff5221e3f IN ()); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c0, c0)=(0.7322695072001386, '<xyL* *', 0.1698819779432179) WHERE CASE WHEN ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c0)) THEN CAST(rt0.c0 AS REAL) END; -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES ('-359593885', NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE rt0 SET c1='-1809527682' WHERE CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END AS BLOB); -- 0ms;
UPDATE rt0 SET (c1, c2)=(-1.842765494E9, '-1879311871') WHERE rt0.c1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE rt0 SET (c1)=('1674810062') WHERE (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c0) ISNULL), '<yS*FHqS', ((rt0.c0) BETWEEN (rt0.c0) AND ('GZtW4Q2')))) AND ((rt0.c2 COLLATE NOCASE, rt0.c1, CAST(rt0.c0 AS BLOB)))); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=-655302804 WHERE CAST((rt0.c2 IN ()) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (x''); -- 16ms;
UPDATE OR IGNORE rt0 SET c1=''; -- 0ms;
REINDEX  rt0; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c0)<=(rt0.c1)) THEN rt0.c2 ELSE (((rt0.c1))>((rt0.c0))) END) ORDER BY COALESCE(DISTINCT ((rt0.c1)>>(rt0.c1)), CAST(x'' AS REAL)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)<=(rt0.c1)) THEN rt0.c2 ELSE (((rt0.c1))>((rt0.c0))) END) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(DISTINCT ((rt0.c1)>>(rt0.c1)), CAST(x'' AS REAL)) ASC);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c0)<=(rt0.c1)) THEN rt0.c2 ELSE (((rt0.c1))>((rt0.c0))) END) ORDER BY COALESCE(DISTINCT ((rt0.c1)>>(rt0.c1)), CAST(x'' AS REAL)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)<=(rt0.c1)) THEN rt0.c2 ELSE (((rt0.c1))>((rt0.c0))) END) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(DISTINCT ((rt0.c1)>>(rt0.c1)), CAST(x'' AS REAL)) ASC);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c0)<=(rt0.c1)) THEN rt0.c2 ELSE (((rt0.c1))>((rt0.c0))) END) ORDER BY COALESCE(DISTINCT ((rt0.c1)>>(rt0.c1)), CAST(x'' AS REAL)) ASC;
SELECT ALL * FROM rt0, v0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((x'' IN ()));
SELECT * FROM rt0, v0 WHERE ((((((rt0.c2 IN ()))AND(v0.c0)))AND(CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END))) ORDER BY CAST((+ (rt0.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2 IN ()))AND(v0.c0)))AND(CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((+ (rt0.c2)) AS INTEGER));
SELECT * FROM rt0, v0 WHERE ((((((rt0.c2 IN ()))AND(v0.c0)))AND(CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END))) ORDER BY CAST((+ (rt0.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2 IN ()))AND(v0.c0)))AND(CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((+ (rt0.c2)) AS INTEGER));
SELECT * FROM rt0, v0 WHERE ((((((rt0.c2 IN ()))AND(v0.c0)))AND(CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END))) ORDER BY CAST((+ (rt0.c2)) AS INTEGER);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))!=((rt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))!=((rt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))!=((rt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))!=((rt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))!=((rt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((((1.711351913E9)OR(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))))OR((rt0.c1 IN (rt0.c2)))) WHERE (((rt0.c0)LIKE(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)LIKE(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((1.711351913E9)OR(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))))OR((rt0.c1 IN (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((((1.711351913E9)OR(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))))OR((rt0.c1 IN (rt0.c2)))) WHERE (((rt0.c0)LIKE(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)LIKE(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((1.711351913E9)OR(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))))OR((rt0.c1 IN (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((((1.711351913E9)OR(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))))OR((rt0.c1 IN (rt0.c2)))) WHERE (((rt0.c0)LIKE(rt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN rt0.c1 END)>=((((v0.c0, v0.c0, rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1, v0.c0, v0.c0)) AND ((v0.c0, NULL, rt0.c0, v0.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN rt0.c1 END)>=((((v0.c0, v0.c0, rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1, v0.c0, v0.c0)) AND ((v0.c0, NULL, rt0.c0, v0.c0, rt0.c0)))))) IS TRUE)  as count FROM rt0 NOT INDEXED, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN rt0.c1 END)>=((((v0.c0, v0.c0, rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1, v0.c0, v0.c0)) AND ((v0.c0, NULL, rt0.c0, v0.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN rt0.c1 END)>=((((v0.c0, v0.c0, rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1, v0.c0, v0.c0)) AND ((v0.c0, NULL, rt0.c0, v0.c0, rt0.c0)))))) IS TRUE)  as count FROM rt0 NOT INDEXED, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN rt0.c1 END)>=((((v0.c0, v0.c0, rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1, v0.c0, v0.c0)) AND ((v0.c0, NULL, rt0.c0, v0.c0, rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((~ ((- (rt0.c2))))) ORDER BY (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))) COLLATE RTRIM DESC, rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((- (rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))) COLLATE RTRIM DESC, rt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((~ ((- (rt0.c2))))) ORDER BY (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))) COLLATE RTRIM DESC, rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((- (rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))) COLLATE RTRIM DESC, rt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((~ ((- (rt0.c2))))) ORDER BY (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))) COLLATE RTRIM DESC, rt0.c0  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((NULL, ((rt0.c0)<<(rt0.c0)), rt0.c0))<((((rt0.c0)LIKE(v0.c0)), ((((x'')OR(rt0.c0)))OR(v0.c0)), ((rt0.c1) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((NULL, ((rt0.c0)<<(rt0.c0)), rt0.c0))<((((rt0.c0)LIKE(v0.c0)), ((((x'')OR(rt0.c0)))OR(v0.c0)), ((rt0.c1) ISNULL))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((NULL, ((rt0.c0)<<(rt0.c0)), rt0.c0))<((((rt0.c0)LIKE(v0.c0)), ((((x'')OR(rt0.c0)))OR(v0.c0)), ((rt0.c1) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((NULL, ((rt0.c0)<<(rt0.c0)), rt0.c0))<((((rt0.c0)LIKE(v0.c0)), ((((x'')OR(rt0.c0)))OR(v0.c0)), ((rt0.c1) ISNULL))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((NULL, ((rt0.c0)<<(rt0.c0)), rt0.c0))<((((rt0.c0)LIKE(v0.c0)), ((((x'')OR(rt0.c0)))OR(v0.c0)), ((rt0.c1) ISNULL)))));
SELECT * FROM rt0 WHERE ((~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY (((((rt0.c1) ISNULL), ((rt0.c2) IS FALSE), rt0.c2 COLLATE NOCASE))<>((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)), rt0.c1, CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1) ISNULL), ((rt0.c2) IS FALSE), rt0.c2 COLLATE NOCASE))!=((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)), rt0.c1, CAST(rt0.c2 AS TEXT)))));
SELECT * FROM rt0 WHERE ((~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY (((((rt0.c1) ISNULL), ((rt0.c2) IS FALSE), rt0.c2 COLLATE NOCASE))<>((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)), rt0.c1, CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1) ISNULL), ((rt0.c2) IS FALSE), rt0.c2 COLLATE NOCASE))!=((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)), rt0.c1, CAST(rt0.c2 AS TEXT)))));
SELECT * FROM rt0 WHERE ((~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY (((((rt0.c1) ISNULL), ((rt0.c2) IS FALSE), rt0.c2 COLLATE NOCASE))<>((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)), rt0.c1, CAST(rt0.c2 AS TEXT))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((('>! (vq', rt0.c1, rt0.c0, rt0.c1, rt0.c2))==((rt0.c2, rt0.c0, rt0.c0, rt0.c2, rt0.c0))))) AND (('663019671'))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((('>! (vq', rt0.c1, rt0.c0, rt0.c1, rt0.c2))=((rt0.c2, rt0.c0, rt0.c0, rt0.c2, rt0.c0))))) AND (('663019671')))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((('>! (vq', rt0.c1, rt0.c0, rt0.c1, rt0.c2))==((rt0.c2, rt0.c0, rt0.c0, rt0.c2, rt0.c0))))) AND (('663019671'))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((('>! (vq', rt0.c1, rt0.c0, rt0.c1, rt0.c2))=((rt0.c2, rt0.c0, rt0.c0, rt0.c2, rt0.c0))))) AND (('663019671')))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((('>! (vq', rt0.c1, rt0.c0, rt0.c1, rt0.c2))==((rt0.c2, rt0.c0, rt0.c0, rt0.c2, rt0.c0))))) AND (('663019671'))));
SELECT * FROM v0 WHERE (((0xd2ff509)<(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((0Xd2ff509)<(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((0xd2ff509)<(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((0Xd2ff509)<(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((0xd2ff509)<(((v0.c0) IS TRUE))));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN rt0.c0 THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) END WHERE ((rt0.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 NOT INDEXED FULL OUTER JOIN v0 ON CASE WHEN rt0.c0 THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) END);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN rt0.c0 THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) END WHERE ((rt0.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 NOT INDEXED FULL OUTER JOIN v0 ON CASE WHEN rt0.c0 THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) END);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN rt0.c0 THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) END WHERE ((rt0.c1 IN ()) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (((((('250332135'))>=((rt0.c0)))) BETWEEN (((0.3872749878251045) IS TRUE)) AND (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) ORDER BY CAST(rt0.c0 AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((('250332135'))>=((rt0.c0)))) BETWEEN (((0.3872749878251045) IS TRUE)) AND (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 AS NUMERIC) DESC);
SELECT ALL * FROM rt0 WHERE (((((('250332135'))>=((rt0.c0)))) BETWEEN (((0.3872749878251045) IS TRUE)) AND (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) ORDER BY CAST(rt0.c0 AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((('250332135'))>=((rt0.c0)))) BETWEEN (((0.3872749878251045) IS TRUE)) AND (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 AS NUMERIC) DESC);
SELECT ALL * FROM rt0 WHERE (((((('250332135'))>=((rt0.c0)))) BETWEEN (((0.3872749878251045) IS TRUE)) AND (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) ORDER BY CAST(rt0.c0 AS NUMERIC) DESC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (NULL);
SELECT * FROM rt0 WHERE ('') ORDER BY (~ ((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0))))) DESC, ((((((((CAST(rt0.c1 AS INTEGER))OR(CAST(rt0.c0 AS TEXT))))OR((- (rt0.c0)))))AND(((rt0.c0)!=(rt0.c0)))))AND(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 ORDER BY (~ ((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0))))) DESC, ((((((((CAST(rt0.c1 AS INTEGER))OR(CAST(rt0.c0 AS TEXT))))OR((- (rt0.c0)))))AND(((rt0.c0)!=(rt0.c0)))))AND(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))));
SELECT * FROM rt0 WHERE ('') ORDER BY (~ ((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0))))) DESC, ((((((((CAST(rt0.c1 AS INTEGER))OR(CAST(rt0.c0 AS TEXT))))OR((- (rt0.c0)))))AND(((rt0.c0)!=(rt0.c0)))))AND(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 ORDER BY (~ ((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0))))) DESC, ((((((((CAST(rt0.c1 AS INTEGER))OR(CAST(rt0.c0 AS TEXT))))OR((- (rt0.c0)))))AND(((rt0.c0)!=(rt0.c0)))))AND(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))));
SELECT * FROM rt0 WHERE ('') ORDER BY (~ ((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0))))) DESC, ((((((((CAST(rt0.c1 AS INTEGER))OR(CAST(rt0.c0 AS TEXT))))OR((- (rt0.c0)))))AND(((rt0.c0)!=(rt0.c0)))))AND(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1))));
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (LOWER(DISTINCT CAST(v0.c0 AS NUMERIC))) ORDER BY (COALESCE(rt0.c0, rt0.c0, 0.2373331290092846, rt0.c2) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CAST(v0.c0 AS NUMERIC))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY (COALESCE(rt0.c0, rt0.c0, 0.2373331290092846, rt0.c2) IN ()) ASC  NULLS FIRST);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (LOWER(DISTINCT CAST(v0.c0 AS NUMERIC))) ORDER BY (COALESCE(rt0.c0, rt0.c0, 0.2373331290092846, rt0.c2) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CAST(v0.c0 AS NUMERIC))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY (COALESCE(rt0.c0, rt0.c0, 0.2373331290092846, rt0.c2) IN ()) ASC  NULLS FIRST);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (LOWER(DISTINCT CAST(v0.c0 AS NUMERIC))) ORDER BY (COALESCE(rt0.c0, rt0.c0, 0.2373331290092846, rt0.c2) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE ((v0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((v0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((v0.c0 COLLATE RTRIM IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)<>(HEX(v0.c0)))) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) ISNULL) ELSE ((v0.c0) ISNULL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)!=(HEX(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) ISNULL) ELSE ((v0.c0) ISNULL) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)<>(HEX(v0.c0)))) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) ISNULL) ELSE ((v0.c0) ISNULL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)!=(HEX(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) ISNULL) ELSE ((v0.c0) ISNULL) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)<>(HEX(v0.c0)))) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) ISNULL) ELSE ((v0.c0) ISNULL) END ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((+ (v0.c0 COLLATE RTRIM))) ORDER BY (((((((((v0.c0)AND(v0.c0)))OR('''ꥧX\rq/u')))OR(v0.c0)))OR(v0.c0)) IN (((v0.c0) IS FALSE), LIKELIHOOD(DISTINCT v0.c0, 0.4849175124618743))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY (((((((((v0.c0)AND(v0.c0)))OR('''ꥧX\rq/u')))OR(v0.c0)))OR(v0.c0)) IN (((v0.c0) IS FALSE), LIKELIHOOD(DISTINCT v0.c0, 0.4849175124618743))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((+ (v0.c0 COLLATE RTRIM))) ORDER BY (((((((((v0.c0)AND(v0.c0)))OR('''ꥧX\rq/u')))OR(v0.c0)))OR(v0.c0)) IN (((v0.c0) IS FALSE), LIKELIHOOD(DISTINCT v0.c0, 0.4849175124618743))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY (((((((((v0.c0)AND(v0.c0)))OR('''ꥧX\rq/u')))OR(v0.c0)))OR(v0.c0)) IN (((v0.c0) IS FALSE), LIKELIHOOD(DISTINCT v0.c0, 0.4849175124618743))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((+ (v0.c0 COLLATE RTRIM))) ORDER BY (((((((((v0.c0)AND(v0.c0)))OR('''ꥧX\rq/u')))OR(v0.c0)))OR(v0.c0)) IN (((v0.c0) IS FALSE), LIKELIHOOD(DISTINCT v0.c0, 0.4849175124618743))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((0Xffffffffae739610) NOT BETWEEN ((rt0.c1 IN (NULL))) AND (((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffffae739610) NOT BETWEEN ((rt0.c1 IN (NULL))) AND (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0Xffffffffae739610) NOT BETWEEN ((rt0.c1 IN (NULL))) AND (((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffffae739610) NOT BETWEEN ((rt0.c1 IN (NULL))) AND (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0Xffffffffae739610) NOT BETWEEN ((rt0.c1 IN (NULL))) AND (((rt0.c2) IS FALSE))));
SELECT * FROM v0 WHERE ((- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL * FROM v0, rt0 WHERE ((- ((rt0.c1 IN ())))) ORDER BY CASE rt0.c1 COLLATE NOCASE  WHEN 0.8744919351461868 THEN 0.2811754000840456 WHEN ((1200171136)GLOB(rt0.c2)) THEN rt0.c2 WHEN (+ (rt0.c2)) THEN (rt0.c0 IN (rt0.c2, x'742d427b')) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c1 IN ())))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE rt0.c1 COLLATE NOCASE  WHEN 0.8744919351461868 THEN 0.2811754000840456 WHEN ((1200171136)GLOB(rt0.c2)) THEN rt0.c2 WHEN (+ (rt0.c2)) THEN (rt0.c0 IN (rt0.c2, x'742d427b')) END  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE ((- ((rt0.c1 IN ())))) ORDER BY CASE rt0.c1 COLLATE NOCASE  WHEN 0.8744919351461868 THEN 0.2811754000840456 WHEN ((1200171136)GLOB(rt0.c2)) THEN rt0.c2 WHEN (+ (rt0.c2)) THEN (rt0.c0 IN (rt0.c2, x'742d427b')) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c1 IN ())))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE rt0.c1 COLLATE NOCASE  WHEN 0.8744919351461868 THEN 0.2811754000840456 WHEN ((1200171136)GLOB(rt0.c2)) THEN rt0.c2 WHEN (+ (rt0.c2)) THEN (rt0.c0 IN (rt0.c2, x'742d427b')) END  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE ((- ((rt0.c1 IN ())))) ORDER BY CASE rt0.c1 COLLATE NOCASE  WHEN 0.8744919351461868 THEN 0.2811754000840456 WHEN ((1200171136)GLOB(rt0.c2)) THEN rt0.c2 WHEN (+ (rt0.c2)) THEN (rt0.c0 IN (rt0.c2, x'742d427b')) END  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0)GLOB(v0.c0)))AND(v0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 END)))OR((((v0.c0))>=((v0.c0))))))AND(((v0.c0)LIKE(v0.c0))))) ORDER BY ((v0.c0)OR(v0.c0)) ASC  NULLS FIRST, v0.c0, (('-900078158')AND(CAST(v0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)GLOB(v0.c0)))AND(v0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 END)))OR((((v0.c0))>=((v0.c0))))))AND(((v0.c0)LIKE(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)OR(v0.c0)) ASC  NULLS FIRST, v0.c0, (('-900078158')AND(CAST(v0.c0 AS TEXT))));
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0)GLOB(v0.c0)))AND(v0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 END)))OR((((v0.c0))>=((v0.c0))))))AND(((v0.c0)LIKE(v0.c0))))) ORDER BY ((v0.c0)OR(v0.c0)) ASC  NULLS FIRST, v0.c0, (('-900078158')AND(CAST(v0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)GLOB(v0.c0)))AND(v0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 END)))OR((((v0.c0))>=((v0.c0))))))AND(((v0.c0)LIKE(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)OR(v0.c0)) ASC  NULLS FIRST, v0.c0, (('-900078158')AND(CAST(v0.c0 AS TEXT))));
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0)GLOB(v0.c0)))AND(v0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 END)))OR((((v0.c0))>=((v0.c0))))))AND(((v0.c0)LIKE(v0.c0))))) ORDER BY ((v0.c0)OR(v0.c0)) ASC  NULLS FIRST, v0.c0, (('-900078158')AND(CAST(v0.c0 AS TEXT)));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 COLLATE RTRIM THEN HEX(v0.c0) WHEN 0.38748873828376995 THEN v0.c0 WHEN (((v0.c0))>((v0.c0))) THEN (((v0.c0))=((v0.c0))) ELSE ((v0.c0)=(v0.c0)) END) ORDER BY (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))>((v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 COLLATE RTRIM THEN HEX(v0.c0) WHEN 0.38748873828376995 THEN v0.c0 WHEN (((v0.c0))>((v0.c0))) THEN (((v0.c0))==((v0.c0))) ELSE ((v0.c0)==(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))>((v0.c0))) ASC);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 COLLATE RTRIM THEN HEX(v0.c0) WHEN 0.38748873828376995 THEN v0.c0 WHEN (((v0.c0))>((v0.c0))) THEN (((v0.c0))=((v0.c0))) ELSE ((v0.c0)=(v0.c0)) END) ORDER BY (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))>((v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 COLLATE RTRIM THEN HEX(v0.c0) WHEN 0.38748873828376995 THEN v0.c0 WHEN (((v0.c0))>((v0.c0))) THEN (((v0.c0))==((v0.c0))) ELSE ((v0.c0)==(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))>((v0.c0))) ASC);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 COLLATE RTRIM THEN HEX(v0.c0) WHEN 0.38748873828376995 THEN v0.c0 WHEN (((v0.c0))>((v0.c0))) THEN (((v0.c0))=((v0.c0))) ELSE ((v0.c0)=(v0.c0)) END) ORDER BY (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))>((v0.c0))) ASC;
SELECT ALL * FROM v0, rt0 WHERE ((((((((((rt0.c1 IN ()))AND(((((((((v0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(v0.c0)))AND(rt0.c0)))))OR((((v0.c0))>=((''))))))AND(((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))))AND(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c1 IN ()))AND(((((((((v0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(v0.c0)))AND(rt0.c0)))))OR((((v0.c0))>=((''))))))AND(((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))))AND(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((((((((rt0.c1 IN ()))AND(((((((((v0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(v0.c0)))AND(rt0.c0)))))OR((((v0.c0))>=((''))))))AND(((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))))AND(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c1 IN ()))AND(((((((((v0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(v0.c0)))AND(rt0.c0)))))OR((((v0.c0))>=((''))))))AND(((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))))AND(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((((((((rt0.c1 IN ()))AND(((((((((v0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(v0.c0)))AND(rt0.c0)))))OR((((v0.c0))>=((''))))))AND(((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))))AND(CAST(rt0.c1 AS REAL))));
SELECT * FROM v0 WHERE ('') ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(((-769831311)AND(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(((-769831311)AND(v0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ('') ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(((-769831311)AND(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(((-769831311)AND(v0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ('') ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(((-769831311)AND(v0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c0 THEN '2114555179' ELSE rt0.c2 END)) AND ((rt0.c0))), NULLIF(NULL, LIKELY(rt0.c0))  NULLS FIRST, '#~!' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c0 THEN '2114555179' ELSE rt0.c2 END)) AND ((rt0.c0))), NULLIF(NULL, LIKELY(rt0.c0))  NULLS FIRST, '#~!' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c0 THEN '2114555179' ELSE rt0.c2 END)) AND ((rt0.c0))), NULLIF(NULL, LIKELY(rt0.c0))  NULLS FIRST, '#~!' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c0 THEN '2114555179' ELSE rt0.c2 END)) AND ((rt0.c0))), NULLIF(NULL, LIKELY(rt0.c0))  NULLS FIRST, '#~!' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c0 THEN '2114555179' ELSE rt0.c2 END)) AND ((rt0.c0))), NULLIF(NULL, LIKELY(rt0.c0))  NULLS FIRST, '#~!' DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END) NOTNULL) WHERE (((((((rt0.c1) IS TRUE))OR(rt0.c0)))AND((((rt0.c1))>=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) IS TRUE))OR(rt0.c0)))AND((((rt0.c1))>=((rt0.c1)))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END) NOTNULL));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END) NOTNULL) WHERE (((((((rt0.c1) IS TRUE))OR(rt0.c0)))AND((((rt0.c1))>=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) IS TRUE))OR(rt0.c0)))AND((((rt0.c1))>=((rt0.c1)))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END) NOTNULL));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END) NOTNULL) WHERE (((((((rt0.c1) IS TRUE))OR(rt0.c0)))AND((((rt0.c1))>=((rt0.c1))))));
SELECT * FROM rt0, v0 WHERE (((((rt0.c2)=(v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)=(v0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((rt0.c2)=(v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)=(v0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((rt0.c2)=(v0.c0))) ISNULL));
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1)<=(LIKELIHOOD(v0.c0, 0.06554264503703466))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)<=(LIKELIHOOD(v0.c0, 0.06554264503703466)))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1)<=(LIKELIHOOD(v0.c0, 0.06554264503703466))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)<=(LIKELIHOOD(v0.c0, 0.06554264503703466)))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1)<=(LIKELIHOOD(v0.c0, 0.06554264503703466))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)==(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)==(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)==(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)==(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)==(rt0.c1)) COLLATE BINARY);
SELECT ALL * FROM rt0 INNER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((CAST(0.6340483602452888 AS TEXT))) AND (((NOT (rt0.c0))))) WHERE (IFNULL(DISTINCT v0.c0, NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT v0.c0, NULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((CAST(0.6340483602452888 AS TEXT))) AND (((NOT (rt0.c0))))));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((CAST(0.6340483602452888 AS TEXT))) AND (((NOT (rt0.c0))))) WHERE (IFNULL(DISTINCT v0.c0, NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT v0.c0, NULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((CAST(0.6340483602452888 AS TEXT))) AND (((NOT (rt0.c0))))));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((CAST(0.6340483602452888 AS TEXT))) AND (((NOT (rt0.c0))))) WHERE (IFNULL(DISTINCT v0.c0, NULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((v0.c0)AND(NULL)))AND(CASE x''  WHEN v0.c0 THEN 2.41175581E8 ELSE x'' END)))AND(748968119)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY json_array_length(TRIM(DISTINCT v0.c0, v0.c0)) ASC, ((((((v0.c0)IS NOT(v0.c0)))AND(((0X45430db) BETWEEN (v0.c0) AND (v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)AND(NULL)))AND(CASE x''  WHEN v0.c0 THEN 2.41175581E8 ELSE x'' END)))AND(748968119)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY json_array_length(TRIM(DISTINCT v0.c0, v0.c0)) ASC, ((((((v0.c0)IS NOT(v0.c0)))AND(((0x45430db) BETWEEN (v0.c0) AND (v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((v0.c0)AND(NULL)))AND(CASE x''  WHEN v0.c0 THEN 2.41175581E8 ELSE x'' END)))AND(748968119)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY json_array_length(TRIM(DISTINCT v0.c0, v0.c0)) ASC, ((((((v0.c0)IS NOT(v0.c0)))AND(((0X45430db) BETWEEN (v0.c0) AND (v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)AND(NULL)))AND(CASE x''  WHEN v0.c0 THEN 2.41175581E8 ELSE x'' END)))AND(748968119)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY json_array_length(TRIM(DISTINCT v0.c0, v0.c0)) ASC, ((((((v0.c0)IS NOT(v0.c0)))AND(((0x45430db) BETWEEN (v0.c0) AND (v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((NOT (MIN(v0.c0, v0.c0, v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (MIN(v0.c0, v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((NOT (MIN(v0.c0, v0.c0, v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (MIN(v0.c0, v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((NOT (MIN(v0.c0, v0.c0, v0.c0, v0.c0))));
SELECT COUNT(*) FROM v0 WHERE (((((QUOTE(v0.c0))AND(v0.c0)))AND(CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((QUOTE(v0.c0))AND(v0.c0)))AND(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((QUOTE(v0.c0))AND(v0.c0)))AND(CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((QUOTE(v0.c0))AND(v0.c0)))AND(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((QUOTE(v0.c0))AND(v0.c0)))AND(CAST(v0.c0 AS TEXT))));
SELECT COUNT(*) FROM rt0 WHERE ((((((x'')AND(rt0.c0)))OR(x'')) IN ()));
SELECT SUM(count) FROM (SELECT (((((((x'')AND(rt0.c0)))OR(x'')) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((x'')AND(rt0.c0)))OR(x'')) IN ()));
SELECT SUM(count) FROM (SELECT (((((((x'')AND(rt0.c0)))OR(x'')) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((x'')AND(rt0.c0)))OR(x'')) IN ()));
SELECT ALL * FROM v0 WHERE (((((((v0.c0))>((v0.c0)))))<((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '\nR' END))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0))>((v0.c0)))))<((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '\nR' END)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((v0.c0))>((v0.c0)))))<((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '\nR' END))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0))>((v0.c0)))))<((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '\nR' END)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((v0.c0))>((v0.c0)))))<((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '\nR' END))));
SELECT COUNT(*) FROM rt0 WHERE (0.3102295952579429);
SELECT SUM(count) FROM (SELECT ALL ((0.3102295952579429) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.3102295952579429);
SELECT SUM(count) FROM (SELECT ALL ((0.3102295952579429) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.3102295952579429);
SELECT ALL * FROM rt0 WHERE ((((x'07a5' IN ()))!=(1.358457434E9)));
SELECT SUM(count) FROM (SELECT (((((x'07a5' IN ()))<>(1.358457434E9))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((x'07a5' IN ()))!=(1.358457434E9)));
SELECT SUM(count) FROM (SELECT (((((x'07a5' IN ()))<>(1.358457434E9))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((x'07a5' IN ()))!=(1.358457434E9)));
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c1 IN (NULL)) COLLATE BINARY) ORDER BY ((((rt0.c0)<=(rt0.c1))) ISNULL);
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (NULL)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)<=(rt0.c1))) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c1 IN (NULL)) COLLATE BINARY) ORDER BY ((((rt0.c0)<=(rt0.c1))) ISNULL);
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (NULL)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)<=(rt0.c1))) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c1 IN (NULL)) COLLATE BINARY) ORDER BY ((((rt0.c0)<=(rt0.c1))) ISNULL);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC) COLLATE BINARY COLLATE NOCASE) ORDER BY ((((rt0.c0)<(rt0.c2))) NOT NULL)  NULLS FIRST, CAST((- (rt0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS NUMERIC) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)<(rt0.c2))) NOT NULL)  NULLS FIRST, CAST((- (rt0.c0)) AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC) COLLATE BINARY COLLATE NOCASE) ORDER BY ((((rt0.c0)<(rt0.c2))) NOT NULL)  NULLS FIRST, CAST((- (rt0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS NUMERIC) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)<(rt0.c2))) NOT NULL)  NULLS FIRST, CAST((- (rt0.c0)) AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC) COLLATE BINARY COLLATE NOCASE) ORDER BY ((((rt0.c0)<(rt0.c2))) NOT NULL)  NULLS FIRST, CAST((- (rt0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE ((NOT ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((NOT ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((NOT ((rt0.c2 IN ()))));
SELECT * FROM rt0, v0 WHERE ((((((((((x'')AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((x'')AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((((((((x'')AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((x'')AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((((((((x'')AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)) IN ()));
SELECT ALL * FROM rt0 WHERE (CAST(((((rt0.c1)OR(rt0.c2)))AND(NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c1)OR(rt0.c2)))AND(NULL)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((((rt0.c1)OR(rt0.c2)))AND(NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c1)OR(rt0.c2)))AND(NULL)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((((rt0.c1)OR(rt0.c2)))AND(NULL)) AS INTEGER));
SELECT ALL * FROM rt0, v0 WHERE (((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR(((rt0.c2)>(rt0.c2)))))OR(((rt0.c0)<(rt0.c0)))))AND(0.019750049452040175)))AND(x'9332'))) ORDER BY ((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))IS NOT(((rt0.c1) NOT BETWEEN (rt0.c0) AND ('8>	')))) ASC  NULLS LAST, CAST(json_remove(NULL, v0.c0) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR(((rt0.c2)>(rt0.c2)))))OR(((rt0.c0)<(rt0.c0)))))AND(0.019750049452040175)))AND(x'9332'))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))IS NOT(((rt0.c1) NOT BETWEEN (rt0.c0) AND ('8>	')))) ASC  NULLS LAST, CAST(json_remove(NULL, v0.c0) AS BLOB));
SELECT ALL * FROM rt0, v0 WHERE (((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR(((rt0.c2)>(rt0.c2)))))OR(((rt0.c0)<(rt0.c0)))))AND(0.019750049452040175)))AND(x'9332'))) ORDER BY ((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))IS NOT(((rt0.c1) NOT BETWEEN (rt0.c0) AND ('8>	')))) ASC  NULLS LAST, CAST(json_remove(NULL, v0.c0) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR(((rt0.c2)>(rt0.c2)))))OR(((rt0.c0)<(rt0.c0)))))AND(0.019750049452040175)))AND(x'9332'))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))IS NOT(((rt0.c1) NOT BETWEEN (rt0.c0) AND ('8>	')))) ASC  NULLS LAST, CAST(json_remove(NULL, v0.c0) AS BLOB));
SELECT ALL * FROM rt0, v0 WHERE (((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR(((rt0.c2)>(rt0.c2)))))OR(((rt0.c0)<(rt0.c0)))))AND(0.019750049452040175)))AND(x'9332'))) ORDER BY ((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))IS NOT(((rt0.c1) NOT BETWEEN (rt0.c0) AND ('8>	')))) ASC  NULLS LAST, CAST(json_remove(NULL, v0.c0) AS BLOB);
SELECT ALL * FROM v0, rt0 WHERE (((((((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND(((rt0.c0) NOTNULL))))OR(((rt0.c1) BETWEEN (-6.55302804E8) AND (rt0.c0)))))OR(((rt0.c1) IS TRUE))))OR(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND(((rt0.c0) NOTNULL))))OR(((rt0.c1) BETWEEN (-6.55302804E8) AND (rt0.c0)))))OR(((rt0.c1) IS TRUE))))OR(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND(((rt0.c0) NOTNULL))))OR(((rt0.c1) BETWEEN (-6.55302804E8) AND (rt0.c0)))))OR(((rt0.c1) IS TRUE))))OR(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND(((rt0.c0) NOTNULL))))OR(((rt0.c1) BETWEEN (-6.55302804E8) AND (rt0.c0)))))OR(((rt0.c1) IS TRUE))))OR(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND(((rt0.c0) NOTNULL))))OR(((rt0.c1) BETWEEN (-6.55302804E8) AND (rt0.c0)))))OR(((rt0.c1) IS TRUE))))OR(((v0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON CAST(((rt0.c0)>=(v0.c0)) AS REAL) WHERE ((('')*(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((('')*(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON CAST(((rt0.c0)>=(v0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON CAST(((rt0.c0)>=(v0.c0)) AS REAL) WHERE ((('')*(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((('')*(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON CAST(((rt0.c0)>=(v0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON CAST(((rt0.c0)>=(v0.c0)) AS REAL) WHERE ((('')*(rt0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (v0.c0 COLLATE NOCASE IN ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 COLLATE NOCASE IN ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (v0.c0 COLLATE NOCASE IN ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 COLLATE NOCASE IN ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (v0.c0 COLLATE NOCASE IN ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE ((((v0.c0 IN (v0.c0, rt0.c2)))>>(CAST(rt0.c0 AS BLOB)))) ORDER BY CAST(((v0.c0) NOTNULL) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c0, rt0.c2)))>>(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((v0.c0) NOTNULL) AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((v0.c0 IN (v0.c0, rt0.c2)))>>(CAST(rt0.c0 AS BLOB)))) ORDER BY CAST(((v0.c0) NOTNULL) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c0, rt0.c2)))>>(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((v0.c0) NOTNULL) AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((v0.c0 IN (v0.c0, rt0.c2)))>>(CAST(rt0.c0 AS BLOB)))) ORDER BY CAST(((v0.c0) NOTNULL) AS BLOB) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((- (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- (v0.c0)));
SELECT ALL * FROM rt0 WHERE ((- ((x'' IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((x'' IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- ((x'' IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((x'' IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- ((x'' IN ()))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (x'');
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END)IS NOT((v0.c0 IN (v0.c0))))) ORDER BY v0.c0 ASC  NULLS LAST, CASE (v0.c0 IN (v0.c0, v0.c0))  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (v0.c0 IN ()) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 COLLATE RTRIM WHEN '' COLLATE NOCASE THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE UNLIKELY(x'bc52') END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 END)IS NOT((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS LAST, CASE (v0.c0 IN (v0.c0, v0.c0))  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (v0.c0 IN ()) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 COLLATE RTRIM WHEN '' COLLATE NOCASE THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE UNLIKELY(x'bc52') END  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END)IS NOT((v0.c0 IN (v0.c0))))) ORDER BY v0.c0 ASC  NULLS LAST, CASE (v0.c0 IN (v0.c0, v0.c0))  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (v0.c0 IN ()) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 COLLATE RTRIM WHEN '' COLLATE NOCASE THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE UNLIKELY(x'bc52') END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 END)IS NOT((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS LAST, CASE (v0.c0 IN (v0.c0, v0.c0))  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (v0.c0 IN ()) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 COLLATE RTRIM WHEN '' COLLATE NOCASE THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE UNLIKELY(x'bc52') END  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END)IS NOT((v0.c0 IN (v0.c0))))) ORDER BY v0.c0 ASC  NULLS LAST, CASE (v0.c0 IN (v0.c0, v0.c0))  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (v0.c0 IN ()) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 COLLATE RTRIM WHEN '' COLLATE NOCASE THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE UNLIKELY(x'bc52') END  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN v0.c0 THEN ((v0.c0)IS NOT(rt0.c1)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN HEX(DISTINCT rt0.c0) WHEN (rt0.c1 IN ()) THEN ((rt0.c1)&(rt0.c1)) END) ORDER BY CASE ((rt0.c1)GLOB(rt0.c2))  WHEN ((rt0.c2)*(rt0.c2)) THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN ((v0.c0)IS NOT(rt0.c1)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN HEX(DISTINCT rt0.c0) WHEN (rt0.c1 IN ()) THEN ((rt0.c1)&(rt0.c1)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE ((rt0.c1)GLOB(rt0.c2))  WHEN ((rt0.c2)*(rt0.c2)) THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) END  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN v0.c0 THEN ((v0.c0)IS NOT(rt0.c1)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN HEX(DISTINCT rt0.c0) WHEN (rt0.c1 IN ()) THEN ((rt0.c1)&(rt0.c1)) END) ORDER BY CASE ((rt0.c1)GLOB(rt0.c2))  WHEN ((rt0.c2)*(rt0.c2)) THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN ((v0.c0)IS NOT(rt0.c1)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN HEX(DISTINCT rt0.c0) WHEN (rt0.c1 IN ()) THEN ((rt0.c1)&(rt0.c1)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE ((rt0.c1)GLOB(rt0.c2))  WHEN ((rt0.c2)*(rt0.c2)) THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) END  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN v0.c0 THEN ((v0.c0)IS NOT(rt0.c1)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN HEX(DISTINCT rt0.c0) WHEN (rt0.c1 IN ()) THEN ((rt0.c1)&(rt0.c1)) END) ORDER BY CASE ((rt0.c1)GLOB(rt0.c2))  WHEN ((rt0.c2)*(rt0.c2)) THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((('ྐqP8h8]') BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (''))) AND (((rt0.c1) BETWEEN (v0.c0) AND (']欩')))));
SELECT SUM(count) FROM (SELECT (((('ྐqP8h8]') BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (''))) AND (((rt0.c1) BETWEEN (v0.c0) AND (']欩'))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((('ྐqP8h8]') BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (''))) AND (((rt0.c1) BETWEEN (v0.c0) AND (']欩')))));
SELECT SUM(count) FROM (SELECT (((('ྐqP8h8]') BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (''))) AND (((rt0.c1) BETWEEN (v0.c0) AND (']欩'))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((('ྐqP8h8]') BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (''))) AND (((rt0.c1) BETWEEN (v0.c0) AND (']欩')))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((CAST(rt0.c1 AS INTEGER))AND((x'' IN ()))))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c1 AS INTEGER))AND((x'' IN ()))))OR(rt0.c1))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((CAST(rt0.c1 AS INTEGER))AND((x'' IN ()))))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c1 AS INTEGER))AND((x'' IN ()))))OR(rt0.c1))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((CAST(rt0.c1 AS INTEGER))AND((x'' IN ()))))OR(rt0.c1)));
SELECT * FROM v0, rt0 WHERE (CASE WHEN v0.c0 COLLATE NOCASE THEN rt0.c0 COLLATE NOCASE WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) THEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1)) THEN (((v0.c0))<=((NULL))) WHEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) THEN ((v0.c0) NOT NULL) WHEN ((rt0.c1)=(rt0.c2)) THEN (~ (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 COLLATE NOCASE THEN rt0.c0 COLLATE NOCASE WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) THEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1)) THEN (((v0.c0))<=((NULL))) WHEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) THEN ((v0.c0) NOT NULL) WHEN ((rt0.c1)==(rt0.c2)) THEN (~ (v0.c0)) END) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CASE WHEN v0.c0 COLLATE NOCASE THEN rt0.c0 COLLATE NOCASE WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) THEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1)) THEN (((v0.c0))<=((NULL))) WHEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) THEN ((v0.c0) NOT NULL) WHEN ((rt0.c1)=(rt0.c2)) THEN (~ (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 COLLATE NOCASE THEN rt0.c0 COLLATE NOCASE WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) THEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1)) THEN (((v0.c0))<=((NULL))) WHEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) THEN ((v0.c0) NOT NULL) WHEN ((rt0.c1)==(rt0.c2)) THEN (~ (v0.c0)) END) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CASE WHEN v0.c0 COLLATE NOCASE THEN rt0.c0 COLLATE NOCASE WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) THEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1)) THEN (((v0.c0))<=((NULL))) WHEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) THEN ((v0.c0) NOT NULL) WHEN ((rt0.c1)=(rt0.c2)) THEN (~ (v0.c0)) END);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c2)<>(0.3406268542278188)))=(((rt0.c0)/(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<>(0.3406268542278188)))==(((rt0.c0)/(v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c2)<>(0.3406268542278188)))=(((rt0.c0)/(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<>(0.3406268542278188)))==(((rt0.c0)/(v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c2)<>(0.3406268542278188)))=(((rt0.c0)/(v0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (LIKELY(DISTINCT CAST(rt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT CAST(rt0.c0 AS INTEGER))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (LIKELY(DISTINCT CAST(rt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT CAST(rt0.c0 AS INTEGER))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (LIKELY(DISTINCT CAST(rt0.c0 AS INTEGER)));
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)AND(rt0.c2))) NOT BETWEEN (rt0.c2) AND (TRIM(DISTINCT rt0.c2, x'')))) ORDER BY (((('-717456608')>(rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c2))) NOT BETWEEN (rt0.c2) AND (TRIM(DISTINCT rt0.c2, x'')))) IS TRUE)  as count FROM rt0 ORDER BY (((('-717456608')>(rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)AND(rt0.c2))) NOT BETWEEN (rt0.c2) AND (TRIM(DISTINCT rt0.c2, x'')))) ORDER BY (((('-717456608')>(rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c2))) NOT BETWEEN (rt0.c2) AND (TRIM(DISTINCT rt0.c2, x'')))) IS TRUE)  as count FROM rt0 ORDER BY (((('-717456608')>(rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)AND(rt0.c2))) NOT BETWEEN (rt0.c2) AND (TRIM(DISTINCT rt0.c2, x'')))) ORDER BY (((('-717456608')>(rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)AND(rt0.c0)))%((+ (rt0.c2))))) ORDER BY ((rt0.c1)-(v0.c0)) COLLATE RTRIM  NULLS LAST, '492133379' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c0)))%((+ (rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c1)-(v0.c0)) COLLATE RTRIM  NULLS LAST, '492133379' ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)AND(rt0.c0)))%((+ (rt0.c2))))) ORDER BY ((rt0.c1)-(v0.c0)) COLLATE RTRIM  NULLS LAST, '492133379' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c0)))%((+ (rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c1)-(v0.c0)) COLLATE RTRIM  NULLS LAST, '492133379' ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)AND(rt0.c0)))%((+ (rt0.c2))))) ORDER BY ((rt0.c1)-(v0.c0)) COLLATE RTRIM  NULLS LAST, '492133379' ASC  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (json_valid(CAST(rt0.c2 AS TEXT))) ORDER BY CASE (rt0.c2 IN ())  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))) THEN ((v0.c0)<=(0.9969746041462778)) ELSE (+ (rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_valid(CAST(rt0.c2 AS TEXT))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE (rt0.c2 IN ())  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))) THEN ((v0.c0)<=(0.9969746041462778)) ELSE (+ (rt0.c2)) END ASC);
SELECT * FROM v0, rt0 WHERE (json_valid(CAST(rt0.c2 AS TEXT))) ORDER BY CASE (rt0.c2 IN ())  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))) THEN ((v0.c0)<=(0.9969746041462778)) ELSE (+ (rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_valid(CAST(rt0.c2 AS TEXT))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE (rt0.c2 IN ())  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))) THEN ((v0.c0)<=(0.9969746041462778)) ELSE (+ (rt0.c2)) END ASC);
SELECT * FROM v0, rt0 WHERE (json_valid(CAST(rt0.c2 AS TEXT))) ORDER BY CASE (rt0.c2 IN ())  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))) THEN ((v0.c0)<=(0.9969746041462778)) ELSE (+ (rt0.c2)) END ASC;
SELECT COUNT(*) FROM v0, rt0 WHERE (((('')) NOT BETWEEN ((json_quote(rt0.c2))) AND ((((rt0.c0)||(v0.c0)))))) ORDER BY (('-1210692832')IS(STRFTIME(rt0.c0, rt0.c1, rt0.c1))) DESC  NULLS LAST, CAST(((rt0.c1) ISNULL) AS BLOB) DESC  NULLS LAST, CAST(((v0.c0)OR(v0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('')) NOT BETWEEN ((json_quote(rt0.c2))) AND ((((rt0.c0)||(v0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (('-1210692832')IS(STRFTIME(rt0.c0, rt0.c1, rt0.c1))) DESC  NULLS LAST, CAST(((rt0.c1) ISNULL) AS BLOB) DESC  NULLS LAST, CAST(((v0.c0)OR(v0.c0)) AS INTEGER) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((('')) NOT BETWEEN ((json_quote(rt0.c2))) AND ((((rt0.c0)||(v0.c0)))))) ORDER BY (('-1210692832')IS(STRFTIME(rt0.c0, rt0.c1, rt0.c1))) DESC  NULLS LAST, CAST(((rt0.c1) ISNULL) AS BLOB) DESC  NULLS LAST, CAST(((v0.c0)OR(v0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('')) NOT BETWEEN ((json_quote(rt0.c2))) AND ((((rt0.c0)||(v0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (('-1210692832')IS(STRFTIME(rt0.c0, rt0.c1, rt0.c1))) DESC  NULLS LAST, CAST(((rt0.c1) ISNULL) AS BLOB) DESC  NULLS LAST, CAST(((v0.c0)OR(v0.c0)) AS INTEGER) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((('')) NOT BETWEEN ((json_quote(rt0.c2))) AND ((((rt0.c0)||(v0.c0)))))) ORDER BY (('-1210692832')IS(STRFTIME(rt0.c0, rt0.c1, rt0.c1))) DESC  NULLS LAST, CAST(((rt0.c1) ISNULL) AS BLOB) DESC  NULLS LAST, CAST(((v0.c0)OR(v0.c0)) AS INTEGER) ASC;
SELECT * FROM rt0, v0 WHERE (CASE ((rt0.c0)LIKE(rt0.c0))  WHEN ((((rt0.c2)AND(v0.c0)))OR(rt0.c2)) THEN ((0.35029209960514984)=(rt0.c1)) ELSE (+ (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)LIKE(rt0.c0))  WHEN ((((rt0.c2)AND(v0.c0)))OR(rt0.c2)) THEN ((0.35029209960514984)==(rt0.c1)) ELSE (+ (v0.c0)) END) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CASE ((rt0.c0)LIKE(rt0.c0))  WHEN ((((rt0.c2)AND(v0.c0)))OR(rt0.c2)) THEN ((0.35029209960514984)=(rt0.c1)) ELSE (+ (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)LIKE(rt0.c0))  WHEN ((((rt0.c2)AND(v0.c0)))OR(rt0.c2)) THEN ((0.35029209960514984)==(rt0.c1)) ELSE (+ (v0.c0)) END) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CASE ((rt0.c0)LIKE(rt0.c0))  WHEN ((((rt0.c2)AND(v0.c0)))OR(rt0.c2)) THEN ((0.35029209960514984)=(rt0.c1)) ELSE (+ (v0.c0)) END);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 IN ()) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY(LIKELY(rt0.c1))) ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN (((((((((rt0.c2)AND(2.091058866E9)))AND(0xffffffffbc4494c8)))OR(rt0.c2)))AND(rt0.c2))) AND (((rt0.c1)>>(1.462057959E9))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(LIKELY(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN (((((((((rt0.c2)AND(2.091058866E9)))AND(0xffffffffbc4494c8)))OR(rt0.c2)))AND(rt0.c2))) AND (((rt0.c1)>>(1.462057959E9)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY(LIKELY(rt0.c1))) ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN (((((((((rt0.c2)AND(2.091058866E9)))AND(0xffffffffbc4494c8)))OR(rt0.c2)))AND(rt0.c2))) AND (((rt0.c1)>>(1.462057959E9))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(LIKELY(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN (((((((((rt0.c2)AND(2.091058866E9)))AND(0xffffffffbc4494c8)))OR(rt0.c2)))AND(rt0.c2))) AND (((rt0.c1)>>(1.462057959E9)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY(LIKELY(rt0.c1))) ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN (((((((((rt0.c2)AND(2.091058866E9)))AND(0xffffffffbc4494c8)))OR(rt0.c2)))AND(rt0.c2))) AND (((rt0.c1)>>(1.462057959E9))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0) IS TRUE)) NOT BETWEEN ((+ (rt0.c0))) AND (((v0.c0)>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE)) NOT BETWEEN ((+ (rt0.c0))) AND (((v0.c0)>(rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0) IS TRUE)) NOT BETWEEN ((+ (rt0.c0))) AND (((v0.c0)>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE)) NOT BETWEEN ((+ (rt0.c0))) AND (((v0.c0)>(rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0) IS TRUE)) NOT BETWEEN ((+ (rt0.c0))) AND (((v0.c0)>(rt0.c2)))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((NOT (v0.c0)) IN ()) WHERE ((((NOT (rt0.c2)))IS NOT(((((((((((((rt0.c1)OR('_[5GQM')))OR('0.24642296573389255')))AND(v0.c0)))AND(rt0.c2)))OR(rt0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2)))IS NOT(((((((((((((rt0.c1)OR('_[5GQM')))OR('0.24642296573389255')))AND(v0.c0)))AND(rt0.c2)))OR(rt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((NOT (v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((NOT (v0.c0)) IN ()) WHERE ((((NOT (rt0.c2)))IS NOT(((((((((((((rt0.c1)OR('_[5GQM')))OR('0.24642296573389255')))AND(v0.c0)))AND(rt0.c2)))OR(rt0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2)))IS NOT(((((((((((((rt0.c1)OR('_[5GQM')))OR('0.24642296573389255')))AND(v0.c0)))AND(rt0.c2)))OR(rt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((NOT (v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((NOT (v0.c0)) IN ()) WHERE ((((NOT (rt0.c2)))IS NOT(((((((((((((rt0.c1)OR('_[5GQM')))OR('0.24642296573389255')))AND(v0.c0)))AND(rt0.c2)))OR(rt0.c0)))AND(v0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF((rt0.c1 IN (rt0.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((rt0.c1 IN (rt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF((rt0.c1 IN (rt0.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((rt0.c1 IN (rt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF((rt0.c1 IN (rt0.c0, rt0.c2))));
SELECT ALL * FROM rt0, v0 WHERE (((json_extract(rt0.c0, rt0.c2, x'2ebb', v0.c0))!=((NOT (rt0.c0))))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_extract(rt0.c0, rt0.c2, x'2ebb', v0.c0))<>((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c2  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((json_extract(rt0.c0, rt0.c2, x'2ebb', v0.c0))!=((NOT (rt0.c0))))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_extract(rt0.c0, rt0.c2, x'2ebb', v0.c0))<>((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c2  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2) NOTNULL))|(((rt0.c2)>=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL))|(((rt0.c2)>=(rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2) NOTNULL))|(((rt0.c2)>=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL))|(((rt0.c2)>=(rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2) NOTNULL))|(((rt0.c2)>=(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c2) IS TRUE) IN ()) WHERE (((((((v0.c0)AND(v0.c0)))OR('U0')))/(((rt0.c0)&(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c0)))OR('U0')))/(((rt0.c0)&(rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c2) IS TRUE) IN ()));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c2) IS TRUE) IN ()) WHERE (((((((v0.c0)AND(v0.c0)))OR('U0')))/(((rt0.c0)&(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c0)))OR('U0')))/(((rt0.c0)&(rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c2) IS TRUE) IN ()));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c2) IS TRUE) IN ()) WHERE (((((((v0.c0)AND(v0.c0)))OR('U0')))/(((rt0.c0)&(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (((((NULL, 'sMvW', rt0.c0))>=((rt0.c0, '-2078903041', rt0.c1))) IN ())) ORDER BY (COALESCE(DISTINCT rt0.c0, rt0.c1) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL, 'sMvW', rt0.c0))>=((rt0.c0, '-2078903041', rt0.c1))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (COALESCE(DISTINCT rt0.c0, rt0.c1) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((NULL, 'sMvW', rt0.c0))>=((rt0.c0, '-2078903041', rt0.c1))) IN ())) ORDER BY (COALESCE(DISTINCT rt0.c0, rt0.c1) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL, 'sMvW', rt0.c0))>=((rt0.c0, '-2078903041', rt0.c1))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (COALESCE(DISTINCT rt0.c0, rt0.c1) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((NULL, 'sMvW', rt0.c0))>=((rt0.c0, '-2078903041', rt0.c1))) IN ())) ORDER BY (COALESCE(DISTINCT rt0.c0, rt0.c1) IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c0))<((rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((v0.c0))<((rt0.c1))) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c0))<((rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((v0.c0))<((rt0.c1))) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c0))<((rt0.c1))) IN ()));
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))/(json_quote(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))/(json_quote(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))/(json_quote(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))/(json_quote(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))/(json_quote(rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((8.02105747E8 IN (rt0.c2, (((rt0.c1))<((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((8.02105747E8 IN (rt0.c2, (((rt0.c1))<((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((8.02105747E8 IN (rt0.c2, (((rt0.c1))<((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((8.02105747E8 IN (rt0.c2, (((rt0.c1))<((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((8.02105747E8 IN (rt0.c2, (((rt0.c1))<((rt0.c0))))));
SELECT ALL * FROM v0, rt0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY ((UPPER(v0.c0))-(((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))))  NULLS FIRST, ((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (v0.c0) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((UPPER(v0.c0))-(((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))))  NULLS FIRST, ((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (v0.c0) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY ((UPPER(v0.c0))-(((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))))  NULLS FIRST, ((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (v0.c0) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((UPPER(v0.c0))-(((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))))  NULLS FIRST, ((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (v0.c0) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY ((UPPER(v0.c0))-(((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))))  NULLS FIRST, ((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (v0.c0) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE ((CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END IN (v0.c0))) ORDER BY CASE 0xffffffff88a85022  WHEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c2)) THEN (v0.c0 IN ()) WHEN CASE v0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN ((v0.c0) IS FALSE) WHEN v0.c0 THEN (((rt0.c0, v0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, v0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2))) END;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END IN (v0.c0))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE 0Xffffffff88a85022  WHEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c2)) THEN (v0.c0 IN ()) WHEN CASE v0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN ((v0.c0) IS FALSE) WHEN v0.c0 THEN (((rt0.c0, v0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, v0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2))) END);
SELECT COUNT(*) FROM v0, rt0 WHERE ((CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END IN (v0.c0))) ORDER BY CASE 0xffffffff88a85022  WHEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c2)) THEN (v0.c0 IN ()) WHEN CASE v0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN ((v0.c0) IS FALSE) WHEN v0.c0 THEN (((rt0.c0, v0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, v0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2))) END;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END IN (v0.c0))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE 0Xffffffff88a85022  WHEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c2)) THEN (v0.c0 IN ()) WHEN CASE v0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN ((v0.c0) IS FALSE) WHEN v0.c0 THEN (((rt0.c0, v0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, v0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2))) END);
SELECT COUNT(*) FROM v0, rt0 WHERE ((CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END IN (v0.c0))) ORDER BY CASE 0xffffffff88a85022  WHEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c2)) THEN (v0.c0 IN ()) WHEN CASE v0.c0  WHEN rt0.c0 THEN rt0.c2 END THEN ((v0.c0) IS FALSE) WHEN v0.c0 THEN (((rt0.c0, v0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, v0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2))) END;
SELECT ALL * FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (v0.c0);
SELECT * FROM v0 WHERE ((NOT (LIKELY(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (LIKELY(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT (LIKELY(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (LIKELY(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT (LIKELY(DISTINCT v0.c0))));
SELECT ALL * FROM v0, rt0 WHERE (((((0.8919641402176722)OR(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))))OR(((v0.c0) BETWEEN (-2.045686544E9) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.8919641402176722)OR(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))))OR(((v0.c0) BETWEEN (-2.045686544E9) AND (rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((0.8919641402176722)OR(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))))OR(((v0.c0) BETWEEN (-2.045686544E9) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.8919641402176722)OR(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))))OR(((v0.c0) BETWEEN (-2.045686544E9) AND (rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((0.8919641402176722)OR(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))))OR(((v0.c0) BETWEEN (-2.045686544E9) AND (rt0.c0)))));
SELECT ALL * FROM rt0, v0 WHERE (rt0.c0) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (rt0.c0) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (rt0.c0) ORDER BY v0.c0  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE ('q寨-2l') ORDER BY ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))|(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('q寨-2l') IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))|(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE ('q寨-2l') ORDER BY ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))|(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('q寨-2l') IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))|(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE ('q寨-2l') ORDER BY ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))|(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))<>(((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))<>(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))<>(((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))<>(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))<>(((rt0.c0) ISNULL))));
SELECT COUNT(*) FROM rt0 WHERE ((x'ea3d' IN ()) COLLATE RTRIM) ORDER BY CAST(((rt0.c0)&(rt0.c1)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'ea3d' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)&(rt0.c1)) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((x'ea3d' IN ()) COLLATE RTRIM) ORDER BY CAST(((rt0.c0)&(rt0.c1)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'ea3d' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)&(rt0.c1)) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((x'ea3d' IN ()) COLLATE RTRIM) ORDER BY CAST(((rt0.c0)&(rt0.c1)) AS BLOB)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (v0.c0))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (v0.c0))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c0)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((CAST(rt0.c2 AS BLOB), (rt0.c2 IN (rt0.c1)), SUBSTR(v0.c0, v0.c0)))>(((NOT (rt0.c1)), (rt0.c1 IN ()), CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0x33516415 END))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c2 AS BLOB), (rt0.c2 IN (rt0.c1)), SUBSTR(v0.c0, v0.c0)))>(((NOT (rt0.c1)), (rt0.c1 IN ()), CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0x33516415 END)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((CAST(rt0.c2 AS BLOB), (rt0.c2 IN (rt0.c1)), SUBSTR(v0.c0, v0.c0)))>(((NOT (rt0.c1)), (rt0.c1 IN ()), CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0x33516415 END))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c2 AS BLOB), (rt0.c2 IN (rt0.c1)), SUBSTR(v0.c0, v0.c0)))>(((NOT (rt0.c1)), (rt0.c1 IN ()), CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0x33516415 END)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((CAST(rt0.c2 AS BLOB), (rt0.c2 IN (rt0.c1)), SUBSTR(v0.c0, v0.c0)))>(((NOT (rt0.c1)), (rt0.c1 IN ()), CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0x33516415 END))));
SELECT * FROM rt0, v0 WHERE (((((((rt0.c2)-(rt0.c1)))OR(rt0.c2 COLLATE BINARY)))AND(((v0.c0)>=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)-(rt0.c1)))OR(rt0.c2 COLLATE BINARY)))AND(((v0.c0)>=(rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((rt0.c2)-(rt0.c1)))OR(rt0.c2 COLLATE BINARY)))AND(((v0.c0)>=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)-(rt0.c1)))OR(rt0.c2 COLLATE BINARY)))AND(((v0.c0)>=(rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((rt0.c2)-(rt0.c1)))OR(rt0.c2 COLLATE BINARY)))AND(((v0.c0)>=(rt0.c0)))));
SELECT ALL * FROM v0, rt0 WHERE (TIME((rt0.c1 IN ()), NULL, highlight(rt0.c2, rt0.c2, rt0.c0, rt0.c0), ((v0.c0) IS TRUE), CAST(v0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((TIME((rt0.c1 IN ()), NULL, highlight(rt0.c2, rt0.c2, rt0.c0, rt0.c0), ((v0.c0) IS TRUE), CAST(v0.c0 AS BLOB))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (TIME((rt0.c1 IN ()), NULL, highlight(rt0.c2, rt0.c2, rt0.c0, rt0.c0), ((v0.c0) IS TRUE), CAST(v0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((TIME((rt0.c1 IN ()), NULL, highlight(rt0.c2, rt0.c2, rt0.c0, rt0.c0), ((v0.c0) IS TRUE), CAST(v0.c0 AS BLOB))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)AND(v0.c0)))OR(0.6451914518844337)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(v0.c0)))OR(0.6451914518844337)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)AND(v0.c0)))OR(0.6451914518844337)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(v0.c0)))OR(0.6451914518844337)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)AND(v0.c0)))OR(0.6451914518844337)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((1.677492571E9) ISNULL))) AND ((x''))) WHERE (CAST(((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((1.677492571E9) ISNULL))) AND ((x''))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((1.677492571E9) ISNULL))) AND ((x''))) WHERE (CAST(((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((1.677492571E9) ISNULL))) AND ((x''))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((1.677492571E9) ISNULL))) AND ((x''))) WHERE (CAST(((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB));
SELECT * FROM rt0 WHERE (json_valid(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_valid(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_valid(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_valid(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_valid(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))));
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c2)AND(((rt0.c1) NOTNULL)))) ORDER BY ((((((((rt0.c1 COLLATE BINARY)OR(CAST('ꡰ' AS INTEGER))))OR(json_remove(rt0.c0, v0.c0, rt0.c2, rt0.c0))))AND(((((0.20629993749650632)OR(rt0.c1)))AND('~B_獛iswr')))))OR((((v0.c0))=((rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)AND(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((((rt0.c1 COLLATE BINARY)OR(CAST('ꡰ' AS INTEGER))))OR(json_remove(rt0.c0, v0.c0, rt0.c2, rt0.c0))))AND(((((0.20629993749650632)OR(rt0.c1)))AND('~B_獛iswr')))))OR((((v0.c0))=((rt0.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c2)AND(((rt0.c1) NOTNULL)))) ORDER BY ((((((((rt0.c1 COLLATE BINARY)OR(CAST('ꡰ' AS INTEGER))))OR(json_remove(rt0.c0, v0.c0, rt0.c2, rt0.c0))))AND(((((0.20629993749650632)OR(rt0.c1)))AND('~B_獛iswr')))))OR((((v0.c0))=((rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)AND(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((((rt0.c1 COLLATE BINARY)OR(CAST('ꡰ' AS INTEGER))))OR(json_remove(rt0.c0, v0.c0, rt0.c2, rt0.c0))))AND(((((0.20629993749650632)OR(rt0.c1)))AND('~B_獛iswr')))))OR((((v0.c0))=((rt0.c1))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (((NULLIF(v0.c0, v0.c0), LIKELY(DISTINCT v0.c0), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))<>((v0.c0, (~ (v0.c0)), v0.c0 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((NULLIF(v0.c0, v0.c0), LIKELY(DISTINCT v0.c0), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))<>((v0.c0, (~ (v0.c0)), v0.c0 COLLATE RTRIM))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (((NULLIF(v0.c0, v0.c0), LIKELY(DISTINCT v0.c0), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))<>((v0.c0, (~ (v0.c0)), v0.c0 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((NULLIF(v0.c0, v0.c0), LIKELY(DISTINCT v0.c0), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))<>((v0.c0, (~ (v0.c0)), v0.c0 COLLATE RTRIM))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (((NULLIF(v0.c0, v0.c0), LIKELY(DISTINCT v0.c0), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))<>((v0.c0, (~ (v0.c0)), v0.c0 COLLATE RTRIM))) ASC;
SELECT * FROM v0, rt0 WHERE (IFNULL('1657423659', ((rt0.c1)!=(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL('1657423659', ((rt0.c1)<>(v0.c0)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (IFNULL('1657423659', ((rt0.c1)!=(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL('1657423659', ((rt0.c1)<>(v0.c0)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (IFNULL('1657423659', ((rt0.c1)!=(v0.c0))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((UPPER(rt0.c2))LIKE((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((UPPER(rt0.c2))LIKE((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((UPPER(rt0.c2))LIKE((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((UPPER(rt0.c2))LIKE((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((UPPER(rt0.c2))LIKE((rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN v0.c0 THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END WHEN (('-2020328692')||(rt0.c1)) THEN (NULL IN (rt0.c2)) WHEN CASE v0.c0  WHEN rt0.c2 THEN '1738050770' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 END THEN (~ (rt0.c1)) ELSE ((((((((rt0.c2)OR('oyeV7>lY㺥')))OR(rt0.c1)))AND(v0.c0)))AND(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END WHEN (('-2020328692')||(rt0.c1)) THEN (NULL IN (rt0.c2)) WHEN CASE v0.c0  WHEN rt0.c2 THEN '1738050770' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 END THEN (~ (rt0.c1)) ELSE ((((((((rt0.c2)OR('oyeV7>lY㺥')))OR(rt0.c1)))AND(v0.c0)))AND(rt0.c0)) END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN v0.c0 THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END WHEN (('-2020328692')||(rt0.c1)) THEN (NULL IN (rt0.c2)) WHEN CASE v0.c0  WHEN rt0.c2 THEN '1738050770' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 END THEN (~ (rt0.c1)) ELSE ((((((((rt0.c2)OR('oyeV7>lY㺥')))OR(rt0.c1)))AND(v0.c0)))AND(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END WHEN (('-2020328692')||(rt0.c1)) THEN (NULL IN (rt0.c2)) WHEN CASE v0.c0  WHEN rt0.c2 THEN '1738050770' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 END THEN (~ (rt0.c1)) ELSE ((((((((rt0.c2)OR('oyeV7>lY㺥')))OR(rt0.c1)))AND(v0.c0)))AND(rt0.c0)) END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN v0.c0 THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END WHEN (('-2020328692')||(rt0.c1)) THEN (NULL IN (rt0.c2)) WHEN CASE v0.c0  WHEN rt0.c2 THEN '1738050770' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 END THEN (~ (rt0.c1)) ELSE ((((((((rt0.c2)OR('oyeV7>lY㺥')))OR(rt0.c1)))AND(v0.c0)))AND(rt0.c0)) END);
SELECT ALL * FROM rt0, v0 WHERE (0Xffffffffae0ee31b) ORDER BY (~ (((((rt0.c0)OR('')))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffae0ee31b) IS TRUE)  as count FROM rt0, v0 ORDER BY (~ (((((rt0.c0)OR('')))AND(rt0.c1)))));
SELECT ALL * FROM rt0, v0 WHERE (0Xffffffffae0ee31b) ORDER BY (~ (((((rt0.c0)OR('')))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffae0ee31b) IS TRUE)  as count FROM rt0, v0 ORDER BY (~ (((((rt0.c0)OR('')))AND(rt0.c1)))));
SELECT ALL * FROM rt0, v0 WHERE (0Xffffffffae0ee31b) ORDER BY (~ (((((rt0.c0)OR('')))AND(rt0.c1))));
SELECT ALL COUNT(*) FROM v0 WHERE (DATETIME(((((v0.c0)AND(v0.c0)))AND(v0.c0)), ('a'',r' IN (v0.c0)), '0.10054576929549686'));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(((((v0.c0)AND(v0.c0)))AND(v0.c0)), ('a'',r' IN (v0.c0)), '0.10054576929549686')) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (DATETIME(((((v0.c0)AND(v0.c0)))AND(v0.c0)), ('a'',r' IN (v0.c0)), '0.10054576929549686'));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(((((v0.c0)AND(v0.c0)))AND(v0.c0)), ('a'',r' IN (v0.c0)), '0.10054576929549686')) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (DATETIME(((((v0.c0)AND(v0.c0)))AND(v0.c0)), ('a'',r' IN (v0.c0)), '0.10054576929549686'));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((((((((v0.c0) NOT BETWEEN (NULL) AND (rt0.c2)))OR(v0.c0)))OR(MAX(v0.c0, 0.9927538684285214))))AND((rt0.c1 IN ()))))AND(CAST(rt0.c0 AS REAL))))AND(CASE WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END)))AND(rt0.c2))) ORDER BY CASE NULL  WHEN ((rt0.c0)IS(rt0.c2)) THEN (v0.c0 IN (rt0.c0, rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((v0.c0) NOT BETWEEN (NULL) AND (rt0.c2)))OR(v0.c0)))OR(MAX(v0.c0, 0.9927538684285214))))AND((rt0.c1 IN ()))))AND(CAST(rt0.c0 AS REAL))))AND(CASE WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END)))AND(rt0.c2))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE NULL  WHEN ((rt0.c0)IS(rt0.c2)) THEN (v0.c0 IN (rt0.c0, rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((((((((v0.c0) NOT BETWEEN (NULL) AND (rt0.c2)))OR(v0.c0)))OR(MAX(v0.c0, 0.9927538684285214))))AND((rt0.c1 IN ()))))AND(CAST(rt0.c0 AS REAL))))AND(CASE WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END)))AND(rt0.c2))) ORDER BY CASE NULL  WHEN ((rt0.c0)IS(rt0.c2)) THEN (v0.c0 IN (rt0.c0, rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((v0.c0) NOT BETWEEN (NULL) AND (rt0.c2)))OR(v0.c0)))OR(MAX(v0.c0, 0.9927538684285214))))AND((rt0.c1 IN ()))))AND(CAST(rt0.c0 AS REAL))))AND(CASE WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END)))AND(rt0.c2))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE NULL  WHEN ((rt0.c0)IS(rt0.c2)) THEN (v0.c0 IN (rt0.c0, rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((((((((v0.c0) NOT BETWEEN (NULL) AND (rt0.c2)))OR(v0.c0)))OR(MAX(v0.c0, 0.9927538684285214))))AND((rt0.c1 IN ()))))AND(CAST(rt0.c0 AS REAL))))AND(CASE WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END)))AND(rt0.c2))) ORDER BY CASE NULL  WHEN ((rt0.c0)IS(rt0.c2)) THEN (v0.c0 IN (rt0.c0, rt0.c0)) END;
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c1)) BETWEEN (((((v0.c0))>=((rt0.c2))))) AND ((rt0.c1 COLLATE BINARY)))) ORDER BY ((v0.c0) IS TRUE) ASC  NULLS FIRST, (((rt0.c1)) NOT BETWEEN ((((((v0.c0)OR(rt0.c0)))OR(rt0.c2)))) AND ((((rt0.c1)>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((((v0.c0))>=((rt0.c2))))) AND ((rt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c0) IS TRUE) ASC  NULLS FIRST, (((rt0.c1)) NOT BETWEEN ((((((v0.c0)OR(rt0.c0)))OR(rt0.c2)))) AND ((((rt0.c1)>(rt0.c1))))));
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c1)) BETWEEN (((((v0.c0))>=((rt0.c2))))) AND ((rt0.c1 COLLATE BINARY)))) ORDER BY ((v0.c0) IS TRUE) ASC  NULLS FIRST, (((rt0.c1)) NOT BETWEEN ((((((v0.c0)OR(rt0.c0)))OR(rt0.c2)))) AND ((((rt0.c1)>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((((v0.c0))>=((rt0.c2))))) AND ((rt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c0) IS TRUE) ASC  NULLS FIRST, (((rt0.c1)) NOT BETWEEN ((((((v0.c0)OR(rt0.c0)))OR(rt0.c2)))) AND ((((rt0.c1)>(rt0.c1))))));
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c1)) BETWEEN (((((v0.c0))>=((rt0.c2))))) AND ((rt0.c1 COLLATE BINARY)))) ORDER BY ((v0.c0) IS TRUE) ASC  NULLS FIRST, (((rt0.c1)) NOT BETWEEN ((((((v0.c0)OR(rt0.c0)))OR(rt0.c2)))) AND ((((rt0.c1)>(rt0.c1)))));
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC));
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT * FROM v0 WHERE ((((v0.c0)) BETWEEN ((IFNULL(DISTINCT v0.c0, v0.c0))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) ORDER BY ((((0.8793192341325392)OR(x'')))OR(v0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((IFNULL(DISTINCT v0.c0, v0.c0))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY ((((0.8793192341325392)OR(x'')))OR(v0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c0)) BETWEEN ((IFNULL(DISTINCT v0.c0, v0.c0))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) ORDER BY ((((0.8793192341325392)OR(x'')))OR(v0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((IFNULL(DISTINCT v0.c0, v0.c0))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY ((((0.8793192341325392)OR(x'')))OR(v0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c0)) BETWEEN ((IFNULL(DISTINCT v0.c0, v0.c0))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) ORDER BY ((((0.8793192341325392)OR(x'')))OR(v0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c2)||(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2)||(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c2)||(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2)||(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c2)||(rt0.c2)))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE)) IS TRUE)) ORDER BY CAST(CAST(v0.c0 AS BLOB) AS TEXT), ((v0.c0 COLLATE BINARY) IS FALSE) ASC, x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY CAST(CAST(v0.c0 AS BLOB) AS TEXT), ((v0.c0 COLLATE BINARY) IS FALSE) ASC, x'' DESC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE)) IS TRUE)) ORDER BY CAST(CAST(v0.c0 AS BLOB) AS TEXT), ((v0.c0 COLLATE BINARY) IS FALSE) ASC, x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY CAST(CAST(v0.c0 AS BLOB) AS TEXT), ((v0.c0 COLLATE BINARY) IS FALSE) ASC, x'' DESC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE)) IS TRUE)) ORDER BY CAST(CAST(v0.c0 AS BLOB) AS TEXT), ((v0.c0 COLLATE BINARY) IS FALSE) ASC, x'' DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ORDER BY CASE ((NULL)>>(rt0.c0))  WHEN CASE rt0.c0  WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END THEN CHAR(rt0.c0) WHEN rt0.c0 THEN ((rt0.c2)/(rt0.c1)) WHEN x'' THEN ((rt0.c1) BETWEEN (NULL) AND (rt0.c2)) END ASC  NULLS LAST, ((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((NULL)>>(rt0.c0))  WHEN CASE rt0.c0  WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END THEN CHAR(rt0.c0) WHEN rt0.c0 THEN ((rt0.c2)/(rt0.c1)) WHEN x'' THEN ((rt0.c1) BETWEEN (NULL) AND (rt0.c2)) END ASC  NULLS LAST, ((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ORDER BY CASE ((NULL)>>(rt0.c0))  WHEN CASE rt0.c0  WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END THEN CHAR(rt0.c0) WHEN rt0.c0 THEN ((rt0.c2)/(rt0.c1)) WHEN x'' THEN ((rt0.c1) BETWEEN (NULL) AND (rt0.c2)) END ASC  NULLS LAST, ((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((NULL)>>(rt0.c0))  WHEN CASE rt0.c0  WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END THEN CHAR(rt0.c0) WHEN rt0.c0 THEN ((rt0.c2)/(rt0.c1)) WHEN x'' THEN ((rt0.c1) BETWEEN (NULL) AND (rt0.c2)) END ASC  NULLS LAST, ((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ORDER BY CASE ((NULL)>>(rt0.c0))  WHEN CASE rt0.c0  WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END THEN CHAR(rt0.c0) WHEN rt0.c0 THEN ((rt0.c2)/(rt0.c1)) WHEN x'' THEN ((rt0.c1) BETWEEN (NULL) AND (rt0.c2)) END ASC  NULLS LAST, ((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)) COLLATE RTRIM ASC;
SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c1)))AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c1)))AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c1)))AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c1)))AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c1)))AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(rt0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM v0 WHERE (((json(0.4569746463874719)) NOT BETWEEN ((+ (v0.c0))) AND (CAST(v0.c0 AS INTEGER)))) ORDER BY (x'60c1' IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json(0.4569746463874719)) NOT BETWEEN ((+ (v0.c0))) AND (CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 ORDER BY (x'60c1' IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((json(0.4569746463874719)) NOT BETWEEN ((+ (v0.c0))) AND (CAST(v0.c0 AS INTEGER)))) ORDER BY (x'60c1' IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json(0.4569746463874719)) NOT BETWEEN ((+ (v0.c0))) AND (CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 ORDER BY (x'60c1' IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((json(0.4569746463874719)) NOT BETWEEN ((+ (v0.c0))) AND (CAST(v0.c0 AS INTEGER)))) ORDER BY (x'60c1' IN ())  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c2 AS INTEGER))-(((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0))))) ORDER BY (+ (((rt0.c1) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS INTEGER))-(((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (+ (((rt0.c1) NOT NULL))) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c2 AS INTEGER))-(((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0))))) ORDER BY (+ (((rt0.c1) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS INTEGER))-(((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (+ (((rt0.c1) NOT NULL))) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c2 AS INTEGER))-(((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0))))) ORDER BY (+ (((rt0.c1) NOT NULL))) ASC;
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (NULL) AND (rt0.c1)))IS(((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)))) WHERE (((rt0.c2)IS NOT(((((rt0.c0)AND(rt0.c1)))AND(v0.c0))))) ORDER BY ((((rt0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (LIKELIHOOD(rt0.c2, 0.29693050015822686)) AND ((rt0.c0 IN (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS NOT(((((rt0.c0)AND(rt0.c1)))AND(v0.c0))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (NULL) AND (rt0.c1)))IS(((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)))) ORDER BY ((((rt0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (LIKELIHOOD(rt0.c2, 0.29693050015822686)) AND ((rt0.c0 IN (rt0.c0)))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (NULL) AND (rt0.c1)))IS(((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)))) WHERE (((rt0.c2)IS NOT(((((rt0.c0)AND(rt0.c1)))AND(v0.c0))))) ORDER BY ((((rt0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (LIKELIHOOD(rt0.c2, 0.29693050015822686)) AND ((rt0.c0 IN (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS NOT(((((rt0.c0)AND(rt0.c1)))AND(v0.c0))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (NULL) AND (rt0.c1)))IS(((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)))) ORDER BY ((((rt0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (LIKELIHOOD(rt0.c2, 0.29693050015822686)) AND ((rt0.c0 IN (rt0.c0)))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (NULL) AND (rt0.c1)))IS(((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)))) WHERE (((rt0.c2)IS NOT(((((rt0.c0)AND(rt0.c1)))AND(v0.c0))))) ORDER BY ((((rt0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (LIKELIHOOD(rt0.c2, 0.29693050015822686)) AND ((rt0.c0 IN (rt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)IS(rt0.c0)))+((~ (rt0.c1))))) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS(rt0.c0)))+((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY '');
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)IS(rt0.c0)))+((~ (rt0.c1))))) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS(rt0.c0)))+((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY '');
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)IS(rt0.c0)))+((~ (rt0.c1))))) ORDER BY '';
SELECT COUNT(*) FROM v0 WHERE (x'691f' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'691f' COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'691f' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'691f' COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'691f' COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((+ (rt0.c1)))>=(1030447854)));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1)))>=(1030447854))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((+ (rt0.c1)))>=(1030447854)));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1)))>=(1030447854))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((+ (rt0.c1)))>=(1030447854)));
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT NULL));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c1) ORDER BY (((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((CAST(rt0.c0 AS REAL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((CAST(rt0.c0 AS REAL))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c1) ORDER BY (((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((CAST(rt0.c0 AS REAL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((CAST(rt0.c0 AS REAL))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c1) ORDER BY (((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((CAST(rt0.c0 AS REAL))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((x'ccfb')) BETWEEN ((rt0.c1)) AND (('709939715'))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((x'ccfb')) BETWEEN ((rt0.c1)) AND (('709939715'))) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((x'ccfb')) BETWEEN ((rt0.c1)) AND (('709939715'))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((x'ccfb')) BETWEEN ((rt0.c1)) AND (('709939715'))) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((x'ccfb')) BETWEEN ((rt0.c1)) AND (('709939715'))) IN ()));
SELECT * FROM rt0, v0 WHERE (((((((((rt0.c2 COLLATE RTRIM)AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN '' WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 END)))AND((((rt0.c1))=((rt0.c2))))))AND(x'')))AND((NOT (rt0.c0))))) ORDER BY IFNULL(LIKELY(DISTINCT v0.c0), rt0.c1) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2 COLLATE RTRIM)AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN '' WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 END)))AND((((rt0.c1))=((rt0.c2))))))AND(x'')))AND((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY IFNULL(LIKELY(DISTINCT v0.c0), rt0.c1) ASC);
SELECT * FROM rt0, v0 WHERE (((((((((rt0.c2 COLLATE RTRIM)AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN '' WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 END)))AND((((rt0.c1))=((rt0.c2))))))AND(x'')))AND((NOT (rt0.c0))))) ORDER BY IFNULL(LIKELY(DISTINCT v0.c0), rt0.c1) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2 COLLATE RTRIM)AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN '' WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 END)))AND((((rt0.c1))=((rt0.c2))))))AND(x'')))AND((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY IFNULL(LIKELY(DISTINCT v0.c0), rt0.c1) ASC);
SELECT * FROM rt0, v0 WHERE (((((((((rt0.c2 COLLATE RTRIM)AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN '' WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 END)))AND((((rt0.c1))=((rt0.c2))))))AND(x'')))AND((NOT (rt0.c0))))) ORDER BY IFNULL(LIKELY(DISTINCT v0.c0), rt0.c1) ASC;
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT * FROM v0, rt0 WHERE (rt0.c1) ORDER BY (((rt0.c0, rt0.c1, v0.c0)) NOT BETWEEN ((rt0.c2, SQLITE_COMPILEOPTION_USED(rt0.c1), rt0.c1 COLLATE NOCASE)) AND ((NULLIF(rt0.c2, rt0.c0), ((v0.c0)==(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c0, rt0.c1, v0.c0)) NOT BETWEEN ((rt0.c2, SQLITE_COMPILEOPTION_USED(rt0.c1), rt0.c1 COLLATE NOCASE)) AND ((NULLIF(rt0.c2, rt0.c0), ((v0.c0)=(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 END))) ASC);
SELECT * FROM v0, rt0 WHERE (rt0.c1) ORDER BY (((rt0.c0, rt0.c1, v0.c0)) NOT BETWEEN ((rt0.c2, SQLITE_COMPILEOPTION_USED(rt0.c1), rt0.c1 COLLATE NOCASE)) AND ((NULLIF(rt0.c2, rt0.c0), ((v0.c0)==(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c0, rt0.c1, v0.c0)) NOT BETWEEN ((rt0.c2, SQLITE_COMPILEOPTION_USED(rt0.c1), rt0.c1 COLLATE NOCASE)) AND ((NULLIF(rt0.c2, rt0.c0), ((v0.c0)=(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 END))) ASC);
SELECT * FROM v0, rt0 WHERE (rt0.c1) ORDER BY (((rt0.c0, rt0.c1, v0.c0)) NOT BETWEEN ((rt0.c2, SQLITE_COMPILEOPTION_USED(rt0.c1), rt0.c1 COLLATE NOCASE)) AND ((NULLIF(rt0.c2, rt0.c0), ((v0.c0)==(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 END))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) IS FALSE)) ORDER BY (rt0.c0 IN ()) COLLATE BINARY COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 IN ()) COLLATE BINARY COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) IS FALSE)) ORDER BY (rt0.c0 IN ()) COLLATE BINARY COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 IN ()) COLLATE BINARY COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) IS FALSE)) ORDER BY (rt0.c0 IN ()) COLLATE BINARY COLLATE NOCASE DESC;
SELECT * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE NOCASE) ORDER BY ((rt0.c0)>=(rt0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0)>=(rt0.c1)) COLLATE BINARY DESC);
SELECT * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE NOCASE) ORDER BY ((rt0.c0)>=(rt0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0)>=(rt0.c1)) COLLATE BINARY DESC);
SELECT * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE NOCASE) ORDER BY ((rt0.c0)>=(rt0.c1)) COLLATE BINARY DESC;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)&(v0.c0))) ISNULL)) ORDER BY (NOT (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)&(v0.c0))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (NOT (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)&(v0.c0))) ISNULL)) ORDER BY (NOT (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)&(v0.c0))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (NOT (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)&(v0.c0))) ISNULL)) ORDER BY (NOT (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0 IN ()))OR(v0.c0 COLLATE RTRIM)))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ORDER BY (~ (v0.c0));
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))OR(v0.c0 COLLATE RTRIM)))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (~ (v0.c0)));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0 IN ()))OR(v0.c0 COLLATE RTRIM)))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ORDER BY (~ (v0.c0));
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))OR(v0.c0 COLLATE RTRIM)))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (~ (v0.c0)));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0 IN ()))OR(v0.c0 COLLATE RTRIM)))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ORDER BY (~ (v0.c0));
SELECT ALL * FROM rt0, v0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) AS NUMERIC));
SELECT * FROM rt0, v0 WHERE (((((rt0.c2) NOTNULL))<>(v0.c0 COLLATE NOCASE))) ORDER BY (rt0.c0 IN (v0.c0, v0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL))<>(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY (rt0.c0 IN (v0.c0, v0.c0)) COLLATE BINARY);
SELECT * FROM rt0, v0 WHERE (((((rt0.c2) NOTNULL))<>(v0.c0 COLLATE NOCASE))) ORDER BY (rt0.c0 IN (v0.c0, v0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL))<>(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY (rt0.c0 IN (v0.c0, v0.c0)) COLLATE BINARY);
SELECT * FROM rt0, v0 WHERE (((((rt0.c2) NOTNULL))<>(v0.c0 COLLATE NOCASE))) ORDER BY (rt0.c0 IN (v0.c0, v0.c0)) COLLATE BINARY;
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))*(ABS(rt0.c0)))) ORDER BY (((rt0.c2)) BETWEEN ((((rt0.c1)AND(rt0.c0)))) AND ((((rt0.c2)+(v0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))*(ABS(rt0.c0)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c2)) BETWEEN ((((rt0.c1)AND(rt0.c0)))) AND ((((rt0.c2)+(v0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))*(ABS(rt0.c0)))) ORDER BY (((rt0.c2)) BETWEEN ((((rt0.c1)AND(rt0.c0)))) AND ((((rt0.c2)+(v0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))*(ABS(rt0.c0)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c2)) BETWEEN ((((rt0.c1)AND(rt0.c0)))) AND ((((rt0.c2)+(v0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))*(ABS(rt0.c0)))) ORDER BY (((rt0.c2)) BETWEEN ((((rt0.c1)AND(rt0.c0)))) AND ((((rt0.c2)+(v0.c0))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0) IS TRUE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0) IS TRUE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0) IS TRUE)) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKELY(rt0.c1)) BETWEEN ((~ (rt0.c2))) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt0.c1)) BETWEEN ((~ (rt0.c2))) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKELY(rt0.c1)) BETWEEN ((~ (rt0.c2))) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt0.c1)) BETWEEN ((~ (rt0.c2))) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKELY(rt0.c1)) BETWEEN ((~ (rt0.c2))) AND (rt0.c2 COLLATE NOCASE)));
SELECT * FROM v0, rt0 WHERE (CAST(CASE WHEN v0.c0 THEN rt0.c2 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c0 THEN rt0.c2 END AS BLOB)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CAST(CASE WHEN v0.c0 THEN rt0.c2 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c0 THEN rt0.c2 END AS BLOB)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CAST(CASE WHEN v0.c0 THEN rt0.c2 END AS BLOB));
SELECT * FROM rt0, v0 WHERE (((((rt0.c1) NOT NULL))IS NOT(UPPER(rt0.c1)))) ORDER BY ((((v0.c0) IS FALSE)) BETWEEN (((((rt0.c0)AND(rt0.c0)))OR(v0.c0))) AND (((((rt0.c2)OR(0.5739224732261601)))AND(rt0.c0)))) ASC  NULLS LAST, CAST(((rt0.c0) IS FALSE) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))IS NOT(UPPER(rt0.c1)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0) IS FALSE)) BETWEEN (((((rt0.c0)AND(rt0.c0)))OR(v0.c0))) AND (((((rt0.c2)OR(0.5739224732261601)))AND(rt0.c0)))) ASC  NULLS LAST, CAST(((rt0.c0) IS FALSE) AS INTEGER));
SELECT * FROM rt0, v0 WHERE (((((rt0.c1) NOT NULL))IS NOT(UPPER(rt0.c1)))) ORDER BY ((((v0.c0) IS FALSE)) BETWEEN (((((rt0.c0)AND(rt0.c0)))OR(v0.c0))) AND (((((rt0.c2)OR(0.5739224732261601)))AND(rt0.c0)))) ASC  NULLS LAST, CAST(((rt0.c0) IS FALSE) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))IS NOT(UPPER(rt0.c1)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0) IS FALSE)) BETWEEN (((((rt0.c0)AND(rt0.c0)))OR(v0.c0))) AND (((((rt0.c2)OR(0.5739224732261601)))AND(rt0.c0)))) ASC  NULLS LAST, CAST(((rt0.c0) IS FALSE) AS INTEGER));
SELECT * FROM rt0, v0 WHERE (((((rt0.c1) NOT NULL))IS NOT(UPPER(rt0.c1)))) ORDER BY ((((v0.c0) IS FALSE)) BETWEEN (((((rt0.c0)AND(rt0.c0)))OR(v0.c0))) AND (((((rt0.c2)OR(0.5739224732261601)))AND(rt0.c0)))) ASC  NULLS LAST, CAST(((rt0.c0) IS FALSE) AS INTEGER);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((NULL)) AND (((v0.c0 IN (v0.c0)))))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((NULL)) AND (((v0.c0 IN (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((NULL)) AND (((v0.c0 IN (v0.c0)))))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((NULL)) AND (((v0.c0 IN (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((NULL)) AND (((v0.c0 IN (v0.c0)))))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((NOT (v0.c0))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (json_remove(v0.c0, v0.c0, rt0.c0, rt0.c0)))) ORDER BY x'', CASE CAST(v0.c0 AS TEXT)  WHEN (rt0.c1 IN (rt0.c1)) THEN (rt0.c1 IN ()) END  NULLS FIRST, (+ (((rt0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (json_remove(v0.c0, v0.c0, rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0, v0 ORDER BY x'', CASE CAST(v0.c0 AS TEXT)  WHEN (rt0.c1 IN (rt0.c1)) THEN (rt0.c1 IN ()) END  NULLS FIRST, (+ (((rt0.c0) NOTNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((NOT (v0.c0))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (json_remove(v0.c0, v0.c0, rt0.c0, rt0.c0)))) ORDER BY x'', CASE CAST(v0.c0 AS TEXT)  WHEN (rt0.c1 IN (rt0.c1)) THEN (rt0.c1 IN ()) END  NULLS FIRST, (+ (((rt0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (json_remove(v0.c0, v0.c0, rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0, v0 ORDER BY x'', CASE CAST(v0.c0 AS TEXT)  WHEN (rt0.c1 IN (rt0.c1)) THEN (rt0.c1 IN ()) END  NULLS FIRST, (+ (((rt0.c0) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((('\ne') NOT BETWEEN ((- (v0.c0))) AND (CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((('\ne') NOT BETWEEN ((- (v0.c0))) AND (CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((('\ne') NOT BETWEEN ((- (v0.c0))) AND (CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((('\ne') NOT BETWEEN ((- (v0.c0))) AND (CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((('\ne') NOT BETWEEN ((- (v0.c0))) AND (CAST(v0.c0 AS INTEGER))));
SELECT ALL * FROM v0 WHERE (TRIM(v0.c0) COLLATE BINARY) ORDER BY ((((((v0.c0) NOT NULL))AND(((x'2f39')<(v0.c0)))))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ((TRIM(v0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) NOT NULL))AND(((x'2f39')<(v0.c0)))))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))));
SELECT ALL * FROM v0 WHERE (TRIM(v0.c0) COLLATE BINARY) ORDER BY ((((((v0.c0) NOT NULL))AND(((x'2f39')<(v0.c0)))))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ((TRIM(v0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) NOT NULL))AND(((x'2f39')<(v0.c0)))))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))));
SELECT ALL * FROM v0 WHERE (TRIM(v0.c0) COLLATE BINARY) ORDER BY ((((((v0.c0) NOT NULL))AND(((x'2f39')<(v0.c0)))))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))))>((rt0.c0)))) ORDER BY (- (rt0.c1)) COLLATE BINARY  NULLS FIRST, (((rt0.c1)<<(rt0.c0)) IN ()) ASC  NULLS LAST, (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))))>((rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c1)) COLLATE BINARY  NULLS FIRST, (((rt0.c1)<<(rt0.c0)) IN ()) ASC  NULLS LAST, (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))))>((rt0.c0)))) ORDER BY (- (rt0.c1)) COLLATE BINARY  NULLS FIRST, (((rt0.c1)<<(rt0.c0)) IN ()) ASC  NULLS LAST, (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))))>((rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c1)) COLLATE BINARY  NULLS FIRST, (((rt0.c1)<<(rt0.c0)) IN ()) ASC  NULLS LAST, (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))))>((rt0.c0)))) ORDER BY (- (rt0.c1)) COLLATE BINARY  NULLS FIRST, (((rt0.c1)<<(rt0.c0)) IN ()) ASC  NULLS LAST, (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 NOT INDEXED WHERE ((((((v0.c0)<=(v0.c0)), CAST(v0.c0 AS REAL), x''))<((CAST(v0.c0 AS TEXT), ((v0.c0)*(0.5470619229035435)), (v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)<=(v0.c0)), CAST(v0.c0 AS REAL), x''))<((CAST(v0.c0 AS TEXT), ((v0.c0)*(0.5470619229035435)), (v0.c0 IN ()))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED WHERE ((((((v0.c0)<=(v0.c0)), CAST(v0.c0 AS REAL), x''))<((CAST(v0.c0 AS TEXT), ((v0.c0)*(0.5470619229035435)), (v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)<=(v0.c0)), CAST(v0.c0 AS REAL), x''))<((CAST(v0.c0 AS TEXT), ((v0.c0)*(0.5470619229035435)), (v0.c0 IN ()))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED WHERE ((((((v0.c0)<=(v0.c0)), CAST(v0.c0 AS REAL), x''))<((CAST(v0.c0 AS TEXT), ((v0.c0)*(0.5470619229035435)), (v0.c0 IN ())))));
SELECT ALL * FROM v0 WHERE ((- (((v0.c0)|(v0.c0))))) ORDER BY ((v0.c0 COLLATE NOCASE) NOT BETWEEN (((v0.c0) ISNULL)) AND (((v0.c0)<(v0.c0)))), (NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0)|(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE NOCASE) NOT BETWEEN (((v0.c0) ISNULL)) AND (((v0.c0)<(v0.c0)))), (NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE ((- (((v0.c0)|(v0.c0))))) ORDER BY ((v0.c0 COLLATE NOCASE) NOT BETWEEN (((v0.c0) ISNULL)) AND (((v0.c0)<(v0.c0)))), (NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0)|(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE NOCASE) NOT BETWEEN (((v0.c0) ISNULL)) AND (((v0.c0)<(v0.c0)))), (NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE ((- (((v0.c0)|(v0.c0))))) ORDER BY ((v0.c0 COLLATE NOCASE) NOT BETWEEN (((v0.c0) ISNULL)) AND (((v0.c0)<(v0.c0)))), (NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (LTRIM(CAST(v0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((LTRIM(CAST(v0.c0 AS INTEGER))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (LTRIM(CAST(v0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((LTRIM(CAST(v0.c0 AS INTEGER))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (LTRIM(CAST(v0.c0 AS INTEGER)));
SELECT ALL * FROM v0 WHERE (LIKELY(v0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(v0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LIKELY(v0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(v0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LIKELY(v0.c0) COLLATE BINARY);
SELECT ALL * FROM v0, rt0 WHERE (x'9780' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((x'9780' COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (x'9780' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((x'9780' COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (x'9780' COLLATE RTRIM);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((((((rt0.c1)OR(rt0.c0)))AND(v0.c0)))LIKE((('eWF橚L')>=(rt0.c2)))) WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE '156034467' END) AND (UPPER(DISTINCT '-655302804')))) ORDER BY ((NULL)<=(((x'')<=(rt0.c0)))) DESC, ((((rt0.c0) NOT NULL))>(CASE rt0.c0  WHEN '156034467' THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE '156034467' END) AND (UPPER(DISTINCT '-655302804')))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((((rt0.c1)OR(rt0.c0)))AND(v0.c0)))LIKE((('eWF橚L')>=(rt0.c2)))) ORDER BY ((NULL)<=(((x'')<=(rt0.c0)))) DESC, ((((rt0.c0) NOT NULL))>(CASE rt0.c0  WHEN '156034467' THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((((((rt0.c1)OR(rt0.c0)))AND(v0.c0)))LIKE((('eWF橚L')>=(rt0.c2)))) WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE '156034467' END) AND (UPPER(DISTINCT '-655302804')))) ORDER BY ((NULL)<=(((x'')<=(rt0.c0)))) DESC, ((((rt0.c0) NOT NULL))>(CASE rt0.c0  WHEN '156034467' THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE '156034467' END) AND (UPPER(DISTINCT '-655302804')))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((((rt0.c1)OR(rt0.c0)))AND(v0.c0)))LIKE((('eWF橚L')>=(rt0.c2)))) ORDER BY ((NULL)<=(((x'')<=(rt0.c0)))) DESC, ((((rt0.c0) NOT NULL))>(CASE rt0.c0  WHEN '156034467' THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((((((rt0.c1)OR(rt0.c0)))AND(v0.c0)))LIKE((('eWF橚L')>=(rt0.c2)))) WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE '156034467' END) AND (UPPER(DISTINCT '-655302804')))) ORDER BY ((NULL)<=(((x'')<=(rt0.c0)))) DESC, ((((rt0.c0) NOT NULL))>(CASE rt0.c0  WHEN '156034467' THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END));
SELECT * FROM v0 WHERE (CAST((+ (v0.c0)) AS NUMERIC)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY x'');
SELECT * FROM v0 WHERE (CAST((+ (v0.c0)) AS NUMERIC)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY x'');
SELECT * FROM v0 WHERE (CAST((+ (v0.c0)) AS NUMERIC)) ORDER BY x'';
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)>=(((NULL)-(rt0.c2))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)>=(((NULL)-(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY x'');
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)>=(((NULL)-(rt0.c2))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)>=(((NULL)-(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY x'');
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)>=(((NULL)-(rt0.c2))))) ORDER BY x'';
SELECT COUNT(*) FROM rt0 WHERE (((('H,t' IN (rt0.c2, rt0.c0))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (0.31364990211695953))) ORDER BY (~ (CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((((('H,t' IN (rt0.c2, rt0.c0))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (0.31364990211695953))) IS TRUE)  as count FROM rt0 ORDER BY (~ (CAST(rt0.c1 AS BLOB))));
SELECT COUNT(*) FROM rt0 WHERE (((('H,t' IN (rt0.c2, rt0.c0))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (0.31364990211695953))) ORDER BY (~ (CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((((('H,t' IN (rt0.c2, rt0.c0))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (0.31364990211695953))) IS TRUE)  as count FROM rt0 ORDER BY (~ (CAST(rt0.c1 AS BLOB))));
SELECT COUNT(*) FROM rt0 WHERE (((('H,t' IN (rt0.c2, rt0.c0))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (0.31364990211695953))) ORDER BY (~ (CAST(rt0.c1 AS BLOB)));
SELECT ALL * FROM v0, rt0 WHERE ((x'8afa' IN ())) ORDER BY ((rt0.c2 COLLATE BINARY)!=((rt0.c2 IN (v0.c0, rt0.c2)))) DESC  NULLS FIRST, '2wcP' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'8afa' IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c2 COLLATE BINARY)<>((rt0.c2 IN (v0.c0, rt0.c2)))) DESC  NULLS FIRST, '2wcP' ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE ((x'8afa' IN ())) ORDER BY ((rt0.c2 COLLATE BINARY)!=((rt0.c2 IN (v0.c0, rt0.c2)))) DESC  NULLS FIRST, '2wcP' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'8afa' IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c2 COLLATE BINARY)<>((rt0.c2 IN (v0.c0, rt0.c2)))) DESC  NULLS FIRST, '2wcP' ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE ((x'8afa' IN ())) ORDER BY ((rt0.c2 COLLATE BINARY)!=((rt0.c2 IN (v0.c0, rt0.c2)))) DESC  NULLS FIRST, '2wcP' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((LAST_INSERT_ROWID(), SQLITE_COMPILEOPTION_GET(v0.c0), CAST(v0.c0 AS REAL)))==((SQLITE_COMPILEOPTION_USED(v0.c0), ((v0.c0)IS NOT(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 END)))) ORDER BY CAST(v0.c0 AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((LAST_INSERT_ROWID(), SQLITE_COMPILEOPTION_GET(v0.c0), CAST(v0.c0 AS REAL)))=((SQLITE_COMPILEOPTION_USED(v0.c0), ((v0.c0)IS NOT(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS INTEGER) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((LAST_INSERT_ROWID(), SQLITE_COMPILEOPTION_GET(v0.c0), CAST(v0.c0 AS REAL)))==((SQLITE_COMPILEOPTION_USED(v0.c0), ((v0.c0)IS NOT(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 END)))) ORDER BY CAST(v0.c0 AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((LAST_INSERT_ROWID(), SQLITE_COMPILEOPTION_GET(v0.c0), CAST(v0.c0 AS REAL)))=((SQLITE_COMPILEOPTION_USED(v0.c0), ((v0.c0)IS NOT(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS INTEGER) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((LAST_INSERT_ROWID(), SQLITE_COMPILEOPTION_GET(v0.c0), CAST(v0.c0 AS REAL)))==((SQLITE_COMPILEOPTION_USED(v0.c0), ((v0.c0)IS NOT(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 END)))) ORDER BY CAST(v0.c0 AS INTEGER) DESC  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (CASE CASE WHEN 0.9978653775227562 THEN v0.c0 ELSE v0.c0 END  WHEN ((rt0.c2)<(rt0.c2)) THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN 0.9978653775227562 THEN v0.c0 ELSE v0.c0 END  WHEN ((rt0.c2)<(rt0.c2)) THEN rt0.c2 END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CASE CASE WHEN 0.9978653775227562 THEN v0.c0 ELSE v0.c0 END  WHEN ((rt0.c2)<(rt0.c2)) THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN 0.9978653775227562 THEN v0.c0 ELSE v0.c0 END  WHEN ((rt0.c2)<(rt0.c2)) THEN rt0.c2 END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CASE CASE WHEN 0.9978653775227562 THEN v0.c0 ELSE v0.c0 END  WHEN ((rt0.c2)<(rt0.c2)) THEN rt0.c2 END);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE ((rt0.c1)AND(rt0.c1))  WHEN ((v0.c0)/(rt0.c0)) THEN rt0.c0 ELSE CASE rt0.c1  WHEN '|V' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN x'' END END) ORDER BY (((((x'4fd8')LIKE(rt0.c1)), (rt0.c2 IN ()), rt0.c0))>((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)), (((rt0.c0, rt0.c2, rt0.c1))>=((rt0.c0, v0.c0, v0.c0))), (- (v0.c0)))))  NULLS LAST, (((rt0.c1) IS FALSE) IN ((- ('[V')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1)AND(rt0.c1))  WHEN ((v0.c0)/(rt0.c0)) THEN rt0.c0 ELSE CASE rt0.c1  WHEN '|V' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN x'' END END) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((x'4fd8')LIKE(rt0.c1)), (rt0.c2 IN ()), rt0.c0))>((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)), (((rt0.c0, rt0.c2, rt0.c1))>=((rt0.c0, v0.c0, v0.c0))), (- (v0.c0)))))  NULLS LAST, (((rt0.c1) IS FALSE) IN ((- ('[V')))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE ((rt0.c1)AND(rt0.c1))  WHEN ((v0.c0)/(rt0.c0)) THEN rt0.c0 ELSE CASE rt0.c1  WHEN '|V' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN x'' END END) ORDER BY (((((x'4fd8')LIKE(rt0.c1)), (rt0.c2 IN ()), rt0.c0))>((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)), (((rt0.c0, rt0.c2, rt0.c1))>=((rt0.c0, v0.c0, v0.c0))), (- (v0.c0)))))  NULLS LAST, (((rt0.c1) IS FALSE) IN ((- ('[V')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1)AND(rt0.c1))  WHEN ((v0.c0)/(rt0.c0)) THEN rt0.c0 ELSE CASE rt0.c1  WHEN '|V' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN x'' END END) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((x'4fd8')LIKE(rt0.c1)), (rt0.c2 IN ()), rt0.c0))>((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)), (((rt0.c0, rt0.c2, rt0.c1))>=((rt0.c0, v0.c0, v0.c0))), (- (v0.c0)))))  NULLS LAST, (((rt0.c1) IS FALSE) IN ((- ('[V')))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE ((rt0.c1)AND(rt0.c1))  WHEN ((v0.c0)/(rt0.c0)) THEN rt0.c0 ELSE CASE rt0.c1  WHEN '|V' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN x'' END END) ORDER BY (((((x'4fd8')LIKE(rt0.c1)), (rt0.c2 IN ()), rt0.c0))>((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)), (((rt0.c0, rt0.c2, rt0.c1))>=((rt0.c0, v0.c0, v0.c0))), (- (v0.c0)))))  NULLS LAST, (((rt0.c1) IS FALSE) IN ((- ('[V')))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 INNER JOIN v0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) THEN ((((rt0.c0)AND(v0.c0)))OR(rt0.c1)) END WHERE (((rt0.c1)&(rt0.c2)) COLLATE BINARY) ORDER BY CASE WHEN 0Xffffffffea1402aa THEN CAST(rt0.c0 AS REAL) END;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)&(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) THEN ((((rt0.c0)AND(v0.c0)))OR(rt0.c1)) END ORDER BY CASE WHEN 0Xffffffffea1402aa THEN CAST(rt0.c0 AS REAL) END);
SELECT ALL * FROM rt0 INNER JOIN v0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) THEN ((((rt0.c0)AND(v0.c0)))OR(rt0.c1)) END WHERE (((rt0.c1)&(rt0.c2)) COLLATE BINARY) ORDER BY CASE WHEN 0Xffffffffea1402aa THEN CAST(rt0.c0 AS REAL) END;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)&(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) THEN ((((rt0.c0)AND(v0.c0)))OR(rt0.c1)) END ORDER BY CASE WHEN 0Xffffffffea1402aa THEN CAST(rt0.c0 AS REAL) END);
SELECT ALL * FROM rt0 INNER JOIN v0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) THEN ((((rt0.c0)AND(v0.c0)))OR(rt0.c1)) END WHERE (((rt0.c1)&(rt0.c2)) COLLATE BINARY) ORDER BY CASE WHEN 0Xffffffffea1402aa THEN CAST(rt0.c0 AS REAL) END;
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c1) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, v0 ORDER BY NULL);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c1) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, v0 ORDER BY NULL);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c1) ORDER BY NULL;
SELECT ALL * FROM rt0 WHERE (CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END THEN (rt0.c0 IN ()) WHEN ((rt0.c0)<=(rt0.c0)) THEN ((rt0.c1)OR(rt0.c0)) WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c2 AS TEXT) WHEN ((rt0.c2)IS NOT(rt0.c1)) THEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c1))) WHEN ((rt0.c2)LIKE(rt0.c1)) THEN LOWER(DISTINCT rt0.c1) END) ORDER BY ((((rt0.c0)GLOB(rt0.c2)))AND(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END THEN (rt0.c0 IN ()) WHEN ((rt0.c0)<=(rt0.c0)) THEN ((rt0.c1)OR(rt0.c0)) WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c2 AS TEXT) WHEN ((rt0.c2)IS NOT(rt0.c1)) THEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c1))) WHEN ((rt0.c2)LIKE(rt0.c1)) THEN LOWER(DISTINCT rt0.c1) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)GLOB(rt0.c2)))AND(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END THEN (rt0.c0 IN ()) WHEN ((rt0.c0)<=(rt0.c0)) THEN ((rt0.c1)OR(rt0.c0)) WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c2 AS TEXT) WHEN ((rt0.c2)IS NOT(rt0.c1)) THEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c1))) WHEN ((rt0.c2)LIKE(rt0.c1)) THEN LOWER(DISTINCT rt0.c1) END) ORDER BY ((((rt0.c0)GLOB(rt0.c2)))AND(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END THEN (rt0.c0 IN ()) WHEN ((rt0.c0)<=(rt0.c0)) THEN ((rt0.c1)OR(rt0.c0)) WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c2 AS TEXT) WHEN ((rt0.c2)IS NOT(rt0.c1)) THEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c1))) WHEN ((rt0.c2)LIKE(rt0.c1)) THEN LOWER(DISTINCT rt0.c1) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)GLOB(rt0.c2)))AND(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END THEN (rt0.c0 IN ()) WHEN ((rt0.c0)<=(rt0.c0)) THEN ((rt0.c1)OR(rt0.c0)) WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c2 AS TEXT) WHEN ((rt0.c2)IS NOT(rt0.c1)) THEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c1))) WHEN ((rt0.c2)LIKE(rt0.c1)) THEN LOWER(DISTINCT rt0.c1) END) ORDER BY ((((rt0.c0)GLOB(rt0.c2)))AND(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2))));
SELECT * FROM v0 WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS REAL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS REAL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS REAL));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((((rt0.c2)*(rt0.c2)))) AND (((((rt0.c1))=((v0.c0))))))) ORDER BY ((((((rt0.c1)AND(v0.c0)))AND(v0.c0)))<(((rt0.c1)OR(-8.95313659E8))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((rt0.c2)*(rt0.c2)))) AND (((((rt0.c1))=((v0.c0))))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((rt0.c1)AND(v0.c0)))AND(v0.c0)))<(((rt0.c1)OR(-8.95313659E8))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((((rt0.c2)*(rt0.c2)))) AND (((((rt0.c1))=((v0.c0))))))) ORDER BY ((((((rt0.c1)AND(v0.c0)))AND(v0.c0)))<(((rt0.c1)OR(-8.95313659E8))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((rt0.c2)*(rt0.c2)))) AND (((((rt0.c1))=((v0.c0))))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((rt0.c1)AND(v0.c0)))AND(v0.c0)))<(((rt0.c1)OR(-8.95313659E8))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((((rt0.c2)*(rt0.c2)))) AND (((((rt0.c1))=((v0.c0))))))) ORDER BY ((((((rt0.c1)AND(v0.c0)))AND(v0.c0)))<(((rt0.c1)OR(-8.95313659E8))))  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE ((((v0.c0)) NOT BETWEEN ((NULL)) AND ((((v0.c0) BETWEEN (rt0.c2) AND (v0.c0)))))) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((NULL)) AND ((((v0.c0) BETWEEN (rt0.c2) AND (v0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((v0.c0)) NOT BETWEEN ((NULL)) AND ((((v0.c0) BETWEEN (rt0.c2) AND (v0.c0)))))) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((NULL)) AND ((((v0.c0) BETWEEN (rt0.c2) AND (v0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((v0.c0)) NOT BETWEEN ((NULL)) AND ((((v0.c0) BETWEEN (rt0.c2) AND (v0.c0)))))) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (CAST((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c2, '1612080120', rt0.c1))) AS TEXT)) ORDER BY TYPEOF(((v0.c0)||(rt0.c1)))  NULLS FIRST, (CAST(rt0.c0 AS NUMERIC) IN (0Xffffffffd3d782f4, ((rt0.c1)IS(rt0.c1)), x'')) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c2, '1612080120', rt0.c1))) AS TEXT)) IS TRUE)  as count FROM rt0, v0 ORDER BY TYPEOF(((v0.c0)||(rt0.c1)))  NULLS FIRST, (CAST(rt0.c0 AS NUMERIC) IN (0Xffffffffd3d782f4, ((rt0.c1)IS(rt0.c1)), x'')) DESC);
SELECT ALL * FROM rt0, v0 WHERE (CAST((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c2, '1612080120', rt0.c1))) AS TEXT)) ORDER BY TYPEOF(((v0.c0)||(rt0.c1)))  NULLS FIRST, (CAST(rt0.c0 AS NUMERIC) IN (0Xffffffffd3d782f4, ((rt0.c1)IS(rt0.c1)), x'')) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c2, '1612080120', rt0.c1))) AS TEXT)) IS TRUE)  as count FROM rt0, v0 ORDER BY TYPEOF(((v0.c0)||(rt0.c1)))  NULLS FIRST, (CAST(rt0.c0 AS NUMERIC) IN (0Xffffffffd3d782f4, ((rt0.c1)IS(rt0.c1)), x'')) DESC);
SELECT ALL * FROM rt0, v0 WHERE (CAST((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c2, '1612080120', rt0.c1))) AS TEXT)) ORDER BY TYPEOF(((v0.c0)||(rt0.c1)))  NULLS FIRST, (CAST(rt0.c0 AS NUMERIC) IN (0Xffffffffd3d782f4, ((rt0.c1)IS(rt0.c1)), x'')) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2, rt0.c2)))<<(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))))) ORDER BY (+ (((rt0.c1) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c2, rt0.c2)))<<(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c1) NOT NULL))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2, rt0.c2)))<<(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))))) ORDER BY (+ (((rt0.c1) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c2, rt0.c2)))<<(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c1) NOT NULL))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2, rt0.c2)))<<(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))))) ORDER BY (+ (((rt0.c1) NOT NULL))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (((TRIM(DISTINCT v0.c0))<=(((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ORDER BY (((v0.c0, 0.5111740615652307, v0.c0)) BETWEEN ((((v0.c0)&(v0.c0)), (+ (v0.c0)), NULL)) AND ((TYPEOF(v0.c0), v0.c0, CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))), ((((CAST(v0.c0 AS INTEGER))AND(TYPEOF(DISTINCT v0.c0))))OR(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT v0.c0))<=(((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, 0.5111740615652307, v0.c0)) BETWEEN ((((v0.c0)&(v0.c0)), (+ (v0.c0)), NULL)) AND ((TYPEOF(v0.c0), v0.c0, CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))), ((((CAST(v0.c0 AS INTEGER))AND(TYPEOF(DISTINCT v0.c0))))OR(NULL)) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((TRIM(DISTINCT v0.c0))<=(((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ORDER BY (((v0.c0, 0.5111740615652307, v0.c0)) BETWEEN ((((v0.c0)&(v0.c0)), (+ (v0.c0)), NULL)) AND ((TYPEOF(v0.c0), v0.c0, CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))), ((((CAST(v0.c0 AS INTEGER))AND(TYPEOF(DISTINCT v0.c0))))OR(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT v0.c0))<=(((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, 0.5111740615652307, v0.c0)) BETWEEN ((((v0.c0)&(v0.c0)), (+ (v0.c0)), NULL)) AND ((TYPEOF(v0.c0), v0.c0, CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))), ((((CAST(v0.c0 AS INTEGER))AND(TYPEOF(DISTINCT v0.c0))))OR(NULL)) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((TRIM(DISTINCT v0.c0))<=(((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ORDER BY (((v0.c0, 0.5111740615652307, v0.c0)) BETWEEN ((((v0.c0)&(v0.c0)), (+ (v0.c0)), NULL)) AND ((TYPEOF(v0.c0), v0.c0, CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))), ((((CAST(v0.c0 AS INTEGER))AND(TYPEOF(DISTINCT v0.c0))))OR(NULL)) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(x'916b4800')))AND(v0.c0))))<=((((v0.c0)|(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(x'916b4800')))AND(v0.c0))))<=((((v0.c0)|(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(x'916b4800')))AND(v0.c0))))<=((((v0.c0)|(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(x'916b4800')))AND(v0.c0))))<=((((v0.c0)|(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(x'916b4800')))AND(v0.c0))))<=((((v0.c0)|(v0.c0))))));
SELECT ALL COUNT(*) FROM v0 WHERE (TYPEOF(DISTINCT CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) ORDER BY ((((v0.c0) NOT BETWEEN (x'') AND (v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0)))) AND (((v0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (x'') AND (v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0)))) AND (((v0.c0) NOTNULL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (TYPEOF(DISTINCT CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) ORDER BY ((((v0.c0) NOT BETWEEN (x'') AND (v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0)))) AND (((v0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (x'') AND (v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0)))) AND (((v0.c0) NOTNULL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (TYPEOF(DISTINCT CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) ORDER BY ((((v0.c0) NOT BETWEEN (x'') AND (v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0)))) AND (((v0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (x'') ORDER BY ((CAST(rt0.c1 AS REAL)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, rt0 ORDER BY ((CAST(rt0.c1 AS REAL)) NOTNULL) DESC);
SELECT ALL * FROM v0, rt0 WHERE (x'') ORDER BY ((CAST(rt0.c1 AS REAL)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, rt0 ORDER BY ((CAST(rt0.c1 AS REAL)) NOTNULL) DESC);
SELECT ALL * FROM v0, rt0 WHERE (x'') ORDER BY ((CAST(rt0.c1 AS REAL)) NOTNULL) DESC;
SELECT ALL * FROM v0 WHERE (0.8843087978705307 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((0.8843087978705307 COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.8843087978705307 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((0.8843087978705307 COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.8843087978705307 COLLATE NOCASE);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN (816629142) AND ((- ('1100958438'))))) ORDER BY (((v0.c0 IN ())) NOT BETWEEN (CASE 'sU'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (0x2b51baf0)), 0.4335446280959796 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) NOT BETWEEN (816629142) AND ((- ('1100958438'))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) NOT BETWEEN (CASE 'sU'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (0x2b51baf0)), 0.4335446280959796 DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN (816629142) AND ((- ('1100958438'))))) ORDER BY (((v0.c0 IN ())) NOT BETWEEN (CASE 'sU'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (0x2b51baf0)), 0.4335446280959796 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) NOT BETWEEN (816629142) AND ((- ('1100958438'))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) NOT BETWEEN (CASE 'sU'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (0x2b51baf0)), 0.4335446280959796 DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN (816629142) AND ((- ('1100958438'))))) ORDER BY (((v0.c0 IN ())) NOT BETWEEN (CASE 'sU'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (0x2b51baf0)), 0.4335446280959796 DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((ABS('-1691074'))AND((rt0.c2 IN ()))) WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))=(v0.c0))) ORDER BY CAST(JULIANDAY(rt0.c0, rt0.c2, rt0.c0) AS NUMERIC) DESC, (((((v0.c0)AND(rt0.c1)))AND(v0.c0)) IN (0.6427527923877472)) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))=(v0.c0))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((ABS('-1691074'))AND((rt0.c2 IN ()))) ORDER BY CAST(JULIANDAY(rt0.c0, rt0.c2, rt0.c0) AS NUMERIC) DESC, (((((v0.c0)AND(rt0.c1)))AND(v0.c0)) IN (0.6427527923877472)) DESC);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((ABS('-1691074'))AND((rt0.c2 IN ()))) WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))=(v0.c0))) ORDER BY CAST(JULIANDAY(rt0.c0, rt0.c2, rt0.c0) AS NUMERIC) DESC, (((((v0.c0)AND(rt0.c1)))AND(v0.c0)) IN (0.6427527923877472)) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))=(v0.c0))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((ABS('-1691074'))AND((rt0.c2 IN ()))) ORDER BY CAST(JULIANDAY(rt0.c0, rt0.c2, rt0.c0) AS NUMERIC) DESC, (((((v0.c0)AND(rt0.c1)))AND(v0.c0)) IN (0.6427527923877472)) DESC);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((ABS('-1691074'))AND((rt0.c2 IN ()))) WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))=(v0.c0))) ORDER BY CAST(JULIANDAY(rt0.c0, rt0.c2, rt0.c0) AS NUMERIC) DESC, (((((v0.c0)AND(rt0.c1)))AND(v0.c0)) IN (0.6427527923877472)) DESC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c2 IN (v0.c0, v0.c0)))OR(((v0.c0) IS FALSE))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2 IN (v0.c0, v0.c0)))OR(((v0.c0) IS FALSE))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c2 IN (v0.c0, v0.c0)))OR(((v0.c0) IS FALSE))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2 IN (v0.c0, v0.c0)))OR(((v0.c0) IS FALSE))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c2 IN (v0.c0, v0.c0)))OR(((v0.c0) IS FALSE))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON rt0.c1 WHERE ((((rt0.c0, rt0.c2, v0.c0)) NOT BETWEEN (((rt0.c1 IN (rt0.c1, rt0.c1)), ((v0.c0)AND(rt0.c2)), CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END)) AND ((UNLIKELY(DISTINCT rt0.c1), (~ (x'')), CAST(rt0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c2, v0.c0)) NOT BETWEEN (((rt0.c1 IN (rt0.c1, rt0.c1)), ((v0.c0)AND(rt0.c2)), CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END)) AND ((UNLIKELY(DISTINCT rt0.c1), (~ (x'')), CAST(rt0.c0 AS REAL))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON rt0.c1);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON rt0.c1 WHERE ((((rt0.c0, rt0.c2, v0.c0)) NOT BETWEEN (((rt0.c1 IN (rt0.c1, rt0.c1)), ((v0.c0)AND(rt0.c2)), CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END)) AND ((UNLIKELY(DISTINCT rt0.c1), (~ (x'')), CAST(rt0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c2, v0.c0)) NOT BETWEEN (((rt0.c1 IN (rt0.c1, rt0.c1)), ((v0.c0)AND(rt0.c2)), CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END)) AND ((UNLIKELY(DISTINCT rt0.c1), (~ (x'')), CAST(rt0.c0 AS REAL))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON rt0.c1);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON rt0.c1 WHERE ((((rt0.c0, rt0.c2, v0.c0)) NOT BETWEEN (((rt0.c1 IN (rt0.c1, rt0.c1)), ((v0.c0)AND(rt0.c2)), CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END)) AND ((UNLIKELY(DISTINCT rt0.c1), (~ (x'')), CAST(rt0.c0 AS REAL)))));
SELECT * FROM v0 WHERE (((((((v0.c0, v0.c0, v0.c0, 0x570b5de3, v0.c0))<>((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))))<((UNLIKELY(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0, v0.c0, v0.c0, 0x570b5de3, v0.c0))!=((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))))<((UNLIKELY(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0, v0.c0, v0.c0, 0x570b5de3, v0.c0))<>((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))))<((UNLIKELY(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0, v0.c0, v0.c0, 0x570b5de3, v0.c0))!=((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))))<((UNLIKELY(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0, v0.c0, v0.c0, 0x570b5de3, v0.c0))<>((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))))<((UNLIKELY(v0.c0)))));
SELECT * FROM v0 WHERE ((((+ (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((+ (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((+ (v0.c0))) NOTNULL));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((CAST('951427479' AS NUMERIC)) BETWEEN (((v0.c0) NOT NULL)) AND (((v0.c0) IS TRUE))) WHERE (((rt0.c1 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((CAST('951427479' AS NUMERIC)) BETWEEN (((v0.c0) NOT NULL)) AND (((v0.c0) IS TRUE))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((CAST('951427479' AS NUMERIC)) BETWEEN (((v0.c0) NOT NULL)) AND (((v0.c0) IS TRUE))) WHERE (((rt0.c1 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((CAST('951427479' AS NUMERIC)) BETWEEN (((v0.c0) NOT NULL)) AND (((v0.c0) IS TRUE))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((CAST('951427479' AS NUMERIC)) BETWEEN (((v0.c0) NOT NULL)) AND (((v0.c0) IS TRUE))) WHERE (((rt0.c1 COLLATE NOCASE) NOTNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((((rt0.c2)OR('<}Ngs')))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c2)OR('<}Ngs')))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((((rt0.c2)OR('<}Ngs')))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c2)OR('<}Ngs')))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((((rt0.c2)OR('<}Ngs')))OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((((v0.c0)AND(v0.c0)))OR(0x570b5de3)), v0.c0, v0.c0)) AND (((((v0.c0, v0.c0, v0.c0))>((v0.c0, '_U', v0.c0))), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((((v0.c0)AND(v0.c0)))OR(0X570b5de3)), v0.c0, v0.c0)) AND (((((v0.c0, v0.c0, v0.c0))>((v0.c0, '_U', v0.c0))), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((((v0.c0)AND(v0.c0)))OR(0x570b5de3)), v0.c0, v0.c0)) AND (((((v0.c0, v0.c0, v0.c0))>((v0.c0, '_U', v0.c0))), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((((v0.c0)AND(v0.c0)))OR(0X570b5de3)), v0.c0, v0.c0)) AND (((((v0.c0, v0.c0, v0.c0))>((v0.c0, '_U', v0.c0))), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((((v0.c0)AND(v0.c0)))OR(0x570b5de3)), v0.c0, v0.c0)) AND (((((v0.c0, v0.c0, v0.c0))>((v0.c0, '_U', v0.c0))), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((CASE WHEN '-182313409' THEN rt0.c1 ELSE rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN '-182313409' THEN rt0.c1 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((CASE WHEN '-182313409' THEN rt0.c1 ELSE rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN '-182313409' THEN rt0.c1 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((CASE WHEN '-182313409' THEN rt0.c1 ELSE rt0.c0 END IN ()));
SELECT ALL * FROM v0 WHERE (((HEX(DISTINCT '-3848025'))LIKE(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT '-3848025'))LIKE(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((HEX(DISTINCT '-3848025'))LIKE(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT '-3848025'))LIKE(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((HEX(DISTINCT '-3848025'))LIKE(CAST(v0.c0 AS REAL))));
SELECT * FROM rt0 WHERE (-1.701368313E9);
SELECT SUM(count) FROM (SELECT ((-1.701368313E9) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (-1.701368313E9);
SELECT SUM(count) FROM (SELECT ((-1.701368313E9) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (-1.701368313E9);
SELECT COUNT(*) FROM v0 WHERE (LOWER(DISTINCT x'')) ORDER BY ((UNLIKELY(DISTINCT v0.c0))>>(v0.c0 COLLATE BINARY)), (((v0.c0 IN ())) BETWEEN (LIKELIHOOD(DISTINCT v0.c0, 0.05614990453878843)) AND ((v0.c0 IN (v0.c0)))) ASC  NULLS FIRST, (LIKELIHOOD(DISTINCT v0.c0, 0.6831242448578247) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT x'')) IS TRUE)  as count FROM v0 ORDER BY ((UNLIKELY(DISTINCT v0.c0))>>(v0.c0 COLLATE BINARY)), (((v0.c0 IN ())) BETWEEN (LIKELIHOOD(DISTINCT v0.c0, 0.05614990453878843)) AND ((v0.c0 IN (v0.c0)))) ASC  NULLS FIRST, (LIKELIHOOD(DISTINCT v0.c0, 0.6831242448578247) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (LOWER(DISTINCT x'')) ORDER BY ((UNLIKELY(DISTINCT v0.c0))>>(v0.c0 COLLATE BINARY)), (((v0.c0 IN ())) BETWEEN (LIKELIHOOD(DISTINCT v0.c0, 0.05614990453878843)) AND ((v0.c0 IN (v0.c0)))) ASC  NULLS FIRST, (LIKELIHOOD(DISTINCT v0.c0, 0.6831242448578247) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT x'')) IS TRUE)  as count FROM v0 ORDER BY ((UNLIKELY(DISTINCT v0.c0))>>(v0.c0 COLLATE BINARY)), (((v0.c0 IN ())) BETWEEN (LIKELIHOOD(DISTINCT v0.c0, 0.05614990453878843)) AND ((v0.c0 IN (v0.c0)))) ASC  NULLS FIRST, (LIKELIHOOD(DISTINCT v0.c0, 0.6831242448578247) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (LOWER(DISTINCT x'')) ORDER BY ((UNLIKELY(DISTINCT v0.c0))>>(v0.c0 COLLATE BINARY)), (((v0.c0 IN ())) BETWEEN (LIKELIHOOD(DISTINCT v0.c0, 0.05614990453878843)) AND ((v0.c0 IN (v0.c0)))) ASC  NULLS FIRST, (LIKELIHOOD(DISTINCT v0.c0, 0.6831242448578247) IN ()) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c0)AND(((rt0.c1) IS TRUE))))OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(((rt0.c1) IS TRUE))))OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0)AND(((rt0.c1) IS TRUE))))OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(((rt0.c1) IS TRUE))))OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0)AND(((rt0.c1) IS TRUE))))OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT ALL * FROM v0, rt0 WHERE (CAST((rt0.c0 IN ()) AS REAL)) ORDER BY ((rt0.c0) IS TRUE), ((((v0.c0) ISNULL))>(CASE rt0.c0  WHEN 525135257 THEN NULL WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END)) DESC, SQLITE_VERSION() COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c0) IS TRUE), ((((v0.c0) ISNULL))>(CASE rt0.c0  WHEN 525135257 THEN NULL WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END)) DESC, SQLITE_VERSION() COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (CAST((rt0.c0 IN ()) AS REAL)) ORDER BY ((rt0.c0) IS TRUE), ((((v0.c0) ISNULL))>(CASE rt0.c0  WHEN 525135257 THEN NULL WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END)) DESC, SQLITE_VERSION() COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c0) IS TRUE), ((((v0.c0) ISNULL))>(CASE rt0.c0  WHEN 525135257 THEN NULL WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END)) DESC, SQLITE_VERSION() COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (CAST((rt0.c0 IN ()) AS REAL)) ORDER BY ((rt0.c0) IS TRUE), ((((v0.c0) ISNULL))>(CASE rt0.c0  WHEN 525135257 THEN NULL WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END)) DESC, SQLITE_VERSION() COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)/(v0.c0)))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND((+ (v0.c0))))) ORDER BY IFNULL(((v0.c0)%(v0.c0)), v0.c0 COLLATE NOCASE) DESC, CAST(0.2855415383044384 AS REAL)  NULLS FIRST, (((((((((((('hr')AND(UNLIKELY(v0.c0))))AND((((('2005460208')AND(v0.c0)))AND(v0.c0)))))AND(((v0.c0)%(v0.c0)))))OR((v0.c0 IN ()))))AND(((v0.c0) NOT NULL))))AND(0.1777599273386674 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)/(v0.c0)))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND((+ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY IFNULL(((v0.c0)%(v0.c0)), v0.c0 COLLATE NOCASE) DESC, CAST(0.2855415383044384 AS REAL)  NULLS FIRST, (((((((((((('hr')AND(UNLIKELY(v0.c0))))AND((((('2005460208')AND(v0.c0)))AND(v0.c0)))))AND(((v0.c0)%(v0.c0)))))OR((v0.c0 IN ()))))AND(((v0.c0) NOT NULL))))AND(0.1777599273386674 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)/(v0.c0)))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND((+ (v0.c0))))) ORDER BY IFNULL(((v0.c0)%(v0.c0)), v0.c0 COLLATE NOCASE) DESC, CAST(0.2855415383044384 AS REAL)  NULLS FIRST, (((((((((((('hr')AND(UNLIKELY(v0.c0))))AND((((('2005460208')AND(v0.c0)))AND(v0.c0)))))AND(((v0.c0)%(v0.c0)))))OR((v0.c0 IN ()))))AND(((v0.c0) NOT NULL))))AND(0.1777599273386674 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)/(v0.c0)))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND((+ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY IFNULL(((v0.c0)%(v0.c0)), v0.c0 COLLATE NOCASE) DESC, CAST(0.2855415383044384 AS REAL)  NULLS FIRST, (((((((((((('hr')AND(UNLIKELY(v0.c0))))AND((((('2005460208')AND(v0.c0)))AND(v0.c0)))))AND(((v0.c0)%(v0.c0)))))OR((v0.c0 IN ()))))AND(((v0.c0) NOT NULL))))AND(0.1777599273386674 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)/(v0.c0)))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND((+ (v0.c0))))) ORDER BY IFNULL(((v0.c0)%(v0.c0)), v0.c0 COLLATE NOCASE) DESC, CAST(0.2855415383044384 AS REAL)  NULLS FIRST, (((((((((((('hr')AND(UNLIKELY(v0.c0))))AND((((('2005460208')AND(v0.c0)))AND(v0.c0)))))AND(((v0.c0)%(v0.c0)))))OR((v0.c0 IN ()))))AND(((v0.c0) NOT NULL))))AND(0.1777599273386674 COLLATE NOCASE)) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY 'C%Fld}Ri';
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY 'C%Fld}Ri');
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY 'C%Fld}Ri';
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY 'C%Fld}Ri');
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY 'C%Fld}Ri';
SELECT ALL * FROM v0 WHERE ((- (v0.c0)));
SELECT SUM(count) FROM (SELECT (((- (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((- (v0.c0)));
SELECT SUM(count) FROM (SELECT (((- (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((- (v0.c0)));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((((CASE rt0.c1  WHEN v0.c0 THEN '-523387783' END)OR(LOWER(rt0.c1))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c1  WHEN v0.c0 THEN '-523387783' END)OR(LOWER(rt0.c1))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((((CASE rt0.c1  WHEN v0.c0 THEN '-523387783' END)OR(LOWER(rt0.c1))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c1  WHEN v0.c0 THEN '-523387783' END)OR(LOWER(rt0.c1))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((((CASE rt0.c1  WHEN v0.c0 THEN '-523387783' END)OR(LOWER(rt0.c1))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN x'' THEN rt0.c0 END) NOT NULL)) ORDER BY CASE (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))  WHEN ((rt0.c1)*(NULL)) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN x'' THEN rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))  WHEN ((rt0.c1)*(NULL)) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN x'' THEN rt0.c0 END) NOT NULL)) ORDER BY CASE (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))  WHEN ((rt0.c1)*(NULL)) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN x'' THEN rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))  WHEN ((rt0.c1)*(NULL)) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN x'' THEN rt0.c0 END) NOT NULL)) ORDER BY CASE (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))  WHEN ((rt0.c1)*(NULL)) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((x'') IS TRUE)) ORDER BY (((LIKE(rt0.c1, v0.c0)))<((((rt0.c1)|(NULL))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS TRUE)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((LIKE(rt0.c1, v0.c0)))<((((rt0.c1)|(NULL))))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((x'') IS TRUE)) ORDER BY (((LIKE(rt0.c1, v0.c0)))<((((rt0.c1)|(NULL))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS TRUE)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((LIKE(rt0.c1, v0.c0)))<((((rt0.c1)|(NULL))))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((x'') IS TRUE)) ORDER BY (((LIKE(rt0.c1, v0.c0)))<((((rt0.c1)|(NULL))))) DESC;
SELECT * FROM v0 WHERE (CAST(((v0.c0)|(v0.c0)) AS REAL)) ORDER BY highlight(((v0.c0)<(v0.c0)), TRIM(DISTINCT v0.c0), (v0.c0 IN ()), v0.c0) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)|(v0.c0)) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY highlight(((v0.c0)<(v0.c0)), TRIM(DISTINCT v0.c0), (v0.c0 IN ()), v0.c0) ASC);
SELECT * FROM v0 WHERE (CAST(((v0.c0)|(v0.c0)) AS REAL)) ORDER BY highlight(((v0.c0)<(v0.c0)), TRIM(DISTINCT v0.c0), (v0.c0 IN ()), v0.c0) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)|(v0.c0)) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY highlight(((v0.c0)<(v0.c0)), TRIM(DISTINCT v0.c0), (v0.c0 IN ()), v0.c0) ASC);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))>(((((v0.c0)OR(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))>(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))>(((((v0.c0)OR(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))>(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))>(((((v0.c0)OR(v0.c0)))AND(v0.c0)))));
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT ALL * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN v0.c0 END IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN v0.c0 END IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 END IN ()));
SELECT COUNT(*) FROM v0, rt0 WHERE ('-2069715500') ORDER BY (((NOT (v0.c0))) NOT BETWEEN ((NOT (rt0.c1))) AND ((rt0.c2 IN (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-2069715500') IS TRUE)  as count FROM v0, rt0 ORDER BY (((NOT (v0.c0))) NOT BETWEEN ((NOT (rt0.c1))) AND ((rt0.c2 IN (rt0.c0)))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ('-2069715500') ORDER BY (((NOT (v0.c0))) NOT BETWEEN ((NOT (rt0.c1))) AND ((rt0.c2 IN (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-2069715500') IS TRUE)  as count FROM v0, rt0 ORDER BY (((NOT (v0.c0))) NOT BETWEEN ((NOT (rt0.c1))) AND ((rt0.c2 IN (rt0.c0)))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ('-2069715500') ORDER BY (((NOT (v0.c0))) NOT BETWEEN ((NOT (rt0.c1))) AND ((rt0.c2 IN (rt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c0, rt0.c2, 'tPa齘 p岾W')) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((NULL, rt0.c1, 0xffffffffcb28875f)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c2, 'tPa齘 p岾W')) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((NULL, rt0.c1, 0xffffffffcb28875f)))) ISNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c0, rt0.c2, 'tPa齘 p岾W')) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((NULL, rt0.c1, 0xffffffffcb28875f)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c2, 'tPa齘 p岾W')) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((NULL, rt0.c1, 0xffffffffcb28875f)))) ISNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c0, rt0.c2, 'tPa齘 p岾W')) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((NULL, rt0.c1, 0xffffffffcb28875f)))) ISNULL));
SELECT * FROM v0, rt0 WHERE (CAST(CASE rt0.c1  WHEN x'9efd' THEN v0.c0 END AS BLOB)) ORDER BY (((((((((((((rt0.c1 IN ()))OR(rt0.c0)))OR(LOWER(rt0.c0))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))))OR(rt0.c1)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))))OR(CAST(rt0.c0 AS BLOB))), (('412967416')-(rt0.c2 COLLATE RTRIM)) DESC, ((((CASE v0.c0  WHEN rt0.c0 THEN v0.c0 END)OR(rt0.c0 COLLATE BINARY)))AND((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c1  WHEN x'9efd' THEN v0.c0 END AS BLOB)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((((((((((rt0.c1 IN ()))OR(rt0.c0)))OR(LOWER(rt0.c0))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))))OR(rt0.c1)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))))OR(CAST(rt0.c0 AS BLOB))), (('412967416')-(rt0.c2 COLLATE RTRIM)) DESC, ((((CASE v0.c0  WHEN rt0.c0 THEN v0.c0 END)OR(rt0.c0 COLLATE BINARY)))AND((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1))))));
SELECT * FROM v0, rt0 WHERE (CAST(CASE rt0.c1  WHEN x'9efd' THEN v0.c0 END AS BLOB)) ORDER BY (((((((((((((rt0.c1 IN ()))OR(rt0.c0)))OR(LOWER(rt0.c0))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))))OR(rt0.c1)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))))OR(CAST(rt0.c0 AS BLOB))), (('412967416')-(rt0.c2 COLLATE RTRIM)) DESC, ((((CASE v0.c0  WHEN rt0.c0 THEN v0.c0 END)OR(rt0.c0 COLLATE BINARY)))AND((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c1  WHEN x'9efd' THEN v0.c0 END AS BLOB)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((((((((((rt0.c1 IN ()))OR(rt0.c0)))OR(LOWER(rt0.c0))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))))OR(rt0.c1)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))))OR(CAST(rt0.c0 AS BLOB))), (('412967416')-(rt0.c2 COLLATE RTRIM)) DESC, ((((CASE v0.c0  WHEN rt0.c0 THEN v0.c0 END)OR(rt0.c0 COLLATE BINARY)))AND((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1))))));
SELECT * FROM v0, rt0 WHERE (CAST(CASE rt0.c1  WHEN x'9efd' THEN v0.c0 END AS BLOB)) ORDER BY (((((((((((((rt0.c1 IN ()))OR(rt0.c0)))OR(LOWER(rt0.c0))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))))OR(rt0.c1)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))))OR(CAST(rt0.c0 AS BLOB))), (('412967416')-(rt0.c2 COLLATE RTRIM)) DESC, ((((CASE v0.c0  WHEN rt0.c0 THEN v0.c0 END)OR(rt0.c0 COLLATE BINARY)))AND((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1)))));
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT ALL * FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(((v0.c0)/(v0.c0)))))OR(((v0.c0)<=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(((v0.c0)/(v0.c0)))))OR(((v0.c0)<=(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(((v0.c0)/(v0.c0)))))OR(((v0.c0)<=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(((v0.c0)/(v0.c0)))))OR(((v0.c0)<=(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(((v0.c0)/(v0.c0)))))OR(((v0.c0)<=(v0.c0)))));
SELECT * FROM v0 WHERE (((((v0.c0)|(v0.c0)))<<(v0.c0 COLLATE RTRIM))) ORDER BY ((')G') NOT NULL) ASC, ((LOWER(DISTINCT v0.c0)) BETWEEN ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))) AND ((v0.c0 IN (v0.c0, x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)|(v0.c0)))<<(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY ((')G') NOT NULL) ASC, ((LOWER(DISTINCT v0.c0)) BETWEEN ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))) AND ((v0.c0 IN (v0.c0, x''))))  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0)|(v0.c0)))<<(v0.c0 COLLATE RTRIM))) ORDER BY ((')G') NOT NULL) ASC, ((LOWER(DISTINCT v0.c0)) BETWEEN ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))) AND ((v0.c0 IN (v0.c0, x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)|(v0.c0)))<<(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY ((')G') NOT NULL) ASC, ((LOWER(DISTINCT v0.c0)) BETWEEN ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))) AND ((v0.c0 IN (v0.c0, x''))))  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0)|(v0.c0)))<<(v0.c0 COLLATE RTRIM))) ORDER BY ((')G') NOT NULL) ASC, ((LOWER(DISTINCT v0.c0)) BETWEEN ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))) AND ((v0.c0 IN (v0.c0, x''))))  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE ((((v0.c0 IN ()))LIKE(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))LIKE(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((v0.c0 IN ()))LIKE(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))LIKE(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((v0.c0 IN ()))LIKE(((rt0.c1) IS TRUE))));
SELECT ALL * FROM v0 INNER JOIN rt0 ON (+ (((v0.c0) IS TRUE))) WHERE ((((((((((rt0.c0)AND(rt0.c2)))OR('j#x(7')))AND(v0.c0)))OR(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c0)AND(rt0.c2)))OR('j#x(7')))AND(v0.c0)))OR(rt0.c2)) IN ())) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (+ (((v0.c0) IS TRUE))));
SELECT ALL * FROM v0 INNER JOIN rt0 ON (+ (((v0.c0) IS TRUE))) WHERE ((((((((((rt0.c0)AND(rt0.c2)))OR('j#x(7')))AND(v0.c0)))OR(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c0)AND(rt0.c2)))OR('j#x(7')))AND(v0.c0)))OR(rt0.c2)) IN ())) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (+ (((v0.c0) IS TRUE))));
SELECT ALL * FROM v0 INNER JOIN rt0 ON (+ (((v0.c0) IS TRUE))) WHERE ((((((((((rt0.c0)AND(rt0.c2)))OR('j#x(7')))AND(v0.c0)))OR(rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE (~ (v0.c0))  WHEN (((v0.c0))<=((x''))) THEN (v0.c0 IN (v0.c0)) WHEN '1749379130' THEN (v0.c0 IN ()) WHEN ((v0.c0)-(v0.c0)) THEN (v0.c0 IN ()) ELSE LOWER(v0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (v0.c0))  WHEN (((v0.c0))<=((x''))) THEN (v0.c0 IN (v0.c0)) WHEN '1749379130' THEN (v0.c0 IN ()) WHEN ((v0.c0)-(v0.c0)) THEN (v0.c0 IN ()) ELSE LOWER(v0.c0) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE (~ (v0.c0))  WHEN (((v0.c0))<=((x''))) THEN (v0.c0 IN (v0.c0)) WHEN '1749379130' THEN (v0.c0 IN ()) WHEN ((v0.c0)-(v0.c0)) THEN (v0.c0 IN ()) ELSE LOWER(v0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (v0.c0))  WHEN (((v0.c0))<=((x''))) THEN (v0.c0 IN (v0.c0)) WHEN '1749379130' THEN (v0.c0 IN ()) WHEN ((v0.c0)-(v0.c0)) THEN (v0.c0 IN ()) ELSE LOWER(v0.c0) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE (~ (v0.c0))  WHEN (((v0.c0))<=((x''))) THEN (v0.c0 IN (v0.c0)) WHEN '1749379130' THEN (v0.c0 IN ()) WHEN ((v0.c0)-(v0.c0)) THEN (v0.c0 IN ()) ELSE LOWER(v0.c0) END);
SELECT * FROM v0, rt0 WHERE (((0.3086549303126478 IN ()) IN ((NOT (v0.c0)), 204429533))) ORDER BY ((((rt0.c2)&(rt0.c1))) NOT BETWEEN ((rt0.c2 IN (v0.c0))) AND (((rt0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.3086549303126478 IN ()) IN ((NOT (v0.c0)), 204429533))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c2)&(rt0.c1))) NOT BETWEEN ((rt0.c2 IN (v0.c0))) AND (((rt0.c0) NOTNULL)))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((0.3086549303126478 IN ()) IN ((NOT (v0.c0)), 204429533))) ORDER BY ((((rt0.c2)&(rt0.c1))) NOT BETWEEN ((rt0.c2 IN (v0.c0))) AND (((rt0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.3086549303126478 IN ()) IN ((NOT (v0.c0)), 204429533))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c2)&(rt0.c1))) NOT BETWEEN ((rt0.c2 IN (v0.c0))) AND (((rt0.c0) NOTNULL)))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((0.3086549303126478 IN ()) IN ((NOT (v0.c0)), 204429533))) ORDER BY ((((rt0.c2)&(rt0.c1))) NOT BETWEEN ((rt0.c2 IN (v0.c0))) AND (((rt0.c0) NOTNULL)))  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((v0.c0, v0.c0, x'bc55')) AND ((rt0.c0, rt0.c1, v0.c0))), load_extension(v0.c0), ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))))>=((ABS(DISTINCT rt0.c2), (- (v0.c0)), ((rt0.c2)<(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((v0.c0, v0.c0, x'bc55')) AND ((rt0.c0, rt0.c1, v0.c0))), load_extension(v0.c0), ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))))>=((ABS(DISTINCT rt0.c2), (- (v0.c0)), ((rt0.c2)<(rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((v0.c0, v0.c0, x'bc55')) AND ((rt0.c0, rt0.c1, v0.c0))), load_extension(v0.c0), ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))))>=((ABS(DISTINCT rt0.c2), (- (v0.c0)), ((rt0.c2)<(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((v0.c0, v0.c0, x'bc55')) AND ((rt0.c0, rt0.c1, v0.c0))), load_extension(v0.c0), ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))))>=((ABS(DISTINCT rt0.c2), (- (v0.c0)), ((rt0.c2)<(rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((v0.c0, v0.c0, x'bc55')) AND ((rt0.c0, rt0.c1, v0.c0))), load_extension(v0.c0), ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))))>=((ABS(DISTINCT rt0.c2), (- (v0.c0)), ((rt0.c2)<(rt0.c2))))));
SELECT * FROM rt0, v0 WHERE ((1571432962 IN (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((1571432962 IN (v0.c0))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((1571432962 IN (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((1571432962 IN (v0.c0))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((1571432962 IN (v0.c0)));
SELECT ALL * FROM v0, rt0 WHERE (0.3371488578444932);
SELECT SUM(count) FROM (SELECT ALL ((0.3371488578444932) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (0.3371488578444932);
SELECT SUM(count) FROM (SELECT ALL ((0.3371488578444932) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (0.3371488578444932);
SELECT COUNT(*) FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (v0.c0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE v0.c0  WHEN 0.5883006169288785 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN 0.5883006169288785 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE v0.c0  WHEN 0.5883006169288785 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN 0.5883006169288785 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE v0.c0  WHEN 0.5883006169288785 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE NOCASE);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c1) IS TRUE) WHERE (CAST(SUBSTR(x'', v0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(SUBSTR(x'', v0.c0) AS NUMERIC)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c1) IS TRUE));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c1) IS TRUE) WHERE (CAST(SUBSTR(x'', v0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(SUBSTR(x'', v0.c0) AS NUMERIC)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c1) IS TRUE));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c1) IS TRUE) WHERE (CAST(SUBSTR(x'', v0.c0) AS NUMERIC));
SELECT * FROM rt0 WHERE ((((rt0.c1)<(rt0.c2)) IN ())) ORDER BY '-1567697735' DESC, ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)<(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY '-1567697735' DESC, ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c1)<(rt0.c2)) IN ())) ORDER BY '-1567697735' DESC, ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)<(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY '-1567697735' DESC, ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c1)<(rt0.c2)) IN ())) ORDER BY '-1567697735' DESC, ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (ABS(DISTINCT ((rt0.c2)%(v0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((rt0.c2)%(v0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (ABS(DISTINCT ((rt0.c2)%(v0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((rt0.c2)%(v0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (ABS(DISTINCT ((rt0.c2)%(v0.c0))));
SELECT COUNT(*) FROM v0, rt0 WHERE (((0X7bb8f1a2)|(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((0X7bb8f1a2)|(rt0.c0))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((0X7bb8f1a2)|(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((0X7bb8f1a2)|(rt0.c0))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((0X7bb8f1a2)|(rt0.c0)));
SELECT * FROM rt0, v0 WHERE (CAST((((rt0.c1))>=((v0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1))>=((v0.c0))) AS INTEGER)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST((((rt0.c1))>=((v0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1))>=((v0.c0))) AS INTEGER)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST((((rt0.c1))>=((v0.c0))) AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c1)))>(((((rt0.c0)OR(rt0.c1)))AND(NULL)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))>(((((rt0.c0)OR(rt0.c1)))AND(NULL))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c1)))>(((((rt0.c0)OR(rt0.c1)))AND(NULL)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))>(((((rt0.c0)OR(rt0.c1)))AND(NULL))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c1)))>(((((rt0.c0)OR(rt0.c1)))AND(NULL)))));
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)=(rt0.c1)))||((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)==(rt0.c1)))||((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)=(rt0.c1)))||((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)==(rt0.c1)))||((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)=(rt0.c1)))||((rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c2) ORDER BY CAST(((rt0.c1) BETWEEN (v0.c0) AND ('iK')) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c1) BETWEEN (v0.c0) AND ('iK')) AS INTEGER));
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c2) ORDER BY CAST(((rt0.c1) BETWEEN (v0.c0) AND ('iK')) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c1) BETWEEN (v0.c0) AND ('iK')) AS INTEGER));
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c2) ORDER BY CAST(((rt0.c1) BETWEEN (v0.c0) AND ('iK')) AS INTEGER);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST((rt0.c1 IN ()) AS BLOB)) ORDER BY ((((((((rt0.c0 COLLATE NOCASE)OR(CAST(v0.c0 AS TEXT))))OR(((rt0.c2)IS NOT(rt0.c1)))))OR(CAST(rt0.c0 AS INTEGER))))AND(rt0.c2 COLLATE NOCASE)), (((rt0.c2))=((LIKELIHOOD(0.00277631777046905, 0.6731852758286228))))  NULLS FIRST, ((((rt0.c1) ISNULL))&((v0.c0 IN (v0.c0, rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((((rt0.c0 COLLATE NOCASE)OR(CAST(v0.c0 AS TEXT))))OR(((rt0.c2)IS NOT(rt0.c1)))))OR(CAST(rt0.c0 AS INTEGER))))AND(rt0.c2 COLLATE NOCASE)), (((rt0.c2))==((LIKELIHOOD(0.00277631777046905, 0.6731852758286228))))  NULLS FIRST, ((((rt0.c1) ISNULL))&((v0.c0 IN (v0.c0, rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST((rt0.c1 IN ()) AS BLOB)) ORDER BY ((((((((rt0.c0 COLLATE NOCASE)OR(CAST(v0.c0 AS TEXT))))OR(((rt0.c2)IS NOT(rt0.c1)))))OR(CAST(rt0.c0 AS INTEGER))))AND(rt0.c2 COLLATE NOCASE)), (((rt0.c2))=((LIKELIHOOD(0.00277631777046905, 0.6731852758286228))))  NULLS FIRST, ((((rt0.c1) ISNULL))&((v0.c0 IN (v0.c0, rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((((rt0.c0 COLLATE NOCASE)OR(CAST(v0.c0 AS TEXT))))OR(((rt0.c2)IS NOT(rt0.c1)))))OR(CAST(rt0.c0 AS INTEGER))))AND(rt0.c2 COLLATE NOCASE)), (((rt0.c2))==((LIKELIHOOD(0.00277631777046905, 0.6731852758286228))))  NULLS FIRST, ((((rt0.c1) ISNULL))&((v0.c0 IN (v0.c0, rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST((rt0.c1 IN ()) AS BLOB)) ORDER BY ((((((((rt0.c0 COLLATE NOCASE)OR(CAST(v0.c0 AS TEXT))))OR(((rt0.c2)IS NOT(rt0.c1)))))OR(CAST(rt0.c0 AS INTEGER))))AND(rt0.c2 COLLATE NOCASE)), (((rt0.c2))=((LIKELIHOOD(0.00277631777046905, 0.6731852758286228))))  NULLS FIRST, ((((rt0.c1) ISNULL))&((v0.c0 IN (v0.c0, rt0.c2))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (x'') ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY NULL DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (x'') ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY NULL DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (x'') ORDER BY NULL DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (LOWER(DISTINCT CAST(v0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CAST(v0.c0 AS TEXT))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (LOWER(DISTINCT CAST(v0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CAST(v0.c0 AS TEXT))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (LOWER(DISTINCT CAST(v0.c0 AS TEXT)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)>(v0.c0)) IN (CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END))) ORDER BY CAST(CAST(rt0.c2 AS REAL) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)>(v0.c0)) IN (CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(CAST(rt0.c2 AS REAL) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)>(v0.c0)) IN (CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END))) ORDER BY CAST(CAST(rt0.c2 AS REAL) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)>(v0.c0)) IN (CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(CAST(rt0.c2 AS REAL) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)>(v0.c0)) IN (CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END))) ORDER BY CAST(CAST(rt0.c2 AS REAL) AS BLOB);
SELECT * FROM v0, rt0 WHERE (((((rt0.c2)<=(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<=(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c2)<=(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<=(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c2)<=(rt0.c1))) IS TRUE));
SELECT * FROM rt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c0)LIKE(v0.c0)))) AND ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((rt0.c0)LIKE(v0.c0)))) AND ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c0)LIKE(v0.c0)))) AND ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((rt0.c0)LIKE(v0.c0)))) AND ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c0)LIKE(v0.c0)))) AND ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))));
SELECT COUNT(*) FROM rt0 WHERE (CAST((~ (rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((~ (rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((~ (rt0.c0)) AS BLOB));
SELECT * FROM v0, rt0 WHERE (NULL) ORDER BY (((NOT (rt0.c2))) BETWEEN (rt0.c1) AND (CAST(rt0.c0 AS BLOB)))  NULLS FIRST, ((((CAST(v0.c0 AS REAL))AND(((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(NULLIF(v0.c0, rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt0 ORDER BY (((NOT (rt0.c2))) BETWEEN (rt0.c1) AND (CAST(rt0.c0 AS BLOB)))  NULLS FIRST, ((((CAST(v0.c0 AS REAL))AND(((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(NULLIF(v0.c0, rt0.c2)))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (NULL) ORDER BY (((NOT (rt0.c2))) BETWEEN (rt0.c1) AND (CAST(rt0.c0 AS BLOB)))  NULLS FIRST, ((((CAST(v0.c0 AS REAL))AND(((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(NULLIF(v0.c0, rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt0 ORDER BY (((NOT (rt0.c2))) BETWEEN (rt0.c1) AND (CAST(rt0.c0 AS BLOB)))  NULLS FIRST, ((((CAST(v0.c0 AS REAL))AND(((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(NULLIF(v0.c0, rt0.c2)))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (NULL) ORDER BY (((NOT (rt0.c2))) BETWEEN (rt0.c1) AND (CAST(rt0.c0 AS BLOB)))  NULLS FIRST, ((((CAST(v0.c0 AS REAL))AND(((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(NULLIF(v0.c0, rt0.c2)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((((((NULL) IS TRUE))OR((v0.c0 IN (v0.c0, v0.c0)))))OR(v0.c0 COLLATE RTRIM)))AND(UPPER(v0.c0))))OR(0x689707b7)))OR(CAST(v0.c0 AS TEXT))))OR(x'0dd5'))) ORDER BY CAST(CAST(v0.c0 AS REAL) AS BLOB)  NULLS FIRST, CASE json_remove(v0.c0, NULL, v0.c0, v0.c0)  WHEN (((v0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0))) THEN CAST(v0.c0 AS INTEGER) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN (-1681237307 IN ()) THEN v0.c0 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((NULL) IS TRUE))OR((v0.c0 IN (v0.c0, v0.c0)))))OR(v0.c0 COLLATE RTRIM)))AND(UPPER(v0.c0))))OR(0x689707b7)))OR(CAST(v0.c0 AS TEXT))))OR(x'0dd5'))) IS TRUE)  as count FROM v0 ORDER BY CAST(CAST(v0.c0 AS REAL) AS BLOB)  NULLS FIRST, CASE json_remove(v0.c0, NULL, v0.c0, v0.c0)  WHEN (((v0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0))) THEN CAST(v0.c0 AS INTEGER) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN (-1681237307 IN ()) THEN v0.c0 END DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((((((NULL) IS TRUE))OR((v0.c0 IN (v0.c0, v0.c0)))))OR(v0.c0 COLLATE RTRIM)))AND(UPPER(v0.c0))))OR(0x689707b7)))OR(CAST(v0.c0 AS TEXT))))OR(x'0dd5'))) ORDER BY CAST(CAST(v0.c0 AS REAL) AS BLOB)  NULLS FIRST, CASE json_remove(v0.c0, NULL, v0.c0, v0.c0)  WHEN (((v0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0))) THEN CAST(v0.c0 AS INTEGER) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN (-1681237307 IN ()) THEN v0.c0 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((NULL) IS TRUE))OR((v0.c0 IN (v0.c0, v0.c0)))))OR(v0.c0 COLLATE RTRIM)))AND(UPPER(v0.c0))))OR(0x689707b7)))OR(CAST(v0.c0 AS TEXT))))OR(x'0dd5'))) IS TRUE)  as count FROM v0 ORDER BY CAST(CAST(v0.c0 AS REAL) AS BLOB)  NULLS FIRST, CASE json_remove(v0.c0, NULL, v0.c0, v0.c0)  WHEN (((v0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0))) THEN CAST(v0.c0 AS INTEGER) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN (-1681237307 IN ()) THEN v0.c0 END DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((((((NULL) IS TRUE))OR((v0.c0 IN (v0.c0, v0.c0)))))OR(v0.c0 COLLATE RTRIM)))AND(UPPER(v0.c0))))OR(0x689707b7)))OR(CAST(v0.c0 AS TEXT))))OR(x'0dd5'))) ORDER BY CAST(CAST(v0.c0 AS REAL) AS BLOB)  NULLS FIRST, CASE json_remove(v0.c0, NULL, v0.c0, v0.c0)  WHEN (((v0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0))) THEN CAST(v0.c0 AS INTEGER) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN (-1681237307 IN ()) THEN v0.c0 END DESC;
SELECT ALL * FROM v0 WHERE ((((v0.c0) NOTNULL) IN ())) ORDER BY (+ (HEX(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM v0 ORDER BY (+ (HEX(v0.c0)))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((v0.c0) NOTNULL) IN ())) ORDER BY (+ (HEX(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM v0 ORDER BY (+ (HEX(v0.c0)))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((v0.c0) NOTNULL) IN ())) ORDER BY (+ (HEX(v0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON v0.c0 WHERE (((((((rt0.c1)>(rt0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND((((v0.c0, v0.c0, v0.c0, rt0.c2, v0.c0))>=((v0.c0, rt0.c0, rt0.c0, rt0.c2, rt0.c2)))))) ORDER BY ((NOT (rt0.c2)) IN (rt0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)>(rt0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND((((v0.c0, v0.c0, v0.c0, rt0.c2, v0.c0))>=((v0.c0, rt0.c0, rt0.c0, rt0.c2, rt0.c2)))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON v0.c0 ORDER BY ((NOT (rt0.c2)) IN (rt0.c1)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON v0.c0 WHERE (((((((rt0.c1)>(rt0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND((((v0.c0, v0.c0, v0.c0, rt0.c2, v0.c0))>=((v0.c0, rt0.c0, rt0.c0, rt0.c2, rt0.c2)))))) ORDER BY ((NOT (rt0.c2)) IN (rt0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)>(rt0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND((((v0.c0, v0.c0, v0.c0, rt0.c2, v0.c0))>=((v0.c0, rt0.c0, rt0.c0, rt0.c2, rt0.c2)))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON v0.c0 ORDER BY ((NOT (rt0.c2)) IN (rt0.c1)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON v0.c0 WHERE (((((((rt0.c1)>(rt0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND((((v0.c0, v0.c0, v0.c0, rt0.c2, v0.c0))>=((v0.c0, rt0.c0, rt0.c0, rt0.c2, rt0.c2)))))) ORDER BY ((NOT (rt0.c2)) IN (rt0.c1)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((x'' IN ()))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))AND('-900078158')))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))AND(((rt0.c2)<=(rt0.c0))))) ORDER BY (((rt0.c1)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((x'')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((x'' IN ()))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))AND('-900078158')))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))AND(((rt0.c2)<=(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((x'')))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((x'' IN ()))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))AND('-900078158')))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))AND(((rt0.c2)<=(rt0.c0))))) ORDER BY (((rt0.c1)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((x'')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((x'' IN ()))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))AND('-900078158')))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))AND(((rt0.c2)<=(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((x'')))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((x'' IN ()))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))AND('-900078158')))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))AND(((rt0.c2)<=(rt0.c0))))) ORDER BY (((rt0.c1)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((x'')))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT * FROM rt0, v0 WHERE (((((((v0.c0))!=((rt0.c2)))))<>((((rt0.c1)||(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0))<>((rt0.c2)))))!=((((rt0.c1)||(rt0.c0)))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((v0.c0))!=((rt0.c2)))))<>((((rt0.c1)||(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0))<>((rt0.c2)))))!=((((rt0.c1)||(rt0.c0)))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((v0.c0))!=((rt0.c2)))))<>((((rt0.c1)||(rt0.c0))))));
SELECT ALL * FROM v0 WHERE ((((v0.c0)*(607172537)) IN (((v0.c0)>=('녀'))))) ORDER BY v0.c0  NULLS FIRST, v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)*(607172537)) IN (((v0.c0)>=('녀'))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST, v0.c0 DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((v0.c0)*(607172537)) IN (((v0.c0)>=('녀'))))) ORDER BY v0.c0  NULLS FIRST, v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)*(607172537)) IN (((v0.c0)>=('녀'))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST, v0.c0 DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((v0.c0)*(607172537)) IN (((v0.c0)>=('녀'))))) ORDER BY v0.c0  NULLS FIRST, v0.c0 DESC  NULLS LAST;
SELECT * FROM rt0, v0 WHERE ((((rt0.c0 IN ()))!=((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))!=((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((v0.c0)))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((rt0.c0 IN ()))!=((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))!=((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((v0.c0)))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((rt0.c0 IN ()))!=((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((v0.c0))))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0)))) NOT NULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0)))) NOT NULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0)))) NOT NULL));
SELECT * FROM v0, rt0 WHERE (((v0.c0)>>(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>>(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((v0.c0)>>(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>>(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((v0.c0)>>(rt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c2) NOTNULL) AS REAL) WHERE (CASE WHEN ((rt0.c0)!=(0.10871606612101326)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(rt0.c1)) ELSE CASE WHEN rt0.c1 THEN v0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)!=(0.10871606612101326)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(rt0.c1)) ELSE CASE WHEN rt0.c1 THEN v0.c0 END END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c2) NOTNULL) AS REAL));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c2) NOTNULL) AS REAL) WHERE (CASE WHEN ((rt0.c0)!=(0.10871606612101326)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(rt0.c1)) ELSE CASE WHEN rt0.c1 THEN v0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)!=(0.10871606612101326)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(rt0.c1)) ELSE CASE WHEN rt0.c1 THEN v0.c0 END END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c2) NOTNULL) AS REAL));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c2) NOTNULL) AS REAL) WHERE (CASE WHEN ((rt0.c0)!=(0.10871606612101326)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(rt0.c1)) ELSE CASE WHEN rt0.c1 THEN v0.c0 END END);
SELECT COUNT(*) FROM rt0, v0 WHERE (((0X1b6b2d47) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((0X1b6b2d47) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((0X1b6b2d47) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((0X1b6b2d47) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((0X1b6b2d47) NOTNULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON TYPEOF(DISTINCT NULL) WHERE (CAST(((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON TYPEOF(DISTINCT NULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON TYPEOF(DISTINCT NULL) WHERE (CAST(((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON TYPEOF(DISTINCT NULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON TYPEOF(DISTINCT NULL) WHERE (CAST(((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1)) AS NUMERIC));
SELECT * FROM rt0 INNER JOIN v0 ON (NOT (v0.c0 COLLATE BINARY)) WHERE (CAST(((rt0.c2)IS(rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)IS(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (NOT (v0.c0 COLLATE BINARY)));
SELECT * FROM rt0 INNER JOIN v0 ON (NOT (v0.c0 COLLATE BINARY)) WHERE (CAST(((rt0.c2)IS(rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)IS(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (NOT (v0.c0 COLLATE BINARY)));
SELECT * FROM rt0 INNER JOIN v0 ON (NOT (v0.c0 COLLATE BINARY)) WHERE (CAST(((rt0.c2)IS(rt0.c1)) AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR(CAST(rt0.c1 AS NUMERIC))))AND(CAST(rt0.c1 AS NUMERIC)))) ORDER BY '515369999';
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR(CAST(rt0.c1 AS NUMERIC))))AND(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY '515369999');
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR(CAST(rt0.c1 AS NUMERIC))))AND(CAST(rt0.c1 AS NUMERIC)))) ORDER BY '515369999';
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR(CAST(rt0.c1 AS NUMERIC))))AND(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY '515369999');
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))OR(CAST(rt0.c1 AS NUMERIC))))AND(CAST(rt0.c1 AS NUMERIC)))) ORDER BY '515369999';
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((NULL)/(0Xffffffff994479bd)) AS INTEGER)) ORDER BY ((((rt0.c2)OR(rt0.c1))) BETWEEN (((rt0.c0) ISNULL)) AND (UPPER(rt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)/(0Xffffffff994479bd)) AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2)OR(rt0.c1))) BETWEEN (((rt0.c0) ISNULL)) AND (UPPER(rt0.c2))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((NULL)/(0Xffffffff994479bd)) AS INTEGER)) ORDER BY ((((rt0.c2)OR(rt0.c1))) BETWEEN (((rt0.c0) ISNULL)) AND (UPPER(rt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)/(0Xffffffff994479bd)) AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2)OR(rt0.c1))) BETWEEN (((rt0.c0) ISNULL)) AND (UPPER(rt0.c2))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((NULL)/(0Xffffffff994479bd)) AS INTEGER)) ORDER BY ((((rt0.c2)OR(rt0.c1))) BETWEEN (((rt0.c0) ISNULL)) AND (UPPER(rt0.c2))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN (((- (v0.c0)))) AND ((CAST(v0.c0 AS REAL)))) WHERE (CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c2) BETWEEN (0.08865272712916239) AND (rt0.c2)) END) ORDER BY json_array(NULL, ((rt0.c2)%(v0.c0)), json_remove(x'', rt0.c0), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c2) BETWEEN (0.08865272712916239) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN (((- (v0.c0)))) AND ((CAST(v0.c0 AS REAL)))) ORDER BY json_array(NULL, ((rt0.c2)%(v0.c0)), json_remove(x'', rt0.c0), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END) ASC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN (((- (v0.c0)))) AND ((CAST(v0.c0 AS REAL)))) WHERE (CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c2) BETWEEN (0.08865272712916239) AND (rt0.c2)) END) ORDER BY json_array(NULL, ((rt0.c2)%(v0.c0)), json_remove(x'', rt0.c0), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c2) BETWEEN (0.08865272712916239) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN (((- (v0.c0)))) AND ((CAST(v0.c0 AS REAL)))) ORDER BY json_array(NULL, ((rt0.c2)%(v0.c0)), json_remove(x'', rt0.c0), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END) ASC);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((((rt0.c0 IN (rt0.c1))))>((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(v0.c0)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 IN (rt0.c1))))>((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(v0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((((rt0.c0 IN (rt0.c1))))>((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(v0.c0)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 IN (rt0.c1))))>((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(v0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((((rt0.c0 IN (rt0.c1))))>((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(v0.c0)))AND(v0.c0))))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0))<=((v0.c0))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0))<=((v0.c0))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0))<=((v0.c0))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0))<=((v0.c0))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0))<=((v0.c0))) COLLATE NOCASE;
SELECT ALL * FROM v0 WHERE (0.5637013197646229);
SELECT SUM(count) FROM (SELECT ((0.5637013197646229) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.5637013197646229);
SELECT SUM(count) FROM (SELECT ((0.5637013197646229) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.5637013197646229);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((((NOT (v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 NOT INDEXED NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((((NOT (v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 NOT INDEXED NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((((NOT (v0.c0))) ISNULL));
SELECT * FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND('373625860')) COLLATE RTRIM) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND('373625860')) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND('373625860')) COLLATE RTRIM) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND('373625860')) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND('373625860')) COLLATE RTRIM) ORDER BY rt0.c2  NULLS FIRST;
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (((rt0.c2 IN ()))<=(((((NULL)AND(rt0.c1)))AND(rt0.c2)))) WHERE ((NOT (TRIM(v0.c0, NULL)))) ORDER BY ((((((((rt0.c1)OR('')))OR((- (v0.c0)))))AND(((0.47650346196782345)-(v0.c0)))))AND(v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((NOT (TRIM(v0.c0, NULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((rt0.c2 IN ()))<=(((((NULL)AND(rt0.c1)))AND(rt0.c2)))) ORDER BY ((((((((rt0.c1)OR('')))OR((- (v0.c0)))))AND(((0.47650346196782345)-(v0.c0)))))AND(v0.c0 COLLATE BINARY)));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (((rt0.c2 IN ()))<=(((((NULL)AND(rt0.c1)))AND(rt0.c2)))) WHERE ((NOT (TRIM(v0.c0, NULL)))) ORDER BY ((((((((rt0.c1)OR('')))OR((- (v0.c0)))))AND(((0.47650346196782345)-(v0.c0)))))AND(v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((NOT (TRIM(v0.c0, NULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((rt0.c2 IN ()))<=(((((NULL)AND(rt0.c1)))AND(rt0.c2)))) ORDER BY ((((((((rt0.c1)OR('')))OR((- (v0.c0)))))AND(((0.47650346196782345)-(v0.c0)))))AND(v0.c0 COLLATE BINARY)));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (((rt0.c2 IN ()))<=(((((NULL)AND(rt0.c1)))AND(rt0.c2)))) WHERE ((NOT (TRIM(v0.c0, NULL)))) ORDER BY ((((((((rt0.c1)OR('')))OR((- (v0.c0)))))AND(((0.47650346196782345)-(v0.c0)))))AND(v0.c0 COLLATE BINARY));
SELECT ALL * FROM rt0, v0 WHERE (((((~ (v0.c0)), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR('104056363')))OR(rt0.c1)), CASE rt0.c1  WHEN NULL THEN v0.c0 END))=((v0.c0 COLLATE RTRIM, (~ (0.347091857659902)), (rt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ((((((~ (v0.c0)), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR('104056363')))OR(rt0.c1)), CASE rt0.c1  WHEN NULL THEN v0.c0 END))=((v0.c0 COLLATE RTRIM, (~ (0.347091857659902)), (rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((~ (v0.c0)), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR('104056363')))OR(rt0.c1)), CASE rt0.c1  WHEN NULL THEN v0.c0 END))=((v0.c0 COLLATE RTRIM, (~ (0.347091857659902)), (rt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ((((((~ (v0.c0)), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR('104056363')))OR(rt0.c1)), CASE rt0.c1  WHEN NULL THEN v0.c0 END))=((v0.c0 COLLATE RTRIM, (~ (0.347091857659902)), (rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((~ (v0.c0)), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR('104056363')))OR(rt0.c1)), CASE rt0.c1  WHEN NULL THEN v0.c0 END))=((v0.c0 COLLATE RTRIM, (~ (0.347091857659902)), (rt0.c0 IN ())))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON ((- (rt0.c1)) IN ()) WHERE (((((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR('pgD(id')))OR(v0.c0)))OR(rt0.c0)))+(((NULL)/(''))))) ORDER BY LIKELY(199415452) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR('pgD(id')))OR(v0.c0)))OR(rt0.c0)))+(((NULL)/(''))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((- (rt0.c1)) IN ()) ORDER BY LIKELY(199415452) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON ((- (rt0.c1)) IN ()) WHERE (((((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR('pgD(id')))OR(v0.c0)))OR(rt0.c0)))+(((NULL)/(''))))) ORDER BY LIKELY(199415452) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR('pgD(id')))OR(v0.c0)))OR(rt0.c0)))+(((NULL)/(''))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((- (rt0.c1)) IN ()) ORDER BY LIKELY(199415452) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON ((- (rt0.c1)) IN ()) WHERE (((((((((((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR('pgD(id')))OR(v0.c0)))OR(rt0.c0)))+(((NULL)/(''))))) ORDER BY LIKELY(199415452) COLLATE RTRIM DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (JULIANDAY((rt0.c2 IN ()), ((rt0.c2)>=(rt0.c2)), (rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((JULIANDAY((rt0.c2 IN ()), ((rt0.c2)>=(rt0.c2)), (rt0.c0 IN ()))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (JULIANDAY((rt0.c2 IN ()), ((rt0.c2)>=(rt0.c2)), (rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((JULIANDAY((rt0.c2 IN ()), ((rt0.c2)>=(rt0.c2)), (rt0.c0 IN ()))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (JULIANDAY((rt0.c2 IN ()), ((rt0.c2)>=(rt0.c2)), (rt0.c0 IN ())));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 END)|((v0.c0 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 END)|((v0.c0 IN (rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 END)|((v0.c0 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 END)|((v0.c0 IN (rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 END)|((v0.c0 IN (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c0)+(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)+(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c0)+(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)+(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c0)+(rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c1) ISNULL))OR(v0.c0 COLLATE NOCASE)))AND(CAST(NULL AS INTEGER)))) ORDER BY ((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))) IN ()) ASC  NULLS LAST, UPPER((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) ISNULL))OR(v0.c0 COLLATE NOCASE)))AND(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))) IN ()) ASC  NULLS LAST, UPPER((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c1) ISNULL))OR(v0.c0 COLLATE NOCASE)))AND(CAST(NULL AS INTEGER)))) ORDER BY ((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))) IN ()) ASC  NULLS LAST, UPPER((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) ISNULL))OR(v0.c0 COLLATE NOCASE)))AND(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))) IN ()) ASC  NULLS LAST, UPPER((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c1) ISNULL))OR(v0.c0 COLLATE NOCASE)))AND(CAST(NULL AS INTEGER)))) ORDER BY ((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))) IN ()) ASC  NULLS LAST, UPPER((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((LIKELY(DISTINCT rt0.c0)) BETWEEN (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(v0.c0))) AND (CAST(rt0.c2 AS INTEGER)))) ORDER BY (((v0.c0)) BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT rt0.c0)) BETWEEN (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(v0.c0))) AND (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((v0.c0)) BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((LIKELY(DISTINCT rt0.c0)) BETWEEN (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(v0.c0))) AND (CAST(rt0.c2 AS INTEGER)))) ORDER BY (((v0.c0)) BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT rt0.c0)) BETWEEN (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(v0.c0))) AND (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((v0.c0)) BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((LIKELY(DISTINCT rt0.c0)) BETWEEN (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(v0.c0))) AND (CAST(rt0.c2 AS INTEGER)))) ORDER BY (((v0.c0)) BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END)))  NULLS LAST;
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((((((rt0.c1)LIKE(rt0.c2)))OR(((((((((rt0.c1)OR(0.988439135250066)))AND(rt0.c2)))OR(rt0.c1)))OR(v0.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)LIKE(rt0.c2)))OR(((((((((rt0.c1)OR(0.988439135250066)))AND(rt0.c2)))OR(rt0.c1)))OR(v0.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((((((rt0.c1)LIKE(rt0.c2)))OR(((((((((rt0.c1)OR(0.988439135250066)))AND(rt0.c2)))OR(rt0.c1)))OR(v0.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)LIKE(rt0.c2)))OR(((((((((rt0.c1)OR(0.988439135250066)))AND(rt0.c2)))OR(rt0.c1)))OR(v0.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((((((rt0.c1)LIKE(rt0.c2)))OR(((((((((rt0.c1)OR(0.988439135250066)))AND(rt0.c2)))OR(rt0.c1)))OR(v0.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((v0.c0 COLLATE NOCASE)AND(((rt0.c2)||(rt0.c1)))))AND(((v0.c0)<=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE NOCASE)AND(((rt0.c2)||(rt0.c1)))))AND(((v0.c0)<=(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((v0.c0 COLLATE NOCASE)AND(((rt0.c2)||(rt0.c1)))))AND(((v0.c0)<=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE NOCASE)AND(((rt0.c2)||(rt0.c1)))))AND(((v0.c0)<=(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((v0.c0 COLLATE NOCASE)AND(((rt0.c2)||(rt0.c1)))))AND(((v0.c0)<=(rt0.c1)))));
SELECT * FROM v0, rt0 WHERE (v0.c0) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c0)IS NOT(v0.c0))) AND (CAST(v0.c0 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c0)IS NOT(v0.c0))) AND (CAST(v0.c0 AS REAL))) ASC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (v0.c0) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c0)IS NOT(v0.c0))) AND (CAST(v0.c0 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c0)IS NOT(v0.c0))) AND (CAST(v0.c0 AS REAL))) ASC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (v0.c0) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c0)IS NOT(v0.c0))) AND (CAST(v0.c0 AS REAL))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)AND(NULL))) ORDER BY (NOT (LTRIM(rt0.c0, v0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)AND(NULL))) IS TRUE)  as count FROM v0, rt0 ORDER BY (NOT (LTRIM(rt0.c0, v0.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)AND(NULL))) ORDER BY (NOT (LTRIM(rt0.c0, v0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)AND(NULL))) IS TRUE)  as count FROM v0, rt0 ORDER BY (NOT (LTRIM(rt0.c0, v0.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)AND(NULL))) ORDER BY (NOT (LTRIM(rt0.c0, v0.c0))) DESC  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE ((+ (v0.c0))) ORDER BY ((rt0.c0)IS(((rt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((+ (v0.c0))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c0)IS(((rt0.c2) NOT NULL))));
SELECT * FROM rt0, v0 WHERE ((+ (v0.c0))) ORDER BY ((rt0.c0)IS(((rt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((+ (v0.c0))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c0)IS(((rt0.c2) NOT NULL))));
SELECT * FROM rt0, v0 WHERE ((+ (v0.c0))) ORDER BY ((rt0.c0)IS(((rt0.c2) NOT NULL)));
SELECT * FROM v0 WHERE (CAST(CHANGES() AS TEXT)) ORDER BY 541545621 COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CHANGES() AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY 541545621 COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM v0 WHERE (CAST(CHANGES() AS TEXT)) ORDER BY 541545621 COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CHANGES() AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY 541545621 COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((((rt0.c0)-(v0.c0))) BETWEEN ('' COLLATE RTRIM) AND (x''))) ORDER BY (((((v0.c0, 0.4263912954194641, rt0.c1))<((rt0.c0, v0.c0, rt0.c2))))|(TRIM(DISTINCT rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)-(v0.c0))) BETWEEN ('' COLLATE RTRIM) AND (x''))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY (((((v0.c0, 0.4263912954194641, rt0.c1))<((rt0.c0, v0.c0, rt0.c2))))|(TRIM(DISTINCT rt0.c0))));
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((((rt0.c0)-(v0.c0))) BETWEEN ('' COLLATE RTRIM) AND (x''))) ORDER BY (((((v0.c0, 0.4263912954194641, rt0.c1))<((rt0.c0, v0.c0, rt0.c2))))|(TRIM(DISTINCT rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)-(v0.c0))) BETWEEN ('' COLLATE RTRIM) AND (x''))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY (((((v0.c0, 0.4263912954194641, rt0.c1))<((rt0.c0, v0.c0, rt0.c2))))|(TRIM(DISTINCT rt0.c0))));
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((((rt0.c0)-(v0.c0))) BETWEEN ('' COLLATE RTRIM) AND (x''))) ORDER BY (((((v0.c0, 0.4263912954194641, rt0.c1))<((rt0.c0, v0.c0, rt0.c2))))|(TRIM(DISTINCT rt0.c0)));
SELECT ALL * FROM v0 WHERE ((~ (((v0.c0)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0)*(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((~ (((v0.c0)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0)*(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((~ (((v0.c0)*(v0.c0)))));
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN '^tr\r_(D9){.' THEN rt0.c1 WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c2)IS(rt0.c0)) THEN ((0xffffffffb3a3823b) NOTNULL) ELSE ((rt0.c1)==(x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '^tr\r_(D9){.' THEN rt0.c1 WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c2)IS(rt0.c0)) THEN ((0xffffffffb3a3823b) NOTNULL) ELSE ((rt0.c1)==(x'')) END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN '^tr\r_(D9){.' THEN rt0.c1 WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c2)IS(rt0.c0)) THEN ((0xffffffffb3a3823b) NOTNULL) ELSE ((rt0.c1)==(x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '^tr\r_(D9){.' THEN rt0.c1 WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c2)IS(rt0.c0)) THEN ((0xffffffffb3a3823b) NOTNULL) ELSE ((rt0.c1)==(x'')) END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN '^tr\r_(D9){.' THEN rt0.c1 WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c2)IS(rt0.c0)) THEN ((0xffffffffb3a3823b) NOTNULL) ELSE ((rt0.c1)==(x'')) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))&((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))&((+ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))&((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))&((+ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))&((+ (rt0.c1)))));
SELECT * FROM rt0 WHERE (SUBSTR(CAST(rt0.c2 AS REAL), ((rt0.c1)+(rt0.c0)))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((SUBSTR(CAST(rt0.c2 AS REAL), ((rt0.c1)+(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC);
SELECT * FROM rt0 WHERE (SUBSTR(CAST(rt0.c2 AS REAL), ((rt0.c1)+(rt0.c0)))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((SUBSTR(CAST(rt0.c2 AS REAL), ((rt0.c1)+(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC);
SELECT * FROM rt0 WHERE (SUBSTR(CAST(rt0.c2 AS REAL), ((rt0.c1)+(rt0.c0)))) ORDER BY rt0.c2 ASC;
SELECT * FROM rt0 WHERE (CAST('p횜' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST('p횜' AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST('p횜' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST('p횜' AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST('p횜' AS TEXT));
SELECT * FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) IN ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) IN ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) IN ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) IN ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) IN ((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) BETWEEN (rt0.c1) AND (((x'')>=(rt0.c1))))) ORDER BY ((x'') IS FALSE);
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) BETWEEN (rt0.c1) AND (((x'')>=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((x'') IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) BETWEEN (rt0.c1) AND (((x'')>=(rt0.c1))))) ORDER BY ((x'') IS FALSE);
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) BETWEEN (rt0.c1) AND (((x'')>=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((x'') IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) BETWEEN (rt0.c1) AND (((x'')>=(rt0.c1))))) ORDER BY ((x'') IS FALSE);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CASE WHEN ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c1)!=(rt0.c2)) WHEN v0.c0 COLLATE BINARY THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((((((((v0.c0)AND('1468356087')))OR(rt0.c0)))AND(rt0.c2)))OR(v0.c0)) THEN TRIM(DISTINCT rt0.c0) WHEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))) THEN rt0.c0 COLLATE RTRIM WHEN v0.c0 COLLATE NOCASE THEN ((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) ELSE (((NULL, v0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c0, rt0.c2)) AND ((v0.c0, rt0.c2, rt0.c1))) END WHERE (HEX((- (rt0.c1)))) ORDER BY ((((rt0.c2)<=(rt0.c2)))/(((rt0.c2) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX((- (rt0.c1)))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CASE WHEN ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c1)<>(rt0.c2)) WHEN v0.c0 COLLATE BINARY THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((((((((v0.c0)AND('1468356087')))OR(rt0.c0)))AND(rt0.c2)))OR(v0.c0)) THEN TRIM(DISTINCT rt0.c0) WHEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))) THEN rt0.c0 COLLATE RTRIM WHEN v0.c0 COLLATE NOCASE THEN ((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) ELSE (((NULL, v0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c0, rt0.c2)) AND ((v0.c0, rt0.c2, rt0.c1))) END ORDER BY ((((rt0.c2)<=(rt0.c2)))/(((rt0.c2) NOT NULL))) DESC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CASE WHEN ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c1)!=(rt0.c2)) WHEN v0.c0 COLLATE BINARY THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((((((((v0.c0)AND('1468356087')))OR(rt0.c0)))AND(rt0.c2)))OR(v0.c0)) THEN TRIM(DISTINCT rt0.c0) WHEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))) THEN rt0.c0 COLLATE RTRIM WHEN v0.c0 COLLATE NOCASE THEN ((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) ELSE (((NULL, v0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c0, rt0.c2)) AND ((v0.c0, rt0.c2, rt0.c1))) END WHERE (HEX((- (rt0.c1)))) ORDER BY ((((rt0.c2)<=(rt0.c2)))/(((rt0.c2) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX((- (rt0.c1)))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CASE WHEN ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c1)<>(rt0.c2)) WHEN v0.c0 COLLATE BINARY THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((((((((v0.c0)AND('1468356087')))OR(rt0.c0)))AND(rt0.c2)))OR(v0.c0)) THEN TRIM(DISTINCT rt0.c0) WHEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))) THEN rt0.c0 COLLATE RTRIM WHEN v0.c0 COLLATE NOCASE THEN ((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) ELSE (((NULL, v0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c0, rt0.c2)) AND ((v0.c0, rt0.c2, rt0.c1))) END ORDER BY ((((rt0.c2)<=(rt0.c2)))/(((rt0.c2) NOT NULL))) DESC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CASE WHEN ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c1)!=(rt0.c2)) WHEN v0.c0 COLLATE BINARY THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((((((((v0.c0)AND('1468356087')))OR(rt0.c0)))AND(rt0.c2)))OR(v0.c0)) THEN TRIM(DISTINCT rt0.c0) WHEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))) THEN rt0.c0 COLLATE RTRIM WHEN v0.c0 COLLATE NOCASE THEN ((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) ELSE (((NULL, v0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c0, rt0.c2)) AND ((v0.c0, rt0.c2, rt0.c1))) END WHERE (HEX((- (rt0.c1)))) ORDER BY ((((rt0.c2)<=(rt0.c2)))/(((rt0.c2) NOT NULL))) DESC;
SELECT ALL * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))|((v0.c0 IN ())))) ORDER BY (+ (((v0.c0)IS NOT(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))|((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c0)IS NOT(v0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))|((v0.c0 IN ())))) ORDER BY (+ (((v0.c0)IS NOT(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))|((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c0)IS NOT(v0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))|((v0.c0 IN ())))) ORDER BY (+ (((v0.c0)IS NOT(v0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (0.5717245063863962 COLLATE RTRIM) ORDER BY CAST((~ (NULL)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((0.5717245063863962 COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY CAST((~ (NULL)) AS TEXT));
SELECT COUNT(*) FROM v0 WHERE (0.5717245063863962 COLLATE RTRIM) ORDER BY CAST((~ (NULL)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((0.5717245063863962 COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY CAST((~ (NULL)) AS TEXT));
SELECT COUNT(*) FROM v0 WHERE (0.5717245063863962 COLLATE RTRIM) ORDER BY CAST((~ (NULL)) AS TEXT);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE NOCASE) ORDER BY CASE WHEN rt0.c0 THEN (+ (rt0.c0)) WHEN 0.22341330357309952 THEN (((rt0.c1))>((rt0.c2))) WHEN (- (rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN (rt0.c1 IN (rt0.c0)) THEN (rt0.c2 IN ()) WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN rt0.c2 ELSE ((rt0.c1)<(rt0.c2)) END ASC  NULLS FIRST, ((((rt0.c2)GLOB(0.0028919736183786737))) BETWEEN ((rt0.c1 IN (rt0.c2))) AND (((rt0.c2)OR(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY CASE WHEN rt0.c0 THEN (+ (rt0.c0)) WHEN 0.22341330357309952 THEN (((rt0.c1))>((rt0.c2))) WHEN (- (rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN (rt0.c1 IN (rt0.c0)) THEN (rt0.c2 IN ()) WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN rt0.c2 ELSE ((rt0.c1)<(rt0.c2)) END ASC  NULLS FIRST, ((((rt0.c2)GLOB(0.0028919736183786737))) BETWEEN ((rt0.c1 IN (rt0.c2))) AND (((rt0.c2)OR(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE NOCASE) ORDER BY CASE WHEN rt0.c0 THEN (+ (rt0.c0)) WHEN 0.22341330357309952 THEN (((rt0.c1))>((rt0.c2))) WHEN (- (rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN (rt0.c1 IN (rt0.c0)) THEN (rt0.c2 IN ()) WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN rt0.c2 ELSE ((rt0.c1)<(rt0.c2)) END ASC  NULLS FIRST, ((((rt0.c2)GLOB(0.0028919736183786737))) BETWEEN ((rt0.c1 IN (rt0.c2))) AND (((rt0.c2)OR(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY CASE WHEN rt0.c0 THEN (+ (rt0.c0)) WHEN 0.22341330357309952 THEN (((rt0.c1))>((rt0.c2))) WHEN (- (rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN (rt0.c1 IN (rt0.c0)) THEN (rt0.c2 IN ()) WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN rt0.c2 ELSE ((rt0.c1)<(rt0.c2)) END ASC  NULLS FIRST, ((((rt0.c2)GLOB(0.0028919736183786737))) BETWEEN ((rt0.c1 IN (rt0.c2))) AND (((rt0.c2)OR(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE NOCASE) ORDER BY CASE WHEN rt0.c0 THEN (+ (rt0.c0)) WHEN 0.22341330357309952 THEN (((rt0.c1))>((rt0.c2))) WHEN (- (rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN (rt0.c1 IN (rt0.c0)) THEN (rt0.c2 IN ()) WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN rt0.c2 ELSE ((rt0.c1)<(rt0.c2)) END ASC  NULLS FIRST, ((((rt0.c2)GLOB(0.0028919736183786737))) BETWEEN ((rt0.c1 IN (rt0.c2))) AND (((rt0.c2)OR(rt0.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (json_remove(((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)), (((rt0.c0))<>((rt0.c2))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)), (((rt0.c0))<>((rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY v0.c0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (json_remove(((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)), (((rt0.c0))<>((rt0.c2))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)), (((rt0.c0))<>((rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY v0.c0);
SELECT COUNT(*) FROM v0 WHERE (((-953401929 COLLATE RTRIM)%(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((-953401929 COLLATE RTRIM)%(v0.c0))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((-953401929 COLLATE RTRIM)%(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((-953401929 COLLATE RTRIM)%(v0.c0))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((-953401929 COLLATE RTRIM)%(v0.c0)));
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c2) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c2) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c2) IS TRUE) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS BLOB)) ORDER BY ((v0.c0 COLLATE BINARY) NOT BETWEEN ((+ (v0.c0))) AND ((+ (x'ecbf'))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY) NOT BETWEEN ((+ (v0.c0))) AND ((+ (x'ecbf')))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS BLOB)) ORDER BY ((v0.c0 COLLATE BINARY) NOT BETWEEN ((+ (v0.c0))) AND ((+ (x'ecbf'))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY) NOT BETWEEN ((+ (v0.c0))) AND ((+ (x'ecbf')))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS BLOB)) ORDER BY ((v0.c0 COLLATE BINARY) NOT BETWEEN ((+ (v0.c0))) AND ((+ (x'ecbf'))));
SELECT COUNT(*) FROM v0, rt0 WHERE (((('0|6'))!=((CAST(x'28fa' AS REAL)))));
SELECT SUM(count) FROM (SELECT ((((('0|6'))!=((CAST(x'28fa' AS REAL))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((('0|6'))!=((CAST(x'28fa' AS REAL)))));
SELECT SUM(count) FROM (SELECT ((((('0|6'))!=((CAST(x'28fa' AS REAL))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((('0|6'))!=((CAST(x'28fa' AS REAL)))));
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c1) IS FALSE)))) ORDER BY ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM  NULLS FIRST, 0.6445194821050126, (- ((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0)))))  NULLS FIRST, ((rt0.c0)<=(rt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM  NULLS FIRST, 0.6445194821050126, (- ((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0)))))  NULLS FIRST, ((rt0.c0)<=(rt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c1) IS FALSE)))) ORDER BY ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM  NULLS FIRST, 0.6445194821050126, (- ((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0)))))  NULLS FIRST, ((rt0.c0)<=(rt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM  NULLS FIRST, 0.6445194821050126, (- ((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0)))))  NULLS FIRST, ((rt0.c0)<=(rt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c1) IS FALSE)))) ORDER BY ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM  NULLS FIRST, 0.6445194821050126, (- ((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0)))))  NULLS FIRST, ((rt0.c0)<=(rt0.c0)) COLLATE RTRIM;
SELECT COUNT(*) FROM rt0 WHERE (((((((0.7798716444867042)+('-347416505')))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((((rt0.c0)AND('492133379')))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.7798716444867042)+('-347416505')))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((((rt0.c0)AND('492133379')))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE (((((((0.7798716444867042)+('-347416505')))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((((rt0.c0)AND('492133379')))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.7798716444867042)+('-347416505')))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((((rt0.c0)AND('492133379')))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE (((((((0.7798716444867042)+('-347416505')))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((((rt0.c0)AND('492133379')))AND(rt0.c0)))));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (((((~ (rt0.c1)))OR(CAST(rt0.c1 AS NUMERIC))))OR((NOT (rt0.c1)))) WHERE (NULL) ORDER BY (((((((((((v0.c0)) BETWEEN ((rt0.c2)) AND ((x'afc5'))))AND(((v0.c0)<<(rt0.c2)))))OR(v0.c0)))OR(CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)))AND(((x'') BETWEEN (rt0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((((~ (rt0.c1)))OR(CAST(rt0.c1 AS NUMERIC))))OR((NOT (rt0.c1)))) ORDER BY (((((((((((v0.c0)) BETWEEN ((rt0.c2)) AND ((x'afc5'))))AND(((v0.c0)<<(rt0.c2)))))OR(v0.c0)))OR(CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)))AND(((x'') BETWEEN (rt0.c0) AND (v0.c0)))));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (((((~ (rt0.c1)))OR(CAST(rt0.c1 AS NUMERIC))))OR((NOT (rt0.c1)))) WHERE (NULL) ORDER BY (((((((((((v0.c0)) BETWEEN ((rt0.c2)) AND ((x'afc5'))))AND(((v0.c0)<<(rt0.c2)))))OR(v0.c0)))OR(CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)))AND(((x'') BETWEEN (rt0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((((~ (rt0.c1)))OR(CAST(rt0.c1 AS NUMERIC))))OR((NOT (rt0.c1)))) ORDER BY (((((((((((v0.c0)) BETWEEN ((rt0.c2)) AND ((x'afc5'))))AND(((v0.c0)<<(rt0.c2)))))OR(v0.c0)))OR(CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)))AND(((x'') BETWEEN (rt0.c0) AND (v0.c0)))));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (((((~ (rt0.c1)))OR(CAST(rt0.c1 AS NUMERIC))))OR((NOT (rt0.c1)))) WHERE (NULL) ORDER BY (((((((((((v0.c0)) BETWEEN ((rt0.c2)) AND ((x'afc5'))))AND(((v0.c0)<<(rt0.c2)))))OR(v0.c0)))OR(CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)))AND(((x'') BETWEEN (rt0.c0) AND (v0.c0))));
SELECT * FROM v0, rt0 WHERE (CAST(((rt0.c1)IS NOT(rt0.c2)) AS NUMERIC)) ORDER BY ((CHAR(rt0.c1)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)IS NOT(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CHAR(rt0.c1)) NOTNULL) DESC);
SELECT * FROM v0, rt0 WHERE (CAST(((rt0.c1)IS NOT(rt0.c2)) AS NUMERIC)) ORDER BY ((CHAR(rt0.c1)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)IS NOT(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CHAR(rt0.c1)) NOTNULL) DESC);
SELECT * FROM v0, rt0 WHERE (CAST(((rt0.c1)IS NOT(rt0.c2)) AS NUMERIC)) ORDER BY ((CHAR(rt0.c1)) NOTNULL) DESC;
SELECT * FROM rt0, v0 WHERE ((((x'' IN ()))%(rt0.c1 COLLATE BINARY))) ORDER BY (((((rt0.c2)|(rt0.c0))))<=(((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((x'' IN ()))%(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c2)|(rt0.c0))))<=(((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))))))  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((((x'' IN ()))%(rt0.c1 COLLATE BINARY))) ORDER BY (((((rt0.c2)|(rt0.c0))))<=(((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((x'' IN ()))%(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c2)|(rt0.c0))))<=(((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))))))  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((((x'' IN ()))%(rt0.c1 COLLATE BINARY))) ORDER BY (((((rt0.c2)|(rt0.c0))))<=(((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))))))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)>('3U8'))))>=(((+ (v0.c0)))))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)>('3U8'))))>=(((+ (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)>('3U8'))))>=(((+ (v0.c0)))))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)>('3U8'))))>=(((+ (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)>('3U8'))))>=(((+ (v0.c0)))))) ORDER BY NULL ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (json_array_length(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (json_array_length(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (json_array_length(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))));
SELECT ALL * FROM v0, rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS REAL)) ORDER BY (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) IN ())  NULLS FIRST, ((((rt0.c0)LIKE(rt0.c2)))+((rt0.c0 IN (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS REAL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) IN ())  NULLS FIRST, ((((rt0.c0)LIKE(rt0.c2)))+((rt0.c0 IN (rt0.c0))))  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS REAL)) ORDER BY (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) IN ())  NULLS FIRST, ((((rt0.c0)LIKE(rt0.c2)))+((rt0.c0 IN (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS REAL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) IN ())  NULLS FIRST, ((((rt0.c0)LIKE(rt0.c2)))+((rt0.c0 IN (rt0.c0))))  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS REAL)) ORDER BY (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) IN ())  NULLS FIRST, ((((rt0.c0)LIKE(rt0.c2)))+((rt0.c0 IN (rt0.c0))))  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (CASE WHEN (~ (rt0.c1)) THEN x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt0.c1)) THEN x'' END) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CASE WHEN (~ (rt0.c1)) THEN x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt0.c1)) THEN x'' END) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CASE WHEN (~ (rt0.c1)) THEN x'' END);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN CAST(rt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN CAST(rt0.c1 AS REAL) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN CAST(rt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN CAST(rt0.c1 AS REAL) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN CAST(rt0.c1 AS REAL) END);
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c2) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOTNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c2) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOTNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c2) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2, rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND (rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c2, rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2, rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND (rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c2, rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN (rt0.c2, rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND (rt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, v0 WHERE ('2091058866') ORDER BY (((v0.c0, rt0.c2, rt0.c2, v0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, v0.c0, rt0.c0, rt0.c0, rt0.c1)) AND ((v0.c0, v0.c0, rt0.c2, v0.c0, rt0.c1))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('2091058866') IS TRUE)  as count FROM rt0, v0 ORDER BY (((v0.c0, rt0.c2, rt0.c2, v0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, v0.c0, rt0.c0, rt0.c0, rt0.c1)) AND ((v0.c0, v0.c0, rt0.c2, v0.c0, rt0.c1))) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE ('2091058866') ORDER BY (((v0.c0, rt0.c2, rt0.c2, v0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, v0.c0, rt0.c0, rt0.c0, rt0.c1)) AND ((v0.c0, v0.c0, rt0.c2, v0.c0, rt0.c1))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('2091058866') IS TRUE)  as count FROM rt0, v0 ORDER BY (((v0.c0, rt0.c2, rt0.c2, v0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, v0.c0, rt0.c0, rt0.c0, rt0.c1)) AND ((v0.c0, v0.c0, rt0.c2, v0.c0, rt0.c1))) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE ('2091058866') ORDER BY (((v0.c0, rt0.c2, rt0.c2, v0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, v0.c0, rt0.c0, rt0.c0, rt0.c1)) AND ((v0.c0, v0.c0, rt0.c2, v0.c0, rt0.c1))) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((NOT (rt0.c2))))=((0.2814199383044642)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((NOT (rt0.c2))))=((0.2814199383044642)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((NOT (rt0.c2))))=((0.2814199383044642)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((NOT (rt0.c2))))=((0.2814199383044642)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((NOT (rt0.c2))))=((0.2814199383044642)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((~ ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0))  WHEN rt0.c1 COLLATE RTRIM THEN rt0.c1 WHEN v0.c0 THEN ((rt0.c0)LIKE(rt0.c0)) WHEN (+ (rt0.c2)) THEN ((((v0.c0)AND(rt0.c1)))AND(v0.c0)) WHEN CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END THEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(rt0.c1)))AND(rt0.c2)) WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END THEN (+ (rt0.c2)) END) ORDER BY (+ (((rt0.c0) NOT BETWEEN (-2078903041) AND (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0))  WHEN rt0.c1 COLLATE RTRIM THEN rt0.c1 WHEN v0.c0 THEN ((rt0.c0)LIKE(rt0.c0)) WHEN (+ (rt0.c2)) THEN ((((v0.c0)AND(rt0.c1)))AND(v0.c0)) WHEN CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END THEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(rt0.c1)))AND(rt0.c2)) WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END THEN (+ (rt0.c2)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ (((rt0.c0) NOT BETWEEN (-2078903041) AND (rt0.c0))))  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0))  WHEN rt0.c1 COLLATE RTRIM THEN rt0.c1 WHEN v0.c0 THEN ((rt0.c0)LIKE(rt0.c0)) WHEN (+ (rt0.c2)) THEN ((((v0.c0)AND(rt0.c1)))AND(v0.c0)) WHEN CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END THEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(rt0.c1)))AND(rt0.c2)) WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END THEN (+ (rt0.c2)) END) ORDER BY (+ (((rt0.c0) NOT BETWEEN (-2078903041) AND (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0))  WHEN rt0.c1 COLLATE RTRIM THEN rt0.c1 WHEN v0.c0 THEN ((rt0.c0)LIKE(rt0.c0)) WHEN (+ (rt0.c2)) THEN ((((v0.c0)AND(rt0.c1)))AND(v0.c0)) WHEN CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END THEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(rt0.c1)))AND(rt0.c2)) WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END THEN (+ (rt0.c2)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ (((rt0.c0) NOT BETWEEN (-2078903041) AND (rt0.c0))))  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0))  WHEN rt0.c1 COLLATE RTRIM THEN rt0.c1 WHEN v0.c0 THEN ((rt0.c0)LIKE(rt0.c0)) WHEN (+ (rt0.c2)) THEN ((((v0.c0)AND(rt0.c1)))AND(v0.c0)) WHEN CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END THEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(rt0.c1)))AND(rt0.c2)) WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END THEN (+ (rt0.c2)) END) ORDER BY (+ (((rt0.c0) NOT BETWEEN (-2078903041) AND (rt0.c0))))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (DATETIME('187144908', v0.c0, ((v0.c0)IS(v0.c0)), SQLITE_COMPILEOPTION_USED(v0.c0), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN -2003591285 END));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME('187144908', v0.c0, ((v0.c0)IS(v0.c0)), SQLITE_COMPILEOPTION_USED(v0.c0), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN -2003591285 END)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (DATETIME('187144908', v0.c0, ((v0.c0)IS(v0.c0)), SQLITE_COMPILEOPTION_USED(v0.c0), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN -2003591285 END));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME('187144908', v0.c0, ((v0.c0)IS(v0.c0)), SQLITE_COMPILEOPTION_USED(v0.c0), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN -2003591285 END)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (DATETIME('187144908', v0.c0, ((v0.c0)IS(v0.c0)), SQLITE_COMPILEOPTION_USED(v0.c0), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN -2003591285 END));
SELECT COUNT(*) FROM v0, rt0 WHERE (((v0.c0)-(rt0.c0)) COLLATE BINARY) ORDER BY rt0.c2  NULLS FIRST, (~ (((rt0.c1)>=(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0)-(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c2  NULLS FIRST, (~ (((rt0.c1)>=(rt0.c0)))) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((v0.c0)-(rt0.c0)) COLLATE BINARY) ORDER BY rt0.c2  NULLS FIRST, (~ (((rt0.c1)>=(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0)-(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c2  NULLS FIRST, (~ (((rt0.c1)>=(rt0.c0)))) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((v0.c0)-(rt0.c0)) COLLATE BINARY) ORDER BY rt0.c2  NULLS FIRST, (~ (((rt0.c1)>=(rt0.c0)))) ASC;
SELECT ALL * FROM v0, rt0 WHERE (((NULL)>(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((NULL)>(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((NULL)>(CAST(v0.c0 AS REAL))));
SELECT * FROM rt0, v0 WHERE (((((v0.c0) IS TRUE)) BETWEEN (((((rt0.c2)OR(v0.c0)))AND(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE)) BETWEEN (((((rt0.c2)OR(v0.c0)))AND(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((v0.c0) IS TRUE)) BETWEEN (((((rt0.c2)OR(v0.c0)))AND(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE)) BETWEEN (((((rt0.c2)OR(v0.c0)))AND(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((v0.c0) IS TRUE)) BETWEEN (((((rt0.c2)OR(v0.c0)))AND(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((rt0.c2 IN ()) IN ()) WHERE (((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((rt0.c2 IN ()) IN ()));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((rt0.c2 IN ()) IN ()) WHERE (((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((rt0.c2 IN ()) IN ()));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((rt0.c2 IN ()) IN ()) WHERE (((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))) NOT NULL));
SELECT * FROM v0, rt0 WHERE (x'') ORDER BY CAST((v0.c0 IN ()) AS NUMERIC) DESC  NULLS FIRST, ((0.7925917775577562) IS TRUE), CASE WHEN ((v0.c0)<<(rt0.c0)) THEN v0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((v0.c0 IN ()) AS NUMERIC) DESC  NULLS FIRST, ((0.7925917775577562) IS TRUE), CASE WHEN ((v0.c0)<<(rt0.c0)) THEN v0.c0 END  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (x'') ORDER BY CAST((v0.c0 IN ()) AS NUMERIC) DESC  NULLS FIRST, ((0.7925917775577562) IS TRUE), CASE WHEN ((v0.c0)<<(rt0.c0)) THEN v0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((v0.c0 IN ()) AS NUMERIC) DESC  NULLS FIRST, ((0.7925917775577562) IS TRUE), CASE WHEN ((v0.c0)<<(rt0.c0)) THEN v0.c0 END  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (x'') ORDER BY CAST((v0.c0 IN ()) AS NUMERIC) DESC  NULLS FIRST, ((0.7925917775577562) IS TRUE), CASE WHEN ((v0.c0)<<(rt0.c0)) THEN v0.c0 END  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ('' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('' COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('' COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('' COLLATE RTRIM);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((NULLIF(rt0.c0, v0.c0))AND(v0.c0)))AND(((v0.c0)<>(0.8928234428861659))))) ORDER BY ((rt0.c2) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(rt0.c0, v0.c0))AND(v0.c0)))AND(((v0.c0)<>(0.8928234428861659))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c2) NOTNULL) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((NULLIF(rt0.c0, v0.c0))AND(v0.c0)))AND(((v0.c0)<>(0.8928234428861659))))) ORDER BY ((rt0.c2) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(rt0.c0, v0.c0))AND(v0.c0)))AND(((v0.c0)<>(0.8928234428861659))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c2) NOTNULL) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((NULLIF(rt0.c0, v0.c0))AND(v0.c0)))AND(((v0.c0)<>(0.8928234428861659))))) ORDER BY ((rt0.c2) NOTNULL) ASC;
SELECT * FROM v0 WHERE (((NULL)<=(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<=(v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((NULL)<=(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<=(v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((NULL)<=(v0.c0)));
SELECT COUNT(*) FROM rt0 WHERE (ROUND((NOT (rt0.c1)), ((rt0.c0) NOTNULL))) ORDER BY (((rt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2 COLLATE NOCASE, (NOT (rt0.c1)), CASE WHEN rt0.c2 THEN rt0.c1 END, x'920a', ((rt0.c1)==(rt0.c2)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((((rt0.c0)OR(rt0.c0)))AND(x'')), rt0.c2 COLLATE BINARY, ((rt0.c2) ISNULL), (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ROUND((NOT (rt0.c1)), ((rt0.c0) NOTNULL))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2 COLLATE NOCASE, (NOT (rt0.c1)), CASE WHEN rt0.c2 THEN rt0.c1 END, x'920a', ((rt0.c1)==(rt0.c2)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((((rt0.c0)OR(rt0.c0)))AND(x'')), rt0.c2 COLLATE BINARY, ((rt0.c2) ISNULL), (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2))))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (ROUND((NOT (rt0.c1)), ((rt0.c0) NOTNULL))) ORDER BY (((rt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2 COLLATE NOCASE, (NOT (rt0.c1)), CASE WHEN rt0.c2 THEN rt0.c1 END, x'920a', ((rt0.c1)==(rt0.c2)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((((rt0.c0)OR(rt0.c0)))AND(x'')), rt0.c2 COLLATE BINARY, ((rt0.c2) ISNULL), (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ROUND((NOT (rt0.c1)), ((rt0.c0) NOTNULL))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2 COLLATE NOCASE, (NOT (rt0.c1)), CASE WHEN rt0.c2 THEN rt0.c1 END, x'920a', ((rt0.c1)==(rt0.c2)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((((rt0.c0)OR(rt0.c0)))AND(x'')), rt0.c2 COLLATE BINARY, ((rt0.c2) ISNULL), (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2))))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (ROUND((NOT (rt0.c1)), ((rt0.c0) NOTNULL))) ORDER BY (((rt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2 COLLATE NOCASE, (NOT (rt0.c1)), CASE WHEN rt0.c2 THEN rt0.c1 END, x'920a', ((rt0.c1)==(rt0.c2)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((((rt0.c0)OR(rt0.c0)))AND(x'')), rt0.c2 COLLATE BINARY, ((rt0.c2) ISNULL), (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2))))))  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)<(v0.c0)) COLLATE BINARY) ORDER BY ((((v0.c0)AND(v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((((v0.c0))<=((v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)AND(v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((((v0.c0))<=((v0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)<(v0.c0)) COLLATE BINARY) ORDER BY ((((v0.c0)AND(v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((((v0.c0))<=((v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)AND(v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((((v0.c0))<=((v0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)<(v0.c0)) COLLATE BINARY) ORDER BY ((((v0.c0)AND(v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((((v0.c0))<=((v0.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL)) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY x'' DESC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL)) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY x'' DESC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL)) ORDER BY x'' DESC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN rt0.c0 END THEN rt0.c1 COLLATE BINARY ELSE CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN v0.c0 THEN rt0.c0 END THEN rt0.c1 COLLATE BINARY ELSE CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN rt0.c0 END THEN rt0.c1 COLLATE BINARY ELSE CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN v0.c0 THEN rt0.c0 END THEN rt0.c1 COLLATE BINARY ELSE CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN rt0.c0 END THEN rt0.c1 COLLATE BINARY ELSE CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END);
SELECT * FROM rt0 WHERE (((NULL COLLATE RTRIM) ISNULL)) ORDER BY (((((rt0.c1))<=((-1200530388)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1))<=((-1200530388)))) NOTNULL));
SELECT * FROM rt0 WHERE (((NULL COLLATE RTRIM) ISNULL)) ORDER BY (((((rt0.c1))<=((-1200530388)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1))<=((-1200530388)))) NOTNULL));
SELECT * FROM rt0 WHERE (((NULL COLLATE RTRIM) ISNULL)) ORDER BY (((((rt0.c1))<=((-1200530388)))) NOTNULL);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((v0.c0)OR(0X53b17dc2)))AND(rt0.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0))) AND (((rt0.c2) NOT BETWEEN (-2045686544) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(0x53b17dc2)))AND(rt0.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0))) AND (((rt0.c2) NOT BETWEEN (-2045686544) AND (v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((v0.c0)OR(0X53b17dc2)))AND(rt0.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0))) AND (((rt0.c2) NOT BETWEEN (-2045686544) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(0x53b17dc2)))AND(rt0.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0))) AND (((rt0.c2) NOT BETWEEN (-2045686544) AND (v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((v0.c0)OR(0X53b17dc2)))AND(rt0.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0))) AND (((rt0.c2) NOT BETWEEN (-2045686544) AND (v0.c0)))));
SELECT * FROM rt0, v0 WHERE (((0.06695744466904419) NOT NULL)) ORDER BY (((LOWER(rt0.c2)))>=(((((rt0.c0))<=((rt0.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.06695744466904419) NOT NULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((LOWER(rt0.c2)))>=(((((rt0.c0))<=((rt0.c0))))))  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (((0.06695744466904419) NOT NULL)) ORDER BY (((LOWER(rt0.c2)))>=(((((rt0.c0))<=((rt0.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.06695744466904419) NOT NULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((LOWER(rt0.c2)))>=(((((rt0.c0))<=((rt0.c0))))))  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (((0.06695744466904419) NOT NULL)) ORDER BY (((LOWER(rt0.c2)))>=(((((rt0.c0))<=((rt0.c0))))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c1);
SELECT * FROM rt0 WHERE (IFNULL(CAST(rt0.c0 AS REAL), (x'' IN ())));
SELECT SUM(count) FROM (SELECT ((IFNULL(CAST(rt0.c0 AS REAL), (x'' IN ()))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (IFNULL(CAST(rt0.c0 AS REAL), (x'' IN ())));
SELECT SUM(count) FROM (SELECT ((IFNULL(CAST(rt0.c0 AS REAL), (x'' IN ()))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (IFNULL(CAST(rt0.c0 AS REAL), (x'' IN ())));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (SQLITE_COMPILEOPTION_USED(0.184515507853394)) ORDER BY rt0.c0 DESC, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(0.184515507853394)) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c0 DESC, v0.c0 DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (SQLITE_COMPILEOPTION_USED(0.184515507853394)) ORDER BY rt0.c0 DESC, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(0.184515507853394)) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c0 DESC, v0.c0 DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (SQLITE_COMPILEOPTION_USED(0.184515507853394)) ORDER BY rt0.c0 DESC, v0.c0 DESC;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN ((rt0.c0) NOT NULL) THEN CAST(rt0.c0 AS TEXT) WHEN rt0.c1 COLLATE BINARY THEN (((rt0.c2))!=((v0.c0))) WHEN CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END THEN CASE rt0.c0  WHEN v0.c0 THEN v0.c0 END END WHERE (x'') ORDER BY ((rt0.c1)&(((0.6917159272504043)>>(rt0.c2)))) ASC  NULLS LAST, UPPER(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN ((rt0.c0) NOT NULL) THEN CAST(rt0.c0 AS TEXT) WHEN rt0.c1 COLLATE BINARY THEN (((rt0.c2))!=((v0.c0))) WHEN CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END THEN CASE rt0.c0  WHEN v0.c0 THEN v0.c0 END END ORDER BY ((rt0.c1)&(((0.6917159272504043)>>(rt0.c2)))) ASC  NULLS LAST, UPPER(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN ((rt0.c0) NOT NULL) THEN CAST(rt0.c0 AS TEXT) WHEN rt0.c1 COLLATE BINARY THEN (((rt0.c2))!=((v0.c0))) WHEN CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END THEN CASE rt0.c0  WHEN v0.c0 THEN v0.c0 END END WHERE (x'') ORDER BY ((rt0.c1)&(((0.6917159272504043)>>(rt0.c2)))) ASC  NULLS LAST, UPPER(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN ((rt0.c0) NOT NULL) THEN CAST(rt0.c0 AS TEXT) WHEN rt0.c1 COLLATE BINARY THEN (((rt0.c2))!=((v0.c0))) WHEN CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END THEN CASE rt0.c0  WHEN v0.c0 THEN v0.c0 END END ORDER BY ((rt0.c1)&(((0.6917159272504043)>>(rt0.c2)))) ASC  NULLS LAST, UPPER(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN ((rt0.c0) NOT NULL) THEN CAST(rt0.c0 AS TEXT) WHEN rt0.c1 COLLATE BINARY THEN (((rt0.c2))!=((v0.c0))) WHEN CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END THEN CASE rt0.c0  WHEN v0.c0 THEN v0.c0 END END WHERE (x'') ORDER BY ((rt0.c1)&(((0.6917159272504043)>>(rt0.c2)))) ASC  NULLS LAST, UPPER(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(0.2080671868161469)))OR(v0.c0)) AS INTEGER)) ORDER BY ((v0.c0)*(v0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(0.2080671868161469)))OR(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)*(v0.c0)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(0.2080671868161469)))OR(v0.c0)) AS INTEGER)) ORDER BY ((v0.c0)*(v0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(0.2080671868161469)))OR(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)*(v0.c0)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(0.2080671868161469)))OR(v0.c0)) AS INTEGER)) ORDER BY ((v0.c0)*(v0.c0)) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((TOTAL_CHANGES())||((rt0.c1 IN ()))) WHERE ((NOT (rt0.c2)) COLLATE NOCASE) ORDER BY ((((((rt0.c1)AND(rt0.c0)))OR(v0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((TOTAL_CHANGES())||((rt0.c1 IN ()))) ORDER BY ((((((rt0.c1)AND(rt0.c0)))OR(v0.c0))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((TOTAL_CHANGES())||((rt0.c1 IN ()))) WHERE ((NOT (rt0.c2)) COLLATE NOCASE) ORDER BY ((((((rt0.c1)AND(rt0.c0)))OR(v0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((TOTAL_CHANGES())||((rt0.c1 IN ()))) ORDER BY ((((((rt0.c1)AND(rt0.c0)))OR(v0.c0))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((TOTAL_CHANGES())||((rt0.c1 IN ()))) WHERE ((NOT (rt0.c2)) COLLATE NOCASE) ORDER BY ((((((rt0.c1)AND(rt0.c0)))OR(v0.c0))) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM rt0 INNER JOIN v0 ON (NOT (0X2f46dfa3)) WHERE ('') ORDER BY '78277369' ASC  NULLS LAST, (CAST(rt0.c1 AS NUMERIC) IN ()) DESC, 'T,xz'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (NOT (0x2f46dfa3)) ORDER BY '78277369' ASC  NULLS LAST, (CAST(rt0.c1 AS NUMERIC) IN ()) DESC, 'T,xz'  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN v0 ON (NOT (0X2f46dfa3)) WHERE ('') ORDER BY '78277369' ASC  NULLS LAST, (CAST(rt0.c1 AS NUMERIC) IN ()) DESC, 'T,xz'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (NOT (0x2f46dfa3)) ORDER BY '78277369' ASC  NULLS LAST, (CAST(rt0.c1 AS NUMERIC) IN ()) DESC, 'T,xz'  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN v0 ON (NOT (0X2f46dfa3)) WHERE ('') ORDER BY '78277369' ASC  NULLS LAST, (CAST(rt0.c1 AS NUMERIC) IN ()) DESC, 'T,xz'  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c1 COLLATE BINARY) ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c1) IS FALSE))) AND (((rt0.c2 IN (rt0.c1, v0.c0, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c1) IS FALSE))) AND (((rt0.c2 IN (rt0.c1, v0.c0, rt0.c0))))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c1 COLLATE BINARY) ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c1) IS FALSE))) AND (((rt0.c2 IN (rt0.c1, v0.c0, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c1) IS FALSE))) AND (((rt0.c2 IN (rt0.c1, v0.c0, rt0.c0))))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c1 COLLATE BINARY) ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c1) IS FALSE))) AND (((rt0.c2 IN (rt0.c1, v0.c0, rt0.c0)))));
SELECT ALL * FROM v0, rt0 WHERE (UNLIKELY(DISTINCT NULL)) ORDER BY (((((v0.c0)>=(v0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), 0.7114600247044542))>=((((((v0.c0)AND(rt0.c2)))OR(v0.c0)), rt0.c1 COLLATE RTRIM, rt0.c1 COLLATE BINARY))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((v0.c0)>=(v0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), 0.7114600247044542))>=((((((v0.c0)AND(rt0.c2)))OR(v0.c0)), rt0.c1 COLLATE RTRIM, rt0.c1 COLLATE BINARY))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (UNLIKELY(DISTINCT NULL)) ORDER BY (((((v0.c0)>=(v0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), 0.7114600247044542))>=((((((v0.c0)AND(rt0.c2)))OR(v0.c0)), rt0.c1 COLLATE RTRIM, rt0.c1 COLLATE BINARY))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((v0.c0)>=(v0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), 0.7114600247044542))>=((((((v0.c0)AND(rt0.c2)))OR(v0.c0)), rt0.c1 COLLATE RTRIM, rt0.c1 COLLATE BINARY))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (UNLIKELY(DISTINCT NULL)) ORDER BY (((((v0.c0)>=(v0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), 0.7114600247044542))>=((((((v0.c0)AND(rt0.c2)))OR(v0.c0)), rt0.c1 COLLATE RTRIM, rt0.c1 COLLATE BINARY))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (x'') ORDER BY ((((rt0.c0)%('/+')))>=(rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)%('/+')))>=(rt0.c2 COLLATE BINARY)));
SELECT * FROM rt0 WHERE (x'') ORDER BY ((((rt0.c0)%('/+')))>=(rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)%('/+')))>=(rt0.c2 COLLATE BINARY)));
SELECT * FROM rt0 WHERE (x'') ORDER BY ((((rt0.c0)%('/+')))>=(rt0.c2 COLLATE BINARY));
SELECT * FROM rt0 NATURAL JOIN v0 WHERE ('Z');
SELECT SUM(count) FROM (SELECT (('Z') IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE ('Z');
SELECT SUM(count) FROM (SELECT (('Z') IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE ('Z');
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE '0.24642296573389255' END) BETWEEN ('') AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))))) ORDER BY ((rt0.c0)/(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE '0.24642296573389255' END) BETWEEN ('') AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0)/(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE '0.24642296573389255' END) BETWEEN ('') AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))))) ORDER BY ((rt0.c0)/(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE '0.24642296573389255' END) BETWEEN ('') AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0)/(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE '0.24642296573389255' END) BETWEEN ('') AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))))) ORDER BY ((rt0.c0)/(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 END));
SELECT * FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN (0xffffffff96a4b90c)));
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN (0Xffffffff96a4b90c))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN (0xffffffff96a4b90c)));
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN (0Xffffffff96a4b90c))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN (0xffffffff96a4b90c)));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)||((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM)||((~ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)||((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM)||((~ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)||((~ (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END AS BLOB)) ORDER BY ((((((rt0.c1) IS FALSE))OR(CAST('-156508993' AS INTEGER))))OR(((rt0.c0) NOT NULL))) DESC  NULLS LAST, ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))/(CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1) IS FALSE))OR(CAST('-156508993' AS INTEGER))))OR(((rt0.c0) NOT NULL))) DESC  NULLS LAST, ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))/(CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END AS BLOB)) ORDER BY ((((((rt0.c1) IS FALSE))OR(CAST('-156508993' AS INTEGER))))OR(((rt0.c0) NOT NULL))) DESC  NULLS LAST, ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))/(CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1) IS FALSE))OR(CAST('-156508993' AS INTEGER))))OR(((rt0.c0) NOT NULL))) DESC  NULLS LAST, ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))/(CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END AS BLOB)) ORDER BY ((((((rt0.c1) IS FALSE))OR(CAST('-156508993' AS INTEGER))))OR(((rt0.c0) NOT NULL))) DESC  NULLS LAST, ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))/(CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((CASE 'BZ6'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)LIKE(LIKE(v0.c0, 0.18012019531599566, '1')));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((CASE 'BZ6'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)LIKE(LIKE(v0.c0, 0.18012019531599566, '1'))));
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((CASE 'BZ6'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)LIKE(LIKE(v0.c0, 0.18012019531599566, '1')));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((CASE 'BZ6'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)LIKE(LIKE(v0.c0, 0.18012019531599566, '1'))));
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((CASE 'BZ6'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)LIKE(LIKE(v0.c0, 0.18012019531599566, '1')));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) COLLATE BINARY WHERE (CAST((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS TEXT)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) COLLATE BINARY WHERE (CAST((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS TEXT)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) COLLATE BINARY WHERE (CAST((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS TEXT));
SELECT COUNT(*) FROM v0, rt0 WHERE (0.33666386772218004) ORDER BY (((v0.c0 COLLATE RTRIM))<((rt0.c2))) DESC, (+ ((rt0.c1 IN ()))), ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.33666386772218004) IS TRUE)  as count FROM v0, rt0 ORDER BY (((v0.c0 COLLATE RTRIM))<((rt0.c2))) DESC, (+ ((rt0.c1 IN ()))), ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (0.33666386772218004) ORDER BY (((v0.c0 COLLATE RTRIM))<((rt0.c2))) DESC, (+ ((rt0.c1 IN ()))), ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.33666386772218004) IS TRUE)  as count FROM v0, rt0 ORDER BY (((v0.c0 COLLATE RTRIM))<((rt0.c2))) DESC, (+ ((rt0.c1 IN ()))), ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (0.33666386772218004) ORDER BY (((v0.c0 COLLATE RTRIM))<((rt0.c2))) DESC, (+ ((rt0.c1 IN ()))), ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))) NOTNULL) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (LTRIM(((rt0.c1) NOT BETWEEN ('Q\r>骓') AND (x'068e')), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt0.c1) NOT BETWEEN ('Q\r>骓') AND (x'068e')), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LTRIM(((rt0.c1) NOT BETWEEN ('Q\r>骓') AND (x'068e')), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt0.c1) NOT BETWEEN ('Q\r>骓') AND (x'068e')), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LTRIM(((rt0.c1) NOT BETWEEN ('Q\r>骓') AND (x'068e')), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT * FROM v0 WHERE (((((((v0.c0) ISNULL))OR(CAST(v0.c0 AS REAL))))AND(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) ISNULL))OR(CAST(v0.c0 AS REAL))))AND(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0) ISNULL))OR(CAST(v0.c0 AS REAL))))AND(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) ISNULL))OR(CAST(v0.c0 AS REAL))))AND(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0) ISNULL))OR(CAST(v0.c0 AS REAL))))AND(((v0.c0) NOT NULL))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT ((v0.c0) NOT NULL)) WHERE ((- (((rt0.c0) NOT NULL)))) ORDER BY TRIM(NULLIF(DISTINCT rt0.c0, rt0.c2));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT ((v0.c0) NOT NULL)) ORDER BY TRIM(NULLIF(DISTINCT rt0.c0, rt0.c2)));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT ((v0.c0) NOT NULL)) WHERE ((- (((rt0.c0) NOT NULL)))) ORDER BY TRIM(NULLIF(DISTINCT rt0.c0, rt0.c2));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT ((v0.c0) NOT NULL)) ORDER BY TRIM(NULLIF(DISTINCT rt0.c0, rt0.c2)));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT ((v0.c0) NOT NULL)) WHERE ((- (((rt0.c0) NOT NULL)))) ORDER BY TRIM(NULLIF(DISTINCT rt0.c0, rt0.c2));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS REAL)) ORDER BY json_insert(json_array(rt0.c0, rt0.c1), rt0.c1, ((((rt0.c0)AND(v0.c0)))AND(rt0.c1))) DESC  NULLS FIRST, (TRIM(DISTINCT v0.c0) IN (rt0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM rt0, v0 ORDER BY json_insert(json_array(rt0.c0, rt0.c1), rt0.c1, ((((rt0.c0)AND(v0.c0)))AND(rt0.c1))) DESC  NULLS FIRST, (TRIM(DISTINCT v0.c0) IN (rt0.c2)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS REAL)) ORDER BY json_insert(json_array(rt0.c0, rt0.c1), rt0.c1, ((((rt0.c0)AND(v0.c0)))AND(rt0.c1))) DESC  NULLS FIRST, (TRIM(DISTINCT v0.c0) IN (rt0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM rt0, v0 ORDER BY json_insert(json_array(rt0.c0, rt0.c1), rt0.c1, ((((rt0.c0)AND(v0.c0)))AND(rt0.c1))) DESC  NULLS FIRST, (TRIM(DISTINCT v0.c0) IN (rt0.c2)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0 IN (rt0.c2)))*((('-1736303984')*(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c2)))*((('-1736303984')*(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0 IN (rt0.c2)))*((('-1736303984')*(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c2)))*((('-1736303984')*(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0 IN (rt0.c2)))*((('-1736303984')*(rt0.c1)))));
SELECT * FROM rt0 WHERE (json('924258653')) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json('924258653')) IS TRUE)  as count FROM rt0 ORDER BY x'' DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (json('924258653')) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json('924258653')) IS TRUE)  as count FROM rt0 ORDER BY x'' DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (json('924258653')) ORDER BY x'' DESC  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE ((((0X3278a678))<((((v0.c0)+(rt0.c0)))))) ORDER BY ((rt0.c2) NOTNULL), CASE ((rt0.c1)||(rt0.c0))  WHEN '/8' THEN (rt0.c1 IN ()) ELSE ((((NULL)OR(x'')))AND(v0.c0)) END;
SELECT SUM(count) FROM (SELECT (((((0X3278a678))<((((v0.c0)+(rt0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c2) NOTNULL), CASE ((rt0.c1)||(rt0.c0))  WHEN '/8' THEN (rt0.c1 IN ()) ELSE ((((NULL)OR(x'')))AND(v0.c0)) END);
SELECT * FROM v0, rt0 WHERE ((((0X3278a678))<((((v0.c0)+(rt0.c0)))))) ORDER BY ((rt0.c2) NOTNULL), CASE ((rt0.c1)||(rt0.c0))  WHEN '/8' THEN (rt0.c1 IN ()) ELSE ((((NULL)OR(x'')))AND(v0.c0)) END;
SELECT SUM(count) FROM (SELECT (((((0X3278a678))<((((v0.c0)+(rt0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c2) NOTNULL), CASE ((rt0.c1)||(rt0.c0))  WHEN '/8' THEN (rt0.c1 IN ()) ELSE ((((NULL)OR(x'')))AND(v0.c0)) END);
SELECT * FROM v0, rt0 WHERE ((((0X3278a678))<((((v0.c0)+(rt0.c0)))))) ORDER BY ((rt0.c2) NOTNULL), CASE ((rt0.c1)||(rt0.c0))  WHEN '/8' THEN (rt0.c1 IN ()) ELSE ((((NULL)OR(x'')))AND(v0.c0)) END;
SELECT ALL * FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END IN ()));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END)AND(rt0.c1)))AND(rt0.c2)))OR((((rt0.c0)) BETWEEN (('-421346764')) AND ((1e500))))))OR((((rt0.c1))<=((NULL)))))) ORDER BY (x'dfe8' IN (rt0.c0 COLLATE BINARY)) DESC  NULLS LAST, ((((((rt0.c2) IS TRUE))OR(v0.c0 COLLATE BINARY)))AND(CASE WHEN v0.c0 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END)AND(rt0.c1)))AND(rt0.c2)))OR((((rt0.c0)) BETWEEN (('-421346764')) AND ((1e500))))))OR((((rt0.c1))<=((NULL)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (x'dfe8' IN (rt0.c0 COLLATE BINARY)) DESC  NULLS LAST, ((((((rt0.c2) IS TRUE))OR(v0.c0 COLLATE BINARY)))AND(CASE WHEN v0.c0 THEN rt0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END)AND(rt0.c1)))AND(rt0.c2)))OR((((rt0.c0)) BETWEEN (('-421346764')) AND ((1e500))))))OR((((rt0.c1))<=((NULL)))))) ORDER BY (x'dfe8' IN (rt0.c0 COLLATE BINARY)) DESC  NULLS LAST, ((((((rt0.c2) IS TRUE))OR(v0.c0 COLLATE BINARY)))AND(CASE WHEN v0.c0 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END)AND(rt0.c1)))AND(rt0.c2)))OR((((rt0.c0)) BETWEEN (('-421346764')) AND ((1e500))))))OR((((rt0.c1))<=((NULL)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (x'dfe8' IN (rt0.c0 COLLATE BINARY)) DESC  NULLS LAST, ((((((rt0.c2) IS TRUE))OR(v0.c0 COLLATE BINARY)))AND(CASE WHEN v0.c0 THEN rt0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END)AND(rt0.c1)))AND(rt0.c2)))OR((((rt0.c0)) BETWEEN (('-421346764')) AND ((1e500))))))OR((((rt0.c1))<=((NULL)))))) ORDER BY (x'dfe8' IN (rt0.c0 COLLATE BINARY)) DESC  NULLS LAST, ((((((rt0.c2) IS TRUE))OR(v0.c0 COLLATE BINARY)))AND(CASE WHEN v0.c0 THEN rt0.c0 END))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1 IN ()))LIKE(rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))LIKE(rt0.c1))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1 IN ()))LIKE(rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))LIKE(rt0.c1))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1 IN ()))LIKE(rt0.c1)));
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(((rt0.c0) NOTNULL) AS TEXT)) ORDER BY CASE ((x'')GLOB(rt0.c2))  WHEN rt0.c2 THEN x'c9f1da76' COLLATE RTRIM END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) NOTNULL) AS TEXT)) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE ((x'')GLOB(rt0.c2))  WHEN rt0.c2 THEN x'c9f1da76' COLLATE RTRIM END  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(((rt0.c0) NOTNULL) AS TEXT)) ORDER BY CASE ((x'')GLOB(rt0.c2))  WHEN rt0.c2 THEN x'c9f1da76' COLLATE RTRIM END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) NOTNULL) AS TEXT)) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE ((x'')GLOB(rt0.c2))  WHEN rt0.c2 THEN x'c9f1da76' COLLATE RTRIM END  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(((rt0.c0) NOTNULL) AS TEXT)) ORDER BY CASE ((x'')GLOB(rt0.c2))  WHEN rt0.c2 THEN x'c9f1da76' COLLATE RTRIM END  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c2)>=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c2)>=(rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c2)>=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c2)>=(rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c2)>=(rt0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL)) NOTNULL)) ORDER BY (((- (v0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ((NULL IN (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY (((- (v0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ((NULL IN (v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL)) NOTNULL)) ORDER BY (((- (v0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ((NULL IN (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY (((- (v0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ((NULL IN (v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL)) NOTNULL)) ORDER BY (((- (v0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ((NULL IN (v0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0)LIKE(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0)LIKE(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0)LIKE(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0)LIKE(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0)LIKE(v0.c0))))));
SELECT * FROM v0 WHERE (((0.0038704488547328664) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.0038704488547328664) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((0.0038704488547328664) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.0038704488547328664) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((0.0038704488547328664) NOT NULL));
SELECT ALL * FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0))) NOT BETWEEN (((v0.c0) NOTNULL)) AND (((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)IS NOT(v0.c0))) NOT BETWEEN (((v0.c0) NOTNULL)) AND (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0))) NOT BETWEEN (((v0.c0) NOTNULL)) AND (((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)IS NOT(v0.c0))) NOT BETWEEN (((v0.c0) NOTNULL)) AND (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0))) NOT BETWEEN (((v0.c0) NOTNULL)) AND (((v0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0) ISNULL))OR((((v0.c0))<=((v0.c0))))))OR(v0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ORDER BY CASE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN ((x'ae16')OR(0.8039904607933865)) THEN ((v0.c0)&(v0.c0)) WHEN (v0.c0 IN ()) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN COALESCE(DISTINCT v0.c0, v0.c0, v0.c0, v0.c0) THEN CASE WHEN 15258190 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0) ISNULL))OR((((v0.c0))<=((v0.c0))))))OR(v0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN ((x'ae16')OR(0.8039904607933865)) THEN ((v0.c0)&(v0.c0)) WHEN (v0.c0 IN ()) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN COALESCE(DISTINCT v0.c0, v0.c0, v0.c0, v0.c0) THEN CASE WHEN 15258190 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0) ISNULL))OR((((v0.c0))<=((v0.c0))))))OR(v0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ORDER BY CASE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN ((x'ae16')OR(0.8039904607933865)) THEN ((v0.c0)&(v0.c0)) WHEN (v0.c0 IN ()) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN COALESCE(DISTINCT v0.c0, v0.c0, v0.c0, v0.c0) THEN CASE WHEN 15258190 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0) ISNULL))OR((((v0.c0))<=((v0.c0))))))OR(v0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN ((x'ae16')OR(0.8039904607933865)) THEN ((v0.c0)&(v0.c0)) WHEN (v0.c0 IN ()) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN COALESCE(DISTINCT v0.c0, v0.c0, v0.c0, v0.c0) THEN CASE WHEN 15258190 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0) ISNULL))OR((((v0.c0))<=((v0.c0))))))OR(v0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ORDER BY CASE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN ((x'ae16')OR(0.8039904607933865)) THEN ((v0.c0)&(v0.c0)) WHEN (v0.c0 IN ()) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN COALESCE(DISTINCT v0.c0, v0.c0, v0.c0, v0.c0) THEN CASE WHEN 15258190 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c0 IN ()))>=(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))>=(v0.c0))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c0 IN ()))>=(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))>=(v0.c0))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c0 IN ()))>=(v0.c0)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('1784995972') ORDER BY LTRIM(v0.c0 COLLATE NOCASE, ((rt0.c1)LIKE(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('1784995972') IS TRUE)  as count FROM v0, rt0 ORDER BY LTRIM(v0.c0 COLLATE NOCASE, ((rt0.c1)LIKE(v0.c0))) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('1784995972') ORDER BY LTRIM(v0.c0 COLLATE NOCASE, ((rt0.c1)LIKE(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('1784995972') IS TRUE)  as count FROM v0, rt0 ORDER BY LTRIM(v0.c0 COLLATE NOCASE, ((rt0.c1)LIKE(v0.c0))) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('1784995972') ORDER BY LTRIM(v0.c0 COLLATE NOCASE, ((rt0.c1)LIKE(v0.c0))) DESC;
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(NULL AS BLOB)) ORDER BY CASE WHEN CAST(rt0.c0 AS BLOB) THEN ((((((((rt0.c1)AND(v0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) WHEN ((rt0.c0) NOT BETWEEN ('-182313409') AND (rt0.c2)) THEN (((rt0.c2))>((rt0.c2))) WHEN x'd338' THEN v0.c0 COLLATE BINARY ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN CAST(rt0.c0 AS BLOB) THEN ((((((((rt0.c1)AND(v0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) WHEN ((rt0.c0) NOT BETWEEN ('-182313409') AND (rt0.c2)) THEN (((rt0.c2))>((rt0.c2))) WHEN x'd338' THEN v0.c0 COLLATE BINARY ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(NULL AS BLOB)) ORDER BY CASE WHEN CAST(rt0.c0 AS BLOB) THEN ((((((((rt0.c1)AND(v0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) WHEN ((rt0.c0) NOT BETWEEN ('-182313409') AND (rt0.c2)) THEN (((rt0.c2))>((rt0.c2))) WHEN x'd338' THEN v0.c0 COLLATE BINARY ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN CAST(rt0.c0 AS BLOB) THEN ((((((((rt0.c1)AND(v0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) WHEN ((rt0.c0) NOT BETWEEN ('-182313409') AND (rt0.c2)) THEN (((rt0.c2))>((rt0.c2))) WHEN x'd338' THEN v0.c0 COLLATE BINARY ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(NULL AS BLOB)) ORDER BY CASE WHEN CAST(rt0.c0 AS BLOB) THEN ((((((((rt0.c1)AND(v0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)) WHEN ((rt0.c0) NOT BETWEEN ('-182313409') AND (rt0.c2)) THEN (((rt0.c2))>((rt0.c2))) WHEN x'd338' THEN v0.c0 COLLATE BINARY ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) END  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ('');
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS REAL)) ORDER BY (((((v0.c0) NOT NULL)))=(((+ (v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0) NOT NULL)))==(((+ (v0.c0))))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS REAL)) ORDER BY (((((v0.c0) NOT NULL)))=(((+ (v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0) NOT NULL)))==(((+ (v0.c0))))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS REAL)) ORDER BY (((((v0.c0) NOT NULL)))=(((+ (v0.c0))))) DESC;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN NULL WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE WHERE (0.30919824839959675) ORDER BY CAST(rt0.c2 AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.30919824839959675) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN NULL WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE ORDER BY CAST(rt0.c2 AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN NULL WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE WHERE (0.30919824839959675) ORDER BY CAST(rt0.c2 AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.30919824839959675) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN NULL WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE ORDER BY CAST(rt0.c2 AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN NULL WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE WHERE (0.30919824839959675) ORDER BY CAST(rt0.c2 AS INTEGER) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) NOT NULL));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER))AND((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER))AND((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER))AND((rt0.c0 IN ()))));
SELECT COUNT(*) FROM v0 WHERE ('-2002235358');
SELECT SUM(count) FROM (SELECT (('-2002235358') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('-2002235358');
SELECT SUM(count) FROM (SELECT (('-2002235358') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('-2002235358');
SELECT * FROM rt0 WHERE (((((((rt0.c0)>(rt0.c0)))OR(rt0.c0)))OR((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)>(rt0.c0)))OR(rt0.c0)))OR((- (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c0)>(rt0.c0)))OR(rt0.c0)))OR((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)>(rt0.c0)))OR(rt0.c0)))OR((- (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c0)>(rt0.c0)))OR(rt0.c0)))OR((- (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON CASE ((((v0.c0)OR(v0.c0)))OR(rt0.c2))  WHEN rt0.c2 THEN CAST(rt0.c1 AS INTEGER) ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END WHERE (CAST(1896051625 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(1896051625 AS NUMERIC)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON CASE ((((v0.c0)OR(v0.c0)))OR(rt0.c2))  WHEN rt0.c2 THEN CAST(rt0.c1 AS INTEGER) ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON CASE ((((v0.c0)OR(v0.c0)))OR(rt0.c2))  WHEN rt0.c2 THEN CAST(rt0.c1 AS INTEGER) ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END WHERE (CAST(1896051625 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(1896051625 AS NUMERIC)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON CASE ((((v0.c0)OR(v0.c0)))OR(rt0.c2))  WHEN rt0.c2 THEN CAST(rt0.c1 AS INTEGER) ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON CASE ((((v0.c0)OR(v0.c0)))OR(rt0.c2))  WHEN rt0.c2 THEN CAST(rt0.c1 AS INTEGER) ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END WHERE (CAST(1896051625 AS NUMERIC));
SELECT ALL * FROM v0 WHERE ((~ (((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((~ (((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((~ (((v0.c0) IS FALSE))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((NOT (CASE rt0.c2  WHEN x'' THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt0.c2  WHEN x'' THEN v0.c0 END))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((NOT (CASE rt0.c2  WHEN x'' THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt0.c2  WHEN x'' THEN v0.c0 END))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((NOT (CASE rt0.c2  WHEN x'' THEN v0.c0 END)));
SELECT * FROM rt0 WHERE (((((((rt0.c0) NOTNULL))AND((rt0.c2 IN (NULL)))))OR(((rt0.c2)<>(rt0.c0))))) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE 0.8142249738180208 END)==(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOTNULL))AND((rt0.c2 IN (NULL)))))OR(((rt0.c2)<>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE 0.8142249738180208 END)==(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))));
SELECT * FROM rt0 WHERE (((((((rt0.c0) NOTNULL))AND((rt0.c2 IN (NULL)))))OR(((rt0.c2)<>(rt0.c0))))) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE 0.8142249738180208 END)==(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOTNULL))AND((rt0.c2 IN (NULL)))))OR(((rt0.c2)<>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE 0.8142249738180208 END)==(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))));
SELECT * FROM rt0 WHERE (((((((rt0.c0) NOTNULL))AND((rt0.c2 IN (NULL)))))OR(((rt0.c2)<>(rt0.c0))))) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE 0.8142249738180208 END)==(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))));
SELECT * FROM rt0 WHERE ((NOT (rt0.c0))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))OR(((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))OR(((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((NOT (rt0.c0))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))OR(((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))OR(((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((NOT (rt0.c0))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))OR(((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))) DESC  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT NULL));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((- (((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((- (((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((- (((v0.c0) NOT NULL))));
SELECT * FROM rt0 WHERE ('I+') ORDER BY ((COALESCE(DISTINCT rt0.c1, rt0.c2, rt0.c1, rt0.c1)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (('I+') IS TRUE)  as count FROM rt0 ORDER BY ((COALESCE(DISTINCT rt0.c1, rt0.c2, rt0.c1, rt0.c1)) NOTNULL) ASC);
SELECT * FROM rt0 WHERE ('I+') ORDER BY ((COALESCE(DISTINCT rt0.c1, rt0.c2, rt0.c1, rt0.c1)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (('I+') IS TRUE)  as count FROM rt0 ORDER BY ((COALESCE(DISTINCT rt0.c1, rt0.c2, rt0.c1, rt0.c1)) NOTNULL) ASC);
SELECT * FROM rt0 WHERE ('I+') ORDER BY ((COALESCE(DISTINCT rt0.c1, rt0.c2, rt0.c1, rt0.c1)) NOTNULL) ASC;
SELECT * FROM rt0, v0 WHERE (((((((v0.c0)AND('')))AND(rt0.c1))) IS TRUE)) ORDER BY CAST(((rt0.c0)|(x'')) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND('')))AND(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c0)|(x'')) AS TEXT));
SELECT * FROM rt0, v0 WHERE (((((((v0.c0)AND('')))AND(rt0.c1))) IS TRUE)) ORDER BY CAST(((rt0.c0)|(x'')) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND('')))AND(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c0)|(x'')) AS TEXT));
SELECT * FROM rt0, v0 WHERE (((((((v0.c0)AND('')))AND(rt0.c1))) IS TRUE)) ORDER BY CAST(((rt0.c0)|(x'')) AS TEXT);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN (((rt0.c1 IN (x'0489')), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)), ((rt0.c2)<(rt0.c1)))) AND ((rt0.c2 COLLATE BINARY, ((rt0.c1)IS NOT(NULL)), (NOT (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN (((rt0.c1 IN (x'0489')), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)), ((rt0.c2)<(rt0.c1)))) AND ((rt0.c2 COLLATE BINARY, ((rt0.c1)IS NOT(NULL)), (NOT (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN (((rt0.c1 IN (x'0489')), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)), ((rt0.c2)<(rt0.c1)))) AND ((rt0.c2 COLLATE BINARY, ((rt0.c1)IS NOT(NULL)), (NOT (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN (((rt0.c1 IN (x'0489')), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)), ((rt0.c2)<(rt0.c1)))) AND ((rt0.c2 COLLATE BINARY, ((rt0.c1)IS NOT(NULL)), (NOT (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN (((rt0.c1 IN (x'0489')), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)), ((rt0.c2)<(rt0.c1)))) AND ((rt0.c2 COLLATE BINARY, ((rt0.c1)IS NOT(NULL)), (NOT (rt0.c2))))));
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))) AND ((((x'26b1') NOT BETWEEN (rt0.c0) AND (v0.c0)))))) ORDER BY (- (rt0.c0)) COLLATE BINARY COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))) AND ((((x'26b1') NOT BETWEEN (rt0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (rt0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))) AND ((((x'26b1') NOT BETWEEN (rt0.c0) AND (v0.c0)))))) ORDER BY (- (rt0.c0)) COLLATE BINARY COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))) AND ((((x'26b1') NOT BETWEEN (rt0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (rt0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))) AND ((((x'26b1') NOT BETWEEN (rt0.c0) AND (v0.c0)))))) ORDER BY (- (rt0.c0)) COLLATE BINARY COLLATE RTRIM;
SELECT ALL * FROM rt0, v0 WHERE (CAST(CASE rt0.c1  WHEN v0.c0 THEN rt0.c1 ELSE '0.8807424499516604' END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN v0.c0 THEN rt0.c1 ELSE '0.8807424499516604' END AS NUMERIC)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CAST(CASE rt0.c1  WHEN v0.c0 THEN rt0.c1 ELSE '0.8807424499516604' END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN v0.c0 THEN rt0.c1 ELSE '0.8807424499516604' END AS NUMERIC)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CAST(CASE rt0.c1  WHEN v0.c0 THEN rt0.c1 ELSE '0.8807424499516604' END AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON LIKELY(DISTINCT rt0.c1) COLLATE BINARY WHERE (CAST(v0.c0 COLLATE NOCASE AS TEXT)) ORDER BY ((((((rt0.c2)AND(v0.c0)))OR(v0.c0))) BETWEEN ((NOT (rt0.c0))) AND (CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON LIKELY(DISTINCT rt0.c1) COLLATE BINARY ORDER BY ((((((rt0.c2)AND(v0.c0)))OR(v0.c0))) BETWEEN ((NOT (rt0.c0))) AND (CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON LIKELY(DISTINCT rt0.c1) COLLATE BINARY WHERE (CAST(v0.c0 COLLATE NOCASE AS TEXT)) ORDER BY ((((((rt0.c2)AND(v0.c0)))OR(v0.c0))) BETWEEN ((NOT (rt0.c0))) AND (CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON LIKELY(DISTINCT rt0.c1) COLLATE BINARY ORDER BY ((((((rt0.c2)AND(v0.c0)))OR(v0.c0))) BETWEEN ((NOT (rt0.c0))) AND (CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON LIKELY(DISTINCT rt0.c1) COLLATE BINARY WHERE (CAST(v0.c0 COLLATE NOCASE AS TEXT)) ORDER BY ((((((rt0.c2)AND(v0.c0)))OR(v0.c0))) BETWEEN ((NOT (rt0.c0))) AND (CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 END));
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (CASE WHEN UNICODE('518044386') THEN (((v0.c0))>=(('-358291879'))) END) ORDER BY (+ (v0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UNICODE('518044386') THEN (((v0.c0))>=(('-358291879'))) END) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY (+ (v0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (CASE WHEN UNICODE('518044386') THEN (((v0.c0))>=(('-358291879'))) END) ORDER BY (+ (v0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UNICODE('518044386') THEN (((v0.c0))>=(('-358291879'))) END) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY (+ (v0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (CASE WHEN UNICODE('518044386') THEN (((v0.c0))>=(('-358291879'))) END) ORDER BY (+ (v0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0))) IS TRUE)) ORDER BY ((v0.c0)>=(v0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c0)))OR(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)>=(v0.c0)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0))) IS TRUE)) ORDER BY ((v0.c0)>=(v0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c0)))OR(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)>=(v0.c0)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0))) IS TRUE)) ORDER BY ((v0.c0)>=(v0.c0)) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((+ (rt0.c1)) IN ()) WHERE (CAST(v0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS BLOB)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((+ (rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((+ (rt0.c1)) IN ()) WHERE (CAST(v0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS BLOB)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((+ (rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((+ (rt0.c1)) IN ()) WHERE (CAST(v0.c0 AS BLOB));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c0)*(v0.c0)))||(rt0.c0))) ORDER BY UNLIKELY(CAST(rt0.c0 AS REAL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)*(v0.c0)))||(rt0.c0))) IS TRUE)  as count FROM v0, rt0 ORDER BY UNLIKELY(CAST(rt0.c0 AS REAL)) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c0)*(v0.c0)))||(rt0.c0))) ORDER BY UNLIKELY(CAST(rt0.c0 AS REAL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)*(v0.c0)))||(rt0.c0))) IS TRUE)  as count FROM v0, rt0 ORDER BY UNLIKELY(CAST(rt0.c0 AS REAL)) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c0)*(v0.c0)))||(rt0.c0))) ORDER BY UNLIKELY(CAST(rt0.c0 AS REAL)) ASC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE ((~ ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((~ ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((~ ((- (rt0.c1)))));
SELECT * FROM rt0, v0 WHERE ((((rt0.c1, rt0.c0, rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN (((- (rt0.c0)), 'xz', ((((v0.c0)AND(rt0.c2)))OR(rt0.c1)), rt0.c2, ((rt0.c0) IS TRUE))) AND (((+ (rt0.c1)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN rt0.c0 THEN rt0.c1 WHEN x'c540' THEN '}V5,J࡜m' WHEN rt0.c0 THEN rt0.c2 END, ((rt0.c1)>=(rt0.c1)), rt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c0, rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN (((- (rt0.c0)), 'xz', ((((v0.c0)AND(rt0.c2)))OR(rt0.c1)), rt0.c2, ((rt0.c0) IS TRUE))) AND (((+ (rt0.c1)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN rt0.c0 THEN rt0.c1 WHEN x'c540' THEN '}V5,J࡜m' WHEN rt0.c0 THEN rt0.c2 END, ((rt0.c1)>=(rt0.c1)), rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((rt0.c1, rt0.c0, rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN (((- (rt0.c0)), 'xz', ((((v0.c0)AND(rt0.c2)))OR(rt0.c1)), rt0.c2, ((rt0.c0) IS TRUE))) AND (((+ (rt0.c1)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN rt0.c0 THEN rt0.c1 WHEN x'c540' THEN '}V5,J࡜m' WHEN rt0.c0 THEN rt0.c2 END, ((rt0.c1)>=(rt0.c1)), rt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c0, rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN (((- (rt0.c0)), 'xz', ((((v0.c0)AND(rt0.c2)))OR(rt0.c1)), rt0.c2, ((rt0.c0) IS TRUE))) AND (((+ (rt0.c1)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN rt0.c0 THEN rt0.c1 WHEN x'c540' THEN '}V5,J࡜m' WHEN rt0.c0 THEN rt0.c2 END, ((rt0.c1)>=(rt0.c1)), rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((rt0.c1, rt0.c0, rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN (((- (rt0.c0)), 'xz', ((((v0.c0)AND(rt0.c2)))OR(rt0.c1)), rt0.c2, ((rt0.c0) IS TRUE))) AND (((+ (rt0.c1)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN rt0.c0 THEN rt0.c1 WHEN x'c540' THEN '}V5,J࡜m' WHEN rt0.c0 THEN rt0.c2 END, ((rt0.c1)>=(rt0.c1)), rt0.c0 COLLATE BINARY))));
SELECT * FROM v0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2 COLLATE BINARY)))) ORDER BY ((((rt0.c2)>=(v0.c0)))==((('57759156') NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c2)>=(v0.c0)))==((('57759156') NOTNULL))) DESC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2 COLLATE BINARY)))) ORDER BY ((((rt0.c2)>=(v0.c0)))==((('57759156') NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c2)>=(v0.c0)))==((('57759156') NOTNULL))) DESC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2 COLLATE BINARY)))) ORDER BY ((((rt0.c2)>=(v0.c0)))==((('57759156') NOTNULL))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((((~ (rt0.c2))))<((STRFTIME(rt0.c2, rt0.c0, rt0.c2)))), -642118865  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((~ (rt0.c2))))<((STRFTIME(rt0.c2, rt0.c0, rt0.c2)))), -642118865  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((((~ (rt0.c2))))<((STRFTIME(rt0.c2, rt0.c0, rt0.c2)))), -642118865  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((~ (rt0.c2))))<((STRFTIME(rt0.c2, rt0.c0, rt0.c2)))), -642118865  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((0.6283028591824459) NOT BETWEEN (((((v0.c0)AND(rt0.c1)))OR('1092096079'))) AND (LIKELY('-236195473')))) ORDER BY (v0.c0 IN ()) DESC, (((CAST('1552101707' AS TEXT)))>=((1.979999518E9)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.6283028591824459) NOT BETWEEN (((((v0.c0)AND(rt0.c1)))OR('1092096079'))) AND (LIKELY('-236195473')))) IS TRUE)  as count FROM v0, rt0 ORDER BY (v0.c0 IN ()) DESC, (((CAST('1552101707' AS TEXT)))>=((1.979999518E9)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((0.6283028591824459) NOT BETWEEN (((((v0.c0)AND(rt0.c1)))OR('1092096079'))) AND (LIKELY('-236195473')))) ORDER BY (v0.c0 IN ()) DESC, (((CAST('1552101707' AS TEXT)))>=((1.979999518E9)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.6283028591824459) NOT BETWEEN (((((v0.c0)AND(rt0.c1)))OR('1092096079'))) AND (LIKELY('-236195473')))) IS TRUE)  as count FROM v0, rt0 ORDER BY (v0.c0 IN ()) DESC, (((CAST('1552101707' AS TEXT)))>=((1.979999518E9)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((0.6283028591824459) NOT BETWEEN (((((v0.c0)AND(rt0.c1)))OR('1092096079'))) AND (LIKELY('-236195473')))) ORDER BY (v0.c0 IN ()) DESC, (((CAST('1552101707' AS TEXT)))>=((1.979999518E9)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (GLOB(rt0.c0 COLLATE RTRIM, CAST(rt0.c0 AS BLOB))) ORDER BY ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c1)==(rt0.c1))) AND (((rt0.c0)IS(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(rt0.c0 COLLATE RTRIM, CAST(rt0.c0 AS BLOB))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c1)=(rt0.c1))) AND (((rt0.c0)IS(rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (GLOB(rt0.c0 COLLATE RTRIM, CAST(rt0.c0 AS BLOB))) ORDER BY ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c1)==(rt0.c1))) AND (((rt0.c0)IS(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(rt0.c0 COLLATE RTRIM, CAST(rt0.c0 AS BLOB))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c1)=(rt0.c1))) AND (((rt0.c0)IS(rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (GLOB(rt0.c0 COLLATE RTRIM, CAST(rt0.c0 AS BLOB))) ORDER BY ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c1)==(rt0.c1))) AND (((rt0.c0)IS(rt0.c2)))) DESC;
SELECT * FROM rt0, v0 WHERE (CAST((v0.c0 IN (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST((v0.c0 IN (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST((v0.c0 IN (rt0.c2)) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c1, rt0.c2))>=((rt0.c1, rt0.c0, x''))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c0, rt0.c1, rt0.c2))>=((rt0.c1, rt0.c0, x'')))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c1, rt0.c2))>=((rt0.c1, rt0.c0, x''))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c0, rt0.c1, rt0.c2))>=((rt0.c1, rt0.c0, x'')))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c1, rt0.c2))>=((rt0.c1, rt0.c0, x''))))));
SELECT * FROM rt0, v0 WHERE (0.8138272307090209);
SELECT SUM(count) FROM (SELECT ((0.8138272307090209) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (0.8138272307090209);
SELECT SUM(count) FROM (SELECT ((0.8138272307090209) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (0.8138272307090209);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0))) NOT BETWEEN (x'') AND (CAST(rt0.c2 AS REAL))) WHERE ('1996024130' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('1996024130' COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0))) NOT BETWEEN (x'') AND (CAST(rt0.c2 AS REAL))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0))) NOT BETWEEN (x'') AND (CAST(rt0.c2 AS REAL))) WHERE ('1996024130' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('1996024130' COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0))) NOT BETWEEN (x'') AND (CAST(rt0.c2 AS REAL))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0))) NOT BETWEEN (x'') AND (CAST(rt0.c2 AS REAL))) WHERE ('1996024130' COLLATE RTRIM);
SELECT * FROM rt0 WHERE ((+ (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (rt0.c0)) COLLATE NOCASE);
SELECT * FROM rt0, v0 WHERE (LOWER(LIKELIHOOD(v0.c0, 0.028551224612695325)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(LIKELIHOOD(v0.c0, 0.028551224612695325))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (LOWER(LIKELIHOOD(v0.c0, 0.028551224612695325)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(LIKELIHOOD(v0.c0, 0.028551224612695325))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (LOWER(LIKELIHOOD(v0.c0, 0.028551224612695325)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((((rt0.c0)!=(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((((rt0.c0)<>(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((((rt0.c0)!=(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((((rt0.c0)<>(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((((rt0.c0)!=(rt0.c0))))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((((CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c0 ELSE rt0.c2 END)AND((rt0.c2 IN ()))))AND((rt0.c2 IN ('37979539', rt0.c1)))))AND((rt0.c2 IN ()))))OR('-1068299524'))) ORDER BY ((((NULL)GLOB(rt0.c1)))IS NOT(rt0.c2 COLLATE BINARY)) ASC  NULLS LAST, ((((v0.c0)%(v0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c0 ELSE rt0.c2 END)AND((rt0.c2 IN ()))))AND((rt0.c2 IN ('37979539', rt0.c1)))))AND((rt0.c2 IN ()))))OR('-1068299524'))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((NULL)GLOB(rt0.c1)))IS NOT(rt0.c2 COLLATE BINARY)) ASC  NULLS LAST, ((((v0.c0)%(v0.c0))) ISNULL) ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((((CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c0 ELSE rt0.c2 END)AND((rt0.c2 IN ()))))AND((rt0.c2 IN ('37979539', rt0.c1)))))AND((rt0.c2 IN ()))))OR('-1068299524'))) ORDER BY ((((NULL)GLOB(rt0.c1)))IS NOT(rt0.c2 COLLATE BINARY)) ASC  NULLS LAST, ((((v0.c0)%(v0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c0 ELSE rt0.c2 END)AND((rt0.c2 IN ()))))AND((rt0.c2 IN ('37979539', rt0.c1)))))AND((rt0.c2 IN ()))))OR('-1068299524'))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((NULL)GLOB(rt0.c1)))IS NOT(rt0.c2 COLLATE BINARY)) ASC  NULLS LAST, ((((v0.c0)%(v0.c0))) ISNULL) ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((((CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c0 ELSE rt0.c2 END)AND((rt0.c2 IN ()))))AND((rt0.c2 IN ('37979539', rt0.c1)))))AND((rt0.c2 IN ()))))OR('-1068299524'))) ORDER BY ((((NULL)GLOB(rt0.c1)))IS NOT(rt0.c2 COLLATE BINARY)) ASC  NULLS LAST, ((((v0.c0)%(v0.c0))) ISNULL) ASC;
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1 COLLATE NOCASE)<<(TRIM(rt0.c2)))) ORDER BY CAST((NOT (v0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)<<(TRIM(rt0.c2)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((NOT (v0.c0)) AS INTEGER));
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1 COLLATE NOCASE)<<(TRIM(rt0.c2)))) ORDER BY CAST((NOT (v0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)<<(TRIM(rt0.c2)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((NOT (v0.c0)) AS INTEGER));
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1 COLLATE NOCASE)<<(TRIM(rt0.c2)))) ORDER BY CAST((NOT (v0.c0)) AS INTEGER);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((rt0.c0)<<(rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)<<(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((rt0.c0)<<(rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)<<(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((rt0.c0)<<(rt0.c0)) AS NUMERIC));
SELECT * FROM rt0, v0 WHERE (INSTR((rt0.c2 IN ()), ((rt0.c1)IS(rt0.c2)))) ORDER BY ((rt0.c0 IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((INSTR((rt0.c2 IN ()), ((rt0.c1)IS(rt0.c2)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c0 IN ()) IN ()) DESC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (INSTR((rt0.c2 IN ()), ((rt0.c1)IS(rt0.c2)))) ORDER BY ((rt0.c0 IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((INSTR((rt0.c2 IN ()), ((rt0.c1)IS(rt0.c2)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c0 IN ()) IN ()) DESC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (INSTR((rt0.c2 IN ()), ((rt0.c1)IS(rt0.c2)))) ORDER BY ((rt0.c0 IN ()) IN ()) DESC  NULLS LAST;
SELECT * FROM v0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<((((v0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<((((v0.c0) NOTNULL))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<((((v0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<((((v0.c0) NOTNULL))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<((((v0.c0) NOTNULL)))));
SELECT * FROM v0 WHERE (((~ (v0.c0)) IN ())) ORDER BY CAST(JULIANDAY(v0.c0, 0.46799836026068276, v0.c0, v0.c0, v0.c0) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((~ (v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY CAST(JULIANDAY(v0.c0, 0.46799836026068276, v0.c0, v0.c0, v0.c0) AS NUMERIC) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((~ (v0.c0)) IN ())) ORDER BY CAST(JULIANDAY(v0.c0, 0.46799836026068276, v0.c0, v0.c0, v0.c0) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((~ (v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY CAST(JULIANDAY(v0.c0, 0.46799836026068276, v0.c0, v0.c0, v0.c0) AS NUMERIC) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((~ (v0.c0)) IN ())) ORDER BY CAST(JULIANDAY(v0.c0, 0.46799836026068276, v0.c0, v0.c0, v0.c0) AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (CAST(x'' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(x'' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(x'' AS TEXT));
SELECT ALL * FROM rt0, v0 WHERE (((NULL) ISNULL)) ORDER BY ((((((((((rt0.c1)!=(rt0.c1)))OR(NULL)))OR((- (rt0.c2)))))OR(((rt0.c2)|(rt0.c2)))))AND(LOWER(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((rt0.c1)<>(rt0.c1)))OR(NULL)))OR((- (rt0.c2)))))OR(((rt0.c2)|(rt0.c2)))))AND(LOWER(v0.c0))) DESC);
SELECT ALL * FROM rt0, v0 WHERE (((NULL) ISNULL)) ORDER BY ((((((((((rt0.c1)!=(rt0.c1)))OR(NULL)))OR((- (rt0.c2)))))OR(((rt0.c2)|(rt0.c2)))))AND(LOWER(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((rt0.c1)<>(rt0.c1)))OR(NULL)))OR((- (rt0.c2)))))OR(((rt0.c2)|(rt0.c2)))))AND(LOWER(v0.c0))) DESC);
SELECT ALL * FROM rt0, v0 WHERE (((NULL) ISNULL)) ORDER BY ((((((((((rt0.c1)!=(rt0.c1)))OR(NULL)))OR((- (rt0.c2)))))OR(((rt0.c2)|(rt0.c2)))))AND(LOWER(v0.c0))) DESC;
SELECT ALL * FROM v0 WHERE ((('0.0')-(((v0.c0)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('0.0')-(((v0.c0)*(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((('0.0')-(((v0.c0)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('0.0')-(((v0.c0)*(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((('0.0')-(((v0.c0)*(v0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)<>(rt0.c2)))AND(CASE rt0.c0  WHEN '254306402' THEN rt0.c1 ELSE rt0.c1 END)))OR(x'd715')))AND(rt0.c1 COLLATE RTRIM)))AND('-1366404592'))) ORDER BY (((+ (rt0.c2))) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND ('-1149081744')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)<>(rt0.c2)))AND(CASE rt0.c0  WHEN '254306402' THEN rt0.c1 ELSE rt0.c1 END)))OR(x'd715')))AND(rt0.c1 COLLATE RTRIM)))AND('-1366404592'))) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c2))) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND ('-1149081744')) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)<>(rt0.c2)))AND(CASE rt0.c0  WHEN '254306402' THEN rt0.c1 ELSE rt0.c1 END)))OR(x'd715')))AND(rt0.c1 COLLATE RTRIM)))AND('-1366404592'))) ORDER BY (((+ (rt0.c2))) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND ('-1149081744')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)<>(rt0.c2)))AND(CASE rt0.c0  WHEN '254306402' THEN rt0.c1 ELSE rt0.c1 END)))OR(x'd715')))AND(rt0.c1 COLLATE RTRIM)))AND('-1366404592'))) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c2))) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND ('-1149081744')) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)<>(rt0.c2)))AND(CASE rt0.c0  WHEN '254306402' THEN rt0.c1 ELSE rt0.c1 END)))OR(x'd715')))AND(rt0.c1 COLLATE RTRIM)))AND('-1366404592'))) ORDER BY (((+ (rt0.c2))) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND ('-1149081744')) DESC;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 IN ()), v0.c0 COLLATE BINARY, ((v0.c0) IS FALSE)))<((0Xffffffff8cf11ab9, v0.c0, (v0.c0 IN ()))))) ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (TYPEOF(v0.c0)) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 IN ()), v0.c0 COLLATE BINARY, ((v0.c0) IS FALSE)))<((0xffffffff8cf11ab9, v0.c0, (v0.c0 IN ()))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (TYPEOF(v0.c0)) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ASC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 IN ()), v0.c0 COLLATE BINARY, ((v0.c0) IS FALSE)))<((0Xffffffff8cf11ab9, v0.c0, (v0.c0 IN ()))))) ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (TYPEOF(v0.c0)) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 IN ()), v0.c0 COLLATE BINARY, ((v0.c0) IS FALSE)))<((0xffffffff8cf11ab9, v0.c0, (v0.c0 IN ()))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (TYPEOF(v0.c0)) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ASC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 IN ()), v0.c0 COLLATE BINARY, ((v0.c0) IS FALSE)))<((0Xffffffff8cf11ab9, v0.c0, (v0.c0 IN ()))))) ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (TYPEOF(v0.c0)) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ASC;
SELECT ALL * FROM rt0, v0 WHERE ((((x'')) BETWEEN ((((rt0.c0) IS FALSE))) AND ((load_extension(rt0.c0))))) ORDER BY CAST(x'' AS INTEGER) DESC  NULLS FIRST, rt0.c2 ASC  NULLS LAST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN ((((rt0.c0) IS FALSE))) AND ((load_extension(rt0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(x'' AS INTEGER) DESC  NULLS FIRST, rt0.c2 ASC  NULLS LAST, NULL  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((((x'')) BETWEEN ((((rt0.c0) IS FALSE))) AND ((load_extension(rt0.c0))))) ORDER BY CAST(x'' AS INTEGER) DESC  NULLS FIRST, rt0.c2 ASC  NULLS LAST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN ((((rt0.c0) IS FALSE))) AND ((load_extension(rt0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(x'' AS INTEGER) DESC  NULLS FIRST, rt0.c2 ASC  NULLS LAST, NULL  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))))>((((rt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c2))=((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0)))))) ORDER BY (((rt0.c2) BETWEEN (0.3617954676125673) AND (rt0.c2)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))))>((((rt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c2))=((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2) BETWEEN (0.3617954676125673) AND (rt0.c2)) IN ()) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))))>((((rt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c2))=((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0)))))) ORDER BY (((rt0.c2) BETWEEN (0.3617954676125673) AND (rt0.c2)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))))>((((rt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c2))=((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2) BETWEEN (0.3617954676125673) AND (rt0.c2)) IN ()) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))))>((((rt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c2))=((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0)))))) ORDER BY (((rt0.c2) BETWEEN (0.3617954676125673) AND (rt0.c2)) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (0.004642061393185681);
SELECT SUM(count) FROM (SELECT ((0.004642061393185681) IS TRUE)  as count FROM rt0 NOT INDEXED, v0);
SELECT ALL * FROM rt0, v0 WHERE (0.004642061393185681);
SELECT SUM(count) FROM (SELECT ((0.004642061393185681) IS TRUE)  as count FROM rt0 NOT INDEXED, v0);
SELECT ALL * FROM rt0, v0 WHERE (0.004642061393185681);
SELECT * FROM v0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (v0.c0) AND (x'')))/(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (v0.c0) AND (x'')))/(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (v0.c0) AND (x'')))/(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (v0.c0) AND (x'')))/(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (v0.c0) AND (x'')))/(((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((v0.c0)=(rt0.c2)))>=(CASE x''  WHEN v0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)=(rt0.c2)))>=(CASE x''  WHEN v0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((v0.c0)=(rt0.c2)))>=(CASE x''  WHEN v0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)=(rt0.c2)))>=(CASE x''  WHEN v0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((v0.c0)=(rt0.c2)))>=(CASE x''  WHEN v0.c0 THEN rt0.c1 END)));
SELECT ALL * FROM v0, rt0 WHERE (LTRIM((NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM((NOT (rt0.c0)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (LTRIM((NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM((NOT (rt0.c0)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (LTRIM((NOT (rt0.c0))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON '' WHERE (CAST(((rt0.c2) ISNULL) AS TEXT)) ORDER BY 'kM07';
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) ISNULL) AS TEXT)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON '' ORDER BY 'kM07');
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON '' WHERE (CAST(((rt0.c2) ISNULL) AS TEXT)) ORDER BY 'kM07';
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) ISNULL) AS TEXT)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON '' ORDER BY 'kM07');
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON '' WHERE (CAST(((rt0.c2) ISNULL) AS TEXT)) ORDER BY 'kM07';
SELECT * FROM v0 WHERE (((LOWER(DISTINCT 0.8831585244552409))IS(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT 0.8831585244552409))IS(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((LOWER(DISTINCT 0.8831585244552409))IS(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT 0.8831585244552409))IS(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((LOWER(DISTINCT 0.8831585244552409))IS(v0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0 NOT INDEXED, v0 WHERE (((v0.c0 COLLATE NOCASE)/(((v0.c0) IS TRUE)))) ORDER BY LIKELY(DISTINCT rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE)/(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, v0 ORDER BY LIKELY(DISTINCT rt0.c1));
SELECT ALL * FROM rt0 NOT INDEXED, v0 WHERE (((v0.c0 COLLATE NOCASE)/(((v0.c0) IS TRUE)))) ORDER BY LIKELY(DISTINCT rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE)/(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, v0 ORDER BY LIKELY(DISTINCT rt0.c1));
SELECT ALL * FROM rt0 NOT INDEXED, v0 WHERE (((v0.c0 COLLATE NOCASE)/(((v0.c0) IS TRUE)))) ORDER BY LIKELY(DISTINCT rt0.c1);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((((((((v0.c0)OR(v0.c0)))AND(rt0.c0)))OR(v0.c0)))AND(v0.c0)) THEN ((rt0.c1)/(rt0.c1)) ELSE x'417a' END) ORDER BY (- (((v0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((v0.c0)OR(v0.c0)))AND(rt0.c0)))OR(v0.c0)))AND(v0.c0)) THEN ((rt0.c1)/(rt0.c1)) ELSE x'417a' END) IS TRUE)  as count FROM rt0, v0 ORDER BY (- (((v0.c0) NOT NULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((((((((v0.c0)OR(v0.c0)))AND(rt0.c0)))OR(v0.c0)))AND(v0.c0)) THEN ((rt0.c1)/(rt0.c1)) ELSE x'417a' END) ORDER BY (- (((v0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((v0.c0)OR(v0.c0)))AND(rt0.c0)))OR(v0.c0)))AND(v0.c0)) THEN ((rt0.c1)/(rt0.c1)) ELSE x'417a' END) IS TRUE)  as count FROM rt0, v0 ORDER BY (- (((v0.c0) NOT NULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((((((((v0.c0)OR(v0.c0)))AND(rt0.c0)))OR(v0.c0)))AND(v0.c0)) THEN ((rt0.c1)/(rt0.c1)) ELSE x'417a' END) ORDER BY (- (((v0.c0) NOT NULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c2)IS NOT(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS NOT(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c2)IS NOT(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS NOT(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c2)IS NOT(rt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 THEN ((rt0.c2)OR(rt0.c2)) WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) THEN ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)) WHEN NULLIF(rt0.c2, rt0.c2) THEN CAST(rt0.c2 AS TEXT) END) ORDER BY ((((((rt0.c2)AND(rt0.c2)))OR((rt0.c1 IN ()))))AND(((rt0.c1)|(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN ((rt0.c2)OR(rt0.c2)) WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) THEN ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)) WHEN NULLIF(rt0.c2, rt0.c2) THEN CAST(rt0.c2 AS TEXT) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c2)))OR((rt0.c1 IN ()))))AND(((rt0.c1)|(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 THEN ((rt0.c2)OR(rt0.c2)) WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) THEN ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)) WHEN NULLIF(rt0.c2, rt0.c2) THEN CAST(rt0.c2 AS TEXT) END) ORDER BY ((((((rt0.c2)AND(rt0.c2)))OR((rt0.c1 IN ()))))AND(((rt0.c1)|(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN ((rt0.c2)OR(rt0.c2)) WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) THEN ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)) WHEN NULLIF(rt0.c2, rt0.c2) THEN CAST(rt0.c2 AS TEXT) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c2)))OR((rt0.c1 IN ()))))AND(((rt0.c1)|(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 THEN ((rt0.c2)OR(rt0.c2)) WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) THEN ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)) WHEN NULLIF(rt0.c2, rt0.c2) THEN CAST(rt0.c2 AS TEXT) END) ORDER BY ((((((rt0.c2)AND(rt0.c2)))OR((rt0.c1 IN ()))))AND(((rt0.c1)|(rt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN ()) AS REAL)) ORDER BY ((v0.c0 COLLATE NOCASE)<>(v0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE NOCASE)!=(v0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN ()) AS REAL)) ORDER BY ((v0.c0 COLLATE NOCASE)<>(v0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE NOCASE)!=(v0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN ()) AS REAL)) ORDER BY ((v0.c0 COLLATE NOCASE)<>(v0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt0 WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c2 AS NUMERIC), 0.13436049327129773));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST(rt0.c2 AS NUMERIC), 0.13436049327129773)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt0 WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c2 AS NUMERIC), 0.13436049327129773));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST(rt0.c2 AS NUMERIC), 0.13436049327129773)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt0 WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c2 AS NUMERIC), 0.13436049327129773));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON '-0.0' WHERE (ABS(x''));
SELECT SUM(count) FROM (SELECT ALL ((ABS(x'')) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON '-0.0');
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON '-0.0' WHERE (ABS(x''));
SELECT SUM(count) FROM (SELECT ALL ((ABS(x'')) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON '-0.0');
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON '-0.0' WHERE (ABS(x''));
SELECT ALL * FROM v0 WHERE ((- (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((- (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((- (v0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM v0 WHERE (HEX(DISTINCT ((v0.c0)/(v0.c0)))) ORDER BY CASE v0.c0  WHEN v0.c0 THEN 0.194846577375673 ELSE v0.c0 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((v0.c0)/(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c0  WHEN v0.c0 THEN 0.194846577375673 ELSE v0.c0 END COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (HEX(DISTINCT ((v0.c0)/(v0.c0)))) ORDER BY CASE v0.c0  WHEN v0.c0 THEN 0.194846577375673 ELSE v0.c0 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((v0.c0)/(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c0  WHEN v0.c0 THEN 0.194846577375673 ELSE v0.c0 END COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (HEX(DISTINCT ((v0.c0)/(v0.c0)))) ORDER BY CASE v0.c0  WHEN v0.c0 THEN 0.194846577375673 ELSE v0.c0 END COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)AND('-644999641')))OR(CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)AND('-644999641')))OR(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)AND('-644999641')))OR(CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)AND('-644999641')))OR(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)AND('-644999641')))OR(CAST(rt0.c1 AS INTEGER))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)<=(0.8588834673152765))) BETWEEN ((- (rt0.c2))) AND (((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))))) ORDER BY (((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)) IN (((rt0.c0) BETWEEN (rt0.c0) AND (x'')))) ASC, (((rt0.c0 IN ()))IS(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<=(0.8588834673152765))) BETWEEN ((- (rt0.c2))) AND (((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)) IN (((rt0.c0) BETWEEN (rt0.c0) AND (x'')))) ASC, (((rt0.c0 IN ()))IS(rt0.c0)) ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)<=(0.8588834673152765))) BETWEEN ((- (rt0.c2))) AND (((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))))) ORDER BY (((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)) IN (((rt0.c0) BETWEEN (rt0.c0) AND (x'')))) ASC, (((rt0.c0 IN ()))IS(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<=(0.8588834673152765))) BETWEEN ((- (rt0.c2))) AND (((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)) IN (((rt0.c0) BETWEEN (rt0.c0) AND (x'')))) ASC, (((rt0.c0 IN ()))IS(rt0.c0)) ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)<=(0.8588834673152765))) BETWEEN ((- (rt0.c2))) AND (((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))))) ORDER BY (((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)) IN (((rt0.c0) BETWEEN (rt0.c0) AND (x'')))) ASC, (((rt0.c0 IN ()))IS(rt0.c0)) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (0Xffffffffb48d85da)))/(375406188 COLLATE BINARY))) ORDER BY ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))<>(((rt0.c1)<(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c1) AND (0xffffffffb48d85da)))/(375406188 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))<>(((rt0.c1)<(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (0Xffffffffb48d85da)))/(375406188 COLLATE BINARY))) ORDER BY ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))<>(((rt0.c1)<(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c1) AND (0xffffffffb48d85da)))/(375406188 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))<>(((rt0.c1)<(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (0Xffffffffb48d85da)))/(375406188 COLLATE BINARY))) ORDER BY ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))<>(((rt0.c1)<(rt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE ((v0.c0)||(rt0.c2))  WHEN (rt0.c2 IN (rt0.c1, rt0.c2)) THEN CAST(rt0.c2 AS INTEGER) END) ORDER BY CASE (rt0.c1 IN ())  WHEN ((v0.c0)OR('-1059880882')) THEN NULL END DESC, ROUND(((rt0.c2) IS FALSE), CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)||(rt0.c2))  WHEN (rt0.c2 IN (rt0.c1, rt0.c2)) THEN CAST(rt0.c2 AS INTEGER) END) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE (rt0.c1 IN ())  WHEN ((v0.c0)OR('-1059880882')) THEN NULL END DESC, ROUND(((rt0.c2) IS FALSE), CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE ((v0.c0)||(rt0.c2))  WHEN (rt0.c2 IN (rt0.c1, rt0.c2)) THEN CAST(rt0.c2 AS INTEGER) END) ORDER BY CASE (rt0.c1 IN ())  WHEN ((v0.c0)OR('-1059880882')) THEN NULL END DESC, ROUND(((rt0.c2) IS FALSE), CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)||(rt0.c2))  WHEN (rt0.c2 IN (rt0.c1, rt0.c2)) THEN CAST(rt0.c2 AS INTEGER) END) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE (rt0.c1 IN ())  WHEN ((v0.c0)OR('-1059880882')) THEN NULL END DESC, ROUND(((rt0.c2) IS FALSE), CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE ((v0.c0)||(rt0.c2))  WHEN (rt0.c2 IN (rt0.c1, rt0.c2)) THEN CAST(rt0.c2 AS INTEGER) END) ORDER BY CASE (rt0.c1 IN ())  WHEN ((v0.c0)OR('-1059880882')) THEN NULL END DESC, ROUND(((rt0.c2) IS FALSE), CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (('l,sf/' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('l,sf/' IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (('l,sf/' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('l,sf/' IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (('l,sf/' IN ()));
SELECT ALL * FROM rt0, v0 WHERE (((CASE WHEN rt0.c0 THEN NULL ELSE rt0.c0 END) IS FALSE)) ORDER BY ((((((((CAST(rt0.c0 AS BLOB))OR(((rt0.c0)-(rt0.c0)))))AND(rt0.c2)))OR(((rt0.c1)*(rt0.c0)))))AND((((v0.c0))<=((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN NULL ELSE rt0.c0 END) IS FALSE)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((CAST(rt0.c0 AS BLOB))OR(((rt0.c0)-(rt0.c0)))))AND(rt0.c2)))OR(((rt0.c1)*(rt0.c0)))))AND((((v0.c0))<=((rt0.c2))))) ASC);
SELECT ALL * FROM rt0, v0 WHERE (((CASE WHEN rt0.c0 THEN NULL ELSE rt0.c0 END) IS FALSE)) ORDER BY ((((((((CAST(rt0.c0 AS BLOB))OR(((rt0.c0)-(rt0.c0)))))AND(rt0.c2)))OR(((rt0.c1)*(rt0.c0)))))AND((((v0.c0))<=((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN NULL ELSE rt0.c0 END) IS FALSE)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((CAST(rt0.c0 AS BLOB))OR(((rt0.c0)-(rt0.c0)))))AND(rt0.c2)))OR(((rt0.c1)*(rt0.c0)))))AND((((v0.c0))<=((rt0.c2))))) ASC);
SELECT ALL * FROM rt0, v0 WHERE (((CASE WHEN rt0.c0 THEN NULL ELSE rt0.c0 END) IS FALSE)) ORDER BY ((((((((CAST(rt0.c0 AS BLOB))OR(((rt0.c0)-(rt0.c0)))))AND(rt0.c2)))OR(((rt0.c1)*(rt0.c0)))))AND((((v0.c0))<=((rt0.c2))))) ASC;
SELECT COUNT(*) FROM v0 WHERE (((('0.6335558208656157' IN (v0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND (v0.c0 COLLATE BINARY))) ORDER BY ((LIKE(v0.c0, v0.c0, 'x')) NOTNULL), ((v0.c0) BETWEEN (v0.c0) AND (0xffffffffbde250e8)) COLLATE RTRIM, NULL;
SELECT SUM(count) FROM (SELECT ALL ((((('0.6335558208656157' IN (v0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY ((LIKE(v0.c0, v0.c0, 'x')) NOTNULL), ((v0.c0) BETWEEN (v0.c0) AND (0Xffffffffbde250e8)) COLLATE RTRIM, NULL);
SELECT COUNT(*) FROM v0 WHERE (((('0.6335558208656157' IN (v0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND (v0.c0 COLLATE BINARY))) ORDER BY ((LIKE(v0.c0, v0.c0, 'x')) NOTNULL), ((v0.c0) BETWEEN (v0.c0) AND (0xffffffffbde250e8)) COLLATE RTRIM, NULL;
SELECT SUM(count) FROM (SELECT ALL ((((('0.6335558208656157' IN (v0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY ((LIKE(v0.c0, v0.c0, 'x')) NOTNULL), ((v0.c0) BETWEEN (v0.c0) AND (0Xffffffffbde250e8)) COLLATE RTRIM, NULL);
SELECT COUNT(*) FROM v0 WHERE (((('0.6335558208656157' IN (v0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND (v0.c0 COLLATE BINARY))) ORDER BY ((LIKE(v0.c0, v0.c0, 'x')) NOTNULL), ((v0.c0) BETWEEN (v0.c0) AND (0xffffffffbde250e8)) COLLATE RTRIM, NULL;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((rt0.c1 IN (((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((rt0.c1 IN (((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((rt0.c1 IN (((rt0.c0) IS FALSE))));
SELECT * FROM v0, rt0 WHERE (((((((x'')<(rt0.c0)))AND(CAST(rt0.c1 AS TEXT))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY (NOT ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')<(rt0.c0)))AND(CAST(rt0.c1 AS TEXT))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (NOT ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT * FROM v0, rt0 WHERE (((((((x'')<(rt0.c0)))AND(CAST(rt0.c1 AS TEXT))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY (NOT ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')<(rt0.c0)))AND(CAST(rt0.c1 AS TEXT))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (NOT ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT * FROM v0, rt0 WHERE (((((((x'')<(rt0.c0)))AND(CAST(rt0.c1 AS TEXT))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY (NOT ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 WHERE (((((((((CAST(v0.c0 AS INTEGER))OR((((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))))))OR(((NULL)AND(v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(v0.c0 AS INTEGER))OR((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))))))OR(((NULL)AND(v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((((CAST(v0.c0 AS INTEGER))OR((((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))))))OR(((NULL)AND(v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(v0.c0 AS INTEGER))OR((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))))))OR(((NULL)AND(v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((((CAST(v0.c0 AS INTEGER))OR((((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))))))OR(((NULL)AND(v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(HEX(v0.c0)))) ORDER BY (((v0.c0 IN (v0.c0))) BETWEEN (((v0.c0)<(v0.c0))) AND (UPPER(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(HEX(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0))) BETWEEN (((v0.c0)<(v0.c0))) AND (UPPER(v0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(HEX(v0.c0)))) ORDER BY (((v0.c0 IN (v0.c0))) BETWEEN (((v0.c0)<(v0.c0))) AND (UPPER(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(HEX(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0))) BETWEEN (((v0.c0)<(v0.c0))) AND (UPPER(v0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(HEX(v0.c0)))) ORDER BY (((v0.c0 IN (v0.c0))) BETWEEN (((v0.c0)<(v0.c0))) AND (UPPER(v0.c0)))  NULLS FIRST;
SELECT * FROM v0 WHERE (SQLITE_COMPILEOPTION_GET((0.9247596213411192 IN ()))) ORDER BY (('-643734163') IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET((0.9247596213411192 IN ()))) IS TRUE)  as count FROM v0 ORDER BY (('-643734163') IS FALSE) DESC);
SELECT * FROM v0 WHERE (SQLITE_COMPILEOPTION_GET((0.9247596213411192 IN ()))) ORDER BY (('-643734163') IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET((0.9247596213411192 IN ()))) IS TRUE)  as count FROM v0 ORDER BY (('-643734163') IS FALSE) DESC);
SELECT * FROM v0 WHERE (SQLITE_COMPILEOPTION_GET((0.9247596213411192 IN ()))) ORDER BY (('-643734163') IS FALSE) DESC;
SELECT COUNT(*) FROM rt0, v0 WHERE ((~ ('<')));
SELECT SUM(count) FROM (SELECT (((~ ('<'))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((~ ('<')));
SELECT SUM(count) FROM (SELECT (((~ ('<'))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((~ ('<')));
SELECT * FROM v0 WHERE (CAST(CAST(v0.c0 AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS REAL) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(CAST(v0.c0 AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS REAL) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(CAST(v0.c0 AS REAL) AS TEXT));
SELECT ALL * FROM rt0 WHERE (IFNULL((NULL IN ()), ((((-1429584689)OR(rt0.c1)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((NULL IN ()), ((((-1429584689)OR(rt0.c1)))OR(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (IFNULL((NULL IN ()), ((((-1429584689)OR(rt0.c1)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((NULL IN ()), ((((-1429584689)OR(rt0.c1)))OR(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (IFNULL((NULL IN ()), ((((-1429584689)OR(rt0.c1)))OR(rt0.c2))));
SELECT * FROM v0 WHERE (LIKELIHOOD((v0.c0 IN (v0.c0, v0.c0)), 0.8034823402737711)) ORDER BY (- (((v0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((v0.c0 IN (v0.c0, v0.c0)), 0.8034823402737711)) IS TRUE)  as count FROM v0 ORDER BY (- (((v0.c0) NOTNULL)))  NULLS LAST);
SELECT * FROM v0 WHERE (LIKELIHOOD((v0.c0 IN (v0.c0, v0.c0)), 0.8034823402737711)) ORDER BY (- (((v0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((v0.c0 IN (v0.c0, v0.c0)), 0.8034823402737711)) IS TRUE)  as count FROM v0 ORDER BY (- (((v0.c0) NOTNULL)))  NULLS LAST);
SELECT * FROM v0 WHERE (LIKELIHOOD((v0.c0 IN (v0.c0, v0.c0)), 0.8034823402737711)) ORDER BY (- (((v0.c0) NOTNULL)))  NULLS LAST;
SELECT * FROM rt0 WHERE ('kf') ORDER BY (((0x61bc122) NOT NULL) IN (CAST(rt0.c0 AS TEXT), (- ('S2W聎'))));
SELECT SUM(count) FROM (SELECT ALL (('kf') IS TRUE)  as count FROM rt0 ORDER BY (((0X61bc122) NOT NULL) IN (CAST(rt0.c0 AS TEXT), (- ('S2W聎')))));
SELECT * FROM rt0 WHERE ('kf') ORDER BY (((0x61bc122) NOT NULL) IN (CAST(rt0.c0 AS TEXT), (- ('S2W聎'))));
SELECT SUM(count) FROM (SELECT ALL (('kf') IS TRUE)  as count FROM rt0 ORDER BY (((0X61bc122) NOT NULL) IN (CAST(rt0.c0 AS TEXT), (- ('S2W聎')))));
SELECT * FROM rt0 WHERE ('kf') ORDER BY (((0x61bc122) NOT NULL) IN (CAST(rt0.c0 AS TEXT), (- ('S2W聎'))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (('-1910854748' IN ())) ORDER BY x'' COLLATE RTRIM, ((rt0.c1) ISNULL) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((('-1910854748' IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY x'' COLLATE RTRIM, ((rt0.c1) ISNULL) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (('-1910854748' IN ())) ORDER BY x'' COLLATE RTRIM, ((rt0.c1) ISNULL) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((('-1910854748' IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY x'' COLLATE RTRIM, ((rt0.c1) ISNULL) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (('-1910854748' IN ())) ORDER BY x'' COLLATE RTRIM, ((rt0.c1) ISNULL) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((x'1d70' COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'1d70' COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((x'1d70' COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'1d70' COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((x'1d70' COLLATE RTRIM IN ()));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((rt0.c1)IS NOT(rt0.c0))) NOT NULL) WHERE (((((((rt0.c2)OR(x'')))OR(rt0.c2))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (CAST(rt0.c1 AS INTEGER)))) ORDER BY -1.803645895E9  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(x'')))OR(rt0.c2))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((rt0.c1)IS NOT(rt0.c0))) NOT NULL) ORDER BY -1.803645895E9  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((rt0.c1)IS NOT(rt0.c0))) NOT NULL) WHERE (((((((rt0.c2)OR(x'')))OR(rt0.c2))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (CAST(rt0.c1 AS INTEGER)))) ORDER BY -1.803645895E9  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(x'')))OR(rt0.c2))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((rt0.c1)IS NOT(rt0.c0))) NOT NULL) ORDER BY -1.803645895E9  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((rt0.c1)IS NOT(rt0.c0))) NOT NULL) WHERE (((((((rt0.c2)OR(x'')))OR(rt0.c2))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (CAST(rt0.c1 AS INTEGER)))) ORDER BY -1.803645895E9  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((NULL IN ()))AND((('412344659') NOT BETWEEN (rt0.c0) AND (v0.c0)))))OR((((rt0.c2))<(('-2020328692'))))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL IN ()))AND((('412344659') NOT BETWEEN (rt0.c0) AND (v0.c0)))))OR((((rt0.c2))<(('-2020328692')))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((NULL IN ()))AND((('412344659') NOT BETWEEN (rt0.c0) AND (v0.c0)))))OR((((rt0.c2))<(('-2020328692'))))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL IN ()))AND((('412344659') NOT BETWEEN (rt0.c0) AND (v0.c0)))))OR((((rt0.c2))<(('-2020328692')))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((NULL IN ()))AND((('412344659') NOT BETWEEN (rt0.c0) AND (v0.c0)))))OR((((rt0.c2))<(('-2020328692'))))));
SELECT * FROM v0, rt0 WHERE (rt0.c0) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY NULL  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (rt0.c0) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY NULL  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (rt0.c0) ORDER BY NULL  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (v0.c0);
SELECT ALL * FROM v0, rt0 WHERE ((- (((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((- (((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((- (((rt0.c0) NOTNULL))));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((((((v0.c0)AND(rt0.c2)))OR(v0.c0))) BETWEEN (CASE WHEN rt0.c2 THEN v0.c0 END) AND (((rt0.c2)|(rt0.c1)))) WHERE (CAST(rt0.c1 AS BLOB)) ORDER BY x'58c7b890';
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS BLOB)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((((v0.c0)AND(rt0.c2)))OR(v0.c0))) BETWEEN (CASE WHEN rt0.c2 THEN v0.c0 END) AND (((rt0.c2)|(rt0.c1)))) ORDER BY x'58c7b890');
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((((((v0.c0)AND(rt0.c2)))OR(v0.c0))) BETWEEN (CASE WHEN rt0.c2 THEN v0.c0 END) AND (((rt0.c2)|(rt0.c1)))) WHERE (CAST(rt0.c1 AS BLOB)) ORDER BY x'58c7b890';
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS BLOB)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((((v0.c0)AND(rt0.c2)))OR(v0.c0))) BETWEEN (CASE WHEN rt0.c2 THEN v0.c0 END) AND (((rt0.c2)|(rt0.c1)))) ORDER BY x'58c7b890');
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((((((v0.c0)AND(rt0.c2)))OR(v0.c0))) BETWEEN (CASE WHEN rt0.c2 THEN v0.c0 END) AND (((rt0.c2)|(rt0.c1)))) WHERE (CAST(rt0.c1 AS BLOB)) ORDER BY x'58c7b890';
SELECT * FROM rt0 WHERE (IFNULL((rt0.c2 IN ()), CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((rt0.c2 IN ()), CAST(rt0.c1 AS INTEGER))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (IFNULL((rt0.c2 IN ()), CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((rt0.c2 IN ()), CAST(rt0.c1 AS INTEGER))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (IFNULL((rt0.c2 IN ()), CAST(rt0.c1 AS INTEGER)));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2 IN ()))GLOB((rt0.c2 IN ()))) WHERE ((((((~ (v0.c0)))OR('-643717008')))OR(ABS(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((~ (v0.c0)))OR('-643717008')))OR(ABS(rt0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2 IN ()))GLOB((rt0.c2 IN ()))));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2 IN ()))GLOB((rt0.c2 IN ()))) WHERE ((((((~ (v0.c0)))OR('-643717008')))OR(ABS(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((~ (v0.c0)))OR('-643717008')))OR(ABS(rt0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2 IN ()))GLOB((rt0.c2 IN ()))));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2 IN ()))GLOB((rt0.c2 IN ()))) WHERE ((((((~ (v0.c0)))OR('-643717008')))OR(ABS(rt0.c0))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((v0.c0 COLLATE NOCASE)<=(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE)<=(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((v0.c0 COLLATE NOCASE)<=(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE)<=(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((v0.c0 COLLATE NOCASE)<=(CAST(rt0.c0 AS REAL))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (- ((rt0.c0 IN (rt0.c1)))) WHERE (rt0.c1) ORDER BY 462486161 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (- ((rt0.c0 IN (rt0.c1)))) ORDER BY 462486161 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (- ((rt0.c0 IN (rt0.c1)))) WHERE (rt0.c1) ORDER BY 462486161 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (- ((rt0.c0 IN (rt0.c1)))) ORDER BY 462486161 ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CASE WHEN (((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))) THEN (NOT (v0.c0)) WHEN 0.7571904677943281 THEN NULL WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)OR(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))) THEN (NOT (v0.c0)) WHEN 0.7571904677943281 THEN NULL WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)OR(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN (((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))) THEN (NOT (v0.c0)) WHEN 0.7571904677943281 THEN NULL WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)OR(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))) THEN (NOT (v0.c0)) WHEN 0.7571904677943281 THEN NULL WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)OR(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN (((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))) THEN (NOT (v0.c0)) WHEN 0.7571904677943281 THEN NULL WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)OR(v0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((((((((((v0.c0)OR(NULL)))OR(rt0.c0)))OR(x'')))AND(rt0.c2)))AND('-1599471408')))OR(((rt0.c0)*(rt0.c1)))) WHERE ((((rt0.c1 IN ())) BETWEEN (rt0.c1) AND (CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) BETWEEN (rt0.c1) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((((((((((v0.c0)OR(NULL)))OR(rt0.c0)))OR(x'')))AND(rt0.c2)))AND('-1599471408')))OR(((rt0.c0)*(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((((((((((v0.c0)OR(NULL)))OR(rt0.c0)))OR(x'')))AND(rt0.c2)))AND('-1599471408')))OR(((rt0.c0)*(rt0.c1)))) WHERE ((((rt0.c1 IN ())) BETWEEN (rt0.c1) AND (CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) BETWEEN (rt0.c1) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((((((((((v0.c0)OR(NULL)))OR(rt0.c0)))OR(x'')))AND(rt0.c2)))AND('-1599471408')))OR(((rt0.c0)*(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((((((((((v0.c0)OR(NULL)))OR(rt0.c0)))OR(x'')))AND(rt0.c2)))AND('-1599471408')))OR(((rt0.c0)*(rt0.c1)))) WHERE ((((rt0.c1 IN ())) BETWEEN (rt0.c1) AND (CAST(rt0.c2 AS TEXT))));
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(((rt0.c2)<(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)<(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(((rt0.c2)<(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)<(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(((rt0.c2)<(rt0.c2)) AS TEXT));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) IS FALSE)) BETWEEN (((rt0.c1) IS FALSE)) AND ((NOT (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS FALSE)) BETWEEN (((rt0.c1) IS FALSE)) AND ((NOT (NULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) IS FALSE)) BETWEEN (((rt0.c1) IS FALSE)) AND ((NOT (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS FALSE)) BETWEEN (((rt0.c1) IS FALSE)) AND ((NOT (NULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) IS FALSE)) BETWEEN (((rt0.c1) IS FALSE)) AND ((NOT (NULL)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('0.8829640576308497') ORDER BY (((v0.c0)) NOT BETWEEN ((SUBSTR(rt0.c0, rt0.c0))) AND ((CAST(rt0.c2 AS REAL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0.8829640576308497') IS TRUE)  as count FROM v0, rt0 ORDER BY (((v0.c0)) NOT BETWEEN ((SUBSTR(rt0.c0, rt0.c0))) AND ((CAST(rt0.c2 AS REAL)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('0.8829640576308497') ORDER BY (((v0.c0)) NOT BETWEEN ((SUBSTR(rt0.c0, rt0.c0))) AND ((CAST(rt0.c2 AS REAL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0.8829640576308497') IS TRUE)  as count FROM v0, rt0 ORDER BY (((v0.c0)) NOT BETWEEN ((SUBSTR(rt0.c0, rt0.c0))) AND ((CAST(rt0.c2 AS REAL)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('0.8829640576308497') ORDER BY (((v0.c0)) NOT BETWEEN ((SUBSTR(rt0.c0, rt0.c0))) AND ((CAST(rt0.c2 AS REAL)))) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (json_valid(x''));
SELECT SUM(count) FROM (SELECT ((json_valid(x'')) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (json_valid(x''));
SELECT SUM(count) FROM (SELECT ((json_valid(x'')) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (json_valid(x''));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS TEXT)) ORDER BY CASE WHEN ((NULL)GLOB(0.2814199383044642)) THEN ((v0.c0)!=(v0.c0)) ELSE (+ ('')) END  NULLS LAST, v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((NULL)GLOB(0.2814199383044642)) THEN ((v0.c0)!=(v0.c0)) ELSE (+ ('')) END  NULLS LAST, v0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS TEXT)) ORDER BY CASE WHEN ((NULL)GLOB(0.2814199383044642)) THEN ((v0.c0)!=(v0.c0)) ELSE (+ ('')) END  NULLS LAST, v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((NULL)GLOB(0.2814199383044642)) THEN ((v0.c0)!=(v0.c0)) ELSE (+ ('')) END  NULLS LAST, v0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS TEXT)) ORDER BY CASE WHEN ((NULL)GLOB(0.2814199383044642)) THEN ((v0.c0)!=(v0.c0)) ELSE (+ ('')) END  NULLS LAST, v0.c0;
SELECT * FROM rt0, v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) ELSE rt0.c1 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 COLLATE BINARY THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) ELSE rt0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) ELSE rt0.c1 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 COLLATE BINARY THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) ELSE rt0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) ELSE rt0.c1 COLLATE RTRIM END);
SELECT * FROM v0 WHERE (x'' COLLATE RTRIM) ORDER BY (v0.c0 COLLATE RTRIM IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 COLLATE RTRIM IN ())  NULLS FIRST);
SELECT * FROM v0 WHERE (x'' COLLATE RTRIM) ORDER BY (v0.c0 COLLATE RTRIM IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 COLLATE RTRIM IN ())  NULLS FIRST);
SELECT * FROM v0 WHERE (x'' COLLATE RTRIM) ORDER BY (v0.c0 COLLATE RTRIM IN ())  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c2)*(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)*(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)*(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)*(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)*(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)));
SELECT * FROM v0, rt0 WHERE ((((rt0.c1)) BETWEEN ((CASE WHEN v0.c0 THEN rt0.c1 END)) AND (((v0.c0 IN (rt0.c2)))))) ORDER BY ((((CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END)OR((((v0.c0))<=((rt0.c0))))))AND(((((rt0.c1)OR(rt0.c2)))AND(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((CASE WHEN v0.c0 THEN rt0.c1 END)) AND (((v0.c0 IN (rt0.c2)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END)OR((((v0.c0))<=((rt0.c0))))))AND(((((rt0.c1)OR(rt0.c2)))AND(v0.c0))))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ((((rt0.c1)) BETWEEN ((CASE WHEN v0.c0 THEN rt0.c1 END)) AND (((v0.c0 IN (rt0.c2)))))) ORDER BY ((((CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END)OR((((v0.c0))<=((rt0.c0))))))AND(((((rt0.c1)OR(rt0.c2)))AND(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((CASE WHEN v0.c0 THEN rt0.c1 END)) AND (((v0.c0 IN (rt0.c2)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END)OR((((v0.c0))<=((rt0.c0))))))AND(((((rt0.c1)OR(rt0.c2)))AND(v0.c0))))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ((((rt0.c1)) BETWEEN ((CASE WHEN v0.c0 THEN rt0.c1 END)) AND (((v0.c0 IN (rt0.c2)))))) ORDER BY ((((CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END)OR((((v0.c0))<=((rt0.c0))))))AND(((((rt0.c1)OR(rt0.c2)))AND(v0.c0))))  NULLS LAST;
SELECT * FROM v0 WHERE ((((((((((v0.c0 IN ()))AND((((('3!')AND(v0.c0)))AND(v0.c0)))))OR(((v0.c0)<>(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((((v0.c0)AND(v0.c0)))AND(0.10278504811986278))))) ORDER BY 0.7991517201446662;
SELECT SUM(count) FROM (SELECT (((((((((((v0.c0 IN ()))AND((((('3!')AND(v0.c0)))AND(v0.c0)))))OR(((v0.c0)!=(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((((v0.c0)AND(v0.c0)))AND(0.10278504811986278))))) IS TRUE)  as count FROM v0 ORDER BY 0.7991517201446662);
SELECT * FROM v0 WHERE ((((((((((v0.c0 IN ()))AND((((('3!')AND(v0.c0)))AND(v0.c0)))))OR(((v0.c0)<>(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((((v0.c0)AND(v0.c0)))AND(0.10278504811986278))))) ORDER BY 0.7991517201446662;
SELECT SUM(count) FROM (SELECT (((((((((((v0.c0 IN ()))AND((((('3!')AND(v0.c0)))AND(v0.c0)))))OR(((v0.c0)!=(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((((v0.c0)AND(v0.c0)))AND(0.10278504811986278))))) IS TRUE)  as count FROM v0 ORDER BY 0.7991517201446662);
SELECT * FROM v0 WHERE ((((((((((v0.c0 IN ()))AND((((('3!')AND(v0.c0)))AND(v0.c0)))))OR(((v0.c0)<>(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((((v0.c0)AND(v0.c0)))AND(0.10278504811986278))))) ORDER BY 0.7991517201446662;
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c1)>>(rt0.c1)))AND(((rt0.c2) NOT NULL))))OR(rt0.c0 COLLATE BINARY)))AND(((rt0.c0)OR(rt0.c1)))))AND((rt0.c2 IN ())))) ORDER BY ((((rt0.c2)<<(rt0.c0)))-(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)>>(rt0.c1)))AND(((rt0.c2) NOT NULL))))OR(rt0.c0 COLLATE BINARY)))AND(((rt0.c0)OR(rt0.c1)))))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)<<(rt0.c0)))-(rt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c1)>>(rt0.c1)))AND(((rt0.c2) NOT NULL))))OR(rt0.c0 COLLATE BINARY)))AND(((rt0.c0)OR(rt0.c1)))))AND((rt0.c2 IN ())))) ORDER BY ((((rt0.c2)<<(rt0.c0)))-(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)>>(rt0.c1)))AND(((rt0.c2) NOT NULL))))OR(rt0.c0 COLLATE BINARY)))AND(((rt0.c0)OR(rt0.c1)))))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)<<(rt0.c0)))-(rt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c1)>>(rt0.c1)))AND(((rt0.c2) NOT NULL))))OR(rt0.c0 COLLATE BINARY)))AND(((rt0.c0)OR(rt0.c1)))))AND((rt0.c2 IN ())))) ORDER BY ((((rt0.c2)<<(rt0.c0)))-(rt0.c0))  NULLS LAST;
SELECT * FROM rt0 WHERE (CAST((((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c1))<=((rt0.c2, rt0.c0, rt0.c1, rt0.c0, 0.05278977349046998))) AS BLOB)) ORDER BY SUBSTR('1552101707', (((rt0.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2, rt0.c0, '8H{')) AND ((rt0.c0, x'725b', rt0.c2, rt0.c1, rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c1))<=((rt0.c2, rt0.c0, rt0.c1, rt0.c0, 0.05278977349046998))) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY SUBSTR('1552101707', (((rt0.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2, rt0.c0, '8H{')) AND ((rt0.c0, x'725b', rt0.c2, rt0.c1, rt0.c2))))  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST((((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c1))<=((rt0.c2, rt0.c0, rt0.c1, rt0.c0, 0.05278977349046998))) AS BLOB)) ORDER BY SUBSTR('1552101707', (((rt0.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2, rt0.c0, '8H{')) AND ((rt0.c0, x'725b', rt0.c2, rt0.c1, rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c1))<=((rt0.c2, rt0.c0, rt0.c1, rt0.c0, 0.05278977349046998))) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY SUBSTR('1552101707', (((rt0.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2, rt0.c0, '8H{')) AND ((rt0.c0, x'725b', rt0.c2, rt0.c1, rt0.c2))))  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST((((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c1))<=((rt0.c2, rt0.c0, rt0.c1, rt0.c0, 0.05278977349046998))) AS BLOB)) ORDER BY SUBSTR('1552101707', (((rt0.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2, rt0.c0, '8H{')) AND ((rt0.c0, x'725b', rt0.c2, rt0.c1, rt0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) IS TRUE) IN ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((v0.c0) IS TRUE) IN ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) IS TRUE) IN ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((v0.c0) IS TRUE) IN ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) IS TRUE) IN ((v0.c0 IN ()))));
SELECT * FROM v0 WHERE ('<,') ORDER BY (((((x'') NOTNULL)))>=(('Z稆,Y#'))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('<,') IS TRUE)  as count FROM v0 ORDER BY (((((x'') NOTNULL)))>=(('Z稆,Y#'))) DESC);
SELECT * FROM v0 WHERE ('<,') ORDER BY (((((x'') NOTNULL)))>=(('Z稆,Y#'))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('<,') IS TRUE)  as count FROM v0 ORDER BY (((((x'') NOTNULL)))>=(('Z稆,Y#'))) DESC);
SELECT * FROM v0 WHERE ('<,') ORDER BY (((((x'') NOTNULL)))>=(('Z稆,Y#'))) DESC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2 COLLATE RTRIM, CAST(v0.c0 AS BLOB), ((v0.c0)AND(rt0.c2))))<>((((rt0.c0) NOT NULL), (('-1803645895')+(v0.c0)), rt0.c1 COLLATE RTRIM)))) ORDER BY ((((rt0.c1))!=((rt0.c0))) IN (CAST(v0.c0 AS NUMERIC), ((rt0.c2)GLOB(rt0.c0)))), CASE ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))  WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)) THEN rt0.c0 COLLATE RTRIM ELSE (- (v0.c0)) END;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE RTRIM, CAST(v0.c0 AS BLOB), ((v0.c0)AND(rt0.c2))))!=((((rt0.c0) NOT NULL), (('-1803645895')+(v0.c0)), rt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c1))<>((rt0.c0))) IN (CAST(v0.c0 AS NUMERIC), ((rt0.c2)GLOB(rt0.c0)))), CASE ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))  WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)) THEN rt0.c0 COLLATE RTRIM ELSE (- (v0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2 COLLATE RTRIM, CAST(v0.c0 AS BLOB), ((v0.c0)AND(rt0.c2))))<>((((rt0.c0) NOT NULL), (('-1803645895')+(v0.c0)), rt0.c1 COLLATE RTRIM)))) ORDER BY ((((rt0.c1))!=((rt0.c0))) IN (CAST(v0.c0 AS NUMERIC), ((rt0.c2)GLOB(rt0.c0)))), CASE ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))  WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)) THEN rt0.c0 COLLATE RTRIM ELSE (- (v0.c0)) END;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE RTRIM, CAST(v0.c0 AS BLOB), ((v0.c0)AND(rt0.c2))))!=((((rt0.c0) NOT NULL), (('-1803645895')+(v0.c0)), rt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c1))<>((rt0.c0))) IN (CAST(v0.c0 AS NUMERIC), ((rt0.c2)GLOB(rt0.c0)))), CASE ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))  WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)) THEN rt0.c0 COLLATE RTRIM ELSE (- (v0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2 COLLATE RTRIM, CAST(v0.c0 AS BLOB), ((v0.c0)AND(rt0.c2))))<>((((rt0.c0) NOT NULL), (('-1803645895')+(v0.c0)), rt0.c1 COLLATE RTRIM)))) ORDER BY ((((rt0.c1))!=((rt0.c0))) IN (CAST(v0.c0 AS NUMERIC), ((rt0.c2)GLOB(rt0.c0)))), CASE ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))  WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)) THEN rt0.c0 COLLATE RTRIM ELSE (- (v0.c0)) END;
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) ORDER BY (((v0.c0)) NOT BETWEEN (((v0.c0 IN (v0.c0, v0.c0)))) AND ((v0.c0 COLLATE BINARY))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN (((v0.c0 IN (v0.c0, v0.c0)))) AND ((v0.c0 COLLATE BINARY))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) ORDER BY (((v0.c0)) NOT BETWEEN (((v0.c0 IN (v0.c0, v0.c0)))) AND ((v0.c0 COLLATE BINARY))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN (((v0.c0 IN (v0.c0, v0.c0)))) AND ((v0.c0 COLLATE BINARY))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) ORDER BY (((v0.c0)) NOT BETWEEN (((v0.c0 IN (v0.c0, v0.c0)))) AND ((v0.c0 COLLATE BINARY))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((v0.c0)OR(rt0.c1)))OR(v0.c0)))||(((v0.c0)<<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(rt0.c1)))OR(v0.c0)))||(((v0.c0)<<(rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((v0.c0)OR(rt0.c1)))OR(v0.c0)))||(((v0.c0)<<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(rt0.c1)))OR(v0.c0)))||(((v0.c0)<<(rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((v0.c0)OR(rt0.c1)))OR(v0.c0)))||(((v0.c0)<<(rt0.c2)))));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c0 COLLATE NOCASE)OR(0x64e49ace)))AND((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE NOCASE)OR(0X64e49ace)))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c0 COLLATE NOCASE)OR(0x64e49ace)))AND((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE NOCASE)OR(0X64e49ace)))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c0 COLLATE NOCASE)OR(0x64e49ace)))AND((rt0.c2 IN ()))));
SELECT * FROM v0, rt0 WHERE ((+ (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((+ (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((+ (rt0.c1 COLLATE RTRIM)));
SELECT * FROM rt0 WHERE (((LIKELY(NULL))||(((NULL) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(NULL))||(((NULL) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((LIKELY(NULL))||(((NULL) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(NULL))||(((NULL) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((LIKELY(NULL))||(((NULL) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT * FROM rt0, v0 WHERE (((x'')+(((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')+(((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((x'')+(((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')+(((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((x'')+(((rt0.c2) NOT NULL))));
SELECT * FROM v0, rt0 WHERE ((((rt0.c0 IN (rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((rt0.c0 IN (rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((rt0.c0 IN (rt0.c1))) NOT NULL));
SELECT * FROM v0 WHERE (v0.c0 COLLATE BINARY) ORDER BY CASE ((((((((v0.c0)AND(NULL)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))  WHEN ((v0.c0)>(v0.c0)) THEN v0.c0 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY CASE ((((((((v0.c0)AND(NULL)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))  WHEN ((v0.c0)>(v0.c0)) THEN v0.c0 COLLATE RTRIM END ASC);
SELECT * FROM v0 WHERE (v0.c0 COLLATE BINARY) ORDER BY CASE ((((((((v0.c0)AND(NULL)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))  WHEN ((v0.c0)>(v0.c0)) THEN v0.c0 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY CASE ((((((((v0.c0)AND(NULL)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))  WHEN ((v0.c0)>(v0.c0)) THEN v0.c0 COLLATE RTRIM END ASC);
SELECT * FROM v0 WHERE (v0.c0 COLLATE BINARY) ORDER BY CASE ((((((((v0.c0)AND(NULL)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))  WHEN ((v0.c0)>(v0.c0)) THEN v0.c0 COLLATE RTRIM END ASC;
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((((((v0.c0) ISNULL))OR(((((((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))))OR((rt0.c2 IN ()))) WHERE (CASE WHEN ((((rt0.c0)OR(rt0.c2)))OR(v0.c0)) THEN (~ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c0)OR(rt0.c2)))OR(v0.c0)) THEN (~ (rt0.c2)) END) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((((v0.c0) ISNULL))OR(((((((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))))OR((rt0.c2 IN ()))));
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((((((v0.c0) ISNULL))OR(((((((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))))OR((rt0.c2 IN ()))) WHERE (CASE WHEN ((((rt0.c0)OR(rt0.c2)))OR(v0.c0)) THEN (~ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c0)OR(rt0.c2)))OR(v0.c0)) THEN (~ (rt0.c2)) END) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((((v0.c0) ISNULL))OR(((((((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))))OR((rt0.c2 IN ()))));
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((((((v0.c0) ISNULL))OR(((((((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))))OR((rt0.c2 IN ()))) WHERE (CASE WHEN ((((rt0.c0)OR(rt0.c2)))OR(v0.c0)) THEN (~ (rt0.c2)) END);
SELECT * FROM v0 WHERE (CASE v0.c0  WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (((v0.c0))>=((v0.c0))) ELSE (- (v0.c0)) END) ORDER BY ((((v0.c0)%(v0.c0)))>(v0.c0)) DESC, (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (((v0.c0))>=((v0.c0))) ELSE (- (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)%(v0.c0)))>(v0.c0)) DESC, (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (CASE v0.c0  WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (((v0.c0))>=((v0.c0))) ELSE (- (v0.c0)) END) ORDER BY ((((v0.c0)%(v0.c0)))>(v0.c0)) DESC, (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (((v0.c0))>=((v0.c0))) ELSE (- (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)%(v0.c0)))>(v0.c0)) DESC, (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (CASE v0.c0  WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (((v0.c0))>=((v0.c0))) ELSE (- (v0.c0)) END) ORDER BY ((((v0.c0)%(v0.c0)))>(v0.c0)) DESC, (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN (2.71531153E8) AND ('?n6QD쪎q' COLLATE NOCASE))) ORDER BY ((((rt0.c2, rt0.c0, rt0.c0))>((rt0.c0, v0.c0, v0.c0))) IN ()) DESC  NULLS FIRST, (((((((rt0.c2, '0.9975015745338758', v0.c0))>((rt0.c0, rt0.c2, v0.c0))))AND(0.1588446791953676 COLLATE BINARY)))OR(CAST(rt0.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE) BETWEEN (2.71531153E8) AND ('?n6QD쪎q' COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c2, rt0.c0, rt0.c0))>((rt0.c0, v0.c0, v0.c0))) IN ()) DESC  NULLS FIRST, (((((((rt0.c2, '0.9975015745338758', v0.c0))>((rt0.c0, rt0.c2, v0.c0))))AND(0.1588446791953676 COLLATE BINARY)))OR(CAST(rt0.c2 AS NUMERIC))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN (2.71531153E8) AND ('?n6QD쪎q' COLLATE NOCASE))) ORDER BY ((((rt0.c2, rt0.c0, rt0.c0))>((rt0.c0, v0.c0, v0.c0))) IN ()) DESC  NULLS FIRST, (((((((rt0.c2, '0.9975015745338758', v0.c0))>((rt0.c0, rt0.c2, v0.c0))))AND(0.1588446791953676 COLLATE BINARY)))OR(CAST(rt0.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE) BETWEEN (2.71531153E8) AND ('?n6QD쪎q' COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c2, rt0.c0, rt0.c0))>((rt0.c0, v0.c0, v0.c0))) IN ()) DESC  NULLS FIRST, (((((((rt0.c2, '0.9975015745338758', v0.c0))>((rt0.c0, rt0.c2, v0.c0))))AND(0.1588446791953676 COLLATE BINARY)))OR(CAST(rt0.c2 AS NUMERIC))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN (2.71531153E8) AND ('?n6QD쪎q' COLLATE NOCASE))) ORDER BY ((((rt0.c2, rt0.c0, rt0.c0))>((rt0.c0, v0.c0, v0.c0))) IN ()) DESC  NULLS FIRST, (((((((rt0.c2, '0.9975015745338758', v0.c0))>((rt0.c0, rt0.c2, v0.c0))))AND(0.1588446791953676 COLLATE BINARY)))OR(CAST(rt0.c2 AS NUMERIC)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((x'', (NOT (rt0.c1)), ((rt0.c2)>=(rt0.c0))))<((((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND(v0.c0)))AND(rt0.c1)))OR(v0.c0)), ((rt0.c0) NOT NULL), CASE rt0.c1  WHEN NULL THEN v0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((x'', (NOT (rt0.c1)), ((rt0.c2)>=(rt0.c0))))<((((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND(v0.c0)))AND(rt0.c1)))OR(v0.c0)), ((rt0.c0) NOT NULL), CASE rt0.c1  WHEN NULL THEN v0.c0 END)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((x'', (NOT (rt0.c1)), ((rt0.c2)>=(rt0.c0))))<((((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND(v0.c0)))AND(rt0.c1)))OR(v0.c0)), ((rt0.c0) NOT NULL), CASE rt0.c1  WHEN NULL THEN v0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((x'', (NOT (rt0.c1)), ((rt0.c2)>=(rt0.c0))))<((((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND(v0.c0)))AND(rt0.c1)))OR(v0.c0)), ((rt0.c0) NOT NULL), CASE rt0.c1  WHEN NULL THEN v0.c0 END)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((x'', (NOT (rt0.c1)), ((rt0.c2)>=(rt0.c0))))<((((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND(v0.c0)))AND(rt0.c1)))OR(v0.c0)), ((rt0.c0) NOT NULL), CASE rt0.c1  WHEN NULL THEN v0.c0 END))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (TYPEOF(DISTINCT v0.c0 COLLATE NOCASE)) ORDER BY CAST((((rt0.c0))<>((v0.c0))) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT v0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((((rt0.c0))!=((v0.c0))) AS REAL) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (TYPEOF(DISTINCT v0.c0 COLLATE NOCASE)) ORDER BY CAST((((rt0.c0))<>((v0.c0))) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT v0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((((rt0.c0))!=((v0.c0))) AS REAL) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (TYPEOF(DISTINCT v0.c0 COLLATE NOCASE)) ORDER BY CAST((((rt0.c0))<>((v0.c0))) AS REAL) DESC;
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((rt0.c1)OR(rt0.c2)))OR('199415452')))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END)))OR(((v0.c0)*(rt0.c1))))) ORDER BY (((rt0.c1))<((((rt0.c0)GLOB(rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)OR(rt0.c2)))OR('199415452')))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END)))OR(((v0.c0)*(rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c1))<((((rt0.c0)GLOB(rt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((rt0.c1)OR(rt0.c2)))OR('199415452')))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END)))OR(((v0.c0)*(rt0.c1))))) ORDER BY (((rt0.c1))<((((rt0.c0)GLOB(rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)OR(rt0.c2)))OR('199415452')))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END)))OR(((v0.c0)*(rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c1))<((((rt0.c0)GLOB(rt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((rt0.c1)OR(rt0.c2)))OR('199415452')))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END)))OR(((v0.c0)*(rt0.c1))))) ORDER BY (((rt0.c1))<((((rt0.c0)GLOB(rt0.c2)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (x'') ORDER BY LOWER(DISTINCT v0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY LOWER(DISTINCT v0.c0) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (x'') ORDER BY LOWER(DISTINCT v0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY LOWER(DISTINCT v0.c0) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (x'') ORDER BY LOWER(DISTINCT v0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE ((((rt0.c0)) BETWEEN ((((NULL) NOT NULL))) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((((NULL) NOT NULL))) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((rt0.c0)) BETWEEN ((((NULL) NOT NULL))) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((((NULL) NOT NULL))) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((rt0.c0)) BETWEEN ((((NULL) NOT NULL))) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)<(rt0.c2)) IN (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)<(rt0.c2)) IN (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)<(rt0.c2)) IN (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)<(rt0.c2)) IN (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)<(rt0.c2)) IN (((rt0.c1) IS TRUE))));
SELECT COUNT(*) FROM v0, rt0 WHERE (LIKELY(0.48075403514870907)) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(0.48075403514870907)) IS TRUE)  as count FROM v0, rt0 ORDER BY NULL DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (LIKELY(0.48075403514870907)) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(0.48075403514870907)) IS TRUE)  as count FROM v0, rt0 ORDER BY NULL DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (LIKELY(0.48075403514870907)) ORDER BY NULL DESC  NULLS LAST;
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (rt0.c2 IN ()) WHERE ((((CAST(rt0.c1 AS REAL)))>((rt0.c2 COLLATE NOCASE)))) ORDER BY ROUND(COALESCE(v0.c0, rt0.c0), ((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(x'')))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c1)))  NULLS FIRST, NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c1 AS REAL)))>((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (rt0.c2 IN ()) ORDER BY ROUND(COALESCE(v0.c0, rt0.c0), ((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(x'')))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c1)))  NULLS FIRST, NULL ASC);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (rt0.c2 IN ()) WHERE ((((CAST(rt0.c1 AS REAL)))>((rt0.c2 COLLATE NOCASE)))) ORDER BY ROUND(COALESCE(v0.c0, rt0.c0), ((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(x'')))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c1)))  NULLS FIRST, NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c1 AS REAL)))>((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (rt0.c2 IN ()) ORDER BY ROUND(COALESCE(v0.c0, rt0.c0), ((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(x'')))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c1)))  NULLS FIRST, NULL ASC);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (rt0.c2 IN ()) WHERE ((((CAST(rt0.c1 AS REAL)))>((rt0.c2 COLLATE NOCASE)))) ORDER BY ROUND(COALESCE(v0.c0, rt0.c0), ((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(x'')))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c1)))  NULLS FIRST, NULL ASC;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)GLOB((((v0.c0))>((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)GLOB((((v0.c0))>((v0.c0)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)GLOB((((v0.c0))>((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)GLOB((((v0.c0))>((v0.c0)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)GLOB((((v0.c0))>((v0.c0))))));
SELECT ALL * FROM v0 WHERE (((v0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0) IS TRUE));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((CAST('YvsrFRT' AS NUMERIC))AND((((rt0.c1))<((v0.c0))))))OR(((('cꍆD', v0.c0, rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2, v0.c0, v0.c0)))))) ORDER BY 0.2000346988903683  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST('YvsrFRT' AS NUMERIC))AND((((rt0.c1))<((v0.c0))))))OR(((('cꍆD', v0.c0, rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2, v0.c0, v0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY 0.2000346988903683  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((CAST('YvsrFRT' AS NUMERIC))AND((((rt0.c1))<((v0.c0))))))OR(((('cꍆD', v0.c0, rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2, v0.c0, v0.c0)))))) ORDER BY 0.2000346988903683  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST('YvsrFRT' AS NUMERIC))AND((((rt0.c1))<((v0.c0))))))OR(((('cꍆD', v0.c0, rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2, v0.c0, v0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY 0.2000346988903683  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((CAST('YvsrFRT' AS NUMERIC))AND((((rt0.c1))<((v0.c0))))))OR(((('cꍆD', v0.c0, rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2, v0.c0, v0.c0)))))) ORDER BY 0.2000346988903683  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS TEXT)) BETWEEN ((v0.c0 IN ())) AND (rtreenode(v0.c0, v0.c0)))) ORDER BY (+ (CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT)) BETWEEN ((v0.c0 IN ())) AND (rtreenode(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (+ (CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS TEXT)) BETWEEN ((v0.c0 IN ())) AND (rtreenode(v0.c0, v0.c0)))) ORDER BY (+ (CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT)) BETWEEN ((v0.c0 IN ())) AND (rtreenode(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (+ (CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS TEXT)) BETWEEN ((v0.c0 IN ())) AND (rtreenode(v0.c0, v0.c0)))) ORDER BY (+ (CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (rt0.c0) ORDER BY 0.7941346608249225 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY 0.7941346608249225 ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c0) ORDER BY 0.7941346608249225 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY 0.7941346608249225 ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c0) ORDER BY 0.7941346608249225 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (json(((rt0.c1)>=(v0.c0)))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json(((rt0.c1)>=(v0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (json(((rt0.c1)>=(v0.c0)))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json(((rt0.c1)>=(v0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (json(((rt0.c1)>=(v0.c0)))) ORDER BY v0.c0  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) ORDER BY ((((v0.c0) NOT NULL))+(((v0.c0)AND(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT NULL))+(((v0.c0)AND(v0.c0)))) ASC);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) ORDER BY ((((v0.c0) NOT NULL))+(((v0.c0)AND(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT NULL))+(((v0.c0)AND(v0.c0)))) ASC);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) ORDER BY ((((v0.c0) NOT NULL))+(((v0.c0)AND(v0.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (+ (v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (+ (v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (+ (v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((1.04056363E8)) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((x'')))))) WHERE (x'') ORDER BY ((NULLIF(rt0.c2, rt0.c2)) BETWEEN (((rt0.c0)+(rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c1) AND ('-1570194008')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((1.04056363E8)) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((x'')))))) ORDER BY ((NULLIF(rt0.c2, rt0.c2)) BETWEEN (((rt0.c0)+(rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c1) AND ('-1570194008')))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((1.04056363E8)) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((x'')))))) WHERE (x'') ORDER BY ((NULLIF(rt0.c2, rt0.c2)) BETWEEN (((rt0.c0)+(rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c1) AND ('-1570194008')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((1.04056363E8)) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((x'')))))) ORDER BY ((NULLIF(rt0.c2, rt0.c2)) BETWEEN (((rt0.c0)+(rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c1) AND ('-1570194008')))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((1.04056363E8)) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((x'')))))) WHERE (x'') ORDER BY ((NULLIF(rt0.c2, rt0.c2)) BETWEEN (((rt0.c0)+(rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c1) AND ('-1570194008')))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (json_array_length(CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END)) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END)) IS TRUE)  as count FROM rt0, v0 ORDER BY '' DESC);
SELECT ALL * FROM rt0, v0 WHERE (json_array_length(CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END)) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END)) IS TRUE)  as count FROM rt0, v0 ORDER BY '' DESC);
SELECT ALL * FROM rt0, v0 WHERE (json_array_length(CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END)) ORDER BY '' DESC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((0Xffffffffe823d8bf, rt0.c1 COLLATE NOCASE, ((rt0.c2) IS FALSE))))) ORDER BY 0.8876455314870485 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((0xffffffffe823d8bf, rt0.c1 COLLATE NOCASE, ((rt0.c2) IS FALSE))))) IS TRUE)  as count FROM rt0 ORDER BY 0.8876455314870485 ASC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((0Xffffffffe823d8bf, rt0.c1 COLLATE NOCASE, ((rt0.c2) IS FALSE))))) ORDER BY 0.8876455314870485 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((0xffffffffe823d8bf, rt0.c1 COLLATE NOCASE, ((rt0.c2) IS FALSE))))) IS TRUE)  as count FROM rt0 ORDER BY 0.8876455314870485 ASC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((0Xffffffffe823d8bf, rt0.c1 COLLATE NOCASE, ((rt0.c2) IS FALSE))))) ORDER BY 0.8876455314870485 ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((((v0.c0) NOT BETWEEN ('1738050770') AND (v0.c0)))OR(v0.c0)))AND((~ (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) NOT BETWEEN ('1738050770') AND (v0.c0)))OR(v0.c0)))AND((~ (v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((((v0.c0) NOT BETWEEN ('1738050770') AND (v0.c0)))OR(v0.c0)))AND((~ (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) NOT BETWEEN ('1738050770') AND (v0.c0)))OR(v0.c0)))AND((~ (v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((((v0.c0) NOT BETWEEN ('1738050770') AND (v0.c0)))OR(v0.c0)))AND((~ (v0.c0)))) ASC;
SELECT COUNT(*) FROM v0, rt0 NOT INDEXED WHERE ((NOT (rt0.c1))) ORDER BY (((rt0.c2)) BETWEEN (((~ (rt0.c1)))) AND ((((rt0.c0)-(rt0.c2)))))  NULLS LAST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c2)) BETWEEN (((~ (rt0.c1)))) AND ((((rt0.c0)-(rt0.c2)))))  NULLS LAST, v0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 NOT INDEXED WHERE ((NOT (rt0.c1))) ORDER BY (((rt0.c2)) BETWEEN (((~ (rt0.c1)))) AND ((((rt0.c0)-(rt0.c2)))))  NULLS LAST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c2)) BETWEEN (((~ (rt0.c1)))) AND ((((rt0.c0)-(rt0.c2)))))  NULLS LAST, v0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 NOT INDEXED WHERE ((NOT (rt0.c1))) ORDER BY (((rt0.c2)) BETWEEN (((~ (rt0.c1)))) AND ((((rt0.c0)-(rt0.c2)))))  NULLS LAST, v0.c0  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((((v0.c0)>>(rt0.c2)))OR(((rt0.c0) IS TRUE))))AND(rt0.c2 COLLATE RTRIM)))OR(((rt0.c0) NOT BETWEEN (0X1fcc064e) AND (rt0.c2)))))AND(CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)>>(rt0.c2)))OR(((rt0.c0) IS TRUE))))AND(rt0.c2 COLLATE RTRIM)))OR(((rt0.c0) NOT BETWEEN (0x1fcc064e) AND (rt0.c2)))))AND(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((((v0.c0)>>(rt0.c2)))OR(((rt0.c0) IS TRUE))))AND(rt0.c2 COLLATE RTRIM)))OR(((rt0.c0) NOT BETWEEN (0X1fcc064e) AND (rt0.c2)))))AND(CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)>>(rt0.c2)))OR(((rt0.c0) IS TRUE))))AND(rt0.c2 COLLATE RTRIM)))OR(((rt0.c0) NOT BETWEEN (0x1fcc064e) AND (rt0.c2)))))AND(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((((v0.c0)>>(rt0.c2)))OR(((rt0.c0) IS TRUE))))AND(rt0.c2 COLLATE RTRIM)))OR(((rt0.c0) NOT BETWEEN (0X1fcc064e) AND (rt0.c2)))))AND(CAST(rt0.c2 AS TEXT))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) NOTNULL))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((v0.c0) NOTNULL))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) NOTNULL))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((v0.c0) NOTNULL))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) NOTNULL))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))));
SELECT COUNT(*) FROM v0, rt0 WHERE (load_extension((NOT (rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)) ORDER BY CASE rt0.c1  WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1)|(rt0.c2)) WHEN ((((v0.c0)OR(rt0.c0)))OR(rt0.c1)) THEN (- (x'39e7')) WHEN v0.c0 THEN (+ (rt0.c0)) ELSE ((0.13264549780227985) NOT BETWEEN (rt0.c1) AND (v0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((load_extension((NOT (rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE rt0.c1  WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1)|(rt0.c2)) WHEN ((((v0.c0)OR(rt0.c0)))OR(rt0.c1)) THEN (- (x'39e7')) WHEN v0.c0 THEN (+ (rt0.c0)) ELSE ((0.13264549780227985) NOT BETWEEN (rt0.c1) AND (v0.c0)) END DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (load_extension((NOT (rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)) ORDER BY CASE rt0.c1  WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1)|(rt0.c2)) WHEN ((((v0.c0)OR(rt0.c0)))OR(rt0.c1)) THEN (- (x'39e7')) WHEN v0.c0 THEN (+ (rt0.c0)) ELSE ((0.13264549780227985) NOT BETWEEN (rt0.c1) AND (v0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((load_extension((NOT (rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE rt0.c1  WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1)|(rt0.c2)) WHEN ((((v0.c0)OR(rt0.c0)))OR(rt0.c1)) THEN (- (x'39e7')) WHEN v0.c0 THEN (+ (rt0.c0)) ELSE ((0.13264549780227985) NOT BETWEEN (rt0.c1) AND (v0.c0)) END DESC);
SELECT * FROM v0, rt0 WHERE (((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) IN ())) ORDER BY (~ (CAST(rt0.c2 AS TEXT)))  NULLS LAST, CASE WHEN rt0.c0 COLLATE RTRIM THEN ((v0.c0)<=(rt0.c2)) END DESC, CASE ((rt0.c1)GLOB(v0.c0))  WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c0) IS FALSE) ELSE (v0.c0 IN (rt0.c0, rt0.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY (~ (CAST(rt0.c2 AS TEXT)))  NULLS LAST, CASE WHEN rt0.c0 COLLATE RTRIM THEN ((v0.c0)<=(rt0.c2)) END DESC, CASE ((rt0.c1)GLOB(v0.c0))  WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c0) IS FALSE) ELSE (v0.c0 IN (rt0.c0, rt0.c2)) END ASC  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) IN ())) ORDER BY (~ (CAST(rt0.c2 AS TEXT)))  NULLS LAST, CASE WHEN rt0.c0 COLLATE RTRIM THEN ((v0.c0)<=(rt0.c2)) END DESC, CASE ((rt0.c1)GLOB(v0.c0))  WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c0) IS FALSE) ELSE (v0.c0 IN (rt0.c0, rt0.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY (~ (CAST(rt0.c2 AS TEXT)))  NULLS LAST, CASE WHEN rt0.c0 COLLATE RTRIM THEN ((v0.c0)<=(rt0.c2)) END DESC, CASE ((rt0.c1)GLOB(v0.c0))  WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c0) IS FALSE) ELSE (v0.c0 IN (rt0.c0, rt0.c2)) END ASC  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) IN ())) ORDER BY (~ (CAST(rt0.c2 AS TEXT)))  NULLS LAST, CASE WHEN rt0.c0 COLLATE RTRIM THEN ((v0.c0)<=(rt0.c2)) END DESC, CASE ((rt0.c1)GLOB(v0.c0))  WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c0) IS FALSE) ELSE (v0.c0 IN (rt0.c0, rt0.c2)) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c2 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c2 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c2 COLLATE BINARY) IS TRUE));
SELECT * FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (v0.c0);
SELECT ALL * FROM rt0 WHERE ('-1117104413') ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c2)OR(rt0.c0)))) AND ((CAST(x'e770' AS INTEGER)))) ASC  NULLS LAST, ((rt0.c1) IS TRUE) ASC, ((CAST(rt0.c1 AS TEXT)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (('-1117104413') IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c2)OR(rt0.c0)))) AND ((CAST(x'e770' AS INTEGER)))) ASC  NULLS LAST, ((rt0.c1) IS TRUE) ASC, ((CAST(rt0.c1 AS TEXT)) ISNULL) ASC);
SELECT ALL * FROM rt0 WHERE ('-1117104413') ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c2)OR(rt0.c0)))) AND ((CAST(x'e770' AS INTEGER)))) ASC  NULLS LAST, ((rt0.c1) IS TRUE) ASC, ((CAST(rt0.c1 AS TEXT)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (('-1117104413') IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c2)OR(rt0.c0)))) AND ((CAST(x'e770' AS INTEGER)))) ASC  NULLS LAST, ((rt0.c1) IS TRUE) ASC, ((CAST(rt0.c1 AS TEXT)) ISNULL) ASC);
SELECT ALL * FROM rt0 WHERE ('-1117104413') ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c2)OR(rt0.c0)))) AND ((CAST(x'e770' AS INTEGER)))) ASC  NULLS LAST, ((rt0.c1) IS TRUE) ASC, ((CAST(rt0.c1 AS TEXT)) ISNULL) ASC;
SELECT * FROM v0 WHERE (((((v0.c0)/(v0.c0))) BETWEEN (v0.c0) AND (ABS(v0.c0)))) ORDER BY (((+ (v0.c0))) NOT BETWEEN (UPPER(DISTINCT 'E鏎')) AND ((('K,W[kU+') BETWEEN (v0.c0) AND (v0.c0)))) DESC, (json_patch(v0.c0, v0.c0) IN (v0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)/(v0.c0))) BETWEEN (v0.c0) AND (ABS(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((+ (v0.c0))) NOT BETWEEN (UPPER(DISTINCT 'E鏎')) AND ((('K,W[kU+') BETWEEN (v0.c0) AND (v0.c0)))) DESC, (json_patch(v0.c0, v0.c0) IN (v0.c0)) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0)/(v0.c0))) BETWEEN (v0.c0) AND (ABS(v0.c0)))) ORDER BY (((+ (v0.c0))) NOT BETWEEN (UPPER(DISTINCT 'E鏎')) AND ((('K,W[kU+') BETWEEN (v0.c0) AND (v0.c0)))) DESC, (json_patch(v0.c0, v0.c0) IN (v0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)/(v0.c0))) BETWEEN (v0.c0) AND (ABS(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((+ (v0.c0))) NOT BETWEEN (UPPER(DISTINCT 'E鏎')) AND ((('K,W[kU+') BETWEEN (v0.c0) AND (v0.c0)))) DESC, (json_patch(v0.c0, v0.c0) IN (v0.c0)) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0)/(v0.c0))) BETWEEN (v0.c0) AND (ABS(v0.c0)))) ORDER BY (((+ (v0.c0))) NOT BETWEEN (UPPER(DISTINCT 'E鏎')) AND ((('K,W[kU+') BETWEEN (v0.c0) AND (v0.c0)))) DESC, (json_patch(v0.c0, v0.c0) IN (v0.c0)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (0.23294481506479525);
SELECT SUM(count) FROM (SELECT ALL ((0.23294481506479525) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (0.23294481506479525);
SELECT SUM(count) FROM (SELECT ALL ((0.23294481506479525) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (0.23294481506479525);
SELECT COUNT(*) FROM v0 WHERE (((TRIM('', v0.c0))<<(v0.c0 COLLATE BINARY))) ORDER BY (((v0.c0) NOT BETWEEN (0.5732878178452963) AND (v0.c0)) IN ())  NULLS LAST, CAST((NOT (v0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM('', v0.c0))<<(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) NOT BETWEEN (0.5732878178452963) AND (v0.c0)) IN ())  NULLS LAST, CAST((NOT (v0.c0)) AS BLOB) ASC);
SELECT COUNT(*) FROM v0 WHERE (((TRIM('', v0.c0))<<(v0.c0 COLLATE BINARY))) ORDER BY (((v0.c0) NOT BETWEEN (0.5732878178452963) AND (v0.c0)) IN ())  NULLS LAST, CAST((NOT (v0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM('', v0.c0))<<(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) NOT BETWEEN (0.5732878178452963) AND (v0.c0)) IN ())  NULLS LAST, CAST((NOT (v0.c0)) AS BLOB) ASC);
SELECT COUNT(*) FROM v0 WHERE (((TRIM('', v0.c0))<<(v0.c0 COLLATE BINARY))) ORDER BY (((v0.c0) NOT BETWEEN (0.5732878178452963) AND (v0.c0)) IN ())  NULLS LAST, CAST((NOT (v0.c0)) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (((((('[]')OR(v0.c0)))AND(v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 END, v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((('[]')OR(v0.c0)))AND(v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 END, v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((('[]')OR(v0.c0)))AND(v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 END, v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((('[]')OR(v0.c0)))AND(v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 END, v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((('[]')OR(v0.c0)))AND(v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 END, v0.c0)));
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) IS TRUE) WHERE ((((((((((rt0.c0 IN ()))AND(CAST(rt0.c2 AS BLOB))))AND(CAST(v0.c0 AS INTEGER))))OR(rt0.c2)))OR((~ (0.8410165892049194))))) ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 END)<=(LIKELIHOOD(DISTINCT rt0.c1, 0.015142229092697912)));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c0 IN ()))AND(CAST(rt0.c2 AS BLOB))))AND(CAST(v0.c0 AS INTEGER))))OR(rt0.c2)))OR((~ (0.8410165892049194))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) IS TRUE) ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 END)<=(LIKELIHOOD(DISTINCT rt0.c1, 0.015142229092697912))));
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) IS TRUE) WHERE ((((((((((rt0.c0 IN ()))AND(CAST(rt0.c2 AS BLOB))))AND(CAST(v0.c0 AS INTEGER))))OR(rt0.c2)))OR((~ (0.8410165892049194))))) ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 END)<=(LIKELIHOOD(DISTINCT rt0.c1, 0.015142229092697912)));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c0 IN ()))AND(CAST(rt0.c2 AS BLOB))))AND(CAST(v0.c0 AS INTEGER))))OR(rt0.c2)))OR((~ (0.8410165892049194))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) IS TRUE) ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 END)<=(LIKELIHOOD(DISTINCT rt0.c1, 0.015142229092697912))));
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) IS TRUE) WHERE ((((((((((rt0.c0 IN ()))AND(CAST(rt0.c2 AS BLOB))))AND(CAST(v0.c0 AS INTEGER))))OR(rt0.c2)))OR((~ (0.8410165892049194))))) ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 END)<=(LIKELIHOOD(DISTINCT rt0.c1, 0.015142229092697912)));
SELECT COUNT(*) FROM v0 WHERE (LENGTH(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (LENGTH(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (LENGTH(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((('', '-60404141' COLLATE BINARY, ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))))>((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END))) WHERE (CASE WHEN 0.9571222257495541 THEN (((rt0.c0))<=((v0.c0))) ELSE -1.117104413E9 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.9571222257495541 THEN (((rt0.c0))<=((v0.c0))) ELSE -1.117104413E9 END) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((('', '-60404141' COLLATE BINARY, ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))))>((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((('', '-60404141' COLLATE BINARY, ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))))>((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END))) WHERE (CASE WHEN 0.9571222257495541 THEN (((rt0.c0))<=((v0.c0))) ELSE -1.117104413E9 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.9571222257495541 THEN (((rt0.c0))<=((v0.c0))) ELSE -1.117104413E9 END) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((('', '-60404141' COLLATE BINARY, ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))))>((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((('', '-60404141' COLLATE BINARY, ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))))>((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END))) WHERE (CASE WHEN 0.9571222257495541 THEN (((rt0.c0))<=((v0.c0))) ELSE -1.117104413E9 END);
SELECT ALL * FROM v0 WHERE (((((v0.c0)GLOB(v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)GLOB(v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)GLOB(v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)GLOB(v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)GLOB(v0.c0))) NOT NULL));
