-- Time: 2024/06/09 14:43:26
-- Database: database36
-- Database version: 3.40.0
-- seed value: 869354436
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4, +c5 REAL , +c6 TEXT ); -- 1ms;
REINDEX  rt0; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3, c4) VALUES (0.6705339796184938, x'57d3'), (-1428241642, ''), (0x6b547e4c, x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c5) VALUES (NULL), (''), ('E'); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=('V3)') WHERE (((+ (rt0.c1))) IS FALSE); -- 0ms;
INSERT OR ABORT INTO rt0(c5, c2, c4) VALUES (NULL, '1057774954', x''), ('RRtꁰnY', '', 1.057774954E9), (NULL, NULL, x'c9af'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c4, c4)=(0Xffffffffbcbdd8b2, NULL); -- 1ms;
UPDATE OR IGNORE rt0 SET c6=-2.07904656E8, c5='0.6705339796184938'; -- 1ms;
INSERT OR ABORT INTO rt0(c5, c1) VALUES (-1428241642, x''), (x'', -207904656), (NULL, -1.428241642E9); -- 1ms;
INSERT OR ABORT INTO rt0(c0, c1) VALUES (665746929, '0.6705339796184938'), (NULL, 0.08761330060108985), ('#4S{', 'Z.wQtq'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, 0.08761330060108985, x'', '', ',Dͫ|Q', NULL, 0.01760577898002047); -- 0ms;
INSERT OR IGNORE INTO rt0(c5) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c6, c1) VALUES (-1.428241642E9, 0.6080566513904296), (x'd55c98d4', '665746929'), ('', NULL); -- 1ms;
VACUUM; -- 1ms;
INSERT OR ABORT INTO rt0(c0, c5) VALUES ('1', 0.23343389051332586); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c4, c1) VALUES ('665746929', '-1358697401'); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE rt0; -- 1ms;
INSERT OR FAIL INTO rt0(c4, c6, c3) VALUES (0x27ae7df1, 'Fwsⴇ', x''), (0x3121036b, 0xffffffffbcbdd8b2, x''), ('824247147', '繌\nOHy', -2.07904656E8); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c6, c4, c1, c3, c0) VALUES (x'', x'', x'ca58', NULL, NULL, x'0a39'), (NULL, x'', NULL, 0.199056052496003, NULL, 0X719ad96), (0x719ad96, x'73a6', 0.9334260924839541, '-1329088165', x'', x''); -- 0ms;
INSERT OR FAIL INTO rt0(c2, c4, c6, c0, c3, c5, c1) VALUES ('', 0.7054250837100204, x'798a', 0X28c80939, '119123350', '255626435', 0.24423453439580667); -- 0ms;
INSERT OR FAIL INTO rt0(c6, c4, c2, c3, c1, c5) VALUES (x'2923', NULL, '1e500', 0.802376603432819, 0.9517125543320593, x''), (NULL, NULL, '1452030858', 'Z.wQtq', x'', '303133937'), ('H U?V', NULL, 0.6080566513904296, x'', 0.6868802882425585, NULL), (0.6647634008049729, 601514609, x'', '-931012085', 0.6742518613638662, NULL), ('[]', '601514609', 1062520367, '0.6742518613638662', '64315581', 0.48620085377819244); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c6, c5, c2) VALUES (x'', '270926392', NULL, '%~'), ('-a', '0.6742518613638662', 0.6080566513904296, ''), ('-1618167636', '}q⁨', 0.5588463050819907, x'1cc4'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c6, c5, c2, c4) VALUES (433802070, x'', 0.4066739998087813, x'', '-Infinity'); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1, c2); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
DROP TABLE rt0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1772256748);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-2107273697,13');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('979771146'), (''), ('-1767761432'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE vt0 SET c2='o'; -- 0ms;
INSERT OR FAIL INTO vt0(c2, c0, c1) VALUES (0xc6c59fa, 0.357883708917589, 0.9517125543320593), ('V3)', NULL, 1452047247), (x'', -1583999682, NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c2)=(0.10639550477169313) WHERE ((vt0.c1)LIKE(((vt0.c0)||(vt0.c0)))); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES ('k'); -- 0ms;
VACUUM temp; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '1521'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c2, c1) VALUES (NULL, NULL); -- 1ms;
INSERT OR IGNORE INTO vt0(c2, c1, c0) VALUES ('1800699468', 0.18179778809512503, x''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1767639240 noskipscan'); -- 0ms;
REINDEX NOCASE; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR ABORT vt0 SET (c0)=(0.199056052496003); -- 0ms;
DELETE FROM vt0; -- 0ms;
REINDEX; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0, c1, c2, c3, c4) AS SELECT ALL (((vt0.c1)) NOT BETWEEN (((- (vt0.c0)))) AND ((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))OR(0x6b547e4c)))OR(vt0.c1))))), (((- (vt0.c0))) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND('')))AND('')))AND(vt0.c0))) AND (((vt0.c1)AND(vt0.c1)))), json_extract((((vt0.c1))<=((vt0.c0))), (+ (vt0.c0))), CASE WHEN (- (-1.358697401E9)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (((vt0.c0))>((vt0.c2))) END, (((vt0.c1))<=((vt0.c2))) FROM vt0 WHERE (x''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0, c2) VALUES (0.3183079539343576, x''), ('', 0.8692990407303678), (0xfffffffffc7fffcb, 0X28a6cb24); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 664865028);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c2) VALUES ('.', 0xfffffffffc7fffcb); -- 0ms;
PRAGMA application_id; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM v0, vt0 WHERE (((9.79771146E8) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((9.79771146E8) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((9.79771146E8) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((9.79771146E8) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((9.79771146E8) NOTNULL));
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))) IS TRUE)) ORDER BY (((((0.847228564367559))>=((vt0.c2))))/(((vt0.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (((((0.847228564367559))>=((vt0.c2))))/(((vt0.c1) IS FALSE)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))) IS TRUE)) ORDER BY (((((0.847228564367559))>=((vt0.c2))))/(((vt0.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (((((0.847228564367559))>=((vt0.c2))))/(((vt0.c1) IS FALSE)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))) IS TRUE)) ORDER BY (((((0.847228564367559))>=((vt0.c2))))/(((vt0.c1) IS FALSE)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c2)*(vt0.c1))) NOT BETWEEN (LIKELY(vt0.c0)) AND (CASE WHEN vt0.c2 THEN vt0.c0 END))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)*(vt0.c1))) NOT BETWEEN (LIKELY(vt0.c0)) AND (CASE WHEN vt0.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY x'');
SELECT ALL * FROM vt0 WHERE (((((vt0.c2)*(vt0.c1))) NOT BETWEEN (LIKELY(vt0.c0)) AND (CASE WHEN vt0.c2 THEN vt0.c0 END))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)*(vt0.c1))) NOT BETWEEN (LIKELY(vt0.c0)) AND (CASE WHEN vt0.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY x'');
SELECT ALL * FROM vt0 WHERE (((((vt0.c2)*(vt0.c1))) NOT BETWEEN (LIKELY(vt0.c0)) AND (CASE WHEN vt0.c2 THEN vt0.c0 END))) ORDER BY x'';
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c4  WHEN v0.c1 THEN v0.c2 WHEN v0.c3 THEN v0.c2 WHEN v0.c0 THEN v0.c4 END)-(load_extension(v0.c1, v0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c4  WHEN v0.c1 THEN v0.c2 WHEN v0.c3 THEN v0.c2 WHEN v0.c0 THEN v0.c4 END)-(load_extension(v0.c1, v0.c4)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c4  WHEN v0.c1 THEN v0.c2 WHEN v0.c3 THEN v0.c2 WHEN v0.c0 THEN v0.c4 END)-(load_extension(v0.c1, v0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c4  WHEN v0.c1 THEN v0.c2 WHEN v0.c3 THEN v0.c2 WHEN v0.c0 THEN v0.c4 END)-(load_extension(v0.c1, v0.c4)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c4  WHEN v0.c1 THEN v0.c2 WHEN v0.c3 THEN v0.c2 WHEN v0.c0 THEN v0.c4 END)-(load_extension(v0.c1, v0.c4))));
SELECT * FROM v0, vt0 WHERE (CAST(CAST(vt0.c2 AS NUMERIC) AS BLOB)) ORDER BY (NOT (((v0.c1)>=(vt0.c0)))) ASC  NULLS FIRST, CAST((v0.c2 IN ()) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c2 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM v0, vt0 ORDER BY (NOT (((v0.c1)>=(vt0.c0)))) ASC  NULLS FIRST, CAST((v0.c2 IN ()) AS NUMERIC) DESC);
SELECT * FROM v0, vt0 WHERE (CAST(CAST(vt0.c2 AS NUMERIC) AS BLOB)) ORDER BY (NOT (((v0.c1)>=(vt0.c0)))) ASC  NULLS FIRST, CAST((v0.c2 IN ()) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c2 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM v0, vt0 ORDER BY (NOT (((v0.c1)>=(vt0.c0)))) ASC  NULLS FIRST, CAST((v0.c2 IN ()) AS NUMERIC) DESC);
SELECT * FROM v0, vt0 WHERE (CAST(CAST(vt0.c2 AS NUMERIC) AS BLOB)) ORDER BY (NOT (((v0.c1)>=(vt0.c0)))) ASC  NULLS FIRST, CAST((v0.c2 IN ()) AS NUMERIC) DESC;
SELECT * FROM vt0 INNER JOIN v0 ON CASE CASE vt0.c1  WHEN v0.c0 THEN vt0.c2 END  WHEN ((v0.c2)=(vt0.c1)) THEN ((vt0.c2)IS(vt0.c1)) END WHERE (CASE ((v0.c3) NOT BETWEEN (v0.c3) AND (vt0.c0))  WHEN vt0.c2 THEN ((((v0.c1)OR(v0.c2)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c3) NOT BETWEEN (v0.c3) AND (vt0.c0))  WHEN vt0.c2 THEN ((((v0.c1)OR(v0.c2)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CASE CASE vt0.c1  WHEN v0.c0 THEN vt0.c2 END  WHEN ((v0.c2)==(vt0.c1)) THEN ((vt0.c2)IS(vt0.c1)) END);
SELECT * FROM vt0 INNER JOIN v0 ON CASE CASE vt0.c1  WHEN v0.c0 THEN vt0.c2 END  WHEN ((v0.c2)=(vt0.c1)) THEN ((vt0.c2)IS(vt0.c1)) END WHERE (CASE ((v0.c3) NOT BETWEEN (v0.c3) AND (vt0.c0))  WHEN vt0.c2 THEN ((((v0.c1)OR(v0.c2)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c3) NOT BETWEEN (v0.c3) AND (vt0.c0))  WHEN vt0.c2 THEN ((((v0.c1)OR(v0.c2)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CASE CASE vt0.c1  WHEN v0.c0 THEN vt0.c2 END  WHEN ((v0.c2)==(vt0.c1)) THEN ((vt0.c2)IS(vt0.c1)) END);
SELECT * FROM vt0 INNER JOIN v0 ON CASE CASE vt0.c1  WHEN v0.c0 THEN vt0.c2 END  WHEN ((v0.c2)=(vt0.c1)) THEN ((vt0.c2)IS(vt0.c1)) END WHERE (CASE ((v0.c3) NOT BETWEEN (v0.c3) AND (vt0.c0))  WHEN vt0.c2 THEN ((((v0.c1)OR(v0.c2)))OR(vt0.c0)) END);
SELECT COUNT(*) FROM v0, vt0 WHERE ('I3');
SELECT SUM(count) FROM (SELECT (('I3') IS TRUE)  as count FROM v0 NOT INDEXED, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ('I3');
SELECT SUM(count) FROM (SELECT (('I3') IS TRUE)  as count FROM v0 NOT INDEXED, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ('I3');
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (((((((v0.c3)OR(v0.c2)))OR(v0.c4)))+(CASE v0.c2  WHEN 0.16494397881412382 THEN v0.c3 WHEN vt0.c0 THEN vt0.c1 WHEN v0.c2 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c3)OR(v0.c2)))OR(v0.c4)))+(CASE v0.c2  WHEN 0.16494397881412382 THEN v0.c3 WHEN vt0.c0 THEN vt0.c1 WHEN v0.c2 THEN vt0.c1 END))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (((((((v0.c3)OR(v0.c2)))OR(v0.c4)))+(CASE v0.c2  WHEN 0.16494397881412382 THEN v0.c3 WHEN vt0.c0 THEN vt0.c1 WHEN v0.c2 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c3)OR(v0.c2)))OR(v0.c4)))+(CASE v0.c2  WHEN 0.16494397881412382 THEN v0.c3 WHEN vt0.c0 THEN vt0.c1 WHEN v0.c2 THEN vt0.c1 END))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (((((((v0.c3)OR(v0.c2)))OR(v0.c4)))+(CASE v0.c2  WHEN 0.16494397881412382 THEN v0.c3 WHEN vt0.c0 THEN vt0.c1 WHEN v0.c2 THEN vt0.c1 END)));
SELECT ALL * FROM vt0 WHERE ((((((((((((((~ (vt0.c1)))OR('')))AND(((vt0.c0)*(vt0.c0)))))OR((NOT (vt0.c0)))))AND(((vt0.c0)<=(vt0.c1)))))OR(NULL)))OR((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((((((((~ (vt0.c1)))OR('')))AND(((vt0.c0)*(vt0.c0)))))OR((NOT (vt0.c0)))))AND(((vt0.c0)<=(vt0.c1)))))OR(NULL)))OR((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((((((~ (vt0.c1)))OR('')))AND(((vt0.c0)*(vt0.c0)))))OR((NOT (vt0.c0)))))AND(((vt0.c0)<=(vt0.c1)))))OR(NULL)))OR((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((((((((~ (vt0.c1)))OR('')))AND(((vt0.c0)*(vt0.c0)))))OR((NOT (vt0.c0)))))AND(((vt0.c0)<=(vt0.c1)))))OR(NULL)))OR((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((((((~ (vt0.c1)))OR('')))AND(((vt0.c0)*(vt0.c0)))))OR((NOT (vt0.c0)))))AND(((vt0.c0)<=(vt0.c1)))))OR(NULL)))OR((NOT (vt0.c1)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(vt0.c1 AS BLOB))GLOB(CAST(v0.c1 AS NUMERIC)))) ORDER BY CASE WHEN ((vt0.c2)<<(0.9871963288177651)) THEN CASE WHEN v0.c4 THEN vt0.c2 END END DESC  NULLS LAST, (NOT (v0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS BLOB))GLOB(CAST(v0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((vt0.c2)<<(0.9871963288177651)) THEN CASE WHEN v0.c4 THEN vt0.c2 END END DESC  NULLS LAST, (NOT (v0.c1)) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(vt0.c1 AS BLOB))GLOB(CAST(v0.c1 AS NUMERIC)))) ORDER BY CASE WHEN ((vt0.c2)<<(0.9871963288177651)) THEN CASE WHEN v0.c4 THEN vt0.c2 END END DESC  NULLS LAST, (NOT (v0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS BLOB))GLOB(CAST(v0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((vt0.c2)<<(0.9871963288177651)) THEN CASE WHEN v0.c4 THEN vt0.c2 END END DESC  NULLS LAST, (NOT (v0.c1)) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(vt0.c1 AS BLOB))GLOB(CAST(v0.c1 AS NUMERIC)))) ORDER BY CASE WHEN ((vt0.c2)<<(0.9871963288177651)) THEN CASE WHEN v0.c4 THEN vt0.c2 END END DESC  NULLS LAST, (NOT (v0.c1)) ASC;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)>=(v0.c2))) NOT BETWEEN (v0.c2 COLLATE RTRIM) AND ((NOT (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>=(v0.c2))) NOT BETWEEN (v0.c2 COLLATE RTRIM) AND ((NOT (vt0.c2))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)>=(v0.c2))) NOT BETWEEN (v0.c2 COLLATE RTRIM) AND ((NOT (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>=(v0.c2))) NOT BETWEEN (v0.c2 COLLATE RTRIM) AND ((NOT (vt0.c2))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)>=(v0.c2))) NOT BETWEEN (v0.c2 COLLATE RTRIM) AND ((NOT (vt0.c2)))));
SELECT ALL * FROM vt0 WHERE (LIKE((NOT (vt0.c2)), CAST(vt0.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((LIKE((NOT (vt0.c2)), CAST(vt0.c2 AS BLOB))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LIKE((NOT (vt0.c2)), CAST(vt0.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((LIKE((NOT (vt0.c2)), CAST(vt0.c2 AS BLOB))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LIKE((NOT (vt0.c2)), CAST(vt0.c2 AS BLOB)));
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))AND(((v0.c2) NOT BETWEEN (v0.c3) AND (x'4c75')))))OR('740473059'))) ORDER BY ((CAST(vt0.c2 AS BLOB))>=(((vt0.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))AND(((v0.c2) NOT BETWEEN (v0.c3) AND (x'4c75')))))OR('740473059'))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((CAST(vt0.c2 AS BLOB))>=(((vt0.c0) ISNULL)))  NULLS FIRST);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))AND(((v0.c2) NOT BETWEEN (v0.c3) AND (x'4c75')))))OR('740473059'))) ORDER BY ((CAST(vt0.c2 AS BLOB))>=(((vt0.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))AND(((v0.c2) NOT BETWEEN (v0.c3) AND (x'4c75')))))OR('740473059'))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((CAST(vt0.c2 AS BLOB))>=(((vt0.c0) ISNULL)))  NULLS FIRST);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))AND(((v0.c2) NOT BETWEEN (v0.c3) AND (x'4c75')))))OR('740473059'))) ORDER BY ((CAST(vt0.c2 AS BLOB))>=(((vt0.c0) ISNULL)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST((x'' IN (NULL)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((x'' IN (NULL)) AS REAL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST((x'' IN (NULL)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((x'' IN (NULL)) AS REAL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST((x'' IN (NULL)) AS REAL));
SELECT * FROM v0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY v0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY v0.c2 ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY v0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY v0.c2 ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY v0.c2 ASC  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE (((json_type(vt0.c0)) NOT BETWEEN (((x'') BETWEEN (vt0.c0) AND (vt0.c0))) AND (((v0.c3)<(v0.c1))))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))>=(((v0.c1) NOTNULL))), (~ (((vt0.c1)>(vt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_type(vt0.c0)) NOT BETWEEN (((x'') BETWEEN (vt0.c0) AND (vt0.c0))) AND (((v0.c3)<(v0.c1))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))>=(((v0.c1) NOTNULL))), (~ (((vt0.c1)>(vt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (((json_type(vt0.c0)) NOT BETWEEN (((x'') BETWEEN (vt0.c0) AND (vt0.c0))) AND (((v0.c3)<(v0.c1))))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))>=(((v0.c1) NOTNULL))), (~ (((vt0.c1)>(vt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_type(vt0.c0)) NOT BETWEEN (((x'') BETWEEN (vt0.c0) AND (vt0.c0))) AND (((v0.c3)<(v0.c1))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))>=(((v0.c1) NOTNULL))), (~ (((vt0.c1)>(vt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (((json_type(vt0.c0)) NOT BETWEEN (((x'') BETWEEN (vt0.c0) AND (vt0.c0))) AND (((v0.c3)<(v0.c1))))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))>=(((v0.c1) NOTNULL))), (~ (((vt0.c1)>(vt0.c2)))) DESC  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (((((CAST(v0.c4 AS BLOB))AND(CASE WHEN vt0.c0 THEN v0.c0 END)))OR((- (v0.c3))))) ORDER BY LIKELY(DISTINCT ((vt0.c1)<(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c4 AS BLOB))AND(CASE WHEN vt0.c0 THEN v0.c0 END)))OR((- (v0.c3))))) IS TRUE)  as count FROM v0, vt0 ORDER BY LIKELY(DISTINCT ((vt0.c1)<(vt0.c0)))  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((((CAST(v0.c4 AS BLOB))AND(CASE WHEN vt0.c0 THEN v0.c0 END)))OR((- (v0.c3))))) ORDER BY LIKELY(DISTINCT ((vt0.c1)<(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c4 AS BLOB))AND(CASE WHEN vt0.c0 THEN v0.c0 END)))OR((- (v0.c3))))) IS TRUE)  as count FROM v0, vt0 ORDER BY LIKELY(DISTINCT ((vt0.c1)<(vt0.c0)))  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((((CAST(v0.c4 AS BLOB))AND(CASE WHEN vt0.c0 THEN v0.c0 END)))OR((- (v0.c3))))) ORDER BY LIKELY(DISTINCT ((vt0.c1)<(vt0.c0)))  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY TYPEOF(CAST(vt0.c1 AS BLOB)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY TYPEOF(CAST(vt0.c1 AS BLOB)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY TYPEOF(CAST(vt0.c1 AS BLOB)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY TYPEOF(CAST(vt0.c1 AS BLOB)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY TYPEOF(CAST(vt0.c1 AS BLOB)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (((v0.c4, v0.c0, v0.c2)) NOT BETWEEN ((((v0.c4) IS FALSE), UPPER(v0.c0), (((v0.c3))>((vt0.c1))))) AND ((json_type(vt0.c1), (((NULL))<((v0.c4))), ((v0.c0)<(v0.c0))))) WHERE ((((v0.c2, vt0.c0, v0.c3)) NOT BETWEEN ((((vt0.c1)<>(v0.c4)), CAST(x'' AS BLOB), ((NULL) NOT NULL))) AND ((((v0.c2) BETWEEN (v0.c0) AND (vt0.c0)), v0.c4 COLLATE BINARY, ((((((((v0.c0)AND(v0.c4)))OR(v0.c4)))AND(vt0.c0)))AND(vt0.c1)))))) ORDER BY ((v0.c1 IN ()) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c2, vt0.c0, v0.c3)) NOT BETWEEN ((((vt0.c1)!=(v0.c4)), CAST(x'' AS BLOB), ((NULL) NOT NULL))) AND ((((v0.c2) BETWEEN (v0.c0) AND (vt0.c0)), v0.c4 COLLATE BINARY, ((((((((v0.c0)AND(v0.c4)))OR(v0.c4)))AND(vt0.c0)))AND(vt0.c1)))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((v0.c4, v0.c0, v0.c2)) NOT BETWEEN ((((v0.c4) IS FALSE), UPPER(v0.c0), (((v0.c3))>((vt0.c1))))) AND ((json_type(vt0.c1), (((NULL))<((v0.c4))), ((v0.c0)<(v0.c0))))) ORDER BY ((v0.c1 IN ()) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (((v0.c4, v0.c0, v0.c2)) NOT BETWEEN ((((v0.c4) IS FALSE), UPPER(v0.c0), (((v0.c3))>((vt0.c1))))) AND ((json_type(vt0.c1), (((NULL))<((v0.c4))), ((v0.c0)<(v0.c0))))) WHERE ((((v0.c2, vt0.c0, v0.c3)) NOT BETWEEN ((((vt0.c1)<>(v0.c4)), CAST(x'' AS BLOB), ((NULL) NOT NULL))) AND ((((v0.c2) BETWEEN (v0.c0) AND (vt0.c0)), v0.c4 COLLATE BINARY, ((((((((v0.c0)AND(v0.c4)))OR(v0.c4)))AND(vt0.c0)))AND(vt0.c1)))))) ORDER BY ((v0.c1 IN ()) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c2, vt0.c0, v0.c3)) NOT BETWEEN ((((vt0.c1)!=(v0.c4)), CAST(x'' AS BLOB), ((NULL) NOT NULL))) AND ((((v0.c2) BETWEEN (v0.c0) AND (vt0.c0)), v0.c4 COLLATE BINARY, ((((((((v0.c0)AND(v0.c4)))OR(v0.c4)))AND(vt0.c0)))AND(vt0.c1)))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((v0.c4, v0.c0, v0.c2)) NOT BETWEEN ((((v0.c4) IS FALSE), UPPER(v0.c0), (((v0.c3))>((vt0.c1))))) AND ((json_type(vt0.c1), (((NULL))<((v0.c4))), ((v0.c0)<(v0.c0))))) ORDER BY ((v0.c1 IN ()) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (((v0.c4, v0.c0, v0.c2)) NOT BETWEEN ((((v0.c4) IS FALSE), UPPER(v0.c0), (((v0.c3))>((vt0.c1))))) AND ((json_type(vt0.c1), (((NULL))<((v0.c4))), ((v0.c0)<(v0.c0))))) WHERE ((((v0.c2, vt0.c0, v0.c3)) NOT BETWEEN ((((vt0.c1)<>(v0.c4)), CAST(x'' AS BLOB), ((NULL) NOT NULL))) AND ((((v0.c2) BETWEEN (v0.c0) AND (vt0.c0)), v0.c4 COLLATE BINARY, ((((((((v0.c0)AND(v0.c4)))OR(v0.c4)))AND(vt0.c0)))AND(vt0.c1)))))) ORDER BY ((v0.c1 IN ()) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c2))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (vt0.c0))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c2))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c2))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (vt0.c0))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c2))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c2))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (vt0.c0))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((('79')OR(vt0.c2)))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((((('79')OR(vt0.c2)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((('79')OR(vt0.c2)))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((((('79')OR(vt0.c2)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((('79')OR(vt0.c2)))AND(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((((((v0.c3)OR(v0.c2)))AND(v0.c4)))AND(v0.c4)))AND(v0.c2))))<((((-955062498) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((((((((((v0.c3)OR(v0.c2)))AND(v0.c4)))AND(v0.c4)))AND(v0.c2))))<((((-955062498) NOTNULL))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((((((v0.c3)OR(v0.c2)))AND(v0.c4)))AND(v0.c4)))AND(v0.c2))))<((((-955062498) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((((((((((v0.c3)OR(v0.c2)))AND(v0.c4)))AND(v0.c4)))AND(v0.c2))))<((((-955062498) NOTNULL))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((((((v0.c3)OR(v0.c2)))AND(v0.c4)))AND(v0.c4)))AND(v0.c2))))<((((-955062498) NOTNULL)))));
SELECT COUNT(*) FROM v0 WHERE (((((+ (v0.c2))))>(((~ (v0.c2)))))) ORDER BY LIKELY(DISTINCT ((v0.c0) BETWEEN (v0.c2) AND (v0.c4)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((+ (v0.c2))))>(((~ (v0.c2)))))) IS TRUE)  as count FROM v0 ORDER BY LIKELY(DISTINCT ((v0.c0) BETWEEN (v0.c2) AND (v0.c4)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((+ (v0.c2))))>(((~ (v0.c2)))))) ORDER BY LIKELY(DISTINCT ((v0.c0) BETWEEN (v0.c2) AND (v0.c4)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((+ (v0.c2))))>(((~ (v0.c2)))))) IS TRUE)  as count FROM v0 ORDER BY LIKELY(DISTINCT ((v0.c0) BETWEEN (v0.c2) AND (v0.c4)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((+ (v0.c2))))>(((~ (v0.c2)))))) ORDER BY LIKELY(DISTINCT ((v0.c0) BETWEEN (v0.c2) AND (v0.c4)))  NULLS FIRST;
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((vt0.c0) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)LIKE(vt0.c0))))) ORDER BY x'aad6' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY x'aad6' DESC);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((vt0.c0) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)LIKE(vt0.c0))))) ORDER BY x'aad6' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY x'aad6' DESC);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((vt0.c0) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)LIKE(vt0.c0))))) ORDER BY x'aad6' DESC;
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c1 AS TEXT)  WHEN CASE WHEN x'' THEN vt0.c0 END THEN CAST(vt0.c0 AS INTEGER) ELSE (vt0.c0 IN ()) END) ORDER BY ((((vt0.c1) NOT NULL)) BETWEEN (HEX(DISTINCT vt0.c1)) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c1 AS TEXT)  WHEN CASE WHEN x'' THEN vt0.c0 END THEN CAST(vt0.c0 AS INTEGER) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT NULL)) BETWEEN (HEX(DISTINCT vt0.c1)) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c1 AS TEXT)  WHEN CASE WHEN x'' THEN vt0.c0 END THEN CAST(vt0.c0 AS INTEGER) ELSE (vt0.c0 IN ()) END) ORDER BY ((((vt0.c1) NOT NULL)) BETWEEN (HEX(DISTINCT vt0.c1)) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c1 AS TEXT)  WHEN CASE WHEN x'' THEN vt0.c0 END THEN CAST(vt0.c0 AS INTEGER) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT NULL)) BETWEEN (HEX(DISTINCT vt0.c1)) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c1 AS TEXT)  WHEN CASE WHEN x'' THEN vt0.c0 END THEN CAST(vt0.c0 AS INTEGER) ELSE (vt0.c0 IN ()) END) ORDER BY ((((vt0.c1) NOT NULL)) BETWEEN (HEX(DISTINCT vt0.c1)) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((json_type(v0.c1)) NOT BETWEEN (v0.c1) AND ((((v0.c0, v0.c1, v0.c0)) NOT BETWEEN ((v0.c4, v0.c4, v0.c1)) AND ((v0.c1, v0.c1, v0.c2))))));
SELECT SUM(count) FROM (SELECT ((((json_type(v0.c1)) NOT BETWEEN (v0.c1) AND ((((v0.c0, v0.c1, v0.c0)) NOT BETWEEN ((v0.c4, v0.c4, v0.c1)) AND ((v0.c1, v0.c1, v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((json_type(v0.c1)) NOT BETWEEN (v0.c1) AND ((((v0.c0, v0.c1, v0.c0)) NOT BETWEEN ((v0.c4, v0.c4, v0.c1)) AND ((v0.c1, v0.c1, v0.c2))))));
SELECT SUM(count) FROM (SELECT ((((json_type(v0.c1)) NOT BETWEEN (v0.c1) AND ((((v0.c0, v0.c1, v0.c0)) NOT BETWEEN ((v0.c4, v0.c4, v0.c1)) AND ((v0.c1, v0.c1, v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((json_type(v0.c1)) NOT BETWEEN (v0.c1) AND ((((v0.c0, v0.c1, v0.c0)) NOT BETWEEN ((v0.c4, v0.c4, v0.c1)) AND ((v0.c1, v0.c1, v0.c2))))));
SELECT * FROM v0 WHERE ((((NOT (v0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c1))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((NOT (v0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c1))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((NOT (v0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)IS NOT(vt0.c0)))LIKE((((vt0.c1))=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)IS NOT(vt0.c0)))LIKE((((vt0.c1))==((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)IS NOT(vt0.c0)))LIKE((((vt0.c1))=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)IS NOT(vt0.c0)))LIKE((((vt0.c1))==((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)IS NOT(vt0.c0)))LIKE((((vt0.c1))=((vt0.c0))))));
SELECT * FROM vt0, v0 WHERE ((((((((v0.c1)OR(v0.c4)))AND(v0.c1)), v0.c2 COLLATE RTRIM, v0.c0 COLLATE BINARY, ((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)), ((((((((((((vt0.c1)AND(v0.c4)))AND(vt0.c1)))AND(v0.c1)))OR(v0.c1)))OR(v0.c4)))AND(v0.c2)), (~ (v0.c4)), (((v0.c4, vt0.c2, v0.c4)) NOT BETWEEN ((x'', v0.c3, v0.c0)) AND ((vt0.c0, vt0.c2, vt0.c0)))))<>(((v0.c0 IN ()), CASE WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN v0.c4 THEN v0.c3 ELSE v0.c3 END, (((v0.c4)) NOT BETWEEN ((NULL)) AND ((vt0.c0))), ((vt0.c0)|(v0.c0)), ((NULL)&(v0.c0)), ((((vt0.c1)AND(v0.c4)))OR(NULL)), (v0.c2 IN ()))))) ORDER BY ((((((((((vt0.c1)AND(v0.c0)))AND(NULL)))OR(vt0.c1)))AND(v0.c1))) NOT BETWEEN (((vt0.c2)|(v0.c0))) AND (CASE vt0.c1  WHEN 0.7054250837100204 THEN v0.c1 ELSE vt0.c2 END)), (+ (CASE v0.c1  WHEN v0.c1 THEN v0.c1 END)), COALESCE(v0.c0, v0.c1, v0.c3, ((vt0.c1) BETWEEN ('-281843886') AND (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((v0.c1)OR(v0.c4)))AND(v0.c1)), v0.c2 COLLATE RTRIM, v0.c0 COLLATE BINARY, ((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)), ((((((((((((vt0.c1)AND(v0.c4)))AND(vt0.c1)))AND(v0.c1)))OR(v0.c1)))OR(v0.c4)))AND(v0.c2)), (~ (v0.c4)), (((v0.c4, vt0.c2, v0.c4)) NOT BETWEEN ((x'', v0.c3, v0.c0)) AND ((vt0.c0, vt0.c2, vt0.c0)))))<>(((v0.c0 IN ()), CASE WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN v0.c4 THEN v0.c3 ELSE v0.c3 END, (((v0.c4)) NOT BETWEEN ((NULL)) AND ((vt0.c0))), ((vt0.c0)|(v0.c0)), ((NULL)&(v0.c0)), ((((vt0.c1)AND(v0.c4)))OR(NULL)), (v0.c2 IN ()))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((vt0.c1)AND(v0.c0)))AND(NULL)))OR(vt0.c1)))AND(v0.c1))) NOT BETWEEN (((vt0.c2)|(v0.c0))) AND (CASE vt0.c1  WHEN 0.7054250837100204 THEN v0.c1 ELSE vt0.c2 END)), (+ (CASE v0.c1  WHEN v0.c1 THEN v0.c1 END)), COALESCE(v0.c0, v0.c1, v0.c3, ((vt0.c1) BETWEEN ('-281843886') AND (vt0.c0))) DESC);
SELECT * FROM vt0, v0 WHERE ((((((((v0.c1)OR(v0.c4)))AND(v0.c1)), v0.c2 COLLATE RTRIM, v0.c0 COLLATE BINARY, ((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)), ((((((((((((vt0.c1)AND(v0.c4)))AND(vt0.c1)))AND(v0.c1)))OR(v0.c1)))OR(v0.c4)))AND(v0.c2)), (~ (v0.c4)), (((v0.c4, vt0.c2, v0.c4)) NOT BETWEEN ((x'', v0.c3, v0.c0)) AND ((vt0.c0, vt0.c2, vt0.c0)))))<>(((v0.c0 IN ()), CASE WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN v0.c4 THEN v0.c3 ELSE v0.c3 END, (((v0.c4)) NOT BETWEEN ((NULL)) AND ((vt0.c0))), ((vt0.c0)|(v0.c0)), ((NULL)&(v0.c0)), ((((vt0.c1)AND(v0.c4)))OR(NULL)), (v0.c2 IN ()))))) ORDER BY ((((((((((vt0.c1)AND(v0.c0)))AND(NULL)))OR(vt0.c1)))AND(v0.c1))) NOT BETWEEN (((vt0.c2)|(v0.c0))) AND (CASE vt0.c1  WHEN 0.7054250837100204 THEN v0.c1 ELSE vt0.c2 END)), (+ (CASE v0.c1  WHEN v0.c1 THEN v0.c1 END)), COALESCE(v0.c0, v0.c1, v0.c3, ((vt0.c1) BETWEEN ('-281843886') AND (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((v0.c1)OR(v0.c4)))AND(v0.c1)), v0.c2 COLLATE RTRIM, v0.c0 COLLATE BINARY, ((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)), ((((((((((((vt0.c1)AND(v0.c4)))AND(vt0.c1)))AND(v0.c1)))OR(v0.c1)))OR(v0.c4)))AND(v0.c2)), (~ (v0.c4)), (((v0.c4, vt0.c2, v0.c4)) NOT BETWEEN ((x'', v0.c3, v0.c0)) AND ((vt0.c0, vt0.c2, vt0.c0)))))<>(((v0.c0 IN ()), CASE WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN v0.c4 THEN v0.c3 ELSE v0.c3 END, (((v0.c4)) NOT BETWEEN ((NULL)) AND ((vt0.c0))), ((vt0.c0)|(v0.c0)), ((NULL)&(v0.c0)), ((((vt0.c1)AND(v0.c4)))OR(NULL)), (v0.c2 IN ()))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((vt0.c1)AND(v0.c0)))AND(NULL)))OR(vt0.c1)))AND(v0.c1))) NOT BETWEEN (((vt0.c2)|(v0.c0))) AND (CASE vt0.c1  WHEN 0.7054250837100204 THEN v0.c1 ELSE vt0.c2 END)), (+ (CASE v0.c1  WHEN v0.c1 THEN v0.c1 END)), COALESCE(v0.c0, v0.c1, v0.c3, ((vt0.c1) BETWEEN ('-281843886') AND (vt0.c0))) DESC);
SELECT * FROM vt0, v0 WHERE ((((((((v0.c1)OR(v0.c4)))AND(v0.c1)), v0.c2 COLLATE RTRIM, v0.c0 COLLATE BINARY, ((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)), ((((((((((((vt0.c1)AND(v0.c4)))AND(vt0.c1)))AND(v0.c1)))OR(v0.c1)))OR(v0.c4)))AND(v0.c2)), (~ (v0.c4)), (((v0.c4, vt0.c2, v0.c4)) NOT BETWEEN ((x'', v0.c3, v0.c0)) AND ((vt0.c0, vt0.c2, vt0.c0)))))<>(((v0.c0 IN ()), CASE WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN v0.c4 THEN v0.c3 ELSE v0.c3 END, (((v0.c4)) NOT BETWEEN ((NULL)) AND ((vt0.c0))), ((vt0.c0)|(v0.c0)), ((NULL)&(v0.c0)), ((((vt0.c1)AND(v0.c4)))OR(NULL)), (v0.c2 IN ()))))) ORDER BY ((((((((((vt0.c1)AND(v0.c0)))AND(NULL)))OR(vt0.c1)))AND(v0.c1))) NOT BETWEEN (((vt0.c2)|(v0.c0))) AND (CASE vt0.c1  WHEN 0.7054250837100204 THEN v0.c1 ELSE vt0.c2 END)), (+ (CASE v0.c1  WHEN v0.c1 THEN v0.c1 END)), COALESCE(v0.c0, v0.c1, v0.c3, ((vt0.c1) BETWEEN ('-281843886') AND (vt0.c0))) DESC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN ((vt0.c0)OR(vt0.c2)) WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c1)) WHEN CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END THEN vt0.c1 COLLATE NOCASE WHEN CAST(vt0.c2 AS NUMERIC) THEN vt0.c1 WHEN (((vt0.c2, vt0.c0, vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c0, x'', vt0.c2)) AND ((vt0.c2, vt0.c2, vt0.c1, vt0.c2, vt0.c0))) THEN (NOT (vt0.c2)) ELSE vt0.c2 END) ORDER BY CASE WHEN (+ (vt0.c2)) THEN ((((((((((((vt0.c0)AND(x'd195')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) ELSE vt0.c2 END DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c1 IN ()) THEN ((vt0.c0)OR(vt0.c2)) WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c1)) WHEN CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END THEN vt0.c1 COLLATE NOCASE WHEN CAST(vt0.c2 AS NUMERIC) THEN vt0.c1 WHEN (((vt0.c2, vt0.c0, vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c0, x'', vt0.c2)) AND ((vt0.c2, vt0.c2, vt0.c1, vt0.c2, vt0.c0))) THEN (NOT (vt0.c2)) ELSE vt0.c2 END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (+ (vt0.c2)) THEN ((((((((((((vt0.c0)AND(x'd195')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) ELSE vt0.c2 END DESC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN ((vt0.c0)OR(vt0.c2)) WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c1)) WHEN CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END THEN vt0.c1 COLLATE NOCASE WHEN CAST(vt0.c2 AS NUMERIC) THEN vt0.c1 WHEN (((vt0.c2, vt0.c0, vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c0, x'', vt0.c2)) AND ((vt0.c2, vt0.c2, vt0.c1, vt0.c2, vt0.c0))) THEN (NOT (vt0.c2)) ELSE vt0.c2 END) ORDER BY CASE WHEN (+ (vt0.c2)) THEN ((((((((((((vt0.c0)AND(x'd195')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) ELSE vt0.c2 END DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c1 IN ()) THEN ((vt0.c0)OR(vt0.c2)) WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c1)) WHEN CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END THEN vt0.c1 COLLATE NOCASE WHEN CAST(vt0.c2 AS NUMERIC) THEN vt0.c1 WHEN (((vt0.c2, vt0.c0, vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c0, x'', vt0.c2)) AND ((vt0.c2, vt0.c2, vt0.c1, vt0.c2, vt0.c0))) THEN (NOT (vt0.c2)) ELSE vt0.c2 END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (+ (vt0.c2)) THEN ((((((((((((vt0.c0)AND(x'd195')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) ELSE vt0.c2 END DESC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN ((vt0.c0)OR(vt0.c2)) WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c1)) WHEN CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END THEN vt0.c1 COLLATE NOCASE WHEN CAST(vt0.c2 AS NUMERIC) THEN vt0.c1 WHEN (((vt0.c2, vt0.c0, vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c0, x'', vt0.c2)) AND ((vt0.c2, vt0.c2, vt0.c1, vt0.c2, vt0.c0))) THEN (NOT (vt0.c2)) ELSE vt0.c2 END) ORDER BY CASE WHEN (+ (vt0.c2)) THEN ((((((((((((vt0.c0)AND(x'd195')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) ELSE vt0.c2 END DESC;
SELECT ALL * FROM vt0 WHERE ((- (CAST(vt0.c1 AS INTEGER)))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) AS REAL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((- (CAST(vt0.c1 AS INTEGER)))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) AS REAL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((- (CAST(vt0.c1 AS INTEGER)))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) AS REAL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER));
SELECT * FROM v0, vt0 WHERE (((((CASE WHEN v0.c3 THEN vt0.c0 WHEN vt0.c1 THEN v0.c3 WHEN 0.5951806661198379 THEN vt0.c0 ELSE v0.c4 END)AND((- (v0.c2)))))AND(((v0.c3)IS(v0.c2))))) ORDER BY '-1286664248';
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c3 THEN vt0.c0 WHEN vt0.c1 THEN v0.c3 WHEN 0.5951806661198379 THEN vt0.c0 ELSE v0.c4 END)AND((- (v0.c2)))))AND(((v0.c3)IS(v0.c2))))) IS TRUE)  as count FROM v0, vt0 ORDER BY '-1286664248');
SELECT * FROM v0, vt0 WHERE (((((CASE WHEN v0.c3 THEN vt0.c0 WHEN vt0.c1 THEN v0.c3 WHEN 0.5951806661198379 THEN vt0.c0 ELSE v0.c4 END)AND((- (v0.c2)))))AND(((v0.c3)IS(v0.c2))))) ORDER BY '-1286664248';
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c3 THEN vt0.c0 WHEN vt0.c1 THEN v0.c3 WHEN 0.5951806661198379 THEN vt0.c0 ELSE v0.c4 END)AND((- (v0.c2)))))AND(((v0.c3)IS(v0.c2))))) IS TRUE)  as count FROM v0, vt0 ORDER BY '-1286664248');
SELECT * FROM v0, vt0 WHERE (((((CASE WHEN v0.c3 THEN vt0.c0 WHEN vt0.c1 THEN v0.c3 WHEN 0.5951806661198379 THEN vt0.c0 ELSE v0.c4 END)AND((- (v0.c2)))))AND(((v0.c3)IS(v0.c2))))) ORDER BY '-1286664248';
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c4) NOTNULL)) ORDER BY (((((v0.c1) NOTNULL)))=((((v0.c3)<<(v0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c4) NOTNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((v0.c1) NOTNULL)))==((((v0.c3)<<(v0.c2))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c4) NOTNULL)) ORDER BY (((((v0.c1) NOTNULL)))=((((v0.c3)<<(v0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c4) NOTNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((v0.c1) NOTNULL)))==((((v0.c3)<<(v0.c2))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c4) NOTNULL)) ORDER BY (((((v0.c1) NOTNULL)))=((((v0.c3)<<(v0.c2))))) ASC  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (((NOT (vt0.c2)) IN ())) ORDER BY (((((((((('FU)Ftlqr') NOT BETWEEN (vt0.c1) AND (v0.c4)))AND((v0.c3 IN ()))))OR((NOT (vt0.c0)))))AND(v0.c3)))OR(((0.0025592998640766584)AND(vt0.c0)))) ASC  NULLS LAST, ((((((vt0.c2) NOT NULL))OR(((((vt0.c2)OR('119123350')))AND(v0.c4)))))AND(ABS(1062520367)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c2)) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((((((('FU)Ftlqr') NOT BETWEEN (vt0.c1) AND (v0.c4)))AND((v0.c3 IN ()))))OR((NOT (vt0.c0)))))AND(v0.c3)))OR(((0.0025592998640766584)AND(vt0.c0)))) ASC  NULLS LAST, ((((((vt0.c2) NOT NULL))OR(((((vt0.c2)OR('119123350')))AND(v0.c4)))))AND(ABS(1062520367)))  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((NOT (vt0.c2)) IN ())) ORDER BY (((((((((('FU)Ftlqr') NOT BETWEEN (vt0.c1) AND (v0.c4)))AND((v0.c3 IN ()))))OR((NOT (vt0.c0)))))AND(v0.c3)))OR(((0.0025592998640766584)AND(vt0.c0)))) ASC  NULLS LAST, ((((((vt0.c2) NOT NULL))OR(((((vt0.c2)OR('119123350')))AND(v0.c4)))))AND(ABS(1062520367)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c2)) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((((((('FU)Ftlqr') NOT BETWEEN (vt0.c1) AND (v0.c4)))AND((v0.c3 IN ()))))OR((NOT (vt0.c0)))))AND(v0.c3)))OR(((0.0025592998640766584)AND(vt0.c0)))) ASC  NULLS LAST, ((((((vt0.c2) NOT NULL))OR(((((vt0.c2)OR('119123350')))AND(v0.c4)))))AND(ABS(1062520367)))  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((NOT (vt0.c2)) IN ())) ORDER BY (((((((((('FU)Ftlqr') NOT BETWEEN (vt0.c1) AND (v0.c4)))AND((v0.c3 IN ()))))OR((NOT (vt0.c0)))))AND(v0.c3)))OR(((0.0025592998640766584)AND(vt0.c0)))) ASC  NULLS LAST, ((((((vt0.c2) NOT NULL))OR(((((vt0.c2)OR('119123350')))AND(v0.c4)))))AND(ABS(1062520367)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((LOWER(vt0.c2) IN ())) ORDER BY (((vt0.c1, vt0.c1, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE  NULLS FIRST, ((vt0.c0 COLLATE BINARY) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((LOWER(vt0.c2) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c1, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE  NULLS FIRST, ((vt0.c0 COLLATE BINARY) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((LOWER(vt0.c2) IN ())) ORDER BY (((vt0.c1, vt0.c1, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE  NULLS FIRST, ((vt0.c0 COLLATE BINARY) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((LOWER(vt0.c2) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c1, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE  NULLS FIRST, ((vt0.c0 COLLATE BINARY) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((LOWER(vt0.c2) IN ())) ORDER BY (((vt0.c1, vt0.c1, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE  NULLS FIRST, ((vt0.c0 COLLATE BINARY) IS TRUE) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ('VJQVWm\/');
SELECT SUM(count) FROM (SELECT (('VJQVWm\/') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('VJQVWm\/');
SELECT SUM(count) FROM (SELECT (('VJQVWm\/') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('VJQVWm\/');
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c2)AND(vt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)AND(vt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c2)AND(vt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)AND(vt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c2)AND(vt0.c2))) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END)IS NOT((vt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END)IS NOT((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END)IS NOT((vt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END)IS NOT((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END)IS NOT((vt0.c2 IN ()))));
SELECT ALL * FROM vt0 WHERE (TIME(CAST(vt0.c1 AS INTEGER), CAST(vt0.c2 AS BLOB), (0.6832710757987576 IN (vt0.c2, vt0.c2)), ((((vt0.c0)AND(vt0.c1)))AND(vt0.c2)), vt0.c2)) ORDER BY (((((((((vt0.c1)OR('')))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c2)) IN ()), ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))IS NOT(vt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TIME(CAST(vt0.c1 AS INTEGER), CAST(vt0.c2 AS BLOB), (0.6832710757987576 IN (vt0.c2, vt0.c2)), ((((vt0.c0)AND(vt0.c1)))AND(vt0.c2)), vt0.c2)) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c1)OR('')))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c2)) IN ()), ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))IS NOT(vt0.c0)) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (TIME(CAST(vt0.c1 AS INTEGER), CAST(vt0.c2 AS BLOB), (0.6832710757987576 IN (vt0.c2, vt0.c2)), ((((vt0.c0)AND(vt0.c1)))AND(vt0.c2)), vt0.c2)) ORDER BY (((((((((vt0.c1)OR('')))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c2)) IN ()), ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))IS NOT(vt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TIME(CAST(vt0.c1 AS INTEGER), CAST(vt0.c2 AS BLOB), (0.6832710757987576 IN (vt0.c2, vt0.c2)), ((((vt0.c0)AND(vt0.c1)))AND(vt0.c2)), vt0.c2)) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c1)OR('')))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c2)) IN ()), ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))IS NOT(vt0.c0)) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (TIME(CAST(vt0.c1 AS INTEGER), CAST(vt0.c2 AS BLOB), (0.6832710757987576 IN (vt0.c2, vt0.c2)), ((((vt0.c0)AND(vt0.c1)))AND(vt0.c2)), vt0.c2)) ORDER BY (((((((((vt0.c1)OR('')))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c2)) IN ()), ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))IS NOT(vt0.c0)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c1)))|(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt0.c1)))|(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c1)))|(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt0.c1)))|(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c1)))|(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))));
SELECT * FROM v0 WHERE ((+ (((v0.c4) NOT NULL)))) ORDER BY CASE ((v0.c1) NOTNULL)  WHEN CASE v0.c0  WHEN v0.c4 THEN v0.c3 END THEN v0.c1 COLLATE RTRIM ELSE CASE v0.c4  WHEN v0.c3 THEN v0.c3 WHEN '827353157' THEN v0.c1 WHEN NULL THEN v0.c0 WHEN v0.c2 THEN v0.c3 WHEN v0.c3 THEN v0.c0 END END;
SELECT SUM(count) FROM (SELECT (((+ (((v0.c4) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c1) NOTNULL)  WHEN CASE v0.c0  WHEN v0.c4 THEN v0.c3 END THEN v0.c1 COLLATE RTRIM ELSE CASE v0.c4  WHEN v0.c3 THEN v0.c3 WHEN '827353157' THEN v0.c1 WHEN NULL THEN v0.c0 WHEN v0.c2 THEN v0.c3 WHEN v0.c3 THEN v0.c0 END END);
SELECT * FROM v0 WHERE ((+ (((v0.c4) NOT NULL)))) ORDER BY CASE ((v0.c1) NOTNULL)  WHEN CASE v0.c0  WHEN v0.c4 THEN v0.c3 END THEN v0.c1 COLLATE RTRIM ELSE CASE v0.c4  WHEN v0.c3 THEN v0.c3 WHEN '827353157' THEN v0.c1 WHEN NULL THEN v0.c0 WHEN v0.c2 THEN v0.c3 WHEN v0.c3 THEN v0.c0 END END;
SELECT SUM(count) FROM (SELECT (((+ (((v0.c4) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c1) NOTNULL)  WHEN CASE v0.c0  WHEN v0.c4 THEN v0.c3 END THEN v0.c1 COLLATE RTRIM ELSE CASE v0.c4  WHEN v0.c3 THEN v0.c3 WHEN '827353157' THEN v0.c1 WHEN NULL THEN v0.c0 WHEN v0.c2 THEN v0.c3 WHEN v0.c3 THEN v0.c0 END END);
SELECT * FROM v0 WHERE ((+ (((v0.c4) NOT NULL)))) ORDER BY CASE ((v0.c1) NOTNULL)  WHEN CASE v0.c0  WHEN v0.c4 THEN v0.c3 END THEN v0.c1 COLLATE RTRIM ELSE CASE v0.c4  WHEN v0.c3 THEN v0.c3 WHEN '827353157' THEN v0.c1 WHEN NULL THEN v0.c0 WHEN v0.c2 THEN v0.c3 WHEN v0.c3 THEN v0.c0 END END;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1)+(v0.c2)) IN ((((v0.c0)) BETWEEN ((2135139289)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c1)+(v0.c2)) IN ((((v0.c0)) BETWEEN ((2135139289)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1)+(v0.c2)) IN ((((v0.c0)) BETWEEN ((2135139289)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c1)+(v0.c2)) IN ((((v0.c0)) BETWEEN ((2135139289)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1)+(v0.c2)) IN ((((v0.c0)) BETWEEN ((2135139289)) AND ((v0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c2) ISNULL))) AND (((NOT (vt0.c0)))))) ORDER BY CAST((+ (vt0.c1)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((((vt0.c2) ISNULL))) AND (((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((+ (vt0.c1)) AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c2) ISNULL))) AND (((NOT (vt0.c0)))))) ORDER BY CAST((+ (vt0.c1)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((((vt0.c2) ISNULL))) AND (((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((+ (vt0.c1)) AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c2) ISNULL))) AND (((NOT (vt0.c0)))))) ORDER BY CAST((+ (vt0.c1)) AS INTEGER) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE 0.6080566513904296  WHEN v0.c2 THEN v0.c3 WHEN ((((v0.c2)OR(v0.c2)))AND(v0.c1)) THEN CASE v0.c3  WHEN v0.c3 THEN v0.c4 ELSE v0.c0 END WHEN CAST(v0.c0 AS BLOB) THEN CASE WHEN v0.c4 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN '' ELSE v0.c0 END WHEN ((v0.c2)<(v0.c2)) THEN (NOT (v0.c0)) WHEN (((v0.c3)) BETWEEN ((-2.107273697E9)) AND ((v0.c0))) THEN CASE v0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c3 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END ELSE v0.c2 COLLATE BINARY END) ORDER BY ((((v0.c0)IS(v0.c1))) NOTNULL) DESC, v0.c3;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.6080566513904296  WHEN v0.c2 THEN v0.c3 WHEN ((((v0.c2)OR(v0.c2)))AND(v0.c1)) THEN CASE v0.c3  WHEN v0.c3 THEN v0.c4 ELSE v0.c0 END WHEN CAST(v0.c0 AS BLOB) THEN CASE WHEN v0.c4 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN '' ELSE v0.c0 END WHEN ((v0.c2)<(v0.c2)) THEN (NOT (v0.c0)) WHEN (((v0.c3)) BETWEEN ((-2.107273697E9)) AND ((v0.c0))) THEN CASE v0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c3 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END ELSE v0.c2 COLLATE BINARY END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)IS(v0.c1))) NOTNULL) DESC, v0.c3);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE 0.6080566513904296  WHEN v0.c2 THEN v0.c3 WHEN ((((v0.c2)OR(v0.c2)))AND(v0.c1)) THEN CASE v0.c3  WHEN v0.c3 THEN v0.c4 ELSE v0.c0 END WHEN CAST(v0.c0 AS BLOB) THEN CASE WHEN v0.c4 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN '' ELSE v0.c0 END WHEN ((v0.c2)<(v0.c2)) THEN (NOT (v0.c0)) WHEN (((v0.c3)) BETWEEN ((-2.107273697E9)) AND ((v0.c0))) THEN CASE v0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c3 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END ELSE v0.c2 COLLATE BINARY END) ORDER BY ((((v0.c0)IS(v0.c1))) NOTNULL) DESC, v0.c3;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.6080566513904296  WHEN v0.c2 THEN v0.c3 WHEN ((((v0.c2)OR(v0.c2)))AND(v0.c1)) THEN CASE v0.c3  WHEN v0.c3 THEN v0.c4 ELSE v0.c0 END WHEN CAST(v0.c0 AS BLOB) THEN CASE WHEN v0.c4 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN '' ELSE v0.c0 END WHEN ((v0.c2)<(v0.c2)) THEN (NOT (v0.c0)) WHEN (((v0.c3)) BETWEEN ((-2.107273697E9)) AND ((v0.c0))) THEN CASE v0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c3 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END ELSE v0.c2 COLLATE BINARY END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)IS(v0.c1))) NOTNULL) DESC, v0.c3);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE 0.6080566513904296  WHEN v0.c2 THEN v0.c3 WHEN ((((v0.c2)OR(v0.c2)))AND(v0.c1)) THEN CASE v0.c3  WHEN v0.c3 THEN v0.c4 ELSE v0.c0 END WHEN CAST(v0.c0 AS BLOB) THEN CASE WHEN v0.c4 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN '' ELSE v0.c0 END WHEN ((v0.c2)<(v0.c2)) THEN (NOT (v0.c0)) WHEN (((v0.c3)) BETWEEN ((-2.107273697E9)) AND ((v0.c0))) THEN CASE v0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c3 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END ELSE v0.c2 COLLATE BINARY END) ORDER BY ((((v0.c0)IS(v0.c1))) NOTNULL) DESC, v0.c3;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) ORDER BY CAST(((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) ORDER BY CAST(((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) ORDER BY CAST(((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ (((vt0.c2)>>(vt0.c1))))) ORDER BY CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c3 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END COLLATE RTRIM ASC  NULLS FIRST, ((vt0.c2)>>(v0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c2)>>(vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c3 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END COLLATE RTRIM ASC  NULLS FIRST, ((vt0.c2)>>(v0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ (((vt0.c2)>>(vt0.c1))))) ORDER BY CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c3 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END COLLATE RTRIM ASC  NULLS FIRST, ((vt0.c2)>>(v0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c2)>>(vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c3 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END COLLATE RTRIM ASC  NULLS FIRST, ((vt0.c2)>>(v0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ (((vt0.c2)>>(vt0.c1))))) ORDER BY CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c3 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END COLLATE RTRIM ASC  NULLS FIRST, ((vt0.c2)>>(v0.c0)) COLLATE BINARY;
SELECT ALL * FROM vt0 WHERE (((((0X267406bc)>>(vt0.c1)))<<(((vt0.c1)!=(vt0.c2))))) ORDER BY LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN 'B^J.0' END, 0.5558259071688634)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0X267406bc)>>(vt0.c1)))<<(((vt0.c1)!=(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN 'B^J.0' END, 0.5558259071688634)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((0X267406bc)>>(vt0.c1)))<<(((vt0.c1)!=(vt0.c2))))) ORDER BY LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN 'B^J.0' END, 0.5558259071688634)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0X267406bc)>>(vt0.c1)))<<(((vt0.c1)!=(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN 'B^J.0' END, 0.5558259071688634)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((0X267406bc)>>(vt0.c1)))<<(((vt0.c1)!=(vt0.c2))))) ORDER BY LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN 'B^J.0' END, 0.5558259071688634)  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c3 END IN ())) ORDER BY json_quote(((v0.c0)<(v0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c3 END IN ())) IS TRUE)  as count FROM v0 ORDER BY json_quote(((v0.c0)<(v0.c1))) DESC);
SELECT COUNT(*) FROM v0 WHERE ((CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c3 END IN ())) ORDER BY json_quote(((v0.c0)<(v0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c3 END IN ())) IS TRUE)  as count FROM v0 ORDER BY json_quote(((v0.c0)<(v0.c1))) DESC);
SELECT COUNT(*) FROM v0 WHERE ((CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c3 END IN ())) ORDER BY json_quote(((v0.c0)<(v0.c1))) DESC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c1) AND (x'')) IN ())) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c2, vt0.c2)) AND ((vt0.c2, vt0.c0, vt0.c1)))) NOT BETWEEN (NULL COLLATE BINARY) AND (vt0.c1)) ASC, (((vt0.c2)OR(vt0.c1)) IN ()), ((((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))>(UNLIKELY(vt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) BETWEEN (vt0.c1) AND (x'')) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c2, vt0.c2)) AND ((vt0.c2, vt0.c0, vt0.c1)))) NOT BETWEEN (NULL COLLATE BINARY) AND (vt0.c1)) ASC, (((vt0.c2)OR(vt0.c1)) IN ()), ((((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))>(UNLIKELY(vt0.c2)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c1) AND (x'')) IN ())) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c2, vt0.c2)) AND ((vt0.c2, vt0.c0, vt0.c1)))) NOT BETWEEN (NULL COLLATE BINARY) AND (vt0.c1)) ASC, (((vt0.c2)OR(vt0.c1)) IN ()), ((((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))>(UNLIKELY(vt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) BETWEEN (vt0.c1) AND (x'')) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c2, vt0.c2)) AND ((vt0.c2, vt0.c0, vt0.c1)))) NOT BETWEEN (NULL COLLATE BINARY) AND (vt0.c1)) ASC, (((vt0.c2)OR(vt0.c1)) IN ()), ((((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))>(UNLIKELY(vt0.c2)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c1) AND (x'')) IN ())) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c2, vt0.c2)) AND ((vt0.c2, vt0.c0, vt0.c1)))) NOT BETWEEN (NULL COLLATE BINARY) AND (vt0.c1)) ASC, (((vt0.c2)OR(vt0.c1)) IN ()), ((((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))>(UNLIKELY(vt0.c2)))  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((x'')) BETWEEN ((x'')) AND ((vt0.c2)))))==((((vt0.c0)>=(vt0.c0)))))) ORDER BY ((((vt0.c1 COLLATE NOCASE)OR((- (vt0.c0)))))OR(((vt0.c0)AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')) BETWEEN ((x'')) AND ((vt0.c2)))))==((((vt0.c0)>=(vt0.c0)))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((((vt0.c1 COLLATE NOCASE)OR((- (vt0.c0)))))OR(((vt0.c0)AND(vt0.c0)))));
SELECT * FROM vt0 WHERE (((((((x'')) BETWEEN ((x'')) AND ((vt0.c2)))))==((((vt0.c0)>=(vt0.c0)))))) ORDER BY ((((vt0.c1 COLLATE NOCASE)OR((- (vt0.c0)))))OR(((vt0.c0)AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')) BETWEEN ((x'')) AND ((vt0.c2)))))==((((vt0.c0)>=(vt0.c0)))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((((vt0.c1 COLLATE NOCASE)OR((- (vt0.c0)))))OR(((vt0.c0)AND(vt0.c0)))));
SELECT * FROM vt0 WHERE (((((((x'')) BETWEEN ((x'')) AND ((vt0.c2)))))==((((vt0.c0)>=(vt0.c0)))))) ORDER BY ((((vt0.c1 COLLATE NOCASE)OR((- (vt0.c0)))))OR(((vt0.c0)AND(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c2)) AS TEXT));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)/(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)/(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)/(vt0.c0))) NOTNULL));
SELECT * FROM v0, vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c1)))OR((+ (v0.c3)))))OR(v0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c1)))OR((+ (v0.c3)))))OR(v0.c2))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c1)))OR((+ (v0.c3)))))OR(v0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c1)))OR((+ (v0.c3)))))OR(v0.c2))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c1)))OR((+ (v0.c3)))))OR(v0.c2)));
SELECT ALL * FROM vt0 WHERE ((NOT ((('601514609')!=(vt0.c1))))) ORDER BY CASE CAST(vt0.c2 AS BLOB)  WHEN CAST(vt0.c0 AS BLOB) THEN '603887622' ELSE vt0.c2 END DESC  NULLS FIRST, RTRIM(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))  NULLS FIRST, CASE WHEN vt0.c0 COLLATE BINARY THEN vt0.c2 END;
SELECT SUM(count) FROM (SELECT (((NOT ((('601514609')<>(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c2 AS BLOB)  WHEN CAST(vt0.c0 AS BLOB) THEN '603887622' ELSE vt0.c2 END DESC  NULLS FIRST, RTRIM(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))  NULLS FIRST, CASE WHEN vt0.c0 COLLATE BINARY THEN vt0.c2 END);
SELECT ALL * FROM vt0 WHERE ((NOT ((('601514609')!=(vt0.c1))))) ORDER BY CASE CAST(vt0.c2 AS BLOB)  WHEN CAST(vt0.c0 AS BLOB) THEN '603887622' ELSE vt0.c2 END DESC  NULLS FIRST, RTRIM(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))  NULLS FIRST, CASE WHEN vt0.c0 COLLATE BINARY THEN vt0.c2 END;
SELECT SUM(count) FROM (SELECT (((NOT ((('601514609')<>(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c2 AS BLOB)  WHEN CAST(vt0.c0 AS BLOB) THEN '603887622' ELSE vt0.c2 END DESC  NULLS FIRST, RTRIM(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))  NULLS FIRST, CASE WHEN vt0.c0 COLLATE BINARY THEN vt0.c2 END);
SELECT ALL * FROM vt0 WHERE ((NOT ((('601514609')!=(vt0.c1))))) ORDER BY CASE CAST(vt0.c2 AS BLOB)  WHEN CAST(vt0.c0 AS BLOB) THEN '603887622' ELSE vt0.c2 END DESC  NULLS FIRST, RTRIM(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))  NULLS FIRST, CASE WHEN vt0.c0 COLLATE BINARY THEN vt0.c2 END;
SELECT * FROM v0, vt0 WHERE (((CASE vt0.c2  WHEN 0.8692990407303678 THEN vt0.c0 WHEN v0.c4 THEN vt0.c2 WHEN v0.c1 THEN '471247870' ELSE v0.c3 END) IS FALSE)) ORDER BY v0.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c2  WHEN 0.8692990407303678 THEN vt0.c0 WHEN v0.c4 THEN vt0.c2 WHEN v0.c1 THEN '471247870' ELSE v0.c3 END) IS FALSE)) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 COLLATE BINARY);
SELECT * FROM v0, vt0 WHERE (((CASE vt0.c2  WHEN 0.8692990407303678 THEN vt0.c0 WHEN v0.c4 THEN vt0.c2 WHEN v0.c1 THEN '471247870' ELSE v0.c3 END) IS FALSE)) ORDER BY v0.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c2  WHEN 0.8692990407303678 THEN vt0.c0 WHEN v0.c4 THEN vt0.c2 WHEN v0.c1 THEN '471247870' ELSE v0.c3 END) IS FALSE)) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 COLLATE BINARY);
SELECT * FROM v0, vt0 WHERE (((CASE vt0.c2  WHEN 0.8692990407303678 THEN vt0.c0 WHEN v0.c4 THEN vt0.c2 WHEN v0.c1 THEN '471247870' ELSE v0.c3 END) IS FALSE)) ORDER BY v0.c0 COLLATE BINARY;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON TRIM(((vt0.c2) NOT NULL), ((v0.c2) IS FALSE)) WHERE ((((~ (v0.c2)))AND(-6.49598598E8))) ORDER BY CASE (- (0X3f6f64b4))  WHEN (((vt0.c1, v0.c1, v0.c0))>((v0.c1, vt0.c0, v0.c2))) THEN ((vt0.c2) ISNULL) END;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c2)))AND(-6.49598598E8))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON TRIM(((vt0.c2) NOT NULL), ((v0.c2) IS FALSE)) ORDER BY CASE (- (0X3f6f64b4))  WHEN (((vt0.c1, v0.c1, v0.c0))>((v0.c1, vt0.c0, v0.c2))) THEN ((vt0.c2) ISNULL) END);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON TRIM(((vt0.c2) NOT NULL), ((v0.c2) IS FALSE)) WHERE ((((~ (v0.c2)))AND(-6.49598598E8))) ORDER BY CASE (- (0X3f6f64b4))  WHEN (((vt0.c1, v0.c1, v0.c0))>((v0.c1, vt0.c0, v0.c2))) THEN ((vt0.c2) ISNULL) END;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c2)))AND(-6.49598598E8))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON TRIM(((vt0.c2) NOT NULL), ((v0.c2) IS FALSE)) ORDER BY CASE (- (0X3f6f64b4))  WHEN (((vt0.c1, v0.c1, v0.c0))>((v0.c1, vt0.c0, v0.c2))) THEN ((vt0.c2) ISNULL) END);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON TRIM(((vt0.c2) NOT NULL), ((v0.c2) IS FALSE)) WHERE ((((~ (v0.c2)))AND(-6.49598598E8))) ORDER BY CASE (- (0X3f6f64b4))  WHEN (((vt0.c1, v0.c1, v0.c0))>((v0.c1, vt0.c0, v0.c2))) THEN ((vt0.c2) ISNULL) END;
SELECT ALL * FROM vt0 WHERE ((0.6848197365710074 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.6848197365710074 IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((0.6848197365710074 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.6848197365710074 IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((0.6848197365710074 IN ()));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c1)AND(v0.c0))) BETWEEN (x'') AND (((vt0.c2)/(v0.c2)))) WHERE (((v0.c2 COLLATE BINARY) NOT BETWEEN (CASE v0.c0  WHEN v0.c4 THEN v0.c1 ELSE v0.c2 END) AND ((((v0.c1))<((v0.c3)))))) ORDER BY (NOT (vt0.c2)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE BINARY) NOT BETWEEN (CASE v0.c0  WHEN v0.c4 THEN v0.c1 ELSE v0.c2 END) AND ((((v0.c1))<((v0.c3)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c1)AND(v0.c0))) BETWEEN (x'') AND (((vt0.c2)/(v0.c2)))) ORDER BY (NOT (vt0.c2)) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c1)AND(v0.c0))) BETWEEN (x'') AND (((vt0.c2)/(v0.c2)))) WHERE (((v0.c2 COLLATE BINARY) NOT BETWEEN (CASE v0.c0  WHEN v0.c4 THEN v0.c1 ELSE v0.c2 END) AND ((((v0.c1))<((v0.c3)))))) ORDER BY (NOT (vt0.c2)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE BINARY) NOT BETWEEN (CASE v0.c0  WHEN v0.c4 THEN v0.c1 ELSE v0.c2 END) AND ((((v0.c1))<((v0.c3)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c1)AND(v0.c0))) BETWEEN (x'') AND (((vt0.c2)/(v0.c2)))) ORDER BY (NOT (vt0.c2)) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c1)AND(v0.c0))) BETWEEN (x'') AND (((vt0.c2)/(v0.c2)))) WHERE (((v0.c2 COLLATE BINARY) NOT BETWEEN (CASE v0.c0  WHEN v0.c4 THEN v0.c1 ELSE v0.c2 END) AND ((((v0.c1))<((v0.c3)))))) ORDER BY (NOT (vt0.c2)) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (json(LTRIM(v0.c1, v0.c0)));
SELECT SUM(count) FROM (SELECT ((json(LTRIM(v0.c1, v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (json(LTRIM(v0.c1, v0.c0)));
SELECT SUM(count) FROM (SELECT ((json(LTRIM(v0.c1, v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (json(LTRIM(v0.c1, v0.c0)));
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c3 THEN v0.c3 WHEN v0.c3 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END) ISNULL)) ORDER BY v0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c3 THEN v0.c3 WHEN v0.c3 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY v0.c1);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c3 THEN v0.c3 WHEN v0.c3 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END) ISNULL)) ORDER BY v0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c3 THEN v0.c3 WHEN v0.c3 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY v0.c1);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c3 THEN v0.c3 WHEN v0.c3 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END) ISNULL)) ORDER BY v0.c1;
SELECT ALL * FROM v0, vt0 WHERE (vt0.c2) ORDER BY CAST(((((((((v0.c4)AND(vt0.c0)))AND(NULL)))OR(NULL)))OR(v0.c2)) AS INTEGER) DESC, CASE CAST(v0.c3 AS TEXT)  WHEN 0.9525240932264114 THEN (~ (vt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((((((((v0.c4)AND(vt0.c0)))AND(NULL)))OR(NULL)))OR(v0.c2)) AS INTEGER) DESC, CASE CAST(v0.c3 AS TEXT)  WHEN 0.9525240932264114 THEN (~ (vt0.c2)) END  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (vt0.c2) ORDER BY CAST(((((((((v0.c4)AND(vt0.c0)))AND(NULL)))OR(NULL)))OR(v0.c2)) AS INTEGER) DESC, CASE CAST(v0.c3 AS TEXT)  WHEN 0.9525240932264114 THEN (~ (vt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((((((((v0.c4)AND(vt0.c0)))AND(NULL)))OR(NULL)))OR(v0.c2)) AS INTEGER) DESC, CASE CAST(v0.c3 AS TEXT)  WHEN 0.9525240932264114 THEN (~ (vt0.c2)) END  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (vt0.c2) ORDER BY CAST(((((((((v0.c4)AND(vt0.c0)))AND(NULL)))OR(NULL)))OR(v0.c2)) AS INTEGER) DESC, CASE CAST(v0.c3 AS TEXT)  WHEN 0.9525240932264114 THEN (~ (vt0.c2)) END  NULLS FIRST;
SELECT * FROM vt0 INNER JOIN v0 ON (- ((v0.c1 IN ()))) WHERE ((((v0.c4 IN ())) NOT BETWEEN ((((v0.c2))<=(('248783952')))) AND (CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((v0.c4 IN ())) NOT BETWEEN ((((v0.c2))<=(('248783952')))) AND (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (- ((v0.c1 IN ()))));
SELECT * FROM vt0 INNER JOIN v0 ON (- ((v0.c1 IN ()))) WHERE ((((v0.c4 IN ())) NOT BETWEEN ((((v0.c2))<=(('248783952')))) AND (CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((v0.c4 IN ())) NOT BETWEEN ((((v0.c2))<=(('248783952')))) AND (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (- ((v0.c1 IN ()))));
SELECT * FROM vt0 INNER JOIN v0 ON (- ((v0.c1 IN ()))) WHERE ((((v0.c4 IN ())) NOT BETWEEN ((((v0.c2))<=(('248783952')))) AND (CAST(v0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS REAL)) ORDER BY CASE ABS(DISTINCT vt0.c0)  WHEN vt0.c2 THEN ((vt0.c0)<<(vt0.c2)) END  NULLS FIRST, LAST_INSERT_ROWID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CASE ABS(DISTINCT vt0.c0)  WHEN vt0.c2 THEN ((vt0.c0)<<(vt0.c2)) END  NULLS FIRST, LAST_INSERT_ROWID()  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS REAL)) ORDER BY CASE ABS(DISTINCT vt0.c0)  WHEN vt0.c2 THEN ((vt0.c0)<<(vt0.c2)) END  NULLS FIRST, LAST_INSERT_ROWID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CASE ABS(DISTINCT vt0.c0)  WHEN vt0.c2 THEN ((vt0.c0)<<(vt0.c2)) END  NULLS FIRST, LAST_INSERT_ROWID()  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS REAL)) ORDER BY CASE ABS(DISTINCT vt0.c0)  WHEN vt0.c2 THEN ((vt0.c0)<<(vt0.c2)) END  NULLS FIRST, LAST_INSERT_ROWID()  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE ((((NOT (vt0.c2)))OR(0xffffffffb0d773b7)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c2)))OR(0Xffffffffb0d773b7))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((NOT (vt0.c2)))OR(0xffffffffb0d773b7)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c2)))OR(0Xffffffffb0d773b7))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((NOT (vt0.c2)))OR(0xffffffffb0d773b7)));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1)<=(v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)<=(v0.c1)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1)<=(v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)<=(v0.c1)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1)<=(v0.c1)) IN ()));
SELECT * FROM v0 WHERE ((v0.c3 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c3 COLLATE RTRIM IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((v0.c3 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c3 COLLATE RTRIM IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((v0.c3 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((v0.c1 COLLATE RTRIM)||(((v0.c1)&(vt0.c2)))) WHERE (((((((((v0.c3)AND(vt0.c0)))OR(vt0.c0)))AND((((v0.c4, v0.c3, NULL)) BETWEEN ((v0.c2, v0.c3, v0.c0)) AND ((v0.c4, vt0.c2, vt0.c0))))))AND((((v0.c2)) BETWEEN ((vt0.c1)) AND ((0.4066739998087813))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c3)AND(vt0.c0)))OR(vt0.c0)))AND((((v0.c4, v0.c3, NULL)) BETWEEN ((v0.c2, v0.c3, v0.c0)) AND ((v0.c4, vt0.c2, vt0.c0))))))AND((((v0.c2)) BETWEEN ((vt0.c1)) AND ((0.4066739998087813)))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((v0.c1 COLLATE RTRIM)||(((v0.c1)&(vt0.c2)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((v0.c1 COLLATE RTRIM)||(((v0.c1)&(vt0.c2)))) WHERE (((((((((v0.c3)AND(vt0.c0)))OR(vt0.c0)))AND((((v0.c4, v0.c3, NULL)) BETWEEN ((v0.c2, v0.c3, v0.c0)) AND ((v0.c4, vt0.c2, vt0.c0))))))AND((((v0.c2)) BETWEEN ((vt0.c1)) AND ((0.4066739998087813))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c3)AND(vt0.c0)))OR(vt0.c0)))AND((((v0.c4, v0.c3, NULL)) BETWEEN ((v0.c2, v0.c3, v0.c0)) AND ((v0.c4, vt0.c2, vt0.c0))))))AND((((v0.c2)) BETWEEN ((vt0.c1)) AND ((0.4066739998087813)))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((v0.c1 COLLATE RTRIM)||(((v0.c1)&(vt0.c2)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((v0.c1 COLLATE RTRIM)||(((v0.c1)&(vt0.c2)))) WHERE (((((((((v0.c3)AND(vt0.c0)))OR(vt0.c0)))AND((((v0.c4, v0.c3, NULL)) BETWEEN ((v0.c2, v0.c3, v0.c0)) AND ((v0.c4, vt0.c2, vt0.c0))))))AND((((v0.c2)) BETWEEN ((vt0.c1)) AND ((0.4066739998087813))))));
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE ((v0.c1)%(v0.c0))  WHEN v0.c2 COLLATE BINARY THEN v0.c1 COLLATE NOCASE ELSE ((vt0.c1)/(v0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c1)%(v0.c0))  WHEN v0.c2 COLLATE BINARY THEN v0.c1 COLLATE NOCASE ELSE ((vt0.c1)/(v0.c1)) END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE ((v0.c1)%(v0.c0))  WHEN v0.c2 COLLATE BINARY THEN v0.c1 COLLATE NOCASE ELSE ((vt0.c1)/(v0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c1)%(v0.c0))  WHEN v0.c2 COLLATE BINARY THEN v0.c1 COLLATE NOCASE ELSE ((vt0.c1)/(v0.c1)) END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE ((v0.c1)%(v0.c0))  WHEN v0.c2 COLLATE BINARY THEN v0.c1 COLLATE NOCASE ELSE ((vt0.c1)/(v0.c1)) END);
SELECT * FROM v0 WHERE ((((((v0.c4) NOT BETWEEN (v0.c0) AND (v0.c1))))<>((((v0.c0)||(v0.c2)))))) ORDER BY HEX(((((v0.c2)AND(v0.c1)))OR(v0.c1)))  NULLS FIRST, ((CASE x''  WHEN v0.c0 THEN v0.c4 END) BETWEEN (((v0.c0) NOT BETWEEN (v0.c4) AND (v0.c1))) AND (((x'')OR(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c4) NOT BETWEEN (v0.c0) AND (v0.c1))))<>((((v0.c0)||(v0.c2)))))) IS TRUE)  as count FROM v0 ORDER BY HEX(((((v0.c2)AND(v0.c1)))OR(v0.c1)))  NULLS FIRST, ((CASE x''  WHEN v0.c0 THEN v0.c4 END) BETWEEN (((v0.c0) NOT BETWEEN (v0.c4) AND (v0.c1))) AND (((x'')OR(v0.c1))))  NULLS LAST);
SELECT * FROM v0 WHERE ((((((v0.c4) NOT BETWEEN (v0.c0) AND (v0.c1))))<>((((v0.c0)||(v0.c2)))))) ORDER BY HEX(((((v0.c2)AND(v0.c1)))OR(v0.c1)))  NULLS FIRST, ((CASE x''  WHEN v0.c0 THEN v0.c4 END) BETWEEN (((v0.c0) NOT BETWEEN (v0.c4) AND (v0.c1))) AND (((x'')OR(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c4) NOT BETWEEN (v0.c0) AND (v0.c1))))<>((((v0.c0)||(v0.c2)))))) IS TRUE)  as count FROM v0 ORDER BY HEX(((((v0.c2)AND(v0.c1)))OR(v0.c1)))  NULLS FIRST, ((CASE x''  WHEN v0.c0 THEN v0.c4 END) BETWEEN (((v0.c0) NOT BETWEEN (v0.c4) AND (v0.c1))) AND (((x'')OR(v0.c1))))  NULLS LAST);
SELECT * FROM v0 WHERE ((((((v0.c4) NOT BETWEEN (v0.c0) AND (v0.c1))))<>((((v0.c0)||(v0.c2)))))) ORDER BY HEX(((((v0.c2)AND(v0.c1)))OR(v0.c1)))  NULLS FIRST, ((CASE x''  WHEN v0.c0 THEN v0.c4 END) BETWEEN (((v0.c0) NOT BETWEEN (v0.c4) AND (v0.c1))) AND (((x'')OR(v0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c3) NOT BETWEEN (v0.c4) AND (v0.c2))))!=(((-1328057417 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c3) NOT BETWEEN (v0.c4) AND (v0.c2))))!=(((-1328057417 IN ()))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c3) NOT BETWEEN (v0.c4) AND (v0.c2))))!=(((-1328057417 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c3) NOT BETWEEN (v0.c4) AND (v0.c2))))!=(((-1328057417 IN ()))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c3) NOT BETWEEN (v0.c4) AND (v0.c2))))!=(((-1328057417 IN ())))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((NOT (v0.c4)))AND(((vt0.c1)>(v0.c1)))))AND((+ (v0.c3))))) ORDER BY ((((((v0.c0)AND(vt0.c1)))AND(v0.c3)))+(vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, LAST_INSERT_ROWID() ASC  NULLS FIRST, (NOT (x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NOT (v0.c4)))AND(((vt0.c1)>(v0.c1)))))AND((+ (v0.c3))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c0)AND(vt0.c1)))AND(v0.c3)))+(vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, LAST_INSERT_ROWID() ASC  NULLS FIRST, (NOT (x''))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((NOT (v0.c4)))AND(((vt0.c1)>(v0.c1)))))AND((+ (v0.c3))))) ORDER BY ((((((v0.c0)AND(vt0.c1)))AND(v0.c3)))+(vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, LAST_INSERT_ROWID() ASC  NULLS FIRST, (NOT (x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NOT (v0.c4)))AND(((vt0.c1)>(v0.c1)))))AND((+ (v0.c3))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c0)AND(vt0.c1)))AND(v0.c3)))+(vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, LAST_INSERT_ROWID() ASC  NULLS FIRST, (NOT (x''))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((NOT (v0.c4)))AND(((vt0.c1)>(v0.c1)))))AND((+ (v0.c3))))) ORDER BY ((((((v0.c0)AND(vt0.c1)))AND(v0.c3)))+(vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, LAST_INSERT_ROWID() ASC  NULLS FIRST, (NOT (x''))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM)+((vt0.c2 IN ())))) ORDER BY vt0.c2 COLLATE BINARY, ((((vt0.c2)LIKE(vt0.c1)))<<(LIKELY(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM)+((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2 COLLATE BINARY, ((((vt0.c2)LIKE(vt0.c1)))<<(LIKELY(vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM)+((vt0.c2 IN ())))) ORDER BY vt0.c2 COLLATE BINARY, ((((vt0.c2)LIKE(vt0.c1)))<<(LIKELY(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM)+((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2 COLLATE BINARY, ((((vt0.c2)LIKE(vt0.c1)))<<(LIKELY(vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM)+((vt0.c2 IN ())))) ORDER BY vt0.c2 COLLATE BINARY, ((((vt0.c2)LIKE(vt0.c1)))<<(LIKELY(vt0.c1)));
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c0)IS(LIKELY(DISTINCT vt0.c0)))) ORDER BY CAST((((vt0.c0, v0.c1, vt0.c1))==((v0.c1, 0.32734860605230287, vt0.c0))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS(LIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((((vt0.c0, v0.c1, vt0.c1))=((v0.c1, 0.32734860605230287, vt0.c0))) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c0)IS(LIKELY(DISTINCT vt0.c0)))) ORDER BY CAST((((vt0.c0, v0.c1, vt0.c1))==((v0.c1, 0.32734860605230287, vt0.c0))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS(LIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((((vt0.c0, v0.c1, vt0.c1))=((v0.c1, 0.32734860605230287, vt0.c0))) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c0)IS(LIKELY(DISTINCT vt0.c0)))) ORDER BY CAST((((vt0.c0, v0.c1, vt0.c1))==((v0.c1, 0.32734860605230287, vt0.c0))) AS NUMERIC)  NULLS LAST;
SELECT ALL * FROM vt0 CROSS JOIN v0 ON CASE WHEN ((v0.c3)==(x'5474')) THEN (((v0.c1, vt0.c1, v0.c3)) NOT BETWEEN ((vt0.c2, vt0.c0, 'V\nqhe')) AND ((v0.c3, vt0.c2, v0.c3))) WHEN 0.3478128426281575 THEN ((((vt0.c2)AND(v0.c1)))OR(vt0.c2)) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) THEN LOWER(vt0.c2) END WHERE (CAST(((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CASE WHEN ((v0.c3)==(x'5474')) THEN (((v0.c1, vt0.c1, v0.c3)) NOT BETWEEN ((vt0.c2, vt0.c0, 'V\nqhe')) AND ((v0.c3, vt0.c2, v0.c3))) WHEN 0.3478128426281575 THEN ((((vt0.c2)AND(v0.c1)))OR(vt0.c2)) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) THEN LOWER(vt0.c2) END);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON CASE WHEN ((v0.c3)==(x'5474')) THEN (((v0.c1, vt0.c1, v0.c3)) NOT BETWEEN ((vt0.c2, vt0.c0, 'V\nqhe')) AND ((v0.c3, vt0.c2, v0.c3))) WHEN 0.3478128426281575 THEN ((((vt0.c2)AND(v0.c1)))OR(vt0.c2)) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) THEN LOWER(vt0.c2) END WHERE (CAST(((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CASE WHEN ((v0.c3)==(x'5474')) THEN (((v0.c1, vt0.c1, v0.c3)) NOT BETWEEN ((vt0.c2, vt0.c0, 'V\nqhe')) AND ((v0.c3, vt0.c2, v0.c3))) WHEN 0.3478128426281575 THEN ((((vt0.c2)AND(v0.c1)))OR(vt0.c2)) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) THEN LOWER(vt0.c2) END);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON CASE WHEN ((v0.c3)==(x'5474')) THEN (((v0.c1, vt0.c1, v0.c3)) NOT BETWEEN ((vt0.c2, vt0.c0, 'V\nqhe')) AND ((v0.c3, vt0.c2, v0.c3))) WHEN 0.3478128426281575 THEN ((((vt0.c2)AND(v0.c1)))OR(vt0.c2)) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) THEN LOWER(vt0.c2) END WHERE (CAST(((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER));
SELECT ALL * FROM v0 WHERE (v0.c4) ORDER BY CASE ((v0.c1)%(v0.c0))  WHEN ((v0.c0)LIKE(v0.c4)) THEN (+ (v0.c2)) ELSE ((v0.c2) NOT BETWEEN (v0.c0) AND (0.48620085377819244)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c4) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c1)%(v0.c0))  WHEN ((v0.c0)LIKE(v0.c4)) THEN (+ (v0.c2)) ELSE ((v0.c2) NOT BETWEEN (v0.c0) AND (0.48620085377819244)) END DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (v0.c4) ORDER BY CASE ((v0.c1)%(v0.c0))  WHEN ((v0.c0)LIKE(v0.c4)) THEN (+ (v0.c2)) ELSE ((v0.c2) NOT BETWEEN (v0.c0) AND (0.48620085377819244)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c4) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c1)%(v0.c0))  WHEN ((v0.c0)LIKE(v0.c4)) THEN (+ (v0.c2)) ELSE ((v0.c2) NOT BETWEEN (v0.c0) AND (0.48620085377819244)) END DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (v0.c4) ORDER BY CASE ((v0.c1)%(v0.c0))  WHEN ((v0.c0)LIKE(v0.c4)) THEN (+ (v0.c2)) ELSE ((v0.c2) NOT BETWEEN (v0.c0) AND (0.48620085377819244)) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1, vt0.c2, NULL)) BETWEEN ((vt0.c1, x'8392', vt0.c2)) AND ((vt0.c0, vt0.c1, vt0.c2))))%(((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt0.c2, NULL)) BETWEEN ((vt0.c1, x'8392', vt0.c2)) AND ((vt0.c0, vt0.c1, vt0.c2))))%(((((vt0.c2)AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1, vt0.c2, NULL)) BETWEEN ((vt0.c1, x'8392', vt0.c2)) AND ((vt0.c0, vt0.c1, vt0.c2))))%(((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt0.c2, NULL)) BETWEEN ((vt0.c1, x'8392', vt0.c2)) AND ((vt0.c0, vt0.c1, vt0.c2))))%(((((vt0.c2)AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1, vt0.c2, NULL)) BETWEEN ((vt0.c1, x'8392', vt0.c2)) AND ((vt0.c0, vt0.c1, vt0.c2))))%(((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((((-5.8720309E7) IS TRUE))OR((- (v0.c0)))))OR(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 END)) WHERE ((((v0.c2 IN ()))OR((NOT (v0.c3))))) ORDER BY CASE WHEN v0.c3 THEN v0.c0 WHEN vt0.c2 THEN v0.c0 WHEN v0.c3 THEN v0.c4 END COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c2 IN ()))OR((NOT (v0.c3))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((((-5.8720309E7) IS TRUE))OR((- (v0.c0)))))OR(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 END)) ORDER BY CASE WHEN v0.c3 THEN v0.c0 WHEN vt0.c2 THEN v0.c0 WHEN v0.c3 THEN v0.c4 END COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((((-5.8720309E7) IS TRUE))OR((- (v0.c0)))))OR(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 END)) WHERE ((((v0.c2 IN ()))OR((NOT (v0.c3))))) ORDER BY CASE WHEN v0.c3 THEN v0.c0 WHEN vt0.c2 THEN v0.c0 WHEN v0.c3 THEN v0.c4 END COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c2 IN ()))OR((NOT (v0.c3))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((((-5.8720309E7) IS TRUE))OR((- (v0.c0)))))OR(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 END)) ORDER BY CASE WHEN v0.c3 THEN v0.c0 WHEN vt0.c2 THEN v0.c0 WHEN v0.c3 THEN v0.c4 END COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((((-5.8720309E7) IS TRUE))OR((- (v0.c0)))))OR(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 END)) WHERE ((((v0.c2 IN ()))OR((NOT (v0.c3))))) ORDER BY CASE WHEN v0.c3 THEN v0.c0 WHEN vt0.c2 THEN v0.c0 WHEN v0.c3 THEN v0.c4 END COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c2)OR(COALESCE(v0.c4, v0.c1))))AND(((v0.c4)||('407437007')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)OR(COALESCE(v0.c4, v0.c1))))AND(((v0.c4)||('407437007'))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c2)OR(COALESCE(v0.c4, v0.c1))))AND(((v0.c4)||('407437007')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)OR(COALESCE(v0.c4, v0.c1))))AND(((v0.c4)||('407437007'))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c2)OR(COALESCE(v0.c4, v0.c1))))AND(((v0.c4)||('407437007')))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c3) IS TRUE) IN ())) ORDER BY ((((((((vt0.c2)AND(vt0.c0)))AND(v0.c0)))OR((- (vt0.c1)))))OR(TRIM(0.651043144822387, v0.c3))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c3) IS TRUE) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((vt0.c2)AND(vt0.c0)))AND(v0.c0)))OR((- (vt0.c1)))))OR(TRIM(0.651043144822387, v0.c3))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c3) IS TRUE) IN ())) ORDER BY ((((((((vt0.c2)AND(vt0.c0)))AND(v0.c0)))OR((- (vt0.c1)))))OR(TRIM(0.651043144822387, v0.c3))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c3) IS TRUE) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((vt0.c2)AND(vt0.c0)))AND(v0.c0)))OR((- (vt0.c1)))))OR(TRIM(0.651043144822387, v0.c3))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c3) IS TRUE) IN ())) ORDER BY ((((((((vt0.c2)AND(vt0.c0)))AND(v0.c0)))OR((- (vt0.c1)))))OR(TRIM(0.651043144822387, v0.c3))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((CAST(v0.c3 AS REAL)) BETWEEN (PRINTF(v0.c2)) AND ((v0.c1 IN (vt0.c0, v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c3 AS REAL)) BETWEEN (PRINTF(v0.c2)) AND ((v0.c1 IN (vt0.c0, v0.c1))))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((CAST(v0.c3 AS REAL)) BETWEEN (PRINTF(v0.c2)) AND ((v0.c1 IN (vt0.c0, v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c3 AS REAL)) BETWEEN (PRINTF(v0.c2)) AND ((v0.c1 IN (vt0.c0, v0.c1))))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((CAST(v0.c3 AS REAL)) BETWEEN (PRINTF(v0.c2)) AND ((v0.c1 IN (vt0.c0, v0.c1)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((v0.c0) BETWEEN ((v0.c2 IN ())) AND ((v0.c1 IN ()))) WHERE ((((vt0.c1 IN ())) BETWEEN (('471247870' IN ())) AND (((((NULL)AND(vt0.c0)))OR(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) BETWEEN (('471247870' IN ())) AND (((((NULL)AND(vt0.c0)))OR(v0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((v0.c0) BETWEEN ((v0.c2 IN ())) AND ((v0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((v0.c0) BETWEEN ((v0.c2 IN ())) AND ((v0.c1 IN ()))) WHERE ((((vt0.c1 IN ())) BETWEEN (('471247870' IN ())) AND (((((NULL)AND(vt0.c0)))OR(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) BETWEEN (('471247870' IN ())) AND (((((NULL)AND(vt0.c0)))OR(v0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((v0.c0) BETWEEN ((v0.c2 IN ())) AND ((v0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((v0.c0) BETWEEN ((v0.c2 IN ())) AND ((v0.c1 IN ()))) WHERE ((((vt0.c1 IN ())) BETWEEN (('471247870' IN ())) AND (((((NULL)AND(vt0.c0)))OR(v0.c2)))));
SELECT ALL * FROM vt0, v0 WHERE ((((((((((v0.c3)OR(v0.c3)))OR(v0.c2)))AND(v0.c0)))AND(vt0.c2)) IN ())) ORDER BY ((((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c4)))OR(v0.c3)))AND(v0.c3)))OR(v0.c1)))AND(0.012195455869688177)))AND(((v0.c3) IS FALSE))))AND(vt0.c0)) DESC, CASE WHEN (NOT (v0.c0)) THEN (vt0.c1 IN ()) ELSE (vt0.c1 IN ()) END ASC  NULLS FIRST, TRIM(DISTINCT ((((NULL)AND(vt0.c2)))AND(v0.c0)), ((v0.c3)<(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((v0.c3)OR(v0.c3)))OR(v0.c2)))AND(v0.c0)))AND(vt0.c2)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c4)))OR(v0.c3)))AND(v0.c3)))OR(v0.c1)))AND(0.012195455869688177)))AND(((v0.c3) IS FALSE))))AND(vt0.c0)) DESC, CASE WHEN (NOT (v0.c0)) THEN (vt0.c1 IN ()) ELSE (vt0.c1 IN ()) END ASC  NULLS FIRST, TRIM(DISTINCT ((((NULL)AND(vt0.c2)))AND(v0.c0)), ((v0.c3)<(vt0.c1))));
SELECT ALL * FROM vt0, v0 WHERE ((((((((((v0.c3)OR(v0.c3)))OR(v0.c2)))AND(v0.c0)))AND(vt0.c2)) IN ())) ORDER BY ((((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c4)))OR(v0.c3)))AND(v0.c3)))OR(v0.c1)))AND(0.012195455869688177)))AND(((v0.c3) IS FALSE))))AND(vt0.c0)) DESC, CASE WHEN (NOT (v0.c0)) THEN (vt0.c1 IN ()) ELSE (vt0.c1 IN ()) END ASC  NULLS FIRST, TRIM(DISTINCT ((((NULL)AND(vt0.c2)))AND(v0.c0)), ((v0.c3)<(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((v0.c3)OR(v0.c3)))OR(v0.c2)))AND(v0.c0)))AND(vt0.c2)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c4)))OR(v0.c3)))AND(v0.c3)))OR(v0.c1)))AND(0.012195455869688177)))AND(((v0.c3) IS FALSE))))AND(vt0.c0)) DESC, CASE WHEN (NOT (v0.c0)) THEN (vt0.c1 IN ()) ELSE (vt0.c1 IN ()) END ASC  NULLS FIRST, TRIM(DISTINCT ((((NULL)AND(vt0.c2)))AND(v0.c0)), ((v0.c3)<(vt0.c1))));
SELECT ALL * FROM vt0, v0 WHERE ((((((((((v0.c3)OR(v0.c3)))OR(v0.c2)))AND(v0.c0)))AND(vt0.c2)) IN ())) ORDER BY ((((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c4)))OR(v0.c3)))AND(v0.c3)))OR(v0.c1)))AND(0.012195455869688177)))AND(((v0.c3) IS FALSE))))AND(vt0.c0)) DESC, CASE WHEN (NOT (v0.c0)) THEN (vt0.c1 IN ()) ELSE (vt0.c1 IN ()) END ASC  NULLS FIRST, TRIM(DISTINCT ((((NULL)AND(vt0.c2)))AND(v0.c0)), ((v0.c3)<(vt0.c1)));
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((vt0.c2)<=(v0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c2)<=(v0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((vt0.c2)<=(v0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c2)<=(v0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((vt0.c2)<=(v0.c1)) AS REAL));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON CASE v0.c1 COLLATE NOCASE  WHEN CAST(v0.c0 AS TEXT) THEN (vt0.c1 IN ()) WHEN (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c3))) THEN NULL WHEN ((v0.c4)/(v0.c3)) THEN (((v0.c0, v0.c3, v0.c0))!=((vt0.c0, v0.c2, v0.c4))) WHEN CASE WHEN v0.c3 THEN v0.c4 ELSE v0.c1 END THEN ((vt0.c0)<<(vt0.c2)) WHEN CAST(v0.c2 AS TEXT) THEN 0.9768076811102444 END WHERE ((((vt0.c2)||(v0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)||(v0.c3)) IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CASE v0.c1 COLLATE NOCASE  WHEN CAST(v0.c0 AS TEXT) THEN (vt0.c1 IN ()) WHEN (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c3))) THEN NULL WHEN ((v0.c4)/(v0.c3)) THEN (((v0.c0, v0.c3, v0.c0))<>((vt0.c0, v0.c2, v0.c4))) WHEN CASE WHEN v0.c3 THEN v0.c4 ELSE v0.c1 END THEN ((vt0.c0)<<(vt0.c2)) WHEN CAST(v0.c2 AS TEXT) THEN 0.9768076811102444 END);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON CASE v0.c1 COLLATE NOCASE  WHEN CAST(v0.c0 AS TEXT) THEN (vt0.c1 IN ()) WHEN (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c3))) THEN NULL WHEN ((v0.c4)/(v0.c3)) THEN (((v0.c0, v0.c3, v0.c0))!=((vt0.c0, v0.c2, v0.c4))) WHEN CASE WHEN v0.c3 THEN v0.c4 ELSE v0.c1 END THEN ((vt0.c0)<<(vt0.c2)) WHEN CAST(v0.c2 AS TEXT) THEN 0.9768076811102444 END WHERE ((((vt0.c2)||(v0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)||(v0.c3)) IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CASE v0.c1 COLLATE NOCASE  WHEN CAST(v0.c0 AS TEXT) THEN (vt0.c1 IN ()) WHEN (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c3))) THEN NULL WHEN ((v0.c4)/(v0.c3)) THEN (((v0.c0, v0.c3, v0.c0))<>((vt0.c0, v0.c2, v0.c4))) WHEN CASE WHEN v0.c3 THEN v0.c4 ELSE v0.c1 END THEN ((vt0.c0)<<(vt0.c2)) WHEN CAST(v0.c2 AS TEXT) THEN 0.9768076811102444 END);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON CASE v0.c1 COLLATE NOCASE  WHEN CAST(v0.c0 AS TEXT) THEN (vt0.c1 IN ()) WHEN (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c3))) THEN NULL WHEN ((v0.c4)/(v0.c3)) THEN (((v0.c0, v0.c3, v0.c0))!=((vt0.c0, v0.c2, v0.c4))) WHEN CASE WHEN v0.c3 THEN v0.c4 ELSE v0.c1 END THEN ((vt0.c0)<<(vt0.c2)) WHEN CAST(v0.c2 AS TEXT) THEN 0.9768076811102444 END WHERE ((((vt0.c2)||(v0.c3)) IN ()));
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((v0.c4) IS FALSE) THEN 0.6226775234655143 END) ORDER BY CAST(((v0.c3) BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c4) IS FALSE) THEN 0.6226775234655143 END) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((v0.c3) BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER));
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((v0.c4) IS FALSE) THEN 0.6226775234655143 END) ORDER BY CAST(((v0.c3) BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c4) IS FALSE) THEN 0.6226775234655143 END) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((v0.c3) BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER));
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((v0.c4) IS FALSE) THEN 0.6226775234655143 END) ORDER BY CAST(((v0.c3) BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c3, NULL, v0.c4, CAST(v0.c3 AS BLOB), v0.c0 COLLATE RTRIM))<>((((v0.c3)IS(v0.c1)), v0.c1 COLLATE RTRIM, ((v0.c2)OR(v0.c0)), ((v0.c2)<=(v0.c2)), ((v0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c3, NULL, v0.c4, CAST(v0.c3 AS BLOB), v0.c0 COLLATE RTRIM))!=((((v0.c3)IS(v0.c1)), v0.c1 COLLATE RTRIM, ((v0.c2)OR(v0.c0)), ((v0.c2)<=(v0.c2)), ((v0.c0) IS TRUE))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c3, NULL, v0.c4, CAST(v0.c3 AS BLOB), v0.c0 COLLATE RTRIM))<>((((v0.c3)IS(v0.c1)), v0.c1 COLLATE RTRIM, ((v0.c2)OR(v0.c0)), ((v0.c2)<=(v0.c2)), ((v0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c3, NULL, v0.c4, CAST(v0.c3 AS BLOB), v0.c0 COLLATE RTRIM))!=((((v0.c3)IS(v0.c1)), v0.c1 COLLATE RTRIM, ((v0.c2)OR(v0.c0)), ((v0.c2)<=(v0.c2)), ((v0.c0) IS TRUE))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c3, NULL, v0.c4, CAST(v0.c3 AS BLOB), v0.c0 COLLATE RTRIM))<>((((v0.c3)IS(v0.c1)), v0.c1 COLLATE RTRIM, ((v0.c2)OR(v0.c0)), ((v0.c2)<=(v0.c2)), ((v0.c0) IS TRUE)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT * FROM v0, vt0 WHERE (((((((((((v0.c4) NOT BETWEEN (vt0.c2) AND (x'')))AND(NULL)))AND(CAST('' AS TEXT))))AND(((0x2e34549e)<=(v0.c0)))))AND(((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c4) NOT BETWEEN (vt0.c2) AND (x'')))AND(NULL)))AND(CAST('' AS TEXT))))AND(((0X2e34549e)<=(v0.c0)))))AND(((((vt0.c1)OR(vt0.c1)))OR(vt0.c2))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((((((((v0.c4) NOT BETWEEN (vt0.c2) AND (x'')))AND(NULL)))AND(CAST('' AS TEXT))))AND(((0x2e34549e)<=(v0.c0)))))AND(((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c4) NOT BETWEEN (vt0.c2) AND (x'')))AND(NULL)))AND(CAST('' AS TEXT))))AND(((0X2e34549e)<=(v0.c0)))))AND(((((vt0.c1)OR(vt0.c1)))OR(vt0.c2))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((((((((v0.c4) NOT BETWEEN (vt0.c2) AND (x'')))AND(NULL)))AND(CAST('' AS TEXT))))AND(((0x2e34549e)<=(v0.c0)))))AND(((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))));
SELECT ALL * FROM v0, vt0 WHERE (CAST(((((v0.c1)OR(vt0.c0)))OR(v0.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c1)OR(vt0.c0)))OR(v0.c3)) AS BLOB)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CAST(((((v0.c1)OR(vt0.c0)))OR(v0.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c1)OR(vt0.c0)))OR(v0.c3)) AS BLOB)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CAST(((((v0.c1)OR(vt0.c0)))OR(v0.c3)) AS BLOB));
SELECT ALL * FROM vt0, v0 WHERE (CASE ((v0.c0)<(v0.c1))  WHEN ((v0.c3) NOT BETWEEN (v0.c1) AND (v0.c3)) THEN CASE v0.c3  WHEN v0.c3 THEN vt0.c1 ELSE vt0.c0 END WHEN ((((v0.c3)AND(v0.c2)))OR(v0.c3)) THEN CASE WHEN v0.c3 THEN vt0.c0 ELSE v0.c2 END WHEN ((((((((((((v0.c4)OR(v0.c2)))OR(v0.c3)))AND(v0.c0)))AND(v0.c4)))AND(vt0.c2)))AND(vt0.c2)) THEN ((((((((v0.c0)OR(v0.c2)))AND('oH쬹]\n')))AND(v0.c0)))AND(v0.c4)) END) ORDER BY (- (((vt0.c1)%(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)<(v0.c1))  WHEN ((v0.c3) NOT BETWEEN (v0.c1) AND (v0.c3)) THEN CASE v0.c3  WHEN v0.c3 THEN vt0.c1 ELSE vt0.c0 END WHEN ((((v0.c3)AND(v0.c2)))OR(v0.c3)) THEN CASE WHEN v0.c3 THEN vt0.c0 ELSE v0.c2 END WHEN ((((((((((((v0.c4)OR(v0.c2)))OR(v0.c3)))AND(v0.c0)))AND(v0.c4)))AND(vt0.c2)))AND(vt0.c2)) THEN ((((((((v0.c0)OR(v0.c2)))AND('oH쬹]\n')))AND(v0.c0)))AND(v0.c4)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (((vt0.c1)%(vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (CASE ((v0.c0)<(v0.c1))  WHEN ((v0.c3) NOT BETWEEN (v0.c1) AND (v0.c3)) THEN CASE v0.c3  WHEN v0.c3 THEN vt0.c1 ELSE vt0.c0 END WHEN ((((v0.c3)AND(v0.c2)))OR(v0.c3)) THEN CASE WHEN v0.c3 THEN vt0.c0 ELSE v0.c2 END WHEN ((((((((((((v0.c4)OR(v0.c2)))OR(v0.c3)))AND(v0.c0)))AND(v0.c4)))AND(vt0.c2)))AND(vt0.c2)) THEN ((((((((v0.c0)OR(v0.c2)))AND('oH쬹]\n')))AND(v0.c0)))AND(v0.c4)) END) ORDER BY (- (((vt0.c1)%(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)<(v0.c1))  WHEN ((v0.c3) NOT BETWEEN (v0.c1) AND (v0.c3)) THEN CASE v0.c3  WHEN v0.c3 THEN vt0.c1 ELSE vt0.c0 END WHEN ((((v0.c3)AND(v0.c2)))OR(v0.c3)) THEN CASE WHEN v0.c3 THEN vt0.c0 ELSE v0.c2 END WHEN ((((((((((((v0.c4)OR(v0.c2)))OR(v0.c3)))AND(v0.c0)))AND(v0.c4)))AND(vt0.c2)))AND(vt0.c2)) THEN ((((((((v0.c0)OR(v0.c2)))AND('oH쬹]\n')))AND(v0.c0)))AND(v0.c4)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (((vt0.c1)%(vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (CASE ((v0.c0)<(v0.c1))  WHEN ((v0.c3) NOT BETWEEN (v0.c1) AND (v0.c3)) THEN CASE v0.c3  WHEN v0.c3 THEN vt0.c1 ELSE vt0.c0 END WHEN ((((v0.c3)AND(v0.c2)))OR(v0.c3)) THEN CASE WHEN v0.c3 THEN vt0.c0 ELSE v0.c2 END WHEN ((((((((((((v0.c4)OR(v0.c2)))OR(v0.c3)))AND(v0.c0)))AND(v0.c4)))AND(vt0.c2)))AND(vt0.c2)) THEN ((((((((v0.c0)OR(v0.c2)))AND('oH쬹]\n')))AND(v0.c0)))AND(v0.c4)) END) ORDER BY (- (((vt0.c1)%(vt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c0))) BETWEEN (((vt0.c2) NOT NULL)) AND (((vt0.c2) NOT NULL)))) ORDER BY MIN(vt0.c1 COLLATE BINARY, ((vt0.c1)IS(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)>>(',dͫ|q'))) ASC, (((((vt0.c0))<=((x''))))<<(((0.504348065449033) BETWEEN (vt0.c2) AND (vt0.c0)))) ASC, vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c0))) BETWEEN (((vt0.c2) NOT NULL)) AND (((vt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY MIN(vt0.c1 COLLATE BINARY, ((vt0.c1)IS(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)>>(',dͫ|q'))) ASC, (((((vt0.c0))<=((x''))))<<(((0.504348065449033) BETWEEN (vt0.c2) AND (vt0.c0)))) ASC, vt0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c0))) BETWEEN (((vt0.c2) NOT NULL)) AND (((vt0.c2) NOT NULL)))) ORDER BY MIN(vt0.c1 COLLATE BINARY, ((vt0.c1)IS(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)>>(',dͫ|q'))) ASC, (((((vt0.c0))<=((x''))))<<(((0.504348065449033) BETWEEN (vt0.c2) AND (vt0.c0)))) ASC, vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c0))) BETWEEN (((vt0.c2) NOT NULL)) AND (((vt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY MIN(vt0.c1 COLLATE BINARY, ((vt0.c1)IS(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)>>(',dͫ|q'))) ASC, (((((vt0.c0))<=((x''))))<<(((0.504348065449033) BETWEEN (vt0.c2) AND (vt0.c0)))) ASC, vt0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c0))) BETWEEN (((vt0.c2) NOT NULL)) AND (((vt0.c2) NOT NULL)))) ORDER BY MIN(vt0.c1 COLLATE BINARY, ((vt0.c1)IS(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)>>(',dͫ|q'))) ASC, (((((vt0.c0))<=((x''))))<<(((0.504348065449033) BETWEEN (vt0.c2) AND (vt0.c0)))) ASC, vt0.c1 DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c4)OR(v0.c1)))OR(v0.c0))) IS TRUE)) ORDER BY ((CASE WHEN v0.c3 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN x'' THEN v0.c0 END)<=(v0.c2));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c4)OR(v0.c1)))OR(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c3 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN x'' THEN v0.c0 END)<=(v0.c2)));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c4)OR(v0.c1)))OR(v0.c0))) IS TRUE)) ORDER BY ((CASE WHEN v0.c3 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN x'' THEN v0.c0 END)<=(v0.c2));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c4)OR(v0.c1)))OR(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c3 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN x'' THEN v0.c0 END)<=(v0.c2)));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c4)OR(v0.c1)))OR(v0.c0))) IS TRUE)) ORDER BY ((CASE WHEN v0.c3 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN x'' THEN v0.c0 END)<=(v0.c2));
SELECT * FROM vt0 WHERE (((((vt0.c2))>=((vt0.c2))) IN (((vt0.c0)AND(vt0.c1))))) ORDER BY (~ (((vt0.c0)>=(vt0.c2))))  NULLS FIRST, IFNULL((vt0.c1 IN (vt0.c2)), '270926392') DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2))>=((vt0.c2))) IN (((vt0.c0)AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0)>=(vt0.c2))))  NULLS FIRST, IFNULL((vt0.c1 IN (vt0.c2)), '270926392') DESC);
SELECT * FROM vt0 WHERE (((((vt0.c2))>=((vt0.c2))) IN (((vt0.c0)AND(vt0.c1))))) ORDER BY (~ (((vt0.c0)>=(vt0.c2))))  NULLS FIRST, IFNULL((vt0.c1 IN (vt0.c2)), '270926392') DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2))>=((vt0.c2))) IN (((vt0.c0)AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0)>=(vt0.c2))))  NULLS FIRST, IFNULL((vt0.c1 IN (vt0.c2)), '270926392') DESC);
SELECT * FROM vt0 WHERE (((((vt0.c2))>=((vt0.c2))) IN (((vt0.c0)AND(vt0.c1))))) ORDER BY (~ (((vt0.c0)>=(vt0.c2))))  NULLS FIRST, IFNULL((vt0.c1 IN (vt0.c2)), '270926392') DESC;
SELECT * FROM vt0 WHERE (ABS(CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (ABS(CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (ABS(CAST(vt0.c0 AS BLOB)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c2 AS BLOB) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c2 AS BLOB) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c2 AS BLOB) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c2 AS BLOB) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c2 AS BLOB) COLLATE NOCASE COLLATE NOCASE);
SELECT COUNT(*) FROM v0, vt0 WHERE ('1084632327');
SELECT SUM(count) FROM (SELECT (('1084632327') IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ('1084632327');
SELECT SUM(count) FROM (SELECT (('1084632327') IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ('1084632327');
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c3)) BETWEEN (((v0.c2 IN ()))) AND ((v0.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((v0.c3)) BETWEEN (((v0.c2 IN ()))) AND ((v0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c3)) BETWEEN (((v0.c2 IN ()))) AND ((v0.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((v0.c3)) BETWEEN (((v0.c2 IN ()))) AND ((v0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c3)) BETWEEN (((v0.c2 IN ()))) AND ((v0.c2 COLLATE BINARY))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((CASE WHEN v0.c0 THEN vt0.c2 END)AND(0.366111641643335)))OR(((v0.c1) NOT BETWEEN (v0.c1) AND (vt0.c2)))))AND(((((v0.c4)OR(vt0.c1)))AND(vt0.c1)))))AND((v0.c2 IN (v0.c0, v0.c3)))) WHERE (0.4549656913525236) ORDER BY CAST((((v0.c3)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((0.4549656913525236) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((CASE WHEN v0.c0 THEN vt0.c2 END)AND(0.366111641643335)))OR(((v0.c1) NOT BETWEEN (v0.c1) AND (vt0.c2)))))AND(((((v0.c4)OR(vt0.c1)))AND(vt0.c1)))))AND((v0.c2 IN (v0.c0, v0.c3)))) ORDER BY CAST((((v0.c3)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))) AS REAL));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((CASE WHEN v0.c0 THEN vt0.c2 END)AND(0.366111641643335)))OR(((v0.c1) NOT BETWEEN (v0.c1) AND (vt0.c2)))))AND(((((v0.c4)OR(vt0.c1)))AND(vt0.c1)))))AND((v0.c2 IN (v0.c0, v0.c3)))) WHERE (0.4549656913525236) ORDER BY CAST((((v0.c3)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((0.4549656913525236) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((CASE WHEN v0.c0 THEN vt0.c2 END)AND(0.366111641643335)))OR(((v0.c1) NOT BETWEEN (v0.c1) AND (vt0.c2)))))AND(((((v0.c4)OR(vt0.c1)))AND(vt0.c1)))))AND((v0.c2 IN (v0.c0, v0.c3)))) ORDER BY CAST((((v0.c3)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))) AS REAL));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((CASE WHEN v0.c0 THEN vt0.c2 END)AND(0.366111641643335)))OR(((v0.c1) NOT BETWEEN (v0.c1) AND (vt0.c2)))))AND(((((v0.c4)OR(vt0.c1)))AND(vt0.c1)))))AND((v0.c2 IN (v0.c0, v0.c3)))) WHERE (0.4549656913525236) ORDER BY CAST((((v0.c3)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))) AS REAL);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT COUNT(*) FROM v0 WHERE (json_remove(json_patch(v0.c3, v0.c2), ((v0.c3) NOT NULL))) ORDER BY ((((v0.c0) IS FALSE)) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_remove(json_patch(v0.c3, v0.c2), ((v0.c3) NOT NULL))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS FALSE)) IS FALSE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (json_remove(json_patch(v0.c3, v0.c2), ((v0.c3) NOT NULL))) ORDER BY ((((v0.c0) IS FALSE)) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_remove(json_patch(v0.c3, v0.c2), ((v0.c3) NOT NULL))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS FALSE)) IS FALSE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (json_remove(json_patch(v0.c3, v0.c2), ((v0.c3) NOT NULL))) ORDER BY ((((v0.c0) IS FALSE)) IS FALSE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c1)<<(v0.c0)) AS NUMERIC)) ORDER BY ((((rtreenode(v0.c0, v0.c2))AND(CASE WHEN v0.c4 THEN v0.c3 WHEN v0.c4 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END)))AND(CASE WHEN v0.c1 THEN v0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1)<<(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY ((((rtreenode(v0.c0, v0.c2))AND(CASE WHEN v0.c4 THEN v0.c3 WHEN v0.c4 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END)))AND(CASE WHEN v0.c1 THEN v0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c1)<<(v0.c0)) AS NUMERIC)) ORDER BY ((((rtreenode(v0.c0, v0.c2))AND(CASE WHEN v0.c4 THEN v0.c3 WHEN v0.c4 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END)))AND(CASE WHEN v0.c1 THEN v0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1)<<(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY ((((rtreenode(v0.c0, v0.c2))AND(CASE WHEN v0.c4 THEN v0.c3 WHEN v0.c4 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END)))AND(CASE WHEN v0.c1 THEN v0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c1)<<(v0.c0)) AS NUMERIC)) ORDER BY ((((rtreenode(v0.c0, v0.c2))AND(CASE WHEN v0.c4 THEN v0.c3 WHEN v0.c4 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END)))AND(CASE WHEN v0.c1 THEN v0.c0 END)) DESC;
SELECT COUNT(*) FROM v0, vt0 WHERE (((CASE v0.c4  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN v0.c4 WHEN v0.c0 THEN v0.c1 ELSE vt0.c0 END)&(((((-1195061868)OR(vt0.c1)))OR(v0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c4  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN v0.c4 WHEN v0.c0 THEN v0.c1 ELSE vt0.c0 END)&(((((-1195061868)OR(vt0.c1)))OR(v0.c3))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((CASE v0.c4  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN v0.c4 WHEN v0.c0 THEN v0.c1 ELSE vt0.c0 END)&(((((-1195061868)OR(vt0.c1)))OR(v0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c4  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN v0.c4 WHEN v0.c0 THEN v0.c1 ELSE vt0.c0 END)&(((((-1195061868)OR(vt0.c1)))OR(v0.c3))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((CASE v0.c4  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN v0.c4 WHEN v0.c0 THEN v0.c1 ELSE vt0.c0 END)&(((((-1195061868)OR(vt0.c1)))OR(v0.c3)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON CAST(((((((((v0.c3)AND(v0.c4)))AND(v0.c1)))OR(v0.c4)))AND('2103288601')) AS BLOB) WHERE (((CAST(v0.c1 AS INTEGER))&((((v0.c4))<=((v0.c2)))))) ORDER BY 0.5976137166891025;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS INTEGER))&((((v0.c4))<=((v0.c2)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CAST(((((((((v0.c3)AND(v0.c4)))AND(v0.c1)))OR(v0.c4)))AND('2103288601')) AS BLOB) ORDER BY 0.5976137166891025);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON CAST(((((((((v0.c3)AND(v0.c4)))AND(v0.c1)))OR(v0.c4)))AND('2103288601')) AS BLOB) WHERE (((CAST(v0.c1 AS INTEGER))&((((v0.c4))<=((v0.c2)))))) ORDER BY 0.5976137166891025;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS INTEGER))&((((v0.c4))<=((v0.c2)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CAST(((((((((v0.c3)AND(v0.c4)))AND(v0.c1)))OR(v0.c4)))AND('2103288601')) AS BLOB) ORDER BY 0.5976137166891025);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON CAST(((((((((v0.c3)AND(v0.c4)))AND(v0.c1)))OR(v0.c4)))AND('2103288601')) AS BLOB) WHERE (((CAST(v0.c1 AS INTEGER))&((((v0.c4))<=((v0.c2)))))) ORDER BY 0.5976137166891025;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)AND(vt0.c0)))OR(vt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)AND(vt0.c0)))OR(vt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)AND(vt0.c0)))OR(vt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)AND(vt0.c0)))OR(vt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)AND(vt0.c0)))OR(vt0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c2) ISNULL) AS BLOB)) ORDER BY ((((vt0.c1)IS(vt0.c0)))>(((vt0.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)IS(vt0.c0)))>(((vt0.c2) IS TRUE))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c2) ISNULL) AS BLOB)) ORDER BY ((((vt0.c1)IS(vt0.c0)))>(((vt0.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)IS(vt0.c0)))>(((vt0.c2) IS TRUE))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c2) ISNULL) AS BLOB)) ORDER BY ((((vt0.c1)IS(vt0.c0)))>(((vt0.c2) IS TRUE)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((NULL)OR(vt0.c2)))OR(vt0.c1)))>(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((NULL)OR(vt0.c2)))OR(vt0.c1)))>(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((NULL)OR(vt0.c2)))OR(vt0.c1)))>(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((NULL)OR(vt0.c2)))OR(vt0.c1)))>(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((NULL)OR(vt0.c2)))OR(vt0.c1)))>(CAST(vt0.c0 AS NUMERIC))));
SELECT * FROM vt0 WHERE (CAST(vt0.c2 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c2 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c2 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c2 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c2 COLLATE RTRIM AS REAL));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (v0.c1) ORDER BY ((v0.c2)<>('-1329088165')) COLLATE RTRIM DESC  NULLS LAST, (- ((v0.c4 IN ()))) DESC, 0.9906452756581052 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((v0.c2)!=('-1329088165')) COLLATE RTRIM DESC  NULLS LAST, (- ((v0.c4 IN ()))) DESC, 0.9906452756581052 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (v0.c1) ORDER BY ((v0.c2)<>('-1329088165')) COLLATE RTRIM DESC  NULLS LAST, (- ((v0.c4 IN ()))) DESC, 0.9906452756581052 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((v0.c2)!=('-1329088165')) COLLATE RTRIM DESC  NULLS LAST, (- ((v0.c4 IN ()))) DESC, 0.9906452756581052 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (v0.c1) ORDER BY ((v0.c2)<>('-1329088165')) COLLATE RTRIM DESC  NULLS LAST, (- ((v0.c4 IN ()))) DESC, 0.9906452756581052 DESC  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON NULLIF(DISTINCT x'', ((v0.c3) NOT BETWEEN (vt0.c1) AND (vt0.c1))) WHERE (CAST(0.08941678196017633 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(0.08941678196017633 AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON NULLIF(DISTINCT x'', ((v0.c3) NOT BETWEEN (vt0.c1) AND (vt0.c1))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON NULLIF(DISTINCT x'', ((v0.c3) NOT BETWEEN (vt0.c1) AND (vt0.c1))) WHERE (CAST(0.08941678196017633 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(0.08941678196017633 AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON NULLIF(DISTINCT x'', ((v0.c3) NOT BETWEEN (vt0.c1) AND (vt0.c1))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON NULLIF(DISTINCT x'', ((v0.c3) NOT BETWEEN (vt0.c1) AND (vt0.c1))) WHERE (CAST(0.08941678196017633 AS TEXT));
SELECT ALL * FROM v0 WHERE (CASE WHEN (((v0.c2, v0.c0, '-931012085'))<=((NULL, v0.c3, v0.c2))) THEN (NOT (v0.c1)) END) ORDER BY CAST(((((v0.c1)OR(v0.c4)))OR('(>.')) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((v0.c2, v0.c0, '-931012085'))<=((NULL, v0.c3, v0.c2))) THEN (NOT (v0.c1)) END) IS TRUE)  as count FROM v0 ORDER BY CAST(((((v0.c1)OR(v0.c4)))OR('(>.')) AS NUMERIC));
SELECT ALL * FROM v0 WHERE (CASE WHEN (((v0.c2, v0.c0, '-931012085'))<=((NULL, v0.c3, v0.c2))) THEN (NOT (v0.c1)) END) ORDER BY CAST(((((v0.c1)OR(v0.c4)))OR('(>.')) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((v0.c2, v0.c0, '-931012085'))<=((NULL, v0.c3, v0.c2))) THEN (NOT (v0.c1)) END) IS TRUE)  as count FROM v0 ORDER BY CAST(((((v0.c1)OR(v0.c4)))OR('(>.')) AS NUMERIC));
SELECT ALL * FROM v0 WHERE (CASE WHEN (((v0.c2, v0.c0, '-931012085'))<=((NULL, v0.c3, v0.c2))) THEN (NOT (v0.c1)) END) ORDER BY CAST(((((v0.c1)OR(v0.c4)))OR('(>.')) AS NUMERIC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE));
SELECT ALL * FROM vt0 WHERE ((((+ (NULL))) ISNULL)) ORDER BY 0.5688178998098277  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (NULL))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY 0.5688178998098277  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((+ (NULL))) ISNULL)) ORDER BY 0.5688178998098277  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (NULL))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY 0.5688178998098277  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((+ (NULL))) ISNULL)) ORDER BY 0.5688178998098277  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((v0.c0) BETWEEN (vt0.c2) AND (vt0.c1)))AND(CAST(v0.c4 AS TEXT))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) BETWEEN (vt0.c2) AND (vt0.c1)))AND(CAST(v0.c4 AS TEXT))))AND(vt0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((v0.c0) BETWEEN (vt0.c2) AND (vt0.c1)))AND(CAST(v0.c4 AS TEXT))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) BETWEEN (vt0.c2) AND (vt0.c1)))AND(CAST(v0.c4 AS TEXT))))AND(vt0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((v0.c0) BETWEEN (vt0.c2) AND (vt0.c1)))AND(CAST(v0.c4 AS TEXT))))AND(vt0.c0)));
SELECT COUNT(*) FROM v0, vt0 WHERE ((NOT (0x28547a62))) ORDER BY v0.c4 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (0X28547a62))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c4 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((NOT (0x28547a62))) ORDER BY v0.c4 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (0X28547a62))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c4 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((NOT (0x28547a62))) ORDER BY v0.c4 ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE WHEN (NOT (vt0.c1)) THEN CAST('1809722077' AS BLOB) WHEN vt0.c0 THEN 0x60a8264f WHEN CAST(vt0.c1 AS TEXT) THEN CAST(vt0.c0 AS INTEGER) ELSE (- (vt0.c1)) END) ORDER BY RTRIM((- (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c1)) THEN CAST('1809722077' AS BLOB) WHEN vt0.c0 THEN 0x60a8264f WHEN CAST(vt0.c1 AS TEXT) THEN CAST(vt0.c0 AS INTEGER) ELSE (- (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY RTRIM((- (vt0.c1))));
SELECT * FROM vt0 WHERE (CASE WHEN (NOT (vt0.c1)) THEN CAST('1809722077' AS BLOB) WHEN vt0.c0 THEN 0x60a8264f WHEN CAST(vt0.c1 AS TEXT) THEN CAST(vt0.c0 AS INTEGER) ELSE (- (vt0.c1)) END) ORDER BY RTRIM((- (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c1)) THEN CAST('1809722077' AS BLOB) WHEN vt0.c0 THEN 0x60a8264f WHEN CAST(vt0.c1 AS TEXT) THEN CAST(vt0.c0 AS INTEGER) ELSE (- (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY RTRIM((- (vt0.c1))));
SELECT * FROM vt0 WHERE (CASE WHEN (NOT (vt0.c1)) THEN CAST('1809722077' AS BLOB) WHEN vt0.c0 THEN 0x60a8264f WHEN CAST(vt0.c1 AS TEXT) THEN CAST(vt0.c0 AS INTEGER) ELSE (- (vt0.c1)) END) ORDER BY RTRIM((- (vt0.c1)));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((v0.c4) NOT NULL))) AND ((v0.c0)))) ORDER BY LIKELY(DISTINCT ((0.9542556696426342) NOT BETWEEN (vt0.c2) AND (v0.c1))) DESC, ((((vt0.c2)>(v0.c3)))>=(((v0.c2)GLOB(v0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((v0.c4) NOT NULL))) AND ((v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY LIKELY(DISTINCT ((0.9542556696426342) NOT BETWEEN (vt0.c2) AND (v0.c1))) DESC, ((((vt0.c2)>(v0.c3)))>=(((v0.c2)GLOB(v0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((v0.c4) NOT NULL))) AND ((v0.c0)))) ORDER BY LIKELY(DISTINCT ((0.9542556696426342) NOT BETWEEN (vt0.c2) AND (v0.c1))) DESC, ((((vt0.c2)>(v0.c3)))>=(((v0.c2)GLOB(v0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((v0.c4) NOT NULL))) AND ((v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY LIKELY(DISTINCT ((0.9542556696426342) NOT BETWEEN (vt0.c2) AND (v0.c1))) DESC, ((((vt0.c2)>(v0.c3)))>=(((v0.c2)GLOB(v0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((v0.c4) NOT NULL))) AND ((v0.c0)))) ORDER BY LIKELY(DISTINCT ((0.9542556696426342) NOT BETWEEN (vt0.c2) AND (v0.c1))) DESC, ((((vt0.c2)>(v0.c3)))>=(((v0.c2)GLOB(v0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((- ((vt0.c2 IN (vt0.c1, vt0.c1, vt0.c2))))) ORDER BY 'c''M' DESC;
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c2 IN (vt0.c1, vt0.c1, vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY 'c''M' DESC);
SELECT COUNT(*) FROM vt0 WHERE ((- ((vt0.c2 IN (vt0.c1, vt0.c1, vt0.c2))))) ORDER BY 'c''M' DESC;
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c2 IN (vt0.c1, vt0.c1, vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY 'c''M' DESC);
SELECT COUNT(*) FROM vt0 WHERE ((- ((vt0.c2 IN (vt0.c1, vt0.c1, vt0.c2))))) ORDER BY 'c''M' DESC;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON CASE WHEN v0.c1 COLLATE NOCASE THEN ((((vt0.c1)OR(v0.c2)))AND(vt0.c2)) ELSE CASE v0.c4  WHEN v0.c4 THEN 0.2848511345687015 END END WHERE (COALESCE(DISTINCT ((v0.c3)GLOB(v0.c2)), v0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((v0.c3)GLOB(v0.c2)), v0.c2 COLLATE NOCASE)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CASE WHEN v0.c1 COLLATE NOCASE THEN ((((vt0.c1)OR(v0.c2)))AND(vt0.c2)) ELSE CASE v0.c4  WHEN v0.c4 THEN 0.2848511345687015 END END);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON CASE WHEN v0.c1 COLLATE NOCASE THEN ((((vt0.c1)OR(v0.c2)))AND(vt0.c2)) ELSE CASE v0.c4  WHEN v0.c4 THEN 0.2848511345687015 END END WHERE (COALESCE(DISTINCT ((v0.c3)GLOB(v0.c2)), v0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((v0.c3)GLOB(v0.c2)), v0.c2 COLLATE NOCASE)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CASE WHEN v0.c1 COLLATE NOCASE THEN ((((vt0.c1)OR(v0.c2)))AND(vt0.c2)) ELSE CASE v0.c4  WHEN v0.c4 THEN 0.2848511345687015 END END);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON CASE WHEN v0.c1 COLLATE NOCASE THEN ((((vt0.c1)OR(v0.c2)))AND(vt0.c2)) ELSE CASE v0.c4  WHEN v0.c4 THEN 0.2848511345687015 END END WHERE (COALESCE(DISTINCT ((v0.c3)GLOB(v0.c2)), v0.c2 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2)!=(vt0.c0)) COLLATE NOCASE) ORDER BY ((LIKELY(vt0.c1))==(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 END)) DESC  NULLS LAST, ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1))) BETWEEN (((vt0.c1)<<(vt0.c1))) AND (CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST, vt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2)<>(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY(vt0.c1))=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 END)) DESC  NULLS LAST, ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1))) BETWEEN (((vt0.c1)<<(vt0.c1))) AND (CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST, vt0.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2)!=(vt0.c0)) COLLATE NOCASE) ORDER BY ((LIKELY(vt0.c1))==(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 END)) DESC  NULLS LAST, ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1))) BETWEEN (((vt0.c1)<<(vt0.c1))) AND (CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST, vt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2)<>(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY(vt0.c1))=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 END)) DESC  NULLS LAST, ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1))) BETWEEN (((vt0.c1)<<(vt0.c1))) AND (CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST, vt0.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2)!=(vt0.c0)) COLLATE NOCASE) ORDER BY ((LIKELY(vt0.c1))==(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 END)) DESC  NULLS LAST, ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1))) BETWEEN (((vt0.c1)<<(vt0.c1))) AND (CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST, vt0.c2  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (UNICODE(((v0.c4) NOT BETWEEN (v0.c3) AND (v0.c0)))) ORDER BY (+ (((v0.c3)*(v0.c1))));
SELECT SUM(count) FROM (SELECT ((UNICODE(((v0.c4) NOT BETWEEN (v0.c3) AND (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c3)*(v0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE (UNICODE(((v0.c4) NOT BETWEEN (v0.c3) AND (v0.c0)))) ORDER BY (+ (((v0.c3)*(v0.c1))));
SELECT SUM(count) FROM (SELECT ((UNICODE(((v0.c4) NOT BETWEEN (v0.c3) AND (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c3)*(v0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE (UNICODE(((v0.c4) NOT BETWEEN (v0.c3) AND (v0.c0)))) ORDER BY (+ (((v0.c3)*(v0.c1))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN json_remove(NULL, vt0.c2) THEN (vt0.c1 IN (vt0.c1)) ELSE vt0.c2 COLLATE BINARY END) ORDER BY ((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c0))) IN ()) DESC  NULLS LAST, (((((((((- (vt0.c1)))OR(COALESCE(vt0.c2, vt0.c1, vt0.c2, vt0.c1))))AND(vt0.c1)))OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 ELSE 'D''섡2' END)))OR(((((((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_remove(NULL, vt0.c2) THEN (vt0.c1 IN (vt0.c1)) ELSE vt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c0))) IN ()) DESC  NULLS LAST, (((((((((- (vt0.c1)))OR(COALESCE(vt0.c2, vt0.c1, vt0.c2, vt0.c1))))AND(vt0.c1)))OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 ELSE 'D''섡2' END)))OR(((((((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN json_remove(NULL, vt0.c2) THEN (vt0.c1 IN (vt0.c1)) ELSE vt0.c2 COLLATE BINARY END) ORDER BY ((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c0))) IN ()) DESC  NULLS LAST, (((((((((- (vt0.c1)))OR(COALESCE(vt0.c2, vt0.c1, vt0.c2, vt0.c1))))AND(vt0.c1)))OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 ELSE 'D''섡2' END)))OR(((((((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_remove(NULL, vt0.c2) THEN (vt0.c1 IN (vt0.c1)) ELSE vt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c0))) IN ()) DESC  NULLS LAST, (((((((((- (vt0.c1)))OR(COALESCE(vt0.c2, vt0.c1, vt0.c2, vt0.c1))))AND(vt0.c1)))OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 ELSE 'D''섡2' END)))OR(((((((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN json_remove(NULL, vt0.c2) THEN (vt0.c1 IN (vt0.c1)) ELSE vt0.c2 COLLATE BINARY END) ORDER BY ((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c0))) IN ()) DESC  NULLS LAST, (((((((((- (vt0.c1)))OR(COALESCE(vt0.c2, vt0.c1, vt0.c2, vt0.c1))))AND(vt0.c1)))OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 ELSE 'D''섡2' END)))OR(((((((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c1)))) ASC;
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c4) NOT BETWEEN (vt0.c0) AND (-2.07904656E8))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c4) NOT BETWEEN (vt0.c0) AND (-2.07904656E8))) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c4) NOT BETWEEN (vt0.c0) AND (-2.07904656E8))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c4) NOT BETWEEN (vt0.c0) AND (-2.07904656E8))) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c4) NOT BETWEEN (vt0.c0) AND (-2.07904656E8))) NOTNULL));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0) NOT NULL))*(CASE v0.c2  WHEN v0.c1 THEN v0.c1 ELSE '2036658053' END))) ORDER BY CASE (((165520033))>=((v0.c1)))  WHEN ((v0.c3) NOT BETWEEN ('~\-䙧g-') AND (v0.c3)) THEN ((vt0.c0)AND(vt0.c0)) ELSE (NULL IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))*(CASE v0.c2  WHEN v0.c1 THEN v0.c1 ELSE '2036658053' END))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE (((165520033))>=((v0.c1)))  WHEN ((v0.c3) NOT BETWEEN ('~\-䙧g-') AND (v0.c3)) THEN ((vt0.c0)AND(vt0.c0)) ELSE (NULL IN ()) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0) NOT NULL))*(CASE v0.c2  WHEN v0.c1 THEN v0.c1 ELSE '2036658053' END))) ORDER BY CASE (((165520033))>=((v0.c1)))  WHEN ((v0.c3) NOT BETWEEN ('~\-䙧g-') AND (v0.c3)) THEN ((vt0.c0)AND(vt0.c0)) ELSE (NULL IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))*(CASE v0.c2  WHEN v0.c1 THEN v0.c1 ELSE '2036658053' END))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE (((165520033))>=((v0.c1)))  WHEN ((v0.c3) NOT BETWEEN ('~\-䙧g-') AND (v0.c3)) THEN ((vt0.c0)AND(vt0.c0)) ELSE (NULL IN ()) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0) NOT NULL))*(CASE v0.c2  WHEN v0.c1 THEN v0.c1 ELSE '2036658053' END))) ORDER BY CASE (((165520033))>=((v0.c1)))  WHEN ((v0.c3) NOT BETWEEN ('~\-䙧g-') AND (v0.c3)) THEN ((vt0.c0)AND(vt0.c0)) ELSE (NULL IN ()) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1 IN ()))AND(((((vt0.c1)AND(v0.c0)))AND(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))AND(((((vt0.c1)AND(v0.c0)))AND(v0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1 IN ()))AND(((((vt0.c1)AND(v0.c0)))AND(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))AND(((((vt0.c1)AND(v0.c0)))AND(v0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1 IN ()))AND(((((vt0.c1)AND(v0.c0)))AND(v0.c1)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c2))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c2))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (vt0.c2)));
SELECT ALL * FROM v0, vt0 WHERE (((CAST(v0.c4 AS TEXT)) NOT BETWEEN (x'') AND (((v0.c4) NOT BETWEEN (vt0.c1) AND (0.847228564367559)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c4 AS TEXT)) NOT BETWEEN (x'') AND (((v0.c4) NOT BETWEEN (vt0.c1) AND (0.847228564367559))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((CAST(v0.c4 AS TEXT)) NOT BETWEEN (x'') AND (((v0.c4) NOT BETWEEN (vt0.c1) AND (0.847228564367559)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c4 AS TEXT)) NOT BETWEEN (x'') AND (((v0.c4) NOT BETWEEN (vt0.c1) AND (0.847228564367559))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((CAST(v0.c4 AS TEXT)) NOT BETWEEN (x'') AND (((v0.c4) NOT BETWEEN (vt0.c1) AND (0.847228564367559)))));
SELECT ALL COUNT(*) FROM v0 WHERE (ABS(v0.c1) COLLATE NOCASE) ORDER BY ((0.7696317314520549)>=((NOT (v0.c2))));
SELECT SUM(count) FROM (SELECT ((ABS(v0.c1) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((0.7696317314520549)>=((NOT (v0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE (ABS(v0.c1) COLLATE NOCASE) ORDER BY ((0.7696317314520549)>=((NOT (v0.c2))));
SELECT SUM(count) FROM (SELECT ((ABS(v0.c1) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((0.7696317314520549)>=((NOT (v0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE (ABS(v0.c1) COLLATE NOCASE) ORDER BY ((0.7696317314520549)>=((NOT (v0.c2))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(NULL AS REAL))<<(((0.5034442260287687)<=(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS REAL))<<(((0.5034442260287687)<=(vt0.c2))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(NULL AS REAL))<<(((0.5034442260287687)<=(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS REAL))<<(((0.5034442260287687)<=(vt0.c2))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(NULL AS REAL))<<(((0.5034442260287687)<=(vt0.c2)))));
SELECT ALL * FROM v0, vt0 WHERE (HEX(DISTINCT CASE v0.c0  WHEN v0.c4 THEN x'173b' ELSE v0.c2 END));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CASE v0.c0  WHEN v0.c4 THEN x'173b' ELSE v0.c2 END)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (HEX(DISTINCT CASE v0.c0  WHEN v0.c4 THEN x'173b' ELSE v0.c2 END));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CASE v0.c0  WHEN v0.c4 THEN x'173b' ELSE v0.c2 END)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (HEX(DISTINCT CASE v0.c0  WHEN v0.c4 THEN x'173b' ELSE v0.c2 END));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((((((v0.c4)OR(vt0.c2)))AND(v0.c2)))OR(x'')))OR(x'')) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c4)OR(vt0.c2)))AND(v0.c2)))OR(x'')))OR(x'')) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((((((v0.c4)OR(vt0.c2)))AND(v0.c2)))OR(x'')))OR(x'')) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c4)OR(vt0.c2)))AND(v0.c2)))OR(x'')))OR(x'')) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((((((v0.c4)OR(vt0.c2)))AND(v0.c2)))OR(x'')))OR(x'')) IN ()));
SELECT * FROM vt0, v0 WHERE ((- (v0.c1))) ORDER BY 0.7615467736200107 ASC;
SELECT SUM(count) FROM (SELECT (((- (v0.c1))) IS TRUE)  as count FROM vt0, v0 ORDER BY 0.7615467736200107 ASC);
SELECT * FROM vt0, v0 WHERE ((- (v0.c1))) ORDER BY 0.7615467736200107 ASC;
SELECT SUM(count) FROM (SELECT (((- (v0.c1))) IS TRUE)  as count FROM vt0, v0 ORDER BY 0.7615467736200107 ASC);
SELECT * FROM vt0, v0 WHERE ((- (v0.c1))) ORDER BY 0.7615467736200107 ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (vt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)LIKE(vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)LIKE(vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)LIKE(vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)LIKE(vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)LIKE(vt0.c2)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((LIKELIHOOD(NULL, 0.10868757008695662)) BETWEEN (((v0.c0) NOT BETWEEN (vt0.c0) AND (x''))) AND (((v0.c4)IS NOT(v0.c2))))) ORDER BY CASE WHEN ((((((((vt0.c2)AND(v0.c0)))AND(v0.c0)))AND(vt0.c2)))OR('1062520367')) THEN 0.625229629743596 ELSE ((v0.c3) BETWEEN (vt0.c1) AND (v0.c4)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(NULL, 0.10868757008695662)) BETWEEN (((v0.c0) NOT BETWEEN (vt0.c0) AND (x''))) AND (((v0.c4)IS NOT(v0.c2))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((((((((vt0.c2)AND(v0.c0)))AND(v0.c0)))AND(vt0.c2)))OR('1062520367')) THEN 0.625229629743596 ELSE ((v0.c3) BETWEEN (vt0.c1) AND (v0.c4)) END DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((LIKELIHOOD(NULL, 0.10868757008695662)) BETWEEN (((v0.c0) NOT BETWEEN (vt0.c0) AND (x''))) AND (((v0.c4)IS NOT(v0.c2))))) ORDER BY CASE WHEN ((((((((vt0.c2)AND(v0.c0)))AND(v0.c0)))AND(vt0.c2)))OR('1062520367')) THEN 0.625229629743596 ELSE ((v0.c3) BETWEEN (vt0.c1) AND (v0.c4)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(NULL, 0.10868757008695662)) BETWEEN (((v0.c0) NOT BETWEEN (vt0.c0) AND (x''))) AND (((v0.c4)IS NOT(v0.c2))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((((((((vt0.c2)AND(v0.c0)))AND(v0.c0)))AND(vt0.c2)))OR('1062520367')) THEN 0.625229629743596 ELSE ((v0.c3) BETWEEN (vt0.c1) AND (v0.c4)) END DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((LIKELIHOOD(NULL, 0.10868757008695662)) BETWEEN (((v0.c0) NOT BETWEEN (vt0.c0) AND (x''))) AND (((v0.c4)IS NOT(v0.c2))))) ORDER BY CASE WHEN ((((((((vt0.c2)AND(v0.c0)))AND(v0.c0)))AND(vt0.c2)))OR('1062520367')) THEN 0.625229629743596 ELSE ((v0.c3) BETWEEN (vt0.c1) AND (v0.c4)) END DESC;
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c2) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c2) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c2) ISNULL))));
SELECT * FROM vt0 WHERE (((vt0.c1) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c2)))!=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c2)))<>(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c2)))!=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c2)))<>(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c2)))!=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) IN ()) WHERE ((((('?ﻏ	D')AND(CASE v0.c0  WHEN 'FU)Ftlqd' THEN v0.c3 END)))OR(((v0.c2)GLOB(vt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((('?ﻏ	D')AND(CASE v0.c0  WHEN 'FU)Ftlqd' THEN v0.c3 END)))OR(((v0.c2)GLOB(vt0.c2))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) IN ()));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) IN ()) WHERE ((((('?ﻏ	D')AND(CASE v0.c0  WHEN 'FU)Ftlqd' THEN v0.c3 END)))OR(((v0.c2)GLOB(vt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((('?ﻏ	D')AND(CASE v0.c0  WHEN 'FU)Ftlqd' THEN v0.c3 END)))OR(((v0.c2)GLOB(vt0.c2))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) IN ()));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) IN ()) WHERE ((((('?ﻏ	D')AND(CASE v0.c0  WHEN 'FU)Ftlqd' THEN v0.c3 END)))OR(((v0.c2)GLOB(vt0.c2)))));
SELECT * FROM v0, vt0 WHERE (((((v0.c2)AND((+ (x'')))))AND(((v0.c0)|(vt0.c1))))) ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))<=((((x'')LIKE(v0.c2)))))  NULLS LAST, v0.c0 ASC, (~ ((v0.c1 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)AND((+ (x'')))))AND(((v0.c0)|(vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))<=((((x'')LIKE(v0.c2)))))  NULLS LAST, v0.c0 ASC, (~ ((v0.c1 IN ()))) DESC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((((v0.c2)AND((+ (x'')))))AND(((v0.c0)|(vt0.c1))))) ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))<=((((x'')LIKE(v0.c2)))))  NULLS LAST, v0.c0 ASC, (~ ((v0.c1 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)AND((+ (x'')))))AND(((v0.c0)|(vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))<=((((x'')LIKE(v0.c2)))))  NULLS LAST, v0.c0 ASC, (~ ((v0.c1 IN ()))) DESC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((((v0.c2)AND((+ (x'')))))AND(((v0.c0)|(vt0.c1))))) ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))<=((((x'')LIKE(v0.c2)))))  NULLS LAST, v0.c0 ASC, (~ ((v0.c1 IN ()))) DESC  NULLS LAST;
SELECT * FROM v0 WHERE (((((x'')GLOB(v0.c2)))&(CAST(v0.c0 AS REAL)))) ORDER BY (((v0.c0)) NOT BETWEEN ((CAST(v0.c4 AS TEXT))) AND ((v0.c1)));
SELECT SUM(count) FROM (SELECT ((((((x'')GLOB(v0.c2)))&(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((CAST(v0.c4 AS TEXT))) AND ((v0.c1))));
SELECT * FROM v0 WHERE (((((x'')GLOB(v0.c2)))&(CAST(v0.c0 AS REAL)))) ORDER BY (((v0.c0)) NOT BETWEEN ((CAST(v0.c4 AS TEXT))) AND ((v0.c1)));
SELECT SUM(count) FROM (SELECT ((((((x'')GLOB(v0.c2)))&(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((CAST(v0.c4 AS TEXT))) AND ((v0.c1))));
SELECT * FROM v0 WHERE (((((x'')GLOB(v0.c2)))&(CAST(v0.c0 AS REAL)))) ORDER BY (((v0.c0)) NOT BETWEEN ((CAST(v0.c4 AS TEXT))) AND ((v0.c1)));
SELECT * FROM v0 WHERE (((DATETIME(v0.c4, v0.c1, '1809722077')) BETWEEN (((v0.c2) ISNULL)) AND (((v0.c4) BETWEEN (x'') AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((DATETIME(v0.c4, v0.c1, '1809722077')) BETWEEN (((v0.c2) ISNULL)) AND (((v0.c4) BETWEEN (x'') AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((DATETIME(v0.c4, v0.c1, '1809722077')) BETWEEN (((v0.c2) ISNULL)) AND (((v0.c4) BETWEEN (x'') AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((DATETIME(v0.c4, v0.c1, '1809722077')) BETWEEN (((v0.c2) ISNULL)) AND (((v0.c4) BETWEEN (x'') AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((DATETIME(v0.c4, v0.c1, '1809722077')) BETWEEN (((v0.c2) ISNULL)) AND (((v0.c4) BETWEEN (x'') AND (v0.c1)))));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON v0.c4 WHERE (((ROUND(NULL, vt0.c1))=(v0.c2))) ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN vt0.c0 THEN ((vt0.c1)%(v0.c4)) ELSE CAST(v0.c1 AS NUMERIC) END  NULLS LAST, (vt0.c1 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ((((ROUND(NULL, vt0.c1))=(v0.c2))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON v0.c4 ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN vt0.c0 THEN ((vt0.c1)%(v0.c4)) ELSE CAST(v0.c1 AS NUMERIC) END  NULLS LAST, (vt0.c1 COLLATE RTRIM IN ()));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON v0.c4 WHERE (((ROUND(NULL, vt0.c1))=(v0.c2))) ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN vt0.c0 THEN ((vt0.c1)%(v0.c4)) ELSE CAST(v0.c1 AS NUMERIC) END  NULLS LAST, (vt0.c1 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ((((ROUND(NULL, vt0.c1))=(v0.c2))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON v0.c4 ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN vt0.c0 THEN ((vt0.c1)%(v0.c4)) ELSE CAST(v0.c1 AS NUMERIC) END  NULLS LAST, (vt0.c1 COLLATE RTRIM IN ()));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON v0.c4 WHERE (((ROUND(NULL, vt0.c1))=(v0.c2))) ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN vt0.c0 THEN ((vt0.c1)%(v0.c4)) ELSE CAST(v0.c1 AS NUMERIC) END  NULLS LAST, (vt0.c1 COLLATE RTRIM IN ());
SELECT * FROM vt0 WHERE (LIKELY(DISTINCT '' COLLATE BINARY)) ORDER BY LENGTH(((vt0.c1) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT '' COLLATE BINARY)) IS TRUE)  as count FROM vt0 ORDER BY LENGTH(((vt0.c1) NOTNULL)) DESC);
SELECT * FROM vt0 WHERE (LIKELY(DISTINCT '' COLLATE BINARY)) ORDER BY LENGTH(((vt0.c1) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT '' COLLATE BINARY)) IS TRUE)  as count FROM vt0 ORDER BY LENGTH(((vt0.c1) NOTNULL)) DESC);
SELECT * FROM vt0 WHERE (LIKELY(DISTINCT '' COLLATE BINARY)) ORDER BY LENGTH(((vt0.c1) NOTNULL)) DESC;
SELECT * FROM v0, vt0 WHERE (((((vt0.c0)==(v0.c0))) NOT NULL)) ORDER BY ((LOWER(v0.c3))>>((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)==(v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((LOWER(v0.c3))>>((vt0.c0 IN ()))) ASC);
SELECT * FROM v0, vt0 WHERE (((((vt0.c0)==(v0.c0))) NOT NULL)) ORDER BY ((LOWER(v0.c3))>>((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)==(v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((LOWER(v0.c3))>>((vt0.c0 IN ()))) ASC);
SELECT * FROM v0, vt0 WHERE (((((vt0.c0)==(v0.c0))) NOT NULL)) ORDER BY ((LOWER(v0.c3))>>((vt0.c0 IN ()))) ASC;
SELECT ALL * FROM vt0, v0 WHERE (v0.c4) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 END)==(IFNULL(vt0.c2, vt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c4) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 END)=(IFNULL(vt0.c2, vt0.c2))) DESC);
SELECT ALL * FROM vt0, v0 WHERE (v0.c4) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 END)==(IFNULL(vt0.c2, vt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c4) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 END)=(IFNULL(vt0.c2, vt0.c2))) DESC);
SELECT ALL * FROM vt0, v0 WHERE (v0.c4) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 END)==(IFNULL(vt0.c2, vt0.c2))) DESC;
SELECT * FROM vt0 CROSS JOIN v0 ON (NOT (((v0.c0) IS FALSE))) WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (NOT (((v0.c0) IS FALSE))));
SELECT * FROM vt0 CROSS JOIN v0 ON (NOT (((v0.c0) IS FALSE))) WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (NOT (((v0.c0) IS FALSE))));
SELECT * FROM vt0 CROSS JOIN v0 ON (NOT (((v0.c0) IS FALSE))) WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL * FROM v0 WHERE (v0.c2) ORDER BY CASE WHEN (v0.c1 IN ()) THEN CASE v0.c1  WHEN v0.c0 THEN v0.c1 END ELSE ((v0.c1) BETWEEN (v0.c3) AND (v0.c2)) END, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (v0.c1 IN ()) THEN CASE v0.c1  WHEN v0.c0 THEN v0.c1 END ELSE ((v0.c1) BETWEEN (v0.c3) AND (v0.c2)) END, v0.c0  NULLS LAST);
SELECT ALL * FROM v0 WHERE (v0.c2) ORDER BY CASE WHEN (v0.c1 IN ()) THEN CASE v0.c1  WHEN v0.c0 THEN v0.c1 END ELSE ((v0.c1) BETWEEN (v0.c3) AND (v0.c2)) END, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (v0.c1 IN ()) THEN CASE v0.c1  WHEN v0.c0 THEN v0.c1 END ELSE ((v0.c1) BETWEEN (v0.c3) AND (v0.c2)) END, v0.c0  NULLS LAST);
SELECT ALL * FROM v0 WHERE (v0.c2) ORDER BY CASE WHEN (v0.c1 IN ()) THEN CASE v0.c1  WHEN v0.c0 THEN v0.c1 END ELSE ((v0.c1) BETWEEN (v0.c3) AND (v0.c2)) END, v0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)LIKE(v0.c3)))*(((((vt0.c2)OR(vt0.c2)))AND(v0.c2))))) ORDER BY (- (((v0.c0) NOTNULL))) ASC, ((((CASE WHEN v0.c3 THEN v0.c2 ELSE v0.c4 END)OR(QUOTE(vt0.c2))))AND(((((NULL)OR(v0.c3)))AND(v0.c4))))  NULLS LAST, (NULL IN (((((v0.c2)OR(v0.c3)))AND(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(v0.c3)))*(((((vt0.c2)OR(vt0.c2)))AND(v0.c2))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (((v0.c0) NOTNULL))) ASC, ((((CASE WHEN v0.c3 THEN v0.c2 ELSE v0.c4 END)OR(QUOTE(vt0.c2))))AND(((((NULL)OR(v0.c3)))AND(v0.c4))))  NULLS LAST, (NULL IN (((((v0.c2)OR(v0.c3)))AND(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)LIKE(v0.c3)))*(((((vt0.c2)OR(vt0.c2)))AND(v0.c2))))) ORDER BY (- (((v0.c0) NOTNULL))) ASC, ((((CASE WHEN v0.c3 THEN v0.c2 ELSE v0.c4 END)OR(QUOTE(vt0.c2))))AND(((((NULL)OR(v0.c3)))AND(v0.c4))))  NULLS LAST, (NULL IN (((((v0.c2)OR(v0.c3)))AND(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(v0.c3)))*(((((vt0.c2)OR(vt0.c2)))AND(v0.c2))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (((v0.c0) NOTNULL))) ASC, ((((CASE WHEN v0.c3 THEN v0.c2 ELSE v0.c4 END)OR(QUOTE(vt0.c2))))AND(((((NULL)OR(v0.c3)))AND(v0.c4))))  NULLS LAST, (NULL IN (((((v0.c2)OR(v0.c3)))AND(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)LIKE(v0.c3)))*(((((vt0.c2)OR(vt0.c2)))AND(v0.c2))))) ORDER BY (- (((v0.c0) NOTNULL))) ASC, ((((CASE WHEN v0.c3 THEN v0.c2 ELSE v0.c4 END)OR(QUOTE(vt0.c2))))AND(((((NULL)OR(v0.c3)))AND(v0.c4))))  NULLS LAST, (NULL IN (((((v0.c2)OR(v0.c3)))AND(vt0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (0.0655374521753529);
SELECT SUM(count) FROM (SELECT ALL ((0.0655374521753529) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (0.0655374521753529);
SELECT SUM(count) FROM (SELECT ALL ((0.0655374521753529) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (0.0655374521753529);
SELECT * FROM v0, vt0 WHERE (x'f9d6') ORDER BY ('do繌\r绮,BN~' IN (vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'f9d6') IS TRUE)  as count FROM v0, vt0 ORDER BY ('do繌\r绮,BN~' IN (vt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (x'f9d6') ORDER BY ('do繌\r绮,BN~' IN (vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'f9d6') IS TRUE)  as count FROM v0, vt0 ORDER BY ('do繌\r绮,BN~' IN (vt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (x'f9d6') ORDER BY ('do繌\r绮,BN~' IN (vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (-1.12840891E9);
SELECT SUM(count) FROM (SELECT ((-1.12840891E9) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (-1.12840891E9);
SELECT SUM(count) FROM (SELECT ((-1.12840891E9) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (-1.12840891E9);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c1))=((CAST(vt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1))==((CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c1))=((CAST(vt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1))==((CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c1))=((CAST(vt0.c0 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0.06545585313186242) ORDER BY ((((x'')==(vt0.c1))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.06545585313186242) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((x'')=(vt0.c1))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0.06545585313186242) ORDER BY ((((x'')==(vt0.c1))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.06545585313186242) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((x'')=(vt0.c1))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0.06545585313186242) ORDER BY ((((x'')==(vt0.c1))) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON v0.c0 WHERE (CASE WHEN v0.c4 COLLATE NOCASE THEN ((v0.c4)=(v0.c1)) ELSE v0.c3 COLLATE NOCASE END) ORDER BY (((v0.c0)AND(vt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c4 COLLATE NOCASE THEN ((v0.c4)=(v0.c1)) ELSE v0.c3 COLLATE NOCASE END) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON v0.c0 ORDER BY (((v0.c0)AND(vt0.c1)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON v0.c0 WHERE (CASE WHEN v0.c4 COLLATE NOCASE THEN ((v0.c4)=(v0.c1)) ELSE v0.c3 COLLATE NOCASE END) ORDER BY (((v0.c0)AND(vt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c4 COLLATE NOCASE THEN ((v0.c4)=(v0.c1)) ELSE v0.c3 COLLATE NOCASE END) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON v0.c0 ORDER BY (((v0.c0)AND(vt0.c1)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON v0.c0 WHERE (CASE WHEN v0.c4 COLLATE NOCASE THEN ((v0.c4)=(v0.c1)) ELSE v0.c3 COLLATE NOCASE END) ORDER BY (((v0.c0)AND(vt0.c1)) IN ()) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (SQLITE_VERSION() COLLATE RTRIM) ORDER BY (- (v0.c2)) COLLATE BINARY DESC, (+ ((((v0.c3))<>(('1621632591'))))) ASC, ((((((v0.c1)=(v0.c2)))AND(NULLIF(v0.c0, v0.c3))))OR(v0.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION() COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (- (v0.c2)) COLLATE BINARY DESC, (+ ((((v0.c3))<>(('1621632591'))))) ASC, ((((((v0.c1)=(v0.c2)))AND(NULLIF(v0.c0, v0.c3))))OR(v0.c1 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (SQLITE_VERSION() COLLATE RTRIM) ORDER BY (- (v0.c2)) COLLATE BINARY DESC, (+ ((((v0.c3))<>(('1621632591'))))) ASC, ((((((v0.c1)=(v0.c2)))AND(NULLIF(v0.c0, v0.c3))))OR(v0.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION() COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (- (v0.c2)) COLLATE BINARY DESC, (+ ((((v0.c3))<>(('1621632591'))))) ASC, ((((((v0.c1)=(v0.c2)))AND(NULLIF(v0.c0, v0.c3))))OR(v0.c1 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (SQLITE_VERSION() COLLATE RTRIM) ORDER BY (- (v0.c2)) COLLATE BINARY DESC, (+ ((((v0.c3))<>(('1621632591'))))) ASC, ((((((v0.c1)=(v0.c2)))AND(NULLIF(v0.c0, v0.c3))))OR(v0.c1 COLLATE BINARY))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((~ (vt0.c1)) IN (vt0.c2 COLLATE BINARY, v0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c1)) IN (vt0.c2 COLLATE BINARY, v0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((~ (vt0.c1)) IN (vt0.c2 COLLATE BINARY, v0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c1)) IN (vt0.c2 COLLATE BINARY, v0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((~ (vt0.c1)) IN (vt0.c2 COLLATE BINARY, v0.c1 COLLATE NOCASE)));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((((((((((vt0.c2) NOT NULL))AND(v0.c2 COLLATE NOCASE)))OR((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c4))))))AND((~ (vt0.c1)))))OR(vt0.c2)) WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((((((((vt0.c2) NOT NULL))AND(v0.c2 COLLATE NOCASE)))OR((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c4))))))AND((~ (vt0.c1)))))OR(vt0.c2)));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((((((((((vt0.c2) NOT NULL))AND(v0.c2 COLLATE NOCASE)))OR((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c4))))))AND((~ (vt0.c1)))))OR(vt0.c2)) WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((((((((vt0.c2) NOT NULL))AND(v0.c2 COLLATE NOCASE)))OR((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c4))))))AND((~ (vt0.c1)))))OR(vt0.c2)));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((((((((((vt0.c2) NOT NULL))AND(v0.c2 COLLATE NOCASE)))OR((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c4))))))AND((~ (vt0.c1)))))OR(vt0.c2)) WHERE (vt0.c2);
SELECT ALL * FROM vt0 WHERE (((vt0.c2) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c2) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c2) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c2) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c2) ISNULL) COLLATE BINARY);
SELECT COUNT(*) FROM v0, vt0 WHERE (((COALESCE(DISTINCT NULL, vt0.c1, vt0.c1, v0.c3, v0.c0, v0.c4))AND(CAST(vt0.c2 AS NUMERIC)))) ORDER BY CASE WHEN ((((vt0.c2)AND(vt0.c0)))AND(v0.c3)) THEN CAST(vt0.c2 AS INTEGER) WHEN ((v0.c4)LIKE(vt0.c0)) THEN CAST(0.9334260924839541 AS INTEGER) WHEN vt0.c2 THEN (+ (vt0.c2)) WHEN 0x6f5d5c1c THEN ((v0.c4) BETWEEN (x'') AND ('1800699468')) WHEN v0.c4 THEN (('o') IS FALSE) ELSE ((((vt0.c1)AND(vt0.c1)))AND(v0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT NULL, vt0.c1, vt0.c1, v0.c3, v0.c0, v0.c4))AND(CAST(vt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((((vt0.c2)AND(vt0.c0)))AND(v0.c3)) THEN CAST(vt0.c2 AS INTEGER) WHEN ((v0.c4)LIKE(vt0.c0)) THEN CAST(0.9334260924839541 AS INTEGER) WHEN vt0.c2 THEN (+ (vt0.c2)) WHEN 0X6f5d5c1c THEN ((v0.c4) BETWEEN (x'') AND ('1800699468')) WHEN v0.c4 THEN (('o') IS FALSE) ELSE ((((vt0.c1)AND(vt0.c1)))AND(v0.c0)) END);
SELECT COUNT(*) FROM v0, vt0 WHERE (((COALESCE(DISTINCT NULL, vt0.c1, vt0.c1, v0.c3, v0.c0, v0.c4))AND(CAST(vt0.c2 AS NUMERIC)))) ORDER BY CASE WHEN ((((vt0.c2)AND(vt0.c0)))AND(v0.c3)) THEN CAST(vt0.c2 AS INTEGER) WHEN ((v0.c4)LIKE(vt0.c0)) THEN CAST(0.9334260924839541 AS INTEGER) WHEN vt0.c2 THEN (+ (vt0.c2)) WHEN 0x6f5d5c1c THEN ((v0.c4) BETWEEN (x'') AND ('1800699468')) WHEN v0.c4 THEN (('o') IS FALSE) ELSE ((((vt0.c1)AND(vt0.c1)))AND(v0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT NULL, vt0.c1, vt0.c1, v0.c3, v0.c0, v0.c4))AND(CAST(vt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((((vt0.c2)AND(vt0.c0)))AND(v0.c3)) THEN CAST(vt0.c2 AS INTEGER) WHEN ((v0.c4)LIKE(vt0.c0)) THEN CAST(0.9334260924839541 AS INTEGER) WHEN vt0.c2 THEN (+ (vt0.c2)) WHEN 0X6f5d5c1c THEN ((v0.c4) BETWEEN (x'') AND ('1800699468')) WHEN v0.c4 THEN (('o') IS FALSE) ELSE ((((vt0.c1)AND(vt0.c1)))AND(v0.c0)) END);
SELECT COUNT(*) FROM v0, vt0 WHERE (((COALESCE(DISTINCT NULL, vt0.c1, vt0.c1, v0.c3, v0.c0, v0.c4))AND(CAST(vt0.c2 AS NUMERIC)))) ORDER BY CASE WHEN ((((vt0.c2)AND(vt0.c0)))AND(v0.c3)) THEN CAST(vt0.c2 AS INTEGER) WHEN ((v0.c4)LIKE(vt0.c0)) THEN CAST(0.9334260924839541 AS INTEGER) WHEN vt0.c2 THEN (+ (vt0.c2)) WHEN 0x6f5d5c1c THEN ((v0.c4) BETWEEN (x'') AND ('1800699468')) WHEN v0.c4 THEN (('o') IS FALSE) ELSE ((((vt0.c1)AND(vt0.c1)))AND(v0.c0)) END;
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((v0.c3)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((vt0.c2))))) AND (((vt0.c2 IN ())))) WHERE (((v0.c4 COLLATE BINARY) IS TRUE)) ORDER BY ((('' COLLATE NOCASE))<=(((- (vt0.c1)))))  NULLS FIRST, CASE CAST(v0.c4 AS INTEGER)  WHEN LIKELIHOOD(v0.c2, 0.5644447867134115) THEN ((v0.c1)<(v0.c2)) WHEN (((v0.c1))=((vt0.c2))) THEN ((((v0.c3)AND(vt0.c2)))OR(NULL)) WHEN CAST(vt0.c1 AS REAL) THEN IFNULL(vt0.c0, v0.c0) ELSE (- (v0.c1)) END ASC  NULLS LAST, (- (((vt0.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c4 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((v0.c3)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((vt0.c2))))) AND (((vt0.c2 IN ())))) ORDER BY ((('' COLLATE NOCASE))<=(((- (vt0.c1)))))  NULLS FIRST, CASE CAST(v0.c4 AS INTEGER)  WHEN LIKELIHOOD(v0.c2, 0.5644447867134115) THEN ((v0.c1)<(v0.c2)) WHEN (((v0.c1))==((vt0.c2))) THEN ((((v0.c3)AND(vt0.c2)))OR(NULL)) WHEN CAST(vt0.c1 AS REAL) THEN IFNULL(vt0.c0, v0.c0) ELSE (- (v0.c1)) END ASC  NULLS LAST, (- (((vt0.c1) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((v0.c3)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((vt0.c2))))) AND (((vt0.c2 IN ())))) WHERE (((v0.c4 COLLATE BINARY) IS TRUE)) ORDER BY ((('' COLLATE NOCASE))<=(((- (vt0.c1)))))  NULLS FIRST, CASE CAST(v0.c4 AS INTEGER)  WHEN LIKELIHOOD(v0.c2, 0.5644447867134115) THEN ((v0.c1)<(v0.c2)) WHEN (((v0.c1))=((vt0.c2))) THEN ((((v0.c3)AND(vt0.c2)))OR(NULL)) WHEN CAST(vt0.c1 AS REAL) THEN IFNULL(vt0.c0, v0.c0) ELSE (- (v0.c1)) END ASC  NULLS LAST, (- (((vt0.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c4 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((v0.c3)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((vt0.c2))))) AND (((vt0.c2 IN ())))) ORDER BY ((('' COLLATE NOCASE))<=(((- (vt0.c1)))))  NULLS FIRST, CASE CAST(v0.c4 AS INTEGER)  WHEN LIKELIHOOD(v0.c2, 0.5644447867134115) THEN ((v0.c1)<(v0.c2)) WHEN (((v0.c1))==((vt0.c2))) THEN ((((v0.c3)AND(vt0.c2)))OR(NULL)) WHEN CAST(vt0.c1 AS REAL) THEN IFNULL(vt0.c0, v0.c0) ELSE (- (v0.c1)) END ASC  NULLS LAST, (- (((vt0.c1) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((v0.c3)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((vt0.c2))))) AND (((vt0.c2 IN ())))) WHERE (((v0.c4 COLLATE BINARY) IS TRUE)) ORDER BY ((('' COLLATE NOCASE))<=(((- (vt0.c1)))))  NULLS FIRST, CASE CAST(v0.c4 AS INTEGER)  WHEN LIKELIHOOD(v0.c2, 0.5644447867134115) THEN ((v0.c1)<(v0.c2)) WHEN (((v0.c1))=((vt0.c2))) THEN ((((v0.c3)AND(vt0.c2)))OR(NULL)) WHEN CAST(vt0.c1 AS REAL) THEN IFNULL(vt0.c0, v0.c0) ELSE (- (v0.c1)) END ASC  NULLS LAST, (- (((vt0.c1) IS FALSE)))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (TRIM(DISTINCT CAST(v0.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CAST(v0.c2 AS NUMERIC))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (TRIM(DISTINCT CAST(v0.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CAST(v0.c2 AS NUMERIC))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (TRIM(DISTINCT CAST(v0.c2 AS NUMERIC)));
SELECT COUNT(*) FROM v0 WHERE (((v0.c3) NOT BETWEEN ((v0.c0 IN ())) AND (LIKELY(v0.c0)))) ORDER BY (((((v0.c3) IS FALSE), ((v0.c1) BETWEEN (v0.c1) AND (v0.c3)), (((v0.c2)) NOT BETWEEN ((v0.c3)) AND ((v0.c1)))))<((CASE WHEN v0.c1 THEN v0.c4 WHEN v0.c1 THEN '775181470' WHEN v0.c2 THEN v0.c4 ELSE v0.c3 END, CASE v0.c1  WHEN v0.c0 THEN v0.c1 ELSE v0.c4 END, x'bc62'))) DESC, CASE WHEN ((((((((v0.c2)AND(v0.c1)))AND(v0.c1)))AND(v0.c1)))OR(v0.c2)) THEN v0.c1 ELSE ((v0.c1)&('A3Y')) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c3) NOT BETWEEN ((v0.c0 IN ())) AND (LIKELY(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c3) IS FALSE), ((v0.c1) BETWEEN (v0.c1) AND (v0.c3)), (((v0.c2)) NOT BETWEEN ((v0.c3)) AND ((v0.c1)))))<((CASE WHEN v0.c1 THEN v0.c4 WHEN v0.c1 THEN '775181470' WHEN v0.c2 THEN v0.c4 ELSE v0.c3 END, CASE v0.c1  WHEN v0.c0 THEN v0.c1 ELSE v0.c4 END, x'bc62'))) DESC, CASE WHEN ((((((((v0.c2)AND(v0.c1)))AND(v0.c1)))AND(v0.c1)))OR(v0.c2)) THEN v0.c1 ELSE ((v0.c1)&('A3Y')) END  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c3) NOT BETWEEN ((v0.c0 IN ())) AND (LIKELY(v0.c0)))) ORDER BY (((((v0.c3) IS FALSE), ((v0.c1) BETWEEN (v0.c1) AND (v0.c3)), (((v0.c2)) NOT BETWEEN ((v0.c3)) AND ((v0.c1)))))<((CASE WHEN v0.c1 THEN v0.c4 WHEN v0.c1 THEN '775181470' WHEN v0.c2 THEN v0.c4 ELSE v0.c3 END, CASE v0.c1  WHEN v0.c0 THEN v0.c1 ELSE v0.c4 END, x'bc62'))) DESC, CASE WHEN ((((((((v0.c2)AND(v0.c1)))AND(v0.c1)))AND(v0.c1)))OR(v0.c2)) THEN v0.c1 ELSE ((v0.c1)&('A3Y')) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c3) NOT BETWEEN ((v0.c0 IN ())) AND (LIKELY(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c3) IS FALSE), ((v0.c1) BETWEEN (v0.c1) AND (v0.c3)), (((v0.c2)) NOT BETWEEN ((v0.c3)) AND ((v0.c1)))))<((CASE WHEN v0.c1 THEN v0.c4 WHEN v0.c1 THEN '775181470' WHEN v0.c2 THEN v0.c4 ELSE v0.c3 END, CASE v0.c1  WHEN v0.c0 THEN v0.c1 ELSE v0.c4 END, x'bc62'))) DESC, CASE WHEN ((((((((v0.c2)AND(v0.c1)))AND(v0.c1)))AND(v0.c1)))OR(v0.c2)) THEN v0.c1 ELSE ((v0.c1)&('A3Y')) END  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c3) NOT BETWEEN ((v0.c0 IN ())) AND (LIKELY(v0.c0)))) ORDER BY (((((v0.c3) IS FALSE), ((v0.c1) BETWEEN (v0.c1) AND (v0.c3)), (((v0.c2)) NOT BETWEEN ((v0.c3)) AND ((v0.c1)))))<((CASE WHEN v0.c1 THEN v0.c4 WHEN v0.c1 THEN '775181470' WHEN v0.c2 THEN v0.c4 ELSE v0.c3 END, CASE v0.c1  WHEN v0.c0 THEN v0.c1 ELSE v0.c4 END, x'bc62'))) DESC, CASE WHEN ((((((((v0.c2)AND(v0.c1)))AND(v0.c1)))AND(v0.c1)))OR(v0.c2)) THEN v0.c1 ELSE ((v0.c1)&('A3Y')) END  NULLS LAST;
SELECT * FROM v0 WHERE (((v0.c2 IN ()) IN (NULL COLLATE BINARY, CASE v0.c0  WHEN v0.c1 THEN v0.c2 END))) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ((((v0.c2 IN ()) IN (NULL COLLATE BINARY, CASE v0.c0  WHEN v0.c1 THEN v0.c2 END))) IS TRUE)  as count FROM v0 ORDER BY v0.c2);
SELECT * FROM v0 WHERE (((v0.c2 IN ()) IN (NULL COLLATE BINARY, CASE v0.c0  WHEN v0.c1 THEN v0.c2 END))) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ((((v0.c2 IN ()) IN (NULL COLLATE BINARY, CASE v0.c0  WHEN v0.c1 THEN v0.c2 END))) IS TRUE)  as count FROM v0 ORDER BY v0.c2);
SELECT * FROM v0 WHERE (((v0.c2 IN ()) IN (NULL COLLATE BINARY, CASE v0.c0  WHEN v0.c1 THEN v0.c2 END))) ORDER BY v0.c2;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN 'ajvJJ' THEN vt0.c1 ELSE (((0X25fb062f))<=((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 'ajvJJ' THEN vt0.c1 ELSE (((0X25fb062f))<=((vt0.c1))) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN 'ajvJJ' THEN vt0.c1 ELSE (((0X25fb062f))<=((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 'ajvJJ' THEN vt0.c1 ELSE (((0X25fb062f))<=((vt0.c1))) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN 'ajvJJ' THEN vt0.c1 ELSE (((0X25fb062f))<=((vt0.c1))) END);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON vt0.c2 WHERE (((+ (vt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c2)) IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON vt0.c2);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON vt0.c2 WHERE (((+ (vt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c2)) IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON vt0.c2);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON vt0.c2 WHERE (((+ (vt0.c2)) IN ()));
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c1) NOT BETWEEN (v0.c4) AND ((((vt0.c2, vt0.c0, v0.c0, '-778719505', v0.c0)) NOT BETWEEN ((vt0.c0, v0.c4, v0.c2, x'', vt0.c2)) AND ((vt0.c0, vt0.c2, v0.c0, v0.c2, v0.c4)))))) ORDER BY LIKELY(((v0.c1) ISNULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (v0.c4) AND ((((vt0.c2, vt0.c0, v0.c0, '-778719505', v0.c0)) NOT BETWEEN ((vt0.c0, v0.c4, v0.c2, x'', vt0.c2)) AND ((vt0.c0, vt0.c2, v0.c0, v0.c2, v0.c4)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY LIKELY(((v0.c1) ISNULL)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c1) NOT BETWEEN (v0.c4) AND ((((vt0.c2, vt0.c0, v0.c0, '-778719505', v0.c0)) NOT BETWEEN ((vt0.c0, v0.c4, v0.c2, x'', vt0.c2)) AND ((vt0.c0, vt0.c2, v0.c0, v0.c2, v0.c4)))))) ORDER BY LIKELY(((v0.c1) ISNULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (v0.c4) AND ((((vt0.c2, vt0.c0, v0.c0, '-778719505', v0.c0)) NOT BETWEEN ((vt0.c0, v0.c4, v0.c2, x'', vt0.c2)) AND ((vt0.c0, vt0.c2, v0.c0, v0.c2, v0.c4)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY LIKELY(((v0.c1) ISNULL)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c1) NOT BETWEEN (v0.c4) AND ((((vt0.c2, vt0.c0, v0.c0, '-778719505', v0.c0)) NOT BETWEEN ((vt0.c0, v0.c4, v0.c2, x'', vt0.c2)) AND ((vt0.c0, vt0.c2, v0.c0, v0.c2, v0.c4)))))) ORDER BY LIKELY(((v0.c1) ISNULL)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (('' IN ()) COLLATE RTRIM) ORDER BY ((((v0.c2)>(0.4712499380557239)))+(CAST(v0.c4 AS REAL))), ((((((v0.c4)OR(v0.c0)))AND(v0.c0))) IS FALSE)  NULLS FIRST, (~ (((v0.c0) BETWEEN (v0.c2) AND (v0.c4))));
SELECT SUM(count) FROM (SELECT ((('' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2)>(0.4712499380557239)))+(CAST(v0.c4 AS REAL))), ((((((v0.c4)OR(v0.c0)))AND(v0.c0))) IS FALSE)  NULLS FIRST, (~ (((v0.c0) BETWEEN (v0.c2) AND (v0.c4)))));
SELECT COUNT(*) FROM v0 WHERE (('' IN ()) COLLATE RTRIM) ORDER BY ((((v0.c2)>(0.4712499380557239)))+(CAST(v0.c4 AS REAL))), ((((((v0.c4)OR(v0.c0)))AND(v0.c0))) IS FALSE)  NULLS FIRST, (~ (((v0.c0) BETWEEN (v0.c2) AND (v0.c4))));
SELECT SUM(count) FROM (SELECT ((('' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2)>(0.4712499380557239)))+(CAST(v0.c4 AS REAL))), ((((((v0.c4)OR(v0.c0)))AND(v0.c0))) IS FALSE)  NULLS FIRST, (~ (((v0.c0) BETWEEN (v0.c2) AND (v0.c4)))));
SELECT COUNT(*) FROM v0 WHERE (('' IN ()) COLLATE RTRIM) ORDER BY ((((v0.c2)>(0.4712499380557239)))+(CAST(v0.c4 AS REAL))), ((((((v0.c4)OR(v0.c0)))AND(v0.c0))) IS FALSE)  NULLS FIRST, (~ (((v0.c0) BETWEEN (v0.c2) AND (v0.c4))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((((((v0.c2)IS(v0.c4)))OR(((vt0.c1) IS FALSE))))AND(((vt0.c2) NOT BETWEEN (v0.c3) AND (vt0.c2)))))OR((((vt0.c2))!=((v0.c0))))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c2)IS(v0.c4)))OR(((vt0.c1) IS FALSE))))AND(((vt0.c2) NOT BETWEEN (v0.c3) AND (vt0.c2)))))OR((((vt0.c2))<>((v0.c0))))))AND(NULL))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((((((v0.c2)IS(v0.c4)))OR(((vt0.c1) IS FALSE))))AND(((vt0.c2) NOT BETWEEN (v0.c3) AND (vt0.c2)))))OR((((vt0.c2))!=((v0.c0))))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c2)IS(v0.c4)))OR(((vt0.c1) IS FALSE))))AND(((vt0.c2) NOT BETWEEN (v0.c3) AND (vt0.c2)))))OR((((vt0.c2))<>((v0.c0))))))AND(NULL))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((((((v0.c2)IS(v0.c4)))OR(((vt0.c1) IS FALSE))))AND(((vt0.c2) NOT BETWEEN (v0.c3) AND (vt0.c2)))))OR((((vt0.c2))!=((v0.c0))))))AND(NULL)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST((NOT (v0.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (v0.c3)) AS BLOB)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST((NOT (v0.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (v0.c3)) AS BLOB)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST((NOT (v0.c3)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE NOCASE) ORDER BY (((+ ('-1286664248')))-(LIKELY(DISTINCT vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((+ ('-1286664248')))-(LIKELY(DISTINCT vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE NOCASE) ORDER BY (((+ ('-1286664248')))-(LIKELY(DISTINCT vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((+ ('-1286664248')))-(LIKELY(DISTINCT vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE NOCASE) ORDER BY (((+ ('-1286664248')))-(LIKELY(DISTINCT vt0.c0))) ASC;
SELECT ALL * FROM vt0, v0 WHERE (CAST(((v0.c4)>>(v0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c4)>>(v0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CAST(((v0.c4)>>(v0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c4)>>(v0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CAST(((v0.c4)>>(v0.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c2)+(CASE vt0.c2  WHEN v0.c0 THEN vt0.c2 END))) ORDER BY (CASE WHEN vt0.c0 THEN NULL WHEN v0.c4 THEN v0.c0 WHEN v0.c1 THEN v0.c3 ELSE v0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2)+(CASE vt0.c2  WHEN v0.c0 THEN vt0.c2 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY (CASE WHEN vt0.c0 THEN NULL WHEN v0.c4 THEN v0.c0 WHEN v0.c1 THEN v0.c3 ELSE v0.c0 END IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c2)+(CASE vt0.c2  WHEN v0.c0 THEN vt0.c2 END))) ORDER BY (CASE WHEN vt0.c0 THEN NULL WHEN v0.c4 THEN v0.c0 WHEN v0.c1 THEN v0.c3 ELSE v0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2)+(CASE vt0.c2  WHEN v0.c0 THEN vt0.c2 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY (CASE WHEN vt0.c0 THEN NULL WHEN v0.c4 THEN v0.c0 WHEN v0.c1 THEN v0.c3 ELSE v0.c0 END IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c2)+(CASE vt0.c2  WHEN v0.c0 THEN vt0.c2 END))) ORDER BY (CASE WHEN vt0.c0 THEN NULL WHEN v0.c4 THEN v0.c0 WHEN v0.c1 THEN v0.c3 ELSE v0.c0 END IN ());
SELECT * FROM vt0, v0 WHERE (LOWER(((((vt0.c1)OR(v0.c4)))OR(v0.c2)))) ORDER BY ((((vt0.c1) IS TRUE)) NOT BETWEEN (((vt0.c2)GLOB(v0.c4))) AND ((- (v0.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((((vt0.c1)OR(v0.c4)))OR(v0.c2)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c1) IS TRUE)) NOT BETWEEN (((vt0.c2)GLOB(v0.c4))) AND ((- (v0.c3)))) DESC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (LOWER(((((vt0.c1)OR(v0.c4)))OR(v0.c2)))) ORDER BY ((((vt0.c1) IS TRUE)) NOT BETWEEN (((vt0.c2)GLOB(v0.c4))) AND ((- (v0.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((((vt0.c1)OR(v0.c4)))OR(v0.c2)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c1) IS TRUE)) NOT BETWEEN (((vt0.c2)GLOB(v0.c4))) AND ((- (v0.c3)))) DESC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (LOWER(((((vt0.c1)OR(v0.c4)))OR(v0.c2)))) ORDER BY ((((vt0.c1) IS TRUE)) NOT BETWEEN (((vt0.c2)GLOB(v0.c4))) AND ((- (v0.c3)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (((((((((((v0.c2)>(vt0.c0)))OR((- (vt0.c0)))))AND((vt0.c1 IN ()))))AND(((v0.c4)GLOB(0.6868802882425585)))))AND(((v0.c3) IS TRUE)))) ORDER BY ABS(DISTINCT 0.6742518613638662) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c2)>(vt0.c0)))OR((- (vt0.c0)))))AND((vt0.c1 IN ()))))AND(((v0.c4)GLOB(0.6868802882425585)))))AND(((v0.c3) IS TRUE)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ABS(DISTINCT 0.6742518613638662) ASC);
SELECT COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (((((((((((v0.c2)>(vt0.c0)))OR((- (vt0.c0)))))AND((vt0.c1 IN ()))))AND(((v0.c4)GLOB(0.6868802882425585)))))AND(((v0.c3) IS TRUE)))) ORDER BY ABS(DISTINCT 0.6742518613638662) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c2)>(vt0.c0)))OR((- (vt0.c0)))))AND((vt0.c1 IN ()))))AND(((v0.c4)GLOB(0.6868802882425585)))))AND(((v0.c3) IS TRUE)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ABS(DISTINCT 0.6742518613638662) ASC);
SELECT COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (((((((((((v0.c2)>(vt0.c0)))OR((- (vt0.c0)))))AND((vt0.c1 IN ()))))AND(((v0.c4)GLOB(0.6868802882425585)))))AND(((v0.c3) IS TRUE)))) ORDER BY ABS(DISTINCT 0.6742518613638662) ASC;
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON CASE WHEN NULL THEN CAST(vt0.c2 AS BLOB) WHEN (- (vt0.c2)) THEN ((((v0.c3)OR(vt0.c0)))OR(v0.c3)) WHEN (((v0.c0)) BETWEEN (('-1065277018')) AND ((v0.c2))) THEN MAX(v0.c4, vt0.c1) ELSE (NOT (v0.c1)) END WHERE (CASE UPPER(DISTINCT v0.c3)  WHEN ((v0.c3)==(x'')) THEN CAST(v0.c1 AS REAL) WHEN v0.c1 THEN ((v0.c1) BETWEEN (v0.c1) AND (0.3095730969288525)) WHEN v0.c4 COLLATE BINARY THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE vt0.c0 COLLATE NOCASE END) ORDER BY HEX(DISTINCT CASE v0.c2  WHEN v0.c2 THEN vt0.c2 WHEN 0x3f6bbedc THEN v0.c2 WHEN 'W h*_' THEN v0.c0 ELSE v0.c4 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE UPPER(DISTINCT v0.c3)  WHEN ((v0.c3)==(x'')) THEN CAST(v0.c1 AS REAL) WHEN v0.c1 THEN ((v0.c1) BETWEEN (v0.c1) AND (0.3095730969288525)) WHEN v0.c4 COLLATE BINARY THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CASE WHEN NULL THEN CAST(vt0.c2 AS BLOB) WHEN (- (vt0.c2)) THEN ((((v0.c3)OR(vt0.c0)))OR(v0.c3)) WHEN (((v0.c0)) BETWEEN (('-1065277018')) AND ((v0.c2))) THEN MAX(v0.c4, vt0.c1) ELSE (NOT (v0.c1)) END ORDER BY HEX(DISTINCT CASE v0.c2  WHEN v0.c2 THEN vt0.c2 WHEN 0x3f6bbedc THEN v0.c2 WHEN 'W h*_' THEN v0.c0 ELSE v0.c4 END) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON CASE WHEN NULL THEN CAST(vt0.c2 AS BLOB) WHEN (- (vt0.c2)) THEN ((((v0.c3)OR(vt0.c0)))OR(v0.c3)) WHEN (((v0.c0)) BETWEEN (('-1065277018')) AND ((v0.c2))) THEN MAX(v0.c4, vt0.c1) ELSE (NOT (v0.c1)) END WHERE (CASE UPPER(DISTINCT v0.c3)  WHEN ((v0.c3)==(x'')) THEN CAST(v0.c1 AS REAL) WHEN v0.c1 THEN ((v0.c1) BETWEEN (v0.c1) AND (0.3095730969288525)) WHEN v0.c4 COLLATE BINARY THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE vt0.c0 COLLATE NOCASE END) ORDER BY HEX(DISTINCT CASE v0.c2  WHEN v0.c2 THEN vt0.c2 WHEN 0x3f6bbedc THEN v0.c2 WHEN 'W h*_' THEN v0.c0 ELSE v0.c4 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE UPPER(DISTINCT v0.c3)  WHEN ((v0.c3)==(x'')) THEN CAST(v0.c1 AS REAL) WHEN v0.c1 THEN ((v0.c1) BETWEEN (v0.c1) AND (0.3095730969288525)) WHEN v0.c4 COLLATE BINARY THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CASE WHEN NULL THEN CAST(vt0.c2 AS BLOB) WHEN (- (vt0.c2)) THEN ((((v0.c3)OR(vt0.c0)))OR(v0.c3)) WHEN (((v0.c0)) BETWEEN (('-1065277018')) AND ((v0.c2))) THEN MAX(v0.c4, vt0.c1) ELSE (NOT (v0.c1)) END ORDER BY HEX(DISTINCT CASE v0.c2  WHEN v0.c2 THEN vt0.c2 WHEN 0x3f6bbedc THEN v0.c2 WHEN 'W h*_' THEN v0.c0 ELSE v0.c4 END) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON CASE WHEN NULL THEN CAST(vt0.c2 AS BLOB) WHEN (- (vt0.c2)) THEN ((((v0.c3)OR(vt0.c0)))OR(v0.c3)) WHEN (((v0.c0)) BETWEEN (('-1065277018')) AND ((v0.c2))) THEN MAX(v0.c4, vt0.c1) ELSE (NOT (v0.c1)) END WHERE (CASE UPPER(DISTINCT v0.c3)  WHEN ((v0.c3)==(x'')) THEN CAST(v0.c1 AS REAL) WHEN v0.c1 THEN ((v0.c1) BETWEEN (v0.c1) AND (0.3095730969288525)) WHEN v0.c4 COLLATE BINARY THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE vt0.c0 COLLATE NOCASE END) ORDER BY HEX(DISTINCT CASE v0.c2  WHEN v0.c2 THEN vt0.c2 WHEN 0x3f6bbedc THEN v0.c2 WHEN 'W h*_' THEN v0.c0 ELSE v0.c4 END) ASC  NULLS LAST;
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (CAST(((((v0.c3)OR(vt0.c1)))OR(v0.c3)) AS NUMERIC)) ORDER BY vt0.c1, ((v0.c0) ISNULL) COLLATE RTRIM DESC  NULLS LAST, (- (((vt0.c0)*(vt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c3)OR(vt0.c1)))OR(v0.c3)) AS NUMERIC)) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY vt0.c1, ((v0.c0) ISNULL) COLLATE RTRIM DESC  NULLS LAST, (- (((vt0.c0)*(vt0.c2)))) DESC);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (CAST(((((v0.c3)OR(vt0.c1)))OR(v0.c3)) AS NUMERIC)) ORDER BY vt0.c1, ((v0.c0) ISNULL) COLLATE RTRIM DESC  NULLS LAST, (- (((vt0.c0)*(vt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c3)OR(vt0.c1)))OR(v0.c3)) AS NUMERIC)) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY vt0.c1, ((v0.c0) ISNULL) COLLATE RTRIM DESC  NULLS LAST, (- (((vt0.c0)*(vt0.c2)))) DESC);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (CAST(((((v0.c3)OR(vt0.c1)))OR(v0.c3)) AS NUMERIC)) ORDER BY vt0.c1, ((v0.c0) ISNULL) COLLATE RTRIM DESC  NULLS LAST, (- (((vt0.c0)*(vt0.c2)))) DESC;
SELECT ALL * FROM v0, vt0 WHERE ((CASE vt0.c0  WHEN v0.c2 THEN vt0.c0 ELSE v0.c3 END IN (CAST(v0.c1 AS INTEGER)))) ORDER BY (vt0.c1 COLLATE NOCASE IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN v0.c2 THEN vt0.c0 ELSE v0.c3 END IN (CAST(v0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (vt0.c1 COLLATE NOCASE IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE ((CASE vt0.c0  WHEN v0.c2 THEN vt0.c0 ELSE v0.c3 END IN (CAST(v0.c1 AS INTEGER)))) ORDER BY (vt0.c1 COLLATE NOCASE IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN v0.c2 THEN vt0.c0 ELSE v0.c3 END IN (CAST(v0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (vt0.c1 COLLATE NOCASE IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE ((CASE vt0.c0  WHEN v0.c2 THEN vt0.c0 ELSE v0.c3 END IN (CAST(v0.c1 AS INTEGER)))) ORDER BY (vt0.c1 COLLATE NOCASE IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE ((- (CASE WHEN v0.c3 THEN v0.c1 ELSE v0.c3 END))) ORDER BY (((~ (v0.c2)))>>((~ (vt0.c1))))  NULLS FIRST, ((((((v0.c1)AND('UTx')))AND(v0.c4)))GLOB(((v0.c2) NOT BETWEEN (v0.c3) AND (vt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN v0.c3 THEN v0.c1 ELSE v0.c3 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((~ (v0.c2)))>>((~ (vt0.c1))))  NULLS FIRST, ((((((v0.c1)AND('UTx')))AND(v0.c4)))GLOB(((v0.c2) NOT BETWEEN (v0.c3) AND (vt0.c2)))) DESC);
SELECT ALL * FROM vt0, v0 WHERE ((- (CASE WHEN v0.c3 THEN v0.c1 ELSE v0.c3 END))) ORDER BY (((~ (v0.c2)))>>((~ (vt0.c1))))  NULLS FIRST, ((((((v0.c1)AND('UTx')))AND(v0.c4)))GLOB(((v0.c2) NOT BETWEEN (v0.c3) AND (vt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN v0.c3 THEN v0.c1 ELSE v0.c3 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((~ (v0.c2)))>>((~ (vt0.c1))))  NULLS FIRST, ((((((v0.c1)AND('UTx')))AND(v0.c4)))GLOB(((v0.c2) NOT BETWEEN (v0.c3) AND (vt0.c2)))) DESC);
SELECT ALL * FROM vt0, v0 WHERE ((- (CASE WHEN v0.c3 THEN v0.c1 ELSE v0.c3 END))) ORDER BY (((~ (v0.c2)))>>((~ (vt0.c1))))  NULLS FIRST, ((((((v0.c1)AND('UTx')))AND(v0.c4)))GLOB(((v0.c2) NOT BETWEEN (v0.c3) AND (vt0.c2)))) DESC;
SELECT ALL * FROM vt0, v0 WHERE ((v0.c3 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c3 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((v0.c3 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c3 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((v0.c3 COLLATE NOCASE IN ()));
SELECT ALL * FROM vt0 WHERE (((vt0.c1) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) NOTNULL) COLLATE BINARY);
SELECT COUNT(*) FROM v0, vt0 WHERE (TRIM(DISTINCT (NOT (v0.c3)), ((vt0.c0) BETWEEN (vt0.c0) AND (0.7615467736200107)))) ORDER BY ((NULL) NOT NULL)  NULLS LAST, (((v0.c0)IS NOT(vt0.c0)) IN (COALESCE(vt0.c2, v0.c1))) ASC, (vt0.c0 IN (v0.c3)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (NOT (v0.c3)), ((vt0.c0) BETWEEN (vt0.c0) AND (0.7615467736200107)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((NULL) NOT NULL)  NULLS LAST, (((v0.c0)IS NOT(vt0.c0)) IN (COALESCE(vt0.c2, v0.c1))) ASC, (vt0.c0 IN (v0.c3)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, vt0 WHERE (TRIM(DISTINCT (NOT (v0.c3)), ((vt0.c0) BETWEEN (vt0.c0) AND (0.7615467736200107)))) ORDER BY ((NULL) NOT NULL)  NULLS LAST, (((v0.c0)IS NOT(vt0.c0)) IN (COALESCE(vt0.c2, v0.c1))) ASC, (vt0.c0 IN (v0.c3)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (NOT (v0.c3)), ((vt0.c0) BETWEEN (vt0.c0) AND (0.7615467736200107)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((NULL) NOT NULL)  NULLS LAST, (((v0.c0)IS NOT(vt0.c0)) IN (COALESCE(vt0.c2, v0.c1))) ASC, (vt0.c0 IN (v0.c3)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, vt0 WHERE (TRIM(DISTINCT (NOT (v0.c3)), ((vt0.c0) BETWEEN (vt0.c0) AND (0.7615467736200107)))) ORDER BY ((NULL) NOT NULL)  NULLS LAST, (((v0.c0)IS NOT(vt0.c0)) IN (COALESCE(vt0.c2, v0.c1))) ASC, (vt0.c0 IN (v0.c3)) COLLATE RTRIM;
SELECT ALL * FROM v0 WHERE (v0.c4);
SELECT SUM(count) FROM (SELECT ((v0.c4) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c4);
SELECT SUM(count) FROM (SELECT ((v0.c4) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c4);
SELECT * FROM vt0 WHERE (CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 END COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 END COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 END COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 END COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 END COLLATE NOCASE COLLATE BINARY);
SELECT * FROM vt0 WHERE (((('0.802376603432819' IN (vt0.c0)))-((((vt0.c2)) BETWEEN (('In3?!i')) AND ((vt0.c0)))))) ORDER BY ((NULL COLLATE NOCASE)&(TRIM(x'', vt0.c2))), JULIANDAY(((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)), ((vt0.c1)%(vt0.c2)), ((x'')<<(vt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((((('0.802376603432819' IN (vt0.c0)))-((((vt0.c2)) BETWEEN (('In3?!i')) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL COLLATE NOCASE)&(TRIM(x'', vt0.c2))), JULIANDAY(((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)), ((vt0.c1)%(vt0.c2)), ((x'')<<(vt0.c2))) ASC);
SELECT * FROM vt0 WHERE (((('0.802376603432819' IN (vt0.c0)))-((((vt0.c2)) BETWEEN (('In3?!i')) AND ((vt0.c0)))))) ORDER BY ((NULL COLLATE NOCASE)&(TRIM(x'', vt0.c2))), JULIANDAY(((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)), ((vt0.c1)%(vt0.c2)), ((x'')<<(vt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((((('0.802376603432819' IN (vt0.c0)))-((((vt0.c2)) BETWEEN (('In3?!i')) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL COLLATE NOCASE)&(TRIM(x'', vt0.c2))), JULIANDAY(((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)), ((vt0.c1)%(vt0.c2)), ((x'')<<(vt0.c2))) ASC);
SELECT * FROM vt0 WHERE (((('0.802376603432819' IN (vt0.c0)))-((((vt0.c2)) BETWEEN (('In3?!i')) AND ((vt0.c0)))))) ORDER BY ((NULL COLLATE NOCASE)&(TRIM(x'', vt0.c2))), JULIANDAY(((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)), ((vt0.c1)%(vt0.c2)), ((x'')<<(vt0.c2))) ASC;
SELECT * FROM v0 WHERE ((((0.23343389051332586, v0.c1, v0.c1, v0.c4, v0.c0)) BETWEEN ((x'', CASE v0.c2  WHEN v0.c2 THEN v0.c2 END, ((v0.c3)GLOB(v0.c1)), (v0.c0 IN (v0.c4, v0.c0)), (v0.c2 IN ()))) AND ((((v0.c3)>=('')), LIKELIHOOD(DISTINCT v0.c3, 0.2659725102496976), (~ (x'')), v0.c0, (((v0.c1))<((v0.c0))))))) ORDER BY ((((CASE v0.c1  WHEN v0.c3 THEN v0.c0 WHEN v0.c1 THEN 0.08941678196017633 WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END)OR((v0.c2 IN ()))))OR(((161185518)>(v0.c0)))) DESC  NULLS LAST, (((NOT (v0.c2)))>((v0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.23343389051332586, v0.c1, v0.c1, v0.c4, v0.c0)) BETWEEN ((x'', CASE v0.c2  WHEN v0.c2 THEN v0.c2 END, ((v0.c3)GLOB(v0.c1)), (v0.c0 IN (v0.c4, v0.c0)), (v0.c2 IN ()))) AND ((((v0.c3)>=('')), LIKELIHOOD(DISTINCT v0.c3, 0.2659725102496976), (~ (x'')), v0.c0, (((v0.c1))<((v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY ((((CASE v0.c1  WHEN v0.c3 THEN v0.c0 WHEN v0.c1 THEN 0.08941678196017633 WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END)OR((v0.c2 IN ()))))OR(((161185518)>(v0.c0)))) DESC  NULLS LAST, (((NOT (v0.c2)))>((v0.c0 IN ())))  NULLS FIRST);
SELECT * FROM v0 WHERE ((((0.23343389051332586, v0.c1, v0.c1, v0.c4, v0.c0)) BETWEEN ((x'', CASE v0.c2  WHEN v0.c2 THEN v0.c2 END, ((v0.c3)GLOB(v0.c1)), (v0.c0 IN (v0.c4, v0.c0)), (v0.c2 IN ()))) AND ((((v0.c3)>=('')), LIKELIHOOD(DISTINCT v0.c3, 0.2659725102496976), (~ (x'')), v0.c0, (((v0.c1))<((v0.c0))))))) ORDER BY ((((CASE v0.c1  WHEN v0.c3 THEN v0.c0 WHEN v0.c1 THEN 0.08941678196017633 WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END)OR((v0.c2 IN ()))))OR(((161185518)>(v0.c0)))) DESC  NULLS LAST, (((NOT (v0.c2)))>((v0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.23343389051332586, v0.c1, v0.c1, v0.c4, v0.c0)) BETWEEN ((x'', CASE v0.c2  WHEN v0.c2 THEN v0.c2 END, ((v0.c3)GLOB(v0.c1)), (v0.c0 IN (v0.c4, v0.c0)), (v0.c2 IN ()))) AND ((((v0.c3)>=('')), LIKELIHOOD(DISTINCT v0.c3, 0.2659725102496976), (~ (x'')), v0.c0, (((v0.c1))<((v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY ((((CASE v0.c1  WHEN v0.c3 THEN v0.c0 WHEN v0.c1 THEN 0.08941678196017633 WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END)OR((v0.c2 IN ()))))OR(((161185518)>(v0.c0)))) DESC  NULLS LAST, (((NOT (v0.c2)))>((v0.c0 IN ())))  NULLS FIRST);
SELECT * FROM v0 WHERE ((((0.23343389051332586, v0.c1, v0.c1, v0.c4, v0.c0)) BETWEEN ((x'', CASE v0.c2  WHEN v0.c2 THEN v0.c2 END, ((v0.c3)GLOB(v0.c1)), (v0.c0 IN (v0.c4, v0.c0)), (v0.c2 IN ()))) AND ((((v0.c3)>=('')), LIKELIHOOD(DISTINCT v0.c3, 0.2659725102496976), (~ (x'')), v0.c0, (((v0.c1))<((v0.c0))))))) ORDER BY ((((CASE v0.c1  WHEN v0.c3 THEN v0.c0 WHEN v0.c1 THEN 0.08941678196017633 WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END)OR((v0.c2 IN ()))))OR(((161185518)>(v0.c0)))) DESC  NULLS LAST, (((NOT (v0.c2)))>((v0.c0 IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(NULL)))OR(v0.c4)))-(((((v0.c4)AND(v0.c1)))AND(v0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(NULL)))OR(v0.c4)))-(((((v0.c4)AND(v0.c1)))AND(v0.c3))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(NULL)))OR(v0.c4)))-(((((v0.c4)AND(v0.c1)))AND(v0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(NULL)))OR(v0.c4)))-(((((v0.c4)AND(v0.c1)))AND(v0.c3))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(NULL)))OR(v0.c4)))-(((((v0.c4)AND(v0.c1)))AND(v0.c3)))));
SELECT * FROM vt0, v0 WHERE ((+ (x'665c')));
SELECT SUM(count) FROM (SELECT ALL (((+ (x'665c'))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((+ (x'665c')));
SELECT SUM(count) FROM (SELECT ALL (((+ (x'665c'))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((+ (x'665c')));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)<>(vt0.c1)))AND((((v0.c2))>((v0.c2)))))) ORDER BY '1809722077' DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<>(vt0.c1)))AND((((v0.c2))>((v0.c2)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY '1809722077' DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)<>(vt0.c1)))AND((((v0.c2))>((v0.c2)))))) ORDER BY '1809722077' DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<>(vt0.c1)))AND((((v0.c2))>((v0.c2)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY '1809722077' DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)<>(vt0.c1)))AND((((v0.c2))>((v0.c2)))))) ORDER BY '1809722077' DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c2)OR(vt0.c1)))OR(NULL)))OR((- (1.65520033E8))))) ORDER BY (NOT ((vt0.c2 IN ())))  NULLS FIRST, ((NULL) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (vt0.c2))  NULLS FIRST, ((((ABS(vt0.c2))AND((((vt0.c0))<=((vt0.c2))))))OR(TRIM(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c2)OR(vt0.c1)))OR(NULL)))OR((- (1.65520033E8))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((vt0.c2 IN ())))  NULLS FIRST, ((NULL) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (vt0.c2))  NULLS FIRST, ((((ABS(vt0.c2))AND((((vt0.c0))<=((vt0.c2))))))OR(TRIM(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c2)OR(vt0.c1)))OR(NULL)))OR((- (1.65520033E8))))) ORDER BY (NOT ((vt0.c2 IN ())))  NULLS FIRST, ((NULL) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (vt0.c2))  NULLS FIRST, ((((ABS(vt0.c2))AND((((vt0.c0))<=((vt0.c2))))))OR(TRIM(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c2)OR(vt0.c1)))OR(NULL)))OR((- (1.65520033E8))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((vt0.c2 IN ())))  NULLS FIRST, ((NULL) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (vt0.c2))  NULLS FIRST, ((((ABS(vt0.c2))AND((((vt0.c0))<=((vt0.c2))))))OR(TRIM(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c2)OR(vt0.c1)))OR(NULL)))OR((- (1.65520033E8))))) ORDER BY (NOT ((vt0.c2 IN ())))  NULLS FIRST, ((NULL) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (vt0.c2))  NULLS FIRST, ((((ABS(vt0.c2))AND((((vt0.c0))<=((vt0.c2))))))OR(TRIM(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)IS NOT(vt0.c0)) IN ())) ORDER BY (((vt0.c0 COLLATE NOCASE))>((0.8462590598859289))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)IS NOT(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 COLLATE NOCASE))>((0.8462590598859289))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)IS NOT(vt0.c0)) IN ())) ORDER BY (((vt0.c0 COLLATE NOCASE))>((0.8462590598859289))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)IS NOT(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 COLLATE NOCASE))>((0.8462590598859289))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)IS NOT(vt0.c0)) IN ())) ORDER BY (((vt0.c0 COLLATE NOCASE))>((0.8462590598859289))) DESC;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2)>>(v0.c2)) IN (CASE v0.c4  WHEN v0.c2 THEN v0.c4 ELSE v0.c4 END, ((v0.c3)-(v0.c4))))) ORDER BY (((((v0.c4, '', 1277137800))<((v0.c3, v0.c4, v0.c3))))*((- (v0.c3)))) ASC, (((v0.c0, v0.c0, v0.c1, v0.c4, '')) BETWEEN ((((v0.c0) ISNULL), v0.c4 COLLATE BINARY, CAST(v0.c1 AS NUMERIC), (+ (v0.c1)), v0.c0)) AND ((CAST(v0.c4 AS INTEGER), ((((v0.c1)AND(v0.c0)))OR(v0.c2)), CAST(v0.c2 AS TEXT), ((v0.c1)>=('WZc%')), '-2082790640')));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)>>(v0.c2)) IN (CASE v0.c4  WHEN v0.c2 THEN v0.c4 ELSE v0.c4 END, ((v0.c3)-(v0.c4))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c4, '', 1277137800))<((v0.c3, v0.c4, v0.c3))))*((- (v0.c3)))) ASC, (((v0.c0, v0.c0, v0.c1, v0.c4, '')) BETWEEN ((((v0.c0) ISNULL), v0.c4 COLLATE BINARY, CAST(v0.c1 AS NUMERIC), (+ (v0.c1)), v0.c0)) AND ((CAST(v0.c4 AS INTEGER), ((((v0.c1)AND(v0.c0)))OR(v0.c2)), CAST(v0.c2 AS TEXT), ((v0.c1)>=('WZc%')), '-2082790640'))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2)>>(v0.c2)) IN (CASE v0.c4  WHEN v0.c2 THEN v0.c4 ELSE v0.c4 END, ((v0.c3)-(v0.c4))))) ORDER BY (((((v0.c4, '', 1277137800))<((v0.c3, v0.c4, v0.c3))))*((- (v0.c3)))) ASC, (((v0.c0, v0.c0, v0.c1, v0.c4, '')) BETWEEN ((((v0.c0) ISNULL), v0.c4 COLLATE BINARY, CAST(v0.c1 AS NUMERIC), (+ (v0.c1)), v0.c0)) AND ((CAST(v0.c4 AS INTEGER), ((((v0.c1)AND(v0.c0)))OR(v0.c2)), CAST(v0.c2 AS TEXT), ((v0.c1)>=('WZc%')), '-2082790640')));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)>>(v0.c2)) IN (CASE v0.c4  WHEN v0.c2 THEN v0.c4 ELSE v0.c4 END, ((v0.c3)-(v0.c4))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c4, '', 1277137800))<((v0.c3, v0.c4, v0.c3))))*((- (v0.c3)))) ASC, (((v0.c0, v0.c0, v0.c1, v0.c4, '')) BETWEEN ((((v0.c0) ISNULL), v0.c4 COLLATE BINARY, CAST(v0.c1 AS NUMERIC), (+ (v0.c1)), v0.c0)) AND ((CAST(v0.c4 AS INTEGER), ((((v0.c1)AND(v0.c0)))OR(v0.c2)), CAST(v0.c2 AS TEXT), ((v0.c1)>=('WZc%')), '-2082790640'))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2)>>(v0.c2)) IN (CASE v0.c4  WHEN v0.c2 THEN v0.c4 ELSE v0.c4 END, ((v0.c3)-(v0.c4))))) ORDER BY (((((v0.c4, '', 1277137800))<((v0.c3, v0.c4, v0.c3))))*((- (v0.c3)))) ASC, (((v0.c0, v0.c0, v0.c1, v0.c4, '')) BETWEEN ((((v0.c0) ISNULL), v0.c4 COLLATE BINARY, CAST(v0.c1 AS NUMERIC), (+ (v0.c1)), v0.c0)) AND ((CAST(v0.c4 AS INTEGER), ((((v0.c1)AND(v0.c0)))OR(v0.c2)), CAST(v0.c2 AS TEXT), ((v0.c1)>=('WZc%')), '-2082790640')));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((v0.c1) BETWEEN (((v0.c1) NOT NULL)) AND (v0.c2 COLLATE BINARY)) WHERE (ABS(DISTINCT (- (0.30400779908249176))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (- (0.30400779908249176)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((v0.c1) BETWEEN (((v0.c1) NOT NULL)) AND (v0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((v0.c1) BETWEEN (((v0.c1) NOT NULL)) AND (v0.c2 COLLATE BINARY)) WHERE (ABS(DISTINCT (- (0.30400779908249176))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (- (0.30400779908249176)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((v0.c1) BETWEEN (((v0.c1) NOT NULL)) AND (v0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((v0.c1) BETWEEN (((v0.c1) NOT NULL)) AND (v0.c2 COLLATE BINARY)) WHERE (ABS(DISTINCT (- (0.30400779908249176))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1))=((vt0.c1))))OR((((vt0.c2))=((vt0.c2)))))) ORDER BY x'' DESC  NULLS LAST, ((vt0.c2 IN (vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))=((vt0.c1))))OR((((vt0.c2))==((vt0.c2)))))) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC  NULLS LAST, ((vt0.c2 IN (vt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1))=((vt0.c1))))OR((((vt0.c2))=((vt0.c2)))))) ORDER BY x'' DESC  NULLS LAST, ((vt0.c2 IN (vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))=((vt0.c1))))OR((((vt0.c2))==((vt0.c2)))))) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC  NULLS LAST, ((vt0.c2 IN (vt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1))=((vt0.c1))))OR((((vt0.c2))=((vt0.c2)))))) ORDER BY x'' DESC  NULLS LAST, ((vt0.c2 IN (vt0.c1)) IN ());
SELECT * FROM vt0, v0 WHERE (CASE ((v0.c4)+('}Mp꾧&ybc'))  WHEN -2092402024 THEN CAST(v0.c2 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c4)+('}Mp꾧&ybc'))  WHEN -2092402024 THEN CAST(v0.c2 AS INTEGER) END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE ((v0.c4)+('}Mp꾧&ybc'))  WHEN -2092402024 THEN CAST(v0.c2 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c4)+('}Mp꾧&ybc'))  WHEN -2092402024 THEN CAST(v0.c2 AS INTEGER) END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE ((v0.c4)+('}Mp꾧&ybc'))  WHEN -2092402024 THEN CAST(v0.c2 AS INTEGER) END);
SELECT * FROM vt0 WHERE ((((vt0.c2))<>((((vt0.c2) NOTNULL))))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT (((((vt0.c2))!=((((vt0.c2) NOTNULL))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT * FROM vt0 WHERE ((((vt0.c2))<>((((vt0.c2) NOTNULL))))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT (((((vt0.c2))!=((((vt0.c2) NOTNULL))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT * FROM vt0 WHERE ((((vt0.c2))<>((((vt0.c2) NOTNULL))))) ORDER BY vt0.c1;
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c4 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c4 IN ())) IS FALSE)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c4 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c4 IN ())) IS FALSE)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c4 IN ())) IS FALSE));
SELECT * FROM v0 WHERE (CASE WHEN TRIM(v0.c3) THEN (((v0.c3)) BETWEEN ((v0.c3)) AND ((v0.c1))) ELSE CAST(v0.c3 AS NUMERIC) END) ORDER BY (((2.48783952E8)) NOT BETWEEN ((v0.c3 COLLATE BINARY)) AND ((v0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(v0.c3) THEN (((v0.c3)) BETWEEN ((v0.c3)) AND ((v0.c1))) ELSE CAST(v0.c3 AS NUMERIC) END) IS TRUE)  as count FROM v0 ORDER BY (((2.48783952E8)) NOT BETWEEN ((v0.c3 COLLATE BINARY)) AND ((v0.c2))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (CASE WHEN TRIM(v0.c3) THEN (((v0.c3)) BETWEEN ((v0.c3)) AND ((v0.c1))) ELSE CAST(v0.c3 AS NUMERIC) END) ORDER BY (((2.48783952E8)) NOT BETWEEN ((v0.c3 COLLATE BINARY)) AND ((v0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(v0.c3) THEN (((v0.c3)) BETWEEN ((v0.c3)) AND ((v0.c1))) ELSE CAST(v0.c3 AS NUMERIC) END) IS TRUE)  as count FROM v0 ORDER BY (((2.48783952E8)) NOT BETWEEN ((v0.c3 COLLATE BINARY)) AND ((v0.c2))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (CASE WHEN TRIM(v0.c3) THEN (((v0.c3)) BETWEEN ((v0.c3)) AND ((v0.c1))) ELSE CAST(v0.c3 AS NUMERIC) END) ORDER BY (((2.48783952E8)) NOT BETWEEN ((v0.c3 COLLATE BINARY)) AND ((v0.c2))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c3)==(0.38080228420676476))) IS TRUE)) ORDER BY CAST((vt0.c2 IN ()) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c3)=(0.38080228420676476))) IS TRUE)) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((vt0.c2 IN ()) AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c3)==(0.38080228420676476))) IS TRUE)) ORDER BY CAST((vt0.c2 IN ()) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c3)=(0.38080228420676476))) IS TRUE)) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((vt0.c2 IN ()) AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c3)==(0.38080228420676476))) IS TRUE)) ORDER BY CAST((vt0.c2 IN ()) AS INTEGER) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c2)<=(vt0.c2)) COLLATE RTRIM) ORDER BY ((PRINTF(vt0.c0))&((((vt0.c0)) NOT BETWEEN (('744966678')) AND ((vt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2)<=(vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((PRINTF(vt0.c0))&((((vt0.c0)) NOT BETWEEN (('744966678')) AND ((vt0.c2))))) DESC);
SELECT * FROM vt0 WHERE (((vt0.c2)<=(vt0.c2)) COLLATE RTRIM) ORDER BY ((PRINTF(vt0.c0))&((((vt0.c0)) NOT BETWEEN (('744966678')) AND ((vt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2)<=(vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((PRINTF(vt0.c0))&((((vt0.c0)) NOT BETWEEN (('744966678')) AND ((vt0.c2))))) DESC);
SELECT * FROM vt0 WHERE (((vt0.c2)<=(vt0.c2)) COLLATE RTRIM) ORDER BY ((PRINTF(vt0.c0))&((((vt0.c0)) NOT BETWEEN (('744966678')) AND ((vt0.c2))))) DESC;
SELECT * FROM v0, vt0 WHERE (v0.c1) ORDER BY NULLIF(DISTINCT (NOT (v0.c3)), LIKELIHOOD(vt0.c1, 0.338555266409978)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, vt0 ORDER BY NULLIF(DISTINCT (NOT (v0.c3)), LIKELIHOOD(vt0.c1, 0.338555266409978)) ASC);
SELECT * FROM v0, vt0 WHERE (v0.c1) ORDER BY NULLIF(DISTINCT (NOT (v0.c3)), LIKELIHOOD(vt0.c1, 0.338555266409978)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, vt0 ORDER BY NULLIF(DISTINCT (NOT (v0.c3)), LIKELIHOOD(vt0.c1, 0.338555266409978)) ASC);
SELECT * FROM v0, vt0 WHERE (v0.c1) ORDER BY NULLIF(DISTINCT (NOT (v0.c3)), LIKELIHOOD(vt0.c1, 0.338555266409978)) ASC;
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0))>((((v0.c1)==(v0.c1))))) WHERE (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN '-1065277018' ELSE CAST(v0.c4 AS TEXT) END) ORDER BY (((vt0.c0)<>(v0.c3)) IN (v0.c3)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS INTEGER) THEN '-1065277018' ELSE CAST(v0.c4 AS TEXT) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0))>((((v0.c1)=(v0.c1))))) ORDER BY (((vt0.c0)!=(v0.c3)) IN (v0.c3)) DESC);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0))>((((v0.c1)==(v0.c1))))) WHERE (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN '-1065277018' ELSE CAST(v0.c4 AS TEXT) END) ORDER BY (((vt0.c0)<>(v0.c3)) IN (v0.c3)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS INTEGER) THEN '-1065277018' ELSE CAST(v0.c4 AS TEXT) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0))>((((v0.c1)=(v0.c1))))) ORDER BY (((vt0.c0)!=(v0.c3)) IN (v0.c3)) DESC);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0))>((((v0.c1)==(v0.c1))))) WHERE (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN '-1065277018' ELSE CAST(v0.c4 AS TEXT) END) ORDER BY (((vt0.c0)<>(v0.c3)) IN (v0.c3)) DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY vt0.c1 ASC;
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(v0.c4 AS REAL) COLLATE RTRIM) ORDER BY CASE WHEN (~ (v0.c4)) THEN vt0.c2 WHEN ((vt0.c1)<(vt0.c1)) THEN NULL WHEN ((vt0.c1)&(v0.c2)) THEN v0.c2 COLLATE RTRIM ELSE ((((((((v0.c3)AND(vt0.c2)))AND(vt0.c0)))OR(vt0.c0)))AND(x'')) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c4 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE WHEN (~ (v0.c4)) THEN vt0.c2 WHEN ((vt0.c1)<(vt0.c1)) THEN NULL WHEN ((vt0.c1)&(v0.c2)) THEN v0.c2 COLLATE RTRIM ELSE ((((((((v0.c3)AND(vt0.c2)))AND(vt0.c0)))OR(vt0.c0)))AND(x'')) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(v0.c4 AS REAL) COLLATE RTRIM) ORDER BY CASE WHEN (~ (v0.c4)) THEN vt0.c2 WHEN ((vt0.c1)<(vt0.c1)) THEN NULL WHEN ((vt0.c1)&(v0.c2)) THEN v0.c2 COLLATE RTRIM ELSE ((((((((v0.c3)AND(vt0.c2)))AND(vt0.c0)))OR(vt0.c0)))AND(x'')) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c4 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE WHEN (~ (v0.c4)) THEN vt0.c2 WHEN ((vt0.c1)<(vt0.c1)) THEN NULL WHEN ((vt0.c1)&(v0.c2)) THEN v0.c2 COLLATE RTRIM ELSE ((((((((v0.c3)AND(vt0.c2)))AND(vt0.c0)))OR(vt0.c0)))AND(x'')) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(v0.c4 AS REAL) COLLATE RTRIM) ORDER BY CASE WHEN (~ (v0.c4)) THEN vt0.c2 WHEN ((vt0.c1)<(vt0.c1)) THEN NULL WHEN ((vt0.c1)&(v0.c2)) THEN v0.c2 COLLATE RTRIM ELSE ((((((((v0.c3)AND(vt0.c2)))AND(vt0.c0)))OR(vt0.c0)))AND(x'')) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(((v0.c4) NOT NULL) AS BLOB)) ORDER BY CAST((v0.c4 IN ()) AS REAL)  NULLS LAST, ((v0.c0 COLLATE BINARY)OR(v0.c4)) DESC  NULLS LAST, CASE ((v0.c4) IS TRUE)  WHEN v0.c2 COLLATE RTRIM THEN (vt0.c1 IN (v0.c0)) ELSE CASE WHEN vt0.c2 THEN v0.c4 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c4) NOT NULL) AS BLOB)) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((v0.c4 IN ()) AS REAL)  NULLS LAST, ((v0.c0 COLLATE BINARY)OR(v0.c4)) DESC  NULLS LAST, CASE ((v0.c4) IS TRUE)  WHEN v0.c2 COLLATE RTRIM THEN (vt0.c1 IN (v0.c0)) ELSE CASE WHEN vt0.c2 THEN v0.c4 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(((v0.c4) NOT NULL) AS BLOB)) ORDER BY CAST((v0.c4 IN ()) AS REAL)  NULLS LAST, ((v0.c0 COLLATE BINARY)OR(v0.c4)) DESC  NULLS LAST, CASE ((v0.c4) IS TRUE)  WHEN v0.c2 COLLATE RTRIM THEN (vt0.c1 IN (v0.c0)) ELSE CASE WHEN vt0.c2 THEN v0.c4 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c4) NOT NULL) AS BLOB)) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((v0.c4 IN ()) AS REAL)  NULLS LAST, ((v0.c0 COLLATE BINARY)OR(v0.c4)) DESC  NULLS LAST, CASE ((v0.c4) IS TRUE)  WHEN v0.c2 COLLATE RTRIM THEN (vt0.c1 IN (v0.c0)) ELSE CASE WHEN vt0.c2 THEN v0.c4 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(((v0.c4) NOT NULL) AS BLOB)) ORDER BY CAST((v0.c4 IN ()) AS REAL)  NULLS LAST, ((v0.c0 COLLATE BINARY)OR(v0.c4)) DESC  NULLS LAST, CASE ((v0.c4) IS TRUE)  WHEN v0.c2 COLLATE RTRIM THEN (vt0.c1 IN (v0.c0)) ELSE CASE WHEN vt0.c2 THEN v0.c4 END END  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0) IS TRUE) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((((vt0.c1)) NOT BETWEEN (('-1583999682')) AND ((vt0.c2)))))) ORDER BY (+ ('[G'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c1)) NOT BETWEEN (('-1583999682')) AND ((vt0.c2)))))) IS TRUE)  as count FROM vt0 ORDER BY (+ ('[G'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((((vt0.c1)) NOT BETWEEN (('-1583999682')) AND ((vt0.c2)))))) ORDER BY (+ ('[G'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c1)) NOT BETWEEN (('-1583999682')) AND ((vt0.c2)))))) IS TRUE)  as count FROM vt0 ORDER BY (+ ('[G'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((((vt0.c1)) NOT BETWEEN (('-1583999682')) AND ((vt0.c2)))))) ORDER BY (+ ('[G'))  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE ((((v0.c2)+(vt0.c0)) IN (((((((((v0.c3)AND(0.2693178961895172)))OR(v0.c2)))OR(vt0.c1)))OR(v0.c4)))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)+(vt0.c0)) IN (((((((((v0.c3)AND(0.2693178961895172)))OR(v0.c2)))OR(vt0.c1)))OR(v0.c4))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((v0.c2)+(vt0.c0)) IN (((((((((v0.c3)AND(0.2693178961895172)))OR(v0.c2)))OR(vt0.c1)))OR(v0.c4)))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)+(vt0.c0)) IN (((((((((v0.c3)AND(0.2693178961895172)))OR(v0.c2)))OR(vt0.c1)))OR(v0.c4))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((v0.c2)+(vt0.c0)) IN (((((((((v0.c3)AND(0.2693178961895172)))OR(v0.c2)))OR(vt0.c1)))OR(v0.c4)))));
SELECT * FROM v0, vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY CAST(v0.c4 COLLATE BINARY AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(v0.c4 COLLATE BINARY AS NUMERIC)  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY CAST(v0.c4 COLLATE BINARY AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(v0.c4 COLLATE BINARY AS NUMERIC)  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY CAST(v0.c4 COLLATE BINARY AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (ABS(CHAR('1629983451'))) ORDER BY CASE WHEN ((((((((v0.c0)AND(vt0.c0)))AND(0x1d7cd8ed)))AND(vt0.c1)))AND(v0.c3)) THEN (((vt0.c1, v0.c4, x'')) BETWEEN ((vt0.c1, vt0.c0, v0.c1)) AND ((v0.c3, v0.c4, v0.c4))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(CHAR('1629983451'))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((((((((v0.c0)AND(vt0.c0)))AND(0X1d7cd8ed)))AND(vt0.c1)))AND(v0.c3)) THEN (((vt0.c1, v0.c4, x'')) BETWEEN ((vt0.c1, vt0.c0, v0.c1)) AND ((v0.c3, v0.c4, v0.c4))) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (ABS(CHAR('1629983451'))) ORDER BY CASE WHEN ((((((((v0.c0)AND(vt0.c0)))AND(0x1d7cd8ed)))AND(vt0.c1)))AND(v0.c3)) THEN (((vt0.c1, v0.c4, x'')) BETWEEN ((vt0.c1, vt0.c0, v0.c1)) AND ((v0.c3, v0.c4, v0.c4))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(CHAR('1629983451'))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((((((((v0.c0)AND(vt0.c0)))AND(0X1d7cd8ed)))AND(vt0.c1)))AND(v0.c3)) THEN (((vt0.c1, v0.c4, x'')) BETWEEN ((vt0.c1, vt0.c0, v0.c1)) AND ((v0.c3, v0.c4, v0.c4))) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (ABS(CHAR('1629983451'))) ORDER BY CASE WHEN ((((((((v0.c0)AND(vt0.c0)))AND(0x1d7cd8ed)))AND(vt0.c1)))AND(v0.c3)) THEN (((vt0.c1, v0.c4, x'')) BETWEEN ((vt0.c1, vt0.c0, v0.c1)) AND ((v0.c3, v0.c4, v0.c4))) END  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (((((vt0.c1) ISNULL))>=(CASE NULL  WHEN v0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN 2124700862 ELSE v0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) ISNULL))>=(CASE NULL  WHEN v0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN 2124700862 ELSE v0.c4 END))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((vt0.c1) ISNULL))>=(CASE NULL  WHEN v0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN 2124700862 ELSE v0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) ISNULL))>=(CASE NULL  WHEN v0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN 2124700862 ELSE v0.c4 END))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((vt0.c1) ISNULL))>=(CASE NULL  WHEN v0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN 2124700862 ELSE v0.c4 END)));
SELECT * FROM vt0 WHERE ((((~ (vt0.c0))) BETWEEN (rtreenode(vt0.c2, vt0.c0)) AND (HEX(DISTINCT vt0.c2)))) ORDER BY (((vt0.c2)) NOT BETWEEN ((((vt0.c2) IS TRUE))) AND ((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) BETWEEN (rtreenode(vt0.c2, vt0.c0)) AND (HEX(DISTINCT vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2)) NOT BETWEEN ((((vt0.c2) IS TRUE))) AND ((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))));
SELECT * FROM vt0 WHERE ((((~ (vt0.c0))) BETWEEN (rtreenode(vt0.c2, vt0.c0)) AND (HEX(DISTINCT vt0.c2)))) ORDER BY (((vt0.c2)) NOT BETWEEN ((((vt0.c2) IS TRUE))) AND ((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) BETWEEN (rtreenode(vt0.c2, vt0.c0)) AND (HEX(DISTINCT vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2)) NOT BETWEEN ((((vt0.c2) IS TRUE))) AND ((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))));
SELECT * FROM vt0 WHERE ((((~ (vt0.c0))) BETWEEN (rtreenode(vt0.c2, vt0.c0)) AND (HEX(DISTINCT vt0.c2)))) ORDER BY (((vt0.c2)) NOT BETWEEN ((((vt0.c2) IS TRUE))) AND ((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN (((vt0.c1 IN (vt0.c0)), NULL, (vt0.c0 IN ()))) AND ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)), HEX(vt0.c1), vt0.c1 COLLATE NOCASE)))) ORDER BY (((vt0.c2))==((((vt0.c0)&(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN (((vt0.c1 IN (vt0.c0)), NULL, (vt0.c0 IN ()))) AND ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)), HEX(vt0.c1), vt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2))==((((vt0.c0)&(vt0.c1))))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN (((vt0.c1 IN (vt0.c0)), NULL, (vt0.c0 IN ()))) AND ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)), HEX(vt0.c1), vt0.c1 COLLATE NOCASE)))) ORDER BY (((vt0.c2))==((((vt0.c0)&(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN (((vt0.c1 IN (vt0.c0)), NULL, (vt0.c0 IN ()))) AND ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)), HEX(vt0.c1), vt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2))==((((vt0.c0)&(vt0.c1))))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN (((vt0.c1 IN (vt0.c0)), NULL, (vt0.c0 IN ()))) AND ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)), HEX(vt0.c1), vt0.c1 COLLATE NOCASE)))) ORDER BY (((vt0.c2))==((((vt0.c0)&(vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0))=((vt0.c2))) IN (((vt0.c0)>=(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0))=((vt0.c2))) IN (((vt0.c0)>=(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0))=((vt0.c2))) IN (((vt0.c0)>=(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0))=((vt0.c2))) IN (((vt0.c0)>=(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0))=((vt0.c2))) IN (((vt0.c0)>=(vt0.c2)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((TYPEOF(DISTINCT v0.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((TYPEOF(DISTINCT v0.c1) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((TYPEOF(DISTINCT v0.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((TYPEOF(DISTINCT v0.c1) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((TYPEOF(DISTINCT v0.c1) IN ()));
SELECT * FROM vt0 WHERE ((((293645084 IN ()))<>(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS REAL), ((vt0.c1) NOT NULL) COLLATE NOCASE  NULLS LAST, json_array((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), ((vt0.c0) ISNULL)) DESC;
SELECT SUM(count) FROM (SELECT (((((293645084 IN ()))<>(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE RTRIM AS REAL), ((vt0.c1) NOT NULL) COLLATE NOCASE  NULLS LAST, json_array((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), ((vt0.c0) ISNULL)) DESC);
SELECT * FROM vt0 WHERE ((((293645084 IN ()))<>(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS REAL), ((vt0.c1) NOT NULL) COLLATE NOCASE  NULLS LAST, json_array((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), ((vt0.c0) ISNULL)) DESC;
SELECT SUM(count) FROM (SELECT (((((293645084 IN ()))<>(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE RTRIM AS REAL), ((vt0.c1) NOT NULL) COLLATE NOCASE  NULLS LAST, json_array((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), ((vt0.c0) ISNULL)) DESC);
SELECT * FROM vt0 WHERE ((((293645084 IN ()))<>(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS REAL), ((vt0.c1) NOT NULL) COLLATE NOCASE  NULLS LAST, json_array((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), ((vt0.c0) ISNULL)) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT ((NOT (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT ((NOT (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT ((NOT (v0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END))>((CAST(vt0.c0 AS BLOB))))) ORDER BY ((NULL) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END))>((CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END))>((CAST(vt0.c0 AS BLOB))))) ORDER BY ((NULL) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END))>((CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END))>((CAST(vt0.c0 AS BLOB))))) ORDER BY ((NULL) NOT NULL) ASC;
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE TRIM(DISTINCT -1.943986072E9)  WHEN CASE WHEN v0.c4 THEN v0.c1 ELSE v0.c2 END THEN NULL WHEN vt0.c2 COLLATE NOCASE THEN ((v0.c2) NOTNULL) WHEN vt0.c2 COLLATE NOCASE THEN (NULL IN ()) ELSE SQLITE_VERSION() END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(DISTINCT -1.943986072E9)  WHEN CASE WHEN v0.c4 THEN v0.c1 ELSE v0.c2 END THEN NULL WHEN vt0.c2 COLLATE NOCASE THEN ((v0.c2) NOTNULL) WHEN vt0.c2 COLLATE NOCASE THEN (NULL IN ()) ELSE SQLITE_VERSION() END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE TRIM(DISTINCT -1.943986072E9)  WHEN CASE WHEN v0.c4 THEN v0.c1 ELSE v0.c2 END THEN NULL WHEN vt0.c2 COLLATE NOCASE THEN ((v0.c2) NOTNULL) WHEN vt0.c2 COLLATE NOCASE THEN (NULL IN ()) ELSE SQLITE_VERSION() END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(DISTINCT -1.943986072E9)  WHEN CASE WHEN v0.c4 THEN v0.c1 ELSE v0.c2 END THEN NULL WHEN vt0.c2 COLLATE NOCASE THEN ((v0.c2) NOTNULL) WHEN vt0.c2 COLLATE NOCASE THEN (NULL IN ()) ELSE SQLITE_VERSION() END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE TRIM(DISTINCT -1.943986072E9)  WHEN CASE WHEN v0.c4 THEN v0.c1 ELSE v0.c2 END THEN NULL WHEN vt0.c2 COLLATE NOCASE THEN ((v0.c2) NOTNULL) WHEN vt0.c2 COLLATE NOCASE THEN (NULL IN ()) ELSE SQLITE_VERSION() END);
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c2 COLLATE RTRIM)<=(((v0.c4) NOT BETWEEN (vt0.c1) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE RTRIM)<=(((v0.c4) NOT BETWEEN (vt0.c1) AND (vt0.c2))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c2 COLLATE RTRIM)<=(((v0.c4) NOT BETWEEN (vt0.c1) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE RTRIM)<=(((v0.c4) NOT BETWEEN (vt0.c1) AND (vt0.c2))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c2 COLLATE RTRIM)<=(((v0.c4) NOT BETWEEN (vt0.c1) AND (vt0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE (((LOWER(vt0.c1))=((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt0.c1))==((~ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((LOWER(vt0.c1))=((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt0.c1))==((~ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((LOWER(vt0.c1))=((~ (vt0.c1)))));
SELECT COUNT(*) FROM v0 WHERE ((+ (((x'')IS NOT(v0.c1))))) ORDER BY (('1057774954') ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((x'')IS NOT(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY (('1057774954') ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((+ (((x'')IS NOT(v0.c1))))) ORDER BY (('1057774954') ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((x'')IS NOT(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY (('1057774954') ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((+ (((x'')IS NOT(v0.c1))))) ORDER BY (('1057774954') ISNULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN LENGTH(v0.c2) THEN (('~PhW6(Dr')IS NOT(v0.c2)) ELSE v0.c2 COLLATE BINARY END) ORDER BY NULL  NULLS LAST, CASE WHEN ((('-906353577'))=((v0.c4))) THEN vt0.c0 COLLATE RTRIM END, CASE ('37973720' IN ())  WHEN (v0.c1 IN ()) THEN ((((-5.8720309E7)OR(NULL)))OR(v0.c1)) WHEN v0.c3 COLLATE NOCASE THEN ((vt0.c2)IS(v0.c2)) WHEN ((v0.c1) IS FALSE) THEN (~ (vt0.c1)) ELSE v0.c0 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LENGTH(v0.c2) THEN (('~PhW6(Dr')IS NOT(v0.c2)) ELSE v0.c2 COLLATE BINARY END) IS TRUE)  as count FROM v0, vt0 ORDER BY NULL  NULLS LAST, CASE WHEN ((('-906353577'))=((v0.c4))) THEN vt0.c0 COLLATE RTRIM END, CASE ('37973720' IN ())  WHEN (v0.c1 IN ()) THEN ((((-5.8720309E7)OR(NULL)))OR(v0.c1)) WHEN v0.c3 COLLATE NOCASE THEN ((vt0.c2)IS(v0.c2)) WHEN ((v0.c1) IS FALSE) THEN (~ (vt0.c1)) ELSE v0.c0 COLLATE RTRIM END ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN LENGTH(v0.c2) THEN (('~PhW6(Dr')IS NOT(v0.c2)) ELSE v0.c2 COLLATE BINARY END) ORDER BY NULL  NULLS LAST, CASE WHEN ((('-906353577'))=((v0.c4))) THEN vt0.c0 COLLATE RTRIM END, CASE ('37973720' IN ())  WHEN (v0.c1 IN ()) THEN ((((-5.8720309E7)OR(NULL)))OR(v0.c1)) WHEN v0.c3 COLLATE NOCASE THEN ((vt0.c2)IS(v0.c2)) WHEN ((v0.c1) IS FALSE) THEN (~ (vt0.c1)) ELSE v0.c0 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LENGTH(v0.c2) THEN (('~PhW6(Dr')IS NOT(v0.c2)) ELSE v0.c2 COLLATE BINARY END) IS TRUE)  as count FROM v0, vt0 ORDER BY NULL  NULLS LAST, CASE WHEN ((('-906353577'))=((v0.c4))) THEN vt0.c0 COLLATE RTRIM END, CASE ('37973720' IN ())  WHEN (v0.c1 IN ()) THEN ((((-5.8720309E7)OR(NULL)))OR(v0.c1)) WHEN v0.c3 COLLATE NOCASE THEN ((vt0.c2)IS(v0.c2)) WHEN ((v0.c1) IS FALSE) THEN (~ (vt0.c1)) ELSE v0.c0 COLLATE RTRIM END ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN LENGTH(v0.c2) THEN (('~PhW6(Dr')IS NOT(v0.c2)) ELSE v0.c2 COLLATE BINARY END) ORDER BY NULL  NULLS LAST, CASE WHEN ((('-906353577'))=((v0.c4))) THEN vt0.c0 COLLATE RTRIM END, CASE ('37973720' IN ())  WHEN (v0.c1 IN ()) THEN ((((-5.8720309E7)OR(NULL)))OR(v0.c1)) WHEN v0.c3 COLLATE NOCASE THEN ((vt0.c2)IS(v0.c2)) WHEN ((v0.c1) IS FALSE) THEN (~ (vt0.c1)) ELSE v0.c0 COLLATE RTRIM END ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c1)))*(((v0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c1)))*(((v0.c1) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c1)))*(((v0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c1)))*(((v0.c1) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c1)))*(((v0.c1) ISNULL))));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (-207904656)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC)) BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (-207904656))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (-207904656)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC)) BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (-207904656))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (-207904656)));
SELECT * FROM v0 WHERE (v0.c4);
SELECT SUM(count) FROM (SELECT ((v0.c4) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c4);
SELECT SUM(count) FROM (SELECT ((v0.c4) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c4);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) NOT NULL));
SELECT ALL * FROM vt0 WHERE ('1632545932') ORDER BY CAST(vt0.c2 AS TEXT) DESC, (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (('1632545932') IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c2 AS TEXT) DESC, (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE ('1632545932') ORDER BY CAST(vt0.c2 AS TEXT) DESC, (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (('1632545932') IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c2 AS TEXT) DESC, (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE ('1632545932') ORDER BY CAST(vt0.c2 AS TEXT) DESC, (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) IN ());
SELECT * FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c2 AS TEXT)) IS TRUE) WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c2 AS TEXT)) IS TRUE));
SELECT * FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c2 AS TEXT)) IS TRUE) WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c2 AS TEXT)) IS TRUE));
SELECT * FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c2 AS TEXT)) IS TRUE) WHERE (vt0.c2);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2 COLLATE BINARY))<=(((((vt0.c0))=((vt0.c1))))))) ORDER BY x'' ASC, ((((CASE WHEN 0Xffffffff82658e1f THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 ELSE '-a' END)AND(((vt0.c1) NOT BETWEEN (vt0.c2) AND (x'')))))AND(((vt0.c0)<(vt0.c0)))) DESC  NULLS FIRST, ((vt0.c1)%(vt0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((vt0.c2 COLLATE BINARY))<=(((((vt0.c0))=((vt0.c1))))))) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC, ((((CASE WHEN 0xffffffff82658e1f THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 ELSE '-a' END)AND(((vt0.c1) NOT BETWEEN (vt0.c2) AND (x'')))))AND(((vt0.c0)<(vt0.c0)))) DESC  NULLS FIRST, ((vt0.c1)%(vt0.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2 COLLATE BINARY))<=(((((vt0.c0))=((vt0.c1))))))) ORDER BY x'' ASC, ((((CASE WHEN 0Xffffffff82658e1f THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 ELSE '-a' END)AND(((vt0.c1) NOT BETWEEN (vt0.c2) AND (x'')))))AND(((vt0.c0)<(vt0.c0)))) DESC  NULLS FIRST, ((vt0.c1)%(vt0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((vt0.c2 COLLATE BINARY))<=(((((vt0.c0))=((vt0.c1))))))) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC, ((((CASE WHEN 0xffffffff82658e1f THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 ELSE '-a' END)AND(((vt0.c1) NOT BETWEEN (vt0.c2) AND (x'')))))AND(((vt0.c0)<(vt0.c0)))) DESC  NULLS FIRST, ((vt0.c1)%(vt0.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2 COLLATE BINARY))<=(((((vt0.c0))=((vt0.c1))))))) ORDER BY x'' ASC, ((((CASE WHEN 0Xffffffff82658e1f THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 ELSE '-a' END)AND(((vt0.c1) NOT BETWEEN (vt0.c2) AND (x'')))))AND(((vt0.c0)<(vt0.c0)))) DESC  NULLS FIRST, ((vt0.c1)%(vt0.c2)) COLLATE RTRIM;
SELECT * FROM v0 WHERE (((((v0.c1) NOT BETWEEN (v0.c3) AND (v0.c3)))IS(v0.c3))) ORDER BY 0.10639550477169313 ASC  NULLS LAST, (((((v0.c3, v0.c0, v0.c1)) NOT BETWEEN (('?,/l', v0.c3, v0.c4)) AND ((v0.c0, v0.c0, v0.c4))))IS NOT(((x'')IS(v0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) NOT BETWEEN (v0.c3) AND (v0.c3)))IS(v0.c3))) IS TRUE)  as count FROM v0 ORDER BY 0.10639550477169313 ASC  NULLS LAST, (((((v0.c3, v0.c0, v0.c1)) NOT BETWEEN (('?,/l', v0.c3, v0.c4)) AND ((v0.c0, v0.c0, v0.c4))))IS NOT(((x'')IS(v0.c3)))) ASC);
SELECT * FROM v0 WHERE (((((v0.c1) NOT BETWEEN (v0.c3) AND (v0.c3)))IS(v0.c3))) ORDER BY 0.10639550477169313 ASC  NULLS LAST, (((((v0.c3, v0.c0, v0.c1)) NOT BETWEEN (('?,/l', v0.c3, v0.c4)) AND ((v0.c0, v0.c0, v0.c4))))IS NOT(((x'')IS(v0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) NOT BETWEEN (v0.c3) AND (v0.c3)))IS(v0.c3))) IS TRUE)  as count FROM v0 ORDER BY 0.10639550477169313 ASC  NULLS LAST, (((((v0.c3, v0.c0, v0.c1)) NOT BETWEEN (('?,/l', v0.c3, v0.c4)) AND ((v0.c0, v0.c0, v0.c4))))IS NOT(((x'')IS(v0.c3)))) ASC);
SELECT * FROM v0 WHERE (((((v0.c1) NOT BETWEEN (v0.c3) AND (v0.c3)))IS(v0.c3))) ORDER BY 0.10639550477169313 ASC  NULLS LAST, (((((v0.c3, v0.c0, v0.c1)) NOT BETWEEN (('?,/l', v0.c3, v0.c4)) AND ((v0.c0, v0.c0, v0.c4))))IS NOT(((x'')IS(v0.c3)))) ASC;
SELECT * FROM v0, vt0 WHERE ((((+ ('-1809817187'))) BETWEEN (((v0.c2) BETWEEN (vt0.c0) AND (v0.c1))) AND ((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ ('-1809817187'))) BETWEEN (((v0.c2) BETWEEN (vt0.c0) AND (v0.c1))) AND ((- (vt0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((+ ('-1809817187'))) BETWEEN (((v0.c2) BETWEEN (vt0.c0) AND (v0.c1))) AND ((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ ('-1809817187'))) BETWEEN (((v0.c2) BETWEEN (vt0.c0) AND (v0.c1))) AND ((- (vt0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((+ ('-1809817187'))) BETWEEN (((v0.c2) BETWEEN (vt0.c0) AND (v0.c1))) AND ((- (vt0.c1)))));
SELECT * FROM v0 WHERE (ABS(0X7b556424));
SELECT SUM(count) FROM (SELECT ALL ((ABS(0X7b556424)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (ABS(0X7b556424));
SELECT SUM(count) FROM (SELECT ALL ((ABS(0X7b556424)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (ABS(0X7b556424));
SELECT * FROM v0 WHERE ((((((v0.c4)<<(v0.c3)), (((v0.c0, v0.c1, v0.c2, v0.c4, v0.c1))!=((v0.c1, '53E䙧F+﷮d', v0.c1, v0.c0, 'Va'))), v0.c2 COLLATE RTRIM))<>((((v0.c0)<<(NULL)), ((v0.c2) NOT BETWEEN (v0.c3) AND (v0.c2)), CASE v0.c4  WHEN '퓚&簖Z' THEN v0.c4 WHEN v0.c4 THEN v0.c1 WHEN v0.c1 THEN v0.c4 END)))) ORDER BY CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c4)<<(v0.c3)), (((v0.c0, v0.c1, v0.c2, v0.c4, v0.c1))!=((v0.c1, '53E䙧F+﷮d', v0.c1, v0.c0, 'Va'))), v0.c2 COLLATE RTRIM))<>((((v0.c0)<<(NULL)), ((v0.c2) NOT BETWEEN (v0.c3) AND (v0.c2)), CASE v0.c4  WHEN '퓚&簖Z' THEN v0.c4 WHEN v0.c4 THEN v0.c1 WHEN v0.c1 THEN v0.c4 END)))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS INTEGER) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((((v0.c4)<<(v0.c3)), (((v0.c0, v0.c1, v0.c2, v0.c4, v0.c1))!=((v0.c1, '53E䙧F+﷮d', v0.c1, v0.c0, 'Va'))), v0.c2 COLLATE RTRIM))<>((((v0.c0)<<(NULL)), ((v0.c2) NOT BETWEEN (v0.c3) AND (v0.c2)), CASE v0.c4  WHEN '퓚&簖Z' THEN v0.c4 WHEN v0.c4 THEN v0.c1 WHEN v0.c1 THEN v0.c4 END)))) ORDER BY CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c4)<<(v0.c3)), (((v0.c0, v0.c1, v0.c2, v0.c4, v0.c1))!=((v0.c1, '53E䙧F+﷮d', v0.c1, v0.c0, 'Va'))), v0.c2 COLLATE RTRIM))<>((((v0.c0)<<(NULL)), ((v0.c2) NOT BETWEEN (v0.c3) AND (v0.c2)), CASE v0.c4  WHEN '퓚&簖Z' THEN v0.c4 WHEN v0.c4 THEN v0.c1 WHEN v0.c1 THEN v0.c4 END)))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS INTEGER) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((((v0.c4)<<(v0.c3)), (((v0.c0, v0.c1, v0.c2, v0.c4, v0.c1))!=((v0.c1, '53E䙧F+﷮d', v0.c1, v0.c0, 'Va'))), v0.c2 COLLATE RTRIM))<>((((v0.c0)<<(NULL)), ((v0.c2) NOT BETWEEN (v0.c3) AND (v0.c2)), CASE v0.c4  WHEN '퓚&簖Z' THEN v0.c4 WHEN v0.c4 THEN v0.c1 WHEN v0.c1 THEN v0.c4 END)))) ORDER BY CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS INTEGER) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c2) NOT BETWEEN (v0.c0) AND (vt0.c0))) IS FALSE)) ORDER BY (~ (CASE v0.c1  WHEN v0.c0 THEN vt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOT BETWEEN (v0.c0) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (CASE v0.c1  WHEN v0.c0 THEN vt0.c1 END)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c2) NOT BETWEEN (v0.c0) AND (vt0.c0))) IS FALSE)) ORDER BY (~ (CASE v0.c1  WHEN v0.c0 THEN vt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOT BETWEEN (v0.c0) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (CASE v0.c1  WHEN v0.c0 THEN vt0.c1 END)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c2) NOT BETWEEN (v0.c0) AND (vt0.c0))) IS FALSE)) ORDER BY (~ (CASE v0.c1  WHEN v0.c0 THEN vt0.c1 END)) ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((v0.c0 IN (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN (v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0 IN (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN (v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0 IN (v0.c0)) IN ()));
SELECT COUNT(*) FROM v0 WHERE ('390462958') ORDER BY (((+ (v0.c0)))IS NOT(((((((((v0.c1)OR(v0.c2)))OR(v0.c0)))OR(v0.c4)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT (('390462958') IS TRUE)  as count FROM v0 ORDER BY (((+ (v0.c0)))IS NOT(((((((((v0.c1)OR(v0.c2)))OR(v0.c0)))OR(v0.c4)))OR(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ('390462958') ORDER BY (((+ (v0.c0)))IS NOT(((((((((v0.c1)OR(v0.c2)))OR(v0.c0)))OR(v0.c4)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT (('390462958') IS TRUE)  as count FROM v0 ORDER BY (((+ (v0.c0)))IS NOT(((((((((v0.c1)OR(v0.c2)))OR(v0.c0)))OR(v0.c4)))OR(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ('390462958') ORDER BY (((+ (v0.c0)))IS NOT(((((((((v0.c1)OR(v0.c2)))OR(v0.c0)))OR(v0.c4)))OR(v0.c0))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c2 COLLATE NOCASE))==((((vt0.c1)OR(v0.c3))))));
SELECT SUM(count) FROM (SELECT (((((v0.c2 COLLATE NOCASE))==((((vt0.c1)OR(v0.c3)))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c2 COLLATE NOCASE))==((((vt0.c1)OR(v0.c3))))));
SELECT SUM(count) FROM (SELECT (((((v0.c2 COLLATE NOCASE))==((((vt0.c1)OR(v0.c3)))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c2 COLLATE NOCASE))==((((vt0.c1)OR(v0.c3))))));
SELECT ALL * FROM v0 WHERE (0.12374906684449727);
SELECT SUM(count) FROM (SELECT ALL ((0.12374906684449727) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.12374906684449727);
SELECT SUM(count) FROM (SELECT ALL ((0.12374906684449727) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.12374906684449727);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((NOT (vt0.c2)) IN ((((v0.c1, v0.c3, v0.c4))!=((v0.c4, '', v0.c4))))) WHERE ('-85480885');
SELECT SUM(count) FROM (SELECT ALL (('-85480885') IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((NOT (vt0.c2)) IN ((((v0.c1, v0.c3, v0.c4))!=((v0.c4, '', v0.c4))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((NOT (vt0.c2)) IN ((((v0.c1, v0.c3, v0.c4))!=((v0.c4, '', v0.c4))))) WHERE ('-85480885');
SELECT SUM(count) FROM (SELECT ALL (('-85480885') IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((NOT (vt0.c2)) IN ((((v0.c1, v0.c3, v0.c4))!=((v0.c4, '', v0.c4))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((NOT (vt0.c2)) IN ((((v0.c1, v0.c3, v0.c4))!=((v0.c4, '', v0.c4))))) WHERE ('-85480885');
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c4 COLLATE RTRIM) NOT BETWEEN (((((((((v0.c1)OR(v0.c3)))AND(v0.c1)))AND(v0.c0)))AND(v0.c0))) AND (v0.c4))) ORDER BY ((((v0.c3)AND(v0.c4)))AND(v0.c3)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((v0.c4 COLLATE RTRIM) NOT BETWEEN (((((((((v0.c1)OR(v0.c3)))AND(v0.c1)))AND(v0.c0)))AND(v0.c0))) AND (v0.c4))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c3)AND(v0.c4)))AND(v0.c3)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c4 COLLATE RTRIM) NOT BETWEEN (((((((((v0.c1)OR(v0.c3)))AND(v0.c1)))AND(v0.c0)))AND(v0.c0))) AND (v0.c4))) ORDER BY ((((v0.c3)AND(v0.c4)))AND(v0.c3)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((v0.c4 COLLATE RTRIM) NOT BETWEEN (((((((((v0.c1)OR(v0.c3)))AND(v0.c1)))AND(v0.c0)))AND(v0.c0))) AND (v0.c4))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c3)AND(v0.c4)))AND(v0.c3)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c4 COLLATE RTRIM) NOT BETWEEN (((((((((v0.c1)OR(v0.c3)))AND(v0.c1)))AND(v0.c0)))AND(v0.c0))) AND (v0.c4))) ORDER BY ((((v0.c3)AND(v0.c4)))AND(v0.c3)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE NULL  WHEN v0.c2 THEN v0.c4 WHEN v0.c0 THEN v0.c4 WHEN v0.c1 THEN v0.c1 END) NOTNULL)) ORDER BY CAST((v0.c0 IN (v0.c4)) AS REAL), ((((v0.c2) ISNULL)) NOT BETWEEN ((v0.c2 IN (v0.c0, v0.c4))) AND (CAST(v0.c1 AS INTEGER))), CASE WHEN 'l tt' THEN (((v0.c4)) BETWEEN ((v0.c1)) AND ((v0.c0))) ELSE NULL END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN v0.c2 THEN v0.c4 WHEN v0.c0 THEN v0.c4 WHEN v0.c1 THEN v0.c1 END) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY CAST((v0.c0 IN (v0.c4)) AS REAL), ((((v0.c2) ISNULL)) NOT BETWEEN ((v0.c2 IN (v0.c0, v0.c4))) AND (CAST(v0.c1 AS INTEGER))), CASE WHEN 'l tt' THEN (((v0.c4)) BETWEEN ((v0.c1)) AND ((v0.c0))) ELSE NULL END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE NULL  WHEN v0.c2 THEN v0.c4 WHEN v0.c0 THEN v0.c4 WHEN v0.c1 THEN v0.c1 END) NOTNULL)) ORDER BY CAST((v0.c0 IN (v0.c4)) AS REAL), ((((v0.c2) ISNULL)) NOT BETWEEN ((v0.c2 IN (v0.c0, v0.c4))) AND (CAST(v0.c1 AS INTEGER))), CASE WHEN 'l tt' THEN (((v0.c4)) BETWEEN ((v0.c1)) AND ((v0.c0))) ELSE NULL END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN v0.c2 THEN v0.c4 WHEN v0.c0 THEN v0.c4 WHEN v0.c1 THEN v0.c1 END) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY CAST((v0.c0 IN (v0.c4)) AS REAL), ((((v0.c2) ISNULL)) NOT BETWEEN ((v0.c2 IN (v0.c0, v0.c4))) AND (CAST(v0.c1 AS INTEGER))), CASE WHEN 'l tt' THEN (((v0.c4)) BETWEEN ((v0.c1)) AND ((v0.c0))) ELSE NULL END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE NULL  WHEN v0.c2 THEN v0.c4 WHEN v0.c0 THEN v0.c4 WHEN v0.c1 THEN v0.c1 END) NOTNULL)) ORDER BY CAST((v0.c0 IN (v0.c4)) AS REAL), ((((v0.c2) ISNULL)) NOT BETWEEN ((v0.c2 IN (v0.c0, v0.c4))) AND (CAST(v0.c1 AS INTEGER))), CASE WHEN 'l tt' THEN (((v0.c4)) BETWEEN ((v0.c1)) AND ((v0.c0))) ELSE NULL END  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c2))))%(((v0.c0) BETWEEN (v0.c0) AND (vt0.c2))))) ORDER BY (('2123874593')%((v0.c3 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c2))))%(((v0.c0) BETWEEN (v0.c0) AND (vt0.c2))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (('2123874593')%((v0.c3 IN ())))  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c2))))%(((v0.c0) BETWEEN (v0.c0) AND (vt0.c2))))) ORDER BY (('2123874593')%((v0.c3 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c2))))%(((v0.c0) BETWEEN (v0.c0) AND (vt0.c2))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (('2123874593')%((v0.c3 IN ())))  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c2))))%(((v0.c0) BETWEEN (v0.c0) AND (vt0.c2))))) ORDER BY (('2123874593')%((v0.c3 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((((vt0.c2)AND(vt0.c0)))AND(vt0.c1))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt0.c2)AND(vt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((((vt0.c2)AND(vt0.c0)))AND(vt0.c1))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt0.c2)AND(vt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((((vt0.c2)AND(vt0.c0)))AND(vt0.c1))))) ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((CAST(v0.c3 AS TEXT))) AND ((((((((((((((vt0.c0)AND(vt0.c2)))AND(v0.c3)))OR(v0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c0))))) WHERE (((LOWER(DISTINCT vt0.c2))|(((((v0.c4)AND(vt0.c2)))AND(vt0.c0))))) ORDER BY (((~ (v0.c1))) NOT BETWEEN (((v0.c4) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((v0.c0) BETWEEN (vt0.c0) AND (v0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT vt0.c2))|(((((v0.c4)AND(vt0.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((CAST(v0.c3 AS TEXT))) AND ((((((((((((((vt0.c0)AND(vt0.c2)))AND(v0.c3)))OR(v0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c0))))) ORDER BY (((~ (v0.c1))) NOT BETWEEN (((v0.c4) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((v0.c0) BETWEEN (vt0.c0) AND (v0.c4))))  NULLS FIRST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((CAST(v0.c3 AS TEXT))) AND ((((((((((((((vt0.c0)AND(vt0.c2)))AND(v0.c3)))OR(v0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c0))))) WHERE (((LOWER(DISTINCT vt0.c2))|(((((v0.c4)AND(vt0.c2)))AND(vt0.c0))))) ORDER BY (((~ (v0.c1))) NOT BETWEEN (((v0.c4) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((v0.c0) BETWEEN (vt0.c0) AND (v0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT vt0.c2))|(((((v0.c4)AND(vt0.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((CAST(v0.c3 AS TEXT))) AND ((((((((((((((vt0.c0)AND(vt0.c2)))AND(v0.c3)))OR(v0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c0))))) ORDER BY (((~ (v0.c1))) NOT BETWEEN (((v0.c4) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((v0.c0) BETWEEN (vt0.c0) AND (v0.c4))))  NULLS FIRST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((CAST(v0.c3 AS TEXT))) AND ((((((((((((((vt0.c0)AND(vt0.c2)))AND(v0.c3)))OR(v0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c0))))) WHERE (((LOWER(DISTINCT vt0.c2))|(((((v0.c4)AND(vt0.c2)))AND(vt0.c0))))) ORDER BY (((~ (v0.c1))) NOT BETWEEN (((v0.c4) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((v0.c0) BETWEEN (vt0.c0) AND (v0.c4))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c2)&(vt0.c2)) IN ())) ORDER BY CAST(CAST(vt0.c1 AS INTEGER) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((vt0.c2)&(vt0.c2)) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(CAST(vt0.c1 AS INTEGER) AS NUMERIC));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c2)&(vt0.c2)) IN ())) ORDER BY CAST(CAST(vt0.c1 AS INTEGER) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((vt0.c2)&(vt0.c2)) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(CAST(vt0.c1 AS INTEGER) AS NUMERIC));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c2)&(vt0.c2)) IN ())) ORDER BY CAST(CAST(vt0.c1 AS INTEGER) AS NUMERIC);
SELECT ALL * FROM v0 WHERE (LIKELIHOOD(DISTINCT v0.c3, 0.10596045083929806));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT v0.c3, 0.10596045083929806)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LIKELIHOOD(DISTINCT v0.c3, 0.10596045083929806));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT v0.c3, 0.10596045083929806)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LIKELIHOOD(DISTINCT v0.c3, 0.10596045083929806));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1)>=(v0.c0)))!=(CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)>=(v0.c0)))<>(CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1)>=(v0.c0)))!=(CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)>=(v0.c0)))<>(CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1)>=(v0.c0)))!=(CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END)));
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((((~ (v0.c0)), (v0.c3 IN ()), (vt0.c2 IN ()), UNLIKELY(v0.c2), CASE WHEN 0.3183079539343576 THEN v0.c4 END))>=((0.2279520348039643, UNLIKELY(v0.c1), SQLITE_SOURCE_ID(), ((v0.c4) NOT BETWEEN (vt0.c1) AND (v0.c3)), (v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ((((((~ (v0.c0)), (v0.c3 IN ()), (vt0.c2 IN ()), UNLIKELY(v0.c2), CASE WHEN 0.3183079539343576 THEN v0.c4 END))>=((0.2279520348039643, UNLIKELY(v0.c1), SQLITE_SOURCE_ID(), ((v0.c4) NOT BETWEEN (vt0.c1) AND (v0.c3)), (v0.c0 IN ()))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((((~ (v0.c0)), (v0.c3 IN ()), (vt0.c2 IN ()), UNLIKELY(v0.c2), CASE WHEN 0.3183079539343576 THEN v0.c4 END))>=((0.2279520348039643, UNLIKELY(v0.c1), SQLITE_SOURCE_ID(), ((v0.c4) NOT BETWEEN (vt0.c1) AND (v0.c3)), (v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ((((((~ (v0.c0)), (v0.c3 IN ()), (vt0.c2 IN ()), UNLIKELY(v0.c2), CASE WHEN 0.3183079539343576 THEN v0.c4 END))>=((0.2279520348039643, UNLIKELY(v0.c1), SQLITE_SOURCE_ID(), ((v0.c4) NOT BETWEEN (vt0.c1) AND (v0.c3)), (v0.c0 IN ()))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((((~ (v0.c0)), (v0.c3 IN ()), (vt0.c2 IN ()), UNLIKELY(v0.c2), CASE WHEN 0.3183079539343576 THEN v0.c4 END))>=((0.2279520348039643, UNLIKELY(v0.c1), SQLITE_SOURCE_ID(), ((v0.c4) NOT BETWEEN (vt0.c1) AND (v0.c3)), (v0.c0 IN ())))));
SELECT ALL * FROM v0, vt0 WHERE (((((NULL)LIKE(v0.c2))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ('-1e500'))) ORDER BY ((((v0.c2)==(vt0.c0)))&((v0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)LIKE(v0.c2))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ('-1e500'))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c2)==(vt0.c0)))&((v0.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (((((NULL)LIKE(v0.c2))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ('-1e500'))) ORDER BY ((((v0.c2)==(vt0.c0)))&((v0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)LIKE(v0.c2))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ('-1e500'))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c2)==(vt0.c0)))&((v0.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (((((NULL)LIKE(v0.c2))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ('-1e500'))) ORDER BY ((((v0.c2)==(vt0.c0)))&((v0.c0 IN ())))  NULLS LAST;
SELECT ALL * FROM vt0, v0 NOT INDEXED WHERE (']8' COLLATE BINARY) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((']8' COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED, v0 ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0 NOT INDEXED WHERE (']8' COLLATE BINARY) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((']8' COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED, v0 ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0 NOT INDEXED WHERE (']8' COLLATE BINARY) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE (CASE 1.772256748E9  WHEN v0.c1 THEN vt0.c1 END COLLATE RTRIM) ORDER BY (- (((v0.c2)<>(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 1.772256748E9  WHEN v0.c1 THEN vt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (((v0.c2)<>(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (CASE 1.772256748E9  WHEN v0.c1 THEN vt0.c1 END COLLATE RTRIM) ORDER BY (- (((v0.c2)<>(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 1.772256748E9  WHEN v0.c1 THEN vt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (((v0.c2)<>(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (CASE 1.772256748E9  WHEN v0.c1 THEN vt0.c1 END COLLATE RTRIM) ORDER BY (- (((v0.c2)<>(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((v0.c0)<>(v0.c2)) THEN (v0.c0 IN ()) WHEN (((v0.c4))=((v0.c3))) THEN (((v0.c3)) BETWEEN ((vt0.c1)) AND ((v0.c4))) WHEN ((((((((v0.c4)AND(v0.c4)))AND(v0.c0)))OR(vt0.c0)))OR(v0.c3)) THEN (- (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)!=(v0.c2)) THEN (v0.c0 IN ()) WHEN (((v0.c4))==((v0.c3))) THEN (((v0.c3)) BETWEEN ((vt0.c1)) AND ((v0.c4))) WHEN ((((((((v0.c4)AND(v0.c4)))AND(v0.c0)))OR(vt0.c0)))OR(v0.c3)) THEN (- (v0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((v0.c0)<>(v0.c2)) THEN (v0.c0 IN ()) WHEN (((v0.c4))=((v0.c3))) THEN (((v0.c3)) BETWEEN ((vt0.c1)) AND ((v0.c4))) WHEN ((((((((v0.c4)AND(v0.c4)))AND(v0.c0)))OR(vt0.c0)))OR(v0.c3)) THEN (- (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)!=(v0.c2)) THEN (v0.c0 IN ()) WHEN (((v0.c4))==((v0.c3))) THEN (((v0.c3)) BETWEEN ((vt0.c1)) AND ((v0.c4))) WHEN ((((((((v0.c4)AND(v0.c4)))AND(v0.c0)))OR(vt0.c0)))OR(v0.c3)) THEN (- (v0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((v0.c0)<>(v0.c2)) THEN (v0.c0 IN ()) WHEN (((v0.c4))=((v0.c3))) THEN (((v0.c3)) BETWEEN ((vt0.c1)) AND ((v0.c4))) WHEN ((((((((v0.c4)AND(v0.c4)))AND(v0.c0)))OR(vt0.c0)))OR(v0.c3)) THEN (- (v0.c0)) END);
SELECT * FROM vt0 WHERE ((((- (vt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((- (vt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((- (vt0.c2))) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE (json_patch(vt0.c1, vt0.c1) COLLATE RTRIM) ORDER BY ((LIKELIHOOD(vt0.c2, 0.034198554761678435)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0));
SELECT SUM(count) FROM (SELECT ((json_patch(vt0.c1, vt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELIHOOD(vt0.c2, 0.034198554761678435)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (json_patch(vt0.c1, vt0.c1) COLLATE RTRIM) ORDER BY ((LIKELIHOOD(vt0.c2, 0.034198554761678435)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0));
SELECT SUM(count) FROM (SELECT ((json_patch(vt0.c1, vt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELIHOOD(vt0.c2, 0.034198554761678435)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (json_patch(vt0.c1, vt0.c1) COLLATE RTRIM) ORDER BY ((LIKELIHOOD(vt0.c2, 0.034198554761678435)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0));
SELECT COUNT(*) FROM v0 WHERE (CASE (- ('Ed짋'))  WHEN CASE WHEN v0.c0 THEN v0.c3 END THEN (v0.c3 IN ()) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c3)) THEN ((v0.c2) NOT BETWEEN (v0.c3) AND (v0.c4)) WHEN (NOT (x'')) THEN 6.84198201E8 ELSE TOTAL_CHANGES() END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- ('Ed짋'))  WHEN CASE WHEN v0.c0 THEN v0.c3 END THEN (v0.c3 IN ()) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c3)) THEN ((v0.c2) NOT BETWEEN (v0.c3) AND (v0.c4)) WHEN (NOT (x'')) THEN 6.84198201E8 ELSE TOTAL_CHANGES() END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE (- ('Ed짋'))  WHEN CASE WHEN v0.c0 THEN v0.c3 END THEN (v0.c3 IN ()) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c3)) THEN ((v0.c2) NOT BETWEEN (v0.c3) AND (v0.c4)) WHEN (NOT (x'')) THEN 6.84198201E8 ELSE TOTAL_CHANGES() END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- ('Ed짋'))  WHEN CASE WHEN v0.c0 THEN v0.c3 END THEN (v0.c3 IN ()) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c3)) THEN ((v0.c2) NOT BETWEEN (v0.c3) AND (v0.c4)) WHEN (NOT (x'')) THEN 6.84198201E8 ELSE TOTAL_CHANGES() END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE (- ('Ed짋'))  WHEN CASE WHEN v0.c0 THEN v0.c3 END THEN (v0.c3 IN ()) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c3)) THEN ((v0.c2) NOT BETWEEN (v0.c3) AND (v0.c4)) WHEN (NOT (x'')) THEN 6.84198201E8 ELSE TOTAL_CHANGES() END);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END IN (NULL, (((v0.c2, v0.c2, v0.c1, vt0.c1, vt0.c1))<>((v0.c0, '501892471', v0.c2, x'', v0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END IN (NULL, (((v0.c2, v0.c2, v0.c1, vt0.c1, vt0.c1))!=((v0.c0, '501892471', v0.c2, x'', v0.c4)))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END IN (NULL, (((v0.c2, v0.c2, v0.c1, vt0.c1, vt0.c1))<>((v0.c0, '501892471', v0.c2, x'', v0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END IN (NULL, (((v0.c2, v0.c2, v0.c1, vt0.c1, vt0.c1))!=((v0.c0, '501892471', v0.c2, x'', v0.c4)))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END IN (NULL, (((v0.c2, v0.c2, v0.c1, vt0.c1, vt0.c1))<>((v0.c0, '501892471', v0.c2, x'', v0.c4))))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (IFNULL((v0.c1 IN ()), ((v0.c1)<(v0.c4))));
SELECT SUM(count) FROM (SELECT ((IFNULL((v0.c1 IN ()), ((v0.c1)<(v0.c4)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (IFNULL((v0.c1 IN ()), ((v0.c1)<(v0.c4))));
SELECT SUM(count) FROM (SELECT ((IFNULL((v0.c1 IN ()), ((v0.c1)<(v0.c4)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (IFNULL((v0.c1 IN ()), ((v0.c1)<(v0.c4))));
SELECT ALL * FROM v0 WHERE (((((((((((((v0.c4)AND(v0.c0)))OR(v0.c3)))OR(v0.c3 COLLATE BINARY)))AND((~ (v0.c3)))))OR(CAST(v0.c4 AS NUMERIC))))AND(CAST(v0.c4 AS BLOB)))) ORDER BY (~ (CAST(v0.c3 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((v0.c4)AND(v0.c0)))OR(v0.c3)))OR(v0.c3 COLLATE BINARY)))AND((~ (v0.c3)))))OR(CAST(v0.c4 AS NUMERIC))))AND(CAST(v0.c4 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY (~ (CAST(v0.c3 AS BLOB))) ASC);
SELECT ALL * FROM v0 WHERE (((((((((((((v0.c4)AND(v0.c0)))OR(v0.c3)))OR(v0.c3 COLLATE BINARY)))AND((~ (v0.c3)))))OR(CAST(v0.c4 AS NUMERIC))))AND(CAST(v0.c4 AS BLOB)))) ORDER BY (~ (CAST(v0.c3 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((v0.c4)AND(v0.c0)))OR(v0.c3)))OR(v0.c3 COLLATE BINARY)))AND((~ (v0.c3)))))OR(CAST(v0.c4 AS NUMERIC))))AND(CAST(v0.c4 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY (~ (CAST(v0.c3 AS BLOB))) ASC);
SELECT ALL * FROM v0 WHERE (((((((((((((v0.c4)AND(v0.c0)))OR(v0.c3)))OR(v0.c3 COLLATE BINARY)))AND((~ (v0.c3)))))OR(CAST(v0.c4 AS NUMERIC))))AND(CAST(v0.c4 AS BLOB)))) ORDER BY (~ (CAST(v0.c3 AS BLOB))) ASC;
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((((vt0.c1) NOT BETWEEN (v0.c3) AND (v0.c0)))==(v0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (v0.c3) AND (v0.c0)))==(v0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((((vt0.c1) NOT BETWEEN (v0.c3) AND (v0.c0)))==(v0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (v0.c3) AND (v0.c0)))==(v0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((((vt0.c1) NOT BETWEEN (v0.c3) AND (v0.c0)))==(v0.c3 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c3)<<(v0.c3)) IN ())) ORDER BY ((((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((+ (v0.c4))) AND (((vt0.c0)!=(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c3)<<(v0.c3)) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((+ (v0.c4))) AND (((vt0.c0)<>(v0.c2)))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c3)<<(v0.c3)) IN ())) ORDER BY ((((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((+ (v0.c4))) AND (((vt0.c0)!=(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c3)<<(v0.c3)) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((+ (v0.c4))) AND (((vt0.c0)<>(v0.c2)))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c3)<<(v0.c3)) IN ())) ORDER BY ((((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((+ (v0.c4))) AND (((vt0.c0)!=(v0.c2))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN ('1793867009') AND (x'4b54'))) ORDER BY ((((((v0.c1)OR(v0.c1)))AND(v0.c1))) NOT BETWEEN (((((v0.c1)OR(v0.c1)))OR(v0.c3))) AND (CASE WHEN v0.c4 THEN v0.c2 WHEN v0.c2 THEN v0.c4 WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)) ASC, CAST(NULL AS INTEGER) ASC, TIME(((v0.c1) NOT BETWEEN (v0.c3) AND (v0.c2)), 0.10130748449860183, ((((NULL)OR(v0.c4)))OR(v0.c4))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) BETWEEN ('1793867009') AND (x'4b54'))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c1)OR(v0.c1)))AND(v0.c1))) NOT BETWEEN (((((v0.c1)OR(v0.c1)))OR(v0.c3))) AND (CASE WHEN v0.c4 THEN v0.c2 WHEN v0.c2 THEN v0.c4 WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)) ASC, CAST(NULL AS INTEGER) ASC, TIME(((v0.c1) NOT BETWEEN (v0.c3) AND (v0.c2)), 0.10130748449860183, ((((NULL)OR(v0.c4)))OR(v0.c4))) ASC);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN ('1793867009') AND (x'4b54'))) ORDER BY ((((((v0.c1)OR(v0.c1)))AND(v0.c1))) NOT BETWEEN (((((v0.c1)OR(v0.c1)))OR(v0.c3))) AND (CASE WHEN v0.c4 THEN v0.c2 WHEN v0.c2 THEN v0.c4 WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)) ASC, CAST(NULL AS INTEGER) ASC, TIME(((v0.c1) NOT BETWEEN (v0.c3) AND (v0.c2)), 0.10130748449860183, ((((NULL)OR(v0.c4)))OR(v0.c4))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) BETWEEN ('1793867009') AND (x'4b54'))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c1)OR(v0.c1)))AND(v0.c1))) NOT BETWEEN (((((v0.c1)OR(v0.c1)))OR(v0.c3))) AND (CASE WHEN v0.c4 THEN v0.c2 WHEN v0.c2 THEN v0.c4 WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)) ASC, CAST(NULL AS INTEGER) ASC, TIME(((v0.c1) NOT BETWEEN (v0.c3) AND (v0.c2)), 0.10130748449860183, ((((NULL)OR(v0.c4)))OR(v0.c4))) ASC);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN ('1793867009') AND (x'4b54'))) ORDER BY ((((((v0.c1)OR(v0.c1)))AND(v0.c1))) NOT BETWEEN (((((v0.c1)OR(v0.c1)))OR(v0.c3))) AND (CASE WHEN v0.c4 THEN v0.c2 WHEN v0.c2 THEN v0.c4 WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)) ASC, CAST(NULL AS INTEGER) ASC, TIME(((v0.c1) NOT BETWEEN (v0.c3) AND (v0.c2)), 0.10130748449860183, ((((NULL)OR(v0.c4)))OR(v0.c4))) ASC;
SELECT * FROM vt0, v0 WHERE (CASE WHEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c0)) THEN 1171575775 ELSE (('<ue''') NOT BETWEEN (vt0.c1) AND (v0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c0)) THEN 1171575775 ELSE (('<ue''') NOT BETWEEN (vt0.c1) AND (v0.c3)) END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE WHEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c0)) THEN 1171575775 ELSE (('<ue''') NOT BETWEEN (vt0.c1) AND (v0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c0)) THEN 1171575775 ELSE (('<ue''') NOT BETWEEN (vt0.c1) AND (v0.c3)) END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE WHEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c0)) THEN 1171575775 ELSE (('<ue''') NOT BETWEEN (vt0.c1) AND (v0.c3)) END);
SELECT ALL * FROM v0, vt0 WHERE ((((((((v0.c3)OR(v0.c1)))OR(v0.c4))))>=((NULL))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c3)OR(v0.c1)))OR(v0.c4))))>=((NULL)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((((v0.c3)OR(v0.c1)))OR(v0.c4))))>=((NULL))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c3)OR(v0.c1)))OR(v0.c4))))>=((NULL)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((((v0.c3)OR(v0.c1)))OR(v0.c4))))>=((NULL))));
SELECT ALL * FROM vt0 WHERE ((((',dͫ|q') BETWEEN (vt0.c2) AND (vt0.c2)) IN ())) ORDER BY ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((',dͫ|q') BETWEEN (vt0.c2) AND (vt0.c2)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE ((((',dͫ|q') BETWEEN (vt0.c2) AND (vt0.c2)) IN ())) ORDER BY ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((',dͫ|q') BETWEEN (vt0.c2) AND (vt0.c2)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE ((((',dͫ|q') BETWEEN (vt0.c2) AND (vt0.c2)) IN ())) ORDER BY ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE BINARY;
SELECT * FROM v0, vt0 WHERE ((((((vt0.c2))<=((vt0.c0))))>(((v0.c2) BETWEEN (v0.c3) AND (vt0.c2))))) ORDER BY (((((vt0.c2) NOT BETWEEN ('161185518') AND (v0.c0))))<>((v0.c3))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2))<=((vt0.c0))))>(((v0.c2) BETWEEN (v0.c3) AND (vt0.c2))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((vt0.c2) NOT BETWEEN ('161185518') AND (v0.c0))))<>((v0.c3))) ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE ((((((vt0.c2))<=((vt0.c0))))>(((v0.c2) BETWEEN (v0.c3) AND (vt0.c2))))) ORDER BY (((((vt0.c2) NOT BETWEEN ('161185518') AND (v0.c0))))<>((v0.c3))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2))<=((vt0.c0))))>(((v0.c2) BETWEEN (v0.c3) AND (vt0.c2))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((vt0.c2) NOT BETWEEN ('161185518') AND (v0.c0))))<>((v0.c3))) ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE ((((((vt0.c2))<=((vt0.c0))))>(((v0.c2) BETWEEN (v0.c3) AND (vt0.c2))))) ORDER BY (((((vt0.c2) NOT BETWEEN ('161185518') AND (v0.c0))))<>((v0.c3))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((((((((v0.c1)AND(v0.c1)))OR(v0.c0)))OR(v0.c1)))OR(v0.c3)))OR(0.6169092730034051)))AND(v0.c3)) IN ((- (v0.c1))))) ORDER BY ((v0.c1 COLLATE NOCASE)<=(v0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((v0.c1)AND(v0.c1)))OR(v0.c0)))OR(v0.c1)))OR(v0.c3)))OR(0.6169092730034051)))AND(v0.c3)) IN ((- (v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1 COLLATE NOCASE)<=(v0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((((((((v0.c1)AND(v0.c1)))OR(v0.c0)))OR(v0.c1)))OR(v0.c3)))OR(0.6169092730034051)))AND(v0.c3)) IN ((- (v0.c1))))) ORDER BY ((v0.c1 COLLATE NOCASE)<=(v0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((v0.c1)AND(v0.c1)))OR(v0.c0)))OR(v0.c1)))OR(v0.c3)))OR(0.6169092730034051)))AND(v0.c3)) IN ((- (v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1 COLLATE NOCASE)<=(v0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((((((((v0.c1)AND(v0.c1)))OR(v0.c0)))OR(v0.c1)))OR(v0.c3)))OR(0.6169092730034051)))AND(v0.c3)) IN ((- (v0.c1))))) ORDER BY ((v0.c1 COLLATE NOCASE)<=(v0.c0))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL COLLATE RTRIM);
SELECT COUNT(*) FROM v0 WHERE (((((('䕷', v0.c4, v0.c2)) NOT BETWEEN ((v0.c4, v0.c2, v0.c2)) AND ((-1.428241642E9, v0.c1, v0.c3)))) NOT BETWEEN (v0.c2 COLLATE NOCASE) AND (((v0.c0) IS FALSE)))) ORDER BY (NOT (UNLIKELY(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((('䕷', v0.c4, v0.c2)) NOT BETWEEN ((v0.c4, v0.c2, v0.c2)) AND ((-1.428241642E9, v0.c1, v0.c3)))) NOT BETWEEN (v0.c2 COLLATE NOCASE) AND (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY (NOT (UNLIKELY(v0.c2))));
SELECT COUNT(*) FROM v0 WHERE (((((('䕷', v0.c4, v0.c2)) NOT BETWEEN ((v0.c4, v0.c2, v0.c2)) AND ((-1.428241642E9, v0.c1, v0.c3)))) NOT BETWEEN (v0.c2 COLLATE NOCASE) AND (((v0.c0) IS FALSE)))) ORDER BY (NOT (UNLIKELY(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((('䕷', v0.c4, v0.c2)) NOT BETWEEN ((v0.c4, v0.c2, v0.c2)) AND ((-1.428241642E9, v0.c1, v0.c3)))) NOT BETWEEN (v0.c2 COLLATE NOCASE) AND (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY (NOT (UNLIKELY(v0.c2))));
SELECT COUNT(*) FROM v0 WHERE (((((('䕷', v0.c4, v0.c2)) NOT BETWEEN ((v0.c4, v0.c2, v0.c2)) AND ((-1.428241642E9, v0.c1, v0.c3)))) NOT BETWEEN (v0.c2 COLLATE NOCASE) AND (((v0.c0) IS FALSE)))) ORDER BY (NOT (UNLIKELY(v0.c2)));
SELECT ALL * FROM vt0 WHERE ((('8Zb\r ')<<(((vt0.c1)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('8Zb\r ')<<(((vt0.c1)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('8Zb\r ')<<(((vt0.c1)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('8Zb\r ')<<(((vt0.c1)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('8Zb\r ')<<(((vt0.c1)IS NOT(vt0.c0)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON CAST(0.9586624205068496 COLLATE BINARY AS REAL) WHERE (((v0.c3) IS FALSE) COLLATE NOCASE) ORDER BY 0.8394969981717547 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c3) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CAST(0.9586624205068496 COLLATE BINARY AS REAL) ORDER BY 0.8394969981717547 ASC  NULLS LAST);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON CAST(0.9586624205068496 COLLATE BINARY AS REAL) WHERE (((v0.c3) IS FALSE) COLLATE NOCASE) ORDER BY 0.8394969981717547 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c3) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CAST(0.9586624205068496 COLLATE BINARY AS REAL) ORDER BY 0.8394969981717547 ASC  NULLS LAST);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON CAST(0.9586624205068496 COLLATE BINARY AS REAL) WHERE (((v0.c3) IS FALSE) COLLATE NOCASE) ORDER BY 0.8394969981717547 ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c2)))AND(vt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)AND(vt0.c2)))AND(vt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c2)))AND(vt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)AND(vt0.c2)))AND(vt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c2)))AND(vt0.c2)) AS NUMERIC));
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((v0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN CASE WHEN v0.c3 THEN v0.c3 ELSE v0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN CASE WHEN v0.c3 THEN v0.c3 ELSE v0.c2 END END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((v0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN CASE WHEN v0.c3 THEN v0.c3 ELSE v0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN CASE WHEN v0.c3 THEN v0.c3 ELSE v0.c2 END END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((v0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN CASE WHEN v0.c3 THEN v0.c3 ELSE v0.c2 END END);
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c0 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c0 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c0 COLLATE RTRIM) IS FALSE));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (1064264884) ORDER BY (- (((x'') IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((1064264884) IS TRUE)  as count FROM v0, vt0 ORDER BY (- (((x'') IS FALSE))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (1064264884) ORDER BY (- (((x'') IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((1064264884) IS TRUE)  as count FROM v0, vt0 ORDER BY (- (((x'') IS FALSE))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (1064264884) ORDER BY (- (((x'') IS FALSE))) DESC;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((((vt0.c0 IN (vt0.c0)))>=(LIKELIHOOD(0.9898905745103976, 0.5834435341771199))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))>=(LIKELIHOOD(0.9898905745103976, 0.5834435341771199)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((((vt0.c0 IN (vt0.c0)))>=(LIKELIHOOD(0.9898905745103976, 0.5834435341771199))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))>=(LIKELIHOOD(0.9898905745103976, 0.5834435341771199)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((((vt0.c0 IN (vt0.c0)))>=(LIKELIHOOD(0.9898905745103976, 0.5834435341771199))));
SELECT ALL * FROM v0 WHERE (((((v0.c1)<=(v0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)<=(v0.c2))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c1)<=(v0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)<=(v0.c2))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c1)<=(v0.c2))) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c1  NULLS LAST, ((0.05505278059165475)IS((vt0.c0 IN (vt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST, ((0.05505278059165475)IS((vt0.c0 IN (vt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c1  NULLS LAST, ((0.05505278059165475)IS((vt0.c0 IN (vt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST, ((0.05505278059165475)IS((vt0.c0 IN (vt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c1  NULLS LAST, ((0.05505278059165475)IS((vt0.c0 IN (vt0.c2))))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((json(v0.c4))>=((v0.c3 IN ())))) ORDER BY v0.c1;
SELECT SUM(count) FROM (SELECT ((((json(v0.c4))>=((v0.c3 IN ())))) IS TRUE)  as count FROM v0 ORDER BY v0.c1);
SELECT ALL * FROM v0 WHERE (((json(v0.c4))>=((v0.c3 IN ())))) ORDER BY v0.c1;
SELECT SUM(count) FROM (SELECT ((((json(v0.c4))>=((v0.c3 IN ())))) IS TRUE)  as count FROM v0 ORDER BY v0.c1);
SELECT ALL * FROM v0 WHERE (((json(v0.c4))>=((v0.c3 IN ())))) ORDER BY v0.c1;
SELECT * FROM vt0 WHERE (((((vt0.c1)GLOB(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)GLOB(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)GLOB(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)GLOB(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)GLOB(vt0.c0))) NOT NULL));
SELECT ALL * FROM vt0, v0 WHERE (IFNULL(((v0.c1)!=(v0.c3)), LIKELIHOOD(vt0.c1, 0.22401257789912876)));
SELECT SUM(count) FROM (SELECT ((IFNULL(((v0.c1)!=(v0.c3)), LIKELIHOOD(vt0.c1, 0.22401257789912876))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (IFNULL(((v0.c1)!=(v0.c3)), LIKELIHOOD(vt0.c1, 0.22401257789912876)));
SELECT SUM(count) FROM (SELECT ((IFNULL(((v0.c1)!=(v0.c3)), LIKELIHOOD(vt0.c1, 0.22401257789912876))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (IFNULL(((v0.c1)!=(v0.c3)), LIKELIHOOD(vt0.c1, 0.22401257789912876)));
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (((CASE WHEN v0.c2 THEN vt0.c2 ELSE vt0.c1 END)<=((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((v0.c1)))))) ORDER BY UNLIKELY(((v0.c1)||(v0.c3))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c2 THEN vt0.c2 ELSE vt0.c1 END)<=((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((v0.c1)))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY UNLIKELY(((v0.c1)||(v0.c3))) DESC  NULLS FIRST);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (((CASE WHEN v0.c2 THEN vt0.c2 ELSE vt0.c1 END)<=((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((v0.c1)))))) ORDER BY UNLIKELY(((v0.c1)||(v0.c3))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c2 THEN vt0.c2 ELSE vt0.c1 END)<=((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((v0.c1)))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY UNLIKELY(((v0.c1)||(v0.c3))) DESC  NULLS FIRST);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (((CASE WHEN v0.c2 THEN vt0.c2 ELSE vt0.c1 END)<=((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((v0.c1)))))) ORDER BY UNLIKELY(((v0.c1)||(v0.c3))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((COALESCE(v0.c2, v0.c2) IN ())) ORDER BY ((((CASE WHEN NULL THEN '0.48620085377819244' WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)AND(v0.c0)))AND(((v0.c2) BETWEEN (v0.c1) AND (v0.c2))));
SELECT SUM(count) FROM (SELECT (((COALESCE(v0.c2, v0.c2) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((CASE WHEN NULL THEN '0.48620085377819244' WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)AND(v0.c0)))AND(((v0.c2) BETWEEN (v0.c1) AND (v0.c2)))));
SELECT COUNT(*) FROM v0 WHERE ((COALESCE(v0.c2, v0.c2) IN ())) ORDER BY ((((CASE WHEN NULL THEN '0.48620085377819244' WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)AND(v0.c0)))AND(((v0.c2) BETWEEN (v0.c1) AND (v0.c2))));
SELECT SUM(count) FROM (SELECT (((COALESCE(v0.c2, v0.c2) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((CASE WHEN NULL THEN '0.48620085377819244' WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)AND(v0.c0)))AND(((v0.c2) BETWEEN (v0.c1) AND (v0.c2)))));
SELECT COUNT(*) FROM v0 WHERE ((COALESCE(v0.c2, v0.c2) IN ())) ORDER BY ((((CASE WHEN NULL THEN '0.48620085377819244' WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)AND(v0.c0)))AND(((v0.c2) BETWEEN (v0.c1) AND (v0.c2))));
SELECT ALL * FROM vt0, v0 WHERE (CAST(v0.c2 COLLATE BINARY AS INTEGER)) ORDER BY v0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c3  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (CAST(v0.c2 COLLATE BINARY AS INTEGER)) ORDER BY v0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c3  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (CAST(v0.c2 COLLATE BINARY AS INTEGER)) ORDER BY v0.c3  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT vt0.c1)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT vt0.c1)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT vt0.c1));
SELECT * FROM v0, vt0 WHERE (((CASE v0.c3  WHEN vt0.c2 THEN vt0.c2 ELSE 0.6703098831214779 END)+(CASE v0.c3  WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN x'7504' WHEN v0.c3 THEN vt0.c1 END))) ORDER BY (((((v0.c4)) BETWEEN ((vt0.c2)) AND ((vt0.c0)))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c3  WHEN vt0.c2 THEN vt0.c2 ELSE 0.6703098831214779 END)+(CASE v0.c3  WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN x'7504' WHEN v0.c3 THEN vt0.c1 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((v0.c4)) BETWEEN ((vt0.c2)) AND ((vt0.c0)))) ISNULL) ASC);
SELECT * FROM v0, vt0 WHERE (((CASE v0.c3  WHEN vt0.c2 THEN vt0.c2 ELSE 0.6703098831214779 END)+(CASE v0.c3  WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN x'7504' WHEN v0.c3 THEN vt0.c1 END))) ORDER BY (((((v0.c4)) BETWEEN ((vt0.c2)) AND ((vt0.c0)))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c3  WHEN vt0.c2 THEN vt0.c2 ELSE 0.6703098831214779 END)+(CASE v0.c3  WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN x'7504' WHEN v0.c3 THEN vt0.c1 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((v0.c4)) BETWEEN ((vt0.c2)) AND ((vt0.c0)))) ISNULL) ASC);
SELECT * FROM v0, vt0 WHERE (((CASE v0.c3  WHEN vt0.c2 THEN vt0.c2 ELSE 0.6703098831214779 END)+(CASE v0.c3  WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN x'7504' WHEN v0.c3 THEN vt0.c1 END))) ORDER BY (((((v0.c4)) BETWEEN ((vt0.c2)) AND ((vt0.c0)))) ISNULL) ASC;
SELECT * FROM vt0 WHERE (LIKELY(vt0.c2) COLLATE BINARY) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELY(vt0.c2) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER) ASC);
SELECT * FROM vt0 WHERE (LIKELY(vt0.c2) COLLATE BINARY) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELY(vt0.c2) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER) ASC);
SELECT * FROM vt0 WHERE (LIKELY(vt0.c2) COLLATE BINARY) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER) ASC;
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON '' WHERE (((TYPEOF(vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (((v0.c4)IS NOT(v0.c1))))) ORDER BY (((((((((vt0.c0)OR(v0.c4)))OR(v0.c1)))OR(v0.c3)))AND(v0.c1)) IN ())  NULLS LAST, (((vt0.c0 IN ()))+(TYPEOF(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (((v0.c4)IS NOT(v0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON '' ORDER BY (((((((((vt0.c0)OR(v0.c4)))OR(v0.c1)))OR(v0.c3)))AND(v0.c1)) IN ())  NULLS LAST, (((vt0.c0 IN ()))+(TYPEOF(vt0.c0))) ASC);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON '' WHERE (((TYPEOF(vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (((v0.c4)IS NOT(v0.c1))))) ORDER BY (((((((((vt0.c0)OR(v0.c4)))OR(v0.c1)))OR(v0.c3)))AND(v0.c1)) IN ())  NULLS LAST, (((vt0.c0 IN ()))+(TYPEOF(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (((v0.c4)IS NOT(v0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON '' ORDER BY (((((((((vt0.c0)OR(v0.c4)))OR(v0.c1)))OR(v0.c3)))AND(v0.c1)) IN ())  NULLS LAST, (((vt0.c0 IN ()))+(TYPEOF(vt0.c0))) ASC);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON '' WHERE (((TYPEOF(vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (((v0.c4)IS NOT(v0.c1))))) ORDER BY (((((((((vt0.c0)OR(v0.c4)))OR(v0.c1)))OR(v0.c3)))AND(v0.c1)) IN ())  NULLS LAST, (((vt0.c0 IN ()))+(TYPEOF(vt0.c0))) ASC;
SELECT * FROM vt0, v0 WHERE ((((((v0.c3)+(vt0.c2))))<>((CAST(v0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c3)+(vt0.c2))))<>((CAST(v0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((v0.c3)+(vt0.c2))))<>((CAST(v0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c3)+(vt0.c2))))<>((CAST(v0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((v0.c3)+(vt0.c2))))<>((CAST(v0.c0 AS TEXT)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM v0 WHERE (((((UNLIKELY(DISTINCT v0.c1))AND(CAST(v0.c0 AS TEXT))))AND((v0.c3 IN (v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((UNLIKELY(DISTINCT v0.c1))AND(CAST(v0.c0 AS TEXT))))AND((v0.c3 IN (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((UNLIKELY(DISTINCT v0.c1))AND(CAST(v0.c0 AS TEXT))))AND((v0.c3 IN (v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((UNLIKELY(DISTINCT v0.c1))AND(CAST(v0.c0 AS TEXT))))AND((v0.c3 IN (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((UNLIKELY(DISTINCT v0.c1))AND(CAST(v0.c0 AS TEXT))))AND((v0.c3 IN (v0.c2)))));
SELECT ALL * FROM vt0, v0 WHERE (json_remove(((vt0.c2) BETWEEN (0.9494701843786827) AND (v0.c4)), ((vt0.c1)-(vt0.c1)))) ORDER BY (~ ((((v0.c4)) BETWEEN ((v0.c3)) AND ((v0.c3))))), CASE INSTR(vt0.c1, NULL)  WHEN 0X7c15664 THEN ((v0.c2)LIKE(vt0.c0)) WHEN CAST(v0.c4 AS NUMERIC) THEN 0.055290340366648705 WHEN ((((((((v0.c0)OR(v0.c1)))OR(vt0.c2)))OR(v0.c1)))OR(v0.c2)) THEN ((v0.c4)||(v0.c2)) WHEN (v0.c1 IN ()) THEN (vt0.c1 IN ()) WHEN ((((v0.c3)OR(v0.c1)))AND(v0.c2)) THEN ((((vt0.c2)AND(v0.c1)))AND(vt0.c1)) WHEN ((v0.c3) ISNULL) THEN ((vt0.c1) IS FALSE) WHEN ('-466780995' IN ()) THEN ((vt0.c2)IS NOT('1084632327')) ELSE (vt0.c1 IN (vt0.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((vt0.c2) BETWEEN (0.9494701843786827) AND (v0.c4)), ((vt0.c1)-(vt0.c1)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ ((((v0.c4)) BETWEEN ((v0.c3)) AND ((v0.c3))))), CASE INSTR(vt0.c1, NULL)  WHEN 0x7c15664 THEN ((v0.c2)LIKE(vt0.c0)) WHEN CAST(v0.c4 AS NUMERIC) THEN 0.055290340366648705 WHEN ((((((((v0.c0)OR(v0.c1)))OR(vt0.c2)))OR(v0.c1)))OR(v0.c2)) THEN ((v0.c4)||(v0.c2)) WHEN (v0.c1 IN ()) THEN (vt0.c1 IN ()) WHEN ((((v0.c3)OR(v0.c1)))AND(v0.c2)) THEN ((((vt0.c2)AND(v0.c1)))AND(vt0.c1)) WHEN ((v0.c3) ISNULL) THEN ((vt0.c1) IS FALSE) WHEN ('-466780995' IN ()) THEN ((vt0.c2)IS NOT('1084632327')) ELSE (vt0.c1 IN (vt0.c2)) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (json_remove(((vt0.c2) BETWEEN (0.9494701843786827) AND (v0.c4)), ((vt0.c1)-(vt0.c1)))) ORDER BY (~ ((((v0.c4)) BETWEEN ((v0.c3)) AND ((v0.c3))))), CASE INSTR(vt0.c1, NULL)  WHEN 0X7c15664 THEN ((v0.c2)LIKE(vt0.c0)) WHEN CAST(v0.c4 AS NUMERIC) THEN 0.055290340366648705 WHEN ((((((((v0.c0)OR(v0.c1)))OR(vt0.c2)))OR(v0.c1)))OR(v0.c2)) THEN ((v0.c4)||(v0.c2)) WHEN (v0.c1 IN ()) THEN (vt0.c1 IN ()) WHEN ((((v0.c3)OR(v0.c1)))AND(v0.c2)) THEN ((((vt0.c2)AND(v0.c1)))AND(vt0.c1)) WHEN ((v0.c3) ISNULL) THEN ((vt0.c1) IS FALSE) WHEN ('-466780995' IN ()) THEN ((vt0.c2)IS NOT('1084632327')) ELSE (vt0.c1 IN (vt0.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((vt0.c2) BETWEEN (0.9494701843786827) AND (v0.c4)), ((vt0.c1)-(vt0.c1)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ ((((v0.c4)) BETWEEN ((v0.c3)) AND ((v0.c3))))), CASE INSTR(vt0.c1, NULL)  WHEN 0x7c15664 THEN ((v0.c2)LIKE(vt0.c0)) WHEN CAST(v0.c4 AS NUMERIC) THEN 0.055290340366648705 WHEN ((((((((v0.c0)OR(v0.c1)))OR(vt0.c2)))OR(v0.c1)))OR(v0.c2)) THEN ((v0.c4)||(v0.c2)) WHEN (v0.c1 IN ()) THEN (vt0.c1 IN ()) WHEN ((((v0.c3)OR(v0.c1)))AND(v0.c2)) THEN ((((vt0.c2)AND(v0.c1)))AND(vt0.c1)) WHEN ((v0.c3) ISNULL) THEN ((vt0.c1) IS FALSE) WHEN ('-466780995' IN ()) THEN ((vt0.c2)IS NOT('1084632327')) ELSE (vt0.c1 IN (vt0.c2)) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (json_remove(((vt0.c2) BETWEEN (0.9494701843786827) AND (v0.c4)), ((vt0.c1)-(vt0.c1)))) ORDER BY (~ ((((v0.c4)) BETWEEN ((v0.c3)) AND ((v0.c3))))), CASE INSTR(vt0.c1, NULL)  WHEN 0X7c15664 THEN ((v0.c2)LIKE(vt0.c0)) WHEN CAST(v0.c4 AS NUMERIC) THEN 0.055290340366648705 WHEN ((((((((v0.c0)OR(v0.c1)))OR(vt0.c2)))OR(v0.c1)))OR(v0.c2)) THEN ((v0.c4)||(v0.c2)) WHEN (v0.c1 IN ()) THEN (vt0.c1 IN ()) WHEN ((((v0.c3)OR(v0.c1)))AND(v0.c2)) THEN ((((vt0.c2)AND(v0.c1)))AND(vt0.c1)) WHEN ((v0.c3) ISNULL) THEN ((vt0.c1) IS FALSE) WHEN ('-466780995' IN ()) THEN ((vt0.c2)IS NOT('1084632327')) ELSE (vt0.c1 IN (vt0.c2)) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c4) IS TRUE) AS INTEGER)) ORDER BY (((v0.c0 COLLATE NOCASE))>((((v0.c4) ISNULL)))) ASC  NULLS LAST, (+ (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END)) ASC  NULLS LAST, LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c4) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0 COLLATE NOCASE))>((((v0.c4) ISNULL)))) ASC  NULLS LAST, (+ (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END)) ASC  NULLS LAST, LAST_INSERT_ROWID());
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c4) IS TRUE) AS INTEGER)) ORDER BY (((v0.c0 COLLATE NOCASE))>((((v0.c4) ISNULL)))) ASC  NULLS LAST, (+ (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END)) ASC  NULLS LAST, LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c4) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0 COLLATE NOCASE))>((((v0.c4) ISNULL)))) ASC  NULLS LAST, (+ (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END)) ASC  NULLS LAST, LAST_INSERT_ROWID());
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c4) IS TRUE) AS INTEGER)) ORDER BY (((v0.c0 COLLATE NOCASE))>((((v0.c4) ISNULL)))) ASC  NULLS LAST, (+ (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END)) ASC  NULLS LAST, LAST_INSERT_ROWID();
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (+ (vt0.c1 COLLATE RTRIM)) WHERE (CAST(((v0.c4)<=(v0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c4)<=(v0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (+ (vt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (+ (vt0.c1 COLLATE RTRIM)) WHERE (CAST(((v0.c4)<=(v0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c4)<=(v0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (+ (vt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (+ (vt0.c1 COLLATE RTRIM)) WHERE (CAST(((v0.c4)<=(v0.c1)) AS BLOB));
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON vt0.c2 WHERE (CASE ((vt0.c2) NOTNULL)  WHEN ((v0.c2) IS TRUE) THEN v0.c3 COLLATE BINARY ELSE ((vt0.c1)%(v0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c2) NOTNULL)  WHEN ((v0.c2) IS TRUE) THEN v0.c3 COLLATE BINARY ELSE ((vt0.c1)%(v0.c4)) END) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON vt0.c2);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON vt0.c2 WHERE (CASE ((vt0.c2) NOTNULL)  WHEN ((v0.c2) IS TRUE) THEN v0.c3 COLLATE BINARY ELSE ((vt0.c1)%(v0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c2) NOTNULL)  WHEN ((v0.c2) IS TRUE) THEN v0.c3 COLLATE BINARY ELSE ((vt0.c1)%(v0.c4)) END) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON vt0.c2);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON vt0.c2 WHERE (CASE ((vt0.c2) NOTNULL)  WHEN ((v0.c2) IS TRUE) THEN v0.c3 COLLATE BINARY ELSE ((vt0.c1)%(v0.c4)) END);
SELECT ALL * FROM vt0, v0 WHERE ((LIKELY(vt0.c2) IN ())) ORDER BY (- (((vt0.c0)LIKE(vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((LIKELY(vt0.c2) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (((vt0.c0)LIKE(vt0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((LIKELY(vt0.c2) IN ())) ORDER BY (- (((vt0.c0)LIKE(vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((LIKELY(vt0.c2) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (((vt0.c0)LIKE(vt0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((LIKELY(vt0.c2) IN ())) ORDER BY (- (((vt0.c0)LIKE(vt0.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (TYPEOF(((vt0.c1)*(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c1)*(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF(((vt0.c1)*(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c1)*(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF(((vt0.c1)*(vt0.c0))));
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN v0.c4 THEN CASE WHEN v0.c1 THEN v0.c2 ELSE x'' END WHEN CASE WHEN v0.c2 THEN v0.c3 WHEN v0.c3 THEN '1209344135' WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN v0.c3 WHEN v0.c3 THEN v0.c1 ELSE v0.c2 END THEN vt0.c1 COLLATE NOCASE WHEN ((((v0.c0)OR(v0.c3)))AND(v0.c1)) THEN 0.22159891273073995 ELSE HEX(DISTINCT v0.c4) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c4 THEN CASE WHEN v0.c1 THEN v0.c2 ELSE x'' END WHEN CASE WHEN v0.c2 THEN v0.c3 WHEN v0.c3 THEN '1209344135' WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN v0.c3 WHEN v0.c3 THEN v0.c1 ELSE v0.c2 END THEN vt0.c1 COLLATE NOCASE WHEN ((((v0.c0)OR(v0.c3)))AND(v0.c1)) THEN 0.22159891273073995 ELSE HEX(DISTINCT v0.c4) END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN v0.c4 THEN CASE WHEN v0.c1 THEN v0.c2 ELSE x'' END WHEN CASE WHEN v0.c2 THEN v0.c3 WHEN v0.c3 THEN '1209344135' WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN v0.c3 WHEN v0.c3 THEN v0.c1 ELSE v0.c2 END THEN vt0.c1 COLLATE NOCASE WHEN ((((v0.c0)OR(v0.c3)))AND(v0.c1)) THEN 0.22159891273073995 ELSE HEX(DISTINCT v0.c4) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c4 THEN CASE WHEN v0.c1 THEN v0.c2 ELSE x'' END WHEN CASE WHEN v0.c2 THEN v0.c3 WHEN v0.c3 THEN '1209344135' WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN v0.c3 WHEN v0.c3 THEN v0.c1 ELSE v0.c2 END THEN vt0.c1 COLLATE NOCASE WHEN ((((v0.c0)OR(v0.c3)))AND(v0.c1)) THEN 0.22159891273073995 ELSE HEX(DISTINCT v0.c4) END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN v0.c4 THEN CASE WHEN v0.c1 THEN v0.c2 ELSE x'' END WHEN CASE WHEN v0.c2 THEN v0.c3 WHEN v0.c3 THEN '1209344135' WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN v0.c3 WHEN v0.c3 THEN v0.c1 ELSE v0.c2 END THEN vt0.c1 COLLATE NOCASE WHEN ((((v0.c0)OR(v0.c3)))AND(v0.c1)) THEN 0.22159891273073995 ELSE HEX(DISTINCT v0.c4) END);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((v0.c0 IN (v0.c0, v0.c1)) IN ())) ORDER BY (((v0.c1)) NOT BETWEEN (((~ (v0.c2)))) AND ((((((v0.c2)AND(v0.c2)))OR(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN (v0.c0, v0.c1)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY (((v0.c1)) NOT BETWEEN (((~ (v0.c2)))) AND ((((((v0.c2)AND(v0.c2)))OR(v0.c1))))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((v0.c0 IN (v0.c0, v0.c1)) IN ())) ORDER BY (((v0.c1)) NOT BETWEEN (((~ (v0.c2)))) AND ((((((v0.c2)AND(v0.c2)))OR(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN (v0.c0, v0.c1)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY (((v0.c1)) NOT BETWEEN (((~ (v0.c2)))) AND ((((((v0.c2)AND(v0.c2)))OR(v0.c1))))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((v0.c0 IN (v0.c0, v0.c1)) IN ())) ORDER BY (((v0.c1)) NOT BETWEEN (((~ (v0.c2)))) AND ((((((v0.c2)AND(v0.c2)))OR(v0.c1)))));
SELECT * FROM v0, vt0 WHERE (CAST(((vt0.c2)IS NOT(v0.c0)) AS NUMERIC)) ORDER BY LIKELY(DISTINCT ((((v0.c2)AND(v0.c2)))OR(v0.c0))), CAST(((((v0.c4)AND(v0.c4)))AND(v0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c2)IS NOT(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0 ORDER BY LIKELY(DISTINCT ((((v0.c2)AND(v0.c2)))OR(v0.c0))), CAST(((((v0.c4)AND(v0.c4)))AND(v0.c0)) AS REAL));
SELECT * FROM v0, vt0 WHERE (CAST(((vt0.c2)IS NOT(v0.c0)) AS NUMERIC)) ORDER BY LIKELY(DISTINCT ((((v0.c2)AND(v0.c2)))OR(v0.c0))), CAST(((((v0.c4)AND(v0.c4)))AND(v0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c2)IS NOT(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0 ORDER BY LIKELY(DISTINCT ((((v0.c2)AND(v0.c2)))OR(v0.c0))), CAST(((((v0.c4)AND(v0.c4)))AND(v0.c0)) AS REAL));
SELECT * FROM v0, vt0 WHERE (CAST(((vt0.c2)IS NOT(v0.c0)) AS NUMERIC)) ORDER BY LIKELY(DISTINCT ((((v0.c2)AND(v0.c2)))OR(v0.c0))), CAST(((((v0.c4)AND(v0.c4)))AND(v0.c0)) AS REAL);
SELECT * FROM vt0 WHERE ((NOT (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY);
SELECT ALL * FROM v0 WHERE ((CAST(NULL AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(NULL AS BLOB) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((CAST(NULL AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(NULL AS BLOB) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((CAST(NULL AS BLOB) IN ()));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON v0.c4 WHERE (((((vt0.c2)&(v0.c1)))<(((((v0.c4)OR(v0.c0)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)&(v0.c1)))<(((((v0.c4)OR(v0.c0)))OR(vt0.c2))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON v0.c4);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON v0.c4 WHERE (((((vt0.c2)&(v0.c1)))<(((((v0.c4)OR(v0.c0)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)&(v0.c1)))<(((((v0.c4)OR(v0.c0)))OR(vt0.c2))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON v0.c4);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON v0.c4 WHERE (((((vt0.c2)&(v0.c1)))<(((((v0.c4)OR(v0.c0)))OR(vt0.c2)))));
SELECT COUNT(*) FROM v0 WHERE (((((CASE WHEN v0.c4 THEN v0.c2 ELSE v0.c4 END)AND(0.8042553602310477)))OR(((v0.c3) NOT BETWEEN (v0.c2) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN v0.c4 THEN v0.c2 ELSE v0.c4 END)AND(0.8042553602310477)))OR(((v0.c3) NOT BETWEEN (v0.c2) AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((CASE WHEN v0.c4 THEN v0.c2 ELSE v0.c4 END)AND(0.8042553602310477)))OR(((v0.c3) NOT BETWEEN (v0.c2) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN v0.c4 THEN v0.c2 ELSE v0.c4 END)AND(0.8042553602310477)))OR(((v0.c3) NOT BETWEEN (v0.c2) AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((CASE WHEN v0.c4 THEN v0.c2 ELSE v0.c4 END)AND(0.8042553602310477)))OR(((v0.c3) NOT BETWEEN (v0.c2) AND (v0.c1)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((PRINTF('')) IS TRUE) WHERE (NULLIF(DISTINCT ((vt0.c2)|(v0.c3)), ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((vt0.c2)|(v0.c3)), ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((PRINTF('')) IS TRUE));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((PRINTF('')) IS TRUE) WHERE (NULLIF(DISTINCT ((vt0.c2)|(v0.c3)), ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((vt0.c2)|(v0.c3)), ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((PRINTF('')) IS TRUE));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((PRINTF('')) IS TRUE) WHERE (NULLIF(DISTINCT ((vt0.c2)|(v0.c3)), ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((CASE WHEN v0.c0 THEN v0.c2 ELSE vt0.c1 END)AND(CAST(0.05609733864227351 AS NUMERIC))))OR((((vt0.c1))!=((0.09695574121241946))))) WHERE (json_array(((vt0.c0) BETWEEN (v0.c0) AND ('DE%')), (((v0.c0))<=((v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((json_array(((vt0.c0) BETWEEN (v0.c0) AND ('DE%')), (((v0.c0))<=((v0.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((CASE WHEN v0.c0 THEN v0.c2 ELSE vt0.c1 END)AND(CAST(0.05609733864227351 AS NUMERIC))))OR((((vt0.c1))!=((0.09695574121241946))))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((CASE WHEN v0.c0 THEN v0.c2 ELSE vt0.c1 END)AND(CAST(0.05609733864227351 AS NUMERIC))))OR((((vt0.c1))!=((0.09695574121241946))))) WHERE (json_array(((vt0.c0) BETWEEN (v0.c0) AND ('DE%')), (((v0.c0))<=((v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((json_array(((vt0.c0) BETWEEN (v0.c0) AND ('DE%')), (((v0.c0))<=((v0.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((CASE WHEN v0.c0 THEN v0.c2 ELSE vt0.c1 END)AND(CAST(0.05609733864227351 AS NUMERIC))))OR((((vt0.c1))!=((0.09695574121241946))))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((CASE WHEN v0.c0 THEN v0.c2 ELSE vt0.c1 END)AND(CAST(0.05609733864227351 AS NUMERIC))))OR((((vt0.c1))!=((0.09695574121241946))))) WHERE (json_array(((vt0.c0) BETWEEN (v0.c0) AND ('DE%')), (((v0.c0))<=((v0.c1)))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON CAST((+ (v0.c2)) AS TEXT) WHERE (((((((v0.c1) IS FALSE))OR(vt0.c1)))OR(((vt0.c0) BETWEEN (v0.c3) AND (''))))) ORDER BY v0.c0 DESC, x'' ASC  NULLS FIRST, ((CASE WHEN v0.c3 THEN vt0.c0 END) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c1) IS FALSE))OR(vt0.c1)))OR(((vt0.c0) BETWEEN (v0.c3) AND (''))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CAST((+ (v0.c2)) AS TEXT) ORDER BY v0.c0 DESC, x'' ASC  NULLS FIRST, ((CASE WHEN v0.c3 THEN vt0.c0 END) IS FALSE) ASC);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON CAST((+ (v0.c2)) AS TEXT) WHERE (((((((v0.c1) IS FALSE))OR(vt0.c1)))OR(((vt0.c0) BETWEEN (v0.c3) AND (''))))) ORDER BY v0.c0 DESC, x'' ASC  NULLS FIRST, ((CASE WHEN v0.c3 THEN vt0.c0 END) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c1) IS FALSE))OR(vt0.c1)))OR(((vt0.c0) BETWEEN (v0.c3) AND (''))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CAST((+ (v0.c2)) AS TEXT) ORDER BY v0.c0 DESC, x'' ASC  NULLS FIRST, ((CASE WHEN v0.c3 THEN vt0.c0 END) IS FALSE) ASC);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON CAST((+ (v0.c2)) AS TEXT) WHERE (((((((v0.c1) IS FALSE))OR(vt0.c1)))OR(((vt0.c0) BETWEEN (v0.c3) AND (''))))) ORDER BY v0.c0 DESC, x'' ASC  NULLS FIRST, ((CASE WHEN v0.c3 THEN vt0.c0 END) IS FALSE) ASC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)<=(NULL)))=('Tﮨ甃e定~d0'))) ORDER BY (NOT (((((vt0.c2)AND(vt0.c1)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<=(NULL)))=('Tﮨ甃e定~d0'))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((((vt0.c2)AND(vt0.c1)))OR(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)<=(NULL)))=('Tﮨ甃e定~d0'))) ORDER BY (NOT (((((vt0.c2)AND(vt0.c1)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<=(NULL)))=('Tﮨ甃e定~d0'))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((((vt0.c2)AND(vt0.c1)))OR(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)<=(NULL)))=('Tﮨ甃e定~d0'))) ORDER BY (NOT (((((vt0.c2)AND(vt0.c1)))OR(vt0.c0))));
SELECT COUNT(*) FROM v0 WHERE (CASE CASE WHEN v0.c1 THEN v0.c4 END  WHEN x'27cb' THEN x'ea7e' COLLATE RTRIM END) ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c4)AND(v0.c4)))) AND ((((v0.c2) BETWEEN (v0.c4) AND (v0.c4))))) DESC, ((((v0.c3)AND(TRIM(v0.c3))))OR(((v0.c4)*('?,/l'))));
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN v0.c1 THEN v0.c4 END  WHEN x'27cb' THEN x'ea7e' COLLATE RTRIM END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c4)AND(v0.c4)))) AND ((((v0.c2) BETWEEN (v0.c4) AND (v0.c4))))) DESC, ((((v0.c3)AND(TRIM(v0.c3))))OR(((v0.c4)*('?,/l')))));
SELECT COUNT(*) FROM v0 WHERE (CASE CASE WHEN v0.c1 THEN v0.c4 END  WHEN x'27cb' THEN x'ea7e' COLLATE RTRIM END) ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c4)AND(v0.c4)))) AND ((((v0.c2) BETWEEN (v0.c4) AND (v0.c4))))) DESC, ((((v0.c3)AND(TRIM(v0.c3))))OR(((v0.c4)*('?,/l'))));
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN v0.c1 THEN v0.c4 END  WHEN x'27cb' THEN x'ea7e' COLLATE RTRIM END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c4)AND(v0.c4)))) AND ((((v0.c2) BETWEEN (v0.c4) AND (v0.c4))))) DESC, ((((v0.c3)AND(TRIM(v0.c3))))OR(((v0.c4)*('?,/l')))));
SELECT COUNT(*) FROM v0 WHERE (CASE CASE WHEN v0.c1 THEN v0.c4 END  WHEN x'27cb' THEN x'ea7e' COLLATE RTRIM END) ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c4)AND(v0.c4)))) AND ((((v0.c2) BETWEEN (v0.c4) AND (v0.c4))))) DESC, ((((v0.c3)AND(TRIM(v0.c3))))OR(((v0.c4)*('?,/l'))));
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN '(>+' END COLLATE NOCASE) ORDER BY (NOT (NULLIF(vt0.c1, vt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN '(>+' END COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (NOT (NULLIF(vt0.c1, vt0.c1))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN '(>+' END COLLATE NOCASE) ORDER BY (NOT (NULLIF(vt0.c1, vt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN '(>+' END COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (NOT (NULLIF(vt0.c1, vt0.c1))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN '(>+' END COLLATE NOCASE) ORDER BY (NOT (NULLIF(vt0.c1, vt0.c1))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c2 IN ())) ORDER BY (~ (((vt0.c2) NOT NULL))), ((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT (((vt0.c2 IN ())) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c2) NOT NULL))), ((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2))) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c2 IN ())) ORDER BY (~ (((vt0.c2) NOT NULL))), ((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT (((vt0.c2 IN ())) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c2) NOT NULL))), ((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2))) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c2 IN ())) ORDER BY (~ (((vt0.c2) NOT NULL))), ((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2))) IS FALSE);
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c2)<=(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2)<=(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c2)<=(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2)<=(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c2)<=(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c1 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c1 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c1 IN ())) IS FALSE));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((v0.c0) BETWEEN (v0.c3) AND (vt0.c2))))<((CAST(v0.c1 AS BLOB))))) ORDER BY ((x'')IS NOT(((((v0.c0)OR(v0.c2)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) BETWEEN (v0.c3) AND (vt0.c2))))<((CAST(v0.c1 AS BLOB))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((x'')IS NOT(((((v0.c0)OR(v0.c2)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((v0.c0) BETWEEN (v0.c3) AND (vt0.c2))))<((CAST(v0.c1 AS BLOB))))) ORDER BY ((x'')IS NOT(((((v0.c0)OR(v0.c2)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) BETWEEN (v0.c3) AND (vt0.c2))))<((CAST(v0.c1 AS BLOB))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((x'')IS NOT(((((v0.c0)OR(v0.c2)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((v0.c0) BETWEEN (v0.c3) AND (vt0.c2))))<((CAST(v0.c1 AS BLOB))))) ORDER BY ((x'')IS NOT(((((v0.c0)OR(v0.c2)))AND(vt0.c0))));
SELECT ALL * FROM v0 WHERE (((((((((CASE WHEN v0.c0 THEN v0.c3 ELSE v0.c2 END)OR(IFNULL(DISTINCT v0.c1, v0.c0))))AND(((v0.c3) IS TRUE))))OR(CAST(v0.c4 AS NUMERIC))))OR(((v0.c0) BETWEEN (v0.c0) AND (0.9348952567488316))))) ORDER BY LIKELY(DISTINCT NULL), 'J' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN v0.c0 THEN v0.c3 ELSE v0.c2 END)OR(IFNULL(DISTINCT v0.c1, v0.c0))))AND(((v0.c3) IS TRUE))))OR(CAST(v0.c4 AS NUMERIC))))OR(((v0.c0) BETWEEN (v0.c0) AND (0.9348952567488316))))) IS TRUE)  as count FROM v0 ORDER BY LIKELY(DISTINCT NULL), 'J' DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((((CASE WHEN v0.c0 THEN v0.c3 ELSE v0.c2 END)OR(IFNULL(DISTINCT v0.c1, v0.c0))))AND(((v0.c3) IS TRUE))))OR(CAST(v0.c4 AS NUMERIC))))OR(((v0.c0) BETWEEN (v0.c0) AND (0.9348952567488316))))) ORDER BY LIKELY(DISTINCT NULL), 'J' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN v0.c0 THEN v0.c3 ELSE v0.c2 END)OR(IFNULL(DISTINCT v0.c1, v0.c0))))AND(((v0.c3) IS TRUE))))OR(CAST(v0.c4 AS NUMERIC))))OR(((v0.c0) BETWEEN (v0.c0) AND (0.9348952567488316))))) IS TRUE)  as count FROM v0 ORDER BY LIKELY(DISTINCT NULL), 'J' DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((((CASE WHEN v0.c0 THEN v0.c3 ELSE v0.c2 END)OR(IFNULL(DISTINCT v0.c1, v0.c0))))AND(((v0.c3) IS TRUE))))OR(CAST(v0.c4 AS NUMERIC))))OR(((v0.c0) BETWEEN (v0.c0) AND (0.9348952567488316))))) ORDER BY LIKELY(DISTINCT NULL), 'J' DESC  NULLS FIRST;
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (((((v0.c3)) BETWEEN ((v0.c1)) AND ((vt0.c0)))) NOTNULL) WHERE ((((+ (v0.c0)))<>(v0.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0)))!=(v0.c4 COLLATE NOCASE))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((((v0.c3)) BETWEEN ((v0.c1)) AND ((vt0.c0)))) NOTNULL));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (((((v0.c3)) BETWEEN ((v0.c1)) AND ((vt0.c0)))) NOTNULL) WHERE ((((+ (v0.c0)))<>(v0.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0)))!=(v0.c4 COLLATE NOCASE))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((((v0.c3)) BETWEEN ((v0.c1)) AND ((vt0.c0)))) NOTNULL));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (((((v0.c3)) BETWEEN ((v0.c1)) AND ((vt0.c0)))) NOTNULL) WHERE ((((+ (v0.c0)))<>(v0.c4 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((((v0.c3)AND('l tt')))OR(vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c3)AND('l tt')))OR(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((((v0.c3)AND('l tt')))OR(vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c3)AND('l tt')))OR(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((((v0.c3)AND('l tt')))OR(vt0.c1)) AS INTEGER));
SELECT COUNT(*) FROM v0 WHERE ((v0.c3 COLLATE RTRIM IN (v0.c2))) ORDER BY (((v0.c2)) BETWEEN ((v0.c4 COLLATE BINARY)) AND ((x'' COLLATE NOCASE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c3 COLLATE RTRIM IN (v0.c2))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2)) BETWEEN ((v0.c4 COLLATE BINARY)) AND ((x'' COLLATE NOCASE))) ASC);
SELECT COUNT(*) FROM v0 WHERE ((v0.c3 COLLATE RTRIM IN (v0.c2))) ORDER BY (((v0.c2)) BETWEEN ((v0.c4 COLLATE BINARY)) AND ((x'' COLLATE NOCASE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c3 COLLATE RTRIM IN (v0.c2))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2)) BETWEEN ((v0.c4 COLLATE BINARY)) AND ((x'' COLLATE NOCASE))) ASC);
SELECT COUNT(*) FROM v0 WHERE ((v0.c3 COLLATE RTRIM IN (v0.c2))) ORDER BY (((v0.c2)) BETWEEN ((v0.c4 COLLATE BINARY)) AND ((x'' COLLATE NOCASE))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((CASE v0.c3  WHEN v0.c2 THEN v0.c1 ELSE 0.23322617450177918 END IN (((v0.c4)=(v0.c0)), (v0.c2 IN (v0.c4)))));
SELECT SUM(count) FROM (SELECT (((CASE v0.c3  WHEN v0.c2 THEN v0.c1 ELSE 0.23322617450177918 END IN (((v0.c4)==(v0.c0)), (v0.c2 IN (v0.c4))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((CASE v0.c3  WHEN v0.c2 THEN v0.c1 ELSE 0.23322617450177918 END IN (((v0.c4)=(v0.c0)), (v0.c2 IN (v0.c4)))));
SELECT SUM(count) FROM (SELECT (((CASE v0.c3  WHEN v0.c2 THEN v0.c1 ELSE 0.23322617450177918 END IN (((v0.c4)==(v0.c0)), (v0.c2 IN (v0.c4))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((CASE v0.c3  WHEN v0.c2 THEN v0.c1 ELSE 0.23322617450177918 END IN (((v0.c4)=(v0.c0)), (v0.c2 IN (v0.c4)))));
SELECT * FROM vt0, v0 WHERE ((CAST(vt0.c2 AS NUMERIC) IN ())) ORDER BY ((((vt0.c2)OR((vt0.c1 IN ()))))OR((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c2 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c2)OR((vt0.c1 IN ()))))OR((NOT (v0.c0)))));
SELECT * FROM vt0, v0 WHERE ((CAST(vt0.c2 AS NUMERIC) IN ())) ORDER BY ((((vt0.c2)OR((vt0.c1 IN ()))))OR((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c2 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c2)OR((vt0.c1 IN ()))))OR((NOT (v0.c0)))));
SELECT * FROM vt0, v0 WHERE ((CAST(vt0.c2 AS NUMERIC) IN ())) ORDER BY ((((vt0.c2)OR((vt0.c1 IN ()))))OR((NOT (v0.c0))));
SELECT * FROM vt0 WHERE (((((vt0.c1)!=(vt0.c2)))LIKE(CASE vt0.c0  WHEN NULL THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY (((+ (vt0.c2)))<(CAST(vt0.c0 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<>(vt0.c2)))LIKE(CASE vt0.c0  WHEN NULL THEN vt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c2)))<(CAST(vt0.c0 AS BLOB))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c1)!=(vt0.c2)))LIKE(CASE vt0.c0  WHEN NULL THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY (((+ (vt0.c2)))<(CAST(vt0.c0 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<>(vt0.c2)))LIKE(CASE vt0.c0  WHEN NULL THEN vt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c2)))<(CAST(vt0.c0 AS BLOB))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c1)!=(vt0.c2)))LIKE(CASE vt0.c0  WHEN NULL THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY (((+ (vt0.c2)))<(CAST(vt0.c0 AS BLOB))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c1)/(v0.c3))) BETWEEN (((vt0.c0)+(vt0.c1))) AND (v0.c4 COLLATE BINARY))) ORDER BY vt0.c0  NULLS FIRST, ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ((v0.c4 IN ('[G'))) AND ((v0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)/(v0.c3))) BETWEEN (((vt0.c0)+(vt0.c1))) AND (v0.c4 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0  NULLS FIRST, ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ((v0.c4 IN ('[G'))) AND ((v0.c1 IN ()))) DESC);
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c1)/(v0.c3))) BETWEEN (((vt0.c0)+(vt0.c1))) AND (v0.c4 COLLATE BINARY))) ORDER BY vt0.c0  NULLS FIRST, ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ((v0.c4 IN ('[G'))) AND ((v0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)/(v0.c3))) BETWEEN (((vt0.c0)+(vt0.c1))) AND (v0.c4 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0  NULLS FIRST, ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ((v0.c4 IN ('[G'))) AND ((v0.c1 IN ()))) DESC);
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c1)/(v0.c3))) BETWEEN (((vt0.c0)+(vt0.c1))) AND (v0.c4 COLLATE BINARY))) ORDER BY vt0.c0  NULLS FIRST, ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ((v0.c4 IN ('[G'))) AND ((v0.c1 IN ()))) DESC;
SELECT ALL * FROM v0 WHERE (CAST((((x'5a13'))<((v0.c1))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((x'5a13'))<((v0.c1))) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST((((x'5a13'))<((v0.c1))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((x'5a13'))<((v0.c1))) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST((((x'5a13'))<((v0.c1))) AS NUMERIC));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c2, x'', v0.c4)) BETWEEN ((vt0.c1, v0.c0, v0.c3)) AND ((vt0.c1, vt0.c0, v0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((v0.c2, x'', v0.c4)) BETWEEN ((vt0.c1, v0.c0, v0.c3)) AND ((vt0.c1, vt0.c0, v0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c2, x'', v0.c4)) BETWEEN ((vt0.c1, v0.c0, v0.c3)) AND ((vt0.c1, vt0.c0, v0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((v0.c2, x'', v0.c4)) BETWEEN ((vt0.c1, v0.c0, v0.c3)) AND ((vt0.c1, vt0.c0, v0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c2, x'', v0.c4)) BETWEEN ((vt0.c1, v0.c0, v0.c3)) AND ((vt0.c1, vt0.c0, v0.c1))) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((((('N<')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))==((vt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((('N<')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))==((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((('N<')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))==((vt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((('N<')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))==((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((('N<')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))==((vt0.c2 IN ()))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('k')) AND ((TRIM(vt0.c0, vt0.c2))))) ORDER BY ((((vt0.c2)OR(vt0.c1)))>(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS LAST, ((vt0.c1) IS FALSE) ASC  NULLS FIRST, ((vt0.c0) BETWEEN (((vt0.c2)*(vt0.c0))) AND (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (('k')) AND ((TRIM(vt0.c0, vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)OR(vt0.c1)))>(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS LAST, ((vt0.c1) IS FALSE) ASC  NULLS FIRST, ((vt0.c0) BETWEEN (((vt0.c2)*(vt0.c0))) AND (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('k')) AND ((TRIM(vt0.c0, vt0.c2))))) ORDER BY ((((vt0.c2)OR(vt0.c1)))>(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS LAST, ((vt0.c1) IS FALSE) ASC  NULLS FIRST, ((vt0.c0) BETWEEN (((vt0.c2)*(vt0.c0))) AND (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (('k')) AND ((TRIM(vt0.c0, vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)OR(vt0.c1)))>(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS LAST, ((vt0.c1) IS FALSE) ASC  NULLS FIRST, ((vt0.c0) BETWEEN (((vt0.c2)*(vt0.c0))) AND (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('k')) AND ((TRIM(vt0.c0, vt0.c2))))) ORDER BY ((((vt0.c2)OR(vt0.c1)))>(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS LAST, ((vt0.c1) IS FALSE) ASC  NULLS FIRST, ((vt0.c0) BETWEEN (((vt0.c2)*(vt0.c0))) AND (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END));
SELECT ALL * FROM v0 WHERE (((((v0.c4))!=((v0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((v0.c4))!=((v0.c1))) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c4))!=((v0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((v0.c4))!=((v0.c1))) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c4))!=((v0.c1))) IN ()));
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((CAST(v0.c1 AS TEXT))|(((v0.c2)/(v0.c2)))) WHERE ('WZc%');
SELECT SUM(count) FROM (SELECT ALL (('WZc%') IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((CAST(v0.c1 AS TEXT))|(((v0.c2)/(v0.c2)))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((CAST(v0.c1 AS TEXT))|(((v0.c2)/(v0.c2)))) WHERE ('WZc%');
SELECT SUM(count) FROM (SELECT ALL (('WZc%') IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((CAST(v0.c1 AS TEXT))|(((v0.c2)/(v0.c2)))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((CAST(v0.c1 AS TEXT))|(((v0.c2)/(v0.c2)))) WHERE ('WZc%');
SELECT ALL COUNT(*) FROM v0 WHERE (((((((NULL)<=(v0.c4)))AND(((v0.c0) IS FALSE))))AND(v0.c3)));
SELECT SUM(count) FROM (SELECT ((((((((NULL)<=(v0.c4)))AND(((v0.c0) IS FALSE))))AND(v0.c3))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((NULL)<=(v0.c4)))AND(((v0.c0) IS FALSE))))AND(v0.c3)));
SELECT SUM(count) FROM (SELECT ((((((((NULL)<=(v0.c4)))AND(((v0.c0) IS FALSE))))AND(v0.c3))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((NULL)<=(v0.c4)))AND(((v0.c0) IS FALSE))))AND(v0.c3)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY CAST(((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY CAST(((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY CAST(((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)) AS INTEGER)  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (CASE vt0.c1  WHEN ((v0.c4)|('')) THEN (NOT (v0.c3)) WHEN v0.c4 COLLATE RTRIM THEN (+ (v0.c3)) WHEN LTRIM(v0.c0, vt0.c0) THEN COALESCE(v0.c0, vt0.c0) END) ORDER BY MIN(vt0.c1 COLLATE RTRIM, (v0.c4 IN ()), v0.c4 COLLATE NOCASE, ((((vt0.c2)AND(vt0.c0)))AND(v0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN ((v0.c4)|('')) THEN (NOT (v0.c3)) WHEN v0.c4 COLLATE RTRIM THEN (+ (v0.c3)) WHEN LTRIM(v0.c0, vt0.c0) THEN COALESCE(v0.c0, vt0.c0) END) IS TRUE)  as count FROM v0, vt0 ORDER BY MIN(vt0.c1 COLLATE RTRIM, (v0.c4 IN ()), v0.c4 COLLATE NOCASE, ((((vt0.c2)AND(vt0.c0)))AND(v0.c1))) DESC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (CASE vt0.c1  WHEN ((v0.c4)|('')) THEN (NOT (v0.c3)) WHEN v0.c4 COLLATE RTRIM THEN (+ (v0.c3)) WHEN LTRIM(v0.c0, vt0.c0) THEN COALESCE(v0.c0, vt0.c0) END) ORDER BY MIN(vt0.c1 COLLATE RTRIM, (v0.c4 IN ()), v0.c4 COLLATE NOCASE, ((((vt0.c2)AND(vt0.c0)))AND(v0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN ((v0.c4)|('')) THEN (NOT (v0.c3)) WHEN v0.c4 COLLATE RTRIM THEN (+ (v0.c3)) WHEN LTRIM(v0.c0, vt0.c0) THEN COALESCE(v0.c0, vt0.c0) END) IS TRUE)  as count FROM v0, vt0 ORDER BY MIN(vt0.c1 COLLATE RTRIM, (v0.c4 IN ()), v0.c4 COLLATE NOCASE, ((((vt0.c2)AND(vt0.c0)))AND(v0.c1))) DESC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (CASE vt0.c1  WHEN ((v0.c4)|('')) THEN (NOT (v0.c3)) WHEN v0.c4 COLLATE RTRIM THEN (+ (v0.c3)) WHEN LTRIM(v0.c0, vt0.c0) THEN COALESCE(v0.c0, vt0.c0) END) ORDER BY MIN(vt0.c1 COLLATE RTRIM, (v0.c4 IN ()), v0.c4 COLLATE NOCASE, ((((vt0.c2)AND(vt0.c0)))AND(v0.c1))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c1)<<(v0.c4)) COLLATE NOCASE) ORDER BY CAST((- ('f)')) AS REAL);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)<<(v0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((- ('f)')) AS REAL));
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c1)<<(v0.c4)) COLLATE NOCASE) ORDER BY CAST((- ('f)')) AS REAL);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)<<(v0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((- ('f)')) AS REAL));
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c1)<<(v0.c4)) COLLATE NOCASE) ORDER BY CAST((- ('f)')) AS REAL);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c3 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((v0.c3 IN ())) IS FALSE)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c3 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((v0.c3 IN ())) IS FALSE)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c3 IN ())) IS FALSE));
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c1) NOTNULL)))) ORDER BY ((((((((((vt0.c2)+(vt0.c2)))AND((vt0.c0 IN ()))))OR(vt0.c2 COLLATE BINARY)))AND(vt0.c2 COLLATE RTRIM)))AND((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((x'')))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c2)+(vt0.c2)))AND((vt0.c0 IN ()))))OR(vt0.c2 COLLATE BINARY)))AND(vt0.c2 COLLATE RTRIM)))AND((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((x''))))));
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c1) NOTNULL)))) ORDER BY ((((((((((vt0.c2)+(vt0.c2)))AND((vt0.c0 IN ()))))OR(vt0.c2 COLLATE BINARY)))AND(vt0.c2 COLLATE RTRIM)))AND((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((x'')))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c2)+(vt0.c2)))AND((vt0.c0 IN ()))))OR(vt0.c2 COLLATE BINARY)))AND(vt0.c2 COLLATE RTRIM)))AND((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((x''))))));
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c1) NOTNULL)))) ORDER BY ((((((((((vt0.c2)+(vt0.c2)))AND((vt0.c0 IN ()))))OR(vt0.c2 COLLATE BINARY)))AND(vt0.c2 COLLATE RTRIM)))AND((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((x'')))));
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c2)AND(v0.c4)))AND(vt0.c0))) NOT BETWEEN ((x'' IN ())) AND ((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c2, v0.c2, v0.c0)) AND ((v0.c0, v0.c1, vt0.c1)))))) ORDER BY ((((vt0.c0)OR(v0.c0)))IS(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c2)AND(v0.c4)))AND(vt0.c0))) NOT BETWEEN ((x'' IN ())) AND ((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c2, v0.c2, v0.c0)) AND ((v0.c0, v0.c1, vt0.c1)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0)OR(v0.c0)))IS(vt0.c0)));
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c2)AND(v0.c4)))AND(vt0.c0))) NOT BETWEEN ((x'' IN ())) AND ((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c2, v0.c2, v0.c0)) AND ((v0.c0, v0.c1, vt0.c1)))))) ORDER BY ((((vt0.c0)OR(v0.c0)))IS(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c2)AND(v0.c4)))AND(vt0.c0))) NOT BETWEEN ((x'' IN ())) AND ((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c2, v0.c2, v0.c0)) AND ((v0.c0, v0.c1, vt0.c1)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0)OR(v0.c0)))IS(vt0.c0)));
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c2)AND(v0.c4)))AND(vt0.c0))) NOT BETWEEN ((x'' IN ())) AND ((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c2, v0.c2, v0.c0)) AND ((v0.c0, v0.c1, vt0.c1)))))) ORDER BY ((((vt0.c0)OR(v0.c0)))IS(vt0.c0));
SELECT ALL * FROM v0, vt0 WHERE ((RTRIM(x'') IN ())) ORDER BY SQLITE_COMPILEOPTION_USED(((v0.c2) NOT BETWEEN (v0.c4) AND (v0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((RTRIM(x'') IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY SQLITE_COMPILEOPTION_USED(((v0.c2) NOT BETWEEN (v0.c4) AND (v0.c1))));
SELECT ALL * FROM v0, vt0 WHERE ((RTRIM(x'') IN ())) ORDER BY SQLITE_COMPILEOPTION_USED(((v0.c2) NOT BETWEEN (v0.c4) AND (v0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((RTRIM(x'') IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY SQLITE_COMPILEOPTION_USED(((v0.c2) NOT BETWEEN (v0.c4) AND (v0.c1))));
SELECT ALL * FROM v0, vt0 WHERE ((RTRIM(x'') IN ())) ORDER BY SQLITE_COMPILEOPTION_USED(((v0.c2) NOT BETWEEN (v0.c4) AND (v0.c1)));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (('-683686916') BETWEEN (CASE WHEN v0.c1 THEN v0.c4 END) AND (NULL)) WHERE ((~ (((v0.c4)&(v0.c1))))) ORDER BY 0Xffffffffac265ebe  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c4)&(v0.c1))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (('-683686916') BETWEEN (CASE WHEN v0.c1 THEN v0.c4 END) AND (NULL)) ORDER BY 0Xffffffffac265ebe  NULLS FIRST);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (('-683686916') BETWEEN (CASE WHEN v0.c1 THEN v0.c4 END) AND (NULL)) WHERE ((~ (((v0.c4)&(v0.c1))))) ORDER BY 0Xffffffffac265ebe  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c4)&(v0.c1))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (('-683686916') BETWEEN (CASE WHEN v0.c1 THEN v0.c4 END) AND (NULL)) ORDER BY 0Xffffffffac265ebe  NULLS FIRST);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (('-683686916') BETWEEN (CASE WHEN v0.c1 THEN v0.c4 END) AND (NULL)) WHERE ((~ (((v0.c4)&(v0.c1))))) ORDER BY 0Xffffffffac265ebe  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((657107943) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((657107943) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((657107943) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((657107943) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((657107943) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON vt0.c0 WHERE ((((vt0.c0, v0.c0, vt0.c0))<((x'', v0.c4, vt0.c2))) COLLATE RTRIM) ORDER BY CAST((v0.c1 IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, v0.c0, vt0.c0))<((x'', v0.c4, vt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON vt0.c0 ORDER BY CAST((v0.c1 IN ()) AS REAL));
SELECT ALL * FROM v0 INNER JOIN vt0 ON vt0.c0 WHERE ((((vt0.c0, v0.c0, vt0.c0))<((x'', v0.c4, vt0.c2))) COLLATE RTRIM) ORDER BY CAST((v0.c1 IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, v0.c0, vt0.c0))<((x'', v0.c4, vt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON vt0.c0 ORDER BY CAST((v0.c1 IN ()) AS REAL));
SELECT ALL * FROM v0 INNER JOIN vt0 ON vt0.c0 WHERE ((((vt0.c0, v0.c0, vt0.c0))<((x'', v0.c4, vt0.c2))) COLLATE RTRIM) ORDER BY CAST((v0.c1 IN ()) AS REAL);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))AND(CAST(vt0.c2 AS REAL))))OR((((vt0.c0))=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS NUMERIC))AND(CAST(vt0.c2 AS REAL))))OR((((vt0.c0))==((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))AND(CAST(vt0.c2 AS REAL))))OR((((vt0.c0))=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS NUMERIC))AND(CAST(vt0.c2 AS REAL))))OR((((vt0.c0))==((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))AND(CAST(vt0.c2 AS REAL))))OR((((vt0.c0))=((vt0.c0))))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE ((v0.c4) NOTNULL)  WHEN '' THEN ((0.15051373455344408) ISNULL) ELSE (vt0.c0 IN (vt0.c2)) END) ORDER BY CAST(((v0.c1)<(vt0.c2)) AS BLOB) ASC  NULLS FIRST, CASE v0.c3 COLLATE RTRIM  WHEN CASE WHEN v0.c2 THEN vt0.c0 END THEN ((v0.c0)||(v0.c3)) ELSE (((v0.c0)) BETWEEN ((vt0.c2)) AND ((v0.c0))) END  NULLS FIRST, (- (LOWER(vt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c4) NOTNULL)  WHEN '' THEN ((0.15051373455344408) ISNULL) ELSE (vt0.c0 IN (vt0.c2)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((v0.c1)<(vt0.c2)) AS BLOB) ASC  NULLS FIRST, CASE v0.c3 COLLATE RTRIM  WHEN CASE WHEN v0.c2 THEN vt0.c0 END THEN ((v0.c0)||(v0.c3)) ELSE (((v0.c0)) BETWEEN ((vt0.c2)) AND ((v0.c0))) END  NULLS FIRST, (- (LOWER(vt0.c2))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE ((v0.c4) NOTNULL)  WHEN '' THEN ((0.15051373455344408) ISNULL) ELSE (vt0.c0 IN (vt0.c2)) END) ORDER BY CAST(((v0.c1)<(vt0.c2)) AS BLOB) ASC  NULLS FIRST, CASE v0.c3 COLLATE RTRIM  WHEN CASE WHEN v0.c2 THEN vt0.c0 END THEN ((v0.c0)||(v0.c3)) ELSE (((v0.c0)) BETWEEN ((vt0.c2)) AND ((v0.c0))) END  NULLS FIRST, (- (LOWER(vt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c4) NOTNULL)  WHEN '' THEN ((0.15051373455344408) ISNULL) ELSE (vt0.c0 IN (vt0.c2)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((v0.c1)<(vt0.c2)) AS BLOB) ASC  NULLS FIRST, CASE v0.c3 COLLATE RTRIM  WHEN CASE WHEN v0.c2 THEN vt0.c0 END THEN ((v0.c0)||(v0.c3)) ELSE (((v0.c0)) BETWEEN ((vt0.c2)) AND ((v0.c0))) END  NULLS FIRST, (- (LOWER(vt0.c2))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE ((v0.c4) NOTNULL)  WHEN '' THEN ((0.15051373455344408) ISNULL) ELSE (vt0.c0 IN (vt0.c2)) END) ORDER BY CAST(((v0.c1)<(vt0.c2)) AS BLOB) ASC  NULLS FIRST, CASE v0.c3 COLLATE RTRIM  WHEN CASE WHEN v0.c2 THEN vt0.c0 END THEN ((v0.c0)||(v0.c3)) ELSE (((v0.c0)) BETWEEN ((vt0.c2)) AND ((v0.c0))) END  NULLS FIRST, (- (LOWER(vt0.c2))) DESC;
SELECT * FROM vt0 WHERE (CASE 0Xffffffffd0997503  WHEN (((vt0.c0, vt0.c2, x'')) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c2))) THEN x'' ELSE (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0Xffffffffd0997503  WHEN (((vt0.c0, vt0.c2, x'')) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c2))) THEN x'' ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE 0Xffffffffd0997503  WHEN (((vt0.c0, vt0.c2, x'')) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c2))) THEN x'' ELSE (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0Xffffffffd0997503  WHEN (((vt0.c0, vt0.c2, x'')) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c2))) THEN x'' ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE 0Xffffffffd0997503  WHEN (((vt0.c0, vt0.c2, x'')) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c2))) THEN x'' ELSE (~ (vt0.c0)) END);
SELECT COUNT(*) FROM v0 WHERE (v0.c4) ORDER BY json_valid(((((v0.c3)OR(v0.c4)))OR(v0.c2)))  NULLS FIRST, JULIANDAY(((v0.c4) NOT BETWEEN (v0.c4) AND (v0.c1)), CASE v0.c0  WHEN v0.c3 THEN v0.c4 END, CASE v0.c0  WHEN v0.c3 THEN NULL END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c4) IS TRUE)  as count FROM v0 ORDER BY json_valid(((((v0.c3)OR(v0.c4)))OR(v0.c2)))  NULLS FIRST, JULIANDAY(((v0.c4) NOT BETWEEN (v0.c4) AND (v0.c1)), CASE v0.c0  WHEN v0.c3 THEN v0.c4 END, CASE v0.c0  WHEN v0.c3 THEN NULL END)  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (v0.c4) ORDER BY json_valid(((((v0.c3)OR(v0.c4)))OR(v0.c2)))  NULLS FIRST, JULIANDAY(((v0.c4) NOT BETWEEN (v0.c4) AND (v0.c1)), CASE v0.c0  WHEN v0.c3 THEN v0.c4 END, CASE v0.c0  WHEN v0.c3 THEN NULL END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c4) IS TRUE)  as count FROM v0 ORDER BY json_valid(((((v0.c3)OR(v0.c4)))OR(v0.c2)))  NULLS FIRST, JULIANDAY(((v0.c4) NOT BETWEEN (v0.c4) AND (v0.c1)), CASE v0.c0  WHEN v0.c3 THEN v0.c4 END, CASE v0.c0  WHEN v0.c3 THEN NULL END)  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (v0.c4) ORDER BY json_valid(((((v0.c3)OR(v0.c4)))OR(v0.c2)))  NULLS FIRST, JULIANDAY(((v0.c4) NOT BETWEEN (v0.c4) AND (v0.c1)), CASE v0.c0  WHEN v0.c3 THEN v0.c4 END, CASE v0.c0  WHEN v0.c3 THEN NULL END)  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE ((+ (UNLIKELY(DISTINCT v0.c3)))) ORDER BY ((((vt0.c0)!=(v0.c2)))<<(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((+ (UNLIKELY(DISTINCT v0.c3)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0)!=(v0.c2)))<<(vt0.c0)) ASC);
SELECT ALL * FROM vt0, v0 WHERE ((+ (UNLIKELY(DISTINCT v0.c3)))) ORDER BY ((((vt0.c0)!=(v0.c2)))<<(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((+ (UNLIKELY(DISTINCT v0.c3)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0)!=(v0.c2)))<<(vt0.c0)) ASC);
SELECT ALL * FROM vt0, v0 WHERE ((+ (UNLIKELY(DISTINCT v0.c3)))) ORDER BY ((((vt0.c0)!=(v0.c2)))<<(vt0.c0)) ASC;
SELECT ALL * FROM v0, vt0 WHERE (NULLIF(DISTINCT CAST(NULL AS NUMERIC), (((v0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ORDER BY CAST((NOT (v0.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT CAST(NULL AS NUMERIC), (((v0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((NOT (v0.c1)) AS INTEGER));
SELECT ALL * FROM v0, vt0 WHERE (NULLIF(DISTINCT CAST(NULL AS NUMERIC), (((v0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ORDER BY CAST((NOT (v0.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT CAST(NULL AS NUMERIC), (((v0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((NOT (v0.c1)) AS INTEGER));
SELECT ALL * FROM v0, vt0 WHERE (NULLIF(DISTINCT CAST(NULL AS NUMERIC), (((v0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ORDER BY CAST((NOT (v0.c1)) AS INTEGER);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0, v0.c3, v0.c2, v0.c2, ''))<((v0.c4, NULL, v0.c3, '''G|Jᡗ*', v0.c1)))))==((((v0.c3)/('2136832150')))))) ORDER BY (((((v0.c2))<((v0.c0)))) ISNULL) ASC, CAST(v0.c1 COLLATE BINARY AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0, v0.c3, v0.c2, v0.c2, ''))<((v0.c4, NULL, v0.c3, '''G|Jᡗ*', v0.c1)))))==((((v0.c3)/('2136832150')))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c2))<((v0.c0)))) ISNULL) ASC, CAST(v0.c1 COLLATE BINARY AS REAL) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0, v0.c3, v0.c2, v0.c2, ''))<((v0.c4, NULL, v0.c3, '''G|Jᡗ*', v0.c1)))))==((((v0.c3)/('2136832150')))))) ORDER BY (((((v0.c2))<((v0.c0)))) ISNULL) ASC, CAST(v0.c1 COLLATE BINARY AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0, v0.c3, v0.c2, v0.c2, ''))<((v0.c4, NULL, v0.c3, '''G|Jᡗ*', v0.c1)))))==((((v0.c3)/('2136832150')))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c2))<((v0.c0)))) ISNULL) ASC, CAST(v0.c1 COLLATE BINARY AS REAL) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0, v0.c3, v0.c2, v0.c2, ''))<((v0.c4, NULL, v0.c3, '''G|Jᡗ*', v0.c1)))))==((((v0.c3)/('2136832150')))))) ORDER BY (((((v0.c2))<((v0.c0)))) ISNULL) ASC, CAST(v0.c1 COLLATE BINARY AS REAL) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c2 IN (0X7ac9d893)) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((vt0.c2 IN (0X7ac9d893)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c2 IN (0X7ac9d893)) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((vt0.c2 IN (0X7ac9d893)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c2 IN (0X7ac9d893)) COLLATE BINARY COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((NOT ((vt0.c0 IN ())))) ORDER BY CASE WHEN 0.8610828780904279 THEN (('a(') BETWEEN (vt0.c1) AND (v0.c3)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN 0.8610828780904279 THEN (('a(') BETWEEN (vt0.c1) AND (v0.c3)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((NOT ((vt0.c0 IN ())))) ORDER BY CASE WHEN 0.8610828780904279 THEN (('a(') BETWEEN (vt0.c1) AND (v0.c3)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN 0.8610828780904279 THEN (('a(') BETWEEN (vt0.c1) AND (v0.c3)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((NOT ((vt0.c0 IN ())))) ORDER BY CASE WHEN 0.8610828780904279 THEN (('a(') BETWEEN (vt0.c1) AND (v0.c3)) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((CAST(v0.c3 AS NUMERIC) IN (((v0.c1)%(v0.c3)))));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c3 AS NUMERIC) IN (((v0.c1)%(v0.c3))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((CAST(v0.c3 AS NUMERIC) IN (((v0.c1)%(v0.c3)))));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c3 AS NUMERIC) IN (((v0.c1)%(v0.c3))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((CAST(v0.c3 AS NUMERIC) IN (((v0.c1)%(v0.c3)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1)) NOT BETWEEN (((((vt0.c1, vt0.c2, v0.c1, v0.c0, vt0.c2))<((v0.c0, v0.c2, vt0.c2, vt0.c1, vt0.c0))))) AND ((vt0.c1)))) ORDER BY (~ (((vt0.c1) NOTNULL))) DESC, ((-1.286664248E9) IS TRUE)  NULLS LAST, load_extension((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN (((((vt0.c1, vt0.c2, v0.c1, v0.c0, vt0.c2))<((v0.c0, v0.c2, vt0.c2, vt0.c1, vt0.c0))))) AND ((vt0.c1)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (((vt0.c1) NOTNULL))) DESC, ((-1.286664248E9) IS TRUE)  NULLS LAST, load_extension((vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1)) NOT BETWEEN (((((vt0.c1, vt0.c2, v0.c1, v0.c0, vt0.c2))<((v0.c0, v0.c2, vt0.c2, vt0.c1, vt0.c0))))) AND ((vt0.c1)))) ORDER BY (~ (((vt0.c1) NOTNULL))) DESC, ((-1.286664248E9) IS TRUE)  NULLS LAST, load_extension((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN (((((vt0.c1, vt0.c2, v0.c1, v0.c0, vt0.c2))<((v0.c0, v0.c2, vt0.c2, vt0.c1, vt0.c0))))) AND ((vt0.c1)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (((vt0.c1) NOTNULL))) DESC, ((-1.286664248E9) IS TRUE)  NULLS LAST, load_extension((vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1)) NOT BETWEEN (((((vt0.c1, vt0.c2, v0.c1, v0.c0, vt0.c2))<((v0.c0, v0.c2, vt0.c2, vt0.c1, vt0.c0))))) AND ((vt0.c1)))) ORDER BY (~ (((vt0.c1) NOTNULL))) DESC, ((-1.286664248E9) IS TRUE)  NULLS LAST, load_extension((vt0.c0 IN ()));
SELECT * FROM v0 WHERE (INSTR((+ (v0.c2)), ((v0.c4) IS FALSE))) ORDER BY (((v0.c3))<=((0.507796712900518))) COLLATE RTRIM ASC  NULLS FIRST, (+ (CAST(v0.c1 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ((INSTR((+ (v0.c2)), ((v0.c4) IS FALSE))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c3))<=((0.507796712900518))) COLLATE RTRIM ASC  NULLS FIRST, (+ (CAST(v0.c1 AS REAL))) ASC);
SELECT * FROM v0 WHERE (INSTR((+ (v0.c2)), ((v0.c4) IS FALSE))) ORDER BY (((v0.c3))<=((0.507796712900518))) COLLATE RTRIM ASC  NULLS FIRST, (+ (CAST(v0.c1 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ((INSTR((+ (v0.c2)), ((v0.c4) IS FALSE))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c3))<=((0.507796712900518))) COLLATE RTRIM ASC  NULLS FIRST, (+ (CAST(v0.c1 AS REAL))) ASC);
SELECT * FROM v0 WHERE (INSTR((+ (v0.c2)), ((v0.c4) IS FALSE))) ORDER BY (((v0.c3))<=((0.507796712900518))) COLLATE RTRIM ASC  NULLS FIRST, (+ (CAST(v0.c1 AS REAL))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)OR((((vt0.c1, vt0.c2, vt0.c1))!=((vt0.c1, '', vt0.c2))))))OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE NOCASE)OR((((vt0.c1, vt0.c2, vt0.c1))!=((vt0.c1, '', vt0.c2))))))OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)OR((((vt0.c1, vt0.c2, vt0.c1))!=((vt0.c1, '', vt0.c2))))))OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE NOCASE)OR((((vt0.c1, vt0.c2, vt0.c1))!=((vt0.c1, '', vt0.c2))))))OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)OR((((vt0.c1, vt0.c2, vt0.c1))!=((vt0.c1, '', vt0.c2))))))OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c2);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0)>>(v0.c3)) IN (vt0.c1 COLLATE BINARY))) ORDER BY ((((vt0.c0) NOT BETWEEN (v0.c2) AND (vt0.c2))) NOTNULL), (((v0.c0)) NOT BETWEEN ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (v0.c3)))) AND ((COALESCE(DISTINCT v0.c2, v0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)>>(v0.c3)) IN (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (v0.c2) AND (vt0.c2))) NOTNULL), (((v0.c0)) NOT BETWEEN ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (v0.c3)))) AND ((COALESCE(DISTINCT v0.c2, v0.c3))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0)>>(v0.c3)) IN (vt0.c1 COLLATE BINARY))) ORDER BY ((((vt0.c0) NOT BETWEEN (v0.c2) AND (vt0.c2))) NOTNULL), (((v0.c0)) NOT BETWEEN ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (v0.c3)))) AND ((COALESCE(DISTINCT v0.c2, v0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)>>(v0.c3)) IN (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (v0.c2) AND (vt0.c2))) NOTNULL), (((v0.c0)) NOT BETWEEN ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (v0.c3)))) AND ((COALESCE(DISTINCT v0.c2, v0.c3))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0)>>(v0.c3)) IN (vt0.c1 COLLATE BINARY))) ORDER BY ((((vt0.c0) NOT BETWEEN (v0.c2) AND (vt0.c2))) NOTNULL), (((v0.c0)) NOT BETWEEN ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (v0.c3)))) AND ((COALESCE(DISTINCT v0.c2, v0.c3))))  NULLS LAST;
SELECT * FROM v0, vt0 WHERE ((((((v0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) IS TRUE)) ORDER BY ((((v0.c1) ISNULL))GLOB(64315581))  NULLS FIRST, '0.5688178998098277';
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) IS TRUE)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c1) ISNULL))GLOB(64315581))  NULLS FIRST, '0.5688178998098277');
SELECT * FROM v0, vt0 WHERE ((((((v0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) IS TRUE)) ORDER BY ((((v0.c1) ISNULL))GLOB(64315581))  NULLS FIRST, '0.5688178998098277';
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) IS TRUE)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c1) ISNULL))GLOB(64315581))  NULLS FIRST, '0.5688178998098277');
SELECT * FROM v0, vt0 WHERE ((((((v0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) IS TRUE)) ORDER BY ((((v0.c1) ISNULL))GLOB(64315581))  NULLS FIRST, '0.5688178998098277';
SELECT * FROM vt0 WHERE ((((CASE WHEN vt0.c1 THEN vt0.c1 END))>=((CAST(vt0.c2 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c1 THEN vt0.c1 END))>=((CAST(vt0.c2 AS TEXT))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((CASE WHEN vt0.c1 THEN vt0.c1 END))>=((CAST(vt0.c2 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c1 THEN vt0.c1 END))>=((CAST(vt0.c2 AS TEXT))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((CASE WHEN vt0.c1 THEN vt0.c1 END))>=((CAST(vt0.c2 AS TEXT)))));
SELECT * FROM vt0 WHERE (((vt0.c0)AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)AND(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED WHERE (x'') ORDER BY (((v0.c0 IN ()))-(((((v0.c2)OR(v0.c0)))AND(v0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ()))-(((((v0.c2)OR(v0.c0)))AND(v0.c2)))) DESC);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED WHERE (x'') ORDER BY (((v0.c0 IN ()))-(((((v0.c2)OR(v0.c0)))AND(v0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ()))-(((((v0.c2)OR(v0.c0)))AND(v0.c2)))) DESC);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED WHERE (x'') ORDER BY (((v0.c0 IN ()))-(((((v0.c2)OR(v0.c0)))AND(v0.c2)))) DESC;
SELECT ALL * FROM v0, vt0 WHERE (CASE UPPER(DISTINCT v0.c3)  WHEN v0.c4 COLLATE RTRIM THEN (NOT (v0.c2)) END) ORDER BY (((v0.c4, -2018943075, v0.c2)) NOT BETWEEN ((v0.c2 COLLATE NOCASE, (vt0.c2 IN ()), ((v0.c1)<=(v0.c1)))) AND ((((v0.c1)/(v0.c3)), v0.c2 COLLATE NOCASE, NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE UPPER(DISTINCT v0.c3)  WHEN v0.c4 COLLATE RTRIM THEN (NOT (v0.c2)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c4, -2018943075, v0.c2)) NOT BETWEEN ((v0.c2 COLLATE NOCASE, (vt0.c2 IN ()), ((v0.c1)<=(v0.c1)))) AND ((((v0.c1)/(v0.c3)), v0.c2 COLLATE NOCASE, NULL))) DESC);
SELECT ALL * FROM v0, vt0 WHERE (CASE UPPER(DISTINCT v0.c3)  WHEN v0.c4 COLLATE RTRIM THEN (NOT (v0.c2)) END) ORDER BY (((v0.c4, -2018943075, v0.c2)) NOT BETWEEN ((v0.c2 COLLATE NOCASE, (vt0.c2 IN ()), ((v0.c1)<=(v0.c1)))) AND ((((v0.c1)/(v0.c3)), v0.c2 COLLATE NOCASE, NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE UPPER(DISTINCT v0.c3)  WHEN v0.c4 COLLATE RTRIM THEN (NOT (v0.c2)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c4, -2018943075, v0.c2)) NOT BETWEEN ((v0.c2 COLLATE NOCASE, (vt0.c2 IN ()), ((v0.c1)<=(v0.c1)))) AND ((((v0.c1)/(v0.c3)), v0.c2 COLLATE NOCASE, NULL))) DESC);
SELECT ALL * FROM v0, vt0 WHERE (CASE UPPER(DISTINCT v0.c3)  WHEN v0.c4 COLLATE RTRIM THEN (NOT (v0.c2)) END) ORDER BY (((v0.c4, -2018943075, v0.c2)) NOT BETWEEN ((v0.c2 COLLATE NOCASE, (vt0.c2 IN ()), ((v0.c1)<=(v0.c1)))) AND ((((v0.c1)/(v0.c3)), v0.c2 COLLATE NOCASE, NULL))) DESC;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL))GLOB(vt0.c0 COLLATE NOCASE)) WHERE ((NOT ((((v0.c0))=((0Xf3c8cc3)))))) ORDER BY vt0.c2 ASC  NULLS LAST, (((('184612752' IN ())))<=(((((v0.c3, v0.c1, vt0.c2)) NOT BETWEEN ((v0.c3, vt0.c2, ')F\r')) AND ((v0.c1, x'218f', v0.c1)))))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((((v0.c0))==((0Xf3c8cc3)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL))GLOB(vt0.c0 COLLATE NOCASE)) ORDER BY vt0.c2 ASC  NULLS LAST, (((('184612752' IN ())))<=(((((v0.c3, v0.c1, vt0.c2)) NOT BETWEEN ((v0.c3, vt0.c2, ')F\r')) AND ((v0.c1, x'218f', v0.c1)))))) DESC);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL))GLOB(vt0.c0 COLLATE NOCASE)) WHERE ((NOT ((((v0.c0))=((0Xf3c8cc3)))))) ORDER BY vt0.c2 ASC  NULLS LAST, (((('184612752' IN ())))<=(((((v0.c3, v0.c1, vt0.c2)) NOT BETWEEN ((v0.c3, vt0.c2, ')F\r')) AND ((v0.c1, x'218f', v0.c1)))))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((((v0.c0))==((0Xf3c8cc3)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL))GLOB(vt0.c0 COLLATE NOCASE)) ORDER BY vt0.c2 ASC  NULLS LAST, (((('184612752' IN ())))<=(((((v0.c3, v0.c1, vt0.c2)) NOT BETWEEN ((v0.c3, vt0.c2, ')F\r')) AND ((v0.c1, x'218f', v0.c1)))))) DESC);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL))GLOB(vt0.c0 COLLATE NOCASE)) WHERE ((NOT ((((v0.c0))=((0Xf3c8cc3)))))) ORDER BY vt0.c2 ASC  NULLS LAST, (((('184612752' IN ())))<=(((((v0.c3, v0.c1, vt0.c2)) NOT BETWEEN ((v0.c3, vt0.c2, ')F\r')) AND ((v0.c1, x'218f', v0.c1)))))) DESC;
SELECT * FROM v0 WHERE (((((v0.c3) IS TRUE))&(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c3) IS TRUE))&(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c4))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c3) IS TRUE))&(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c3) IS TRUE))&(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c4))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c3) IS TRUE))&(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c4)))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED NATURAL JOIN v0 WHERE (v0.c3);
SELECT SUM(count) FROM (SELECT ((v0.c3) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED NATURAL JOIN v0 WHERE (v0.c3);
SELECT SUM(count) FROM (SELECT ((v0.c3) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED NATURAL JOIN v0 WHERE (v0.c3);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)/(-1786133695))  WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)) ELSE (vt0.c2 IN ()) END) ORDER BY LIKE(((((vt0.c2)AND(vt0.c1)))AND(vt0.c0)), x'b241')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)/(-1786133695))  WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)) ELSE (vt0.c2 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY LIKE(((((vt0.c2)AND(vt0.c1)))AND(vt0.c0)), x'b241')  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)/(-1786133695))  WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)) ELSE (vt0.c2 IN ()) END) ORDER BY LIKE(((((vt0.c2)AND(vt0.c1)))AND(vt0.c0)), x'b241')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)/(-1786133695))  WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)) ELSE (vt0.c2 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY LIKE(((((vt0.c2)AND(vt0.c1)))AND(vt0.c0)), x'b241')  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)/(-1786133695))  WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)) ELSE (vt0.c2 IN ()) END) ORDER BY LIKE(((((vt0.c2)AND(vt0.c1)))AND(vt0.c0)), x'b241')  NULLS LAST;
SELECT * FROM v0 WHERE (((((((((((((((v0.c3)AND(NULL)))AND(v0.c0)))AND(v0.c2)))OR(0Xfffffffff39ba070)))OR(v0.c4)))OR(v0.c1))) NOT BETWEEN (v0.c2) AND (((NULL)IS NOT(v0.c1))))) ORDER BY CASE (v0.c3 IN ())  WHEN CASE v0.c3  WHEN v0.c1 THEN v0.c1 END THEN (NOT (v0.c3)) WHEN COALESCE(DISTINCT v0.c3, v0.c4) THEN CAST(v0.c2 AS NUMERIC) WHEN ((v0.c2)==(v0.c4)) THEN ((v0.c4)>=(v0.c2)) ELSE v0.c1 COLLATE NOCASE END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((v0.c3)AND(NULL)))AND(v0.c0)))AND(v0.c2)))OR(0xfffffffff39ba070)))OR(v0.c4)))OR(v0.c1))) NOT BETWEEN (v0.c2) AND (((NULL)IS NOT(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY CASE (v0.c3 IN ())  WHEN CASE v0.c3  WHEN v0.c1 THEN v0.c1 END THEN (NOT (v0.c3)) WHEN COALESCE(DISTINCT v0.c3, v0.c4) THEN CAST(v0.c2 AS NUMERIC) WHEN ((v0.c2)==(v0.c4)) THEN ((v0.c4)>=(v0.c2)) ELSE v0.c1 COLLATE NOCASE END DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((((((((((((((v0.c3)AND(NULL)))AND(v0.c0)))AND(v0.c2)))OR(0Xfffffffff39ba070)))OR(v0.c4)))OR(v0.c1))) NOT BETWEEN (v0.c2) AND (((NULL)IS NOT(v0.c1))))) ORDER BY CASE (v0.c3 IN ())  WHEN CASE v0.c3  WHEN v0.c1 THEN v0.c1 END THEN (NOT (v0.c3)) WHEN COALESCE(DISTINCT v0.c3, v0.c4) THEN CAST(v0.c2 AS NUMERIC) WHEN ((v0.c2)==(v0.c4)) THEN ((v0.c4)>=(v0.c2)) ELSE v0.c1 COLLATE NOCASE END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((v0.c3)AND(NULL)))AND(v0.c0)))AND(v0.c2)))OR(0xfffffffff39ba070)))OR(v0.c4)))OR(v0.c1))) NOT BETWEEN (v0.c2) AND (((NULL)IS NOT(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY CASE (v0.c3 IN ())  WHEN CASE v0.c3  WHEN v0.c1 THEN v0.c1 END THEN (NOT (v0.c3)) WHEN COALESCE(DISTINCT v0.c3, v0.c4) THEN CAST(v0.c2 AS NUMERIC) WHEN ((v0.c2)==(v0.c4)) THEN ((v0.c4)>=(v0.c2)) ELSE v0.c1 COLLATE NOCASE END DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((((((((((((((v0.c3)AND(NULL)))AND(v0.c0)))AND(v0.c2)))OR(0Xfffffffff39ba070)))OR(v0.c4)))OR(v0.c1))) NOT BETWEEN (v0.c2) AND (((NULL)IS NOT(v0.c1))))) ORDER BY CASE (v0.c3 IN ())  WHEN CASE v0.c3  WHEN v0.c1 THEN v0.c1 END THEN (NOT (v0.c3)) WHEN COALESCE(DISTINCT v0.c3, v0.c4) THEN CAST(v0.c2 AS NUMERIC) WHEN ((v0.c2)==(v0.c4)) THEN ((v0.c4)>=(v0.c2)) ELSE v0.c1 COLLATE NOCASE END DESC  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN v0 ON (~ (((v0.c2)>=(v0.c3)))) WHERE (((((((v0.c1)AND('407437007')))AND(vt0.c2))) IS TRUE)) ORDER BY vt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)AND('407437007')))AND(vt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (~ (((v0.c2)>=(v0.c3)))) ORDER BY vt0.c2  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN v0 ON (~ (((v0.c2)>=(v0.c3)))) WHERE (((((((v0.c1)AND('407437007')))AND(vt0.c2))) IS TRUE)) ORDER BY vt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)AND('407437007')))AND(vt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (~ (((v0.c2)>=(v0.c3)))) ORDER BY vt0.c2  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN v0 ON (~ (((v0.c2)>=(v0.c3)))) WHERE (((((((v0.c1)AND('407437007')))AND(vt0.c2))) IS TRUE)) ORDER BY vt0.c2  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c1)/(vt0.c1))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))&(((vt0.c1) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c1)/(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))&(((vt0.c1) ISNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c1)/(vt0.c1))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))&(((vt0.c1) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c1)/(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))&(((vt0.c1) ISNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c1)/(vt0.c1))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))&(((vt0.c1) ISNULL))) ASC  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE ((((((((vt0.c1))!=((v0.c0))))OR(CASE WHEN v0.c2 THEN vt0.c2 ELSE vt0.c2 END)))OR(vt0.c0 COLLATE RTRIM))) ORDER BY UNICODE(((v0.c4) ISNULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1))<>((v0.c0))))OR(CASE WHEN v0.c2 THEN vt0.c2 ELSE vt0.c2 END)))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0 ORDER BY UNICODE(((v0.c4) ISNULL)) DESC);
SELECT * FROM v0, vt0 WHERE ((((((((vt0.c1))!=((v0.c0))))OR(CASE WHEN v0.c2 THEN vt0.c2 ELSE vt0.c2 END)))OR(vt0.c0 COLLATE RTRIM))) ORDER BY UNICODE(((v0.c4) ISNULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1))<>((v0.c0))))OR(CASE WHEN v0.c2 THEN vt0.c2 ELSE vt0.c2 END)))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0 ORDER BY UNICODE(((v0.c4) ISNULL)) DESC);
SELECT * FROM v0, vt0 WHERE ((((((((vt0.c1))!=((v0.c0))))OR(CASE WHEN v0.c2 THEN vt0.c2 ELSE vt0.c2 END)))OR(vt0.c0 COLLATE RTRIM))) ORDER BY UNICODE(((v0.c4) ISNULL)) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)|(vt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)|(vt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)|(vt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)|(vt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)|(vt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (CASE v0.c0  WHEN v0.c3 THEN v0.c2 ELSE v0.c1 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE v0.c0  WHEN v0.c3 THEN v0.c2 ELSE v0.c1 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (CASE v0.c0  WHEN v0.c3 THEN v0.c2 ELSE v0.c1 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE v0.c0  WHEN v0.c3 THEN v0.c2 ELSE v0.c1 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (CASE v0.c0  WHEN v0.c3 THEN v0.c2 ELSE v0.c1 END)));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL) COLLATE RTRIM) ORDER BY CASE (~ (v0.c1))  WHEN ((v0.c4) BETWEEN (v0.c0) AND (v0.c0)) THEN ((((((((v0.c3)AND(v0.c4)))AND(v0.c4)))AND(0.5577187329192923)))OR(v0.c1)) WHEN (NOT (v0.c0)) THEN CASE WHEN v0.c4 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c2 END WHEN ((((v0.c2)OR(v0.c2)))AND(v0.c2)) THEN ((v0.c0)>>(v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY CASE (~ (v0.c1))  WHEN ((v0.c4) BETWEEN (v0.c0) AND (v0.c0)) THEN ((((((((v0.c3)AND(v0.c4)))AND(v0.c4)))AND(0.5577187329192923)))OR(v0.c1)) WHEN (NOT (v0.c0)) THEN CASE WHEN v0.c4 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c2 END WHEN ((((v0.c2)OR(v0.c2)))AND(v0.c2)) THEN ((v0.c0)>>(v0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL) COLLATE RTRIM) ORDER BY CASE (~ (v0.c1))  WHEN ((v0.c4) BETWEEN (v0.c0) AND (v0.c0)) THEN ((((((((v0.c3)AND(v0.c4)))AND(v0.c4)))AND(0.5577187329192923)))OR(v0.c1)) WHEN (NOT (v0.c0)) THEN CASE WHEN v0.c4 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c2 END WHEN ((((v0.c2)OR(v0.c2)))AND(v0.c2)) THEN ((v0.c0)>>(v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY CASE (~ (v0.c1))  WHEN ((v0.c4) BETWEEN (v0.c0) AND (v0.c0)) THEN ((((((((v0.c3)AND(v0.c4)))AND(v0.c4)))AND(0.5577187329192923)))OR(v0.c1)) WHEN (NOT (v0.c0)) THEN CASE WHEN v0.c4 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c2 END WHEN ((((v0.c2)OR(v0.c2)))AND(v0.c2)) THEN ((v0.c0)>>(v0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL) COLLATE RTRIM) ORDER BY CASE (~ (v0.c1))  WHEN ((v0.c4) BETWEEN (v0.c0) AND (v0.c0)) THEN ((((((((v0.c3)AND(v0.c4)))AND(v0.c4)))AND(0.5577187329192923)))OR(v0.c1)) WHEN (NOT (v0.c0)) THEN CASE WHEN v0.c4 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c2 END WHEN ((((v0.c2)OR(v0.c2)))AND(v0.c2)) THEN ((v0.c0)>>(v0.c0)) END  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c2);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((vt0.c2)&(NULL))) AND (vt0.c1))) ORDER BY ((json_valid(vt0.c0))<<(((((vt0.c1)AND('337485921')))AND(vt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((vt0.c2)&(NULL))) AND (vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY ((json_valid(vt0.c0))<<(((((vt0.c1)AND('337485921')))AND(vt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((vt0.c2)&(NULL))) AND (vt0.c1))) ORDER BY ((json_valid(vt0.c0))<<(((((vt0.c1)AND('337485921')))AND(vt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((vt0.c2)&(NULL))) AND (vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY ((json_valid(vt0.c0))<<(((((vt0.c1)AND('337485921')))AND(vt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((vt0.c2)&(NULL))) AND (vt0.c1))) ORDER BY ((json_valid(vt0.c0))<<(((((vt0.c1)AND('337485921')))AND(vt0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c3)GLOB(v0.c1))))<=((((((((((NULL)AND(v0.c3)))OR(v0.c2)))OR(v0.c1)))OR(x'acff'))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c3)GLOB(v0.c1))))<=((((((((((NULL)AND(v0.c3)))OR(v0.c2)))OR(v0.c1)))OR(x'acff')))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c3)GLOB(v0.c1))))<=((((((((((NULL)AND(v0.c3)))OR(v0.c2)))OR(v0.c1)))OR(x'acff'))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c3)GLOB(v0.c1))))<=((((((((((NULL)AND(v0.c3)))OR(v0.c2)))OR(v0.c1)))OR(x'acff')))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c3)GLOB(v0.c1))))<=((((((((((NULL)AND(v0.c3)))OR(v0.c2)))OR(v0.c1)))OR(x'acff'))))));
SELECT ALL * FROM v0 WHERE (0.30400779908249176);
SELECT SUM(count) FROM (SELECT ALL ((0.30400779908249176) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.30400779908249176);
SELECT SUM(count) FROM (SELECT ALL ((0.30400779908249176) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.30400779908249176);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1)))) ORDER BY (((vt0.c2)) NOT BETWEEN ((((vt0.c0)+(vt0.c0)))) AND ((x'2aa8'))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2)) NOT BETWEEN ((((vt0.c0)+(vt0.c0)))) AND ((x'2aa8'))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1)))) ORDER BY (((vt0.c2)) NOT BETWEEN ((((vt0.c0)+(vt0.c0)))) AND ((x'2aa8'))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2)) NOT BETWEEN ((((vt0.c0)+(vt0.c0)))) AND ((x'2aa8'))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1)))) ORDER BY (((vt0.c2)) NOT BETWEEN ((((vt0.c0)+(vt0.c0)))) AND ((x'2aa8'))) ASC  NULLS FIRST;
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON v0.c0 WHERE ((((((((((((v0.c3)OR(vt0.c2)))AND(v0.c1)))AND(v0.c0)))AND(v0.c1)), ((v0.c2)AND(vt0.c1)), v0.c0, v0.c1 COLLATE RTRIM, ((((v0.c3)AND(vt0.c1)))AND(vt0.c1))))<=((CAST(vt0.c2 AS BLOB), ((v0.c3) NOTNULL), ((vt0.c0) NOT NULL), CAST(v0.c0 AS REAL), ((((vt0.c1)AND(v0.c4)))OR(v0.c4)))))) ORDER BY ((v0.c2) BETWEEN (v0.c1) AND (v0.c4)) COLLATE BINARY ASC, (((v0.c4, vt0.c0, v0.c0)) BETWEEN ((((((v0.c0)AND(v0.c1)))AND(v0.c0)), ((((vt0.c0)AND(v0.c1)))OR(v0.c0)), ((v0.c2) IS TRUE))) AND (((v0.c2 IN ()), CAST(v0.c0 AS NUMERIC), '130111076')));
SELECT SUM(count) FROM (SELECT (((((((((((((v0.c3)OR(vt0.c2)))AND(v0.c1)))AND(v0.c0)))AND(v0.c1)), ((v0.c2)AND(vt0.c1)), v0.c0, v0.c1 COLLATE RTRIM, ((((v0.c3)AND(vt0.c1)))AND(vt0.c1))))<=((CAST(vt0.c2 AS BLOB), ((v0.c3) NOTNULL), ((vt0.c0) NOT NULL), CAST(v0.c0 AS REAL), ((((vt0.c1)AND(v0.c4)))OR(v0.c4)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON v0.c0 ORDER BY ((v0.c2) BETWEEN (v0.c1) AND (v0.c4)) COLLATE BINARY ASC, (((v0.c4, vt0.c0, v0.c0)) BETWEEN ((((((v0.c0)AND(v0.c1)))AND(v0.c0)), ((((vt0.c0)AND(v0.c1)))OR(v0.c0)), ((v0.c2) IS TRUE))) AND (((v0.c2 IN ()), CAST(v0.c0 AS NUMERIC), '130111076'))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON v0.c0 WHERE ((((((((((((v0.c3)OR(vt0.c2)))AND(v0.c1)))AND(v0.c0)))AND(v0.c1)), ((v0.c2)AND(vt0.c1)), v0.c0, v0.c1 COLLATE RTRIM, ((((v0.c3)AND(vt0.c1)))AND(vt0.c1))))<=((CAST(vt0.c2 AS BLOB), ((v0.c3) NOTNULL), ((vt0.c0) NOT NULL), CAST(v0.c0 AS REAL), ((((vt0.c1)AND(v0.c4)))OR(v0.c4)))))) ORDER BY ((v0.c2) BETWEEN (v0.c1) AND (v0.c4)) COLLATE BINARY ASC, (((v0.c4, vt0.c0, v0.c0)) BETWEEN ((((((v0.c0)AND(v0.c1)))AND(v0.c0)), ((((vt0.c0)AND(v0.c1)))OR(v0.c0)), ((v0.c2) IS TRUE))) AND (((v0.c2 IN ()), CAST(v0.c0 AS NUMERIC), '130111076')));
SELECT SUM(count) FROM (SELECT (((((((((((((v0.c3)OR(vt0.c2)))AND(v0.c1)))AND(v0.c0)))AND(v0.c1)), ((v0.c2)AND(vt0.c1)), v0.c0, v0.c1 COLLATE RTRIM, ((((v0.c3)AND(vt0.c1)))AND(vt0.c1))))<=((CAST(vt0.c2 AS BLOB), ((v0.c3) NOTNULL), ((vt0.c0) NOT NULL), CAST(v0.c0 AS REAL), ((((vt0.c1)AND(v0.c4)))OR(v0.c4)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON v0.c0 ORDER BY ((v0.c2) BETWEEN (v0.c1) AND (v0.c4)) COLLATE BINARY ASC, (((v0.c4, vt0.c0, v0.c0)) BETWEEN ((((((v0.c0)AND(v0.c1)))AND(v0.c0)), ((((vt0.c0)AND(v0.c1)))OR(v0.c0)), ((v0.c2) IS TRUE))) AND (((v0.c2 IN ()), CAST(v0.c0 AS NUMERIC), '130111076'))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON v0.c0 WHERE ((((((((((((v0.c3)OR(vt0.c2)))AND(v0.c1)))AND(v0.c0)))AND(v0.c1)), ((v0.c2)AND(vt0.c1)), v0.c0, v0.c1 COLLATE RTRIM, ((((v0.c3)AND(vt0.c1)))AND(vt0.c1))))<=((CAST(vt0.c2 AS BLOB), ((v0.c3) NOTNULL), ((vt0.c0) NOT NULL), CAST(v0.c0 AS REAL), ((((vt0.c1)AND(v0.c4)))OR(v0.c4)))))) ORDER BY ((v0.c2) BETWEEN (v0.c1) AND (v0.c4)) COLLATE BINARY ASC, (((v0.c4, vt0.c0, v0.c0)) BETWEEN ((((((v0.c0)AND(v0.c1)))AND(v0.c0)), ((((vt0.c0)AND(v0.c1)))OR(v0.c0)), ((v0.c2) IS TRUE))) AND (((v0.c2 IN ()), CAST(v0.c0 AS NUMERIC), '130111076')));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c2) AND (v0.c0)), CASE v0.c4  WHEN v0.c4 THEN v0.c0 END, CAST(v0.c2 AS BLOB)))<((x'', ((v0.c0)+(v0.c1)), (((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))))) ORDER BY TRIM(DISTINCT CAST(v0.c4 AS NUMERIC)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) BETWEEN (v0.c2) AND (v0.c0)), CASE v0.c4  WHEN v0.c4 THEN v0.c0 END, CAST(v0.c2 AS BLOB)))<((x'', ((v0.c0)+(v0.c1)), (((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY TRIM(DISTINCT CAST(v0.c4 AS NUMERIC)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c2) AND (v0.c0)), CASE v0.c4  WHEN v0.c4 THEN v0.c0 END, CAST(v0.c2 AS BLOB)))<((x'', ((v0.c0)+(v0.c1)), (((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))))) ORDER BY TRIM(DISTINCT CAST(v0.c4 AS NUMERIC)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) BETWEEN (v0.c2) AND (v0.c0)), CASE v0.c4  WHEN v0.c4 THEN v0.c0 END, CAST(v0.c2 AS BLOB)))<((x'', ((v0.c0)+(v0.c1)), (((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY TRIM(DISTINCT CAST(v0.c4 AS NUMERIC)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c2) AND (v0.c0)), CASE v0.c4  WHEN v0.c4 THEN v0.c0 END, CAST(v0.c2 AS BLOB)))<((x'', ((v0.c0)+(v0.c1)), (((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))))) ORDER BY TRIM(DISTINCT CAST(v0.c4 AS NUMERIC)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c2))) NOTNULL));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN TRIM(DISTINCT v0.c3) THEN CAST(vt0.c0 AS BLOB) END) ORDER BY (v0.c3 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(DISTINCT v0.c3) THEN CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (v0.c3 IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN TRIM(DISTINCT v0.c3) THEN CAST(vt0.c0 AS BLOB) END) ORDER BY (v0.c3 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(DISTINCT v0.c3) THEN CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (v0.c3 IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN TRIM(DISTINCT v0.c3) THEN CAST(vt0.c0 AS BLOB) END) ORDER BY (v0.c3 IN ())  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)AND(vt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)AND(vt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)AND(vt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)AND(vt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)AND(vt0.c2)) AS NUMERIC));
SELECT COUNT(*) FROM v0 WHERE ((~ (v0.c3))) ORDER BY '603887622'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c3))) IS TRUE)  as count FROM v0 ORDER BY '603887622'  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((~ (v0.c3))) ORDER BY '603887622'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c3))) IS TRUE)  as count FROM v0 ORDER BY '603887622'  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((~ (v0.c3))) ORDER BY '603887622'  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (0X7b556424);
SELECT SUM(count) FROM (SELECT ALL ((0X7b556424) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (0X7b556424);
SELECT SUM(count) FROM (SELECT ALL ((0X7b556424) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (0X7b556424);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT * FROM vt0 WHERE (x'a454') ORDER BY (+ (((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((x'a454') IS TRUE)  as count FROM vt0 ORDER BY (+ (((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))));
SELECT * FROM vt0 WHERE (x'a454') ORDER BY (+ (((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((x'a454') IS TRUE)  as count FROM vt0 ORDER BY (+ (((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))));
SELECT * FROM vt0 WHERE (x'a454') ORDER BY (+ (((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))));
SELECT COUNT(*) FROM vt0, v0 WHERE (SQLITE_SOURCE_ID()) ORDER BY x'e40e827d'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0, v0 ORDER BY x'e40e827d'  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (SQLITE_SOURCE_ID()) ORDER BY x'e40e827d'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0, v0 ORDER BY x'e40e827d'  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (SQLITE_SOURCE_ID()) ORDER BY x'e40e827d'  NULLS FIRST;
SELECT * FROM v0 WHERE (CASE ((3.797372E7) NOT BETWEEN (v0.c1) AND (x'6baf'))  WHEN CASE WHEN v0.c3 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END THEN -0.0 ELSE ((v0.c0)/(v0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((3.797372E7) NOT BETWEEN (v0.c1) AND (x'6baf'))  WHEN CASE WHEN v0.c3 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END THEN -0.0 ELSE ((v0.c0)/(v0.c1)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE ((3.797372E7) NOT BETWEEN (v0.c1) AND (x'6baf'))  WHEN CASE WHEN v0.c3 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END THEN -0.0 ELSE ((v0.c0)/(v0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((3.797372E7) NOT BETWEEN (v0.c1) AND (x'6baf'))  WHEN CASE WHEN v0.c3 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END THEN -0.0 ELSE ((v0.c0)/(v0.c1)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE ((3.797372E7) NOT BETWEEN (v0.c1) AND (x'6baf'))  WHEN CASE WHEN v0.c3 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END THEN -0.0 ELSE ((v0.c0)/(v0.c1)) END);
SELECT COUNT(*) FROM vt0 WHERE ('2123874593');
SELECT SUM(count) FROM (SELECT ALL (('2123874593') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('2123874593');
SELECT SUM(count) FROM (SELECT ALL (('2123874593') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('2123874593');
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c0)<<(v0.c0)))OR((vt0.c0 IN (v0.c2)))))OR(CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c0 END))) ORDER BY LIKELY(SUBSTR(NULL, v0.c2)) ASC, CAST(CASE vt0.c1  WHEN v0.c3 THEN v0.c2 ELSE v0.c2 END AS REAL);
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)<<(v0.c0)))OR((vt0.c0 IN (v0.c2)))))OR(CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY LIKELY(SUBSTR(NULL, v0.c2)) ASC, CAST(CASE vt0.c1  WHEN v0.c3 THEN v0.c2 ELSE v0.c2 END AS REAL));
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c0)<<(v0.c0)))OR((vt0.c0 IN (v0.c2)))))OR(CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c0 END))) ORDER BY LIKELY(SUBSTR(NULL, v0.c2)) ASC, CAST(CASE vt0.c1  WHEN v0.c3 THEN v0.c2 ELSE v0.c2 END AS REAL);
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)<<(v0.c0)))OR((vt0.c0 IN (v0.c2)))))OR(CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY LIKELY(SUBSTR(NULL, v0.c2)) ASC, CAST(CASE vt0.c1  WHEN v0.c3 THEN v0.c2 ELSE v0.c2 END AS REAL));
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c0)<<(v0.c0)))OR((vt0.c0 IN (v0.c2)))))OR(CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c0 END))) ORDER BY LIKELY(SUBSTR(NULL, v0.c2)) ASC, CAST(CASE vt0.c1  WHEN v0.c3 THEN v0.c2 ELSE v0.c2 END AS REAL);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((((((v0.c3))>((v0.c4))), (- (v0.c1)), ((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c1))))>((vt0.c1, 2.70926392E8, '~4' COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c3))>((v0.c4))), (- (v0.c1)), ((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c1))))>((vt0.c1, 2.70926392E8, '~4' COLLATE BINARY)))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((((((v0.c3))>((v0.c4))), (- (v0.c1)), ((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c1))))>((vt0.c1, 2.70926392E8, '~4' COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c3))>((v0.c4))), (- (v0.c1)), ((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c1))))>((vt0.c1, 2.70926392E8, '~4' COLLATE BINARY)))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((((((v0.c3))>((v0.c4))), (- (v0.c1)), ((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c1))))>((vt0.c1, 2.70926392E8, '~4' COLLATE BINARY))));
SELECT ALL COUNT(*) FROM v0 WHERE (UPPER((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER((~ (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (UPPER((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER((~ (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (UPPER((~ (v0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c3) ORDER BY CASE WHEN v0.c1 COLLATE BINARY THEN ((v0.c0) BETWEEN (x'346ac0d4') AND (1183327672)) WHEN CASE v0.c0  WHEN v0.c2 THEN v0.c3 WHEN v0.c3 THEN v0.c1 WHEN v0.c1 THEN -2064962940 ELSE v0.c3 END THEN -8.5480885E7 WHEN ((v0.c2) NOT NULL) THEN v0.c2 ELSE CAST(v0.c1 AS NUMERIC) END DESC  NULLS FIRST, CASE WHEN (- (v0.c1)) THEN (((1963905472, v0.c1, '303133937')) NOT BETWEEN ((v0.c2, v0.c1, v0.c3)) AND ((v0.c3, v0.c0, v0.c0))) WHEN (v0.c4 IN ()) THEN (- (v0.c2)) WHEN ((((v0.c2)OR(v0.c3)))AND(v0.c3)) THEN CASE WHEN v0.c0 THEN v0.c1 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c1 COLLATE BINARY THEN ((v0.c0) BETWEEN (x'346ac0d4') AND (1183327672)) WHEN CASE v0.c0  WHEN v0.c2 THEN v0.c3 WHEN v0.c3 THEN v0.c1 WHEN v0.c1 THEN -2064962940 ELSE v0.c3 END THEN -8.5480885E7 WHEN ((v0.c2) NOT NULL) THEN v0.c2 ELSE CAST(v0.c1 AS NUMERIC) END DESC  NULLS FIRST, CASE WHEN (- (v0.c1)) THEN (((1963905472, v0.c1, '303133937')) NOT BETWEEN ((v0.c2, v0.c1, v0.c3)) AND ((v0.c3, v0.c0, v0.c0))) WHEN (v0.c4 IN ()) THEN (- (v0.c2)) WHEN ((((v0.c2)OR(v0.c3)))AND(v0.c3)) THEN CASE WHEN v0.c0 THEN v0.c1 END END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c3) ORDER BY CASE WHEN v0.c1 COLLATE BINARY THEN ((v0.c0) BETWEEN (x'346ac0d4') AND (1183327672)) WHEN CASE v0.c0  WHEN v0.c2 THEN v0.c3 WHEN v0.c3 THEN v0.c1 WHEN v0.c1 THEN -2064962940 ELSE v0.c3 END THEN -8.5480885E7 WHEN ((v0.c2) NOT NULL) THEN v0.c2 ELSE CAST(v0.c1 AS NUMERIC) END DESC  NULLS FIRST, CASE WHEN (- (v0.c1)) THEN (((1963905472, v0.c1, '303133937')) NOT BETWEEN ((v0.c2, v0.c1, v0.c3)) AND ((v0.c3, v0.c0, v0.c0))) WHEN (v0.c4 IN ()) THEN (- (v0.c2)) WHEN ((((v0.c2)OR(v0.c3)))AND(v0.c3)) THEN CASE WHEN v0.c0 THEN v0.c1 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c1 COLLATE BINARY THEN ((v0.c0) BETWEEN (x'346ac0d4') AND (1183327672)) WHEN CASE v0.c0  WHEN v0.c2 THEN v0.c3 WHEN v0.c3 THEN v0.c1 WHEN v0.c1 THEN -2064962940 ELSE v0.c3 END THEN -8.5480885E7 WHEN ((v0.c2) NOT NULL) THEN v0.c2 ELSE CAST(v0.c1 AS NUMERIC) END DESC  NULLS FIRST, CASE WHEN (- (v0.c1)) THEN (((1963905472, v0.c1, '303133937')) NOT BETWEEN ((v0.c2, v0.c1, v0.c3)) AND ((v0.c3, v0.c0, v0.c0))) WHEN (v0.c4 IN ()) THEN (- (v0.c2)) WHEN ((((v0.c2)OR(v0.c3)))AND(v0.c3)) THEN CASE WHEN v0.c0 THEN v0.c1 END END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c3) ORDER BY CASE WHEN v0.c1 COLLATE BINARY THEN ((v0.c0) BETWEEN (x'346ac0d4') AND (1183327672)) WHEN CASE v0.c0  WHEN v0.c2 THEN v0.c3 WHEN v0.c3 THEN v0.c1 WHEN v0.c1 THEN -2064962940 ELSE v0.c3 END THEN -8.5480885E7 WHEN ((v0.c2) NOT NULL) THEN v0.c2 ELSE CAST(v0.c1 AS NUMERIC) END DESC  NULLS FIRST, CASE WHEN (- (v0.c1)) THEN (((1963905472, v0.c1, '303133937')) NOT BETWEEN ((v0.c2, v0.c1, v0.c3)) AND ((v0.c3, v0.c0, v0.c0))) WHEN (v0.c4 IN ()) THEN (- (v0.c2)) WHEN ((((v0.c2)OR(v0.c3)))AND(v0.c3)) THEN CASE WHEN v0.c0 THEN v0.c1 END END DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)AND(((vt0.c1)&(vt0.c0)))))OR((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)AND(((vt0.c1)&(vt0.c0)))))OR((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)AND(((vt0.c1)&(vt0.c0)))))OR((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)AND(((vt0.c1)&(vt0.c0)))))OR((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)AND(((vt0.c1)&(vt0.c0)))))OR((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))));
SELECT * FROM v0, vt0 WHERE (NULL) ORDER BY ((v0.c3) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c3) IS FALSE) DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (NULL) ORDER BY ((v0.c3) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c3) IS FALSE) DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (NULL) ORDER BY ((v0.c3) IS FALSE) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (CAST((((v0.c3))<((v0.c4))) AS BLOB)) ORDER BY CASE WHEN ((v0.c1)IS NOT(v0.c0)) THEN (0.21468703691723834 IN ()) WHEN -1779175242 THEN CASE WHEN v0.c0 THEN v0.c3 ELSE v0.c3 END WHEN ((((x'257e')OR(v0.c0)))OR(v0.c1)) THEN (((0.2975883502360104, v0.c0, v0.c3))<=((v0.c0, v0.c1, v0.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c3))<((v0.c4))) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c1)IS NOT(v0.c0)) THEN (0.21468703691723834 IN ()) WHEN -1779175242 THEN CASE WHEN v0.c0 THEN v0.c3 ELSE v0.c3 END WHEN ((((x'257e')OR(v0.c0)))OR(v0.c1)) THEN (((0.2975883502360104, v0.c0, v0.c3))<=((v0.c0, v0.c1, v0.c0))) END  NULLS LAST);
SELECT * FROM v0 WHERE (CAST((((v0.c3))<((v0.c4))) AS BLOB)) ORDER BY CASE WHEN ((v0.c1)IS NOT(v0.c0)) THEN (0.21468703691723834 IN ()) WHEN -1779175242 THEN CASE WHEN v0.c0 THEN v0.c3 ELSE v0.c3 END WHEN ((((x'257e')OR(v0.c0)))OR(v0.c1)) THEN (((0.2975883502360104, v0.c0, v0.c3))<=((v0.c0, v0.c1, v0.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c3))<((v0.c4))) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c1)IS NOT(v0.c0)) THEN (0.21468703691723834 IN ()) WHEN -1779175242 THEN CASE WHEN v0.c0 THEN v0.c3 ELSE v0.c3 END WHEN ((((x'257e')OR(v0.c0)))OR(v0.c1)) THEN (((0.2975883502360104, v0.c0, v0.c3))<=((v0.c0, v0.c1, v0.c0))) END  NULLS LAST);
SELECT * FROM v0 WHERE (CAST((((v0.c3))<((v0.c4))) AS BLOB)) ORDER BY CASE WHEN ((v0.c1)IS NOT(v0.c0)) THEN (0.21468703691723834 IN ()) WHEN -1779175242 THEN CASE WHEN v0.c0 THEN v0.c3 ELSE v0.c3 END WHEN ((((x'257e')OR(v0.c0)))OR(v0.c1)) THEN (((0.2975883502360104, v0.c0, v0.c3))<=((v0.c0, v0.c1, v0.c0))) END  NULLS LAST;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CAST(CAST(vt0.c1 AS REAL) AS NUMERIC) WHERE ((((((((((+ (v0.c4)))OR(((vt0.c0) ISNULL))))AND((- (NULL)))))AND(NULL)))OR(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((((((+ (v0.c4)))OR(((vt0.c0) ISNULL))))AND((- (NULL)))))AND(NULL)))OR(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST(CAST(vt0.c1 AS REAL) AS NUMERIC));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CAST(CAST(vt0.c1 AS REAL) AS NUMERIC) WHERE ((((((((((+ (v0.c4)))OR(((vt0.c0) ISNULL))))AND((- (NULL)))))AND(NULL)))OR(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((((((+ (v0.c4)))OR(((vt0.c0) ISNULL))))AND((- (NULL)))))AND(NULL)))OR(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST(CAST(vt0.c1 AS REAL) AS NUMERIC));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CAST(CAST(vt0.c1 AS REAL) AS NUMERIC) WHERE ((((((((((+ (v0.c4)))OR(((vt0.c0) ISNULL))))AND((- (NULL)))))AND(NULL)))OR(((v0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((((0.9332402897706026)OR(x'')))AND(v0.c1)) THEN (- (vt0.c1)) END) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((0.9332402897706026)OR(x'')))AND(v0.c1)) THEN (- (vt0.c1)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((((0.9332402897706026)OR(x'')))AND(v0.c1)) THEN (- (vt0.c1)) END) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((0.9332402897706026)OR(x'')))AND(v0.c1)) THEN (- (vt0.c1)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((((0.9332402897706026)OR(x'')))AND(v0.c1)) THEN (- (vt0.c1)) END) ORDER BY vt0.c0;
SELECT COUNT(*) FROM v0, vt0 WHERE ((((~ (v0.c1))) IS FALSE)) ORDER BY LOWER(((v0.c3) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c1))) IS FALSE)) IS TRUE)  as count FROM v0, vt0 ORDER BY LOWER(((v0.c3) IS TRUE)));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((~ (v0.c1))) IS FALSE)) ORDER BY LOWER(((v0.c3) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c1))) IS FALSE)) IS TRUE)  as count FROM v0, vt0 ORDER BY LOWER(((v0.c3) IS TRUE)));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((~ (v0.c1))) IS FALSE)) ORDER BY LOWER(((v0.c3) IS TRUE));
SELECT * FROM v0 WHERE (CASE CASE v0.c4  WHEN v0.c1 THEN 1782396181 END  WHEN CASE v0.c1  WHEN v0.c3 THEN v0.c4 ELSE v0.c2 END THEN ((v0.c4)<=(v0.c2)) ELSE (('71')/(v0.c1)) END) ORDER BY TYPEOF((+ (v0.c1)));
SELECT SUM(count) FROM (SELECT ((CASE CASE v0.c4  WHEN v0.c1 THEN 1782396181 END  WHEN CASE v0.c1  WHEN v0.c3 THEN v0.c4 ELSE v0.c2 END THEN ((v0.c4)<=(v0.c2)) ELSE (('71')/(v0.c1)) END) IS TRUE)  as count FROM v0 ORDER BY TYPEOF((+ (v0.c1))));
SELECT * FROM v0 WHERE (CASE CASE v0.c4  WHEN v0.c1 THEN 1782396181 END  WHEN CASE v0.c1  WHEN v0.c3 THEN v0.c4 ELSE v0.c2 END THEN ((v0.c4)<=(v0.c2)) ELSE (('71')/(v0.c1)) END) ORDER BY TYPEOF((+ (v0.c1)));
SELECT SUM(count) FROM (SELECT ((CASE CASE v0.c4  WHEN v0.c1 THEN 1782396181 END  WHEN CASE v0.c1  WHEN v0.c3 THEN v0.c4 ELSE v0.c2 END THEN ((v0.c4)<=(v0.c2)) ELSE (('71')/(v0.c1)) END) IS TRUE)  as count FROM v0 ORDER BY TYPEOF((+ (v0.c1))));
SELECT * FROM v0 WHERE (CASE CASE v0.c4  WHEN v0.c1 THEN 1782396181 END  WHEN CASE v0.c1  WHEN v0.c3 THEN v0.c4 ELSE v0.c2 END THEN ((v0.c4)<=(v0.c2)) ELSE (('71')/(v0.c1)) END) ORDER BY TYPEOF((+ (v0.c1)));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) ORDER BY (((((vt0.c2)OR(NULL)))OR(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2)OR(NULL)))OR(vt0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) ORDER BY (((((vt0.c2)OR(NULL)))OR(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2)OR(NULL)))OR(vt0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) ORDER BY (((((vt0.c2)OR(NULL)))OR(vt0.c0)) IN ());
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (CAST(vt0.c1 AS BLOB)))) ORDER BY TYPEOF((((vt0.c2))==((vt0.c2)))), ((((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1))) BETWEEN ('%S-EEW綮N+') AND (((vt0.c2)IS(''))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF((((vt0.c2))==((vt0.c2)))), ((((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1))) BETWEEN ('%S-EEW綮N+') AND (((vt0.c2)IS('')))));
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (CAST(vt0.c1 AS BLOB)))) ORDER BY TYPEOF((((vt0.c2))==((vt0.c2)))), ((((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1))) BETWEEN ('%S-EEW綮N+') AND (((vt0.c2)IS(''))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF((((vt0.c2))==((vt0.c2)))), ((((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1))) BETWEEN ('%S-EEW綮N+') AND (((vt0.c2)IS('')))));
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (CAST(vt0.c1 AS BLOB)))) ORDER BY TYPEOF((((vt0.c2))==((vt0.c2)))), ((((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1))) BETWEEN ('%S-EEW綮N+') AND (((vt0.c2)IS(''))));
SELECT * FROM v0 WHERE ((((v0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) ISNULL) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) ISNULL) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0) ISNULL) IN ()));
SELECT * FROM v0 WHERE (((281763846)||(CASE WHEN v0.c3 THEN NULL ELSE v0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((281763846)||(CASE WHEN v0.c3 THEN NULL ELSE v0.c4 END))) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT * FROM v0 WHERE (((281763846)||(CASE WHEN v0.c3 THEN NULL ELSE v0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((281763846)||(CASE WHEN v0.c3 THEN NULL ELSE v0.c4 END))) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT * FROM v0 WHERE (((281763846)||(CASE WHEN v0.c3 THEN NULL ELSE v0.c4 END)));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2 COLLATE BINARY))<((((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))) ORDER BY ((((v0.c2) ISNULL))!=(522040935)) DESC  NULLS FIRST, (((((v0.c1)&(v0.c3))))<((((v0.c2)|(v0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 COLLATE BINARY))<((((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2) ISNULL))!=(522040935)) DESC  NULLS FIRST, (((((v0.c1)&(v0.c3))))<((((v0.c2)|(v0.c3)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2 COLLATE BINARY))<((((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))) ORDER BY ((((v0.c2) ISNULL))!=(522040935)) DESC  NULLS FIRST, (((((v0.c1)&(v0.c3))))<((((v0.c2)|(v0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 COLLATE BINARY))<((((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2) ISNULL))!=(522040935)) DESC  NULLS FIRST, (((((v0.c1)&(v0.c3))))<((((v0.c2)|(v0.c3)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2 COLLATE BINARY))<((((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))) ORDER BY ((((v0.c2) ISNULL))!=(522040935)) DESC  NULLS FIRST, (((((v0.c1)&(v0.c3))))<((((v0.c2)|(v0.c3)))))  NULLS LAST;
SELECT * FROM vt0 WHERE ((NOT (vt0.c1 COLLATE NOCASE))) ORDER BY CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) DESC);
SELECT * FROM vt0 WHERE ((NOT (vt0.c1 COLLATE NOCASE))) ORDER BY CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) DESC);
SELECT * FROM vt0 WHERE ((NOT (vt0.c1 COLLATE NOCASE))) ORDER BY CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) DESC;
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (v0.c2);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c3) ORDER BY v0.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM v0 ORDER BY v0.c3 ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c3) ORDER BY v0.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM v0 ORDER BY v0.c3 ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c3) ORDER BY v0.c3 ASC;
SELECT * FROM vt0, v0 WHERE ((('1185138547')+(vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((('1185138547')+(vt0.c2))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((('1185138547')+(vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((('1185138547')+(vt0.c2))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((('1185138547')+(vt0.c2)));
SELECT ALL * FROM v0, vt0 WHERE (7.40473059E8);
SELECT SUM(count) FROM (SELECT ALL ((7.40473059E8) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (7.40473059E8);
SELECT SUM(count) FROM (SELECT ALL ((7.40473059E8) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (7.40473059E8);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c1)))IS NOT(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c1)))IS NOT(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c1)))IS NOT(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c1)))IS NOT(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c1)))IS NOT(vt0.c0)));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((json(0.9334260924839541))OR((v0.c3 IN ()))))OR((((v0.c3)) BETWEEN ((v0.c3)) AND ((v0.c2))))))OR((v0.c1 IN (x'3e4d657f', vt0.c1)))))OR(((v0.c1) NOT BETWEEN (vt0.c2) AND (x'74c892c527ef'))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((((((((json(0.9334260924839541))OR((v0.c3 IN ()))))OR((((v0.c3)) BETWEEN ((v0.c3)) AND ((v0.c2))))))OR((v0.c1 IN (x'3e4d657f', vt0.c1)))))OR(((v0.c1) NOT BETWEEN (vt0.c2) AND (x'74c892c527ef'))))) IS TRUE)  as count FROM vt0, v0 ORDER BY x'');
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((json(0.9334260924839541))OR((v0.c3 IN ()))))OR((((v0.c3)) BETWEEN ((v0.c3)) AND ((v0.c2))))))OR((v0.c1 IN (x'3e4d657f', vt0.c1)))))OR(((v0.c1) NOT BETWEEN (vt0.c2) AND (x'74c892c527ef'))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((((((((json(0.9334260924839541))OR((v0.c3 IN ()))))OR((((v0.c3)) BETWEEN ((v0.c3)) AND ((v0.c2))))))OR((v0.c1 IN (x'3e4d657f', vt0.c1)))))OR(((v0.c1) NOT BETWEEN (vt0.c2) AND (x'74c892c527ef'))))) IS TRUE)  as count FROM vt0, v0 ORDER BY x'');
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((json(0.9334260924839541))OR((v0.c3 IN ()))))OR((((v0.c3)) BETWEEN ((v0.c3)) AND ((v0.c2))))))OR((v0.c1 IN (x'3e4d657f', vt0.c1)))))OR(((v0.c1) NOT BETWEEN (vt0.c2) AND (x'74c892c527ef'))))) ORDER BY x'';
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c3) BETWEEN (v0.c3) AND (v0.c0)))AND(((v0.c4) IS TRUE))))OR(((v0.c3)||(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c3) BETWEEN (v0.c3) AND (v0.c0)))AND(((v0.c4) IS TRUE))))OR(((v0.c3)||(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c3) BETWEEN (v0.c3) AND (v0.c0)))AND(((v0.c4) IS TRUE))))OR(((v0.c3)||(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c3) BETWEEN (v0.c3) AND (v0.c0)))AND(((v0.c4) IS TRUE))))OR(((v0.c3)||(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c3) BETWEEN (v0.c3) AND (v0.c0)))AND(((v0.c4) IS TRUE))))OR(((v0.c3)||(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1 IN ())) NOT NULL)) ORDER BY (((((v0.c0)!=(v0.c3))))!=((((v0.c4)AND(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)!=(v0.c3))))<>((((v0.c4)AND(v0.c2))))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1 IN ())) NOT NULL)) ORDER BY (((((v0.c0)!=(v0.c3))))!=((((v0.c4)AND(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)!=(v0.c3))))<>((((v0.c4)AND(v0.c2))))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1 IN ())) NOT NULL)) ORDER BY (((((v0.c0)!=(v0.c3))))!=((((v0.c4)AND(v0.c2)))));
SELECT * FROM vt0, v0 WHERE (CASE ((v0.c2) ISNULL)  WHEN ((v0.c2) IS FALSE) THEN (v0.c2 IN ()) ELSE (((('')AND(vt0.c1)))AND(v0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c2) ISNULL)  WHEN ((v0.c2) IS FALSE) THEN (v0.c2 IN ()) ELSE (((('')AND(vt0.c1)))AND(v0.c1)) END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE ((v0.c2) ISNULL)  WHEN ((v0.c2) IS FALSE) THEN (v0.c2 IN ()) ELSE (((('')AND(vt0.c1)))AND(v0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c2) ISNULL)  WHEN ((v0.c2) IS FALSE) THEN (v0.c2 IN ()) ELSE (((('')AND(vt0.c1)))AND(v0.c1)) END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE ((v0.c2) ISNULL)  WHEN ((v0.c2) IS FALSE) THEN (v0.c2 IN ()) ELSE (((('')AND(vt0.c1)))AND(v0.c1)) END);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY (((((((((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))OR(PRINTF(vt0.c1))))OR(CASE WHEN vt0.c0 THEN vt0.c2 END)))AND(LOWER(DISTINCT vt0.c1))))OR(0.23123434123242292)) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))OR(PRINTF(vt0.c1))))OR(CASE WHEN vt0.c0 THEN vt0.c2 END)))AND(LOWER(DISTINCT vt0.c1))))OR(0.23123434123242292)) ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY (((((((((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))OR(PRINTF(vt0.c1))))OR(CASE WHEN vt0.c0 THEN vt0.c2 END)))AND(LOWER(DISTINCT vt0.c1))))OR(0.23123434123242292)) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))OR(PRINTF(vt0.c1))))OR(CASE WHEN vt0.c0 THEN vt0.c2 END)))AND(LOWER(DISTINCT vt0.c1))))OR(0.23123434123242292)) ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY (((((((((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))OR(PRINTF(vt0.c1))))OR(CASE WHEN vt0.c0 THEN vt0.c2 END)))AND(LOWER(DISTINCT vt0.c1))))OR(0.23123434123242292)) ASC;
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c0) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c0) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c0) NOTNULL)) NOTNULL));
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(RTRIM(v0.c3) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(RTRIM(v0.c3) AS BLOB)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(RTRIM(v0.c3) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(RTRIM(v0.c3) AS BLOB)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(RTRIM(v0.c3) AS BLOB));
SELECT * FROM v0, vt0 WHERE ((((((((((v0.c1 IN ()))OR(v0.c1)))OR((((v0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))))AND(((v0.c4) BETWEEN (v0.c2) AND (v0.c0)))))OR(((vt0.c0)>>(v0.c3))))) ORDER BY ((((((0.3478128426281575)OR(v0.c0)))AND(v0.c1)))AND((~ (v0.c4)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((v0.c1 IN ()))OR(v0.c1)))OR((((v0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))))AND(((v0.c4) BETWEEN (v0.c2) AND (v0.c0)))))OR(((vt0.c0)>>(v0.c3))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((0.3478128426281575)OR(v0.c0)))AND(v0.c1)))AND((~ (v0.c4)))) DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE ((((((((((v0.c1 IN ()))OR(v0.c1)))OR((((v0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))))AND(((v0.c4) BETWEEN (v0.c2) AND (v0.c0)))))OR(((vt0.c0)>>(v0.c3))))) ORDER BY ((((((0.3478128426281575)OR(v0.c0)))AND(v0.c1)))AND((~ (v0.c4)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((v0.c1 IN ()))OR(v0.c1)))OR((((v0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))))AND(((v0.c4) BETWEEN (v0.c2) AND (v0.c0)))))OR(((vt0.c0)>>(v0.c3))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((0.3478128426281575)OR(v0.c0)))AND(v0.c1)))AND((~ (v0.c4)))) DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE ((((((((((v0.c1 IN ()))OR(v0.c1)))OR((((v0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))))AND(((v0.c4) BETWEEN (v0.c2) AND (v0.c0)))))OR(((vt0.c0)>>(v0.c3))))) ORDER BY ((((((0.3478128426281575)OR(v0.c0)))AND(v0.c1)))AND((~ (v0.c4)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (LIKELIHOOD(DISTINCT ((((v0.c3)OR(v0.c4)))OR(v0.c2)), 0.8682541921821091));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((((v0.c3)OR(v0.c4)))OR(v0.c2)), 0.8682541921821091)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (LIKELIHOOD(DISTINCT ((((v0.c3)OR(v0.c4)))OR(v0.c2)), 0.8682541921821091));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((((v0.c3)OR(v0.c4)))OR(v0.c2)), 0.8682541921821091)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (LIKELIHOOD(DISTINCT ((((v0.c3)OR(v0.c4)))OR(v0.c2)), 0.8682541921821091));
SELECT ALL * FROM v0, vt0 WHERE (ABS((+ (-1286664248)))) ORDER BY v0.c3 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS((+ (-1286664248)))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c3 ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (ABS((+ (-1286664248)))) ORDER BY v0.c3 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS((+ (-1286664248)))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c3 ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (ABS((+ (-1286664248)))) ORDER BY v0.c3 ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (0.6206248897674798);
SELECT SUM(count) FROM (SELECT ((0.6206248897674798) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.6206248897674798);
SELECT SUM(count) FROM (SELECT ((0.6206248897674798) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.6206248897674798);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0) ISNULL))));
SELECT ALL * FROM v0, vt0 WHERE (((TRIM(v0.c4)) NOTNULL)) ORDER BY (CAST(v0.c0 AS BLOB) IN (((((v0.c3)OR(v0.c2)))OR(vt0.c2)), vt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(v0.c4)) NOTNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (CAST(v0.c0 AS BLOB) IN (((((v0.c3)OR(v0.c2)))OR(vt0.c2)), vt0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (((TRIM(v0.c4)) NOTNULL)) ORDER BY (CAST(v0.c0 AS BLOB) IN (((((v0.c3)OR(v0.c2)))OR(vt0.c2)), vt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(v0.c4)) NOTNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (CAST(v0.c0 AS BLOB) IN (((((v0.c3)OR(v0.c2)))OR(vt0.c2)), vt0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (((TRIM(v0.c4)) NOTNULL)) ORDER BY (CAST(v0.c0 AS BLOB) IN (((((v0.c3)OR(v0.c2)))OR(vt0.c2)), vt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c2) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c2) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c2) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c2) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c2) ISNULL));
SELECT ALL * FROM v0 WHERE (((((v0.c2 COLLATE BINARY)AND(v0.c3)))AND(((v0.c4)>>(v0.c2))))) ORDER BY (('740473059') NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2 COLLATE BINARY)AND(v0.c3)))AND(((v0.c4)>>(v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY (('740473059') NOTNULL) DESC);
SELECT ALL * FROM v0 WHERE (((((v0.c2 COLLATE BINARY)AND(v0.c3)))AND(((v0.c4)>>(v0.c2))))) ORDER BY (('740473059') NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2 COLLATE BINARY)AND(v0.c3)))AND(((v0.c4)>>(v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY (('740473059') NOTNULL) DESC);
SELECT ALL * FROM v0 WHERE (((((v0.c2 COLLATE BINARY)AND(v0.c3)))AND(((v0.c4)>>(v0.c2))))) ORDER BY (('740473059') NOTNULL) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (((0.9291343077051262)+(((((((((x'')OR(v0.c3)))OR(v0.c1)))AND(v0.c2)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.9291343077051262)+(((((((((x'')OR(v0.c3)))OR(v0.c1)))AND(v0.c2)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((0.9291343077051262)+(((((((((x'')OR(v0.c3)))OR(v0.c1)))AND(v0.c2)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.9291343077051262)+(((((((((x'')OR(v0.c3)))OR(v0.c1)))AND(v0.c2)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((0.9291343077051262)+(((((((((x'')OR(v0.c3)))OR(v0.c1)))AND(v0.c2)))AND(v0.c0)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON vt0.c1 WHERE (((((((((((v0.c2)AND(vt0.c2)))OR(v0.c3)))AND('')))OR(x''))) BETWEEN (((((vt0.c1)AND(v0.c4)))OR(v0.c3))) AND (v0.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c2)AND(vt0.c2)))OR(v0.c3)))AND('')))OR(x''))) BETWEEN (((((vt0.c1)AND(v0.c4)))OR(v0.c3))) AND (v0.c4 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON vt0.c1);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON vt0.c1 WHERE (((((((((((v0.c2)AND(vt0.c2)))OR(v0.c3)))AND('')))OR(x''))) BETWEEN (((((vt0.c1)AND(v0.c4)))OR(v0.c3))) AND (v0.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c2)AND(vt0.c2)))OR(v0.c3)))AND('')))OR(x''))) BETWEEN (((((vt0.c1)AND(v0.c4)))OR(v0.c3))) AND (v0.c4 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON vt0.c1);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON vt0.c1 WHERE (((((((((((v0.c2)AND(vt0.c2)))OR(v0.c3)))AND('')))OR(x''))) BETWEEN (((((vt0.c1)AND(v0.c4)))OR(v0.c3))) AND (v0.c4 COLLATE NOCASE)));
SELECT * FROM v0 WHERE (((v0.c1)%(v0.c4)));
SELECT SUM(count) FROM (SELECT ((((v0.c1)%(v0.c4))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c1)%(v0.c4)));
SELECT SUM(count) FROM (SELECT ((((v0.c1)%(v0.c4))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c1)%(v0.c4)));
SELECT COUNT(*) FROM vt0 WHERE (((((x'')<=(vt0.c1)))<<(TRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')<=(vt0.c1)))<<(TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((x'')<=(vt0.c1)))<<(TRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')<=(vt0.c1)))<<(TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((x'')<=(vt0.c1)))<<(TRIM(vt0.c0))));
SELECT * FROM v0 WHERE ((- (INSTR(v0.c4, v0.c4)))) ORDER BY (+ (CAST(v0.c4 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (INSTR(v0.c4, v0.c4)))) IS TRUE)  as count FROM v0 ORDER BY (+ (CAST(v0.c4 AS BLOB))) ASC);
SELECT * FROM v0 WHERE ((- (INSTR(v0.c4, v0.c4)))) ORDER BY (+ (CAST(v0.c4 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (INSTR(v0.c4, v0.c4)))) IS TRUE)  as count FROM v0 ORDER BY (+ (CAST(v0.c4 AS BLOB))) ASC);
SELECT * FROM v0 WHERE ((- (INSTR(v0.c4, v0.c4)))) ORDER BY (+ (CAST(v0.c4 AS BLOB))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY '664865028' DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY '664865028' DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY '664865028' DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY '664865028' DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY '664865028' DESC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((vt0.c2 IN ())) ORDER BY (((-2107273697 COLLATE RTRIM))<(((+ (vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c2 IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY (((-2107273697 COLLATE RTRIM))<(((+ (vt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((vt0.c2 IN ())) ORDER BY (((-2107273697 COLLATE RTRIM))<(((+ (vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c2 IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY (((-2107273697 COLLATE RTRIM))<(((+ (vt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((vt0.c2 IN ())) ORDER BY (((-2107273697 COLLATE RTRIM))<(((+ (vt0.c1))))) DESC;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c1, v0.c4, vt0.c1)) BETWEEN (((v0.c1 IN ()), v0.c0 COLLATE RTRIM, ((v0.c1) IS TRUE))) AND ((((v0.c1)%(v0.c4)), CAST(vt0.c0 AS INTEGER), CASE WHEN v0.c2 THEN vt0.c1 END))) WHERE (((((x'')*(v0.c2))) IS FALSE)) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((((((x'')*(v0.c2))) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c1, v0.c4, vt0.c1)) BETWEEN (((v0.c1 IN ()), v0.c0 COLLATE RTRIM, ((v0.c1) IS TRUE))) AND ((((v0.c1)%(v0.c4)), CAST(vt0.c0 AS INTEGER), CASE WHEN v0.c2 THEN vt0.c1 END))) ORDER BY NULL ASC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c1, v0.c4, vt0.c1)) BETWEEN (((v0.c1 IN ()), v0.c0 COLLATE RTRIM, ((v0.c1) IS TRUE))) AND ((((v0.c1)%(v0.c4)), CAST(vt0.c0 AS INTEGER), CASE WHEN v0.c2 THEN vt0.c1 END))) WHERE (((((x'')*(v0.c2))) IS FALSE)) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((((((x'')*(v0.c2))) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c1, v0.c4, vt0.c1)) BETWEEN (((v0.c1 IN ()), v0.c0 COLLATE RTRIM, ((v0.c1) IS TRUE))) AND ((((v0.c1)%(v0.c4)), CAST(vt0.c0 AS INTEGER), CASE WHEN v0.c2 THEN vt0.c1 END))) ORDER BY NULL ASC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c1, v0.c4, vt0.c1)) BETWEEN (((v0.c1 IN ()), v0.c0 COLLATE RTRIM, ((v0.c1) IS TRUE))) AND ((((v0.c1)%(v0.c4)), CAST(vt0.c0 AS INTEGER), CASE WHEN v0.c2 THEN vt0.c1 END))) WHERE (((((x'')*(v0.c2))) IS FALSE)) ORDER BY NULL ASC;
SELECT ALL * FROM v0 WHERE ((((((v0.c0)AND(NULL)))OR(v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)AND(NULL)))OR(v0.c1)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)AND(NULL)))OR(v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)AND(NULL)))OR(v0.c1)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)AND(NULL)))OR(v0.c1)) IN ()));
SELECT COUNT(*) FROM vt0, v0 WHERE (STRFTIME((vt0.c1 IN (v0.c1, -1038349193)), (((v0.c3, vt0.c2, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c2, vt0.c0)) AND ((v0.c0, 0.9083785478953265, v0.c3))), (vt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((STRFTIME((vt0.c1 IN (v0.c1, -1038349193)), (((v0.c3, vt0.c2, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c2, vt0.c0)) AND ((v0.c0, 0.9083785478953265, v0.c3))), (vt0.c2 IN ()))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (STRFTIME((vt0.c1 IN (v0.c1, -1038349193)), (((v0.c3, vt0.c2, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c2, vt0.c0)) AND ((v0.c0, 0.9083785478953265, v0.c3))), (vt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((STRFTIME((vt0.c1 IN (v0.c1, -1038349193)), (((v0.c3, vt0.c2, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c2, vt0.c0)) AND ((v0.c0, 0.9083785478953265, v0.c3))), (vt0.c2 IN ()))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (STRFTIME((vt0.c1 IN (v0.c1, -1038349193)), (((v0.c3, vt0.c2, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c2, vt0.c0)) AND ((v0.c0, 0.9083785478953265, v0.c3))), (vt0.c2 IN ())));
SELECT * FROM vt0, v0 WHERE ((((x'')*(v0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT (((((x'')*(v0.c4)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((x'')*(v0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT (((((x'')*(v0.c4)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((x'')*(v0.c4)) IN ()));
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c2) BETWEEN (v0.c2) AND (v0.c4))) NOT BETWEEN (((vt0.c1)LIKE(vt0.c1))) AND (((((x'c7d0')AND(v0.c4)))OR(v0.c1))))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) BETWEEN (v0.c2) AND (v0.c4))) NOT BETWEEN (((vt0.c1)LIKE(vt0.c1))) AND (((((x'c7d0')AND(v0.c4)))OR(v0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c2) BETWEEN (v0.c2) AND (v0.c4))) NOT BETWEEN (((vt0.c1)LIKE(vt0.c1))) AND (((((x'c7d0')AND(v0.c4)))OR(v0.c1))))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) BETWEEN (v0.c2) AND (v0.c4))) NOT BETWEEN (((vt0.c1)LIKE(vt0.c1))) AND (((((x'c7d0')AND(v0.c4)))OR(v0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c2) BETWEEN (v0.c2) AND (v0.c4))) NOT BETWEEN (((vt0.c1)LIKE(vt0.c1))) AND (((((x'c7d0')AND(v0.c4)))OR(v0.c1))))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c2 WHEN v0.c3 THEN '\r*' WHEN v0.c4 THEN v0.c2 END)<<(((v0.c3)IS NOT(v0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN v0.c2 WHEN v0.c3 THEN '\r*' WHEN v0.c4 THEN v0.c2 END)<<(((v0.c3)IS NOT(v0.c3))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c2 WHEN v0.c3 THEN '\r*' WHEN v0.c4 THEN v0.c2 END)<<(((v0.c3)IS NOT(v0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN v0.c2 WHEN v0.c3 THEN '\r*' WHEN v0.c4 THEN v0.c2 END)<<(((v0.c3)IS NOT(v0.c3))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c2 WHEN v0.c3 THEN '\r*' WHEN v0.c4 THEN v0.c2 END)<<(((v0.c3)IS NOT(v0.c3)))));
SELECT ALL * FROM v0 WHERE (((((v0.c4 COLLATE RTRIM)OR(v0.c2 COLLATE BINARY)))OR(CASE WHEN v0.c1 THEN v0.c4 ELSE v0.c2 END))) ORDER BY TRIM(((v0.c2) NOT BETWEEN (v0.c4) AND (v0.c1)), v0.c4);
SELECT SUM(count) FROM (SELECT ((((((v0.c4 COLLATE RTRIM)OR(v0.c2 COLLATE BINARY)))OR(CASE WHEN v0.c1 THEN v0.c4 ELSE v0.c2 END))) IS TRUE)  as count FROM v0 ORDER BY TRIM(((v0.c2) NOT BETWEEN (v0.c4) AND (v0.c1)), v0.c4));
SELECT ALL * FROM v0 WHERE (((((v0.c4 COLLATE RTRIM)OR(v0.c2 COLLATE BINARY)))OR(CASE WHEN v0.c1 THEN v0.c4 ELSE v0.c2 END))) ORDER BY TRIM(((v0.c2) NOT BETWEEN (v0.c4) AND (v0.c1)), v0.c4);
SELECT SUM(count) FROM (SELECT ((((((v0.c4 COLLATE RTRIM)OR(v0.c2 COLLATE BINARY)))OR(CASE WHEN v0.c1 THEN v0.c4 ELSE v0.c2 END))) IS TRUE)  as count FROM v0 ORDER BY TRIM(((v0.c2) NOT BETWEEN (v0.c4) AND (v0.c1)), v0.c4));
SELECT ALL * FROM v0 WHERE (((((v0.c4 COLLATE RTRIM)OR(v0.c2 COLLATE BINARY)))OR(CASE WHEN v0.c1 THEN v0.c4 ELSE v0.c2 END))) ORDER BY TRIM(((v0.c2) NOT BETWEEN (v0.c4) AND (v0.c1)), v0.c4);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND ('^&'))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN x'99cd' THEN 0.5928419882422051 END) AND (((vt0.c2)LIKE(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c1) AND ('^&'))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN x'99cd' THEN 0.5928419882422051 END) AND (((vt0.c2)LIKE(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND ('^&'))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN x'99cd' THEN 0.5928419882422051 END) AND (((vt0.c2)LIKE(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c1) AND ('^&'))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN x'99cd' THEN 0.5928419882422051 END) AND (((vt0.c2)LIKE(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND ('^&'))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN x'99cd' THEN 0.5928419882422051 END) AND (((vt0.c2)LIKE(vt0.c1)))));
SELECT * FROM v0 WHERE (((0.6830539111300067)/(((v0.c3)-(v0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.6830539111300067)/(((v0.c3)-(v0.c4))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((0.6830539111300067)/(((v0.c3)-(v0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.6830539111300067)/(((v0.c3)-(v0.c4))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((0.6830539111300067)/(((v0.c3)-(v0.c4)))));
SELECT * FROM vt0, v0 WHERE ('119123350') ORDER BY (~ (CAST(vt0.c2 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT (('119123350') IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (CAST(vt0.c2 AS BLOB))) ASC);
SELECT * FROM vt0, v0 WHERE ('119123350') ORDER BY (~ (CAST(vt0.c2 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT (('119123350') IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (CAST(vt0.c2 AS BLOB))) ASC);
SELECT * FROM vt0, v0 WHERE ('119123350') ORDER BY (~ (CAST(vt0.c2 AS BLOB))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 'J<h' WHEN '1992849243' THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 'J<h' WHEN '1992849243' THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 'J<h' WHEN '1992849243' THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 'J<h' WHEN '1992849243' THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 'J<h' WHEN '1992849243' THEN vt0.c1 END)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c1 IN (v0.c0, vt0.c1, vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN (v0.c0, vt0.c1, vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c1 IN (v0.c0, vt0.c1, vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN (v0.c0, vt0.c1, vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c1 IN (v0.c0, vt0.c1, vt0.c0))) ISNULL));
SELECT COUNT(*) FROM v0, vt0 WHERE ((~ (((vt0.c1) NOT BETWEEN (v0.c3) AND (v0.c4))))) ORDER BY v0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1) NOT BETWEEN (v0.c3) AND (v0.c4))))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((~ (((vt0.c1) NOT BETWEEN (v0.c3) AND (v0.c4))))) ORDER BY v0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1) NOT BETWEEN (v0.c3) AND (v0.c4))))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((~ (((vt0.c1) NOT BETWEEN (v0.c3) AND (v0.c4))))) ORDER BY v0.c1 DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((v0.c2 IN (v0.c2))) NOT NULL)) ORDER BY CAST(v0.c3 COLLATE BINARY AS BLOB) ASC  NULLS LAST, v0.c1  NULLS LAST, LIKELIHOOD((- (v0.c0)), 0.19733614987789905);
SELECT SUM(count) FROM (SELECT (((((v0.c2 IN (v0.c2))) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c3 COLLATE BINARY AS BLOB) ASC  NULLS LAST, v0.c1  NULLS LAST, LIKELIHOOD((- (v0.c0)), 0.19733614987789905));
SELECT ALL * FROM v0 WHERE ((((v0.c2 IN (v0.c2))) NOT NULL)) ORDER BY CAST(v0.c3 COLLATE BINARY AS BLOB) ASC  NULLS LAST, v0.c1  NULLS LAST, LIKELIHOOD((- (v0.c0)), 0.19733614987789905);
SELECT SUM(count) FROM (SELECT (((((v0.c2 IN (v0.c2))) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c3 COLLATE BINARY AS BLOB) ASC  NULLS LAST, v0.c1  NULLS LAST, LIKELIHOOD((- (v0.c0)), 0.19733614987789905));
SELECT ALL * FROM v0 WHERE ((((v0.c2 IN (v0.c2))) NOT NULL)) ORDER BY CAST(v0.c3 COLLATE BINARY AS BLOB) ASC  NULLS LAST, v0.c1  NULLS LAST, LIKELIHOOD((- (v0.c0)), 0.19733614987789905);
SELECT * FROM v0, vt0 WHERE (v0.c3) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM v0, vt0 ORDER BY NULL DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (v0.c3) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM v0, vt0 ORDER BY NULL DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (v0.c3) ORDER BY NULL DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))AND(vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))AND(((-1.286664248E9) ISNULL))))AND(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))AND(vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))AND(((-1.286664248E9) ISNULL))))AND(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))AND(vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))AND(((-1.286664248E9) ISNULL))))AND(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))AND(vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))AND(((-1.286664248E9) ISNULL))))AND(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))AND(vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))AND(((-1.286664248E9) ISNULL))))AND(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c2 IN ()))LIKE(((vt0.c2)>=(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN ()))LIKE(((vt0.c2)>=(v0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c2 IN ()))LIKE(((vt0.c2)>=(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN ()))LIKE(((vt0.c2)>=(v0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c2 IN ()))LIKE(((vt0.c2)>=(v0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((x'') IS TRUE) IN ((((x'', vt0.c2, x'62ae'))=((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE NOCASE)%(vt0.c0)), ((HEX(vt0.c0))<=(LOWER(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((x'') IS TRUE) IN ((((x'', vt0.c2, x'62ae'))=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)%(vt0.c0)), ((HEX(vt0.c0))<=(LOWER(DISTINCT vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((x'') IS TRUE) IN ((((x'', vt0.c2, x'62ae'))=((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE NOCASE)%(vt0.c0)), ((HEX(vt0.c0))<=(LOWER(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((x'') IS TRUE) IN ((((x'', vt0.c2, x'62ae'))=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)%(vt0.c0)), ((HEX(vt0.c0))<=(LOWER(DISTINCT vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((x'') IS TRUE) IN ((((x'', vt0.c2, x'62ae'))=((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE NOCASE)%(vt0.c0)), ((HEX(vt0.c0))<=(LOWER(DISTINCT vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (x'9056c17a') ORDER BY ((UNLIKELY(vt0.c1))-(((vt0.c1)&(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'9056c17a') IS TRUE)  as count FROM vt0 ORDER BY ((UNLIKELY(vt0.c1))-(((vt0.c1)&(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (x'9056c17a') ORDER BY ((UNLIKELY(vt0.c1))-(((vt0.c1)&(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'9056c17a') IS TRUE)  as count FROM vt0 ORDER BY ((UNLIKELY(vt0.c1))-(((vt0.c1)&(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (x'9056c17a') ORDER BY ((UNLIKELY(vt0.c1))-(((vt0.c1)&(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c1)))OR(((v0.c0)OR(v0.c3)))))OR(NULL))) ORDER BY v0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c1)))OR(((v0.c0)OR(v0.c3)))))OR(NULL))) IS TRUE)  as count FROM v0 ORDER BY v0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c1)))OR(((v0.c0)OR(v0.c3)))))OR(NULL))) ORDER BY v0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c1)))OR(((v0.c0)OR(v0.c3)))))OR(NULL))) IS TRUE)  as count FROM v0 ORDER BY v0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c1)))OR(((v0.c0)OR(v0.c3)))))OR(NULL))) ORDER BY v0.c1  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST('O⦦y4l' AS INTEGER) THEN CAST(vt0.c0 AS INTEGER) WHEN NULL THEN ((v0.c3) IS FALSE) WHEN v0.c2 COLLATE BINARY THEN (+ (v0.c2)) WHEN ((v0.c3)>=(v0.c1)) THEN CAST('-512590826' AS INTEGER) WHEN CAST(vt0.c1 AS NUMERIC) THEN v0.c2 COLLATE BINARY ELSE v0.c4 END) ORDER BY (((- (vt0.c0))) NOT BETWEEN (((x'')&(v0.c2))) AND ((~ (v0.c3)))) DESC  NULLS FIRST, RTRIM(((((v0.c3)AND(vt0.c2)))OR(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST('O⦦y4l' AS INTEGER) THEN CAST(vt0.c0 AS INTEGER) WHEN NULL THEN ((v0.c3) IS FALSE) WHEN v0.c2 COLLATE BINARY THEN (+ (v0.c2)) WHEN ((v0.c3)>=(v0.c1)) THEN CAST('-512590826' AS INTEGER) WHEN CAST(vt0.c1 AS NUMERIC) THEN v0.c2 COLLATE BINARY ELSE v0.c4 END) IS TRUE)  as count FROM v0, vt0 ORDER BY (((- (vt0.c0))) NOT BETWEEN (((x'')&(v0.c2))) AND ((~ (v0.c3)))) DESC  NULLS FIRST, RTRIM(((((v0.c3)AND(vt0.c2)))OR(vt0.c0)))  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST('O⦦y4l' AS INTEGER) THEN CAST(vt0.c0 AS INTEGER) WHEN NULL THEN ((v0.c3) IS FALSE) WHEN v0.c2 COLLATE BINARY THEN (+ (v0.c2)) WHEN ((v0.c3)>=(v0.c1)) THEN CAST('-512590826' AS INTEGER) WHEN CAST(vt0.c1 AS NUMERIC) THEN v0.c2 COLLATE BINARY ELSE v0.c4 END) ORDER BY (((- (vt0.c0))) NOT BETWEEN (((x'')&(v0.c2))) AND ((~ (v0.c3)))) DESC  NULLS FIRST, RTRIM(((((v0.c3)AND(vt0.c2)))OR(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST('O⦦y4l' AS INTEGER) THEN CAST(vt0.c0 AS INTEGER) WHEN NULL THEN ((v0.c3) IS FALSE) WHEN v0.c2 COLLATE BINARY THEN (+ (v0.c2)) WHEN ((v0.c3)>=(v0.c1)) THEN CAST('-512590826' AS INTEGER) WHEN CAST(vt0.c1 AS NUMERIC) THEN v0.c2 COLLATE BINARY ELSE v0.c4 END) IS TRUE)  as count FROM v0, vt0 ORDER BY (((- (vt0.c0))) NOT BETWEEN (((x'')&(v0.c2))) AND ((~ (v0.c3)))) DESC  NULLS FIRST, RTRIM(((((v0.c3)AND(vt0.c2)))OR(vt0.c0)))  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST('O⦦y4l' AS INTEGER) THEN CAST(vt0.c0 AS INTEGER) WHEN NULL THEN ((v0.c3) IS FALSE) WHEN v0.c2 COLLATE BINARY THEN (+ (v0.c2)) WHEN ((v0.c3)>=(v0.c1)) THEN CAST('-512590826' AS INTEGER) WHEN CAST(vt0.c1 AS NUMERIC) THEN v0.c2 COLLATE BINARY ELSE v0.c4 END) ORDER BY (((- (vt0.c0))) NOT BETWEEN (((x'')&(v0.c2))) AND ((~ (v0.c3)))) DESC  NULLS FIRST, RTRIM(((((v0.c3)AND(vt0.c2)))OR(vt0.c0)))  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (((0.7480770178219978)+(0.4101465072658095)));
SELECT SUM(count) FROM (SELECT ALL ((((0.7480770178219978)+(0.4101465072658095))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((0.7480770178219978)+(0.4101465072658095)));
SELECT SUM(count) FROM (SELECT ALL ((((0.7480770178219978)+(0.4101465072658095))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((0.7480770178219978)+(0.4101465072658095)));
SELECT * FROM vt0 WHERE (vt0.c2) ORDER BY (((vt0.c1)<<(vt0.c2)) IN ()), ((vt0.c0)<=((~ (vt0.c1)))) ASC  NULLS FIRST, ((x'e1ad' COLLATE NOCASE) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)<<(vt0.c2)) IN ()), ((vt0.c0)<=((~ (vt0.c1)))) ASC  NULLS FIRST, ((x'e1ad' COLLATE NOCASE) NOTNULL)  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c2) ORDER BY (((vt0.c1)<<(vt0.c2)) IN ()), ((vt0.c0)<=((~ (vt0.c1)))) ASC  NULLS FIRST, ((x'e1ad' COLLATE NOCASE) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)<<(vt0.c2)) IN ()), ((vt0.c0)<=((~ (vt0.c1)))) ASC  NULLS FIRST, ((x'e1ad' COLLATE NOCASE) NOTNULL)  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c2) ORDER BY (((vt0.c1)<<(vt0.c2)) IN ()), ((vt0.c0)<=((~ (vt0.c1)))) ASC  NULLS FIRST, ((x'e1ad' COLLATE NOCASE) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (((((v0.c3) BETWEEN (vt0.c1) AND (v0.c3)), ((NULL)!=(v0.c2)), CASE WHEN vt0.c2 THEN v0.c4 ELSE v0.c3 END))>((CASE WHEN v0.c4 THEN v0.c3 ELSE v0.c2 END, ((vt0.c1) ISNULL), ((vt0.c0) NOT NULL)))) WHERE ((((v0.c3 IN (v0.c2, 0.07497978591152976)))OR(CAST(-1358697401 AS NUMERIC)))) ORDER BY ((((v0.c2) NOTNULL))>>(v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c3 IN (v0.c2, 0.07497978591152976)))OR(CAST(-1358697401 AS NUMERIC)))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((((v0.c3) BETWEEN (vt0.c1) AND (v0.c3)), ((NULL)!=(v0.c2)), CASE WHEN vt0.c2 THEN v0.c4 ELSE v0.c3 END))>((CASE WHEN v0.c4 THEN v0.c3 ELSE v0.c2 END, ((vt0.c1) ISNULL), ((vt0.c0) NOT NULL)))) ORDER BY ((((v0.c2) NOTNULL))>>(v0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (((((v0.c3) BETWEEN (vt0.c1) AND (v0.c3)), ((NULL)!=(v0.c2)), CASE WHEN vt0.c2 THEN v0.c4 ELSE v0.c3 END))>((CASE WHEN v0.c4 THEN v0.c3 ELSE v0.c2 END, ((vt0.c1) ISNULL), ((vt0.c0) NOT NULL)))) WHERE ((((v0.c3 IN (v0.c2, 0.07497978591152976)))OR(CAST(-1358697401 AS NUMERIC)))) ORDER BY ((((v0.c2) NOTNULL))>>(v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c3 IN (v0.c2, 0.07497978591152976)))OR(CAST(-1358697401 AS NUMERIC)))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((((v0.c3) BETWEEN (vt0.c1) AND (v0.c3)), ((NULL)!=(v0.c2)), CASE WHEN vt0.c2 THEN v0.c4 ELSE v0.c3 END))>((CASE WHEN v0.c4 THEN v0.c3 ELSE v0.c2 END, ((vt0.c1) ISNULL), ((vt0.c0) NOT NULL)))) ORDER BY ((((v0.c2) NOTNULL))>>(v0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (((((v0.c3) BETWEEN (vt0.c1) AND (v0.c3)), ((NULL)!=(v0.c2)), CASE WHEN vt0.c2 THEN v0.c4 ELSE v0.c3 END))>((CASE WHEN v0.c4 THEN v0.c3 ELSE v0.c2 END, ((vt0.c1) ISNULL), ((vt0.c0) NOT NULL)))) WHERE ((((v0.c3 IN (v0.c2, 0.07497978591152976)))OR(CAST(-1358697401 AS NUMERIC)))) ORDER BY ((((v0.c2) NOTNULL))>>(v0.c0 COLLATE BINARY));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN highlight(vt0.c1, vt0.c2, vt0.c0, vt0.c2) THEN ((vt0.c2) BETWEEN ('') AND (vt0.c1)) END) ORDER BY ((((((vt0.c0))<((vt0.c2)))))>=(((((vt0.c2, NULL, vt0.c2))>=((vt0.c0, vt0.c2, vt0.c0)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN highlight(vt0.c1, vt0.c2, vt0.c0, vt0.c2) THEN ((vt0.c2) BETWEEN ('') AND (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0))<((vt0.c2)))))>=(((((vt0.c2, NULL, vt0.c2))>=((vt0.c0, vt0.c2, vt0.c0)))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN highlight(vt0.c1, vt0.c2, vt0.c0, vt0.c2) THEN ((vt0.c2) BETWEEN ('') AND (vt0.c1)) END) ORDER BY ((((((vt0.c0))<((vt0.c2)))))>=(((((vt0.c2, NULL, vt0.c2))>=((vt0.c0, vt0.c2, vt0.c0)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN highlight(vt0.c1, vt0.c2, vt0.c0, vt0.c2) THEN ((vt0.c2) BETWEEN ('') AND (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0))<((vt0.c2)))))>=(((((vt0.c2, NULL, vt0.c2))>=((vt0.c0, vt0.c2, vt0.c0)))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((NOT (vt0.c2)))*((NOT (v0.c2))))) ORDER BY ((((- (vt0.c1))))>=(((('-1600411663')<(vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c2)))*((NOT (v0.c2))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((- (vt0.c1))))>=(((('-1600411663')<(vt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((NOT (vt0.c2)))*((NOT (v0.c2))))) ORDER BY ((((- (vt0.c1))))>=(((('-1600411663')<(vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c2)))*((NOT (v0.c2))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((- (vt0.c1))))>=(((('-1600411663')<(vt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((NOT (vt0.c2)))*((NOT (v0.c2))))) ORDER BY ((((- (vt0.c1))))>=(((('-1600411663')<(vt0.c1)))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c1))) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN vt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS REAL)  WHEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN vt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN vt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS REAL)  WHEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN vt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN vt0.c2 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c3) ORDER BY TRIM(DISTINCT (((('')AND(v0.c1)))AND(vt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c3) IS TRUE)  as count FROM vt0, v0 ORDER BY TRIM(DISTINCT (((('')AND(v0.c1)))AND(vt0.c2))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c3) ORDER BY TRIM(DISTINCT (((('')AND(v0.c1)))AND(vt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c3) IS TRUE)  as count FROM vt0, v0 ORDER BY TRIM(DISTINCT (((('')AND(v0.c1)))AND(vt0.c2))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c3) ORDER BY TRIM(DISTINCT (((('')AND(v0.c1)))AND(vt0.c2))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE (((v0.c0))<=((v0.c1)))  WHEN CASE v0.c4  WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN NULL THEN v0.c0 END THEN ((v0.c0)IS NOT(v0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((v0.c0))<=((v0.c1)))  WHEN CASE v0.c4  WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN NULL THEN v0.c0 END THEN ((v0.c0)IS NOT(v0.c2)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE (((v0.c0))<=((v0.c1)))  WHEN CASE v0.c4  WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN NULL THEN v0.c0 END THEN ((v0.c0)IS NOT(v0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((v0.c0))<=((v0.c1)))  WHEN CASE v0.c4  WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN NULL THEN v0.c0 END THEN ((v0.c0)IS NOT(v0.c2)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE (((v0.c0))<=((v0.c1)))  WHEN CASE v0.c4  WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN NULL THEN v0.c0 END THEN ((v0.c0)IS NOT(v0.c2)) END);
SELECT * FROM v0 WHERE ((((v0.c0 IN (v0.c4, v0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c4, v0.c3))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN (v0.c4, v0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c4, v0.c3))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN (v0.c4, v0.c3))) IS FALSE));
SELECT * FROM vt0 WHERE (((json_patch(vt0.c0, vt0.c1)) BETWEEN (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END) AND (IFNULL(DISTINCT vt0.c1, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((json_patch(vt0.c0, vt0.c1)) BETWEEN (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END) AND (IFNULL(DISTINCT vt0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((json_patch(vt0.c0, vt0.c1)) BETWEEN (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END) AND (IFNULL(DISTINCT vt0.c1, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((json_patch(vt0.c0, vt0.c1)) BETWEEN (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END) AND (IFNULL(DISTINCT vt0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('664865028')AND(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CAST(0.5359284055732262 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((('664865028')AND(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CAST(0.5359284055732262 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('664865028')AND(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CAST(0.5359284055732262 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((('664865028')AND(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CAST(0.5359284055732262 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('664865028')AND(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CAST(0.5359284055732262 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((COALESCE(DISTINCT vt0.c0, '') IN ())) ORDER BY 1084632327 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((COALESCE(DISTINCT vt0.c0, '') IN ())) IS TRUE)  as count FROM vt0 ORDER BY 1084632327 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((COALESCE(DISTINCT vt0.c0, '') IN ())) ORDER BY 1084632327 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((COALESCE(DISTINCT vt0.c0, '') IN ())) IS TRUE)  as count FROM vt0 ORDER BY 1084632327 DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(((vt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(((vt0.c2) NOT NULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(((vt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(((vt0.c2) NOT NULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(((vt0.c2) NOT NULL)));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((NOT (vt0.c0))) ISNULL)) ORDER BY ((((vt0.c2)) NOT BETWEEN ((v0.c3)) AND ((v0.c2))) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) ISNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c2)) NOT BETWEEN ((v0.c3)) AND ((v0.c2))) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((NOT (vt0.c0))) ISNULL)) ORDER BY ((((vt0.c2)) NOT BETWEEN ((v0.c3)) AND ((v0.c2))) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) ISNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c2)) NOT BETWEEN ((v0.c3)) AND ((v0.c2))) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((NOT (vt0.c0))) ISNULL)) ORDER BY ((((vt0.c2)) NOT BETWEEN ((v0.c3)) AND ((v0.c2))) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR('-583189498')))AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)))<<((- (vt0.c2))))) ORDER BY SUBSTR(((vt0.c1)*(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR('-583189498')))AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)))<<((- (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY SUBSTR(((vt0.c1)*(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR('-583189498')))AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)))<<((- (vt0.c2))))) ORDER BY SUBSTR(((vt0.c1)*(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR('-583189498')))AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)))<<((- (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY SUBSTR(((vt0.c1)*(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR('-583189498')))AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)))<<((- (vt0.c2))))) ORDER BY SUBSTR(((vt0.c1)*(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c2) ORDER BY ((v0.c0 COLLATE NOCASE)<<((NOT (v0.c1)))), (v0.c3 COLLATE BINARY IN (((v0.c3) BETWEEN (v0.c0) AND (v0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c0 COLLATE NOCASE)<<((NOT (v0.c1)))), (v0.c3 COLLATE BINARY IN (((v0.c3) BETWEEN (v0.c0) AND (v0.c1)))) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c2) ORDER BY ((v0.c0 COLLATE NOCASE)<<((NOT (v0.c1)))), (v0.c3 COLLATE BINARY IN (((v0.c3) BETWEEN (v0.c0) AND (v0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c0 COLLATE NOCASE)<<((NOT (v0.c1)))), (v0.c3 COLLATE BINARY IN (((v0.c3) BETWEEN (v0.c0) AND (v0.c1)))) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c2) ORDER BY ((v0.c0 COLLATE NOCASE)<<((NOT (v0.c1)))), (v0.c3 COLLATE BINARY IN (((v0.c3) BETWEEN (v0.c0) AND (v0.c1)))) ASC;
SELECT ALL * FROM v0 WHERE (NULLIF((v0.c2 IN (v0.c0)), ((v0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((NULLIF((v0.c2 IN (v0.c0)), ((v0.c1) NOTNULL))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (NULLIF((v0.c2 IN (v0.c0)), ((v0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((NULLIF((v0.c2 IN (v0.c0)), ((v0.c1) NOTNULL))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (NULLIF((v0.c2 IN (v0.c0)), ((v0.c1) NOTNULL)));
SELECT COUNT(*) FROM vt0 WHERE ((- (x'99c4'))) ORDER BY (((NOT ('')))-(((vt0.c2)IS NOT(vt0.c2))));
SELECT SUM(count) FROM (SELECT (((- (x'99c4'))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT ('')))-(((vt0.c2)IS NOT(vt0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE ((- (x'99c4'))) ORDER BY (((NOT ('')))-(((vt0.c2)IS NOT(vt0.c2))));
SELECT SUM(count) FROM (SELECT (((- (x'99c4'))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT ('')))-(((vt0.c2)IS NOT(vt0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE ((- (x'99c4'))) ORDER BY (((NOT ('')))-(((vt0.c2)IS NOT(vt0.c2))));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM v0 WHERE (((((v0.c2, v0.c2, v0.c2))<=((v0.c3, v0.c2, v0.c4))) IN ())) ORDER BY 1291837164  NULLS FIRST, UNLIKELY((('-1583999682') IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c2, v0.c2, v0.c2))<=((v0.c3, v0.c2, v0.c4))) IN ())) IS TRUE)  as count FROM v0 ORDER BY 1291837164  NULLS FIRST, UNLIKELY((('-1583999682') IS FALSE)));
SELECT * FROM v0 WHERE (((((v0.c2, v0.c2, v0.c2))<=((v0.c3, v0.c2, v0.c4))) IN ())) ORDER BY 1291837164  NULLS FIRST, UNLIKELY((('-1583999682') IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c2, v0.c2, v0.c2))<=((v0.c3, v0.c2, v0.c4))) IN ())) IS TRUE)  as count FROM v0 ORDER BY 1291837164  NULLS FIRST, UNLIKELY((('-1583999682') IS FALSE)));
SELECT ALL * FROM v0 WHERE ((+ (CASE v0.c4  WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END))) ORDER BY LIKELIHOOD((~ (v0.c3)), 0.6029901735379722) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE v0.c4  WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END))) IS TRUE)  as count FROM v0 ORDER BY LIKELIHOOD((~ (v0.c3)), 0.6029901735379722) ASC);
SELECT ALL * FROM v0 WHERE ((+ (CASE v0.c4  WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END))) ORDER BY LIKELIHOOD((~ (v0.c3)), 0.6029901735379722) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE v0.c4  WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END))) IS TRUE)  as count FROM v0 ORDER BY LIKELIHOOD((~ (v0.c3)), 0.6029901735379722) ASC);
SELECT ALL * FROM v0 WHERE ((+ (CASE v0.c4  WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END))) ORDER BY LIKELIHOOD((~ (v0.c3)), 0.6029901735379722) ASC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS NUMERIC));
SELECT ALL * FROM v0 WHERE (LOWER(DISTINCT CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LOWER(DISTINCT CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LOWER(DISTINCT CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END));
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c4) IS TRUE) AS BLOB)) ORDER BY 0.847228564367559 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c4) IS TRUE) AS BLOB)) IS TRUE)  as count FROM vt0, v0 ORDER BY 0.847228564367559 ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c4) IS TRUE) AS BLOB)) ORDER BY 0.847228564367559 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c4) IS TRUE) AS BLOB)) IS TRUE)  as count FROM vt0, v0 ORDER BY 0.847228564367559 ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c4) IS TRUE) AS BLOB)) ORDER BY 0.847228564367559 ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((CASE vt0.c0  WHEN vt0.c2 THEN v0.c4 ELSE vt0.c2 END)AND((~ (NULL)))))AND(CAST(vt0.c2 AS INTEGER))) WHERE (TRIM(DISTINCT ((v0.c3) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((v0.c3) ISNULL))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((CASE vt0.c0  WHEN vt0.c2 THEN v0.c4 ELSE vt0.c2 END)AND((~ (NULL)))))AND(CAST(vt0.c2 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((CASE vt0.c0  WHEN vt0.c2 THEN v0.c4 ELSE vt0.c2 END)AND((~ (NULL)))))AND(CAST(vt0.c2 AS INTEGER))) WHERE (TRIM(DISTINCT ((v0.c3) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((v0.c3) ISNULL))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((CASE vt0.c0  WHEN vt0.c2 THEN v0.c4 ELSE vt0.c2 END)AND((~ (NULL)))))AND(CAST(vt0.c2 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((CASE vt0.c0  WHEN vt0.c2 THEN v0.c4 ELSE vt0.c2 END)AND((~ (NULL)))))AND(CAST(vt0.c2 AS INTEGER))) WHERE (TRIM(DISTINCT ((v0.c3) ISNULL)));
SELECT COUNT(*) FROM v0 WHERE (v0.c3);
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c3);
SELECT SUM(count) FROM (SELECT ALL ((v0.c3) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c3);
SELECT ALL * FROM v0, vt0 WHERE (((CASE WHEN v0.c0 THEN vt0.c2 END) IS FALSE)) ORDER BY v0.c0 ASC, CAST(CAST('-1432790118' AS REAL) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN vt0.c2 END) IS FALSE)) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 ASC, CAST(CAST('-1432790118' AS REAL) AS NUMERIC) DESC);
SELECT ALL * FROM v0, vt0 WHERE (((CASE WHEN v0.c0 THEN vt0.c2 END) IS FALSE)) ORDER BY v0.c0 ASC, CAST(CAST('-1432790118' AS REAL) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN vt0.c2 END) IS FALSE)) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 ASC, CAST(CAST('-1432790118' AS REAL) AS NUMERIC) DESC);
SELECT ALL * FROM v0, vt0 WHERE (((CASE WHEN v0.c0 THEN vt0.c2 END) IS FALSE)) ORDER BY v0.c0 ASC, CAST(CAST('-1432790118' AS REAL) AS NUMERIC) DESC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c2))==((NULL))) IN ())) ORDER BY ((v0.c4) IS FALSE) COLLATE RTRIM ASC  NULLS FIRST, vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2))==((NULL))) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c4) IS FALSE) COLLATE RTRIM ASC  NULLS FIRST, vt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c2))==((NULL))) IN ())) ORDER BY ((v0.c4) IS FALSE) COLLATE RTRIM ASC  NULLS FIRST, vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2))==((NULL))) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c4) IS FALSE) COLLATE RTRIM ASC  NULLS FIRST, vt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c2))==((NULL))) IN ())) ORDER BY ((v0.c4) IS FALSE) COLLATE RTRIM ASC  NULLS FIRST, vt0.c1  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT NULL) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT NULL) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS REAL));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c4 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c4 AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c4 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c4 AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c4 AS TEXT));
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c2);
SELECT * FROM vt0 WHERE (CAST('' AS TEXT)) ORDER BY ((((vt0.c0)<(vt0.c1))) NOT BETWEEN (((((vt0.c2)AND(vt0.c1)))OR(vt0.c1))) AND ((-2145039734 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('' AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<(vt0.c1))) NOT BETWEEN (((((vt0.c2)AND(vt0.c1)))OR(vt0.c1))) AND ((-2145039734 IN ()))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST('' AS TEXT)) ORDER BY ((((vt0.c0)<(vt0.c1))) NOT BETWEEN (((((vt0.c2)AND(vt0.c1)))OR(vt0.c1))) AND ((-2145039734 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('' AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<(vt0.c1))) NOT BETWEEN (((((vt0.c2)AND(vt0.c1)))OR(vt0.c1))) AND ((-2145039734 IN ()))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST('' AS TEXT)) ORDER BY ((((vt0.c0)<(vt0.c1))) NOT BETWEEN (((((vt0.c2)AND(vt0.c1)))OR(vt0.c1))) AND ((-2145039734 IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<>(((vt0.c2) NOTNULL)))) ORDER BY TRIM(CAST(vt0.c1 AS REAL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))!=(((vt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(CAST(vt0.c1 AS REAL))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<>(((vt0.c2) NOTNULL)))) ORDER BY TRIM(CAST(vt0.c1 AS REAL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))!=(((vt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(CAST(vt0.c1 AS REAL))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<>(((vt0.c2) NOTNULL)))) ORDER BY TRIM(CAST(vt0.c1 AS REAL))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ())) ORDER BY CASE WHEN (v0.c0 IN ()) THEN ((v0.c4)>(v0.c0)) END  NULLS FIRST, CAST((((v0.c0)) BETWEEN ((v0.c4)) AND ((v0.c1))) AS NUMERIC), ((((('#7MᠫXj\r#r' IN ()))AND((v0.c1 IN ()))))OR(518452707))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (v0.c0 IN ()) THEN ((v0.c4)>(v0.c0)) END  NULLS FIRST, CAST((((v0.c0)) BETWEEN ((v0.c4)) AND ((v0.c1))) AS NUMERIC), ((((('#7MᠫXj\r#r' IN ()))AND((v0.c1 IN ()))))OR(518452707))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ())) ORDER BY CASE WHEN (v0.c0 IN ()) THEN ((v0.c4)>(v0.c0)) END  NULLS FIRST, CAST((((v0.c0)) BETWEEN ((v0.c4)) AND ((v0.c1))) AS NUMERIC), ((((('#7MᠫXj\r#r' IN ()))AND((v0.c1 IN ()))))OR(518452707))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (v0.c0 IN ()) THEN ((v0.c4)>(v0.c0)) END  NULLS FIRST, CAST((((v0.c0)) BETWEEN ((v0.c4)) AND ((v0.c1))) AS NUMERIC), ((((('#7MᠫXj\r#r' IN ()))AND((v0.c1 IN ()))))OR(518452707))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ())) ORDER BY CASE WHEN (v0.c0 IN ()) THEN ((v0.c4)>(v0.c0)) END  NULLS FIRST, CAST((((v0.c0)) BETWEEN ((v0.c4)) AND ((v0.c1))) AS NUMERIC), ((((('#7MᠫXj\r#r' IN ()))AND((v0.c1 IN ()))))OR(518452707))  NULLS FIRST;
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (vt0.c1 COLLATE BINARY IN ()) WHERE (CAST(((v0.c0) NOT BETWEEN (x'') AND (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOT BETWEEN (x'') AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (vt0.c1 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (vt0.c1 COLLATE BINARY IN ()) WHERE (CAST(((v0.c0) NOT BETWEEN (x'') AND (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOT BETWEEN (x'') AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (vt0.c1 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (vt0.c1 COLLATE BINARY IN ()) WHERE (CAST(((v0.c0) NOT BETWEEN (x'') AND (vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM vt0, v0 WHERE ((NOT ((NOT (v0.c2))))) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)))*(((((x'')AND(v0.c0)))OR(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (v0.c2))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)))*(((((x'')AND(v0.c0)))OR(vt0.c1)))) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((NOT ((NOT (v0.c2))))) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)))*(((((x'')AND(v0.c0)))OR(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (v0.c2))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)))*(((((x'')AND(v0.c0)))OR(vt0.c1)))) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((NOT ((NOT (v0.c2))))) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)))*(((((x'')AND(v0.c0)))OR(vt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((NULL))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((NULL))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((NULL))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((NULL))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((NULL))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 WHERE (x'c8f3') ORDER BY (v0.c0 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((x'c8f3') IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN ()) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (x'c8f3') ORDER BY (v0.c0 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((x'c8f3') IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN ()) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (x'c8f3') ORDER BY (v0.c0 IN ()) DESC;
SELECT COUNT(*) FROM vt0 NOT INDEXED FULL OUTER JOIN v0 ON ((((vt0.c2)-(v0.c4))) IS FALSE) WHERE (CASE CAST(v0.c4 AS NUMERIC)  WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)) THEN v0.c2 COLLATE BINARY WHEN ((vt0.c0) IS FALSE) THEN ((((((((vt0.c1)AND(v0.c4)))AND(v0.c2)))OR(vt0.c1)))AND(vt0.c1)) WHEN (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((v0.c1, v0.c2, vt0.c2)) AND ((vt0.c0, vt0.c0, ''))) THEN CAST(vt0.c2 AS REAL) ELSE vt0.c0 END) ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (((x'f08a') ISNULL)) AND (v0.c3 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c4 AS NUMERIC)  WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)) THEN v0.c2 COLLATE BINARY WHEN ((vt0.c0) IS FALSE) THEN ((((((((vt0.c1)AND(v0.c4)))AND(v0.c2)))OR(vt0.c1)))AND(vt0.c1)) WHEN (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((v0.c1, v0.c2, vt0.c2)) AND ((vt0.c0, vt0.c0, ''))) THEN CAST(vt0.c2 AS REAL) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c2)-(v0.c4))) IS FALSE) ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (((x'f08a') ISNULL)) AND (v0.c3 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 NOT INDEXED FULL OUTER JOIN v0 ON ((((vt0.c2)-(v0.c4))) IS FALSE) WHERE (CASE CAST(v0.c4 AS NUMERIC)  WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)) THEN v0.c2 COLLATE BINARY WHEN ((vt0.c0) IS FALSE) THEN ((((((((vt0.c1)AND(v0.c4)))AND(v0.c2)))OR(vt0.c1)))AND(vt0.c1)) WHEN (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((v0.c1, v0.c2, vt0.c2)) AND ((vt0.c0, vt0.c0, ''))) THEN CAST(vt0.c2 AS REAL) ELSE vt0.c0 END) ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (((x'f08a') ISNULL)) AND (v0.c3 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c4 AS NUMERIC)  WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)) THEN v0.c2 COLLATE BINARY WHEN ((vt0.c0) IS FALSE) THEN ((((((((vt0.c1)AND(v0.c4)))AND(v0.c2)))OR(vt0.c1)))AND(vt0.c1)) WHEN (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((v0.c1, v0.c2, vt0.c2)) AND ((vt0.c0, vt0.c0, ''))) THEN CAST(vt0.c2 AS REAL) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c2)-(v0.c4))) IS FALSE) ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (((x'f08a') ISNULL)) AND (v0.c3 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 NOT INDEXED FULL OUTER JOIN v0 ON ((((vt0.c2)-(v0.c4))) IS FALSE) WHERE (CASE CAST(v0.c4 AS NUMERIC)  WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)) THEN v0.c2 COLLATE BINARY WHEN ((vt0.c0) IS FALSE) THEN ((((((((vt0.c1)AND(v0.c4)))AND(v0.c2)))OR(vt0.c1)))AND(vt0.c1)) WHEN (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((v0.c1, v0.c2, vt0.c2)) AND ((vt0.c0, vt0.c0, ''))) THEN CAST(vt0.c2 AS REAL) ELSE vt0.c0 END) ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (((x'f08a') ISNULL)) AND (v0.c3 COLLATE NOCASE));
