-- Time: 2024/06/09 09:25:32
-- Database: database95
-- Database version: 3.40.0
-- seed value: 345020895
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, tokenize=simple, order=DESC); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0, tokenize = "porter", content=''); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-1505084712,5');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'3412d5c8'); -- 0ms;
END; -- 0ms;
PRAGMA stats; -- 0ms;
ANALYZE; -- 1ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0=NULL; -- 0ms;
PRAGMA temp.short_column_names; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=-1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1455358382);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1505084712);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA default_cache_size; -- 0ms;
UPDATE vt0 SET c0=0.2326668273623006; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(-1.505084712E9); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='N{v{AkXK', c0=x'5c84', c0='-1331172495' WHERE ((((vt0.c0) BETWEEN (-1.455358382E9) AND (82576183))) NOT BETWEEN (vt0.c0) AND ((((vt0.c0, '', vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.5818119783710648); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1505084712,8');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 14); -- 3ms;
PRAGMA temp.stats; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 REAL ); -- 1ms;
UPDATE vt0 SET c0='㫘	'; -- 0ms;
UPDATE t0 SET (c0)=(x'') WHERE CASE t0.c0  WHEN LIKELIHOOD(DISTINCT t0.c0, 0.8407101953203627) THEN (- (t0.c0)) END; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE ((((t0.c0)&(t0.c0))) NOT BETWEEN (((((t0.c0)AND(t0.c0)))AND(t0.c0))) AND (((t0.c0)LIKE(t0.c0)))); -- 1ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.26071845151415074; -- 0ms;
CREATE VIRTUAL TABLE vt2 USING fts4(c0 UNINDEXED); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=(x''); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1067275600,4');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.865372980054749; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ALTER TABLE t0 ADD COLUMN c41 INTEGER; -- 0ms;
UPDATE vt2 SET c0=NULL, c0=x'' WHERE ((((vt2.c0) ISNULL))AND(vt2.c0)); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR FAIL vt0 SET c0='0.5818119783710648', c0=NULL; -- 1ms;
UPDATE vt0 SET c0='1425702774'; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
REINDEX; -- 0ms;
ALTER TABLE t1 ADD COLUMN c12 BLOB; -- 0ms;
PRAGMA temp.short_column_names = true; -- 0ms;
PRAGMA secure_delete = false; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1508152041);\n; -- 0ms;
INSERT OR REPLACE INTO vt2(c0) VALUES (0x4ec0337), ((HEX(NULL) IN (CASE x'4f58137c'  WHEN 0.26071845151415074 THEN NULL END))), ('2F'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
CREATE INDEX i72 ON t1(CASE (NOT (c12))  WHEN c12 COLLATE NOCASE THEN ((c0) IS FALSE) ELSE (((c12)) BETWEEN ((c12)) AND ((c12))) END COLLATE RTRIM DESC,(((((c0, c0, x''))=((x'', c0, c0)))) NOT BETWEEN (CASE ''  WHEN x'' THEN c12 ELSE c0 END) AND (((c12)||(c0)))) COLLATE BINARY); -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c6; -- 0ms;
CREATE INDEX i78 ON t1(((CASE c12  WHEN c12 THEN c6 ELSE c12 END)<(c12)) COLLATE NOCASE DESC,(c6 COLLATE NOCASE IN ()) ASC); -- 0ms;
COMMIT; -- 0ms;
DELETE FROM vt2 WHERE vt2.c0; -- 2ms;
INSERT OR IGNORE INTO t1(c6) VALUES ('-1868977176'); -- 0ms;
UPDATE OR FAIL vt0 SET c0='1865994821', c0=NULL WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0)IS NOT(vt0.c0)))); -- 0ms;
ANALYZE; -- 1ms;
ANALYZE; -- 1ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
ANALYZE; -- 2ms;
DROP INDEX IF EXISTS "i78"; -- 0ms;
INSERT OR REPLACE INTO vt2(c0) VALUES ('[]'); -- 1ms;
UPDATE OR ABORT vt0 SET c0=NULL, c0=-1.331172495E9 WHERE (- (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))); -- 1ms;
UPDATE vt2 SET c0=NULL, c0=x'' WHERE (- (((vt2.c0)IS(vt2.c0)))); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=-1.868977176E9; -- 0ms;
UPDATE OR IGNORE vt2 SET (c0, c0)=(NULL, x'') WHERE vt2.c0; -- 0ms;
PRAGMA automatic_index; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 6ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '895'); -- 0ms;
INSERT INTO vt2(vt2) VALUES('integrity-check'); -- 0ms;
PRAGMA main.journal_size_limit; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE CASE ((vt0.c0)%(NULL))  WHEN vt0.c0 THEN ((vt0.c0)AND(vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '33125'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=10'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '51097'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=14'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 3); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (0.761845666941261); -- 2ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt2 SET c0=1343917191; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.short_column_names; -- 0ms;
END; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
DROP TABLE IF EXISTS vt2; -- 1ms;
UPDATE vt0 SET c0=x''; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON (- (((vt0.c0)LIKE(vt0.c0)))) RIGHT OUTER JOIN vt0 ON CAST(((t0.c6) NOT BETWEEN (t0.c12) AND (vt1.c0)) AS NUMERIC) WHERE (((((((t0.c6)OR(t0.c12)))AND(x'43b4')))IS(t0.c6 COLLATE NOCASE))) ORDER BY ((((x'') ISNULL)) NOTNULL), (((t0.c12)/(t0.c12)) IN ((((vt1.c0))<((vt1.c0))), CAST(vt1.c0 AS INTEGER)))  NULLS LAST, load_extension(((vt1.c0)/(vt1.c0))) ASC, (((vt0.c0, t0.c12, t0.c12)) BETWEEN ((t0.c12 COLLATE NOCASE, CASE WHEN vt1.c0 THEN t0.c12 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (x'') AND (t0.c6)))) AND ((((x'')<=(vt0.c0)), ((t0.c12) IS FALSE), 0.4732665173734545)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c6)OR(t0.c12)))AND(x'43b4')))IS(t0.c6 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (- (((vt0.c0)LIKE(vt0.c0)))) RIGHT OUTER JOIN vt0 ON CAST(((t0.c6) NOT BETWEEN (t0.c12) AND (vt1.c0)) AS NUMERIC) ORDER BY ((((x'') ISNULL)) NOTNULL), (((t0.c12)/(t0.c12)) IN ((((vt1.c0))<((vt1.c0))), CAST(vt1.c0 AS INTEGER)))  NULLS LAST, load_extension(((vt1.c0)/(vt1.c0))) ASC, (((vt0.c0, t0.c12, t0.c12)) BETWEEN ((t0.c12 COLLATE NOCASE, CASE WHEN vt1.c0 THEN t0.c12 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (x'') AND (t0.c6)))) AND ((((x'')<=(vt0.c0)), ((t0.c12) IS FALSE), 0.4732665173734545)))  NULLS LAST);
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON (- (((vt0.c0)LIKE(vt0.c0)))) RIGHT OUTER JOIN vt0 ON CAST(((t0.c6) NOT BETWEEN (t0.c12) AND (vt1.c0)) AS NUMERIC) WHERE (((((((t0.c6)OR(t0.c12)))AND(x'43b4')))IS(t0.c6 COLLATE NOCASE))) ORDER BY ((((x'') ISNULL)) NOTNULL), (((t0.c12)/(t0.c12)) IN ((((vt1.c0))<((vt1.c0))), CAST(vt1.c0 AS INTEGER)))  NULLS LAST, load_extension(((vt1.c0)/(vt1.c0))) ASC, (((vt0.c0, t0.c12, t0.c12)) BETWEEN ((t0.c12 COLLATE NOCASE, CASE WHEN vt1.c0 THEN t0.c12 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (x'') AND (t0.c6)))) AND ((((x'')<=(vt0.c0)), ((t0.c12) IS FALSE), 0.4732665173734545)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c6)OR(t0.c12)))AND(x'43b4')))IS(t0.c6 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (- (((vt0.c0)LIKE(vt0.c0)))) RIGHT OUTER JOIN vt0 ON CAST(((t0.c6) NOT BETWEEN (t0.c12) AND (vt1.c0)) AS NUMERIC) ORDER BY ((((x'') ISNULL)) NOTNULL), (((t0.c12)/(t0.c12)) IN ((((vt1.c0))<((vt1.c0))), CAST(vt1.c0 AS INTEGER)))  NULLS LAST, load_extension(((vt1.c0)/(vt1.c0))) ASC, (((vt0.c0, t0.c12, t0.c12)) BETWEEN ((t0.c12 COLLATE NOCASE, CASE WHEN vt1.c0 THEN t0.c12 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (x'') AND (t0.c6)))) AND ((((x'')<=(vt0.c0)), ((t0.c12) IS FALSE), 0.4732665173734545)))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((+ (((((((((t0.c6)AND(t0.c6)))AND(t0.c12)))OR(t0.c12)))OR(t0.c12))))) ORDER BY t0.c12 ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((t0.c6)AND(t0.c6)))AND(t0.c12)))OR(t0.c12)))OR(t0.c12))))) IS TRUE)  as count FROM t0 ORDER BY t0.c12 ASC);
SELECT COUNT(*) FROM t0 WHERE ((+ (((((((((t0.c6)AND(t0.c6)))AND(t0.c12)))OR(t0.c12)))OR(t0.c12))))) ORDER BY t0.c12 ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((t0.c6)AND(t0.c6)))AND(t0.c12)))OR(t0.c12)))OR(t0.c12))))) IS TRUE)  as count FROM t0 ORDER BY t0.c12 ASC);
SELECT COUNT(*) FROM t0 WHERE ((+ (((((((((t0.c6)AND(t0.c6)))AND(t0.c12)))OR(t0.c12)))OR(t0.c12))))) ORDER BY t0.c12 ASC;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((- (vt1.c0))) NOT BETWEEN ('-1505084712') AND (t0.c6)));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0))) NOT BETWEEN ('-1505084712') AND (t0.c6))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((- (vt1.c0))) NOT BETWEEN ('-1505084712') AND (t0.c6)));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0))) NOT BETWEEN ('-1505084712') AND (t0.c6))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((- (vt1.c0))) NOT BETWEEN ('-1505084712') AND (t0.c6)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)IS NOT(0X4ec0337)) COLLATE BINARY) ORDER BY (((~ (vt1.c0)))OR(0X501a8c87)), GLOB(((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)), ((vt0.c0) NOT NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS NOT(0x4ec0337)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((~ (vt1.c0)))OR(0x501a8c87)), GLOB(((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)), ((vt0.c0) NOT NULL))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)IS NOT(0X4ec0337)) COLLATE BINARY) ORDER BY (((~ (vt1.c0)))OR(0X501a8c87)), GLOB(((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)), ((vt0.c0) NOT NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS NOT(0x4ec0337)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((~ (vt1.c0)))OR(0x501a8c87)), GLOB(((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)), ((vt0.c0) NOT NULL))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)IS NOT(0X4ec0337)) COLLATE BINARY) ORDER BY (((~ (vt1.c0)))OR(0X501a8c87)), GLOB(((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)), ((vt0.c0) NOT NULL))  NULLS LAST;
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON '1085842703' WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN (((vt1.c0)) BETWEEN (('1368348799')) AND ((t0.c6))) WHEN (- (vt1.c0)) THEN 1.0672756E9 WHEN ((vt1.c0)*(t0.c6)) THEN TYPEOF(DISTINCT vt1.c0) ELSE ((t0.c12) NOT NULL) END) ORDER BY ((CASE WHEN vt1.c0 THEN '-1331172495' END) NOT BETWEEN (x'') AND (((NULL)LIKE(t0.c12)))), (((((((t0.c6)OR(vt1.c0)))OR(t0.c6))))>=((((t0.c12)>=(vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) IS FALSE) THEN (((vt1.c0)) BETWEEN (('1368348799')) AND ((t0.c6))) WHEN (- (vt1.c0)) THEN 1.0672756E9 WHEN ((vt1.c0)*(t0.c6)) THEN TYPEOF(DISTINCT vt1.c0) ELSE ((t0.c12) NOT NULL) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON '1085842703' ORDER BY ((CASE WHEN vt1.c0 THEN '-1331172495' END) NOT BETWEEN (x'') AND (((NULL)LIKE(t0.c12)))), (((((((t0.c6)OR(vt1.c0)))OR(t0.c6))))>=((((t0.c12)>=(vt1.c0))))) DESC);
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON '1085842703' WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN (((vt1.c0)) BETWEEN (('1368348799')) AND ((t0.c6))) WHEN (- (vt1.c0)) THEN 1.0672756E9 WHEN ((vt1.c0)*(t0.c6)) THEN TYPEOF(DISTINCT vt1.c0) ELSE ((t0.c12) NOT NULL) END) ORDER BY ((CASE WHEN vt1.c0 THEN '-1331172495' END) NOT BETWEEN (x'') AND (((NULL)LIKE(t0.c12)))), (((((((t0.c6)OR(vt1.c0)))OR(t0.c6))))>=((((t0.c12)>=(vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) IS FALSE) THEN (((vt1.c0)) BETWEEN (('1368348799')) AND ((t0.c6))) WHEN (- (vt1.c0)) THEN 1.0672756E9 WHEN ((vt1.c0)*(t0.c6)) THEN TYPEOF(DISTINCT vt1.c0) ELSE ((t0.c12) NOT NULL) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON '1085842703' ORDER BY ((CASE WHEN vt1.c0 THEN '-1331172495' END) NOT BETWEEN (x'') AND (((NULL)LIKE(t0.c12)))), (((((((t0.c6)OR(vt1.c0)))OR(t0.c6))))>=((((t0.c12)>=(vt1.c0))))) DESC);
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON '1085842703' WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN (((vt1.c0)) BETWEEN (('1368348799')) AND ((t0.c6))) WHEN (- (vt1.c0)) THEN 1.0672756E9 WHEN ((vt1.c0)*(t0.c6)) THEN TYPEOF(DISTINCT vt1.c0) ELSE ((t0.c12) NOT NULL) END) ORDER BY ((CASE WHEN vt1.c0 THEN '-1331172495' END) NOT BETWEEN (x'') AND (((NULL)LIKE(t0.c12)))), (((((((t0.c6)OR(vt1.c0)))OR(t0.c6))))>=((((t0.c12)>=(vt1.c0))))) DESC;
SELECT * FROM vt1 INDEXED BY i72, vt0, t0 WHERE (vt0.c0) ORDER BY ((((vt1.c0)AND(t0.c6)))||(((t0.c6)+(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1 INDEXED BY i72, vt0, t0 ORDER BY ((((vt1.c0)AND(t0.c6)))||(((t0.c6)+(vt0.c0)))));
SELECT * FROM vt1 INDEXED BY i72, vt0, t0 WHERE (vt0.c0) ORDER BY ((((vt1.c0)AND(t0.c6)))||(((t0.c6)+(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1 INDEXED BY i72, vt0, t0 ORDER BY ((((vt1.c0)AND(t0.c6)))||(((t0.c6)+(vt0.c0)))));
SELECT ALL * FROM t0, vt1 WHERE (CAST(((((((((t0.c6)OR(t0.c12)))AND(vt1.c0)))AND(vt1.c0)))AND(t0.c12)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((t0.c6)OR(t0.c12)))AND(vt1.c0)))AND(vt1.c0)))AND(t0.c12)) AS TEXT)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (CAST(((((((((t0.c6)OR(t0.c12)))AND(vt1.c0)))AND(vt1.c0)))AND(t0.c12)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((t0.c6)OR(t0.c12)))AND(vt1.c0)))AND(vt1.c0)))AND(t0.c12)) AS TEXT)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (CAST(((((((((t0.c6)OR(t0.c12)))AND(vt1.c0)))AND(vt1.c0)))AND(t0.c12)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (vt0.c0)) WHERE (CAST(((vt1.c0) NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (vt0.c0)) WHERE (CAST(((vt1.c0) NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (vt0.c0)) WHERE (CAST(((vt1.c0) NOTNULL) AS REAL));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((((((((((json_object(t0.c12, vt0.c0, vt0.c0, t0.c12))OR(((t0.c12) IS FALSE))))AND(((t0.c12)==(t0.c12)))))OR((vt0.c0 IN ()))))AND((((t0.c12))>=((vt0.c0))))))AND((t0.c12 IN ()))))AND(((vt1.c0)IS NOT(t0.c12))))) ORDER BY ((t0.c12) NOT NULL) COLLATE BINARY ASC  NULLS LAST, ((((t0.c6)/(t0.c6))) IS FALSE) DESC, ((((((vt1.c0)AND(vt1.c0)))OR(t0.c12)))>(DATETIME(t0.c6, '￿H', vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((json_object(t0.c12, vt0.c0, vt0.c0, t0.c12))OR(((t0.c12) IS FALSE))))AND(((t0.c12)=(t0.c12)))))OR((vt0.c0 IN ()))))AND((((t0.c12))>=((vt0.c0))))))AND((t0.c12 IN ()))))AND(((vt1.c0)IS NOT(t0.c12))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((t0.c12) NOT NULL) COLLATE BINARY ASC  NULLS LAST, ((((t0.c6)/(t0.c6))) IS FALSE) DESC, ((((((vt1.c0)AND(vt1.c0)))OR(t0.c12)))>(DATETIME(t0.c6, '￿H', vt1.c0)))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((((((((((json_object(t0.c12, vt0.c0, vt0.c0, t0.c12))OR(((t0.c12) IS FALSE))))AND(((t0.c12)==(t0.c12)))))OR((vt0.c0 IN ()))))AND((((t0.c12))>=((vt0.c0))))))AND((t0.c12 IN ()))))AND(((vt1.c0)IS NOT(t0.c12))))) ORDER BY ((t0.c12) NOT NULL) COLLATE BINARY ASC  NULLS LAST, ((((t0.c6)/(t0.c6))) IS FALSE) DESC, ((((((vt1.c0)AND(vt1.c0)))OR(t0.c12)))>(DATETIME(t0.c6, '￿H', vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((json_object(t0.c12, vt0.c0, vt0.c0, t0.c12))OR(((t0.c12) IS FALSE))))AND(((t0.c12)=(t0.c12)))))OR((vt0.c0 IN ()))))AND((((t0.c12))>=((vt0.c0))))))AND((t0.c12 IN ()))))AND(((vt1.c0)IS NOT(t0.c12))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((t0.c12) NOT NULL) COLLATE BINARY ASC  NULLS LAST, ((((t0.c6)/(t0.c6))) IS FALSE) DESC, ((((((vt1.c0)AND(vt1.c0)))OR(t0.c12)))>(DATETIME(t0.c6, '￿H', vt1.c0)))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((((((((((json_object(t0.c12, vt0.c0, vt0.c0, t0.c12))OR(((t0.c12) IS FALSE))))AND(((t0.c12)==(t0.c12)))))OR((vt0.c0 IN ()))))AND((((t0.c12))>=((vt0.c0))))))AND((t0.c12 IN ()))))AND(((vt1.c0)IS NOT(t0.c12))))) ORDER BY ((t0.c12) NOT NULL) COLLATE BINARY ASC  NULLS LAST, ((((t0.c6)/(t0.c6))) IS FALSE) DESC, ((((((vt1.c0)AND(vt1.c0)))OR(t0.c12)))>(DATETIME(t0.c6, '￿H', vt1.c0)))  NULLS LAST;
SELECT * FROM vt1, vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (((((~ (vt0.c0))))<((CAST(NULL AS TEXT))))) ORDER BY CAST(vt0.c0 AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt0.c0))))<((CAST(NULL AS TEXT))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS INTEGER) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((~ (vt0.c0))))<((CAST(NULL AS TEXT))))) ORDER BY CAST(vt0.c0 AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt0.c0))))<((CAST(NULL AS TEXT))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS INTEGER) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((~ (vt0.c0))))<((CAST(NULL AS TEXT))))) ORDER BY CAST(vt0.c0 AS INTEGER) DESC  NULLS LAST;
SELECT * FROM t0 WHERE ((((((t0.c12))>((t0.c12)))) NOT BETWEEN (((t0.c6) NOT BETWEEN (t0.c6) AND (t0.c12))) AND (CAST(t0.c12 AS REAL)))) ORDER BY ((((((((CAST(x'' AS INTEGER))OR((t0.c6 IN (t0.c12)))))AND(t0.c12)))AND((('ca')OR(t0.c6)))))OR((((t0.c6, t0.c6, t0.c6)) NOT BETWEEN ((t0.c6, t0.c12, t0.c12)) AND ((t0.c6, t0.c6, t0.c6))))) DESC, ((t0.c6)LIKE(t0.c12)) COLLATE RTRIM, '[]' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c12))>((t0.c12)))) NOT BETWEEN (((t0.c6) NOT BETWEEN (t0.c6) AND (t0.c12))) AND (CAST(t0.c12 AS REAL)))) IS TRUE)  as count FROM t0 ORDER BY ((((((((CAST(x'' AS INTEGER))OR((t0.c6 IN (t0.c12)))))AND(t0.c12)))AND((('ca')OR(t0.c6)))))OR((((t0.c6, t0.c6, t0.c6)) NOT BETWEEN ((t0.c6, t0.c12, t0.c12)) AND ((t0.c6, t0.c6, t0.c6))))) DESC, ((t0.c6)LIKE(t0.c12)) COLLATE RTRIM, '[]' DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((((((t0.c12))>((t0.c12)))) NOT BETWEEN (((t0.c6) NOT BETWEEN (t0.c6) AND (t0.c12))) AND (CAST(t0.c12 AS REAL)))) ORDER BY ((((((((CAST(x'' AS INTEGER))OR((t0.c6 IN (t0.c12)))))AND(t0.c12)))AND((('ca')OR(t0.c6)))))OR((((t0.c6, t0.c6, t0.c6)) NOT BETWEEN ((t0.c6, t0.c12, t0.c12)) AND ((t0.c6, t0.c6, t0.c6))))) DESC, ((t0.c6)LIKE(t0.c12)) COLLATE RTRIM, '[]' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c12))>((t0.c12)))) NOT BETWEEN (((t0.c6) NOT BETWEEN (t0.c6) AND (t0.c12))) AND (CAST(t0.c12 AS REAL)))) IS TRUE)  as count FROM t0 ORDER BY ((((((((CAST(x'' AS INTEGER))OR((t0.c6 IN (t0.c12)))))AND(t0.c12)))AND((('ca')OR(t0.c6)))))OR((((t0.c6, t0.c6, t0.c6)) NOT BETWEEN ((t0.c6, t0.c12, t0.c12)) AND ((t0.c6, t0.c6, t0.c6))))) DESC, ((t0.c6)LIKE(t0.c12)) COLLATE RTRIM, '[]' DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((((((t0.c12))>((t0.c12)))) NOT BETWEEN (((t0.c6) NOT BETWEEN (t0.c6) AND (t0.c12))) AND (CAST(t0.c12 AS REAL)))) ORDER BY ((((((((CAST(x'' AS INTEGER))OR((t0.c6 IN (t0.c12)))))AND(t0.c12)))AND((('ca')OR(t0.c6)))))OR((((t0.c6, t0.c6, t0.c6)) NOT BETWEEN ((t0.c6, t0.c12, t0.c12)) AND ((t0.c6, t0.c6, t0.c6))))) DESC, ((t0.c6)LIKE(t0.c12)) COLLATE RTRIM, '[]' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((0.761845666941261)OR(((vt1.c0)%(vt1.c0)))))AND(0x2b7e8c42))) ORDER BY (((t0.c12, vt1.c0, vt0.c0)) NOT BETWEEN (((- (t0.c12)), CAST(vt0.c0 AS BLOB), (('0.2326668273623006')%(vt1.c0)))) AND ((vt0.c0, (t0.c12 IN (NULL)), vt1.c0))) ASC, t0.c12  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.761845666941261)OR(((vt1.c0)%(vt1.c0)))))AND(0X2b7e8c42))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((t0.c12, vt1.c0, vt0.c0)) NOT BETWEEN (((- (t0.c12)), CAST(vt0.c0 AS BLOB), (('0.2326668273623006')%(vt1.c0)))) AND ((vt0.c0, (t0.c12 IN (NULL)), vt1.c0))) ASC, t0.c12  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((0.761845666941261)OR(((vt1.c0)%(vt1.c0)))))AND(0x2b7e8c42))) ORDER BY (((t0.c12, vt1.c0, vt0.c0)) NOT BETWEEN (((- (t0.c12)), CAST(vt0.c0 AS BLOB), (('0.2326668273623006')%(vt1.c0)))) AND ((vt0.c0, (t0.c12 IN (NULL)), vt1.c0))) ASC, t0.c12  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.761845666941261)OR(((vt1.c0)%(vt1.c0)))))AND(0X2b7e8c42))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((t0.c12, vt1.c0, vt0.c0)) NOT BETWEEN (((- (t0.c12)), CAST(vt0.c0 AS BLOB), (('0.2326668273623006')%(vt1.c0)))) AND ((vt0.c0, (t0.c12 IN (NULL)), vt1.c0))) ASC, t0.c12  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((0.761845666941261)OR(((vt1.c0)%(vt1.c0)))))AND(0x2b7e8c42))) ORDER BY (((t0.c12, vt1.c0, vt0.c0)) NOT BETWEEN (((- (t0.c12)), CAST(vt0.c0 AS BLOB), (('0.2326668273623006')%(vt1.c0)))) AND ((vt0.c0, (t0.c12 IN (NULL)), vt1.c0))) ASC, t0.c12  NULLS FIRST;
SELECT * FROM vt1, t0 WHERE (CAST((((t0.c6))<((vt1.c0))) AS REAL)) ORDER BY (((t0.c12)) BETWEEN ((0.31978388873312247)) AND ((t0.c12))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c6))<((vt1.c0))) AS REAL)) IS TRUE)  as count FROM vt1, t0 ORDER BY (((t0.c12)) BETWEEN ((0.31978388873312247)) AND ((t0.c12))) COLLATE BINARY  NULLS LAST);
SELECT * FROM vt1, t0 WHERE (CAST((((t0.c6))<((vt1.c0))) AS REAL)) ORDER BY (((t0.c12)) BETWEEN ((0.31978388873312247)) AND ((t0.c12))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c6))<((vt1.c0))) AS REAL)) IS TRUE)  as count FROM vt1, t0 ORDER BY (((t0.c12)) BETWEEN ((0.31978388873312247)) AND ((t0.c12))) COLLATE BINARY  NULLS LAST);
SELECT * FROM vt1, t0 WHERE (CAST((((t0.c6))<((vt1.c0))) AS REAL)) ORDER BY (((t0.c12)) BETWEEN ((0.31978388873312247)) AND ((t0.c12))) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))IS((('''b')=('1094498728')))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))IS((('''b')==('1094498728'))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))IS((('''b')=('1094498728')))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))IS((('''b')==('1094498728'))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))IS((('''b')=('1094498728')))));
SELECT ALL * FROM vt1, t0 WHERE (CASE ((t0.c6) IS FALSE)  WHEN (t0.c12 IN (t0.c12)) THEN ((t0.c6)<(vt1.c0)) ELSE (NOT (t0.c6)) END) ORDER BY (NOT (((t0.c12) IS TRUE))) DESC  NULLS FIRST, ((NULL)LIKE(CAST(vt1.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c6) IS FALSE)  WHEN (t0.c12 IN (t0.c12)) THEN ((t0.c6)<(vt1.c0)) ELSE (NOT (t0.c6)) END) IS TRUE)  as count FROM vt1, t0 ORDER BY (NOT (((t0.c12) IS TRUE))) DESC  NULLS FIRST, ((NULL)LIKE(CAST(vt1.c0 AS TEXT))) DESC);
SELECT ALL * FROM vt1, t0 WHERE (CASE ((t0.c6) IS FALSE)  WHEN (t0.c12 IN (t0.c12)) THEN ((t0.c6)<(vt1.c0)) ELSE (NOT (t0.c6)) END) ORDER BY (NOT (((t0.c12) IS TRUE))) DESC  NULLS FIRST, ((NULL)LIKE(CAST(vt1.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c6) IS FALSE)  WHEN (t0.c12 IN (t0.c12)) THEN ((t0.c6)<(vt1.c0)) ELSE (NOT (t0.c6)) END) IS TRUE)  as count FROM vt1, t0 ORDER BY (NOT (((t0.c12) IS TRUE))) DESC  NULLS FIRST, ((NULL)LIKE(CAST(vt1.c0 AS TEXT))) DESC);
SELECT ALL * FROM vt1, t0 WHERE (CASE ((t0.c6) IS FALSE)  WHEN (t0.c12 IN (t0.c12)) THEN ((t0.c6)<(vt1.c0)) ELSE (NOT (t0.c6)) END) ORDER BY (NOT (((t0.c12) IS TRUE))) DESC  NULLS FIRST, ((NULL)LIKE(CAST(vt1.c0 AS TEXT))) DESC;
SELECT ALL * FROM vt0 INNER JOIN t0 ON (((- (vt0.c0))) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(t0.c6)) AND (((((t0.c12)AND(t0.c6)))AND(t0.c6)))) WHERE (CASE (t0.c6 IN ())  WHEN ((t0.c12)||(t0.c6)) THEN 1.865994821E9 WHEN ABS(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c6)) WHEN CAST(t0.c6 AS REAL) THEN ((t0.c6)|(t0.c12)) ELSE ((vt0.c0) ISNULL) END) ORDER BY CASE WHEN t0.c12 COLLATE BINARY THEN json_array_length(t0.c6, x'') END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c6 IN ())  WHEN ((t0.c12)||(t0.c6)) THEN 1.865994821E9 WHEN ABS(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c6)) WHEN CAST(t0.c6 AS REAL) THEN ((t0.c6)|(t0.c12)) ELSE ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((- (vt0.c0))) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(t0.c6)) AND (((((t0.c12)AND(t0.c6)))AND(t0.c6)))) ORDER BY CASE WHEN t0.c12 COLLATE BINARY THEN json_array_length(t0.c6, x'') END ASC);
SELECT ALL * FROM vt0 INNER JOIN t0 ON (((- (vt0.c0))) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(t0.c6)) AND (((((t0.c12)AND(t0.c6)))AND(t0.c6)))) WHERE (CASE (t0.c6 IN ())  WHEN ((t0.c12)||(t0.c6)) THEN 1.865994821E9 WHEN ABS(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c6)) WHEN CAST(t0.c6 AS REAL) THEN ((t0.c6)|(t0.c12)) ELSE ((vt0.c0) ISNULL) END) ORDER BY CASE WHEN t0.c12 COLLATE BINARY THEN json_array_length(t0.c6, x'') END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c6 IN ())  WHEN ((t0.c12)||(t0.c6)) THEN 1.865994821E9 WHEN ABS(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c6)) WHEN CAST(t0.c6 AS REAL) THEN ((t0.c6)|(t0.c12)) ELSE ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((- (vt0.c0))) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(t0.c6)) AND (((((t0.c12)AND(t0.c6)))AND(t0.c6)))) ORDER BY CASE WHEN t0.c12 COLLATE BINARY THEN json_array_length(t0.c6, x'') END ASC);
SELECT ALL * FROM vt0 INNER JOIN t0 ON (((- (vt0.c0))) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(t0.c6)) AND (((((t0.c12)AND(t0.c6)))AND(t0.c6)))) WHERE (CASE (t0.c6 IN ())  WHEN ((t0.c12)||(t0.c6)) THEN 1.865994821E9 WHEN ABS(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c6)) WHEN CAST(t0.c6 AS REAL) THEN ((t0.c6)|(t0.c12)) ELSE ((vt0.c0) ISNULL) END) ORDER BY CASE WHEN t0.c12 COLLATE BINARY THEN json_array_length(t0.c6, x'') END ASC;
SELECT * FROM t0 WHERE ((((~ (t0.c12)))>((+ (t0.c6)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c12)))>((+ (t0.c6))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((~ (t0.c12)))>((+ (t0.c6)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c12)))>((+ (t0.c6))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((~ (t0.c12)))>((+ (t0.c6)))));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((NOT (((((0.02149761167582931)OR(vt0.c0)))OR(t0.c12)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((0.02149761167582931)OR(vt0.c0)))OR(t0.c12))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((NOT (((((0.02149761167582931)OR(vt0.c0)))OR(t0.c12)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((0.02149761167582931)OR(vt0.c0)))OR(t0.c12))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((NOT (((((0.02149761167582931)OR(vt0.c0)))OR(t0.c12)))));
SELECT * FROM t0 WHERE (((((t0.c6)IS NOT(NULL)))IS(LAST_INSERT_ROWID()))) ORDER BY (((t0.c12)) BETWEEN ((CAST(t0.c6 AS INTEGER))) AND (((t0.c12 IN (NULL))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c6)IS NOT(NULL)))IS(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c12)) BETWEEN ((CAST(t0.c6 AS INTEGER))) AND (((t0.c12 IN (NULL))))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c6)IS NOT(NULL)))IS(LAST_INSERT_ROWID()))) ORDER BY (((t0.c12)) BETWEEN ((CAST(t0.c6 AS INTEGER))) AND (((t0.c12 IN (NULL))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c6)IS NOT(NULL)))IS(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c12)) BETWEEN ((CAST(t0.c6 AS INTEGER))) AND (((t0.c12 IN (NULL))))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c6)IS NOT(NULL)))IS(LAST_INSERT_ROWID()))) ORDER BY (((t0.c12)) BETWEEN ((CAST(t0.c6 AS INTEGER))) AND (((t0.c12 IN (NULL))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c6)) NOT BETWEEN ((((t0.c6)<<(NULL)))) AND ((-1868232022)))) ORDER BY ((t0.c12) NOTNULL) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c6)) NOT BETWEEN ((((t0.c6)<<(NULL)))) AND ((-1868232022)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c12) NOTNULL) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c6)) NOT BETWEEN ((((t0.c6)<<(NULL)))) AND ((-1868232022)))) ORDER BY ((t0.c12) NOTNULL) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c6)) NOT BETWEEN ((((t0.c6)<<(NULL)))) AND ((-1868232022)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c12) NOTNULL) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c6)) NOT BETWEEN ((((t0.c6)<<(NULL)))) AND ((-1868232022)))) ORDER BY ((t0.c12) NOTNULL) COLLATE BINARY DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((vt1.c0 COLLATE RTRIM) NOTNULL)) ORDER BY t0.c12;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY t0.c12);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((vt1.c0 COLLATE RTRIM) NOTNULL)) ORDER BY t0.c12;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY t0.c12);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((vt1.c0 COLLATE RTRIM) NOTNULL)) ORDER BY t0.c12;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt1.c0)OR('-181729605')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt1.c0)*(vt1.c0))))) ORDER BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('1425702774'))) IN ());
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR('-181729605')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt1.c0)*(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('1425702774'))) IN ()));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt1.c0)OR('-181729605')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt1.c0)*(vt1.c0))))) ORDER BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('1425702774'))) IN ());
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR('-181729605')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt1.c0)*(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('1425702774'))) IN ()));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt1.c0)OR('-181729605')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt1.c0)*(vt1.c0))))) ORDER BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('1425702774'))) IN ());
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))>=((vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))>=((vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))>=((vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))>=((vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))>=((vt1.c0))));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (0.12697287342538222);
SELECT SUM(count) FROM (SELECT ((0.12697287342538222) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (0.12697287342538222);
SELECT SUM(count) FROM (SELECT ((0.12697287342538222) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (0.12697287342538222);
SELECT * FROM vt0, t0 WHERE (NULL COLLATE RTRIM) ORDER BY CAST(vt0.c0 AS TEXT) DESC, 1165164327 COLLATE RTRIM COLLATE BINARY ASC  NULLS FIRST, (((((NULL)) BETWEEN ((t0.c12)) AND ((t0.c6))))&(CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(vt0.c0 AS TEXT) DESC, 1165164327 COLLATE RTRIM COLLATE BINARY ASC  NULLS FIRST, (((((NULL)) BETWEEN ((t0.c12)) AND ((t0.c6))))&(CAST(vt0.c0 AS TEXT))));
SELECT * FROM vt0, t0 WHERE (NULL COLLATE RTRIM) ORDER BY CAST(vt0.c0 AS TEXT) DESC, 1165164327 COLLATE RTRIM COLLATE BINARY ASC  NULLS FIRST, (((((NULL)) BETWEEN ((t0.c12)) AND ((t0.c6))))&(CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(vt0.c0 AS TEXT) DESC, 1165164327 COLLATE RTRIM COLLATE BINARY ASC  NULLS FIRST, (((((NULL)) BETWEEN ((t0.c12)) AND ((t0.c6))))&(CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM t0 WHERE (((x'') ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'') ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((x'') ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'') ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((x'') ISNULL));
SELECT * FROM vt0 WHERE ((NOT (LIKE(vt0.c0, vt0.c0, '[')))) ORDER BY ((((vt0.c0)OR(vt0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (LIKE(vt0.c0, vt0.c0, '[')))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0))) NOT NULL)  NULLS LAST);
SELECT * FROM vt0 WHERE ((NOT (LIKE(vt0.c0, vt0.c0, '[')))) ORDER BY ((((vt0.c0)OR(vt0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (LIKE(vt0.c0, vt0.c0, '[')))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0))) NOT NULL)  NULLS LAST);
SELECT * FROM vt0 WHERE ((NOT (LIKE(vt0.c0, vt0.c0, '[')))) ORDER BY ((((vt0.c0)OR(vt0.c0))) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0 WHERE (((CAST(t0.c12 AS INTEGER))<=(LIKELY(NULL)))) ORDER BY TRIM(DISTINCT vt1.c0) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c12 AS INTEGER))<=(LIKELY(NULL)))) IS TRUE)  as count FROM vt1, t0 ORDER BY TRIM(DISTINCT vt1.c0) ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE (((CAST(t0.c12 AS INTEGER))<=(LIKELY(NULL)))) ORDER BY TRIM(DISTINCT vt1.c0) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c12 AS INTEGER))<=(LIKELY(NULL)))) IS TRUE)  as count FROM vt1, t0 ORDER BY TRIM(DISTINCT vt1.c0) ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE (((CAST(t0.c12 AS INTEGER))<=(LIKELY(NULL)))) ORDER BY TRIM(DISTINCT vt1.c0) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND ((NOT (vt0.c0))))) ORDER BY (((((('1865994821') NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((('1865994821') NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND ((NOT (vt0.c0))))) ORDER BY (((((('1865994821') NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((('1865994821') NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND ((NOT (vt0.c0))))) ORDER BY (((((('1865994821') NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0) ISNULL) THEN x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) ISNULL) THEN x'' END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0) ISNULL) THEN x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) ISNULL) THEN x'' END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0) ISNULL) THEN x'' END);
SELECT * FROM t0, vt0, vt1 WHERE (CAST(((vt0.c0) IS FALSE) AS NUMERIC)) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM t0, vt0, vt1 WHERE (CAST(((vt0.c0) IS FALSE) AS NUMERIC)) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM t0, vt0, vt1 WHERE (CAST(((vt0.c0) IS FALSE) AS NUMERIC)) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM t0, vt1, vt0 WHERE ((((NOT (t0.c6)))<=(-1839194350)));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c6)))<=(-1839194350))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE ((((NOT (t0.c6)))<=(-1839194350)));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c6)))<=(-1839194350))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE ((((NOT (t0.c6)))<=(-1839194350)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((vt0.c0)%(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((vt0.c0)%(NULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((vt0.c0)%(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((vt0.c0)%(NULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((vt0.c0)%(NULL)))));
SELECT ALL * FROM t0, vt1 WHERE (vt1.c0) ORDER BY CAST(0.26071845151415074 COLLATE BINARY AS NUMERIC)  NULLS FIRST, ((CASE WHEN t0.c6 THEN t0.c6 ELSE t0.c12 END) NOT BETWEEN (t0.c12 COLLATE RTRIM) AND ((~ (t0.c12))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(0.26071845151415074 COLLATE BINARY AS NUMERIC)  NULLS FIRST, ((CASE WHEN t0.c6 THEN t0.c6 ELSE t0.c12 END) NOT BETWEEN (t0.c12 COLLATE RTRIM) AND ((~ (t0.c12)))));
SELECT ALL * FROM t0, vt1 WHERE (vt1.c0) ORDER BY CAST(0.26071845151415074 COLLATE BINARY AS NUMERIC)  NULLS FIRST, ((CASE WHEN t0.c6 THEN t0.c6 ELSE t0.c12 END) NOT BETWEEN (t0.c12 COLLATE RTRIM) AND ((~ (t0.c12))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(0.26071845151415074 COLLATE BINARY AS NUMERIC)  NULLS FIRST, ((CASE WHEN t0.c6 THEN t0.c6 ELSE t0.c12 END) NOT BETWEEN (t0.c12 COLLATE RTRIM) AND ((~ (t0.c12)))));
SELECT ALL * FROM t0, vt1 WHERE (vt1.c0) ORDER BY CAST(0.26071845151415074 COLLATE BINARY AS NUMERIC)  NULLS FIRST, ((CASE WHEN t0.c6 THEN t0.c6 ELSE t0.c12 END) NOT BETWEEN (t0.c12 COLLATE RTRIM) AND ((~ (t0.c12))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c0 AS NUMERIC))));
SELECT * FROM t0 WHERE ((((((((((((t0.c6)OR(t0.c12)))AND(t0.c6)))AND(t0.c6)))AND(t0.c12))))<((CASE WHEN t0.c12 THEN t0.c6 ELSE t0.c6 END)))) ORDER BY ((t0.c6 COLLATE BINARY) IS FALSE) ASC, (~ (((t0.c12)<(t0.c6)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c6)OR(t0.c12)))AND(t0.c6)))AND(t0.c6)))AND(t0.c12))))<((CASE WHEN t0.c12 THEN t0.c6 ELSE t0.c6 END)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c6 COLLATE BINARY) IS FALSE) ASC, (~ (((t0.c12)<(t0.c6)))) ASC  NULLS LAST);
SELECT * FROM t0 WHERE ((((((((((((t0.c6)OR(t0.c12)))AND(t0.c6)))AND(t0.c6)))AND(t0.c12))))<((CASE WHEN t0.c12 THEN t0.c6 ELSE t0.c6 END)))) ORDER BY ((t0.c6 COLLATE BINARY) IS FALSE) ASC, (~ (((t0.c12)<(t0.c6)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c6)OR(t0.c12)))AND(t0.c6)))AND(t0.c6)))AND(t0.c12))))<((CASE WHEN t0.c12 THEN t0.c6 ELSE t0.c6 END)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c6 COLLATE BINARY) IS FALSE) ASC, (~ (((t0.c12)<(t0.c6)))) ASC  NULLS LAST);
SELECT * FROM t0 WHERE ((((((((((((t0.c6)OR(t0.c12)))AND(t0.c6)))AND(t0.c6)))AND(t0.c12))))<((CASE WHEN t0.c12 THEN t0.c6 ELSE t0.c6 END)))) ORDER BY ((t0.c6 COLLATE BINARY) IS FALSE) ASC, (~ (((t0.c12)<(t0.c6)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (0Xffffffff95095357);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff95095357) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0Xffffffff95095357);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff95095357) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0Xffffffff95095357);
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (t0.c12) AND ('1425702774')) IN (((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)), '')) WHERE (CAST((- (t0.c6)) AS TEXT)) ORDER BY IFNULL(DISTINCT t0.c6 COLLATE RTRIM, ((((vt0.c0)AND(t0.c6)))AND(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t0.c6)) AS TEXT)) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (t0.c12) AND ('1425702774')) IN (((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)), '')) ORDER BY IFNULL(DISTINCT t0.c6 COLLATE RTRIM, ((((vt0.c0)AND(t0.c6)))AND(vt1.c0)))  NULLS FIRST);
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (t0.c12) AND ('1425702774')) IN (((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)), '')) WHERE (CAST((- (t0.c6)) AS TEXT)) ORDER BY IFNULL(DISTINCT t0.c6 COLLATE RTRIM, ((((vt0.c0)AND(t0.c6)))AND(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t0.c6)) AS TEXT)) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (t0.c12) AND ('1425702774')) IN (((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)), '')) ORDER BY IFNULL(DISTINCT t0.c6 COLLATE RTRIM, ((((vt0.c0)AND(t0.c6)))AND(vt1.c0)))  NULLS FIRST);
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (t0.c12) AND ('1425702774')) IN (((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)), '')) WHERE (CAST((- (t0.c6)) AS TEXT)) ORDER BY IFNULL(DISTINCT t0.c6 COLLATE RTRIM, ((((vt0.c0)AND(t0.c6)))AND(vt1.c0)))  NULLS FIRST;
SELECT ALL * FROM vt0 NOT INDEXED WHERE (CAST(((vt0.c0) IS FALSE) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (CAST(((vt0.c0) IS FALSE) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (CAST(((vt0.c0) IS FALSE) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((((((((((t0.c12)) NOT BETWEEN ((vt1.c0)) AND ((t0.c6))))OR((vt0.c0 IN (t0.c6)))))AND(TRIM(t0.c12))))OR(((('-181729605')) BETWEEN ((t0.c12)) AND ((''))))))AND((~ (t0.c6)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c12)) NOT BETWEEN ((vt1.c0)) AND ((t0.c6))))OR((vt0.c0 IN (t0.c6)))))AND(TRIM(t0.c12))))OR(((('-181729605')) BETWEEN ((t0.c12)) AND ((''))))))AND((~ (t0.c6))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((((((((((t0.c12)) NOT BETWEEN ((vt1.c0)) AND ((t0.c6))))OR((vt0.c0 IN (t0.c6)))))AND(TRIM(t0.c12))))OR(((('-181729605')) BETWEEN ((t0.c12)) AND ((''))))))AND((~ (t0.c6)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c12)) NOT BETWEEN ((vt1.c0)) AND ((t0.c6))))OR((vt0.c0 IN (t0.c6)))))AND(TRIM(t0.c12))))OR(((('-181729605')) BETWEEN ((t0.c12)) AND ((''))))))AND((~ (t0.c6))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((((((((((t0.c12)) NOT BETWEEN ((vt1.c0)) AND ((t0.c6))))OR((vt0.c0 IN (t0.c6)))))AND(TRIM(t0.c12))))OR(((('-181729605')) BETWEEN ((t0.c12)) AND ((''))))))AND((~ (t0.c6)))));
SELECT * FROM vt1, t0 WHERE ((((+ (t0.c12))) IS TRUE)) ORDER BY (((+ ('5Ｇ')))<(((t0.c6) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c12))) IS TRUE)) IS TRUE)  as count FROM vt1, t0 ORDER BY (((+ ('5Ｇ')))<(((t0.c6) NOT NULL)))  NULLS LAST);
SELECT * FROM vt1, t0 WHERE ((((+ (t0.c12))) IS TRUE)) ORDER BY (((+ ('5Ｇ')))<(((t0.c6) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c12))) IS TRUE)) IS TRUE)  as count FROM vt1, t0 ORDER BY (((+ ('5Ｇ')))<(((t0.c6) NOT NULL)))  NULLS LAST);
SELECT * FROM vt1, t0 WHERE ((((+ (t0.c12))) IS TRUE)) ORDER BY (((+ ('5Ｇ')))<(((t0.c6) NOT NULL)))  NULLS LAST;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON COALESCE(t0.c12, vt0.c0, t0.c6, vt0.c0) COLLATE BINARY WHERE (((((t0.c6) BETWEEN (vt0.c0) AND (t0.c12)))GLOB(CAST(t0.c12 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c6) BETWEEN (vt0.c0) AND (t0.c12)))GLOB(CAST(t0.c12 AS REAL)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON COALESCE(t0.c12, vt0.c0, t0.c6, vt0.c0) COLLATE BINARY);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON COALESCE(t0.c12, vt0.c0, t0.c6, vt0.c0) COLLATE BINARY WHERE (((((t0.c6) BETWEEN (vt0.c0) AND (t0.c12)))GLOB(CAST(t0.c12 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c6) BETWEEN (vt0.c0) AND (t0.c12)))GLOB(CAST(t0.c12 AS REAL)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON COALESCE(t0.c12, vt0.c0, t0.c6, vt0.c0) COLLATE BINARY);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON COALESCE(t0.c12, vt0.c0, t0.c6, vt0.c0) COLLATE BINARY WHERE (((((t0.c6) BETWEEN (vt0.c0) AND (t0.c12)))GLOB(CAST(t0.c12 AS REAL))));
SELECT COUNT(*) FROM t0 WHERE ((t0.c12 IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c12 IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((t0.c12 IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c12 IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((t0.c12 IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((t0.c12) NOT BETWEEN (t0.c12) AND (t0.c12))))) ORDER BY (t0.c12 COLLATE BINARY IN ((+ (t0.c6)), ((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)))) DESC  NULLS FIRST, t0.c12 ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c12) NOT BETWEEN (t0.c12) AND (t0.c12))))) IS TRUE)  as count FROM t0 ORDER BY (t0.c12 COLLATE BINARY IN ((+ (t0.c6)), ((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)))) DESC  NULLS FIRST, t0.c12 ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((t0.c12) NOT BETWEEN (t0.c12) AND (t0.c12))))) ORDER BY (t0.c12 COLLATE BINARY IN ((+ (t0.c6)), ((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)))) DESC  NULLS FIRST, t0.c12 ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c12) NOT BETWEEN (t0.c12) AND (t0.c12))))) IS TRUE)  as count FROM t0 ORDER BY (t0.c12 COLLATE BINARY IN ((+ (t0.c6)), ((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)))) DESC  NULLS FIRST, t0.c12 ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((t0.c12) NOT BETWEEN (t0.c12) AND (t0.c12))))) ORDER BY (t0.c12 COLLATE BINARY IN ((+ (t0.c6)), ((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)))) DESC  NULLS FIRST, t0.c12 ASC;
SELECT * FROM vt0, vt1, t0 WHERE (CAST((((t0.c6))==((vt1.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c6))==((vt1.c0))) AS BLOB)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (CAST((((t0.c6))==((vt1.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c6))==((vt1.c0))) AS BLOB)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (CAST((((t0.c6))==((vt1.c0))) AS BLOB));
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((t0.c12)<<(vt0.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt0.c0)-(t0.c6)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c12)<<(vt0.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt0.c0)-(t0.c6))))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((t0.c12)<<(vt0.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt0.c0)-(t0.c6)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c12)<<(vt0.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt0.c0)-(t0.c6))))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((t0.c12)<<(vt0.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt0.c0)-(t0.c6)))));
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) IS TRUE)) ORDER BY ((x'')>=(((vt1.c0)=(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((x'')>=(((vt1.c0)==(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) IS TRUE)) ORDER BY ((x'')>=(((vt1.c0)=(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((x'')>=(((vt1.c0)==(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) IS TRUE)) ORDER BY ((x'')>=(((vt1.c0)=(vt1.c0))));
SELECT ALL * FROM t0 WHERE (((t0.c6) BETWEEN (t0.c6 COLLATE RTRIM) AND (((((t0.c12)AND(t0.c12)))AND(x'9cfb6873')))));
SELECT SUM(count) FROM (SELECT ((((t0.c6) BETWEEN (t0.c6 COLLATE RTRIM) AND (((((t0.c12)AND(t0.c12)))AND(x'9cfb6873'))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c6) BETWEEN (t0.c6 COLLATE RTRIM) AND (((((t0.c12)AND(t0.c12)))AND(x'9cfb6873')))));
SELECT SUM(count) FROM (SELECT ((((t0.c6) BETWEEN (t0.c6 COLLATE RTRIM) AND (((((t0.c12)AND(t0.c12)))AND(x'9cfb6873'))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c6) BETWEEN (t0.c6 COLLATE RTRIM) AND (((((t0.c12)AND(t0.c12)))AND(x'9cfb6873')))));
SELECT * FROM vt0, vt1, t0 WHERE (CASE WHEN CAST(t0.c6 AS TEXT) THEN t0.c6 ELSE ((t0.c12) IS TRUE) END) ORDER BY (((t0.c6)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c6 END)) AND ((((vt1.c0)<=(t0.c6))))) ASC  NULLS FIRST, (((vt0.c0 IN ())) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((t0.c6))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c6 AS TEXT) THEN t0.c6 ELSE ((t0.c12) IS TRUE) END) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((t0.c6)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c6 END)) AND ((((vt1.c0)<=(t0.c6))))) ASC  NULLS FIRST, (((vt0.c0 IN ())) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((t0.c6))))) DESC);
SELECT * FROM vt0, vt1, t0 WHERE (CASE WHEN CAST(t0.c6 AS TEXT) THEN t0.c6 ELSE ((t0.c12) IS TRUE) END) ORDER BY (((t0.c6)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c6 END)) AND ((((vt1.c0)<=(t0.c6))))) ASC  NULLS FIRST, (((vt0.c0 IN ())) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((t0.c6))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c6 AS TEXT) THEN t0.c6 ELSE ((t0.c12) IS TRUE) END) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((t0.c6)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c6 END)) AND ((((vt1.c0)<=(t0.c6))))) ASC  NULLS FIRST, (((vt0.c0 IN ())) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((t0.c6))))) DESC);
SELECT * FROM vt0, vt1, t0 WHERE (CASE WHEN CAST(t0.c6 AS TEXT) THEN t0.c6 ELSE ((t0.c12) IS TRUE) END) ORDER BY (((t0.c6)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c6 END)) AND ((((vt1.c0)<=(t0.c6))))) ASC  NULLS FIRST, (((vt0.c0 IN ())) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((t0.c6))))) DESC;
SELECT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (CAST(vt0.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (CAST(vt0.c0 AS REAL))) ASC);
SELECT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (CAST(vt0.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (CAST(vt0.c0 AS REAL))) ASC);
SELECT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (CAST(vt0.c0 AS REAL))) ASC;
SELECT ALL * FROM vt1 WHERE ((NULL IN ((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, x'31a8f817758e'))), '352432410'))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, x'31a8f817758e'))), '352432410'))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((NULL IN ((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, x'31a8f817758e'))), '352432410'))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, x'31a8f817758e'))), '352432410'))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((NULL IN ((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, x'31a8f817758e'))), '352432410'))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((t0.c12)) BETWEEN ((((((t0.c6)AND(t0.c6)))OR(t0.c12)))) AND ((((t0.c12)<<(t0.c12))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c12)) BETWEEN ((((((t0.c6)AND(t0.c6)))OR(t0.c12)))) AND ((((t0.c12)<<(t0.c12)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c12)) BETWEEN ((((((t0.c6)AND(t0.c6)))OR(t0.c12)))) AND ((((t0.c12)<<(t0.c12))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c12)) BETWEEN ((((((t0.c6)AND(t0.c6)))OR(t0.c12)))) AND ((((t0.c12)<<(t0.c12)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c12)) BETWEEN ((((((t0.c6)AND(t0.c6)))OR(t0.c12)))) AND ((((t0.c12)<<(t0.c12))))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ('-1508152041' IN ()) WHERE (t0.c12 COLLATE BINARY) ORDER BY (((t0.c12)) NOT BETWEEN (((~ (t0.c12)))) AND ((((((t0.c12)OR(t0.c6)))OR(vt0.c0)))))  NULLS FIRST, ((((t0.c12 IN (t0.c12, t0.c12))))<>((((t0.c12) NOT NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c12 COLLATE BINARY) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ('-1508152041' IN ()) ORDER BY (((t0.c12)) NOT BETWEEN (((~ (t0.c12)))) AND ((((((t0.c12)OR(t0.c6)))OR(vt0.c0)))))  NULLS FIRST, ((((t0.c12 IN (t0.c12, t0.c12))))<>((((t0.c12) NOT NULL)))) ASC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ('-1508152041' IN ()) WHERE (t0.c12 COLLATE BINARY) ORDER BY (((t0.c12)) NOT BETWEEN (((~ (t0.c12)))) AND ((((((t0.c12)OR(t0.c6)))OR(vt0.c0)))))  NULLS FIRST, ((((t0.c12 IN (t0.c12, t0.c12))))<>((((t0.c12) NOT NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c12 COLLATE BINARY) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ('-1508152041' IN ()) ORDER BY (((t0.c12)) NOT BETWEEN (((~ (t0.c12)))) AND ((((((t0.c12)OR(t0.c6)))OR(vt0.c0)))))  NULLS FIRST, ((((t0.c12 IN (t0.c12, t0.c12))))<>((((t0.c12) NOT NULL)))) ASC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ('-1508152041' IN ()) WHERE (t0.c12 COLLATE BINARY) ORDER BY (((t0.c12)) NOT BETWEEN (((~ (t0.c12)))) AND ((((((t0.c12)OR(t0.c6)))OR(vt0.c0)))))  NULLS FIRST, ((((t0.c12 IN (t0.c12, t0.c12))))<>((((t0.c12) NOT NULL)))) ASC;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((('1165164327')>((((t0.c12, t0.c12, vt1.c0, t0.c6, t0.c6))<((vt1.c0, t0.c12, vt1.c0, t0.c6, t0.c6))))));
SELECT SUM(count) FROM (SELECT ALL (((('1165164327')>((((t0.c12, t0.c12, vt1.c0, t0.c6, t0.c6))<((vt1.c0, t0.c12, vt1.c0, t0.c6, t0.c6)))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((('1165164327')>((((t0.c12, t0.c12, vt1.c0, t0.c6, t0.c6))<((vt1.c0, t0.c12, vt1.c0, t0.c6, t0.c6))))));
SELECT SUM(count) FROM (SELECT ALL (((('1165164327')>((((t0.c12, t0.c12, vt1.c0, t0.c6, t0.c6))<((vt1.c0, t0.c12, vt1.c0, t0.c6, t0.c6)))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((('1165164327')>((((t0.c12, t0.c12, vt1.c0, t0.c6, t0.c6))<((vt1.c0, t0.c12, vt1.c0, t0.c6, t0.c6))))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((t0.c6) NOT BETWEEN (x'') AND (t0.c6))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c6) NOT BETWEEN (x'') AND (t0.c6))) IS FALSE)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((t0.c6) NOT BETWEEN (x'') AND (t0.c6))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c6) NOT BETWEEN (x'') AND (t0.c6))) IS FALSE)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((t0.c6) NOT BETWEEN (x'') AND (t0.c6))) IS FALSE));
SELECT * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY 0.2326668273623006  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY 0.2326668273623006  NULLS FIRST);
SELECT * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY 0.2326668273623006  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY 0.2326668273623006  NULLS FIRST);
SELECT * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY 0.2326668273623006  NULLS FIRST;
SELECT ALL * FROM vt1, t0 WHERE (((((+ (x'')), (t0.c6 IN (t0.c6, t0.c12)), ((t0.c12) IS FALSE)))==(('', (((vt1.c0, vt1.c0, t0.c6)) BETWEEN ((t0.c12, vt1.c0, t0.c12)) AND ((vt1.c0, vt1.c0, t0.c6))), CAST(t0.c6 AS INTEGER))))) ORDER BY t0.c12;
SELECT SUM(count) FROM (SELECT ((((((+ (x'')), (t0.c6 IN (t0.c6, t0.c12)), ((t0.c12) IS FALSE)))==(('', (((vt1.c0, vt1.c0, t0.c6)) BETWEEN ((t0.c12, vt1.c0, t0.c12)) AND ((vt1.c0, vt1.c0, t0.c6))), CAST(t0.c6 AS INTEGER))))) IS TRUE)  as count FROM vt1, t0 ORDER BY t0.c12);
SELECT ALL * FROM vt1, t0 WHERE (((((+ (x'')), (t0.c6 IN (t0.c6, t0.c12)), ((t0.c12) IS FALSE)))==(('', (((vt1.c0, vt1.c0, t0.c6)) BETWEEN ((t0.c12, vt1.c0, t0.c12)) AND ((vt1.c0, vt1.c0, t0.c6))), CAST(t0.c6 AS INTEGER))))) ORDER BY t0.c12;
SELECT SUM(count) FROM (SELECT ((((((+ (x'')), (t0.c6 IN (t0.c6, t0.c12)), ((t0.c12) IS FALSE)))==(('', (((vt1.c0, vt1.c0, t0.c6)) BETWEEN ((t0.c12, vt1.c0, t0.c12)) AND ((vt1.c0, vt1.c0, t0.c6))), CAST(t0.c6 AS INTEGER))))) IS TRUE)  as count FROM vt1, t0 ORDER BY t0.c12);
SELECT ALL * FROM vt1, t0 WHERE (((((+ (x'')), (t0.c6 IN (t0.c6, t0.c12)), ((t0.c12) IS FALSE)))==(('', (((vt1.c0, vt1.c0, t0.c6)) BETWEEN ((t0.c12, vt1.c0, t0.c12)) AND ((vt1.c0, vt1.c0, t0.c6))), CAST(t0.c6 AS INTEGER))))) ORDER BY t0.c12;
SELECT * FROM t0, vt1, vt0 WHERE (((((((((LAST_INSERT_ROWID())OR(((t0.c12)*(t0.c6)))))AND(t0.c6 COLLATE RTRIM)))AND(LAST_INSERT_ROWID())))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c6 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((LAST_INSERT_ROWID())OR(((t0.c12)*(t0.c6)))))AND(t0.c6 COLLATE RTRIM)))AND(LAST_INSERT_ROWID())))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c6 END))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE (((((((((LAST_INSERT_ROWID())OR(((t0.c12)*(t0.c6)))))AND(t0.c6 COLLATE RTRIM)))AND(LAST_INSERT_ROWID())))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c6 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((LAST_INSERT_ROWID())OR(((t0.c12)*(t0.c6)))))AND(t0.c6 COLLATE RTRIM)))AND(LAST_INSERT_ROWID())))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c6 END))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE (((((((((LAST_INSERT_ROWID())OR(((t0.c12)*(t0.c6)))))AND(t0.c6 COLLATE RTRIM)))AND(LAST_INSERT_ROWID())))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c6 END)));
SELECT ALL * FROM vt0 WHERE (((((0.5511745177789813) BETWEEN (vt0.c0) AND (0.7531421527315479))) NOTNULL)) ORDER BY CASE (((vt0.c0))<((x'249028c2')))  WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 END  NULLS FIRST, ((((vt0.c0)AND(0.3833007362203472)))AND(vt0.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.5511745177789813) BETWEEN (vt0.c0) AND (0.7531421527315479))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c0))<((x'249028c2')))  WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 END  NULLS FIRST, ((((vt0.c0)AND(0.3833007362203472)))AND(vt0.c0)) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((0.5511745177789813) BETWEEN (vt0.c0) AND (0.7531421527315479))) NOTNULL)) ORDER BY CASE (((vt0.c0))<((x'249028c2')))  WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 END  NULLS FIRST, ((((vt0.c0)AND(0.3833007362203472)))AND(vt0.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.5511745177789813) BETWEEN (vt0.c0) AND (0.7531421527315479))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c0))<((x'249028c2')))  WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 END  NULLS FIRST, ((((vt0.c0)AND(0.3833007362203472)))AND(vt0.c0)) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((0.5511745177789813) BETWEEN (vt0.c0) AND (0.7531421527315479))) NOTNULL)) ORDER BY CASE (((vt0.c0))<((x'249028c2')))  WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 END  NULLS FIRST, ((((vt0.c0)AND(0.3833007362203472)))AND(vt0.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)>=(vt0.c0))))) ORDER BY (((NOT (vt0.c0)))<=(((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))<=(((vt0.c0) NOT NULL))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)>=(vt0.c0))))) ORDER BY (((NOT (vt0.c0)))<=(((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))<=(((vt0.c0) NOT NULL))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)>=(vt0.c0))))) ORDER BY (((NOT (vt0.c0)))<=(((vt0.c0) NOT NULL)));
SELECT ALL * FROM t0, vt0 WHERE (((t0.c6) NOT BETWEEN ((t0.c12 IN (t0.c6))) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((t0.c6) NOT BETWEEN ((t0.c12 IN (t0.c6))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((t0.c6) NOT BETWEEN ((t0.c12 IN (t0.c6))) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((t0.c6) NOT BETWEEN ((t0.c12 IN (t0.c6))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((t0.c6) NOT BETWEEN ((t0.c12 IN (t0.c6))) AND ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0) IS TRUE))))AND('5ｇ'))) ORDER BY CAST((((vt1.c0, vt1.c0, x'')) BETWEEN ((NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, x''))) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0) IS TRUE))))AND('5ｇ'))) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0, vt1.c0, x'')) BETWEEN ((NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, x''))) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0) IS TRUE))))AND('5ｇ'))) ORDER BY CAST((((vt1.c0, vt1.c0, x'')) BETWEEN ((NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, x''))) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0) IS TRUE))))AND('5ｇ'))) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0, vt1.c0, x'')) BETWEEN ((NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, x''))) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0) IS TRUE))))AND('5ｇ'))) ORDER BY CAST((((vt1.c0, vt1.c0, x'')) BETWEEN ((NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, x''))) AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST('NHE' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST('NHE' AS REAL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST('NHE' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST('NHE' AS REAL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST('NHE' AS REAL));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (TYPEOF(DISTINCT (((vt0.c0))>((vt1.c0))))) ORDER BY (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (((vt0.c0))>((vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (TYPEOF(DISTINCT (((vt0.c0))>((vt1.c0))))) ORDER BY (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (((vt0.c0))>((vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (TYPEOF(DISTINCT (((vt0.c0))>((vt1.c0))))) ORDER BY (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM vt1, t0 WHERE (CASE ((t0.c6)<<(t0.c6))  WHEN ((t0.c12)<=(t0.c12)) THEN CASE t0.c12  WHEN vt1.c0 THEN t0.c6 WHEN t0.c12 THEN t0.c12 WHEN t0.c12 THEN t0.c12 ELSE t0.c6 END END) ORDER BY ''  NULLS FIRST, ((x'c1c2')LIKE(((t0.c6) NOT NULL)))  NULLS LAST, UNLIKELY((vt1.c0 IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c6)<<(t0.c6))  WHEN ((t0.c12)<=(t0.c12)) THEN CASE t0.c12  WHEN vt1.c0 THEN t0.c6 WHEN t0.c12 THEN t0.c12 WHEN t0.c12 THEN t0.c12 ELSE t0.c6 END END) IS TRUE)  as count FROM vt1, t0 ORDER BY ''  NULLS FIRST, ((x'c1c2')LIKE(((t0.c6) NOT NULL)))  NULLS LAST, UNLIKELY((vt1.c0 IN ())) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE (CASE ((t0.c6)<<(t0.c6))  WHEN ((t0.c12)<=(t0.c12)) THEN CASE t0.c12  WHEN vt1.c0 THEN t0.c6 WHEN t0.c12 THEN t0.c12 WHEN t0.c12 THEN t0.c12 ELSE t0.c6 END END) ORDER BY ''  NULLS FIRST, ((x'c1c2')LIKE(((t0.c6) NOT NULL)))  NULLS LAST, UNLIKELY((vt1.c0 IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c6)<<(t0.c6))  WHEN ((t0.c12)<=(t0.c12)) THEN CASE t0.c12  WHEN vt1.c0 THEN t0.c6 WHEN t0.c12 THEN t0.c12 WHEN t0.c12 THEN t0.c12 ELSE t0.c6 END END) IS TRUE)  as count FROM vt1, t0 ORDER BY ''  NULLS FIRST, ((x'c1c2')LIKE(((t0.c6) NOT NULL)))  NULLS LAST, UNLIKELY((vt1.c0 IN ())) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE (CASE ((t0.c6)<<(t0.c6))  WHEN ((t0.c12)<=(t0.c12)) THEN CASE t0.c12  WHEN vt1.c0 THEN t0.c6 WHEN t0.c12 THEN t0.c12 WHEN t0.c12 THEN t0.c12 ELSE t0.c6 END END) ORDER BY ''  NULLS FIRST, ((x'c1c2')LIKE(((t0.c6) NOT NULL)))  NULLS LAST, UNLIKELY((vt1.c0 IN ())) DESC  NULLS FIRST;
SELECT ALL * FROM t0 INDEXED BY i72, vt0 WHERE (((((t0.c6)>(t0.c12))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c6)>(t0.c12))) IS TRUE)) IS TRUE)  as count FROM t0 INDEXED BY i72, vt0);
SELECT ALL * FROM t0 INDEXED BY i72, vt0 WHERE (((((t0.c6)>(t0.c12))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c6)>(t0.c12))) IS TRUE)) IS TRUE)  as count FROM t0 INDEXED BY i72, vt0);
SELECT ALL * FROM t0 INDEXED BY i72, vt0 WHERE (((((t0.c6)>(t0.c12))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (LOWER(DISTINCT CAST(t0.c12 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CAST(t0.c12 AS BLOB))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (LOWER(DISTINCT CAST(t0.c12 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CAST(t0.c12 AS BLOB))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (LOWER(DISTINCT CAST(t0.c12 AS BLOB)));
SELECT * FROM vt1 WHERE ('1112653832') ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (('1112653832') IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT * FROM vt1 WHERE ('1112653832') ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (('1112653832') IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT * FROM vt1 WHERE ('1112653832') ORDER BY vt1.c0 DESC;
SELECT ALL * FROM t0 WHERE (((LIKE(t0.c6, t0.c12)) BETWEEN (t0.c6) AND ((((t0.c6, t0.c12, t0.c6)) NOT BETWEEN ((t0.c6, t0.c12, t0.c12)) AND ((t0.c6, t0.c6, t0.c12)))))) ORDER BY (('-2061649490')=(t0.c6 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(t0.c6, t0.c12)) BETWEEN (t0.c6) AND ((((t0.c6, t0.c12, t0.c6)) NOT BETWEEN ((t0.c6, t0.c12, t0.c12)) AND ((t0.c6, t0.c6, t0.c12)))))) IS TRUE)  as count FROM t0 ORDER BY (('-2061649490')==(t0.c6 COLLATE NOCASE)));
SELECT ALL * FROM t0 WHERE (((LIKE(t0.c6, t0.c12)) BETWEEN (t0.c6) AND ((((t0.c6, t0.c12, t0.c6)) NOT BETWEEN ((t0.c6, t0.c12, t0.c12)) AND ((t0.c6, t0.c6, t0.c12)))))) ORDER BY (('-2061649490')=(t0.c6 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(t0.c6, t0.c12)) BETWEEN (t0.c6) AND ((((t0.c6, t0.c12, t0.c6)) NOT BETWEEN ((t0.c6, t0.c12, t0.c12)) AND ((t0.c6, t0.c6, t0.c12)))))) IS TRUE)  as count FROM t0 ORDER BY (('-2061649490')==(t0.c6 COLLATE NOCASE)));
SELECT ALL * FROM t0 WHERE (((LIKE(t0.c6, t0.c12)) BETWEEN (t0.c6) AND ((((t0.c6, t0.c12, t0.c6)) NOT BETWEEN ((t0.c6, t0.c12, t0.c12)) AND ((t0.c6, t0.c6, t0.c12)))))) ORDER BY (('-2061649490')=(t0.c6 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM t0, vt1 NATURAL JOIN vt0 WHERE ((((((((t0.c12, '-1735971736', t0.c6))>=((t0.c12, '', vt0.c0))))OR((('') IS FALSE))))OR(((((vt1.c0)AND(t0.c6)))AND(NULL))))) ORDER BY (((((t0.c12) BETWEEN ('_^') AND (vt0.c0)), ((vt0.c0)LIKE(vt1.c0)), x''))<=(((t0.c6 IN ()), ((((t0.c12)OR(t0.c6)))AND(t0.c6)), CASE t0.c6  WHEN 0.34457399225479435 THEN vt1.c0 END))) DESC  NULLS FIRST, ((CAST(vt0.c0 AS BLOB))|(CASE WHEN t0.c6 THEN t0.c6 END));
SELECT SUM(count) FROM (SELECT (((((((((t0.c12, '-1735971736', t0.c6))>=((t0.c12, '', vt0.c0))))OR((('') IS FALSE))))OR(((((vt1.c0)AND(t0.c6)))AND(NULL))))) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0 ORDER BY (((((t0.c12) BETWEEN ('_^') AND (vt0.c0)), ((vt0.c0)LIKE(vt1.c0)), x''))<=(((t0.c6 IN ()), ((((t0.c12)OR(t0.c6)))AND(t0.c6)), CASE t0.c6  WHEN 0.34457399225479435 THEN vt1.c0 END))) DESC  NULLS FIRST, ((CAST(vt0.c0 AS BLOB))|(CASE WHEN t0.c6 THEN t0.c6 END)));
SELECT ALL COUNT(*) FROM t0, vt1 NATURAL JOIN vt0 WHERE ((((((((t0.c12, '-1735971736', t0.c6))>=((t0.c12, '', vt0.c0))))OR((('') IS FALSE))))OR(((((vt1.c0)AND(t0.c6)))AND(NULL))))) ORDER BY (((((t0.c12) BETWEEN ('_^') AND (vt0.c0)), ((vt0.c0)LIKE(vt1.c0)), x''))<=(((t0.c6 IN ()), ((((t0.c12)OR(t0.c6)))AND(t0.c6)), CASE t0.c6  WHEN 0.34457399225479435 THEN vt1.c0 END))) DESC  NULLS FIRST, ((CAST(vt0.c0 AS BLOB))|(CASE WHEN t0.c6 THEN t0.c6 END));
SELECT SUM(count) FROM (SELECT (((((((((t0.c12, '-1735971736', t0.c6))>=((t0.c12, '', vt0.c0))))OR((('') IS FALSE))))OR(((((vt1.c0)AND(t0.c6)))AND(NULL))))) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0 ORDER BY (((((t0.c12) BETWEEN ('_^') AND (vt0.c0)), ((vt0.c0)LIKE(vt1.c0)), x''))<=(((t0.c6 IN ()), ((((t0.c12)OR(t0.c6)))AND(t0.c6)), CASE t0.c6  WHEN 0.34457399225479435 THEN vt1.c0 END))) DESC  NULLS FIRST, ((CAST(vt0.c0 AS BLOB))|(CASE WHEN t0.c6 THEN t0.c6 END)));
SELECT ALL COUNT(*) FROM t0, vt1 NATURAL JOIN vt0 WHERE ((((((((t0.c12, '-1735971736', t0.c6))>=((t0.c12, '', vt0.c0))))OR((('') IS FALSE))))OR(((((vt1.c0)AND(t0.c6)))AND(NULL))))) ORDER BY (((((t0.c12) BETWEEN ('_^') AND (vt0.c0)), ((vt0.c0)LIKE(vt1.c0)), x''))<=(((t0.c6 IN ()), ((((t0.c12)OR(t0.c6)))AND(t0.c6)), CASE t0.c6  WHEN 0.34457399225479435 THEN vt1.c0 END))) DESC  NULLS FIRST, ((CAST(vt0.c0 AS BLOB))|(CASE WHEN t0.c6 THEN t0.c6 END));
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN t0 ON (((+ (vt0.c0)))/((((vt0.c0))<>((t0.c12))))) WHERE ((((vt1.c0, t0.c6, vt0.c0, vt0.c0, t0.c12)) NOT BETWEEN (((NOT (t0.c12)), ((vt0.c0) ISNULL), x'8ee6', (vt1.c0 IN ()), ((t0.c12)>(t0.c6)))) AND (('', ((t0.c6)>=(t0.c6)), ((((vt1.c0)OR(t0.c12)))OR(t0.c6)), COALESCE('-215957523', vt1.c0), ((t0.c6) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, t0.c6, vt0.c0, vt0.c0, t0.c12)) NOT BETWEEN (((NOT (t0.c12)), ((vt0.c0) ISNULL), x'8ee6', (vt1.c0 IN ()), ((t0.c12)>(t0.c6)))) AND (('', ((t0.c6)>=(t0.c6)), ((((vt1.c0)OR(t0.c12)))OR(t0.c6)), COALESCE('-215957523', vt1.c0), ((t0.c6) IS FALSE))))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t0 ON (((+ (vt0.c0)))/((((vt0.c0))<>((t0.c12))))));
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN t0 ON (((+ (vt0.c0)))/((((vt0.c0))<>((t0.c12))))) WHERE ((((vt1.c0, t0.c6, vt0.c0, vt0.c0, t0.c12)) NOT BETWEEN (((NOT (t0.c12)), ((vt0.c0) ISNULL), x'8ee6', (vt1.c0 IN ()), ((t0.c12)>(t0.c6)))) AND (('', ((t0.c6)>=(t0.c6)), ((((vt1.c0)OR(t0.c12)))OR(t0.c6)), COALESCE('-215957523', vt1.c0), ((t0.c6) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, t0.c6, vt0.c0, vt0.c0, t0.c12)) NOT BETWEEN (((NOT (t0.c12)), ((vt0.c0) ISNULL), x'8ee6', (vt1.c0 IN ()), ((t0.c12)>(t0.c6)))) AND (('', ((t0.c6)>=(t0.c6)), ((((vt1.c0)OR(t0.c12)))OR(t0.c6)), COALESCE('-215957523', vt1.c0), ((t0.c6) IS FALSE))))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t0 ON (((+ (vt0.c0)))/((((vt0.c0))<>((t0.c12))))));
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN t0 ON (((+ (vt0.c0)))/((((vt0.c0))<>((t0.c12))))) WHERE ((((vt1.c0, t0.c6, vt0.c0, vt0.c0, t0.c12)) NOT BETWEEN (((NOT (t0.c12)), ((vt0.c0) ISNULL), x'8ee6', (vt1.c0 IN ()), ((t0.c12)>(t0.c6)))) AND (('', ((t0.c6)>=(t0.c6)), ((((vt1.c0)OR(t0.c12)))OR(t0.c6)), COALESCE('-215957523', vt1.c0), ((t0.c6) IS FALSE)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))AND((vt0.c0 IN ()))))OR(NULL)))AND((+ (NULL)))))AND(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))AND((vt0.c0 IN ()))))OR(NULL)))AND((+ (NULL)))))AND(vt0.c0)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))AND((vt0.c0 IN ()))))OR(NULL)))AND((+ (NULL)))))AND(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))AND((vt0.c0 IN ()))))OR(NULL)))AND((+ (NULL)))))AND(vt0.c0)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))AND((vt0.c0 IN ()))))OR(NULL)))AND((+ (NULL)))))AND(vt0.c0)) ASC;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON UNLIKELY(DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c6, vt1.c0, vt1.c0)) AND ((0.8897177246026392, vt0.c0, vt1.c0)))) CROSS JOIN vt0 ON (((((vt0.c0) NOT NULL)))!=((CAST(vt1.c0 AS INTEGER)))) WHERE (CASE ((t0.c6)!=(t0.c6))  WHEN ((vt1.c0) NOT NULL) THEN ((((((((t0.c6)AND(t0.c6)))AND(vt1.c0)))OR(t0.c6)))AND(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c6)!=(t0.c6))  WHEN ((vt1.c0) NOT NULL) THEN ((((((((t0.c6)AND(t0.c6)))AND(vt1.c0)))OR(t0.c6)))AND(vt1.c0)) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON UNLIKELY(DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c6, vt1.c0, vt1.c0)) AND ((0.8897177246026392, vt0.c0, vt1.c0)))) CROSS JOIN vt0 ON (((((vt0.c0) NOT NULL)))<>((CAST(vt1.c0 AS INTEGER)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON UNLIKELY(DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c6, vt1.c0, vt1.c0)) AND ((0.8897177246026392, vt0.c0, vt1.c0)))) CROSS JOIN vt0 ON (((((vt0.c0) NOT NULL)))!=((CAST(vt1.c0 AS INTEGER)))) WHERE (CASE ((t0.c6)!=(t0.c6))  WHEN ((vt1.c0) NOT NULL) THEN ((((((((t0.c6)AND(t0.c6)))AND(vt1.c0)))OR(t0.c6)))AND(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c6)!=(t0.c6))  WHEN ((vt1.c0) NOT NULL) THEN ((((((((t0.c6)AND(t0.c6)))AND(vt1.c0)))OR(t0.c6)))AND(vt1.c0)) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON UNLIKELY(DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c6, vt1.c0, vt1.c0)) AND ((0.8897177246026392, vt0.c0, vt1.c0)))) CROSS JOIN vt0 ON (((((vt0.c0) NOT NULL)))<>((CAST(vt1.c0 AS INTEGER)))));
SELECT ALL * FROM t0 WHERE (((((((t0.c12)AND(t0.c12)))AND(t0.c12)))<=(((t0.c6)LIKE(t0.c12))))) ORDER BY (((((t0.c6)) BETWEEN ((t0.c6)) AND ((t0.c6)))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((((t0.c12)AND(t0.c12)))AND(t0.c12)))<=(((t0.c6)LIKE(t0.c12))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c6)) BETWEEN ((t0.c6)) AND ((t0.c6)))) NOT NULL));
SELECT ALL * FROM t0 WHERE (((((((t0.c12)AND(t0.c12)))AND(t0.c12)))<=(((t0.c6)LIKE(t0.c12))))) ORDER BY (((((t0.c6)) BETWEEN ((t0.c6)) AND ((t0.c6)))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((((t0.c12)AND(t0.c12)))AND(t0.c12)))<=(((t0.c6)LIKE(t0.c12))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c6)) BETWEEN ((t0.c6)) AND ((t0.c6)))) NOT NULL));
SELECT ALL * FROM t0 WHERE (((((((t0.c12)AND(t0.c12)))AND(t0.c12)))<=(((t0.c6)LIKE(t0.c12))))) ORDER BY (((((t0.c6)) BETWEEN ((t0.c6)) AND ((t0.c6)))) NOT NULL);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((((t0.c6)>=(t0.c12)))OR(vt0.c0)))OR(LAST_INSERT_ROWID()))) ORDER BY (((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)AND(t0.c6)), ((vt0.c0)&(t0.c6)), (((0.038378784921231035))<=((vt1.c0))))) AND ((json_array_length(0.2326668273623006, vt1.c0), CASE vt0.c0  WHEN vt1.c0 THEN t0.c6 ELSE t0.c12 END, CAST(vt1.c0 AS NUMERIC)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c6)>=(t0.c12)))OR(vt0.c0)))OR(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)AND(t0.c6)), ((vt0.c0)&(t0.c6)), (((0.038378784921231035))<=((vt1.c0))))) AND ((json_array_length(0.2326668273623006, vt1.c0), CASE vt0.c0  WHEN vt1.c0 THEN t0.c6 ELSE t0.c12 END, CAST(vt1.c0 AS NUMERIC)))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((((t0.c6)>=(t0.c12)))OR(vt0.c0)))OR(LAST_INSERT_ROWID()))) ORDER BY (((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)AND(t0.c6)), ((vt0.c0)&(t0.c6)), (((0.038378784921231035))<=((vt1.c0))))) AND ((json_array_length(0.2326668273623006, vt1.c0), CASE vt0.c0  WHEN vt1.c0 THEN t0.c6 ELSE t0.c12 END, CAST(vt1.c0 AS NUMERIC)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c6)>=(t0.c12)))OR(vt0.c0)))OR(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)AND(t0.c6)), ((vt0.c0)&(t0.c6)), (((0.038378784921231035))<=((vt1.c0))))) AND ((json_array_length(0.2326668273623006, vt1.c0), CASE vt0.c0  WHEN vt1.c0 THEN t0.c6 ELSE t0.c12 END, CAST(vt1.c0 AS NUMERIC)))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((((t0.c6)>=(t0.c12)))OR(vt0.c0)))OR(LAST_INSERT_ROWID()))) ORDER BY (((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)AND(t0.c6)), ((vt0.c0)&(t0.c6)), (((0.038378784921231035))<=((vt1.c0))))) AND ((json_array_length(0.2326668273623006, vt1.c0), CASE vt0.c0  WHEN vt1.c0 THEN t0.c6 ELSE t0.c12 END, CAST(vt1.c0 AS NUMERIC)))) DESC;
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN vt1 WHERE ((((((vt0.c0) ISNULL)))!=((vt1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) ISNULL)))!=((vt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN vt1 WHERE ((((((vt0.c0) ISNULL)))!=((vt1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) ISNULL)))!=((vt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN vt1 WHERE ((((((vt0.c0) ISNULL)))!=((vt1.c0 COLLATE NOCASE))));
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((t0.c6) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0)&(vt0.c0))))) ORDER BY ((((((((CAST(vt0.c0 AS TEXT))OR(LAST_INSERT_ROWID())))OR((((t0.c6)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((NULL)/(t0.c6)))))OR(((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c6) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((((((CAST(vt0.c0 AS TEXT))OR(LAST_INSERT_ROWID())))OR((((t0.c6)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((NULL)/(t0.c6)))))OR(((vt1.c0) ISNULL))));
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((t0.c6) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0)&(vt0.c0))))) ORDER BY ((((((((CAST(vt0.c0 AS TEXT))OR(LAST_INSERT_ROWID())))OR((((t0.c6)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((NULL)/(t0.c6)))))OR(((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c6) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((((((CAST(vt0.c0 AS TEXT))OR(LAST_INSERT_ROWID())))OR((((t0.c6)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((NULL)/(t0.c6)))))OR(((vt1.c0) ISNULL))));
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((t0.c6) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0)&(vt0.c0))))) ORDER BY ((((((((CAST(vt0.c0 AS TEXT))OR(LAST_INSERT_ROWID())))OR((((t0.c6)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((NULL)/(t0.c6)))))OR(((vt1.c0) ISNULL)));
SELECT COUNT(*) FROM vt1 WHERE ((~ ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((~ ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((~ ((vt1.c0 IN ()))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((((vt0.c0) IS FALSE))OR(((((t0.c12)AND(t0.c12)))AND(t0.c12)))))OR(0.029381237989664633)))OR(CAST('' AS REAL))))OR(CASE t0.c6  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c6 THEN t0.c12 WHEN t0.c12 THEN t0.c12 ELSE t0.c6 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) IS FALSE))OR(((((t0.c12)AND(t0.c12)))AND(t0.c12)))))OR(0.029381237989664633)))OR(CAST('' AS REAL))))OR(CASE t0.c6  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c6 THEN t0.c12 WHEN t0.c12 THEN t0.c12 ELSE t0.c6 END))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((((vt0.c0) IS FALSE))OR(((((t0.c12)AND(t0.c12)))AND(t0.c12)))))OR(0.029381237989664633)))OR(CAST('' AS REAL))))OR(CASE t0.c6  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c6 THEN t0.c12 WHEN t0.c12 THEN t0.c12 ELSE t0.c6 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) IS FALSE))OR(((((t0.c12)AND(t0.c12)))AND(t0.c12)))))OR(0.029381237989664633)))OR(CAST('' AS REAL))))OR(CASE t0.c6  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c6 THEN t0.c12 WHEN t0.c12 THEN t0.c12 ELSE t0.c6 END))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((((vt0.c0) IS FALSE))OR(((((t0.c12)AND(t0.c12)))AND(t0.c12)))))OR(0.029381237989664633)))OR(CAST('' AS REAL))))OR(CASE t0.c6  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c6 THEN t0.c12 WHEN t0.c12 THEN t0.c12 ELSE t0.c6 END)));
SELECT * FROM t0, vt0 WHERE ((t0.c6 IN (t0.c12)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((t0.c6 IN (t0.c12)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((t0.c6 IN (t0.c12)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((t0.c6 IN (t0.c12)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((t0.c6 IN (t0.c12)) COLLATE BINARY);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) ORDER BY (- (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (- (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) ORDER BY (- (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (- (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) ORDER BY (- (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0) NOTNULL))OR(vt1.c0 COLLATE RTRIM)))OR((NOT (vt1.c0)))), (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ()) DESC  NULLS FIRST, (((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((vt1.c0)<=(vt1.c0)))))AND(LIKE(vt1.c0, vt1.c0))))OR(highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0))))AND((~ (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0) NOTNULL))OR(vt1.c0 COLLATE RTRIM)))OR((NOT (vt1.c0)))), (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ()) DESC  NULLS FIRST, (((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((vt1.c0)<=(vt1.c0)))))AND(LIKE(vt1.c0, vt1.c0))))OR(highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0))))AND((~ (vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0) NOTNULL))OR(vt1.c0 COLLATE RTRIM)))OR((NOT (vt1.c0)))), (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ()) DESC  NULLS FIRST, (((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((vt1.c0)<=(vt1.c0)))))AND(LIKE(vt1.c0, vt1.c0))))OR(highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0))))AND((~ (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0) NOTNULL))OR(vt1.c0 COLLATE RTRIM)))OR((NOT (vt1.c0)))), (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ()) DESC  NULLS FIRST, (((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((vt1.c0)<=(vt1.c0)))))AND(LIKE(vt1.c0, vt1.c0))))OR(highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0))))AND((~ (vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0) NOTNULL))OR(vt1.c0 COLLATE RTRIM)))OR((NOT (vt1.c0)))), (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ()) DESC  NULLS FIRST, (((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((vt1.c0)<=(vt1.c0)))))AND(LIKE(vt1.c0, vt1.c0))))OR(highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0))))AND((~ (vt1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) NOTNULL), ((vt0.c0)<(vt0.c0)), CAST(0.8120972292898339 AS BLOB), ((vt1.c0)<>(vt0.c0))))<((vt0.c0, SQLITE_COMPILEOPTION_USED(vt0.c0), ((vt1.c0)OR(1298889466)), ((vt0.c0)-(vt0.c0)), (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ORDER BY CASE vt1.c0 COLLATE NOCASE  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END THEN (vt1.c0 IN (vt0.c0, vt1.c0)) ELSE ((vt1.c0)||(vt0.c0)) END  NULLS LAST, (((vt0.c0 IN ()))IS NOT((vt1.c0 IN (vt0.c0, vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) NOTNULL), ((vt0.c0)<(vt0.c0)), CAST(0.8120972292898339 AS BLOB), ((vt1.c0)<>(vt0.c0))))<((vt0.c0, SQLITE_COMPILEOPTION_USED(vt0.c0), ((vt1.c0)OR(1298889466)), ((vt0.c0)-(vt0.c0)), (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE vt1.c0 COLLATE NOCASE  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END THEN (vt1.c0 IN (vt0.c0, vt1.c0)) ELSE ((vt1.c0)||(vt0.c0)) END  NULLS LAST, (((vt0.c0 IN ()))IS NOT((vt1.c0 IN (vt0.c0, vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) NOTNULL), ((vt0.c0)<(vt0.c0)), CAST(0.8120972292898339 AS BLOB), ((vt1.c0)<>(vt0.c0))))<((vt0.c0, SQLITE_COMPILEOPTION_USED(vt0.c0), ((vt1.c0)OR(1298889466)), ((vt0.c0)-(vt0.c0)), (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ORDER BY CASE vt1.c0 COLLATE NOCASE  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END THEN (vt1.c0 IN (vt0.c0, vt1.c0)) ELSE ((vt1.c0)||(vt0.c0)) END  NULLS LAST, (((vt0.c0 IN ()))IS NOT((vt1.c0 IN (vt0.c0, vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) NOTNULL), ((vt0.c0)<(vt0.c0)), CAST(0.8120972292898339 AS BLOB), ((vt1.c0)<>(vt0.c0))))<((vt0.c0, SQLITE_COMPILEOPTION_USED(vt0.c0), ((vt1.c0)OR(1298889466)), ((vt0.c0)-(vt0.c0)), (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE vt1.c0 COLLATE NOCASE  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END THEN (vt1.c0 IN (vt0.c0, vt1.c0)) ELSE ((vt1.c0)||(vt0.c0)) END  NULLS LAST, (((vt0.c0 IN ()))IS NOT((vt1.c0 IN (vt0.c0, vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) NOTNULL), ((vt0.c0)<(vt0.c0)), CAST(0.8120972292898339 AS BLOB), ((vt1.c0)<>(vt0.c0))))<((vt0.c0, SQLITE_COMPILEOPTION_USED(vt0.c0), ((vt1.c0)OR(1298889466)), ((vt0.c0)-(vt0.c0)), (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ORDER BY CASE vt1.c0 COLLATE NOCASE  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END THEN (vt1.c0 IN (vt0.c0, vt1.c0)) ELSE ((vt1.c0)||(vt0.c0)) END  NULLS LAST, (((vt0.c0 IN ()))IS NOT((vt1.c0 IN (vt0.c0, vt0.c0))))  NULLS LAST;
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) ORDER BY CAST(SQLITE_COMPILEOPTION_GET(vt1.c0) AS TEXT)  NULLS LAST, CASE ((((x'')AND(vt1.c0)))AND(NULL))  WHEN ((vt1.c0)-(vt1.c0)) THEN ((vt1.c0) ISNULL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY CAST(SQLITE_COMPILEOPTION_GET(vt1.c0) AS TEXT)  NULLS LAST, CASE ((((x'')AND(vt1.c0)))AND(NULL))  WHEN ((vt1.c0)-(vt1.c0)) THEN ((vt1.c0) ISNULL) END ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) ORDER BY CAST(SQLITE_COMPILEOPTION_GET(vt1.c0) AS TEXT)  NULLS LAST, CASE ((((x'')AND(vt1.c0)))AND(NULL))  WHEN ((vt1.c0)-(vt1.c0)) THEN ((vt1.c0) ISNULL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY CAST(SQLITE_COMPILEOPTION_GET(vt1.c0) AS TEXT)  NULLS LAST, CASE ((((x'')AND(vt1.c0)))AND(NULL))  WHEN ((vt1.c0)-(vt1.c0)) THEN ((vt1.c0) ISNULL) END ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) ORDER BY CAST(SQLITE_COMPILEOPTION_GET(vt1.c0) AS TEXT)  NULLS LAST, CASE ((((x'')AND(vt1.c0)))AND(NULL))  WHEN ((vt1.c0)-(vt1.c0)) THEN ((vt1.c0) ISNULL) END ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((((((t0.c6 COLLATE BINARY)AND(CAST(t0.c12 AS INTEGER))))OR(t0.c6 COLLATE BINARY)))OR(((vt1.c0)>(t0.c6)))))OR((t0.c12 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c6 COLLATE BINARY)AND(CAST(t0.c12 AS INTEGER))))OR(t0.c6 COLLATE BINARY)))OR(((vt1.c0)>(t0.c6)))))OR((t0.c12 IN ())))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((((((t0.c6 COLLATE BINARY)AND(CAST(t0.c12 AS INTEGER))))OR(t0.c6 COLLATE BINARY)))OR(((vt1.c0)>(t0.c6)))))OR((t0.c12 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c6 COLLATE BINARY)AND(CAST(t0.c12 AS INTEGER))))OR(t0.c6 COLLATE BINARY)))OR(((vt1.c0)>(t0.c6)))))OR((t0.c12 IN ())))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((((((t0.c6 COLLATE BINARY)AND(CAST(t0.c12 AS INTEGER))))OR(t0.c6 COLLATE BINARY)))OR(((vt1.c0)>(t0.c6)))))OR((t0.c12 IN ()))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c0)<=(t0.c6)) COLLATE NOCASE) ORDER BY (((((t0.c12)) NOT BETWEEN ((t0.c12)) AND ((1368348799))))>>(GLOB(t0.c6, 0.09451406948417529))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<=(t0.c6)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c12)) NOT BETWEEN ((t0.c12)) AND ((1368348799))))>>(GLOB(t0.c6, 0.09451406948417529))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c0)<=(t0.c6)) COLLATE NOCASE) ORDER BY (((((t0.c12)) NOT BETWEEN ((t0.c12)) AND ((1368348799))))>>(GLOB(t0.c6, 0.09451406948417529))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<=(t0.c6)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c12)) NOT BETWEEN ((t0.c12)) AND ((1368348799))))>>(GLOB(t0.c6, 0.09451406948417529))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c0)<=(t0.c6)) COLLATE NOCASE) ORDER BY (((((t0.c12)) NOT BETWEEN ((t0.c12)) AND ((1368348799))))>>(GLOB(t0.c6, 0.09451406948417529))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((vt0.c0)AND(t0.c12)) THEN (+ (t0.c6)) WHEN (((t0.c12)) NOT BETWEEN ((t0.c12)) AND ((NULL))) THEN CASE WHEN t0.c6 THEN t0.c12 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c6 THEN vt0.c0 END WHEN ((t0.c12)LIKE(vt0.c0)) THEN (t0.c12 IN ()) WHEN CAST(vt0.c0 AS REAL) THEN ((((vt0.c0)OR(t0.c12)))AND(367618379)) WHEN CASE WHEN vt0.c0 THEN t0.c6 ELSE t0.c6 END THEN CAST(t0.c6 AS TEXT) ELSE CASE WHEN vt0.c0 THEN t0.c6 ELSE t0.c6 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)AND(t0.c12)) THEN (+ (t0.c6)) WHEN (((t0.c12)) NOT BETWEEN ((t0.c12)) AND ((NULL))) THEN CASE WHEN t0.c6 THEN t0.c12 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c6 THEN vt0.c0 END WHEN ((t0.c12)LIKE(vt0.c0)) THEN (t0.c12 IN ()) WHEN CAST(vt0.c0 AS REAL) THEN ((((vt0.c0)OR(t0.c12)))AND(367618379)) WHEN CASE WHEN vt0.c0 THEN t0.c6 ELSE t0.c6 END THEN CAST(t0.c6 AS TEXT) ELSE CASE WHEN vt0.c0 THEN t0.c6 ELSE t0.c6 END END) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((vt0.c0)AND(t0.c12)) THEN (+ (t0.c6)) WHEN (((t0.c12)) NOT BETWEEN ((t0.c12)) AND ((NULL))) THEN CASE WHEN t0.c6 THEN t0.c12 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c6 THEN vt0.c0 END WHEN ((t0.c12)LIKE(vt0.c0)) THEN (t0.c12 IN ()) WHEN CAST(vt0.c0 AS REAL) THEN ((((vt0.c0)OR(t0.c12)))AND(367618379)) WHEN CASE WHEN vt0.c0 THEN t0.c6 ELSE t0.c6 END THEN CAST(t0.c6 AS TEXT) ELSE CASE WHEN vt0.c0 THEN t0.c6 ELSE t0.c6 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)AND(t0.c12)) THEN (+ (t0.c6)) WHEN (((t0.c12)) NOT BETWEEN ((t0.c12)) AND ((NULL))) THEN CASE WHEN t0.c6 THEN t0.c12 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c6 THEN vt0.c0 END WHEN ((t0.c12)LIKE(vt0.c0)) THEN (t0.c12 IN ()) WHEN CAST(vt0.c0 AS REAL) THEN ((((vt0.c0)OR(t0.c12)))AND(367618379)) WHEN CASE WHEN vt0.c0 THEN t0.c6 ELSE t0.c6 END THEN CAST(t0.c6 AS TEXT) ELSE CASE WHEN vt0.c0 THEN t0.c6 ELSE t0.c6 END END) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((vt0.c0)AND(t0.c12)) THEN (+ (t0.c6)) WHEN (((t0.c12)) NOT BETWEEN ((t0.c12)) AND ((NULL))) THEN CASE WHEN t0.c6 THEN t0.c12 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c6 THEN vt0.c0 END WHEN ((t0.c12)LIKE(vt0.c0)) THEN (t0.c12 IN ()) WHEN CAST(vt0.c0 AS REAL) THEN ((((vt0.c0)OR(t0.c12)))AND(367618379)) WHEN CASE WHEN vt0.c0 THEN t0.c6 ELSE t0.c6 END THEN CAST(t0.c6 AS TEXT) ELSE CASE WHEN vt0.c0 THEN t0.c6 ELSE t0.c6 END END);
SELECT * FROM vt1, vt0, t0 WHERE (((((t0.c6)||(-2.15957523E8))) NOTNULL)) ORDER BY UNLIKELY(t0.c12 COLLATE BINARY)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c6)||(-2.15957523E8))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY UNLIKELY(t0.c12 COLLATE BINARY)  NULLS FIRST);
SELECT * FROM vt1, vt0, t0 WHERE (((((t0.c6)||(-2.15957523E8))) NOTNULL)) ORDER BY UNLIKELY(t0.c12 COLLATE BINARY)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c6)||(-2.15957523E8))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY UNLIKELY(t0.c12 COLLATE BINARY)  NULLS FIRST);
SELECT * FROM vt1, vt0, t0 WHERE (((((t0.c6)||(-2.15957523E8))) NOTNULL)) ORDER BY UNLIKELY(t0.c12 COLLATE BINARY)  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((((t0.c12)IS NOT(vt0.c0)), UNLIKELY(DISTINCT 0.23883776133664647), t0.c6 COLLATE NOCASE, ((((((((((((vt0.c0)OR(t0.c6)))AND(t0.c12)))OR(t0.c12)))OR(vt0.c0)))AND('')))AND(vt1.c0)), ((vt1.c0) NOT NULL)))<>((x'', (vt1.c0 IN (vt0.c0, t0.c6)), ((vt0.c0)*(t0.c6)), ((t0.c6) ISNULL), vt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((((t0.c12)IS NOT(vt0.c0)), UNLIKELY(DISTINCT 0.23883776133664647), t0.c6 COLLATE NOCASE, ((((((((((((vt0.c0)OR(t0.c6)))AND(t0.c12)))OR(t0.c12)))OR(vt0.c0)))AND('')))AND(vt1.c0)), ((vt1.c0) NOT NULL)))<>((x'', (vt1.c0 IN (vt0.c0, t0.c6)), ((vt0.c0)*(t0.c6)), ((t0.c6) ISNULL), vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((((t0.c12)IS NOT(vt0.c0)), UNLIKELY(DISTINCT 0.23883776133664647), t0.c6 COLLATE NOCASE, ((((((((((((vt0.c0)OR(t0.c6)))AND(t0.c12)))OR(t0.c12)))OR(vt0.c0)))AND('')))AND(vt1.c0)), ((vt1.c0) NOT NULL)))<>((x'', (vt1.c0 IN (vt0.c0, t0.c6)), ((vt0.c0)*(t0.c6)), ((t0.c6) ISNULL), vt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((((t0.c12)IS NOT(vt0.c0)), UNLIKELY(DISTINCT 0.23883776133664647), t0.c6 COLLATE NOCASE, ((((((((((((vt0.c0)OR(t0.c6)))AND(t0.c12)))OR(t0.c12)))OR(vt0.c0)))AND('')))AND(vt1.c0)), ((vt1.c0) NOT NULL)))<>((x'', (vt1.c0 IN (vt0.c0, t0.c6)), ((vt0.c0)*(t0.c6)), ((t0.c6) ISNULL), vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((((t0.c12)IS NOT(vt0.c0)), UNLIKELY(DISTINCT 0.23883776133664647), t0.c6 COLLATE NOCASE, ((((((((((((vt0.c0)OR(t0.c6)))AND(t0.c12)))OR(t0.c12)))OR(vt0.c0)))AND('')))AND(vt1.c0)), ((vt1.c0) NOT NULL)))<>((x'', (vt1.c0 IN (vt0.c0, t0.c6)), ((vt0.c0)*(t0.c6)), ((t0.c6) ISNULL), vt1.c0 COLLATE RTRIM))));
SELECT ALL * FROM t0 WHERE (CASE WHEN ((((t0.c12)OR(t0.c6)))AND(t0.c12)) THEN t0.c6 COLLATE NOCASE END) ORDER BY CASE CAST(t0.c6 AS INTEGER)  WHEN t0.c12 THEN ((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)) ELSE LOWER(DISTINCT t0.c12) END, CASE WHEN t0.c6 COLLATE NOCASE THEN ((t0.c6) BETWEEN (t0.c6) AND (0Xffffffffb25eb873)) ELSE '-823704884' END;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t0.c12)OR(t0.c6)))AND(t0.c12)) THEN t0.c6 COLLATE NOCASE END) IS TRUE)  as count FROM t0 ORDER BY CASE CAST(t0.c6 AS INTEGER)  WHEN t0.c12 THEN ((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)) ELSE LOWER(DISTINCT t0.c12) END, CASE WHEN t0.c6 COLLATE NOCASE THEN ((t0.c6) BETWEEN (t0.c6) AND (0xffffffffb25eb873)) ELSE '-823704884' END);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((((t0.c12)OR(t0.c6)))AND(t0.c12)) THEN t0.c6 COLLATE NOCASE END) ORDER BY CASE CAST(t0.c6 AS INTEGER)  WHEN t0.c12 THEN ((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)) ELSE LOWER(DISTINCT t0.c12) END, CASE WHEN t0.c6 COLLATE NOCASE THEN ((t0.c6) BETWEEN (t0.c6) AND (0Xffffffffb25eb873)) ELSE '-823704884' END;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t0.c12)OR(t0.c6)))AND(t0.c12)) THEN t0.c6 COLLATE NOCASE END) IS TRUE)  as count FROM t0 ORDER BY CASE CAST(t0.c6 AS INTEGER)  WHEN t0.c12 THEN ((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)) ELSE LOWER(DISTINCT t0.c12) END, CASE WHEN t0.c6 COLLATE NOCASE THEN ((t0.c6) BETWEEN (t0.c6) AND (0xffffffffb25eb873)) ELSE '-823704884' END);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((((t0.c12)OR(t0.c6)))AND(t0.c12)) THEN t0.c6 COLLATE NOCASE END) ORDER BY CASE CAST(t0.c6 AS INTEGER)  WHEN t0.c12 THEN ((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)) ELSE LOWER(DISTINCT t0.c12) END, CASE WHEN t0.c6 COLLATE NOCASE THEN ((t0.c6) BETWEEN (t0.c6) AND (0Xffffffffb25eb873)) ELSE '-823704884' END;
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)<>(vt1.c0)) THEN (((vt1.c0))<>((vt1.c0))) END) ORDER BY CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)!=(vt1.c0)) THEN (((vt1.c0))!=((vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS INTEGER));
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)<>(vt1.c0)) THEN (((vt1.c0))<>((vt1.c0))) END) ORDER BY CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)!=(vt1.c0)) THEN (((vt1.c0))!=((vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS INTEGER));
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)<>(vt1.c0)) THEN (((vt1.c0))<>((vt1.c0))) END) ORDER BY CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS INTEGER);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN TYPEOF(DISTINCT vt1.c0) THEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, 0.7303632643942813)) AND ((vt1.c0, vt1.c0, vt1.c0))) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY ((((('-213792714')) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ((+ (vt1.c0))) AND (vt1.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TYPEOF(DISTINCT vt1.c0) THEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, 0.7303632643942813)) AND ((vt1.c0, vt1.c0, vt1.c0))) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY ((((('-213792714')) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ((+ (vt1.c0))) AND (vt1.c0 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN TYPEOF(DISTINCT vt1.c0) THEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, 0.7303632643942813)) AND ((vt1.c0, vt1.c0, vt1.c0))) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY ((((('-213792714')) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ((+ (vt1.c0))) AND (vt1.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TYPEOF(DISTINCT vt1.c0) THEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, 0.7303632643942813)) AND ((vt1.c0, vt1.c0, vt1.c0))) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY ((((('-213792714')) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ((+ (vt1.c0))) AND (vt1.c0 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN TYPEOF(DISTINCT vt1.c0) THEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, 0.7303632643942813)) AND ((vt1.c0, vt1.c0, vt1.c0))) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY ((((('-213792714')) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ((+ (vt1.c0))) AND (vt1.c0 COLLATE NOCASE)) DESC;
SELECT * FROM t0 CROSS JOIN vt0 ON ((NULL) IS FALSE) FULL OUTER JOIN vt1 ON (((t0.c6, ((t0.c6)GLOB(vt1.c0)), ((((vt0.c0)AND(vt1.c0)))OR(t0.c12))))>((LIKELIHOOD(NULL, 0.7129340505468644), '''b', (+ (t0.c12))))) WHERE ((CAST(vt1.c0 AS TEXT) IN ())) ORDER BY CAST('0.5818119783710648' AS REAL) COLLATE RTRIM ASC  NULLS LAST, ((TRIM(t0.c12))<(((t0.c6) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((NULL) IS FALSE) FULL OUTER JOIN vt1 ON (((t0.c6, ((t0.c6)GLOB(vt1.c0)), ((((vt0.c0)AND(vt1.c0)))OR(t0.c12))))>((LIKELIHOOD(NULL, 0.7129340505468644), '''b', (+ (t0.c12))))) ORDER BY CAST('0.5818119783710648' AS REAL) COLLATE RTRIM ASC  NULLS LAST, ((TRIM(t0.c12))<(((t0.c6) IS FALSE))) ASC  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN vt0 ON ((NULL) IS FALSE) FULL OUTER JOIN vt1 ON (((t0.c6, ((t0.c6)GLOB(vt1.c0)), ((((vt0.c0)AND(vt1.c0)))OR(t0.c12))))>((LIKELIHOOD(NULL, 0.7129340505468644), '''b', (+ (t0.c12))))) WHERE ((CAST(vt1.c0 AS TEXT) IN ())) ORDER BY CAST('0.5818119783710648' AS REAL) COLLATE RTRIM ASC  NULLS LAST, ((TRIM(t0.c12))<(((t0.c6) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((NULL) IS FALSE) FULL OUTER JOIN vt1 ON (((t0.c6, ((t0.c6)GLOB(vt1.c0)), ((((vt0.c0)AND(vt1.c0)))OR(t0.c12))))>((LIKELIHOOD(NULL, 0.7129340505468644), '''b', (+ (t0.c12))))) ORDER BY CAST('0.5818119783710648' AS REAL) COLLATE RTRIM ASC  NULLS LAST, ((TRIM(t0.c12))<(((t0.c6) IS FALSE))) ASC  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN vt0 ON ((NULL) IS FALSE) FULL OUTER JOIN vt1 ON (((t0.c6, ((t0.c6)GLOB(vt1.c0)), ((((vt0.c0)AND(vt1.c0)))OR(t0.c12))))>((LIKELIHOOD(NULL, 0.7129340505468644), '''b', (+ (t0.c12))))) WHERE ((CAST(vt1.c0 AS TEXT) IN ())) ORDER BY CAST('0.5818119783710648' AS REAL) COLLATE RTRIM ASC  NULLS LAST, ((TRIM(t0.c12))<(((t0.c6) IS FALSE))) ASC  NULLS FIRST;
SELECT * FROM vt1 CROSS JOIN t0 ON NULLIF((((t0.c6)) NOT BETWEEN (('1865994821')) AND ((vt1.c0))), ((vt1.c0) BETWEEN (t0.c6) AND ('ln'))) WHERE (((TRIM(DISTINCT vt1.c0)) BETWEEN ((('') NOT NULL)) AND ((t0.c6 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt1.c0)) BETWEEN ((('') NOT NULL)) AND ((t0.c6 IN ())))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON NULLIF((((t0.c6)) NOT BETWEEN (('1865994821')) AND ((vt1.c0))), ((vt1.c0) BETWEEN (t0.c6) AND ('ln'))));
SELECT * FROM vt1 CROSS JOIN t0 ON NULLIF((((t0.c6)) NOT BETWEEN (('1865994821')) AND ((vt1.c0))), ((vt1.c0) BETWEEN (t0.c6) AND ('ln'))) WHERE (((TRIM(DISTINCT vt1.c0)) BETWEEN ((('') NOT NULL)) AND ((t0.c6 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt1.c0)) BETWEEN ((('') NOT NULL)) AND ((t0.c6 IN ())))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON NULLIF((((t0.c6)) NOT BETWEEN (('1865994821')) AND ((vt1.c0))), ((vt1.c0) BETWEEN (t0.c6) AND ('ln'))));
SELECT * FROM vt1 CROSS JOIN t0 ON NULLIF((((t0.c6)) NOT BETWEEN (('1865994821')) AND ((vt1.c0))), ((vt1.c0) BETWEEN (t0.c6) AND ('ln'))) WHERE (((TRIM(DISTINCT vt1.c0)) BETWEEN ((('') NOT NULL)) AND ((t0.c6 IN ()))));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c12) AND (vt0.c0))) AND (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c12) AND (vt0.c0))) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c12) AND (vt0.c0))) AND (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c12) AND (vt0.c0))) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c12) AND (vt0.c0))) AND (CAST(vt0.c0 AS BLOB))));
SELECT * FROM t0, vt1, vt0 WHERE ((((vt1.c0 IN (NULL, x'2cdd'))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (NULL, x'2cdd'))) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE ((((vt1.c0 IN (NULL, x'2cdd'))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (NULL, x'2cdd'))) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE ((((vt1.c0 IN (NULL, x'2cdd'))) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(NULL AS NUMERIC)) ORDER BY ((x'')>((NOT (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((x'')>((NOT (vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(NULL AS NUMERIC)) ORDER BY ((x'')>((NOT (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((x'')>((NOT (vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(NULL AS NUMERIC)) ORDER BY ((x'')>((NOT (vt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (NOT (CAST(vt1.c0 AS TEXT))) WHERE (CAST(((vt0.c0)>(vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 NOT INDEXED FULL OUTER JOIN vt0 ON (NOT (CAST(vt1.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (NOT (CAST(vt1.c0 AS TEXT))) WHERE (CAST(((vt0.c0)>(vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 NOT INDEXED FULL OUTER JOIN vt0 ON (NOT (CAST(vt1.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (NOT (CAST(vt1.c0 AS TEXT))) WHERE (CAST(((vt0.c0)>(vt1.c0)) AS BLOB));
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c6)AND(t0.c12)))AND(t0.c6)))LIKE(CASE t0.c12  WHEN t0.c12 THEN t0.c6 ELSE t0.c12 END))) ORDER BY t0.c12, (((t0.c12 IN ())) IS TRUE) DESC, 1.165164327E9;
SELECT SUM(count) FROM (SELECT ((((((((t0.c6)AND(t0.c12)))AND(t0.c6)))LIKE(CASE t0.c12  WHEN t0.c12 THEN t0.c6 ELSE t0.c12 END))) IS TRUE)  as count FROM t0 ORDER BY t0.c12, (((t0.c12 IN ())) IS TRUE) DESC, 1.165164327E9);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c6)AND(t0.c12)))AND(t0.c6)))LIKE(CASE t0.c12  WHEN t0.c12 THEN t0.c6 ELSE t0.c12 END))) ORDER BY t0.c12, (((t0.c12 IN ())) IS TRUE) DESC, 1.165164327E9;
SELECT SUM(count) FROM (SELECT ((((((((t0.c6)AND(t0.c12)))AND(t0.c6)))LIKE(CASE t0.c12  WHEN t0.c12 THEN t0.c6 ELSE t0.c12 END))) IS TRUE)  as count FROM t0 ORDER BY t0.c12, (((t0.c12 IN ())) IS TRUE) DESC, 1.165164327E9);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c6)AND(t0.c12)))AND(t0.c6)))LIKE(CASE t0.c12  WHEN t0.c12 THEN t0.c6 ELSE t0.c12 END))) ORDER BY t0.c12, (((t0.c12 IN ())) IS TRUE) DESC, 1.165164327E9;
SELECT * FROM vt1, vt0, t0 WHERE (((vt1.c0)==(t0.c6)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)=(t0.c6)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (((vt1.c0)==(t0.c6)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)=(t0.c6)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (((vt1.c0)==(t0.c6)) COLLATE RTRIM);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (vt1.c0);
SELECT * FROM vt0, t0 WHERE (highlight(vt0.c0 COLLATE NOCASE, ((('0.26071845151415074')) NOT BETWEEN ((vt0.c0)) AND ((t0.c12))), CAST(t0.c6 AS NUMERIC), ((t0.c12) NOTNULL))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((highlight(vt0.c0 COLLATE NOCASE, ((('0.26071845151415074')) NOT BETWEEN ((vt0.c0)) AND ((t0.c12))), CAST(t0.c6 AS NUMERIC), ((t0.c12) NOTNULL))) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (highlight(vt0.c0 COLLATE NOCASE, ((('0.26071845151415074')) NOT BETWEEN ((vt0.c0)) AND ((t0.c12))), CAST(t0.c6 AS NUMERIC), ((t0.c12) NOTNULL))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((highlight(vt0.c0 COLLATE NOCASE, ((('0.26071845151415074')) NOT BETWEEN ((vt0.c0)) AND ((t0.c12))), CAST(t0.c6 AS NUMERIC), ((t0.c12) NOTNULL))) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((UNLIKELY(t0.c12)) BETWEEN ((((t0.c6)) BETWEEN ((t0.c12)) AND ((t0.c6)))) AND ((t0.c12 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(t0.c12)) BETWEEN ((((t0.c6)) BETWEEN ((t0.c12)) AND ((t0.c6)))) AND ((t0.c12 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((UNLIKELY(t0.c12)) BETWEEN ((((t0.c6)) BETWEEN ((t0.c12)) AND ((t0.c6)))) AND ((t0.c12 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(t0.c12)) BETWEEN ((((t0.c6)) BETWEEN ((t0.c12)) AND ((t0.c6)))) AND ((t0.c12 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((UNLIKELY(t0.c12)) BETWEEN ((((t0.c6)) BETWEEN ((t0.c12)) AND ((t0.c6)))) AND ((t0.c12 IN ()))));
SELECT * FROM t0 WHERE (((((NULL)IS(t0.c12))) BETWEEN (CAST(t0.c6 AS INTEGER)) AND (CAST(t0.c12 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)IS(t0.c12))) BETWEEN (CAST(t0.c6 AS INTEGER)) AND (CAST(t0.c12 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((NULL)IS(t0.c12))) BETWEEN (CAST(t0.c6 AS INTEGER)) AND (CAST(t0.c12 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)IS(t0.c12))) BETWEEN (CAST(t0.c6 AS INTEGER)) AND (CAST(t0.c12 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((NULL)IS(t0.c12))) BETWEEN (CAST(t0.c6 AS INTEGER)) AND (CAST(t0.c12 AS TEXT))));
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((((vt0.c0, '/', vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))))) ORDER BY CASE vt0.c0  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c0 END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((((vt0.c0, '/', vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c0 END ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((((vt0.c0, '/', vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))))) ORDER BY CASE vt0.c0  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c0 END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((((vt0.c0, '/', vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c0 END ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((((vt0.c0, '/', vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))))) ORDER BY CASE vt0.c0  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c0 END ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE x''  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)/(vt0.c0)) ELSE ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE x''  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)/(vt0.c0)) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE x''  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)/(vt0.c0)) ELSE ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE x''  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)/(vt0.c0)) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE x''  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)/(vt0.c0)) ELSE ((vt0.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (TYPEOF(vt1.c0) COLLATE NOCASE) ORDER BY ((((((t0.c6)AND(0X4251c008)))OR(t0.c12)))IS((+ (t0.c12))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((t0.c6)AND(0X4251c008)))OR(t0.c12)))IS((+ (t0.c12)))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (TYPEOF(vt1.c0) COLLATE NOCASE) ORDER BY ((((((t0.c6)AND(0X4251c008)))OR(t0.c12)))IS((+ (t0.c12))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((t0.c6)AND(0X4251c008)))OR(t0.c12)))IS((+ (t0.c12)))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (TYPEOF(vt1.c0) COLLATE NOCASE) ORDER BY ((((((t0.c6)AND(0X4251c008)))OR(t0.c12)))IS((+ (t0.c12))));
SELECT ALL * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) ISNULL), ((0x53f87f12) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=(((((vt0.c0, vt0.c0, vt0.c0))==((1069196272, 0.5240313550282187, vt0.c0))), (((vt0.c0, vt0.c0, NULL))<=((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)|(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) ISNULL), ((0x53f87f12) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=(((((vt0.c0, vt0.c0, vt0.c0))==((1069196272, 0.5240313550282187, vt0.c0))), (((vt0.c0, vt0.c0, NULL))<=((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)|(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) ISNULL), ((0x53f87f12) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=(((((vt0.c0, vt0.c0, vt0.c0))==((1069196272, 0.5240313550282187, vt0.c0))), (((vt0.c0, vt0.c0, NULL))<=((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)|(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) ISNULL), ((0x53f87f12) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=(((((vt0.c0, vt0.c0, vt0.c0))==((1069196272, 0.5240313550282187, vt0.c0))), (((vt0.c0, vt0.c0, NULL))<=((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)|(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) ISNULL), ((0x53f87f12) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=(((((vt0.c0, vt0.c0, vt0.c0))==((1069196272, 0.5240313550282187, vt0.c0))), (((vt0.c0, vt0.c0, NULL))<=((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)|(vt0.c0))))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON UPPER((((vt1.c0))<=((vt0.c0)))) RIGHT OUTER JOIN vt0 ON 0.3482039136280526 WHERE (((((t0.c12 IN ()), ((t0.c6)LIKE(t0.c6)), 0.8099127156242507))>((t0.c12 COLLATE BINARY, 0.26071845151415074, (((vt0.c0))<=((vt1.c0))))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND (((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((t0.c12 IN ()), ((t0.c6)LIKE(t0.c6)), 0.8099127156242507))>((t0.c12 COLLATE BINARY, 0.26071845151415074, (((vt0.c0))<=((vt1.c0))))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON UPPER((((vt1.c0))<=((vt0.c0)))) RIGHT OUTER JOIN vt0 ON 0.3482039136280526 ORDER BY (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND (((vt1.c0 IN ())))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON UPPER((((vt1.c0))<=((vt0.c0)))) RIGHT OUTER JOIN vt0 ON 0.3482039136280526 WHERE (((((t0.c12 IN ()), ((t0.c6)LIKE(t0.c6)), 0.8099127156242507))>((t0.c12 COLLATE BINARY, 0.26071845151415074, (((vt0.c0))<=((vt1.c0))))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND (((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((t0.c12 IN ()), ((t0.c6)LIKE(t0.c6)), 0.8099127156242507))>((t0.c12 COLLATE BINARY, 0.26071845151415074, (((vt0.c0))<=((vt1.c0))))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON UPPER((((vt1.c0))<=((vt0.c0)))) RIGHT OUTER JOIN vt0 ON 0.3482039136280526 ORDER BY (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND (((vt1.c0 IN ())))));
SELECT * FROM vt0, t0 WHERE (CASE CASE vt0.c0  WHEN t0.c6 THEN t0.c12 END  WHEN ((t0.c6)>>(vt0.c0)) THEN ((((t0.c6)OR(t0.c6)))OR(NULL)) ELSE ((x'd85e') BETWEEN (t0.c12) AND (vt0.c0)) END) ORDER BY (t0.c6 COLLATE NOCASE IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c0  WHEN t0.c6 THEN t0.c12 END  WHEN ((t0.c6)>>(vt0.c0)) THEN ((((t0.c6)OR(t0.c6)))OR(NULL)) ELSE ((x'd85e') BETWEEN (t0.c12) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (t0.c6 COLLATE NOCASE IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (CASE CASE vt0.c0  WHEN t0.c6 THEN t0.c12 END  WHEN ((t0.c6)>>(vt0.c0)) THEN ((((t0.c6)OR(t0.c6)))OR(NULL)) ELSE ((x'd85e') BETWEEN (t0.c12) AND (vt0.c0)) END) ORDER BY (t0.c6 COLLATE NOCASE IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c0  WHEN t0.c6 THEN t0.c12 END  WHEN ((t0.c6)>>(vt0.c0)) THEN ((((t0.c6)OR(t0.c6)))OR(NULL)) ELSE ((x'd85e') BETWEEN (t0.c12) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (t0.c6 COLLATE NOCASE IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (CASE CASE vt0.c0  WHEN t0.c6 THEN t0.c12 END  WHEN ((t0.c6)>>(vt0.c0)) THEN ((((t0.c6)OR(t0.c6)))OR(NULL)) ELSE ((x'd85e') BETWEEN (t0.c12) AND (vt0.c0)) END) ORDER BY (t0.c6 COLLATE NOCASE IN ()) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((- (((((((((vt1.c0)AND(-2.15957523E8)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((((((vt1.c0)AND(-2.15957523E8)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- (((((((((vt1.c0)AND(-2.15957523E8)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((((((vt1.c0)AND(-2.15957523E8)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- (((((((((vt1.c0)AND(-2.15957523E8)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0))<((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0))<((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0))<((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c12)||(t0.c12)))OR(((((((((x'')OR(t0.c12)))AND(x'')))OR(t0.c6)))AND(t0.c12)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c12)||(t0.c12)))OR(((((((((x'')OR(t0.c12)))AND(x'')))OR(t0.c6)))AND(t0.c12))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c12)||(t0.c12)))OR(((((((((x'')OR(t0.c12)))AND(x'')))OR(t0.c6)))AND(t0.c12)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c12)||(t0.c12)))OR(((((((((x'')OR(t0.c12)))AND(x'')))OR(t0.c6)))AND(t0.c12))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c12)||(t0.c12)))OR(((((((((x'')OR(t0.c12)))AND(x'')))OR(t0.c6)))AND(t0.c12)))));
SELECT ALL * FROM t0, vt0, vt1 WHERE (((CAST(vt1.c0 AS INTEGER))-(((((((((t0.c12)OR(0.9633421806444683)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS INTEGER))-(((((((((t0.c12)OR(0.9633421806444683)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((CAST(vt1.c0 AS INTEGER))-(((((((((t0.c12)OR(0.9633421806444683)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS INTEGER))-(((((((((t0.c12)OR(0.9633421806444683)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((CAST(vt1.c0 AS INTEGER))-(((((((((t0.c12)OR(0.9633421806444683)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))));
SELECT * FROM vt1, vt0 LEFT OUTER JOIN t0 ON (((CASE WHEN 0.4202032479736386 THEN t0.c12 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c12 THEN t0.c12 ELSE t0.c12 END))<((t0.c6))) WHERE ((NOT (CASE WHEN t0.c12 THEN vt1.c0 ELSE vt0.c0 END))) ORDER BY UNLIKELY(vt1.c0 COLLATE BINARY) ASC, ((CAST(vt0.c0 AS REAL)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN t0.c12 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON (((CASE WHEN 0.4202032479736386 THEN t0.c12 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c12 THEN t0.c12 ELSE t0.c12 END))<((t0.c6))) ORDER BY UNLIKELY(vt1.c0 COLLATE BINARY) ASC, ((CAST(vt0.c0 AS REAL)) ISNULL)  NULLS FIRST);
SELECT * FROM vt1, vt0 LEFT OUTER JOIN t0 ON (((CASE WHEN 0.4202032479736386 THEN t0.c12 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c12 THEN t0.c12 ELSE t0.c12 END))<((t0.c6))) WHERE ((NOT (CASE WHEN t0.c12 THEN vt1.c0 ELSE vt0.c0 END))) ORDER BY UNLIKELY(vt1.c0 COLLATE BINARY) ASC, ((CAST(vt0.c0 AS REAL)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN t0.c12 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON (((CASE WHEN 0.4202032479736386 THEN t0.c12 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c12 THEN t0.c12 ELSE t0.c12 END))<((t0.c6))) ORDER BY UNLIKELY(vt1.c0 COLLATE BINARY) ASC, ((CAST(vt0.c0 AS REAL)) ISNULL)  NULLS FIRST);
SELECT * FROM vt1, vt0 LEFT OUTER JOIN t0 ON (((CASE WHEN 0.4202032479736386 THEN t0.c12 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c12 THEN t0.c12 ELSE t0.c12 END))<((t0.c6))) WHERE ((NOT (CASE WHEN t0.c12 THEN vt1.c0 ELSE vt0.c0 END))) ORDER BY UNLIKELY(vt1.c0 COLLATE BINARY) ASC, ((CAST(vt0.c0 AS REAL)) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN HEX(DISTINCT t0.c12) THEN (t0.c12 IN (t0.c12)) ELSE t0.c6 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX(DISTINCT t0.c12) THEN (t0.c12 IN (t0.c12)) ELSE t0.c6 END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN HEX(DISTINCT t0.c12) THEN (t0.c12 IN (t0.c12)) ELSE t0.c6 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX(DISTINCT t0.c12) THEN (t0.c12 IN (t0.c12)) ELSE t0.c6 END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN HEX(DISTINCT t0.c12) THEN (t0.c12 IN (t0.c12)) ELSE t0.c6 END);
SELECT ALL * FROM t0, vt0 WHERE ((((((((((NOT (t0.c6)))AND(((((t0.c12)OR(t0.c12)))OR(t0.c6)))))AND(CAST(x'' AS INTEGER))))AND(CASE t0.c6  WHEN t0.c12 THEN vt0.c0 WHEN t0.c12 THEN vt0.c0 WHEN t0.c6 THEN vt0.c0 ELSE t0.c6 END)))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (t0.c6)))AND(((((t0.c12)OR(t0.c12)))OR(t0.c6)))))AND(CAST(x'' AS INTEGER))))AND(CASE t0.c6  WHEN t0.c12 THEN vt0.c0 WHEN t0.c12 THEN vt0.c0 WHEN t0.c6 THEN vt0.c0 ELSE t0.c6 END)))AND(NULL))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((((((NOT (t0.c6)))AND(((((t0.c12)OR(t0.c12)))OR(t0.c6)))))AND(CAST(x'' AS INTEGER))))AND(CASE t0.c6  WHEN t0.c12 THEN vt0.c0 WHEN t0.c12 THEN vt0.c0 WHEN t0.c6 THEN vt0.c0 ELSE t0.c6 END)))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (t0.c6)))AND(((((t0.c12)OR(t0.c12)))OR(t0.c6)))))AND(CAST(x'' AS INTEGER))))AND(CASE t0.c6  WHEN t0.c12 THEN vt0.c0 WHEN t0.c12 THEN vt0.c0 WHEN t0.c6 THEN vt0.c0 ELSE t0.c6 END)))AND(NULL))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((((((NOT (t0.c6)))AND(((((t0.c12)OR(t0.c12)))OR(t0.c6)))))AND(CAST(x'' AS INTEGER))))AND(CASE t0.c6  WHEN t0.c12 THEN vt0.c0 WHEN t0.c12 THEN vt0.c0 WHEN t0.c6 THEN vt0.c0 ELSE t0.c6 END)))AND(NULL)));
SELECT * FROM vt1 WHERE (x'2cbe') ORDER BY ((CAST(vt1.c0 AS REAL))!=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((x'2cbe') IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS REAL))!=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC);
SELECT * FROM vt1 WHERE (x'2cbe') ORDER BY ((CAST(vt1.c0 AS REAL))!=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((x'2cbe') IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS REAL))!=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC);
SELECT * FROM vt1 WHERE (x'2cbe') ORDER BY ((CAST(vt1.c0 AS REAL))!=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (INSTR(LTRIM(vt1.c0), (((t0.c6, x'389b', vt1.c0))==((t0.c6, t0.c12, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((INSTR(LTRIM(vt1.c0), (((t0.c6, x'389b', vt1.c0))=((t0.c6, t0.c12, vt1.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (INSTR(LTRIM(vt1.c0), (((t0.c6, x'389b', vt1.c0))==((t0.c6, t0.c12, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((INSTR(LTRIM(vt1.c0), (((t0.c6, x'389b', vt1.c0))=((t0.c6, t0.c12, vt1.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (INSTR(LTRIM(vt1.c0), (((t0.c6, x'389b', vt1.c0))==((t0.c6, t0.c12, vt1.c0)))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c12)AND(CASE WHEN vt0.c0 THEN vt1.c0 ELSE t0.c6 END)))OR(CAST(vt1.c0 AS NUMERIC))) INNER JOIN vt1 ON ((vt0.c0 COLLATE BINARY)IS NOT(((((1.368348799E9)OR(vt0.c0)))OR(t0.c12)))) WHERE ('') ORDER BY ((vt1.c0) NOT BETWEEN (((t0.c12) NOT BETWEEN (t0.c6) AND (t0.c6))) AND ((+ (t0.c6))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c12)AND(CASE WHEN vt0.c0 THEN vt1.c0 ELSE t0.c6 END)))OR(CAST(vt1.c0 AS NUMERIC))) INNER JOIN vt1 ON ((vt0.c0 COLLATE BINARY)IS NOT(((((1.368348799E9)OR(vt0.c0)))OR(t0.c12)))) ORDER BY ((vt1.c0) NOT BETWEEN (((t0.c12) NOT BETWEEN (t0.c6) AND (t0.c6))) AND ((+ (t0.c6))))  NULLS FIRST);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c12)AND(CASE WHEN vt0.c0 THEN vt1.c0 ELSE t0.c6 END)))OR(CAST(vt1.c0 AS NUMERIC))) INNER JOIN vt1 ON ((vt0.c0 COLLATE BINARY)IS NOT(((((1.368348799E9)OR(vt0.c0)))OR(t0.c12)))) WHERE ('') ORDER BY ((vt1.c0) NOT BETWEEN (((t0.c12) NOT BETWEEN (t0.c6) AND (t0.c6))) AND ((+ (t0.c6))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c12)AND(CASE WHEN vt0.c0 THEN vt1.c0 ELSE t0.c6 END)))OR(CAST(vt1.c0 AS NUMERIC))) INNER JOIN vt1 ON ((vt0.c0 COLLATE BINARY)IS NOT(((((1.368348799E9)OR(vt0.c0)))OR(t0.c12)))) ORDER BY ((vt1.c0) NOT BETWEEN (((t0.c12) NOT BETWEEN (t0.c6) AND (t0.c6))) AND ((+ (t0.c6))))  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE (((t0.c6)==(((2005626850)<(NULL)))));
SELECT SUM(count) FROM (SELECT ((((t0.c6)==(((2005626850)<(NULL))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (((t0.c6)==(((2005626850)<(NULL)))));
SELECT SUM(count) FROM (SELECT ((((t0.c6)==(((2005626850)<(NULL))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (((t0.c6)==(((2005626850)<(NULL)))));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (LIKELY(((t0.c12) BETWEEN (t0.c6) AND (t0.c12))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((t0.c12) BETWEEN (t0.c6) AND (t0.c12)))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (LIKELY(((t0.c12) BETWEEN (t0.c6) AND (t0.c12))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((t0.c12) BETWEEN (t0.c6) AND (t0.c12)))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (LIKELY(((t0.c12) BETWEEN (t0.c6) AND (t0.c12))));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((- (t0.c6)) IN (vt0.c0 COLLATE BINARY, vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c6)) IN (vt0.c0 COLLATE BINARY, vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((- (t0.c6)) IN (vt0.c0 COLLATE BINARY, vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c6)) IN (vt0.c0 COLLATE BINARY, vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((- (t0.c6)) IN (vt0.c0 COLLATE BINARY, vt1.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, t0 WHERE (0.6192861517914617) ORDER BY CAST((((t0.c12))<>((t0.c12))) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.6192861517914617) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((((t0.c12))!=((t0.c12))) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (0.6192861517914617) ORDER BY CAST((((t0.c12))<>((t0.c12))) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.6192861517914617) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((((t0.c12))!=((t0.c12))) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (0.6192861517914617) ORDER BY CAST((((t0.c12))<>((t0.c12))) AS REAL)  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((627403149 IN ())) ORDER BY ((vt1.c0)|(((((((((0.6332767825450628)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((627403149 IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)|(((((((((0.6332767825450628)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((627403149 IN ())) ORDER BY ((vt1.c0)|(((((((((0.6332767825450628)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((627403149 IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)|(((((((((0.6332767825450628)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((627403149 IN ())) ORDER BY ((vt1.c0)|(((((((((0.6332767825450628)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN TRIM(x'', vt0.c0) THEN (- (vt0.c0)) ELSE ((vt0.c0)IS(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TRIM(x'', vt0.c0) THEN (- (vt0.c0)) ELSE ((vt0.c0)IS(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN TRIM(x'', vt0.c0) THEN (- (vt0.c0)) ELSE ((vt0.c0)IS(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TRIM(x'', vt0.c0) THEN (- (vt0.c0)) ELSE ((vt0.c0)IS(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN TRIM(x'', vt0.c0) THEN (- (vt0.c0)) ELSE ((vt0.c0)IS(vt0.c0)) END);
SELECT ALL * FROM t0, vt1 INDEXED BY i72 CROSS JOIN vt0 ON (((((t0.c6)) NOT BETWEEN ((vt1.c0)) AND ((t0.c6)))) BETWEEN (((NULL)=(vt1.c0))) AND (((t0.c12) NOT NULL))) WHERE (((((vt1.c0) BETWEEN (t0.c12) AND (t0.c12)))IS NOT(CAST(t0.c12 AS INTEGER)))) ORDER BY CASE WHEN t0.c6 THEN t0.c12 WHEN ((NULL)GLOB(vt1.c0)) THEN ((t0.c12)GLOB(t0.c12)) WHEN (((('4''_m''QL*U')AND(vt1.c0)))OR(t0.c6)) THEN CAST(vt1.c0 AS NUMERIC) ELSE ((vt1.c0) ISNULL) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (t0.c12) AND (t0.c12)))IS NOT(CAST(t0.c12 AS INTEGER)))) IS TRUE)  as count FROM t0, vt1 INDEXED BY i72 CROSS JOIN vt0 ON (((((t0.c6)) NOT BETWEEN ((vt1.c0)) AND ((t0.c6)))) BETWEEN (((NULL)==(vt1.c0))) AND (((t0.c12) NOT NULL))) ORDER BY CASE WHEN t0.c6 THEN t0.c12 WHEN ((NULL)GLOB(vt1.c0)) THEN ((t0.c12)GLOB(t0.c12)) WHEN (((('4''_m''QL*U')AND(vt1.c0)))OR(t0.c6)) THEN CAST(vt1.c0 AS NUMERIC) ELSE ((vt1.c0) ISNULL) END);
SELECT ALL * FROM t0, vt1 INDEXED BY i72 CROSS JOIN vt0 ON (((((t0.c6)) NOT BETWEEN ((vt1.c0)) AND ((t0.c6)))) BETWEEN (((NULL)=(vt1.c0))) AND (((t0.c12) NOT NULL))) WHERE (((((vt1.c0) BETWEEN (t0.c12) AND (t0.c12)))IS NOT(CAST(t0.c12 AS INTEGER)))) ORDER BY CASE WHEN t0.c6 THEN t0.c12 WHEN ((NULL)GLOB(vt1.c0)) THEN ((t0.c12)GLOB(t0.c12)) WHEN (((('4''_m''QL*U')AND(vt1.c0)))OR(t0.c6)) THEN CAST(vt1.c0 AS NUMERIC) ELSE ((vt1.c0) ISNULL) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (t0.c12) AND (t0.c12)))IS NOT(CAST(t0.c12 AS INTEGER)))) IS TRUE)  as count FROM t0, vt1 INDEXED BY i72 CROSS JOIN vt0 ON (((((t0.c6)) NOT BETWEEN ((vt1.c0)) AND ((t0.c6)))) BETWEEN (((NULL)==(vt1.c0))) AND (((t0.c12) NOT NULL))) ORDER BY CASE WHEN t0.c6 THEN t0.c12 WHEN ((NULL)GLOB(vt1.c0)) THEN ((t0.c12)GLOB(t0.c12)) WHEN (((('4''_m''QL*U')AND(vt1.c0)))OR(t0.c6)) THEN CAST(vt1.c0 AS NUMERIC) ELSE ((vt1.c0) ISNULL) END);
SELECT * FROM vt1 WHERE (NULL) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC);
SELECT * FROM vt1 WHERE (NULL) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC);
SELECT * FROM vt1 WHERE (NULL) ORDER BY vt1.c0 ASC;
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((vt1.c0)%(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)%(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((vt1.c0)%(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)%(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((vt1.c0)%(vt0.c0))) ISNULL));
SELECT * FROM vt0, vt1 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN 0.4202032479736386 THEN ((vt1.c0)OR(vt0.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS TEXT)  WHEN 0.4202032479736386 THEN ((vt1.c0)OR(vt0.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN 0.4202032479736386 THEN ((vt1.c0)OR(vt0.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS TEXT)  WHEN 0.4202032479736386 THEN ((vt1.c0)OR(vt0.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN 0.4202032479736386 THEN ((vt1.c0)OR(vt0.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE ((- (((vt0.c0)LIKE(t0.c6)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)LIKE(t0.c6))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((- (((vt0.c0)LIKE(t0.c6)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)LIKE(t0.c6))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((- (((vt0.c0)LIKE(t0.c6)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((0.6665258814328744)AND(((t0.c6)/(t0.c12))))) ORDER BY (((t0.c12, t0.c12, vt0.c0)) NOT BETWEEN ((((t0.c6) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((t0.c6)*(t0.c12)), LIKELY(t0.c6))) AND ((((t0.c6) IS TRUE), ((((t0.c6)AND(vt0.c0)))OR(vt0.c0)), CAST(t0.c6 AS BLOB)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.6665258814328744)AND(((t0.c6)/(t0.c12))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c12, t0.c12, vt0.c0)) NOT BETWEEN ((((t0.c6) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((t0.c6)*(t0.c12)), LIKELY(t0.c6))) AND ((((t0.c6) IS TRUE), ((((t0.c6)AND(vt0.c0)))OR(vt0.c0)), CAST(t0.c6 AS BLOB)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((0.6665258814328744)AND(((t0.c6)/(t0.c12))))) ORDER BY (((t0.c12, t0.c12, vt0.c0)) NOT BETWEEN ((((t0.c6) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((t0.c6)*(t0.c12)), LIKELY(t0.c6))) AND ((((t0.c6) IS TRUE), ((((t0.c6)AND(vt0.c0)))OR(vt0.c0)), CAST(t0.c6 AS BLOB)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.6665258814328744)AND(((t0.c6)/(t0.c12))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c12, t0.c12, vt0.c0)) NOT BETWEEN ((((t0.c6) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((t0.c6)*(t0.c12)), LIKELY(t0.c6))) AND ((((t0.c6) IS TRUE), ((((t0.c6)AND(vt0.c0)))OR(vt0.c0)), CAST(t0.c6 AS BLOB)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((0.6665258814328744)AND(((t0.c6)/(t0.c12))))) ORDER BY (((t0.c12, t0.c12, vt0.c0)) NOT BETWEEN ((((t0.c6) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((t0.c6)*(t0.c12)), LIKELY(t0.c6))) AND ((((t0.c6) IS TRUE), ((((t0.c6)AND(vt0.c0)))OR(vt0.c0)), CAST(t0.c6 AS BLOB)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((t0.c12)|(t0.c12)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c12)|(t0.c12)) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((t0.c12)|(t0.c12)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c12)|(t0.c12)) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((t0.c12)|(t0.c12)) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)|(vt1.c0)) AS REAL)) ORDER BY vt1.c0 ASC, ((((vt1.c0)AND(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '352432410' THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)|(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC, ((((vt1.c0)AND(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '352432410' THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)|(vt1.c0)) AS REAL)) ORDER BY vt1.c0 ASC, ((((vt1.c0)AND(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '352432410' THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)|(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC, ((((vt1.c0)AND(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '352432410' THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)|(vt1.c0)) AS REAL)) ORDER BY vt1.c0 ASC, ((((vt1.c0)AND(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '352432410' THEN vt1.c0 END));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((('')) BETWEEN ((((t0.c6)<=(t0.c12)))) AND ((t0.c6))) WHERE (((((t0.c6) BETWEEN (t0.c6) AND (vt0.c0))) NOT BETWEEN (((t0.c6) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((t0.c12) NOT BETWEEN (t0.c12) AND (t0.c12)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c6) BETWEEN (t0.c6) AND (vt0.c0))) NOT BETWEEN (((t0.c6) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((t0.c12) NOT BETWEEN (t0.c12) AND (t0.c12))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((('')) BETWEEN ((((t0.c6)<=(t0.c12)))) AND ((t0.c6))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((('')) BETWEEN ((((t0.c6)<=(t0.c12)))) AND ((t0.c6))) WHERE (((((t0.c6) BETWEEN (t0.c6) AND (vt0.c0))) NOT BETWEEN (((t0.c6) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((t0.c12) NOT BETWEEN (t0.c12) AND (t0.c12)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c6) BETWEEN (t0.c6) AND (vt0.c0))) NOT BETWEEN (((t0.c6) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((t0.c12) NOT BETWEEN (t0.c12) AND (t0.c12))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((('')) BETWEEN ((((t0.c6)<=(t0.c12)))) AND ((t0.c6))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((('')) BETWEEN ((((t0.c6)<=(t0.c12)))) AND ((t0.c6))) WHERE (((((t0.c6) BETWEEN (t0.c6) AND (vt0.c0))) NOT BETWEEN (((t0.c6) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((t0.c12) NOT BETWEEN (t0.c12) AND (t0.c12)))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((t0.c12))==((((vt1.c0) ISNULL))))) ORDER BY ((((t0.c12)IS NOT(t0.c6)))*(COALESCE(t0.c6, vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c12))=((((vt1.c0) ISNULL))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((t0.c12)IS NOT(t0.c6)))*(COALESCE(t0.c6, vt0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((t0.c12))==((((vt1.c0) ISNULL))))) ORDER BY ((((t0.c12)IS NOT(t0.c6)))*(COALESCE(t0.c6, vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c12))=((((vt1.c0) ISNULL))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((t0.c12)IS NOT(t0.c6)))*(COALESCE(t0.c6, vt0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((t0.c12))==((((vt1.c0) ISNULL))))) ORDER BY ((((t0.c12)IS NOT(t0.c6)))*(COALESCE(t0.c6, vt0.c0))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((((((t0.c12, t0.c12, vt0.c0)) BETWEEN ((t0.c6, NULL, t0.c12)) AND ((t0.c12, t0.c6, t0.c12))))OR(vt0.c0 COLLATE NOCASE)))OR(((t0.c6)LIKE(NULL))))) ORDER BY (((((((NULL)) BETWEEN ((t0.c6)) AND ((t0.c6))))OR(((t0.c12) NOT NULL))))OR(((t0.c6)*('-1455358382'))))  NULLS FIRST, ((CAST(t0.c12 AS INTEGER))<(((t0.c6) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c12, t0.c12, vt0.c0)) BETWEEN ((t0.c6, NULL, t0.c12)) AND ((t0.c12, t0.c6, t0.c12))))OR(vt0.c0 COLLATE NOCASE)))OR(((t0.c6)LIKE(NULL))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (((((((NULL)) BETWEEN ((t0.c6)) AND ((t0.c6))))OR(((t0.c12) NOT NULL))))OR(((t0.c6)*('-1455358382'))))  NULLS FIRST, ((CAST(t0.c12 AS INTEGER))<(((t0.c6) NOTNULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((((((t0.c12, t0.c12, vt0.c0)) BETWEEN ((t0.c6, NULL, t0.c12)) AND ((t0.c12, t0.c6, t0.c12))))OR(vt0.c0 COLLATE NOCASE)))OR(((t0.c6)LIKE(NULL))))) ORDER BY (((((((NULL)) BETWEEN ((t0.c6)) AND ((t0.c6))))OR(((t0.c12) NOT NULL))))OR(((t0.c6)*('-1455358382'))))  NULLS FIRST, ((CAST(t0.c12 AS INTEGER))<(((t0.c6) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c12, t0.c12, vt0.c0)) BETWEEN ((t0.c6, NULL, t0.c12)) AND ((t0.c12, t0.c6, t0.c12))))OR(vt0.c0 COLLATE NOCASE)))OR(((t0.c6)LIKE(NULL))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (((((((NULL)) BETWEEN ((t0.c6)) AND ((t0.c6))))OR(((t0.c12) NOT NULL))))OR(((t0.c6)*('-1455358382'))))  NULLS FIRST, ((CAST(t0.c12 AS INTEGER))<(((t0.c6) NOTNULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((((((t0.c12, t0.c12, vt0.c0)) BETWEEN ((t0.c6, NULL, t0.c12)) AND ((t0.c12, t0.c6, t0.c12))))OR(vt0.c0 COLLATE NOCASE)))OR(((t0.c6)LIKE(NULL))))) ORDER BY (((((((NULL)) BETWEEN ((t0.c6)) AND ((t0.c6))))OR(((t0.c12) NOT NULL))))OR(((t0.c6)*('-1455358382'))))  NULLS FIRST, ((CAST(t0.c12 AS INTEGER))<(((t0.c6) NOTNULL))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(CASE t0.c6  WHEN t0.c6 THEN vt0.c0 END AS BLOB)) ORDER BY (((0.07458543740161039) BETWEEN (0.4177626030124728) AND (t0.c6)) IN (t0.c6)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c6  WHEN t0.c6 THEN vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((0.07458543740161039) BETWEEN (0.4177626030124728) AND (t0.c6)) IN (t0.c6)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(CASE t0.c6  WHEN t0.c6 THEN vt0.c0 END AS BLOB)) ORDER BY (((0.07458543740161039) BETWEEN (0.4177626030124728) AND (t0.c6)) IN (t0.c6)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c6  WHEN t0.c6 THEN vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((0.07458543740161039) BETWEEN (0.4177626030124728) AND (t0.c6)) IN (t0.c6)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(CASE t0.c6  WHEN t0.c6 THEN vt0.c0 END AS BLOB)) ORDER BY (((0.07458543740161039) BETWEEN (0.4177626030124728) AND (t0.c6)) IN (t0.c6)) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((- ((((vt0.c0))<((vt0.c0)))))) ORDER BY CASE x''  WHEN ((vt0.c0)<(vt0.c0)) THEN json(vt0.c0) ELSE CAST(vt0.c0 AS INTEGER) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE x''  WHEN ((vt0.c0)<(vt0.c0)) THEN json(vt0.c0) ELSE CAST(vt0.c0 AS INTEGER) END ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((- ((((vt0.c0))<((vt0.c0)))))) ORDER BY CASE x''  WHEN ((vt0.c0)<(vt0.c0)) THEN json(vt0.c0) ELSE CAST(vt0.c0 AS INTEGER) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE x''  WHEN ((vt0.c0)<(vt0.c0)) THEN json(vt0.c0) ELSE CAST(vt0.c0 AS INTEGER) END ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((- ((((vt0.c0))<((vt0.c0)))))) ORDER BY CASE x''  WHEN ((vt0.c0)<(vt0.c0)) THEN json(vt0.c0) ELSE CAST(vt0.c0 AS INTEGER) END ASC  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (((+ (t0.c12)) IN (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((+ (t0.c12)) IN (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((+ (t0.c12)) IN (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((+ (t0.c12)) IN (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((+ (t0.c12)) IN (CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE (x'');
SELECT COUNT(*) FROM t0, vt1, vt0 INDEXED BY i72 WHERE (TRIM(((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((TRIM(((vt0.c0) NOT NULL))) IS TRUE)  as count FROM t0, vt1 NOT INDEXED, vt0 INDEXED BY i72);
SELECT COUNT(*) FROM t0, vt1, vt0 INDEXED BY i72 WHERE (TRIM(((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((TRIM(((vt0.c0) NOT NULL))) IS TRUE)  as count FROM t0, vt1 NOT INDEXED, vt0 INDEXED BY i72);
SELECT ALL * FROM vt1, t0, vt0 INDEXED BY i72 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY (NOT ((('0.865372980054749') BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, (+ (vt0.c0)) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt1, t0, vt0 INDEXED BY i72 ORDER BY (NOT ((('0.865372980054749') BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, (+ (vt0.c0)) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t0, vt0 INDEXED BY i72 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY (NOT ((('0.865372980054749') BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, (+ (vt0.c0)) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt1, t0, vt0 INDEXED BY i72 ORDER BY (NOT ((('0.865372980054749') BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, (+ (vt0.c0)) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (x'859f');
SELECT SUM(count) FROM (SELECT ALL ((x'859f') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'859f');
SELECT SUM(count) FROM (SELECT ALL ((x'859f') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'859f');
SELECT * FROM vt1, vt0, t0 WHERE ((vt1.c0 IN ((+ (t0.c12)))));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ((+ (t0.c12))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE ((vt1.c0 IN ((+ (t0.c12)))));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ((+ (t0.c12))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE ((vt1.c0 IN ((+ (t0.c12)))));
SELECT COUNT(*) FROM t0, vt1 WHERE (t0.c12);
SELECT SUM(count) FROM (SELECT ALL ((t0.c12) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (t0.c12);
SELECT SUM(count) FROM (SELECT ALL ((t0.c12) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (t0.c12);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt0.c0 IN ()))GLOB(t0.c12))) ORDER BY (((((t0.c6)<(t0.c6))))==(((((t0.c12))<((x'')))))), (NOT (((((t0.c6)AND(t0.c12)))AND(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))GLOB(t0.c12))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((((t0.c6)<(t0.c6))))==(((((t0.c12))<((x'')))))), (NOT (((((t0.c6)AND(t0.c12)))AND(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt0.c0 IN ()))GLOB(t0.c12))) ORDER BY (((((t0.c6)<(t0.c6))))==(((((t0.c12))<((x'')))))), (NOT (((((t0.c6)AND(t0.c12)))AND(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))GLOB(t0.c12))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((((t0.c6)<(t0.c6))))==(((((t0.c12))<((x'')))))), (NOT (((((t0.c6)AND(t0.c12)))AND(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt0.c0 IN ()))GLOB(t0.c12))) ORDER BY (((((t0.c6)<(t0.c6))))==(((((t0.c12))<((x'')))))), (NOT (((((t0.c6)AND(t0.c12)))AND(vt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE ((vt1.c0)%(vt1.c0))  WHEN vt0.c0 THEN CASE WHEN vt1.c0 THEN vt0.c0 END ELSE ((x'5ab5')AND(vt0.c0)) END) ORDER BY (((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) BETWEEN (((vt0.c0) NOT NULL)) AND ((+ (NULL)))), (vt1.c0 COLLATE NOCASE IN (((((0.34457399225479435)OR(0.3130686665865373)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)%(vt1.c0))  WHEN vt0.c0 THEN CASE WHEN vt1.c0 THEN vt0.c0 END ELSE ((x'5ab5')AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1 ORDER BY (((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) BETWEEN (((vt0.c0) NOT NULL)) AND ((+ (NULL)))), (vt1.c0 COLLATE NOCASE IN (((((0.34457399225479435)OR(0.3130686665865373)))AND(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE ((vt1.c0)%(vt1.c0))  WHEN vt0.c0 THEN CASE WHEN vt1.c0 THEN vt0.c0 END ELSE ((x'5ab5')AND(vt0.c0)) END) ORDER BY (((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) BETWEEN (((vt0.c0) NOT NULL)) AND ((+ (NULL)))), (vt1.c0 COLLATE NOCASE IN (((((0.34457399225479435)OR(0.3130686665865373)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)%(vt1.c0))  WHEN vt0.c0 THEN CASE WHEN vt1.c0 THEN vt0.c0 END ELSE ((x'5ab5')AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1 ORDER BY (((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) BETWEEN (((vt0.c0) NOT NULL)) AND ((+ (NULL)))), (vt1.c0 COLLATE NOCASE IN (((((0.34457399225479435)OR(0.3130686665865373)))AND(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE ((vt1.c0)%(vt1.c0))  WHEN vt0.c0 THEN CASE WHEN vt1.c0 THEN vt0.c0 END ELSE ((x'5ab5')AND(vt0.c0)) END) ORDER BY (((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) BETWEEN (((vt0.c0) NOT NULL)) AND ((+ (NULL)))), (vt1.c0 COLLATE NOCASE IN (((((0.34457399225479435)OR(0.3130686665865373)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM vt1, t0, vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((+ (vt0.c0))) AND ('QS\nst')));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN ((+ (vt0.c0))) AND ('QS\nst'))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((+ (vt0.c0))) AND ('QS\nst')));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN ((+ (vt0.c0))) AND ('QS\nst'))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((+ (vt0.c0))) AND ('QS\nst')));
SELECT ALL * FROM t0, vt0 INNER JOIN vt1 ON t0.c12 WHERE ((((vt1.c0)>>(t0.c6)) IN (((((t0.c12)AND(t0.c6)))AND(t0.c12)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)>>(t0.c6)) IN (((((t0.c12)AND(t0.c6)))AND(t0.c12))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON t0.c12);
SELECT ALL * FROM t0, vt0 INNER JOIN vt1 ON t0.c12 WHERE ((((vt1.c0)>>(t0.c6)) IN (((((t0.c12)AND(t0.c6)))AND(t0.c12)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)>>(t0.c6)) IN (((((t0.c12)AND(t0.c6)))AND(t0.c12))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON t0.c12);
SELECT ALL * FROM t0, vt0 INNER JOIN vt1 ON t0.c12 WHERE ((((vt1.c0)>>(t0.c6)) IN (((((t0.c12)AND(t0.c6)))AND(t0.c12)))));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL)) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))IS(CASE WHEN vt1.c0 THEN vt1.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))IS(CASE WHEN vt1.c0 THEN vt1.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL)) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))IS(CASE WHEN vt1.c0 THEN vt1.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))IS(CASE WHEN vt1.c0 THEN vt1.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL)) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))IS(CASE WHEN vt1.c0 THEN vt1.c0 END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON 0xffffffffffffffff WHERE (((((t0.c12)AND(t0.c6)))OR(t0.c6)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c12)AND(t0.c6)))OR(t0.c6)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON 0Xffffffffffffffff);
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON 0xffffffffffffffff WHERE (((((t0.c12)AND(t0.c6)))OR(t0.c6)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c12)AND(t0.c6)))OR(t0.c6)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON 0Xffffffffffffffff);
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON 0xffffffffffffffff WHERE (((((t0.c12)AND(t0.c6)))OR(t0.c6)) COLLATE NOCASE);
SELECT ALL * FROM vt1 WHERE (SQLITE_COMPILEOPTION_USED(vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(vt1.c0)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (SQLITE_COMPILEOPTION_USED(vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(vt1.c0)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (SQLITE_COMPILEOPTION_USED(vt1.c0));
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((QUOTE(t0.c6)) BETWEEN (HEX(t0.c6)) AND (CAST(vt1.c0 AS NUMERIC)))) ORDER BY 0.45514052005427086 COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((QUOTE(t0.c6)) BETWEEN (HEX(t0.c6)) AND (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY 0.45514052005427086 COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((QUOTE(t0.c6)) BETWEEN (HEX(t0.c6)) AND (CAST(vt1.c0 AS NUMERIC)))) ORDER BY 0.45514052005427086 COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((QUOTE(t0.c6)) BETWEEN (HEX(t0.c6)) AND (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY 0.45514052005427086 COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((QUOTE(t0.c6)) BETWEEN (HEX(t0.c6)) AND (CAST(vt1.c0 AS NUMERIC)))) ORDER BY 0.45514052005427086 COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE ('Mn\Bv뿭') ORDER BY CASE WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE NULL COLLATE NOCASE END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('Mn\Bv뿭') IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE NULL COLLATE NOCASE END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ('Mn\Bv뿭') ORDER BY CASE WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE NULL COLLATE NOCASE END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('Mn\Bv뿭') IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE NULL COLLATE NOCASE END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ('Mn\Bv뿭') ORDER BY CASE WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE NULL COLLATE NOCASE END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((t0.c6 COLLATE RTRIM)OR((NOT (t0.c6))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c6 COLLATE RTRIM)OR((NOT (t0.c6))))) IS TRUE)  as count FROM t0, vt1 ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((t0.c6 COLLATE RTRIM)OR((NOT (t0.c6))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c6 COLLATE RTRIM)OR((NOT (t0.c6))))) IS TRUE)  as count FROM t0, vt1 ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((t0.c6 COLLATE RTRIM)OR((NOT (t0.c6))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE ('') ORDER BY ((((((vt0.c0) IS TRUE))AND(((vt0.c0)!=(vt0.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0) IS TRUE))AND(((vt0.c0)<>(vt0.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) DESC);
SELECT * FROM vt0, vt1 WHERE ('') ORDER BY ((((((vt0.c0) IS TRUE))AND(((vt0.c0)!=(vt0.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0) IS TRUE))AND(((vt0.c0)<>(vt0.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) DESC);
SELECT * FROM vt0, vt1 WHERE ('') ORDER BY ((((((vt0.c0) IS TRUE))AND(((vt0.c0)!=(vt0.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) DESC;
SELECT * FROM t0, vt0 WHERE (((-215957523)*(('' IN ())))) ORDER BY (((t0.c12)) BETWEEN ((CASE WHEN t0.c6 THEN t0.c12 END)) AND ((vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-215957523)*(('' IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c12)) BETWEEN ((CASE WHEN t0.c6 THEN t0.c12 END)) AND ((vt0.c0)))  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((-215957523)*(('' IN ())))) ORDER BY (((t0.c12)) BETWEEN ((CASE WHEN t0.c6 THEN t0.c12 END)) AND ((vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-215957523)*(('' IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c12)) BETWEEN ((CASE WHEN t0.c6 THEN t0.c12 END)) AND ((vt0.c0)))  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((-215957523)*(('' IN ())))) ORDER BY (((t0.c12)) BETWEEN ((CASE WHEN t0.c6 THEN t0.c12 END)) AND ((vt0.c0)))  NULLS FIRST;
SELECT * FROM t0, vt0 RIGHT OUTER JOIN vt1 ON STRFTIME((((x'')) BETWEEN ((t0.c12)) AND ((t0.c6))), (vt0.c0 IN ()), vt1.c0, ((t0.c12)%(vt1.c0)), (- (vt1.c0))) WHERE (json_patch(CAST(t0.c12 AS INTEGER), (- (t0.c12))));
SELECT SUM(count) FROM (SELECT ((json_patch(CAST(t0.c12 AS INTEGER), (- (t0.c12)))) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN vt1 ON STRFTIME((((x'')) BETWEEN ((t0.c12)) AND ((t0.c6))), (vt0.c0 IN ()), vt1.c0, ((t0.c12)%(vt1.c0)), (- (vt1.c0))));
SELECT * FROM t0, vt0 RIGHT OUTER JOIN vt1 ON STRFTIME((((x'')) BETWEEN ((t0.c12)) AND ((t0.c6))), (vt0.c0 IN ()), vt1.c0, ((t0.c12)%(vt1.c0)), (- (vt1.c0))) WHERE (json_patch(CAST(t0.c12 AS INTEGER), (- (t0.c12))));
SELECT SUM(count) FROM (SELECT ((json_patch(CAST(t0.c12 AS INTEGER), (- (t0.c12)))) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN vt1 ON STRFTIME((((x'')) BETWEEN ((t0.c12)) AND ((t0.c6))), (vt0.c0 IN ()), vt1.c0, ((t0.c12)%(vt1.c0)), (- (vt1.c0))));
SELECT * FROM t0, vt0 RIGHT OUTER JOIN vt1 ON STRFTIME((((x'')) BETWEEN ((t0.c12)) AND ((t0.c6))), (vt0.c0 IN ()), vt1.c0, ((t0.c12)%(vt1.c0)), (- (vt1.c0))) WHERE (json_patch(CAST(t0.c12 AS INTEGER), (- (t0.c12))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)AND(vt0.c0)))OR(t0.c12))) IS FALSE) INNER JOIN t0 ON ((CAST(vt1.c0 AS TEXT)) ISNULL) WHERE (x'2017') ORDER BY ((t0.c12)LIKE(vt0.c0)) COLLATE RTRIM  NULLS LAST, vt0.c0, (vt1.c0 IN ()) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'2017') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)AND(vt0.c0)))OR(t0.c12))) IS FALSE) INNER JOIN t0 ON ((CAST(vt1.c0 AS TEXT)) ISNULL) ORDER BY ((t0.c12)LIKE(vt0.c0)) COLLATE RTRIM  NULLS LAST, vt0.c0, (vt1.c0 IN ()) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)AND(vt0.c0)))OR(t0.c12))) IS FALSE) INNER JOIN t0 ON ((CAST(vt1.c0 AS TEXT)) ISNULL) WHERE (x'2017') ORDER BY ((t0.c12)LIKE(vt0.c0)) COLLATE RTRIM  NULLS LAST, vt0.c0, (vt1.c0 IN ()) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'2017') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)AND(vt0.c0)))OR(t0.c12))) IS FALSE) INNER JOIN t0 ON ((CAST(vt1.c0 AS TEXT)) ISNULL) ORDER BY ((t0.c12)LIKE(vt0.c0)) COLLATE RTRIM  NULLS LAST, vt0.c0, (vt1.c0 IN ()) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c6) BETWEEN (t0.c12) AND (t0.c12)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c6) BETWEEN (t0.c12) AND (t0.c12))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c6) BETWEEN (t0.c12) AND (t0.c12)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c6) BETWEEN (t0.c12) AND (t0.c12))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c6) BETWEEN (t0.c12) AND (t0.c12)))));
SELECT * FROM vt0 CROSS JOIN vt1 ON 0.740942534427096 WHERE ((- (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON 0.740942534427096);
SELECT * FROM vt0 CROSS JOIN vt1 ON 0.740942534427096 WHERE ((- (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON 0.740942534427096);
SELECT * FROM vt0 CROSS JOIN vt1 ON 0.740942534427096 WHERE ((- (((vt0.c0) NOTNULL))));
SELECT ALL * FROM vt1, t0 WHERE (((CAST(t0.c12 AS BLOB)) NOT BETWEEN ((('') NOTNULL)) AND (CAST(x'' AS INTEGER)))) ORDER BY (((t0.c12)) BETWEEN ((t0.c12)) AND ((vt1.c0))) COLLATE BINARY ASC, (((vt1.c0)|(t0.c6)) IN (((((t0.c6)OR(t0.c12)))AND(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c12 AS BLOB)) NOT BETWEEN ((('') NOTNULL)) AND (CAST(x'' AS INTEGER)))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((t0.c12)) BETWEEN ((t0.c12)) AND ((vt1.c0))) COLLATE BINARY ASC, (((vt1.c0)|(t0.c6)) IN (((((t0.c6)OR(t0.c12)))AND(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE (((CAST(t0.c12 AS BLOB)) NOT BETWEEN ((('') NOTNULL)) AND (CAST(x'' AS INTEGER)))) ORDER BY (((t0.c12)) BETWEEN ((t0.c12)) AND ((vt1.c0))) COLLATE BINARY ASC, (((vt1.c0)|(t0.c6)) IN (((((t0.c6)OR(t0.c12)))AND(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c12 AS BLOB)) NOT BETWEEN ((('') NOTNULL)) AND (CAST(x'' AS INTEGER)))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((t0.c12)) BETWEEN ((t0.c12)) AND ((vt1.c0))) COLLATE BINARY ASC, (((vt1.c0)|(t0.c6)) IN (((((t0.c6)OR(t0.c12)))AND(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE (((CAST(t0.c12 AS BLOB)) NOT BETWEEN ((('') NOTNULL)) AND (CAST(x'' AS INTEGER)))) ORDER BY (((t0.c12)) BETWEEN ((t0.c12)) AND ((vt1.c0))) COLLATE BINARY ASC, (((vt1.c0)|(t0.c6)) IN (((((t0.c6)OR(t0.c12)))AND(vt1.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((((t0.c12)>>(t0.c12)))>(((vt0.c0) BETWEEN (vt1.c0) AND (t0.c12)))) FULL OUTER JOIN vt0 ON json_array(((((((((vt0.c0)AND(t0.c6)))AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)), ((('w'))<((t0.c12))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt1.c0) NOT NULL)) WHERE (CAST(TRIM(DISTINCT t0.c6, NULL) AS BLOB)) ORDER BY vt1.c0, (('-597936319')&((((t0.c6, t0.c6, 0.6614056592074425))<=((t0.c12, vt0.c0, vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(DISTINCT t0.c6, NULL) AS BLOB)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((t0.c12)>>(t0.c12)))>(((vt0.c0) BETWEEN (vt1.c0) AND (t0.c12)))) FULL OUTER JOIN vt0 ON json_array(((((((((vt0.c0)AND(t0.c6)))AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)), ((('w'))<((t0.c12))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt1.c0) NOT NULL)) ORDER BY vt1.c0, (('-597936319')&((((t0.c6, t0.c6, 0.6614056592074425))<=((t0.c12, vt0.c0, vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((((t0.c12)>>(t0.c12)))>(((vt0.c0) BETWEEN (vt1.c0) AND (t0.c12)))) FULL OUTER JOIN vt0 ON json_array(((((((((vt0.c0)AND(t0.c6)))AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)), ((('w'))<((t0.c12))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt1.c0) NOT NULL)) WHERE (CAST(TRIM(DISTINCT t0.c6, NULL) AS BLOB)) ORDER BY vt1.c0, (('-597936319')&((((t0.c6, t0.c6, 0.6614056592074425))<=((t0.c12, vt0.c0, vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(DISTINCT t0.c6, NULL) AS BLOB)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((t0.c12)>>(t0.c12)))>(((vt0.c0) BETWEEN (vt1.c0) AND (t0.c12)))) FULL OUTER JOIN vt0 ON json_array(((((((((vt0.c0)AND(t0.c6)))AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)), ((('w'))<((t0.c12))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt1.c0) NOT NULL)) ORDER BY vt1.c0, (('-597936319')&((((t0.c6, t0.c6, 0.6614056592074425))<=((t0.c12, vt0.c0, vt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON '-1028225129' WHERE (((((((((vt1.c0)AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(((x'')||(x'')))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(CASE WHEN '-932577398' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(((x'')||(x'')))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(CASE WHEN '-932577398' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON '-1028225129');
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON '-1028225129' WHERE (((((((((vt1.c0)AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(((x'')||(x'')))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(CASE WHEN '-932577398' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(((x'')||(x'')))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(CASE WHEN '-932577398' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON '-1028225129');
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON '-1028225129' WHERE (((((((((vt1.c0)AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(((x'')||(x'')))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(CASE WHEN '-932577398' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('-1508152041')))AND(vt1.c0)))OR(vt1.c0)) IN ())) ORDER BY (((- (vt1.c0))) BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND ((NOT (vt1.c0))))  NULLS FIRST, CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('-1508152041')))AND(vt1.c0)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((- (vt1.c0))) BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND ((NOT (vt1.c0))))  NULLS FIRST, CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('-1508152041')))AND(vt1.c0)))OR(vt1.c0)) IN ())) ORDER BY (((- (vt1.c0))) BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND ((NOT (vt1.c0))))  NULLS FIRST, CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('-1508152041')))AND(vt1.c0)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((- (vt1.c0))) BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND ((NOT (vt1.c0))))  NULLS FIRST, CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('-1508152041')))AND(vt1.c0)))OR(vt1.c0)) IN ())) ORDER BY (((- (vt1.c0))) BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND ((NOT (vt1.c0))))  NULLS FIRST, CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL) ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((vt1.c0))<=(((NOT (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0))<=(((NOT (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0))<=(((NOT (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0))<=(((NOT (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0))<=(((NOT (vt1.c0))))));
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((CAST(t0.c12 AS TEXT)) ISNULL) WHERE ((((t0.c12) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c12) NOTNULL) IN ())) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((CAST(t0.c12 AS TEXT)) ISNULL));
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((CAST(t0.c12 AS TEXT)) ISNULL) WHERE ((((t0.c12) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c12) NOTNULL) IN ())) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((CAST(t0.c12 AS TEXT)) ISNULL));
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((CAST(t0.c12 AS TEXT)) ISNULL) WHERE ((((t0.c12) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((t0.c12)|(((((t0.c6)AND(t0.c6)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c12)|(((((t0.c6)AND(t0.c6)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((t0.c12)|(((((t0.c6)AND(t0.c6)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c12)|(((((t0.c6)AND(t0.c6)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((t0.c12)|(((((t0.c6)AND(t0.c6)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (((NULL IN ())) NOTNULL) INNER JOIN t0 ON (('-1569518999' COLLATE NOCASE) NOTNULL) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((NULL IN ())) NOTNULL) INNER JOIN t0 ON (('-1569518999' COLLATE NOCASE) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (((NULL IN ())) NOTNULL) INNER JOIN t0 ON (('-1569518999' COLLATE NOCASE) NOTNULL) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((NULL IN ())) NOTNULL) INNER JOIN t0 ON (('-1569518999' COLLATE NOCASE) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (((NULL IN ())) NOTNULL) INNER JOIN t0 ON (('-1569518999' COLLATE NOCASE) NOTNULL) WHERE (vt1.c0);
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST(CAST(t0.c12 AS INTEGER) AS BLOB)) ORDER BY (((((vt1.c0))<=((t0.c12)))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c6))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c12 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM t0, vt1 ORDER BY (((((vt1.c0))<=((t0.c12)))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c6))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST(CAST(t0.c12 AS INTEGER) AS BLOB)) ORDER BY (((((vt1.c0))<=((t0.c12)))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c6))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c12 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM t0, vt1 ORDER BY (((((vt1.c0))<=((t0.c12)))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c6))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST(CAST(t0.c12 AS INTEGER) AS BLOB)) ORDER BY (((((vt1.c0))<=((t0.c12)))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c6))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((- (((((vt0.c0)OR(vt0.c0)))AND(t0.c6)))));
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c0)OR(vt0.c0)))AND(t0.c6))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((- (((((vt0.c0)OR(vt0.c0)))AND(t0.c6)))));
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c0)OR(vt0.c0)))AND(t0.c6))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((- (((((vt0.c0)OR(vt0.c0)))AND(t0.c6)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON CAST(vt0.c0 AS REAL) RIGHT OUTER JOIN vt1 ON CASE ((vt0.c0) BETWEEN (vt1.c0) AND (t0.c12))  WHEN ((t0.c6)==(vt1.c0)) THEN (- (vt0.c0)) END WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((NOT (t0.c12))) AND (((vt0.c0)>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((NOT (t0.c12))) AND (((vt0.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST(vt0.c0 AS REAL) RIGHT OUTER JOIN vt1 ON CASE ((vt0.c0) BETWEEN (vt1.c0) AND (t0.c12))  WHEN ((t0.c6)=(vt1.c0)) THEN (- (vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON CAST(vt0.c0 AS REAL) RIGHT OUTER JOIN vt1 ON CASE ((vt0.c0) BETWEEN (vt1.c0) AND (t0.c12))  WHEN ((t0.c6)==(vt1.c0)) THEN (- (vt0.c0)) END WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((NOT (t0.c12))) AND (((vt0.c0)>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((NOT (t0.c12))) AND (((vt0.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST(vt0.c0 AS REAL) RIGHT OUTER JOIN vt1 ON CASE ((vt0.c0) BETWEEN (vt1.c0) AND (t0.c12))  WHEN ((t0.c6)=(vt1.c0)) THEN (- (vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON CAST(vt0.c0 AS REAL) RIGHT OUTER JOIN vt1 ON CASE ((vt0.c0) BETWEEN (vt1.c0) AND (t0.c12))  WHEN ((t0.c6)==(vt1.c0)) THEN (- (vt0.c0)) END WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((NOT (t0.c12))) AND (((vt0.c0)>=(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((('-1139752945') NOT BETWEEN (t0.c12) AND (vt0.c0))) NOTNULL)) ORDER BY ((((((((((x'') NOT BETWEEN (vt0.c0) AND (t0.c6)))AND(((vt0.c0) NOTNULL))))OR(t0.c12)))OR(((vt0.c0) IS TRUE))))AND(NULL));
SELECT SUM(count) FROM (SELECT ALL (((((('-1139752945') NOT BETWEEN (t0.c12) AND (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((((((((x'') NOT BETWEEN (vt0.c0) AND (t0.c6)))AND(((vt0.c0) NOTNULL))))OR(t0.c12)))OR(((vt0.c0) IS TRUE))))AND(NULL)));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((('-1139752945') NOT BETWEEN (t0.c12) AND (vt0.c0))) NOTNULL)) ORDER BY ((((((((((x'') NOT BETWEEN (vt0.c0) AND (t0.c6)))AND(((vt0.c0) NOTNULL))))OR(t0.c12)))OR(((vt0.c0) IS TRUE))))AND(NULL));
SELECT SUM(count) FROM (SELECT ALL (((((('-1139752945') NOT BETWEEN (t0.c12) AND (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((((((((x'') NOT BETWEEN (vt0.c0) AND (t0.c6)))AND(((vt0.c0) NOTNULL))))OR(t0.c12)))OR(((vt0.c0) IS TRUE))))AND(NULL)));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((('-1139752945') NOT BETWEEN (t0.c12) AND (vt0.c0))) NOTNULL)) ORDER BY ((((((((((x'') NOT BETWEEN (vt0.c0) AND (t0.c6)))AND(((vt0.c0) NOTNULL))))OR(t0.c12)))OR(((vt0.c0) IS TRUE))))AND(NULL));
SELECT ALL * FROM t0, vt1, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c12 END)IS(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c12 END)IS(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c12 END)IS(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c12 END)IS(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c12 END)IS(vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN ((((vt1.c0, x'c46f', vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (NULL))) ORDER BY ((((vt1.c0)==(vt1.c0)))GLOB(((vt1.c0) NOT BETWEEN (0.6409143982751481) AND (vt1.c0)))) DESC  NULLS FIRST, 0Xffffffffbc10c00f;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN ((((vt1.c0, x'c46f', vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (NULL))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)==(vt1.c0)))GLOB(((vt1.c0) NOT BETWEEN (0.6409143982751481) AND (vt1.c0)))) DESC  NULLS FIRST, 0xffffffffbc10c00f);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN ((((vt1.c0, x'c46f', vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (NULL))) ORDER BY ((((vt1.c0)==(vt1.c0)))GLOB(((vt1.c0) NOT BETWEEN (0.6409143982751481) AND (vt1.c0)))) DESC  NULLS FIRST, 0Xffffffffbc10c00f;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN ((((vt1.c0, x'c46f', vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (NULL))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)==(vt1.c0)))GLOB(((vt1.c0) NOT BETWEEN (0.6409143982751481) AND (vt1.c0)))) DESC  NULLS FIRST, 0xffffffffbc10c00f);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN ((((vt1.c0, x'c46f', vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (NULL))) ORDER BY ((((vt1.c0)==(vt1.c0)))GLOB(((vt1.c0) NOT BETWEEN (0.6409143982751481) AND (vt1.c0)))) DESC  NULLS FIRST, 0Xffffffffbc10c00f;
SELECT * FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE ((((NOT (x''))) BETWEEN (CASE WHEN t0.c12 THEN t0.c6 ELSE t0.c6 END) AND (((t0.c12)IS(t0.c12))))) ORDER BY ((((-2053011839) NOT NULL))==(t0.c12)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (x''))) BETWEEN (CASE WHEN t0.c12 THEN t0.c6 ELSE t0.c6 END) AND (((t0.c12)IS(t0.c12))))) IS TRUE)  as count FROM t0 ORDER BY ((((-2053011839) NOT NULL))==(t0.c12)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE ((((NOT (x''))) BETWEEN (CASE WHEN t0.c12 THEN t0.c6 ELSE t0.c6 END) AND (((t0.c12)IS(t0.c12))))) ORDER BY ((((-2053011839) NOT NULL))==(t0.c12)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (x''))) BETWEEN (CASE WHEN t0.c12 THEN t0.c6 ELSE t0.c6 END) AND (((t0.c12)IS(t0.c12))))) IS TRUE)  as count FROM t0 ORDER BY ((((-2053011839) NOT NULL))==(t0.c12)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE ((((NOT (x''))) BETWEEN (CASE WHEN t0.c12 THEN t0.c6 ELSE t0.c6 END) AND (((t0.c12)IS(t0.c12))))) ORDER BY ((((-2053011839) NOT NULL))==(t0.c12)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((1.165164327E9) NOT BETWEEN (t0.c6) AND (t0.c12)) IN ()) LEFT OUTER JOIN t0 ON LIKELY(((t0.c12)*(-1.735971736E9))) WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN ((vt0.c0 IN ())) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) NOT BETWEEN ((vt0.c0 IN ())) AND (vt0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((1.165164327E9) NOT BETWEEN (t0.c6) AND (t0.c12)) IN ()) LEFT OUTER JOIN t0 ON LIKELY(((t0.c12)*(-1.735971736E9))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((1.165164327E9) NOT BETWEEN (t0.c6) AND (t0.c12)) IN ()) LEFT OUTER JOIN t0 ON LIKELY(((t0.c12)*(-1.735971736E9))) WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN ((vt0.c0 IN ())) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) NOT BETWEEN ((vt0.c0 IN ())) AND (vt0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((1.165164327E9) NOT BETWEEN (t0.c6) AND (t0.c12)) IN ()) LEFT OUTER JOIN t0 ON LIKELY(((t0.c12)*(-1.735971736E9))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((1.165164327E9) NOT BETWEEN (t0.c6) AND (t0.c12)) IN ()) LEFT OUTER JOIN t0 ON LIKELY(((t0.c12)*(-1.735971736E9))) WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN ((vt0.c0 IN ())) AND (vt0.c0)));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((CASE t0.c6  WHEN t0.c12 THEN t0.c12 ELSE vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c6  WHEN t0.c12 THEN t0.c12 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((CASE t0.c6  WHEN t0.c12 THEN t0.c12 ELSE vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c6  WHEN t0.c12 THEN t0.c12 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((CASE t0.c6  WHEN t0.c12 THEN t0.c12 ELSE vt1.c0 END IN ()));
SELECT * FROM vt0, t0 WHERE ((((((t0.c12, vt0.c0, t0.c12))=((t0.c12, vt0.c0, t0.c12)))) NOT BETWEEN (((t0.c12)&(x'56f01942'))) AND (t0.c6)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c12, vt0.c0, t0.c12))=((t0.c12, vt0.c0, t0.c12)))) NOT BETWEEN (((t0.c12)&(x'56f01942'))) AND (t0.c6))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((t0.c12, vt0.c0, t0.c12))=((t0.c12, vt0.c0, t0.c12)))) NOT BETWEEN (((t0.c12)&(x'56f01942'))) AND (t0.c6)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c12, vt0.c0, t0.c12))=((t0.c12, vt0.c0, t0.c12)))) NOT BETWEEN (((t0.c12)&(x'56f01942'))) AND (t0.c6))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((t0.c12, vt0.c0, t0.c12))=((t0.c12, vt0.c0, t0.c12)))) NOT BETWEEN (((t0.c12)&(x'56f01942'))) AND (t0.c6)));
SELECT * FROM vt0, t0 INNER JOIN vt1 ON ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) BETWEEN ((((t0.c6, vt0.c0, t0.c12)) BETWEEN ((vt0.c0, vt1.c0, t0.c12)) AND ((0xffffffffb85fbadc, NULL, t0.c6)))) AND ((+ (t0.c6)))) WHERE (CAST(vt1.c0 COLLATE RTRIM AS NUMERIC)) ORDER BY NULL, (((((t0.c6)AND(t0.c12)))AND(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 INNER JOIN vt1 ON ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) BETWEEN ((((t0.c6, vt0.c0, t0.c12)) BETWEEN ((vt0.c0, vt1.c0, t0.c12)) AND ((0xffffffffb85fbadc, NULL, t0.c6)))) AND ((+ (t0.c6)))) ORDER BY NULL, (((((t0.c6)AND(t0.c12)))AND(vt1.c0)) IN ()));
SELECT * FROM vt0, t0 INNER JOIN vt1 ON ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) BETWEEN ((((t0.c6, vt0.c0, t0.c12)) BETWEEN ((vt0.c0, vt1.c0, t0.c12)) AND ((0xffffffffb85fbadc, NULL, t0.c6)))) AND ((+ (t0.c6)))) WHERE (CAST(vt1.c0 COLLATE RTRIM AS NUMERIC)) ORDER BY NULL, (((((t0.c6)AND(t0.c12)))AND(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 INNER JOIN vt1 ON ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) BETWEEN ((((t0.c6, vt0.c0, t0.c12)) BETWEEN ((vt0.c0, vt1.c0, t0.c12)) AND ((0xffffffffb85fbadc, NULL, t0.c6)))) AND ((+ (t0.c6)))) ORDER BY NULL, (((((t0.c6)AND(t0.c12)))AND(vt1.c0)) IN ()));
SELECT * FROM vt0, t0 INNER JOIN vt1 ON ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) BETWEEN ((((t0.c6, vt0.c0, t0.c12)) BETWEEN ((vt0.c0, vt1.c0, t0.c12)) AND ((0xffffffffb85fbadc, NULL, t0.c6)))) AND ((+ (t0.c6)))) WHERE (CAST(vt1.c0 COLLATE RTRIM AS NUMERIC)) ORDER BY NULL, (((((t0.c6)AND(t0.c12)))AND(vt1.c0)) IN ());
SELECT * FROM t0, vt1 INNER JOIN vt0 ON (((vt1.c0 IN ())) BETWEEN ((t0.c6 IN (vt1.c0, x''))) AND ((((vt0.c0)) BETWEEN ((t0.c12)) AND ((t0.c6))))) WHERE (((((-422865627) NOT NULL)) BETWEEN ('-1569518999' COLLATE NOCASE) AND ((vt0.c0 IN (0.539931527815436, 0X6f38d245)))));
SELECT SUM(count) FROM (SELECT ((((((-422865627) NOT NULL)) BETWEEN ('-1569518999' COLLATE NOCASE) AND ((vt0.c0 IN (0.539931527815436, 0x6f38d245))))) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON (((vt1.c0 IN ())) BETWEEN ((t0.c6 IN (vt1.c0, x''))) AND ((((vt0.c0)) BETWEEN ((t0.c12)) AND ((t0.c6))))));
SELECT * FROM t0, vt1 INNER JOIN vt0 ON (((vt1.c0 IN ())) BETWEEN ((t0.c6 IN (vt1.c0, x''))) AND ((((vt0.c0)) BETWEEN ((t0.c12)) AND ((t0.c6))))) WHERE (((((-422865627) NOT NULL)) BETWEEN ('-1569518999' COLLATE NOCASE) AND ((vt0.c0 IN (0.539931527815436, 0X6f38d245)))));
SELECT SUM(count) FROM (SELECT ((((((-422865627) NOT NULL)) BETWEEN ('-1569518999' COLLATE NOCASE) AND ((vt0.c0 IN (0.539931527815436, 0x6f38d245))))) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON (((vt1.c0 IN ())) BETWEEN ((t0.c6 IN (vt1.c0, x''))) AND ((((vt0.c0)) BETWEEN ((t0.c12)) AND ((t0.c6))))));
SELECT * FROM t0, vt1 INNER JOIN vt0 ON (((vt1.c0 IN ())) BETWEEN ((t0.c6 IN (vt1.c0, x''))) AND ((((vt0.c0)) BETWEEN ((t0.c12)) AND ((t0.c6))))) WHERE (((((-422865627) NOT NULL)) BETWEEN ('-1569518999' COLLATE NOCASE) AND ((vt0.c0 IN (0.539931527815436, 0X6f38d245)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((x'a0270a06' IN (vt0.c0))) ORDER BY (((vt1.c0 IN (vt0.c0, vt1.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'a0270a06' IN (vt0.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0 IN (vt0.c0, vt1.c0))) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((x'a0270a06' IN (vt0.c0))) ORDER BY (((vt1.c0 IN (vt0.c0, vt1.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'a0270a06' IN (vt0.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0 IN (vt0.c0, vt1.c0))) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((x'a0270a06' IN (vt0.c0))) ORDER BY (((vt1.c0 IN (vt0.c0, vt1.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (- (NULLIF(vt0.c0, vt1.c0))) WHERE (TRIM(DISTINCT (((vt0.c0))>((vt0.c0))), ((vt0.c0)|(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (((vt0.c0))>((vt0.c0))), ((vt0.c0)|(vt0.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (- (NULLIF(vt0.c0, vt1.c0))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (- (NULLIF(vt0.c0, vt1.c0))) WHERE (TRIM(DISTINCT (((vt0.c0))>((vt0.c0))), ((vt0.c0)|(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (((vt0.c0))>((vt0.c0))), ((vt0.c0)|(vt0.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (- (NULLIF(vt0.c0, vt1.c0))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (- (NULLIF(vt0.c0, vt1.c0))) WHERE (TRIM(DISTINCT (((vt0.c0))>((vt0.c0))), ((vt0.c0)|(vt0.c0))));
SELECT ALL * FROM vt1, vt0 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((vt1.c0 IN ()));
SELECT * FROM t0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (NULL);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt1.c0))))<=(((vt0.c0) NOTNULL)))) ORDER BY NULL DESC  NULLS LAST, (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0)<=(vt1.c0))) AND (LIKELIHOOD(vt0.c0, 0.7718606106719634)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt1.c0))))<=(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL DESC  NULLS LAST, (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0)<=(vt1.c0))) AND (LIKELIHOOD(vt0.c0, 0.7718606106719634)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt1.c0))))<=(((vt0.c0) NOTNULL)))) ORDER BY NULL DESC  NULLS LAST, (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0)<=(vt1.c0))) AND (LIKELIHOOD(vt0.c0, 0.7718606106719634)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt1.c0))))<=(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL DESC  NULLS LAST, (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0)<=(vt1.c0))) AND (LIKELIHOOD(vt0.c0, 0.7718606106719634)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt1.c0))))<=(((vt0.c0) NOTNULL)))) ORDER BY NULL DESC  NULLS LAST, (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0)<=(vt1.c0))) AND (LIKELIHOOD(vt0.c0, 0.7718606106719634)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c6) ORDER BY CAST(t0.c6 AS REAL) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST, LIKELY(CASE WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN t0.c12 WHEN t0.c12 THEN t0.c6 END) ASC  NULLS FIRST, CAST(t0.c12 AS BLOB) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c6) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c6 AS REAL) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST, LIKELY(CASE WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN t0.c12 WHEN t0.c12 THEN t0.c6 END) ASC  NULLS FIRST, CAST(t0.c12 AS BLOB) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c6) ORDER BY CAST(t0.c6 AS REAL) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST, LIKELY(CASE WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN t0.c12 WHEN t0.c12 THEN t0.c6 END) ASC  NULLS FIRST, CAST(t0.c12 AS BLOB) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c6) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c6 AS REAL) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST, LIKELY(CASE WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN t0.c12 WHEN t0.c12 THEN t0.c6 END) ASC  NULLS FIRST, CAST(t0.c12 AS BLOB) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c6) ORDER BY CAST(t0.c6 AS REAL) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST, LIKELY(CASE WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN t0.c12 WHEN t0.c12 THEN t0.c6 END) ASC  NULLS FIRST, CAST(t0.c12 AS BLOB) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) ORDER BY (((vt0.c0 IN ())) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) ORDER BY (((vt0.c0 IN ())) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) ORDER BY (((vt0.c0 IN ())) NOT NULL);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN t0.c12 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE vt0.c0  WHEN vt0.c0 THEN t0.c12 END))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN t0.c12 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE vt0.c0  WHEN vt0.c0 THEN t0.c12 END))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN t0.c12 END)));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0, x'', vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c0, ((vt0.c0)<=(vt1.c0)))) AND (((- (vt1.c0)), ((vt0.c0)=(vt0.c0)), ((((vt0.c0)AND(vt1.c0)))AND(0.760393826225327))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, x'', vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c0, ((vt0.c0)<=(vt1.c0)))) AND (((- (vt1.c0)), ((vt0.c0)=(vt0.c0)), ((((vt0.c0)AND(vt1.c0)))AND(0.760393826225327)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0, x'', vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c0, ((vt0.c0)<=(vt1.c0)))) AND (((- (vt1.c0)), ((vt0.c0)=(vt0.c0)), ((((vt0.c0)AND(vt1.c0)))AND(0.760393826225327))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, x'', vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c0, ((vt0.c0)<=(vt1.c0)))) AND (((- (vt1.c0)), ((vt0.c0)=(vt0.c0)), ((((vt0.c0)AND(vt1.c0)))AND(0.760393826225327)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0, x'', vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c0, ((vt0.c0)<=(vt1.c0)))) AND (((- (vt1.c0)), ((vt0.c0)=(vt0.c0)), ((((vt0.c0)AND(vt1.c0)))AND(0.760393826225327))))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), vt1.c0 COLLATE NOCASE, (('') IS TRUE)))>=((((vt1.c0) NOTNULL), CAST(vt1.c0 AS TEXT), x''))) WHERE ((vt1.c0 IN ())) ORDER BY CAST(NULLIF('T!G+La', vt0.c0) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), vt1.c0 COLLATE NOCASE, (('') IS TRUE)))>=((((vt1.c0) NOTNULL), CAST(vt1.c0 AS TEXT), x''))) ORDER BY CAST(NULLIF('T!G+La', vt0.c0) AS REAL) ASC);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), vt1.c0 COLLATE NOCASE, (('') IS TRUE)))>=((((vt1.c0) NOTNULL), CAST(vt1.c0 AS TEXT), x''))) WHERE ((vt1.c0 IN ())) ORDER BY CAST(NULLIF('T!G+La', vt0.c0) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), vt1.c0 COLLATE NOCASE, (('') IS TRUE)))>=((((vt1.c0) NOTNULL), CAST(vt1.c0 AS TEXT), x''))) ORDER BY CAST(NULLIF('T!G+La', vt0.c0) AS REAL) ASC);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), vt1.c0 COLLATE NOCASE, (('') IS TRUE)))>=((((vt1.c0) NOTNULL), CAST(vt1.c0 AS TEXT), x''))) WHERE ((vt1.c0 IN ())) ORDER BY CAST(NULLIF('T!G+La', vt0.c0) AS REAL) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt1.c0))) IS TRUE)) ORDER BY (((+ (NULL)))==((~ (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt1.c0, vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY (((+ (NULL)))=((~ (vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt1.c0))) IS TRUE)) ORDER BY (((+ (NULL)))==((~ (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt1.c0, vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY (((+ (NULL)))=((~ (vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt1.c0))) IS TRUE)) ORDER BY (((+ (NULL)))==((~ (vt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(ABS(vt0.c0) AS TEXT)) ORDER BY CAST(((vt0.c0)*('0')) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)*('0')) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(ABS(vt0.c0) AS TEXT)) ORDER BY CAST(((vt0.c0)*('0')) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)*('0')) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(ABS(vt0.c0) AS TEXT)) ORDER BY CAST(((vt0.c0)*('0')) AS REAL)  NULLS FIRST;
SELECT * FROM t0 WHERE (((CASE WHEN t0.c6 THEN t0.c6 END)IS(COALESCE(t0.c12, t0.c6)))) ORDER BY (((t0.c6)*(t0.c12)) IN ()) ASC  NULLS LAST, CAST(t0.c12 AS REAL) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c6 THEN t0.c6 END)IS(COALESCE(t0.c12, t0.c6)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c6)*(t0.c12)) IN ()) ASC  NULLS LAST, CAST(t0.c12 AS REAL) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c6 THEN t0.c6 END)IS(COALESCE(t0.c12, t0.c6)))) ORDER BY (((t0.c6)*(t0.c12)) IN ()) ASC  NULLS LAST, CAST(t0.c12 AS REAL) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c6 THEN t0.c6 END)IS(COALESCE(t0.c12, t0.c6)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c6)*(t0.c12)) IN ()) ASC  NULLS LAST, CAST(t0.c12 AS REAL) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c6 THEN t0.c6 END)IS(COALESCE(t0.c12, t0.c6)))) ORDER BY (((t0.c6)*(t0.c12)) IN ()) ASC  NULLS LAST, CAST(t0.c12 AS REAL) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL * FROM vt1, t0 WHERE (COALESCE(DISTINCT ((t0.c6)LIKE(t0.c12)), (+ (vt1.c0)), LIKELIHOOD(DISTINCT vt1.c0, 0.1744237350600104), t0.c6));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((t0.c6)LIKE(t0.c12)), (+ (vt1.c0)), LIKELIHOOD(DISTINCT vt1.c0, 0.1744237350600104), t0.c6)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (COALESCE(DISTINCT ((t0.c6)LIKE(t0.c12)), (+ (vt1.c0)), LIKELIHOOD(DISTINCT vt1.c0, 0.1744237350600104), t0.c6));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((t0.c6)LIKE(t0.c12)), (+ (vt1.c0)), LIKELIHOOD(DISTINCT vt1.c0, 0.1744237350600104), t0.c6)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (COALESCE(DISTINCT ((t0.c6)LIKE(t0.c12)), (+ (vt1.c0)), LIKELIHOOD(DISTINCT vt1.c0, 0.1744237350600104), t0.c6));
SELECT COUNT(*) FROM t0 INDEXED BY i72 NATURAL JOIN vt0 WHERE (((((t0.c12)OR(NULL)))AND(t0.c12)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((t0.c12)OR(NULL)))AND(t0.c12)) COLLATE RTRIM) IS TRUE)  as count FROM t0 INDEXED BY i72 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 INDEXED BY i72 NATURAL JOIN vt0 WHERE (((((t0.c12)OR(NULL)))AND(t0.c12)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((t0.c12)OR(NULL)))AND(t0.c12)) COLLATE RTRIM) IS TRUE)  as count FROM t0 INDEXED BY i72 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 INDEXED BY i72 NATURAL JOIN vt0 WHERE (((((t0.c12)OR(NULL)))AND(t0.c12)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((((0.47011065780341077, vt1.c0, vt1.c0)) BETWEEN ((x'', vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) AND (LAST_INSERT_ROWID())) WHERE (((((vt1.c0)LIKE(vt1.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)LIKE(vt1.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((((0.47011065780341077, vt1.c0, vt1.c0)) BETWEEN ((x'', vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) AND (LAST_INSERT_ROWID())));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((((0.47011065780341077, vt1.c0, vt1.c0)) BETWEEN ((x'', vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) AND (LAST_INSERT_ROWID())) WHERE (((((vt1.c0)LIKE(vt1.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)LIKE(vt1.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((((0.47011065780341077, vt1.c0, vt1.c0)) BETWEEN ((x'', vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) AND (LAST_INSERT_ROWID())));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((((0.47011065780341077, vt1.c0, vt1.c0)) BETWEEN ((x'', vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) AND (LAST_INSERT_ROWID())) WHERE (((((vt1.c0)LIKE(vt1.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0)));
SELECT ALL * FROM t0, vt0 FULL OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN t0.c12 END, 0.14585757901709706) WHERE ((((((((((- (t0.c12)))AND(LOWER(t0.c12))))OR((vt0.c0 IN (vt0.c0, t0.c12)))))OR(((((((((vt1.c0)OR(vt0.c0)))AND(t0.c6)))OR(vt1.c0)))AND(vt1.c0)))))AND(vt0.c0 COLLATE BINARY))) ORDER BY NULL DESC, ((((t0.c6)|(vt1.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (t0.c12)))AND(LOWER(t0.c12))))OR((vt0.c0 IN (vt0.c0, t0.c12)))))OR(((((((((vt1.c0)OR(vt0.c0)))AND(t0.c6)))OR(vt1.c0)))AND(vt1.c0)))))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN t0.c12 END, 0.14585757901709706) ORDER BY NULL DESC, ((((t0.c6)|(vt1.c0))) IS FALSE) DESC);
SELECT ALL * FROM t0, vt0 FULL OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN t0.c12 END, 0.14585757901709706) WHERE ((((((((((- (t0.c12)))AND(LOWER(t0.c12))))OR((vt0.c0 IN (vt0.c0, t0.c12)))))OR(((((((((vt1.c0)OR(vt0.c0)))AND(t0.c6)))OR(vt1.c0)))AND(vt1.c0)))))AND(vt0.c0 COLLATE BINARY))) ORDER BY NULL DESC, ((((t0.c6)|(vt1.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (t0.c12)))AND(LOWER(t0.c12))))OR((vt0.c0 IN (vt0.c0, t0.c12)))))OR(((((((((vt1.c0)OR(vt0.c0)))AND(t0.c6)))OR(vt1.c0)))AND(vt1.c0)))))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN t0.c12 END, 0.14585757901709706) ORDER BY NULL DESC, ((((t0.c6)|(vt1.c0))) IS FALSE) DESC);
SELECT ALL * FROM t0, vt0 FULL OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN t0.c12 END, 0.14585757901709706) WHERE ((((((((((- (t0.c12)))AND(LOWER(t0.c12))))OR((vt0.c0 IN (vt0.c0, t0.c12)))))OR(((((((((vt1.c0)OR(vt0.c0)))AND(t0.c6)))OR(vt1.c0)))AND(vt1.c0)))))AND(vt0.c0 COLLATE BINARY))) ORDER BY NULL DESC, ((((t0.c6)|(vt1.c0))) IS FALSE) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((- (t0.c12)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (t0.c12)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((- (t0.c12)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (t0.c12)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((- (t0.c12)) IN ()));
SELECT ALL * FROM t0 CROSS JOIN vt1 ON LIKELIHOOD(DISTINCT ((t0.c12)>(t0.c12)), 0.7101370627453523) CROSS JOIN vt0 ON (((t0.c12 IN ()))OR((((t0.c12))>=((vt1.c0))))) WHERE (((((t0.c6) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (x'c777') AND (CASE WHEN t0.c6 THEN vt0.c0 ELSE t0.c6 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c6) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (x'c777') AND (CASE WHEN t0.c6 THEN vt0.c0 ELSE t0.c6 END))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON LIKELIHOOD(DISTINCT ((t0.c12)>(t0.c12)), 0.7101370627453523) CROSS JOIN vt0 ON (((t0.c12 IN ()))OR((((t0.c12))>=((vt1.c0))))));
SELECT ALL * FROM t0 CROSS JOIN vt1 ON LIKELIHOOD(DISTINCT ((t0.c12)>(t0.c12)), 0.7101370627453523) CROSS JOIN vt0 ON (((t0.c12 IN ()))OR((((t0.c12))>=((vt1.c0))))) WHERE (((((t0.c6) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (x'c777') AND (CASE WHEN t0.c6 THEN vt0.c0 ELSE t0.c6 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c6) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (x'c777') AND (CASE WHEN t0.c6 THEN vt0.c0 ELSE t0.c6 END))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON LIKELIHOOD(DISTINCT ((t0.c12)>(t0.c12)), 0.7101370627453523) CROSS JOIN vt0 ON (((t0.c12 IN ()))OR((((t0.c12))>=((vt1.c0))))));
SELECT ALL * FROM t0 CROSS JOIN vt1 ON LIKELIHOOD(DISTINCT ((t0.c12)>(t0.c12)), 0.7101370627453523) CROSS JOIN vt0 ON (((t0.c12 IN ()))OR((((t0.c12))>=((vt1.c0))))) WHERE (((((t0.c6) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (x'c777') AND (CASE WHEN t0.c6 THEN vt0.c0 ELSE t0.c6 END)));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM t0 WHERE (t0.c6);
SELECT SUM(count) FROM (SELECT ALL ((t0.c6) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c6);
SELECT SUM(count) FROM (SELECT ALL ((t0.c6) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c6);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c12)%(t0.c12))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c12) AND (vt0.c0))) AND ((x'' IN (vt0.c0))))) ORDER BY (((vt0.c0)==(t0.c6)) IN ());
SELECT SUM(count) FROM (SELECT ((((((t0.c12)%(t0.c12))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c12) AND (vt0.c0))) AND ((x'' IN (vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0)==(t0.c6)) IN ()));
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c12)%(t0.c12))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c12) AND (vt0.c0))) AND ((x'' IN (vt0.c0))))) ORDER BY (((vt0.c0)==(t0.c6)) IN ());
SELECT SUM(count) FROM (SELECT ((((((t0.c12)%(t0.c12))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c12) AND (vt0.c0))) AND ((x'' IN (vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0)==(t0.c6)) IN ()));
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c12)%(t0.c12))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c12) AND (vt0.c0))) AND ((x'' IN (vt0.c0))))) ORDER BY (((vt0.c0)==(t0.c6)) IN ());
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON ((CAST('' AS REAL)) NOT NULL) CROSS JOIN vt0 ON CASE (((t0.c12))<>((t0.c6)))  WHEN ((t0.c6)-(vt0.c0)) THEN CASE t0.c6  WHEN vt1.c0 THEN '1974040478' ELSE t0.c12 END WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c12)) THEN (((vt1.c0))>=((vt0.c0))) WHEN (t0.c12 IN (vt1.c0, t0.c12)) THEN CAST(vt0.c0 AS REAL) END WHERE (((0.6014708585371342)|((t0.c6 IN ()))));
SELECT SUM(count) FROM (SELECT ((((0.6014708585371342)|((t0.c6 IN ())))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((CAST('' AS REAL)) NOT NULL) CROSS JOIN vt0 ON CASE (((t0.c12))<>((t0.c6)))  WHEN ((t0.c6)-(vt0.c0)) THEN CASE t0.c6  WHEN vt1.c0 THEN '1974040478' ELSE t0.c12 END WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c12)) THEN (((vt1.c0))>=((vt0.c0))) WHEN (t0.c12 IN (vt1.c0, t0.c12)) THEN CAST(vt0.c0 AS REAL) END);
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON ((CAST('' AS REAL)) NOT NULL) CROSS JOIN vt0 ON CASE (((t0.c12))<>((t0.c6)))  WHEN ((t0.c6)-(vt0.c0)) THEN CASE t0.c6  WHEN vt1.c0 THEN '1974040478' ELSE t0.c12 END WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c12)) THEN (((vt1.c0))>=((vt0.c0))) WHEN (t0.c12 IN (vt1.c0, t0.c12)) THEN CAST(vt0.c0 AS REAL) END WHERE (((0.6014708585371342)|((t0.c6 IN ()))));
SELECT SUM(count) FROM (SELECT ((((0.6014708585371342)|((t0.c6 IN ())))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((CAST('' AS REAL)) NOT NULL) CROSS JOIN vt0 ON CASE (((t0.c12))<>((t0.c6)))  WHEN ((t0.c6)-(vt0.c0)) THEN CASE t0.c6  WHEN vt1.c0 THEN '1974040478' ELSE t0.c12 END WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c12)) THEN (((vt1.c0))>=((vt0.c0))) WHEN (t0.c12 IN (vt1.c0, t0.c12)) THEN CAST(vt0.c0 AS REAL) END);
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON ((CAST('' AS REAL)) NOT NULL) CROSS JOIN vt0 ON CASE (((t0.c12))<>((t0.c6)))  WHEN ((t0.c6)-(vt0.c0)) THEN CASE t0.c6  WHEN vt1.c0 THEN '1974040478' ELSE t0.c12 END WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c12)) THEN (((vt1.c0))>=((vt0.c0))) WHEN (t0.c12 IN (vt1.c0, t0.c12)) THEN CAST(vt0.c0 AS REAL) END WHERE (((0.6014708585371342)|((t0.c6 IN ()))));
SELECT * FROM vt0, t0 RIGHT OUTER JOIN vt1 ON TRIM((((t0.c12))<((t0.c6)))) WHERE (0.286185261694479) ORDER BY ((LIKELY(DISTINCT t0.c12)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((0.286185261694479) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN vt1 ON TRIM((((t0.c12))<((t0.c6)))) ORDER BY ((LIKELY(DISTINCT t0.c12)) NOT NULL));
SELECT * FROM vt0, t0 RIGHT OUTER JOIN vt1 ON TRIM((((t0.c12))<((t0.c6)))) WHERE (0.286185261694479) ORDER BY ((LIKELY(DISTINCT t0.c12)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((0.286185261694479) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN vt1 ON TRIM((((t0.c12))<((t0.c6)))) ORDER BY ((LIKELY(DISTINCT t0.c12)) NOT NULL));
SELECT * FROM vt0, t0 RIGHT OUTER JOIN vt1 ON TRIM((((t0.c12))<((t0.c6)))) WHERE (0.286185261694479) ORDER BY ((LIKELY(DISTINCT t0.c12)) NOT NULL);
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON NULL WHERE ('a~') ORDER BY CASE ((vt1.c0)-(vt1.c0))  WHEN ((vt0.c0) IS TRUE) THEN t0.c12 COLLATE RTRIM ELSE (+ (vt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('a~') IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON NULL ORDER BY CASE ((vt1.c0)-(vt1.c0))  WHEN ((vt0.c0) IS TRUE) THEN t0.c12 COLLATE RTRIM ELSE (+ (vt1.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON NULL WHERE ('a~') ORDER BY CASE ((vt1.c0)-(vt1.c0))  WHEN ((vt0.c0) IS TRUE) THEN t0.c12 COLLATE RTRIM ELSE (+ (vt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('a~') IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON NULL ORDER BY CASE ((vt1.c0)-(vt1.c0))  WHEN ((vt0.c0) IS TRUE) THEN t0.c12 COLLATE RTRIM ELSE (+ (vt1.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON NULL WHERE ('a~') ORDER BY CASE ((vt1.c0)-(vt1.c0))  WHEN ((vt0.c0) IS TRUE) THEN t0.c12 COLLATE RTRIM ELSE (+ (vt1.c0)) END  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CAST((+ (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST((+ (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST((+ (vt1.c0)) AS BLOB));
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN t0 ON HEX(x'') WHERE (((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c6)))))>((t0.c6 COLLATE BINARY)))) ORDER BY ((((vt0.c0)!=(vt0.c0))) NOTNULL) ASC, t0.c6 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c6)))))>((t0.c6 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t0 ON HEX(x'') ORDER BY ((((vt0.c0)!=(vt0.c0))) NOTNULL) ASC, t0.c6 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN t0 ON HEX(x'') WHERE (((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c6)))))>((t0.c6 COLLATE BINARY)))) ORDER BY ((((vt0.c0)!=(vt0.c0))) NOTNULL) ASC, t0.c6 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c6)))))>((t0.c6 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t0 ON HEX(x'') ORDER BY ((((vt0.c0)!=(vt0.c0))) NOTNULL) ASC, t0.c6 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN t0 ON HEX(x'') WHERE (((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c6)))))>((t0.c6 COLLATE BINARY)))) ORDER BY ((((vt0.c0)!=(vt0.c0))) NOTNULL) ASC, t0.c6 DESC  NULLS LAST;
SELECT ALL * FROM t0, vt0, vt1 WHERE (NULL) ORDER BY t0.c12 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY t0.c12 ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (NULL) ORDER BY t0.c12 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY t0.c12 ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (NULL) ORDER BY t0.c12 ASC  NULLS LAST;
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON (+ (((vt0.c0) NOTNULL))) CROSS JOIN vt0 ON (((((t0.c12)) NOT BETWEEN (('-1508152041')) AND ((t0.c6)))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (CAST(vt1.c0 AS BLOB))) WHERE (NULLIF(DISTINCT json_quote(t0.c6), ((vt0.c0) IS TRUE))) ORDER BY ((CASE t0.c12  WHEN vt0.c0 THEN t0.c6 END)%((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((t0.c12, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, x'946d'))))) DESC, CASE WHEN ((vt0.c0)==(t0.c6)) THEN (((-1931382721)) NOT BETWEEN ((vt1.c0)) AND ((t0.c12))) ELSE ((((((((t0.c12)OR(vt1.c0)))OR(t0.c12)))OR(t0.c12)))AND(vt1.c0)) END DESC  NULLS FIRST, t0.c6 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT json_quote(t0.c6), ((vt0.c0) IS TRUE))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (+ (((vt0.c0) NOTNULL))) CROSS JOIN vt0 ON (((((t0.c12)) NOT BETWEEN (('-1508152041')) AND ((t0.c6)))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (CAST(vt1.c0 AS BLOB))) ORDER BY ((CASE t0.c12  WHEN vt0.c0 THEN t0.c6 END)%((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((t0.c12, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, x'946d'))))) DESC, CASE WHEN ((vt0.c0)==(t0.c6)) THEN (((-1931382721)) NOT BETWEEN ((vt1.c0)) AND ((t0.c12))) ELSE ((((((((t0.c12)OR(vt1.c0)))OR(t0.c12)))OR(t0.c12)))AND(vt1.c0)) END DESC  NULLS FIRST, t0.c6 ASC  NULLS FIRST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON (+ (((vt0.c0) NOTNULL))) CROSS JOIN vt0 ON (((((t0.c12)) NOT BETWEEN (('-1508152041')) AND ((t0.c6)))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (CAST(vt1.c0 AS BLOB))) WHERE (NULLIF(DISTINCT json_quote(t0.c6), ((vt0.c0) IS TRUE))) ORDER BY ((CASE t0.c12  WHEN vt0.c0 THEN t0.c6 END)%((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((t0.c12, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, x'946d'))))) DESC, CASE WHEN ((vt0.c0)==(t0.c6)) THEN (((-1931382721)) NOT BETWEEN ((vt1.c0)) AND ((t0.c12))) ELSE ((((((((t0.c12)OR(vt1.c0)))OR(t0.c12)))OR(t0.c12)))AND(vt1.c0)) END DESC  NULLS FIRST, t0.c6 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT json_quote(t0.c6), ((vt0.c0) IS TRUE))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (+ (((vt0.c0) NOTNULL))) CROSS JOIN vt0 ON (((((t0.c12)) NOT BETWEEN (('-1508152041')) AND ((t0.c6)))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (CAST(vt1.c0 AS BLOB))) ORDER BY ((CASE t0.c12  WHEN vt0.c0 THEN t0.c6 END)%((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((t0.c12, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, x'946d'))))) DESC, CASE WHEN ((vt0.c0)==(t0.c6)) THEN (((-1931382721)) NOT BETWEEN ((vt1.c0)) AND ((t0.c12))) ELSE ((((((((t0.c12)OR(vt1.c0)))OR(t0.c12)))OR(t0.c12)))AND(vt1.c0)) END DESC  NULLS FIRST, t0.c6 ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((vt0.c0)LIKE(vt1.c0))) BETWEEN (-1681414924) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((((((((((((vt0.c0)OR(t0.c12)))OR(t0.c12)))OR(((((((((-1545553049)AND(t0.c12)))AND(vt0.c0)))AND(t0.c12)))AND(vt1.c0)))))AND(0x204dea2d)))AND(t0.c6 COLLATE BINARY)))AND(((vt0.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(vt1.c0))) BETWEEN (-1681414924) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((((((((((vt0.c0)OR(t0.c12)))OR(t0.c12)))OR(((((((((-1545553049)AND(t0.c12)))AND(vt0.c0)))AND(t0.c12)))AND(vt1.c0)))))AND(0X204dea2d)))AND(t0.c6 COLLATE BINARY)))AND(((vt0.c0) IS TRUE))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((vt0.c0)LIKE(vt1.c0))) BETWEEN (-1681414924) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((((((((((((vt0.c0)OR(t0.c12)))OR(t0.c12)))OR(((((((((-1545553049)AND(t0.c12)))AND(vt0.c0)))AND(t0.c12)))AND(vt1.c0)))))AND(0x204dea2d)))AND(t0.c6 COLLATE BINARY)))AND(((vt0.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(vt1.c0))) BETWEEN (-1681414924) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((((((((((vt0.c0)OR(t0.c12)))OR(t0.c12)))OR(((((((((-1545553049)AND(t0.c12)))AND(vt0.c0)))AND(t0.c12)))AND(vt1.c0)))))AND(0X204dea2d)))AND(t0.c6 COLLATE BINARY)))AND(((vt0.c0) IS TRUE))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((vt0.c0)LIKE(vt1.c0))) BETWEEN (-1681414924) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((((((((((((vt0.c0)OR(t0.c12)))OR(t0.c12)))OR(((((((((-1545553049)AND(t0.c12)))AND(vt0.c0)))AND(t0.c12)))AND(vt1.c0)))))AND(0x204dea2d)))AND(t0.c6 COLLATE BINARY)))AND(((vt0.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (('-FD7' IN ()));
SELECT SUM(count) FROM (SELECT ((('-FD7' IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (('-FD7' IN ()));
SELECT SUM(count) FROM (SELECT ((('-FD7' IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (('-FD7' IN ()));
SELECT * FROM t0, vt0 WHERE (vt0.c0) ORDER BY (((('D뭐')OR(t0.c6)))LIKE((((t0.c12)) NOT BETWEEN ((t0.c6)) AND (('')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY (((('D뭐')OR(t0.c6)))LIKE((((t0.c12)) NOT BETWEEN ((t0.c6)) AND (('')))))  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (vt0.c0) ORDER BY (((('D뭐')OR(t0.c6)))LIKE((((t0.c12)) NOT BETWEEN ((t0.c6)) AND (('')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY (((('D뭐')OR(t0.c6)))LIKE((((t0.c12)) NOT BETWEEN ((t0.c6)) AND (('')))))  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (vt0.c0) ORDER BY (((('D뭐')OR(t0.c6)))LIKE((((t0.c12)) NOT BETWEEN ((t0.c6)) AND (('')))))  NULLS LAST;
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (t0.c12 IN ()) COLLATE BINARY FULL OUTER JOIN t0 ON (((vt1.c0 IN ()))IS NOT('LF')) WHERE ((NOT ('1298889466')));
SELECT SUM(count) FROM (SELECT (((NOT ('1298889466'))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (t0.c12 IN ()) COLLATE BINARY FULL OUTER JOIN t0 ON (((vt1.c0 IN ()))IS NOT('LF')));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (t0.c12 IN ()) COLLATE BINARY FULL OUTER JOIN t0 ON (((vt1.c0 IN ()))IS NOT('LF')) WHERE ((NOT ('1298889466')));
SELECT SUM(count) FROM (SELECT (((NOT ('1298889466'))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (t0.c12 IN ()) COLLATE BINARY FULL OUTER JOIN t0 ON (((vt1.c0 IN ()))IS NOT('LF')));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (t0.c12 IN ()) COLLATE BINARY FULL OUTER JOIN t0 ON (((vt1.c0 IN ()))IS NOT('LF')) WHERE ((NOT ('1298889466')));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c6)&(t0.c12))) BETWEEN ((((t0.c12)) NOT BETWEEN ((t0.c6)) AND ((t0.c6)))) AND (((t0.c6)-(t0.c6))))) ORDER BY ((t0.c12)*(t0.c6)) COLLATE NOCASE ASC  NULLS LAST, CAST(x'' AS REAL)  NULLS LAST, ((t0.c6)LIKE('-1139752945')) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((t0.c6)&(t0.c12))) BETWEEN ((((t0.c12)) NOT BETWEEN ((t0.c6)) AND ((t0.c6)))) AND (((t0.c6)-(t0.c6))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c12)*(t0.c6)) COLLATE NOCASE ASC  NULLS LAST, CAST(x'' AS REAL)  NULLS LAST, ((t0.c6)LIKE('-1139752945')) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c6)&(t0.c12))) BETWEEN ((((t0.c12)) NOT BETWEEN ((t0.c6)) AND ((t0.c6)))) AND (((t0.c6)-(t0.c6))))) ORDER BY ((t0.c12)*(t0.c6)) COLLATE NOCASE ASC  NULLS LAST, CAST(x'' AS REAL)  NULLS LAST, ((t0.c6)LIKE('-1139752945')) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((t0.c6)&(t0.c12))) BETWEEN ((((t0.c12)) NOT BETWEEN ((t0.c6)) AND ((t0.c6)))) AND (((t0.c6)-(t0.c6))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c12)*(t0.c6)) COLLATE NOCASE ASC  NULLS LAST, CAST(x'' AS REAL)  NULLS LAST, ((t0.c6)LIKE('-1139752945')) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c6)&(t0.c12))) BETWEEN ((((t0.c12)) NOT BETWEEN ((t0.c6)) AND ((t0.c6)))) AND (((t0.c6)-(t0.c6))))) ORDER BY ((t0.c12)*(t0.c6)) COLLATE NOCASE ASC  NULLS LAST, CAST(x'' AS REAL)  NULLS LAST, ((t0.c6)LIKE('-1139752945')) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((CASE vt1.c0  WHEN t0.c12 THEN vt1.c0 END, CASE WHEN t0.c6 THEN vt1.c0 WHEN vt1.c0 THEN 0.20753182078916488 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c6 THEN t0.c12 WHEN NULL THEN t0.c6 END, ((t0.c6)||(vt1.c0))))==(((+ (t0.c12)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c6)), t0.c6 COLLATE RTRIM)))) ORDER BY ((((((((((((x'9500')OR(0.5240313550282187)))AND(vt1.c0)))AND(t0.c6)))AND(t0.c6)))AND(t0.c6)))AND(t0.c12)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt1.c0  WHEN t0.c12 THEN vt1.c0 END, CASE WHEN t0.c6 THEN vt1.c0 WHEN vt1.c0 THEN 0.20753182078916488 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c6 THEN t0.c12 WHEN NULL THEN t0.c6 END, ((t0.c6)||(vt1.c0))))=(((+ (t0.c12)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c6)), t0.c6 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((((((((((x'9500')OR(0.5240313550282187)))AND(vt1.c0)))AND(t0.c6)))AND(t0.c6)))AND(t0.c6)))AND(t0.c12)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((CASE vt1.c0  WHEN t0.c12 THEN vt1.c0 END, CASE WHEN t0.c6 THEN vt1.c0 WHEN vt1.c0 THEN 0.20753182078916488 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c6 THEN t0.c12 WHEN NULL THEN t0.c6 END, ((t0.c6)||(vt1.c0))))==(((+ (t0.c12)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c6)), t0.c6 COLLATE RTRIM)))) ORDER BY ((((((((((((x'9500')OR(0.5240313550282187)))AND(vt1.c0)))AND(t0.c6)))AND(t0.c6)))AND(t0.c6)))AND(t0.c12)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt1.c0  WHEN t0.c12 THEN vt1.c0 END, CASE WHEN t0.c6 THEN vt1.c0 WHEN vt1.c0 THEN 0.20753182078916488 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c6 THEN t0.c12 WHEN NULL THEN t0.c6 END, ((t0.c6)||(vt1.c0))))=(((+ (t0.c12)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c6)), t0.c6 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((((((((((x'9500')OR(0.5240313550282187)))AND(vt1.c0)))AND(t0.c6)))AND(t0.c6)))AND(t0.c6)))AND(t0.c12)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((CASE vt1.c0  WHEN t0.c12 THEN vt1.c0 END, CASE WHEN t0.c6 THEN vt1.c0 WHEN vt1.c0 THEN 0.20753182078916488 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c6 THEN t0.c12 WHEN NULL THEN t0.c6 END, ((t0.c6)||(vt1.c0))))==(((+ (t0.c12)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c6)), t0.c6 COLLATE RTRIM)))) ORDER BY ((((((((((((x'9500')OR(0.5240313550282187)))AND(vt1.c0)))AND(t0.c6)))AND(t0.c6)))AND(t0.c6)))AND(t0.c12)) COLLATE RTRIM DESC;
SELECT * FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((0.5824332862190343 IN ())) ORDER BY ((((vt0.c0)OR((vt0.c0 IN ()))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((0.5824332862190343 IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0)OR((vt0.c0 IN ()))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((0.5824332862190343 IN ())) ORDER BY ((((vt0.c0)OR((vt0.c0 IN ()))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((0.5824332862190343 IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0)OR((vt0.c0 IN ()))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((0.5824332862190343 IN ())) ORDER BY ((((vt0.c0)OR((vt0.c0 IN ()))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((SQLITE_VERSION() IN ())) ORDER BY ((((vt0.c0)-(t0.c6))) NOT BETWEEN (((t0.c12)/(t0.c12))) AND ('w0')) DESC  NULLS FIRST, t0.c12  NULLS LAST, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((SQLITE_VERSION() IN ())) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((vt0.c0)-(t0.c6))) NOT BETWEEN (((t0.c12)/(t0.c12))) AND ('w0')) DESC  NULLS FIRST, t0.c12  NULLS LAST, vt0.c0 DESC);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((SQLITE_VERSION() IN ())) ORDER BY ((((vt0.c0)-(t0.c6))) NOT BETWEEN (((t0.c12)/(t0.c12))) AND ('w0')) DESC  NULLS FIRST, t0.c12  NULLS LAST, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((SQLITE_VERSION() IN ())) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((vt0.c0)-(t0.c6))) NOT BETWEEN (((t0.c12)/(t0.c12))) AND ('w0')) DESC  NULLS FIRST, t0.c12  NULLS LAST, vt0.c0 DESC);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((SQLITE_VERSION() IN ())) ORDER BY ((((vt0.c0)-(t0.c6))) NOT BETWEEN (((t0.c12)/(t0.c12))) AND ('w0')) DESC  NULLS FIRST, t0.c12  NULLS LAST, vt0.c0 DESC;
SELECT * FROM vt1, t0, vt0 WHERE (((json_object(t0.c6, t0.c12, vt1.c0, vt1.c0, t0.c6, x''))IS((((t0.c12)) BETWEEN ((t0.c12)) AND ((vt0.c0)))))) ORDER BY (~ ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c6))))) DESC  NULLS FIRST, 'UY';
SELECT SUM(count) FROM (SELECT ((((json_object(t0.c6, t0.c12, vt1.c0, vt1.c0, t0.c6, x''))IS((((t0.c12)) BETWEEN ((t0.c12)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (~ ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c6))))) DESC  NULLS FIRST, 'UY');
SELECT * FROM vt1, t0, vt0 WHERE (((json_object(t0.c6, t0.c12, vt1.c0, vt1.c0, t0.c6, x''))IS((((t0.c12)) BETWEEN ((t0.c12)) AND ((vt0.c0)))))) ORDER BY (~ ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c6))))) DESC  NULLS FIRST, 'UY';
SELECT SUM(count) FROM (SELECT ((((json_object(t0.c6, t0.c12, vt1.c0, vt1.c0, t0.c6, x''))IS((((t0.c12)) BETWEEN ((t0.c12)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (~ ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c6))))) DESC  NULLS FIRST, 'UY');
SELECT * FROM vt1, t0, vt0 WHERE (((json_object(t0.c6, t0.c12, vt1.c0, vt1.c0, t0.c6, x''))IS((((t0.c12)) BETWEEN ((t0.c12)) AND ((vt0.c0)))))) ORDER BY (~ ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c6))))) DESC  NULLS FIRST, 'UY';
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (SQLITE_COMPILEOPTION_GET(vt0.c0) IN (((vt1.c0)LIKE(vt0.c0)), vt1.c0 COLLATE NOCASE)) WHERE ((((((NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))))&(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))))&(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (SQLITE_COMPILEOPTION_GET(vt0.c0) IN (((vt1.c0)LIKE(vt0.c0)), vt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (SQLITE_COMPILEOPTION_GET(vt0.c0) IN (((vt1.c0)LIKE(vt0.c0)), vt1.c0 COLLATE NOCASE)) WHERE ((((((NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))))&(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))))&(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (SQLITE_COMPILEOPTION_GET(vt0.c0) IN (((vt1.c0)LIKE(vt0.c0)), vt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (SQLITE_COMPILEOPTION_GET(vt0.c0) IN (((vt1.c0)LIKE(vt0.c0)), vt1.c0 COLLATE NOCASE)) WHERE ((((((NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))))&(vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c6)!=(t0.c12))) IS FALSE)) ORDER BY x'ed7b00a6' ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c6)!=(t0.c12))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY x'ed7b00a6' ASC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c6)!=(t0.c12))) IS FALSE)) ORDER BY x'ed7b00a6' ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c6)!=(t0.c12))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY x'ed7b00a6' ASC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c6)!=(t0.c12))) IS FALSE)) ORDER BY x'ed7b00a6' ASC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c6) ORDER BY t0.c12;
SELECT SUM(count) FROM (SELECT ((t0.c6) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c12);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c6) ORDER BY t0.c12;
SELECT SUM(count) FROM (SELECT ((t0.c6) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c12);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c6) ORDER BY t0.c12;
SELECT * FROM t0, vt1 WHERE (t0.c12) ORDER BY (((vt1.c0 IN ('y{+'))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((t0.c12) IS TRUE)  as count FROM t0, vt1 ORDER BY (((vt1.c0 IN ('y{+'))) NOT NULL));
SELECT * FROM t0, vt1 WHERE (t0.c12) ORDER BY (((vt1.c0 IN ('y{+'))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((t0.c12) IS TRUE)  as count FROM t0, vt1 ORDER BY (((vt1.c0 IN ('y{+'))) NOT NULL));
SELECT * FROM t0, vt1 WHERE (t0.c12) ORDER BY (((vt1.c0 IN ('y{+'))) NOT NULL);
SELECT ALL * FROM vt1 WHERE (COALESCE(((vt1.c0)>=(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY CAST(((vt1.c0)=(vt1.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE(((vt1.c0)>=(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)=(vt1.c0)) AS REAL) ASC);
SELECT ALL * FROM vt1 WHERE (COALESCE(((vt1.c0)>=(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY CAST(((vt1.c0)=(vt1.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE(((vt1.c0)>=(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)=(vt1.c0)) AS REAL) ASC);
SELECT ALL * FROM vt1 WHERE (COALESCE(((vt1.c0)>=(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY CAST(((vt1.c0)=(vt1.c0)) AS REAL) ASC;
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c6)==(t0.c12)))OR(((t0.c6) BETWEEN (t0.c12) AND (t0.c6))))) ORDER BY ((((t0.c12) IS TRUE))GLOB(((vt0.c0)=(t0.c6))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c6)==(t0.c12)))OR(((t0.c6) BETWEEN (t0.c12) AND (t0.c6))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c12) IS TRUE))GLOB(((vt0.c0)==(t0.c6))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c6)==(t0.c12)))OR(((t0.c6) BETWEEN (t0.c12) AND (t0.c6))))) ORDER BY ((((t0.c12) IS TRUE))GLOB(((vt0.c0)=(t0.c6))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c6)==(t0.c12)))OR(((t0.c6) BETWEEN (t0.c12) AND (t0.c6))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c12) IS TRUE))GLOB(((vt0.c0)==(t0.c6))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c6)==(t0.c12)))OR(((t0.c6) BETWEEN (t0.c12) AND (t0.c6))))) ORDER BY ((((t0.c12) IS TRUE))GLOB(((vt0.c0)=(t0.c6))))  NULLS LAST;
SELECT * FROM t0, vt1, vt0 WHERE (((((t0.c6)<=(vt0.c0))) NOT BETWEEN (((t0.c6)>(t0.c6))) AND (((((vt0.c0)AND(vt0.c0)))AND(t0.c6))))) ORDER BY (((((vt1.c0)) BETWEEN ((t0.c12)) AND ((vt1.c0))))<<(((vt1.c0) NOTNULL))) DESC  NULLS FIRST, CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER) DESC, ((((vt0.c0) NOT BETWEEN (-1799373153) AND (t0.c12)))GLOB(((((vt0.c0)OR(vt1.c0)))AND(t0.c6)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c6)<=(vt0.c0))) NOT BETWEEN (((t0.c6)>(t0.c6))) AND (((((vt0.c0)AND(vt0.c0)))AND(t0.c6))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((((vt1.c0)) BETWEEN ((t0.c12)) AND ((vt1.c0))))<<(((vt1.c0) NOTNULL))) DESC  NULLS FIRST, CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER) DESC, ((((vt0.c0) NOT BETWEEN (-1799373153) AND (t0.c12)))GLOB(((((vt0.c0)OR(vt1.c0)))AND(t0.c6)))) ASC  NULLS LAST);
SELECT * FROM t0, vt1, vt0 WHERE (((((t0.c6)<=(vt0.c0))) NOT BETWEEN (((t0.c6)>(t0.c6))) AND (((((vt0.c0)AND(vt0.c0)))AND(t0.c6))))) ORDER BY (((((vt1.c0)) BETWEEN ((t0.c12)) AND ((vt1.c0))))<<(((vt1.c0) NOTNULL))) DESC  NULLS FIRST, CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER) DESC, ((((vt0.c0) NOT BETWEEN (-1799373153) AND (t0.c12)))GLOB(((((vt0.c0)OR(vt1.c0)))AND(t0.c6)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c6)<=(vt0.c0))) NOT BETWEEN (((t0.c6)>(t0.c6))) AND (((((vt0.c0)AND(vt0.c0)))AND(t0.c6))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((((vt1.c0)) BETWEEN ((t0.c12)) AND ((vt1.c0))))<<(((vt1.c0) NOTNULL))) DESC  NULLS FIRST, CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER) DESC, ((((vt0.c0) NOT BETWEEN (-1799373153) AND (t0.c12)))GLOB(((((vt0.c0)OR(vt1.c0)))AND(t0.c6)))) ASC  NULLS LAST);
SELECT * FROM t0, vt1, vt0 WHERE (((((t0.c6)<=(vt0.c0))) NOT BETWEEN (((t0.c6)>(t0.c6))) AND (((((vt0.c0)AND(vt0.c0)))AND(t0.c6))))) ORDER BY (((((vt1.c0)) BETWEEN ((t0.c12)) AND ((vt1.c0))))<<(((vt1.c0) NOTNULL))) DESC  NULLS FIRST, CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER) DESC, ((((vt0.c0) NOT BETWEEN (-1799373153) AND (t0.c12)))GLOB(((((vt0.c0)OR(vt1.c0)))AND(t0.c6)))) ASC  NULLS LAST;
SELECT * FROM vt1, t0 WHERE (((((((t0.c12)AND(t0.c6)))OR(t0.c6)))GLOB((((('0.02149761167582931')OR(vt1.c0)))OR(t0.c6))))) ORDER BY CASE WHEN ((t0.c6)=(t0.c6)) THEN ((((t0.c12)AND(t0.c6)))AND(vt1.c0)) END, ((t0.c6 COLLATE BINARY) NOTNULL), ((((vt1.c0) NOT BETWEEN (t0.c12) AND (vt1.c0)))IS NOT(t0.c6)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c12)AND(t0.c6)))OR(t0.c6)))GLOB((((('0.02149761167582931')OR(vt1.c0)))OR(t0.c6))))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE WHEN ((t0.c6)=(t0.c6)) THEN ((((t0.c12)AND(t0.c6)))AND(vt1.c0)) END, ((t0.c6 COLLATE BINARY) NOTNULL), ((((vt1.c0) NOT BETWEEN (t0.c12) AND (vt1.c0)))IS NOT(t0.c6)) DESC);
SELECT * FROM vt1, t0 WHERE (((((((t0.c12)AND(t0.c6)))OR(t0.c6)))GLOB((((('0.02149761167582931')OR(vt1.c0)))OR(t0.c6))))) ORDER BY CASE WHEN ((t0.c6)=(t0.c6)) THEN ((((t0.c12)AND(t0.c6)))AND(vt1.c0)) END, ((t0.c6 COLLATE BINARY) NOTNULL), ((((vt1.c0) NOT BETWEEN (t0.c12) AND (vt1.c0)))IS NOT(t0.c6)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c12)AND(t0.c6)))OR(t0.c6)))GLOB((((('0.02149761167582931')OR(vt1.c0)))OR(t0.c6))))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE WHEN ((t0.c6)=(t0.c6)) THEN ((((t0.c12)AND(t0.c6)))AND(vt1.c0)) END, ((t0.c6 COLLATE BINARY) NOTNULL), ((((vt1.c0) NOT BETWEEN (t0.c12) AND (vt1.c0)))IS NOT(t0.c6)) DESC);
SELECT * FROM vt1, t0 WHERE (((((((t0.c12)AND(t0.c6)))OR(t0.c6)))GLOB((((('0.02149761167582931')OR(vt1.c0)))OR(t0.c6))))) ORDER BY CASE WHEN ((t0.c6)=(t0.c6)) THEN ((((t0.c12)AND(t0.c6)))AND(vt1.c0)) END, ((t0.c6 COLLATE BINARY) NOTNULL), ((((vt1.c0) NOT BETWEEN (t0.c12) AND (vt1.c0)))IS NOT(t0.c6)) DESC;
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST(((((t0.c6)AND(t0.c6)))AND(t0.c6)) AS REAL)) ORDER BY CASE WHEN ((NULL)+(vt1.c0)) THEN '1165164327' ELSE CAST(x'' AS INTEGER) END ASC  NULLS LAST, (('')+(t0.c6));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c6)AND(t0.c6)))AND(t0.c6)) AS REAL)) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE WHEN ((NULL)+(vt1.c0)) THEN '1165164327' ELSE CAST(x'' AS INTEGER) END ASC  NULLS LAST, (('')+(t0.c6)));
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST(((((t0.c6)AND(t0.c6)))AND(t0.c6)) AS REAL)) ORDER BY CASE WHEN ((NULL)+(vt1.c0)) THEN '1165164327' ELSE CAST(x'' AS INTEGER) END ASC  NULLS LAST, (('')+(t0.c6));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c6)AND(t0.c6)))AND(t0.c6)) AS REAL)) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE WHEN ((NULL)+(vt1.c0)) THEN '1165164327' ELSE CAST(x'' AS INTEGER) END ASC  NULLS LAST, (('')+(t0.c6)));
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST(((((t0.c6)AND(t0.c6)))AND(t0.c6)) AS REAL)) ORDER BY CASE WHEN ((NULL)+(vt1.c0)) THEN '1165164327' ELSE CAST(x'' AS INTEGER) END ASC  NULLS LAST, (('')+(t0.c6));
SELECT * FROM vt0, vt1, t0 WHERE (CASE ((t0.c6)=(vt1.c0))  WHEN CASE NULL  WHEN t0.c6 THEN -21390828 ELSE t0.c12 END THEN ((vt1.c0)|(vt1.c0)) ELSE '^[]' END) ORDER BY 0.15064215116647628;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c6)=(vt1.c0))  WHEN CASE NULL  WHEN t0.c6 THEN -21390828 ELSE t0.c12 END THEN ((vt1.c0)|(vt1.c0)) ELSE '^[]' END) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY 0.15064215116647628);
SELECT * FROM vt0, vt1, t0 WHERE (CASE ((t0.c6)=(vt1.c0))  WHEN CASE NULL  WHEN t0.c6 THEN -21390828 ELSE t0.c12 END THEN ((vt1.c0)|(vt1.c0)) ELSE '^[]' END) ORDER BY 0.15064215116647628;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c6)=(vt1.c0))  WHEN CASE NULL  WHEN t0.c6 THEN -21390828 ELSE t0.c12 END THEN ((vt1.c0)|(vt1.c0)) ELSE '^[]' END) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY 0.15064215116647628);
SELECT * FROM vt0, vt1, t0 WHERE (CASE ((t0.c6)=(vt1.c0))  WHEN CASE NULL  WHEN t0.c6 THEN -21390828 ELSE t0.c12 END THEN ((vt1.c0)|(vt1.c0)) ELSE '^[]' END) ORDER BY 0.15064215116647628;
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN (((vt0.c0)) BETWEEN ((t0.c12)) AND ((t0.c12))) THEN ((NULL) BETWEEN (t0.c12) AND (t0.c12)) WHEN ((vt0.c0) NOT BETWEEN (t0.c12) AND (-4.22865627E8)) THEN ((0.007155305156991365)-(t0.c12)) WHEN '' THEN ((((((((t0.c12)AND(t0.c12)))AND(vt0.c0)))OR(t0.c12)))OR(t0.c12)) END WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN (((vt0.c0)) BETWEEN ((t0.c12)) AND ((t0.c12))) THEN ((NULL) BETWEEN (t0.c12) AND (t0.c12)) WHEN ((vt0.c0) NOT BETWEEN (t0.c12) AND (-4.22865627E8)) THEN ((0.007155305156991365)-(t0.c12)) WHEN '' THEN ((((((((t0.c12)AND(t0.c12)))AND(vt0.c0)))OR(t0.c12)))OR(t0.c12)) END);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN (((vt0.c0)) BETWEEN ((t0.c12)) AND ((t0.c12))) THEN ((NULL) BETWEEN (t0.c12) AND (t0.c12)) WHEN ((vt0.c0) NOT BETWEEN (t0.c12) AND (-4.22865627E8)) THEN ((0.007155305156991365)-(t0.c12)) WHEN '' THEN ((((((((t0.c12)AND(t0.c12)))AND(vt0.c0)))OR(t0.c12)))OR(t0.c12)) END WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN (((vt0.c0)) BETWEEN ((t0.c12)) AND ((t0.c12))) THEN ((NULL) BETWEEN (t0.c12) AND (t0.c12)) WHEN ((vt0.c0) NOT BETWEEN (t0.c12) AND (-4.22865627E8)) THEN ((0.007155305156991365)-(t0.c12)) WHEN '' THEN ((((((((t0.c12)AND(t0.c12)))AND(vt0.c0)))OR(t0.c12)))OR(t0.c12)) END);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN (((vt0.c0)) BETWEEN ((t0.c12)) AND ((t0.c12))) THEN ((NULL) BETWEEN (t0.c12) AND (t0.c12)) WHEN ((vt0.c0) NOT BETWEEN (t0.c12) AND (-4.22865627E8)) THEN ((0.007155305156991365)-(t0.c12)) WHEN '' THEN ((((((((t0.c12)AND(t0.c12)))AND(vt0.c0)))OR(t0.c12)))OR(t0.c12)) END WHERE (NULL);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0)-(vt1.c0))  WHEN vt1.c0 COLLATE BINARY THEN (vt1.c0 IN (x'446f')) ELSE CAST(vt1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)-(vt1.c0))  WHEN vt1.c0 COLLATE BINARY THEN (vt1.c0 IN (x'446f')) ELSE CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0)-(vt1.c0))  WHEN vt1.c0 COLLATE BINARY THEN (vt1.c0 IN (x'446f')) ELSE CAST(vt1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)-(vt1.c0))  WHEN vt1.c0 COLLATE BINARY THEN (vt1.c0 IN (x'446f')) ELSE CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0)-(vt1.c0))  WHEN vt1.c0 COLLATE BINARY THEN (vt1.c0 IN (x'446f')) ELSE CAST(vt1.c0 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM t0, vt1 NATURAL JOIN vt0 WHERE (HEX(vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((HEX(vt1.c0)) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0, vt1 NATURAL JOIN vt0 WHERE (HEX(vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((HEX(vt1.c0)) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0, vt1 NATURAL JOIN vt0 WHERE (HEX(vt1.c0));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ('-1545553049');
SELECT SUM(count) FROM (SELECT (('-1545553049') IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ('-1545553049');
SELECT SUM(count) FROM (SELECT (('-1545553049') IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ('-1545553049');
SELECT ALL * FROM vt0 CROSS JOIN t0 ON json_object(CAST(vt0.c0 AS BLOB), CAST(vt1.c0 AS NUMERIC), x'', ((vt0.c0)!=(t0.c12))) INNER JOIN vt1 ON ((t0.c12)<((t0.c12 IN (t0.c12)))) WHERE (((((t0.c6)|(t0.c6)))&(((((t0.c12)AND(t0.c6)))AND(807056800)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c6)|(t0.c6)))&(((((t0.c12)AND(t0.c6)))AND(807056800))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON json_object(CAST(vt0.c0 AS BLOB), CAST(vt1.c0 AS NUMERIC), x'', ((vt0.c0)!=(t0.c12))) INNER JOIN vt1 ON ((t0.c12)<((t0.c12 IN (t0.c12)))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON json_object(CAST(vt0.c0 AS BLOB), CAST(vt1.c0 AS NUMERIC), x'', ((vt0.c0)!=(t0.c12))) INNER JOIN vt1 ON ((t0.c12)<((t0.c12 IN (t0.c12)))) WHERE (((((t0.c6)|(t0.c6)))&(((((t0.c12)AND(t0.c6)))AND(807056800)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c6)|(t0.c6)))&(((((t0.c12)AND(t0.c6)))AND(807056800))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON json_object(CAST(vt0.c0 AS BLOB), CAST(vt1.c0 AS NUMERIC), x'', ((vt0.c0)!=(t0.c12))) INNER JOIN vt1 ON ((t0.c12)<((t0.c12 IN (t0.c12)))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON json_object(CAST(vt0.c0 AS BLOB), CAST(vt1.c0 AS NUMERIC), x'', ((vt0.c0)!=(t0.c12))) INNER JOIN vt1 ON ((t0.c12)<((t0.c12 IN (t0.c12)))) WHERE (((((t0.c6)|(t0.c6)))&(((((t0.c12)AND(t0.c6)))AND(807056800)))));
SELECT * FROM vt1, vt0 WHERE (CAST(((vt0.c0)>(vt1.c0)) AS REAL)) ORDER BY ((((CAST(vt1.c0 AS BLOB))OR(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0)LIKE(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((CAST(vt1.c0 AS BLOB))OR(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0)LIKE(vt1.c0)))) ASC);
SELECT * FROM vt1, vt0 WHERE (CAST(((vt0.c0)>(vt1.c0)) AS REAL)) ORDER BY ((((CAST(vt1.c0 AS BLOB))OR(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0)LIKE(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((CAST(vt1.c0 AS BLOB))OR(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0)LIKE(vt1.c0)))) ASC);
SELECT * FROM vt1, vt0 WHERE (CAST(((vt0.c0)>(vt1.c0)) AS REAL)) ORDER BY ((((CAST(vt1.c0 AS BLOB))OR(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0)LIKE(vt1.c0)))) ASC;
SELECT * FROM t0, vt1 CROSS JOIN vt0 ON (((t0.c6 IN (t0.c12, vt1.c0)))>=(t0.c12 COLLATE BINARY)) WHERE (((((((((t0.c6)AND(vt1.c0)))OR(t0.c12)))AND(vt0.c0)))AND(t0.c6)) COLLATE NOCASE) ORDER BY NULLIF(DISTINCT vt1.c0, t0.c6) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c6)AND(vt1.c0)))OR(t0.c12)))AND(vt0.c0)))AND(t0.c6)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON (((t0.c6 IN (t0.c12, vt1.c0)))>=(t0.c12 COLLATE BINARY)) ORDER BY NULLIF(DISTINCT vt1.c0, t0.c6) COLLATE BINARY  NULLS LAST);
SELECT * FROM t0, vt1 CROSS JOIN vt0 ON (((t0.c6 IN (t0.c12, vt1.c0)))>=(t0.c12 COLLATE BINARY)) WHERE (((((((((t0.c6)AND(vt1.c0)))OR(t0.c12)))AND(vt0.c0)))AND(t0.c6)) COLLATE NOCASE) ORDER BY NULLIF(DISTINCT vt1.c0, t0.c6) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c6)AND(vt1.c0)))OR(t0.c12)))AND(vt0.c0)))AND(t0.c6)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON (((t0.c6 IN (t0.c12, vt1.c0)))>=(t0.c12 COLLATE BINARY)) ORDER BY NULLIF(DISTINCT vt1.c0, t0.c6) COLLATE BINARY  NULLS LAST);
SELECT * FROM t0, vt1 CROSS JOIN vt0 ON (((t0.c6 IN (t0.c12, vt1.c0)))>=(t0.c12 COLLATE BINARY)) WHERE (((((((((t0.c6)AND(vt1.c0)))OR(t0.c12)))AND(vt0.c0)))AND(t0.c6)) COLLATE NOCASE) ORDER BY NULLIF(DISTINCT vt1.c0, t0.c6) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN json_valid(vt1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN json_valid(vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN json_valid(vt1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN json_valid(vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN json_valid(vt1.c0) END);
SELECT ALL * FROM t0 INNER JOIN vt0 ON UPPER(DISTINCT x'e777') RIGHT OUTER JOIN vt1 ON (+ (t0.c6)) WHERE ((((+ (t0.c12))) BETWEEN ((vt0.c0 IN (vt1.c0))) AND ((~ (vt0.c0))))) ORDER BY IFNULL(DISTINCT CAST(vt1.c0 AS TEXT), ((((t0.c6)OR(vt1.c0)))OR(vt1.c0))) DESC, CAST(((t0.c6) ISNULL) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c12))) BETWEEN ((vt0.c0 IN (vt1.c0))) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON UPPER(DISTINCT x'e777') RIGHT OUTER JOIN vt1 ON (+ (t0.c6)) ORDER BY IFNULL(DISTINCT CAST(vt1.c0 AS TEXT), ((((t0.c6)OR(vt1.c0)))OR(vt1.c0))) DESC, CAST(((t0.c6) ISNULL) AS NUMERIC));
SELECT ALL * FROM t0 INNER JOIN vt0 ON UPPER(DISTINCT x'e777') RIGHT OUTER JOIN vt1 ON (+ (t0.c6)) WHERE ((((+ (t0.c12))) BETWEEN ((vt0.c0 IN (vt1.c0))) AND ((~ (vt0.c0))))) ORDER BY IFNULL(DISTINCT CAST(vt1.c0 AS TEXT), ((((t0.c6)OR(vt1.c0)))OR(vt1.c0))) DESC, CAST(((t0.c6) ISNULL) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c12))) BETWEEN ((vt0.c0 IN (vt1.c0))) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON UPPER(DISTINCT x'e777') RIGHT OUTER JOIN vt1 ON (+ (t0.c6)) ORDER BY IFNULL(DISTINCT CAST(vt1.c0 AS TEXT), ((((t0.c6)OR(vt1.c0)))OR(vt1.c0))) DESC, CAST(((t0.c6) ISNULL) AS NUMERIC));
SELECT ALL * FROM t0 INNER JOIN vt0 ON UPPER(DISTINCT x'e777') RIGHT OUTER JOIN vt1 ON (+ (t0.c6)) WHERE ((((+ (t0.c12))) BETWEEN ((vt0.c0 IN (vt1.c0))) AND ((~ (vt0.c0))))) ORDER BY IFNULL(DISTINCT CAST(vt1.c0 AS TEXT), ((((t0.c6)OR(vt1.c0)))OR(vt1.c0))) DESC, CAST(((t0.c6) ISNULL) AS NUMERIC);
SELECT COUNT(*) FROM vt1, t0 WHERE ((('550007358')IS(t0.c12 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((('550007358')IS(t0.c12 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((('550007358')IS(t0.c12 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((('550007358')IS(t0.c12 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((('550007358')IS(t0.c12 COLLATE RTRIM)));
SELECT * FROM vt1, t0 WHERE ((((((vt1.c0)AND(t0.c6)))OR(t0.c6)) IN ())) ORDER BY ((((((t0.c12)OR(t0.c12)))AND(t0.c6)))LIKE((((t0.c12)) BETWEEN ((t0.c6)) AND ((vt1.c0))))) DESC  NULLS FIRST, '1882008133' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)AND(t0.c6)))OR(t0.c6)) IN ())) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((t0.c12)OR(t0.c12)))AND(t0.c6)))LIKE((((t0.c12)) BETWEEN ((t0.c6)) AND ((vt1.c0))))) DESC  NULLS FIRST, '1882008133' ASC  NULLS FIRST);
SELECT * FROM vt1, t0 WHERE ((((((vt1.c0)AND(t0.c6)))OR(t0.c6)) IN ())) ORDER BY ((((((t0.c12)OR(t0.c12)))AND(t0.c6)))LIKE((((t0.c12)) BETWEEN ((t0.c6)) AND ((vt1.c0))))) DESC  NULLS FIRST, '1882008133' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)AND(t0.c6)))OR(t0.c6)) IN ())) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((t0.c12)OR(t0.c12)))AND(t0.c6)))LIKE((((t0.c12)) BETWEEN ((t0.c6)) AND ((vt1.c0))))) DESC  NULLS FIRST, '1882008133' ASC  NULLS FIRST);
SELECT * FROM vt1, t0 WHERE ((((((vt1.c0)AND(t0.c6)))OR(t0.c6)) IN ())) ORDER BY ((((((t0.c12)OR(t0.c12)))AND(t0.c6)))LIKE((((t0.c12)) BETWEEN ((t0.c6)) AND ((vt1.c0))))) DESC  NULLS FIRST, '1882008133' ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (json_quote(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((json_quote(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (json_quote(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((json_quote(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (json_quote(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN (((vt1.c0, vt0.c0, 98915418)) NOT BETWEEN ((vt1.c0, vt1.c0, x'')) AND ((vt1.c0, vt1.c0, vt1.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END) ORDER BY '4''_m''QL*U' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN (((vt1.c0, vt0.c0, 98915418)) NOT BETWEEN ((vt1.c0, vt1.c0, x'')) AND ((vt1.c0, vt1.c0, vt1.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY '4''_m''QL*U' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN (((vt1.c0, vt0.c0, 98915418)) NOT BETWEEN ((vt1.c0, vt1.c0, x'')) AND ((vt1.c0, vt1.c0, vt1.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END) ORDER BY '4''_m''QL*U' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN (((vt1.c0, vt0.c0, 98915418)) NOT BETWEEN ((vt1.c0, vt1.c0, x'')) AND ((vt1.c0, vt1.c0, vt1.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY '4''_m''QL*U' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN (((vt1.c0, vt0.c0, 98915418)) NOT BETWEEN ((vt1.c0, vt1.c0, x'')) AND ((vt1.c0, vt1.c0, vt1.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END) ORDER BY '4''_m''QL*U' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c6)OR(t0.c12)))OR(t0.c12)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((t0.c6)OR(t0.c12)))OR(t0.c12)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c6)OR(t0.c12)))OR(t0.c12)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((t0.c6)OR(t0.c12)))OR(t0.c12)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c6)OR(t0.c12)))OR(t0.c12)) IN ()));
SELECT * FROM vt1 WHERE ((((((x'' IN (vt1.c0, vt1.c0)))AND(vt1.c0 COLLATE RTRIM)))AND((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'' IN (vt1.c0, vt1.c0)))AND(vt1.c0 COLLATE RTRIM)))AND((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((x'' IN (vt1.c0, vt1.c0)))AND(vt1.c0 COLLATE RTRIM)))AND((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'' IN (vt1.c0, vt1.c0)))AND(vt1.c0 COLLATE RTRIM)))AND((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((x'' IN (vt1.c0, vt1.c0)))AND(vt1.c0 COLLATE RTRIM)))AND((- (vt1.c0)))));
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c12)) NOT BETWEEN ((((t0.c6)GLOB(-2053011839)))) AND ((((vt0.c0) BETWEEN (t0.c12) AND ('?w1Lx%S6')))))) ORDER BY (((((('C')OR(t0.c12)))AND(t0.c12)))|((+ (t0.c12))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c12)) NOT BETWEEN ((((t0.c6)GLOB(-2053011839)))) AND ((((vt0.c0) BETWEEN (t0.c12) AND ('?w1Lx%S6')))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((('C')OR(t0.c12)))AND(t0.c12)))|((+ (t0.c12))))  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c12)) NOT BETWEEN ((((t0.c6)GLOB(-2053011839)))) AND ((((vt0.c0) BETWEEN (t0.c12) AND ('?w1Lx%S6')))))) ORDER BY (((((('C')OR(t0.c12)))AND(t0.c12)))|((+ (t0.c12))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c12)) NOT BETWEEN ((((t0.c6)GLOB(-2053011839)))) AND ((((vt0.c0) BETWEEN (t0.c12) AND ('?w1Lx%S6')))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((('C')OR(t0.c12)))AND(t0.c12)))|((+ (t0.c12))))  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c12)) NOT BETWEEN ((((t0.c6)GLOB(-2053011839)))) AND ((((vt0.c0) BETWEEN (t0.c12) AND ('?w1Lx%S6')))))) ORDER BY (((((('C')OR(t0.c12)))AND(t0.c12)))|((+ (t0.c12))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL));
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON (~ (NULL)) COLLATE RTRIM WHERE (TRIM(vt1.c0 COLLATE RTRIM)) ORDER BY ((t0.c6 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((TRIM(vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (~ (NULL)) COLLATE RTRIM ORDER BY ((t0.c6 IN ()) IN ()));
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON (~ (NULL)) COLLATE RTRIM WHERE (TRIM(vt1.c0 COLLATE RTRIM)) ORDER BY ((t0.c6 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((TRIM(vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (~ (NULL)) COLLATE RTRIM ORDER BY ((t0.c6 IN ()) IN ()));
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON (~ (NULL)) COLLATE RTRIM WHERE (TRIM(vt1.c0 COLLATE RTRIM)) ORDER BY ((t0.c6 IN ()) IN ());
SELECT ALL COUNT(*) FROM vt0, vt1 NOT INDEXED, t0 WHERE (CASE WHEN (('')==(t0.c12)) THEN ((vt0.c0)IS(vt1.c0)) END) ORDER BY CASE WHEN ((t0.c6) BETWEEN (t0.c6) AND (vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN t0.c6 COLLATE NOCASE THEN CAST(vt1.c0 AS REAL) WHEN vt1.c0 COLLATE NOCASE THEN ((('1112653832', vt1.c0, vt1.c0))<((vt1.c0, vt0.c0, t0.c6))) END, (~ (NULL)) ASC, (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('')=(t0.c12)) THEN ((vt0.c0)IS(vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CASE WHEN ((t0.c6) BETWEEN (t0.c6) AND (vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN t0.c6 COLLATE NOCASE THEN CAST(vt1.c0 AS REAL) WHEN vt1.c0 COLLATE NOCASE THEN ((('1112653832', vt1.c0, vt1.c0))<((vt1.c0, vt0.c0, t0.c6))) END, (~ (NULL)) ASC, (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 NOT INDEXED, t0 WHERE (CASE WHEN (('')==(t0.c12)) THEN ((vt0.c0)IS(vt1.c0)) END) ORDER BY CASE WHEN ((t0.c6) BETWEEN (t0.c6) AND (vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN t0.c6 COLLATE NOCASE THEN CAST(vt1.c0 AS REAL) WHEN vt1.c0 COLLATE NOCASE THEN ((('1112653832', vt1.c0, vt1.c0))<((vt1.c0, vt0.c0, t0.c6))) END, (~ (NULL)) ASC, (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('')=(t0.c12)) THEN ((vt0.c0)IS(vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CASE WHEN ((t0.c6) BETWEEN (t0.c6) AND (vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN t0.c6 COLLATE NOCASE THEN CAST(vt1.c0 AS REAL) WHEN vt1.c0 COLLATE NOCASE THEN ((('1112653832', vt1.c0, vt1.c0))<((vt1.c0, vt0.c0, t0.c6))) END, (~ (NULL)) ASC, (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 NOT INDEXED, t0 WHERE (CASE WHEN (('')==(t0.c12)) THEN ((vt0.c0)IS(vt1.c0)) END) ORDER BY CASE WHEN ((t0.c6) BETWEEN (t0.c6) AND (vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN t0.c6 COLLATE NOCASE THEN CAST(vt1.c0 AS REAL) WHEN vt1.c0 COLLATE NOCASE THEN ((('1112653832', vt1.c0, vt1.c0))<((vt1.c0, vt0.c0, t0.c6))) END, (~ (NULL)) ASC, (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c12)OR(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY (((((t0.c12))>=((NULL))))IS NOT((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c12)OR(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c12))>=((NULL))))IS NOT((vt0.c0 IN ()))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c12)OR(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY (((((t0.c12))>=((NULL))))IS NOT((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c12)OR(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c12))>=((NULL))))IS NOT((vt0.c0 IN ()))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c12)OR(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY (((((t0.c12))>=((NULL))))IS NOT((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CASE WHEN vt0.c0 THEN t0.c12 ELSE t0.c6 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN t0.c12 ELSE t0.c6 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CASE WHEN vt0.c0 THEN t0.c12 ELSE t0.c6 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN t0.c12 ELSE t0.c6 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CASE WHEN vt0.c0 THEN t0.c12 ELSE t0.c6 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ('541977133') ORDER BY json_remove(vt1.c0, t0.c12, t0.c12, t0.c12) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('541977133') IS TRUE)  as count FROM vt1, t0 ORDER BY json_remove(vt1.c0, t0.c12, t0.c12, t0.c12) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ('541977133') ORDER BY json_remove(vt1.c0, t0.c12, t0.c12, t0.c12) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('541977133') IS TRUE)  as count FROM vt1, t0 ORDER BY json_remove(vt1.c0, t0.c12, t0.c12, t0.c12) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ('541977133') ORDER BY json_remove(vt1.c0, t0.c12, t0.c12, t0.c12) COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM vt1 INDEXED BY i72, vt0, t0 WHERE (((((x'506a')&(vt0.c0)))/((((vt1.c0, t0.c6, vt1.c0, t0.c6, t0.c12)) NOT BETWEEN ((vt0.c0, vt0.c0, t0.c12, vt1.c0, t0.c12)) AND ((t0.c6, t0.c6, t0.c12, x'', vt1.c0)))))) ORDER BY (((- (t0.c6)))>(CAST(t0.c6 AS BLOB))) DESC, (((vt1.c0 IN ())) IS FALSE)  NULLS FIRST, ((vt1.c0) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((x'506a')&(vt0.c0)))/((((vt1.c0, t0.c6, vt1.c0, t0.c6, t0.c12)) NOT BETWEEN ((vt0.c0, vt0.c0, t0.c12, vt1.c0, t0.c12)) AND ((t0.c6, t0.c6, t0.c12, x'', vt1.c0)))))) IS TRUE)  as count FROM vt1 INDEXED BY i72, vt0, t0 ORDER BY (((- (t0.c6)))>(CAST(t0.c6 AS BLOB))) DESC, (((vt1.c0 IN ())) IS FALSE)  NULLS FIRST, ((vt1.c0) NOTNULL));
SELECT COUNT(*) FROM vt1 INDEXED BY i72, vt0, t0 WHERE (((((x'506a')&(vt0.c0)))/((((vt1.c0, t0.c6, vt1.c0, t0.c6, t0.c12)) NOT BETWEEN ((vt0.c0, vt0.c0, t0.c12, vt1.c0, t0.c12)) AND ((t0.c6, t0.c6, t0.c12, x'', vt1.c0)))))) ORDER BY (((- (t0.c6)))>(CAST(t0.c6 AS BLOB))) DESC, (((vt1.c0 IN ())) IS FALSE)  NULLS FIRST, ((vt1.c0) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((x'506a')&(vt0.c0)))/((((vt1.c0, t0.c6, vt1.c0, t0.c6, t0.c12)) NOT BETWEEN ((vt0.c0, vt0.c0, t0.c12, vt1.c0, t0.c12)) AND ((t0.c6, t0.c6, t0.c12, x'', vt1.c0)))))) IS TRUE)  as count FROM vt1 INDEXED BY i72, vt0, t0 ORDER BY (((- (t0.c6)))>(CAST(t0.c6 AS BLOB))) DESC, (((vt1.c0 IN ())) IS FALSE)  NULLS FIRST, ((vt1.c0) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE ((NOT (STRFTIME(vt0.c0, vt0.c0, vt0.c0)))) ORDER BY (+ (CASE WHEN vt0.c0 THEN 0.761845666941261 ELSE vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (STRFTIME(vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (+ (CASE WHEN vt0.c0 THEN 0.761845666941261 ELSE vt0.c0 END)) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (STRFTIME(vt0.c0, vt0.c0, vt0.c0)))) ORDER BY (+ (CASE WHEN vt0.c0 THEN 0.761845666941261 ELSE vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (STRFTIME(vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (+ (CASE WHEN vt0.c0 THEN 0.761845666941261 ELSE vt0.c0 END)) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (STRFTIME(vt0.c0, vt0.c0, vt0.c0)))) ORDER BY (+ (CASE WHEN vt0.c0 THEN 0.761845666941261 ELSE vt0.c0 END)) ASC;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0)<=(vt1.c0)))) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((vt1.c0)<=(vt1.c0)))) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0)<=(vt1.c0)))) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((vt1.c0)<=(vt1.c0)))) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0)<=(vt1.c0)))) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))));
SELECT ALL * FROM vt1, t0 WHERE ((((vt1.c0)IS(t0.c6)) IN (((NULL) ISNULL), t0.c6 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)IS(t0.c6)) IN (((NULL) ISNULL), t0.c6 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((vt1.c0)IS(t0.c6)) IN (((NULL) ISNULL), t0.c6 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)IS(t0.c6)) IN (((NULL) ISNULL), t0.c6 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((vt1.c0)IS(t0.c6)) IN (((NULL) ISNULL), t0.c6 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (((vt0.c0)>>(vt0.c0)))) FULL OUTER JOIN t0 ON (((t0.c12)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c6))))) AND ((((vt1.c0)IS(1306635235))))) WHERE ((((vt0.c0, (((vt1.c0))<((t0.c6))), ((t0.c6) BETWEEN (t0.c6) AND (vt1.c0))))>((t0.c12 COLLATE BINARY, (t0.c6 IN (t0.c12, 0.19234335978876915)), ((vt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, (((vt1.c0))<((t0.c6))), ((t0.c6) BETWEEN (t0.c6) AND (vt1.c0))))>((t0.c12 COLLATE BINARY, (t0.c6 IN (t0.c12, 0.19234335978876915)), ((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (((vt0.c0)>>(vt0.c0)))) FULL OUTER JOIN t0 ON (((t0.c12)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c6))))) AND ((((vt1.c0)IS(1306635235))))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (((vt0.c0)>>(vt0.c0)))) FULL OUTER JOIN t0 ON (((t0.c12)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c6))))) AND ((((vt1.c0)IS(1306635235))))) WHERE ((((vt0.c0, (((vt1.c0))<((t0.c6))), ((t0.c6) BETWEEN (t0.c6) AND (vt1.c0))))>((t0.c12 COLLATE BINARY, (t0.c6 IN (t0.c12, 0.19234335978876915)), ((vt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, (((vt1.c0))<((t0.c6))), ((t0.c6) BETWEEN (t0.c6) AND (vt1.c0))))>((t0.c12 COLLATE BINARY, (t0.c6 IN (t0.c12, 0.19234335978876915)), ((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (((vt0.c0)>>(vt0.c0)))) FULL OUTER JOIN t0 ON (((t0.c12)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c6))))) AND ((((vt1.c0)IS(1306635235))))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (~ (((vt0.c0)>>(vt0.c0)))) FULL OUTER JOIN t0 ON (((t0.c12)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c6))))) AND ((((vt1.c0)IS(1306635235))))) WHERE ((((vt0.c0, (((vt1.c0))<((t0.c6))), ((t0.c6) BETWEEN (t0.c6) AND (vt1.c0))))>((t0.c12 COLLATE BINARY, (t0.c6 IN (t0.c12, 0.19234335978876915)), ((vt0.c0) IS TRUE)))));
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((((vt1.c0)>(t0.c12)))>=(((vt1.c0)LIKE(t0.c6)))) RIGHT OUTER JOIN vt1 ON (CASE vt0.c0  WHEN x'4a2d' THEN vt0.c0 WHEN t0.c12 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END IN ()) WHERE ((((vt1.c0, t0.c12, t0.c12)) BETWEEN ((vt1.c0, vt0.c0 COLLATE NOCASE, '' COLLATE RTRIM)) AND ((((t0.c6) NOT BETWEEN (t0.c12) AND (NULL)), ((t0.c12)GLOB(t0.c6)), ((((vt1.c0)AND(t0.c12)))OR(vt0.c0)))))) ORDER BY LIKELIHOOD(CASE t0.c6  WHEN t0.c6 THEN vt1.c0 WHEN 0.6556600993095454 THEN t0.c6 WHEN vt0.c0 THEN vt0.c0 END, 0.7514028009032623) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, t0.c12, t0.c12)) BETWEEN ((vt1.c0, vt0.c0 COLLATE NOCASE, '' COLLATE RTRIM)) AND ((((t0.c6) NOT BETWEEN (t0.c12) AND (NULL)), ((t0.c12)GLOB(t0.c6)), ((((vt1.c0)AND(t0.c12)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((vt1.c0)>(t0.c12)))>=(((vt1.c0)LIKE(t0.c6)))) RIGHT OUTER JOIN vt1 ON (CASE vt0.c0  WHEN x'4a2d' THEN vt0.c0 WHEN t0.c12 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END IN ()) ORDER BY LIKELIHOOD(CASE t0.c6  WHEN t0.c6 THEN vt1.c0 WHEN 0.6556600993095454 THEN t0.c6 WHEN vt0.c0 THEN vt0.c0 END, 0.7514028009032623) ASC);
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((((vt1.c0)>(t0.c12)))>=(((vt1.c0)LIKE(t0.c6)))) RIGHT OUTER JOIN vt1 ON (CASE vt0.c0  WHEN x'4a2d' THEN vt0.c0 WHEN t0.c12 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END IN ()) WHERE ((((vt1.c0, t0.c12, t0.c12)) BETWEEN ((vt1.c0, vt0.c0 COLLATE NOCASE, '' COLLATE RTRIM)) AND ((((t0.c6) NOT BETWEEN (t0.c12) AND (NULL)), ((t0.c12)GLOB(t0.c6)), ((((vt1.c0)AND(t0.c12)))OR(vt0.c0)))))) ORDER BY LIKELIHOOD(CASE t0.c6  WHEN t0.c6 THEN vt1.c0 WHEN 0.6556600993095454 THEN t0.c6 WHEN vt0.c0 THEN vt0.c0 END, 0.7514028009032623) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, t0.c12, t0.c12)) BETWEEN ((vt1.c0, vt0.c0 COLLATE NOCASE, '' COLLATE RTRIM)) AND ((((t0.c6) NOT BETWEEN (t0.c12) AND (NULL)), ((t0.c12)GLOB(t0.c6)), ((((vt1.c0)AND(t0.c12)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((vt1.c0)>(t0.c12)))>=(((vt1.c0)LIKE(t0.c6)))) RIGHT OUTER JOIN vt1 ON (CASE vt0.c0  WHEN x'4a2d' THEN vt0.c0 WHEN t0.c12 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END IN ()) ORDER BY LIKELIHOOD(CASE t0.c6  WHEN t0.c6 THEN vt1.c0 WHEN 0.6556600993095454 THEN t0.c6 WHEN vt0.c0 THEN vt0.c0 END, 0.7514028009032623) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN t0 ON (((vt1.c0 IN ()))|('-1865266700')) WHERE (((((t0.c6)-(vt0.c0))) BETWEEN (((vt0.c0)<(vt1.c0))) AND (vt1.c0 COLLATE NOCASE))) ORDER BY ((CASE WHEN vt0.c0 THEN t0.c12 ELSE vt0.c0 END)IS(((t0.c6) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c6)-(vt0.c0))) BETWEEN (((vt0.c0)<(vt1.c0))) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON (((vt1.c0 IN ()))|('-1865266700')) ORDER BY ((CASE WHEN vt0.c0 THEN t0.c12 ELSE vt0.c0 END)IS(((t0.c6) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN t0 ON (((vt1.c0 IN ()))|('-1865266700')) WHERE (((((t0.c6)-(vt0.c0))) BETWEEN (((vt0.c0)<(vt1.c0))) AND (vt1.c0 COLLATE NOCASE))) ORDER BY ((CASE WHEN vt0.c0 THEN t0.c12 ELSE vt0.c0 END)IS(((t0.c6) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c6)-(vt0.c0))) BETWEEN (((vt0.c0)<(vt1.c0))) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON (((vt1.c0 IN ()))|('-1865266700')) ORDER BY ((CASE WHEN vt0.c0 THEN t0.c12 ELSE vt0.c0 END)IS(((t0.c6) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN t0 ON (((vt1.c0 IN ()))|('-1865266700')) WHERE (((((t0.c6)-(vt0.c0))) BETWEEN (((vt0.c0)<(vt1.c0))) AND (vt1.c0 COLLATE NOCASE))) ORDER BY ((CASE WHEN vt0.c0 THEN t0.c12 ELSE vt0.c0 END)IS(((t0.c6) NOT NULL))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON ((IFNULL(DISTINCT t0.c12, vt1.c0)) NOT BETWEEN ((t0.c6 IN ())) AND ((NOT (vt1.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((IFNULL(DISTINCT t0.c12, vt1.c0)) NOT BETWEEN ((t0.c6 IN ())) AND ((NOT (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON ((IFNULL(DISTINCT t0.c12, vt1.c0)) NOT BETWEEN ((t0.c6 IN ())) AND ((NOT (vt1.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((IFNULL(DISTINCT t0.c12, vt1.c0)) NOT BETWEEN ((t0.c6 IN ())) AND ((NOT (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON ((IFNULL(DISTINCT t0.c12, vt1.c0)) NOT BETWEEN ((t0.c6 IN ())) AND ((NOT (vt1.c0)))) WHERE (NULL);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c12)>>(t0.c6)) AS BLOB)) ORDER BY (CASE WHEN t0.c12 THEN x'e645' ELSE NULL END IN ((((t0.c6, t0.c12, '-542914950'))<((t0.c12, t0.c12, t0.c6))))), x'97f0' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c12)>>(t0.c6)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY (CASE WHEN t0.c12 THEN x'e645' ELSE NULL END IN ((((t0.c6, t0.c12, '-542914950'))<((t0.c12, t0.c12, t0.c6))))), x'97f0' DESC);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c12)>>(t0.c6)) AS BLOB)) ORDER BY (CASE WHEN t0.c12 THEN x'e645' ELSE NULL END IN ((((t0.c6, t0.c12, '-542914950'))<((t0.c12, t0.c12, t0.c6))))), x'97f0' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c12)>>(t0.c6)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY (CASE WHEN t0.c12 THEN x'e645' ELSE NULL END IN ((((t0.c6, t0.c12, '-542914950'))<((t0.c12, t0.c12, t0.c6))))), x'97f0' DESC);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c12)>>(t0.c6)) AS BLOB)) ORDER BY (CASE WHEN t0.c12 THEN x'e645' ELSE NULL END IN ((((t0.c6, t0.c12, '-542914950'))<((t0.c12, t0.c12, t0.c6))))), x'97f0' DESC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((vt0.c0 COLLATE RTRIM))>=((((1.085842703E9) NOT NULL)))) WHERE (((((((((0.07080454744042264)AND(CAST(vt0.c0 AS TEXT))))OR(json_array_length(vt0.c0))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0)))))) ORDER BY (vt0.c0 IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.07080454744042264)AND(CAST(vt0.c0 AS TEXT))))OR(json_array_length(vt0.c0))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((vt0.c0 COLLATE RTRIM))>=((((1.085842703E9) NOT NULL)))) ORDER BY (vt0.c0 IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((vt0.c0 COLLATE RTRIM))>=((((1.085842703E9) NOT NULL)))) WHERE (((((((((0.07080454744042264)AND(CAST(vt0.c0 AS TEXT))))OR(json_array_length(vt0.c0))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0)))))) ORDER BY (vt0.c0 IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.07080454744042264)AND(CAST(vt0.c0 AS TEXT))))OR(json_array_length(vt0.c0))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((vt0.c0 COLLATE RTRIM))>=((((1.085842703E9) NOT NULL)))) ORDER BY (vt0.c0 IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0)<(t0.c6))) NOT NULL)) ORDER BY ((((load_extension(vt0.c0))AND(vt0.c0)))OR(((t0.c6)==(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(t0.c6))) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((load_extension(vt0.c0))AND(vt0.c0)))OR(((t0.c6)=(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0)<(t0.c6))) NOT NULL)) ORDER BY ((((load_extension(vt0.c0))AND(vt0.c0)))OR(((t0.c6)==(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(t0.c6))) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((load_extension(vt0.c0))AND(vt0.c0)))OR(((t0.c6)=(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)!=('-1352537443'))) BETWEEN (((vt1.c0)-(vt1.c0))) AND ((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)!=('-1352537443'))) BETWEEN (((vt1.c0)-(vt1.c0))) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)!=('-1352537443'))) BETWEEN (((vt1.c0)-(vt1.c0))) AND ((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)!=('-1352537443'))) BETWEEN (((vt1.c0)-(vt1.c0))) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)!=('-1352537443'))) BETWEEN (((vt1.c0)-(vt1.c0))) AND ((~ (vt1.c0)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((vt0.c0)OR(t0.c6)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR(t0.c6)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((vt0.c0)OR(t0.c6)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR(t0.c6)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((vt0.c0)OR(t0.c6)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, t0 CROSS JOIN vt1 ON ((NOT (vt1.c0)) IN ()) WHERE (((((vt0.c0)=(t0.c6))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)=(t0.c6))) NOTNULL)) IS TRUE)  as count FROM vt0, t0 CROSS JOIN vt1 ON ((NOT (vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt0, t0 CROSS JOIN vt1 ON ((NOT (vt1.c0)) IN ()) WHERE (((((vt0.c0)=(t0.c6))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)=(t0.c6))) NOTNULL)) IS TRUE)  as count FROM vt0, t0 CROSS JOIN vt1 ON ((NOT (vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt0, t0 CROSS JOIN vt1 ON ((NOT (vt1.c0)) IN ()) WHERE (((((vt0.c0)=(t0.c6))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN t0 ON CAST((((0.1924301909057965, vt0.c0, vt1.c0))<=((t0.c6, t0.c12, t0.c6))) AS REAL) WHERE (0Xffffffffc0f8d669) ORDER BY CAST(CASE WHEN t0.c12 THEN x'b4b5' END AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffc0f8d669) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t0 ON CAST((((0.1924301909057965, vt0.c0, vt1.c0))<=((t0.c6, t0.c12, t0.c6))) AS REAL) ORDER BY CAST(CASE WHEN t0.c12 THEN x'b4b5' END AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN t0 ON CAST((((0.1924301909057965, vt0.c0, vt1.c0))<=((t0.c6, t0.c12, t0.c6))) AS REAL) WHERE (0Xffffffffc0f8d669) ORDER BY CAST(CASE WHEN t0.c12 THEN x'b4b5' END AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffc0f8d669) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t0 ON CAST((((0.1924301909057965, vt0.c0, vt1.c0))<=((t0.c6, t0.c12, t0.c6))) AS REAL) ORDER BY CAST(CASE WHEN t0.c12 THEN x'b4b5' END AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN t0 ON CAST((((0.1924301909057965, vt0.c0, vt1.c0))<=((t0.c6, t0.c12, t0.c6))) AS REAL) WHERE (0Xffffffffc0f8d669) ORDER BY CAST(CASE WHEN t0.c12 THEN x'b4b5' END AS INTEGER);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN vt1.c0 ELSE ((vt0.c0)<(t0.c6)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) IS FALSE) THEN vt1.c0 ELSE ((vt0.c0)<(t0.c6)) END) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN vt1.c0 ELSE ((vt0.c0)<(t0.c6)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) IS FALSE) THEN vt1.c0 ELSE ((vt0.c0)<(t0.c6)) END) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN vt1.c0 ELSE ((vt0.c0)<(t0.c6)) END);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)||(vt0.c0)))))) ORDER BY TRIM(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.7037359930811631 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)||(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.7037359930811631 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)||(vt0.c0)))))) ORDER BY TRIM(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.7037359930811631 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)||(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.7037359930811631 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)||(vt0.c0)))))) ORDER BY TRIM(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.7037359930811631 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY CASE ((vt0.c0)%(NULL))  WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) IS TRUE) WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(0x319eafe9)))AND(vt0.c0)) THEN 8.32483305E8 COLLATE RTRIM WHEN ((vt0.c0) IS TRUE) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN ((vt0.c0) ISNULL) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR('d')))AND(vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)%(NULL))  WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) IS TRUE) WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(0x319eafe9)))AND(vt0.c0)) THEN 8.32483305E8 COLLATE RTRIM WHEN ((vt0.c0) IS TRUE) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN ((vt0.c0) ISNULL) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR('d')))AND(vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY CASE ((vt0.c0)%(NULL))  WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) IS TRUE) WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(0x319eafe9)))AND(vt0.c0)) THEN 8.32483305E8 COLLATE RTRIM WHEN ((vt0.c0) IS TRUE) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN ((vt0.c0) ISNULL) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR('d')))AND(vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)%(NULL))  WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) IS TRUE) WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(0x319eafe9)))AND(vt0.c0)) THEN 8.32483305E8 COLLATE RTRIM WHEN ((vt0.c0) IS TRUE) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN ((vt0.c0) ISNULL) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR('d')))AND(vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY CASE ((vt0.c0)%(NULL))  WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) IS TRUE) WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(0x319eafe9)))AND(vt0.c0)) THEN 8.32483305E8 COLLATE RTRIM WHEN ((vt0.c0) IS TRUE) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN ((vt0.c0) ISNULL) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR('d')))AND(vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((((((vt0.c0) ISNULL))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) IS FALSE))))AND(((vt0.c0) NOTNULL))))OR(TYPEOF(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) ISNULL))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) IS FALSE))))AND(((vt0.c0) NOTNULL))))OR(TYPEOF(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0) ISNULL))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) IS FALSE))))AND(((vt0.c0) NOTNULL))))OR(TYPEOF(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) ISNULL))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) IS FALSE))))AND(((vt0.c0) NOTNULL))))OR(TYPEOF(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0) ISNULL))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) IS FALSE))))AND(((vt0.c0) NOTNULL))))OR(TYPEOF(vt0.c0))));
SELECT COUNT(*) FROM vt1, t0 WHERE (LIKELY(DISTINCT ((((NULL)OR(vt1.c0)))OR(t0.c6)))) ORDER BY t0.c6 DESC  NULLS FIRST, CAST(vt1.c0 AS REAL) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((((NULL)OR(vt1.c0)))OR(t0.c6)))) IS TRUE)  as count FROM vt1, t0 ORDER BY t0.c6 DESC  NULLS FIRST, CAST(vt1.c0 AS REAL) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 WHERE (LIKELY(DISTINCT ((((NULL)OR(vt1.c0)))OR(t0.c6)))) ORDER BY t0.c6 DESC  NULLS FIRST, CAST(vt1.c0 AS REAL) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((((NULL)OR(vt1.c0)))OR(t0.c6)))) IS TRUE)  as count FROM vt1, t0 ORDER BY t0.c6 DESC  NULLS FIRST, CAST(vt1.c0 AS REAL) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 WHERE (LIKELY(DISTINCT ((((NULL)OR(vt1.c0)))OR(t0.c6)))) ORDER BY t0.c6 DESC  NULLS FIRST, CAST(vt1.c0 AS REAL) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)&(x'5102')))))OR((+ (vt0.c0))))) ORDER BY (- (vt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)&(x'5102')))))OR((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c0 COLLATE BINARY)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)&(x'5102')))))OR((+ (vt0.c0))))) ORDER BY (- (vt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)&(x'5102')))))OR((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c0 COLLATE BINARY)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)&(x'5102')))))OR((+ (vt0.c0))))) ORDER BY (- (vt0.c0 COLLATE BINARY)) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0) NOTNULL), json_array(vt1.c0, vt1.c0), ((vt1.c0)IS NOT(vt1.c0))))>=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ROUND(vt1.c0, vt1.c0), CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)))) ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) NOTNULL), json_array(vt1.c0, vt1.c0), ((vt1.c0)IS NOT(vt1.c0))))>=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ROUND(vt1.c0, vt1.c0), CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0) NOTNULL), json_array(vt1.c0, vt1.c0), ((vt1.c0)IS NOT(vt1.c0))))>=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ROUND(vt1.c0, vt1.c0), CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)))) ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) NOTNULL), json_array(vt1.c0, vt1.c0), ((vt1.c0)IS NOT(vt1.c0))))>=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ROUND(vt1.c0, vt1.c0), CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0) NOTNULL), json_array(vt1.c0, vt1.c0), ((vt1.c0)IS NOT(vt1.c0))))>=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ROUND(vt1.c0, vt1.c0), CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)))) ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL);
SELECT * FROM t0, vt1 WHERE ((HEX(vt1.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((HEX(vt1.c0) IN ())) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((HEX(vt1.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((HEX(vt1.c0) IN ())) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((HEX(vt1.c0) IN ()));
SELECT COUNT(*) FROM t0, vt1 FULL OUTER JOIN vt0 ON (((t0.c6)) BETWEEN ((UPPER(DISTINCT vt0.c0))) AND (((NOT (vt1.c0))))) WHERE ((('G*5Vi#y#Q')-(((t0.c6) IS TRUE)))) ORDER BY TYPEOF(DISTINCT CAST(vt0.c0 AS BLOB)), CAST(CAST(vt0.c0 AS REAL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((('G*5Vi#y#Q')-(((t0.c6) IS TRUE)))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON (((t0.c6)) BETWEEN ((UPPER(DISTINCT vt0.c0))) AND (((NOT (vt1.c0))))) ORDER BY TYPEOF(DISTINCT CAST(vt0.c0 AS BLOB)), CAST(CAST(vt0.c0 AS REAL) AS INTEGER));
SELECT COUNT(*) FROM t0, vt1 FULL OUTER JOIN vt0 ON (((t0.c6)) BETWEEN ((UPPER(DISTINCT vt0.c0))) AND (((NOT (vt1.c0))))) WHERE ((('G*5Vi#y#Q')-(((t0.c6) IS TRUE)))) ORDER BY TYPEOF(DISTINCT CAST(vt0.c0 AS BLOB)), CAST(CAST(vt0.c0 AS REAL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((('G*5Vi#y#Q')-(((t0.c6) IS TRUE)))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON (((t0.c6)) BETWEEN ((UPPER(DISTINCT vt0.c0))) AND (((NOT (vt1.c0))))) ORDER BY TYPEOF(DISTINCT CAST(vt0.c0 AS BLOB)), CAST(CAST(vt0.c0 AS REAL) AS INTEGER));
SELECT COUNT(*) FROM t0, vt1 FULL OUTER JOIN vt0 ON (((t0.c6)) BETWEEN ((UPPER(DISTINCT vt0.c0))) AND (((NOT (vt1.c0))))) WHERE ((('G*5Vi#y#Q')-(((t0.c6) IS TRUE)))) ORDER BY TYPEOF(DISTINCT CAST(vt0.c0 AS BLOB)), CAST(CAST(vt0.c0 AS REAL) AS INTEGER);
SELECT COUNT(*) FROM t0, vt1 WHERE (((t0.c12) BETWEEN (t0.c12) AND (t0.c12)) COLLATE NOCASE) ORDER BY (((((t0.c12, vt1.c0, t0.c12))<=((vt1.c0, vt1.c0, t0.c6)))) NOT BETWEEN (UPPER(DISTINCT t0.c12)) AND (TRIM(vt1.c0, t0.c12))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c12) BETWEEN (t0.c12) AND (t0.c12)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 ORDER BY (((((t0.c12, vt1.c0, t0.c12))<=((vt1.c0, vt1.c0, t0.c6)))) NOT BETWEEN (UPPER(DISTINCT t0.c12)) AND (TRIM(vt1.c0, t0.c12))) ASC);
SELECT COUNT(*) FROM t0, vt1 WHERE (((t0.c12) BETWEEN (t0.c12) AND (t0.c12)) COLLATE NOCASE) ORDER BY (((((t0.c12, vt1.c0, t0.c12))<=((vt1.c0, vt1.c0, t0.c6)))) NOT BETWEEN (UPPER(DISTINCT t0.c12)) AND (TRIM(vt1.c0, t0.c12))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c12) BETWEEN (t0.c12) AND (t0.c12)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 ORDER BY (((((t0.c12, vt1.c0, t0.c12))<=((vt1.c0, vt1.c0, t0.c6)))) NOT BETWEEN (UPPER(DISTINCT t0.c12)) AND (TRIM(vt1.c0, t0.c12))) ASC);
SELECT COUNT(*) FROM t0, vt1 WHERE (((t0.c12) BETWEEN (t0.c12) AND (t0.c12)) COLLATE NOCASE) ORDER BY (((((t0.c12, vt1.c0, t0.c12))<=((vt1.c0, vt1.c0, t0.c6)))) NOT BETWEEN (UPPER(DISTINCT t0.c12)) AND (TRIM(vt1.c0, t0.c12))) ASC;
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE, (((vt0.c0))<=((vt0.c0))), ((vt0.c0) NOT NULL)))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (('ug')=(vt0.c0)), vt0.c0 COLLATE BINARY)))) ORDER BY (((((vt0.c0, vt0.c0, x'')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 1.425702774E9))))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE NOCASE, (((vt0.c0))<=((vt0.c0))), ((vt0.c0) NOT NULL)))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (('ug')==(vt0.c0)), vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, x'')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 1.425702774E9))))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE, (((vt0.c0))<=((vt0.c0))), ((vt0.c0) NOT NULL)))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (('ug')=(vt0.c0)), vt0.c0 COLLATE BINARY)))) ORDER BY (((((vt0.c0, vt0.c0, x'')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 1.425702774E9))))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE NOCASE, (((vt0.c0))<=((vt0.c0))), ((vt0.c0) NOT NULL)))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (('ug')==(vt0.c0)), vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, x'')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 1.425702774E9))))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE, (((vt0.c0))<=((vt0.c0))), ((vt0.c0) NOT NULL)))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (('ug')=(vt0.c0)), vt0.c0 COLLATE BINARY)))) ORDER BY (((((vt0.c0, vt0.c0, x'')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 1.425702774E9))))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((((((t0.c12))>((t0.c12)))))=(((t0.c6 IN ()))))) ORDER BY ((DATETIME(NULL, t0.c12, t0.c6)) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c12))>((t0.c12)))))=(((t0.c6 IN ()))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((DATETIME(NULL, t0.c12, t0.c6)) NOT NULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((((((t0.c12))>((t0.c12)))))=(((t0.c6 IN ()))))) ORDER BY ((DATETIME(NULL, t0.c12, t0.c6)) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c12))>((t0.c12)))))=(((t0.c6 IN ()))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((DATETIME(NULL, t0.c12, t0.c6)) NOT NULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((((((t0.c12))>((t0.c12)))))=(((t0.c6 IN ()))))) ORDER BY ((DATETIME(NULL, t0.c12, t0.c6)) NOT NULL) ASC  NULLS LAST;
SELECT * FROM vt0 NOT INDEXED INNER JOIN vt1 ON ((+ (t0.c6)) IN ()) CROSS JOIN t0 ON ((((t0.c6))<=((t0.c6))) IN ()) WHERE (x'') ORDER BY (((+ (t0.c6)))/(HEX(t0.c12)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((+ (t0.c6)) IN ()) CROSS JOIN t0 ON ((((t0.c6))<=((t0.c6))) IN ()) ORDER BY (((+ (t0.c6)))/(HEX(t0.c12)))  NULLS FIRST);
SELECT * FROM vt0 NOT INDEXED INNER JOIN vt1 ON ((+ (t0.c6)) IN ()) CROSS JOIN t0 ON ((((t0.c6))<=((t0.c6))) IN ()) WHERE (x'') ORDER BY (((+ (t0.c6)))/(HEX(t0.c12)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((+ (t0.c6)) IN ()) CROSS JOIN t0 ON ((((t0.c6))<=((t0.c6))) IN ()) ORDER BY (((+ (t0.c6)))/(HEX(t0.c12)))  NULLS FIRST);
SELECT * FROM vt0 NOT INDEXED INNER JOIN vt1 ON ((+ (t0.c6)) IN ()) CROSS JOIN t0 ON ((((t0.c6))<=((t0.c6))) IN ()) WHERE (x'') ORDER BY (((+ (t0.c6)))/(HEX(t0.c12)))  NULLS FIRST;
SELECT * FROM t0 NATURAL JOIN vt0 WHERE ((((('0.5511745177789813' IN (t0.c6))))>((((vt0.c0) NOT BETWEEN (t0.c6) AND (t0.c12)))))) ORDER BY (((vt0.c0))>=((vt0.c0))) COLLATE NOCASE  NULLS LAST, ((vt0.c0)>=(t0.c6)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('0.5511745177789813' IN (t0.c6))))>((((vt0.c0) NOT BETWEEN (t0.c6) AND (t0.c12)))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (((vt0.c0))>=((vt0.c0))) COLLATE NOCASE  NULLS LAST, ((vt0.c0)>=(t0.c6)) COLLATE BINARY ASC);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE ((((('0.5511745177789813' IN (t0.c6))))>((((vt0.c0) NOT BETWEEN (t0.c6) AND (t0.c12)))))) ORDER BY (((vt0.c0))>=((vt0.c0))) COLLATE NOCASE  NULLS LAST, ((vt0.c0)>=(t0.c6)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('0.5511745177789813' IN (t0.c6))))>((((vt0.c0) NOT BETWEEN (t0.c6) AND (t0.c12)))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (((vt0.c0))>=((vt0.c0))) COLLATE NOCASE  NULLS LAST, ((vt0.c0)>=(t0.c6)) COLLATE BINARY ASC);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE ((((('0.5511745177789813' IN (t0.c6))))>((((vt0.c0) NOT BETWEEN (t0.c6) AND (t0.c12)))))) ORDER BY (((vt0.c0))>=((vt0.c0))) COLLATE NOCASE  NULLS LAST, ((vt0.c0)>=(t0.c6)) COLLATE BINARY ASC;
SELECT ALL * FROM vt1 WHERE ((+ (LIKELIHOOD(vt1.c0, 0.1431524239599813))));
SELECT SUM(count) FROM (SELECT ALL (((+ (LIKELIHOOD(vt1.c0, 0.1431524239599813)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (LIKELIHOOD(vt1.c0, 0.1431524239599813))));
SELECT SUM(count) FROM (SELECT ALL (((+ (LIKELIHOOD(vt1.c0, 0.1431524239599813)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (LIKELIHOOD(vt1.c0, 0.1431524239599813))));
SELECT COUNT(*) FROM t0 WHERE (((((NULL)<(t0.c12)))/(t0.c6 COLLATE BINARY))) ORDER BY ((CAST(t0.c12 AS BLOB))|((('a~')IS NOT(t0.c6)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)<(t0.c12)))/(t0.c6 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c12 AS BLOB))|((('a~')IS NOT(t0.c6)))) DESC);
SELECT COUNT(*) FROM t0 WHERE (((((NULL)<(t0.c12)))/(t0.c6 COLLATE BINARY))) ORDER BY ((CAST(t0.c12 AS BLOB))|((('a~')IS NOT(t0.c6)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)<(t0.c12)))/(t0.c6 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c12 AS BLOB))|((('a~')IS NOT(t0.c6)))) DESC);
SELECT COUNT(*) FROM t0 WHERE (((((NULL)<(t0.c12)))/(t0.c6 COLLATE BINARY))) ORDER BY ((CAST(t0.c12 AS BLOB))|((('a~')IS NOT(t0.c6)))) DESC;
SELECT * FROM t0, vt0 WHERE ((((((t0.c12))<=((vt0.c0))))||(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c12))<=((vt0.c0))))||(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((t0.c12))<=((vt0.c0))))||(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c12))<=((vt0.c0))))||(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((t0.c12))<=((vt0.c0))))||(((vt0.c0) IS FALSE))));
SELECT ALL * FROM vt0 WHERE ('0.45514052005427086');
SELECT SUM(count) FROM (SELECT ALL (('0.45514052005427086') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('0.45514052005427086');
SELECT SUM(count) FROM (SELECT ALL (('0.45514052005427086') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('0.45514052005427086');
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)GLOB(vt1.c0)))LIKE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)GLOB(vt1.c0)))LIKE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)GLOB(vt1.c0)))LIKE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)GLOB(vt1.c0)))LIKE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)GLOB(vt1.c0)))LIKE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL * FROM t0 WHERE (((((((t0.c12)&(t0.c12)))AND((- (t0.c6)))))OR(t0.c6))) ORDER BY (t0.c6 IN ((t0.c6 IN (t0.c6)))), CASE -1.8652667E9  WHEN t0.c6 THEN t0.c6 ELSE t0.c6 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c12)&(t0.c12)))AND((- (t0.c6)))))OR(t0.c6))) IS TRUE)  as count FROM t0 ORDER BY (t0.c6 IN ((t0.c6 IN (t0.c6)))), CASE -1.8652667E9  WHEN t0.c6 THEN t0.c6 ELSE t0.c6 END COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (((((((t0.c12)&(t0.c12)))AND((- (t0.c6)))))OR(t0.c6))) ORDER BY (t0.c6 IN ((t0.c6 IN (t0.c6)))), CASE -1.8652667E9  WHEN t0.c6 THEN t0.c6 ELSE t0.c6 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c12)&(t0.c12)))AND((- (t0.c6)))))OR(t0.c6))) IS TRUE)  as count FROM t0 ORDER BY (t0.c6 IN ((t0.c6 IN (t0.c6)))), CASE -1.8652667E9  WHEN t0.c6 THEN t0.c6 ELSE t0.c6 END COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (((((((t0.c12)&(t0.c12)))AND((- (t0.c6)))))OR(t0.c6))) ORDER BY (t0.c6 IN ((t0.c6 IN (t0.c6)))), CASE -1.8652667E9  WHEN t0.c6 THEN t0.c6 ELSE t0.c6 END COLLATE RTRIM;
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT ALL * FROM vt1, t0 INDEXED BY i72 WHERE (CASE (NOT (t0.c12))  WHEN ((vt1.c0) NOT BETWEEN (t0.c12) AND (t0.c6)) THEN CAST(t0.c12 AS NUMERIC) END) ORDER BY CAST(((vt1.c0) BETWEEN (t0.c6) AND (t0.c6)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (t0.c12))  WHEN ((vt1.c0) NOT BETWEEN (t0.c12) AND (t0.c6)) THEN CAST(t0.c12 AS NUMERIC) END) IS TRUE)  as count FROM vt1, t0 INDEXED BY i72 ORDER BY CAST(((vt1.c0) BETWEEN (t0.c6) AND (t0.c6)) AS TEXT) DESC);
SELECT ALL * FROM vt1, t0 INDEXED BY i72 WHERE (CASE (NOT (t0.c12))  WHEN ((vt1.c0) NOT BETWEEN (t0.c12) AND (t0.c6)) THEN CAST(t0.c12 AS NUMERIC) END) ORDER BY CAST(((vt1.c0) BETWEEN (t0.c6) AND (t0.c6)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (t0.c12))  WHEN ((vt1.c0) NOT BETWEEN (t0.c12) AND (t0.c6)) THEN CAST(t0.c12 AS NUMERIC) END) IS TRUE)  as count FROM vt1, t0 INDEXED BY i72 ORDER BY CAST(((vt1.c0) BETWEEN (t0.c6) AND (t0.c6)) AS TEXT) DESC);
SELECT ALL * FROM vt1, t0 INDEXED BY i72 WHERE (CASE (NOT (t0.c12))  WHEN ((vt1.c0) NOT BETWEEN (t0.c12) AND (t0.c6)) THEN CAST(t0.c12 AS NUMERIC) END) ORDER BY CAST(((vt1.c0) BETWEEN (t0.c6) AND (t0.c6)) AS TEXT) DESC;
SELECT * FROM vt1 CROSS JOIN t0 ON LOWER(CAST(t0.c6 AS TEXT)) WHERE (((((t0.c6))<=(('D\r'))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t0.c6))<=(('D\r'))) IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON LOWER(CAST(t0.c6 AS TEXT)));
SELECT * FROM vt1 CROSS JOIN t0 ON LOWER(CAST(t0.c6 AS TEXT)) WHERE (((((t0.c6))<=(('D\r'))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t0.c6))<=(('D\r'))) IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON LOWER(CAST(t0.c6 AS TEXT)));
SELECT * FROM vt1 CROSS JOIN t0 ON LOWER(CAST(t0.c6 AS TEXT)) WHERE (((((t0.c6))<=(('D\r'))) IN ()));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((vt0.c0 COLLATE RTRIM)OR(CASE t0.c12  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((((((((t0.c6)AND(t0.c12)))OR(-1.508152041E9)))OR(t0.c12)))OR(vt0.c0)))))AND((t0.c12 IN (t0.c12)))))OR(((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0 COLLATE RTRIM)OR(CASE t0.c12  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((((((((t0.c6)AND(t0.c12)))OR(-1.508152041E9)))OR(t0.c12)))OR(vt0.c0)))))AND((t0.c12 IN (t0.c12)))))OR(((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((vt0.c0 COLLATE RTRIM)OR(CASE t0.c12  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((((((((t0.c6)AND(t0.c12)))OR(-1.508152041E9)))OR(t0.c12)))OR(vt0.c0)))))AND((t0.c12 IN (t0.c12)))))OR(((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0 COLLATE RTRIM)OR(CASE t0.c12  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((((((((t0.c6)AND(t0.c12)))OR(-1.508152041E9)))OR(t0.c12)))OR(vt0.c0)))))AND((t0.c12 IN (t0.c12)))))OR(((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((vt0.c0 COLLATE RTRIM)OR(CASE t0.c12  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((((((((t0.c6)AND(t0.c12)))OR(-1.508152041E9)))OR(t0.c12)))OR(vt0.c0)))))AND((t0.c12 IN (t0.c12)))))OR(((vt0.c0)&(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((~ (t0.c12)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c12))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((~ (t0.c12)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c12))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((~ (t0.c12)));
SELECT * FROM vt0 WHERE (highlight(vt0.c0, x'', vt0.c0, vt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((highlight(vt0.c0, x'', vt0.c0, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (highlight(vt0.c0, x'', vt0.c0, vt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((highlight(vt0.c0, x'', vt0.c0, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((NULL)OR(CASE t0.c6  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(t0.c12 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(CASE t0.c6  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(t0.c12 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((NULL)OR(CASE t0.c6  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(t0.c12 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(CASE t0.c6  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(t0.c12 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((NULL)OR(CASE t0.c6  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(t0.c12 COLLATE BINARY)));
SELECT * FROM vt0, t0, vt1 WHERE (CASE (((t0.c12, t0.c6, vt1.c0, t0.c12, vt0.c0))==((vt1.c0, t0.c12, vt0.c0, vt0.c0, vt1.c0)))  WHEN ((((t0.c12)AND(t0.c6)))AND(vt0.c0)) THEN (vt1.c0 IN ()) ELSE CASE WHEN vt1.c0 THEN t0.c12 WHEN vt0.c0 THEN t0.c12 WHEN vt1.c0 THEN t0.c6 ELSE t0.c12 END END);
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c12, t0.c6, vt1.c0, t0.c12, vt0.c0))==((vt1.c0, t0.c12, vt0.c0, vt0.c0, vt1.c0)))  WHEN ((((t0.c12)AND(t0.c6)))AND(vt0.c0)) THEN (vt1.c0 IN ()) ELSE CASE WHEN vt1.c0 THEN t0.c12 WHEN vt0.c0 THEN t0.c12 WHEN vt1.c0 THEN t0.c6 ELSE t0.c12 END END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (CASE (((t0.c12, t0.c6, vt1.c0, t0.c12, vt0.c0))==((vt1.c0, t0.c12, vt0.c0, vt0.c0, vt1.c0)))  WHEN ((((t0.c12)AND(t0.c6)))AND(vt0.c0)) THEN (vt1.c0 IN ()) ELSE CASE WHEN vt1.c0 THEN t0.c12 WHEN vt0.c0 THEN t0.c12 WHEN vt1.c0 THEN t0.c6 ELSE t0.c12 END END);
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c12, t0.c6, vt1.c0, t0.c12, vt0.c0))==((vt1.c0, t0.c12, vt0.c0, vt0.c0, vt1.c0)))  WHEN ((((t0.c12)AND(t0.c6)))AND(vt0.c0)) THEN (vt1.c0 IN ()) ELSE CASE WHEN vt1.c0 THEN t0.c12 WHEN vt0.c0 THEN t0.c12 WHEN vt1.c0 THEN t0.c6 ELSE t0.c12 END END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (CASE (((t0.c12, t0.c6, vt1.c0, t0.c12, vt0.c0))==((vt1.c0, t0.c12, vt0.c0, vt0.c0, vt1.c0)))  WHEN ((((t0.c12)AND(t0.c6)))AND(vt0.c0)) THEN (vt1.c0 IN ()) ELSE CASE WHEN vt1.c0 THEN t0.c12 WHEN vt0.c0 THEN t0.c12 WHEN vt1.c0 THEN t0.c6 ELSE t0.c12 END END);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((CASE t0.c12  WHEN t0.c6 THEN t0.c12 ELSE t0.c12 END) IS TRUE) WHERE ((NOT (t0.c12)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c12)) COLLATE BINARY) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((CASE t0.c12  WHEN t0.c6 THEN t0.c12 ELSE t0.c12 END) IS TRUE));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((CASE t0.c12  WHEN t0.c6 THEN t0.c12 ELSE t0.c12 END) IS TRUE) WHERE ((NOT (t0.c12)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c12)) COLLATE BINARY) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((CASE t0.c12  WHEN t0.c6 THEN t0.c12 ELSE t0.c12 END) IS TRUE));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((CASE t0.c12  WHEN t0.c6 THEN t0.c12 ELSE t0.c12 END) IS TRUE) WHERE ((NOT (t0.c12)) COLLATE BINARY);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON t0.c12 WHERE (TRIM(CASE WHEN t0.c6 THEN t0.c12 WHEN t0.c6 THEN t0.c12 WHEN t0.c12 THEN t0.c6 ELSE '' END)) ORDER BY ((((((t0.c12)OR(t0.c12)))OR(t0.c6))) ISNULL) ASC  NULLS LAST, ((((vt0.c0) NOTNULL)) NOT BETWEEN (((t0.c12) BETWEEN (t0.c12) AND (vt0.c0))) AND (highlight(t0.c6, 0.646314856184143, t0.c12, t0.c12))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN t0.c6 THEN t0.c12 WHEN t0.c6 THEN t0.c12 WHEN t0.c12 THEN t0.c6 ELSE '' END)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON t0.c12 ORDER BY ((((((t0.c12)OR(t0.c12)))OR(t0.c6))) ISNULL) ASC  NULLS LAST, ((((vt0.c0) NOTNULL)) NOT BETWEEN (((t0.c12) BETWEEN (t0.c12) AND (vt0.c0))) AND (highlight(t0.c6, 0.646314856184143, t0.c12, t0.c12))) DESC  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON t0.c12 WHERE (TRIM(CASE WHEN t0.c6 THEN t0.c12 WHEN t0.c6 THEN t0.c12 WHEN t0.c12 THEN t0.c6 ELSE '' END)) ORDER BY ((((((t0.c12)OR(t0.c12)))OR(t0.c6))) ISNULL) ASC  NULLS LAST, ((((vt0.c0) NOTNULL)) NOT BETWEEN (((t0.c12) BETWEEN (t0.c12) AND (vt0.c0))) AND (highlight(t0.c6, 0.646314856184143, t0.c12, t0.c12))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN t0.c6 THEN t0.c12 WHEN t0.c6 THEN t0.c12 WHEN t0.c12 THEN t0.c6 ELSE '' END)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON t0.c12 ORDER BY ((((((t0.c12)OR(t0.c12)))OR(t0.c6))) ISNULL) ASC  NULLS LAST, ((((vt0.c0) NOTNULL)) NOT BETWEEN (((t0.c12) BETWEEN (t0.c12) AND (vt0.c0))) AND (highlight(t0.c6, 0.646314856184143, t0.c12, t0.c12))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON CASE TRIM(DISTINCT vt0.c0)  WHEN ((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)) THEN ((t0.c12) NOT NULL) END FULL OUTER JOIN vt0 ON ((((t0.c6)>>(vt0.c0)))%(x'16b0')) WHERE (load_extension(NULL)) ORDER BY (((+ (vt0.c0)))LIKE(TOTAL_CHANGES())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(NULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON CASE TRIM(DISTINCT vt0.c0)  WHEN ((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)) THEN ((t0.c12) NOT NULL) END FULL OUTER JOIN vt0 ON ((((t0.c6)>>(vt0.c0)))%(x'16b0')) ORDER BY (((+ (vt0.c0)))LIKE(TOTAL_CHANGES())) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON CASE TRIM(DISTINCT vt0.c0)  WHEN ((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)) THEN ((t0.c12) NOT NULL) END FULL OUTER JOIN vt0 ON ((((t0.c6)>>(vt0.c0)))%(x'16b0')) WHERE (load_extension(NULL)) ORDER BY (((+ (vt0.c0)))LIKE(TOTAL_CHANGES())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(NULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON CASE TRIM(DISTINCT vt0.c0)  WHEN ((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)) THEN ((t0.c12) NOT NULL) END FULL OUTER JOIN vt0 ON ((((t0.c6)>>(vt0.c0)))%(x'16b0')) ORDER BY (((+ (vt0.c0)))LIKE(TOTAL_CHANGES())) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (rtreenode(((vt0.c0) NOT BETWEEN (t0.c12) AND (t0.c6)), vt1.c0)) ORDER BY ((((((t0.c6))=((t0.c6))), CASE WHEN t0.c6 THEN '-465372202' WHEN vt0.c0 THEN t0.c6 WHEN vt1.c0 THEN vt0.c0 ELSE t0.c12 END, (((vt1.c0, vt1.c0, t0.c6, t0.c6, vt1.c0, 0.5403756277395301, vt0.c0))>=((0.6150122441561596, vt0.c0, t0.c12, vt1.c0, vt1.c0, vt1.c0, vt0.c0))), (((vt1.c0))<=((vt0.c0))), ((((((((t0.c12)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(t0.c6))))<((t0.c6, UNLIKELY(t0.c12), CASE t0.c12  WHEN NULL THEN t0.c6 WHEN t0.c6 THEN vt0.c0 WHEN vt0.c0 THEN t0.c12 ELSE vt0.c0 END, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))), ((t0.c12)&(vt1.c0))))) DESC, (+ (t0.c6)) DESC;
SELECT SUM(count) FROM (SELECT ((rtreenode(((vt0.c0) NOT BETWEEN (t0.c12) AND (t0.c6)), vt1.c0)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((((t0.c6))==((t0.c6))), CASE WHEN t0.c6 THEN '-465372202' WHEN vt0.c0 THEN t0.c6 WHEN vt1.c0 THEN vt0.c0 ELSE t0.c12 END, (((vt1.c0, vt1.c0, t0.c6, t0.c6, vt1.c0, 0.5403756277395301, vt0.c0))>=((0.6150122441561596, vt0.c0, t0.c12, vt1.c0, vt1.c0, vt1.c0, vt0.c0))), (((vt1.c0))<=((vt0.c0))), ((((((((t0.c12)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(t0.c6))))<((t0.c6, UNLIKELY(t0.c12), CASE t0.c12  WHEN NULL THEN t0.c6 WHEN t0.c6 THEN vt0.c0 WHEN vt0.c0 THEN t0.c12 ELSE vt0.c0 END, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))), ((t0.c12)&(vt1.c0))))) DESC, (+ (t0.c6)) DESC);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (rtreenode(((vt0.c0) NOT BETWEEN (t0.c12) AND (t0.c6)), vt1.c0)) ORDER BY ((((((t0.c6))=((t0.c6))), CASE WHEN t0.c6 THEN '-465372202' WHEN vt0.c0 THEN t0.c6 WHEN vt1.c0 THEN vt0.c0 ELSE t0.c12 END, (((vt1.c0, vt1.c0, t0.c6, t0.c6, vt1.c0, 0.5403756277395301, vt0.c0))>=((0.6150122441561596, vt0.c0, t0.c12, vt1.c0, vt1.c0, vt1.c0, vt0.c0))), (((vt1.c0))<=((vt0.c0))), ((((((((t0.c12)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(t0.c6))))<((t0.c6, UNLIKELY(t0.c12), CASE t0.c12  WHEN NULL THEN t0.c6 WHEN t0.c6 THEN vt0.c0 WHEN vt0.c0 THEN t0.c12 ELSE vt0.c0 END, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))), ((t0.c12)&(vt1.c0))))) DESC, (+ (t0.c6)) DESC;
SELECT SUM(count) FROM (SELECT ((rtreenode(((vt0.c0) NOT BETWEEN (t0.c12) AND (t0.c6)), vt1.c0)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((((t0.c6))==((t0.c6))), CASE WHEN t0.c6 THEN '-465372202' WHEN vt0.c0 THEN t0.c6 WHEN vt1.c0 THEN vt0.c0 ELSE t0.c12 END, (((vt1.c0, vt1.c0, t0.c6, t0.c6, vt1.c0, 0.5403756277395301, vt0.c0))>=((0.6150122441561596, vt0.c0, t0.c12, vt1.c0, vt1.c0, vt1.c0, vt0.c0))), (((vt1.c0))<=((vt0.c0))), ((((((((t0.c12)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(t0.c6))))<((t0.c6, UNLIKELY(t0.c12), CASE t0.c12  WHEN NULL THEN t0.c6 WHEN t0.c6 THEN vt0.c0 WHEN vt0.c0 THEN t0.c12 ELSE vt0.c0 END, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))), ((t0.c12)&(vt1.c0))))) DESC, (+ (t0.c6)) DESC);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (rtreenode(((vt0.c0) NOT BETWEEN (t0.c12) AND (t0.c6)), vt1.c0)) ORDER BY ((((((t0.c6))=((t0.c6))), CASE WHEN t0.c6 THEN '-465372202' WHEN vt0.c0 THEN t0.c6 WHEN vt1.c0 THEN vt0.c0 ELSE t0.c12 END, (((vt1.c0, vt1.c0, t0.c6, t0.c6, vt1.c0, 0.5403756277395301, vt0.c0))>=((0.6150122441561596, vt0.c0, t0.c12, vt1.c0, vt1.c0, vt1.c0, vt0.c0))), (((vt1.c0))<=((vt0.c0))), ((((((((t0.c12)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(t0.c6))))<((t0.c6, UNLIKELY(t0.c12), CASE t0.c12  WHEN NULL THEN t0.c6 WHEN t0.c6 THEN vt0.c0 WHEN vt0.c0 THEN t0.c12 ELSE vt0.c0 END, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))), ((t0.c12)&(vt1.c0))))) DESC, (+ (t0.c6)) DESC;
SELECT ALL * FROM t0 WHERE (((CASE t0.c6  WHEN t0.c12 THEN t0.c12 WHEN t0.c12 THEN 'zE' WHEN t0.c12 THEN t0.c6 ELSE t0.c12 END) BETWEEN (json(t0.c6)) AND (HEX(t0.c6)))) ORDER BY ((((t0.c6, t0.c6, t0.c6)) NOT BETWEEN ((0.5511745177789813, t0.c12, t0.c6)) AND ((t0.c6, t0.c6, t0.c6))) IN ()) DESC, ((CAST(t0.c6 AS BLOB))IS NOT(((((0.6921876116252049)AND(t0.c12)))AND(t0.c12)))) DESC, ((((HEX(0.6556600993095454))AND(((t0.c6)!=(t0.c6)))))OR(((t0.c12)||('-542914950')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c6  WHEN t0.c12 THEN t0.c12 WHEN t0.c12 THEN 'zE' WHEN t0.c12 THEN t0.c6 ELSE t0.c12 END) BETWEEN (json(t0.c6)) AND (HEX(t0.c6)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c6, t0.c6, t0.c6)) NOT BETWEEN ((0.5511745177789813, t0.c12, t0.c6)) AND ((t0.c6, t0.c6, t0.c6))) IN ()) DESC, ((CAST(t0.c6 AS BLOB))IS NOT(((((0.6921876116252049)AND(t0.c12)))AND(t0.c12)))) DESC, ((((HEX(0.6556600993095454))AND(((t0.c6)!=(t0.c6)))))OR(((t0.c12)||('-542914950')))) DESC);
SELECT ALL * FROM t0 WHERE (((CASE t0.c6  WHEN t0.c12 THEN t0.c12 WHEN t0.c12 THEN 'zE' WHEN t0.c12 THEN t0.c6 ELSE t0.c12 END) BETWEEN (json(t0.c6)) AND (HEX(t0.c6)))) ORDER BY ((((t0.c6, t0.c6, t0.c6)) NOT BETWEEN ((0.5511745177789813, t0.c12, t0.c6)) AND ((t0.c6, t0.c6, t0.c6))) IN ()) DESC, ((CAST(t0.c6 AS BLOB))IS NOT(((((0.6921876116252049)AND(t0.c12)))AND(t0.c12)))) DESC, ((((HEX(0.6556600993095454))AND(((t0.c6)!=(t0.c6)))))OR(((t0.c12)||('-542914950')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c6  WHEN t0.c12 THEN t0.c12 WHEN t0.c12 THEN 'zE' WHEN t0.c12 THEN t0.c6 ELSE t0.c12 END) BETWEEN (json(t0.c6)) AND (HEX(t0.c6)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c6, t0.c6, t0.c6)) NOT BETWEEN ((0.5511745177789813, t0.c12, t0.c6)) AND ((t0.c6, t0.c6, t0.c6))) IN ()) DESC, ((CAST(t0.c6 AS BLOB))IS NOT(((((0.6921876116252049)AND(t0.c12)))AND(t0.c12)))) DESC, ((((HEX(0.6556600993095454))AND(((t0.c6)!=(t0.c6)))))OR(((t0.c12)||('-542914950')))) DESC);
SELECT ALL * FROM t0 WHERE (((CASE t0.c6  WHEN t0.c12 THEN t0.c12 WHEN t0.c12 THEN 'zE' WHEN t0.c12 THEN t0.c6 ELSE t0.c12 END) BETWEEN (json(t0.c6)) AND (HEX(t0.c6)))) ORDER BY ((((t0.c6, t0.c6, t0.c6)) NOT BETWEEN ((0.5511745177789813, t0.c12, t0.c6)) AND ((t0.c6, t0.c6, t0.c6))) IN ()) DESC, ((CAST(t0.c6 AS BLOB))IS NOT(((((0.6921876116252049)AND(t0.c12)))AND(t0.c12)))) DESC, ((((HEX(0.6556600993095454))AND(((t0.c6)!=(t0.c6)))))OR(((t0.c12)||('-542914950')))) DESC;
SELECT * FROM vt1, t0, vt0 WHERE (((CAST(vt0.c0 AS INTEGER))IS NOT('0.5818119783710648')));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))IS NOT('0.5818119783710648'))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (((CAST(vt0.c0 AS INTEGER))IS NOT('0.5818119783710648')));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))IS NOT('0.5818119783710648'))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (((CAST(vt0.c0 AS INTEGER))IS NOT('0.5818119783710648')));
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((CAST(vt1.c0 AS BLOB))GLOB(((t0.c12) NOT BETWEEN (x'') AND (t0.c12)))) WHERE ((((((- (vt0.c0)))OR(((vt1.c0) ISNULL))))AND(t0.c6 COLLATE BINARY))) ORDER BY ((((vt1.c0)<(vt1.c0)))<=(t0.c6));
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt0.c0)))OR(((vt1.c0) ISNULL))))AND(t0.c6 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((CAST(vt1.c0 AS BLOB))GLOB(((t0.c12) NOT BETWEEN (x'') AND (t0.c12)))) ORDER BY ((((vt1.c0)<(vt1.c0)))<=(t0.c6)));
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((CAST(vt1.c0 AS BLOB))GLOB(((t0.c12) NOT BETWEEN (x'') AND (t0.c12)))) WHERE ((((((- (vt0.c0)))OR(((vt1.c0) ISNULL))))AND(t0.c6 COLLATE BINARY))) ORDER BY ((((vt1.c0)<(vt1.c0)))<=(t0.c6));
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt0.c0)))OR(((vt1.c0) ISNULL))))AND(t0.c6 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((CAST(vt1.c0 AS BLOB))GLOB(((t0.c12) NOT BETWEEN (x'') AND (t0.c12)))) ORDER BY ((((vt1.c0)<(vt1.c0)))<=(t0.c6)));
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((CAST(vt1.c0 AS BLOB))GLOB(((t0.c12) NOT BETWEEN (x'') AND (t0.c12)))) WHERE ((((((- (vt0.c0)))OR(((vt1.c0) ISNULL))))AND(t0.c6 COLLATE BINARY))) ORDER BY ((((vt1.c0)<(vt1.c0)))<=(t0.c6));
SELECT * FROM t0, vt0 WHERE (((((((x'')<>(t0.c12)))AND(CAST(vt0.c0 AS TEXT))))AND(t0.c12))) ORDER BY 'eｕK1ij*f<', CASE vt0.c0  WHEN t0.c12 THEN t0.c6 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((((x'')!=(t0.c12)))AND(CAST(vt0.c0 AS TEXT))))AND(t0.c12))) IS TRUE)  as count FROM t0, vt0 ORDER BY 'eｕK1ij*f<', CASE vt0.c0  WHEN t0.c12 THEN t0.c6 END COLLATE BINARY DESC);
SELECT * FROM t0, vt0 WHERE (((((((x'')<>(t0.c12)))AND(CAST(vt0.c0 AS TEXT))))AND(t0.c12))) ORDER BY 'eｕK1ij*f<', CASE vt0.c0  WHEN t0.c12 THEN t0.c6 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((((x'')!=(t0.c12)))AND(CAST(vt0.c0 AS TEXT))))AND(t0.c12))) IS TRUE)  as count FROM t0, vt0 ORDER BY 'eｕK1ij*f<', CASE vt0.c0  WHEN t0.c12 THEN t0.c6 END COLLATE BINARY DESC);
SELECT * FROM t0, vt0 WHERE (((((((x'')<>(t0.c12)))AND(CAST(vt0.c0 AS TEXT))))AND(t0.c12))) ORDER BY 'eｕK1ij*f<', CASE vt0.c0  WHEN t0.c12 THEN t0.c6 END COLLATE BINARY DESC;
SELECT ALL * FROM vt1, vt0, t0 WHERE (((t0.c12)<=(((t0.c6) ISNULL)))) ORDER BY x'518b' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c12)<=(((t0.c6) ISNULL)))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY x'518b' DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((t0.c12)<=(((t0.c6) ISNULL)))) ORDER BY x'518b' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c12)<=(((t0.c6) ISNULL)))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY x'518b' DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((t0.c12)<=(((t0.c6) ISNULL)))) ORDER BY x'518b' DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR('eｕK1ij*f<')))OR(((((vt0.c0)OR(t0.c6)))OR(t0.c6)))) LEFT OUTER JOIN vt1 ON (((t0.c6)) NOT BETWEEN (((((t0.c12))>((vt0.c0))))) AND ((CASE WHEN t0.c12 THEN t0.c12 ELSE t0.c6 END))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR('eｕK1ij*f<')))OR(((((vt0.c0)OR(t0.c6)))OR(t0.c6)))) LEFT OUTER JOIN vt1 ON (((t0.c6)) NOT BETWEEN (((((t0.c12))>((vt0.c0))))) AND ((CASE WHEN t0.c12 THEN t0.c12 ELSE t0.c6 END))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR('eｕK1ij*f<')))OR(((((vt0.c0)OR(t0.c6)))OR(t0.c6)))) LEFT OUTER JOIN vt1 ON (((t0.c6)) NOT BETWEEN (((((t0.c12))>((vt0.c0))))) AND ((CASE WHEN t0.c12 THEN t0.c12 ELSE t0.c6 END))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR('eｕK1ij*f<')))OR(((((vt0.c0)OR(t0.c6)))OR(t0.c6)))) LEFT OUTER JOIN vt1 ON (((t0.c6)) NOT BETWEEN (((((t0.c12))>((vt0.c0))))) AND ((CASE WHEN t0.c12 THEN t0.c12 ELSE t0.c6 END))));
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE NOCASE THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE vt1.c0 END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE NOCASE THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE vt1.c0 END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE vt1.c0 END);
SELECT * FROM vt1 WHERE (']4 ');
SELECT SUM(count) FROM (SELECT ALL ((']4 ') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (']4 ');
SELECT SUM(count) FROM (SELECT ALL ((']4 ') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (']4 ');
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c12) AND (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (t0.c12) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c12) AND (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (t0.c12) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c12) AND (vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt1, t0 NATURAL JOIN vt0 WHERE (CASE (- (t0.c6))  WHEN CAST(t0.c12 AS BLOB) THEN 0.031555714651300026 END) ORDER BY (- (t0.c12)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (- (t0.c6))  WHEN CAST(t0.c12 AS BLOB) THEN 0.031555714651300026 END) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN vt0 ORDER BY (- (t0.c12)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 NATURAL JOIN vt0 WHERE (CASE (- (t0.c6))  WHEN CAST(t0.c12 AS BLOB) THEN 0.031555714651300026 END) ORDER BY (- (t0.c12)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (- (t0.c6))  WHEN CAST(t0.c12 AS BLOB) THEN 0.031555714651300026 END) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN vt0 ORDER BY (- (t0.c12)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 NATURAL JOIN vt0 WHERE (CASE (- (t0.c6))  WHEN CAST(t0.c12 AS BLOB) THEN 0.031555714651300026 END) ORDER BY (- (t0.c12)) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((0Xffffffff8c5d5df5) NOT NULL)) NOT BETWEEN (t0.c12) AND (((vt0.c0) BETWEEN (t0.c6) AND (vt0.c0)))) WHERE (((((t0.c6)<=(t0.c12))) BETWEEN (((vt0.c0)|(vt0.c0))) AND (((t0.c12)OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c6)<=(t0.c12))) BETWEEN (((vt0.c0)|(vt0.c0))) AND (((t0.c12)OR(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((0Xffffffff8c5d5df5) NOT NULL)) NOT BETWEEN (t0.c12) AND (((vt0.c0) BETWEEN (t0.c6) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((0Xffffffff8c5d5df5) NOT NULL)) NOT BETWEEN (t0.c12) AND (((vt0.c0) BETWEEN (t0.c6) AND (vt0.c0)))) WHERE (((((t0.c6)<=(t0.c12))) BETWEEN (((vt0.c0)|(vt0.c0))) AND (((t0.c12)OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c6)<=(t0.c12))) BETWEEN (((vt0.c0)|(vt0.c0))) AND (((t0.c12)OR(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((0Xffffffff8c5d5df5) NOT NULL)) NOT BETWEEN (t0.c12) AND (((vt0.c0) BETWEEN (t0.c6) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((0Xffffffff8c5d5df5) NOT NULL)) NOT BETWEEN (t0.c12) AND (((vt0.c0) BETWEEN (t0.c6) AND (vt0.c0)))) WHERE (((((t0.c6)<=(t0.c12))) BETWEEN (((vt0.c0)|(vt0.c0))) AND (((t0.c12)OR(vt1.c0)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON TOTAL_CHANGES() CROSS JOIN vt1 ON ((((((((ABS(DISTINCT t0.c12))AND(((((vt0.c0)AND(vt0.c0)))AND(t0.c6)))))OR((x'' IN ()))))AND(((t0.c12) NOT BETWEEN (vt0.c0) AND (t0.c12)))))OR(((vt0.c0)IS(t0.c6)))) WHERE (CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON TOTAL_CHANGES() CROSS JOIN vt1 ON ((((((((ABS(DISTINCT t0.c12))AND(((((vt0.c0)AND(vt0.c0)))AND(t0.c6)))))OR((x'' IN ()))))AND(((t0.c12) NOT BETWEEN (vt0.c0) AND (t0.c12)))))OR(((vt0.c0)IS(t0.c6)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON TOTAL_CHANGES() CROSS JOIN vt1 ON ((((((((ABS(DISTINCT t0.c12))AND(((((vt0.c0)AND(vt0.c0)))AND(t0.c6)))))OR((x'' IN ()))))AND(((t0.c12) NOT BETWEEN (vt0.c0) AND (t0.c12)))))OR(((vt0.c0)IS(t0.c6)))) WHERE (CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON TOTAL_CHANGES() CROSS JOIN vt1 ON ((((((((ABS(DISTINCT t0.c12))AND(((((vt0.c0)AND(vt0.c0)))AND(t0.c6)))))OR((x'' IN ()))))AND(((t0.c12) NOT BETWEEN (vt0.c0) AND (t0.c12)))))OR(((vt0.c0)IS(t0.c6)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON TOTAL_CHANGES() CROSS JOIN vt1 ON ((((((((ABS(DISTINCT t0.c12))AND(((((vt0.c0)AND(vt0.c0)))AND(t0.c6)))))OR((x'' IN ()))))AND(((t0.c12) NOT BETWEEN (vt0.c0) AND (t0.c12)))))OR(((vt0.c0)IS(t0.c6)))) WHERE (CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END AS TEXT));
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON vt1.c0 RIGHT OUTER JOIN t0 ON (vt0.c0 IN ()) COLLATE BINARY WHERE ((((vt1.c0, vt0.c0, t0.c12, vt1.c0, x'')) BETWEEN ((vt1.c0, (((vt0.c0)) BETWEEN ((t0.c12)) AND (('q+'))), ((vt1.c0) NOTNULL), ((vt1.c0) IS TRUE), (((vt1.c0)) NOT BETWEEN ((t0.c12)) AND ((t0.c12))))) AND (((((vt0.c0)) NOT BETWEEN ((0.7739481876493819)) AND ((vt1.c0))), ((t0.c6) IS FALSE), (('start of month')>>(vt1.c0)), CASE vt1.c0  WHEN t0.c12 THEN vt1.c0 END, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt0.c0, t0.c12, vt1.c0, x'')) BETWEEN ((vt1.c0, (((vt0.c0)) BETWEEN ((t0.c12)) AND (('q+'))), ((vt1.c0) NOTNULL), ((vt1.c0) IS TRUE), (((vt1.c0)) NOT BETWEEN ((t0.c12)) AND ((t0.c12))))) AND (((((vt0.c0)) NOT BETWEEN ((0.7739481876493819)) AND ((vt1.c0))), ((t0.c6) IS FALSE), (('start of month')>>(vt1.c0)), CASE vt1.c0  WHEN t0.c12 THEN vt1.c0 END, vt1.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON vt1.c0 RIGHT OUTER JOIN t0 ON (vt0.c0 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON vt1.c0 RIGHT OUTER JOIN t0 ON (vt0.c0 IN ()) COLLATE BINARY WHERE ((((vt1.c0, vt0.c0, t0.c12, vt1.c0, x'')) BETWEEN ((vt1.c0, (((vt0.c0)) BETWEEN ((t0.c12)) AND (('q+'))), ((vt1.c0) NOTNULL), ((vt1.c0) IS TRUE), (((vt1.c0)) NOT BETWEEN ((t0.c12)) AND ((t0.c12))))) AND (((((vt0.c0)) NOT BETWEEN ((0.7739481876493819)) AND ((vt1.c0))), ((t0.c6) IS FALSE), (('start of month')>>(vt1.c0)), CASE vt1.c0  WHEN t0.c12 THEN vt1.c0 END, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt0.c0, t0.c12, vt1.c0, x'')) BETWEEN ((vt1.c0, (((vt0.c0)) BETWEEN ((t0.c12)) AND (('q+'))), ((vt1.c0) NOTNULL), ((vt1.c0) IS TRUE), (((vt1.c0)) NOT BETWEEN ((t0.c12)) AND ((t0.c12))))) AND (((((vt0.c0)) NOT BETWEEN ((0.7739481876493819)) AND ((vt1.c0))), ((t0.c6) IS FALSE), (('start of month')>>(vt1.c0)), CASE vt1.c0  WHEN t0.c12 THEN vt1.c0 END, vt1.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON vt1.c0 RIGHT OUTER JOIN t0 ON (vt0.c0 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON vt1.c0 RIGHT OUTER JOIN t0 ON (vt0.c0 IN ()) COLLATE BINARY WHERE ((((vt1.c0, vt0.c0, t0.c12, vt1.c0, x'')) BETWEEN ((vt1.c0, (((vt0.c0)) BETWEEN ((t0.c12)) AND (('q+'))), ((vt1.c0) NOTNULL), ((vt1.c0) IS TRUE), (((vt1.c0)) NOT BETWEEN ((t0.c12)) AND ((t0.c12))))) AND (((((vt0.c0)) NOT BETWEEN ((0.7739481876493819)) AND ((vt1.c0))), ((t0.c6) IS FALSE), (('start of month')>>(vt1.c0)), CASE vt1.c0  WHEN t0.c12 THEN vt1.c0 END, vt1.c0))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((t0.c6 COLLATE NOCASE) NOT BETWEEN (t0.c6) AND ((t0.c12 IN (t0.c12)))) WHERE (((vt0.c0 COLLATE RTRIM) IS FALSE)) ORDER BY 'FALSE' ASC, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((t0.c6 COLLATE NOCASE) NOT BETWEEN (t0.c6) AND ((t0.c12 IN (t0.c12)))) ORDER BY 'FALSE' ASC, vt0.c0 DESC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((t0.c6 COLLATE NOCASE) NOT BETWEEN (t0.c6) AND ((t0.c12 IN (t0.c12)))) WHERE (((vt0.c0 COLLATE RTRIM) IS FALSE)) ORDER BY 'FALSE' ASC, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((t0.c6 COLLATE NOCASE) NOT BETWEEN (t0.c6) AND ((t0.c12 IN (t0.c12)))) ORDER BY 'FALSE' ASC, vt0.c0 DESC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((t0.c6 COLLATE NOCASE) NOT BETWEEN (t0.c6) AND ((t0.c12 IN (t0.c12)))) WHERE (((vt0.c0 COLLATE RTRIM) IS FALSE)) ORDER BY 'FALSE' ASC, vt0.c0 DESC;
SELECT ALL * FROM vt1, vt0, t0 WHERE (IFNULL(CASE WHEN t0.c6 THEN vt1.c0 ELSE vt0.c0 END, ((((t0.c6)OR(t0.c12)))OR(0.07080454744042264))));
SELECT SUM(count) FROM (SELECT ((IFNULL(CASE WHEN t0.c6 THEN vt1.c0 ELSE vt0.c0 END, ((((t0.c6)OR(t0.c12)))OR(0.07080454744042264)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (IFNULL(CASE WHEN t0.c6 THEN vt1.c0 ELSE vt0.c0 END, ((((t0.c6)OR(t0.c12)))OR(0.07080454744042264))));
SELECT SUM(count) FROM (SELECT ((IFNULL(CASE WHEN t0.c6 THEN vt1.c0 ELSE vt0.c0 END, ((((t0.c6)OR(t0.c12)))OR(0.07080454744042264)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (IFNULL(CASE WHEN t0.c6 THEN vt1.c0 ELSE vt0.c0 END, ((((t0.c6)OR(t0.c12)))OR(0.07080454744042264))));
SELECT * FROM vt0, vt1, t0 WHERE (((CASE t0.c6  WHEN 0X55a4a48d THEN NULL ELSE t0.c6 END) IS TRUE)) ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (CASE WHEN vt1.c0 THEN t0.c12 ELSE '%q\rH' END) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c12)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c6  WHEN 0X55a4a48d THEN NULL ELSE t0.c6 END) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (CASE WHEN vt1.c0 THEN t0.c12 ELSE '%q\rH' END) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c12)))) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 WHERE (((CASE t0.c6  WHEN 0X55a4a48d THEN NULL ELSE t0.c6 END) IS TRUE)) ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (CASE WHEN vt1.c0 THEN t0.c12 ELSE '%q\rH' END) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c12)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c6  WHEN 0X55a4a48d THEN NULL ELSE t0.c6 END) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (CASE WHEN vt1.c0 THEN t0.c12 ELSE '%q\rH' END) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c12)))) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 WHERE (((CASE t0.c6  WHEN 0X55a4a48d THEN NULL ELSE t0.c6 END) IS TRUE)) ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (CASE WHEN vt1.c0 THEN t0.c12 ELSE '%q\rH' END) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c12)))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (((t0.c6 COLLATE RTRIM) IS TRUE)) ORDER BY CAST((t0.c12 IN ()) AS NUMERIC)  NULLS LAST, (((t0.c12) NOTNULL) IN ());
SELECT SUM(count) FROM (SELECT ((((t0.c6 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c12 IN ()) AS NUMERIC)  NULLS LAST, (((t0.c12) NOTNULL) IN ()));
SELECT * FROM t0 WHERE (((t0.c6 COLLATE RTRIM) IS TRUE)) ORDER BY CAST((t0.c12 IN ()) AS NUMERIC)  NULLS LAST, (((t0.c12) NOTNULL) IN ());
SELECT SUM(count) FROM (SELECT ((((t0.c6 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c12 IN ()) AS NUMERIC)  NULLS LAST, (((t0.c12) NOTNULL) IN ()));
SELECT * FROM t0 WHERE (((t0.c6 COLLATE RTRIM) IS TRUE)) ORDER BY CAST((t0.c12 IN ()) AS NUMERIC)  NULLS LAST, (((t0.c12) NOTNULL) IN ());
SELECT * FROM vt1, t0, vt0 WHERE ((((vt1.c0)) BETWEEN (((t0.c12 IN ()))) AND ((((vt0.c0) NOT BETWEEN (t0.c6) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN (((t0.c12 IN ()))) AND ((((vt0.c0) NOT BETWEEN (t0.c6) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((((vt1.c0)) BETWEEN (((t0.c12 IN ()))) AND ((((vt0.c0) NOT BETWEEN (t0.c6) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN (((t0.c12 IN ()))) AND ((((vt0.c0) NOT BETWEEN (t0.c6) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((((vt1.c0)) BETWEEN (((t0.c12 IN ()))) AND ((((vt0.c0) NOT BETWEEN (t0.c6) AND (vt1.c0))))));
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c6))) NOT BETWEEN ((0.8313119329999133 IN (t0.c6))) AND (TRIM(vt1.c0, vt0.c0)))) ORDER BY (CAST(NULL AS INTEGER) IN (((((((((vt0.c0)AND(t0.c6)))AND(vt1.c0)))AND(t0.c12)))OR(t0.c12)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c6))) NOT BETWEEN ((0.8313119329999133 IN (t0.c6))) AND (TRIM(vt1.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (CAST(NULL AS INTEGER) IN (((((((((vt0.c0)AND(t0.c6)))AND(vt1.c0)))AND(t0.c12)))OR(t0.c12)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c6))) NOT BETWEEN ((0.8313119329999133 IN (t0.c6))) AND (TRIM(vt1.c0, vt0.c0)))) ORDER BY (CAST(NULL AS INTEGER) IN (((((((((vt0.c0)AND(t0.c6)))AND(vt1.c0)))AND(t0.c12)))OR(t0.c12)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c6))) NOT BETWEEN ((0.8313119329999133 IN (t0.c6))) AND (TRIM(vt1.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (CAST(NULL AS INTEGER) IN (((((((((vt0.c0)AND(t0.c6)))AND(vt1.c0)))AND(t0.c12)))OR(t0.c12)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c6))) NOT BETWEEN ((0.8313119329999133 IN (t0.c6))) AND (TRIM(vt1.c0, vt0.c0)))) ORDER BY (CAST(NULL AS INTEGER) IN (((((((((vt0.c0)AND(t0.c6)))AND(vt1.c0)))AND(t0.c12)))OR(t0.c12)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0) IS FALSE) IN ()) WHERE (UNICODE(CAST(vt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(CAST(vt1.c0 AS REAL))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0) IS FALSE) IN ()));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0) IS FALSE) IN ()) WHERE (UNICODE(CAST(vt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(CAST(vt1.c0 AS REAL))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0) IS FALSE) IN ()));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0) IS FALSE) IN ()) WHERE (UNICODE(CAST(vt1.c0 AS REAL)));
SELECT * FROM t0 WHERE ((((((((((t0.c12 IN ()))AND(json_object(t0.c12, t0.c12))))OR(t0.c12 COLLATE RTRIM)))AND(((t0.c12) BETWEEN (t0.c6) AND (t0.c12)))))OR(t0.c6 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c12 IN ()))AND(json_object(t0.c12, t0.c12))))OR(t0.c12 COLLATE RTRIM)))AND(((t0.c12) BETWEEN (t0.c6) AND (t0.c12)))))OR(t0.c6 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((((t0.c12 IN ()))AND(json_object(t0.c12, t0.c12))))OR(t0.c12 COLLATE RTRIM)))AND(((t0.c12) BETWEEN (t0.c6) AND (t0.c12)))))OR(t0.c6 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c12 IN ()))AND(json_object(t0.c12, t0.c12))))OR(t0.c12 COLLATE RTRIM)))AND(((t0.c12) BETWEEN (t0.c6) AND (t0.c12)))))OR(t0.c6 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((((t0.c12 IN ()))AND(json_object(t0.c12, t0.c12))))OR(t0.c12 COLLATE RTRIM)))AND(((t0.c12) BETWEEN (t0.c6) AND (t0.c12)))))OR(t0.c6 COLLATE BINARY)));
SELECT ALL * FROM t0, vt1 WHERE (0.3922746855922855) ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (UPPER('餜W*')) AND ((((t0.c12))<=((t0.c6))))) DESC, (((CASE t0.c6  WHEN t0.c12 THEN vt1.c0 ELSE t0.c12 END))<=((CAST('' AS INTEGER)))) ASC  NULLS LAST, (((vt1.c0) NOT NULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((0.3922746855922855) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (UPPER('餜W*')) AND ((((t0.c12))<=((t0.c6))))) DESC, (((CASE t0.c6  WHEN t0.c12 THEN vt1.c0 ELSE t0.c12 END))<=((CAST('' AS INTEGER)))) ASC  NULLS LAST, (((vt1.c0) NOT NULL) IN ()) DESC);
SELECT ALL * FROM t0, vt1 WHERE (0.3922746855922855) ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (UPPER('餜W*')) AND ((((t0.c12))<=((t0.c6))))) DESC, (((CASE t0.c6  WHEN t0.c12 THEN vt1.c0 ELSE t0.c12 END))<=((CAST('' AS INTEGER)))) ASC  NULLS LAST, (((vt1.c0) NOT NULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((0.3922746855922855) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (UPPER('餜W*')) AND ((((t0.c12))<=((t0.c6))))) DESC, (((CASE t0.c6  WHEN t0.c12 THEN vt1.c0 ELSE t0.c12 END))<=((CAST('' AS INTEGER)))) ASC  NULLS LAST, (((vt1.c0) NOT NULL) IN ()) DESC);
SELECT ALL * FROM t0, vt1 WHERE (0.3922746855922855) ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (UPPER('餜W*')) AND ((((t0.c12))<=((t0.c6))))) DESC, (((CASE t0.c6  WHEN t0.c12 THEN vt1.c0 ELSE t0.c12 END))<=((CAST('' AS INTEGER)))) ASC  NULLS LAST, (((vt1.c0) NOT NULL) IN ()) DESC;
SELECT * FROM vt1 WHERE ((((vt1.c0))<>((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0))!=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0))<>((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0))!=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0))<>((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT * FROM vt1, t0 WHERE ((~ (CAST('-2147478066' AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST('-2147478066' AS TEXT)))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((~ (CAST('-2147478066' AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST('-2147478066' AS TEXT)))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((~ (CAST('-2147478066' AS TEXT))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((NULL) NOT NULL))<>(')Z')));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT NULL))<>(')Z'))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((NULL) NOT NULL))<>(')Z')));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT NULL))<>(')Z'))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((NULL) NOT NULL))<>(')Z')));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((((t0.c6) BETWEEN (vt1.c0) AND (x''))))<>((((((t0.c12)OR(t0.c12)))OR(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c6) BETWEEN (vt1.c0) AND (x''))))!=((((((t0.c12)OR(t0.c12)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((((t0.c6) BETWEEN (vt1.c0) AND (x''))))<>((((((t0.c12)OR(t0.c12)))OR(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c6) BETWEEN (vt1.c0) AND (x''))))!=((((((t0.c12)OR(t0.c12)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((((t0.c6) BETWEEN (vt1.c0) AND (x''))))<>((((((t0.c12)OR(t0.c12)))OR(vt1.c0))))));
SELECT * FROM t0, vt1 WHERE ((((t0.c12 IN ())) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (0.08675501051739087))) ORDER BY ((((t0.c6) IS FALSE)) NOT BETWEEN (((t0.c6) NOTNULL)) AND (CASE t0.c12  WHEN t0.c6 THEN t0.c12 WHEN t0.c6 THEN vt1.c0 WHEN t0.c6 THEN vt1.c0 END)) DESC  NULLS LAST, CASE (~ (t0.c6))  WHEN ((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)) THEN vt1.c0 COLLATE RTRIM WHEN t0.c6 THEN ((((((((t0.c12)AND(t0.c6)))AND(t0.c6)))OR(t0.c6)))AND(t0.c12)) WHEN (vt1.c0 IN ()) THEN ((((((((t0.c12)OR(vt1.c0)))AND('oAC+R3I')))AND(t0.c6)))AND(t0.c6)) ELSE (vt1.c0 IN (t0.c6, '588178843')) END DESC, ((((((t0.c6) BETWEEN (t0.c6) AND (vt1.c0)))AND(((t0.c12) NOT BETWEEN (t0.c12) AND (t0.c6)))))OR(CASE WHEN vt1.c0 THEN t0.c6 ELSE t0.c6 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c12 IN ())) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (0.08675501051739087))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c6) IS FALSE)) NOT BETWEEN (((t0.c6) NOTNULL)) AND (CASE t0.c12  WHEN t0.c6 THEN t0.c12 WHEN t0.c6 THEN vt1.c0 WHEN t0.c6 THEN vt1.c0 END)) DESC  NULLS LAST, CASE (~ (t0.c6))  WHEN ((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)) THEN vt1.c0 COLLATE RTRIM WHEN t0.c6 THEN ((((((((t0.c12)AND(t0.c6)))AND(t0.c6)))OR(t0.c6)))AND(t0.c12)) WHEN (vt1.c0 IN ()) THEN ((((((((t0.c12)OR(vt1.c0)))AND('oAC+R3I')))AND(t0.c6)))AND(t0.c6)) ELSE (vt1.c0 IN (t0.c6, '588178843')) END DESC, ((((((t0.c6) BETWEEN (t0.c6) AND (vt1.c0)))AND(((t0.c12) NOT BETWEEN (t0.c12) AND (t0.c6)))))OR(CASE WHEN vt1.c0 THEN t0.c6 ELSE t0.c6 END)) DESC);
SELECT * FROM t0, vt1 WHERE ((((t0.c12 IN ())) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (0.08675501051739087))) ORDER BY ((((t0.c6) IS FALSE)) NOT BETWEEN (((t0.c6) NOTNULL)) AND (CASE t0.c12  WHEN t0.c6 THEN t0.c12 WHEN t0.c6 THEN vt1.c0 WHEN t0.c6 THEN vt1.c0 END)) DESC  NULLS LAST, CASE (~ (t0.c6))  WHEN ((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)) THEN vt1.c0 COLLATE RTRIM WHEN t0.c6 THEN ((((((((t0.c12)AND(t0.c6)))AND(t0.c6)))OR(t0.c6)))AND(t0.c12)) WHEN (vt1.c0 IN ()) THEN ((((((((t0.c12)OR(vt1.c0)))AND('oAC+R3I')))AND(t0.c6)))AND(t0.c6)) ELSE (vt1.c0 IN (t0.c6, '588178843')) END DESC, ((((((t0.c6) BETWEEN (t0.c6) AND (vt1.c0)))AND(((t0.c12) NOT BETWEEN (t0.c12) AND (t0.c6)))))OR(CASE WHEN vt1.c0 THEN t0.c6 ELSE t0.c6 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c12 IN ())) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (0.08675501051739087))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c6) IS FALSE)) NOT BETWEEN (((t0.c6) NOTNULL)) AND (CASE t0.c12  WHEN t0.c6 THEN t0.c12 WHEN t0.c6 THEN vt1.c0 WHEN t0.c6 THEN vt1.c0 END)) DESC  NULLS LAST, CASE (~ (t0.c6))  WHEN ((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)) THEN vt1.c0 COLLATE RTRIM WHEN t0.c6 THEN ((((((((t0.c12)AND(t0.c6)))AND(t0.c6)))OR(t0.c6)))AND(t0.c12)) WHEN (vt1.c0 IN ()) THEN ((((((((t0.c12)OR(vt1.c0)))AND('oAC+R3I')))AND(t0.c6)))AND(t0.c6)) ELSE (vt1.c0 IN (t0.c6, '588178843')) END DESC, ((((((t0.c6) BETWEEN (t0.c6) AND (vt1.c0)))AND(((t0.c12) NOT BETWEEN (t0.c12) AND (t0.c6)))))OR(CASE WHEN vt1.c0 THEN t0.c6 ELSE t0.c6 END)) DESC);
SELECT * FROM t0, vt1 WHERE ((((t0.c12 IN ())) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (0.08675501051739087))) ORDER BY ((((t0.c6) IS FALSE)) NOT BETWEEN (((t0.c6) NOTNULL)) AND (CASE t0.c12  WHEN t0.c6 THEN t0.c12 WHEN t0.c6 THEN vt1.c0 WHEN t0.c6 THEN vt1.c0 END)) DESC  NULLS LAST, CASE (~ (t0.c6))  WHEN ((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c12)) THEN vt1.c0 COLLATE RTRIM WHEN t0.c6 THEN ((((((((t0.c12)AND(t0.c6)))AND(t0.c6)))OR(t0.c6)))AND(t0.c12)) WHEN (vt1.c0 IN ()) THEN ((((((((t0.c12)OR(vt1.c0)))AND('oAC+R3I')))AND(t0.c6)))AND(t0.c6)) ELSE (vt1.c0 IN (t0.c6, '588178843')) END DESC, ((((((t0.c6) BETWEEN (t0.c6) AND (vt1.c0)))AND(((t0.c12) NOT BETWEEN (t0.c12) AND (t0.c6)))))OR(CASE WHEN vt1.c0 THEN t0.c6 ELSE t0.c6 END)) DESC;
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt1.c0 COLLATE NOCASE)AND(((vt0.c0) BETWEEN (NULL) AND (t0.c12)))))AND(((t0.c6) NOT BETWEEN (t0.c6) AND (vt0.c0))))) ORDER BY (((t0.c12, (((t0.c6, 0.2746110821708647, t0.c12))<=((vt0.c0, t0.c12, t0.c6))), (((vt0.c0))>=((t0.c6)))))<((CASE vt0.c0  WHEN t0.c12 THEN t0.c12 END, (vt1.c0 IN (x'', t0.c12)), ((t0.c12) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 COLLATE NOCASE)AND(((vt0.c0) BETWEEN (NULL) AND (t0.c12)))))AND(((t0.c6) NOT BETWEEN (t0.c6) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((t0.c12, (((t0.c6, 0.2746110821708647, t0.c12))<=((vt0.c0, t0.c12, t0.c6))), (((vt0.c0))>=((t0.c6)))))<((CASE vt0.c0  WHEN t0.c12 THEN t0.c12 END, (vt1.c0 IN (x'', t0.c12)), ((t0.c12) ISNULL)))));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt1.c0 COLLATE NOCASE)AND(((vt0.c0) BETWEEN (NULL) AND (t0.c12)))))AND(((t0.c6) NOT BETWEEN (t0.c6) AND (vt0.c0))))) ORDER BY (((t0.c12, (((t0.c6, 0.2746110821708647, t0.c12))<=((vt0.c0, t0.c12, t0.c6))), (((vt0.c0))>=((t0.c6)))))<((CASE vt0.c0  WHEN t0.c12 THEN t0.c12 END, (vt1.c0 IN (x'', t0.c12)), ((t0.c12) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 COLLATE NOCASE)AND(((vt0.c0) BETWEEN (NULL) AND (t0.c12)))))AND(((t0.c6) NOT BETWEEN (t0.c6) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((t0.c12, (((t0.c6, 0.2746110821708647, t0.c12))<=((vt0.c0, t0.c12, t0.c6))), (((vt0.c0))>=((t0.c6)))))<((CASE vt0.c0  WHEN t0.c12 THEN t0.c12 END, (vt1.c0 IN (x'', t0.c12)), ((t0.c12) ISNULL)))));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt1.c0 COLLATE NOCASE)AND(((vt0.c0) BETWEEN (NULL) AND (t0.c12)))))AND(((t0.c6) NOT BETWEEN (t0.c6) AND (vt0.c0))))) ORDER BY (((t0.c12, (((t0.c6, 0.2746110821708647, t0.c12))<=((vt0.c0, t0.c12, t0.c6))), (((vt0.c0))>=((t0.c6)))))<((CASE vt0.c0  WHEN t0.c12 THEN t0.c12 END, (vt1.c0 IN (x'', t0.c12)), ((t0.c12) ISNULL))));
SELECT COUNT(*) FROM t0, vt1 WHERE (((t0.c12 COLLATE BINARY) BETWEEN ((((x'8c6f')) BETWEEN ((t0.c12)) AND ((t0.c6)))) AND (CASE WHEN t0.c12 THEN t0.c6 WHEN vt1.c0 THEN NULL WHEN t0.c6 THEN t0.c6 WHEN t0.c6 THEN vt1.c0 WHEN t0.c6 THEN t0.c6 ELSE vt1.c0 END))) ORDER BY TYPEOF(((t0.c6) BETWEEN (t0.c12) AND (t0.c12))) ASC, ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))&(CAST(t0.c12 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c12 COLLATE BINARY) BETWEEN ((((x'8c6f')) BETWEEN ((t0.c12)) AND ((t0.c6)))) AND (CASE WHEN t0.c12 THEN t0.c6 WHEN vt1.c0 THEN NULL WHEN t0.c6 THEN t0.c6 WHEN t0.c6 THEN vt1.c0 WHEN t0.c6 THEN t0.c6 ELSE vt1.c0 END))) IS TRUE)  as count FROM t0, vt1 ORDER BY TYPEOF(((t0.c6) BETWEEN (t0.c12) AND (t0.c12))) ASC, ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))&(CAST(t0.c12 AS BLOB))) DESC);
SELECT COUNT(*) FROM t0, vt1 WHERE (((t0.c12 COLLATE BINARY) BETWEEN ((((x'8c6f')) BETWEEN ((t0.c12)) AND ((t0.c6)))) AND (CASE WHEN t0.c12 THEN t0.c6 WHEN vt1.c0 THEN NULL WHEN t0.c6 THEN t0.c6 WHEN t0.c6 THEN vt1.c0 WHEN t0.c6 THEN t0.c6 ELSE vt1.c0 END))) ORDER BY TYPEOF(((t0.c6) BETWEEN (t0.c12) AND (t0.c12))) ASC, ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))&(CAST(t0.c12 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c12 COLLATE BINARY) BETWEEN ((((x'8c6f')) BETWEEN ((t0.c12)) AND ((t0.c6)))) AND (CASE WHEN t0.c12 THEN t0.c6 WHEN vt1.c0 THEN NULL WHEN t0.c6 THEN t0.c6 WHEN t0.c6 THEN vt1.c0 WHEN t0.c6 THEN t0.c6 ELSE vt1.c0 END))) IS TRUE)  as count FROM t0, vt1 ORDER BY TYPEOF(((t0.c6) BETWEEN (t0.c12) AND (t0.c12))) ASC, ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))&(CAST(t0.c12 AS BLOB))) DESC);
SELECT COUNT(*) FROM t0, vt1 WHERE (((t0.c12 COLLATE BINARY) BETWEEN ((((x'8c6f')) BETWEEN ((t0.c12)) AND ((t0.c6)))) AND (CASE WHEN t0.c12 THEN t0.c6 WHEN vt1.c0 THEN NULL WHEN t0.c6 THEN t0.c6 WHEN t0.c6 THEN vt1.c0 WHEN t0.c6 THEN t0.c6 ELSE vt1.c0 END))) ORDER BY TYPEOF(((t0.c6) BETWEEN (t0.c12) AND (t0.c12))) ASC, ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))&(CAST(t0.c12 AS BLOB))) DESC;
SELECT ALL * FROM t0 WHERE ((NOT ((NOT (t0.c6))))) ORDER BY (((((t0.c6) BETWEEN (t0.c12) AND (t0.c6))))>=(((((t0.c6)) NOT BETWEEN ((t0.c6)) AND ((t0.c6))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (t0.c6))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c6) BETWEEN (t0.c12) AND (t0.c6))))>=(((((t0.c6)) NOT BETWEEN ((t0.c6)) AND ((t0.c6))))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((NOT ((NOT (t0.c6))))) ORDER BY (((((t0.c6) BETWEEN (t0.c12) AND (t0.c6))))>=(((((t0.c6)) NOT BETWEEN ((t0.c6)) AND ((t0.c6))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (t0.c6))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c6) BETWEEN (t0.c12) AND (t0.c6))))>=(((((t0.c6)) NOT BETWEEN ((t0.c6)) AND ((t0.c6))))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((NOT ((NOT (t0.c6))))) ORDER BY (((((t0.c6) BETWEEN (t0.c12) AND (t0.c6))))>=(((((t0.c6)) NOT BETWEEN ((t0.c6)) AND ((t0.c6))))))  NULLS LAST;
SELECT ALL * FROM t0 NOT INDEXED, vt0, vt1 WHERE (CAST(vt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0 NOT INDEXED, vt0, vt1 WHERE (CAST(vt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0 NOT INDEXED, vt0, vt1 WHERE (CAST(vt0.c0 AS REAL));
SELECT COUNT(*) FROM vt1, t0, vt0 NOT INDEXED WHERE (((((((((((t0.c12)OR(t0.c6)))OR(x'')))OR(0.4837843692261723)))OR(vt0.c0))) ISNULL)) ORDER BY ((((vt1.c0)*(t0.c12))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c12)OR(t0.c6)))OR(x'')))OR(0.4837843692261723)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((vt1.c0)*(t0.c12))) NOTNULL));
SELECT COUNT(*) FROM vt1, t0, vt0 NOT INDEXED WHERE (((((((((((t0.c12)OR(t0.c6)))OR(x'')))OR(0.4837843692261723)))OR(vt0.c0))) ISNULL)) ORDER BY ((((vt1.c0)*(t0.c12))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c12)OR(t0.c6)))OR(x'')))OR(0.4837843692261723)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((vt1.c0)*(t0.c12))) NOTNULL));
SELECT COUNT(*) FROM vt1, t0, vt0 NOT INDEXED WHERE (((((((((((t0.c12)OR(t0.c6)))OR(x'')))OR(0.4837843692261723)))OR(vt0.c0))) ISNULL)) ORDER BY ((((vt1.c0)*(t0.c12))) NOTNULL);
SELECT ALL * FROM vt0 WHERE ((((((x'4260')<=(vt0.c0))))==(((vt0.c0 IN (vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS REAL))IS(NULLIF(vt0.c0, vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((x'4260')<=(vt0.c0))))==(((vt0.c0 IN (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))IS(NULLIF(vt0.c0, vt0.c0))) DESC);
SELECT ALL * FROM vt0 WHERE ((((((x'4260')<=(vt0.c0))))==(((vt0.c0 IN (vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS REAL))IS(NULLIF(vt0.c0, vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((x'4260')<=(vt0.c0))))==(((vt0.c0 IN (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))IS(NULLIF(vt0.c0, vt0.c0))) DESC);
SELECT ALL * FROM vt0 WHERE ((((((x'4260')<=(vt0.c0))))==(((vt0.c0 IN (vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS REAL))IS(NULLIF(vt0.c0, vt0.c0))) DESC;
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN ((t0.c12) NOT BETWEEN (NULL) AND (t0.c6)) THEN ((vt0.c0) NOT BETWEEN (t0.c12) AND ('')) WHEN ((vt0.c0) BETWEEN (t0.c6) AND (vt0.c0)) THEN t0.c6 COLLATE BINARY WHEN t0.c6 COLLATE RTRIM THEN t0.c12 WHEN (((vt0.c0, vt0.c0, t0.c6)) NOT BETWEEN ((t0.c12, vt0.c0, vt0.c0)) AND ((NULL, 0.07458543740161039, vt0.c0))) THEN ((t0.c6) BETWEEN (t0.c12) AND (t0.c6)) WHEN vt0.c0 THEN (((t0.c12))==((''))) ELSE x'9864' COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c12) NOT BETWEEN (NULL) AND (t0.c6)) THEN ((vt0.c0) NOT BETWEEN (t0.c12) AND ('')) WHEN ((vt0.c0) BETWEEN (t0.c6) AND (vt0.c0)) THEN t0.c6 COLLATE BINARY WHEN t0.c6 COLLATE RTRIM THEN t0.c12 WHEN (((vt0.c0, vt0.c0, t0.c6)) NOT BETWEEN ((t0.c12, vt0.c0, vt0.c0)) AND ((NULL, 0.07458543740161039, vt0.c0))) THEN ((t0.c6) BETWEEN (t0.c12) AND (t0.c6)) WHEN vt0.c0 THEN (((t0.c12))=((''))) ELSE x'9864' COLLATE RTRIM END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN ((t0.c12) NOT BETWEEN (NULL) AND (t0.c6)) THEN ((vt0.c0) NOT BETWEEN (t0.c12) AND ('')) WHEN ((vt0.c0) BETWEEN (t0.c6) AND (vt0.c0)) THEN t0.c6 COLLATE BINARY WHEN t0.c6 COLLATE RTRIM THEN t0.c12 WHEN (((vt0.c0, vt0.c0, t0.c6)) NOT BETWEEN ((t0.c12, vt0.c0, vt0.c0)) AND ((NULL, 0.07458543740161039, vt0.c0))) THEN ((t0.c6) BETWEEN (t0.c12) AND (t0.c6)) WHEN vt0.c0 THEN (((t0.c12))==((''))) ELSE x'9864' COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c12) NOT BETWEEN (NULL) AND (t0.c6)) THEN ((vt0.c0) NOT BETWEEN (t0.c12) AND ('')) WHEN ((vt0.c0) BETWEEN (t0.c6) AND (vt0.c0)) THEN t0.c6 COLLATE BINARY WHEN t0.c6 COLLATE RTRIM THEN t0.c12 WHEN (((vt0.c0, vt0.c0, t0.c6)) NOT BETWEEN ((t0.c12, vt0.c0, vt0.c0)) AND ((NULL, 0.07458543740161039, vt0.c0))) THEN ((t0.c6) BETWEEN (t0.c12) AND (t0.c6)) WHEN vt0.c0 THEN (((t0.c12))=((''))) ELSE x'9864' COLLATE RTRIM END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN ((t0.c12) NOT BETWEEN (NULL) AND (t0.c6)) THEN ((vt0.c0) NOT BETWEEN (t0.c12) AND ('')) WHEN ((vt0.c0) BETWEEN (t0.c6) AND (vt0.c0)) THEN t0.c6 COLLATE BINARY WHEN t0.c6 COLLATE RTRIM THEN t0.c12 WHEN (((vt0.c0, vt0.c0, t0.c6)) NOT BETWEEN ((t0.c12, vt0.c0, vt0.c0)) AND ((NULL, 0.07458543740161039, vt0.c0))) THEN ((t0.c6) BETWEEN (t0.c12) AND (t0.c6)) WHEN vt0.c0 THEN (((t0.c12))==((''))) ELSE x'9864' COLLATE RTRIM END);
SELECT ALL * FROM t0, vt1 WHERE (CAST(((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c6)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c6)) AS REAL)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (CAST(((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c6)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c6)) AS REAL)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (CAST(((t0.c6) NOT BETWEEN (t0.c12) AND (t0.c6)) AS REAL));
SELECT * FROM vt1, vt0 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ())) ORDER BY TYPEOF(DISTINCT (((vt1.c0))>=((vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY TYPEOF(DISTINCT (((vt1.c0))>=((vt0.c0)))) ASC);
SELECT * FROM vt1, vt0 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ())) ORDER BY TYPEOF(DISTINCT (((vt1.c0))>=((vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY TYPEOF(DISTINCT (((vt1.c0))>=((vt0.c0)))) ASC);
SELECT * FROM vt1, vt0 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ())) ORDER BY TYPEOF(DISTINCT (((vt1.c0))>=((vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt1 WHERE ((NOT (vt1.c0)) COLLATE RTRIM) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0)))))));
SELECT COUNT(*) FROM vt1 WHERE ((NOT (vt1.c0)) COLLATE RTRIM) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0)))))));
SELECT COUNT(*) FROM vt1 WHERE ((NOT (vt1.c0)) COLLATE RTRIM) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT ALL * FROM vt1 WHERE (NULL COLLATE BINARY) ORDER BY CAST((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, '-1833543235'))) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, '-1833543235'))) AS NUMERIC) ASC);
SELECT ALL * FROM vt1 WHERE (NULL COLLATE BINARY) ORDER BY CAST((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, '-1833543235'))) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, '-1833543235'))) AS NUMERIC) ASC);
SELECT ALL * FROM vt1 WHERE (NULL COLLATE BINARY) ORDER BY CAST((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, '-1833543235'))) AS NUMERIC) ASC;
SELECT * FROM vt1 WHERE (((NULL COLLATE RTRIM) IS TRUE)) ORDER BY SQLITE_COMPILEOPTION_GET(vt1.c0 COLLATE RTRIM) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_COMPILEOPTION_GET(vt1.c0 COLLATE RTRIM) DESC);
SELECT * FROM vt1 WHERE (((NULL COLLATE RTRIM) IS TRUE)) ORDER BY SQLITE_COMPILEOPTION_GET(vt1.c0 COLLATE RTRIM) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_COMPILEOPTION_GET(vt1.c0 COLLATE RTRIM) DESC);
SELECT * FROM vt1 WHERE (((NULL COLLATE RTRIM) IS TRUE)) ORDER BY SQLITE_COMPILEOPTION_GET(vt1.c0 COLLATE RTRIM) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((CASE WHEN t0.c6 THEN 0xffffffffbc10c00f END)AND((((t0.c6, t0.c12, t0.c6))>((t0.c6, t0.c12, t0.c6))))))AND((t0.c12 IN ()))))OR((t0.c6 IN (t0.c6)))))AND((t0.c6 IN ()))))OR(((t0.c12) IS TRUE))))OR(((t0.c12)<=(t0.c12))))) ORDER BY ((-1308228112)-((((t0.c12)) NOT BETWEEN ((t0.c6)) AND ((x'')))))  NULLS LAST, ((CASE t0.c6  WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN t0.c12 WHEN t0.c6 THEN t0.c6 END)>((((t0.c6))>=((t0.c12))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((CASE WHEN t0.c6 THEN 0Xffffffffbc10c00f END)AND((((t0.c6, t0.c12, t0.c6))>((t0.c6, t0.c12, t0.c6))))))AND((t0.c12 IN ()))))OR((t0.c6 IN (t0.c6)))))AND((t0.c6 IN ()))))OR(((t0.c12) IS TRUE))))OR(((t0.c12)<=(t0.c12))))) IS TRUE)  as count FROM t0 ORDER BY ((-1308228112)-((((t0.c12)) NOT BETWEEN ((t0.c6)) AND ((x'')))))  NULLS LAST, ((CASE t0.c6  WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN t0.c12 WHEN t0.c6 THEN t0.c6 END)>((((t0.c6))>=((t0.c12))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((CASE WHEN t0.c6 THEN 0xffffffffbc10c00f END)AND((((t0.c6, t0.c12, t0.c6))>((t0.c6, t0.c12, t0.c6))))))AND((t0.c12 IN ()))))OR((t0.c6 IN (t0.c6)))))AND((t0.c6 IN ()))))OR(((t0.c12) IS TRUE))))OR(((t0.c12)<=(t0.c12))))) ORDER BY ((-1308228112)-((((t0.c12)) NOT BETWEEN ((t0.c6)) AND ((x'')))))  NULLS LAST, ((CASE t0.c6  WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN t0.c12 WHEN t0.c6 THEN t0.c6 END)>((((t0.c6))>=((t0.c12))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((CASE WHEN t0.c6 THEN 0Xffffffffbc10c00f END)AND((((t0.c6, t0.c12, t0.c6))>((t0.c6, t0.c12, t0.c6))))))AND((t0.c12 IN ()))))OR((t0.c6 IN (t0.c6)))))AND((t0.c6 IN ()))))OR(((t0.c12) IS TRUE))))OR(((t0.c12)<=(t0.c12))))) IS TRUE)  as count FROM t0 ORDER BY ((-1308228112)-((((t0.c12)) NOT BETWEEN ((t0.c6)) AND ((x'')))))  NULLS LAST, ((CASE t0.c6  WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN t0.c12 WHEN t0.c6 THEN t0.c6 END)>((((t0.c6))>=((t0.c12))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((CASE WHEN t0.c6 THEN 0xffffffffbc10c00f END)AND((((t0.c6, t0.c12, t0.c6))>((t0.c6, t0.c12, t0.c6))))))AND((t0.c12 IN ()))))OR((t0.c6 IN (t0.c6)))))AND((t0.c6 IN ()))))OR(((t0.c12) IS TRUE))))OR(((t0.c12)<=(t0.c12))))) ORDER BY ((-1308228112)-((((t0.c12)) NOT BETWEEN ((t0.c6)) AND ((x'')))))  NULLS LAST, ((CASE t0.c6  WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN t0.c12 WHEN t0.c6 THEN t0.c6 END)>((((t0.c6))>=((t0.c12))))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE ((('5/u')OR(vt0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN CASE t0.c6  WHEN t0.c12 THEN vt0.c0 END THEN t0.c12 ELSE ((((t0.c6)AND(t0.c12)))AND(vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('5/u')OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN CASE t0.c6  WHEN t0.c12 THEN vt0.c0 END THEN t0.c12 ELSE ((((t0.c6)AND(t0.c12)))AND(vt0.c0)) END DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((('5/u')OR(vt0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN CASE t0.c6  WHEN t0.c12 THEN vt0.c0 END THEN t0.c12 ELSE ((((t0.c6)AND(t0.c12)))AND(vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('5/u')OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN CASE t0.c6  WHEN t0.c12 THEN vt0.c0 END THEN t0.c12 ELSE ((((t0.c6)AND(t0.c12)))AND(vt0.c0)) END DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((('5/u')OR(vt0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN CASE t0.c6  WHEN t0.c12 THEN vt0.c0 END THEN t0.c12 ELSE ((((t0.c6)AND(t0.c12)))AND(vt0.c0)) END DESC  NULLS FIRST;
SELECT * FROM vt0, t0, vt1 WHERE ((((vt0.c0)=(t0.c6)) IN (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(t0.c6)))AND(t0.c6)))>=(((t0.c6) BETWEEN (t0.c6) AND (t0.c6)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)==(t0.c6)) IN (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(t0.c6)))AND(t0.c6)))>=(((t0.c6) BETWEEN (t0.c6) AND (t0.c6)))) DESC);
SELECT * FROM vt0, t0, vt1 WHERE ((((vt0.c0)=(t0.c6)) IN (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(t0.c6)))AND(t0.c6)))>=(((t0.c6) BETWEEN (t0.c6) AND (t0.c6)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)==(t0.c6)) IN (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(t0.c6)))AND(t0.c6)))>=(((t0.c6) BETWEEN (t0.c6) AND (t0.c6)))) DESC);
SELECT * FROM vt0, t0, vt1 WHERE ((((vt0.c0)=(t0.c6)) IN (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(t0.c6)))AND(t0.c6)))>=(((t0.c6) BETWEEN (t0.c6) AND (t0.c6)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) NOT NULL))OR(((0.5446280790602593) IS TRUE))))OR(x'fa3f')))OR(((((vt0.c0)OR(0.674420585057207)))OR(vt0.c0)))))OR(TOTAL_CHANGES()))) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))<=(-1839194350));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) NOT NULL))OR(((0.5446280790602593) IS TRUE))))OR(x'fa3f')))OR(((((vt0.c0)OR(0.674420585057207)))OR(vt0.c0)))))OR(TOTAL_CHANGES()))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))<=(-1839194350)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) NOT NULL))OR(((0.5446280790602593) IS TRUE))))OR(x'fa3f')))OR(((((vt0.c0)OR(0.674420585057207)))OR(vt0.c0)))))OR(TOTAL_CHANGES()))) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))<=(-1839194350));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) NOT NULL))OR(((0.5446280790602593) IS TRUE))))OR(x'fa3f')))OR(((((vt0.c0)OR(0.674420585057207)))OR(vt0.c0)))))OR(TOTAL_CHANGES()))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))<=(-1839194350)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) NOT NULL))OR(((0.5446280790602593) IS TRUE))))OR(x'fa3f')))OR(((((vt0.c0)OR(0.674420585057207)))OR(vt0.c0)))))OR(TOTAL_CHANGES()))) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))<=(-1839194350));
SELECT ALL * FROM vt1, vt0, t0 WHERE ((- (CAST(t0.c6 AS NUMERIC)))) ORDER BY vt0.c0 COLLATE NOCASE, CASE (((t0.c6, vt0.c0, vt0.c0)) BETWEEN ((t0.c6, t0.c6, vt0.c0)) AND ((vt0.c0, t0.c6, t0.c12)))  WHEN (((vt0.c0, '', vt1.c0)) NOT BETWEEN ((vt0.c0, t0.c6, vt0.c0)) AND ((t0.c6, t0.c6, 0.6614056592074425))) THEN ((0.3261458396743545) IS FALSE) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CAST(t0.c6 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0, t0 NOT INDEXED ORDER BY vt0.c0 COLLATE NOCASE, CASE (((t0.c6, vt0.c0, vt0.c0)) BETWEEN ((t0.c6, t0.c6, vt0.c0)) AND ((vt0.c0, t0.c6, t0.c12)))  WHEN (((vt0.c0, '', vt1.c0)) NOT BETWEEN ((vt0.c0, t0.c6, vt0.c0)) AND ((t0.c6, t0.c6, 0.6614056592074425))) THEN ((0.3261458396743545) IS FALSE) END DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 WHERE ((- (CAST(t0.c6 AS NUMERIC)))) ORDER BY vt0.c0 COLLATE NOCASE, CASE (((t0.c6, vt0.c0, vt0.c0)) BETWEEN ((t0.c6, t0.c6, vt0.c0)) AND ((vt0.c0, t0.c6, t0.c12)))  WHEN (((vt0.c0, '', vt1.c0)) NOT BETWEEN ((vt0.c0, t0.c6, vt0.c0)) AND ((t0.c6, t0.c6, 0.6614056592074425))) THEN ((0.3261458396743545) IS FALSE) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CAST(t0.c6 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0, t0 NOT INDEXED ORDER BY vt0.c0 COLLATE NOCASE, CASE (((t0.c6, vt0.c0, vt0.c0)) BETWEEN ((t0.c6, t0.c6, vt0.c0)) AND ((vt0.c0, t0.c6, t0.c12)))  WHEN (((vt0.c0, '', vt1.c0)) NOT BETWEEN ((vt0.c0, t0.c6, vt0.c0)) AND ((t0.c6, t0.c6, 0.6614056592074425))) THEN ((0.3261458396743545) IS FALSE) END DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 WHERE ((- (CAST(t0.c6 AS NUMERIC)))) ORDER BY vt0.c0 COLLATE NOCASE, CASE (((t0.c6, vt0.c0, vt0.c0)) BETWEEN ((t0.c6, t0.c6, vt0.c0)) AND ((vt0.c0, t0.c6, t0.c12)))  WHEN (((vt0.c0, '', vt1.c0)) NOT BETWEEN ((vt0.c0, t0.c6, vt0.c0)) AND ((t0.c6, t0.c6, 0.6614056592074425))) THEN ((0.3261458396743545) IS FALSE) END DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE TOTAL_CHANGES()  WHEN vt0.c0 THEN ((vt0.c0)GLOB(vt0.c0)) WHEN '774359077' THEN x'' WHEN rtreenode(x'', vt0.c0) THEN (vt0.c0 IN (vt0.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)-(vt0.c0)) WHEN ((vt0.c0)IS NOT(NULL)) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE 'o' END) ORDER BY CAST(((vt0.c0)+(vt0.c0)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE TOTAL_CHANGES()  WHEN vt0.c0 THEN ((vt0.c0)GLOB(vt0.c0)) WHEN '774359077' THEN x'' WHEN rtreenode(x'', vt0.c0) THEN (vt0.c0 IN (vt0.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)-(vt0.c0)) WHEN ((vt0.c0)IS NOT(NULL)) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE 'o' END) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)+(vt0.c0)) AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE TOTAL_CHANGES()  WHEN vt0.c0 THEN ((vt0.c0)GLOB(vt0.c0)) WHEN '774359077' THEN x'' WHEN rtreenode(x'', vt0.c0) THEN (vt0.c0 IN (vt0.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)-(vt0.c0)) WHEN ((vt0.c0)IS NOT(NULL)) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE 'o' END) ORDER BY CAST(((vt0.c0)+(vt0.c0)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE TOTAL_CHANGES()  WHEN vt0.c0 THEN ((vt0.c0)GLOB(vt0.c0)) WHEN '774359077' THEN x'' WHEN rtreenode(x'', vt0.c0) THEN (vt0.c0 IN (vt0.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)-(vt0.c0)) WHEN ((vt0.c0)IS NOT(NULL)) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE 'o' END) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)+(vt0.c0)) AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE TOTAL_CHANGES()  WHEN vt0.c0 THEN ((vt0.c0)GLOB(vt0.c0)) WHEN '774359077' THEN x'' WHEN rtreenode(x'', vt0.c0) THEN (vt0.c0 IN (vt0.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)-(vt0.c0)) WHEN ((vt0.c0)IS NOT(NULL)) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE 'o' END) ORDER BY CAST(((vt0.c0)+(vt0.c0)) AS TEXT) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((NOT (t0.c12)))>(t0.c6 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c12)))>(t0.c6 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((NOT (t0.c12)))>(t0.c6 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c12)))>(t0.c6 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((NOT (t0.c12)))>(t0.c6 COLLATE BINARY)));
SELECT * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0)))-(ABS(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt1.c0)))-(ABS(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0)))-(ABS(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt1.c0)))-(ABS(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0)))-(ABS(DISTINCT vt1.c0))));
SELECT COUNT(*) FROM t0, vt1 WHERE (t0.c6) ORDER BY ((((((((t0.c12)OR('')))AND(vt1.c0)))OR(t0.c6)))AND(t0.c12)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((t0.c6) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((((((t0.c12)OR('')))AND(vt1.c0)))OR(t0.c6)))AND(t0.c12)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0, vt1 WHERE (t0.c6) ORDER BY ((((((((t0.c12)OR('')))AND(vt1.c0)))OR(t0.c6)))AND(t0.c12)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((t0.c6) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((((((t0.c12)OR('')))AND(vt1.c0)))OR(t0.c6)))AND(t0.c12)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0, vt1 WHERE (t0.c6) ORDER BY ((((((((t0.c12)OR('')))AND(vt1.c0)))OR(t0.c6)))AND(t0.c12)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c6);
SELECT SUM(count) FROM (SELECT ALL ((t0.c6) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c6);
SELECT SUM(count) FROM (SELECT ALL ((t0.c6) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c6);
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((((((LIKELY(vt1.c0))OR(((t0.c6) ISNULL))))AND(((((((((vt0.c0)AND(vt1.c0)))AND(1.368348799E9)))AND(vt0.c0)))OR(vt0.c0)))))AND(ABS(vt0.c0))))OR(((t0.c6)-(t0.c6)))) LEFT OUTER JOIN t0 ON (((~ (t0.c12)))LIKE(CASE WHEN t0.c12 THEN vt0.c0 WHEN t0.c12 THEN vt0.c0 WHEN vt1.c0 THEN t0.c6 END)) WHERE (load_extension(x'6f73'));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(x'6f73')) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((((((LIKELY(vt1.c0))OR(((t0.c6) ISNULL))))AND(((((((((vt0.c0)AND(vt1.c0)))AND(1.368348799E9)))AND(vt0.c0)))OR(vt0.c0)))))AND(ABS(vt0.c0))))OR(((t0.c6)-(t0.c6)))) LEFT OUTER JOIN t0 ON (((~ (t0.c12)))LIKE(CASE WHEN t0.c12 THEN vt0.c0 WHEN t0.c12 THEN vt0.c0 WHEN vt1.c0 THEN t0.c6 END)));
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((((((LIKELY(vt1.c0))OR(((t0.c6) ISNULL))))AND(((((((((vt0.c0)AND(vt1.c0)))AND(1.368348799E9)))AND(vt0.c0)))OR(vt0.c0)))))AND(ABS(vt0.c0))))OR(((t0.c6)-(t0.c6)))) LEFT OUTER JOIN t0 ON (((~ (t0.c12)))LIKE(CASE WHEN t0.c12 THEN vt0.c0 WHEN t0.c12 THEN vt0.c0 WHEN vt1.c0 THEN t0.c6 END)) WHERE (load_extension(x'6f73'));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(x'6f73')) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((((((LIKELY(vt1.c0))OR(((t0.c6) ISNULL))))AND(((((((((vt0.c0)AND(vt1.c0)))AND(1.368348799E9)))AND(vt0.c0)))OR(vt0.c0)))))AND(ABS(vt0.c0))))OR(((t0.c6)-(t0.c6)))) LEFT OUTER JOIN t0 ON (((~ (t0.c12)))LIKE(CASE WHEN t0.c12 THEN vt0.c0 WHEN t0.c12 THEN vt0.c0 WHEN vt1.c0 THEN t0.c6 END)));
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((((((LIKELY(vt1.c0))OR(((t0.c6) ISNULL))))AND(((((((((vt0.c0)AND(vt1.c0)))AND(1.368348799E9)))AND(vt0.c0)))OR(vt0.c0)))))AND(ABS(vt0.c0))))OR(((t0.c6)-(t0.c6)))) LEFT OUTER JOIN t0 ON (((~ (t0.c12)))LIKE(CASE WHEN t0.c12 THEN vt0.c0 WHEN t0.c12 THEN vt0.c0 WHEN vt1.c0 THEN t0.c6 END)) WHERE (load_extension(x'6f73'));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((((((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(t0.c12)))AND(t0.c12)))AND(vt1.c0)) THEN ((('-1308228112')) BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN ((t0.c12)=(t0.c6)) THEN ((t0.c6)<=(t0.c12)) WHEN vt1.c0 COLLATE RTRIM THEN ((((t0.c6)OR(vt0.c0)))AND(0.6906172135451107)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((((((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(t0.c12)))AND(t0.c12)))AND(vt1.c0)) THEN ((('-1308228112')) BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN ((t0.c12)=(t0.c6)) THEN ((t0.c6)<=(t0.c12)) WHEN vt1.c0 COLLATE RTRIM THEN ((((t0.c6)OR(vt0.c0)))AND(0.6906172135451107)) END) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((((((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(t0.c12)))AND(t0.c12)))AND(vt1.c0)) THEN ((('-1308228112')) BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN ((t0.c12)=(t0.c6)) THEN ((t0.c6)<=(t0.c12)) WHEN vt1.c0 COLLATE RTRIM THEN ((((t0.c6)OR(vt0.c0)))AND(0.6906172135451107)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((((((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(t0.c12)))AND(t0.c12)))AND(vt1.c0)) THEN ((('-1308228112')) BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN ((t0.c12)=(t0.c6)) THEN ((t0.c6)<=(t0.c12)) WHEN vt1.c0 COLLATE RTRIM THEN ((((t0.c6)OR(vt0.c0)))AND(0.6906172135451107)) END) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((((((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(t0.c12)))AND(t0.c12)))AND(vt1.c0)) THEN ((('-1308228112')) BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN ((t0.c12)=(t0.c6)) THEN ((t0.c6)<=(t0.c12)) WHEN vt1.c0 COLLATE RTRIM THEN ((((t0.c6)OR(vt0.c0)))AND(0.6906172135451107)) END);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((- (((((((((-1201685796)OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((((((-1201685796)OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((- (((((((((-1201685796)OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((((((-1201685796)OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((- (((((((((-1201685796)OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))));
SELECT ALL * FROM vt0 INNER JOIN t0 ON 0x5ddd9ef6 FULL OUTER JOIN vt1 ON (+ (((vt0.c0)GLOB(vt1.c0)))) WHERE (CAST(((vt1.c0)<=(t0.c6)) AS NUMERIC)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))+(((NULL) BETWEEN (vt1.c0) AND (NULL)))), NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)<=(t0.c6)) AS NUMERIC)) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON 0X5ddd9ef6 FULL OUTER JOIN vt1 ON (+ (((vt0.c0)GLOB(vt1.c0)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))+(((NULL) BETWEEN (vt1.c0) AND (NULL)))), NULL ASC);
SELECT ALL * FROM vt0 INNER JOIN t0 ON 0x5ddd9ef6 FULL OUTER JOIN vt1 ON (+ (((vt0.c0)GLOB(vt1.c0)))) WHERE (CAST(((vt1.c0)<=(t0.c6)) AS NUMERIC)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))+(((NULL) BETWEEN (vt1.c0) AND (NULL)))), NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)<=(t0.c6)) AS NUMERIC)) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON 0X5ddd9ef6 FULL OUTER JOIN vt1 ON (+ (((vt0.c0)GLOB(vt1.c0)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))+(((NULL) BETWEEN (vt1.c0) AND (NULL)))), NULL ASC);
SELECT ALL * FROM vt0 INNER JOIN t0 ON 0x5ddd9ef6 FULL OUTER JOIN vt1 ON (+ (((vt0.c0)GLOB(vt1.c0)))) WHERE (CAST(((vt1.c0)<=(t0.c6)) AS NUMERIC)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))+(((NULL) BETWEEN (vt1.c0) AND (NULL)))), NULL ASC;
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c12)AND(t0.c6)))AND(t0.c12))) IS FALSE)) ORDER BY (((t0.c12) ISNULL) IN (((x'bc63')<>(t0.c6))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c12)AND(t0.c6)))AND(t0.c12))) IS FALSE)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c12) ISNULL) IN (((x'bc63')<>(t0.c6))))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c12)AND(t0.c6)))AND(t0.c12))) IS FALSE)) ORDER BY (((t0.c12) ISNULL) IN (((x'bc63')<>(t0.c6))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c12)AND(t0.c6)))AND(t0.c12))) IS FALSE)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c12) ISNULL) IN (((x'bc63')<>(t0.c6))))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c12)AND(t0.c6)))AND(t0.c12))) IS FALSE)) ORDER BY (((t0.c12) ISNULL) IN (((x'bc63')<>(t0.c6))))  NULLS FIRST;
SELECT ALL * FROM vt1, t0, vt0 WHERE (CASE WHEN TYPEOF(NULL) THEN ((t0.c6)||(t0.c6)) END) ORDER BY (+ (UPPER(t0.c12))) DESC, (((((vt0.c0))=((t0.c6)))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TYPEOF(NULL) THEN ((t0.c6)||(t0.c6)) END) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (+ (UPPER(t0.c12))) DESC, (((((vt0.c0))=((t0.c6)))) IS TRUE));
SELECT ALL * FROM vt1, t0, vt0 WHERE (CASE WHEN TYPEOF(NULL) THEN ((t0.c6)||(t0.c6)) END) ORDER BY (+ (UPPER(t0.c12))) DESC, (((((vt0.c0))=((t0.c6)))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TYPEOF(NULL) THEN ((t0.c6)||(t0.c6)) END) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (+ (UPPER(t0.c12))) DESC, (((((vt0.c0))=((t0.c6)))) IS TRUE));
SELECT ALL * FROM vt1, t0, vt0 WHERE (CASE WHEN TYPEOF(NULL) THEN ((t0.c6)||(t0.c6)) END) ORDER BY (+ (UPPER(t0.c12))) DESC, (((((vt0.c0))=((t0.c6)))) IS TRUE);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((t0.c6 COLLATE BINARY))>=((CASE 0.286185261694479  WHEN t0.c6 THEN t0.c12 WHEN vt1.c0 THEN t0.c12 WHEN vt1.c0 THEN vt1.c0 WHEN '588178843' THEN t0.c12 WHEN t0.c6 THEN t0.c6 END)))) ORDER BY (((t0.c12) NOTNULL) IN ()) ASC, '-1302415245';
SELECT SUM(count) FROM (SELECT (((((t0.c6 COLLATE BINARY))>=((CASE 0.286185261694479  WHEN t0.c6 THEN t0.c12 WHEN vt1.c0 THEN t0.c12 WHEN vt1.c0 THEN vt1.c0 WHEN '588178843' THEN t0.c12 WHEN t0.c6 THEN t0.c6 END)))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c12) NOTNULL) IN ()) ASC, '-1302415245');
SELECT COUNT(*) FROM t0, vt1 WHERE ((((t0.c6 COLLATE BINARY))>=((CASE 0.286185261694479  WHEN t0.c6 THEN t0.c12 WHEN vt1.c0 THEN t0.c12 WHEN vt1.c0 THEN vt1.c0 WHEN '588178843' THEN t0.c12 WHEN t0.c6 THEN t0.c6 END)))) ORDER BY (((t0.c12) NOTNULL) IN ()) ASC, '-1302415245';
SELECT SUM(count) FROM (SELECT (((((t0.c6 COLLATE BINARY))>=((CASE 0.286185261694479  WHEN t0.c6 THEN t0.c12 WHEN vt1.c0 THEN t0.c12 WHEN vt1.c0 THEN vt1.c0 WHEN '588178843' THEN t0.c12 WHEN t0.c6 THEN t0.c6 END)))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c12) NOTNULL) IN ()) ASC, '-1302415245');
SELECT COUNT(*) FROM t0, vt1 WHERE ((((t0.c6 COLLATE BINARY))>=((CASE 0.286185261694479  WHEN t0.c6 THEN t0.c12 WHEN vt1.c0 THEN t0.c12 WHEN vt1.c0 THEN vt1.c0 WHEN '588178843' THEN t0.c12 WHEN t0.c6 THEN t0.c6 END)))) ORDER BY (((t0.c12) NOTNULL) IN ()) ASC, '-1302415245';
SELECT * FROM vt0, t0, vt1 WHERE (((((((t0.c6) IS TRUE))AND((x'' IN ()))))AND(t0.c6))) ORDER BY ((vt1.c0)%(((t0.c12) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c6) IS TRUE))AND((x'' IN ()))))AND(t0.c6))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((vt1.c0)%(((t0.c12) NOTNULL))) DESC  NULLS FIRST);
SELECT * FROM vt0, t0, vt1 WHERE (((((((t0.c6) IS TRUE))AND((x'' IN ()))))AND(t0.c6))) ORDER BY ((vt1.c0)%(((t0.c12) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c6) IS TRUE))AND((x'' IN ()))))AND(t0.c6))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((vt1.c0)%(((t0.c12) NOTNULL))) DESC  NULLS FIRST);
SELECT * FROM vt0, t0, vt1 WHERE (((((((t0.c6) IS TRUE))AND((x'' IN ()))))AND(t0.c6))) ORDER BY ((vt1.c0)%(((t0.c12) NOTNULL))) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((~ (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ (CAST(vt1.c0 AS TEXT))));
SELECT ALL * FROM vt1 INNER JOIN t0 ON ((t0.c12) NOT BETWEEN (CAST(t0.c12 AS REAL)) AND ((((vt1.c0))<=((t0.c12))))) WHERE (((((t0.c6)%(t0.c12))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c6)%(t0.c12))) ISNULL)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((t0.c12) NOT BETWEEN (CAST(t0.c12 AS REAL)) AND ((((vt1.c0))<=((t0.c12))))));
SELECT ALL * FROM vt1 INNER JOIN t0 ON ((t0.c12) NOT BETWEEN (CAST(t0.c12 AS REAL)) AND ((((vt1.c0))<=((t0.c12))))) WHERE (((((t0.c6)%(t0.c12))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c6)%(t0.c12))) ISNULL)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((t0.c12) NOT BETWEEN (CAST(t0.c12 AS REAL)) AND ((((vt1.c0))<=((t0.c12))))));
SELECT ALL * FROM vt1 INNER JOIN t0 ON ((t0.c12) NOT BETWEEN (CAST(t0.c12 AS REAL)) AND ((((vt1.c0))<=((t0.c12))))) WHERE (((((t0.c6)%(t0.c12))) ISNULL));
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (vt1.c0) AND (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) BETWEEN (vt1.c0) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (vt1.c0) AND (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) BETWEEN (vt1.c0) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (vt1.c0) AND (((vt1.c0) NOT NULL))));
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0)-(vt1.c0)) ELSE x'' END) ORDER BY (((((vt1.c0)) NOT BETWEEN ((0.5856682169884501)) AND ((vt1.c0)))) NOT BETWEEN ('') AND ('-637099480')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0)-(vt1.c0)) ELSE x'' END) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) NOT BETWEEN ((0.5856682169884501)) AND ((vt1.c0)))) NOT BETWEEN ('') AND ('-637099480')) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0)-(vt1.c0)) ELSE x'' END) ORDER BY (((((vt1.c0)) NOT BETWEEN ((0.5856682169884501)) AND ((vt1.c0)))) NOT BETWEEN ('') AND ('-637099480')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0)-(vt1.c0)) ELSE x'' END) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) NOT BETWEEN ((0.5856682169884501)) AND ((vt1.c0)))) NOT BETWEEN ('') AND ('-637099480')) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0)-(vt1.c0)) ELSE x'' END) ORDER BY (((((vt1.c0)) NOT BETWEEN ((0.5856682169884501)) AND ((vt1.c0)))) NOT BETWEEN ('') AND ('-637099480')) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c12 AS REAL)) NOT BETWEEN (((t0.c6) NOT NULL)) AND ('-823704884'))) ORDER BY (((t0.c6 COLLATE RTRIM))>((CAST(t0.c6 AS BLOB)))), t0.c6 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c12 AS REAL)) NOT BETWEEN (((t0.c6) NOT NULL)) AND ('-823704884'))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c6 COLLATE RTRIM))>((CAST(t0.c6 AS BLOB)))), t0.c6 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c12 AS REAL)) NOT BETWEEN (((t0.c6) NOT NULL)) AND ('-823704884'))) ORDER BY (((t0.c6 COLLATE RTRIM))>((CAST(t0.c6 AS BLOB)))), t0.c6 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c12 AS REAL)) NOT BETWEEN (((t0.c6) NOT NULL)) AND ('-823704884'))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c6 COLLATE RTRIM))>((CAST(t0.c6 AS BLOB)))), t0.c6 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c12 AS REAL)) NOT BETWEEN (((t0.c6) NOT NULL)) AND ('-823704884'))) ORDER BY (((t0.c6 COLLATE RTRIM))>((CAST(t0.c6 AS BLOB)))), t0.c6 DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.7037359930811631)) AND ((vt0.c0, vt0.c0, vt0.c0))))IS NOT(((vt0.c0) NOT BETWEEN ('-1865266700') AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.7037359930811631)) AND ((vt0.c0, vt0.c0, vt0.c0))))IS NOT(((vt0.c0) NOT BETWEEN ('-1865266700') AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.7037359930811631)) AND ((vt0.c0, vt0.c0, vt0.c0))))IS NOT(((vt0.c0) NOT BETWEEN ('-1865266700') AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.7037359930811631)) AND ((vt0.c0, vt0.c0, vt0.c0))))IS NOT(((vt0.c0) NOT BETWEEN ('-1865266700') AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.7037359930811631)) AND ((vt0.c0, vt0.c0, vt0.c0))))IS NOT(((vt0.c0) NOT BETWEEN ('-1865266700') AND (vt0.c0)))));
SELECT * FROM vt0, vt1, t0 WHERE ((((t0.c6)) BETWEEN (((~ (NULL)))) AND ((((((((((vt1.c0)OR(vt0.c0)))AND(0.286185261694479)))AND(vt1.c0)))AND(vt1.c0)))))) ORDER BY vt1.c0 ASC, ((((((((((((vt1.c0)AND((((vt0.c0)) BETWEEN ((t0.c12)) AND ((vt1.c0))))))OR((~ (t0.c12)))))OR(HEX(vt0.c0))))OR(((vt0.c0)OR(t0.c12)))))AND(((t0.c6)<(vt0.c0)))))OR(CAST(t0.c6 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c6)) BETWEEN (((~ (NULL)))) AND ((((((((((vt1.c0)OR(vt0.c0)))AND(0.286185261694479)))AND(vt1.c0)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY vt1.c0 ASC, ((((((((((((vt1.c0)AND((((vt0.c0)) BETWEEN ((t0.c12)) AND ((vt1.c0))))))OR((~ (t0.c12)))))OR(HEX(vt0.c0))))OR(((vt0.c0)OR(t0.c12)))))AND(((t0.c6)<(vt0.c0)))))OR(CAST(t0.c6 AS TEXT)))  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 WHERE ((((t0.c6)) BETWEEN (((~ (NULL)))) AND ((((((((((vt1.c0)OR(vt0.c0)))AND(0.286185261694479)))AND(vt1.c0)))AND(vt1.c0)))))) ORDER BY vt1.c0 ASC, ((((((((((((vt1.c0)AND((((vt0.c0)) BETWEEN ((t0.c12)) AND ((vt1.c0))))))OR((~ (t0.c12)))))OR(HEX(vt0.c0))))OR(((vt0.c0)OR(t0.c12)))))AND(((t0.c6)<(vt0.c0)))))OR(CAST(t0.c6 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c6)) BETWEEN (((~ (NULL)))) AND ((((((((((vt1.c0)OR(vt0.c0)))AND(0.286185261694479)))AND(vt1.c0)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY vt1.c0 ASC, ((((((((((((vt1.c0)AND((((vt0.c0)) BETWEEN ((t0.c12)) AND ((vt1.c0))))))OR((~ (t0.c12)))))OR(HEX(vt0.c0))))OR(((vt0.c0)OR(t0.c12)))))AND(((t0.c6)<(vt0.c0)))))OR(CAST(t0.c6 AS TEXT)))  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 WHERE ((((t0.c6)) BETWEEN (((~ (NULL)))) AND ((((((((((vt1.c0)OR(vt0.c0)))AND(0.286185261694479)))AND(vt1.c0)))AND(vt1.c0)))))) ORDER BY vt1.c0 ASC, ((((((((((((vt1.c0)AND((((vt0.c0)) BETWEEN ((t0.c12)) AND ((vt1.c0))))))OR((~ (t0.c12)))))OR(HEX(vt0.c0))))OR(((vt0.c0)OR(t0.c12)))))AND(((t0.c6)<(vt0.c0)))))OR(CAST(t0.c6 AS TEXT)))  NULLS FIRST;
SELECT * FROM t0 WHERE (CAST(((t0.c12)&(t0.c6)) AS BLOB)) ORDER BY ((1067275600)&(t0.c12)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c12)&(t0.c6)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY ((1067275600)&(t0.c12)) COLLATE BINARY ASC);
SELECT * FROM t0 WHERE (CAST(((t0.c12)&(t0.c6)) AS BLOB)) ORDER BY ((1067275600)&(t0.c12)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c12)&(t0.c6)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY ((1067275600)&(t0.c12)) COLLATE BINARY ASC);
SELECT * FROM t0 WHERE (CAST(((t0.c12)&(t0.c6)) AS BLOB)) ORDER BY ((1067275600)&(t0.c12)) COLLATE BINARY ASC;
SELECT COUNT(*) FROM vt1, t0 WHERE ((~ ((+ (t0.c6)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (t0.c6))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((~ ((+ (t0.c6)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (t0.c6))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((~ ((+ (t0.c6)))));
SELECT COUNT(*) FROM vt1 WHERE (CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL)) ORDER BY (((((vt1.c0)LIKE(vt1.c0)), vt1.c0, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))=((LIKE(vt1.c0, vt1.c0), vt1.c0, ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)LIKE(vt1.c0)), vt1.c0, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))=((LIKE(vt1.c0, vt1.c0), vt1.c0, ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL)) ORDER BY (((((vt1.c0)LIKE(vt1.c0)), vt1.c0, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))=((LIKE(vt1.c0, vt1.c0), vt1.c0, ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)LIKE(vt1.c0)), vt1.c0, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))=((LIKE(vt1.c0, vt1.c0), vt1.c0, ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL)) ORDER BY (((((vt1.c0)LIKE(vt1.c0)), vt1.c0, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))=((LIKE(vt1.c0, vt1.c0), vt1.c0, ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON LOWER(GLOB(t0.c12, 0.03720670260334602)) RIGHT OUTER JOIN t0 ON CASE WHEN t0.c6 THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (1.425702774E9)) END WHERE (((SQLITE_SOURCE_ID()) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID()) IS FALSE)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON LOWER(GLOB(t0.c12, 0.03720670260334602)) RIGHT OUTER JOIN t0 ON CASE WHEN t0.c6 THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (1.425702774E9)) END);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON LOWER(GLOB(t0.c12, 0.03720670260334602)) RIGHT OUTER JOIN t0 ON CASE WHEN t0.c6 THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (1.425702774E9)) END WHERE (((SQLITE_SOURCE_ID()) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID()) IS FALSE)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON LOWER(GLOB(t0.c12, 0.03720670260334602)) RIGHT OUTER JOIN t0 ON CASE WHEN t0.c6 THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (1.425702774E9)) END);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY TOTAL_CHANGES() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY TOTAL_CHANGES() ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY TOTAL_CHANGES() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY TOTAL_CHANGES() ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY TOTAL_CHANGES() ASC  NULLS LAST;
SELECT * FROM vt1, t0 WHERE (((-1747358875) NOT BETWEEN (t0.c12) AND (t0.c6)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((-1747358875) NOT BETWEEN (t0.c12) AND (t0.c6)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((-1747358875) NOT BETWEEN (t0.c12) AND (t0.c6)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((-1747358875) NOT BETWEEN (t0.c12) AND (t0.c6)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((-1747358875) NOT BETWEEN (t0.c12) AND (t0.c6)) COLLATE BINARY);
SELECT * FROM vt1, vt0, t0 WHERE (NULL) ORDER BY (t0.c12 IN (t0.c12)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (t0.c12 IN (t0.c12)) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt1, vt0, t0 WHERE (NULL) ORDER BY (t0.c12 IN (t0.c12)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (t0.c12 IN (t0.c12)) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt1, vt0, t0 WHERE (NULL) ORDER BY (t0.c12 IN (t0.c12)) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM t0, vt1 WHERE (((RTRIM(t0.c6)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((RTRIM(t0.c6)) ISNULL)) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((RTRIM(t0.c6)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((RTRIM(t0.c6)) ISNULL)) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((RTRIM(t0.c6)) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (json_extract(CAST(vt0.c0 AS REAL), vt0.c0));
SELECT SUM(count) FROM (SELECT ((json_extract(CAST(vt0.c0 AS REAL), vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_extract(CAST(vt0.c0 AS REAL), vt0.c0));
SELECT SUM(count) FROM (SELECT ((json_extract(CAST(vt0.c0 AS REAL), vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt1 WHERE (UNICODE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((UNICODE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (UNICODE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((UNICODE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (UNICODE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((t0.c6 COLLATE RTRIM)<>((- (vt1.c0)))) WHERE (((vt1.c0 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((t0.c6 COLLATE RTRIM)<>((- (vt1.c0)))));
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((t0.c6 COLLATE RTRIM)<>((- (vt1.c0)))) WHERE (((vt1.c0 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((t0.c6 COLLATE RTRIM)<>((- (vt1.c0)))));
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((t0.c6 COLLATE RTRIM)<>((- (vt1.c0)))) WHERE (((vt1.c0 COLLATE NOCASE) IS FALSE));
SELECT * FROM vt1, vt0, t0 WHERE ((+ (((t0.c6) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c6) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE ((+ (((t0.c6) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c6) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE ((+ (((t0.c6) IS FALSE))));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED CROSS JOIN vt1 ON (((t0.c12 IN ())) ISNULL) RIGHT OUTER JOIN vt0 ON (((((t0.c6, vt0.c0, vt0.c0))<((t0.c6, t0.c6, vt1.c0)))) NOT NULL) WHERE (CAST(t0.c12 COLLATE NOCASE AS REAL)) ORDER BY CAST((NOT (vt1.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c12 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((t0.c12 IN ())) ISNULL) RIGHT OUTER JOIN vt0 ON (((((t0.c6, vt0.c0, vt0.c0))<((t0.c6, t0.c6, vt1.c0)))) NOT NULL) ORDER BY CAST((NOT (vt1.c0)) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED CROSS JOIN vt1 ON (((t0.c12 IN ())) ISNULL) RIGHT OUTER JOIN vt0 ON (((((t0.c6, vt0.c0, vt0.c0))<((t0.c6, t0.c6, vt1.c0)))) NOT NULL) WHERE (CAST(t0.c12 COLLATE NOCASE AS REAL)) ORDER BY CAST((NOT (vt1.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c12 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((t0.c12 IN ())) ISNULL) RIGHT OUTER JOIN vt0 ON (((((t0.c6, vt0.c0, vt0.c0))<((t0.c6, t0.c6, vt1.c0)))) NOT NULL) ORDER BY CAST((NOT (vt1.c0)) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED CROSS JOIN vt1 ON (((t0.c12 IN ())) ISNULL) RIGHT OUTER JOIN vt0 ON (((((t0.c6, vt0.c0, vt0.c0))<((t0.c6, t0.c6, vt1.c0)))) NOT NULL) WHERE (CAST(t0.c12 COLLATE NOCASE AS REAL)) ORDER BY CAST((NOT (vt1.c0)) AS INTEGER) DESC;
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(((vt1.c0) IS TRUE) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) IS TRUE) AS INTEGER) ASC);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(((vt1.c0) IS TRUE) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) IS TRUE) AS INTEGER) ASC);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(((vt1.c0) IS TRUE) AS INTEGER) ASC;
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))<(0X4a288518))) ORDER BY (((COALESCE(vt0.c0, vt0.c0)))>=((vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))<(0X4a288518))) IS TRUE)  as count FROM vt0 ORDER BY (((COALESCE(vt0.c0, vt0.c0)))>=((vt0.c0)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))<(0X4a288518))) ORDER BY (((COALESCE(vt0.c0, vt0.c0)))>=((vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))<(0X4a288518))) IS TRUE)  as count FROM vt0 ORDER BY (((COALESCE(vt0.c0, vt0.c0)))>=((vt0.c0)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))<(0X4a288518))) ORDER BY (((COALESCE(vt0.c0, vt0.c0)))>=((vt0.c0)))  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0)%(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)%(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0)%(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)%(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0)%(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((CAST(t0.c6 AS REAL)))<((((((t0.c6)OR(t0.c12)))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c6 AS REAL)))<((((((t0.c6)OR(t0.c12)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((CAST(t0.c6 AS REAL)))<((((((t0.c6)OR(t0.c12)))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c6 AS REAL)))<((((((t0.c6)OR(t0.c12)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((CAST(t0.c6 AS REAL)))<((((((t0.c6)OR(t0.c12)))AND(vt1.c0))))));
SELECT * FROM t0, vt0 WHERE (UPPER(t0.c12) COLLATE BINARY) ORDER BY (~ (CASE t0.c12  WHEN t0.c12 THEN t0.c12 ELSE t0.c12 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(t0.c12) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (CASE t0.c12  WHEN t0.c12 THEN t0.c12 ELSE t0.c12 END)));
SELECT * FROM t0, vt0 WHERE (UPPER(t0.c12) COLLATE BINARY) ORDER BY (~ (CASE t0.c12  WHEN t0.c12 THEN t0.c12 ELSE t0.c12 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(t0.c12) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (CASE t0.c12  WHEN t0.c12 THEN t0.c12 ELSE t0.c12 END)));
SELECT * FROM t0, vt0 WHERE (UPPER(t0.c12) COLLATE BINARY) ORDER BY (~ (CASE t0.c12  WHEN t0.c12 THEN t0.c12 ELSE t0.c12 END));
SELECT ALL * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(vt1.c0 COLLATE BINARY)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (0.4998333051322932) AND (CASE WHEN vt1.c0 THEN '-1931382721' END));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(vt1.c0 COLLATE BINARY)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (0.4998333051322932) AND (CASE WHEN vt1.c0 THEN '-1931382721' END)));
SELECT ALL * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(vt1.c0 COLLATE BINARY)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (0.4998333051322932) AND (CASE WHEN vt1.c0 THEN '-1931382721' END));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(vt1.c0 COLLATE BINARY)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (0.4998333051322932) AND (CASE WHEN vt1.c0 THEN '-1931382721' END)));
SELECT ALL * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(vt1.c0 COLLATE BINARY)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (0.4998333051322932) AND (CASE WHEN vt1.c0 THEN '-1931382721' END));
SELECT ALL * FROM t0, vt0, vt1 WHERE (((NULL) NOTNULL)) ORDER BY (COALESCE(vt0.c0, t0.c6, vt0.c0, vt0.c0) IN (vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (COALESCE(vt0.c0, t0.c6, vt0.c0, vt0.c0) IN (vt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((NULL) NOTNULL)) ORDER BY (COALESCE(vt0.c0, t0.c6, vt0.c0, vt0.c0) IN (vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (COALESCE(vt0.c0, t0.c6, vt0.c0, vt0.c0) IN (vt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((NULL) NOTNULL)) ORDER BY (COALESCE(vt0.c0, t0.c6, vt0.c0, vt0.c0) IN (vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)IS(vt0.c0)))/(CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS(vt0.c0)))/(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)IS(vt0.c0)))/(CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS(vt0.c0)))/(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)IS(vt0.c0)))/(CAST(vt1.c0 AS REAL))));
SELECT ALL * FROM vt1, t0 WHERE (t0.c12 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((t0.c12 COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (t0.c12 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((t0.c12 COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (t0.c12 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((+ (vt0.c0)))OR(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)OR(vt0.c0))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((+ (vt0.c0)))OR(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((+ (vt0.c0)))OR(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)OR(vt0.c0))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((+ (vt0.c0)))OR(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((+ (vt0.c0)))OR(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)OR(vt0.c0))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOTNULL) DESC;
SELECT * FROM t0 WHERE (((t0.c12 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c12 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c12 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c12 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c12 COLLATE RTRIM) IS TRUE));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((- (UNICODE(vt1.c0)))) ORDER BY (+ (((t0.c6) IS FALSE)));
SELECT SUM(count) FROM (SELECT (((- (UNICODE(vt1.c0)))) IS TRUE)  as count FROM t0, vt1 ORDER BY (+ (((t0.c6) IS FALSE))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((- (UNICODE(vt1.c0)))) ORDER BY (+ (((t0.c6) IS FALSE)));
SELECT SUM(count) FROM (SELECT (((- (UNICODE(vt1.c0)))) IS TRUE)  as count FROM t0, vt1 ORDER BY (+ (((t0.c6) IS FALSE))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((- (UNICODE(vt1.c0)))) ORDER BY (+ (((t0.c6) IS FALSE)));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 NOT INDEXED WHERE (t0.c12);
SELECT SUM(count) FROM (SELECT ((t0.c12) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 NOT INDEXED WHERE (t0.c12);
SELECT SUM(count) FROM (SELECT ((t0.c12) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 NOT INDEXED WHERE (t0.c12);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(vt1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(vt1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(vt1.c0 AS INTEGER));
SELECT * FROM t0 WHERE (-1868232022);
SELECT SUM(count) FROM (SELECT ALL ((-1868232022) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (-1868232022);
SELECT SUM(count) FROM (SELECT ALL ((-1868232022) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (-1868232022);
SELECT ALL * FROM vt0, t0 WHERE (((t0.c12 COLLATE NOCASE) BETWEEN (load_extension(t0.c6)) AND (((t0.c12)LIKE(t0.c6))))) ORDER BY CAST(((t0.c12) NOT NULL) AS NUMERIC), (((t0.c12 IN (t0.c6)))OR(((t0.c12) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c12 COLLATE NOCASE) BETWEEN (load_extension(t0.c6)) AND (((t0.c12)LIKE(t0.c6))))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0 ORDER BY CAST(((t0.c12) NOT NULL) AS NUMERIC), (((t0.c12 IN (t0.c6)))OR(((t0.c12) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((t0.c12 COLLATE NOCASE) BETWEEN (load_extension(t0.c6)) AND (((t0.c12)LIKE(t0.c6))))) ORDER BY CAST(((t0.c12) NOT NULL) AS NUMERIC), (((t0.c12 IN (t0.c6)))OR(((t0.c12) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c12 COLLATE NOCASE) BETWEEN (load_extension(t0.c6)) AND (((t0.c12)LIKE(t0.c6))))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0 ORDER BY CAST(((t0.c12) NOT NULL) AS NUMERIC), (((t0.c12 IN (t0.c6)))OR(((t0.c12) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY vt0.c0, 'Y{+' DESC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, 'Y{+' DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY vt0.c0, 'Y{+' DESC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, 'Y{+' DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY vt0.c0, 'Y{+' DESC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ ((((t0.c6)) BETWEEN ((t0.c6)) AND ((t0.c12)))))) ORDER BY '' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((((t0.c6)) BETWEEN ((t0.c6)) AND ((t0.c12)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY '' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ ((((t0.c6)) BETWEEN ((t0.c6)) AND ((t0.c12)))))) ORDER BY '' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((((t0.c6)) BETWEEN ((t0.c6)) AND ((t0.c12)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY '' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ ((((t0.c6)) BETWEEN ((t0.c6)) AND ((t0.c12)))))) ORDER BY '' ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (+ (vt1.c0 COLLATE BINARY)) WHERE ((NOT (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (+ (vt1.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (+ (vt1.c0 COLLATE BINARY)) WHERE ((NOT (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (+ (vt1.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (+ (vt1.c0 COLLATE BINARY)) WHERE ((NOT (vt1.c0)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON 1.574805238E9 WHERE ((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY (((vt0.c0)IS(vt0.c0)) IN ())  NULLS LAST, (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, ((vt0.c0 COLLATE BINARY) BETWEEN ((- ('1974040478'))) AND (CAST('0.8897177246026392' AS REAL)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON 1.574805238E9 ORDER BY (((vt0.c0)IS(vt0.c0)) IN ())  NULLS LAST, (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, ((vt0.c0 COLLATE BINARY) BETWEEN ((- ('1974040478'))) AND (CAST('0.8897177246026392' AS REAL))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON 1.574805238E9 WHERE ((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY (((vt0.c0)IS(vt0.c0)) IN ())  NULLS LAST, (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, ((vt0.c0 COLLATE BINARY) BETWEEN ((- ('1974040478'))) AND (CAST('0.8897177246026392' AS REAL)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON 1.574805238E9 ORDER BY (((vt0.c0)IS(vt0.c0)) IN ())  NULLS LAST, (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, ((vt0.c0 COLLATE BINARY) BETWEEN ((- ('1974040478'))) AND (CAST('0.8897177246026392' AS REAL))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON 1.574805238E9 WHERE ((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY (((vt0.c0)IS(vt0.c0)) IN ())  NULLS LAST, (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, ((vt0.c0 COLLATE BINARY) BETWEEN ((- ('1974040478'))) AND (CAST('0.8897177246026392' AS REAL)));
SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN t0 ON -2024461199 WHERE ((NOT ((- (vt0.c0))))) ORDER BY (t0.c6 COLLATE BINARY IN ((- (t0.c6)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((- (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t0 ON -2024461199 ORDER BY (t0.c6 COLLATE BINARY IN ((- (t0.c6)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN t0 ON -2024461199 WHERE ((NOT ((- (vt0.c0))))) ORDER BY (t0.c6 COLLATE BINARY IN ((- (t0.c6)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((- (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t0 ON -2024461199 ORDER BY (t0.c6 COLLATE BINARY IN ((- (t0.c6)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN t0 ON -2024461199 WHERE ((NOT ((- (vt0.c0))))) ORDER BY (t0.c6 COLLATE BINARY IN ((- (t0.c6)))) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<<((vt1.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<<((vt1.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<<((vt1.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<<((vt1.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<<((vt1.c0 IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((('')OR(((x'')/(vt0.c0)))))AND(CAST(t0.c6 AS BLOB)))) ORDER BY ((t0.c12) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c0 IN (vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((('')OR(((x'')/(vt0.c0)))))AND(CAST(t0.c6 AS BLOB)))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((t0.c12) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c0 IN (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((('')OR(((x'')/(vt0.c0)))))AND(CAST(t0.c6 AS BLOB)))) ORDER BY ((t0.c12) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c0 IN (vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((('')OR(((x'')/(vt0.c0)))))AND(CAST(t0.c6 AS BLOB)))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((t0.c12) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c0 IN (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((('')OR(((x'')/(vt0.c0)))))AND(CAST(t0.c6 AS BLOB)))) ORDER BY ((t0.c12) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c0 IN (vt1.c0))));
SELECT * FROM vt0, t0 WHERE ((((t0.c6 IN (t0.c12)))>>(((vt0.c0)<=(t0.c12)))));
SELECT SUM(count) FROM (SELECT (((((t0.c6 IN (t0.c12)))>>(((vt0.c0)<=(t0.c12))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((t0.c6 IN (t0.c12)))>>(((vt0.c0)<=(t0.c12)))));
SELECT SUM(count) FROM (SELECT (((((t0.c6 IN (t0.c12)))>>(((vt0.c0)<=(t0.c12))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((t0.c6 IN (t0.c12)))>>(((vt0.c0)<=(t0.c12)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'j' END) AND (((vt0.c0)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'j' END) AND (((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'j' END) AND (((vt0.c0)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'j' END) AND (((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'j' END) AND (((vt0.c0)OR(vt0.c0)))));
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON t0.c6 INNER JOIN vt0 ON CASE ((t0.c6)AND(t0.c6))  WHEN ((vt0.c0)LIKE(vt1.c0)) THEN '-417896186' ELSE CASE vt1.c0  WHEN NULL THEN vt0.c0 ELSE t0.c6 END END WHERE (t0.c12);
SELECT SUM(count) FROM (SELECT ((t0.c12) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON t0.c6 INNER JOIN vt0 ON CASE ((t0.c6)AND(t0.c6))  WHEN ((vt0.c0)LIKE(vt1.c0)) THEN '-417896186' ELSE CASE vt1.c0  WHEN NULL THEN vt0.c0 ELSE t0.c6 END END);
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON t0.c6 INNER JOIN vt0 ON CASE ((t0.c6)AND(t0.c6))  WHEN ((vt0.c0)LIKE(vt1.c0)) THEN '-417896186' ELSE CASE vt1.c0  WHEN NULL THEN vt0.c0 ELSE t0.c6 END END WHERE (t0.c12);
SELECT SUM(count) FROM (SELECT ((t0.c12) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON t0.c6 INNER JOIN vt0 ON CASE ((t0.c6)AND(t0.c6))  WHEN ((vt0.c0)LIKE(vt1.c0)) THEN '-417896186' ELSE CASE vt1.c0  WHEN NULL THEN vt0.c0 ELSE t0.c6 END END);
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON t0.c6 INNER JOIN vt0 ON CASE ((t0.c6)AND(t0.c6))  WHEN ((vt0.c0)LIKE(vt1.c0)) THEN '-417896186' ELSE CASE vt1.c0  WHEN NULL THEN vt0.c0 ELSE t0.c6 END END WHERE (t0.c12);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((~ (TYPEOF(vt1.c0)))) ORDER BY ((((vt0.c0) BETWEEN (t0.c12) AND (t0.c6))) BETWEEN (CASE vt1.c0  WHEN t0.c6 THEN t0.c6 END) AND (t0.c6 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (TYPEOF(vt1.c0)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((vt0.c0) BETWEEN (t0.c12) AND (t0.c6))) BETWEEN (CASE vt1.c0  WHEN t0.c6 THEN t0.c6 END) AND (t0.c6 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((~ (TYPEOF(vt1.c0)))) ORDER BY ((((vt0.c0) BETWEEN (t0.c12) AND (t0.c6))) BETWEEN (CASE vt1.c0  WHEN t0.c6 THEN t0.c6 END) AND (t0.c6 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (TYPEOF(vt1.c0)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((vt0.c0) BETWEEN (t0.c12) AND (t0.c6))) BETWEEN (CASE vt1.c0  WHEN t0.c6 THEN t0.c6 END) AND (t0.c6 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((~ (TYPEOF(vt1.c0)))) ORDER BY ((((vt0.c0) BETWEEN (t0.c12) AND (t0.c6))) BETWEEN (CASE vt1.c0  WHEN t0.c6 THEN t0.c6 END) AND (t0.c6 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((((vt1.c0, t0.c12, t0.c12))=((vt1.c0, t0.c12, t0.c12)))) IS FALSE) CROSS JOIN t0 ON CASE UPPER(t0.c12)  WHEN CAST(vt1.c0 AS TEXT) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) END WHERE ((((((vt0.c0)==(t0.c12))))>=(((- (vt0.c0)))))) ORDER BY ((ABS(vt0.c0))+((t0.c12 IN (t0.c6, vt0.c0)))) DESC  NULLS LAST, (((t0.c6 IN ())) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((((vt1.c0, vt1.c0, vt1.c0))>((t0.c6, vt0.c0, vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)==(t0.c12))))>=(((- (vt0.c0)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((((vt1.c0, t0.c12, t0.c12))==((vt1.c0, t0.c12, t0.c12)))) IS FALSE) CROSS JOIN t0 ON CASE UPPER(t0.c12)  WHEN CAST(vt1.c0 AS TEXT) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) END ORDER BY ((ABS(vt0.c0))+((t0.c12 IN (t0.c6, vt0.c0)))) DESC  NULLS LAST, (((t0.c6 IN ())) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((((vt1.c0, vt1.c0, vt1.c0))>((t0.c6, vt0.c0, vt1.c0))))) DESC);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((((vt1.c0, t0.c12, t0.c12))=((vt1.c0, t0.c12, t0.c12)))) IS FALSE) CROSS JOIN t0 ON CASE UPPER(t0.c12)  WHEN CAST(vt1.c0 AS TEXT) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) END WHERE ((((((vt0.c0)==(t0.c12))))>=(((- (vt0.c0)))))) ORDER BY ((ABS(vt0.c0))+((t0.c12 IN (t0.c6, vt0.c0)))) DESC  NULLS LAST, (((t0.c6 IN ())) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((((vt1.c0, vt1.c0, vt1.c0))>((t0.c6, vt0.c0, vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)==(t0.c12))))>=(((- (vt0.c0)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((((vt1.c0, t0.c12, t0.c12))==((vt1.c0, t0.c12, t0.c12)))) IS FALSE) CROSS JOIN t0 ON CASE UPPER(t0.c12)  WHEN CAST(vt1.c0 AS TEXT) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) END ORDER BY ((ABS(vt0.c0))+((t0.c12 IN (t0.c6, vt0.c0)))) DESC  NULLS LAST, (((t0.c6 IN ())) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((((vt1.c0, vt1.c0, vt1.c0))>((t0.c6, vt0.c0, vt1.c0))))) DESC);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((((vt1.c0, t0.c12, t0.c12))=((vt1.c0, t0.c12, t0.c12)))) IS FALSE) CROSS JOIN t0 ON CASE UPPER(t0.c12)  WHEN CAST(vt1.c0 AS TEXT) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) END WHERE ((((((vt0.c0)==(t0.c12))))>=(((- (vt0.c0)))))) ORDER BY ((ABS(vt0.c0))+((t0.c12 IN (t0.c6, vt0.c0)))) DESC  NULLS LAST, (((t0.c6 IN ())) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((((vt1.c0, vt1.c0, vt1.c0))>((t0.c6, vt0.c0, vt1.c0))))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((~ (t0.c6)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c6)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((~ (t0.c6)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c6)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((~ (t0.c6)) AS REAL));
SELECT * FROM t0, vt0 WHERE ((NOT (t0.c6))) ORDER BY (((x'')) BETWEEN ((UNLIKELY(NULL))) AND (((t0.c12 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (t0.c6))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((x'')) BETWEEN ((UNLIKELY(NULL))) AND (((t0.c12 IN ())))) ASC);
SELECT * FROM t0, vt0 WHERE ((NOT (t0.c6))) ORDER BY (((x'')) BETWEEN ((UNLIKELY(NULL))) AND (((t0.c12 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (t0.c6))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((x'')) BETWEEN ((UNLIKELY(NULL))) AND (((t0.c12 IN ())))) ASC);
SELECT * FROM t0, vt0 WHERE ((NOT (t0.c6))) ORDER BY (((x'')) BETWEEN ((UNLIKELY(NULL))) AND (((t0.c12 IN ())))) ASC;
SELECT COUNT(*) FROM vt1, t0 NOT INDEXED WHERE (((((t0.c12) BETWEEN (t0.c6) AND (vt1.c0)))<<(HEX(DISTINCT NULL)))) ORDER BY CAST(((x'') BETWEEN (t0.c12) AND (vt1.c0)) AS TEXT), ((((((((((t0.c6)OR(t0.c12)))AND(vt1.c0)))OR(t0.c6)))OR(vt1.c0)))<=(((vt1.c0) BETWEEN (t0.c6) AND (t0.c6))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c12) BETWEEN (t0.c6) AND (vt1.c0)))<<(HEX(DISTINCT NULL)))) IS TRUE)  as count FROM vt1, t0 ORDER BY CAST(((x'') BETWEEN (t0.c12) AND (vt1.c0)) AS TEXT), ((((((((((t0.c6)OR(t0.c12)))AND(vt1.c0)))OR(t0.c6)))OR(vt1.c0)))<=(((vt1.c0) BETWEEN (t0.c6) AND (t0.c6))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 NOT INDEXED WHERE (((((t0.c12) BETWEEN (t0.c6) AND (vt1.c0)))<<(HEX(DISTINCT NULL)))) ORDER BY CAST(((x'') BETWEEN (t0.c12) AND (vt1.c0)) AS TEXT), ((((((((((t0.c6)OR(t0.c12)))AND(vt1.c0)))OR(t0.c6)))OR(vt1.c0)))<=(((vt1.c0) BETWEEN (t0.c6) AND (t0.c6))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c12) BETWEEN (t0.c6) AND (vt1.c0)))<<(HEX(DISTINCT NULL)))) IS TRUE)  as count FROM vt1, t0 ORDER BY CAST(((x'') BETWEEN (t0.c12) AND (vt1.c0)) AS TEXT), ((((((((((t0.c6)OR(t0.c12)))AND(vt1.c0)))OR(t0.c6)))OR(vt1.c0)))<=(((vt1.c0) BETWEEN (t0.c6) AND (t0.c6))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 NOT INDEXED WHERE (((((t0.c12) BETWEEN (t0.c6) AND (vt1.c0)))<<(HEX(DISTINCT NULL)))) ORDER BY CAST(((x'') BETWEEN (t0.c12) AND (vt1.c0)) AS TEXT), ((((((((((t0.c6)OR(t0.c12)))AND(vt1.c0)))OR(t0.c6)))OR(vt1.c0)))<=(((vt1.c0) BETWEEN (t0.c6) AND (t0.c6))))  NULLS LAST;
SELECT ALL * FROM vt1, vt0, t0 WHERE (vt1.c0) ORDER BY t0.c12  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY t0.c12  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 WHERE (vt1.c0) ORDER BY t0.c12  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY t0.c12  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 WHERE (vt1.c0) ORDER BY t0.c12  NULLS LAST;
SELECT * FROM t0, vt0, vt1 WHERE (QUOTE((('_^') NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((QUOTE((('_^') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (QUOTE((('_^') NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((QUOTE((('_^') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (QUOTE((('_^') NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT * FROM t0, vt0, vt1 WHERE (NULL COLLATE NOCASE) ORDER BY (((t0.c12, vt0.c0, t0.c12, vt1.c0, t0.c12)) NOT BETWEEN (((((0.001363678737730023)) BETWEEN ((vt0.c0)) AND ((t0.c12))), CAST(t0.c6 AS TEXT), (((vt1.c0))>=((-1.799373153E9))), (~ (t0.c12)), CASE t0.c12  WHEN vt1.c0 THEN t0.c6 END)) AND ((vt1.c0, ((((t0.c12)OR(vt0.c0)))AND(vt0.c0)), ((vt1.c0)AND(vt1.c0)), '0.4202032479736386', load_extension(x''))));
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((t0.c12, vt0.c0, t0.c12, vt1.c0, t0.c12)) NOT BETWEEN (((((0.001363678737730023)) BETWEEN ((vt0.c0)) AND ((t0.c12))), CAST(t0.c6 AS TEXT), (((vt1.c0))>=((-1.799373153E9))), (~ (t0.c12)), CASE t0.c12  WHEN vt1.c0 THEN t0.c6 END)) AND ((vt1.c0, ((((t0.c12)OR(vt0.c0)))AND(vt0.c0)), ((vt1.c0)AND(vt1.c0)), '0.4202032479736386', load_extension(x'')))));
SELECT * FROM t0, vt0, vt1 WHERE (NULL COLLATE NOCASE) ORDER BY (((t0.c12, vt0.c0, t0.c12, vt1.c0, t0.c12)) NOT BETWEEN (((((0.001363678737730023)) BETWEEN ((vt0.c0)) AND ((t0.c12))), CAST(t0.c6 AS TEXT), (((vt1.c0))>=((-1.799373153E9))), (~ (t0.c12)), CASE t0.c12  WHEN vt1.c0 THEN t0.c6 END)) AND ((vt1.c0, ((((t0.c12)OR(vt0.c0)))AND(vt0.c0)), ((vt1.c0)AND(vt1.c0)), '0.4202032479736386', load_extension(x''))));
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((t0.c12, vt0.c0, t0.c12, vt1.c0, t0.c12)) NOT BETWEEN (((((0.001363678737730023)) BETWEEN ((vt0.c0)) AND ((t0.c12))), CAST(t0.c6 AS TEXT), (((vt1.c0))>=((-1.799373153E9))), (~ (t0.c12)), CASE t0.c12  WHEN vt1.c0 THEN t0.c6 END)) AND ((vt1.c0, ((((t0.c12)OR(vt0.c0)))AND(vt0.c0)), ((vt1.c0)AND(vt1.c0)), '0.4202032479736386', load_extension(x'')))));
SELECT * FROM t0, vt0, vt1 WHERE (NULL COLLATE NOCASE) ORDER BY (((t0.c12, vt0.c0, t0.c12, vt1.c0, t0.c12)) NOT BETWEEN (((((0.001363678737730023)) BETWEEN ((vt0.c0)) AND ((t0.c12))), CAST(t0.c6 AS TEXT), (((vt1.c0))>=((-1.799373153E9))), (~ (t0.c12)), CASE t0.c12  WHEN vt1.c0 THEN t0.c6 END)) AND ((vt1.c0, ((((t0.c12)OR(vt0.c0)))AND(vt0.c0)), ((vt1.c0)AND(vt1.c0)), '0.4202032479736386', load_extension(x''))));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON (((((t0.c6, t0.c6, t0.c12)) NOT BETWEEN ((t0.c6, t0.c6, vt1.c0)) AND (('', '', t0.c6)))) ISNULL) WHERE (CAST((t0.c12 IN ()) AS REAL)) ORDER BY (~ ((- (t0.c12)))) DESC, (((- (t0.c6))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (t0.c12))) AND ((t0.c6 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c12 IN ()) AS REAL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (((((t0.c6, t0.c6, t0.c12)) NOT BETWEEN ((t0.c6, t0.c6, vt1.c0)) AND (('', '', t0.c6)))) ISNULL) ORDER BY (~ ((- (t0.c12)))) DESC, (((- (t0.c6))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (t0.c12))) AND ((t0.c6 IN ())))  NULLS FIRST);
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON (((((t0.c6, t0.c6, t0.c12)) NOT BETWEEN ((t0.c6, t0.c6, vt1.c0)) AND (('', '', t0.c6)))) ISNULL) WHERE (CAST((t0.c12 IN ()) AS REAL)) ORDER BY (~ ((- (t0.c12)))) DESC, (((- (t0.c6))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (t0.c12))) AND ((t0.c6 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c12 IN ()) AS REAL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (((((t0.c6, t0.c6, t0.c12)) NOT BETWEEN ((t0.c6, t0.c6, vt1.c0)) AND (('', '', t0.c6)))) ISNULL) ORDER BY (~ ((- (t0.c12)))) DESC, (((- (t0.c6))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (t0.c12))) AND ((t0.c6 IN ())))  NULLS FIRST);
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON (((((t0.c6, t0.c6, t0.c12)) NOT BETWEEN ((t0.c6, t0.c6, vt1.c0)) AND (('', '', t0.c6)))) ISNULL) WHERE (CAST((t0.c12 IN ()) AS REAL)) ORDER BY (~ ((- (t0.c12)))) DESC, (((- (t0.c6))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (t0.c12))) AND ((t0.c6 IN ())))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((json_remove(t0.c6, t0.c6))OR((t0.c6 IN (t0.c6)))))OR((('''W掳D\r*T/*') ISNULL)))) ORDER BY LIKELY(DISTINCT CAST(t0.c12 AS NUMERIC))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((json_remove(t0.c6, t0.c6))OR((t0.c6 IN (t0.c6)))))OR((('''W掳D\r*T/*') ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY LIKELY(DISTINCT CAST(t0.c12 AS NUMERIC))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((json_remove(t0.c6, t0.c6))OR((t0.c6 IN (t0.c6)))))OR((('''W掳D\r*T/*') ISNULL)))) ORDER BY LIKELY(DISTINCT CAST(t0.c12 AS NUMERIC))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((json_remove(t0.c6, t0.c6))OR((t0.c6 IN (t0.c6)))))OR((('''W掳D\r*T/*') ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY LIKELY(DISTINCT CAST(t0.c12 AS NUMERIC))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN t0 ON NULL WHERE (CASE ((NULL) NOT BETWEEN (vt1.c0) AND (t0.c12))  WHEN vt0.c0 COLLATE BINARY THEN vt1.c0 ELSE CASE WHEN t0.c12 THEN '-542914950' ELSE t0.c12 END END) ORDER BY CASE WHEN ((t0.c6) NOTNULL) THEN (t0.c12 IN (0.8997385092998305)) ELSE (- (t0.c12)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((NULL) NOT BETWEEN (vt1.c0) AND (t0.c12))  WHEN vt0.c0 COLLATE BINARY THEN vt1.c0 ELSE CASE WHEN t0.c12 THEN '-542914950' ELSE t0.c12 END END) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON NULL ORDER BY CASE WHEN ((t0.c6) NOTNULL) THEN (t0.c12 IN (0.8997385092998305)) ELSE (- (t0.c12)) END DESC);
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN t0 ON NULL WHERE (CASE ((NULL) NOT BETWEEN (vt1.c0) AND (t0.c12))  WHEN vt0.c0 COLLATE BINARY THEN vt1.c0 ELSE CASE WHEN t0.c12 THEN '-542914950' ELSE t0.c12 END END) ORDER BY CASE WHEN ((t0.c6) NOTNULL) THEN (t0.c12 IN (0.8997385092998305)) ELSE (- (t0.c12)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((NULL) NOT BETWEEN (vt1.c0) AND (t0.c12))  WHEN vt0.c0 COLLATE BINARY THEN vt1.c0 ELSE CASE WHEN t0.c12 THEN '-542914950' ELSE t0.c12 END END) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON NULL ORDER BY CASE WHEN ((t0.c6) NOTNULL) THEN (t0.c12 IN (0.8997385092998305)) ELSE (- (t0.c12)) END DESC);
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN t0 ON NULL WHERE (CASE ((NULL) NOT BETWEEN (vt1.c0) AND (t0.c12))  WHEN vt0.c0 COLLATE BINARY THEN vt1.c0 ELSE CASE WHEN t0.c12 THEN '-542914950' ELSE t0.c12 END END) ORDER BY CASE WHEN ((t0.c6) NOTNULL) THEN (t0.c12 IN (0.8997385092998305)) ELSE (- (t0.c12)) END DESC;
SELECT * FROM t0 WHERE ((((t0.c6)) BETWEEN (((+ (t0.c12)))) AND ((((t0.c12) BETWEEN (t0.c6) AND (t0.c12)))))) ORDER BY (((t0.c12)) NOT BETWEEN ((((t0.c12)/(t0.c6)))) AND ((((t0.c6)IS(t0.c6))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c6)) BETWEEN (((+ (t0.c12)))) AND ((((t0.c12) BETWEEN (t0.c6) AND (t0.c12)))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c12)) NOT BETWEEN ((((t0.c12)/(t0.c6)))) AND ((((t0.c6)IS(t0.c6))))) ASC  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c6)) BETWEEN (((+ (t0.c12)))) AND ((((t0.c12) BETWEEN (t0.c6) AND (t0.c12)))))) ORDER BY (((t0.c12)) NOT BETWEEN ((((t0.c12)/(t0.c6)))) AND ((((t0.c6)IS(t0.c6))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c6)) BETWEEN (((+ (t0.c12)))) AND ((((t0.c12) BETWEEN (t0.c6) AND (t0.c12)))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c12)) NOT BETWEEN ((((t0.c12)/(t0.c6)))) AND ((((t0.c6)IS(t0.c6))))) ASC  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c6)) BETWEEN (((+ (t0.c12)))) AND ((((t0.c12) BETWEEN (t0.c6) AND (t0.c12)))))) ORDER BY (((t0.c12)) NOT BETWEEN ((((t0.c12)/(t0.c6)))) AND ((((t0.c6)IS(t0.c6))))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CASE WHEN (- (vt1.c0)) THEN (('1094498728') NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (vt1.c0)) THEN (('1094498728') NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (- (vt1.c0)) THEN (('1094498728') NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (vt1.c0)) THEN (('1094498728') NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (- (vt1.c0)) THEN (('1094498728') NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 END);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((t0.c12)-(t0.c12))) IS TRUE)) ORDER BY 0.6150122441561596  NULLS FIRST, CAST((((vt1.c0, t0.c12, '690810575'))=((vt0.c0, t0.c6, vt0.c0))) AS REAL)  NULLS FIRST, vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c12)-(t0.c12))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY 0.6150122441561596  NULLS FIRST, CAST((((vt1.c0, t0.c12, '690810575'))==((vt0.c0, t0.c6, vt0.c0))) AS REAL)  NULLS FIRST, vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((t0.c12)-(t0.c12))) IS TRUE)) ORDER BY 0.6150122441561596  NULLS FIRST, CAST((((vt1.c0, t0.c12, '690810575'))=((vt0.c0, t0.c6, vt0.c0))) AS REAL)  NULLS FIRST, vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c12)-(t0.c12))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY 0.6150122441561596  NULLS FIRST, CAST((((vt1.c0, t0.c12, '690810575'))==((vt0.c0, t0.c6, vt0.c0))) AS REAL)  NULLS FIRST, vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((t0.c12)-(t0.c12))) IS TRUE)) ORDER BY 0.6150122441561596  NULLS FIRST, CAST((((vt1.c0, t0.c12, '690810575'))=((vt0.c0, t0.c6, vt0.c0))) AS REAL)  NULLS FIRST, vt1.c0  NULLS LAST;
SELECT * FROM vt1 WHERE ((+ (((((0.17695585674938508)OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((0.17695585674938508)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((+ (((((0.17695585674938508)OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((0.17695585674938508)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((+ (((((0.17695585674938508)OR(vt1.c0)))AND(vt1.c0)))));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) ORDER BY ABS(CAST(vt0.c0 AS NUMERIC)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ABS(CAST(vt0.c0 AS NUMERIC)) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) ORDER BY ABS(CAST(vt0.c0 AS NUMERIC)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ABS(CAST(vt0.c0 AS NUMERIC)) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) ORDER BY ABS(CAST(vt0.c0 AS NUMERIC)) ASC;
SELECT * FROM vt0, vt1 INDEXED BY i72, t0 WHERE (json_type(((t0.c12) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((json_type(((t0.c12) IS TRUE))) IS TRUE)  as count FROM vt0, vt1 INDEXED BY i72, t0);
SELECT * FROM vt0, vt1 INDEXED BY i72, t0 WHERE (json_type(((t0.c12) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((json_type(((t0.c12) IS TRUE))) IS TRUE)  as count FROM vt0, vt1 INDEXED BY i72, t0);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0)*(vt0.c0)) IN ())) ORDER BY CASE WHEN (((vt1.c0))=((vt1.c0))) THEN ((((vt1.c0)AND(vt0.c0)))AND(x'')) ELSE vt0.c0 COLLATE BINARY END DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)*(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN (((vt1.c0))==((vt1.c0))) THEN ((((vt1.c0)AND(vt0.c0)))AND(x'')) ELSE vt0.c0 COLLATE BINARY END DESC);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0)*(vt0.c0)) IN ())) ORDER BY CASE WHEN (((vt1.c0))=((vt1.c0))) THEN ((((vt1.c0)AND(vt0.c0)))AND(x'')) ELSE vt0.c0 COLLATE BINARY END DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)*(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN (((vt1.c0))==((vt1.c0))) THEN ((((vt1.c0)AND(vt0.c0)))AND(x'')) ELSE vt0.c0 COLLATE BINARY END DESC);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0)*(vt0.c0)) IN ())) ORDER BY CASE WHEN (((vt1.c0))=((vt1.c0))) THEN ((((vt1.c0)AND(vt0.c0)))AND(x'')) ELSE vt0.c0 COLLATE BINARY END DESC;
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (RTRIM(LIKE(vt1.c0, t0.c12, 'u')));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(LIKE(vt1.c0, t0.c12, 'u'))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (RTRIM(LIKE(vt1.c0, t0.c12, 'u')));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(LIKE(vt1.c0, t0.c12, 'u'))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (RTRIM(LIKE(vt1.c0, t0.c12, 'u')));
SELECT ALL * FROM vt1, t0 WHERE (GLOB(((vt1.c0) NOT BETWEEN (t0.c12) AND (vt1.c0)), (t0.c12 IN (vt1.c0, t0.c12))));
SELECT SUM(count) FROM (SELECT ((GLOB(((vt1.c0) NOT BETWEEN (t0.c12) AND (vt1.c0)), (t0.c12 IN (vt1.c0, t0.c12)))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (GLOB(((vt1.c0) NOT BETWEEN (t0.c12) AND (vt1.c0)), (t0.c12 IN (vt1.c0, t0.c12))));
SELECT SUM(count) FROM (SELECT ((GLOB(((vt1.c0) NOT BETWEEN (t0.c12) AND (vt1.c0)), (t0.c12 IN (vt1.c0, t0.c12)))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (GLOB(((vt1.c0) NOT BETWEEN (t0.c12) AND (vt1.c0)), (t0.c12 IN (vt1.c0, t0.c12))));
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))OR((+ (vt0.c0)))))OR(((1736273539)&(vt0.c0))))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))IS(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))), CAST((NOT (vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS NUMERIC))OR((+ (vt0.c0)))))OR(((1736273539)&(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))IS(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))), CAST((NOT (vt0.c0)) AS BLOB));
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))OR((+ (vt0.c0)))))OR(((1736273539)&(vt0.c0))))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))IS(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))), CAST((NOT (vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS NUMERIC))OR((+ (vt0.c0)))))OR(((1736273539)&(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))IS(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))), CAST((NOT (vt0.c0)) AS BLOB));
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))OR((+ (vt0.c0)))))OR(((1736273539)&(vt0.c0))))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))IS(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))), CAST((NOT (vt0.c0)) AS BLOB);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)*(((((NULL)OR(vt0.c0)))AND(t0.c6)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)*(((((NULL)OR(vt0.c0)))AND(t0.c6))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)*(((((NULL)OR(vt0.c0)))AND(t0.c6)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)*(((((NULL)OR(vt0.c0)))AND(t0.c6))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)*(((((NULL)OR(vt0.c0)))AND(t0.c6)))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE vt1.c0  WHEN t0.c6 COLLATE RTRIM THEN TYPEOF(vt1.c0) WHEN t0.c6 COLLATE BINARY THEN t0.c12 WHEN 0xfffffffff01ac6d7 THEN t0.c12 COLLATE NOCASE ELSE NULLIF(DISTINCT vt1.c0, vt0.c0) END LEFT OUTER JOIN t0 ON CAST(t0.c6 AS BLOB) COLLATE BINARY COLLATE NOCASE WHERE (json(((t0.c6) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((json(((t0.c6) NOT NULL))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE vt1.c0  WHEN t0.c6 COLLATE RTRIM THEN TYPEOF(vt1.c0) WHEN t0.c6 COLLATE BINARY THEN t0.c12 WHEN 0Xfffffffff01ac6d7 THEN t0.c12 COLLATE NOCASE ELSE NULLIF(DISTINCT vt1.c0, vt0.c0) END LEFT OUTER JOIN t0 ON CAST(t0.c6 AS BLOB) COLLATE BINARY COLLATE NOCASE);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE vt1.c0  WHEN t0.c6 COLLATE RTRIM THEN TYPEOF(vt1.c0) WHEN t0.c6 COLLATE BINARY THEN t0.c12 WHEN 0xfffffffff01ac6d7 THEN t0.c12 COLLATE NOCASE ELSE NULLIF(DISTINCT vt1.c0, vt0.c0) END LEFT OUTER JOIN t0 ON CAST(t0.c6 AS BLOB) COLLATE BINARY COLLATE NOCASE WHERE (json(((t0.c6) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((json(((t0.c6) NOT NULL))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE vt1.c0  WHEN t0.c6 COLLATE RTRIM THEN TYPEOF(vt1.c0) WHEN t0.c6 COLLATE BINARY THEN t0.c12 WHEN 0Xfffffffff01ac6d7 THEN t0.c12 COLLATE NOCASE ELSE NULLIF(DISTINCT vt1.c0, vt0.c0) END LEFT OUTER JOIN t0 ON CAST(t0.c6 AS BLOB) COLLATE BINARY COLLATE NOCASE);
SELECT * FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (vt0.c0);
SELECT * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt1.c0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CAST(((vt0.c0)IS(t0.c6)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)IS(t0.c6)) AS TEXT)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CAST(((vt0.c0)IS(t0.c6)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)IS(t0.c6)) AS TEXT)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CAST(((vt0.c0)IS(t0.c6)) AS TEXT));
SELECT ALL * FROM vt0 WHERE (((1.425702774E9 COLLATE RTRIM)LIKE((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((1.425702774E9 COLLATE RTRIM)LIKE((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((1.425702774E9 COLLATE RTRIM)LIKE((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((1.425702774E9 COLLATE RTRIM)LIKE((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((1.425702774E9 COLLATE RTRIM)LIKE((- (vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS(vt1.c0 COLLATE RTRIM))) ORDER BY 0.9259099296552082 ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED ORDER BY 0.9259099296552082 ASC);
SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS(vt1.c0 COLLATE RTRIM))) ORDER BY 0.9259099296552082 ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED ORDER BY 0.9259099296552082 ASC);
SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS(vt1.c0 COLLATE RTRIM))) ORDER BY 0.9259099296552082 ASC;
SELECT * FROM vt1 WHERE ((NOT (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(''))))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(''))))) IS TRUE)  as count FROM vt1 ORDER BY x''  NULLS FIRST);
SELECT * FROM vt1 WHERE ((NOT (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(''))))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(''))))) IS TRUE)  as count FROM vt1 ORDER BY x''  NULLS FIRST);
SELECT * FROM vt1 WHERE ((NOT (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(''))))) ORDER BY x''  NULLS FIRST;
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((t0.c6 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t0.c6 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((t0.c6 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t0.c6 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((t0.c6 COLLATE RTRIM) NOT NULL));
SELECT * FROM t0 WHERE (t0.c6) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c6) IS TRUE)  as count FROM t0 ORDER BY NULL  NULLS LAST);
SELECT * FROM t0 WHERE (t0.c6) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c6) IS TRUE)  as count FROM t0 ORDER BY NULL  NULLS LAST);
SELECT * FROM t0 WHERE (t0.c6) ORDER BY NULL  NULLS LAST;
SELECT * FROM t0, vt1, vt0 WHERE (CAST(CASE vt1.c0  WHEN t0.c12 THEN vt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c0  WHEN t0.c12 THEN vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE (CAST(CASE vt1.c0  WHEN t0.c12 THEN vt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c0  WHEN t0.c12 THEN vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE (CAST(CASE vt1.c0  WHEN t0.c12 THEN vt0.c0 END AS NUMERIC));
SELECT COUNT(*) FROM t0 WHERE (t0.c6);
SELECT SUM(count) FROM (SELECT ((t0.c6) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c6);
SELECT SUM(count) FROM (SELECT ((t0.c6) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c6);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((- (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((- (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((- (vt0.c0)) IN ()));
SELECT * FROM vt1 WHERE ((((vt1.c0))>=((CASE WHEN vt1.c0 THEN vt1.c0 END)))) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT NULL))) AND (((('0.3922746855922855') NOT NULL)))) ASC, vt1.c0;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))>=((CASE WHEN vt1.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT NULL))) AND (((('0.3922746855922855') NOT NULL)))) ASC, vt1.c0);
SELECT * FROM vt1 WHERE ((((vt1.c0))>=((CASE WHEN vt1.c0 THEN vt1.c0 END)))) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT NULL))) AND (((('0.3922746855922855') NOT NULL)))) ASC, vt1.c0;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))>=((CASE WHEN vt1.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT NULL))) AND (((('0.3922746855922855') NOT NULL)))) ASC, vt1.c0);
SELECT * FROM vt1 WHERE ((((vt1.c0))>=((CASE WHEN vt1.c0 THEN vt1.c0 END)))) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT NULL))) AND (((('0.3922746855922855') NOT NULL)))) ASC, vt1.c0;
SELECT COUNT(*) FROM vt0 WHERE (((IFNULL(DISTINCT vt0.c0, vt0.c0))<>(LOWER(vt0.c0)))) ORDER BY json((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) DESC, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '-465372202' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT vt0.c0, vt0.c0))<>(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY json((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) DESC, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '-465372202' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((IFNULL(DISTINCT vt0.c0, vt0.c0))<>(LOWER(vt0.c0)))) ORDER BY json((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) DESC, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '-465372202' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT vt0.c0, vt0.c0))<>(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY json((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) DESC, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '-465372202' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((IFNULL(DISTINCT vt0.c0, vt0.c0))<>(LOWER(vt0.c0)))) ORDER BY json((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) DESC, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '-465372202' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c0)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((vt0.c0)>=(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c0)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((vt0.c0)>=(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c0)>=(vt0.c0))));
SELECT * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('2097075921')))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('2097075921')))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('2097075921')))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('2097075921')))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('2097075921')))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))));
SELECT ALL * FROM t0, vt0 WHERE ((((((((((t0.c6)AND(vt0.c0)))OR(0.5073804697915983)))OR(t0.c6)))OR(t0.c6)) IN ())) ORDER BY ((LIKELY(DISTINCT t0.c6))-((((vt0.c0, 0Xffffffffdc5c3741, t0.c6))=((vt0.c0, t0.c6, t0.c6))))) DESC, t0.c12 DESC;
SELECT SUM(count) FROM (SELECT (((((((((((t0.c6)AND(vt0.c0)))OR(0.5073804697915983)))OR(t0.c6)))OR(t0.c6)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((LIKELY(DISTINCT t0.c6))-((((vt0.c0, 0Xffffffffdc5c3741, t0.c6))==((vt0.c0, t0.c6, t0.c6))))) DESC, t0.c12 DESC);
SELECT ALL * FROM t0, vt0 WHERE ((((((((((t0.c6)AND(vt0.c0)))OR(0.5073804697915983)))OR(t0.c6)))OR(t0.c6)) IN ())) ORDER BY ((LIKELY(DISTINCT t0.c6))-((((vt0.c0, 0Xffffffffdc5c3741, t0.c6))=((vt0.c0, t0.c6, t0.c6))))) DESC, t0.c12 DESC;
SELECT SUM(count) FROM (SELECT (((((((((((t0.c6)AND(vt0.c0)))OR(0.5073804697915983)))OR(t0.c6)))OR(t0.c6)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((LIKELY(DISTINCT t0.c6))-((((vt0.c0, 0Xffffffffdc5c3741, t0.c6))==((vt0.c0, t0.c6, t0.c6))))) DESC, t0.c12 DESC);
SELECT ALL * FROM t0, vt0 WHERE ((((((((((t0.c6)AND(vt0.c0)))OR(0.5073804697915983)))OR(t0.c6)))OR(t0.c6)) IN ())) ORDER BY ((LIKELY(DISTINCT t0.c6))-((((vt0.c0, 0Xffffffffdc5c3741, t0.c6))=((vt0.c0, t0.c6, t0.c6))))) DESC, t0.c12 DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0 IN ()))OR(((vt1.c0) NOTNULL))))OR(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))OR(((vt1.c0) NOTNULL))))OR(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0 IN ()))OR(((vt1.c0) NOTNULL))))OR(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))OR(((vt1.c0) NOTNULL))))OR(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0 IN ()))OR(((vt1.c0) NOTNULL))))OR(CAST(vt0.c0 AS TEXT))));
SELECT ALL * FROM t0, vt1 CROSS JOIN vt0 ON (IFNULL(vt0.c0, t0.c6) IN ()) WHERE (((((t0.c12) NOT BETWEEN (t0.c6) AND (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c12) NOT BETWEEN (t0.c6) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON (IFNULL(vt0.c0, t0.c6) IN ()));
SELECT ALL * FROM t0, vt1 CROSS JOIN vt0 ON (IFNULL(vt0.c0, t0.c6) IN ()) WHERE (((((t0.c12) NOT BETWEEN (t0.c6) AND (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c12) NOT BETWEEN (t0.c6) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON (IFNULL(vt0.c0, t0.c6) IN ()));
SELECT ALL * FROM t0, vt1 CROSS JOIN vt0 ON (IFNULL(vt0.c0, t0.c6) IN ()) WHERE (((((t0.c12) NOT BETWEEN (t0.c6) AND (vt0.c0))) NOT NULL));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((CAST('' AS INTEGER))>(IFNULL(vt1.c0, vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((CAST('' AS INTEGER))>(IFNULL(vt1.c0, vt1.c0))) DESC);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((CAST('' AS INTEGER))>(IFNULL(vt1.c0, vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((CAST('' AS INTEGER))>(IFNULL(vt1.c0, vt1.c0))) DESC);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((CAST('' AS INTEGER))>(IFNULL(vt1.c0, vt1.c0))) DESC;
SELECT ALL COUNT(*) FROM t0, vt1 LEFT OUTER JOIN vt0 ON CASE WHEN 0.0027270564426919996 THEN CAST(vt1.c0 AS REAL) WHEN ((t0.c6)%(vt0.c0)) THEN (NOT (t0.c6)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0)OR(vt0.c0)) ELSE ((((((((vt1.c0)OR(x'')))AND(vt1.c0)))AND('')))AND(t0.c6)) END WHERE ((((~ (vt1.c0)))>>((+ (t0.c12))))) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN (~ (t0.c6)) ELSE vt0.c0 END;
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))>>((+ (t0.c12))))) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON CASE WHEN 0.0027270564426919996 THEN CAST(vt1.c0 AS REAL) WHEN ((t0.c6)%(vt0.c0)) THEN (NOT (t0.c6)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0)OR(vt0.c0)) ELSE ((((((((vt1.c0)OR(x'')))AND(vt1.c0)))AND('')))AND(t0.c6)) END ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN (~ (t0.c6)) ELSE vt0.c0 END);
SELECT ALL COUNT(*) FROM t0, vt1 LEFT OUTER JOIN vt0 ON CASE WHEN 0.0027270564426919996 THEN CAST(vt1.c0 AS REAL) WHEN ((t0.c6)%(vt0.c0)) THEN (NOT (t0.c6)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0)OR(vt0.c0)) ELSE ((((((((vt1.c0)OR(x'')))AND(vt1.c0)))AND('')))AND(t0.c6)) END WHERE ((((~ (vt1.c0)))>>((+ (t0.c12))))) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN (~ (t0.c6)) ELSE vt0.c0 END;
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))>>((+ (t0.c12))))) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON CASE WHEN 0.0027270564426919996 THEN CAST(vt1.c0 AS REAL) WHEN ((t0.c6)%(vt0.c0)) THEN (NOT (t0.c6)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0)OR(vt0.c0)) ELSE ((((((((vt1.c0)OR(x'')))AND(vt1.c0)))AND('')))AND(t0.c6)) END ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN (~ (t0.c6)) ELSE vt0.c0 END);
SELECT ALL COUNT(*) FROM t0, vt1 LEFT OUTER JOIN vt0 ON CASE WHEN 0.0027270564426919996 THEN CAST(vt1.c0 AS REAL) WHEN ((t0.c6)%(vt0.c0)) THEN (NOT (t0.c6)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0)OR(vt0.c0)) ELSE ((((((((vt1.c0)OR(x'')))AND(vt1.c0)))AND('')))AND(t0.c6)) END WHERE ((((~ (vt1.c0)))>>((+ (t0.c12))))) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN (~ (t0.c6)) ELSE vt0.c0 END;
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((('3m')) NOT BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) AND ((((t0.c6) IS TRUE))))) ORDER BY (~ (((((t0.c12)AND(vt0.c0)))OR(t0.c6))));
SELECT SUM(count) FROM (SELECT ALL ((((('3m')) NOT BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) AND ((((t0.c6) IS TRUE))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (~ (((((t0.c12)AND(vt0.c0)))OR(t0.c6)))));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((('3m')) NOT BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) AND ((((t0.c6) IS TRUE))))) ORDER BY (~ (((((t0.c12)AND(vt0.c0)))OR(t0.c6))));
SELECT SUM(count) FROM (SELECT ALL ((((('3m')) NOT BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) AND ((((t0.c6) IS TRUE))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (~ (((((t0.c12)AND(vt0.c0)))OR(t0.c6)))));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((('3m')) NOT BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) AND ((((t0.c6) IS TRUE))))) ORDER BY (~ (((((t0.c12)AND(vt0.c0)))OR(t0.c6))));
SELECT * FROM vt0, t0 WHERE (0.5787641008527018);
SELECT SUM(count) FROM (SELECT ((0.5787641008527018) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (0.5787641008527018);
SELECT SUM(count) FROM (SELECT ((0.5787641008527018) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (0.5787641008527018);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN (((vt1.c0, NULL, vt0.c0))=((vt1.c0, vt0.c0, vt1.c0))) THEN ((vt1.c0) ISNULL) ELSE (- (vt0.c0)) END WHERE (CASE WHEN ((vt1.c0)IS NOT(vt0.c0)) THEN x'' WHEN (((vt0.c0))<>((vt0.c0))) THEN ((vt0.c0)||(vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN (NOT (vt0.c0)) ELSE ((vt0.c0)/(vt0.c0)) END) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))==(((((x'')AND(vt0.c0)))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)IS NOT(vt0.c0)) THEN x'' WHEN (((vt0.c0))<>((vt0.c0))) THEN ((vt0.c0)||(vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN (NOT (vt0.c0)) ELSE ((vt0.c0)/(vt0.c0)) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN (((vt1.c0, NULL, vt0.c0))==((vt1.c0, vt0.c0, vt1.c0))) THEN ((vt1.c0) ISNULL) ELSE (- (vt0.c0)) END ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))==(((((x'')AND(vt0.c0)))OR(vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN (((vt1.c0, NULL, vt0.c0))=((vt1.c0, vt0.c0, vt1.c0))) THEN ((vt1.c0) ISNULL) ELSE (- (vt0.c0)) END WHERE (CASE WHEN ((vt1.c0)IS NOT(vt0.c0)) THEN x'' WHEN (((vt0.c0))<>((vt0.c0))) THEN ((vt0.c0)||(vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN (NOT (vt0.c0)) ELSE ((vt0.c0)/(vt0.c0)) END) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))==(((((x'')AND(vt0.c0)))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)IS NOT(vt0.c0)) THEN x'' WHEN (((vt0.c0))<>((vt0.c0))) THEN ((vt0.c0)||(vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN (NOT (vt0.c0)) ELSE ((vt0.c0)/(vt0.c0)) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN (((vt1.c0, NULL, vt0.c0))==((vt1.c0, vt0.c0, vt1.c0))) THEN ((vt1.c0) ISNULL) ELSE (- (vt0.c0)) END ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))==(((((x'')AND(vt0.c0)))OR(vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN (((vt1.c0, NULL, vt0.c0))=((vt1.c0, vt0.c0, vt1.c0))) THEN ((vt1.c0) ISNULL) ELSE (- (vt0.c0)) END WHERE (CASE WHEN ((vt1.c0)IS NOT(vt0.c0)) THEN x'' WHEN (((vt0.c0))<>((vt0.c0))) THEN ((vt0.c0)||(vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN (NOT (vt0.c0)) ELSE ((vt0.c0)/(vt0.c0)) END) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))==(((((x'')AND(vt0.c0)))OR(vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0, vt1, t0 WHERE (HEX(x''));
SELECT SUM(count) FROM (SELECT ((HEX(x'')) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (HEX(x''));
SELECT SUM(count) FROM (SELECT ((HEX(x'')) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (HEX(x''));
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON CASE WHEN '0.45514052005427086' THEN (vt1.c0 IN ()) ELSE vt1.c0 COLLATE RTRIM END WHERE ((- ((- (t0.c12)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (t0.c12))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CASE WHEN '0.45514052005427086' THEN (vt1.c0 IN ()) ELSE vt1.c0 COLLATE RTRIM END);
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON CASE WHEN '0.45514052005427086' THEN (vt1.c0 IN ()) ELSE vt1.c0 COLLATE RTRIM END WHERE ((- ((- (t0.c12)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (t0.c12))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CASE WHEN '0.45514052005427086' THEN (vt1.c0 IN ()) ELSE vt1.c0 COLLATE RTRIM END);
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON CASE WHEN '0.45514052005427086' THEN (vt1.c0 IN ()) ELSE vt1.c0 COLLATE RTRIM END WHERE ((- ((- (t0.c12)))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((TYPEOF(vt0.c0)) ISNULL) WHERE ((((t0.c6)) BETWEEN ((((t0.c6)-(vt0.c0)))) AND (((~ (x'6ea34f7aeedf')))))) ORDER BY (CAST(t0.c6 AS NUMERIC) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c6)) BETWEEN ((((t0.c6)-(vt0.c0)))) AND (((~ (x'6ea34f7aeedf')))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((TYPEOF(vt0.c0)) ISNULL) ORDER BY (CAST(t0.c6 AS NUMERIC) IN ()) DESC);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((TYPEOF(vt0.c0)) ISNULL) WHERE ((((t0.c6)) BETWEEN ((((t0.c6)-(vt0.c0)))) AND (((~ (x'6ea34f7aeedf')))))) ORDER BY (CAST(t0.c6 AS NUMERIC) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c6)) BETWEEN ((((t0.c6)-(vt0.c0)))) AND (((~ (x'6ea34f7aeedf')))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((TYPEOF(vt0.c0)) ISNULL) ORDER BY (CAST(t0.c6 AS NUMERIC) IN ()) DESC);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((TYPEOF(vt0.c0)) ISNULL) WHERE ((((t0.c6)) BETWEEN ((((t0.c6)-(vt0.c0)))) AND (((~ (x'6ea34f7aeedf')))))) ORDER BY (CAST(t0.c6 AS NUMERIC) IN ()) DESC;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((((''))<=((vt0.c0))), (((x'', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, x''))), ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE RTRIM, ((vt0.c0)>(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((((''))<=((vt0.c0))), (((x'', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, x''))), ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE RTRIM, ((vt0.c0)>(vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((((''))<=((vt0.c0))), (((x'', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, x''))), ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE RTRIM, ((vt0.c0)>(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((((''))<=((vt0.c0))), (((x'', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, x''))), ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE RTRIM, ((vt0.c0)>(vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((((''))<=((vt0.c0))), (((x'', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, x''))), ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE RTRIM, ((vt0.c0)>(vt0.c0))))));
SELECT COUNT(*) FROM vt1, t0 NOT INDEXED, vt0 WHERE (((DATE(t0.c6, t0.c6, t0.c6)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((DATE(t0.c6, t0.c6, t0.c6)) ISNULL)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0 NOT INDEXED, vt0 WHERE (((DATE(t0.c6, t0.c6, t0.c6)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((DATE(t0.c6, t0.c6, t0.c6)) ISNULL)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0 NOT INDEXED, vt0 WHERE (((DATE(t0.c6, t0.c6, t0.c6)) ISNULL));
SELECT * FROM vt0 WHERE ((~ (CASE vt0.c0  WHEN vt0.c0 THEN '/' ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE vt0.c0  WHEN vt0.c0 THEN '/' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (CASE vt0.c0  WHEN vt0.c0 THEN '/' ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE vt0.c0  WHEN vt0.c0 THEN '/' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (CASE vt0.c0  WHEN vt0.c0 THEN '/' ELSE vt0.c0 END)));
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0)%(t0.c6))) BETWEEN (HEX(vt0.c0)) AND ((t0.c12 IN ('w'))))) ORDER BY CASE ((vt0.c0)IS NOT(t0.c6))  WHEN '-898373096' THEN t0.c12 ELSE (((('')OR(t0.c12)))OR(t0.c6)) END, 0.41186037597849745;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(t0.c6))) BETWEEN (HEX(vt0.c0)) AND ((t0.c12 IN ('w'))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE ((vt0.c0)IS NOT(t0.c6))  WHEN '-898373096' THEN t0.c12 ELSE (((('')OR(t0.c12)))OR(t0.c6)) END, 0.41186037597849745);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0)%(t0.c6))) BETWEEN (HEX(vt0.c0)) AND ((t0.c12 IN ('w'))))) ORDER BY CASE ((vt0.c0)IS NOT(t0.c6))  WHEN '-898373096' THEN t0.c12 ELSE (((('')OR(t0.c12)))OR(t0.c6)) END, 0.41186037597849745;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(t0.c6))) BETWEEN (HEX(vt0.c0)) AND ((t0.c12 IN ('w'))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE ((vt0.c0)IS NOT(t0.c6))  WHEN '-898373096' THEN t0.c12 ELSE (((('')OR(t0.c12)))OR(t0.c6)) END, 0.41186037597849745);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0)%(t0.c6))) BETWEEN (HEX(vt0.c0)) AND ((t0.c12 IN ('w'))))) ORDER BY CASE ((vt0.c0)IS NOT(t0.c6))  WHEN '-898373096' THEN t0.c12 ELSE (((('')OR(t0.c12)))OR(t0.c6)) END, 0.41186037597849745;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0)))) BETWEEN (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) AND (((vt1.c0)IS(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0)))) BETWEEN (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) AND (((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0)))) BETWEEN (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) AND (((vt1.c0)IS(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0)))) BETWEEN (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) AND (((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0)))) BETWEEN (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) AND (((vt1.c0)IS(vt1.c0)))));
SELECT * FROM t0, vt0 CROSS JOIN vt1 ON vt0.c0 WHERE ((((((vt1.c0)<>(vt1.c0))))>((((t0.c12)+(t0.c6)))))) ORDER BY CAST(((((vt0.c0)OR(t0.c12)))AND(vt0.c0)) AS INTEGER) DESC  NULLS FIRST, (CASE vt1.c0  WHEN t0.c6 THEN t0.c12 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c6 THEN t0.c12 ELSE vt0.c0 END IN ()) DESC, ((vt1.c0)|(vt1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)<>(vt1.c0))))>((((t0.c12)+(t0.c6)))))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON vt0.c0 ORDER BY CAST(((((vt0.c0)OR(t0.c12)))AND(vt0.c0)) AS INTEGER) DESC  NULLS FIRST, (CASE vt1.c0  WHEN t0.c6 THEN t0.c12 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c6 THEN t0.c12 ELSE vt0.c0 END IN ()) DESC, ((vt1.c0)|(vt1.c0)) COLLATE RTRIM);
SELECT * FROM t0, vt0 CROSS JOIN vt1 ON vt0.c0 WHERE ((((((vt1.c0)<>(vt1.c0))))>((((t0.c12)+(t0.c6)))))) ORDER BY CAST(((((vt0.c0)OR(t0.c12)))AND(vt0.c0)) AS INTEGER) DESC  NULLS FIRST, (CASE vt1.c0  WHEN t0.c6 THEN t0.c12 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c6 THEN t0.c12 ELSE vt0.c0 END IN ()) DESC, ((vt1.c0)|(vt1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)<>(vt1.c0))))>((((t0.c12)+(t0.c6)))))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON vt0.c0 ORDER BY CAST(((((vt0.c0)OR(t0.c12)))AND(vt0.c0)) AS INTEGER) DESC  NULLS FIRST, (CASE vt1.c0  WHEN t0.c6 THEN t0.c12 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c6 THEN t0.c12 ELSE vt0.c0 END IN ()) DESC, ((vt1.c0)|(vt1.c0)) COLLATE RTRIM);
SELECT * FROM t0, vt0 CROSS JOIN vt1 ON vt0.c0 WHERE ((((((vt1.c0)<>(vt1.c0))))>((((t0.c12)+(t0.c6)))))) ORDER BY CAST(((((vt0.c0)OR(t0.c12)))AND(vt0.c0)) AS INTEGER) DESC  NULLS FIRST, (CASE vt1.c0  WHEN t0.c6 THEN t0.c12 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c6 THEN t0.c12 ELSE vt0.c0 END IN ()) DESC, ((vt1.c0)|(vt1.c0)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (- (vt0.c0))  WHEN MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE (- (vt0.c0))  WHEN MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (- (vt0.c0))  WHEN MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE (- (vt0.c0))  WHEN MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (- (vt0.c0))  WHEN MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE vt0.c0 END);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c6) NOT NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c6) NOT NULL) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c6) NOT NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c6) NOT NULL) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c6) NOT NULL) AS TEXT));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (NULL);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN ((((vt1.c0))=((vt1.c0)))) AND (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN ((((vt1.c0))==((vt1.c0)))) AND (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN ((((vt1.c0))=((vt1.c0)))) AND (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN ((((vt1.c0))==((vt1.c0)))) AND (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN ((((vt1.c0))=((vt1.c0)))) AND (((vt1.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LOWER((+ (vt0.c0)))) ORDER BY ((('axu^''7{똲' IN (t0.c6))) BETWEEN (t0.c12) AND (t0.c6 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER((+ (vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((('axu^''7{똲' IN (t0.c6))) BETWEEN (t0.c12) AND (t0.c6 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LOWER((+ (vt0.c0)))) ORDER BY ((('axu^''7{똲' IN (t0.c6))) BETWEEN (t0.c12) AND (t0.c6 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER((+ (vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((('axu^''7{똲' IN (t0.c6))) BETWEEN (t0.c12) AND (t0.c6 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LOWER((+ (vt0.c0)))) ORDER BY ((('axu^''7{똲' IN (t0.c6))) BETWEEN (t0.c12) AND (t0.c6 COLLATE NOCASE))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND ((~ (vt1.c0))))) ORDER BY vt1.c0  NULLS FIRST, ((HEX(vt1.c0))>(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0  NULLS FIRST, ((HEX(vt1.c0))>(NULL)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND ((~ (vt1.c0))))) ORDER BY vt1.c0  NULLS FIRST, ((HEX(vt1.c0))>(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0  NULLS FIRST, ((HEX(vt1.c0))>(NULL)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND ((~ (vt1.c0))))) ORDER BY vt1.c0  NULLS FIRST, ((HEX(vt1.c0))>(NULL));
SELECT ALL * FROM t0 WHERE (((t0.c12) BETWEEN (0x4d6b7afa) AND (t0.c6)) COLLATE BINARY) ORDER BY t0.c6 DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c12) BETWEEN (0X4d6b7afa) AND (t0.c6)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY t0.c6 DESC);
SELECT ALL * FROM t0 WHERE (((t0.c12) BETWEEN (0x4d6b7afa) AND (t0.c6)) COLLATE BINARY) ORDER BY t0.c6 DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c12) BETWEEN (0X4d6b7afa) AND (t0.c6)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY t0.c6 DESC);
SELECT ALL * FROM t0 WHERE (((t0.c12) BETWEEN (0x4d6b7afa) AND (t0.c6)) COLLATE BINARY) ORDER BY t0.c6 DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0) NOTNULL) COLLATE NOCASE) ORDER BY (((((vt1.c0)|(vt0.c0)), (vt1.c0 IN (vt0.c0)), vt1.c0))<(((((vt0.c0))<((vt0.c0))), ABS(vt0.c0), CAST(vt1.c0 AS NUMERIC))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c0)|(vt0.c0)), (vt1.c0 IN (vt0.c0)), vt1.c0))<(((((vt0.c0))<((vt0.c0))), ABS(vt0.c0), CAST(vt1.c0 AS NUMERIC))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0) NOTNULL) COLLATE NOCASE) ORDER BY (((((vt1.c0)|(vt0.c0)), (vt1.c0 IN (vt0.c0)), vt1.c0))<(((((vt0.c0))<((vt0.c0))), ABS(vt0.c0), CAST(vt1.c0 AS NUMERIC))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c0)|(vt0.c0)), (vt1.c0 IN (vt0.c0)), vt1.c0))<(((((vt0.c0))<((vt0.c0))), ABS(vt0.c0), CAST(vt1.c0 AS NUMERIC))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0) NOTNULL) COLLATE NOCASE) ORDER BY (((((vt1.c0)|(vt0.c0)), (vt1.c0 IN (vt0.c0)), vt1.c0))<(((((vt0.c0))<((vt0.c0))), ABS(vt0.c0), CAST(vt1.c0 AS NUMERIC))))  NULLS FIRST;
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c12) ISNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c12) ISNULL)) NOT NULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c12) ISNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c12) ISNULL)) NOT NULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c12) ISNULL)) NOT NULL));
SELECT * FROM t0 WHERE ('-127333264') ORDER BY (((t0.c6)) NOT BETWEEN ((((t0.c6) IS TRUE))) AND (((((t0.c6, '4o', t0.c6))<(('-21390828', t0.c12, t0.c12))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-127333264') IS TRUE)  as count FROM t0 ORDER BY (((t0.c6)) NOT BETWEEN ((((t0.c6) IS TRUE))) AND (((((t0.c6, '4o', t0.c6))<(('-21390828', t0.c12, t0.c12))))))  NULLS FIRST);
SELECT * FROM t0 WHERE ('-127333264') ORDER BY (((t0.c6)) NOT BETWEEN ((((t0.c6) IS TRUE))) AND (((((t0.c6, '4o', t0.c6))<(('-21390828', t0.c12, t0.c12))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-127333264') IS TRUE)  as count FROM t0 ORDER BY (((t0.c6)) NOT BETWEEN ((((t0.c6) IS TRUE))) AND (((((t0.c6, '4o', t0.c6))<(('-21390828', t0.c12, t0.c12))))))  NULLS FIRST);
SELECT * FROM t0 WHERE ('-127333264') ORDER BY (((t0.c6)) NOT BETWEEN ((((t0.c6) IS TRUE))) AND (((((t0.c6, '4o', t0.c6))<(('-21390828', t0.c12, t0.c12))))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (vt1.c0);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)||((vt1.c0 IN (vt1.c0))))) ORDER BY ((TRIM(DISTINCT vt1.c0, vt1.c0))/((0.009134075964658206 IN (vt1.c0))))  NULLS FIRST, (((((vt1.c0 IN ()))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)||((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((TRIM(DISTINCT vt1.c0, vt1.c0))/((0.009134075964658206 IN (vt1.c0))))  NULLS FIRST, (((((vt1.c0 IN ()))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)||((vt1.c0 IN (vt1.c0))))) ORDER BY ((TRIM(DISTINCT vt1.c0, vt1.c0))/((0.009134075964658206 IN (vt1.c0))))  NULLS FIRST, (((((vt1.c0 IN ()))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)||((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((TRIM(DISTINCT vt1.c0, vt1.c0))/((0.009134075964658206 IN (vt1.c0))))  NULLS FIRST, (((((vt1.c0 IN ()))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)||((vt1.c0 IN (vt1.c0))))) ORDER BY ((TRIM(DISTINCT vt1.c0, vt1.c0))/((0.009134075964658206 IN (vt1.c0))))  NULLS FIRST, (((((vt1.c0 IN ()))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC;
SELECT ALL * FROM t0 WHERE (x'') ORDER BY (((((((((t0.c6)OR(x'0ec42023')))OR(t0.c12)))AND(0.029381237989664633)))OR(t0.c12)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c6)OR(x'0ec42023')))OR(t0.c12)))AND(0.029381237989664633)))OR(t0.c12)) IN ()) DESC);
SELECT ALL * FROM t0 WHERE (x'') ORDER BY (((((((((t0.c6)OR(x'0ec42023')))OR(t0.c12)))AND(0.029381237989664633)))OR(t0.c12)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c6)OR(x'0ec42023')))OR(t0.c12)))AND(0.029381237989664633)))OR(t0.c12)) IN ()) DESC);
SELECT ALL * FROM t0 WHERE (x'') ORDER BY (((((((((t0.c6)OR(x'0ec42023')))OR(t0.c12)))AND(0.029381237989664633)))OR(t0.c12)) IN ()) DESC;
SELECT * FROM t0, vt0, vt1 WHERE (UNLIKELY((('-43983446') NOT BETWEEN (t0.c6) AND (vt1.c0)))) ORDER BY (('-1331172495') NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((('-43983446') NOT BETWEEN (t0.c6) AND (vt1.c0)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (('-1331172495') NOT NULL)  NULLS FIRST);
SELECT * FROM t0, vt0, vt1 WHERE (UNLIKELY((('-43983446') NOT BETWEEN (t0.c6) AND (vt1.c0)))) ORDER BY (('-1331172495') NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((('-43983446') NOT BETWEEN (t0.c6) AND (vt1.c0)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (('-1331172495') NOT NULL)  NULLS FIRST);
SELECT * FROM t0, vt0, vt1 WHERE (UNLIKELY((('-43983446') NOT BETWEEN (t0.c6) AND (vt1.c0)))) ORDER BY (('-1331172495') NOT NULL)  NULLS FIRST;
SELECT * FROM vt1, vt0, t0 WHERE ((+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, t0 NOT INDEXED);
SELECT * FROM vt1, vt0, t0 WHERE ((+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, t0 NOT INDEXED);
SELECT * FROM vt1, vt0, t0 WHERE ((+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))));
SELECT * FROM vt1, t0, vt0 WHERE (((((vt1.c0)LIKE(t0.c12)))|(vt1.c0 COLLATE BINARY))) ORDER BY t0.c6, CASE WHEN (((('U')OR(x'')))AND(vt1.c0)) THEN (t0.c6 IN (vt1.c0)) ELSE NULLIF(vt0.c0, t0.c6) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)LIKE(t0.c12)))|(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY t0.c6, CASE WHEN (((('U')OR(x'')))AND(vt1.c0)) THEN (t0.c6 IN (vt1.c0)) ELSE NULLIF(vt0.c0, t0.c6) END DESC  NULLS LAST);
SELECT * FROM vt1, t0, vt0 WHERE (((((vt1.c0)LIKE(t0.c12)))|(vt1.c0 COLLATE BINARY))) ORDER BY t0.c6, CASE WHEN (((('U')OR(x'')))AND(vt1.c0)) THEN (t0.c6 IN (vt1.c0)) ELSE NULLIF(vt0.c0, t0.c6) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)LIKE(t0.c12)))|(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY t0.c6, CASE WHEN (((('U')OR(x'')))AND(vt1.c0)) THEN (t0.c6 IN (vt1.c0)) ELSE NULLIF(vt0.c0, t0.c6) END DESC  NULLS LAST);
SELECT * FROM vt1, t0, vt0 WHERE (((((vt1.c0)LIKE(t0.c12)))|(vt1.c0 COLLATE BINARY))) ORDER BY t0.c6, CASE WHEN (((('U')OR(x'')))AND(vt1.c0)) THEN (t0.c6 IN (vt1.c0)) ELSE NULLIF(vt0.c0, t0.c6) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((t0.c12)AND(t0.c6)) IN (CASE t0.c6  WHEN vt0.c0 THEN t0.c12 END))) ORDER BY UNLIKELY(vt0.c0) COLLATE BINARY COLLATE BINARY, ((t0.c6 IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c12)AND(t0.c6)) IN (CASE t0.c6  WHEN vt0.c0 THEN t0.c12 END))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY UNLIKELY(vt0.c0) COLLATE BINARY COLLATE BINARY, ((t0.c6 IN ()) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((t0.c12)AND(t0.c6)) IN (CASE t0.c6  WHEN vt0.c0 THEN t0.c12 END))) ORDER BY UNLIKELY(vt0.c0) COLLATE BINARY COLLATE BINARY, ((t0.c6 IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c12)AND(t0.c6)) IN (CASE t0.c6  WHEN vt0.c0 THEN t0.c12 END))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY UNLIKELY(vt0.c0) COLLATE BINARY COLLATE BINARY, ((t0.c6 IN ()) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((t0.c12)AND(t0.c6)) IN (CASE t0.c6  WHEN vt0.c0 THEN t0.c12 END))) ORDER BY UNLIKELY(vt0.c0) COLLATE BINARY COLLATE BINARY, ((t0.c6 IN ()) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0))))) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0))))) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0))))) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE RTRIM) ORDER BY ((CAST(NULL AS REAL))IS NOT(((vt0.c0)GLOB(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(NULL AS REAL))IS NOT(((vt0.c0)GLOB(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE RTRIM) ORDER BY ((CAST(NULL AS REAL))IS NOT(((vt0.c0)GLOB(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(NULL AS REAL))IS NOT(((vt0.c0)GLOB(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE RTRIM) ORDER BY ((CAST(NULL AS REAL))IS NOT(((vt0.c0)GLOB(vt0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 INDEXED BY i72, vt1 WHERE (((((((vt1.c0)>=(vt1.c0)))OR(UNLIKELY(DISTINCT vt0.c0))))OR((+ (vt0.c0))))) ORDER BY (((vt0.c0) NOTNULL) IN (((vt1.c0)&(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)>=(vt1.c0)))OR(UNLIKELY(DISTINCT vt0.c0))))OR((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 INDEXED BY i72, vt1 ORDER BY (((vt0.c0) NOTNULL) IN (((vt1.c0)&(vt0.c0)))));
SELECT COUNT(*) FROM vt0 INDEXED BY i72, vt1 WHERE (((((((vt1.c0)>=(vt1.c0)))OR(UNLIKELY(DISTINCT vt0.c0))))OR((+ (vt0.c0))))) ORDER BY (((vt0.c0) NOTNULL) IN (((vt1.c0)&(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)>=(vt1.c0)))OR(UNLIKELY(DISTINCT vt0.c0))))OR((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 INDEXED BY i72, vt1 ORDER BY (((vt0.c0) NOTNULL) IN (((vt1.c0)&(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((7.2971373E8)==(t0.c12)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((7.2971373E8)==(t0.c12)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((7.2971373E8)==(t0.c12)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((7.2971373E8)==(t0.c12)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((7.2971373E8)==(t0.c12)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((- (t0.c12)) COLLATE BINARY) ORDER BY (((((x'', '', vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, t0.c6, t0.c12)))) IS TRUE) ASC  NULLS LAST, NULL COLLATE RTRIM DESC, GLOB(x'', ((NULL) NOT NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c12)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((((x'', '', vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, t0.c6, t0.c12)))) IS TRUE) ASC  NULLS LAST, NULL COLLATE RTRIM DESC, GLOB(x'', ((NULL) NOT NULL)) DESC);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((- (t0.c12)) COLLATE BINARY) ORDER BY (((((x'', '', vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, t0.c6, t0.c12)))) IS TRUE) ASC  NULLS LAST, NULL COLLATE RTRIM DESC, GLOB(x'', ((NULL) NOT NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c12)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((((x'', '', vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, t0.c6, t0.c12)))) IS TRUE) ASC  NULLS LAST, NULL COLLATE RTRIM DESC, GLOB(x'', ((NULL) NOT NULL)) DESC);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((- (t0.c12)) COLLATE BINARY) ORDER BY (((((x'', '', vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, t0.c6, t0.c12)))) IS TRUE) ASC  NULLS LAST, NULL COLLATE RTRIM DESC, GLOB(x'', ((NULL) NOT NULL)) DESC;
SELECT COUNT(*) FROM vt1, t0 CROSS JOIN vt0 ON CAST(NULL AS REAL) WHERE (t0.c12) ORDER BY (((((t0.c6)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) ISNULL) ASC, NULL  NULLS FIRST, (((((((t0.c12))==((vt0.c0))))OR(((t0.c6)-(1.112653832E9)))))AND(((vt0.c0)+(t0.c6)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c12) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON CAST(NULL AS REAL) ORDER BY (((((t0.c6)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) ISNULL) ASC, NULL  NULLS FIRST, (((((((t0.c12))==((vt0.c0))))OR(((t0.c6)-(1.112653832E9)))))AND(((vt0.c0)+(t0.c6)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 CROSS JOIN vt0 ON CAST(NULL AS REAL) WHERE (t0.c12) ORDER BY (((((t0.c6)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) ISNULL) ASC, NULL  NULLS FIRST, (((((((t0.c12))==((vt0.c0))))OR(((t0.c6)-(1.112653832E9)))))AND(((vt0.c0)+(t0.c6)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c12) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON CAST(NULL AS REAL) ORDER BY (((((t0.c6)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) ISNULL) ASC, NULL  NULLS FIRST, (((((((t0.c12))==((vt0.c0))))OR(((t0.c6)-(1.112653832E9)))))AND(((vt0.c0)+(t0.c6)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 CROSS JOIN vt0 ON CAST(NULL AS REAL) WHERE (t0.c12) ORDER BY (((((t0.c6)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) ISNULL) ASC, NULL  NULLS FIRST, (((((((t0.c12))==((vt0.c0))))OR(((t0.c6)-(1.112653832E9)))))AND(((vt0.c0)+(t0.c6)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 INDEXED BY i72, vt1 WHERE ((- (t0.c6)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c6)) COLLATE BINARY) IS TRUE)  as count FROM t0 INDEXED BY i72, vt1);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i72, vt1 WHERE ((- (t0.c6)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c6)) COLLATE BINARY) IS TRUE)  as count FROM t0 INDEXED BY i72, vt1);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i72, vt1 WHERE ((- (t0.c6)) COLLATE BINARY);
SELECT ALL * FROM t0 INDEXED BY i72 WHERE ((((((t0.c6, t0.c6, t0.c12))!=((t0.c12, t0.c12, NULL))))==(CAST(t0.c12 AS TEXT)))) ORDER BY CAST(CAST(t0.c6 AS BLOB) AS NUMERIC)  NULLS LAST, (((t0.c6, t0.c6, t0.c12)) NOT BETWEEN ((((('1229850024', x'0e25', t0.c6)) BETWEEN ((t0.c6, t0.c6, t0.c12)) AND ((t0.c12, t0.c6, t0.c6))), ((t0.c12)<>(t0.c6)), t0.c12)) AND ((CHAR(t0.c6, t0.c12, t0.c6), (NOT (t0.c6)), ((t0.c6)<(t0.c12))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c6, t0.c6, t0.c12))!=((t0.c12, t0.c12, NULL))))=(CAST(t0.c12 AS TEXT)))) IS TRUE)  as count FROM t0 INDEXED BY i72 ORDER BY CAST(CAST(t0.c6 AS BLOB) AS NUMERIC)  NULLS LAST, (((t0.c6, t0.c6, t0.c12)) NOT BETWEEN ((((('1229850024', x'0e25', t0.c6)) BETWEEN ((t0.c6, t0.c6, t0.c12)) AND ((t0.c12, t0.c6, t0.c6))), ((t0.c12)<>(t0.c6)), t0.c12)) AND ((CHAR(t0.c6, t0.c12, t0.c6), (NOT (t0.c6)), ((t0.c6)<(t0.c12))))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 INDEXED BY i72 WHERE ((((((t0.c6, t0.c6, t0.c12))!=((t0.c12, t0.c12, NULL))))==(CAST(t0.c12 AS TEXT)))) ORDER BY CAST(CAST(t0.c6 AS BLOB) AS NUMERIC)  NULLS LAST, (((t0.c6, t0.c6, t0.c12)) NOT BETWEEN ((((('1229850024', x'0e25', t0.c6)) BETWEEN ((t0.c6, t0.c6, t0.c12)) AND ((t0.c12, t0.c6, t0.c6))), ((t0.c12)<>(t0.c6)), t0.c12)) AND ((CHAR(t0.c6, t0.c12, t0.c6), (NOT (t0.c6)), ((t0.c6)<(t0.c12))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c6, t0.c6, t0.c12))!=((t0.c12, t0.c12, NULL))))=(CAST(t0.c12 AS TEXT)))) IS TRUE)  as count FROM t0 INDEXED BY i72 ORDER BY CAST(CAST(t0.c6 AS BLOB) AS NUMERIC)  NULLS LAST, (((t0.c6, t0.c6, t0.c12)) NOT BETWEEN ((((('1229850024', x'0e25', t0.c6)) BETWEEN ((t0.c6, t0.c6, t0.c12)) AND ((t0.c12, t0.c6, t0.c6))), ((t0.c12)<>(t0.c6)), t0.c12)) AND ((CHAR(t0.c6, t0.c12, t0.c6), (NOT (t0.c6)), ((t0.c6)<(t0.c12))))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 INDEXED BY i72 WHERE ((((((t0.c6, t0.c6, t0.c12))!=((t0.c12, t0.c12, NULL))))==(CAST(t0.c12 AS TEXT)))) ORDER BY CAST(CAST(t0.c6 AS BLOB) AS NUMERIC)  NULLS LAST, (((t0.c6, t0.c6, t0.c12)) NOT BETWEEN ((((('1229850024', x'0e25', t0.c6)) BETWEEN ((t0.c6, t0.c6, t0.c12)) AND ((t0.c12, t0.c6, t0.c6))), ((t0.c12)<>(t0.c6)), t0.c12)) AND ((CHAR(t0.c6, t0.c12, t0.c6), (NOT (t0.c6)), ((t0.c6)<(t0.c12))))) ASC  NULLS FIRST;
SELECT * FROM vt1, t0 WHERE (CASE ((vt1.c0) BETWEEN (t0.c6) AND (2.00562685E9))  WHEN ((t0.c12) ISNULL) THEN CASE WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN t0.c12 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) BETWEEN (t0.c6) AND (2.00562685E9))  WHEN ((t0.c12) ISNULL) THEN CASE WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN t0.c12 END END) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (CASE ((vt1.c0) BETWEEN (t0.c6) AND (2.00562685E9))  WHEN ((t0.c12) ISNULL) THEN CASE WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN t0.c12 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) BETWEEN (t0.c6) AND (2.00562685E9))  WHEN ((t0.c12) ISNULL) THEN CASE WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN t0.c12 END END) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (CASE ((vt1.c0) BETWEEN (t0.c6) AND (2.00562685E9))  WHEN ((t0.c12) ISNULL) THEN CASE WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN t0.c12 END END);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((((t0.c12)IS(vt0.c0))))=(((~ (t0.c12))))) WHERE (MAX(t0.c12, 0xffffffffc2190463 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((MAX(t0.c12, 0xffffffffc2190463 COLLATE BINARY)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((((t0.c12)IS(vt0.c0))))==(((~ (t0.c12))))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((((t0.c12)IS(vt0.c0))))=(((~ (t0.c12))))) WHERE (MAX(t0.c12, 0xffffffffc2190463 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((MAX(t0.c12, 0xffffffffc2190463 COLLATE BINARY)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((((t0.c12)IS(vt0.c0))))==(((~ (t0.c12))))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((((t0.c12)IS(vt0.c0))))=(((~ (t0.c12))))) WHERE (MAX(t0.c12, 0xffffffffc2190463 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (TRIM(DISTINCT ((((t0.c6)OR(vt0.c0)))AND(NULL)), CASE WHEN t0.c12 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((((t0.c6)OR(vt0.c0)))AND(NULL)), CASE WHEN t0.c12 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (TRIM(DISTINCT ((((t0.c6)OR(vt0.c0)))AND(NULL)), CASE WHEN t0.c12 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((((t0.c6)OR(vt0.c0)))AND(NULL)), CASE WHEN t0.c12 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (TRIM(DISTINCT ((((t0.c6)OR(vt0.c0)))AND(NULL)), CASE WHEN t0.c12 THEN vt0.c0 ELSE vt0.c0 END));
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (LIKELIHOOD(((t0.c6)IS(t0.c6)), 0.6096840548645921));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((t0.c6)IS(t0.c6)), 0.6096840548645921)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (LIKELIHOOD(((t0.c6)IS(t0.c6)), 0.6096840548645921));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((t0.c6)IS(t0.c6)), 0.6096840548645921)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (LIKELIHOOD(((t0.c6)IS(t0.c6)), 0.6096840548645921));
SELECT ALL * FROM t0, vt0 WHERE (((((0.7484317358409008 COLLATE NOCASE)AND(((((x'')OR(t0.c6)))OR(t0.c6)))))OR(((vt0.c0)&(t0.c6)))));
SELECT SUM(count) FROM (SELECT ((((((0.7484317358409008 COLLATE NOCASE)AND(((((x'')OR(t0.c6)))OR(t0.c6)))))OR(((vt0.c0)&(t0.c6))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((0.7484317358409008 COLLATE NOCASE)AND(((((x'')OR(t0.c6)))OR(t0.c6)))))OR(((vt0.c0)&(t0.c6)))));
SELECT SUM(count) FROM (SELECT ((((((0.7484317358409008 COLLATE NOCASE)AND(((((x'')OR(t0.c6)))OR(t0.c6)))))OR(((vt0.c0)&(t0.c6))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((0.7484317358409008 COLLATE NOCASE)AND(((((x'')OR(t0.c6)))OR(t0.c6)))))OR(((vt0.c0)&(t0.c6)))));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(vt1.c0 AS INTEGER)) ORDER BY (~ (x'')) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (~ (x'')) COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(vt1.c0 AS INTEGER)) ORDER BY (~ (x'')) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (~ (x'')) COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(vt1.c0 AS INTEGER)) ORDER BY (~ (x'')) COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN (vt1.c0 IN ()) WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)*(vt1.c0)) WHEN NULL THEN ((vt1.c0)IS(vt1.c0)) ELSE CAST(vt1.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN (vt1.c0 IN ()) WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)*(vt1.c0)) WHEN NULL THEN ((vt1.c0)IS(vt1.c0)) ELSE CAST(vt1.c0 AS TEXT) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN (vt1.c0 IN ()) WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)*(vt1.c0)) WHEN NULL THEN ((vt1.c0)IS(vt1.c0)) ELSE CAST(vt1.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN (vt1.c0 IN ()) WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)*(vt1.c0)) WHEN NULL THEN ((vt1.c0)IS(vt1.c0)) ELSE CAST(vt1.c0 AS TEXT) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN (vt1.c0 IN ()) WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0)*(vt1.c0)) WHEN NULL THEN ((vt1.c0)IS(vt1.c0)) ELSE CAST(vt1.c0 AS TEXT) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0))/(NULL)));
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt0.c0, vt0.c0))/(NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0))/(NULL)));
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt0.c0, vt0.c0))/(NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0))/(NULL)));
SELECT * FROM vt0, vt1, t0 WHERE ((LOWER(vt0.c0) IN ())) ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (((t0.c12)-(vt1.c0))) AND (LOWER(t0.c6)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((LOWER(vt0.c0) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1, t0 ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (((t0.c12)-(vt1.c0))) AND (LOWER(t0.c6)))  NULLS LAST);
SELECT * FROM vt0, vt1, t0 WHERE ((LOWER(vt0.c0) IN ())) ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (((t0.c12)-(vt1.c0))) AND (LOWER(t0.c6)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((LOWER(vt0.c0) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1, t0 ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (((t0.c12)-(vt1.c0))) AND (LOWER(t0.c6)))  NULLS LAST);
SELECT * FROM vt0, vt1, t0 WHERE ((LOWER(vt0.c0) IN ())) ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (((t0.c12)-(vt1.c0))) AND (LOWER(t0.c6)))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (('' IN ()));
SELECT SUM(count) FROM (SELECT ((('' IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (('' IN ()));
SELECT SUM(count) FROM (SELECT ((('' IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (('' IN ()));
SELECT COUNT(*) FROM vt1 WHERE (ABS(DISTINCT CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT CAST(vt1.c0 AS TEXT))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt1 WHERE (ABS(DISTINCT CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT CAST(vt1.c0 AS TEXT))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt1 WHERE (ABS(DISTINCT CAST(vt1.c0 AS TEXT)));
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((vt0.c0)&(vt0.c0)))+(((t0.c12)/(vt1.c0))))) ORDER BY TYPEOF((((vt1.c0))>=((t0.c12))))  NULLS LAST, (((((((((((t0.c6)) BETWEEN ((vt0.c0)) AND ((t0.c12))))OR((+ (vt0.c0)))))AND(((t0.c12) IS TRUE))))OR((((t0.c6, vt1.c0, vt0.c0))=((t0.c6, t0.c12, x''))))))OR(((vt0.c0)>(vt0.c0))))  NULLS LAST, NULL COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(vt0.c0)))+(((t0.c12)/(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY TYPEOF((((vt1.c0))>=((t0.c12))))  NULLS LAST, (((((((((((t0.c6)) BETWEEN ((vt0.c0)) AND ((t0.c12))))OR((+ (vt0.c0)))))AND(((t0.c12) IS TRUE))))OR((((t0.c6, vt1.c0, vt0.c0))==((t0.c6, t0.c12, x''))))))OR(((vt0.c0)>(vt0.c0))))  NULLS LAST, NULL COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((vt0.c0)&(vt0.c0)))+(((t0.c12)/(vt1.c0))))) ORDER BY TYPEOF((((vt1.c0))>=((t0.c12))))  NULLS LAST, (((((((((((t0.c6)) BETWEEN ((vt0.c0)) AND ((t0.c12))))OR((+ (vt0.c0)))))AND(((t0.c12) IS TRUE))))OR((((t0.c6, vt1.c0, vt0.c0))=((t0.c6, t0.c12, x''))))))OR(((vt0.c0)>(vt0.c0))))  NULLS LAST, NULL COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(vt0.c0)))+(((t0.c12)/(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY TYPEOF((((vt1.c0))>=((t0.c12))))  NULLS LAST, (((((((((((t0.c6)) BETWEEN ((vt0.c0)) AND ((t0.c12))))OR((+ (vt0.c0)))))AND(((t0.c12) IS TRUE))))OR((((t0.c6, vt1.c0, vt0.c0))==((t0.c6, t0.c12, x''))))))OR(((vt0.c0)>(vt0.c0))))  NULLS LAST, NULL COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((vt0.c0)&(vt0.c0)))+(((t0.c12)/(vt1.c0))))) ORDER BY TYPEOF((((vt1.c0))>=((t0.c12))))  NULLS LAST, (((((((((((t0.c6)) BETWEEN ((vt0.c0)) AND ((t0.c12))))OR((+ (vt0.c0)))))AND(((t0.c12) IS TRUE))))OR((((t0.c6, vt1.c0, vt0.c0))=((t0.c6, t0.c12, x''))))))OR(((vt0.c0)>(vt0.c0))))  NULLS LAST, NULL COLLATE NOCASE DESC;
SELECT ALL * FROM t0 WHERE ((- ((~ (t0.c6))))) ORDER BY ((((CAST(t0.c6 AS TEXT))OR(((t0.c12) BETWEEN (t0.c6) AND (t0.c12)))))OR(((t0.c6) BETWEEN (t0.c12) AND (t0.c12)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((~ (t0.c6))))) IS TRUE)  as count FROM t0 ORDER BY ((((CAST(t0.c6 AS TEXT))OR(((t0.c12) BETWEEN (t0.c6) AND (t0.c12)))))OR(((t0.c6) BETWEEN (t0.c12) AND (t0.c12)))) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((- ((~ (t0.c6))))) ORDER BY ((((CAST(t0.c6 AS TEXT))OR(((t0.c12) BETWEEN (t0.c6) AND (t0.c12)))))OR(((t0.c6) BETWEEN (t0.c12) AND (t0.c12)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((~ (t0.c6))))) IS TRUE)  as count FROM t0 ORDER BY ((((CAST(t0.c6 AS TEXT))OR(((t0.c12) BETWEEN (t0.c6) AND (t0.c12)))))OR(((t0.c6) BETWEEN (t0.c12) AND (t0.c12)))) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((- ((~ (t0.c6))))) ORDER BY ((((CAST(t0.c6 AS TEXT))OR(((t0.c12) BETWEEN (t0.c6) AND (t0.c12)))))OR(((t0.c6) BETWEEN (t0.c12) AND (t0.c12)))) DESC  NULLS LAST;
SELECT * FROM vt1, t0, vt0 WHERE ((~ ((((t0.c6, t0.c6, '0.740942534427096'))<=((t0.c6, vt0.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((t0.c6, t0.c6, '0.740942534427096'))<=((t0.c6, vt0.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((~ ((((t0.c6, t0.c6, '0.740942534427096'))<=((t0.c6, vt0.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((t0.c6, t0.c6, '0.740942534427096'))<=((t0.c6, vt0.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((~ ((((t0.c6, t0.c6, '0.740942534427096'))<=((t0.c6, vt0.c0, vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)) BETWEEN (((((vt1.c0))!=((vt0.c0))))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.6083246187518135))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((((vt1.c0))!=((vt0.c0))))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.6083246187518135)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)) BETWEEN (((((vt1.c0))!=((vt0.c0))))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.6083246187518135))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((((vt1.c0))!=((vt0.c0))))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.6083246187518135)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)) BETWEEN (((((vt1.c0))!=((vt0.c0))))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.6083246187518135))))));
SELECT ALL * FROM t0, vt0 WHERE (0x7e53e13b);
SELECT SUM(count) FROM (SELECT ((0x7e53e13b) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (0x7e53e13b);
SELECT SUM(count) FROM (SELECT ((0x7e53e13b) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (0x7e53e13b);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((CAST(t0.c6 AS BLOB)))>=(((~ (t0.c6)))))) ORDER BY (NOT (t0.c12)), ((((((vt1.c0)=(vt1.c0)))AND((vt0.c0 IN ()))))AND(vt0.c0))  NULLS LAST, (NOT (UNLIKELY(DISTINCT t0.c12))) DESC;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c6 AS BLOB)))>=(((~ (t0.c6)))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (NOT (t0.c12)), ((((((vt1.c0)=(vt1.c0)))AND((vt0.c0 IN ()))))AND(vt0.c0))  NULLS LAST, (NOT (UNLIKELY(DISTINCT t0.c12))) DESC);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((CAST(t0.c6 AS BLOB)))>=(((~ (t0.c6)))))) ORDER BY (NOT (t0.c12)), ((((((vt1.c0)=(vt1.c0)))AND((vt0.c0 IN ()))))AND(vt0.c0))  NULLS LAST, (NOT (UNLIKELY(DISTINCT t0.c12))) DESC;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c6 AS BLOB)))>=(((~ (t0.c6)))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (NOT (t0.c12)), ((((((vt1.c0)=(vt1.c0)))AND((vt0.c0 IN ()))))AND(vt0.c0))  NULLS LAST, (NOT (UNLIKELY(DISTINCT t0.c12))) DESC);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((vt1.c0 IN (vt0.c0))) NOTNULL)) ORDER BY CASE WHEN ((t0.c12)&(t0.c6)) THEN LIKELIHOOD(DISTINCT t0.c6, 0.5754001149655725) END ASC, (- (CASE t0.c6  WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN vt0.c0 WHEN t0.c6 THEN t0.c6 END)) ASC, ((((((((((((t0.c12)AND(t0.c6)))AND(t0.c12)))AND(x'8a6b')))AND(vt1.c0)))AND(vt1.c0)))OR(t0.c6)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE WHEN ((t0.c12)&(t0.c6)) THEN LIKELIHOOD(DISTINCT t0.c6, 0.5754001149655725) END ASC, (- (CASE t0.c6  WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN vt0.c0 WHEN t0.c6 THEN t0.c6 END)) ASC, ((((((((((((t0.c12)AND(t0.c6)))AND(t0.c12)))AND(x'8a6b')))AND(vt1.c0)))AND(vt1.c0)))OR(t0.c6)) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((vt1.c0 IN (vt0.c0))) NOTNULL)) ORDER BY CASE WHEN ((t0.c12)&(t0.c6)) THEN LIKELIHOOD(DISTINCT t0.c6, 0.5754001149655725) END ASC, (- (CASE t0.c6  WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN vt0.c0 WHEN t0.c6 THEN t0.c6 END)) ASC, ((((((((((((t0.c12)AND(t0.c6)))AND(t0.c12)))AND(x'8a6b')))AND(vt1.c0)))AND(vt1.c0)))OR(t0.c6)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE WHEN ((t0.c12)&(t0.c6)) THEN LIKELIHOOD(DISTINCT t0.c6, 0.5754001149655725) END ASC, (- (CASE t0.c6  WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN vt0.c0 WHEN t0.c6 THEN t0.c6 END)) ASC, ((((((((((((t0.c12)AND(t0.c6)))AND(t0.c12)))AND(x'8a6b')))AND(vt1.c0)))AND(vt1.c0)))OR(t0.c6)) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((vt1.c0 IN (vt0.c0))) NOTNULL)) ORDER BY CASE WHEN ((t0.c12)&(t0.c6)) THEN LIKELIHOOD(DISTINCT t0.c6, 0.5754001149655725) END ASC, (- (CASE t0.c6  WHEN t0.c12 THEN t0.c6 WHEN t0.c12 THEN vt0.c0 WHEN t0.c6 THEN t0.c6 END)) ASC, ((((((((((((t0.c12)AND(t0.c6)))AND(t0.c12)))AND(x'8a6b')))AND(vt1.c0)))AND(vt1.c0)))OR(t0.c6)) COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((CASE t0.c12  WHEN NULL THEN '0.6665258814328744' WHEN t0.c6 THEN t0.c6 WHEN x'' THEN t0.c12 END) NOT BETWEEN (t0.c12) AND ((((t0.c12)) NOT BETWEEN ((t0.c12)) AND ((t0.c12)))))) ORDER BY CAST(((((x'')OR(t0.c6)))OR(t0.c6)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c12  WHEN NULL THEN '0.6665258814328744' WHEN t0.c6 THEN t0.c6 WHEN x'' THEN t0.c12 END) NOT BETWEEN (t0.c12) AND ((((t0.c12)) NOT BETWEEN ((t0.c12)) AND ((t0.c12)))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((((x'')OR(t0.c6)))OR(t0.c6)) AS TEXT) DESC);
SELECT ALL * FROM t0 WHERE (((CASE t0.c12  WHEN NULL THEN '0.6665258814328744' WHEN t0.c6 THEN t0.c6 WHEN x'' THEN t0.c12 END) NOT BETWEEN (t0.c12) AND ((((t0.c12)) NOT BETWEEN ((t0.c12)) AND ((t0.c12)))))) ORDER BY CAST(((((x'')OR(t0.c6)))OR(t0.c6)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c12  WHEN NULL THEN '0.6665258814328744' WHEN t0.c6 THEN t0.c6 WHEN x'' THEN t0.c12 END) NOT BETWEEN (t0.c12) AND ((((t0.c12)) NOT BETWEEN ((t0.c12)) AND ((t0.c12)))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((((x'')OR(t0.c6)))OR(t0.c6)) AS TEXT) DESC);
SELECT ALL * FROM t0 WHERE (((CASE t0.c12  WHEN NULL THEN '0.6665258814328744' WHEN t0.c6 THEN t0.c6 WHEN x'' THEN t0.c12 END) NOT BETWEEN (t0.c12) AND ((((t0.c12)) NOT BETWEEN ((t0.c12)) AND ((t0.c12)))))) ORDER BY CAST(((((x'')OR(t0.c6)))OR(t0.c6)) AS TEXT) DESC;
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (NULL) ORDER BY (((vt1.c0)%(1.112653832E9)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((vt1.c0)%(1.112653832E9)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (NULL) ORDER BY (((vt1.c0)%(1.112653832E9)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((vt1.c0)%(1.112653832E9)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (NULL) ORDER BY (((vt1.c0)%(1.112653832E9)) IN ())  NULLS FIRST;
SELECT * FROM vt1, vt0, t0 WHERE ((~ ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE ((~ ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE ((~ ((+ (vt1.c0)))));
SELECT ALL * FROM vt0, vt1, t0 WHERE (0.5446280790602593);
SELECT SUM(count) FROM (SELECT ALL ((0.5446280790602593) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (0.5446280790602593);
SELECT SUM(count) FROM (SELECT ALL ((0.5446280790602593) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (0.5446280790602593);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (CASE WHEN vt0.c0 THEN t0.c6 ELSE t0.c6 END IN ()) WHERE (NULLIF('g}', CAST(t0.c6 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF('g}', CAST(t0.c6 AS NUMERIC))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (CASE WHEN vt0.c0 THEN t0.c6 ELSE t0.c6 END IN ()));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (CASE WHEN vt0.c0 THEN t0.c6 ELSE t0.c6 END IN ()) WHERE (NULLIF('g}', CAST(t0.c6 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF('g}', CAST(t0.c6 AS NUMERIC))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (CASE WHEN vt0.c0 THEN t0.c6 ELSE t0.c6 END IN ()));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (CASE WHEN vt0.c0 THEN t0.c6 ELSE t0.c6 END IN ()) WHERE (NULLIF('g}', CAST(t0.c6 AS NUMERIC)));
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0) NOT NULL)));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((((vt0.c0) BETWEEN (t0.c6) AND (vt0.c0)))IS NOT(((vt1.c0) NOT BETWEEN (t0.c6) AND (vt1.c0))))) ORDER BY ((vt1.c0)/(t0.c6)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (t0.c6) AND (vt0.c0)))IS NOT(((vt1.c0) NOT BETWEEN (t0.c6) AND (vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((vt1.c0)/(t0.c6)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((((vt0.c0) BETWEEN (t0.c6) AND (vt0.c0)))IS NOT(((vt1.c0) NOT BETWEEN (t0.c6) AND (vt1.c0))))) ORDER BY ((vt1.c0)/(t0.c6)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (t0.c6) AND (vt0.c0)))IS NOT(((vt1.c0) NOT BETWEEN (t0.c6) AND (vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((vt1.c0)/(t0.c6)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((((vt0.c0) BETWEEN (t0.c6) AND (vt0.c0)))IS NOT(((vt1.c0) NOT BETWEEN (t0.c6) AND (vt1.c0))))) ORDER BY ((vt1.c0)/(t0.c6)) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((((t0.c6)>>(t0.c6)))OR(t0.c12)))AND(NULL))) ORDER BY ((((((((((((((((t0.c12)AND(vt1.c0)))AND(vt1.c0)))AND(t0.c6)))AND(NULL)))AND(t0.c6)))OR(x'')))AND(LIKE(t0.c12, vt1.c0))))OR((t0.c12 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c6)>>(t0.c6)))OR(t0.c12)))AND(NULL))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((((((((((((t0.c12)AND(vt1.c0)))AND(vt1.c0)))AND(t0.c6)))AND(NULL)))AND(t0.c6)))OR(x'')))AND(LIKE(t0.c12, vt1.c0))))OR((t0.c12 IN ()))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((((t0.c6)>>(t0.c6)))OR(t0.c12)))AND(NULL))) ORDER BY ((((((((((((((((t0.c12)AND(vt1.c0)))AND(vt1.c0)))AND(t0.c6)))AND(NULL)))AND(t0.c6)))OR(x'')))AND(LIKE(t0.c12, vt1.c0))))OR((t0.c12 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c6)>>(t0.c6)))OR(t0.c12)))AND(NULL))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((((((((((((t0.c12)AND(vt1.c0)))AND(vt1.c0)))AND(t0.c6)))AND(NULL)))AND(t0.c6)))OR(x'')))AND(LIKE(t0.c12, vt1.c0))))OR((t0.c12 IN ()))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((((t0.c6)>>(t0.c6)))OR(t0.c12)))AND(NULL))) ORDER BY ((((((((((((((((t0.c12)AND(vt1.c0)))AND(vt1.c0)))AND(t0.c6)))AND(NULL)))AND(t0.c6)))OR(x'')))AND(LIKE(t0.c12, vt1.c0))))OR((t0.c12 IN ())));
SELECT COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON NULL WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON NULL);
SELECT COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON NULL WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON NULL);
SELECT COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON NULL WHERE ('');
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((((((((NULL)AND(vt0.c0)))AND(vt1.c0)))AND(t0.c6)))OR(vt1.c0)))*(((vt0.c0)IS(t0.c12)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)AND(vt0.c0)))AND(vt1.c0)))AND(t0.c6)))OR(vt1.c0)))*(((vt0.c0)IS(t0.c12))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((((((((NULL)AND(vt0.c0)))AND(vt1.c0)))AND(t0.c6)))OR(vt1.c0)))*(((vt0.c0)IS(t0.c12)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)AND(vt0.c0)))AND(vt1.c0)))AND(t0.c6)))OR(vt1.c0)))*(((vt0.c0)IS(t0.c12))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((((((((NULL)AND(vt0.c0)))AND(vt1.c0)))AND(t0.c6)))OR(vt1.c0)))*(((vt0.c0)IS(t0.c12)))));
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((t0.c6)&(t0.c12)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c6)&(t0.c12)) IN ())) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((t0.c6)&(t0.c12)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c6)&(t0.c12)) IN ())) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((t0.c6)&(t0.c12)) IN ()));
SELECT ALL * FROM t0, vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0)GLOB(t0.c12))))) ORDER BY 0.23819125639470728  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0)GLOB(t0.c12))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY 0.23819125639470728  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0)GLOB(t0.c12))))) ORDER BY 0.23819125639470728  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0)GLOB(t0.c12))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY 0.23819125639470728  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0)GLOB(t0.c12))))) ORDER BY 0.23819125639470728  NULLS LAST;
SELECT ALL * FROM vt1, t0 INDEXED BY i72 WHERE (CAST(((t0.c12) NOT NULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c12) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM vt1, t0 INDEXED BY i72);
SELECT ALL * FROM vt1, t0 INDEXED BY i72 WHERE (CAST(((t0.c12) NOT NULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c12) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM vt1, t0 INDEXED BY i72);
SELECT ALL * FROM vt1, t0 INDEXED BY i72 WHERE (CAST(((t0.c12) NOT NULL) AS INTEGER));
SELECT * FROM vt0 WHERE (CAST(((0.7037359930811631)<(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((0.7037359930811631)<(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((0.7037359930811631)<(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((0.7037359930811631)<(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((0.7037359930811631)<(vt0.c0)) AS INTEGER));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON x'' WHERE (((((((t0.c12)OR(vt0.c0)))OR(vt0.c0))) IS FALSE)) ORDER BY ((vt0.c0)IS(t0.c6)) COLLATE BINARY DESC  NULLS LAST, (((x'89b9') NOT BETWEEN (t0.c6) AND (t0.c6)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c12)OR(vt0.c0)))OR(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON x'' ORDER BY ((vt0.c0)IS(t0.c6)) COLLATE BINARY DESC  NULLS LAST, (((x'89b9') NOT BETWEEN (t0.c6) AND (t0.c6)) IN ())  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON x'' WHERE (((((((t0.c12)OR(vt0.c0)))OR(vt0.c0))) IS FALSE)) ORDER BY ((vt0.c0)IS(t0.c6)) COLLATE BINARY DESC  NULLS LAST, (((x'89b9') NOT BETWEEN (t0.c6) AND (t0.c6)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c12)OR(vt0.c0)))OR(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON x'' ORDER BY ((vt0.c0)IS(t0.c6)) COLLATE BINARY DESC  NULLS LAST, (((x'89b9') NOT BETWEEN (t0.c6) AND (t0.c6)) IN ())  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON x'' WHERE (((((((t0.c12)OR(vt0.c0)))OR(vt0.c0))) IS FALSE)) ORDER BY ((vt0.c0)IS(t0.c6)) COLLATE BINARY DESC  NULLS LAST, (((x'89b9') NOT BETWEEN (t0.c6) AND (t0.c6)) IN ())  NULLS LAST;
SELECT ALL * FROM vt0, t0 NATURAL JOIN vt1 WHERE (CAST(((x'') NOTNULL) AS NUMERIC)) ORDER BY ((CASE WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'') NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1 ORDER BY ((CASE WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt0, t0 NATURAL JOIN vt1 WHERE (CAST(((x'') NOTNULL) AS NUMERIC)) ORDER BY ((CASE WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'') NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1 ORDER BY ((CASE WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt0, t0 NATURAL JOIN vt1 WHERE (CAST(((x'') NOTNULL) AS NUMERIC)) ORDER BY ((CASE WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL)  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))-(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((((vt0.c0))<((vt0.c0)))) NOT BETWEEN ((vt0.c0 IN (-1.545553049E9, x''))) AND (((vt0.c0) ISNULL)))  NULLS FIRST, NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))-(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))<((vt0.c0)))) NOT BETWEEN ((vt0.c0 IN (-1.545553049E9, x''))) AND (((vt0.c0) ISNULL)))  NULLS FIRST, NULL DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))-(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((((vt0.c0))<((vt0.c0)))) NOT BETWEEN ((vt0.c0 IN (-1.545553049E9, x''))) AND (((vt0.c0) ISNULL)))  NULLS FIRST, NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))-(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))<((vt0.c0)))) NOT BETWEEN ((vt0.c0 IN (-1.545553049E9, x''))) AND (((vt0.c0) ISNULL)))  NULLS FIRST, NULL DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))-(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((((vt0.c0))<((vt0.c0)))) NOT BETWEEN ((vt0.c0 IN (-1.545553049E9, x''))) AND (((vt0.c0) ISNULL)))  NULLS FIRST, NULL DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(0X41b7d69f)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))OR(0X41b7d69f)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(0X41b7d69f)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))OR(0X41b7d69f)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(0X41b7d69f)) COLLATE RTRIM);
SELECT * FROM t0, vt1 WHERE ((- (UPPER(t0.c12))));
SELECT SUM(count) FROM (SELECT ALL (((- (UPPER(t0.c12)))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((- (UPPER(t0.c12))));
SELECT SUM(count) FROM (SELECT ALL (((- (UPPER(t0.c12)))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((- (UPPER(t0.c12))));
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((t0.c6)>=(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c6)>=(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((t0.c6)>=(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c6)>=(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((t0.c6)>=(vt1.c0))) NOT NULL));
SELECT * FROM vt1 WHERE (HEX((((vt1.c0))==((vt1.c0))))) ORDER BY -1.735971736E9  NULLS LAST, vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX((((vt1.c0))==((vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY -1.735971736E9  NULLS LAST, vt1.c0  NULLS LAST);
SELECT * FROM vt1 WHERE (HEX((((vt1.c0))==((vt1.c0))))) ORDER BY -1.735971736E9  NULLS LAST, vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX((((vt1.c0))==((vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY -1.735971736E9  NULLS LAST, vt1.c0  NULLS LAST);
SELECT * FROM vt1 WHERE (HEX((((vt1.c0))==((vt1.c0))))) ORDER BY -1.735971736E9  NULLS LAST, vt1.c0  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (HEX((((vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt1.c0))==((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((HEX((((vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt1.c0))=((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (HEX((((vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt1.c0))==((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((HEX((((vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt1.c0))=((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (HEX((((vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt1.c0))==((vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)))));
