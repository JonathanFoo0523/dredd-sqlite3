-- Time: 2024/06/09 03:49:09
-- Database: database56
-- Database version: 3.40.0
-- seed value: 1519570956
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, c1 UNINDEXED, c2); -- 0ms;
UPDATE OR FAIL vt0 SET c0=x''; -- 0ms;
PRAGMA mmap_size = 1902064017278650260; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 935341577); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt2 USING fts4(c0, c1 UNINDEXED, c2, c3, languageid="lid"); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '22318'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 996732502); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 175774222); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE vt2 SET (c2)=(x'9696') WHERE LIKELY((((vt2.c1)) BETWEEN ((vt2.c2)) AND ((vt2.lid)))); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
REINDEX; -- 0ms;
ANALYZE vt1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
ANALYZE; -- 0ms;
UPDATE vt1 SET (c2)=('O\n6a뿓>X1'); -- 0ms;
UPDATE vt0 SET (c0)=(0.8365620961620291); -- 1ms;
DROP TABLE vt1; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (0.6037030964902661), (NULL), (x''); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('pgsz', '57593'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('crisismerge', 25091239); -- 1ms;
INSERT INTO vt2(vt2, rank) VALUES('pgsz', '20338'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR FAIL vt0 SET c0='~T'; -- 0ms;
PRAGMA threads; -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
ANALYZE vt2; -- 0ms;
INSERT OR REPLACE INTO vt2(c3, c2, c0, c1) VALUES (NULL, x'', NULL, NULL), (1737204721, NULL, '--4	*Mt9', x''), (NULL, 'Ae', NULL, x'3606'); -- 1ms;
DELETE FROM vt0; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(x'', 'iq{''''UK(I'); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('crisismerge', 1751803299); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 0ms;
COMMIT; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('Dsaf-'), (0Xb41972c), (2.147139539E9); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('pgsz', '52352'); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('pgsz', '25247'); -- 0ms;
INSERT INTO vt2(vt2) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA temp.stats; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -965055101);\n; -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt2(vt2) VALUES('optimize'); -- 0ms;
PRAGMA main.cache_spill = -1713786648660479909; -- 0ms;
UPDATE vt0 SET c0=NULL; -- 0ms;
INSERT OR IGNORE INTO vt2(c2, lid, c1) VALUES (0X7ffabfd3, NULL, x'ef4b'); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt2 SET lid=NULL; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE vt2 SET (c3, c2, c0)=(NULL, x'', 0.6037030964902661); -- 0ms;
PRAGMA temp.mmap_size = -9100805451708071702; -- 0ms;
PRAGMA temp.cache_size = 0; -- 0ms;
REINDEX  vt0; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0)=(0.7218191702740514) WHERE COALESCE(DISTINCT (vt0.c0 IN ()), CAST(vt0.c0 AS NUMERIC)); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.4651205588819207, 0xb41972c) WHERE (((vt0.c0)IS NOT(vt0.c0)) IN ()); -- 0ms;
INSERT INTO vt2(vt2) VALUES('rebuild'); -- 0ms;
PRAGMA short_column_names; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt2', 'vt0', ' sz=516572125 noskipscan'); -- 1ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 0ms;
UPDATE vt0 SET (c0, c0)=(1.88847916E8, 'B\nx_#GP'); -- 0ms;
ANALYZE; -- 1ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 REAL , c1 TEXT , c2 TEXT ); -- 0ms;
INSERT OR IGNORE INTO vt2 VALUES (0Xb41972c, x'', 0.5395394774180953, x'', x''); -- 0ms;
INSERT OR IGNORE INTO t0(c1, c2) VALUES (NULL, 1.737204721E9); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM; -- 2ms;
INSERT OR FAIL INTO vt0 VALUES ('0.7218191702740514'); -- 0ms;
REINDEX BINARY; -- 1ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT COUNT(*) FROM vt2, t0, vt0 WHERE ((1069735336 IN (((((0.750368805174001)OR('0.8365620961620291')))AND('ya%r'))))); -- 0ms;
ALTER TABLE t0 ADD COLUMN c17 INTEGER; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR FAIL t0 SET (c17)=(x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.optimize; -- 0ms;
UPDATE vt0 SET c0=NULL; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt2 SET lid=NULL; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF DELETE ON v0 BEGIN INSERT OR IGNORE INTO vt2(c0, c1, lid, c3, c2) VALUES ('ya%r', x'5674', 'rG秣BW&+', 'L>Xsj}偐90', 0.6637296754138685), (x'', '/012ai', NULL, NULL, x''), (0X3872f867, NULL, 0.7218191702740514, NULL, x'');END; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c2 TO c48; -- 1ms;
END; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE vt2 SET (lid)=(9.47058791E8) WHERE vt2.c1; -- 1ms;
INSERT OR IGNORE INTO vt2(c0, c1, c2) VALUES ('0.7218191702740514', 0.5616618893274352, 942634881); -- 0ms;
INSERT OR ROLLBACK INTO vt2(c3, c0, c2, c1) VALUES (NULL, 0x301622fd, '293761347', NULL); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('crisismerge', 97086420); -- 0ms;
INSERT INTO vt2(vt2) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'sqlite_autoindex_vt2_segdir_1', '0 sz=-814626646'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=13'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 562653349); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt2', 'sqlite_autoindex_vt2_segdir_1', ' noskipscan'); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON '' FULL OUTER JOIN vt2 ON CAST(((v0.c0)+(v0.c0)) AS BLOB) WHERE (((vt2.c3)IS(vt2.c0))) ORDER BY vt0.c0, vt2.lid ASC  NULLS FIRST, ((v0.c0)<=(vt2.c3)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((vt2.c3)IS(vt2.c0))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON '' FULL OUTER JOIN vt2 ON CAST(((v0.c0)+(v0.c0)) AS BLOB) ORDER BY vt0.c0, vt2.lid ASC  NULLS FIRST, ((v0.c0)<=(vt2.c3)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON '' FULL OUTER JOIN vt2 ON CAST(((v0.c0)+(v0.c0)) AS BLOB) WHERE (((vt2.c3)IS(vt2.c0))) ORDER BY vt0.c0, vt2.lid ASC  NULLS FIRST, ((v0.c0)<=(vt2.c3)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((vt2.c3)IS(vt2.c0))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON '' FULL OUTER JOIN vt2 ON CAST(((v0.c0)+(v0.c0)) AS BLOB) ORDER BY vt0.c0, vt2.lid ASC  NULLS FIRST, ((v0.c0)<=(vt2.c3)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON '' FULL OUTER JOIN vt2 ON CAST(((v0.c0)+(v0.c0)) AS BLOB) WHERE (((vt2.c3)IS(vt2.c0))) ORDER BY vt0.c0, vt2.lid ASC  NULLS FIRST, ((v0.c0)<=(vt2.c3)) COLLATE BINARY DESC;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)>>(vt0.c0)))+((v0.c0 IN ())))) ORDER BY CAST(v0.c0 AS TEXT), ((((vt0.c0)IS NOT(vt0.c0)))+(IFNULL(DISTINCT v0.c0, vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>>(vt0.c0)))+((v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(v0.c0 AS TEXT), ((((vt0.c0)IS NOT(vt0.c0)))+(IFNULL(DISTINCT v0.c0, vt0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)>>(vt0.c0)))+((v0.c0 IN ())))) ORDER BY CAST(v0.c0 AS TEXT), ((((vt0.c0)IS NOT(vt0.c0)))+(IFNULL(DISTINCT v0.c0, vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>>(vt0.c0)))+((v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(v0.c0 AS TEXT), ((((vt0.c0)IS NOT(vt0.c0)))+(IFNULL(DISTINCT v0.c0, vt0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)>>(vt0.c0)))+((v0.c0 IN ())))) ORDER BY CAST(v0.c0 AS TEXT), ((((vt0.c0)IS NOT(vt0.c0)))+(IFNULL(DISTINCT v0.c0, vt0.c0))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((CASE x''  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 WHEN x'' THEN t0.c17 ELSE t0.c48 END)GLOB((- (''))))) ORDER BY ((CASE v0.c0  WHEN t0.c0 THEN '942634881' END) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((CASE x''  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 WHEN x'' THEN t0.c17 ELSE t0.c48 END)GLOB((- (''))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((CASE v0.c0  WHEN t0.c0 THEN '942634881' END) NOTNULL));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((CASE x''  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 WHEN x'' THEN t0.c17 ELSE t0.c48 END)GLOB((- (''))))) ORDER BY ((CASE v0.c0  WHEN t0.c0 THEN '942634881' END) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((CASE x''  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 WHEN x'' THEN t0.c17 ELSE t0.c48 END)GLOB((- (''))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((CASE v0.c0  WHEN t0.c0 THEN '942634881' END) NOTNULL));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((CASE x''  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 WHEN x'' THEN t0.c17 ELSE t0.c48 END)GLOB((- (''))))) ORDER BY ((CASE v0.c0  WHEN t0.c0 THEN '942634881' END) NOTNULL);
SELECT * FROM vt0, t0, v0 WHERE (((((UNLIKELY(t0.c0))AND(CAST(t0.c48 AS TEXT))))OR(((v0.c0) BETWEEN (t0.c1) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((UNLIKELY(t0.c0))AND(CAST(t0.c48 AS TEXT))))OR(((v0.c0) BETWEEN (t0.c1) AND (t0.c0))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (((((UNLIKELY(t0.c0))AND(CAST(t0.c48 AS TEXT))))OR(((v0.c0) BETWEEN (t0.c1) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((UNLIKELY(t0.c0))AND(CAST(t0.c48 AS TEXT))))OR(((v0.c0) BETWEEN (t0.c1) AND (t0.c0))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (((((UNLIKELY(t0.c0))AND(CAST(t0.c48 AS TEXT))))OR(((v0.c0) BETWEEN (t0.c1) AND (t0.c0)))));
SELECT ALL * FROM vt2, v0, vt0 WHERE (((SUBSTR(vt2.c0, vt2.lid))%(0xffffffff95e379e3))) ORDER BY vt2.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((SUBSTR(vt2.c0, vt2.lid))%(0Xffffffff95e379e3))) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY vt2.c1 DESC);
SELECT ALL * FROM vt2, v0, vt0 WHERE (((SUBSTR(vt2.c0, vt2.lid))%(0xffffffff95e379e3))) ORDER BY vt2.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((SUBSTR(vt2.c0, vt2.lid))%(0Xffffffff95e379e3))) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY vt2.c1 DESC);
SELECT ALL * FROM vt2, v0, vt0 WHERE (((SUBSTR(vt2.c0, vt2.lid))%(0xffffffff95e379e3))) ORDER BY vt2.c1 DESC;
SELECT COUNT(*) FROM t0, vt2 CROSS JOIN v0 ON ((vt0.c0 COLLATE BINARY)IS((((vt2.c3)) BETWEEN (('')) AND (('ya%r'))))) RIGHT OUTER JOIN vt0 ON (~ (0.8365620961620291)) WHERE ((('1273581648' COLLATE RTRIM) BETWEEN (CAST(vt2.c0 AS TEXT)) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((('1273581648' COLLATE RTRIM) BETWEEN (CAST(vt2.c0 AS TEXT)) AND (t0.c0))) IS TRUE)  as count FROM t0, vt2 CROSS JOIN v0 ON ((vt0.c0 COLLATE BINARY)IS((((vt2.c3)) BETWEEN (('')) AND (('ya%r'))))) RIGHT OUTER JOIN vt0 ON (~ (0.8365620961620291)));
SELECT COUNT(*) FROM t0, vt2 CROSS JOIN v0 ON ((vt0.c0 COLLATE BINARY)IS((((vt2.c3)) BETWEEN (('')) AND (('ya%r'))))) RIGHT OUTER JOIN vt0 ON (~ (0.8365620961620291)) WHERE ((('1273581648' COLLATE RTRIM) BETWEEN (CAST(vt2.c0 AS TEXT)) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((('1273581648' COLLATE RTRIM) BETWEEN (CAST(vt2.c0 AS TEXT)) AND (t0.c0))) IS TRUE)  as count FROM t0, vt2 CROSS JOIN v0 ON ((vt0.c0 COLLATE BINARY)IS((((vt2.c3)) BETWEEN (('')) AND (('ya%r'))))) RIGHT OUTER JOIN vt0 ON (~ (0.8365620961620291)));
SELECT COUNT(*) FROM v0, vt2, vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0)<>(vt2.c1))) NOTNULL) WHERE (((((x'')AND((vt2.c2 IN ()))))AND(HEX(vt2.c1)))) ORDER BY ((v0.c0 COLLATE NOCASE) BETWEEN (((vt2.c2)-(t0.c0))) AND (t0.c48))  NULLS LAST, ((CAST(vt2.c2 AS BLOB)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND((vt2.c2 IN ()))))AND(HEX(vt2.c1)))) IS TRUE)  as count FROM v0, vt2, vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0)!=(vt2.c1))) NOTNULL) ORDER BY ((v0.c0 COLLATE NOCASE) BETWEEN (((vt2.c2)-(t0.c0))) AND (t0.c48))  NULLS LAST, ((CAST(vt2.c2 AS BLOB)) NOTNULL));
SELECT COUNT(*) FROM v0, vt2, vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0)<>(vt2.c1))) NOTNULL) WHERE (((((x'')AND((vt2.c2 IN ()))))AND(HEX(vt2.c1)))) ORDER BY ((v0.c0 COLLATE NOCASE) BETWEEN (((vt2.c2)-(t0.c0))) AND (t0.c48))  NULLS LAST, ((CAST(vt2.c2 AS BLOB)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND((vt2.c2 IN ()))))AND(HEX(vt2.c1)))) IS TRUE)  as count FROM v0, vt2, vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0)!=(vt2.c1))) NOTNULL) ORDER BY ((v0.c0 COLLATE NOCASE) BETWEEN (((vt2.c2)-(t0.c0))) AND (t0.c48))  NULLS LAST, ((CAST(vt2.c2 AS BLOB)) NOTNULL));
SELECT COUNT(*) FROM v0, vt2, vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0)<>(vt2.c1))) NOTNULL) WHERE (((((x'')AND((vt2.c2 IN ()))))AND(HEX(vt2.c1)))) ORDER BY ((v0.c0 COLLATE NOCASE) BETWEEN (((vt2.c2)-(t0.c0))) AND (t0.c48))  NULLS LAST, ((CAST(vt2.c2 AS BLOB)) NOTNULL);
SELECT * FROM t0 WHERE (((x'365d') NOT BETWEEN (((t0.c17) ISNULL)) AND (CAST(t0.c48 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((x'365d') NOT BETWEEN (((t0.c17) ISNULL)) AND (CAST(t0.c48 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((x'365d') NOT BETWEEN (((t0.c17) ISNULL)) AND (CAST(t0.c48 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((x'365d') NOT BETWEEN (((t0.c17) ISNULL)) AND (CAST(t0.c48 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((x'365d') NOT BETWEEN (((t0.c17) ISNULL)) AND (CAST(t0.c48 AS BLOB))));
SELECT ALL * FROM vt0, vt2, v0, t0 WHERE ((((vt2.lid)<(t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.lid)<(t0.c1)) IN ())) IS TRUE)  as count FROM vt0, vt2, v0, t0);
SELECT ALL * FROM vt0, vt2, v0, t0 WHERE ((((vt2.lid)<(t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.lid)<(t0.c1)) IN ())) IS TRUE)  as count FROM vt0, vt2, v0, t0);
SELECT ALL * FROM vt0, vt2, v0, t0 WHERE ((((vt2.lid)<(t0.c1)) IN ()));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (t0.c17);
SELECT SUM(count) FROM (SELECT ALL ((t0.c17) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (t0.c17);
SELECT SUM(count) FROM (SELECT ALL ((t0.c17) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (t0.c17);
SELECT ALL * FROM vt2 WHERE (((((((((CASE WHEN vt2.c3 THEN vt2.c2 END)OR((vt2.c1 IN (vt2.c2, x'268a')))))OR(0.6895213826275555)))AND(1.737204721E9)))OR(LIKELIHOOD(vt2.c0, 0.5893064805071082)))) ORDER BY vt2.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN vt2.c3 THEN vt2.c2 END)OR((vt2.c1 IN (vt2.c2, x'268a')))))OR(0.6895213826275555)))AND(1.737204721E9)))OR(LIKELIHOOD(vt2.c0, 0.5893064805071082)))) IS TRUE)  as count FROM vt2 ORDER BY vt2.c0 DESC);
SELECT ALL * FROM vt2 WHERE (((((((((CASE WHEN vt2.c3 THEN vt2.c2 END)OR((vt2.c1 IN (vt2.c2, x'268a')))))OR(0.6895213826275555)))AND(1.737204721E9)))OR(LIKELIHOOD(vt2.c0, 0.5893064805071082)))) ORDER BY vt2.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN vt2.c3 THEN vt2.c2 END)OR((vt2.c1 IN (vt2.c2, x'268a')))))OR(0.6895213826275555)))AND(1.737204721E9)))OR(LIKELIHOOD(vt2.c0, 0.5893064805071082)))) IS TRUE)  as count FROM vt2 ORDER BY vt2.c0 DESC);
SELECT ALL * FROM vt2 WHERE (((((((((CASE WHEN vt2.c3 THEN vt2.c2 END)OR((vt2.c1 IN (vt2.c2, x'268a')))))OR(0.6895213826275555)))AND(1.737204721E9)))OR(LIKELIHOOD(vt2.c0, 0.5893064805071082)))) ORDER BY vt2.c0 DESC;
SELECT ALL COUNT(*) FROM vt2, v0 WHERE (TYPEOF(DISTINCT HEX(DISTINCT vt2.c0))) ORDER BY LIKE(vt2.c0 COLLATE NOCASE, ((vt2.c3)<>(vt2.lid)), '-') ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT HEX(DISTINCT vt2.c0))) IS TRUE)  as count FROM vt2, v0 ORDER BY LIKE(vt2.c0 COLLATE NOCASE, ((vt2.c3)<>(vt2.lid)), '-') ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, v0 WHERE (TYPEOF(DISTINCT HEX(DISTINCT vt2.c0))) ORDER BY LIKE(vt2.c0 COLLATE NOCASE, ((vt2.c3)<>(vt2.lid)), '-') ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT HEX(DISTINCT vt2.c0))) IS TRUE)  as count FROM vt2, v0 ORDER BY LIKE(vt2.c0 COLLATE NOCASE, ((vt2.c3)<>(vt2.lid)), '-') ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, v0 WHERE (TYPEOF(DISTINCT HEX(DISTINCT vt2.c0))) ORDER BY LIKE(vt2.c0 COLLATE NOCASE, ((vt2.c3)<>(vt2.lid)), '-') ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0, t0, vt2 WHERE (CHANGES()) ORDER BY vt2.c1  NULLS LAST, ((((t0.c48)OR(x'')))AND(0.9390894028402588)) COLLATE RTRIM, (- (CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM v0, vt0, t0, vt2 ORDER BY vt2.c1  NULLS LAST, ((((t0.c48)OR(x'')))AND(0.9390894028402588)) COLLATE RTRIM, (- (CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, t0, vt2 WHERE (CHANGES()) ORDER BY vt2.c1  NULLS LAST, ((((t0.c48)OR(x'')))AND(0.9390894028402588)) COLLATE RTRIM, (- (CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM v0, vt0, t0, vt2 ORDER BY vt2.c1  NULLS LAST, ((((t0.c48)OR(x'')))AND(0.9390894028402588)) COLLATE RTRIM, (- (CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, t0, vt2 WHERE (CHANGES()) ORDER BY vt2.c1  NULLS LAST, ((((t0.c48)OR(x'')))AND(0.9390894028402588)) COLLATE RTRIM, (- (CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT ALL * FROM v0 NOT INDEXED, vt0 WHERE (TYPEOF(((vt0.c0)&(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0)&(vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0 NOT INDEXED, vt0 WHERE (TYPEOF(((vt0.c0)&(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0)&(vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0 NOT INDEXED, vt0 WHERE (TYPEOF(((vt0.c0)&(vt0.c0))));
SELECT ALL COUNT(*) FROM v0, vt2 WHERE (x'') ORDER BY ((((vt2.c1)||(vt2.c2))) BETWEEN ((v0.c0 IN ())) AND (((vt2.c1) NOT NULL))) DESC  NULLS LAST, CAST(TYPEOF(DISTINCT vt2.c3) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt2 ORDER BY ((((vt2.c1)||(vt2.c2))) BETWEEN ((v0.c0 IN ())) AND (((vt2.c1) NOT NULL))) DESC  NULLS LAST, CAST(TYPEOF(DISTINCT vt2.c3) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt2 WHERE (x'') ORDER BY ((((vt2.c1)||(vt2.c2))) BETWEEN ((v0.c0 IN ())) AND (((vt2.c1) NOT NULL))) DESC  NULLS LAST, CAST(TYPEOF(DISTINCT vt2.c3) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt2 ORDER BY ((((vt2.c1)||(vt2.c2))) BETWEEN ((v0.c0 IN ())) AND (((vt2.c1) NOT NULL))) DESC  NULLS LAST, CAST(TYPEOF(DISTINCT vt2.c3) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt2 WHERE (x'') ORDER BY ((((vt2.c1)||(vt2.c2))) BETWEEN ((v0.c0 IN ())) AND (((vt2.c1) NOT NULL))) DESC  NULLS LAST, CAST(TYPEOF(DISTINCT vt2.c3) AS INTEGER) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) NOT NULL)))) ORDER BY TRIM(DISTINCT ((vt0.c0)||(vt0.c0)), TRIM(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT ((vt0.c0)||(vt0.c0)), TRIM(vt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) NOT NULL)))) ORDER BY TRIM(DISTINCT ((vt0.c0)||(vt0.c0)), TRIM(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT ((vt0.c0)||(vt0.c0)), TRIM(vt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) NOT NULL)))) ORDER BY TRIM(DISTINCT ((vt0.c0)||(vt0.c0)), TRIM(vt0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt2, vt0, t0 WHERE ((- (t0.c48)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (t0.c48)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt2, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt2, vt0, t0 WHERE ((- (t0.c48)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (t0.c48)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt2, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt2, vt0, t0 WHERE ((- (t0.c48)) COLLATE BINARY);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((((t0.c48)) BETWEEN ((v0.c0)) AND ((vt2.c3)))))<=((((t0.c48)<=(vt2.c3))))) CROSS JOIN vt2 ON IFNULL(DISTINCT (((t0.c1))<((vt2.c1))), ((vt2.c1)IS(t0.c1))) LEFT OUTER JOIN v0 ON ((NULL) NOT NULL) WHERE (CAST(((((v0.c0)OR(vt2.c2)))AND(t0.c17)) AS REAL)) ORDER BY (vt2.c1 IN ()) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)OR(vt2.c2)))AND(t0.c17)) AS REAL)) IS TRUE)  as count FROM t0 NOT INDEXED CROSS JOIN vt0 ON ((((((t0.c48)) BETWEEN ((v0.c0)) AND ((vt2.c3)))))<=((((t0.c48)<=(vt2.c3))))) CROSS JOIN vt2 ON IFNULL(DISTINCT (((t0.c1))<((vt2.c1))), ((vt2.c1)IS(t0.c1))) LEFT OUTER JOIN v0 ON ((NULL) NOT NULL) ORDER BY (vt2.c1 IN ()) COLLATE NOCASE ASC);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((((t0.c48)) BETWEEN ((v0.c0)) AND ((vt2.c3)))))<=((((t0.c48)<=(vt2.c3))))) CROSS JOIN vt2 ON IFNULL(DISTINCT (((t0.c1))<((vt2.c1))), ((vt2.c1)IS(t0.c1))) LEFT OUTER JOIN v0 ON ((NULL) NOT NULL) WHERE (CAST(((((v0.c0)OR(vt2.c2)))AND(t0.c17)) AS REAL)) ORDER BY (vt2.c1 IN ()) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)OR(vt2.c2)))AND(t0.c17)) AS REAL)) IS TRUE)  as count FROM t0 NOT INDEXED CROSS JOIN vt0 ON ((((((t0.c48)) BETWEEN ((v0.c0)) AND ((vt2.c3)))))<=((((t0.c48)<=(vt2.c3))))) CROSS JOIN vt2 ON IFNULL(DISTINCT (((t0.c1))<((vt2.c1))), ((vt2.c1)IS(t0.c1))) LEFT OUTER JOIN v0 ON ((NULL) NOT NULL) ORDER BY (vt2.c1 IN ()) COLLATE NOCASE ASC);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((((t0.c48)) BETWEEN ((v0.c0)) AND ((vt2.c3)))))<=((((t0.c48)<=(vt2.c3))))) CROSS JOIN vt2 ON IFNULL(DISTINCT (((t0.c1))<((vt2.c1))), ((vt2.c1)IS(t0.c1))) LEFT OUTER JOIN v0 ON ((NULL) NOT NULL) WHERE (CAST(((((v0.c0)OR(vt2.c2)))AND(t0.c17)) AS REAL)) ORDER BY (vt2.c1 IN ()) COLLATE NOCASE ASC;
SELECT * FROM vt2, vt0 INNER JOIN v0 ON TRIM(vt0.c0, CAST(x'' AS BLOB)) LEFT OUTER JOIN t0 ON (((vt2.c3, t0.c1, vt2.c0)) NOT BETWEEN (((((v0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))), ((vt2.c0) NOT BETWEEN (t0.c1) AND (x'')), (+ (vt2.c2)))) AND (((((vt2.c1)) BETWEEN ((vt2.lid)) AND ((vt2.c0))), ((v0.c0)AND(vt2.c3)), ((vt2.c2)-(x''))))) WHERE (CASE WHEN ((1101710451) ISNULL) THEN 0.2213043095985484 WHEN (('->?\r')*(vt2.c2)) THEN CAST(t0.c48 AS TEXT) WHEN CAST(t0.c17 AS TEXT) THEN CAST(vt2.lid AS TEXT) ELSE ((v0.c0) IS TRUE) END) ORDER BY (((t0.c48 IN ()))&(COALESCE(DISTINCT vt0.c0, vt2.c2, vt2.c2, t0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((1101710451) ISNULL) THEN 0.2213043095985484 WHEN (('->?\r')*(vt2.c2)) THEN CAST(t0.c48 AS TEXT) WHEN CAST(t0.c17 AS TEXT) THEN CAST(vt2.lid AS TEXT) ELSE ((v0.c0) IS TRUE) END) IS TRUE)  as count FROM vt2, vt0 INNER JOIN v0 ON TRIM(vt0.c0, CAST(x'' AS BLOB)) LEFT OUTER JOIN t0 ON (((vt2.c3, t0.c1, vt2.c0)) NOT BETWEEN (((((v0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))), ((vt2.c0) NOT BETWEEN (t0.c1) AND (x'')), (+ (vt2.c2)))) AND (((((vt2.c1)) BETWEEN ((vt2.lid)) AND ((vt2.c0))), ((v0.c0)AND(vt2.c3)), ((vt2.c2)-(x''))))) ORDER BY (((t0.c48 IN ()))&(COALESCE(DISTINCT vt0.c0, vt2.c2, vt2.c2, t0.c0))) DESC  NULLS FIRST);
SELECT * FROM vt2, vt0 INNER JOIN v0 ON TRIM(vt0.c0, CAST(x'' AS BLOB)) LEFT OUTER JOIN t0 ON (((vt2.c3, t0.c1, vt2.c0)) NOT BETWEEN (((((v0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))), ((vt2.c0) NOT BETWEEN (t0.c1) AND (x'')), (+ (vt2.c2)))) AND (((((vt2.c1)) BETWEEN ((vt2.lid)) AND ((vt2.c0))), ((v0.c0)AND(vt2.c3)), ((vt2.c2)-(x''))))) WHERE (CASE WHEN ((1101710451) ISNULL) THEN 0.2213043095985484 WHEN (('->?\r')*(vt2.c2)) THEN CAST(t0.c48 AS TEXT) WHEN CAST(t0.c17 AS TEXT) THEN CAST(vt2.lid AS TEXT) ELSE ((v0.c0) IS TRUE) END) ORDER BY (((t0.c48 IN ()))&(COALESCE(DISTINCT vt0.c0, vt2.c2, vt2.c2, t0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((1101710451) ISNULL) THEN 0.2213043095985484 WHEN (('->?\r')*(vt2.c2)) THEN CAST(t0.c48 AS TEXT) WHEN CAST(t0.c17 AS TEXT) THEN CAST(vt2.lid AS TEXT) ELSE ((v0.c0) IS TRUE) END) IS TRUE)  as count FROM vt2, vt0 INNER JOIN v0 ON TRIM(vt0.c0, CAST(x'' AS BLOB)) LEFT OUTER JOIN t0 ON (((vt2.c3, t0.c1, vt2.c0)) NOT BETWEEN (((((v0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))), ((vt2.c0) NOT BETWEEN (t0.c1) AND (x'')), (+ (vt2.c2)))) AND (((((vt2.c1)) BETWEEN ((vt2.lid)) AND ((vt2.c0))), ((v0.c0)AND(vt2.c3)), ((vt2.c2)-(x''))))) ORDER BY (((t0.c48 IN ()))&(COALESCE(DISTINCT vt0.c0, vt2.c2, vt2.c2, t0.c0))) DESC  NULLS FIRST);
SELECT * FROM vt2, vt0 INNER JOIN v0 ON TRIM(vt0.c0, CAST(x'' AS BLOB)) LEFT OUTER JOIN t0 ON (((vt2.c3, t0.c1, vt2.c0)) NOT BETWEEN (((((v0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))), ((vt2.c0) NOT BETWEEN (t0.c1) AND (x'')), (+ (vt2.c2)))) AND (((((vt2.c1)) BETWEEN ((vt2.lid)) AND ((vt2.c0))), ((v0.c0)AND(vt2.c3)), ((vt2.c2)-(x''))))) WHERE (CASE WHEN ((1101710451) ISNULL) THEN 0.2213043095985484 WHEN (('->?\r')*(vt2.c2)) THEN CAST(t0.c48 AS TEXT) WHEN CAST(t0.c17 AS TEXT) THEN CAST(vt2.lid AS TEXT) ELSE ((v0.c0) IS TRUE) END) ORDER BY (((t0.c48 IN ()))&(COALESCE(DISTINCT vt0.c0, vt2.c2, vt2.c2, t0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM v0, t0, vt0, vt2 WHERE ((CASE WHEN t0.c1 THEN t0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c1 THEN t0.c1 END IN ())) IS TRUE)  as count FROM v0, t0, vt0, vt2);
SELECT ALL * FROM v0, t0, vt0, vt2 WHERE ((CASE WHEN t0.c1 THEN t0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c1 THEN t0.c1 END IN ())) IS TRUE)  as count FROM v0, t0, vt0, vt2);
SELECT ALL * FROM v0, t0, vt0, vt2 WHERE ((CASE WHEN t0.c1 THEN t0.c1 END IN ()));
SELECT COUNT(*) FROM vt0, vt2 FULL OUTER JOIN v0 ON (((((x''))<=((vt2.lid)))) BETWEEN (vt2.c0) AND (CASE WHEN vt2.c1 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c2 THEN vt0.c0 WHEN vt2.c2 THEN vt0.c0 WHEN vt2.c3 THEN vt0.c0 END)) WHERE (CAST(CASE WHEN v0.c0 THEN vt0.c0 END AS INTEGER)) ORDER BY ((LIKELY(vt0.c0)) IS FALSE) ASC  NULLS FIRST, vt2.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c0 THEN vt0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0, vt2 FULL OUTER JOIN v0 ON (((((x''))<=((vt2.lid)))) BETWEEN (vt2.c0) AND (CASE WHEN vt2.c1 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c2 THEN vt0.c0 WHEN vt2.c2 THEN vt0.c0 WHEN vt2.c3 THEN vt0.c0 END)) ORDER BY ((LIKELY(vt0.c0)) IS FALSE) ASC  NULLS FIRST, vt2.c0);
SELECT COUNT(*) FROM vt0, vt2 FULL OUTER JOIN v0 ON (((((x''))<=((vt2.lid)))) BETWEEN (vt2.c0) AND (CASE WHEN vt2.c1 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c2 THEN vt0.c0 WHEN vt2.c2 THEN vt0.c0 WHEN vt2.c3 THEN vt0.c0 END)) WHERE (CAST(CASE WHEN v0.c0 THEN vt0.c0 END AS INTEGER)) ORDER BY ((LIKELY(vt0.c0)) IS FALSE) ASC  NULLS FIRST, vt2.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c0 THEN vt0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0, vt2 FULL OUTER JOIN v0 ON (((((x''))<=((vt2.lid)))) BETWEEN (vt2.c0) AND (CASE WHEN vt2.c1 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c2 THEN vt0.c0 WHEN vt2.c2 THEN vt0.c0 WHEN vt2.c3 THEN vt0.c0 END)) ORDER BY ((LIKELY(vt0.c0)) IS FALSE) ASC  NULLS FIRST, vt2.c0);
SELECT COUNT(*) FROM vt0, vt2 FULL OUTER JOIN v0 ON (((((x''))<=((vt2.lid)))) BETWEEN (vt2.c0) AND (CASE WHEN vt2.c1 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c2 THEN vt0.c0 WHEN vt2.c2 THEN vt0.c0 WHEN vt2.c3 THEN vt0.c0 END)) WHERE (CAST(CASE WHEN v0.c0 THEN vt0.c0 END AS INTEGER)) ORDER BY ((LIKELY(vt0.c0)) IS FALSE) ASC  NULLS FIRST, vt2.c0;
SELECT * FROM vt2 WHERE ((((+ (vt2.c2)))>(UPPER(vt2.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt2.c2)))>(UPPER(vt2.c2)))) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE ((((+ (vt2.c2)))>(UPPER(vt2.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt2.c2)))>(UPPER(vt2.c2)))) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE ((((+ (vt2.c2)))>(UPPER(vt2.c2))));
SELECT ALL COUNT(*) FROM vt2 LEFT OUTER JOIN t0 ON ((CAST(vt2.c2 AS BLOB)) IS TRUE) RIGHT OUTER JOIN v0 ON (((+ (t0.c1)))||(((v0.c0) IS TRUE))) CROSS JOIN vt0 ON '' WHERE (((CAST(t0.c48 AS NUMERIC))LIKE((((x'fa02'))=((t0.c48))))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c48 AS NUMERIC))LIKE((((x'fa02'))=((t0.c48)))))) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN t0 ON ((CAST(vt2.c2 AS BLOB)) IS TRUE) RIGHT OUTER JOIN v0 ON (((+ (t0.c1)))||(((v0.c0) IS TRUE))) CROSS JOIN vt0 ON '');
SELECT ALL COUNT(*) FROM vt2 LEFT OUTER JOIN t0 ON ((CAST(vt2.c2 AS BLOB)) IS TRUE) RIGHT OUTER JOIN v0 ON (((+ (t0.c1)))||(((v0.c0) IS TRUE))) CROSS JOIN vt0 ON '' WHERE (((CAST(t0.c48 AS NUMERIC))LIKE((((x'fa02'))=((t0.c48))))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c48 AS NUMERIC))LIKE((((x'fa02'))=((t0.c48)))))) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN t0 ON ((CAST(vt2.c2 AS BLOB)) IS TRUE) RIGHT OUTER JOIN v0 ON (((+ (t0.c1)))||(((v0.c0) IS TRUE))) CROSS JOIN vt0 ON '');
SELECT ALL COUNT(*) FROM vt2 LEFT OUTER JOIN t0 ON ((CAST(vt2.c2 AS BLOB)) IS TRUE) RIGHT OUTER JOIN v0 ON (((+ (t0.c1)))||(((v0.c0) IS TRUE))) CROSS JOIN vt0 ON '' WHERE (((CAST(t0.c48 AS NUMERIC))LIKE((((x'fa02'))=((t0.c48))))));
SELECT COUNT(*) FROM v0, t0 WHERE (NULL COLLATE BINARY) ORDER BY (((t0.c17))<>((t0.c17 COLLATE NOCASE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c17))<>((t0.c17 COLLATE NOCASE))) ASC);
SELECT COUNT(*) FROM v0, t0 WHERE (NULL COLLATE BINARY) ORDER BY (((t0.c17))<>((t0.c17 COLLATE NOCASE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c17))<>((t0.c17 COLLATE NOCASE))) ASC);
SELECT COUNT(*) FROM v0, t0 WHERE (NULL COLLATE BINARY) ORDER BY (((t0.c17))<>((t0.c17 COLLATE NOCASE))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE)) ORDER BY (load_extension(vt0.c0) IN ((~ (vt0.c0)), ((vt0.c0)!=(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (load_extension(vt0.c0) IN ((~ (vt0.c0)), ((vt0.c0)<>(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE)) ORDER BY (load_extension(vt0.c0) IN ((~ (vt0.c0)), ((vt0.c0)!=(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (load_extension(vt0.c0) IN ((~ (vt0.c0)), ((vt0.c0)<>(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt2 WHERE (((((((vt2.c1)AND(vt2.lid)))AND(vt2.c1))) BETWEEN (vt2.lid COLLATE RTRIM) AND ((('1069735336')<<(vt2.lid)))));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c1)AND(vt2.lid)))AND(vt2.c1))) BETWEEN (vt2.lid COLLATE RTRIM) AND ((('1069735336')<<(vt2.lid))))) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (((((((vt2.c1)AND(vt2.lid)))AND(vt2.c1))) BETWEEN (vt2.lid COLLATE RTRIM) AND ((('1069735336')<<(vt2.lid)))));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c1)AND(vt2.lid)))AND(vt2.c1))) BETWEEN (vt2.lid COLLATE RTRIM) AND ((('1069735336')<<(vt2.lid))))) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (((((((vt2.c1)AND(vt2.lid)))AND(vt2.c1))) BETWEEN (vt2.lid COLLATE RTRIM) AND ((('1069735336')<<(vt2.lid)))));
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((load_extension(t0.c48, v0.c0))AND(0.6507495130533664))) ORDER BY NULL ASC  NULLS LAST, (- ((- (t0.c48))));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(t0.c48, v0.c0))AND(0.6507495130533664))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY NULL ASC  NULLS LAST, (- ((- (t0.c48)))));
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((load_extension(t0.c48, v0.c0))AND(0.6507495130533664))) ORDER BY NULL ASC  NULLS LAST, (- ((- (t0.c48))));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(t0.c48, v0.c0))AND(0.6507495130533664))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY NULL ASC  NULLS LAST, (- ((- (t0.c48)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (NULL COLLATE NOCASE))) ORDER BY vt0.c0 COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (NULL COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (NULL COLLATE NOCASE))) ORDER BY vt0.c0 COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (NULL COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (NULL COLLATE NOCASE))) ORDER BY vt0.c0 COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL * FROM v0, vt2 WHERE (TRIM(DISTINCT v0.c0, vt2.c1) COLLATE RTRIM COLLATE BINARY) ORDER BY (((vt2.lid, vt2.c2, vt2.c2))=((-2052030816, vt2.lid, v0.c0))) COLLATE NOCASE  NULLS LAST, ((((CAST(vt2.c3 AS INTEGER))OR((- (vt2.lid)))))OR(vt2.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT v0.c0, vt2.c1) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM v0, vt2 ORDER BY (((vt2.lid, vt2.c2, vt2.c2))=((-2052030816, vt2.lid, v0.c0))) COLLATE NOCASE  NULLS LAST, ((((CAST(vt2.c3 AS INTEGER))OR((- (vt2.lid)))))OR(vt2.c2))  NULLS LAST);
SELECT ALL * FROM v0, vt2 WHERE (TRIM(DISTINCT v0.c0, vt2.c1) COLLATE RTRIM COLLATE BINARY) ORDER BY (((vt2.lid, vt2.c2, vt2.c2))=((-2052030816, vt2.lid, v0.c0))) COLLATE NOCASE  NULLS LAST, ((((CAST(vt2.c3 AS INTEGER))OR((- (vt2.lid)))))OR(vt2.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT v0.c0, vt2.c1) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM v0, vt2 ORDER BY (((vt2.lid, vt2.c2, vt2.c2))=((-2052030816, vt2.lid, v0.c0))) COLLATE NOCASE  NULLS LAST, ((((CAST(vt2.c3 AS INTEGER))OR((- (vt2.lid)))))OR(vt2.c2))  NULLS LAST);
SELECT ALL * FROM v0, vt2 WHERE (TRIM(DISTINCT v0.c0, vt2.c1) COLLATE RTRIM COLLATE BINARY) ORDER BY (((vt2.lid, vt2.c2, vt2.c2))=((-2052030816, vt2.lid, v0.c0))) COLLATE NOCASE  NULLS LAST, ((((CAST(vt2.c3 AS INTEGER))OR((- (vt2.lid)))))OR(vt2.c2))  NULLS LAST;
SELECT * FROM vt2 WHERE (CASE WHEN (+ (vt2.c1)) THEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c3)) END) ORDER BY '0.5616618893274352' COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (vt2.c1)) THEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c3)) END) IS TRUE)  as count FROM vt2 ORDER BY '0.5616618893274352' COLLATE BINARY ASC);
SELECT * FROM vt2 WHERE (CASE WHEN (+ (vt2.c1)) THEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c3)) END) ORDER BY '0.5616618893274352' COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (vt2.c1)) THEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c3)) END) IS TRUE)  as count FROM vt2 ORDER BY '0.5616618893274352' COLLATE BINARY ASC);
SELECT * FROM vt2 WHERE (CASE WHEN (+ (vt2.c1)) THEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c3)) END) ORDER BY '0.5616618893274352' COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM vt2 WHERE (0.36701442150388575);
SELECT SUM(count) FROM (SELECT ALL ((0.36701442150388575) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (0.36701442150388575);
SELECT SUM(count) FROM (SELECT ALL ((0.36701442150388575) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (0.36701442150388575);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)||(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN (- (vt0.c0)) THEN ((vt0.c0)!=(vt0.c0)) WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND (('806757117'))) END) ORDER BY CAST(vt0.c0 AS TEXT);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)||(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN (- (vt0.c0)) THEN ((vt0.c0)<>(vt0.c0)) WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND (('806757117'))) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS TEXT));
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)||(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN (- (vt0.c0)) THEN ((vt0.c0)!=(vt0.c0)) WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND (('806757117'))) END) ORDER BY CAST(vt0.c0 AS TEXT);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)||(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN (- (vt0.c0)) THEN ((vt0.c0)<>(vt0.c0)) WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND (('806757117'))) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS TEXT));
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)||(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN (- (vt0.c0)) THEN ((vt0.c0)!=(vt0.c0)) WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND (('806757117'))) END) ORDER BY CAST(vt0.c0 AS TEXT);
SELECT ALL COUNT(*) FROM vt2, t0 WHERE (((SQLITE_SOURCE_ID())<(((vt2.lid) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID())<(((vt2.lid) NOT NULL)))) IS TRUE)  as count FROM vt2, t0);
SELECT ALL COUNT(*) FROM vt2, t0 WHERE (((SQLITE_SOURCE_ID())<(((vt2.lid) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID())<(((vt2.lid) NOT NULL)))) IS TRUE)  as count FROM vt2, t0);
SELECT ALL COUNT(*) FROM vt2, t0 WHERE (((SQLITE_SOURCE_ID())<(((vt2.lid) NOT NULL))));
SELECT COUNT(*) FROM t0 WHERE ((((((((((((t0.c0))<>((t0.c17))))AND(t0.c17)))AND(((t0.c48)OR(t0.c0)))))OR(TYPEOF(x''))))OR(((t0.c0)||(t0.c48))))) ORDER BY CASE WHEN ((t0.c17)>(t0.c48)) THEN NULL END, (+ (((t0.c17) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c0))!=((t0.c17))))AND(t0.c17)))AND(((t0.c48)OR(t0.c0)))))OR(TYPEOF(x''))))OR(((t0.c0)||(t0.c48))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c17)>(t0.c48)) THEN NULL END, (+ (((t0.c17) NOT NULL))));
SELECT COUNT(*) FROM t0 WHERE ((((((((((((t0.c0))<>((t0.c17))))AND(t0.c17)))AND(((t0.c48)OR(t0.c0)))))OR(TYPEOF(x''))))OR(((t0.c0)||(t0.c48))))) ORDER BY CASE WHEN ((t0.c17)>(t0.c48)) THEN NULL END, (+ (((t0.c17) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c0))!=((t0.c17))))AND(t0.c17)))AND(((t0.c48)OR(t0.c0)))))OR(TYPEOF(x''))))OR(((t0.c0)||(t0.c48))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c17)>(t0.c48)) THEN NULL END, (+ (((t0.c17) NOT NULL))));
SELECT COUNT(*) FROM t0 WHERE ((((((((((((t0.c0))<>((t0.c17))))AND(t0.c17)))AND(((t0.c48)OR(t0.c0)))))OR(TYPEOF(x''))))OR(((t0.c0)||(t0.c48))))) ORDER BY CASE WHEN ((t0.c17)>(t0.c48)) THEN NULL END, (+ (((t0.c17) NOT NULL)));
SELECT ALL * FROM vt2, vt0, t0, v0 WHERE (((((t0.c48)>(t0.c17)))>((((v0.c0))>=((t0.c48))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c48)>(t0.c17)))>((((v0.c0))>=((t0.c48)))))) IS TRUE)  as count FROM vt2, vt0, t0, v0);
SELECT ALL * FROM vt2, vt0, t0, v0 WHERE (((((t0.c48)>(t0.c17)))>((((v0.c0))>=((t0.c48))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c48)>(t0.c17)))>((((v0.c0))>=((t0.c48)))))) IS TRUE)  as count FROM vt2, vt0, t0, v0);
SELECT ALL * FROM vt2, vt0, t0, v0 WHERE (((((t0.c48)>(t0.c17)))>((((v0.c0))>=((t0.c48))))));
SELECT ALL * FROM t0, v0, vt2, vt0 WHERE ((~ (t0.c17)));
SELECT SUM(count) FROM (SELECT (((~ (t0.c17))) IS TRUE)  as count FROM t0, v0, vt2, vt0);
SELECT ALL * FROM t0, v0, vt2, vt0 WHERE ((~ (t0.c17)));
SELECT SUM(count) FROM (SELECT (((~ (t0.c17))) IS TRUE)  as count FROM t0, v0, vt2, vt0);
SELECT ALL * FROM t0, v0, vt2, vt0 WHERE ((~ (t0.c17)));
SELECT * FROM vt2 WHERE ((((CASE vt2.lid  WHEN vt2.c2 THEN vt2.c3 WHEN vt2.c2 THEN vt2.c2 WHEN 811514432 THEN vt2.lid END))<=((((((vt2.c2)OR(vt2.c2)))OR(vt2.c1))))));
SELECT SUM(count) FROM (SELECT (((((CASE vt2.lid  WHEN vt2.c2 THEN vt2.c3 WHEN vt2.c2 THEN vt2.c2 WHEN 811514432 THEN vt2.lid END))<=((((((vt2.c2)OR(vt2.c2)))OR(vt2.c1)))))) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE ((((CASE vt2.lid  WHEN vt2.c2 THEN vt2.c3 WHEN vt2.c2 THEN vt2.c2 WHEN 811514432 THEN vt2.lid END))<=((((((vt2.c2)OR(vt2.c2)))OR(vt2.c1))))));
SELECT SUM(count) FROM (SELECT (((((CASE vt2.lid  WHEN vt2.c2 THEN vt2.c3 WHEN vt2.c2 THEN vt2.c2 WHEN 811514432 THEN vt2.lid END))<=((((((vt2.c2)OR(vt2.c2)))OR(vt2.c1)))))) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE ((((CASE vt2.lid  WHEN vt2.c2 THEN vt2.c3 WHEN vt2.c2 THEN vt2.c2 WHEN 811514432 THEN vt2.lid END))<=((((((vt2.c2)OR(vt2.c2)))OR(vt2.c1))))));
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM v0, vt2 WHERE (((((vt2.c3) NOT BETWEEN (1269051609) AND (vt2.c0))) NOT BETWEEN (0Xffffffffd376b5dc) AND (((((v0.c0)OR(vt2.c2)))OR(x'9c0c'))))) ORDER BY CASE ((vt2.c0)IS NOT(v0.c0))  WHEN CAST('' AS BLOB) THEN CASE WHEN vt2.c2 THEN vt2.c2 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c3) NOT BETWEEN (1269051609) AND (vt2.c0))) NOT BETWEEN (0xffffffffd376b5dc) AND (((((v0.c0)OR(vt2.c2)))OR(x'9c0c'))))) IS TRUE)  as count FROM v0, vt2 ORDER BY CASE ((vt2.c0)IS NOT(v0.c0))  WHEN CAST('' AS BLOB) THEN CASE WHEN vt2.c2 THEN vt2.c2 END END DESC);
SELECT COUNT(*) FROM v0, vt2 WHERE (((((vt2.c3) NOT BETWEEN (1269051609) AND (vt2.c0))) NOT BETWEEN (0Xffffffffd376b5dc) AND (((((v0.c0)OR(vt2.c2)))OR(x'9c0c'))))) ORDER BY CASE ((vt2.c0)IS NOT(v0.c0))  WHEN CAST('' AS BLOB) THEN CASE WHEN vt2.c2 THEN vt2.c2 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c3) NOT BETWEEN (1269051609) AND (vt2.c0))) NOT BETWEEN (0xffffffffd376b5dc) AND (((((v0.c0)OR(vt2.c2)))OR(x'9c0c'))))) IS TRUE)  as count FROM v0, vt2 ORDER BY CASE ((vt2.c0)IS NOT(v0.c0))  WHEN CAST('' AS BLOB) THEN CASE WHEN vt2.c2 THEN vt2.c2 END END DESC);
SELECT COUNT(*) FROM v0, vt2 WHERE (((((vt2.c3) NOT BETWEEN (1269051609) AND (vt2.c0))) NOT BETWEEN (0Xffffffffd376b5dc) AND (((((v0.c0)OR(vt2.c2)))OR(x'9c0c'))))) ORDER BY CASE ((vt2.c0)IS NOT(v0.c0))  WHEN CAST('' AS BLOB) THEN CASE WHEN vt2.c2 THEN vt2.c2 END END DESC;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(t0.c1 AS NUMERIC) COLLATE RTRIM) ORDER BY (((- (t0.c48)))OR((((t0.c17, v0.c0, t0.c0))>((t0.c1, t0.c48, t0.c48))))) DESC  NULLS LAST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c1 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0 ORDER BY (((- (t0.c48)))OR((((t0.c17, v0.c0, t0.c0))>((t0.c1, t0.c48, t0.c48))))) DESC  NULLS LAST, NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(t0.c1 AS NUMERIC) COLLATE RTRIM) ORDER BY (((- (t0.c48)))OR((((t0.c17, v0.c0, t0.c0))>((t0.c1, t0.c48, t0.c48))))) DESC  NULLS LAST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c1 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0 ORDER BY (((- (t0.c48)))OR((((t0.c17, v0.c0, t0.c0))>((t0.c1, t0.c48, t0.c48))))) DESC  NULLS LAST, NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(t0.c1 AS NUMERIC) COLLATE RTRIM) ORDER BY (((- (t0.c48)))OR((((t0.c17, v0.c0, t0.c0))>((t0.c1, t0.c48, t0.c48))))) DESC  NULLS LAST, NULL  NULLS FIRST;
SELECT ALL * FROM v0, vt0, t0, vt2 WHERE ((((vt2.lid IN ())) NOT NULL)) ORDER BY CAST(vt2.c0 AS INTEGER) COLLATE RTRIM  NULLS FIRST, ((((vt2.c2, 0.03235832353545631, vt2.c0)) BETWEEN ((vt2.lid, t0.c48, vt2.c0)) AND ((t0.c48, t0.c17, t0.c48))) IN ()) ASC, CAST(((vt0.c0) NOT NULL) AS BLOB)  NULLS FIRST, ((CAST(t0.c48 AS INTEGER)) BETWEEN (((('-2052030816'))<=(('䥎0P8L	[zd')))) AND (((vt2.c3) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt2.lid IN ())) NOT NULL)) IS TRUE)  as count FROM v0, vt0, t0, vt2 ORDER BY CAST(vt2.c0 AS INTEGER) COLLATE RTRIM  NULLS FIRST, ((((vt2.c2, 0.03235832353545631, vt2.c0)) BETWEEN ((vt2.lid, t0.c48, vt2.c0)) AND ((t0.c48, t0.c17, t0.c48))) IN ()) ASC, CAST(((vt0.c0) NOT NULL) AS BLOB)  NULLS FIRST, ((CAST(t0.c48 AS INTEGER)) BETWEEN (((('-2052030816'))<=(('䥎0P8L	[zd')))) AND (((vt2.c3) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM v0, vt0, t0, vt2 WHERE ((((vt2.lid IN ())) NOT NULL)) ORDER BY CAST(vt2.c0 AS INTEGER) COLLATE RTRIM  NULLS FIRST, ((((vt2.c2, 0.03235832353545631, vt2.c0)) BETWEEN ((vt2.lid, t0.c48, vt2.c0)) AND ((t0.c48, t0.c17, t0.c48))) IN ()) ASC, CAST(((vt0.c0) NOT NULL) AS BLOB)  NULLS FIRST, ((CAST(t0.c48 AS INTEGER)) BETWEEN (((('-2052030816'))<=(('䥎0P8L	[zd')))) AND (((vt2.c3) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt2.lid IN ())) NOT NULL)) IS TRUE)  as count FROM v0, vt0, t0, vt2 ORDER BY CAST(vt2.c0 AS INTEGER) COLLATE RTRIM  NULLS FIRST, ((((vt2.c2, 0.03235832353545631, vt2.c0)) BETWEEN ((vt2.lid, t0.c48, vt2.c0)) AND ((t0.c48, t0.c17, t0.c48))) IN ()) ASC, CAST(((vt0.c0) NOT NULL) AS BLOB)  NULLS FIRST, ((CAST(t0.c48 AS INTEGER)) BETWEEN (((('-2052030816'))<=(('䥎0P8L	[zd')))) AND (((vt2.c3) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM v0, vt0, t0, vt2 WHERE ((((vt2.lid IN ())) NOT NULL)) ORDER BY CAST(vt2.c0 AS INTEGER) COLLATE RTRIM  NULLS FIRST, ((((vt2.c2, 0.03235832353545631, vt2.c0)) BETWEEN ((vt2.lid, t0.c48, vt2.c0)) AND ((t0.c48, t0.c17, t0.c48))) IN ()) ASC, CAST(((vt0.c0) NOT NULL) AS BLOB)  NULLS FIRST, ((CAST(t0.c48 AS INTEGER)) BETWEEN (((('-2052030816'))<=(('䥎0P8L	[zd')))) AND (((vt2.c3) IS FALSE)))  NULLS FIRST;
SELECT * FROM v0, vt0, vt2 LEFT OUTER JOIN t0 ON ((((x'') BETWEEN (t0.c17) AND (t0.c1))) NOTNULL) WHERE (((((vt2.lid) IS FALSE))LIKE(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.lid) IS FALSE))LIKE(t0.c1))) IS TRUE)  as count FROM v0, vt0, vt2 LEFT OUTER JOIN t0 ON ((((x'') BETWEEN (t0.c17) AND (t0.c1))) NOTNULL));
SELECT * FROM v0, vt0, vt2 LEFT OUTER JOIN t0 ON ((((x'') BETWEEN (t0.c17) AND (t0.c1))) NOTNULL) WHERE (((((vt2.lid) IS FALSE))LIKE(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.lid) IS FALSE))LIKE(t0.c1))) IS TRUE)  as count FROM v0, vt0, vt2 LEFT OUTER JOIN t0 ON ((((x'') BETWEEN (t0.c17) AND (t0.c1))) NOTNULL));
SELECT * FROM v0, vt0, vt2 LEFT OUTER JOIN t0 ON ((((x'') BETWEEN (t0.c17) AND (t0.c1))) NOTNULL) WHERE (((((vt2.lid) IS FALSE))LIKE(t0.c1)));
SELECT * FROM t0, vt2, v0 WHERE (((vt2.lid)+(vt2.c0)) COLLATE BINARY) ORDER BY ((vt2.c3 COLLATE NOCASE)|(CAST(vt2.lid AS BLOB))) DESC, ((((vt2.c2)>=(v0.c0))) BETWEEN (((t0.c0) NOT NULL)) AND (((vt2.c2) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt2.lid)+(vt2.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt2, v0 ORDER BY ((vt2.c3 COLLATE NOCASE)|(CAST(vt2.lid AS BLOB))) DESC, ((((vt2.c2)>=(v0.c0))) BETWEEN (((t0.c0) NOT NULL)) AND (((vt2.c2) ISNULL))) ASC  NULLS LAST);
SELECT * FROM t0, vt2, v0 WHERE (((vt2.lid)+(vt2.c0)) COLLATE BINARY) ORDER BY ((vt2.c3 COLLATE NOCASE)|(CAST(vt2.lid AS BLOB))) DESC, ((((vt2.c2)>=(v0.c0))) BETWEEN (((t0.c0) NOT NULL)) AND (((vt2.c2) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt2.lid)+(vt2.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt2, v0 ORDER BY ((vt2.c3 COLLATE NOCASE)|(CAST(vt2.lid AS BLOB))) DESC, ((((vt2.c2)>=(v0.c0))) BETWEEN (((t0.c0) NOT NULL)) AND (((vt2.c2) ISNULL))) ASC  NULLS LAST);
SELECT * FROM t0, vt2, v0 WHERE (((vt2.lid)+(vt2.c0)) COLLATE BINARY) ORDER BY ((vt2.c3 COLLATE NOCASE)|(CAST(vt2.lid AS BLOB))) DESC, ((((vt2.c2)>=(v0.c0))) BETWEEN (((t0.c0) NOT NULL)) AND (((vt2.c2) ISNULL))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt2, t0 FULL OUTER JOIN v0 ON NULL WHERE ((((' 禒') BETWEEN (vt2.lid) AND (v0.c0)) IN ((- (vt2.c2))))) ORDER BY UNLIKELY(DISTINCT CAST(t0.c1 AS NUMERIC)) DESC, CASE WHEN vt2.c3 THEN ((vt2.c3)>(t0.c17)) WHEN t0.c1 THEN CAST(vt2.c1 AS TEXT) WHEN 0.5353703936628235 THEN t0.c17 END, (((((x'1b52') IS TRUE)))==((CASE WHEN '%iJ뗜tj뿓-g' THEN vt2.lid END))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((' 禒') BETWEEN (vt2.lid) AND (v0.c0)) IN ((- (vt2.c2))))) IS TRUE)  as count FROM vt2, t0 FULL OUTER JOIN v0 ON NULL ORDER BY UNLIKELY(DISTINCT CAST(t0.c1 AS NUMERIC)) DESC, CASE WHEN vt2.c3 THEN ((vt2.c3)>(t0.c17)) WHEN t0.c1 THEN CAST(vt2.c1 AS TEXT) WHEN 0.5353703936628235 THEN t0.c17 END, (((((x'1b52') IS TRUE)))=((CASE WHEN '%iJ뗜tj뿓-g' THEN vt2.lid END))) DESC);
SELECT COUNT(*) FROM vt2, t0 FULL OUTER JOIN v0 ON NULL WHERE ((((' 禒') BETWEEN (vt2.lid) AND (v0.c0)) IN ((- (vt2.c2))))) ORDER BY UNLIKELY(DISTINCT CAST(t0.c1 AS NUMERIC)) DESC, CASE WHEN vt2.c3 THEN ((vt2.c3)>(t0.c17)) WHEN t0.c1 THEN CAST(vt2.c1 AS TEXT) WHEN 0.5353703936628235 THEN t0.c17 END, (((((x'1b52') IS TRUE)))==((CASE WHEN '%iJ뗜tj뿓-g' THEN vt2.lid END))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((' 禒') BETWEEN (vt2.lid) AND (v0.c0)) IN ((- (vt2.c2))))) IS TRUE)  as count FROM vt2, t0 FULL OUTER JOIN v0 ON NULL ORDER BY UNLIKELY(DISTINCT CAST(t0.c1 AS NUMERIC)) DESC, CASE WHEN vt2.c3 THEN ((vt2.c3)>(t0.c17)) WHEN t0.c1 THEN CAST(vt2.c1 AS TEXT) WHEN 0.5353703936628235 THEN t0.c17 END, (((((x'1b52') IS TRUE)))=((CASE WHEN '%iJ뗜tj뿓-g' THEN vt2.lid END))) DESC);
SELECT COUNT(*) FROM vt2, t0 FULL OUTER JOIN v0 ON NULL WHERE ((((' 禒') BETWEEN (vt2.lid) AND (v0.c0)) IN ((- (vt2.c2))))) ORDER BY UNLIKELY(DISTINCT CAST(t0.c1 AS NUMERIC)) DESC, CASE WHEN vt2.c3 THEN ((vt2.c3)>(t0.c17)) WHEN t0.c1 THEN CAST(vt2.c1 AS TEXT) WHEN 0.5353703936628235 THEN t0.c17 END, (((((x'1b52') IS TRUE)))==((CASE WHEN '%iJ뗜tj뿓-g' THEN vt2.lid END))) DESC;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((((((t0.c48)AND(v0.c0)))AND(t0.c0)))AND(v0.c0)))AND(t0.c48)))%(TRIM(DISTINCT t0.c48, t0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c48)AND(v0.c0)))AND(t0.c0)))AND(v0.c0)))AND(t0.c48)))%(TRIM(DISTINCT t0.c48, t0.c0)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((((((t0.c48)AND(v0.c0)))AND(t0.c0)))AND(v0.c0)))AND(t0.c48)))%(TRIM(DISTINCT t0.c48, t0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c48)AND(v0.c0)))AND(t0.c0)))AND(v0.c0)))AND(t0.c48)))%(TRIM(DISTINCT t0.c48, t0.c0)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((((((t0.c48)AND(v0.c0)))AND(t0.c0)))AND(v0.c0)))AND(t0.c48)))%(TRIM(DISTINCT t0.c48, t0.c0))));
SELECT COUNT(*) FROM v0, t0 WHERE (((((json_remove(t0.c48, NULL))OR(((v0.c0)==(t0.c48)))))AND(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((json_remove(t0.c48, NULL))OR(((v0.c0)==(t0.c48)))))AND(t0.c0))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((((json_remove(t0.c48, NULL))OR(((v0.c0)==(t0.c48)))))AND(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((json_remove(t0.c48, NULL))OR(((v0.c0)==(t0.c48)))))AND(t0.c0))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((((json_remove(t0.c48, NULL))OR(((v0.c0)==(t0.c48)))))AND(t0.c0)));
SELECT ALL COUNT(*) FROM vt2, t0, v0 WHERE (((((vt2.c0) NOT BETWEEN (t0.c17) AND (vt2.c0)))OR(CAST(v0.c0 AS BLOB)))) ORDER BY ((((CASE v0.c0  WHEN t0.c0 THEN vt2.c2 ELSE t0.c17 END)AND(CAST(t0.c1 AS NUMERIC))))AND(((((vt2.c3)AND(vt2.c3)))AND(t0.c48))));
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) NOT BETWEEN (t0.c17) AND (vt2.c0)))OR(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM vt2, t0, v0 ORDER BY ((((CASE v0.c0  WHEN t0.c0 THEN vt2.c2 ELSE t0.c17 END)AND(CAST(t0.c1 AS NUMERIC))))AND(((((vt2.c3)AND(vt2.c3)))AND(t0.c48)))));
SELECT ALL COUNT(*) FROM vt2, t0, v0 WHERE (((((vt2.c0) NOT BETWEEN (t0.c17) AND (vt2.c0)))OR(CAST(v0.c0 AS BLOB)))) ORDER BY ((((CASE v0.c0  WHEN t0.c0 THEN vt2.c2 ELSE t0.c17 END)AND(CAST(t0.c1 AS NUMERIC))))AND(((((vt2.c3)AND(vt2.c3)))AND(t0.c48))));
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) NOT BETWEEN (t0.c17) AND (vt2.c0)))OR(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM vt2, t0, v0 ORDER BY ((((CASE v0.c0  WHEN t0.c0 THEN vt2.c2 ELSE t0.c17 END)AND(CAST(t0.c1 AS NUMERIC))))AND(((((vt2.c3)AND(vt2.c3)))AND(t0.c48)))));
SELECT ALL COUNT(*) FROM vt2, t0, v0 WHERE (((((vt2.c0) NOT BETWEEN (t0.c17) AND (vt2.c0)))OR(CAST(v0.c0 AS BLOB)))) ORDER BY ((((CASE v0.c0  WHEN t0.c0 THEN vt2.c2 ELSE t0.c17 END)AND(CAST(t0.c1 AS NUMERIC))))AND(((((vt2.c3)AND(vt2.c3)))AND(t0.c48))));
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((CAST(0.1514981678393016 AS NUMERIC) IN (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((CAST(0.1514981678393016 AS NUMERIC) IN (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((CAST(0.1514981678393016 AS NUMERIC) IN (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((CAST(0.1514981678393016 AS NUMERIC) IN (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((CAST(0.1514981678393016 AS NUMERIC) IN (vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, vt2, t0, v0 WHERE (CASE t0.c48  WHEN 0X289d20bc THEN (+ ('7-')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c48  WHEN 0X289d20bc THEN (+ ('7-')) END) IS TRUE)  as count FROM vt0, vt2, t0, v0);
SELECT COUNT(*) FROM vt0, vt2, t0, v0 WHERE (CASE t0.c48  WHEN 0X289d20bc THEN (+ ('7-')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c48  WHEN 0X289d20bc THEN (+ ('7-')) END) IS TRUE)  as count FROM vt0, vt2, t0, v0);
SELECT COUNT(*) FROM vt0, vt2, t0, v0 WHERE (CASE t0.c48  WHEN 0X289d20bc THEN (+ ('7-')) END);
SELECT * FROM vt0, vt2, v0 WHERE (vt2.c3) ORDER BY ((8.11514432E8 IN ()) IN (((vt2.c2)==(vt2.c1)))) ASC, CAST(((('Qf'))<>((vt2.c0))) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt2.c3) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY ((8.11514432E8 IN ()) IN (((vt2.c2)==(vt2.c1)))) ASC, CAST(((('Qf'))<>((vt2.c0))) AS TEXT)  NULLS FIRST);
SELECT * FROM vt0, vt2, v0 WHERE (vt2.c3) ORDER BY ((8.11514432E8 IN ()) IN (((vt2.c2)==(vt2.c1)))) ASC, CAST(((('Qf'))<>((vt2.c0))) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt2.c3) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY ((8.11514432E8 IN ()) IN (((vt2.c2)==(vt2.c1)))) ASC, CAST(((('Qf'))<>((vt2.c0))) AS TEXT)  NULLS FIRST);
SELECT * FROM vt0, vt2, v0 WHERE (vt2.c3) ORDER BY ((8.11514432E8 IN ()) IN (((vt2.c2)==(vt2.c1)))) ASC, CAST(((('Qf'))<>((vt2.c0))) AS TEXT)  NULLS FIRST;
SELECT * FROM vt0, vt2, t0, v0 WHERE (((vt2.c2 IN ()) IN ())) ORDER BY (- (x'')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt2.c2 IN ()) IN ())) IS TRUE)  as count FROM vt0, vt2, t0, v0 ORDER BY (- (x'')) DESC  NULLS FIRST);
SELECT * FROM vt0, vt2, t0, v0 WHERE (((vt2.c2 IN ()) IN ())) ORDER BY (- (x'')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt2.c2 IN ()) IN ())) IS TRUE)  as count FROM vt0, vt2, t0, v0 ORDER BY (- (x'')) DESC  NULLS FIRST);
SELECT * FROM vt0, vt2, t0, v0 WHERE (((vt2.c2 IN ()) IN ())) ORDER BY (- (x'')) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt2, v0 WHERE ((((vt2.lid, vt2.lid, NULL)) BETWEEN (((vt2.c1 IN ()), (-1.462994542E9 IN ()), ((vt2.c1) NOTNULL))) AND (((vt0.c0 IN (vt2.c3, vt2.c1)), ((v0.c0) NOTNULL), NULL)))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt2.lid, vt2.lid, NULL)) BETWEEN (((vt2.c1 IN ()), (-1.462994542E9 IN ()), ((vt2.c1) NOTNULL))) AND (((vt0.c0 IN (vt2.c3, vt2.c1)), ((v0.c0) NOTNULL), NULL)))) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM vt0, vt2, v0 WHERE ((((vt2.lid, vt2.lid, NULL)) BETWEEN (((vt2.c1 IN ()), (-1.462994542E9 IN ()), ((vt2.c1) NOTNULL))) AND (((vt0.c0 IN (vt2.c3, vt2.c1)), ((v0.c0) NOTNULL), NULL)))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt2.lid, vt2.lid, NULL)) BETWEEN (((vt2.c1 IN ()), (-1.462994542E9 IN ()), ((vt2.c1) NOTNULL))) AND (((vt0.c0 IN (vt2.c3, vt2.c1)), ((v0.c0) NOTNULL), NULL)))) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM vt0, vt2, v0 WHERE ((((vt2.lid, vt2.lid, NULL)) BETWEEN (((vt2.c1 IN ()), (-1.462994542E9 IN ()), ((vt2.c1) NOTNULL))) AND (((vt0.c0 IN (vt2.c3, vt2.c1)), ((v0.c0) NOTNULL), NULL)))) ORDER BY NULL  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (x'');
SELECT ALL * FROM vt2, v0 FULL OUTER JOIN t0 ON ((((vt2.lid) BETWEEN (NULL) AND (vt2.c2))) BETWEEN (CAST(vt2.lid AS INTEGER)) AND (CASE vt2.c1  WHEN 'ya%r' THEN vt2.c1 END)) RIGHT OUTER JOIN vt0 ON CAST(v0.c0 COLLATE BINARY AS INTEGER) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt2, v0 FULL OUTER JOIN t0 ON ((((vt2.lid) BETWEEN (NULL) AND (vt2.c2))) BETWEEN (CAST(vt2.lid AS INTEGER)) AND (CASE vt2.c1  WHEN 'ya%r' THEN vt2.c1 END)) RIGHT OUTER JOIN vt0 ON CAST(v0.c0 COLLATE BINARY AS INTEGER));
SELECT ALL * FROM vt2, v0 FULL OUTER JOIN t0 ON ((((vt2.lid) BETWEEN (NULL) AND (vt2.c2))) BETWEEN (CAST(vt2.lid AS INTEGER)) AND (CASE vt2.c1  WHEN 'ya%r' THEN vt2.c1 END)) RIGHT OUTER JOIN vt0 ON CAST(v0.c0 COLLATE BINARY AS INTEGER) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt2, v0 FULL OUTER JOIN t0 ON ((((vt2.lid) BETWEEN (NULL) AND (vt2.c2))) BETWEEN (CAST(vt2.lid AS INTEGER)) AND (CASE vt2.c1  WHEN 'ya%r' THEN vt2.c1 END)) RIGHT OUTER JOIN vt0 ON CAST(v0.c0 COLLATE BINARY AS INTEGER));
SELECT ALL * FROM vt2, v0 FULL OUTER JOIN t0 ON ((((vt2.lid) BETWEEN (NULL) AND (vt2.c2))) BETWEEN (CAST(vt2.lid AS INTEGER)) AND (CASE vt2.c1  WHEN 'ya%r' THEN vt2.c1 END)) RIGHT OUTER JOIN vt0 ON CAST(v0.c0 COLLATE BINARY AS INTEGER) WHERE (NULL);
SELECT * FROM vt2, vt0, v0 WHERE (((x'')-(CAST(NULL AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((x'')-(CAST(NULL AS BLOB)))) IS TRUE)  as count FROM vt2, vt0, v0);
SELECT * FROM vt2, vt0, v0 WHERE (((x'')-(CAST(NULL AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((x'')-(CAST(NULL AS BLOB)))) IS TRUE)  as count FROM vt2, vt0, v0);
SELECT * FROM vt2, vt0, v0 WHERE (((x'')-(CAST(NULL AS BLOB))));
SELECT COUNT(*) FROM vt2, vt0, v0 WHERE (((((((vt2.c3) NOT BETWEEN (vt2.c2) AND (vt2.lid)))AND(((v0.c0) NOTNULL))))OR(((vt2.c2)|(vt2.lid)))));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c3) NOT BETWEEN (vt2.c2) AND (vt2.lid)))AND(((v0.c0) NOTNULL))))OR(((vt2.c2)|(vt2.lid))))) IS TRUE)  as count FROM vt2, vt0, v0);
SELECT COUNT(*) FROM vt2, vt0, v0 WHERE (((((((vt2.c3) NOT BETWEEN (vt2.c2) AND (vt2.lid)))AND(((v0.c0) NOTNULL))))OR(((vt2.c2)|(vt2.lid)))));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c3) NOT BETWEEN (vt2.c2) AND (vt2.lid)))AND(((v0.c0) NOTNULL))))OR(((vt2.c2)|(vt2.lid))))) IS TRUE)  as count FROM vt2, vt0, v0);
SELECT COUNT(*) FROM vt2, vt0, v0 WHERE (((((((vt2.c3) NOT BETWEEN (vt2.c2) AND (vt2.lid)))AND(((v0.c0) NOTNULL))))OR(((vt2.c2)|(vt2.lid)))));
SELECT COUNT(*) FROM vt2 WHERE (LIKELY(TIME(vt2.c0, 0.35759299925198096, vt2.c3))) ORDER BY (((((vt2.c1) ISNULL)))<=((((((((((vt2.c2)AND(481507277)))AND(vt2.c0)))OR(vt2.c3)))AND(x'')))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(TIME(vt2.c0, 0.35759299925198096, vt2.c3))) IS TRUE)  as count FROM vt2 ORDER BY (((((vt2.c1) ISNULL)))<=((((((((((vt2.c2)AND(481507277)))AND(vt2.c0)))OR(vt2.c3)))AND(x'')))))  NULLS FIRST);
SELECT COUNT(*) FROM vt2 WHERE (LIKELY(TIME(vt2.c0, 0.35759299925198096, vt2.c3))) ORDER BY (((((vt2.c1) ISNULL)))<=((((((((((vt2.c2)AND(481507277)))AND(vt2.c0)))OR(vt2.c3)))AND(x'')))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(TIME(vt2.c0, 0.35759299925198096, vt2.c3))) IS TRUE)  as count FROM vt2 ORDER BY (((((vt2.c1) ISNULL)))<=((((((((((vt2.c2)AND(481507277)))AND(vt2.c0)))OR(vt2.c3)))AND(x'')))))  NULLS FIRST);
SELECT COUNT(*) FROM vt2 WHERE (LIKELY(TIME(vt2.c0, 0.35759299925198096, vt2.c3))) ORDER BY (((((vt2.c1) ISNULL)))<=((((((((((vt2.c2)AND(481507277)))AND(vt2.c0)))OR(vt2.c3)))AND(x'')))))  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (TRIM(DISTINCT t0.c48 COLLATE NOCASE)) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT t0.c48 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, t0 ORDER BY x'' DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (TRIM(DISTINCT t0.c48 COLLATE NOCASE)) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT t0.c48 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, t0 ORDER BY x'' DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (TRIM(DISTINCT t0.c48 COLLATE NOCASE)) ORDER BY x'' DESC  NULLS LAST;
SELECT ALL * FROM vt0 INNER JOIN vt2 ON CASE WHEN ((vt2.lid) NOT BETWEEN (vt2.lid) AND (vt2.lid)) THEN ((((((((vt2.c2)AND(vt0.c0)))OR(vt2.c2)))OR(v0.c0)))OR(vt2.lid)) ELSE CASE vt0.c0  WHEN vt2.c2 THEN v0.c0 WHEN vt2.lid THEN vt2.c1 WHEN vt2.lid THEN vt2.c3 ELSE vt2.c2 END END INNER JOIN v0 ON ((NULL)OR(CAST(vt2.c1 AS INTEGER))) WHERE (((((vt2.c2)) NOT BETWEEN ((vt2.c1)) AND ((v0.c0))) IN ())) ORDER BY '-1527621771'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt2.c2)) NOT BETWEEN ((vt2.c1)) AND ((v0.c0))) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN vt2 ON CASE WHEN ((vt2.lid) NOT BETWEEN (vt2.lid) AND (vt2.lid)) THEN ((((((((vt2.c2)AND(vt0.c0)))OR(vt2.c2)))OR(v0.c0)))OR(vt2.lid)) ELSE CASE vt0.c0  WHEN vt2.c2 THEN v0.c0 WHEN vt2.lid THEN vt2.c1 WHEN vt2.lid THEN vt2.c3 ELSE vt2.c2 END END INNER JOIN v0 ON ((NULL)OR(CAST(vt2.c1 AS INTEGER))) ORDER BY '-1527621771'  NULLS LAST);
SELECT ALL * FROM vt0 INNER JOIN vt2 ON CASE WHEN ((vt2.lid) NOT BETWEEN (vt2.lid) AND (vt2.lid)) THEN ((((((((vt2.c2)AND(vt0.c0)))OR(vt2.c2)))OR(v0.c0)))OR(vt2.lid)) ELSE CASE vt0.c0  WHEN vt2.c2 THEN v0.c0 WHEN vt2.lid THEN vt2.c1 WHEN vt2.lid THEN vt2.c3 ELSE vt2.c2 END END INNER JOIN v0 ON ((NULL)OR(CAST(vt2.c1 AS INTEGER))) WHERE (((((vt2.c2)) NOT BETWEEN ((vt2.c1)) AND ((v0.c0))) IN ())) ORDER BY '-1527621771'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt2.c2)) NOT BETWEEN ((vt2.c1)) AND ((v0.c0))) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN vt2 ON CASE WHEN ((vt2.lid) NOT BETWEEN (vt2.lid) AND (vt2.lid)) THEN ((((((((vt2.c2)AND(vt0.c0)))OR(vt2.c2)))OR(v0.c0)))OR(vt2.lid)) ELSE CASE vt0.c0  WHEN vt2.c2 THEN v0.c0 WHEN vt2.lid THEN vt2.c1 WHEN vt2.lid THEN vt2.c3 ELSE vt2.c2 END END INNER JOIN v0 ON ((NULL)OR(CAST(vt2.c1 AS INTEGER))) ORDER BY '-1527621771'  NULLS LAST);
SELECT ALL * FROM vt0 INNER JOIN vt2 ON CASE WHEN ((vt2.lid) NOT BETWEEN (vt2.lid) AND (vt2.lid)) THEN ((((((((vt2.c2)AND(vt0.c0)))OR(vt2.c2)))OR(v0.c0)))OR(vt2.lid)) ELSE CASE vt0.c0  WHEN vt2.c2 THEN v0.c0 WHEN vt2.lid THEN vt2.c1 WHEN vt2.lid THEN vt2.c3 ELSE vt2.c2 END END INNER JOIN v0 ON ((NULL)OR(CAST(vt2.c1 AS INTEGER))) WHERE (((((vt2.c2)) NOT BETWEEN ((vt2.c1)) AND ((v0.c0))) IN ())) ORDER BY '-1527621771'  NULLS LAST;
SELECT * FROM vt2, vt0, v0, t0 WHERE ((((vt2.c3)&(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c3)&(v0.c0)) IN ())) IS TRUE)  as count FROM vt2, vt0, v0, t0);
SELECT * FROM vt2, vt0, v0, t0 WHERE ((((vt2.c3)&(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c3)&(v0.c0)) IN ())) IS TRUE)  as count FROM vt2, vt0, v0, t0);
SELECT * FROM vt2, vt0, v0, t0 WHERE ((((vt2.c3)&(v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt2, v0 WHERE ((TRIM(vt2.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((TRIM(vt2.c2) IN ())) IS TRUE)  as count FROM vt2, v0);
SELECT ALL COUNT(*) FROM vt2, v0 WHERE ((TRIM(vt2.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((TRIM(vt2.c2) IN ())) IS TRUE)  as count FROM vt2, v0);
SELECT ALL COUNT(*) FROM vt2, v0 WHERE ((TRIM(vt2.c2) IN ()));
SELECT COUNT(*) FROM t0, vt2 WHERE (CASE WHEN t0.c48 THEN vt2.lid WHEN vt2.c0 THEN vt2.c3 WHEN t0.c0 THEN '811514432' ELSE vt2.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c48 THEN vt2.lid WHEN vt2.c0 THEN vt2.c3 WHEN t0.c0 THEN '811514432' ELSE vt2.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t0, vt2);
SELECT COUNT(*) FROM t0, vt2 WHERE (CASE WHEN t0.c48 THEN vt2.lid WHEN vt2.c0 THEN vt2.c3 WHEN t0.c0 THEN '811514432' ELSE vt2.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c48 THEN vt2.lid WHEN vt2.c0 THEN vt2.c3 WHEN t0.c0 THEN '811514432' ELSE vt2.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t0, vt2);
SELECT COUNT(*) FROM t0, vt2 WHERE (CASE WHEN t0.c48 THEN vt2.lid WHEN vt2.c0 THEN vt2.c3 WHEN t0.c0 THEN '811514432' ELSE vt2.c0 END COLLATE RTRIM);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON QUOTE(((((t0.c0)AND(t0.c0)))AND('2097146857'))) FULL OUTER JOIN vt0 ON ((((((t0.c17)OR(t0.c1)))OR(v0.c0)))=(x'')) WHERE (0.7353768113152723) ORDER BY 1191785581 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7353768113152723) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON QUOTE(((((t0.c0)AND(t0.c0)))AND('2097146857'))) FULL OUTER JOIN vt0 ON ((((((t0.c17)OR(t0.c1)))OR(v0.c0)))=(x'')) ORDER BY 1191785581 ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON QUOTE(((((t0.c0)AND(t0.c0)))AND('2097146857'))) FULL OUTER JOIN vt0 ON ((((((t0.c17)OR(t0.c1)))OR(v0.c0)))=(x'')) WHERE (0.7353768113152723) ORDER BY 1191785581 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7353768113152723) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON QUOTE(((((t0.c0)AND(t0.c0)))AND('2097146857'))) FULL OUTER JOIN vt0 ON ((((((t0.c17)OR(t0.c1)))OR(v0.c0)))=(x'')) ORDER BY 1191785581 ASC  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (CASE WHEN (NOT (t0.c1)) THEN (t0.c48 IN (t0.c1, t0.c0)) END) ORDER BY t0.c48 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (t0.c1)) THEN (t0.c48 IN (t0.c1, t0.c0)) END) IS TRUE)  as count FROM t0, v0 ORDER BY t0.c48 ASC  NULLS FIRST);
SELECT ALL * FROM t0, v0 WHERE (CASE WHEN (NOT (t0.c1)) THEN (t0.c48 IN (t0.c1, t0.c0)) END) ORDER BY t0.c48 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (t0.c1)) THEN (t0.c48 IN (t0.c1, t0.c0)) END) IS TRUE)  as count FROM t0, v0 ORDER BY t0.c48 ASC  NULLS FIRST);
SELECT ALL * FROM t0, v0 WHERE (CASE WHEN (NOT (t0.c1)) THEN (t0.c48 IN (t0.c1, t0.c0)) END) ORDER BY t0.c48 ASC  NULLS FIRST;
SELECT * FROM t0, vt2, v0, vt0 WHERE (ABS(DISTINCT CAST(vt2.c1 AS REAL))) ORDER BY CASE WHEN (((vt2.c0))>((vt2.c3))) THEN CAST(vt0.c0 AS TEXT) WHEN ((-345640739)IS(vt2.c2)) THEN t0.c48 WHEN HEX(DISTINCT vt2.c1) THEN ((t0.c1) NOT BETWEEN (x'') AND (vt2.lid)) ELSE ((t0.c17) BETWEEN (NULL) AND (vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT CAST(vt2.c1 AS REAL))) IS TRUE)  as count FROM t0, vt2, v0, vt0 ORDER BY CASE WHEN (((vt2.c0))>((vt2.c3))) THEN CAST(vt0.c0 AS TEXT) WHEN ((-345640739)IS(vt2.c2)) THEN t0.c48 WHEN HEX(DISTINCT vt2.c1) THEN ((t0.c1) NOT BETWEEN (x'') AND (vt2.lid)) ELSE ((t0.c17) BETWEEN (NULL) AND (vt0.c0)) END DESC  NULLS LAST);
SELECT * FROM t0, vt2, v0, vt0 WHERE (ABS(DISTINCT CAST(vt2.c1 AS REAL))) ORDER BY CASE WHEN (((vt2.c0))>((vt2.c3))) THEN CAST(vt0.c0 AS TEXT) WHEN ((-345640739)IS(vt2.c2)) THEN t0.c48 WHEN HEX(DISTINCT vt2.c1) THEN ((t0.c1) NOT BETWEEN (x'') AND (vt2.lid)) ELSE ((t0.c17) BETWEEN (NULL) AND (vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT CAST(vt2.c1 AS REAL))) IS TRUE)  as count FROM t0, vt2, v0, vt0 ORDER BY CASE WHEN (((vt2.c0))>((vt2.c3))) THEN CAST(vt0.c0 AS TEXT) WHEN ((-345640739)IS(vt2.c2)) THEN t0.c48 WHEN HEX(DISTINCT vt2.c1) THEN ((t0.c1) NOT BETWEEN (x'') AND (vt2.lid)) ELSE ((t0.c17) BETWEEN (NULL) AND (vt0.c0)) END DESC  NULLS LAST);
SELECT * FROM t0, vt2, v0, vt0 WHERE (ABS(DISTINCT CAST(vt2.c1 AS REAL))) ORDER BY CASE WHEN (((vt2.c0))>((vt2.c3))) THEN CAST(vt0.c0 AS TEXT) WHEN ((-345640739)IS(vt2.c2)) THEN t0.c48 WHEN HEX(DISTINCT vt2.c1) THEN ((t0.c1) NOT BETWEEN (x'') AND (vt2.lid)) ELSE ((t0.c17) BETWEEN (NULL) AND (vt0.c0)) END DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0 COLLATE RTRIM) IS FALSE));
SELECT COUNT(*) FROM vt2 INNER JOIN t0 ON ((((((((((t0.c0)&(t0.c48)))OR(SQLITE_VERSION())))AND(((vt2.c1)!=(t0.c48)))))OR((((vt2.c3)) NOT BETWEEN ((vt2.lid)) AND ((vt2.c3))))))AND(('~T' IN (t0.c0)))) WHERE (MIN(x'', (((t0.c48, 'Qf', t0.c17))>=((vt2.c1, x'', t0.c0))), (NOT (t0.c0)), t0.c0)) ORDER BY (((((t0.c17)OR(t0.c1)))AND(vt2.c0)) IN ()) ASC  NULLS LAST, ((CASE vt2.c1  WHEN t0.c17 THEN t0.c17 WHEN vt2.lid THEN 0.6037030964902661 WHEN t0.c17 THEN 0.7813529461103645 END)&((~ (t0.c17)))) ASC  NULLS LAST, 0X4a82d2e9 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((MIN(x'', (((t0.c48, 'Qf', t0.c17))>=((vt2.c1, x'', t0.c0))), (NOT (t0.c0)), t0.c0)) IS TRUE)  as count FROM vt2 INNER JOIN t0 ON ((((((((((t0.c0)&(t0.c48)))OR(SQLITE_VERSION())))AND(((vt2.c1)<>(t0.c48)))))OR((((vt2.c3)) NOT BETWEEN ((vt2.lid)) AND ((vt2.c3))))))AND(('~T' IN (t0.c0)))) ORDER BY (((((t0.c17)OR(t0.c1)))AND(vt2.c0)) IN ()) ASC  NULLS LAST, ((CASE vt2.c1  WHEN t0.c17 THEN t0.c17 WHEN vt2.lid THEN 0.6037030964902661 WHEN t0.c17 THEN 0.7813529461103645 END)&((~ (t0.c17)))) ASC  NULLS LAST, 0X4a82d2e9 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt2 INNER JOIN t0 ON ((((((((((t0.c0)&(t0.c48)))OR(SQLITE_VERSION())))AND(((vt2.c1)!=(t0.c48)))))OR((((vt2.c3)) NOT BETWEEN ((vt2.lid)) AND ((vt2.c3))))))AND(('~T' IN (t0.c0)))) WHERE (MIN(x'', (((t0.c48, 'Qf', t0.c17))>=((vt2.c1, x'', t0.c0))), (NOT (t0.c0)), t0.c0)) ORDER BY (((((t0.c17)OR(t0.c1)))AND(vt2.c0)) IN ()) ASC  NULLS LAST, ((CASE vt2.c1  WHEN t0.c17 THEN t0.c17 WHEN vt2.lid THEN 0.6037030964902661 WHEN t0.c17 THEN 0.7813529461103645 END)&((~ (t0.c17)))) ASC  NULLS LAST, 0X4a82d2e9 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((MIN(x'', (((t0.c48, 'Qf', t0.c17))>=((vt2.c1, x'', t0.c0))), (NOT (t0.c0)), t0.c0)) IS TRUE)  as count FROM vt2 INNER JOIN t0 ON ((((((((((t0.c0)&(t0.c48)))OR(SQLITE_VERSION())))AND(((vt2.c1)<>(t0.c48)))))OR((((vt2.c3)) NOT BETWEEN ((vt2.lid)) AND ((vt2.c3))))))AND(('~T' IN (t0.c0)))) ORDER BY (((((t0.c17)OR(t0.c1)))AND(vt2.c0)) IN ()) ASC  NULLS LAST, ((CASE vt2.c1  WHEN t0.c17 THEN t0.c17 WHEN vt2.lid THEN 0.6037030964902661 WHEN t0.c17 THEN 0.7813529461103645 END)&((~ (t0.c17)))) ASC  NULLS LAST, 0X4a82d2e9 ASC  NULLS FIRST);
SELECT ALL * FROM vt2 INNER JOIN t0 ON ('-1476851550' IN ()) WHERE (0.731091685475595) ORDER BY ((((vt2.lid)IS NOT(vt2.c3))) NOT BETWEEN (t0.c17) AND (CASE WHEN x'' THEN vt2.c1 WHEN NULL THEN vt2.c1 WHEN t0.c0 THEN vt2.c1 ELSE vt2.c2 END)) ASC  NULLS LAST, ((']}|l.wb탚S')OR((((vt2.c3, t0.c0, NULL)) BETWEEN ((vt2.c1, vt2.c2, vt2.c0)) AND ((vt2.c0, vt2.c1, vt2.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ((0.731091685475595) IS TRUE)  as count FROM vt2 INNER JOIN t0 ON ('-1476851550' IN ()) ORDER BY ((((vt2.lid)IS NOT(vt2.c3))) NOT BETWEEN (t0.c17) AND (CASE WHEN x'' THEN vt2.c1 WHEN NULL THEN vt2.c1 WHEN t0.c0 THEN vt2.c1 ELSE vt2.c2 END)) ASC  NULLS LAST, ((']}|l.wb탚S')OR((((vt2.c3, t0.c0, NULL)) BETWEEN ((vt2.c1, vt2.c2, vt2.c0)) AND ((vt2.c0, vt2.c1, vt2.c3))))) DESC);
SELECT ALL * FROM vt2 INNER JOIN t0 ON ('-1476851550' IN ()) WHERE (0.731091685475595) ORDER BY ((((vt2.lid)IS NOT(vt2.c3))) NOT BETWEEN (t0.c17) AND (CASE WHEN x'' THEN vt2.c1 WHEN NULL THEN vt2.c1 WHEN t0.c0 THEN vt2.c1 ELSE vt2.c2 END)) ASC  NULLS LAST, ((']}|l.wb탚S')OR((((vt2.c3, t0.c0, NULL)) BETWEEN ((vt2.c1, vt2.c2, vt2.c0)) AND ((vt2.c0, vt2.c1, vt2.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ((0.731091685475595) IS TRUE)  as count FROM vt2 INNER JOIN t0 ON ('-1476851550' IN ()) ORDER BY ((((vt2.lid)IS NOT(vt2.c3))) NOT BETWEEN (t0.c17) AND (CASE WHEN x'' THEN vt2.c1 WHEN NULL THEN vt2.c1 WHEN t0.c0 THEN vt2.c1 ELSE vt2.c2 END)) ASC  NULLS LAST, ((']}|l.wb탚S')OR((((vt2.c3, t0.c0, NULL)) BETWEEN ((vt2.c1, vt2.c2, vt2.c0)) AND ((vt2.c0, vt2.c1, vt2.c3))))) DESC);
SELECT ALL * FROM vt2 INNER JOIN t0 ON ('-1476851550' IN ()) WHERE (0.731091685475595) ORDER BY ((((vt2.lid)IS NOT(vt2.c3))) NOT BETWEEN (t0.c17) AND (CASE WHEN x'' THEN vt2.c1 WHEN NULL THEN vt2.c1 WHEN t0.c0 THEN vt2.c1 ELSE vt2.c2 END)) ASC  NULLS LAST, ((']}|l.wb탚S')OR((((vt2.c3, t0.c0, NULL)) BETWEEN ((vt2.c1, vt2.c2, vt2.c0)) AND ((vt2.c0, vt2.c1, vt2.c3))))) DESC;
SELECT ALL * FROM vt2, vt0, t0 WHERE (CASE WHEN CAST(t0.c48 AS REAL) THEN CASE WHEN vt2.c0 THEN vt0.c0 ELSE 0x1fdbd0a2 END END) ORDER BY ('-1780254237' IN ()) DESC  NULLS LAST, (+ ((+ (t0.c1))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c48 AS REAL) THEN CASE WHEN vt2.c0 THEN vt0.c0 ELSE 0X1fdbd0a2 END END) IS TRUE)  as count FROM vt2, vt0, t0 ORDER BY ('-1780254237' IN ()) DESC  NULLS LAST, (+ ((+ (t0.c1)))));
SELECT ALL * FROM vt2, vt0, t0 WHERE (CASE WHEN CAST(t0.c48 AS REAL) THEN CASE WHEN vt2.c0 THEN vt0.c0 ELSE 0x1fdbd0a2 END END) ORDER BY ('-1780254237' IN ()) DESC  NULLS LAST, (+ ((+ (t0.c1))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c48 AS REAL) THEN CASE WHEN vt2.c0 THEN vt0.c0 ELSE 0X1fdbd0a2 END END) IS TRUE)  as count FROM vt2, vt0, t0 ORDER BY ('-1780254237' IN ()) DESC  NULLS LAST, (+ ((+ (t0.c1)))));
SELECT ALL * FROM vt2, vt0, t0 WHERE (CASE WHEN CAST(t0.c48 AS REAL) THEN CASE WHEN vt2.c0 THEN vt0.c0 ELSE 0x1fdbd0a2 END END) ORDER BY ('-1780254237' IN ()) DESC  NULLS LAST, (+ ((+ (t0.c1))));
SELECT ALL * FROM t0, v0 INNER JOIN vt2 ON ((vt2.c0)OR(vt2.c2)) COLLATE NOCASE WHERE ((+ (vt2.lid))) ORDER BY ((vt2.c1)IS(t0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((+ (vt2.lid))) IS TRUE)  as count FROM t0, v0 INNER JOIN vt2 ON ((vt2.c0)OR(vt2.c2)) COLLATE NOCASE ORDER BY ((vt2.c1)IS(t0.c0)) COLLATE RTRIM);
SELECT ALL * FROM t0, v0 INNER JOIN vt2 ON ((vt2.c0)OR(vt2.c2)) COLLATE NOCASE WHERE ((+ (vt2.lid))) ORDER BY ((vt2.c1)IS(t0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((+ (vt2.lid))) IS TRUE)  as count FROM t0, v0 INNER JOIN vt2 ON ((vt2.c0)OR(vt2.c2)) COLLATE NOCASE ORDER BY ((vt2.c1)IS(t0.c0)) COLLATE RTRIM);
SELECT ALL * FROM t0, v0 INNER JOIN vt2 ON ((vt2.c0)OR(vt2.c2)) COLLATE NOCASE WHERE ((+ (vt2.lid))) ORDER BY ((vt2.c1)IS(t0.c0)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((vt0.c0)+(vt0.c0)) COLLATE NOCASE  NULLS FIRST, ((((((vt0.c0)&(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)>=(vt0.c0)))), 0x652214ab COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)+(vt0.c0)) COLLATE NOCASE  NULLS FIRST, ((((((vt0.c0)&(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)>=(vt0.c0)))), 0X652214ab COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((vt0.c0)+(vt0.c0)) COLLATE NOCASE  NULLS FIRST, ((((((vt0.c0)&(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)>=(vt0.c0)))), 0x652214ab COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)+(vt0.c0)) COLLATE NOCASE  NULLS FIRST, ((((((vt0.c0)&(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)>=(vt0.c0)))), 0X652214ab COLLATE RTRIM  NULLS LAST);
SELECT * FROM v0, vt2 WHERE ((((vt2.lid)) NOT BETWEEN ((((((v0.c0)AND(vt2.c0)))AND(vt2.c3)))) AND ((((((((((vt2.c2)OR(0.6499197113793972)))AND(vt2.c0)))OR(v0.c0)))OR(vt2.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.lid)) NOT BETWEEN ((((((v0.c0)AND(vt2.c0)))AND(vt2.c3)))) AND ((((((((((vt2.c2)OR(0.6499197113793972)))AND(vt2.c0)))OR(v0.c0)))OR(vt2.c3)))))) IS TRUE)  as count FROM v0, vt2);
SELECT * FROM v0, vt2 WHERE ((((vt2.lid)) NOT BETWEEN ((((((v0.c0)AND(vt2.c0)))AND(vt2.c3)))) AND ((((((((((vt2.c2)OR(0.6499197113793972)))AND(vt2.c0)))OR(v0.c0)))OR(vt2.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.lid)) NOT BETWEEN ((((((v0.c0)AND(vt2.c0)))AND(vt2.c3)))) AND ((((((((((vt2.c2)OR(0.6499197113793972)))AND(vt2.c0)))OR(v0.c0)))OR(vt2.c3)))))) IS TRUE)  as count FROM v0, vt2);
SELECT * FROM v0, vt2 WHERE ((((vt2.lid)) NOT BETWEEN ((((((v0.c0)AND(vt2.c0)))AND(vt2.c3)))) AND ((((((((((vt2.c2)OR(0.6499197113793972)))AND(vt2.c0)))OR(v0.c0)))OR(vt2.c3))))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt2 ON CASE (vt2.c3 IN ())  WHEN (vt2.c3 IN ()) THEN ABS(DISTINCT vt0.c0) ELSE ((vt2.c1) ISNULL) END WHERE ((((((vt2.c3)=(vt2.c1))))<(('\rxw\em쵩'))));
SELECT SUM(count) FROM (SELECT (((((((vt2.c3)==(vt2.c1))))<(('\rxw\em쵩')))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt2 ON CASE (vt2.c3 IN ())  WHEN (vt2.c3 IN ()) THEN ABS(DISTINCT vt0.c0) ELSE ((vt2.c1) ISNULL) END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt2 ON CASE (vt2.c3 IN ())  WHEN (vt2.c3 IN ()) THEN ABS(DISTINCT vt0.c0) ELSE ((vt2.c1) ISNULL) END WHERE ((((((vt2.c3)=(vt2.c1))))<(('\rxw\em쵩'))));
SELECT SUM(count) FROM (SELECT (((((((vt2.c3)==(vt2.c1))))<(('\rxw\em쵩')))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt2 ON CASE (vt2.c3 IN ())  WHEN (vt2.c3 IN ()) THEN ABS(DISTINCT vt0.c0) ELSE ((vt2.c1) ISNULL) END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt2 ON CASE (vt2.c3 IN ())  WHEN (vt2.c3 IN ()) THEN ABS(DISTINCT vt0.c0) ELSE ((vt2.c1) ISNULL) END WHERE ((((((vt2.c3)=(vt2.c1))))<(('\rxw\em쵩'))));
SELECT * FROM t0, v0 WHERE (((0.01501969474084297 COLLATE RTRIM) ISNULL)) ORDER BY ((((t0.c17, t0.c1, t0.c1))<>((t0.c0, t0.c1, t0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ((((0.01501969474084297 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c17, t0.c1, t0.c1))!=((t0.c0, t0.c1, t0.c0))) IN ()));
SELECT * FROM t0, v0 WHERE (((0.01501969474084297 COLLATE RTRIM) ISNULL)) ORDER BY ((((t0.c17, t0.c1, t0.c1))<>((t0.c0, t0.c1, t0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ((((0.01501969474084297 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c17, t0.c1, t0.c1))!=((t0.c0, t0.c1, t0.c0))) IN ()));
SELECT * FROM t0, v0 WHERE (((0.01501969474084297 COLLATE RTRIM) ISNULL)) ORDER BY ((((t0.c17, t0.c1, t0.c1))<>((t0.c0, t0.c1, t0.c0))) IN ());
SELECT ALL * FROM v0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) ISNULL));
SELECT * FROM vt2, vt0, v0, t0 WHERE (((((((t0.c1) NOT NULL))OR((((vt2.c1)) BETWEEN ((t0.c17)) AND ((x''))))))OR(vt2.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1) NOT NULL))OR((((vt2.c1)) BETWEEN ((t0.c17)) AND ((x''))))))OR(vt2.c3 COLLATE RTRIM))) IS TRUE)  as count FROM vt2, vt0, v0, t0);
SELECT * FROM vt2, vt0, v0, t0 WHERE (((((((t0.c1) NOT NULL))OR((((vt2.c1)) BETWEEN ((t0.c17)) AND ((x''))))))OR(vt2.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1) NOT NULL))OR((((vt2.c1)) BETWEEN ((t0.c17)) AND ((x''))))))OR(vt2.c3 COLLATE RTRIM))) IS TRUE)  as count FROM vt2, vt0, v0, t0);
SELECT * FROM vt2, vt0, v0, t0 WHERE (((((((t0.c1) NOT NULL))OR((((vt2.c1)) BETWEEN ((t0.c17)) AND ((x''))))))OR(vt2.c3 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)>(vt0.c0)))OR(TRIM(DISTINCT vt0.c0))))OR((~ (vt0.c0)))))AND(NULL)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)>(vt0.c0)))OR(TRIM(DISTINCT vt0.c0))))OR((~ (vt0.c0)))))AND(NULL)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)>(vt0.c0)))OR(TRIM(DISTINCT vt0.c0))))OR((~ (vt0.c0)))))AND(NULL)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)>(vt0.c0)))OR(TRIM(DISTINCT vt0.c0))))OR((~ (vt0.c0)))))AND(NULL)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)>(vt0.c0)))OR(TRIM(DISTINCT vt0.c0))))OR((~ (vt0.c0)))))AND(NULL)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL) ASC;
SELECT COUNT(*) FROM v0, t0, vt2, vt0 WHERE (((((((((((vt2.c3)>>(t0.c1)))AND(v0.c0)))OR((((vt2.c3))<=((v0.c0))))))OR(CAST(v0.c0 AS BLOB))))AND(((t0.c17) IS FALSE)))) ORDER BY ((((vt2.c1)|(t0.c48)))IS NOT(((NULL)+(t0.c48)))) ASC, (((t0.c0, t0.c17, vt2.c0)) NOT BETWEEN ((CASE '	6좪start of month!R'  WHEN t0.c48 THEN vt2.c3 WHEN vt2.c2 THEN v0.c0 WHEN t0.c1 THEN vt2.c1 ELSE vt2.c2 END, ((vt2.lid)>>(t0.c48)), ((NULL) BETWEEN (t0.c48) AND (x'')))) AND ((((vt2.c0)<(t0.c48)), ((((((((((((vt0.c0)AND(v0.c0)))OR(t0.c1)))OR(t0.c1)))OR(vt2.c0)))OR(vt2.c0)))AND(vt2.lid)), ((vt0.c0)*(v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt2.c3)>>(t0.c1)))AND(v0.c0)))OR((((vt2.c3))<=((v0.c0))))))OR(CAST(v0.c0 AS BLOB))))AND(((t0.c17) IS FALSE)))) IS TRUE)  as count FROM v0, t0, vt2, vt0 ORDER BY ((((vt2.c1)|(t0.c48)))IS NOT(((NULL)+(t0.c48)))) ASC, (((t0.c0, t0.c17, vt2.c0)) NOT BETWEEN ((CASE '	6좪start of month!R'  WHEN t0.c48 THEN vt2.c3 WHEN vt2.c2 THEN v0.c0 WHEN t0.c1 THEN vt2.c1 ELSE vt2.c2 END, ((vt2.lid)>>(t0.c48)), ((NULL) BETWEEN (t0.c48) AND (x'')))) AND ((((vt2.c0)<(t0.c48)), ((((((((((((vt0.c0)AND(v0.c0)))OR(t0.c1)))OR(t0.c1)))OR(vt2.c0)))OR(vt2.c0)))AND(vt2.lid)), ((vt0.c0)*(v0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, vt2, vt0 WHERE (((((((((((vt2.c3)>>(t0.c1)))AND(v0.c0)))OR((((vt2.c3))<=((v0.c0))))))OR(CAST(v0.c0 AS BLOB))))AND(((t0.c17) IS FALSE)))) ORDER BY ((((vt2.c1)|(t0.c48)))IS NOT(((NULL)+(t0.c48)))) ASC, (((t0.c0, t0.c17, vt2.c0)) NOT BETWEEN ((CASE '	6좪start of month!R'  WHEN t0.c48 THEN vt2.c3 WHEN vt2.c2 THEN v0.c0 WHEN t0.c1 THEN vt2.c1 ELSE vt2.c2 END, ((vt2.lid)>>(t0.c48)), ((NULL) BETWEEN (t0.c48) AND (x'')))) AND ((((vt2.c0)<(t0.c48)), ((((((((((((vt0.c0)AND(v0.c0)))OR(t0.c1)))OR(t0.c1)))OR(vt2.c0)))OR(vt2.c0)))AND(vt2.lid)), ((vt0.c0)*(v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt2.c3)>>(t0.c1)))AND(v0.c0)))OR((((vt2.c3))<=((v0.c0))))))OR(CAST(v0.c0 AS BLOB))))AND(((t0.c17) IS FALSE)))) IS TRUE)  as count FROM v0, t0, vt2, vt0 ORDER BY ((((vt2.c1)|(t0.c48)))IS NOT(((NULL)+(t0.c48)))) ASC, (((t0.c0, t0.c17, vt2.c0)) NOT BETWEEN ((CASE '	6좪start of month!R'  WHEN t0.c48 THEN vt2.c3 WHEN vt2.c2 THEN v0.c0 WHEN t0.c1 THEN vt2.c1 ELSE vt2.c2 END, ((vt2.lid)>>(t0.c48)), ((NULL) BETWEEN (t0.c48) AND (x'')))) AND ((((vt2.c0)<(t0.c48)), ((((((((((((vt0.c0)AND(v0.c0)))OR(t0.c1)))OR(t0.c1)))OR(vt2.c0)))OR(vt2.c0)))AND(vt2.lid)), ((vt0.c0)*(v0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, vt2, vt0 WHERE (((((((((((vt2.c3)>>(t0.c1)))AND(v0.c0)))OR((((vt2.c3))<=((v0.c0))))))OR(CAST(v0.c0 AS BLOB))))AND(((t0.c17) IS FALSE)))) ORDER BY ((((vt2.c1)|(t0.c48)))IS NOT(((NULL)+(t0.c48)))) ASC, (((t0.c0, t0.c17, vt2.c0)) NOT BETWEEN ((CASE '	6좪start of month!R'  WHEN t0.c48 THEN vt2.c3 WHEN vt2.c2 THEN v0.c0 WHEN t0.c1 THEN vt2.c1 ELSE vt2.c2 END, ((vt2.lid)>>(t0.c48)), ((NULL) BETWEEN (t0.c48) AND (x'')))) AND ((((vt2.c0)<(t0.c48)), ((((((((((((vt0.c0)AND(v0.c0)))OR(t0.c1)))OR(t0.c1)))OR(vt2.c0)))OR(vt2.c0)))AND(vt2.lid)), ((vt0.c0)*(v0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE (((((vt2.c2))>=((vt2.c0))) IN (CAST('' AS REAL)))) ORDER BY (((((vt2.c0 IN ()))AND(((vt2.c3) BETWEEN (vt2.c3) AND (vt2.c1)))))OR(((vt0.c0)/(vt2.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c2))>=((vt2.c0))) IN (CAST('' AS REAL)))) IS TRUE)  as count FROM vt0, vt2 ORDER BY (((((vt2.c0 IN ()))AND(((vt2.c3) BETWEEN (vt2.c3) AND (vt2.c1)))))OR(((vt0.c0)/(vt2.c2)))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE (((((vt2.c2))>=((vt2.c0))) IN (CAST('' AS REAL)))) ORDER BY (((((vt2.c0 IN ()))AND(((vt2.c3) BETWEEN (vt2.c3) AND (vt2.c1)))))OR(((vt0.c0)/(vt2.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c2))>=((vt2.c0))) IN (CAST('' AS REAL)))) IS TRUE)  as count FROM vt0, vt2 ORDER BY (((((vt2.c0 IN ()))AND(((vt2.c3) BETWEEN (vt2.c3) AND (vt2.c1)))))OR(((vt0.c0)/(vt2.c2)))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE (((((vt2.c2))>=((vt2.c0))) IN (CAST('' AS REAL)))) ORDER BY (((((vt2.c0 IN ()))AND(((vt2.c3) BETWEEN (vt2.c3) AND (vt2.c1)))))OR(((vt0.c0)/(vt2.c2)))) ASC;
SELECT ALL COUNT(*) FROM t0, v0 LEFT OUTER JOIN vt2 ON ((vt2.c2) BETWEEN ((~ (t0.c1))) AND (x'')) WHERE ('') ORDER BY ((((((v0.c0)IS NOT(t0.c0)))AND(CASE WHEN v0.c0 THEN t0.c17 ELSE vt2.lid END)))AND(((v0.c0)|(1810631131)))), '0.7813529461103645' ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt2 ON ((vt2.c2) BETWEEN ((~ (t0.c1))) AND (x'')) ORDER BY ((((((v0.c0)IS NOT(t0.c0)))AND(CASE WHEN v0.c0 THEN t0.c17 ELSE vt2.lid END)))AND(((v0.c0)|(1810631131)))), '0.7813529461103645' ASC);
SELECT ALL COUNT(*) FROM t0, v0 LEFT OUTER JOIN vt2 ON ((vt2.c2) BETWEEN ((~ (t0.c1))) AND (x'')) WHERE ('') ORDER BY ((((((v0.c0)IS NOT(t0.c0)))AND(CASE WHEN v0.c0 THEN t0.c17 ELSE vt2.lid END)))AND(((v0.c0)|(1810631131)))), '0.7813529461103645' ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt2 ON ((vt2.c2) BETWEEN ((~ (t0.c1))) AND (x'')) ORDER BY ((((((v0.c0)IS NOT(t0.c0)))AND(CASE WHEN v0.c0 THEN t0.c17 ELSE vt2.lid END)))AND(((v0.c0)|(1810631131)))), '0.7813529461103645' ASC);
SELECT ALL COUNT(*) FROM t0, v0 LEFT OUTER JOIN vt2 ON ((vt2.c2) BETWEEN ((~ (t0.c1))) AND (x'')) WHERE ('') ORDER BY ((((((v0.c0)IS NOT(t0.c0)))AND(CASE WHEN v0.c0 THEN t0.c17 ELSE vt2.lid END)))AND(((v0.c0)|(1810631131)))), '0.7813529461103645' ASC;
SELECT * FROM vt0, t0, v0 WHERE (((((t0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)))AND(t0.c48 COLLATE NOCASE))) ORDER BY ((((vt0.c0) NOT BETWEEN ('-86318113') AND (t0.c48))) NOT BETWEEN (((t0.c1) BETWEEN (t0.c17) AND (t0.c1))) AND ((((t0.c17))!=((t0.c48)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)))AND(t0.c48 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((vt0.c0) NOT BETWEEN ('-86318113') AND (t0.c48))) NOT BETWEEN (((t0.c1) BETWEEN (t0.c17) AND (t0.c1))) AND ((((t0.c17))<>((t0.c48))))));
SELECT * FROM vt0, t0, v0 WHERE (((((t0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)))AND(t0.c48 COLLATE NOCASE))) ORDER BY ((((vt0.c0) NOT BETWEEN ('-86318113') AND (t0.c48))) NOT BETWEEN (((t0.c1) BETWEEN (t0.c17) AND (t0.c1))) AND ((((t0.c17))!=((t0.c48)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)))AND(t0.c48 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((vt0.c0) NOT BETWEEN ('-86318113') AND (t0.c48))) NOT BETWEEN (((t0.c1) BETWEEN (t0.c17) AND (t0.c1))) AND ((((t0.c17))<>((t0.c48))))));
SELECT * FROM vt0, t0, v0 WHERE (((((t0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)))AND(t0.c48 COLLATE NOCASE))) ORDER BY ((((vt0.c0) NOT BETWEEN ('-86318113') AND (t0.c48))) NOT BETWEEN (((t0.c1) BETWEEN (t0.c17) AND (t0.c1))) AND ((((t0.c17))!=((t0.c48)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c0)))<((+ (v0.c0))))) ORDER BY ((CAST(v0.c0 AS TEXT)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0)))<((+ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS TEXT)) IS FALSE));
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c0)))<((+ (v0.c0))))) ORDER BY ((CAST(v0.c0 AS TEXT)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0)))<((+ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS TEXT)) IS FALSE));
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c0)))<((+ (v0.c0))))) ORDER BY ((CAST(v0.c0 AS TEXT)) IS FALSE);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (CAST(CAST(t0.c17 AS INTEGER) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c17 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (CAST(CAST(t0.c17 AS INTEGER) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c17 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (CAST(CAST(t0.c17 AS INTEGER) AS TEXT));
SELECT COUNT(*) FROM vt2 WHERE (vt2.c3);
SELECT SUM(count) FROM (SELECT ((vt2.c3) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (vt2.c3);
SELECT SUM(count) FROM (SELECT ((vt2.c3) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (vt2.c3);
SELECT ALL COUNT(*) FROM t0, vt0, vt2 WHERE ((((vt2.c2)) BETWEEN ((((vt2.lid) IS FALSE))) AND ((',Axt%')))) ORDER BY (vt2.c1 IN ()) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt2.c2)) BETWEEN ((((vt2.lid) IS FALSE))) AND ((',Axt%')))) IS TRUE)  as count FROM t0, vt0, vt2 ORDER BY (vt2.c1 IN ()) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, vt2 WHERE ((((vt2.c2)) BETWEEN ((((vt2.lid) IS FALSE))) AND ((',Axt%')))) ORDER BY (vt2.c1 IN ()) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt2.c2)) BETWEEN ((((vt2.lid) IS FALSE))) AND ((',Axt%')))) IS TRUE)  as count FROM t0, vt0, vt2 ORDER BY (vt2.c1 IN ()) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, vt2 WHERE ((((vt2.c2)) BETWEEN ((((vt2.lid) IS FALSE))) AND ((',Axt%')))) ORDER BY (vt2.c1 IN ()) COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM v0 WHERE ((((((v0.c0)||(v0.c0))))>=((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)||(v0.c0))))>=((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0)||(v0.c0))))>=((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)||(v0.c0))))>=((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0)||(v0.c0))))>=((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))));
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN vt2 ON (vt2.c3 IN ()) WHERE (json_type(((vt2.c2)IS NOT(vt2.lid))));
SELECT SUM(count) FROM (SELECT ALL ((json_type(((vt2.c2)IS NOT(vt2.lid)))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt2 ON (vt2.c3 IN ()));
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN vt2 ON (vt2.c3 IN ()) WHERE (json_type(((vt2.c2)IS NOT(vt2.lid))));
SELECT SUM(count) FROM (SELECT ALL ((json_type(((vt2.c2)IS NOT(vt2.lid)))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt2 ON (vt2.c3 IN ()));
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN vt2 ON (vt2.c3 IN ()) WHERE (json_type(((vt2.c2)IS NOT(vt2.lid))));
SELECT * FROM t0, v0 WHERE (TRIM(((((t0.c17)AND(v0.c0)))AND(t0.c48))));
SELECT SUM(count) FROM (SELECT ((TRIM(((((t0.c17)AND(v0.c0)))AND(t0.c48)))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (TRIM(((((t0.c17)AND(v0.c0)))AND(t0.c48))));
SELECT SUM(count) FROM (SELECT ((TRIM(((((t0.c17)AND(v0.c0)))AND(t0.c48)))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (TRIM(((((t0.c17)AND(v0.c0)))AND(t0.c48))));
SELECT * FROM vt2, t0, v0 WHERE (CAST((+ (vt2.c0)) AS INTEGER)) ORDER BY (+ ((t0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt2.c0)) AS INTEGER)) IS TRUE)  as count FROM vt2, t0, v0 ORDER BY (+ ((t0.c1 IN ()))) DESC);
SELECT * FROM vt2, t0, v0 WHERE (CAST((+ (vt2.c0)) AS INTEGER)) ORDER BY (+ ((t0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt2.c0)) AS INTEGER)) IS TRUE)  as count FROM vt2, t0, v0 ORDER BY (+ ((t0.c1 IN ()))) DESC);
SELECT * FROM vt2, t0, v0 WHERE (CAST((+ (vt2.c0)) AS INTEGER)) ORDER BY (+ ((t0.c1 IN ()))) DESC;
SELECT ALL * FROM t0, vt2 LEFT OUTER JOIN vt0 ON (- (vt2.c2)) LEFT OUTER JOIN v0 ON (((((-1.462994542E9, t0.c48, ''))==((vt2.c0, t0.c0, NULL)))) BETWEEN (CASE WHEN vt2.lid THEN vt2.c0 WHEN vt2.c2 THEN vt0.c0 WHEN NULL THEN vt2.lid ELSE vt0.c0 END) AND (t0.c1 COLLATE BINARY)) WHERE (((((t0.c17)IS(v0.c0)))<<(((((((((vt0.c0)AND(0.2799110991729946)))AND(t0.c0)))AND(vt2.c1)))AND(vt2.lid))))) ORDER BY ((((((((((v0.c0) BETWEEN (vt2.c0) AND (t0.c0)))AND((((vt2.c3))>=((vt2.c3))))))OR(CASE WHEN vt0.c0 THEN vt2.lid END)))OR(CAST(v0.c0 AS NUMERIC))))OR(((((t0.c0)OR(vt0.c0)))AND(vt2.lid)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c17)IS(v0.c0)))<<(((((((((vt0.c0)AND(0.2799110991729946)))AND(t0.c0)))AND(vt2.c1)))AND(vt2.lid))))) IS TRUE)  as count FROM t0, vt2 LEFT OUTER JOIN vt0 ON (- (vt2.c2)) LEFT OUTER JOIN v0 ON (((((-1.462994542E9, t0.c48, ''))=((vt2.c0, t0.c0, NULL)))) BETWEEN (CASE WHEN vt2.lid THEN vt2.c0 WHEN vt2.c2 THEN vt0.c0 WHEN NULL THEN vt2.lid ELSE vt0.c0 END) AND (t0.c1 COLLATE BINARY)) ORDER BY ((((((((((v0.c0) BETWEEN (vt2.c0) AND (t0.c0)))AND((((vt2.c3))>=((vt2.c3))))))OR(CASE WHEN vt0.c0 THEN vt2.lid END)))OR(CAST(v0.c0 AS NUMERIC))))OR(((((t0.c0)OR(vt0.c0)))AND(vt2.lid)))) ASC);
SELECT ALL * FROM t0, vt2 LEFT OUTER JOIN vt0 ON (- (vt2.c2)) LEFT OUTER JOIN v0 ON (((((-1.462994542E9, t0.c48, ''))==((vt2.c0, t0.c0, NULL)))) BETWEEN (CASE WHEN vt2.lid THEN vt2.c0 WHEN vt2.c2 THEN vt0.c0 WHEN NULL THEN vt2.lid ELSE vt0.c0 END) AND (t0.c1 COLLATE BINARY)) WHERE (((((t0.c17)IS(v0.c0)))<<(((((((((vt0.c0)AND(0.2799110991729946)))AND(t0.c0)))AND(vt2.c1)))AND(vt2.lid))))) ORDER BY ((((((((((v0.c0) BETWEEN (vt2.c0) AND (t0.c0)))AND((((vt2.c3))>=((vt2.c3))))))OR(CASE WHEN vt0.c0 THEN vt2.lid END)))OR(CAST(v0.c0 AS NUMERIC))))OR(((((t0.c0)OR(vt0.c0)))AND(vt2.lid)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c17)IS(v0.c0)))<<(((((((((vt0.c0)AND(0.2799110991729946)))AND(t0.c0)))AND(vt2.c1)))AND(vt2.lid))))) IS TRUE)  as count FROM t0, vt2 LEFT OUTER JOIN vt0 ON (- (vt2.c2)) LEFT OUTER JOIN v0 ON (((((-1.462994542E9, t0.c48, ''))=((vt2.c0, t0.c0, NULL)))) BETWEEN (CASE WHEN vt2.lid THEN vt2.c0 WHEN vt2.c2 THEN vt0.c0 WHEN NULL THEN vt2.lid ELSE vt0.c0 END) AND (t0.c1 COLLATE BINARY)) ORDER BY ((((((((((v0.c0) BETWEEN (vt2.c0) AND (t0.c0)))AND((((vt2.c3))>=((vt2.c3))))))OR(CASE WHEN vt0.c0 THEN vt2.lid END)))OR(CAST(v0.c0 AS NUMERIC))))OR(((((t0.c0)OR(vt0.c0)))AND(vt2.lid)))) ASC);
SELECT ALL * FROM t0, vt2 LEFT OUTER JOIN vt0 ON (- (vt2.c2)) LEFT OUTER JOIN v0 ON (((((-1.462994542E9, t0.c48, ''))==((vt2.c0, t0.c0, NULL)))) BETWEEN (CASE WHEN vt2.lid THEN vt2.c0 WHEN vt2.c2 THEN vt0.c0 WHEN NULL THEN vt2.lid ELSE vt0.c0 END) AND (t0.c1 COLLATE BINARY)) WHERE (((((t0.c17)IS(v0.c0)))<<(((((((((vt0.c0)AND(0.2799110991729946)))AND(t0.c0)))AND(vt2.c1)))AND(vt2.lid))))) ORDER BY ((((((((((v0.c0) BETWEEN (vt2.c0) AND (t0.c0)))AND((((vt2.c3))>=((vt2.c3))))))OR(CASE WHEN vt0.c0 THEN vt2.lid END)))OR(CAST(v0.c0 AS NUMERIC))))OR(((((t0.c0)OR(vt0.c0)))AND(vt2.lid)))) ASC;
SELECT ALL * FROM t0 WHERE ('0.4651205588819207') ORDER BY (t0.c1 COLLATE BINARY IN ()) ASC, t0.c0 DESC;
SELECT SUM(count) FROM (SELECT (('0.4651205588819207') IS TRUE)  as count FROM t0 ORDER BY (t0.c1 COLLATE BINARY IN ()) ASC, t0.c0 DESC);
SELECT ALL * FROM t0 WHERE ('0.4651205588819207') ORDER BY (t0.c1 COLLATE BINARY IN ()) ASC, t0.c0 DESC;
SELECT SUM(count) FROM (SELECT (('0.4651205588819207') IS TRUE)  as count FROM t0 ORDER BY (t0.c1 COLLATE BINARY IN ()) ASC, t0.c0 DESC);
SELECT ALL * FROM t0 WHERE ('0.4651205588819207') ORDER BY (t0.c1 COLLATE BINARY IN ()) ASC, t0.c0 DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>>(vt0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY (+ (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>>(vt0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>>(vt0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY (+ (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>>(vt0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>>(vt0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY (+ (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT * FROM t0 LEFT OUTER JOIN v0 ON (((v0.c0, vt2.c0, vt2.c3)) BETWEEN (((('Y㑭')<(vt2.c2)), ((vt2.c3) NOTNULL), '#Y㟍b 3\nr')) AND ((9.42634881E8, ((vt2.c3) IS FALSE), CAST(t0.c0 AS BLOB)))) LEFT OUTER JOIN vt2 ON CAST(((vt2.lid)||(vt2.lid)) AS NUMERIC) WHERE (((((t0.c1) BETWEEN (vt2.c3) AND (vt2.lid))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) BETWEEN (vt2.c3) AND (vt2.lid))) IS FALSE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON (((v0.c0, vt2.c0, vt2.c3)) BETWEEN (((('Y㑭')<(vt2.c2)), ((vt2.c3) NOTNULL), '#Y㟍b 3\nr')) AND ((9.42634881E8, ((vt2.c3) IS FALSE), CAST(t0.c0 AS BLOB)))) LEFT OUTER JOIN vt2 ON CAST(((vt2.lid)||(vt2.lid)) AS NUMERIC));
SELECT * FROM t0 LEFT OUTER JOIN v0 ON (((v0.c0, vt2.c0, vt2.c3)) BETWEEN (((('Y㑭')<(vt2.c2)), ((vt2.c3) NOTNULL), '#Y㟍b 3\nr')) AND ((9.42634881E8, ((vt2.c3) IS FALSE), CAST(t0.c0 AS BLOB)))) LEFT OUTER JOIN vt2 ON CAST(((vt2.lid)||(vt2.lid)) AS NUMERIC) WHERE (((((t0.c1) BETWEEN (vt2.c3) AND (vt2.lid))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) BETWEEN (vt2.c3) AND (vt2.lid))) IS FALSE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON (((v0.c0, vt2.c0, vt2.c3)) BETWEEN (((('Y㑭')<(vt2.c2)), ((vt2.c3) NOTNULL), '#Y㟍b 3\nr')) AND ((9.42634881E8, ((vt2.c3) IS FALSE), CAST(t0.c0 AS BLOB)))) LEFT OUTER JOIN vt2 ON CAST(((vt2.lid)||(vt2.lid)) AS NUMERIC));
SELECT * FROM t0 FULL OUTER JOIN vt2 ON COALESCE(DISTINCT vt0.c0, CASE WHEN t0.c48 THEN t0.c1 WHEN t0.c48 THEN vt2.c3 WHEN vt0.c0 THEN vt2.c1 ELSE t0.c0 END, ((vt0.c0)>(x'')), (~ (vt0.c0))) LEFT OUTER JOIN vt0 ON CASE (NOT (v0.c0))  WHEN NULL THEN ((t0.c48)>(t0.c48)) END CROSS JOIN v0 ON STRFTIME(((t0.c17) BETWEEN (t0.c17) AND (t0.c1)), CASE 0.55046596957773  WHEN vt2.lid THEN vt2.lid END, (vt2.lid IN (vt0.c0))) WHERE (((((((vt2.lid)AND(t0.c1)))OR(vt2.c0)))LIKE(CAST(696040669 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt2.lid)AND(t0.c1)))OR(vt2.c0)))LIKE(CAST(696040669 AS NUMERIC)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt2 ON COALESCE(DISTINCT vt0.c0, CASE WHEN t0.c48 THEN t0.c1 WHEN t0.c48 THEN vt2.c3 WHEN vt0.c0 THEN vt2.c1 ELSE t0.c0 END, ((vt0.c0)>(x'')), (~ (vt0.c0))) LEFT OUTER JOIN vt0 ON CASE (NOT (v0.c0))  WHEN NULL THEN ((t0.c48)>(t0.c48)) END CROSS JOIN v0 ON STRFTIME(((t0.c17) BETWEEN (t0.c17) AND (t0.c1)), CASE 0.55046596957773  WHEN vt2.lid THEN vt2.lid END, (vt2.lid IN (vt0.c0))));
SELECT * FROM t0 FULL OUTER JOIN vt2 ON COALESCE(DISTINCT vt0.c0, CASE WHEN t0.c48 THEN t0.c1 WHEN t0.c48 THEN vt2.c3 WHEN vt0.c0 THEN vt2.c1 ELSE t0.c0 END, ((vt0.c0)>(x'')), (~ (vt0.c0))) LEFT OUTER JOIN vt0 ON CASE (NOT (v0.c0))  WHEN NULL THEN ((t0.c48)>(t0.c48)) END CROSS JOIN v0 ON STRFTIME(((t0.c17) BETWEEN (t0.c17) AND (t0.c1)), CASE 0.55046596957773  WHEN vt2.lid THEN vt2.lid END, (vt2.lid IN (vt0.c0))) WHERE (((((((vt2.lid)AND(t0.c1)))OR(vt2.c0)))LIKE(CAST(696040669 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt2.lid)AND(t0.c1)))OR(vt2.c0)))LIKE(CAST(696040669 AS NUMERIC)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt2 ON COALESCE(DISTINCT vt0.c0, CASE WHEN t0.c48 THEN t0.c1 WHEN t0.c48 THEN vt2.c3 WHEN vt0.c0 THEN vt2.c1 ELSE t0.c0 END, ((vt0.c0)>(x'')), (~ (vt0.c0))) LEFT OUTER JOIN vt0 ON CASE (NOT (v0.c0))  WHEN NULL THEN ((t0.c48)>(t0.c48)) END CROSS JOIN v0 ON STRFTIME(((t0.c17) BETWEEN (t0.c17) AND (t0.c1)), CASE 0.55046596957773  WHEN vt2.lid THEN vt2.lid END, (vt2.lid IN (vt0.c0))));
SELECT * FROM vt0, t0, vt2, v0 WHERE (json_quote(SQLITE_VERSION())) ORDER BY ((((t0.c1, v0.c0, t0.c1))>((vt2.c3, '0.55046596957773', vt2.c0))) IN (x'')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_quote(SQLITE_VERSION())) IS TRUE)  as count FROM vt0, t0, vt2, v0 ORDER BY ((((t0.c1, v0.c0, t0.c1))>((vt2.c3, '0.55046596957773', vt2.c0))) IN (x'')) DESC  NULLS LAST);
SELECT * FROM vt0, t0, vt2, v0 WHERE (json_quote(SQLITE_VERSION())) ORDER BY ((((t0.c1, v0.c0, t0.c1))>((vt2.c3, '0.55046596957773', vt2.c0))) IN (x'')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_quote(SQLITE_VERSION())) IS TRUE)  as count FROM vt0, t0, vt2, v0 ORDER BY ((((t0.c1, v0.c0, t0.c1))>((vt2.c3, '0.55046596957773', vt2.c0))) IN (x'')) DESC  NULLS LAST);
SELECT * FROM vt0, t0, vt2, v0 WHERE (json_quote(SQLITE_VERSION())) ORDER BY ((((t0.c1, v0.c0, t0.c1))>((vt2.c3, '0.55046596957773', vt2.c0))) IN (x'')) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, t0, vt2, vt0 WHERE (CAST(vt2.c3 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt2.c3 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM v0, t0, vt2, vt0);
SELECT COUNT(*) FROM v0, t0, vt2, vt0 WHERE (CAST(vt2.c3 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt2.c3 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM v0, t0, vt2, vt0);
SELECT COUNT(*) FROM v0, t0, vt2, vt0 WHERE (CAST(vt2.c3 AS NUMERIC) COLLATE BINARY);
SELECT ALL * FROM v0, vt0, vt2, t0 WHERE ((((vt2.lid, 0.7809477524957273, vt2.c3))<>((t0.c0, t0.c48, vt2.c3))) COLLATE RTRIM) ORDER BY (0.09672319288679665 IN ((((t0.c48, vt2.c0, t0.c0))<=((t0.c1, vt2.c0, t0.c17)))));
SELECT SUM(count) FROM (SELECT (((((vt2.lid, 0.7809477524957273, vt2.c3))!=((t0.c0, t0.c48, vt2.c3))) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, vt2, t0 ORDER BY (0.09672319288679665 IN ((((t0.c48, vt2.c0, t0.c0))<=((t0.c1, vt2.c0, t0.c17))))));
SELECT ALL * FROM v0, vt0, vt2, t0 WHERE ((((vt2.lid, 0.7809477524957273, vt2.c3))<>((t0.c0, t0.c48, vt2.c3))) COLLATE RTRIM) ORDER BY (0.09672319288679665 IN ((((t0.c48, vt2.c0, t0.c0))<=((t0.c1, vt2.c0, t0.c17)))));
SELECT SUM(count) FROM (SELECT (((((vt2.lid, 0.7809477524957273, vt2.c3))!=((t0.c0, t0.c48, vt2.c3))) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, vt2, t0 ORDER BY (0.09672319288679665 IN ((((t0.c48, vt2.c0, t0.c0))<=((t0.c1, vt2.c0, t0.c17))))));
SELECT ALL * FROM v0, vt0, vt2, t0 WHERE ((((vt2.lid, 0.7809477524957273, vt2.c3))<>((t0.c0, t0.c48, vt2.c3))) COLLATE RTRIM) ORDER BY (0.09672319288679665 IN ((((t0.c48, vt2.c0, t0.c0))<=((t0.c1, vt2.c0, t0.c17)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN vt2.c0 COLLATE NOCASE THEN CASE vt0.c0  WHEN vt2.c3 THEN vt2.c1 ELSE vt2.c3 END WHEN (vt2.c2 IN (vt2.lid)) THEN vt2.c0 WHEN (~ (vt2.c1)) THEN 0.750368805174001 ELSE (NOT (vt0.c0)) END FULL OUTER JOIN vt2 ON CASE WHEN ((((vt2.c3)AND(vt2.c3)))OR(vt2.c1)) THEN vt0.c0 ELSE CAST(vt0.c0 AS INTEGER) END WHERE (CAST(vt2.c3 COLLATE NOCASE AS TEXT)) ORDER BY ((((x'fe07') ISNULL)) BETWEEN ((vt2.c3 IN (v0.c0))) AND (((vt2.c0) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt2.c3 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN vt2.c0 COLLATE NOCASE THEN CASE vt0.c0  WHEN vt2.c3 THEN vt2.c1 ELSE vt2.c3 END WHEN (vt2.c2 IN (vt2.lid)) THEN vt2.c0 WHEN (~ (vt2.c1)) THEN 0.750368805174001 ELSE (NOT (vt0.c0)) END FULL OUTER JOIN vt2 ON CASE WHEN ((((vt2.c3)AND(vt2.c3)))OR(vt2.c1)) THEN vt0.c0 ELSE CAST(vt0.c0 AS INTEGER) END ORDER BY ((((x'fe07') ISNULL)) BETWEEN ((vt2.c3 IN (v0.c0))) AND (((vt2.c0) ISNULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN vt2.c0 COLLATE NOCASE THEN CASE vt0.c0  WHEN vt2.c3 THEN vt2.c1 ELSE vt2.c3 END WHEN (vt2.c2 IN (vt2.lid)) THEN vt2.c0 WHEN (~ (vt2.c1)) THEN 0.750368805174001 ELSE (NOT (vt0.c0)) END FULL OUTER JOIN vt2 ON CASE WHEN ((((vt2.c3)AND(vt2.c3)))OR(vt2.c1)) THEN vt0.c0 ELSE CAST(vt0.c0 AS INTEGER) END WHERE (CAST(vt2.c3 COLLATE NOCASE AS TEXT)) ORDER BY ((((x'fe07') ISNULL)) BETWEEN ((vt2.c3 IN (v0.c0))) AND (((vt2.c0) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt2.c3 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN vt2.c0 COLLATE NOCASE THEN CASE vt0.c0  WHEN vt2.c3 THEN vt2.c1 ELSE vt2.c3 END WHEN (vt2.c2 IN (vt2.lid)) THEN vt2.c0 WHEN (~ (vt2.c1)) THEN 0.750368805174001 ELSE (NOT (vt0.c0)) END FULL OUTER JOIN vt2 ON CASE WHEN ((((vt2.c3)AND(vt2.c3)))OR(vt2.c1)) THEN vt0.c0 ELSE CAST(vt0.c0 AS INTEGER) END ORDER BY ((((x'fe07') ISNULL)) BETWEEN ((vt2.c3 IN (v0.c0))) AND (((vt2.c0) ISNULL))) DESC  NULLS FIRST);
SELECT * FROM vt0, v0, vt2 CROSS JOIN t0 ON CASE WHEN ((2.097146857E9) IS TRUE) THEN vt2.c3 COLLATE RTRIM END WHERE (CAST(((vt2.c2)*(vt2.lid)) AS TEXT)) ORDER BY ((((t0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c3))) BETWEEN (CAST(t0.c48 AS REAL)) AND (((((((((((((vt2.c2)AND(vt2.c0)))AND(0.19922973492372298)))AND(t0.c1)))AND(t0.c1)))AND(v0.c0)))AND(vt0.c0)))) DESC  NULLS LAST, (~ (vt2.c0)) ASC  NULLS FIRST, ((((vt2.lid) ISNULL))IS NOT(v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt2.c2)*(vt2.lid)) AS TEXT)) IS TRUE)  as count FROM vt0, v0, vt2 CROSS JOIN t0 ON CASE WHEN ((2.097146857E9) IS TRUE) THEN vt2.c3 COLLATE RTRIM END ORDER BY ((((t0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c3))) BETWEEN (CAST(t0.c48 AS REAL)) AND (((((((((((((vt2.c2)AND(vt2.c0)))AND(0.19922973492372298)))AND(t0.c1)))AND(t0.c1)))AND(v0.c0)))AND(vt0.c0)))) DESC  NULLS LAST, (~ (vt2.c0)) ASC  NULLS FIRST, ((((vt2.lid) ISNULL))IS NOT(v0.c0 COLLATE NOCASE)));
SELECT * FROM vt0, v0, vt2 CROSS JOIN t0 ON CASE WHEN ((2.097146857E9) IS TRUE) THEN vt2.c3 COLLATE RTRIM END WHERE (CAST(((vt2.c2)*(vt2.lid)) AS TEXT)) ORDER BY ((((t0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c3))) BETWEEN (CAST(t0.c48 AS REAL)) AND (((((((((((((vt2.c2)AND(vt2.c0)))AND(0.19922973492372298)))AND(t0.c1)))AND(t0.c1)))AND(v0.c0)))AND(vt0.c0)))) DESC  NULLS LAST, (~ (vt2.c0)) ASC  NULLS FIRST, ((((vt2.lid) ISNULL))IS NOT(v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt2.c2)*(vt2.lid)) AS TEXT)) IS TRUE)  as count FROM vt0, v0, vt2 CROSS JOIN t0 ON CASE WHEN ((2.097146857E9) IS TRUE) THEN vt2.c3 COLLATE RTRIM END ORDER BY ((((t0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c3))) BETWEEN (CAST(t0.c48 AS REAL)) AND (((((((((((((vt2.c2)AND(vt2.c0)))AND(0.19922973492372298)))AND(t0.c1)))AND(t0.c1)))AND(v0.c0)))AND(vt0.c0)))) DESC  NULLS LAST, (~ (vt2.c0)) ASC  NULLS FIRST, ((((vt2.lid) ISNULL))IS NOT(v0.c0 COLLATE NOCASE)));
SELECT * FROM vt0, v0, vt2 CROSS JOIN t0 ON CASE WHEN ((2.097146857E9) IS TRUE) THEN vt2.c3 COLLATE RTRIM END WHERE (CAST(((vt2.c2)*(vt2.lid)) AS TEXT)) ORDER BY ((((t0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c3))) BETWEEN (CAST(t0.c48 AS REAL)) AND (((((((((((((vt2.c2)AND(vt2.c0)))AND(0.19922973492372298)))AND(t0.c1)))AND(t0.c1)))AND(v0.c0)))AND(vt0.c0)))) DESC  NULLS LAST, (~ (vt2.c0)) ASC  NULLS FIRST, ((((vt2.lid) ISNULL))IS NOT(v0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN v0 ON CASE (NOT (t0.c1))  WHEN vt0.c0 THEN (NOT (v0.c0)) END WHERE (((((v0.c0) IS FALSE))|((((1.191785581E9, t0.c48, t0.c48))<>((vt0.c0, vt0.c0, t0.c17)))))) ORDER BY ((((x'')AND((NOT (v0.c0)))))OR(CAST(v0.c0 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE))|((((1.191785581E9, t0.c48, t0.c48))!=((vt0.c0, vt0.c0, t0.c17)))))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN v0 ON CASE (NOT (t0.c1))  WHEN vt0.c0 THEN (NOT (v0.c0)) END ORDER BY ((((x'')AND((NOT (v0.c0)))))OR(CAST(v0.c0 AS NUMERIC))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN v0 ON CASE (NOT (t0.c1))  WHEN vt0.c0 THEN (NOT (v0.c0)) END WHERE (((((v0.c0) IS FALSE))|((((1.191785581E9, t0.c48, t0.c48))<>((vt0.c0, vt0.c0, t0.c17)))))) ORDER BY ((((x'')AND((NOT (v0.c0)))))OR(CAST(v0.c0 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE))|((((1.191785581E9, t0.c48, t0.c48))!=((vt0.c0, vt0.c0, t0.c17)))))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN v0 ON CASE (NOT (t0.c1))  WHEN vt0.c0 THEN (NOT (v0.c0)) END ORDER BY ((((x'')AND((NOT (v0.c0)))))OR(CAST(v0.c0 AS NUMERIC))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN v0 ON CASE (NOT (t0.c1))  WHEN vt0.c0 THEN (NOT (v0.c0)) END WHERE (((((v0.c0) IS FALSE))|((((1.191785581E9, t0.c48, t0.c48))<>((vt0.c0, vt0.c0, t0.c17)))))) ORDER BY ((((x'')AND((NOT (v0.c0)))))OR(CAST(v0.c0 AS NUMERIC))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt2, vt0, t0 WHERE (((CASE vt0.c0  WHEN vt2.c0 THEN 0.09565454329511369 ELSE t0.c17 END)*(t0.c48))) ORDER BY CAST((('w#৛J')IS NOT(t0.c48)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt2.c0 THEN 0.09565454329511369 ELSE t0.c17 END)*(t0.c48))) IS TRUE)  as count FROM v0, vt2, vt0, t0 ORDER BY CAST((('w#৛J')IS NOT(t0.c48)) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt2, vt0, t0 WHERE (((CASE vt0.c0  WHEN vt2.c0 THEN 0.09565454329511369 ELSE t0.c17 END)*(t0.c48))) ORDER BY CAST((('w#৛J')IS NOT(t0.c48)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt2.c0 THEN 0.09565454329511369 ELSE t0.c17 END)*(t0.c48))) IS TRUE)  as count FROM v0, vt2, vt0, t0 ORDER BY CAST((('w#৛J')IS NOT(t0.c48)) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt2, vt0, t0 WHERE (((CASE vt0.c0  WHEN vt2.c0 THEN 0.09565454329511369 ELSE t0.c17 END)*(t0.c48))) ORDER BY CAST((('w#৛J')IS NOT(t0.c48)) AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt2 WHERE (((((((((((vt2.c2)OR(vt2.lid)))OR(vt2.lid)))AND(vt2.c0)))AND(vt2.c1))) BETWEEN (HEX(vt2.c0)) AND (x''))) ORDER BY ((TRIM(DISTINCT vt2.c3, vt2.lid))<<(((vt2.c3) BETWEEN (vt2.c3) AND (vt2.lid))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt2.c2)OR(vt2.lid)))OR(vt2.lid)))AND(vt2.c0)))AND(vt2.c1))) BETWEEN (HEX(vt2.c0)) AND (x''))) IS TRUE)  as count FROM vt2 ORDER BY ((TRIM(DISTINCT vt2.c3, vt2.lid))<<(((vt2.c3) BETWEEN (vt2.c3) AND (vt2.lid)))));
SELECT ALL COUNT(*) FROM vt2 WHERE (((((((((((vt2.c2)OR(vt2.lid)))OR(vt2.lid)))AND(vt2.c0)))AND(vt2.c1))) BETWEEN (HEX(vt2.c0)) AND (x''))) ORDER BY ((TRIM(DISTINCT vt2.c3, vt2.lid))<<(((vt2.c3) BETWEEN (vt2.c3) AND (vt2.lid))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt2.c2)OR(vt2.lid)))OR(vt2.lid)))AND(vt2.c0)))AND(vt2.c1))) BETWEEN (HEX(vt2.c0)) AND (x''))) IS TRUE)  as count FROM vt2 ORDER BY ((TRIM(DISTINCT vt2.c3, vt2.lid))<<(((vt2.c3) BETWEEN (vt2.c3) AND (vt2.lid)))));
SELECT ALL COUNT(*) FROM vt2 WHERE (((((((((((vt2.c2)OR(vt2.lid)))OR(vt2.lid)))AND(vt2.c0)))AND(vt2.c1))) BETWEEN (HEX(vt2.c0)) AND (x''))) ORDER BY ((TRIM(DISTINCT vt2.c3, vt2.lid))<<(((vt2.c3) BETWEEN (vt2.c3) AND (vt2.lid))));
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))-(v0.c0 COLLATE RTRIM))) ORDER BY ((((v0.c0))>((NULL))) IN (((v0.c0)!=(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))-(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0))>((NULL))) IN (((v0.c0)<>(v0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))-(v0.c0 COLLATE RTRIM))) ORDER BY ((((v0.c0))>((NULL))) IN (((v0.c0)!=(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))-(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0))>((NULL))) IN (((v0.c0)<>(v0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))-(v0.c0 COLLATE RTRIM))) ORDER BY ((((v0.c0))>((NULL))) IN (((v0.c0)!=(v0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt2, v0, t0 NATURAL JOIN vt0 WHERE ('^Zl[' COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('^Zl[' COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt2, v0, t0 NATURAL JOIN vt0);
SELECT ALL * FROM vt2, v0, t0 NATURAL JOIN vt0 WHERE ('^Zl[' COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('^Zl[' COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt2, v0, t0 NATURAL JOIN vt0);
SELECT ALL * FROM vt2, v0, t0 NATURAL JOIN vt0 WHERE ('^Zl[' COLLATE NOCASE COLLATE RTRIM);
SELECT ALL * FROM vt2, v0, vt0 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT ALL * FROM vt2, v0, vt0 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT ALL * FROM vt2, v0, vt0 WHERE (vt2.c0);
SELECT * FROM t0, vt0, vt2 WHERE (-1.7976931348623157E308) ORDER BY vt2.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((-1.7976931348623157E308) IS TRUE)  as count FROM t0, vt0, vt2 ORDER BY vt2.c2 DESC);
SELECT * FROM t0, vt0, vt2 WHERE (-1.7976931348623157E308) ORDER BY vt2.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((-1.7976931348623157E308) IS TRUE)  as count FROM t0, vt0, vt2 ORDER BY vt2.c2 DESC);
SELECT * FROM t0, vt0, vt2 WHERE (-1.7976931348623157E308) ORDER BY vt2.c2 DESC;
SELECT COUNT(*) FROM vt2, t0, vt0 WHERE ((((vt2.lid, t0.c0, t0.c0)) BETWEEN (((('2097146857')>(t0.c0)), CASE t0.c17  WHEN vt2.c0 THEN t0.c48 WHEN t0.c0 THEN vt2.c2 WHEN vt2.c2 THEN vt2.c2 WHEN vt2.c0 THEN t0.c48 WHEN vt2.c2 THEN vt2.c3 ELSE t0.c17 END, CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c48 THEN t0.c0 WHEN t0.c0 THEN t0.c17 END)) AND ((((vt2.c1) NOT NULL), ((t0.c0) BETWEEN (vt2.lid) AND (t0.c17)), ((t0.c48)<<(vt2.lid)))))) ORDER BY CASE WHEN t0.c1 COLLATE NOCASE THEN (((vt0.c0))>((vt0.c0))) END  NULLS LAST, RTRIM(((0xffffffffc22e253c) NOT NULL)) DESC;
SELECT SUM(count) FROM (SELECT (((((vt2.lid, t0.c0, t0.c0)) BETWEEN (((('2097146857')>(t0.c0)), CASE t0.c17  WHEN vt2.c0 THEN t0.c48 WHEN t0.c0 THEN vt2.c2 WHEN vt2.c2 THEN vt2.c2 WHEN vt2.c0 THEN t0.c48 WHEN vt2.c2 THEN vt2.c3 ELSE t0.c17 END, CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c48 THEN t0.c0 WHEN t0.c0 THEN t0.c17 END)) AND ((((vt2.c1) NOT NULL), ((t0.c0) BETWEEN (vt2.lid) AND (t0.c17)), ((t0.c48)<<(vt2.lid)))))) IS TRUE)  as count FROM vt2, t0, vt0 ORDER BY CASE WHEN t0.c1 COLLATE NOCASE THEN (((vt0.c0))>((vt0.c0))) END  NULLS LAST, RTRIM(((0Xffffffffc22e253c) NOT NULL)) DESC);
SELECT COUNT(*) FROM vt2, t0, vt0 WHERE ((((vt2.lid, t0.c0, t0.c0)) BETWEEN (((('2097146857')>(t0.c0)), CASE t0.c17  WHEN vt2.c0 THEN t0.c48 WHEN t0.c0 THEN vt2.c2 WHEN vt2.c2 THEN vt2.c2 WHEN vt2.c0 THEN t0.c48 WHEN vt2.c2 THEN vt2.c3 ELSE t0.c17 END, CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c48 THEN t0.c0 WHEN t0.c0 THEN t0.c17 END)) AND ((((vt2.c1) NOT NULL), ((t0.c0) BETWEEN (vt2.lid) AND (t0.c17)), ((t0.c48)<<(vt2.lid)))))) ORDER BY CASE WHEN t0.c1 COLLATE NOCASE THEN (((vt0.c0))>((vt0.c0))) END  NULLS LAST, RTRIM(((0xffffffffc22e253c) NOT NULL)) DESC;
SELECT SUM(count) FROM (SELECT (((((vt2.lid, t0.c0, t0.c0)) BETWEEN (((('2097146857')>(t0.c0)), CASE t0.c17  WHEN vt2.c0 THEN t0.c48 WHEN t0.c0 THEN vt2.c2 WHEN vt2.c2 THEN vt2.c2 WHEN vt2.c0 THEN t0.c48 WHEN vt2.c2 THEN vt2.c3 ELSE t0.c17 END, CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c48 THEN t0.c0 WHEN t0.c0 THEN t0.c17 END)) AND ((((vt2.c1) NOT NULL), ((t0.c0) BETWEEN (vt2.lid) AND (t0.c17)), ((t0.c48)<<(vt2.lid)))))) IS TRUE)  as count FROM vt2, t0, vt0 ORDER BY CASE WHEN t0.c1 COLLATE NOCASE THEN (((vt0.c0))>((vt0.c0))) END  NULLS LAST, RTRIM(((0Xffffffffc22e253c) NOT NULL)) DESC);
SELECT COUNT(*) FROM vt2, t0, vt0 WHERE ((((vt2.lid, t0.c0, t0.c0)) BETWEEN (((('2097146857')>(t0.c0)), CASE t0.c17  WHEN vt2.c0 THEN t0.c48 WHEN t0.c0 THEN vt2.c2 WHEN vt2.c2 THEN vt2.c2 WHEN vt2.c0 THEN t0.c48 WHEN vt2.c2 THEN vt2.c3 ELSE t0.c17 END, CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c48 THEN t0.c0 WHEN t0.c0 THEN t0.c17 END)) AND ((((vt2.c1) NOT NULL), ((t0.c0) BETWEEN (vt2.lid) AND (t0.c17)), ((t0.c48)<<(vt2.lid)))))) ORDER BY CASE WHEN t0.c1 COLLATE NOCASE THEN (((vt0.c0))>((vt0.c0))) END  NULLS LAST, RTRIM(((0xffffffffc22e253c) NOT NULL)) DESC;
SELECT ALL * FROM vt0, v0, vt2 WHERE (LIKELIHOOD(((vt2.c0) NOT BETWEEN (v0.c0) AND (vt2.lid)), 0.6184816877693282));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt2.c0) NOT BETWEEN (v0.c0) AND (vt2.lid)), 0.6184816877693282)) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT ALL * FROM vt0, v0, vt2 WHERE (LIKELIHOOD(((vt2.c0) NOT BETWEEN (v0.c0) AND (vt2.lid)), 0.6184816877693282));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt2.c0) NOT BETWEEN (v0.c0) AND (vt2.lid)), 0.6184816877693282)) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT ALL * FROM vt0, v0, vt2 WHERE (LIKELIHOOD(((vt2.c0) NOT BETWEEN (v0.c0) AND (vt2.lid)), 0.6184816877693282));
SELECT ALL * FROM vt2, v0 WHERE ((~ (((vt2.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt2.c0) ISNULL)))) IS TRUE)  as count FROM vt2, v0);
SELECT ALL * FROM vt2, v0 WHERE ((~ (((vt2.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt2.c0) ISNULL)))) IS TRUE)  as count FROM vt2, v0);
SELECT ALL * FROM vt2, v0 WHERE ((~ (((vt2.c0) ISNULL))));
SELECT ALL * FROM v0 WHERE (CAST((+ (v0.c0)) AS REAL)) ORDER BY ((((((v0.c0))>((NULL)))))<>((CAST(v0.c0 AS REAL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (v0.c0)) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0))>((NULL)))))<>((CAST(v0.c0 AS REAL)))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CAST((+ (v0.c0)) AS REAL)) ORDER BY ((((((v0.c0))>((NULL)))))<>((CAST(v0.c0 AS REAL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (v0.c0)) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0))>((NULL)))))<>((CAST(v0.c0 AS REAL)))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CAST((+ (v0.c0)) AS REAL)) ORDER BY ((((((v0.c0))>((NULL)))))<>((CAST(v0.c0 AS REAL)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CASE '-1298003537' COLLATE RTRIM  WHEN (((t0.c17, t0.c17, t0.c17, t0.c17, 0x208f2c3b, t0.c17, t0.c48)) BETWEEN ((t0.c1, t0.c48, t0.c1, t0.c0, t0.c17, t0.c48, t0.c0)) AND ((t0.c0, t0.c48, t0.c17, t0.c48, t0.c48, t0.c48, t0.c17))) THEN ((t0.c1)=(t0.c17)) END) ORDER BY ABS((t0.c17 IN ())) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE '-1298003537' COLLATE RTRIM  WHEN (((t0.c17, t0.c17, t0.c17, t0.c17, 0X208f2c3b, t0.c17, t0.c48)) BETWEEN ((t0.c1, t0.c48, t0.c1, t0.c0, t0.c17, t0.c48, t0.c0)) AND ((t0.c0, t0.c48, t0.c17, t0.c48, t0.c48, t0.c48, t0.c17))) THEN ((t0.c1)=(t0.c17)) END) IS TRUE)  as count FROM t0 ORDER BY ABS((t0.c17 IN ())) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE '-1298003537' COLLATE RTRIM  WHEN (((t0.c17, t0.c17, t0.c17, t0.c17, 0x208f2c3b, t0.c17, t0.c48)) BETWEEN ((t0.c1, t0.c48, t0.c1, t0.c0, t0.c17, t0.c48, t0.c0)) AND ((t0.c0, t0.c48, t0.c17, t0.c48, t0.c48, t0.c48, t0.c17))) THEN ((t0.c1)=(t0.c17)) END) ORDER BY ABS((t0.c17 IN ())) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE '-1298003537' COLLATE RTRIM  WHEN (((t0.c17, t0.c17, t0.c17, t0.c17, 0X208f2c3b, t0.c17, t0.c48)) BETWEEN ((t0.c1, t0.c48, t0.c1, t0.c0, t0.c17, t0.c48, t0.c0)) AND ((t0.c0, t0.c48, t0.c17, t0.c48, t0.c48, t0.c48, t0.c17))) THEN ((t0.c1)=(t0.c17)) END) IS TRUE)  as count FROM t0 ORDER BY ABS((t0.c17 IN ())) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE '-1298003537' COLLATE RTRIM  WHEN (((t0.c17, t0.c17, t0.c17, t0.c17, 0x208f2c3b, t0.c17, t0.c48)) BETWEEN ((t0.c1, t0.c48, t0.c1, t0.c0, t0.c17, t0.c48, t0.c0)) AND ((t0.c0, t0.c48, t0.c17, t0.c48, t0.c48, t0.c48, t0.c17))) THEN ((t0.c1)=(t0.c17)) END) ORDER BY ABS((t0.c17 IN ())) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0, v0 WHERE (((t0.c1 COLLATE RTRIM) ISNULL)) ORDER BY '#Y㟍b 3\nr' ASC  NULLS FIRST, NULLIF(DISTINCT t0.c1, v0.c0) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY '#Y㟍b 3\nr' ASC  NULLS FIRST, NULLIF(DISTINCT t0.c1, v0.c0) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0, t0, v0 WHERE (((t0.c1 COLLATE RTRIM) ISNULL)) ORDER BY '#Y㟍b 3\nr' ASC  NULLS FIRST, NULLIF(DISTINCT t0.c1, v0.c0) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY '#Y㟍b 3\nr' ASC  NULLS FIRST, NULLIF(DISTINCT t0.c1, v0.c0) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0, t0, v0 WHERE (((t0.c1 COLLATE RTRIM) ISNULL)) ORDER BY '#Y㟍b 3\nr' ASC  NULLS FIRST, NULLIF(DISTINCT t0.c1, v0.c0) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((((NULL)<<(vt0.c0))) ISNULL)) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)<<(vt0.c0))) ISNULL)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY t0.c0 ASC);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((((NULL)<<(vt0.c0))) ISNULL)) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)<<(vt0.c0))) ISNULL)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY t0.c0 ASC);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((((NULL)<<(vt0.c0))) ISNULL)) ORDER BY t0.c0 ASC;
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE ((((vt2.c1)<<(vt2.lid)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt2.c1)<<(vt2.lid)) IN ())) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE ((((vt2.c1)<<(vt2.lid)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt2.c1)<<(vt2.lid)) IN ())) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE ((((vt2.c1)<<(vt2.lid)) IN ()));
SELECT * FROM t0, v0, vt0 WHERE ((((((vt0.c0)OR(t0.c1)), CAST(t0.c0 AS INTEGER), NULL))<>(((((v0.c0))<>((v0.c0))), (v0.c0 IN ()), ((t0.c1) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(t0.c1)), CAST(t0.c0 AS INTEGER), NULL))!=(((((v0.c0))<>((v0.c0))), (v0.c0 IN ()), ((t0.c1) NOT NULL))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE ((((((vt0.c0)OR(t0.c1)), CAST(t0.c0 AS INTEGER), NULL))<>(((((v0.c0))<>((v0.c0))), (v0.c0 IN ()), ((t0.c1) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(t0.c1)), CAST(t0.c0 AS INTEGER), NULL))!=(((((v0.c0))<>((v0.c0))), (v0.c0 IN ()), ((t0.c1) NOT NULL))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE ((((((vt0.c0)OR(t0.c1)), CAST(t0.c0 AS INTEGER), NULL))<>(((((v0.c0))<>((v0.c0))), (v0.c0 IN ()), ((t0.c1) NOT NULL)))));
SELECT COUNT(*) FROM vt2, vt0, t0, v0 WHERE (x'') ORDER BY CAST(vt2.c3 AS BLOB) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt2, vt0, t0, v0 ORDER BY CAST(vt2.c3 AS BLOB) COLLATE BINARY);
SELECT COUNT(*) FROM vt2, vt0, t0, v0 WHERE (x'') ORDER BY CAST(vt2.c3 AS BLOB) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt2, vt0, t0, v0 ORDER BY CAST(vt2.c3 AS BLOB) COLLATE BINARY);
SELECT COUNT(*) FROM vt2, vt0, t0, v0 WHERE (x'') ORDER BY CAST(vt2.c3 AS BLOB) COLLATE BINARY;
SELECT ALL * FROM v0, vt2 WHERE (((((v0.c0) BETWEEN (vt2.lid) AND (v0.c0)))|((((vt2.c0, vt2.lid, vt2.c2))>((vt2.c2, vt2.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (vt2.lid) AND (v0.c0)))|((((vt2.c0, vt2.lid, vt2.c2))>((vt2.c2, vt2.c0, v0.c0)))))) IS TRUE)  as count FROM v0, vt2);
SELECT ALL * FROM v0, vt2 WHERE (((((v0.c0) BETWEEN (vt2.lid) AND (v0.c0)))|((((vt2.c0, vt2.lid, vt2.c2))>((vt2.c2, vt2.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (vt2.lid) AND (v0.c0)))|((((vt2.c0, vt2.lid, vt2.c2))>((vt2.c2, vt2.c0, v0.c0)))))) IS TRUE)  as count FROM v0, vt2);
SELECT ALL * FROM v0, vt2 WHERE (((((v0.c0) BETWEEN (vt2.lid) AND (v0.c0)))|((((vt2.c0, vt2.lid, vt2.c2))>((vt2.c2, vt2.c0, v0.c0))))));
SELECT * FROM t0, vt0 WHERE (x'') ORDER BY (((t0.c1) ISNULL) IN (((t0.c48) NOT BETWEEN (t0.c48) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c1) ISNULL) IN (((t0.c48) NOT BETWEEN (t0.c48) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (x'') ORDER BY (((t0.c1) ISNULL) IN (((t0.c48) NOT BETWEEN (t0.c48) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c1) ISNULL) IN (((t0.c48) NOT BETWEEN (t0.c48) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (x'') ORDER BY (((t0.c1) ISNULL) IN (((t0.c48) NOT BETWEEN (t0.c48) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (CAST(LIKE(v0.c0, x'') AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKE(v0.c0, x'') AS TEXT)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(LIKE(v0.c0, x'') AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKE(v0.c0, x'') AS TEXT)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(LIKE(v0.c0, x'') AS TEXT));
SELECT ALL * FROM vt0, v0, t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN 0.3191548534163148 ELSE t0.c0 END)*(CASE t0.c48  WHEN vt0.c0 THEN t0.c1 WHEN x'' THEN v0.c0 WHEN t0.c17 THEN vt0.c0 END))) ORDER BY ((((t0.c17)GLOB('1810631131'))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN 0.3191548534163148 ELSE t0.c0 END)*(CASE t0.c48  WHEN vt0.c0 THEN t0.c1 WHEN x'' THEN v0.c0 WHEN t0.c17 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((t0.c17)GLOB('1810631131'))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM vt0, v0, t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN 0.3191548534163148 ELSE t0.c0 END)*(CASE t0.c48  WHEN vt0.c0 THEN t0.c1 WHEN x'' THEN v0.c0 WHEN t0.c17 THEN vt0.c0 END))) ORDER BY ((((t0.c17)GLOB('1810631131'))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN 0.3191548534163148 ELSE t0.c0 END)*(CASE t0.c48  WHEN vt0.c0 THEN t0.c1 WHEN x'' THEN v0.c0 WHEN t0.c17 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((t0.c17)GLOB('1810631131'))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM vt0, v0, t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN 0.3191548534163148 ELSE t0.c0 END)*(CASE t0.c48  WHEN vt0.c0 THEN t0.c1 WHEN x'' THEN v0.c0 WHEN t0.c17 THEN vt0.c0 END))) ORDER BY ((((t0.c17)GLOB('1810631131'))) NOTNULL)  NULLS LAST;
SELECT ALL * FROM vt2, v0, t0 WHERE ((CASE WHEN vt2.c2 THEN vt2.c1 ELSE t0.c1 END IN (vt2.c3)));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt2.c2 THEN vt2.c1 ELSE t0.c1 END IN (vt2.c3))) IS TRUE)  as count FROM vt2, v0, t0);
SELECT ALL * FROM vt2, v0, t0 WHERE ((CASE WHEN vt2.c2 THEN vt2.c1 ELSE t0.c1 END IN (vt2.c3)));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt2.c2 THEN vt2.c1 ELSE t0.c1 END IN (vt2.c3))) IS TRUE)  as count FROM vt2, v0, t0);
SELECT ALL * FROM vt2, v0, t0 WHERE ((CASE WHEN vt2.c2 THEN vt2.c1 ELSE t0.c1 END IN (vt2.c3)));
SELECT * FROM vt2, t0, vt0 WHERE ((((vt2.c0 IN (t0.c17)))||(LOWER(t0.c1)))) ORDER BY (((t0.c17)) NOT BETWEEN ((((((vt2.c2)OR(vt2.c3)))AND(vt2.c0)))) AND ((CASE vt2.c2  WHEN vt2.c0 THEN vt2.c2 ELSE 0.21268634485037663 END)));
SELECT SUM(count) FROM (SELECT (((((vt2.c0 IN (t0.c17)))||(LOWER(t0.c1)))) IS TRUE)  as count FROM vt2, t0, vt0 ORDER BY (((t0.c17)) NOT BETWEEN ((((((vt2.c2)OR(vt2.c3)))AND(vt2.c0)))) AND ((CASE vt2.c2  WHEN vt2.c0 THEN vt2.c2 ELSE 0.21268634485037663 END))));
SELECT * FROM vt2, t0, vt0 WHERE ((((vt2.c0 IN (t0.c17)))||(LOWER(t0.c1)))) ORDER BY (((t0.c17)) NOT BETWEEN ((((((vt2.c2)OR(vt2.c3)))AND(vt2.c0)))) AND ((CASE vt2.c2  WHEN vt2.c0 THEN vt2.c2 ELSE 0.21268634485037663 END)));
SELECT SUM(count) FROM (SELECT (((((vt2.c0 IN (t0.c17)))||(LOWER(t0.c1)))) IS TRUE)  as count FROM vt2, t0, vt0 ORDER BY (((t0.c17)) NOT BETWEEN ((((((vt2.c2)OR(vt2.c3)))AND(vt2.c0)))) AND ((CASE vt2.c2  WHEN vt2.c0 THEN vt2.c2 ELSE 0.21268634485037663 END))));
SELECT * FROM vt2, t0, vt0 WHERE ((((vt2.c0 IN (t0.c17)))||(LOWER(t0.c1)))) ORDER BY (((t0.c17)) NOT BETWEEN ((((((vt2.c2)OR(vt2.c3)))AND(vt2.c0)))) AND ((CASE vt2.c2  WHEN vt2.c0 THEN vt2.c2 ELSE 0.21268634485037663 END)));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((((COALESCE(0xffffffffbf43118a, v0.c0))AND(NULL)))OR(CASE v0.c0  WHEN t0.c1 THEN t0.c0 ELSE t0.c48 END)) FULL OUTER JOIN t0 ON ((((((((x'')AND((~ (t0.c17)))))AND((((vt0.c0))=((t0.c17))))))AND(((((((((vt0.c0)OR(t0.c0)))AND(t0.c1)))AND(0.49060047846966115)))AND(t0.c0)))))AND((((t0.c17, t0.c1, t0.c1, t0.c48, v0.c0))<=((vt0.c0, 0.6205841797767169, vt0.c0, v0.c0, 0.43964759857952795))))) WHERE ((((((((vt0.c0))<=((t0.c17))))AND((vt0.c0 IN ()))))OR(0.9253657707414455))) ORDER BY ((CAST(0.7503476156930302 AS NUMERIC))=(((t0.c17) NOT BETWEEN (t0.c1) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0))<=((t0.c17))))AND((vt0.c0 IN ()))))OR(0.9253657707414455))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((COALESCE(0Xffffffffbf43118a, v0.c0))AND(NULL)))OR(CASE v0.c0  WHEN t0.c1 THEN t0.c0 ELSE t0.c48 END)) FULL OUTER JOIN t0 ON ((((((((x'')AND((~ (t0.c17)))))AND((((vt0.c0))=((t0.c17))))))AND(((((((((vt0.c0)OR(t0.c0)))AND(t0.c1)))AND(0.49060047846966115)))AND(t0.c0)))))AND((((t0.c17, t0.c1, t0.c1, t0.c48, v0.c0))<=((vt0.c0, 0.6205841797767169, vt0.c0, v0.c0, 0.43964759857952795))))) ORDER BY ((CAST(0.7503476156930302 AS NUMERIC))==(((t0.c17) NOT BETWEEN (t0.c1) AND (t0.c0)))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((((COALESCE(0xffffffffbf43118a, v0.c0))AND(NULL)))OR(CASE v0.c0  WHEN t0.c1 THEN t0.c0 ELSE t0.c48 END)) FULL OUTER JOIN t0 ON ((((((((x'')AND((~ (t0.c17)))))AND((((vt0.c0))=((t0.c17))))))AND(((((((((vt0.c0)OR(t0.c0)))AND(t0.c1)))AND(0.49060047846966115)))AND(t0.c0)))))AND((((t0.c17, t0.c1, t0.c1, t0.c48, v0.c0))<=((vt0.c0, 0.6205841797767169, vt0.c0, v0.c0, 0.43964759857952795))))) WHERE ((((((((vt0.c0))<=((t0.c17))))AND((vt0.c0 IN ()))))OR(0.9253657707414455))) ORDER BY ((CAST(0.7503476156930302 AS NUMERIC))=(((t0.c17) NOT BETWEEN (t0.c1) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0))<=((t0.c17))))AND((vt0.c0 IN ()))))OR(0.9253657707414455))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((COALESCE(0Xffffffffbf43118a, v0.c0))AND(NULL)))OR(CASE v0.c0  WHEN t0.c1 THEN t0.c0 ELSE t0.c48 END)) FULL OUTER JOIN t0 ON ((((((((x'')AND((~ (t0.c17)))))AND((((vt0.c0))=((t0.c17))))))AND(((((((((vt0.c0)OR(t0.c0)))AND(t0.c1)))AND(0.49060047846966115)))AND(t0.c0)))))AND((((t0.c17, t0.c1, t0.c1, t0.c48, v0.c0))<=((vt0.c0, 0.6205841797767169, vt0.c0, v0.c0, 0.43964759857952795))))) ORDER BY ((CAST(0.7503476156930302 AS NUMERIC))==(((t0.c17) NOT BETWEEN (t0.c1) AND (t0.c0)))));
SELECT COUNT(*) FROM vt0, v0, vt2, t0 WHERE (((((ABS(DISTINCT t0.c48))OR(((vt2.lid) BETWEEN (0X4a82d2e9) AND (0.7868215029825237)))))OR(vt2.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((ABS(DISTINCT t0.c48))OR(((vt2.lid) BETWEEN (0x4a82d2e9) AND (0.7868215029825237)))))OR(vt2.c2))) IS TRUE)  as count FROM vt0, v0, vt2, t0);
SELECT COUNT(*) FROM vt0, v0, vt2, t0 WHERE (((((ABS(DISTINCT t0.c48))OR(((vt2.lid) BETWEEN (0X4a82d2e9) AND (0.7868215029825237)))))OR(vt2.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((ABS(DISTINCT t0.c48))OR(((vt2.lid) BETWEEN (0x4a82d2e9) AND (0.7868215029825237)))))OR(vt2.c2))) IS TRUE)  as count FROM vt0, v0, vt2, t0);
SELECT COUNT(*) FROM vt0, v0, vt2, t0 WHERE (((((ABS(DISTINCT t0.c48))OR(((vt2.lid) BETWEEN (0X4a82d2e9) AND (0.7868215029825237)))))OR(vt2.c2)));
SELECT ALL * FROM t0, v0 NOT INDEXED LEFT OUTER JOIN vt0 ON (((NOT (vt2.c1))) IS FALSE) FULL OUTER JOIN vt2 ON (((((((((((t0.c48)OR(v0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c17))))<=((NULL))) WHERE (((((vt0.c0)-(t0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(t0.c1))) NOT NULL)) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON (((NOT (vt2.c1))) IS FALSE) FULL OUTER JOIN vt2 ON (((((((((((t0.c48)OR(v0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c17))))<=((NULL))));
SELECT ALL * FROM t0, v0 NOT INDEXED LEFT OUTER JOIN vt0 ON (((NOT (vt2.c1))) IS FALSE) FULL OUTER JOIN vt2 ON (((((((((((t0.c48)OR(v0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c17))))<=((NULL))) WHERE (((((vt0.c0)-(t0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(t0.c1))) NOT NULL)) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON (((NOT (vt2.c1))) IS FALSE) FULL OUTER JOIN vt2 ON (((((((((((t0.c48)OR(v0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c17))))<=((NULL))));
SELECT COUNT(*) FROM vt2, vt0, t0 WHERE (((x'eb853a12') BETWEEN (json_extract(vt2.c1, vt0.c0)) AND (((t0.c17) NOT BETWEEN (t0.c1) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'eb853a12') BETWEEN (json_extract(vt2.c1, vt0.c0)) AND (((t0.c17) NOT BETWEEN (t0.c1) AND (t0.c1))))) IS TRUE)  as count FROM vt2, vt0, t0);
SELECT COUNT(*) FROM vt2, vt0, t0 WHERE (((x'eb853a12') BETWEEN (json_extract(vt2.c1, vt0.c0)) AND (((t0.c17) NOT BETWEEN (t0.c1) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'eb853a12') BETWEEN (json_extract(vt2.c1, vt0.c0)) AND (((t0.c17) NOT BETWEEN (t0.c1) AND (t0.c1))))) IS TRUE)  as count FROM vt2, vt0, t0);
SELECT COUNT(*) FROM vt2 WHERE (((((vt2.c0)<=(1.88847916E8))) BETWEEN ((vt2.c0 IN ())) AND (vt2.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0)<=(1.88847916E8))) BETWEEN ((vt2.c0 IN ())) AND (vt2.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (((((vt2.c0)<=(1.88847916E8))) BETWEEN ((vt2.c0 IN ())) AND (vt2.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0)<=(1.88847916E8))) BETWEEN ((vt2.c0 IN ())) AND (vt2.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (((((vt2.c0)<=(1.88847916E8))) BETWEEN ((vt2.c0 IN ())) AND (vt2.c1 COLLATE NOCASE)));
SELECT * FROM v0 WHERE ((- ((+ (v0.c0))))) ORDER BY v0.c0 ASC  NULLS LAST, 0.3204811644296187;
SELECT SUM(count) FROM (SELECT (((- ((+ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS LAST, 0.3204811644296187);
SELECT * FROM v0 WHERE ((- ((+ (v0.c0))))) ORDER BY v0.c0 ASC  NULLS LAST, 0.3204811644296187;
SELECT SUM(count) FROM (SELECT (((- ((+ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS LAST, 0.3204811644296187);
SELECT * FROM v0 WHERE ((- ((+ (v0.c0))))) ORDER BY v0.c0 ASC  NULLS LAST, 0.3204811644296187;
SELECT ALL COUNT(*) FROM v0, t0, vt2, vt0 WHERE ((LIKE(vt2.c3, vt2.c0) IN ())) ORDER BY CAST(t0.c1 COLLATE NOCASE AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((LIKE(vt2.c3, vt2.c0) IN ())) IS TRUE)  as count FROM v0, t0, vt2, vt0 ORDER BY CAST(t0.c1 COLLATE NOCASE AS TEXT));
SELECT ALL COUNT(*) FROM v0, t0, vt2, vt0 WHERE ((LIKE(vt2.c3, vt2.c0) IN ())) ORDER BY CAST(t0.c1 COLLATE NOCASE AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((LIKE(vt2.c3, vt2.c0) IN ())) IS TRUE)  as count FROM v0, t0, vt2, vt0 ORDER BY CAST(t0.c1 COLLATE NOCASE AS TEXT));
SELECT ALL COUNT(*) FROM v0, t0, vt2, vt0 WHERE ((LIKE(vt2.c3, vt2.c0) IN ())) ORDER BY CAST(t0.c1 COLLATE NOCASE AS TEXT);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c17);
SELECT SUM(count) FROM (SELECT ((t0.c17) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c17);
SELECT SUM(count) FROM (SELECT ((t0.c17) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c17);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST(((0xffffffff81504a6c)>>(t0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((0xffffffff81504a6c)>>(t0.c1)) AS NUMERIC)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST(((0xffffffff81504a6c)>>(t0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((0xffffffff81504a6c)>>(t0.c1)) AS NUMERIC)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST(((0xffffffff81504a6c)>>(t0.c1)) AS NUMERIC));
SELECT ALL * FROM v0 WHERE ((+ (((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((+ (((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((+ (((v0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt0, vt2, t0 WHERE ((CASE vt2.c0  WHEN t0.c1 THEN t0.c17 WHEN t0.c17 THEN t0.c1 WHEN t0.c48 THEN vt2.c3 ELSE vt2.c2 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt2.c0  WHEN t0.c1 THEN t0.c17 WHEN t0.c17 THEN t0.c1 WHEN t0.c48 THEN vt2.c3 ELSE vt2.c2 END IN ())) IS TRUE)  as count FROM vt0, vt2, t0);
SELECT COUNT(*) FROM vt0, vt2, t0 WHERE ((CASE vt2.c0  WHEN t0.c1 THEN t0.c17 WHEN t0.c17 THEN t0.c1 WHEN t0.c48 THEN vt2.c3 ELSE vt2.c2 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt2.c0  WHEN t0.c1 THEN t0.c17 WHEN t0.c17 THEN t0.c1 WHEN t0.c48 THEN vt2.c3 ELSE vt2.c2 END IN ())) IS TRUE)  as count FROM vt0, vt2, t0);
SELECT COUNT(*) FROM vt0, vt2, t0 WHERE ((CASE vt2.c0  WHEN t0.c1 THEN t0.c17 WHEN t0.c17 THEN t0.c1 WHEN t0.c48 THEN vt2.c3 ELSE vt2.c2 END IN ()));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC)) ORDER BY ((NULL COLLATE NOCASE)IS NOT(vt0.c0)) DESC, ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((NULL COLLATE NOCASE)IS NOT(vt0.c0)) DESC, ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC)) ORDER BY ((NULL COLLATE NOCASE)IS NOT(vt0.c0)) DESC, ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((NULL COLLATE NOCASE)IS NOT(vt0.c0)) DESC, ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC)) ORDER BY ((NULL COLLATE NOCASE)IS NOT(vt0.c0)) DESC, ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt2 WHERE ((((- (vt2.c0))) IS FALSE)) ORDER BY NULLIF(DISTINCT ((vt2.c1) NOT BETWEEN (t0.c0) AND (t0.c48)), LOWER(vt2.c1));
SELECT SUM(count) FROM (SELECT (((((- (vt2.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt2 ORDER BY NULLIF(DISTINCT ((vt2.c1) NOT BETWEEN (t0.c0) AND (t0.c48)), LOWER(vt2.c1)));
SELECT ALL COUNT(*) FROM t0, vt2 WHERE ((((- (vt2.c0))) IS FALSE)) ORDER BY NULLIF(DISTINCT ((vt2.c1) NOT BETWEEN (t0.c0) AND (t0.c48)), LOWER(vt2.c1));
SELECT SUM(count) FROM (SELECT (((((- (vt2.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt2 ORDER BY NULLIF(DISTINCT ((vt2.c1) NOT BETWEEN (t0.c0) AND (t0.c48)), LOWER(vt2.c1)));
SELECT ALL COUNT(*) FROM t0, vt2 WHERE ((((- (vt2.c0))) IS FALSE)) ORDER BY NULLIF(DISTINCT ((vt2.c1) NOT BETWEEN (t0.c0) AND (t0.c48)), LOWER(vt2.c1));
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE (((- (vt2.c3)) IN (((vt2.c1)<=(vt2.c2))))) ORDER BY load_extension('	6좪start of month!R', vt2.c3) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((- (vt2.c3)) IN (((vt2.c1)<=(vt2.c2))))) IS TRUE)  as count FROM vt2, vt0 ORDER BY load_extension('	6좪start of month!R', vt2.c3) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE (((- (vt2.c3)) IN (((vt2.c1)<=(vt2.c2))))) ORDER BY load_extension('	6좪start of month!R', vt2.c3) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((- (vt2.c3)) IN (((vt2.c1)<=(vt2.c2))))) IS TRUE)  as count FROM vt2, vt0 ORDER BY load_extension('	6좪start of month!R', vt2.c3) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt2 NOT INDEXED WHERE (CAST(((vt2.c3) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt2.c3) IS TRUE) AS BLOB)) IS TRUE)  as count FROM vt0, vt2);
SELECT ALL COUNT(*) FROM vt0, vt2 NOT INDEXED WHERE (CAST(((vt2.c3) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt2.c3) IS TRUE) AS BLOB)) IS TRUE)  as count FROM vt0, vt2);
SELECT ALL COUNT(*) FROM vt0, vt2 NOT INDEXED WHERE (CAST(((vt2.c3) IS TRUE) AS BLOB));
SELECT * FROM vt2 RIGHT OUTER JOIN vt0 ON ((((((((((vt2.c2) NOTNULL))AND(((((vt2.c3)AND(vt2.c0)))AND(vt2.lid)))))AND(((((vt2.c1)AND(vt2.lid)))AND(vt2.c1)))))AND(((vt2.c1)OR(vt2.c1)))))AND((((v0.c0))>=((0X3370499))))) RIGHT OUTER JOIN v0 ON CAST(((vt0.c0) NOTNULL) AS TEXT) WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY ((((((vt2.c2) ISNULL))AND((((v0.c0)) NOT BETWEEN (('811514432')) AND ((vt2.c2))))))AND(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN vt0 ON ((((((((((vt2.c2) NOTNULL))AND(((((vt2.c3)AND(vt2.c0)))AND(vt2.lid)))))AND(((((vt2.c1)AND(vt2.lid)))AND(vt2.c1)))))AND(((vt2.c1)OR(vt2.c1)))))AND((((v0.c0))>=((0X3370499))))) RIGHT OUTER JOIN v0 ON CAST(((vt0.c0) NOTNULL) AS TEXT) ORDER BY ((((((vt2.c2) ISNULL))AND((((v0.c0)) NOT BETWEEN (('811514432')) AND ((vt2.c2))))))AND(x''))  NULLS LAST);
SELECT * FROM vt2 RIGHT OUTER JOIN vt0 ON ((((((((((vt2.c2) NOTNULL))AND(((((vt2.c3)AND(vt2.c0)))AND(vt2.lid)))))AND(((((vt2.c1)AND(vt2.lid)))AND(vt2.c1)))))AND(((vt2.c1)OR(vt2.c1)))))AND((((v0.c0))>=((0X3370499))))) RIGHT OUTER JOIN v0 ON CAST(((vt0.c0) NOTNULL) AS TEXT) WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY ((((((vt2.c2) ISNULL))AND((((v0.c0)) NOT BETWEEN (('811514432')) AND ((vt2.c2))))))AND(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN vt0 ON ((((((((((vt2.c2) NOTNULL))AND(((((vt2.c3)AND(vt2.c0)))AND(vt2.lid)))))AND(((((vt2.c1)AND(vt2.lid)))AND(vt2.c1)))))AND(((vt2.c1)OR(vt2.c1)))))AND((((v0.c0))>=((0X3370499))))) RIGHT OUTER JOIN v0 ON CAST(((vt0.c0) NOTNULL) AS TEXT) ORDER BY ((((((vt2.c2) ISNULL))AND((((v0.c0)) NOT BETWEEN (('811514432')) AND ((vt2.c2))))))AND(x''))  NULLS LAST);
SELECT ALL * FROM v0, t0 NOT INDEXED, vt2, vt0 WHERE (((vt2.c2 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt2.c2 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM v0, t0, vt2, vt0);
SELECT ALL * FROM v0, t0 NOT INDEXED, vt2, vt0 WHERE (((vt2.c2 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt2.c2 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM v0, t0, vt2, vt0);
SELECT ALL * FROM v0, t0 NOT INDEXED, vt2, vt0 WHERE (((vt2.c2 COLLATE BINARY) IS TRUE));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON (- ((- (t0.c0)))) WHERE (((((((v0.c0)||(t0.c1)))OR(((NULL)AND(t0.c0)))))OR(((t0.c17)GLOB(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)||(t0.c1)))OR(((NULL)AND(t0.c0)))))OR(((t0.c17)GLOB(t0.c1))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (- ((- (t0.c0)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON (- ((- (t0.c0)))) WHERE (((((((v0.c0)||(t0.c1)))OR(((NULL)AND(t0.c0)))))OR(((t0.c17)GLOB(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)||(t0.c1)))OR(((NULL)AND(t0.c0)))))OR(((t0.c17)GLOB(t0.c1))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (- ((- (t0.c0)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON (- ((- (t0.c0)))) WHERE (((((((v0.c0)||(t0.c1)))OR(((NULL)AND(t0.c0)))))OR(((t0.c17)GLOB(t0.c1)))));
SELECT * FROM vt0, v0, vt2, t0 WHERE ((((NOT (t0.c48)))||(((vt2.c1)>=(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c48)))||(((vt2.c1)>=(vt2.c0))))) IS TRUE)  as count FROM vt0, v0, vt2, t0);
SELECT * FROM vt0, v0, vt2, t0 WHERE ((((NOT (t0.c48)))||(((vt2.c1)>=(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c48)))||(((vt2.c1)>=(vt2.c0))))) IS TRUE)  as count FROM vt0, v0, vt2, t0);
SELECT * FROM vt0, v0, vt2, t0 WHERE ((((NOT (t0.c48)))||(((vt2.c1)>=(vt2.c0)))));
SELECT COUNT(*) FROM vt0, vt2, v0 INNER JOIN t0 ON (+ (CAST(t0.c48 AS BLOB))) WHERE (((-1991299646)IS(t0.c17)) COLLATE NOCASE) ORDER BY CASE WHEN IFNULL('!2|c|N1', t0.c48) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt2.lid)&(vt2.c0)) END ASC  NULLS FIRST, CAST(0.06300046762230882 AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-1991299646)IS(t0.c17)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt2, v0 INNER JOIN t0 ON (+ (CAST(t0.c48 AS BLOB))) ORDER BY CASE WHEN IFNULL('!2|c|N1', t0.c48) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt2.lid)&(vt2.c0)) END ASC  NULLS FIRST, CAST(0.06300046762230882 AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt2, v0 INNER JOIN t0 ON (+ (CAST(t0.c48 AS BLOB))) WHERE (((-1991299646)IS(t0.c17)) COLLATE NOCASE) ORDER BY CASE WHEN IFNULL('!2|c|N1', t0.c48) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt2.lid)&(vt2.c0)) END ASC  NULLS FIRST, CAST(0.06300046762230882 AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-1991299646)IS(t0.c17)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt2, v0 INNER JOIN t0 ON (+ (CAST(t0.c48 AS BLOB))) ORDER BY CASE WHEN IFNULL('!2|c|N1', t0.c48) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt2.lid)&(vt2.c0)) END ASC  NULLS FIRST, CAST(0.06300046762230882 AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt2, v0 INNER JOIN t0 ON (+ (CAST(t0.c48 AS BLOB))) WHERE (((-1991299646)IS(t0.c17)) COLLATE NOCASE) ORDER BY CASE WHEN IFNULL('!2|c|N1', t0.c48) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt2.lid)&(vt2.c0)) END ASC  NULLS FIRST, CAST(0.06300046762230882 AS REAL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, vt2 CROSS JOIN t0 ON (((+ (vt2.c2)))*((~ (t0.c0)))) WHERE (((((((vt2.lid)=(v0.c0)))OR((t0.c1 IN ()))))OR((- (vt2.c3))))) ORDER BY (((vt2.c3)) NOT BETWEEN ((((t0.c0)IS NOT(vt2.c1)))) AND ((((t0.c17) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt2.lid)=(v0.c0)))OR((t0.c1 IN ()))))OR((- (vt2.c3))))) IS TRUE)  as count FROM v0, vt0, vt2 CROSS JOIN t0 ON (((+ (vt2.c2)))*((~ (t0.c0)))) ORDER BY (((vt2.c3)) NOT BETWEEN ((((t0.c0)IS NOT(vt2.c1)))) AND ((((t0.c17) IS TRUE)))));
SELECT ALL COUNT(*) FROM v0, vt0, vt2 CROSS JOIN t0 ON (((+ (vt2.c2)))*((~ (t0.c0)))) WHERE (((((((vt2.lid)=(v0.c0)))OR((t0.c1 IN ()))))OR((- (vt2.c3))))) ORDER BY (((vt2.c3)) NOT BETWEEN ((((t0.c0)IS NOT(vt2.c1)))) AND ((((t0.c17) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt2.lid)=(v0.c0)))OR((t0.c1 IN ()))))OR((- (vt2.c3))))) IS TRUE)  as count FROM v0, vt0, vt2 CROSS JOIN t0 ON (((+ (vt2.c2)))*((~ (t0.c0)))) ORDER BY (((vt2.c3)) NOT BETWEEN ((((t0.c0)IS NOT(vt2.c1)))) AND ((((t0.c17) IS TRUE)))));
SELECT ALL COUNT(*) FROM v0, vt0, vt2 CROSS JOIN t0 ON (((+ (vt2.c2)))*((~ (t0.c0)))) WHERE (((((((vt2.lid)=(v0.c0)))OR((t0.c1 IN ()))))OR((- (vt2.c3))))) ORDER BY (((vt2.c3)) NOT BETWEEN ((((t0.c0)IS NOT(vt2.c1)))) AND ((((t0.c17) IS TRUE))));
SELECT ALL COUNT(*) FROM v0, vt2, t0 WHERE (((t0.c17 COLLATE NOCASE) BETWEEN (((vt2.c3) IS TRUE)) AND (v0.c0 COLLATE BINARY))) ORDER BY ((x'')>>(MAX(t0.c1, t0.c17, vt2.c0, t0.c48))), (((vt2.lid IN ()))LIKE(0.6205841797767169)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c17 COLLATE NOCASE) BETWEEN (((vt2.c3) IS TRUE)) AND (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt2, t0 ORDER BY ((x'')>>(MAX(t0.c1, t0.c17, vt2.c0, t0.c48))), (((vt2.lid IN ()))LIKE(0.6205841797767169)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt2, t0 WHERE (((t0.c17 COLLATE NOCASE) BETWEEN (((vt2.c3) IS TRUE)) AND (v0.c0 COLLATE BINARY))) ORDER BY ((x'')>>(MAX(t0.c1, t0.c17, vt2.c0, t0.c48))), (((vt2.lid IN ()))LIKE(0.6205841797767169)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c17 COLLATE NOCASE) BETWEEN (((vt2.c3) IS TRUE)) AND (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt2, t0 ORDER BY ((x'')>>(MAX(t0.c1, t0.c17, vt2.c0, t0.c48))), (((vt2.lid IN ()))LIKE(0.6205841797767169)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt2, t0 WHERE (((t0.c17 COLLATE NOCASE) BETWEEN (((vt2.c3) IS TRUE)) AND (v0.c0 COLLATE BINARY))) ORDER BY ((x'')>>(MAX(t0.c1, t0.c17, vt2.c0, t0.c48))), (((vt2.lid IN ()))LIKE(0.6205841797767169)) DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((v0.c0 IN ()));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON CAST((((t0.c0))>=((t0.c1))) AS BLOB) WHERE (((((((t0.c0)-(v0.c0)))AND(((v0.c0)OR(0.7857329881388859)))))AND((((v0.c0)) NOT BETWEEN ((-8.14626646E8)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)-(v0.c0)))AND(((v0.c0)OR(0.7857329881388859)))))AND((((v0.c0)) NOT BETWEEN ((-8.14626646E8)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON CAST((((t0.c0))>=((t0.c1))) AS BLOB));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON CAST((((t0.c0))>=((t0.c1))) AS BLOB) WHERE (((((((t0.c0)-(v0.c0)))AND(((v0.c0)OR(0.7857329881388859)))))AND((((v0.c0)) NOT BETWEEN ((-8.14626646E8)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)-(v0.c0)))AND(((v0.c0)OR(0.7857329881388859)))))AND((((v0.c0)) NOT BETWEEN ((-8.14626646E8)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON CAST((((t0.c0))>=((t0.c1))) AS BLOB));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON CAST((((t0.c0))>=((t0.c1))) AS BLOB) WHERE (((((((t0.c0)-(v0.c0)))AND(((v0.c0)OR(0.7857329881388859)))))AND((((v0.c0)) NOT BETWEEN ((-8.14626646E8)) AND ((v0.c0))))));
SELECT COUNT(*) FROM t0, vt2 FULL OUTER JOIN v0 ON LOWER(DISTINCT STRFTIME(vt2.c1, t0.c48, vt2.c1)) CROSS JOIN vt0 ON ((((((vt2.c1) IS TRUE))AND(CAST(vt2.lid AS INTEGER))))OR(((t0.c17) IS TRUE))) WHERE (((((((vt2.c1)IS(vt2.lid)))OR(load_extension(t0.c0, t0.c17))))AND(CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt2.c1)IS(vt2.lid)))OR(load_extension(t0.c0, t0.c17))))AND(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, vt2 FULL OUTER JOIN v0 ON LOWER(DISTINCT STRFTIME(vt2.c1, t0.c48, vt2.c1)) CROSS JOIN vt0 ON ((((((vt2.c1) IS TRUE))AND(CAST(vt2.lid AS INTEGER))))OR(((t0.c17) IS TRUE))));
SELECT COUNT(*) FROM t0, vt2 FULL OUTER JOIN v0 ON LOWER(DISTINCT STRFTIME(vt2.c1, t0.c48, vt2.c1)) CROSS JOIN vt0 ON ((((((vt2.c1) IS TRUE))AND(CAST(vt2.lid AS INTEGER))))OR(((t0.c17) IS TRUE))) WHERE (((((((vt2.c1)IS(vt2.lid)))OR(load_extension(t0.c0, t0.c17))))AND(CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt2.c1)IS(vt2.lid)))OR(load_extension(t0.c0, t0.c17))))AND(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, vt2 FULL OUTER JOIN v0 ON LOWER(DISTINCT STRFTIME(vt2.c1, t0.c48, vt2.c1)) CROSS JOIN vt0 ON ((((((vt2.c1) IS TRUE))AND(CAST(vt2.lid AS INTEGER))))OR(((t0.c17) IS TRUE))));
SELECT ALL * FROM vt0, vt2 WHERE ((((vt2.lid) ISNULL) IN ())) ORDER BY NULL  NULLS FIRST, ((((x'6e79')<<(vt2.lid))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((vt2.lid) ISNULL) IN ())) IS TRUE)  as count FROM vt0, vt2 ORDER BY NULL  NULLS FIRST, ((((x'6e79')<<(vt2.lid))) NOT NULL));
SELECT ALL * FROM vt0, vt2 WHERE ((((vt2.lid) ISNULL) IN ())) ORDER BY NULL  NULLS FIRST, ((((x'6e79')<<(vt2.lid))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((vt2.lid) ISNULL) IN ())) IS TRUE)  as count FROM vt0, vt2 ORDER BY NULL  NULLS FIRST, ((((x'6e79')<<(vt2.lid))) NOT NULL));
SELECT ALL * FROM vt0, vt2 WHERE ((((vt2.lid) ISNULL) IN ())) ORDER BY NULL  NULLS FIRST, ((((x'6e79')<<(vt2.lid))) NOT NULL);
SELECT ALL COUNT(*) FROM t0, vt2, vt0 WHERE (t0.c48) ORDER BY (((((vt2.lid)<=(t0.c17)), CASE vt2.lid  WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c3 THEN vt2.c1 WHEN vt2.lid THEN vt2.c0 ELSE vt0.c0 END, (vt2.c0 IN ()), LOWER(t0.c17), vt2.c2))!=((x'', (t0.c17 IN (t0.c1)), x'4182', ((vt2.c2)-(vt2.c3)), (((t0.c0, t0.c0, t0.c17, t0.c17, vt2.c1)) BETWEEN ((0xffffffffc67a6d83, vt2.lid, t0.c48, t0.c48, vt2.c1)) AND ((vt2.lid, vt0.c0, t0.c17, t0.c0, x'')))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c48) IS TRUE)  as count FROM t0, vt2, vt0 ORDER BY (((((vt2.lid)<=(t0.c17)), CASE vt2.lid  WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c3 THEN vt2.c1 WHEN vt2.lid THEN vt2.c0 ELSE vt0.c0 END, (vt2.c0 IN ()), LOWER(t0.c17), vt2.c2))!=((x'', (t0.c17 IN (t0.c1)), x'4182', ((vt2.c2)-(vt2.c3)), (((t0.c0, t0.c0, t0.c17, t0.c17, vt2.c1)) BETWEEN ((0xffffffffc67a6d83, vt2.lid, t0.c48, t0.c48, vt2.c1)) AND ((vt2.lid, vt0.c0, t0.c17, t0.c0, x'')))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt2, vt0 WHERE (t0.c48) ORDER BY (((((vt2.lid)<=(t0.c17)), CASE vt2.lid  WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c3 THEN vt2.c1 WHEN vt2.lid THEN vt2.c0 ELSE vt0.c0 END, (vt2.c0 IN ()), LOWER(t0.c17), vt2.c2))!=((x'', (t0.c17 IN (t0.c1)), x'4182', ((vt2.c2)-(vt2.c3)), (((t0.c0, t0.c0, t0.c17, t0.c17, vt2.c1)) BETWEEN ((0xffffffffc67a6d83, vt2.lid, t0.c48, t0.c48, vt2.c1)) AND ((vt2.lid, vt0.c0, t0.c17, t0.c0, x'')))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c48) IS TRUE)  as count FROM t0, vt2, vt0 ORDER BY (((((vt2.lid)<=(t0.c17)), CASE vt2.lid  WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c3 THEN vt2.c1 WHEN vt2.lid THEN vt2.c0 ELSE vt0.c0 END, (vt2.c0 IN ()), LOWER(t0.c17), vt2.c2))!=((x'', (t0.c17 IN (t0.c1)), x'4182', ((vt2.c2)-(vt2.c3)), (((t0.c0, t0.c0, t0.c17, t0.c17, vt2.c1)) BETWEEN ((0xffffffffc67a6d83, vt2.lid, t0.c48, t0.c48, vt2.c1)) AND ((vt2.lid, vt0.c0, t0.c17, t0.c0, x'')))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt2, vt0 WHERE (t0.c48) ORDER BY (((((vt2.lid)<=(t0.c17)), CASE vt2.lid  WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c3 THEN vt2.c1 WHEN vt2.lid THEN vt2.c0 ELSE vt0.c0 END, (vt2.c0 IN ()), LOWER(t0.c17), vt2.c2))!=((x'', (t0.c17 IN (t0.c1)), x'4182', ((vt2.c2)-(vt2.c3)), (((t0.c0, t0.c0, t0.c17, t0.c17, vt2.c1)) BETWEEN ((0xffffffffc67a6d83, vt2.lid, t0.c48, t0.c48, vt2.c1)) AND ((vt2.lid, vt0.c0, t0.c17, t0.c0, x'')))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 FULL OUTER JOIN t0 ON t0.c48 WHERE ((+ (((((((((v0.c0)OR(t0.c0)))OR('o\rxꋨYW쑳')))AND(t0.c17)))AND(t0.c48))))) ORDER BY ((CAST(t0.c48 AS BLOB))%(t0.c1 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((v0.c0)OR(t0.c0)))OR('o\rxꋨYW쑳')))AND(t0.c17)))AND(t0.c48))))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN t0 ON t0.c48 ORDER BY ((CAST(t0.c48 AS BLOB))%(t0.c1 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM vt0, v0 FULL OUTER JOIN t0 ON t0.c48 WHERE ((+ (((((((((v0.c0)OR(t0.c0)))OR('o\rxꋨYW쑳')))AND(t0.c17)))AND(t0.c48))))) ORDER BY ((CAST(t0.c48 AS BLOB))%(t0.c1 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((v0.c0)OR(t0.c0)))OR('o\rxꋨYW쑳')))AND(t0.c17)))AND(t0.c48))))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN t0 ON t0.c48 ORDER BY ((CAST(t0.c48 AS BLOB))%(t0.c1 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM vt0, v0 FULL OUTER JOIN t0 ON t0.c48 WHERE ((+ (((((((((v0.c0)OR(t0.c0)))OR('o\rxꋨYW쑳')))AND(t0.c17)))AND(t0.c48))))) ORDER BY ((CAST(t0.c48 AS BLOB))%(t0.c1 COLLATE NOCASE)) DESC;
SELECT * FROM t0 WHERE ((NOT (CASE t0.c48  WHEN t0.c1 THEN t0.c17 END))) ORDER BY ((((t0.c48) NOT BETWEEN (t0.c1) AND (t0.c48)))>>((t0.c48 IN (t0.c1, t0.c48))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE t0.c48  WHEN t0.c1 THEN t0.c17 END))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c48) NOT BETWEEN (t0.c1) AND (t0.c48)))>>((t0.c48 IN (t0.c1, t0.c48))))  NULLS LAST);
SELECT * FROM t0 WHERE ((NOT (CASE t0.c48  WHEN t0.c1 THEN t0.c17 END))) ORDER BY ((((t0.c48) NOT BETWEEN (t0.c1) AND (t0.c48)))>>((t0.c48 IN (t0.c1, t0.c48))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE t0.c48  WHEN t0.c1 THEN t0.c17 END))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c48) NOT BETWEEN (t0.c1) AND (t0.c48)))>>((t0.c48 IN (t0.c1, t0.c48))))  NULLS LAST);
SELECT * FROM t0 WHERE ((NOT (CASE t0.c48  WHEN t0.c1 THEN t0.c17 END))) ORDER BY ((((t0.c48) NOT BETWEEN (t0.c1) AND (t0.c48)))>>((t0.c48 IN (t0.c1, t0.c48))))  NULLS LAST;
SELECT * FROM t0 INNER JOIN v0 ON ((((((t0.c48)<(t0.c48)))OR(v0.c0)))OR((NOT (t0.c48)))) FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((((((v0.c0))==((v0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))=((v0.c0)))) IS TRUE)) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((((((t0.c48)<(t0.c48)))OR(v0.c0)))OR((NOT (t0.c48)))) FULL OUTER JOIN vt0 ON vt0.c0);
SELECT * FROM t0 INNER JOIN v0 ON ((((((t0.c48)<(t0.c48)))OR(v0.c0)))OR((NOT (t0.c48)))) FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((((((v0.c0))==((v0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))=((v0.c0)))) IS TRUE)) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((((((t0.c48)<(t0.c48)))OR(v0.c0)))OR((NOT (t0.c48)))) FULL OUTER JOIN vt0 ON vt0.c0);
SELECT * FROM t0 INNER JOIN v0 ON ((((((t0.c48)<(t0.c48)))OR(v0.c0)))OR((NOT (t0.c48)))) FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((((((v0.c0))==((v0.c0)))) IS TRUE));
SELECT COUNT(*) FROM vt2, t0, v0, vt0 WHERE ((NOT (((t0.c1)AND(vt2.lid))))) ORDER BY ((((vt2.lid) NOT BETWEEN (vt2.lid) AND (t0.c0))) NOT BETWEEN ((('1958816592')-(vt2.lid))) AND (CHANGES())) ASC, ((x'')LIKE(((v0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c1)AND(vt2.lid))))) IS TRUE)  as count FROM vt2, t0, v0, vt0 ORDER BY ((((vt2.lid) NOT BETWEEN (vt2.lid) AND (t0.c0))) NOT BETWEEN ((('1958816592')-(vt2.lid))) AND (CHANGES())) ASC, ((x'')LIKE(((v0.c0) ISNULL)))  NULLS LAST);
SELECT COUNT(*) FROM vt2, t0, v0, vt0 WHERE ((NOT (((t0.c1)AND(vt2.lid))))) ORDER BY ((((vt2.lid) NOT BETWEEN (vt2.lid) AND (t0.c0))) NOT BETWEEN ((('1958816592')-(vt2.lid))) AND (CHANGES())) ASC, ((x'')LIKE(((v0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c1)AND(vt2.lid))))) IS TRUE)  as count FROM vt2, t0, v0, vt0 ORDER BY ((((vt2.lid) NOT BETWEEN (vt2.lid) AND (t0.c0))) NOT BETWEEN ((('1958816592')-(vt2.lid))) AND (CHANGES())) ASC, ((x'')LIKE(((v0.c0) ISNULL)))  NULLS LAST);
SELECT COUNT(*) FROM vt2, t0, v0, vt0 WHERE ((NOT (((t0.c1)AND(vt2.lid))))) ORDER BY ((((vt2.lid) NOT BETWEEN (vt2.lid) AND (t0.c0))) NOT BETWEEN ((('1958816592')-(vt2.lid))) AND (CHANGES())) ASC, ((x'')LIKE(((v0.c0) ISNULL)))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)*(vt0.c0))) NOTNULL)) ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c0)GLOB(vt0.c0)) ELSE ((0.2676604297851095) BETWEEN ('2131544018') AND (vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c0)GLOB(vt0.c0)) ELSE ((0.2676604297851095) BETWEEN ('2131544018') AND (vt0.c0)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)*(vt0.c0))) NOTNULL)) ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c0)GLOB(vt0.c0)) ELSE ((0.2676604297851095) BETWEEN ('2131544018') AND (vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c0)GLOB(vt0.c0)) ELSE ((0.2676604297851095) BETWEEN ('2131544018') AND (vt0.c0)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)*(vt0.c0))) NOTNULL)) ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c0)GLOB(vt0.c0)) ELSE ((0.2676604297851095) BETWEEN ('2131544018') AND (vt0.c0)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt2, t0 LEFT OUTER JOIN v0 ON ((ABS(t0.c17))<<(t0.c1)) WHERE (NULLIF(DISTINCT ((t0.c17) NOT NULL), vt2.c2));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((t0.c17) NOT NULL), vt2.c2)) IS TRUE)  as count FROM vt0, vt2, t0 LEFT OUTER JOIN v0 ON ((ABS(t0.c17))<<(t0.c1)));
SELECT COUNT(*) FROM vt0, vt2, t0 LEFT OUTER JOIN v0 ON ((ABS(t0.c17))<<(t0.c1)) WHERE (NULLIF(DISTINCT ((t0.c17) NOT NULL), vt2.c2));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((t0.c17) NOT NULL), vt2.c2)) IS TRUE)  as count FROM vt0, vt2, t0 LEFT OUTER JOIN v0 ON ((ABS(t0.c17))<<(t0.c1)));
SELECT COUNT(*) FROM vt0, vt2, t0 LEFT OUTER JOIN v0 ON ((ABS(t0.c17))<<(t0.c1)) WHERE (NULLIF(DISTINCT ((t0.c17) NOT NULL), vt2.c2));
SELECT COUNT(*) FROM vt0 WHERE ((+ (x''))) ORDER BY ((vt0.c0 COLLATE BINARY)<((vt0.c0 IN (vt0.c0, vt0.c0))))  NULLS FIRST, (((- (vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN NULL END) AND (((vt0.c0)GLOB(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (x''))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)<((vt0.c0 IN (vt0.c0, vt0.c0))))  NULLS FIRST, (((- (vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN NULL END) AND (((vt0.c0)GLOB(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (x''))) ORDER BY ((vt0.c0 COLLATE BINARY)<((vt0.c0 IN (vt0.c0, vt0.c0))))  NULLS FIRST, (((- (vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN NULL END) AND (((vt0.c0)GLOB(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (x''))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)<((vt0.c0 IN (vt0.c0, vt0.c0))))  NULLS FIRST, (((- (vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN NULL END) AND (((vt0.c0)GLOB(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (x''))) ORDER BY ((vt0.c0 COLLATE BINARY)<((vt0.c0 IN (vt0.c0, vt0.c0))))  NULLS FIRST, (((- (vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN NULL END) AND (((vt0.c0)GLOB(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((((t0.c1) IS FALSE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((((t0.c1) IS FALSE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((((t0.c1) IS FALSE)) IS FALSE));
SELECT * FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN t0.c1 THEN t0.c17 END)) AND ((((t0.c0) BETWEEN (t0.c0) AND ('1737204721'))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE WHEN t0.c1 THEN t0.c17 END)) AND ((((t0.c0) BETWEEN (t0.c0) AND ('1737204721')))))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN t0.c1 THEN t0.c17 END)) AND ((((t0.c0) BETWEEN (t0.c0) AND ('1737204721'))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE WHEN t0.c1 THEN t0.c17 END)) AND ((((t0.c0) BETWEEN (t0.c0) AND ('1737204721')))))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN t0.c1 THEN t0.c17 END)) AND ((((t0.c0) BETWEEN (t0.c0) AND ('1737204721'))))));
SELECT * FROM v0, vt2, vt0 WHERE (NULLIF(((vt0.c0)>=(vt0.c0)), CAST(vt2.c2 AS NUMERIC))) ORDER BY CAST(((((((((((((vt2.c0)AND(vt0.c0)))AND(vt2.c2)))AND(vt2.c1)))AND(vt2.c3)))OR(vt2.c2)))OR(vt2.c2)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((vt0.c0)>=(vt0.c0)), CAST(vt2.c2 AS NUMERIC))) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY CAST(((((((((((((vt2.c0)AND(vt0.c0)))AND(vt2.c2)))AND(vt2.c1)))AND(vt2.c3)))OR(vt2.c2)))OR(vt2.c2)) AS TEXT) DESC);
SELECT * FROM v0, vt2, vt0 WHERE (NULLIF(((vt0.c0)>=(vt0.c0)), CAST(vt2.c2 AS NUMERIC))) ORDER BY CAST(((((((((((((vt2.c0)AND(vt0.c0)))AND(vt2.c2)))AND(vt2.c1)))AND(vt2.c3)))OR(vt2.c2)))OR(vt2.c2)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((vt0.c0)>=(vt0.c0)), CAST(vt2.c2 AS NUMERIC))) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY CAST(((((((((((((vt2.c0)AND(vt0.c0)))AND(vt2.c2)))AND(vt2.c1)))AND(vt2.c3)))OR(vt2.c2)))OR(vt2.c2)) AS TEXT) DESC);
SELECT * FROM v0, vt2, vt0 WHERE (NULLIF(((vt0.c0)>=(vt0.c0)), CAST(vt2.c2 AS NUMERIC))) ORDER BY CAST(((((((((((((vt2.c0)AND(vt0.c0)))AND(vt2.c2)))AND(vt2.c1)))AND(vt2.c3)))OR(vt2.c2)))OR(vt2.c2)) AS TEXT) DESC;
SELECT COUNT(*) FROM t0, vt2, v0 WHERE (LIKELIHOOD(((vt2.c2)||(vt2.c1)), 0.9702721180744525)) ORDER BY (((((vt2.c3)) BETWEEN ((t0.c17)) AND ((t0.c48)))) NOT BETWEEN ('1269051609') AND (CASE WHEN t0.c17 THEN vt2.lid ELSE vt2.c1 END))  NULLS LAST, CAST(((((((((t0.c1)OR(t0.c48)))AND(vt2.c0)))AND(t0.c17)))AND(vt2.lid)) AS BLOB) ASC  NULLS FIRST, UPPER(DISTINCT (((v0.c0, t0.c1, vt2.c3))!=((v0.c0, t0.c1, vt2.c2))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt2.c2)||(vt2.c1)), 0.9702721180744525)) IS TRUE)  as count FROM t0, vt2, v0 ORDER BY (((((vt2.c3)) BETWEEN ((t0.c17)) AND ((t0.c48)))) NOT BETWEEN ('1269051609') AND (CASE WHEN t0.c17 THEN vt2.lid ELSE vt2.c1 END))  NULLS LAST, CAST(((((((((t0.c1)OR(t0.c48)))AND(vt2.c0)))AND(t0.c17)))AND(vt2.lid)) AS BLOB) ASC  NULLS FIRST, UPPER(DISTINCT (((v0.c0, t0.c1, vt2.c3))<>((v0.c0, t0.c1, vt2.c2)))));
SELECT COUNT(*) FROM t0, vt2, v0 WHERE (LIKELIHOOD(((vt2.c2)||(vt2.c1)), 0.9702721180744525)) ORDER BY (((((vt2.c3)) BETWEEN ((t0.c17)) AND ((t0.c48)))) NOT BETWEEN ('1269051609') AND (CASE WHEN t0.c17 THEN vt2.lid ELSE vt2.c1 END))  NULLS LAST, CAST(((((((((t0.c1)OR(t0.c48)))AND(vt2.c0)))AND(t0.c17)))AND(vt2.lid)) AS BLOB) ASC  NULLS FIRST, UPPER(DISTINCT (((v0.c0, t0.c1, vt2.c3))!=((v0.c0, t0.c1, vt2.c2))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt2.c2)||(vt2.c1)), 0.9702721180744525)) IS TRUE)  as count FROM t0, vt2, v0 ORDER BY (((((vt2.c3)) BETWEEN ((t0.c17)) AND ((t0.c48)))) NOT BETWEEN ('1269051609') AND (CASE WHEN t0.c17 THEN vt2.lid ELSE vt2.c1 END))  NULLS LAST, CAST(((((((((t0.c1)OR(t0.c48)))AND(vt2.c0)))AND(t0.c17)))AND(vt2.lid)) AS BLOB) ASC  NULLS FIRST, UPPER(DISTINCT (((v0.c0, t0.c1, vt2.c3))<>((v0.c0, t0.c1, vt2.c2)))));
SELECT COUNT(*) FROM t0, vt2, v0 WHERE (LIKELIHOOD(((vt2.c2)||(vt2.c1)), 0.9702721180744525)) ORDER BY (((((vt2.c3)) BETWEEN ((t0.c17)) AND ((t0.c48)))) NOT BETWEEN ('1269051609') AND (CASE WHEN t0.c17 THEN vt2.lid ELSE vt2.c1 END))  NULLS LAST, CAST(((((((((t0.c1)OR(t0.c48)))AND(vt2.c0)))AND(t0.c17)))AND(vt2.lid)) AS BLOB) ASC  NULLS FIRST, UPPER(DISTINCT (((v0.c0, t0.c1, vt2.c3))!=((v0.c0, t0.c1, vt2.c2))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON ((((((t0.c17)AND(t0.c17)))AND(CASE vt0.c0  WHEN '481507277' THEN t0.c17 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c1 ELSE '垁}' END)))OR(vt0.c0 COLLATE NOCASE)) INNER JOIN vt0 ON (x'' IN ()) COLLATE NOCASE COLLATE RTRIM WHERE (((CAST(t0.c17 AS REAL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c17 AS REAL)) NOT NULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON ((((((t0.c17)AND(t0.c17)))AND(CASE vt0.c0  WHEN '481507277' THEN t0.c17 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c1 ELSE '垁}' END)))OR(vt0.c0 COLLATE NOCASE)) INNER JOIN vt0 ON (x'' IN ()) COLLATE NOCASE COLLATE RTRIM);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON ((((((t0.c17)AND(t0.c17)))AND(CASE vt0.c0  WHEN '481507277' THEN t0.c17 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c1 ELSE '垁}' END)))OR(vt0.c0 COLLATE NOCASE)) INNER JOIN vt0 ON (x'' IN ()) COLLATE NOCASE COLLATE RTRIM WHERE (((CAST(t0.c17 AS REAL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c17 AS REAL)) NOT NULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON ((((((t0.c17)AND(t0.c17)))AND(CASE vt0.c0  WHEN '481507277' THEN t0.c17 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c1 ELSE '垁}' END)))OR(vt0.c0 COLLATE NOCASE)) INNER JOIN vt0 ON (x'' IN ()) COLLATE NOCASE COLLATE RTRIM);
SELECT * FROM vt0 FULL OUTER JOIN vt2 ON ((CAST(vt2.c2 AS NUMERIC))&(vt2.c2)) CROSS JOIN v0 ON (((t0.c1)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c3))) COLLATE RTRIM FULL OUTER JOIN t0 ON SQLITE_COMPILEOPTION_USED('q4_J') WHERE (((((t0.c17)<(t0.c48)))&(CAST(vt2.c0 AS REAL)))) ORDER BY CAST(((((((((vt2.c1)AND(vt0.c0)))AND(vt2.c0)))OR(vt2.c0)))AND(vt0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c17)<(t0.c48)))&(CAST(vt2.c0 AS REAL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt2 ON ((CAST(vt2.c2 AS NUMERIC))&(vt2.c2)) CROSS JOIN v0 ON (((t0.c1)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c3))) COLLATE RTRIM FULL OUTER JOIN t0 ON SQLITE_COMPILEOPTION_USED('q4_J') ORDER BY CAST(((((((((vt2.c1)AND(vt0.c0)))AND(vt2.c0)))OR(vt2.c0)))AND(vt0.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN vt2 ON ((CAST(vt2.c2 AS NUMERIC))&(vt2.c2)) CROSS JOIN v0 ON (((t0.c1)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c3))) COLLATE RTRIM FULL OUTER JOIN t0 ON SQLITE_COMPILEOPTION_USED('q4_J') WHERE (((((t0.c17)<(t0.c48)))&(CAST(vt2.c0 AS REAL)))) ORDER BY CAST(((((((((vt2.c1)AND(vt0.c0)))AND(vt2.c0)))OR(vt2.c0)))AND(vt0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c17)<(t0.c48)))&(CAST(vt2.c0 AS REAL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt2 ON ((CAST(vt2.c2 AS NUMERIC))&(vt2.c2)) CROSS JOIN v0 ON (((t0.c1)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c3))) COLLATE RTRIM FULL OUTER JOIN t0 ON SQLITE_COMPILEOPTION_USED('q4_J') ORDER BY CAST(((((((((vt2.c1)AND(vt0.c0)))AND(vt2.c0)))OR(vt2.c0)))AND(vt0.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0, vt2 WHERE (CASE WHEN ((vt2.c2) NOT BETWEEN (vt2.lid) AND (v0.c0)) THEN vt2.c1 ELSE (((0.2213043095985484))!=((vt2.c2))) END) ORDER BY ((vt0.c0)<=(vt2.c3)) COLLATE NOCASE ASC  NULLS FIRST, CAST(1166296217 AS REAL) ASC  NULLS FIRST, TRIM(DISTINCT '0.2799110991729946');
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt2.c2) NOT BETWEEN (vt2.lid) AND (v0.c0)) THEN vt2.c1 ELSE (((0.2213043095985484))!=((vt2.c2))) END) IS TRUE)  as count FROM vt0, v0, vt2 ORDER BY ((vt0.c0)<=(vt2.c3)) COLLATE NOCASE ASC  NULLS FIRST, CAST(1166296217 AS REAL) ASC  NULLS FIRST, TRIM(DISTINCT '0.2799110991729946'));
SELECT ALL * FROM vt0, v0, vt2 WHERE (CASE WHEN ((vt2.c2) NOT BETWEEN (vt2.lid) AND (v0.c0)) THEN vt2.c1 ELSE (((0.2213043095985484))!=((vt2.c2))) END) ORDER BY ((vt0.c0)<=(vt2.c3)) COLLATE NOCASE ASC  NULLS FIRST, CAST(1166296217 AS REAL) ASC  NULLS FIRST, TRIM(DISTINCT '0.2799110991729946');
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt2.c2) NOT BETWEEN (vt2.lid) AND (v0.c0)) THEN vt2.c1 ELSE (((0.2213043095985484))!=((vt2.c2))) END) IS TRUE)  as count FROM vt0, v0, vt2 ORDER BY ((vt0.c0)<=(vt2.c3)) COLLATE NOCASE ASC  NULLS FIRST, CAST(1166296217 AS REAL) ASC  NULLS FIRST, TRIM(DISTINCT '0.2799110991729946'));
SELECT ALL * FROM vt0, v0, vt2 WHERE (CASE WHEN ((vt2.c2) NOT BETWEEN (vt2.lid) AND (v0.c0)) THEN vt2.c1 ELSE (((0.2213043095985484))!=((vt2.c2))) END) ORDER BY ((vt0.c0)<=(vt2.c3)) COLLATE NOCASE ASC  NULLS FIRST, CAST(1166296217 AS REAL) ASC  NULLS FIRST, TRIM(DISTINCT '0.2799110991729946');
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0) NOT BETWEEN (t0.c48) AND (t0.c48)) THEN NULLIF(t0.c48, -2001535588) ELSE '0Ka_0~]' END) ORDER BY ((((CAST(t0.c17 AS INTEGER))OR(CAST(t0.c0 AS NUMERIC))))AND(LIKELY(53937305))), (((((t0.c1))>((t0.c0)))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0) NOT BETWEEN (t0.c48) AND (t0.c48)) THEN NULLIF(t0.c48, -2001535588) ELSE '0Ka_0~]' END) IS TRUE)  as count FROM t0 ORDER BY ((((CAST(t0.c17 AS INTEGER))OR(CAST(t0.c0 AS NUMERIC))))AND(LIKELY(53937305))), (((((t0.c1))>((t0.c0)))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0) NOT BETWEEN (t0.c48) AND (t0.c48)) THEN NULLIF(t0.c48, -2001535588) ELSE '0Ka_0~]' END) ORDER BY ((((CAST(t0.c17 AS INTEGER))OR(CAST(t0.c0 AS NUMERIC))))AND(LIKELY(53937305))), (((((t0.c1))>((t0.c0)))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0) NOT BETWEEN (t0.c48) AND (t0.c48)) THEN NULLIF(t0.c48, -2001535588) ELSE '0Ka_0~]' END) IS TRUE)  as count FROM t0 ORDER BY ((((CAST(t0.c17 AS INTEGER))OR(CAST(t0.c0 AS NUMERIC))))AND(LIKELY(53937305))), (((((t0.c1))>((t0.c0)))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0) NOT BETWEEN (t0.c48) AND (t0.c48)) THEN NULLIF(t0.c48, -2001535588) ELSE '0Ka_0~]' END) ORDER BY ((((CAST(t0.c17 AS INTEGER))OR(CAST(t0.c0 AS NUMERIC))))AND(LIKELY(53937305))), (((((t0.c1))>((t0.c0)))) IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, v0 FULL OUTER JOIN vt2 ON CAST(((((v0.c0)AND(t0.c48)))OR(t0.c0)) AS NUMERIC) WHERE ((- (((t0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, v0 FULL OUTER JOIN vt2 ON CAST(((((v0.c0)AND(t0.c48)))OR(t0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM t0, vt0, v0 FULL OUTER JOIN vt2 ON CAST(((((v0.c0)AND(t0.c48)))OR(t0.c0)) AS NUMERIC) WHERE ((- (((t0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, v0 FULL OUTER JOIN vt2 ON CAST(((((v0.c0)AND(t0.c48)))OR(t0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM t0, vt0, v0 FULL OUTER JOIN vt2 ON CAST(((((v0.c0)AND(t0.c48)))OR(t0.c0)) AS NUMERIC) WHERE ((- (((t0.c0)<=(vt0.c0)))));
SELECT * FROM v0, vt2, vt0 WHERE (((((vt0.c0) BETWEEN (vt2.c0) AND (v0.c0)))>(((vt2.c0)=(vt2.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt2.c0) AND (v0.c0)))>(((vt2.c0)==(vt2.c3))))) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT * FROM v0, vt2, vt0 WHERE (((((vt0.c0) BETWEEN (vt2.c0) AND (v0.c0)))>(((vt2.c0)=(vt2.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt2.c0) AND (v0.c0)))>(((vt2.c0)==(vt2.c3))))) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT * FROM v0, vt2, vt0 WHERE (((((vt0.c0) BETWEEN (vt2.c0) AND (v0.c0)))>(((vt2.c0)=(vt2.c3)))));
SELECT ALL * FROM t0, vt2, v0, vt0 WHERE (((t0.c48)LIKE(t0.c48)) COLLATE NOCASE) ORDER BY ((((vt2.c0)||(t0.c48))) NOTNULL), CAST(((vt2.c2)|(t0.c48)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c48)LIKE(t0.c48)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt2, v0, vt0 ORDER BY ((((vt2.c0)||(t0.c48))) NOTNULL), CAST(((vt2.c2)|(t0.c48)) AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt2, v0, vt0 WHERE (((t0.c48)LIKE(t0.c48)) COLLATE NOCASE) ORDER BY ((((vt2.c0)||(t0.c48))) NOTNULL), CAST(((vt2.c2)|(t0.c48)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c48)LIKE(t0.c48)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt2, v0, vt0 ORDER BY ((((vt2.c0)||(t0.c48))) NOTNULL), CAST(((vt2.c2)|(t0.c48)) AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt2, v0, vt0 WHERE (((t0.c48)LIKE(t0.c48)) COLLATE NOCASE) ORDER BY ((((vt2.c0)||(t0.c48))) NOTNULL), CAST(((vt2.c2)|(t0.c48)) AS REAL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((v0.c0, vt0.c0, v0.c0, t0.c17, t0.c0, t0.c0, t0.c0)) BETWEEN ((CASE t0.c17  WHEN t0.c48 THEN vt0.c0 ELSE t0.c17 END, load_extension(t0.c17, vt0.c0), CASE t0.c48  WHEN t0.c0 THEN t0.c48 END, ABS(t0.c1), (+ (t0.c48)), ABS(v0.c0), t0.c17)) AND (((NOT (vt0.c0)), load_extension(t0.c0), t0.c48, CASE t0.c0  WHEN t0.c1 THEN x'' ELSE vt0.c0 END, ((x'1c6a')OR(t0.c48)), NULLIF(x'', t0.c1), ((t0.c17)IS NOT(t0.c48))))) WHERE (CAST(CASE v0.c0  WHEN vt0.c0 THEN t0.c0 END AS REAL)) ORDER BY CAST(UPPER(x'') AS NUMERIC), (((v0.c0)) BETWEEN ((((t0.c48) NOT NULL))) AND ((((t0.c48)LIKE(vt0.c0)))))  NULLS FIRST, v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE v0.c0  WHEN vt0.c0 THEN t0.c0 END AS REAL)) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((v0.c0, vt0.c0, v0.c0, t0.c17, t0.c0, t0.c0, t0.c0)) BETWEEN ((CASE t0.c17  WHEN t0.c48 THEN vt0.c0 ELSE t0.c17 END, load_extension(t0.c17, vt0.c0), CASE t0.c48  WHEN t0.c0 THEN t0.c48 END, ABS(t0.c1), (+ (t0.c48)), ABS(v0.c0), t0.c17)) AND (((NOT (vt0.c0)), load_extension(t0.c0), t0.c48, CASE t0.c0  WHEN t0.c1 THEN x'' ELSE vt0.c0 END, ((x'1c6a')OR(t0.c48)), NULLIF(x'', t0.c1), ((t0.c17)IS NOT(t0.c48))))) ORDER BY CAST(UPPER(x'') AS NUMERIC), (((v0.c0)) BETWEEN ((((t0.c48) NOT NULL))) AND ((((t0.c48)LIKE(vt0.c0)))))  NULLS FIRST, v0.c0 ASC);
SELECT ALL COUNT(*) FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((v0.c0, vt0.c0, v0.c0, t0.c17, t0.c0, t0.c0, t0.c0)) BETWEEN ((CASE t0.c17  WHEN t0.c48 THEN vt0.c0 ELSE t0.c17 END, load_extension(t0.c17, vt0.c0), CASE t0.c48  WHEN t0.c0 THEN t0.c48 END, ABS(t0.c1), (+ (t0.c48)), ABS(v0.c0), t0.c17)) AND (((NOT (vt0.c0)), load_extension(t0.c0), t0.c48, CASE t0.c0  WHEN t0.c1 THEN x'' ELSE vt0.c0 END, ((x'1c6a')OR(t0.c48)), NULLIF(x'', t0.c1), ((t0.c17)IS NOT(t0.c48))))) WHERE (CAST(CASE v0.c0  WHEN vt0.c0 THEN t0.c0 END AS REAL)) ORDER BY CAST(UPPER(x'') AS NUMERIC), (((v0.c0)) BETWEEN ((((t0.c48) NOT NULL))) AND ((((t0.c48)LIKE(vt0.c0)))))  NULLS FIRST, v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE v0.c0  WHEN vt0.c0 THEN t0.c0 END AS REAL)) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((v0.c0, vt0.c0, v0.c0, t0.c17, t0.c0, t0.c0, t0.c0)) BETWEEN ((CASE t0.c17  WHEN t0.c48 THEN vt0.c0 ELSE t0.c17 END, load_extension(t0.c17, vt0.c0), CASE t0.c48  WHEN t0.c0 THEN t0.c48 END, ABS(t0.c1), (+ (t0.c48)), ABS(v0.c0), t0.c17)) AND (((NOT (vt0.c0)), load_extension(t0.c0), t0.c48, CASE t0.c0  WHEN t0.c1 THEN x'' ELSE vt0.c0 END, ((x'1c6a')OR(t0.c48)), NULLIF(x'', t0.c1), ((t0.c17)IS NOT(t0.c48))))) ORDER BY CAST(UPPER(x'') AS NUMERIC), (((v0.c0)) BETWEEN ((((t0.c48) NOT NULL))) AND ((((t0.c48)LIKE(vt0.c0)))))  NULLS FIRST, v0.c0 ASC);
SELECT ALL COUNT(*) FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((v0.c0, vt0.c0, v0.c0, t0.c17, t0.c0, t0.c0, t0.c0)) BETWEEN ((CASE t0.c17  WHEN t0.c48 THEN vt0.c0 ELSE t0.c17 END, load_extension(t0.c17, vt0.c0), CASE t0.c48  WHEN t0.c0 THEN t0.c48 END, ABS(t0.c1), (+ (t0.c48)), ABS(v0.c0), t0.c17)) AND (((NOT (vt0.c0)), load_extension(t0.c0), t0.c48, CASE t0.c0  WHEN t0.c1 THEN x'' ELSE vt0.c0 END, ((x'1c6a')OR(t0.c48)), NULLIF(x'', t0.c1), ((t0.c17)IS NOT(t0.c48))))) WHERE (CAST(CASE v0.c0  WHEN vt0.c0 THEN t0.c0 END AS REAL)) ORDER BY CAST(UPPER(x'') AS NUMERIC), (((v0.c0)) BETWEEN ((((t0.c48) NOT NULL))) AND ((((t0.c48)LIKE(vt0.c0)))))  NULLS FIRST, v0.c0 ASC;
SELECT ALL COUNT(*) FROM v0, t0, vt0 RIGHT OUTER JOIN vt2 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))) BETWEEN (vt2.c2) AND (((vt2.c1) BETWEEN (NULL) AND (t0.c17)))) WHERE (((((vt2.c3)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))) IN ())) ORDER BY ((t0.c48 COLLATE RTRIM)+(((t0.c17) BETWEEN (vt2.c2) AND (vt2.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt2.c3)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))) IN ())) IS TRUE)  as count FROM v0, t0, vt0 RIGHT OUTER JOIN vt2 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))) BETWEEN (vt2.c2) AND (((vt2.c1) BETWEEN (NULL) AND (t0.c17)))) ORDER BY ((t0.c48 COLLATE RTRIM)+(((t0.c17) BETWEEN (vt2.c2) AND (vt2.c3))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt0 RIGHT OUTER JOIN vt2 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))) BETWEEN (vt2.c2) AND (((vt2.c1) BETWEEN (NULL) AND (t0.c17)))) WHERE (((((vt2.c3)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))) IN ())) ORDER BY ((t0.c48 COLLATE RTRIM)+(((t0.c17) BETWEEN (vt2.c2) AND (vt2.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt2.c3)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))) IN ())) IS TRUE)  as count FROM v0, t0, vt0 RIGHT OUTER JOIN vt2 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))) BETWEEN (vt2.c2) AND (((vt2.c1) BETWEEN (NULL) AND (t0.c17)))) ORDER BY ((t0.c48 COLLATE RTRIM)+(((t0.c17) BETWEEN (vt2.c2) AND (vt2.c3))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt0 RIGHT OUTER JOIN vt2 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))) BETWEEN (vt2.c2) AND (((vt2.c1) BETWEEN (NULL) AND (t0.c17)))) WHERE (((((vt2.c3)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))) IN ())) ORDER BY ((t0.c48 COLLATE RTRIM)+(((t0.c17) BETWEEN (vt2.c2) AND (vt2.c3))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c48) NOT BETWEEN (t0.c17) AND (t0.c1))))) ORDER BY (((((((((((((((((((t0.c0)OR(t0.c48)))OR(t0.c17)))AND(t0.c48)))AND(t0.c48)))AND(t0.c48)))OR('z0<{~Rꅇ')))OR('?u')))OR(t0.c48))))<>((x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c48) NOT BETWEEN (t0.c17) AND (t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY (((((((((((((((((((t0.c0)OR(t0.c48)))OR(t0.c17)))AND(t0.c48)))AND(t0.c48)))AND(t0.c48)))OR('z0<{~Rꅇ')))OR('?u')))OR(t0.c48))))<>((x'')))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c48) NOT BETWEEN (t0.c17) AND (t0.c1))))) ORDER BY (((((((((((((((((((t0.c0)OR(t0.c48)))OR(t0.c17)))AND(t0.c48)))AND(t0.c48)))AND(t0.c48)))OR('z0<{~Rꅇ')))OR('?u')))OR(t0.c48))))<>((x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c48) NOT BETWEEN (t0.c17) AND (t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY (((((((((((((((((((t0.c0)OR(t0.c48)))OR(t0.c17)))AND(t0.c48)))AND(t0.c48)))AND(t0.c48)))OR('z0<{~Rꅇ')))OR('?u')))OR(t0.c48))))<>((x'')))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c48) NOT BETWEEN (t0.c17) AND (t0.c1))))) ORDER BY (((((((((((((((((((t0.c0)OR(t0.c48)))OR(t0.c17)))AND(t0.c48)))AND(t0.c48)))AND(t0.c48)))OR('z0<{~Rꅇ')))OR('?u')))OR(t0.c48))))<>((x'')))  NULLS LAST;
SELECT * FROM vt2 CROSS JOIN vt0 ON CASE WHEN ((((t0.c48)OR(vt2.c1)))OR(vt2.lid)) THEN ROUND(vt2.lid, t0.c0) ELSE t0.c0 COLLATE RTRIM END RIGHT OUTER JOIN t0 ON (((t0.c17) BETWEEN (vt2.c3) AND (vt2.c2)) IN (CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c17 END)) WHERE ((vt0.c0 IN ())) ORDER BY (((- (vt2.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt2 CROSS JOIN vt0 ON CASE WHEN ((((t0.c48)OR(vt2.c1)))OR(vt2.lid)) THEN ROUND(vt2.lid, t0.c0) ELSE t0.c0 COLLATE RTRIM END RIGHT OUTER JOIN t0 ON (((t0.c17) BETWEEN (vt2.c3) AND (vt2.c2)) IN (CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c17 END)) ORDER BY (((- (vt2.c0))) NOTNULL) DESC);
SELECT * FROM vt2 CROSS JOIN vt0 ON CASE WHEN ((((t0.c48)OR(vt2.c1)))OR(vt2.lid)) THEN ROUND(vt2.lid, t0.c0) ELSE t0.c0 COLLATE RTRIM END RIGHT OUTER JOIN t0 ON (((t0.c17) BETWEEN (vt2.c3) AND (vt2.c2)) IN (CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c17 END)) WHERE ((vt0.c0 IN ())) ORDER BY (((- (vt2.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt2 CROSS JOIN vt0 ON CASE WHEN ((((t0.c48)OR(vt2.c1)))OR(vt2.lid)) THEN ROUND(vt2.lid, t0.c0) ELSE t0.c0 COLLATE RTRIM END RIGHT OUTER JOIN t0 ON (((t0.c17) BETWEEN (vt2.c3) AND (vt2.c2)) IN (CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c17 END)) ORDER BY (((- (vt2.c0))) NOTNULL) DESC);
SELECT COUNT(*) FROM v0, vt2, t0, vt0 WHERE (t0.c17);
SELECT SUM(count) FROM (SELECT ((t0.c17) IS TRUE)  as count FROM v0, vt2, t0, vt0);
SELECT COUNT(*) FROM v0, vt2, t0, vt0 WHERE (t0.c17);
SELECT SUM(count) FROM (SELECT ((t0.c17) IS TRUE)  as count FROM v0, vt2, t0, vt0);
SELECT COUNT(*) FROM v0, vt2, t0, vt0 WHERE (t0.c17);
SELECT * FROM v0, vt2, t0 WHERE (CAST(((vt2.lid) BETWEEN (t0.c0) AND (t0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt2.lid) BETWEEN (t0.c0) AND (t0.c1)) AS TEXT)) IS TRUE)  as count FROM v0, vt2, t0);
SELECT * FROM v0, vt2, t0 WHERE (CAST(((vt2.lid) BETWEEN (t0.c0) AND (t0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt2.lid) BETWEEN (t0.c0) AND (t0.c1)) AS TEXT)) IS TRUE)  as count FROM v0, vt2, t0);
SELECT * FROM v0, vt2, t0 WHERE (CAST(((vt2.lid) BETWEEN (t0.c0) AND (t0.c1)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0)*(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)*(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0)*(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)*(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0)*(vt0.c0)) AS NUMERIC));
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))==(((vt0.c0)IS NOT(vt0.c0))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))=(((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))==(((vt0.c0)IS NOT(vt0.c0))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))=(((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))==(((vt0.c0)IS NOT(vt0.c0))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT * FROM t0 NATURAL JOIN vt2 WHERE (CASE WHEN (((vt2.c0)) NOT BETWEEN (('950349158')) AND ((t0.c1))) THEN ((((0xffffffffa998ee1e)OR(x'')))AND(vt2.c1)) WHEN CAST(0.6037030964902661 AS BLOB) THEN NULL WHEN ((t0.c48)%(t0.c48)) THEN t0.c0 COLLATE BINARY WHEN (((vt2.c1, t0.c48, t0.c48)) NOT BETWEEN ((vt2.c0, vt2.c3, vt2.lid)) AND ((vt2.c2, t0.c0, vt2.c0))) THEN ((vt2.c1) NOTNULL) WHEN 0xffffffffacd50239 THEN ((t0.c17) BETWEEN (vt2.c2) AND (t0.c0)) ELSE NULLIF(vt2.c0, vt2.c2) END) ORDER BY (((((vt2.c0))!=((t0.c17)))) BETWEEN (((vt2.c3) ISNULL)) AND (((t0.c0) IS TRUE)))  NULLS LAST, TRIM(DISTINCT ((((t0.c48)AND(vt2.lid)))OR(vt2.c1)), (+ (vt2.lid))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt2.c0)) NOT BETWEEN (('950349158')) AND ((t0.c1))) THEN ((((0xffffffffa998ee1e)OR(x'')))AND(vt2.c1)) WHEN CAST(0.6037030964902661 AS BLOB) THEN NULL WHEN ((t0.c48)%(t0.c48)) THEN t0.c0 COLLATE BINARY WHEN (((vt2.c1, t0.c48, t0.c48)) NOT BETWEEN ((vt2.c0, vt2.c3, vt2.lid)) AND ((vt2.c2, t0.c0, vt2.c0))) THEN ((vt2.c1) NOTNULL) WHEN 0Xffffffffacd50239 THEN ((t0.c17) BETWEEN (vt2.c2) AND (t0.c0)) ELSE NULLIF(vt2.c0, vt2.c2) END) IS TRUE)  as count FROM t0 NATURAL JOIN vt2 ORDER BY (((((vt2.c0))<>((t0.c17)))) BETWEEN (((vt2.c3) ISNULL)) AND (((t0.c0) IS TRUE)))  NULLS LAST, TRIM(DISTINCT ((((t0.c48)AND(vt2.lid)))OR(vt2.c1)), (+ (vt2.lid))) DESC  NULLS FIRST);
SELECT * FROM t0 NATURAL JOIN vt2 WHERE (CASE WHEN (((vt2.c0)) NOT BETWEEN (('950349158')) AND ((t0.c1))) THEN ((((0xffffffffa998ee1e)OR(x'')))AND(vt2.c1)) WHEN CAST(0.6037030964902661 AS BLOB) THEN NULL WHEN ((t0.c48)%(t0.c48)) THEN t0.c0 COLLATE BINARY WHEN (((vt2.c1, t0.c48, t0.c48)) NOT BETWEEN ((vt2.c0, vt2.c3, vt2.lid)) AND ((vt2.c2, t0.c0, vt2.c0))) THEN ((vt2.c1) NOTNULL) WHEN 0xffffffffacd50239 THEN ((t0.c17) BETWEEN (vt2.c2) AND (t0.c0)) ELSE NULLIF(vt2.c0, vt2.c2) END) ORDER BY (((((vt2.c0))!=((t0.c17)))) BETWEEN (((vt2.c3) ISNULL)) AND (((t0.c0) IS TRUE)))  NULLS LAST, TRIM(DISTINCT ((((t0.c48)AND(vt2.lid)))OR(vt2.c1)), (+ (vt2.lid))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt2.c0)) NOT BETWEEN (('950349158')) AND ((t0.c1))) THEN ((((0xffffffffa998ee1e)OR(x'')))AND(vt2.c1)) WHEN CAST(0.6037030964902661 AS BLOB) THEN NULL WHEN ((t0.c48)%(t0.c48)) THEN t0.c0 COLLATE BINARY WHEN (((vt2.c1, t0.c48, t0.c48)) NOT BETWEEN ((vt2.c0, vt2.c3, vt2.lid)) AND ((vt2.c2, t0.c0, vt2.c0))) THEN ((vt2.c1) NOTNULL) WHEN 0Xffffffffacd50239 THEN ((t0.c17) BETWEEN (vt2.c2) AND (t0.c0)) ELSE NULLIF(vt2.c0, vt2.c2) END) IS TRUE)  as count FROM t0 NATURAL JOIN vt2 ORDER BY (((((vt2.c0))<>((t0.c17)))) BETWEEN (((vt2.c3) ISNULL)) AND (((t0.c0) IS TRUE)))  NULLS LAST, TRIM(DISTINCT ((((t0.c48)AND(vt2.lid)))OR(vt2.c1)), (+ (vt2.lid))) DESC  NULLS FIRST);
SELECT * FROM t0 NATURAL JOIN vt2 WHERE (CASE WHEN (((vt2.c0)) NOT BETWEEN (('950349158')) AND ((t0.c1))) THEN ((((0xffffffffa998ee1e)OR(x'')))AND(vt2.c1)) WHEN CAST(0.6037030964902661 AS BLOB) THEN NULL WHEN ((t0.c48)%(t0.c48)) THEN t0.c0 COLLATE BINARY WHEN (((vt2.c1, t0.c48, t0.c48)) NOT BETWEEN ((vt2.c0, vt2.c3, vt2.lid)) AND ((vt2.c2, t0.c0, vt2.c0))) THEN ((vt2.c1) NOTNULL) WHEN 0xffffffffacd50239 THEN ((t0.c17) BETWEEN (vt2.c2) AND (t0.c0)) ELSE NULLIF(vt2.c0, vt2.c2) END) ORDER BY (((((vt2.c0))!=((t0.c17)))) BETWEEN (((vt2.c3) ISNULL)) AND (((t0.c0) IS TRUE)))  NULLS LAST, TRIM(DISTINCT ((((t0.c48)AND(vt2.lid)))OR(vt2.c1)), (+ (vt2.lid))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN t0 WHERE ((((((0.9743598864010847, t0.c1, t0.c0)) BETWEEN ((t0.c0, v0.c0, t0.c1)) AND ((t0.c0, '-479625995', t0.c1))))IS((')uﰜ%Q>' IN (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.9743598864010847, t0.c1, t0.c0)) BETWEEN ((t0.c0, v0.c0, t0.c1)) AND ((t0.c0, '-479625995', t0.c1))))IS((')uﰜ%Q>' IN (t0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN t0 WHERE ((((((0.9743598864010847, t0.c1, t0.c0)) BETWEEN ((t0.c0, v0.c0, t0.c1)) AND ((t0.c0, '-479625995', t0.c1))))IS((')uﰜ%Q>' IN (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.9743598864010847, t0.c1, t0.c0)) BETWEEN ((t0.c0, v0.c0, t0.c1)) AND ((t0.c0, '-479625995', t0.c1))))IS((')uﰜ%Q>' IN (t0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN t0 WHERE ((((((0.9743598864010847, t0.c1, t0.c0)) BETWEEN ((t0.c0, v0.c0, t0.c1)) AND ((t0.c0, '-479625995', t0.c1))))IS((')uﰜ%Q>' IN (t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c1)GLOB(t0.c48)))AND((- (t0.c0)))))OR(((((t0.c0)OR(t0.c48)))AND(t0.c1))))) ORDER BY '0.6895213826275555'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)GLOB(t0.c48)))AND((- (t0.c0)))))OR(((((t0.c0)OR(t0.c48)))AND(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY '0.6895213826275555'  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c1)GLOB(t0.c48)))AND((- (t0.c0)))))OR(((((t0.c0)OR(t0.c48)))AND(t0.c1))))) ORDER BY '0.6895213826275555'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)GLOB(t0.c48)))AND((- (t0.c0)))))OR(((((t0.c0)OR(t0.c48)))AND(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY '0.6895213826275555'  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c1)GLOB(t0.c48)))AND((- (t0.c0)))))OR(((((t0.c0)OR(t0.c48)))AND(t0.c1))))) ORDER BY '0.6895213826275555'  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN v0 ON t0.c48 WHERE (t0.c0) ORDER BY CASE WHEN ((((t0.c0)AND(t0.c17)))AND(t0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN TYPEOF(DISTINCT v0.c0) THEN vt0.c0 COLLATE RTRIM WHEN t0.c48 THEN (+ (v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN v0 ON t0.c48 ORDER BY CASE WHEN ((((t0.c0)AND(t0.c17)))AND(t0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN TYPEOF(DISTINCT v0.c0) THEN vt0.c0 COLLATE RTRIM WHEN t0.c48 THEN (+ (v0.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN v0 ON t0.c48 WHERE (t0.c0) ORDER BY CASE WHEN ((((t0.c0)AND(t0.c17)))AND(t0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN TYPEOF(DISTINCT v0.c0) THEN vt0.c0 COLLATE RTRIM WHEN t0.c48 THEN (+ (v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN v0 ON t0.c48 ORDER BY CASE WHEN ((((t0.c0)AND(t0.c17)))AND(t0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN TYPEOF(DISTINCT v0.c0) THEN vt0.c0 COLLATE RTRIM WHEN t0.c48 THEN (+ (v0.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN v0 ON t0.c48 WHERE (t0.c0) ORDER BY CASE WHEN ((((t0.c0)AND(t0.c17)))AND(t0.c0)) THEN CAST(t0.c0 AS TEXT) WHEN TYPEOF(DISTINCT v0.c0) THEN vt0.c0 COLLATE RTRIM WHEN t0.c48 THEN (+ (v0.c0)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt2, t0, v0 WHERE ((((t0.c1 IN ())) NOT BETWEEN (((((((((vt2.c1)OR(vt2.c3)))OR(vt2.c0)))OR(t0.c17)))AND(v0.c0))) AND (((NULL)AND('839333952'))))) ORDER BY ((((vt2.c0) IS FALSE))|(''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ())) NOT BETWEEN (((((((((vt2.c1)OR(vt2.c3)))OR(vt2.c0)))OR(t0.c17)))AND(v0.c0))) AND (((NULL)AND('839333952'))))) IS TRUE)  as count FROM vt0, vt2, t0, v0 NOT INDEXED ORDER BY ((((vt2.c0) IS FALSE))|(''))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt2, t0, v0 WHERE ((((t0.c1 IN ())) NOT BETWEEN (((((((((vt2.c1)OR(vt2.c3)))OR(vt2.c0)))OR(t0.c17)))AND(v0.c0))) AND (((NULL)AND('839333952'))))) ORDER BY ((((vt2.c0) IS FALSE))|(''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ())) NOT BETWEEN (((((((((vt2.c1)OR(vt2.c3)))OR(vt2.c0)))OR(t0.c17)))AND(v0.c0))) AND (((NULL)AND('839333952'))))) IS TRUE)  as count FROM vt0, vt2, t0, v0 NOT INDEXED ORDER BY ((((vt2.c0) IS FALSE))|(''))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt2, t0, v0 WHERE ((((t0.c1 IN ())) NOT BETWEEN (((((((((vt2.c1)OR(vt2.c3)))OR(vt2.c0)))OR(t0.c17)))AND(v0.c0))) AND (((NULL)AND('839333952'))))) ORDER BY ((((vt2.c0) IS FALSE))|(''))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY) ORDER BY (((~ (vt0.c0)))<=(((((vt0.c0)AND(1710724494)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))<=(((((vt0.c0)AND(1710724494)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY) ORDER BY (((~ (vt0.c0)))<=(((((vt0.c0)AND(1710724494)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))<=(((((vt0.c0)AND(1710724494)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY) ORDER BY (((~ (vt0.c0)))<=(((((vt0.c0)AND(1710724494)))AND(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((0xffffffffce3d0821))==((vt0.c0))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((0xffffffffce3d0821))=((vt0.c0))) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((0xffffffffce3d0821))==((vt0.c0))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((0xffffffffce3d0821))=((vt0.c0))) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((0xffffffffce3d0821))==((vt0.c0))) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((t0.c1)|(((t0.c1) BETWEEN (t0.c17) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)|(((t0.c1) BETWEEN (t0.c17) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c1)|(((t0.c1) BETWEEN (t0.c17) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)|(((t0.c1) BETWEEN (t0.c17) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c1)|(((t0.c1) BETWEEN (t0.c17) AND (t0.c0)))));
SELECT COUNT(*) FROM v0, t0, vt2, vt0 WHERE (((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(CAST(vt2.c3 AS NUMERIC)))) ORDER BY NULLIF(DISTINCT (((vt2.c0))<>((t0.c48))), (((t0.c0))>((t0.c48))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(CAST(vt2.c3 AS NUMERIC)))) IS TRUE)  as count FROM v0, t0, vt2, vt0 ORDER BY NULLIF(DISTINCT (((vt2.c0))<>((t0.c48))), (((t0.c0))>((t0.c48))))  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, vt2, vt0 WHERE (((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(CAST(vt2.c3 AS NUMERIC)))) ORDER BY NULLIF(DISTINCT (((vt2.c0))<>((t0.c48))), (((t0.c0))>((t0.c48))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(CAST(vt2.c3 AS NUMERIC)))) IS TRUE)  as count FROM v0, t0, vt2, vt0 ORDER BY NULLIF(DISTINCT (((vt2.c0))<>((t0.c48))), (((t0.c0))>((t0.c48))))  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, vt2, vt0 WHERE (((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(CAST(vt2.c3 AS NUMERIC)))) ORDER BY NULLIF(DISTINCT (((vt2.c0))<>((t0.c48))), (((t0.c0))>((t0.c48))))  NULLS LAST;
SELECT * FROM v0 WHERE (CASE (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))  WHEN v0.c0 COLLATE BINARY THEN (((NULL, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND (('182449930', v0.c0, v0.c0))) WHEN v0.c0 THEN (((('<H-FT')OR(v0.c0)))OR(v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN (v0.c0 IN (v0.c0, v0.c0)) ELSE (((v0.c0))<=((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))  WHEN v0.c0 COLLATE BINARY THEN (((NULL, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND (('182449930', v0.c0, v0.c0))) WHEN v0.c0 THEN (((('<H-FT')OR(v0.c0)))OR(v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN (v0.c0 IN (v0.c0, v0.c0)) ELSE (((v0.c0))<=((v0.c0))) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))  WHEN v0.c0 COLLATE BINARY THEN (((NULL, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND (('182449930', v0.c0, v0.c0))) WHEN v0.c0 THEN (((('<H-FT')OR(v0.c0)))OR(v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN (v0.c0 IN (v0.c0, v0.c0)) ELSE (((v0.c0))<=((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))  WHEN v0.c0 COLLATE BINARY THEN (((NULL, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND (('182449930', v0.c0, v0.c0))) WHEN v0.c0 THEN (((('<H-FT')OR(v0.c0)))OR(v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN (v0.c0 IN (v0.c0, v0.c0)) ELSE (((v0.c0))<=((v0.c0))) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))  WHEN v0.c0 COLLATE BINARY THEN (((NULL, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND (('182449930', v0.c0, v0.c0))) WHEN v0.c0 THEN (((('<H-FT')OR(v0.c0)))OR(v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN (v0.c0 IN (v0.c0, v0.c0)) ELSE (((v0.c0))<=((v0.c0))) END);
SELECT * FROM vt2, t0, v0, vt0 WHERE ((((CASE vt2.c3  WHEN vt2.c0 THEN t0.c0 WHEN vt2.c1 THEN t0.c0 WHEN vt2.lid THEN vt2.c2 ELSE t0.c1 END, DATE(t0.c48, vt2.c1, vt2.lid), ((-1.780254237E9) NOT BETWEEN (v0.c0) AND (t0.c1))))!=((((t0.c1) NOTNULL), x'', ((vt2.c1)/(t0.c17))))));
SELECT SUM(count) FROM (SELECT (((((CASE vt2.c3  WHEN vt2.c0 THEN t0.c0 WHEN vt2.c1 THEN t0.c0 WHEN vt2.lid THEN vt2.c2 ELSE t0.c1 END, DATE(t0.c48, vt2.c1, vt2.lid), ((-1.780254237E9) NOT BETWEEN (v0.c0) AND (t0.c1))))!=((((t0.c1) NOTNULL), x'', ((vt2.c1)/(t0.c17)))))) IS TRUE)  as count FROM vt2, t0, v0, vt0);
SELECT * FROM vt2, t0, v0, vt0 WHERE ((((CASE vt2.c3  WHEN vt2.c0 THEN t0.c0 WHEN vt2.c1 THEN t0.c0 WHEN vt2.lid THEN vt2.c2 ELSE t0.c1 END, DATE(t0.c48, vt2.c1, vt2.lid), ((-1.780254237E9) NOT BETWEEN (v0.c0) AND (t0.c1))))!=((((t0.c1) NOTNULL), x'', ((vt2.c1)/(t0.c17))))));
SELECT SUM(count) FROM (SELECT (((((CASE vt2.c3  WHEN vt2.c0 THEN t0.c0 WHEN vt2.c1 THEN t0.c0 WHEN vt2.lid THEN vt2.c2 ELSE t0.c1 END, DATE(t0.c48, vt2.c1, vt2.lid), ((-1.780254237E9) NOT BETWEEN (v0.c0) AND (t0.c1))))!=((((t0.c1) NOTNULL), x'', ((vt2.c1)/(t0.c17)))))) IS TRUE)  as count FROM vt2, t0, v0, vt0);
SELECT * FROM vt2, t0, v0, vt0 WHERE ((((CASE vt2.c3  WHEN vt2.c0 THEN t0.c0 WHEN vt2.c1 THEN t0.c0 WHEN vt2.lid THEN vt2.c2 ELSE t0.c1 END, DATE(t0.c48, vt2.c1, vt2.lid), ((-1.780254237E9) NOT BETWEEN (v0.c0) AND (t0.c1))))!=((((t0.c1) NOTNULL), x'', ((vt2.c1)/(t0.c17))))));
SELECT ALL * FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (vt0.c0);
SELECT * FROM t0 WHERE ((((t0.c17 IN ())) BETWEEN (((t0.c1) NOTNULL)) AND (((t0.c1) BETWEEN (t0.c48) AND (t0.c48))))) ORDER BY ((t0.c17)&(t0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c17 IN ())) BETWEEN (((t0.c1) NOTNULL)) AND (((t0.c1) BETWEEN (t0.c48) AND (t0.c48))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c17)&(t0.c0)) COLLATE RTRIM ASC);
SELECT * FROM t0 WHERE ((((t0.c17 IN ())) BETWEEN (((t0.c1) NOTNULL)) AND (((t0.c1) BETWEEN (t0.c48) AND (t0.c48))))) ORDER BY ((t0.c17)&(t0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c17 IN ())) BETWEEN (((t0.c1) NOTNULL)) AND (((t0.c1) BETWEEN (t0.c48) AND (t0.c48))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c17)&(t0.c0)) COLLATE RTRIM ASC);
SELECT * FROM t0 WHERE ((((t0.c17 IN ())) BETWEEN (((t0.c1) NOTNULL)) AND (((t0.c1) BETWEEN (t0.c48) AND (t0.c48))))) ORDER BY ((t0.c17)&(t0.c0)) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM t0, v0 WHERE (ABS(DISTINCT ((((t0.c0)AND(t0.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((((t0.c0)AND(t0.c0)))AND(v0.c0)))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (ABS(DISTINCT ((((t0.c0)AND(t0.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((((t0.c0)AND(t0.c0)))AND(v0.c0)))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (ABS(DISTINCT ((((t0.c0)AND(t0.c0)))AND(v0.c0))));
SELECT * FROM v0 WHERE (v0.c0) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY v0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt2 WHERE ((+ (((v0.c0)>=(vt2.c2))))) ORDER BY (NOT (((vt2.c3)>(vt2.lid)))), (+ ((v0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0)>=(vt2.c2))))) IS TRUE)  as count FROM v0, vt2 ORDER BY (NOT (((vt2.c3)>(vt2.lid)))), (+ ((v0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt2 WHERE ((+ (((v0.c0)>=(vt2.c2))))) ORDER BY (NOT (((vt2.c3)>(vt2.lid)))), (+ ((v0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0)>=(vt2.c2))))) IS TRUE)  as count FROM v0, vt2 ORDER BY (NOT (((vt2.c3)>(vt2.lid)))), (+ ((v0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt2 WHERE ((+ (((v0.c0)>=(vt2.c2))))) ORDER BY (NOT (((vt2.c3)>(vt2.lid)))), (+ ((v0.c0 IN ()))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt2, vt0, v0, t0 WHERE ((((vt2.lid)) NOT BETWEEN ((CAST(vt2.c2 AS INTEGER))) AND ((t0.c17 COLLATE RTRIM)))) ORDER BY HEX(((vt2.c2)||(t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt2.lid)) NOT BETWEEN ((CAST(vt2.c2 AS INTEGER))) AND ((t0.c17 COLLATE RTRIM)))) IS TRUE)  as count FROM vt2, vt0, v0, t0 ORDER BY HEX(((vt2.c2)||(t0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt2, vt0, v0, t0 WHERE ((((vt2.lid)) NOT BETWEEN ((CAST(vt2.c2 AS INTEGER))) AND ((t0.c17 COLLATE RTRIM)))) ORDER BY HEX(((vt2.c2)||(t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt2.lid)) NOT BETWEEN ((CAST(vt2.c2 AS INTEGER))) AND ((t0.c17 COLLATE RTRIM)))) IS TRUE)  as count FROM vt2, vt0, v0, t0 ORDER BY HEX(((vt2.c2)||(t0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt2, vt0, v0, t0 WHERE ((((vt2.lid)) NOT BETWEEN ((CAST(vt2.c2 AS INTEGER))) AND ((t0.c17 COLLATE RTRIM)))) ORDER BY HEX(((vt2.c2)||(t0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt2 ON ((((vt0.c0) NOT NULL)) IS TRUE) RIGHT OUTER JOIN vt0 ON LOWER(CAST(t0.c48 AS TEXT)) RIGHT OUTER JOIN t0 ON ((vt2.lid COLLATE BINARY)GLOB(((((t0.c17)AND(vt2.c2)))AND(t0.c48)))) WHERE (((((((((((vt2.lid)==(vt2.c2)))OR((((x'', vt2.lid, vt2.c1)) BETWEEN (('-306262679', t0.c0, vt2.c0)) AND ((vt2.c0, vt2.lid, vt2.c1))))))OR(CAST(vt0.c0 AS INTEGER))))AND(((t0.c0) BETWEEN (t0.c1) AND (vt2.c2)))))OR(((t0.c17)IS(vt2.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt2.lid)=(vt2.c2)))OR((((x'', vt2.lid, vt2.c1)) BETWEEN (('-306262679', t0.c0, vt2.c0)) AND ((vt2.c0, vt2.lid, vt2.c1))))))OR(CAST(vt0.c0 AS INTEGER))))AND(((t0.c0) BETWEEN (t0.c1) AND (vt2.c2)))))OR(((t0.c17)IS(vt2.c3))))) IS TRUE)  as count FROM v0 INNER JOIN vt2 ON ((((vt0.c0) NOT NULL)) IS TRUE) RIGHT OUTER JOIN vt0 ON LOWER(CAST(t0.c48 AS TEXT)) RIGHT OUTER JOIN t0 ON ((vt2.lid COLLATE BINARY)GLOB(((((t0.c17)AND(vt2.c2)))AND(t0.c48)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt2 ON ((((vt0.c0) NOT NULL)) IS TRUE) RIGHT OUTER JOIN vt0 ON LOWER(CAST(t0.c48 AS TEXT)) RIGHT OUTER JOIN t0 ON ((vt2.lid COLLATE BINARY)GLOB(((((t0.c17)AND(vt2.c2)))AND(t0.c48)))) WHERE (((((((((((vt2.lid)==(vt2.c2)))OR((((x'', vt2.lid, vt2.c1)) BETWEEN (('-306262679', t0.c0, vt2.c0)) AND ((vt2.c0, vt2.lid, vt2.c1))))))OR(CAST(vt0.c0 AS INTEGER))))AND(((t0.c0) BETWEEN (t0.c1) AND (vt2.c2)))))OR(((t0.c17)IS(vt2.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt2.lid)=(vt2.c2)))OR((((x'', vt2.lid, vt2.c1)) BETWEEN (('-306262679', t0.c0, vt2.c0)) AND ((vt2.c0, vt2.lid, vt2.c1))))))OR(CAST(vt0.c0 AS INTEGER))))AND(((t0.c0) BETWEEN (t0.c1) AND (vt2.c2)))))OR(((t0.c17)IS(vt2.c3))))) IS TRUE)  as count FROM v0 INNER JOIN vt2 ON ((((vt0.c0) NOT NULL)) IS TRUE) RIGHT OUTER JOIN vt0 ON LOWER(CAST(t0.c48 AS TEXT)) RIGHT OUTER JOIN t0 ON ((vt2.lid COLLATE BINARY)GLOB(((((t0.c17)AND(vt2.c2)))AND(t0.c48)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)||(vt0.c0)) IN (NULL))) ORDER BY (((NULL, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC))) AND ((((vt0.c0)&(vt0.c0)), '-306262679', vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)||(vt0.c0)) IN (NULL))) IS TRUE)  as count FROM vt0 ORDER BY (((NULL, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC))) AND ((((vt0.c0)&(vt0.c0)), '-306262679', vt0.c0))) DESC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)||(vt0.c0)) IN (NULL))) ORDER BY (((NULL, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC))) AND ((((vt0.c0)&(vt0.c0)), '-306262679', vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)||(vt0.c0)) IN (NULL))) IS TRUE)  as count FROM vt0 ORDER BY (((NULL, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC))) AND ((((vt0.c0)&(vt0.c0)), '-306262679', vt0.c0))) DESC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)||(vt0.c0)) IN (NULL))) ORDER BY (((NULL, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC))) AND ((((vt0.c0)&(vt0.c0)), '-306262679', vt0.c0))) DESC;
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE ('0.01501969474084297') ORDER BY (((vt0.c0)) BETWEEN ((((v0.c0) ISNULL))) AND ((((vt2.c0) NOTNULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('0.01501969474084297') IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY (((vt0.c0)) BETWEEN ((((v0.c0) ISNULL))) AND ((((vt2.c0) NOTNULL)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE ('0.01501969474084297') ORDER BY (((vt0.c0)) BETWEEN ((((v0.c0) ISNULL))) AND ((((vt2.c0) NOTNULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('0.01501969474084297') IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY (((vt0.c0)) BETWEEN ((((v0.c0) ISNULL))) AND ((((vt2.c0) NOTNULL)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE ('0.01501969474084297') ORDER BY (((vt0.c0)) BETWEEN ((((v0.c0) ISNULL))) AND ((((vt2.c0) NOTNULL)))) DESC  NULLS FIRST;
SELECT * FROM t0, vt0, vt2, v0 WHERE (((((((vt2.c1)=(x'eb11')))AND((x'b4bf' IN ()))))AND(vt2.c0)));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c1)==(x'eb11')))AND((x'b4bf' IN ()))))AND(vt2.c0))) IS TRUE)  as count FROM t0, vt0, vt2, v0);
SELECT * FROM t0, vt0, vt2, v0 WHERE (((((((vt2.c1)=(x'eb11')))AND((x'b4bf' IN ()))))AND(vt2.c0)));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c1)==(x'eb11')))AND((x'b4bf' IN ()))))AND(vt2.c0))) IS TRUE)  as count FROM t0, vt0, vt2, v0);
SELECT * FROM t0, vt0, vt2, v0 WHERE (((((((vt2.c1)=(x'eb11')))AND((x'b4bf' IN ()))))AND(vt2.c0)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c0) IS TRUE))>=(((t0.c1)==(v0.c0)))) RIGHT OUTER JOIN t0 ON ((((((((CAST(t0.c0 AS INTEGER))OR(((v0.c0) NOT BETWEEN (t0.c1) AND (vt2.c3)))))AND(CASE vt2.lid  WHEN vt2.lid THEN vt2.c0 END)))OR(((((vt2.c3)OR(t0.c1)))AND(t0.c48)))))OR(vt2.c1 COLLATE RTRIM)) INNER JOIN vt2 ON ((((((((((t0.c17)>=(vt2.c3)))OR(((v0.c0)*(vt2.c0)))))OR(NULL)))AND(v0.c0 COLLATE BINARY)))AND((+ (vt2.lid)))) WHERE ((((+ (t0.c17)))GLOB(((((vt2.lid)AND(t0.c1)))OR(v0.c0))))) ORDER BY 0.6499197113793972 DESC  NULLS FIRST, CAST(vt0.c0 AS TEXT), ((((t0.c48) NOT BETWEEN (t0.c17) AND (t0.c17))) BETWEEN ((vt2.lid IN ())) AND (((vt2.lid) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c17)))GLOB(((((vt2.lid)AND(t0.c1)))OR(v0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c0) IS TRUE))>=(((t0.c1)=(v0.c0)))) RIGHT OUTER JOIN t0 ON ((((((((CAST(t0.c0 AS INTEGER))OR(((v0.c0) NOT BETWEEN (t0.c1) AND (vt2.c3)))))AND(CASE vt2.lid  WHEN vt2.lid THEN vt2.c0 END)))OR(((((vt2.c3)OR(t0.c1)))AND(t0.c48)))))OR(vt2.c1 COLLATE RTRIM)) INNER JOIN vt2 ON ((((((((((t0.c17)>=(vt2.c3)))OR(((v0.c0)*(vt2.c0)))))OR(NULL)))AND(v0.c0 COLLATE BINARY)))AND((+ (vt2.lid)))) ORDER BY 0.6499197113793972 DESC  NULLS FIRST, CAST(vt0.c0 AS TEXT), ((((t0.c48) NOT BETWEEN (t0.c17) AND (t0.c17))) BETWEEN ((vt2.lid IN ())) AND (((vt2.lid) IS FALSE))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c0) IS TRUE))>=(((t0.c1)==(v0.c0)))) RIGHT OUTER JOIN t0 ON ((((((((CAST(t0.c0 AS INTEGER))OR(((v0.c0) NOT BETWEEN (t0.c1) AND (vt2.c3)))))AND(CASE vt2.lid  WHEN vt2.lid THEN vt2.c0 END)))OR(((((vt2.c3)OR(t0.c1)))AND(t0.c48)))))OR(vt2.c1 COLLATE RTRIM)) INNER JOIN vt2 ON ((((((((((t0.c17)>=(vt2.c3)))OR(((v0.c0)*(vt2.c0)))))OR(NULL)))AND(v0.c0 COLLATE BINARY)))AND((+ (vt2.lid)))) WHERE ((((+ (t0.c17)))GLOB(((((vt2.lid)AND(t0.c1)))OR(v0.c0))))) ORDER BY 0.6499197113793972 DESC  NULLS FIRST, CAST(vt0.c0 AS TEXT), ((((t0.c48) NOT BETWEEN (t0.c17) AND (t0.c17))) BETWEEN ((vt2.lid IN ())) AND (((vt2.lid) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c17)))GLOB(((((vt2.lid)AND(t0.c1)))OR(v0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c0) IS TRUE))>=(((t0.c1)=(v0.c0)))) RIGHT OUTER JOIN t0 ON ((((((((CAST(t0.c0 AS INTEGER))OR(((v0.c0) NOT BETWEEN (t0.c1) AND (vt2.c3)))))AND(CASE vt2.lid  WHEN vt2.lid THEN vt2.c0 END)))OR(((((vt2.c3)OR(t0.c1)))AND(t0.c48)))))OR(vt2.c1 COLLATE RTRIM)) INNER JOIN vt2 ON ((((((((((t0.c17)>=(vt2.c3)))OR(((v0.c0)*(vt2.c0)))))OR(NULL)))AND(v0.c0 COLLATE BINARY)))AND((+ (vt2.lid)))) ORDER BY 0.6499197113793972 DESC  NULLS FIRST, CAST(vt0.c0 AS TEXT), ((((t0.c48) NOT BETWEEN (t0.c17) AND (t0.c17))) BETWEEN ((vt2.lid IN ())) AND (((vt2.lid) IS FALSE))) DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (LOWER(CAST(v0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(CAST(v0.c0 AS INTEGER))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LOWER(CAST(v0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(CAST(v0.c0 AS INTEGER))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LOWER(CAST(v0.c0 AS INTEGER)));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON LIKELY((((v0.c0)) BETWEEN ((t0.c48)) AND ((t0.c48)))) INNER JOIN vt0 ON ((t0.c48)AND(vt0.c0)) COLLATE BINARY WHERE ((((696040669 IN ())) BETWEEN (470759172) AND (((t0.c0)>=(vt0.c0))))) ORDER BY (((t0.c1)) BETWEEN ((CAST(v0.c0 AS TEXT))) AND ((((((t0.c48)AND(t0.c17)))AND(t0.c48)))))  NULLS FIRST, CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE, ((CASE t0.c17  WHEN 0.6499197113793972 THEN t0.c17 WHEN t0.c17 THEN v0.c0 WHEN '0.09565454329511369' THEN v0.c0 ELSE t0.c1 END)<(vt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((696040669 IN ())) BETWEEN (470759172) AND (((t0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON LIKELY((((v0.c0)) BETWEEN ((t0.c48)) AND ((t0.c48)))) INNER JOIN vt0 ON ((t0.c48)AND(vt0.c0)) COLLATE BINARY ORDER BY (((t0.c1)) BETWEEN ((CAST(v0.c0 AS TEXT))) AND ((((((t0.c48)AND(t0.c17)))AND(t0.c48)))))  NULLS FIRST, CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE, ((CASE t0.c17  WHEN 0.6499197113793972 THEN t0.c17 WHEN t0.c17 THEN v0.c0 WHEN '0.09565454329511369' THEN v0.c0 ELSE t0.c1 END)<(vt0.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON LIKELY((((v0.c0)) BETWEEN ((t0.c48)) AND ((t0.c48)))) INNER JOIN vt0 ON ((t0.c48)AND(vt0.c0)) COLLATE BINARY WHERE ((((696040669 IN ())) BETWEEN (470759172) AND (((t0.c0)>=(vt0.c0))))) ORDER BY (((t0.c1)) BETWEEN ((CAST(v0.c0 AS TEXT))) AND ((((((t0.c48)AND(t0.c17)))AND(t0.c48)))))  NULLS FIRST, CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE, ((CASE t0.c17  WHEN 0.6499197113793972 THEN t0.c17 WHEN t0.c17 THEN v0.c0 WHEN '0.09565454329511369' THEN v0.c0 ELSE t0.c1 END)<(vt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((696040669 IN ())) BETWEEN (470759172) AND (((t0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON LIKELY((((v0.c0)) BETWEEN ((t0.c48)) AND ((t0.c48)))) INNER JOIN vt0 ON ((t0.c48)AND(vt0.c0)) COLLATE BINARY ORDER BY (((t0.c1)) BETWEEN ((CAST(v0.c0 AS TEXT))) AND ((((((t0.c48)AND(t0.c17)))AND(t0.c48)))))  NULLS FIRST, CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE, ((CASE t0.c17  WHEN 0.6499197113793972 THEN t0.c17 WHEN t0.c17 THEN v0.c0 WHEN '0.09565454329511369' THEN v0.c0 ELSE t0.c1 END)<(vt0.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON LIKELY((((v0.c0)) BETWEEN ((t0.c48)) AND ((t0.c48)))) INNER JOIN vt0 ON ((t0.c48)AND(vt0.c0)) COLLATE BINARY WHERE ((((696040669 IN ())) BETWEEN (470759172) AND (((t0.c0)>=(vt0.c0))))) ORDER BY (((t0.c1)) BETWEEN ((CAST(v0.c0 AS TEXT))) AND ((((((t0.c48)AND(t0.c17)))AND(t0.c48)))))  NULLS FIRST, CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE, ((CASE t0.c17  WHEN 0.6499197113793972 THEN t0.c17 WHEN t0.c17 THEN v0.c0 WHEN '0.09565454329511369' THEN v0.c0 ELSE t0.c1 END)<(vt0.c0)) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE) ORDER BY ((((~ (vt0.c0))))>=((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ASC, CAST(vt0.c0 COLLATE BINARY AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((~ (vt0.c0))))>=((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ASC, CAST(vt0.c0 COLLATE BINARY AS INTEGER)  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE) ORDER BY ((((~ (vt0.c0))))>=((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ASC, CAST(vt0.c0 COLLATE BINARY AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((~ (vt0.c0))))>=((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ASC, CAST(vt0.c0 COLLATE BINARY AS INTEGER)  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE) ORDER BY ((((~ (vt0.c0))))>=((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ASC, CAST(vt0.c0 COLLATE BINARY AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, vt2, v0 WHERE (TYPEOF(vt2.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((TYPEOF(vt2.c2 COLLATE BINARY)) IS TRUE)  as count FROM t0, vt0, vt2, v0);
SELECT ALL COUNT(*) FROM t0, vt0, vt2, v0 WHERE (TYPEOF(vt2.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((TYPEOF(vt2.c2 COLLATE BINARY)) IS TRUE)  as count FROM t0, vt0, vt2, v0);
SELECT ALL COUNT(*) FROM t0, vt0, vt2, v0 WHERE (TYPEOF(vt2.c2 COLLATE BINARY));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON HEX(((t0.c1) NOT NULL)) FULL OUTER JOIN t0 ON (NOT ((vt0.c0 IN ()))) WHERE (((LIKELY(DISTINCT x'65e6')) BETWEEN (((v0.c0) ISNULL)) AND ((((t0.c48))!=((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT x'65e6')) BETWEEN (((v0.c0) ISNULL)) AND ((((t0.c48))!=((t0.c1)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON HEX(((t0.c1) NOT NULL)) FULL OUTER JOIN t0 ON (NOT ((vt0.c0 IN ()))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON HEX(((t0.c1) NOT NULL)) FULL OUTER JOIN t0 ON (NOT ((vt0.c0 IN ()))) WHERE (((LIKELY(DISTINCT x'65e6')) BETWEEN (((v0.c0) ISNULL)) AND ((((t0.c48))!=((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT x'65e6')) BETWEEN (((v0.c0) ISNULL)) AND ((((t0.c48))!=((t0.c1)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON HEX(((t0.c1) NOT NULL)) FULL OUTER JOIN t0 ON (NOT ((vt0.c0 IN ()))));
SELECT COUNT(*) FROM v0, vt2, vt0, t0 WHERE ((((vt2.c2 IN ()))&(((vt2.lid)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt2.c2 IN ()))&(((vt2.lid)IS NOT(t0.c0))))) IS TRUE)  as count FROM v0, vt2, vt0 NOT INDEXED, t0);
SELECT COUNT(*) FROM v0, vt2, vt0, t0 WHERE ((((vt2.c2 IN ()))&(((vt2.lid)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt2.c2 IN ()))&(((vt2.lid)IS NOT(t0.c0))))) IS TRUE)  as count FROM v0, vt2, vt0 NOT INDEXED, t0);
SELECT COUNT(*) FROM v0, vt2, vt0, t0 WHERE ((((vt2.c2 IN ()))&(((vt2.lid)IS NOT(t0.c0)))));
SELECT * FROM vt0, t0, v0 WHERE ((((((t0.c1)IS(t0.c0))))>((CASE v0.c0  WHEN v0.c0 THEN t0.c48 END)))) ORDER BY t0.c1  NULLS LAST, 0.031669531143887375 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1)IS(t0.c0))))>((CASE v0.c0  WHEN v0.c0 THEN t0.c48 END)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY t0.c1  NULLS LAST, 0.031669531143887375 DESC  NULLS FIRST);
SELECT * FROM vt0, t0, v0 WHERE ((((((t0.c1)IS(t0.c0))))>((CASE v0.c0  WHEN v0.c0 THEN t0.c48 END)))) ORDER BY t0.c1  NULLS LAST, 0.031669531143887375 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1)IS(t0.c0))))>((CASE v0.c0  WHEN v0.c0 THEN t0.c48 END)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY t0.c1  NULLS LAST, 0.031669531143887375 DESC  NULLS FIRST);
SELECT * FROM vt0, t0, v0 WHERE ((((((t0.c1)IS(t0.c0))))>((CASE v0.c0  WHEN v0.c0 THEN t0.c48 END)))) ORDER BY t0.c1  NULLS LAST, 0.031669531143887375 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt2 WHERE ((((vt2.lid IN ()))AND(((vt2.lid) NOT BETWEEN (vt2.c3) AND (vt2.c2))))) ORDER BY CASE ((vt2.lid)|(vt2.c2))  WHEN CASE WHEN vt2.c0 THEN vt2.c3 WHEN vt2.c1 THEN vt2.c3 WHEN vt2.lid THEN vt2.c0 END THEN NULL WHEN CASE vt2.c1  WHEN vt2.c3 THEN vt2.c3 WHEN vt2.c3 THEN vt2.c1 WHEN vt2.c1 THEN vt2.c0 END THEN (vt2.c3 IN ()) WHEN (vt2.c1 IN ()) THEN (((vt2.c2))<((vt2.c0))) ELSE vt2.c3 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt2.lid IN ()))AND(((vt2.lid) NOT BETWEEN (vt2.c3) AND (vt2.c2))))) IS TRUE)  as count FROM vt2 ORDER BY CASE ((vt2.lid)|(vt2.c2))  WHEN CASE WHEN vt2.c0 THEN vt2.c3 WHEN vt2.c1 THEN vt2.c3 WHEN vt2.lid THEN vt2.c0 END THEN NULL WHEN CASE vt2.c1  WHEN vt2.c3 THEN vt2.c3 WHEN vt2.c3 THEN vt2.c1 WHEN vt2.c1 THEN vt2.c0 END THEN (vt2.c3 IN ()) WHEN (vt2.c1 IN ()) THEN (((vt2.c2))<((vt2.c0))) ELSE vt2.c3 END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2 WHERE ((((vt2.lid IN ()))AND(((vt2.lid) NOT BETWEEN (vt2.c3) AND (vt2.c2))))) ORDER BY CASE ((vt2.lid)|(vt2.c2))  WHEN CASE WHEN vt2.c0 THEN vt2.c3 WHEN vt2.c1 THEN vt2.c3 WHEN vt2.lid THEN vt2.c0 END THEN NULL WHEN CASE vt2.c1  WHEN vt2.c3 THEN vt2.c3 WHEN vt2.c3 THEN vt2.c1 WHEN vt2.c1 THEN vt2.c0 END THEN (vt2.c3 IN ()) WHEN (vt2.c1 IN ()) THEN (((vt2.c2))<((vt2.c0))) ELSE vt2.c3 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt2.lid IN ()))AND(((vt2.lid) NOT BETWEEN (vt2.c3) AND (vt2.c2))))) IS TRUE)  as count FROM vt2 ORDER BY CASE ((vt2.lid)|(vt2.c2))  WHEN CASE WHEN vt2.c0 THEN vt2.c3 WHEN vt2.c1 THEN vt2.c3 WHEN vt2.lid THEN vt2.c0 END THEN NULL WHEN CASE vt2.c1  WHEN vt2.c3 THEN vt2.c3 WHEN vt2.c3 THEN vt2.c1 WHEN vt2.c1 THEN vt2.c0 END THEN (vt2.c3 IN ()) WHEN (vt2.c1 IN ()) THEN (((vt2.c2))<((vt2.c0))) ELSE vt2.c3 END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2 WHERE ((((vt2.lid IN ()))AND(((vt2.lid) NOT BETWEEN (vt2.c3) AND (vt2.c2))))) ORDER BY CASE ((vt2.lid)|(vt2.c2))  WHEN CASE WHEN vt2.c0 THEN vt2.c3 WHEN vt2.c1 THEN vt2.c3 WHEN vt2.lid THEN vt2.c0 END THEN NULL WHEN CASE vt2.c1  WHEN vt2.c3 THEN vt2.c3 WHEN vt2.c3 THEN vt2.c1 WHEN vt2.c1 THEN vt2.c0 END THEN (vt2.c3 IN ()) WHEN (vt2.c1 IN ()) THEN (((vt2.c2))<((vt2.c0))) ELSE vt2.c3 END  NULLS LAST;
SELECT ALL * FROM v0, vt2 WHERE (CASE WHEN (((v0.c0)) BETWEEN ((vt2.c3)) AND ((vt2.c0))) THEN (vt2.c1 IN ()) END) ORDER BY HEX(DISTINCT vt2.c1) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((v0.c0)) BETWEEN ((vt2.c3)) AND ((vt2.c0))) THEN (vt2.c1 IN ()) END) IS TRUE)  as count FROM v0, vt2 ORDER BY HEX(DISTINCT vt2.c1) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt2 WHERE (CASE WHEN (((v0.c0)) BETWEEN ((vt2.c3)) AND ((vt2.c0))) THEN (vt2.c1 IN ()) END) ORDER BY HEX(DISTINCT vt2.c1) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((v0.c0)) BETWEEN ((vt2.c3)) AND ((vt2.c0))) THEN (vt2.c1 IN ()) END) IS TRUE)  as count FROM v0, vt2 ORDER BY HEX(DISTINCT vt2.c1) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt2 WHERE (CASE WHEN (((v0.c0)) BETWEEN ((vt2.c3)) AND ((vt2.c0))) THEN (vt2.c1 IN ()) END) ORDER BY HEX(DISTINCT vt2.c1) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((vt0.c0)IS NOT(t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)IS NOT(t0.c1)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((vt0.c0)IS NOT(t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)IS NOT(t0.c1)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((vt0.c0)IS NOT(t0.c1)) IN ()));
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE ((((vt2.c3)) BETWEEN ((((vt2.c3) ISNULL))) AND ((((vt2.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c3)) BETWEEN ((((vt2.c3) ISNULL))) AND ((((vt2.c1) IS TRUE))))) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE ((((vt2.c3)) BETWEEN ((((vt2.c3) ISNULL))) AND ((((vt2.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c3)) BETWEEN ((((vt2.c3) ISNULL))) AND ((((vt2.c1) IS TRUE))))) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE ((((vt2.c3)) BETWEEN ((((vt2.c3) ISNULL))) AND ((((vt2.c1) IS TRUE)))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c48);
SELECT SUM(count) FROM (SELECT ALL ((t0.c48) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c48);
SELECT SUM(count) FROM (SELECT ALL ((t0.c48) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c48);
SELECT * FROM vt0, t0, vt2 FULL OUTER JOIN v0 ON (vt2.c3 IN ()) COLLATE NOCASE WHERE ((- (((((vt2.c2)OR(vt0.c0)))OR(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((vt2.c2)OR(vt0.c0)))OR(vt2.c0))))) IS TRUE)  as count FROM vt0, t0, vt2 FULL OUTER JOIN v0 ON (vt2.c3 IN ()) COLLATE NOCASE);
SELECT * FROM vt0, t0, vt2 FULL OUTER JOIN v0 ON (vt2.c3 IN ()) COLLATE NOCASE WHERE ((- (((((vt2.c2)OR(vt0.c0)))OR(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((vt2.c2)OR(vt0.c0)))OR(vt2.c0))))) IS TRUE)  as count FROM vt0, t0, vt2 FULL OUTER JOIN v0 ON (vt2.c3 IN ()) COLLATE NOCASE);
SELECT * FROM vt0, t0, vt2 FULL OUTER JOIN v0 ON (vt2.c3 IN ()) COLLATE NOCASE WHERE ((- (((((vt2.c2)OR(vt0.c0)))OR(vt2.c0)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt2 ON CAST(((((t0.c48)AND(t0.c1)))AND(vt2.c3)) AS INTEGER) WHERE (CASE WHEN ((((-1.086123638E9)AND(t0.c1)))AND(vt2.c2)) THEN ((vt2.c2) NOT BETWEEN ('X5') AND (vt2.c0)) ELSE '8L' END) ORDER BY CAST((((t0.c48, vt2.c1, t0.c0, x'64b163a3', vt2.c2)) NOT BETWEEN ((vt2.lid, t0.c48, t0.c0, vt2.c2, t0.c48)) AND ((NULL, vt2.c0, x'', vt2.c1, vt2.c1))) AS REAL) ASC, 871699659 COLLATE BINARY COLLATE NOCASE ASC  NULLS FIRST, CASE ((t0.c17)OR(0.9390894028402588))  WHEN GLOB(vt2.c1, vt2.c1) THEN HEX(vt2.lid) WHEN ((((vt2.c0)AND(t0.c48)))OR(vt2.c0)) THEN ((t0.c0)<(vt2.c0)) WHEN (((0.2214955676416578))>=((t0.c17))) THEN ((vt2.c3) NOT NULL) ELSE ((vt2.lid) ISNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((-1.086123638E9)AND(t0.c1)))AND(vt2.c2)) THEN ((vt2.c2) NOT BETWEEN ('X5') AND (vt2.c0)) ELSE '8L' END) IS TRUE)  as count FROM t0 INNER JOIN vt2 ON CAST(((((t0.c48)AND(t0.c1)))AND(vt2.c3)) AS INTEGER) ORDER BY CAST((((t0.c48, vt2.c1, t0.c0, x'64b163a3', vt2.c2)) NOT BETWEEN ((vt2.lid, t0.c48, t0.c0, vt2.c2, t0.c48)) AND ((NULL, vt2.c0, x'', vt2.c1, vt2.c1))) AS REAL) ASC, 871699659 COLLATE BINARY COLLATE NOCASE ASC  NULLS FIRST, CASE ((t0.c17)OR(0.9390894028402588))  WHEN GLOB(vt2.c1, vt2.c1) THEN HEX(vt2.lid) WHEN ((((vt2.c0)AND(t0.c48)))OR(vt2.c0)) THEN ((t0.c0)<(vt2.c0)) WHEN (((0.2214955676416578))>=((t0.c17))) THEN ((vt2.c3) NOT NULL) ELSE ((vt2.lid) ISNULL) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt2 ON CAST(((((t0.c48)AND(t0.c1)))AND(vt2.c3)) AS INTEGER) WHERE (CASE WHEN ((((-1.086123638E9)AND(t0.c1)))AND(vt2.c2)) THEN ((vt2.c2) NOT BETWEEN ('X5') AND (vt2.c0)) ELSE '8L' END) ORDER BY CAST((((t0.c48, vt2.c1, t0.c0, x'64b163a3', vt2.c2)) NOT BETWEEN ((vt2.lid, t0.c48, t0.c0, vt2.c2, t0.c48)) AND ((NULL, vt2.c0, x'', vt2.c1, vt2.c1))) AS REAL) ASC, 871699659 COLLATE BINARY COLLATE NOCASE ASC  NULLS FIRST, CASE ((t0.c17)OR(0.9390894028402588))  WHEN GLOB(vt2.c1, vt2.c1) THEN HEX(vt2.lid) WHEN ((((vt2.c0)AND(t0.c48)))OR(vt2.c0)) THEN ((t0.c0)<(vt2.c0)) WHEN (((0.2214955676416578))>=((t0.c17))) THEN ((vt2.c3) NOT NULL) ELSE ((vt2.lid) ISNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((-1.086123638E9)AND(t0.c1)))AND(vt2.c2)) THEN ((vt2.c2) NOT BETWEEN ('X5') AND (vt2.c0)) ELSE '8L' END) IS TRUE)  as count FROM t0 INNER JOIN vt2 ON CAST(((((t0.c48)AND(t0.c1)))AND(vt2.c3)) AS INTEGER) ORDER BY CAST((((t0.c48, vt2.c1, t0.c0, x'64b163a3', vt2.c2)) NOT BETWEEN ((vt2.lid, t0.c48, t0.c0, vt2.c2, t0.c48)) AND ((NULL, vt2.c0, x'', vt2.c1, vt2.c1))) AS REAL) ASC, 871699659 COLLATE BINARY COLLATE NOCASE ASC  NULLS FIRST, CASE ((t0.c17)OR(0.9390894028402588))  WHEN GLOB(vt2.c1, vt2.c1) THEN HEX(vt2.lid) WHEN ((((vt2.c0)AND(t0.c48)))OR(vt2.c0)) THEN ((t0.c0)<(vt2.c0)) WHEN (((0.2214955676416578))>=((t0.c17))) THEN ((vt2.c3) NOT NULL) ELSE ((vt2.lid) ISNULL) END  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((LIKELY(v0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((LIKELY(v0.c0)) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((LIKELY(v0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((LIKELY(v0.c0)) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((LIKELY(v0.c0)) IS TRUE));
SELECT ALL * FROM vt2, v0 WHERE (((('950349158')) NOT BETWEEN ((((vt2.c0) NOT BETWEEN (vt2.c3) AND (vt2.lid)))) AND ((((vt2.c0)<<('-345640739'))))));
SELECT SUM(count) FROM (SELECT ((((('950349158')) NOT BETWEEN ((((vt2.c0) NOT BETWEEN (vt2.c3) AND (vt2.lid)))) AND ((((vt2.c0)<<('-345640739')))))) IS TRUE)  as count FROM vt2, v0);
SELECT ALL * FROM vt2, v0 WHERE (((('950349158')) NOT BETWEEN ((((vt2.c0) NOT BETWEEN (vt2.c3) AND (vt2.lid)))) AND ((((vt2.c0)<<('-345640739'))))));
SELECT SUM(count) FROM (SELECT ((((('950349158')) NOT BETWEEN ((((vt2.c0) NOT BETWEEN (vt2.c3) AND (vt2.lid)))) AND ((((vt2.c0)<<('-345640739')))))) IS TRUE)  as count FROM vt2, v0);
SELECT ALL * FROM vt2, v0 WHERE (((('950349158')) NOT BETWEEN ((((vt2.c0) NOT BETWEEN (vt2.c3) AND (vt2.lid)))) AND ((((vt2.c0)<<('-345640739'))))));
SELECT ALL COUNT(*) FROM t0, vt2, v0, vt0 WHERE (CASE ((((t0.c1)OR(t0.c17)))AND(vt2.c3))  WHEN (((vt2.c1, t0.c1, vt0.c0, vt0.c0, vt2.c2, vt2.c1, x'')) BETWEEN ((t0.c0, v0.c0, vt2.c2, vt0.c0, t0.c17, vt2.c3, vt2.c1)) AND ((vt2.c1, t0.c1, vt0.c0, t0.c48, vt2.c0, v0.c0, vt2.c2))) THEN (t0.c17 IN ()) ELSE '' END) ORDER BY ((vt2.c3)OR(t0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c1)OR(t0.c17)))AND(vt2.c3))  WHEN (((vt2.c1, t0.c1, vt0.c0, vt0.c0, vt2.c2, vt2.c1, x'')) BETWEEN ((t0.c0, v0.c0, vt2.c2, vt0.c0, t0.c17, vt2.c3, vt2.c1)) AND ((vt2.c1, t0.c1, vt0.c0, t0.c48, vt2.c0, v0.c0, vt2.c2))) THEN (t0.c17 IN ()) ELSE '' END) IS TRUE)  as count FROM t0, vt2, v0, vt0 ORDER BY ((vt2.c3)OR(t0.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt2, v0, vt0 WHERE (CASE ((((t0.c1)OR(t0.c17)))AND(vt2.c3))  WHEN (((vt2.c1, t0.c1, vt0.c0, vt0.c0, vt2.c2, vt2.c1, x'')) BETWEEN ((t0.c0, v0.c0, vt2.c2, vt0.c0, t0.c17, vt2.c3, vt2.c1)) AND ((vt2.c1, t0.c1, vt0.c0, t0.c48, vt2.c0, v0.c0, vt2.c2))) THEN (t0.c17 IN ()) ELSE '' END) ORDER BY ((vt2.c3)OR(t0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c1)OR(t0.c17)))AND(vt2.c3))  WHEN (((vt2.c1, t0.c1, vt0.c0, vt0.c0, vt2.c2, vt2.c1, x'')) BETWEEN ((t0.c0, v0.c0, vt2.c2, vt0.c0, t0.c17, vt2.c3, vt2.c1)) AND ((vt2.c1, t0.c1, vt0.c0, t0.c48, vt2.c0, v0.c0, vt2.c2))) THEN (t0.c17 IN ()) ELSE '' END) IS TRUE)  as count FROM t0, vt2, v0, vt0 ORDER BY ((vt2.c3)OR(t0.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt2, v0, vt0 WHERE (CASE ((((t0.c1)OR(t0.c17)))AND(vt2.c3))  WHEN (((vt2.c1, t0.c1, vt0.c0, vt0.c0, vt2.c2, vt2.c1, x'')) BETWEEN ((t0.c0, v0.c0, vt2.c2, vt0.c0, t0.c17, vt2.c3, vt2.c1)) AND ((vt2.c1, t0.c1, vt0.c0, t0.c48, vt2.c0, v0.c0, vt2.c2))) THEN (t0.c17 IN ()) ELSE '' END) ORDER BY ((vt2.c3)OR(t0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 NOT INDEXED, vt2, vt0, v0 WHERE (CAST(t0.c48 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c48 AS NUMERIC)) IS TRUE)  as count FROM t0, vt2, vt0, v0);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt2, vt0, v0 WHERE (CAST(t0.c48 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c48 AS NUMERIC)) IS TRUE)  as count FROM t0, vt2, vt0, v0);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt2, vt0, v0 WHERE (CAST(t0.c48 AS NUMERIC));
SELECT * FROM vt0, t0, vt2 WHERE (((CAST(t0.c17 AS TEXT)) NOT BETWEEN (vt2.c0) AND (((vt0.c0)IS NOT(vt2.c1))))) ORDER BY ((((((((t0.c1)OR(vt2.c2)))AND(t0.c48)))AND(CASE WHEN vt2.c0 THEN vt2.lid ELSE t0.c1 END)))OR(vt0.c0))  NULLS FIRST, CAST(t0.c0 COLLATE NOCASE AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c17 AS TEXT)) NOT BETWEEN (vt2.c0) AND (((vt0.c0)IS NOT(vt2.c1))))) IS TRUE)  as count FROM vt0, t0, vt2 ORDER BY ((((((((t0.c1)OR(vt2.c2)))AND(t0.c48)))AND(CASE WHEN vt2.c0 THEN vt2.lid ELSE t0.c1 END)))OR(vt0.c0))  NULLS FIRST, CAST(t0.c0 COLLATE NOCASE AS REAL)  NULLS FIRST);
SELECT * FROM vt0, t0, vt2 WHERE (((CAST(t0.c17 AS TEXT)) NOT BETWEEN (vt2.c0) AND (((vt0.c0)IS NOT(vt2.c1))))) ORDER BY ((((((((t0.c1)OR(vt2.c2)))AND(t0.c48)))AND(CASE WHEN vt2.c0 THEN vt2.lid ELSE t0.c1 END)))OR(vt0.c0))  NULLS FIRST, CAST(t0.c0 COLLATE NOCASE AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c17 AS TEXT)) NOT BETWEEN (vt2.c0) AND (((vt0.c0)IS NOT(vt2.c1))))) IS TRUE)  as count FROM vt0, t0, vt2 ORDER BY ((((((((t0.c1)OR(vt2.c2)))AND(t0.c48)))AND(CASE WHEN vt2.c0 THEN vt2.lid ELSE t0.c1 END)))OR(vt0.c0))  NULLS FIRST, CAST(t0.c0 COLLATE NOCASE AS REAL)  NULLS FIRST);
SELECT * FROM vt0, t0, vt2 WHERE (((CAST(t0.c17 AS TEXT)) NOT BETWEEN (vt2.c0) AND (((vt0.c0)IS NOT(vt2.c1))))) ORDER BY ((((((((t0.c1)OR(vt2.c2)))AND(t0.c48)))AND(CASE WHEN vt2.c0 THEN vt2.lid ELSE t0.c1 END)))OR(vt0.c0))  NULLS FIRST, CAST(t0.c0 COLLATE NOCASE AS REAL)  NULLS FIRST;
SELECT * FROM vt2, vt0 WHERE (((vt2.c2) NOT BETWEEN (((vt2.c0)|(vt2.c3))) AND (vt2.lid)));
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c2) NOT BETWEEN (((vt2.c0)|(vt2.c3))) AND (vt2.lid))) IS TRUE)  as count FROM vt2, vt0);
SELECT * FROM vt2, vt0 WHERE (((vt2.c2) NOT BETWEEN (((vt2.c0)|(vt2.c3))) AND (vt2.lid)));
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c2) NOT BETWEEN (((vt2.c0)|(vt2.c3))) AND (vt2.lid))) IS TRUE)  as count FROM vt2, vt0);
SELECT * FROM vt2, vt0 WHERE (((vt2.c2) NOT BETWEEN (((vt2.c0)|(vt2.c3))) AND (vt2.lid)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((HEX(DISTINCT t0.c48)) BETWEEN (((t0.c0)+(t0.c17))) AND (((vt0.c0)||(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT t0.c48)) BETWEEN (((t0.c0)+(t0.c17))) AND (((vt0.c0)||(t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((HEX(DISTINCT t0.c48)) BETWEEN (((t0.c0)+(t0.c17))) AND (((vt0.c0)||(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT t0.c48)) BETWEEN (((t0.c0)+(t0.c17))) AND (((vt0.c0)||(t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((HEX(DISTINCT t0.c48)) BETWEEN (((t0.c0)+(t0.c17))) AND (((vt0.c0)||(t0.c0)))));
SELECT * FROM vt2, t0, v0, vt0 WHERE ((((((t0.c1)==(t0.c1))))>=((CAST(vt2.lid AS NUMERIC))))) ORDER BY STRFTIME(CAST(NULL AS TEXT), ((t0.c17) IS FALSE), ((vt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c1)=(t0.c1))))>=((CAST(vt2.lid AS NUMERIC))))) IS TRUE)  as count FROM vt2, t0, v0, vt0 ORDER BY STRFTIME(CAST(NULL AS TEXT), ((t0.c17) IS FALSE), ((vt0.c0) NOT NULL)));
SELECT * FROM vt2, t0, v0, vt0 WHERE ((((((t0.c1)==(t0.c1))))>=((CAST(vt2.lid AS NUMERIC))))) ORDER BY STRFTIME(CAST(NULL AS TEXT), ((t0.c17) IS FALSE), ((vt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c1)=(t0.c1))))>=((CAST(vt2.lid AS NUMERIC))))) IS TRUE)  as count FROM vt2, t0, v0, vt0 ORDER BY STRFTIME(CAST(NULL AS TEXT), ((t0.c17) IS FALSE), ((vt0.c0) NOT NULL)));
SELECT * FROM vt2, t0, v0, vt0 WHERE ((((((t0.c1)==(t0.c1))))>=((CAST(vt2.lid AS NUMERIC))))) ORDER BY STRFTIME(CAST(NULL AS TEXT), ((t0.c17) IS FALSE), ((vt0.c0) NOT NULL));
SELECT COUNT(*) FROM t0, vt2, vt0 WHERE ((t0.c17 IN (((t0.c48)IS(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c17 IN (((t0.c48)IS(t0.c0))))) IS TRUE)  as count FROM t0, vt2, vt0);
SELECT COUNT(*) FROM t0, vt2, vt0 WHERE ((t0.c17 IN (((t0.c48)IS(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c17 IN (((t0.c48)IS(t0.c0))))) IS TRUE)  as count FROM t0, vt2, vt0);
SELECT COUNT(*) FROM t0, vt2, vt0 WHERE ((t0.c17 IN (((t0.c48)IS(t0.c0)))));
SELECT * FROM v0, t0 NATURAL JOIN vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM v0, t0 NATURAL JOIN vt0);
SELECT * FROM v0, t0 NATURAL JOIN vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM v0, t0 NATURAL JOIN vt0);
SELECT * FROM v0, t0 NATURAL JOIN vt0 WHERE (t0.c0);
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(((t0.c1) IS FALSE) AS NUMERIC)) ORDER BY (((t0.c1)) BETWEEN ((((v0.c0)IS(t0.c0)))) AND (((- (t0.c17)))))  NULLS LAST, (((t0.c17 IN ())) ISNULL) ASC, (UNICODE(t0.c17) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c1) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c1)) BETWEEN ((((v0.c0)IS(t0.c0)))) AND (((- (t0.c17)))))  NULLS LAST, (((t0.c17 IN ())) ISNULL) ASC, (UNICODE(t0.c17) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(((t0.c1) IS FALSE) AS NUMERIC)) ORDER BY (((t0.c1)) BETWEEN ((((v0.c0)IS(t0.c0)))) AND (((- (t0.c17)))))  NULLS LAST, (((t0.c17 IN ())) ISNULL) ASC, (UNICODE(t0.c17) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c1) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c1)) BETWEEN ((((v0.c0)IS(t0.c0)))) AND (((- (t0.c17)))))  NULLS LAST, (((t0.c17 IN ())) ISNULL) ASC, (UNICODE(t0.c17) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(((t0.c1) IS FALSE) AS NUMERIC)) ORDER BY (((t0.c1)) BETWEEN ((((v0.c0)IS(t0.c0)))) AND (((- (t0.c17)))))  NULLS LAST, (((t0.c17 IN ())) ISNULL) ASC, (UNICODE(t0.c17) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((x'773261e35e6d')OR(v0.c0)))AND(v0.c0)))OR(NULL)))AND(v0.c0)))>(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((x'773261e35e6d')OR(v0.c0)))AND(v0.c0)))OR(NULL)))AND(v0.c0)))>(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((x'773261e35e6d')OR(v0.c0)))AND(v0.c0)))OR(NULL)))AND(v0.c0)))>(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((x'773261e35e6d')OR(v0.c0)))AND(v0.c0)))OR(NULL)))AND(v0.c0)))>(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((x'773261e35e6d')OR(v0.c0)))AND(v0.c0)))OR(NULL)))AND(v0.c0)))>(v0.c0)));
SELECT COUNT(*) FROM t0, vt2 WHERE (((((vt2.c0)AND(t0.c17))) NOT BETWEEN (0.8665776156967572) AND (((vt2.lid)%(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt2.c0)AND(t0.c17))) NOT BETWEEN (0.8665776156967572) AND (((vt2.lid)%(t0.c1))))) IS TRUE)  as count FROM t0, vt2 NOT INDEXED);
SELECT COUNT(*) FROM t0, vt2 WHERE (((((vt2.c0)AND(t0.c17))) NOT BETWEEN (0.8665776156967572) AND (((vt2.lid)%(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt2.c0)AND(t0.c17))) NOT BETWEEN (0.8665776156967572) AND (((vt2.lid)%(t0.c1))))) IS TRUE)  as count FROM t0, vt2 NOT INDEXED);
SELECT COUNT(*) FROM t0, vt2 WHERE (((((vt2.c0)AND(t0.c17))) NOT BETWEEN (0.8665776156967572) AND (((vt2.lid)%(t0.c1)))));
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((((vt0.c0)OR(x'')))OR(t0.c0))) BETWEEN (((t0.c1) NOT NULL)) AND (CAST(vt0.c0 AS NUMERIC))) WHERE (json_patch(CAST(0.7901794349772179 AS REAL), ((t0.c17)<=(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_patch(CAST(0.7901794349772179 AS REAL), ((t0.c17)<=(t0.c0)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((((vt0.c0)OR(x'')))OR(t0.c0))) BETWEEN (((t0.c1) NOT NULL)) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((((vt0.c0)OR(x'')))OR(t0.c0))) BETWEEN (((t0.c1) NOT NULL)) AND (CAST(vt0.c0 AS NUMERIC))) WHERE (json_patch(CAST(0.7901794349772179 AS REAL), ((t0.c17)<=(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_patch(CAST(0.7901794349772179 AS REAL), ((t0.c17)<=(t0.c0)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((((vt0.c0)OR(x'')))OR(t0.c0))) BETWEEN (((t0.c1) NOT NULL)) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((((vt0.c0)OR(x'')))OR(t0.c0))) BETWEEN (((t0.c1) NOT NULL)) AND (CAST(vt0.c0 AS NUMERIC))) WHERE (json_patch(CAST(0.7901794349772179 AS REAL), ((t0.c17)<=(t0.c0))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((UNLIKELY(t0.c48)))>=(((t0.c48 IN (t0.c1, t0.c48)))))) ORDER BY CAST(LOWER(vt0.c0) AS BLOB);
SELECT SUM(count) FROM (SELECT (((((UNLIKELY(t0.c48)))>=(((t0.c48 IN (t0.c1, t0.c48)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY CAST(LOWER(vt0.c0) AS BLOB));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((UNLIKELY(t0.c48)))>=(((t0.c48 IN (t0.c1, t0.c48)))))) ORDER BY CAST(LOWER(vt0.c0) AS BLOB);
SELECT SUM(count) FROM (SELECT (((((UNLIKELY(t0.c48)))>=(((t0.c48 IN (t0.c1, t0.c48)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY CAST(LOWER(vt0.c0) AS BLOB));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((UNLIKELY(t0.c48)))>=(((t0.c48 IN (t0.c1, t0.c48)))))) ORDER BY CAST(LOWER(vt0.c0) AS BLOB);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c0 COLLATE NOCASE) NOT BETWEEN (((x'6fab6668')/(t0.c48))) AND (t0.c1))) ORDER BY x'' ASC, '-1177402488' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE) NOT BETWEEN (((x'6fab6668')/(t0.c48))) AND (t0.c1))) IS TRUE)  as count FROM t0, vt0 ORDER BY x'' ASC, '-1177402488' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c0 COLLATE NOCASE) NOT BETWEEN (((x'6fab6668')/(t0.c48))) AND (t0.c1))) ORDER BY x'' ASC, '-1177402488' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE) NOT BETWEEN (((x'6fab6668')/(t0.c48))) AND (t0.c1))) IS TRUE)  as count FROM t0, vt0 ORDER BY x'' ASC, '-1177402488' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c0 COLLATE NOCASE) NOT BETWEEN (((x'6fab6668')/(t0.c48))) AND (t0.c1))) ORDER BY x'' ASC, '-1177402488' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE t0.c17  WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN '182449930' WHEN vt0.c0 THEN t0.c17 ELSE t0.c0 END)>>(NULLIF(DISTINCT NULL, vt0.c0)))) ORDER BY ((t0.c1 IN ()) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c17  WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN '182449930' WHEN vt0.c0 THEN t0.c17 ELSE t0.c0 END)>>(NULLIF(DISTINCT NULL, vt0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c1 IN ()) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE t0.c17  WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN '182449930' WHEN vt0.c0 THEN t0.c17 ELSE t0.c0 END)>>(NULLIF(DISTINCT NULL, vt0.c0)))) ORDER BY ((t0.c1 IN ()) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c17  WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN '182449930' WHEN vt0.c0 THEN t0.c17 ELSE t0.c0 END)>>(NULLIF(DISTINCT NULL, vt0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c1 IN ()) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE t0.c17  WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN '182449930' WHEN vt0.c0 THEN t0.c17 ELSE t0.c0 END)>>(NULLIF(DISTINCT NULL, vt0.c0)))) ORDER BY ((t0.c1 IN ()) IN ()) ASC  NULLS FIRST;
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN (NOT (t0.c1)) THEN (v0.c0 IN ()) ELSE CASE WHEN t0.c0 THEN '\rxw\em쵩' ELSE v0.c0 END END WHERE (((((t0.c17) NOT BETWEEN (v0.c0) AND (t0.c0))) BETWEEN (x'9d4b') AND (((t0.c0)*(t0.c48)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c17) NOT BETWEEN (v0.c0) AND (t0.c0))) BETWEEN (x'9d4b') AND (((t0.c0)*(t0.c48))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN (NOT (t0.c1)) THEN (v0.c0 IN ()) ELSE CASE WHEN t0.c0 THEN '\rxw\em쵩' ELSE v0.c0 END END);
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN (NOT (t0.c1)) THEN (v0.c0 IN ()) ELSE CASE WHEN t0.c0 THEN '\rxw\em쵩' ELSE v0.c0 END END WHERE (((((t0.c17) NOT BETWEEN (v0.c0) AND (t0.c0))) BETWEEN (x'9d4b') AND (((t0.c0)*(t0.c48)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c17) NOT BETWEEN (v0.c0) AND (t0.c0))) BETWEEN (x'9d4b') AND (((t0.c0)*(t0.c48))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN (NOT (t0.c1)) THEN (v0.c0 IN ()) ELSE CASE WHEN t0.c0 THEN '\rxw\em쵩' ELSE v0.c0 END END);
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN (NOT (t0.c1)) THEN (v0.c0 IN ()) ELSE CASE WHEN t0.c0 THEN '\rxw\em쵩' ELSE v0.c0 END END WHERE (((((t0.c17) NOT BETWEEN (v0.c0) AND (t0.c0))) BETWEEN (x'9d4b') AND (((t0.c0)*(t0.c48)))));
SELECT * FROM vt0, t0, vt2, v0 WHERE (TOTAL_CHANGES()) ORDER BY NULL COLLATE BINARY, (((((t0.c1)OR(vt2.c2)))AND(t0.c48)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0, t0, vt2, v0 ORDER BY NULL COLLATE BINARY, (((((t0.c1)OR(vt2.c2)))AND(t0.c48)) IN ()));
SELECT * FROM vt0, t0, vt2, v0 WHERE (TOTAL_CHANGES()) ORDER BY NULL COLLATE BINARY, (((((t0.c1)OR(vt2.c2)))AND(t0.c48)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0, t0, vt2, v0 ORDER BY NULL COLLATE BINARY, (((((t0.c1)OR(vt2.c2)))AND(t0.c48)) IN ()));
SELECT * FROM vt0, t0, vt2, v0 WHERE (TOTAL_CHANGES()) ORDER BY NULL COLLATE BINARY, (((((t0.c1)OR(vt2.c2)))AND(t0.c48)) IN ());
SELECT ALL * FROM t0, vt2, vt0, v0 WHERE (((((vt2.lid) NOTNULL))/(((vt2.c2) BETWEEN (vt2.c1) AND (t0.c1))))) ORDER BY CAST(TYPEOF(x'') AS REAL), ((vt0.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((((((vt2.lid) NOTNULL))/(((vt2.c2) BETWEEN (vt2.c1) AND (t0.c1))))) IS TRUE)  as count FROM t0, vt2, vt0, v0 ORDER BY CAST(TYPEOF(x'') AS REAL), ((vt0.c0 IN ()) IN ()));
SELECT ALL * FROM t0, vt2, vt0, v0 WHERE (((((vt2.lid) NOTNULL))/(((vt2.c2) BETWEEN (vt2.c1) AND (t0.c1))))) ORDER BY CAST(TYPEOF(x'') AS REAL), ((vt0.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((((((vt2.lid) NOTNULL))/(((vt2.c2) BETWEEN (vt2.c1) AND (t0.c1))))) IS TRUE)  as count FROM t0, vt2, vt0, v0 ORDER BY CAST(TYPEOF(x'') AS REAL), ((vt0.c0 IN ()) IN ()));
SELECT ALL * FROM t0, vt2, vt0, v0 WHERE (((((vt2.lid) NOTNULL))/(((vt2.c2) BETWEEN (vt2.c1) AND (t0.c1))))) ORDER BY CAST(TYPEOF(x'') AS REAL), ((vt0.c0 IN ()) IN ());
SELECT ALL COUNT(*) FROM vt2 WHERE (((CASE vt2.c1  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c3 THEN vt2.c0 WHEN vt2.c1 THEN vt2.c0 END) NOT BETWEEN (vt2.c2 COLLATE BINARY) AND (CASE WHEN vt2.c3 THEN vt2.lid END)));
SELECT SUM(count) FROM (SELECT ((((CASE vt2.c1  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c3 THEN vt2.c0 WHEN vt2.c1 THEN vt2.c0 END) NOT BETWEEN (vt2.c2 COLLATE BINARY) AND (CASE WHEN vt2.c3 THEN vt2.lid END))) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (((CASE vt2.c1  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c3 THEN vt2.c0 WHEN vt2.c1 THEN vt2.c0 END) NOT BETWEEN (vt2.c2 COLLATE BINARY) AND (CASE WHEN vt2.c3 THEN vt2.lid END)));
SELECT SUM(count) FROM (SELECT ((((CASE vt2.c1  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c3 THEN vt2.c0 WHEN vt2.c1 THEN vt2.c0 END) NOT BETWEEN (vt2.c2 COLLATE BINARY) AND (CASE WHEN vt2.c3 THEN vt2.lid END))) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (((CASE vt2.c1  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c3 THEN vt2.c0 WHEN vt2.c1 THEN vt2.c0 END) NOT BETWEEN (vt2.c2 COLLATE BINARY) AND (CASE WHEN vt2.c3 THEN vt2.lid END)));
SELECT * FROM t0 WHERE (((t0.c0) IS FALSE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0) IS FALSE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0) IS FALSE) COLLATE RTRIM);
SELECT * FROM v0, t0, vt2 WHERE (((vt2.c2 COLLATE NOCASE) BETWEEN (CAST(NULL AS INTEGER)) AND (t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c2 COLLATE NOCASE) BETWEEN (CAST(NULL AS INTEGER)) AND (t0.c1))) IS TRUE)  as count FROM v0, t0, vt2);
SELECT * FROM v0, t0, vt2 WHERE (((vt2.c2 COLLATE NOCASE) BETWEEN (CAST(NULL AS INTEGER)) AND (t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c2 COLLATE NOCASE) BETWEEN (CAST(NULL AS INTEGER)) AND (t0.c1))) IS TRUE)  as count FROM v0, t0, vt2);
SELECT * FROM v0, t0, vt2 WHERE (((vt2.c2 COLLATE NOCASE) BETWEEN (CAST(NULL AS INTEGER)) AND (t0.c1)));
SELECT * FROM v0 WHERE (x'' COLLATE BINARY) ORDER BY ((((v0.c0) NOTNULL)) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((v0.c0 IN ()))) ASC  NULLS LAST, ((((v0.c0)<(v0.c0))) BETWEEN (((v0.c0)<<(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST, ((((((((((v0.c0) IS FALSE))OR(((v0.c0)>>(NULL)))))AND(((0.42378313949538093)>>(v0.c0)))))AND(((v0.c0) NOTNULL))))OR(((v0.c0) ISNULL))) DESC  NULLS FIRST, CASE (((v0.c0))<=((v0.c0)))  WHEN LOWER(v0.c0) THEN (v0.c0 IN (0.014427237301388396)) WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN v0.c0 COLLATE NOCASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOTNULL)) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((v0.c0 IN ()))) ASC  NULLS LAST, ((((v0.c0)<(v0.c0))) BETWEEN (((v0.c0)<<(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST, ((((((((((v0.c0) IS FALSE))OR(((v0.c0)>>(NULL)))))AND(((0.42378313949538093)>>(v0.c0)))))AND(((v0.c0) NOTNULL))))OR(((v0.c0) ISNULL))) DESC  NULLS FIRST, CASE (((v0.c0))<=((v0.c0)))  WHEN LOWER(v0.c0) THEN (v0.c0 IN (0.014427237301388396)) WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN v0.c0 COLLATE NOCASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT * FROM v0 WHERE (x'' COLLATE BINARY) ORDER BY ((((v0.c0) NOTNULL)) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((v0.c0 IN ()))) ASC  NULLS LAST, ((((v0.c0)<(v0.c0))) BETWEEN (((v0.c0)<<(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST, ((((((((((v0.c0) IS FALSE))OR(((v0.c0)>>(NULL)))))AND(((0.42378313949538093)>>(v0.c0)))))AND(((v0.c0) NOTNULL))))OR(((v0.c0) ISNULL))) DESC  NULLS FIRST, CASE (((v0.c0))<=((v0.c0)))  WHEN LOWER(v0.c0) THEN (v0.c0 IN (0.014427237301388396)) WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN v0.c0 COLLATE NOCASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOTNULL)) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((v0.c0 IN ()))) ASC  NULLS LAST, ((((v0.c0)<(v0.c0))) BETWEEN (((v0.c0)<<(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST, ((((((((((v0.c0) IS FALSE))OR(((v0.c0)>>(NULL)))))AND(((0.42378313949538093)>>(v0.c0)))))AND(((v0.c0) NOTNULL))))OR(((v0.c0) ISNULL))) DESC  NULLS FIRST, CASE (((v0.c0))<=((v0.c0)))  WHEN LOWER(v0.c0) THEN (v0.c0 IN (0.014427237301388396)) WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN v0.c0 COLLATE NOCASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT * FROM v0 WHERE (x'' COLLATE BINARY) ORDER BY ((((v0.c0) NOTNULL)) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((v0.c0 IN ()))) ASC  NULLS LAST, ((((v0.c0)<(v0.c0))) BETWEEN (((v0.c0)<<(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST, ((((((((((v0.c0) IS FALSE))OR(((v0.c0)>>(NULL)))))AND(((0.42378313949538093)>>(v0.c0)))))AND(((v0.c0) NOTNULL))))OR(((v0.c0) ISNULL))) DESC  NULLS FIRST, CASE (((v0.c0))<=((v0.c0)))  WHEN LOWER(v0.c0) THEN (v0.c0 IN (0.014427237301388396)) WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN v0.c0 COLLATE NOCASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END;
SELECT COUNT(*) FROM vt0, vt2, t0 WHERE ((~ ((((vt0.c0)) BETWEEN ((vt2.lid)) AND ((-8.6318113E7))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c0)) BETWEEN ((vt2.lid)) AND ((-8.6318113E7)))))) IS TRUE)  as count FROM vt0 NOT INDEXED, vt2, t0);
SELECT COUNT(*) FROM vt0, vt2, t0 WHERE ((~ ((((vt0.c0)) BETWEEN ((vt2.lid)) AND ((-8.6318113E7))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c0)) BETWEEN ((vt2.lid)) AND ((-8.6318113E7)))))) IS TRUE)  as count FROM vt0 NOT INDEXED, vt2, t0);
SELECT COUNT(*) FROM vt0, vt2, t0 WHERE ((~ ((((vt0.c0)) BETWEEN ((vt2.lid)) AND ((-8.6318113E7))))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY)IS(CASE t0.c1  WHEN vt0.c0 THEN t0.c17 WHEN t0.c1 THEN t0.c17 WHEN t0.c0 THEN t0.c1 END)) WHERE (((t0.c0) NOT BETWEEN (t0.c17) AND (t0.c17)) COLLATE NOCASE) ORDER BY LIKELY(DISTINCT (+ (t0.c1))), ('-747194916' IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c17) AND (t0.c17)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY)IS(CASE t0.c1  WHEN vt0.c0 THEN t0.c17 WHEN t0.c1 THEN t0.c17 WHEN t0.c0 THEN t0.c1 END)) ORDER BY LIKELY(DISTINCT (+ (t0.c1))), ('-747194916' IN ()) ASC);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY)IS(CASE t0.c1  WHEN vt0.c0 THEN t0.c17 WHEN t0.c1 THEN t0.c17 WHEN t0.c0 THEN t0.c1 END)) WHERE (((t0.c0) NOT BETWEEN (t0.c17) AND (t0.c17)) COLLATE NOCASE) ORDER BY LIKELY(DISTINCT (+ (t0.c1))), ('-747194916' IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c17) AND (t0.c17)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY)IS(CASE t0.c1  WHEN vt0.c0 THEN t0.c17 WHEN t0.c1 THEN t0.c17 WHEN t0.c0 THEN t0.c1 END)) ORDER BY LIKELY(DISTINCT (+ (t0.c1))), ('-747194916' IN ()) ASC);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY)IS(CASE t0.c1  WHEN vt0.c0 THEN t0.c17 WHEN t0.c1 THEN t0.c17 WHEN t0.c0 THEN t0.c1 END)) WHERE (((t0.c0) NOT BETWEEN (t0.c17) AND (t0.c17)) COLLATE NOCASE) ORDER BY LIKELY(DISTINCT (+ (t0.c1))), ('-747194916' IN ()) ASC;
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((((((v0.c0)) BETWEEN ((t0.c17)) AND ((vt0.c0)))) IS FALSE)) ORDER BY (((x'' IN ()))IS NOT(((vt0.c0) NOT BETWEEN (x'') AND (t0.c48)))), (((('FTZ')AND(t0.c0)))AND((- ('')))) ASC, ((NULL) BETWEEN (((t0.c0) IS TRUE)) AND (UNLIKELY(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((t0.c17)) AND ((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((x'' IN ()))IS NOT(((vt0.c0) NOT BETWEEN (x'') AND (t0.c48)))), (((('FTZ')AND(t0.c0)))AND((- ('')))) ASC, ((NULL) BETWEEN (((t0.c0) IS TRUE)) AND (UNLIKELY(NULL))));
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((((((v0.c0)) BETWEEN ((t0.c17)) AND ((vt0.c0)))) IS FALSE)) ORDER BY (((x'' IN ()))IS NOT(((vt0.c0) NOT BETWEEN (x'') AND (t0.c48)))), (((('FTZ')AND(t0.c0)))AND((- ('')))) ASC, ((NULL) BETWEEN (((t0.c0) IS TRUE)) AND (UNLIKELY(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((t0.c17)) AND ((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((x'' IN ()))IS NOT(((vt0.c0) NOT BETWEEN (x'') AND (t0.c48)))), (((('FTZ')AND(t0.c0)))AND((- ('')))) ASC, ((NULL) BETWEEN (((t0.c0) IS TRUE)) AND (UNLIKELY(NULL))));
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((((((v0.c0)) BETWEEN ((t0.c17)) AND ((vt0.c0)))) IS FALSE)) ORDER BY (((x'' IN ()))IS NOT(((vt0.c0) NOT BETWEEN (x'') AND (t0.c48)))), (((('FTZ')AND(t0.c0)))AND((- ('')))) ASC, ((NULL) BETWEEN (((t0.c0) IS TRUE)) AND (UNLIKELY(NULL)));
SELECT COUNT(*) FROM vt2, t0 WHERE ((~ (((t0.c17) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c17) ISNULL)))) IS TRUE)  as count FROM vt2, t0);
SELECT COUNT(*) FROM vt2, t0 WHERE ((~ (((t0.c17) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c17) ISNULL)))) IS TRUE)  as count FROM vt2, t0);
SELECT COUNT(*) FROM vt2, t0 WHERE ((~ (((t0.c17) ISNULL))));
SELECT COUNT(*) FROM t0, vt2 WHERE (LIKELIHOOD(((vt2.lid) BETWEEN (t0.c17) AND (vt2.c3)), 0.0758541759990925)) ORDER BY ((((((t0.c17)<<(t0.c0)))AND(((((vt2.lid)AND(t0.c1)))AND(t0.c0)))))OR(t0.c17))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt2.lid) BETWEEN (t0.c17) AND (vt2.c3)), 0.0758541759990925)) IS TRUE)  as count FROM t0, vt2 ORDER BY ((((((t0.c17)<<(t0.c0)))AND(((((vt2.lid)AND(t0.c1)))AND(t0.c0)))))OR(t0.c17))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt2 WHERE (LIKELIHOOD(((vt2.lid) BETWEEN (t0.c17) AND (vt2.c3)), 0.0758541759990925)) ORDER BY ((((((t0.c17)<<(t0.c0)))AND(((((vt2.lid)AND(t0.c1)))AND(t0.c0)))))OR(t0.c17))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt2.lid) BETWEEN (t0.c17) AND (vt2.c3)), 0.0758541759990925)) IS TRUE)  as count FROM t0, vt2 ORDER BY ((((((t0.c17)<<(t0.c0)))AND(((((vt2.lid)AND(t0.c1)))AND(t0.c0)))))OR(t0.c17))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt2 WHERE (LIKELIHOOD(((vt2.lid) BETWEEN (t0.c17) AND (vt2.c3)), 0.0758541759990925)) ORDER BY ((((((t0.c17)<<(t0.c0)))AND(((((vt2.lid)AND(t0.c1)))AND(t0.c0)))))OR(t0.c17))  NULLS FIRST;
SELECT * FROM vt2 RIGHT OUTER JOIN vt0 ON NULL WHERE (CASE WHEN 1757075756 THEN ((vt2.c1) NOT BETWEEN (vt2.c1) AND (vt2.c3)) ELSE (+ (vt2.c1)) END) ORDER BY (((vt2.c1 IN (vt2.lid, 0.7010339000938073))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 1757075756 THEN ((vt2.c1) NOT BETWEEN (vt2.c1) AND (vt2.c3)) ELSE (+ (vt2.c1)) END) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN vt0 ON NULL ORDER BY (((vt2.c1 IN (vt2.lid, 0.7010339000938073))) IS FALSE) ASC  NULLS FIRST);
SELECT * FROM vt2 RIGHT OUTER JOIN vt0 ON NULL WHERE (CASE WHEN 1757075756 THEN ((vt2.c1) NOT BETWEEN (vt2.c1) AND (vt2.c3)) ELSE (+ (vt2.c1)) END) ORDER BY (((vt2.c1 IN (vt2.lid, 0.7010339000938073))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 1757075756 THEN ((vt2.c1) NOT BETWEEN (vt2.c1) AND (vt2.c3)) ELSE (+ (vt2.c1)) END) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN vt0 ON NULL ORDER BY (((vt2.c1 IN (vt2.lid, 0.7010339000938073))) IS FALSE) ASC  NULLS FIRST);
SELECT * FROM vt2 RIGHT OUTER JOIN vt0 ON NULL WHERE (CASE WHEN 1757075756 THEN ((vt2.c1) NOT BETWEEN (vt2.c1) AND (vt2.c3)) ELSE (+ (vt2.c1)) END) ORDER BY (((vt2.c1 IN (vt2.lid, 0.7010339000938073))) IS FALSE) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN vt2 ON (((vt2.c2)) NOT BETWEEN (('616734127')) AND ((((vt2.c3)&(vt2.c3))))) WHERE (((((vt2.c0)IS(vt0.c0)))||((+ (vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0)IS(vt0.c0)))||((+ (vt2.c0))))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN vt2 ON (((vt2.c2)) NOT BETWEEN (('616734127')) AND ((((vt2.c3)&(vt2.c3))))));
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN vt2 ON (((vt2.c2)) NOT BETWEEN (('616734127')) AND ((((vt2.c3)&(vt2.c3))))) WHERE (((((vt2.c0)IS(vt0.c0)))||((+ (vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0)IS(vt0.c0)))||((+ (vt2.c0))))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN vt2 ON (((vt2.c2)) NOT BETWEEN (('616734127')) AND ((((vt2.c3)&(vt2.c3))))));
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN vt2 ON (((vt2.c2)) NOT BETWEEN (('616734127')) AND ((((vt2.c3)&(vt2.c3))))) WHERE (((((vt2.c0)IS(vt0.c0)))||((+ (vt2.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CASE t0.c17  WHEN 0X81efc71 THEN t0.c48 ELSE t0.c48 END  WHEN 0x3370499 THEN (~ (t0.c17)) WHEN ((t0.c48) NOT NULL) THEN t0.c0 COLLATE RTRIM WHEN (t0.c17 IN ()) THEN ((t0.c1) IS FALSE) END) ORDER BY (((t0.c0, CASE t0.c0  WHEN t0.c0 THEN t0.c17 END, NULL))=(((t0.c17 IN ()), ((t0.c17) NOT BETWEEN (t0.c0) AND (t0.c1)), (NOT (0.07280858425179859)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CASE t0.c17  WHEN 0X81efc71 THEN t0.c48 ELSE t0.c48 END  WHEN 0x3370499 THEN (~ (t0.c17)) WHEN ((t0.c48) NOT NULL) THEN t0.c0 COLLATE RTRIM WHEN (t0.c17 IN ()) THEN ((t0.c1) IS FALSE) END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, CASE t0.c0  WHEN t0.c0 THEN t0.c17 END, NULL))=(((t0.c17 IN ()), ((t0.c17) NOT BETWEEN (t0.c0) AND (t0.c1)), (NOT (0.07280858425179859)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CASE t0.c17  WHEN 0X81efc71 THEN t0.c48 ELSE t0.c48 END  WHEN 0x3370499 THEN (~ (t0.c17)) WHEN ((t0.c48) NOT NULL) THEN t0.c0 COLLATE RTRIM WHEN (t0.c17 IN ()) THEN ((t0.c1) IS FALSE) END) ORDER BY (((t0.c0, CASE t0.c0  WHEN t0.c0 THEN t0.c17 END, NULL))=(((t0.c17 IN ()), ((t0.c17) NOT BETWEEN (t0.c0) AND (t0.c1)), (NOT (0.07280858425179859)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CASE t0.c17  WHEN 0X81efc71 THEN t0.c48 ELSE t0.c48 END  WHEN 0x3370499 THEN (~ (t0.c17)) WHEN ((t0.c48) NOT NULL) THEN t0.c0 COLLATE RTRIM WHEN (t0.c17 IN ()) THEN ((t0.c1) IS FALSE) END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, CASE t0.c0  WHEN t0.c0 THEN t0.c17 END, NULL))=(((t0.c17 IN ()), ((t0.c17) NOT BETWEEN (t0.c0) AND (t0.c1)), (NOT (0.07280858425179859)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CASE t0.c17  WHEN 0X81efc71 THEN t0.c48 ELSE t0.c48 END  WHEN 0x3370499 THEN (~ (t0.c17)) WHEN ((t0.c48) NOT NULL) THEN t0.c0 COLLATE RTRIM WHEN (t0.c17 IN ()) THEN ((t0.c1) IS FALSE) END) ORDER BY (((t0.c0, CASE t0.c0  WHEN t0.c0 THEN t0.c17 END, NULL))=(((t0.c17 IN ()), ((t0.c17) NOT BETWEEN (t0.c0) AND (t0.c1)), (NOT (0.07280858425179859)))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, t0, vt2 WHERE (((vt2.lid COLLATE NOCASE) NOT BETWEEN (CAST(vt2.lid AS REAL)) AND (0.7901794349772179 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((vt2.lid COLLATE NOCASE) NOT BETWEEN (CAST(vt2.lid AS REAL)) AND (0.7901794349772179 COLLATE RTRIM))) IS TRUE)  as count FROM v0, t0, vt2);
SELECT COUNT(*) FROM v0, t0, vt2 WHERE (((vt2.lid COLLATE NOCASE) NOT BETWEEN (CAST(vt2.lid AS REAL)) AND (0.7901794349772179 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((vt2.lid COLLATE NOCASE) NOT BETWEEN (CAST(vt2.lid AS REAL)) AND (0.7901794349772179 COLLATE RTRIM))) IS TRUE)  as count FROM v0, t0, vt2);
SELECT COUNT(*) FROM v0, t0, vt2 WHERE (((vt2.lid COLLATE NOCASE) NOT BETWEEN (CAST(vt2.lid AS REAL)) AND (0.7901794349772179 COLLATE RTRIM)));
SELECT * FROM vt0, v0 WHERE (CASE WHEN ((v0.c0)||('-1613212114')) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY CAST((+ (v0.c0)) AS NUMERIC), (((vt0.c0 IN ())) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)||('-1613212114')) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((+ (v0.c0)) AS NUMERIC), (((vt0.c0 IN ())) IS FALSE) DESC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (CASE WHEN ((v0.c0)||('-1613212114')) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY CAST((+ (v0.c0)) AS NUMERIC), (((vt0.c0 IN ())) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)||('-1613212114')) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((+ (v0.c0)) AS NUMERIC), (((vt0.c0 IN ())) IS FALSE) DESC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (CASE WHEN ((v0.c0)||('-1613212114')) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY CAST((+ (v0.c0)) AS NUMERIC), (((vt0.c0 IN ())) IS FALSE) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)>>(t0.c17))) NOT BETWEEN (((t0.c48) NOT BETWEEN (t0.c0) AND (t0.c17))) AND ((((t0.c0))>=((t0.c0)))))) ORDER BY ABS(DISTINCT CASE WHEN t0.c1 THEN t0.c17 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>>(t0.c17))) NOT BETWEEN (((t0.c48) NOT BETWEEN (t0.c0) AND (t0.c17))) AND ((((t0.c0))>=((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ABS(DISTINCT CASE WHEN t0.c1 THEN t0.c17 END) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c0)>>(t0.c17))) NOT BETWEEN (((t0.c48) NOT BETWEEN (t0.c0) AND (t0.c17))) AND ((((t0.c0))>=((t0.c0)))))) ORDER BY ABS(DISTINCT CASE WHEN t0.c1 THEN t0.c17 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>>(t0.c17))) NOT BETWEEN (((t0.c48) NOT BETWEEN (t0.c0) AND (t0.c17))) AND ((((t0.c0))>=((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ABS(DISTINCT CASE WHEN t0.c1 THEN t0.c17 END) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c0)>>(t0.c17))) NOT BETWEEN (((t0.c48) NOT BETWEEN (t0.c0) AND (t0.c17))) AND ((((t0.c0))>=((t0.c0)))))) ORDER BY ABS(DISTINCT CASE WHEN t0.c1 THEN t0.c17 END) ASC  NULLS LAST;
SELECT * FROM t0, vt2 WHERE (((t0.c17 COLLATE RTRIM) NOT BETWEEN (json_remove(t0.c0, vt2.c0)) AND ((((vt2.c0))>=((vt2.lid)))))) ORDER BY ((CAST(vt2.lid AS REAL)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c17 COLLATE RTRIM) NOT BETWEEN (json_remove(t0.c0, vt2.c0)) AND ((((vt2.c0))>=((vt2.lid)))))) IS TRUE)  as count FROM t0, vt2 ORDER BY ((CAST(vt2.lid AS REAL)) NOTNULL)  NULLS LAST);
SELECT * FROM t0, vt2 WHERE (((t0.c17 COLLATE RTRIM) NOT BETWEEN (json_remove(t0.c0, vt2.c0)) AND ((((vt2.c0))>=((vt2.lid)))))) ORDER BY ((CAST(vt2.lid AS REAL)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c17 COLLATE RTRIM) NOT BETWEEN (json_remove(t0.c0, vt2.c0)) AND ((((vt2.c0))>=((vt2.lid)))))) IS TRUE)  as count FROM t0, vt2 ORDER BY ((CAST(vt2.lid AS REAL)) NOTNULL)  NULLS LAST);
SELECT * FROM t0, vt2 WHERE (((t0.c17 COLLATE RTRIM) NOT BETWEEN (json_remove(t0.c0, vt2.c0)) AND ((((vt2.c0))>=((vt2.lid)))))) ORDER BY ((CAST(vt2.lid AS REAL)) NOTNULL)  NULLS LAST;
SELECT * FROM v0 WHERE (LIKELY(((0.46100473521918217) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((LIKELY(((0.46100473521918217) NOT NULL))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LIKELY(((0.46100473521918217) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((LIKELY(((0.46100473521918217) NOT NULL))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LIKELY(((0.46100473521918217) NOT NULL)));
SELECT ALL COUNT(*) FROM vt0, t0, vt2, v0 WHERE (CAST(((v0.c0)IS(NULL)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)IS(NULL)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, vt2, v0);
SELECT ALL COUNT(*) FROM vt0, t0, vt2, v0 WHERE (CAST(((v0.c0)IS(NULL)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)IS(NULL)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, vt2, v0);
SELECT ALL COUNT(*) FROM vt0, t0, vt2, v0 WHERE (CAST(((v0.c0)IS(NULL)) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0, vt2, t0 RIGHT OUTER JOIN vt0 ON (((t0.c17, t0.c17, vt2.c2, vt2.lid, t0.c0)) BETWEEN ((CAST(vt2.c3 AS REAL), ((vt0.c0)&(t0.c17)), ((t0.c17)AND(t0.c17)), (('0.46100473521918217') NOT BETWEEN (t0.c0) AND (vt2.c3)), (NOT (v0.c0)))) AND ((vt2.c0, (+ (t0.c48)), t0.c17, vt0.c0 COLLATE RTRIM, vt2.c1))) WHERE ((- ((- (vt2.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (vt2.c2))))) IS TRUE)  as count FROM v0, vt2, t0 RIGHT OUTER JOIN vt0 ON (((t0.c17, t0.c17, vt2.c2, vt2.lid, t0.c0)) BETWEEN ((CAST(vt2.c3 AS REAL), ((vt0.c0)&(t0.c17)), ((t0.c17)AND(t0.c17)), (('0.46100473521918217') NOT BETWEEN (t0.c0) AND (vt2.c3)), (NOT (v0.c0)))) AND ((vt2.c0, (+ (t0.c48)), t0.c17, vt0.c0 COLLATE RTRIM, vt2.c1))));
SELECT ALL COUNT(*) FROM v0, vt2, t0 RIGHT OUTER JOIN vt0 ON (((t0.c17, t0.c17, vt2.c2, vt2.lid, t0.c0)) BETWEEN ((CAST(vt2.c3 AS REAL), ((vt0.c0)&(t0.c17)), ((t0.c17)AND(t0.c17)), (('0.46100473521918217') NOT BETWEEN (t0.c0) AND (vt2.c3)), (NOT (v0.c0)))) AND ((vt2.c0, (+ (t0.c48)), t0.c17, vt0.c0 COLLATE RTRIM, vt2.c1))) WHERE ((- ((- (vt2.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (vt2.c2))))) IS TRUE)  as count FROM v0, vt2, t0 RIGHT OUTER JOIN vt0 ON (((t0.c17, t0.c17, vt2.c2, vt2.lid, t0.c0)) BETWEEN ((CAST(vt2.c3 AS REAL), ((vt0.c0)&(t0.c17)), ((t0.c17)AND(t0.c17)), (('0.46100473521918217') NOT BETWEEN (t0.c0) AND (vt2.c3)), (NOT (v0.c0)))) AND ((vt2.c0, (+ (t0.c48)), t0.c17, vt0.c0 COLLATE RTRIM, vt2.c1))));
SELECT ALL COUNT(*) FROM v0, vt2, t0 RIGHT OUTER JOIN vt0 ON (((t0.c17, t0.c17, vt2.c2, vt2.lid, t0.c0)) BETWEEN ((CAST(vt2.c3 AS REAL), ((vt0.c0)&(t0.c17)), ((t0.c17)AND(t0.c17)), (('0.46100473521918217') NOT BETWEEN (t0.c0) AND (vt2.c3)), (NOT (v0.c0)))) AND ((vt2.c0, (+ (t0.c48)), t0.c17, vt0.c0 COLLATE RTRIM, vt2.c1))) WHERE ((- ((- (vt2.c2)))));
SELECT ALL * FROM vt0, vt2 WHERE (CAST((((vt2.c3)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c2))) AS BLOB)) ORDER BY (((((vt2.lid)LIKE(vt2.c3)), (('-965055101')*(vt2.c3)), ((vt2.c3) NOT BETWEEN (vt2.lid) AND (vt2.c3))))>((((vt2.c0)=(NULL)), ((vt2.c3) NOT BETWEEN (vt2.c0) AND ('ࠡ72')), (((vt0.c0))==((vt2.c0)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt2.c3)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c2))) AS BLOB)) IS TRUE)  as count FROM vt0, vt2 ORDER BY (((((vt2.lid)LIKE(vt2.c3)), (('-965055101')*(vt2.c3)), ((vt2.c3) NOT BETWEEN (vt2.lid) AND (vt2.c3))))>((((vt2.c0)=(NULL)), ((vt2.c3) NOT BETWEEN (vt2.c0) AND ('ࠡ72')), (((vt0.c0))=((vt2.c0)))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt2 WHERE (CAST((((vt2.c3)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c2))) AS BLOB)) ORDER BY (((((vt2.lid)LIKE(vt2.c3)), (('-965055101')*(vt2.c3)), ((vt2.c3) NOT BETWEEN (vt2.lid) AND (vt2.c3))))>((((vt2.c0)=(NULL)), ((vt2.c3) NOT BETWEEN (vt2.c0) AND ('ࠡ72')), (((vt0.c0))==((vt2.c0)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt2.c3)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c2))) AS BLOB)) IS TRUE)  as count FROM vt0, vt2 ORDER BY (((((vt2.lid)LIKE(vt2.c3)), (('-965055101')*(vt2.c3)), ((vt2.c3) NOT BETWEEN (vt2.lid) AND (vt2.c3))))>((((vt2.c0)=(NULL)), ((vt2.c3) NOT BETWEEN (vt2.c0) AND ('ࠡ72')), (((vt0.c0))=((vt2.c0)))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt2 WHERE (CAST((((vt2.c3)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c2))) AS BLOB)) ORDER BY (((((vt2.lid)LIKE(vt2.c3)), (('-965055101')*(vt2.c3)), ((vt2.c3) NOT BETWEEN (vt2.lid) AND (vt2.c3))))>((((vt2.c0)=(NULL)), ((vt2.c3) NOT BETWEEN (vt2.c0) AND ('ࠡ72')), (((vt0.c0))==((vt2.c0)))))) ASC  NULLS LAST;
SELECT * FROM v0, t0, vt0, vt2 WHERE ((- (((vt0.c0)&(vt2.c1))))) ORDER BY (+ (((vt2.c0)OR(t0.c1)))) ASC, CASE ((vt2.lid) NOTNULL)  WHEN ((vt2.c1) ISNULL) THEN ((t0.c1)<=(vt2.c0)) END  NULLS FIRST, t0.c48;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)&(vt2.c1))))) IS TRUE)  as count FROM v0, t0, vt0, vt2 ORDER BY (+ (((vt2.c0)OR(t0.c1)))) ASC, CASE ((vt2.lid) NOTNULL)  WHEN ((vt2.c1) ISNULL) THEN ((t0.c1)<=(vt2.c0)) END  NULLS FIRST, t0.c48);
SELECT * FROM v0, t0, vt0, vt2 WHERE ((- (((vt0.c0)&(vt2.c1))))) ORDER BY (+ (((vt2.c0)OR(t0.c1)))) ASC, CASE ((vt2.lid) NOTNULL)  WHEN ((vt2.c1) ISNULL) THEN ((t0.c1)<=(vt2.c0)) END  NULLS FIRST, t0.c48;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)&(vt2.c1))))) IS TRUE)  as count FROM v0, t0, vt0, vt2 ORDER BY (+ (((vt2.c0)OR(t0.c1)))) ASC, CASE ((vt2.lid) NOTNULL)  WHEN ((vt2.c1) ISNULL) THEN ((t0.c1)<=(vt2.c0)) END  NULLS FIRST, t0.c48);
SELECT * FROM v0, t0, vt0, vt2 WHERE ((- (((vt0.c0)&(vt2.c1))))) ORDER BY (+ (((vt2.c0)OR(t0.c1)))) ASC, CASE ((vt2.lid) NOTNULL)  WHEN ((vt2.c1) ISNULL) THEN ((t0.c1)<=(vt2.c0)) END  NULLS FIRST, t0.c48;
SELECT ALL * FROM v0, vt2 LEFT OUTER JOIN t0 ON CASE WHEN ((vt2.c2)<>(vt2.c1)) THEN x'' WHEN ROUND(vt2.c1, t0.c48) THEN CASE vt2.c0  WHEN x'df3b' THEN t0.c1 END WHEN ((vt2.c3)<>(vt2.c0)) THEN t0.c17 END RIGHT OUTER JOIN vt0 ON (NOT (NULL)) WHERE ((((t0.c17 IN ())) BETWEEN ((+ (vt2.c0))) AND (CAST(vt2.lid AS REAL)))) ORDER BY ((((((x'') NOT BETWEEN (t0.c1) AND (vt0.c0)))AND(((t0.c17)&(vt2.c3)))))AND(((vt2.lid) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c17 IN ())) BETWEEN ((+ (vt2.c0))) AND (CAST(vt2.lid AS REAL)))) IS TRUE)  as count FROM v0, vt2 LEFT OUTER JOIN t0 ON CASE WHEN ((vt2.c2)!=(vt2.c1)) THEN x'' WHEN ROUND(vt2.c1, t0.c48) THEN CASE vt2.c0  WHEN x'df3b' THEN t0.c1 END WHEN ((vt2.c3)<>(vt2.c0)) THEN t0.c17 END RIGHT OUTER JOIN vt0 ON (NOT (NULL)) ORDER BY ((((((x'') NOT BETWEEN (t0.c1) AND (vt0.c0)))AND(((t0.c17)&(vt2.c3)))))AND(((vt2.lid) ISNULL))) DESC);
SELECT ALL * FROM v0, vt2 LEFT OUTER JOIN t0 ON CASE WHEN ((vt2.c2)<>(vt2.c1)) THEN x'' WHEN ROUND(vt2.c1, t0.c48) THEN CASE vt2.c0  WHEN x'df3b' THEN t0.c1 END WHEN ((vt2.c3)<>(vt2.c0)) THEN t0.c17 END RIGHT OUTER JOIN vt0 ON (NOT (NULL)) WHERE ((((t0.c17 IN ())) BETWEEN ((+ (vt2.c0))) AND (CAST(vt2.lid AS REAL)))) ORDER BY ((((((x'') NOT BETWEEN (t0.c1) AND (vt0.c0)))AND(((t0.c17)&(vt2.c3)))))AND(((vt2.lid) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c17 IN ())) BETWEEN ((+ (vt2.c0))) AND (CAST(vt2.lid AS REAL)))) IS TRUE)  as count FROM v0, vt2 LEFT OUTER JOIN t0 ON CASE WHEN ((vt2.c2)!=(vt2.c1)) THEN x'' WHEN ROUND(vt2.c1, t0.c48) THEN CASE vt2.c0  WHEN x'df3b' THEN t0.c1 END WHEN ((vt2.c3)<>(vt2.c0)) THEN t0.c17 END RIGHT OUTER JOIN vt0 ON (NOT (NULL)) ORDER BY ((((((x'') NOT BETWEEN (t0.c1) AND (vt0.c0)))AND(((t0.c17)&(vt2.c3)))))AND(((vt2.lid) ISNULL))) DESC);
SELECT ALL * FROM v0, vt2 LEFT OUTER JOIN t0 ON CASE WHEN ((vt2.c2)<>(vt2.c1)) THEN x'' WHEN ROUND(vt2.c1, t0.c48) THEN CASE vt2.c0  WHEN x'df3b' THEN t0.c1 END WHEN ((vt2.c3)<>(vt2.c0)) THEN t0.c17 END RIGHT OUTER JOIN vt0 ON (NOT (NULL)) WHERE ((((t0.c17 IN ())) BETWEEN ((+ (vt2.c0))) AND (CAST(vt2.lid AS REAL)))) ORDER BY ((((((x'') NOT BETWEEN (t0.c1) AND (vt0.c0)))AND(((t0.c17)&(vt2.c3)))))AND(((vt2.lid) ISNULL))) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (CAST(v0.c0 AS BLOB)))) ORDER BY (v0.c0 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT (((+ (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 COLLATE RTRIM IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (CAST(v0.c0 AS BLOB)))) ORDER BY (v0.c0 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT (((+ (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 COLLATE RTRIM IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (CAST(v0.c0 AS BLOB)))) ORDER BY (v0.c0 COLLATE RTRIM IN ());
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (CASE WHEN vt0.c0 THEN v0.c0 END) AND ((vt0.c0 IN (v0.c0))))) ORDER BY v0.c0 DESC  NULLS FIRST, highlight(json_extract(v0.c0, v0.c0), vt0.c0, ((vt0.c0)|('-599848370')), CAST(v0.c0 AS NUMERIC)) DESC  NULLS FIRST, ((MAX(vt0.c0, 0.8744114546428372, v0.c0, 0.2619001781431134)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) BETWEEN (CASE WHEN vt0.c0 THEN v0.c0 END) AND ((vt0.c0 IN (v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0 DESC  NULLS FIRST, highlight(json_extract(v0.c0, v0.c0), vt0.c0, ((vt0.c0)|('-599848370')), CAST(v0.c0 AS NUMERIC)) DESC  NULLS FIRST, ((MAX(vt0.c0, 0.8744114546428372, v0.c0, 0.2619001781431134)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (CASE WHEN vt0.c0 THEN v0.c0 END) AND ((vt0.c0 IN (v0.c0))))) ORDER BY v0.c0 DESC  NULLS FIRST, highlight(json_extract(v0.c0, v0.c0), vt0.c0, ((vt0.c0)|('-599848370')), CAST(v0.c0 AS NUMERIC)) DESC  NULLS FIRST, ((MAX(vt0.c0, 0.8744114546428372, v0.c0, 0.2619001781431134)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) BETWEEN (CASE WHEN vt0.c0 THEN v0.c0 END) AND ((vt0.c0 IN (v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0 DESC  NULLS FIRST, highlight(json_extract(v0.c0, v0.c0), vt0.c0, ((vt0.c0)|('-599848370')), CAST(v0.c0 AS NUMERIC)) DESC  NULLS FIRST, ((MAX(vt0.c0, 0.8744114546428372, v0.c0, 0.2619001781431134)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt2, v0, t0, vt0 WHERE (((LOWER(vt2.c0)) NOT NULL)) ORDER BY t0.c48 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt2.c0)) NOT NULL)) IS TRUE)  as count FROM vt2, v0, t0, vt0 ORDER BY t0.c48 DESC);
SELECT COUNT(*) FROM vt2, v0, t0, vt0 WHERE (((LOWER(vt2.c0)) NOT NULL)) ORDER BY t0.c48 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt2.c0)) NOT NULL)) IS TRUE)  as count FROM vt2, v0, t0, vt0 ORDER BY t0.c48 DESC);
SELECT COUNT(*) FROM vt2, v0, t0, vt0 WHERE (((LOWER(vt2.c0)) NOT NULL)) ORDER BY t0.c48 DESC;
SELECT ALL COUNT(*) FROM v0, vt2, t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt2, t0, vt0);
SELECT ALL COUNT(*) FROM v0, vt2, t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt2, t0, vt0);
SELECT ALL COUNT(*) FROM v0, vt2, t0, vt0 WHERE (NULL);
SELECT COUNT(*) FROM vt2, t0, vt0 WHERE (vt2.c2) ORDER BY (((((vt2.c2)) BETWEEN ((vt2.c3)) AND ((0.20855800754797504)))) NOT BETWEEN ((((vt2.c1, 0.26616660311753126, t0.c17))=((vt0.c0, t0.c17, vt2.c0)))) AND (((vt2.c1)%(t0.c1)))) ASC  NULLS LAST, vt2.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt2.c2) IS TRUE)  as count FROM vt2, t0, vt0 ORDER BY (((((vt2.c2)) BETWEEN ((vt2.c3)) AND ((0.20855800754797504)))) NOT BETWEEN ((((vt2.c1, 0.26616660311753126, t0.c17))=((vt0.c0, t0.c17, vt2.c0)))) AND (((vt2.c1)%(t0.c1)))) ASC  NULLS LAST, vt2.c0  NULLS LAST);
SELECT COUNT(*) FROM vt2, t0, vt0 WHERE (vt2.c2) ORDER BY (((((vt2.c2)) BETWEEN ((vt2.c3)) AND ((0.20855800754797504)))) NOT BETWEEN ((((vt2.c1, 0.26616660311753126, t0.c17))=((vt0.c0, t0.c17, vt2.c0)))) AND (((vt2.c1)%(t0.c1)))) ASC  NULLS LAST, vt2.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt2.c2) IS TRUE)  as count FROM vt2, t0, vt0 ORDER BY (((((vt2.c2)) BETWEEN ((vt2.c3)) AND ((0.20855800754797504)))) NOT BETWEEN ((((vt2.c1, 0.26616660311753126, t0.c17))=((vt0.c0, t0.c17, vt2.c0)))) AND (((vt2.c1)%(t0.c1)))) ASC  NULLS LAST, vt2.c0  NULLS LAST);
SELECT COUNT(*) FROM vt2, t0, vt0 WHERE (vt2.c2) ORDER BY (((((vt2.c2)) BETWEEN ((vt2.c3)) AND ((0.20855800754797504)))) NOT BETWEEN ((((vt2.c1, 0.26616660311753126, t0.c17))=((vt0.c0, t0.c17, vt2.c0)))) AND (((vt2.c1)%(t0.c1)))) ASC  NULLS LAST, vt2.c0  NULLS LAST;
SELECT * FROM vt0, vt2 WHERE ((- ((- (vt2.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((- (vt2.c1))))) IS TRUE)  as count FROM vt0, vt2);
SELECT * FROM vt0, vt2 WHERE ((- ((- (vt2.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((- (vt2.c1))))) IS TRUE)  as count FROM vt0, vt2);
SELECT * FROM vt0, vt2 WHERE ((- ((- (vt2.c1)))));
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt2 ON CASE WHEN (~ (vt2.c2)) THEN (vt2.c3 IN (t0.c17)) END LEFT OUTER JOIN t0 ON (((-637321667)) NOT BETWEEN ((((vt2.lid) BETWEEN (t0.c17) AND (NULL)))) AND ((((t0.c48)IS NOT(vt2.c1))))) WHERE (0.44559953359392723);
SELECT SUM(count) FROM (SELECT ((0.44559953359392723) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt2 ON CASE WHEN (~ (vt2.c2)) THEN (vt2.c3 IN (t0.c17)) END LEFT OUTER JOIN t0 ON (((-637321667)) NOT BETWEEN ((((vt2.lid) BETWEEN (t0.c17) AND (NULL)))) AND ((((t0.c48)IS NOT(vt2.c1))))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt2 ON CASE WHEN (~ (vt2.c2)) THEN (vt2.c3 IN (t0.c17)) END LEFT OUTER JOIN t0 ON (((-637321667)) NOT BETWEEN ((((vt2.lid) BETWEEN (t0.c17) AND (NULL)))) AND ((((t0.c48)IS NOT(vt2.c1))))) WHERE (0.44559953359392723);
SELECT SUM(count) FROM (SELECT ((0.44559953359392723) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt2 ON CASE WHEN (~ (vt2.c2)) THEN (vt2.c3 IN (t0.c17)) END LEFT OUTER JOIN t0 ON (((-637321667)) NOT BETWEEN ((((vt2.lid) BETWEEN (t0.c17) AND (NULL)))) AND ((((t0.c48)IS NOT(vt2.c1))))));
SELECT ALL * FROM vt2, t0, vt0, v0 WHERE (t0.c17) ORDER BY ((((x'') NOTNULL)) NOT BETWEEN ((('871699659') IS TRUE)) AND (CAST(t0.c48 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c17) IS TRUE)  as count FROM vt2, t0, vt0, v0 ORDER BY ((((x'') NOTNULL)) NOT BETWEEN ((('871699659') IS TRUE)) AND (CAST(t0.c48 AS INTEGER)))  NULLS FIRST);
SELECT ALL * FROM vt2, t0, vt0, v0 WHERE (t0.c17) ORDER BY ((((x'') NOTNULL)) NOT BETWEEN ((('871699659') IS TRUE)) AND (CAST(t0.c48 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c17) IS TRUE)  as count FROM vt2, t0, vt0, v0 ORDER BY ((((x'') NOTNULL)) NOT BETWEEN ((('871699659') IS TRUE)) AND (CAST(t0.c48 AS INTEGER)))  NULLS FIRST);
SELECT ALL * FROM vt2, t0, vt0, v0 WHERE (t0.c17) ORDER BY ((((x'') NOTNULL)) NOT BETWEEN ((('871699659') IS TRUE)) AND (CAST(t0.c48 AS INTEGER)))  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.29955926917079323)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt0.c0, 0.29955926917079323)) NOT NULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.29955926917079323)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt0.c0, 0.29955926917079323)) NOT NULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.29955926917079323)) NOT NULL));
SELECT ALL COUNT(*) FROM t0, vt2, v0, vt0 WHERE (((((((((((vt2.lid) IS TRUE))AND(CASE WHEN vt2.c2 THEN vt0.c0 END)))AND(vt0.c0 COLLATE NOCASE)))AND((((NULL))>((t0.c48))))))OR(((((((((vt2.c0)AND(t0.c48)))AND(-1359648747)))OR(vt2.lid)))OR(vt2.c1))))) ORDER BY (CAST(vt2.c0 AS INTEGER) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt2.lid) IS TRUE))AND(CASE WHEN vt2.c2 THEN vt0.c0 END)))AND(vt0.c0 COLLATE NOCASE)))AND((((NULL))>((t0.c48))))))OR(((((((((vt2.c0)AND(t0.c48)))AND(-1359648747)))OR(vt2.lid)))OR(vt2.c1))))) IS TRUE)  as count FROM t0, vt2, v0, vt0 ORDER BY (CAST(vt2.c0 AS INTEGER) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0, vt2, v0, vt0 WHERE (((((((((((vt2.lid) IS TRUE))AND(CASE WHEN vt2.c2 THEN vt0.c0 END)))AND(vt0.c0 COLLATE NOCASE)))AND((((NULL))>((t0.c48))))))OR(((((((((vt2.c0)AND(t0.c48)))AND(-1359648747)))OR(vt2.lid)))OR(vt2.c1))))) ORDER BY (CAST(vt2.c0 AS INTEGER) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt2.lid) IS TRUE))AND(CASE WHEN vt2.c2 THEN vt0.c0 END)))AND(vt0.c0 COLLATE NOCASE)))AND((((NULL))>((t0.c48))))))OR(((((((((vt2.c0)AND(t0.c48)))AND(-1359648747)))OR(vt2.lid)))OR(vt2.c1))))) IS TRUE)  as count FROM t0, vt2, v0, vt0 ORDER BY (CAST(vt2.c0 AS INTEGER) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0, vt2, v0, vt0 WHERE (((((((((((vt2.lid) IS TRUE))AND(CASE WHEN vt2.c2 THEN vt0.c0 END)))AND(vt0.c0 COLLATE NOCASE)))AND((((NULL))>((t0.c48))))))OR(((((((((vt2.c0)AND(t0.c48)))AND(-1359648747)))OR(vt2.lid)))OR(vt2.c1))))) ORDER BY (CAST(vt2.c0 AS INTEGER) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt2, v0, t0, vt0 WHERE ((NOT (LIKELIHOOD(0Xffffffff965042ab, 0.12816830036129756))));
SELECT SUM(count) FROM (SELECT (((NOT (LIKELIHOOD(0Xffffffff965042ab, 0.12816830036129756)))) IS TRUE)  as count FROM vt2, v0, t0, vt0);
SELECT ALL COUNT(*) FROM vt2, v0, t0, vt0 WHERE ((NOT (LIKELIHOOD(0Xffffffff965042ab, 0.12816830036129756))));
SELECT SUM(count) FROM (SELECT (((NOT (LIKELIHOOD(0Xffffffff965042ab, 0.12816830036129756)))) IS TRUE)  as count FROM vt2, v0, t0, vt0);
SELECT ALL COUNT(*) FROM vt2, v0, t0, vt0 WHERE ((NOT (LIKELIHOOD(0Xffffffff965042ab, 0.12816830036129756))));
SELECT ALL * FROM vt0, t0, v0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c17)) AND ((t0.c48 COLLATE NOCASE)))) ORDER BY (((t0.c17) IS FALSE) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((t0.c17)) AND ((t0.c48 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((t0.c17) IS FALSE) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0, t0, v0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c17)) AND ((t0.c48 COLLATE NOCASE)))) ORDER BY (((t0.c17) IS FALSE) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((t0.c17)) AND ((t0.c48 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((t0.c17) IS FALSE) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0, t0, v0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c17)) AND ((t0.c48 COLLATE NOCASE)))) ORDER BY (((t0.c17) IS FALSE) IN ())  NULLS FIRST;
SELECT * FROM vt0, t0, v0 WHERE (t0.c0) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0, t0, v0 WHERE (t0.c0) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0, t0, v0 WHERE (t0.c0) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt2, v0, t0 WHERE (((v0.c0)<=(((t0.c0) NOT BETWEEN (x'') AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)<=(((t0.c0) NOT BETWEEN (x'') AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt2, v0, t0);
SELECT ALL * FROM vt0, vt2, v0, t0 WHERE (((v0.c0)<=(((t0.c0) NOT BETWEEN (x'') AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)<=(((t0.c0) NOT BETWEEN (x'') AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt2, v0, t0);
SELECT ALL * FROM vt0, vt2, v0, t0 WHERE (((v0.c0)<=(((t0.c0) NOT BETWEEN (x'') AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt2 ON (((vt2.c0 COLLATE NOCASE, t0.c1 COLLATE BINARY, ((vt2.c3) BETWEEN (v0.c0) AND (vt2.c1))))<>((((t0.c17)>>(vt2.c3)), (((t0.c48)) BETWEEN ((vt2.c2)) AND ((t0.c48))), CASE WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c3 THEN t0.c1 WHEN vt2.c3 THEN vt2.c1 END))) INNER JOIN v0 ON ((json_array_length(vt2.c0))IS NOT(((((t0.c48)AND(vt2.c1)))AND(t0.c17)))) INNER JOIN t0 ON ((((('4#9D]', vt2.c2, t0.c0)) NOT BETWEEN ((t0.c0, t0.c17, vt0.c0)) AND ((vt2.c3, vt2.c1, vt2.c2)))) NOT BETWEEN (t0.c0) AND (LIKE(t0.c1, vt2.c3, 'G'))) WHERE (((((vt2.lid)>=(vt2.c1)))&((vt2.c1 IN ())))) ORDER BY vt2.lid ASC  NULLS LAST, (((((((((- (vt2.c3)))OR((((vt2.lid, t0.c0, x''))<>((vt2.c3, v0.c0, t0.c17))))))AND(vt2.c3)))AND(vt2.c3)))AND((((v0.c0))=((vt2.lid))))) DESC  NULLS FIRST, ((((t0.c1) NOT NULL)) BETWEEN (json_remove(vt0.c0, vt2.c2, v0.c0, t0.c17)) AND (CASE vt2.c2  WHEN vt2.lid THEN t0.c1 ELSE x'' END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt2.lid)>=(vt2.c1)))&((vt2.c1 IN ())))) IS TRUE)  as count FROM vt0 INNER JOIN vt2 ON (((vt2.c0 COLLATE NOCASE, t0.c1 COLLATE BINARY, ((vt2.c3) BETWEEN (v0.c0) AND (vt2.c1))))<>((((t0.c17)>>(vt2.c3)), (((t0.c48)) BETWEEN ((vt2.c2)) AND ((t0.c48))), CASE WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c3 THEN t0.c1 WHEN vt2.c3 THEN vt2.c1 END))) INNER JOIN v0 ON ((json_array_length(vt2.c0))IS NOT(((((t0.c48)AND(vt2.c1)))AND(t0.c17)))) INNER JOIN t0 ON ((((('4#9D]', vt2.c2, t0.c0)) NOT BETWEEN ((t0.c0, t0.c17, vt0.c0)) AND ((vt2.c3, vt2.c1, vt2.c2)))) NOT BETWEEN (t0.c0) AND (LIKE(t0.c1, vt2.c3, 'G'))) ORDER BY vt2.lid ASC  NULLS LAST, (((((((((- (vt2.c3)))OR((((vt2.lid, t0.c0, x''))<>((vt2.c3, v0.c0, t0.c17))))))AND(vt2.c3)))AND(vt2.c3)))AND((((v0.c0))==((vt2.lid))))) DESC  NULLS FIRST, ((((t0.c1) NOT NULL)) BETWEEN (json_remove(vt0.c0, vt2.c2, v0.c0, t0.c17)) AND (CASE vt2.c2  WHEN vt2.lid THEN t0.c1 ELSE x'' END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt2 ON (((vt2.c0 COLLATE NOCASE, t0.c1 COLLATE BINARY, ((vt2.c3) BETWEEN (v0.c0) AND (vt2.c1))))<>((((t0.c17)>>(vt2.c3)), (((t0.c48)) BETWEEN ((vt2.c2)) AND ((t0.c48))), CASE WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c3 THEN t0.c1 WHEN vt2.c3 THEN vt2.c1 END))) INNER JOIN v0 ON ((json_array_length(vt2.c0))IS NOT(((((t0.c48)AND(vt2.c1)))AND(t0.c17)))) INNER JOIN t0 ON ((((('4#9D]', vt2.c2, t0.c0)) NOT BETWEEN ((t0.c0, t0.c17, vt0.c0)) AND ((vt2.c3, vt2.c1, vt2.c2)))) NOT BETWEEN (t0.c0) AND (LIKE(t0.c1, vt2.c3, 'G'))) WHERE (((((vt2.lid)>=(vt2.c1)))&((vt2.c1 IN ())))) ORDER BY vt2.lid ASC  NULLS LAST, (((((((((- (vt2.c3)))OR((((vt2.lid, t0.c0, x''))<>((vt2.c3, v0.c0, t0.c17))))))AND(vt2.c3)))AND(vt2.c3)))AND((((v0.c0))=((vt2.lid))))) DESC  NULLS FIRST, ((((t0.c1) NOT NULL)) BETWEEN (json_remove(vt0.c0, vt2.c2, v0.c0, t0.c17)) AND (CASE vt2.c2  WHEN vt2.lid THEN t0.c1 ELSE x'' END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt2.lid)>=(vt2.c1)))&((vt2.c1 IN ())))) IS TRUE)  as count FROM vt0 INNER JOIN vt2 ON (((vt2.c0 COLLATE NOCASE, t0.c1 COLLATE BINARY, ((vt2.c3) BETWEEN (v0.c0) AND (vt2.c1))))<>((((t0.c17)>>(vt2.c3)), (((t0.c48)) BETWEEN ((vt2.c2)) AND ((t0.c48))), CASE WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c3 THEN t0.c1 WHEN vt2.c3 THEN vt2.c1 END))) INNER JOIN v0 ON ((json_array_length(vt2.c0))IS NOT(((((t0.c48)AND(vt2.c1)))AND(t0.c17)))) INNER JOIN t0 ON ((((('4#9D]', vt2.c2, t0.c0)) NOT BETWEEN ((t0.c0, t0.c17, vt0.c0)) AND ((vt2.c3, vt2.c1, vt2.c2)))) NOT BETWEEN (t0.c0) AND (LIKE(t0.c1, vt2.c3, 'G'))) ORDER BY vt2.lid ASC  NULLS LAST, (((((((((- (vt2.c3)))OR((((vt2.lid, t0.c0, x''))<>((vt2.c3, v0.c0, t0.c17))))))AND(vt2.c3)))AND(vt2.c3)))AND((((v0.c0))==((vt2.lid))))) DESC  NULLS FIRST, ((((t0.c1) NOT NULL)) BETWEEN (json_remove(vt0.c0, vt2.c2, v0.c0, t0.c17)) AND (CASE vt2.c2  WHEN vt2.lid THEN t0.c1 ELSE x'' END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt2 ON (((vt2.c0 COLLATE NOCASE, t0.c1 COLLATE BINARY, ((vt2.c3) BETWEEN (v0.c0) AND (vt2.c1))))<>((((t0.c17)>>(vt2.c3)), (((t0.c48)) BETWEEN ((vt2.c2)) AND ((t0.c48))), CASE WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c3 THEN t0.c1 WHEN vt2.c3 THEN vt2.c1 END))) INNER JOIN v0 ON ((json_array_length(vt2.c0))IS NOT(((((t0.c48)AND(vt2.c1)))AND(t0.c17)))) INNER JOIN t0 ON ((((('4#9D]', vt2.c2, t0.c0)) NOT BETWEEN ((t0.c0, t0.c17, vt0.c0)) AND ((vt2.c3, vt2.c1, vt2.c2)))) NOT BETWEEN (t0.c0) AND (LIKE(t0.c1, vt2.c3, 'G'))) WHERE (((((vt2.lid)>=(vt2.c1)))&((vt2.c1 IN ())))) ORDER BY vt2.lid ASC  NULLS LAST, (((((((((- (vt2.c3)))OR((((vt2.lid, t0.c0, x''))<>((vt2.c3, v0.c0, t0.c17))))))AND(vt2.c3)))AND(vt2.c3)))AND((((v0.c0))=((vt2.lid))))) DESC  NULLS FIRST, ((((t0.c1) NOT NULL)) BETWEEN (json_remove(vt0.c0, vt2.c2, v0.c0, t0.c17)) AND (CASE vt2.c2  WHEN vt2.lid THEN t0.c1 ELSE x'' END)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE ((t0.c1 COLLATE BINARY IN ())) ORDER BY ((TRIM(t0.c0)) NOT BETWEEN ((((vt0.c0)) BETWEEN ((t0.c48)) AND ((t0.c48)))) AND ((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((TRIM(t0.c0)) NOT BETWEEN ((((vt0.c0)) BETWEEN ((t0.c48)) AND ((t0.c48)))) AND ((t0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE ((t0.c1 COLLATE BINARY IN ())) ORDER BY ((TRIM(t0.c0)) NOT BETWEEN ((((vt0.c0)) BETWEEN ((t0.c48)) AND ((t0.c48)))) AND ((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((TRIM(t0.c0)) NOT BETWEEN ((((vt0.c0)) BETWEEN ((t0.c48)) AND ((t0.c48)))) AND ((t0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE ((t0.c1 COLLATE BINARY IN ())) ORDER BY ((TRIM(t0.c0)) NOT BETWEEN ((((vt0.c0)) BETWEEN ((t0.c48)) AND ((t0.c48)))) AND ((t0.c0 IN ())));
SELECT ALL * FROM vt2, t0, vt0 WHERE ('1273581648');
SELECT SUM(count) FROM (SELECT ALL (('1273581648') IS TRUE)  as count FROM vt2, t0, vt0);
SELECT ALL * FROM vt2, t0, vt0 WHERE ('1273581648');
SELECT SUM(count) FROM (SELECT ALL (('1273581648') IS TRUE)  as count FROM vt2, t0, vt0);
SELECT ALL * FROM vt2, t0, vt0 WHERE ('1273581648');
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ()))+(CAST(t0.c1 AS REAL)))) ORDER BY (((t0.c17 IN (t0.c0, t0.c48))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ()))+(CAST(t0.c1 AS REAL)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c17 IN (t0.c0, t0.c48))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ()))+(CAST(t0.c1 AS REAL)))) ORDER BY (((t0.c17 IN (t0.c0, t0.c48))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ()))+(CAST(t0.c1 AS REAL)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c17 IN (t0.c0, t0.c48))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ()))+(CAST(t0.c1 AS REAL)))) ORDER BY (((t0.c17 IN (t0.c0, t0.c48))) NOT NULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((((t0.c0)AND(t0.c17)))AND(x'')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(t0.c17)))AND(x'')) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((((t0.c0)AND(t0.c17)))AND(x'')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(t0.c17)))AND(x'')) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((((t0.c0)AND(t0.c17)))AND(x'')) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON ((((((((vt0.c0)AND((v0.c0 IN (vt0.c0)))))OR(COALESCE(vt0.c0, vt0.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(v0.c0)) WHERE ((NOT (CASE vt0.c0  WHEN v0.c0 THEN NULL WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt0.c0  WHEN v0.c0 THEN NULL WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((((((vt0.c0)AND((v0.c0 IN (vt0.c0)))))OR(COALESCE(vt0.c0, vt0.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(v0.c0)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON ((((((((vt0.c0)AND((v0.c0 IN (vt0.c0)))))OR(COALESCE(vt0.c0, vt0.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(v0.c0)) WHERE ((NOT (CASE vt0.c0  WHEN v0.c0 THEN NULL WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt0.c0  WHEN v0.c0 THEN NULL WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((((((vt0.c0)AND((v0.c0 IN (vt0.c0)))))OR(COALESCE(vt0.c0, vt0.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(v0.c0)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON ((((((((vt0.c0)AND((v0.c0 IN (vt0.c0)))))OR(COALESCE(vt0.c0, vt0.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(v0.c0)) WHERE ((NOT (CASE vt0.c0  WHEN v0.c0 THEN NULL WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN vt2 ON ((((t0.c17) NOTNULL))LIKE((vt0.c0 IN (vt2.c0)))) INNER JOIN v0 ON (((t0.c17, vt2.lid, t0.c1)) BETWEEN ((CAST(t0.c17 AS NUMERIC), x'', CAST(vt2.lid AS TEXT))) AND ((CAST(t0.c48 AS INTEGER), ((((t0.c0)AND(vt2.c1)))OR(vt2.c3)), HEX(t0.c48)))) WHERE (((((('1525196941')) NOT BETWEEN ((v0.c0)) AND ((vt2.c3))))==(((vt2.lid) BETWEEN (t0.c17) AND (vt2.lid)))));
SELECT SUM(count) FROM (SELECT ((((((('1525196941')) NOT BETWEEN ((v0.c0)) AND ((vt2.c3))))==(((vt2.lid) BETWEEN (t0.c17) AND (vt2.lid))))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN vt2 ON ((((t0.c17) NOTNULL))LIKE((vt0.c0 IN (vt2.c0)))) INNER JOIN v0 ON (((t0.c17, vt2.lid, t0.c1)) BETWEEN ((CAST(t0.c17 AS NUMERIC), x'', CAST(vt2.lid AS TEXT))) AND ((CAST(t0.c48 AS INTEGER), ((((t0.c0)AND(vt2.c1)))OR(vt2.c3)), HEX(t0.c48)))));
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN vt2 ON ((((t0.c17) NOTNULL))LIKE((vt0.c0 IN (vt2.c0)))) INNER JOIN v0 ON (((t0.c17, vt2.lid, t0.c1)) BETWEEN ((CAST(t0.c17 AS NUMERIC), x'', CAST(vt2.lid AS TEXT))) AND ((CAST(t0.c48 AS INTEGER), ((((t0.c0)AND(vt2.c1)))OR(vt2.c3)), HEX(t0.c48)))) WHERE (((((('1525196941')) NOT BETWEEN ((v0.c0)) AND ((vt2.c3))))==(((vt2.lid) BETWEEN (t0.c17) AND (vt2.lid)))));
SELECT SUM(count) FROM (SELECT ((((((('1525196941')) NOT BETWEEN ((v0.c0)) AND ((vt2.c3))))==(((vt2.lid) BETWEEN (t0.c17) AND (vt2.lid))))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN vt2 ON ((((t0.c17) NOTNULL))LIKE((vt0.c0 IN (vt2.c0)))) INNER JOIN v0 ON (((t0.c17, vt2.lid, t0.c1)) BETWEEN ((CAST(t0.c17 AS NUMERIC), x'', CAST(vt2.lid AS TEXT))) AND ((CAST(t0.c48 AS INTEGER), ((((t0.c0)AND(vt2.c1)))OR(vt2.c3)), HEX(t0.c48)))));
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN vt2 ON ((((t0.c17) NOTNULL))LIKE((vt0.c0 IN (vt2.c0)))) INNER JOIN v0 ON (((t0.c17, vt2.lid, t0.c1)) BETWEEN ((CAST(t0.c17 AS NUMERIC), x'', CAST(vt2.lid AS TEXT))) AND ((CAST(t0.c48 AS INTEGER), ((((t0.c0)AND(vt2.c1)))OR(vt2.c3)), HEX(t0.c48)))) WHERE (((((('1525196941')) NOT BETWEEN ((v0.c0)) AND ((vt2.c3))))==(((vt2.lid) BETWEEN (t0.c17) AND (vt2.lid)))));
SELECT * FROM v0, vt2 FULL OUTER JOIN vt0 ON (NOT (CASE WHEN v0.c0 THEN vt2.c1 END)) WHERE (vt0.c0 COLLATE NOCASE) ORDER BY CAST((~ (vt2.c2)) AS BLOB)  NULLS FIRST, (((((x'')) NOT BETWEEN ((v0.c0)) AND ((vt2.c1)))) NOT BETWEEN (((((vt2.c3)AND(vt2.c1)))AND(vt2.c2))) AND (vt2.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0, vt2 FULL OUTER JOIN vt0 ON (NOT (CASE WHEN v0.c0 THEN vt2.c1 END)) ORDER BY CAST((~ (vt2.c2)) AS BLOB)  NULLS FIRST, (((((x'')) NOT BETWEEN ((v0.c0)) AND ((vt2.c1)))) NOT BETWEEN (((((vt2.c3)AND(vt2.c1)))AND(vt2.c2))) AND (vt2.c2)) ASC  NULLS FIRST);
SELECT * FROM v0, vt2 FULL OUTER JOIN vt0 ON (NOT (CASE WHEN v0.c0 THEN vt2.c1 END)) WHERE (vt0.c0 COLLATE NOCASE) ORDER BY CAST((~ (vt2.c2)) AS BLOB)  NULLS FIRST, (((((x'')) NOT BETWEEN ((v0.c0)) AND ((vt2.c1)))) NOT BETWEEN (((((vt2.c3)AND(vt2.c1)))AND(vt2.c2))) AND (vt2.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0, vt2 FULL OUTER JOIN vt0 ON (NOT (CASE WHEN v0.c0 THEN vt2.c1 END)) ORDER BY CAST((~ (vt2.c2)) AS BLOB)  NULLS FIRST, (((((x'')) NOT BETWEEN ((v0.c0)) AND ((vt2.c1)))) NOT BETWEEN (((((vt2.c3)AND(vt2.c1)))AND(vt2.c2))) AND (vt2.c2)) ASC  NULLS FIRST);
SELECT * FROM v0, vt2 FULL OUTER JOIN vt0 ON (NOT (CASE WHEN v0.c0 THEN vt2.c1 END)) WHERE (vt0.c0 COLLATE NOCASE) ORDER BY CAST((~ (vt2.c2)) AS BLOB)  NULLS FIRST, (((((x'')) NOT BETWEEN ((v0.c0)) AND ((vt2.c1)))) NOT BETWEEN (((((vt2.c3)AND(vt2.c1)))AND(vt2.c2))) AND (vt2.c2)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE (vt2.c3);
SELECT SUM(count) FROM (SELECT ((vt2.c3) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE (vt2.c3);
SELECT SUM(count) FROM (SELECT ((vt2.c3) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE (vt2.c3);
SELECT * FROM vt2 WHERE (SQLITE_SOURCE_ID()) ORDER BY vt2.lid  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt2 ORDER BY vt2.lid  NULLS LAST);
SELECT * FROM vt2 WHERE (SQLITE_SOURCE_ID()) ORDER BY vt2.lid  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt2 ORDER BY vt2.lid  NULLS LAST);
SELECT * FROM vt2 WHERE (SQLITE_SOURCE_ID()) ORDER BY vt2.lid  NULLS LAST;
SELECT COUNT(*) FROM t0, v0 WHERE (((v0.c0)>>(t0.c1)) COLLATE NOCASE) ORDER BY CASE WHEN ((t0.c17) NOT BETWEEN (t0.c17) AND (v0.c0)) THEN (+ (-7.47194916E8)) WHEN ((v0.c0)+(t0.c48)) THEN t0.c0 WHEN ((((t0.c0)OR(t0.c48)))OR(v0.c0)) THEN CASE t0.c1  WHEN v0.c0 THEN t0.c48 END ELSE ((((t0.c17)OR(NULL)))OR(t0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)>>(t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0 ORDER BY CASE WHEN ((t0.c17) NOT BETWEEN (t0.c17) AND (v0.c0)) THEN (+ (-7.47194916E8)) WHEN ((v0.c0)+(t0.c48)) THEN t0.c0 WHEN ((((t0.c0)OR(t0.c48)))OR(v0.c0)) THEN CASE t0.c1  WHEN v0.c0 THEN t0.c48 END ELSE ((((t0.c17)OR(NULL)))OR(t0.c1)) END  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE (((v0.c0)>>(t0.c1)) COLLATE NOCASE) ORDER BY CASE WHEN ((t0.c17) NOT BETWEEN (t0.c17) AND (v0.c0)) THEN (+ (-7.47194916E8)) WHEN ((v0.c0)+(t0.c48)) THEN t0.c0 WHEN ((((t0.c0)OR(t0.c48)))OR(v0.c0)) THEN CASE t0.c1  WHEN v0.c0 THEN t0.c48 END ELSE ((((t0.c17)OR(NULL)))OR(t0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)>>(t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0 ORDER BY CASE WHEN ((t0.c17) NOT BETWEEN (t0.c17) AND (v0.c0)) THEN (+ (-7.47194916E8)) WHEN ((v0.c0)+(t0.c48)) THEN t0.c0 WHEN ((((t0.c0)OR(t0.c48)))OR(v0.c0)) THEN CASE t0.c1  WHEN v0.c0 THEN t0.c48 END ELSE ((((t0.c17)OR(NULL)))OR(t0.c1)) END  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE (((v0.c0)>>(t0.c1)) COLLATE NOCASE) ORDER BY CASE WHEN ((t0.c17) NOT BETWEEN (t0.c17) AND (v0.c0)) THEN (+ (-7.47194916E8)) WHEN ((v0.c0)+(t0.c48)) THEN t0.c0 WHEN ((((t0.c0)OR(t0.c48)))OR(v0.c0)) THEN CASE t0.c1  WHEN v0.c0 THEN t0.c48 END ELSE ((((t0.c17)OR(NULL)))OR(t0.c1)) END  NULLS LAST;
SELECT * FROM v0, vt0, vt2 WHERE ((((((vt0.c0) BETWEEN (vt2.c2) AND (vt2.c1))))<=((SQLITE_SOURCE_ID())))) ORDER BY (((v0.c0)) NOT BETWEEN ((vt2.lid)) AND ((vt0.c0))) COLLATE NOCASE  NULLS LAST, (NOT (CAST(vt2.lid AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (vt2.c2) AND (vt2.c1))))<=((SQLITE_SOURCE_ID())))) IS TRUE)  as count FROM v0, vt0, vt2 ORDER BY (((v0.c0)) NOT BETWEEN ((vt2.lid)) AND ((vt0.c0))) COLLATE NOCASE  NULLS LAST, (NOT (CAST(vt2.lid AS INTEGER))) ASC  NULLS FIRST);
SELECT * FROM v0, vt0, vt2 WHERE ((((((vt0.c0) BETWEEN (vt2.c2) AND (vt2.c1))))<=((SQLITE_SOURCE_ID())))) ORDER BY (((v0.c0)) NOT BETWEEN ((vt2.lid)) AND ((vt0.c0))) COLLATE NOCASE  NULLS LAST, (NOT (CAST(vt2.lid AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (vt2.c2) AND (vt2.c1))))<=((SQLITE_SOURCE_ID())))) IS TRUE)  as count FROM v0, vt0, vt2 ORDER BY (((v0.c0)) NOT BETWEEN ((vt2.lid)) AND ((vt0.c0))) COLLATE NOCASE  NULLS LAST, (NOT (CAST(vt2.lid AS INTEGER))) ASC  NULLS FIRST);
SELECT * FROM v0, vt0, vt2 WHERE ((((((vt0.c0) BETWEEN (vt2.c2) AND (vt2.c1))))<=((SQLITE_SOURCE_ID())))) ORDER BY (((v0.c0)) NOT BETWEEN ((vt2.lid)) AND ((vt0.c0))) COLLATE NOCASE  NULLS LAST, (NOT (CAST(vt2.lid AS INTEGER))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ('-2125444500')) THEN UPPER(DISTINCT vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ('-2125444500')) THEN UPPER(DISTINCT vt0.c0) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ('-2125444500')) THEN UPPER(DISTINCT vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ('-2125444500')) THEN UPPER(DISTINCT vt0.c0) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ('-2125444500')) THEN UPPER(DISTINCT vt0.c0) END);
SELECT ALL COUNT(*) FROM t0, v0 INNER JOIN vt0 ON '' LEFT OUTER JOIN vt2 ON vt2.c3 WHERE (((((((((((vt2.c0) BETWEEN (t0.c17) AND (vt2.c0)))AND(vt2.lid COLLATE BINARY)))OR(vt2.c1)))OR(((vt2.c2) BETWEEN (vt2.c1) AND (t0.c1)))))AND(((((vt2.c1)OR(t0.c17)))AND(t0.c17))))) ORDER BY x'' DESC, ((((vt2.lid) NOT NULL)) ISNULL)  NULLS LAST, CASE WHEN TRIM(DISTINCT v0.c0) THEN vt2.lid END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt2.c0) BETWEEN (t0.c17) AND (vt2.c0)))AND(vt2.lid COLLATE BINARY)))OR(vt2.c1)))OR(((vt2.c2) BETWEEN (vt2.c1) AND (t0.c1)))))AND(((((vt2.c1)OR(t0.c17)))AND(t0.c17))))) IS TRUE)  as count FROM t0, v0 INNER JOIN vt0 ON '' LEFT OUTER JOIN vt2 ON vt2.c3 ORDER BY x'' DESC, ((((vt2.lid) NOT NULL)) ISNULL)  NULLS LAST, CASE WHEN TRIM(DISTINCT v0.c0) THEN vt2.lid END DESC);
SELECT ALL COUNT(*) FROM t0, v0 INNER JOIN vt0 ON '' LEFT OUTER JOIN vt2 ON vt2.c3 WHERE (((((((((((vt2.c0) BETWEEN (t0.c17) AND (vt2.c0)))AND(vt2.lid COLLATE BINARY)))OR(vt2.c1)))OR(((vt2.c2) BETWEEN (vt2.c1) AND (t0.c1)))))AND(((((vt2.c1)OR(t0.c17)))AND(t0.c17))))) ORDER BY x'' DESC, ((((vt2.lid) NOT NULL)) ISNULL)  NULLS LAST, CASE WHEN TRIM(DISTINCT v0.c0) THEN vt2.lid END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt2.c0) BETWEEN (t0.c17) AND (vt2.c0)))AND(vt2.lid COLLATE BINARY)))OR(vt2.c1)))OR(((vt2.c2) BETWEEN (vt2.c1) AND (t0.c1)))))AND(((((vt2.c1)OR(t0.c17)))AND(t0.c17))))) IS TRUE)  as count FROM t0, v0 INNER JOIN vt0 ON '' LEFT OUTER JOIN vt2 ON vt2.c3 ORDER BY x'' DESC, ((((vt2.lid) NOT NULL)) ISNULL)  NULLS LAST, CASE WHEN TRIM(DISTINCT v0.c0) THEN vt2.lid END DESC);
SELECT ALL COUNT(*) FROM t0, v0 INNER JOIN vt0 ON '' LEFT OUTER JOIN vt2 ON vt2.c3 WHERE (((((((((((vt2.c0) BETWEEN (t0.c17) AND (vt2.c0)))AND(vt2.lid COLLATE BINARY)))OR(vt2.c1)))OR(((vt2.c2) BETWEEN (vt2.c1) AND (t0.c1)))))AND(((((vt2.c1)OR(t0.c17)))AND(t0.c17))))) ORDER BY x'' DESC, ((((vt2.lid) NOT NULL)) ISNULL)  NULLS LAST, CASE WHEN TRIM(DISTINCT v0.c0) THEN vt2.lid END DESC;
SELECT ALL COUNT(*) FROM t0, v0, vt0, vt2 WHERE (((((((t0.c0)) BETWEEN ((vt2.c2)) AND ((vt2.c2)))))>((CAST(vt2.c2 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)) BETWEEN ((vt2.c2)) AND ((vt2.c2)))))>((CAST(vt2.c2 AS BLOB))))) IS TRUE)  as count FROM t0, v0, vt0, vt2);
SELECT ALL COUNT(*) FROM t0, v0, vt0, vt2 WHERE (((((((t0.c0)) BETWEEN ((vt2.c2)) AND ((vt2.c2)))))>((CAST(vt2.c2 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)) BETWEEN ((vt2.c2)) AND ((vt2.c2)))))>((CAST(vt2.c2 AS BLOB))))) IS TRUE)  as count FROM t0, v0, vt0, vt2);
SELECT ALL COUNT(*) FROM t0, v0, vt0, vt2 WHERE (((((((t0.c0)) BETWEEN ((vt2.c2)) AND ((vt2.c2)))))>((CAST(vt2.c2 AS BLOB)))));
SELECT * FROM t0, v0 NOT INDEXED, vt0 WHERE (CASE WHEN ((t0.c0)<=(t0.c48)) THEN ((((t0.c0)AND(v0.c0)))OR(t0.c1)) ELSE ((t0.c48)-(t0.c1)) END) ORDER BY TRIM(((t0.c0)IS(t0.c48))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)<=(t0.c48)) THEN ((((t0.c0)AND(v0.c0)))OR(t0.c1)) ELSE ((t0.c48)-(t0.c1)) END) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY TRIM(((t0.c0)IS(t0.c48))) ASC  NULLS LAST);
SELECT * FROM t0, v0 NOT INDEXED, vt0 WHERE (CASE WHEN ((t0.c0)<=(t0.c48)) THEN ((((t0.c0)AND(v0.c0)))OR(t0.c1)) ELSE ((t0.c48)-(t0.c1)) END) ORDER BY TRIM(((t0.c0)IS(t0.c48))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)<=(t0.c48)) THEN ((((t0.c0)AND(v0.c0)))OR(t0.c1)) ELSE ((t0.c48)-(t0.c1)) END) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY TRIM(((t0.c0)IS(t0.c48))) ASC  NULLS LAST);
SELECT * FROM t0, v0 NOT INDEXED, vt0 WHERE (CASE WHEN ((t0.c0)<=(t0.c48)) THEN ((((t0.c0)AND(v0.c0)))OR(t0.c1)) ELSE ((t0.c48)-(t0.c1)) END) ORDER BY TRIM(((t0.c0)IS(t0.c48))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((0.7010339000938073, t0.c0, t0.c17)) NOT BETWEEN ((((((t0.c0)OR(t0.c0)))OR(t0.c17)), ((t0.c1)LIKE(vt0.c0)), CAST(t0.c0 AS BLOB))) AND (((((vt0.c0, t0.c1, t0.c17)) BETWEEN ((t0.c17, vt0.c0, t0.c0)) AND ((t0.c17, t0.c17, t0.c1))), t0.c1, ((t0.c1) NOT NULL)))) WHERE (((((t0.c48) BETWEEN (t0.c17) AND (t0.c1)))<=(((x'')>(t0.c0))))) ORDER BY ((CAST(t0.c1 AS REAL)) BETWEEN (((t0.c1) NOT NULL)) AND (((vt0.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c48) BETWEEN (t0.c17) AND (t0.c1)))<=(((x'')>(t0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((0.7010339000938073, t0.c0, t0.c17)) NOT BETWEEN ((((((t0.c0)OR(t0.c0)))OR(t0.c17)), ((t0.c1)LIKE(vt0.c0)), CAST(t0.c0 AS BLOB))) AND (((((vt0.c0, t0.c1, t0.c17)) BETWEEN ((t0.c17, vt0.c0, t0.c0)) AND ((t0.c17, t0.c17, t0.c1))), t0.c1, ((t0.c1) NOT NULL)))) ORDER BY ((CAST(t0.c1 AS REAL)) BETWEEN (((t0.c1) NOT NULL)) AND (((vt0.c0) IS TRUE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((0.7010339000938073, t0.c0, t0.c17)) NOT BETWEEN ((((((t0.c0)OR(t0.c0)))OR(t0.c17)), ((t0.c1)LIKE(vt0.c0)), CAST(t0.c0 AS BLOB))) AND (((((vt0.c0, t0.c1, t0.c17)) BETWEEN ((t0.c17, vt0.c0, t0.c0)) AND ((t0.c17, t0.c17, t0.c1))), t0.c1, ((t0.c1) NOT NULL)))) WHERE (((((t0.c48) BETWEEN (t0.c17) AND (t0.c1)))<=(((x'')>(t0.c0))))) ORDER BY ((CAST(t0.c1 AS REAL)) BETWEEN (((t0.c1) NOT NULL)) AND (((vt0.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c48) BETWEEN (t0.c17) AND (t0.c1)))<=(((x'')>(t0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((0.7010339000938073, t0.c0, t0.c17)) NOT BETWEEN ((((((t0.c0)OR(t0.c0)))OR(t0.c17)), ((t0.c1)LIKE(vt0.c0)), CAST(t0.c0 AS BLOB))) AND (((((vt0.c0, t0.c1, t0.c17)) BETWEEN ((t0.c17, vt0.c0, t0.c0)) AND ((t0.c17, t0.c17, t0.c1))), t0.c1, ((t0.c1) NOT NULL)))) ORDER BY ((CAST(t0.c1 AS REAL)) BETWEEN (((t0.c1) NOT NULL)) AND (((vt0.c0) IS TRUE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((0.7010339000938073, t0.c0, t0.c17)) NOT BETWEEN ((((((t0.c0)OR(t0.c0)))OR(t0.c17)), ((t0.c1)LIKE(vt0.c0)), CAST(t0.c0 AS BLOB))) AND (((((vt0.c0, t0.c1, t0.c17)) BETWEEN ((t0.c17, vt0.c0, t0.c0)) AND ((t0.c17, t0.c17, t0.c1))), t0.c1, ((t0.c1) NOT NULL)))) WHERE (((((t0.c48) BETWEEN (t0.c17) AND (t0.c1)))<=(((x'')>(t0.c0))))) ORDER BY ((CAST(t0.c1 AS REAL)) BETWEEN (((t0.c1) NOT NULL)) AND (((vt0.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0, vt2 WHERE (((vt2.c1) NOT BETWEEN (v0.c0) AND (vt2.c0)) COLLATE RTRIM) ORDER BY ((((vt2.c1)==(t0.c17))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt2.c1) NOT BETWEEN (v0.c0) AND (vt2.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0, vt2 ORDER BY ((((vt2.c1)==(t0.c17))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt2 WHERE (((vt2.c1) NOT BETWEEN (v0.c0) AND (vt2.c0)) COLLATE RTRIM) ORDER BY ((((vt2.c1)==(t0.c17))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt2.c1) NOT BETWEEN (v0.c0) AND (vt2.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0, vt2 ORDER BY ((((vt2.c1)==(t0.c17))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt2 WHERE (((vt2.c1) NOT BETWEEN (v0.c0) AND (vt2.c0)) COLLATE RTRIM) ORDER BY ((((vt2.c1)==(t0.c17))) NOT NULL)  NULLS LAST;
SELECT ALL * FROM v0, vt2 WHERE (vt2.c1) ORDER BY UPPER(DISTINCT DATETIME(x'', vt2.c0, v0.c0))  NULLS LAST, UPPER(DISTINCT ((vt2.c0)|(1525196941)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt2.c1) IS TRUE)  as count FROM v0, vt2 ORDER BY UPPER(DISTINCT DATETIME(x'', vt2.c0, v0.c0))  NULLS LAST, UPPER(DISTINCT ((vt2.c0)|(1525196941)))  NULLS FIRST);
SELECT ALL * FROM v0, vt2 WHERE (vt2.c1) ORDER BY UPPER(DISTINCT DATETIME(x'', vt2.c0, v0.c0))  NULLS LAST, UPPER(DISTINCT ((vt2.c0)|(1525196941)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt2.c1) IS TRUE)  as count FROM v0, vt2 ORDER BY UPPER(DISTINCT DATETIME(x'', vt2.c0, v0.c0))  NULLS LAST, UPPER(DISTINCT ((vt2.c0)|(1525196941)))  NULLS FIRST);
SELECT ALL * FROM v0, vt2 WHERE (vt2.c1) ORDER BY UPPER(DISTINCT DATETIME(x'', vt2.c0, v0.c0))  NULLS LAST, UPPER(DISTINCT ((vt2.c0)|(1525196941)))  NULLS FIRST;
SELECT COUNT(*) FROM vt2, vt0, t0, v0 WHERE ((CAST(vt2.c3 AS REAL) IN ())) ORDER BY CAST(((t0.c17)>>(v0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((CAST(vt2.c3 AS REAL) IN ())) IS TRUE)  as count FROM vt2, vt0, t0, v0 ORDER BY CAST(((t0.c17)>>(v0.c0)) AS INTEGER));
SELECT COUNT(*) FROM vt2, vt0, t0, v0 WHERE ((CAST(vt2.c3 AS REAL) IN ())) ORDER BY CAST(((t0.c17)>>(v0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((CAST(vt2.c3 AS REAL) IN ())) IS TRUE)  as count FROM vt2, vt0, t0, v0 ORDER BY CAST(((t0.c17)>>(v0.c0)) AS INTEGER));
SELECT COUNT(*) FROM vt2, vt0, t0, v0 WHERE ((CAST(vt2.c3 AS REAL) IN ())) ORDER BY CAST(((t0.c17)>>(v0.c0)) AS INTEGER);
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN vt2 ON ((vt2.lid COLLATE NOCASE) NOT BETWEEN (((((t0.c0)OR(vt0.c0)))OR(vt2.lid))) AND (NULL)) CROSS JOIN t0 ON (((+ (t0.c0)))AND((vt2.c1 IN ()))) WHERE (CASE WHEN (~ (t0.c48)) THEN (vt2.lid IN ()) ELSE '#\ru<lr~#' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (t0.c48)) THEN (vt2.lid IN ()) ELSE '#\ru<lr~#' END) IS TRUE)  as count FROM vt0, v0 INNER JOIN vt2 ON ((vt2.lid COLLATE NOCASE) NOT BETWEEN (((((t0.c0)OR(vt0.c0)))OR(vt2.lid))) AND (NULL)) CROSS JOIN t0 ON (((+ (t0.c0)))AND((vt2.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN vt2 ON ((vt2.lid COLLATE NOCASE) NOT BETWEEN (((((t0.c0)OR(vt0.c0)))OR(vt2.lid))) AND (NULL)) CROSS JOIN t0 ON (((+ (t0.c0)))AND((vt2.c1 IN ()))) WHERE (CASE WHEN (~ (t0.c48)) THEN (vt2.lid IN ()) ELSE '#\ru<lr~#' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (t0.c48)) THEN (vt2.lid IN ()) ELSE '#\ru<lr~#' END) IS TRUE)  as count FROM vt0, v0 INNER JOIN vt2 ON ((vt2.lid COLLATE NOCASE) NOT BETWEEN (((((t0.c0)OR(vt0.c0)))OR(vt2.lid))) AND (NULL)) CROSS JOIN t0 ON (((+ (t0.c0)))AND((vt2.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN vt2 ON ((vt2.lid COLLATE NOCASE) NOT BETWEEN (((((t0.c0)OR(vt0.c0)))OR(vt2.lid))) AND (NULL)) CROSS JOIN t0 ON (((+ (t0.c0)))AND((vt2.c1 IN ()))) WHERE (CASE WHEN (~ (t0.c48)) THEN (vt2.lid IN ()) ELSE '#\ru<lr~#' END);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS BLOB));
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0)<>(vt0.c0))))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()), CASE WHEN ((0x301622fd)>=(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) END  NULLS LAST, (vt0.c0 COLLATE BINARY IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN COALESCE(DISTINCT vt0.c0, vt0.c0) ELSE 0.01501969474084297 END;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()), CASE WHEN ((0X301622fd)>=(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) END  NULLS LAST, (vt0.c0 COLLATE BINARY IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN COALESCE(DISTINCT vt0.c0, vt0.c0) ELSE 0.01501969474084297 END);
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0)<>(vt0.c0))))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()), CASE WHEN ((0x301622fd)>=(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) END  NULLS LAST, (vt0.c0 COLLATE BINARY IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN COALESCE(DISTINCT vt0.c0, vt0.c0) ELSE 0.01501969474084297 END;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()), CASE WHEN ((0X301622fd)>=(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) END  NULLS LAST, (vt0.c0 COLLATE BINARY IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN COALESCE(DISTINCT vt0.c0, vt0.c0) ELSE 0.01501969474084297 END);
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0)<>(vt0.c0))))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()), CASE WHEN ((0x301622fd)>=(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) END  NULLS LAST, (vt0.c0 COLLATE BINARY IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN COALESCE(DISTINCT vt0.c0, vt0.c0) ELSE 0.01501969474084297 END;
SELECT ALL * FROM v0, vt2, t0, vt0 WHERE (CASE WHEN UNLIKELY(DISTINCT vt2.c1) THEN CAST(t0.c0 AS TEXT) ELSE ((vt2.c1) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UNLIKELY(DISTINCT vt2.c1) THEN CAST(t0.c0 AS TEXT) ELSE ((vt2.c1) NOTNULL) END) IS TRUE)  as count FROM v0, vt2, t0, vt0);
SELECT ALL * FROM v0, vt2, t0, vt0 WHERE (CASE WHEN UNLIKELY(DISTINCT vt2.c1) THEN CAST(t0.c0 AS TEXT) ELSE ((vt2.c1) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UNLIKELY(DISTINCT vt2.c1) THEN CAST(t0.c0 AS TEXT) ELSE ((vt2.c1) NOTNULL) END) IS TRUE)  as count FROM v0, vt2, t0, vt0);
SELECT ALL * FROM v0, vt2, t0, vt0 WHERE (CASE WHEN UNLIKELY(DISTINCT vt2.c1) THEN CAST(t0.c0 AS TEXT) ELSE ((vt2.c1) NOTNULL) END);
SELECT COUNT(*) FROM t0, v0 NOT INDEXED, vt0 WHERE ((((((((((((t0.c48))>=((t0.c48))))AND(((v0.c0)||(NULL)))))OR(((((vt0.c0)AND(t0.c1)))AND(vt0.c0)))))OR(CASE t0.c17  WHEN 'FALSE' THEN t0.c1 ELSE t0.c48 END)))OR(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c48))>=((t0.c48))))AND(((v0.c0)||(NULL)))))OR(((((vt0.c0)AND(t0.c1)))AND(vt0.c0)))))OR(CASE t0.c17  WHEN 'FALSE' THEN t0.c1 ELSE t0.c48 END)))OR(t0.c1))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0 NOT INDEXED, vt0 WHERE ((((((((((((t0.c48))>=((t0.c48))))AND(((v0.c0)||(NULL)))))OR(((((vt0.c0)AND(t0.c1)))AND(vt0.c0)))))OR(CASE t0.c17  WHEN 'FALSE' THEN t0.c1 ELSE t0.c48 END)))OR(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c48))>=((t0.c48))))AND(((v0.c0)||(NULL)))))OR(((((vt0.c0)AND(t0.c1)))AND(vt0.c0)))))OR(CASE t0.c17  WHEN 'FALSE' THEN t0.c1 ELSE t0.c48 END)))OR(t0.c1))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0 NOT INDEXED, vt0 WHERE ((((((((((((t0.c48))>=((t0.c48))))AND(((v0.c0)||(NULL)))))OR(((((vt0.c0)AND(t0.c1)))AND(vt0.c0)))))OR(CASE t0.c17  WHEN 'FALSE' THEN t0.c1 ELSE t0.c48 END)))OR(t0.c1)));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt2 ON ((((((((CAST(vt2.c3 AS NUMERIC))AND(CASE vt2.c0  WHEN 0.7167876405754108 THEN t0.c48 ELSE t0.c0 END)))AND((('') NOT BETWEEN (vt2.c2) AND (vt2.c2)))))AND((+ (vt2.c0)))))OR(((vt2.c0)AND(vt2.lid)))) CROSS JOIN vt0 ON vt2.c3 WHERE ((NOT (((((vt2.lid)OR(t0.c1)))OR(t0.c0))))) ORDER BY IFNULL(t0.c1, ((vt0.c0)<(vt2.c3))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((vt2.lid)OR(t0.c1)))OR(t0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt2 ON ((((((((CAST(vt2.c3 AS NUMERIC))AND(CASE vt2.c0  WHEN 0.7167876405754108 THEN t0.c48 ELSE t0.c0 END)))AND((('') NOT BETWEEN (vt2.c2) AND (vt2.c2)))))AND((+ (vt2.c0)))))OR(((vt2.c0)AND(vt2.lid)))) CROSS JOIN vt0 ON vt2.c3 ORDER BY IFNULL(t0.c1, ((vt0.c0)<(vt2.c3))) DESC);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt2 ON ((((((((CAST(vt2.c3 AS NUMERIC))AND(CASE vt2.c0  WHEN 0.7167876405754108 THEN t0.c48 ELSE t0.c0 END)))AND((('') NOT BETWEEN (vt2.c2) AND (vt2.c2)))))AND((+ (vt2.c0)))))OR(((vt2.c0)AND(vt2.lid)))) CROSS JOIN vt0 ON vt2.c3 WHERE ((NOT (((((vt2.lid)OR(t0.c1)))OR(t0.c0))))) ORDER BY IFNULL(t0.c1, ((vt0.c0)<(vt2.c3))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((vt2.lid)OR(t0.c1)))OR(t0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt2 ON ((((((((CAST(vt2.c3 AS NUMERIC))AND(CASE vt2.c0  WHEN 0.7167876405754108 THEN t0.c48 ELSE t0.c0 END)))AND((('') NOT BETWEEN (vt2.c2) AND (vt2.c2)))))AND((+ (vt2.c0)))))OR(((vt2.c0)AND(vt2.lid)))) CROSS JOIN vt0 ON vt2.c3 ORDER BY IFNULL(t0.c1, ((vt0.c0)<(vt2.c3))) DESC);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt2 ON ((((((((CAST(vt2.c3 AS NUMERIC))AND(CASE vt2.c0  WHEN 0.7167876405754108 THEN t0.c48 ELSE t0.c0 END)))AND((('') NOT BETWEEN (vt2.c2) AND (vt2.c2)))))AND((+ (vt2.c0)))))OR(((vt2.c0)AND(vt2.lid)))) CROSS JOIN vt0 ON vt2.c3 WHERE ((NOT (((((vt2.lid)OR(t0.c1)))OR(t0.c0))))) ORDER BY IFNULL(t0.c1, ((vt0.c0)<(vt2.c3))) DESC;
SELECT ALL * FROM vt0, v0 WHERE ((~ (((vt0.c0)||(vt0.c0))))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0 DESC);
SELECT ALL * FROM vt0, v0 WHERE ((~ (((vt0.c0)||(vt0.c0))))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0 DESC);
SELECT ALL * FROM vt0, v0 WHERE ((~ (((vt0.c0)||(vt0.c0))))) ORDER BY vt0.c0 DESC;
SELECT ALL COUNT(*) FROM t0, vt2, vt0 WHERE (((((vt2.c3)<>(t0.c48))) NOT BETWEEN ('-1359648747') AND (((t0.c48)AND(vt2.c1))))) ORDER BY TRIM(DISTINCT '-306262679', (t0.c0 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c3)!=(t0.c48))) NOT BETWEEN ('-1359648747') AND (((t0.c48)AND(vt2.c1))))) IS TRUE)  as count FROM t0, vt2, vt0 ORDER BY TRIM(DISTINCT '-306262679', (t0.c0 IN ()))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt2, vt0 WHERE (((((vt2.c3)<>(t0.c48))) NOT BETWEEN ('-1359648747') AND (((t0.c48)AND(vt2.c1))))) ORDER BY TRIM(DISTINCT '-306262679', (t0.c0 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c3)!=(t0.c48))) NOT BETWEEN ('-1359648747') AND (((t0.c48)AND(vt2.c1))))) IS TRUE)  as count FROM t0, vt2, vt0 ORDER BY TRIM(DISTINCT '-306262679', (t0.c0 IN ()))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt2, vt0 WHERE (((((vt2.c3)<>(t0.c48))) NOT BETWEEN ('-1359648747') AND (((t0.c48)AND(vt2.c1))))) ORDER BY TRIM(DISTINCT '-306262679', (t0.c0 IN ()))  NULLS LAST;
SELECT ALL * FROM t0, v0, vt2, vt0 WHERE (((((v0.c0) ISNULL))IS NOT(((vt2.lid)||(vt2.lid))))) ORDER BY ((((vt2.c0) IS TRUE)) NOT BETWEEN (-2052030816) AND (((t0.c1) BETWEEN (vt2.c0) AND (vt2.lid)))) ASC, (NOT (((vt2.c2)>=(vt2.lid)))) ASC  NULLS LAST, ((CASE WHEN '-1177402488' THEN t0.c0 ELSE vt0.c0 END)IS NOT(((vt2.c3) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL))IS NOT(((vt2.lid)||(vt2.lid))))) IS TRUE)  as count FROM t0, v0, vt2, vt0 ORDER BY ((((vt2.c0) IS TRUE)) NOT BETWEEN (-2052030816) AND (((t0.c1) BETWEEN (vt2.c0) AND (vt2.lid)))) ASC, (NOT (((vt2.c2)>=(vt2.lid)))) ASC  NULLS LAST, ((CASE WHEN '-1177402488' THEN t0.c0 ELSE vt0.c0 END)IS NOT(((vt2.c3) NOTNULL))));
SELECT ALL * FROM t0, v0, vt2, vt0 WHERE (((((v0.c0) ISNULL))IS NOT(((vt2.lid)||(vt2.lid))))) ORDER BY ((((vt2.c0) IS TRUE)) NOT BETWEEN (-2052030816) AND (((t0.c1) BETWEEN (vt2.c0) AND (vt2.lid)))) ASC, (NOT (((vt2.c2)>=(vt2.lid)))) ASC  NULLS LAST, ((CASE WHEN '-1177402488' THEN t0.c0 ELSE vt0.c0 END)IS NOT(((vt2.c3) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL))IS NOT(((vt2.lid)||(vt2.lid))))) IS TRUE)  as count FROM t0, v0, vt2, vt0 ORDER BY ((((vt2.c0) IS TRUE)) NOT BETWEEN (-2052030816) AND (((t0.c1) BETWEEN (vt2.c0) AND (vt2.lid)))) ASC, (NOT (((vt2.c2)>=(vt2.lid)))) ASC  NULLS LAST, ((CASE WHEN '-1177402488' THEN t0.c0 ELSE vt0.c0 END)IS NOT(((vt2.c3) NOTNULL))));
SELECT ALL * FROM t0, v0, vt2, vt0 WHERE (((((v0.c0) ISNULL))IS NOT(((vt2.lid)||(vt2.lid))))) ORDER BY ((((vt2.c0) IS TRUE)) NOT BETWEEN (-2052030816) AND (((t0.c1) BETWEEN (vt2.c0) AND (vt2.lid)))) ASC, (NOT (((vt2.c2)>=(vt2.lid)))) ASC  NULLS LAST, ((CASE WHEN '-1177402488' THEN t0.c0 ELSE vt0.c0 END)IS NOT(((vt2.c3) NOTNULL)));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((CASE vt0.c0  WHEN t0.c1 THEN t0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN t0.c1 THEN t0.c1 END IN ())) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((CASE vt0.c0  WHEN t0.c1 THEN t0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN t0.c1 THEN t0.c1 END IN ())) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((CASE vt0.c0  WHEN t0.c1 THEN t0.c1 END IN ()));
SELECT * FROM vt2, t0, vt0 WHERE (((((((t0.c48) NOT BETWEEN (vt0.c0) AND (vt2.c0)))AND(((((vt2.c1)AND(vt2.c3)))OR(vt2.c0)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c48) NOT BETWEEN (vt0.c0) AND (vt2.c0)))AND(((((vt2.c1)AND(vt2.c3)))OR(vt2.c0)))))OR(NULL))) IS TRUE)  as count FROM vt2, t0, vt0);
SELECT * FROM vt2, t0, vt0 WHERE (((((((t0.c48) NOT BETWEEN (vt0.c0) AND (vt2.c0)))AND(((((vt2.c1)AND(vt2.c3)))OR(vt2.c0)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c48) NOT BETWEEN (vt0.c0) AND (vt2.c0)))AND(((((vt2.c1)AND(vt2.c3)))OR(vt2.c0)))))OR(NULL))) IS TRUE)  as count FROM vt2, t0, vt0);
SELECT * FROM vt2, t0, vt0 WHERE (((((((t0.c48) NOT BETWEEN (vt0.c0) AND (vt2.c0)))AND(((((vt2.c1)AND(vt2.c3)))OR(vt2.c0)))))OR(NULL)));
SELECT ALL * FROM t0 WHERE (CASE WHEN json_array_length(t0.c17) THEN CAST(t0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN json_array_length(t0.c17) THEN CAST(t0.c0 AS INTEGER) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN json_array_length(t0.c17) THEN CAST(t0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN json_array_length(t0.c17) THEN CAST(t0.c0 AS INTEGER) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM v0, vt2, vt0 WHERE ((- (CAST(vt2.c3 AS TEXT)))) ORDER BY ''  NULLS FIRST, vt2.c2  NULLS LAST, (~ (((vt2.c1)OR(-1476851550))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt2.c3 AS TEXT)))) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY ''  NULLS FIRST, vt2.c2  NULLS LAST, (~ (((vt2.c1)OR(-1476851550))))  NULLS FIRST);
SELECT ALL * FROM v0, vt2, vt0 WHERE ((- (CAST(vt2.c3 AS TEXT)))) ORDER BY ''  NULLS FIRST, vt2.c2  NULLS LAST, (~ (((vt2.c1)OR(-1476851550))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt2.c3 AS TEXT)))) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY ''  NULLS FIRST, vt2.c2  NULLS LAST, (~ (((vt2.c1)OR(-1476851550))))  NULLS FIRST);
SELECT ALL * FROM v0, vt2, vt0 WHERE ((- (CAST(vt2.c3 AS TEXT)))) ORDER BY ''  NULLS FIRST, vt2.c2  NULLS LAST, (~ (((vt2.c1)OR(-1476851550))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS INTEGER));
SELECT ALL * FROM t0, vt2 RIGHT OUTER JOIN vt0 ON vt2.c1 WHERE (IFNULL(DISTINCT CAST(vt2.c3 AS BLOB), CAST(t0.c48 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT CAST(vt2.c3 AS BLOB), CAST(t0.c48 AS NUMERIC))) IS TRUE)  as count FROM t0, vt2 RIGHT OUTER JOIN vt0 ON vt2.c1);
SELECT ALL * FROM t0, vt2 RIGHT OUTER JOIN vt0 ON vt2.c1 WHERE (IFNULL(DISTINCT CAST(vt2.c3 AS BLOB), CAST(t0.c48 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT CAST(vt2.c3 AS BLOB), CAST(t0.c48 AS NUMERIC))) IS TRUE)  as count FROM t0, vt2 RIGHT OUTER JOIN vt0 ON vt2.c1);
SELECT ALL * FROM t0, vt2 RIGHT OUTER JOIN vt0 ON vt2.c1 WHERE (IFNULL(DISTINCT CAST(vt2.c3 AS BLOB), CAST(t0.c48 AS NUMERIC)));
SELECT * FROM vt2, vt0 LEFT OUTER JOIN t0 ON INSTR(CAST(t0.c17 AS REAL), (((vt2.c2))<>((vt2.c0)))) WHERE (((((t0.c1 COLLATE BINARY)OR(((t0.c1)>(t0.c0)))))OR((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1 COLLATE BINARY)OR(((t0.c1)>(t0.c0)))))OR((~ (t0.c0))))) IS TRUE)  as count FROM vt2, vt0 LEFT OUTER JOIN t0 ON INSTR(CAST(t0.c17 AS REAL), (((vt2.c2))<>((vt2.c0)))));
SELECT * FROM vt2, vt0 LEFT OUTER JOIN t0 ON INSTR(CAST(t0.c17 AS REAL), (((vt2.c2))<>((vt2.c0)))) WHERE (((((t0.c1 COLLATE BINARY)OR(((t0.c1)>(t0.c0)))))OR((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1 COLLATE BINARY)OR(((t0.c1)>(t0.c0)))))OR((~ (t0.c0))))) IS TRUE)  as count FROM vt2, vt0 LEFT OUTER JOIN t0 ON INSTR(CAST(t0.c17 AS REAL), (((vt2.c2))<>((vt2.c0)))));
SELECT * FROM vt2, vt0 LEFT OUTER JOIN t0 ON INSTR(CAST(t0.c17 AS REAL), (((vt2.c2))<>((vt2.c0)))) WHERE (((((t0.c1 COLLATE BINARY)OR(((t0.c1)>(t0.c0)))))OR((~ (t0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0, v0, vt2 WHERE (0.53777316787881);
SELECT SUM(count) FROM (SELECT ((0.53777316787881) IS TRUE)  as count FROM vt0, t0, v0, vt2);
SELECT ALL COUNT(*) FROM vt0, t0, v0, vt2 WHERE (0.53777316787881);
SELECT SUM(count) FROM (SELECT ((0.53777316787881) IS TRUE)  as count FROM vt0, t0, v0, vt2);
SELECT ALL COUNT(*) FROM vt0, t0, v0, vt2 WHERE (0.53777316787881);
SELECT * FROM vt2, t0, vt0 WHERE (((((t0.c48 COLLATE NOCASE)AND((((vt2.lid)) NOT BETWEEN ((vt2.c2)) AND ((t0.c0))))))OR(x'' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48 COLLATE NOCASE)AND((((vt2.lid)) NOT BETWEEN ((vt2.c2)) AND ((t0.c0))))))OR(x'' COLLATE NOCASE))) IS TRUE)  as count FROM vt2, t0, vt0);
SELECT * FROM vt2, t0, vt0 WHERE (((((t0.c48 COLLATE NOCASE)AND((((vt2.lid)) NOT BETWEEN ((vt2.c2)) AND ((t0.c0))))))OR(x'' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48 COLLATE NOCASE)AND((((vt2.lid)) NOT BETWEEN ((vt2.c2)) AND ((t0.c0))))))OR(x'' COLLATE NOCASE))) IS TRUE)  as count FROM vt2, t0, vt0);
SELECT * FROM vt2, t0, vt0 WHERE (((((t0.c48 COLLATE NOCASE)AND((((vt2.lid)) NOT BETWEEN ((vt2.c2)) AND ((t0.c0))))))OR(x'' COLLATE NOCASE)));
SELECT * FROM t0, vt0, v0, vt2 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0, v0, vt2);
SELECT * FROM t0, vt0, v0, vt2 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0, v0, vt2);
SELECT * FROM t0, vt0, v0, vt2 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt2, t0, v0 FULL OUTER JOIN vt0 ON CAST((vt2.c2 IN ()) AS INTEGER) WHERE (TYPEOF(DISTINCT (((vt2.c2))=((vt2.c3)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (((vt2.c2))=((vt2.c3))))) IS TRUE)  as count FROM vt2, t0, v0 FULL OUTER JOIN vt0 ON CAST((vt2.c2 IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM vt2, t0, v0 FULL OUTER JOIN vt0 ON CAST((vt2.c2 IN ()) AS INTEGER) WHERE (TYPEOF(DISTINCT (((vt2.c2))=((vt2.c3)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (((vt2.c2))=((vt2.c3))))) IS TRUE)  as count FROM vt2, t0, v0 FULL OUTER JOIN vt0 ON CAST((vt2.c2 IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM vt2, t0, v0 FULL OUTER JOIN vt0 ON CAST((vt2.c2 IN ()) AS INTEGER) WHERE (TYPEOF(DISTINCT (((vt2.c2))=((vt2.c3)))));
SELECT COUNT(*) FROM vt2, t0, v0 WHERE ((NOT ((((vt2.c0, v0.c0, vt2.c3, t0.c48, vt2.c1)) BETWEEN ((t0.c0, vt2.c3, 1.696732331E9, vt2.c3, v0.c0)) AND ((t0.c48, x'', t0.c0, vt2.lid, vt2.c2))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((vt2.c0, v0.c0, vt2.c3, t0.c48, vt2.c1)) BETWEEN ((t0.c0, vt2.c3, 1.696732331E9, vt2.c3, v0.c0)) AND ((t0.c48, x'', t0.c0, vt2.lid, vt2.c2)))))) IS TRUE)  as count FROM vt2, t0, v0);
SELECT COUNT(*) FROM vt2, t0, v0 WHERE ((NOT ((((vt2.c0, v0.c0, vt2.c3, t0.c48, vt2.c1)) BETWEEN ((t0.c0, vt2.c3, 1.696732331E9, vt2.c3, v0.c0)) AND ((t0.c48, x'', t0.c0, vt2.lid, vt2.c2))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((vt2.c0, v0.c0, vt2.c3, t0.c48, vt2.c1)) BETWEEN ((t0.c0, vt2.c3, 1.696732331E9, vt2.c3, v0.c0)) AND ((t0.c48, x'', t0.c0, vt2.lid, vt2.c2)))))) IS TRUE)  as count FROM vt2, t0, v0);
SELECT COUNT(*) FROM vt2, t0, v0 WHERE ((NOT ((((vt2.c0, v0.c0, vt2.c3, t0.c48, vt2.c1)) BETWEEN ((t0.c0, vt2.c3, 1.696732331E9, vt2.c3, v0.c0)) AND ((t0.c48, x'', t0.c0, vt2.lid, vt2.c2))))));
SELECT ALL * FROM t0, v0, vt2 WHERE (json_insert((NOT (vt2.c3)), (t0.c48 IN ()), LTRIM('-1037163204', t0.c0), (- (t0.c0)), (((x'')) BETWEEN ((0x651646f3)) AND ((vt2.c3))))) ORDER BY ((t0.c0)/(NULL)) COLLATE NOCASE DESC, ((- (vt2.c2)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert((NOT (vt2.c3)), (t0.c48 IN ()), LTRIM('-1037163204', t0.c0), (- (t0.c0)), (((x'')) BETWEEN ((0x651646f3)) AND ((vt2.c3))))) IS TRUE)  as count FROM t0, v0, vt2 ORDER BY ((t0.c0)/(NULL)) COLLATE NOCASE DESC, ((- (vt2.c2)) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM t0, v0, vt2 WHERE (json_insert((NOT (vt2.c3)), (t0.c48 IN ()), LTRIM('-1037163204', t0.c0), (- (t0.c0)), (((x'')) BETWEEN ((0x651646f3)) AND ((vt2.c3))))) ORDER BY ((t0.c0)/(NULL)) COLLATE NOCASE DESC, ((- (vt2.c2)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert((NOT (vt2.c3)), (t0.c48 IN ()), LTRIM('-1037163204', t0.c0), (- (t0.c0)), (((x'')) BETWEEN ((0x651646f3)) AND ((vt2.c3))))) IS TRUE)  as count FROM t0, v0, vt2 ORDER BY ((t0.c0)/(NULL)) COLLATE NOCASE DESC, ((- (vt2.c2)) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM t0, v0, vt2 WHERE (json_insert((NOT (vt2.c3)), (t0.c48 IN ()), LTRIM('-1037163204', t0.c0), (- (t0.c0)), (((x'')) BETWEEN ((0x651646f3)) AND ((vt2.c3))))) ORDER BY ((t0.c0)/(NULL)) COLLATE NOCASE DESC, ((- (vt2.c2)) IN ()) ASC  NULLS FIRST;
SELECT * FROM vt0, v0 FULL OUTER JOIN t0 ON (((t0.c48)) BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND ((rtreenode(t0.c48, t0.c1)))) WHERE (((((t0.c0)|(t0.c0)))||((- (t0.c17))))) ORDER BY (+ (CASE NULL  WHEN vt0.c0 THEN t0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)|(t0.c0)))||((- (t0.c17))))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN t0 ON (((t0.c48)) BETWEEN ((((vt0.c0)<>(vt0.c0)))) AND ((rtreenode(t0.c48, t0.c1)))) ORDER BY (+ (CASE NULL  WHEN vt0.c0 THEN t0.c0 END)) ASC);
SELECT * FROM vt0, v0 FULL OUTER JOIN t0 ON (((t0.c48)) BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND ((rtreenode(t0.c48, t0.c1)))) WHERE (((((t0.c0)|(t0.c0)))||((- (t0.c17))))) ORDER BY (+ (CASE NULL  WHEN vt0.c0 THEN t0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)|(t0.c0)))||((- (t0.c17))))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN t0 ON (((t0.c48)) BETWEEN ((((vt0.c0)<>(vt0.c0)))) AND ((rtreenode(t0.c48, t0.c1)))) ORDER BY (+ (CASE NULL  WHEN vt0.c0 THEN t0.c0 END)) ASC);
SELECT * FROM vt0, v0 FULL OUTER JOIN t0 ON (((t0.c48)) BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND ((rtreenode(t0.c48, t0.c1)))) WHERE (((((t0.c0)|(t0.c0)))||((- (t0.c17))))) ORDER BY (+ (CASE NULL  WHEN vt0.c0 THEN t0.c0 END)) ASC;
SELECT COUNT(*) FROM v0, t0 WHERE (CAST((- (v0.c0)) AS REAL)) ORDER BY CASE json_patch(v0.c0, t0.c17)  WHEN ((t0.c0) IS TRUE) THEN t0.c48 WHEN ((t0.c0) BETWEEN (v0.c0) AND (t0.c0)) THEN (t0.c48 IN ()) WHEN ((((0.08458383279354664)OR(1.737204721E9)))AND(t0.c17)) THEN CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (v0.c0)) AS REAL)) IS TRUE)  as count FROM v0, t0 ORDER BY CASE json_patch(v0.c0, t0.c17)  WHEN ((t0.c0) IS TRUE) THEN t0.c48 WHEN ((t0.c0) BETWEEN (v0.c0) AND (t0.c0)) THEN (t0.c48 IN ()) WHEN ((((0.08458383279354664)OR(1.737204721E9)))AND(t0.c17)) THEN CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END END DESC);
SELECT COUNT(*) FROM v0, t0 WHERE (CAST((- (v0.c0)) AS REAL)) ORDER BY CASE json_patch(v0.c0, t0.c17)  WHEN ((t0.c0) IS TRUE) THEN t0.c48 WHEN ((t0.c0) BETWEEN (v0.c0) AND (t0.c0)) THEN (t0.c48 IN ()) WHEN ((((0.08458383279354664)OR(1.737204721E9)))AND(t0.c17)) THEN CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (v0.c0)) AS REAL)) IS TRUE)  as count FROM v0, t0 ORDER BY CASE json_patch(v0.c0, t0.c17)  WHEN ((t0.c0) IS TRUE) THEN t0.c48 WHEN ((t0.c0) BETWEEN (v0.c0) AND (t0.c0)) THEN (t0.c48 IN ()) WHEN ((((0.08458383279354664)OR(1.737204721E9)))AND(t0.c17)) THEN CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END END DESC);
SELECT ALL COUNT(*) FROM v0, vt0, vt2 WHERE ((((((vt0.c0)+(vt2.c3)), ((vt2.c1) BETWEEN (vt2.c1) AND (v0.c0)), (((vt2.c0))<=((vt0.c0)))))>(((v0.c0 IN ()), ((((((((vt2.lid)AND('-1462994542')))OR(0.7813529461103645)))AND(vt2.c2)))OR(vt2.lid)), ((vt2.c2) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)+(vt2.c3)), ((vt2.c1) BETWEEN (vt2.c1) AND (v0.c0)), (((vt2.c0))<=((vt0.c0)))))>(((v0.c0 IN ()), ((((((((vt2.lid)AND('-1462994542')))OR(0.7813529461103645)))AND(vt2.c2)))OR(vt2.lid)), ((vt2.c2) IS TRUE))))) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT ALL COUNT(*) FROM v0, vt0, vt2 WHERE ((((((vt0.c0)+(vt2.c3)), ((vt2.c1) BETWEEN (vt2.c1) AND (v0.c0)), (((vt2.c0))<=((vt0.c0)))))>(((v0.c0 IN ()), ((((((((vt2.lid)AND('-1462994542')))OR(0.7813529461103645)))AND(vt2.c2)))OR(vt2.lid)), ((vt2.c2) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)+(vt2.c3)), ((vt2.c1) BETWEEN (vt2.c1) AND (v0.c0)), (((vt2.c0))<=((vt0.c0)))))>(((v0.c0 IN ()), ((((((((vt2.lid)AND('-1462994542')))OR(0.7813529461103645)))AND(vt2.c2)))OR(vt2.lid)), ((vt2.c2) IS TRUE))))) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT ALL COUNT(*) FROM v0, vt0, vt2 WHERE ((((((vt0.c0)+(vt2.c3)), ((vt2.c1) BETWEEN (vt2.c1) AND (v0.c0)), (((vt2.c0))<=((vt0.c0)))))>(((v0.c0 IN ()), ((((((((vt2.lid)AND('-1462994542')))OR(0.7813529461103645)))AND(vt2.c2)))OR(vt2.lid)), ((vt2.c2) IS TRUE)))));
SELECT ALL * FROM t0 WHERE (t0.c17) ORDER BY ((((((((0.8567063303974818)AND(json_insert(t0.c48, t0.c1, t0.c48))))AND((- (t0.c17)))))OR(((t0.c0)/(t0.c48)))))AND(UNLIKELY(DISTINCT t0.c17))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c17) IS TRUE)  as count FROM t0 ORDER BY ((((((((0.8567063303974818)AND(json_insert(t0.c48, t0.c1, t0.c48))))AND((- (t0.c17)))))OR(((t0.c0)/(t0.c48)))))AND(UNLIKELY(DISTINCT t0.c17))) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c17) ORDER BY ((((((((0.8567063303974818)AND(json_insert(t0.c48, t0.c1, t0.c48))))AND((- (t0.c17)))))OR(((t0.c0)/(t0.c48)))))AND(UNLIKELY(DISTINCT t0.c17))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c17) IS TRUE)  as count FROM t0 ORDER BY ((((((((0.8567063303974818)AND(json_insert(t0.c48, t0.c1, t0.c48))))AND((- (t0.c17)))))OR(((t0.c0)/(t0.c48)))))AND(UNLIKELY(DISTINCT t0.c17))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN t0 ON v0.c0 LEFT OUTER JOIN v0 ON JULIANDAY(((vt2.c0)IS NOT(vt2.c1)), (((t0.c17))<>((vt2.lid))), ((t0.c0) ISNULL), ((t0.c17)/(vt2.lid)), json_array_length(vt2.c3, vt2.c2)) WHERE ((('')AND(NULLIF(t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('')AND(NULLIF(t0.c0, t0.c0)))) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN t0 ON v0.c0 LEFT OUTER JOIN v0 ON JULIANDAY(((vt2.c0)IS NOT(vt2.c1)), (((t0.c17))!=((vt2.lid))), ((t0.c0) ISNULL), ((t0.c17)/(vt2.lid)), json_array_length(vt2.c3, vt2.c2)));
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN t0 ON v0.c0 LEFT OUTER JOIN v0 ON JULIANDAY(((vt2.c0)IS NOT(vt2.c1)), (((t0.c17))<>((vt2.lid))), ((t0.c0) ISNULL), ((t0.c17)/(vt2.lid)), json_array_length(vt2.c3, vt2.c2)) WHERE ((('')AND(NULLIF(t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('')AND(NULLIF(t0.c0, t0.c0)))) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN t0 ON v0.c0 LEFT OUTER JOIN v0 ON JULIANDAY(((vt2.c0)IS NOT(vt2.c1)), (((t0.c17))!=((vt2.lid))), ((t0.c0) ISNULL), ((t0.c17)/(vt2.lid)), json_array_length(vt2.c3, vt2.c2)));
SELECT ALL * FROM vt0, vt2, t0 WHERE (t0.c0) ORDER BY ((LTRIM(vt2.c2)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, vt2, t0 ORDER BY ((LTRIM(vt2.c2)) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt2, t0 WHERE (t0.c0) ORDER BY ((LTRIM(vt2.c2)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, vt2, t0 ORDER BY ((LTRIM(vt2.c2)) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt2, t0 WHERE (t0.c0) ORDER BY ((LTRIM(vt2.c2)) NOT NULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt2, vt0 NOT INDEXED WHERE ((((IFNULL(vt0.c0, v0.c0)))<=((UNLIKELY(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((IFNULL(vt0.c0, v0.c0)))<=((UNLIKELY(v0.c0))))) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT COUNT(*) FROM v0, vt2, vt0 NOT INDEXED WHERE ((((IFNULL(vt0.c0, v0.c0)))<=((UNLIKELY(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((IFNULL(vt0.c0, v0.c0)))<=((UNLIKELY(v0.c0))))) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT COUNT(*) FROM v0, vt2, vt0 NOT INDEXED WHERE ((((IFNULL(vt0.c0, v0.c0)))<=((UNLIKELY(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) IS TRUE) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN 0X639639d4 END) ORDER BY (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN 0x639639d4 END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN 0X639639d4 END) ORDER BY (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN 0x639639d4 END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN 0X639639d4 END) ORDER BY (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) COLLATE RTRIM;
SELECT ALL * FROM t0 NOT INDEXED, v0 WHERE (((((((((((t0.c48)AND(v0.c0)))AND(t0.c17)))AND(t0.c17)))OR(t0.c48)))AND(('-215192618' IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c48)AND(v0.c0)))AND(t0.c17)))AND(t0.c17)))OR(t0.c48)))AND(('-215192618' IN ())))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0 NOT INDEXED, v0 WHERE (((((((((((t0.c48)AND(v0.c0)))AND(t0.c17)))AND(t0.c17)))OR(t0.c48)))AND(('-215192618' IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c48)AND(v0.c0)))AND(t0.c17)))AND(t0.c17)))OR(t0.c48)))AND(('-215192618' IN ())))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0 NOT INDEXED, v0 WHERE (((((((((((t0.c48)AND(v0.c0)))AND(t0.c17)))AND(t0.c17)))OR(t0.c48)))AND(('-215192618' IN ()))));
SELECT * FROM v0, vt2 WHERE (CASE WHEN ((vt2.c0) NOT BETWEEN (-1.395326407E9) AND (vt2.c1)) THEN vt2.c1 COLLATE BINARY WHEN CASE WHEN vt2.c0 THEN vt2.lid WHEN vt2.lid THEN vt2.c1 WHEN v0.c0 THEN 6.16734127E8 END THEN CASE '#떅￿5XC'  WHEN vt2.c0 THEN vt2.c1 ELSE v0.c0 END WHEN ((vt2.lid) IS TRUE) THEN (~ (vt2.c0)) END) ORDER BY UNLIKELY(CAST(vt2.c1 AS INTEGER)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt2.c0) NOT BETWEEN (-1.395326407E9) AND (vt2.c1)) THEN vt2.c1 COLLATE BINARY WHEN CASE WHEN vt2.c0 THEN vt2.lid WHEN vt2.lid THEN vt2.c1 WHEN v0.c0 THEN 6.16734127E8 END THEN CASE '#떅￿5XC'  WHEN vt2.c0 THEN vt2.c1 ELSE v0.c0 END WHEN ((vt2.lid) IS TRUE) THEN (~ (vt2.c0)) END) IS TRUE)  as count FROM v0, vt2 ORDER BY UNLIKELY(CAST(vt2.c1 AS INTEGER)) ASC  NULLS FIRST);
SELECT * FROM v0, vt2 WHERE (CASE WHEN ((vt2.c0) NOT BETWEEN (-1.395326407E9) AND (vt2.c1)) THEN vt2.c1 COLLATE BINARY WHEN CASE WHEN vt2.c0 THEN vt2.lid WHEN vt2.lid THEN vt2.c1 WHEN v0.c0 THEN 6.16734127E8 END THEN CASE '#떅￿5XC'  WHEN vt2.c0 THEN vt2.c1 ELSE v0.c0 END WHEN ((vt2.lid) IS TRUE) THEN (~ (vt2.c0)) END) ORDER BY UNLIKELY(CAST(vt2.c1 AS INTEGER)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt2.c0) NOT BETWEEN (-1.395326407E9) AND (vt2.c1)) THEN vt2.c1 COLLATE BINARY WHEN CASE WHEN vt2.c0 THEN vt2.lid WHEN vt2.lid THEN vt2.c1 WHEN v0.c0 THEN 6.16734127E8 END THEN CASE '#떅￿5XC'  WHEN vt2.c0 THEN vt2.c1 ELSE v0.c0 END WHEN ((vt2.lid) IS TRUE) THEN (~ (vt2.c0)) END) IS TRUE)  as count FROM v0, vt2 ORDER BY UNLIKELY(CAST(vt2.c1 AS INTEGER)) ASC  NULLS FIRST);
SELECT * FROM v0, vt2 WHERE (CASE WHEN ((vt2.c0) NOT BETWEEN (-1.395326407E9) AND (vt2.c1)) THEN vt2.c1 COLLATE BINARY WHEN CASE WHEN vt2.c0 THEN vt2.lid WHEN vt2.lid THEN vt2.c1 WHEN v0.c0 THEN 6.16734127E8 END THEN CASE '#떅￿5XC'  WHEN vt2.c0 THEN vt2.c1 ELSE v0.c0 END WHEN ((vt2.lid) IS TRUE) THEN (~ (vt2.c0)) END) ORDER BY UNLIKELY(CAST(vt2.c1 AS INTEGER)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((0x1eca43dd) BETWEEN (t0.c17) AND (t0.c1))) BETWEEN (TIME(t0.c1, t0.c17, t0.c17)) AND (NULL))) ORDER BY (NOT (((((((((vt0.c0)AND(vt0.c0)))AND(t0.c17)))OR(t0.c0)))OR(t0.c17)))) DESC  NULLS LAST, ((((vt0.c0) NOT NULL))%((('0.5395394774180953') NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((0X1eca43dd) BETWEEN (t0.c17) AND (t0.c1))) BETWEEN (TIME(t0.c1, t0.c17, t0.c17)) AND (NULL))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (NOT (((((((((vt0.c0)AND(vt0.c0)))AND(t0.c17)))OR(t0.c0)))OR(t0.c17)))) DESC  NULLS LAST, ((((vt0.c0) NOT NULL))%((('0.5395394774180953') NOTNULL))));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((0x1eca43dd) BETWEEN (t0.c17) AND (t0.c1))) BETWEEN (TIME(t0.c1, t0.c17, t0.c17)) AND (NULL))) ORDER BY (NOT (((((((((vt0.c0)AND(vt0.c0)))AND(t0.c17)))OR(t0.c0)))OR(t0.c17)))) DESC  NULLS LAST, ((((vt0.c0) NOT NULL))%((('0.5395394774180953') NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((0X1eca43dd) BETWEEN (t0.c17) AND (t0.c1))) BETWEEN (TIME(t0.c1, t0.c17, t0.c17)) AND (NULL))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (NOT (((((((((vt0.c0)AND(vt0.c0)))AND(t0.c17)))OR(t0.c0)))OR(t0.c17)))) DESC  NULLS LAST, ((((vt0.c0) NOT NULL))%((('0.5395394774180953') NOTNULL))));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((0x1eca43dd) BETWEEN (t0.c17) AND (t0.c1))) BETWEEN (TIME(t0.c1, t0.c17, t0.c17)) AND (NULL))) ORDER BY (NOT (((((((((vt0.c0)AND(vt0.c0)))AND(t0.c17)))OR(t0.c0)))OR(t0.c17)))) DESC  NULLS LAST, ((((vt0.c0) NOT NULL))%((('0.5395394774180953') NOTNULL)));
SELECT ALL * FROM vt2, vt0 WHERE ((((((((((vt2.lid)AND(vt2.lid)))AND(vt0.c0)))AND(vt2.c2)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((vt2.lid)AND(vt2.lid)))AND(vt0.c0)))AND(vt2.c2)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL * FROM vt2, vt0 WHERE ((((((((((vt2.lid)AND(vt2.lid)))AND(vt0.c0)))AND(vt2.c2)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((vt2.lid)AND(vt2.lid)))AND(vt0.c0)))AND(vt2.c2)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL * FROM vt2, vt0 WHERE ((((((((((vt2.lid)AND(vt2.lid)))AND(vt0.c0)))AND(vt2.c2)))OR(vt0.c0)) IN ()));
SELECT * FROM v0 RIGHT OUTER JOIN vt2 ON NULL WHERE (0.5119177789349705);
SELECT SUM(count) FROM (SELECT ((0.5119177789349705) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt2 ON NULL);
SELECT * FROM v0 RIGHT OUTER JOIN vt2 ON NULL WHERE (0.5119177789349705);
SELECT SUM(count) FROM (SELECT ((0.5119177789349705) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt2 ON NULL);
SELECT * FROM v0 RIGHT OUTER JOIN vt2 ON NULL WHERE (0.5119177789349705);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (v0.c0);
SELECT ALL * FROM t0 WHERE ((((t0.c1, x'', t0.c17)) NOT BETWEEN (((- (t0.c0)), ((t0.c0)&(t0.c0)), ((t0.c1)!=(t0.c48)))) AND ((((t0.c17) NOT BETWEEN (t0.c0) AND (t0.c0)), (((t0.c17))<((t0.c0))), ((t0.c1) BETWEEN (t0.c48) AND (t0.c48)))))) ORDER BY '-215192618'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, x'', t0.c17)) NOT BETWEEN (((- (t0.c0)), ((t0.c0)&(t0.c0)), ((t0.c1)<>(t0.c48)))) AND ((((t0.c17) NOT BETWEEN (t0.c0) AND (t0.c0)), (((t0.c17))<((t0.c0))), ((t0.c1) BETWEEN (t0.c48) AND (t0.c48)))))) IS TRUE)  as count FROM t0 ORDER BY '-215192618'  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((t0.c1, x'', t0.c17)) NOT BETWEEN (((- (t0.c0)), ((t0.c0)&(t0.c0)), ((t0.c1)!=(t0.c48)))) AND ((((t0.c17) NOT BETWEEN (t0.c0) AND (t0.c0)), (((t0.c17))<((t0.c0))), ((t0.c1) BETWEEN (t0.c48) AND (t0.c48)))))) ORDER BY '-215192618'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, x'', t0.c17)) NOT BETWEEN (((- (t0.c0)), ((t0.c0)&(t0.c0)), ((t0.c1)<>(t0.c48)))) AND ((((t0.c17) NOT BETWEEN (t0.c0) AND (t0.c0)), (((t0.c17))<((t0.c0))), ((t0.c1) BETWEEN (t0.c48) AND (t0.c48)))))) IS TRUE)  as count FROM t0 ORDER BY '-215192618'  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((t0.c1, x'', t0.c17)) NOT BETWEEN (((- (t0.c0)), ((t0.c0)&(t0.c0)), ((t0.c1)!=(t0.c48)))) AND ((((t0.c17) NOT BETWEEN (t0.c0) AND (t0.c0)), (((t0.c17))<((t0.c0))), ((t0.c1) BETWEEN (t0.c48) AND (t0.c48)))))) ORDER BY '-215192618'  NULLS LAST;
SELECT * FROM vt0, t0, vt2, v0 WHERE ('1879785870') ORDER BY (((((vt2.c3)LIKE(vt2.c2)), (- (t0.c17)), LOWER(v0.c0)))>=((((vt2.c1)>=(NULL)), TYPEOF(DISTINCT vt2.c2), ((((((((vt0.c0)AND('')))OR(vt2.c3)))AND(t0.c0)))AND(t0.c0)))))  NULLS LAST, (('-1462994542') IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (('1879785870') IS TRUE)  as count FROM vt0, t0, vt2, v0 ORDER BY (((((vt2.c3)LIKE(vt2.c2)), (- (t0.c17)), LOWER(v0.c0)))>=((((vt2.c1)>=(NULL)), TYPEOF(DISTINCT vt2.c2), ((((((((vt0.c0)AND('')))OR(vt2.c3)))AND(t0.c0)))AND(t0.c0)))))  NULLS LAST, (('-1462994542') IS FALSE));
SELECT * FROM vt0, t0, vt2, v0 WHERE ('1879785870') ORDER BY (((((vt2.c3)LIKE(vt2.c2)), (- (t0.c17)), LOWER(v0.c0)))>=((((vt2.c1)>=(NULL)), TYPEOF(DISTINCT vt2.c2), ((((((((vt0.c0)AND('')))OR(vt2.c3)))AND(t0.c0)))AND(t0.c0)))))  NULLS LAST, (('-1462994542') IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (('1879785870') IS TRUE)  as count FROM vt0, t0, vt2, v0 ORDER BY (((((vt2.c3)LIKE(vt2.c2)), (- (t0.c17)), LOWER(v0.c0)))>=((((vt2.c1)>=(NULL)), TYPEOF(DISTINCT vt2.c2), ((((((((vt0.c0)AND('')))OR(vt2.c3)))AND(t0.c0)))AND(t0.c0)))))  NULLS LAST, (('-1462994542') IS FALSE));
SELECT * FROM vt0, t0, vt2, v0 WHERE ('1879785870') ORDER BY (((((vt2.c3)LIKE(vt2.c2)), (- (t0.c17)), LOWER(v0.c0)))>=((((vt2.c1)>=(NULL)), TYPEOF(DISTINCT vt2.c2), ((((((((vt0.c0)AND('')))OR(vt2.c3)))AND(t0.c0)))AND(t0.c0)))))  NULLS LAST, (('-1462994542') IS FALSE);
SELECT COUNT(*) FROM vt2 FULL OUTER JOIN t0 ON ((t0.c48 IN ()) IN ()) WHERE (UNLIKELY(DISTINCT CAST(vt2.c0 AS BLOB))) ORDER BY (((vt2.c1)AND(t0.c0)) IN ())  NULLS LAST, HEX(0xffffffffd956dab4)  NULLS FIRST, (CASE vt2.c0  WHEN t0.c1 THEN t0.c17 ELSE t0.c0 END IN (0.8784063937417351));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT CAST(vt2.c0 AS BLOB))) IS TRUE)  as count FROM vt2 FULL OUTER JOIN t0 ON ((t0.c48 IN ()) IN ()) ORDER BY (((vt2.c1)AND(t0.c0)) IN ())  NULLS LAST, HEX(0xffffffffd956dab4)  NULLS FIRST, (CASE vt2.c0  WHEN t0.c1 THEN t0.c17 ELSE t0.c0 END IN (0.8784063937417351)));
SELECT COUNT(*) FROM vt2 FULL OUTER JOIN t0 ON ((t0.c48 IN ()) IN ()) WHERE (UNLIKELY(DISTINCT CAST(vt2.c0 AS BLOB))) ORDER BY (((vt2.c1)AND(t0.c0)) IN ())  NULLS LAST, HEX(0xffffffffd956dab4)  NULLS FIRST, (CASE vt2.c0  WHEN t0.c1 THEN t0.c17 ELSE t0.c0 END IN (0.8784063937417351));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT CAST(vt2.c0 AS BLOB))) IS TRUE)  as count FROM vt2 FULL OUTER JOIN t0 ON ((t0.c48 IN ()) IN ()) ORDER BY (((vt2.c1)AND(t0.c0)) IN ())  NULLS LAST, HEX(0xffffffffd956dab4)  NULLS FIRST, (CASE vt2.c0  WHEN t0.c1 THEN t0.c17 ELSE t0.c0 END IN (0.8784063937417351)));
SELECT COUNT(*) FROM vt2 FULL OUTER JOIN t0 ON ((t0.c48 IN ()) IN ()) WHERE (UNLIKELY(DISTINCT CAST(vt2.c0 AS BLOB))) ORDER BY (((vt2.c1)AND(t0.c0)) IN ())  NULLS LAST, HEX(0xffffffffd956dab4)  NULLS FIRST, (CASE vt2.c0  WHEN t0.c1 THEN t0.c17 ELSE t0.c0 END IN (0.8784063937417351));
SELECT COUNT(*) FROM v0, vt0, vt2 WHERE (CAST(CASE vt2.lid  WHEN v0.c0 THEN v0.c0 WHEN vt2.c2 THEN vt2.c0 WHEN vt2.c3 THEN vt2.c3 END AS BLOB)) ORDER BY ((0xffffffffaef56815)<=(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt2.lid  WHEN v0.c0 THEN v0.c0 WHEN vt2.c2 THEN vt2.c0 WHEN vt2.c3 THEN vt2.c3 END AS BLOB)) IS TRUE)  as count FROM v0, vt0, vt2 ORDER BY ((0xffffffffaef56815)<=(vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, vt2 WHERE (CAST(CASE vt2.lid  WHEN v0.c0 THEN v0.c0 WHEN vt2.c2 THEN vt2.c0 WHEN vt2.c3 THEN vt2.c3 END AS BLOB)) ORDER BY ((0xffffffffaef56815)<=(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt2.lid  WHEN v0.c0 THEN v0.c0 WHEN vt2.c2 THEN vt2.c0 WHEN vt2.c3 THEN vt2.c3 END AS BLOB)) IS TRUE)  as count FROM v0, vt0, vt2 ORDER BY ((0xffffffffaef56815)<=(vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, vt2 WHERE (CAST(CASE vt2.lid  WHEN v0.c0 THEN v0.c0 WHEN vt2.c2 THEN vt2.c0 WHEN vt2.c3 THEN vt2.c3 END AS BLOB)) ORDER BY ((0xffffffffaef56815)<=(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt2, t0 WHERE ((~ ((~ (v0.c0))))) ORDER BY ABS((((t0.c1))>=((vt2.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((~ ((~ (v0.c0))))) IS TRUE)  as count FROM v0, vt2, t0 ORDER BY ABS((((t0.c1))>=((vt2.c1)))) DESC);
SELECT COUNT(*) FROM v0, vt2, t0 WHERE ((~ ((~ (v0.c0))))) ORDER BY ABS((((t0.c1))>=((vt2.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((~ ((~ (v0.c0))))) IS TRUE)  as count FROM v0, vt2, t0 ORDER BY ABS((((t0.c1))>=((vt2.c1)))) DESC);
SELECT COUNT(*) FROM v0, vt2, t0 WHERE ((~ ((~ (v0.c0))))) ORDER BY ABS((((t0.c1))>=((vt2.c1)))) DESC;
SELECT ALL * FROM vt0, t0, vt2 WHERE ((1702090699 IN (((vt2.c2) NOT BETWEEN (t0.c48) AND (t0.c1))))) ORDER BY (((((((((vt2.lid IN ()))AND(COALESCE(t0.c0, NULL))))AND(vt2.c0)))OR(t0.c17)))AND(vt2.c0 COLLATE NOCASE)), CAST(t0.c0 AS REAL), (('') NOT BETWEEN ((((t0.c17, t0.c48, vt2.c3)) BETWEEN ((NULL, x'', vt0.c0)) AND ((vt2.lid, vt2.lid, '')))) AND ((('1191785581') NOT BETWEEN (t0.c48) AND (vt2.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((1702090699 IN (((vt2.c2) NOT BETWEEN (t0.c48) AND (t0.c1))))) IS TRUE)  as count FROM vt0, t0, vt2 ORDER BY (((((((((vt2.lid IN ()))AND(COALESCE(t0.c0, NULL))))AND(vt2.c0)))OR(t0.c17)))AND(vt2.c0 COLLATE NOCASE)), CAST(t0.c0 AS REAL), (('') NOT BETWEEN ((((t0.c17, t0.c48, vt2.c3)) BETWEEN ((NULL, x'', vt0.c0)) AND ((vt2.lid, vt2.lid, '')))) AND ((('1191785581') NOT BETWEEN (t0.c48) AND (vt2.c3))))  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt2 WHERE ((1702090699 IN (((vt2.c2) NOT BETWEEN (t0.c48) AND (t0.c1))))) ORDER BY (((((((((vt2.lid IN ()))AND(COALESCE(t0.c0, NULL))))AND(vt2.c0)))OR(t0.c17)))AND(vt2.c0 COLLATE NOCASE)), CAST(t0.c0 AS REAL), (('') NOT BETWEEN ((((t0.c17, t0.c48, vt2.c3)) BETWEEN ((NULL, x'', vt0.c0)) AND ((vt2.lid, vt2.lid, '')))) AND ((('1191785581') NOT BETWEEN (t0.c48) AND (vt2.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((1702090699 IN (((vt2.c2) NOT BETWEEN (t0.c48) AND (t0.c1))))) IS TRUE)  as count FROM vt0, t0, vt2 ORDER BY (((((((((vt2.lid IN ()))AND(COALESCE(t0.c0, NULL))))AND(vt2.c0)))OR(t0.c17)))AND(vt2.c0 COLLATE NOCASE)), CAST(t0.c0 AS REAL), (('') NOT BETWEEN ((((t0.c17, t0.c48, vt2.c3)) BETWEEN ((NULL, x'', vt0.c0)) AND ((vt2.lid, vt2.lid, '')))) AND ((('1191785581') NOT BETWEEN (t0.c48) AND (vt2.c3))))  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt2 WHERE ((1702090699 IN (((vt2.c2) NOT BETWEEN (t0.c48) AND (t0.c1))))) ORDER BY (((((((((vt2.lid IN ()))AND(COALESCE(t0.c0, NULL))))AND(vt2.c0)))OR(t0.c17)))AND(vt2.c0 COLLATE NOCASE)), CAST(t0.c0 AS REAL), (('') NOT BETWEEN ((((t0.c17, t0.c48, vt2.c3)) BETWEEN ((NULL, x'', vt0.c0)) AND ((vt2.lid, vt2.lid, '')))) AND ((('1191785581') NOT BETWEEN (t0.c48) AND (vt2.c3))))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT * FROM v0 WHERE ((((- (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((- (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((- (v0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt2 WHERE (vt2.c3) ORDER BY vt2.c0  NULLS LAST, (((((vt2.c3) BETWEEN (vt2.c0) AND (vt2.lid))))==(((('1166296217') IS FALSE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt2.c3) IS TRUE)  as count FROM vt2 ORDER BY vt2.c0  NULLS LAST, (((((vt2.c3) BETWEEN (vt2.c0) AND (vt2.lid))))=(((('1166296217') IS FALSE))))  NULLS FIRST);
SELECT COUNT(*) FROM vt2 WHERE (vt2.c3) ORDER BY vt2.c0  NULLS LAST, (((((vt2.c3) BETWEEN (vt2.c0) AND (vt2.lid))))==(((('1166296217') IS FALSE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt2.c3) IS TRUE)  as count FROM vt2 ORDER BY vt2.c0  NULLS LAST, (((((vt2.c3) BETWEEN (vt2.c0) AND (vt2.lid))))=(((('1166296217') IS FALSE))))  NULLS FIRST);
SELECT COUNT(*) FROM vt2 WHERE (vt2.c3) ORDER BY vt2.c0  NULLS LAST, (((((vt2.c3) BETWEEN (vt2.c0) AND (vt2.lid))))==(((('1166296217') IS FALSE))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt2 WHERE (CAST(CASE WHEN vt2.c1 THEN 0X18b9c143 WHEN vt2.c0 THEN '-215192618' WHEN vt2.c3 THEN vt2.c3 ELSE vt2.lid END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt2.c1 THEN 0X18b9c143 WHEN vt2.c0 THEN '-215192618' WHEN vt2.c3 THEN vt2.c3 ELSE vt2.lid END AS REAL)) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (CAST(CASE WHEN vt2.c1 THEN 0X18b9c143 WHEN vt2.c0 THEN '-215192618' WHEN vt2.c3 THEN vt2.c3 ELSE vt2.lid END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt2.c1 THEN 0X18b9c143 WHEN vt2.c0 THEN '-215192618' WHEN vt2.c3 THEN vt2.c3 ELSE vt2.lid END AS REAL)) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (CAST(CASE WHEN vt2.c1 THEN 0X18b9c143 WHEN vt2.c0 THEN '-215192618' WHEN vt2.c3 THEN vt2.c3 ELSE vt2.lid END AS REAL));
SELECT ALL * FROM v0 WHERE (CASE WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END);
SELECT ALL * FROM t0, vt0 WHERE ((((NULL))<(((((t0.c17)) NOT BETWEEN ((vt0.c0)) AND ((t0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((NULL))<(((((t0.c17)) NOT BETWEEN ((vt0.c0)) AND ((t0.c1))))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((NULL))<(((((t0.c17)) NOT BETWEEN ((vt0.c0)) AND ((t0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((NULL))<(((((t0.c17)) NOT BETWEEN ((vt0.c0)) AND ((t0.c1))))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((NULL))<(((((t0.c17)) NOT BETWEEN ((vt0.c0)) AND ((t0.c1)))))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL)) BETWEEN (((1.101710451E9) IS FALSE)) AND (((v0.c0)/(x'f7cd'))))) ORDER BY (((((v0.c0 IN ()))AND((v0.c0 IN (v0.c0)))))OR(((v0.c0)<(x'f41d'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL)) BETWEEN (((1.101710451E9) IS FALSE)) AND (((v0.c0)/(x'f7cd'))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0 IN ()))AND((v0.c0 IN (v0.c0)))))OR(((v0.c0)<(x'f41d'))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL)) BETWEEN (((1.101710451E9) IS FALSE)) AND (((v0.c0)/(x'f7cd'))))) ORDER BY (((((v0.c0 IN ()))AND((v0.c0 IN (v0.c0)))))OR(((v0.c0)<(x'f41d'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL)) BETWEEN (((1.101710451E9) IS FALSE)) AND (((v0.c0)/(x'f7cd'))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0 IN ()))AND((v0.c0 IN (v0.c0)))))OR(((v0.c0)<(x'f41d'))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL)) BETWEEN (((1.101710451E9) IS FALSE)) AND (((v0.c0)/(x'f7cd'))))) ORDER BY (((((v0.c0 IN ()))AND((v0.c0 IN (v0.c0)))))OR(((v0.c0)<(x'f41d'))))  NULLS LAST;
SELECT * FROM vt0 WHERE (((((x'') IS FALSE))LIKE(((0.014427237301388396)OR(vt0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST, ((((vt0.c0) BETWEEN ('-926280182') AND (x''))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((x'') IS FALSE))LIKE(((0.014427237301388396)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST, ((((vt0.c0) BETWEEN ('-926280182') AND (x''))) IS FALSE) ASC);
SELECT * FROM vt0 WHERE (((((x'') IS FALSE))LIKE(((0.014427237301388396)OR(vt0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST, ((((vt0.c0) BETWEEN ('-926280182') AND (x''))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((x'') IS FALSE))LIKE(((0.014427237301388396)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST, ((((vt0.c0) BETWEEN ('-926280182') AND (x''))) IS FALSE) ASC);
SELECT * FROM vt0 WHERE (((((x'') IS FALSE))LIKE(((0.014427237301388396)OR(vt0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST, ((((vt0.c0) BETWEEN ('-926280182') AND (x''))) IS FALSE) ASC;
SELECT * FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, -38515932, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.5119177789349705, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 1.710724494E9, vt0.c0, vt0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, vt0.c0, -38515932, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.5119177789349705, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 1.710724494E9, vt0.c0, vt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, -38515932, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.5119177789349705, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 1.710724494E9, vt0.c0, vt0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, vt0.c0, -38515932, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.5119177789349705, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 1.710724494E9, vt0.c0, vt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, -38515932, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.5119177789349705, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 1.710724494E9, vt0.c0, vt0.c0))) AS TEXT));
SELECT ALL * FROM t0, vt2, vt0 WHERE (((((((t0.c17)AND(vt2.lid)))OR(vt2.c3))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((t0.c17)AND(vt2.lid)))OR(vt2.c3))) NOT NULL)) IS TRUE)  as count FROM t0, vt2, vt0);
SELECT ALL * FROM t0, vt2, vt0 WHERE (((((((t0.c17)AND(vt2.lid)))OR(vt2.c3))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((t0.c17)AND(vt2.lid)))OR(vt2.c3))) NOT NULL)) IS TRUE)  as count FROM t0, vt2, vt0);
SELECT ALL * FROM t0, vt2, vt0 WHERE (((((((t0.c17)AND(vt2.lid)))OR(vt2.c3))) NOT NULL));
SELECT * FROM t0, v0, vt0 WHERE (((MAX(t0.c0, t0.c1))<<(((vt0.c0) BETWEEN (t0.c1) AND (vt0.c0))))) ORDER BY ((((TIME(t0.c1, t0.c17, '-747194916'))OR(((t0.c17) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(t0.c17 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((MAX(t0.c0, t0.c1))<<(((vt0.c0) BETWEEN (t0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((((TIME(t0.c1, t0.c17, '-747194916'))OR(((t0.c17) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(t0.c17 COLLATE BINARY))  NULLS LAST);
SELECT * FROM t0, v0, vt0 WHERE (((MAX(t0.c0, t0.c1))<<(((vt0.c0) BETWEEN (t0.c1) AND (vt0.c0))))) ORDER BY ((((TIME(t0.c1, t0.c17, '-747194916'))OR(((t0.c17) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(t0.c17 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((MAX(t0.c0, t0.c1))<<(((vt0.c0) BETWEEN (t0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((((TIME(t0.c1, t0.c17, '-747194916'))OR(((t0.c17) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(t0.c17 COLLATE BINARY))  NULLS LAST);
SELECT * FROM t0, v0, vt0 WHERE (((MAX(t0.c0, t0.c1))<<(((vt0.c0) BETWEEN (t0.c1) AND (vt0.c0))))) ORDER BY ((((TIME(t0.c1, t0.c17, '-747194916'))OR(((t0.c17) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(t0.c17 COLLATE BINARY))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((UNLIKELY(DISTINCT vt0.c0))OR(vt0.c0)))AND(((vt0.c0)||(vt0.c0))))) ORDER BY NULLIF(TRIM(DISTINCT ''), vt0.c0), (((NULL))=((CAST(vt0.c0 AS TEXT))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((UNLIKELY(DISTINCT vt0.c0))OR(vt0.c0)))AND(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(TRIM(DISTINCT ''), vt0.c0), (((NULL))=((CAST(vt0.c0 AS TEXT))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((UNLIKELY(DISTINCT vt0.c0))OR(vt0.c0)))AND(((vt0.c0)||(vt0.c0))))) ORDER BY NULLIF(TRIM(DISTINCT ''), vt0.c0), (((NULL))=((CAST(vt0.c0 AS TEXT))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((UNLIKELY(DISTINCT vt0.c0))OR(vt0.c0)))AND(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(TRIM(DISTINCT ''), vt0.c0), (((NULL))=((CAST(vt0.c0 AS TEXT))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((UNLIKELY(DISTINCT vt0.c0))OR(vt0.c0)))AND(((vt0.c0)||(vt0.c0))))) ORDER BY NULLIF(TRIM(DISTINCT ''), vt0.c0), (((NULL))=((CAST(vt0.c0 AS TEXT))))  NULLS FIRST;
SELECT ALL * FROM vt0, vt2 WHERE (CASE (- (vt2.lid))  WHEN 6.16734127E8 THEN (((vt0.c0))=((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (vt2.lid))  WHEN 6.16734127E8 THEN (((vt0.c0))==((vt0.c0))) END) IS TRUE)  as count FROM vt0, vt2);
SELECT ALL * FROM vt0, vt2 WHERE (CASE (- (vt2.lid))  WHEN 6.16734127E8 THEN (((vt0.c0))=((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (vt2.lid))  WHEN 6.16734127E8 THEN (((vt0.c0))==((vt0.c0))) END) IS TRUE)  as count FROM vt0, vt2);
SELECT ALL * FROM vt0, vt2 WHERE (CASE (- (vt2.lid))  WHEN 6.16734127E8 THEN (((vt0.c0))=((vt0.c0))) END);
SELECT COUNT(*) FROM vt2 WHERE (((vt2.lid IN ()) IN ())) ORDER BY ((vt2.c3 COLLATE BINARY) BETWEEN ((vt2.c2 IN ())) AND (((((vt2.c1)AND(vt2.c0)))AND(vt2.lid))));
SELECT SUM(count) FROM (SELECT ALL ((((vt2.lid IN ()) IN ())) IS TRUE)  as count FROM vt2 ORDER BY ((vt2.c3 COLLATE BINARY) BETWEEN ((vt2.c2 IN ())) AND (((((vt2.c1)AND(vt2.c0)))AND(vt2.lid)))));
SELECT COUNT(*) FROM vt2 WHERE (((vt2.lid IN ()) IN ())) ORDER BY ((vt2.c3 COLLATE BINARY) BETWEEN ((vt2.c2 IN ())) AND (((((vt2.c1)AND(vt2.c0)))AND(vt2.lid))));
SELECT SUM(count) FROM (SELECT ALL ((((vt2.lid IN ()) IN ())) IS TRUE)  as count FROM vt2 ORDER BY ((vt2.c3 COLLATE BINARY) BETWEEN ((vt2.c2 IN ())) AND (((((vt2.c1)AND(vt2.c0)))AND(vt2.lid)))));
SELECT COUNT(*) FROM vt2 WHERE (((vt2.lid IN ()) IN ())) ORDER BY ((vt2.c3 COLLATE BINARY) BETWEEN ((vt2.c2 IN ())) AND (((((vt2.c1)AND(vt2.c0)))AND(vt2.lid))));
SELECT ALL COUNT(*) FROM vt0, t0, vt2, v0 WHERE (((((t0.c0)*(0.031669531143887375))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)*(0.031669531143887375))) IS TRUE)) IS TRUE)  as count FROM vt0, t0, vt2, v0);
SELECT ALL COUNT(*) FROM vt0, t0, vt2, v0 WHERE (((((t0.c0)*(0.031669531143887375))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)*(0.031669531143887375))) IS TRUE)) IS TRUE)  as count FROM vt0, t0, vt2, v0);
SELECT ALL COUNT(*) FROM vt0, t0, vt2, v0 WHERE (((((t0.c0)*(0.031669531143887375))) IS TRUE));
SELECT * FROM vt2 CROSS JOIN vt0 ON CAST(vt2.c2 AS REAL) COLLATE RTRIM WHERE (UPPER(CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c1 END)) IS TRUE)  as count FROM vt2 CROSS JOIN vt0 ON CAST(vt2.c2 AS REAL) COLLATE RTRIM);
SELECT * FROM vt2 CROSS JOIN vt0 ON CAST(vt2.c2 AS REAL) COLLATE RTRIM WHERE (UPPER(CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c1 END)) IS TRUE)  as count FROM vt2 CROSS JOIN vt0 ON CAST(vt2.c2 AS REAL) COLLATE RTRIM);
SELECT * FROM vt2 CROSS JOIN vt0 ON CAST(vt2.c2 AS REAL) COLLATE RTRIM WHERE (UPPER(CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c1 END));
SELECT ALL * FROM vt2, vt0, t0, v0 WHERE (((((((t0.c0)+(vt0.c0)))OR(((vt2.c2)<=('7DP')))))OR(t0.c17 COLLATE BINARY))) ORDER BY ((vt2.c3)-(vt2.c3)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)+(vt0.c0)))OR(((vt2.c2)<=('7DP')))))OR(t0.c17 COLLATE BINARY))) IS TRUE)  as count FROM vt2, vt0, t0, v0 ORDER BY ((vt2.c3)-(vt2.c3)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM vt2, vt0, t0, v0 WHERE (((((((t0.c0)+(vt0.c0)))OR(((vt2.c2)<=('7DP')))))OR(t0.c17 COLLATE BINARY))) ORDER BY ((vt2.c3)-(vt2.c3)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)+(vt0.c0)))OR(((vt2.c2)<=('7DP')))))OR(t0.c17 COLLATE BINARY))) IS TRUE)  as count FROM vt2, vt0, t0, v0 ORDER BY ((vt2.c3)-(vt2.c3)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM vt2, vt0, t0, v0 WHERE (((((((t0.c0)+(vt0.c0)))OR(((vt2.c2)<=('7DP')))))OR(t0.c17 COLLATE BINARY))) ORDER BY ((vt2.c3)-(vt2.c3)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c0 THEN x'5448' ELSE CAST(t0.c1 AS NUMERIC) END) ORDER BY ((CAST(t0.c1 AS BLOB))GLOB(t0.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN x'5448' ELSE CAST(t0.c1 AS NUMERIC) END) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c1 AS BLOB))GLOB(t0.c1 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c0 THEN x'5448' ELSE CAST(t0.c1 AS NUMERIC) END) ORDER BY ((CAST(t0.c1 AS BLOB))GLOB(t0.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN x'5448' ELSE CAST(t0.c1 AS NUMERIC) END) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c1 AS BLOB))GLOB(t0.c1 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c0 THEN x'5448' ELSE CAST(t0.c1 AS NUMERIC) END) ORDER BY ((CAST(t0.c1 AS BLOB))GLOB(t0.c1 COLLATE BINARY)) ASC;
SELECT ALL * FROM vt0, t0 WHERE (((t0.c48) NOT BETWEEN (t0.c17) AND (t0.c48)) COLLATE NOCASE) ORDER BY (NOT (vt0.c0 COLLATE NOCASE))  NULLS LAST, SQLITE_COMPILEOPTION_GET((t0.c1 IN ())) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c48) NOT BETWEEN (t0.c17) AND (t0.c48)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 NOT INDEXED ORDER BY (NOT (vt0.c0 COLLATE NOCASE))  NULLS LAST, SQLITE_COMPILEOPTION_GET((t0.c1 IN ())) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((t0.c48) NOT BETWEEN (t0.c17) AND (t0.c48)) COLLATE NOCASE) ORDER BY (NOT (vt0.c0 COLLATE NOCASE))  NULLS LAST, SQLITE_COMPILEOPTION_GET((t0.c1 IN ())) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c48) NOT BETWEEN (t0.c17) AND (t0.c48)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 NOT INDEXED ORDER BY (NOT (vt0.c0 COLLATE NOCASE))  NULLS LAST, SQLITE_COMPILEOPTION_GET((t0.c1 IN ())) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((t0.c48) NOT BETWEEN (t0.c17) AND (t0.c48)) COLLATE NOCASE) ORDER BY (NOT (vt0.c0 COLLATE NOCASE))  NULLS LAST, SQLITE_COMPILEOPTION_GET((t0.c1 IN ())) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (0xffffffffd78a2970) ORDER BY CAST(t0.c17 AS BLOB) COLLATE BINARY  NULLS FIRST, ((t0.c1 COLLATE BINARY) BETWEEN (x'f68b') AND (CAST(t0.c17 AS INTEGER))) ASC  NULLS FIRST, ((((((((CASE WHEN t0.c17 THEN t0.c17 END)AND(LAST_INSERT_ROWID())))AND((- (t0.c0)))))AND(LOWER(t0.c0))))AND(CASE t0.c1  WHEN t0.c1 THEN t0.c1 ELSE x'' END));
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffd78a2970) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c17 AS BLOB) COLLATE BINARY  NULLS FIRST, ((t0.c1 COLLATE BINARY) BETWEEN (x'f68b') AND (CAST(t0.c17 AS INTEGER))) ASC  NULLS FIRST, ((((((((CASE WHEN t0.c17 THEN t0.c17 END)AND(LAST_INSERT_ROWID())))AND((- (t0.c0)))))AND(LOWER(t0.c0))))AND(CASE t0.c1  WHEN t0.c1 THEN t0.c1 ELSE x'' END)));
SELECT * FROM t0 WHERE (0xffffffffd78a2970) ORDER BY CAST(t0.c17 AS BLOB) COLLATE BINARY  NULLS FIRST, ((t0.c1 COLLATE BINARY) BETWEEN (x'f68b') AND (CAST(t0.c17 AS INTEGER))) ASC  NULLS FIRST, ((((((((CASE WHEN t0.c17 THEN t0.c17 END)AND(LAST_INSERT_ROWID())))AND((- (t0.c0)))))AND(LOWER(t0.c0))))AND(CASE t0.c1  WHEN t0.c1 THEN t0.c1 ELSE x'' END));
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffd78a2970) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c17 AS BLOB) COLLATE BINARY  NULLS FIRST, ((t0.c1 COLLATE BINARY) BETWEEN (x'f68b') AND (CAST(t0.c17 AS INTEGER))) ASC  NULLS FIRST, ((((((((CASE WHEN t0.c17 THEN t0.c17 END)AND(LAST_INSERT_ROWID())))AND((- (t0.c0)))))AND(LOWER(t0.c0))))AND(CASE t0.c1  WHEN t0.c1 THEN t0.c1 ELSE x'' END)));
SELECT * FROM t0 WHERE (0xffffffffd78a2970) ORDER BY CAST(t0.c17 AS BLOB) COLLATE BINARY  NULLS FIRST, ((t0.c1 COLLATE BINARY) BETWEEN (x'f68b') AND (CAST(t0.c17 AS INTEGER))) ASC  NULLS FIRST, ((((((((CASE WHEN t0.c17 THEN t0.c17 END)AND(LAST_INSERT_ROWID())))AND((- (t0.c0)))))AND(LOWER(t0.c0))))AND(CASE t0.c1  WHEN t0.c1 THEN t0.c1 ELSE x'' END));
SELECT ALL * FROM vt2, t0 WHERE (2.147139539E9);
SELECT SUM(count) FROM (SELECT ((2.147139539E9) IS TRUE)  as count FROM vt2, t0);
SELECT ALL * FROM vt2, t0 WHERE (2.147139539E9);
SELECT SUM(count) FROM (SELECT ((2.147139539E9) IS TRUE)  as count FROM vt2, t0);
SELECT ALL * FROM vt2, t0 WHERE (2.147139539E9);
SELECT * FROM vt2 RIGHT OUTER JOIN vt0 ON ((x'')<>('-306262679')) RIGHT OUTER JOIN v0 ON ABS(DISTINCT v0.c0) COLLATE BINARY WHERE (x'7291') ORDER BY CASE LOWER(vt2.c3)  WHEN ((v0.c0)<=(vt2.c0)) THEN ((vt2.lid)LIKE(vt2.c0)) WHEN ((vt0.c0) BETWEEN (vt2.lid) AND (vt0.c0)) THEN (NOT (vt2.lid)) WHEN CHANGES() THEN CAST('-678811280' AS TEXT) ELSE (vt0.c0 IN ()) END DESC, CASE WHEN ((((((((vt2.c0)AND(vt2.lid)))OR(vt2.c2)))AND(NULL)))AND('dPlE┼\rએtI')) THEN ((vt2.c3)!=(vt2.c1)) END, ((vt2.c0) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'7291') IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN vt0 ON ((x'')<>('-306262679')) RIGHT OUTER JOIN v0 ON ABS(DISTINCT v0.c0) COLLATE BINARY ORDER BY CASE LOWER(vt2.c3)  WHEN ((v0.c0)<=(vt2.c0)) THEN ((vt2.lid)LIKE(vt2.c0)) WHEN ((vt0.c0) BETWEEN (vt2.lid) AND (vt0.c0)) THEN (NOT (vt2.lid)) WHEN CHANGES() THEN CAST('-678811280' AS TEXT) ELSE (vt0.c0 IN ()) END DESC, CASE WHEN ((((((((vt2.c0)AND(vt2.lid)))OR(vt2.c2)))AND(NULL)))AND('dPlE┼\rએtI')) THEN ((vt2.c3)!=(vt2.c1)) END, ((vt2.c0) IS FALSE) DESC);
SELECT * FROM vt2 RIGHT OUTER JOIN vt0 ON ((x'')<>('-306262679')) RIGHT OUTER JOIN v0 ON ABS(DISTINCT v0.c0) COLLATE BINARY WHERE (x'7291') ORDER BY CASE LOWER(vt2.c3)  WHEN ((v0.c0)<=(vt2.c0)) THEN ((vt2.lid)LIKE(vt2.c0)) WHEN ((vt0.c0) BETWEEN (vt2.lid) AND (vt0.c0)) THEN (NOT (vt2.lid)) WHEN CHANGES() THEN CAST('-678811280' AS TEXT) ELSE (vt0.c0 IN ()) END DESC, CASE WHEN ((((((((vt2.c0)AND(vt2.lid)))OR(vt2.c2)))AND(NULL)))AND('dPlE┼\rએtI')) THEN ((vt2.c3)!=(vt2.c1)) END, ((vt2.c0) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'7291') IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN vt0 ON ((x'')<>('-306262679')) RIGHT OUTER JOIN v0 ON ABS(DISTINCT v0.c0) COLLATE BINARY ORDER BY CASE LOWER(vt2.c3)  WHEN ((v0.c0)<=(vt2.c0)) THEN ((vt2.lid)LIKE(vt2.c0)) WHEN ((vt0.c0) BETWEEN (vt2.lid) AND (vt0.c0)) THEN (NOT (vt2.lid)) WHEN CHANGES() THEN CAST('-678811280' AS TEXT) ELSE (vt0.c0 IN ()) END DESC, CASE WHEN ((((((((vt2.c0)AND(vt2.lid)))OR(vt2.c2)))AND(NULL)))AND('dPlE┼\rએtI')) THEN ((vt2.c3)!=(vt2.c1)) END, ((vt2.c0) IS FALSE) DESC);
SELECT * FROM vt2 RIGHT OUTER JOIN vt0 ON ((x'')<>('-306262679')) RIGHT OUTER JOIN v0 ON ABS(DISTINCT v0.c0) COLLATE BINARY WHERE (x'7291') ORDER BY CASE LOWER(vt2.c3)  WHEN ((v0.c0)<=(vt2.c0)) THEN ((vt2.lid)LIKE(vt2.c0)) WHEN ((vt0.c0) BETWEEN (vt2.lid) AND (vt0.c0)) THEN (NOT (vt2.lid)) WHEN CHANGES() THEN CAST('-678811280' AS TEXT) ELSE (vt0.c0 IN ()) END DESC, CASE WHEN ((((((((vt2.c0)AND(vt2.lid)))OR(vt2.c2)))AND(NULL)))AND('dPlE┼\rએtI')) THEN ((vt2.c3)!=(vt2.c1)) END, ((vt2.c0) IS FALSE) DESC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (~ (vt0.c0)) END);
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN vt2 ON ((((vt2.c0) BETWEEN (vt2.c3) AND (vt2.lid)))OR(LIKELIHOOD(DISTINCT v0.c0, 0.9508854506881484))) INNER JOIN t0 ON ((t0.c0 IN ()) IN ()) WHERE (((CASE WHEN vt2.c2 THEN t0.c48 ELSE t0.c1 END) NOT BETWEEN (x'') AND (vt2.c0))) ORDER BY x'' COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt2.c2 THEN t0.c48 ELSE t0.c1 END) NOT BETWEEN (x'') AND (vt2.c0))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN vt2 ON ((((vt2.c0) BETWEEN (vt2.c3) AND (vt2.lid)))OR(LIKELIHOOD(DISTINCT v0.c0, 0.9508854506881484))) INNER JOIN t0 ON ((t0.c0 IN ()) IN ()) ORDER BY x'' COLLATE NOCASE);
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN vt2 ON ((((vt2.c0) BETWEEN (vt2.c3) AND (vt2.lid)))OR(LIKELIHOOD(DISTINCT v0.c0, 0.9508854506881484))) INNER JOIN t0 ON ((t0.c0 IN ()) IN ()) WHERE (((CASE WHEN vt2.c2 THEN t0.c48 ELSE t0.c1 END) NOT BETWEEN (x'') AND (vt2.c0))) ORDER BY x'' COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt2.c2 THEN t0.c48 ELSE t0.c1 END) NOT BETWEEN (x'') AND (vt2.c0))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN vt2 ON ((((vt2.c0) BETWEEN (vt2.c3) AND (vt2.lid)))OR(LIKELIHOOD(DISTINCT v0.c0, 0.9508854506881484))) INNER JOIN t0 ON ((t0.c0 IN ()) IN ()) ORDER BY x'' COLLATE NOCASE);
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN vt2 ON ((((vt2.c0) BETWEEN (vt2.c3) AND (vt2.lid)))OR(LIKELIHOOD(DISTINCT v0.c0, 0.9508854506881484))) INNER JOIN t0 ON ((t0.c0 IN ()) IN ()) WHERE (((CASE WHEN vt2.c2 THEN t0.c48 ELSE t0.c1 END) NOT BETWEEN (x'') AND (vt2.c0))) ORDER BY x'' COLLATE NOCASE;
SELECT ALL COUNT(*) FROM t0, vt2 CROSS JOIN v0 ON ((CASE vt2.lid  WHEN t0.c17 THEN vt2.c1 END)&(((((t0.c48)AND(t0.c17)))AND(vt2.c1)))) WHERE (CASE ((t0.c1) NOTNULL)  WHEN v0.c0 THEN CAST(vt2.c2 AS REAL) WHEN ((('#떅￿5XC', t0.c0, vt2.c0))>=((t0.c1, vt2.c2, vt2.c0))) THEN (t0.c0 IN (v0.c0)) WHEN ((((((((vt2.c1)AND(t0.c1)))OR(v0.c0)))AND(vt2.lid)))AND(vt2.c0)) THEN t0.c1 ELSE (((t0.c48, t0.c1, t0.c17)) NOT BETWEEN ((NULL, t0.c0, '-17098103')) AND ((vt2.c3, t0.c1, vt2.c3))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c1) NOTNULL)  WHEN v0.c0 THEN CAST(vt2.c2 AS REAL) WHEN ((('#떅￿5XC', t0.c0, vt2.c0))>=((t0.c1, vt2.c2, vt2.c0))) THEN (t0.c0 IN (v0.c0)) WHEN ((((((((vt2.c1)AND(t0.c1)))OR(v0.c0)))AND(vt2.lid)))AND(vt2.c0)) THEN t0.c1 ELSE (((t0.c48, t0.c1, t0.c17)) NOT BETWEEN ((NULL, t0.c0, '-17098103')) AND ((vt2.c3, t0.c1, vt2.c3))) END) IS TRUE)  as count FROM t0, vt2 CROSS JOIN v0 ON ((CASE vt2.lid  WHEN t0.c17 THEN vt2.c1 END)&(((((t0.c48)AND(t0.c17)))AND(vt2.c1)))));
SELECT ALL COUNT(*) FROM t0, vt2 CROSS JOIN v0 ON ((CASE vt2.lid  WHEN t0.c17 THEN vt2.c1 END)&(((((t0.c48)AND(t0.c17)))AND(vt2.c1)))) WHERE (CASE ((t0.c1) NOTNULL)  WHEN v0.c0 THEN CAST(vt2.c2 AS REAL) WHEN ((('#떅￿5XC', t0.c0, vt2.c0))>=((t0.c1, vt2.c2, vt2.c0))) THEN (t0.c0 IN (v0.c0)) WHEN ((((((((vt2.c1)AND(t0.c1)))OR(v0.c0)))AND(vt2.lid)))AND(vt2.c0)) THEN t0.c1 ELSE (((t0.c48, t0.c1, t0.c17)) NOT BETWEEN ((NULL, t0.c0, '-17098103')) AND ((vt2.c3, t0.c1, vt2.c3))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c1) NOTNULL)  WHEN v0.c0 THEN CAST(vt2.c2 AS REAL) WHEN ((('#떅￿5XC', t0.c0, vt2.c0))>=((t0.c1, vt2.c2, vt2.c0))) THEN (t0.c0 IN (v0.c0)) WHEN ((((((((vt2.c1)AND(t0.c1)))OR(v0.c0)))AND(vt2.lid)))AND(vt2.c0)) THEN t0.c1 ELSE (((t0.c48, t0.c1, t0.c17)) NOT BETWEEN ((NULL, t0.c0, '-17098103')) AND ((vt2.c3, t0.c1, vt2.c3))) END) IS TRUE)  as count FROM t0, vt2 CROSS JOIN v0 ON ((CASE vt2.lid  WHEN t0.c17 THEN vt2.c1 END)&(((((t0.c48)AND(t0.c17)))AND(vt2.c1)))));
SELECT ALL COUNT(*) FROM t0, vt2 CROSS JOIN v0 ON ((CASE vt2.lid  WHEN t0.c17 THEN vt2.c1 END)&(((((t0.c48)AND(t0.c17)))AND(vt2.c1)))) WHERE (CASE ((t0.c1) NOTNULL)  WHEN v0.c0 THEN CAST(vt2.c2 AS REAL) WHEN ((('#떅￿5XC', t0.c0, vt2.c0))>=((t0.c1, vt2.c2, vt2.c0))) THEN (t0.c0 IN (v0.c0)) WHEN ((((((((vt2.c1)AND(t0.c1)))OR(v0.c0)))AND(vt2.lid)))AND(vt2.c0)) THEN t0.c1 ELSE (((t0.c48, t0.c1, t0.c17)) NOT BETWEEN ((NULL, t0.c0, '-17098103')) AND ((vt2.c3, t0.c1, vt2.c3))) END);
SELECT * FROM vt2 WHERE (((vt2.lid)/(vt2.lid)) COLLATE RTRIM) ORDER BY vt2.lid COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt2.lid)/(vt2.lid)) COLLATE RTRIM) IS TRUE)  as count FROM vt2 ORDER BY vt2.lid COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt2 WHERE (((vt2.lid)/(vt2.lid)) COLLATE RTRIM) ORDER BY vt2.lid COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt2.lid)/(vt2.lid)) COLLATE RTRIM) IS TRUE)  as count FROM vt2 ORDER BY vt2.lid COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt2 WHERE (((vt2.lid)/(vt2.lid)) COLLATE RTRIM) ORDER BY vt2.lid COLLATE NOCASE DESC  NULLS LAST;
SELECT * FROM t0, vt2 WHERE (((((0.9339956172876076)OR(CAST(vt2.c3 AS NUMERIC))))OR(t0.c48 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.9339956172876076)OR(CAST(vt2.c3 AS NUMERIC))))OR(t0.c48 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt2);
SELECT * FROM t0, vt2 WHERE (((((0.9339956172876076)OR(CAST(vt2.c3 AS NUMERIC))))OR(t0.c48 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.9339956172876076)OR(CAST(vt2.c3 AS NUMERIC))))OR(t0.c48 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt2);
SELECT * FROM t0, vt2 WHERE (((((0.9339956172876076)OR(CAST(vt2.c3 AS NUMERIC))))OR(t0.c48 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (vt0.c0))) ORDER BY CASE (t0.c0 IN (t0.c17))  WHEN (+ (t0.c48)) THEN CAST(vt0.c0 AS INTEGER) WHEN (+ (vt0.c0)) THEN CASE t0.c1  WHEN t0.c17 THEN t0.c17 ELSE t0.c1 END WHEN ((((((((t0.c1)OR(t0.c48)))AND(x'')))OR(t0.c0)))OR(t0.c48)) THEN ((t0.c17)AND(vt0.c0)) ELSE CAST(t0.c1 AS INTEGER) END DESC  NULLS LAST, CASE WHEN (t0.c0 IN ()) THEN CASE WHEN t0.c1 THEN t0.c48 WHEN t0.c1 THEN t0.c17 WHEN t0.c1 THEN t0.c17 END END DESC, CAST(CASE '5'  WHEN t0.c48 THEN t0.c1 END AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE (t0.c0 IN (t0.c17))  WHEN (+ (t0.c48)) THEN CAST(vt0.c0 AS INTEGER) WHEN (+ (vt0.c0)) THEN CASE t0.c1  WHEN t0.c17 THEN t0.c17 ELSE t0.c1 END WHEN ((((((((t0.c1)OR(t0.c48)))AND(x'')))OR(t0.c0)))OR(t0.c48)) THEN ((t0.c17)AND(vt0.c0)) ELSE CAST(t0.c1 AS INTEGER) END DESC  NULLS LAST, CASE WHEN (t0.c0 IN ()) THEN CASE WHEN t0.c1 THEN t0.c48 WHEN t0.c1 THEN t0.c17 WHEN t0.c1 THEN t0.c17 END END DESC, CAST(CASE '5'  WHEN t0.c48 THEN t0.c1 END AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (vt0.c0))) ORDER BY CASE (t0.c0 IN (t0.c17))  WHEN (+ (t0.c48)) THEN CAST(vt0.c0 AS INTEGER) WHEN (+ (vt0.c0)) THEN CASE t0.c1  WHEN t0.c17 THEN t0.c17 ELSE t0.c1 END WHEN ((((((((t0.c1)OR(t0.c48)))AND(x'')))OR(t0.c0)))OR(t0.c48)) THEN ((t0.c17)AND(vt0.c0)) ELSE CAST(t0.c1 AS INTEGER) END DESC  NULLS LAST, CASE WHEN (t0.c0 IN ()) THEN CASE WHEN t0.c1 THEN t0.c48 WHEN t0.c1 THEN t0.c17 WHEN t0.c1 THEN t0.c17 END END DESC, CAST(CASE '5'  WHEN t0.c48 THEN t0.c1 END AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE (t0.c0 IN (t0.c17))  WHEN (+ (t0.c48)) THEN CAST(vt0.c0 AS INTEGER) WHEN (+ (vt0.c0)) THEN CASE t0.c1  WHEN t0.c17 THEN t0.c17 ELSE t0.c1 END WHEN ((((((((t0.c1)OR(t0.c48)))AND(x'')))OR(t0.c0)))OR(t0.c48)) THEN ((t0.c17)AND(vt0.c0)) ELSE CAST(t0.c1 AS INTEGER) END DESC  NULLS LAST, CASE WHEN (t0.c0 IN ()) THEN CASE WHEN t0.c1 THEN t0.c48 WHEN t0.c1 THEN t0.c17 WHEN t0.c1 THEN t0.c17 END END DESC, CAST(CASE '5'  WHEN t0.c48 THEN t0.c1 END AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (vt0.c0))) ORDER BY CASE (t0.c0 IN (t0.c17))  WHEN (+ (t0.c48)) THEN CAST(vt0.c0 AS INTEGER) WHEN (+ (vt0.c0)) THEN CASE t0.c1  WHEN t0.c17 THEN t0.c17 ELSE t0.c1 END WHEN ((((((((t0.c1)OR(t0.c48)))AND(x'')))OR(t0.c0)))OR(t0.c48)) THEN ((t0.c17)AND(vt0.c0)) ELSE CAST(t0.c1 AS INTEGER) END DESC  NULLS LAST, CASE WHEN (t0.c0 IN ()) THEN CASE WHEN t0.c1 THEN t0.c48 WHEN t0.c1 THEN t0.c17 WHEN t0.c1 THEN t0.c17 END END DESC, CAST(CASE '5'  WHEN t0.c48 THEN t0.c1 END AS TEXT)  NULLS LAST;
SELECT * FROM t0 WHERE (((((t0.c48) BETWEEN (t0.c1) AND (t0.c1)))>=(t0.c17 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48) BETWEEN (t0.c1) AND (t0.c1)))>=(t0.c17 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c48) BETWEEN (t0.c1) AND (t0.c1)))>=(t0.c17 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48) BETWEEN (t0.c1) AND (t0.c1)))>=(t0.c17 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c48) BETWEEN (t0.c1) AND (t0.c1)))>=(t0.c17 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, vt2 LEFT OUTER JOIN v0 ON ((((((v0.c0)AND(vt2.c2)))OR(vt0.c0))) NOT NULL) WHERE (((-385132817) IS FALSE)) ORDER BY ((vt2.c3 COLLATE RTRIM) NOT BETWEEN ((((vt2.c0))<>((vt0.c0)))) AND (vt2.c3 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-385132817) IS FALSE)) IS TRUE)  as count FROM vt0, vt2 LEFT OUTER JOIN v0 ON ((((((v0.c0)AND(vt2.c2)))OR(vt0.c0))) NOT NULL) ORDER BY ((vt2.c3 COLLATE RTRIM) NOT BETWEEN ((((vt2.c0))!=((vt0.c0)))) AND (vt2.c3 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt2 LEFT OUTER JOIN v0 ON ((((((v0.c0)AND(vt2.c2)))OR(vt0.c0))) NOT NULL) WHERE (((-385132817) IS FALSE)) ORDER BY ((vt2.c3 COLLATE RTRIM) NOT BETWEEN ((((vt2.c0))<>((vt0.c0)))) AND (vt2.c3 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-385132817) IS FALSE)) IS TRUE)  as count FROM vt0, vt2 LEFT OUTER JOIN v0 ON ((((((v0.c0)AND(vt2.c2)))OR(vt0.c0))) NOT NULL) ORDER BY ((vt2.c3 COLLATE RTRIM) NOT BETWEEN ((((vt2.c0))!=((vt0.c0)))) AND (vt2.c3 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt2 LEFT OUTER JOIN v0 ON ((((((v0.c0)AND(vt2.c2)))OR(vt0.c0))) NOT NULL) WHERE (((-385132817) IS FALSE)) ORDER BY ((vt2.c3 COLLATE RTRIM) NOT BETWEEN ((((vt2.c0))<>((vt0.c0)))) AND (vt2.c3 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt2 LEFT OUTER JOIN t0 ON (NOT (t0.c48 COLLATE NOCASE)) WHERE (CAST(CAST(vt2.c3 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt2.c3 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM vt0, vt2 LEFT OUTER JOIN t0 ON (NOT (t0.c48 COLLATE NOCASE)));
SELECT ALL * FROM vt0, vt2 LEFT OUTER JOIN t0 ON (NOT (t0.c48 COLLATE NOCASE)) WHERE (CAST(CAST(vt2.c3 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt2.c3 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM vt0, vt2 LEFT OUTER JOIN t0 ON (NOT (t0.c48 COLLATE NOCASE)));
SELECT ALL * FROM vt0, vt2 LEFT OUTER JOIN t0 ON (NOT (t0.c48 COLLATE NOCASE)) WHERE (CAST(CAST(vt2.c3 AS BLOB) AS INTEGER));
SELECT ALL * FROM v0, vt0, t0 WHERE ((CASE NULL  WHEN t0.c1 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE NULL  WHEN t0.c1 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE ((CASE NULL  WHEN t0.c1 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE NULL  WHEN t0.c1 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE ((CASE NULL  WHEN t0.c1 THEN vt0.c0 END IN ()));
SELECT COUNT(*) FROM vt2 WHERE ((((vt2.lid)-(vt2.c0)) IN ((NOT (vt2.c3))))) ORDER BY ((vt2.lid)GLOB(vt2.c0)) COLLATE NOCASE DESC  NULLS FIRST, ((vt2.c2)IS(vt2.lid COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt2.lid)-(vt2.c0)) IN ((NOT (vt2.c3))))) IS TRUE)  as count FROM vt2 ORDER BY ((vt2.lid)GLOB(vt2.c0)) COLLATE NOCASE DESC  NULLS FIRST, ((vt2.c2)IS(vt2.lid COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM vt2 WHERE ((((vt2.lid)-(vt2.c0)) IN ((NOT (vt2.c3))))) ORDER BY ((vt2.lid)GLOB(vt2.c0)) COLLATE NOCASE DESC  NULLS FIRST, ((vt2.c2)IS(vt2.lid COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt2.lid)-(vt2.c0)) IN ((NOT (vt2.c3))))) IS TRUE)  as count FROM vt2 ORDER BY ((vt2.lid)GLOB(vt2.c0)) COLLATE NOCASE DESC  NULLS FIRST, ((vt2.c2)IS(vt2.lid COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM vt2 WHERE ((((vt2.lid)-(vt2.c0)) IN ((NOT (vt2.c3))))) ORDER BY ((vt2.lid)GLOB(vt2.c0)) COLLATE NOCASE DESC  NULLS FIRST, ((vt2.c2)IS(vt2.lid COLLATE BINARY))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS TEXT));
SELECT ALL * FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0))) IS TRUE)) ORDER BY ((LIKELY(NULL))|((v0.c0 IN (v0.c0)))) ASC, (NOT (((((v0.c0)AND(v0.c0)))OR(v0.c0)))) ASC, (~ (v0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)IS NOT(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY ((LIKELY(NULL))|((v0.c0 IN (v0.c0)))) ASC, (NOT (((((v0.c0)AND(v0.c0)))OR(v0.c0)))) ASC, (~ (v0.c0)) COLLATE BINARY ASC);
SELECT ALL * FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0))) IS TRUE)) ORDER BY ((LIKELY(NULL))|((v0.c0 IN (v0.c0)))) ASC, (NOT (((((v0.c0)AND(v0.c0)))OR(v0.c0)))) ASC, (~ (v0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)IS NOT(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY ((LIKELY(NULL))|((v0.c0 IN (v0.c0)))) ASC, (NOT (((((v0.c0)AND(v0.c0)))OR(v0.c0)))) ASC, (~ (v0.c0)) COLLATE BINARY ASC);
SELECT ALL * FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0))) IS TRUE)) ORDER BY ((LIKELY(NULL))|((v0.c0 IN (v0.c0)))) ASC, (NOT (((((v0.c0)AND(v0.c0)))OR(v0.c0)))) ASC, (~ (v0.c0)) COLLATE BINARY ASC;
SELECT * FROM v0, vt0 NOT INDEXED WHERE ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 NOT INDEXED WHERE ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 NOT INDEXED WHERE ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) COLLATE NOCASE);
SELECT ALL * FROM vt2 INNER JOIN v0 ON LOWER(DISTINCT (((vt2.c2, v0.c0, vt2.lid))<=((vt2.c2, vt2.c1, vt2.lid)))) WHERE (0.8365620961620291) ORDER BY (+ (NULL));
SELECT SUM(count) FROM (SELECT ALL ((0.8365620961620291) IS TRUE)  as count FROM vt2 INNER JOIN v0 ON LOWER(DISTINCT (((vt2.c2, v0.c0, vt2.lid))<=((vt2.c2, vt2.c1, vt2.lid)))) ORDER BY (+ (NULL)));
SELECT ALL * FROM vt2 INNER JOIN v0 ON LOWER(DISTINCT (((vt2.c2, v0.c0, vt2.lid))<=((vt2.c2, vt2.c1, vt2.lid)))) WHERE (0.8365620961620291) ORDER BY (+ (NULL));
SELECT SUM(count) FROM (SELECT ALL ((0.8365620961620291) IS TRUE)  as count FROM vt2 INNER JOIN v0 ON LOWER(DISTINCT (((vt2.c2, v0.c0, vt2.lid))<=((vt2.c2, vt2.c1, vt2.lid)))) ORDER BY (+ (NULL)));
SELECT ALL * FROM vt2 INNER JOIN v0 ON LOWER(DISTINCT (((vt2.c2, v0.c0, vt2.lid))<=((vt2.c2, vt2.c1, vt2.lid)))) WHERE (0.8365620961620291) ORDER BY (+ (NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((- (vt0.c0)), ((((x'')AND(vt0.c0)))AND(x'')), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))!=((CASE '4q'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('')), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.5119177789349705)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (vt0.c0)), ((((x'')AND(vt0.c0)))AND(x'')), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<>((CASE '4q'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('')), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.5119177789349705))))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((- (vt0.c0)), ((((x'')AND(vt0.c0)))AND(x'')), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))!=((CASE '4q'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('')), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.5119177789349705)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (vt0.c0)), ((((x'')AND(vt0.c0)))AND(x'')), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<>((CASE '4q'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('')), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.5119177789349705))))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((- (vt0.c0)), ((((x'')AND(vt0.c0)))AND(x'')), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))!=((CASE '4q'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('')), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.5119177789349705)))))));
SELECT COUNT(*) FROM t0, vt2 WHERE (CAST(CAST(')Wi}3%.b' AS BLOB) AS BLOB)) ORDER BY (('-17098103') IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(')Wi}3%.b' AS BLOB) AS BLOB)) IS TRUE)  as count FROM t0, vt2 ORDER BY (('-17098103') IS TRUE) DESC);
SELECT COUNT(*) FROM t0, vt2 WHERE (CAST(CAST(')Wi}3%.b' AS BLOB) AS BLOB)) ORDER BY (('-17098103') IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(')Wi}3%.b' AS BLOB) AS BLOB)) IS TRUE)  as count FROM t0, vt2 ORDER BY (('-17098103') IS TRUE) DESC);
SELECT COUNT(*) FROM t0, vt2 WHERE (CAST(CAST(')Wi}3%.b' AS BLOB) AS BLOB)) ORDER BY (('-17098103') IS TRUE) DESC;
SELECT * FROM v0, vt0, vt2, t0 WHERE (((x'268d')>(vt2.c0))) ORDER BY ((vt2.c2)<(vt2.lid)) COLLATE BINARY, ((((vt2.lid)||(v0.c0)))<=(((vt0.c0)-(vt2.lid))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'268d')>(vt2.c0))) IS TRUE)  as count FROM v0, vt0, vt2, t0 ORDER BY ((vt2.c2)<(vt2.lid)) COLLATE BINARY, ((((vt2.lid)||(v0.c0)))<=(((vt0.c0)-(vt2.lid))))  NULLS LAST);
SELECT * FROM v0, vt0, vt2, t0 WHERE (((x'268d')>(vt2.c0))) ORDER BY ((vt2.c2)<(vt2.lid)) COLLATE BINARY, ((((vt2.lid)||(v0.c0)))<=(((vt0.c0)-(vt2.lid))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'268d')>(vt2.c0))) IS TRUE)  as count FROM v0, vt0, vt2, t0 ORDER BY ((vt2.c2)<(vt2.lid)) COLLATE BINARY, ((((vt2.lid)||(v0.c0)))<=(((vt0.c0)-(vt2.lid))))  NULLS LAST);
SELECT * FROM v0, vt0, vt2, t0 WHERE (((x'268d')>(vt2.c0))) ORDER BY ((vt2.c2)<(vt2.lid)) COLLATE BINARY, ((((vt2.lid)||(v0.c0)))<=(((vt0.c0)-(vt2.lid))))  NULLS LAST;
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON t0.c0 COLLATE BINARY WHERE (((CAST(NULL AS TEXT)) NOT BETWEEN (NULL COLLATE BINARY) AND ((((v0.c0)) BETWEEN ((t0.c1)) AND ((t0.c1))))));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS TEXT)) NOT BETWEEN (NULL COLLATE BINARY) AND ((((v0.c0)) BETWEEN ((t0.c1)) AND ((t0.c1)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON t0.c0 COLLATE BINARY);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON t0.c0 COLLATE BINARY WHERE (((CAST(NULL AS TEXT)) NOT BETWEEN (NULL COLLATE BINARY) AND ((((v0.c0)) BETWEEN ((t0.c1)) AND ((t0.c1))))));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS TEXT)) NOT BETWEEN (NULL COLLATE BINARY) AND ((((v0.c0)) BETWEEN ((t0.c1)) AND ((t0.c1)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON t0.c0 COLLATE BINARY);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON t0.c0 COLLATE BINARY WHERE (((CAST(NULL AS TEXT)) NOT BETWEEN (NULL COLLATE BINARY) AND ((((v0.c0)) BETWEEN ((t0.c1)) AND ((t0.c1))))));
SELECT ALL * FROM vt2, t0, vt0, v0 WHERE (LENGTH(ROUND(vt2.c2, vt2.c2))) ORDER BY CASE WHEN NULLIF(vt2.lid, v0.c0) THEN CASE v0.c0  WHEN t0.c17 THEN t0.c17 END ELSE (((t0.c0))<>((vt2.c3))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(ROUND(vt2.c2, vt2.c2))) IS TRUE)  as count FROM vt2, t0, vt0, v0 ORDER BY CASE WHEN NULLIF(vt2.lid, v0.c0) THEN CASE v0.c0  WHEN t0.c17 THEN t0.c17 END ELSE (((t0.c0))!=((vt2.c3))) END ASC  NULLS LAST);
SELECT ALL * FROM vt2, t0, vt0, v0 WHERE (LENGTH(ROUND(vt2.c2, vt2.c2))) ORDER BY CASE WHEN NULLIF(vt2.lid, v0.c0) THEN CASE v0.c0  WHEN t0.c17 THEN t0.c17 END ELSE (((t0.c0))<>((vt2.c3))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(ROUND(vt2.c2, vt2.c2))) IS TRUE)  as count FROM vt2, t0, vt0, v0 ORDER BY CASE WHEN NULLIF(vt2.lid, v0.c0) THEN CASE v0.c0  WHEN t0.c17 THEN t0.c17 END ELSE (((t0.c0))!=((vt2.c3))) END ASC  NULLS LAST);
SELECT ALL * FROM vt2, t0, vt0, v0 WHERE (LENGTH(ROUND(vt2.c2, vt2.c2))) ORDER BY CASE WHEN NULLIF(vt2.lid, v0.c0) THEN CASE v0.c0  WHEN t0.c17 THEN t0.c17 END ELSE (((t0.c0))<>((vt2.c3))) END ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) BETWEEN (((v0.c0) NOT NULL)) AND (v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB)) BETWEEN (((v0.c0) NOT NULL)) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) BETWEEN (((v0.c0) NOT NULL)) AND (v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB)) BETWEEN (((v0.c0) NOT NULL)) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) BETWEEN (((v0.c0) NOT NULL)) AND (v0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, v0 CROSS JOIN t0 ON CAST(LOWER(DISTINCT t0.c1) AS INTEGER) WHERE (0.4174229345714291);
SELECT SUM(count) FROM (SELECT ((0.4174229345714291) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t0 ON CAST(LOWER(DISTINCT t0.c1) AS INTEGER));
SELECT COUNT(*) FROM vt0, v0 CROSS JOIN t0 ON CAST(LOWER(DISTINCT t0.c1) AS INTEGER) WHERE (0.4174229345714291);
SELECT SUM(count) FROM (SELECT ((0.4174229345714291) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t0 ON CAST(LOWER(DISTINCT t0.c1) AS INTEGER));
SELECT COUNT(*) FROM vt0, v0 CROSS JOIN t0 ON CAST(LOWER(DISTINCT t0.c1) AS INTEGER) WHERE (0.4174229345714291);
SELECT COUNT(*) FROM vt2 WHERE ((- ((((NULL)) BETWEEN ((vt2.c3)) AND ((vt2.c1))))));
SELECT SUM(count) FROM (SELECT (((- ((((NULL)) BETWEEN ((vt2.c3)) AND ((vt2.c1)))))) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE ((- ((((NULL)) BETWEEN ((vt2.c3)) AND ((vt2.c1))))));
SELECT SUM(count) FROM (SELECT (((- ((((NULL)) BETWEEN ((vt2.c3)) AND ((vt2.c1)))))) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE ((- ((((NULL)) BETWEEN ((vt2.c3)) AND ((vt2.c1))))));
SELECT ALL * FROM t0, vt2 FULL OUTER JOIN v0 ON ((CASE WHEN t0.c0 THEN vt2.c0 ELSE t0.c1 END) NOTNULL) FULL OUTER JOIN vt0 ON (~ (CASE WHEN x'' THEN vt2.c1 ELSE vt2.c3 END)) WHERE (CASE NULL  WHEN (~ (vt2.c1)) THEN ((t0.c17)>=(vt2.c1)) ELSE vt0.c0 COLLATE RTRIM END) ORDER BY highlight(LIKELY(vt2.c2), ((t0.c0)>>(0.750368805174001)), json_valid(NULL), ((vt2.c1) IS TRUE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN (~ (vt2.c1)) THEN ((t0.c17)>=(vt2.c1)) ELSE vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t0, vt2 FULL OUTER JOIN v0 ON ((CASE WHEN t0.c0 THEN vt2.c0 ELSE t0.c1 END) NOTNULL) FULL OUTER JOIN vt0 ON (~ (CASE WHEN x'' THEN vt2.c1 ELSE vt2.c3 END)) ORDER BY highlight(LIKELY(vt2.c2), ((t0.c0)>>(0.750368805174001)), json_valid(NULL), ((vt2.c1) IS TRUE))  NULLS FIRST);
SELECT ALL * FROM t0, vt2 FULL OUTER JOIN v0 ON ((CASE WHEN t0.c0 THEN vt2.c0 ELSE t0.c1 END) NOTNULL) FULL OUTER JOIN vt0 ON (~ (CASE WHEN x'' THEN vt2.c1 ELSE vt2.c3 END)) WHERE (CASE NULL  WHEN (~ (vt2.c1)) THEN ((t0.c17)>=(vt2.c1)) ELSE vt0.c0 COLLATE RTRIM END) ORDER BY highlight(LIKELY(vt2.c2), ((t0.c0)>>(0.750368805174001)), json_valid(NULL), ((vt2.c1) IS TRUE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN (~ (vt2.c1)) THEN ((t0.c17)>=(vt2.c1)) ELSE vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t0, vt2 FULL OUTER JOIN v0 ON ((CASE WHEN t0.c0 THEN vt2.c0 ELSE t0.c1 END) NOTNULL) FULL OUTER JOIN vt0 ON (~ (CASE WHEN x'' THEN vt2.c1 ELSE vt2.c3 END)) ORDER BY highlight(LIKELY(vt2.c2), ((t0.c0)>>(0.750368805174001)), json_valid(NULL), ((vt2.c1) IS TRUE))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((CASE WHEN t0.c1 THEN t0.c48 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c17 END) BETWEEN ((((vt0.c0, t0.c17, t0.c1))>=((t0.c1, t0.c48, vt0.c0)))) AND (((((t0.c1)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c1 THEN t0.c48 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c17 END) BETWEEN ((((vt0.c0, t0.c17, t0.c1))>=((t0.c1, t0.c48, vt0.c0)))) AND (((((t0.c1)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((CASE WHEN t0.c1 THEN t0.c48 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c17 END) BETWEEN ((((vt0.c0, t0.c17, t0.c1))>=((t0.c1, t0.c48, vt0.c0)))) AND (((((t0.c1)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c1 THEN t0.c48 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c17 END) BETWEEN ((((vt0.c0, t0.c17, t0.c1))>=((t0.c1, t0.c48, vt0.c0)))) AND (((((t0.c1)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((CASE WHEN t0.c1 THEN t0.c48 WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c17 END) BETWEEN ((((vt0.c0, t0.c17, t0.c1))>=((t0.c1, t0.c48, vt0.c0)))) AND (((((t0.c1)AND(vt0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((0xffffffffcaf2f3c4) IS TRUE) COLLATE RTRIM FULL OUTER JOIN t0 ON ((v0.c0 IN (t0.c1)) IN ()) WHERE (((((NULL)IS(t0.c0))) BETWEEN (((((t0.c17)OR(t0.c1)))AND(t0.c17))) AND ((+ (t0.c48))))) ORDER BY t0.c48, (((t0.c17)) NOT BETWEEN ((CASE v0.c0  WHEN t0.c0 THEN '-1620987206' WHEN v0.c0 THEN t0.c48 WHEN vt0.c0 THEN t0.c48 ELSE t0.c0 END)) AND ((((t0.c0)+(t0.c48)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)IS(t0.c0))) BETWEEN (((((t0.c17)OR(t0.c1)))AND(t0.c17))) AND ((+ (t0.c48))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((0Xffffffffcaf2f3c4) IS TRUE) COLLATE RTRIM FULL OUTER JOIN t0 ON ((v0.c0 IN (t0.c1)) IN ()) ORDER BY t0.c48, (((t0.c17)) NOT BETWEEN ((CASE v0.c0  WHEN t0.c0 THEN '-1620987206' WHEN v0.c0 THEN t0.c48 WHEN vt0.c0 THEN t0.c48 ELSE t0.c0 END)) AND ((((t0.c0)+(t0.c48)))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((0xffffffffcaf2f3c4) IS TRUE) COLLATE RTRIM FULL OUTER JOIN t0 ON ((v0.c0 IN (t0.c1)) IN ()) WHERE (((((NULL)IS(t0.c0))) BETWEEN (((((t0.c17)OR(t0.c1)))AND(t0.c17))) AND ((+ (t0.c48))))) ORDER BY t0.c48, (((t0.c17)) NOT BETWEEN ((CASE v0.c0  WHEN t0.c0 THEN '-1620987206' WHEN v0.c0 THEN t0.c48 WHEN vt0.c0 THEN t0.c48 ELSE t0.c0 END)) AND ((((t0.c0)+(t0.c48)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)IS(t0.c0))) BETWEEN (((((t0.c17)OR(t0.c1)))AND(t0.c17))) AND ((+ (t0.c48))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((0Xffffffffcaf2f3c4) IS TRUE) COLLATE RTRIM FULL OUTER JOIN t0 ON ((v0.c0 IN (t0.c1)) IN ()) ORDER BY t0.c48, (((t0.c17)) NOT BETWEEN ((CASE v0.c0  WHEN t0.c0 THEN '-1620987206' WHEN v0.c0 THEN t0.c48 WHEN vt0.c0 THEN t0.c48 ELSE t0.c0 END)) AND ((((t0.c0)+(t0.c48)))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((0xffffffffcaf2f3c4) IS TRUE) COLLATE RTRIM FULL OUTER JOIN t0 ON ((v0.c0 IN (t0.c1)) IN ()) WHERE (((((NULL)IS(t0.c0))) BETWEEN (((((t0.c17)OR(t0.c1)))AND(t0.c17))) AND ((+ (t0.c48))))) ORDER BY t0.c48, (((t0.c17)) NOT BETWEEN ((CASE v0.c0  WHEN t0.c0 THEN '-1620987206' WHEN v0.c0 THEN t0.c48 WHEN vt0.c0 THEN t0.c48 ELSE t0.c0 END)) AND ((((t0.c0)+(t0.c48)))))  NULLS FIRST;
SELECT ALL * FROM t0, vt0, v0 WHERE (t0.c0) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM t0, vt0, v0 WHERE (t0.c0) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM t0, vt0, v0 WHERE (t0.c0) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM v0, vt2 CROSS JOIN vt0 ON ((((vt2.c2)+(vt2.c0))) BETWEEN (CASE t0.c17  WHEN vt2.c3 THEN vt2.c2 ELSE 0Xffffffffdc826edb END) AND (((vt2.c3) NOT NULL))) INNER JOIN t0 ON (((0.8673877126857057)) BETWEEN ((ABS(DISTINCT t0.c48))) AND ((((vt2.c2)%(t0.c48))))) WHERE ((~ (CAST(t0.c17 AS BLOB)))) ORDER BY ((((((v0.c0)%(vt2.c0)))OR(((vt2.c0) NOT BETWEEN (t0.c17) AND (vt2.c2)))))OR(t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((~ (CAST(t0.c17 AS BLOB)))) IS TRUE)  as count FROM v0, vt2 CROSS JOIN vt0 ON ((((vt2.c2)+(vt2.c0))) BETWEEN (CASE t0.c17  WHEN vt2.c3 THEN vt2.c2 ELSE 0Xffffffffdc826edb END) AND (((vt2.c3) NOT NULL))) INNER JOIN t0 ON (((0.8673877126857057)) BETWEEN ((ABS(DISTINCT t0.c48))) AND ((((vt2.c2)%(t0.c48))))) ORDER BY ((((((v0.c0)%(vt2.c0)))OR(((vt2.c0) NOT BETWEEN (t0.c17) AND (vt2.c2)))))OR(t0.c0 COLLATE RTRIM)));
SELECT ALL * FROM v0, vt2 CROSS JOIN vt0 ON ((((vt2.c2)+(vt2.c0))) BETWEEN (CASE t0.c17  WHEN vt2.c3 THEN vt2.c2 ELSE 0Xffffffffdc826edb END) AND (((vt2.c3) NOT NULL))) INNER JOIN t0 ON (((0.8673877126857057)) BETWEEN ((ABS(DISTINCT t0.c48))) AND ((((vt2.c2)%(t0.c48))))) WHERE ((~ (CAST(t0.c17 AS BLOB)))) ORDER BY ((((((v0.c0)%(vt2.c0)))OR(((vt2.c0) NOT BETWEEN (t0.c17) AND (vt2.c2)))))OR(t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((~ (CAST(t0.c17 AS BLOB)))) IS TRUE)  as count FROM v0, vt2 CROSS JOIN vt0 ON ((((vt2.c2)+(vt2.c0))) BETWEEN (CASE t0.c17  WHEN vt2.c3 THEN vt2.c2 ELSE 0Xffffffffdc826edb END) AND (((vt2.c3) NOT NULL))) INNER JOIN t0 ON (((0.8673877126857057)) BETWEEN ((ABS(DISTINCT t0.c48))) AND ((((vt2.c2)%(t0.c48))))) ORDER BY ((((((v0.c0)%(vt2.c0)))OR(((vt2.c0) NOT BETWEEN (t0.c17) AND (vt2.c2)))))OR(t0.c0 COLLATE RTRIM)));
SELECT ALL * FROM v0, vt2 CROSS JOIN vt0 ON ((((vt2.c2)+(vt2.c0))) BETWEEN (CASE t0.c17  WHEN vt2.c3 THEN vt2.c2 ELSE 0Xffffffffdc826edb END) AND (((vt2.c3) NOT NULL))) INNER JOIN t0 ON (((0.8673877126857057)) BETWEEN ((ABS(DISTINCT t0.c48))) AND ((((vt2.c2)%(t0.c48))))) WHERE ((~ (CAST(t0.c17 AS BLOB)))) ORDER BY ((((((v0.c0)%(vt2.c0)))OR(((vt2.c0) NOT BETWEEN (t0.c17) AND (vt2.c2)))))OR(t0.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt2 WHERE (((vt2.c1) BETWEEN (((vt2.c3) BETWEEN (vt2.c3) AND (NULL))) AND (0.968260996069274))) ORDER BY ((vt2.c0) IS FALSE) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c1) BETWEEN (((vt2.c3) BETWEEN (vt2.c3) AND (NULL))) AND (0.968260996069274))) IS TRUE)  as count FROM vt2 ORDER BY ((vt2.c0) IS FALSE) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt2 WHERE (((vt2.c1) BETWEEN (((vt2.c3) BETWEEN (vt2.c3) AND (NULL))) AND (0.968260996069274))) ORDER BY ((vt2.c0) IS FALSE) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c1) BETWEEN (((vt2.c3) BETWEEN (vt2.c3) AND (NULL))) AND (0.968260996069274))) IS TRUE)  as count FROM vt2 ORDER BY ((vt2.c0) IS FALSE) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt2 WHERE (((vt2.c1) BETWEEN (((vt2.c3) BETWEEN (vt2.c3) AND (NULL))) AND (0.968260996069274))) ORDER BY ((vt2.c0) IS FALSE) COLLATE NOCASE;
SELECT COUNT(*) FROM vt2 WHERE (vt2.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c2) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (vt2.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c2) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (vt2.c2);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)OR(t0.c1)))OR(t0.c0)))>(t0.c48))) ORDER BY (t0.c1 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(t0.c1)))OR(t0.c0)))>(t0.c48))) IS TRUE)  as count FROM t0 ORDER BY (t0.c1 IN ()) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)OR(t0.c1)))OR(t0.c0)))>(t0.c48))) ORDER BY (t0.c1 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(t0.c1)))OR(t0.c0)))>(t0.c48))) IS TRUE)  as count FROM t0 ORDER BY (t0.c1 IN ()) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)OR(t0.c1)))OR(t0.c0)))>(t0.c48))) ORDER BY (t0.c1 IN ()) ASC;
SELECT COUNT(*) FROM vt2 WHERE (CAST(NULL AS BLOB)) ORDER BY (((vt2.c0)) BETWEEN ((CAST(vt2.c1 AS BLOB))) AND ((LIKELIHOOD(vt2.c0, 0.628298765339414)))), ((((vt2.c3 IN (vt2.c3, vt2.c1))))=((0.09565454329511369))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM vt2 ORDER BY (((vt2.c0)) BETWEEN ((CAST(vt2.c1 AS BLOB))) AND ((LIKELIHOOD(vt2.c0, 0.628298765339414)))), ((((vt2.c3 IN (vt2.c3, vt2.c1))))==((0.09565454329511369))) ASC);
SELECT COUNT(*) FROM vt2 WHERE (CAST(NULL AS BLOB)) ORDER BY (((vt2.c0)) BETWEEN ((CAST(vt2.c1 AS BLOB))) AND ((LIKELIHOOD(vt2.c0, 0.628298765339414)))), ((((vt2.c3 IN (vt2.c3, vt2.c1))))=((0.09565454329511369))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM vt2 ORDER BY (((vt2.c0)) BETWEEN ((CAST(vt2.c1 AS BLOB))) AND ((LIKELIHOOD(vt2.c0, 0.628298765339414)))), ((((vt2.c3 IN (vt2.c3, vt2.c1))))==((0.09565454329511369))) ASC);
SELECT COUNT(*) FROM vt2 WHERE (CAST(NULL AS BLOB)) ORDER BY (((vt2.c0)) BETWEEN ((CAST(vt2.c1 AS BLOB))) AND ((LIKELIHOOD(vt2.c0, 0.628298765339414)))), ((((vt2.c3 IN (vt2.c3, vt2.c1))))=((0.09565454329511369))) ASC;
SELECT ALL COUNT(*) FROM vt2 RIGHT OUTER JOIN vt0 ON ((((((t0.c1)+(t0.c17)))AND((t0.c17 IN ()))))AND(load_extension('J/'))) CROSS JOIN t0 ON (((((vt0.c0) IS FALSE)))!=((((t0.c1) BETWEEN (t0.c48) AND (t0.c0))))) WHERE ((CASE vt2.c1  WHEN vt0.c0 THEN t0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt2.c1  WHEN vt0.c0 THEN t0.c1 END IN ())) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN vt0 ON ((((((t0.c1)+(t0.c17)))AND((t0.c17 IN ()))))AND(load_extension('J/'))) CROSS JOIN t0 ON (((((vt0.c0) IS FALSE)))!=((((t0.c1) BETWEEN (t0.c48) AND (t0.c0))))));
SELECT ALL COUNT(*) FROM vt2 RIGHT OUTER JOIN vt0 ON ((((((t0.c1)+(t0.c17)))AND((t0.c17 IN ()))))AND(load_extension('J/'))) CROSS JOIN t0 ON (((((vt0.c0) IS FALSE)))!=((((t0.c1) BETWEEN (t0.c48) AND (t0.c0))))) WHERE ((CASE vt2.c1  WHEN vt0.c0 THEN t0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt2.c1  WHEN vt0.c0 THEN t0.c1 END IN ())) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN vt0 ON ((((((t0.c1)+(t0.c17)))AND((t0.c17 IN ()))))AND(load_extension('J/'))) CROSS JOIN t0 ON (((((vt0.c0) IS FALSE)))!=((((t0.c1) BETWEEN (t0.c48) AND (t0.c0))))));
SELECT ALL COUNT(*) FROM vt2 RIGHT OUTER JOIN vt0 ON ((((((t0.c1)+(t0.c17)))AND((t0.c17 IN ()))))AND(load_extension('J/'))) CROSS JOIN t0 ON (((((vt0.c0) IS FALSE)))!=((((t0.c1) BETWEEN (t0.c48) AND (t0.c0))))) WHERE ((CASE vt2.c1  WHEN vt0.c0 THEN t0.c1 END IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN (((v0.c0, v0.c0, 0x429749de)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0))) THEN v0.c0 ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (1670789588)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (((v0.c0, v0.c0, 0X429749de)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0))) THEN v0.c0 ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (1670789588)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN (((v0.c0, v0.c0, 0x429749de)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0))) THEN v0.c0 ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (1670789588)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (((v0.c0, v0.c0, 0X429749de)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0))) THEN v0.c0 ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (1670789588)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN (((v0.c0, v0.c0, 0x429749de)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0))) THEN v0.c0 ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (1670789588)) END ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (((('Uq鲇鶖F'))<=((vt0.c0)))) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) NOT BETWEEN (((('Uq鲇鶖F'))<=((vt0.c0)))) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (((('Uq鲇鶖F'))<=((vt0.c0)))) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) NOT BETWEEN (((('Uq鲇鶖F'))<=((vt0.c0)))) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (((('Uq鲇鶖F'))<=((vt0.c0)))) AND (((vt0.c0) NOT NULL))));
SELECT ALL * FROM t0, v0 WHERE (TRIM(DISTINCT ((t0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((t0.c0) IS FALSE))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (TRIM(DISTINCT ((t0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((t0.c0) IS FALSE))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (TRIM(DISTINCT ((t0.c0) IS FALSE)));
SELECT COUNT(*) FROM v0, vt2 WHERE ((- (vt2.c3 COLLATE NOCASE))) ORDER BY (~ (vt2.c3)) COLLATE BINARY ASC  NULLS FIRST, vt2.c3 DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (vt2.c3 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt2 ORDER BY (~ (vt2.c3)) COLLATE BINARY ASC  NULLS FIRST, vt2.c3 DESC);
SELECT COUNT(*) FROM v0, vt2 WHERE ((- (vt2.c3 COLLATE NOCASE))) ORDER BY (~ (vt2.c3)) COLLATE BINARY ASC  NULLS FIRST, vt2.c3 DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (vt2.c3 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt2 ORDER BY (~ (vt2.c3)) COLLATE BINARY ASC  NULLS FIRST, vt2.c3 DESC);
SELECT COUNT(*) FROM v0, vt2 WHERE ((- (vt2.c3 COLLATE NOCASE))) ORDER BY (~ (vt2.c3)) COLLATE BINARY ASC  NULLS FIRST, vt2.c3 DESC;
SELECT ALL * FROM t0 FULL OUTER JOIN vt2 ON 0.4941726457401996 CROSS JOIN vt0 ON t0.c0 WHERE (vt2.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c2 COLLATE BINARY) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt2 ON 0.4941726457401996 CROSS JOIN vt0 ON t0.c0);
SELECT ALL * FROM t0 FULL OUTER JOIN vt2 ON 0.4941726457401996 CROSS JOIN vt0 ON t0.c0 WHERE (vt2.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c2 COLLATE BINARY) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt2 ON 0.4941726457401996 CROSS JOIN vt0 ON t0.c0);
SELECT ALL * FROM t0 FULL OUTER JOIN vt2 ON 0.4941726457401996 CROSS JOIN vt0 ON t0.c0 WHERE (vt2.c2 COLLATE BINARY);
SELECT COUNT(*) FROM vt2, t0, vt0, v0 WHERE ((- (CASE WHEN vt2.c1 THEN vt2.c2 WHEN vt2.c1 THEN vt2.lid WHEN t0.c1 THEN vt2.c1 END))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN '0.9743598864010847' END AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt2.c1 THEN vt2.c2 WHEN vt2.c1 THEN vt2.lid WHEN t0.c1 THEN vt2.c1 END))) IS TRUE)  as count FROM vt2, t0, vt0, v0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN '0.9743598864010847' END AS NUMERIC));
SELECT COUNT(*) FROM vt2, t0, vt0, v0 WHERE ((- (CASE WHEN vt2.c1 THEN vt2.c2 WHEN vt2.c1 THEN vt2.lid WHEN t0.c1 THEN vt2.c1 END))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN '0.9743598864010847' END AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt2.c1 THEN vt2.c2 WHEN vt2.c1 THEN vt2.lid WHEN t0.c1 THEN vt2.c1 END))) IS TRUE)  as count FROM vt2, t0, vt0, v0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN '0.9743598864010847' END AS NUMERIC));
SELECT COUNT(*) FROM vt2, t0, vt0, v0 WHERE ((- (CASE WHEN vt2.c1 THEN vt2.c2 WHEN vt2.c1 THEN vt2.lid WHEN t0.c1 THEN vt2.c1 END))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN '0.9743598864010847' END AS NUMERIC);
SELECT COUNT(*) FROM vt2, vt0, v0, t0 WHERE (t0.c0) ORDER BY ((t0.c0)==(t0.c17)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt2, vt0, v0, t0 ORDER BY ((t0.c0)==(t0.c17)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt2, vt0, v0, t0 WHERE (t0.c0) ORDER BY ((t0.c0)==(t0.c17)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt2, vt0, v0, t0 ORDER BY ((t0.c0)==(t0.c17)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt2, vt0, v0, t0 WHERE (t0.c0) ORDER BY ((t0.c0)==(t0.c17)) COLLATE BINARY  NULLS LAST;
SELECT * FROM v0, t0, vt0 WHERE (((((t0.c17)IS(t0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c17)IS(t0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (((((t0.c17)IS(t0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c17)IS(t0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (((((t0.c17)IS(t0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM t0, vt2, v0, vt0 WHERE (x'') ORDER BY CAST((0xffffffffcb65c5f2 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt2, v0, vt0 ORDER BY CAST((0Xffffffffcb65c5f2 IN ()) AS BLOB));
SELECT ALL COUNT(*) FROM t0, vt2, v0, vt0 WHERE (x'') ORDER BY CAST((0xffffffffcb65c5f2 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt2, v0, vt0 ORDER BY CAST((0Xffffffffcb65c5f2 IN ()) AS BLOB));
SELECT ALL COUNT(*) FROM t0, vt2, v0, vt0 WHERE (x'') ORDER BY CAST((0xffffffffcb65c5f2 IN ()) AS BLOB);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c1))>((t0.c0))))OR(((t0.c48) ISNULL))))AND(((((((((t0.c0)OR(t0.c1)))OR(t0.c1)))OR(t0.c0)))AND(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c1))>((t0.c0))))OR(((t0.c48) ISNULL))))AND(((((((((t0.c0)OR(t0.c1)))OR(t0.c1)))OR(t0.c0)))AND(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c1))>((t0.c0))))OR(((t0.c48) ISNULL))))AND(((((((((t0.c0)OR(t0.c1)))OR(t0.c1)))OR(t0.c0)))AND(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c1))>((t0.c0))))OR(((t0.c48) ISNULL))))AND(((((((((t0.c0)OR(t0.c1)))OR(t0.c1)))OR(t0.c0)))AND(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c1))>((t0.c0))))OR(((t0.c48) ISNULL))))AND(((((((((t0.c0)OR(t0.c1)))OR(t0.c1)))OR(t0.c0)))AND(t0.c1)))));
SELECT * FROM t0, vt0, vt2, v0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt2.lid)) AS REAL)) ORDER BY CASE ((((vt2.c0)AND(t0.c1)))AND(vt2.c0))  WHEN t0.c1 THEN ((v0.c0)LIKE(t0.c0)) WHEN ((vt2.c1) NOT BETWEEN (vt2.c3) AND (t0.c17)) THEN (vt2.lid IN ()) WHEN t0.c48 COLLATE RTRIM THEN ((t0.c1)<<(t0.c0)) END, CASE WHEN vt2.c0 THEN ((vt2.c0) IS FALSE) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt2.lid)) AS REAL)) IS TRUE)  as count FROM t0, vt0, vt2, v0 ORDER BY CASE ((((vt2.c0)AND(t0.c1)))AND(vt2.c0))  WHEN t0.c1 THEN ((v0.c0)LIKE(t0.c0)) WHEN ((vt2.c1) NOT BETWEEN (vt2.c3) AND (t0.c17)) THEN (vt2.lid IN ()) WHEN t0.c48 COLLATE RTRIM THEN ((t0.c1)<<(t0.c0)) END, CASE WHEN vt2.c0 THEN ((vt2.c0) IS FALSE) END DESC  NULLS LAST);
SELECT * FROM t0, vt0, vt2, v0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt2.lid)) AS REAL)) ORDER BY CASE ((((vt2.c0)AND(t0.c1)))AND(vt2.c0))  WHEN t0.c1 THEN ((v0.c0)LIKE(t0.c0)) WHEN ((vt2.c1) NOT BETWEEN (vt2.c3) AND (t0.c17)) THEN (vt2.lid IN ()) WHEN t0.c48 COLLATE RTRIM THEN ((t0.c1)<<(t0.c0)) END, CASE WHEN vt2.c0 THEN ((vt2.c0) IS FALSE) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt2.lid)) AS REAL)) IS TRUE)  as count FROM t0, vt0, vt2, v0 ORDER BY CASE ((((vt2.c0)AND(t0.c1)))AND(vt2.c0))  WHEN t0.c1 THEN ((v0.c0)LIKE(t0.c0)) WHEN ((vt2.c1) NOT BETWEEN (vt2.c3) AND (t0.c17)) THEN (vt2.lid IN ()) WHEN t0.c48 COLLATE RTRIM THEN ((t0.c1)<<(t0.c0)) END, CASE WHEN vt2.c0 THEN ((vt2.c0) IS FALSE) END DESC  NULLS LAST);
SELECT * FROM t0, vt0, vt2, v0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt2.lid)) AS REAL)) ORDER BY CASE ((((vt2.c0)AND(t0.c1)))AND(vt2.c0))  WHEN t0.c1 THEN ((v0.c0)LIKE(t0.c0)) WHEN ((vt2.c1) NOT BETWEEN (vt2.c3) AND (t0.c17)) THEN (vt2.lid IN ()) WHEN t0.c48 COLLATE RTRIM THEN ((t0.c1)<<(t0.c0)) END, CASE WHEN vt2.c0 THEN ((vt2.c0) IS FALSE) END DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (t0.c48) ORDER BY CAST(NULL AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c48) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY CAST(NULL AS INTEGER) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (t0.c48) ORDER BY CAST(NULL AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c48) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY CAST(NULL AS INTEGER) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (t0.c48) ORDER BY CAST(NULL AS INTEGER) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((v0.c0 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((v0.c0 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((v0.c0 COLLATE RTRIM) IS TRUE));
SELECT ALL * FROM vt2 WHERE (CAST(CASE WHEN vt2.c0 THEN vt2.c3 ELSE vt2.c1 END AS NUMERIC)) ORDER BY (((((vt2.lid)) BETWEEN ((vt2.c2)) AND ((vt2.c1)))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt2.c0 THEN vt2.c3 ELSE vt2.c1 END AS NUMERIC)) IS TRUE)  as count FROM vt2 ORDER BY (((((vt2.lid)) BETWEEN ((vt2.c2)) AND ((vt2.c1)))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM vt2 WHERE (CAST(CASE WHEN vt2.c0 THEN vt2.c3 ELSE vt2.c1 END AS NUMERIC)) ORDER BY (((((vt2.lid)) BETWEEN ((vt2.c2)) AND ((vt2.c1)))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt2.c0 THEN vt2.c3 ELSE vt2.c1 END AS NUMERIC)) IS TRUE)  as count FROM vt2 ORDER BY (((((vt2.lid)) BETWEEN ((vt2.c2)) AND ((vt2.c1)))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM vt2 WHERE (CAST(CASE WHEN vt2.c0 THEN vt2.c3 ELSE vt2.c1 END AS NUMERIC)) ORDER BY (((((vt2.lid)) BETWEEN ((vt2.c2)) AND ((vt2.c1)))) IS TRUE)  NULLS LAST;
SELECT ALL * FROM vt0, vt2 WHERE (((((vt2.c1) NOT BETWEEN (vt2.c2) AND (vt2.c2)))%(((vt2.c1) ISNULL)))) ORDER BY ((vt2.c3 COLLATE RTRIM)<>(CAST(vt2.c3 AS NUMERIC))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt2.c1) NOT BETWEEN (vt2.c2) AND (vt2.c2)))%(((vt2.c1) ISNULL)))) IS TRUE)  as count FROM vt0, vt2 ORDER BY ((vt2.c3 COLLATE RTRIM)!=(CAST(vt2.c3 AS NUMERIC))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt2 WHERE (((((vt2.c1) NOT BETWEEN (vt2.c2) AND (vt2.c2)))%(((vt2.c1) ISNULL)))) ORDER BY ((vt2.c3 COLLATE RTRIM)<>(CAST(vt2.c3 AS NUMERIC))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt2.c1) NOT BETWEEN (vt2.c2) AND (vt2.c2)))%(((vt2.c1) ISNULL)))) IS TRUE)  as count FROM vt0, vt2 ORDER BY ((vt2.c3 COLLATE RTRIM)!=(CAST(vt2.c3 AS NUMERIC))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt2 WHERE (((((vt2.c1) NOT BETWEEN (vt2.c2) AND (vt2.c2)))%(((vt2.c1) ISNULL)))) ORDER BY ((vt2.c3 COLLATE RTRIM)<>(CAST(vt2.c3 AS NUMERIC))) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)))LIKE((v0.c0 IN (v0.c0, x'')))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))LIKE((v0.c0 IN (v0.c0, x''))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)))LIKE((v0.c0 IN (v0.c0, x'')))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))LIKE((v0.c0 IN (v0.c0, x''))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)))LIKE((v0.c0 IN (v0.c0, x'')))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<>(0Xffffffffa27aa2e8)) COLLATE RTRIM) ORDER BY 'n搢7([' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<>(0Xffffffffa27aa2e8)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY 'n搢7([' ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<>(0Xffffffffa27aa2e8)) COLLATE RTRIM) ORDER BY 'n搢7([' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<>(0Xffffffffa27aa2e8)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY 'n搢7([' ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<>(0Xffffffffa27aa2e8)) COLLATE RTRIM) ORDER BY 'n搢7([' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c1)||(t0.c48)) THEN ((t0.c1)&(t0.c17)) ELSE t0.c17 END) ORDER BY (t0.c17 COLLATE BINARY IN ())  NULLS FIRST, ((t0.c48) ISNULL) COLLATE BINARY  NULLS FIRST, CASE (- (t0.c48))  WHEN t0.c0 THEN ((t0.c17)>=(t0.c48)) ELSE ((t0.c48) NOT BETWEEN (t0.c0) AND (t0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c1)||(t0.c48)) THEN ((t0.c1)&(t0.c17)) ELSE t0.c17 END) IS TRUE)  as count FROM t0 ORDER BY (t0.c17 COLLATE BINARY IN ())  NULLS FIRST, ((t0.c48) ISNULL) COLLATE BINARY  NULLS FIRST, CASE (- (t0.c48))  WHEN t0.c0 THEN ((t0.c17)>=(t0.c48)) ELSE ((t0.c48) NOT BETWEEN (t0.c0) AND (t0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c1)||(t0.c48)) THEN ((t0.c1)&(t0.c17)) ELSE t0.c17 END) ORDER BY (t0.c17 COLLATE BINARY IN ())  NULLS FIRST, ((t0.c48) ISNULL) COLLATE BINARY  NULLS FIRST, CASE (- (t0.c48))  WHEN t0.c0 THEN ((t0.c17)>=(t0.c48)) ELSE ((t0.c48) NOT BETWEEN (t0.c0) AND (t0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c1)||(t0.c48)) THEN ((t0.c1)&(t0.c17)) ELSE t0.c17 END) IS TRUE)  as count FROM t0 ORDER BY (t0.c17 COLLATE BINARY IN ())  NULLS FIRST, ((t0.c48) ISNULL) COLLATE BINARY  NULLS FIRST, CASE (- (t0.c48))  WHEN t0.c0 THEN ((t0.c17)>=(t0.c48)) ELSE ((t0.c48) NOT BETWEEN (t0.c0) AND (t0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c1)||(t0.c48)) THEN ((t0.c1)&(t0.c17)) ELSE t0.c17 END) ORDER BY (t0.c17 COLLATE BINARY IN ())  NULLS FIRST, ((t0.c48) ISNULL) COLLATE BINARY  NULLS FIRST, CASE (- (t0.c48))  WHEN t0.c0 THEN ((t0.c17)>=(t0.c48)) ELSE ((t0.c48) NOT BETWEEN (t0.c0) AND (t0.c0)) END  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL COUNT(*) FROM vt2 NATURAL JOIN v0 WHERE (CAST(((((((((NULL)AND(vt2.c2)))AND(vt2.c3)))AND(vt2.lid)))AND(vt2.lid)) AS TEXT)) ORDER BY vt2.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((NULL)AND(vt2.c2)))AND(vt2.c3)))AND(vt2.lid)))AND(vt2.lid)) AS TEXT)) IS TRUE)  as count FROM vt2 NATURAL JOIN v0 ORDER BY vt2.c0);
SELECT ALL COUNT(*) FROM vt2 NATURAL JOIN v0 WHERE (CAST(((((((((NULL)AND(vt2.c2)))AND(vt2.c3)))AND(vt2.lid)))AND(vt2.lid)) AS TEXT)) ORDER BY vt2.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((NULL)AND(vt2.c2)))AND(vt2.c3)))AND(vt2.lid)))AND(vt2.lid)) AS TEXT)) IS TRUE)  as count FROM vt2 NATURAL JOIN v0 ORDER BY vt2.c0);
SELECT ALL COUNT(*) FROM vt2 NATURAL JOIN v0 WHERE (CAST(((((((((NULL)AND(vt2.c2)))AND(vt2.c3)))AND(vt2.lid)))AND(vt2.lid)) AS TEXT)) ORDER BY vt2.c0;
SELECT ALL * FROM vt2, vt0, v0 WHERE ((CASE vt2.lid  WHEN v0.c0 THEN vt2.c1 END IN ())) ORDER BY 0.19868183252471805 COLLATE RTRIM DESC, (~ (((vt2.c3) BETWEEN (vt2.lid) AND (vt2.lid)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt2.lid  WHEN v0.c0 THEN vt2.c1 END IN ())) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY 0.19868183252471805 COLLATE RTRIM DESC, (~ (((vt2.c3) BETWEEN (vt2.lid) AND (vt2.lid)))) ASC  NULLS LAST);
SELECT ALL * FROM vt2, vt0, v0 WHERE ((CASE vt2.lid  WHEN v0.c0 THEN vt2.c1 END IN ())) ORDER BY 0.19868183252471805 COLLATE RTRIM DESC, (~ (((vt2.c3) BETWEEN (vt2.lid) AND (vt2.lid)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt2.lid  WHEN v0.c0 THEN vt2.c1 END IN ())) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY 0.19868183252471805 COLLATE RTRIM DESC, (~ (((vt2.c3) BETWEEN (vt2.lid) AND (vt2.lid)))) ASC  NULLS LAST);
SELECT ALL * FROM vt2, vt0, v0 WHERE ((CASE vt2.lid  WHEN v0.c0 THEN vt2.c1 END IN ())) ORDER BY 0.19868183252471805 COLLATE RTRIM DESC, (~ (((vt2.c3) BETWEEN (vt2.lid) AND (vt2.lid)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt2, v0 WHERE ((v0.c0 IN ())) ORDER BY (((vt2.lid IN (t0.c0))) BETWEEN ((NOT (vt2.c3))) AND ((((t0.c17, vt2.c3, vt2.c2))<((vt2.c3, vt2.c0, x'6ad6'))))) DESC;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM t0, vt2 NOT INDEXED, v0 ORDER BY (((vt2.lid IN (t0.c0))) BETWEEN ((NOT (vt2.c3))) AND ((((t0.c17, vt2.c3, vt2.c2))<((vt2.c3, vt2.c0, x'6ad6'))))) DESC);
SELECT ALL COUNT(*) FROM t0, vt2, v0 WHERE ((v0.c0 IN ())) ORDER BY (((vt2.lid IN (t0.c0))) BETWEEN ((NOT (vt2.c3))) AND ((((t0.c17, vt2.c3, vt2.c2))<((vt2.c3, vt2.c0, x'6ad6'))))) DESC;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM t0, vt2 NOT INDEXED, v0 ORDER BY (((vt2.lid IN (t0.c0))) BETWEEN ((NOT (vt2.c3))) AND ((((t0.c17, vt2.c3, vt2.c2))<((vt2.c3, vt2.c0, x'6ad6'))))) DESC);
SELECT ALL COUNT(*) FROM t0, vt2, v0 WHERE ((v0.c0 IN ())) ORDER BY (((vt2.lid IN (t0.c0))) BETWEEN ((NOT (vt2.c3))) AND ((((t0.c17, vt2.c3, vt2.c2))<((vt2.c3, vt2.c0, x'6ad6'))))) DESC;
SELECT COUNT(*) FROM vt2, v0, vt0, t0 WHERE (((((vt2.c3)AND(vt2.c0)))+(t0.c17)));
SELECT SUM(count) FROM (SELECT ((((((vt2.c3)AND(vt2.c0)))+(t0.c17))) IS TRUE)  as count FROM vt2, v0, vt0, t0);
SELECT COUNT(*) FROM vt2, v0, vt0, t0 WHERE (((((vt2.c3)AND(vt2.c0)))+(t0.c17)));
SELECT SUM(count) FROM (SELECT ((((((vt2.c3)AND(vt2.c0)))+(t0.c17))) IS TRUE)  as count FROM vt2, v0, vt0, t0);
SELECT COUNT(*) FROM vt2, v0, vt0, t0 WHERE (((((vt2.c3)AND(vt2.c0)))+(t0.c17)));
SELECT ALL * FROM t0 WHERE (((CAST(t0.c17 AS REAL)) BETWEEN (CAST(t0.c17 AS BLOB)) AND ((t0.c17 IN (t0.c17, t0.c17)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c17 AS REAL)) BETWEEN (CAST(t0.c17 AS BLOB)) AND ((t0.c17 IN (t0.c17, t0.c17))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c17 AS REAL)) BETWEEN (CAST(t0.c17 AS BLOB)) AND ((t0.c17 IN (t0.c17, t0.c17)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c17 AS REAL)) BETWEEN (CAST(t0.c17 AS BLOB)) AND ((t0.c17 IN (t0.c17, t0.c17))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c17 AS REAL)) BETWEEN (CAST(t0.c17 AS BLOB)) AND ((t0.c17 IN (t0.c17, t0.c17)))));
SELECT COUNT(*) FROM t0 WHERE (TRIM((t0.c48 IN ()))) ORDER BY ((((t0.c48) BETWEEN (t0.c1) AND (t0.c17))) NOT BETWEEN ((t0.c17 IN ())) AND (((t0.c1) BETWEEN (t0.c17) AND (t0.c1)))) ASC  NULLS FIRST, (((t0.c48))>(((NOT (t0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((t0.c48 IN ()))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c48) BETWEEN (t0.c1) AND (t0.c17))) NOT BETWEEN ((t0.c17 IN ())) AND (((t0.c1) BETWEEN (t0.c17) AND (t0.c1)))) ASC  NULLS FIRST, (((t0.c48))>(((NOT (t0.c0))))) ASC);
SELECT COUNT(*) FROM t0 WHERE (TRIM((t0.c48 IN ()))) ORDER BY ((((t0.c48) BETWEEN (t0.c1) AND (t0.c17))) NOT BETWEEN ((t0.c17 IN ())) AND (((t0.c1) BETWEEN (t0.c17) AND (t0.c1)))) ASC  NULLS FIRST, (((t0.c48))>(((NOT (t0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((t0.c48 IN ()))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c48) BETWEEN (t0.c1) AND (t0.c17))) NOT BETWEEN ((t0.c17 IN ())) AND (((t0.c1) BETWEEN (t0.c17) AND (t0.c1)))) ASC  NULLS FIRST, (((t0.c48))>(((NOT (t0.c0))))) ASC);
SELECT COUNT(*) FROM t0 WHERE (TRIM((t0.c48 IN ()))) ORDER BY ((((t0.c48) BETWEEN (t0.c1) AND (t0.c17))) NOT BETWEEN ((t0.c17 IN ())) AND (((t0.c1) BETWEEN (t0.c17) AND (t0.c1)))) ASC  NULLS FIRST, (((t0.c48))>(((NOT (t0.c0))))) ASC;
SELECT ALL COUNT(*) FROM v0, vt0, vt2, t0 WHERE (DATE((0.8489223186848553 IN (0x11827143)), (vt2.lid IN (vt0.c0)), UNLIKELY(vt2.c3)));
SELECT SUM(count) FROM (SELECT ALL ((DATE((0.8489223186848553 IN (0x11827143)), (vt2.lid IN (vt0.c0)), UNLIKELY(vt2.c3))) IS TRUE)  as count FROM v0, vt0, vt2, t0);
SELECT ALL COUNT(*) FROM v0, vt0, vt2, t0 WHERE (DATE((0.8489223186848553 IN (0x11827143)), (vt2.lid IN (vt0.c0)), UNLIKELY(vt2.c3)));
SELECT SUM(count) FROM (SELECT ALL ((DATE((0.8489223186848553 IN (0x11827143)), (vt2.lid IN (vt0.c0)), UNLIKELY(vt2.c3))) IS TRUE)  as count FROM v0, vt0, vt2, t0);
SELECT ALL COUNT(*) FROM v0, vt0, vt2, t0 WHERE (DATE((0.8489223186848553 IN (0x11827143)), (vt2.lid IN (vt0.c0)), UNLIKELY(vt2.c3)));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY CAST((vt0.c0 IN (vt0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN (vt0.c0)) AS REAL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY CAST((vt0.c0 IN (vt0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN (vt0.c0)) AS REAL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY CAST((vt0.c0 IN (vt0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (CASE IFNULL(DISTINCT t0.c48, vt0.c0)  WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) NOT BETWEEN (t0.c17) AND (vt0.c0)) WHEN ((t0.c1) NOT BETWEEN (vt0.c0) AND ('2008916440')) THEN NULL WHEN CASE t0.c1  WHEN t0.c1 THEN t0.c0 END THEN (t0.c48 IN ()) END) ORDER BY (NOT (CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((CASE IFNULL(DISTINCT t0.c48, vt0.c0)  WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) NOT BETWEEN (t0.c17) AND (vt0.c0)) WHEN ((t0.c1) NOT BETWEEN (vt0.c0) AND ('2008916440')) THEN NULL WHEN CASE t0.c1  WHEN t0.c1 THEN t0.c0 END THEN (t0.c48 IN ()) END) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (CAST(vt0.c0 AS INTEGER))));
SELECT * FROM t0, vt0 WHERE (CASE IFNULL(DISTINCT t0.c48, vt0.c0)  WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) NOT BETWEEN (t0.c17) AND (vt0.c0)) WHEN ((t0.c1) NOT BETWEEN (vt0.c0) AND ('2008916440')) THEN NULL WHEN CASE t0.c1  WHEN t0.c1 THEN t0.c0 END THEN (t0.c48 IN ()) END) ORDER BY (NOT (CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((CASE IFNULL(DISTINCT t0.c48, vt0.c0)  WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) NOT BETWEEN (t0.c17) AND (vt0.c0)) WHEN ((t0.c1) NOT BETWEEN (vt0.c0) AND ('2008916440')) THEN NULL WHEN CASE t0.c1  WHEN t0.c1 THEN t0.c0 END THEN (t0.c48 IN ()) END) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (CAST(vt0.c0 AS INTEGER))));
SELECT * FROM t0, vt0 WHERE (CASE IFNULL(DISTINCT t0.c48, vt0.c0)  WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) NOT BETWEEN (t0.c17) AND (vt0.c0)) WHEN ((t0.c1) NOT BETWEEN (vt0.c0) AND ('2008916440')) THEN NULL WHEN CASE t0.c1  WHEN t0.c1 THEN t0.c0 END THEN (t0.c48 IN ()) END) ORDER BY (NOT (CAST(vt0.c0 AS INTEGER)));
SELECT * FROM vt0, v0 RIGHT OUTER JOIN vt2 ON ((((vt2.lid) IS FALSE))>=(CAST(vt2.c0 AS INTEGER))) LEFT OUTER JOIN t0 ON ((vt2.c3 COLLATE NOCASE)<>(CAST(t0.c0 AS BLOB))) WHERE (CASE ((v0.c0)*(t0.c17))  WHEN (((vt2.lid))>=((v0.c0))) THEN '-2087827122' END) ORDER BY CASE WHEN (+ (t0.c0)) THEN (vt2.lid IN ()) WHEN ((vt2.c0)&('1710724494')) THEN 0xa286c6b WHEN 1191785581 THEN ((t0.c48)<=(t0.c48)) END  NULLS FIRST, ((t0.c48 COLLATE BINARY)IS(((vt2.lid)AND(t0.c17)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)*(t0.c17))  WHEN (((vt2.lid))>=((v0.c0))) THEN '-2087827122' END) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN vt2 ON ((((vt2.lid) IS FALSE))>=(CAST(vt2.c0 AS INTEGER))) LEFT OUTER JOIN t0 ON ((vt2.c3 COLLATE NOCASE)!=(CAST(t0.c0 AS BLOB))) ORDER BY CASE WHEN (+ (t0.c0)) THEN (vt2.lid IN ()) WHEN ((vt2.c0)&('1710724494')) THEN 0xa286c6b WHEN 1191785581 THEN ((t0.c48)<=(t0.c48)) END  NULLS FIRST, ((t0.c48 COLLATE BINARY)IS(((vt2.lid)AND(t0.c17)))) DESC);
SELECT * FROM vt0, v0 RIGHT OUTER JOIN vt2 ON ((((vt2.lid) IS FALSE))>=(CAST(vt2.c0 AS INTEGER))) LEFT OUTER JOIN t0 ON ((vt2.c3 COLLATE NOCASE)<>(CAST(t0.c0 AS BLOB))) WHERE (CASE ((v0.c0)*(t0.c17))  WHEN (((vt2.lid))>=((v0.c0))) THEN '-2087827122' END) ORDER BY CASE WHEN (+ (t0.c0)) THEN (vt2.lid IN ()) WHEN ((vt2.c0)&('1710724494')) THEN 0xa286c6b WHEN 1191785581 THEN ((t0.c48)<=(t0.c48)) END  NULLS FIRST, ((t0.c48 COLLATE BINARY)IS(((vt2.lid)AND(t0.c17)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)*(t0.c17))  WHEN (((vt2.lid))>=((v0.c0))) THEN '-2087827122' END) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN vt2 ON ((((vt2.lid) IS FALSE))>=(CAST(vt2.c0 AS INTEGER))) LEFT OUTER JOIN t0 ON ((vt2.c3 COLLATE NOCASE)!=(CAST(t0.c0 AS BLOB))) ORDER BY CASE WHEN (+ (t0.c0)) THEN (vt2.lid IN ()) WHEN ((vt2.c0)&('1710724494')) THEN 0xa286c6b WHEN 1191785581 THEN ((t0.c48)<=(t0.c48)) END  NULLS FIRST, ((t0.c48 COLLATE BINARY)IS(((vt2.lid)AND(t0.c17)))) DESC);
SELECT * FROM vt0, v0 RIGHT OUTER JOIN vt2 ON ((((vt2.lid) IS FALSE))>=(CAST(vt2.c0 AS INTEGER))) LEFT OUTER JOIN t0 ON ((vt2.c3 COLLATE NOCASE)<>(CAST(t0.c0 AS BLOB))) WHERE (CASE ((v0.c0)*(t0.c17))  WHEN (((vt2.lid))>=((v0.c0))) THEN '-2087827122' END) ORDER BY CASE WHEN (+ (t0.c0)) THEN (vt2.lid IN ()) WHEN ((vt2.c0)&('1710724494')) THEN 0xa286c6b WHEN 1191785581 THEN ((t0.c48)<=(t0.c48)) END  NULLS FIRST, ((t0.c48 COLLATE BINARY)IS(((vt2.lid)AND(t0.c17)))) DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c48) NOT NULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c48) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c48) NOT NULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c48) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c48) NOT NULL) AS INTEGER));
SELECT COUNT(*) FROM vt2, t0 WHERE ((((t0.c0)) NOT BETWEEN (((((vt2.lid))!=((t0.c17))))) AND ((t0.c48))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN (((((vt2.lid))<>((t0.c17))))) AND ((t0.c48)))) IS TRUE)  as count FROM vt2, t0);
SELECT COUNT(*) FROM vt2, t0 WHERE ((((t0.c0)) NOT BETWEEN (((((vt2.lid))!=((t0.c17))))) AND ((t0.c48))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN (((((vt2.lid))<>((t0.c17))))) AND ((t0.c48)))) IS TRUE)  as count FROM vt2, t0);
SELECT COUNT(*) FROM vt2, t0 WHERE ((((t0.c0)) NOT BETWEEN (((((vt2.lid))!=((t0.c17))))) AND ((t0.c48))));
SELECT ALL * FROM t0 WHERE (((((('738533503')&(t0.c48)), ((t0.c0)||(t0.c1)), COALESCE(DISTINCT t0.c48, t0.c48)))>(((NOT (t0.c17)), ((t0.c48) BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c17)OR(t0.c48)))AND(t0.c48)))))) ORDER BY IFNULL(DISTINCT t0.c0, t0.c0) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((('738533503')&(t0.c48)), ((t0.c0)||(t0.c1)), COALESCE(DISTINCT t0.c48, t0.c48)))>(((NOT (t0.c17)), ((t0.c48) BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c17)OR(t0.c48)))AND(t0.c48)))))) IS TRUE)  as count FROM t0 ORDER BY IFNULL(DISTINCT t0.c0, t0.c0) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((('738533503')&(t0.c48)), ((t0.c0)||(t0.c1)), COALESCE(DISTINCT t0.c48, t0.c48)))>(((NOT (t0.c17)), ((t0.c48) BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c17)OR(t0.c48)))AND(t0.c48)))))) ORDER BY IFNULL(DISTINCT t0.c0, t0.c0) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((('738533503')&(t0.c48)), ((t0.c0)||(t0.c1)), COALESCE(DISTINCT t0.c48, t0.c48)))>(((NOT (t0.c17)), ((t0.c48) BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c17)OR(t0.c48)))AND(t0.c48)))))) IS TRUE)  as count FROM t0 ORDER BY IFNULL(DISTINCT t0.c0, t0.c0) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((('738533503')&(t0.c48)), ((t0.c0)||(t0.c1)), COALESCE(DISTINCT t0.c48, t0.c48)))>(((NOT (t0.c17)), ((t0.c48) BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c17)OR(t0.c48)))AND(t0.c48)))))) ORDER BY IFNULL(DISTINCT t0.c0, t0.c0) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE (((((CAST(vt2.c0 AS TEXT))OR(x'')))OR((+ (vt0.c0))))) ORDER BY ((((((vt2.lid)OR(v0.c0)))OR(vt2.lid)))IS NOT((((vt2.c1, vt2.c1, vt2.c2))>=((v0.c0, vt2.c3, vt2.c3)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt2.c0 AS TEXT))OR(x'')))OR((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY ((((((vt2.lid)OR(v0.c0)))OR(vt2.lid)))IS NOT((((vt2.c1, vt2.c1, vt2.c2))>=((v0.c0, vt2.c3, vt2.c3))))));
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE (((((CAST(vt2.c0 AS TEXT))OR(x'')))OR((+ (vt0.c0))))) ORDER BY ((((((vt2.lid)OR(v0.c0)))OR(vt2.lid)))IS NOT((((vt2.c1, vt2.c1, vt2.c2))>=((v0.c0, vt2.c3, vt2.c3)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt2.c0 AS TEXT))OR(x'')))OR((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY ((((((vt2.lid)OR(v0.c0)))OR(vt2.lid)))IS NOT((((vt2.c1, vt2.c1, vt2.c2))>=((v0.c0, vt2.c3, vt2.c3))))));
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE (((((CAST(vt2.c0 AS TEXT))OR(x'')))OR((+ (vt0.c0))))) ORDER BY ((((((vt2.lid)OR(v0.c0)))OR(vt2.lid)))IS NOT((((vt2.c1, vt2.c1, vt2.c2))>=((v0.c0, vt2.c3, vt2.c3)))));
SELECT * FROM v0, vt0, vt2, t0 WHERE ((((((((t0.c0))<>((vt0.c0))))OR(((vt2.lid) NOT BETWEEN (NULL) AND (t0.c48)))))OR((((t0.c1, v0.c0, vt2.lid, t0.c48, t0.c17))==((t0.c1, vt2.c1, vt0.c0, t0.c1, vt2.lid)))))) ORDER BY (t0.c48 IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c0))!=((vt0.c0))))OR(((vt2.lid) NOT BETWEEN (NULL) AND (t0.c48)))))OR((((t0.c1, v0.c0, vt2.lid, t0.c48, t0.c17))=((t0.c1, vt2.c1, vt0.c0, t0.c1, vt2.lid)))))) IS TRUE)  as count FROM v0, vt0, vt2, t0 ORDER BY (t0.c48 IN ()));
SELECT * FROM v0, vt0, vt2, t0 WHERE ((((((((t0.c0))<>((vt0.c0))))OR(((vt2.lid) NOT BETWEEN (NULL) AND (t0.c48)))))OR((((t0.c1, v0.c0, vt2.lid, t0.c48, t0.c17))==((t0.c1, vt2.c1, vt0.c0, t0.c1, vt2.lid)))))) ORDER BY (t0.c48 IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c0))!=((vt0.c0))))OR(((vt2.lid) NOT BETWEEN (NULL) AND (t0.c48)))))OR((((t0.c1, v0.c0, vt2.lid, t0.c48, t0.c17))=((t0.c1, vt2.c1, vt0.c0, t0.c1, vt2.lid)))))) IS TRUE)  as count FROM v0, vt0, vt2, t0 ORDER BY (t0.c48 IN ()));
SELECT * FROM v0, vt0, vt2, t0 WHERE ((((((((t0.c0))<>((vt0.c0))))OR(((vt2.lid) NOT BETWEEN (NULL) AND (t0.c48)))))OR((((t0.c1, v0.c0, vt2.lid, t0.c48, t0.c17))==((t0.c1, vt2.c1, vt0.c0, t0.c1, vt2.lid)))))) ORDER BY (t0.c48 IN ());
SELECT * FROM v0, vt0 WHERE (((v0.c0)/(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)/(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((v0.c0)/(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)/(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((v0.c0)/(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT ALL * FROM v0, vt0 CROSS JOIN t0 ON CAST(LOWER(t0.c1) AS NUMERIC) WHERE (((CAST('' AS NUMERIC)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('' AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM v0, vt0 CROSS JOIN t0 ON CAST(LOWER(t0.c1) AS NUMERIC));
SELECT ALL * FROM v0, vt0 CROSS JOIN t0 ON CAST(LOWER(t0.c1) AS NUMERIC) WHERE (((CAST('' AS NUMERIC)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('' AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM v0, vt0 CROSS JOIN t0 ON CAST(LOWER(t0.c1) AS NUMERIC));
SELECT ALL * FROM v0, vt0 CROSS JOIN t0 ON CAST(LOWER(t0.c1) AS NUMERIC) WHERE (((CAST('' AS NUMERIC)) NOTNULL));
SELECT ALL COUNT(*) FROM vt2, v0 WHERE ((v0.c0 IN (vt2.c1)) COLLATE RTRIM) ORDER BY CAST(TIME(vt2.c0, vt2.c1, vt2.c0) AS REAL) DESC, x'' ASC;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN (vt2.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt2 NOT INDEXED, v0 ORDER BY CAST(TIME(vt2.c0, vt2.c1, vt2.c0) AS REAL) DESC, x'' ASC);
SELECT ALL COUNT(*) FROM vt2, v0 WHERE ((v0.c0 IN (vt2.c1)) COLLATE RTRIM) ORDER BY CAST(TIME(vt2.c0, vt2.c1, vt2.c0) AS REAL) DESC, x'' ASC;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN (vt2.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt2 NOT INDEXED, v0 ORDER BY CAST(TIME(vt2.c0, vt2.c1, vt2.c0) AS REAL) DESC, x'' ASC);
SELECT ALL COUNT(*) FROM vt2, v0 WHERE ((v0.c0 IN (vt2.c1)) COLLATE RTRIM) ORDER BY CAST(TIME(vt2.c0, vt2.c1, vt2.c0) AS REAL) DESC, x'' ASC;
SELECT ALL * FROM t0 WHERE (']m');
SELECT SUM(count) FROM (SELECT ALL ((']m') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (']m');
SELECT SUM(count) FROM (SELECT ALL ((']m') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (']m');
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)&(vt0.c0))) BETWEEN ((+ (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c0))) BETWEEN ((+ (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)&(vt0.c0))) BETWEEN ((+ (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c0))) BETWEEN ((+ (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)&(vt0.c0))) BETWEEN ((+ (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt2 WHERE (((((CAST(vt2.c2 AS BLOB))AND(((vt2.c3) BETWEEN (vt2.c2) AND (0.05223440508398425)))))OR(vt2.c0 COLLATE NOCASE))) ORDER BY ((MIN(vt2.c2, vt2.c1))|(((((((((vt2.c3)OR(vt2.c3)))AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt2.c2 AS BLOB))AND(((vt2.c3) BETWEEN (vt2.c2) AND (0.05223440508398425)))))OR(vt2.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt2 ORDER BY ((MIN(vt2.c2, vt2.c1))|(((((((((vt2.c3)OR(vt2.c3)))AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2 WHERE (((((CAST(vt2.c2 AS BLOB))AND(((vt2.c3) BETWEEN (vt2.c2) AND (0.05223440508398425)))))OR(vt2.c0 COLLATE NOCASE))) ORDER BY ((MIN(vt2.c2, vt2.c1))|(((((((((vt2.c3)OR(vt2.c3)))AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt2.c2 AS BLOB))AND(((vt2.c3) BETWEEN (vt2.c2) AND (0.05223440508398425)))))OR(vt2.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt2 ORDER BY ((MIN(vt2.c2, vt2.c1))|(((((((((vt2.c3)OR(vt2.c3)))AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2 WHERE (((((CAST(vt2.c2 AS BLOB))AND(((vt2.c3) BETWEEN (vt2.c2) AND (0.05223440508398425)))))OR(vt2.c0 COLLATE NOCASE))) ORDER BY ((MIN(vt2.c2, vt2.c1))|(((((((((vt2.c3)OR(vt2.c3)))AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt2, t0 RIGHT OUTER JOIN vt0 ON (t0.c1 COLLATE NOCASE IN ()) FULL OUTER JOIN v0 ON CASE ((vt2.c3)<<(vt0.c0))  WHEN t0.c17 THEN CASE NULL  WHEN vt2.c1 THEN t0.c0 ELSE 0.26591881766940073 END ELSE vt2.c1 COLLATE NOCASE END WHERE (vt2.lid COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt2.lid COLLATE RTRIM) IS TRUE)  as count FROM vt2, t0 RIGHT OUTER JOIN vt0 ON (t0.c1 COLLATE NOCASE IN ()) FULL OUTER JOIN v0 ON CASE ((vt2.c3)<<(vt0.c0))  WHEN t0.c17 THEN CASE NULL  WHEN vt2.c1 THEN t0.c0 ELSE 0.26591881766940073 END ELSE vt2.c1 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM vt2, t0 RIGHT OUTER JOIN vt0 ON (t0.c1 COLLATE NOCASE IN ()) FULL OUTER JOIN v0 ON CASE ((vt2.c3)<<(vt0.c0))  WHEN t0.c17 THEN CASE NULL  WHEN vt2.c1 THEN t0.c0 ELSE 0.26591881766940073 END ELSE vt2.c1 COLLATE NOCASE END WHERE (vt2.lid COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt2.lid COLLATE RTRIM) IS TRUE)  as count FROM vt2, t0 RIGHT OUTER JOIN vt0 ON (t0.c1 COLLATE NOCASE IN ()) FULL OUTER JOIN v0 ON CASE ((vt2.c3)<<(vt0.c0))  WHEN t0.c17 THEN CASE NULL  WHEN vt2.c1 THEN t0.c0 ELSE 0.26591881766940073 END ELSE vt2.c1 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM vt2, t0 RIGHT OUTER JOIN vt0 ON (t0.c1 COLLATE NOCASE IN ()) FULL OUTER JOIN v0 ON CASE ((vt2.c3)<<(vt0.c0))  WHEN t0.c17 THEN CASE NULL  WHEN vt2.c1 THEN t0.c0 ELSE 0.26591881766940073 END ELSE vt2.c1 COLLATE NOCASE END WHERE (vt2.lid COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt2 WHERE (((((vt2.c3) NOT BETWEEN (vt2.c2) AND (vt2.c1)))OR(((vt2.c2) NOTNULL)))) ORDER BY (((CAST(vt2.c2 AS NUMERIC)))>=((x'8597')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt2.c3) NOT BETWEEN (vt2.c2) AND (vt2.c1)))OR(((vt2.c2) NOTNULL)))) IS TRUE)  as count FROM vt2 ORDER BY (((CAST(vt2.c2 AS NUMERIC)))>=((x'8597')))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2 WHERE (((((vt2.c3) NOT BETWEEN (vt2.c2) AND (vt2.c1)))OR(((vt2.c2) NOTNULL)))) ORDER BY (((CAST(vt2.c2 AS NUMERIC)))>=((x'8597')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt2.c3) NOT BETWEEN (vt2.c2) AND (vt2.c1)))OR(((vt2.c2) NOTNULL)))) IS TRUE)  as count FROM vt2 ORDER BY (((CAST(vt2.c2 AS NUMERIC)))>=((x'8597')))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2 WHERE (((((vt2.c3) NOT BETWEEN (vt2.c2) AND (vt2.c1)))OR(((vt2.c2) NOTNULL)))) ORDER BY (((CAST(vt2.c2 AS NUMERIC)))>=((x'8597')))  NULLS FIRST;
SELECT * FROM vt2, t0 WHERE (CASE (NOT (x''))  WHEN CASE t0.c17  WHEN vt2.c1 THEN vt2.lid WHEN vt2.lid THEN vt2.lid WHEN '-18423274' THEN vt2.c3 WHEN t0.c48 THEN t0.c0 WHEN 'jo' THEN vt2.lid ELSE t0.c48 END THEN (('1696732331') IS FALSE) WHEN (~ (t0.c0)) THEN (NOT (vt2.c2)) WHEN CAST(vt2.c1 AS NUMERIC) THEN CASE t0.c1  WHEN t0.c1 THEN t0.c48 WHEN t0.c0 THEN t0.c17 WHEN t0.c48 THEN vt2.c2 WHEN t0.c1 THEN vt2.c0 WHEN vt2.c0 THEN vt2.lid END END) ORDER BY ABS(((vt2.c0) NOT BETWEEN (t0.c48) AND (t0.c48))) ASC, ((((vt2.c1) BETWEEN (vt2.c3) AND (vt2.c2)))|((~ (vt2.c0))))  NULLS LAST, x'';
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (x''))  WHEN CASE t0.c17  WHEN vt2.c1 THEN vt2.lid WHEN vt2.lid THEN vt2.lid WHEN '-18423274' THEN vt2.c3 WHEN t0.c48 THEN t0.c0 WHEN 'jo' THEN vt2.lid ELSE t0.c48 END THEN (('1696732331') IS FALSE) WHEN (~ (t0.c0)) THEN (NOT (vt2.c2)) WHEN CAST(vt2.c1 AS NUMERIC) THEN CASE t0.c1  WHEN t0.c1 THEN t0.c48 WHEN t0.c0 THEN t0.c17 WHEN t0.c48 THEN vt2.c2 WHEN t0.c1 THEN vt2.c0 WHEN vt2.c0 THEN vt2.lid END END) IS TRUE)  as count FROM vt2, t0 ORDER BY ABS(((vt2.c0) NOT BETWEEN (t0.c48) AND (t0.c48))) ASC, ((((vt2.c1) BETWEEN (vt2.c3) AND (vt2.c2)))|((~ (vt2.c0))))  NULLS LAST, x'');
SELECT * FROM vt2, t0 WHERE (CASE (NOT (x''))  WHEN CASE t0.c17  WHEN vt2.c1 THEN vt2.lid WHEN vt2.lid THEN vt2.lid WHEN '-18423274' THEN vt2.c3 WHEN t0.c48 THEN t0.c0 WHEN 'jo' THEN vt2.lid ELSE t0.c48 END THEN (('1696732331') IS FALSE) WHEN (~ (t0.c0)) THEN (NOT (vt2.c2)) WHEN CAST(vt2.c1 AS NUMERIC) THEN CASE t0.c1  WHEN t0.c1 THEN t0.c48 WHEN t0.c0 THEN t0.c17 WHEN t0.c48 THEN vt2.c2 WHEN t0.c1 THEN vt2.c0 WHEN vt2.c0 THEN vt2.lid END END) ORDER BY ABS(((vt2.c0) NOT BETWEEN (t0.c48) AND (t0.c48))) ASC, ((((vt2.c1) BETWEEN (vt2.c3) AND (vt2.c2)))|((~ (vt2.c0))))  NULLS LAST, x'';
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (x''))  WHEN CASE t0.c17  WHEN vt2.c1 THEN vt2.lid WHEN vt2.lid THEN vt2.lid WHEN '-18423274' THEN vt2.c3 WHEN t0.c48 THEN t0.c0 WHEN 'jo' THEN vt2.lid ELSE t0.c48 END THEN (('1696732331') IS FALSE) WHEN (~ (t0.c0)) THEN (NOT (vt2.c2)) WHEN CAST(vt2.c1 AS NUMERIC) THEN CASE t0.c1  WHEN t0.c1 THEN t0.c48 WHEN t0.c0 THEN t0.c17 WHEN t0.c48 THEN vt2.c2 WHEN t0.c1 THEN vt2.c0 WHEN vt2.c0 THEN vt2.lid END END) IS TRUE)  as count FROM vt2, t0 ORDER BY ABS(((vt2.c0) NOT BETWEEN (t0.c48) AND (t0.c48))) ASC, ((((vt2.c1) BETWEEN (vt2.c3) AND (vt2.c2)))|((~ (vt2.c0))))  NULLS LAST, x'');
SELECT * FROM vt2, t0 WHERE (CASE (NOT (x''))  WHEN CASE t0.c17  WHEN vt2.c1 THEN vt2.lid WHEN vt2.lid THEN vt2.lid WHEN '-18423274' THEN vt2.c3 WHEN t0.c48 THEN t0.c0 WHEN 'jo' THEN vt2.lid ELSE t0.c48 END THEN (('1696732331') IS FALSE) WHEN (~ (t0.c0)) THEN (NOT (vt2.c2)) WHEN CAST(vt2.c1 AS NUMERIC) THEN CASE t0.c1  WHEN t0.c1 THEN t0.c48 WHEN t0.c0 THEN t0.c17 WHEN t0.c48 THEN vt2.c2 WHEN t0.c1 THEN vt2.c0 WHEN vt2.c0 THEN vt2.lid END END) ORDER BY ABS(((vt2.c0) NOT BETWEEN (t0.c48) AND (t0.c48))) ASC, ((((vt2.c1) BETWEEN (vt2.c3) AND (vt2.c2)))|((~ (vt2.c0))))  NULLS LAST, x'';
SELECT COUNT(*) FROM vt0 INNER JOIN vt2 ON '\ni{,~RQ' WHERE (LIKELY((((vt0.c0, vt0.c0, vt2.c3)) NOT BETWEEN ((vt2.c1, vt0.c0, vt0.c0)) AND ((vt2.lid, vt2.c2, vt2.c2)))));
SELECT SUM(count) FROM (SELECT ((LIKELY((((vt0.c0, vt0.c0, vt2.c3)) NOT BETWEEN ((vt2.c1, vt0.c0, vt0.c0)) AND ((vt2.lid, vt2.c2, vt2.c2))))) IS TRUE)  as count FROM vt0 INNER JOIN vt2 ON '\ni{,~RQ');
SELECT COUNT(*) FROM vt0 INNER JOIN vt2 ON '\ni{,~RQ' WHERE (LIKELY((((vt0.c0, vt0.c0, vt2.c3)) NOT BETWEEN ((vt2.c1, vt0.c0, vt0.c0)) AND ((vt2.lid, vt2.c2, vt2.c2)))));
SELECT SUM(count) FROM (SELECT ((LIKELY((((vt0.c0, vt0.c0, vt2.c3)) NOT BETWEEN ((vt2.c1, vt0.c0, vt0.c0)) AND ((vt2.lid, vt2.c2, vt2.c2))))) IS TRUE)  as count FROM vt0 INNER JOIN vt2 ON '\ni{,~RQ');
SELECT COUNT(*) FROM vt0 INNER JOIN vt2 ON '\ni{,~RQ' WHERE (LIKELY((((vt0.c0, vt0.c0, vt2.c3)) NOT BETWEEN ((vt2.c1, vt0.c0, vt0.c0)) AND ((vt2.lid, vt2.c2, vt2.c2)))));
SELECT * FROM vt0, vt2, v0, t0 WHERE ((((t0.c48)) NOT BETWEEN (('贫j')) AND ((t0.c17)))) ORDER BY ((((TRIM(vt2.c3, vt2.c3))AND(DATETIME(vt2.lid, t0.c1, vt2.c2))))OR((+ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c48)) NOT BETWEEN (('贫j')) AND ((t0.c17)))) IS TRUE)  as count FROM vt0, vt2, v0, t0 ORDER BY ((((TRIM(vt2.c3, vt2.c3))AND(DATETIME(vt2.lid, t0.c1, vt2.c2))))OR((+ (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, vt2, v0, t0 WHERE ((((t0.c48)) NOT BETWEEN (('贫j')) AND ((t0.c17)))) ORDER BY ((((TRIM(vt2.c3, vt2.c3))AND(DATETIME(vt2.lid, t0.c1, vt2.c2))))OR((+ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c48)) NOT BETWEEN (('贫j')) AND ((t0.c17)))) IS TRUE)  as count FROM vt0, vt2, v0, t0 ORDER BY ((((TRIM(vt2.c3, vt2.c3))AND(DATETIME(vt2.lid, t0.c1, vt2.c2))))OR((+ (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, vt2, v0, t0 WHERE ((((t0.c48)) NOT BETWEEN (('贫j')) AND ((t0.c17)))) ORDER BY ((((TRIM(vt2.c3, vt2.c3))AND(DATETIME(vt2.lid, t0.c1, vt2.c2))))OR((+ (vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN v0 ON CASE ((((((((vt0.c0)OR(t0.c48)))OR(v0.c0)))AND(x'')))OR(t0.c0))  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN CASE WHEN t0.c48 THEN t0.c0 END END WHERE ((((t0.c17))>((((t0.c48)|(t0.c17)))))) ORDER BY UNICODE(((vt0.c0)>=(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c17))>((((t0.c48)|(t0.c17)))))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN v0 ON CASE ((((((((vt0.c0)OR(t0.c48)))OR(v0.c0)))AND(x'')))OR(t0.c0))  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN CASE WHEN t0.c48 THEN t0.c0 END END ORDER BY UNICODE(((vt0.c0)>=(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN v0 ON CASE ((((((((vt0.c0)OR(t0.c48)))OR(v0.c0)))AND(x'')))OR(t0.c0))  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN CASE WHEN t0.c48 THEN t0.c0 END END WHERE ((((t0.c17))>((((t0.c48)|(t0.c17)))))) ORDER BY UNICODE(((vt0.c0)>=(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c17))>((((t0.c48)|(t0.c17)))))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN v0 ON CASE ((((((((vt0.c0)OR(t0.c48)))OR(v0.c0)))AND(x'')))OR(t0.c0))  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN CASE WHEN t0.c48 THEN t0.c0 END END ORDER BY UNICODE(((vt0.c0)>=(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN v0 ON CASE ((((((((vt0.c0)OR(t0.c48)))OR(v0.c0)))AND(x'')))OR(t0.c0))  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN CASE WHEN t0.c48 THEN t0.c0 END END WHERE ((((t0.c17))>((((t0.c48)|(t0.c17)))))) ORDER BY UNICODE(((vt0.c0)>=(vt0.c0))) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (((IFNULL(469666108, '841583627'))>>(((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(469666108, '841583627'))>>(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((IFNULL(469666108, '841583627'))>>(((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(469666108, '841583627'))>>(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((IFNULL(469666108, '841583627'))>>(((v0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN CASE WHEN t0.c48 THEN t0.c48 END THEN t0.c0 END) ORDER BY t0.c17 DESC  NULLS LAST, ((((t0.c1)AND(t0.c1))) NOT BETWEEN ((((t0.c48))!=((0.20468192185554013)))) AND ((NOT (t0.c48))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN t0.c48 THEN t0.c48 END THEN t0.c0 END) IS TRUE)  as count FROM t0 ORDER BY t0.c17 DESC  NULLS LAST, ((((t0.c1)AND(t0.c1))) NOT BETWEEN ((((t0.c48))!=((0.20468192185554013)))) AND ((NOT (t0.c48)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN CASE WHEN t0.c48 THEN t0.c48 END THEN t0.c0 END) ORDER BY t0.c17 DESC  NULLS LAST, ((((t0.c1)AND(t0.c1))) NOT BETWEEN ((((t0.c48))!=((0.20468192185554013)))) AND ((NOT (t0.c48))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN t0.c48 THEN t0.c48 END THEN t0.c0 END) IS TRUE)  as count FROM t0 ORDER BY t0.c17 DESC  NULLS LAST, ((((t0.c1)AND(t0.c1))) NOT BETWEEN ((((t0.c48))!=((0.20468192185554013)))) AND ((NOT (t0.c48)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN CASE WHEN t0.c48 THEN t0.c48 END THEN t0.c0 END) ORDER BY t0.c17 DESC  NULLS LAST, ((((t0.c1)AND(t0.c1))) NOT BETWEEN ((((t0.c48))!=((0.20468192185554013)))) AND ((NOT (t0.c48))));
SELECT ALL COUNT(*) FROM vt2 WHERE (COALESCE((1.710724494E9 IN (vt2.c2)), ((vt2.c0)+(vt2.c2))));
SELECT SUM(count) FROM (SELECT ((COALESCE((1.710724494E9 IN (vt2.c2)), ((vt2.c0)+(vt2.c2)))) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (COALESCE((1.710724494E9 IN (vt2.c2)), ((vt2.c0)+(vt2.c2))));
SELECT SUM(count) FROM (SELECT ((COALESCE((1.710724494E9 IN (vt2.c2)), ((vt2.c0)+(vt2.c2)))) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (COALESCE((1.710724494E9 IN (vt2.c2)), ((vt2.c0)+(vt2.c2))));
SELECT * FROM v0 WHERE ((NOT ((((('1196914481')OR(v0.c0)))AND(v0.c0))))) ORDER BY (((('1814082949')%(v0.c0)))/(((v0.c0) BETWEEN (-1.353806366E9) AND (v0.c0)))) DESC  NULLS LAST, DATETIME(CAST(NULL AS REAL), CASE WHEN v0.c0 THEN v0.c0 END, -1060863205, (v0.c0 IN ()), (- (NULL))), NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((('1196914481')OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((('1814082949')%(v0.c0)))/(((v0.c0) BETWEEN (-1.353806366E9) AND (v0.c0)))) DESC  NULLS LAST, DATETIME(CAST(NULL AS REAL), CASE WHEN v0.c0 THEN v0.c0 END, -1060863205, (v0.c0 IN ()), (- (NULL))), NULL  NULLS FIRST);
SELECT * FROM v0 WHERE ((NOT ((((('1196914481')OR(v0.c0)))AND(v0.c0))))) ORDER BY (((('1814082949')%(v0.c0)))/(((v0.c0) BETWEEN (-1.353806366E9) AND (v0.c0)))) DESC  NULLS LAST, DATETIME(CAST(NULL AS REAL), CASE WHEN v0.c0 THEN v0.c0 END, -1060863205, (v0.c0 IN ()), (- (NULL))), NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((('1196914481')OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((('1814082949')%(v0.c0)))/(((v0.c0) BETWEEN (-1.353806366E9) AND (v0.c0)))) DESC  NULLS LAST, DATETIME(CAST(NULL AS REAL), CASE WHEN v0.c0 THEN v0.c0 END, -1060863205, (v0.c0 IN ()), (- (NULL))), NULL  NULLS FIRST);
SELECT * FROM v0 WHERE ((NOT ((((('1196914481')OR(v0.c0)))AND(v0.c0))))) ORDER BY (((('1814082949')%(v0.c0)))/(((v0.c0) BETWEEN (-1.353806366E9) AND (v0.c0)))) DESC  NULLS LAST, DATETIME(CAST(NULL AS REAL), CASE WHEN v0.c0 THEN v0.c0 END, -1060863205, (v0.c0 IN ()), (- (NULL))), NULL  NULLS FIRST;
SELECT COUNT(*) FROM vt2, t0 LEFT OUTER JOIN vt0 ON ((((vt2.c1 COLLATE BINARY)OR((vt2.c3 IN (vt2.c1)))))OR(t0.c48)) WHERE (((('*eirw_1')) BETWEEN (((t0.c48 IN (vt2.c2)))) AND ((CASE vt2.lid  WHEN vt2.lid THEN vt2.lid WHEN vt2.lid THEN vt2.c2 WHEN vt2.c3 THEN vt2.c2 END))));
SELECT SUM(count) FROM (SELECT ((((('*eirw_1')) BETWEEN (((t0.c48 IN (vt2.c2)))) AND ((CASE vt2.lid  WHEN vt2.lid THEN vt2.lid WHEN vt2.lid THEN vt2.c2 WHEN vt2.c3 THEN vt2.c2 END)))) IS TRUE)  as count FROM vt2, t0 LEFT OUTER JOIN vt0 ON ((((vt2.c1 COLLATE BINARY)OR((vt2.c3 IN (vt2.c1)))))OR(t0.c48)));
SELECT COUNT(*) FROM vt2, t0 LEFT OUTER JOIN vt0 ON ((((vt2.c1 COLLATE BINARY)OR((vt2.c3 IN (vt2.c1)))))OR(t0.c48)) WHERE (((('*eirw_1')) BETWEEN (((t0.c48 IN (vt2.c2)))) AND ((CASE vt2.lid  WHEN vt2.lid THEN vt2.lid WHEN vt2.lid THEN vt2.c2 WHEN vt2.c3 THEN vt2.c2 END))));
SELECT SUM(count) FROM (SELECT ((((('*eirw_1')) BETWEEN (((t0.c48 IN (vt2.c2)))) AND ((CASE vt2.lid  WHEN vt2.lid THEN vt2.lid WHEN vt2.lid THEN vt2.c2 WHEN vt2.c3 THEN vt2.c2 END)))) IS TRUE)  as count FROM vt2, t0 LEFT OUTER JOIN vt0 ON ((((vt2.c1 COLLATE BINARY)OR((vt2.c3 IN (vt2.c1)))))OR(t0.c48)));
SELECT COUNT(*) FROM vt2, t0 LEFT OUTER JOIN vt0 ON ((((vt2.c1 COLLATE BINARY)OR((vt2.c3 IN (vt2.c1)))))OR(t0.c48)) WHERE (((('*eirw_1')) BETWEEN (((t0.c48 IN (vt2.c2)))) AND ((CASE vt2.lid  WHEN vt2.lid THEN vt2.lid WHEN vt2.lid THEN vt2.c2 WHEN vt2.c3 THEN vt2.c2 END))));
SELECT ALL * FROM v0, vt0, vt2 WHERE ((~ ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (v0.c0))))) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT ALL * FROM v0, vt0, vt2 WHERE ((~ ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (v0.c0))))) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT ALL * FROM v0, vt0, vt2 WHERE ((~ ((- (v0.c0)))));
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE (CAST((vt2.c0 IN ()) AS TEXT)) ORDER BY ((load_extension(vt2.c1, vt0.c0)) BETWEEN (vt2.c3 COLLATE BINARY) AND (CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((CAST((vt2.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY ((load_extension(vt2.c1, vt0.c0)) BETWEEN (vt2.c3 COLLATE BINARY) AND (CAST(vt0.c0 AS REAL))));
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE (CAST((vt2.c0 IN ()) AS TEXT)) ORDER BY ((load_extension(vt2.c1, vt0.c0)) BETWEEN (vt2.c3 COLLATE BINARY) AND (CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((CAST((vt2.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY ((load_extension(vt2.c1, vt0.c0)) BETWEEN (vt2.c3 COLLATE BINARY) AND (CAST(vt0.c0 AS REAL))));
SELECT * FROM v0, vt0 WHERE ((load_extension(v0.c0, vt0.c0) IN (CASE v0.c0  WHEN v0.c0 THEN -2.1254445E9 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((load_extension(v0.c0, vt0.c0) IN (CASE v0.c0  WHEN v0.c0 THEN -2.1254445E9 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((load_extension(v0.c0, vt0.c0) IN (CASE v0.c0  WHEN v0.c0 THEN -2.1254445E9 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((load_extension(v0.c0, vt0.c0) IN (CASE v0.c0  WHEN v0.c0 THEN -2.1254445E9 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM t0, vt0, vt2 WHERE (t0.c48);
SELECT SUM(count) FROM (SELECT ALL ((t0.c48) IS TRUE)  as count FROM t0, vt0, vt2);
SELECT ALL * FROM t0, vt0, vt2 WHERE (t0.c48);
SELECT SUM(count) FROM (SELECT ALL ((t0.c48) IS TRUE)  as count FROM t0, vt0, vt2);
SELECT ALL * FROM t0, vt0, vt2 WHERE (t0.c48);
SELECT ALL * FROM vt2, t0 NATURAL JOIN v0 WHERE (CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM vt2, t0 NATURAL JOIN v0);
SELECT ALL * FROM vt2, t0 NATURAL JOIN v0 WHERE (CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM vt2, t0 NATURAL JOIN v0);
SELECT ALL * FROM vt2, t0 NATURAL JOIN v0 WHERE (CAST(NULL AS INTEGER));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0)-(v0.c0)) THEN ((v0.c0) IS TRUE) END) ORDER BY CASE WHEN (~ (v0.c0)) THEN ((v0.c0) ISNULL) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)-(v0.c0)) THEN ((v0.c0) IS TRUE) END) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (~ (v0.c0)) THEN ((v0.c0) ISNULL) END DESC);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0)-(v0.c0)) THEN ((v0.c0) IS TRUE) END) ORDER BY CASE WHEN (~ (v0.c0)) THEN ((v0.c0) ISNULL) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)-(v0.c0)) THEN ((v0.c0) IS TRUE) END) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (~ (v0.c0)) THEN ((v0.c0) ISNULL) END DESC);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0)-(v0.c0)) THEN ((v0.c0) IS TRUE) END) ORDER BY CASE WHEN (~ (v0.c0)) THEN ((v0.c0) ISNULL) END DESC;
SELECT * FROM v0, t0, vt0 WHERE ((((t0.c1, x'', v0.c0)) NOT BETWEEN ((((t0.c48) IS FALSE), ((t0.c17) BETWEEN (t0.c48) AND (v0.c0)), (t0.c0 IN ()))) AND ((CAST(0.9588965665283488 AS TEXT), ((t0.c1)>>(t0.c17)), t0.c17 COLLATE RTRIM)))) ORDER BY (((vt0.c0)) NOT BETWEEN (((t0.c48 IN ()))) AND ((((t0.c17)<<(t0.c1))))) ASC  NULLS LAST, CASE t0.c48 COLLATE BINARY  WHEN ((((((((((((((((v0.c0)OR(t0.c17)))OR(vt0.c0)))OR(t0.c1)))OR(v0.c0)))OR(v0.c0)))AND(t0.c17)))OR(t0.c17)))AND(v0.c0)) THEN CASE WHEN t0.c17 THEN t0.c0 WHEN t0.c1 THEN v0.c0 WHEN t0.c48 THEN v0.c0 ELSE t0.c0 END ELSE v0.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT (((((t0.c1, x'', v0.c0)) NOT BETWEEN ((((t0.c48) IS FALSE), ((t0.c17) BETWEEN (t0.c48) AND (v0.c0)), (t0.c0 IN ()))) AND ((CAST(0.9588965665283488 AS TEXT), ((t0.c1)>>(t0.c17)), t0.c17 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((t0.c48 IN ()))) AND ((((t0.c17)<<(t0.c1))))) ASC  NULLS LAST, CASE t0.c48 COLLATE BINARY  WHEN ((((((((((((((((v0.c0)OR(t0.c17)))OR(vt0.c0)))OR(t0.c1)))OR(v0.c0)))OR(v0.c0)))AND(t0.c17)))OR(t0.c17)))AND(v0.c0)) THEN CASE WHEN t0.c17 THEN t0.c0 WHEN t0.c1 THEN v0.c0 WHEN t0.c48 THEN v0.c0 ELSE t0.c0 END ELSE v0.c0 COLLATE RTRIM END);
SELECT * FROM v0, t0, vt0 WHERE ((((t0.c1, x'', v0.c0)) NOT BETWEEN ((((t0.c48) IS FALSE), ((t0.c17) BETWEEN (t0.c48) AND (v0.c0)), (t0.c0 IN ()))) AND ((CAST(0.9588965665283488 AS TEXT), ((t0.c1)>>(t0.c17)), t0.c17 COLLATE RTRIM)))) ORDER BY (((vt0.c0)) NOT BETWEEN (((t0.c48 IN ()))) AND ((((t0.c17)<<(t0.c1))))) ASC  NULLS LAST, CASE t0.c48 COLLATE BINARY  WHEN ((((((((((((((((v0.c0)OR(t0.c17)))OR(vt0.c0)))OR(t0.c1)))OR(v0.c0)))OR(v0.c0)))AND(t0.c17)))OR(t0.c17)))AND(v0.c0)) THEN CASE WHEN t0.c17 THEN t0.c0 WHEN t0.c1 THEN v0.c0 WHEN t0.c48 THEN v0.c0 ELSE t0.c0 END ELSE v0.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT (((((t0.c1, x'', v0.c0)) NOT BETWEEN ((((t0.c48) IS FALSE), ((t0.c17) BETWEEN (t0.c48) AND (v0.c0)), (t0.c0 IN ()))) AND ((CAST(0.9588965665283488 AS TEXT), ((t0.c1)>>(t0.c17)), t0.c17 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((t0.c48 IN ()))) AND ((((t0.c17)<<(t0.c1))))) ASC  NULLS LAST, CASE t0.c48 COLLATE BINARY  WHEN ((((((((((((((((v0.c0)OR(t0.c17)))OR(vt0.c0)))OR(t0.c1)))OR(v0.c0)))OR(v0.c0)))AND(t0.c17)))OR(t0.c17)))AND(v0.c0)) THEN CASE WHEN t0.c17 THEN t0.c0 WHEN t0.c1 THEN v0.c0 WHEN t0.c48 THEN v0.c0 ELSE t0.c0 END ELSE v0.c0 COLLATE RTRIM END);
SELECT * FROM v0, t0, vt0 WHERE ((((t0.c1, x'', v0.c0)) NOT BETWEEN ((((t0.c48) IS FALSE), ((t0.c17) BETWEEN (t0.c48) AND (v0.c0)), (t0.c0 IN ()))) AND ((CAST(0.9588965665283488 AS TEXT), ((t0.c1)>>(t0.c17)), t0.c17 COLLATE RTRIM)))) ORDER BY (((vt0.c0)) NOT BETWEEN (((t0.c48 IN ()))) AND ((((t0.c17)<<(t0.c1))))) ASC  NULLS LAST, CASE t0.c48 COLLATE BINARY  WHEN ((((((((((((((((v0.c0)OR(t0.c17)))OR(vt0.c0)))OR(t0.c1)))OR(v0.c0)))OR(v0.c0)))AND(t0.c17)))OR(t0.c17)))AND(v0.c0)) THEN CASE WHEN t0.c17 THEN t0.c0 WHEN t0.c1 THEN v0.c0 WHEN t0.c48 THEN v0.c0 ELSE t0.c0 END ELSE v0.c0 COLLATE RTRIM END;
SELECT * FROM t0, vt2, v0, vt0 WHERE (CASE WHEN ((vt2.c0)IS NOT(vt0.c0)) THEN CASE WHEN t0.c48 THEN t0.c48 WHEN vt2.c3 THEN t0.c17 WHEN t0.c0 THEN ' }' ELSE vt2.c1 END WHEN UNLIKELY(vt2.c2) THEN ((vt2.lid)<(t0.c0)) WHEN ((vt2.c0) BETWEEN (t0.c17) AND ('grﱱ')) THEN t0.c17 WHEN (t0.c48 IN ('', t0.c48)) THEN ((((((((vt2.lid)AND(vt2.lid)))AND(t0.c17)))OR(vt0.c0)))OR(vt2.c1)) WHEN ((((((((t0.c48)OR(vt2.lid)))OR(t0.c0)))AND(vt2.c1)))OR(t0.c0)) THEN vt2.c1 ELSE ((((v0.c0)OR(t0.c1)))OR(vt0.c0)) END) ORDER BY ((vt0.c0 COLLATE RTRIM)>=((+ (vt2.c2)))), (((((('uEDd^')OR(vt2.c0)))AND(vt2.c2))) NOT BETWEEN (vt2.c2 COLLATE RTRIM) AND (NULL));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt2.c0)IS NOT(vt0.c0)) THEN CASE WHEN t0.c48 THEN t0.c48 WHEN vt2.c3 THEN t0.c17 WHEN t0.c0 THEN ' }' ELSE vt2.c1 END WHEN UNLIKELY(vt2.c2) THEN ((vt2.lid)<(t0.c0)) WHEN ((vt2.c0) BETWEEN (t0.c17) AND ('grﱱ')) THEN t0.c17 WHEN (t0.c48 IN ('', t0.c48)) THEN ((((((((vt2.lid)AND(vt2.lid)))AND(t0.c17)))OR(vt0.c0)))OR(vt2.c1)) WHEN ((((((((t0.c48)OR(vt2.lid)))OR(t0.c0)))AND(vt2.c1)))OR(t0.c0)) THEN vt2.c1 ELSE ((((v0.c0)OR(t0.c1)))OR(vt0.c0)) END) IS TRUE)  as count FROM t0, vt2, v0, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)>=((+ (vt2.c2)))), (((((('uEDd^')OR(vt2.c0)))AND(vt2.c2))) NOT BETWEEN (vt2.c2 COLLATE RTRIM) AND (NULL)));
SELECT * FROM t0, vt2, v0, vt0 WHERE (CASE WHEN ((vt2.c0)IS NOT(vt0.c0)) THEN CASE WHEN t0.c48 THEN t0.c48 WHEN vt2.c3 THEN t0.c17 WHEN t0.c0 THEN ' }' ELSE vt2.c1 END WHEN UNLIKELY(vt2.c2) THEN ((vt2.lid)<(t0.c0)) WHEN ((vt2.c0) BETWEEN (t0.c17) AND ('grﱱ')) THEN t0.c17 WHEN (t0.c48 IN ('', t0.c48)) THEN ((((((((vt2.lid)AND(vt2.lid)))AND(t0.c17)))OR(vt0.c0)))OR(vt2.c1)) WHEN ((((((((t0.c48)OR(vt2.lid)))OR(t0.c0)))AND(vt2.c1)))OR(t0.c0)) THEN vt2.c1 ELSE ((((v0.c0)OR(t0.c1)))OR(vt0.c0)) END) ORDER BY ((vt0.c0 COLLATE RTRIM)>=((+ (vt2.c2)))), (((((('uEDd^')OR(vt2.c0)))AND(vt2.c2))) NOT BETWEEN (vt2.c2 COLLATE RTRIM) AND (NULL));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt2.c0)IS NOT(vt0.c0)) THEN CASE WHEN t0.c48 THEN t0.c48 WHEN vt2.c3 THEN t0.c17 WHEN t0.c0 THEN ' }' ELSE vt2.c1 END WHEN UNLIKELY(vt2.c2) THEN ((vt2.lid)<(t0.c0)) WHEN ((vt2.c0) BETWEEN (t0.c17) AND ('grﱱ')) THEN t0.c17 WHEN (t0.c48 IN ('', t0.c48)) THEN ((((((((vt2.lid)AND(vt2.lid)))AND(t0.c17)))OR(vt0.c0)))OR(vt2.c1)) WHEN ((((((((t0.c48)OR(vt2.lid)))OR(t0.c0)))AND(vt2.c1)))OR(t0.c0)) THEN vt2.c1 ELSE ((((v0.c0)OR(t0.c1)))OR(vt0.c0)) END) IS TRUE)  as count FROM t0, vt2, v0, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)>=((+ (vt2.c2)))), (((((('uEDd^')OR(vt2.c0)))AND(vt2.c2))) NOT BETWEEN (vt2.c2 COLLATE RTRIM) AND (NULL)));
SELECT * FROM t0, vt2, v0, vt0 WHERE (CASE WHEN ((vt2.c0)IS NOT(vt0.c0)) THEN CASE WHEN t0.c48 THEN t0.c48 WHEN vt2.c3 THEN t0.c17 WHEN t0.c0 THEN ' }' ELSE vt2.c1 END WHEN UNLIKELY(vt2.c2) THEN ((vt2.lid)<(t0.c0)) WHEN ((vt2.c0) BETWEEN (t0.c17) AND ('grﱱ')) THEN t0.c17 WHEN (t0.c48 IN ('', t0.c48)) THEN ((((((((vt2.lid)AND(vt2.lid)))AND(t0.c17)))OR(vt0.c0)))OR(vt2.c1)) WHEN ((((((((t0.c48)OR(vt2.lid)))OR(t0.c0)))AND(vt2.c1)))OR(t0.c0)) THEN vt2.c1 ELSE ((((v0.c0)OR(t0.c1)))OR(vt0.c0)) END) ORDER BY ((vt0.c0 COLLATE RTRIM)>=((+ (vt2.c2)))), (((((('uEDd^')OR(vt2.c0)))AND(vt2.c2))) NOT BETWEEN (vt2.c2 COLLATE RTRIM) AND (NULL));
SELECT * FROM t0, vt0, vt2, v0 WHERE (COALESCE(t0.c17, t0.c1) COLLATE NOCASE) ORDER BY CASE (vt2.c1 IN ())  WHEN CASE WHEN vt0.c0 THEN vt2.c0 WHEN x'' THEN vt2.lid WHEN vt2.c0 THEN t0.c17 WHEN t0.c0 THEN t0.c1 WHEN vt2.c0 THEN t0.c48 ELSE vt2.c0 END THEN CASE WHEN t0.c48 THEN t0.c48 WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c1 THEN t0.c1 ELSE vt2.c2 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(t0.c17, t0.c1) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, vt2, v0 ORDER BY CASE (vt2.c1 IN ())  WHEN CASE WHEN vt0.c0 THEN vt2.c0 WHEN x'' THEN vt2.lid WHEN vt2.c0 THEN t0.c17 WHEN t0.c0 THEN t0.c1 WHEN vt2.c0 THEN t0.c48 ELSE vt2.c0 END THEN CASE WHEN t0.c48 THEN t0.c48 WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c1 THEN t0.c1 ELSE vt2.c2 END END DESC);
SELECT * FROM t0, vt0, vt2, v0 WHERE (COALESCE(t0.c17, t0.c1) COLLATE NOCASE) ORDER BY CASE (vt2.c1 IN ())  WHEN CASE WHEN vt0.c0 THEN vt2.c0 WHEN x'' THEN vt2.lid WHEN vt2.c0 THEN t0.c17 WHEN t0.c0 THEN t0.c1 WHEN vt2.c0 THEN t0.c48 ELSE vt2.c0 END THEN CASE WHEN t0.c48 THEN t0.c48 WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c1 THEN t0.c1 ELSE vt2.c2 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(t0.c17, t0.c1) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, vt2, v0 ORDER BY CASE (vt2.c1 IN ())  WHEN CASE WHEN vt0.c0 THEN vt2.c0 WHEN x'' THEN vt2.lid WHEN vt2.c0 THEN t0.c17 WHEN t0.c0 THEN t0.c1 WHEN vt2.c0 THEN t0.c48 ELSE vt2.c0 END THEN CASE WHEN t0.c48 THEN t0.c48 WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c1 THEN t0.c1 ELSE vt2.c2 END END DESC);
SELECT * FROM t0, vt0, vt2, v0 WHERE (COALESCE(t0.c17, t0.c1) COLLATE NOCASE) ORDER BY CASE (vt2.c1 IN ())  WHEN CASE WHEN vt0.c0 THEN vt2.c0 WHEN x'' THEN vt2.lid WHEN vt2.c0 THEN t0.c17 WHEN t0.c0 THEN t0.c1 WHEN vt2.c0 THEN t0.c48 ELSE vt2.c0 END THEN CASE WHEN t0.c48 THEN t0.c48 WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c1 THEN t0.c1 ELSE vt2.c2 END END DESC;
SELECT ALL * FROM vt2, vt0 WHERE ((((vt2.c2, x'', x'')) NOT BETWEEN ((vt2.c3, (+ (0.21791624065933313)), ((vt2.c1) NOT BETWEEN (vt2.c3) AND (vt2.c0)))) AND ((((vt2.lid) NOT NULL), ((((vt2.lid)AND(vt0.c0)))OR(vt0.c0)), CASE vt2.c0  WHEN vt2.c2 THEN vt0.c0 WHEN vt2.c3 THEN vt2.c1 WHEN vt2.c1 THEN vt2.c0 END)))) ORDER BY (((((vt0.c0)) BETWEEN ((vt2.c2)) AND ((vt0.c0))))IS(CASE vt2.c3  WHEN vt2.c2 THEN vt2.c2 ELSE vt2.lid END))  NULLS FIRST, CASE WHEN (((vt2.lid)) BETWEEN (('\o1蔔{诼ﱱ')) AND ((vt0.c0))) THEN ((vt2.c3) IS FALSE) END, ((((4.14826819E8)<(vt2.c2)))+(vt2.lid COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT (((((vt2.c2, x'', x'')) NOT BETWEEN ((vt2.c3, (+ (0.21791624065933313)), ((vt2.c1) NOT BETWEEN (vt2.c3) AND (vt2.c0)))) AND ((((vt2.lid) NOT NULL), ((((vt2.lid)AND(vt0.c0)))OR(vt0.c0)), CASE vt2.c0  WHEN vt2.c2 THEN vt0.c0 WHEN vt2.c3 THEN vt2.c1 WHEN vt2.c1 THEN vt2.c0 END)))) IS TRUE)  as count FROM vt2, vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt2.c2)) AND ((vt0.c0))))IS(CASE vt2.c3  WHEN vt2.c2 THEN vt2.c2 ELSE vt2.lid END))  NULLS FIRST, CASE WHEN (((vt2.lid)) BETWEEN (('\o1蔔{诼ﱱ')) AND ((vt0.c0))) THEN ((vt2.c3) IS FALSE) END, ((((4.14826819E8)<(vt2.c2)))+(vt2.lid COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt2, vt0 WHERE ((((vt2.c2, x'', x'')) NOT BETWEEN ((vt2.c3, (+ (0.21791624065933313)), ((vt2.c1) NOT BETWEEN (vt2.c3) AND (vt2.c0)))) AND ((((vt2.lid) NOT NULL), ((((vt2.lid)AND(vt0.c0)))OR(vt0.c0)), CASE vt2.c0  WHEN vt2.c2 THEN vt0.c0 WHEN vt2.c3 THEN vt2.c1 WHEN vt2.c1 THEN vt2.c0 END)))) ORDER BY (((((vt0.c0)) BETWEEN ((vt2.c2)) AND ((vt0.c0))))IS(CASE vt2.c3  WHEN vt2.c2 THEN vt2.c2 ELSE vt2.lid END))  NULLS FIRST, CASE WHEN (((vt2.lid)) BETWEEN (('\o1蔔{诼ﱱ')) AND ((vt0.c0))) THEN ((vt2.c3) IS FALSE) END, ((((4.14826819E8)<(vt2.c2)))+(vt2.lid COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT (((((vt2.c2, x'', x'')) NOT BETWEEN ((vt2.c3, (+ (0.21791624065933313)), ((vt2.c1) NOT BETWEEN (vt2.c3) AND (vt2.c0)))) AND ((((vt2.lid) NOT NULL), ((((vt2.lid)AND(vt0.c0)))OR(vt0.c0)), CASE vt2.c0  WHEN vt2.c2 THEN vt0.c0 WHEN vt2.c3 THEN vt2.c1 WHEN vt2.c1 THEN vt2.c0 END)))) IS TRUE)  as count FROM vt2, vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt2.c2)) AND ((vt0.c0))))IS(CASE vt2.c3  WHEN vt2.c2 THEN vt2.c2 ELSE vt2.lid END))  NULLS FIRST, CASE WHEN (((vt2.lid)) BETWEEN (('\o1蔔{诼ﱱ')) AND ((vt0.c0))) THEN ((vt2.c3) IS FALSE) END, ((((4.14826819E8)<(vt2.c2)))+(vt2.lid COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt2, vt0 WHERE ((((vt2.c2, x'', x'')) NOT BETWEEN ((vt2.c3, (+ (0.21791624065933313)), ((vt2.c1) NOT BETWEEN (vt2.c3) AND (vt2.c0)))) AND ((((vt2.lid) NOT NULL), ((((vt2.lid)AND(vt0.c0)))OR(vt0.c0)), CASE vt2.c0  WHEN vt2.c2 THEN vt0.c0 WHEN vt2.c3 THEN vt2.c1 WHEN vt2.c1 THEN vt2.c0 END)))) ORDER BY (((((vt0.c0)) BETWEEN ((vt2.c2)) AND ((vt0.c0))))IS(CASE vt2.c3  WHEN vt2.c2 THEN vt2.c2 ELSE vt2.lid END))  NULLS FIRST, CASE WHEN (((vt2.lid)) BETWEEN (('\o1蔔{诼ﱱ')) AND ((vt0.c0))) THEN ((vt2.c3) IS FALSE) END, ((((4.14826819E8)<(vt2.c2)))+(vt2.lid COLLATE NOCASE)) ASC;
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE (((((vt2.c3)-(vt2.c1))) NOT BETWEEN ((((vt0.c0))!=((vt2.c3)))) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c3)-(vt2.c1))) NOT BETWEEN ((((vt0.c0))<>((vt2.c3)))) AND (v0.c0))) IS TRUE)  as count FROM vt0, vt2, v0);
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE (((((vt2.c3)-(vt2.c1))) NOT BETWEEN ((((vt0.c0))!=((vt2.c3)))) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c3)-(vt2.c1))) NOT BETWEEN ((((vt0.c0))<>((vt2.c3)))) AND (v0.c0))) IS TRUE)  as count FROM vt0, vt2, v0);
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE (((((vt2.c3)-(vt2.c1))) NOT BETWEEN ((((vt0.c0))!=((vt2.c3)))) AND (v0.c0)));
SELECT ALL COUNT(*) FROM t0, vt2 WHERE (((((UNLIKELY(vt2.c1))AND(((((vt2.c1)OR(vt2.lid)))OR(t0.c1)))))OR(CAST(t0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((UNLIKELY(vt2.c1))AND(((((vt2.c1)OR(vt2.lid)))OR(t0.c1)))))OR(CAST(t0.c1 AS TEXT)))) IS TRUE)  as count FROM t0, vt2);
SELECT ALL COUNT(*) FROM t0, vt2 WHERE (((((UNLIKELY(vt2.c1))AND(((((vt2.c1)OR(vt2.lid)))OR(t0.c1)))))OR(CAST(t0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((UNLIKELY(vt2.c1))AND(((((vt2.c1)OR(vt2.lid)))OR(t0.c1)))))OR(CAST(t0.c1 AS TEXT)))) IS TRUE)  as count FROM t0, vt2);
SELECT ALL COUNT(*) FROM t0, vt2 WHERE (((((UNLIKELY(vt2.c1))AND(((((vt2.c1)OR(vt2.lid)))OR(t0.c1)))))OR(CAST(t0.c1 AS TEXT))));
SELECT COUNT(*) FROM vt2, vt0, v0, t0 WHERE (x'') ORDER BY ((((((((((vt2.c2) NOT BETWEEN (t0.c1) AND (vt2.c3)))OR(CAST(vt2.c1 AS INTEGER))))AND((vt2.lid IN (vt2.c2)))))OR(NULL)))OR(t0.c17));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt2, vt0, v0, t0 ORDER BY ((((((((((vt2.c2) NOT BETWEEN (t0.c1) AND (vt2.c3)))OR(CAST(vt2.c1 AS INTEGER))))AND((vt2.lid IN (vt2.c2)))))OR(NULL)))OR(t0.c17)));
SELECT COUNT(*) FROM vt2, vt0, v0, t0 WHERE (x'') ORDER BY ((((((((((vt2.c2) NOT BETWEEN (t0.c1) AND (vt2.c3)))OR(CAST(vt2.c1 AS INTEGER))))AND((vt2.lid IN (vt2.c2)))))OR(NULL)))OR(t0.c17));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt2, vt0, v0, t0 ORDER BY ((((((((((vt2.c2) NOT BETWEEN (t0.c1) AND (vt2.c3)))OR(CAST(vt2.c1 AS INTEGER))))AND((vt2.lid IN (vt2.c2)))))OR(NULL)))OR(t0.c17)));
SELECT COUNT(*) FROM vt2, vt0, v0, t0 WHERE (x'') ORDER BY ((((((((((vt2.c2) NOT BETWEEN (t0.c1) AND (vt2.c3)))OR(CAST(vt2.c1 AS INTEGER))))AND((vt2.lid IN (vt2.c2)))))OR(NULL)))OR(t0.c17));
SELECT * FROM t0 INNER JOIN vt2 ON ((((vt2.c0) NOT BETWEEN (vt0.c0) AND ('481507277')))&('-388711885')) LEFT OUTER JOIN vt0 ON vt2.c1 WHERE (((((t0.c17)>=(NULL))) IS TRUE)) ORDER BY (((t0.c0, vt2.c1, vt2.c3)) BETWEEN ((CASE WHEN t0.c17 THEN vt2.lid WHEN vt0.c0 THEN t0.c48 WHEN vt0.c0 THEN t0.c48 END, vt2.c2, ((vt0.c0) NOTNULL))) AND ((CAST(t0.c48 AS BLOB), (((t0.c0, vt2.lid, t0.c48))==((vt2.c3, vt2.c2, vt2.c3))), ((0.13401333233405488) NOTNULL)))) DESC, CASE WHEN CAST(vt2.lid AS REAL) THEN CAST(t0.c48 AS NUMERIC) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c17)>=(NULL))) IS TRUE)) IS TRUE)  as count FROM t0 INNER JOIN vt2 ON ((((vt2.c0) NOT BETWEEN (vt0.c0) AND ('481507277')))&('-388711885')) LEFT OUTER JOIN vt0 ON vt2.c1 ORDER BY (((t0.c0, vt2.c1, vt2.c3)) BETWEEN ((CASE WHEN t0.c17 THEN vt2.lid WHEN vt0.c0 THEN t0.c48 WHEN vt0.c0 THEN t0.c48 END, vt2.c2, ((vt0.c0) NOTNULL))) AND ((CAST(t0.c48 AS BLOB), (((t0.c0, vt2.lid, t0.c48))==((vt2.c3, vt2.c2, vt2.c3))), ((0.13401333233405488) NOTNULL)))) DESC, CASE WHEN CAST(vt2.lid AS REAL) THEN CAST(t0.c48 AS NUMERIC) END ASC  NULLS FIRST);
SELECT * FROM t0 INNER JOIN vt2 ON ((((vt2.c0) NOT BETWEEN (vt0.c0) AND ('481507277')))&('-388711885')) LEFT OUTER JOIN vt0 ON vt2.c1 WHERE (((((t0.c17)>=(NULL))) IS TRUE)) ORDER BY (((t0.c0, vt2.c1, vt2.c3)) BETWEEN ((CASE WHEN t0.c17 THEN vt2.lid WHEN vt0.c0 THEN t0.c48 WHEN vt0.c0 THEN t0.c48 END, vt2.c2, ((vt0.c0) NOTNULL))) AND ((CAST(t0.c48 AS BLOB), (((t0.c0, vt2.lid, t0.c48))==((vt2.c3, vt2.c2, vt2.c3))), ((0.13401333233405488) NOTNULL)))) DESC, CASE WHEN CAST(vt2.lid AS REAL) THEN CAST(t0.c48 AS NUMERIC) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c17)>=(NULL))) IS TRUE)) IS TRUE)  as count FROM t0 INNER JOIN vt2 ON ((((vt2.c0) NOT BETWEEN (vt0.c0) AND ('481507277')))&('-388711885')) LEFT OUTER JOIN vt0 ON vt2.c1 ORDER BY (((t0.c0, vt2.c1, vt2.c3)) BETWEEN ((CASE WHEN t0.c17 THEN vt2.lid WHEN vt0.c0 THEN t0.c48 WHEN vt0.c0 THEN t0.c48 END, vt2.c2, ((vt0.c0) NOTNULL))) AND ((CAST(t0.c48 AS BLOB), (((t0.c0, vt2.lid, t0.c48))==((vt2.c3, vt2.c2, vt2.c3))), ((0.13401333233405488) NOTNULL)))) DESC, CASE WHEN CAST(vt2.lid AS REAL) THEN CAST(t0.c48 AS NUMERIC) END ASC  NULLS FIRST);
SELECT * FROM t0 INNER JOIN vt2 ON ((((vt2.c0) NOT BETWEEN (vt0.c0) AND ('481507277')))&('-388711885')) LEFT OUTER JOIN vt0 ON vt2.c1 WHERE (((((t0.c17)>=(NULL))) IS TRUE)) ORDER BY (((t0.c0, vt2.c1, vt2.c3)) BETWEEN ((CASE WHEN t0.c17 THEN vt2.lid WHEN vt0.c0 THEN t0.c48 WHEN vt0.c0 THEN t0.c48 END, vt2.c2, ((vt0.c0) NOTNULL))) AND ((CAST(t0.c48 AS BLOB), (((t0.c0, vt2.lid, t0.c48))==((vt2.c3, vt2.c2, vt2.c3))), ((0.13401333233405488) NOTNULL)))) DESC, CASE WHEN CAST(vt2.lid AS REAL) THEN CAST(t0.c48 AS NUMERIC) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt2, v0 WHERE ((((vt2.c2 IN ())) NOTNULL)) ORDER BY (~ ((((v0.c0))<((vt2.lid))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt2.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY (~ ((((v0.c0))<((vt2.lid))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt2, v0 WHERE ((((vt2.c2 IN ())) NOTNULL)) ORDER BY (~ ((((v0.c0))<((vt2.lid))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt2.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY (~ ((((v0.c0))<((vt2.lid))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt2, v0 WHERE ((((vt2.c2 IN ())) NOTNULL)) ORDER BY (~ ((((v0.c0))<((vt2.lid))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0, vt2 FULL OUTER JOIN t0 ON CASE 'vz''qo'  WHEN ((vt2.c0)>>(vt0.c0)) THEN (((t0.c1))=((vt2.c2))) ELSE CASE WHEN t0.c48 THEN t0.c1 END END WHERE (((((((('0.968260996069274'))<=((vt2.c0))))AND((vt2.c3 IN ()))))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((((('0.968260996069274'))<=((vt2.c0))))AND((vt2.c3 IN ()))))OR(x''))) IS TRUE)  as count FROM vt0, v0, vt2 FULL OUTER JOIN t0 ON CASE 'vz''qo'  WHEN ((vt2.c0)>>(vt0.c0)) THEN (((t0.c1))=((vt2.c2))) ELSE CASE WHEN t0.c48 THEN t0.c1 END END);
SELECT ALL COUNT(*) FROM vt0, v0, vt2 FULL OUTER JOIN t0 ON CASE 'vz''qo'  WHEN ((vt2.c0)>>(vt0.c0)) THEN (((t0.c1))=((vt2.c2))) ELSE CASE WHEN t0.c48 THEN t0.c1 END END WHERE (((((((('0.968260996069274'))<=((vt2.c0))))AND((vt2.c3 IN ()))))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((((('0.968260996069274'))<=((vt2.c0))))AND((vt2.c3 IN ()))))OR(x''))) IS TRUE)  as count FROM vt0, v0, vt2 FULL OUTER JOIN t0 ON CASE 'vz''qo'  WHEN ((vt2.c0)>>(vt0.c0)) THEN (((t0.c1))=((vt2.c2))) ELSE CASE WHEN t0.c48 THEN t0.c1 END END);
SELECT ALL COUNT(*) FROM vt0, v0, vt2 FULL OUTER JOIN t0 ON CASE 'vz''qo'  WHEN ((vt2.c0)>>(vt0.c0)) THEN (((t0.c1))=((vt2.c2))) ELSE CASE WHEN t0.c48 THEN t0.c1 END END WHERE (((((((('0.968260996069274'))<=((vt2.c0))))AND((vt2.c3 IN ()))))OR(x'')));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN ('1156595660') AND (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN ('1156595660') AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN ('1156595660') AND (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN ('1156595660') AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN ('1156595660') AND (((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM t0, v0 WHERE (((((t0.c1) IS FALSE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) IS FALSE)) ISNULL)) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((t0.c1) IS FALSE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) IS FALSE)) ISNULL)) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((t0.c1) IS FALSE)) ISNULL));
SELECT * FROM t0, vt2, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt2, v0);
SELECT * FROM t0, vt2, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt2, v0);
SELECT * FROM t0, vt2, v0 WHERE (x'');
SELECT * FROM vt0 CROSS JOIN t0 ON (CASE WHEN t0.c17 THEN vt0.c0 END IN ()) WHERE ((((t0.c17)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((1.814082949E9)))) ORDER BY CASE t0.c0 COLLATE NOCASE  WHEN '1117211102' THEN NULL ELSE ((t0.c17) BETWEEN (t0.c1) AND (t0.c17)) END;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c17)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((1.814082949E9)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (CASE WHEN t0.c17 THEN vt0.c0 END IN ()) ORDER BY CASE t0.c0 COLLATE NOCASE  WHEN '1117211102' THEN NULL ELSE ((t0.c17) BETWEEN (t0.c1) AND (t0.c17)) END);
SELECT * FROM vt0 CROSS JOIN t0 ON (CASE WHEN t0.c17 THEN vt0.c0 END IN ()) WHERE ((((t0.c17)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((1.814082949E9)))) ORDER BY CASE t0.c0 COLLATE NOCASE  WHEN '1117211102' THEN NULL ELSE ((t0.c17) BETWEEN (t0.c1) AND (t0.c17)) END;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c17)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((1.814082949E9)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (CASE WHEN t0.c17 THEN vt0.c0 END IN ()) ORDER BY CASE t0.c0 COLLATE NOCASE  WHEN '1117211102' THEN NULL ELSE ((t0.c17) BETWEEN (t0.c1) AND (t0.c17)) END);
SELECT * FROM vt0 CROSS JOIN t0 ON (CASE WHEN t0.c17 THEN vt0.c0 END IN ()) WHERE ((((t0.c17)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((1.814082949E9)))) ORDER BY CASE t0.c0 COLLATE NOCASE  WHEN '1117211102' THEN NULL ELSE ((t0.c17) BETWEEN (t0.c1) AND (t0.c17)) END;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((((v0.c0)<(t0.c17))))==(((NULL IN ())))) FULL OUTER JOIN v0 ON CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c48 ELSE vt0.c0 END THEN LIKELIHOOD(t0.c48, 0.3757698966062072) ELSE ((vt0.c0)GLOB(t0.c48)) END WHERE ((((- (t0.c17)))!=((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c17)))<>((t0.c0 IN ())))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((((v0.c0)<(t0.c17))))==(((NULL IN ())))) FULL OUTER JOIN v0 ON CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c48 ELSE vt0.c0 END THEN LIKELIHOOD(t0.c48, 0.3757698966062072) ELSE ((vt0.c0)GLOB(t0.c48)) END);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((((v0.c0)<(t0.c17))))==(((NULL IN ())))) FULL OUTER JOIN v0 ON CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c48 ELSE vt0.c0 END THEN LIKELIHOOD(t0.c48, 0.3757698966062072) ELSE ((vt0.c0)GLOB(t0.c48)) END WHERE ((((- (t0.c17)))!=((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c17)))<>((t0.c0 IN ())))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((((v0.c0)<(t0.c17))))==(((NULL IN ())))) FULL OUTER JOIN v0 ON CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c48 ELSE vt0.c0 END THEN LIKELIHOOD(t0.c48, 0.3757698966062072) ELSE ((vt0.c0)GLOB(t0.c48)) END);
SELECT COUNT(*) FROM vt0, vt2 WHERE ((((vt2.lid IN (vt2.c0))) NOT BETWEEN (CAST(vt2.lid AS TEXT)) AND ((vt2.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((vt2.lid IN (vt2.c0))) NOT BETWEEN (CAST(vt2.lid AS TEXT)) AND ((vt2.c1 IN ())))) IS TRUE)  as count FROM vt0, vt2);
SELECT COUNT(*) FROM vt0, vt2 WHERE ((((vt2.lid IN (vt2.c0))) NOT BETWEEN (CAST(vt2.lid AS TEXT)) AND ((vt2.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((vt2.lid IN (vt2.c0))) NOT BETWEEN (CAST(vt2.lid AS TEXT)) AND ((vt2.c1 IN ())))) IS TRUE)  as count FROM vt0, vt2);
SELECT COUNT(*) FROM vt0, vt2 WHERE ((((vt2.lid IN (vt2.c0))) NOT BETWEEN (CAST(vt2.lid AS TEXT)) AND ((vt2.c1 IN ()))));
SELECT ALL * FROM vt0, t0, vt2 WHERE (((t0.c17)<=(((vt2.c0) BETWEEN (vt2.c3) AND (vt2.c3))))) ORDER BY (((- (t0.c17))) BETWEEN (t0.c0 COLLATE NOCASE) AND (((vt2.c1) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c17)<=(((vt2.c0) BETWEEN (vt2.c3) AND (vt2.c3))))) IS TRUE)  as count FROM vt0, t0, vt2 ORDER BY (((- (t0.c17))) BETWEEN (t0.c0 COLLATE NOCASE) AND (((vt2.c1) IS TRUE)))  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt2 WHERE (((t0.c17)<=(((vt2.c0) BETWEEN (vt2.c3) AND (vt2.c3))))) ORDER BY (((- (t0.c17))) BETWEEN (t0.c0 COLLATE NOCASE) AND (((vt2.c1) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c17)<=(((vt2.c0) BETWEEN (vt2.c3) AND (vt2.c3))))) IS TRUE)  as count FROM vt0, t0, vt2 ORDER BY (((- (t0.c17))) BETWEEN (t0.c0 COLLATE NOCASE) AND (((vt2.c1) IS TRUE)))  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt2 WHERE (((t0.c17)<=(((vt2.c0) BETWEEN (vt2.c3) AND (vt2.c3))))) ORDER BY (((- (t0.c17))) BETWEEN (t0.c0 COLLATE NOCASE) AND (((vt2.c1) IS TRUE)))  NULLS LAST;
SELECT ALL * FROM vt0, vt2, t0, v0 WHERE (((CASE t0.c48  WHEN v0.c0 THEN vt2.lid ELSE t0.c17 END)*(((vt2.c3)!=(vt2.c1))))) ORDER BY (+ (((((vt2.c2)AND(vt0.c0)))OR('aa'))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c48  WHEN v0.c0 THEN vt2.lid ELSE t0.c17 END)*(((vt2.c3)<>(vt2.c1))))) IS TRUE)  as count FROM vt0, vt2, t0, v0 ORDER BY (+ (((((vt2.c2)AND(vt0.c0)))OR('aa')))));
SELECT ALL * FROM vt0, vt2, t0, v0 WHERE (((CASE t0.c48  WHEN v0.c0 THEN vt2.lid ELSE t0.c17 END)*(((vt2.c3)!=(vt2.c1))))) ORDER BY (+ (((((vt2.c2)AND(vt0.c0)))OR('aa'))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c48  WHEN v0.c0 THEN vt2.lid ELSE t0.c17 END)*(((vt2.c3)<>(vt2.c1))))) IS TRUE)  as count FROM vt0, vt2, t0, v0 ORDER BY (+ (((((vt2.c2)AND(vt0.c0)))OR('aa')))));
SELECT ALL * FROM vt0, vt2, t0, v0 WHERE (((CASE t0.c48  WHEN v0.c0 THEN vt2.lid ELSE t0.c17 END)*(((vt2.c3)!=(vt2.c1))))) ORDER BY (+ (((((vt2.c2)AND(vt0.c0)))OR('aa'))));
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (LOWER(DISTINCT (((vt0.c0, t0.c17, t0.c17)) NOT BETWEEN ((t0.c1, t0.c17, x'500a')) AND ((t0.c48, vt0.c0, t0.c17)))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (((vt0.c0, t0.c17, t0.c17)) NOT BETWEEN ((t0.c1, t0.c17, x'500a')) AND ((t0.c48, vt0.c0, t0.c17))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (LOWER(DISTINCT (((vt0.c0, t0.c17, t0.c17)) NOT BETWEEN ((t0.c1, t0.c17, x'500a')) AND ((t0.c48, vt0.c0, t0.c17)))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (((vt0.c0, t0.c17, t0.c17)) NOT BETWEEN ((t0.c1, t0.c17, x'500a')) AND ((t0.c48, vt0.c0, t0.c17))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (LOWER(DISTINCT (((vt0.c0, t0.c17, t0.c17)) NOT BETWEEN ((t0.c1, t0.c17, x'500a')) AND ((t0.c48, vt0.c0, t0.c17)))));
SELECT * FROM vt0, t0 WHERE ((((t0.c1)||(t0.c0)) IN ((~ (t0.c1))))) ORDER BY CASE ((t0.c48) NOT NULL)  WHEN x'' THEN x'' ELSE ((t0.c48)>(t0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)||(t0.c0)) IN ((~ (t0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE ((t0.c48) NOT NULL)  WHEN x'' THEN x'' ELSE ((t0.c48)>(t0.c0)) END);
SELECT * FROM vt0, t0 WHERE ((((t0.c1)||(t0.c0)) IN ((~ (t0.c1))))) ORDER BY CASE ((t0.c48) NOT NULL)  WHEN x'' THEN x'' ELSE ((t0.c48)>(t0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)||(t0.c0)) IN ((~ (t0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE ((t0.c48) NOT NULL)  WHEN x'' THEN x'' ELSE ((t0.c48)>(t0.c0)) END);
SELECT * FROM vt0, t0 WHERE ((((t0.c1)||(t0.c0)) IN ((~ (t0.c1))))) ORDER BY CASE ((t0.c48) NOT NULL)  WHEN x'' THEN x'' ELSE ((t0.c48)>(t0.c0)) END;
SELECT COUNT(*) FROM v0, t0 NOT INDEXED, vt0, vt2 WHERE ((NOT ((((vt2.c0, vt0.c0, t0.c17)) BETWEEN ((vt2.lid, vt2.c2, t0.c48)) AND ((vt2.lid, '', 0.7809477524957273))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt2.c0, vt0.c0, t0.c17)) BETWEEN ((vt2.lid, vt2.c2, t0.c48)) AND ((vt2.lid, '', 0.7809477524957273)))))) IS TRUE)  as count FROM v0, t0, vt0, vt2);
SELECT COUNT(*) FROM v0, t0 NOT INDEXED, vt0, vt2 WHERE ((NOT ((((vt2.c0, vt0.c0, t0.c17)) BETWEEN ((vt2.lid, vt2.c2, t0.c48)) AND ((vt2.lid, '', 0.7809477524957273))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt2.c0, vt0.c0, t0.c17)) BETWEEN ((vt2.lid, vt2.c2, t0.c48)) AND ((vt2.lid, '', 0.7809477524957273)))))) IS TRUE)  as count FROM v0, t0, vt0, vt2);
SELECT COUNT(*) FROM v0, t0 NOT INDEXED, vt0, vt2 WHERE ((NOT ((((vt2.c0, vt0.c0, t0.c17)) BETWEEN ((vt2.lid, vt2.c2, t0.c48)) AND ((vt2.lid, '', 0.7809477524957273))))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0.8873194174616207) ORDER BY ((v0.c0)<=(vt0.c0)) COLLATE BINARY ASC, (((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (((vt0.c0))<((v0.c0))), HEX(v0.c0))) AND ((CAST(vt0.c0 AS INTEGER), 0.9953918791720915 COLLATE NOCASE, v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.8873194174616207) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c0)<=(vt0.c0)) COLLATE BINARY ASC, (((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (((vt0.c0))<((v0.c0))), HEX(v0.c0))) AND ((CAST(vt0.c0 AS INTEGER), 0.9953918791720915 COLLATE NOCASE, v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0.8873194174616207) ORDER BY ((v0.c0)<=(vt0.c0)) COLLATE BINARY ASC, (((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (((vt0.c0))<((v0.c0))), HEX(v0.c0))) AND ((CAST(vt0.c0 AS INTEGER), 0.9953918791720915 COLLATE NOCASE, v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.8873194174616207) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c0)<=(vt0.c0)) COLLATE BINARY ASC, (((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (((vt0.c0))<((v0.c0))), HEX(v0.c0))) AND ((CAST(vt0.c0 AS INTEGER), 0.9953918791720915 COLLATE NOCASE, v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0.8873194174616207) ORDER BY ((v0.c0)<=(vt0.c0)) COLLATE BINARY ASC, (((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (((vt0.c0))<((v0.c0))), HEX(v0.c0))) AND ((CAST(vt0.c0 AS INTEGER), 0.9953918791720915 COLLATE NOCASE, v0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c17)GLOB(t0.c1)))|((t0.c48 IN (t0.c48, t0.c48)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c17)GLOB(t0.c1)))|((t0.c48 IN (t0.c48, t0.c48))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c17)GLOB(t0.c1)))|((t0.c48 IN (t0.c48, t0.c48)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c17)GLOB(t0.c1)))|((t0.c48 IN (t0.c48, t0.c48))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c17)GLOB(t0.c1)))|((t0.c48 IN (t0.c48, t0.c48)))));
SELECT * FROM vt2 RIGHT OUTER JOIN t0 ON ((NOT (vt2.lid)) IN ()) WHERE (((((CAST(t0.c17 AS NUMERIC))AND(CASE vt2.c1  WHEN vt2.c3 THEN t0.c0 ELSE x'' END)))OR((- (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c17 AS NUMERIC))AND(CASE vt2.c1  WHEN vt2.c3 THEN t0.c0 ELSE x'' END)))OR((- (t0.c1))))) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN t0 ON ((NOT (vt2.lid)) IN ()));
SELECT * FROM vt2 RIGHT OUTER JOIN t0 ON ((NOT (vt2.lid)) IN ()) WHERE (((((CAST(t0.c17 AS NUMERIC))AND(CASE vt2.c1  WHEN vt2.c3 THEN t0.c0 ELSE x'' END)))OR((- (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c17 AS NUMERIC))AND(CASE vt2.c1  WHEN vt2.c3 THEN t0.c0 ELSE x'' END)))OR((- (t0.c1))))) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN t0 ON ((NOT (vt2.lid)) IN ()));
SELECT * FROM vt2 RIGHT OUTER JOIN t0 ON ((NOT (vt2.lid)) IN ()) WHERE (((((CAST(t0.c17 AS NUMERIC))AND(CASE vt2.c1  WHEN vt2.c3 THEN t0.c0 ELSE x'' END)))OR((- (t0.c1)))));
SELECT * FROM v0 WHERE (((((((v0.c0))<=((v0.c0)))))<=(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0))<=((v0.c0)))))<=(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((((v0.c0))<=((v0.c0)))))<=(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0))<=((v0.c0)))))<=(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((((v0.c0))<=((v0.c0)))))<=(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ())) ISNULL)) ORDER BY (~ ((t0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (~ ((t0.c0 IN ()))) DESC);
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ())) ISNULL)) ORDER BY (~ ((t0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (~ ((t0.c0 IN ()))) DESC);
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ())) ISNULL)) ORDER BY (~ ((t0.c0 IN ()))) DESC;
SELECT ALL * FROM vt2, vt0 CROSS JOIN t0 ON ((vt2.c2) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (vt2.c3)) INNER JOIN v0 ON ((((((v0.c0)>=(vt2.c3)))OR(vt2.c1 COLLATE BINARY)))AND(((v0.c0) BETWEEN (t0.c1) AND (t0.c1)))) WHERE (ABS((vt2.c0 IN ()))) ORDER BY ((((vt2.c0) NOT BETWEEN (vt2.lid) AND (t0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((ABS((vt2.c0 IN ()))) IS TRUE)  as count FROM vt2, vt0 CROSS JOIN t0 ON ((vt2.c2) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (vt2.c3)) INNER JOIN v0 ON ((((((v0.c0)>=(vt2.c3)))OR(vt2.c1 COLLATE BINARY)))AND(((v0.c0) BETWEEN (t0.c1) AND (t0.c1)))) ORDER BY ((((vt2.c0) NOT BETWEEN (vt2.lid) AND (t0.c0))) IS FALSE));
SELECT ALL * FROM vt2, vt0 CROSS JOIN t0 ON ((vt2.c2) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (vt2.c3)) INNER JOIN v0 ON ((((((v0.c0)>=(vt2.c3)))OR(vt2.c1 COLLATE BINARY)))AND(((v0.c0) BETWEEN (t0.c1) AND (t0.c1)))) WHERE (ABS((vt2.c0 IN ()))) ORDER BY ((((vt2.c0) NOT BETWEEN (vt2.lid) AND (t0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((ABS((vt2.c0 IN ()))) IS TRUE)  as count FROM vt2, vt0 CROSS JOIN t0 ON ((vt2.c2) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (vt2.c3)) INNER JOIN v0 ON ((((((v0.c0)>=(vt2.c3)))OR(vt2.c1 COLLATE BINARY)))AND(((v0.c0) BETWEEN (t0.c1) AND (t0.c1)))) ORDER BY ((((vt2.c0) NOT BETWEEN (vt2.lid) AND (t0.c0))) IS FALSE));
SELECT ALL * FROM vt2, vt0 CROSS JOIN t0 ON ((vt2.c2) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (vt2.c3)) INNER JOIN v0 ON ((((((v0.c0)>=(vt2.c3)))OR(vt2.c1 COLLATE BINARY)))AND(((v0.c0) BETWEEN (t0.c1) AND (t0.c1)))) WHERE (ABS((vt2.c0 IN ()))) ORDER BY ((((vt2.c0) NOT BETWEEN (vt2.lid) AND (t0.c0))) IS FALSE);
SELECT ALL * FROM vt0 WHERE ((~ (((((x'')OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE vt0.c0  WHEN 0.19922973492372298 THEN vt0.c0 ELSE 'Q~넑GHd4g' END COLLATE BINARY, '414826819', ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((((x'')OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN 0.19922973492372298 THEN vt0.c0 ELSE 'Q~넑GHd4g' END COLLATE BINARY, '414826819', ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) DESC);
SELECT ALL * FROM vt0 WHERE ((~ (((((x'')OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE vt0.c0  WHEN 0.19922973492372298 THEN vt0.c0 ELSE 'Q~넑GHd4g' END COLLATE BINARY, '414826819', ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((((x'')OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN 0.19922973492372298 THEN vt0.c0 ELSE 'Q~넑GHd4g' END COLLATE BINARY, '414826819', ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) DESC);
SELECT ALL * FROM vt0 WHERE ((~ (((((x'')OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE vt0.c0  WHEN 0.19922973492372298 THEN vt0.c0 ELSE 'Q~넑GHd4g' END COLLATE BINARY, '414826819', ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) DESC;
SELECT COUNT(*) FROM v0, vt2 WHERE (NULLIF((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c1))), vt2.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c1))), vt2.c1 COLLATE RTRIM)) IS TRUE)  as count FROM v0, vt2);
SELECT COUNT(*) FROM v0, vt2 WHERE (NULLIF((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c1))), vt2.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c1))), vt2.c1 COLLATE RTRIM)) IS TRUE)  as count FROM v0, vt2);
SELECT COUNT(*) FROM v0, vt2 WHERE (NULLIF((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c1))), vt2.c1 COLLATE RTRIM));
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0, 0.2987137000464205, v0.c0)) NOT BETWEEN ((x'', ((v0.c0)|(v0.c0)), v0.c0 COLLATE NOCASE, ((v0.c0)>>(v0.c0)), v0.c0 COLLATE RTRIM)) AND ((json_array_length(v0.c0), v0.c0 COLLATE RTRIM, ((((v0.c0)OR(v0.c0)))OR(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE 0.9889010262793745 END, '-1718223886'))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0, 0.2987137000464205, v0.c0)) NOT BETWEEN ((x'', ((v0.c0)|(v0.c0)), v0.c0 COLLATE NOCASE, ((v0.c0)>>(v0.c0)), v0.c0 COLLATE RTRIM)) AND ((json_array_length(v0.c0), v0.c0 COLLATE RTRIM, ((((v0.c0)OR(v0.c0)))OR(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE 0.9889010262793745 END, '-1718223886')))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0, 0.2987137000464205, v0.c0)) NOT BETWEEN ((x'', ((v0.c0)|(v0.c0)), v0.c0 COLLATE NOCASE, ((v0.c0)>>(v0.c0)), v0.c0 COLLATE RTRIM)) AND ((json_array_length(v0.c0), v0.c0 COLLATE RTRIM, ((((v0.c0)OR(v0.c0)))OR(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE 0.9889010262793745 END, '-1718223886'))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0, 0.2987137000464205, v0.c0)) NOT BETWEEN ((x'', ((v0.c0)|(v0.c0)), v0.c0 COLLATE NOCASE, ((v0.c0)>>(v0.c0)), v0.c0 COLLATE RTRIM)) AND ((json_array_length(v0.c0), v0.c0 COLLATE RTRIM, ((((v0.c0)OR(v0.c0)))OR(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE 0.9889010262793745 END, '-1718223886')))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0, 0.2987137000464205, v0.c0)) NOT BETWEEN ((x'', ((v0.c0)|(v0.c0)), v0.c0 COLLATE NOCASE, ((v0.c0)>>(v0.c0)), v0.c0 COLLATE RTRIM)) AND ((json_array_length(v0.c0), v0.c0 COLLATE RTRIM, ((((v0.c0)OR(v0.c0)))OR(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE 0.9889010262793745 END, '-1718223886'))));
SELECT ALL COUNT(*) FROM vt2, t0 WHERE (((((vt2.lid)OR(vt2.c2)))OR(t0.c48)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt2.lid)OR(vt2.c2)))OR(t0.c48)) COLLATE RTRIM) IS TRUE)  as count FROM vt2, t0);
SELECT ALL COUNT(*) FROM vt2, t0 WHERE (((((vt2.lid)OR(vt2.c2)))OR(t0.c48)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt2.lid)OR(vt2.c2)))OR(t0.c48)) COLLATE RTRIM) IS TRUE)  as count FROM vt2, t0);
SELECT ALL COUNT(*) FROM vt2, t0 WHERE (((((vt2.lid)OR(vt2.c2)))OR(t0.c48)) COLLATE RTRIM);
SELECT ALL * FROM v0, t0 INNER JOIN vt0 ON CASE WHEN COALESCE(DISTINCT -2001535588, v0.c0) THEN CAST(t0.c0 AS BLOB) WHEN (- (t0.c17)) THEN CASE WHEN t0.c0 THEN v0.c0 END WHEN (t0.c0 IN (-479625995)) THEN ((t0.c1)<=(v0.c0)) ELSE CAST(vt0.c0 AS INTEGER) END WHERE (LIKELIHOOD(CASE t0.c17  WHEN v0.c0 THEN t0.c1 END, 0.8589757638123812)) ORDER BY (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((v0.c0))))OR(((t0.c48) ISNULL))))OR((~ (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CASE t0.c17  WHEN v0.c0 THEN t0.c1 END, 0.8589757638123812)) IS TRUE)  as count FROM v0, t0 INNER JOIN vt0 ON CASE WHEN COALESCE(DISTINCT -2001535588, v0.c0) THEN CAST(t0.c0 AS BLOB) WHEN (- (t0.c17)) THEN CASE WHEN t0.c0 THEN v0.c0 END WHEN (t0.c0 IN (-479625995)) THEN ((t0.c1)<=(v0.c0)) ELSE CAST(vt0.c0 AS INTEGER) END ORDER BY (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((v0.c0))))OR(((t0.c48) ISNULL))))OR((~ (vt0.c0)))) DESC);
SELECT ALL * FROM v0, t0 INNER JOIN vt0 ON CASE WHEN COALESCE(DISTINCT -2001535588, v0.c0) THEN CAST(t0.c0 AS BLOB) WHEN (- (t0.c17)) THEN CASE WHEN t0.c0 THEN v0.c0 END WHEN (t0.c0 IN (-479625995)) THEN ((t0.c1)<=(v0.c0)) ELSE CAST(vt0.c0 AS INTEGER) END WHERE (LIKELIHOOD(CASE t0.c17  WHEN v0.c0 THEN t0.c1 END, 0.8589757638123812)) ORDER BY (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((v0.c0))))OR(((t0.c48) ISNULL))))OR((~ (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CASE t0.c17  WHEN v0.c0 THEN t0.c1 END, 0.8589757638123812)) IS TRUE)  as count FROM v0, t0 INNER JOIN vt0 ON CASE WHEN COALESCE(DISTINCT -2001535588, v0.c0) THEN CAST(t0.c0 AS BLOB) WHEN (- (t0.c17)) THEN CASE WHEN t0.c0 THEN v0.c0 END WHEN (t0.c0 IN (-479625995)) THEN ((t0.c1)<=(v0.c0)) ELSE CAST(vt0.c0 AS INTEGER) END ORDER BY (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((v0.c0))))OR(((t0.c48) ISNULL))))OR((~ (vt0.c0)))) DESC);
SELECT ALL * FROM v0, t0 INNER JOIN vt0 ON CASE WHEN COALESCE(DISTINCT -2001535588, v0.c0) THEN CAST(t0.c0 AS BLOB) WHEN (- (t0.c17)) THEN CASE WHEN t0.c0 THEN v0.c0 END WHEN (t0.c0 IN (-479625995)) THEN ((t0.c1)<=(v0.c0)) ELSE CAST(vt0.c0 AS INTEGER) END WHERE (LIKELIHOOD(CASE t0.c17  WHEN v0.c0 THEN t0.c1 END, 0.8589757638123812)) ORDER BY (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((v0.c0))))OR(((t0.c48) ISNULL))))OR((~ (vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN t0 ON '2097146857' RIGHT OUTER JOIN v0 ON CAST(t0.c0 AS TEXT) COLLATE BINARY COLLATE NOCASE WHERE ((- (t0.c48)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c48)) COLLATE BINARY) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN t0 ON '2097146857' RIGHT OUTER JOIN v0 ON CAST(t0.c0 AS TEXT) COLLATE BINARY COLLATE NOCASE);
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN t0 ON '2097146857' RIGHT OUTER JOIN v0 ON CAST(t0.c0 AS TEXT) COLLATE BINARY COLLATE NOCASE WHERE ((- (t0.c48)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c48)) COLLATE BINARY) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN t0 ON '2097146857' RIGHT OUTER JOIN v0 ON CAST(t0.c0 AS TEXT) COLLATE BINARY COLLATE NOCASE);
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN t0 ON '2097146857' RIGHT OUTER JOIN v0 ON CAST(t0.c0 AS TEXT) COLLATE BINARY COLLATE NOCASE WHERE ((- (t0.c48)) COLLATE BINARY);
SELECT ALL * FROM vt2, v0, vt0, t0 WHERE (CAST((((vt0.c0))=((vt2.c0))) AS TEXT)) ORDER BY (+ (x'b4d1'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0))==((vt2.c0))) AS TEXT)) IS TRUE)  as count FROM vt2, v0, vt0, t0 ORDER BY (+ (x'b4d1'))  NULLS LAST);
SELECT ALL * FROM vt2, v0, vt0, t0 WHERE (CAST((((vt0.c0))=((vt2.c0))) AS TEXT)) ORDER BY (+ (x'b4d1'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0))==((vt2.c0))) AS TEXT)) IS TRUE)  as count FROM vt2, v0, vt0, t0 ORDER BY (+ (x'b4d1'))  NULLS LAST);
SELECT ALL * FROM vt2, v0, vt0, t0 WHERE (CAST((((vt0.c0))=((vt2.c0))) AS TEXT)) ORDER BY (+ (x'b4d1'))  NULLS LAST;
SELECT COUNT(*) FROM vt2 NOT INDEXED, vt0, v0, t0 WHERE (((((((vt0.c0)OR(vt2.c0)))AND(vt2.c2))) BETWEEN (((((((((v0.c0)AND(t0.c17)))AND(vt2.c0)))OR(vt2.c2)))OR(vt2.c3))) AND (((t0.c1) NOT BETWEEN (0.43964759857952795) AND (vt2.lid)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt2.c0)))AND(vt2.c2))) BETWEEN (((((((((v0.c0)AND(t0.c17)))AND(vt2.c0)))OR(vt2.c2)))OR(vt2.c3))) AND (((t0.c1) NOT BETWEEN (0.43964759857952795) AND (vt2.lid))))) IS TRUE)  as count FROM vt2, vt0, v0, t0);
SELECT COUNT(*) FROM vt2 NOT INDEXED, vt0, v0, t0 WHERE (((((((vt0.c0)OR(vt2.c0)))AND(vt2.c2))) BETWEEN (((((((((v0.c0)AND(t0.c17)))AND(vt2.c0)))OR(vt2.c2)))OR(vt2.c3))) AND (((t0.c1) NOT BETWEEN (0.43964759857952795) AND (vt2.lid)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt2.c0)))AND(vt2.c2))) BETWEEN (((((((((v0.c0)AND(t0.c17)))AND(vt2.c0)))OR(vt2.c2)))OR(vt2.c3))) AND (((t0.c1) NOT BETWEEN (0.43964759857952795) AND (vt2.lid))))) IS TRUE)  as count FROM vt2, vt0, v0, t0);
SELECT COUNT(*) FROM vt2 NOT INDEXED, vt0, v0, t0 WHERE (((((((vt0.c0)OR(vt2.c0)))AND(vt2.c2))) BETWEEN (((((((((v0.c0)AND(t0.c17)))AND(vt2.c0)))OR(vt2.c2)))OR(vt2.c3))) AND (((t0.c1) NOT BETWEEN (0.43964759857952795) AND (vt2.lid)))));
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((((t0.c0)<(t0.c0)))*(x''))) ORDER BY (+ (((NULL) NOT NULL))) ASC, ((((v0.c0 IN ()), t0.c1 COLLATE BINARY, NULLIF(t0.c17, t0.c48)))<>((vt0.c0, v0.c0 COLLATE NOCASE, ((((((((t0.c0)OR(v0.c0)))OR(v0.c0)))OR(t0.c17)))OR(t0.c17))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<(t0.c0)))*(x''))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (+ (((NULL) NOT NULL))) ASC, ((((v0.c0 IN ()), t0.c1 COLLATE BINARY, NULLIF(t0.c17, t0.c48)))!=((vt0.c0, v0.c0 COLLATE NOCASE, ((((((((t0.c0)OR(v0.c0)))OR(v0.c0)))OR(t0.c17)))OR(t0.c17))))) DESC);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((((t0.c0)<(t0.c0)))*(x''))) ORDER BY (+ (((NULL) NOT NULL))) ASC, ((((v0.c0 IN ()), t0.c1 COLLATE BINARY, NULLIF(t0.c17, t0.c48)))<>((vt0.c0, v0.c0 COLLATE NOCASE, ((((((((t0.c0)OR(v0.c0)))OR(v0.c0)))OR(t0.c17)))OR(t0.c17))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<(t0.c0)))*(x''))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (+ (((NULL) NOT NULL))) ASC, ((((v0.c0 IN ()), t0.c1 COLLATE BINARY, NULLIF(t0.c17, t0.c48)))!=((vt0.c0, v0.c0 COLLATE NOCASE, ((((((((t0.c0)OR(v0.c0)))OR(v0.c0)))OR(t0.c17)))OR(t0.c17))))) DESC);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((((t0.c0)<(t0.c0)))*(x''))) ORDER BY (+ (((NULL) NOT NULL))) ASC, ((((v0.c0 IN ()), t0.c1 COLLATE BINARY, NULLIF(t0.c17, t0.c48)))<>((vt0.c0, v0.c0 COLLATE NOCASE, ((((((((t0.c0)OR(v0.c0)))OR(v0.c0)))OR(t0.c17)))OR(t0.c17))))) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)>=(v0.c0))) NOT BETWEEN (LIKE(v0.c0, v0.c0, 'd')) AND (CAST(-1255939986 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>=(v0.c0))) NOT BETWEEN (LIKE(v0.c0, v0.c0, 'd')) AND (CAST(-1255939986 AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)>=(v0.c0))) NOT BETWEEN (LIKE(v0.c0, v0.c0, 'd')) AND (CAST(-1255939986 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>=(v0.c0))) NOT BETWEEN (LIKE(v0.c0, v0.c0, 'd')) AND (CAST(-1255939986 AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)>=(v0.c0))) NOT BETWEEN (LIKE(v0.c0, v0.c0, 'd')) AND (CAST(-1255939986 AS INTEGER))));
SELECT ALL COUNT(*) FROM v0, vt2, vt0, t0 WHERE (LIKELY(CASE vt2.c1  WHEN t0.c0 THEN vt2.c1 WHEN vt2.c3 THEN NULL WHEN vt2.c1 THEN 649551586 WHEN t0.c1 THEN vt0.c0 WHEN vt2.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CASE vt2.c1  WHEN t0.c0 THEN vt2.c1 WHEN vt2.c3 THEN NULL WHEN vt2.c1 THEN 649551586 WHEN t0.c1 THEN vt0.c0 WHEN vt2.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM v0, vt2, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt2, vt0, t0 WHERE (LIKELY(CASE vt2.c1  WHEN t0.c0 THEN vt2.c1 WHEN vt2.c3 THEN NULL WHEN vt2.c1 THEN 649551586 WHEN t0.c1 THEN vt0.c0 WHEN vt2.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CASE vt2.c1  WHEN t0.c0 THEN vt2.c1 WHEN vt2.c3 THEN NULL WHEN vt2.c1 THEN 649551586 WHEN t0.c1 THEN vt0.c0 WHEN vt2.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM v0, vt2, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt2, vt0, t0 WHERE (LIKELY(CASE vt2.c1  WHEN t0.c0 THEN vt2.c1 WHEN vt2.c3 THEN NULL WHEN vt2.c1 THEN 649551586 WHEN t0.c1 THEN vt0.c0 WHEN vt2.c0 THEN vt0.c0 END));
SELECT * FROM vt2 NATURAL JOIN v0 WHERE (((('-1663779209'))>((((vt2.lid)<=(vt2.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('-1663779209'))>((((vt2.lid)<=(vt2.c0)))))) IS TRUE)  as count FROM vt2 NATURAL JOIN v0);
SELECT * FROM vt2 NATURAL JOIN v0 WHERE (((('-1663779209'))>((((vt2.lid)<=(vt2.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('-1663779209'))>((((vt2.lid)<=(vt2.c0)))))) IS TRUE)  as count FROM vt2 NATURAL JOIN v0);
SELECT * FROM vt2 NATURAL JOIN v0 WHERE (((('-1663779209'))>((((vt2.lid)<=(vt2.c0))))));
SELECT ALL * FROM v0, vt0, vt2 WHERE ((('-1600012232')GLOB(CAST(vt2.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((('-1600012232')GLOB(CAST(vt2.c0 AS BLOB)))) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT ALL * FROM v0, vt0, vt2 WHERE ((('-1600012232')GLOB(CAST(vt2.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((('-1600012232')GLOB(CAST(vt2.c0 AS BLOB)))) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT ALL * FROM v0, vt0, vt2 WHERE ((('-1600012232')GLOB(CAST(vt2.c0 AS BLOB))));
SELECT ALL * FROM t0 NOT INDEXED, v0 WHERE (((((v0.c0)AND(v0.c0))) BETWEEN (CASE WHEN t0.c1 THEN t0.c1 ELSE x'' END) AND (t0.c48 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(v0.c0))) BETWEEN (CASE WHEN t0.c1 THEN t0.c1 ELSE x'' END) AND (t0.c48 COLLATE BINARY))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0 NOT INDEXED, v0 WHERE (((((v0.c0)AND(v0.c0))) BETWEEN (CASE WHEN t0.c1 THEN t0.c1 ELSE x'' END) AND (t0.c48 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(v0.c0))) BETWEEN (CASE WHEN t0.c1 THEN t0.c1 ELSE x'' END) AND (t0.c48 COLLATE BINARY))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0 NOT INDEXED, v0 WHERE (((((v0.c0)AND(v0.c0))) BETWEEN (CASE WHEN t0.c1 THEN t0.c1 ELSE x'' END) AND (t0.c48 COLLATE BINARY)));
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c0)+(vt0.c0)), INSTR(v0.c0, vt0.c0), ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))=(((- (vt0.c0)), NULL, (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)+(vt0.c0)), INSTR(v0.c0, vt0.c0), ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))=(((- (vt0.c0)), NULL, (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c0)+(vt0.c0)), INSTR(v0.c0, vt0.c0), ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))=(((- (vt0.c0)), NULL, (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)+(vt0.c0)), INSTR(v0.c0, vt0.c0), ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))=(((- (vt0.c0)), NULL, (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c0)+(vt0.c0)), INSTR(v0.c0, vt0.c0), ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))=(((- (vt0.c0)), NULL, (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))));
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) IS FALSE));
SELECT COUNT(*) FROM v0, vt0, vt2, t0 WHERE ((- (((vt2.c0)*('1695958771')))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt2.c0)*('1695958771'))))) IS TRUE)  as count FROM v0, vt0, vt2, t0);
SELECT COUNT(*) FROM v0, vt0, vt2, t0 WHERE ((- (((vt2.c0)*('1695958771')))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt2.c0)*('1695958771'))))) IS TRUE)  as count FROM v0, vt0, vt2, t0);
SELECT COUNT(*) FROM v0, vt0, vt2, t0 WHERE ((- (((vt2.c0)*('1695958771')))));
SELECT ALL * FROM vt0, vt2, t0, v0 WHERE (CAST(((((v0.c0)AND(t0.c48)))AND(t0.c48)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)AND(t0.c48)))AND(t0.c48)) AS BLOB)) IS TRUE)  as count FROM vt0, vt2, t0, v0);
SELECT ALL * FROM vt0, vt2, t0, v0 WHERE (CAST(((((v0.c0)AND(t0.c48)))AND(t0.c48)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)AND(t0.c48)))AND(t0.c48)) AS BLOB)) IS TRUE)  as count FROM vt0, vt2, t0, v0);
SELECT ALL * FROM vt0, vt2, t0, v0 WHERE (CAST(((((v0.c0)AND(t0.c48)))AND(t0.c48)) AS BLOB));
SELECT COUNT(*) FROM v0 INNER JOIN vt2 ON (((vt2.c2) NOT BETWEEN (vt2.c1) AND (vt2.c0)) IN ()) RIGHT OUTER JOIN vt0 ON (+ (((vt2.c0)>>(x'')))) WHERE ((((vt2.c3)) NOT BETWEEN (((vt2.c0 IN ()))) AND ((((vt2.c1) ISNULL))))) ORDER BY ((vt2.c3 COLLATE RTRIM) BETWEEN (vt0.c0) AND (vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c3)) NOT BETWEEN (((vt2.c0 IN ()))) AND ((((vt2.c1) ISNULL))))) IS TRUE)  as count FROM v0 INNER JOIN vt2 ON (((vt2.c2) NOT BETWEEN (vt2.c1) AND (vt2.c0)) IN ()) RIGHT OUTER JOIN vt0 ON (+ (((vt2.c0)>>(x'')))) ORDER BY ((vt2.c3 COLLATE RTRIM) BETWEEN (vt0.c0) AND (vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 INNER JOIN vt2 ON (((vt2.c2) NOT BETWEEN (vt2.c1) AND (vt2.c0)) IN ()) RIGHT OUTER JOIN vt0 ON (+ (((vt2.c0)>>(x'')))) WHERE ((((vt2.c3)) NOT BETWEEN (((vt2.c0 IN ()))) AND ((((vt2.c1) ISNULL))))) ORDER BY ((vt2.c3 COLLATE RTRIM) BETWEEN (vt0.c0) AND (vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c3)) NOT BETWEEN (((vt2.c0 IN ()))) AND ((((vt2.c1) ISNULL))))) IS TRUE)  as count FROM v0 INNER JOIN vt2 ON (((vt2.c2) NOT BETWEEN (vt2.c1) AND (vt2.c0)) IN ()) RIGHT OUTER JOIN vt0 ON (+ (((vt2.c0)>>(x'')))) ORDER BY ((vt2.c3 COLLATE RTRIM) BETWEEN (vt0.c0) AND (vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 INNER JOIN vt2 ON (((vt2.c2) NOT BETWEEN (vt2.c1) AND (vt2.c0)) IN ()) RIGHT OUTER JOIN vt0 ON (+ (((vt2.c0)>>(x'')))) WHERE ((((vt2.c3)) NOT BETWEEN (((vt2.c0 IN ()))) AND ((((vt2.c1) ISNULL))))) ORDER BY ((vt2.c3 COLLATE RTRIM) BETWEEN (vt0.c0) AND (vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0, vt2 WHERE (((CASE WHEN vt2.lid THEN vt2.c3 ELSE vt0.c0 END)OR(LOWER(DISTINCT vt2.c2))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt2.lid THEN vt2.c3 ELSE vt0.c0 END)OR(LOWER(DISTINCT vt2.c2)))) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT ALL COUNT(*) FROM vt0, v0, vt2 WHERE (((CASE WHEN vt2.lid THEN vt2.c3 ELSE vt0.c0 END)OR(LOWER(DISTINCT vt2.c2))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt2.lid THEN vt2.c3 ELSE vt0.c0 END)OR(LOWER(DISTINCT vt2.c2)))) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT ALL COUNT(*) FROM vt0, v0, vt2 WHERE (((CASE WHEN vt2.lid THEN vt2.c3 ELSE vt0.c0 END)OR(LOWER(DISTINCT vt2.c2))));
SELECT COUNT(*) FROM t0, vt2, vt0, v0 WHERE ((vt2.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((vt2.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, vt2, vt0, v0);
SELECT COUNT(*) FROM t0, vt2, vt0, v0 WHERE ((vt2.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((vt2.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, vt2, vt0, v0);
SELECT COUNT(*) FROM t0, vt2, vt0, v0 WHERE ((vt2.c0 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM v0, vt2 WHERE (((((v0.c0))=(('5u)9^'))) IN ())) ORDER BY rtreenode((NOT (vt2.c0)), NULL) ASC  NULLS LAST, vt2.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0))=(('5u)9^'))) IN ())) IS TRUE)  as count FROM v0, vt2 ORDER BY rtreenode((NOT (vt2.c0)), NULL) ASC  NULLS LAST, vt2.c3 ASC);
SELECT COUNT(*) FROM v0, vt2 WHERE (((((v0.c0))=(('5u)9^'))) IN ())) ORDER BY rtreenode((NOT (vt2.c0)), NULL) ASC  NULLS LAST, vt2.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0))=(('5u)9^'))) IN ())) IS TRUE)  as count FROM v0, vt2 ORDER BY rtreenode((NOT (vt2.c0)), NULL) ASC  NULLS LAST, vt2.c3 ASC);
SELECT COUNT(*) FROM v0, vt2 WHERE (((((v0.c0))=(('5u)9^'))) IN ())) ORDER BY rtreenode((NOT (vt2.c0)), NULL) ASC  NULLS LAST, vt2.c3 ASC;
SELECT ALL * FROM v0, t0, vt0, vt2 WHERE (((UNLIKELY('-1e500')) BETWEEN (((0.48308226761430884)-(vt2.lid))) AND (CAST(t0.c48 AS REAL)))) ORDER BY CASE vt2.lid COLLATE BINARY  WHEN CASE vt2.c0  WHEN v0.c0 THEN vt2.c0 WHEN t0.c17 THEN t0.c48 WHEN t0.c0 THEN vt0.c0 ELSE vt2.c1 END THEN (+ (vt2.c0)) WHEN (vt2.lid IN ()) THEN t0.c1 WHEN (((vt2.c2, t0.c0, t0.c48)) BETWEEN ((t0.c0, t0.c17, t0.c0)) AND ((vt2.c0, vt2.c3, vt2.c0))) THEN t0.c48 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY('-1e500')) BETWEEN (((0.48308226761430884)-(vt2.lid))) AND (CAST(t0.c48 AS REAL)))) IS TRUE)  as count FROM v0, t0, vt0, vt2 ORDER BY CASE vt2.lid COLLATE BINARY  WHEN CASE vt2.c0  WHEN v0.c0 THEN vt2.c0 WHEN t0.c17 THEN t0.c48 WHEN t0.c0 THEN vt0.c0 ELSE vt2.c1 END THEN (+ (vt2.c0)) WHEN (vt2.lid IN ()) THEN t0.c1 WHEN (((vt2.c2, t0.c0, t0.c48)) BETWEEN ((t0.c0, t0.c17, t0.c0)) AND ((vt2.c0, vt2.c3, vt2.c0))) THEN t0.c48 END DESC  NULLS FIRST);
SELECT ALL * FROM v0, t0, vt0, vt2 WHERE (((UNLIKELY('-1e500')) BETWEEN (((0.48308226761430884)-(vt2.lid))) AND (CAST(t0.c48 AS REAL)))) ORDER BY CASE vt2.lid COLLATE BINARY  WHEN CASE vt2.c0  WHEN v0.c0 THEN vt2.c0 WHEN t0.c17 THEN t0.c48 WHEN t0.c0 THEN vt0.c0 ELSE vt2.c1 END THEN (+ (vt2.c0)) WHEN (vt2.lid IN ()) THEN t0.c1 WHEN (((vt2.c2, t0.c0, t0.c48)) BETWEEN ((t0.c0, t0.c17, t0.c0)) AND ((vt2.c0, vt2.c3, vt2.c0))) THEN t0.c48 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY('-1e500')) BETWEEN (((0.48308226761430884)-(vt2.lid))) AND (CAST(t0.c48 AS REAL)))) IS TRUE)  as count FROM v0, t0, vt0, vt2 ORDER BY CASE vt2.lid COLLATE BINARY  WHEN CASE vt2.c0  WHEN v0.c0 THEN vt2.c0 WHEN t0.c17 THEN t0.c48 WHEN t0.c0 THEN vt0.c0 ELSE vt2.c1 END THEN (+ (vt2.c0)) WHEN (vt2.lid IN ()) THEN t0.c1 WHEN (((vt2.c2, t0.c0, t0.c48)) BETWEEN ((t0.c0, t0.c17, t0.c0)) AND ((vt2.c0, vt2.c3, vt2.c0))) THEN t0.c48 END DESC  NULLS FIRST);
SELECT ALL * FROM v0, t0, vt0, vt2 WHERE (((UNLIKELY('-1e500')) BETWEEN (((0.48308226761430884)-(vt2.lid))) AND (CAST(t0.c48 AS REAL)))) ORDER BY CASE vt2.lid COLLATE BINARY  WHEN CASE vt2.c0  WHEN v0.c0 THEN vt2.c0 WHEN t0.c17 THEN t0.c48 WHEN t0.c0 THEN vt0.c0 ELSE vt2.c1 END THEN (+ (vt2.c0)) WHEN (vt2.lid IN ()) THEN t0.c1 WHEN (((vt2.c2, t0.c0, t0.c48)) BETWEEN ((t0.c0, t0.c17, t0.c0)) AND ((vt2.c0, vt2.c3, vt2.c0))) THEN t0.c48 END DESC  NULLS FIRST;
SELECT * FROM vt0, v0, t0 WHERE (((CASE t0.c17  WHEN t0.c48 THEN vt0.c0 ELSE t0.c1 END)GLOB(((((((((vt0.c0)AND(t0.c0)))AND(v0.c0)))AND(t0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c17  WHEN t0.c48 THEN vt0.c0 ELSE t0.c1 END)GLOB(((((((((vt0.c0)AND(t0.c0)))AND(v0.c0)))AND(t0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (((CASE t0.c17  WHEN t0.c48 THEN vt0.c0 ELSE t0.c1 END)GLOB(((((((((vt0.c0)AND(t0.c0)))AND(v0.c0)))AND(t0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c17  WHEN t0.c48 THEN vt0.c0 ELSE t0.c1 END)GLOB(((((((((vt0.c0)AND(t0.c0)))AND(v0.c0)))AND(t0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (((CASE t0.c17  WHEN t0.c48 THEN vt0.c0 ELSE t0.c1 END)GLOB(((((((((vt0.c0)AND(t0.c0)))AND(v0.c0)))AND(t0.c0)))AND(v0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN vt2 ON ((((vt2.c3)GLOB(vt2.c0))) NOT NULL) WHERE ((((((vt0.c0)) BETWEEN ((vt2.c3)) AND ((vt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt2.c3)) AND ((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN vt2 ON ((((vt2.c3)GLOB(vt2.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN vt2 ON ((((vt2.c3)GLOB(vt2.c0))) NOT NULL) WHERE ((((((vt0.c0)) BETWEEN ((vt2.c3)) AND ((vt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt2.c3)) AND ((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN vt2 ON ((((vt2.c3)GLOB(vt2.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN vt2 ON ((((vt2.c3)GLOB(vt2.c0))) NOT NULL) WHERE ((((((vt0.c0)) BETWEEN ((vt2.c3)) AND ((vt0.c0)))) NOT NULL));
SELECT COUNT(*) FROM v0, vt0 WHERE (0X45844499) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0x45844499) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (0X45844499) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0x45844499) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (0X45844499) ORDER BY v0.c0  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt2 WHERE (CASE WHEN (((vt2.c2, vt2.c3, vt2.lid)) NOT BETWEEN ((x'2d6a', 0X301622fd, vt0.c0)) AND ((vt2.c2, vt2.c1, vt2.lid))) THEN ((((vt2.lid)OR(vt2.c1)))OR(vt2.lid)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt2.c2, vt2.c3, vt2.lid)) NOT BETWEEN ((x'2d6a', 0X301622fd, vt0.c0)) AND ((vt2.c2, vt2.c1, vt2.lid))) THEN ((((vt2.lid)OR(vt2.c1)))OR(vt2.lid)) END) IS TRUE)  as count FROM vt0 NOT INDEXED, vt2);
SELECT COUNT(*) FROM vt0, vt2 WHERE (CASE WHEN (((vt2.c2, vt2.c3, vt2.lid)) NOT BETWEEN ((x'2d6a', 0X301622fd, vt0.c0)) AND ((vt2.c2, vt2.c1, vt2.lid))) THEN ((((vt2.lid)OR(vt2.c1)))OR(vt2.lid)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt2.c2, vt2.c3, vt2.lid)) NOT BETWEEN ((x'2d6a', 0X301622fd, vt0.c0)) AND ((vt2.c2, vt2.c1, vt2.lid))) THEN ((((vt2.lid)OR(vt2.c1)))OR(vt2.lid)) END) IS TRUE)  as count FROM vt0 NOT INDEXED, vt2);
SELECT COUNT(*) FROM vt0, vt2 WHERE (CASE WHEN (((vt2.c2, vt2.c3, vt2.lid)) NOT BETWEEN ((x'2d6a', 0X301622fd, vt0.c0)) AND ((vt2.c2, vt2.c1, vt2.lid))) THEN ((((vt2.lid)OR(vt2.c1)))OR(vt2.lid)) END);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((vt2.c1) NOT BETWEEN (CASE vt2.c2  WHEN 0xffffffffd2b98780 THEN vt2.c3 WHEN t0.c0 THEN vt2.c1 WHEN t0.c0 THEN vt2.c1 WHEN vt0.c0 THEN vt2.c0 WHEN t0.c48 THEN t0.c1 ELSE t0.c1 END) AND (((((((((t0.c17)OR(t0.c0)))OR(vt2.c0)))AND(vt0.c0)))AND(vt2.c0)))) RIGHT OUTER JOIN vt2 ON t0.c0 COLLATE NOCASE CROSS JOIN v0 ON CASE WHEN LIKELY(DISTINCT vt2.c0) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE (t0.c17 IN (vt2.c1)) END WHERE (((NULL)|(vt2.c2)) COLLATE RTRIM) ORDER BY ((NULL)>>(t0.c1)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)|(vt2.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((vt2.c1) NOT BETWEEN (CASE vt2.c2  WHEN 0Xffffffffd2b98780 THEN vt2.c3 WHEN t0.c0 THEN vt2.c1 WHEN t0.c0 THEN vt2.c1 WHEN vt0.c0 THEN vt2.c0 WHEN t0.c48 THEN t0.c1 ELSE t0.c1 END) AND (((((((((t0.c17)OR(t0.c0)))OR(vt2.c0)))AND(vt0.c0)))AND(vt2.c0)))) RIGHT OUTER JOIN vt2 ON t0.c0 COLLATE NOCASE CROSS JOIN v0 ON CASE WHEN LIKELY(DISTINCT vt2.c0) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE (t0.c17 IN (vt2.c1)) END ORDER BY ((NULL)>>(t0.c1)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((vt2.c1) NOT BETWEEN (CASE vt2.c2  WHEN 0xffffffffd2b98780 THEN vt2.c3 WHEN t0.c0 THEN vt2.c1 WHEN t0.c0 THEN vt2.c1 WHEN vt0.c0 THEN vt2.c0 WHEN t0.c48 THEN t0.c1 ELSE t0.c1 END) AND (((((((((t0.c17)OR(t0.c0)))OR(vt2.c0)))AND(vt0.c0)))AND(vt2.c0)))) RIGHT OUTER JOIN vt2 ON t0.c0 COLLATE NOCASE CROSS JOIN v0 ON CASE WHEN LIKELY(DISTINCT vt2.c0) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE (t0.c17 IN (vt2.c1)) END WHERE (((NULL)|(vt2.c2)) COLLATE RTRIM) ORDER BY ((NULL)>>(t0.c1)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)|(vt2.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((vt2.c1) NOT BETWEEN (CASE vt2.c2  WHEN 0Xffffffffd2b98780 THEN vt2.c3 WHEN t0.c0 THEN vt2.c1 WHEN t0.c0 THEN vt2.c1 WHEN vt0.c0 THEN vt2.c0 WHEN t0.c48 THEN t0.c1 ELSE t0.c1 END) AND (((((((((t0.c17)OR(t0.c0)))OR(vt2.c0)))AND(vt0.c0)))AND(vt2.c0)))) RIGHT OUTER JOIN vt2 ON t0.c0 COLLATE NOCASE CROSS JOIN v0 ON CASE WHEN LIKELY(DISTINCT vt2.c0) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE (t0.c17 IN (vt2.c1)) END ORDER BY ((NULL)>>(t0.c1)) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))!=((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))!=((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))!=((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))!=((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))!=((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt2 RIGHT OUTER JOIN vt0 ON (((vt2.c1 IN (vt0.c0))) IS TRUE) INNER JOIN v0 ON (- ((+ (vt2.c0)))) RIGHT OUTER JOIN t0 ON ((((t0.c17) NOT BETWEEN (t0.c48) AND (t0.c48)))%(vt2.c0)) WHERE (CAST((((vt2.lid))>((vt2.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt2.lid))>((vt2.c0))) AS BLOB)) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN vt0 ON (((vt2.c1 IN (vt0.c0))) IS TRUE) INNER JOIN v0 ON (- ((+ (vt2.c0)))) RIGHT OUTER JOIN t0 ON ((((t0.c17) NOT BETWEEN (t0.c48) AND (t0.c48)))%(vt2.c0)));
SELECT ALL COUNT(*) FROM vt2 RIGHT OUTER JOIN vt0 ON (((vt2.c1 IN (vt0.c0))) IS TRUE) INNER JOIN v0 ON (- ((+ (vt2.c0)))) RIGHT OUTER JOIN t0 ON ((((t0.c17) NOT BETWEEN (t0.c48) AND (t0.c48)))%(vt2.c0)) WHERE (CAST((((vt2.lid))>((vt2.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt2.lid))>((vt2.c0))) AS BLOB)) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN vt0 ON (((vt2.c1 IN (vt0.c0))) IS TRUE) INNER JOIN v0 ON (- ((+ (vt2.c0)))) RIGHT OUTER JOIN t0 ON ((((t0.c17) NOT BETWEEN (t0.c48) AND (t0.c48)))%(vt2.c0)));
SELECT ALL COUNT(*) FROM vt2 RIGHT OUTER JOIN vt0 ON (((vt2.c1 IN (vt0.c0))) IS TRUE) INNER JOIN v0 ON (- ((+ (vt2.c0)))) RIGHT OUTER JOIN t0 ON ((((t0.c17) NOT BETWEEN (t0.c48) AND (t0.c48)))%(vt2.c0)) WHERE (CAST((((vt2.lid))>((vt2.c0))) AS BLOB));
SELECT * FROM vt2, v0 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM vt2, v0);
SELECT * FROM vt2, v0 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM vt2, v0);
SELECT * FROM vt2, v0 WHERE (((NULL) NOT NULL));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt2 ON (((((t0.c48)OR(vt2.c1)))AND(t0.c1)) IN ()) WHERE (((((t0.c17)&(t0.c17))) NOT BETWEEN (t0.c17) AND ((- (t0.c0))))) ORDER BY IFNULL(DISTINCT ((vt2.lid)AND(vt2.c1)), t0.c17 COLLATE RTRIM) DESC  NULLS LAST, vt2.c3 DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c17)&(t0.c17))) NOT BETWEEN (t0.c17) AND ((- (t0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt2 ON (((((t0.c48)OR(vt2.c1)))AND(t0.c1)) IN ()) ORDER BY IFNULL(DISTINCT ((vt2.lid)AND(vt2.c1)), t0.c17 COLLATE RTRIM) DESC  NULLS LAST, vt2.c3 DESC);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt2 ON (((((t0.c48)OR(vt2.c1)))AND(t0.c1)) IN ()) WHERE (((((t0.c17)&(t0.c17))) NOT BETWEEN (t0.c17) AND ((- (t0.c0))))) ORDER BY IFNULL(DISTINCT ((vt2.lid)AND(vt2.c1)), t0.c17 COLLATE RTRIM) DESC  NULLS LAST, vt2.c3 DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c17)&(t0.c17))) NOT BETWEEN (t0.c17) AND ((- (t0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt2 ON (((((t0.c48)OR(vt2.c1)))AND(t0.c1)) IN ()) ORDER BY IFNULL(DISTINCT ((vt2.lid)AND(vt2.c1)), t0.c17 COLLATE RTRIM) DESC  NULLS LAST, vt2.c3 DESC);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt2 ON (((((t0.c48)OR(vt2.c1)))AND(t0.c1)) IN ()) WHERE (((((t0.c17)&(t0.c17))) NOT BETWEEN (t0.c17) AND ((- (t0.c0))))) ORDER BY IFNULL(DISTINCT ((vt2.lid)AND(vt2.c1)), t0.c17 COLLATE RTRIM) DESC  NULLS LAST, vt2.c3 DESC;
SELECT * FROM v0, vt0, t0 WHERE (((t0.c0)-(t0.c48)) COLLATE NOCASE) ORDER BY COALESCE(DISTINCT t0.c48 COLLATE RTRIM, ((t0.c17)>=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((t0.c0)-(t0.c48)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY COALESCE(DISTINCT t0.c48 COLLATE RTRIM, ((t0.c17)>=(vt0.c0))));
SELECT * FROM v0, vt0, t0 WHERE (((t0.c0)-(t0.c48)) COLLATE NOCASE) ORDER BY COALESCE(DISTINCT t0.c48 COLLATE RTRIM, ((t0.c17)>=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((t0.c0)-(t0.c48)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY COALESCE(DISTINCT t0.c48 COLLATE RTRIM, ((t0.c17)>=(vt0.c0))));
SELECT * FROM v0, vt0, t0 WHERE (((t0.c0)-(t0.c48)) COLLATE NOCASE) ORDER BY COALESCE(DISTINCT t0.c48 COLLATE RTRIM, ((t0.c17)>=(vt0.c0)));
SELECT ALL * FROM t0, vt0 WHERE (((((((t0.c1) IS TRUE))AND(((vt0.c0) BETWEEN (NULL) AND (t0.c17)))))AND(CASE WHEN t0.c0 THEN t0.c48 ELSE t0.c17 END))) ORDER BY (('-747194916')AND(vt0.c0)) COLLATE NOCASE COLLATE NOCASE, CAST(NULL AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1) IS TRUE))AND(((vt0.c0) BETWEEN (NULL) AND (t0.c17)))))AND(CASE WHEN t0.c0 THEN t0.c48 ELSE t0.c17 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY (('-747194916')AND(vt0.c0)) COLLATE NOCASE COLLATE NOCASE, CAST(NULL AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((((((t0.c1) IS TRUE))AND(((vt0.c0) BETWEEN (NULL) AND (t0.c17)))))AND(CASE WHEN t0.c0 THEN t0.c48 ELSE t0.c17 END))) ORDER BY (('-747194916')AND(vt0.c0)) COLLATE NOCASE COLLATE NOCASE, CAST(NULL AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1) IS TRUE))AND(((vt0.c0) BETWEEN (NULL) AND (t0.c17)))))AND(CASE WHEN t0.c0 THEN t0.c48 ELSE t0.c17 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY (('-747194916')AND(vt0.c0)) COLLATE NOCASE COLLATE NOCASE, CAST(NULL AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((((((t0.c1) IS TRUE))AND(((vt0.c0) BETWEEN (NULL) AND (t0.c17)))))AND(CASE WHEN t0.c0 THEN t0.c48 ELSE t0.c17 END))) ORDER BY (('-747194916')AND(vt0.c0)) COLLATE NOCASE COLLATE NOCASE, CAST(NULL AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, vt2 WHERE ((((((vt2.c3)OR(vt2.lid))))<((-1506362855))));
SELECT SUM(count) FROM (SELECT (((((((vt2.c3)OR(vt2.lid))))<((-1506362855)))) IS TRUE)  as count FROM vt0, t0, vt2);
SELECT COUNT(*) FROM vt0, t0, vt2 WHERE ((((((vt2.c3)OR(vt2.lid))))<((-1506362855))));
SELECT SUM(count) FROM (SELECT (((((((vt2.c3)OR(vt2.lid))))<((-1506362855)))) IS TRUE)  as count FROM vt0, t0, vt2);
SELECT COUNT(*) FROM vt0, t0, vt2 WHERE ((((((vt2.c3)OR(vt2.lid))))<((-1506362855))));
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0)GLOB(v0.c0)), (v0.c0 IN ()), ((v0.c0)LIKE(v0.c0)))) AND (((NOT (v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0)GLOB(v0.c0)), (v0.c0 IN ()), ((v0.c0)LIKE(v0.c0)))) AND (((NOT (v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0) NOT NULL))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0)GLOB(v0.c0)), (v0.c0 IN ()), ((v0.c0)LIKE(v0.c0)))) AND (((NOT (v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0)GLOB(v0.c0)), (v0.c0 IN ()), ((v0.c0)LIKE(v0.c0)))) AND (((NOT (v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0) NOT NULL))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0)GLOB(v0.c0)), (v0.c0 IN ()), ((v0.c0)LIKE(v0.c0)))) AND (((NOT (v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0) NOT NULL)))));
SELECT ALL * FROM v0 NOT INDEXED, t0 WHERE (((CAST(t0.c17 AS INTEGER))<<(UNLIKELY(DISTINCT t0.c1)))) ORDER BY ((((']C>V饁1e500000bZ') NOT NULL))&(((v0.c0)<=(t0.c1))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c17 AS INTEGER))<<(UNLIKELY(DISTINCT t0.c1)))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((']C>V饁1e500000bZ') NOT NULL))&(((v0.c0)<=(t0.c1)))));
SELECT ALL * FROM v0 NOT INDEXED, t0 WHERE (((CAST(t0.c17 AS INTEGER))<<(UNLIKELY(DISTINCT t0.c1)))) ORDER BY ((((']C>V饁1e500000bZ') NOT NULL))&(((v0.c0)<=(t0.c1))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c17 AS INTEGER))<<(UNLIKELY(DISTINCT t0.c1)))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((']C>V饁1e500000bZ') NOT NULL))&(((v0.c0)<=(t0.c1)))));
SELECT ALL * FROM v0 NOT INDEXED, t0 WHERE (((CAST(t0.c17 AS INTEGER))<<(UNLIKELY(DISTINCT t0.c1)))) ORDER BY ((((']C>V饁1e500000bZ') NOT NULL))&(((v0.c0)<=(t0.c1))));
SELECT ALL * FROM vt0, t0, v0 FULL OUTER JOIN vt2 ON (((x'' IN (t0.c17))) IS TRUE) WHERE (CASE vt0.c0  WHEN v0.c0 THEN ((v0.c0) BETWEEN (vt2.c0) AND (vt2.lid)) ELSE ((x'')%(NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN v0.c0 THEN ((v0.c0) BETWEEN (vt2.c0) AND (vt2.lid)) ELSE ((x'')%(NULL)) END) IS TRUE)  as count FROM vt0, t0, v0 FULL OUTER JOIN vt2 ON (((x'' IN (t0.c17))) IS TRUE));
SELECT ALL * FROM vt0, t0, v0 FULL OUTER JOIN vt2 ON (((x'' IN (t0.c17))) IS TRUE) WHERE (CASE vt0.c0  WHEN v0.c0 THEN ((v0.c0) BETWEEN (vt2.c0) AND (vt2.lid)) ELSE ((x'')%(NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN v0.c0 THEN ((v0.c0) BETWEEN (vt2.c0) AND (vt2.lid)) ELSE ((x'')%(NULL)) END) IS TRUE)  as count FROM vt0, t0, v0 FULL OUTER JOIN vt2 ON (((x'' IN (t0.c17))) IS TRUE));
SELECT ALL * FROM vt0, t0, v0 FULL OUTER JOIN vt2 ON (((x'' IN (t0.c17))) IS TRUE) WHERE (CASE vt0.c0  WHEN v0.c0 THEN ((v0.c0) BETWEEN (vt2.c0) AND (vt2.lid)) ELSE ((x'')%(NULL)) END);
SELECT ALL * FROM t0, v0 WHERE (((((t0.c1)>(t0.c48)))+(((v0.c0) NOT BETWEEN (t0.c17) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)>(t0.c48)))+(((v0.c0) NOT BETWEEN (t0.c17) AND (t0.c1))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((((t0.c1)>(t0.c48)))+(((v0.c0) NOT BETWEEN (t0.c17) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)>(t0.c48)))+(((v0.c0) NOT BETWEEN (t0.c17) AND (t0.c1))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((((t0.c1)>(t0.c48)))+(((v0.c0) NOT BETWEEN (t0.c17) AND (t0.c1)))));
SELECT COUNT(*) FROM vt2, t0 INNER JOIN v0 ON ((t0.c0) NOTNULL) COLLATE RTRIM WHERE (((vt2.c1) NOT BETWEEN (0.5197534075452904) AND (vt2.c1)) COLLATE NOCASE) ORDER BY (((SQLITE_COMPILEOPTION_USED(vt2.lid), (((v0.c0, NULL, vt2.c3)) NOT BETWEEN ((vt2.c3, t0.c48, vt2.c1)) AND ((t0.c0, t0.c0, vt2.c2))), (+ (vt2.c0))))<(((+ (t0.c48)), (((v0.c0)) BETWEEN ((t0.c48)) AND ((vt2.c0))), ((v0.c0) NOT NULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c1) NOT BETWEEN (0.5197534075452904) AND (vt2.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt2, t0 INNER JOIN v0 ON ((t0.c0) NOTNULL) COLLATE RTRIM ORDER BY (((SQLITE_COMPILEOPTION_USED(vt2.lid), (((v0.c0, NULL, vt2.c3)) NOT BETWEEN ((vt2.c3, t0.c48, vt2.c1)) AND ((t0.c0, t0.c0, vt2.c2))), (+ (vt2.c0))))<(((+ (t0.c48)), (((v0.c0)) BETWEEN ((t0.c48)) AND ((vt2.c0))), ((v0.c0) NOT NULL)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt2, t0 INNER JOIN v0 ON ((t0.c0) NOTNULL) COLLATE RTRIM WHERE (((vt2.c1) NOT BETWEEN (0.5197534075452904) AND (vt2.c1)) COLLATE NOCASE) ORDER BY (((SQLITE_COMPILEOPTION_USED(vt2.lid), (((v0.c0, NULL, vt2.c3)) NOT BETWEEN ((vt2.c3, t0.c48, vt2.c1)) AND ((t0.c0, t0.c0, vt2.c2))), (+ (vt2.c0))))<(((+ (t0.c48)), (((v0.c0)) BETWEEN ((t0.c48)) AND ((vt2.c0))), ((v0.c0) NOT NULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c1) NOT BETWEEN (0.5197534075452904) AND (vt2.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt2, t0 INNER JOIN v0 ON ((t0.c0) NOTNULL) COLLATE RTRIM ORDER BY (((SQLITE_COMPILEOPTION_USED(vt2.lid), (((v0.c0, NULL, vt2.c3)) NOT BETWEEN ((vt2.c3, t0.c48, vt2.c1)) AND ((t0.c0, t0.c0, vt2.c2))), (+ (vt2.c0))))<(((+ (t0.c48)), (((v0.c0)) BETWEEN ((t0.c48)) AND ((vt2.c0))), ((v0.c0) NOT NULL)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt2, t0 INNER JOIN v0 ON ((t0.c0) NOTNULL) COLLATE RTRIM WHERE (((vt2.c1) NOT BETWEEN (0.5197534075452904) AND (vt2.c1)) COLLATE NOCASE) ORDER BY (((SQLITE_COMPILEOPTION_USED(vt2.lid), (((v0.c0, NULL, vt2.c3)) NOT BETWEEN ((vt2.c3, t0.c48, vt2.c1)) AND ((t0.c0, t0.c0, vt2.c2))), (+ (vt2.c0))))<(((+ (t0.c48)), (((v0.c0)) BETWEEN ((t0.c48)) AND ((vt2.c0))), ((v0.c0) NOT NULL)))) ASC  NULLS FIRST;
SELECT * FROM vt0, t0, vt2 WHERE (vt2.c1) ORDER BY ((json_array(vt2.lid, t0.c17, vt2.c0, vt2.c1)) BETWEEN (((((vt2.c2)AND(vt0.c0)))OR(vt2.c3))) AND (((((t0.c17)OR(t0.c17)))AND(vt2.c0))))  NULLS LAST, ((t0.c17 COLLATE RTRIM) ISNULL), ((((vt2.lid)>=(vt2.c1))) NOT BETWEEN (CASE t0.c48  WHEN vt2.c2 THEN t0.c0 WHEN t0.c0 THEN vt2.c1 WHEN t0.c1 THEN t0.c48 ELSE vt2.c1 END) AND (t0.c48)) ASC;
SELECT SUM(count) FROM (SELECT ((vt2.c1) IS TRUE)  as count FROM vt0, t0, vt2 ORDER BY ((json_array(vt2.lid, t0.c17, vt2.c0, vt2.c1)) BETWEEN (((((vt2.c2)AND(vt0.c0)))OR(vt2.c3))) AND (((((t0.c17)OR(t0.c17)))AND(vt2.c0))))  NULLS LAST, ((t0.c17 COLLATE RTRIM) ISNULL), ((((vt2.lid)>=(vt2.c1))) NOT BETWEEN (CASE t0.c48  WHEN vt2.c2 THEN t0.c0 WHEN t0.c0 THEN vt2.c1 WHEN t0.c1 THEN t0.c48 ELSE vt2.c1 END) AND (t0.c48)) ASC);
SELECT * FROM vt0, t0, vt2 WHERE (vt2.c1) ORDER BY ((json_array(vt2.lid, t0.c17, vt2.c0, vt2.c1)) BETWEEN (((((vt2.c2)AND(vt0.c0)))OR(vt2.c3))) AND (((((t0.c17)OR(t0.c17)))AND(vt2.c0))))  NULLS LAST, ((t0.c17 COLLATE RTRIM) ISNULL), ((((vt2.lid)>=(vt2.c1))) NOT BETWEEN (CASE t0.c48  WHEN vt2.c2 THEN t0.c0 WHEN t0.c0 THEN vt2.c1 WHEN t0.c1 THEN t0.c48 ELSE vt2.c1 END) AND (t0.c48)) ASC;
SELECT SUM(count) FROM (SELECT ((vt2.c1) IS TRUE)  as count FROM vt0, t0, vt2 ORDER BY ((json_array(vt2.lid, t0.c17, vt2.c0, vt2.c1)) BETWEEN (((((vt2.c2)AND(vt0.c0)))OR(vt2.c3))) AND (((((t0.c17)OR(t0.c17)))AND(vt2.c0))))  NULLS LAST, ((t0.c17 COLLATE RTRIM) ISNULL), ((((vt2.lid)>=(vt2.c1))) NOT BETWEEN (CASE t0.c48  WHEN vt2.c2 THEN t0.c0 WHEN t0.c0 THEN vt2.c1 WHEN t0.c1 THEN t0.c48 ELSE vt2.c1 END) AND (t0.c48)) ASC);
SELECT ALL * FROM t0, vt2, vt0, v0 WHERE ((((t0.c1 IN ())) NOT BETWEEN ((((t0.c0)) BETWEEN ((vt2.c2)) AND ((v0.c0)))) AND ((((vt2.c2, vt2.c0, t0.c48, t0.c0, vt2.c3)) NOT BETWEEN ((v0.c0, t0.c1, t0.c1, vt2.c0, t0.c48)) AND ((vt2.c1, t0.c48, x'', t0.c48, vt2.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ())) NOT BETWEEN ((((t0.c0)) BETWEEN ((vt2.c2)) AND ((v0.c0)))) AND ((((vt2.c2, vt2.c0, t0.c48, t0.c0, vt2.c3)) NOT BETWEEN ((v0.c0, t0.c1, t0.c1, vt2.c0, t0.c48)) AND ((vt2.c1, t0.c48, x'', t0.c48, vt2.c1)))))) IS TRUE)  as count FROM t0, vt2, vt0, v0);
SELECT ALL * FROM t0, vt2, vt0, v0 WHERE ((((t0.c1 IN ())) NOT BETWEEN ((((t0.c0)) BETWEEN ((vt2.c2)) AND ((v0.c0)))) AND ((((vt2.c2, vt2.c0, t0.c48, t0.c0, vt2.c3)) NOT BETWEEN ((v0.c0, t0.c1, t0.c1, vt2.c0, t0.c48)) AND ((vt2.c1, t0.c48, x'', t0.c48, vt2.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ())) NOT BETWEEN ((((t0.c0)) BETWEEN ((vt2.c2)) AND ((v0.c0)))) AND ((((vt2.c2, vt2.c0, t0.c48, t0.c0, vt2.c3)) NOT BETWEEN ((v0.c0, t0.c1, t0.c1, vt2.c0, t0.c48)) AND ((vt2.c1, t0.c48, x'', t0.c48, vt2.c1)))))) IS TRUE)  as count FROM t0, vt2, vt0, v0);
SELECT ALL * FROM t0, vt2, vt0, v0 WHERE ((((t0.c1 IN ())) NOT BETWEEN ((((t0.c0)) BETWEEN ((vt2.c2)) AND ((v0.c0)))) AND ((((vt2.c2, vt2.c0, t0.c48, t0.c0, vt2.c3)) NOT BETWEEN ((v0.c0, t0.c1, t0.c1, vt2.c0, t0.c48)) AND ((vt2.c1, t0.c48, x'', t0.c48, vt2.c1))))));
SELECT * FROM v0 NATURAL JOIN vt2 WHERE ('1696732331') ORDER BY (((LIKE(vt2.c3, vt2.c0)))<((CASE vt2.c2  WHEN vt2.c3 THEN vt2.lid END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1696732331') IS TRUE)  as count FROM v0 NATURAL JOIN vt2 ORDER BY (((LIKE(vt2.c3, vt2.c0)))<((CASE vt2.c2  WHEN vt2.c3 THEN vt2.lid END))) DESC  NULLS FIRST);
SELECT * FROM v0 NATURAL JOIN vt2 WHERE ('1696732331') ORDER BY (((LIKE(vt2.c3, vt2.c0)))<((CASE vt2.c2  WHEN vt2.c3 THEN vt2.lid END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1696732331') IS TRUE)  as count FROM v0 NATURAL JOIN vt2 ORDER BY (((LIKE(vt2.c3, vt2.c0)))<((CASE vt2.c2  WHEN vt2.c3 THEN vt2.lid END))) DESC  NULLS FIRST);
SELECT * FROM v0 NATURAL JOIN vt2 WHERE ('1696732331') ORDER BY (((LIKE(vt2.c3, vt2.c0)))<((CASE vt2.c2  WHEN vt2.c3 THEN vt2.lid END))) DESC  NULLS FIRST;
SELECT * FROM t0, vt2, vt0, v0 WHERE ((+ (t0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt2, vt0, v0);
SELECT * FROM t0, vt2, vt0, v0 WHERE ((+ (t0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt2, vt0, v0);
SELECT * FROM t0, vt2, vt0, v0 WHERE ((+ (t0.c1 COLLATE NOCASE)));
SELECT * FROM t0 WHERE (t0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0 COLLATE NOCASE);
SELECT ALL * FROM v0 WHERE (CAST(x'' COLLATE NOCASE AS REAL)) ORDER BY (((v0.c0)) BETWEEN (((v0.c0 IN (v0.c0, v0.c0)))) AND ((0.33443322081228277)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN (((v0.c0 IN (v0.c0, v0.c0)))) AND ((0.33443322081228277)))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CAST(x'' COLLATE NOCASE AS REAL)) ORDER BY (((v0.c0)) BETWEEN (((v0.c0 IN (v0.c0, v0.c0)))) AND ((0.33443322081228277)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN (((v0.c0 IN (v0.c0, v0.c0)))) AND ((0.33443322081228277)))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CAST(x'' COLLATE NOCASE AS REAL)) ORDER BY (((v0.c0)) BETWEEN (((v0.c0 IN (v0.c0, v0.c0)))) AND ((0.33443322081228277)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN json_array(vt0.c0, vt0.c0) THEN ((vt0.c0)=(vt0.c0)) ELSE ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_array(vt0.c0, vt0.c0) THEN ((vt0.c0)==(vt0.c0)) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN json_array(vt0.c0, vt0.c0) THEN ((vt0.c0)=(vt0.c0)) ELSE ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_array(vt0.c0, vt0.c0) THEN ((vt0.c0)==(vt0.c0)) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN json_array(vt0.c0, vt0.c0) THEN ((vt0.c0)=(vt0.c0)) ELSE ((vt0.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM vt2, t0, vt0, v0 WHERE (((((((((LIKELIHOOD(DISTINCT x'', 0.017696188316126626))OR((vt2.lid IN ()))))AND(STRFTIME(t0.c0, vt2.c3, vt2.c3))))OR((((t0.c48, vt2.c3, vt2.c1)) BETWEEN ((t0.c0, t0.c48, vt2.c1)) AND ((v0.c0, v0.c0, vt2.c3))))))OR('TUs<'))) ORDER BY ((((((((((((((t0.c1)-(vt2.c3)))AND((t0.c17 IN (t0.c17)))))AND(((t0.c1) ISNULL))))OR((('-881283893') NOT BETWEEN (vt2.c1) AND (vt2.c1)))))OR(CASE WHEN '-2125444500' THEN vt2.lid WHEN vt2.c1 THEN vt2.c1 WHEN vt2.lid THEN vt2.c3 END)))OR(t0.c1 COLLATE NOCASE)))AND(vt2.lid)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((LIKELIHOOD(DISTINCT x'', 0.017696188316126626))OR((vt2.lid IN ()))))AND(STRFTIME(t0.c0, vt2.c3, vt2.c3))))OR((((t0.c48, vt2.c3, vt2.c1)) BETWEEN ((t0.c0, t0.c48, vt2.c1)) AND ((v0.c0, v0.c0, vt2.c3))))))OR('TUs<'))) IS TRUE)  as count FROM vt2, t0, vt0, v0 ORDER BY ((((((((((((((t0.c1)-(vt2.c3)))AND((t0.c17 IN (t0.c17)))))AND(((t0.c1) ISNULL))))OR((('-881283893') NOT BETWEEN (vt2.c1) AND (vt2.c1)))))OR(CASE WHEN '-2125444500' THEN vt2.lid WHEN vt2.c1 THEN vt2.c1 WHEN vt2.lid THEN vt2.c3 END)))OR(t0.c1 COLLATE NOCASE)))AND(vt2.lid)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, t0, vt0, v0 WHERE (((((((((LIKELIHOOD(DISTINCT x'', 0.017696188316126626))OR((vt2.lid IN ()))))AND(STRFTIME(t0.c0, vt2.c3, vt2.c3))))OR((((t0.c48, vt2.c3, vt2.c1)) BETWEEN ((t0.c0, t0.c48, vt2.c1)) AND ((v0.c0, v0.c0, vt2.c3))))))OR('TUs<'))) ORDER BY ((((((((((((((t0.c1)-(vt2.c3)))AND((t0.c17 IN (t0.c17)))))AND(((t0.c1) ISNULL))))OR((('-881283893') NOT BETWEEN (vt2.c1) AND (vt2.c1)))))OR(CASE WHEN '-2125444500' THEN vt2.lid WHEN vt2.c1 THEN vt2.c1 WHEN vt2.lid THEN vt2.c3 END)))OR(t0.c1 COLLATE NOCASE)))AND(vt2.lid)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((LIKELIHOOD(DISTINCT x'', 0.017696188316126626))OR((vt2.lid IN ()))))AND(STRFTIME(t0.c0, vt2.c3, vt2.c3))))OR((((t0.c48, vt2.c3, vt2.c1)) BETWEEN ((t0.c0, t0.c48, vt2.c1)) AND ((v0.c0, v0.c0, vt2.c3))))))OR('TUs<'))) IS TRUE)  as count FROM vt2, t0, vt0, v0 ORDER BY ((((((((((((((t0.c1)-(vt2.c3)))AND((t0.c17 IN (t0.c17)))))AND(((t0.c1) ISNULL))))OR((('-881283893') NOT BETWEEN (vt2.c1) AND (vt2.c1)))))OR(CASE WHEN '-2125444500' THEN vt2.lid WHEN vt2.c1 THEN vt2.c1 WHEN vt2.lid THEN vt2.c3 END)))OR(t0.c1 COLLATE NOCASE)))AND(vt2.lid)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, t0, vt0, v0 WHERE (((((((((LIKELIHOOD(DISTINCT x'', 0.017696188316126626))OR((vt2.lid IN ()))))AND(STRFTIME(t0.c0, vt2.c3, vt2.c3))))OR((((t0.c48, vt2.c3, vt2.c1)) BETWEEN ((t0.c0, t0.c48, vt2.c1)) AND ((v0.c0, v0.c0, vt2.c3))))))OR('TUs<'))) ORDER BY ((((((((((((((t0.c1)-(vt2.c3)))AND((t0.c17 IN (t0.c17)))))AND(((t0.c1) ISNULL))))OR((('-881283893') NOT BETWEEN (vt2.c1) AND (vt2.c1)))))OR(CASE WHEN '-2125444500' THEN vt2.lid WHEN vt2.c1 THEN vt2.c1 WHEN vt2.lid THEN vt2.c3 END)))OR(t0.c1 COLLATE NOCASE)))AND(vt2.lid)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (vt2.c0 IN (v0.c0)) RIGHT OUTER JOIN vt2 ON ((CASE WHEN vt2.c0 THEN vt0.c0 ELSE vt2.c2 END) NOT NULL) RIGHT OUTER JOIN v0 ON CAST(((t0.c0)>=(t0.c1)) AS BLOB) WHERE (x'dc2a');
SELECT SUM(count) FROM (SELECT ((x'dc2a') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (vt2.c0 IN (v0.c0)) RIGHT OUTER JOIN vt2 ON ((CASE WHEN vt2.c0 THEN vt0.c0 ELSE vt2.c2 END) NOT NULL) RIGHT OUTER JOIN v0 ON CAST(((t0.c0)>=(t0.c1)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (vt2.c0 IN (v0.c0)) RIGHT OUTER JOIN vt2 ON ((CASE WHEN vt2.c0 THEN vt0.c0 ELSE vt2.c2 END) NOT NULL) RIGHT OUTER JOIN v0 ON CAST(((t0.c0)>=(t0.c1)) AS BLOB) WHERE (x'dc2a');
SELECT SUM(count) FROM (SELECT ((x'dc2a') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (vt2.c0 IN (v0.c0)) RIGHT OUTER JOIN vt2 ON ((CASE WHEN vt2.c0 THEN vt0.c0 ELSE vt2.c2 END) NOT NULL) RIGHT OUTER JOIN v0 ON CAST(((t0.c0)>=(t0.c1)) AS BLOB));
SELECT COUNT(*) FROM v0 WHERE ((- (UNLIKELY(DISTINCT v0.c0)))) ORDER BY '4䊫LIk', CASE v0.c0  WHEN ABS(v0.c0) THEN v0.c0 COLLATE BINARY END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (UNLIKELY(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY '4䊫LIk', CASE v0.c0  WHEN ABS(v0.c0) THEN v0.c0 COLLATE BINARY END DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((- (UNLIKELY(DISTINCT v0.c0)))) ORDER BY '4䊫LIk', CASE v0.c0  WHEN ABS(v0.c0) THEN v0.c0 COLLATE BINARY END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (UNLIKELY(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY '4䊫LIk', CASE v0.c0  WHEN ABS(v0.c0) THEN v0.c0 COLLATE BINARY END DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((- (UNLIKELY(DISTINCT v0.c0)))) ORDER BY '4䊫LIk', CASE v0.c0  WHEN ABS(v0.c0) THEN v0.c0 COLLATE BINARY END DESC  NULLS LAST;
SELECT ALL * FROM t0, v0 WHERE ((((((((((((t0.c17)OR(v0.c0)))AND(t0.c17)))OR(t0.c48)))AND(t0.c48)), CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c1 THEN v0.c0 WHEN v0.c0 THEN 0xffffffffd067a234 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN v0.c0 END, x''))=((((v0.c0) IS FALSE), NULL, t0.c17 COLLATE RTRIM)))) ORDER BY v0.c0  NULLS LAST, DATETIME(t0.c1, ((0.4261467238776423) BETWEEN (t0.c17) AND (t0.c1)), ((t0.c17) ISNULL)) DESC  NULLS LAST, (((((((((('\o뗜<')OR(t0.c1)))OR(x'523e')))AND(t0.c0)))AND(NULL))) BETWEEN (((t0.c17)IS(t0.c1))) AND (json_insert(t0.c17, t0.c17, v0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c17)OR(v0.c0)))AND(t0.c17)))OR(t0.c48)))AND(t0.c48)), CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c1 THEN v0.c0 WHEN v0.c0 THEN 0Xffffffffd067a234 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN v0.c0 END, x''))=((((v0.c0) IS FALSE), NULL, t0.c17 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0  NULLS LAST, DATETIME(t0.c1, ((0.4261467238776423) BETWEEN (t0.c17) AND (t0.c1)), ((t0.c17) ISNULL)) DESC  NULLS LAST, (((((((((('\o뗜<')OR(t0.c1)))OR(x'523e')))AND(t0.c0)))AND(NULL))) BETWEEN (((t0.c17)IS(t0.c1))) AND (json_insert(t0.c17, t0.c17, v0.c0))) ASC  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE ((((((((((((t0.c17)OR(v0.c0)))AND(t0.c17)))OR(t0.c48)))AND(t0.c48)), CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c1 THEN v0.c0 WHEN v0.c0 THEN 0xffffffffd067a234 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN v0.c0 END, x''))=((((v0.c0) IS FALSE), NULL, t0.c17 COLLATE RTRIM)))) ORDER BY v0.c0  NULLS LAST, DATETIME(t0.c1, ((0.4261467238776423) BETWEEN (t0.c17) AND (t0.c1)), ((t0.c17) ISNULL)) DESC  NULLS LAST, (((((((((('\o뗜<')OR(t0.c1)))OR(x'523e')))AND(t0.c0)))AND(NULL))) BETWEEN (((t0.c17)IS(t0.c1))) AND (json_insert(t0.c17, t0.c17, v0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c17)OR(v0.c0)))AND(t0.c17)))OR(t0.c48)))AND(t0.c48)), CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c1 THEN v0.c0 WHEN v0.c0 THEN 0Xffffffffd067a234 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN v0.c0 END, x''))=((((v0.c0) IS FALSE), NULL, t0.c17 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0  NULLS LAST, DATETIME(t0.c1, ((0.4261467238776423) BETWEEN (t0.c17) AND (t0.c1)), ((t0.c17) ISNULL)) DESC  NULLS LAST, (((((((((('\o뗜<')OR(t0.c1)))OR(x'523e')))AND(t0.c0)))AND(NULL))) BETWEEN (((t0.c17)IS(t0.c1))) AND (json_insert(t0.c17, t0.c17, v0.c0))) ASC  NULLS LAST);
SELECT * FROM t0 CROSS JOIN v0 ON ((v0.c0) NOT BETWEEN (((t0.c48)OR('B\nkLwwac'))) AND (((t0.c1) IS TRUE))) WHERE (((t0.c17)IS(((x'0aec2dcf') IS FALSE)))) ORDER BY ((((((((LAST_INSERT_ROWID())OR((('5hX]/4O')>>(t0.c1)))))AND((((t0.c0))>((t0.c1))))))AND('-747194916')))OR((t0.c17 IN (t0.c0)))) ASC  NULLS FIRST, x'91f0' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c17)IS(((x'0aec2dcf') IS FALSE)))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((v0.c0) NOT BETWEEN (((t0.c48)OR('B\nkLwwac'))) AND (((t0.c1) IS TRUE))) ORDER BY ((((((((LAST_INSERT_ROWID())OR((('5hX]/4O')>>(t0.c1)))))AND((((t0.c0))>((t0.c1))))))AND('-747194916')))OR((t0.c17 IN (t0.c0)))) ASC  NULLS FIRST, x'91f0' ASC);
SELECT * FROM t0 CROSS JOIN v0 ON ((v0.c0) NOT BETWEEN (((t0.c48)OR('B\nkLwwac'))) AND (((t0.c1) IS TRUE))) WHERE (((t0.c17)IS(((x'0aec2dcf') IS FALSE)))) ORDER BY ((((((((LAST_INSERT_ROWID())OR((('5hX]/4O')>>(t0.c1)))))AND((((t0.c0))>((t0.c1))))))AND('-747194916')))OR((t0.c17 IN (t0.c0)))) ASC  NULLS FIRST, x'91f0' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c17)IS(((x'0aec2dcf') IS FALSE)))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((v0.c0) NOT BETWEEN (((t0.c48)OR('B\nkLwwac'))) AND (((t0.c1) IS TRUE))) ORDER BY ((((((((LAST_INSERT_ROWID())OR((('5hX]/4O')>>(t0.c1)))))AND((((t0.c0))>((t0.c1))))))AND('-747194916')))OR((t0.c17 IN (t0.c0)))) ASC  NULLS FIRST, x'91f0' ASC);
SELECT * FROM t0 CROSS JOIN v0 ON ((v0.c0) NOT BETWEEN (((t0.c48)OR('B\nkLwwac'))) AND (((t0.c1) IS TRUE))) WHERE (((t0.c17)IS(((x'0aec2dcf') IS FALSE)))) ORDER BY ((((((((LAST_INSERT_ROWID())OR((('5hX]/4O')>>(t0.c1)))))AND((((t0.c0))>((t0.c1))))))AND('-747194916')))OR((t0.c17 IN (t0.c0)))) ASC  NULLS FIRST, x'91f0' ASC;
SELECT * FROM vt2 INNER JOIN v0 ON (('')%(vt2.c1 COLLATE RTRIM)) WHERE (CASE WHEN ((vt2.c1) NOT NULL) THEN '' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt2.c1) NOT NULL) THEN '' END) IS TRUE)  as count FROM vt2 INNER JOIN v0 ON (('')%(vt2.c1 COLLATE RTRIM)));
SELECT * FROM vt2 INNER JOIN v0 ON (('')%(vt2.c1 COLLATE RTRIM)) WHERE (CASE WHEN ((vt2.c1) NOT NULL) THEN '' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt2.c1) NOT NULL) THEN '' END) IS TRUE)  as count FROM vt2 INNER JOIN v0 ON (('')%(vt2.c1 COLLATE RTRIM)));
SELECT * FROM vt2 INNER JOIN v0 ON (('')%(vt2.c1 COLLATE RTRIM)) WHERE (CASE WHEN ((vt2.c1) NOT NULL) THEN '' END);
SELECT * FROM vt0, t0, v0 LEFT OUTER JOIN vt2 ON (((CAST(vt2.lid AS NUMERIC)))>=((((t0.c1) NOT NULL)))) WHERE ((((((t0.c17)OR(vt0.c0)))OR(vt2.c0)) IN ())) ORDER BY ((7.74218055E8)>((- (vt2.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c17)OR(vt0.c0)))OR(vt2.c0)) IN ())) IS TRUE)  as count FROM vt0, t0, v0 LEFT OUTER JOIN vt2 ON (((CAST(vt2.lid AS NUMERIC)))>=((((t0.c1) NOT NULL)))) ORDER BY ((7.74218055E8)>((- (vt2.c3)))) DESC);
SELECT * FROM vt0, t0, v0 LEFT OUTER JOIN vt2 ON (((CAST(vt2.lid AS NUMERIC)))>=((((t0.c1) NOT NULL)))) WHERE ((((((t0.c17)OR(vt0.c0)))OR(vt2.c0)) IN ())) ORDER BY ((7.74218055E8)>((- (vt2.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c17)OR(vt0.c0)))OR(vt2.c0)) IN ())) IS TRUE)  as count FROM vt0, t0, v0 LEFT OUTER JOIN vt2 ON (((CAST(vt2.lid AS NUMERIC)))>=((((t0.c1) NOT NULL)))) ORDER BY ((7.74218055E8)>((- (vt2.c3)))) DESC);
SELECT * FROM vt0, t0, v0 LEFT OUTER JOIN vt2 ON (((CAST(vt2.lid AS NUMERIC)))>=((((t0.c1) NOT NULL)))) WHERE ((((((t0.c17)OR(vt0.c0)))OR(vt2.c0)) IN ())) ORDER BY ((7.74218055E8)>((- (vt2.c3)))) DESC;
SELECT ALL COUNT(*) FROM vt2 CROSS JOIN vt0 ON ((vt2.c2) NOTNULL) WHERE ((NOT (((vt2.lid)<<(vt2.c3))))) ORDER BY 0.4210210601739479 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt2.lid)<<(vt2.c3))))) IS TRUE)  as count FROM vt2 CROSS JOIN vt0 ON ((vt2.c2) NOTNULL) ORDER BY 0.4210210601739479 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2 CROSS JOIN vt0 ON ((vt2.c2) NOTNULL) WHERE ((NOT (((vt2.lid)<<(vt2.c3))))) ORDER BY 0.4210210601739479 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt2.lid)<<(vt2.c3))))) IS TRUE)  as count FROM vt2 CROSS JOIN vt0 ON ((vt2.c2) NOTNULL) ORDER BY 0.4210210601739479 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2 CROSS JOIN vt0 ON ((vt2.c2) NOTNULL) WHERE ((NOT (((vt2.lid)<<(vt2.c3))))) ORDER BY 0.4210210601739479 ASC  NULLS FIRST;
SELECT ALL * FROM vt2, v0, t0, vt0 WHERE ((((json_array(vt2.c3, vt2.c0), ((vt2.c3)-(vt0.c0)), ((t0.c1)AND(t0.c1))))<=(((vt2.c2 IN ()), (((t0.c17))<((t0.c0))), ((vt2.c2) IS TRUE))))) ORDER BY (~ (vt2.c3)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((json_array(vt2.c3, vt2.c0), ((vt2.c3)-(vt0.c0)), ((t0.c1)AND(t0.c1))))<=(((vt2.c2 IN ()), (((t0.c17))<((t0.c0))), ((vt2.c2) IS TRUE))))) IS TRUE)  as count FROM vt2, v0, t0, vt0 ORDER BY (~ (vt2.c3)) COLLATE RTRIM ASC);
SELECT ALL * FROM vt2, v0, t0, vt0 WHERE ((((json_array(vt2.c3, vt2.c0), ((vt2.c3)-(vt0.c0)), ((t0.c1)AND(t0.c1))))<=(((vt2.c2 IN ()), (((t0.c17))<((t0.c0))), ((vt2.c2) IS TRUE))))) ORDER BY (~ (vt2.c3)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((json_array(vt2.c3, vt2.c0), ((vt2.c3)-(vt0.c0)), ((t0.c1)AND(t0.c1))))<=(((vt2.c2 IN ()), (((t0.c17))<((t0.c0))), ((vt2.c2) IS TRUE))))) IS TRUE)  as count FROM vt2, v0, t0, vt0 ORDER BY (~ (vt2.c3)) COLLATE RTRIM ASC);
SELECT ALL * FROM vt2, v0, t0, vt0 WHERE ((((json_array(vt2.c3, vt2.c0), ((vt2.c3)-(vt0.c0)), ((t0.c1)AND(t0.c1))))<=(((vt2.c2 IN ()), (((t0.c17))<((t0.c0))), ((vt2.c2) IS TRUE))))) ORDER BY (~ (vt2.c3)) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) AND ((NOT ('贫j')))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) AND ((NOT ('贫j'))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) AND ((NOT ('贫j')))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) AND ((NOT ('贫j'))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) AND ((NOT ('贫j')))));
SELECT ALL * FROM t0 CROSS JOIN vt2 ON (((~ (t0.c1))) NOT NULL) INNER JOIN vt0 ON vt2.c2 CROSS JOIN v0 ON t0.c17 WHERE (CASE ((x'') ISNULL)  WHEN TRIM(DISTINCT t0.c1, vt2.lid) THEN (('0.9390894028402588')!=(t0.c1)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((x'') ISNULL)  WHEN TRIM(DISTINCT t0.c1, vt2.lid) THEN (('0.9390894028402588')!=(t0.c1)) ELSE vt0.c0 END) IS TRUE)  as count FROM t0 CROSS JOIN vt2 ON (((~ (t0.c1))) NOT NULL) INNER JOIN vt0 ON vt2.c2 CROSS JOIN v0 ON t0.c17);
SELECT ALL * FROM t0 CROSS JOIN vt2 ON (((~ (t0.c1))) NOT NULL) INNER JOIN vt0 ON vt2.c2 CROSS JOIN v0 ON t0.c17 WHERE (CASE ((x'') ISNULL)  WHEN TRIM(DISTINCT t0.c1, vt2.lid) THEN (('0.9390894028402588')!=(t0.c1)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((x'') ISNULL)  WHEN TRIM(DISTINCT t0.c1, vt2.lid) THEN (('0.9390894028402588')!=(t0.c1)) ELSE vt0.c0 END) IS TRUE)  as count FROM t0 CROSS JOIN vt2 ON (((~ (t0.c1))) NOT NULL) INNER JOIN vt0 ON vt2.c2 CROSS JOIN v0 ON t0.c17);
SELECT ALL * FROM t0 CROSS JOIN vt2 ON (((~ (t0.c1))) NOT NULL) INNER JOIN vt0 ON vt2.c2 CROSS JOIN v0 ON t0.c17 WHERE (CASE ((x'') ISNULL)  WHEN TRIM(DISTINCT t0.c1, vt2.lid) THEN (('0.9390894028402588')!=(t0.c1)) ELSE vt0.c0 END);
SELECT * FROM v0, t0 WHERE (((((((((t0.c0)OR(v0.c0)))AND(t0.c1)))AND(json_array_length(v0.c0))))AND((((v0.c0, v0.c0, t0.c17))>((t0.c48, t0.c48, t0.c17))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)OR(v0.c0)))AND(t0.c1)))AND(json_array_length(v0.c0))))AND((((v0.c0, v0.c0, t0.c17))>((t0.c48, t0.c48, t0.c17)))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((((((t0.c0)OR(v0.c0)))AND(t0.c1)))AND(json_array_length(v0.c0))))AND((((v0.c0, v0.c0, t0.c17))>((t0.c48, t0.c48, t0.c17))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)OR(v0.c0)))AND(t0.c1)))AND(json_array_length(v0.c0))))AND((((v0.c0, v0.c0, t0.c17))>((t0.c48, t0.c48, t0.c17)))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((((((t0.c0)OR(v0.c0)))AND(t0.c1)))AND(json_array_length(v0.c0))))AND((((v0.c0, v0.c0, t0.c17))>((t0.c48, t0.c48, t0.c17))))));
SELECT COUNT(*) FROM vt2, vt0, t0 WHERE (((((((t0.c1)OR(vt2.c1)))AND(vt2.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)OR(vt2.c1)))AND(vt2.c2))) ISNULL)) IS TRUE)  as count FROM vt2, vt0, t0);
SELECT COUNT(*) FROM vt2, vt0, t0 WHERE (((((((t0.c1)OR(vt2.c1)))AND(vt2.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)OR(vt2.c1)))AND(vt2.c2))) ISNULL)) IS TRUE)  as count FROM vt2, vt0, t0);
SELECT COUNT(*) FROM vt2, vt0, t0 WHERE (((((((t0.c1)OR(vt2.c1)))AND(vt2.c2))) ISNULL));
SELECT ALL COUNT(*) FROM t0 WHERE ((((+ (0.5937114779082996))) NOT NULL)) ORDER BY ((CAST(t0.c1 AS REAL))!=((t0.c0 IN ())))  NULLS FIRST, ((t0.c1 COLLATE RTRIM)<=(NULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (0.5937114779082996))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c1 AS REAL))<>((t0.c0 IN ())))  NULLS FIRST, ((t0.c1 COLLATE RTRIM)<=(NULL)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((+ (0.5937114779082996))) NOT NULL)) ORDER BY ((CAST(t0.c1 AS REAL))!=((t0.c0 IN ())))  NULLS FIRST, ((t0.c1 COLLATE RTRIM)<=(NULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (0.5937114779082996))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c1 AS REAL))<>((t0.c0 IN ())))  NULLS FIRST, ((t0.c1 COLLATE RTRIM)<=(NULL)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((+ (0.5937114779082996))) NOT NULL)) ORDER BY ((CAST(t0.c1 AS REAL))!=((t0.c0 IN ())))  NULLS FIRST, ((t0.c1 COLLATE RTRIM)<=(NULL));
SELECT * FROM t0 WHERE (((((t0.c48)=(t0.c1))) BETWEEN (((t0.c48)GLOB(t0.c1))) AND ((- (t0.c17)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48)==(t0.c1))) BETWEEN (((t0.c48)GLOB(t0.c1))) AND ((- (t0.c17))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c48)=(t0.c1))) BETWEEN (((t0.c48)GLOB(t0.c1))) AND ((- (t0.c17)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c48)==(t0.c1))) BETWEEN (((t0.c48)GLOB(t0.c1))) AND ((- (t0.c17))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c48)=(t0.c1))) BETWEEN (((t0.c48)GLOB(t0.c1))) AND ((- (t0.c17)))));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)<(vt0.c0)))))AND(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)<(vt0.c0)))))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)<(vt0.c0)))))AND(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)<(vt0.c0)))))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)<(vt0.c0)))))AND(((vt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0, t0, vt2 WHERE ((((TRIM(DISTINCT vt2.c1), vt2.c1 COLLATE BINARY, LIKELIHOOD(t0.c17, 0.5285391565355712)))>=((NULLIF(vt2.lid, t0.c48), vt2.c0 COLLATE BINARY, (((vt0.c0, t0.c17, ''))>((vt2.c0, t0.c1, t0.c1))))))) ORDER BY CAST(CAST(t0.c48 AS REAL) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((TRIM(DISTINCT vt2.c1), vt2.c1 COLLATE BINARY, LIKELIHOOD(t0.c17, 0.5285391565355712)))>=((NULLIF(vt2.lid, t0.c48), vt2.c0 COLLATE BINARY, (((vt0.c0, t0.c17, ''))>((vt2.c0, t0.c1, t0.c1))))))) IS TRUE)  as count FROM vt0, t0, vt2 ORDER BY CAST(CAST(t0.c48 AS REAL) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, vt2 WHERE ((((TRIM(DISTINCT vt2.c1), vt2.c1 COLLATE BINARY, LIKELIHOOD(t0.c17, 0.5285391565355712)))>=((NULLIF(vt2.lid, t0.c48), vt2.c0 COLLATE BINARY, (((vt0.c0, t0.c17, ''))>((vt2.c0, t0.c1, t0.c1))))))) ORDER BY CAST(CAST(t0.c48 AS REAL) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((TRIM(DISTINCT vt2.c1), vt2.c1 COLLATE BINARY, LIKELIHOOD(t0.c17, 0.5285391565355712)))>=((NULLIF(vt2.lid, t0.c48), vt2.c0 COLLATE BINARY, (((vt0.c0, t0.c17, ''))>((vt2.c0, t0.c1, t0.c1))))))) IS TRUE)  as count FROM vt0, t0, vt2 ORDER BY CAST(CAST(t0.c48 AS REAL) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, vt2 WHERE ((((TRIM(DISTINCT vt2.c1), vt2.c1 COLLATE BINARY, LIKELIHOOD(t0.c17, 0.5285391565355712)))>=((NULLIF(vt2.lid, t0.c48), vt2.c0 COLLATE BINARY, (((vt0.c0, t0.c17, ''))>((vt2.c0, t0.c1, t0.c1))))))) ORDER BY CAST(CAST(t0.c48 AS REAL) AS TEXT)  NULLS LAST;
