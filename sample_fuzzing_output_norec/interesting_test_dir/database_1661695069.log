-- Time: 2024/06/09 11:37:10
-- Database: database69
-- Database version: 3.40.0
-- seed value: 1661695069
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, content=''); -- 1ms;
ANALYZE; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, detail=none); -- 1ms;
UPDATE vt1 SET (c0)=(''); -- 1ms;
REINDEX RTRIM; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (NULL), ('UiY巘YM'), (NULL), (',s'), ('-354125126'); -- 0ms;
PRAGMA wal_autocheckpoint = 2192099495389357004; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(x''); -- 0ms;
PRAGMA cell_size_check = false; -- 0ms;
UPDATE vt1 SET c0='-354125126', c0='vT', c0='' WHERE CAST(((vt1.c0) IS FALSE) AS REAL); -- 0ms;
ROLLBACK TRANSACTION; -- 7ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE vt0; -- 0ms;
END; -- 0ms;
DELETE FROM vt1 WHERE NULLIF((NOT (vt1.c0)), CAST(vt1.c0 AS REAL)); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'2990' WHERE ((((((vt1.c0) NOT NULL))AND((vt1.c0 IN ()))))AND((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.9833730719928294 WHERE (((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))>=(((- (vt1.c0))))); -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (5.47249624E8); -- 0ms;
END; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (0.03690596979341809); -- 1ms;
INSERT OR ABORT INTO vt1 VALUES ('0.03690596979341809'); -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE vt0; -- 0ms;
COMMIT; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA main.cache_size = 0; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'c5a9' WHERE CAST(vt1.c0 COLLATE RTRIM AS BLOB); -- 0ms;
PRAGMA application_id; -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (x''); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL; -- 13ms;
PRAGMA cache_size; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL), (x'1d43'), (0.7353683236216342); -- 0ms;
PRAGMA cache_spill; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE vt1 SET (c0, c0, c0)=('', 0.43881544652948623, x'') WHERE SQLITE_COMPILEOPTION_GET(CAST(vt1.c0 AS INTEGER)); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('-1929136347'); -- 0ms;
VACUUM; -- 1ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
PRAGMA mmap_size = 5980901973643626135; -- 0ms;
PRAGMA main.busy_timeout; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('-2032478027'); -- 3ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (0.905096850272009), (0.272744549525348), (0.7225495977350644); -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0, c0)=(1719705963, 0.49560380995241493, 'gjiZ8Oy') WHERE (((- (vt1.c0))) IS FALSE); -- 0ms;
CREATE TABLE t0 (c0 INTEGER , c1 BLOB , c2 INTEGER UNIQUE NOT NULL CHECK ( (((((((((547249624 IN ()))OR(CAST(c2 AS REAL))))OR(((c2)OR(c0)))))OR(((c2)<(c0)))))OR(highlight(c0, c2, c2, c1)))) ); -- 1ms;
ANALYZE; -- 0ms;
PRAGMA busy_timeout = 0; -- 0ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES ('WP 巘*?'), (''), (NULL); -- 0ms;
PRAGMA threads; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''), ('5s^S.\>'), (NULL); -- 1ms;
UPDATE t0 SET c2=0X57a0f75b, c0=x''; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t0(c2, c0) VALUES (0Xffffffff86dad8b5, 1e500); -- 0ms;
PRAGMA main.journal_mode = TRUNCATE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=('5s^S.\>', -3.54125126E8); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('211838165'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL, -1726883809, 29075713); -- 0ms;
INSERT OR FAIL INTO t0(c0, c1) VALUES (0Xffffffff9911d81f, 0.26664121274633557); -- 1ms;
INSERT OR IGNORE INTO t0(c1) VALUES (NULL), ('-2032478027'), ('\ngL'), ('982747198'), ('547249624'); -- 0ms;
COMMIT; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR ABORT t0 SET c2=x'3f27'; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('.W') WHERE (t0.c1 COLLATE BINARY IN ()); -- 0ms;
PRAGMA cache_size = 5898365660985245718; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'', c0=x'' WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))&(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)); -- 0ms;
VACUUM; -- 1ms;
INSERT OR FAIL INTO t0(c0, c2) VALUES ('Y', 0Xfffffffff0353791); -- 0ms;
PRAGMA mmap_size; -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (0.655905406515479); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=x'3e84', c0='388396025'; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(''); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (x'', x'', '1377641017'), ('974900847', '', x'25ef'), (0Xfed5b71, NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c2, c1) VALUES ('.j', x'dc4c'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('211838165'); -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
REINDEX; -- 0ms;
UPDATE t1 SET c2='1470166875'; -- 0ms;
UPDATE OR REPLACE t1 SET (c2)=(''); -- 1ms;
ALTER TABLE t1 ADD COLUMN c63 INTEGER CHECK ( (~ (t1.c1 COLLATE BINARY))); -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
CREATE INDEX IF NOT EXISTS i70 ON t0(c1 COLLATE BINARY,((((((((c2)AND(((c2)=(c2)))))AND(c2)))AND((((c2)) BETWEEN ((c63)) AND ((c2))))))OR(((((c63)AND(c2)))OR(c0)))) COLLATE NOCASE ASC,((((c63)AND(((c0) NOT NULL))))OR((c0 IN ()))) COLLATE NOCASE,'*6∹T'); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i62 ON t0(0.9833730719928294 COLLATE NOCASE ASC,(((c1)) NOT BETWEEN ((c2)) AND (((NOT (c63))))) COLLATE BINARY,((((c63)<=(c0)))&((~ (c63)))) DESC,CAST(IFNULL(c1, 0.9271765844545901) AS BLOB)); -- 0ms;
INSERT OR IGNORE INTO t0(c1, c2, c0) VALUES ('-483217742', '-2042281096', 1.470166875E9); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt1, t0 WHERE (t0.c2) ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt1, t0 ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE (t0.c2) ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt1, t0 ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE (t0.c2) ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE NOCASE ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((- (vt1.c0)) COLLATE BINARY) ORDER BY vt1.c0 ASC, CASE ((vt1.c0)LIKE(vt1.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE 0.655905406515479 END DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC, CASE ((vt1.c0)LIKE(vt1.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE 0.655905406515479 END DESC);
SELECT * FROM vt1 WHERE ((- (vt1.c0)) COLLATE BINARY) ORDER BY vt1.c0 ASC, CASE ((vt1.c0)LIKE(vt1.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE 0.655905406515479 END DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC, CASE ((vt1.c0)LIKE(vt1.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE 0.655905406515479 END DESC);
SELECT * FROM vt1 WHERE ((- (vt1.c0)) COLLATE BINARY) ORDER BY vt1.c0 ASC, CASE ((vt1.c0)LIKE(vt1.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE 0.655905406515479 END DESC;
SELECT * FROM t0 WHERE (CAST(817099627 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(817099627 AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(817099627 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(817099627 AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(817099627 AS INTEGER));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((0X30b3f36b)&(vt1.c0)))OR((- (vt0.c0)))))AND(((vt0.c0) IS TRUE))))OR(((vt1.c0)<=(vt0.c0)))))OR('H2n2')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0x30b3f36b)&(vt1.c0)))OR((- (vt0.c0)))))AND(((vt0.c0) IS TRUE))))OR(((vt1.c0)<=(vt0.c0)))))OR('H2n2'))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((0X30b3f36b)&(vt1.c0)))OR((- (vt0.c0)))))AND(((vt0.c0) IS TRUE))))OR(((vt1.c0)<=(vt0.c0)))))OR('H2n2')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0x30b3f36b)&(vt1.c0)))OR((- (vt0.c0)))))AND(((vt0.c0) IS TRUE))))OR(((vt1.c0)<=(vt0.c0)))))OR('H2n2'))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((0X30b3f36b)&(vt1.c0)))OR((- (vt0.c0)))))AND(((vt0.c0) IS TRUE))))OR(((vt1.c0)<=(vt0.c0)))))OR('H2n2')));
SELECT ALL * FROM t0 WHERE (((((((((((((((t0.c1)AND(t0.c0)))AND(t0.c0)))OR(t0.c63)))OR(t0.c1)))AND(t0.c63)))AND(t0.c0)))IS NOT(((t0.c2)<=(t0.c63))))) ORDER BY (+ (NULLIF(t0.c0, t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c1)AND(t0.c0)))AND(t0.c0)))OR(t0.c63)))OR(t0.c1)))AND(t0.c63)))AND(t0.c0)))IS NOT(((t0.c2)<=(t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY (+ (NULLIF(t0.c0, t0.c1))));
SELECT ALL * FROM t0 WHERE (((((((((((((((t0.c1)AND(t0.c0)))AND(t0.c0)))OR(t0.c63)))OR(t0.c1)))AND(t0.c63)))AND(t0.c0)))IS NOT(((t0.c2)<=(t0.c63))))) ORDER BY (+ (NULLIF(t0.c0, t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c1)AND(t0.c0)))AND(t0.c0)))OR(t0.c63)))OR(t0.c1)))AND(t0.c63)))AND(t0.c0)))IS NOT(((t0.c2)<=(t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY (+ (NULLIF(t0.c0, t0.c1))));
SELECT ALL * FROM t0 WHERE (((((((((((((((t0.c1)AND(t0.c0)))AND(t0.c0)))OR(t0.c63)))OR(t0.c1)))AND(t0.c63)))AND(t0.c0)))IS NOT(((t0.c2)<=(t0.c63))))) ORDER BY (+ (NULLIF(t0.c0, t0.c1)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)|(vt0.c0)))IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(vt0.c0)))IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)|(vt0.c0)))IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(vt0.c0)))IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)|(vt0.c0)))IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)));
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN t0 ON vt1.c0 WHERE (((((((vt0.c0)OR(x'')))AND(t0.c63)))/(0.8071837716030186))) ORDER BY (- ((('1470166875') BETWEEN (t0.c63) AND (t0.c63))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(x'')))AND(t0.c63)))/(0.8071837716030186))) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t0 ON vt1.c0 ORDER BY (- ((('1470166875') BETWEEN (t0.c63) AND (t0.c63)))));
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN t0 ON vt1.c0 WHERE (((((((vt0.c0)OR(x'')))AND(t0.c63)))/(0.8071837716030186))) ORDER BY (- ((('1470166875') BETWEEN (t0.c63) AND (t0.c63))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(x'')))AND(t0.c63)))/(0.8071837716030186))) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t0 ON vt1.c0 ORDER BY (- ((('1470166875') BETWEEN (t0.c63) AND (t0.c63)))));
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN t0 ON vt1.c0 WHERE (((((((vt0.c0)OR(x'')))AND(t0.c63)))/(0.8071837716030186))) ORDER BY (- ((('1470166875') BETWEEN (t0.c63) AND (t0.c63))));
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((((t0.c63) BETWEEN (t0.c63) AND (t0.c63))))>=((((((vt1.c0)OR(t0.c63)))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c63) BETWEEN (t0.c63) AND (t0.c63))))>=((((((vt1.c0)OR(t0.c63)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((((t0.c63) BETWEEN (t0.c63) AND (t0.c63))))>=((((((vt1.c0)OR(t0.c63)))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c63) BETWEEN (t0.c63) AND (t0.c63))))>=((((((vt1.c0)OR(t0.c63)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((((t0.c63) BETWEEN (t0.c63) AND (t0.c63))))>=((((((vt1.c0)OR(t0.c63)))AND(vt1.c0))))));
SELECT * FROM vt0, vt1 WHERE (CASE ((('')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN ((vt0.c0)>=(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((('')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN ((vt0.c0)>=(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CASE ((('')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN ((vt0.c0)>=(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((('')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN ((vt0.c0)>=(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CASE ((('')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN ((vt0.c0)>=(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(((vt0.c0)>=(vt1.c0)) AS TEXT)) ORDER BY (((((t0.c63)) BETWEEN ((t0.c2)) AND ((t0.c0)))) IS FALSE) ASC  NULLS FIRST, CAST((((vt1.c0, t0.c63, t0.c63))<((vt1.c0, vt0.c0, t0.c1))) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>=(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((((t0.c63)) BETWEEN ((t0.c2)) AND ((t0.c0)))) IS FALSE) ASC  NULLS FIRST, CAST((((vt1.c0, t0.c63, t0.c63))<((vt1.c0, vt0.c0, t0.c1))) AS BLOB));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(((vt0.c0)>=(vt1.c0)) AS TEXT)) ORDER BY (((((t0.c63)) BETWEEN ((t0.c2)) AND ((t0.c0)))) IS FALSE) ASC  NULLS FIRST, CAST((((vt1.c0, t0.c63, t0.c63))<((vt1.c0, vt0.c0, t0.c1))) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>=(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((((t0.c63)) BETWEEN ((t0.c2)) AND ((t0.c0)))) IS FALSE) ASC  NULLS FIRST, CAST((((vt1.c0, t0.c63, t0.c63))<((vt1.c0, vt0.c0, t0.c1))) AS BLOB));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(((vt0.c0)>=(vt1.c0)) AS TEXT)) ORDER BY (((((t0.c63)) BETWEEN ((t0.c2)) AND ((t0.c0)))) IS FALSE) ASC  NULLS FIRST, CAST((((vt1.c0, t0.c63, t0.c63))<((vt1.c0, vt0.c0, t0.c1))) AS BLOB);
SELECT ALL * FROM vt1, t0 WHERE ((((0X12f5158c)>(t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((0X12f5158c)>(t0.c1)) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((0X12f5158c)>(t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((0X12f5158c)>(t0.c1)) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((0X12f5158c)>(t0.c1)) IN ()));
SELECT * FROM t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((((t0.c1)AND(vt0.c0)))AND(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)AND(vt0.c0)))AND(t0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 NOT INDEXED, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((((t0.c1)AND(vt0.c0)))AND(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)AND(vt0.c0)))AND(t0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 NOT INDEXED, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((((t0.c1)AND(vt0.c0)))AND(t0.c0))) NOT NULL));
SELECT * FROM t0 WHERE (CAST((t0.c1 IN (t0.c63)) AS REAL)) ORDER BY CAST(((t0.c0)<(t0.c2)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c1 IN (t0.c63)) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0)<(t0.c2)) AS REAL) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (CAST((t0.c1 IN (t0.c63)) AS REAL)) ORDER BY CAST(((t0.c0)<(t0.c2)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c1 IN (t0.c63)) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0)<(t0.c2)) AS REAL) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (CAST((t0.c1 IN (t0.c63)) AS REAL)) ORDER BY CAST(((t0.c0)<(t0.c2)) AS REAL) DESC  NULLS LAST;
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((vt0.c0) BETWEEN (0.43881544652948623) AND (vt1.c0)) IN ())) ORDER BY t0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (0.43881544652948623) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, t0 NOT INDEXED, vt0 ORDER BY t0.c2  NULLS LAST);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((vt0.c0) BETWEEN (0.43881544652948623) AND (vt1.c0)) IN ())) ORDER BY t0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (0.43881544652948623) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, t0 NOT INDEXED, vt0 ORDER BY t0.c2  NULLS LAST);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((vt0.c0) BETWEEN (0.43881544652948623) AND (vt1.c0)) IN ())) ORDER BY t0.c2  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))!=((vt0.c0))))>=(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((vt0.c0)>(vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<>((vt0.c0))))>=(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))!=((vt0.c0))))>=(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((vt0.c0)>(vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<>((vt0.c0))))>=(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))!=((vt0.c0))))>=(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((vt0.c0)>(vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT * FROM vt0, vt1, t0 WHERE (vt1.c0) ORDER BY (+ (CAST(t0.c2 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (+ (CAST(t0.c2 AS INTEGER))) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 WHERE (vt1.c0) ORDER BY (+ (CAST(t0.c2 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (+ (CAST(t0.c2 AS INTEGER))) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 WHERE (vt1.c0) ORDER BY (+ (CAST(t0.c2 AS INTEGER))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (x'7a75')));
SELECT SUM(count) FROM (SELECT (((- (x'7a75'))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (x'7a75')));
SELECT SUM(count) FROM (SELECT (((- (x'7a75'))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (x'7a75')));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c63)))OR(((((((((t0.c63)OR(t0.c0)))AND('')))OR(t0.c1)))OR(t0.c0)))))AND((((t0.c63, t0.c2, t0.c2))<(('0.7225495977350644', t0.c2, t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c63)))OR(((((((((t0.c63)OR(t0.c0)))AND('')))OR(t0.c1)))OR(t0.c0)))))AND((((t0.c63, t0.c2, t0.c2))<(('0.7225495977350644', t0.c2, t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c63)))OR(((((((((t0.c63)OR(t0.c0)))AND('')))OR(t0.c1)))OR(t0.c0)))))AND((((t0.c63, t0.c2, t0.c2))<(('0.7225495977350644', t0.c2, t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c63)))OR(((((((((t0.c63)OR(t0.c0)))AND('')))OR(t0.c1)))OR(t0.c0)))))AND((((t0.c63, t0.c2, t0.c2))<(('0.7225495977350644', t0.c2, t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c63)))OR(((((((((t0.c63)OR(t0.c0)))AND('')))OR(t0.c1)))OR(t0.c0)))))AND((((t0.c63, t0.c2, t0.c2))<(('0.7225495977350644', t0.c2, t0.c2))))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c63)) BETWEEN ((((t0.c1)%(t0.c2)))) AND ((t0.c2 COLLATE RTRIM)))) ORDER BY ((t0.c2) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63)) BETWEEN ((((t0.c1)%(t0.c2)))) AND ((t0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c63)) BETWEEN ((((t0.c1)%(t0.c2)))) AND ((t0.c2 COLLATE RTRIM)))) ORDER BY ((t0.c2) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63)) BETWEEN ((((t0.c1)%(t0.c2)))) AND ((t0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c63)) BETWEEN ((((t0.c1)%(t0.c2)))) AND ((t0.c2 COLLATE RTRIM)))) ORDER BY ((t0.c2) NOTNULL)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt1, t0 WHERE (0.5160206313811417) ORDER BY TRIM(((t0.c0) BETWEEN (NULL) AND (t0.c2)), (t0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ((0.5160206313811417) IS TRUE)  as count FROM vt1, t0 ORDER BY TRIM(((t0.c0) BETWEEN (NULL) AND (t0.c2)), (t0.c0 IN ())));
SELECT ALL * FROM vt1, t0 WHERE (0.5160206313811417) ORDER BY TRIM(((t0.c0) BETWEEN (NULL) AND (t0.c2)), (t0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ((0.5160206313811417) IS TRUE)  as count FROM vt1, t0 ORDER BY TRIM(((t0.c0) BETWEEN (NULL) AND (t0.c2)), (t0.c0 IN ())));
SELECT ALL * FROM vt1, t0 WHERE (0.5160206313811417) ORDER BY TRIM(((t0.c0) BETWEEN (NULL) AND (t0.c2)), (t0.c0 IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((((((((NULL)|(t0.c2)))AND((((vt0.c0, t0.c1, t0.c63))>=((t0.c2, t0.c0, t0.c0))))))AND(-4.83217742E8)))OR(vt1.c0 COLLATE NOCASE)))OR(vt0.c0))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)|(t0.c2)))AND((((vt0.c0, t0.c1, t0.c63))>=((t0.c2, t0.c0, t0.c0))))))AND(-4.83217742E8)))OR(vt1.c0 COLLATE NOCASE)))OR(vt0.c0))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((((((((NULL)|(t0.c2)))AND((((vt0.c0, t0.c1, t0.c63))>=((t0.c2, t0.c0, t0.c0))))))AND(-4.83217742E8)))OR(vt1.c0 COLLATE NOCASE)))OR(vt0.c0))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)|(t0.c2)))AND((((vt0.c0, t0.c1, t0.c63))>=((t0.c2, t0.c0, t0.c0))))))AND(-4.83217742E8)))OR(vt1.c0 COLLATE NOCASE)))OR(vt0.c0))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((((((((NULL)|(t0.c2)))AND((((vt0.c0, t0.c1, t0.c63))>=((t0.c2, t0.c0, t0.c0))))))AND(-4.83217742E8)))OR(vt1.c0 COLLATE NOCASE)))OR(vt0.c0))) ORDER BY vt0.c0  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) NOT NULL))-(-4.83217742E8))) ORDER BY vt1.c0 DESC  NULLS LAST, ((vt1.c0)||(vt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))-(-4.83217742E8))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0 DESC  NULLS LAST, ((vt1.c0)||(vt1.c0)) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) NOT NULL))-(-4.83217742E8))) ORDER BY vt1.c0 DESC  NULLS LAST, ((vt1.c0)||(vt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))-(-4.83217742E8))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0 DESC  NULLS LAST, ((vt1.c0)||(vt1.c0)) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) NOT NULL))-(-4.83217742E8))) ORDER BY vt1.c0 DESC  NULLS LAST, ((vt1.c0)||(vt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON ((((((vt0.c0)AND(t0.c2)))AND(vt1.c0))) IS TRUE) WHERE (((((t0.c0))=((vt1.c0))) IN ())) ORDER BY LIKELY(DISTINCT ((vt1.c0)>=(t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0))==((vt1.c0))) IN ())) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON ((((((vt0.c0)AND(t0.c2)))AND(vt1.c0))) IS TRUE) ORDER BY LIKELY(DISTINCT ((vt1.c0)>=(t0.c0))) ASC);
SELECT COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON ((((((vt0.c0)AND(t0.c2)))AND(vt1.c0))) IS TRUE) WHERE (((((t0.c0))=((vt1.c0))) IN ())) ORDER BY LIKELY(DISTINCT ((vt1.c0)>=(t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0))==((vt1.c0))) IN ())) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON ((((((vt0.c0)AND(t0.c2)))AND(vt1.c0))) IS TRUE) ORDER BY LIKELY(DISTINCT ((vt1.c0)>=(t0.c0))) ASC);
SELECT COUNT(*) FROM t0, vt1 CROSS JOIN vt0 ON ((((((vt0.c0)AND(t0.c2)))AND(vt1.c0))) IS TRUE) WHERE (((((t0.c0))=((vt1.c0))) IN ())) ORDER BY LIKELY(DISTINCT ((vt1.c0)>=(t0.c0))) ASC;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((t0.c2 IN ())) ISNULL) CROSS JOIN t0 ON t0.c2 WHERE (('vT' IN ())) ORDER BY ((vt0.c0 IN ()) IN ()) ASC, (((((((((((t0.c2, '1638369044', t0.c0))>=((t0.c1, 0xfffffffffc97af28, t0.c2))))AND(((t0.c63)<(t0.c2)))))AND((((t0.c2, vt0.c0, vt1.c0))>((vt0.c0, vt1.c0, vt0.c0))))))OR(CASE WHEN t0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN '-890177276' ELSE vt1.c0 END)))OR(vt0.c0 COLLATE NOCASE)) ASC, t0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('vT' IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((t0.c2 IN ())) ISNULL) CROSS JOIN t0 ON t0.c2 ORDER BY ((vt0.c0 IN ()) IN ()) ASC, (((((((((((t0.c2, '1638369044', t0.c0))>=((t0.c1, 0Xfffffffffc97af28, t0.c2))))AND(((t0.c63)<(t0.c2)))))AND((((t0.c2, vt0.c0, vt1.c0))>((vt0.c0, vt1.c0, vt0.c0))))))OR(CASE WHEN t0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN '-890177276' ELSE vt1.c0 END)))OR(vt0.c0 COLLATE NOCASE)) ASC, t0.c2  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((t0.c2 IN ())) ISNULL) CROSS JOIN t0 ON t0.c2 WHERE (('vT' IN ())) ORDER BY ((vt0.c0 IN ()) IN ()) ASC, (((((((((((t0.c2, '1638369044', t0.c0))>=((t0.c1, 0xfffffffffc97af28, t0.c2))))AND(((t0.c63)<(t0.c2)))))AND((((t0.c2, vt0.c0, vt1.c0))>((vt0.c0, vt1.c0, vt0.c0))))))OR(CASE WHEN t0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN '-890177276' ELSE vt1.c0 END)))OR(vt0.c0 COLLATE NOCASE)) ASC, t0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('vT' IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((t0.c2 IN ())) ISNULL) CROSS JOIN t0 ON t0.c2 ORDER BY ((vt0.c0 IN ()) IN ()) ASC, (((((((((((t0.c2, '1638369044', t0.c0))>=((t0.c1, 0Xfffffffffc97af28, t0.c2))))AND(((t0.c63)<(t0.c2)))))AND((((t0.c2, vt0.c0, vt1.c0))>((vt0.c0, vt1.c0, vt0.c0))))))OR(CASE WHEN t0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN '-890177276' ELSE vt1.c0 END)))OR(vt0.c0 COLLATE NOCASE)) ASC, t0.c2  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((t0.c2 IN ())) ISNULL) CROSS JOIN t0 ON t0.c2 WHERE (('vT' IN ())) ORDER BY ((vt0.c0 IN ()) IN ()) ASC, (((((((((((t0.c2, '1638369044', t0.c0))>=((t0.c1, 0xfffffffffc97af28, t0.c2))))AND(((t0.c63)<(t0.c2)))))AND((((t0.c2, vt0.c0, vt1.c0))>((vt0.c0, vt1.c0, vt0.c0))))))OR(CASE WHEN t0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN '-890177276' ELSE vt1.c0 END)))OR(vt0.c0 COLLATE NOCASE)) ASC, t0.c2  NULLS FIRST;
SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)|(t0.c1)))IS(((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c1)))) WHERE ((((vt0.c0)) NOT BETWEEN ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c63)))) AND ((vt1.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c63)))) AND ((vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)|(t0.c1)))IS(((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c1)))));
SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)|(t0.c1)))IS(((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c1)))) WHERE ((((vt0.c0)) NOT BETWEEN ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c63)))) AND ((vt1.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c63)))) AND ((vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)|(t0.c1)))IS(((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c1)))));
SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)|(t0.c1)))IS(((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c1)))) WHERE ((((vt0.c0)) NOT BETWEEN ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c63)))) AND ((vt1.c0 COLLATE BINARY))));
SELECT * FROM t0, vt0 WHERE (CASE WHEN t0.c1 THEN ((t0.c0)*(t0.c2)) WHEN (((t0.c2, t0.c2, '2027216367')) BETWEEN ((t0.c1, t0.c0, 0.43651624404430567)) AND ((t0.c63, 0.419637172424028, t0.c0))) THEN CAST(t0.c1 AS NUMERIC) WHEN ((vt0.c0) NOTNULL) THEN ((t0.c1) BETWEEN (t0.c63) AND (t0.c2)) ELSE CASE t0.c2  WHEN t0.c0 THEN t0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c1 THEN ((t0.c0)*(t0.c2)) WHEN (((t0.c2, t0.c2, '2027216367')) BETWEEN ((t0.c1, t0.c0, 0.43651624404430567)) AND ((t0.c63, 0.419637172424028, t0.c0))) THEN CAST(t0.c1 AS NUMERIC) WHEN ((vt0.c0) NOTNULL) THEN ((t0.c1) BETWEEN (t0.c63) AND (t0.c2)) ELSE CASE t0.c2  WHEN t0.c0 THEN t0.c0 END END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE WHEN t0.c1 THEN ((t0.c0)*(t0.c2)) WHEN (((t0.c2, t0.c2, '2027216367')) BETWEEN ((t0.c1, t0.c0, 0.43651624404430567)) AND ((t0.c63, 0.419637172424028, t0.c0))) THEN CAST(t0.c1 AS NUMERIC) WHEN ((vt0.c0) NOTNULL) THEN ((t0.c1) BETWEEN (t0.c63) AND (t0.c2)) ELSE CASE t0.c2  WHEN t0.c0 THEN t0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c1 THEN ((t0.c0)*(t0.c2)) WHEN (((t0.c2, t0.c2, '2027216367')) BETWEEN ((t0.c1, t0.c0, 0.43651624404430567)) AND ((t0.c63, 0.419637172424028, t0.c0))) THEN CAST(t0.c1 AS NUMERIC) WHEN ((vt0.c0) NOTNULL) THEN ((t0.c1) BETWEEN (t0.c63) AND (t0.c2)) ELSE CASE t0.c2  WHEN t0.c0 THEN t0.c0 END END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE WHEN t0.c1 THEN ((t0.c0)*(t0.c2)) WHEN (((t0.c2, t0.c2, '2027216367')) BETWEEN ((t0.c1, t0.c0, 0.43651624404430567)) AND ((t0.c63, 0.419637172424028, t0.c0))) THEN CAST(t0.c1 AS NUMERIC) WHEN ((vt0.c0) NOTNULL) THEN ((t0.c1) BETWEEN (t0.c63) AND (t0.c2)) ELSE CASE t0.c2  WHEN t0.c0 THEN t0.c0 END END);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE vt0.c0 END COLLATE BINARY) ORDER BY (NOT (t0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (NOT (t0.c1)) ASC);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE vt0.c0 END COLLATE BINARY) ORDER BY (NOT (t0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (NOT (t0.c1)) ASC);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE vt0.c0 END COLLATE BINARY) ORDER BY (NOT (t0.c1)) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS REAL));
SELECT * FROM t0 WHERE (rtreenode(((t0.c0)OR(t0.c63)), x''));
SELECT SUM(count) FROM (SELECT ((rtreenode(((t0.c0)OR(t0.c63)), x'')) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (rtreenode(((t0.c0)OR(t0.c63)), x''));
SELECT SUM(count) FROM (SELECT ((rtreenode(((t0.c0)OR(t0.c63)), x'')) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (rtreenode(((t0.c0)OR(t0.c63)), x''));
SELECT ALL * FROM vt1 WHERE ((((((~ (vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((vt1.c0 IN ())))) ORDER BY CAST((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, NULL))) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((~ (vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, NULL))) AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((((~ (vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((vt1.c0 IN ())))) ORDER BY CAST((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, NULL))) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((~ (vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, NULL))) AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((((~ (vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((vt1.c0 IN ())))) ORDER BY CAST((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, NULL))) AS REAL)  NULLS FIRST;
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS NUMERIC));
SELECT * FROM vt0 WHERE ('817099627');
SELECT SUM(count) FROM (SELECT ALL (('817099627') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('817099627');
SELECT SUM(count) FROM (SELECT ALL (('817099627') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('817099627');
SELECT * FROM t0 CROSS JOIN vt0 ON (+ (CASE x''  WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c63 THEN t0.c1 ELSE t0.c63 END)) WHERE (-264947823) ORDER BY (+ (UPPER(x'1dd5')));
SELECT SUM(count) FROM (SELECT ALL ((-264947823) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (+ (CASE x''  WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c63 THEN t0.c1 ELSE t0.c63 END)) ORDER BY (+ (UPPER(x'1dd5'))));
SELECT * FROM t0 CROSS JOIN vt0 ON (+ (CASE x''  WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c63 THEN t0.c1 ELSE t0.c63 END)) WHERE (-264947823) ORDER BY (+ (UPPER(x'1dd5')));
SELECT SUM(count) FROM (SELECT ALL ((-264947823) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (+ (CASE x''  WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c63 THEN t0.c1 ELSE t0.c63 END)) ORDER BY (+ (UPPER(x'1dd5'))));
SELECT * FROM t0 CROSS JOIN vt0 ON (+ (CASE x''  WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c63 THEN t0.c1 ELSE t0.c63 END)) WHERE (-264947823) ORDER BY (+ (UPPER(x'1dd5')));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON COALESCE(t0.c2, t0.c2) COLLATE RTRIM CROSS JOIN vt1 ON (+ (t0.c0 COLLATE NOCASE)) WHERE (((CASE t0.c2  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) IS FALSE)))) ORDER BY json_patch(CAST(vt1.c0 AS NUMERIC), CAST(vt1.c0 AS NUMERIC)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c2  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON COALESCE(t0.c2, t0.c2) COLLATE RTRIM CROSS JOIN vt1 ON (+ (t0.c0 COLLATE NOCASE)) ORDER BY json_patch(CAST(vt1.c0 AS NUMERIC), CAST(vt1.c0 AS NUMERIC)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON COALESCE(t0.c2, t0.c2) COLLATE RTRIM CROSS JOIN vt1 ON (+ (t0.c0 COLLATE NOCASE)) WHERE (((CASE t0.c2  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) IS FALSE)))) ORDER BY json_patch(CAST(vt1.c0 AS NUMERIC), CAST(vt1.c0 AS NUMERIC)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c2  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON COALESCE(t0.c2, t0.c2) COLLATE RTRIM CROSS JOIN vt1 ON (+ (t0.c0 COLLATE NOCASE)) ORDER BY json_patch(CAST(vt1.c0 AS NUMERIC), CAST(vt1.c0 AS NUMERIC)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON COALESCE(t0.c2, t0.c2) COLLATE RTRIM CROSS JOIN vt1 ON (+ (t0.c0 COLLATE NOCASE)) WHERE (((CASE t0.c2  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) IS FALSE)))) ORDER BY json_patch(CAST(vt1.c0 AS NUMERIC), CAST(vt1.c0 AS NUMERIC)) ASC  NULLS FIRST;
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON (((vt0.c0) NOT NULL) IN ()) LEFT OUTER JOIN vt0 ON (+ (((t0.c1)>=(t0.c2)))) WHERE ((((t0.c0)<(t0.c1)) IN ())) ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT (((((t0.c0)<(t0.c1)) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (((vt0.c0) NOT NULL) IN ()) LEFT OUTER JOIN vt0 ON (+ (((t0.c1)>=(t0.c2)))) ORDER BY t0.c2);
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON (((vt0.c0) NOT NULL) IN ()) LEFT OUTER JOIN vt0 ON (+ (((t0.c1)>=(t0.c2)))) WHERE ((((t0.c0)<(t0.c1)) IN ())) ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT (((((t0.c0)<(t0.c1)) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (((vt0.c0) NOT NULL) IN ()) LEFT OUTER JOIN vt0 ON (+ (((t0.c1)>=(t0.c2)))) ORDER BY t0.c2);
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON (((vt0.c0) NOT NULL) IN ()) LEFT OUTER JOIN vt0 ON (+ (((t0.c1)>=(t0.c2)))) WHERE ((((t0.c0)<(t0.c1)) IN ())) ORDER BY t0.c2;
SELECT ALL * FROM t0 NOT INDEXED, vt1, vt0 WHERE ((NOT (CAST(t0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(t0.c2 AS REAL)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0 NOT INDEXED, vt1, vt0 WHERE ((NOT (CAST(t0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(t0.c2 AS REAL)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0 NOT INDEXED, vt1, vt0 WHERE ((NOT (CAST(t0.c2 AS REAL))));
SELECT COUNT(*) FROM t0, vt1 WHERE ((((((x'') NOTNULL), ((t0.c1) ISNULL), CASE NULL  WHEN t0.c0 THEN vt1.c0 WHEN t0.c63 THEN vt1.c0 WHEN '0.9271765844545901' THEN t0.c0 ELSE t0.c0 END))!=((t0.c1, (- (vt1.c0)), CAST(vt1.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'') NOTNULL), ((t0.c1) ISNULL), CASE NULL  WHEN t0.c0 THEN vt1.c0 WHEN t0.c63 THEN vt1.c0 WHEN '0.9271765844545901' THEN t0.c0 ELSE t0.c0 END))!=((t0.c1, (- (vt1.c0)), CAST(vt1.c0 AS BLOB))))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((((x'') NOTNULL), ((t0.c1) ISNULL), CASE NULL  WHEN t0.c0 THEN vt1.c0 WHEN t0.c63 THEN vt1.c0 WHEN '0.9271765844545901' THEN t0.c0 ELSE t0.c0 END))!=((t0.c1, (- (vt1.c0)), CAST(vt1.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'') NOTNULL), ((t0.c1) ISNULL), CASE NULL  WHEN t0.c0 THEN vt1.c0 WHEN t0.c63 THEN vt1.c0 WHEN '0.9271765844545901' THEN t0.c0 ELSE t0.c0 END))!=((t0.c1, (- (vt1.c0)), CAST(vt1.c0 AS BLOB))))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((((x'') NOTNULL), ((t0.c1) ISNULL), CASE NULL  WHEN t0.c0 THEN vt1.c0 WHEN t0.c63 THEN vt1.c0 WHEN '0.9271765844545901' THEN t0.c0 ELSE t0.c0 END))!=((t0.c1, (- (vt1.c0)), CAST(vt1.c0 AS BLOB)))));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((vt1.c0)AND(vt1.c0)) IN ())) ORDER BY t0.c1 DESC, ((CAST(t0.c0 AS BLOB)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY t0.c1 DESC, ((CAST(t0.c0 AS BLOB)) IS TRUE) DESC);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((vt1.c0)AND(vt1.c0)) IN ())) ORDER BY t0.c1 DESC, ((CAST(t0.c0 AS BLOB)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY t0.c1 DESC, ((CAST(t0.c0 AS BLOB)) IS TRUE) DESC);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((vt1.c0)AND(vt1.c0)) IN ())) ORDER BY t0.c1 DESC, ((CAST(t0.c0 AS BLOB)) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM t0 WHERE (HEX((t0.c1 IN ()))) ORDER BY CAST(t0.c2 COLLATE BINARY AS TEXT)  NULLS LAST, (t0.c1 IN (((t0.c1)LIKE(t0.c1)))), UPPER(((t0.c63)&(-4.83217742E8)));
SELECT SUM(count) FROM (SELECT ((HEX((t0.c1 IN ()))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c2 COLLATE BINARY AS TEXT)  NULLS LAST, (t0.c1 IN (((t0.c1)LIKE(t0.c1)))), UPPER(((t0.c63)&(-4.83217742E8))));
SELECT ALL COUNT(*) FROM t0 WHERE (HEX((t0.c1 IN ()))) ORDER BY CAST(t0.c2 COLLATE BINARY AS TEXT)  NULLS LAST, (t0.c1 IN (((t0.c1)LIKE(t0.c1)))), UPPER(((t0.c63)&(-4.83217742E8)));
SELECT SUM(count) FROM (SELECT ((HEX((t0.c1 IN ()))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c2 COLLATE BINARY AS TEXT)  NULLS LAST, (t0.c1 IN (((t0.c1)LIKE(t0.c1)))), UPPER(((t0.c63)&(-4.83217742E8))));
SELECT ALL COUNT(*) FROM t0 WHERE (HEX((t0.c1 IN ()))) ORDER BY CAST(t0.c2 COLLATE BINARY AS TEXT)  NULLS LAST, (t0.c1 IN (((t0.c1)LIKE(t0.c1)))), UPPER(((t0.c63)&(-4.83217742E8)));
SELECT * FROM vt0 CROSS JOIN t0 ON CASE WHEN CAST(t0.c2 AS BLOB) THEN ((vt0.c0)>(vt0.c0)) WHEN (((vt0.c0))>=((vt1.c0))) THEN (- (x'')) WHEN (vt1.c0 IN ()) THEN x'' ELSE CASE WHEN t0.c63 THEN t0.c0 ELSE vt1.c0 END END LEFT OUTER JOIN vt1 ON TRIM(vt1.c0) COLLATE BINARY WHERE ('2027216367');
SELECT SUM(count) FROM (SELECT ALL (('2027216367') IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE WHEN CAST(t0.c2 AS BLOB) THEN ((vt0.c0)>(vt0.c0)) WHEN (((vt0.c0))>=((vt1.c0))) THEN (- (x'')) WHEN (vt1.c0 IN ()) THEN x'' ELSE CASE WHEN t0.c63 THEN t0.c0 ELSE vt1.c0 END END LEFT OUTER JOIN vt1 ON TRIM(vt1.c0) COLLATE BINARY);
SELECT * FROM vt0 CROSS JOIN t0 ON CASE WHEN CAST(t0.c2 AS BLOB) THEN ((vt0.c0)>(vt0.c0)) WHEN (((vt0.c0))>=((vt1.c0))) THEN (- (x'')) WHEN (vt1.c0 IN ()) THEN x'' ELSE CASE WHEN t0.c63 THEN t0.c0 ELSE vt1.c0 END END LEFT OUTER JOIN vt1 ON TRIM(vt1.c0) COLLATE BINARY WHERE ('2027216367');
SELECT SUM(count) FROM (SELECT ALL (('2027216367') IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE WHEN CAST(t0.c2 AS BLOB) THEN ((vt0.c0)>(vt0.c0)) WHEN (((vt0.c0))>=((vt1.c0))) THEN (- (x'')) WHEN (vt1.c0 IN ()) THEN x'' ELSE CASE WHEN t0.c63 THEN t0.c0 ELSE vt1.c0 END END LEFT OUTER JOIN vt1 ON TRIM(vt1.c0) COLLATE BINARY);
SELECT * FROM vt0 CROSS JOIN t0 ON CASE WHEN CAST(t0.c2 AS BLOB) THEN ((vt0.c0)>(vt0.c0)) WHEN (((vt0.c0))>=((vt1.c0))) THEN (- (x'')) WHEN (vt1.c0 IN ()) THEN x'' ELSE CASE WHEN t0.c63 THEN t0.c0 ELSE vt1.c0 END END LEFT OUTER JOIN vt1 ON TRIM(vt1.c0) COLLATE BINARY WHERE ('2027216367');
SELECT ALL COUNT(*) FROM vt1, t0 NATURAL JOIN vt0 WHERE (((CASE vt1.c0  WHEN t0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0)*(t0.c2))) AND (LIKELY(DISTINCT t0.c2)))) ORDER BY 'B', ((((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0)))))>=((UPPER(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN t0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0)*(t0.c2))) AND (LIKELY(DISTINCT t0.c2)))) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN vt0 ORDER BY 'B', ((((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0)))))>=((UPPER(DISTINCT vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, t0 NATURAL JOIN vt0 WHERE (((CASE vt1.c0  WHEN t0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0)*(t0.c2))) AND (LIKELY(DISTINCT t0.c2)))) ORDER BY 'B', ((((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0)))))>=((UPPER(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN t0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0)*(t0.c2))) AND (LIKELY(DISTINCT t0.c2)))) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN vt0 ORDER BY 'B', ((((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0)))))>=((UPPER(DISTINCT vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, t0 NATURAL JOIN vt0 WHERE (((CASE vt1.c0  WHEN t0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0)*(t0.c2))) AND (LIKELY(DISTINCT t0.c2)))) ORDER BY 'B', ((((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0)))))>=((UPPER(DISTINCT vt1.c0))));
SELECT ALL * FROM vt1, vt0, t0 WHERE ((((((((((((t0.c63, vt1.c0, t0.c63)) BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c0, NULL, t0.c63))))OR(CASE vt1.c0  WHEN t0.c1 THEN t0.c1 ELSE x'' END)))OR(((((((((vt1.c0)OR(t0.c0)))OR(t0.c2)))AND(t0.c1)))OR(t0.c1)))))AND(((t0.c0)&(t0.c1)))))AND((((vt0.c0))<=((vt0.c0)))))) ORDER BY CAST(CASE 0.7686395766929118  WHEN vt1.c0 THEN t0.c1 END AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c63, vt1.c0, t0.c63)) BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c0, NULL, t0.c63))))OR(CASE vt1.c0  WHEN t0.c1 THEN t0.c1 ELSE x'' END)))OR(((((((((vt1.c0)OR(t0.c0)))OR(t0.c2)))AND(t0.c1)))OR(t0.c1)))))AND(((t0.c0)&(t0.c1)))))AND((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CAST(CASE 0.7686395766929118  WHEN vt1.c0 THEN t0.c1 END AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 WHERE ((((((((((((t0.c63, vt1.c0, t0.c63)) BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c0, NULL, t0.c63))))OR(CASE vt1.c0  WHEN t0.c1 THEN t0.c1 ELSE x'' END)))OR(((((((((vt1.c0)OR(t0.c0)))OR(t0.c2)))AND(t0.c1)))OR(t0.c1)))))AND(((t0.c0)&(t0.c1)))))AND((((vt0.c0))<=((vt0.c0)))))) ORDER BY CAST(CASE 0.7686395766929118  WHEN vt1.c0 THEN t0.c1 END AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c63, vt1.c0, t0.c63)) BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c0, NULL, t0.c63))))OR(CASE vt1.c0  WHEN t0.c1 THEN t0.c1 ELSE x'' END)))OR(((((((((vt1.c0)OR(t0.c0)))OR(t0.c2)))AND(t0.c1)))OR(t0.c1)))))AND(((t0.c0)&(t0.c1)))))AND((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CAST(CASE 0.7686395766929118  WHEN vt1.c0 THEN t0.c1 END AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 WHERE ((((((((((((t0.c63, vt1.c0, t0.c63)) BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c0, NULL, t0.c63))))OR(CASE vt1.c0  WHEN t0.c1 THEN t0.c1 ELSE x'' END)))OR(((((((((vt1.c0)OR(t0.c0)))OR(t0.c2)))AND(t0.c1)))OR(t0.c1)))))AND(((t0.c0)&(t0.c1)))))AND((((vt0.c0))<=((vt0.c0)))))) ORDER BY CAST(CASE 0.7686395766929118  WHEN vt1.c0 THEN t0.c1 END AS INTEGER) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((((ABS(DISTINCT vt1.c0))OR(((0.5491959999792986)AND(vt1.c0)))))AND(((t0.c63)<=(t0.c1)))) RIGHT OUTER JOIN t0 ON ((('914774977'))>((x''))) WHERE (((((((((json_object(vt0.c0, t0.c63))OR(t0.c1 COLLATE RTRIM)))OR(((t0.c1) IS TRUE))))OR(((vt1.c0)<(t0.c0)))))OR(t0.c63))) ORDER BY ((((LENGTH(t0.c1))AND(vt1.c0 COLLATE RTRIM)))AND(t0.c63 COLLATE BINARY)), '1986180405' DESC;
SELECT SUM(count) FROM (SELECT ((((((((((json_object(vt0.c0, t0.c63))OR(t0.c1 COLLATE RTRIM)))OR(((t0.c1) IS TRUE))))OR(((vt1.c0)<(t0.c0)))))OR(t0.c63))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((ABS(DISTINCT vt1.c0))OR(((0.5491959999792986)AND(vt1.c0)))))AND(((t0.c63)<=(t0.c1)))) RIGHT OUTER JOIN t0 ON ((('914774977'))>((x''))) ORDER BY ((((LENGTH(t0.c1))AND(vt1.c0 COLLATE RTRIM)))AND(t0.c63 COLLATE BINARY)), '1986180405' DESC);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((((ABS(DISTINCT vt1.c0))OR(((0.5491959999792986)AND(vt1.c0)))))AND(((t0.c63)<=(t0.c1)))) RIGHT OUTER JOIN t0 ON ((('914774977'))>((x''))) WHERE (((((((((json_object(vt0.c0, t0.c63))OR(t0.c1 COLLATE RTRIM)))OR(((t0.c1) IS TRUE))))OR(((vt1.c0)<(t0.c0)))))OR(t0.c63))) ORDER BY ((((LENGTH(t0.c1))AND(vt1.c0 COLLATE RTRIM)))AND(t0.c63 COLLATE BINARY)), '1986180405' DESC;
SELECT SUM(count) FROM (SELECT ((((((((((json_object(vt0.c0, t0.c63))OR(t0.c1 COLLATE RTRIM)))OR(((t0.c1) IS TRUE))))OR(((vt1.c0)<(t0.c0)))))OR(t0.c63))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((ABS(DISTINCT vt1.c0))OR(((0.5491959999792986)AND(vt1.c0)))))AND(((t0.c63)<=(t0.c1)))) RIGHT OUTER JOIN t0 ON ((('914774977'))>((x''))) ORDER BY ((((LENGTH(t0.c1))AND(vt1.c0 COLLATE RTRIM)))AND(t0.c63 COLLATE BINARY)), '1986180405' DESC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((('552656106') NOT NULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (CASE WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0) ISNULL) ELSE CASE vt1.c0  WHEN '' THEN vt0.c0 END END) ORDER BY ((((((((((((((vt1.c0)AND(0.22189947126855525)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(NULL)))OR(vt1.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0) ISNULL) ELSE CASE vt1.c0  WHEN '' THEN vt0.c0 END END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((('552656106') NOT NULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) ORDER BY ((((((((((((((vt1.c0)AND(0.22189947126855525)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(NULL)))OR(vt1.c0))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((('552656106') NOT NULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (CASE WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0) ISNULL) ELSE CASE vt1.c0  WHEN '' THEN vt0.c0 END END) ORDER BY ((((((((((((((vt1.c0)AND(0.22189947126855525)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(NULL)))OR(vt1.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0) ISNULL) ELSE CASE vt1.c0  WHEN '' THEN vt0.c0 END END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((('552656106') NOT NULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) ORDER BY ((((((((((((((vt1.c0)AND(0.22189947126855525)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(NULL)))OR(vt1.c0))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((('552656106') NOT NULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (CASE WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0) ISNULL) ELSE CASE vt1.c0  WHEN '' THEN vt0.c0 END END) ORDER BY ((((((((((((((vt1.c0)AND(0.22189947126855525)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(NULL)))OR(vt1.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CAST((NULL IN (t0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NULL IN (t0.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((NULL IN (t0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NULL IN (t0.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((NULL IN (t0.c2)) AS NUMERIC));
SELECT COUNT(*) FROM vt1, t0 WHERE ((t0.c63 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c63 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((t0.c63 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c63 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((t0.c63 COLLATE BINARY IN ()));
SELECT * FROM t0, vt1 WHERE (CAST(((vt1.c0)&(t0.c1)) AS INTEGER)) ORDER BY NULL DESC  NULLS LAST, (- (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)&(t0.c1)) AS INTEGER)) IS TRUE)  as count FROM t0, vt1 ORDER BY NULL DESC  NULLS LAST, (- (NULL))  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE (CAST(((vt1.c0)&(t0.c1)) AS INTEGER)) ORDER BY NULL DESC  NULLS LAST, (- (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)&(t0.c1)) AS INTEGER)) IS TRUE)  as count FROM t0, vt1 ORDER BY NULL DESC  NULLS LAST, (- (NULL))  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE (CAST(((vt1.c0)&(t0.c1)) AS INTEGER)) ORDER BY NULL DESC  NULLS LAST, (- (NULL))  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (((t0.c63) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c63) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((t0.c63) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c63) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((t0.c63) ISNULL) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (STRFTIME((vt0.c0 IN (t0.c2, t0.c2)), vt0.c0 COLLATE NOCASE, t0.c63, CAST(t0.c0 AS REAL), ((t0.c0)<<(t0.c2)))) ORDER BY CASE (NOT (t0.c2))  WHEN (t0.c0 IN ()) THEN ((t0.c0)LIKE(t0.c2)) ELSE '.J' END ASC  NULLS LAST, TRIM(-1165126215);
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME((vt0.c0 IN (t0.c2, t0.c2)), vt0.c0 COLLATE NOCASE, t0.c63, CAST(t0.c0 AS REAL), ((t0.c0)<<(t0.c2)))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CASE (NOT (t0.c2))  WHEN (t0.c0 IN ()) THEN ((t0.c0)LIKE(t0.c2)) ELSE '.J' END ASC  NULLS LAST, TRIM(-1165126215));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (STRFTIME((vt0.c0 IN (t0.c2, t0.c2)), vt0.c0 COLLATE NOCASE, t0.c63, CAST(t0.c0 AS REAL), ((t0.c0)<<(t0.c2)))) ORDER BY CASE (NOT (t0.c2))  WHEN (t0.c0 IN ()) THEN ((t0.c0)LIKE(t0.c2)) ELSE '.J' END ASC  NULLS LAST, TRIM(-1165126215);
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME((vt0.c0 IN (t0.c2, t0.c2)), vt0.c0 COLLATE NOCASE, t0.c63, CAST(t0.c0 AS REAL), ((t0.c0)<<(t0.c2)))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CASE (NOT (t0.c2))  WHEN (t0.c0 IN ()) THEN ((t0.c0)LIKE(t0.c2)) ELSE '.J' END ASC  NULLS LAST, TRIM(-1165126215));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (STRFTIME((vt0.c0 IN (t0.c2, t0.c2)), vt0.c0 COLLATE NOCASE, t0.c63, CAST(t0.c0 AS REAL), ((t0.c0)<<(t0.c2)))) ORDER BY CASE (NOT (t0.c2))  WHEN (t0.c0 IN ()) THEN ((t0.c0)LIKE(t0.c2)) ELSE '.J' END ASC  NULLS LAST, TRIM(-1165126215);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0)+(vt0.c0))))=((CAST(vt1.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)+(vt0.c0))))==((CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0)+(vt0.c0))))=((CAST(vt1.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)+(vt0.c0))))==((CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0)+(vt0.c0))))=((CAST(vt1.c0 AS NUMERIC)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON t0.c2 WHERE (((((t0.c2)OR(ABS(DISTINCT t0.c63))))AND((t0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)OR(ABS(DISTINCT t0.c63))))AND((t0.c1 IN ())))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON t0.c2);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON t0.c2 WHERE (((((t0.c2)OR(ABS(DISTINCT t0.c63))))AND((t0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)OR(ABS(DISTINCT t0.c63))))AND((t0.c1 IN ())))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON t0.c2);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON t0.c2 WHERE (((((t0.c2)OR(ABS(DISTINCT t0.c63))))AND((t0.c1 IN ()))));
SELECT ALL * FROM vt1 WHERE (((('')) BETWEEN (((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, x'87be', x''))))) AND ((((((0.8509136879338866)AND(0.8407564255998221)))OR(vt1.c0)))))) ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (CASE vt1.c0  WHEN 0.003675629537636338 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('')) BETWEEN (((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, x'87be', x''))))) AND ((((((0.8509136879338866)AND(0.8407564255998221)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (CASE vt1.c0  WHEN 0.003675629537636338 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((('')) BETWEEN (((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, x'87be', x''))))) AND ((((((0.8509136879338866)AND(0.8407564255998221)))OR(vt1.c0)))))) ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (CASE vt1.c0  WHEN 0.003675629537636338 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('')) BETWEEN (((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, x'87be', x''))))) AND ((((((0.8509136879338866)AND(0.8407564255998221)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (CASE vt1.c0  WHEN 0.003675629537636338 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((('')) BETWEEN (((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, x'87be', x''))))) AND ((((((0.8509136879338866)AND(0.8407564255998221)))OR(vt1.c0)))))) ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (CASE vt1.c0  WHEN 0.003675629537636338 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)%(vt1.c0))) NOT BETWEEN (JULIANDAY(vt1.c0, vt0.c0, vt0.c0)) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt1.c0))) NOT BETWEEN (JULIANDAY(vt1.c0, vt0.c0, vt0.c0)) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)%(vt1.c0))) NOT BETWEEN (JULIANDAY(vt1.c0, vt0.c0, vt0.c0)) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt1.c0))) NOT BETWEEN (JULIANDAY(vt1.c0, vt0.c0, vt0.c0)) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)%(vt1.c0))) NOT BETWEEN (JULIANDAY(vt1.c0, vt0.c0, vt0.c0)) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM t0, vt1, vt0 WHERE ('0.655905406515479') ORDER BY (((- (t0.c2))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('0.655905406515479') IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((- (t0.c2))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE ('0.655905406515479') ORDER BY (((- (t0.c2))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('0.655905406515479') IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((- (t0.c2))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE ('0.655905406515479') ORDER BY (((- (t0.c2))) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))||(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))||(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))||(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))||(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))||(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0 IN ())) IS TRUE));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((('953335711')-(CAST(vt0.c0 AS TEXT)))) ORDER BY '388396025' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('953335711')-(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY '388396025' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((('953335711')-(CAST(vt0.c0 AS TEXT)))) ORDER BY '388396025' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('953335711')-(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY '388396025' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((('953335711')-(CAST(vt0.c0 AS TEXT)))) ORDER BY '388396025' DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((((CASE x'7b5a'  WHEN t0.c1 THEN t0.c2 ELSE '1991122741' END)OR(((-1302389423) BETWEEN (vt1.c0) AND (t0.c2)))))OR((t0.c63 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE x'7b5a'  WHEN t0.c1 THEN t0.c2 ELSE '1991122741' END)OR(((-1302389423) BETWEEN (vt1.c0) AND (t0.c2)))))OR((t0.c63 IN ())))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((((CASE x'7b5a'  WHEN t0.c1 THEN t0.c2 ELSE '1991122741' END)OR(((-1302389423) BETWEEN (vt1.c0) AND (t0.c2)))))OR((t0.c63 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE x'7b5a'  WHEN t0.c1 THEN t0.c2 ELSE '1991122741' END)OR(((-1302389423) BETWEEN (vt1.c0) AND (t0.c2)))))OR((t0.c63 IN ())))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((((CASE x'7b5a'  WHEN t0.c1 THEN t0.c2 ELSE '1991122741' END)OR(((-1302389423) BETWEEN (vt1.c0) AND (t0.c2)))))OR((t0.c63 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)LIKE(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)LIKE(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)LIKE(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)LIKE(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)LIKE(vt0.c0)) AS REAL));
SELECT ALL * FROM t0, vt0, vt1 WHERE ((NOT (((t0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c1) NOT NULL)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((NOT (((t0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c1) NOT NULL)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((NOT (((t0.c1) NOT NULL))));
SELECT ALL * FROM vt0, t0 WHERE (CAST(((t0.c63)||(t0.c1)) AS NUMERIC)) ORDER BY ((((CAST(t0.c2 AS INTEGER))AND((+ (t0.c2)))))OR(((((t0.c2)AND(t0.c63)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c63)||(t0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((CAST(t0.c2 AS INTEGER))AND((+ (t0.c2)))))OR(((((t0.c2)AND(t0.c63)))OR(t0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE (CAST(((t0.c63)||(t0.c1)) AS NUMERIC)) ORDER BY ((((CAST(t0.c2 AS INTEGER))AND((+ (t0.c2)))))OR(((((t0.c2)AND(t0.c63)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c63)||(t0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((CAST(t0.c2 AS INTEGER))AND((+ (t0.c2)))))OR(((((t0.c2)AND(t0.c63)))OR(t0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE (CAST(((t0.c63)||(t0.c1)) AS NUMERIC)) ORDER BY ((((CAST(t0.c2 AS INTEGER))AND((+ (t0.c2)))))OR(((((t0.c2)AND(t0.c63)))OR(t0.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(0xffffffffb5ae875a AS REAL)) ORDER BY ((CASE WHEN t0.c1 THEN t0.c1 WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END)>=(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0xffffffffb5ae875a AS REAL)) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c1 THEN t0.c1 WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END)>=(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(0xffffffffb5ae875a AS REAL)) ORDER BY ((CASE WHEN t0.c1 THEN t0.c1 WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END)>=(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0xffffffffb5ae875a AS REAL)) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c1 THEN t0.c1 WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END)>=(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(0xffffffffb5ae875a AS REAL)) ORDER BY ((CASE WHEN t0.c1 THEN t0.c1 WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END)>=(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1))));
SELECT ALL * FROM vt0, t0, vt1 WHERE (LIKELY(CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c1 END)) ORDER BY (((((vt0.c0))<>((t0.c1))))<>(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c1 END)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((((vt0.c0))!=((t0.c1))))!=(vt0.c0)) ASC);
SELECT ALL * FROM vt0, t0, vt1 WHERE (LIKELY(CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c1 END)) ORDER BY (((((vt0.c0))<>((t0.c1))))<>(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c1 END)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((((vt0.c0))!=((t0.c1))))!=(vt0.c0)) ASC);
SELECT ALL * FROM vt0, t0, vt1 WHERE (LIKELY(CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c1 END)) ORDER BY (((((vt0.c0))<>((t0.c1))))<>(vt0.c0)) ASC;
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (vt0.c0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (t0.c1) ORDER BY ((CASE WHEN t0.c0 THEN t0.c1 END) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((CASE WHEN t0.c0 THEN t0.c1 END) ISNULL));
SELECT ALL * FROM vt1, vt0, t0 WHERE (t0.c1) ORDER BY ((CASE WHEN t0.c0 THEN t0.c1 END) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((CASE WHEN t0.c0 THEN t0.c1 END) ISNULL));
SELECT ALL * FROM vt1, vt0, t0 WHERE (t0.c1) ORDER BY ((CASE WHEN t0.c0 THEN t0.c1 END) ISNULL);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt0, t0, vt1 WHERE ('1470166875' COLLATE BINARY) ORDER BY LTRIM(((vt1.c0) NOT NULL), CAST(t0.c2 AS TEXT)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1470166875' COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY LTRIM(((vt1.c0) NOT NULL), CAST(t0.c2 AS TEXT)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, vt1 WHERE ('1470166875' COLLATE BINARY) ORDER BY LTRIM(((vt1.c0) NOT NULL), CAST(t0.c2 AS TEXT)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1470166875' COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY LTRIM(((vt1.c0) NOT NULL), CAST(t0.c2 AS TEXT)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, vt1 WHERE ('1470166875' COLLATE BINARY) ORDER BY LTRIM(((vt1.c0) NOT NULL), CAST(t0.c2 AS TEXT)) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((((vt0.c0)%(NULL)))AND(vt0.c0)))OR(((vt1.c0)OR(vt0.c0))))) ORDER BY DATETIME(x'', t0.c1, vt1.c0) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)%(NULL)))AND(vt0.c0)))OR(((vt1.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY DATETIME(x'', t0.c1, vt1.c0) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((((vt0.c0)%(NULL)))AND(vt0.c0)))OR(((vt1.c0)OR(vt0.c0))))) ORDER BY DATETIME(x'', t0.c1, vt1.c0) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)%(NULL)))AND(vt0.c0)))OR(((vt1.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY DATETIME(x'', t0.c1, vt1.c0) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((((vt0.c0)%(NULL)))AND(vt0.c0)))OR(((vt1.c0)OR(vt0.c0))))) ORDER BY DATETIME(x'', t0.c1, vt1.c0) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ()));
SELECT * FROM vt1, t0 WHERE ('o') ORDER BY ((JULIANDAY(vt1.c0, t0.c0, t0.c63))IS NOT(t0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('o') IS TRUE)  as count FROM vt1, t0 ORDER BY ((JULIANDAY(vt1.c0, t0.c0, t0.c63))IS NOT(t0.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM vt1, t0 WHERE ('o') ORDER BY ((JULIANDAY(vt1.c0, t0.c0, t0.c63))IS NOT(t0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('o') IS TRUE)  as count FROM vt1, t0 ORDER BY ((JULIANDAY(vt1.c0, t0.c0, t0.c63))IS NOT(t0.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM vt1, t0 WHERE ('o') ORDER BY ((JULIANDAY(vt1.c0, t0.c0, t0.c63))IS NOT(t0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((NULL)%(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)%(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((NULL)%(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)%(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((NULL)%(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (t0.c0) ORDER BY ((((t0.c1)OR(x'')))<=(vt1.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((t0.c1)OR(x'')))<=(vt1.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (t0.c0) ORDER BY ((((t0.c1)OR(x'')))<=(vt1.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((t0.c1)OR(x'')))<=(vt1.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (t0.c0) ORDER BY ((((t0.c1)OR(x'')))<=(vt1.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM vt1, t0 WHERE (-5.7168088E7) ORDER BY '-890177276'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-5.7168088E7) IS TRUE)  as count FROM vt1, t0 ORDER BY '-890177276'  NULLS LAST);
SELECT ALL * FROM vt1, t0 WHERE (-5.7168088E7) ORDER BY '-890177276'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-5.7168088E7) IS TRUE)  as count FROM vt1, t0 ORDER BY '-890177276'  NULLS LAST);
SELECT ALL * FROM vt1, t0 WHERE (-5.7168088E7) ORDER BY '-890177276'  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((t0.c2)-(t0.c0)))&(((t0.c0) IS FALSE))) INNER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))) IS TRUE) WHERE (CASE WHEN (NOT (NULL)) THEN CAST(t0.c63 AS NUMERIC) END) ORDER BY (((+ (t0.c0)))>=(x'')), -2120721260  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (NULL)) THEN CAST(t0.c63 AS NUMERIC) END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((t0.c2)-(t0.c0)))&(((t0.c0) IS FALSE))) INNER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))) IS TRUE) ORDER BY (((+ (t0.c0)))>=(x'')), -2120721260  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((t0.c2)-(t0.c0)))&(((t0.c0) IS FALSE))) INNER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))) IS TRUE) WHERE (CASE WHEN (NOT (NULL)) THEN CAST(t0.c63 AS NUMERIC) END) ORDER BY (((+ (t0.c0)))>=(x'')), -2120721260  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (NULL)) THEN CAST(t0.c63 AS NUMERIC) END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((t0.c2)-(t0.c0)))&(((t0.c0) IS FALSE))) INNER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))) IS TRUE) ORDER BY (((+ (t0.c0)))>=(x'')), -2120721260  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (CASE ((((((((t0.c0)AND(NULL)))OR(t0.c63)))AND(0.2435716312518088)))AND(t0.c0))  WHEN (~ (t0.c0)) THEN ((NULL)OR(t0.c63)) WHEN ((t0.c2) BETWEEN (t0.c63) AND (vt1.c0)) THEN (((x'3501', vt1.c0, t0.c0))<=((t0.c2, vt1.c0, t0.c1))) WHEN (((t0.c2)) BETWEEN ((vt1.c0)) AND ((t0.c0))) THEN ((((t0.c63)OR(t0.c0)))AND(vt1.c0)) ELSE ((vt1.c0)>(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((t0.c0)AND(NULL)))OR(t0.c63)))AND(0.2435716312518088)))AND(t0.c0))  WHEN (~ (t0.c0)) THEN ((NULL)OR(t0.c63)) WHEN ((t0.c2) BETWEEN (t0.c63) AND (vt1.c0)) THEN (((x'3501', vt1.c0, t0.c0))<=((t0.c2, vt1.c0, t0.c1))) WHEN (((t0.c2)) BETWEEN ((vt1.c0)) AND ((t0.c0))) THEN ((((t0.c63)OR(t0.c0)))AND(vt1.c0)) ELSE ((vt1.c0)>(vt1.c0)) END) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (CASE ((((((((t0.c0)AND(NULL)))OR(t0.c63)))AND(0.2435716312518088)))AND(t0.c0))  WHEN (~ (t0.c0)) THEN ((NULL)OR(t0.c63)) WHEN ((t0.c2) BETWEEN (t0.c63) AND (vt1.c0)) THEN (((x'3501', vt1.c0, t0.c0))<=((t0.c2, vt1.c0, t0.c1))) WHEN (((t0.c2)) BETWEEN ((vt1.c0)) AND ((t0.c0))) THEN ((((t0.c63)OR(t0.c0)))AND(vt1.c0)) ELSE ((vt1.c0)>(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((t0.c0)AND(NULL)))OR(t0.c63)))AND(0.2435716312518088)))AND(t0.c0))  WHEN (~ (t0.c0)) THEN ((NULL)OR(t0.c63)) WHEN ((t0.c2) BETWEEN (t0.c63) AND (vt1.c0)) THEN (((x'3501', vt1.c0, t0.c0))<=((t0.c2, vt1.c0, t0.c1))) WHEN (((t0.c2)) BETWEEN ((vt1.c0)) AND ((t0.c0))) THEN ((((t0.c63)OR(t0.c0)))AND(vt1.c0)) ELSE ((vt1.c0)>(vt1.c0)) END) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (CASE ((((((((t0.c0)AND(NULL)))OR(t0.c63)))AND(0.2435716312518088)))AND(t0.c0))  WHEN (~ (t0.c0)) THEN ((NULL)OR(t0.c63)) WHEN ((t0.c2) BETWEEN (t0.c63) AND (vt1.c0)) THEN (((x'3501', vt1.c0, t0.c0))<=((t0.c2, vt1.c0, t0.c1))) WHEN (((t0.c2)) BETWEEN ((vt1.c0)) AND ((t0.c0))) THEN ((((t0.c63)OR(t0.c0)))AND(vt1.c0)) ELSE ((vt1.c0)>(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((+ (t0.c0))))>=((((NULL) BETWEEN (vt0.c0) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((+ (t0.c0))))>=((((NULL) BETWEEN (vt0.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((+ (t0.c0))))>=((((NULL) BETWEEN (vt0.c0) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((+ (t0.c0))))>=((((NULL) BETWEEN (vt0.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((+ (t0.c0))))>=((((NULL) BETWEEN (vt0.c0) AND (vt1.c0))))));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (vt0.c0);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0)OR(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)OR(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0)OR(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)OR(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0)OR(vt1.c0)) AS REAL));
SELECT ALL * FROM vt0 WHERE ((((((NOT (vt0.c0)))OR(((((vt0.c0)OR(0.7225495977350644)))OR(vt0.c0)))))AND((((vt0.c0))<((0.783108067757442)))))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (956010911)))AND((vt0.c0 IN ()))))OR(TRIM(x'ab9d')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c0)))OR(((((vt0.c0)OR(0.7225495977350644)))OR(vt0.c0)))))AND((((vt0.c0))<((0.783108067757442)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (956010911)))AND((vt0.c0 IN ()))))OR(TRIM(x'ab9d')))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((NOT (vt0.c0)))OR(((((vt0.c0)OR(0.7225495977350644)))OR(vt0.c0)))))AND((((vt0.c0))<((0.783108067757442)))))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (956010911)))AND((vt0.c0 IN ()))))OR(TRIM(x'ab9d')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c0)))OR(((((vt0.c0)OR(0.7225495977350644)))OR(vt0.c0)))))AND((((vt0.c0))<((0.783108067757442)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (956010911)))AND((vt0.c0 IN ()))))OR(TRIM(x'ab9d')))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((NOT (vt0.c0)))OR(((((vt0.c0)OR(0.7225495977350644)))OR(vt0.c0)))))AND((((vt0.c0))<((0.783108067757442)))))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (956010911)))AND((vt0.c0 IN ()))))OR(TRIM(x'ab9d')))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (LIKELIHOOD(CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END, 0.03575583249768044)) ORDER BY (((t0.c2) NOTNULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END, 0.03575583249768044)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((t0.c2) NOTNULL) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (LIKELIHOOD(CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END, 0.03575583249768044)) ORDER BY (((t0.c2) NOTNULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END, 0.03575583249768044)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((t0.c2) NOTNULL) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (LIKELIHOOD(CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END, 0.03575583249768044)) ORDER BY (((t0.c2) NOTNULL) IN ()) DESC;
SELECT * FROM t0 WHERE (((NULL) BETWEEN (0.49560380995241493) AND (t0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (0.49560380995241493) AND (t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((NULL) BETWEEN (0.49560380995241493) AND (t0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (0.49560380995241493) AND (t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((NULL) BETWEEN (0.49560380995241493) AND (t0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((t0.c63)>>(t0.c0)) THEN ((t0.c1) NOT NULL) ELSE (((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c63)>>(t0.c0)) THEN ((t0.c1) NOT NULL) ELSE (((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((t0.c63)>>(t0.c0)) THEN ((t0.c1) NOT NULL) ELSE (((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c63)>>(t0.c0)) THEN ((t0.c1) NOT NULL) ELSE (((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((t0.c63)>>(t0.c0)) THEN ((t0.c1) NOT NULL) ELSE (((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))) END);
SELECT COUNT(*) FROM t0 WHERE (TRIM(t0.c1, t0.c2) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(t0.c1, t0.c2) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TRIM(t0.c1, t0.c2) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(t0.c1, t0.c2) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TRIM(t0.c1, t0.c2) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE (LIKELIHOOD(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), 0.40783295218474025)) ORDER BY vt1.c0, (((vt1.c0)) BETWEEN (((((vt1.c0))>(('1e500'))))) AND ((((vt1.c0)==(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), 0.40783295218474025)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, (((vt1.c0)) BETWEEN (((((vt1.c0))>(('1e500'))))) AND ((((vt1.c0)=(vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (LIKELIHOOD(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), 0.40783295218474025)) ORDER BY vt1.c0, (((vt1.c0)) BETWEEN (((((vt1.c0))>(('1e500'))))) AND ((((vt1.c0)==(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), 0.40783295218474025)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, (((vt1.c0)) BETWEEN (((((vt1.c0))>(('1e500'))))) AND ((((vt1.c0)=(vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (LIKELIHOOD(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), 0.40783295218474025)) ORDER BY vt1.c0, (((vt1.c0)) BETWEEN (((((vt1.c0))>(('1e500'))))) AND ((((vt1.c0)==(vt1.c0)))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (('' COLLATE NOCASE)||(CAST(vt0.c0 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (('' COLLATE NOCASE)||(CAST(vt0.c0 AS REAL))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (('' COLLATE NOCASE)||(CAST(vt0.c0 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (('' COLLATE NOCASE)||(CAST(vt0.c0 AS REAL))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (('' COLLATE NOCASE)||(CAST(vt0.c0 AS REAL))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON CASE x''  WHEN ((t0.c2) NOT BETWEEN (vt1.c0) AND (t0.c1)) THEN t0.c63 END WHERE (TRIM(DISTINCT 0X1bba901, CASE t0.c1  WHEN 0.8873993720941782 THEN NULL WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END)) ORDER BY ((x'')<(t0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT 0x1bba901, CASE t0.c1  WHEN 0.8873993720941782 THEN NULL WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON CASE x''  WHEN ((t0.c2) NOT BETWEEN (vt1.c0) AND (t0.c1)) THEN t0.c63 END ORDER BY ((x'')<(t0.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON CASE x''  WHEN ((t0.c2) NOT BETWEEN (vt1.c0) AND (t0.c1)) THEN t0.c63 END WHERE (TRIM(DISTINCT 0X1bba901, CASE t0.c1  WHEN 0.8873993720941782 THEN NULL WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END)) ORDER BY ((x'')<(t0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT 0x1bba901, CASE t0.c1  WHEN 0.8873993720941782 THEN NULL WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON CASE x''  WHEN ((t0.c2) NOT BETWEEN (vt1.c0) AND (t0.c1)) THEN t0.c63 END ORDER BY ((x'')<(t0.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON CASE x''  WHEN ((t0.c2) NOT BETWEEN (vt1.c0) AND (t0.c1)) THEN t0.c63 END WHERE (TRIM(DISTINCT 0X1bba901, CASE t0.c1  WHEN 0.8873993720941782 THEN NULL WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END)) ORDER BY ((x'')<(t0.c0)) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((((((((((t0.c2)OR(vt1.c0)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(((t0.c63) IS TRUE))))OR(LIKELIHOOD(vt0.c0, 0.7732310719718376))) RIGHT OUTER JOIN t0 ON t0.c2 COLLATE RTRIM WHERE (((((t0.c63)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t0.c63)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((((((((((t0.c2)OR(vt1.c0)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(((t0.c63) IS TRUE))))OR(LIKELIHOOD(vt0.c0, 0.7732310719718376))) RIGHT OUTER JOIN t0 ON t0.c2 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((((((((((t0.c2)OR(vt1.c0)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(((t0.c63) IS TRUE))))OR(LIKELIHOOD(vt0.c0, 0.7732310719718376))) RIGHT OUTER JOIN t0 ON t0.c2 COLLATE RTRIM WHERE (((((t0.c63)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t0.c63)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((((((((((t0.c2)OR(vt1.c0)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(((t0.c63) IS TRUE))))OR(LIKELIHOOD(vt0.c0, 0.7732310719718376))) RIGHT OUTER JOIN t0 ON t0.c2 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON HEX(DISTINCT t0.c0) COLLATE BINARY WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON HEX(DISTINCT t0.c0) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON HEX(DISTINCT t0.c0) COLLATE BINARY WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON HEX(DISTINCT t0.c0) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON HEX(DISTINCT t0.c0) COLLATE BINARY WHERE (t0.c2);
SELECT COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((((DATE(t0.c1, t0.c2, t0.c1, t0.c2, t0.c2))AND(IFNULL(t0.c2, t0.c0))))AND(((((((((t0.c1)OR(vt0.c0)))OR(t0.c0)))OR(vt1.c0)))OR(t0.c63)))) WHERE ('2027216367');
SELECT SUM(count) FROM (SELECT (('2027216367') IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((((DATE(t0.c1, t0.c2, t0.c1, t0.c2, t0.c2))AND(IFNULL(t0.c2, t0.c0))))AND(((((((((t0.c1)OR(vt0.c0)))OR(t0.c0)))OR(vt1.c0)))OR(t0.c63)))));
SELECT COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((((DATE(t0.c1, t0.c2, t0.c1, t0.c2, t0.c2))AND(IFNULL(t0.c2, t0.c0))))AND(((((((((t0.c1)OR(vt0.c0)))OR(t0.c0)))OR(vt1.c0)))OR(t0.c63)))) WHERE ('2027216367');
SELECT SUM(count) FROM (SELECT (('2027216367') IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((((DATE(t0.c1, t0.c2, t0.c1, t0.c2, t0.c2))AND(IFNULL(t0.c2, t0.c0))))AND(((((((((t0.c1)OR(vt0.c0)))OR(t0.c0)))OR(vt1.c0)))OR(t0.c63)))));
SELECT COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((((DATE(t0.c1, t0.c2, t0.c1, t0.c2, t0.c2))AND(IFNULL(t0.c2, t0.c0))))AND(((((((((t0.c1)OR(vt0.c0)))OR(t0.c0)))OR(vt1.c0)))OR(t0.c63)))) WHERE ('2027216367');
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((((((((vt0.c0)OR(vt1.c0)))OR(0.37790821191997104)))OR(vt0.c0)))OR(vt1.c0)))GLOB(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) WHERE (((vt1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((((((((vt0.c0)OR(vt1.c0)))OR(0.37790821191997104)))OR(vt0.c0)))OR(vt1.c0)))GLOB(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((((((((vt0.c0)OR(vt1.c0)))OR(0.37790821191997104)))OR(vt0.c0)))OR(vt1.c0)))GLOB(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) WHERE (((vt1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((((((((vt0.c0)OR(vt1.c0)))OR(0.37790821191997104)))OR(vt0.c0)))OR(vt1.c0)))GLOB(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((((((((vt0.c0)OR(vt1.c0)))OR(0.37790821191997104)))OR(vt0.c0)))OR(vt1.c0)))GLOB(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) WHERE (((vt1.c0 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((('211838165')AND(vt1.c0)))OR(vt1.c0)) IN (vt1.c0 COLLATE RTRIM, 'GZ')));
SELECT SUM(count) FROM (SELECT ALL ((((((('211838165')AND(vt1.c0)))OR(vt1.c0)) IN (vt1.c0 COLLATE RTRIM, 'GZ'))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((('211838165')AND(vt1.c0)))OR(vt1.c0)) IN (vt1.c0 COLLATE RTRIM, 'GZ')));
SELECT SUM(count) FROM (SELECT ALL ((((((('211838165')AND(vt1.c0)))OR(vt1.c0)) IN (vt1.c0 COLLATE RTRIM, 'GZ'))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((('211838165')AND(vt1.c0)))OR(vt1.c0)) IN (vt1.c0 COLLATE RTRIM, 'GZ')));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((vt0.c0)OR(t0.c1)))AND(vt1.c0)) COLLATE BINARY) ORDER BY 0.941027945475851;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(t0.c1)))AND(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY 0.941027945475851);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((vt0.c0)OR(t0.c1)))AND(vt1.c0)) COLLATE BINARY) ORDER BY 0.941027945475851;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(t0.c1)))AND(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY 0.941027945475851);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((vt0.c0)OR(t0.c1)))AND(vt1.c0)) COLLATE BINARY) ORDER BY 0.941027945475851;
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE RTRIM THEN (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE RTRIM THEN (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN (NOT (vt0.c0)) END);
SELECT * FROM t0, vt1 WHERE (',s') ORDER BY ((((t0.c63) NOTNULL))&(((t0.c1) NOT BETWEEN (t0.c1) AND ('ֻ5'))))  NULLS LAST, x'b1f5'  NULLS LAST, (NOT (((t0.c1)-('h'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((',s') IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c63) NOTNULL))&(((t0.c1) NOT BETWEEN (t0.c1) AND ('ֻ5'))))  NULLS LAST, x'b1f5'  NULLS LAST, (NOT (((t0.c1)-('h'))))  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (',s') ORDER BY ((((t0.c63) NOTNULL))&(((t0.c1) NOT BETWEEN (t0.c1) AND ('ֻ5'))))  NULLS LAST, x'b1f5'  NULLS LAST, (NOT (((t0.c1)-('h'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((',s') IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c63) NOTNULL))&(((t0.c1) NOT BETWEEN (t0.c1) AND ('ֻ5'))))  NULLS LAST, x'b1f5'  NULLS LAST, (NOT (((t0.c1)-('h'))))  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (',s') ORDER BY ((((t0.c63) NOTNULL))&(((t0.c1) NOT BETWEEN (t0.c1) AND ('ֻ5'))))  NULLS LAST, x'b1f5'  NULLS LAST, (NOT (((t0.c1)-('h'))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CAST((t0.c2 IN ()) AS INTEGER)) ORDER BY ((((((t0.c1)AND(0.5491959999792986)))OR(t0.c2))) NOT BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) AND (((t0.c63) NOT BETWEEN (t0.c1) AND (t0.c63))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c2 IN ()) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1)AND(0.5491959999792986)))OR(t0.c2))) NOT BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) AND (((t0.c63) NOT BETWEEN (t0.c1) AND (t0.c63))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST((t0.c2 IN ()) AS INTEGER)) ORDER BY ((((((t0.c1)AND(0.5491959999792986)))OR(t0.c2))) NOT BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) AND (((t0.c63) NOT BETWEEN (t0.c1) AND (t0.c63))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c2 IN ()) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1)AND(0.5491959999792986)))OR(t0.c2))) NOT BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) AND (((t0.c63) NOT BETWEEN (t0.c1) AND (t0.c63))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST((t0.c2 IN ()) AS INTEGER)) ORDER BY ((((((t0.c1)AND(0.5491959999792986)))OR(t0.c2))) NOT BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c2))) AND (((t0.c63) NOT BETWEEN (t0.c1) AND (t0.c63))))  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE (((t0.c2, t0.c0, NULL)) BETWEEN ((vt0.c0, t0.c0, NULL)) AND ((t0.c63, t0.c1, t0.c1)))  WHEN '-1311416603' THEN ((((t0.c0)OR(t0.c63)))AND(0.35315736088268557)) WHEN (((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c63))) THEN (~ (vt0.c0)) WHEN (NOT (t0.c2)) THEN ((t0.c2) IS FALSE) WHEN (((NULL, t0.c63, t0.c63))>=((t0.c2, t0.c63, t0.c63))) THEN (((t0.c63, t0.c0, vt0.c0)) BETWEEN ((t0.c63, t0.c63, t0.c0)) AND ((t0.c1, t0.c2, t0.c2))) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c1)) THEN ((vt0.c0)>>(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c2, t0.c0, NULL)) BETWEEN ((vt0.c0, t0.c0, NULL)) AND ((t0.c63, t0.c1, t0.c1)))  WHEN '-1311416603' THEN ((((t0.c0)OR(t0.c63)))AND(0.35315736088268557)) WHEN (((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c63))) THEN (~ (vt0.c0)) WHEN (NOT (t0.c2)) THEN ((t0.c2) IS FALSE) WHEN (((NULL, t0.c63, t0.c63))>=((t0.c2, t0.c63, t0.c63))) THEN (((t0.c63, t0.c0, vt0.c0)) BETWEEN ((t0.c63, t0.c63, t0.c0)) AND ((t0.c1, t0.c2, t0.c2))) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c1)) THEN ((vt0.c0)>>(t0.c2)) END) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE (((t0.c2, t0.c0, NULL)) BETWEEN ((vt0.c0, t0.c0, NULL)) AND ((t0.c63, t0.c1, t0.c1)))  WHEN '-1311416603' THEN ((((t0.c0)OR(t0.c63)))AND(0.35315736088268557)) WHEN (((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c63))) THEN (~ (vt0.c0)) WHEN (NOT (t0.c2)) THEN ((t0.c2) IS FALSE) WHEN (((NULL, t0.c63, t0.c63))>=((t0.c2, t0.c63, t0.c63))) THEN (((t0.c63, t0.c0, vt0.c0)) BETWEEN ((t0.c63, t0.c63, t0.c0)) AND ((t0.c1, t0.c2, t0.c2))) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c1)) THEN ((vt0.c0)>>(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c2, t0.c0, NULL)) BETWEEN ((vt0.c0, t0.c0, NULL)) AND ((t0.c63, t0.c1, t0.c1)))  WHEN '-1311416603' THEN ((((t0.c0)OR(t0.c63)))AND(0.35315736088268557)) WHEN (((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c63))) THEN (~ (vt0.c0)) WHEN (NOT (t0.c2)) THEN ((t0.c2) IS FALSE) WHEN (((NULL, t0.c63, t0.c63))>=((t0.c2, t0.c63, t0.c63))) THEN (((t0.c63, t0.c0, vt0.c0)) BETWEEN ((t0.c63, t0.c63, t0.c0)) AND ((t0.c1, t0.c2, t0.c2))) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c1)) THEN ((vt0.c0)>>(t0.c2)) END) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE (((t0.c2, t0.c0, NULL)) BETWEEN ((vt0.c0, t0.c0, NULL)) AND ((t0.c63, t0.c1, t0.c1)))  WHEN '-1311416603' THEN ((((t0.c0)OR(t0.c63)))AND(0.35315736088268557)) WHEN (((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c63))) THEN (~ (vt0.c0)) WHEN (NOT (t0.c2)) THEN ((t0.c2) IS FALSE) WHEN (((NULL, t0.c63, t0.c63))>=((t0.c2, t0.c63, t0.c63))) THEN (((t0.c63, t0.c0, vt0.c0)) BETWEEN ((t0.c63, t0.c63, t0.c0)) AND ((t0.c1, t0.c2, t0.c2))) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c1)) THEN ((vt0.c0)>>(t0.c2)) END);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (((+ (t0.c63))) NOT NULL) RIGHT OUTER JOIN vt1 ON t0.c2 WHERE (CAST(((t0.c63)OR(t0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c63)OR(t0.c1)) AS REAL)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((+ (t0.c63))) NOT NULL) RIGHT OUTER JOIN vt1 ON t0.c2);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (((+ (t0.c63))) NOT NULL) RIGHT OUTER JOIN vt1 ON t0.c2 WHERE (CAST(((t0.c63)OR(t0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c63)OR(t0.c1)) AS REAL)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((+ (t0.c63))) NOT NULL) RIGHT OUTER JOIN vt1 ON t0.c2);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (((+ (t0.c63))) NOT NULL) RIGHT OUTER JOIN vt1 ON t0.c2 WHERE (CAST(((t0.c63)OR(t0.c1)) AS REAL));
SELECT * FROM t0, vt0 WHERE (((t0.c2 COLLATE BINARY)GLOB(t0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE BINARY)GLOB(t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c2 COLLATE BINARY)GLOB(t0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE BINARY)GLOB(t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c2 COLLATE BINARY)GLOB(t0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CAST((vt0.c0 IN (vt1.c0, vt1.c0)) AS NUMERIC)) ORDER BY ((((x'') NOTNULL)) BETWEEN (NULL) AND (CAST(vt0.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN (vt1.c0, vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((x'') NOTNULL)) BETWEEN (NULL) AND (CAST(vt0.c0 AS TEXT))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CAST((vt0.c0 IN (vt1.c0, vt1.c0)) AS NUMERIC)) ORDER BY ((((x'') NOTNULL)) BETWEEN (NULL) AND (CAST(vt0.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN (vt1.c0, vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((x'') NOTNULL)) BETWEEN (NULL) AND (CAST(vt0.c0 AS TEXT))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CAST((vt0.c0 IN (vt1.c0, vt1.c0)) AS NUMERIC)) ORDER BY ((((x'') NOTNULL)) BETWEEN (NULL) AND (CAST(vt0.c0 AS TEXT))) DESC;
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c2) IS TRUE))||(((t0.c0)-(t0.c2))))) ORDER BY CASE NULL  WHEN '552656106' THEN t0.c0 ELSE t0.c0 END COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS TRUE))||(((t0.c0)-(t0.c2))))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE NULL  WHEN '552656106' THEN t0.c0 ELSE t0.c0 END COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c2) IS TRUE))||(((t0.c0)-(t0.c2))))) ORDER BY CASE NULL  WHEN '552656106' THEN t0.c0 ELSE t0.c0 END COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS TRUE))||(((t0.c0)-(t0.c2))))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE NULL  WHEN '552656106' THEN t0.c0 ELSE t0.c0 END COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c2) IS TRUE))||(((t0.c0)-(t0.c2))))) ORDER BY CASE NULL  WHEN '552656106' THEN t0.c0 ELSE t0.c0 END COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CASE WHEN (+ (0.941027945475851)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (0.941027945475851)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (+ (0.941027945475851)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (0.941027945475851)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (+ (0.941027945475851)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c63))>((t0.c63)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c63))>((t0.c63)))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c63))>((t0.c63)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c63))>((t0.c63)))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c63))>((t0.c63)))) IS TRUE));
SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE (LIKELIHOOD(DISTINCT ((t0.c1)=(t0.c63)), 0.7886694554855912));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((t0.c1)=(t0.c63)), 0.7886694554855912)) IS TRUE)  as count FROM vt1 NOT INDEXED NATURAL JOIN t0);
SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE (LIKELIHOOD(DISTINCT ((t0.c1)=(t0.c63)), 0.7886694554855912));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((t0.c1)=(t0.c63)), 0.7886694554855912)) IS TRUE)  as count FROM vt1 NOT INDEXED NATURAL JOIN t0);
SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE (LIKELIHOOD(DISTINCT ((t0.c1)=(t0.c63)), 0.7886694554855912));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(((((t0.c2)OR(x'')))OR(t0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c2)OR(x'')))OR(t0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(((((t0.c2)OR(x'')))OR(t0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c2)OR(x'')))OR(t0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(((((t0.c2)OR(x'')))OR(t0.c2)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c2 IN (t0.c2, t0.c63)))OR(((t0.c2) ISNULL))))AND(-1302389423))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2 IN (t0.c2, t0.c63)))OR(((t0.c2) ISNULL))))AND(-1302389423))) IS TRUE)  as count FROM vt0, t0 ORDER BY NULL DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c2 IN (t0.c2, t0.c63)))OR(((t0.c2) ISNULL))))AND(-1302389423))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2 IN (t0.c2, t0.c63)))OR(((t0.c2) ISNULL))))AND(-1302389423))) IS TRUE)  as count FROM vt0, t0 ORDER BY NULL DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c2 IN (t0.c2, t0.c63)))OR(((t0.c2) ISNULL))))AND(-1302389423))) ORDER BY NULL DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((('') IS TRUE));
SELECT SUM(count) FROM (SELECT (((('') IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((('') IS TRUE));
SELECT SUM(count) FROM (SELECT (((('') IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((('') IS TRUE));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON vt0.c0 WHERE (ABS(DISTINCT (vt1.c0 IN (vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (vt1.c0 IN (vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt0.c0);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON vt0.c0 WHERE (ABS(DISTINCT (vt1.c0 IN (vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (vt1.c0 IN (vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt0.c0);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON vt0.c0 WHERE (ABS(DISTINCT (vt1.c0 IN (vt0.c0, vt0.c0))));
SELECT ALL * FROM vt1, vt0 INDEXED BY i62 RIGHT OUTER JOIN t0 ON ((((t0.c0)<(t0.c1)))|((t0.c1 IN ()))) WHERE (((t0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) ISNULL)) IS TRUE)  as count FROM vt1, vt0 INDEXED BY i62 RIGHT OUTER JOIN t0 ON ((((t0.c0)<(t0.c1)))|((t0.c1 IN ()))));
SELECT ALL * FROM vt1, vt0 INDEXED BY i62 RIGHT OUTER JOIN t0 ON ((((t0.c0)<(t0.c1)))|((t0.c1 IN ()))) WHERE (((t0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) ISNULL)) IS TRUE)  as count FROM vt1, vt0 INDEXED BY i62 RIGHT OUTER JOIN t0 ON ((((t0.c0)<(t0.c1)))|((t0.c1 IN ()))));
SELECT * FROM vt0, t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (0xfffffffffbc079be))) BETWEEN (CASE WHEN t0.c1 THEN t0.c2 END) AND (((t0.c63) NOT BETWEEN (t0.c1) AND (t0.c63))))) ORDER BY CASE (((t0.c2, t0.c63, vt0.c0)) BETWEEN (('1719705963', vt0.c0, t0.c1)) AND ((0Xffffffff9df6be9c, t0.c63, t0.c0)))  WHEN CAST(t0.c1 AS TEXT) THEN CASE t0.c63  WHEN t0.c2 THEN t0.c0 END WHEN NULL THEN ((t0.c1)IS NOT(vt0.c0)) WHEN (((vt0.c0, vt0.c0, t0.c2)) BETWEEN ((t0.c0, t0.c63, t0.c1)) AND ((t0.c1, t0.c63, t0.c2))) THEN (((t0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c0))) ELSE (NOT (vt0.c0)) END  NULLS LAST, t0.c1 DESC  NULLS LAST, UPPER(DISTINCT (t0.c1 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (0Xfffffffffbc079be))) BETWEEN (CASE WHEN t0.c1 THEN t0.c2 END) AND (((t0.c63) NOT BETWEEN (t0.c1) AND (t0.c63))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE (((t0.c2, t0.c63, vt0.c0)) BETWEEN (('1719705963', vt0.c0, t0.c1)) AND ((0xffffffff9df6be9c, t0.c63, t0.c0)))  WHEN CAST(t0.c1 AS TEXT) THEN CASE t0.c63  WHEN t0.c2 THEN t0.c0 END WHEN NULL THEN ((t0.c1)IS NOT(vt0.c0)) WHEN (((vt0.c0, vt0.c0, t0.c2)) BETWEEN ((t0.c0, t0.c63, t0.c1)) AND ((t0.c1, t0.c63, t0.c2))) THEN (((t0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c0))) ELSE (NOT (vt0.c0)) END  NULLS LAST, t0.c1 DESC  NULLS LAST, UPPER(DISTINCT (t0.c1 IN ()))  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (0xfffffffffbc079be))) BETWEEN (CASE WHEN t0.c1 THEN t0.c2 END) AND (((t0.c63) NOT BETWEEN (t0.c1) AND (t0.c63))))) ORDER BY CASE (((t0.c2, t0.c63, vt0.c0)) BETWEEN (('1719705963', vt0.c0, t0.c1)) AND ((0Xffffffff9df6be9c, t0.c63, t0.c0)))  WHEN CAST(t0.c1 AS TEXT) THEN CASE t0.c63  WHEN t0.c2 THEN t0.c0 END WHEN NULL THEN ((t0.c1)IS NOT(vt0.c0)) WHEN (((vt0.c0, vt0.c0, t0.c2)) BETWEEN ((t0.c0, t0.c63, t0.c1)) AND ((t0.c1, t0.c63, t0.c2))) THEN (((t0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c0))) ELSE (NOT (vt0.c0)) END  NULLS LAST, t0.c1 DESC  NULLS LAST, UPPER(DISTINCT (t0.c1 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (0Xfffffffffbc079be))) BETWEEN (CASE WHEN t0.c1 THEN t0.c2 END) AND (((t0.c63) NOT BETWEEN (t0.c1) AND (t0.c63))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE (((t0.c2, t0.c63, vt0.c0)) BETWEEN (('1719705963', vt0.c0, t0.c1)) AND ((0xffffffff9df6be9c, t0.c63, t0.c0)))  WHEN CAST(t0.c1 AS TEXT) THEN CASE t0.c63  WHEN t0.c2 THEN t0.c0 END WHEN NULL THEN ((t0.c1)IS NOT(vt0.c0)) WHEN (((vt0.c0, vt0.c0, t0.c2)) BETWEEN ((t0.c0, t0.c63, t0.c1)) AND ((t0.c1, t0.c63, t0.c2))) THEN (((t0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c0))) ELSE (NOT (vt0.c0)) END  NULLS LAST, t0.c1 DESC  NULLS LAST, UPPER(DISTINCT (t0.c1 IN ()))  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (0xfffffffffbc079be))) BETWEEN (CASE WHEN t0.c1 THEN t0.c2 END) AND (((t0.c63) NOT BETWEEN (t0.c1) AND (t0.c63))))) ORDER BY CASE (((t0.c2, t0.c63, vt0.c0)) BETWEEN (('1719705963', vt0.c0, t0.c1)) AND ((0Xffffffff9df6be9c, t0.c63, t0.c0)))  WHEN CAST(t0.c1 AS TEXT) THEN CASE t0.c63  WHEN t0.c2 THEN t0.c0 END WHEN NULL THEN ((t0.c1)IS NOT(vt0.c0)) WHEN (((vt0.c0, vt0.c0, t0.c2)) BETWEEN ((t0.c0, t0.c63, t0.c1)) AND ((t0.c1, t0.c63, t0.c2))) THEN (((t0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c0))) ELSE (NOT (vt0.c0)) END  NULLS LAST, t0.c1 DESC  NULLS LAST, UPPER(DISTINCT (t0.c1 IN ()))  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))/(UNLIKELY(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))/(UNLIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))/(UNLIKELY(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))/(UNLIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))/(UNLIKELY(vt0.c0))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c63, -9.69144901E8, x'04d6')) NOT BETWEEN ((((t0.c2)IS(t0.c63)), ((((t0.c0)OR(t0.c2)))OR(t0.c0)), t0.c63 COLLATE RTRIM)) AND ((UPPER(x''), t0.c1, ((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))))) ORDER BY UNLIKELY(((t0.c0) NOT NULL)) DESC  NULLS FIRST, CAST(CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c2 END AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c63, -9.69144901E8, x'04d6')) NOT BETWEEN ((((t0.c2)IS(t0.c63)), ((((t0.c0)OR(t0.c2)))OR(t0.c0)), t0.c63 COLLATE RTRIM)) AND ((UPPER(x''), t0.c1, ((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY UNLIKELY(((t0.c0) NOT NULL)) DESC  NULLS FIRST, CAST(CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c2 END AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c63, -9.69144901E8, x'04d6')) NOT BETWEEN ((((t0.c2)IS(t0.c63)), ((((t0.c0)OR(t0.c2)))OR(t0.c0)), t0.c63 COLLATE RTRIM)) AND ((UPPER(x''), t0.c1, ((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))))) ORDER BY UNLIKELY(((t0.c0) NOT NULL)) DESC  NULLS FIRST, CAST(CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c2 END AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c63, -9.69144901E8, x'04d6')) NOT BETWEEN ((((t0.c2)IS(t0.c63)), ((((t0.c0)OR(t0.c2)))OR(t0.c0)), t0.c63 COLLATE RTRIM)) AND ((UPPER(x''), t0.c1, ((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY UNLIKELY(((t0.c0) NOT NULL)) DESC  NULLS FIRST, CAST(CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c2 END AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c63, -9.69144901E8, x'04d6')) NOT BETWEEN ((((t0.c2)IS(t0.c63)), ((((t0.c0)OR(t0.c2)))OR(t0.c0)), t0.c63 COLLATE RTRIM)) AND ((UPPER(x''), t0.c1, ((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))))) ORDER BY UNLIKELY(((t0.c0) NOT NULL)) DESC  NULLS FIRST, CAST(CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c2 END AS BLOB) ASC  NULLS LAST;
SELECT ALL * FROM vt0, t0, vt1 WHERE (UPPER(DISTINCT ((vt1.c0)|(vt1.c0)))) ORDER BY (NOT ('C&*X'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((vt1.c0)|(vt1.c0)))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED, vt1 ORDER BY (NOT ('C&*X'))  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (UPPER(DISTINCT ((vt1.c0)|(vt1.c0)))) ORDER BY (NOT ('C&*X'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((vt1.c0)|(vt1.c0)))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED, vt1 ORDER BY (NOT ('C&*X'))  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (UPPER(DISTINCT ((vt1.c0)|(vt1.c0)))) ORDER BY (NOT ('C&*X'))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c1)<(t0.c63)) THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c63)) ELSE ((t0.c63) NOT BETWEEN (t0.c0) AND (t0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c1)<(t0.c63)) THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c63)) ELSE ((t0.c63) NOT BETWEEN (t0.c0) AND (t0.c2)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c1)<(t0.c63)) THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c63)) ELSE ((t0.c63) NOT BETWEEN (t0.c0) AND (t0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c1)<(t0.c63)) THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c63)) ELSE ((t0.c63) NOT BETWEEN (t0.c0) AND (t0.c2)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c1)<(t0.c63)) THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c63)) ELSE ((t0.c63) NOT BETWEEN (t0.c0) AND (t0.c2)) END);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((vt0.c0 IN ())))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((vt0.c0 IN ())))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((vt0.c0 IN ())))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT ALL * FROM vt0 INDEXED BY i62, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((-890177276)))) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CASE WHEN vt1.c0 THEN NULL END))) ORDER BY (+ ((vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((-890177276)))) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CASE WHEN vt1.c0 THEN NULL END))) IS TRUE)  as count FROM vt0 INDEXED BY i62, vt1 ORDER BY (+ ((vt0.c0 IN (vt0.c0)))));
SELECT ALL * FROM vt0 INDEXED BY i62, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((-890177276)))) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CASE WHEN vt1.c0 THEN NULL END))) ORDER BY (+ ((vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((-890177276)))) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CASE WHEN vt1.c0 THEN NULL END))) IS TRUE)  as count FROM vt0 INDEXED BY i62, vt1 ORDER BY (+ ((vt0.c0 IN (vt0.c0)))));
SELECT * FROM vt1 WHERE (((CASE WHEN 0.003675629537636338 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0.003675629537636338 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE WHEN 0.003675629537636338 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0.003675629537636338 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE WHEN 0.003675629537636338 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL));
SELECT * FROM vt0, vt1 WHERE (NULL) ORDER BY UNLIKELY(DISTINCT ((vt1.c0)AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY UNLIKELY(DISTINCT ((vt1.c0)AND(vt0.c0))));
SELECT * FROM vt0, vt1 WHERE (NULL) ORDER BY UNLIKELY(DISTINCT ((vt1.c0)AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY UNLIKELY(DISTINCT ((vt1.c0)AND(vt0.c0))));
SELECT * FROM vt0, vt1 WHERE (NULL) ORDER BY UNLIKELY(DISTINCT ((vt1.c0)AND(vt0.c0)));
SELECT ALL * FROM vt1 WHERE ((((- (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((- (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((- (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0) NOTNULL))));
SELECT ALL * FROM vt1, t0 WHERE (ABS(CASE t0.c1  WHEN vt1.c0 THEN t0.c63 END));
SELECT SUM(count) FROM (SELECT ((ABS(CASE t0.c1  WHEN vt1.c0 THEN t0.c63 END)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (ABS(CASE t0.c1  WHEN vt1.c0 THEN t0.c63 END));
SELECT SUM(count) FROM (SELECT ((ABS(CASE t0.c1  WHEN vt1.c0 THEN t0.c63 END)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (ABS(CASE t0.c1  WHEN vt1.c0 THEN t0.c63 END));
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((t0.c2)=(t0.c0)))+(((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c1))))) ORDER BY CASE WHEN (- (t0.c63)) THEN TRIM(t0.c2) WHEN ((t0.c63)|(t0.c0)) THEN HEX(t0.c1) WHEN (+ (t0.c2)) THEN CAST(t0.c2 AS TEXT) ELSE t0.c2 COLLATE RTRIM END ASC, CAST((((vt0.c0, vt0.c0, 9.82747198E8, vt0.c0, vt0.c0))>=((t0.c63, vt0.c0, t0.c0, t0.c2, t0.c0))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)==(t0.c0)))+(((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c1))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CASE WHEN (- (t0.c63)) THEN TRIM(t0.c2) WHEN ((t0.c63)|(t0.c0)) THEN HEX(t0.c1) WHEN (+ (t0.c2)) THEN CAST(t0.c2 AS TEXT) ELSE t0.c2 COLLATE RTRIM END ASC, CAST((((vt0.c0, vt0.c0, 9.82747198E8, vt0.c0, vt0.c0))>=((t0.c63, vt0.c0, t0.c0, t0.c2, t0.c0))) AS INTEGER));
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((t0.c2)=(t0.c0)))+(((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c1))))) ORDER BY CASE WHEN (- (t0.c63)) THEN TRIM(t0.c2) WHEN ((t0.c63)|(t0.c0)) THEN HEX(t0.c1) WHEN (+ (t0.c2)) THEN CAST(t0.c2 AS TEXT) ELSE t0.c2 COLLATE RTRIM END ASC, CAST((((vt0.c0, vt0.c0, 9.82747198E8, vt0.c0, vt0.c0))>=((t0.c63, vt0.c0, t0.c0, t0.c2, t0.c0))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)==(t0.c0)))+(((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c1))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CASE WHEN (- (t0.c63)) THEN TRIM(t0.c2) WHEN ((t0.c63)|(t0.c0)) THEN HEX(t0.c1) WHEN (+ (t0.c2)) THEN CAST(t0.c2 AS TEXT) ELSE t0.c2 COLLATE RTRIM END ASC, CAST((((vt0.c0, vt0.c0, 9.82747198E8, vt0.c0, vt0.c0))>=((t0.c63, vt0.c0, t0.c0, t0.c2, t0.c0))) AS INTEGER));
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((t0.c2)=(t0.c0)))+(((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c1))))) ORDER BY CASE WHEN (- (t0.c63)) THEN TRIM(t0.c2) WHEN ((t0.c63)|(t0.c0)) THEN HEX(t0.c1) WHEN (+ (t0.c2)) THEN CAST(t0.c2 AS TEXT) ELSE t0.c2 COLLATE RTRIM END ASC, CAST((((vt0.c0, vt0.c0, 9.82747198E8, vt0.c0, vt0.c0))>=((t0.c63, vt0.c0, t0.c0, t0.c2, t0.c0))) AS INTEGER);
SELECT * FROM vt1, t0 WHERE (LIKELY(((((((((t0.c63)AND(t0.c1)))AND(t0.c0)))AND(t0.c1)))AND(vt1.c0)))) ORDER BY (((((t0.c0, t0.c2, t0.c2))==((vt1.c0, vt1.c0, t0.c1)))) BETWEEN (((vt1.c0) NOT BETWEEN (NULL) AND (t0.c63))) AND (CAST(t0.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((LIKELY(((((((((t0.c63)AND(t0.c1)))AND(t0.c0)))AND(t0.c1)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((t0.c0, t0.c2, t0.c2))==((vt1.c0, vt1.c0, t0.c1)))) BETWEEN (((vt1.c0) NOT BETWEEN (NULL) AND (t0.c63))) AND (CAST(t0.c2 AS NUMERIC))));
SELECT * FROM vt1, t0 WHERE (LIKELY(((((((((t0.c63)AND(t0.c1)))AND(t0.c0)))AND(t0.c1)))AND(vt1.c0)))) ORDER BY (((((t0.c0, t0.c2, t0.c2))==((vt1.c0, vt1.c0, t0.c1)))) BETWEEN (((vt1.c0) NOT BETWEEN (NULL) AND (t0.c63))) AND (CAST(t0.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((LIKELY(((((((((t0.c63)AND(t0.c1)))AND(t0.c0)))AND(t0.c1)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((t0.c0, t0.c2, t0.c2))==((vt1.c0, vt1.c0, t0.c1)))) BETWEEN (((vt1.c0) NOT BETWEEN (NULL) AND (t0.c63))) AND (CAST(t0.c2 AS NUMERIC))));
SELECT * FROM vt1, t0 WHERE (LIKELY(((((((((t0.c63)AND(t0.c1)))AND(t0.c0)))AND(t0.c1)))AND(vt1.c0)))) ORDER BY (((((t0.c0, t0.c2, t0.c2))==((vt1.c0, vt1.c0, t0.c1)))) BETWEEN (((vt1.c0) NOT BETWEEN (NULL) AND (t0.c63))) AND (CAST(t0.c2 AS NUMERIC)));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((NOT ((x'' IN (vt1.c0))))) ORDER BY CASE WHEN ((t0.c63)>>(t0.c63)) THEN CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END ELSE (t0.c2 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((x'' IN (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CASE WHEN ((t0.c63)>>(t0.c63)) THEN CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END ELSE (t0.c2 IN ()) END  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((NOT ((x'' IN (vt1.c0))))) ORDER BY CASE WHEN ((t0.c63)>>(t0.c63)) THEN CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END ELSE (t0.c2 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((x'' IN (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CASE WHEN ((t0.c63)>>(t0.c63)) THEN CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END ELSE (t0.c2 IN ()) END  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((NOT ((x'' IN (vt1.c0))))) ORDER BY CASE WHEN ((t0.c63)>>(t0.c63)) THEN CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END ELSE (t0.c2 IN ()) END  NULLS LAST;
SELECT * FROM vt1, vt0, t0 WHERE (CAST((t0.c1 IN ()) AS TEXT)) ORDER BY (CAST(vt0.c0 AS NUMERIC) IN (LIKELY(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c1 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (CAST(vt0.c0 AS NUMERIC) IN (LIKELY(vt0.c0)))  NULLS FIRST);
SELECT * FROM vt1, vt0, t0 WHERE (CAST((t0.c1 IN ()) AS TEXT)) ORDER BY (CAST(vt0.c0 AS NUMERIC) IN (LIKELY(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c1 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (CAST(vt0.c0 AS NUMERIC) IN (LIKELY(vt0.c0)))  NULLS FIRST);
SELECT * FROM vt1, vt0, t0 WHERE (CAST((t0.c1 IN ()) AS TEXT)) ORDER BY (CAST(vt0.c0 AS NUMERIC) IN (LIKELY(vt0.c0)))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((((((((t0.c63) NOTNULL))OR(((t0.c1) ISNULL))))AND(((t0.c1) IS TRUE))))OR(((t0.c63)*(t0.c0)))))OR(t0.c1 COLLATE BINARY))) ORDER BY ((- (t0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c63) NOTNULL))OR(((t0.c1) ISNULL))))AND(((t0.c1) IS TRUE))))OR(((t0.c63)*(t0.c0)))))OR(t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY ((- (t0.c2)) IN ())  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((((((((t0.c63) NOTNULL))OR(((t0.c1) ISNULL))))AND(((t0.c1) IS TRUE))))OR(((t0.c63)*(t0.c0)))))OR(t0.c1 COLLATE BINARY))) ORDER BY ((- (t0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c63) NOTNULL))OR(((t0.c1) ISNULL))))AND(((t0.c1) IS TRUE))))OR(((t0.c63)*(t0.c0)))))OR(t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY ((- (t0.c2)) IN ())  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((((((((t0.c63) NOTNULL))OR(((t0.c1) ISNULL))))AND(((t0.c1) IS TRUE))))OR(((t0.c63)*(t0.c0)))))OR(t0.c1 COLLATE BINARY))) ORDER BY ((- (t0.c2)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0 WHERE ((NOT (((t0.c1) BETWEEN (t0.c2) AND (t0.c0))))) ORDER BY (NOT (t0.c63 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c1) BETWEEN (t0.c2) AND (t0.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY (NOT (t0.c63 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE ((NOT (((t0.c1) BETWEEN (t0.c2) AND (t0.c0))))) ORDER BY (NOT (t0.c63 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c1) BETWEEN (t0.c2) AND (t0.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY (NOT (t0.c63 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE ((NOT (((t0.c1) BETWEEN (t0.c2) AND (t0.c0))))) ORDER BY (NOT (t0.c63 COLLATE NOCASE)) ASC;
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((((vt1.c0))<=((t0.c2)))) NOT BETWEEN (LIKELIHOOD(vt1.c0, 0.9450843565120092)) AND ((((vt0.c0))>((t0.c63))))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<=((t0.c2)))) NOT BETWEEN (LIKELIHOOD(vt1.c0, 0.9450843565120092)) AND ((((vt0.c0))>((t0.c63)))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((((vt1.c0))<=((t0.c2)))) NOT BETWEEN (LIKELIHOOD(vt1.c0, 0.9450843565120092)) AND ((((vt0.c0))>((t0.c63))))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<=((t0.c2)))) NOT BETWEEN (LIKELIHOOD(vt1.c0, 0.9450843565120092)) AND ((((vt0.c0))>((t0.c63)))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((((vt1.c0))<=((t0.c2)))) NOT BETWEEN (LIKELIHOOD(vt1.c0, 0.9450843565120092)) AND ((((vt0.c0))>((t0.c63))))));
SELECT ALL * FROM t0 WHERE (RTRIM(((t0.c0)<>(t0.c1)))) ORDER BY CASE WHEN (t0.c1 IN (t0.c0, t0.c1)) THEN t0.c0 COLLATE BINARY ELSE CASE t0.c2  WHEN t0.c63 THEN t0.c1 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((t0.c0)<>(t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (t0.c1 IN (t0.c0, t0.c1)) THEN t0.c0 COLLATE BINARY ELSE CASE t0.c2  WHEN t0.c63 THEN t0.c1 END END DESC);
SELECT ALL * FROM t0 WHERE (RTRIM(((t0.c0)<>(t0.c1)))) ORDER BY CASE WHEN (t0.c1 IN (t0.c0, t0.c1)) THEN t0.c0 COLLATE BINARY ELSE CASE t0.c2  WHEN t0.c63 THEN t0.c1 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((t0.c0)<>(t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (t0.c1 IN (t0.c0, t0.c1)) THEN t0.c0 COLLATE BINARY ELSE CASE t0.c2  WHEN t0.c63 THEN t0.c1 END END DESC);
SELECT ALL * FROM t0 WHERE (RTRIM(((t0.c0)<>(t0.c1)))) ORDER BY CASE WHEN (t0.c1 IN (t0.c0, t0.c1)) THEN t0.c0 COLLATE BINARY ELSE CASE t0.c2  WHEN t0.c63 THEN t0.c1 END END DESC;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((json_extract(vt1.c0, vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_extract(vt1.c0, vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((json_extract(vt1.c0, vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_extract(vt1.c0, vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((json_extract(vt1.c0, vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN (vt0.c0)))));
SELECT ALL * FROM t0, vt1 WHERE (9.14774977E8) ORDER BY ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2))) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((((t0.c1)) BETWEEN ((t0.c63)) AND ((t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((9.14774977E8) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2))) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((((t0.c1)) BETWEEN ((t0.c63)) AND ((t0.c0)))))  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE (9.14774977E8) ORDER BY ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2))) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((((t0.c1)) BETWEEN ((t0.c63)) AND ((t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((9.14774977E8) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2))) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((((t0.c1)) BETWEEN ((t0.c63)) AND ((t0.c0)))))  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE (9.14774977E8) ORDER BY ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2))) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((((t0.c1)) BETWEEN ((t0.c63)) AND ((t0.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((t0.c0 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((t0.c0 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((t0.c0 COLLATE NOCASE) ISNULL));
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((((((((t0.c2)>>(vt0.c0)))OR(((NULL)OR(t0.c2)))))OR(((vt1.c0) NOTNULL))))AND(((t0.c63)LIKE(NULL)))))OR((((vt0.c0))<=((t0.c0))))) WHERE (((vt0.c0) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((((((((t0.c2)>>(vt0.c0)))OR(((NULL)OR(t0.c2)))))OR(((vt1.c0) NOTNULL))))AND(((t0.c63)LIKE(NULL)))))OR((((vt0.c0))<=((t0.c0))))));
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((((((((t0.c2)>>(vt0.c0)))OR(((NULL)OR(t0.c2)))))OR(((vt1.c0) NOTNULL))))AND(((t0.c63)LIKE(NULL)))))OR((((vt0.c0))<=((t0.c0))))) WHERE (((vt0.c0) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((((((((t0.c2)>>(vt0.c0)))OR(((NULL)OR(t0.c2)))))OR(((vt1.c0) NOTNULL))))AND(((t0.c63)LIKE(NULL)))))OR((((vt0.c0))<=((t0.c0))))));
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((((((((t0.c2)>>(vt0.c0)))OR(((NULL)OR(t0.c2)))))OR(((vt1.c0) NOTNULL))))AND(((t0.c63)LIKE(NULL)))))OR((((vt0.c0))<=((t0.c0))))) WHERE (((vt0.c0) IS FALSE) COLLATE BINARY);
SELECT * FROM t0, vt0 NATURAL JOIN vt1 WHERE (((((t0.c0)|(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)|(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1);
SELECT * FROM t0, vt0 NATURAL JOIN vt1 WHERE (((((t0.c0)|(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)|(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1);
SELECT * FROM t0, vt0 NATURAL JOIN vt1 WHERE (((((t0.c0)|(vt0.c0))) IS FALSE));
SELECT * FROM t0, vt1 WHERE ((((NOT (vt1.c0)))OR(UNLIKELY(DISTINCT t0.c63)))) ORDER BY ((((t0.c0 COLLATE RTRIM)OR(((t0.c1) IS TRUE))))AND(((((t0.c2)OR(t0.c2)))AND(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))OR(UNLIKELY(DISTINCT t0.c63)))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c0 COLLATE RTRIM)OR(((t0.c1) IS TRUE))))AND(((((t0.c2)OR(t0.c2)))AND(t0.c0)))) ASC);
SELECT * FROM t0, vt1 WHERE ((((NOT (vt1.c0)))OR(UNLIKELY(DISTINCT t0.c63)))) ORDER BY ((((t0.c0 COLLATE RTRIM)OR(((t0.c1) IS TRUE))))AND(((((t0.c2)OR(t0.c2)))AND(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))OR(UNLIKELY(DISTINCT t0.c63)))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c0 COLLATE RTRIM)OR(((t0.c1) IS TRUE))))AND(((((t0.c2)OR(t0.c2)))AND(t0.c0)))) ASC);
SELECT * FROM t0, vt1 WHERE ((((NOT (vt1.c0)))OR(UNLIKELY(DISTINCT t0.c63)))) ORDER BY ((((t0.c0 COLLATE RTRIM)OR(((t0.c1) IS TRUE))))AND(((((t0.c2)OR(t0.c2)))AND(t0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS REAL)) ORDER BY ((vt1.c0) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS REAL)) ORDER BY ((vt1.c0) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS REAL)) ORDER BY ((vt1.c0) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((~ (((t0.c2)-(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c2)-(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((~ (((t0.c2)-(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c2)-(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((~ (((t0.c2)-(t0.c2)))));
SELECT * FROM vt0, t0 WHERE ((((CAST(t0.c63 AS BLOB), t0.c0 COLLATE NOCASE, t0.c1))<=((ABS(t0.c1), CAST(t0.c0 AS TEXT), ((0.4797005394542576)AND(t0.c1)))))) ORDER BY NULL COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c63 AS BLOB), t0.c0 COLLATE NOCASE, t0.c1))<=((ABS(t0.c1), CAST(t0.c0 AS TEXT), ((0.4797005394542576)AND(t0.c1)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY NULL COLLATE RTRIM ASC);
SELECT * FROM vt0, t0 WHERE ((((CAST(t0.c63 AS BLOB), t0.c0 COLLATE NOCASE, t0.c1))<=((ABS(t0.c1), CAST(t0.c0 AS TEXT), ((0.4797005394542576)AND(t0.c1)))))) ORDER BY NULL COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c63 AS BLOB), t0.c0 COLLATE NOCASE, t0.c1))<=((ABS(t0.c1), CAST(t0.c0 AS TEXT), ((0.4797005394542576)AND(t0.c1)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY NULL COLLATE RTRIM ASC);
SELECT * FROM vt0, t0 WHERE ((((CAST(t0.c63 AS BLOB), t0.c0 COLLATE NOCASE, t0.c1))<=((ABS(t0.c1), CAST(t0.c0 AS TEXT), ((0.4797005394542576)AND(t0.c1)))))) ORDER BY NULL COLLATE RTRIM ASC;
SELECT * FROM t0, vt1, vt0 WHERE ((((((t0.c2))>=((t0.c2))))<(CAST(t0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2))>=((t0.c2))))<(CAST(t0.c1 AS INTEGER)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE ((((((t0.c2))>=((t0.c2))))<(CAST(t0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2))>=((t0.c2))))<(CAST(t0.c1 AS INTEGER)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE ((((((t0.c2))>=((t0.c2))))<(CAST(t0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (CAST(vt1.c0 AS TEXT)))) ORDER BY (NOT (((vt1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (CAST(vt1.c0 AS TEXT)))) ORDER BY (NOT (((vt1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (CAST(vt1.c0 AS TEXT)))) ORDER BY (NOT (((vt1.c0) NOT NULL)));
SELECT * FROM t0 WHERE (NULL) ORDER BY ((t0.c63 IN ()) IN ()) ASC, ((json_insert(t0.c2, t0.c0, '-869932166')) ISNULL)  NULLS FIRST, t0.c63 ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((t0.c63 IN ()) IN ()) ASC, ((json_insert(t0.c2, t0.c0, '-869932166')) ISNULL)  NULLS FIRST, t0.c63 ASC);
SELECT * FROM t0 WHERE (NULL) ORDER BY ((t0.c63 IN ()) IN ()) ASC, ((json_insert(t0.c2, t0.c0, '-869932166')) ISNULL)  NULLS FIRST, t0.c63 ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((t0.c63 IN ()) IN ()) ASC, ((json_insert(t0.c2, t0.c0, '-869932166')) ISNULL)  NULLS FIRST, t0.c63 ASC);
SELECT ALL * FROM t0, vt1 WHERE (((t0.c1)<(TRIM(DISTINCT t0.c0, t0.c63)))) ORDER BY (NOT (((vt1.c0)IS(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)<(TRIM(DISTINCT t0.c0, t0.c63)))) IS TRUE)  as count FROM t0, vt1 ORDER BY (NOT (((vt1.c0)IS(t0.c0)))));
SELECT ALL * FROM t0, vt1 WHERE (((t0.c1)<(TRIM(DISTINCT t0.c0, t0.c63)))) ORDER BY (NOT (((vt1.c0)IS(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)<(TRIM(DISTINCT t0.c0, t0.c63)))) IS TRUE)  as count FROM t0, vt1 ORDER BY (NOT (((vt1.c0)IS(t0.c0)))));
SELECT ALL * FROM t0, vt1 WHERE (((t0.c1)<(TRIM(DISTINCT t0.c0, t0.c63)))) ORDER BY (NOT (((vt1.c0)IS(t0.c0))));
SELECT * FROM vt0, t0, vt1 WHERE (((((CASE vt0.c0  WHEN t0.c63 THEN t0.c0 END)AND(((t0.c1)AND(t0.c0)))))OR((((vt0.c0))<=((t0.c2)))))) ORDER BY -669341180;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c0  WHEN t0.c63 THEN t0.c0 END)AND(((t0.c1)AND(t0.c0)))))OR((((vt0.c0))<=((t0.c2)))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY -669341180);
SELECT * FROM vt0, t0, vt1 WHERE (((((CASE vt0.c0  WHEN t0.c63 THEN t0.c0 END)AND(((t0.c1)AND(t0.c0)))))OR((((vt0.c0))<=((t0.c2)))))) ORDER BY -669341180;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c0  WHEN t0.c63 THEN t0.c0 END)AND(((t0.c1)AND(t0.c0)))))OR((((vt0.c0))<=((t0.c2)))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY -669341180);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)<>(vt0.c0)))-('-1043771875')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)!=(vt0.c0)))-('-1043771875'))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)<>(vt0.c0)))-('-1043771875')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)!=(vt0.c0)))-('-1043771875'))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)<>(vt0.c0)))-('-1043771875')));
SELECT COUNT(*) FROM vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) ORDER BY ((vt1.c0 COLLATE RTRIM)IS(((vt1.c0) NOT BETWEEN ('-890177276') AND (vt1.c0)))), ((((vt1.c0 IN ())))>((CASE vt1.c0  WHEN vt1.c0 THEN 'H䔿&f菵qy' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)IS(((vt1.c0) NOT BETWEEN ('-890177276') AND (vt1.c0)))), ((((vt1.c0 IN ())))>((CASE vt1.c0  WHEN vt1.c0 THEN 'H䔿&f菵qy' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) ORDER BY ((vt1.c0 COLLATE RTRIM)IS(((vt1.c0) NOT BETWEEN ('-890177276') AND (vt1.c0)))), ((((vt1.c0 IN ())))>((CASE vt1.c0  WHEN vt1.c0 THEN 'H䔿&f菵qy' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)IS(((vt1.c0) NOT BETWEEN ('-890177276') AND (vt1.c0)))), ((((vt1.c0 IN ())))>((CASE vt1.c0  WHEN vt1.c0 THEN 'H䔿&f菵qy' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) ORDER BY ((vt1.c0 COLLATE RTRIM)IS(((vt1.c0) NOT BETWEEN ('-890177276') AND (vt1.c0)))), ((((vt1.c0 IN ())))>((CASE vt1.c0  WHEN vt1.c0 THEN 'H䔿&f菵qy' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ASC;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)-(vt1.c0)))>=((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)-(vt1.c0)))>=((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)-(vt1.c0)))>=((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)-(vt1.c0)))>=((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)-(vt1.c0)))>=((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT * FROM vt1 CROSS JOIN vt0 ON (json(vt1.c0) IN ((((t0.c1, t0.c63, x'')) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((vt1.c0, -0.0, vt1.c0))), LENGTH(t0.c1))) RIGHT OUTER JOIN t0 ON (0X62a1c640 IN ()) WHERE (CAST(CASE WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN x'' WHEN t0.c0 THEN vt1.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN x'' WHEN t0.c0 THEN vt1.c0 END AS REAL)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (json(vt1.c0) IN ((((t0.c1, t0.c63, x'')) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((vt1.c0, -0.0, vt1.c0))), LENGTH(t0.c1))) RIGHT OUTER JOIN t0 ON (0X62a1c640 IN ()));
SELECT * FROM vt1 CROSS JOIN vt0 ON (json(vt1.c0) IN ((((t0.c1, t0.c63, x'')) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((vt1.c0, -0.0, vt1.c0))), LENGTH(t0.c1))) RIGHT OUTER JOIN t0 ON (0X62a1c640 IN ()) WHERE (CAST(CASE WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN x'' WHEN t0.c0 THEN vt1.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN x'' WHEN t0.c0 THEN vt1.c0 END AS REAL)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (json(vt1.c0) IN ((((t0.c1, t0.c63, x'')) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((vt1.c0, -0.0, vt1.c0))), LENGTH(t0.c1))) RIGHT OUTER JOIN t0 ON (0X62a1c640 IN ()));
SELECT ALL * FROM vt1 WHERE (CASE WHEN (- (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)GLOB(vt1.c0)) THEN ((vt1.c0) IS TRUE) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 ELSE (+ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)GLOB(vt1.c0)) THEN ((vt1.c0) IS TRUE) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 ELSE (+ (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (- (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)GLOB(vt1.c0)) THEN ((vt1.c0) IS TRUE) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 ELSE (+ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)GLOB(vt1.c0)) THEN ((vt1.c0) IS TRUE) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 ELSE (+ (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (- (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)GLOB(vt1.c0)) THEN ((vt1.c0) IS TRUE) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 ELSE (+ (vt1.c0)) END);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(((vt1.c0)<(vt1.c0)))))OR((- (vt1.c0))))) ORDER BY (CHANGES() IN ()), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), -1043771875, ((vt1.c0)>(vt1.c0)))) AND ((((vt1.c0)-(vt1.c0)), (((('ᆍ(bHVTw!')OR(vt1.c0)))OR(vt1.c0)), x'4f1a')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))AND(((vt1.c0)<(vt1.c0)))))OR((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (CHANGES() IN ()), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), -1043771875, ((vt1.c0)>(vt1.c0)))) AND ((((vt1.c0)-(vt1.c0)), (((('ᆍ(bHVTw!')OR(vt1.c0)))OR(vt1.c0)), x'4f1a')))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(((vt1.c0)<(vt1.c0)))))OR((- (vt1.c0))))) ORDER BY (CHANGES() IN ()), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), -1043771875, ((vt1.c0)>(vt1.c0)))) AND ((((vt1.c0)-(vt1.c0)), (((('ᆍ(bHVTw!')OR(vt1.c0)))OR(vt1.c0)), x'4f1a')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))AND(((vt1.c0)<(vt1.c0)))))OR((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (CHANGES() IN ()), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), -1043771875, ((vt1.c0)>(vt1.c0)))) AND ((((vt1.c0)-(vt1.c0)), (((('ᆍ(bHVTw!')OR(vt1.c0)))OR(vt1.c0)), x'4f1a')))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(((vt1.c0)<(vt1.c0)))))OR((- (vt1.c0))))) ORDER BY (CHANGES() IN ()), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), -1043771875, ((vt1.c0)>(vt1.c0)))) AND ((((vt1.c0)-(vt1.c0)), (((('ᆍ(bHVTw!')OR(vt1.c0)))OR(vt1.c0)), x'4f1a')))  NULLS LAST;
SELECT * FROM t0 NATURAL JOIN vt1 WHERE (((t0.c63 COLLATE NOCASE)OR(((t0.c0)IS(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((t0.c63 COLLATE NOCASE)OR(((t0.c0)IS(t0.c1))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT * FROM t0 NATURAL JOIN vt1 WHERE (((t0.c63 COLLATE NOCASE)OR(((t0.c0)IS(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((t0.c63 COLLATE NOCASE)OR(((t0.c0)IS(t0.c1))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT * FROM t0 NATURAL JOIN vt1 WHERE (((t0.c63 COLLATE NOCASE)OR(((t0.c0)IS(t0.c1)))));
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON ((((((((((((((x'69948444')AND(t0.c63)))OR(vt1.c0)))AND(vt1.c0)))AND(x'')))OR(t0.c0)))OR(t0.c63)))<=(rtreenode(t0.c1, vt1.c0))) WHERE (((((t0.c0)||(vt1.c0)))LIKE((x'' IN ())))) ORDER BY ((((CAST(t0.c63 AS BLOB))OR(t0.c2)))AND(((t0.c1) IS FALSE))), (((NOT (t0.c0)))*(((t0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)||(vt1.c0)))LIKE((x'' IN ())))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((((((((((((((x'69948444')AND(t0.c63)))OR(vt1.c0)))AND(vt1.c0)))AND(x'')))OR(t0.c0)))OR(t0.c63)))<=(rtreenode(t0.c1, vt1.c0))) ORDER BY ((((CAST(t0.c63 AS BLOB))OR(t0.c2)))AND(((t0.c1) IS FALSE))), (((NOT (t0.c0)))*(((t0.c0) ISNULL)))  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON ((((((((((((((x'69948444')AND(t0.c63)))OR(vt1.c0)))AND(vt1.c0)))AND(x'')))OR(t0.c0)))OR(t0.c63)))<=(rtreenode(t0.c1, vt1.c0))) WHERE (((((t0.c0)||(vt1.c0)))LIKE((x'' IN ())))) ORDER BY ((((CAST(t0.c63 AS BLOB))OR(t0.c2)))AND(((t0.c1) IS FALSE))), (((NOT (t0.c0)))*(((t0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)||(vt1.c0)))LIKE((x'' IN ())))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((((((((((((((x'69948444')AND(t0.c63)))OR(vt1.c0)))AND(vt1.c0)))AND(x'')))OR(t0.c0)))OR(t0.c63)))<=(rtreenode(t0.c1, vt1.c0))) ORDER BY ((((CAST(t0.c63 AS BLOB))OR(t0.c2)))AND(((t0.c1) IS FALSE))), (((NOT (t0.c0)))*(((t0.c0) ISNULL)))  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON ((((((((((((((x'69948444')AND(t0.c63)))OR(vt1.c0)))AND(vt1.c0)))AND(x'')))OR(t0.c0)))OR(t0.c63)))<=(rtreenode(t0.c1, vt1.c0))) WHERE (((((t0.c0)||(vt1.c0)))LIKE((x'' IN ())))) ORDER BY ((((CAST(t0.c63 AS BLOB))OR(t0.c2)))AND(((t0.c1) IS FALSE))), (((NOT (t0.c0)))*(((t0.c0) ISNULL)))  NULLS LAST;
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN (((vt0.c0))!=((t0.c2))) THEN ((((t0.c1)OR(t0.c0)))OR(NULL)) END FULL OUTER JOIN vt1 ON (((t0.c1, vt1.c0, t0.c1)) NOT BETWEEN ((t0.c63, (((vt0.c0))<((t0.c0))), (((t0.c2)) NOT BETWEEN ((vt1.c0)) AND ((t0.c1))))) AND ((t0.c63, ((t0.c2) NOT NULL), ((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN (((vt0.c0))!=((t0.c2))) THEN ((((t0.c1)OR(t0.c0)))OR(NULL)) END FULL OUTER JOIN vt1 ON (((t0.c1, vt1.c0, t0.c1)) NOT BETWEEN ((t0.c63, (((vt0.c0))<((t0.c0))), (((t0.c2)) NOT BETWEEN ((vt1.c0)) AND ((t0.c1))))) AND ((t0.c63, ((t0.c2) NOT NULL), ((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN (((vt0.c0))!=((t0.c2))) THEN ((((t0.c1)OR(t0.c0)))OR(NULL)) END FULL OUTER JOIN vt1 ON (((t0.c1, vt1.c0, t0.c1)) NOT BETWEEN ((t0.c63, (((vt0.c0))<((t0.c0))), (((t0.c2)) NOT BETWEEN ((vt1.c0)) AND ((t0.c1))))) AND ((t0.c63, ((t0.c2) NOT NULL), ((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN (((vt0.c0))!=((t0.c2))) THEN ((((t0.c1)OR(t0.c0)))OR(NULL)) END FULL OUTER JOIN vt1 ON (((t0.c1, vt1.c0, t0.c1)) NOT BETWEEN ((t0.c63, (((vt0.c0))<((t0.c0))), (((t0.c2)) NOT BETWEEN ((vt1.c0)) AND ((t0.c1))))) AND ((t0.c63, ((t0.c2) NOT NULL), ((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN (((vt0.c0))!=((t0.c2))) THEN ((((t0.c1)OR(t0.c0)))OR(NULL)) END FULL OUTER JOIN vt1 ON (((t0.c1, vt1.c0, t0.c1)) NOT BETWEEN ((t0.c63, (((vt0.c0))<((t0.c0))), (((t0.c2)) NOT BETWEEN ((vt1.c0)) AND ((t0.c1))))) AND ((t0.c63, ((t0.c2) NOT NULL), ((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))) WHERE (t0.c0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (t0.c1) ORDER BY ((((((vt1.c0) BETWEEN (t0.c1) AND (vt1.c0)))AND(CAST(t0.c0 AS INTEGER))))AND(((vt0.c0)*(vt0.c0)))) ASC, CASE WHEN ((t0.c0)AND(vt0.c0)) THEN 0.5980718286494014 WHEN ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN t0.c2 WHEN vt1.c0 COLLATE RTRIM THEN ((0.7127019441890007) BETWEEN (t0.c1) AND (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((((vt1.c0) BETWEEN (t0.c1) AND (vt1.c0)))AND(CAST(t0.c0 AS INTEGER))))AND(((vt0.c0)*(vt0.c0)))) ASC, CASE WHEN ((t0.c0)AND(vt0.c0)) THEN 0.5980718286494014 WHEN ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN t0.c2 WHEN vt1.c0 COLLATE RTRIM THEN ((0.7127019441890007) BETWEEN (t0.c1) AND (vt0.c0)) END);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (t0.c1) ORDER BY ((((((vt1.c0) BETWEEN (t0.c1) AND (vt1.c0)))AND(CAST(t0.c0 AS INTEGER))))AND(((vt0.c0)*(vt0.c0)))) ASC, CASE WHEN ((t0.c0)AND(vt0.c0)) THEN 0.5980718286494014 WHEN ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN t0.c2 WHEN vt1.c0 COLLATE RTRIM THEN ((0.7127019441890007) BETWEEN (t0.c1) AND (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((((vt1.c0) BETWEEN (t0.c1) AND (vt1.c0)))AND(CAST(t0.c0 AS INTEGER))))AND(((vt0.c0)*(vt0.c0)))) ASC, CASE WHEN ((t0.c0)AND(vt0.c0)) THEN 0.5980718286494014 WHEN ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN t0.c2 WHEN vt1.c0 COLLATE RTRIM THEN ((0.7127019441890007) BETWEEN (t0.c1) AND (vt0.c0)) END);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (t0.c1) ORDER BY ((((((vt1.c0) BETWEEN (t0.c1) AND (vt1.c0)))AND(CAST(t0.c0 AS INTEGER))))AND(((vt0.c0)*(vt0.c0)))) ASC, CASE WHEN ((t0.c0)AND(vt0.c0)) THEN 0.5980718286494014 WHEN ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN t0.c2 WHEN vt1.c0 COLLATE RTRIM THEN ((0.7127019441890007) BETWEEN (t0.c1) AND (vt0.c0)) END;
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (CHANGES());
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN vt1 ON vt0.c0 WHERE (((((t0.c0) NOTNULL)) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(t0.c1)) AND (((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c2))))) ORDER BY ((((('-1311416603', t0.c0, t0.c63))<((t0.c1, vt0.c0, t0.c2))))&(((t0.c2) BETWEEN (t0.c1) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL)) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(t0.c1)) AND (((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c2))))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN vt1 ON vt0.c0 ORDER BY ((((('-1311416603', t0.c0, t0.c63))<((t0.c1, vt0.c0, t0.c2))))&(((t0.c2) BETWEEN (t0.c1) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN vt1 ON vt0.c0 WHERE (((((t0.c0) NOTNULL)) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(t0.c1)) AND (((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c2))))) ORDER BY ((((('-1311416603', t0.c0, t0.c63))<((t0.c1, vt0.c0, t0.c2))))&(((t0.c2) BETWEEN (t0.c1) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL)) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(t0.c1)) AND (((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c2))))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN vt1 ON vt0.c0 ORDER BY ((((('-1311416603', t0.c0, t0.c63))<((t0.c1, vt0.c0, t0.c2))))&(((t0.c2) BETWEEN (t0.c1) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN vt1 ON vt0.c0 WHERE (((((t0.c0) NOTNULL)) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(t0.c1)) AND (((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c2))))) ORDER BY ((((('-1311416603', t0.c0, t0.c63))<((t0.c1, vt0.c0, t0.c2))))&(((t0.c2) BETWEEN (t0.c1) AND (vt0.c0))))  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((CAST(vt0.c0 AS BLOB)))>(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ORDER BY CAST(LIKELIHOOD(vt0.c0, 0.4718912181473307) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS BLOB)))>(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(LIKELIHOOD(vt0.c0, 0.4718912181473307) AS REAL)  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((CAST(vt0.c0 AS BLOB)))>(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ORDER BY CAST(LIKELIHOOD(vt0.c0, 0.4718912181473307) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS BLOB)))>(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(LIKELIHOOD(vt0.c0, 0.4718912181473307) AS REAL)  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((CAST(vt0.c0 AS BLOB)))>(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ORDER BY CAST(LIKELIHOOD(vt0.c0, 0.4718912181473307) AS REAL)  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((IFNULL(vt1.c0, vt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt1.c0, vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt1, t0 NOT INDEXED, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((IFNULL(vt1.c0, vt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt1.c0, vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt1, t0 NOT INDEXED, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((IFNULL(vt1.c0, vt0.c0)) IS FALSE));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON '}&RFgW>~' WHERE ((NOT (((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c2) BETWEEN (t0.c1) AND (t0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON '}&RFgW>~');
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON '}&RFgW>~' WHERE ((NOT (((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c2) BETWEEN (t0.c1) AND (t0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON '}&RFgW>~');
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON '}&RFgW>~' WHERE ((NOT (((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))));
SELECT ALL * FROM vt1, vt0, t0 WHERE (LIKELY(((((x'78ec')OR(t0.c63)))OR(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((x'78ec')OR(t0.c63)))OR(NULL)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (LIKELY(((((x'78ec')OR(t0.c63)))OR(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((x'78ec')OR(t0.c63)))OR(NULL)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (LIKELY(((((x'78ec')OR(t0.c63)))OR(NULL))));
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN vt1 ON CAST(((((t0.c1)OR(t0.c0)))AND(t0.c2)) AS REAL) WHERE (NULL) ORDER BY TRIM(DISTINCT LIKELIHOOD(DISTINCT vt0.c0, 0.028549014890383972), ((t0.c63) NOT BETWEEN (t0.c0) AND ('-869932166')));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN vt1 ON CAST(((((t0.c1)OR(t0.c0)))AND(t0.c2)) AS REAL) ORDER BY TRIM(DISTINCT LIKELIHOOD(DISTINCT vt0.c0, 0.028549014890383972), ((t0.c63) NOT BETWEEN (t0.c0) AND ('-869932166'))));
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN vt1 ON CAST(((((t0.c1)OR(t0.c0)))AND(t0.c2)) AS REAL) WHERE (NULL) ORDER BY TRIM(DISTINCT LIKELIHOOD(DISTINCT vt0.c0, 0.028549014890383972), ((t0.c63) NOT BETWEEN (t0.c0) AND ('-869932166')));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN vt1 ON CAST(((((t0.c1)OR(t0.c0)))AND(t0.c2)) AS REAL) ORDER BY TRIM(DISTINCT LIKELIHOOD(DISTINCT vt0.c0, 0.028549014890383972), ((t0.c63) NOT BETWEEN (t0.c0) AND ('-869932166'))));
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN vt1 ON CAST(((((t0.c1)OR(t0.c0)))AND(t0.c2)) AS REAL) WHERE (NULL) ORDER BY TRIM(DISTINCT LIKELIHOOD(DISTINCT vt0.c0, 0.028549014890383972), ((t0.c63) NOT BETWEEN (t0.c0) AND ('-869932166')));
SELECT ALL * FROM t0 WHERE (UNLIKELY(DISTINCT (~ (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (~ (t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (UNLIKELY(DISTINCT (~ (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (~ (t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (UNLIKELY(DISTINCT (~ (t0.c0))));
SELECT * FROM t0 WHERE (LIKELY(DISTINCT ((t0.c2) NOTNULL))) ORDER BY ((((UNLIKELY(DISTINCT t0.c2))AND((t0.c1 IN ()))))AND(((((t0.c2)AND(x'ba66')))AND(t0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((t0.c2) NOTNULL))) IS TRUE)  as count FROM t0 ORDER BY ((((UNLIKELY(DISTINCT t0.c2))AND((t0.c1 IN ()))))AND(((((t0.c2)AND(x'ba66')))AND(t0.c1)))) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (LIKELY(DISTINCT ((t0.c2) NOTNULL))) ORDER BY ((((UNLIKELY(DISTINCT t0.c2))AND((t0.c1 IN ()))))AND(((((t0.c2)AND(x'ba66')))AND(t0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((t0.c2) NOTNULL))) IS TRUE)  as count FROM t0 ORDER BY ((((UNLIKELY(DISTINCT t0.c2))AND((t0.c1 IN ()))))AND(((((t0.c2)AND(x'ba66')))AND(t0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c0)) BETWEEN ((((NULL)|(vt0.c0)))) AND ((t0.c2)))) ORDER BY ((((t0.c63) NOTNULL))%(((((t0.c0)AND(x'')))OR(vt0.c0)))) DESC  NULLS LAST, t0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((((NULL)|(vt0.c0)))) AND ((t0.c2)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c63) NOTNULL))%(((((t0.c0)AND(x'')))OR(vt0.c0)))) DESC  NULLS LAST, t0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c0)) BETWEEN ((((NULL)|(vt0.c0)))) AND ((t0.c2)))) ORDER BY ((((t0.c63) NOTNULL))%(((((t0.c0)AND(x'')))OR(vt0.c0)))) DESC  NULLS LAST, t0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((((NULL)|(vt0.c0)))) AND ((t0.c2)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c63) NOTNULL))%(((((t0.c0)AND(x'')))OR(vt0.c0)))) DESC  NULLS LAST, t0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c0)) BETWEEN ((((NULL)|(vt0.c0)))) AND ((t0.c2)))) ORDER BY ((((t0.c63) NOTNULL))%(((((t0.c0)AND(x'')))OR(vt0.c0)))) DESC  NULLS LAST, t0.c1 DESC  NULLS FIRST;
SELECT ALL * FROM vt1, t0, vt0 WHERE (json_valid(CAST(t0.c63 AS TEXT))) ORDER BY (~ (((vt1.c0) BETWEEN (t0.c2) AND (vt0.c0)))) DESC  NULLS FIRST, (((vt1.c0) ISNULL) IN ()) DESC  NULLS LAST, STRFTIME(CAST(t0.c0 AS INTEGER), (t0.c0 IN ()), ((vt0.c0)OR(vt0.c0)), (+ (vt0.c0)), (t0.c1 IN (t0.c0)), (((vt0.c0, vt1.c0, t0.c1))<=((t0.c0, t0.c0, t0.c63))), ((NULL)IS(t0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid(CAST(t0.c63 AS TEXT))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (~ (((vt1.c0) BETWEEN (t0.c2) AND (vt0.c0)))) DESC  NULLS FIRST, (((vt1.c0) ISNULL) IN ()) DESC  NULLS LAST, STRFTIME(CAST(t0.c0 AS INTEGER), (t0.c0 IN ()), ((vt0.c0)OR(vt0.c0)), (+ (vt0.c0)), (t0.c1 IN (t0.c0)), (((vt0.c0, vt1.c0, t0.c1))<=((t0.c0, t0.c0, t0.c63))), ((NULL)IS(t0.c1)))  NULLS FIRST);
SELECT ALL * FROM vt1, t0, vt0 WHERE (json_valid(CAST(t0.c63 AS TEXT))) ORDER BY (~ (((vt1.c0) BETWEEN (t0.c2) AND (vt0.c0)))) DESC  NULLS FIRST, (((vt1.c0) ISNULL) IN ()) DESC  NULLS LAST, STRFTIME(CAST(t0.c0 AS INTEGER), (t0.c0 IN ()), ((vt0.c0)OR(vt0.c0)), (+ (vt0.c0)), (t0.c1 IN (t0.c0)), (((vt0.c0, vt1.c0, t0.c1))<=((t0.c0, t0.c0, t0.c63))), ((NULL)IS(t0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid(CAST(t0.c63 AS TEXT))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (~ (((vt1.c0) BETWEEN (t0.c2) AND (vt0.c0)))) DESC  NULLS FIRST, (((vt1.c0) ISNULL) IN ()) DESC  NULLS LAST, STRFTIME(CAST(t0.c0 AS INTEGER), (t0.c0 IN ()), ((vt0.c0)OR(vt0.c0)), (+ (vt0.c0)), (t0.c1 IN (t0.c0)), (((vt0.c0, vt1.c0, t0.c1))<=((t0.c0, t0.c0, t0.c63))), ((NULL)IS(t0.c1)))  NULLS FIRST);
SELECT ALL * FROM vt1, t0, vt0 WHERE (json_valid(CAST(t0.c63 AS TEXT))) ORDER BY (~ (((vt1.c0) BETWEEN (t0.c2) AND (vt0.c0)))) DESC  NULLS FIRST, (((vt1.c0) ISNULL) IN ()) DESC  NULLS LAST, STRFTIME(CAST(t0.c0 AS INTEGER), (t0.c0 IN ()), ((vt0.c0)OR(vt0.c0)), (+ (vt0.c0)), (t0.c1 IN (t0.c0)), (((vt0.c0, vt1.c0, t0.c1))<=((t0.c0, t0.c0, t0.c63))), ((NULL)IS(t0.c1)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULL) IS FALSE));
SELECT * FROM vt1 WHERE ('') ORDER BY (NOT (vt1.c0))  NULLS FIRST, vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1 ORDER BY (NOT (vt1.c0))  NULLS FIRST, vt1.c0  NULLS FIRST);
SELECT * FROM vt1 WHERE ('') ORDER BY (NOT (vt1.c0))  NULLS FIRST, vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1 ORDER BY (NOT (vt1.c0))  NULLS FIRST, vt1.c0  NULLS FIRST);
SELECT * FROM vt1 WHERE ('') ORDER BY (NOT (vt1.c0))  NULLS FIRST, vt1.c0  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((+ ((- (vt0.c0))))) ORDER BY (- ((((t0.c63))==((t0.c0))))) ASC  NULLS LAST, (((t0.c2, t0.c1, t0.c2)) NOT BETWEEN ((((((vt1.c0)AND(t0.c1)))AND(t0.c63)), ((vt1.c0) NOT NULL), (~ (t0.c2)))) AND ((((t0.c0) IS FALSE), t0.c1 COLLATE BINARY, CAST(t0.c0 AS NUMERIC)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((- (vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (- ((((t0.c63))=((t0.c0))))) ASC  NULLS LAST, (((t0.c2, t0.c1, t0.c2)) NOT BETWEEN ((((((vt1.c0)AND(t0.c1)))AND(t0.c63)), ((vt1.c0) NOT NULL), (~ (t0.c2)))) AND ((((t0.c0) IS FALSE), t0.c1 COLLATE BINARY, CAST(t0.c0 AS NUMERIC)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((+ ((- (vt0.c0))))) ORDER BY (- ((((t0.c63))==((t0.c0))))) ASC  NULLS LAST, (((t0.c2, t0.c1, t0.c2)) NOT BETWEEN ((((((vt1.c0)AND(t0.c1)))AND(t0.c63)), ((vt1.c0) NOT NULL), (~ (t0.c2)))) AND ((((t0.c0) IS FALSE), t0.c1 COLLATE BINARY, CAST(t0.c0 AS NUMERIC)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((- (vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (- ((((t0.c63))=((t0.c0))))) ASC  NULLS LAST, (((t0.c2, t0.c1, t0.c2)) NOT BETWEEN ((((((vt1.c0)AND(t0.c1)))AND(t0.c63)), ((vt1.c0) NOT NULL), (~ (t0.c2)))) AND ((((t0.c0) IS FALSE), t0.c1 COLLATE BINARY, CAST(t0.c0 AS NUMERIC)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((+ ((- (vt0.c0))))) ORDER BY (- ((((t0.c63))==((t0.c0))))) ASC  NULLS LAST, (((t0.c2, t0.c1, t0.c2)) NOT BETWEEN ((((((vt1.c0)AND(t0.c1)))AND(t0.c63)), ((vt1.c0) NOT NULL), (~ (t0.c2)))) AND ((((t0.c0) IS FALSE), t0.c1 COLLATE BINARY, CAST(t0.c0 AS NUMERIC)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN ((0.9274599563590179)IS NOT(vt1.c0)) END) ORDER BY CAST('115835745' AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c0 IN ()) THEN ((0.9274599563590179)IS NOT(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY CAST('115835745' AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN ((0.9274599563590179)IS NOT(vt1.c0)) END) ORDER BY CAST('115835745' AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c0 IN ()) THEN ((0.9274599563590179)IS NOT(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY CAST('115835745' AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN ((0.9274599563590179)IS NOT(vt1.c0)) END) ORDER BY CAST('115835745' AS BLOB) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)OR(-1858614821)))OR(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(-1858614821)))OR(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)OR(-1858614821)))OR(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(-1858614821)))OR(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)OR(-1858614821)))OR(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c2)/(t0.c2)))>((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)/(t0.c2)))>((~ (t0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c2)/(t0.c2)))>((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)/(t0.c2)))>((~ (t0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c2)/(t0.c2)))>((~ (t0.c0)))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (((((t0.c2))>((-869932166)))) ISNULL) WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((((t0.c2))>((-869932166)))) ISNULL));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (((((t0.c2))>((-869932166)))) ISNULL) WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((((t0.c2))>((-869932166)))) ISNULL));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (((((t0.c2))>((-869932166)))) ISNULL) WHERE (t0.c2);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON CASE WHEN vt1.c0 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE COLLATE RTRIM INNER JOIN vt1 ON load_extension(t0.c1) WHERE (((vt0.c0)%(((vt1.c0)IS(NULL))))) ORDER BY CAST((~ (t0.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)%(((vt1.c0)IS(NULL))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE WHEN vt1.c0 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE COLLATE RTRIM INNER JOIN vt1 ON load_extension(t0.c1) ORDER BY CAST((~ (t0.c0)) AS REAL) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON CASE WHEN vt1.c0 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE COLLATE RTRIM INNER JOIN vt1 ON load_extension(t0.c1) WHERE (((vt0.c0)%(((vt1.c0)IS(NULL))))) ORDER BY CAST((~ (t0.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)%(((vt1.c0)IS(NULL))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE WHEN vt1.c0 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE COLLATE RTRIM INNER JOIN vt1 ON load_extension(t0.c1) ORDER BY CAST((~ (t0.c0)) AS REAL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((TRIM(vt1.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((TRIM(vt1.c0) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((TRIM(vt1.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((TRIM(vt1.c0) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((TRIM(vt1.c0) IN ()));
SELECT * FROM vt0, t0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 NOT INDEXED);
SELECT * FROM vt0, t0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 NOT INDEXED);
SELECT * FROM vt0, t0 WHERE (NULL COLLATE RTRIM);
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0);
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0);
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY vt0.c0;
SELECT * FROM t0, vt0 WHERE ((((- (t0.c1))) BETWEEN (t0.c0) AND (((t0.c2) NOT BETWEEN (t0.c63) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c1))) BETWEEN (t0.c0) AND (((t0.c2) NOT BETWEEN (t0.c63) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((- (t0.c1))) BETWEEN (t0.c0) AND (((t0.c2) NOT BETWEEN (t0.c63) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c1))) BETWEEN (t0.c0) AND (((t0.c2) NOT BETWEEN (t0.c63) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((- (t0.c1))) BETWEEN (t0.c0) AND (((t0.c2) NOT BETWEEN (t0.c63) AND (t0.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT * FROM t0 CROSS JOIN vt1 ON 0.509922773569955 WHERE (((((t0.c63) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c63) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON 0.509922773569955);
SELECT * FROM t0 CROSS JOIN vt1 ON 0.509922773569955 WHERE (((((t0.c63) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c63) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON 0.509922773569955);
SELECT * FROM t0 CROSS JOIN vt1 ON 0.509922773569955 WHERE (((((t0.c63) NOTNULL)) NOTNULL));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN ())) ISNULL)) ORDER BY ((CAST(vt1.c0 AS REAL))GLOB(LIKELIHOOD(vt1.c0, 0.33821184991238384)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS REAL))GLOB(LIKELIHOOD(vt1.c0, 0.33821184991238384)))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN ())) ISNULL)) ORDER BY ((CAST(vt1.c0 AS REAL))GLOB(LIKELIHOOD(vt1.c0, 0.33821184991238384)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS REAL))GLOB(LIKELIHOOD(vt1.c0, 0.33821184991238384)))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN ())) ISNULL)) ORDER BY ((CAST(vt1.c0 AS REAL))GLOB(LIKELIHOOD(vt1.c0, 0.33821184991238384)))  NULLS LAST;
SELECT * FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (x'')))OR(((((-7.1272002E7)OR(vt1.c0)))AND(vt1.c0)))))OR((+ (vt1.c0))))) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) BETWEEN (vt1.c0) AND (x'')))OR(((((-7.1272002E7)OR(vt1.c0)))AND(vt1.c0)))))OR((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS INTEGER) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (x'')))OR(((((-7.1272002E7)OR(vt1.c0)))AND(vt1.c0)))))OR((+ (vt1.c0))))) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) BETWEEN (vt1.c0) AND (x'')))OR(((((-7.1272002E7)OR(vt1.c0)))AND(vt1.c0)))))OR((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS INTEGER) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (x'')))OR(((((-7.1272002E7)OR(vt1.c0)))AND(vt1.c0)))))OR((+ (vt1.c0))))) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS INTEGER) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON '' WHERE (((((vt0.c0)+(vt0.c0))) NOT NULL)) ORDER BY ((((((vt1.c0)|(vt1.c0)))AND(LOWER(DISTINCT vt1.c0))))OR(vt1.c0)), (((((- (vt0.c0)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON '' ORDER BY ((((((vt1.c0)|(vt1.c0)))AND(LOWER(DISTINCT vt1.c0))))OR(vt1.c0)), (((((- (vt0.c0)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0)));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON '' WHERE (((((vt0.c0)+(vt0.c0))) NOT NULL)) ORDER BY ((((((vt1.c0)|(vt1.c0)))AND(LOWER(DISTINCT vt1.c0))))OR(vt1.c0)), (((((- (vt0.c0)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON '' ORDER BY ((((((vt1.c0)|(vt1.c0)))AND(LOWER(DISTINCT vt1.c0))))OR(vt1.c0)), (((((- (vt0.c0)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0)));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON '' WHERE (((((vt0.c0)+(vt0.c0))) NOT NULL)) ORDER BY ((((((vt1.c0)|(vt1.c0)))AND(LOWER(DISTINCT vt1.c0))))OR(vt1.c0)), (((((- (vt0.c0)))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS TEXT)) ORDER BY ((UPPER(vt0.c0))>>(((NULL)>>(vt0.c0)))) ASC  NULLS FIRST, (NOT (((vt0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS TRUE) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((UPPER(vt0.c0))>>(((NULL)>>(vt0.c0)))) ASC  NULLS FIRST, (NOT (((vt0.c0) IS FALSE))) ASC);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS TEXT)) ORDER BY ((UPPER(vt0.c0))>>(((NULL)>>(vt0.c0)))) ASC  NULLS FIRST, (NOT (((vt0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS TRUE) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((UPPER(vt0.c0))>>(((NULL)>>(vt0.c0)))) ASC  NULLS FIRST, (NOT (((vt0.c0) IS FALSE))) ASC);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS TEXT)) ORDER BY ((UPPER(vt0.c0))>>(((NULL)>>(vt0.c0)))) ASC  NULLS FIRST, (NOT (((vt0.c0) IS FALSE))) ASC;
SELECT * FROM t0 WHERE (((0.34596495142205097) BETWEEN (((t0.c2)||('1434140475'))) AND (CAST(t0.c2 AS INTEGER)))) ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c63)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.34596495142205097) BETWEEN (((t0.c2)||('1434140475'))) AND (CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c63)) AS REAL) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((0.34596495142205097) BETWEEN (((t0.c2)||('1434140475'))) AND (CAST(t0.c2 AS INTEGER)))) ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c63)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.34596495142205097) BETWEEN (((t0.c2)||('1434140475'))) AND (CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c63)) AS REAL) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((0.34596495142205097) BETWEEN (((t0.c2)||('1434140475'))) AND (CAST(t0.c2 AS INTEGER)))) ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c63)) AS REAL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ('29075713');
SELECT SUM(count) FROM (SELECT ALL (('29075713') IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ('29075713');
SELECT SUM(count) FROM (SELECT ALL (('29075713') IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ('29075713');
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((NOT (((t0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c1) IS TRUE)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((NOT (((t0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c1) IS TRUE)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((NOT (((t0.c1) IS TRUE))));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)&(vt0.c0))) NOT BETWEEN (x'c60c') AND (((x'') NOT NULL))) WHERE (((vt1.c0 COLLATE BINARY) NOTNULL)) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)&(vt0.c0))) NOT BETWEEN (x'c60c') AND (((x'') NOT NULL))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOTNULL) DESC);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)&(vt0.c0))) NOT BETWEEN (x'c60c') AND (((x'') NOT NULL))) WHERE (((vt1.c0 COLLATE BINARY) NOTNULL)) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)&(vt0.c0))) NOT BETWEEN (x'c60c') AND (((x'') NOT NULL))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOTNULL) DESC);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)&(vt0.c0))) NOT BETWEEN (x'c60c') AND (((x'') NOT NULL))) WHERE (((vt1.c0 COLLATE BINARY) NOTNULL)) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOTNULL) DESC;
SELECT ALL * FROM vt0 WHERE (0.17605996142280744);
SELECT SUM(count) FROM (SELECT ((0.17605996142280744) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.17605996142280744);
SELECT SUM(count) FROM (SELECT ((0.17605996142280744) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.17605996142280744);
SELECT ALL * FROM vt1, t0 WHERE (NULL) ORDER BY UPPER(DISTINCT ((((t0.c63)OR(vt1.c0)))AND(t0.c63))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t0 ORDER BY UPPER(DISTINCT ((((t0.c63)OR(vt1.c0)))AND(t0.c63))) ASC);
SELECT ALL * FROM vt1, t0 WHERE (NULL) ORDER BY UPPER(DISTINCT ((((t0.c63)OR(vt1.c0)))AND(t0.c63))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t0 ORDER BY UPPER(DISTINCT ((((t0.c63)OR(vt1.c0)))AND(t0.c63))) ASC);
SELECT ALL * FROM vt1, t0 WHERE (NULL) ORDER BY UPPER(DISTINCT ((((t0.c63)OR(vt1.c0)))AND(t0.c63))) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN t0 ON ((t0.c1)&(NULL)) COLLATE RTRIM WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) IN ((~ (x''))))) ORDER BY ((t0.c2 COLLATE NOCASE)GLOB(TOTAL_CHANGES()));
SELECT SUM(count) FROM (SELECT (((((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) IN ((~ (x''))))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON ((t0.c1)&(NULL)) COLLATE RTRIM ORDER BY ((t0.c2 COLLATE NOCASE)GLOB(TOTAL_CHANGES())));
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN t0 ON ((t0.c1)&(NULL)) COLLATE RTRIM WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) IN ((~ (x''))))) ORDER BY ((t0.c2 COLLATE NOCASE)GLOB(TOTAL_CHANGES()));
SELECT SUM(count) FROM (SELECT (((((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) IN ((~ (x''))))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON ((t0.c1)&(NULL)) COLLATE RTRIM ORDER BY ((t0.c2 COLLATE NOCASE)GLOB(TOTAL_CHANGES())));
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN t0 ON ((t0.c1)&(NULL)) COLLATE RTRIM WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) IN ((~ (x''))))) ORDER BY ((t0.c2 COLLATE NOCASE)GLOB(TOTAL_CHANGES()));
SELECT * FROM t0, vt0, vt1 WHERE (((t0.c0) IS FALSE)) ORDER BY (((vt1.c0 IN ())) IS TRUE) ASC, -3.54125126E8 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS FALSE)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((vt1.c0 IN ())) IS TRUE) ASC, -3.54125126E8 ASC);
SELECT * FROM t0, vt0, vt1 WHERE (((t0.c0) IS FALSE)) ORDER BY (((vt1.c0 IN ())) IS TRUE) ASC, -3.54125126E8 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS FALSE)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((vt1.c0 IN ())) IS TRUE) ASC, -3.54125126E8 ASC);
SELECT * FROM t0, vt0, vt1 WHERE (((t0.c0) IS FALSE)) ORDER BY (((vt1.c0 IN ())) IS TRUE) ASC, -3.54125126E8 ASC;
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0, x'1b8c', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, 0.7225495977350644, vt0.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, x'1b8c', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, 0.7225495977350644, vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0, x'1b8c', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, 0.7225495977350644, vt0.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, x'1b8c', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, 0.7225495977350644, vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0, x'1b8c', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, 0.7225495977350644, vt0.c0))) AS REAL));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (+ (vt0.c0)) END) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)<=(vt0.c0)))) AND ((((vt0.c0) IS FALSE))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)<=(vt0.c0)))) AND ((((vt0.c0) IS FALSE))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (+ (vt0.c0)) END) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)<=(vt0.c0)))) AND ((((vt0.c0) IS FALSE))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)<=(vt0.c0)))) AND ((((vt0.c0) IS FALSE))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (+ (vt0.c0)) END) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)<=(vt0.c0)))) AND ((((vt0.c0) IS FALSE))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c2);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) IS FALSE), ((vt0.c0)<<(vt0.c0)), (vt0.c0 IN ())))>=((((vt0.c0)<>(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(0.6665684691296399))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) IS FALSE), ((vt0.c0)<<(vt0.c0)), (vt0.c0 IN ())))>=((((vt0.c0)!=(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(0.6665684691296399)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) IS FALSE), ((vt0.c0)<<(vt0.c0)), (vt0.c0 IN ())))>=((((vt0.c0)<>(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(0.6665684691296399))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) IS FALSE), ((vt0.c0)<<(vt0.c0)), (vt0.c0 IN ())))>=((((vt0.c0)!=(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(0.6665684691296399)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) IS FALSE), ((vt0.c0)<<(vt0.c0)), (vt0.c0 IN ())))>=((((vt0.c0)<>(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(0.6665684691296399))))));
SELECT * FROM t0, vt1, vt0 WHERE (((CASE WHEN 0.1556930694743286 THEN t0.c63 ELSE vt1.c0 END) NOT BETWEEN (TRIM(DISTINCT vt1.c0, vt1.c0)) AND (t0.c1 COLLATE RTRIM))) ORDER BY ((((- (vt1.c0))))>((((vt1.c0) BETWEEN (t0.c0) AND (t0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0.1556930694743286 THEN t0.c63 ELSE vt1.c0 END) NOT BETWEEN (TRIM(DISTINCT vt1.c0, vt1.c0)) AND (t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((- (vt1.c0))))>((((vt1.c0) BETWEEN (t0.c0) AND (t0.c2)))))  NULLS LAST);
SELECT * FROM t0, vt1, vt0 WHERE (((CASE WHEN 0.1556930694743286 THEN t0.c63 ELSE vt1.c0 END) NOT BETWEEN (TRIM(DISTINCT vt1.c0, vt1.c0)) AND (t0.c1 COLLATE RTRIM))) ORDER BY ((((- (vt1.c0))))>((((vt1.c0) BETWEEN (t0.c0) AND (t0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0.1556930694743286 THEN t0.c63 ELSE vt1.c0 END) NOT BETWEEN (TRIM(DISTINCT vt1.c0, vt1.c0)) AND (t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((- (vt1.c0))))>((((vt1.c0) BETWEEN (t0.c0) AND (t0.c2)))))  NULLS LAST);
SELECT * FROM t0, vt1, vt0 WHERE (((CASE WHEN 0.1556930694743286 THEN t0.c63 ELSE vt1.c0 END) NOT BETWEEN (TRIM(DISTINCT vt1.c0, vt1.c0)) AND (t0.c1 COLLATE RTRIM))) ORDER BY ((((- (vt1.c0))))>((((vt1.c0) BETWEEN (t0.c0) AND (t0.c2)))))  NULLS LAST;
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((0.725973117693185)) NOT BETWEEN ((t0.c2 COLLATE BINARY)) AND ((((t0.c63)GLOB(t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.725973117693185)) NOT BETWEEN ((t0.c2 COLLATE BINARY)) AND ((((t0.c63)GLOB(t0.c2)))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((0.725973117693185)) NOT BETWEEN ((t0.c2 COLLATE BINARY)) AND ((((t0.c63)GLOB(t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.725973117693185)) NOT BETWEEN ((t0.c2 COLLATE BINARY)) AND ((((t0.c63)GLOB(t0.c2)))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((0.725973117693185)) NOT BETWEEN ((t0.c2 COLLATE BINARY)) AND ((((t0.c63)GLOB(t0.c2))))));
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((((+ (vt0.c0)))AND(CASE WHEN NULL THEN t0.c0 END)))AND(((t0.c63)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt0.c0)))AND(CASE WHEN NULL THEN t0.c0 END)))AND(((t0.c63)IS NOT(t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((((+ (vt0.c0)))AND(CASE WHEN NULL THEN t0.c0 END)))AND(((t0.c63)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt0.c0)))AND(CASE WHEN NULL THEN t0.c0 END)))AND(((t0.c63)IS NOT(t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((((+ (vt0.c0)))AND(CASE WHEN NULL THEN t0.c0 END)))AND(((t0.c63)IS NOT(t0.c0)))));
SELECT * FROM t0, vt0 WHERE (((t0.c63) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c63) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c63) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c63) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c63) ISNULL) COLLATE RTRIM);
SELECT * FROM t0 CROSS JOIN vt1 ON ((((vt1.c0) BETWEEN (vt0.c0) AND (NULL)))AND(CASE WHEN t0.c63 THEN vt0.c0 END)) FULL OUTER JOIN vt0 ON CAST(((t0.c63)LIKE(t0.c63)) AS NUMERIC) WHERE (t0.c2) ORDER BY ((((((vt0.c0) NOT NULL))OR(((t0.c63) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((vt1.c0) BETWEEN (vt0.c0) AND (NULL)))AND(CASE WHEN t0.c63 THEN vt0.c0 END)) FULL OUTER JOIN vt0 ON CAST(((t0.c63)LIKE(t0.c63)) AS NUMERIC) ORDER BY ((((((vt0.c0) NOT NULL))OR(((t0.c63) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))) DESC  NULLS LAST);
SELECT * FROM t0 CROSS JOIN vt1 ON ((((vt1.c0) BETWEEN (vt0.c0) AND (NULL)))AND(CASE WHEN t0.c63 THEN vt0.c0 END)) FULL OUTER JOIN vt0 ON CAST(((t0.c63)LIKE(t0.c63)) AS NUMERIC) WHERE (t0.c2) ORDER BY ((((((vt0.c0) NOT NULL))OR(((t0.c63) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((vt1.c0) BETWEEN (vt0.c0) AND (NULL)))AND(CASE WHEN t0.c63 THEN vt0.c0 END)) FULL OUTER JOIN vt0 ON CAST(((t0.c63)LIKE(t0.c63)) AS NUMERIC) ORDER BY ((((((vt0.c0) NOT NULL))OR(((t0.c63) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (x'') ORDER BY ((((CASE t0.c2  WHEN t0.c1 THEN t0.c63 WHEN t0.c0 THEN '' WHEN t0.c2 THEN t0.c0 ELSE vt1.c0 END)OR(((t0.c63) IS TRUE))))OR(CASE WHEN t0.c2 THEN t0.c2 WHEN NULL THEN t0.c63 WHEN t0.c2 THEN t0.c63 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, t0 ORDER BY ((((CASE t0.c2  WHEN t0.c1 THEN t0.c63 WHEN t0.c0 THEN '' WHEN t0.c2 THEN t0.c0 ELSE vt1.c0 END)OR(((t0.c63) IS TRUE))))OR(CASE WHEN t0.c2 THEN t0.c2 WHEN NULL THEN t0.c63 WHEN t0.c2 THEN t0.c63 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (x'') ORDER BY ((((CASE t0.c2  WHEN t0.c1 THEN t0.c63 WHEN t0.c0 THEN '' WHEN t0.c2 THEN t0.c0 ELSE vt1.c0 END)OR(((t0.c63) IS TRUE))))OR(CASE WHEN t0.c2 THEN t0.c2 WHEN NULL THEN t0.c63 WHEN t0.c2 THEN t0.c63 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, t0 ORDER BY ((((CASE t0.c2  WHEN t0.c1 THEN t0.c63 WHEN t0.c0 THEN '' WHEN t0.c2 THEN t0.c0 ELSE vt1.c0 END)OR(((t0.c63) IS TRUE))))OR(CASE WHEN t0.c2 THEN t0.c2 WHEN NULL THEN t0.c63 WHEN t0.c2 THEN t0.c63 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (x'') ORDER BY ((((CASE t0.c2  WHEN t0.c1 THEN t0.c63 WHEN t0.c0 THEN '' WHEN t0.c2 THEN t0.c0 ELSE vt1.c0 END)OR(((t0.c63) IS TRUE))))OR(CASE WHEN t0.c2 THEN t0.c2 WHEN NULL THEN t0.c63 WHEN t0.c2 THEN t0.c63 END)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN t0 ON (((((t0.c63))<=((vt1.c0)))) IS FALSE) WHERE ((((vt0.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t0 ON (((((t0.c63))<=((vt1.c0)))) IS FALSE));
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN t0 ON (((((t0.c63))<=((vt1.c0)))) IS FALSE) WHERE ((((vt0.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t0 ON (((((t0.c63))<=((vt1.c0)))) IS FALSE));
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN t0 ON (((((t0.c63))<=((vt1.c0)))) IS FALSE) WHERE ((((vt0.c0 IN ())) NOT NULL));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((t0.c0 IN ()))OR(((t0.c0)>=(0.1447715985215987)))))AND(t0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN ()))OR(((t0.c0)>=(0.1447715985215987)))))AND(t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((t0.c0 IN ()))OR(((t0.c0)>=(0.1447715985215987)))))AND(t0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN ()))OR(((t0.c0)>=(0.1447715985215987)))))AND(t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((t0.c0 IN ()))OR(((t0.c0)>=(0.1447715985215987)))))AND(t0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0)<=(vt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<=(vt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0)<=(vt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<=(vt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0)<=(vt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))-(0x515f7d08))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))-(0x515f7d08))) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))-(0x515f7d08))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))-(0x515f7d08))) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))-(0x515f7d08))) ORDER BY NULL ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c63) BETWEEN (t0.c1) AND (-1056977326)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c63) BETWEEN (t0.c1) AND (-1056977326)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c63) BETWEEN (t0.c1) AND (-1056977326)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c63) BETWEEN (t0.c1) AND (-1056977326)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c63) BETWEEN (t0.c1) AND (-1056977326)) AS TEXT));
SELECT * FROM t0, vt1 WHERE (((SQLITE_COMPILEOPTION_USED(vt1.c0)) NOT BETWEEN (((t0.c1) BETWEEN ('') AND (vt1.c0))) AND (((t0.c1)IS(t0.c1))))) ORDER BY (NOT (t0.c63)) COLLATE RTRIM, (~ (CASE WHEN vt1.c0 THEN 547249624 ELSE vt1.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_USED(vt1.c0)) NOT BETWEEN (((t0.c1) BETWEEN ('') AND (vt1.c0))) AND (((t0.c1)IS(t0.c1))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (NOT (t0.c63)) COLLATE RTRIM, (~ (CASE WHEN vt1.c0 THEN 547249624 ELSE vt1.c0 END)) ASC  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (((SQLITE_COMPILEOPTION_USED(vt1.c0)) NOT BETWEEN (((t0.c1) BETWEEN ('') AND (vt1.c0))) AND (((t0.c1)IS(t0.c1))))) ORDER BY (NOT (t0.c63)) COLLATE RTRIM, (~ (CASE WHEN vt1.c0 THEN 547249624 ELSE vt1.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_USED(vt1.c0)) NOT BETWEEN (((t0.c1) BETWEEN ('') AND (vt1.c0))) AND (((t0.c1)IS(t0.c1))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (NOT (t0.c63)) COLLATE RTRIM, (~ (CASE WHEN vt1.c0 THEN 547249624 ELSE vt1.c0 END)) ASC  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (((SQLITE_COMPILEOPTION_USED(vt1.c0)) NOT BETWEEN (((t0.c1) BETWEEN ('') AND (vt1.c0))) AND (((t0.c1)IS(t0.c1))))) ORDER BY (NOT (t0.c63)) COLLATE RTRIM, (~ (CASE WHEN vt1.c0 THEN 547249624 ELSE vt1.c0 END)) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((- (vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (vt1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((('-1644688680', NULL, t0.c0)) BETWEEN ((TRIM(DISTINCT t0.c1), ((t0.c2)>=(t0.c0)), (- (vt0.c0)))) AND ((highlight('-1858614821', t0.c1, t0.c1, t0.c0), ((0.397440597587161) IS FALSE), 0Xffffffffab234c60))));
SELECT SUM(count) FROM (SELECT ALL ((((('-1644688680', NULL, t0.c0)) BETWEEN ((TRIM(DISTINCT t0.c1), ((t0.c2)>=(t0.c0)), (- (vt0.c0)))) AND ((highlight('-1858614821', t0.c1, t0.c1, t0.c0), ((0.397440597587161) IS FALSE), 0xffffffffab234c60)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((('-1644688680', NULL, t0.c0)) BETWEEN ((TRIM(DISTINCT t0.c1), ((t0.c2)>=(t0.c0)), (- (vt0.c0)))) AND ((highlight('-1858614821', t0.c1, t0.c1, t0.c0), ((0.397440597587161) IS FALSE), 0Xffffffffab234c60))));
SELECT SUM(count) FROM (SELECT ALL ((((('-1644688680', NULL, t0.c0)) BETWEEN ((TRIM(DISTINCT t0.c1), ((t0.c2)>=(t0.c0)), (- (vt0.c0)))) AND ((highlight('-1858614821', t0.c1, t0.c1, t0.c0), ((0.397440597587161) IS FALSE), 0xffffffffab234c60)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((('-1644688680', NULL, t0.c0)) BETWEEN ((TRIM(DISTINCT t0.c1), ((t0.c2)>=(t0.c0)), (- (vt0.c0)))) AND ((highlight('-1858614821', t0.c1, t0.c1, t0.c0), ((0.397440597587161) IS FALSE), 0Xffffffffab234c60))));
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c63 THEN t0.c2 WHEN t0.c63 THEN t0.c1 ELSE t0.c2 END)/(((t0.c0)=(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c63 THEN t0.c2 WHEN t0.c63 THEN t0.c1 ELSE t0.c2 END)/(((t0.c0)==(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c63 THEN t0.c2 WHEN t0.c63 THEN t0.c1 ELSE t0.c2 END)/(((t0.c0)=(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c63 THEN t0.c2 WHEN t0.c63 THEN t0.c1 ELSE t0.c2 END)/(((t0.c0)==(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c63 THEN t0.c2 WHEN t0.c63 THEN t0.c1 ELSE t0.c2 END)/(((t0.c0)=(t0.c1)))));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((((t0.c0)IS NOT(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(vt1.c0))) ISNULL)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((((t0.c0)IS NOT(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(vt1.c0))) ISNULL)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((((t0.c0)IS NOT(vt1.c0))) ISNULL));
SELECT ALL * FROM t0 WHERE ((((((t0.c2)GLOB(t0.c63))))>=((((t0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2)GLOB(t0.c63))))>=((((t0.c0) IS FALSE))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c2)GLOB(t0.c63))))>=((((t0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2)GLOB(t0.c63))))>=((((t0.c0) IS FALSE))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c2)GLOB(t0.c63))))>=((((t0.c0) IS FALSE)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c1) ORDER BY (~ (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY (~ (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c1) ORDER BY (~ (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY (~ (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c1) ORDER BY (~ (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (IFNULL(CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c0 END, GLOB(t0.c63, t0.c0)));
SELECT SUM(count) FROM (SELECT ((IFNULL(CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c0 END, GLOB(t0.c63, t0.c0))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (IFNULL(CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c0 END, GLOB(t0.c63, t0.c0)));
SELECT SUM(count) FROM (SELECT ((IFNULL(CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c0 END, GLOB(t0.c63, t0.c0))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (IFNULL(CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c0 END, GLOB(t0.c63, t0.c0)));
SELECT * FROM t0 WHERE (((((t0.c2)>(t0.c1))) BETWEEN (((t0.c1) ISNULL)) AND (((t0.c63)==(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)>(t0.c1))) BETWEEN (((t0.c1) ISNULL)) AND (((t0.c63)==(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c2)>(t0.c1))) BETWEEN (((t0.c1) ISNULL)) AND (((t0.c63)==(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)>(t0.c1))) BETWEEN (((t0.c1) ISNULL)) AND (((t0.c63)==(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c2)>(t0.c1))) BETWEEN (((t0.c1) ISNULL)) AND (((t0.c63)==(t0.c2)))));
SELECT COUNT(*) FROM vt1 NOT INDEXED, vt0 WHERE ((- ('234154994')));
SELECT SUM(count) FROM (SELECT ALL (((- ('234154994'))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1 NOT INDEXED, vt0 WHERE ((- ('234154994')));
SELECT SUM(count) FROM (SELECT ALL (((- ('234154994'))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1 NOT INDEXED, vt0 WHERE ((- ('234154994')));
SELECT ALL COUNT(*) FROM t0 WHERE ((((NOT (t0.c2)))IS(0.0621083931976405))) ORDER BY (~ ((t0.c63 IN ()))) ASC, CASE '1522T1041 -3692883218920123467:-800049396216933384:-5363441981234694664 4267957353895610820--6082098157975979918:1350 |E'  WHEN (((x'', t0.c1, t0.c63, t0.c1, 1.986180405E9)) BETWEEN ((t0.c0, '1111246315', t0.c0, t0.c2, t0.c0)) AND ((t0.c2, t0.c63, t0.c0, 0X20f0dcea, x''))) THEN ((t0.c2)IS NOT(t0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c2)))IS(0.0621083931976405))) IS TRUE)  as count FROM t0 ORDER BY (~ ((t0.c63 IN ()))) ASC, CASE '1522T1041 -3692883218920123467:-800049396216933384:-5363441981234694664 4267957353895610820--6082098157975979918:1350 |E'  WHEN (((x'', t0.c1, t0.c63, t0.c1, 1.986180405E9)) BETWEEN ((t0.c0, '1111246315', t0.c0, t0.c2, t0.c0)) AND ((t0.c2, t0.c63, t0.c0, 0x20f0dcea, x''))) THEN ((t0.c2)IS NOT(t0.c1)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((NOT (t0.c2)))IS(0.0621083931976405))) ORDER BY (~ ((t0.c63 IN ()))) ASC, CASE '1522T1041 -3692883218920123467:-800049396216933384:-5363441981234694664 4267957353895610820--6082098157975979918:1350 |E'  WHEN (((x'', t0.c1, t0.c63, t0.c1, 1.986180405E9)) BETWEEN ((t0.c0, '1111246315', t0.c0, t0.c2, t0.c0)) AND ((t0.c2, t0.c63, t0.c0, 0X20f0dcea, x''))) THEN ((t0.c2)IS NOT(t0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c2)))IS(0.0621083931976405))) IS TRUE)  as count FROM t0 ORDER BY (~ ((t0.c63 IN ()))) ASC, CASE '1522T1041 -3692883218920123467:-800049396216933384:-5363441981234694664 4267957353895610820--6082098157975979918:1350 |E'  WHEN (((x'', t0.c1, t0.c63, t0.c1, 1.986180405E9)) BETWEEN ((t0.c0, '1111246315', t0.c0, t0.c2, t0.c0)) AND ((t0.c2, t0.c63, t0.c0, 0x20f0dcea, x''))) THEN ((t0.c2)IS NOT(t0.c1)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((NOT (t0.c2)))IS(0.0621083931976405))) ORDER BY (~ ((t0.c63 IN ()))) ASC, CASE '1522T1041 -3692883218920123467:-800049396216933384:-5363441981234694664 4267957353895610820--6082098157975979918:1350 |E'  WHEN (((x'', t0.c1, t0.c63, t0.c1, 1.986180405E9)) BETWEEN ((t0.c0, '1111246315', t0.c0, t0.c2, t0.c0)) AND ((t0.c2, t0.c63, t0.c0, 0X20f0dcea, x''))) THEN ((t0.c2)IS NOT(t0.c1)) END ASC  NULLS FIRST;
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((((vt1.c0))>=((vt0.c0)))))>=(((NOT (t0.c63))))) FULL OUTER JOIN t0 ON CAST((~ (vt1.c0)) AS REAL) WHERE ((((~ (t0.c0))) NOT BETWEEN (t0.c1) AND (((((((((((((t0.c63)OR(1377641017)))AND(vt1.c0)))AND(t0.c63)))AND(t0.c1)))OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0))) NOT BETWEEN (t0.c1) AND (((((((((((((t0.c63)OR(1377641017)))AND(vt1.c0)))AND(t0.c63)))AND(t0.c1)))OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((((vt1.c0))>=((vt0.c0)))))>=(((NOT (t0.c63))))) FULL OUTER JOIN t0 ON CAST((~ (vt1.c0)) AS REAL));
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((((vt1.c0))>=((vt0.c0)))))>=(((NOT (t0.c63))))) FULL OUTER JOIN t0 ON CAST((~ (vt1.c0)) AS REAL) WHERE ((((~ (t0.c0))) NOT BETWEEN (t0.c1) AND (((((((((((((t0.c63)OR(1377641017)))AND(vt1.c0)))AND(t0.c63)))AND(t0.c1)))OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0))) NOT BETWEEN (t0.c1) AND (((((((((((((t0.c63)OR(1377641017)))AND(vt1.c0)))AND(t0.c63)))AND(t0.c1)))OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((((vt1.c0))>=((vt0.c0)))))>=(((NOT (t0.c63))))) FULL OUTER JOIN t0 ON CAST((~ (vt1.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0 IN ()))OR((((vt0.c0))<((vt0.c0))))))OR(((vt0.c0)LIKE(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))AND(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN ()))OR((((vt0.c0))<((vt0.c0))))))OR(((vt0.c0)LIKE(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0 IN ()))OR((((vt0.c0))<((vt0.c0))))))OR(((vt0.c0)LIKE(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))AND(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN ()))OR((((vt0.c0))<((vt0.c0))))))OR(((vt0.c0)LIKE(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0 IN ()))OR((((vt0.c0))<((vt0.c0))))))OR(((vt0.c0)LIKE(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))AND(CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM t0, vt1 INDEXED BY i62, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<=(((vt1.c0) BETWEEN (t0.c1) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<=(((vt1.c0) BETWEEN (t0.c1) AND (t0.c1))))) IS TRUE)  as count FROM t0, vt1 INDEXED BY i62, vt0);
SELECT ALL * FROM t0, vt1 INDEXED BY i62, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<=(((vt1.c0) BETWEEN (t0.c1) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<=(((vt1.c0) BETWEEN (t0.c1) AND (t0.c1))))) IS TRUE)  as count FROM t0, vt1 INDEXED BY i62, vt0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (GLOB(((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c0)), ((vt0.c0) IS FALSE))) ORDER BY (~ ((+ (t0.c1))))  NULLS FIRST, CAST(((t0.c0)<=(t0.c63)) AS NUMERIC)  NULLS LAST, UNICODE(((t0.c0) NOT BETWEEN (0x6583e284) AND (vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((GLOB(((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c0)), ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0, t0 ORDER BY (~ ((+ (t0.c1))))  NULLS FIRST, CAST(((t0.c0)<=(t0.c63)) AS NUMERIC)  NULLS LAST, UNICODE(((t0.c0) NOT BETWEEN (0X6583e284) AND (vt0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (GLOB(((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c0)), ((vt0.c0) IS FALSE))) ORDER BY (~ ((+ (t0.c1))))  NULLS FIRST, CAST(((t0.c0)<=(t0.c63)) AS NUMERIC)  NULLS LAST, UNICODE(((t0.c0) NOT BETWEEN (0x6583e284) AND (vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((GLOB(((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c0)), ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0, t0 ORDER BY (~ ((+ (t0.c1))))  NULLS FIRST, CAST(((t0.c0)<=(t0.c63)) AS NUMERIC)  NULLS LAST, UNICODE(((t0.c0) NOT BETWEEN (0X6583e284) AND (vt0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (GLOB(((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c0)), ((vt0.c0) IS FALSE))) ORDER BY (~ ((+ (t0.c1))))  NULLS FIRST, CAST(((t0.c0)<=(t0.c63)) AS NUMERIC)  NULLS LAST, UNICODE(((t0.c0) NOT BETWEEN (0x6583e284) AND (vt0.c0))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0)<<(vt0.c0)))))) ORDER BY ((vt0.c0) NOT NULL) COLLATE BINARY DESC, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), ((CAST(vt0.c0 AS NUMERIC)) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0)<<(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT NULL) COLLATE BINARY DESC, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), ((CAST(vt0.c0 AS NUMERIC)) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0)<<(vt0.c0)))))) ORDER BY ((vt0.c0) NOT NULL) COLLATE BINARY DESC, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), ((CAST(vt0.c0 AS NUMERIC)) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0)<<(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT NULL) COLLATE BINARY DESC, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), ((CAST(vt0.c0 AS NUMERIC)) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0)<<(vt0.c0)))))) ORDER BY ((vt0.c0) NOT NULL) COLLATE BINARY DESC, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), ((CAST(vt0.c0 AS NUMERIC)) IS FALSE);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (load_extension(0.027137993511187064, ((t0.c2) IS FALSE))) ORDER BY (- (ABS(DISTINCT t0.c0))) DESC, ((((CAST(vt0.c0 AS TEXT))AND(NULLIF(DISTINCT vt0.c0, vt0.c0))))OR(('-1866469469' IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(0.027137993511187064, ((t0.c2) IS FALSE))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (- (ABS(DISTINCT t0.c0))) DESC, ((((CAST(vt0.c0 AS TEXT))AND(NULLIF(DISTINCT vt0.c0, vt0.c0))))OR(('-1866469469' IN ()))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (load_extension(0.027137993511187064, ((t0.c2) IS FALSE))) ORDER BY (- (ABS(DISTINCT t0.c0))) DESC, ((((CAST(vt0.c0 AS TEXT))AND(NULLIF(DISTINCT vt0.c0, vt0.c0))))OR(('-1866469469' IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(0.027137993511187064, ((t0.c2) IS FALSE))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (- (ABS(DISTINCT t0.c0))) DESC, ((((CAST(vt0.c0 AS TEXT))AND(NULLIF(DISTINCT vt0.c0, vt0.c0))))OR(('-1866469469' IN ()))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (load_extension(0.027137993511187064, ((t0.c2) IS FALSE))) ORDER BY (- (ABS(DISTINCT t0.c0))) DESC, ((((CAST(vt0.c0 AS TEXT))AND(NULLIF(DISTINCT vt0.c0, vt0.c0))))OR(('-1866469469' IN ()))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY json_insert(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, NULL, ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))), load_extension(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY json_insert(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, NULL, ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))), load_extension(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY json_insert(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, NULL, ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))), load_extension(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY json_insert(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, NULL, ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))), load_extension(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS NUMERIC)) ORDER BY ((((0.5980718286494014)OR(NULL))) NOTNULL) ASC, CAST(((vt0.c0) ISNULL) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((0.5980718286494014)OR(NULL))) NOTNULL) ASC, CAST(((vt0.c0) ISNULL) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS NUMERIC)) ORDER BY ((((0.5980718286494014)OR(NULL))) NOTNULL) ASC, CAST(((vt0.c0) ISNULL) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((0.5980718286494014)OR(NULL))) NOTNULL) ASC, CAST(((vt0.c0) ISNULL) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS NUMERIC)) ORDER BY ((((0.5980718286494014)OR(NULL))) NOTNULL) ASC, CAST(((vt0.c0) ISNULL) AS TEXT);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (CASE WHEN ((vt0.c0)-(t0.c63)) THEN ((t0.c63) NOTNULL) ELSE ((t0.c0)=(t0.c1)) END) ORDER BY (CASE 0.5401455317703538  WHEN vt0.c0 THEN t0.c2 END IN ()) ASC, 0.7232658417976504 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)-(t0.c63)) THEN ((t0.c63) NOTNULL) ELSE ((t0.c0)=(t0.c1)) END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (CASE 0.5401455317703538  WHEN vt0.c0 THEN t0.c2 END IN ()) ASC, 0.7232658417976504 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (CASE WHEN ((vt0.c0)-(t0.c63)) THEN ((t0.c63) NOTNULL) ELSE ((t0.c0)=(t0.c1)) END) ORDER BY (CASE 0.5401455317703538  WHEN vt0.c0 THEN t0.c2 END IN ()) ASC, 0.7232658417976504 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)-(t0.c63)) THEN ((t0.c63) NOTNULL) ELSE ((t0.c0)=(t0.c1)) END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (CASE 0.5401455317703538  WHEN vt0.c0 THEN t0.c2 END IN ()) ASC, 0.7232658417976504 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (CASE WHEN ((vt0.c0)-(t0.c63)) THEN ((t0.c63) NOTNULL) ELSE ((t0.c0)=(t0.c1)) END) ORDER BY (CASE 0.5401455317703538  WHEN vt0.c0 THEN t0.c2 END IN ()) ASC, 0.7232658417976504 ASC  NULLS LAST;
SELECT * FROM vt0, t0 LEFT OUTER JOIN vt1 ON CASE WHEN CAST(t0.c63 AS TEXT) THEN ((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c1)) ELSE CASE vt1.c0  WHEN t0.c1 THEN vt1.c0 WHEN t0.c63 THEN t0.c2 WHEN t0.c63 THEN vt0.c0 END END WHERE (t0.c1) ORDER BY ((((((((((((((t0.c1)AND(vt1.c0)))OR(t0.c63)))AND(t0.c2)))AND(t0.c0)))AND(vt1.c0)))OR(t0.c2)))<>(((vt1.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON CASE WHEN CAST(t0.c63 AS TEXT) THEN ((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c1)) ELSE CASE vt1.c0  WHEN t0.c1 THEN vt1.c0 WHEN t0.c63 THEN t0.c2 WHEN t0.c63 THEN vt0.c0 END END ORDER BY ((((((((((((((t0.c1)AND(vt1.c0)))OR(t0.c63)))AND(t0.c2)))AND(t0.c0)))AND(vt1.c0)))OR(t0.c2)))<>(((vt1.c0) IS TRUE))) ASC);
SELECT * FROM vt0, t0 LEFT OUTER JOIN vt1 ON CASE WHEN CAST(t0.c63 AS TEXT) THEN ((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c1)) ELSE CASE vt1.c0  WHEN t0.c1 THEN vt1.c0 WHEN t0.c63 THEN t0.c2 WHEN t0.c63 THEN vt0.c0 END END WHERE (t0.c1) ORDER BY ((((((((((((((t0.c1)AND(vt1.c0)))OR(t0.c63)))AND(t0.c2)))AND(t0.c0)))AND(vt1.c0)))OR(t0.c2)))<>(((vt1.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON CASE WHEN CAST(t0.c63 AS TEXT) THEN ((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c1)) ELSE CASE vt1.c0  WHEN t0.c1 THEN vt1.c0 WHEN t0.c63 THEN t0.c2 WHEN t0.c63 THEN vt0.c0 END END ORDER BY ((((((((((((((t0.c1)AND(vt1.c0)))OR(t0.c63)))AND(t0.c2)))AND(t0.c0)))AND(vt1.c0)))OR(t0.c2)))<>(((vt1.c0) IS TRUE))) ASC);
SELECT * FROM vt0, t0 LEFT OUTER JOIN vt1 ON CASE WHEN CAST(t0.c63 AS TEXT) THEN ((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c1)) ELSE CASE vt1.c0  WHEN t0.c1 THEN vt1.c0 WHEN t0.c63 THEN t0.c2 WHEN t0.c63 THEN vt0.c0 END END WHERE (t0.c1) ORDER BY ((((((((((((((t0.c1)AND(vt1.c0)))OR(t0.c63)))AND(t0.c2)))AND(t0.c0)))AND(vt1.c0)))OR(t0.c2)))<>(((vt1.c0) IS TRUE))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c63)>(t0.c63)))+(((NULL)+(t0.c63)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c63)>(t0.c63)))+(((NULL)+(t0.c63))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c63)>(t0.c63)))+(((NULL)+(t0.c63)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c63)>(t0.c63)))+(((NULL)+(t0.c63))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c63)>(t0.c63)))+(((NULL)+(t0.c63)))));
SELECT ALL * FROM vt0 INDEXED BY i62, t0, vt1 WHERE (CASE CASE WHEN t0.c63 THEN '0.35315736088268557' WHEN t0.c2 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END  WHEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)) THEN (~ (t0.c63)) WHEN ((t0.c2) BETWEEN (vt0.c0) AND (t0.c63)) THEN CAST(t0.c63 AS TEXT) WHEN ((t0.c2)>=(t0.c2)) THEN vt1.c0 END) ORDER BY ((NULLIF(t0.c2, vt1.c0)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN t0.c63 THEN '0.35315736088268557' WHEN t0.c2 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END  WHEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)) THEN (~ (t0.c63)) WHEN ((t0.c2) BETWEEN (vt0.c0) AND (t0.c63)) THEN CAST(t0.c63 AS TEXT) WHEN ((t0.c2)>=(t0.c2)) THEN vt1.c0 END) IS TRUE)  as count FROM vt0 INDEXED BY i62, t0, vt1 ORDER BY ((NULLIF(t0.c2, vt1.c0)) NOTNULL) DESC);
SELECT ALL * FROM vt0 INDEXED BY i62, t0, vt1 WHERE (CASE CASE WHEN t0.c63 THEN '0.35315736088268557' WHEN t0.c2 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END  WHEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)) THEN (~ (t0.c63)) WHEN ((t0.c2) BETWEEN (vt0.c0) AND (t0.c63)) THEN CAST(t0.c63 AS TEXT) WHEN ((t0.c2)>=(t0.c2)) THEN vt1.c0 END) ORDER BY ((NULLIF(t0.c2, vt1.c0)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN t0.c63 THEN '0.35315736088268557' WHEN t0.c2 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END  WHEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)) THEN (~ (t0.c63)) WHEN ((t0.c2) BETWEEN (vt0.c0) AND (t0.c63)) THEN CAST(t0.c63 AS TEXT) WHEN ((t0.c2)>=(t0.c2)) THEN vt1.c0 END) IS TRUE)  as count FROM vt0 INDEXED BY i62, t0, vt1 ORDER BY ((NULLIF(t0.c2, vt1.c0)) NOTNULL) DESC);
SELECT COUNT(*) FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c2);
SELECT ALL COUNT(*) FROM vt0 WHERE (((-1929136347) ISNULL)) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))IS(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST, ((vt0.c0) NOTNULL) COLLATE BINARY ASC, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-1929136347) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))IS(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST, ((vt0.c0) NOTNULL) COLLATE BINARY ASC, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((-1929136347) ISNULL)) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))IS(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST, ((vt0.c0) NOTNULL) COLLATE BINARY ASC, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-1929136347) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))IS(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST, ((vt0.c0) NOTNULL) COLLATE BINARY ASC, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((-1929136347) ISNULL)) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))IS(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST, ((vt0.c0) NOTNULL) COLLATE BINARY ASC, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (t0.c63) ORDER BY (((LIKELIHOOD(t0.c0, 0.14284582678003654), '-313738420', 'N~i'))>=((CAST(t0.c63 AS TEXT), (t0.c1 IN (t0.c63)), ((t0.c2)%(0.2105007357796066))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0 ORDER BY (((LIKELIHOOD(t0.c0, 0.14284582678003654), '-313738420', 'N~i'))>=((CAST(t0.c63 AS TEXT), (t0.c1 IN (t0.c63)), ((t0.c2)%(0.2105007357796066))))) ASC);
SELECT * FROM t0 WHERE (t0.c63) ORDER BY (((LIKELIHOOD(t0.c0, 0.14284582678003654), '-313738420', 'N~i'))>=((CAST(t0.c63 AS TEXT), (t0.c1 IN (t0.c63)), ((t0.c2)%(0.2105007357796066))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0 ORDER BY (((LIKELIHOOD(t0.c0, 0.14284582678003654), '-313738420', 'N~i'))>=((CAST(t0.c63 AS TEXT), (t0.c1 IN (t0.c63)), ((t0.c2)%(0.2105007357796066))))) ASC);
SELECT * FROM t0 WHERE (t0.c63) ORDER BY (((LIKELIHOOD(t0.c0, 0.14284582678003654), '-313738420', 'N~i'))>=((CAST(t0.c63 AS TEXT), (t0.c1 IN (t0.c63)), ((t0.c2)%(0.2105007357796066))))) ASC;
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((x'31bd') NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((x'31bd') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((x'31bd') NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((x'31bd') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((x'31bd') NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS BLOB));
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON (t0.c0 IN ()) COLLATE NOCASE COLLATE BINARY WHERE ((((((vt1.c0)) NOT BETWEEN ((0.21342488681025718)) AND ((t0.c63)))) NOT NULL)) ORDER BY (((LIKELY(DISTINCT t0.c1)))>=((LIKELY(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((0.21342488681025718)) AND ((t0.c63)))) NOT NULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (t0.c0 IN ()) COLLATE NOCASE COLLATE BINARY ORDER BY (((LIKELY(DISTINCT t0.c1)))>=((LIKELY(t0.c0)))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON (t0.c0 IN ()) COLLATE NOCASE COLLATE BINARY WHERE ((((((vt1.c0)) NOT BETWEEN ((0.21342488681025718)) AND ((t0.c63)))) NOT NULL)) ORDER BY (((LIKELY(DISTINCT t0.c1)))>=((LIKELY(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((0.21342488681025718)) AND ((t0.c63)))) NOT NULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (t0.c0 IN ()) COLLATE NOCASE COLLATE BINARY ORDER BY (((LIKELY(DISTINCT t0.c1)))>=((LIKELY(t0.c0)))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON (t0.c0 IN ()) COLLATE NOCASE COLLATE BINARY WHERE ((((((vt1.c0)) NOT BETWEEN ((0.21342488681025718)) AND ((t0.c63)))) NOT NULL)) ORDER BY (((LIKELY(DISTINCT t0.c1)))>=((LIKELY(t0.c0))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (t0.c0)) COLLATE BINARY);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN ('') AND (vt1.c0)))*(((vt1.c0)&(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN ('') AND (vt1.c0)))*(((vt1.c0)&(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN ('') AND (vt1.c0)))*(((vt1.c0)&(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN ('') AND (vt1.c0)))*(((vt1.c0)&(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN ('') AND (vt1.c0)))*(((vt1.c0)&(vt1.c0)))));
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (CAST((~ (t0.c0)) AS REAL)) ORDER BY (~ ((t0.c2 IN (t0.c1, t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (~ ((t0.c2 IN (t0.c1, t0.c1))))  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (CAST((~ (t0.c0)) AS REAL)) ORDER BY (~ ((t0.c2 IN (t0.c1, t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (~ ((t0.c2 IN (t0.c1, t0.c1))))  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (CAST((~ (t0.c0)) AS REAL)) ORDER BY (~ ((t0.c2 IN (t0.c1, t0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE))=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((('0㋕Ab')AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))==(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((('0㋕Ab')AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE))=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((('0㋕Ab')AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))==(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((('0㋕Ab')AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE))=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((('0㋕Ab')AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c0))) IS TRUE)) ORDER BY t0.c63 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY t0.c63 DESC  NULLS LAST);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c0))) IS TRUE)) ORDER BY t0.c63 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY t0.c63 DESC  NULLS LAST);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c0))) IS TRUE)) ORDER BY t0.c63 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((0.43654767470674416) IS FALSE))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))))AND(vt0.c0 COLLATE RTRIM)) WHERE (CAST((- (vt1.c0)) AS BLOB)) ORDER BY CASE ('' IN ())  WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN ((vt1.c0) NOTNULL) ELSE ((vt1.c0) IS FALSE) END ASC, '0.9274599563590179' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((- (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((0.43654767470674416) IS FALSE))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))))AND(vt0.c0 COLLATE RTRIM)) ORDER BY CASE ('' IN ())  WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN ((vt1.c0) NOTNULL) ELSE ((vt1.c0) IS FALSE) END ASC, '0.9274599563590179' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((0.43654767470674416) IS FALSE))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))))AND(vt0.c0 COLLATE RTRIM)) WHERE (CAST((- (vt1.c0)) AS BLOB)) ORDER BY CASE ('' IN ())  WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN ((vt1.c0) NOTNULL) ELSE ((vt1.c0) IS FALSE) END ASC, '0.9274599563590179' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((- (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((0.43654767470674416) IS FALSE))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))))AND(vt0.c0 COLLATE RTRIM)) ORDER BY CASE ('' IN ())  WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN ((vt1.c0) NOTNULL) ELSE ((vt1.c0) IS FALSE) END ASC, '0.9274599563590179' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((0.43654767470674416) IS FALSE))AND(SQLITE_COMPILEOPTION_USED(vt1.c0))))AND(vt0.c0 COLLATE RTRIM)) WHERE (CAST((- (vt1.c0)) AS BLOB)) ORDER BY CASE ('' IN ())  WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN ((vt1.c0) NOTNULL) ELSE ((vt1.c0) IS FALSE) END ASC, '0.9274599563590179' DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)-(vt0.c0)), (((vt0.c0)) BETWEEN ((0xffffffff9c751378)) AND ((vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<>((TRIM(x'cfd6', vt0.c0), (('1498466178')GLOB(vt0.c0)), CAST(vt0.c0 AS TEXT))))) ORDER BY (QUOTE(x'') IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)-(vt0.c0)), (((vt0.c0)) BETWEEN ((0Xffffffff9c751378)) AND ((vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))!=((TRIM(x'cfd6', vt0.c0), (('1498466178')GLOB(vt0.c0)), CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0 ORDER BY (QUOTE(x'') IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)-(vt0.c0)), (((vt0.c0)) BETWEEN ((0xffffffff9c751378)) AND ((vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<>((TRIM(x'cfd6', vt0.c0), (('1498466178')GLOB(vt0.c0)), CAST(vt0.c0 AS TEXT))))) ORDER BY (QUOTE(x'') IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)-(vt0.c0)), (((vt0.c0)) BETWEEN ((0Xffffffff9c751378)) AND ((vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))!=((TRIM(x'cfd6', vt0.c0), (('1498466178')GLOB(vt0.c0)), CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0 ORDER BY (QUOTE(x'') IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)-(vt0.c0)), (((vt0.c0)) BETWEEN ((0xffffffff9c751378)) AND ((vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<>((TRIM(x'cfd6', vt0.c0), (('1498466178')GLOB(vt0.c0)), CAST(vt0.c0 AS TEXT))))) ORDER BY (QUOTE(x'') IN ()) DESC  NULLS FIRST;
SELECT * FROM vt1, vt0, t0 WHERE (t0.c0) ORDER BY CAST(t0.c63 AS REAL) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CAST(t0.c63 AS REAL) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt1, vt0, t0 WHERE (t0.c0) ORDER BY CAST(t0.c63 AS REAL) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CAST(t0.c63 AS REAL) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt1, vt0, t0 WHERE (t0.c0) ORDER BY CAST(t0.c63 AS REAL) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY) NOT NULL) WHERE ((~ (t0.c2 COLLATE NOCASE))) ORDER BY CAST((NOT (t0.c1)) AS TEXT), 0xffffffffa3c632d5 DESC;
SELECT SUM(count) FROM (SELECT (((~ (t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY) NOT NULL) ORDER BY CAST((NOT (t0.c1)) AS TEXT), 0xffffffffa3c632d5 DESC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY) NOT NULL) WHERE ((~ (t0.c2 COLLATE NOCASE))) ORDER BY CAST((NOT (t0.c1)) AS TEXT), 0xffffffffa3c632d5 DESC;
SELECT SUM(count) FROM (SELECT (((~ (t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY) NOT NULL) ORDER BY CAST((NOT (t0.c1)) AS TEXT), 0xffffffffa3c632d5 DESC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY) NOT NULL) WHERE ((~ (t0.c2 COLLATE NOCASE))) ORDER BY CAST((NOT (t0.c1)) AS TEXT), 0xffffffffa3c632d5 DESC;
SELECT ALL * FROM vt1, vt0 CROSS JOIN t0 ON (((t0.c0 IN (t0.c2))) IS FALSE) WHERE ((((NOT (t0.c1)))GLOB(((t0.c1)|(t0.c63))))) ORDER BY 0Xffffffffe605e3ae DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c1)))GLOB(((t0.c1)|(t0.c63))))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON (((t0.c0 IN (t0.c2))) IS FALSE) ORDER BY 0Xffffffffe605e3ae DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 CROSS JOIN t0 ON (((t0.c0 IN (t0.c2))) IS FALSE) WHERE ((((NOT (t0.c1)))GLOB(((t0.c1)|(t0.c63))))) ORDER BY 0Xffffffffe605e3ae DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c1)))GLOB(((t0.c1)|(t0.c63))))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON (((t0.c0 IN (t0.c2))) IS FALSE) ORDER BY 0Xffffffffe605e3ae DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 CROSS JOIN t0 ON (((t0.c0 IN (t0.c2))) IS FALSE) WHERE ((((NOT (t0.c1)))GLOB(((t0.c1)|(t0.c63))))) ORDER BY 0Xffffffffe605e3ae DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((t0.c1) IS TRUE)) NOTNULL)) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)>>(vt1.c0)) ELSE ((((((((t0.c1)AND(t0.c63)))OR(t0.c1)))OR(t0.c63)))OR(vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)>>(vt1.c0)) ELSE ((((((((t0.c1)AND(t0.c63)))OR(t0.c1)))OR(t0.c63)))OR(vt0.c0)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((t0.c1) IS TRUE)) NOTNULL)) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)>>(vt1.c0)) ELSE ((((((((t0.c1)AND(t0.c63)))OR(t0.c1)))OR(t0.c63)))OR(vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)>>(vt1.c0)) ELSE ((((((((t0.c1)AND(t0.c63)))OR(t0.c1)))OR(t0.c63)))OR(vt0.c0)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((t0.c1) IS TRUE)) NOTNULL)) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)>>(vt1.c0)) ELSE ((((((((t0.c1)AND(t0.c63)))OR(t0.c1)))OR(t0.c63)))OR(vt0.c0)) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON TYPEOF(((t0.c1)>=('817099627'))) CROSS JOIN vt0 ON t0.c0 WHERE ((((((t0.c1)) NOT BETWEEN ((t0.c63)) AND ((t0.c1)))) BETWEEN (t0.c63) AND (CASE WHEN vt1.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c63 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN vt1.c0 WHEN t0.c2 THEN t0.c2 WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END))) ORDER BY ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1)) NOT BETWEEN ((t0.c63)) AND ((t0.c1)))) BETWEEN (t0.c63) AND (CASE WHEN vt1.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c63 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN vt1.c0 WHEN t0.c2 THEN t0.c2 WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON TYPEOF(((t0.c1)>=('817099627'))) CROSS JOIN vt0 ON t0.c0 ORDER BY ''  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON TYPEOF(((t0.c1)>=('817099627'))) CROSS JOIN vt0 ON t0.c0 WHERE ((((((t0.c1)) NOT BETWEEN ((t0.c63)) AND ((t0.c1)))) BETWEEN (t0.c63) AND (CASE WHEN vt1.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c63 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN vt1.c0 WHEN t0.c2 THEN t0.c2 WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END))) ORDER BY ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1)) NOT BETWEEN ((t0.c63)) AND ((t0.c1)))) BETWEEN (t0.c63) AND (CASE WHEN vt1.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c63 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN vt1.c0 WHEN t0.c2 THEN t0.c2 WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON TYPEOF(((t0.c1)>=('817099627'))) CROSS JOIN vt0 ON t0.c0 ORDER BY ''  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON TYPEOF(((t0.c1)>=('817099627'))) CROSS JOIN vt0 ON t0.c0 WHERE ((((((t0.c1)) NOT BETWEEN ((t0.c63)) AND ((t0.c1)))) BETWEEN (t0.c63) AND (CASE WHEN vt1.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c63 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN vt1.c0 WHEN t0.c2 THEN t0.c2 WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END))) ORDER BY ''  NULLS FIRST;
SELECT * FROM t0, vt0, vt1 WHERE ('' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE ('' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE ('' COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((- (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((- (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((- (vt1.c0)) COLLATE BINARY);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) ORDER BY (((vt1.c0 COLLATE RTRIM, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))), ((vt0.c0) IS FALSE), ((vt1.c0)|(vt0.c0))))>((vt1.c0, ((vt0.c0)-(vt1.c0)), 0.7664700847570635 COLLATE BINARY, (((NULL, vt0.c0, vt1.c0))<=((vt0.c0, vt0.c0, vt0.c0))), -669341180))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0 COLLATE RTRIM, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))), ((vt0.c0) IS FALSE), ((vt1.c0)|(vt0.c0))))>((vt1.c0, ((vt0.c0)-(vt1.c0)), 0.7664700847570635 COLLATE BINARY, (((NULL, vt0.c0, vt1.c0))<=((vt0.c0, vt0.c0, vt0.c0))), -669341180))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) ORDER BY (((vt1.c0 COLLATE RTRIM, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))), ((vt0.c0) IS FALSE), ((vt1.c0)|(vt0.c0))))>((vt1.c0, ((vt0.c0)-(vt1.c0)), 0.7664700847570635 COLLATE BINARY, (((NULL, vt0.c0, vt1.c0))<=((vt0.c0, vt0.c0, vt0.c0))), -669341180))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0 COLLATE RTRIM, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))), ((vt0.c0) IS FALSE), ((vt1.c0)|(vt0.c0))))>((vt1.c0, ((vt0.c0)-(vt1.c0)), 0.7664700847570635 COLLATE BINARY, (((NULL, vt0.c0, vt1.c0))<=((vt0.c0, vt0.c0, vt0.c0))), -669341180))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) ORDER BY (((vt1.c0 COLLATE RTRIM, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))), ((vt0.c0) IS FALSE), ((vt1.c0)|(vt0.c0))))>((vt1.c0, ((vt0.c0)-(vt1.c0)), 0.7664700847570635 COLLATE BINARY, (((NULL, vt0.c0, vt1.c0))<=((vt0.c0, vt0.c0, vt0.c0))), -669341180))) ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((CHAR(vt1.c0)))<((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((CHAR(vt1.c0)))<((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((CHAR(vt1.c0)))<((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((CHAR(vt1.c0)))<((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((CHAR(vt1.c0)))<((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))));
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((t0.c2)) NOT BETWEEN (((- (t0.c63)))) AND ((vt1.c0)))) ORDER BY CAST(((t0.c63) IS TRUE) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c2)) NOT BETWEEN (((- (t0.c63)))) AND ((vt1.c0)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST(((t0.c63) IS TRUE) AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((t0.c2)) NOT BETWEEN (((- (t0.c63)))) AND ((vt1.c0)))) ORDER BY CAST(((t0.c63) IS TRUE) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c2)) NOT BETWEEN (((- (t0.c63)))) AND ((vt1.c0)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST(((t0.c63) IS TRUE) AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((t0.c2)) NOT BETWEEN (((- (t0.c63)))) AND ((vt1.c0)))) ORDER BY CAST(((t0.c63) IS TRUE) AS REAL) DESC  NULLS LAST;
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((vt1.c0, t0.c0, t0.c63)) BETWEEN ((((t0.c63) BETWEEN (vt1.c0) AND (t0.c0)), CASE WHEN vt1.c0 THEN t0.c1 END, t0.c1 COLLATE BINARY)) AND (((t0.c2 IN (t0.c2, t0.c2)), CASE vt0.c0  WHEN t0.c2 THEN t0.c63 END, vt1.c0)))) ORDER BY vt0.c0 ASC  NULLS LAST, (((vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(t0.c2)))OR(vt0.c0)))) AND ((t0.c0)));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, t0.c0, t0.c63)) BETWEEN ((((t0.c63) BETWEEN (vt1.c0) AND (t0.c0)), CASE WHEN vt1.c0 THEN t0.c1 END, t0.c1 COLLATE BINARY)) AND (((t0.c2 IN (t0.c2, t0.c2)), CASE vt0.c0  WHEN t0.c2 THEN t0.c63 END, vt1.c0)))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY vt0.c0 ASC  NULLS LAST, (((vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(t0.c2)))OR(vt0.c0)))) AND ((t0.c0))));
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((vt1.c0, t0.c0, t0.c63)) BETWEEN ((((t0.c63) BETWEEN (vt1.c0) AND (t0.c0)), CASE WHEN vt1.c0 THEN t0.c1 END, t0.c1 COLLATE BINARY)) AND (((t0.c2 IN (t0.c2, t0.c2)), CASE vt0.c0  WHEN t0.c2 THEN t0.c63 END, vt1.c0)))) ORDER BY vt0.c0 ASC  NULLS LAST, (((vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(t0.c2)))OR(vt0.c0)))) AND ((t0.c0)));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, t0.c0, t0.c63)) BETWEEN ((((t0.c63) BETWEEN (vt1.c0) AND (t0.c0)), CASE WHEN vt1.c0 THEN t0.c1 END, t0.c1 COLLATE BINARY)) AND (((t0.c2 IN (t0.c2, t0.c2)), CASE vt0.c0  WHEN t0.c2 THEN t0.c63 END, vt1.c0)))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY vt0.c0 ASC  NULLS LAST, (((vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(t0.c2)))OR(vt0.c0)))) AND ((t0.c0))));
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((vt1.c0, t0.c0, t0.c63)) BETWEEN ((((t0.c63) BETWEEN (vt1.c0) AND (t0.c0)), CASE WHEN vt1.c0 THEN t0.c1 END, t0.c1 COLLATE BINARY)) AND (((t0.c2 IN (t0.c2, t0.c2)), CASE vt0.c0  WHEN t0.c2 THEN t0.c63 END, vt1.c0)))) ORDER BY vt0.c0 ASC  NULLS LAST, (((vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(t0.c2)))OR(vt0.c0)))) AND ((t0.c0)));
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0)%(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0)%(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0)%(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0)%(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0)%(vt1.c0)) END);
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON ((((vt1.c0 COLLATE BINARY)AND(-1.311416603E9)))AND(UPPER(t0.c2))) WHERE (0Xffffffffc0508529) ORDER BY ((('-264947823' IN ()))&((t0.c0 IN ()))) DESC, ((t0.c1 IN ()) IN ()), CAST(CASE t0.c2  WHEN t0.c63 THEN vt1.c0 WHEN t0.c0 THEN t0.c63 WHEN vt1.c0 THEN t0.c63 END AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffc0508529) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((vt1.c0 COLLATE BINARY)AND(-1.311416603E9)))AND(UPPER(t0.c2))) ORDER BY ((('-264947823' IN ()))&((t0.c0 IN ()))) DESC, ((t0.c1 IN ()) IN ()), CAST(CASE t0.c2  WHEN t0.c63 THEN vt1.c0 WHEN t0.c0 THEN t0.c63 WHEN vt1.c0 THEN t0.c63 END AS TEXT));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON ((((vt1.c0 COLLATE BINARY)AND(-1.311416603E9)))AND(UPPER(t0.c2))) WHERE (0Xffffffffc0508529) ORDER BY ((('-264947823' IN ()))&((t0.c0 IN ()))) DESC, ((t0.c1 IN ()) IN ()), CAST(CASE t0.c2  WHEN t0.c63 THEN vt1.c0 WHEN t0.c0 THEN t0.c63 WHEN vt1.c0 THEN t0.c63 END AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffc0508529) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((vt1.c0 COLLATE BINARY)AND(-1.311416603E9)))AND(UPPER(t0.c2))) ORDER BY ((('-264947823' IN ()))&((t0.c0 IN ()))) DESC, ((t0.c1 IN ()) IN ()), CAST(CASE t0.c2  WHEN t0.c63 THEN vt1.c0 WHEN t0.c0 THEN t0.c63 WHEN vt1.c0 THEN t0.c63 END AS TEXT));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON ((((vt1.c0 COLLATE BINARY)AND(-1.311416603E9)))AND(UPPER(t0.c2))) WHERE (0Xffffffffc0508529) ORDER BY ((('-264947823' IN ()))&((t0.c0 IN ()))) DESC, ((t0.c1 IN ()) IN ()), CAST(CASE t0.c2  WHEN t0.c63 THEN vt1.c0 WHEN t0.c0 THEN t0.c63 WHEN vt1.c0 THEN t0.c63 END AS TEXT);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ ((t0.c63 IN ())))) ORDER BY ((CAST(t0.c0 AS REAL)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((t0.c63 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS REAL)) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ ((t0.c63 IN ())))) ORDER BY ((CAST(t0.c0 AS REAL)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((t0.c63 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS REAL)) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ ((t0.c63 IN ())))) ORDER BY ((CAST(t0.c0 AS REAL)) NOT NULL)  NULLS FIRST;
SELECT * FROM vt1 WHERE (x'5f19') ORDER BY ((vt1.c0) IS TRUE) COLLATE RTRIM COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'5f19') IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) IS TRUE) COLLATE RTRIM COLLATE BINARY ASC);
SELECT * FROM vt1 WHERE (x'5f19') ORDER BY ((vt1.c0) IS TRUE) COLLATE RTRIM COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'5f19') IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) IS TRUE) COLLATE RTRIM COLLATE BINARY ASC);
SELECT * FROM vt1 WHERE (x'5f19') ORDER BY ((vt1.c0) IS TRUE) COLLATE RTRIM COLLATE BINARY ASC;
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CAST('C&*X' AS BLOB) WHERE (((((t0.c2)>=(vt0.c0)))|(RTRIM(t0.c2)))) ORDER BY CASE ((t0.c2) BETWEEN (t0.c63) AND ('-2042281096'))  WHEN ((vt0.c0)LIKE(t0.c2)) THEN (((vt0.c0)) NOT BETWEEN ((x'')) AND ((x'2c33'))) WHEN IFNULL(DISTINCT t0.c1, t0.c1) THEN t0.c0 COLLATE RTRIM WHEN t0.c63 THEN UPPER(t0.c1) ELSE '' END ASC, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)>=(vt0.c0)))|(RTRIM(t0.c2)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CAST('C&*X' AS BLOB) ORDER BY CASE ((t0.c2) BETWEEN (t0.c63) AND ('-2042281096'))  WHEN ((vt0.c0)LIKE(t0.c2)) THEN (((vt0.c0)) NOT BETWEEN ((x'')) AND ((x'2c33'))) WHEN IFNULL(DISTINCT t0.c1, t0.c1) THEN t0.c0 COLLATE RTRIM WHEN t0.c63 THEN UPPER(t0.c1) ELSE '' END ASC, vt0.c0);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CAST('C&*X' AS BLOB) WHERE (((((t0.c2)>=(vt0.c0)))|(RTRIM(t0.c2)))) ORDER BY CASE ((t0.c2) BETWEEN (t0.c63) AND ('-2042281096'))  WHEN ((vt0.c0)LIKE(t0.c2)) THEN (((vt0.c0)) NOT BETWEEN ((x'')) AND ((x'2c33'))) WHEN IFNULL(DISTINCT t0.c1, t0.c1) THEN t0.c0 COLLATE RTRIM WHEN t0.c63 THEN UPPER(t0.c1) ELSE '' END ASC, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)>=(vt0.c0)))|(RTRIM(t0.c2)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CAST('C&*X' AS BLOB) ORDER BY CASE ((t0.c2) BETWEEN (t0.c63) AND ('-2042281096'))  WHEN ((vt0.c0)LIKE(t0.c2)) THEN (((vt0.c0)) NOT BETWEEN ((x'')) AND ((x'2c33'))) WHEN IFNULL(DISTINCT t0.c1, t0.c1) THEN t0.c0 COLLATE RTRIM WHEN t0.c63 THEN UPPER(t0.c1) ELSE '' END ASC, vt0.c0);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CAST('C&*X' AS BLOB) WHERE (((((t0.c2)>=(vt0.c0)))|(RTRIM(t0.c2)))) ORDER BY CASE ((t0.c2) BETWEEN (t0.c63) AND ('-2042281096'))  WHEN ((vt0.c0)LIKE(t0.c2)) THEN (((vt0.c0)) NOT BETWEEN ((x'')) AND ((x'2c33'))) WHEN IFNULL(DISTINCT t0.c1, t0.c1) THEN t0.c0 COLLATE RTRIM WHEN t0.c63 THEN UPPER(t0.c1) ELSE '' END ASC, vt0.c0;
SELECT * FROM t0, vt1, vt0 WHERE ((t0.c63 IN (((t0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c63 IN (((t0.c1) NOT NULL)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE ((t0.c63 IN (((t0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c63 IN (((t0.c1) NOT NULL)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE ((t0.c63 IN (((t0.c1) NOT NULL))));
SELECT ALL * FROM vt0 WHERE (CAST(HEX(vt0.c0) AS REAL)) ORDER BY (+ (CAST(vt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(vt0.c0) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c0 AS INTEGER))) DESC);
SELECT ALL * FROM vt0 WHERE (CAST(HEX(vt0.c0) AS REAL)) ORDER BY (+ (CAST(vt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(vt0.c0) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c0 AS INTEGER))) DESC);
SELECT ALL * FROM vt0 WHERE (CAST(HEX(vt0.c0) AS REAL)) ORDER BY (+ (CAST(vt0.c0 AS INTEGER))) DESC;
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))>=(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))>=(t0.c2))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))>=(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))>=(t0.c2))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))>=(t0.c2)));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (json_insert(CAST(vt0.c0 AS INTEGER), ((vt1.c0) BETWEEN (t0.c63) AND (t0.c2)), ((vt0.c0) BETWEEN (t0.c1) AND (t0.c1)))) ORDER BY CHAR(((t0.c2)=(t0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(CAST(vt0.c0 AS INTEGER), ((vt1.c0) BETWEEN (t0.c63) AND (t0.c2)), ((vt0.c0) BETWEEN (t0.c1) AND (t0.c1)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CHAR(((t0.c2)=(t0.c2)))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (json_insert(CAST(vt0.c0 AS INTEGER), ((vt1.c0) BETWEEN (t0.c63) AND (t0.c2)), ((vt0.c0) BETWEEN (t0.c1) AND (t0.c1)))) ORDER BY CHAR(((t0.c2)=(t0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(CAST(vt0.c0 AS INTEGER), ((vt1.c0) BETWEEN (t0.c63) AND (t0.c2)), ((vt0.c0) BETWEEN (t0.c1) AND (t0.c1)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CHAR(((t0.c2)=(t0.c2)))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (json_insert(CAST(vt0.c0 AS INTEGER), ((vt1.c0) BETWEEN (t0.c63) AND (t0.c2)), ((vt0.c0) BETWEEN (t0.c1) AND (t0.c1)))) ORDER BY CHAR(((t0.c2)=(t0.c2)))  NULLS LAST;
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((((((((vt0.c0)OR(t0.c0)))AND(vt1.c0)))OR('-543866527')))OR(vt0.c0)) IN (t0.c63 COLLATE RTRIM))) ORDER BY (((t0.c1 IN ())) BETWEEN (CASE WHEN t0.c1 THEN '1294505148' WHEN vt1.c0 THEN 0xfffffffff0353791 WHEN t0.c1 THEN vt1.c0 WHEN vt0.c0 THEN t0.c63 WHEN vt1.c0 THEN t0.c63 ELSE t0.c1 END) AND (vt0.c0)) ASC, (NOT (((t0.c0)||(t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)OR(t0.c0)))AND(vt1.c0)))OR('-543866527')))OR(vt0.c0)) IN (t0.c63 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((t0.c1 IN ())) BETWEEN (CASE WHEN t0.c1 THEN '1294505148' WHEN vt1.c0 THEN 0xfffffffff0353791 WHEN t0.c1 THEN vt1.c0 WHEN vt0.c0 THEN t0.c63 WHEN vt1.c0 THEN t0.c63 ELSE t0.c1 END) AND (vt0.c0)) ASC, (NOT (((t0.c0)||(t0.c1))))  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((((((((vt0.c0)OR(t0.c0)))AND(vt1.c0)))OR('-543866527')))OR(vt0.c0)) IN (t0.c63 COLLATE RTRIM))) ORDER BY (((t0.c1 IN ())) BETWEEN (CASE WHEN t0.c1 THEN '1294505148' WHEN vt1.c0 THEN 0xfffffffff0353791 WHEN t0.c1 THEN vt1.c0 WHEN vt0.c0 THEN t0.c63 WHEN vt1.c0 THEN t0.c63 ELSE t0.c1 END) AND (vt0.c0)) ASC, (NOT (((t0.c0)||(t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)OR(t0.c0)))AND(vt1.c0)))OR('-543866527')))OR(vt0.c0)) IN (t0.c63 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((t0.c1 IN ())) BETWEEN (CASE WHEN t0.c1 THEN '1294505148' WHEN vt1.c0 THEN 0xfffffffff0353791 WHEN t0.c1 THEN vt1.c0 WHEN vt0.c0 THEN t0.c63 WHEN vt1.c0 THEN t0.c63 ELSE t0.c1 END) AND (vt0.c0)) ASC, (NOT (((t0.c0)||(t0.c1))))  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((((((((vt0.c0)OR(t0.c0)))AND(vt1.c0)))OR('-543866527')))OR(vt0.c0)) IN (t0.c63 COLLATE RTRIM))) ORDER BY (((t0.c1 IN ())) BETWEEN (CASE WHEN t0.c1 THEN '1294505148' WHEN vt1.c0 THEN 0xfffffffff0353791 WHEN t0.c1 THEN vt1.c0 WHEN vt0.c0 THEN t0.c63 WHEN vt1.c0 THEN t0.c63 ELSE t0.c1 END) AND (vt0.c0)) ASC, (NOT (((t0.c0)||(t0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((~ (0xca064d5))) ORDER BY CASE ((t0.c63) NOT NULL)  WHEN (+ (vt1.c0)) THEN (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c63, t0.c1, vt1.c0)) AND ((t0.c63, t0.c63, t0.c0))) ELSE (+ (t0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL (((~ (0xca064d5))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CASE ((t0.c63) NOT NULL)  WHEN (+ (vt1.c0)) THEN (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c63, t0.c1, vt1.c0)) AND ((t0.c63, t0.c63, t0.c0))) ELSE (+ (t0.c1)) END);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((~ (0xca064d5))) ORDER BY CASE ((t0.c63) NOT NULL)  WHEN (+ (vt1.c0)) THEN (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c63, t0.c1, vt1.c0)) AND ((t0.c63, t0.c63, t0.c0))) ELSE (+ (t0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL (((~ (0xca064d5))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CASE ((t0.c63) NOT NULL)  WHEN (+ (vt1.c0)) THEN (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c63, t0.c1, vt1.c0)) AND ((t0.c63, t0.c63, t0.c0))) ELSE (+ (t0.c1)) END);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((~ (0xca064d5))) ORDER BY CASE ((t0.c63) NOT NULL)  WHEN (+ (vt1.c0)) THEN (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c63, t0.c1, vt1.c0)) AND ((t0.c63, t0.c63, t0.c0))) ELSE (+ (t0.c1)) END;
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((vt0.c0)<(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((vt0.c0)<(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((vt0.c0)<(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 WHERE (PRINTF((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))))) ORDER BY CASE WHEN ((vt1.c0) NOTNULL) THEN CAST(vt1.c0 AS BLOB) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0) NOTNULL) THEN CAST(vt1.c0 AS BLOB) END ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (PRINTF((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))))) ORDER BY CASE WHEN ((vt1.c0) NOTNULL) THEN CAST(vt1.c0 AS BLOB) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0) NOTNULL) THEN CAST(vt1.c0 AS BLOB) END ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (PRINTF((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))))) ORDER BY CASE WHEN ((vt1.c0) NOTNULL) THEN CAST(vt1.c0 AS BLOB) END ASC;
SELECT * FROM vt1, vt0 WHERE (LOWER(((vt0.c0)<<(vt1.c0)))) ORDER BY (((+ (vt0.c0)))>=(NULL));
SELECT SUM(count) FROM (SELECT ((LOWER(((vt0.c0)<<(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((+ (vt0.c0)))>=(NULL)));
SELECT * FROM vt1, vt0 WHERE (LOWER(((vt0.c0)<<(vt1.c0)))) ORDER BY (((+ (vt0.c0)))>=(NULL));
SELECT SUM(count) FROM (SELECT ((LOWER(((vt0.c0)<<(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((+ (vt0.c0)))>=(NULL)));
SELECT * FROM vt1, vt0 WHERE (LOWER(((vt0.c0)<<(vt1.c0)))) ORDER BY (((+ (vt0.c0)))>=(NULL));
SELECT ALL * FROM t0, vt0 WHERE (((t0.c63)<(((t0.c2)/(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c63)<(((t0.c2)/(t0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((t0.c63)<(((t0.c2)/(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c63)<(((t0.c2)/(t0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((t0.c63)<(((t0.c2)/(t0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(load_extension(vt0.c0, vt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(load_extension(vt0.c0, vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(load_extension(vt0.c0, vt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(load_extension(vt0.c0, vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(load_extension(vt0.c0, vt0.c0) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY UNICODE(vt0.c0) COLLATE BINARY  NULLS LAST, (NOT ((vt0.c0 IN ()))) DESC, (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY UNICODE(vt0.c0) COLLATE BINARY  NULLS LAST, (NOT ((vt0.c0 IN ()))) DESC, (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY UNICODE(vt0.c0) COLLATE BINARY  NULLS LAST, (NOT ((vt0.c0 IN ()))) DESC, (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY UNICODE(vt0.c0) COLLATE BINARY  NULLS LAST, (NOT ((vt0.c0 IN ()))) DESC, (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY UNICODE(vt0.c0) COLLATE BINARY  NULLS LAST, (NOT ((vt0.c0 IN ()))) DESC, (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) DESC;
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE ((((t0.c0, '', t0.c63)) BETWEEN ((((t0.c0) NOT BETWEEN (t0.c63) AND (t0.c63)), ((t0.c2)>>(t0.c2)), CAST(vt0.c0 AS REAL))) AND ((STRFTIME(vt0.c0, t0.c2, t0.c2), CASE t0.c2  WHEN t0.c1 THEN t0.c1 WHEN t0.c63 THEN t0.c0 WHEN t0.c1 THEN t0.c63 ELSE t0.c0 END, CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, '', t0.c63)) BETWEEN ((((t0.c0) NOT BETWEEN (t0.c63) AND (t0.c63)), ((t0.c2)>>(t0.c2)), CAST(vt0.c0 AS REAL))) AND ((STRFTIME(vt0.c0, t0.c2, t0.c2), CASE t0.c2  WHEN t0.c1 THEN t0.c1 WHEN t0.c63 THEN t0.c0 WHEN t0.c1 THEN t0.c63 ELSE t0.c0 END, CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE ((((t0.c0, '', t0.c63)) BETWEEN ((((t0.c0) NOT BETWEEN (t0.c63) AND (t0.c63)), ((t0.c2)>>(t0.c2)), CAST(vt0.c0 AS REAL))) AND ((STRFTIME(vt0.c0, t0.c2, t0.c2), CASE t0.c2  WHEN t0.c1 THEN t0.c1 WHEN t0.c63 THEN t0.c0 WHEN t0.c1 THEN t0.c63 ELSE t0.c0 END, CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, '', t0.c63)) BETWEEN ((((t0.c0) NOT BETWEEN (t0.c63) AND (t0.c63)), ((t0.c2)>>(t0.c2)), CAST(vt0.c0 AS REAL))) AND ((STRFTIME(vt0.c0, t0.c2, t0.c2), CASE t0.c2  WHEN t0.c1 THEN t0.c1 WHEN t0.c63 THEN t0.c0 WHEN t0.c1 THEN t0.c63 ELSE t0.c0 END, CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE ((((t0.c0, '', t0.c63)) BETWEEN ((((t0.c0) NOT BETWEEN (t0.c63) AND (t0.c63)), ((t0.c2)>>(t0.c2)), CAST(vt0.c0 AS REAL))) AND ((STRFTIME(vt0.c0, t0.c2, t0.c2), CASE t0.c2  WHEN t0.c1 THEN t0.c1 WHEN t0.c63 THEN t0.c0 WHEN t0.c1 THEN t0.c63 ELSE t0.c0 END, CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))));
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (ABS(NULL)) ORDER BY (~ (((t0.c63) BETWEEN (vt0.c0) AND (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(NULL)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (~ (((t0.c63) BETWEEN (vt0.c0) AND (vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (ABS(NULL)) ORDER BY (~ (((t0.c63) BETWEEN (vt0.c0) AND (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(NULL)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (~ (((t0.c63) BETWEEN (vt0.c0) AND (vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (ABS(NULL)) ORDER BY (~ (((t0.c63) BETWEEN (vt0.c0) AND (vt1.c0)))) ASC  NULLS LAST;
SELECT * FROM vt1, t0 WHERE (x'9121');
SELECT SUM(count) FROM (SELECT ((x'9121') IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (x'9121');
SELECT SUM(count) FROM (SELECT ((x'9121') IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (x'9121');
SELECT ALL * FROM vt0, t0 WHERE (0Xffffffff9542118b);
SELECT SUM(count) FROM (SELECT ((0xffffffff9542118b) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (0Xffffffff9542118b);
SELECT SUM(count) FROM (SELECT ((0xffffffff9542118b) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (0Xffffffff9542118b);
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON (('-1866469469') ISNULL) WHERE (((((t0.c1 COLLATE NOCASE)AND(CAST(t0.c1 AS INTEGER))))OR(((t0.c1) NOT BETWEEN (t0.c63) AND (t0.c0))))) ORDER BY ((CAST(t0.c2 AS TEXT))AND(CASE t0.c0  WHEN t0.c63 THEN t0.c63 ELSE t0.c2 END)), ((NULL)<<((NOT (t0.c0)))) ASC  NULLS FIRST, (+ (t0.c63));
SELECT SUM(count) FROM (SELECT ((((((t0.c1 COLLATE NOCASE)AND(CAST(t0.c1 AS INTEGER))))OR(((t0.c1) NOT BETWEEN (t0.c63) AND (t0.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (('-1866469469') ISNULL) ORDER BY ((CAST(t0.c2 AS TEXT))AND(CASE t0.c0  WHEN t0.c63 THEN t0.c63 ELSE t0.c2 END)), ((NULL)<<((NOT (t0.c0)))) ASC  NULLS FIRST, (+ (t0.c63)));
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON (('-1866469469') ISNULL) WHERE (((((t0.c1 COLLATE NOCASE)AND(CAST(t0.c1 AS INTEGER))))OR(((t0.c1) NOT BETWEEN (t0.c63) AND (t0.c0))))) ORDER BY ((CAST(t0.c2 AS TEXT))AND(CASE t0.c0  WHEN t0.c63 THEN t0.c63 ELSE t0.c2 END)), ((NULL)<<((NOT (t0.c0)))) ASC  NULLS FIRST, (+ (t0.c63));
SELECT SUM(count) FROM (SELECT ((((((t0.c1 COLLATE NOCASE)AND(CAST(t0.c1 AS INTEGER))))OR(((t0.c1) NOT BETWEEN (t0.c63) AND (t0.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (('-1866469469') ISNULL) ORDER BY ((CAST(t0.c2 AS TEXT))AND(CASE t0.c0  WHEN t0.c63 THEN t0.c63 ELSE t0.c2 END)), ((NULL)<<((NOT (t0.c0)))) ASC  NULLS FIRST, (+ (t0.c63)));
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON (('-1866469469') ISNULL) WHERE (((((t0.c1 COLLATE NOCASE)AND(CAST(t0.c1 AS INTEGER))))OR(((t0.c1) NOT BETWEEN (t0.c63) AND (t0.c0))))) ORDER BY ((CAST(t0.c2 AS TEXT))AND(CASE t0.c0  WHEN t0.c63 THEN t0.c63 ELSE t0.c2 END)), ((NULL)<<((NOT (t0.c0)))) ASC  NULLS FIRST, (+ (t0.c63));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((CASE t0.c2  WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END IN ())) ORDER BY CAST(NULL AS TEXT);
SELECT SUM(count) FROM (SELECT (((CASE t0.c2  WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CAST(NULL AS TEXT));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((CASE t0.c2  WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END IN ())) ORDER BY CAST(NULL AS TEXT);
SELECT SUM(count) FROM (SELECT (((CASE t0.c2  WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CAST(NULL AS TEXT));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((CASE t0.c2  WHEN t0.c0 THEN vt0.c0 ELSE vt1.c0 END IN ())) ORDER BY CAST(NULL AS TEXT);
SELECT * FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((NULL) IS FALSE))))AND(((NULL) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY UNLIKELY(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((NULL) IS FALSE))))AND(((NULL) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY UNLIKELY(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((NULL) IS FALSE))))AND(((NULL) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY UNLIKELY(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((NULL) IS FALSE))))AND(((NULL) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY UNLIKELY(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((NULL) IS FALSE))))AND(((NULL) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY UNLIKELY(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (CASE vt1.c0  WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN vt1.c0 END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE vt1.c0  WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN vt1.c0 END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE vt1.c0  WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN vt1.c0 END);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((~ (vt1.c0))) NOT BETWEEN (x'12a6') AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0))) NOT BETWEEN (x'12a6') AND (vt0.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((~ (vt1.c0))) NOT BETWEEN (x'12a6') AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0))) NOT BETWEEN (x'12a6') AND (vt0.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((~ (vt1.c0))) NOT BETWEEN (x'12a6') AND (vt0.c0)));
SELECT * FROM vt0, t0 NOT INDEXED WHERE (((((vt0.c0) IS FALSE))<<(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))<<(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 NOT INDEXED WHERE (((((vt0.c0) IS FALSE))<<(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))<<(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 NOT INDEXED WHERE (((((vt0.c0) IS FALSE))<<(vt0.c0 COLLATE BINARY)));
SELECT * FROM vt0, t0 WHERE (UPPER(DISTINCT ((t0.c2)AND(t0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((t0.c2)AND(t0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (UPPER(DISTINCT ((t0.c2)AND(t0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((t0.c2)AND(t0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (UPPER(DISTINCT ((t0.c2)AND(t0.c0))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE BINARY COLLATE NOCASE);
SELECT ALL * FROM vt1, t0 WHERE (CASE WHEN (+ (0.9183150186614714)) THEN (+ (t0.c63)) ELSE ((t0.c2)<(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (0.9183150186614714)) THEN (+ (t0.c63)) ELSE ((t0.c2)<(t0.c2)) END) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (CASE WHEN (+ (0.9183150186614714)) THEN (+ (t0.c63)) ELSE ((t0.c2)<(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (0.9183150186614714)) THEN (+ (t0.c63)) ELSE ((t0.c2)<(t0.c2)) END) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (CASE WHEN (+ (0.9183150186614714)) THEN (+ (t0.c63)) ELSE ((t0.c2)<(t0.c2)) END);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON ((((t0.c2 IN ())))<=((((t0.c2) IS FALSE)))) WHERE ((UNLIKELY(t0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(t0.c0) IN ())) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((t0.c2 IN ())))<=((((t0.c2) IS FALSE)))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON ((((t0.c2 IN ())))<=((((t0.c2) IS FALSE)))) WHERE ((UNLIKELY(t0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(t0.c0) IN ())) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((t0.c2 IN ())))<=((((t0.c2) IS FALSE)))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON ((((t0.c2 IN ())))<=((((t0.c2) IS FALSE)))) WHERE ((UNLIKELY(t0.c0) IN ()));
SELECT * FROM t0, vt0 WHERE (((((((((((t0.c2)OR(t0.c63)))AND(t0.c1)))OR(t0.c2)))AND(t0.c1))) IS FALSE)) ORDER BY t0.c63 DESC, ((UNLIKELY(t0.c1))IS NOT(CASE vt0.c0  WHEN t0.c63 THEN vt0.c0 ELSE t0.c1 END)) DESC, ((CAST(t0.c2 AS BLOB))<>(((t0.c2)AND(t0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c2)OR(t0.c63)))AND(t0.c1)))OR(t0.c2)))AND(t0.c1))) IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c63 DESC, ((UNLIKELY(t0.c1))IS NOT(CASE vt0.c0  WHEN t0.c63 THEN vt0.c0 ELSE t0.c1 END)) DESC, ((CAST(t0.c2 AS BLOB))<>(((t0.c2)AND(t0.c1)))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((((((((((t0.c2)OR(t0.c63)))AND(t0.c1)))OR(t0.c2)))AND(t0.c1))) IS FALSE)) ORDER BY t0.c63 DESC, ((UNLIKELY(t0.c1))IS NOT(CASE vt0.c0  WHEN t0.c63 THEN vt0.c0 ELSE t0.c1 END)) DESC, ((CAST(t0.c2 AS BLOB))<>(((t0.c2)AND(t0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c2)OR(t0.c63)))AND(t0.c1)))OR(t0.c2)))AND(t0.c1))) IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c63 DESC, ((UNLIKELY(t0.c1))IS NOT(CASE vt0.c0  WHEN t0.c63 THEN vt0.c0 ELSE t0.c1 END)) DESC, ((CAST(t0.c2 AS BLOB))<>(((t0.c2)AND(t0.c1)))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((((((((((t0.c2)OR(t0.c63)))AND(t0.c1)))OR(t0.c2)))AND(t0.c1))) IS FALSE)) ORDER BY t0.c63 DESC, ((UNLIKELY(t0.c1))IS NOT(CASE vt0.c0  WHEN t0.c63 THEN vt0.c0 ELSE t0.c1 END)) DESC, ((CAST(t0.c2 AS BLOB))<>(((t0.c2)AND(t0.c1)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((ABS(vt0.c0) IN ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((ABS(vt0.c0) IN ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((ABS(vt0.c0) IN ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((ABS(vt0.c0) IN ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((ABS(vt0.c0) IN ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0))))));
SELECT * FROM t0 INDEXED BY i62 WHERE (ABS(t0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((ABS(t0.c1 COLLATE BINARY)) IS TRUE)  as count FROM t0 INDEXED BY i62);
SELECT * FROM t0 INDEXED BY i62 WHERE (ABS(t0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((ABS(t0.c1 COLLATE BINARY)) IS TRUE)  as count FROM t0 INDEXED BY i62);
SELECT * FROM t0 INDEXED BY i62 WHERE (ABS(t0.c1 COLLATE BINARY));
SELECT ALL * FROM vt0, t0, vt1 WHERE (CASE WHEN ((((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))AND(t0.c1)))OR(t0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) ELSE ((((t0.c2)OR(t0.c1)))OR(t0.c1)) END) ORDER BY ((CAST(t0.c1 AS REAL)) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))AND(t0.c1)))OR(t0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) ELSE ((((t0.c2)OR(t0.c1)))OR(t0.c1)) END) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((CAST(t0.c1 AS REAL)) NOTNULL));
SELECT ALL * FROM vt0, t0, vt1 WHERE (CASE WHEN ((((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))AND(t0.c1)))OR(t0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) ELSE ((((t0.c2)OR(t0.c1)))OR(t0.c1)) END) ORDER BY ((CAST(t0.c1 AS REAL)) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))AND(t0.c1)))OR(t0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) ELSE ((((t0.c2)OR(t0.c1)))OR(t0.c1)) END) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((CAST(t0.c1 AS REAL)) NOTNULL));
SELECT ALL * FROM vt0, t0, vt1 WHERE (CASE WHEN ((((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))AND(t0.c1)))OR(t0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) ELSE ((((t0.c2)OR(t0.c1)))OR(t0.c1)) END) ORDER BY ((CAST(t0.c1 AS REAL)) NOTNULL);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0) NOT BETWEEN ('') AND (vt1.c0)))AND(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 0.8313819291484118 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE '' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) NOT BETWEEN ('') AND (vt1.c0)))AND(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 0.8313819291484118 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE '' END))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0) NOT BETWEEN ('') AND (vt1.c0)))AND(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 0.8313819291484118 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE '' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) NOT BETWEEN ('') AND (vt1.c0)))AND(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 0.8313819291484118 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE '' END))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0) NOT BETWEEN ('') AND (vt1.c0)))AND(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 0.8313819291484118 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE '' END)));
SELECT * FROM vt0, vt1, t0 WHERE ((((((- (t0.c2)))AND(((vt0.c0)/('0㋕Ab')))))OR(((t0.c63)<<(t0.c2))))) ORDER BY (((((NULL IN ()))AND(((vt1.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))))AND(CAST(vt0.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT (((((((- (t0.c2)))AND(((vt0.c0)/('0㋕Ab')))))OR(((t0.c63)<<(t0.c2))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((((NULL IN ()))AND(((vt1.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))))AND(CAST(vt0.c0 AS REAL))) DESC);
SELECT * FROM vt0, vt1, t0 WHERE ((((((- (t0.c2)))AND(((vt0.c0)/('0㋕Ab')))))OR(((t0.c63)<<(t0.c2))))) ORDER BY (((((NULL IN ()))AND(((vt1.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))))AND(CAST(vt0.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT (((((((- (t0.c2)))AND(((vt0.c0)/('0㋕Ab')))))OR(((t0.c63)<<(t0.c2))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((((NULL IN ()))AND(((vt1.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))))AND(CAST(vt0.c0 AS REAL))) DESC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((~ (t0.c63)))GLOB(CASE t0.c63  WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)) CROSS JOIN vt1 ON (((+ (vt0.c0))) NOT BETWEEN (LIKE(t0.c63, t0.c2)) AND (((vt0.c0)-('')))) WHERE (((((((t0.c0)!=(t0.c63)))AND(((t0.c2)GLOB(t0.c0)))))AND(CASE t0.c2  WHEN t0.c63 THEN t0.c1 ELSE vt1.c0 END))) ORDER BY ((t0.c2) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)!=(t0.c63)))AND(((t0.c2)GLOB(t0.c0)))))AND(CASE t0.c2  WHEN t0.c63 THEN t0.c1 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((~ (t0.c63)))GLOB(CASE t0.c63  WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)) CROSS JOIN vt1 ON (((+ (vt0.c0))) NOT BETWEEN (LIKE(t0.c63, t0.c2)) AND (((vt0.c0)-('')))) ORDER BY ((t0.c2) IS TRUE));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((~ (t0.c63)))GLOB(CASE t0.c63  WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)) CROSS JOIN vt1 ON (((+ (vt0.c0))) NOT BETWEEN (LIKE(t0.c63, t0.c2)) AND (((vt0.c0)-('')))) WHERE (((((((t0.c0)!=(t0.c63)))AND(((t0.c2)GLOB(t0.c0)))))AND(CASE t0.c2  WHEN t0.c63 THEN t0.c1 ELSE vt1.c0 END))) ORDER BY ((t0.c2) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)!=(t0.c63)))AND(((t0.c2)GLOB(t0.c0)))))AND(CASE t0.c2  WHEN t0.c63 THEN t0.c1 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((~ (t0.c63)))GLOB(CASE t0.c63  WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)) CROSS JOIN vt1 ON (((+ (vt0.c0))) NOT BETWEEN (LIKE(t0.c63, t0.c2)) AND (((vt0.c0)-('')))) ORDER BY ((t0.c2) IS TRUE));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((~ (t0.c63)))GLOB(CASE t0.c63  WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)) CROSS JOIN vt1 ON (((+ (vt0.c0))) NOT BETWEEN (LIKE(t0.c63, t0.c2)) AND (((vt0.c0)-('')))) WHERE (((((((t0.c0)!=(t0.c63)))AND(((t0.c2)GLOB(t0.c0)))))AND(CASE t0.c2  WHEN t0.c63 THEN t0.c1 ELSE vt1.c0 END))) ORDER BY ((t0.c2) IS TRUE);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((~ (t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((~ (t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((~ (t0.c0)) COLLATE BINARY);
SELECT * FROM vt0, t0, vt1 WHERE (CAST(CAST(t0.c0 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (CAST(CAST(t0.c0 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (CAST(CAST(t0.c0 AS REAL) AS REAL));
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN (vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (+ (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN (vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN (vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (+ (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN (vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN (vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (+ (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT * FROM t0 INNER JOIN vt1 ON ((((((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))OR(t0.c2 COLLATE BINARY)))OR((NOT (t0.c0)))) FULL OUTER JOIN vt0 ON (- ((- (vt1.c0)))) WHERE (((x'' COLLATE NOCASE)>>(CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE NOCASE)>>(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((((((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))OR(t0.c2 COLLATE BINARY)))OR((NOT (t0.c0)))) FULL OUTER JOIN vt0 ON (- ((- (vt1.c0)))));
SELECT * FROM t0 INNER JOIN vt1 ON ((((((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))OR(t0.c2 COLLATE BINARY)))OR((NOT (t0.c0)))) FULL OUTER JOIN vt0 ON (- ((- (vt1.c0)))) WHERE (((x'' COLLATE NOCASE)>>(CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE NOCASE)>>(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((((((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))OR(t0.c2 COLLATE BINARY)))OR((NOT (t0.c0)))) FULL OUTER JOIN vt0 ON (- ((- (vt1.c0)))));
SELECT * FROM t0 INNER JOIN vt1 ON ((((((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))OR(t0.c2 COLLATE BINARY)))OR((NOT (t0.c0)))) FULL OUTER JOIN vt0 ON (- ((- (vt1.c0)))) WHERE (((x'' COLLATE NOCASE)>>(CAST(vt1.c0 AS TEXT))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))|((NOT (vt0.c0))))) ORDER BY x'' DESC, (((vt0.c0))<=((vt0.c0 COLLATE BINARY))) ASC  NULLS LAST, (CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))|((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC, (((vt0.c0))<=((vt0.c0 COLLATE BINARY))) ASC  NULLS LAST, (CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))|((NOT (vt0.c0))))) ORDER BY x'' DESC, (((vt0.c0))<=((vt0.c0 COLLATE BINARY))) ASC  NULLS LAST, (CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))|((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC, (((vt0.c0))<=((vt0.c0 COLLATE BINARY))) ASC  NULLS LAST, (CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))|((NOT (vt0.c0))))) ORDER BY x'' DESC, (((vt0.c0))<=((vt0.c0 COLLATE BINARY))) ASC  NULLS LAST, (CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))));
SELECT * FROM t0 WHERE (((((((t0.c1)) BETWEEN ((NULL)) AND ((t0.c1)))))>=(((((t0.c63, t0.c2, t0.c2))!=((t0.c63, t0.c2, NULL)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)) BETWEEN ((NULL)) AND ((t0.c1)))))>=(((((t0.c63, t0.c2, t0.c2))!=((t0.c63, t0.c2, NULL))))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c1)) BETWEEN ((NULL)) AND ((t0.c1)))))>=(((((t0.c63, t0.c2, t0.c2))!=((t0.c63, t0.c2, NULL)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)) BETWEEN ((NULL)) AND ((t0.c1)))))>=(((((t0.c63, t0.c2, t0.c2))!=((t0.c63, t0.c2, NULL))))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c1)) BETWEEN ((NULL)) AND ((t0.c1)))))>=(((((t0.c63, t0.c2, t0.c2))!=((t0.c63, t0.c2, NULL)))))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((((((t0.c63)OR(t0.c1)))AND(t0.c2)))AND('FA')))AND(((((t0.c2)AND(t0.c63)))AND(t0.c63))))) ORDER BY CASE WHEN ((t0.c2) NOT NULL) THEN (- (t0.c0)) END DESC  NULLS LAST, t0.c1 COLLATE RTRIM  NULLS LAST, (((t0.c1, t0.c1, t0.c1)) NOT BETWEEN ((((vt1.c0) BETWEEN (t0.c2) AND (t0.c1)), vt1.c0 COLLATE RTRIM, ((t0.c63)>=(vt1.c0)))) AND ((((t0.c1)AND(t0.c0)), ((t0.c2) BETWEEN (t0.c63) AND (t0.c2)), ((t0.c2)>>(vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c63)OR(t0.c1)))AND(t0.c2)))AND('FA')))AND(((((t0.c2)AND(t0.c63)))AND(t0.c63))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE WHEN ((t0.c2) NOT NULL) THEN (- (t0.c0)) END DESC  NULLS LAST, t0.c1 COLLATE RTRIM  NULLS LAST, (((t0.c1, t0.c1, t0.c1)) NOT BETWEEN ((((vt1.c0) BETWEEN (t0.c2) AND (t0.c1)), vt1.c0 COLLATE RTRIM, ((t0.c63)>=(vt1.c0)))) AND ((((t0.c1)AND(t0.c0)), ((t0.c2) BETWEEN (t0.c63) AND (t0.c2)), ((t0.c2)>>(vt1.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((((((t0.c63)OR(t0.c1)))AND(t0.c2)))AND('FA')))AND(((((t0.c2)AND(t0.c63)))AND(t0.c63))))) ORDER BY CASE WHEN ((t0.c2) NOT NULL) THEN (- (t0.c0)) END DESC  NULLS LAST, t0.c1 COLLATE RTRIM  NULLS LAST, (((t0.c1, t0.c1, t0.c1)) NOT BETWEEN ((((vt1.c0) BETWEEN (t0.c2) AND (t0.c1)), vt1.c0 COLLATE RTRIM, ((t0.c63)>=(vt1.c0)))) AND ((((t0.c1)AND(t0.c0)), ((t0.c2) BETWEEN (t0.c63) AND (t0.c2)), ((t0.c2)>>(vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c63)OR(t0.c1)))AND(t0.c2)))AND('FA')))AND(((((t0.c2)AND(t0.c63)))AND(t0.c63))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE WHEN ((t0.c2) NOT NULL) THEN (- (t0.c0)) END DESC  NULLS LAST, t0.c1 COLLATE RTRIM  NULLS LAST, (((t0.c1, t0.c1, t0.c1)) NOT BETWEEN ((((vt1.c0) BETWEEN (t0.c2) AND (t0.c1)), vt1.c0 COLLATE RTRIM, ((t0.c63)>=(vt1.c0)))) AND ((((t0.c1)AND(t0.c0)), ((t0.c2) BETWEEN (t0.c63) AND (t0.c2)), ((t0.c2)>>(vt1.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((((((t0.c63)OR(t0.c1)))AND(t0.c2)))AND('FA')))AND(((((t0.c2)AND(t0.c63)))AND(t0.c63))))) ORDER BY CASE WHEN ((t0.c2) NOT NULL) THEN (- (t0.c0)) END DESC  NULLS LAST, t0.c1 COLLATE RTRIM  NULLS LAST, (((t0.c1, t0.c1, t0.c1)) NOT BETWEEN ((((vt1.c0) BETWEEN (t0.c2) AND (t0.c1)), vt1.c0 COLLATE RTRIM, ((t0.c63)>=(vt1.c0)))) AND ((((t0.c1)AND(t0.c0)), ((t0.c2) BETWEEN (t0.c63) AND (t0.c2)), ((t0.c2)>>(vt1.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON CAST((((t0.c0))!=((t0.c63))) AS TEXT) WHERE (NULL) ORDER BY CAST(json(t0.c0) AS INTEGER)  NULLS FIRST, ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON CAST((((t0.c0))<>((t0.c63))) AS TEXT) ORDER BY CAST(json(t0.c0) AS INTEGER)  NULLS FIRST, ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON CAST((((t0.c0))!=((t0.c63))) AS TEXT) WHERE (NULL) ORDER BY CAST(json(t0.c0) AS INTEGER)  NULLS FIRST, ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON CAST((((t0.c0))<>((t0.c63))) AS TEXT) ORDER BY CAST(json(t0.c0) AS INTEGER)  NULLS FIRST, ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON CAST((((t0.c0))!=((t0.c63))) AS TEXT) WHERE (NULL) ORDER BY CAST(json(t0.c0) AS INTEGER)  NULLS FIRST, ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((t0.c1) BETWEEN ((t0.c63 IN ())) AND (((0.7232658417976504)<<(0.7582715527798122)))) WHERE (CAST('462528915' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST('462528915' AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((t0.c1) BETWEEN ((t0.c63 IN ())) AND (((0.7232658417976504)<<(0.7582715527798122)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((t0.c1) BETWEEN ((t0.c63 IN ())) AND (((0.7232658417976504)<<(0.7582715527798122)))) WHERE (CAST('462528915' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST('462528915' AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((t0.c1) BETWEEN ((t0.c63 IN ())) AND (((0.7232658417976504)<<(0.7582715527798122)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((t0.c1) BETWEEN ((t0.c63 IN ())) AND (((0.7232658417976504)<<(0.7582715527798122)))) WHERE (CAST('462528915' AS TEXT));
SELECT * FROM vt1 INNER JOIN t0 ON CAST(((t0.c1) NOTNULL) AS NUMERIC) WHERE (((((CASE WHEN t0.c0 THEN t0.c1 END)AND(CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN '}&RFgW>~' WHEN vt1.c0 THEN t0.c0 END)))AND(((x'') IS TRUE)))) ORDER BY ((((((vt1.c0)OR(t0.c2)))OR((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))))AND((vt1.c0 IN (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t0.c0 THEN t0.c1 END)AND(CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN '}&RFgW>~' WHEN vt1.c0 THEN t0.c0 END)))AND(((x'') IS TRUE)))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON CAST(((t0.c1) NOTNULL) AS NUMERIC) ORDER BY ((((((vt1.c0)OR(t0.c2)))OR((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))))AND((vt1.c0 IN (t0.c0))))  NULLS FIRST);
SELECT * FROM vt1 INNER JOIN t0 ON CAST(((t0.c1) NOTNULL) AS NUMERIC) WHERE (((((CASE WHEN t0.c0 THEN t0.c1 END)AND(CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN '}&RFgW>~' WHEN vt1.c0 THEN t0.c0 END)))AND(((x'') IS TRUE)))) ORDER BY ((((((vt1.c0)OR(t0.c2)))OR((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))))AND((vt1.c0 IN (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t0.c0 THEN t0.c1 END)AND(CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN '}&RFgW>~' WHEN vt1.c0 THEN t0.c0 END)))AND(((x'') IS TRUE)))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON CAST(((t0.c1) NOTNULL) AS NUMERIC) ORDER BY ((((((vt1.c0)OR(t0.c2)))OR((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))))AND((vt1.c0 IN (t0.c0))))  NULLS FIRST);
SELECT * FROM vt1 INNER JOIN t0 ON CAST(((t0.c1) NOTNULL) AS NUMERIC) WHERE (((((CASE WHEN t0.c0 THEN t0.c1 END)AND(CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN '}&RFgW>~' WHEN vt1.c0 THEN t0.c0 END)))AND(((x'') IS TRUE)))) ORDER BY ((((((vt1.c0)OR(t0.c2)))OR((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))))AND((vt1.c0 IN (t0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)>(vt1.c0)))>((((0xffffffffc63c05bb, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, NULL, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB) DESC  NULLS LAST, ((((vt1.c0)>(vt1.c0)))&(CAST(vt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(vt1.c0)))>((((0Xffffffffc63c05bb, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, NULL, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB) DESC  NULLS LAST, ((((vt1.c0)>(vt1.c0)))&(CAST(vt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)>(vt1.c0)))>((((0xffffffffc63c05bb, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, NULL, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB) DESC  NULLS LAST, ((((vt1.c0)>(vt1.c0)))&(CAST(vt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(vt1.c0)))>((((0Xffffffffc63c05bb, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, NULL, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB) DESC  NULLS LAST, ((((vt1.c0)>(vt1.c0)))&(CAST(vt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)>(vt1.c0)))>((((0xffffffffc63c05bb, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, NULL, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB) DESC  NULLS LAST, ((((vt1.c0)>(vt1.c0)))&(CAST(vt1.c0 AS INTEGER)));
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN 0Xffffffff8c314cc0 ELSE vt0.c0 END)AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN 0xffffffff8c314cc0 ELSE vt0.c0 END)AND(NULL))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN 0Xffffffff8c314cc0 ELSE vt0.c0 END)AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN 0xffffffff8c314cc0 ELSE vt0.c0 END)AND(NULL))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN 0Xffffffff8c314cc0 ELSE vt0.c0 END)AND(NULL)));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (HEX(((t0.c1)&(t0.c0)))) ORDER BY CAST((('3%{ryK/!') ISNULL) AS TEXT)  NULLS LAST, t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(((t0.c1)&(t0.c0)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CAST((('3%{ryK/!') ISNULL) AS TEXT)  NULLS LAST, t0.c0  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (HEX(((t0.c1)&(t0.c0)))) ORDER BY CAST((('3%{ryK/!') ISNULL) AS TEXT)  NULLS LAST, t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(((t0.c1)&(t0.c0)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CAST((('3%{ryK/!') ISNULL) AS TEXT)  NULLS LAST, t0.c0  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (HEX(((t0.c1)&(t0.c0)))) ORDER BY CAST((('3%{ryK/!') ISNULL) AS TEXT)  NULLS LAST, t0.c0  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((UNLIKELY(DISTINCT vt1.c0)) IS FALSE)) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (vt1.c0) AND (CAST(vt1.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT vt1.c0)) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (vt1.c0) AND (CAST(vt1.c0 AS BLOB))) DESC);
SELECT ALL * FROM vt1 WHERE (((UNLIKELY(DISTINCT vt1.c0)) IS FALSE)) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (vt1.c0) AND (CAST(vt1.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT vt1.c0)) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (vt1.c0) AND (CAST(vt1.c0 AS BLOB))) DESC);
SELECT ALL * FROM vt1 WHERE (((UNLIKELY(DISTINCT vt1.c0)) IS FALSE)) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (vt1.c0) AND (CAST(vt1.c0 AS BLOB))) DESC;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) ORDER BY ((((((((((0.0822719979632135) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND('1111246315')))OR(CAST(vt0.c0 AS NUMERIC))))OR(vt1.c0 COLLATE NOCASE)))OR(CAST(vt0.c0 AS INTEGER))), (((((((((NOT (vt0.c0)))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR('1e500')))OR(LAST_INSERT_ROWID())))AND(0.04991895993721618));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((0.0822719979632135) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND('1111246315')))OR(CAST(vt0.c0 AS NUMERIC))))OR(vt1.c0 COLLATE NOCASE)))OR(CAST(vt0.c0 AS INTEGER))), (((((((((NOT (vt0.c0)))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR('1e500')))OR(LAST_INSERT_ROWID())))AND(0.04991895993721618)));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) ORDER BY ((((((((((0.0822719979632135) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND('1111246315')))OR(CAST(vt0.c0 AS NUMERIC))))OR(vt1.c0 COLLATE NOCASE)))OR(CAST(vt0.c0 AS INTEGER))), (((((((((NOT (vt0.c0)))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR('1e500')))OR(LAST_INSERT_ROWID())))AND(0.04991895993721618));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((0.0822719979632135) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND('1111246315')))OR(CAST(vt0.c0 AS NUMERIC))))OR(vt1.c0 COLLATE NOCASE)))OR(CAST(vt0.c0 AS INTEGER))), (((((((((NOT (vt0.c0)))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR('1e500')))OR(LAST_INSERT_ROWID())))AND(0.04991895993721618)));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) ORDER BY ((((((((((0.0822719979632135) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND('1111246315')))OR(CAST(vt0.c0 AS NUMERIC))))OR(vt1.c0 COLLATE NOCASE)))OR(CAST(vt0.c0 AS INTEGER))), (((((((((NOT (vt0.c0)))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR('1e500')))OR(LAST_INSERT_ROWID())))AND(0.04991895993721618));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON (((-1556146634)) NOT BETWEEN (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((t0.c0))) WHERE (((((CAST(t0.c63 AS BLOB))AND(CASE WHEN t0.c63 THEN t0.c63 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN 0.5641749776385044 END)))OR(((t0.c0)IS NOT(t0.c63))))) ORDER BY json_array((t0.c0 IN ()), ((t0.c63)/(t0.c63))) DESC  NULLS FIRST, UPPER((NOT (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c63 AS BLOB))AND(CASE WHEN t0.c63 THEN t0.c63 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN 0.5641749776385044 END)))OR(((t0.c0)IS NOT(t0.c63))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((-1556146634)) NOT BETWEEN (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((t0.c0))) ORDER BY json_array((t0.c0 IN ()), ((t0.c63)/(t0.c63))) DESC  NULLS FIRST, UPPER((NOT (vt1.c0))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON (((-1556146634)) NOT BETWEEN (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((t0.c0))) WHERE (((((CAST(t0.c63 AS BLOB))AND(CASE WHEN t0.c63 THEN t0.c63 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN 0.5641749776385044 END)))OR(((t0.c0)IS NOT(t0.c63))))) ORDER BY json_array((t0.c0 IN ()), ((t0.c63)/(t0.c63))) DESC  NULLS FIRST, UPPER((NOT (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c63 AS BLOB))AND(CASE WHEN t0.c63 THEN t0.c63 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN 0.5641749776385044 END)))OR(((t0.c0)IS NOT(t0.c63))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((-1556146634)) NOT BETWEEN (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((t0.c0))) ORDER BY json_array((t0.c0 IN ()), ((t0.c63)/(t0.c63))) DESC  NULLS FIRST, UPPER((NOT (vt1.c0))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON (((-1556146634)) NOT BETWEEN (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((t0.c0))) WHERE (((((CAST(t0.c63 AS BLOB))AND(CASE WHEN t0.c63 THEN t0.c63 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN 0.5641749776385044 END)))OR(((t0.c0)IS NOT(t0.c63))))) ORDER BY json_array((t0.c0 IN ()), ((t0.c63)/(t0.c63))) DESC  NULLS FIRST, UPPER((NOT (vt1.c0)));
SELECT ALL * FROM vt1, vt0, t0 WHERE (t0.c1) ORDER BY ((0x557b3f3b)*(CAST(t0.c63 AS REAL)));
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((0x557b3f3b)*(CAST(t0.c63 AS REAL))));
SELECT ALL * FROM vt1, vt0, t0 WHERE (t0.c1) ORDER BY ((0x557b3f3b)*(CAST(t0.c63 AS REAL)));
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((0x557b3f3b)*(CAST(t0.c63 AS REAL))));
SELECT ALL * FROM vt1, vt0, t0 WHERE (t0.c1) ORDER BY ((0x557b3f3b)*(CAST(t0.c63 AS REAL)));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (vt0.c0 IN ()) COLLATE NOCASE WHERE (vt1.c0 COLLATE NOCASE) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (vt0.c0 IN ()) COLLATE NOCASE ORDER BY vt1.c0);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (vt0.c0 IN ()) COLLATE NOCASE WHERE (vt1.c0 COLLATE NOCASE) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (vt0.c0 IN ()) COLLATE NOCASE ORDER BY vt1.c0);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (vt0.c0 IN ()) COLLATE NOCASE WHERE (vt1.c0 COLLATE NOCASE) ORDER BY vt1.c0;
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (x'9066');
SELECT SUM(count) FROM (SELECT ((x'9066') IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (x'9066');
SELECT SUM(count) FROM (SELECT ((x'9066') IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (x'9066');
SELECT ALL COUNT(*) FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0, vt0.c0))<(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt0.c0, vt0.c0))<(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0, vt0.c0))<(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt0.c0, vt0.c0))<(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0, vt0.c0))<(vt0.c0)));
SELECT ALL * FROM t0, vt1, vt0 NOT INDEXED WHERE (CASE ((vt1.c0)>>(t0.c1))  WHEN t0.c63 THEN vt0.c0 ELSE (t0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)>>(t0.c1))  WHEN t0.c63 THEN vt0.c0 ELSE (t0.c1 IN ()) END) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 NOT INDEXED WHERE (CASE ((vt1.c0)>>(t0.c1))  WHEN t0.c63 THEN vt0.c0 ELSE (t0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)>>(t0.c1))  WHEN t0.c63 THEN vt0.c0 ELSE (t0.c1 IN ()) END) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 NOT INDEXED WHERE (CASE ((vt1.c0)>>(t0.c1))  WHEN t0.c63 THEN vt0.c0 ELSE (t0.c1 IN ()) END);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) IS TRUE));
SELECT ALL * FROM t0 WHERE (((((t0.c0)>=(t0.c0)))-(CAST(t0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)>=(t0.c0)))-(CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)>=(t0.c0)))-(CAST(t0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)>=(t0.c0)))-(CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)>=(t0.c0)))-(CAST(t0.c2 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0, t0 INDEXED BY i62 CROSS JOIN vt1 ON ((CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 END) IS TRUE) WHERE (((((t0.c2) IS TRUE)) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(t0.c63))) AND (LTRIM(vt1.c0)))) ORDER BY ((((t0.c2)OR(t0.c63)))IS NOT((- (t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) IS TRUE)) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(t0.c63))) AND (LTRIM(vt1.c0)))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i62 CROSS JOIN vt1 ON ((CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 END) IS TRUE) ORDER BY ((((t0.c2)OR(t0.c63)))IS NOT((- (t0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0 INDEXED BY i62 CROSS JOIN vt1 ON ((CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 END) IS TRUE) WHERE (((((t0.c2) IS TRUE)) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(t0.c63))) AND (LTRIM(vt1.c0)))) ORDER BY ((((t0.c2)OR(t0.c63)))IS NOT((- (t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) IS TRUE)) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(t0.c63))) AND (LTRIM(vt1.c0)))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i62 CROSS JOIN vt1 ON ((CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 END) IS TRUE) ORDER BY ((((t0.c2)OR(t0.c63)))IS NOT((- (t0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0 INDEXED BY i62 CROSS JOIN vt1 ON ((CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 END) IS TRUE) WHERE (((((t0.c2) IS TRUE)) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(t0.c63))) AND (LTRIM(vt1.c0)))) ORDER BY ((((t0.c2)OR(t0.c63)))IS NOT((- (t0.c1))));
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (NULL) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY t0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (NULL) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY t0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (NULL) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt0.c0)!=(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)<>(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt0.c0)!=(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)<>(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt0.c0)!=(vt0.c0)) AS REAL));
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY CASE WHEN vt1.c0 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN 2.027216367E9 WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (vt1.c0 IN (vt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN vt1.c0 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN 2.027216367E9 WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (vt1.c0 IN (vt1.c0)) END  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY CASE WHEN vt1.c0 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN 2.027216367E9 WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (vt1.c0 IN (vt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN vt1.c0 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN 2.027216367E9 WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (vt1.c0 IN (vt1.c0)) END  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY CASE WHEN vt1.c0 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN 2.027216367E9 WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (vt1.c0 IN (vt1.c0)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON (+ ((+ (t0.c2)))) WHERE (((NULL) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))) AND (((t0.c63) BETWEEN ('#獽') AND (t0.c63)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))) AND (((t0.c63) BETWEEN ('#獽') AND (t0.c63))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (+ ((+ (t0.c2)))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON (+ ((+ (t0.c2)))) WHERE (((NULL) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))) AND (((t0.c63) BETWEEN ('#獽') AND (t0.c63)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))) AND (((t0.c63) BETWEEN ('#獽') AND (t0.c63))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (+ ((+ (t0.c2)))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON (+ ((+ (t0.c2)))) WHERE (((NULL) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))) AND (((t0.c63) BETWEEN ('#獽') AND (t0.c63)))));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) ISNULL)) ORDER BY CAST(CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END AS BLOB) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) ISNULL)) ORDER BY CAST(CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END AS BLOB) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) ISNULL)) ORDER BY CAST(CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END AS BLOB) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS BLOB)) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN NULL END  NULLS LAST, 583810818  NULLS FIRST, ((0.0621083931976405) ISNULL);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN NULL END  NULLS LAST, 583810818  NULLS FIRST, ((0.0621083931976405) ISNULL));
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS BLOB)) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN NULL END  NULLS LAST, 583810818  NULLS FIRST, ((0.0621083931976405) ISNULL);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN NULL END  NULLS LAST, 583810818  NULLS FIRST, ((0.0621083931976405) ISNULL));
SELECT * FROM vt1, t0, vt0 WHERE (ABS(((t0.c2)&(t0.c63))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((t0.c2)&(t0.c63)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (ABS(((t0.c2)&(t0.c63))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((t0.c2)&(t0.c63)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (ABS(((t0.c2)&(t0.c63))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL)))>((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT(load_extension(vt0.c0, vt0.c0)))  NULLS LAST, ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) NOTNULL))) DESC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)%((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((-543866527))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS REAL)))>((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT(load_extension(vt0.c0, vt0.c0)))  NULLS LAST, ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) NOTNULL))) DESC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)%((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((-543866527))))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL)))>((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT(load_extension(vt0.c0, vt0.c0)))  NULLS LAST, ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) NOTNULL))) DESC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)%((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((-543866527))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS REAL)))>((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT(load_extension(vt0.c0, vt0.c0)))  NULLS LAST, ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) NOTNULL))) DESC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)%((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((-543866527))))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL)))>((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT(load_extension(vt0.c0, vt0.c0)))  NULLS LAST, ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) NOTNULL))) DESC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)%((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((-543866527))))) DESC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c63)/(t0.c63)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c63)/(t0.c63)) AS TEXT)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c63)/(t0.c63)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c63)/(t0.c63)) AS TEXT)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c63)/(t0.c63)) AS TEXT));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (IFNULL(((t0.c1) ISNULL), ((((t0.c2)OR(t0.c0)))AND(t0.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((t0.c1) ISNULL), ((((t0.c2)OR(t0.c0)))AND(t0.c0)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (IFNULL(((t0.c1) ISNULL), ((((t0.c2)OR(t0.c0)))AND(t0.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((t0.c1) ISNULL), ((((t0.c2)OR(t0.c0)))AND(t0.c0)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (IFNULL(((t0.c1) ISNULL), ((((t0.c2)OR(t0.c0)))AND(t0.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((NULL)<<(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((NULL)<<(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((NULL)<<(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((NULL)<<(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((NULL)<<(t0.c1)))));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY NULL ASC);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY NULL ASC);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY) ORDER BY NULL ASC;
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((((((((((vt0.c0)AND(t0.c1)))OR(vt1.c0)))AND(t0.c0)))AND(vt0.c0)))>=(((t0.c63) ISNULL)))) ORDER BY ((((t0.c1) BETWEEN (vt1.c0) AND (t0.c1)))LIKE((- (vt1.c0)))), ((t0.c1 COLLATE RTRIM)%((NOT (t0.c1)))) ASC, ((((- (vt0.c0)), (t0.c2 IN (t0.c1)), t0.c2))!=(((((x'')) NOT BETWEEN ((t0.c1)) AND ((vt1.c0))), ((t0.c1) BETWEEN (t0.c2) AND (t0.c1)), CASE WHEN vt0.c0 THEN t0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(t0.c1)))OR(vt1.c0)))AND(t0.c0)))AND(vt0.c0)))>=(((t0.c63) ISNULL)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((t0.c1) BETWEEN (vt1.c0) AND (t0.c1)))LIKE((- (vt1.c0)))), ((t0.c1 COLLATE RTRIM)%((NOT (t0.c1)))) ASC, ((((- (vt0.c0)), (t0.c2 IN (t0.c1)), t0.c2))<>(((((x'')) NOT BETWEEN ((t0.c1)) AND ((vt1.c0))), ((t0.c1) BETWEEN (t0.c2) AND (t0.c1)), CASE WHEN vt0.c0 THEN t0.c1 ELSE vt0.c0 END))));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((((((((((vt0.c0)AND(t0.c1)))OR(vt1.c0)))AND(t0.c0)))AND(vt0.c0)))>=(((t0.c63) ISNULL)))) ORDER BY ((((t0.c1) BETWEEN (vt1.c0) AND (t0.c1)))LIKE((- (vt1.c0)))), ((t0.c1 COLLATE RTRIM)%((NOT (t0.c1)))) ASC, ((((- (vt0.c0)), (t0.c2 IN (t0.c1)), t0.c2))!=(((((x'')) NOT BETWEEN ((t0.c1)) AND ((vt1.c0))), ((t0.c1) BETWEEN (t0.c2) AND (t0.c1)), CASE WHEN vt0.c0 THEN t0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(t0.c1)))OR(vt1.c0)))AND(t0.c0)))AND(vt0.c0)))>=(((t0.c63) ISNULL)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((t0.c1) BETWEEN (vt1.c0) AND (t0.c1)))LIKE((- (vt1.c0)))), ((t0.c1 COLLATE RTRIM)%((NOT (t0.c1)))) ASC, ((((- (vt0.c0)), (t0.c2 IN (t0.c1)), t0.c2))<>(((((x'')) NOT BETWEEN ((t0.c1)) AND ((vt1.c0))), ((t0.c1) BETWEEN (t0.c2) AND (t0.c1)), CASE WHEN vt0.c0 THEN t0.c1 ELSE vt0.c0 END))));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((((((((((vt0.c0)AND(t0.c1)))OR(vt1.c0)))AND(t0.c0)))AND(vt0.c0)))>=(((t0.c63) ISNULL)))) ORDER BY ((((t0.c1) BETWEEN (vt1.c0) AND (t0.c1)))LIKE((- (vt1.c0)))), ((t0.c1 COLLATE RTRIM)%((NOT (t0.c1)))) ASC, ((((- (vt0.c0)), (t0.c2 IN (t0.c1)), t0.c2))!=(((((x'')) NOT BETWEEN ((t0.c1)) AND ((vt1.c0))), ((t0.c1) BETWEEN (t0.c2) AND (t0.c1)), CASE WHEN vt0.c0 THEN t0.c1 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON CAST('693816107' AS INTEGER) CROSS JOIN vt1 ON ((t0.c0) NOT BETWEEN (t0.c63) AND (vt1.c0)) COLLATE BINARY WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CAST('693816107' AS INTEGER) CROSS JOIN vt1 ON ((t0.c0) NOT BETWEEN (t0.c63) AND (vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON CAST('693816107' AS INTEGER) CROSS JOIN vt1 ON ((t0.c0) NOT BETWEEN (t0.c63) AND (vt1.c0)) COLLATE BINARY WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CAST('693816107' AS INTEGER) CROSS JOIN vt1 ON ((t0.c0) NOT BETWEEN (t0.c63) AND (vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON CAST('693816107' AS INTEGER) CROSS JOIN vt1 ON ((t0.c0) NOT BETWEEN (t0.c63) AND (vt1.c0)) COLLATE BINARY WHERE ((vt0.c0 IN ()));
SELECT ALL COUNT(*) FROM t0, vt1 INNER JOIN vt0 ON (((((('-1056977326')*('뀦ᆍ?D')))OR(((t0.c2)>(t0.c1)))))OR(((t0.c1)IS NOT(t0.c0)))) WHERE (CASE WHEN -1.556146634E9 THEN t0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN -1.556146634E9 THEN t0.c2 END) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON (((((('-1056977326')*('뀦ᆍ?D')))OR(((t0.c2)>(t0.c1)))))OR(((t0.c1)IS NOT(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt1 INNER JOIN vt0 ON (((((('-1056977326')*('뀦ᆍ?D')))OR(((t0.c2)>(t0.c1)))))OR(((t0.c1)IS NOT(t0.c0)))) WHERE (CASE WHEN -1.556146634E9 THEN t0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN -1.556146634E9 THEN t0.c2 END) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON (((((('-1056977326')*('뀦ᆍ?D')))OR(((t0.c2)>(t0.c1)))))OR(((t0.c1)IS NOT(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt1 INNER JOIN vt0 ON (((((('-1056977326')*('뀦ᆍ?D')))OR(((t0.c2)>(t0.c1)))))OR(((t0.c1)IS NOT(t0.c0)))) WHERE (CASE WHEN -1.556146634E9 THEN t0.c2 END);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((t0.c63)) NOT BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((x'6ee61932'))) INNER JOIN t0 ON (SQLITE_SOURCE_ID() IN ()) WHERE (((0.9376714736946492)<<(t0.c1)) COLLATE BINARY COLLATE BINARY) ORDER BY (NULL COLLATE BINARY IN ((t0.c2 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((0.9376714736946492)<<(t0.c1)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((t0.c63)) NOT BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((x'6ee61932'))) INNER JOIN t0 ON (SQLITE_SOURCE_ID() IN ()) ORDER BY (NULL COLLATE BINARY IN ((t0.c2 IN (vt0.c0)))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((t0.c63)) NOT BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((x'6ee61932'))) INNER JOIN t0 ON (SQLITE_SOURCE_ID() IN ()) WHERE (((0.9376714736946492)<<(t0.c1)) COLLATE BINARY COLLATE BINARY) ORDER BY (NULL COLLATE BINARY IN ((t0.c2 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((0.9376714736946492)<<(t0.c1)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((t0.c63)) NOT BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((x'6ee61932'))) INNER JOIN t0 ON (SQLITE_SOURCE_ID() IN ()) ORDER BY (NULL COLLATE BINARY IN ((t0.c2 IN (vt0.c0)))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((t0.c63)) NOT BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((x'6ee61932'))) INNER JOIN t0 ON (SQLITE_SOURCE_ID() IN ()) WHERE (((0.9376714736946492)<<(t0.c1)) COLLATE BINARY COLLATE BINARY) ORDER BY (NULL COLLATE BINARY IN ((t0.c2 IN (vt0.c0))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (t0.c63) AND (vt1.c0)))AND((NOT (vt1.c0))))) ORDER BY t0.c63, (((~ (t0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (t0.c63) AND (vt1.c0)))AND((NOT (vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY t0.c63, (((~ (t0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (t0.c63) AND (vt1.c0)))AND((NOT (vt1.c0))))) ORDER BY t0.c63, (((~ (t0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (t0.c63) AND (vt1.c0)))AND((NOT (vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY t0.c63, (((~ (t0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (t0.c63) AND (vt1.c0)))AND((NOT (vt1.c0))))) ORDER BY t0.c63, (((~ (t0.c0))) NOT NULL);
SELECT * FROM t0, vt1 WHERE (((((t0.c0)<<(t0.c0)))<>(((((t0.c63)AND(vt1.c0)))AND(t0.c2))))) ORDER BY ((((t0.c1)OR(((t0.c0) BETWEEN (vt1.c0) AND (t0.c63)))))AND(CAST(t0.c63 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<<(t0.c0)))!=(((((t0.c63)AND(vt1.c0)))AND(t0.c2))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c1)OR(((t0.c0) BETWEEN (vt1.c0) AND (t0.c63)))))AND(CAST(t0.c63 AS TEXT))) DESC  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE (((((t0.c0)<<(t0.c0)))<>(((((t0.c63)AND(vt1.c0)))AND(t0.c2))))) ORDER BY ((((t0.c1)OR(((t0.c0) BETWEEN (vt1.c0) AND (t0.c63)))))AND(CAST(t0.c63 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<<(t0.c0)))!=(((((t0.c63)AND(vt1.c0)))AND(t0.c2))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c1)OR(((t0.c0) BETWEEN (vt1.c0) AND (t0.c63)))))AND(CAST(t0.c63 AS TEXT))) DESC  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE (((((t0.c0)<<(t0.c0)))<>(((((t0.c63)AND(vt1.c0)))AND(t0.c2))))) ORDER BY ((((t0.c1)OR(((t0.c0) BETWEEN (vt1.c0) AND (t0.c63)))))AND(CAST(t0.c63 AS TEXT))) DESC  NULLS FIRST;
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON t0.c63 WHERE ((((t0.c1))==((CASE t0.c2  WHEN t0.c63 THEN t0.c0 ELSE t0.c0 END)))) ORDER BY 0.05093102420647111 DESC  NULLS LAST, IFNULL(LIKELIHOOD(x'', 0.421585471269855), (t0.c1 IN (t0.c2))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c1))=((CASE t0.c2  WHEN t0.c63 THEN t0.c0 ELSE t0.c0 END)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON t0.c63 ORDER BY 0.05093102420647111 DESC  NULLS LAST, IFNULL(LIKELIHOOD(x'', 0.421585471269855), (t0.c1 IN (t0.c2))) DESC);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON t0.c63 WHERE ((((t0.c1))==((CASE t0.c2  WHEN t0.c63 THEN t0.c0 ELSE t0.c0 END)))) ORDER BY 0.05093102420647111 DESC  NULLS LAST, IFNULL(LIKELIHOOD(x'', 0.421585471269855), (t0.c1 IN (t0.c2))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c1))=((CASE t0.c2  WHEN t0.c63 THEN t0.c0 ELSE t0.c0 END)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON t0.c63 ORDER BY 0.05093102420647111 DESC  NULLS LAST, IFNULL(LIKELIHOOD(x'', 0.421585471269855), (t0.c1 IN (t0.c2))) DESC);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON t0.c63 WHERE ((((t0.c1))==((CASE t0.c2  WHEN t0.c63 THEN t0.c0 ELSE t0.c0 END)))) ORDER BY 0.05093102420647111 DESC  NULLS LAST, IFNULL(LIKELIHOOD(x'', 0.421585471269855), (t0.c1 IN (t0.c2))) DESC;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((x'' COLLATE BINARY)<=((NOT (vt0.c0))))  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((x'' COLLATE BINARY)<=((NOT (vt0.c0))))  NULLS FIRST, vt0.c0);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((x'' COLLATE BINARY)<=((NOT (vt0.c0))))  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((x'' COLLATE BINARY)<=((NOT (vt0.c0))))  NULLS FIRST, vt0.c0);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((x'' COLLATE BINARY)<=((NOT (vt0.c0))))  NULLS FIRST, vt0.c0;
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0)|(((((vt1.c0)OR(vt0.c0)))OR('136085337'))))) ORDER BY 'b'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)|(((((vt1.c0)OR(vt0.c0)))OR('136085337'))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 'b'  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0)|(((((vt1.c0)OR(vt0.c0)))OR('136085337'))))) ORDER BY 'b'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)|(((((vt1.c0)OR(vt0.c0)))OR('136085337'))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 'b'  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0)|(((((vt1.c0)OR(vt0.c0)))OR('136085337'))))) ORDER BY 'b'  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c2 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c2 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c2 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c2 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c2 AS REAL) COLLATE RTRIM);
SELECT * FROM t0 WHERE (CAST(NULL AS TEXT)) ORDER BY (NOT (CAST(t0.c63 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (NOT (CAST(t0.c63 AS REAL))) ASC);
SELECT * FROM t0 WHERE (CAST(NULL AS TEXT)) ORDER BY (NOT (CAST(t0.c63 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (NOT (CAST(t0.c63 AS REAL))) ASC);
SELECT * FROM t0 WHERE (CAST(NULL AS TEXT)) ORDER BY (NOT (CAST(t0.c63 AS REAL))) ASC;
SELECT * FROM t0, vt1 WHERE (load_extension(((vt1.c0)|(t0.c2)), ((t0.c1)>>(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((vt1.c0)|(t0.c2)), ((t0.c1)>>(t0.c0)))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (load_extension(((vt1.c0)|(t0.c2)), ((t0.c1)>>(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((vt1.c0)|(t0.c2)), ((t0.c1)>>(t0.c0)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM vt1 INDEXED BY i62, vt0, t0 WHERE (vt0.c0) ORDER BY CAST(((t0.c2)!=(t0.c63)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 INDEXED BY i62, vt0, t0 ORDER BY CAST(((t0.c2)!=(t0.c63)) AS BLOB) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 INDEXED BY i62, vt0, t0 WHERE (vt0.c0) ORDER BY CAST(((t0.c2)!=(t0.c63)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 INDEXED BY i62, vt0, t0 ORDER BY CAST(((t0.c2)!=(t0.c63)) AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (UNICODE((~ (NULL)))) ORDER BY ((((t0.c0) IS TRUE)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((UNICODE((~ (NULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) IS TRUE)) NOT NULL));
SELECT ALL COUNT(*) FROM t0 WHERE (UNICODE((~ (NULL)))) ORDER BY ((((t0.c0) IS TRUE)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((UNICODE((~ (NULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) IS TRUE)) NOT NULL));
SELECT ALL COUNT(*) FROM t0 WHERE (UNICODE((~ (NULL)))) ORDER BY ((((t0.c0) IS TRUE)) NOT NULL);
SELECT ALL * FROM vt1, t0 CROSS JOIN vt0 ON ((((vt1.c0) IS FALSE))<<(((t0.c2) BETWEEN (t0.c0) AND (t0.c63)))) WHERE (GLOB(x'79a7', CAST(vt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((GLOB(x'79a7', CAST(vt1.c0 AS INTEGER))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON ((((vt1.c0) IS FALSE))<<(((t0.c2) BETWEEN (t0.c0) AND (t0.c63)))));
SELECT ALL * FROM vt1, t0 CROSS JOIN vt0 ON ((((vt1.c0) IS FALSE))<<(((t0.c2) BETWEEN (t0.c0) AND (t0.c63)))) WHERE (GLOB(x'79a7', CAST(vt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((GLOB(x'79a7', CAST(vt1.c0 AS INTEGER))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON ((((vt1.c0) IS FALSE))<<(((t0.c2) BETWEEN (t0.c0) AND (t0.c63)))));
SELECT ALL * FROM vt1, t0 CROSS JOIN vt0 ON ((((vt1.c0) IS FALSE))<<(((t0.c2) BETWEEN (t0.c0) AND (t0.c63)))) WHERE (GLOB(x'79a7', CAST(vt1.c0 AS INTEGER)));
SELECT ALL * FROM vt1, vt0 WHERE (((((((((0.48973797728509016)AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(vt1.c0 COLLATE NOCASE)))OR(((-2.042281096E9) IS TRUE))))AND(CASE WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY ((((vt0.c0)<>(vt0.c0)))<(vt0.c0 COLLATE NOCASE))  NULLS LAST, NULLIF(-1246853286, ((vt0.c0)%(vt0.c0))) ASC, (((CASE WHEN vt1.c0 THEN vt0.c0 END))<((57290092)));
SELECT SUM(count) FROM (SELECT ((((((((((0.48973797728509016)AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(vt1.c0 COLLATE NOCASE)))OR(((-2.042281096E9) IS TRUE))))AND(CASE WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0)!=(vt0.c0)))<(vt0.c0 COLLATE NOCASE))  NULLS LAST, NULLIF(-1246853286, ((vt0.c0)%(vt0.c0))) ASC, (((CASE WHEN vt1.c0 THEN vt0.c0 END))<((57290092))));
SELECT ALL * FROM vt1, vt0 WHERE (((((((((0.48973797728509016)AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(vt1.c0 COLLATE NOCASE)))OR(((-2.042281096E9) IS TRUE))))AND(CASE WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY ((((vt0.c0)<>(vt0.c0)))<(vt0.c0 COLLATE NOCASE))  NULLS LAST, NULLIF(-1246853286, ((vt0.c0)%(vt0.c0))) ASC, (((CASE WHEN vt1.c0 THEN vt0.c0 END))<((57290092)));
SELECT SUM(count) FROM (SELECT ((((((((((0.48973797728509016)AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(vt1.c0 COLLATE NOCASE)))OR(((-2.042281096E9) IS TRUE))))AND(CASE WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0)!=(vt0.c0)))<(vt0.c0 COLLATE NOCASE))  NULLS LAST, NULLIF(-1246853286, ((vt0.c0)%(vt0.c0))) ASC, (((CASE WHEN vt1.c0 THEN vt0.c0 END))<((57290092))));
SELECT ALL * FROM vt1, vt0 WHERE (((((((((0.48973797728509016)AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(vt1.c0 COLLATE NOCASE)))OR(((-2.042281096E9) IS TRUE))))AND(CASE WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY ((((vt0.c0)<>(vt0.c0)))<(vt0.c0 COLLATE NOCASE))  NULLS LAST, NULLIF(-1246853286, ((vt0.c0)%(vt0.c0))) ASC, (((CASE WHEN vt1.c0 THEN vt0.c0 END))<((57290092)));
SELECT ALL COUNT(*) FROM vt1 WHERE (IFNULL(DISTINCT (vt1.c0 IN ()), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT (vt1.c0 IN ()), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (IFNULL(DISTINCT (vt1.c0 IN ()), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT (vt1.c0 IN ()), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (IFNULL(DISTINCT (vt1.c0 IN ()), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((x'' IN ())) IS FALSE) FULL OUTER JOIN t0 ON LIKELIHOOD(t0.c1, 0.17987752476389718) WHERE (((',s') NOT BETWEEN (((t0.c0) ISNULL)) AND (rtreenode(t0.c0, NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((',s') NOT BETWEEN (((t0.c0) ISNULL)) AND (rtreenode(t0.c0, NULL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((x'' IN ())) IS FALSE) FULL OUTER JOIN t0 ON LIKELIHOOD(t0.c1, 0.17987752476389718));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((x'' IN ())) IS FALSE) FULL OUTER JOIN t0 ON LIKELIHOOD(t0.c1, 0.17987752476389718) WHERE (((',s') NOT BETWEEN (((t0.c0) ISNULL)) AND (rtreenode(t0.c0, NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((',s') NOT BETWEEN (((t0.c0) ISNULL)) AND (rtreenode(t0.c0, NULL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((x'' IN ())) IS FALSE) FULL OUTER JOIN t0 ON LIKELIHOOD(t0.c1, 0.17987752476389718));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((x'' IN ())) IS FALSE) FULL OUTER JOIN t0 ON LIKELIHOOD(t0.c1, 0.17987752476389718) WHERE (((',s') NOT BETWEEN (((t0.c0) ISNULL)) AND (rtreenode(t0.c0, NULL))));
SELECT ALL * FROM t0 WHERE ((NOT ((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((NOT ((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((NOT ((NOT (t0.c0)))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((t0.c2, t0.c1, t0.c2)) BETWEEN ((t0.c63, 0.965597994437297, t0.c2)) AND ((0.7353683236216342, -9223372036854775808, vt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2, t0.c1, t0.c2)) BETWEEN ((t0.c63, 0.965597994437297, t0.c2)) AND ((0.7353683236216342, -9223372036854775808, vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((t0.c2, t0.c1, t0.c2)) BETWEEN ((t0.c63, 0.965597994437297, t0.c2)) AND ((0.7353683236216342, -9223372036854775808, vt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2, t0.c1, t0.c2)) BETWEEN ((t0.c63, 0.965597994437297, t0.c2)) AND ((0.7353683236216342, -9223372036854775808, vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((t0.c2, t0.c1, t0.c2)) BETWEEN ((t0.c63, 0.965597994437297, t0.c2)) AND ((0.7353683236216342, -9223372036854775808, vt0.c0)))) NOT NULL));
SELECT COUNT(*) FROM t0, vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 END IN (((((((((vt1.c0)AND(t0.c1)))OR(t0.c1)))OR(vt1.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN vt1.c0 END IN (((((((((vt1.c0)AND(t0.c1)))OR(t0.c1)))OR(vt1.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 END IN (((((((((vt1.c0)AND(t0.c1)))OR(t0.c1)))OR(vt1.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN vt1.c0 END IN (((((((((vt1.c0)AND(t0.c1)))OR(t0.c1)))OR(vt1.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 END IN (((((((((vt1.c0)AND(t0.c1)))OR(t0.c1)))OR(vt1.c0)))AND(t0.c0)))));
SELECT * FROM t0 WHERE ((NOT (CASE WHEN t0.c2 THEN NULL END))) ORDER BY ((((((t0.c2) NOT NULL))AND(((t0.c2) ISNULL))))OR(((((((((t0.c63)OR(t0.c1)))OR('450857095')))AND(t0.c0)))OR(t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN t0.c2 THEN NULL END))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c2) NOT NULL))AND(((t0.c2) ISNULL))))OR(((((((((t0.c63)OR(t0.c1)))OR('450857095')))AND(t0.c0)))OR(t0.c1)))) ASC);
SELECT * FROM t0 WHERE ((NOT (CASE WHEN t0.c2 THEN NULL END))) ORDER BY ((((((t0.c2) NOT NULL))AND(((t0.c2) ISNULL))))OR(((((((((t0.c63)OR(t0.c1)))OR('450857095')))AND(t0.c0)))OR(t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN t0.c2 THEN NULL END))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c2) NOT NULL))AND(((t0.c2) ISNULL))))OR(((((((((t0.c63)OR(t0.c1)))OR('450857095')))AND(t0.c0)))OR(t0.c1)))) ASC);
SELECT * FROM t0 WHERE ((NOT (CASE WHEN t0.c2 THEN NULL END))) ORDER BY ((((((t0.c2) NOT NULL))AND(((t0.c2) ISNULL))))OR(((((((((t0.c63)OR(t0.c1)))OR('450857095')))AND(t0.c0)))OR(t0.c1)))) ASC;
SELECT * FROM vt1, t0, vt0 WHERE (((t0.c0 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (((t0.c0 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (((t0.c0 COLLATE RTRIM) IS TRUE));
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST((vt0.c0 IN (t0.c63, '-1056977326')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN (t0.c63, '-1056977326')) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST((vt0.c0 IN (t0.c63, '-1056977326')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN (t0.c63, '-1056977326')) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST((vt0.c0 IN (t0.c63, '-1056977326')) AS INTEGER));
SELECT * FROM vt0, vt1, t0 WHERE (((((x'')*(t0.c2)))OR(((vt1.c0)!=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'')*(t0.c2)))OR(((vt1.c0)<>(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (((((x'')*(t0.c2)))OR(((vt1.c0)!=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'')*(t0.c2)))OR(((vt1.c0)<>(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (((((x'')*(t0.c2)))OR(((vt1.c0)!=(vt1.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (HEX(DISTINCT CAST(t0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CAST(t0.c1 AS BLOB))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (HEX(DISTINCT CAST(t0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CAST(t0.c1 AS BLOB))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (HEX(DISTINCT CAST(t0.c1 AS BLOB)));
SELECT COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c0)))&(x'')));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))&(x''))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c0)))&(x'')));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))&(x''))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c0)))&(x'')));
SELECT ALL * FROM vt1, vt0, t0 WHERE ((((t0.c63)) BETWEEN (((t0.c2 IN ()))) AND (((+ (t0.c63)))))) ORDER BY ((((((((((x'6ccb') ISNULL))AND(NULL COLLATE BINARY)))AND(((t0.c63) NOTNULL))))OR(0.13807928246629564)))OR(t0.c63 COLLATE BINARY)) ASC  NULLS FIRST, ((((vt0.c0)%(x'')))<=(((((((((t0.c2)AND(vt1.c0)))AND(t0.c63)))AND(t0.c63)))OR(vt0.c0)))) ASC  NULLS FIRST, UNICODE((- (t0.c63)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63)) BETWEEN (((t0.c2 IN ()))) AND (((+ (t0.c63)))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((((((((x'6ccb') ISNULL))AND(NULL COLLATE BINARY)))AND(((t0.c63) NOTNULL))))OR(0.13807928246629564)))OR(t0.c63 COLLATE BINARY)) ASC  NULLS FIRST, ((((vt0.c0)%(x'')))<=(((((((((t0.c2)AND(vt1.c0)))AND(t0.c63)))AND(t0.c63)))OR(vt0.c0)))) ASC  NULLS FIRST, UNICODE((- (t0.c63))));
SELECT ALL * FROM vt1, vt0, t0 WHERE ((((t0.c63)) BETWEEN (((t0.c2 IN ()))) AND (((+ (t0.c63)))))) ORDER BY ((((((((((x'6ccb') ISNULL))AND(NULL COLLATE BINARY)))AND(((t0.c63) NOTNULL))))OR(0.13807928246629564)))OR(t0.c63 COLLATE BINARY)) ASC  NULLS FIRST, ((((vt0.c0)%(x'')))<=(((((((((t0.c2)AND(vt1.c0)))AND(t0.c63)))AND(t0.c63)))OR(vt0.c0)))) ASC  NULLS FIRST, UNICODE((- (t0.c63)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63)) BETWEEN (((t0.c2 IN ()))) AND (((+ (t0.c63)))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((((((((x'6ccb') ISNULL))AND(NULL COLLATE BINARY)))AND(((t0.c63) NOTNULL))))OR(0.13807928246629564)))OR(t0.c63 COLLATE BINARY)) ASC  NULLS FIRST, ((((vt0.c0)%(x'')))<=(((((((((t0.c2)AND(vt1.c0)))AND(t0.c63)))AND(t0.c63)))OR(vt0.c0)))) ASC  NULLS FIRST, UNICODE((- (t0.c63))));
SELECT ALL * FROM vt1, vt0, t0 WHERE ((((t0.c63)) BETWEEN (((t0.c2 IN ()))) AND (((+ (t0.c63)))))) ORDER BY ((((((((((x'6ccb') ISNULL))AND(NULL COLLATE BINARY)))AND(((t0.c63) NOTNULL))))OR(0.13807928246629564)))OR(t0.c63 COLLATE BINARY)) ASC  NULLS FIRST, ((((vt0.c0)%(x'')))<=(((((((((t0.c2)AND(vt1.c0)))AND(t0.c63)))AND(t0.c63)))OR(vt0.c0)))) ASC  NULLS FIRST, UNICODE((- (t0.c63)));
SELECT ALL COUNT(*) FROM t0 WHERE (((TYPEOF(DISTINCT t0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT t0.c0)) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((TYPEOF(DISTINCT t0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT t0.c0)) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((TYPEOF(DISTINCT t0.c0)) IS FALSE));
SELECT ALL * FROM vt1 NOT INDEXED, vt0, t0 WHERE (LIKELIHOOD(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c63 THEN t0.c2 END, 0.4480382148161639));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c63 THEN t0.c2 END, 0.4480382148161639)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1 NOT INDEXED, vt0, t0 WHERE (LIKELIHOOD(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c63 THEN t0.c2 END, 0.4480382148161639));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c63 THEN t0.c2 END, 0.4480382148161639)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1 NOT INDEXED, vt0, t0 WHERE (LIKELIHOOD(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c63 THEN t0.c2 END, 0.4480382148161639));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((vt1.c0, t0.c1, t0.c63)) NOT BETWEEN ((CAST(t0.c2 AS REAL), vt1.c0, ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))) AND ((TRIM(DISTINCT t0.c0, 1e500), vt0.c0 COLLATE NOCASE, ((t0.c63) NOT BETWEEN (t0.c63) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, t0.c1, t0.c63)) NOT BETWEEN ((CAST(t0.c2 AS REAL), vt1.c0, ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))) AND ((TRIM(DISTINCT t0.c0, 1e500), vt0.c0 COLLATE NOCASE, ((t0.c63) NOT BETWEEN (t0.c63) AND (vt0.c0)))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((vt1.c0, t0.c1, t0.c63)) NOT BETWEEN ((CAST(t0.c2 AS REAL), vt1.c0, ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))) AND ((TRIM(DISTINCT t0.c0, 1e500), vt0.c0 COLLATE NOCASE, ((t0.c63) NOT BETWEEN (t0.c63) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, t0.c1, t0.c63)) NOT BETWEEN ((CAST(t0.c2 AS REAL), vt1.c0, ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))) AND ((TRIM(DISTINCT t0.c0, 1e500), vt0.c0 COLLATE NOCASE, ((t0.c63) NOT BETWEEN (t0.c63) AND (vt0.c0)))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((vt1.c0, t0.c1, t0.c63)) NOT BETWEEN ((CAST(t0.c2 AS REAL), vt1.c0, ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))) AND ((TRIM(DISTINCT t0.c0, 1e500), vt0.c0 COLLATE NOCASE, ((t0.c63) NOT BETWEEN (t0.c63) AND (vt0.c0))))));
SELECT * FROM vt1 INNER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN t0 ON ((((NULL)GLOB(t0.c0))) BETWEEN (t0.c1 COLLATE NOCASE) AND (CAST(t0.c0 AS REAL))) WHERE (((((vt1.c0)IS NOT(t0.c1)))*(''))) ORDER BY CAST(((t0.c63) IS FALSE) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS NOT(t0.c1)))*(''))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN t0 ON ((((NULL)GLOB(t0.c0))) BETWEEN (t0.c1 COLLATE NOCASE) AND (CAST(t0.c0 AS REAL))) ORDER BY CAST(((t0.c63) IS FALSE) AS NUMERIC));
SELECT * FROM vt1 INNER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN t0 ON ((((NULL)GLOB(t0.c0))) BETWEEN (t0.c1 COLLATE NOCASE) AND (CAST(t0.c0 AS REAL))) WHERE (((((vt1.c0)IS NOT(t0.c1)))*(''))) ORDER BY CAST(((t0.c63) IS FALSE) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS NOT(t0.c1)))*(''))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN t0 ON ((((NULL)GLOB(t0.c0))) BETWEEN (t0.c1 COLLATE NOCASE) AND (CAST(t0.c0 AS REAL))) ORDER BY CAST(((t0.c63) IS FALSE) AS NUMERIC));
SELECT * FROM vt1 INNER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN t0 ON ((((NULL)GLOB(t0.c0))) BETWEEN (t0.c1 COLLATE NOCASE) AND (CAST(t0.c0 AS REAL))) WHERE (((((vt1.c0)IS NOT(t0.c1)))*(''))) ORDER BY CAST(((t0.c63) IS FALSE) AS NUMERIC);
SELECT * FROM t0, vt1 WHERE (((((CAST(vt1.c0 AS INTEGER))OR(((((t0.c0)AND(vt1.c0)))OR(t0.c63)))))AND((((t0.c1))=((t0.c2)))))) ORDER BY ((((t0.c0) BETWEEN (t0.c63) AND (x'')))<<(vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c0 AS INTEGER))OR(((((t0.c0)AND(vt1.c0)))OR(t0.c63)))))AND((((t0.c1))=((t0.c2)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c0) BETWEEN (t0.c63) AND (x'')))<<(vt1.c0)));
SELECT * FROM t0, vt1 WHERE (((((CAST(vt1.c0 AS INTEGER))OR(((((t0.c0)AND(vt1.c0)))OR(t0.c63)))))AND((((t0.c1))=((t0.c2)))))) ORDER BY ((((t0.c0) BETWEEN (t0.c63) AND (x'')))<<(vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c0 AS INTEGER))OR(((((t0.c0)AND(vt1.c0)))OR(t0.c63)))))AND((((t0.c1))=((t0.c2)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c0) BETWEEN (t0.c63) AND (x'')))<<(vt1.c0)));
SELECT * FROM t0, vt1 WHERE (((((CAST(vt1.c0 AS INTEGER))OR(((((t0.c0)AND(vt1.c0)))OR(t0.c63)))))AND((((t0.c1))=((t0.c2)))))) ORDER BY ((((t0.c0) BETWEEN (t0.c63) AND (x'')))<<(vt1.c0));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((((t0.c0)) BETWEEN (((((t0.c0))=((t0.c1))))) AND ((((vt0.c0) BETWEEN (t0.c2) AND (t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN (((((t0.c0))=((t0.c1))))) AND ((((vt0.c0) BETWEEN (t0.c2) AND (t0.c2)))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((((t0.c0)) BETWEEN (((((t0.c0))=((t0.c1))))) AND ((((vt0.c0) BETWEEN (t0.c2) AND (t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN (((((t0.c0))=((t0.c1))))) AND ((((vt0.c0) BETWEEN (t0.c2) AND (t0.c2)))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((((t0.c0)) BETWEEN (((((t0.c0))=((t0.c1))))) AND ((((vt0.c0) BETWEEN (t0.c2) AND (t0.c2))))));
SELECT * FROM t0, vt1, vt0 WHERE (((CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c1 END) ISNULL)) ORDER BY CAST(((t0.c0)>(NULL)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c1 END) ISNULL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CAST(((t0.c0)>(NULL)) AS REAL) DESC  NULLS FIRST);
SELECT * FROM t0, vt1, vt0 WHERE (((CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c1 END) ISNULL)) ORDER BY CAST(((t0.c0)>(NULL)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c1 END) ISNULL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CAST(((t0.c0)>(NULL)) AS REAL) DESC  NULLS FIRST);
SELECT * FROM t0, vt1, vt0 WHERE (((CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c1 END) ISNULL)) ORDER BY CAST(((t0.c0)>(NULL)) AS REAL) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), ((((((((x'')AND(vt0.c0)))OR(NULL)))OR(0.7232658417976504)))OR(vt0.c0))))<>((LIKELIHOOD(vt0.c0, 0.48461369871962523), (vt0.c0 IN ()), '-1165126215', ((vt0.c0)LIKE(vt0.c0)), json_patch(vt0.c0, x''))))) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST, CASE WHEN LOWER(DISTINCT vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c0))==((vt0.c0))) THEN '817099627' WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS NUMERIC) ELSE ((vt0.c0) BETWEEN ('') AND (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE BINARY, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), ((((((((x'')AND(vt0.c0)))OR(NULL)))OR(0.7232658417976504)))OR(vt0.c0))))<>((LIKELIHOOD(vt0.c0, 0.48461369871962523), (vt0.c0 IN ()), '-1165126215', ((vt0.c0)LIKE(vt0.c0)), json_patch(vt0.c0, x''))))) IS TRUE)  as count FROM vt0 ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST, CASE WHEN LOWER(DISTINCT vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c0))=((vt0.c0))) THEN '817099627' WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS NUMERIC) ELSE ((vt0.c0) BETWEEN ('') AND (vt0.c0)) END);
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), ((((((((x'')AND(vt0.c0)))OR(NULL)))OR(0.7232658417976504)))OR(vt0.c0))))<>((LIKELIHOOD(vt0.c0, 0.48461369871962523), (vt0.c0 IN ()), '-1165126215', ((vt0.c0)LIKE(vt0.c0)), json_patch(vt0.c0, x''))))) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST, CASE WHEN LOWER(DISTINCT vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c0))==((vt0.c0))) THEN '817099627' WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS NUMERIC) ELSE ((vt0.c0) BETWEEN ('') AND (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE BINARY, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), ((((((((x'')AND(vt0.c0)))OR(NULL)))OR(0.7232658417976504)))OR(vt0.c0))))<>((LIKELIHOOD(vt0.c0, 0.48461369871962523), (vt0.c0 IN ()), '-1165126215', ((vt0.c0)LIKE(vt0.c0)), json_patch(vt0.c0, x''))))) IS TRUE)  as count FROM vt0 ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST, CASE WHEN LOWER(DISTINCT vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c0))=((vt0.c0))) THEN '817099627' WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS NUMERIC) ELSE ((vt0.c0) BETWEEN ('') AND (vt0.c0)) END);
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), ((((((((x'')AND(vt0.c0)))OR(NULL)))OR(0.7232658417976504)))OR(vt0.c0))))<>((LIKELIHOOD(vt0.c0, 0.48461369871962523), (vt0.c0 IN ()), '-1165126215', ((vt0.c0)LIKE(vt0.c0)), json_patch(vt0.c0, x''))))) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST, CASE WHEN LOWER(DISTINCT vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c0))==((vt0.c0))) THEN '817099627' WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS NUMERIC) ELSE ((vt0.c0) BETWEEN ('') AND (vt0.c0)) END;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)/(vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)/(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)/(vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)/(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)/(vt1.c0))) IS TRUE));
SELECT * FROM vt0 INNER JOIN vt1 ON CAST(((vt1.c0) IS FALSE) AS NUMERIC) WHERE (CAST(((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS REAL)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CAST(((vt1.c0) IS FALSE) AS NUMERIC) ORDER BY vt0.c0);
SELECT * FROM vt0 INNER JOIN vt1 ON CAST(((vt1.c0) IS FALSE) AS NUMERIC) WHERE (CAST(((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS REAL)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CAST(((vt1.c0) IS FALSE) AS NUMERIC) ORDER BY vt0.c0);
SELECT * FROM vt0 INNER JOIN vt1 ON CAST(((vt1.c0) IS FALSE) AS NUMERIC) WHERE (CAST(((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS REAL)) ORDER BY vt0.c0;
SELECT COUNT(*) FROM vt1, t0 WHERE ((((t0.c1)) NOT BETWEEN (('')) AND ((CAST(t0.c0 AS REAL))))) ORDER BY ((t0.c2) BETWEEN (((t0.c63) BETWEEN (vt1.c0) AND (t0.c2))) AND (t0.c63 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN (('')) AND ((CAST(t0.c0 AS REAL))))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((t0.c2) BETWEEN (((t0.c63) BETWEEN (vt1.c0) AND (t0.c2))) AND (t0.c63 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((t0.c1)) NOT BETWEEN (('')) AND ((CAST(t0.c0 AS REAL))))) ORDER BY ((t0.c2) BETWEEN (((t0.c63) BETWEEN (vt1.c0) AND (t0.c2))) AND (t0.c63 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN (('')) AND ((CAST(t0.c0 AS REAL))))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((t0.c2) BETWEEN (((t0.c63) BETWEEN (vt1.c0) AND (t0.c2))) AND (t0.c63 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((t0.c1)) NOT BETWEEN (('')) AND ((CAST(t0.c0 AS REAL))))) ORDER BY ((t0.c2) BETWEEN (((t0.c63) BETWEEN (vt1.c0) AND (t0.c2))) AND (t0.c63 COLLATE RTRIM)) ASC;
SELECT * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) BETWEEN ((((vt1.c0, NULL, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0)||(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL)) BETWEEN ((((vt1.c0, NULL, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0)||(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) BETWEEN ((((vt1.c0, NULL, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0)||(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL)) BETWEEN ((((vt1.c0, NULL, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0)||(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) BETWEEN ((((vt1.c0, NULL, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0)||(vt1.c0)))));
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) BETWEEN (TYPEOF(vt1.c0)) AND (((vt1.c0)>=(NULL))))) ORDER BY ((('719352785'))<=((LIKE(vt1.c0, vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT)) BETWEEN (TYPEOF(vt1.c0)) AND (((vt1.c0)>=(NULL))))) IS TRUE)  as count FROM vt1 ORDER BY ((('719352785'))<=((LIKE(vt1.c0, vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) BETWEEN (TYPEOF(vt1.c0)) AND (((vt1.c0)>=(NULL))))) ORDER BY ((('719352785'))<=((LIKE(vt1.c0, vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT)) BETWEEN (TYPEOF(vt1.c0)) AND (((vt1.c0)>=(NULL))))) IS TRUE)  as count FROM vt1 ORDER BY ((('719352785'))<=((LIKE(vt1.c0, vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) BETWEEN (TYPEOF(vt1.c0)) AND (((vt1.c0)>=(NULL))))) ORDER BY ((('719352785'))<=((LIKE(vt1.c0, vt1.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON json_array((((t0.c2)) BETWEEN ((t0.c63)) AND ((t0.c0))), x'') WHERE ((+ ((- (vt1.c0))))) ORDER BY IFNULL(((t0.c0)<<(vt0.c0)), CAST(t0.c0 AS INTEGER)) DESC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE)<=(((t0.c0)<<(t0.c1)))) ASC  NULLS LAST, ((((((((((((vt1.c0)OR(t0.c63)))AND(x'')))AND((NULL IN ()))))OR(json_array_length(t0.c63, t0.c63))))OR(((t0.c63) BETWEEN (t0.c1) AND (t0.c0)))))OR(((t0.c63)LIKE(t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((+ ((- (vt1.c0))))) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON json_array((((t0.c2)) BETWEEN ((t0.c63)) AND ((t0.c0))), x'') ORDER BY IFNULL(((t0.c0)<<(vt0.c0)), CAST(t0.c0 AS INTEGER)) DESC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE)<=(((t0.c0)<<(t0.c1)))) ASC  NULLS LAST, ((((((((((((vt1.c0)OR(t0.c63)))AND(x'')))AND((NULL IN ()))))OR(json_array_length(t0.c63, t0.c63))))OR(((t0.c63) BETWEEN (t0.c1) AND (t0.c0)))))OR(((t0.c63)LIKE(t0.c2)))) DESC);
SELECT COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON json_array((((t0.c2)) BETWEEN ((t0.c63)) AND ((t0.c0))), x'') WHERE ((+ ((- (vt1.c0))))) ORDER BY IFNULL(((t0.c0)<<(vt0.c0)), CAST(t0.c0 AS INTEGER)) DESC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE)<=(((t0.c0)<<(t0.c1)))) ASC  NULLS LAST, ((((((((((((vt1.c0)OR(t0.c63)))AND(x'')))AND((NULL IN ()))))OR(json_array_length(t0.c63, t0.c63))))OR(((t0.c63) BETWEEN (t0.c1) AND (t0.c0)))))OR(((t0.c63)LIKE(t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((+ ((- (vt1.c0))))) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON json_array((((t0.c2)) BETWEEN ((t0.c63)) AND ((t0.c0))), x'') ORDER BY IFNULL(((t0.c0)<<(vt0.c0)), CAST(t0.c0 AS INTEGER)) DESC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE)<=(((t0.c0)<<(t0.c1)))) ASC  NULLS LAST, ((((((((((((vt1.c0)OR(t0.c63)))AND(x'')))AND((NULL IN ()))))OR(json_array_length(t0.c63, t0.c63))))OR(((t0.c63) BETWEEN (t0.c1) AND (t0.c0)))))OR(((t0.c63)LIKE(t0.c2)))) DESC);
SELECT COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON json_array((((t0.c2)) BETWEEN ((t0.c63)) AND ((t0.c0))), x'') WHERE ((+ ((- (vt1.c0))))) ORDER BY IFNULL(((t0.c0)<<(vt0.c0)), CAST(t0.c0 AS INTEGER)) DESC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE)<=(((t0.c0)<<(t0.c1)))) ASC  NULLS LAST, ((((((((((((vt1.c0)OR(t0.c63)))AND(x'')))AND((NULL IN ()))))OR(json_array_length(t0.c63, t0.c63))))OR(((t0.c63) BETWEEN (t0.c1) AND (t0.c0)))))OR(((t0.c63)LIKE(t0.c2)))) DESC;
SELECT COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON ((((t0.c63)LIKE(t0.c0)))=(CAST(t0.c1 AS INTEGER))) WHERE (((t0.c2 COLLATE BINARY)=(CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN 0.508528115472128 THEN vt1.c0 WHEN t0.c1 THEN t0.c0 ELSE '953335711' END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE BINARY)=(CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN 0.508528115472128 THEN vt1.c0 WHEN t0.c1 THEN t0.c0 ELSE '953335711' END))) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON ((((t0.c63)LIKE(t0.c0)))==(CAST(t0.c1 AS INTEGER))));
SELECT COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON ((((t0.c63)LIKE(t0.c0)))=(CAST(t0.c1 AS INTEGER))) WHERE (((t0.c2 COLLATE BINARY)=(CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN 0.508528115472128 THEN vt1.c0 WHEN t0.c1 THEN t0.c0 ELSE '953335711' END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE BINARY)=(CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN 0.508528115472128 THEN vt1.c0 WHEN t0.c1 THEN t0.c0 ELSE '953335711' END))) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON ((((t0.c63)LIKE(t0.c0)))==(CAST(t0.c1 AS INTEGER))));
SELECT COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON ((((t0.c63)LIKE(t0.c0)))=(CAST(t0.c1 AS INTEGER))) WHERE (((t0.c2 COLLATE BINARY)=(CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN 0.508528115472128 THEN vt1.c0 WHEN t0.c1 THEN t0.c0 ELSE '953335711' END)));
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON CASE WHEN (((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))) THEN vt1.c0 COLLATE NOCASE WHEN t0.c2 COLLATE BINARY THEN (- (t0.c63)) WHEN '562436614' THEN (t0.c63 IN ()) ELSE (vt1.c0 IN ()) END WHERE ((((vt1.c0, ((((t0.c2)OR(t0.c63)))AND(t0.c63)), ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))))<=((CAST(t0.c2 AS NUMERIC), ((((((((t0.c2)AND(t0.c0)))OR(t0.c2)))OR(vt1.c0)))AND(t0.c2)), CAST(0Xffffffffe0784725 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, ((((t0.c2)OR(t0.c63)))AND(t0.c63)), ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))))<=((CAST(t0.c2 AS NUMERIC), ((((((((t0.c2)AND(t0.c0)))OR(t0.c2)))OR(vt1.c0)))AND(t0.c2)), CAST(0Xffffffffe0784725 AS TEXT))))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON CASE WHEN (((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))) THEN vt1.c0 COLLATE NOCASE WHEN t0.c2 COLLATE BINARY THEN (- (t0.c63)) WHEN '562436614' THEN (t0.c63 IN ()) ELSE (vt1.c0 IN ()) END);
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON CASE WHEN (((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))) THEN vt1.c0 COLLATE NOCASE WHEN t0.c2 COLLATE BINARY THEN (- (t0.c63)) WHEN '562436614' THEN (t0.c63 IN ()) ELSE (vt1.c0 IN ()) END WHERE ((((vt1.c0, ((((t0.c2)OR(t0.c63)))AND(t0.c63)), ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))))<=((CAST(t0.c2 AS NUMERIC), ((((((((t0.c2)AND(t0.c0)))OR(t0.c2)))OR(vt1.c0)))AND(t0.c2)), CAST(0Xffffffffe0784725 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, ((((t0.c2)OR(t0.c63)))AND(t0.c63)), ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))))<=((CAST(t0.c2 AS NUMERIC), ((((((((t0.c2)AND(t0.c0)))OR(t0.c2)))OR(vt1.c0)))AND(t0.c2)), CAST(0Xffffffffe0784725 AS TEXT))))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON CASE WHEN (((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))) THEN vt1.c0 COLLATE NOCASE WHEN t0.c2 COLLATE BINARY THEN (- (t0.c63)) WHEN '562436614' THEN (t0.c63 IN ()) ELSE (vt1.c0 IN ()) END);
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON CASE WHEN (((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))) THEN vt1.c0 COLLATE NOCASE WHEN t0.c2 COLLATE BINARY THEN (- (t0.c63)) WHEN '562436614' THEN (t0.c63 IN ()) ELSE (vt1.c0 IN ()) END WHERE ((((vt1.c0, ((((t0.c2)OR(t0.c63)))AND(t0.c63)), ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))))<=((CAST(t0.c2 AS NUMERIC), ((((((((t0.c2)AND(t0.c0)))OR(t0.c2)))OR(vt1.c0)))AND(t0.c2)), CAST(0Xffffffffe0784725 AS TEXT)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY ((CAST(x'5239' AS REAL)) NOT BETWEEN (LTRIM(vt0.c0)) AND (CAST(vt1.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(x'5239' AS REAL)) NOT BETWEEN (LTRIM(vt0.c0)) AND (CAST(vt1.c0 AS REAL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY ((CAST(x'5239' AS REAL)) NOT BETWEEN (LTRIM(vt0.c0)) AND (CAST(vt1.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(x'5239' AS REAL)) NOT BETWEEN (LTRIM(vt0.c0)) AND (CAST(vt1.c0 AS REAL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY ((CAST(x'5239' AS REAL)) NOT BETWEEN (LTRIM(vt0.c0)) AND (CAST(vt1.c0 AS REAL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY CASE WHEN x'' THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt0.c0)*(vt0.c0)) END  NULLS FIRST, (NOT (((vt0.c0)LIKE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN x'' THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt0.c0)*(vt0.c0)) END  NULLS FIRST, (NOT (((vt0.c0)LIKE(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY CASE WHEN x'' THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt0.c0)*(vt0.c0)) END  NULLS FIRST, (NOT (((vt0.c0)LIKE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN x'' THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt0.c0)*(vt0.c0)) END  NULLS FIRST, (NOT (((vt0.c0)LIKE(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY CASE WHEN x'' THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt0.c0)*(vt0.c0)) END  NULLS FIRST, (NOT (((vt0.c0)LIKE(vt0.c0))));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ((((vt1.c0))>=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN ((((vt1.c0))>=((vt1.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ((((vt1.c0))>=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN ((((vt1.c0))>=((vt1.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ((((vt1.c0))>=((vt1.c0))))));
SELECT * FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE)) ORDER BY ((vt0.c0 COLLATE NOCASE)<<(vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)<<(vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE)) ORDER BY ((vt0.c0 COLLATE NOCASE)<<(vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)<<(vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE)) ORDER BY ((vt0.c0 COLLATE NOCASE)<<(vt0.c0 COLLATE BINARY));
SELECT * FROM vt0 WHERE ((((((vt0.c0)AND(0.45101144750905664)))AND(vt0.c0)) IN (x''))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(0.45101144750905664)))AND(vt0.c0)) IN (x''))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((vt0.c0)AND(0.45101144750905664)))AND(vt0.c0)) IN (x''))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(0.45101144750905664)))AND(vt0.c0)) IN (x''))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((vt0.c0)AND(0.45101144750905664)))AND(vt0.c0)) IN (x''))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT * FROM t0 CROSS JOIN vt0 ON LIKELY(((vt1.c0) NOT NULL)) INNER JOIN vt1 ON ((((vt0.c0)-(t0.c63)))+(((vt1.c0)==('b*')))) WHERE (2.67213681E8);
SELECT SUM(count) FROM (SELECT ALL ((2.67213681E8) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON LIKELY(((vt1.c0) NOT NULL)) INNER JOIN vt1 ON ((((vt0.c0)-(t0.c63)))+(((vt1.c0)=('b*')))));
SELECT * FROM t0 CROSS JOIN vt0 ON LIKELY(((vt1.c0) NOT NULL)) INNER JOIN vt1 ON ((((vt0.c0)-(t0.c63)))+(((vt1.c0)==('b*')))) WHERE (2.67213681E8);
SELECT SUM(count) FROM (SELECT ALL ((2.67213681E8) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON LIKELY(((vt1.c0) NOT NULL)) INNER JOIN vt1 ON ((((vt0.c0)-(t0.c63)))+(((vt1.c0)=('b*')))));
SELECT * FROM t0 CROSS JOIN vt0 ON LIKELY(((vt1.c0) NOT NULL)) INNER JOIN vt1 ON ((((vt0.c0)-(t0.c63)))+(((vt1.c0)==('b*')))) WHERE (2.67213681E8);
SELECT * FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((json_insert(t0.c0, t0.c1, t0.c2))) AND ((((((t0.c63)AND(t0.c2)))AND(t0.c63))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN ((json_insert(t0.c0, t0.c1, t0.c2))) AND ((((((t0.c63)AND(t0.c2)))AND(t0.c63)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((json_insert(t0.c0, t0.c1, t0.c2))) AND ((((((t0.c63)AND(t0.c2)))AND(t0.c63))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN ((json_insert(t0.c0, t0.c1, t0.c2))) AND ((((((t0.c63)AND(t0.c2)))AND(t0.c63)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt0 WHERE (CAST(json_valid(vt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_valid(vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(json_valid(vt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_valid(vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(json_valid(vt0.c0) AS BLOB));
SELECT * FROM t0 FULL OUTER JOIN vt1 ON NULL WHERE ((~ ((((t0.c2))>=((t0.c63)))))) ORDER BY ((((((((((((((((((((-8.69932166E8)AND(t0.c2)))OR(t0.c1)))OR(ABS(DISTINCT vt1.c0))))AND(CAST(vt1.c0 AS TEXT))))OR(CAST(t0.c63 AS BLOB))))AND(vt1.c0 COLLATE BINARY)))OR(CASE vt1.c0  WHEN t0.c2 THEN x'' WHEN t0.c0 THEN t0.c2 WHEN 0.7082937779746421 THEN t0.c0 END)))OR(((t0.c1) NOT BETWEEN (t0.c63) AND (vt1.c0)))))AND(((t0.c2)!=(t0.c0)))))OR(CAST(t0.c2 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((((t0.c2))>=((t0.c63)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON NULL ORDER BY ((((((((((((((((((((-8.69932166E8)AND(t0.c2)))OR(t0.c1)))OR(ABS(DISTINCT vt1.c0))))AND(CAST(vt1.c0 AS TEXT))))OR(CAST(t0.c63 AS BLOB))))AND(vt1.c0 COLLATE BINARY)))OR(CASE vt1.c0  WHEN t0.c2 THEN x'' WHEN t0.c0 THEN t0.c2 WHEN 0.7082937779746421 THEN t0.c0 END)))OR(((t0.c1) NOT BETWEEN (t0.c63) AND (vt1.c0)))))AND(((t0.c2)!=(t0.c0)))))OR(CAST(t0.c2 AS BLOB)))  NULLS LAST);
SELECT * FROM t0 FULL OUTER JOIN vt1 ON NULL WHERE ((~ ((((t0.c2))>=((t0.c63)))))) ORDER BY ((((((((((((((((((((-8.69932166E8)AND(t0.c2)))OR(t0.c1)))OR(ABS(DISTINCT vt1.c0))))AND(CAST(vt1.c0 AS TEXT))))OR(CAST(t0.c63 AS BLOB))))AND(vt1.c0 COLLATE BINARY)))OR(CASE vt1.c0  WHEN t0.c2 THEN x'' WHEN t0.c0 THEN t0.c2 WHEN 0.7082937779746421 THEN t0.c0 END)))OR(((t0.c1) NOT BETWEEN (t0.c63) AND (vt1.c0)))))AND(((t0.c2)!=(t0.c0)))))OR(CAST(t0.c2 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((((t0.c2))>=((t0.c63)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON NULL ORDER BY ((((((((((((((((((((-8.69932166E8)AND(t0.c2)))OR(t0.c1)))OR(ABS(DISTINCT vt1.c0))))AND(CAST(vt1.c0 AS TEXT))))OR(CAST(t0.c63 AS BLOB))))AND(vt1.c0 COLLATE BINARY)))OR(CASE vt1.c0  WHEN t0.c2 THEN x'' WHEN t0.c0 THEN t0.c2 WHEN 0.7082937779746421 THEN t0.c0 END)))OR(((t0.c1) NOT BETWEEN (t0.c63) AND (vt1.c0)))))AND(((t0.c2)!=(t0.c0)))))OR(CAST(t0.c2 AS BLOB)))  NULLS LAST);
SELECT * FROM t0 FULL OUTER JOIN vt1 ON NULL WHERE ((~ ((((t0.c2))>=((t0.c63)))))) ORDER BY ((((((((((((((((((((-8.69932166E8)AND(t0.c2)))OR(t0.c1)))OR(ABS(DISTINCT vt1.c0))))AND(CAST(vt1.c0 AS TEXT))))OR(CAST(t0.c63 AS BLOB))))AND(vt1.c0 COLLATE BINARY)))OR(CASE vt1.c0  WHEN t0.c2 THEN x'' WHEN t0.c0 THEN t0.c2 WHEN 0.7082937779746421 THEN t0.c0 END)))OR(((t0.c1) NOT BETWEEN (t0.c63) AND (vt1.c0)))))AND(((t0.c2)!=(t0.c0)))))OR(CAST(t0.c2 AS BLOB)))  NULLS LAST;
SELECT * FROM t0 WHERE ((((((t0.c63))<>((t0.c2))))<=(x'5e71415c'))) ORDER BY (((t0.c1, t0.c2, t0.c63)) BETWEEN ((CASE t0.c1  WHEN t0.c2 THEN t0.c63 ELSE t0.c63 END, t0.c63, (((t0.c2)) NOT BETWEEN ((0X671ac930)) AND ((t0.c1))))) AND ((((x'b56c') BETWEEN (t0.c2) AND (t0.c1)), (t0.c1 IN ()), ((t0.c0)>=(t0.c63))))) ASC  NULLS LAST, (- (t0.c1)) COLLATE RTRIM ASC, ((((t0.c2) NOT NULL))-(((t0.c2)&(t0.c0))));
SELECT SUM(count) FROM (SELECT (((((((t0.c63))<>((t0.c2))))<=(x'5e71415c'))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1, t0.c2, t0.c63)) BETWEEN ((CASE t0.c1  WHEN t0.c2 THEN t0.c63 ELSE t0.c63 END, t0.c63, (((t0.c2)) NOT BETWEEN ((0X671ac930)) AND ((t0.c1))))) AND ((((x'b56c') BETWEEN (t0.c2) AND (t0.c1)), (t0.c1 IN ()), ((t0.c0)>=(t0.c63))))) ASC  NULLS LAST, (- (t0.c1)) COLLATE RTRIM ASC, ((((t0.c2) NOT NULL))-(((t0.c2)&(t0.c0)))));
SELECT * FROM t0 WHERE ((((((t0.c63))<>((t0.c2))))<=(x'5e71415c'))) ORDER BY (((t0.c1, t0.c2, t0.c63)) BETWEEN ((CASE t0.c1  WHEN t0.c2 THEN t0.c63 ELSE t0.c63 END, t0.c63, (((t0.c2)) NOT BETWEEN ((0X671ac930)) AND ((t0.c1))))) AND ((((x'b56c') BETWEEN (t0.c2) AND (t0.c1)), (t0.c1 IN ()), ((t0.c0)>=(t0.c63))))) ASC  NULLS LAST, (- (t0.c1)) COLLATE RTRIM ASC, ((((t0.c2) NOT NULL))-(((t0.c2)&(t0.c0))));
SELECT SUM(count) FROM (SELECT (((((((t0.c63))<>((t0.c2))))<=(x'5e71415c'))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1, t0.c2, t0.c63)) BETWEEN ((CASE t0.c1  WHEN t0.c2 THEN t0.c63 ELSE t0.c63 END, t0.c63, (((t0.c2)) NOT BETWEEN ((0X671ac930)) AND ((t0.c1))))) AND ((((x'b56c') BETWEEN (t0.c2) AND (t0.c1)), (t0.c1 IN ()), ((t0.c0)>=(t0.c63))))) ASC  NULLS LAST, (- (t0.c1)) COLLATE RTRIM ASC, ((((t0.c2) NOT NULL))-(((t0.c2)&(t0.c0)))));
SELECT * FROM t0 WHERE ((((((t0.c63))<>((t0.c2))))<=(x'5e71415c'))) ORDER BY (((t0.c1, t0.c2, t0.c63)) BETWEEN ((CASE t0.c1  WHEN t0.c2 THEN t0.c63 ELSE t0.c63 END, t0.c63, (((t0.c2)) NOT BETWEEN ((0X671ac930)) AND ((t0.c1))))) AND ((((x'b56c') BETWEEN (t0.c2) AND (t0.c1)), (t0.c1 IN ()), ((t0.c0)>=(t0.c63))))) ASC  NULLS LAST, (- (t0.c1)) COLLATE RTRIM ASC, ((((t0.c2) NOT NULL))-(((t0.c2)&(t0.c0))));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((t0.c1) NOTNULL))<<(((t0.c63) IS FALSE)))) ORDER BY CASE ((vt1.c0)!=(t0.c2))  WHEN t0.c0 COLLATE RTRIM THEN (~ (t0.c63)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOTNULL))<<(((t0.c63) IS FALSE)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CASE ((vt1.c0)<>(t0.c2))  WHEN t0.c0 COLLATE RTRIM THEN (~ (t0.c63)) END ASC);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((t0.c1) NOTNULL))<<(((t0.c63) IS FALSE)))) ORDER BY CASE ((vt1.c0)!=(t0.c2))  WHEN t0.c0 COLLATE RTRIM THEN (~ (t0.c63)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOTNULL))<<(((t0.c63) IS FALSE)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CASE ((vt1.c0)<>(t0.c2))  WHEN t0.c0 COLLATE RTRIM THEN (~ (t0.c63)) END ASC);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((t0.c1) NOTNULL))<<(((t0.c63) IS FALSE)))) ORDER BY CASE ((vt1.c0)!=(t0.c2))  WHEN t0.c0 COLLATE RTRIM THEN (~ (t0.c63)) END ASC;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(t0.c63 AS NUMERIC) COLLATE NOCASE) ORDER BY 'H|~';
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c63 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY 'H|~');
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(t0.c63 AS NUMERIC) COLLATE NOCASE) ORDER BY 'H|~';
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c63 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY 'H|~');
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(t0.c63 AS NUMERIC) COLLATE NOCASE) ORDER BY 'H|~';
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((- (LOWER('?')))) ORDER BY (json_remove(vt1.c0, t0.c2) IN ((t0.c63 IN ()), NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (LOWER('?')))) IS TRUE)  as count FROM t0, vt1 ORDER BY (json_remove(vt1.c0, t0.c2) IN ((t0.c63 IN ()), NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((- (LOWER('?')))) ORDER BY (json_remove(vt1.c0, t0.c2) IN ((t0.c63 IN ()), NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (LOWER('?')))) IS TRUE)  as count FROM t0, vt1 ORDER BY (json_remove(vt1.c0, t0.c2) IN ((t0.c63 IN ()), NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((6.18218815E8)>=(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((6.18218815E8)>=(x''))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((6.18218815E8)>=(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((6.18218815E8)>=(x''))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((6.18218815E8)>=(x'')));
SELECT ALL * FROM vt0, vt1 WHERE (((CASE ''  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT NULL)) ORDER BY '1789385288' COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((CASE ''  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY '1789385288' COLLATE NOCASE);
SELECT ALL * FROM vt0, vt1 WHERE (((CASE ''  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT NULL)) ORDER BY '1789385288' COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((CASE ''  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY '1789385288' COLLATE NOCASE);
SELECT ALL * FROM vt0, vt1 WHERE (((CASE ''  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT NULL)) ORDER BY '1789385288' COLLATE NOCASE;
SELECT ALL * FROM vt0, vt1 WHERE ((((((((((((((((((vt1.c0)AND(vt0.c0)))AND('')))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((((((((((vt1.c0)AND(vt0.c0)))AND('')))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((((((((((((((((vt1.c0)AND(vt0.c0)))AND('')))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((((((((((vt1.c0)AND(vt0.c0)))AND('')))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((((((((((((((((vt1.c0)AND(vt0.c0)))AND('')))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt0, vt1 NOT INDEXED, t0 WHERE (CASE WHEN t0.c0 THEN t0.c1 END COLLATE BINARY) ORDER BY (((vt1.c0)) NOT BETWEEN (((t0.c63 IN (t0.c63, vt1.c0)))) AND ((((((((((t0.c63)AND(t0.c63)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c63))))) ASC  NULLS LAST, ((((((((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)))OR(CASE t0.c63  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((t0.c0)-(t0.c1)))))AND(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)))))AND(((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN t0.c1 END COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((vt1.c0)) NOT BETWEEN (((t0.c63 IN (t0.c63, vt1.c0)))) AND ((((((((((t0.c63)AND(t0.c63)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c63))))) ASC  NULLS LAST, ((((((((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)))OR(CASE t0.c63  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((t0.c0)-(t0.c1)))))AND(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)))))AND(((vt1.c0) ISNULL))));
SELECT COUNT(*) FROM vt0, vt1 NOT INDEXED, t0 WHERE (CASE WHEN t0.c0 THEN t0.c1 END COLLATE BINARY) ORDER BY (((vt1.c0)) NOT BETWEEN (((t0.c63 IN (t0.c63, vt1.c0)))) AND ((((((((((t0.c63)AND(t0.c63)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c63))))) ASC  NULLS LAST, ((((((((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)))OR(CASE t0.c63  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((t0.c0)-(t0.c1)))))AND(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)))))AND(((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN t0.c1 END COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((vt1.c0)) NOT BETWEEN (((t0.c63 IN (t0.c63, vt1.c0)))) AND ((((((((((t0.c63)AND(t0.c63)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c63))))) ASC  NULLS LAST, ((((((((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)))OR(CASE t0.c63  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((t0.c0)-(t0.c1)))))AND(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)))))AND(((vt1.c0) ISNULL))));
SELECT COUNT(*) FROM vt0, vt1 NOT INDEXED, t0 WHERE (CASE WHEN t0.c0 THEN t0.c1 END COLLATE BINARY) ORDER BY (((vt1.c0)) NOT BETWEEN (((t0.c63 IN (t0.c63, vt1.c0)))) AND ((((((((((t0.c63)AND(t0.c63)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c63))))) ASC  NULLS LAST, ((((((((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)))OR(CASE t0.c63  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((t0.c0)-(t0.c1)))))AND(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)))))AND(((vt1.c0) ISNULL)));
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN vt1 WHERE (((((t0.c1)>>(t0.c0))) NOT BETWEEN (0x21861a06) AND (load_extension(t0.c63, t0.c2)))) ORDER BY (((CASE WHEN 0.033534005396143596 THEN x'd3a0' END))<=((((t0.c2)<=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)>>(t0.c0))) NOT BETWEEN (0X21861a06) AND (load_extension(t0.c63, t0.c2)))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1 ORDER BY (((CASE WHEN 0.033534005396143596 THEN x'd3a0' END))<=((((t0.c2)<=(t0.c0))))));
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN vt1 WHERE (((((t0.c1)>>(t0.c0))) NOT BETWEEN (0x21861a06) AND (load_extension(t0.c63, t0.c2)))) ORDER BY (((CASE WHEN 0.033534005396143596 THEN x'd3a0' END))<=((((t0.c2)<=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)>>(t0.c0))) NOT BETWEEN (0X21861a06) AND (load_extension(t0.c63, t0.c2)))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1 ORDER BY (((CASE WHEN 0.033534005396143596 THEN x'd3a0' END))<=((((t0.c2)<=(t0.c0))))));
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN vt1 WHERE (((((t0.c1)>>(t0.c0))) NOT BETWEEN (0x21861a06) AND (load_extension(t0.c63, t0.c2)))) ORDER BY (((CASE WHEN 0.033534005396143596 THEN x'd3a0' END))<=((((t0.c2)<=(t0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKE((vt0.c0 IN (vt0.c0, vt0.c0)), vt0.c0 COLLATE RTRIM, '}'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE((vt0.c0 IN (vt0.c0, vt0.c0)), vt0.c0 COLLATE RTRIM, '}')) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKE((vt0.c0 IN (vt0.c0, vt0.c0)), vt0.c0 COLLATE RTRIM, '}'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE((vt0.c0 IN (vt0.c0, vt0.c0)), vt0.c0 COLLATE RTRIM, '}')) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKE((vt0.c0 IN (vt0.c0, vt0.c0)), vt0.c0 COLLATE RTRIM, '}'));
SELECT * FROM vt1, vt0, t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))))==((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))))==((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))))==((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))))==((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))))==((~ (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((0xffffffff83656bb9)*(((vt1.c0)GLOB(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((0Xffffffff83656bb9)*(((vt1.c0)GLOB(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((0xffffffff83656bb9)*(((vt1.c0)GLOB(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((0Xffffffff83656bb9)*(((vt1.c0)GLOB(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((0xffffffff83656bb9)*(((vt1.c0)GLOB(vt1.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0 WHERE (t0.c0) ORDER BY ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))GLOB(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))GLOB(NULL))  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 WHERE (t0.c0) ORDER BY ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))GLOB(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))GLOB(NULL))  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 WHERE (t0.c0) ORDER BY ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))GLOB(NULL))  NULLS LAST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c0) BETWEEN (t0.c2) AND (NULL))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c2) AND (NULL))) IS TRUE)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c0) BETWEEN (t0.c2) AND (NULL))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c2) AND (NULL))) IS TRUE)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c0) BETWEEN (t0.c2) AND (NULL))) IS TRUE));
SELECT COUNT(*) FROM vt0, t0 WHERE ((t0.c1 IN (0.717191551597621)));
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 IN (0.717191551597621))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((t0.c1 IN (0.717191551597621)));
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 IN (0.717191551597621))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((t0.c1 IN (0.717191551597621)));
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY x'5da1b500' ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'5da1b500' ASC);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY x'5da1b500' ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'5da1b500' ASC);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY x'5da1b500' ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0)<=(((vt1.c0) BETWEEN (vt0.c0) AND (NULL))))) ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<=(((vt1.c0) BETWEEN (vt0.c0) AND (NULL))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0)<=(((vt1.c0) BETWEEN (vt0.c0) AND (NULL))))) ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<=(((vt1.c0) BETWEEN (vt0.c0) AND (NULL))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0)<=(((vt1.c0) BETWEEN (vt0.c0) AND (NULL))))) ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE)  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (CAST(vt1.c0 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST(vt1.c0 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST(vt1.c0 COLLATE RTRIM AS BLOB));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND (CAST(vt1.c0 AS NUMERIC)))) ORDER BY CASE ((vt1.c0) IS TRUE)  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN CAST(vt1.c0 AS BLOB) WHEN json_remove(0X557b3f3b, vt1.c0) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0) IS TRUE)  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN CAST(vt1.c0 AS BLOB) WHEN json_remove(0X557b3f3b, vt1.c0) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND (CAST(vt1.c0 AS NUMERIC)))) ORDER BY CASE ((vt1.c0) IS TRUE)  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN CAST(vt1.c0 AS BLOB) WHEN json_remove(0X557b3f3b, vt1.c0) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0) IS TRUE)  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN CAST(vt1.c0 AS BLOB) WHEN json_remove(0X557b3f3b, vt1.c0) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND (CAST(vt1.c0 AS NUMERIC)))) ORDER BY CASE ((vt1.c0) IS TRUE)  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN CAST(vt1.c0 AS BLOB) WHEN json_remove(0X557b3f3b, vt1.c0) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CASE WHEN (- (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c63)) END) ORDER BY (TYPEOF(DISTINCT vt1.c0) IN ()) ASC  NULLS LAST, CAST(t0.c0 COLLATE RTRIM AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c63)) END) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (TYPEOF(DISTINCT vt1.c0) IN ()) ASC  NULLS LAST, CAST(t0.c0 COLLATE RTRIM AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CASE WHEN (- (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c63)) END) ORDER BY (TYPEOF(DISTINCT vt1.c0) IN ()) ASC  NULLS LAST, CAST(t0.c0 COLLATE RTRIM AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c63)) END) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (TYPEOF(DISTINCT vt1.c0) IN ()) ASC  NULLS LAST, CAST(t0.c0 COLLATE RTRIM AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CASE WHEN (- (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c63)) END) ORDER BY (TYPEOF(DISTINCT vt1.c0) IN ()) ASC  NULLS LAST, CAST(t0.c0 COLLATE RTRIM AS REAL) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((('lH_-NkB\np')>(CASE WHEN t0.c0 THEN t0.c1 END))) ORDER BY ((TRIM(DISTINCT t0.c63, t0.c0))||(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('lH_-NkB\np')>(CASE WHEN t0.c0 THEN t0.c1 END))) IS TRUE)  as count FROM t0 ORDER BY ((TRIM(DISTINCT t0.c63, t0.c0))||(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1))))  NULLS LAST);
SELECT * FROM t0 WHERE ((('lH_-NkB\np')>(CASE WHEN t0.c0 THEN t0.c1 END))) ORDER BY ((TRIM(DISTINCT t0.c63, t0.c0))||(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('lH_-NkB\np')>(CASE WHEN t0.c0 THEN t0.c1 END))) IS TRUE)  as count FROM t0 ORDER BY ((TRIM(DISTINCT t0.c63, t0.c0))||(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1))))  NULLS LAST);
SELECT * FROM t0 WHERE ((('lH_-NkB\np')>(CASE WHEN t0.c0 THEN t0.c1 END))) ORDER BY ((TRIM(DISTINCT t0.c63, t0.c0))||(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1))))  NULLS LAST;
SELECT * FROM t0 FULL OUTER JOIN vt0 ON x'' INNER JOIN vt1 ON (((- (vt0.c0)))&((- (t0.c1)))) WHERE (((((t0.c0))>=((t0.c63))) IN ())) ORDER BY CAST((- (t0.c2)) AS REAL) ASC, (((((t0.c2))>=((t0.c1)))) BETWEEN (CAST(t0.c0 AS REAL)) AND (t0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0))>=((t0.c63))) IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON x'' INNER JOIN vt1 ON (((- (vt0.c0)))&((- (t0.c1)))) ORDER BY CAST((- (t0.c2)) AS REAL) ASC, (((((t0.c2))>=((t0.c1)))) BETWEEN (CAST(t0.c0 AS REAL)) AND (t0.c2 COLLATE NOCASE)));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON x'' INNER JOIN vt1 ON (((- (vt0.c0)))&((- (t0.c1)))) WHERE (((((t0.c0))>=((t0.c63))) IN ())) ORDER BY CAST((- (t0.c2)) AS REAL) ASC, (((((t0.c2))>=((t0.c1)))) BETWEEN (CAST(t0.c0 AS REAL)) AND (t0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0))>=((t0.c63))) IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON x'' INNER JOIN vt1 ON (((- (vt0.c0)))&((- (t0.c1)))) ORDER BY CAST((- (t0.c2)) AS REAL) ASC, (((((t0.c2))>=((t0.c1)))) BETWEEN (CAST(t0.c0 AS REAL)) AND (t0.c2 COLLATE NOCASE)));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON x'' INNER JOIN vt1 ON (((- (vt0.c0)))&((- (t0.c1)))) WHERE (((((t0.c0))>=((t0.c63))) IN ())) ORDER BY CAST((- (t0.c2)) AS REAL) ASC, (((((t0.c2))>=((t0.c1)))) BETWEEN (CAST(t0.c0 AS REAL)) AND (t0.c2 COLLATE NOCASE));
SELECT ALL * FROM vt0 NOT INDEXED, t0 WHERE ('-1110539464' COLLATE BINARY) ORDER BY CAST((+ (vt0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL (('-1110539464' COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((+ (vt0.c0)) AS REAL) ASC);
SELECT ALL * FROM vt0 NOT INDEXED, t0 WHERE ('-1110539464' COLLATE BINARY) ORDER BY CAST((+ (vt0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL (('-1110539464' COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((+ (vt0.c0)) AS REAL) ASC);
SELECT ALL * FROM vt0 NOT INDEXED, t0 WHERE ('-1110539464' COLLATE BINARY) ORDER BY CAST((+ (vt0.c0)) AS REAL) ASC;
SELECT COUNT(*) FROM vt0, t0 WHERE (1986180405);
SELECT SUM(count) FROM (SELECT ((1986180405) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (1986180405);
SELECT SUM(count) FROM (SELECT ((1986180405) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (1986180405);
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST((+ (t0.c63)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (t0.c63)) AS INTEGER)) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST((+ (t0.c63)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (t0.c63)) AS INTEGER)) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST((+ (t0.c63)) AS INTEGER));
SELECT ALL * FROM vt0, vt1, t0 WHERE (CAST(t0.c1 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c1 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CAST(t0.c1 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c1 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CAST(t0.c1 COLLATE NOCASE AS BLOB));
SELECT * FROM vt0, t0, vt1 WHERE (((((t0.c63, vt1.c0, vt0.c0))==((-2.090505287E9, t0.c2, x'e2e4'))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c63, vt1.c0, vt0.c0))=((-2.090505287E9, t0.c2, x'e2e4'))) IN ())) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (((((t0.c63, vt1.c0, vt0.c0))==((-2.090505287E9, t0.c2, x'e2e4'))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c63, vt1.c0, vt0.c0))=((-2.090505287E9, t0.c2, x'e2e4'))) IN ())) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (((((t0.c63, vt1.c0, vt0.c0))==((-2.090505287E9, t0.c2, x'e2e4'))) IN ()));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((t0.c63 IN (UNLIKELY(t0.c63))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c63 IN (UNLIKELY(t0.c63)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((t0.c63 IN (UNLIKELY(t0.c63))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c63 IN (UNLIKELY(t0.c63)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((t0.c63 IN (UNLIKELY(t0.c63))));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (NULL);
SELECT COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON (((vt0.c0 IN (t0.c2)))%(((t0.c63) BETWEEN (t0.c2) AND (t0.c0)))) WHERE (((vt1.c0 COLLATE RTRIM) BETWEEN (((t0.c63)<<(t0.c2))) AND (t0.c63 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) BETWEEN (((t0.c63)<<(t0.c2))) AND (t0.c63 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON (((vt0.c0 IN (t0.c2)))%(((t0.c63) BETWEEN (t0.c2) AND (t0.c0)))));
SELECT COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON (((vt0.c0 IN (t0.c2)))%(((t0.c63) BETWEEN (t0.c2) AND (t0.c0)))) WHERE (((vt1.c0 COLLATE RTRIM) BETWEEN (((t0.c63)<<(t0.c2))) AND (t0.c63 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) BETWEEN (((t0.c63)<<(t0.c2))) AND (t0.c63 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON (((vt0.c0 IN (t0.c2)))%(((t0.c63) BETWEEN (t0.c2) AND (t0.c0)))));
SELECT COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON (((vt0.c0 IN (t0.c2)))%(((t0.c63) BETWEEN (t0.c2) AND (t0.c0)))) WHERE (((vt1.c0 COLLATE RTRIM) BETWEEN (((t0.c63)<<(t0.c2))) AND (t0.c63 COLLATE BINARY)));
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((166621351))))OR((+ (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)))))AND((NOT (vt0.c0)))))OR((((NULL))>=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((166621351))))OR((+ (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)))))AND((NOT (vt0.c0)))))OR((((NULL))>=((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((166621351))))OR((+ (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)))))AND((NOT (vt0.c0)))))OR((((NULL))>=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((166621351))))OR((+ (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)))))AND((NOT (vt0.c0)))))OR((((NULL))>=((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((166621351))))OR((+ (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)))))AND((NOT (vt0.c0)))))OR((((NULL))>=((vt1.c0))))));
SELECT * FROM t0, vt0 INNER JOIN vt1 ON (((vt0.c0)) NOT BETWEEN (((NOT (NULL)))) AND (((((t0.c63))<((t0.c2)))))) WHERE (CAST(((t0.c2) BETWEEN (t0.c0) AND (vt0.c0)) AS BLOB)) ORDER BY ((0.48478539836130574)|((((t0.c2))>((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2) BETWEEN (t0.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON (((vt0.c0)) NOT BETWEEN (((NOT (NULL)))) AND (((((t0.c63))<((t0.c2)))))) ORDER BY ((0.48478539836130574)|((((t0.c2))>((vt1.c0))))) ASC);
SELECT * FROM t0, vt0 INNER JOIN vt1 ON (((vt0.c0)) NOT BETWEEN (((NOT (NULL)))) AND (((((t0.c63))<((t0.c2)))))) WHERE (CAST(((t0.c2) BETWEEN (t0.c0) AND (vt0.c0)) AS BLOB)) ORDER BY ((0.48478539836130574)|((((t0.c2))>((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2) BETWEEN (t0.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON (((vt0.c0)) NOT BETWEEN (((NOT (NULL)))) AND (((((t0.c63))<((t0.c2)))))) ORDER BY ((0.48478539836130574)|((((t0.c2))>((vt1.c0))))) ASC);
SELECT * FROM t0, vt0 INNER JOIN vt1 ON (((vt0.c0)) NOT BETWEEN (((NOT (NULL)))) AND (((((t0.c63))<((t0.c2)))))) WHERE (CAST(((t0.c2) BETWEEN (t0.c0) AND (vt0.c0)) AS BLOB)) ORDER BY ((0.48478539836130574)|((((t0.c2))>((vt1.c0))))) ASC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(x'' AS BLOB) THEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(NULL AS NUMERIC) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(x'' AS BLOB) THEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(NULL AS NUMERIC) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(x'' AS BLOB) THEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(NULL AS NUMERIC) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(x'' AS BLOB) THEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(NULL AS NUMERIC) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(x'' AS BLOB) THEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(NULL AS NUMERIC) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END);
SELECT ALL * FROM vt0, vt1, t0 WHERE (TRIM(t0.c63 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(t0.c63 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (TRIM(t0.c63 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(t0.c63 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (TRIM(t0.c63 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON TYPEOF(((((vt1.c0)OR(t0.c63)))AND(vt1.c0))) CROSS JOIN vt1 ON HEX(t0.c63 COLLATE BINARY) WHERE (((((NOT (vt0.c0)), (+ (t0.c63)), t0.c1 COLLATE BINARY))<=(((- (vt1.c0)), JULIANDAY(t0.c63, vt0.c0, t0.c63, t0.c1, t0.c1), ((vt1.c0)%(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt0.c0)), (+ (t0.c63)), t0.c1 COLLATE BINARY))<=(((- (vt1.c0)), JULIANDAY(t0.c63, vt0.c0, t0.c63, t0.c1, t0.c1), ((vt1.c0)%(vt0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON TYPEOF(((((vt1.c0)OR(t0.c63)))AND(vt1.c0))) CROSS JOIN vt1 ON HEX(t0.c63 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON TYPEOF(((((vt1.c0)OR(t0.c63)))AND(vt1.c0))) CROSS JOIN vt1 ON HEX(t0.c63 COLLATE BINARY) WHERE (((((NOT (vt0.c0)), (+ (t0.c63)), t0.c1 COLLATE BINARY))<=(((- (vt1.c0)), JULIANDAY(t0.c63, vt0.c0, t0.c63, t0.c1, t0.c1), ((vt1.c0)%(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt0.c0)), (+ (t0.c63)), t0.c1 COLLATE BINARY))<=(((- (vt1.c0)), JULIANDAY(t0.c63, vt0.c0, t0.c63, t0.c1, t0.c1), ((vt1.c0)%(vt0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON TYPEOF(((((vt1.c0)OR(t0.c63)))AND(vt1.c0))) CROSS JOIN vt1 ON HEX(t0.c63 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON MAX((t0.c2 IN ()), ((((t0.c2)OR(t0.c0)))OR(vt0.c0)), ((t0.c63)+(vt0.c0)), (((((((('-2042281096')AND(t0.c2)))OR(t0.c63)))OR(t0.c0)))OR(vt1.c0))) INNER JOIN vt1 ON (CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c63 WHEN t0.c2 THEN vt0.c0 ELSE vt0.c0 END IN ()) WHERE ((t0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON MAX((t0.c2 IN ()), ((((t0.c2)OR(t0.c0)))OR(vt0.c0)), ((t0.c63)+(vt0.c0)), (((((((('-2042281096')AND(t0.c2)))OR(t0.c63)))OR(t0.c0)))OR(vt1.c0))) INNER JOIN vt1 ON (CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c63 WHEN t0.c2 THEN vt0.c0 ELSE vt0.c0 END IN ()));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON MAX((t0.c2 IN ()), ((((t0.c2)OR(t0.c0)))OR(vt0.c0)), ((t0.c63)+(vt0.c0)), (((((((('-2042281096')AND(t0.c2)))OR(t0.c63)))OR(t0.c0)))OR(vt1.c0))) INNER JOIN vt1 ON (CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c63 WHEN t0.c2 THEN vt0.c0 ELSE vt0.c0 END IN ()) WHERE ((t0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON MAX((t0.c2 IN ()), ((((t0.c2)OR(t0.c0)))OR(vt0.c0)), ((t0.c63)+(vt0.c0)), (((((((('-2042281096')AND(t0.c2)))OR(t0.c63)))OR(t0.c0)))OR(vt1.c0))) INNER JOIN vt1 ON (CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c63 WHEN t0.c2 THEN vt0.c0 ELSE vt0.c0 END IN ()));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON MAX((t0.c2 IN ()), ((((t0.c2)OR(t0.c0)))OR(vt0.c0)), ((t0.c63)+(vt0.c0)), (((((((('-2042281096')AND(t0.c2)))OR(t0.c63)))OR(t0.c0)))OR(vt1.c0))) INNER JOIN vt1 ON (CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c63 WHEN t0.c2 THEN vt0.c0 ELSE vt0.c0 END IN ()) WHERE ((t0.c0 IN ()));
SELECT ALL COUNT(*) FROM t0 INDEXED BY i62, vt0 LEFT OUTER JOIN vt1 ON ((CAST(t0.c2 AS INTEGER)) NOT BETWEEN (((t0.c2)/(vt0.c0))) AND (((vt0.c0)IS(t0.c0)))) WHERE (((CASE WHEN vt1.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN 0.9544445413396374 WHEN vt0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 END) ISNULL)) ORDER BY t0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN 0.9544445413396374 WHEN vt0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 END) ISNULL)) IS TRUE)  as count FROM t0 INDEXED BY i62, vt0 LEFT OUTER JOIN vt1 ON ((CAST(t0.c2 AS INTEGER)) NOT BETWEEN (((t0.c2)/(vt0.c0))) AND (((vt0.c0)IS(t0.c0)))) ORDER BY t0.c1 ASC);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i62, vt0 LEFT OUTER JOIN vt1 ON ((CAST(t0.c2 AS INTEGER)) NOT BETWEEN (((t0.c2)/(vt0.c0))) AND (((vt0.c0)IS(t0.c0)))) WHERE (((CASE WHEN vt1.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN 0.9544445413396374 WHEN vt0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 END) ISNULL)) ORDER BY t0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN 0.9544445413396374 WHEN vt0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 END) ISNULL)) IS TRUE)  as count FROM t0 INDEXED BY i62, vt0 LEFT OUTER JOIN vt1 ON ((CAST(t0.c2 AS INTEGER)) NOT BETWEEN (((t0.c2)/(vt0.c0))) AND (((vt0.c0)IS(t0.c0)))) ORDER BY t0.c1 ASC);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i62, vt0 LEFT OUTER JOIN vt1 ON ((CAST(t0.c2 AS INTEGER)) NOT BETWEEN (((t0.c2)/(vt0.c0))) AND (((vt0.c0)IS(t0.c0)))) WHERE (((CASE WHEN vt1.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c1 WHEN t0.c2 THEN 0.9544445413396374 WHEN vt0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 END) ISNULL)) ORDER BY t0.c1 ASC;
SELECT COUNT(*) FROM vt0, t0 WHERE (DATETIME(t0.c63 COLLATE NOCASE, (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))), CASE t0.c0  WHEN t0.c2 THEN t0.c63 END, (~ (t0.c63)), CAST(t0.c2 AS INTEGER), CASE t0.c1  WHEN vt0.c0 THEN t0.c2 END, t0.c2 COLLATE BINARY)) ORDER BY CASE WHEN CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END THEN ((t0.c63)<=(t0.c63)) ELSE NULL END, ((t0.c2 COLLATE RTRIM) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATETIME(t0.c63 COLLATE NOCASE, (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))), CASE t0.c0  WHEN t0.c2 THEN t0.c63 END, (~ (t0.c63)), CAST(t0.c2 AS INTEGER), CASE t0.c1  WHEN vt0.c0 THEN t0.c2 END, t0.c2 COLLATE BINARY)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END THEN ((t0.c63)<=(t0.c63)) ELSE NULL END, ((t0.c2 COLLATE RTRIM) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (DATETIME(t0.c63 COLLATE NOCASE, (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))), CASE t0.c0  WHEN t0.c2 THEN t0.c63 END, (~ (t0.c63)), CAST(t0.c2 AS INTEGER), CASE t0.c1  WHEN vt0.c0 THEN t0.c2 END, t0.c2 COLLATE BINARY)) ORDER BY CASE WHEN CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END THEN ((t0.c63)<=(t0.c63)) ELSE NULL END, ((t0.c2 COLLATE RTRIM) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATETIME(t0.c63 COLLATE NOCASE, (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))), CASE t0.c0  WHEN t0.c2 THEN t0.c63 END, (~ (t0.c63)), CAST(t0.c2 AS INTEGER), CASE t0.c1  WHEN vt0.c0 THEN t0.c2 END, t0.c2 COLLATE BINARY)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END THEN ((t0.c63)<=(t0.c63)) ELSE NULL END, ((t0.c2 COLLATE RTRIM) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (DATETIME(t0.c63 COLLATE NOCASE, (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))), CASE t0.c0  WHEN t0.c2 THEN t0.c63 END, (~ (t0.c63)), CAST(t0.c2 AS INTEGER), CASE t0.c1  WHEN vt0.c0 THEN t0.c2 END, t0.c2 COLLATE BINARY)) ORDER BY CASE WHEN CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END THEN ((t0.c63)<=(t0.c63)) ELSE NULL END, ((t0.c2 COLLATE RTRIM) NOT NULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE vt1.c0  WHEN '' THEN vt1.c0 END)>=(0.1877566270263923)));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN '' THEN vt1.c0 END)>=(0.1877566270263923))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE vt1.c0  WHEN '' THEN vt1.c0 END)>=(0.1877566270263923)));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN '' THEN vt1.c0 END)>=(0.1877566270263923))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE vt1.c0  WHEN '' THEN vt1.c0 END)>=(0.1877566270263923)));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY '9''f*BE4' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '9''f*BE4' COLLATE RTRIM);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY '9''f*BE4' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '9''f*BE4' COLLATE RTRIM);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY '9''f*BE4' COLLATE RTRIM;
SELECT * FROM vt1, t0 WHERE (('-728435675' IN (((NULL)=(t0.c63))))) ORDER BY (- ((((t0.c63, t0.c2, vt1.c0)) BETWEEN ((t0.c1, t0.c0, t0.c1)) AND ((t0.c2, t0.c2, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((('-728435675' IN (((NULL)==(t0.c63))))) IS TRUE)  as count FROM vt1 NOT INDEXED, t0 ORDER BY (- ((((t0.c63, t0.c2, vt1.c0)) BETWEEN ((t0.c1, t0.c0, t0.c1)) AND ((t0.c2, t0.c2, vt1.c0))))));
SELECT * FROM vt1, t0 WHERE (('-728435675' IN (((NULL)=(t0.c63))))) ORDER BY (- ((((t0.c63, t0.c2, vt1.c0)) BETWEEN ((t0.c1, t0.c0, t0.c1)) AND ((t0.c2, t0.c2, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((('-728435675' IN (((NULL)==(t0.c63))))) IS TRUE)  as count FROM vt1 NOT INDEXED, t0 ORDER BY (- ((((t0.c63, t0.c2, vt1.c0)) BETWEEN ((t0.c1, t0.c0, t0.c1)) AND ((t0.c2, t0.c2, vt1.c0))))));
SELECT * FROM vt1, t0 WHERE (('-728435675' IN (((NULL)=(t0.c63))))) ORDER BY (- ((((t0.c63, t0.c2, vt1.c0)) BETWEEN ((t0.c1, t0.c0, t0.c1)) AND ((t0.c2, t0.c2, vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0))) AND (((0.20053167632439206)==(vt0.c0))))) ORDER BY (((+ (vt0.c0))) NOT BETWEEN ((((7.19352785E8, vt0.c0, x'')) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0)))) AND (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(NULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) NOT BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0))) AND (((0.20053167632439206)=(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((+ (vt0.c0))) NOT BETWEEN ((((7.19352785E8, vt0.c0, x'')) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0)))) AND (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(NULL)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0))) AND (((0.20053167632439206)==(vt0.c0))))) ORDER BY (((+ (vt0.c0))) NOT BETWEEN ((((7.19352785E8, vt0.c0, x'')) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0)))) AND (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(NULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) NOT BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0))) AND (((0.20053167632439206)=(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((+ (vt0.c0))) NOT BETWEEN ((((7.19352785E8, vt0.c0, x'')) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0)))) AND (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(NULL)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0))) AND (((0.20053167632439206)==(vt0.c0))))) ORDER BY (((+ (vt0.c0))) NOT BETWEEN ((((7.19352785E8, vt0.c0, x'')) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0)))) AND (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(NULL)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((((((((t0.c0)AND(t0.c2)))AND(vt1.c0)))AND(t0.c2)))OR(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c0)AND(t0.c2)))AND(vt1.c0)))AND(t0.c2)))OR(t0.c0)) IN ())) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((((((((t0.c0)AND(t0.c2)))AND(vt1.c0)))AND(t0.c2)))OR(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c0)AND(t0.c2)))AND(vt1.c0)))AND(t0.c2)))OR(t0.c0)) IN ())) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((((((((t0.c0)AND(t0.c2)))AND(vt1.c0)))AND(t0.c2)))OR(t0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c0 WHEN ((x'')>>(vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c0 WHEN ((x'')>>(vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c0 WHEN ((x'')>>(vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c0 WHEN ((x'')>>(vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c0 WHEN ((x'')>>(vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) END;
SELECT * FROM vt1, vt0 WHERE (((vt1.c0) IS TRUE) COLLATE RTRIM) ORDER BY UPPER(LIKELIHOOD(DISTINCT NULL, 0.2951400410424173)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY UPPER(LIKELIHOOD(DISTINCT NULL, 0.2951400410424173)) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0) IS TRUE) COLLATE RTRIM) ORDER BY UPPER(LIKELIHOOD(DISTINCT NULL, 0.2951400410424173)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY UPPER(LIKELIHOOD(DISTINCT NULL, 0.2951400410424173)) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0) IS TRUE) COLLATE RTRIM) ORDER BY UPPER(LIKELIHOOD(DISTINCT NULL, 0.2951400410424173)) ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE (CASE HEX(vt1.c0)  WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN '	Gj_yz''a' END) ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.22972688546288467 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE HEX(vt1.c0)  WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN '	Gj_yz''a' END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.22972688546288467 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE HEX(vt1.c0)  WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN '	Gj_yz''a' END) ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.22972688546288467 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE HEX(vt1.c0)  WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN '	Gj_yz''a' END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.22972688546288467 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE HEX(vt1.c0)  WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN '	Gj_yz''a' END) ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.22972688546288467 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)>=(vt0.c0))) ORDER BY HEX(DISTINCT '')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)>=(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT '')  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)>=(vt0.c0))) ORDER BY HEX(DISTINCT '')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)>=(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT '')  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)>=(vt0.c0))) ORDER BY HEX(DISTINCT '')  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((NULLIF(vt1.c0, vt0.c0) IN ())) ORDER BY LIKELIHOOD(t0.c2, 0.977080111913095), CASE WHEN (((t0.c63))=((vt0.c0))) THEN ((((((((((((t0.c63)OR(t0.c1)))AND(vt1.c0)))OR(t0.c63)))AND(t0.c2)))AND(t0.c63)))AND(t0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NULLIF(vt1.c0, vt0.c0) IN ())) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY LIKELIHOOD(t0.c2, 0.977080111913095), CASE WHEN (((t0.c63))==((vt0.c0))) THEN ((((((((((((t0.c63)OR(t0.c1)))AND(vt1.c0)))OR(t0.c63)))AND(t0.c2)))AND(t0.c63)))AND(t0.c1)) END  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((NULLIF(vt1.c0, vt0.c0) IN ())) ORDER BY LIKELIHOOD(t0.c2, 0.977080111913095), CASE WHEN (((t0.c63))=((vt0.c0))) THEN ((((((((((((t0.c63)OR(t0.c1)))AND(vt1.c0)))OR(t0.c63)))AND(t0.c2)))AND(t0.c63)))AND(t0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NULLIF(vt1.c0, vt0.c0) IN ())) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY LIKELIHOOD(t0.c2, 0.977080111913095), CASE WHEN (((t0.c63))==((vt0.c0))) THEN ((((((((((((t0.c63)OR(t0.c1)))AND(vt1.c0)))OR(t0.c63)))AND(t0.c2)))AND(t0.c63)))AND(t0.c1)) END  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((NULLIF(vt1.c0, vt0.c0) IN ())) ORDER BY LIKELIHOOD(t0.c2, 0.977080111913095), CASE WHEN (((t0.c63))=((vt0.c0))) THEN ((((((((((((t0.c63)OR(t0.c1)))AND(vt1.c0)))OR(t0.c63)))AND(t0.c2)))AND(t0.c63)))AND(t0.c1)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ('h쯩5Jn[p') ORDER BY ((ABS(NULL)) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('h쯩5Jn[p') IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((ABS(NULL)) NOT NULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ('h쯩5Jn[p') ORDER BY ((ABS(NULL)) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('h쯩5Jn[p') IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((ABS(NULL)) NOT NULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ('h쯩5Jn[p') ORDER BY ((ABS(NULL)) NOT NULL) ASC  NULLS FIRST;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (CASE WHEN t0.c63 THEN t0.c63 END IN ()) WHERE (((0.35315736088268557)LIKE(((t0.c63) NOT NULL)))) ORDER BY ((NULLIF(DISTINCT vt0.c0, t0.c63)) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((0.35315736088268557)LIKE(((t0.c63) NOT NULL)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (CASE WHEN t0.c63 THEN t0.c63 END IN ()) ORDER BY ((NULLIF(DISTINCT vt0.c0, t0.c63)) NOT NULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (CASE WHEN t0.c63 THEN t0.c63 END IN ()) WHERE (((0.35315736088268557)LIKE(((t0.c63) NOT NULL)))) ORDER BY ((NULLIF(DISTINCT vt0.c0, t0.c63)) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((0.35315736088268557)LIKE(((t0.c63) NOT NULL)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (CASE WHEN t0.c63 THEN t0.c63 END IN ()) ORDER BY ((NULLIF(DISTINCT vt0.c0, t0.c63)) NOT NULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (CASE WHEN t0.c63 THEN t0.c63 END IN ()) WHERE (((0.35315736088268557)LIKE(((t0.c63) NOT NULL)))) ORDER BY ((NULLIF(DISTINCT vt0.c0, t0.c63)) NOT NULL);
SELECT * FROM vt0, vt1, t0 WHERE ((t0.c0 COLLATE RTRIM IN (((t0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 COLLATE RTRIM IN (((t0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE ((t0.c0 COLLATE RTRIM IN (((t0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 COLLATE RTRIM IN (((t0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE ((t0.c0 COLLATE RTRIM IN (((t0.c0)%(vt0.c0)))));
SELECT COUNT(*) FROM t0, vt1 WHERE (((t0.c2 COLLATE RTRIM) ISNULL)) ORDER BY CASE WHEN (((NULL))<((t0.c2))) THEN ((t0.c1)|(t0.c0)) ELSE ((vt1.c0)>(vt1.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE WHEN (((NULL))<((t0.c2))) THEN ((t0.c1)|(t0.c0)) ELSE ((vt1.c0)>(vt1.c0)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE (((t0.c2 COLLATE RTRIM) ISNULL)) ORDER BY CASE WHEN (((NULL))<((t0.c2))) THEN ((t0.c1)|(t0.c0)) ELSE ((vt1.c0)>(vt1.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE WHEN (((NULL))<((t0.c2))) THEN ((t0.c1)|(t0.c0)) ELSE ((vt1.c0)>(vt1.c0)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE (((t0.c2 COLLATE RTRIM) ISNULL)) ORDER BY CASE WHEN (((NULL))<((t0.c2))) THEN ((t0.c1)|(t0.c0)) ELSE ((vt1.c0)>(vt1.c0)) END ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((('') BETWEEN (t0.c0) AND (t0.c63)) IN ())) ORDER BY ((CASE ''  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END) NOT BETWEEN (((t0.c2) BETWEEN (t0.c63) AND (t0.c2))) AND (((t0.c1) IS TRUE))) ASC  NULLS FIRST, t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('') BETWEEN (t0.c0) AND (t0.c63)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((CASE ''  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END) NOT BETWEEN (((t0.c2) BETWEEN (t0.c63) AND (t0.c2))) AND (((t0.c1) IS TRUE))) ASC  NULLS FIRST, t0.c0  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((('') BETWEEN (t0.c0) AND (t0.c63)) IN ())) ORDER BY ((CASE ''  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END) NOT BETWEEN (((t0.c2) BETWEEN (t0.c63) AND (t0.c2))) AND (((t0.c1) IS TRUE))) ASC  NULLS FIRST, t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('') BETWEEN (t0.c0) AND (t0.c63)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((CASE ''  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END) NOT BETWEEN (((t0.c2) BETWEEN (t0.c63) AND (t0.c2))) AND (((t0.c1) IS TRUE))) ASC  NULLS FIRST, t0.c0  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((('') BETWEEN (t0.c0) AND (t0.c63)) IN ())) ORDER BY ((CASE ''  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END) NOT BETWEEN (((t0.c2) BETWEEN (t0.c63) AND (t0.c2))) AND (((t0.c1) IS TRUE))) ASC  NULLS FIRST, t0.c0  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt1.c0)IS NOT(0Xffffffffb1d55ee5))  WHEN ((vt0.c0)OR(vt1.c0)) THEN (~ (NULL)) WHEN ((vt0.c0)|(vt1.c0)) THEN NULL WHEN (vt0.c0 IN ()) THEN ((vt0.c0)||(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)IS NOT(0xffffffffb1d55ee5))  WHEN ((vt0.c0)OR(vt1.c0)) THEN (~ (NULL)) WHEN ((vt0.c0)|(vt1.c0)) THEN NULL WHEN (vt0.c0 IN ()) THEN ((vt0.c0)||(vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt1.c0)IS NOT(0Xffffffffb1d55ee5))  WHEN ((vt0.c0)OR(vt1.c0)) THEN (~ (NULL)) WHEN ((vt0.c0)|(vt1.c0)) THEN NULL WHEN (vt0.c0 IN ()) THEN ((vt0.c0)||(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)IS NOT(0xffffffffb1d55ee5))  WHEN ((vt0.c0)OR(vt1.c0)) THEN (~ (NULL)) WHEN ((vt0.c0)|(vt1.c0)) THEN NULL WHEN (vt0.c0 IN ()) THEN ((vt0.c0)||(vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt1.c0)IS NOT(0Xffffffffb1d55ee5))  WHEN ((vt0.c0)OR(vt1.c0)) THEN (~ (NULL)) WHEN ((vt0.c0)|(vt1.c0)) THEN NULL WHEN (vt0.c0 IN ()) THEN ((vt0.c0)||(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((t0.c0)<=(t0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<=(t0.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((t0.c0)<=(t0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<=(t0.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((t0.c0)<=(t0.c0))) NOTNULL));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((vt1.c0)LIKE(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (CAST((vt0.c0 IN (vt1.c0)) AS INTEGER)) ORDER BY ((((vt0.c0)OR(vt1.c0))) NOT BETWEEN (((vt1.c0)LIKE(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((vt1.c0)LIKE(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) ORDER BY ((((vt0.c0)OR(vt1.c0))) NOT BETWEEN (((vt1.c0)LIKE(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((vt1.c0)LIKE(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (CAST((vt0.c0 IN (vt1.c0)) AS INTEGER)) ORDER BY ((((vt0.c0)OR(vt1.c0))) NOT BETWEEN (((vt1.c0)LIKE(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((vt1.c0)LIKE(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) ORDER BY ((((vt0.c0)OR(vt1.c0))) NOT BETWEEN (((vt1.c0)LIKE(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((vt1.c0)LIKE(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (CAST((vt0.c0 IN (vt1.c0)) AS INTEGER)) ORDER BY ((((vt0.c0)OR(vt1.c0))) NOT BETWEEN (((vt1.c0)LIKE(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT ALL * FROM t0 WHERE (CASE ((t0.c63)|(t0.c1))  WHEN t0.c63 THEN (- (t0.c1)) ELSE TRIM(DISTINCT t0.c1, NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c63)|(t0.c1))  WHEN t0.c63 THEN (- (t0.c1)) ELSE TRIM(DISTINCT t0.c1, NULL) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c63)|(t0.c1))  WHEN t0.c63 THEN (- (t0.c1)) ELSE TRIM(DISTINCT t0.c1, NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c63)|(t0.c1))  WHEN t0.c63 THEN (- (t0.c1)) ELSE TRIM(DISTINCT t0.c1, NULL) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c63)|(t0.c1))  WHEN t0.c63 THEN (- (t0.c1)) ELSE TRIM(DISTINCT t0.c1, NULL) END);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c2)>=(t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2)>=(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c2)>=(t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2)>=(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c2)>=(t0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.8942619176175153) ORDER BY CAST(LIKELIHOOD(vt0.c0, 0.22867701453367684) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((0.8942619176175153) IS TRUE)  as count FROM vt0 ORDER BY CAST(LIKELIHOOD(vt0.c0, 0.22867701453367684) AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.8942619176175153) ORDER BY CAST(LIKELIHOOD(vt0.c0, 0.22867701453367684) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((0.8942619176175153) IS TRUE)  as count FROM vt0 ORDER BY CAST(LIKELIHOOD(vt0.c0, 0.22867701453367684) AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.8942619176175153) ORDER BY CAST(LIKELIHOOD(vt0.c0, 0.22867701453367684) AS REAL);
SELECT * FROM vt0, t0 WHERE (((t0.c0 IN ()) IN ())) ORDER BY json_valid(((t0.c63) BETWEEN (t0.c0) AND (t0.c2))) ASC  NULLS FIRST, ((CASE WHEN t0.c0 THEN t0.c63 END)<=(t0.c0 COLLATE NOCASE)), CAST(t0.c1 AS NUMERIC) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY json_valid(((t0.c63) BETWEEN (t0.c0) AND (t0.c2))) ASC  NULLS FIRST, ((CASE WHEN t0.c0 THEN t0.c63 END)<=(t0.c0 COLLATE NOCASE)), CAST(t0.c1 AS NUMERIC) COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((t0.c0 IN ()) IN ())) ORDER BY json_valid(((t0.c63) BETWEEN (t0.c0) AND (t0.c2))) ASC  NULLS FIRST, ((CASE WHEN t0.c0 THEN t0.c63 END)<=(t0.c0 COLLATE NOCASE)), CAST(t0.c1 AS NUMERIC) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY json_valid(((t0.c63) BETWEEN (t0.c0) AND (t0.c2))) ASC  NULLS FIRST, ((CASE WHEN t0.c0 THEN t0.c63 END)<=(t0.c0 COLLATE NOCASE)), CAST(t0.c1 AS NUMERIC) COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((t0.c0 IN ()) IN ())) ORDER BY json_valid(((t0.c63) BETWEEN (t0.c0) AND (t0.c2))) ASC  NULLS FIRST, ((CASE WHEN t0.c0 THEN t0.c63 END)<=(t0.c0 COLLATE NOCASE)), CAST(t0.c1 AS NUMERIC) COLLATE RTRIM  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((((- (vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((- (vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((- (vt1.c0))) IS TRUE));
SELECT * FROM t0, vt1 WHERE ((((t0.c63)) NOT BETWEEN (((((t0.c0, t0.c2, t0.c2)) BETWEEN ((t0.c63, 0Xca064d5, t0.c1)) AND ((t0.c1, t0.c63, t0.c63))))) AND ((t0.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((t0.c63)) NOT BETWEEN (((((t0.c0, t0.c2, t0.c2)) BETWEEN ((t0.c63, 0xca064d5, t0.c1)) AND ((t0.c1, t0.c63, t0.c63))))) AND ((t0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((((t0.c63)) NOT BETWEEN (((((t0.c0, t0.c2, t0.c2)) BETWEEN ((t0.c63, 0Xca064d5, t0.c1)) AND ((t0.c1, t0.c63, t0.c63))))) AND ((t0.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((t0.c63)) NOT BETWEEN (((((t0.c0, t0.c2, t0.c2)) BETWEEN ((t0.c63, 0xca064d5, t0.c1)) AND ((t0.c1, t0.c63, t0.c63))))) AND ((t0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((((t0.c63)) NOT BETWEEN (((((t0.c0, t0.c2, t0.c2)) BETWEEN ((t0.c63, 0Xca064d5, t0.c1)) AND ((t0.c1, t0.c63, t0.c63))))) AND ((t0.c1 COLLATE BINARY))));
SELECT * FROM t0, vt1 WHERE (CASE WHEN (+ (vt1.c0)) THEN CAST(t0.c1 AS NUMERIC) ELSE (((t0.c63))<=((vt1.c0))) END) ORDER BY (((t0.c63 IN ()))>(((t0.c0)OR(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (vt1.c0)) THEN CAST(t0.c1 AS NUMERIC) ELSE (((t0.c63))<=((vt1.c0))) END) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c63 IN ()))>(((t0.c0)OR(NULL)))));
SELECT * FROM t0, vt1 WHERE (CASE WHEN (+ (vt1.c0)) THEN CAST(t0.c1 AS NUMERIC) ELSE (((t0.c63))<=((vt1.c0))) END) ORDER BY (((t0.c63 IN ()))>(((t0.c0)OR(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (vt1.c0)) THEN CAST(t0.c1 AS NUMERIC) ELSE (((t0.c63))<=((vt1.c0))) END) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c63 IN ()))>(((t0.c0)OR(NULL)))));
SELECT * FROM t0, vt1 WHERE (CASE WHEN (+ (vt1.c0)) THEN CAST(t0.c1 AS NUMERIC) ELSE (((t0.c63))<=((vt1.c0))) END) ORDER BY (((t0.c63 IN ()))>(((t0.c0)OR(NULL))));
SELECT ALL * FROM vt0, t0, vt1 WHERE (((CASE t0.c0  WHEN vt1.c0 THEN t0.c1 ELSE t0.c2 END)!=(t0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN vt1.c0 THEN t0.c1 ELSE t0.c2 END)!=(t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((CASE t0.c0  WHEN vt1.c0 THEN t0.c1 ELSE t0.c2 END)!=(t0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN vt1.c0 THEN t0.c1 ELSE t0.c2 END)!=(t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((CASE t0.c0  WHEN vt1.c0 THEN t0.c1 ELSE t0.c2 END)!=(t0.c2 COLLATE RTRIM)));
SELECT * FROM vt1, vt0 CROSS JOIN t0 ON ((((t0.c1)GLOB(vt0.c0)))|(CAST(t0.c0 AS TEXT))) WHERE (((CAST(x'5236' AS TEXT))+(t0.c63 COLLATE NOCASE))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'5236' AS TEXT))+(t0.c63 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON ((((t0.c1)GLOB(vt0.c0)))|(CAST(t0.c0 AS TEXT))) ORDER BY vt0.c0 DESC);
SELECT * FROM vt1, vt0 CROSS JOIN t0 ON ((((t0.c1)GLOB(vt0.c0)))|(CAST(t0.c0 AS TEXT))) WHERE (((CAST(x'5236' AS TEXT))+(t0.c63 COLLATE NOCASE))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'5236' AS TEXT))+(t0.c63 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON ((((t0.c1)GLOB(vt0.c0)))|(CAST(t0.c0 AS TEXT))) ORDER BY vt0.c0 DESC);
SELECT * FROM vt1, vt0 CROSS JOIN t0 ON ((((t0.c1)GLOB(vt0.c0)))|(CAST(t0.c0 AS TEXT))) WHERE (((CAST(x'5236' AS TEXT))+(t0.c63 COLLATE NOCASE))) ORDER BY vt0.c0 DESC;
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL))<<(((vt0.c0)IS(x'50f0'))))) ORDER BY CASE WHEN '' THEN (vt0.c0 IN (vt0.c0)) ELSE 0.9916520983612783 END  NULLS FIRST, CAST((+ (vt0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL))<<(((vt0.c0)IS(x'50f0'))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN '' THEN (vt0.c0 IN (vt0.c0)) ELSE 0.9916520983612783 END  NULLS FIRST, CAST((+ (vt0.c0)) AS TEXT)  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL))<<(((vt0.c0)IS(x'50f0'))))) ORDER BY CASE WHEN '' THEN (vt0.c0 IN (vt0.c0)) ELSE 0.9916520983612783 END  NULLS FIRST, CAST((+ (vt0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL))<<(((vt0.c0)IS(x'50f0'))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN '' THEN (vt0.c0 IN (vt0.c0)) ELSE 0.9916520983612783 END  NULLS FIRST, CAST((+ (vt0.c0)) AS TEXT)  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL))<<(((vt0.c0)IS(x'50f0'))))) ORDER BY CASE WHEN '' THEN (vt0.c0 IN (vt0.c0)) ELSE 0.9916520983612783 END  NULLS FIRST, CAST((+ (vt0.c0)) AS TEXT)  NULLS FIRST;
SELECT ALL * FROM vt1 CROSS JOIN t0 ON '' WHERE ((t0.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON '');
SELECT ALL * FROM vt1 CROSS JOIN t0 ON '' WHERE ((t0.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON '');
SELECT ALL * FROM vt1 CROSS JOIN t0 ON '' WHERE ((t0.c1 COLLATE NOCASE IN ()));
SELECT * FROM vt0 INNER JOIN vt1 ON (vt0.c0 COLLATE BINARY IN ()) WHERE (CAST(CASE vt1.c0  WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN x'' END AS BLOB)) ORDER BY (((vt0.c0 COLLATE RTRIM))!=((IFNULL(DISTINCT NULL, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c0  WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN x'' END AS BLOB)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (vt0.c0 COLLATE BINARY IN ()) ORDER BY (((vt0.c0 COLLATE RTRIM))!=((IFNULL(DISTINCT NULL, vt1.c0)))));
SELECT * FROM vt0 INNER JOIN vt1 ON (vt0.c0 COLLATE BINARY IN ()) WHERE (CAST(CASE vt1.c0  WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN x'' END AS BLOB)) ORDER BY (((vt0.c0 COLLATE RTRIM))!=((IFNULL(DISTINCT NULL, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c0  WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN x'' END AS BLOB)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (vt0.c0 COLLATE BINARY IN ()) ORDER BY (((vt0.c0 COLLATE RTRIM))!=((IFNULL(DISTINCT NULL, vt1.c0)))));
SELECT * FROM vt0 INNER JOIN vt1 ON (vt0.c0 COLLATE BINARY IN ()) WHERE (CAST(CASE vt1.c0  WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN x'' END AS BLOB)) ORDER BY (((vt0.c0 COLLATE RTRIM))!=((IFNULL(DISTINCT NULL, vt1.c0))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (NOT (t0.c0)) WHERE ((SUBSTR(t0.c0, '974900847') IN (((-869932166) NOTNULL), (('-1246853286')>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((SUBSTR(t0.c0, '974900847') IN (((-869932166) NOTNULL), (('-1246853286')>=(vt1.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (NOT (t0.c0)));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (NOT (t0.c0)) WHERE ((SUBSTR(t0.c0, '974900847') IN (((-869932166) NOTNULL), (('-1246853286')>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((SUBSTR(t0.c0, '974900847') IN (((-869932166) NOTNULL), (('-1246853286')>=(vt1.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (NOT (t0.c0)));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (NOT (t0.c0)) WHERE ((SUBSTR(t0.c0, '974900847') IN (((-869932166) NOTNULL), (('-1246853286')>=(vt1.c0)))));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0) IS TRUE))))AND((+ (vt1.c0)))))AND((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0) IS TRUE))))AND((+ (vt1.c0)))))AND((vt1.c0 IN ()))));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0) IS TRUE))))AND((+ (vt1.c0)))))AND((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0) IS TRUE))))AND((+ (vt1.c0)))))AND((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (LIKE(t0.c0, t0.c1, 'I') COLLATE RTRIM) ORDER BY (CASE t0.c0  WHEN t0.c63 THEN t0.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKE(t0.c0, t0.c1, 'I') COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY (CASE t0.c0  WHEN t0.c63 THEN t0.c0 END IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (LIKE(t0.c0, t0.c1, 'I') COLLATE RTRIM) ORDER BY (CASE t0.c0  WHEN t0.c63 THEN t0.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKE(t0.c0, t0.c1, 'I') COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY (CASE t0.c0  WHEN t0.c63 THEN t0.c0 END IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (LIKE(t0.c0, t0.c1, 'I') COLLATE RTRIM) ORDER BY (CASE t0.c0  WHEN t0.c63 THEN t0.c0 END IN ())  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS REAL))));
SELECT ALL * FROM vt1, t0 WHERE (((((LOWER(t0.c63))OR(((t0.c63) IS TRUE))))OR(t0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((LOWER(t0.c63))OR(((t0.c63) IS TRUE))))OR(t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((((LOWER(t0.c63))OR(((t0.c63) IS TRUE))))OR(t0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((LOWER(t0.c63))OR(((t0.c63) IS TRUE))))OR(t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((((LOWER(t0.c63))OR(((t0.c63) IS TRUE))))OR(t0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c63 AS BLOB))!=(((t0.c63) BETWEEN (t0.c1) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c63 AS BLOB))!=(((t0.c63) BETWEEN (t0.c1) AND (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c63 AS BLOB))!=(((t0.c63) BETWEEN (t0.c1) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c63 AS BLOB))!=(((t0.c63) BETWEEN (t0.c1) AND (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c63 AS BLOB))!=(((t0.c63) BETWEEN (t0.c1) AND (t0.c2)))));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (t0.c0);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)-(vt1.c0)) ELSE ((vt1.c0)LIKE(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)-(vt1.c0)) ELSE ((vt1.c0)LIKE(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)-(vt1.c0)) ELSE ((vt1.c0)LIKE(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)-(vt1.c0)) ELSE ((vt1.c0)LIKE(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)-(vt1.c0)) ELSE ((vt1.c0)LIKE(vt1.c0)) END);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)%(vt1.c0))) IS TRUE) RIGHT OUTER JOIN vt1 ON ((CASE WHEN t0.c63 THEN t0.c1 END)<>(((t0.c63) BETWEEN (t0.c1) AND (vt1.c0)))) WHERE (CASE TRIM(DISTINCT vt0.c0)  WHEN (~ (vt1.c0)) THEN RTRIM('-921264469') WHEN ((vt1.c0)IS(vt0.c0)) THEN CASE WHEN t0.c1 THEN t0.c63 END WHEN (+ (t0.c2)) THEN CAST(t0.c1 AS REAL) END) ORDER BY '1617233033'  NULLS FIRST, (((('-313738420')*(0.390508305636165))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE TRIM(DISTINCT vt0.c0)  WHEN (~ (vt1.c0)) THEN RTRIM('-921264469') WHEN ((vt1.c0)IS(vt0.c0)) THEN CASE WHEN t0.c1 THEN t0.c63 END WHEN (+ (t0.c2)) THEN CAST(t0.c1 AS REAL) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)%(vt1.c0))) IS TRUE) RIGHT OUTER JOIN vt1 ON ((CASE WHEN t0.c63 THEN t0.c1 END)!=(((t0.c63) BETWEEN (t0.c1) AND (vt1.c0)))) ORDER BY '1617233033'  NULLS FIRST, (((('-313738420')*(0.390508305636165))) NOTNULL) DESC  NULLS FIRST);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)%(vt1.c0))) IS TRUE) RIGHT OUTER JOIN vt1 ON ((CASE WHEN t0.c63 THEN t0.c1 END)<>(((t0.c63) BETWEEN (t0.c1) AND (vt1.c0)))) WHERE (CASE TRIM(DISTINCT vt0.c0)  WHEN (~ (vt1.c0)) THEN RTRIM('-921264469') WHEN ((vt1.c0)IS(vt0.c0)) THEN CASE WHEN t0.c1 THEN t0.c63 END WHEN (+ (t0.c2)) THEN CAST(t0.c1 AS REAL) END) ORDER BY '1617233033'  NULLS FIRST, (((('-313738420')*(0.390508305636165))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE TRIM(DISTINCT vt0.c0)  WHEN (~ (vt1.c0)) THEN RTRIM('-921264469') WHEN ((vt1.c0)IS(vt0.c0)) THEN CASE WHEN t0.c1 THEN t0.c63 END WHEN (+ (t0.c2)) THEN CAST(t0.c1 AS REAL) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)%(vt1.c0))) IS TRUE) RIGHT OUTER JOIN vt1 ON ((CASE WHEN t0.c63 THEN t0.c1 END)!=(((t0.c63) BETWEEN (t0.c1) AND (vt1.c0)))) ORDER BY '1617233033'  NULLS FIRST, (((('-313738420')*(0.390508305636165))) NOTNULL) DESC  NULLS FIRST);
SELECT * FROM vt0, t0, vt1 WHERE (t0.c63) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY vt0.c0 DESC);
SELECT * FROM vt0, t0, vt1 WHERE (t0.c63) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY vt0.c0 DESC);
SELECT * FROM vt0, t0, vt1 WHERE (t0.c63) ORDER BY vt0.c0 DESC;
SELECT ALL COUNT(*) FROM vt0, vt1, t0 INDEXED BY i62 WHERE ((('') BETWEEN ((NOT (t0.c1))) AND ((((vt1.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))) ORDER BY ((x'')-(vt1.c0)) COLLATE RTRIM DESC  NULLS LAST, NULLIF(t0.c0, ((((((((vt0.c0)AND(t0.c2)))OR(vt0.c0)))OR(t0.c1)))AND(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('') BETWEEN ((NOT (t0.c1))) AND ((((vt1.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))) IS TRUE)  as count FROM vt0, vt1, t0 INDEXED BY i62 ORDER BY ((x'')-(vt1.c0)) COLLATE RTRIM DESC  NULLS LAST, NULLIF(t0.c0, ((((((((vt0.c0)AND(t0.c2)))OR(vt0.c0)))OR(t0.c1)))AND(vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 INDEXED BY i62 WHERE ((('') BETWEEN ((NOT (t0.c1))) AND ((((vt1.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))) ORDER BY ((x'')-(vt1.c0)) COLLATE RTRIM DESC  NULLS LAST, NULLIF(t0.c0, ((((((((vt0.c0)AND(t0.c2)))OR(vt0.c0)))OR(t0.c1)))AND(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('') BETWEEN ((NOT (t0.c1))) AND ((((vt1.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))) IS TRUE)  as count FROM vt0, vt1, t0 INDEXED BY i62 ORDER BY ((x'')-(vt1.c0)) COLLATE RTRIM DESC  NULLS LAST, NULLIF(t0.c0, ((((((((vt0.c0)AND(t0.c2)))OR(vt0.c0)))OR(t0.c1)))AND(vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 INDEXED BY i62 WHERE ((('') BETWEEN ((NOT (t0.c1))) AND ((((vt1.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))) ORDER BY ((x'')-(vt1.c0)) COLLATE RTRIM DESC  NULLS LAST, NULLIF(t0.c0, ((((((((vt0.c0)AND(t0.c2)))OR(vt0.c0)))OR(t0.c1)))AND(vt0.c0))) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (CASE (t0.c63 IN ())  WHEN ((-8.90177276E8) BETWEEN (vt0.c0) AND (t0.c1)) THEN CASE WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 ELSE NULL END ELSE (t0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (t0.c63 IN ())  WHEN ((-8.90177276E8) BETWEEN (vt0.c0) AND (t0.c1)) THEN CASE WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 ELSE NULL END ELSE (t0.c1 IN ()) END) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (CASE (t0.c63 IN ())  WHEN ((-8.90177276E8) BETWEEN (vt0.c0) AND (t0.c1)) THEN CASE WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 ELSE NULL END ELSE (t0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (t0.c63 IN ())  WHEN ((-8.90177276E8) BETWEEN (vt0.c0) AND (t0.c1)) THEN CASE WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 ELSE NULL END ELSE (t0.c1 IN ()) END) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (CASE (t0.c63 IN ())  WHEN ((-8.90177276E8) BETWEEN (vt0.c0) AND (t0.c1)) THEN CASE WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 ELSE NULL END ELSE (t0.c1 IN ()) END);
SELECT * FROM vt1 WHERE ((((vt1.c0 IN ()))+(((vt1.c0)==(vt1.c0))))) ORDER BY CASE WHEN ((vt1.c0)-(-1.858614821E9)) THEN vt1.c0 END, x'8029' DESC  NULLS FIRST, ((x'53bb') NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))+(((vt1.c0)==(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)-(-1.858614821E9)) THEN vt1.c0 END, x'8029' DESC  NULLS FIRST, ((x'53bb') NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM vt1 WHERE ((((vt1.c0 IN ()))+(((vt1.c0)==(vt1.c0))))) ORDER BY CASE WHEN ((vt1.c0)-(-1.858614821E9)) THEN vt1.c0 END, x'8029' DESC  NULLS FIRST, ((x'53bb') NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))+(((vt1.c0)==(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)-(-1.858614821E9)) THEN vt1.c0 END, x'8029' DESC  NULLS FIRST, ((x'53bb') NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM vt1 WHERE ((((vt1.c0 IN ()))+(((vt1.c0)==(vt1.c0))))) ORDER BY CASE WHEN ((vt1.c0)-(-1.858614821E9)) THEN vt1.c0 END, x'8029' DESC  NULLS FIRST, ((x'53bb') NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN vt0.c0 ELSE vt1.c0 END IN (t0.c63 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN vt0.c0 ELSE vt1.c0 END IN (t0.c63 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN vt0.c0 ELSE vt1.c0 END IN (t0.c63 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN vt0.c0 ELSE vt1.c0 END IN (t0.c63 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN vt0.c0 ELSE vt1.c0 END IN (t0.c63 COLLATE NOCASE)));
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0) NOT BETWEEN ((NOT (vt1.c0))) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN ((NOT (vt1.c0))) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0) NOT BETWEEN ((NOT (vt1.c0))) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN ((NOT (vt1.c0))) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0) NOT BETWEEN ((NOT (vt1.c0))) AND ((vt1.c0 IN ()))));
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE BINARY) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE BINARY) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE BINARY) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY (((vt1.c0)>>('Xd')) IN ((vt0.c0 IN ()), vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)>>('Xd')) IN ((vt0.c0 IN ()), vt0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY (((vt1.c0)>>('Xd')) IN ((vt0.c0 IN ()), vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)>>('Xd')) IN ((vt0.c0 IN ()), vt0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY (((vt1.c0)>>('Xd')) IN ((vt0.c0 IN ()), vt0.c0)) DESC  NULLS FIRST;
SELECT * FROM vt0, t0, vt1 WHERE ((((CASE WHEN t0.c1 THEN vt1.c0 END))=((CASE WHEN NULL THEN t0.c1 ELSE -7.28435675E8 END)))) ORDER BY TYPEOF(DISTINCT ((((t0.c63)AND(vt1.c0)))AND(t0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t0.c1 THEN vt1.c0 END))=((CASE WHEN NULL THEN t0.c1 ELSE -7.28435675E8 END)))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0, vt1 ORDER BY TYPEOF(DISTINCT ((((t0.c63)AND(vt1.c0)))AND(t0.c2)))  NULLS LAST);
SELECT * FROM vt0, t0, vt1 WHERE ((((CASE WHEN t0.c1 THEN vt1.c0 END))=((CASE WHEN NULL THEN t0.c1 ELSE -7.28435675E8 END)))) ORDER BY TYPEOF(DISTINCT ((((t0.c63)AND(vt1.c0)))AND(t0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t0.c1 THEN vt1.c0 END))=((CASE WHEN NULL THEN t0.c1 ELSE -7.28435675E8 END)))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0, vt1 ORDER BY TYPEOF(DISTINCT ((((t0.c63)AND(vt1.c0)))AND(t0.c2)))  NULLS LAST);
SELECT * FROM vt0, t0, vt1 WHERE ((((CASE WHEN t0.c1 THEN vt1.c0 END))=((CASE WHEN NULL THEN t0.c1 ELSE -7.28435675E8 END)))) ORDER BY TYPEOF(DISTINCT ((((t0.c63)AND(vt1.c0)))AND(t0.c2)))  NULLS LAST;
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(NULL))  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(NULL))  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(NULL))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (x'4828') ORDER BY ((vt0.c0)GLOB(vt0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((x'4828') IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)GLOB(vt0.c0)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0 WHERE (x'4828') ORDER BY ((vt0.c0)GLOB(vt0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((x'4828') IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)GLOB(vt0.c0)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0 WHERE (x'4828') ORDER BY ((vt0.c0)GLOB(vt0.c0)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0)))%(((vt1.c0)IS(x'f901')))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS(vt1.c0)))%(((vt1.c0)IS(x'f901'))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0)))%(((vt1.c0)IS(x'f901')))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS(vt1.c0)))%(((vt1.c0)IS(x'f901'))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0)))%(((vt1.c0)IS(x'f901')))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))OR(CASE WHEN t0.c1 THEN t0.c63 END)))OR(vt1.c0 COLLATE RTRIM)) INNER JOIN t0 ON t0.c0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))OR(CASE WHEN t0.c1 THEN t0.c63 END)))OR(vt1.c0 COLLATE RTRIM)) INNER JOIN t0 ON t0.c0);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))OR(CASE WHEN t0.c1 THEN t0.c63 END)))OR(vt1.c0 COLLATE RTRIM)) INNER JOIN t0 ON t0.c0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))OR(CASE WHEN t0.c1 THEN t0.c63 END)))OR(vt1.c0 COLLATE RTRIM)) INNER JOIN t0 ON t0.c0);
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELY(DISTINCT (NOT (t0.c63)))) ORDER BY ((t0.c63) ISNULL), CAST((t0.c0 IN ()) AS NUMERIC) DESC, ((((t0.c2, t0.c63, t0.c0))>(('583810818', t0.c2, t0.c2))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (NOT (t0.c63)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c63) ISNULL), CAST((t0.c0 IN ()) AS NUMERIC) DESC, ((((t0.c2, t0.c63, t0.c0))>(('583810818', t0.c2, t0.c2))) IN ()) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELY(DISTINCT (NOT (t0.c63)))) ORDER BY ((t0.c63) ISNULL), CAST((t0.c0 IN ()) AS NUMERIC) DESC, ((((t0.c2, t0.c63, t0.c0))>(('583810818', t0.c2, t0.c2))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (NOT (t0.c63)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c63) ISNULL), CAST((t0.c0 IN ()) AS NUMERIC) DESC, ((((t0.c2, t0.c63, t0.c0))>(('583810818', t0.c2, t0.c2))) IN ()) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELY(DISTINCT (NOT (t0.c63)))) ORDER BY ((t0.c63) ISNULL), CAST((t0.c0 IN ()) AS NUMERIC) DESC, ((((t0.c2, t0.c63, t0.c0))>(('583810818', t0.c2, t0.c2))) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c0)<=(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)<=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c0)<=(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)<=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c0)<=(vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))/(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))/(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))/(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))/(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))/(CAST(vt0.c0 AS BLOB))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC));
SELECT ALL * FROM vt1, t0 WHERE ((((NULL, t0.c63, t0.c2)) NOT BETWEEN ((vt1.c0, t0.c63, t0.c0)) AND ((t0.c0, t0.c2, t0.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((NULL, t0.c63, t0.c2)) NOT BETWEEN ((vt1.c0, t0.c63, t0.c0)) AND ((t0.c0, t0.c2, t0.c1))) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((NULL, t0.c63, t0.c2)) NOT BETWEEN ((vt1.c0, t0.c63, t0.c0)) AND ((t0.c0, t0.c2, t0.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((NULL, t0.c63, t0.c2)) NOT BETWEEN ((vt1.c0, t0.c63, t0.c0)) AND ((t0.c0, t0.c2, t0.c1))) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((NULL, t0.c63, t0.c2)) NOT BETWEEN ((vt1.c0, t0.c63, t0.c0)) AND ((t0.c0, t0.c2, t0.c1))) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((vt1.c0 IN (vt1.c0)))>>(x''))  NULLS LAST, ((((PRINTF(vt1.c0))AND(((0.17234595687076326)<>(vt1.c0)))))AND(vt1.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0)))>>(x''))  NULLS LAST, ((((PRINTF(vt1.c0))AND(((0.17234595687076326)!=(vt1.c0)))))AND(vt1.c0)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((vt1.c0 IN (vt1.c0)))>>(x''))  NULLS LAST, ((((PRINTF(vt1.c0))AND(((0.17234595687076326)<>(vt1.c0)))))AND(vt1.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0)))>>(x''))  NULLS LAST, ((((PRINTF(vt1.c0))AND(((0.17234595687076326)!=(vt1.c0)))))AND(vt1.c0)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((vt1.c0 IN (vt1.c0)))>>(x''))  NULLS LAST, ((((PRINTF(vt1.c0))AND(((0.17234595687076326)<>(vt1.c0)))))AND(vt1.c0)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0 NOT INDEXED WHERE (((((((((((t0.c1) NOT NULL))AND(x'78ad')))AND((- (t0.c63)))))OR(CAST(t0.c0 AS BLOB))))AND(LOWER(DISTINCT 0Xffffffffb394fccd)))) ORDER BY (- (((((t0.c2)OR(t0.c63)))OR(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c1) NOT NULL))AND(x'78ad')))AND((- (t0.c63)))))OR(CAST(t0.c0 AS BLOB))))AND(LOWER(DISTINCT 0xffffffffb394fccd)))) IS TRUE)  as count FROM vt1, t0 ORDER BY (- (((((t0.c2)OR(t0.c63)))OR(t0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 NOT INDEXED WHERE (((((((((((t0.c1) NOT NULL))AND(x'78ad')))AND((- (t0.c63)))))OR(CAST(t0.c0 AS BLOB))))AND(LOWER(DISTINCT 0Xffffffffb394fccd)))) ORDER BY (- (((((t0.c2)OR(t0.c63)))OR(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c1) NOT NULL))AND(x'78ad')))AND((- (t0.c63)))))OR(CAST(t0.c0 AS BLOB))))AND(LOWER(DISTINCT 0xffffffffb394fccd)))) IS TRUE)  as count FROM vt1, t0 ORDER BY (- (((((t0.c2)OR(t0.c63)))OR(t0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 NOT INDEXED WHERE (((((((((((t0.c1) NOT NULL))AND(x'78ad')))AND((- (t0.c63)))))OR(CAST(t0.c0 AS BLOB))))AND(LOWER(DISTINCT 0Xffffffffb394fccd)))) ORDER BY (- (((((t0.c2)OR(t0.c63)))OR(t0.c2))))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) IS FALSE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) IS FALSE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) IS FALSE)) IS FALSE));
SELECT ALL * FROM vt1, t0, vt0 WHERE (vt1.c0) ORDER BY CASE ((t0.c2)IS(0x557b3f3b))  WHEN RTRIM('1697806220') THEN t0.c63 COLLATE RTRIM WHEN ((vt0.c0)==(t0.c2)) THEN TRIM(1.719705963E9) WHEN t0.c63 THEN CAST(t0.c0 AS REAL) WHEN ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(t0.c0)))AND(t0.c1)) THEN ((t0.c63) IS TRUE) WHEN CAST('' AS BLOB) THEN t0.c1 COLLATE BINARY END  NULLS FIRST, ((((t0.c1) BETWEEN (t0.c1) AND (t0.c0)))==(TOTAL_CHANGES())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CASE ((t0.c2)IS(0x557b3f3b))  WHEN RTRIM('1697806220') THEN t0.c63 COLLATE RTRIM WHEN ((vt0.c0)==(t0.c2)) THEN TRIM(1.719705963E9) WHEN t0.c63 THEN CAST(t0.c0 AS REAL) WHEN ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(t0.c0)))AND(t0.c1)) THEN ((t0.c63) IS TRUE) WHEN CAST('' AS BLOB) THEN t0.c1 COLLATE BINARY END  NULLS FIRST, ((((t0.c1) BETWEEN (t0.c1) AND (t0.c0)))==(TOTAL_CHANGES())) DESC);
SELECT ALL * FROM vt1, t0, vt0 WHERE (vt1.c0) ORDER BY CASE ((t0.c2)IS(0x557b3f3b))  WHEN RTRIM('1697806220') THEN t0.c63 COLLATE RTRIM WHEN ((vt0.c0)==(t0.c2)) THEN TRIM(1.719705963E9) WHEN t0.c63 THEN CAST(t0.c0 AS REAL) WHEN ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(t0.c0)))AND(t0.c1)) THEN ((t0.c63) IS TRUE) WHEN CAST('' AS BLOB) THEN t0.c1 COLLATE BINARY END  NULLS FIRST, ((((t0.c1) BETWEEN (t0.c1) AND (t0.c0)))==(TOTAL_CHANGES())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CASE ((t0.c2)IS(0x557b3f3b))  WHEN RTRIM('1697806220') THEN t0.c63 COLLATE RTRIM WHEN ((vt0.c0)==(t0.c2)) THEN TRIM(1.719705963E9) WHEN t0.c63 THEN CAST(t0.c0 AS REAL) WHEN ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(t0.c0)))AND(t0.c1)) THEN ((t0.c63) IS TRUE) WHEN CAST('' AS BLOB) THEN t0.c1 COLLATE BINARY END  NULLS FIRST, ((((t0.c1) BETWEEN (t0.c1) AND (t0.c0)))==(TOTAL_CHANGES())) DESC);
SELECT ALL * FROM vt1, t0, vt0 WHERE (vt1.c0) ORDER BY CASE ((t0.c2)IS(0x557b3f3b))  WHEN RTRIM('1697806220') THEN t0.c63 COLLATE RTRIM WHEN ((vt0.c0)==(t0.c2)) THEN TRIM(1.719705963E9) WHEN t0.c63 THEN CAST(t0.c0 AS REAL) WHEN ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(t0.c0)))AND(t0.c1)) THEN ((t0.c63) IS TRUE) WHEN CAST('' AS BLOB) THEN t0.c1 COLLATE BINARY END  NULLS FIRST, ((((t0.c1) BETWEEN (t0.c1) AND (t0.c0)))==(TOTAL_CHANGES())) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))) AS REAL));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c63 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t0.c63 COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c63 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t0.c63 COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c63 COLLATE BINARY);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0 COLLATE NOCASE) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) IS TRUE));
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0 COLLATE NOCASE) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) IS TRUE));
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0 COLLATE NOCASE) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) IS TRUE);
SELECT * FROM vt1 WHERE ('-850208587');
SELECT SUM(count) FROM (SELECT ALL (('-850208587') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('-850208587');
SELECT SUM(count) FROM (SELECT ALL (('-850208587') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('-850208587');
SELECT COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((t0.c0)||(t0.c2))) AND ((- (t0.c2)))) WHERE (((t0.c63 COLLATE BINARY)<<(((vt0.c0) BETWEEN (t0.c1) AND (t0.c63)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c63 COLLATE BINARY)<<(((vt0.c0) BETWEEN (t0.c1) AND (t0.c63))))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((t0.c0)||(t0.c2))) AND ((- (t0.c2)))));
SELECT COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((t0.c0)||(t0.c2))) AND ((- (t0.c2)))) WHERE (((t0.c63 COLLATE BINARY)<<(((vt0.c0) BETWEEN (t0.c1) AND (t0.c63)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c63 COLLATE BINARY)<<(((vt0.c0) BETWEEN (t0.c1) AND (t0.c63))))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((t0.c0)||(t0.c2))) AND ((- (t0.c2)))));
SELECT COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((t0.c0)||(t0.c2))) AND ((- (t0.c2)))) WHERE (((t0.c63 COLLATE BINARY)<<(((vt0.c0) BETWEEN (t0.c1) AND (t0.c63)))));
SELECT COUNT(*) FROM t0, vt1 WHERE (((TRIM(DISTINCT t0.c2))|(x'')));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t0.c2))|(x''))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((TRIM(DISTINCT t0.c2))|(x'')));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t0.c2))|(x''))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((TRIM(DISTINCT t0.c2))|(x'')));
SELECT ALL * FROM t0, vt0 WHERE (LIKELY('(F')) ORDER BY CAST(x'4c67' AS INTEGER);
SELECT SUM(count) FROM (SELECT ((LIKELY('(F')) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(x'4c67' AS INTEGER));
SELECT ALL * FROM t0, vt0 WHERE (LIKELY('(F')) ORDER BY CAST(x'4c67' AS INTEGER);
SELECT SUM(count) FROM (SELECT ((LIKELY('(F')) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(x'4c67' AS INTEGER));
SELECT ALL * FROM t0, vt0 WHERE (LIKELY('(F')) ORDER BY CAST(x'4c67' AS INTEGER);
SELECT * FROM vt0, vt1 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY '9' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED ORDER BY '9' DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY '9' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED ORDER BY '9' DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY '9' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((CAST(t0.c1 AS BLOB)) NOT NULL) WHERE ((((t0.c63) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63) IS FALSE) IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((CAST(t0.c1 AS BLOB)) NOT NULL));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((CAST(t0.c1 AS BLOB)) NOT NULL) WHERE ((((t0.c63) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63) IS FALSE) IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((CAST(t0.c1 AS BLOB)) NOT NULL));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((CAST(t0.c1 AS BLOB)) NOT NULL) WHERE ((((t0.c63) IS FALSE) IN ()));
SELECT * FROM vt0 WHERE (CAST(((NULL)=(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)=(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((NULL)=(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)=(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((NULL)=(vt0.c0)) AS INTEGER));
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)) THEN CASE t0.c1  WHEN x'' THEN t0.c1 ELSE t0.c1 END ELSE CAST(t0.c0 AS BLOB) END) ORDER BY t0.c63 COLLATE BINARY DESC, ((((((NULL) BETWEEN (t0.c2) AND (t0.c1)))AND(t0.c0)))OR(((((t0.c63)OR(t0.c2)))AND(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)) THEN CASE t0.c1  WHEN x'' THEN t0.c1 ELSE t0.c1 END ELSE CAST(t0.c0 AS BLOB) END) IS TRUE)  as count FROM t0 ORDER BY t0.c63 COLLATE BINARY DESC, ((((((NULL) BETWEEN (t0.c2) AND (t0.c1)))AND(t0.c0)))OR(((((t0.c63)OR(t0.c2)))AND(t0.c2))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)) THEN CASE t0.c1  WHEN x'' THEN t0.c1 ELSE t0.c1 END ELSE CAST(t0.c0 AS BLOB) END) ORDER BY t0.c63 COLLATE BINARY DESC, ((((((NULL) BETWEEN (t0.c2) AND (t0.c1)))AND(t0.c0)))OR(((((t0.c63)OR(t0.c2)))AND(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)) THEN CASE t0.c1  WHEN x'' THEN t0.c1 ELSE t0.c1 END ELSE CAST(t0.c0 AS BLOB) END) IS TRUE)  as count FROM t0 ORDER BY t0.c63 COLLATE BINARY DESC, ((((((NULL) BETWEEN (t0.c2) AND (t0.c1)))AND(t0.c0)))OR(((((t0.c63)OR(t0.c2)))AND(t0.c2))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)) THEN CASE t0.c1  WHEN x'' THEN t0.c1 ELSE t0.c1 END ELSE CAST(t0.c0 AS BLOB) END) ORDER BY t0.c63 COLLATE BINARY DESC, ((((((NULL) BETWEEN (t0.c2) AND (t0.c1)))AND(t0.c0)))OR(((((t0.c63)OR(t0.c2)))AND(t0.c2))))  NULLS LAST;
SELECT ALL * FROM vt1 INDEXED BY i62 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 INDEXED BY i62);
SELECT ALL * FROM vt1 INDEXED BY i62 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 INDEXED BY i62);
SELECT COUNT(*) FROM vt1 NOT INDEXED, vt0, t0 INDEXED BY i62 WHERE (CAST(CHAR(vt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CHAR(vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt1, vt0, t0 INDEXED BY i62);
SELECT COUNT(*) FROM vt1 NOT INDEXED, vt0, t0 INDEXED BY i62 WHERE (CAST(CHAR(vt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CHAR(vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt1, vt0, t0 INDEXED BY i62);
SELECT COUNT(*) FROM vt1 NOT INDEXED, vt0, t0 INDEXED BY i62 WHERE (CAST(CHAR(vt0.c0) AS BLOB));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END)IS NOT(vt0.c0))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END)IS NOT(vt0.c0))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END)IS NOT(vt0.c0))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END)IS NOT(vt0.c0))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END)IS NOT(vt0.c0))) ORDER BY NULL  NULLS LAST;
SELECT * FROM t0 WHERE (CAST(CASE t0.c2  WHEN NULL THEN t0.c1 ELSE t0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c2  WHEN NULL THEN t0.c1 ELSE t0.c0 END AS REAL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(CASE t0.c2  WHEN NULL THEN t0.c1 ELSE t0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c2  WHEN NULL THEN t0.c1 ELSE t0.c0 END AS REAL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(CASE t0.c2  WHEN NULL THEN t0.c1 ELSE t0.c0 END AS REAL));
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN ((((t0.c63)LIKE(t0.c2)))) AND (((t0.c1 IN ()))))) ORDER BY ((t0.c1) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((t0.c63)LIKE(t0.c2)))) AND (((t0.c1 IN ()))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c1) NOT NULL));
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN ((((t0.c63)LIKE(t0.c2)))) AND (((t0.c1 IN ()))))) ORDER BY ((t0.c1) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((t0.c63)LIKE(t0.c2)))) AND (((t0.c1 IN ()))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c1) NOT NULL));
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN ((((t0.c63)LIKE(t0.c2)))) AND (((t0.c1 IN ()))))) ORDER BY ((t0.c1) NOT NULL);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))>((((x'6c32a305'))<=((NULL)))))) ORDER BY ((HEX(DISTINCT vt1.c0))>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT))>((((x'6c32a305'))<=((NULL)))))) IS TRUE)  as count FROM vt1 ORDER BY ((HEX(DISTINCT vt1.c0))>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))>((((x'6c32a305'))<=((NULL)))))) ORDER BY ((HEX(DISTINCT vt1.c0))>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT))>((((x'6c32a305'))<=((NULL)))))) IS TRUE)  as count FROM vt1 ORDER BY ((HEX(DISTINCT vt1.c0))>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))>((((x'6c32a305'))<=((NULL)))))) ORDER BY ((HEX(DISTINCT vt1.c0))>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((0.4797005394542576, vt0.c0, 0xffffffffb78690af)) NOT BETWEEN (((vt1.c0 IN (vt1.c0, vt0.c0)), (((vt0.c0))<((vt0.c0))), 0.2435716312518088)) AND ((((vt0.c0) IS FALSE), ((vt1.c0)%(vt0.c0)), vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((0.4797005394542576, vt0.c0, 0Xffffffffb78690af)) NOT BETWEEN (((vt1.c0 IN (vt1.c0, vt0.c0)), (((vt0.c0))<((vt0.c0))), 0.2435716312518088)) AND ((((vt0.c0) IS FALSE), ((vt1.c0)%(vt0.c0)), vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((0.4797005394542576, vt0.c0, 0xffffffffb78690af)) NOT BETWEEN (((vt1.c0 IN (vt1.c0, vt0.c0)), (((vt0.c0))<((vt0.c0))), 0.2435716312518088)) AND ((((vt0.c0) IS FALSE), ((vt1.c0)%(vt0.c0)), vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((0.4797005394542576, vt0.c0, 0Xffffffffb78690af)) NOT BETWEEN (((vt1.c0 IN (vt1.c0, vt0.c0)), (((vt0.c0))<((vt0.c0))), 0.2435716312518088)) AND ((((vt0.c0) IS FALSE), ((vt1.c0)%(vt0.c0)), vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((0.4797005394542576, vt0.c0, 0xffffffffb78690af)) NOT BETWEEN (((vt1.c0 IN (vt1.c0, vt0.c0)), (((vt0.c0))<((vt0.c0))), 0.2435716312518088)) AND ((((vt0.c0) IS FALSE), ((vt1.c0)%(vt0.c0)), vt0.c0 COLLATE NOCASE))));
SELECT ALL * FROM vt1, vt0 INNER JOIN t0 ON (((vt0.c0)|(t0.c2)) IN ()) WHERE (UPPER(DISTINCT UNLIKELY(t0.c63)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT UNLIKELY(t0.c63))) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t0 ON (((vt0.c0)|(t0.c2)) IN ()));
SELECT ALL * FROM vt1, vt0 INNER JOIN t0 ON (((vt0.c0)|(t0.c2)) IN ()) WHERE (UPPER(DISTINCT UNLIKELY(t0.c63)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT UNLIKELY(t0.c63))) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t0 ON (((vt0.c0)|(t0.c2)) IN ()));
SELECT ALL * FROM vt1, vt0 INNER JOIN t0 ON (((vt0.c0)|(t0.c2)) IN ()) WHERE (UPPER(DISTINCT UNLIKELY(t0.c63)));
SELECT * FROM t0, vt1, vt0 WHERE ((((((((vt1.c0))>=((x'5732'))))OR(((t0.c1) NOTNULL))))OR(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0))>=((x'5732'))))OR(((t0.c1) NOTNULL))))OR(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE ((((((((vt1.c0))>=((x'5732'))))OR(((t0.c1) NOTNULL))))OR(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0))>=((x'5732'))))OR(((t0.c1) NOTNULL))))OR(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE ((((((((vt1.c0))>=((x'5732'))))OR(((t0.c1) NOTNULL))))OR(CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) ISNULL)))) ORDER BY vt0.c0  NULLS LAST, (((0X23589ee3 IN (vt0.c0))) BETWEEN (json_array_length(0xffffffffb59acbe9, vt0.c0)) AND (vt0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST, (((0X23589ee3 IN (vt0.c0))) BETWEEN (json_array_length(0Xffffffffb59acbe9, vt0.c0)) AND (vt0.c0 COLLATE RTRIM)) ASC);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) ISNULL)))) ORDER BY vt0.c0  NULLS LAST, (((0X23589ee3 IN (vt0.c0))) BETWEEN (json_array_length(0xffffffffb59acbe9, vt0.c0)) AND (vt0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST, (((0X23589ee3 IN (vt0.c0))) BETWEEN (json_array_length(0Xffffffffb59acbe9, vt0.c0)) AND (vt0.c0 COLLATE RTRIM)) ASC);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) ISNULL)))) ORDER BY vt0.c0  NULLS LAST, (((0X23589ee3 IN (vt0.c0))) BETWEEN (json_array_length(0xffffffffb59acbe9, vt0.c0)) AND (vt0.c0 COLLATE RTRIM)) ASC;
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((((t0.c1) NOTNULL))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c1)))))OR(CASE WHEN t0.c1 THEN vt1.c0 WHEN t0.c2 THEN 864847465 WHEN t0.c63 THEN vt1.c0 END))) ORDER BY CAST(t0.c0 COLLATE NOCASE AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1) NOTNULL))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c1)))))OR(CASE WHEN t0.c1 THEN vt1.c0 WHEN t0.c2 THEN 864847465 WHEN t0.c63 THEN vt1.c0 END))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST(t0.c0 COLLATE NOCASE AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((((t0.c1) NOTNULL))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c1)))))OR(CASE WHEN t0.c1 THEN vt1.c0 WHEN t0.c2 THEN 864847465 WHEN t0.c63 THEN vt1.c0 END))) ORDER BY CAST(t0.c0 COLLATE NOCASE AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1) NOTNULL))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c1)))))OR(CASE WHEN t0.c1 THEN vt1.c0 WHEN t0.c2 THEN 864847465 WHEN t0.c63 THEN vt1.c0 END))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST(t0.c0 COLLATE NOCASE AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((((t0.c1) NOTNULL))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c1)))))OR(CASE WHEN t0.c1 THEN vt1.c0 WHEN t0.c2 THEN 864847465 WHEN t0.c63 THEN vt1.c0 END))) ORDER BY CAST(t0.c0 COLLATE NOCASE AS REAL) DESC  NULLS LAST;
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((t0.c2, NULL, t0.c0))>((t0.c63, t0.c2, vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t0.c2, NULL, t0.c0))>((t0.c63, t0.c2, vt0.c0))) IN ())) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((t0.c2, NULL, t0.c0))>((t0.c63, t0.c2, vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t0.c2, NULL, t0.c0))>((t0.c63, t0.c2, vt0.c0))) IN ())) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((t0.c2, NULL, t0.c0))>((t0.c63, t0.c2, vt0.c0))) IN ()));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CASE WHEN CAST(t0.c1 AS INTEGER) THEN NULLIF(DISTINCT vt1.c0, t0.c0) ELSE (((vt0.c0)) NOT BETWEEN ((t0.c1)) AND (('#<丝kUE+k'))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c1 AS INTEGER) THEN NULLIF(DISTINCT vt1.c0, t0.c0) ELSE (((vt0.c0)) NOT BETWEEN ((t0.c1)) AND (('#<丝kUE+k'))) END) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CASE WHEN CAST(t0.c1 AS INTEGER) THEN NULLIF(DISTINCT vt1.c0, t0.c0) ELSE (((vt0.c0)) NOT BETWEEN ((t0.c1)) AND (('#<丝kUE+k'))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c1 AS INTEGER) THEN NULLIF(DISTINCT vt1.c0, t0.c0) ELSE (((vt0.c0)) NOT BETWEEN ((t0.c1)) AND (('#<丝kUE+k'))) END) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CASE WHEN CAST(t0.c1 AS INTEGER) THEN NULLIF(DISTINCT vt1.c0, t0.c0) ELSE (((vt0.c0)) NOT BETWEEN ((t0.c1)) AND (('#<丝kUE+k'))) END);
SELECT COUNT(*) FROM vt1 WHERE (NULLIF(DISTINCT ((vt1.c0)LIKE(vt1.c0)), (NULL IN (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((vt1.c0)LIKE(vt1.c0)), (NULL IN (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (NULLIF(DISTINCT ((vt1.c0)LIKE(vt1.c0)), (NULL IN (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((vt1.c0)LIKE(vt1.c0)), (NULL IN (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (NULLIF(DISTINCT ((vt1.c0)LIKE(vt1.c0)), (NULL IN (vt1.c0))));
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE ((((t0.c2)<=(t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)<=(t0.c1)) IN ())) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE ((((t0.c2)<=(t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)<=(t0.c1)) IN ())) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE ((((t0.c2)<=(t0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)&(vt1.c0))) IS TRUE)) ORDER BY (~ (LIKELIHOOD(DISTINCT vt1.c0, 0.709377976272702)))  NULLS FIRST, UPPER('-1547291947')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)&(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY (~ (LIKELIHOOD(DISTINCT vt1.c0, 0.709377976272702)))  NULLS FIRST, UPPER('-1547291947')  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)&(vt1.c0))) IS TRUE)) ORDER BY (~ (LIKELIHOOD(DISTINCT vt1.c0, 0.709377976272702)))  NULLS FIRST, UPPER('-1547291947')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)&(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY (~ (LIKELIHOOD(DISTINCT vt1.c0, 0.709377976272702)))  NULLS FIRST, UPPER('-1547291947')  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)&(vt1.c0))) IS TRUE)) ORDER BY (~ (LIKELIHOOD(DISTINCT vt1.c0, 0.709377976272702)))  NULLS FIRST, UPPER('-1547291947')  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE ((((0.2920600679336304 IN ()))-((((vt1.c0))<((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((0.2920600679336304 IN ()))-((((vt1.c0))<((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((0.2920600679336304 IN ()))-((((vt1.c0))<((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((0.2920600679336304 IN ()))-((((vt1.c0))<((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((0.2920600679336304 IN ()))-((((vt1.c0))<((vt1.c0))))));
SELECT * FROM t0 WHERE (((t0.c1) NOT BETWEEN (t0.c1) AND ((('0.9274599563590179') NOT BETWEEN (t0.c0) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) NOT BETWEEN (t0.c1) AND ((('0.9274599563590179') NOT BETWEEN (t0.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c1) NOT BETWEEN (t0.c1) AND ((('0.9274599563590179') NOT BETWEEN (t0.c0) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) NOT BETWEEN (t0.c1) AND ((('0.9274599563590179') NOT BETWEEN (t0.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c1) NOT BETWEEN (t0.c1) AND ((('0.9274599563590179') NOT BETWEEN (t0.c0) AND (t0.c2)))));
SELECT COUNT(*) FROM vt1 WHERE (((- (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt1 WHERE (((- (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt1 WHERE (((- (vt1.c0)) IN ()));
SELECT * FROM vt1, t0, vt0 WHERE (((((((vt1.c0) BETWEEN (NULL) AND (x'')))AND(vt1.c0)))OR(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) BETWEEN (NULL) AND (x'')))AND(vt1.c0)))OR(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (((((((vt1.c0) BETWEEN (NULL) AND (x'')))AND(vt1.c0)))OR(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) BETWEEN (NULL) AND (x'')))AND(vt1.c0)))OR(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (((((((vt1.c0) BETWEEN (NULL) AND (x'')))AND(vt1.c0)))OR(((vt0.c0) IS FALSE))));
SELECT * FROM t0 WHERE (((((t0.c2)+(x''))) BETWEEN (((0.9916520983612783) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)+(x''))) BETWEEN (((0.9916520983612783) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c2)+(x''))) BETWEEN (((0.9916520983612783) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)+(x''))) BETWEEN (((0.9916520983612783) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c2)+(x''))) BETWEEN (((0.9916520983612783) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0, vt0 WHERE ((NOT ((NOT (t0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (t0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((NOT ((NOT (t0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (t0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((NOT ((NOT (t0.c1)))));
SELECT ALL * FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY ((((x'', vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((x'', vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY ((((x'', vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((x'', vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY ((((x'', vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 COLLATE NOCASE)>(TRIM(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)>(TRIM(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 COLLATE NOCASE)>(TRIM(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)>(TRIM(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 COLLATE NOCASE)>(TRIM(vt1.c0))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c63) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c63) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c63) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c63) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c63) NOTNULL));
SELECT * FROM t0, vt0 RIGHT OUTER JOIN vt1 ON (+ (((((vt1.c0)AND(vt1.c0)))OR(t0.c2)))) WHERE (t0.c1) ORDER BY ((t0.c1)-(t0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN vt1 ON (+ (((((vt1.c0)AND(vt1.c0)))OR(t0.c2)))) ORDER BY ((t0.c1)-(t0.c2)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM t0, vt0 RIGHT OUTER JOIN vt1 ON (+ (((((vt1.c0)AND(vt1.c0)))OR(t0.c2)))) WHERE (t0.c1) ORDER BY ((t0.c1)-(t0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN vt1 ON (+ (((((vt1.c0)AND(vt1.c0)))OR(t0.c2)))) ORDER BY ((t0.c1)-(t0.c2)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM t0, vt0 RIGHT OUTER JOIN vt1 ON (+ (((((vt1.c0)AND(vt1.c0)))OR(t0.c2)))) WHERE (t0.c1) ORDER BY ((t0.c1)-(t0.c2)) COLLATE NOCASE  NULLS LAST;
