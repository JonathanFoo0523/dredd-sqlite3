-- Time: 2024/06/10 14:37:31
-- Database: database30
-- Database version: 3.40.0
-- seed value: 4199941630
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
CREATE TEMP TABLE t1 (c0 INTEGER ); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 1ms;
DELETE FROM sqlite_stat1 WHERE HEX((('1689740142')||(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2046656822 sz=-599965919'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '0 sz=818488315 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=1315988224 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 1.689740142E9 COLLATE BINARY  WHEN '-194682461' THEN (('') NOT NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('818488315')<=(x'')))|(NULL)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '-1460675808 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1622187767 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-766397542, CAST(x'2b18' AS NUMERIC), (('1848922402') BETWEEN (-1276999459) AND (x''))))<=((CASE WHEN NULL THEN '' END, (('-599965919') NOTNULL), 'M8' COLLATE NOCASE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN '' END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=-1008871942 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((NULL)) AND ((NULL))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '-801426829 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-194682461'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))>>(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7133701848376267) NOT NULL)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.49730795626696345 IN ())) BETWEEN (CASE WHEN '-831430155' THEN x'' ELSE NULL END) AND ((((-109842252)) BETWEEN (('1689740142')) AND ((''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)LIKE('818488315'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1008871942 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1545655187'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-787939562'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.05407854312960725; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-1276999459' THEN '*L' ELSE 1.848922402E9 END)=((0.49730795626696345 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-831430155 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((0.05407854312960725)OR(-1e500)))AND(NULL)) IN (((('-1871825984', NULL, x'b541275b')) NOT BETWEEN ((NULL, -2123960323, NULL)) AND ((-1319198318, NULL, 'm7,thu'))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (0.16878078749094083 COLLATE BINARY IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1368728569 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ ('	'))  WHEN 114952533 COLLATE BINARY THEN ((0.42727669478495134) BETWEEN (x'78f46703') AND (-1812175785)) WHEN (+ (-766397542)) THEN (('345182830')<=('-1889595138')) WHEN CASE 'p'  WHEN -194682461 THEN x'' END THEN ((x'') BETWEEN (-1.871825984E9) AND (1160111587)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE 'CB'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=1 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_VERSION())>>(((x'b1b5')%(0Xffffffffd108ff16)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 sz=-805292177 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-386414335 sz=1655743908 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-836092516') IS FALSE))OR((('') BETWEEN (-1e500) AND ('')))))OR(CAST(x'6131' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.42727669478495134', x'6477', 'M7,THU')) BETWEEN ((-1.319198318E9, 0X748c3b51, x'')) AND ((NULL, '661528098', 0.7070781648950611))) IN (NULL COLLATE RTRIM, ABS(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-226368201 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1904691785'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('N' COLLATE RTRIM)AND(((NULL) NOT NULL))))OR((('p')<>(-2.123960323E9)))))OR(LIKELIHOOD(0.0661779569616825, 0.8843582732949297))))OR(((((0xffffffffc9c1fbfa)AND(NULL)))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '2 sz=1237318041 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1266027572'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1745012339'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 9223372036854775807'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('-787939562'))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-1202946108 sz=-1745012339 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN 0.07805262548916081 THEN 0.07828966892199263 WHEN '-2123960323' THEN x'' WHEN 'D.' THEN NULL ELSE x'' END AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN NULL THEN NULL END THEN ('' IN ()) WHEN (NULL IN ()) THEN IFNULL(DISTINCT x'', 0.6094477391507066) WHEN ((-1399592563) BETWEEN ('1848922402') AND (NULL)) THEN (+ (NULL)) ELSE ((NULL) BETWEEN ('2046656822') AND (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=2145622482 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1149639600 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1622187767', x'', x'', '1955347281', 0.6094477391507066)) BETWEEN ((json_insert(0.32671695137067036, NULL, NULL), ((x'')*(NULL)), ((NULL) NOTNULL), TYPEOF(0.07805262548916081), ((-5.99965919E8) IS TRUE))) AND ((((NULL)IS NOT(0.05407854312960725)), CASE NULL  WHEN x'' THEN ' oNJC w' ELSE '-1954197043' END, (')6' IN ()), (((('CB')AND(0.9403375181294614)))OR('')), ('1237318041' IN ())))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('-801426829') NOT BETWEEN (NULL) AND (0.9719407952160466)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=768897260'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1500335173 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('/qT')))<>((~ ('-1202946108')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1579122358 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('70442222', 0.8836659205177299, 0.7129911168245904)) BETWEEN ((x'6ecc32ff', 0X276e1e22, x'6a1f')) AND (('-766397542', 0xfffffffff15b0074, -1325728501))))>(CASE 2040351863  WHEN x'' THEN '' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((-5.99965919E8))<((x''))) THEN (~ (0.8930340632005002)) WHEN UNLIKELY(DISTINCT NULL) THEN (-1686868053 IN ()) WHEN x'37e2' THEN ABS(DISTINCT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) NOTNULL))AND(((x'')AND('-1533101679')))))AND((((('M8')AND(NULL)))OR(NULL)))))OR(((((((((x'140b')OR('-1871825984')))AND(NULL)))OR(x'')))OR(NULL)))))AND(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>=(0x49bff999)))>=((((((((('0.07805262548916081')OR(-1862277469)))AND(-1.325728501E9)))AND(0.7112172745209505)))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1310232404 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-555127046 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.10463022502510133)>>(1.955347281E9)))/(((NULL)==(810397820)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1622187767 sz=-2001589000 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((INSTR('*L', 0.5711517385479602))AND('|')))OR(((((NULL)OR(0.1857581742477945)))OR(0.10463022502510133)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1984708080 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=1658721691'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-1266027572 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-346174398 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.8728764621579482 AS INTEGER)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(DISTINCT x'')) BETWEEN (((NULL) NOT BETWEEN ('|') AND ('|'))) AND (((0.27342528810805466) NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=-1812175785 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.22521291411210198; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.21701805584124423)AND(NULL)))AND('-766397542')) COLLATE RTRIM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN ('?8') AND (x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=513214778 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('70442222'))<>(('qI[t')))) NOT BETWEEN ((((('-1545655187')AND(x'f0d1')))AND(1099665063))) AND ((((('XS')AND('0.8930340632005002')))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1008871942 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '6 sz=320487966 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 1.310232404E9 THEN '-1594770456' WHEN NULL THEN NULL WHEN 0.8958906908142585 THEN x'' ELSE x'655f' END)AND((+ (0.10999380001974746)))))AND((((NULL))!=(('-694682180'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1541596820 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-245694348 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '1204909807 -1391644493 sz=789364047 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '-1094945795 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-2123960323 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((('')) NOT BETWEEN ((x'')) AND ((408247511))))OR((((0.23645493524514472))<>(('44'))))))OR(CAST(-1665426100 AS INTEGER))))OR((NULL IN ()))))OR(x'692e' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-836092516 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1656297957 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -418531185 sz=-1313428242 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=2046549916 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(CAST('-1585531809' AS INTEGER)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'c328')) BETWEEN ((x'')) AND ((((-766397542)OR(0X62b0a5a4))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '1962449634 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(NULL AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE((('0.7133701848376267') IS FALSE), 0Xffffffffdaac7400); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '0 1351807950 sz=-282015175 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN '\rN' COLLATE BINARY ELSE NULL END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1828816887'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=1167873392 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2049561767 sz=-694682180 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=345182830 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1698987327 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 0 sz=-572334910 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1892757334 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1315988224 sz=820187206 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1936539243'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1628718082 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1023435982 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '822491103 2 sz=1711466276 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'07c17d18') NOT BETWEEN (-9223372036854775808) AND (x'7872')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE RTRIM IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (-262198286 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7762785562858698) NOTNULL)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-694682180' AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-101393673'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-109842252 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (0.8361844236224358 IN ()) THEN NULL COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '-792708081 sz=-1622127610 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=810397820 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-1036125508 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((NULL, NULL, ',g')) BETWEEN ((0.6213617704679396, '1100711051', '-194682461')) AND ((NULL, '-1', NULL))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((load_extension(906527393)) NOTNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=1266054854 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 2 sz=-31193137 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '776982934 927653557 sz=-2096466474 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((((((((((x'')AND(x'172b')))AND(NULL)))OR(-836092516)))OR(',|')))) AND ((NULL COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '200415568 sz=-599965919 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '-146617641 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1848922402'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN NULL THEN x'' WHEN NULL THEN NULL WHEN '-1218970000' THEN '1299569959' ELSE '-1973086162' END)AND(json_quote(''))))OR(0.9139140984243294 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1636514398 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-831430155 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-528691873)OR(x'1ffe3e27')))OR('-2037353739'))) ISNULL); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('822491103' IN ()) IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-52851968 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'5ed7', NULL, 320487966))<(('', '-194682461', NULL))))OR(((x'')<>(0x2cd12de5)))))AND(CASE ''  WHEN '-190395331' THEN NULL ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-101393673'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT x'') COLLATE BINARY; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-1984708080 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-460092998 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=1167873392 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-194682461 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND('!2nZ')))OR(QUOTE(x'a8b5'))))OR((((0.5769370062515761)) NOT BETWEEN ((x'')) AND (('-1094945795'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=810397820 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1478465590 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('0.6094477391507066' AS TEXT))IS NOT(((x'')GLOB(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0 sz=-1129804832 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((- (1.655743908E9))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'' IN ()) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -485003906'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1112394608 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-1862277469 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '0 -172792033 sz=-1729238919'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))>>(CAST(0.7157872678657614 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=-366963341 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2046656822 0'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS TRUE)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 0 sz=-89389146 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE BINARY AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-137199465 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0.5317357019181945)OR(((NULL)<=('-729024132')))))AND(((x'')>('1204136907')))))OR('f8k)nowB	r' COLLATE NOCASE)))OR((('%>uLo9') NOT BETWEEN ('-1545655187') AND ('p')))))OR(((('j,'))<=((NULL))))))OR(((('-864119216')) NOT BETWEEN ((x'5aedb70b')) AND ((-1994018194))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=1310232404'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1099665063'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((((((NULL)AND(-1892757334)))AND(0.24307347185229344)))) AND (((+ (x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('?#e*2EmP\r' COLLATE RTRIM))<>((1.310232404E9 COLLATE BINARY))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=211209257 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-9223372036854775808 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>=(-7.66397542E8)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NULL)AND(NULL)))AND(NULL)))AND(0.2967293656255009)))AND(0.8958906908142585)) IN (((NULL) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('-805292177') IS TRUE) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1593574214'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.3470392702707604)IS(NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=768897260 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 -382378975 2 sz=-1871825984 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-386414335 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-587754311 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '2 193894954 sz=1642465166'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.29141217137030817)) BETWEEN (('8Rv,a''U')) AND ((NULL))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=839157495 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '0 0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((IFNULL(DISTINCT NULL, 0.7133701848376267))AND(CAST(x'5c4f' AS BLOB))))OR(((NULL)*('/qT')))))OR(CASE NULL  WHEN 0.6799332818431054 THEN x'b6d9' END)))AND(((NULL)||(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0X3d5f03e)||('-1786333853')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '0 sz=338229460 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '897557412'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-910033926 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('ay' COLLATE BINARY) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN ((0.07805262548916081)) AND ((NULL))))||(((NULL) NOT BETWEEN (-432857158) AND ('x[Uiwᔿ xh')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-836092516 -1098316657 sz=2046549916 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-631927471 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.42122043959503186))>(('? '))) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 0 sz=990381143 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-418531185 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8124194162450448)*(NULL)))|(load_extension(x'868d', 0.6799332818431054))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-626232320 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (NULL)))AND(NULL)))OR(((0.2025012731541227) BETWEEN (0.32035012716580014) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((((0.8438206783040452, 0.6525158728585654, -5.55127046E8))=((NULL, x'', NULL))))) AND ((CASE -1958064861  WHEN '808663986' THEN x'' WHEN 0.3930804934213017 THEN 0x4048425f WHEN '-1585531809' THEN '-1784772000' ELSE '-1325728501' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=916549203 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-752202413 -83774958 sz=-1683084361 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=499207301 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 0 sz=-1320058853 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-711582635 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1708725170 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-391340705 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE x''  WHEN -3.46174398E8 THEN -256987699 ELSE 1.167873392E9 END  WHEN (((('')AND('226948743')))OR('')) THEN x'fd25' WHEN ((x'')GLOB('-152732478')) THEN ((x'62f3') IS FALSE) WHEN (+ ('2049561767')) THEN (('')IS NOT(NULL)) ELSE ((((((((0.9057209957617389)OR('_G{%')))AND(0.42122043959503186)))AND(x'')))OR(0.225939589295584)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-219929447'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=-1163631042 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 -1313428242 sz=10333170 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1406998815 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('449741158')AND(',g')))OR(x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')||('2035834638')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1872682772 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '320487966 sz=-1433037202 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -2123960323; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(((x'') NOTNULL), CAST(x'' AS BLOB)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1836596905 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=322119075 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '6O%uPA'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.023614854751940584)AND(x'')))AND('')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '2 sz=-245694348 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1954433745 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '6 sz=1100711051 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-787939562 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-226368201 sz=-654719334 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1460675808 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '-998394563 sz=-1152854830'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.5711517385479602)AND(x'')))OR(NULL)))+((NULL IN (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0xffffffffee296912 AS BLOB)) BETWEEN (SUBSTR(NULL, x'')) AND (((NULL)|(0.6094477391507066)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-699927936 -1585531809 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2123960323 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')LIKE(0xffffffff82c63328)))%(LOWER(DISTINCT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (SQLITE_COMPILEOPTION_GET(''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1149639600 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 sz=1776962151'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9157125108320183) NOT BETWEEN (0x17d38956) AND ('')))>=('1689740142' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.19158201319908774) ISNULL))AND((((NULL)) BETWEEN ((x'')) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, '167811293', '?#e*2emp\r')) NOT BETWEEN ((((0.4963081220887928) NOT NULL), (('')=(x'c20ce416')), ((x'') NOT BETWEEN (0.3003199431875925) AND (0.27361807189005294)))) AND (((((NULL))==((''))), ABS(x''), ((('/wug9*슖', NULL, NULL))>((NULL, NULL, 0.6765245830097243)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 sz=-1744221087 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('_G{%')IS(0.7548825690050004)), CASE WHEN x'' THEN '-990439053' WHEN '-1619324808' THEN 2.040351863E9 WHEN '0.8930340632005002' THEN NULL END, ((NULL)+(x''))))<=(((('铿dhkCސz(f') ISNULL), ((NULL) BETWEEN (0.9871534859319927) AND (NULL)), CASE NULL  WHEN x'0f1b9134' THEN x'eb64' ELSE '\>੺2' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1591984803 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=1160111587 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1370493021 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS FALSE) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1774489775 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1533101679'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1433438703 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=-1541596820'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=113360465 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (-1.545655187E9)) COLLATE BINARY COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=-2123960323 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (NULL)))OR(((x'ddfe') NOT NULL))))AND((('1vKzT1')AND('-2001589000')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0x64b7636e)))IS(((((x'')OR(x'fc2b')))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 141419729; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=1351807950 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((json_extract(x'', -1311161340))OR(0.2705641019728333 COLLATE BINARY)))OR(((NULL)LIKE(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0x7b52a9a9 AS BLOB) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-685874392 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)-('')))*((~ ('<F')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE x''  WHEN 0.8067581794923839 THEN '!2NZ' WHEN NULL THEN 0.43576863508511143 WHEN 'bL 6o\n' THEN '' ELSE x'91f7' END)OR((('/qC')*('')))))AND(x'')); -- 4ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN '!2nz' THEN x'' END  WHEN ((x'446b21b5') NOT BETWEEN (1.848922402E9) AND (x'')) THEN ((('G㝯'))!=((NULL))) ELSE ((x'')|('')) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 0 sz=1430865650 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1816382106'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-9.10033926E8 AS NUMERIC)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1269633294 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-352180109'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(0Xffffffffc0b19be2)))OR(NULL)))>>((- ('f>{쟃D2')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('-1862277469')OR('㺲--^^{&''Q')))AND('-1665426100'))))<((('' IN (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '0 sz=-1758815169'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(x'' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=768897260'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-763460455 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-194682461 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-591651134 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE x''  WHEN NULL THEN NULL WHEN NULL THEN NULL WHEN 0xffffffff9b98e9d1 THEN 0x225fafd9 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1204909807 sz=-836092516'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1500335173' IN ())) BETWEEN (NULL) AND ((((0.7548825690050004, 801802933, '638970729')) BETWEEN (('2046549916', 0.557779682761705, x'')) AND (('1871746939', '*綧', 0x7df25ff1))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1667051206 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '4'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1750618108 sz=1105220163 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0X77847893)AND(x'32025fab')))AND('vC*u?')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=297580108 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xffffffffcfeca319) IS FALSE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL COLLATE RTRIM))>((0.7475879344857106))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1108742015 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-765912242 sz=1213118695'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'bb70'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-1414135447'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'')) BETWEEN (('ꌼ}')) AND ((0.341536379933413))))AND((((('0.7070781648950611')AND('0-Hr')))OR(460441097)))))OR((((0.9157125108320183))==(('-577587500'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '571296853 188960432 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1984708080 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1351807950 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE '906527393'  WHEN 'i쳞' THEN '0.22521291411210198' END  WHEN (('0.8067581794923839')%('-1673625174')) THEN '-78562488' COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-420104285 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1276488440 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=2049561767'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=114952533'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((-910033926) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-839431409 sz=1473392951 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-172295731 sz=-1824141492 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (-1162036722)))OR(0.035280961316838666 COLLATE NOCASE)))AND(((0.16916664439582585) NOT BETWEEN (x'') AND (0.8446568675289108)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (''))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1711466276 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_VERSION(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=-599965919 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '707123421 sz=1053416886'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2046549916 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1202946108 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-1533101679'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1940055957 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((408247511)OR(NULL)))AND('')) IN (('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-139163388 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 7ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)AND(768897260))  WHEN ((NULL)<(x'')) THEN CAST(x'801f' AS REAL) WHEN ((((((((-909180438)AND(x'bba3')))OR(x'')))OR(294521275)))AND(0Xfffffffffeb1ae18)) THEN (0x49bff999 IN ()) WHEN CAST(x'' AS NUMERIC) THEN ('891920926' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=374803879 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9259367730751042; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-383488774 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1599918654 sz=-1698868522 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE x'7544'  WHEN '' THEN NULL END)OR((((x'', NULL, NULL))<((NULL, x'878a', x''))))))OR((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1008871942 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1226319708'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-14812207'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1984708080'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1742681175 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=84603037 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2020404548 sz=1703238612'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) BETWEEN (0.7762785562858698 COLLATE NOCASE) AND ((NOT ('0.42727669478495134')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(NULL AS NUMERIC) THEN ((((0.42122043959503186)OR('1167873392')))AND(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', 181313354, 0.6473334819564988)) NOT BETWEEN ((CAST(0.6748313589791692 AS BLOB), (('') IS FALSE), IFNULL('\nP?', 1091980156))) AND ((NULL, CAST('31046848' AS TEXT), ((NULL)||(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('')AND((('') NOT NULL))))OR(((NULL)IS(x'')))))AND(CASE 0.16916664439582585  WHEN 'c6' THEN '' WHEN 0Xffffffff8f2ed0aa THEN 0.5135095992310783 WHEN '' THEN '' END)))AND(((0.8361844236224358) BETWEEN (NULL) AND (0xd53eba8)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((- (NULL)))OR(NULL COLLATE BINARY)))AND((('-1964757474')>=(0.7484514230169923)))))AND(CASE 0.023614854751940584  WHEN '-5199949' THEN -1686868053 END)))OR((- (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '0 sz=1676216830 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-831430155 sz=-572334910'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-1828816887' IN (-2077888925)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-906493402'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '4'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1500335173'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7900423705405266 IN ())) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffdc3d3f21)>=('822491103')))LIKE(0xfffffffffcb06689)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=408247511 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '' THEN (((NULL)) NOT BETWEEN ((NULL)) AND ((NULL))) WHEN (((NULL)) NOT BETWEEN ((NULL)) AND ((NULL))) THEN (((NULL))==(('鮻g'))) WHEN ((x'')LIKE(NULL)) THEN ((0.1694343480511885) NOT NULL) ELSE ((('_g{%'))>(('0.6473334819564988'))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1545655187'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '1703130249 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL COLLATE RTRIM)OR(((x'')AND(0.5087925647750489)))))AND(NULL COLLATE RTRIM)))OR('' COLLATE BINARY)))AND((((x'')) NOT BETWEEN ((x'')) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1656617135'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1892757334 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '177744311 sz=1012188057 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (LOWER(DISTINCT 'Mn\1rE㟟'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '0 sz=493843271 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1848588685 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE x'6a09'  WHEN 0.2951913216842321 THEN '70442222' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '-1839658847'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1622127610 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1594770456 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 sz=-1880154108 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1303592209 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1265677005 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=-910033926 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)+(0.9091446706842075)))>=(-2130085015 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1391644493'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('')*(931746537)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.19158201319908774) BETWEEN (x'') AND (0xffffffff9eebbbfe))  WHEN (x'' IN ()) THEN CAST('-452184719' AS TEXT) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-1008871942 sz=1351807950 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE NOCASE AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-782009279 sz=-905200158'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-199853559 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE x'52bcf89a'  WHEN 'sw' THEN 923896076 ELSE x'' END  WHEN 0.8728764621579482 THEN (('␉mP{KY3') NOTNULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.428346857710168)<>('q0'))) NOT BETWEEN (((NULL) NOT BETWEEN (0Xffffffff90ffe6a3) AND (8.18488315E8))) AND (((NULL)IS NOT('')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '-694682180 sz=11274128 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 'v\r傦X1A' THEN '끲x' END COLLATE BINARY COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((NULL)) BETWEEN ((0.9509170205600956)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-847047862 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.1448603364762524 IN ())) NOT BETWEEN ((((x'4194')) BETWEEN ((0.428346857710168)) AND (('P猎O[QePw')))) AND (UNLIKELY(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1944035347 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-1417675308 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE json_remove(((NULL) BETWEEN (0X7262a1ee) AND (0x503c5f14)), ((x'7c00') NOT NULL), (x'' IN ()), CASE WHEN x'' THEN x'' ELSE -1399592563 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1962449634 820187206'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('1926028846')IS NOT(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN -1414612891 THEN '' WHEN x'' THEN 0.5476938902090727 WHEN x'' THEN -177495010 ELSE 0Xffffffffb15ea192 END)IS(((((0.9944258409258026)AND('')))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1461000494 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1962449634 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1650354636 0 sz=1315988224 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)=('!D61')) IN ((('1500335173')||(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=114952533 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2145622482 sz=-1812175785 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT (NULL)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 1237318041 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-1.008871942E9)OR(0.28551851604655476)))AND('1556229395')))==(CAST('1711466276' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')<<('476932640')))>(UNICODE(0.9871534859319927))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-162558179' THEN x'' ELSE -1.871825984E9 END) NOT BETWEEN (((NULL)AND(0.5361522456485711))) AND (LIKELIHOOD(DISTINCT x'', 0.4859015191036714))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'd96700b4' THEN NULL WHEN NULL THEN -710485235 WHEN '-2049560311' THEN NULL END) NOT BETWEEN (((x'') NOT BETWEEN (-1.904691785E9) AND ('1099665063'))) AND (((((x'e5b8')AND(x'')))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '0 sz=441400472 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=156639555 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-1953092894 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('LS')AND(NULL)) THEN CASE WHEN '0.2967293656255009' THEN '1802011202' END WHEN NULL THEN ((NULL) ISNULL) WHEN ((x'13b8') BETWEEN (NULL) AND ('-1954197043')) THEN ((((x'')AND(x'')))AND('-2119050393')) ELSE NULL END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=1249828081 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((0.4867319907274088, 0.0792060258770112, 0.6949867607452997))<((x'', 0.9218168010796098, NULL))) THEN CAST('0.8930340632005002' AS INTEGER) WHEN CAST('1622187767' AS NUMERIC) THEN ((((NULL)OR(NULL)))OR(x'')) WHEN NULL THEN (((0.446416445546275, 'S塊', x'')) BETWEEN ((NULL, '2037829336', 0.46031161111733)) AND ((NULL, NULL, NULL))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1984708080 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '-288767574'  WHEN '-787939562' THEN '-1980608721' END) BETWEEN (CAST(x'' AS TEXT)) AND (((0.5510489084012339) NOT BETWEEN ('0.29141217137030817') AND (0.9829781326041465)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')OR(x'4f4d2247')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1741378299'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_array_length(x'd770')) BETWEEN (CASE ''  WHEN '' THEN -1364707856 END) AND (((0.7723710959050551) BETWEEN (0.1306607973349334) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (x'') AND (x'')))-(((NULL) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6315222688129213) IS FALSE)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=-1453263668'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-2142925075')||(0.28551851604655476)))<(((NULL) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-464531772 sz=-1949279796 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1304899658 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1072024372 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1325728501 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json(('0.446416445546275' IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'9b47') NOT NULL)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '2 sz=-1276999459 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1711466276'))>((x'')))))>=((CAST('-1008871942' AS BLOB)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1962449634 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1821620178') BETWEEN (0.38041011354025567) AND (x'56a2')))/(CASE '␉mP{KY3'  WHEN x'b7d6' THEN 0.9403375181294614 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST('' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')OR('-854516896')))AND(x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(SQLITE_VERSION()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1241989197 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('9223372036854775807') NOT NULL) THEN TYPEOF(DISTINCT '1612620169') END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((x'')) BETWEEN ((NULL)) AND (('h0'))))AND(((((0.9344922049798119)OR(x'')))OR('0.8124194162450448')))))AND(0.886930872853865)))OR(0.014668574595278816 COLLATE BINARY)))AND((((NULL)) NOT BETWEEN ((0.46023846670258683)) AND ((NULL))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(1655743908))<(((1.936539243E9) NOT BETWEEN ('394848776') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1204709019 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0.42111424295048705))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-689480773 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(1310232404 COLLATE RTRIM AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-1313428242 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=382158267 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1684371849 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1202946108', 'Z}', NULL)) BETWEEN ((((x'') NOT NULL), CASE NULL  WHEN NULL THEN -1094945795 ELSE 'd/q?QZ' END, ((NULL) NOTNULL))) AND ((((x'') NOT NULL), ((NULL) IS TRUE), CAST(0.5456854277604927 AS INTEGER)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1263365134'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-766397542'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1560607441 sz=1310232404'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '0 sz=185806478 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE NOCASE IN ('tU)', (((((((('1698987327')OR('-1313428242')))AND('lgtIw')))OR(0.9423498478292333)))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1070371610 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '635480638 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=768897260'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-626232320 -215813632 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1600589703 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE NOCASE AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-405234609'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1099665063'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('6#' AS NUMERIC) COLLATE NOCASE COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X71be5b67 COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1010834932'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1904691785'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1656297957'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('z')AND(NULL)))OR(1518616548)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1896380490 sz=1149639600 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((NULL)OR(NULL)))AND('-915138406')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-244656737 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-722904320 sz=-752508014 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '-476473548 sz=-836092516 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1026370434 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-2110099082 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-2122716569) IS FALSE) IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '122106187 sz=1671106750 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0x15d5c413)OR(0.2919090181913542)))AND('')))OR(((x'') IS TRUE))))OR((~ (x'6e01')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('!2nz' COLLATE NOCASE) BETWEEN ((NOT (1.7976931348623157E308))) AND ('')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=2046549916 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1.204909807E9 COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN (x'')))>(ABS(DISTINCT x'f3152dbc'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-1226655291 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=1443700645'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=513214778 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1325728501 sz=-418531185 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_USED(((x'')>(0.37383569227932634))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-1019104964 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1622127610 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'n%'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((-1.62212761E9))<((NULL))))OR(((NULL)==(7.0442222E7)))))OR(((NULL)/(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-66892641 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((('0.9139140984243294')AND('nowx&+c')))OR('1652971443')) THEN x'' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.341536379933413 AS BLOB)) NOT BETWEEN ((('1149639600')*(0x5b43a6a7))) AND (CASE 0.5299864611731996  WHEN '1955347281' THEN '4)	T6꭮뾏Ot' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '2 -1538455805 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1590284366 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.4295296140768802) IS FALSE))LIKE(((0.5597043141616844) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.19882164254024548) BETWEEN (x'') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1622127610 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1019734844 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1585531809 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL)) NOT BETWEEN ((-929466061)) AND (('1238564240'))) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-1533101679 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1226256651'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '909352370 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=52622988 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((-2001589000)+('')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1723533325 sz=-101393673 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE NULL  WHEN '㺲--^^{&''Q' THEN x'' END)AND((((x''))<=((''))))))AND(((NULL) NOT BETWEEN ('-262589866') AND ('UE')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN '' ELSE x'' END)IS(LOWER(DISTINCT 'NQ㝱'))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2039191886 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '1112910425 613359707 sz=-509557005 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-192946197 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '70442222 sz=1310232404 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1742442182 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=114952533 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('347562734')OR(NULL)))AND('-821179349'))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')*(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=1622187767 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-903661789 COLLATE BINARY)AND(('1848922402' IN ('', 0X360882a1)))))AND('\nJAⱭ')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)==(''))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-380282805 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=477954778 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '906527393 sz=-1891884975 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=70442222 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1655743908 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(x'' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 1054653509 sz=1310232404'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=818488315 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '401772351 541444072 sz=-2072365311'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=877895256'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(COALESCE(DISTINCT -853855103, NULL, '768897260', '2145622482'), 0.1998985610262064); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '2 sz=197150691 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1663054453 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=70442222 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('yGtDk~\n')<=(NULL)) THEN (('-1828816887')&('0.4963081220887928')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.048179988014334096 AS INTEGER)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('yCO' COLLATE RTRIM)|((- (0xffffffffeb5dcc42)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.9632555268471381 AS REAL))<=(CASE WHEN -1579122358 THEN 0.2799713233224781 ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=772301272'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9769760733367933) BETWEEN ('t') AND (0.8354510499887654)))AND((+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1686286695 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=768897260'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1954197043')) BETWEEN ((-152693310)) AND ((0.8968437676157149))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR FAIL rt1 SET (c2, c0)=(x'', '-1614214388') WHERE CASE rt1.c2  WHEN ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)) THEN ((rt1.c2)AND(rt1.c0)) WHEN rt1.c1 THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END WHEN NULLIF(DISTINCT rt1.c2, '') THEN ((((x'')OR(rt1.c1)))AND(rt1.c2)) ELSE '0.23645493524514472' END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt1 VALUES (NULL, 0.24958864704625106, 1627032252), (NULL, NULL, 0.9272975950145959), ('q%iᩐ-E', x'', '_u'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
CREATE INDEX IF NOT EXISTS i80 ON t1('1160111587' DESC); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i0 ON t1((- (((c0) NOT NULL)))) WHERE c0; -- 0ms;
PRAGMA main.locking_mode = EXCLUSIVE; -- 0ms;
VACUUM; -- 0ms;
SELECT rtreecheck('rt1'); -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c1=''; -- 0ms;
PRAGMA cache_spill = true; -- 0ms;
ANALYZE i0; -- 0ms;
UPDATE OR IGNORE t1 SET c0=x'', c0='-805292177' WHERE ((t1.c0)IS NOT((0xffffffff91834461 IN ()))); -- 0ms;
UPDATE t1 SET (c0)=(x''); -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=(1.711466276E9) WHERE CAST(rt1.c0 AS TEXT) COLLATE RTRIM; -- 0ms;
PRAGMA busy_timeout; -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES ('72037450'); -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR ABORT INTO rt1 VALUES (x'', x'', NULL), (0.3573968177061516, NULL, NULL), (0.6486801562210147, NULL, x''); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c1) VALUES (x''); -- 0ms;
REINDEX i0; -- 0ms;
REINDEX  rt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR REPLACE rt0 SET (c2, c2)=(x'9b01', '-1276999459'); -- 1ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR REPLACE INTO t1 VALUES ('6!%Q⚓9'); -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (0.2667897297944757), (x''), (0Xfffffffffb975aaf), (NULL), (0.918700029660171); -- 0ms;
UPDATE OR ABORT rt1 SET (c1)=(x'1bb1'); -- 1ms;
UPDATE OR REPLACE rt0 SET (c1)=(x''); -- 0ms;
CREATE INDEX i93 ON t1(((c0) NOTNULL) DESC) WHERE (((c0, c0, c0)) NOT BETWEEN ((((c0) IS FALSE), IFNULL(DISTINCT c0, c0), ((c0)<>(c0)))) AND ((c0, ((c0)>(c0)), ((((((((c0)OR('X')))OR(c0)))AND('0.5317357019181945')))OR(NULL))))); -- 0ms;
UPDATE t1 SET c0='1218501146' WHERE (((t1.c0))<((t1.c0))) COLLATE BINARY; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (1351807950); -- 0ms;
REINDEX  rt1; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (NULL), (NULL), (''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES ('', '!h3', 0.7218707408292524); -- 0ms;
END; -- 1ms;
VACUUM; -- 0ms;
UPDATE OR REPLACE rt0 SET (c1)=(1.936539243E9); -- 1ms;
INSERT OR IGNORE INTO rt1(c0, c2) VALUES (0.29881305023671756, 'vC*u?'); -- 0ms;
PRAGMA temp.wal_autocheckpoint = 3198911790646875128; -- 0ms;
REINDEX RTRIM; -- 0ms;
UPDATE OR IGNORE t1 SET (c0, c0, c0)=(NULL, NULL, 52828027); -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (x'', -1.325728501E9, '906527393'); -- 1ms;
PRAGMA main.auto_vacuum; -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
INSERT OR ABORT INTO rt0(c2, c1) VALUES (1936539243, '-839715042'), (-8.01426829E8, 'vP->~룞3'), ('-319853143', NULL); -- 0ms;
INSERT OR FAIL INTO rt0 VALUES (x'', 0.6000847107030934, 0xffffffffc2ff9b32); -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (0.0074214660300093716); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c2) VALUES (NULL, ''); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO rt1(c2) VALUES (x''), ('-1545655187'), ('GxG|쾖'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c0) VALUES (0.13837828476051328, '-1812175785'); -- 0ms;
UPDATE t1 SET (c0)=(NULL); -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
ANALYZE i0; -- 0ms;
REINDEX i93; -- 0ms;
REINDEX RTRIM; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(0.9411439118430409) WHERE (((NULL, CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END, 'nt'))>=((((t1.c0)AND(t1.c0)), (((('G㝯')AND(19858867)))OR(t1.c0)), ((t1.c0)<=(t1.c0))))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX BINARY; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
UPDATE OR IGNORE t1 SET c0=NULL; -- 0ms;
UPDATE rt1 SET (c2)=('0.9719407952160466') WHERE CASE WHEN rt1.c1 THEN rt1.c0 COLLATE RTRIM ELSE CAST(rt1.c2 AS BLOB) END; -- 0ms;
REINDEX  rt0; -- 0ms;
INSERT OR FAIL INTO rt1(c2, c1) VALUES ('x㼡', '1500335173'); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c0, c1) VALUES ('', '-1460675808', NULL), (0.7657112956380383, NULL, NULL), (x'', 0.008717106184610746, 0.27694404229925984); -- 0ms;
PRAGMA cell_size_check; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (NULL, '-109842252'); -- 0ms;
UPDATE rt1 SET (c0)=(0.36027534443325204); -- 0ms;
UPDATE t1 SET (c0)=(-1864286494); -- 0ms;
UPDATE OR IGNORE rt0 SET c0='-247559129', c1=1050130339, c2=0.7645386621068864 WHERE (~ (JULIANDAY(rt0.c0, rt0.c2, rt0.c1))); -- 0ms;
UPDATE rt0 SET (c2)=(NULL) WHERE CAST(rt0.c2 AS NUMERIC); -- 0ms;
INSERT OR ABORT INTO rt1(c2, c1) VALUES (x'', '810397820'); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES ('0.2967293656255009'); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 4ms;
SELECT ALL COUNT(*) FROM rt1, t1 FULL OUTER JOIN rt0 ON (((((t1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) IS TRUE) WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1, t1 FULL OUTER JOIN rt0 ON (((((t1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) IS TRUE));
SELECT ALL COUNT(*) FROM rt1, t1 FULL OUTER JOIN rt0 ON (((((t1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) IS TRUE) WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1, t1 FULL OUTER JOIN rt0 ON (((((t1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) IS TRUE));
SELECT ALL COUNT(*) FROM rt1, t1 FULL OUTER JOIN rt0 ON (((((t1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) IS TRUE) WHERE ('');
SELECT COUNT(*) FROM rt1 CROSS JOIN t1 ON NULL WHERE (CASE WHEN (- (rt1.c1)) THEN t1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (rt1.c1)) THEN t1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt1 CROSS JOIN t1 ON NULL);
SELECT COUNT(*) FROM rt1 CROSS JOIN t1 ON NULL WHERE (CASE WHEN (- (rt1.c1)) THEN t1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (rt1.c1)) THEN t1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt1 CROSS JOIN t1 ON NULL);
SELECT COUNT(*) FROM rt1 CROSS JOIN t1 ON NULL WHERE (CASE WHEN (- (rt1.c1)) THEN t1.c0 COLLATE RTRIM END);
SELECT ALL * FROM t1, rt0, rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c1)))>(((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c1)))>(((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))))) IS TRUE)  as count FROM t1, rt0 NOT INDEXED, rt1);
SELECT ALL * FROM t1, rt0, rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c1)))>(((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c1)))>(((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))))) IS TRUE)  as count FROM t1, rt0 NOT INDEXED, rt1);
SELECT ALL * FROM t1, rt0, rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c1)))>(((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt0, t1 INDEXED BY i93, rt1 INDEXED BY i0 WHERE (((NOT (t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (t1.c0)) IN ())) IS TRUE)  as count FROM rt0, t1 INDEXED BY i93, rt1 INDEXED BY i0);
SELECT ALL COUNT(*) FROM rt0, t1 INDEXED BY i93, rt1 INDEXED BY i0 WHERE (((NOT (t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (t1.c0)) IN ())) IS TRUE)  as count FROM rt0, t1 INDEXED BY i93, rt1 INDEXED BY i0);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (rt1.c2) ORDER BY (~ (LIKELY(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY (~ (LIKELY(rt1.c1))));
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (rt1.c2) ORDER BY (~ (LIKELY(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY (~ (LIKELY(rt1.c1))));
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (rt1.c2) ORDER BY (~ (LIKELY(rt1.c1)));
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT * FROM t1, rt0, rt1 WHERE (8.20187206E8 COLLATE NOCASE) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((8.20187206E8 COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY rt0.c2);
SELECT * FROM t1, rt0, rt1 WHERE (8.20187206E8 COLLATE NOCASE) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((8.20187206E8 COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY rt0.c2);
SELECT * FROM t1, rt0, rt1 WHERE (8.20187206E8 COLLATE NOCASE) ORDER BY rt0.c2;
SELECT * FROM rt1 WHERE (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END COLLATE NOCASE) ORDER BY x'' ASC, '1670030155' COLLATE NOCASE DESC  NULLS LAST, CASE WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)) WHEN rt1.c1 COLLATE NOCASE THEN CAST(rt1.c1 AS NUMERIC) WHEN ((rt1.c0) IS TRUE) THEN '-1828816887' ELSE rt1.c1 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY x'' ASC, '1670030155' COLLATE NOCASE DESC  NULLS LAST, CASE WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)) WHEN rt1.c1 COLLATE NOCASE THEN CAST(rt1.c1 AS NUMERIC) WHEN ((rt1.c0) IS TRUE) THEN '-1828816887' ELSE rt1.c1 END  NULLS FIRST);
SELECT * FROM rt1 WHERE (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END COLLATE NOCASE) ORDER BY x'' ASC, '1670030155' COLLATE NOCASE DESC  NULLS LAST, CASE WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)) WHEN rt1.c1 COLLATE NOCASE THEN CAST(rt1.c1 AS NUMERIC) WHEN ((rt1.c0) IS TRUE) THEN '-1828816887' ELSE rt1.c1 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY x'' ASC, '1670030155' COLLATE NOCASE DESC  NULLS LAST, CASE WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)) WHEN rt1.c1 COLLATE NOCASE THEN CAST(rt1.c1 AS NUMERIC) WHEN ((rt1.c0) IS TRUE) THEN '-1828816887' ELSE rt1.c1 END  NULLS FIRST);
SELECT * FROM rt1 WHERE (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END COLLATE NOCASE) ORDER BY x'' ASC, '1670030155' COLLATE NOCASE DESC  NULLS LAST, CASE WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)) WHEN rt1.c1 COLLATE NOCASE THEN CAST(rt1.c1 AS NUMERIC) WHEN ((rt1.c0) IS TRUE) THEN '-1828816887' ELSE rt1.c1 END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE ((((((((((rt1.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt1.c1)))AND(rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt1.c1)))AND(rt1.c0)) IN ())) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE ((((((((((rt1.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt1.c1)))AND(rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt1.c1)))AND(rt1.c0)) IN ())) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE ((((((((((rt1.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt1.c1)))AND(rt1.c0)) IN ()));
SELECT * FROM t1, rt1 WHERE ('''R!0/');
SELECT SUM(count) FROM (SELECT ALL (('''R!0/') IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE ('''R!0/');
SELECT SUM(count) FROM (SELECT ALL (('''R!0/') IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE ('''R!0/');
SELECT ALL COUNT(*) FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (TRIM(DISTINCT MAX(rt1.c1, rt0.c2), rt0.c0)) ORDER BY CAST(rt1.c0 COLLATE RTRIM AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT MAX(rt1.c1, rt0.c2), rt0.c0)) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY CAST(rt1.c0 COLLATE RTRIM AS BLOB));
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (TRIM(DISTINCT MAX(rt1.c1, rt0.c2), rt0.c0)) ORDER BY CAST(rt1.c0 COLLATE RTRIM AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT MAX(rt1.c1, rt0.c2), rt0.c0)) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY CAST(rt1.c0 COLLATE RTRIM AS BLOB));
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (TRIM(DISTINCT MAX(rt1.c1, rt0.c2), rt0.c0)) ORDER BY CAST(rt1.c0 COLLATE RTRIM AS BLOB);
SELECT COUNT(*) FROM t1, rt0 WHERE (CASE WHEN ((t1.c0)||(rt0.c2)) THEN t1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c0)||(rt0.c2)) THEN t1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (CASE WHEN ((t1.c0)||(rt0.c2)) THEN t1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c0)||(rt0.c2)) THEN t1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (CASE WHEN ((t1.c0)||(rt0.c2)) THEN t1.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE ((((rt1.c0 IN (t1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN (t1.c0))) NOTNULL)) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE ((((rt1.c0 IN (t1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN (t1.c0))) NOTNULL)) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE ((((rt1.c0 IN (t1.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((NOT ((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((NOT ((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((NOT ((rt1.c1 IN ()))));
SELECT * FROM rt1 WHERE ((- (((rt1.c2) BETWEEN ('-893765444') AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c2) BETWEEN ('-893765444') AND (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((- (((rt1.c2) BETWEEN ('-893765444') AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c2) BETWEEN ('-893765444') AND (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((- (((rt1.c2) BETWEEN ('-893765444') AND (rt1.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((GLOB(rt0.c0, ''))LIKE('-1828816887')));
SELECT SUM(count) FROM (SELECT ALL ((((GLOB(rt0.c0, ''))LIKE('-1828816887'))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((GLOB(rt0.c0, ''))LIKE('-1828816887')));
SELECT SUM(count) FROM (SELECT ALL ((((GLOB(rt0.c0, ''))LIKE('-1828816887'))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((GLOB(rt0.c0, ''))LIKE('-1828816887')));
SELECT ALL * FROM t1, rt0 WHERE (((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c2)))>>((((rt0.c0)) BETWEEN ((rt0.c1)) AND (('T.UVB')))))) ORDER BY SQLITE_VERSION() ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c2)))>>((((rt0.c0)) BETWEEN ((rt0.c1)) AND (('T.UVB')))))) IS TRUE)  as count FROM t1, rt0 ORDER BY SQLITE_VERSION() ASC);
SELECT ALL * FROM t1, rt0 WHERE (((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c2)))>>((((rt0.c0)) BETWEEN ((rt0.c1)) AND (('T.UVB')))))) ORDER BY SQLITE_VERSION() ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c2)))>>((((rt0.c0)) BETWEEN ((rt0.c1)) AND (('T.UVB')))))) IS TRUE)  as count FROM t1, rt0 ORDER BY SQLITE_VERSION() ASC);
SELECT ALL * FROM t1, rt0 WHERE (((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c2)))>>((((rt0.c0)) BETWEEN ((rt0.c1)) AND (('T.UVB')))))) ORDER BY SQLITE_VERSION() ASC;
SELECT * FROM rt0, rt1, t1 WHERE (((+ ('-1591954280')) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ ('-1591954280')) IN ())) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT * FROM rt0, rt1, t1 WHERE (((+ ('-1591954280')) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ ('-1591954280')) IN ())) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT * FROM rt0, rt1, t1 WHERE (((+ ('-1591954280')) IN ()));
SELECT ALL * FROM t1, rt0 INDEXED BY i0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((CASE WHEN rt0.c2 THEN rt0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((CASE WHEN rt0.c2 THEN rt0.c2 END)))) IS TRUE)  as count FROM t1, rt0 INDEXED BY i0);
SELECT ALL * FROM t1, rt0 INDEXED BY i0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((CASE WHEN rt0.c2 THEN rt0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((CASE WHEN rt0.c2 THEN rt0.c2 END)))) IS TRUE)  as count FROM t1, rt0 INDEXED BY i0);
SELECT ALL * FROM rt1, t1 WHERE ((((CAST(NULL AS INTEGER), ((rt1.c2)==(rt1.c2)), rt1.c0 COLLATE NOCASE))==(((- (rt1.c1)), json_type(rt1.c1), t1.c0)))) ORDER BY ((((rt1.c2)AND(rt1.c0)))OR(((t1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS FIRST, ((((rt1.c1)%(rt1.c2))) IS FALSE) DESC  NULLS LAST, CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) AS TEXT);
SELECT SUM(count) FROM (SELECT (((((CAST(NULL AS INTEGER), ((rt1.c2)==(rt1.c2)), rt1.c0 COLLATE NOCASE))==(((- (rt1.c1)), json_type(rt1.c1), t1.c0)))) IS TRUE)  as count FROM rt1, t1 ORDER BY ((((rt1.c2)AND(rt1.c0)))OR(((t1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS FIRST, ((((rt1.c1)%(rt1.c2))) IS FALSE) DESC  NULLS LAST, CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) AS TEXT));
SELECT ALL * FROM rt1, t1 WHERE ((((CAST(NULL AS INTEGER), ((rt1.c2)==(rt1.c2)), rt1.c0 COLLATE NOCASE))==(((- (rt1.c1)), json_type(rt1.c1), t1.c0)))) ORDER BY ((((rt1.c2)AND(rt1.c0)))OR(((t1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS FIRST, ((((rt1.c1)%(rt1.c2))) IS FALSE) DESC  NULLS LAST, CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) AS TEXT);
SELECT SUM(count) FROM (SELECT (((((CAST(NULL AS INTEGER), ((rt1.c2)==(rt1.c2)), rt1.c0 COLLATE NOCASE))==(((- (rt1.c1)), json_type(rt1.c1), t1.c0)))) IS TRUE)  as count FROM rt1, t1 ORDER BY ((((rt1.c2)AND(rt1.c0)))OR(((t1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS FIRST, ((((rt1.c1)%(rt1.c2))) IS FALSE) DESC  NULLS LAST, CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) AS TEXT));
SELECT ALL * FROM rt1, t1 WHERE ((((CAST(NULL AS INTEGER), ((rt1.c2)==(rt1.c2)), rt1.c0 COLLATE NOCASE))==(((- (rt1.c1)), json_type(rt1.c1), t1.c0)))) ORDER BY ((((rt1.c2)AND(rt1.c0)))OR(((t1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS FIRST, ((((rt1.c1)%(rt1.c2))) IS FALSE) DESC  NULLS LAST, CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) AS TEXT);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE ((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0))  WHEN ((rt1.c0) ISNULL) THEN ((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)) ELSE rt1.c0 COLLATE NOCASE END) ORDER BY (('789364047' COLLATE RTRIM)||(rt0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0))  WHEN ((rt1.c0) ISNULL) THEN ((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)) ELSE rt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt1, rt0 ORDER BY (('789364047' COLLATE RTRIM)||(rt0.c2)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE ((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0))  WHEN ((rt1.c0) ISNULL) THEN ((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)) ELSE rt1.c0 COLLATE NOCASE END) ORDER BY (('789364047' COLLATE RTRIM)||(rt0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0))  WHEN ((rt1.c0) ISNULL) THEN ((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)) ELSE rt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt1, rt0 ORDER BY (('789364047' COLLATE RTRIM)||(rt0.c2)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE ((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0))  WHEN ((rt1.c0) ISNULL) THEN ((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)) ELSE rt1.c0 COLLATE NOCASE END) ORDER BY (('789364047' COLLATE RTRIM)||(rt0.c2)) DESC  NULLS LAST;
SELECT * FROM t1, rt0 WHERE ((((('\n]hySSpd>')<<(rt0.c2)))+(CASE t1.c0  WHEN rt0.c0 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((('\n]hySSpd>')<<(rt0.c2)))+(CASE t1.c0  WHEN rt0.c0 THEN t1.c0 END))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE ((((('\n]hySSpd>')<<(rt0.c2)))+(CASE t1.c0  WHEN rt0.c0 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((('\n]hySSpd>')<<(rt0.c2)))+(CASE t1.c0  WHEN rt0.c0 THEN t1.c0 END))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE ((((('\n]hySSpd>')<<(rt0.c2)))+(CASE t1.c0  WHEN rt0.c0 THEN t1.c0 END)));
SELECT COUNT(*) FROM t1, rt1 WHERE (((rt1.c1)>>(rt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt1.c1)>>(rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt1);
SELECT COUNT(*) FROM t1, rt1 WHERE (((rt1.c1)>>(rt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt1.c1)>>(rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt1);
SELECT COUNT(*) FROM t1, rt1 WHERE (((rt1.c1)>>(rt1.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE (0.5206523628101988) ORDER BY ((CAST(rt1.c2 AS REAL))&((((rt1.c2, rt1.c1, 0.6893068293568304))<=((rt1.c2, rt1.c2, rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((0.5206523628101988) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c2 AS REAL))&((((rt1.c2, rt1.c1, 0.6893068293568304))<=((rt1.c2, rt1.c2, rt1.c1))))));
SELECT ALL COUNT(*) FROM rt1 WHERE (0.5206523628101988) ORDER BY ((CAST(rt1.c2 AS REAL))&((((rt1.c2, rt1.c1, 0.6893068293568304))<=((rt1.c2, rt1.c2, rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((0.5206523628101988) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c2 AS REAL))&((((rt1.c2, rt1.c1, 0.6893068293568304))<=((rt1.c2, rt1.c2, rt1.c1))))));
SELECT ALL COUNT(*) FROM rt1 WHERE (0.5206523628101988) ORDER BY ((CAST(rt1.c2 AS REAL))&((((rt1.c2, rt1.c1, 0.6893068293568304))<=((rt1.c2, rt1.c2, rt1.c1)))));
SELECT * FROM rt0, t1 LEFT OUTER JOIN rt1 ON rt0.c2 WHERE (((rt1.c1 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt0, t1 LEFT OUTER JOIN rt1 ON rt0.c2);
SELECT * FROM rt0, t1 LEFT OUTER JOIN rt1 ON rt0.c2 WHERE (((rt1.c1 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt0, t1 LEFT OUTER JOIN rt1 ON rt0.c2);
SELECT * FROM rt0, t1 LEFT OUTER JOIN rt1 ON rt0.c2 WHERE (((rt1.c1 COLLATE BINARY) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CASE CAST(rt0.c2 AS REAL)  WHEN ((rt0.c1)!=(t1.c0)) THEN ((((rt0.c1)AND(rt0.c0)))AND(t1.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN 0.05407854312960725 THEN rt0.c0 END THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN x'' THEN json_valid(rt0.c2) END) ORDER BY (((x'd5a5', rt0.c2, t1.c0)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), ((rt0.c2) BETWEEN (t1.c0) AND (t1.c0)), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((((t1.c0) NOTNULL), (+ (rt0.c2)), t1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c2 AS REAL)  WHEN ((rt0.c1)!=(t1.c0)) THEN ((((rt0.c1)AND(rt0.c0)))AND(t1.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN 0.05407854312960725 THEN rt0.c0 END THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN x'' THEN json_valid(rt0.c2) END) IS TRUE)  as count FROM rt0, t1 ORDER BY (((x'd5a5', rt0.c2, t1.c0)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), ((rt0.c2) BETWEEN (t1.c0) AND (t1.c0)), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((((t1.c0) NOTNULL), (+ (rt0.c2)), t1.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CASE CAST(rt0.c2 AS REAL)  WHEN ((rt0.c1)!=(t1.c0)) THEN ((((rt0.c1)AND(rt0.c0)))AND(t1.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN 0.05407854312960725 THEN rt0.c0 END THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN x'' THEN json_valid(rt0.c2) END) ORDER BY (((x'd5a5', rt0.c2, t1.c0)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), ((rt0.c2) BETWEEN (t1.c0) AND (t1.c0)), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((((t1.c0) NOTNULL), (+ (rt0.c2)), t1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c2 AS REAL)  WHEN ((rt0.c1)!=(t1.c0)) THEN ((((rt0.c1)AND(rt0.c0)))AND(t1.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN 0.05407854312960725 THEN rt0.c0 END THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN x'' THEN json_valid(rt0.c2) END) IS TRUE)  as count FROM rt0, t1 ORDER BY (((x'd5a5', rt0.c2, t1.c0)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), ((rt0.c2) BETWEEN (t1.c0) AND (t1.c0)), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((((t1.c0) NOTNULL), (+ (rt0.c2)), t1.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CASE CAST(rt0.c2 AS REAL)  WHEN ((rt0.c1)!=(t1.c0)) THEN ((((rt0.c1)AND(rt0.c0)))AND(t1.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN 0.05407854312960725 THEN rt0.c0 END THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN x'' THEN json_valid(rt0.c2) END) ORDER BY (((x'd5a5', rt0.c2, t1.c0)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), ((rt0.c2) BETWEEN (t1.c0) AND (t1.c0)), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((((t1.c0) NOTNULL), (+ (rt0.c2)), t1.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM t1, rt1 WHERE (((((rt1.c1)IS(rt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)IS(rt1.c0))) ISNULL)) IS TRUE)  as count FROM t1, rt1);
SELECT ALL * FROM t1, rt1 WHERE (((((rt1.c1)IS(rt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)IS(rt1.c0))) ISNULL)) IS TRUE)  as count FROM t1, rt1);
SELECT ALL * FROM t1, rt1 WHERE (((((rt1.c1)IS(rt1.c0))) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE (json_array_length(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) END, ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN ((rt0.c2 IN (rt0.c2))) AND ((rt0.c2 IN ())))  NULLS FIRST, (~ ((((rt0.c1))<=(('170185993'))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (rt0.c0 IN ()) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) END, ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN ((rt0.c2 IN (rt0.c2))) AND ((rt0.c2 IN ())))  NULLS FIRST, (~ ((((rt0.c1))<=(('170185993'))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (json_array_length(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) END, ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN ((rt0.c2 IN (rt0.c2))) AND ((rt0.c2 IN ())))  NULLS FIRST, (~ ((((rt0.c1))<=(('170185993'))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (rt0.c0 IN ()) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) END, ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN ((rt0.c2 IN (rt0.c2))) AND ((rt0.c2 IN ())))  NULLS FIRST, (~ ((((rt0.c1))<=(('170185993'))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (json_array_length(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) END, ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN ((rt0.c2 IN (rt0.c2))) AND ((rt0.c2 IN ())))  NULLS FIRST, (~ ((((rt0.c1))<=(('170185993'))))) ASC  NULLS LAST;
SELECT * FROM rt1, t1 LEFT OUTER JOIN rt0 ON (NOT ((- ('')))) WHERE (((rt1.c1) NOT BETWEEN (t1.c0) AND (rt1.c1)) COLLATE RTRIM) ORDER BY (((NULL)) BETWEEN ((rt0.c1)) AND ((CAST(rt0.c0 AS NUMERIC)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1) NOT BETWEEN (t1.c0) AND (rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t1 LEFT OUTER JOIN rt0 ON (NOT ((- ('')))) ORDER BY (((NULL)) BETWEEN ((rt0.c1)) AND ((CAST(rt0.c0 AS NUMERIC)))) ASC);
SELECT * FROM rt1, t1 LEFT OUTER JOIN rt0 ON (NOT ((- ('')))) WHERE (((rt1.c1) NOT BETWEEN (t1.c0) AND (rt1.c1)) COLLATE RTRIM) ORDER BY (((NULL)) BETWEEN ((rt0.c1)) AND ((CAST(rt0.c0 AS NUMERIC)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1) NOT BETWEEN (t1.c0) AND (rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t1 LEFT OUTER JOIN rt0 ON (NOT ((- ('')))) ORDER BY (((NULL)) BETWEEN ((rt0.c1)) AND ((CAST(rt0.c0 AS NUMERIC)))) ASC);
SELECT * FROM rt1, t1 LEFT OUTER JOIN rt0 ON (NOT ((- ('')))) WHERE (((rt1.c1) NOT BETWEEN (t1.c0) AND (rt1.c1)) COLLATE RTRIM) ORDER BY (((NULL)) BETWEEN ((rt0.c1)) AND ((CAST(rt0.c0 AS NUMERIC)))) ASC;
SELECT * FROM rt1 INDEXED BY i93 WHERE (CASE WHEN (rt1.c0 IN ()) THEN ((rt1.c2) NOTNULL) ELSE CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 WHEN '-386414335' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c0 IN ()) THEN ((rt1.c2) NOTNULL) ELSE CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 WHEN '-386414335' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 END END) IS TRUE)  as count FROM rt1 INDEXED BY i93);
SELECT * FROM rt1 INDEXED BY i93 WHERE (CASE WHEN (rt1.c0 IN ()) THEN ((rt1.c2) NOTNULL) ELSE CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 WHEN '-386414335' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c0 IN ()) THEN ((rt1.c2) NOTNULL) ELSE CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 WHEN '-386414335' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 END END) IS TRUE)  as count FROM rt1 INDEXED BY i93);
SELECT * FROM t1 WHERE ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN ())) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN ())) IS TRUE)  as count FROM t1 ORDER BY t1.c0);
SELECT * FROM t1 WHERE ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN ())) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN ())) IS TRUE)  as count FROM t1 ORDER BY t1.c0);
SELECT * FROM t1 WHERE ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN ())) ORDER BY t1.c0;
SELECT ALL * FROM t1 INNER JOIN rt1 ON ((NOT (rt0.c2)) IN ()) RIGHT OUTER JOIN rt0 ON CAST((rt1.c0 IN (rt1.c1)) AS BLOB) WHERE (CASE WHEN CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END THEN ((rt0.c1)|(rt0.c1)) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) THEN x'' WHEN (((rt1.c0))>=((t1.c0))) THEN '0.6525158728585654' ELSE (- (1.500335173E9)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END THEN ((rt0.c1)|(rt0.c1)) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) THEN x'' WHEN (((rt1.c0))>=((t1.c0))) THEN '0.6525158728585654' ELSE (- (1.500335173E9)) END) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON ((NOT (rt0.c2)) IN ()) RIGHT OUTER JOIN rt0 ON CAST((rt1.c0 IN (rt1.c1)) AS BLOB));
SELECT ALL * FROM t1 INNER JOIN rt1 ON ((NOT (rt0.c2)) IN ()) RIGHT OUTER JOIN rt0 ON CAST((rt1.c0 IN (rt1.c1)) AS BLOB) WHERE (CASE WHEN CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END THEN ((rt0.c1)|(rt0.c1)) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) THEN x'' WHEN (((rt1.c0))>=((t1.c0))) THEN '0.6525158728585654' ELSE (- (1.500335173E9)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END THEN ((rt0.c1)|(rt0.c1)) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) THEN x'' WHEN (((rt1.c0))>=((t1.c0))) THEN '0.6525158728585654' ELSE (- (1.500335173E9)) END) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON ((NOT (rt0.c2)) IN ()) RIGHT OUTER JOIN rt0 ON CAST((rt1.c0 IN (rt1.c1)) AS BLOB));
SELECT ALL * FROM t1 INNER JOIN rt1 ON ((NOT (rt0.c2)) IN ()) RIGHT OUTER JOIN rt0 ON CAST((rt1.c0 IN (rt1.c1)) AS BLOB) WHERE (CASE WHEN CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END THEN ((rt0.c1)|(rt0.c1)) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) THEN x'' WHEN (((rt1.c0))>=((t1.c0))) THEN '0.6525158728585654' ELSE (- (1.500335173E9)) END);
SELECT ALL * FROM rt0, t1 NOT INDEXED, rt1 WHERE (((CASE WHEN rt0.c0 THEN rt1.c1 WHEN 1627017652 THEN rt1.c2 WHEN x'8b45' THEN '3Qqm' ELSE rt0.c0 END)!=(((((((((rt1.c0)OR(rt1.c2)))OR('')))AND(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt1.c1 WHEN 1627017652 THEN rt1.c2 WHEN x'8b45' THEN '3Qqm' ELSE rt0.c0 END)<>(((((((((rt1.c0)OR(rt1.c2)))OR('')))AND(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT ALL * FROM rt0, t1 NOT INDEXED, rt1 WHERE (((CASE WHEN rt0.c0 THEN rt1.c1 WHEN 1627017652 THEN rt1.c2 WHEN x'8b45' THEN '3Qqm' ELSE rt0.c0 END)!=(((((((((rt1.c0)OR(rt1.c2)))OR('')))AND(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt1.c1 WHEN 1627017652 THEN rt1.c2 WHEN x'8b45' THEN '3Qqm' ELSE rt0.c0 END)<>(((((((((rt1.c0)OR(rt1.c2)))OR('')))AND(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT ALL * FROM rt0, t1 NOT INDEXED, rt1 WHERE (((CASE WHEN rt0.c0 THEN rt1.c1 WHEN 1627017652 THEN rt1.c2 WHEN x'8b45' THEN '3Qqm' ELSE rt0.c0 END)!=(((((((((rt1.c0)OR(rt1.c2)))OR('')))AND(rt0.c0)))OR(rt0.c2)))));
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE ((+ (((rt0.c1)IS NOT(rt0.c1))))) ORDER BY CAST((((rt1.c1, t1.c0, rt1.c2))<((rt0.c1, rt0.c1, t1.c0))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1)IS NOT(rt0.c1))))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY CAST((((rt1.c1, t1.c0, rt1.c2))<((rt0.c1, rt0.c1, t1.c0))) AS NUMERIC));
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE ((+ (((rt0.c1)IS NOT(rt0.c1))))) ORDER BY CAST((((rt1.c1, t1.c0, rt1.c2))<((rt0.c1, rt0.c1, t1.c0))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1)IS NOT(rt0.c1))))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY CAST((((rt1.c1, t1.c0, rt1.c2))<((rt0.c1, rt0.c1, t1.c0))) AS NUMERIC));
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE ((+ (((rt0.c1)IS NOT(rt0.c1))))) ORDER BY CAST((((rt1.c1, t1.c0, rt1.c2))<((rt0.c1, rt0.c1, t1.c0))) AS NUMERIC);
SELECT ALL * FROM t1, rt1, rt0 WHERE ((('1167873392') NOT BETWEEN (CAST(x'82f7' AS INTEGER)) AND (((rt1.c0)LIKE(t1.c0))))) ORDER BY ((((rt0.c2)*(rt0.c1)))!=(NULL));
SELECT SUM(count) FROM (SELECT (((('1167873392') NOT BETWEEN (CAST(x'82f7' AS INTEGER)) AND (((rt1.c0)LIKE(t1.c0))))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY ((((rt0.c2)*(rt0.c1)))!=(NULL)));
SELECT ALL * FROM t1, rt1, rt0 WHERE ((('1167873392') NOT BETWEEN (CAST(x'82f7' AS INTEGER)) AND (((rt1.c0)LIKE(t1.c0))))) ORDER BY ((((rt0.c2)*(rt0.c1)))!=(NULL));
SELECT SUM(count) FROM (SELECT (((('1167873392') NOT BETWEEN (CAST(x'82f7' AS INTEGER)) AND (((rt1.c0)LIKE(t1.c0))))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY ((((rt0.c2)*(rt0.c1)))!=(NULL)));
SELECT ALL * FROM t1, rt1, rt0 WHERE ((('1167873392') NOT BETWEEN (CAST(x'82f7' AS INTEGER)) AND (((rt1.c0)LIKE(t1.c0))))) ORDER BY ((((rt0.c2)*(rt0.c1)))!=(NULL));
SELECT ALL * FROM t1, rt1, rt0 WHERE ((((((rt0.c1, rt1.c1, t1.c0)) NOT BETWEEN ((rt0.c0, rt1.c1, rt1.c0)) AND ((rt0.c2, rt0.c1, rt1.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt1.c1, t1.c0)) NOT BETWEEN ((rt0.c0, rt1.c1, rt1.c0)) AND ((rt0.c2, rt0.c1, rt1.c0)))) IS TRUE)) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE ((((((rt0.c1, rt1.c1, t1.c0)) NOT BETWEEN ((rt0.c0, rt1.c1, rt1.c0)) AND ((rt0.c2, rt0.c1, rt1.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt1.c1, t1.c0)) NOT BETWEEN ((rt0.c0, rt1.c1, rt1.c0)) AND ((rt0.c2, rt0.c1, rt1.c0)))) IS TRUE)) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE ((((((rt0.c1, rt1.c1, t1.c0)) NOT BETWEEN ((rt0.c0, rt1.c1, rt1.c0)) AND ((rt0.c2, rt0.c1, rt1.c0)))) IS TRUE));
SELECT * FROM rt1, rt0 INNER JOIN t1 ON rt0.c0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((((rt0.c0)!=(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((((rt0.c0)!=(rt0.c2)))))) IS TRUE)  as count FROM rt1, rt0 INNER JOIN t1 ON rt0.c0);
SELECT * FROM rt1, rt0 INNER JOIN t1 ON rt0.c0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((((rt0.c0)!=(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((((rt0.c0)!=(rt0.c2)))))) IS TRUE)  as count FROM rt1, rt0 INNER JOIN t1 ON rt0.c0);
SELECT * FROM rt1, rt0 INNER JOIN t1 ON rt0.c0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((((rt0.c0)!=(rt0.c2))))));
SELECT * FROM rt1 WHERE (((((rt1.c2)>>(rt1.c2)))>=(((rt1.c2)>(rt1.c2))))) ORDER BY MAX(((rt1.c1)==(rt1.c0)), CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN '' THEN rt1.c2 END);
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)>>(rt1.c2)))>=(((rt1.c2)>(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY MAX(((rt1.c1)==(rt1.c0)), CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN '' THEN rt1.c2 END));
SELECT * FROM rt1 WHERE (((((rt1.c2)>>(rt1.c2)))>=(((rt1.c2)>(rt1.c2))))) ORDER BY MAX(((rt1.c1)==(rt1.c0)), CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN '' THEN rt1.c2 END);
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)>>(rt1.c2)))>=(((rt1.c2)>(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY MAX(((rt1.c1)==(rt1.c0)), CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN '' THEN rt1.c2 END));
SELECT * FROM rt1 WHERE (((((rt1.c2)>>(rt1.c2)))>=(((rt1.c2)>(rt1.c2))))) ORDER BY MAX(((rt1.c1)==(rt1.c0)), CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN '' THEN rt1.c2 END);
SELECT * FROM rt1, t1 WHERE (((((rt1.c1)-(rt1.c0)))!=(0.16376306495804727))) ORDER BY ((NULL)IS NOT(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))), (NOT (((((((((((((rt1.c1)AND(rt1.c1)))AND(t1.c0)))OR(rt1.c1)))AND(t1.c0)))OR(t1.c0)))AND(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)-(rt1.c0)))!=(0.16376306495804727))) IS TRUE)  as count FROM rt1, t1 ORDER BY ((NULL)IS NOT(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))), (NOT (((((((((((((rt1.c1)AND(rt1.c1)))AND(t1.c0)))OR(rt1.c1)))AND(t1.c0)))OR(t1.c0)))AND(rt1.c0)))));
SELECT * FROM rt1, t1 WHERE (((((rt1.c1)-(rt1.c0)))!=(0.16376306495804727))) ORDER BY ((NULL)IS NOT(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))), (NOT (((((((((((((rt1.c1)AND(rt1.c1)))AND(t1.c0)))OR(rt1.c1)))AND(t1.c0)))OR(t1.c0)))AND(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)-(rt1.c0)))!=(0.16376306495804727))) IS TRUE)  as count FROM rt1, t1 ORDER BY ((NULL)IS NOT(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))), (NOT (((((((((((((rt1.c1)AND(rt1.c1)))AND(t1.c0)))OR(rt1.c1)))AND(t1.c0)))OR(t1.c0)))AND(rt1.c0)))));
SELECT * FROM rt1, t1 WHERE (((((rt1.c1)-(rt1.c0)))!=(0.16376306495804727))) ORDER BY ((NULL)IS NOT(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))), (NOT (((((((((((((rt1.c1)AND(rt1.c1)))AND(t1.c0)))OR(rt1.c1)))AND(t1.c0)))OR(t1.c0)))AND(rt1.c0))));
SELECT * FROM t1 WHERE ((((t1.c0 IN ())) NOT BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) AND (((0.2895888115123709)IS NOT(t1.c0))))) ORDER BY ((((0.2639520905178915)!=(t1.c0))) BETWEEN (t1.c0 COLLATE NOCASE) AND (CASE WHEN t1.c0 THEN t1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ())) NOT BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) AND (((0.2895888115123709)IS NOT(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((((0.2639520905178915)!=(t1.c0))) BETWEEN (t1.c0 COLLATE NOCASE) AND (CASE WHEN t1.c0 THEN t1.c0 END))  NULLS FIRST);
SELECT * FROM t1 WHERE ((((t1.c0 IN ())) NOT BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) AND (((0.2895888115123709)IS NOT(t1.c0))))) ORDER BY ((((0.2639520905178915)!=(t1.c0))) BETWEEN (t1.c0 COLLATE NOCASE) AND (CASE WHEN t1.c0 THEN t1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ())) NOT BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) AND (((0.2895888115123709)IS NOT(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((((0.2639520905178915)!=(t1.c0))) BETWEEN (t1.c0 COLLATE NOCASE) AND (CASE WHEN t1.c0 THEN t1.c0 END))  NULLS FIRST);
SELECT * FROM t1 WHERE ((((t1.c0 IN ())) NOT BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) AND (((0.2895888115123709)IS NOT(t1.c0))))) ORDER BY ((((0.2639520905178915)!=(t1.c0))) BETWEEN (t1.c0 COLLATE NOCASE) AND (CASE WHEN t1.c0 THEN t1.c0 END))  NULLS FIRST;
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON ((((t1.c0) IS FALSE))%((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) WHERE ((((((NULL)OR(rt0.c0)))AND(t1.c0)) IN ())) ORDER BY (((CASE WHEN rt0.c2 THEN t1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN t1.c0 ELSE rt0.c2 END))>((((((t1.c0)AND(rt0.c2)))OR(rt0.c1)))))  NULLS LAST, CASE CASE WHEN rt0.c1 THEN rt0.c0 END  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2) NOT NULL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)OR(rt0.c0)))AND(t1.c0)) IN ())) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON ((((t1.c0) IS FALSE))%((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) ORDER BY (((CASE WHEN rt0.c2 THEN t1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN t1.c0 ELSE rt0.c2 END))>((((((t1.c0)AND(rt0.c2)))OR(rt0.c1)))))  NULLS LAST, CASE CASE WHEN rt0.c1 THEN rt0.c0 END  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2) NOT NULL) END DESC  NULLS LAST);
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON ((((t1.c0) IS FALSE))%((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) WHERE ((((((NULL)OR(rt0.c0)))AND(t1.c0)) IN ())) ORDER BY (((CASE WHEN rt0.c2 THEN t1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN t1.c0 ELSE rt0.c2 END))>((((((t1.c0)AND(rt0.c2)))OR(rt0.c1)))))  NULLS LAST, CASE CASE WHEN rt0.c1 THEN rt0.c0 END  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2) NOT NULL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)OR(rt0.c0)))AND(t1.c0)) IN ())) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON ((((t1.c0) IS FALSE))%((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) ORDER BY (((CASE WHEN rt0.c2 THEN t1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN t1.c0 ELSE rt0.c2 END))>((((((t1.c0)AND(rt0.c2)))OR(rt0.c1)))))  NULLS LAST, CASE CASE WHEN rt0.c1 THEN rt0.c0 END  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2) NOT NULL) END DESC  NULLS LAST);
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON ((((t1.c0) IS FALSE))%((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) WHERE ((((((NULL)OR(rt0.c0)))AND(t1.c0)) IN ())) ORDER BY (((CASE WHEN rt0.c2 THEN t1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN t1.c0 ELSE rt0.c2 END))>((((((t1.c0)AND(rt0.c2)))OR(rt0.c1)))))  NULLS LAST, CASE CASE WHEN rt0.c1 THEN rt0.c0 END  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2) NOT NULL) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c1)>(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c1)>(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c1)>(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c1)>(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c1)>(rt0.c1)) END);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2))) BETWEEN (((rt0.c2)<>(rt0.c0))) AND ((NULL IN ())))) ORDER BY ((((rt0.c1) NOT NULL))/((NOT (rt0.c0))))  NULLS LAST, CASE (rt0.c1 IN (rt0.c0))  WHEN rt0.c2 COLLATE NOCASE THEN HEX(DISTINCT rt0.c1) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c2))) BETWEEN (((rt0.c2)<>(rt0.c0))) AND ((NULL IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) NOT NULL))/((NOT (rt0.c0))))  NULLS LAST, CASE (rt0.c1 IN (rt0.c0))  WHEN rt0.c2 COLLATE NOCASE THEN HEX(DISTINCT rt0.c1) END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2))) BETWEEN (((rt0.c2)<>(rt0.c0))) AND ((NULL IN ())))) ORDER BY ((((rt0.c1) NOT NULL))/((NOT (rt0.c0))))  NULLS LAST, CASE (rt0.c1 IN (rt0.c0))  WHEN rt0.c2 COLLATE NOCASE THEN HEX(DISTINCT rt0.c1) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c2))) BETWEEN (((rt0.c2)<>(rt0.c0))) AND ((NULL IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) NOT NULL))/((NOT (rt0.c0))))  NULLS LAST, CASE (rt0.c1 IN (rt0.c0))  WHEN rt0.c2 COLLATE NOCASE THEN HEX(DISTINCT rt0.c1) END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2))) BETWEEN (((rt0.c2)<>(rt0.c0))) AND ((NULL IN ())))) ORDER BY ((((rt0.c1) NOT NULL))/((NOT (rt0.c0))))  NULLS LAST, CASE (rt0.c1 IN (rt0.c0))  WHEN rt0.c2 COLLATE NOCASE THEN HEX(DISTINCT rt0.c1) END  NULLS FIRST;
SELECT ALL * FROM rt1, rt0, t1 WHERE (CAST(rt0.c2 COLLATE NOCASE AS TEXT)) ORDER BY (~ (rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY (~ (rt0.c2 COLLATE RTRIM)));
SELECT ALL * FROM rt1, rt0, t1 WHERE (CAST(rt0.c2 COLLATE NOCASE AS TEXT)) ORDER BY (~ (rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY (~ (rt0.c2 COLLATE RTRIM)));
SELECT ALL * FROM rt1, rt0, t1 WHERE (CAST(rt0.c2 COLLATE NOCASE AS TEXT)) ORDER BY (~ (rt0.c2 COLLATE RTRIM));
SELECT ALL * FROM t1 INNER JOIN rt0 ON (((CAST(t1.c0 AS NUMERIC)))<((rt1.c1))) INNER JOIN rt1 ON (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c1 END IN (0Xffffffffd1b854eb, IFNULL(rt1.c1, rt0.c2))) WHERE (((LIKE(rt1.c0, rt1.c2)) BETWEEN (((rt0.c1)>(rt1.c2))) AND (((rt1.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((LIKE(rt1.c0, rt1.c2)) BETWEEN (((rt0.c1)>(rt1.c2))) AND (((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON (((CAST(t1.c0 AS NUMERIC)))<((rt1.c1))) INNER JOIN rt1 ON (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c1 END IN (0Xffffffffd1b854eb, IFNULL(rt1.c1, rt0.c2))));
SELECT ALL * FROM t1 INNER JOIN rt0 ON (((CAST(t1.c0 AS NUMERIC)))<((rt1.c1))) INNER JOIN rt1 ON (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c1 END IN (0Xffffffffd1b854eb, IFNULL(rt1.c1, rt0.c2))) WHERE (((LIKE(rt1.c0, rt1.c2)) BETWEEN (((rt0.c1)>(rt1.c2))) AND (((rt1.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((LIKE(rt1.c0, rt1.c2)) BETWEEN (((rt0.c1)>(rt1.c2))) AND (((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON (((CAST(t1.c0 AS NUMERIC)))<((rt1.c1))) INNER JOIN rt1 ON (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c1 END IN (0Xffffffffd1b854eb, IFNULL(rt1.c1, rt0.c2))));
SELECT ALL * FROM t1 INNER JOIN rt0 ON (((CAST(t1.c0 AS NUMERIC)))<((rt1.c1))) INNER JOIN rt1 ON (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c1 END IN (0Xffffffffd1b854eb, IFNULL(rt1.c1, rt0.c2))) WHERE (((LIKE(rt1.c0, rt1.c2)) BETWEEN (((rt0.c1)>(rt1.c2))) AND (((rt1.c1) IS TRUE))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))AND((((rt0.c0))!=((rt1.c0))))))AND(rt1.c0))) ORDER BY ((((0.4726890702125902)||(rt1.c1))) NOT BETWEEN ('752388929' COLLATE NOCASE) AND (''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))AND((((rt0.c0))!=((rt1.c0))))))AND(rt1.c0))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((0.4726890702125902)||(rt1.c1))) NOT BETWEEN ('752388929' COLLATE NOCASE) AND (''))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))AND((((rt0.c0))!=((rt1.c0))))))AND(rt1.c0))) ORDER BY ((((0.4726890702125902)||(rt1.c1))) NOT BETWEEN ('752388929' COLLATE NOCASE) AND (''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))AND((((rt0.c0))!=((rt1.c0))))))AND(rt1.c0))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((0.4726890702125902)||(rt1.c1))) NOT BETWEEN ('752388929' COLLATE NOCASE) AND (''))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))AND((((rt0.c0))!=((rt1.c0))))))AND(rt1.c0))) ORDER BY ((((0.4726890702125902)||(rt1.c1))) NOT BETWEEN ('752388929' COLLATE NOCASE) AND (''))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 NOT INDEXED, rt0 NATURAL JOIN t1 WHERE ((ABS(rt0.c2) IN ())) ORDER BY (~ (rt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((ABS(rt0.c2) IN ())) IS TRUE)  as count FROM rt1, rt0 NATURAL JOIN t1 ORDER BY (~ (rt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1 NOT INDEXED, rt0 NATURAL JOIN t1 WHERE ((ABS(rt0.c2) IN ())) ORDER BY (~ (rt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((ABS(rt0.c2) IN ())) IS TRUE)  as count FROM rt1, rt0 NATURAL JOIN t1 ORDER BY (~ (rt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1 NOT INDEXED, rt0 NATURAL JOIN t1 WHERE ((ABS(rt0.c2) IN ())) ORDER BY (~ (rt0.c0)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))>=(((rt0.c0)&(rt0.c0))))) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c1 END IN (((rt0.c0)/(rt0.c2)), ((rt0.c1)==(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))>=(((rt0.c0)&(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c1 THEN rt0.c1 END IN (((rt0.c0)/(rt0.c2)), ((rt0.c1)=(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))>=(((rt0.c0)&(rt0.c0))))) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c1 END IN (((rt0.c0)/(rt0.c2)), ((rt0.c1)==(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))>=(((rt0.c0)&(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c1 THEN rt0.c1 END IN (((rt0.c0)/(rt0.c2)), ((rt0.c1)=(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))>=(((rt0.c0)&(rt0.c0))))) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c1 END IN (((rt0.c0)/(rt0.c2)), ((rt0.c1)==(rt0.c0)))) ASC;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((('-822675821'))<>(((rt1.c2 IN ())))));
SELECT SUM(count) FROM (SELECT ((((('-822675821'))!=(((rt1.c2 IN ()))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((('-822675821'))<>(((rt1.c2 IN ())))));
SELECT SUM(count) FROM (SELECT ((((('-822675821'))!=(((rt1.c2 IN ()))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((('-822675821'))<>(((rt1.c2 IN ())))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON (+ (NULL)) WHERE (rt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON (+ (NULL)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON (+ (NULL)) WHERE (rt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON (+ (NULL)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON (+ (NULL)) WHERE (rt0.c1 COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE ((rt1.c2 IN (x'', '-1533101679'))) ORDER BY (((((rt1.c0, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c2, t1.c0, '')) AND ((rt1.c2, 'LS', rt1.c2)))) NOT BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (rt1.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 IN (x'', '-1533101679'))) IS TRUE)  as count FROM rt1, t1 ORDER BY (((((rt1.c0, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c2, t1.c0, '')) AND ((rt1.c2, 'LS', rt1.c2)))) NOT BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (rt1.c2)) ASC);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE ((rt1.c2 IN (x'', '-1533101679'))) ORDER BY (((((rt1.c0, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c2, t1.c0, '')) AND ((rt1.c2, 'LS', rt1.c2)))) NOT BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (rt1.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 IN (x'', '-1533101679'))) IS TRUE)  as count FROM rt1, t1 ORDER BY (((((rt1.c0, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c2, t1.c0, '')) AND ((rt1.c2, 'LS', rt1.c2)))) NOT BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (rt1.c2)) ASC);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE ((rt1.c2 IN (x'', '-1533101679'))) ORDER BY (((((rt1.c0, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c2, t1.c0, '')) AND ((rt1.c2, 'LS', rt1.c2)))) NOT BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (rt1.c2)) ASC;
SELECT ALL * FROM t1, rt0, rt1 WHERE (((((((t1.c0) BETWEEN (rt0.c2) AND (rt1.c1)))AND(((rt1.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)))))AND(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0) BETWEEN (rt0.c2) AND (rt1.c1)))AND(((rt1.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)))))AND(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL * FROM t1, rt0, rt1 WHERE (((((((t1.c0) BETWEEN (rt0.c2) AND (rt1.c1)))AND(((rt1.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)))))AND(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0) BETWEEN (rt0.c2) AND (rt1.c1)))AND(((rt1.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)))))AND(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL * FROM t1, rt0, rt1 WHERE (((((((t1.c0) BETWEEN (rt0.c2) AND (rt1.c1)))AND(((rt1.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)))))AND(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)))));
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (((rt0.c1 COLLATE BINARY)IS NOT(((((t1.c0)OR(rt0.c2)))AND(t1.c0))))) ORDER BY CAST(CASE t1.c0  WHEN rt1.c0 THEN t1.c0 ELSE rt1.c1 END AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY)IS NOT(((((t1.c0)OR(rt0.c2)))AND(t1.c0))))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY CAST(CASE t1.c0  WHEN rt1.c0 THEN t1.c0 ELSE rt1.c1 END AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (((rt0.c1 COLLATE BINARY)IS NOT(((((t1.c0)OR(rt0.c2)))AND(t1.c0))))) ORDER BY CAST(CASE t1.c0  WHEN rt1.c0 THEN t1.c0 ELSE rt1.c1 END AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY)IS NOT(((((t1.c0)OR(rt0.c2)))AND(t1.c0))))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY CAST(CASE t1.c0  WHEN rt1.c0 THEN t1.c0 ELSE rt1.c1 END AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (((rt0.c1 COLLATE BINARY)IS NOT(((((t1.c0)OR(rt0.c2)))AND(t1.c0))))) ORDER BY CAST(CASE t1.c0  WHEN rt1.c0 THEN t1.c0 ELSE rt1.c1 END AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (x'') ORDER BY ((LIKELY(DISTINCT t1.c0)) NOT BETWEEN ((t1.c0 IN (t1.c0))) AND ((t1.c0 IN ()))) DESC  NULLS FIRST, ((((0.22327542019852065) IS FALSE))LIKE(((((t1.c0)OR(t1.c0)))OR(t1.c0)))), CAST(t1.c0 AS NUMERIC) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1 ORDER BY ((LIKELY(DISTINCT t1.c0)) NOT BETWEEN ((t1.c0 IN (t1.c0))) AND ((t1.c0 IN ()))) DESC  NULLS FIRST, ((((0.22327542019852065) IS FALSE))LIKE(((((t1.c0)OR(t1.c0)))OR(t1.c0)))), CAST(t1.c0 AS NUMERIC) COLLATE NOCASE DESC);
SELECT ALL * FROM t1 WHERE (x'') ORDER BY ((LIKELY(DISTINCT t1.c0)) NOT BETWEEN ((t1.c0 IN (t1.c0))) AND ((t1.c0 IN ()))) DESC  NULLS FIRST, ((((0.22327542019852065) IS FALSE))LIKE(((((t1.c0)OR(t1.c0)))OR(t1.c0)))), CAST(t1.c0 AS NUMERIC) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1 ORDER BY ((LIKELY(DISTINCT t1.c0)) NOT BETWEEN ((t1.c0 IN (t1.c0))) AND ((t1.c0 IN ()))) DESC  NULLS FIRST, ((((0.22327542019852065) IS FALSE))LIKE(((((t1.c0)OR(t1.c0)))OR(t1.c0)))), CAST(t1.c0 AS NUMERIC) COLLATE NOCASE DESC);
SELECT ALL * FROM t1 WHERE (x'') ORDER BY ((LIKELY(DISTINCT t1.c0)) NOT BETWEEN ((t1.c0 IN (t1.c0))) AND ((t1.c0 IN ()))) DESC  NULLS FIRST, ((((0.22327542019852065) IS FALSE))LIKE(((((t1.c0)OR(t1.c0)))OR(t1.c0)))), CAST(t1.c0 AS NUMERIC) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c0 THEN x'' END)AND(((rt0.c2) NOT BETWEEN (t1.c0) AND (t1.c0)))) WHERE (((rt0.c1) NOT BETWEEN (t1.c0) AND ((((rt0.c2)) NOT BETWEEN ((-1.319198318E9)) AND ((rt0.c0)))))) ORDER BY LTRIM(t1.c0) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (t1.c0) AND ((((rt0.c2)) NOT BETWEEN ((-1.319198318E9)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c0 THEN x'' END)AND(((rt0.c2) NOT BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY LTRIM(t1.c0) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c0 THEN x'' END)AND(((rt0.c2) NOT BETWEEN (t1.c0) AND (t1.c0)))) WHERE (((rt0.c1) NOT BETWEEN (t1.c0) AND ((((rt0.c2)) NOT BETWEEN ((-1.319198318E9)) AND ((rt0.c0)))))) ORDER BY LTRIM(t1.c0) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (t1.c0) AND ((((rt0.c2)) NOT BETWEEN ((-1.319198318E9)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c0 THEN x'' END)AND(((rt0.c2) NOT BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY LTRIM(t1.c0) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c0 THEN x'' END)AND(((rt0.c2) NOT BETWEEN (t1.c0) AND (t1.c0)))) WHERE (((rt0.c1) NOT BETWEEN (t1.c0) AND ((((rt0.c2)) NOT BETWEEN ((-1.319198318E9)) AND ((rt0.c0)))))) ORDER BY LTRIM(t1.c0) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM t1 WHERE ((NOT (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((NOT (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((NOT (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT ALL * FROM rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))>(((rt1.c0)OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))>(((rt1.c0)OR(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))>(((rt1.c0)OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))>(((rt1.c0)OR(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))>(((rt1.c0)OR(rt1.c2)))));
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (((((LIKELIHOOD(DISTINCT rt0.c2, 0.8643474309875748))OR(rt0.c0 COLLATE NOCASE)))OR((+ (rt1.c1))))) ORDER BY (((((NULL, rt0.c0, rt0.c0, t1.c0, rt1.c1))>((t1.c0, t1.c0, rt1.c2, rt1.c0, x''))))AND((~ (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((LIKELIHOOD(DISTINCT rt0.c2, 0.8643474309875748))OR(rt0.c0 COLLATE NOCASE)))OR((+ (rt1.c1))))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY (((((NULL, rt0.c0, rt0.c0, t1.c0, rt1.c1))>((t1.c0, t1.c0, rt1.c2, rt1.c0, x''))))AND((~ (rt0.c1)))) DESC);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (((((LIKELIHOOD(DISTINCT rt0.c2, 0.8643474309875748))OR(rt0.c0 COLLATE NOCASE)))OR((+ (rt1.c1))))) ORDER BY (((((NULL, rt0.c0, rt0.c0, t1.c0, rt1.c1))>((t1.c0, t1.c0, rt1.c2, rt1.c0, x''))))AND((~ (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((LIKELIHOOD(DISTINCT rt0.c2, 0.8643474309875748))OR(rt0.c0 COLLATE NOCASE)))OR((+ (rt1.c1))))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY (((((NULL, rt0.c0, rt0.c0, t1.c0, rt1.c1))>((t1.c0, t1.c0, rt1.c2, rt1.c0, x''))))AND((~ (rt0.c1)))) DESC);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (((((LIKELIHOOD(DISTINCT rt0.c2, 0.8643474309875748))OR(rt0.c0 COLLATE NOCASE)))OR((+ (rt1.c1))))) ORDER BY (((((NULL, rt0.c0, rt0.c0, t1.c0, rt1.c1))>((t1.c0, t1.c0, rt1.c2, rt1.c0, x''))))AND((~ (rt0.c1)))) DESC;
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (DATE(((t1.c0) IS FALSE), ((((((((((((rt0.c2)AND(rt1.c0)))AND(rt0.c1)))AND(x'')))AND(rt1.c0)))AND(rt0.c1)))OR(rt1.c0)), LAST_INSERT_ROWID())) ORDER BY (NOT (x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATE(((t1.c0) IS FALSE), ((((((((((((rt0.c2)AND(rt1.c0)))AND(rt0.c1)))AND(x'')))AND(rt1.c0)))AND(rt0.c1)))OR(rt1.c0)), LAST_INSERT_ROWID())) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY (NOT (x'')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (DATE(((t1.c0) IS FALSE), ((((((((((((rt0.c2)AND(rt1.c0)))AND(rt0.c1)))AND(x'')))AND(rt1.c0)))AND(rt0.c1)))OR(rt1.c0)), LAST_INSERT_ROWID())) ORDER BY (NOT (x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATE(((t1.c0) IS FALSE), ((((((((((((rt0.c2)AND(rt1.c0)))AND(rt0.c1)))AND(x'')))AND(rt1.c0)))AND(rt0.c1)))OR(rt1.c0)), LAST_INSERT_ROWID())) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY (NOT (x'')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (DATE(((t1.c0) IS FALSE), ((((((((((((rt0.c2)AND(rt1.c0)))AND(rt0.c1)))AND(x'')))AND(rt1.c0)))AND(rt0.c1)))OR(rt1.c0)), LAST_INSERT_ROWID())) ORDER BY (NOT (x'')) ASC  NULLS FIRST;
SELECT * FROM rt0, t1, rt1 WHERE (CAST(t1.c0 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT * FROM rt0, t1, rt1 WHERE (CAST(t1.c0 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT * FROM rt0, t1, rt1 WHERE (CAST(t1.c0 AS REAL) COLLATE BINARY);
SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.34760384965210966 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE RTRIM) ORDER BY CAST('F1' AS NUMERIC) ASC  NULLS LAST, CASE ((t1.c0)%(t1.c0))  WHEN t1.c0 COLLATE NOCASE THEN t1.c0 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.34760384965210966 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY CAST('F1' AS NUMERIC) ASC  NULLS LAST, CASE ((t1.c0)%(t1.c0))  WHEN t1.c0 COLLATE NOCASE THEN t1.c0 COLLATE RTRIM END ASC);
SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.34760384965210966 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE RTRIM) ORDER BY CAST('F1' AS NUMERIC) ASC  NULLS LAST, CASE ((t1.c0)%(t1.c0))  WHEN t1.c0 COLLATE NOCASE THEN t1.c0 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.34760384965210966 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY CAST('F1' AS NUMERIC) ASC  NULLS LAST, CASE ((t1.c0)%(t1.c0))  WHEN t1.c0 COLLATE NOCASE THEN t1.c0 COLLATE RTRIM END ASC);
SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.34760384965210966 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE RTRIM) ORDER BY CAST('F1' AS NUMERIC) ASC  NULLS LAST, CASE ((t1.c0)%(t1.c0))  WHEN t1.c0 COLLATE NOCASE THEN t1.c0 COLLATE RTRIM END ASC;
SELECT * FROM rt0, t1 WHERE (CAST(((t1.c0) IS FALSE) AS INTEGER)) ORDER BY ((((HEX(rt0.c0))AND(json_type(rt0.c1))))AND(CAST(rt0.c2 AS INTEGER))), (((((((((((x''))>((t1.c0))))OR(0.38041011354025567)))AND((- (rt0.c0)))))AND((~ (t1.c0)))))AND((- (rt0.c0)))), HEX(((rt0.c2) ISNULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((HEX(rt0.c0))AND(json_type(rt0.c1))))AND(CAST(rt0.c2 AS INTEGER))), (((((((((((x''))>((t1.c0))))OR(0.38041011354025567)))AND((- (rt0.c0)))))AND((~ (t1.c0)))))AND((- (rt0.c0)))), HEX(((rt0.c2) ISNULL)) ASC  NULLS LAST);
SELECT * FROM rt0, t1 WHERE (CAST(((t1.c0) IS FALSE) AS INTEGER)) ORDER BY ((((HEX(rt0.c0))AND(json_type(rt0.c1))))AND(CAST(rt0.c2 AS INTEGER))), (((((((((((x''))>((t1.c0))))OR(0.38041011354025567)))AND((- (rt0.c0)))))AND((~ (t1.c0)))))AND((- (rt0.c0)))), HEX(((rt0.c2) ISNULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((HEX(rt0.c0))AND(json_type(rt0.c1))))AND(CAST(rt0.c2 AS INTEGER))), (((((((((((x''))>((t1.c0))))OR(0.38041011354025567)))AND((- (rt0.c0)))))AND((~ (t1.c0)))))AND((- (rt0.c0)))), HEX(((rt0.c2) ISNULL)) ASC  NULLS LAST);
SELECT * FROM rt0, t1 WHERE (CAST(((t1.c0) IS FALSE) AS INTEGER)) ORDER BY ((((HEX(rt0.c0))AND(json_type(rt0.c1))))AND(CAST(rt0.c2 AS INTEGER))), (((((((((((x''))>((t1.c0))))OR(0.38041011354025567)))AND((- (rt0.c0)))))AND((~ (t1.c0)))))AND((- (rt0.c0)))), HEX(((rt0.c2) ISNULL)) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CASE (- (t1.c0))  WHEN ((t1.c0) IS TRUE) THEN ((t1.c0)<(t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (t1.c0))  WHEN ((t1.c0) IS TRUE) THEN ((t1.c0)<(t1.c0)) END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE (- (t1.c0))  WHEN ((t1.c0) IS TRUE) THEN ((t1.c0)<(t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (t1.c0))  WHEN ((t1.c0) IS TRUE) THEN ((t1.c0)<(t1.c0)) END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE (- (t1.c0))  WHEN ((t1.c0) IS TRUE) THEN ((t1.c0)<(t1.c0)) END);
SELECT * FROM rt1 WHERE (((((~ (rt1.c0))))>=((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))) ORDER BY CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN (((rt1.c1))>=((rt1.c0))) ELSE (((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) END;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (rt1.c0))))>=((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN (((rt1.c1))>=((rt1.c0))) ELSE (((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) END);
SELECT * FROM rt1 WHERE (((((~ (rt1.c0))))>=((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))) ORDER BY CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN (((rt1.c1))>=((rt1.c0))) ELSE (((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) END;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (rt1.c0))))>=((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN (((rt1.c1))>=((rt1.c0))) ELSE (((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) END);
SELECT * FROM rt1 WHERE (((((~ (rt1.c0))))>=((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))) ORDER BY CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN (((rt1.c1))>=((rt1.c0))) ELSE (((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) END;
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE ((((t1.c0)%(rt0.c1)) IN ())) ORDER BY CASE WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c1 THEN 0.055186333686643496 WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c2 END THEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(t1.c0)) END DESC, (((1.167873392E9)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c1)))AND(0.29791111930917835)))) AND ((((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)%(rt0.c1)) IN ())) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY CASE WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c1 THEN 0.055186333686643496 WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c2 END THEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(t1.c0)) END DESC, (((1.167873392E9)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c1)))AND(0.29791111930917835)))) AND ((((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1))))) ASC);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE ((((t1.c0)%(rt0.c1)) IN ())) ORDER BY CASE WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c1 THEN 0.055186333686643496 WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c2 END THEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(t1.c0)) END DESC, (((1.167873392E9)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c1)))AND(0.29791111930917835)))) AND ((((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)%(rt0.c1)) IN ())) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY CASE WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c1 THEN 0.055186333686643496 WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c2 END THEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(t1.c0)) END DESC, (((1.167873392E9)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c1)))AND(0.29791111930917835)))) AND ((((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1))))) ASC);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE ((((t1.c0)%(rt0.c1)) IN ())) ORDER BY CASE WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c1 THEN 0.055186333686643496 WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c2 END THEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(t1.c0)) END DESC, (((1.167873392E9)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c1)))AND(0.29791111930917835)))) AND ((((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1))))) ASC;
SELECT COUNT(*) FROM rt1, t1 WHERE ((((((((('-591874092')AND(x'2e37')))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)) COLLATE BINARY) ORDER BY (((NOT (rt1.c1))) BETWEEN ((x'' IN ())) AND (CAST(rt1.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((((((((('-591874092')AND(x'2e37')))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1, t1 ORDER BY (((NOT (rt1.c1))) BETWEEN ((x'' IN ())) AND (CAST(rt1.c2 AS NUMERIC))));
SELECT COUNT(*) FROM rt1, t1 WHERE ((((((((('-591874092')AND(x'2e37')))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)) COLLATE BINARY) ORDER BY (((NOT (rt1.c1))) BETWEEN ((x'' IN ())) AND (CAST(rt1.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((((((((('-591874092')AND(x'2e37')))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1, t1 ORDER BY (((NOT (rt1.c1))) BETWEEN ((x'' IN ())) AND (CAST(rt1.c2 AS NUMERIC))));
SELECT COUNT(*) FROM rt1, t1 WHERE ((((((((('-591874092')AND(x'2e37')))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)) COLLATE BINARY) ORDER BY (((NOT (rt1.c1))) BETWEEN ((x'' IN ())) AND (CAST(rt1.c2 AS NUMERIC)));
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE ((- (SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT ALL (((- (SQLITE_VERSION()))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE ((- (SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT ALL (((- (SQLITE_VERSION()))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE ((- (SQLITE_VERSION())));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((INSTR(rt0.c0, t1.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((INSTR(rt0.c0, t1.c0)) IS FALSE)) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((INSTR(rt0.c0, t1.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((INSTR(rt0.c0, t1.c0)) IS FALSE)) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((INSTR(rt0.c0, t1.c0)) IS FALSE));
SELECT ALL * FROM rt0 WHERE (((-876345375)OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) ORDER BY (NOT (CAST(rt0.c2 AS NUMERIC))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-876345375)OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (CAST(rt0.c2 AS NUMERIC))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((-876345375)OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) ORDER BY (NOT (CAST(rt0.c2 AS NUMERIC))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-876345375)OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (CAST(rt0.c2 AS NUMERIC))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((-876345375)OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) ORDER BY (NOT (CAST(rt0.c2 AS NUMERIC))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 LEFT OUTER JOIN t1 ON (((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c2)), (-1202946108 IN ()), ((t1.c0) BETWEEN (rt0.c2) AND (rt0.c0))))>((((t1.c0) BETWEEN (t1.c0) AND (rt0.c1)), ((rt0.c1)&(x'')), ((rt0.c0)GLOB(rt0.c1))))) WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON (((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c2)), (-1202946108 IN ()), ((t1.c0) BETWEEN (rt0.c2) AND (rt0.c0))))>((((t1.c0) BETWEEN (t1.c0) AND (rt0.c1)), ((rt0.c1)&(x'')), ((rt0.c0)GLOB(rt0.c1))))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t1 ON (((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c2)), (-1202946108 IN ()), ((t1.c0) BETWEEN (rt0.c2) AND (rt0.c0))))>((((t1.c0) BETWEEN (t1.c0) AND (rt0.c1)), ((rt0.c1)&(x'')), ((rt0.c0)GLOB(rt0.c1))))) WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON (((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c2)), (-1202946108 IN ()), ((t1.c0) BETWEEN (rt0.c2) AND (rt0.c0))))>((((t1.c0) BETWEEN (t1.c0) AND (rt0.c1)), ((rt0.c1)&(x'')), ((rt0.c0)GLOB(rt0.c1))))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t1 ON (((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c2)), (-1202946108 IN ()), ((t1.c0) BETWEEN (rt0.c2) AND (rt0.c0))))>((((t1.c0) BETWEEN (t1.c0) AND (rt0.c1)), ((rt0.c1)&(x'')), ((rt0.c0)GLOB(rt0.c1))))) WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS REAL));
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (CAST((('-2117885473') BETWEEN (rt1.c2) AND (rt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('-2117885473') BETWEEN (rt1.c2) AND (rt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (CAST((('-2117885473') BETWEEN (rt1.c2) AND (rt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('-2117885473') BETWEEN (rt1.c2) AND (rt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (CAST((('-2117885473') BETWEEN (rt1.c2) AND (rt1.c0)) AS NUMERIC));
SELECT * FROM rt1 WHERE (TRIM(TRIM(DISTINCT rt1.c1, rt1.c1), ((rt1.c1)&(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(TRIM(DISTINCT rt1.c1, rt1.c1), ((rt1.c1)&(rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (TRIM(TRIM(DISTINCT rt1.c1, rt1.c1), ((rt1.c1)&(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(TRIM(DISTINCT rt1.c1, rt1.c1), ((rt1.c1)&(rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (TRIM(TRIM(DISTINCT rt1.c1, rt1.c1), ((rt1.c1)&(rt1.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY CAST(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)) AS INTEGER), (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)) AS INTEGER), (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY CAST(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)) AS INTEGER), (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)) AS INTEGER), (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY CAST(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)) AS INTEGER), (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS BLOB));
SELECT ALL * FROM rt1 WHERE ((((rt1.c1 IN (rt1.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN (rt1.c2))) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1 IN (rt1.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN (rt1.c2))) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1 IN (rt1.c2))) ISNULL));
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ())) IS TRUE)) ORDER BY ((((((t1.c0)AND(x'')))OR(x'')))>>(((t1.c0)||(t1.c0))));
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c0)AND(x'')))OR(x'')))>>(((t1.c0)||(t1.c0)))));
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ())) IS TRUE)) ORDER BY ((((((t1.c0)AND(x'')))OR(x'')))>>(((t1.c0)||(t1.c0))));
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c0)AND(x'')))OR(x'')))>>(((t1.c0)||(t1.c0)))));
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ())) IS TRUE)) ORDER BY ((((((t1.c0)AND(x'')))OR(x'')))>>(((t1.c0)||(t1.c0))));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON (((NULL IN ()))>(x'30c9')) LEFT OUTER JOIN t1 ON rt1.c1 COLLATE BINARY WHERE ((+ ((((rt0.c2))<=((rt1.c0)))))) ORDER BY (NOT (CASE WHEN rt1.c1 THEN rt1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c2))<=((rt1.c0)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((NULL IN ()))>(x'30c9')) LEFT OUTER JOIN t1 ON rt1.c1 COLLATE BINARY ORDER BY (NOT (CASE WHEN rt1.c1 THEN rt1.c0 END))  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON (((NULL IN ()))>(x'30c9')) LEFT OUTER JOIN t1 ON rt1.c1 COLLATE BINARY WHERE ((+ ((((rt0.c2))<=((rt1.c0)))))) ORDER BY (NOT (CASE WHEN rt1.c1 THEN rt1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c2))<=((rt1.c0)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((NULL IN ()))>(x'30c9')) LEFT OUTER JOIN t1 ON rt1.c1 COLLATE BINARY ORDER BY (NOT (CASE WHEN rt1.c1 THEN rt1.c0 END))  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON (((NULL IN ()))>(x'30c9')) LEFT OUTER JOIN t1 ON rt1.c1 COLLATE BINARY WHERE ((+ ((((rt0.c2))<=((rt1.c0)))))) ORDER BY (NOT (CASE WHEN rt1.c1 THEN rt1.c0 END))  NULLS FIRST;
SELECT * FROM rt0, rt1, t1 WHERE ((((~ (rt1.c1))) BETWEEN (((t1.c0)|(x'0e2b'))) AND ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((t1.c0))))));
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c1))) BETWEEN (((t1.c0)|(x'0e2b'))) AND ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((t1.c0)))))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT * FROM rt0, rt1, t1 WHERE ((((~ (rt1.c1))) BETWEEN (((t1.c0)|(x'0e2b'))) AND ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((t1.c0))))));
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c1))) BETWEEN (((t1.c0)|(x'0e2b'))) AND ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((t1.c0)))))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT * FROM rt0, rt1, t1 WHERE ((((~ (rt1.c1))) BETWEEN (((t1.c0)|(x'0e2b'))) AND ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((t1.c0))))));
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(NULL AS BLOB)) ORDER BY IFNULL(DISTINCT ((t1.c0) NOTNULL), (~ (t1.c0)))  NULLS LAST, LOWER(DISTINCT ((t1.c0)=(t1.c0)))  NULLS FIRST, (+ (t1.c0)) COLLATE RTRIM, CASE WHEN ((t1.c0) ISNULL) THEN CAST(1816047639 AS REAL) ELSE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY IFNULL(DISTINCT ((t1.c0) NOTNULL), (~ (t1.c0)))  NULLS LAST, LOWER(DISTINCT ((t1.c0)=(t1.c0)))  NULLS FIRST, (+ (t1.c0)) COLLATE RTRIM, CASE WHEN ((t1.c0) ISNULL) THEN CAST(1816047639 AS REAL) ELSE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(NULL AS BLOB)) ORDER BY IFNULL(DISTINCT ((t1.c0) NOTNULL), (~ (t1.c0)))  NULLS LAST, LOWER(DISTINCT ((t1.c0)=(t1.c0)))  NULLS FIRST, (+ (t1.c0)) COLLATE RTRIM, CASE WHEN ((t1.c0) ISNULL) THEN CAST(1816047639 AS REAL) ELSE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY IFNULL(DISTINCT ((t1.c0) NOTNULL), (~ (t1.c0)))  NULLS LAST, LOWER(DISTINCT ((t1.c0)=(t1.c0)))  NULLS FIRST, (+ (t1.c0)) COLLATE RTRIM, CASE WHEN ((t1.c0) ISNULL) THEN CAST(1816047639 AS REAL) ELSE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(NULL AS BLOB)) ORDER BY IFNULL(DISTINCT ((t1.c0) NOTNULL), (~ (t1.c0)))  NULLS LAST, LOWER(DISTINCT ((t1.c0)=(t1.c0)))  NULLS FIRST, (+ (t1.c0)) COLLATE RTRIM, CASE WHEN ((t1.c0) ISNULL) THEN CAST(1816047639 AS REAL) ELSE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) END DESC  NULLS LAST;
SELECT * FROM rt1, t1 WHERE (((((((rt1.c2)OR(t1.c0)))AND(rt1.c0)))+(IFNULL('y))Yoq8\rR', rt1.c2)))) ORDER BY (+ (t1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)OR(t1.c0)))AND(rt1.c0)))+(IFNULL('y))Yoq8\rR', rt1.c2)))) IS TRUE)  as count FROM rt1, t1 ORDER BY (+ (t1.c0 COLLATE BINARY)));
SELECT * FROM rt1, t1 WHERE (((((((rt1.c2)OR(t1.c0)))AND(rt1.c0)))+(IFNULL('y))Yoq8\rR', rt1.c2)))) ORDER BY (+ (t1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)OR(t1.c0)))AND(rt1.c0)))+(IFNULL('y))Yoq8\rR', rt1.c2)))) IS TRUE)  as count FROM rt1, t1 ORDER BY (+ (t1.c0 COLLATE BINARY)));
SELECT * FROM rt1, t1 WHERE (((((((rt1.c2)OR(t1.c0)))AND(rt1.c0)))+(IFNULL('y))Yoq8\rR', rt1.c2)))) ORDER BY (+ (t1.c0 COLLATE BINARY));
SELECT * FROM rt1, rt0, t1 WHERE ((((rt0.c0 IN ()))IS NOT(rt1.c2))) ORDER BY (((770163395))>=((((rt0.c0)>(NULL))))), 'T6+im' ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))IS NOT(rt1.c2))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY (((770163395))>=((((rt0.c0)>(NULL))))), 'T6+im' ASC);
SELECT * FROM rt1, rt0, t1 WHERE ((((rt0.c0 IN ()))IS NOT(rt1.c2))) ORDER BY (((770163395))>=((((rt0.c0)>(NULL))))), 'T6+im' ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))IS NOT(rt1.c2))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY (((770163395))>=((((rt0.c0)>(NULL))))), 'T6+im' ASC);
SELECT * FROM rt1, rt0, t1 WHERE ((((rt0.c0 IN ()))IS NOT(rt1.c2))) ORDER BY (((770163395))>=((((rt0.c0)>(NULL))))), 'T6+im' ASC;
SELECT * FROM t1 NATURAL JOIN rt1 WHERE ((((((- (rt1.c0)))OR(((rt1.c1)IS NOT(t1.c0)))))AND(rt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt1.c0)))OR(((rt1.c1)IS NOT(t1.c0)))))AND(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t1 NATURAL JOIN rt1);
SELECT * FROM t1 NATURAL JOIN rt1 WHERE ((((((- (rt1.c0)))OR(((rt1.c1)IS NOT(t1.c0)))))AND(rt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt1.c0)))OR(((rt1.c1)IS NOT(t1.c0)))))AND(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t1 NATURAL JOIN rt1);
SELECT * FROM t1 NATURAL JOIN rt1 WHERE ((((((- (rt1.c0)))OR(((rt1.c1)IS NOT(t1.c0)))))AND(rt1.c1 COLLATE NOCASE)));
SELECT ALL * FROM t1 WHERE ((t1.c0 IN ()) COLLATE BINARY) ORDER BY ((((+ (t1.c0))))>((((t1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY ((((+ (t1.c0))))>((((t1.c0) ISNULL)))));
SELECT ALL * FROM t1 WHERE ((t1.c0 IN ()) COLLATE BINARY) ORDER BY ((((+ (t1.c0))))>((((t1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY ((((+ (t1.c0))))>((((t1.c0) ISNULL)))));
SELECT ALL * FROM t1 WHERE ((t1.c0 IN ()) COLLATE BINARY) ORDER BY ((((+ (t1.c0))))>((((t1.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE (((rt1.c2)<>(rt0.c2))) ORDER BY IFNULL(DISTINCT CAST(rt0.c1 AS NUMERIC), rt0.c2)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)!=(rt0.c2))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY IFNULL(DISTINCT CAST(rt0.c1 AS NUMERIC), rt0.c2)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE (((rt1.c2)<>(rt0.c2))) ORDER BY IFNULL(DISTINCT CAST(rt0.c1 AS NUMERIC), rt0.c2)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)!=(rt0.c2))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY IFNULL(DISTINCT CAST(rt0.c1 AS NUMERIC), rt0.c2)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE (((rt1.c2)<>(rt0.c2))) ORDER BY IFNULL(DISTINCT CAST(rt0.c1 AS NUMERIC), rt0.c2)  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN rt0 WHERE ((((']''''Bh6' IN ())) IS TRUE)) ORDER BY (((rt0.c1))<((t1.c0))) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((']''''Bh6' IN ())) IS TRUE)) IS TRUE)  as count FROM t1 NATURAL JOIN rt0 ORDER BY (((rt0.c1))<((t1.c0))) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN rt0 WHERE ((((']''''Bh6' IN ())) IS TRUE)) ORDER BY (((rt0.c1))<((t1.c0))) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((']''''Bh6' IN ())) IS TRUE)) IS TRUE)  as count FROM t1 NATURAL JOIN rt0 ORDER BY (((rt0.c1))<((t1.c0))) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN rt0 WHERE ((((']''''Bh6' IN ())) IS TRUE)) ORDER BY (((rt0.c1))<((t1.c0))) COLLATE NOCASE ASC;
SELECT * FROM t1 WHERE ((((LIKELIHOOD(0.01620200282680495, 0.47428952754412446)))<((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((LIKELIHOOD(0.01620200282680495, 0.47428952754412446)))<((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((LIKELIHOOD(0.01620200282680495, 0.47428952754412446)))<((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((LIKELIHOOD(0.01620200282680495, 0.47428952754412446)))<((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((LIKELIHOOD(0.01620200282680495, 0.47428952754412446)))<((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))));
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON ((NOT (rt1.c0)) IN (((rt0.c2)&(rt1.c0)))) INNER JOIN t1 ON (((GLOB(t1.c0, t1.c0), rt0.c2, CAST(rt0.c2 AS TEXT)))<=((((rt1.c1)GLOB(rt0.c2)), rt1.c0, ((t1.c0) BETWEEN (rt0.c2) AND (t1.c0))))) WHERE (((((rt1.c2) BETWEEN (t1.c0) AND (rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) BETWEEN (t1.c0) AND (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((NOT (rt1.c0)) IN (((rt0.c2)&(rt1.c0)))) INNER JOIN t1 ON (((GLOB(t1.c0, t1.c0), rt0.c2, CAST(rt0.c2 AS TEXT)))<=((((rt1.c1)GLOB(rt0.c2)), rt1.c0, ((t1.c0) BETWEEN (rt0.c2) AND (t1.c0))))));
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON ((NOT (rt1.c0)) IN (((rt0.c2)&(rt1.c0)))) INNER JOIN t1 ON (((GLOB(t1.c0, t1.c0), rt0.c2, CAST(rt0.c2 AS TEXT)))<=((((rt1.c1)GLOB(rt0.c2)), rt1.c0, ((t1.c0) BETWEEN (rt0.c2) AND (t1.c0))))) WHERE (((((rt1.c2) BETWEEN (t1.c0) AND (rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) BETWEEN (t1.c0) AND (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((NOT (rt1.c0)) IN (((rt0.c2)&(rt1.c0)))) INNER JOIN t1 ON (((GLOB(t1.c0, t1.c0), rt0.c2, CAST(rt0.c2 AS TEXT)))<=((((rt1.c1)GLOB(rt0.c2)), rt1.c0, ((t1.c0) BETWEEN (rt0.c2) AND (t1.c0))))));
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON ((NOT (rt1.c0)) IN (((rt0.c2)&(rt1.c0)))) INNER JOIN t1 ON (((GLOB(t1.c0, t1.c0), rt0.c2, CAST(rt0.c2 AS TEXT)))<=((((rt1.c1)GLOB(rt0.c2)), rt1.c0, ((t1.c0) BETWEEN (rt0.c2) AND (t1.c0))))) WHERE (((((rt1.c2) BETWEEN (t1.c0) AND (rt0.c1))) NOT NULL));
SELECT ALL * FROM rt0, t1, rt1 WHERE (CAST(((rt0.c1)>=(rt1.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)>=(rt1.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT ALL * FROM rt0, t1, rt1 WHERE (CAST(((rt0.c1)>=(rt1.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)>=(rt1.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT ALL * FROM rt0, t1, rt1 WHERE (CAST(((rt0.c1)>=(rt1.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (((((((((((rt0.c1)AND(rt0.c0)))OR(rt1.c1)))AND(rt1.c1)))OR(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(rt0.c0)))OR(rt1.c1)))AND(rt1.c1)))OR(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (((((((((((rt0.c1)AND(rt0.c0)))OR(rt1.c1)))AND(rt1.c1)))OR(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(rt0.c0)))OR(rt1.c1)))AND(rt1.c1)))OR(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (((((((((((rt0.c1)AND(rt0.c0)))OR(rt1.c1)))AND(rt1.c1)))OR(rt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE ((NOT ('  S?>'))) ORDER BY (((- (rt0.c0)))GLOB(rt0.c1)) DESC  NULLS LAST, STRFTIME(TYPEOF(DISTINCT rt0.c1), CAST(t1.c0 AS NUMERIC), CASE WHEN 0.9413498624685793 THEN '*L' END) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ('  S?>'))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY (((- (rt0.c0)))GLOB(rt0.c1)) DESC  NULLS LAST, STRFTIME(TYPEOF(DISTINCT rt0.c1), CAST(t1.c0 AS NUMERIC), CASE WHEN 0.9413498624685793 THEN '*L' END) ASC);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE ((NOT ('  S?>'))) ORDER BY (((- (rt0.c0)))GLOB(rt0.c1)) DESC  NULLS LAST, STRFTIME(TYPEOF(DISTINCT rt0.c1), CAST(t1.c0 AS NUMERIC), CASE WHEN 0.9413498624685793 THEN '*L' END) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ('  S?>'))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY (((- (rt0.c0)))GLOB(rt0.c1)) DESC  NULLS LAST, STRFTIME(TYPEOF(DISTINCT rt0.c1), CAST(t1.c0 AS NUMERIC), CASE WHEN 0.9413498624685793 THEN '*L' END) ASC);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE ((NOT ('  S?>'))) ORDER BY (((- (rt0.c0)))GLOB(rt0.c1)) DESC  NULLS LAST, STRFTIME(TYPEOF(DISTINCT rt0.c1), CAST(t1.c0 AS NUMERIC), CASE WHEN 0.9413498624685793 THEN '*L' END) ASC;
SELECT * FROM t1 WHERE (((LIKELIHOOD(-1.7976931348623157E308, 0.30248776906404573)) ISNULL)) ORDER BY t1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(-1.7976931348623157E308, 0.30248776906404573)) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY t1.c0 ASC  NULLS LAST);
SELECT * FROM t1 WHERE (((LIKELIHOOD(-1.7976931348623157E308, 0.30248776906404573)) ISNULL)) ORDER BY t1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(-1.7976931348623157E308, 0.30248776906404573)) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY t1.c0 ASC  NULLS LAST);
SELECT * FROM t1 WHERE (((LIKELIHOOD(-1.7976931348623157E308, 0.30248776906404573)) ISNULL)) ORDER BY t1.c0 ASC  NULLS LAST;
SELECT * FROM rt0, rt1, t1 WHERE (CAST(-319230656 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(-319230656 AS INTEGER)) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT * FROM rt0, rt1, t1 WHERE (CAST(-319230656 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(-319230656 AS INTEGER)) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT * FROM rt0, rt1, t1 WHERE (CAST(-319230656 AS INTEGER));
SELECT * FROM rt0 WHERE (((x'')IS(((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((x'')IS(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((x'')IS(((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((x'')IS(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((x'')IS(((rt0.c2) NOTNULL))));
SELECT ALL * FROM rt0, rt1 WHERE (CASE WHEN ((rt0.c2)-(rt0.c0)) THEN ((rt1.c2) ISNULL) ELSE (rt1.c0 IN ()) END) ORDER BY CASE WHEN ',r1' THEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) WHEN TRIM(rt1.c0, rt1.c1) THEN rt0.c1 COLLATE RTRIM WHEN CAST(rt0.c2 AS INTEGER) THEN TRIM(rt1.c1, rt0.c0) ELSE ((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2)-(rt0.c0)) THEN ((rt1.c2) ISNULL) ELSE (rt1.c0 IN ()) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE WHEN ',r1' THEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) WHEN TRIM(rt1.c0, rt1.c1) THEN rt0.c1 COLLATE RTRIM WHEN CAST(rt0.c2 AS INTEGER) THEN TRIM(rt1.c1, rt0.c0) ELSE ((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (CASE WHEN ((rt0.c2)-(rt0.c0)) THEN ((rt1.c2) ISNULL) ELSE (rt1.c0 IN ()) END) ORDER BY CASE WHEN ',r1' THEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) WHEN TRIM(rt1.c0, rt1.c1) THEN rt0.c1 COLLATE RTRIM WHEN CAST(rt0.c2 AS INTEGER) THEN TRIM(rt1.c1, rt0.c0) ELSE ((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2)-(rt0.c0)) THEN ((rt1.c2) ISNULL) ELSE (rt1.c0 IN ()) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE WHEN ',r1' THEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) WHEN TRIM(rt1.c0, rt1.c1) THEN rt0.c1 COLLATE RTRIM WHEN CAST(rt0.c2 AS INTEGER) THEN TRIM(rt1.c1, rt0.c0) ELSE ((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (CASE WHEN ((rt0.c2)-(rt0.c0)) THEN ((rt1.c2) ISNULL) ELSE (rt1.c0 IN ()) END) ORDER BY CASE WHEN ',r1' THEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) WHEN TRIM(rt1.c0, rt1.c1) THEN rt0.c1 COLLATE RTRIM WHEN CAST(rt0.c2 AS INTEGER) THEN TRIM(rt1.c1, rt0.c0) ELSE ((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) END  NULLS FIRST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c1)) BETWEEN ((rt1.c0)) AND ((0.32010333505253774))) COLLATE RTRIM WHERE (CAST(rt1.c1 AS BLOB) COLLATE NOCASE) ORDER BY (+ ('w⁊'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c1)) BETWEEN ((rt1.c0)) AND ((0.32010333505253774))) COLLATE RTRIM ORDER BY (+ ('w⁊'))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c1)) BETWEEN ((rt1.c0)) AND ((0.32010333505253774))) COLLATE RTRIM WHERE (CAST(rt1.c1 AS BLOB) COLLATE NOCASE) ORDER BY (+ ('w⁊'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c1)) BETWEEN ((rt1.c0)) AND ((0.32010333505253774))) COLLATE RTRIM ORDER BY (+ ('w⁊'))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c1)) BETWEEN ((rt1.c0)) AND ((0.32010333505253774))) COLLATE RTRIM WHERE (CAST(rt1.c1 AS BLOB) COLLATE NOCASE) ORDER BY (+ ('w⁊'))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (CAST('' AS TEXT)) ORDER BY LIKE(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)), (- (rt1.c0)));
SELECT SUM(count) FROM (SELECT ((CAST('' AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY LIKE(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)), (- (rt1.c0))));
SELECT COUNT(*) FROM rt1 WHERE (CAST('' AS TEXT)) ORDER BY LIKE(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)), (- (rt1.c0)));
SELECT SUM(count) FROM (SELECT ((CAST('' AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY LIKE(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)), (- (rt1.c0))));
SELECT COUNT(*) FROM rt1 WHERE (CAST('' AS TEXT)) ORDER BY LIKE(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)), (- (rt1.c0)));
SELECT * FROM t1, rt1 INNER JOIN rt0 ON CASE '_0'  WHEN ABS(t1.c0) THEN ((rt0.c2)%(rt0.c0)) END WHERE (CAST(CAST(rt0.c0 AS TEXT) AS INTEGER)) ORDER BY CASE WHEN (((rt0.c0, rt1.c2, t1.c0)) NOT BETWEEN ((rt0.c2, x'', rt0.c1)) AND ((0.7471471486341058, rt1.c2, 0.7157872678657614))) THEN CASE WHEN rt1.c1 THEN rt0.c0 WHEN t1.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 ELSE NULL END END;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM t1, rt1 INNER JOIN rt0 ON CASE '_0'  WHEN ABS(t1.c0) THEN ((rt0.c2)%(rt0.c0)) END ORDER BY CASE WHEN (((rt0.c0, rt1.c2, t1.c0)) NOT BETWEEN ((rt0.c2, x'', rt0.c1)) AND ((0.7471471486341058, rt1.c2, 0.7157872678657614))) THEN CASE WHEN rt1.c1 THEN rt0.c0 WHEN t1.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 ELSE NULL END END);
SELECT * FROM t1, rt1 INNER JOIN rt0 ON CASE '_0'  WHEN ABS(t1.c0) THEN ((rt0.c2)%(rt0.c0)) END WHERE (CAST(CAST(rt0.c0 AS TEXT) AS INTEGER)) ORDER BY CASE WHEN (((rt0.c0, rt1.c2, t1.c0)) NOT BETWEEN ((rt0.c2, x'', rt0.c1)) AND ((0.7471471486341058, rt1.c2, 0.7157872678657614))) THEN CASE WHEN rt1.c1 THEN rt0.c0 WHEN t1.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 ELSE NULL END END;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM t1, rt1 INNER JOIN rt0 ON CASE '_0'  WHEN ABS(t1.c0) THEN ((rt0.c2)%(rt0.c0)) END ORDER BY CASE WHEN (((rt0.c0, rt1.c2, t1.c0)) NOT BETWEEN ((rt0.c2, x'', rt0.c1)) AND ((0.7471471486341058, rt1.c2, 0.7157872678657614))) THEN CASE WHEN rt1.c1 THEN rt0.c0 WHEN t1.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 ELSE NULL END END);
SELECT * FROM t1, rt1 INNER JOIN rt0 ON CASE '_0'  WHEN ABS(t1.c0) THEN ((rt0.c2)%(rt0.c0)) END WHERE (CAST(CAST(rt0.c0 AS TEXT) AS INTEGER)) ORDER BY CASE WHEN (((rt0.c0, rt1.c2, t1.c0)) NOT BETWEEN ((rt0.c2, x'', rt0.c1)) AND ((0.7471471486341058, rt1.c2, 0.7157872678657614))) THEN CASE WHEN rt1.c1 THEN rt0.c0 WHEN t1.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 ELSE NULL END END;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) BETWEEN (x'') AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY rtreenode(CAST(rt0.c1 AS NUMERIC), TYPEOF(DISTINCT rt0.c2));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) BETWEEN (x'') AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rtreenode(CAST(rt0.c1 AS NUMERIC), TYPEOF(DISTINCT rt0.c2)));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) BETWEEN (x'') AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY rtreenode(CAST(rt0.c1 AS NUMERIC), TYPEOF(DISTINCT rt0.c2));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) BETWEEN (x'') AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rtreenode(CAST(rt0.c1 AS NUMERIC), TYPEOF(DISTINCT rt0.c2)));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) BETWEEN (x'') AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY rtreenode(CAST(rt0.c1 AS NUMERIC), TYPEOF(DISTINCT rt0.c2));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((NULL)AND(CAST(rt0.c0 AS INTEGER))))OR(CAST(rt0.c2 AS NUMERIC))))AND(rt0.c2)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)AND(CAST(rt0.c0 AS INTEGER))))OR(CAST(rt0.c2 AS NUMERIC))))AND(rt0.c2)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((NULL)AND(CAST(rt0.c0 AS INTEGER))))OR(CAST(rt0.c2 AS NUMERIC))))AND(rt0.c2)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)AND(CAST(rt0.c0 AS INTEGER))))OR(CAST(rt0.c2 AS NUMERIC))))AND(rt0.c2)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((NULL)AND(CAST(rt0.c0 AS INTEGER))))OR(CAST(rt0.c2 AS NUMERIC))))AND(rt0.c2)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0)) NOT BETWEEN (((t1.c0 IN ()))) AND (((t1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN (((t1.c0 IN ()))) AND (((t1.c0 IN ()))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0)) NOT BETWEEN (((t1.c0 IN ()))) AND (((t1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN (((t1.c0 IN ()))) AND (((t1.c0 IN ()))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0)) NOT BETWEEN (((t1.c0 IN ()))) AND (((t1.c0 IN ())))));
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) ISNULL)) ORDER BY ((NULL) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (NULLIF(rt1.c2, rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) ISNULL)) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY ((NULL) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (NULLIF(rt1.c2, rt0.c0))));
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) ISNULL)) ORDER BY ((NULL) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (NULLIF(rt1.c2, rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) ISNULL)) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY ((NULL) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (NULLIF(rt1.c2, rt0.c0))));
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) ISNULL)) ORDER BY ((NULL) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (NULLIF(rt1.c2, rt0.c0)));
SELECT COUNT(*) FROM rt1 WHERE (NULL) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 END) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c2 WHEN ']''''Bh6' THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN x'' THEN rt1.c2 END) AND (((rt1.c1) IS TRUE)))  NULLS FIRST, (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 END) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c2 WHEN ']''''Bh6' THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN x'' THEN rt1.c2 END) AND (((rt1.c1) IS TRUE)))  NULLS FIRST, (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (NULL) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 END) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c2 WHEN ']''''Bh6' THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN x'' THEN rt1.c2 END) AND (((rt1.c1) IS TRUE)))  NULLS FIRST, (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 END) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c2 WHEN ']''''Bh6' THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN x'' THEN rt1.c2 END) AND (((rt1.c1) IS TRUE)))  NULLS FIRST, (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (NULL) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 END) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c2 WHEN ']''''Bh6' THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN x'' THEN rt1.c2 END) AND (((rt1.c1) IS TRUE)))  NULLS FIRST, (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON CAST(((rt0.c0) NOT NULL) AS TEXT) WHERE ('') ORDER BY CASE '\rN'  WHEN CAST(rt0.c2 AS REAL) THEN x'502b' END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CAST(((rt0.c0) NOT NULL) AS TEXT) ORDER BY CASE '\rN'  WHEN CAST(rt0.c2 AS REAL) THEN x'502b' END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON CAST(((rt0.c0) NOT NULL) AS TEXT) WHERE ('') ORDER BY CASE '\rN'  WHEN CAST(rt0.c2 AS REAL) THEN x'502b' END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CAST(((rt0.c0) NOT NULL) AS TEXT) ORDER BY CASE '\rN'  WHEN CAST(rt0.c2 AS REAL) THEN x'502b' END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON CAST(((rt0.c0) NOT NULL) AS TEXT) WHERE ('') ORDER BY CASE '\rN'  WHEN CAST(rt0.c2 AS REAL) THEN x'502b' END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((UNLIKELY(DISTINCT rt0.c1))<(CAST(rt1.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT rt0.c1))<(CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((UNLIKELY(DISTINCT rt0.c1))<(CAST(rt1.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT rt0.c1))<(CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((UNLIKELY(DISTINCT rt0.c1))<(CAST(rt1.c1 AS BLOB))));
SELECT * FROM t1 CROSS JOIN rt1 ON '2138564682' WHERE ((- (CASE WHEN rt1.c0 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt1.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON '2138564682');
SELECT * FROM t1 CROSS JOIN rt1 ON '2138564682' WHERE ((- (CASE WHEN rt1.c0 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt1.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON '2138564682');
SELECT * FROM t1 CROSS JOIN rt1 ON '2138564682' WHERE ((- (CASE WHEN rt1.c0 THEN rt1.c2 END)));
SELECT ALL * FROM rt1 INNER JOIN t1 ON (((((((((rt1.c0 IN ()))AND(rt1.c1)))AND(ABS(DISTINCT rt1.c2))))OR(CASE rt1.c0  WHEN t1.c0 THEN rt1.c2 ELSE t1.c0 END)))AND((+ (t1.c0)))) WHERE (CAST((NOT (t1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t1.c0)) AS INTEGER)) IS TRUE)  as count FROM rt1 INNER JOIN t1 ON (((((((((rt1.c0 IN ()))AND(rt1.c1)))AND(ABS(DISTINCT rt1.c2))))OR(CASE rt1.c0  WHEN t1.c0 THEN rt1.c2 ELSE t1.c0 END)))AND((+ (t1.c0)))));
SELECT ALL * FROM rt1 INNER JOIN t1 ON (((((((((rt1.c0 IN ()))AND(rt1.c1)))AND(ABS(DISTINCT rt1.c2))))OR(CASE rt1.c0  WHEN t1.c0 THEN rt1.c2 ELSE t1.c0 END)))AND((+ (t1.c0)))) WHERE (CAST((NOT (t1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t1.c0)) AS INTEGER)) IS TRUE)  as count FROM rt1 INNER JOIN t1 ON (((((((((rt1.c0 IN ()))AND(rt1.c1)))AND(ABS(DISTINCT rt1.c2))))OR(CASE rt1.c0  WHEN t1.c0 THEN rt1.c2 ELSE t1.c0 END)))AND((+ (t1.c0)))));
SELECT ALL * FROM rt1 INNER JOIN t1 ON (((((((((rt1.c0 IN ()))AND(rt1.c1)))AND(ABS(DISTINCT rt1.c2))))OR(CASE rt1.c0  WHEN t1.c0 THEN rt1.c2 ELSE t1.c0 END)))AND((+ (t1.c0)))) WHERE (CAST((NOT (t1.c0)) AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS INTEGER)) ORDER BY CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(x'')) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS REAL) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(x'')) AS REAL) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS INTEGER)) ORDER BY CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(x'')) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS REAL) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(x'')) AS REAL) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS INTEGER)) ORDER BY CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(x'')) AS REAL) DESC;
SELECT * FROM rt0, rt1, t1 WHERE (CAST(((rt1.c1) NOT BETWEEN (rt1.c1) AND ('')) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) NOT BETWEEN (rt1.c1) AND ('')) AS REAL)) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT * FROM rt0, rt1, t1 WHERE (CAST(((rt1.c1) NOT BETWEEN (rt1.c1) AND ('')) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) NOT BETWEEN (rt1.c1) AND ('')) AS REAL)) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT * FROM rt0, rt1, t1 WHERE (CAST(((rt1.c1) NOT BETWEEN (rt1.c1) AND ('')) AS REAL));
SELECT * FROM t1, rt0 WHERE ((((((((((rt0.c1)OR(rt0.c1)))AND(t1.c0)))AND(t1.c0)))AND(rt0.c1)) IN (t1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c1)OR(rt0.c1)))AND(t1.c0)))AND(t1.c0)))AND(rt0.c1)) IN (t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE ((((((((((rt0.c1)OR(rt0.c1)))AND(t1.c0)))AND(t1.c0)))AND(rt0.c1)) IN (t1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c1)OR(rt0.c1)))AND(t1.c0)))AND(t1.c0)))AND(rt0.c1)) IN (t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE ((((((((((rt0.c1)OR(rt0.c1)))AND(t1.c0)))AND(t1.c0)))AND(rt0.c1)) IN (t1.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) IN ())) ORDER BY '苽al';
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) IN ())) IS TRUE)  as count FROM rt1 ORDER BY '苽al');
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) IN ())) ORDER BY '苽al';
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) IN ())) IS TRUE)  as count FROM rt1 ORDER BY '苽al');
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) IN ())) ORDER BY '苽al';
SELECT ALL * FROM rt0, rt1 WHERE (rt1.c0) ORDER BY '-1276999459' ASC, (((rt1.c2 IN ())) NOT BETWEEN ((NOT (rt1.c1))) AND (((rt1.c1) BETWEEN (rt1.c2) AND ('-1094945795')))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt0, rt1 ORDER BY '-1276999459' ASC, (((rt1.c2 IN ())) NOT BETWEEN ((NOT (rt1.c1))) AND (((rt1.c1) BETWEEN (rt1.c2) AND ('-1094945795')))) DESC);
SELECT ALL * FROM rt0, rt1 WHERE (rt1.c0) ORDER BY '-1276999459' ASC, (((rt1.c2 IN ())) NOT BETWEEN ((NOT (rt1.c1))) AND (((rt1.c1) BETWEEN (rt1.c2) AND ('-1094945795')))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt0, rt1 ORDER BY '-1276999459' ASC, (((rt1.c2 IN ())) NOT BETWEEN ((NOT (rt1.c1))) AND (((rt1.c1) BETWEEN (rt1.c2) AND ('-1094945795')))) DESC);
SELECT ALL * FROM rt0, rt1 WHERE (rt1.c0) ORDER BY '-1276999459' ASC, (((rt1.c2 IN ())) NOT BETWEEN ((NOT (rt1.c1))) AND (((rt1.c1) BETWEEN (rt1.c2) AND ('-1094945795')))) DESC;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((rt1.c2) IS TRUE))OR(x'3c67')))OR(((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2) IS TRUE))OR(x'3c67')))OR(((((rt1.c0)AND(rt1.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((rt1.c2) IS TRUE))OR(x'3c67')))OR(((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2) IS TRUE))OR(x'3c67')))OR(((((rt1.c0)AND(rt1.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((rt1.c2) IS TRUE))OR(x'3c67')))OR(((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))));
SELECT COUNT(*) FROM t1, rt0 WHERE ((((((t1.c0)OR(rt0.c1)))OR(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)OR(rt0.c1)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE ((((((t1.c0)OR(rt0.c1)))OR(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)OR(rt0.c1)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE ((((((t1.c0)OR(rt0.c1)))OR(rt0.c0)) IN ()));
SELECT * FROM rt1 WHERE ((((('')AND(((rt1.c0) IS FALSE))))OR((- (rt1.c2))))) ORDER BY ((((((((rt1.c2)AND(((rt1.c2)OR(rt1.c1)))))OR(((rt1.c1) ISNULL))))OR(CAST(NULL AS NUMERIC))))AND((- (NULL)))) DESC  NULLS FIRST, (- (rt1.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('')AND(((rt1.c0) IS FALSE))))OR((- (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((rt1.c2)AND(((rt1.c2)OR(rt1.c1)))))OR(((rt1.c1) ISNULL))))OR(CAST(NULL AS NUMERIC))))AND((- (NULL)))) DESC  NULLS FIRST, (- (rt1.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((('')AND(((rt1.c0) IS FALSE))))OR((- (rt1.c2))))) ORDER BY ((((((((rt1.c2)AND(((rt1.c2)OR(rt1.c1)))))OR(((rt1.c1) ISNULL))))OR(CAST(NULL AS NUMERIC))))AND((- (NULL)))) DESC  NULLS FIRST, (- (rt1.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('')AND(((rt1.c0) IS FALSE))))OR((- (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((rt1.c2)AND(((rt1.c2)OR(rt1.c1)))))OR(((rt1.c1) ISNULL))))OR(CAST(NULL AS NUMERIC))))AND((- (NULL)))) DESC  NULLS FIRST, (- (rt1.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((('')AND(((rt1.c0) IS FALSE))))OR((- (rt1.c2))))) ORDER BY ((((((((rt1.c2)AND(((rt1.c2)OR(rt1.c1)))))OR(((rt1.c1) ISNULL))))OR(CAST(NULL AS NUMERIC))))AND((- (NULL)))) DESC  NULLS FIRST, (- (rt1.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (json_array_length(((rt1.c0)&(rt1.c1)), CAST(x'' AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((rt1.c0)&(rt1.c1)), CAST(x'' AS BLOB))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (json_array_length(((rt1.c0)&(rt1.c1)), CAST(x'' AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((rt1.c0)&(rt1.c1)), CAST(x'' AS BLOB))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) NOT NULL)) NOT BETWEEN (LTRIM(t1.c0)) AND (((t1.c0)&(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0) NOT NULL)) NOT BETWEEN (LTRIM(t1.c0)) AND (((t1.c0)&(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) NOT NULL)) NOT BETWEEN (LTRIM(t1.c0)) AND (((t1.c0)&(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0) NOT NULL)) NOT BETWEEN (LTRIM(t1.c0)) AND (((t1.c0)&(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) NOT NULL)) NOT BETWEEN (LTRIM(t1.c0)) AND (((t1.c0)&(t1.c0)))));
SELECT ALL * FROM t1 INNER JOIN rt0 ON ((((rt0.c1) NOTNULL))GLOB((NOT (rt0.c2)))) WHERE (COALESCE(rt0.c1, rt0.c0, t1.c0, NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(rt0.c1, rt0.c0, t1.c0, NULL) COLLATE BINARY) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON ((((rt0.c1) NOTNULL))GLOB((NOT (rt0.c2)))));
SELECT ALL * FROM t1 INNER JOIN rt0 ON ((((rt0.c1) NOTNULL))GLOB((NOT (rt0.c2)))) WHERE (COALESCE(rt0.c1, rt0.c0, t1.c0, NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(rt0.c1, rt0.c0, t1.c0, NULL) COLLATE BINARY) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON ((((rt0.c1) NOTNULL))GLOB((NOT (rt0.c2)))));
SELECT ALL * FROM t1 INNER JOIN rt0 ON ((((rt0.c1) NOTNULL))GLOB((NOT (rt0.c2)))) WHERE (COALESCE(rt0.c1, rt0.c0, t1.c0, NULL) COLLATE BINARY);
SELECT * FROM t1, rt1 WHERE (CAST(((((t1.c0)AND(rt1.c2)))OR(rt1.c0)) AS INTEGER)) ORDER BY CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS INTEGER) ASC  NULLS FIRST, ((t1.c0 IN (rt1.c2)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t1.c0)AND(rt1.c2)))OR(rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM t1, rt1 ORDER BY CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS INTEGER) ASC  NULLS FIRST, ((t1.c0 IN (rt1.c2)) IN ()) DESC  NULLS FIRST);
SELECT * FROM t1, rt1 WHERE (CAST(((((t1.c0)AND(rt1.c2)))OR(rt1.c0)) AS INTEGER)) ORDER BY CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS INTEGER) ASC  NULLS FIRST, ((t1.c0 IN (rt1.c2)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t1.c0)AND(rt1.c2)))OR(rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM t1, rt1 ORDER BY CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS INTEGER) ASC  NULLS FIRST, ((t1.c0 IN (rt1.c2)) IN ()) DESC  NULLS FIRST);
SELECT * FROM t1, rt1 WHERE (CAST(((((t1.c0)AND(rt1.c2)))OR(rt1.c0)) AS INTEGER)) ORDER BY CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS INTEGER) ASC  NULLS FIRST, ((t1.c0 IN (rt1.c2)) IN ()) DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE (1.160111587E9);
SELECT SUM(count) FROM (SELECT ((1.160111587E9) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (1.160111587E9);
SELECT SUM(count) FROM (SELECT ((1.160111587E9) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (1.160111587E9);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c1)>(rt1.c0)), CASE WHEN rt1.c2 THEN '-1745742744' WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END, CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN '-194682461' THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 END))>((CAST(rt1.c0 AS INTEGER), CASE WHEN rt1.c2 THEN rt1.c2 END, (((-1639979687, rt1.c0, rt1.c2))<=((rt1.c2, rt1.c0, rt1.c1))))))) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)>(rt1.c0)), CASE WHEN rt1.c2 THEN '-1745742744' WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END, CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN '-194682461' THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 END))>((CAST(rt1.c0 AS INTEGER), CASE WHEN rt1.c2 THEN rt1.c2 END, (((-1639979687, rt1.c0, rt1.c2))<=((rt1.c2, rt1.c0, rt1.c1))))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c1)>(rt1.c0)), CASE WHEN rt1.c2 THEN '-1745742744' WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END, CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN '-194682461' THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 END))>((CAST(rt1.c0 AS INTEGER), CASE WHEN rt1.c2 THEN rt1.c2 END, (((-1639979687, rt1.c0, rt1.c2))<=((rt1.c2, rt1.c0, rt1.c1))))))) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)>(rt1.c0)), CASE WHEN rt1.c2 THEN '-1745742744' WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END, CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN '-194682461' THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 END))>((CAST(rt1.c0 AS INTEGER), CASE WHEN rt1.c2 THEN rt1.c2 END, (((-1639979687, rt1.c0, rt1.c2))<=((rt1.c2, rt1.c0, rt1.c1))))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c1)>(rt1.c0)), CASE WHEN rt1.c2 THEN '-1745742744' WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END, CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN '-194682461' THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 END))>((CAST(rt1.c0 AS INTEGER), CASE WHEN rt1.c2 THEN rt1.c2 END, (((-1639979687, rt1.c0, rt1.c2))<=((rt1.c2, rt1.c0, rt1.c1))))))) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE (((CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c2 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c2 END) NOTNULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c2 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c2 END) NOTNULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c2 END) NOTNULL));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1) BETWEEN (rt1.c1) AND ('0.46023846670258683')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) BETWEEN (rt1.c1) AND ('0.46023846670258683')) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1) BETWEEN (rt1.c1) AND ('0.46023846670258683')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) BETWEEN (rt1.c1) AND ('0.46023846670258683')) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1) BETWEEN (rt1.c1) AND ('0.46023846670258683')) IN ()));
SELECT * FROM t1 WHERE (((((t1.c0)%(t1.c0)))>=((t1.c0 IN (t1.c0))))) ORDER BY ((t1.c0 COLLATE BINARY) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)%(t1.c0)))>=((t1.c0 IN (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0 COLLATE BINARY) NOT NULL)  NULLS FIRST);
SELECT * FROM t1 WHERE (((((t1.c0)%(t1.c0)))>=((t1.c0 IN (t1.c0))))) ORDER BY ((t1.c0 COLLATE BINARY) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)%(t1.c0)))>=((t1.c0 IN (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0 COLLATE BINARY) NOT NULL)  NULLS FIRST);
SELECT * FROM t1 WHERE (((((t1.c0)%(t1.c0)))>=((t1.c0 IN (t1.c0))))) ORDER BY ((t1.c0 COLLATE BINARY) NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (- (CAST(rt0.c0 AS REAL))), (((rt0.c1))!=((rt0.c1))) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (- (CAST(rt0.c0 AS REAL))), (((rt0.c1))<>((rt0.c1))) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (- (CAST(rt0.c0 AS REAL))), (((rt0.c1))!=((rt0.c1))) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (- (CAST(rt0.c0 AS REAL))), (((rt0.c1))<>((rt0.c1))) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (- (CAST(rt0.c0 AS REAL))), (((rt0.c1))!=((rt0.c1))) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM t1 WHERE (((((CAST(t1.c0 AS INTEGER))OR(((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY CASE CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END  WHEN t1.c0 COLLATE RTRIM THEN NULLIF(t1.c0, 0.9453374547250466) ELSE (t1.c0 IN (t1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((CAST(t1.c0 AS INTEGER))OR(((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY CASE CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END  WHEN t1.c0 COLLATE RTRIM THEN NULLIF(t1.c0, 0.9453374547250466) ELSE (t1.c0 IN (t1.c0)) END DESC);
SELECT COUNT(*) FROM t1 WHERE (((((CAST(t1.c0 AS INTEGER))OR(((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY CASE CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END  WHEN t1.c0 COLLATE RTRIM THEN NULLIF(t1.c0, 0.9453374547250466) ELSE (t1.c0 IN (t1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((CAST(t1.c0 AS INTEGER))OR(((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY CASE CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END  WHEN t1.c0 COLLATE RTRIM THEN NULLIF(t1.c0, 0.9453374547250466) ELSE (t1.c0 IN (t1.c0)) END DESC);
SELECT COUNT(*) FROM t1 WHERE (((((CAST(t1.c0 AS INTEGER))OR(((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY CASE CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END  WHEN t1.c0 COLLATE RTRIM THEN NULLIF(t1.c0, 0.9453374547250466) ELSE (t1.c0 IN (t1.c0)) END DESC;
SELECT * FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (0.056110566871882206) AND (rt0.c1)) IN ())) ORDER BY 0.3072038629816719  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT BETWEEN (0.056110566871882206) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY 0.3072038629816719  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (0.056110566871882206) AND (rt0.c1)) IN ())) ORDER BY 0.3072038629816719  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT BETWEEN (0.056110566871882206) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY 0.3072038629816719  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (0.056110566871882206) AND (rt0.c1)) IN ())) ORDER BY 0.3072038629816719  NULLS LAST;
SELECT * FROM t1, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (((rt0.c0)*(t1.c0))) AND ((+ (rt0.c1))))) ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0)))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC)) BETWEEN (((rt0.c0)*(t1.c0))) AND ((+ (rt0.c1))))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0)))) NOTNULL) DESC  NULLS FIRST);
SELECT * FROM t1, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (((rt0.c0)*(t1.c0))) AND ((+ (rt0.c1))))) ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0)))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC)) BETWEEN (((rt0.c0)*(t1.c0))) AND ((+ (rt0.c1))))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0)))) NOTNULL) DESC  NULLS FIRST);
SELECT * FROM t1, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (((rt0.c0)*(t1.c0))) AND ((+ (rt0.c1))))) ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0)))) NOTNULL) DESC  NULLS FIRST;
SELECT ALL * FROM t1, rt1, rt0 WHERE (IFNULL(CAST(t1.c0 AS TEXT), CASE WHEN rt0.c1 THEN rt0.c2 WHEN 0.24910516880233657 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((IFNULL(CAST(t1.c0 AS TEXT), CASE WHEN rt0.c1 THEN rt0.c2 WHEN 0.24910516880233657 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 END)) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE (IFNULL(CAST(t1.c0 AS TEXT), CASE WHEN rt0.c1 THEN rt0.c2 WHEN 0.24910516880233657 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((IFNULL(CAST(t1.c0 AS TEXT), CASE WHEN rt0.c1 THEN rt0.c2 WHEN 0.24910516880233657 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 END)) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE (IFNULL(CAST(t1.c0 AS TEXT), CASE WHEN rt0.c1 THEN rt0.c2 WHEN 0.24910516880233657 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 END));
SELECT ALL * FROM rt1, rt0, t1 WHERE (CASE rt0.c1 COLLATE RTRIM  WHEN rt1.c1 THEN (NOT (rt0.c0)) ELSE rt0.c2 COLLATE RTRIM END) ORDER BY LIKELY(DISTINCT t1.c0 COLLATE BINARY) ASC, (((rt0.c0, rt0.c1, rt1.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c1 END, ((x'') NOT BETWEEN (rt0.c2) AND (rt1.c1)), (rt0.c1 IN ()))) AND ((((rt1.c0) ISNULL), ((rt1.c0)<<(0.1694343480511885)), CAST(rt0.c0 AS BLOB)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1 COLLATE RTRIM  WHEN rt1.c1 THEN (NOT (rt0.c0)) ELSE rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY LIKELY(DISTINCT t1.c0 COLLATE BINARY) ASC, (((rt0.c0, rt0.c1, rt1.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c1 END, ((x'') NOT BETWEEN (rt0.c2) AND (rt1.c1)), (rt0.c1 IN ()))) AND ((((rt1.c0) ISNULL), ((rt1.c0)<<(0.1694343480511885)), CAST(rt0.c0 AS BLOB)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, t1 WHERE (CASE rt0.c1 COLLATE RTRIM  WHEN rt1.c1 THEN (NOT (rt0.c0)) ELSE rt0.c2 COLLATE RTRIM END) ORDER BY LIKELY(DISTINCT t1.c0 COLLATE BINARY) ASC, (((rt0.c0, rt0.c1, rt1.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c1 END, ((x'') NOT BETWEEN (rt0.c2) AND (rt1.c1)), (rt0.c1 IN ()))) AND ((((rt1.c0) ISNULL), ((rt1.c0)<<(0.1694343480511885)), CAST(rt0.c0 AS BLOB)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1 COLLATE RTRIM  WHEN rt1.c1 THEN (NOT (rt0.c0)) ELSE rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY LIKELY(DISTINCT t1.c0 COLLATE BINARY) ASC, (((rt0.c0, rt0.c1, rt1.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c1 END, ((x'') NOT BETWEEN (rt0.c2) AND (rt1.c1)), (rt0.c1 IN ()))) AND ((((rt1.c0) ISNULL), ((rt1.c0)<<(0.1694343480511885)), CAST(rt0.c0 AS BLOB)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, t1 WHERE (CASE rt0.c1 COLLATE RTRIM  WHEN rt1.c1 THEN (NOT (rt0.c0)) ELSE rt0.c2 COLLATE RTRIM END) ORDER BY LIKELY(DISTINCT t1.c0 COLLATE BINARY) ASC, (((rt0.c0, rt0.c1, rt1.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c1 END, ((x'') NOT BETWEEN (rt0.c2) AND (rt1.c1)), (rt0.c1 IN ()))) AND ((((rt1.c0) ISNULL), ((rt1.c0)<<(0.1694343480511885)), CAST(rt0.c0 AS BLOB)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt1 WHERE ((((((rt1.c0)=(rt1.c2))))!=((((t1.c0)/(rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)=(rt1.c2))))<>((((t1.c0)/(rt1.c2)))))) IS TRUE)  as count FROM t1, rt1);
SELECT COUNT(*) FROM t1, rt1 WHERE ((((((rt1.c0)=(rt1.c2))))!=((((t1.c0)/(rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)=(rt1.c2))))<>((((t1.c0)/(rt1.c2)))))) IS TRUE)  as count FROM t1, rt1);
SELECT COUNT(*) FROM t1, rt1 WHERE ((((((rt1.c0)=(rt1.c2))))!=((((t1.c0)/(rt1.c2))))));
SELECT COUNT(*) FROM rt1, t1 WHERE (CASE WHEN CASE WHEN 0.44450925683232745 THEN NULL WHEN rt1.c2 THEN rt1.c1 WHEN 'L7' THEN rt1.c2 END THEN t1.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN 0.44450925683232745 THEN NULL WHEN rt1.c2 THEN rt1.c1 WHEN 'L7' THEN rt1.c2 END THEN t1.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt1, t1);
SELECT COUNT(*) FROM rt1, t1 WHERE (CASE WHEN CASE WHEN 0.44450925683232745 THEN NULL WHEN rt1.c2 THEN rt1.c1 WHEN 'L7' THEN rt1.c2 END THEN t1.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN 0.44450925683232745 THEN NULL WHEN rt1.c2 THEN rt1.c1 WHEN 'L7' THEN rt1.c2 END THEN t1.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt1, t1);
SELECT COUNT(*) FROM rt1, t1 WHERE (CASE WHEN CASE WHEN 0.44450925683232745 THEN NULL WHEN rt1.c2 THEN rt1.c1 WHEN 'L7' THEN rt1.c2 END THEN t1.c0 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((rt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY CAST('' AS NUMERIC)  NULLS FIRST, CAST(rt0.c0 AS INTEGER) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM rt0, t1 ORDER BY CAST('' AS NUMERIC)  NULLS FIRST, CAST(rt0.c0 AS INTEGER) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((rt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY CAST('' AS NUMERIC)  NULLS FIRST, CAST(rt0.c0 AS INTEGER) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM rt0, t1 ORDER BY CAST('' AS NUMERIC)  NULLS FIRST, CAST(rt0.c0 AS INTEGER) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((rt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY CAST('' AS NUMERIC)  NULLS FIRST, CAST(rt0.c0 AS INTEGER) COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE) ORDER BY CAST(CAST(rt0.c1 AS INTEGER) AS REAL);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY CAST(CAST(rt0.c1 AS INTEGER) AS REAL));
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE) ORDER BY CAST(CAST(rt0.c1 AS INTEGER) AS REAL);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY CAST(CAST(rt0.c1 AS INTEGER) AS REAL));
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE) ORDER BY CAST(CAST(rt0.c1 AS INTEGER) AS REAL);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (('1315988224' IN ())) ORDER BY ((((rt1.c0)<<(rt0.c0))) NOT BETWEEN (ABS('-836092516')) AND (((rt0.c1)>=(t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('1315988224' IN ())) IS TRUE)  as count FROM t1 NOT INDEXED, rt1, rt0 ORDER BY ((((rt1.c0)<<(rt0.c0))) NOT BETWEEN (ABS('-836092516')) AND (((rt0.c1)>=(t1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (('1315988224' IN ())) ORDER BY ((((rt1.c0)<<(rt0.c0))) NOT BETWEEN (ABS('-836092516')) AND (((rt0.c1)>=(t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('1315988224' IN ())) IS TRUE)  as count FROM t1 NOT INDEXED, rt1, rt0 ORDER BY ((((rt1.c0)<<(rt0.c0))) NOT BETWEEN (ABS('-836092516')) AND (((rt0.c1)>=(t1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (('1315988224' IN ())) ORDER BY ((((rt1.c0)<<(rt0.c0))) NOT BETWEEN (ABS('-836092516')) AND (((rt0.c1)>=(t1.c0))))  NULLS FIRST;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON (rt1.c2 IN ()) COLLATE BINARY WHERE (CASE CAST(rt1.c0 AS NUMERIC)  WHEN NULL THEN ((rt1.c2)>(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c0 AS NUMERIC)  WHEN NULL THEN ((rt1.c2)>(rt1.c0)) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON (rt1.c2 IN ()) COLLATE BINARY);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON (rt1.c2 IN ()) COLLATE BINARY WHERE (CASE CAST(rt1.c0 AS NUMERIC)  WHEN NULL THEN ((rt1.c2)>(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c0 AS NUMERIC)  WHEN NULL THEN ((rt1.c2)>(rt1.c0)) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON (rt1.c2 IN ()) COLLATE BINARY);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON (rt1.c2 IN ()) COLLATE BINARY WHERE (CASE CAST(rt1.c0 AS NUMERIC)  WHEN NULL THEN ((rt1.c2)>(rt1.c0)) END);
SELECT * FROM rt1, rt0 WHERE (CAST(((rt0.c0)<<(rt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)<<(rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CAST(((rt0.c0)<<(rt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)<<(rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CAST(((rt0.c0)<<(rt1.c1)) AS TEXT));
SELECT ALL * FROM t1 WHERE ((((t1.c0))<((CAST(x'' AS NUMERIC))))) ORDER BY ((t1.c0 IN ()) IN (ABS(t1.c0))) DESC  NULLS LAST, (((t1.c0 COLLATE NOCASE))<=((((((t1.c0)AND(t1.c0)))AND(t1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c0))<((CAST(x'' AS NUMERIC))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0 IN ()) IN (ABS(t1.c0))) DESC  NULLS LAST, (((t1.c0 COLLATE NOCASE))<=((((((t1.c0)AND(t1.c0)))AND(t1.c0)))))  NULLS LAST);
SELECT ALL * FROM t1 WHERE ((((t1.c0))<((CAST(x'' AS NUMERIC))))) ORDER BY ((t1.c0 IN ()) IN (ABS(t1.c0))) DESC  NULLS LAST, (((t1.c0 COLLATE NOCASE))<=((((((t1.c0)AND(t1.c0)))AND(t1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c0))<((CAST(x'' AS NUMERIC))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0 IN ()) IN (ABS(t1.c0))) DESC  NULLS LAST, (((t1.c0 COLLATE NOCASE))<=((((((t1.c0)AND(t1.c0)))AND(t1.c0)))))  NULLS LAST);
SELECT ALL * FROM t1 WHERE ((((t1.c0))<((CAST(x'' AS NUMERIC))))) ORDER BY ((t1.c0 IN ()) IN (ABS(t1.c0))) DESC  NULLS LAST, (((t1.c0 COLLATE NOCASE))<=((((((t1.c0)AND(t1.c0)))AND(t1.c0)))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((CAST(rt0.c0 AS TEXT)))>((((rt0.c0)AND('')))))) ORDER BY LOWER(((rt0.c0)!=(rt0.c1))), UNLIKELY(((rt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c0 AS TEXT)))>((((rt0.c0)AND('')))))) IS TRUE)  as count FROM rt0 ORDER BY LOWER(((rt0.c0)!=(rt0.c1))), UNLIKELY(((rt0.c0) NOT NULL)));
SELECT ALL * FROM rt0 WHERE ((((CAST(rt0.c0 AS TEXT)))>((((rt0.c0)AND('')))))) ORDER BY LOWER(((rt0.c0)!=(rt0.c1))), UNLIKELY(((rt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c0 AS TEXT)))>((((rt0.c0)AND('')))))) IS TRUE)  as count FROM rt0 ORDER BY LOWER(((rt0.c0)!=(rt0.c1))), UNLIKELY(((rt0.c0) NOT NULL)));
SELECT ALL * FROM rt0 WHERE ((((CAST(rt0.c0 AS TEXT)))>((((rt0.c0)AND('')))))) ORDER BY LOWER(((rt0.c0)!=(rt0.c1))), UNLIKELY(((rt0.c0) NOT NULL));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c0 WHERE (((('By')) NOT BETWEEN ((json_array_length(rt0.c1))) AND ((CAST(rt0.c1 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ((((('By')) NOT BETWEEN ((json_array_length(rt0.c1))) AND ((CAST(rt0.c1 AS INTEGER))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c0);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c0 WHERE (((('By')) NOT BETWEEN ((json_array_length(rt0.c1))) AND ((CAST(rt0.c1 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ((((('By')) NOT BETWEEN ((json_array_length(rt0.c1))) AND ((CAST(rt0.c1 AS INTEGER))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c0);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c0 WHERE (((('By')) NOT BETWEEN ((json_array_length(rt0.c1))) AND ((CAST(rt0.c1 AS INTEGER)))));
SELECT ALL * FROM t1, rt0, rt1 WHERE (rt0.c1) ORDER BY (- ((NOT (rt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY (- ((NOT (rt1.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM t1, rt0, rt1 WHERE (rt0.c1) ORDER BY (- ((NOT (rt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY (- ((NOT (rt1.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM t1, rt0, rt1 WHERE (rt0.c1) ORDER BY (- ((NOT (rt1.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t1 ON (((PRINTF(rt1.c1)))>((rt1.c1))) INNER JOIN rt1 ON UPPER(DISTINCT rt0.c2) COLLATE RTRIM WHERE (((((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt1.c2)))AND(rt0.c1)))AND((NOT (t1.c0)))))AND(((t1.c0) ISNULL))))OR(((rt1.c1) NOT BETWEEN (rt0.c0) AND ('')))))AND(((rt0.c0) IS FALSE)))) ORDER BY ((rt1.c2)|(CASE rt0.c1  WHEN 0X1e6decb9 THEN rt1.c0 ELSE x'' END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt1.c2)))AND(rt0.c1)))AND((NOT (t1.c0)))))AND(((t1.c0) ISNULL))))OR(((rt1.c1) NOT BETWEEN (rt0.c0) AND ('')))))AND(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON (((PRINTF(rt1.c1)))>((rt1.c1))) INNER JOIN rt1 ON UPPER(DISTINCT rt0.c2) COLLATE RTRIM ORDER BY ((rt1.c2)|(CASE rt0.c1  WHEN 0X1e6decb9 THEN rt1.c0 ELSE x'' END)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t1 ON (((PRINTF(rt1.c1)))>((rt1.c1))) INNER JOIN rt1 ON UPPER(DISTINCT rt0.c2) COLLATE RTRIM WHERE (((((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt1.c2)))AND(rt0.c1)))AND((NOT (t1.c0)))))AND(((t1.c0) ISNULL))))OR(((rt1.c1) NOT BETWEEN (rt0.c0) AND ('')))))AND(((rt0.c0) IS FALSE)))) ORDER BY ((rt1.c2)|(CASE rt0.c1  WHEN 0X1e6decb9 THEN rt1.c0 ELSE x'' END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt1.c2)))AND(rt0.c1)))AND((NOT (t1.c0)))))AND(((t1.c0) ISNULL))))OR(((rt1.c1) NOT BETWEEN (rt0.c0) AND ('')))))AND(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON (((PRINTF(rt1.c1)))>((rt1.c1))) INNER JOIN rt1 ON UPPER(DISTINCT rt0.c2) COLLATE RTRIM ORDER BY ((rt1.c2)|(CASE rt0.c1  WHEN 0X1e6decb9 THEN rt1.c0 ELSE x'' END)) ASC  NULLS FIRST);
SELECT ALL * FROM t1, rt1, rt0 WHERE ((('513214778')||((0.42122043959503186 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((('513214778')||((0.42122043959503186 IN ())))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE ((('513214778')||((0.42122043959503186 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((('513214778')||((0.42122043959503186 IN ())))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE ((('513214778')||((0.42122043959503186 IN ()))));
SELECT ALL * FROM rt1 NATURAL JOIN t1 WHERE ((((((((((- (rt1.c1)))OR(((rt1.c0)IS(t1.c0)))))AND((((rt1.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))))AND(t1.c0)))AND(((NULL)%(rt1.c1))))) ORDER BY t1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (rt1.c1)))OR(((rt1.c0)IS(t1.c0)))))AND((((rt1.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))))AND(t1.c0)))AND(((NULL)%(rt1.c1))))) IS TRUE)  as count FROM rt1 NATURAL JOIN t1 ORDER BY t1.c0 ASC  NULLS FIRST);
SELECT ALL * FROM rt1 NATURAL JOIN t1 WHERE ((((((((((- (rt1.c1)))OR(((rt1.c0)IS(t1.c0)))))AND((((rt1.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))))AND(t1.c0)))AND(((NULL)%(rt1.c1))))) ORDER BY t1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (rt1.c1)))OR(((rt1.c0)IS(t1.c0)))))AND((((rt1.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))))AND(t1.c0)))AND(((NULL)%(rt1.c1))))) IS TRUE)  as count FROM rt1 NATURAL JOIN t1 ORDER BY t1.c0 ASC  NULLS FIRST);
SELECT ALL * FROM rt1 NATURAL JOIN t1 WHERE ((((((((((- (rt1.c1)))OR(((rt1.c0)IS(t1.c0)))))AND((((rt1.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))))AND(t1.c0)))AND(((NULL)%(rt1.c1))))) ORDER BY t1.c0 ASC  NULLS FIRST;
SELECT * FROM rt0, t1 WHERE ((((((rt0.c1))<=((rt0.c2)))) ISNULL)) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))<=((rt0.c2)))) ISNULL)) IS TRUE)  as count FROM rt0, t1 ORDER BY rt0.c1  NULLS FIRST);
SELECT * FROM rt0, t1 WHERE ((((((rt0.c1))<=((rt0.c2)))) ISNULL)) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))<=((rt0.c2)))) ISNULL)) IS TRUE)  as count FROM rt0, t1 ORDER BY rt0.c1  NULLS FIRST);
SELECT * FROM rt0, t1 WHERE ((((((rt0.c1))<=((rt0.c2)))) ISNULL)) ORDER BY rt0.c1  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON CAST((NOT (rt0.c0)) AS TEXT) FULL OUTER JOIN t1 ON rt1.c2 WHERE ((((((rt0.c2, rt0.c2, t1.c0, rt1.c1, t1.c0))>=((x'a308', rt1.c1, rt1.c0, rt1.c0, rt0.c0))))AND(CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c2, t1.c0, rt1.c1, t1.c0))>=((x'a308', rt1.c1, rt1.c0, rt1.c0, rt0.c0))))AND(CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON CAST((NOT (rt0.c0)) AS TEXT) FULL OUTER JOIN t1 ON rt1.c2);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON CAST((NOT (rt0.c0)) AS TEXT) FULL OUTER JOIN t1 ON rt1.c2 WHERE ((((((rt0.c2, rt0.c2, t1.c0, rt1.c1, t1.c0))>=((x'a308', rt1.c1, rt1.c0, rt1.c0, rt0.c0))))AND(CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c2, t1.c0, rt1.c1, t1.c0))>=((x'a308', rt1.c1, rt1.c0, rt1.c0, rt0.c0))))AND(CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON CAST((NOT (rt0.c0)) AS TEXT) FULL OUTER JOIN t1 ON rt1.c2);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON CAST((NOT (rt0.c0)) AS TEXT) FULL OUTER JOIN t1 ON rt1.c2 WHERE ((((((rt0.c2, rt0.c2, t1.c0, rt1.c1, t1.c0))>=((x'a308', rt1.c1, rt1.c0, rt1.c0, rt0.c0))))AND(CAST(rt1.c2 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (((rt1.c0 IN ()) IN (CASE t1.c0  WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 IN ()) IN (CASE t1.c0  WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (((rt1.c0 IN ()) IN (CASE t1.c0  WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 IN ()) IN (CASE t1.c0  WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (((rt1.c0 IN ()) IN (CASE t1.c0  WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c1 END)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((CAST(rt1.c2 AS INTEGER)))<=((((NULL)GLOB(rt1.c0)))))) ORDER BY CASE ((rt1.c0)<=(rt1.c1))  WHEN ((rt1.c2) IS TRUE) THEN CAST(rt1.c2 AS INTEGER) WHEN rt1.c1 THEN ((rt1.c2)%(rt1.c2)) WHEN ((rt1.c1)<=(rt1.c0)) THEN CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END END;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c2 AS INTEGER)))<=((((NULL)GLOB(rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY CASE ((rt1.c0)<=(rt1.c1))  WHEN ((rt1.c2) IS TRUE) THEN CAST(rt1.c2 AS INTEGER) WHEN rt1.c1 THEN ((rt1.c2)%(rt1.c2)) WHEN ((rt1.c1)<=(rt1.c0)) THEN CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END END);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((CAST(rt1.c2 AS INTEGER)))<=((((NULL)GLOB(rt1.c0)))))) ORDER BY CASE ((rt1.c0)<=(rt1.c1))  WHEN ((rt1.c2) IS TRUE) THEN CAST(rt1.c2 AS INTEGER) WHEN rt1.c1 THEN ((rt1.c2)%(rt1.c2)) WHEN ((rt1.c1)<=(rt1.c0)) THEN CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END END;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c2 AS INTEGER)))<=((((NULL)GLOB(rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY CASE ((rt1.c0)<=(rt1.c1))  WHEN ((rt1.c2) IS TRUE) THEN CAST(rt1.c2 AS INTEGER) WHEN rt1.c1 THEN ((rt1.c2)%(rt1.c2)) WHEN ((rt1.c1)<=(rt1.c0)) THEN CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END END);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((CAST(rt1.c2 AS INTEGER)))<=((((NULL)GLOB(rt1.c0)))))) ORDER BY CASE ((rt1.c0)<=(rt1.c1))  WHEN ((rt1.c2) IS TRUE) THEN CAST(rt1.c2 AS INTEGER) WHEN rt1.c1 THEN ((rt1.c2)%(rt1.c2)) WHEN ((rt1.c1)<=(rt1.c0)) THEN CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END END;
SELECT COUNT(*) FROM rt0, t1 WHERE (((rt0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (((rt0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (((rt0.c2 IN ()) IN ()));
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((rt1.c2)>(rt1.c0))) NOT BETWEEN (0xffffffffa39e1af2) AND (rt1.c1))) ORDER BY (((rt1.c2 IN ())) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)>(rt1.c0))) NOT BETWEEN (0xffffffffa39e1af2) AND (rt1.c1))) IS TRUE)  as count FROM t1, rt1 ORDER BY (((rt1.c2 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((rt1.c2)>(rt1.c0))) NOT BETWEEN (0xffffffffa39e1af2) AND (rt1.c1))) ORDER BY (((rt1.c2 IN ())) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)>(rt1.c0))) NOT BETWEEN (0xffffffffa39e1af2) AND (rt1.c1))) IS TRUE)  as count FROM t1, rt1 ORDER BY (((rt1.c2 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((rt1.c2)>(rt1.c0))) NOT BETWEEN (0xffffffffa39e1af2) AND (rt1.c1))) ORDER BY (((rt1.c2 IN ())) NOTNULL);
SELECT * FROM rt1, rt0 WHERE (IFNULL(rt0.c2, rt1.c0) COLLATE BINARY) ORDER BY (((rt0.c1 IN ())) ISNULL)  NULLS LAST, x'6fce' ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(rt0.c2, rt1.c0) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c1 IN ())) ISNULL)  NULLS LAST, x'6fce' ASC);
SELECT * FROM rt1, rt0 WHERE (IFNULL(rt0.c2, rt1.c0) COLLATE BINARY) ORDER BY (((rt0.c1 IN ())) ISNULL)  NULLS LAST, x'6fce' ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(rt0.c2, rt1.c0) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c1 IN ())) ISNULL)  NULLS LAST, x'6fce' ASC);
SELECT * FROM rt1, rt0 WHERE (IFNULL(rt0.c2, rt1.c0) COLLATE BINARY) ORDER BY (((rt0.c1 IN ())) ISNULL)  NULLS LAST, x'6fce' ASC;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((0.9964274030850307) NOT BETWEEN ((((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) AND ((t1.c0 IN (t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY ((0.9964274030850307) NOT BETWEEN ((((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) AND ((t1.c0 IN (t1.c0))))  NULLS FIRST);
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((0.9964274030850307) NOT BETWEEN ((((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) AND ((t1.c0 IN (t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY ((0.9964274030850307) NOT BETWEEN ((((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) AND ((t1.c0 IN (t1.c0))))  NULLS FIRST);
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((0.9964274030850307) NOT BETWEEN ((((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) AND ((t1.c0 IN (t1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((0.8567953130669699)IS(rt1.c1)))AND(((rt1.c0)%(rt1.c2))))) ORDER BY ((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))OR(((rt1.c1)<(rt1.c1)))))OR(((0.5384126844368665) ISNULL))), rt1.c0 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.8567953130669699)IS(rt1.c1)))AND(((rt1.c0)%(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))OR(((rt1.c1)<(rt1.c1)))))OR(((0.5384126844368665) ISNULL))), rt1.c0 COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((0.8567953130669699)IS(rt1.c1)))AND(((rt1.c0)%(rt1.c2))))) ORDER BY ((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))OR(((rt1.c1)<(rt1.c1)))))OR(((0.5384126844368665) ISNULL))), rt1.c0 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.8567953130669699)IS(rt1.c1)))AND(((rt1.c0)%(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))OR(((rt1.c1)<(rt1.c1)))))OR(((0.5384126844368665) ISNULL))), rt1.c0 COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((0.8567953130669699)IS(rt1.c1)))AND(((rt1.c0)%(rt1.c2))))) ORDER BY ((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))OR(((rt1.c1)<(rt1.c1)))))OR(((0.5384126844368665) ISNULL))), rt1.c0 COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c0))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c0))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (rt1.c0)));
SELECT ALL * FROM rt1 WHERE ((((((NOT (rt1.c2)))OR(CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)))OR(((rt1.c2)*(rt1.c2))))) ORDER BY highlight(((rt1.c0) ISNULL), (~ (rt1.c2)), (rt1.c1 IN (rt1.c1)), ((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))  NULLS LAST, (((rt1.c0, rt1.c1, rt1.c0, rt1.c0, rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)), ((((0X1235368c)AND(rt1.c2)))AND(rt1.c2)), CAST(rt1.c0 AS REAL), (~ (rt1.c1)), rt1.c0, (((rt1.c1))<((rt1.c2))), TRIM(rt1.c2))) AND ((rt1.c2 COLLATE BINARY, ((rt1.c2) NOT BETWEEN (rt1.c1) AND (NULL)), rt1.c0, ((rt1.c2)||(rt1.c1)), ((rt1.c0)&(rt1.c0)), CASE WHEN rt1.c0 THEN 0xfffffffff46561a3 ELSE rt1.c1 END, ((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt1.c2)))OR(CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)))OR(((rt1.c2)*(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY highlight(((rt1.c0) ISNULL), (~ (rt1.c2)), (rt1.c1 IN (rt1.c1)), ((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))  NULLS LAST, (((rt1.c0, rt1.c1, rt1.c0, rt1.c0, rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)), ((((0x1235368c)AND(rt1.c2)))AND(rt1.c2)), CAST(rt1.c0 AS REAL), (~ (rt1.c1)), rt1.c0, (((rt1.c1))<((rt1.c2))), TRIM(rt1.c2))) AND ((rt1.c2 COLLATE BINARY, ((rt1.c2) NOT BETWEEN (rt1.c1) AND (NULL)), rt1.c0, ((rt1.c2)||(rt1.c1)), ((rt1.c0)&(rt1.c0)), CASE WHEN rt1.c0 THEN 0xfffffffff46561a3 ELSE rt1.c1 END, ((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c2))))) DESC);
SELECT ALL * FROM rt1 WHERE ((((((NOT (rt1.c2)))OR(CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)))OR(((rt1.c2)*(rt1.c2))))) ORDER BY highlight(((rt1.c0) ISNULL), (~ (rt1.c2)), (rt1.c1 IN (rt1.c1)), ((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))  NULLS LAST, (((rt1.c0, rt1.c1, rt1.c0, rt1.c0, rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)), ((((0X1235368c)AND(rt1.c2)))AND(rt1.c2)), CAST(rt1.c0 AS REAL), (~ (rt1.c1)), rt1.c0, (((rt1.c1))<((rt1.c2))), TRIM(rt1.c2))) AND ((rt1.c2 COLLATE BINARY, ((rt1.c2) NOT BETWEEN (rt1.c1) AND (NULL)), rt1.c0, ((rt1.c2)||(rt1.c1)), ((rt1.c0)&(rt1.c0)), CASE WHEN rt1.c0 THEN 0xfffffffff46561a3 ELSE rt1.c1 END, ((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt1.c2)))OR(CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)))OR(((rt1.c2)*(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY highlight(((rt1.c0) ISNULL), (~ (rt1.c2)), (rt1.c1 IN (rt1.c1)), ((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))  NULLS LAST, (((rt1.c0, rt1.c1, rt1.c0, rt1.c0, rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)), ((((0x1235368c)AND(rt1.c2)))AND(rt1.c2)), CAST(rt1.c0 AS REAL), (~ (rt1.c1)), rt1.c0, (((rt1.c1))<((rt1.c2))), TRIM(rt1.c2))) AND ((rt1.c2 COLLATE BINARY, ((rt1.c2) NOT BETWEEN (rt1.c1) AND (NULL)), rt1.c0, ((rt1.c2)||(rt1.c1)), ((rt1.c0)&(rt1.c0)), CASE WHEN rt1.c0 THEN 0xfffffffff46561a3 ELSE rt1.c1 END, ((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c2))))) DESC);
SELECT * FROM t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (x'');
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON (rt0.c1 IN (rt0.c2, rt0.c2)) COLLATE BINARY WHERE (((rt0.c1 IN ()) IN (CAST(t1.c0 AS TEXT), 0.15633897483503845))) ORDER BY load_extension(rt0.c0) COLLATE RTRIM  NULLS FIRST, rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN ()) IN (CAST(t1.c0 AS TEXT), 0.15633897483503845))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON (rt0.c1 IN (rt0.c2, rt0.c2)) COLLATE BINARY ORDER BY load_extension(rt0.c0) COLLATE RTRIM  NULLS FIRST, rt0.c0 DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON (rt0.c1 IN (rt0.c2, rt0.c2)) COLLATE BINARY WHERE (((rt0.c1 IN ()) IN (CAST(t1.c0 AS TEXT), 0.15633897483503845))) ORDER BY load_extension(rt0.c0) COLLATE RTRIM  NULLS FIRST, rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN ()) IN (CAST(t1.c0 AS TEXT), 0.15633897483503845))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON (rt0.c1 IN (rt0.c2, rt0.c2)) COLLATE BINARY ORDER BY load_extension(rt0.c0) COLLATE RTRIM  NULLS FIRST, rt0.c0 DESC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (+ ('/1{倧r0')) WHERE ((((((((((((t1.c0))>((rt0.c0))))AND((- (rt0.c1)))))OR(rt0.c2)))AND(((rt0.c2) IS FALSE))))OR(((('Lo', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((-1276999459, rt0.c2, rt0.c2)))))) ORDER BY (~ (((rt0.c1)>>(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((t1.c0))>((rt0.c0))))AND((- (rt0.c1)))))OR(rt0.c2)))AND(((rt0.c2) IS FALSE))))OR(((('Lo', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((-1276999459, rt0.c2, rt0.c2)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON (+ ('/1{倧r0')) ORDER BY (~ (((rt0.c1)>>(rt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (+ ('/1{倧r0')) WHERE ((((((((((((t1.c0))>((rt0.c0))))AND((- (rt0.c1)))))OR(rt0.c2)))AND(((rt0.c2) IS FALSE))))OR(((('Lo', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((-1276999459, rt0.c2, rt0.c2)))))) ORDER BY (~ (((rt0.c1)>>(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((t1.c0))>((rt0.c0))))AND((- (rt0.c1)))))OR(rt0.c2)))AND(((rt0.c2) IS FALSE))))OR(((('Lo', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((-1276999459, rt0.c2, rt0.c2)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON (+ ('/1{倧r0')) ORDER BY (~ (((rt0.c1)>>(rt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (+ ('/1{倧r0')) WHERE ((((((((((((t1.c0))>((rt0.c0))))AND((- (rt0.c1)))))OR(rt0.c2)))AND(((rt0.c2) IS FALSE))))OR(((('Lo', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((-1276999459, rt0.c2, rt0.c2)))))) ORDER BY (~ (((rt0.c1)>>(rt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt0 WHERE (((1.167873392E9) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((1.167873392E9) ISNULL)) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (((1.167873392E9) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((1.167873392E9) ISNULL)) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (((1.167873392E9) ISNULL));
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN (0.3575295958536451 IN ()) THEN rt1.c0 WHEN CAST(rt1.c0 AS REAL) THEN rt1.c1 COLLATE RTRIM WHEN (~ (rt1.c2)) THEN CAST(rt1.c1 AS REAL) ELSE rt1.c2 END) ORDER BY CASE rt0.c2  WHEN (((rt1.c0)) BETWEEN ((rt0.c0)) AND ((x''))) THEN ((rt1.c0)=(rt1.c2)) ELSE (~ (rt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (0.3575295958536451 IN ()) THEN rt1.c0 WHEN CAST(rt1.c0 AS REAL) THEN rt1.c1 COLLATE RTRIM WHEN (~ (rt1.c2)) THEN CAST(rt1.c1 AS REAL) ELSE rt1.c2 END) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE rt0.c2  WHEN (((rt1.c0)) BETWEEN ((rt0.c0)) AND ((x''))) THEN ((rt1.c0)=(rt1.c2)) ELSE (~ (rt1.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN (0.3575295958536451 IN ()) THEN rt1.c0 WHEN CAST(rt1.c0 AS REAL) THEN rt1.c1 COLLATE RTRIM WHEN (~ (rt1.c2)) THEN CAST(rt1.c1 AS REAL) ELSE rt1.c2 END) ORDER BY CASE rt0.c2  WHEN (((rt1.c0)) BETWEEN ((rt0.c0)) AND ((x''))) THEN ((rt1.c0)=(rt1.c2)) ELSE (~ (rt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (0.3575295958536451 IN ()) THEN rt1.c0 WHEN CAST(rt1.c0 AS REAL) THEN rt1.c1 COLLATE RTRIM WHEN (~ (rt1.c2)) THEN CAST(rt1.c1 AS REAL) ELSE rt1.c2 END) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE rt0.c2  WHEN (((rt1.c0)) BETWEEN ((rt0.c0)) AND ((x''))) THEN ((rt1.c0)=(rt1.c2)) ELSE (~ (rt1.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN (0.3575295958536451 IN ()) THEN rt1.c0 WHEN CAST(rt1.c0 AS REAL) THEN rt1.c1 COLLATE RTRIM WHEN (~ (rt1.c2)) THEN CAST(rt1.c1 AS REAL) ELSE rt1.c2 END) ORDER BY CASE rt0.c2  WHEN (((rt1.c0)) BETWEEN ((rt0.c0)) AND ((x''))) THEN ((rt1.c0)=(rt1.c2)) ELSE (~ (rt1.c0)) END  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((NULL)+(t1.c0))) IS TRUE)) ORDER BY ((((((t1.c0)AND(t1.c0)))AND(t1.c0))) NOT BETWEEN (((t1.c0) ISNULL)) AND (t1.c0 COLLATE RTRIM)) ASC, (~ (CASE WHEN t1.c0 THEN t1.c0 END)), (((t1.c0)) NOT BETWEEN ((0X55c91937)) AND ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.6857293722843939 ELSE NULL END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)+(t1.c0))) IS TRUE)) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c0)AND(t1.c0)))AND(t1.c0))) NOT BETWEEN (((t1.c0) ISNULL)) AND (t1.c0 COLLATE RTRIM)) ASC, (~ (CASE WHEN t1.c0 THEN t1.c0 END)), (((t1.c0)) NOT BETWEEN ((0x55c91937)) AND ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.6857293722843939 ELSE NULL END)))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((NULL)+(t1.c0))) IS TRUE)) ORDER BY ((((((t1.c0)AND(t1.c0)))AND(t1.c0))) NOT BETWEEN (((t1.c0) ISNULL)) AND (t1.c0 COLLATE RTRIM)) ASC, (~ (CASE WHEN t1.c0 THEN t1.c0 END)), (((t1.c0)) NOT BETWEEN ((0X55c91937)) AND ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.6857293722843939 ELSE NULL END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)+(t1.c0))) IS TRUE)) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c0)AND(t1.c0)))AND(t1.c0))) NOT BETWEEN (((t1.c0) ISNULL)) AND (t1.c0 COLLATE RTRIM)) ASC, (~ (CASE WHEN t1.c0 THEN t1.c0 END)), (((t1.c0)) NOT BETWEEN ((0x55c91937)) AND ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.6857293722843939 ELSE NULL END)))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((NULL)+(t1.c0))) IS TRUE)) ORDER BY ((((((t1.c0)AND(t1.c0)))AND(t1.c0))) NOT BETWEEN (((t1.c0) ISNULL)) AND (t1.c0 COLLATE RTRIM)) ASC, (~ (CASE WHEN t1.c0 THEN t1.c0 END)), (((t1.c0)) NOT BETWEEN ((0X55c91937)) AND ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.6857293722843939 ELSE NULL END)))  NULLS FIRST;
SELECT * FROM t1 CROSS JOIN rt0 ON (CASE WHEN t1.c0 THEN t1.c0 WHEN rt1.c2 THEN NULL WHEN rt0.c1 THEN NULL END IN (HEX(rt1.c0), ((rt0.c0) BETWEEN (rt0.c1) AND (x'')))) FULL OUTER JOIN rt1 ON (((rt0.c1 COLLATE NOCASE))<>((((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2))))) WHERE (CAST(rt1.c1 COLLATE BINARY AS BLOB)) ORDER BY ((((((((rt0.c1)OR(((t1.c0) BETWEEN (NULL) AND (rt0.c1)))))OR(rt0.c1)))AND(((rt1.c2) IS FALSE))))AND(TRIM(DISTINCT x'', rt1.c0)))  NULLS FIRST, CASE ((rt1.c2)<>(rt0.c2))  WHEN NULL THEN (((rt0.c0))>=((t1.c0))) ELSE (rt1.c0 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON (CASE WHEN t1.c0 THEN t1.c0 WHEN rt1.c2 THEN NULL WHEN rt0.c1 THEN NULL END IN (HEX(rt1.c0), ((rt0.c0) BETWEEN (rt0.c1) AND (x'')))) FULL OUTER JOIN rt1 ON (((rt0.c1 COLLATE NOCASE))!=((((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2))))) ORDER BY ((((((((rt0.c1)OR(((t1.c0) BETWEEN (NULL) AND (rt0.c1)))))OR(rt0.c1)))AND(((rt1.c2) IS FALSE))))AND(TRIM(DISTINCT x'', rt1.c0)))  NULLS FIRST, CASE ((rt1.c2)!=(rt0.c2))  WHEN NULL THEN (((rt0.c0))>=((t1.c0))) ELSE (rt1.c0 IN ()) END DESC  NULLS LAST);
SELECT * FROM t1 CROSS JOIN rt0 ON (CASE WHEN t1.c0 THEN t1.c0 WHEN rt1.c2 THEN NULL WHEN rt0.c1 THEN NULL END IN (HEX(rt1.c0), ((rt0.c0) BETWEEN (rt0.c1) AND (x'')))) FULL OUTER JOIN rt1 ON (((rt0.c1 COLLATE NOCASE))<>((((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2))))) WHERE (CAST(rt1.c1 COLLATE BINARY AS BLOB)) ORDER BY ((((((((rt0.c1)OR(((t1.c0) BETWEEN (NULL) AND (rt0.c1)))))OR(rt0.c1)))AND(((rt1.c2) IS FALSE))))AND(TRIM(DISTINCT x'', rt1.c0)))  NULLS FIRST, CASE ((rt1.c2)<>(rt0.c2))  WHEN NULL THEN (((rt0.c0))>=((t1.c0))) ELSE (rt1.c0 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON (CASE WHEN t1.c0 THEN t1.c0 WHEN rt1.c2 THEN NULL WHEN rt0.c1 THEN NULL END IN (HEX(rt1.c0), ((rt0.c0) BETWEEN (rt0.c1) AND (x'')))) FULL OUTER JOIN rt1 ON (((rt0.c1 COLLATE NOCASE))!=((((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2))))) ORDER BY ((((((((rt0.c1)OR(((t1.c0) BETWEEN (NULL) AND (rt0.c1)))))OR(rt0.c1)))AND(((rt1.c2) IS FALSE))))AND(TRIM(DISTINCT x'', rt1.c0)))  NULLS FIRST, CASE ((rt1.c2)!=(rt0.c2))  WHEN NULL THEN (((rt0.c0))>=((t1.c0))) ELSE (rt1.c0 IN ()) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN t1.c0 END THEN ((rt0.c2) IS FALSE) ELSE ((((NULL)OR(t1.c0)))AND(rt1.c2)) END) ORDER BY rt0.c0 DESC, ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c2 THEN rt0.c1 END)>>((((rt1.c1, rt0.c1, NULL))>((rt1.c1, NULL, rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c0 THEN t1.c0 END THEN ((rt0.c2) IS FALSE) ELSE ((((NULL)OR(t1.c0)))AND(rt1.c2)) END) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY rt0.c0 DESC, ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c2 THEN rt0.c1 END)>>((((rt1.c1, rt0.c1, NULL))>((rt1.c1, NULL, rt1.c2))))) ASC);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN t1.c0 END THEN ((rt0.c2) IS FALSE) ELSE ((((NULL)OR(t1.c0)))AND(rt1.c2)) END) ORDER BY rt0.c0 DESC, ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c2 THEN rt0.c1 END)>>((((rt1.c1, rt0.c1, NULL))>((rt1.c1, NULL, rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c0 THEN t1.c0 END THEN ((rt0.c2) IS FALSE) ELSE ((((NULL)OR(t1.c0)))AND(rt1.c2)) END) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY rt0.c0 DESC, ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c2 THEN rt0.c1 END)>>((((rt1.c1, rt0.c1, NULL))>((rt1.c1, NULL, rt1.c2))))) ASC);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN t1.c0 END THEN ((rt0.c2) IS FALSE) ELSE ((((NULL)OR(t1.c0)))AND(rt1.c2)) END) ORDER BY rt0.c0 DESC, ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c2 THEN rt0.c1 END)>>((((rt1.c1, rt0.c1, NULL))>((rt1.c1, NULL, rt1.c2))))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (0.5195648247300978);
SELECT SUM(count) FROM (SELECT ALL ((0.5195648247300978) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.5195648247300978);
SELECT SUM(count) FROM (SELECT ALL ((0.5195648247300978) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.5195648247300978);
SELECT * FROM t1 FULL OUTER JOIN rt1 ON ((((((((((rt1.c0) ISNULL))OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c1)GLOB(rt1.c2)))))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))AND(rt0.c2)) INNER JOIN rt0 ON ((((((((((rt1.c2)<>(t1.c0)))AND(CAST(t1.c0 AS INTEGER))))AND(CAST(rt1.c1 AS REAL))))AND(rt0.c0)))OR((((rt0.c2))>=((rt0.c2))))) WHERE ((((rt1.c1 IN (t1.c0)))<(CAST(rt1.c2 AS NUMERIC)))) ORDER BY (((rt1.c1))<>((rt1.c1))) COLLATE NOCASE ASC, (((((rt1.c2)) BETWEEN ((t1.c0)) AND ((x'')))) BETWEEN (LIKE(rt1.c1, rt1.c2, '!')) AND ((((t1.c0, t1.c0, rt0.c2))=((t1.c0, 502270549, t1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN (t1.c0)))<(CAST(rt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt1 ON ((((((((((rt1.c0) ISNULL))OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c1)GLOB(rt1.c2)))))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))AND(rt0.c2)) INNER JOIN rt0 ON ((((((((((rt1.c2)<>(t1.c0)))AND(CAST(t1.c0 AS INTEGER))))AND(CAST(rt1.c1 AS REAL))))AND(rt0.c0)))OR((((rt0.c2))>=((rt0.c2))))) ORDER BY (((rt1.c1))<>((rt1.c1))) COLLATE NOCASE ASC, (((((rt1.c2)) BETWEEN ((t1.c0)) AND ((x'')))) BETWEEN (LIKE(rt1.c1, rt1.c2, '!')) AND ((((t1.c0, t1.c0, rt0.c2))==((t1.c0, 502270549, t1.c0))))) ASC  NULLS FIRST);
SELECT * FROM t1 FULL OUTER JOIN rt1 ON ((((((((((rt1.c0) ISNULL))OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c1)GLOB(rt1.c2)))))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))AND(rt0.c2)) INNER JOIN rt0 ON ((((((((((rt1.c2)<>(t1.c0)))AND(CAST(t1.c0 AS INTEGER))))AND(CAST(rt1.c1 AS REAL))))AND(rt0.c0)))OR((((rt0.c2))>=((rt0.c2))))) WHERE ((((rt1.c1 IN (t1.c0)))<(CAST(rt1.c2 AS NUMERIC)))) ORDER BY (((rt1.c1))<>((rt1.c1))) COLLATE NOCASE ASC, (((((rt1.c2)) BETWEEN ((t1.c0)) AND ((x'')))) BETWEEN (LIKE(rt1.c1, rt1.c2, '!')) AND ((((t1.c0, t1.c0, rt0.c2))=((t1.c0, 502270549, t1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN (t1.c0)))<(CAST(rt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt1 ON ((((((((((rt1.c0) ISNULL))OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c1)GLOB(rt1.c2)))))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))AND(rt0.c2)) INNER JOIN rt0 ON ((((((((((rt1.c2)<>(t1.c0)))AND(CAST(t1.c0 AS INTEGER))))AND(CAST(rt1.c1 AS REAL))))AND(rt0.c0)))OR((((rt0.c2))>=((rt0.c2))))) ORDER BY (((rt1.c1))<>((rt1.c1))) COLLATE NOCASE ASC, (((((rt1.c2)) BETWEEN ((t1.c0)) AND ((x'')))) BETWEEN (LIKE(rt1.c1, rt1.c2, '!')) AND ((((t1.c0, t1.c0, rt0.c2))==((t1.c0, 502270549, t1.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0 COLLATE NOCASE)OR(UPPER(0.188993359287837))))AND(t1.c0))) ORDER BY (+ (((t1.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t1.c0 COLLATE NOCASE)OR(UPPER(0.188993359287837))))AND(t1.c0))) IS TRUE)  as count FROM t1 ORDER BY (+ (((t1.c0) ISNULL))) ASC);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0 COLLATE NOCASE)OR(UPPER(0.188993359287837))))AND(t1.c0))) ORDER BY (+ (((t1.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t1.c0 COLLATE NOCASE)OR(UPPER(0.188993359287837))))AND(t1.c0))) IS TRUE)  as count FROM t1 ORDER BY (+ (((t1.c0) ISNULL))) ASC);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0 COLLATE NOCASE)OR(UPPER(0.188993359287837))))AND(t1.c0))) ORDER BY (+ (((t1.c0) ISNULL))) ASC;
SELECT * FROM t1, rt0, rt1 WHERE (rt1.c0) ORDER BY (((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))OR(rt0.c1)))AND(t1.c0)) IN ()) DESC  NULLS LAST, ((CAST(rt1.c2 AS REAL)) BETWEEN (((rt1.c0)OR(rt0.c2))) AND (TYPEOF(DISTINCT rt1.c1))) ASC  NULLS LAST, (((((rt0.c2 IN (rt1.c0)))OR(((rt1.c2)/(rt0.c0)))))AND('-1570348455')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY (((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))OR(rt0.c1)))AND(t1.c0)) IN ()) DESC  NULLS LAST, ((CAST(rt1.c2 AS REAL)) BETWEEN (((rt1.c0)OR(rt0.c2))) AND (TYPEOF(DISTINCT rt1.c1))) ASC  NULLS LAST, (((((rt0.c2 IN (rt1.c0)))OR(((rt1.c2)/(rt0.c0)))))AND('-1570348455')) ASC  NULLS FIRST);
SELECT * FROM t1, rt0, rt1 WHERE (rt1.c0) ORDER BY (((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))OR(rt0.c1)))AND(t1.c0)) IN ()) DESC  NULLS LAST, ((CAST(rt1.c2 AS REAL)) BETWEEN (((rt1.c0)OR(rt0.c2))) AND (TYPEOF(DISTINCT rt1.c1))) ASC  NULLS LAST, (((((rt0.c2 IN (rt1.c0)))OR(((rt1.c2)/(rt0.c0)))))AND('-1570348455')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY (((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))OR(rt0.c1)))AND(t1.c0)) IN ()) DESC  NULLS LAST, ((CAST(rt1.c2 AS REAL)) BETWEEN (((rt1.c0)OR(rt0.c2))) AND (TYPEOF(DISTINCT rt1.c1))) ASC  NULLS LAST, (((((rt0.c2 IN (rt1.c0)))OR(((rt1.c2)/(rt0.c0)))))AND('-1570348455')) ASC  NULLS FIRST);
SELECT * FROM t1, rt0, rt1 WHERE (rt1.c0) ORDER BY (((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))OR(rt0.c1)))AND(t1.c0)) IN ()) DESC  NULLS LAST, ((CAST(rt1.c2 AS REAL)) BETWEEN (((rt1.c0)OR(rt0.c2))) AND (TYPEOF(DISTINCT rt1.c1))) ASC  NULLS LAST, (((((rt0.c2 IN (rt1.c0)))OR(((rt1.c2)/(rt0.c0)))))AND('-1570348455')) ASC  NULLS FIRST;
SELECT * FROM rt1 CROSS JOIN t1 ON LOWER(CAST(rt0.c1 AS BLOB)) CROSS JOIN rt0 ON (((((((t1.c0))!=((t1.c0))))AND((((rt1.c1, t1.c0, rt0.c2)) BETWEEN ((rt1.c2, rt1.c1, rt0.c2)) AND ((rt1.c1, rt1.c2, rt1.c2))))))AND(rt1.c1 COLLATE NOCASE)) WHERE (0.7187306537411701 COLLATE BINARY) ORDER BY (((~ (t1.c0))) NOT BETWEEN (((((rt1.c2)AND(rt0.c2)))OR(rt1.c2))) AND ('-1319198318' COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.7187306537411701 COLLATE BINARY) IS TRUE)  as count FROM rt1 CROSS JOIN t1 ON LOWER(CAST(rt0.c1 AS BLOB)) CROSS JOIN rt0 ON (((((((t1.c0))!=((t1.c0))))AND((((rt1.c1, t1.c0, rt0.c2)) BETWEEN ((rt1.c2, rt1.c1, rt0.c2)) AND ((rt1.c1, rt1.c2, rt1.c2))))))AND(rt1.c1 COLLATE NOCASE)) ORDER BY (((~ (t1.c0))) NOT BETWEEN (((((rt1.c2)AND(rt0.c2)))OR(rt1.c2))) AND ('-1319198318' COLLATE BINARY))  NULLS LAST);
SELECT * FROM rt1 CROSS JOIN t1 ON LOWER(CAST(rt0.c1 AS BLOB)) CROSS JOIN rt0 ON (((((((t1.c0))!=((t1.c0))))AND((((rt1.c1, t1.c0, rt0.c2)) BETWEEN ((rt1.c2, rt1.c1, rt0.c2)) AND ((rt1.c1, rt1.c2, rt1.c2))))))AND(rt1.c1 COLLATE NOCASE)) WHERE (0.7187306537411701 COLLATE BINARY) ORDER BY (((~ (t1.c0))) NOT BETWEEN (((((rt1.c2)AND(rt0.c2)))OR(rt1.c2))) AND ('-1319198318' COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.7187306537411701 COLLATE BINARY) IS TRUE)  as count FROM rt1 CROSS JOIN t1 ON LOWER(CAST(rt0.c1 AS BLOB)) CROSS JOIN rt0 ON (((((((t1.c0))!=((t1.c0))))AND((((rt1.c1, t1.c0, rt0.c2)) BETWEEN ((rt1.c2, rt1.c1, rt0.c2)) AND ((rt1.c1, rt1.c2, rt1.c2))))))AND(rt1.c1 COLLATE NOCASE)) ORDER BY (((~ (t1.c0))) NOT BETWEEN (((((rt1.c2)AND(rt0.c2)))OR(rt1.c2))) AND ('-1319198318' COLLATE BINARY))  NULLS LAST);
SELECT * FROM rt1 CROSS JOIN t1 ON LOWER(CAST(rt0.c1 AS BLOB)) CROSS JOIN rt0 ON (((((((t1.c0))!=((t1.c0))))AND((((rt1.c1, t1.c0, rt0.c2)) BETWEEN ((rt1.c2, rt1.c1, rt0.c2)) AND ((rt1.c1, rt1.c2, rt1.c2))))))AND(rt1.c1 COLLATE NOCASE)) WHERE (0.7187306537411701 COLLATE BINARY) ORDER BY (((~ (t1.c0))) NOT BETWEEN (((((rt1.c2)AND(rt0.c2)))OR(rt1.c2))) AND ('-1319198318' COLLATE BINARY))  NULLS LAST;
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON x'' WHERE ((((rt1.c2)>=(rt0.c0)) IN ())) ORDER BY (HEX(DISTINCT rt0.c1) IN (((rt1.c2) ISNULL), (- (rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)>=(rt0.c0)) IN ())) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON x'' ORDER BY (HEX(DISTINCT rt0.c1) IN (((rt1.c2) ISNULL), (- (rt1.c1)))) ASC  NULLS LAST);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON x'' WHERE ((((rt1.c2)>=(rt0.c0)) IN ())) ORDER BY (HEX(DISTINCT rt0.c1) IN (((rt1.c2) ISNULL), (- (rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)>=(rt0.c0)) IN ())) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON x'' ORDER BY (HEX(DISTINCT rt0.c1) IN (((rt1.c2) ISNULL), (- (rt1.c1)))) ASC  NULLS LAST);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON x'' WHERE ((((rt1.c2)>=(rt0.c0)) IN ())) ORDER BY (HEX(DISTINCT rt0.c1) IN (((rt1.c2) ISNULL), (- (rt1.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS NUMERIC));
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((((NOT (x'618b'))))==((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))) ORDER BY UNLIKELY(CASE NULL  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NOT (x'618b'))))=((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))) IS TRUE)  as count FROM t1, rt0 ORDER BY UNLIKELY(CASE NULL  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((((NOT (x'618b'))))==((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))) ORDER BY UNLIKELY(CASE NULL  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NOT (x'618b'))))=((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))) IS TRUE)  as count FROM t1, rt0 ORDER BY UNLIKELY(CASE NULL  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((((NOT (x'618b'))))==((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))) ORDER BY UNLIKELY(CASE NULL  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)  NULLS LAST;
SELECT ALL * FROM rt1, rt0, t1 WHERE ((((rt1.c1) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c1) NOTNULL) IN ())) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE ((((rt1.c1) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c1) NOTNULL) IN ())) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE ((((rt1.c1) NOTNULL) IN ()));
SELECT * FROM rt0 WHERE ((NOT (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (rt0.c0)));
SELECT * FROM rt1, t1 CROSS JOIN rt0 ON ((rt1.c1 COLLATE NOCASE) BETWEEN (((t1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))) AND (((rt1.c0) ISNULL))) WHERE (CAST(CAST(x'' AS TEXT) AS REAL)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((CAST(CAST(x'' AS TEXT) AS REAL)) IS TRUE)  as count FROM rt1, t1 CROSS JOIN rt0 ON ((rt1.c1 COLLATE NOCASE) BETWEEN (((t1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))) AND (((rt1.c0) ISNULL))) ORDER BY x'');
SELECT * FROM rt1, t1 CROSS JOIN rt0 ON ((rt1.c1 COLLATE NOCASE) BETWEEN (((t1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))) AND (((rt1.c0) ISNULL))) WHERE (CAST(CAST(x'' AS TEXT) AS REAL)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((CAST(CAST(x'' AS TEXT) AS REAL)) IS TRUE)  as count FROM rt1, t1 CROSS JOIN rt0 ON ((rt1.c1 COLLATE NOCASE) BETWEEN (((t1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))) AND (((rt1.c0) ISNULL))) ORDER BY x'');
SELECT * FROM rt1, t1 CROSS JOIN rt0 ON ((rt1.c1 COLLATE NOCASE) BETWEEN (((t1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))) AND (((rt1.c0) ISNULL))) WHERE (CAST(CAST(x'' AS TEXT) AS REAL)) ORDER BY x'';
SELECT ALL * FROM t1, rt1 WHERE (CASE rt1.c1  WHEN ((rt1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0)IS(rt1.c2)) WHEN rt1.c0 THEN ((rt1.c2) BETWEEN (rt1.c0) AND (t1.c0)) WHEN (((rt1.c2, t1.c0, t1.c0))>=((rt1.c1, rt1.c1, rt1.c2))) THEN rt1.c2 WHEN (t1.c0 IN ()) THEN NULL WHEN CAST(rt1.c1 AS BLOB) THEN TIME(rt1.c0, rt1.c1, rt1.c2) ELSE rt1.c1 END) ORDER BY ((((((rt1.c0)AND(t1.c0)))AND(rt1.c2))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c1  WHEN ((rt1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0)IS(rt1.c2)) WHEN rt1.c0 THEN ((rt1.c2) BETWEEN (rt1.c0) AND (t1.c0)) WHEN (((rt1.c2, t1.c0, t1.c0))>=((rt1.c1, rt1.c1, rt1.c2))) THEN rt1.c2 WHEN (t1.c0 IN ()) THEN NULL WHEN CAST(rt1.c1 AS BLOB) THEN TIME(rt1.c0, rt1.c1, rt1.c2) ELSE rt1.c1 END) IS TRUE)  as count FROM t1, rt1 ORDER BY ((((((rt1.c0)AND(t1.c0)))AND(rt1.c2))) NOT NULL) DESC);
SELECT ALL * FROM t1, rt1 WHERE (CASE rt1.c1  WHEN ((rt1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0)IS(rt1.c2)) WHEN rt1.c0 THEN ((rt1.c2) BETWEEN (rt1.c0) AND (t1.c0)) WHEN (((rt1.c2, t1.c0, t1.c0))>=((rt1.c1, rt1.c1, rt1.c2))) THEN rt1.c2 WHEN (t1.c0 IN ()) THEN NULL WHEN CAST(rt1.c1 AS BLOB) THEN TIME(rt1.c0, rt1.c1, rt1.c2) ELSE rt1.c1 END) ORDER BY ((((((rt1.c0)AND(t1.c0)))AND(rt1.c2))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c1  WHEN ((rt1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0)IS(rt1.c2)) WHEN rt1.c0 THEN ((rt1.c2) BETWEEN (rt1.c0) AND (t1.c0)) WHEN (((rt1.c2, t1.c0, t1.c0))>=((rt1.c1, rt1.c1, rt1.c2))) THEN rt1.c2 WHEN (t1.c0 IN ()) THEN NULL WHEN CAST(rt1.c1 AS BLOB) THEN TIME(rt1.c0, rt1.c1, rt1.c2) ELSE rt1.c1 END) IS TRUE)  as count FROM t1, rt1 ORDER BY ((((((rt1.c0)AND(t1.c0)))AND(rt1.c2))) NOT NULL) DESC);
SELECT ALL * FROM t1, rt1 WHERE (CASE rt1.c1  WHEN ((rt1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0)IS(rt1.c2)) WHEN rt1.c0 THEN ((rt1.c2) BETWEEN (rt1.c0) AND (t1.c0)) WHEN (((rt1.c2, t1.c0, t1.c0))>=((rt1.c1, rt1.c1, rt1.c2))) THEN rt1.c2 WHEN (t1.c0 IN ()) THEN NULL WHEN CAST(rt1.c1 AS BLOB) THEN TIME(rt1.c0, rt1.c1, rt1.c2) ELSE rt1.c1 END) ORDER BY ((((((rt1.c0)AND(t1.c0)))AND(rt1.c2))) NOT NULL) DESC;
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((UNLIKELY(rt0.c0)) BETWEEN (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2))) AND (TYPEOF(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(rt0.c0)) BETWEEN (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2))) AND (TYPEOF(DISTINCT rt0.c2)))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((UNLIKELY(rt0.c0)) BETWEEN (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2))) AND (TYPEOF(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(rt0.c0)) BETWEEN (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2))) AND (TYPEOF(DISTINCT rt0.c2)))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((UNLIKELY(rt0.c0)) BETWEEN (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2))) AND (TYPEOF(DISTINCT rt0.c2))));
SELECT ALL * FROM t1 WHERE (GLOB((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, NULL, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))), t1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((GLOB((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, NULL, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))), t1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (GLOB((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, NULL, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))), t1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((GLOB((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, NULL, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))), t1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (GLOB((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, NULL, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))), t1.c0 COLLATE NOCASE));
SELECT * FROM t1 WHERE (((((t1.c0)LIKE(t1.c0)))==((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0)))))) ORDER BY (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))>((((t1.c0)LIKE(t1.c0)))))  NULLS FIRST, (((NOT (t1.c0)))||((t1.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)LIKE(t1.c0)))=((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))>((((t1.c0)LIKE(t1.c0)))))  NULLS FIRST, (((NOT (t1.c0)))||((t1.c0 IN ()))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (((((t1.c0)LIKE(t1.c0)))==((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0)))))) ORDER BY (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))>((((t1.c0)LIKE(t1.c0)))))  NULLS FIRST, (((NOT (t1.c0)))||((t1.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)LIKE(t1.c0)))=((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))>((((t1.c0)LIKE(t1.c0)))))  NULLS FIRST, (((NOT (t1.c0)))||((t1.c0 IN ()))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (((((t1.c0)LIKE(t1.c0)))==((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0)))))) ORDER BY (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))>((((t1.c0)LIKE(t1.c0)))))  NULLS FIRST, (((NOT (t1.c0)))||((t1.c0 IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1, t1 WHERE (((((t1.c0) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE (((((t1.c0) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE (((((t1.c0) NOT NULL)) IS FALSE));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((NULL)!=(rt0.c1)) AS INTEGER)) ORDER BY ((CAST(rt0.c0 AS TEXT)) ISNULL) DESC  NULLS FIRST, CASE x'443727b9'  WHEN (NOT (rt0.c2)) THEN ((rt0.c2)<=(rt0.c2)) ELSE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) END DESC  NULLS LAST, (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))+(CAST(0.341536379933413 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL)<>(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS TEXT)) ISNULL) DESC  NULLS FIRST, CASE x'443727b9'  WHEN (NOT (rt0.c2)) THEN ((rt0.c2)<=(rt0.c2)) ELSE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) END DESC  NULLS LAST, (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))+(CAST(0.341536379933413 AS TEXT))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((NULL)!=(rt0.c1)) AS INTEGER)) ORDER BY ((CAST(rt0.c0 AS TEXT)) ISNULL) DESC  NULLS FIRST, CASE x'443727b9'  WHEN (NOT (rt0.c2)) THEN ((rt0.c2)<=(rt0.c2)) ELSE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) END DESC  NULLS LAST, (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))+(CAST(0.341536379933413 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL)<>(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS TEXT)) ISNULL) DESC  NULLS FIRST, CASE x'443727b9'  WHEN (NOT (rt0.c2)) THEN ((rt0.c2)<=(rt0.c2)) ELSE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) END DESC  NULLS LAST, (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))+(CAST(0.341536379933413 AS TEXT))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((NULL)!=(rt0.c1)) AS INTEGER)) ORDER BY ((CAST(rt0.c0 AS TEXT)) ISNULL) DESC  NULLS FIRST, CASE x'443727b9'  WHEN (NOT (rt0.c2)) THEN ((rt0.c2)<=(rt0.c2)) ELSE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) END DESC  NULLS LAST, (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))+(CAST(0.341536379933413 AS TEXT)));
SELECT * FROM rt0, t1 WHERE (MIN((((t1.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, t1.c0, rt0.c1)) AND ((t1.c0, rt0.c2, rt0.c2))), ((((((((((((rt0.c0)AND(rt0.c2)))AND(x'')))OR(rt0.c0)))AND(t1.c0)))OR(rt0.c0)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((MIN((((t1.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, t1.c0, rt0.c1)) AND ((t1.c0, rt0.c2, rt0.c2))), ((((((((((((rt0.c0)AND(rt0.c2)))AND(x'')))OR(rt0.c0)))AND(t1.c0)))OR(rt0.c0)))OR(rt0.c1)))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (MIN((((t1.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, t1.c0, rt0.c1)) AND ((t1.c0, rt0.c2, rt0.c2))), ((((((((((((rt0.c0)AND(rt0.c2)))AND(x'')))OR(rt0.c0)))AND(t1.c0)))OR(rt0.c0)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((MIN((((t1.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, t1.c0, rt0.c1)) AND ((t1.c0, rt0.c2, rt0.c2))), ((((((((((((rt0.c0)AND(rt0.c2)))AND(x'')))OR(rt0.c0)))AND(t1.c0)))OR(rt0.c0)))OR(rt0.c1)))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (MIN((((t1.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, t1.c0, rt0.c1)) AND ((t1.c0, rt0.c2, rt0.c2))), ((((((((((((rt0.c0)AND(rt0.c2)))AND(x'')))OR(rt0.c0)))AND(t1.c0)))OR(rt0.c0)))OR(rt0.c1))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (x'');
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt0.c0) ORDER BY rt0.c2 DESC  NULLS FIRST, ((CAST(rt1.c0 AS REAL)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt0.c2 DESC  NULLS FIRST, ((CAST(rt1.c0 AS REAL)) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt0.c0) ORDER BY rt0.c2 DESC  NULLS FIRST, ((CAST(rt1.c0 AS REAL)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt0.c2 DESC  NULLS FIRST, ((CAST(rt1.c0 AS REAL)) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt0.c0) ORDER BY rt0.c2 DESC  NULLS FIRST, ((CAST(rt1.c0 AS REAL)) ISNULL)  NULLS LAST;
SELECT COUNT(*) FROM t1, rt0 WHERE ((((~ (NULL))) BETWEEN (rt0.c0) AND (((rt0.c2)<=(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (NULL))) BETWEEN (rt0.c0) AND (((rt0.c2)<=(t1.c0))))) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE ((((~ (NULL))) BETWEEN (rt0.c0) AND (((rt0.c2)<=(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (NULL))) BETWEEN (rt0.c0) AND (((rt0.c2)<=(t1.c0))))) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE ((((~ (NULL))) BETWEEN (rt0.c0) AND (((rt0.c2)<=(t1.c0)))));
SELECT ALL COUNT(*) FROM rt1 INDEXED BY i93, t1, rt0 WHERE (CASE ((rt0.c1)+(rt0.c1))  WHEN rt0.c1 THEN x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1)+(rt0.c1))  WHEN rt0.c1 THEN x'' END) IS TRUE)  as count FROM rt1 INDEXED BY i93, t1, rt0);
SELECT ALL COUNT(*) FROM rt1 INDEXED BY i93, t1, rt0 WHERE (CASE ((rt0.c1)+(rt0.c1))  WHEN rt0.c1 THEN x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1)+(rt0.c1))  WHEN rt0.c1 THEN x'' END) IS TRUE)  as count FROM rt1 INDEXED BY i93, t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (HEX((NOT (rt0.c0)))) ORDER BY (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)), ((NULL) ISNULL), (((rt0.c1)) BETWEEN ((x'4bda')) AND ((rt0.c1)))))!=((((rt0.c1) IS TRUE), ((rt0.c0)>>(t1.c0)), CASE WHEN rt0.c1 THEN rt0.c0 ELSE 0.531969421257501 END))) ASC  NULLS FIRST, '2041912682' DESC  NULLS FIRST, ((t1.c0)<(t1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX((NOT (rt0.c0)))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)), ((NULL) ISNULL), (((rt0.c1)) BETWEEN ((x'4bda')) AND ((rt0.c1)))))<>((((rt0.c1) IS TRUE), ((rt0.c0)>>(t1.c0)), CASE WHEN rt0.c1 THEN rt0.c0 ELSE 0.531969421257501 END))) ASC  NULLS FIRST, '2041912682' DESC  NULLS FIRST, ((t1.c0)<(t1.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM t1, rt0 WHERE (HEX((NOT (rt0.c0)))) ORDER BY (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)), ((NULL) ISNULL), (((rt0.c1)) BETWEEN ((x'4bda')) AND ((rt0.c1)))))!=((((rt0.c1) IS TRUE), ((rt0.c0)>>(t1.c0)), CASE WHEN rt0.c1 THEN rt0.c0 ELSE 0.531969421257501 END))) ASC  NULLS FIRST, '2041912682' DESC  NULLS FIRST, ((t1.c0)<(t1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX((NOT (rt0.c0)))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)), ((NULL) ISNULL), (((rt0.c1)) BETWEEN ((x'4bda')) AND ((rt0.c1)))))<>((((rt0.c1) IS TRUE), ((rt0.c0)>>(t1.c0)), CASE WHEN rt0.c1 THEN rt0.c0 ELSE 0.531969421257501 END))) ASC  NULLS FIRST, '2041912682' DESC  NULLS FIRST, ((t1.c0)<(t1.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM t1, rt0 WHERE (HEX((NOT (rt0.c0)))) ORDER BY (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)), ((NULL) ISNULL), (((rt0.c1)) BETWEEN ((x'4bda')) AND ((rt0.c1)))))!=((((rt0.c1) IS TRUE), ((rt0.c0)>>(t1.c0)), CASE WHEN rt0.c1 THEN rt0.c0 ELSE 0.531969421257501 END))) ASC  NULLS FIRST, '2041912682' DESC  NULLS FIRST, ((t1.c0)<(t1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE ((+ (CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE ((+ (CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE ((+ (CAST(rt0.c0 AS INTEGER))));
SELECT * FROM t1, rt1, rt0 WHERE ((((((t1.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt1.c0, NULL, NULL)) AND ((rt1.c2, 0.23200853718022885, rt0.c0)))) NOT NULL)) ORDER BY ((((((rt0.c1) IS TRUE))OR(((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c2)AND(rt0.c1)))), rt1.c0 ASC, ((((t1.c0)<=(rt0.c1))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt1.c0, NULL, NULL)) AND ((rt1.c2, 0.23200853718022885, rt0.c0)))) NOT NULL)) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY ((((((rt0.c1) IS TRUE))OR(((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c2)AND(rt0.c1)))), rt1.c0 ASC, ((((t1.c0)<=(rt0.c1))) ISNULL) DESC);
SELECT * FROM t1, rt1, rt0 WHERE ((((((t1.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt1.c0, NULL, NULL)) AND ((rt1.c2, 0.23200853718022885, rt0.c0)))) NOT NULL)) ORDER BY ((((((rt0.c1) IS TRUE))OR(((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c2)AND(rt0.c1)))), rt1.c0 ASC, ((((t1.c0)<=(rt0.c1))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt1.c0, NULL, NULL)) AND ((rt1.c2, 0.23200853718022885, rt0.c0)))) NOT NULL)) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY ((((((rt0.c1) IS TRUE))OR(((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c2)AND(rt0.c1)))), rt1.c0 ASC, ((((t1.c0)<=(rt0.c1))) ISNULL) DESC);
SELECT * FROM t1, rt1, rt0 WHERE ((((((t1.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt1.c0, NULL, NULL)) AND ((rt1.c2, 0.23200853718022885, rt0.c0)))) NOT NULL)) ORDER BY ((((((rt0.c1) IS TRUE))OR(((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c2)AND(rt0.c1)))), rt1.c0 ASC, ((((t1.c0)<=(rt0.c1))) ISNULL) DESC;
SELECT ALL * FROM rt1, t1, rt0 WHERE ((NOT (((rt0.c0)<=(rt0.c1))))) ORDER BY ((CAST(rt1.c2 AS NUMERIC))<<((rt1.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)<=(rt0.c1))))) IS TRUE)  as count FROM rt1 NOT INDEXED, t1, rt0 ORDER BY ((CAST(rt1.c2 AS NUMERIC))<<((rt1.c0 IN ()))) ASC);
SELECT ALL * FROM rt1, t1, rt0 WHERE ((NOT (((rt0.c0)<=(rt0.c1))))) ORDER BY ((CAST(rt1.c2 AS NUMERIC))<<((rt1.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)<=(rt0.c1))))) IS TRUE)  as count FROM rt1 NOT INDEXED, t1, rt0 ORDER BY ((CAST(rt1.c2 AS NUMERIC))<<((rt1.c0 IN ()))) ASC);
SELECT ALL * FROM rt1, t1, rt0 WHERE ((NOT (((rt0.c0)<=(rt0.c1))))) ORDER BY ((CAST(rt1.c2 AS NUMERIC))<<((rt1.c0 IN ()))) ASC;
SELECT ALL * FROM rt0, t1 CROSS JOIN rt1 ON CASE WHEN ((rt0.c0)&(rt0.c1)) THEN ((((t1.c0)AND(rt1.c0)))OR(rt0.c0)) WHEN (((rt1.c1, rt0.c2, rt0.c0))<=((rt1.c1, rt1.c0, rt1.c0))) THEN CASE WHEN rt0.c0 THEN t1.c0 WHEN rt1.c2 THEN '-1276999459' WHEN t1.c0 THEN rt1.c2 END WHEN NULL THEN (((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))) WHEN LOWER(rt1.c2) THEN ((rt1.c2) NOT NULL) WHEN CAST(rt0.c2 AS BLOB) THEN ((x'')>(rt1.c0)) END WHERE (((rt0.c1 COLLATE RTRIM) BETWEEN (CASE WHEN rt0.c0 THEN rt1.c0 WHEN '' THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c0 END) AND (((rt0.c0)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) BETWEEN (CASE WHEN rt0.c0 THEN rt1.c0 WHEN '' THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c0 END) AND (((rt0.c0)*(rt0.c0))))) IS TRUE)  as count FROM rt0, t1 CROSS JOIN rt1 ON CASE WHEN ((rt0.c0)&(rt0.c1)) THEN ((((t1.c0)AND(rt1.c0)))OR(rt0.c0)) WHEN (((rt1.c1, rt0.c2, rt0.c0))<=((rt1.c1, rt1.c0, rt1.c0))) THEN CASE WHEN rt0.c0 THEN t1.c0 WHEN rt1.c2 THEN '-1276999459' WHEN t1.c0 THEN rt1.c2 END WHEN NULL THEN (((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))) WHEN LOWER(rt1.c2) THEN ((rt1.c2) NOT NULL) WHEN CAST(rt0.c2 AS BLOB) THEN ((x'')>(rt1.c0)) END);
SELECT ALL * FROM rt0, t1 CROSS JOIN rt1 ON CASE WHEN ((rt0.c0)&(rt0.c1)) THEN ((((t1.c0)AND(rt1.c0)))OR(rt0.c0)) WHEN (((rt1.c1, rt0.c2, rt0.c0))<=((rt1.c1, rt1.c0, rt1.c0))) THEN CASE WHEN rt0.c0 THEN t1.c0 WHEN rt1.c2 THEN '-1276999459' WHEN t1.c0 THEN rt1.c2 END WHEN NULL THEN (((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))) WHEN LOWER(rt1.c2) THEN ((rt1.c2) NOT NULL) WHEN CAST(rt0.c2 AS BLOB) THEN ((x'')>(rt1.c0)) END WHERE (((rt0.c1 COLLATE RTRIM) BETWEEN (CASE WHEN rt0.c0 THEN rt1.c0 WHEN '' THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c0 END) AND (((rt0.c0)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) BETWEEN (CASE WHEN rt0.c0 THEN rt1.c0 WHEN '' THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c0 END) AND (((rt0.c0)*(rt0.c0))))) IS TRUE)  as count FROM rt0, t1 CROSS JOIN rt1 ON CASE WHEN ((rt0.c0)&(rt0.c1)) THEN ((((t1.c0)AND(rt1.c0)))OR(rt0.c0)) WHEN (((rt1.c1, rt0.c2, rt0.c0))<=((rt1.c1, rt1.c0, rt1.c0))) THEN CASE WHEN rt0.c0 THEN t1.c0 WHEN rt1.c2 THEN '-1276999459' WHEN t1.c0 THEN rt1.c2 END WHEN NULL THEN (((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))) WHEN LOWER(rt1.c2) THEN ((rt1.c2) NOT NULL) WHEN CAST(rt0.c2 AS BLOB) THEN ((x'')>(rt1.c0)) END);
SELECT ALL * FROM rt0, t1 CROSS JOIN rt1 ON CASE WHEN ((rt0.c0)&(rt0.c1)) THEN ((((t1.c0)AND(rt1.c0)))OR(rt0.c0)) WHEN (((rt1.c1, rt0.c2, rt0.c0))<=((rt1.c1, rt1.c0, rt1.c0))) THEN CASE WHEN rt0.c0 THEN t1.c0 WHEN rt1.c2 THEN '-1276999459' WHEN t1.c0 THEN rt1.c2 END WHEN NULL THEN (((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))) WHEN LOWER(rt1.c2) THEN ((rt1.c2) NOT NULL) WHEN CAST(rt0.c2 AS BLOB) THEN ((x'')>(rt1.c0)) END WHERE (((rt0.c1 COLLATE RTRIM) BETWEEN (CASE WHEN rt0.c0 THEN rt1.c0 WHEN '' THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c0 END) AND (((rt0.c0)*(rt0.c0)))));
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0))<((x'', x'', t1.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((t1.c0, t1.c0, t1.c0))<((x'', x'', t1.c0)))) IS FALSE)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0))<((x'', x'', t1.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((t1.c0, t1.c0, t1.c0))<((x'', x'', t1.c0)))) IS FALSE)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0, t1.c0, t1.c0))<((x'', x'', t1.c0)))) IS FALSE));
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN '' ELSE rt0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN '' ELSE rt0.c1 END AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN '' ELSE rt0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN '' ELSE rt0.c1 END AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN '' ELSE rt0.c1 END AS REAL));
SELECT COUNT(*) FROM rt0, rt1 NOT INDEXED, t1 WHERE (((((((t1.c0)AND(x'')))OR(rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((t1.c0)AND(x'')))OR(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT COUNT(*) FROM rt0, rt1 NOT INDEXED, t1 WHERE (((((((t1.c0)AND(x'')))OR(rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((t1.c0)AND(x'')))OR(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT COUNT(*) FROM rt0, rt1 NOT INDEXED, t1 WHERE (((((((t1.c0)AND(x'')))OR(rt0.c0))) NOTNULL));
SELECT * FROM t1, rt1 WHERE (((((x'1c70')AND(((rt1.c0)IS NOT(rt1.c2)))))OR(((t1.c0)OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'1c70')AND(((rt1.c0)IS NOT(rt1.c2)))))OR(((t1.c0)OR(rt1.c2))))) IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE (((((x'1c70')AND(((rt1.c0)IS NOT(rt1.c2)))))OR(((t1.c0)OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'1c70')AND(((rt1.c0)IS NOT(rt1.c2)))))OR(((t1.c0)OR(rt1.c2))))) IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE (((((x'1c70')AND(((rt1.c0)IS NOT(rt1.c2)))))OR(((t1.c0)OR(rt1.c2)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)||(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)||(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)||(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)||(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)||(rt0.c2)) IN ()));
SELECT * FROM t1, rt1 WHERE (((((rt1.c0)AND(rt1.c1)))GLOB(((t1.c0) BETWEEN (t1.c0) AND (NULL))))) ORDER BY (((((- (rt1.c0)))OR(CASE rt1.c1  WHEN NULL THEN rt1.c1 ELSE rt1.c1 END)))OR(CAST(rt1.c0 AS REAL))) DESC, ((((0.34586245554182726) IS FALSE))>=((+ (t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)AND(rt1.c1)))GLOB(((t1.c0) BETWEEN (t1.c0) AND (NULL))))) IS TRUE)  as count FROM t1, rt1 ORDER BY (((((- (rt1.c0)))OR(CASE rt1.c1  WHEN NULL THEN rt1.c1 ELSE rt1.c1 END)))OR(CAST(rt1.c0 AS REAL))) DESC, ((((0.34586245554182726) IS FALSE))>=((+ (t1.c0)))) DESC);
SELECT * FROM t1, rt1 WHERE (((((rt1.c0)AND(rt1.c1)))GLOB(((t1.c0) BETWEEN (t1.c0) AND (NULL))))) ORDER BY (((((- (rt1.c0)))OR(CASE rt1.c1  WHEN NULL THEN rt1.c1 ELSE rt1.c1 END)))OR(CAST(rt1.c0 AS REAL))) DESC, ((((0.34586245554182726) IS FALSE))>=((+ (t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)AND(rt1.c1)))GLOB(((t1.c0) BETWEEN (t1.c0) AND (NULL))))) IS TRUE)  as count FROM t1, rt1 ORDER BY (((((- (rt1.c0)))OR(CASE rt1.c1  WHEN NULL THEN rt1.c1 ELSE rt1.c1 END)))OR(CAST(rt1.c0 AS REAL))) DESC, ((((0.34586245554182726) IS FALSE))>=((+ (t1.c0)))) DESC);
SELECT * FROM t1, rt1 WHERE (((((rt1.c0)AND(rt1.c1)))GLOB(((t1.c0) BETWEEN (t1.c0) AND (NULL))))) ORDER BY (((((- (rt1.c0)))OR(CASE rt1.c1  WHEN NULL THEN rt1.c1 ELSE rt1.c1 END)))OR(CAST(rt1.c0 AS REAL))) DESC, ((((0.34586245554182726) IS FALSE))>=((+ (t1.c0)))) DESC;
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (CASE (rt0.c0 IN (rt0.c2))  WHEN (NOT ('0.46023846670258683')) THEN (~ (rt0.c0)) END) ORDER BY SQLITE_VERSION()  NULLS LAST, ((0.7260909452381932)<=((t1.c0 IN (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c0 IN (rt0.c2))  WHEN (NOT ('0.46023846670258683')) THEN (~ (rt0.c0)) END) IS TRUE)  as count FROM t1, rt0 ORDER BY SQLITE_VERSION()  NULLS LAST, ((0.7260909452381932)<=((t1.c0 IN (rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (CASE (rt0.c0 IN (rt0.c2))  WHEN (NOT ('0.46023846670258683')) THEN (~ (rt0.c0)) END) ORDER BY SQLITE_VERSION()  NULLS LAST, ((0.7260909452381932)<=((t1.c0 IN (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c0 IN (rt0.c2))  WHEN (NOT ('0.46023846670258683')) THEN (~ (rt0.c0)) END) IS TRUE)  as count FROM t1, rt0 ORDER BY SQLITE_VERSION()  NULLS LAST, ((0.7260909452381932)<=((t1.c0 IN (rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (CASE (rt0.c0 IN (rt0.c2))  WHEN (NOT ('0.46023846670258683')) THEN (~ (rt0.c0)) END) ORDER BY SQLITE_VERSION()  NULLS LAST, ((0.7260909452381932)<=((t1.c0 IN (rt0.c1)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t1 ON (CASE t1.c0  WHEN 0.3621326520487127 THEN rt1.c1 END IN ()) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t1 ON (CASE t1.c0  WHEN 0.3621326520487127 THEN rt1.c1 END IN ()));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t1 ON (CASE t1.c0  WHEN 0.3621326520487127 THEN rt1.c1 END IN ()) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t1 ON (CASE t1.c0  WHEN 0.3621326520487127 THEN rt1.c1 END IN ()));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t1 ON (CASE t1.c0  WHEN 0.3621326520487127 THEN rt1.c1 END IN ()) WHERE (rt1.c0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c1) AND (NULL))) ORDER BY rt0.c2 DESC, CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (rt0.c1) AND (NULL))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC, CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END AS INTEGER) DESC);
SELECT ALL * FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c1) AND (NULL))) ORDER BY rt0.c2 DESC, CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (rt0.c1) AND (NULL))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC, CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END AS INTEGER) DESC);
SELECT ALL * FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c1) AND (NULL))) ORDER BY rt0.c2 DESC, CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END AS INTEGER) DESC;
SELECT COUNT(*) FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (NULL);
SELECT ALL * FROM rt0, t1, rt1 WHERE (CASE ((rt1.c0) NOT BETWEEN (x'') AND (rt1.c1))  WHEN ((((rt0.c2)OR(rt1.c1)))OR(0.49730795626696345)) THEN PRINTF(rt0.c1) ELSE ((rt0.c0)GLOB(rt0.c0)) END) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c0) NOT BETWEEN (x'') AND (rt1.c1))  WHEN ((((rt0.c2)OR(rt1.c1)))OR(0.49730795626696345)) THEN PRINTF(rt0.c1) ELSE ((rt0.c0)GLOB(rt0.c0)) END) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY rt1.c2 DESC  NULLS LAST);
SELECT ALL * FROM rt0, t1, rt1 WHERE (CASE ((rt1.c0) NOT BETWEEN (x'') AND (rt1.c1))  WHEN ((((rt0.c2)OR(rt1.c1)))OR(0.49730795626696345)) THEN PRINTF(rt0.c1) ELSE ((rt0.c0)GLOB(rt0.c0)) END) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c0) NOT BETWEEN (x'') AND (rt1.c1))  WHEN ((((rt0.c2)OR(rt1.c1)))OR(0.49730795626696345)) THEN PRINTF(rt0.c1) ELSE ((rt0.c0)GLOB(rt0.c0)) END) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY rt1.c2 DESC  NULLS LAST);
SELECT ALL * FROM rt0, t1, rt1 WHERE (CASE ((rt1.c0) NOT BETWEEN (x'') AND (rt1.c1))  WHEN ((((rt0.c2)OR(rt1.c1)))OR(0.49730795626696345)) THEN PRINTF(rt0.c1) ELSE ((rt0.c0)GLOB(rt0.c0)) END) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT * FROM rt0 NATURAL JOIN rt1 WHERE (((CAST(0.7877130537857764 AS TEXT))|((rt0.c2 IN ())))) ORDER BY NULL  NULLS LAST, ((rt1.c2) IS FALSE) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.7877130537857764 AS TEXT))|((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1 ORDER BY NULL  NULLS LAST, ((rt1.c2) IS FALSE) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM rt0 NATURAL JOIN rt1 WHERE (((CAST(0.7877130537857764 AS TEXT))|((rt0.c2 IN ())))) ORDER BY NULL  NULLS LAST, ((rt1.c2) IS FALSE) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.7877130537857764 AS TEXT))|((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1 ORDER BY NULL  NULLS LAST, ((rt1.c2) IS FALSE) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM rt0 NATURAL JOIN rt1 WHERE (((CAST(0.7877130537857764 AS TEXT))|((rt0.c2 IN ())))) ORDER BY NULL  NULLS LAST, ((rt1.c2) IS FALSE) COLLATE NOCASE DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (x'83db') ORDER BY (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))>=(((t1.c0 IN ())))) ASC  NULLS LAST, ((((((((((((((t1.c0)<>(t1.c0)))AND(CAST(t1.c0 AS TEXT))))AND(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))))AND((~ (t1.c0)))))AND('.')))OR((t1.c0 IN ()))))AND(((t1.c0) NOTNULL))) DESC, HEX(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'83db') IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))>=(((t1.c0 IN ())))) ASC  NULLS LAST, ((((((((((((((t1.c0)<>(t1.c0)))AND(CAST(t1.c0 AS TEXT))))AND(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))))AND((~ (t1.c0)))))AND('.')))OR((t1.c0 IN ()))))AND(((t1.c0) NOTNULL))) DESC, HEX(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (x'83db') ORDER BY (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))>=(((t1.c0 IN ())))) ASC  NULLS LAST, ((((((((((((((t1.c0)<>(t1.c0)))AND(CAST(t1.c0 AS TEXT))))AND(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))))AND((~ (t1.c0)))))AND('.')))OR((t1.c0 IN ()))))AND(((t1.c0) NOTNULL))) DESC, HEX(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'83db') IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))>=(((t1.c0 IN ())))) ASC  NULLS LAST, ((((((((((((((t1.c0)<>(t1.c0)))AND(CAST(t1.c0 AS TEXT))))AND(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))))AND((~ (t1.c0)))))AND('.')))OR((t1.c0 IN ()))))AND(((t1.c0) NOTNULL))) DESC, HEX(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (x'83db') ORDER BY (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))>=(((t1.c0 IN ())))) ASC  NULLS LAST, ((((((((((((((t1.c0)<>(t1.c0)))AND(CAST(t1.c0 AS TEXT))))AND(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))))AND((~ (t1.c0)))))AND('.')))OR((t1.c0 IN ()))))AND(((t1.c0) NOTNULL))) DESC, HEX(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0)GLOB(t1.c0)) IN ())) ORDER BY (((((t1.c0 IN (t1.c0, t1.c0)))OR(t1.c0 COLLATE BINARY)))OR((t1.c0 IN ()))) DESC, t1.c0  NULLS LAST, ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)GLOB(t1.c0)) IN ())) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0 IN (t1.c0, t1.c0)))OR(t1.c0 COLLATE BINARY)))OR((t1.c0 IN ()))) DESC, t1.c0  NULLS LAST, ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0)GLOB(t1.c0)) IN ())) ORDER BY (((((t1.c0 IN (t1.c0, t1.c0)))OR(t1.c0 COLLATE BINARY)))OR((t1.c0 IN ()))) DESC, t1.c0  NULLS LAST, ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)GLOB(t1.c0)) IN ())) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0 IN (t1.c0, t1.c0)))OR(t1.c0 COLLATE BINARY)))OR((t1.c0 IN ()))) DESC, t1.c0  NULLS LAST, ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0)GLOB(t1.c0)) IN ())) ORDER BY (((((t1.c0 IN (t1.c0, t1.c0)))OR(t1.c0 COLLATE BINARY)))OR((t1.c0 IN ()))) DESC, t1.c0  NULLS LAST, ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c1) BETWEEN (x'') AND (rt0.c0))))) ORDER BY x'' ASC  NULLS LAST, ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))&((((1.689740142E9))<=((rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1) BETWEEN (x'') AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY x'' ASC  NULLS LAST, ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))&((((1.689740142E9))<=((rt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c1) BETWEEN (x'') AND (rt0.c0))))) ORDER BY x'' ASC  NULLS LAST, ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))&((((1.689740142E9))<=((rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1) BETWEEN (x'') AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY x'' ASC  NULLS LAST, ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))&((((1.689740142E9))<=((rt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c1) BETWEEN (x'') AND (rt0.c0))))) ORDER BY x'' ASC  NULLS LAST, ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))&((((1.689740142E9))<=((rt0.c0)))))  NULLS LAST;
SELECT ALL * FROM t1, rt1 WHERE (((((t1.c0) NOT BETWEEN ('H!W^Ӵﯺ') AND (rt1.c1))) IS FALSE)) ORDER BY (((t1.c0)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (rt1.c2) AND (t1.c0)))) AND (((- (rt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT BETWEEN ('H!W^Ӵﯺ') AND (rt1.c1))) IS FALSE)) IS TRUE)  as count FROM t1, rt1 ORDER BY (((t1.c0)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (rt1.c2) AND (t1.c0)))) AND (((- (rt1.c0)))))  NULLS LAST);
SELECT ALL * FROM t1, rt1 WHERE (((((t1.c0) NOT BETWEEN ('H!W^Ӵﯺ') AND (rt1.c1))) IS FALSE)) ORDER BY (((t1.c0)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (rt1.c2) AND (t1.c0)))) AND (((- (rt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT BETWEEN ('H!W^Ӵﯺ') AND (rt1.c1))) IS FALSE)) IS TRUE)  as count FROM t1, rt1 ORDER BY (((t1.c0)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (rt1.c2) AND (t1.c0)))) AND (((- (rt1.c0)))))  NULLS LAST);
SELECT ALL * FROM t1, rt1 WHERE (((((t1.c0) NOT BETWEEN ('H!W^Ӵﯺ') AND (rt1.c1))) IS FALSE)) ORDER BY (((t1.c0)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (rt1.c2) AND (t1.c0)))) AND (((- (rt1.c0)))))  NULLS LAST;
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON (((x'' IN ())) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (rt0.c1)) CROSS JOIN t1 ON rt1.c2 WHERE ((((rt0.c2 IN ()))>>(((rt1.c1)%(rt1.c0))))) ORDER BY CASE CASE t1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN x'' THEN rt1.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END  WHEN rt0.c0 COLLATE NOCASE THEN ((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) ELSE (NULL IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))>>(((rt1.c1)%(rt1.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((x'' IN ())) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (rt0.c1)) CROSS JOIN t1 ON rt1.c2 ORDER BY CASE CASE t1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN x'' THEN rt1.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END  WHEN rt0.c0 COLLATE NOCASE THEN ((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) ELSE (NULL IN ()) END DESC);
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON (((x'' IN ())) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (rt0.c1)) CROSS JOIN t1 ON rt1.c2 WHERE ((((rt0.c2 IN ()))>>(((rt1.c1)%(rt1.c0))))) ORDER BY CASE CASE t1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN x'' THEN rt1.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END  WHEN rt0.c0 COLLATE NOCASE THEN ((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) ELSE (NULL IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))>>(((rt1.c1)%(rt1.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((x'' IN ())) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (rt0.c1)) CROSS JOIN t1 ON rt1.c2 ORDER BY CASE CASE t1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN x'' THEN rt1.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END  WHEN rt0.c0 COLLATE NOCASE THEN ((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) ELSE (NULL IN ()) END DESC);
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON (((x'' IN ())) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (rt0.c1)) CROSS JOIN t1 ON rt1.c2 WHERE ((((rt0.c2 IN ()))>>(((rt1.c1)%(rt1.c0))))) ORDER BY CASE CASE t1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN x'' THEN rt1.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END  WHEN rt0.c0 COLLATE NOCASE THEN ((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) ELSE (NULL IN ()) END DESC;
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (CASE ((rt1.c2)IS NOT(rt1.c2))  WHEN (- (rt0.c0)) THEN (((rt0.c0, rt1.c0, rt1.c0))==((t1.c0, rt1.c1, rt1.c2))) WHEN (x'' IN (rt0.c1)) THEN (~ (rt0.c1)) WHEN ((((rt1.c0)AND(t1.c0)))AND(NULL)) THEN ((rt0.c1) BETWEEN (rt1.c1) AND (rt0.c1)) END) ORDER BY CASE ((((rt1.c2)AND(rt0.c1)))OR(rt1.c2))  WHEN (+ (rt0.c1)) THEN ((rt0.c1)==(rt0.c0)) WHEN ((t1.c0) IS FALSE) THEN ((((t1.c0)OR(rt1.c1)))AND(t1.c0)) WHEN ((((rt1.c1)OR(NULL)))AND(x'')) THEN (rt1.c0 IN ()) END DESC, (((rt1.c2)LIKE(t1.c0)) IN (t1.c0)) ASC  NULLS LAST, -663282525  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2)IS NOT(rt1.c2))  WHEN (- (rt0.c0)) THEN (((rt0.c0, rt1.c0, rt1.c0))=((t1.c0, rt1.c1, rt1.c2))) WHEN (x'' IN (rt0.c1)) THEN (~ (rt0.c1)) WHEN ((((rt1.c0)AND(t1.c0)))AND(NULL)) THEN ((rt0.c1) BETWEEN (rt1.c1) AND (rt0.c1)) END) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY CASE ((((rt1.c2)AND(rt0.c1)))OR(rt1.c2))  WHEN (+ (rt0.c1)) THEN ((rt0.c1)=(rt0.c0)) WHEN ((t1.c0) IS FALSE) THEN ((((t1.c0)OR(rt1.c1)))AND(t1.c0)) WHEN ((((rt1.c1)OR(NULL)))AND(x'')) THEN (rt1.c0 IN ()) END DESC, (((rt1.c2)LIKE(t1.c0)) IN (t1.c0)) ASC  NULLS LAST, -663282525  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (CASE ((rt1.c2)IS NOT(rt1.c2))  WHEN (- (rt0.c0)) THEN (((rt0.c0, rt1.c0, rt1.c0))==((t1.c0, rt1.c1, rt1.c2))) WHEN (x'' IN (rt0.c1)) THEN (~ (rt0.c1)) WHEN ((((rt1.c0)AND(t1.c0)))AND(NULL)) THEN ((rt0.c1) BETWEEN (rt1.c1) AND (rt0.c1)) END) ORDER BY CASE ((((rt1.c2)AND(rt0.c1)))OR(rt1.c2))  WHEN (+ (rt0.c1)) THEN ((rt0.c1)==(rt0.c0)) WHEN ((t1.c0) IS FALSE) THEN ((((t1.c0)OR(rt1.c1)))AND(t1.c0)) WHEN ((((rt1.c1)OR(NULL)))AND(x'')) THEN (rt1.c0 IN ()) END DESC, (((rt1.c2)LIKE(t1.c0)) IN (t1.c0)) ASC  NULLS LAST, -663282525  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2)IS NOT(rt1.c2))  WHEN (- (rt0.c0)) THEN (((rt0.c0, rt1.c0, rt1.c0))=((t1.c0, rt1.c1, rt1.c2))) WHEN (x'' IN (rt0.c1)) THEN (~ (rt0.c1)) WHEN ((((rt1.c0)AND(t1.c0)))AND(NULL)) THEN ((rt0.c1) BETWEEN (rt1.c1) AND (rt0.c1)) END) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY CASE ((((rt1.c2)AND(rt0.c1)))OR(rt1.c2))  WHEN (+ (rt0.c1)) THEN ((rt0.c1)=(rt0.c0)) WHEN ((t1.c0) IS FALSE) THEN ((((t1.c0)OR(rt1.c1)))AND(t1.c0)) WHEN ((((rt1.c1)OR(NULL)))AND(x'')) THEN (rt1.c0 IN ()) END DESC, (((rt1.c2)LIKE(t1.c0)) IN (t1.c0)) ASC  NULLS LAST, -663282525  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (0xffffffffd03b3273);
SELECT SUM(count) FROM (SELECT ((0Xffffffffd03b3273) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (0xffffffffd03b3273);
SELECT SUM(count) FROM (SELECT ((0Xffffffffd03b3273) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (0xffffffffd03b3273);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (((t1.c0 COLLATE RTRIM)<((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE RTRIM)<((t1.c0 IN ())))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (((t1.c0 COLLATE RTRIM)<((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE RTRIM)<((t1.c0 IN ())))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (((t1.c0 COLLATE RTRIM)<((t1.c0 IN ()))));
SELECT * FROM t1, rt0 WHERE (((((rt0.c2)|(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)|(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (((((rt0.c2)|(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)|(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (((((rt0.c2)|(rt0.c2))) IS FALSE));
SELECT ALL * FROM t1, rt0 INDEXED BY i0 WHERE (CASE WHEN 0.4867319907274088 THEN ((((rt0.c0)OR(t1.c0)))OR(-1034076443)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.4867319907274088 THEN ((((rt0.c0)OR(t1.c0)))OR(-1034076443)) END) IS TRUE)  as count FROM t1, rt0 INDEXED BY i0);
SELECT ALL * FROM t1, rt0 INDEXED BY i0 WHERE (CASE WHEN 0.4867319907274088 THEN ((((rt0.c0)OR(t1.c0)))OR(-1034076443)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.4867319907274088 THEN ((((rt0.c0)OR(t1.c0)))OR(-1034076443)) END) IS TRUE)  as count FROM t1, rt0 INDEXED BY i0);
SELECT * FROM rt0, t1 WHERE (UNLIKELY(DISTINCT LIKELIHOOD(rt0.c2, 0.9341149784393357)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT LIKELIHOOD(rt0.c2, 0.9341149784393357))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (UNLIKELY(DISTINCT LIKELIHOOD(rt0.c2, 0.9341149784393357)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT LIKELIHOOD(rt0.c2, 0.9341149784393357))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (UNLIKELY(DISTINCT LIKELIHOOD(rt0.c2, 0.9341149784393357)));
SELECT COUNT(*) FROM t1, rt1 WHERE (CASE WHEN (- (0xffffffffd8b37282)) THEN CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END ELSE ((rt1.c2) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (0Xffffffffd8b37282)) THEN CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END ELSE ((rt1.c2) NOT NULL) END) IS TRUE)  as count FROM t1, rt1);
SELECT COUNT(*) FROM t1, rt1 WHERE (CASE WHEN (- (0xffffffffd8b37282)) THEN CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END ELSE ((rt1.c2) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (0Xffffffffd8b37282)) THEN CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END ELSE ((rt1.c2) NOT NULL) END) IS TRUE)  as count FROM t1, rt1);
SELECT COUNT(*) FROM t1, rt1 WHERE (CASE WHEN (- (0xffffffffd8b37282)) THEN CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END ELSE ((rt1.c2) NOT NULL) END);
SELECT * FROM rt0, t1 WHERE ((((rt0.c2 COLLATE BINARY))!=((((t1.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE BINARY))<>((((t1.c0) NOTNULL))))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE ((((rt0.c2 COLLATE BINARY))!=((((t1.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE BINARY))<>((((t1.c0) NOTNULL))))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE ((((rt0.c2 COLLATE BINARY))!=((((t1.c0) NOTNULL)))));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((rt0.c1 IN ()) IN ()) INNER JOIN t1 ON t1.c0 WHERE (((((rt0.c2)OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))OR(t1.c0))) ORDER BY IFNULL(DISTINCT rt0.c2 COLLATE BINARY, ((rt0.c0) NOT NULL)) DESC  NULLS LAST, -1.319198318E9 COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))OR(t1.c0))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((rt0.c1 IN ()) IN ()) INNER JOIN t1 ON t1.c0 ORDER BY IFNULL(DISTINCT rt0.c2 COLLATE BINARY, ((rt0.c0) NOT NULL)) DESC  NULLS LAST, -1.319198318E9 COLLATE NOCASE  NULLS FIRST);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((rt0.c1 IN ()) IN ()) INNER JOIN t1 ON t1.c0 WHERE (((((rt0.c2)OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))OR(t1.c0))) ORDER BY IFNULL(DISTINCT rt0.c2 COLLATE BINARY, ((rt0.c0) NOT NULL)) DESC  NULLS LAST, -1.319198318E9 COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))OR(t1.c0))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((rt0.c1 IN ()) IN ()) INNER JOIN t1 ON t1.c0 ORDER BY IFNULL(DISTINCT rt0.c2 COLLATE BINARY, ((rt0.c0) NOT NULL)) DESC  NULLS LAST, -1.319198318E9 COLLATE NOCASE  NULLS FIRST);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((rt0.c1 IN ()) IN ()) INNER JOIN t1 ON t1.c0 WHERE (((((rt0.c2)OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))OR(t1.c0))) ORDER BY IFNULL(DISTINCT rt0.c2 COLLATE BINARY, ((rt0.c0) NOT NULL)) DESC  NULLS LAST, -1.319198318E9 COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM t1, rt0 WHERE ((~ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN t1.c0 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN t1.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE ((~ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN t1.c0 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN t1.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE ((~ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN t1.c0 THEN rt0.c2 END)));
SELECT COUNT(*) FROM rt0 WHERE (((((CAST('1263514826' AS INTEGER))AND(((rt0.c1)GLOB(rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST('1263514826' AS INTEGER))AND(((rt0.c1)GLOB(rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((CAST('1263514826' AS INTEGER))AND(((rt0.c1)GLOB(rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST('1263514826' AS INTEGER))AND(((rt0.c1)GLOB(rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((CAST('1263514826' AS INTEGER))AND(((rt0.c1)GLOB(rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT COUNT(*) FROM t1, rt1 WHERE (((59361340) BETWEEN ((- (rt1.c1))) AND (rt1.c1 COLLATE RTRIM))) ORDER BY CASE t1.c0 COLLATE NOCASE  WHEN x'' THEN '-1889595138' COLLATE BINARY WHEN ((t1.c0)/(rt1.c1)) THEN ((((t1.c0)AND(t1.c0)))OR(NULL)) WHEN HEX(DISTINCT rt1.c1) THEN (NOT (rt1.c2)) ELSE ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) END ASC, ((IFNULL(rt1.c0, rt1.c2))*(((((((((rt1.c2)AND(t1.c0)))OR(t1.c0)))OR(rt1.c0)))AND(rt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((59361340) BETWEEN ((- (rt1.c1))) AND (rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt1 ORDER BY CASE t1.c0 COLLATE NOCASE  WHEN x'' THEN '-1889595138' COLLATE BINARY WHEN ((t1.c0)/(rt1.c1)) THEN ((((t1.c0)AND(t1.c0)))OR(NULL)) WHEN HEX(DISTINCT rt1.c1) THEN (NOT (rt1.c2)) ELSE ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) END ASC, ((IFNULL(rt1.c0, rt1.c2))*(((((((((rt1.c2)AND(t1.c0)))OR(t1.c0)))OR(rt1.c0)))AND(rt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt1 WHERE (((59361340) BETWEEN ((- (rt1.c1))) AND (rt1.c1 COLLATE RTRIM))) ORDER BY CASE t1.c0 COLLATE NOCASE  WHEN x'' THEN '-1889595138' COLLATE BINARY WHEN ((t1.c0)/(rt1.c1)) THEN ((((t1.c0)AND(t1.c0)))OR(NULL)) WHEN HEX(DISTINCT rt1.c1) THEN (NOT (rt1.c2)) ELSE ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) END ASC, ((IFNULL(rt1.c0, rt1.c2))*(((((((((rt1.c2)AND(t1.c0)))OR(t1.c0)))OR(rt1.c0)))AND(rt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((59361340) BETWEEN ((- (rt1.c1))) AND (rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt1 ORDER BY CASE t1.c0 COLLATE NOCASE  WHEN x'' THEN '-1889595138' COLLATE BINARY WHEN ((t1.c0)/(rt1.c1)) THEN ((((t1.c0)AND(t1.c0)))OR(NULL)) WHEN HEX(DISTINCT rt1.c1) THEN (NOT (rt1.c2)) ELSE ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) END ASC, ((IFNULL(rt1.c0, rt1.c2))*(((((((((rt1.c2)AND(t1.c0)))OR(t1.c0)))OR(rt1.c0)))AND(rt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt1 WHERE (((59361340) BETWEEN ((- (rt1.c1))) AND (rt1.c1 COLLATE RTRIM))) ORDER BY CASE t1.c0 COLLATE NOCASE  WHEN x'' THEN '-1889595138' COLLATE BINARY WHEN ((t1.c0)/(rt1.c1)) THEN ((((t1.c0)AND(t1.c0)))OR(NULL)) WHEN HEX(DISTINCT rt1.c1) THEN (NOT (rt1.c2)) ELSE ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) END ASC, ((IFNULL(rt1.c0, rt1.c2))*(((((((((rt1.c2)AND(t1.c0)))OR(t1.c0)))OR(rt1.c0)))AND(rt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c0 COLLATE RTRIM)AND(ROUND(rt1.c0, rt0.c0))))OR(TRIM(rt1.c2))) RIGHT OUTER JOIN t1 ON rt1.c1 WHERE (((((((((((((((rt1.c2)AND(t1.c0)))AND(t1.c0)))AND(rt1.c2)))OR(t1.c0)))AND(rt0.c1)))AND(rt0.c2)))<((((rt0.c2, 0.5419320862791668, rt1.c2))<((rt1.c0, rt1.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c2)AND(t1.c0)))AND(t1.c0)))AND(rt1.c2)))OR(t1.c0)))AND(rt0.c1)))AND(rt0.c2)))<((((rt0.c2, 0.5419320862791668, rt1.c2))<((rt1.c0, rt1.c0, rt0.c0)))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c0 COLLATE RTRIM)AND(ROUND(rt1.c0, rt0.c0))))OR(TRIM(rt1.c2))) RIGHT OUTER JOIN t1 ON rt1.c1);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c0 COLLATE RTRIM)AND(ROUND(rt1.c0, rt0.c0))))OR(TRIM(rt1.c2))) RIGHT OUTER JOIN t1 ON rt1.c1 WHERE (((((((((((((((rt1.c2)AND(t1.c0)))AND(t1.c0)))AND(rt1.c2)))OR(t1.c0)))AND(rt0.c1)))AND(rt0.c2)))<((((rt0.c2, 0.5419320862791668, rt1.c2))<((rt1.c0, rt1.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c2)AND(t1.c0)))AND(t1.c0)))AND(rt1.c2)))OR(t1.c0)))AND(rt0.c1)))AND(rt0.c2)))<((((rt0.c2, 0.5419320862791668, rt1.c2))<((rt1.c0, rt1.c0, rt0.c0)))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c0 COLLATE RTRIM)AND(ROUND(rt1.c0, rt0.c0))))OR(TRIM(rt1.c2))) RIGHT OUTER JOIN t1 ON rt1.c1);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c0 COLLATE RTRIM)AND(ROUND(rt1.c0, rt0.c0))))OR(TRIM(rt1.c2))) RIGHT OUTER JOIN t1 ON rt1.c1 WHERE (((((((((((((((rt1.c2)AND(t1.c0)))AND(t1.c0)))AND(rt1.c2)))OR(t1.c0)))AND(rt0.c1)))AND(rt0.c2)))<((((rt0.c2, 0.5419320862791668, rt1.c2))<((rt1.c0, rt1.c0, rt0.c0))))));
SELECT ALL * FROM rt1, rt0, t1 WHERE (NULLIF(DISTINCT (NOT (rt0.c1)), CASE WHEN t1.c0 THEN NULL END)) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (NOT (rt0.c1)), CASE WHEN t1.c0 THEN NULL END)) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, t1 WHERE (NULLIF(DISTINCT (NOT (rt0.c1)), CASE WHEN t1.c0 THEN NULL END)) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (NOT (rt0.c1)), CASE WHEN t1.c0 THEN NULL END)) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, t1 WHERE (NULLIF(DISTINCT (NOT (rt0.c1)), CASE WHEN t1.c0 THEN NULL END)) ORDER BY x'' ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (CAST((t1.c0 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((t1.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST((t1.c0 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((t1.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST((t1.c0 IN ()) AS TEXT));
SELECT * FROM rt1, t1 WHERE (((CASE WHEN 0.018785058801515264 THEN rt1.c2 WHEN t1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END)+(((((rt1.c1)OR(t1.c0)))OR(rt1.c0))))) ORDER BY ((rt1.c1)|(rt1.c2)) COLLATE RTRIM, ((((t1.c0)AND(t1.c0)))IS NOT(CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END))  NULLS FIRST, ((((((((rt1.c2)AND(((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))))OR((((rt1.c1, rt1.c1, rt1.c1, t1.c0, rt1.c0))<=((t1.c0, t1.c0, t1.c0, rt1.c0, rt1.c0))))))OR(CAST(rt1.c1 AS INTEGER))))AND((((rt1.c0, t1.c0, rt1.c1))==((rt1.c1, x'5578', rt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0.018785058801515264 THEN rt1.c2 WHEN t1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END)+(((((rt1.c1)OR(t1.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1, t1 ORDER BY ((rt1.c1)|(rt1.c2)) COLLATE RTRIM, ((((t1.c0)AND(t1.c0)))IS NOT(CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END))  NULLS FIRST, ((((((((rt1.c2)AND(((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))))OR((((rt1.c1, rt1.c1, rt1.c1, t1.c0, rt1.c0))<=((t1.c0, t1.c0, t1.c0, rt1.c0, rt1.c0))))))OR(CAST(rt1.c1 AS INTEGER))))AND((((rt1.c0, t1.c0, rt1.c1))=((rt1.c1, x'5578', rt1.c0)))))  NULLS FIRST);
SELECT * FROM rt1, t1 WHERE (((CASE WHEN 0.018785058801515264 THEN rt1.c2 WHEN t1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END)+(((((rt1.c1)OR(t1.c0)))OR(rt1.c0))))) ORDER BY ((rt1.c1)|(rt1.c2)) COLLATE RTRIM, ((((t1.c0)AND(t1.c0)))IS NOT(CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END))  NULLS FIRST, ((((((((rt1.c2)AND(((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))))OR((((rt1.c1, rt1.c1, rt1.c1, t1.c0, rt1.c0))<=((t1.c0, t1.c0, t1.c0, rt1.c0, rt1.c0))))))OR(CAST(rt1.c1 AS INTEGER))))AND((((rt1.c0, t1.c0, rt1.c1))==((rt1.c1, x'5578', rt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0.018785058801515264 THEN rt1.c2 WHEN t1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END)+(((((rt1.c1)OR(t1.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1, t1 ORDER BY ((rt1.c1)|(rt1.c2)) COLLATE RTRIM, ((((t1.c0)AND(t1.c0)))IS NOT(CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END))  NULLS FIRST, ((((((((rt1.c2)AND(((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))))OR((((rt1.c1, rt1.c1, rt1.c1, t1.c0, rt1.c0))<=((t1.c0, t1.c0, t1.c0, rt1.c0, rt1.c0))))))OR(CAST(rt1.c1 AS INTEGER))))AND((((rt1.c0, t1.c0, rt1.c1))=((rt1.c1, x'5578', rt1.c0)))))  NULLS FIRST);
SELECT * FROM rt1, t1 WHERE (((CASE WHEN 0.018785058801515264 THEN rt1.c2 WHEN t1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END)+(((((rt1.c1)OR(t1.c0)))OR(rt1.c0))))) ORDER BY ((rt1.c1)|(rt1.c2)) COLLATE RTRIM, ((((t1.c0)AND(t1.c0)))IS NOT(CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END))  NULLS FIRST, ((((((((rt1.c2)AND(((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))))OR((((rt1.c1, rt1.c1, rt1.c1, t1.c0, rt1.c0))<=((t1.c0, t1.c0, t1.c0, rt1.c0, rt1.c0))))))OR(CAST(rt1.c1 AS INTEGER))))AND((((rt1.c0, t1.c0, rt1.c1))==((rt1.c1, x'5578', rt1.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))-(CAST(rt1.c1 AS REAL)))) ORDER BY (CAST(rt1.c0 AS BLOB) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))-(CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM t1, rt1 ORDER BY (CAST(rt1.c0 AS BLOB) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))-(CAST(rt1.c1 AS REAL)))) ORDER BY (CAST(rt1.c0 AS BLOB) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))-(CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM t1, rt1 ORDER BY (CAST(rt1.c0 AS BLOB) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))-(CAST(rt1.c1 AS REAL)))) ORDER BY (CAST(rt1.c0 AS BLOB) IN ())  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((NOT (rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((NOT (rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((NOT (rt0.c1))) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))AND('')))OR((rt0.c2 IN (rt0.c1)))))AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)OR(rt0.c2)))AND('')))OR((rt0.c2 IN (rt0.c1)))))AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))AND('')))OR((rt0.c2 IN (rt0.c1)))))AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)OR(rt0.c2)))AND('')))OR((rt0.c2 IN (rt0.c1)))))AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))AND('')))OR((rt0.c2 IN (rt0.c1)))))AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (CASE WHEN ((rt1.c2) IS FALSE) THEN CAST(rt1.c0 AS TEXT) END) ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))OR((~ (rt1.c2)))), ((rt1.c0 COLLATE NOCASE) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2) IS FALSE) THEN CAST(rt1.c0 AS TEXT) END) IS TRUE)  as count FROM rt1, t1 ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))OR((~ (rt1.c2)))), ((rt1.c0 COLLATE NOCASE) IS TRUE));
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (CASE WHEN ((rt1.c2) IS FALSE) THEN CAST(rt1.c0 AS TEXT) END) ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))OR((~ (rt1.c2)))), ((rt1.c0 COLLATE NOCASE) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2) IS FALSE) THEN CAST(rt1.c0 AS TEXT) END) IS TRUE)  as count FROM rt1, t1 ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))OR((~ (rt1.c2)))), ((rt1.c0 COLLATE NOCASE) IS TRUE));
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (CASE WHEN ((rt1.c2) IS FALSE) THEN CAST(rt1.c0 AS TEXT) END) ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))OR((~ (rt1.c2)))), ((rt1.c0 COLLATE NOCASE) IS TRUE);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE ((((((t1.c0) ISNULL)))<=(((+ (rt1.c0)))))) ORDER BY (((rt1.c0)) NOT BETWEEN (((((rt1.c2))>=((rt0.c1))))) AND ((((t1.c0)==(rt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0) ISNULL)))<=(((+ (rt1.c0)))))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY (((rt1.c0)) NOT BETWEEN (((((rt1.c2))>=((rt0.c1))))) AND ((((t1.c0)=(rt0.c1))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE ((((((t1.c0) ISNULL)))<=(((+ (rt1.c0)))))) ORDER BY (((rt1.c0)) NOT BETWEEN (((((rt1.c2))>=((rt0.c1))))) AND ((((t1.c0)==(rt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0) ISNULL)))<=(((+ (rt1.c0)))))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY (((rt1.c0)) NOT BETWEEN (((((rt1.c2))>=((rt0.c1))))) AND ((((t1.c0)=(rt0.c1))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE ((((((t1.c0) ISNULL)))<=(((+ (rt1.c0)))))) ORDER BY (((rt1.c0)) NOT BETWEEN (((((rt1.c2))>=((rt0.c1))))) AND ((((t1.c0)==(rt0.c1))))) DESC  NULLS LAST;
SELECT * FROM rt0, t1 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (NULL COLLATE NOCASE);
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT ALL COUNT(*) FROM t1 WHERE (UNLIKELY(t1.c0 COLLATE BINARY)) ORDER BY ((ABS(t1.c0))=(t1.c0));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(t1.c0 COLLATE BINARY)) IS TRUE)  as count FROM t1 ORDER BY ((ABS(t1.c0))=(t1.c0)));
SELECT ALL COUNT(*) FROM t1 WHERE (UNLIKELY(t1.c0 COLLATE BINARY)) ORDER BY ((ABS(t1.c0))=(t1.c0));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(t1.c0 COLLATE BINARY)) IS TRUE)  as count FROM t1 ORDER BY ((ABS(t1.c0))=(t1.c0)));
SELECT ALL COUNT(*) FROM t1 WHERE (UNLIKELY(t1.c0 COLLATE BINARY)) ORDER BY ((ABS(t1.c0))=(t1.c0));
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (((rt1.c2)IS(rt1.c2))))) ORDER BY 0.38294290393560537 ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c2)IS(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY 0.38294290393560537 ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (((rt1.c2)IS(rt1.c2))))) ORDER BY 0.38294290393560537 ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c2)IS(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY 0.38294290393560537 ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (((rt1.c2)IS(rt1.c2))))) ORDER BY 0.38294290393560537 ASC;
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((UNLIKELY(DISTINCT rt0.c1))))) ORDER BY 0.3017102099655634 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((UNLIKELY(DISTINCT rt0.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY 0.3017102099655634 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((UNLIKELY(DISTINCT rt0.c1))))) ORDER BY 0.3017102099655634 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((UNLIKELY(DISTINCT rt0.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY 0.3017102099655634 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((UNLIKELY(DISTINCT rt0.c1))))) ORDER BY 0.3017102099655634 DESC  NULLS LAST;
SELECT ALL * FROM rt1 CROSS JOIN t1 ON ((((rt1.c1)*(x'')))|(((((rt0.c1)OR(t1.c0)))AND(rt0.c0)))) LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN (((+ (t1.c0)))) AND (((((rt1.c1))<=((rt0.c1)))))) WHERE (((rt0.c2 COLLATE NOCASE)IS('')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE)IS(''))) IS TRUE)  as count FROM rt1 CROSS JOIN t1 ON ((((rt1.c1)*(x'')))|(((((rt0.c1)OR(t1.c0)))AND(rt0.c0)))) LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN (((+ (t1.c0)))) AND (((((rt1.c1))<=((rt0.c1)))))));
SELECT ALL * FROM rt1 CROSS JOIN t1 ON ((((rt1.c1)*(x'')))|(((((rt0.c1)OR(t1.c0)))AND(rt0.c0)))) LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN (((+ (t1.c0)))) AND (((((rt1.c1))<=((rt0.c1)))))) WHERE (((rt0.c2 COLLATE NOCASE)IS('')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE)IS(''))) IS TRUE)  as count FROM rt1 CROSS JOIN t1 ON ((((rt1.c1)*(x'')))|(((((rt0.c1)OR(t1.c0)))AND(rt0.c0)))) LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN (((+ (t1.c0)))) AND (((((rt1.c1))<=((rt0.c1)))))));
SELECT ALL * FROM rt1 CROSS JOIN t1 ON ((((rt1.c1)*(x'')))|(((((rt0.c1)OR(t1.c0)))AND(rt0.c0)))) LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN (((+ (t1.c0)))) AND (((((rt1.c1))<=((rt0.c1)))))) WHERE (((rt0.c2 COLLATE NOCASE)IS('')));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM t1, rt1 INNER JOIN rt0 ON (('0.05407854312960725') NOTNULL) WHERE ((('0.9057209957617389') BETWEEN (rt1.c1) AND (rt0.c0)) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((('0.9057209957617389') BETWEEN (rt1.c1) AND (rt0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM t1, rt1 INNER JOIN rt0 ON (('0.05407854312960725') NOTNULL));
SELECT ALL COUNT(*) FROM t1, rt1 INNER JOIN rt0 ON (('0.05407854312960725') NOTNULL) WHERE ((('0.9057209957617389') BETWEEN (rt1.c1) AND (rt0.c0)) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((('0.9057209957617389') BETWEEN (rt1.c1) AND (rt0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM t1, rt1 INNER JOIN rt0 ON (('0.05407854312960725') NOTNULL));
SELECT ALL COUNT(*) FROM t1, rt1 INNER JOIN rt0 ON (('0.05407854312960725') NOTNULL) WHERE ((('0.9057209957617389') BETWEEN (rt1.c1) AND (rt0.c0)) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY (((~ (t1.c0)))-(((t1.c0)OR(t1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY (((~ (t1.c0)))-(((t1.c0)OR(t1.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY (((~ (t1.c0)))-(((t1.c0)OR(t1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY (((~ (t1.c0)))-(((t1.c0)OR(t1.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY (((~ (t1.c0)))-(((t1.c0)OR(t1.c0)))) DESC  NULLS LAST;
SELECT * FROM rt1, t1 WHERE (CAST((+ (t1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (t1.c0)) AS INTEGER)) IS TRUE)  as count FROM rt1, t1);
SELECT * FROM rt1, t1 WHERE (CAST((+ (t1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (t1.c0)) AS INTEGER)) IS TRUE)  as count FROM rt1, t1);
SELECT * FROM rt1, t1 WHERE (CAST((+ (t1.c0)) AS INTEGER));
SELECT ALL * FROM rt1 WHERE (((- (rt1.c0)) IN ())) ORDER BY (~ (((rt1.c2) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((- (rt1.c0)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c2) IS TRUE))) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((- (rt1.c0)) IN ())) ORDER BY (~ (((rt1.c2) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((- (rt1.c0)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c2) IS TRUE))) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((- (rt1.c0)) IN ())) ORDER BY (~ (((rt1.c2) IS TRUE))) DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c2 END)>=(rt1.c0))) ORDER BY json_remove(TRIM(DISTINCT rt1.c0, x'3464'), CAST(rt1.c0 AS BLOB), rt1.c1 COLLATE BINARY, NULLIF('-787939562', rt1.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c0 THEN rt1.c2 END)>=(rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY json_remove(TRIM(DISTINCT rt1.c0, x'3464'), CAST(rt1.c0 AS BLOB), rt1.c1 COLLATE BINARY, NULLIF('-787939562', rt1.c2)) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c2 END)>=(rt1.c0))) ORDER BY json_remove(TRIM(DISTINCT rt1.c0, x'3464'), CAST(rt1.c0 AS BLOB), rt1.c1 COLLATE BINARY, NULLIF('-787939562', rt1.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c0 THEN rt1.c2 END)>=(rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY json_remove(TRIM(DISTINCT rt1.c0, x'3464'), CAST(rt1.c0 AS BLOB), rt1.c1 COLLATE BINARY, NULLIF('-787939562', rt1.c2)) ASC  NULLS LAST);
SELECT ALL * FROM t1 FULL OUTER JOIN rt0 ON (((rt0.c2)|(rt0.c2)) IN ()) WHERE (CASE ((rt0.c2)IS(t1.c0))  WHEN HEX(t1.c0) THEN ((rt0.c2)IS(t1.c0)) WHEN CAST(rt0.c2 AS INTEGER) THEN CAST(rt0.c0 AS INTEGER) WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)) THEN (((rt0.c1, rt0.c2, t1.c0))<((t1.c0, t1.c0, rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)IS(t1.c0))  WHEN HEX(t1.c0) THEN ((rt0.c2)IS(t1.c0)) WHEN CAST(rt0.c2 AS INTEGER) THEN CAST(rt0.c0 AS INTEGER) WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)) THEN (((rt0.c1, rt0.c2, t1.c0))<((t1.c0, t1.c0, rt0.c0))) END) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON (((rt0.c2)|(rt0.c2)) IN ()));
SELECT ALL * FROM t1 FULL OUTER JOIN rt0 ON (((rt0.c2)|(rt0.c2)) IN ()) WHERE (CASE ((rt0.c2)IS(t1.c0))  WHEN HEX(t1.c0) THEN ((rt0.c2)IS(t1.c0)) WHEN CAST(rt0.c2 AS INTEGER) THEN CAST(rt0.c0 AS INTEGER) WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)) THEN (((rt0.c1, rt0.c2, t1.c0))<((t1.c0, t1.c0, rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)IS(t1.c0))  WHEN HEX(t1.c0) THEN ((rt0.c2)IS(t1.c0)) WHEN CAST(rt0.c2 AS INTEGER) THEN CAST(rt0.c0 AS INTEGER) WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)) THEN (((rt0.c1, rt0.c2, t1.c0))<((t1.c0, t1.c0, rt0.c0))) END) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON (((rt0.c2)|(rt0.c2)) IN ()));
SELECT ALL * FROM t1 FULL OUTER JOIN rt0 ON (((rt0.c2)|(rt0.c2)) IN ()) WHERE (CASE ((rt0.c2)IS(t1.c0))  WHEN HEX(t1.c0) THEN ((rt0.c2)IS(t1.c0)) WHEN CAST(rt0.c2 AS INTEGER) THEN CAST(rt0.c0 AS INTEGER) WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)) THEN (((rt0.c1, rt0.c2, t1.c0))<((t1.c0, t1.c0, rt0.c0))) END);
SELECT ALL * FROM rt1, rt0, t1 WHERE ((((((((rt1.c1))=((rt1.c0))))OR((((rt1.c1, t1.c0, t1.c0))==((rt1.c1, rt0.c2, rt1.c2))))))AND(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c1))==((rt1.c0))))OR((((rt1.c1, t1.c0, t1.c0))==((rt1.c1, rt0.c2, rt1.c2))))))AND(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE ((((((((rt1.c1))=((rt1.c0))))OR((((rt1.c1, t1.c0, t1.c0))==((rt1.c1, rt0.c2, rt1.c2))))))AND(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c1))==((rt1.c0))))OR((((rt1.c1, t1.c0, t1.c0))==((rt1.c1, rt0.c2, rt1.c2))))))AND(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE ((((((((rt1.c1))=((rt1.c0))))OR((((rt1.c1, t1.c0, t1.c0))==((rt1.c1, rt0.c2, rt1.c2))))))AND(CAST(rt0.c0 AS REAL))));
SELECT * FROM rt0, rt1, t1 WHERE (t1.c0) ORDER BY ((((0Xffffffffa17eb45f IN ())))<=(((rt1.c1 IN (t1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((((0Xffffffffa17eb45f IN ())))<=(((rt1.c1 IN (t1.c0))))) DESC  NULLS FIRST);
SELECT * FROM rt0, rt1, t1 WHERE (t1.c0) ORDER BY ((((0Xffffffffa17eb45f IN ())))<=(((rt1.c1 IN (t1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((((0Xffffffffa17eb45f IN ())))<=(((rt1.c1 IN (t1.c0))))) DESC  NULLS FIRST);
SELECT * FROM rt0, rt1, t1 WHERE (t1.c0) ORDER BY ((((0Xffffffffa17eb45f IN ())))<=(((rt1.c1 IN (t1.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (CAST((((rt0.c1, rt0.c1, rt0.c2, t1.c0, rt0.c0)) BETWEEN (('', rt1.c0, rt1.c1, rt1.c0, rt1.c1)) AND ((t1.c0, rt1.c0, 0.014668574595278816, rt1.c2, rt1.c2))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1, rt0.c1, rt0.c2, t1.c0, rt0.c0)) BETWEEN (('', rt1.c0, rt1.c1, rt1.c0, rt1.c1)) AND ((t1.c0, rt1.c0, 0.014668574595278816, rt1.c2, rt1.c2))) AS BLOB)) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (CAST((((rt0.c1, rt0.c1, rt0.c2, t1.c0, rt0.c0)) BETWEEN (('', rt1.c0, rt1.c1, rt1.c0, rt1.c1)) AND ((t1.c0, rt1.c0, 0.014668574595278816, rt1.c2, rt1.c2))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1, rt0.c1, rt0.c2, t1.c0, rt0.c0)) BETWEEN (('', rt1.c0, rt1.c1, rt1.c0, rt1.c1)) AND ((t1.c0, rt1.c0, 0.014668574595278816, rt1.c2, rt1.c2))) AS BLOB)) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (CAST((((rt0.c1, rt0.c1, rt0.c2, t1.c0, rt0.c0)) BETWEEN (('', rt1.c0, rt1.c1, rt1.c0, rt1.c1)) AND ((t1.c0, rt1.c0, 0.014668574595278816, rt1.c2, rt1.c2))) AS BLOB));
SELECT ALL * FROM rt0 WHERE (((rt0.c1)>>(((rt0.c0)>(rt0.c0))))) ORDER BY (+ (CAST(rt0.c1 AS INTEGER))) ASC  NULLS LAST, NULLIF(DISTINCT ((1.500335173E9) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2)-(rt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>>(((rt0.c0)>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (CAST(rt0.c1 AS INTEGER))) ASC  NULLS LAST, NULLIF(DISTINCT ((1.500335173E9) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2)-(rt0.c0))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)>>(((rt0.c0)>(rt0.c0))))) ORDER BY (+ (CAST(rt0.c1 AS INTEGER))) ASC  NULLS LAST, NULLIF(DISTINCT ((1.500335173E9) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2)-(rt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>>(((rt0.c0)>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (CAST(rt0.c1 AS INTEGER))) ASC  NULLS LAST, NULLIF(DISTINCT ((1.500335173E9) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2)-(rt0.c0))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)>>(((rt0.c0)>(rt0.c0))))) ORDER BY (+ (CAST(rt0.c1 AS INTEGER))) ASC  NULLS LAST, NULLIF(DISTINCT ((1.500335173E9) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2)-(rt0.c0))) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC))==((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS NUMERIC))==((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC))==((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS NUMERIC))==((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC))==((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))));
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) IS TRUE))>=((rt1.c0 IN (rt1.c0))))) ORDER BY (CAST(rt1.c1 AS BLOB) IN (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) IS TRUE))>=((rt1.c0 IN (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (CAST(rt1.c1 AS BLOB) IN (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) IS TRUE))>=((rt1.c0 IN (rt1.c0))))) ORDER BY (CAST(rt1.c1 AS BLOB) IN (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) IS TRUE))>=((rt1.c0 IN (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (CAST(rt1.c1 AS BLOB) IN (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) IS TRUE))>=((rt1.c0 IN (rt1.c0))))) ORDER BY (CAST(rt1.c1 AS BLOB) IN (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))))  NULLS LAST;
SELECT * FROM rt1, t1 WHERE (((rt1.c1) NOTNULL) COLLATE NOCASE) ORDER BY rt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t1 ORDER BY rt1.c2 DESC);
SELECT * FROM rt1, t1 WHERE (((rt1.c1) NOTNULL) COLLATE NOCASE) ORDER BY rt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t1 ORDER BY rt1.c2 DESC);
SELECT * FROM rt1, t1 WHERE (((rt1.c1) NOTNULL) COLLATE NOCASE) ORDER BY rt1.c2 DESC;
SELECT COUNT(*) FROM rt0 INDEXED BY i93, rt1 WHERE ((((rt0.c0)>>(0xffffffffed0f91d6)) IN ())) ORDER BY CAST(rt0.c0 COLLATE BINARY AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)>>(0xffffffffed0f91d6)) IN ())) IS TRUE)  as count FROM rt0 INDEXED BY i93, rt1 ORDER BY CAST(rt0.c0 COLLATE BINARY AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM rt0 INDEXED BY i93, rt1 WHERE ((((rt0.c0)>>(0xffffffffed0f91d6)) IN ())) ORDER BY CAST(rt0.c0 COLLATE BINARY AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)>>(0xffffffffed0f91d6)) IN ())) IS TRUE)  as count FROM rt0 INDEXED BY i93, rt1 ORDER BY CAST(rt0.c0 COLLATE BINARY AS TEXT)  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (CAST(HEX(DISTINCT rt0.c0) AS TEXT)) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN (((x'', rt1.c0, rt0.c0)) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt0.c2, rt0.c0, rt0.c2))) WHEN rt0.c2 THEN NULL WHEN ((((((((rt1.c2)AND(rt1.c1)))AND(rt0.c2)))AND(rt1.c0)))AND(rt1.c1)) THEN rt1.c2 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(HEX(DISTINCT rt0.c0) AS TEXT)) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN (rt0.c1 IN ()) THEN (((x'', rt1.c0, rt0.c0)) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt0.c2, rt0.c0, rt0.c2))) WHEN rt0.c2 THEN NULL WHEN ((((((((rt1.c2)AND(rt1.c1)))AND(rt0.c2)))AND(rt1.c0)))AND(rt1.c1)) THEN rt1.c2 END DESC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (CAST(HEX(DISTINCT rt0.c0) AS TEXT)) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN (((x'', rt1.c0, rt0.c0)) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt0.c2, rt0.c0, rt0.c2))) WHEN rt0.c2 THEN NULL WHEN ((((((((rt1.c2)AND(rt1.c1)))AND(rt0.c2)))AND(rt1.c0)))AND(rt1.c1)) THEN rt1.c2 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(HEX(DISTINCT rt0.c0) AS TEXT)) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN (rt0.c1 IN ()) THEN (((x'', rt1.c0, rt0.c0)) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt0.c2, rt0.c0, rt0.c2))) WHEN rt0.c2 THEN NULL WHEN ((((((((rt1.c2)AND(rt1.c1)))AND(rt0.c2)))AND(rt1.c0)))AND(rt1.c1)) THEN rt1.c2 END DESC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (CAST(HEX(DISTINCT rt0.c0) AS TEXT)) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN (((x'', rt1.c0, rt0.c0)) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt0.c2, rt0.c0, rt0.c2))) WHEN rt0.c2 THEN NULL WHEN ((((((((rt1.c2)AND(rt1.c1)))AND(rt0.c2)))AND(rt1.c0)))AND(rt1.c1)) THEN rt1.c2 END DESC  NULLS LAST;
SELECT ALL * FROM rt0, t1, rt1 WHERE (((rt1.c2)IS(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2))))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)))+((- (rt0.c1)))) ASC, LENGTH(((((((((rt1.c0)OR(t1.c0)))AND(rt1.c2)))AND(t1.c0)))AND(t1.c0)));
SELECT SUM(count) FROM (SELECT ((((rt1.c2)IS(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2))))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)))+((- (rt0.c1)))) ASC, LENGTH(((((((((rt1.c0)OR(t1.c0)))AND(rt1.c2)))AND(t1.c0)))AND(t1.c0))));
SELECT ALL * FROM rt0, t1, rt1 WHERE (((rt1.c2)IS(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2))))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)))+((- (rt0.c1)))) ASC, LENGTH(((((((((rt1.c0)OR(t1.c0)))AND(rt1.c2)))AND(t1.c0)))AND(t1.c0)));
SELECT SUM(count) FROM (SELECT ((((rt1.c2)IS(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2))))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)))+((- (rt0.c1)))) ASC, LENGTH(((((((((rt1.c0)OR(t1.c0)))AND(rt1.c2)))AND(t1.c0)))AND(t1.c0))));
SELECT ALL * FROM rt0, t1, rt1 WHERE (((rt1.c2)IS(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2))))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)))+((- (rt0.c1)))) ASC, LENGTH(((((((((rt1.c0)OR(t1.c0)))AND(rt1.c2)))AND(t1.c0)))AND(t1.c0)));
SELECT COUNT(*) FROM rt0 WHERE (HEX(SUBSTR(rt0.c2, rt0.c0))) ORDER BY DATETIME(((rt0.c0) BETWEEN (rt0.c0) AND (NULL)), rt0.c1, ((rt0.c1) NOT NULL)) DESC, CASE rt0.c1 COLLATE BINARY  WHEN ((rt0.c0)<<(rt0.c0)) THEN rt0.c2 COLLATE RTRIM ELSE CAST('1962449634' AS NUMERIC) END, ((CAST(rt0.c2 AS BLOB))*(rt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(SUBSTR(rt0.c2, rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY DATETIME(((rt0.c0) BETWEEN (rt0.c0) AND (NULL)), rt0.c1, ((rt0.c1) NOT NULL)) DESC, CASE rt0.c1 COLLATE BINARY  WHEN ((rt0.c0)<<(rt0.c0)) THEN rt0.c2 COLLATE RTRIM ELSE CAST('1962449634' AS NUMERIC) END, ((CAST(rt0.c2 AS BLOB))*(rt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (HEX(SUBSTR(rt0.c2, rt0.c0))) ORDER BY DATETIME(((rt0.c0) BETWEEN (rt0.c0) AND (NULL)), rt0.c1, ((rt0.c1) NOT NULL)) DESC, CASE rt0.c1 COLLATE BINARY  WHEN ((rt0.c0)<<(rt0.c0)) THEN rt0.c2 COLLATE RTRIM ELSE CAST('1962449634' AS NUMERIC) END, ((CAST(rt0.c2 AS BLOB))*(rt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(SUBSTR(rt0.c2, rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY DATETIME(((rt0.c0) BETWEEN (rt0.c0) AND (NULL)), rt0.c1, ((rt0.c1) NOT NULL)) DESC, CASE rt0.c1 COLLATE BINARY  WHEN ((rt0.c0)<<(rt0.c0)) THEN rt0.c2 COLLATE RTRIM ELSE CAST('1962449634' AS NUMERIC) END, ((CAST(rt0.c2 AS BLOB))*(rt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (HEX(SUBSTR(rt0.c2, rt0.c0))) ORDER BY DATETIME(((rt0.c0) BETWEEN (rt0.c0) AND (NULL)), rt0.c1, ((rt0.c1) NOT NULL)) DESC, CASE rt0.c1 COLLATE BINARY  WHEN ((rt0.c0)<<(rt0.c0)) THEN rt0.c2 COLLATE RTRIM ELSE CAST('1962449634' AS NUMERIC) END, ((CAST(rt0.c2 AS BLOB))*(rt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (NULL) ORDER BY ((rt1.c2) BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))) AND (x'')) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, rt1 ORDER BY ((rt1.c2) BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))) AND (x'')) DESC);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (NULL) ORDER BY ((rt1.c2) BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))) AND (x'')) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, rt1 ORDER BY ((rt1.c2) BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))) AND (x'')) DESC);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (NULL) ORDER BY ((rt1.c2) BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))) AND (x'')) DESC;
SELECT ALL * FROM rt0 WHERE (((((((0.23645493524514472)/(rt0.c2)))OR((rt0.c2 IN ()))))OR(CAST(rt0.c2 AS BLOB)))) ORDER BY ((rt0.c1)AND(rt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((0.23645493524514472)/(rt0.c2)))OR((rt0.c2 IN ()))))OR(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)AND(rt0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((0.23645493524514472)/(rt0.c2)))OR((rt0.c2 IN ()))))OR(CAST(rt0.c2 AS BLOB)))) ORDER BY ((rt0.c1)AND(rt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((0.23645493524514472)/(rt0.c2)))OR((rt0.c2 IN ()))))OR(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)AND(rt0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((0.23645493524514472)/(rt0.c2)))OR((rt0.c2 IN ()))))OR(CAST(rt0.c2 AS BLOB)))) ORDER BY ((rt0.c1)AND(rt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (CASE WHEN rt1.c2 COLLATE BINARY THEN (~ (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c2 COLLATE BINARY THEN (~ (rt1.c0)) END) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (CASE WHEN rt1.c2 COLLATE BINARY THEN (~ (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c2 COLLATE BINARY THEN (~ (rt1.c0)) END) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (CASE WHEN rt1.c2 COLLATE BINARY THEN (~ (rt1.c0)) END);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE NOCASE) ISNULL));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((t1.c0)*(rt0.c2))) NOT BETWEEN (((((((((t1.c0)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2))) AND (((rt0.c1) BETWEEN (t1.c0) AND (rt0.c2))))) ORDER BY ((((UNLIKELY(DISTINCT rt0.c1))AND(((rt0.c1)+(rt0.c0)))))AND(((t1.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)*(rt0.c2))) NOT BETWEEN (((((((((t1.c0)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2))) AND (((rt0.c1) BETWEEN (t1.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((UNLIKELY(DISTINCT rt0.c1))AND(((rt0.c1)+(rt0.c0)))))AND(((t1.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((t1.c0)*(rt0.c2))) NOT BETWEEN (((((((((t1.c0)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2))) AND (((rt0.c1) BETWEEN (t1.c0) AND (rt0.c2))))) ORDER BY ((((UNLIKELY(DISTINCT rt0.c1))AND(((rt0.c1)+(rt0.c0)))))AND(((t1.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)*(rt0.c2))) NOT BETWEEN (((((((((t1.c0)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2))) AND (((rt0.c1) BETWEEN (t1.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((UNLIKELY(DISTINCT rt0.c1))AND(((rt0.c1)+(rt0.c0)))))AND(((t1.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((t1.c0)*(rt0.c2))) NOT BETWEEN (((((((((t1.c0)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2))) AND (((rt0.c1) BETWEEN (t1.c0) AND (rt0.c2))))) ORDER BY ((((UNLIKELY(DISTINCT rt0.c1))AND(((rt0.c1)+(rt0.c0)))))AND(((t1.c0) IS TRUE)));
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((CAST(x'' AS REAL)) NOT BETWEEN (((1232003589)+(rt0.c1))) AND (('0.5087925647750489' IN ())))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c2)LIKE(t1.c0)))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE t1.c0 END))) DESC, (((t1.c0 IN (0.45148955617338904))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS REAL)) NOT BETWEEN (((1232003589)+(rt0.c1))) AND (('0.5087925647750489' IN ())))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c2)LIKE(t1.c0)))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE t1.c0 END))) DESC, (((t1.c0 IN (0.45148955617338904))) IS TRUE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((CAST(x'' AS REAL)) NOT BETWEEN (((1232003589)+(rt0.c1))) AND (('0.5087925647750489' IN ())))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c2)LIKE(t1.c0)))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE t1.c0 END))) DESC, (((t1.c0 IN (0.45148955617338904))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS REAL)) NOT BETWEEN (((1232003589)+(rt0.c1))) AND (('0.5087925647750489' IN ())))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c2)LIKE(t1.c0)))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE t1.c0 END))) DESC, (((t1.c0 IN (0.45148955617338904))) IS TRUE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((CAST(x'' AS REAL)) NOT BETWEEN (((1232003589)+(rt0.c1))) AND (('0.5087925647750489' IN ())))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c2)LIKE(t1.c0)))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE t1.c0 END))) DESC, (((t1.c0 IN (0.45148955617338904))) IS TRUE) ASC  NULLS LAST;
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON CASE 0.9860702850237514  WHEN (+ (rt0.c1)) THEN x'' COLLATE RTRIM ELSE CASE rt0.c0  WHEN rt0.c0 THEN t1.c0 END END WHERE (((CAST(t1.c0 AS REAL)) IS TRUE)) ORDER BY CASE WHEN t1.c0 THEN ((rt0.c1) NOTNULL) WHEN t1.c0 COLLATE NOCASE THEN (+ (0.19636569560062334)) WHEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((t1.c0))) THEN ((rt0.c0) BETWEEN (t1.c0) AND (rt0.c2)) ELSE 0.44438686153460705 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS REAL)) IS TRUE)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON CASE 0.9860702850237514  WHEN (+ (rt0.c1)) THEN x'' COLLATE RTRIM ELSE CASE rt0.c0  WHEN rt0.c0 THEN t1.c0 END END ORDER BY CASE WHEN t1.c0 THEN ((rt0.c1) NOTNULL) WHEN t1.c0 COLLATE NOCASE THEN (+ (0.19636569560062334)) WHEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((t1.c0))) THEN ((rt0.c0) BETWEEN (t1.c0) AND (rt0.c2)) ELSE 0.44438686153460705 END ASC  NULLS FIRST);
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON CASE 0.9860702850237514  WHEN (+ (rt0.c1)) THEN x'' COLLATE RTRIM ELSE CASE rt0.c0  WHEN rt0.c0 THEN t1.c0 END END WHERE (((CAST(t1.c0 AS REAL)) IS TRUE)) ORDER BY CASE WHEN t1.c0 THEN ((rt0.c1) NOTNULL) WHEN t1.c0 COLLATE NOCASE THEN (+ (0.19636569560062334)) WHEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((t1.c0))) THEN ((rt0.c0) BETWEEN (t1.c0) AND (rt0.c2)) ELSE 0.44438686153460705 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS REAL)) IS TRUE)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON CASE 0.9860702850237514  WHEN (+ (rt0.c1)) THEN x'' COLLATE RTRIM ELSE CASE rt0.c0  WHEN rt0.c0 THEN t1.c0 END END ORDER BY CASE WHEN t1.c0 THEN ((rt0.c1) NOTNULL) WHEN t1.c0 COLLATE NOCASE THEN (+ (0.19636569560062334)) WHEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((t1.c0))) THEN ((rt0.c0) BETWEEN (t1.c0) AND (rt0.c2)) ELSE 0.44438686153460705 END ASC  NULLS FIRST);
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON CASE 0.9860702850237514  WHEN (+ (rt0.c1)) THEN x'' COLLATE RTRIM ELSE CASE rt0.c0  WHEN rt0.c0 THEN t1.c0 END END WHERE (((CAST(t1.c0 AS REAL)) IS TRUE)) ORDER BY CASE WHEN t1.c0 THEN ((rt0.c1) NOTNULL) WHEN t1.c0 COLLATE NOCASE THEN (+ (0.19636569560062334)) WHEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((t1.c0))) THEN ((rt0.c0) BETWEEN (t1.c0) AND (rt0.c2)) ELSE 0.44438686153460705 END ASC  NULLS FIRST;
SELECT ALL * FROM rt0, t1 INNER JOIN rt1 ON ((((((((((((((x'14bf')GLOB(rt0.c1)))AND((((rt0.c1, rt1.c1, rt1.c1))<=((rt0.c1, t1.c0, rt0.c2))))))AND(x'b296')))AND(CAST(t1.c0 AS INTEGER))))AND(rt1.c0 COLLATE RTRIM)))OR(t1.c0)))AND(((rt0.c2) NOT NULL))) WHERE ('0.9344922049798119') ORDER BY ((x'') NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (('0.9344922049798119') IS TRUE)  as count FROM rt0, t1 INNER JOIN rt1 ON ((((((((((((((x'14bf')GLOB(rt0.c1)))AND((((rt0.c1, rt1.c1, rt1.c1))<=((rt0.c1, t1.c0, rt0.c2))))))AND(x'b296')))AND(CAST(t1.c0 AS INTEGER))))AND(rt1.c0 COLLATE RTRIM)))OR(t1.c0)))AND(((rt0.c2) NOT NULL))) ORDER BY ((x'') NOTNULL) ASC);
SELECT ALL * FROM rt0, t1 INNER JOIN rt1 ON ((((((((((((((x'14bf')GLOB(rt0.c1)))AND((((rt0.c1, rt1.c1, rt1.c1))<=((rt0.c1, t1.c0, rt0.c2))))))AND(x'b296')))AND(CAST(t1.c0 AS INTEGER))))AND(rt1.c0 COLLATE RTRIM)))OR(t1.c0)))AND(((rt0.c2) NOT NULL))) WHERE ('0.9344922049798119') ORDER BY ((x'') NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (('0.9344922049798119') IS TRUE)  as count FROM rt0, t1 INNER JOIN rt1 ON ((((((((((((((x'14bf')GLOB(rt0.c1)))AND((((rt0.c1, rt1.c1, rt1.c1))<=((rt0.c1, t1.c0, rt0.c2))))))AND(x'b296')))AND(CAST(t1.c0 AS INTEGER))))AND(rt1.c0 COLLATE RTRIM)))OR(t1.c0)))AND(((rt0.c2) NOT NULL))) ORDER BY ((x'') NOTNULL) ASC);
SELECT ALL * FROM rt0, t1 INNER JOIN rt1 ON ((((((((((((((x'14bf')GLOB(rt0.c1)))AND((((rt0.c1, rt1.c1, rt1.c1))<=((rt0.c1, t1.c0, rt0.c2))))))AND(x'b296')))AND(CAST(t1.c0 AS INTEGER))))AND(rt1.c0 COLLATE RTRIM)))OR(t1.c0)))AND(((rt0.c2) NOT NULL))) WHERE ('0.9344922049798119') ORDER BY ((x'') NOTNULL) ASC;
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c2 AS BLOB) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS BLOB) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c2 AS BLOB) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS BLOB) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c2 AS BLOB) AS REAL));
SELECT ALL * FROM rt0, t1 WHERE (((HEX(rt0.c2)) BETWEEN (rt0.c1 COLLATE NOCASE) AND (x'bbf0')));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt0.c2)) BETWEEN (rt0.c1 COLLATE NOCASE) AND (x'bbf0'))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (((HEX(rt0.c2)) BETWEEN (rt0.c1 COLLATE NOCASE) AND (x'bbf0')));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt0.c2)) BETWEEN (rt0.c1 COLLATE NOCASE) AND (x'bbf0'))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (((HEX(rt0.c2)) BETWEEN (rt0.c1 COLLATE NOCASE) AND (x'bbf0')));
SELECT * FROM rt1, rt0 WHERE ((((+ (rt1.c1)))&(x''))) ORDER BY CASE rt1.c0  WHEN load_extension(rt1.c0, rt1.c2) THEN ((rt1.c1) NOT BETWEEN (x'') AND (rt0.c1)) ELSE ((rt0.c0)-(rt0.c2)) END ASC  NULLS FIRST, '-1585531809' ASC, ((((rt0.c0) NOTNULL)) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c1)))&(x''))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE rt1.c0  WHEN load_extension(rt1.c0, rt1.c2) THEN ((rt1.c1) NOT BETWEEN (x'') AND (rt0.c1)) ELSE ((rt0.c0)-(rt0.c2)) END ASC  NULLS FIRST, '-1585531809' ASC, ((((rt0.c0) NOTNULL)) IS TRUE) ASC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE ((((+ (rt1.c1)))&(x''))) ORDER BY CASE rt1.c0  WHEN load_extension(rt1.c0, rt1.c2) THEN ((rt1.c1) NOT BETWEEN (x'') AND (rt0.c1)) ELSE ((rt0.c0)-(rt0.c2)) END ASC  NULLS FIRST, '-1585531809' ASC, ((((rt0.c0) NOTNULL)) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c1)))&(x''))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE rt1.c0  WHEN load_extension(rt1.c0, rt1.c2) THEN ((rt1.c1) NOT BETWEEN (x'') AND (rt0.c1)) ELSE ((rt0.c0)-(rt0.c2)) END ASC  NULLS FIRST, '-1585531809' ASC, ((((rt0.c0) NOTNULL)) IS TRUE) ASC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (TIME(t1.c0, '-109842252', t1.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((TIME(t1.c0, '-109842252', t1.c0) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (TIME(t1.c0, '-109842252', t1.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((TIME(t1.c0, '-109842252', t1.c0) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (TIME(t1.c0, '-109842252', t1.c0) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((rt0.c0)|(rt0.c2)), (rt0.c0 IN ()), (NOT ('cU+')), ((((rt0.c2)AND(rt0.c2)))OR(NULL)), rt1.c0, ((rt1.c1)%(rt1.c0)), ((rt0.c2)IS NOT(rt0.c2))))<=(((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((rt1.c2)OR(rt1.c0)))AND(0.7775333977186041)), rt1.c1, ((rt0.c0)>=(rt0.c0)), (('>ORX')GLOB(rt0.c0)), ((rt1.c0) NOT NULL), ((rt1.c0) BETWEEN (rt0.c1) AND (1.1496396E9)))))) ORDER BY ((HEX(DISTINCT rt0.c1))<(((rt0.c0)-(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)|(rt0.c2)), (rt0.c0 IN ()), (NOT ('cU+')), ((((rt0.c2)AND(rt0.c2)))OR(NULL)), rt1.c0, ((rt1.c1)%(rt1.c0)), ((rt0.c2)IS NOT(rt0.c2))))<=(((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((rt1.c2)OR(rt1.c0)))AND(0.7775333977186041)), rt1.c1, ((rt0.c0)>=(rt0.c0)), (('>ORX')GLOB(rt0.c0)), ((rt1.c0) NOT NULL), ((rt1.c0) BETWEEN (rt0.c1) AND (1.1496396E9)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((HEX(DISTINCT rt0.c1))<(((rt0.c0)-(rt1.c1)))) DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((rt0.c0)|(rt0.c2)), (rt0.c0 IN ()), (NOT ('cU+')), ((((rt0.c2)AND(rt0.c2)))OR(NULL)), rt1.c0, ((rt1.c1)%(rt1.c0)), ((rt0.c2)IS NOT(rt0.c2))))<=(((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((rt1.c2)OR(rt1.c0)))AND(0.7775333977186041)), rt1.c1, ((rt0.c0)>=(rt0.c0)), (('>ORX')GLOB(rt0.c0)), ((rt1.c0) NOT NULL), ((rt1.c0) BETWEEN (rt0.c1) AND (1.1496396E9)))))) ORDER BY ((HEX(DISTINCT rt0.c1))<(((rt0.c0)-(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)|(rt0.c2)), (rt0.c0 IN ()), (NOT ('cU+')), ((((rt0.c2)AND(rt0.c2)))OR(NULL)), rt1.c0, ((rt1.c1)%(rt1.c0)), ((rt0.c2)IS NOT(rt0.c2))))<=(((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((rt1.c2)OR(rt1.c0)))AND(0.7775333977186041)), rt1.c1, ((rt0.c0)>=(rt0.c0)), (('>ORX')GLOB(rt0.c0)), ((rt1.c0) NOT NULL), ((rt1.c0) BETWEEN (rt0.c1) AND (1.1496396E9)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((HEX(DISTINCT rt0.c1))<(((rt0.c0)-(rt1.c1)))) DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((rt0.c0)|(rt0.c2)), (rt0.c0 IN ()), (NOT ('cU+')), ((((rt0.c2)AND(rt0.c2)))OR(NULL)), rt1.c0, ((rt1.c1)%(rt1.c0)), ((rt0.c2)IS NOT(rt0.c2))))<=(((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((rt1.c2)OR(rt1.c0)))AND(0.7775333977186041)), rt1.c1, ((rt0.c0)>=(rt0.c0)), (('>ORX')GLOB(rt0.c0)), ((rt1.c0) NOT NULL), ((rt1.c0) BETWEEN (rt0.c1) AND (1.1496396E9)))))) ORDER BY ((HEX(DISTINCT rt0.c1))<(((rt0.c0)-(rt1.c1)))) DESC;
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE ((rt1.c2 IN ())) ORDER BY (- (CASE rt1.c0  WHEN t1.c0 THEN rt1.c0 ELSE rt1.c1 END)), 0X582c0de3;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 IN ())) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY (- (CASE rt1.c0  WHEN t1.c0 THEN rt1.c0 ELSE rt1.c1 END)), 0X582c0de3);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE ((rt1.c2 IN ())) ORDER BY (- (CASE rt1.c0  WHEN t1.c0 THEN rt1.c0 ELSE rt1.c1 END)), 0X582c0de3;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 IN ())) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY (- (CASE rt1.c0  WHEN t1.c0 THEN rt1.c0 ELSE rt1.c1 END)), 0X582c0de3);
SELECT ALL * FROM rt1, rt0 WHERE (json_object(LOWER(DISTINCT rt0.c2), ((rt0.c1) BETWEEN (x'') AND (rt1.c1)), x'', ((rt0.c1)||(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_object(LOWER(DISTINCT rt0.c2), ((rt0.c1) BETWEEN (x'') AND (rt1.c1)), x'', ((rt0.c1)||(rt0.c1)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (json_object(LOWER(DISTINCT rt0.c2), ((rt0.c1) BETWEEN (x'') AND (rt1.c1)), x'', ((rt0.c1)||(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_object(LOWER(DISTINCT rt0.c2), ((rt0.c1) BETWEEN (x'') AND (rt1.c1)), x'', ((rt0.c1)||(rt0.c1)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE ((((((rt0.c1)>>(rt0.c2))))!=((((rt0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)>>(rt0.c2))))<>((((rt0.c0) NOTNULL))))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE ((((((rt0.c1)>>(rt0.c2))))!=((((rt0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)>>(rt0.c2))))<>((((rt0.c0) NOTNULL))))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE ((((((rt0.c1)>>(rt0.c2))))!=((((rt0.c0) NOTNULL)))));
SELECT * FROM t1, rt0 WHERE ((NOT (json_object(t1.c0, rt0.c2, rt0.c1, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (json_object(t1.c0, rt0.c2, rt0.c1, rt0.c1)))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE ((NOT (json_object(t1.c0, rt0.c2, rt0.c1, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (json_object(t1.c0, rt0.c2, rt0.c1, rt0.c1)))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE ((((~ (t1.c0))) ISNULL)) ORDER BY LIKELIHOOD(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END, 0.07312874008020787)  NULLS LAST, CAST(((rt0.c2)||(rt0.c2)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((~ (t1.c0))) ISNULL)) IS TRUE)  as count FROM t1, rt0 ORDER BY LIKELIHOOD(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END, 0.07312874008020787)  NULLS LAST, CAST(((rt0.c2)||(rt0.c2)) AS REAL));
SELECT * FROM t1, rt0 WHERE ((((~ (t1.c0))) ISNULL)) ORDER BY LIKELIHOOD(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END, 0.07312874008020787)  NULLS LAST, CAST(((rt0.c2)||(rt0.c2)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((~ (t1.c0))) ISNULL)) IS TRUE)  as count FROM t1, rt0 ORDER BY LIKELIHOOD(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END, 0.07312874008020787)  NULLS LAST, CAST(((rt0.c2)||(rt0.c2)) AS REAL));
SELECT * FROM t1, rt0 WHERE ((((~ (t1.c0))) ISNULL)) ORDER BY LIKELIHOOD(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END, 0.07312874008020787)  NULLS LAST, CAST(((rt0.c2)||(rt0.c2)) AS REAL);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt1.c1 COLLATE BINARY)>((rt1.c2 IN ())))) ORDER BY ((((((rt0.c0) NOT NULL))OR(((rt0.c0)<=(rt0.c1)))))AND((~ (0.013553890214945241)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY)>((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((rt0.c0) NOT NULL))OR(((rt0.c0)<=(rt0.c1)))))AND((~ (0.013553890214945241)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt1.c1 COLLATE BINARY)>((rt1.c2 IN ())))) ORDER BY ((((((rt0.c0) NOT NULL))OR(((rt0.c0)<=(rt0.c1)))))AND((~ (0.013553890214945241)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY)>((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((rt0.c0) NOT NULL))OR(((rt0.c0)<=(rt0.c1)))))AND((~ (0.013553890214945241)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt1.c1 COLLATE BINARY)>((rt1.c2 IN ())))) ORDER BY ((((((rt0.c0) NOT NULL))OR(((rt0.c0)<=(rt0.c1)))))AND((~ (0.013553890214945241)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((SQLITE_COMPILEOPTION_USED(rt1.c2))>>(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_USED(rt1.c2))>>(rt0.c2))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((SQLITE_COMPILEOPTION_USED(rt1.c2))>>(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_USED(rt1.c2))>>(rt0.c2))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((SQLITE_COMPILEOPTION_USED(rt1.c2))>>(rt0.c2)));
SELECT COUNT(*) FROM rt1 CROSS JOIN t1 ON ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c2))) NOT BETWEEN (LOWER(t1.c0)) AND (NULL)) WHERE ((CASE WHEN t1.c0 THEN rt1.c0 WHEN rt1.c1 THEN t1.c0 WHEN t1.c0 THEN rt1.c1 END IN ())) ORDER BY 0.9973620985864975;
SELECT SUM(count) FROM (SELECT (((CASE WHEN t1.c0 THEN rt1.c0 WHEN rt1.c1 THEN t1.c0 WHEN t1.c0 THEN rt1.c1 END IN ())) IS TRUE)  as count FROM rt1 CROSS JOIN t1 ON ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c2))) NOT BETWEEN (LOWER(t1.c0)) AND (NULL)) ORDER BY 0.9973620985864975);
SELECT COUNT(*) FROM rt1 CROSS JOIN t1 ON ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c2))) NOT BETWEEN (LOWER(t1.c0)) AND (NULL)) WHERE ((CASE WHEN t1.c0 THEN rt1.c0 WHEN rt1.c1 THEN t1.c0 WHEN t1.c0 THEN rt1.c1 END IN ())) ORDER BY 0.9973620985864975;
SELECT SUM(count) FROM (SELECT (((CASE WHEN t1.c0 THEN rt1.c0 WHEN rt1.c1 THEN t1.c0 WHEN t1.c0 THEN rt1.c1 END IN ())) IS TRUE)  as count FROM rt1 CROSS JOIN t1 ON ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c2))) NOT BETWEEN (LOWER(t1.c0)) AND (NULL)) ORDER BY 0.9973620985864975);
SELECT COUNT(*) FROM rt1 CROSS JOIN t1 ON ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c2))) NOT BETWEEN (LOWER(t1.c0)) AND (NULL)) WHERE ((CASE WHEN t1.c0 THEN rt1.c0 WHEN rt1.c1 THEN t1.c0 WHEN t1.c0 THEN rt1.c1 END IN ())) ORDER BY 0.9973620985864975;
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((rt1.c1) NOT BETWEEN ('cb') AND (NULL))) BETWEEN (rt1.c1) AND (CAST(rt1.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN ('cb') AND (NULL))) BETWEEN (rt1.c1) AND (CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((rt1.c1) NOT BETWEEN ('cb') AND (NULL))) BETWEEN (rt1.c1) AND (CAST(rt1.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN ('cb') AND (NULL))) BETWEEN (rt1.c1) AND (CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((rt1.c1) NOT BETWEEN ('cb') AND (NULL))) BETWEEN (rt1.c1) AND (CAST(rt1.c2 AS INTEGER))));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT ALL * FROM t1, rt0 WHERE ((((json_object(rt0.c1, rt0.c2)))<>(((rt0.c2 IN ()))))) ORDER BY t1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((json_object(rt0.c1, rt0.c2)))<>(((rt0.c2 IN ()))))) IS TRUE)  as count FROM t1, rt0 ORDER BY t1.c0  NULLS FIRST);
SELECT ALL * FROM t1, rt0 WHERE ((((json_object(rt0.c1, rt0.c2)))<>(((rt0.c2 IN ()))))) ORDER BY t1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((json_object(rt0.c1, rt0.c2)))<>(((rt0.c2 IN ()))))) IS TRUE)  as count FROM t1, rt0 ORDER BY t1.c0  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((rt1.c0 COLLATE RTRIM IN (((rt1.c1)||(rt1.c2))))) ORDER BY (('-479320747')>>(((x'') ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 COLLATE RTRIM IN (((rt1.c1)||(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (('-479320747')>>(((x'') ISNULL))) DESC);
SELECT ALL * FROM rt1 WHERE ((rt1.c0 COLLATE RTRIM IN (((rt1.c1)||(rt1.c2))))) ORDER BY (('-479320747')>>(((x'') ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 COLLATE RTRIM IN (((rt1.c1)||(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (('-479320747')>>(((x'') ISNULL))) DESC);
SELECT ALL * FROM rt1 WHERE ((rt1.c0 COLLATE RTRIM IN (((rt1.c1)||(rt1.c2))))) ORDER BY (('-479320747')>>(((x'') ISNULL))) DESC;
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (CAST(CAST(rt0.c2 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (CAST(CAST(rt0.c2 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (CAST(CAST(rt0.c2 AS BLOB) AS INTEGER));
SELECT ALL * FROM rt1 WHERE (CAST((((rt1.c0, rt1.c2, rt1.c2))<((rt1.c1, rt1.c2, rt1.c0))) AS TEXT)) ORDER BY rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c0, rt1.c2, rt1.c2))<((rt1.c1, rt1.c2, rt1.c0))) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CAST((((rt1.c0, rt1.c2, rt1.c2))<((rt1.c1, rt1.c2, rt1.c0))) AS TEXT)) ORDER BY rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c0, rt1.c2, rt1.c2))<((rt1.c1, rt1.c2, rt1.c0))) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CAST((((rt1.c0, rt1.c2, rt1.c2))<((rt1.c1, rt1.c2, rt1.c0))) AS TEXT)) ORDER BY rt1.c2  NULLS FIRST;
SELECT ALL * FROM t1, rt0 WHERE (((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(CAST(rt0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((rt1.c1)==(x'5b7b7a46')))LIKE(((t1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)=(x'5b7b7a46')))LIKE(((t1.c0) NOT NULL)))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((rt1.c1)==(x'5b7b7a46')))LIKE(((t1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)=(x'5b7b7a46')))LIKE(((t1.c0) NOT NULL)))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((rt1.c1)==(x'5b7b7a46')))LIKE(((t1.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, NULL, t1.c0)) AND ((t1.c0, t1.c0, '\n㏀6')))))<=((((t1.c0)|(t1.c0)))))) ORDER BY (((t1.c0 IN ()))>>(((t1.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, NULL, t1.c0)) AND ((t1.c0, t1.c0, '\n㏀6')))))<=((((t1.c0)|(t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0 IN ()))>>(((t1.c0) IS FALSE))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, NULL, t1.c0)) AND ((t1.c0, t1.c0, '\n㏀6')))))<=((((t1.c0)|(t1.c0)))))) ORDER BY (((t1.c0 IN ()))>>(((t1.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, NULL, t1.c0)) AND ((t1.c0, t1.c0, '\n㏀6')))))<=((((t1.c0)|(t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0 IN ()))>>(((t1.c0) IS FALSE))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, NULL, t1.c0)) AND ((t1.c0, t1.c0, '\n㏀6')))))<=((((t1.c0)|(t1.c0)))))) ORDER BY (((t1.c0 IN ()))>>(((t1.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE ((- (0Xffffffffb489f3cc))) ORDER BY CASE WHEN (t1.c0 IN ()) THEN t1.c0 COLLATE RTRIM END DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (0Xffffffffb489f3cc))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN (t1.c0 IN ()) THEN t1.c0 COLLATE RTRIM END DESC);
SELECT * FROM t1 WHERE ((- (0Xffffffffb489f3cc))) ORDER BY CASE WHEN (t1.c0 IN ()) THEN t1.c0 COLLATE RTRIM END DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (0Xffffffffb489f3cc))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN (t1.c0 IN ()) THEN t1.c0 COLLATE RTRIM END DESC);
SELECT * FROM t1 WHERE ((- (0Xffffffffb489f3cc))) ORDER BY CASE WHEN (t1.c0 IN ()) THEN t1.c0 COLLATE RTRIM END DESC;
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON rt0.c0 WHERE ((('0.7112172745209505') NOTNULL)) ORDER BY CAST(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c0 END AS BLOB) DESC, ((((((0.3253230195232323)||(rt1.c1)))AND(((rt1.c0)GLOB(rt1.c2)))))OR(((((-1649427014)OR(rt1.c1)))AND(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('0.7112172745209505') NOTNULL)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON rt0.c0 ORDER BY CAST(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c0 END AS BLOB) DESC, ((((((0.3253230195232323)||(rt1.c1)))AND(((rt1.c0)GLOB(rt1.c2)))))OR(((((-1649427014)OR(rt1.c1)))AND(rt0.c0))))  NULLS FIRST);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON rt0.c0 WHERE ((('0.7112172745209505') NOTNULL)) ORDER BY CAST(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c0 END AS BLOB) DESC, ((((((0.3253230195232323)||(rt1.c1)))AND(((rt1.c0)GLOB(rt1.c2)))))OR(((((-1649427014)OR(rt1.c1)))AND(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('0.7112172745209505') NOTNULL)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON rt0.c0 ORDER BY CAST(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c0 END AS BLOB) DESC, ((((((0.3253230195232323)||(rt1.c1)))AND(((rt1.c0)GLOB(rt1.c2)))))OR(((((-1649427014)OR(rt1.c1)))AND(rt0.c0))))  NULLS FIRST);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON rt0.c0 WHERE ((('0.7112172745209505') NOTNULL)) ORDER BY CAST(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c0 END AS BLOB) DESC, ((((((0.3253230195232323)||(rt1.c1)))AND(((rt1.c0)GLOB(rt1.c2)))))OR(((((-1649427014)OR(rt1.c1)))AND(rt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOTNULL) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END ELSE CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END END) ORDER BY (~ (rt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) NOTNULL) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END ELSE CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END END) IS TRUE)  as count FROM rt0 ORDER BY (~ (rt0.c1)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOTNULL) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END ELSE CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END END) ORDER BY (~ (rt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) NOTNULL) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END ELSE CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END END) IS TRUE)  as count FROM rt0 ORDER BY (~ (rt0.c1)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOTNULL) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END ELSE CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END END) ORDER BY (~ (rt0.c1)) DESC;
SELECT * FROM rt0, rt1 WHERE (((rt1.c1) NOT BETWEEN (0.1448603364762524) AND (CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) NOT BETWEEN (0.1448603364762524) AND (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((rt1.c1) NOT BETWEEN (0.1448603364762524) AND (CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) NOT BETWEEN (0.1448603364762524) AND (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((rt1.c1) NOT BETWEEN (0.1448603364762524) AND (CAST(rt0.c0 AS INTEGER))));
SELECT * FROM rt0, t1 WHERE (CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (CAST(NULL AS INTEGER));
SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON (~ (CAST(t1.c0 AS BLOB))) CROSS JOIN rt1 ON (((((((t1.c0))>((NULL))))OR((('g\2')GLOB(rt1.c0)))))AND(((((rt0.c1)OR(rt1.c1)))AND(rt1.c2)))) WHERE ((~ (CAST(-831430155 AS TEXT)))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(-831430155 AS TEXT)))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (~ (CAST(t1.c0 AS BLOB))) CROSS JOIN rt1 ON (((((((t1.c0))>((NULL))))OR((('g\2')GLOB(rt1.c0)))))AND(((((rt0.c1)OR(rt1.c1)))AND(rt1.c2)))) ORDER BY rt0.c1);
SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON (~ (CAST(t1.c0 AS BLOB))) CROSS JOIN rt1 ON (((((((t1.c0))>((NULL))))OR((('g\2')GLOB(rt1.c0)))))AND(((((rt0.c1)OR(rt1.c1)))AND(rt1.c2)))) WHERE ((~ (CAST(-831430155 AS TEXT)))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(-831430155 AS TEXT)))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (~ (CAST(t1.c0 AS BLOB))) CROSS JOIN rt1 ON (((((((t1.c0))>((NULL))))OR((('g\2')GLOB(rt1.c0)))))AND(((((rt0.c1)OR(rt1.c1)))AND(rt1.c2)))) ORDER BY rt0.c1);
SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON (~ (CAST(t1.c0 AS BLOB))) CROSS JOIN rt1 ON (((((((t1.c0))>((NULL))))OR((('g\2')GLOB(rt1.c0)))))AND(((((rt0.c1)OR(rt1.c1)))AND(rt1.c2)))) WHERE ((~ (CAST(-831430155 AS TEXT)))) ORDER BY rt0.c1;
SELECT ALL COUNT(*) FROM rt0 WHERE (0.08664589979521675);
SELECT SUM(count) FROM (SELECT ((0.08664589979521675) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.08664589979521675);
SELECT SUM(count) FROM (SELECT ((0.08664589979521675) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.08664589979521675);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN t1 ON ((rt0.c2 COLLATE BINARY) BETWEEN (x'' COLLATE BINARY) AND ((((t1.c0))!=((rt1.c1))))) FULL OUTER JOIN rt0 ON rt0.c0 WHERE (((CAST(rt0.c0 AS INTEGER)) IS FALSE)) ORDER BY (NOT (rt0.c2)) COLLATE BINARY ASC  NULLS FIRST, ((((((((1955347281)OR(((t1.c0)>>(rt1.c2)))))AND((rt0.c1 IN (t1.c0)))))AND(CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c1 END)))AND(((rt1.c1)<<(''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t1 ON ((rt0.c2 COLLATE BINARY) BETWEEN (x'' COLLATE BINARY) AND ((((t1.c0))<>((rt1.c1))))) FULL OUTER JOIN rt0 ON rt0.c0 ORDER BY (NOT (rt0.c2)) COLLATE BINARY ASC  NULLS FIRST, ((((((((1955347281)OR(((t1.c0)>>(rt1.c2)))))AND((rt0.c1 IN (t1.c0)))))AND(CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c1 END)))AND(((rt1.c1)<<(''))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN t1 ON ((rt0.c2 COLLATE BINARY) BETWEEN (x'' COLLATE BINARY) AND ((((t1.c0))!=((rt1.c1))))) FULL OUTER JOIN rt0 ON rt0.c0 WHERE (((CAST(rt0.c0 AS INTEGER)) IS FALSE)) ORDER BY (NOT (rt0.c2)) COLLATE BINARY ASC  NULLS FIRST, ((((((((1955347281)OR(((t1.c0)>>(rt1.c2)))))AND((rt0.c1 IN (t1.c0)))))AND(CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c1 END)))AND(((rt1.c1)<<(''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t1 ON ((rt0.c2 COLLATE BINARY) BETWEEN (x'' COLLATE BINARY) AND ((((t1.c0))<>((rt1.c1))))) FULL OUTER JOIN rt0 ON rt0.c0 ORDER BY (NOT (rt0.c2)) COLLATE BINARY ASC  NULLS FIRST, ((((((((1955347281)OR(((t1.c0)>>(rt1.c2)))))AND((rt0.c1 IN (t1.c0)))))AND(CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c1 END)))AND(((rt1.c1)<<(''))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (0.8096600097032287);
SELECT SUM(count) FROM (SELECT ALL ((0.8096600097032287) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (0.8096600097032287);
SELECT SUM(count) FROM (SELECT ALL ((0.8096600097032287) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (0.8096600097032287);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (0.3470392702707604);
SELECT SUM(count) FROM (SELECT ALL ((0.3470392702707604) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (0.3470392702707604);
SELECT SUM(count) FROM (SELECT ALL ((0.3470392702707604) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (0.3470392702707604);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((NULL) IS TRUE)) NOT NULL) WHERE (((((rt0.c1) NOT BETWEEN ('0.7157872678657614') AND (rt1.c1)))<(HEX(DISTINCT rt0.c0)))) ORDER BY 'v'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN ('0.7157872678657614') AND (rt1.c1)))<(HEX(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((NULL) IS TRUE)) NOT NULL) ORDER BY 'v'  NULLS FIRST);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((NULL) IS TRUE)) NOT NULL) WHERE (((((rt0.c1) NOT BETWEEN ('0.7157872678657614') AND (rt1.c1)))<(HEX(DISTINCT rt0.c0)))) ORDER BY 'v'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN ('0.7157872678657614') AND (rt1.c1)))<(HEX(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((NULL) IS TRUE)) NOT NULL) ORDER BY 'v'  NULLS FIRST);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((NULL) IS TRUE)) NOT NULL) WHERE (((((rt0.c1) NOT BETWEEN ('0.7157872678657614') AND (rt1.c1)))<(HEX(DISTINCT rt0.c0)))) ORDER BY 'v'  NULLS FIRST;
SELECT * FROM rt1, rt0, t1 INDEXED BY i0 WHERE (CASE CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN t1.c0 WHEN rt0.c0 THEN rt0.c2 END  WHEN CAST(rt0.c1 AS REAL) THEN LOWER(DISTINCT rt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN t1.c0 WHEN rt0.c0 THEN rt0.c2 END  WHEN CAST(rt0.c1 AS REAL) THEN LOWER(DISTINCT rt1.c0) END) IS TRUE)  as count FROM rt1, rt0, t1 INDEXED BY i0);
SELECT * FROM rt1, rt0, t1 INDEXED BY i0 WHERE (CASE CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN t1.c0 WHEN rt0.c0 THEN rt0.c2 END  WHEN CAST(rt0.c1 AS REAL) THEN LOWER(DISTINCT rt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN t1.c0 WHEN rt0.c0 THEN rt0.c2 END  WHEN CAST(rt0.c1 AS REAL) THEN LOWER(DISTINCT rt1.c0) END) IS TRUE)  as count FROM rt1, rt0, t1 INDEXED BY i0);
SELECT ALL * FROM t1, rt1, rt0 WHERE ((((((((rt1.c1)) NOT BETWEEN (('1401228756')) AND ((t1.c0))))AND('2046549916')))OR(CAST(rt0.c0 AS REAL)))) ORDER BY (((rt1.c2)) BETWEEN ((t1.c0)) AND ((rt1.c1))), CASE WHEN CAST(rt1.c2 AS REAL) THEN '-1195399847' WHEN (+ (rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt1.c2 ELSE t1.c0 END WHEN ((rt1.c0) NOTNULL) THEN COALESCE(rt0.c0, rt0.c1) END;
SELECT SUM(count) FROM (SELECT (((((((((rt1.c1)) NOT BETWEEN (('1401228756')) AND ((t1.c0))))AND('2046549916')))OR(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY (((rt1.c2)) BETWEEN ((t1.c0)) AND ((rt1.c1))), CASE WHEN CAST(rt1.c2 AS REAL) THEN '-1195399847' WHEN (+ (rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt1.c2 ELSE t1.c0 END WHEN ((rt1.c0) NOTNULL) THEN COALESCE(rt0.c0, rt0.c1) END);
SELECT ALL * FROM t1, rt1, rt0 WHERE ((((((((rt1.c1)) NOT BETWEEN (('1401228756')) AND ((t1.c0))))AND('2046549916')))OR(CAST(rt0.c0 AS REAL)))) ORDER BY (((rt1.c2)) BETWEEN ((t1.c0)) AND ((rt1.c1))), CASE WHEN CAST(rt1.c2 AS REAL) THEN '-1195399847' WHEN (+ (rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt1.c2 ELSE t1.c0 END WHEN ((rt1.c0) NOTNULL) THEN COALESCE(rt0.c0, rt0.c1) END;
SELECT SUM(count) FROM (SELECT (((((((((rt1.c1)) NOT BETWEEN (('1401228756')) AND ((t1.c0))))AND('2046549916')))OR(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY (((rt1.c2)) BETWEEN ((t1.c0)) AND ((rt1.c1))), CASE WHEN CAST(rt1.c2 AS REAL) THEN '-1195399847' WHEN (+ (rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt1.c2 ELSE t1.c0 END WHEN ((rt1.c0) NOTNULL) THEN COALESCE(rt0.c0, rt0.c1) END);
SELECT ALL * FROM t1, rt1, rt0 WHERE ((((((((rt1.c1)) NOT BETWEEN (('1401228756')) AND ((t1.c0))))AND('2046549916')))OR(CAST(rt0.c0 AS REAL)))) ORDER BY (((rt1.c2)) BETWEEN ((t1.c0)) AND ((rt1.c1))), CASE WHEN CAST(rt1.c2 AS REAL) THEN '-1195399847' WHEN (+ (rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt1.c2 ELSE t1.c0 END WHEN ((rt1.c0) NOTNULL) THEN COALESCE(rt0.c0, rt0.c1) END;
SELECT * FROM t1 WHERE ((((((t1.c0 IN (NULL)))AND((t1.c0 IN ()))))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN NULL WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN 0X30fc70f7 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((t1.c0 IN (NULL)))AND((t1.c0 IN ()))))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN NULL WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN 0X30fc70f7 THEN t1.c0 END))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((t1.c0 IN (NULL)))AND((t1.c0 IN ()))))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN NULL WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN 0X30fc70f7 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((t1.c0 IN (NULL)))AND((t1.c0 IN ()))))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN NULL WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN 0X30fc70f7 THEN t1.c0 END))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((t1.c0 IN (NULL)))AND((t1.c0 IN ()))))OR(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN NULL WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN 0X30fc70f7 THEN t1.c0 END)));
SELECT ALL * FROM rt0, rt1, t1 WHERE ((((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt0.c1))))<=((~ (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt0.c1))))<=((~ (t1.c0))))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL * FROM rt0, rt1, t1 WHERE ((((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt0.c1))))<=((~ (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt0.c1))))<=((~ (t1.c0))))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL * FROM rt0, rt1, t1 WHERE ((((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt0.c1))))<=((~ (t1.c0)))));
SELECT * FROM t1, rt1 WHERE (((rt1.c1 COLLATE BINARY)GLOB((NOT (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY)GLOB((NOT (t1.c0))))) IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE (((rt1.c1 COLLATE BINARY)GLOB((NOT (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY)GLOB((NOT (t1.c0))))) IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE (((rt1.c1 COLLATE BINARY)GLOB((NOT (t1.c0)))));
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (TOTAL_CHANGES()) ORDER BY ((((((rt0.c0)<(rt0.c0)))AND(((rt0.c0) NOT BETWEEN ('906527393') AND (rt0.c1)))))AND(((((t1.c0)OR(x'')))AND(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((((rt0.c0)<(rt0.c0)))AND(((rt0.c0) NOT BETWEEN ('906527393') AND (rt0.c1)))))AND(((((t1.c0)OR(x'')))AND(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (TOTAL_CHANGES()) ORDER BY ((((((rt0.c0)<(rt0.c0)))AND(((rt0.c0) NOT BETWEEN ('906527393') AND (rt0.c1)))))AND(((((t1.c0)OR(x'')))AND(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((((rt0.c0)<(rt0.c0)))AND(((rt0.c0) NOT BETWEEN ('906527393') AND (rt0.c1)))))AND(((((t1.c0)OR(x'')))AND(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (TOTAL_CHANGES()) ORDER BY ((((((rt0.c0)<(rt0.c0)))AND(((rt0.c0) NOT BETWEEN ('906527393') AND (rt0.c1)))))AND(((((t1.c0)OR(x'')))AND(rt0.c0)))) ASC;
SELECT ALL * FROM rt0, t1 WHERE (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END COLLATE NOCASE) ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))), ((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))OR(CASE t1.c0  WHEN rt0.c0 THEN '2145622482' ELSE '&	~' END)))AND((t1.c0 IN (rt0.c0)))))OR(((rt0.c0)||(t1.c0)))))AND((+ (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))), ((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))OR(CASE t1.c0  WHEN rt0.c0 THEN '2145622482' ELSE '&	~' END)))AND((t1.c0 IN (rt0.c0)))))OR(((rt0.c0)||(t1.c0)))))AND((+ (rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0, t1 WHERE (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END COLLATE NOCASE) ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))), ((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))OR(CASE t1.c0  WHEN rt0.c0 THEN '2145622482' ELSE '&	~' END)))AND((t1.c0 IN (rt0.c0)))))OR(((rt0.c0)||(t1.c0)))))AND((+ (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))), ((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))OR(CASE t1.c0  WHEN rt0.c0 THEN '2145622482' ELSE '&	~' END)))AND((t1.c0 IN (rt0.c0)))))OR(((rt0.c0)||(t1.c0)))))AND((+ (rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0, t1 WHERE (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END COLLATE NOCASE) ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))), ((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))OR(CASE t1.c0  WHEN rt0.c0 THEN '2145622482' ELSE '&	~' END)))AND((t1.c0 IN (rt0.c0)))))OR(((rt0.c0)||(t1.c0)))))AND((+ (rt0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (((t1.c0)) BETWEEN ((0x1ed8c33f)) AND ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))))) INNER JOIN t1 ON CAST(json_object(rt0.c2, NULL) AS NUMERIC) WHERE (CAST(t1.c0 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (((t1.c0)) BETWEEN ((0X1ed8c33f)) AND ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))))) INNER JOIN t1 ON CAST(json_object(rt0.c2, NULL) AS NUMERIC));
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (((t1.c0)) BETWEEN ((0x1ed8c33f)) AND ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))))) INNER JOIN t1 ON CAST(json_object(rt0.c2, NULL) AS NUMERIC) WHERE (CAST(t1.c0 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (((t1.c0)) BETWEEN ((0X1ed8c33f)) AND ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))))) INNER JOIN t1 ON CAST(json_object(rt0.c2, NULL) AS NUMERIC));
SELECT COUNT(*) FROM rt1 WHERE (json_extract((~ (x'a7fc')), ((rt1.c0)>>(rt1.c0)))) ORDER BY (CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN x'' THEN rt1.c2 ELSE 0.6065555772517184 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((json_extract((~ (x'a7fc')), ((rt1.c0)>>(rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY (CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN x'' THEN rt1.c2 ELSE 0.6065555772517184 END IN ()) ASC);
SELECT COUNT(*) FROM rt1 WHERE (json_extract((~ (x'a7fc')), ((rt1.c0)>>(rt1.c0)))) ORDER BY (CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN x'' THEN rt1.c2 ELSE 0.6065555772517184 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((json_extract((~ (x'a7fc')), ((rt1.c0)>>(rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY (CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN x'' THEN rt1.c2 ELSE 0.6065555772517184 END IN ()) ASC);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (((NULL) NOT NULL));
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (LIKELY((~ (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((~ (rt1.c0)))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (LIKELY((~ (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((~ (rt1.c0)))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (LIKELY((~ (rt1.c0))));
SELECT ALL * FROM rt1, t1 WHERE ((((rt1.c2 IN ()))AND(((rt1.c1) NOT BETWEEN (-968414977) AND (rt1.c2))))) ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c2)=(t1.c0)))) AND ((JULIANDAY(t1.c0, rt1.c1, t1.c0, rt1.c0, rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN ()))AND(((rt1.c1) NOT BETWEEN (-968414977) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, t1 ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c2)==(t1.c0)))) AND ((JULIANDAY(t1.c0, rt1.c1, t1.c0, rt1.c0, rt1.c2))))  NULLS LAST);
SELECT ALL * FROM rt1, t1 WHERE ((((rt1.c2 IN ()))AND(((rt1.c1) NOT BETWEEN (-968414977) AND (rt1.c2))))) ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c2)=(t1.c0)))) AND ((JULIANDAY(t1.c0, rt1.c1, t1.c0, rt1.c0, rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN ()))AND(((rt1.c1) NOT BETWEEN (-968414977) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, t1 ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c2)==(t1.c0)))) AND ((JULIANDAY(t1.c0, rt1.c1, t1.c0, rt1.c0, rt1.c2))))  NULLS LAST);
SELECT ALL * FROM rt1, t1 WHERE ((((rt1.c2 IN ()))AND(((rt1.c1) NOT BETWEEN (-968414977) AND (rt1.c2))))) ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c2)=(t1.c0)))) AND ((JULIANDAY(t1.c0, rt1.c1, t1.c0, rt1.c0, rt1.c2))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((- (-792708081)));
SELECT SUM(count) FROM (SELECT (((- (-792708081))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((- (-792708081)));
SELECT SUM(count) FROM (SELECT (((- (-792708081))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((- (-792708081)));
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (((((0xffffffffce0976b3)-(t1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((0xffffffffce0976b3)-(t1.c0))) IS FALSE)) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (((((0xffffffffce0976b3)-(t1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((0xffffffffce0976b3)-(t1.c0))) IS FALSE)) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (((((0xffffffffce0976b3)-(t1.c0))) IS FALSE));
SELECT * FROM rt0 FULL OUTER JOIN t1 ON ((0.07866869302505342)>>(((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))) WHERE ((((CASE WHEN t1.c0 THEN rt0.c1 END, (rt0.c2 IN (rt0.c0)), UPPER(rt0.c2)))=((((rt0.c1)-(rt0.c2)), t1.c0, ABS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t1.c0 THEN rt0.c1 END, (rt0.c2 IN (rt0.c0)), UPPER(rt0.c2)))=((((rt0.c1)-(rt0.c2)), t1.c0, ABS(rt0.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON ((0.07866869302505342)>>(((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))));
SELECT * FROM rt0 FULL OUTER JOIN t1 ON ((0.07866869302505342)>>(((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))) WHERE ((((CASE WHEN t1.c0 THEN rt0.c1 END, (rt0.c2 IN (rt0.c0)), UPPER(rt0.c2)))=((((rt0.c1)-(rt0.c2)), t1.c0, ABS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t1.c0 THEN rt0.c1 END, (rt0.c2 IN (rt0.c0)), UPPER(rt0.c2)))=((((rt0.c1)-(rt0.c2)), t1.c0, ABS(rt0.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON ((0.07866869302505342)>>(((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))));
SELECT * FROM rt0 FULL OUTER JOIN t1 ON ((0.07866869302505342)>>(((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))) WHERE ((((CASE WHEN t1.c0 THEN rt0.c1 END, (rt0.c2 IN (rt0.c0)), UPPER(rt0.c2)))=((((rt0.c1)-(rt0.c2)), t1.c0, ABS(rt0.c1)))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST((((rt0.c0))<((rt0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0))<((rt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST((((rt0.c0))<((rt0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0))<((rt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST((((rt0.c0))<((rt0.c0))) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE (('1689740142' IN (((rt0.c0)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((('1689740142' IN (((rt0.c0)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (('1689740142' IN (((rt0.c0)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((('1689740142' IN (((rt0.c0)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (('1689740142' IN (((rt0.c0)IS NOT(rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c1)))>=(CAST(rt0.c2 AS INTEGER)))) ORDER BY (~ ((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))>=(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY (~ ((rt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c1)))>=(CAST(rt0.c2 AS INTEGER)))) ORDER BY (~ ((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))>=(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY (~ ((rt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c1)))>=(CAST(rt0.c2 AS INTEGER)))) ORDER BY (~ ((rt0.c0 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (HEX('hU')) ORDER BY ((((((rt0.c2)OR(rt1.c0)))AND(t1.c0)))<((((rt1.c1))<((rt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX('hU')) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY ((((((rt0.c2)OR(rt1.c0)))AND(t1.c0)))<((((rt1.c1))<((rt1.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (HEX('hU')) ORDER BY ((((((rt0.c2)OR(rt1.c0)))AND(t1.c0)))<((((rt1.c1))<((rt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX('hU')) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY ((((((rt0.c2)OR(rt1.c0)))AND(t1.c0)))<((((rt1.c1))<((rt1.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (HEX('hU')) ORDER BY ((((((rt0.c2)OR(rt1.c0)))AND(t1.c0)))<((((rt1.c1))<((rt1.c0))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((rt1.c0 COLLATE BINARY)*(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE BINARY)*(NULL))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((rt1.c0 COLLATE BINARY)*(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE BINARY)*(NULL))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((rt1.c0 COLLATE BINARY)*(NULL)));
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c2 WHERE ((~ ((rt0.c2 IN ())))) ORDER BY ((rt0.c2)GLOB(rt0.c0)) ASC  NULLS LAST, ((((rt1.c0) NOTNULL))|('-383594855'));
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c2 ORDER BY ((rt0.c2)GLOB(rt0.c0)) ASC  NULLS LAST, ((((rt1.c0) NOTNULL))|('-383594855')));
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c2 WHERE ((~ ((rt0.c2 IN ())))) ORDER BY ((rt0.c2)GLOB(rt0.c0)) ASC  NULLS LAST, ((((rt1.c0) NOTNULL))|('-383594855'));
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c2 ORDER BY ((rt0.c2)GLOB(rt0.c0)) ASC  NULLS LAST, ((((rt1.c0) NOTNULL))|('-383594855')));
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c2 WHERE ((~ ((rt0.c2 IN ())))) ORDER BY ((rt0.c2)GLOB(rt0.c0)) ASC  NULLS LAST, ((((rt1.c0) NOTNULL))|('-383594855'));
SELECT COUNT(*) FROM rt1 INDEXED BY i93 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 INDEXED BY i93);
SELECT COUNT(*) FROM rt1 INDEXED BY i93 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 INDEXED BY i93);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t1 ON rt1.c2 INNER JOIN rt1 ON x'' COLLATE NOCASE COLLATE NOCASE WHERE (((((rt0.c0)&(rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)&(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON rt1.c2 INNER JOIN rt1 ON x'' COLLATE NOCASE COLLATE NOCASE);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t1 ON rt1.c2 INNER JOIN rt1 ON x'' COLLATE NOCASE COLLATE NOCASE WHERE (((((rt0.c0)&(rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)&(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON rt1.c2 INNER JOIN rt1 ON x'' COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE (IFNULL(CASE WHEN NULL THEN rt1.c2 ELSE rt1.c0 END, ((rt1.c0)IS NOT(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((IFNULL(CASE WHEN NULL THEN rt1.c2 ELSE rt1.c0 END, ((rt1.c0)IS NOT(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (IFNULL(CASE WHEN NULL THEN rt1.c2 ELSE rt1.c0 END, ((rt1.c0)IS NOT(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((IFNULL(CASE WHEN NULL THEN rt1.c2 ELSE rt1.c0 END, ((rt1.c0)IS NOT(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (IFNULL(CASE WHEN NULL THEN rt1.c2 ELSE rt1.c0 END, ((rt1.c0)IS NOT(rt1.c1))));
SELECT * FROM t1 LEFT OUTER JOIN rt1 ON ((rt1.c1)-(((rt1.c2)>=(rt1.c1)))) WHERE ((((rt1.c1)) BETWEEN (((rt1.c0 IN (t1.c0)))) AND (('')))) ORDER BY CAST(rt1.c2 AS REAL) COLLATE RTRIM ASC, ((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0))) BETWEEN (rt1.c1) AND (((rt1.c2)%(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN (((rt1.c0 IN (t1.c0)))) AND (('')))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt1 ON ((rt1.c1)-(((rt1.c2)>=(rt1.c1)))) ORDER BY CAST(rt1.c2 AS REAL) COLLATE RTRIM ASC, ((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0))) BETWEEN (rt1.c1) AND (((rt1.c2)%(rt1.c0)))) ASC);
SELECT * FROM t1 LEFT OUTER JOIN rt1 ON ((rt1.c1)-(((rt1.c2)>=(rt1.c1)))) WHERE ((((rt1.c1)) BETWEEN (((rt1.c0 IN (t1.c0)))) AND (('')))) ORDER BY CAST(rt1.c2 AS REAL) COLLATE RTRIM ASC, ((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0))) BETWEEN (rt1.c1) AND (((rt1.c2)%(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN (((rt1.c0 IN (t1.c0)))) AND (('')))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt1 ON ((rt1.c1)-(((rt1.c2)>=(rt1.c1)))) ORDER BY CAST(rt1.c2 AS REAL) COLLATE RTRIM ASC, ((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0))) BETWEEN (rt1.c1) AND (((rt1.c2)%(rt1.c0)))) ASC);
SELECT * FROM t1 LEFT OUTER JOIN rt1 ON ((rt1.c1)-(((rt1.c2)>=(rt1.c1)))) WHERE ((((rt1.c1)) BETWEEN (((rt1.c0 IN (t1.c0)))) AND (('')))) ORDER BY CAST(rt1.c2 AS REAL) COLLATE RTRIM ASC, ((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0))) BETWEEN (rt1.c1) AND (((rt1.c2)%(rt1.c0)))) ASC;
SELECT COUNT(*) FROM rt0, t1 WHERE (CAST(rt0.c1 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (CAST(rt0.c1 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (CAST(rt0.c1 AS TEXT) COLLATE BINARY);
SELECT ALL * FROM t1, rt0, rt1 WHERE (x'2ceb');
SELECT SUM(count) FROM (SELECT ALL ((x'2ceb') IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL * FROM t1, rt0, rt1 WHERE (x'2ceb');
SELECT SUM(count) FROM (SELECT ALL ((x'2ceb') IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL * FROM t1, rt0, rt1 WHERE (x'2ceb');
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE ((NOT ((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (rt0.c0))))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE ((NOT ((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (rt0.c0))))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE ((NOT ((- (rt0.c0)))));
SELECT * FROM rt0, t1, rt1 WHERE (((((rt0.c2)AND((rt0.c2 IN ()))))AND(((rt1.c1) NOT BETWEEN (t1.c0) AND (NULL))))) ORDER BY CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN rt0.c2 WHEN t1.c0 THEN rt1.c0 ELSE rt1.c0 END  WHEN ((x'')<(rt1.c1)) THEN ((rt0.c0) NOTNULL) ELSE (((t1.c0, rt0.c1, t1.c0))<((rt0.c1, rt1.c0, 0.7130918732346447))) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND((rt0.c2 IN ()))))AND(((rt1.c1) NOT BETWEEN (t1.c0) AND (NULL))))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN rt0.c2 WHEN t1.c0 THEN rt1.c0 ELSE rt1.c0 END  WHEN ((x'')<(rt1.c1)) THEN ((rt0.c0) NOTNULL) ELSE (((t1.c0, rt0.c1, t1.c0))<((rt0.c1, rt1.c0, 0.7130918732346447))) END DESC);
SELECT * FROM rt0, t1, rt1 WHERE (((((rt0.c2)AND((rt0.c2 IN ()))))AND(((rt1.c1) NOT BETWEEN (t1.c0) AND (NULL))))) ORDER BY CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN rt0.c2 WHEN t1.c0 THEN rt1.c0 ELSE rt1.c0 END  WHEN ((x'')<(rt1.c1)) THEN ((rt0.c0) NOTNULL) ELSE (((t1.c0, rt0.c1, t1.c0))<((rt0.c1, rt1.c0, 0.7130918732346447))) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND((rt0.c2 IN ()))))AND(((rt1.c1) NOT BETWEEN (t1.c0) AND (NULL))))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN rt0.c2 WHEN t1.c0 THEN rt1.c0 ELSE rt1.c0 END  WHEN ((x'')<(rt1.c1)) THEN ((rt0.c0) NOTNULL) ELSE (((t1.c0, rt0.c1, t1.c0))<((rt0.c1, rt1.c0, 0.7130918732346447))) END DESC);
SELECT * FROM rt0, t1, rt1 WHERE (((((rt0.c2)AND((rt0.c2 IN ()))))AND(((rt1.c1) NOT BETWEEN (t1.c0) AND (NULL))))) ORDER BY CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN rt0.c2 WHEN t1.c0 THEN rt1.c0 ELSE rt1.c0 END  WHEN ((x'')<(rt1.c1)) THEN ((rt0.c0) NOTNULL) ELSE (((t1.c0, rt0.c1, t1.c0))<((rt0.c1, rt1.c0, 0.7130918732346447))) END DESC;
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT * FROM t1 WHERE ((((t1.c0 IN ())) NOT BETWEEN (((((((((t1.c0)AND(0.9058457459108644)))OR(t1.c0)))OR(x'')))OR(t1.c0))) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ())) NOT BETWEEN (((((((((t1.c0)AND(0.9058457459108644)))OR(t1.c0)))OR(x'')))OR(t1.c0))) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c0 IN ())) NOT BETWEEN (((((((((t1.c0)AND(0.9058457459108644)))OR(t1.c0)))OR(x'')))OR(t1.c0))) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ())) NOT BETWEEN (((((((((t1.c0)AND(0.9058457459108644)))OR(t1.c0)))OR(x'')))OR(t1.c0))) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c0 IN ())) NOT BETWEEN (((((((((t1.c0)AND(0.9058457459108644)))OR(t1.c0)))OR(x'')))OR(t1.c0))) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT * FROM rt1 WHERE (((((rt1.c2) ISNULL))AND(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END))) ORDER BY ((CAST(rt1.c2 AS BLOB))<>(rt1.c0)), ((((+ (rt1.c2))))!=((rt1.c2 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) ISNULL))AND(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c2 AS BLOB))!=(rt1.c0)), ((((+ (rt1.c2))))!=((rt1.c2 COLLATE RTRIM))) ASC);
SELECT * FROM rt1 WHERE (((((rt1.c2) ISNULL))AND(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END))) ORDER BY ((CAST(rt1.c2 AS BLOB))<>(rt1.c0)), ((((+ (rt1.c2))))!=((rt1.c2 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) ISNULL))AND(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c2 AS BLOB))!=(rt1.c0)), ((((+ (rt1.c2))))!=((rt1.c2 COLLATE RTRIM))) ASC);
SELECT * FROM rt1 WHERE (((((rt1.c2) ISNULL))AND(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END))) ORDER BY ((CAST(rt1.c2 AS BLOB))<>(rt1.c0)), ((((+ (rt1.c2))))!=((rt1.c2 COLLATE RTRIM))) ASC;
SELECT ALL * FROM rt0, rt1 WHERE (rt0.c1) ORDER BY GLOB(((rt1.c2) NOTNULL), CASE WHEN rt1.c0 THEN rt1.c0 ELSE NULL END) ASC  NULLS LAST, (NOT (((rt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, rt1 ORDER BY GLOB(((rt1.c2) NOTNULL), CASE WHEN rt1.c0 THEN rt1.c0 ELSE NULL END) ASC  NULLS LAST, (NOT (((rt0.c2) ISNULL))));
SELECT ALL * FROM rt0, rt1 WHERE (rt0.c1) ORDER BY GLOB(((rt1.c2) NOTNULL), CASE WHEN rt1.c0 THEN rt1.c0 ELSE NULL END) ASC  NULLS LAST, (NOT (((rt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, rt1 ORDER BY GLOB(((rt1.c2) NOTNULL), CASE WHEN rt1.c0 THEN rt1.c0 ELSE NULL END) ASC  NULLS LAST, (NOT (((rt0.c2) ISNULL))));
SELECT ALL * FROM rt0, rt1 WHERE (rt0.c1) ORDER BY GLOB(((rt1.c2) NOTNULL), CASE WHEN rt1.c0 THEN rt1.c0 ELSE NULL END) ASC  NULLS LAST, (NOT (((rt0.c2) ISNULL)));
SELECT COUNT(*) FROM t1 WHERE ((~ (TRIM(t1.c0))));
SELECT SUM(count) FROM (SELECT (((~ (TRIM(t1.c0)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((~ (TRIM(t1.c0))));
SELECT SUM(count) FROM (SELECT (((~ (TRIM(t1.c0)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((~ (TRIM(t1.c0))));
SELECT * FROM rt0, rt1, t1 WHERE (((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))==((NOT (rt1.c1))))) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))=((NOT (rt1.c1))))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY rt0.c0 DESC  NULLS LAST);
SELECT * FROM rt0, rt1, t1 WHERE (((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))==((NOT (rt1.c1))))) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))=((NOT (rt1.c1))))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY rt0.c0 DESC  NULLS LAST);
SELECT * FROM rt0, rt1, t1 WHERE (((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))==((NOT (rt1.c1))))) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT * FROM rt0 NATURAL JOIN t1 WHERE ((((((((rt0.c1, t1.c0, rt0.c1))>((rt0.c2, rt0.c2, rt0.c0))))AND(rt0.c2)))AND(rt0.c0))) ORDER BY (((NOT (rt0.c1)))<(((t1.c0) BETWEEN (t1.c0) AND (x'8209')))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1, t1.c0, rt0.c1))>((rt0.c2, rt0.c2, rt0.c0))))AND(rt0.c2)))AND(rt0.c0))) IS TRUE)  as count FROM rt0 NATURAL JOIN t1 ORDER BY (((NOT (rt0.c1)))<(((t1.c0) BETWEEN (t1.c0) AND (x'8209')))) DESC);
SELECT * FROM rt0 NATURAL JOIN t1 WHERE ((((((((rt0.c1, t1.c0, rt0.c1))>((rt0.c2, rt0.c2, rt0.c0))))AND(rt0.c2)))AND(rt0.c0))) ORDER BY (((NOT (rt0.c1)))<(((t1.c0) BETWEEN (t1.c0) AND (x'8209')))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1, t1.c0, rt0.c1))>((rt0.c2, rt0.c2, rt0.c0))))AND(rt0.c2)))AND(rt0.c0))) IS TRUE)  as count FROM rt0 NATURAL JOIN t1 ORDER BY (((NOT (rt0.c1)))<(((t1.c0) BETWEEN (t1.c0) AND (x'8209')))) DESC);
SELECT * FROM rt0 NATURAL JOIN t1 WHERE ((((((((rt0.c1, t1.c0, rt0.c1))>((rt0.c2, rt0.c2, rt0.c0))))AND(rt0.c2)))AND(rt0.c0))) ORDER BY (((NOT (rt0.c1)))<(((t1.c0) BETWEEN (t1.c0) AND (x'8209')))) DESC;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((0.23354160160273596)OR(rt1.c1)) COLLATE NOCASE) ORDER BY CASE ((rt1.c2)<<(rt0.c1))  WHEN ((rt1.c2)AND(rt0.c1)) THEN ((rt0.c2)<(rt0.c1)) ELSE CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c2 THEN rt1.c2 WHEN '-555127046' THEN rt0.c2 ELSE rt1.c2 END END;
SELECT SUM(count) FROM (SELECT ALL ((((0.23354160160273596)OR(rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE ((rt1.c2)<<(rt0.c1))  WHEN ((rt1.c2)AND(rt0.c1)) THEN ((rt0.c2)<(rt0.c1)) ELSE CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c2 THEN rt1.c2 WHEN '-555127046' THEN rt0.c2 ELSE rt1.c2 END END);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((0.23354160160273596)OR(rt1.c1)) COLLATE NOCASE) ORDER BY CASE ((rt1.c2)<<(rt0.c1))  WHEN ((rt1.c2)AND(rt0.c1)) THEN ((rt0.c2)<(rt0.c1)) ELSE CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c2 THEN rt1.c2 WHEN '-555127046' THEN rt0.c2 ELSE rt1.c2 END END;
SELECT SUM(count) FROM (SELECT ALL ((((0.23354160160273596)OR(rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE ((rt1.c2)<<(rt0.c1))  WHEN ((rt1.c2)AND(rt0.c1)) THEN ((rt0.c2)<(rt0.c1)) ELSE CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c2 THEN rt1.c2 WHEN '-555127046' THEN rt0.c2 ELSE rt1.c2 END END);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((0.23354160160273596)OR(rt1.c1)) COLLATE NOCASE) ORDER BY CASE ((rt1.c2)<<(rt0.c1))  WHEN ((rt1.c2)AND(rt0.c1)) THEN ((rt0.c2)<(rt0.c1)) ELSE CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c2 THEN rt1.c2 WHEN '-555127046' THEN rt0.c2 ELSE rt1.c2 END END;
SELECT ALL * FROM rt1, t1, rt0 WHERE (((TYPEOF(rt1.c0))<>(((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt1.c0))!=(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL * FROM rt1, t1, rt0 WHERE (((TYPEOF(rt1.c0))<>(((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt1.c0))!=(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL * FROM rt1, t1, rt0 WHERE (((TYPEOF(rt1.c0))<>(((rt0.c2) IS FALSE))));
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (((~ (rt1.c1)) IN ())) ORDER BY CAST(((t1.c0) BETWEEN (rt1.c2) AND (rt1.c2)) AS BLOB) ASC  NULLS LAST, (((rt1.c1)) BETWEEN ((TRIM(t1.c0, rt1.c0))) AND ((UPPER(DISTINCT rt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1, t1 ORDER BY CAST(((t1.c0) BETWEEN (rt1.c2) AND (rt1.c2)) AS BLOB) ASC  NULLS LAST, (((rt1.c1)) BETWEEN ((TRIM(t1.c0, rt1.c0))) AND ((UPPER(DISTINCT rt1.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (((~ (rt1.c1)) IN ())) ORDER BY CAST(((t1.c0) BETWEEN (rt1.c2) AND (rt1.c2)) AS BLOB) ASC  NULLS LAST, (((rt1.c1)) BETWEEN ((TRIM(t1.c0, rt1.c0))) AND ((UPPER(DISTINCT rt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1, t1 ORDER BY CAST(((t1.c0) BETWEEN (rt1.c2) AND (rt1.c2)) AS BLOB) ASC  NULLS LAST, (((rt1.c1)) BETWEEN ((TRIM(t1.c0, rt1.c0))) AND ((UPPER(DISTINCT rt1.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (((~ (rt1.c1)) IN ())) ORDER BY CAST(((t1.c0) BETWEEN (rt1.c2) AND (rt1.c2)) AS BLOB) ASC  NULLS LAST, (((rt1.c1)) BETWEEN ((TRIM(t1.c0, rt1.c0))) AND ((UPPER(DISTINCT rt1.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((~ (((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((~ (((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((~ (((rt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((((((rt1.c0)AND(x'')))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)AND(x'')))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((((((rt1.c0)AND(x'')))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)AND(x'')))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((((((rt1.c0)AND(x'')))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))) ISNULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON (((((t1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) IS TRUE) CROSS JOIN t1 ON LOWER((((rt0.c1, rt1.c2, rt0.c2))<((rt1.c2, rt1.c2, rt1.c0)))) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((((t1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) IS TRUE) CROSS JOIN t1 ON LOWER((((rt0.c1, rt1.c2, rt0.c2))<((rt1.c2, rt1.c2, rt1.c0)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON (((((t1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) IS TRUE) CROSS JOIN t1 ON LOWER((((rt0.c1, rt1.c2, rt0.c2))<((rt1.c2, rt1.c2, rt1.c0)))) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((((t1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) IS TRUE) CROSS JOIN t1 ON LOWER((((rt0.c1, rt1.c2, rt0.c2))<((rt1.c2, rt1.c2, rt1.c0)))));
SELECT * FROM t1, rt1, rt0 WHERE (CAST((rt1.c1 IN (rt0.c1, t1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c1 IN (rt0.c1, t1.c0)) AS TEXT)) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT * FROM t1, rt1, rt0 WHERE (CAST((rt1.c1 IN (rt0.c1, t1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c1 IN (rt0.c1, t1.c0)) AS TEXT)) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT * FROM t1, rt1, rt0 WHERE (CAST((rt1.c1 IN (rt0.c1, t1.c0)) AS TEXT));
SELECT * FROM rt1, rt0, t1 WHERE (((rt0.c1 COLLATE BINARY)+(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)+(x''))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE (((rt0.c1 COLLATE BINARY)+(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)+(x''))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE (((rt0.c1 COLLATE BINARY)+(x'')));
SELECT ALL * FROM rt1, t1, rt0 WHERE (((((+ (rt1.c2))))>=((rt0.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt1.c2))))>=((rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL * FROM rt1, t1, rt0 WHERE (((((+ (rt1.c2))))>=((rt0.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt1.c2))))>=((rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL * FROM rt1, t1, rt0 WHERE (((((+ (rt1.c2))))>=((rt0.c2 COLLATE BINARY))));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN rt0 ON ((rt0.c0)>(0.9139140984243294)) WHERE ((((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))>((CHAR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))>((CHAR(rt0.c0))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON ((rt0.c0)>(0.9139140984243294)));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN rt0 ON ((rt0.c0)>(0.9139140984243294)) WHERE ((((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))>((CHAR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))>((CHAR(rt0.c0))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON ((rt0.c0)>(0.9139140984243294)));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN rt0 ON ((rt0.c0)>(0.9139140984243294)) WHERE ((((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))>((CHAR(rt0.c0)))));
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (UNICODE(rt0.c0) COLLATE BINARY COLLATE RTRIM) ORDER BY ((CAST(rt0.c0 AS REAL))>=((((rt0.c2))<=((rt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNICODE(rt0.c0) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY ((CAST(rt0.c0 AS REAL))>=((((rt0.c2))<=((rt1.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (UNICODE(rt0.c0) COLLATE BINARY COLLATE RTRIM) ORDER BY ((CAST(rt0.c0 AS REAL))>=((((rt0.c2))<=((rt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNICODE(rt0.c0) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY ((CAST(rt0.c0 AS REAL))>=((((rt0.c2))<=((rt1.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (UNICODE(rt0.c0) COLLATE BINARY COLLATE RTRIM) ORDER BY ((CAST(rt0.c0 AS REAL))>=((((rt0.c2))<=((rt1.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE ((((CASE rt0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE '\nW8iZ2y' END, rt1.c2, 0.028621777839599516 COLLATE BINARY, (- (rt1.c0)), ((((((((t1.c0)AND(rt1.c2)))OR(t1.c0)))AND(t1.c0)))OR(rt0.c2))))<=((TYPEOF(rt1.c0), CAST(t1.c0 AS BLOB), ((((((((rt1.c0)OR(x'b832')))OR(rt1.c1)))OR(rt1.c0)))AND(rt0.c0)), ((rt1.c0)IS(rt0.c0)), CAST(rt0.c0 AS BLOB))))) ORDER BY ((((rt1.c1)>(rt1.c1))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE '\nW8iZ2y' END, rt1.c2, 0.028621777839599516 COLLATE BINARY, (- (rt1.c0)), ((((((((t1.c0)AND(rt1.c2)))OR(t1.c0)))AND(t1.c0)))OR(rt0.c2))))<=((TYPEOF(rt1.c0), CAST(t1.c0 AS BLOB), ((((((((rt1.c0)OR(x'b832')))OR(rt1.c1)))OR(rt1.c0)))AND(rt0.c0)), ((rt1.c0)IS(rt0.c0)), CAST(rt0.c0 AS BLOB))))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY ((((rt1.c1)>(rt1.c1))) NOT NULL) ASC);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE ((((CASE rt0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE '\nW8iZ2y' END, rt1.c2, 0.028621777839599516 COLLATE BINARY, (- (rt1.c0)), ((((((((t1.c0)AND(rt1.c2)))OR(t1.c0)))AND(t1.c0)))OR(rt0.c2))))<=((TYPEOF(rt1.c0), CAST(t1.c0 AS BLOB), ((((((((rt1.c0)OR(x'b832')))OR(rt1.c1)))OR(rt1.c0)))AND(rt0.c0)), ((rt1.c0)IS(rt0.c0)), CAST(rt0.c0 AS BLOB))))) ORDER BY ((((rt1.c1)>(rt1.c1))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE '\nW8iZ2y' END, rt1.c2, 0.028621777839599516 COLLATE BINARY, (- (rt1.c0)), ((((((((t1.c0)AND(rt1.c2)))OR(t1.c0)))AND(t1.c0)))OR(rt0.c2))))<=((TYPEOF(rt1.c0), CAST(t1.c0 AS BLOB), ((((((((rt1.c0)OR(x'b832')))OR(rt1.c1)))OR(rt1.c0)))AND(rt0.c0)), ((rt1.c0)IS(rt0.c0)), CAST(rt0.c0 AS BLOB))))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY ((((rt1.c1)>(rt1.c1))) NOT NULL) ASC);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE ((((CASE rt0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE '\nW8iZ2y' END, rt1.c2, 0.028621777839599516 COLLATE BINARY, (- (rt1.c0)), ((((((((t1.c0)AND(rt1.c2)))OR(t1.c0)))AND(t1.c0)))OR(rt0.c2))))<=((TYPEOF(rt1.c0), CAST(t1.c0 AS BLOB), ((((((((rt1.c0)OR(x'b832')))OR(rt1.c1)))OR(rt1.c0)))AND(rt0.c0)), ((rt1.c0)IS(rt0.c0)), CAST(rt0.c0 AS BLOB))))) ORDER BY ((((rt1.c1)>(rt1.c1))) NOT NULL) ASC;
SELECT COUNT(*) FROM t1 INDEXED BY i0 FULL OUTER JOIN rt1 ON CAST(HEX(t1.c0) AS TEXT) RIGHT OUTER JOIN rt0 ON ((~ (rt0.c0)) IN ((rt0.c1 IN (rt1.c0, rt1.c0)))) WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 INDEXED BY i0 FULL OUTER JOIN rt1 ON CAST(HEX(t1.c0) AS TEXT) RIGHT OUTER JOIN rt0 ON ((~ (rt0.c0)) IN ((rt0.c1 IN (rt1.c0, rt1.c0)))));
SELECT COUNT(*) FROM t1 INDEXED BY i0 FULL OUTER JOIN rt1 ON CAST(HEX(t1.c0) AS TEXT) RIGHT OUTER JOIN rt0 ON ((~ (rt0.c0)) IN ((rt0.c1 IN (rt1.c0, rt1.c0)))) WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 INDEXED BY i0 FULL OUTER JOIN rt1 ON CAST(HEX(t1.c0) AS TEXT) RIGHT OUTER JOIN rt0 ON ((~ (rt0.c0)) IN ((rt0.c1 IN (rt1.c0, rt1.c0)))));
SELECT * FROM rt0 LEFT OUTER JOIN t1 ON (- (rt0.c2)) INNER JOIN rt1 ON CASE x''  WHEN CAST(rt1.c1 AS INTEGER) THEN ((((0.7675044084810981)AND(rt1.c0)))OR(t1.c0)) WHEN ((((rt0.c0)AND(x'')))AND(t1.c0)) THEN (rt0.c1 IN ()) WHEN rt1.c1 COLLATE RTRIM THEN 0.19740488824795244 ELSE ((rt1.c0)>(x'')) END WHERE (CAST(((rt1.c2) ISNULL) AS REAL)) ORDER BY ((t1.c0 COLLATE BINARY) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) ISNULL) AS REAL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON (- (rt0.c2)) INNER JOIN rt1 ON CASE x''  WHEN CAST(rt1.c1 AS INTEGER) THEN ((((0.7675044084810981)AND(rt1.c0)))OR(t1.c0)) WHEN ((((rt0.c0)AND(x'')))AND(t1.c0)) THEN (rt0.c1 IN ()) WHEN rt1.c1 COLLATE RTRIM THEN 0.19740488824795244 ELSE ((rt1.c0)>(x'')) END ORDER BY ((t1.c0 COLLATE BINARY) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN t1 ON (- (rt0.c2)) INNER JOIN rt1 ON CASE x''  WHEN CAST(rt1.c1 AS INTEGER) THEN ((((0.7675044084810981)AND(rt1.c0)))OR(t1.c0)) WHEN ((((rt0.c0)AND(x'')))AND(t1.c0)) THEN (rt0.c1 IN ()) WHEN rt1.c1 COLLATE RTRIM THEN 0.19740488824795244 ELSE ((rt1.c0)>(x'')) END WHERE (CAST(((rt1.c2) ISNULL) AS REAL)) ORDER BY ((t1.c0 COLLATE BINARY) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) ISNULL) AS REAL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON (- (rt0.c2)) INNER JOIN rt1 ON CASE x''  WHEN CAST(rt1.c1 AS INTEGER) THEN ((((0.7675044084810981)AND(rt1.c0)))OR(t1.c0)) WHEN ((((rt0.c0)AND(x'')))AND(t1.c0)) THEN (rt0.c1 IN ()) WHEN rt1.c1 COLLATE RTRIM THEN 0.19740488824795244 ELSE ((rt1.c0)>(x'')) END ORDER BY ((t1.c0 COLLATE BINARY) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN t1 ON (- (rt0.c2)) INNER JOIN rt1 ON CASE x''  WHEN CAST(rt1.c1 AS INTEGER) THEN ((((0.7675044084810981)AND(rt1.c0)))OR(t1.c0)) WHEN ((((rt0.c0)AND(x'')))AND(t1.c0)) THEN (rt0.c1 IN ()) WHEN rt1.c1 COLLATE RTRIM THEN 0.19740488824795244 ELSE ((rt1.c0)>(x'')) END WHERE (CAST(((rt1.c2) ISNULL) AS REAL)) ORDER BY ((t1.c0 COLLATE BINARY) NOTNULL) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((t1.c0)<(t1.c0)))IS(CAST(t1.c0 AS TEXT)))) ORDER BY ((((t1.c0) IS FALSE))+(CAST(t1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)<(t1.c0)))IS(CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0) IS FALSE))+(CAST(t1.c0 AS NUMERIC))));
SELECT ALL * FROM t1 WHERE (((((t1.c0)<(t1.c0)))IS(CAST(t1.c0 AS TEXT)))) ORDER BY ((((t1.c0) IS FALSE))+(CAST(t1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)<(t1.c0)))IS(CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0) IS FALSE))+(CAST(t1.c0 AS NUMERIC))));
SELECT ALL * FROM t1 WHERE (((((t1.c0)<(t1.c0)))IS(CAST(t1.c0 AS TEXT)))) ORDER BY ((((t1.c0) IS FALSE))+(CAST(t1.c0 AS NUMERIC)));
SELECT ALL * FROM t1, rt1, rt0 WHERE ((((((t1.c0))<((rt0.c2)))) BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE t1.c0 END) AND (CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((t1.c0))<((rt0.c2)))) BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE t1.c0 END) AND (CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE ((((((t1.c0))<((rt0.c2)))) BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE t1.c0 END) AND (CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((t1.c0))<((rt0.c2)))) BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE t1.c0 END) AND (CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE ((((((t1.c0))<((rt0.c2)))) BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE t1.c0 END) AND (CAST(rt1.c2 AS BLOB))));
SELECT ALL COUNT(*) FROM rt1, t1 WHERE ((((0.22334852459128562))<=((json_remove(rt1.c2, rt1.c2))))) ORDER BY CASE WHEN CAST(rt1.c2 AS BLOB) THEN CAST(t1.c0 AS INTEGER) WHEN COALESCE(0.8361844236224358, t1.c0, rt1.c2, t1.c0) THEN rt1.c0 WHEN t1.c0 THEN (- (rt1.c1)) ELSE ((t1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.22334852459128562))<=((json_remove(rt1.c2, rt1.c2))))) IS TRUE)  as count FROM rt1, t1 ORDER BY CASE WHEN CAST(rt1.c2 AS BLOB) THEN CAST(t1.c0 AS INTEGER) WHEN COALESCE(0.8361844236224358, t1.c0, rt1.c2, t1.c0) THEN rt1.c0 WHEN t1.c0 THEN (- (rt1.c1)) ELSE ((t1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE ((((0.22334852459128562))<=((json_remove(rt1.c2, rt1.c2))))) ORDER BY CASE WHEN CAST(rt1.c2 AS BLOB) THEN CAST(t1.c0 AS INTEGER) WHEN COALESCE(0.8361844236224358, t1.c0, rt1.c2, t1.c0) THEN rt1.c0 WHEN t1.c0 THEN (- (rt1.c1)) ELSE ((t1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.22334852459128562))<=((json_remove(rt1.c2, rt1.c2))))) IS TRUE)  as count FROM rt1, t1 ORDER BY CASE WHEN CAST(rt1.c2 AS BLOB) THEN CAST(t1.c0 AS INTEGER) WHEN COALESCE(0.8361844236224358, t1.c0, rt1.c2, t1.c0) THEN rt1.c0 WHEN t1.c0 THEN (- (rt1.c1)) ELSE ((t1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) NOT NULL)) ORDER BY ((NULL)/((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((NULL)/((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) NOT NULL)) ORDER BY ((NULL)/((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((NULL)/((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) NOT NULL)) ORDER BY ((NULL)/((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))));
SELECT * FROM t1, rt0, rt1 WHERE ((((rt1.c2) IS TRUE) IN ((((rt1.c2))<>((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) IS TRUE) IN ((((rt1.c2))!=((rt1.c1)))))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT * FROM t1, rt0, rt1 WHERE ((((rt1.c2) IS TRUE) IN ((((rt1.c2))<>((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) IS TRUE) IN ((((rt1.c2))!=((rt1.c1)))))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT * FROM t1, rt0, rt1 WHERE ((((rt1.c2) IS TRUE) IN ((((rt1.c2))<>((rt1.c1))))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((-1.325728501E9 IN ()))==(CASE WHEN rt1.c2 THEN rt1.c1 ELSE '-1237717646' END))) ORDER BY (((NULL IN ())) NOT BETWEEN ('') AND (rt1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((-1.325728501E9 IN ()))=(CASE WHEN rt1.c2 THEN rt1.c1 ELSE '-1237717646' END))) IS TRUE)  as count FROM rt1 ORDER BY (((NULL IN ())) NOT BETWEEN ('') AND (rt1.c1))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((-1.325728501E9 IN ()))==(CASE WHEN rt1.c2 THEN rt1.c1 ELSE '-1237717646' END))) ORDER BY (((NULL IN ())) NOT BETWEEN ('') AND (rt1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((-1.325728501E9 IN ()))=(CASE WHEN rt1.c2 THEN rt1.c1 ELSE '-1237717646' END))) IS TRUE)  as count FROM rt1 ORDER BY (((NULL IN ())) NOT BETWEEN ('') AND (rt1.c1))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((-1.325728501E9 IN ()))==(CASE WHEN rt1.c2 THEN rt1.c1 ELSE '-1237717646' END))) ORDER BY (((NULL IN ())) NOT BETWEEN ('') AND (rt1.c1))  NULLS LAST;
SELECT ALL * FROM t1, rt0 CROSS JOIN rt1 ON ((rt1.c0) IS FALSE) WHERE (rt1.c2) ORDER BY (((rt1.c0)) NOT BETWEEN ((((((rt0.c1)AND(t1.c0)))AND(rt0.c2)))) AND ((rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM t1, rt0 CROSS JOIN rt1 ON ((rt1.c0) IS FALSE) ORDER BY (((rt1.c0)) NOT BETWEEN ((((((rt0.c1)AND(t1.c0)))AND(rt0.c2)))) AND ((rt0.c1 COLLATE BINARY))));
SELECT ALL * FROM t1, rt0 CROSS JOIN rt1 ON ((rt1.c0) IS FALSE) WHERE (rt1.c2) ORDER BY (((rt1.c0)) NOT BETWEEN ((((((rt0.c1)AND(t1.c0)))AND(rt0.c2)))) AND ((rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM t1, rt0 CROSS JOIN rt1 ON ((rt1.c0) IS FALSE) ORDER BY (((rt1.c0)) NOT BETWEEN ((((((rt0.c1)AND(t1.c0)))AND(rt0.c2)))) AND ((rt0.c1 COLLATE BINARY))));
SELECT ALL * FROM t1, rt0 CROSS JOIN rt1 ON ((rt1.c0) IS FALSE) WHERE (rt1.c2) ORDER BY (((rt1.c0)) NOT BETWEEN ((((((rt0.c1)AND(t1.c0)))AND(rt0.c2)))) AND ((rt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, rt1 WHERE (STRFTIME(rt1.c1 COLLATE NOCASE, rt0.c1, CAST(rt1.c0 AS REAL))) ORDER BY ((((rt1.c2)OR(rt1.c2)))OR(rt1.c2)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(rt1.c1 COLLATE NOCASE, rt0.c1, CAST(rt1.c0 AS REAL))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c2)OR(rt1.c2)))OR(rt1.c2)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, rt1 WHERE (STRFTIME(rt1.c1 COLLATE NOCASE, rt0.c1, CAST(rt1.c0 AS REAL))) ORDER BY ((((rt1.c2)OR(rt1.c2)))OR(rt1.c2)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(rt1.c1 COLLATE NOCASE, rt0.c1, CAST(rt1.c0 AS REAL))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c2)OR(rt1.c2)))OR(rt1.c2)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, rt1 WHERE (STRFTIME(rt1.c1 COLLATE NOCASE, rt0.c1, CAST(rt1.c0 AS REAL))) ORDER BY ((((rt1.c2)OR(rt1.c2)))OR(rt1.c2)) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (CAST(HEX(rt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(rt0.c0) AS TEXT)) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (CAST(HEX(rt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(rt0.c0) AS TEXT)) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (CAST(HEX(rt0.c0) AS TEXT));
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON CAST(x'51e7' AS NUMERIC) FULL OUTER JOIN t1 ON rt1.c1 WHERE (((((rt1.c0) IS TRUE))%(((('+\n', rt1.c2, rt0.c1)) NOT BETWEEN ((rt1.c2, NULL, rt0.c0)) AND ((rt0.c0, rt0.c1, rt1.c2)))))) ORDER BY ((rt1.c1 COLLATE RTRIM)<=(((rt1.c1) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) IS TRUE))%(((('+\n', rt1.c2, rt0.c1)) NOT BETWEEN ((rt1.c2, NULL, rt0.c0)) AND ((rt0.c0, rt0.c1, rt1.c2)))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CAST(x'51e7' AS NUMERIC) FULL OUTER JOIN t1 ON rt1.c1 ORDER BY ((rt1.c1 COLLATE RTRIM)<=(((rt1.c1) NOTNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON CAST(x'51e7' AS NUMERIC) FULL OUTER JOIN t1 ON rt1.c1 WHERE (((((rt1.c0) IS TRUE))%(((('+\n', rt1.c2, rt0.c1)) NOT BETWEEN ((rt1.c2, NULL, rt0.c0)) AND ((rt0.c0, rt0.c1, rt1.c2)))))) ORDER BY ((rt1.c1 COLLATE RTRIM)<=(((rt1.c1) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) IS TRUE))%(((('+\n', rt1.c2, rt0.c1)) NOT BETWEEN ((rt1.c2, NULL, rt0.c0)) AND ((rt0.c0, rt0.c1, rt1.c2)))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CAST(x'51e7' AS NUMERIC) FULL OUTER JOIN t1 ON rt1.c1 ORDER BY ((rt1.c1 COLLATE RTRIM)<=(((rt1.c1) NOTNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON CAST(x'51e7' AS NUMERIC) FULL OUTER JOIN t1 ON rt1.c1 WHERE (((((rt1.c0) IS TRUE))%(((('+\n', rt1.c2, rt0.c1)) NOT BETWEEN ((rt1.c2, NULL, rt0.c0)) AND ((rt0.c0, rt0.c1, rt1.c2)))))) ORDER BY ((rt1.c1 COLLATE RTRIM)<=(((rt1.c1) NOTNULL)))  NULLS FIRST;
SELECT COUNT(*) FROM t1 NATURAL JOIN rt0 WHERE (CASE ((rt0.c0) IS TRUE)  WHEN CAST(t1.c0 AS TEXT) THEN 0.4029123635572366 WHEN (((rt0.c0, rt0.c2, x''))==((rt0.c0, rt0.c0, rt0.c2))) THEN (((rt0.c2))!=((t1.c0))) WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c1) IS FALSE) ELSE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) END) ORDER BY CASE WHEN rt0.c0 THEN rt0.c2 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) IS TRUE)  WHEN CAST(t1.c0 AS TEXT) THEN 0.4029123635572366 WHEN (((rt0.c0, rt0.c2, x''))=((rt0.c0, rt0.c0, rt0.c2))) THEN (((rt0.c2))!=((t1.c0))) WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c1) IS FALSE) ELSE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM t1 NATURAL JOIN rt0 ORDER BY CASE WHEN rt0.c0 THEN rt0.c2 COLLATE NOCASE END ASC);
SELECT COUNT(*) FROM t1 NATURAL JOIN rt0 WHERE (CASE ((rt0.c0) IS TRUE)  WHEN CAST(t1.c0 AS TEXT) THEN 0.4029123635572366 WHEN (((rt0.c0, rt0.c2, x''))==((rt0.c0, rt0.c0, rt0.c2))) THEN (((rt0.c2))!=((t1.c0))) WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c1) IS FALSE) ELSE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) END) ORDER BY CASE WHEN rt0.c0 THEN rt0.c2 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) IS TRUE)  WHEN CAST(t1.c0 AS TEXT) THEN 0.4029123635572366 WHEN (((rt0.c0, rt0.c2, x''))=((rt0.c0, rt0.c0, rt0.c2))) THEN (((rt0.c2))!=((t1.c0))) WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c1) IS FALSE) ELSE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM t1 NATURAL JOIN rt0 ORDER BY CASE WHEN rt0.c0 THEN rt0.c2 COLLATE NOCASE END ASC);
SELECT COUNT(*) FROM t1 NATURAL JOIN rt0 WHERE (CASE ((rt0.c0) IS TRUE)  WHEN CAST(t1.c0 AS TEXT) THEN 0.4029123635572366 WHEN (((rt0.c0, rt0.c2, x''))==((rt0.c0, rt0.c0, rt0.c2))) THEN (((rt0.c2))!=((t1.c0))) WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c1) IS FALSE) ELSE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) END) ORDER BY CASE WHEN rt0.c0 THEN rt0.c2 COLLATE NOCASE END ASC;
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE t1.c0 END)OR(((x'c370')==(rt0.c2)))) RIGHT OUTER JOIN t1 ON (NOT (rt0.c2 COLLATE RTRIM)) WHERE (CASE WHEN rt0.c1 COLLATE NOCASE THEN (rt1.c0 IN (rt1.c2)) ELSE ((-1565647845)<<('-1036125508')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 COLLATE NOCASE THEN (rt1.c0 IN (rt1.c2)) ELSE ((-1565647845)<<('-1036125508')) END) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE t1.c0 END)OR(((x'c370')=(rt0.c2)))) RIGHT OUTER JOIN t1 ON (NOT (rt0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE t1.c0 END)OR(((x'c370')==(rt0.c2)))) RIGHT OUTER JOIN t1 ON (NOT (rt0.c2 COLLATE RTRIM)) WHERE (CASE WHEN rt0.c1 COLLATE NOCASE THEN (rt1.c0 IN (rt1.c2)) ELSE ((-1565647845)<<('-1036125508')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 COLLATE NOCASE THEN (rt1.c0 IN (rt1.c2)) ELSE ((-1565647845)<<('-1036125508')) END) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE t1.c0 END)OR(((x'c370')=(rt0.c2)))) RIGHT OUTER JOIN t1 ON (NOT (rt0.c2 COLLATE RTRIM)));
SELECT * FROM rt1, t1 FULL OUTER JOIN rt0 ON rtreenode(((rt1.c0) NOT NULL), (rt0.c2 IN ())) WHERE (((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c0)) COLLATE NOCASE) ORDER BY (((((rt1.c2)) BETWEEN ((rt0.c0)) AND ((0.610193883196811))))<(CAST(rt0.c2 AS BLOB))) ASC, (('1848922402') NOTNULL) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t1 FULL OUTER JOIN rt0 ON rtreenode(((rt1.c0) NOT NULL), (rt0.c2 IN ())) ORDER BY (((((rt1.c2)) BETWEEN ((rt0.c0)) AND ((0.610193883196811))))<(CAST(rt0.c2 AS BLOB))) ASC, (('1848922402') NOTNULL) COLLATE BINARY DESC);
SELECT * FROM rt1, t1 FULL OUTER JOIN rt0 ON rtreenode(((rt1.c0) NOT NULL), (rt0.c2 IN ())) WHERE (((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c0)) COLLATE NOCASE) ORDER BY (((((rt1.c2)) BETWEEN ((rt0.c0)) AND ((0.610193883196811))))<(CAST(rt0.c2 AS BLOB))) ASC, (('1848922402') NOTNULL) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t1 FULL OUTER JOIN rt0 ON rtreenode(((rt1.c0) NOT NULL), (rt0.c2 IN ())) ORDER BY (((((rt1.c2)) BETWEEN ((rt0.c0)) AND ((0.610193883196811))))<(CAST(rt0.c2 AS BLOB))) ASC, (('1848922402') NOTNULL) COLLATE BINARY DESC);
SELECT * FROM rt1, t1 FULL OUTER JOIN rt0 ON rtreenode(((rt1.c0) NOT NULL), (rt0.c2 IN ())) WHERE (((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c0)) COLLATE NOCASE) ORDER BY (((((rt1.c2)) BETWEEN ((rt0.c0)) AND ((0.610193883196811))))<(CAST(rt0.c2 AS BLOB))) ASC, (('1848922402') NOTNULL) COLLATE BINARY DESC;
SELECT ALL * FROM rt1, rt0, t1 WHERE (CAST(((rt0.c0)>>(rt1.c0)) AS NUMERIC)) ORDER BY CAST(((rt0.c2)<(rt1.c1)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)>>(rt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY CAST(((rt0.c2)<(rt1.c1)) AS REAL)  NULLS LAST);
SELECT ALL * FROM rt1, rt0, t1 WHERE (CAST(((rt0.c0)>>(rt1.c0)) AS NUMERIC)) ORDER BY CAST(((rt0.c2)<(rt1.c1)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)>>(rt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY CAST(((rt0.c2)<(rt1.c1)) AS REAL)  NULLS LAST);
SELECT ALL * FROM rt1, rt0, t1 WHERE (CAST(((rt0.c0)>>(rt1.c0)) AS NUMERIC)) ORDER BY CAST(((rt0.c2)<(rt1.c1)) AS REAL)  NULLS LAST;
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (CAST(CASE WHEN rt1.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN 0X5a60695a ELSE rt0.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN 0x5a60695a ELSE rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (CAST(CASE WHEN rt1.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN 0X5a60695a ELSE rt0.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN 0x5a60695a ELSE rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (CAST(CASE WHEN rt1.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN 0X5a60695a ELSE rt0.c1 END AS NUMERIC));
SELECT ALL * FROM rt1 WHERE (((((rt1.c1)<>(rt1.c1)))>=(ABS(rt1.c0)))) ORDER BY CAST(0xffffffff9e5e450a AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)<>(rt1.c1)))>=(ABS(rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY CAST(0xffffffff9e5e450a AS REAL) DESC);
SELECT ALL * FROM rt1 WHERE (((((rt1.c1)<>(rt1.c1)))>=(ABS(rt1.c0)))) ORDER BY CAST(0xffffffff9e5e450a AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)<>(rt1.c1)))>=(ABS(rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY CAST(0xffffffff9e5e450a AS REAL) DESC);
SELECT ALL * FROM rt1 WHERE (((((rt1.c1)<>(rt1.c1)))>=(ABS(rt1.c0)))) ORDER BY CAST(0xffffffff9e5e450a AS REAL) DESC;
SELECT ALL COUNT(*) FROM t1 WHERE ('2070742722') ORDER BY ((((((t1.c0) NOT NULL))AND((+ (t1.c0)))))OR(((((((((t1.c0)AND(0.08458363442270478)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('2070742722') IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c0) NOT NULL))AND((+ (t1.c0)))))OR(((((((((t1.c0)AND(0.08458363442270478)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ('2070742722') ORDER BY ((((((t1.c0) NOT NULL))AND((+ (t1.c0)))))OR(((((((((t1.c0)AND(0.08458363442270478)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('2070742722') IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c0) NOT NULL))AND((+ (t1.c0)))))OR(((((((((t1.c0)AND(0.08458363442270478)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ('2070742722') ORDER BY ((((((t1.c0) NOT NULL))AND((+ (t1.c0)))))OR(((((((((t1.c0)AND(0.08458363442270478)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(CAST(rt0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON ((UPPER(rt1.c0))|('lBd')) LEFT OUTER JOIN t1 ON (((NOT (t1.c0))) NOT NULL) WHERE (((((rt1.c1)<<(rt0.c1)))||(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)<<(rt0.c1)))||(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((UPPER(rt1.c0))|('lBd')) LEFT OUTER JOIN t1 ON (((NOT (t1.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON ((UPPER(rt1.c0))|('lBd')) LEFT OUTER JOIN t1 ON (((NOT (t1.c0))) NOT NULL) WHERE (((((rt1.c1)<<(rt0.c1)))||(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)<<(rt0.c1)))||(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((UPPER(rt1.c0))|('lBd')) LEFT OUTER JOIN t1 ON (((NOT (t1.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON ((UPPER(rt1.c0))|('lBd')) LEFT OUTER JOIN t1 ON (((NOT (t1.c0))) NOT NULL) WHERE (((((rt1.c1)<<(rt0.c1)))||(rt0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS INTEGER))!=(((t1.c0)LIKE(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS INTEGER))!=(((t1.c0)LIKE(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS INTEGER))!=(((t1.c0)LIKE(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS INTEGER))!=(((t1.c0)LIKE(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS INTEGER))!=(((t1.c0)LIKE(t1.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((('1711466276') BETWEEN ((rt0.c1 IN (rt0.c2))) AND (CAST(rt0.c0 AS INTEGER)))) ORDER BY ((((rt0.c0))<((rt0.c2))) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('1711466276') BETWEEN ((rt0.c1 IN (rt0.c2))) AND (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0))<((rt0.c2))) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((('1711466276') BETWEEN ((rt0.c1 IN (rt0.c2))) AND (CAST(rt0.c0 AS INTEGER)))) ORDER BY ((((rt0.c0))<((rt0.c2))) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('1711466276') BETWEEN ((rt0.c1 IN (rt0.c2))) AND (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0))<((rt0.c2))) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((('1711466276') BETWEEN ((rt0.c1 IN (rt0.c2))) AND (CAST(rt0.c0 AS INTEGER)))) ORDER BY ((((rt0.c0))<((rt0.c2))) IN ()) ASC  NULLS FIRST;
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON UPPER(CAST(rt1.c1 AS NUMERIC)) RIGHT OUTER JOIN t1 ON (((rt1.c1, 0.42727669478495134, rt1.c1, t1.c0, t1.c0)) BETWEEN ((((rt1.c1) IS TRUE), CAST(rt0.c0 AS INTEGER), rt1.c1 COLLATE BINARY, '0.0', ((rt0.c2)+(t1.c0)))) AND (((~ ('/珽bE[PቮT\r')), (rt1.c0 IN ()), rt1.c0, NULL, (((0.5261820620375923)) NOT BETWEEN ((t1.c0)) AND ((rt1.c2)))))) WHERE (HEX(DISTINCT rt0.c0) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT rt0.c0) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON UPPER(CAST(rt1.c1 AS NUMERIC)) RIGHT OUTER JOIN t1 ON (((rt1.c1, 0.42727669478495134, rt1.c1, t1.c0, t1.c0)) BETWEEN ((((rt1.c1) IS TRUE), CAST(rt0.c0 AS INTEGER), rt1.c1 COLLATE BINARY, '0.0', ((rt0.c2)+(t1.c0)))) AND (((~ ('/珽bE[PቮT\r')), (rt1.c0 IN ()), rt1.c0, NULL, (((0.5261820620375923)) NOT BETWEEN ((t1.c0)) AND ((rt1.c2)))))));
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON UPPER(CAST(rt1.c1 AS NUMERIC)) RIGHT OUTER JOIN t1 ON (((rt1.c1, 0.42727669478495134, rt1.c1, t1.c0, t1.c0)) BETWEEN ((((rt1.c1) IS TRUE), CAST(rt0.c0 AS INTEGER), rt1.c1 COLLATE BINARY, '0.0', ((rt0.c2)+(t1.c0)))) AND (((~ ('/珽bE[PቮT\r')), (rt1.c0 IN ()), rt1.c0, NULL, (((0.5261820620375923)) NOT BETWEEN ((t1.c0)) AND ((rt1.c2)))))) WHERE (HEX(DISTINCT rt0.c0) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT rt0.c0) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON UPPER(CAST(rt1.c1 AS NUMERIC)) RIGHT OUTER JOIN t1 ON (((rt1.c1, 0.42727669478495134, rt1.c1, t1.c0, t1.c0)) BETWEEN ((((rt1.c1) IS TRUE), CAST(rt0.c0 AS INTEGER), rt1.c1 COLLATE BINARY, '0.0', ((rt0.c2)+(t1.c0)))) AND (((~ ('/珽bE[PቮT\r')), (rt1.c0 IN ()), rt1.c0, NULL, (((0.5261820620375923)) NOT BETWEEN ((t1.c0)) AND ((rt1.c2)))))));
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON UPPER(CAST(rt1.c1 AS NUMERIC)) RIGHT OUTER JOIN t1 ON (((rt1.c1, 0.42727669478495134, rt1.c1, t1.c0, t1.c0)) BETWEEN ((((rt1.c1) IS TRUE), CAST(rt0.c0 AS INTEGER), rt1.c1 COLLATE BINARY, '0.0', ((rt0.c2)+(t1.c0)))) AND (((~ ('/珽bE[PቮT\r')), (rt1.c0 IN ()), rt1.c0, NULL, (((0.5261820620375923)) NOT BETWEEN ((t1.c0)) AND ((rt1.c2)))))) WHERE (HEX(DISTINCT rt0.c0) COLLATE BINARY COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (TRIM(((rt0.c1)<(NULL)), CAST(rt0.c2 AS INTEGER))) ORDER BY ((rt1.c1 COLLATE RTRIM) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c1)<(NULL)), CAST(rt0.c2 AS INTEGER))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY ((rt1.c1 COLLATE RTRIM) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (TRIM(((rt0.c1)<(NULL)), CAST(rt0.c2 AS INTEGER))) ORDER BY ((rt1.c1 COLLATE RTRIM) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c1)<(NULL)), CAST(rt0.c2 AS INTEGER))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY ((rt1.c1 COLLATE RTRIM) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (TRIM(((rt0.c1)<(NULL)), CAST(rt0.c2 AS INTEGER))) ORDER BY ((rt1.c1 COLLATE RTRIM) NOT NULL) ASC;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((0.9987159941285491)LIKE(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((0.9987159941285491)LIKE(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((0.9987159941285491)LIKE(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((0.9987159941285491)LIKE(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((0.9987159941285491)LIKE(rt0.c2))) ISNULL));
SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c2))) IS FALSE) WHERE (((CASE WHEN 0xfffffffff7ffa242 THEN 1088886153 END)<=(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0Xfffffffff7ffa242 THEN 1088886153 END)<=(rt0.c0))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c2))) IS FALSE));
SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c2))) IS FALSE) WHERE (((CASE WHEN 0xfffffffff7ffa242 THEN 1088886153 END)<=(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0Xfffffffff7ffa242 THEN 1088886153 END)<=(rt0.c0))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c2))) IS FALSE));
SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c2))) IS FALSE) WHERE (((CASE WHEN 0xfffffffff7ffa242 THEN 1088886153 END)<=(rt0.c0)));
SELECT ALL * FROM rt0 CROSS JOIN t1 ON TRIM(((rt0.c1)<(''))) WHERE (((((((((t1.c0)OR(t1.c0)))AND(rt0.c0)))AND(((((((((rt0.c2)AND(t1.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))))AND(CASE WHEN t1.c0 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((t1.c0)OR(t1.c0)))AND(rt0.c0)))AND(((((((((rt0.c2)AND(t1.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))))AND(CASE WHEN t1.c0 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON TRIM(((rt0.c1)<(''))));
SELECT ALL * FROM rt0 CROSS JOIN t1 ON TRIM(((rt0.c1)<(''))) WHERE (((((((((t1.c0)OR(t1.c0)))AND(rt0.c0)))AND(((((((((rt0.c2)AND(t1.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))))AND(CASE WHEN t1.c0 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((t1.c0)OR(t1.c0)))AND(rt0.c0)))AND(((((((((rt0.c2)AND(t1.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))))AND(CASE WHEN t1.c0 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON TRIM(((rt0.c1)<(''))));
SELECT ALL * FROM rt0 CROSS JOIN t1 ON TRIM(((rt0.c1)<(''))) WHERE (((((((((t1.c0)OR(t1.c0)))AND(rt0.c0)))AND(((((((((rt0.c2)AND(t1.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))))AND(CASE WHEN t1.c0 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT ALL * FROM rt1, rt0, t1 WHERE (((CASE rt1.c0  WHEN x'' THEN -1.54159682E9 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c2 END) NOT BETWEEN ('1259314537' COLLATE BINARY) AND (rt1.c0 COLLATE NOCASE))) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c0  WHEN x'' THEN -1.54159682E9 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c2 END) NOT BETWEEN ('1259314537' COLLATE BINARY) AND (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE ASC);
SELECT ALL * FROM rt1, rt0, t1 WHERE (((CASE rt1.c0  WHEN x'' THEN -1.54159682E9 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c2 END) NOT BETWEEN ('1259314537' COLLATE BINARY) AND (rt1.c0 COLLATE NOCASE))) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c0  WHEN x'' THEN -1.54159682E9 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c2 END) NOT BETWEEN ('1259314537' COLLATE BINARY) AND (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE ASC);
SELECT ALL * FROM rt1, rt0, t1 WHERE (((CASE rt1.c0  WHEN x'' THEN -1.54159682E9 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c2 END) NOT BETWEEN ('1259314537' COLLATE BINARY) AND (rt1.c0 COLLATE NOCASE))) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE ASC;
SELECT ALL * FROM rt0 WHERE (((((((((NULLIF(DISTINCT x'', rt0.c0))AND('')))AND(((rt0.c1) IS FALSE))))OR((((rt0.c0, 0.5805497977472641, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c1))))))AND(CAST('741257901' AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULLIF(DISTINCT x'', rt0.c0))AND('')))AND(((rt0.c1) IS FALSE))))OR((((rt0.c0, 0.5805497977472641, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c1))))))AND(CAST('741257901' AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((NULLIF(DISTINCT x'', rt0.c0))AND('')))AND(((rt0.c1) IS FALSE))))OR((((rt0.c0, 0.5805497977472641, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c1))))))AND(CAST('741257901' AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULLIF(DISTINCT x'', rt0.c0))AND('')))AND(((rt0.c1) IS FALSE))))OR((((rt0.c0, 0.5805497977472641, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c1))))))AND(CAST('741257901' AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((NULLIF(DISTINCT x'', rt0.c0))AND('')))AND(((rt0.c1) IS FALSE))))OR((((rt0.c0, 0.5805497977472641, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c1))))))AND(CAST('741257901' AS TEXT))));
SELECT COUNT(*) FROM rt1 INDEXED BY i93, t1 WHERE ((rt1.c1 COLLATE NOCASE IN (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)), NULL))) ORDER BY (((rt1.c0 COLLATE RTRIM))!=((CAST(rt1.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 COLLATE NOCASE IN (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)), NULL))) IS TRUE)  as count FROM rt1 INDEXED BY i93, t1 ORDER BY (((rt1.c0 COLLATE RTRIM))!=((CAST(rt1.c2 AS INTEGER)))));
SELECT COUNT(*) FROM rt1 INDEXED BY i93, t1 WHERE ((rt1.c1 COLLATE NOCASE IN (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)), NULL))) ORDER BY (((rt1.c0 COLLATE RTRIM))!=((CAST(rt1.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 COLLATE NOCASE IN (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)), NULL))) IS TRUE)  as count FROM rt1 INDEXED BY i93, t1 ORDER BY (((rt1.c0 COLLATE RTRIM))!=((CAST(rt1.c2 AS INTEGER)))));
SELECT * FROM rt0 WHERE ('?8') ORDER BY json_quote(((rt0.c0) NOT NULL)) ASC, ((((NULL) BETWEEN (rt0.c0) AND (rt0.c2)))IS(CAST(rt0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (('?8') IS TRUE)  as count FROM rt0 ORDER BY json_quote(((rt0.c0) NOT NULL)) ASC, ((((NULL) BETWEEN (rt0.c0) AND (rt0.c2)))IS(CAST(rt0.c2 AS INTEGER))));
SELECT * FROM rt0 WHERE ('?8') ORDER BY json_quote(((rt0.c0) NOT NULL)) ASC, ((((NULL) BETWEEN (rt0.c0) AND (rt0.c2)))IS(CAST(rt0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (('?8') IS TRUE)  as count FROM rt0 ORDER BY json_quote(((rt0.c0) NOT NULL)) ASC, ((((NULL) BETWEEN (rt0.c0) AND (rt0.c2)))IS(CAST(rt0.c2 AS INTEGER))));
SELECT * FROM rt0 WHERE ('?8') ORDER BY json_quote(((rt0.c0) NOT NULL)) ASC, ((((NULL) BETWEEN (rt0.c0) AND (rt0.c2)))IS(CAST(rt0.c2 AS INTEGER)));
SELECT ALL * FROM rt1 FULL OUTER JOIN t1 ON (((rt1.c2 COLLATE BINARY))<((((t1.c0)>(rt1.c2))))) WHERE (-1.954197043E9) ORDER BY (((rt1.c0, t1.c0, rt1.c0)) BETWEEN ((((rt1.c2)<>(rt1.c1)), (rt1.c2 IN (rt1.c1)), rt1.c2 COLLATE RTRIM)) AND ((((rt1.c0)LIKE(t1.c0)), rt1.c2 COLLATE BINARY, ((rt1.c2) BETWEEN (rt1.c1) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((-1.954197043E9) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t1 ON (((rt1.c2 COLLATE BINARY))<((((t1.c0)>(rt1.c2))))) ORDER BY (((rt1.c0, t1.c0, rt1.c0)) BETWEEN ((((rt1.c2)<>(rt1.c1)), (rt1.c2 IN (rt1.c1)), rt1.c2 COLLATE RTRIM)) AND ((((rt1.c0)LIKE(t1.c0)), rt1.c2 COLLATE BINARY, ((rt1.c2) BETWEEN (rt1.c1) AND (t1.c0))))));
SELECT ALL * FROM rt1 FULL OUTER JOIN t1 ON (((rt1.c2 COLLATE BINARY))<((((t1.c0)>(rt1.c2))))) WHERE (-1.954197043E9) ORDER BY (((rt1.c0, t1.c0, rt1.c0)) BETWEEN ((((rt1.c2)<>(rt1.c1)), (rt1.c2 IN (rt1.c1)), rt1.c2 COLLATE RTRIM)) AND ((((rt1.c0)LIKE(t1.c0)), rt1.c2 COLLATE BINARY, ((rt1.c2) BETWEEN (rt1.c1) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((-1.954197043E9) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t1 ON (((rt1.c2 COLLATE BINARY))<((((t1.c0)>(rt1.c2))))) ORDER BY (((rt1.c0, t1.c0, rt1.c0)) BETWEEN ((((rt1.c2)<>(rt1.c1)), (rt1.c2 IN (rt1.c1)), rt1.c2 COLLATE RTRIM)) AND ((((rt1.c0)LIKE(t1.c0)), rt1.c2 COLLATE BINARY, ((rt1.c2) BETWEEN (rt1.c1) AND (t1.c0))))));
SELECT ALL * FROM rt1 FULL OUTER JOIN t1 ON (((rt1.c2 COLLATE BINARY))<((((t1.c0)>(rt1.c2))))) WHERE (-1.954197043E9) ORDER BY (((rt1.c0, t1.c0, rt1.c0)) BETWEEN ((((rt1.c2)<>(rt1.c1)), (rt1.c2 IN (rt1.c1)), rt1.c2 COLLATE RTRIM)) AND ((((rt1.c0)LIKE(t1.c0)), rt1.c2 COLLATE BINARY, ((rt1.c2) BETWEEN (rt1.c1) AND (t1.c0)))));
SELECT ALL * FROM t1, rt1, rt0 WHERE ((rt0.c0 IN (((rt0.c2)>>(rt1.c0))))) ORDER BY CASE WHEN CAST(rt0.c1 AS BLOB) THEN (rt1.c0 IN (rt1.c2)) ELSE TRIM(rt0.c1) END  NULLS FIRST, (((((rt1.c2)OR(rt0.c0))))!=((CAST(t1.c0 AS NUMERIC)))) DESC, CASE 'u\r'  WHEN ((rt1.c1)AND(rt1.c0)) THEN ((rt1.c2)|(rt1.c2)) WHEN 0.22417319007368952 THEN ((((rt1.c2)OR(rt0.c2)))OR(t1.c0)) WHEN ((rt0.c2)&(rt1.c2)) THEN (+ (rt0.c2)) WHEN CAST(rt1.c2 AS TEXT) THEN ((rt0.c1) NOTNULL) WHEN (('1e500')<=(rt0.c1)) THEN ((x'3d022ad9')AND(rt0.c2)) ELSE LIKELY(rt1.c2) END ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN (((rt0.c2)>>(rt1.c0))))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY CASE WHEN CAST(rt0.c1 AS BLOB) THEN (rt1.c0 IN (rt1.c2)) ELSE TRIM(rt0.c1) END  NULLS FIRST, (((((rt1.c2)OR(rt0.c0))))!=((CAST(t1.c0 AS NUMERIC)))) DESC, CASE 'u\r'  WHEN ((rt1.c1)AND(rt1.c0)) THEN ((rt1.c2)|(rt1.c2)) WHEN 0.22417319007368952 THEN ((((rt1.c2)OR(rt0.c2)))OR(t1.c0)) WHEN ((rt0.c2)&(rt1.c2)) THEN (+ (rt0.c2)) WHEN CAST(rt1.c2 AS TEXT) THEN ((rt0.c1) NOTNULL) WHEN (('1e500')<=(rt0.c1)) THEN ((x'3d022ad9')AND(rt0.c2)) ELSE LIKELY(rt1.c2) END ASC);
SELECT ALL * FROM t1, rt1, rt0 WHERE ((rt0.c0 IN (((rt0.c2)>>(rt1.c0))))) ORDER BY CASE WHEN CAST(rt0.c1 AS BLOB) THEN (rt1.c0 IN (rt1.c2)) ELSE TRIM(rt0.c1) END  NULLS FIRST, (((((rt1.c2)OR(rt0.c0))))!=((CAST(t1.c0 AS NUMERIC)))) DESC, CASE 'u\r'  WHEN ((rt1.c1)AND(rt1.c0)) THEN ((rt1.c2)|(rt1.c2)) WHEN 0.22417319007368952 THEN ((((rt1.c2)OR(rt0.c2)))OR(t1.c0)) WHEN ((rt0.c2)&(rt1.c2)) THEN (+ (rt0.c2)) WHEN CAST(rt1.c2 AS TEXT) THEN ((rt0.c1) NOTNULL) WHEN (('1e500')<=(rt0.c1)) THEN ((x'3d022ad9')AND(rt0.c2)) ELSE LIKELY(rt1.c2) END ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN (((rt0.c2)>>(rt1.c0))))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY CASE WHEN CAST(rt0.c1 AS BLOB) THEN (rt1.c0 IN (rt1.c2)) ELSE TRIM(rt0.c1) END  NULLS FIRST, (((((rt1.c2)OR(rt0.c0))))!=((CAST(t1.c0 AS NUMERIC)))) DESC, CASE 'u\r'  WHEN ((rt1.c1)AND(rt1.c0)) THEN ((rt1.c2)|(rt1.c2)) WHEN 0.22417319007368952 THEN ((((rt1.c2)OR(rt0.c2)))OR(t1.c0)) WHEN ((rt0.c2)&(rt1.c2)) THEN (+ (rt0.c2)) WHEN CAST(rt1.c2 AS TEXT) THEN ((rt0.c1) NOTNULL) WHEN (('1e500')<=(rt0.c1)) THEN ((x'3d022ad9')AND(rt0.c2)) ELSE LIKELY(rt1.c2) END ASC);
SELECT ALL * FROM t1, rt1, rt0 WHERE ((rt0.c0 IN (((rt0.c2)>>(rt1.c0))))) ORDER BY CASE WHEN CAST(rt0.c1 AS BLOB) THEN (rt1.c0 IN (rt1.c2)) ELSE TRIM(rt0.c1) END  NULLS FIRST, (((((rt1.c2)OR(rt0.c0))))!=((CAST(t1.c0 AS NUMERIC)))) DESC, CASE 'u\r'  WHEN ((rt1.c1)AND(rt1.c0)) THEN ((rt1.c2)|(rt1.c2)) WHEN 0.22417319007368952 THEN ((((rt1.c2)OR(rt0.c2)))OR(t1.c0)) WHEN ((rt0.c2)&(rt1.c2)) THEN (+ (rt0.c2)) WHEN CAST(rt1.c2 AS TEXT) THEN ((rt0.c1) NOTNULL) WHEN (('1e500')<=(rt0.c1)) THEN ((x'3d022ad9')AND(rt0.c2)) ELSE LIKELY(rt1.c2) END ASC;
SELECT ALL COUNT(*) FROM t1 INNER JOIN rt0 ON ((((t1.c0) ISNULL))GLOB((- (rt0.c2)))) WHERE (((((LOWER(rt0.c1))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c0 WHEN t1.c0 THEN t1.c0 END)))OR(TRIM(rt0.c2)))) ORDER BY ((rt0.c2)>=(rt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((LOWER(rt0.c1))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c0 WHEN t1.c0 THEN t1.c0 END)))OR(TRIM(rt0.c2)))) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON ((((t1.c0) ISNULL))GLOB((- (rt0.c2)))) ORDER BY ((rt0.c2)>=(rt0.c0)) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t1 INNER JOIN rt0 ON ((((t1.c0) ISNULL))GLOB((- (rt0.c2)))) WHERE (((((LOWER(rt0.c1))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c0 WHEN t1.c0 THEN t1.c0 END)))OR(TRIM(rt0.c2)))) ORDER BY ((rt0.c2)>=(rt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((LOWER(rt0.c1))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c0 WHEN t1.c0 THEN t1.c0 END)))OR(TRIM(rt0.c2)))) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON ((((t1.c0) ISNULL))GLOB((- (rt0.c2)))) ORDER BY ((rt0.c2)>=(rt0.c0)) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t1 INNER JOIN rt0 ON ((((t1.c0) ISNULL))GLOB((- (rt0.c2)))) WHERE (((((LOWER(rt0.c1))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c0 WHEN t1.c0 THEN t1.c0 END)))OR(TRIM(rt0.c2)))) ORDER BY ((rt0.c2)>=(rt0.c0)) COLLATE BINARY ASC;
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))*((rt1.c1 IN ())))) ORDER BY ((((rt0.c1)<=(rt1.c0)))AND(CAST(rt0.c2 AS INTEGER)))  NULLS FIRST, (((((rt1.c0)<(rt0.c1))))>(((~ (rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC))*((rt1.c1 IN ())))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY ((((rt0.c1)<=(rt1.c0)))AND(CAST(rt0.c2 AS INTEGER)))  NULLS FIRST, (((((rt1.c0)<(rt0.c1))))>(((~ (rt0.c1)))))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))*((rt1.c1 IN ())))) ORDER BY ((((rt0.c1)<=(rt1.c0)))AND(CAST(rt0.c2 AS INTEGER)))  NULLS FIRST, (((((rt1.c0)<(rt0.c1))))>(((~ (rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC))*((rt1.c1 IN ())))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY ((((rt0.c1)<=(rt1.c0)))AND(CAST(rt0.c2 AS INTEGER)))  NULLS FIRST, (((((rt1.c0)<(rt0.c1))))>(((~ (rt0.c1)))))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))*((rt1.c1 IN ())))) ORDER BY ((((rt0.c1)<=(rt1.c0)))AND(CAST(rt0.c2 AS INTEGER)))  NULLS FIRST, (((((rt1.c0)<(rt0.c1))))>(((~ (rt0.c1)))))  NULLS FIRST;
SELECT * FROM rt1, rt0 WHERE (CAST((~ (rt1.c1)) AS REAL)) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c1)) THEN (+ (rt0.c1)) ELSE CAST(rt0.c1 AS REAL) END ASC, NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt1.c1)) AS REAL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c1)) THEN (+ (rt0.c1)) ELSE CAST(rt0.c1 AS REAL) END ASC, NULL DESC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (CAST((~ (rt1.c1)) AS REAL)) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c1)) THEN (+ (rt0.c1)) ELSE CAST(rt0.c1 AS REAL) END ASC, NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt1.c1)) AS REAL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c1)) THEN (+ (rt0.c1)) ELSE CAST(rt0.c1 AS REAL) END ASC, NULL DESC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (CAST((~ (rt1.c1)) AS REAL)) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c1)) THEN (+ (rt0.c1)) ELSE CAST(rt0.c1 AS REAL) END ASC, NULL DESC  NULLS LAST;
SELECT * FROM t1, rt1 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c2 AS TEXT) IN (rt1.c1, CASE rt0.c2  WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c2 THEN rt1.c1 WHEN t1.c0 THEN rt1.c1 END)) WHERE ((- ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c1 IN ())))) IS TRUE)  as count FROM t1, rt1 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c2 AS TEXT) IN (rt1.c1, CASE rt0.c2  WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c2 THEN rt1.c1 WHEN t1.c0 THEN rt1.c1 END)));
SELECT * FROM t1, rt1 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c2 AS TEXT) IN (rt1.c1, CASE rt0.c2  WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c2 THEN rt1.c1 WHEN t1.c0 THEN rt1.c1 END)) WHERE ((- ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c1 IN ())))) IS TRUE)  as count FROM t1, rt1 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c2 AS TEXT) IN (rt1.c1, CASE rt0.c2  WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c2 THEN rt1.c1 WHEN t1.c0 THEN rt1.c1 END)));
SELECT * FROM t1, rt1 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c2 AS TEXT) IN (rt1.c1, CASE rt0.c2  WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c2 THEN rt1.c1 WHEN t1.c0 THEN rt1.c1 END)) WHERE ((- ((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)%(t1.c0))) ISNULL)) ORDER BY ((CAST('-822337964' AS TEXT))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)%(t1.c0))) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY ((CAST('-822337964' AS TEXT))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)%(t1.c0))) ISNULL)) ORDER BY ((CAST('-822337964' AS TEXT))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)%(t1.c0))) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY ((CAST('-822337964' AS TEXT))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)%(t1.c0))) ISNULL)) ORDER BY ((CAST('-822337964' AS TEXT))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) DESC;
SELECT * FROM rt1, rt0, t1 WHERE (CASE t1.c0 COLLATE NOCASE  WHEN rt0.c2 THEN HEX(NULL) ELSE NULL COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c0 COLLATE NOCASE  WHEN rt0.c2 THEN HEX(NULL) ELSE NULL COLLATE BINARY END) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE (CASE t1.c0 COLLATE NOCASE  WHEN rt0.c2 THEN HEX(NULL) ELSE NULL COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c0 COLLATE NOCASE  WHEN rt0.c2 THEN HEX(NULL) ELSE NULL COLLATE BINARY END) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE (CASE t1.c0 COLLATE NOCASE  WHEN rt0.c2 THEN HEX(NULL) ELSE NULL COLLATE BINARY END);
SELECT COUNT(*) FROM rt0 WHERE ((+ (CAST(0.16383828612918228 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(0.16383828612918228 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (CAST(0.16383828612918228 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(0.16383828612918228 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (CAST(0.16383828612918228 AS INTEGER))));
SELECT * FROM t1 WHERE (CASE (((t1.c0))<=((t1.c0)))  WHEN ((t1.c0) NOT NULL) THEN ((((t1.c0)OR(t1.c0)))OR(t1.c0)) WHEN (~ (t1.c0)) THEN ((t1.c0) IS FALSE) WHEN ((t1.c0)<(t1.c0)) THEN t1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t1.c0))<=((t1.c0)))  WHEN ((t1.c0) NOT NULL) THEN ((((t1.c0)OR(t1.c0)))OR(t1.c0)) WHEN (~ (t1.c0)) THEN ((t1.c0) IS FALSE) WHEN ((t1.c0)<(t1.c0)) THEN t1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE (((t1.c0))<=((t1.c0)))  WHEN ((t1.c0) NOT NULL) THEN ((((t1.c0)OR(t1.c0)))OR(t1.c0)) WHEN (~ (t1.c0)) THEN ((t1.c0) IS FALSE) WHEN ((t1.c0)<(t1.c0)) THEN t1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t1.c0))<=((t1.c0)))  WHEN ((t1.c0) NOT NULL) THEN ((((t1.c0)OR(t1.c0)))OR(t1.c0)) WHEN (~ (t1.c0)) THEN ((t1.c0) IS FALSE) WHEN ((t1.c0)<(t1.c0)) THEN t1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE (((t1.c0))<=((t1.c0)))  WHEN ((t1.c0) NOT NULL) THEN ((((t1.c0)OR(t1.c0)))OR(t1.c0)) WHEN (~ (t1.c0)) THEN ((t1.c0) IS FALSE) WHEN ((t1.c0)<(t1.c0)) THEN t1.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (rt1.c1) ORDER BY UNICODE((- (rt1.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY UNICODE((- (rt1.c1))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (rt1.c1) ORDER BY UNICODE((- (rt1.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY UNICODE((- (rt1.c1))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (rt1.c1) ORDER BY UNICODE((- (rt1.c1))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((CAST(rt1.c0 AS REAL))) AND ((rt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((CAST(rt1.c0 AS REAL))) AND ((rt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((CAST(rt1.c0 AS REAL))) AND ((rt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((CAST(rt1.c0 AS REAL))) AND ((rt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((CAST(rt1.c0 AS REAL))) AND ((rt1.c0 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) IS TRUE) IN ()));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON (((((rt1.c0)OR(rt1.c2)))AND(rt0.c1)) IN (((rt1.c0)IS(rt0.c0)))) INNER JOIN t1 ON x'7463' WHERE (HEX(DISTINCT CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c1 END)) ORDER BY CASE (- (rt1.c2))  WHEN rt1.c2 COLLATE RTRIM THEN (((rt0.c1, t1.c0, NULL))>((rt1.c1, rt1.c2, t1.c0))) END;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c1 END)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (((((rt1.c0)OR(rt1.c2)))AND(rt0.c1)) IN (((rt1.c0)IS(rt0.c0)))) INNER JOIN t1 ON x'7463' ORDER BY CASE (- (rt1.c2))  WHEN rt1.c2 COLLATE RTRIM THEN (((rt0.c1, t1.c0, NULL))>((rt1.c1, rt1.c2, t1.c0))) END);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON (((((rt1.c0)OR(rt1.c2)))AND(rt0.c1)) IN (((rt1.c0)IS(rt0.c0)))) INNER JOIN t1 ON x'7463' WHERE (HEX(DISTINCT CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c1 END)) ORDER BY CASE (- (rt1.c2))  WHEN rt1.c2 COLLATE RTRIM THEN (((rt0.c1, t1.c0, NULL))>((rt1.c1, rt1.c2, t1.c0))) END;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c1 END)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (((((rt1.c0)OR(rt1.c2)))AND(rt0.c1)) IN (((rt1.c0)IS(rt0.c0)))) INNER JOIN t1 ON x'7463' ORDER BY CASE (- (rt1.c2))  WHEN rt1.c2 COLLATE RTRIM THEN (((rt0.c1, t1.c0, NULL))>((rt1.c1, rt1.c2, t1.c0))) END);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON (((((rt1.c0)OR(rt1.c2)))AND(rt0.c1)) IN (((rt1.c0)IS(rt0.c0)))) INNER JOIN t1 ON x'7463' WHERE (HEX(DISTINCT CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c1 END)) ORDER BY CASE (- (rt1.c2))  WHEN rt1.c2 COLLATE RTRIM THEN (((rt0.c1, t1.c0, NULL))>((rt1.c1, rt1.c2, t1.c0))) END;
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON (((((t1.c0))<((rt0.c0)))) IS FALSE) LEFT OUTER JOIN t1 ON (((t1.c0) ISNULL) IN ()) WHERE (CAST(x'53d4' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'53d4' AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((((t1.c0))<((rt0.c0)))) IS FALSE) LEFT OUTER JOIN t1 ON (((t1.c0) ISNULL) IN ()));
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON (((((t1.c0))<((rt0.c0)))) IS FALSE) LEFT OUTER JOIN t1 ON (((t1.c0) ISNULL) IN ()) WHERE (CAST(x'53d4' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'53d4' AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((((t1.c0))<((rt0.c0)))) IS FALSE) LEFT OUTER JOIN t1 ON (((t1.c0) ISNULL) IN ()));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN (((rt0.c2, rt0.c2, '-1104051681', rt1.c0, rt1.c0)) NOT BETWEEN ((NULL, rt0.c0, rt1.c1, rt1.c2, '-1541596820')) AND ((rt1.c1, rt1.c2, rt1.c1, rt0.c0, rt1.c1))) THEN rt0.c2 ELSE ((rt0.c0) NOTNULL) END LEFT OUTER JOIN t1 ON HEX(DISTINCT UPPER(DISTINCT rt1.c0)) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN (((rt0.c2, rt0.c2, '-1104051681', rt1.c0, rt1.c0)) NOT BETWEEN ((NULL, rt0.c0, rt1.c1, rt1.c2, '-1541596820')) AND ((rt1.c1, rt1.c2, rt1.c1, rt0.c0, rt1.c1))) THEN rt0.c2 ELSE ((rt0.c0) NOTNULL) END LEFT OUTER JOIN t1 ON HEX(DISTINCT UPPER(DISTINCT rt1.c0)));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN (((rt0.c2, rt0.c2, '-1104051681', rt1.c0, rt1.c0)) NOT BETWEEN ((NULL, rt0.c0, rt1.c1, rt1.c2, '-1541596820')) AND ((rt1.c1, rt1.c2, rt1.c1, rt0.c0, rt1.c1))) THEN rt0.c2 ELSE ((rt0.c0) NOTNULL) END LEFT OUTER JOIN t1 ON HEX(DISTINCT UPPER(DISTINCT rt1.c0)) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN (((rt0.c2, rt0.c2, '-1104051681', rt1.c0, rt1.c0)) NOT BETWEEN ((NULL, rt0.c0, rt1.c1, rt1.c2, '-1541596820')) AND ((rt1.c1, rt1.c2, rt1.c1, rt0.c0, rt1.c1))) THEN rt0.c2 ELSE ((rt0.c0) NOTNULL) END LEFT OUTER JOIN t1 ON HEX(DISTINCT UPPER(DISTINCT rt1.c0)));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN (((rt0.c2, rt0.c2, '-1104051681', rt1.c0, rt1.c0)) NOT BETWEEN ((NULL, rt0.c0, rt1.c1, rt1.c2, '-1541596820')) AND ((rt1.c1, rt1.c2, rt1.c1, rt0.c0, rt1.c1))) THEN rt0.c2 ELSE ((rt0.c0) NOTNULL) END LEFT OUTER JOIN t1 ON HEX(DISTINCT UPPER(DISTINCT rt1.c0)) WHERE (rt1.c2);
SELECT ALL * FROM t1 CROSS JOIN rt0 ON ((((rt0.c0 COLLATE BINARY)OR(rt0.c1)))OR(((((t1.c0)OR(rt0.c1)))OR(rt0.c0)))) WHERE (rt0.c1) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON ((((rt0.c0 COLLATE BINARY)OR(rt0.c1)))OR(((((t1.c0)OR(rt0.c1)))OR(rt0.c0)))) ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM t1 CROSS JOIN rt0 ON ((((rt0.c0 COLLATE BINARY)OR(rt0.c1)))OR(((((t1.c0)OR(rt0.c1)))OR(rt0.c0)))) WHERE (rt0.c1) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON ((((rt0.c0 COLLATE BINARY)OR(rt0.c1)))OR(((((t1.c0)OR(rt0.c1)))OR(rt0.c0)))) ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM t1 CROSS JOIN rt0 ON ((((rt0.c0 COLLATE BINARY)OR(rt0.c1)))OR(((((t1.c0)OR(rt0.c1)))OR(rt0.c0)))) WHERE (rt0.c1) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT * FROM rt0, rt1, t1 WHERE ((((rt1.c0 COLLATE NOCASE))<((((rt1.c0)IS NOT(rt1.c1)))))) ORDER BY HEX(DISTINCT ((rt0.c1) BETWEEN (t1.c0) AND (rt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0 COLLATE NOCASE))<((((rt1.c0)IS NOT(rt1.c1)))))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY HEX(DISTINCT ((rt0.c1) BETWEEN (t1.c0) AND (rt1.c2)))  NULLS LAST);
SELECT * FROM rt0, rt1, t1 WHERE ((((rt1.c0 COLLATE NOCASE))<((((rt1.c0)IS NOT(rt1.c1)))))) ORDER BY HEX(DISTINCT ((rt0.c1) BETWEEN (t1.c0) AND (rt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0 COLLATE NOCASE))<((((rt1.c0)IS NOT(rt1.c1)))))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY HEX(DISTINCT ((rt0.c1) BETWEEN (t1.c0) AND (rt1.c2)))  NULLS LAST);
SELECT * FROM rt0, rt1, t1 WHERE ((((rt1.c0 COLLATE NOCASE))<((((rt1.c0)IS NOT(rt1.c1)))))) ORDER BY HEX(DISTINCT ((rt0.c1) BETWEEN (t1.c0) AND (rt1.c2)))  NULLS LAST;
SELECT * FROM rt1 INDEXED BY i0 CROSS JOIN t1 ON ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END)==(((rt1.c0) NOTNULL))) WHERE (rt1.c2) ORDER BY ((0.9204920235942873)OR(CASE WHEN t1.c0 THEN '131728975' END)) DESC, ((((rt1.c2)|(rt1.c1))) NOT BETWEEN (x'694c') AND (t1.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 INDEXED BY i0 CROSS JOIN t1 ON ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END)==(((rt1.c0) NOTNULL))) ORDER BY ((0.9204920235942873)OR(CASE WHEN t1.c0 THEN '131728975' END)) DESC, ((((rt1.c2)|(rt1.c1))) NOT BETWEEN (x'694c') AND (t1.c0 COLLATE NOCASE)) ASC);
SELECT * FROM rt1 INDEXED BY i0 CROSS JOIN t1 ON ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END)==(((rt1.c0) NOTNULL))) WHERE (rt1.c2) ORDER BY ((0.9204920235942873)OR(CASE WHEN t1.c0 THEN '131728975' END)) DESC, ((((rt1.c2)|(rt1.c1))) NOT BETWEEN (x'694c') AND (t1.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 INDEXED BY i0 CROSS JOIN t1 ON ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END)==(((rt1.c0) NOTNULL))) ORDER BY ((0.9204920235942873)OR(CASE WHEN t1.c0 THEN '131728975' END)) DESC, ((((rt1.c2)|(rt1.c1))) NOT BETWEEN (x'694c') AND (t1.c0 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN t1 ON ((rt0.c0) BETWEEN ('-1594770456') AND (((rt0.c2) NOTNULL))) WHERE (((((((rt0.c1) BETWEEN (t1.c0) AND (rt0.c1)))AND(CAST(t1.c0 AS BLOB))))OR(((((rt0.c2)AND(rt1.c1)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) BETWEEN (t1.c0) AND (rt0.c1)))AND(CAST(t1.c0 AS BLOB))))OR(((((rt0.c2)AND(rt1.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN t1 ON ((rt0.c0) BETWEEN ('-1594770456') AND (((rt0.c2) NOTNULL))));
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN t1 ON ((rt0.c0) BETWEEN ('-1594770456') AND (((rt0.c2) NOTNULL))) WHERE (((((((rt0.c1) BETWEEN (t1.c0) AND (rt0.c1)))AND(CAST(t1.c0 AS BLOB))))OR(((((rt0.c2)AND(rt1.c1)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) BETWEEN (t1.c0) AND (rt0.c1)))AND(CAST(t1.c0 AS BLOB))))OR(((((rt0.c2)AND(rt1.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN t1 ON ((rt0.c0) BETWEEN ('-1594770456') AND (((rt0.c2) NOTNULL))));
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN t1 ON ((rt0.c0) BETWEEN ('-1594770456') AND (((rt0.c2) NOTNULL))) WHERE (((((((rt0.c1) BETWEEN (t1.c0) AND (rt0.c1)))AND(CAST(t1.c0 AS BLOB))))OR(((((rt0.c2)AND(rt1.c1)))OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM t1, rt1 RIGHT OUTER JOIN rt0 ON ((rt1.c0) BETWEEN (((t1.c0) IS FALSE)) AND (((((((((((((rt1.c0)AND(rt0.c1)))OR(rt1.c1)))AND(rt0.c2)))AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c0)))) WHERE (json_quote((rt1.c2 IN (rt1.c2))));
SELECT SUM(count) FROM (SELECT ((json_quote((rt1.c2 IN (rt1.c2)))) IS TRUE)  as count FROM t1, rt1 RIGHT OUTER JOIN rt0 ON ((rt1.c0) BETWEEN (((t1.c0) IS FALSE)) AND (((((((((((((rt1.c0)AND(rt0.c1)))OR(rt1.c1)))AND(rt0.c2)))AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c0)))));
SELECT ALL COUNT(*) FROM t1, rt1 RIGHT OUTER JOIN rt0 ON ((rt1.c0) BETWEEN (((t1.c0) IS FALSE)) AND (((((((((((((rt1.c0)AND(rt0.c1)))OR(rt1.c1)))AND(rt0.c2)))AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c0)))) WHERE (json_quote((rt1.c2 IN (rt1.c2))));
SELECT SUM(count) FROM (SELECT ((json_quote((rt1.c2 IN (rt1.c2)))) IS TRUE)  as count FROM t1, rt1 RIGHT OUTER JOIN rt0 ON ((rt1.c0) BETWEEN (((t1.c0) IS FALSE)) AND (((((((((((((rt1.c0)AND(rt0.c1)))OR(rt1.c1)))AND(rt0.c2)))AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c0)))));
SELECT ALL COUNT(*) FROM t1, rt1 RIGHT OUTER JOIN rt0 ON ((rt1.c0) BETWEEN (((t1.c0) IS FALSE)) AND (((((((((((((rt1.c0)AND(rt0.c1)))OR(rt1.c1)))AND(rt0.c2)))AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c0)))) WHERE (json_quote((rt1.c2 IN (rt1.c2))));
SELECT ALL * FROM t1, rt1, rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2)))) AND ((((rt1.c2)&(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2)))) AND ((((rt1.c2)&(rt0.c1)))))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2)))) AND ((((rt1.c2)&(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2)))) AND ((((rt1.c2)&(rt0.c1)))))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c2)))) AND ((((rt1.c2)&(rt0.c1))))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((MIN(t1.c0, t1.c0)))<>((CAST(',|' AS REAL))))) ORDER BY ((((((((((t1.c0) NOT BETWEEN (t1.c0) AND ('-336917958')))AND(('0.3470392702707604' IN ()))))AND(CAST(t1.c0 AS NUMERIC))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(PRINTF(t1.c0)));
SELECT SUM(count) FROM (SELECT (((((MIN(t1.c0, t1.c0)))!=((CAST(',|' AS REAL))))) IS TRUE)  as count FROM t1 ORDER BY ((((((((((t1.c0) NOT BETWEEN (t1.c0) AND ('-336917958')))AND(('0.3470392702707604' IN ()))))AND(CAST(t1.c0 AS NUMERIC))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(PRINTF(t1.c0))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((MIN(t1.c0, t1.c0)))<>((CAST(',|' AS REAL))))) ORDER BY ((((((((((t1.c0) NOT BETWEEN (t1.c0) AND ('-336917958')))AND(('0.3470392702707604' IN ()))))AND(CAST(t1.c0 AS NUMERIC))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(PRINTF(t1.c0)));
SELECT SUM(count) FROM (SELECT (((((MIN(t1.c0, t1.c0)))!=((CAST(',|' AS REAL))))) IS TRUE)  as count FROM t1 ORDER BY ((((((((((t1.c0) NOT BETWEEN (t1.c0) AND ('-336917958')))AND(('0.3470392702707604' IN ()))))AND(CAST(t1.c0 AS NUMERIC))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(PRINTF(t1.c0))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((MIN(t1.c0, t1.c0)))<>((CAST(',|' AS REAL))))) ORDER BY ((((((((((t1.c0) NOT BETWEEN (t1.c0) AND ('-336917958')))AND(('0.3470392702707604' IN ()))))AND(CAST(t1.c0 AS NUMERIC))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(PRINTF(t1.c0)));
SELECT * FROM t1 WHERE (((((t1.c0) IS FALSE))>=(((t1.c0)<=(t1.c0))))) ORDER BY (+ (((t1.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((((((t1.c0) IS FALSE))>=(((t1.c0)<=(t1.c0))))) IS TRUE)  as count FROM t1 NOT INDEXED ORDER BY (+ (((t1.c0) IS TRUE))));
SELECT * FROM t1 WHERE (((((t1.c0) IS FALSE))>=(((t1.c0)<=(t1.c0))))) ORDER BY (+ (((t1.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((((((t1.c0) IS FALSE))>=(((t1.c0)<=(t1.c0))))) IS TRUE)  as count FROM t1 NOT INDEXED ORDER BY (+ (((t1.c0) IS TRUE))));
SELECT * FROM t1 WHERE (((((t1.c0) IS FALSE))>=(((t1.c0)<=(t1.c0))))) ORDER BY (+ (((t1.c0) IS TRUE)));
SELECT * FROM rt0 INNER JOIN t1 ON (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)) IN ()) WHERE ((rt0.c0 IN ()) COLLATE RTRIM) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)) IN ()) ORDER BY rt0.c1 ASC);
SELECT * FROM rt0 INNER JOIN t1 ON (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)) IN ()) WHERE ((rt0.c0 IN ()) COLLATE RTRIM) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)) IN ()) ORDER BY rt0.c1 ASC);
SELECT * FROM rt0 INNER JOIN t1 ON (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)) IN ()) WHERE ((rt0.c0 IN ()) COLLATE RTRIM) ORDER BY rt0.c1 ASC;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) ISNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) ISNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) ISNULL) AS NUMERIC));
SELECT COUNT(*) FROM rt1 INNER JOIN t1 ON rt1.c1 WHERE ((((rt1.c1)) NOT BETWEEN ((((0.38751472882685256) BETWEEN (t1.c0) AND (t1.c0)))) AND ((rt1.c1))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((((0.38751472882685256) BETWEEN (t1.c0) AND (t1.c0)))) AND ((rt1.c1)))) IS TRUE)  as count FROM rt1 INNER JOIN t1 ON rt1.c1);
SELECT COUNT(*) FROM rt1 INNER JOIN t1 ON rt1.c1 WHERE ((((rt1.c1)) NOT BETWEEN ((((0.38751472882685256) BETWEEN (t1.c0) AND (t1.c0)))) AND ((rt1.c1))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((((0.38751472882685256) BETWEEN (t1.c0) AND (t1.c0)))) AND ((rt1.c1)))) IS TRUE)  as count FROM rt1 INNER JOIN t1 ON rt1.c1);
SELECT COUNT(*) FROM rt1 INNER JOIN t1 ON rt1.c1 WHERE ((((rt1.c1)) NOT BETWEEN ((((0.38751472882685256) BETWEEN (t1.c0) AND (t1.c0)))) AND ((rt1.c1))));
SELECT ALL * FROM rt0, rt1, t1 WHERE (rt0.c1) ORDER BY ((CASE WHEN NULL THEN t1.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 END) BETWEEN (-831809353) AND (((rt1.c2) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((CASE WHEN NULL THEN t1.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 END) BETWEEN (-831809353) AND (((rt1.c2) IS TRUE))) DESC);
SELECT ALL * FROM rt0, rt1, t1 WHERE (rt0.c1) ORDER BY ((CASE WHEN NULL THEN t1.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 END) BETWEEN (-831809353) AND (((rt1.c2) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((CASE WHEN NULL THEN t1.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 END) BETWEEN (-831809353) AND (((rt1.c2) IS TRUE))) DESC);
SELECT ALL * FROM rt0, rt1, t1 WHERE (rt0.c1) ORDER BY ((CASE WHEN NULL THEN t1.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 END) BETWEEN (-831809353) AND (((rt1.c2) IS TRUE))) DESC;
SELECT * FROM rt1, rt0, t1 WHERE (NULLIF(DISTINCT (- (rt1.c0)), '1234305515'));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (- (rt1.c0)), '1234305515')) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE (NULLIF(DISTINCT (- (rt1.c0)), '1234305515'));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (- (rt1.c0)), '1234305515')) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE (NULLIF(DISTINCT (- (rt1.c0)), '1234305515'));
SELECT * FROM rt1 INNER JOIN rt0 ON CAST(((rt1.c1) IS FALSE) AS NUMERIC) WHERE ((+ (rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((+ (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON CAST(((rt1.c1) IS FALSE) AS NUMERIC));
SELECT * FROM rt1 INNER JOIN rt0 ON CAST(((rt1.c1) IS FALSE) AS NUMERIC) WHERE ((+ (rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((+ (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON CAST(((rt1.c1) IS FALSE) AS NUMERIC));
SELECT * FROM rt1 INNER JOIN rt0 ON CAST(((rt1.c1) IS FALSE) AS NUMERIC) WHERE ((+ (rt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((rt0.c1) IS TRUE) COLLATE NOCASE) ORDER BY rt0.c0, (t1.c0 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1 ORDER BY rt0.c0, (t1.c0 IN ()) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((rt0.c1) IS TRUE) COLLATE NOCASE) ORDER BY rt0.c0, (t1.c0 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1 ORDER BY rt0.c0, (t1.c0 IN ()) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((rt0.c1) IS TRUE) COLLATE NOCASE) ORDER BY rt0.c0, (t1.c0 IN ()) COLLATE BINARY ASC;
SELECT * FROM rt1 WHERE (((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (NULL)))OR(CAST(rt1.c0 AS REAL))))AND(rt1.c1))) ORDER BY TYPEOF((rt1.c1 IN (rt1.c0))) ASC, ((((('')) BETWEEN ((rt1.c1)) AND ((rt1.c2))))AND((((rt1.c1))>=((NULL)))))  NULLS LAST, (((((rt1.c1)/(rt1.c2)), ((((((((rt1.c0)AND(rt1.c0)))OR('*F')))OR(rt1.c0)))OR('ᥬ*-yA	re')), ((rt1.c2) NOTNULL)))!=(((rt1.c2 IN (rt1.c1)), ((rt1.c1)>(rt1.c1)), ((rt1.c1) IS FALSE)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (NULL)))OR(CAST(rt1.c0 AS REAL))))AND(rt1.c1))) IS TRUE)  as count FROM rt1 ORDER BY TYPEOF((rt1.c1 IN (rt1.c0))) ASC, ((((('')) BETWEEN ((rt1.c1)) AND ((rt1.c2))))AND((((rt1.c1))>=((NULL)))))  NULLS LAST, (((((rt1.c1)/(rt1.c2)), ((((((((rt1.c0)AND(rt1.c0)))OR('*F')))OR(rt1.c0)))OR('ᥬ*-yA	re')), ((rt1.c2) NOTNULL)))!=(((rt1.c2 IN (rt1.c1)), ((rt1.c1)>(rt1.c1)), ((rt1.c1) IS FALSE)))) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (NULL)))OR(CAST(rt1.c0 AS REAL))))AND(rt1.c1))) ORDER BY TYPEOF((rt1.c1 IN (rt1.c0))) ASC, ((((('')) BETWEEN ((rt1.c1)) AND ((rt1.c2))))AND((((rt1.c1))>=((NULL)))))  NULLS LAST, (((((rt1.c1)/(rt1.c2)), ((((((((rt1.c0)AND(rt1.c0)))OR('*F')))OR(rt1.c0)))OR('ᥬ*-yA	re')), ((rt1.c2) NOTNULL)))!=(((rt1.c2 IN (rt1.c1)), ((rt1.c1)>(rt1.c1)), ((rt1.c1) IS FALSE)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (NULL)))OR(CAST(rt1.c0 AS REAL))))AND(rt1.c1))) IS TRUE)  as count FROM rt1 ORDER BY TYPEOF((rt1.c1 IN (rt1.c0))) ASC, ((((('')) BETWEEN ((rt1.c1)) AND ((rt1.c2))))AND((((rt1.c1))>=((NULL)))))  NULLS LAST, (((((rt1.c1)/(rt1.c2)), ((((((((rt1.c0)AND(rt1.c0)))OR('*F')))OR(rt1.c0)))OR('ᥬ*-yA	re')), ((rt1.c2) NOTNULL)))!=(((rt1.c2 IN (rt1.c1)), ((rt1.c1)>(rt1.c1)), ((rt1.c1) IS FALSE)))) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (NULL)))OR(CAST(rt1.c0 AS REAL))))AND(rt1.c1))) ORDER BY TYPEOF((rt1.c1 IN (rt1.c0))) ASC, ((((('')) BETWEEN ((rt1.c1)) AND ((rt1.c2))))AND((((rt1.c1))>=((NULL)))))  NULLS LAST, (((((rt1.c1)/(rt1.c2)), ((((((((rt1.c0)AND(rt1.c0)))OR('*F')))OR(rt1.c0)))OR('ᥬ*-yA	re')), ((rt1.c2) NOTNULL)))!=(((rt1.c2 IN (rt1.c1)), ((rt1.c1)>(rt1.c1)), ((rt1.c1) IS FALSE)))) ASC  NULLS LAST;
SELECT * FROM rt1, t1 WHERE ((((rt1.c2, rt1.c1, rt1.c0)) BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c1 END, IFNULL(DISTINCT rt1.c2, rt1.c1), ((t1.c0)<(rt1.c0)))) AND (((- (0.8830667130155226)), ((rt1.c2)>(rt1.c2)), (NOT (rt1.c0)))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2, rt1.c1, rt1.c0)) BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c1 END, IFNULL(DISTINCT rt1.c2, rt1.c1), ((t1.c0)<(rt1.c0)))) AND (((- (0.8830667130155226)), ((rt1.c2)>(rt1.c2)), (NOT (rt1.c0)))))) IS TRUE)  as count FROM rt1, t1 ORDER BY NULL  NULLS LAST);
SELECT * FROM rt1, t1 WHERE ((((rt1.c2, rt1.c1, rt1.c0)) BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c1 END, IFNULL(DISTINCT rt1.c2, rt1.c1), ((t1.c0)<(rt1.c0)))) AND (((- (0.8830667130155226)), ((rt1.c2)>(rt1.c2)), (NOT (rt1.c0)))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2, rt1.c1, rt1.c0)) BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c1 END, IFNULL(DISTINCT rt1.c2, rt1.c1), ((t1.c0)<(rt1.c0)))) AND (((- (0.8830667130155226)), ((rt1.c2)>(rt1.c2)), (NOT (rt1.c0)))))) IS TRUE)  as count FROM rt1, t1 ORDER BY NULL  NULLS LAST);
SELECT * FROM rt1, t1 WHERE ((((rt1.c2, rt1.c1, rt1.c0)) BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c1 END, IFNULL(DISTINCT rt1.c2, rt1.c1), ((t1.c0)<(rt1.c0)))) AND (((- (0.8830667130155226)), ((rt1.c2)>(rt1.c2)), (NOT (rt1.c0)))))) ORDER BY NULL  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0)))) NOT BETWEEN ((rt0.c1 IN ())) AND (')U' COLLATE NOCASE))) ORDER BY CASE ((rt1.c1) BETWEEN (rt1.c0) AND (t1.c0))  WHEN (0.45750702912348584 IN ()) THEN rt1.c2 COLLATE RTRIM WHEN (rt1.c0 IN ()) THEN (((rt1.c2))>((t1.c0))) WHEN (((rt1.c0))<>((rt1.c0))) THEN (t1.c0 IN ()) ELSE (((t1.c0))!=((t1.c0))) END ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0)))) NOT BETWEEN ((rt0.c1 IN ())) AND (')U' COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY CASE ((rt1.c1) BETWEEN (rt1.c0) AND (t1.c0))  WHEN (0.45750702912348584 IN ()) THEN rt1.c2 COLLATE RTRIM WHEN (rt1.c0 IN ()) THEN (((rt1.c2))>((t1.c0))) WHEN (((rt1.c0))<>((rt1.c0))) THEN (t1.c0 IN ()) ELSE (((t1.c0))<>((t1.c0))) END ASC);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0)))) NOT BETWEEN ((rt0.c1 IN ())) AND (')U' COLLATE NOCASE))) ORDER BY CASE ((rt1.c1) BETWEEN (rt1.c0) AND (t1.c0))  WHEN (0.45750702912348584 IN ()) THEN rt1.c2 COLLATE RTRIM WHEN (rt1.c0 IN ()) THEN (((rt1.c2))>((t1.c0))) WHEN (((rt1.c0))<>((rt1.c0))) THEN (t1.c0 IN ()) ELSE (((t1.c0))!=((t1.c0))) END ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0)))) NOT BETWEEN ((rt0.c1 IN ())) AND (')U' COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY CASE ((rt1.c1) BETWEEN (rt1.c0) AND (t1.c0))  WHEN (0.45750702912348584 IN ()) THEN rt1.c2 COLLATE RTRIM WHEN (rt1.c0 IN ()) THEN (((rt1.c2))>((t1.c0))) WHEN (((rt1.c0))<>((rt1.c0))) THEN (t1.c0 IN ()) ELSE (((t1.c0))<>((t1.c0))) END ASC);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0)))) NOT BETWEEN ((rt0.c1 IN ())) AND (')U' COLLATE NOCASE))) ORDER BY CASE ((rt1.c1) BETWEEN (rt1.c0) AND (t1.c0))  WHEN (0.45750702912348584 IN ()) THEN rt1.c2 COLLATE RTRIM WHEN (rt1.c0 IN ()) THEN (((rt1.c2))>((t1.c0))) WHEN (((rt1.c0))<>((rt1.c0))) THEN (t1.c0 IN ()) ELSE (((t1.c0))!=((t1.c0))) END ASC;
SELECT ALL * FROM rt1 WHERE ((~ (((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c2)))OR(-5.7233491E8)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c2)))OR(-5.7233491E8)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((~ (((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c2)))OR(-5.7233491E8)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c2)))OR(-5.7233491E8)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((~ (((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c2)))OR(-5.7233491E8)))OR(rt1.c1)))));
SELECT * FROM rt0, t1, rt1 WHERE (((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END)AND(CASE t1.c0  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN t1.c0 END)))AND(((rt0.c1)%(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END)AND(CASE t1.c0  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN t1.c0 END)))AND(((rt0.c1)%(rt0.c1))))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT * FROM rt0, t1, rt1 WHERE (((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END)AND(CASE t1.c0  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN t1.c0 END)))AND(((rt0.c1)%(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END)AND(CASE t1.c0  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN t1.c0 END)))AND(((rt0.c1)%(rt0.c1))))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT * FROM rt0, t1, rt1 WHERE (((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END)AND(CASE t1.c0  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN t1.c0 END)))AND(((rt0.c1)%(rt0.c1)))));
SELECT COUNT(*) FROM rt0, t1, rt1 NOT INDEXED WHERE ((((x'')) BETWEEN ((CAST(rt0.c0 AS REAL))) AND ((((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((x'')) BETWEEN ((CAST(rt0.c0 AS REAL))) AND ((((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c1)))))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT COUNT(*) FROM rt0, t1, rt1 NOT INDEXED WHERE ((((x'')) BETWEEN ((CAST(rt0.c0 AS REAL))) AND ((((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((x'')) BETWEEN ((CAST(rt0.c0 AS REAL))) AND ((((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c1)))))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT COUNT(*) FROM rt0, t1, rt1 NOT INDEXED WHERE ((((x'')) BETWEEN ((CAST(rt0.c0 AS REAL))) AND ((((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c1))))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt1.c0);
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN t1 ON rt1.c0 WHERE (((rt1.c0) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN t1 ON rt1.c0);
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN t1 ON rt1.c0 WHERE (((rt1.c0) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN t1 ON rt1.c0);
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN t1 ON rt1.c0 WHERE (((rt1.c0) NOTNULL) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM) ORDER BY CASE WHEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c1) IS FALSE) ELSE ((rt0.c0)AND(rt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c1) IS FALSE) ELSE ((rt0.c0)AND(rt0.c1)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM) ORDER BY CASE WHEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c1) IS FALSE) ELSE ((rt0.c0)AND(rt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c1) IS FALSE) ELSE ((rt0.c0)AND(rt0.c1)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM) ORDER BY CASE WHEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c1) IS FALSE) ELSE ((rt0.c0)AND(rt0.c1)) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((((((((CHAR(rt0.c0, rt1.c1, rt0.c0))OR(rt0.c1)))AND(((rt0.c0)+(rt0.c2)))))AND(((((t1.c0)OR(rt0.c1)))AND(rt1.c0)))))OR(((rt1.c2)>(t1.c0)))) INNER JOIN t1 ON (+ ('-1706025126')) WHERE ((((t1.c0) BETWEEN ('0S륃YL') AND (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0) BETWEEN ('0S륃YL') AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((((((CHAR(rt0.c0, rt1.c1, rt0.c0))OR(rt0.c1)))AND(((rt0.c0)+(rt0.c2)))))AND(((((t1.c0)OR(rt0.c1)))AND(rt1.c0)))))OR(((rt1.c2)>(t1.c0)))) INNER JOIN t1 ON (+ ('-1706025126')));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((((((((CHAR(rt0.c0, rt1.c1, rt0.c0))OR(rt0.c1)))AND(((rt0.c0)+(rt0.c2)))))AND(((((t1.c0)OR(rt0.c1)))AND(rt1.c0)))))OR(((rt1.c2)>(t1.c0)))) INNER JOIN t1 ON (+ ('-1706025126')) WHERE ((((t1.c0) BETWEEN ('0S륃YL') AND (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0) BETWEEN ('0S륃YL') AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((((((CHAR(rt0.c0, rt1.c1, rt0.c0))OR(rt0.c1)))AND(((rt0.c0)+(rt0.c2)))))AND(((((t1.c0)OR(rt0.c1)))AND(rt1.c0)))))OR(((rt1.c2)>(t1.c0)))) INNER JOIN t1 ON (+ ('-1706025126')));
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((t1.c0 IN ()) IN ())  NULLS LAST, (((CAST(t1.c0 AS TEXT), ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(NULL)), ((((t1.c0)OR(t1.c0)))OR(t1.c0))))<>((((t1.c0)<>(t1.c0)), ((t1.c0)OR(t1.c0)), ((t1.c0) IS TRUE)))) ASC;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0 IN ()) IN ())  NULLS LAST, (((CAST(t1.c0 AS TEXT), ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(NULL)), ((((t1.c0)OR(t1.c0)))OR(t1.c0))))<>((((t1.c0)!=(t1.c0)), ((t1.c0)OR(t1.c0)), ((t1.c0) IS TRUE)))) ASC);
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((t1.c0 IN ()) IN ())  NULLS LAST, (((CAST(t1.c0 AS TEXT), ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(NULL)), ((((t1.c0)OR(t1.c0)))OR(t1.c0))))<>((((t1.c0)<>(t1.c0)), ((t1.c0)OR(t1.c0)), ((t1.c0) IS TRUE)))) ASC;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0 IN ()) IN ())  NULLS LAST, (((CAST(t1.c0 AS TEXT), ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(NULL)), ((((t1.c0)OR(t1.c0)))OR(t1.c0))))<>((((t1.c0)!=(t1.c0)), ((t1.c0)OR(t1.c0)), ((t1.c0) IS TRUE)))) ASC);
SELECT * FROM t1 WHERE (t1.c0) ORDER BY ((t1.c0 IN ()) IN ())  NULLS LAST, (((CAST(t1.c0 AS TEXT), ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(NULL)), ((((t1.c0)OR(t1.c0)))OR(t1.c0))))<>((((t1.c0)<>(t1.c0)), ((t1.c0)OR(t1.c0)), ((t1.c0) IS TRUE)))) ASC;
SELECT * FROM rt0, rt1 WHERE (CAST(0.21832183023667728 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(0.21832183023667728 AS TEXT)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CAST(0.21832183023667728 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(0.21832183023667728 AS TEXT)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CAST(0.21832183023667728 AS TEXT));
SELECT * FROM rt0 WHERE ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) IN ())) ORDER BY ((NULLIF(rt0.c2, rt0.c1))+(((rt0.c0)GLOB(rt0.c2)))) DESC, (((rt0.c2 IN ()))-(((rt0.c2)%(rt0.c1)))) DESC  NULLS FIRST, (rt0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((NULLIF(rt0.c2, rt0.c1))+(((rt0.c0)GLOB(rt0.c2)))) DESC, (((rt0.c2 IN ()))-(((rt0.c2)%(rt0.c1)))) DESC  NULLS FIRST, (rt0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) IN ())) ORDER BY ((NULLIF(rt0.c2, rt0.c1))+(((rt0.c0)GLOB(rt0.c2)))) DESC, (((rt0.c2 IN ()))-(((rt0.c2)%(rt0.c1)))) DESC  NULLS FIRST, (rt0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((NULLIF(rt0.c2, rt0.c1))+(((rt0.c0)GLOB(rt0.c2)))) DESC, (((rt0.c2 IN ()))-(((rt0.c2)%(rt0.c1)))) DESC  NULLS FIRST, (rt0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) IN ())) ORDER BY ((NULLIF(rt0.c2, rt0.c1))+(((rt0.c0)GLOB(rt0.c2)))) DESC, (((rt0.c2 IN ()))-(((rt0.c2)%(rt0.c1)))) DESC  NULLS FIRST, (rt0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (~ ((((rt0.c1, rt0.c2, rt1.c0))==((t1.c0, rt1.c2, rt0.c2))))) CROSS JOIN t1 ON ((((((((CASE rt1.c2  WHEN rt0.c2 THEN t1.c0 ELSE rt0.c2 END)OR((x'' IN ()))))OR(((t1.c0) ISNULL))))OR(CAST(rt1.c2 AS BLOB))))AND((rt1.c0 IN ()))) WHERE (TRIM(((rt1.c1)IS NOT(t1.c0)), CASE WHEN rt0.c0 THEN 673639831 ELSE rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt1.c1)IS NOT(t1.c0)), CASE WHEN rt0.c0 THEN 673639831 ELSE rt0.c2 END)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (~ ((((rt0.c1, rt0.c2, rt1.c0))==((t1.c0, rt1.c2, rt0.c2))))) CROSS JOIN t1 ON ((((((((CASE rt1.c2  WHEN rt0.c2 THEN t1.c0 ELSE rt0.c2 END)OR((x'' IN ()))))OR(((t1.c0) ISNULL))))OR(CAST(rt1.c2 AS BLOB))))AND((rt1.c0 IN ()))));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (~ ((((rt0.c1, rt0.c2, rt1.c0))==((t1.c0, rt1.c2, rt0.c2))))) CROSS JOIN t1 ON ((((((((CASE rt1.c2  WHEN rt0.c2 THEN t1.c0 ELSE rt0.c2 END)OR((x'' IN ()))))OR(((t1.c0) ISNULL))))OR(CAST(rt1.c2 AS BLOB))))AND((rt1.c0 IN ()))) WHERE (TRIM(((rt1.c1)IS NOT(t1.c0)), CASE WHEN rt0.c0 THEN 673639831 ELSE rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt1.c1)IS NOT(t1.c0)), CASE WHEN rt0.c0 THEN 673639831 ELSE rt0.c2 END)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (~ ((((rt0.c1, rt0.c2, rt1.c0))==((t1.c0, rt1.c2, rt0.c2))))) CROSS JOIN t1 ON ((((((((CASE rt1.c2  WHEN rt0.c2 THEN t1.c0 ELSE rt0.c2 END)OR((x'' IN ()))))OR(((t1.c0) ISNULL))))OR(CAST(rt1.c2 AS BLOB))))AND((rt1.c0 IN ()))));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (~ ((((rt0.c1, rt0.c2, rt1.c0))==((t1.c0, rt1.c2, rt0.c2))))) CROSS JOIN t1 ON ((((((((CASE rt1.c2  WHEN rt0.c2 THEN t1.c0 ELSE rt0.c2 END)OR((x'' IN ()))))OR(((t1.c0) ISNULL))))OR(CAST(rt1.c2 AS BLOB))))AND((rt1.c0 IN ()))) WHERE (TRIM(((rt1.c1)IS NOT(t1.c0)), CASE WHEN rt0.c0 THEN 673639831 ELSE rt0.c2 END));
SELECT * FROM rt1 WHERE (x'be79');
SELECT SUM(count) FROM (SELECT ((x'be79') IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (x'be79');
SELECT SUM(count) FROM (SELECT ((x'be79') IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (x'be79');
SELECT ALL COUNT(*) FROM t1, rt1 INNER JOIN rt0 ON '-101393673' WHERE (((CASE NULL  WHEN rt1.c1 THEN rt0.c1 WHEN '  s?>' THEN rt0.c2 WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c1 END) NOT NULL)) ORDER BY (rt0.c2 IN (UPPER(rt0.c1), CASE WHEN rt0.c2 THEN '-281343313' WHEN x'5ec7' THEN rt1.c0 WHEN NULL THEN rt0.c0 END)), (((SQLITE_VERSION(), (NOT (rt1.c0)), CASE WHEN rt0.c0 THEN rt1.c1 END))=(((t1.c0 IN ()), ((t1.c0)=(rt0.c0)), rt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN rt1.c1 THEN rt0.c1 WHEN '  s?>' THEN rt0.c2 WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c1 END) NOT NULL)) IS TRUE)  as count FROM t1, rt1 INNER JOIN rt0 ON '-101393673' ORDER BY (rt0.c2 IN (UPPER(rt0.c1), CASE WHEN rt0.c2 THEN '-281343313' WHEN x'5ec7' THEN rt1.c0 WHEN NULL THEN rt0.c0 END)), (((SQLITE_VERSION(), (NOT (rt1.c0)), CASE WHEN rt0.c0 THEN rt1.c1 END))==(((t1.c0 IN ()), ((t1.c0)=(rt0.c0)), rt1.c0 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM t1, rt1 INNER JOIN rt0 ON '-101393673' WHERE (((CASE NULL  WHEN rt1.c1 THEN rt0.c1 WHEN '  s?>' THEN rt0.c2 WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c1 END) NOT NULL)) ORDER BY (rt0.c2 IN (UPPER(rt0.c1), CASE WHEN rt0.c2 THEN '-281343313' WHEN x'5ec7' THEN rt1.c0 WHEN NULL THEN rt0.c0 END)), (((SQLITE_VERSION(), (NOT (rt1.c0)), CASE WHEN rt0.c0 THEN rt1.c1 END))=(((t1.c0 IN ()), ((t1.c0)=(rt0.c0)), rt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN rt1.c1 THEN rt0.c1 WHEN '  s?>' THEN rt0.c2 WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c1 END) NOT NULL)) IS TRUE)  as count FROM t1, rt1 INNER JOIN rt0 ON '-101393673' ORDER BY (rt0.c2 IN (UPPER(rt0.c1), CASE WHEN rt0.c2 THEN '-281343313' WHEN x'5ec7' THEN rt1.c0 WHEN NULL THEN rt0.c0 END)), (((SQLITE_VERSION(), (NOT (rt1.c0)), CASE WHEN rt0.c0 THEN rt1.c1 END))==(((t1.c0 IN ()), ((t1.c0)=(rt0.c0)), rt1.c0 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM t1, rt1 INNER JOIN rt0 ON '-101393673' WHERE (((CASE NULL  WHEN rt1.c1 THEN rt0.c1 WHEN '  s?>' THEN rt0.c2 WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c1 END) NOT NULL)) ORDER BY (rt0.c2 IN (UPPER(rt0.c1), CASE WHEN rt0.c2 THEN '-281343313' WHEN x'5ec7' THEN rt1.c0 WHEN NULL THEN rt0.c0 END)), (((SQLITE_VERSION(), (NOT (rt1.c0)), CASE WHEN rt0.c0 THEN rt1.c1 END))=(((t1.c0 IN ()), ((t1.c0)=(rt0.c0)), rt1.c0 COLLATE NOCASE)));
SELECT ALL * FROM rt1 WHERE (((((((rt1.c1)=(x'')))OR(CAST(rt1.c1 AS REAL))))OR(((rt1.c2) IS TRUE)))) ORDER BY CASE ((rt1.c0) IS TRUE)  WHEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN x'' END THEN ((rt1.c2) NOT NULL) ELSE ((rt1.c1)IS NOT(rt1.c0)) END ASC  NULLS LAST, ((rt1.c0 IN ()) IN (rt1.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)=(x'')))OR(CAST(rt1.c1 AS REAL))))OR(((rt1.c2) IS TRUE)))) IS TRUE)  as count FROM rt1 ORDER BY CASE ((rt1.c0) IS TRUE)  WHEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN x'' END THEN ((rt1.c2) NOT NULL) ELSE ((rt1.c1)IS NOT(rt1.c0)) END ASC  NULLS LAST, ((rt1.c0 IN ()) IN (rt1.c2 COLLATE BINARY)));
SELECT ALL * FROM rt1 WHERE (((((((rt1.c1)=(x'')))OR(CAST(rt1.c1 AS REAL))))OR(((rt1.c2) IS TRUE)))) ORDER BY CASE ((rt1.c0) IS TRUE)  WHEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN x'' END THEN ((rt1.c2) NOT NULL) ELSE ((rt1.c1)IS NOT(rt1.c0)) END ASC  NULLS LAST, ((rt1.c0 IN ()) IN (rt1.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)=(x'')))OR(CAST(rt1.c1 AS REAL))))OR(((rt1.c2) IS TRUE)))) IS TRUE)  as count FROM rt1 ORDER BY CASE ((rt1.c0) IS TRUE)  WHEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN x'' END THEN ((rt1.c2) NOT NULL) ELSE ((rt1.c1)IS NOT(rt1.c0)) END ASC  NULLS LAST, ((rt1.c0 IN ()) IN (rt1.c2 COLLATE BINARY)));
SELECT ALL * FROM rt1 WHERE (((((((rt1.c1)=(x'')))OR(CAST(rt1.c1 AS REAL))))OR(((rt1.c2) IS TRUE)))) ORDER BY CASE ((rt1.c0) IS TRUE)  WHEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN x'' END THEN ((rt1.c2) NOT NULL) ELSE ((rt1.c1)IS NOT(rt1.c0)) END ASC  NULLS LAST, ((rt1.c0 IN ()) IN (rt1.c2 COLLATE BINARY));
SELECT ALL * FROM rt0 WHERE (CASE CASE WHEN rt0.c1 THEN x'9ce3' WHEN rt0.c0 THEN rt0.c1 WHEN '1846440454' THEN 0.5980980873245009 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END  WHEN (0.49576768059273735 IN ()) THEN (NOT (rt0.c1)) ELSE rt0.c2 END) ORDER BY (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((NULL, rt0.c0, '-805292177')) AND ((rt0.c0, rt0.c2, rt0.c1))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN rt0.c1 THEN x'9ce3' WHEN rt0.c0 THEN rt0.c1 WHEN '1846440454' THEN 0.5980980873245009 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END  WHEN (0.49576768059273735 IN ()) THEN (NOT (rt0.c1)) ELSE rt0.c2 END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((NULL, rt0.c0, '-805292177')) AND ((rt0.c0, rt0.c2, rt0.c1))) COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (CASE CASE WHEN rt0.c1 THEN x'9ce3' WHEN rt0.c0 THEN rt0.c1 WHEN '1846440454' THEN 0.5980980873245009 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END  WHEN (0.49576768059273735 IN ()) THEN (NOT (rt0.c1)) ELSE rt0.c2 END) ORDER BY (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((NULL, rt0.c0, '-805292177')) AND ((rt0.c0, rt0.c2, rt0.c1))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN rt0.c1 THEN x'9ce3' WHEN rt0.c0 THEN rt0.c1 WHEN '1846440454' THEN 0.5980980873245009 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END  WHEN (0.49576768059273735 IN ()) THEN (NOT (rt0.c1)) ELSE rt0.c2 END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((NULL, rt0.c0, '-805292177')) AND ((rt0.c0, rt0.c2, rt0.c1))) COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (CASE CASE WHEN rt0.c1 THEN x'9ce3' WHEN rt0.c0 THEN rt0.c1 WHEN '1846440454' THEN 0.5980980873245009 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END  WHEN (0.49576768059273735 IN ()) THEN (NOT (rt0.c1)) ELSE rt0.c2 END) ORDER BY (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((NULL, rt0.c0, '-805292177')) AND ((rt0.c0, rt0.c2, rt0.c1))) COLLATE BINARY;
SELECT ALL * FROM rt1, t1 WHERE ((((t1.c0 IN (NULL)))%(((((((((t1.c0)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN (NULL)))%(((((((((t1.c0)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))OR(t1.c0))))) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE ((((t1.c0 IN (NULL)))%(((((((((t1.c0)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN (NULL)))%(((((((((t1.c0)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))OR(t1.c0))))) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE ((((t1.c0 IN (NULL)))%(((((((((t1.c0)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))OR(t1.c0)))));
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE ((((~ (rt0.c0))) BETWEEN ((((rt1.c2, rt1.c1, rt0.c0)) NOT BETWEEN ((t1.c0, rt1.c2, rt1.c1)) AND ((rt1.c1, NULL, rt1.c0)))) AND (CAST(rt1.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0))) BETWEEN ((((rt1.c2, rt1.c1, rt0.c0)) NOT BETWEEN ((t1.c0, rt1.c2, rt1.c1)) AND ((rt1.c1, NULL, rt1.c0)))) AND (CAST(rt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE ((((~ (rt0.c0))) BETWEEN ((((rt1.c2, rt1.c1, rt0.c0)) NOT BETWEEN ((t1.c0, rt1.c2, rt1.c1)) AND ((rt1.c1, NULL, rt1.c0)))) AND (CAST(rt1.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0))) BETWEEN ((((rt1.c2, rt1.c1, rt0.c0)) NOT BETWEEN ((t1.c0, rt1.c2, rt1.c1)) AND ((rt1.c1, NULL, rt1.c0)))) AND (CAST(rt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE ((((~ (rt0.c0))) BETWEEN ((((rt1.c2, rt1.c1, rt0.c0)) NOT BETWEEN ((t1.c0, rt1.c2, rt1.c1)) AND ((rt1.c1, NULL, rt1.c0)))) AND (CAST(rt1.c2 AS NUMERIC))));
SELECT * FROM t1, rt0, rt1 WHERE (CASE WHEN (NULL IN (rt1.c2)) THEN (((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c0))) WHEN ((rt1.c2) IS FALSE) THEN ((rt0.c2)*(rt0.c0)) WHEN COALESCE(rt1.c1, rt0.c1) THEN x'e8a8' WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 COLLATE RTRIM WHEN ((NULL) NOT NULL) THEN CASE WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN NULL WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NULL IN (rt1.c2)) THEN (((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c0))) WHEN ((rt1.c2) IS FALSE) THEN ((rt0.c2)*(rt0.c0)) WHEN COALESCE(rt1.c1, rt0.c1) THEN x'e8a8' WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 COLLATE RTRIM WHEN ((NULL) NOT NULL) THEN CASE WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN NULL WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c1 END END) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT * FROM t1, rt0, rt1 WHERE (CASE WHEN (NULL IN (rt1.c2)) THEN (((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c0))) WHEN ((rt1.c2) IS FALSE) THEN ((rt0.c2)*(rt0.c0)) WHEN COALESCE(rt1.c1, rt0.c1) THEN x'e8a8' WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 COLLATE RTRIM WHEN ((NULL) NOT NULL) THEN CASE WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN NULL WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NULL IN (rt1.c2)) THEN (((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c0))) WHEN ((rt1.c2) IS FALSE) THEN ((rt0.c2)*(rt0.c0)) WHEN COALESCE(rt1.c1, rt0.c1) THEN x'e8a8' WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 COLLATE RTRIM WHEN ((NULL) NOT NULL) THEN CASE WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN NULL WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c1 END END) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT * FROM t1, rt0, rt1 WHERE (CASE WHEN (NULL IN (rt1.c2)) THEN (((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c0))) WHEN ((rt1.c2) IS FALSE) THEN ((rt0.c2)*(rt0.c0)) WHEN COALESCE(rt1.c1, rt0.c1) THEN x'e8a8' WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 COLLATE RTRIM WHEN ((NULL) NOT NULL) THEN CASE WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN NULL WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c1 END END);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE RTRIM);
SELECT ALL * FROM t1, rt1 WHERE (SUBSTR(rt1.c2 COLLATE NOCASE, ((rt1.c2)AND(t1.c0)))) ORDER BY (((rt1.c2)<(rt1.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(rt1.c2 COLLATE NOCASE, ((rt1.c2)AND(t1.c0)))) IS TRUE)  as count FROM t1, rt1 ORDER BY (((rt1.c2)<(rt1.c1)) IN ())  NULLS FIRST);
SELECT ALL * FROM t1, rt1 WHERE (SUBSTR(rt1.c2 COLLATE NOCASE, ((rt1.c2)AND(t1.c0)))) ORDER BY (((rt1.c2)<(rt1.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(rt1.c2 COLLATE NOCASE, ((rt1.c2)AND(t1.c0)))) IS TRUE)  as count FROM t1, rt1 ORDER BY (((rt1.c2)<(rt1.c1)) IN ())  NULLS FIRST);
SELECT ALL * FROM t1, rt1 WHERE (SUBSTR(rt1.c2 COLLATE NOCASE, ((rt1.c2)AND(t1.c0)))) ORDER BY (((rt1.c2)<(rt1.c1)) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (t1.c0);
SELECT * FROM t1 WHERE ((~ ('-864490988'))) ORDER BY (((((t1.c0))>=((t1.c0))))OR(((x'') IS FALSE))) DESC  NULLS FIRST, CAST((NOT ('661528098')) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ('-864490988'))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0))>=((t1.c0))))OR(((x'') IS FALSE))) DESC  NULLS FIRST, CAST((NOT ('661528098')) AS REAL) ASC  NULLS LAST);
SELECT * FROM t1 WHERE ((~ ('-864490988'))) ORDER BY (((((t1.c0))>=((t1.c0))))OR(((x'') IS FALSE))) DESC  NULLS FIRST, CAST((NOT ('661528098')) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ('-864490988'))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0))>=((t1.c0))))OR(((x'') IS FALSE))) DESC  NULLS FIRST, CAST((NOT ('661528098')) AS REAL) ASC  NULLS LAST);
SELECT * FROM t1 WHERE ((~ ('-864490988'))) ORDER BY (((((t1.c0))>=((t1.c0))))OR(((x'') IS FALSE))) DESC  NULLS FIRST, CAST((NOT ('661528098')) AS REAL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 INDEXED BY i0, rt0 WHERE (HEX(DISTINCT ((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)))) ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt1.c2))))AND(((((rt1.c1)OR(rt0.c1)))OR(rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)))) IS TRUE)  as count FROM rt1 INDEXED BY i0, rt0 ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt1.c2))))AND(((((rt1.c1)OR(rt0.c1)))OR(rt1.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 INDEXED BY i0, rt0 WHERE (HEX(DISTINCT ((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)))) ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt1.c2))))AND(((((rt1.c1)OR(rt0.c1)))OR(rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)))) IS TRUE)  as count FROM rt1 INDEXED BY i0, rt0 ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt1.c2))))AND(((((rt1.c1)OR(rt0.c1)))OR(rt1.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c0 IN (rt0.c1)) THEN LIKELIHOOD(rt0.c0, 0.8369428021151173) ELSE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c0 IN (rt0.c1)) THEN LIKELIHOOD(rt0.c0, 0.8369428021151173) ELSE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c0 IN (rt0.c1)) THEN LIKELIHOOD(rt0.c0, 0.8369428021151173) ELSE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c0 IN (rt0.c1)) THEN LIKELIHOOD(rt0.c0, 0.8369428021151173) ELSE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c0 IN (rt0.c1)) THEN LIKELIHOOD(rt0.c0, 0.8369428021151173) ELSE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt0.c0) ORDER BY ((rt0.c0 COLLATE NOCASE) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c0 COLLATE NOCASE) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt0.c0) ORDER BY ((rt0.c0 COLLATE NOCASE) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c0 COLLATE NOCASE) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt0.c0) ORDER BY ((rt0.c0 COLLATE NOCASE) ISNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, t1 WHERE ((((((((((~ (rt1.c2)))OR(CASE WHEN rt1.c0 THEN rt1.c2 END)))OR((rt1.c1 IN ()))))OR(t1.c0)))AND(((t1.c0) NOT BETWEEN ('-911601622') AND (rt1.c0))))) ORDER BY rt1.c1, ((CASE WHEN rt1.c0 THEN t1.c0 ELSE rt1.c2 END)AND(((rt1.c2) BETWEEN (t1.c0) AND (rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (rt1.c2)))OR(CASE WHEN rt1.c0 THEN rt1.c2 END)))OR((rt1.c1 IN ()))))OR(t1.c0)))AND(((t1.c0) NOT BETWEEN ('-911601622') AND (rt1.c0))))) IS TRUE)  as count FROM rt1, t1 ORDER BY rt1.c1, ((CASE WHEN rt1.c0 THEN t1.c0 ELSE rt1.c2 END)AND(((rt1.c2) BETWEEN (t1.c0) AND (rt1.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE ((((((((((~ (rt1.c2)))OR(CASE WHEN rt1.c0 THEN rt1.c2 END)))OR((rt1.c1 IN ()))))OR(t1.c0)))AND(((t1.c0) NOT BETWEEN ('-911601622') AND (rt1.c0))))) ORDER BY rt1.c1, ((CASE WHEN rt1.c0 THEN t1.c0 ELSE rt1.c2 END)AND(((rt1.c2) BETWEEN (t1.c0) AND (rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (rt1.c2)))OR(CASE WHEN rt1.c0 THEN rt1.c2 END)))OR((rt1.c1 IN ()))))OR(t1.c0)))AND(((t1.c0) NOT BETWEEN ('-911601622') AND (rt1.c0))))) IS TRUE)  as count FROM rt1, t1 ORDER BY rt1.c1, ((CASE WHEN rt1.c0 THEN t1.c0 ELSE rt1.c2 END)AND(((rt1.c2) BETWEEN (t1.c0) AND (rt1.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE ((((((((((~ (rt1.c2)))OR(CASE WHEN rt1.c0 THEN rt1.c2 END)))OR((rt1.c1 IN ()))))OR(t1.c0)))AND(((t1.c0) NOT BETWEEN ('-911601622') AND (rt1.c0))))) ORDER BY rt1.c1, ((CASE WHEN rt1.c0 THEN t1.c0 ELSE rt1.c2 END)AND(((rt1.c2) BETWEEN (t1.c0) AND (rt1.c1)))) ASC;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON (~ ((rt1.c0 IN ()))) LEFT OUTER JOIN t1 ON (((((('')) BETWEEN ((rt1.c2)) AND ((rt0.c1)))))==(((rt0.c2 IN ())))) WHERE (((+ (t1.c0)) IN (((rt1.c1)=(rt1.c1)), ((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((+ (t1.c0)) IN (((rt1.c1)=(rt1.c1)), ((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (~ ((rt1.c0 IN ()))) LEFT OUTER JOIN t1 ON (((((('')) BETWEEN ((rt1.c2)) AND ((rt0.c1)))))=(((rt0.c2 IN ())))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON (~ ((rt1.c0 IN ()))) LEFT OUTER JOIN t1 ON (((((('')) BETWEEN ((rt1.c2)) AND ((rt0.c1)))))==(((rt0.c2 IN ())))) WHERE (((+ (t1.c0)) IN (((rt1.c1)=(rt1.c1)), ((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((+ (t1.c0)) IN (((rt1.c1)=(rt1.c1)), ((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (~ ((rt1.c0 IN ()))) LEFT OUTER JOIN t1 ON (((((('')) BETWEEN ((rt1.c2)) AND ((rt0.c1)))))=(((rt0.c2 IN ())))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON (~ ((rt1.c0 IN ()))) LEFT OUTER JOIN t1 ON (((((('')) BETWEEN ((rt1.c2)) AND ((rt0.c1)))))==(((rt0.c2 IN ())))) WHERE (((+ (t1.c0)) IN (((rt1.c1)=(rt1.c1)), ((rt0.c2) IS TRUE))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE NULL  WHEN ((rt1.c1)&(rt0.c2)) THEN rt0.c0 COLLATE NOCASE ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN ((rt1.c1)&(rt0.c2)) THEN rt0.c0 COLLATE NOCASE ELSE NULL END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE NULL  WHEN ((rt1.c1)&(rt0.c2)) THEN rt0.c0 COLLATE NOCASE ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN ((rt1.c1)&(rt0.c2)) THEN rt0.c0 COLLATE NOCASE ELSE NULL END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE NULL  WHEN ((rt1.c1)&(rt0.c2)) THEN rt0.c0 COLLATE NOCASE ELSE NULL END);
SELECT COUNT(*) FROM t1, rt0 WHERE ((((~ (rt0.c0)))IS NOT(']''' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0)))IS NOT(']''' COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE ((((~ (rt0.c0)))IS NOT(']''' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0)))IS NOT(']''' COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE ((((~ (rt0.c0)))IS NOT(']''' COLLATE RTRIM)));
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE ((((((rt0.c2)>>(t1.c0)), CASE WHEN t1.c0 THEN rt1.c1 WHEN '' THEN rt0.c2 WHEN rt1.c1 THEN rt1.c1 END, (('') NOT BETWEEN (t1.c0) AND (t1.c0))))<=((x'', (((x'')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), (((rt0.c2, rt1.c1, rt0.c2))>((t1.c0, rt1.c0, rt0.c1)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)>>(t1.c0)), CASE WHEN t1.c0 THEN rt1.c1 WHEN '' THEN rt0.c2 WHEN rt1.c1 THEN rt1.c1 END, (('') NOT BETWEEN (t1.c0) AND (t1.c0))))<=((x'', (((x'')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), (((rt0.c2, rt1.c1, rt0.c2))>((t1.c0, rt1.c0, rt0.c1))))))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE ((((((rt0.c2)>>(t1.c0)), CASE WHEN t1.c0 THEN rt1.c1 WHEN '' THEN rt0.c2 WHEN rt1.c1 THEN rt1.c1 END, (('') NOT BETWEEN (t1.c0) AND (t1.c0))))<=((x'', (((x'')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), (((rt0.c2, rt1.c1, rt0.c2))>((t1.c0, rt1.c0, rt0.c1)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)>>(t1.c0)), CASE WHEN t1.c0 THEN rt1.c1 WHEN '' THEN rt0.c2 WHEN rt1.c1 THEN rt1.c1 END, (('') NOT BETWEEN (t1.c0) AND (t1.c0))))<=((x'', (((x'')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), (((rt0.c2, rt1.c1, rt0.c2))>((t1.c0, rt1.c0, rt0.c1))))))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE ((((((rt0.c2)>>(t1.c0)), CASE WHEN t1.c0 THEN rt1.c1 WHEN '' THEN rt0.c2 WHEN rt1.c1 THEN rt1.c1 END, (('') NOT BETWEEN (t1.c0) AND (t1.c0))))<=((x'', (((x'')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), (((rt0.c2, rt1.c1, rt0.c2))>((t1.c0, rt1.c0, rt0.c1)))))));
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE (((((((rt1.c0)OR(NULL)))OR(rt0.c1)))LIKE(((rt0.c1)<=(rt0.c2))))) ORDER BY (- (rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)OR(NULL)))OR(rt0.c1)))LIKE(((rt0.c1)<=(rt0.c2))))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY (- (rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE (((((((rt1.c0)OR(NULL)))OR(rt0.c1)))LIKE(((rt0.c1)<=(rt0.c2))))) ORDER BY (- (rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)OR(NULL)))OR(rt0.c1)))LIKE(((rt0.c1)<=(rt0.c2))))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY (- (rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE (((((((rt1.c0)OR(NULL)))OR(rt0.c1)))LIKE(((rt0.c1)<=(rt0.c2))))) ORDER BY (- (rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('Iz-g''f')!=(rt0.c2)))+(json_array_length(rt0.c2, rt0.c2)))) ORDER BY (((x'') NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ()) DESC  NULLS LAST, LIKELY((((rt0.c0))==((rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('Iz-g''f')<>(rt0.c2)))+(json_array_length(rt0.c2, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((x'') NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ()) DESC  NULLS LAST, LIKELY((((rt0.c0))==((rt0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('Iz-g''f')!=(rt0.c2)))+(json_array_length(rt0.c2, rt0.c2)))) ORDER BY (((x'') NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ()) DESC  NULLS LAST, LIKELY((((rt0.c0))==((rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('Iz-g''f')<>(rt0.c2)))+(json_array_length(rt0.c2, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((x'') NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ()) DESC  NULLS LAST, LIKELY((((rt0.c0))==((rt0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t1 ON (((rt1.c0)) NOT BETWEEN ((((rt0.c2)<(rt1.c0)))) AND ((((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) CROSS JOIN rt0 ON CASE 1689740142  WHEN ((t1.c0)|(rt1.c1)) THEN LAST_INSERT_ROWID() END WHERE ((((rt1.c1)) NOT BETWEEN ((((((x'')AND(rt0.c2)))AND(rt0.c2)))) AND ((rt0.c0 COLLATE NOCASE)))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((((((x'')AND(rt0.c2)))AND(rt0.c2)))) AND ((rt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t1 ON (((rt1.c0)) NOT BETWEEN ((((rt0.c2)<(rt1.c0)))) AND ((((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) CROSS JOIN rt0 ON CASE 1689740142  WHEN ((t1.c0)|(rt1.c1)) THEN LAST_INSERT_ROWID() END ORDER BY rt0.c0 ASC);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t1 ON (((rt1.c0)) NOT BETWEEN ((((rt0.c2)<(rt1.c0)))) AND ((((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) CROSS JOIN rt0 ON CASE 1689740142  WHEN ((t1.c0)|(rt1.c1)) THEN LAST_INSERT_ROWID() END WHERE ((((rt1.c1)) NOT BETWEEN ((((((x'')AND(rt0.c2)))AND(rt0.c2)))) AND ((rt0.c0 COLLATE NOCASE)))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((((((x'')AND(rt0.c2)))AND(rt0.c2)))) AND ((rt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t1 ON (((rt1.c0)) NOT BETWEEN ((((rt0.c2)<(rt1.c0)))) AND ((((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) CROSS JOIN rt0 ON CASE 1689740142  WHEN ((t1.c0)|(rt1.c1)) THEN LAST_INSERT_ROWID() END ORDER BY rt0.c0 ASC);
SELECT COUNT(*) FROM t1 WHERE ((- (CAST(t1.c0 AS REAL)))) ORDER BY CAST(((t1.c0)AND(t1.c0)) AS INTEGER)  NULLS FIRST, (- (t1.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t1.c0 AS REAL)))) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c0)AND(t1.c0)) AS INTEGER)  NULLS FIRST, (- (t1.c0)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM t1 WHERE ((- (CAST(t1.c0 AS REAL)))) ORDER BY CAST(((t1.c0)AND(t1.c0)) AS INTEGER)  NULLS FIRST, (- (t1.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t1.c0 AS REAL)))) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c0)AND(t1.c0)) AS INTEGER)  NULLS FIRST, (- (t1.c0)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM t1 WHERE ((- (CAST(t1.c0 AS REAL)))) ORDER BY CAST(((t1.c0)AND(t1.c0)) AS INTEGER)  NULLS FIRST, (- (t1.c0)) COLLATE NOCASE DESC;
SELECT ALL * FROM t1 INNER JOIN rt1 ON CAST(CAST(rt1.c0 AS TEXT) AS INTEGER) WHERE (((((((rt1.c1) IS FALSE))OR(((rt1.c1) IS FALSE))))OR(rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1) IS FALSE))OR(((rt1.c1) IS FALSE))))OR(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON CAST(CAST(rt1.c0 AS TEXT) AS INTEGER));
SELECT ALL * FROM t1 INNER JOIN rt1 ON CAST(CAST(rt1.c0 AS TEXT) AS INTEGER) WHERE (((((((rt1.c1) IS FALSE))OR(((rt1.c1) IS FALSE))))OR(rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1) IS FALSE))OR(((rt1.c1) IS FALSE))))OR(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON CAST(CAST(rt1.c0 AS TEXT) AS INTEGER));
SELECT ALL * FROM t1 INNER JOIN rt1 ON CAST(CAST(rt1.c0 AS TEXT) AS INTEGER) WHERE (((((((rt1.c1) IS FALSE))OR(((rt1.c1) IS FALSE))))OR(rt1.c2 COLLATE NOCASE)));
SELECT * FROM rt1 CROSS JOIN t1 ON (((- (rt1.c0)))<<(rt1.c1 COLLATE RTRIM)) WHERE ((~ ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))) ORDER BY CAST(((rt1.c1) NOTNULL) AS TEXT);
SELECT SUM(count) FROM (SELECT (((~ ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1 CROSS JOIN t1 ON (((- (rt1.c0)))<<(rt1.c1 COLLATE RTRIM)) ORDER BY CAST(((rt1.c1) NOTNULL) AS TEXT));
SELECT * FROM rt1 CROSS JOIN t1 ON (((- (rt1.c0)))<<(rt1.c1 COLLATE RTRIM)) WHERE ((~ ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))) ORDER BY CAST(((rt1.c1) NOTNULL) AS TEXT);
SELECT SUM(count) FROM (SELECT (((~ ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1 CROSS JOIN t1 ON (((- (rt1.c0)))<<(rt1.c1 COLLATE RTRIM)) ORDER BY CAST(((rt1.c1) NOTNULL) AS TEXT));
SELECT * FROM rt1 CROSS JOIN t1 ON (((- (rt1.c0)))<<(rt1.c1 COLLATE RTRIM)) WHERE ((~ ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))) ORDER BY CAST(((rt1.c1) NOTNULL) AS TEXT);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (CAST(CAST(rt0.c2 AS TEXT) AS BLOB)) ORDER BY UNICODE(CAST(rt1.c0 AS NUMERIC)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS TEXT) AS BLOB)) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY UNICODE(CAST(rt1.c0 AS NUMERIC)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (CAST(CAST(rt0.c2 AS TEXT) AS BLOB)) ORDER BY UNICODE(CAST(rt1.c0 AS NUMERIC)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS TEXT) AS BLOB)) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY UNICODE(CAST(rt1.c0 AS NUMERIC)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (CAST(CAST(rt0.c2 AS TEXT) AS BLOB)) ORDER BY UNICODE(CAST(rt1.c0 AS NUMERIC)) DESC  NULLS FIRST;
SELECT ALL * FROM t1 LEFT OUTER JOIN rt0 ON UNLIKELY(((t1.c0)GLOB(rt1.c1))) FULL OUTER JOIN rt1 ON ((((((rt0.c0)AND(rt1.c2)))AND(rt1.c0))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c0))) AND (((((NULL)AND(x'')))AND(rt1.c0)))) WHERE ((~ (((((x'')OR(rt1.c2)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((x'')OR(rt1.c2)))AND(rt1.c0))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON UNLIKELY(((t1.c0)GLOB(rt1.c1))) FULL OUTER JOIN rt1 ON ((((((rt0.c0)AND(rt1.c2)))AND(rt1.c0))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c0))) AND (((((NULL)AND(x'')))AND(rt1.c0)))));
SELECT ALL * FROM t1 LEFT OUTER JOIN rt0 ON UNLIKELY(((t1.c0)GLOB(rt1.c1))) FULL OUTER JOIN rt1 ON ((((((rt0.c0)AND(rt1.c2)))AND(rt1.c0))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c0))) AND (((((NULL)AND(x'')))AND(rt1.c0)))) WHERE ((~ (((((x'')OR(rt1.c2)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((x'')OR(rt1.c2)))AND(rt1.c0))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON UNLIKELY(((t1.c0)GLOB(rt1.c1))) FULL OUTER JOIN rt1 ON ((((((rt0.c0)AND(rt1.c2)))AND(rt1.c0))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c0))) AND (((((NULL)AND(x'')))AND(rt1.c0)))));
SELECT * FROM t1, rt0 WHERE ((((+ (rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE ((((+ (rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE ((((+ (rt0.c0))) IS FALSE));
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((((((((rt1.c2)OR(rt1.c2)))OR('1160111587')))AND(rt1.c2)))OR(rt1.c2)) THEN (- (rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt1.c2)OR(rt1.c2)))OR('1160111587')))AND(rt1.c2)))OR(rt1.c2)) THEN (- (rt1.c2)) END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((((((((rt1.c2)OR(rt1.c2)))OR('1160111587')))AND(rt1.c2)))OR(rt1.c2)) THEN (- (rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt1.c2)OR(rt1.c2)))OR('1160111587')))AND(rt1.c2)))OR(rt1.c2)) THEN (- (rt1.c2)) END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((((((((rt1.c2)OR(rt1.c2)))OR('1160111587')))AND(rt1.c2)))OR(rt1.c2)) THEN (- (rt1.c2)) END);
SELECT COUNT(*) FROM rt0 WHERE (0.6158587722489072);
SELECT SUM(count) FROM (SELECT ALL ((0.6158587722489072) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.6158587722489072);
SELECT SUM(count) FROM (SELECT ALL ((0.6158587722489072) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.6158587722489072);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (rt1.c2) ORDER BY rt1.c2 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM t1, rt1 ORDER BY rt1.c2 COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (rt1.c2) ORDER BY rt1.c2 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM t1, rt1 ORDER BY rt1.c2 COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (rt1.c2) ORDER BY rt1.c2 COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE (((rt0.c0)-(rt1.c2)) COLLATE BINARY) ORDER BY (((rt1.c2 IN ()))GLOB(ABS(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)-(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt1.c2 IN ()))GLOB(ABS(rt0.c0))) DESC);
SELECT ALL * FROM rt1, rt0 WHERE (((rt0.c0)-(rt1.c2)) COLLATE BINARY) ORDER BY (((rt1.c2 IN ()))GLOB(ABS(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)-(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt1.c2 IN ()))GLOB(ABS(rt0.c0))) DESC);
SELECT ALL * FROM rt1, rt0 WHERE (((rt0.c0)-(rt1.c2)) COLLATE BINARY) ORDER BY (((rt1.c2 IN ()))GLOB(ABS(rt0.c0))) DESC;
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (((((rt1.c1)||(rt0.c0)))==(((((rt0.c2)OR(rt1.c0)))OR(rt1.c0))))) ORDER BY CASE WHEN (+ (rt1.c2)) THEN ((rt0.c0) IS TRUE) ELSE ((rt1.c2)/(rt1.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)||(rt0.c0)))==(((((rt0.c2)OR(rt1.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY CASE WHEN (+ (rt1.c2)) THEN ((rt0.c0) IS TRUE) ELSE ((rt1.c2)/(rt1.c0)) END);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (((((rt1.c1)||(rt0.c0)))==(((((rt0.c2)OR(rt1.c0)))OR(rt1.c0))))) ORDER BY CASE WHEN (+ (rt1.c2)) THEN ((rt0.c0) IS TRUE) ELSE ((rt1.c2)/(rt1.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)||(rt0.c0)))==(((((rt0.c2)OR(rt1.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY CASE WHEN (+ (rt1.c2)) THEN ((rt0.c0) IS TRUE) ELSE ((rt1.c2)/(rt1.c0)) END);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (((((rt1.c1)||(rt0.c0)))==(((((rt0.c2)OR(rt1.c0)))OR(rt1.c0))))) ORDER BY CASE WHEN (+ (rt1.c2)) THEN ((rt0.c0) IS TRUE) ELSE ((rt1.c2)/(rt1.c0)) END;
SELECT ALL * FROM rt0, t1, rt1 WHERE (x'342d');
SELECT SUM(count) FROM (SELECT ALL ((x'342d') IS TRUE)  as count FROM rt0, t1, rt1);
SELECT ALL * FROM rt0, t1, rt1 WHERE (x'342d');
SELECT SUM(count) FROM (SELECT ALL ((x'342d') IS TRUE)  as count FROM rt0, t1, rt1);
SELECT ALL * FROM rt0, t1, rt1 WHERE (x'342d');
SELECT ALL * FROM rt0, t1 WHERE (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE NOCASE) ORDER BY (CASE rt0.c0  WHEN rt0.c0 THEN t1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN 'p' THEN rt0.c2 END IN ()) ASC  NULLS FIRST, (CAST(rt0.c1 AS TEXT) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1 ORDER BY (CASE rt0.c0  WHEN rt0.c0 THEN t1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN 'p' THEN rt0.c2 END IN ()) ASC  NULLS FIRST, (CAST(rt0.c1 AS TEXT) IN ()) ASC);
SELECT ALL * FROM rt0, t1 WHERE (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE NOCASE) ORDER BY (CASE rt0.c0  WHEN rt0.c0 THEN t1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN 'p' THEN rt0.c2 END IN ()) ASC  NULLS FIRST, (CAST(rt0.c1 AS TEXT) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1 ORDER BY (CASE rt0.c0  WHEN rt0.c0 THEN t1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN 'p' THEN rt0.c2 END IN ()) ASC  NULLS FIRST, (CAST(rt0.c1 AS TEXT) IN ()) ASC);
SELECT ALL * FROM rt0, t1 WHERE (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE NOCASE) ORDER BY (CASE rt0.c0  WHEN rt0.c0 THEN t1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN 'p' THEN rt0.c2 END IN ()) ASC  NULLS FIRST, (CAST(rt0.c1 AS TEXT) IN ()) ASC;
SELECT * FROM t1, rt0 WHERE (((((rt0.c1)%(t1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)%(t1.c0))) IS FALSE)) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (((((rt0.c1)%(t1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)%(t1.c0))) IS FALSE)) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (((((rt0.c1)%(t1.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT * FROM rt1, rt0, t1 WHERE (((CAST(rt1.c1 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE (((CAST(rt1.c1 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE (((CAST(rt1.c1 AS NUMERIC)) ISNULL));
SELECT ALL COUNT(*) FROM t1 WHERE (((0.5407509151696156) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.5407509151696156) NOTNULL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((0.5407509151696156) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.5407509151696156) NOTNULL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((0.5407509151696156) NOTNULL));
SELECT * FROM t1 FULL OUTER JOIN rt0 ON ((CASE WHEN t1.c0 THEN rt0.c2 ELSE rt1.c0 END) IS TRUE) CROSS JOIN rt1 ON TIME(((rt1.c1)OR(rt1.c0)), 0.30212996654761104, ((rt1.c2)+(rt0.c2))) WHERE (((CASE rt1.c2  WHEN x'8e7bd96e' THEN -1.954197043E9 ELSE NULL END) NOT BETWEEN (CASE rt1.c2  WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c0 END) AND (NULL))) ORDER BY '-58398507';
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c2  WHEN x'8e7bd96e' THEN -1.954197043E9 ELSE NULL END) NOT BETWEEN (CASE rt1.c2  WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c0 END) AND (NULL))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON ((CASE WHEN t1.c0 THEN rt0.c2 ELSE rt1.c0 END) IS TRUE) CROSS JOIN rt1 ON TIME(((rt1.c1)OR(rt1.c0)), 0.30212996654761104, ((rt1.c2)+(rt0.c2))) ORDER BY '-58398507');
SELECT * FROM t1 FULL OUTER JOIN rt0 ON ((CASE WHEN t1.c0 THEN rt0.c2 ELSE rt1.c0 END) IS TRUE) CROSS JOIN rt1 ON TIME(((rt1.c1)OR(rt1.c0)), 0.30212996654761104, ((rt1.c2)+(rt0.c2))) WHERE (((CASE rt1.c2  WHEN x'8e7bd96e' THEN -1.954197043E9 ELSE NULL END) NOT BETWEEN (CASE rt1.c2  WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c0 END) AND (NULL))) ORDER BY '-58398507';
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c2  WHEN x'8e7bd96e' THEN -1.954197043E9 ELSE NULL END) NOT BETWEEN (CASE rt1.c2  WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c0 END) AND (NULL))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON ((CASE WHEN t1.c0 THEN rt0.c2 ELSE rt1.c0 END) IS TRUE) CROSS JOIN rt1 ON TIME(((rt1.c1)OR(rt1.c0)), 0.30212996654761104, ((rt1.c2)+(rt0.c2))) ORDER BY '-58398507');
SELECT ALL * FROM rt0, rt1 WHERE (((((INSTR(rt1.c1, rt1.c0))AND((((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))OR((~ (rt0.c1))))) ORDER BY ((rt0.c1) NOT BETWEEN (load_extension(rt0.c0)) AND (((((NULL)OR(rt0.c0)))OR('')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((INSTR(rt1.c1, rt1.c0))AND((((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))OR((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c1) NOT BETWEEN (load_extension(rt0.c0)) AND (((((NULL)OR(rt0.c0)))OR('')))) DESC);
SELECT ALL * FROM rt0, rt1 WHERE (((((INSTR(rt1.c1, rt1.c0))AND((((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))OR((~ (rt0.c1))))) ORDER BY ((rt0.c1) NOT BETWEEN (load_extension(rt0.c0)) AND (((((NULL)OR(rt0.c0)))OR('')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((INSTR(rt1.c1, rt1.c0))AND((((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))OR((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c1) NOT BETWEEN (load_extension(rt0.c0)) AND (((((NULL)OR(rt0.c0)))OR('')))) DESC);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED WHERE (((((((0X2406e5a4)OR(rt1.c0)))OR(rt1.c1))) NOT BETWEEN (LIKELIHOOD(rt1.c2, 0.9595122693900131)) AND ((~ (0.8755554102433525)))));
SELECT SUM(count) FROM (SELECT ((((((((0x2406e5a4)OR(rt1.c0)))OR(rt1.c1))) NOT BETWEEN (LIKELIHOOD(rt1.c2, 0.9595122693900131)) AND ((~ (0.8755554102433525))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED WHERE (((((((0X2406e5a4)OR(rt1.c0)))OR(rt1.c1))) NOT BETWEEN (LIKELIHOOD(rt1.c2, 0.9595122693900131)) AND ((~ (0.8755554102433525)))));
SELECT SUM(count) FROM (SELECT ((((((((0x2406e5a4)OR(rt1.c0)))OR(rt1.c1))) NOT BETWEEN (LIKELIHOOD(rt1.c2, 0.9595122693900131)) AND ((~ (0.8755554102433525))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED WHERE (((((((0X2406e5a4)OR(rt1.c0)))OR(rt1.c1))) NOT BETWEEN (LIKELIHOOD(rt1.c2, 0.9595122693900131)) AND ((~ (0.8755554102433525)))));
SELECT * FROM t1, rt0, rt1 WHERE ((- (CAST(rt0.c0 AS NUMERIC)))) ORDER BY CAST(t1.c0 AS BLOB) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST, CAST((t1.c0 IN (rt1.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY CAST(t1.c0 AS BLOB) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST, CAST((t1.c0 IN (rt1.c0)) AS TEXT));
SELECT * FROM t1, rt0, rt1 WHERE ((- (CAST(rt0.c0 AS NUMERIC)))) ORDER BY CAST(t1.c0 AS BLOB) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST, CAST((t1.c0 IN (rt1.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY CAST(t1.c0 AS BLOB) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST, CAST((t1.c0 IN (rt1.c0)) AS TEXT));
SELECT * FROM t1, rt0, rt1 WHERE ((- (CAST(rt0.c0 AS NUMERIC)))) ORDER BY CAST(t1.c0 AS BLOB) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST, CAST((t1.c0 IN (rt1.c0)) AS TEXT);
SELECT COUNT(*) FROM rt0, t1 WHERE (NULLIF(rt0.c2, rt0.c2) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(rt0.c2, rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (NULLIF(rt0.c2, rt0.c2) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(rt0.c2, rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (NULLIF(rt0.c2, rt0.c2) COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT * FROM t1 WHERE (CASE WHEN (((t1.c0)) NOT BETWEEN ((0.06840720831925606)) AND ((t1.c0))) THEN HEX(DISTINCT t1.c0) ELSE ((t1.c0)||('.}2oIDc!')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t1.c0)) NOT BETWEEN ((0.06840720831925606)) AND ((t1.c0))) THEN HEX(DISTINCT t1.c0) ELSE ((t1.c0)||('.}2oIDc!')) END) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE WHEN (((t1.c0)) NOT BETWEEN ((0.06840720831925606)) AND ((t1.c0))) THEN HEX(DISTINCT t1.c0) ELSE ((t1.c0)||('.}2oIDc!')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t1.c0)) NOT BETWEEN ((0.06840720831925606)) AND ((t1.c0))) THEN HEX(DISTINCT t1.c0) ELSE ((t1.c0)||('.}2oIDc!')) END) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE WHEN (((t1.c0)) NOT BETWEEN ((0.06840720831925606)) AND ((t1.c0))) THEN HEX(DISTINCT t1.c0) ELSE ((t1.c0)||('.}2oIDc!')) END);
SELECT ALL * FROM rt0, rt1, t1 WHERE (((((((rt0.c2)AND(rt1.c1)))OR(rt0.c1))) BETWEEN (((((rt1.c2)AND(rt1.c0)))OR(NULL))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt1.c1)))OR(rt0.c1))) BETWEEN (((((rt1.c2)AND(rt1.c0)))OR(NULL))) AND (NULL))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL * FROM rt0, rt1, t1 WHERE (((((((rt0.c2)AND(rt1.c1)))OR(rt0.c1))) BETWEEN (((((rt1.c2)AND(rt1.c0)))OR(NULL))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt1.c1)))OR(rt0.c1))) BETWEEN (((((rt1.c2)AND(rt1.c0)))OR(NULL))) AND (NULL))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL * FROM rt0, rt1, t1 WHERE (((((((rt0.c2)AND(rt1.c1)))OR(rt0.c1))) BETWEEN (((((rt1.c2)AND(rt1.c0)))OR(NULL))) AND (NULL)));
SELECT ALL * FROM rt0 WHERE (x'04c8') ORDER BY CASE WHEN (- (rt0.c0)) THEN json_quote(rt0.c1) WHEN (rt0.c2 IN (rt0.c2)) THEN ((rt0.c0) IS TRUE) WHEN 0.9670209343372247 THEN LOWER(DISTINCT rt0.c2) ELSE ((rt0.c2) NOT BETWEEN (0.3311887604547987) AND (rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((x'04c8') IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (- (rt0.c0)) THEN json_quote(rt0.c1) WHEN (rt0.c2 IN (rt0.c2)) THEN ((rt0.c0) IS TRUE) WHEN 0.9670209343372247 THEN LOWER(DISTINCT rt0.c2) ELSE ((rt0.c2) NOT BETWEEN (0.3311887604547987) AND (rt0.c2)) END);
SELECT ALL * FROM rt0 WHERE (x'04c8') ORDER BY CASE WHEN (- (rt0.c0)) THEN json_quote(rt0.c1) WHEN (rt0.c2 IN (rt0.c2)) THEN ((rt0.c0) IS TRUE) WHEN 0.9670209343372247 THEN LOWER(DISTINCT rt0.c2) ELSE ((rt0.c2) NOT BETWEEN (0.3311887604547987) AND (rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((x'04c8') IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (- (rt0.c0)) THEN json_quote(rt0.c1) WHEN (rt0.c2 IN (rt0.c2)) THEN ((rt0.c0) IS TRUE) WHEN 0.9670209343372247 THEN LOWER(DISTINCT rt0.c2) ELSE ((rt0.c2) NOT BETWEEN (0.3311887604547987) AND (rt0.c2)) END);
SELECT ALL * FROM rt0 WHERE (x'04c8') ORDER BY CASE WHEN (- (rt0.c0)) THEN json_quote(rt0.c1) WHEN (rt0.c2 IN (rt0.c2)) THEN ((rt0.c0) IS TRUE) WHEN 0.9670209343372247 THEN LOWER(DISTINCT rt0.c2) ELSE ((rt0.c2) NOT BETWEEN (0.3311887604547987) AND (rt0.c2)) END;
SELECT COUNT(*) FROM t1, rt0 INNER JOIN rt1 ON ((((rt0.c1)<(rt1.c2))) ISNULL) WHERE ((+ (CASE rt1.c2  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY (((x'', rt1.c0, rt0.c2)) NOT BETWEEN (((~ (rt1.c1)), rt0.c2 COLLATE NOCASE, ((rt1.c2) BETWEEN (rt0.c0) AND (t1.c0)))) AND ((CASE rt1.c2  WHEN rt1.c0 THEN rt0.c1 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c1 THEN 0.16916664439582585 WHEN rt0.c1 THEN t1.c0 END, CAST(t1.c0 AS BLOB), (0.7478708935002514 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ (CASE rt1.c2  WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM t1, rt0 INNER JOIN rt1 ON ((((rt0.c1)<(rt1.c2))) ISNULL) ORDER BY (((x'', rt1.c0, rt0.c2)) NOT BETWEEN (((~ (rt1.c1)), rt0.c2 COLLATE NOCASE, ((rt1.c2) BETWEEN (rt0.c0) AND (t1.c0)))) AND ((CASE rt1.c2  WHEN rt1.c0 THEN rt0.c1 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c1 THEN 0.16916664439582585 WHEN rt0.c1 THEN t1.c0 END, CAST(t1.c0 AS BLOB), (0.7478708935002514 IN ())))));
SELECT COUNT(*) FROM t1, rt0 INNER JOIN rt1 ON ((((rt0.c1)<(rt1.c2))) ISNULL) WHERE ((+ (CASE rt1.c2  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY (((x'', rt1.c0, rt0.c2)) NOT BETWEEN (((~ (rt1.c1)), rt0.c2 COLLATE NOCASE, ((rt1.c2) BETWEEN (rt0.c0) AND (t1.c0)))) AND ((CASE rt1.c2  WHEN rt1.c0 THEN rt0.c1 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c1 THEN 0.16916664439582585 WHEN rt0.c1 THEN t1.c0 END, CAST(t1.c0 AS BLOB), (0.7478708935002514 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ (CASE rt1.c2  WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM t1, rt0 INNER JOIN rt1 ON ((((rt0.c1)<(rt1.c2))) ISNULL) ORDER BY (((x'', rt1.c0, rt0.c2)) NOT BETWEEN (((~ (rt1.c1)), rt0.c2 COLLATE NOCASE, ((rt1.c2) BETWEEN (rt0.c0) AND (t1.c0)))) AND ((CASE rt1.c2  WHEN rt1.c0 THEN rt0.c1 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c1 THEN 0.16916664439582585 WHEN rt0.c1 THEN t1.c0 END, CAST(t1.c0 AS BLOB), (0.7478708935002514 IN ())))));
SELECT COUNT(*) FROM t1, rt0 INNER JOIN rt1 ON ((((rt0.c1)<(rt1.c2))) ISNULL) WHERE ((+ (CASE rt1.c2  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY (((x'', rt1.c0, rt0.c2)) NOT BETWEEN (((~ (rt1.c1)), rt0.c2 COLLATE NOCASE, ((rt1.c2) BETWEEN (rt0.c0) AND (t1.c0)))) AND ((CASE rt1.c2  WHEN rt1.c0 THEN rt0.c1 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c1 THEN 0.16916664439582585 WHEN rt0.c1 THEN t1.c0 END, CAST(t1.c0 AS BLOB), (0.7478708935002514 IN ()))));
SELECT * FROM t1, rt1, rt0 WHERE (NULL) ORDER BY ((((rt0.c2)-('0.7548825690050004')))IS NOT((- (rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY ((((rt0.c2)-('0.7548825690050004')))IS NOT((- (rt1.c1)))) ASC);
SELECT * FROM t1, rt1, rt0 WHERE (NULL) ORDER BY ((((rt0.c2)-('0.7548825690050004')))IS NOT((- (rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY ((((rt0.c2)-('0.7548825690050004')))IS NOT((- (rt1.c1)))) ASC);
SELECT * FROM t1, rt1, rt0 WHERE (NULL) ORDER BY ((((rt0.c2)-('0.7548825690050004')))IS NOT((- (rt1.c1)))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE ((NOT (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE ((NOT (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE ((NOT (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT * FROM rt1, t1 WHERE ((+ (((t1.c0)<(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((t1.c0)<(rt1.c1))))) IS TRUE)  as count FROM rt1, t1);
SELECT * FROM rt1, t1 WHERE ((+ (((t1.c0)<(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((t1.c0)<(rt1.c1))))) IS TRUE)  as count FROM rt1, t1);
SELECT * FROM rt1, t1 WHERE ((+ (((t1.c0)<(rt1.c1)))));
SELECT ALL * FROM rt1 WHERE ((((rt1.c2)=(rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)=(rt1.c0)) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2)=(rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)=(rt1.c0)) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2)=(rt1.c0)) IN ()));
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY ((((((((t1.c0 COLLATE RTRIM)OR(((t1.c0)-(t1.c0)))))AND(x'')))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0)/(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY ((((((((t1.c0 COLLATE RTRIM)OR(((t1.c0)-(t1.c0)))))AND(x'')))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0)/(t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY ((((((((t1.c0 COLLATE RTRIM)OR(((t1.c0)-(t1.c0)))))AND(x'')))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0)/(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY ((((((((t1.c0 COLLATE RTRIM)OR(((t1.c0)-(t1.c0)))))AND(x'')))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0)/(t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY ((((((((t1.c0 COLLATE RTRIM)OR(((t1.c0)-(t1.c0)))))AND(x'')))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0)/(t1.c0))));
SELECT COUNT(*) FROM t1 NATURAL JOIN rt1 WHERE ((((rt1.c1 COLLATE NOCASE))>((CASE WHEN t1.c0 THEN rt1.c1 END)))) ORDER BY COALESCE('f~(', rt1.c2 COLLATE RTRIM)  NULLS LAST, CASE WHEN ((rt1.c2)|('YA&_')) THEN ((rt1.c2)<(t1.c0)) ELSE ((rt1.c2) BETWEEN ('2040351863') AND (t1.c0)) END;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 COLLATE NOCASE))>((CASE WHEN t1.c0 THEN rt1.c1 END)))) IS TRUE)  as count FROM t1 NATURAL JOIN rt1 ORDER BY COALESCE('f~(', rt1.c2 COLLATE RTRIM)  NULLS LAST, CASE WHEN ((rt1.c2)|('YA&_')) THEN ((rt1.c2)<(t1.c0)) ELSE ((rt1.c2) BETWEEN ('2040351863') AND (t1.c0)) END);
SELECT COUNT(*) FROM t1 NATURAL JOIN rt1 WHERE ((((rt1.c1 COLLATE NOCASE))>((CASE WHEN t1.c0 THEN rt1.c1 END)))) ORDER BY COALESCE('f~(', rt1.c2 COLLATE RTRIM)  NULLS LAST, CASE WHEN ((rt1.c2)|('YA&_')) THEN ((rt1.c2)<(t1.c0)) ELSE ((rt1.c2) BETWEEN ('2040351863') AND (t1.c0)) END;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 COLLATE NOCASE))>((CASE WHEN t1.c0 THEN rt1.c1 END)))) IS TRUE)  as count FROM t1 NATURAL JOIN rt1 ORDER BY COALESCE('f~(', rt1.c2 COLLATE RTRIM)  NULLS LAST, CASE WHEN ((rt1.c2)|('YA&_')) THEN ((rt1.c2)<(t1.c0)) ELSE ((rt1.c2) BETWEEN ('2040351863') AND (t1.c0)) END);
SELECT COUNT(*) FROM t1 NATURAL JOIN rt1 WHERE ((((rt1.c1 COLLATE NOCASE))>((CASE WHEN t1.c0 THEN rt1.c1 END)))) ORDER BY COALESCE('f~(', rt1.c2 COLLATE RTRIM)  NULLS LAST, CASE WHEN ((rt1.c2)|('YA&_')) THEN ((rt1.c2)<(t1.c0)) ELSE ((rt1.c2) BETWEEN ('2040351863') AND (t1.c0)) END;
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (((CAST(rt0.c0 AS NUMERIC))>>(rt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS NUMERIC))>>(rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (((CAST(rt0.c0 AS NUMERIC))>>(rt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS NUMERIC))>>(rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (((CAST(rt0.c0 AS NUMERIC))>>(rt1.c1 COLLATE BINARY)));
SELECT ALL * FROM rt1, t1 WHERE ((((rtreenode(rt1.c0, rt1.c0), ((rt1.c0) NOT NULL), (- (0.08393376610990255))))<((CAST(rt1.c2 AS NUMERIC), (t1.c0 IN (rt1.c1)), ((rt1.c1)<(rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rtreenode(rt1.c0, rt1.c0), ((rt1.c0) NOT NULL), (- (0.08393376610990255))))<((CAST(rt1.c2 AS NUMERIC), (t1.c0 IN (rt1.c1)), ((rt1.c1)<(rt1.c1)))))) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE ((((rtreenode(rt1.c0, rt1.c0), ((rt1.c0) NOT NULL), (- (0.08393376610990255))))<((CAST(rt1.c2 AS NUMERIC), (t1.c0 IN (rt1.c1)), ((rt1.c1)<(rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rtreenode(rt1.c0, rt1.c0), ((rt1.c0) NOT NULL), (- (0.08393376610990255))))<((CAST(rt1.c2 AS NUMERIC), (t1.c0 IN (rt1.c1)), ((rt1.c1)<(rt1.c1)))))) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE ((((rtreenode(rt1.c0, rt1.c0), ((rt1.c0) NOT NULL), (- (0.08393376610990255))))<((CAST(rt1.c2 AS NUMERIC), (t1.c0 IN (rt1.c1)), ((rt1.c1)<(rt1.c1))))));
SELECT * FROM rt0, rt1 WHERE ((((((((('d/q?QZ')OR(NULL)))OR((rt1.c1 IN ()))))OR((((('铿dhkCސz(f')AND(rt0.c2)))AND(rt1.c1)))))OR(rt1.c2)));
SELECT SUM(count) FROM (SELECT (((((((((('d/q?QZ')OR(NULL)))OR((rt1.c1 IN ()))))OR((((('铿dhkCސz(f')AND(rt0.c2)))AND(rt1.c1)))))OR(rt1.c2))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((((((('d/q?QZ')OR(NULL)))OR((rt1.c1 IN ()))))OR((((('铿dhkCސz(f')AND(rt0.c2)))AND(rt1.c1)))))OR(rt1.c2)));
SELECT SUM(count) FROM (SELECT (((((((((('d/q?QZ')OR(NULL)))OR((rt1.c1 IN ()))))OR((((('铿dhkCސz(f')AND(rt0.c2)))AND(rt1.c1)))))OR(rt1.c2))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((((((('d/q?QZ')OR(NULL)))OR((rt1.c1 IN ()))))OR((((('铿dhkCސz(f')AND(rt0.c2)))AND(rt1.c1)))))OR(rt1.c2)));
SELECT COUNT(*) FROM rt1 WHERE ((('d/q?qz')LIKE(((rt1.c2)AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((('d/q?qz')LIKE(((rt1.c2)AND(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((('d/q?qz')LIKE(((rt1.c2)AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((('d/q?qz')LIKE(((rt1.c2)AND(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((('d/q?qz')LIKE(((rt1.c2)AND(rt1.c1)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON NULL INNER JOIN t1 ON (((rt0.c2)>>(rt1.c2)) IN ()) WHERE (CASE WHEN rt1.c0 THEN CASE WHEN rt1.c0 THEN rt0.c1 END END) ORDER BY (((NULL, CASE WHEN t1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c0 WHEN '-245694348' THEN rt0.c0 ELSE NULL END, (rt1.c1 IN ())))<=((((rt0.c1)=(rt1.c0)), (x'' IN ()), ((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 THEN CASE WHEN rt1.c0 THEN rt0.c1 END END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON NULL INNER JOIN t1 ON (((rt0.c2)>>(rt1.c2)) IN ()) ORDER BY (((NULL, CASE WHEN t1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c0 WHEN '-245694348' THEN rt0.c0 ELSE NULL END, (rt1.c1 IN ())))<=((((rt0.c1)=(rt1.c0)), (x'' IN ()), ((rt0.c0) NOT NULL)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON NULL INNER JOIN t1 ON (((rt0.c2)>>(rt1.c2)) IN ()) WHERE (CASE WHEN rt1.c0 THEN CASE WHEN rt1.c0 THEN rt0.c1 END END) ORDER BY (((NULL, CASE WHEN t1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c0 WHEN '-245694348' THEN rt0.c0 ELSE NULL END, (rt1.c1 IN ())))<=((((rt0.c1)=(rt1.c0)), (x'' IN ()), ((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 THEN CASE WHEN rt1.c0 THEN rt0.c1 END END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON NULL INNER JOIN t1 ON (((rt0.c2)>>(rt1.c2)) IN ()) ORDER BY (((NULL, CASE WHEN t1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c0 WHEN '-245694348' THEN rt0.c0 ELSE NULL END, (rt1.c1 IN ())))<=((((rt0.c1)=(rt1.c0)), (x'' IN ()), ((rt0.c0) NOT NULL)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON NULL INNER JOIN t1 ON (((rt0.c2)>>(rt1.c2)) IN ()) WHERE (CASE WHEN rt1.c0 THEN CASE WHEN rt1.c0 THEN rt0.c1 END END) ORDER BY (((NULL, CASE WHEN t1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c0 WHEN '-245694348' THEN rt0.c0 ELSE NULL END, (rt1.c1 IN ())))<=((((rt0.c1)=(rt1.c0)), (x'' IN ()), ((rt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM t1 WHERE (((TYPEOF(t1.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(t1.c0)) IS FALSE)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((TYPEOF(t1.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(t1.c0)) IS FALSE)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((TYPEOF(t1.c0)) IS FALSE));
SELECT COUNT(*) FROM rt1, t1 NATURAL JOIN rt0 WHERE ((~ (rt1.c0 COLLATE RTRIM))) ORDER BY (((~ (rt1.c1)))|((((rt0.c1))==((rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, t1 NATURAL JOIN rt0 ORDER BY (((~ (rt1.c1)))|((((rt0.c1))==((rt0.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, t1 NATURAL JOIN rt0 WHERE ((~ (rt1.c0 COLLATE RTRIM))) ORDER BY (((~ (rt1.c1)))|((((rt0.c1))==((rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, t1 NATURAL JOIN rt0 ORDER BY (((~ (rt1.c1)))|((((rt0.c1))==((rt0.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, t1 NATURAL JOIN rt0 WHERE ((~ (rt1.c0 COLLATE RTRIM))) ORDER BY (((~ (rt1.c1)))|((((rt0.c1))==((rt0.c1)))))  NULLS LAST;
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (CASE WHEN (NOT (rt0.c2)) THEN ((rt1.c1)+('')) WHEN ((((((((((((rt1.c2)AND(rt0.c2)))AND(t1.c0)))AND(rt1.c0)))AND(rt0.c1)))AND(rt1.c1)))OR(rt0.c1)) THEN ((t1.c0)/(rt1.c2)) WHEN CASE WHEN rt1.c1 THEN rt0.c2 WHEN t1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c1 END THEN (NOT ('-146018689')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (rt0.c2)) THEN ((rt1.c1)+('')) WHEN ((((((((((((rt1.c2)AND(rt0.c2)))AND(t1.c0)))AND(rt1.c0)))AND(rt0.c1)))AND(rt1.c1)))OR(rt0.c1)) THEN ((t1.c0)/(rt1.c2)) WHEN CASE WHEN rt1.c1 THEN rt0.c2 WHEN t1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c1 END THEN (NOT ('-146018689')) END) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (CASE WHEN (NOT (rt0.c2)) THEN ((rt1.c1)+('')) WHEN ((((((((((((rt1.c2)AND(rt0.c2)))AND(t1.c0)))AND(rt1.c0)))AND(rt0.c1)))AND(rt1.c1)))OR(rt0.c1)) THEN ((t1.c0)/(rt1.c2)) WHEN CASE WHEN rt1.c1 THEN rt0.c2 WHEN t1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c1 END THEN (NOT ('-146018689')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (rt0.c2)) THEN ((rt1.c1)+('')) WHEN ((((((((((((rt1.c2)AND(rt0.c2)))AND(t1.c0)))AND(rt1.c0)))AND(rt0.c1)))AND(rt1.c1)))OR(rt0.c1)) THEN ((t1.c0)/(rt1.c2)) WHEN CASE WHEN rt1.c1 THEN rt0.c2 WHEN t1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c1 END THEN (NOT ('-146018689')) END) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (CASE WHEN (NOT (rt0.c2)) THEN ((rt1.c1)+('')) WHEN ((((((((((((rt1.c2)AND(rt0.c2)))AND(t1.c0)))AND(rt1.c0)))AND(rt0.c1)))AND(rt1.c1)))OR(rt0.c1)) THEN ((t1.c0)/(rt1.c2)) WHEN CASE WHEN rt1.c1 THEN rt0.c2 WHEN t1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c1 END THEN (NOT ('-146018689')) END);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0) NOT BETWEEN (t1.c0) AND ('j,')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT BETWEEN (t1.c0) AND ('j,')) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0) NOT BETWEEN (t1.c0) AND ('j,')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT BETWEEN (t1.c0) AND ('j,')) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0) NOT BETWEEN (t1.c0) AND ('j,')) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)||(t1.c0)))+((+ (t1.c0))))) ORDER BY ((t1.c0 COLLATE RTRIM) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)||(t1.c0)))+((+ (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0 COLLATE RTRIM) NOTNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)||(t1.c0)))+((+ (t1.c0))))) ORDER BY ((t1.c0 COLLATE RTRIM) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)||(t1.c0)))+((+ (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0 COLLATE RTRIM) NOTNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)||(t1.c0)))+((+ (t1.c0))))) ORDER BY ((t1.c0 COLLATE RTRIM) NOTNULL) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 NATURAL JOIN t1 WHERE ((~ (t1.c0 COLLATE RTRIM))) ORDER BY ((t1.c0) IS TRUE) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 NATURAL JOIN t1 ORDER BY ((t1.c0) IS TRUE) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM rt1 NATURAL JOIN t1 WHERE ((~ (t1.c0 COLLATE RTRIM))) ORDER BY ((t1.c0) IS TRUE) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 NATURAL JOIN t1 ORDER BY ((t1.c0) IS TRUE) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM rt1 NATURAL JOIN t1 WHERE ((~ (t1.c0 COLLATE RTRIM))) ORDER BY ((t1.c0) IS TRUE) COLLATE NOCASE ASC  NULLS FIRST;
SELECT * FROM t1 INDEXED BY i0, rt1, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t1 INDEXED BY i0, rt1, rt0);
SELECT * FROM t1 INDEXED BY i0, rt1, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t1 INDEXED BY i0, rt1, rt0);
SELECT ALL * FROM rt1 WHERE (CAST(x'ef3a' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(x'ef3a' AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(x'ef3a' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(x'ef3a' AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(x'ef3a' AS INTEGER));
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c1 AS BLOB) COLLATE RTRIM) ORDER BY (CAST(rt1.c1 AS NUMERIC) IN (((rt1.c0)AND(rt1.c1))))  NULLS LAST, ((UNLIKELY(rt1.c0)) ISNULL);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (CAST(rt1.c1 AS NUMERIC) IN (((rt1.c0)AND(rt1.c1))))  NULLS LAST, ((UNLIKELY(rt1.c0)) ISNULL));
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c1 AS BLOB) COLLATE RTRIM) ORDER BY (CAST(rt1.c1 AS NUMERIC) IN (((rt1.c0)AND(rt1.c1))))  NULLS LAST, ((UNLIKELY(rt1.c0)) ISNULL);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (CAST(rt1.c1 AS NUMERIC) IN (((rt1.c0)AND(rt1.c1))))  NULLS LAST, ((UNLIKELY(rt1.c0)) ISNULL));
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c1 AS BLOB) COLLATE RTRIM) ORDER BY (CAST(rt1.c1 AS NUMERIC) IN (((rt1.c0)AND(rt1.c1))))  NULLS LAST, ((UNLIKELY(rt1.c0)) ISNULL);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (rt0.c1) AND (rt0.c0 COLLATE RTRIM))) ORDER BY ((rt0.c2 IN (rt0.c2, rt0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (rt0.c1) AND (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 IN (rt0.c2, rt0.c1)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (rt0.c1) AND (rt0.c0 COLLATE RTRIM))) ORDER BY ((rt0.c2 IN (rt0.c2, rt0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (rt0.c1) AND (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 IN (rt0.c2, rt0.c1)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (rt0.c1) AND (rt0.c0 COLLATE RTRIM))) ORDER BY ((rt0.c2 IN (rt0.c2, rt0.c1)) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((((((((rt1.c2) IS TRUE))AND(CASE WHEN rt1.c1 THEN rt1.c0 WHEN t1.c0 THEN rt1.c0 WHEN t1.c0 THEN rt1.c2 ELSE rt1.c0 END)))AND((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))))AND(rt1.c0)))AND((((rt1.c1))<>((t1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c2) IS TRUE))AND(CASE WHEN rt1.c1 THEN rt1.c0 WHEN t1.c0 THEN rt1.c0 WHEN t1.c0 THEN rt1.c2 ELSE rt1.c0 END)))AND((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))))AND(rt1.c0)))AND((((rt1.c1))!=((t1.c0)))))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((((((((rt1.c2) IS TRUE))AND(CASE WHEN rt1.c1 THEN rt1.c0 WHEN t1.c0 THEN rt1.c0 WHEN t1.c0 THEN rt1.c2 ELSE rt1.c0 END)))AND((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))))AND(rt1.c0)))AND((((rt1.c1))<>((t1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c2) IS TRUE))AND(CASE WHEN rt1.c1 THEN rt1.c0 WHEN t1.c0 THEN rt1.c0 WHEN t1.c0 THEN rt1.c2 ELSE rt1.c0 END)))AND((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))))AND(rt1.c0)))AND((((rt1.c1))!=((t1.c0)))))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((((((((rt1.c2) IS TRUE))AND(CASE WHEN rt1.c1 THEN rt1.c0 WHEN t1.c0 THEN rt1.c0 WHEN t1.c0 THEN rt1.c2 ELSE rt1.c0 END)))AND((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))))AND(rt1.c0)))AND((((rt1.c1))<>((t1.c0))))));
SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c0)<=(rt0.c2))) IS TRUE)) ORDER BY (rt0.c1 COLLATE RTRIM IN (((rt1.c1) NOT BETWEEN (NULL) AND (rt0.c1)))) ASC, (+ ((((rt0.c1, rt0.c1, rt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt1.c0, rt1.c2, rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<=(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt1 NOT INDEXED, rt0 ORDER BY (rt0.c1 COLLATE RTRIM IN (((rt1.c1) NOT BETWEEN (NULL) AND (rt0.c1)))) ASC, (+ ((((rt0.c1, rt0.c1, rt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt1.c0, rt1.c2, rt0.c2))))) ASC);
SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c0)<=(rt0.c2))) IS TRUE)) ORDER BY (rt0.c1 COLLATE RTRIM IN (((rt1.c1) NOT BETWEEN (NULL) AND (rt0.c1)))) ASC, (+ ((((rt0.c1, rt0.c1, rt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt1.c0, rt1.c2, rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<=(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt1 NOT INDEXED, rt0 ORDER BY (rt0.c1 COLLATE RTRIM IN (((rt1.c1) NOT BETWEEN (NULL) AND (rt0.c1)))) ASC, (+ ((((rt0.c1, rt0.c1, rt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt1.c0, rt1.c2, rt0.c2))))) ASC);
SELECT ALL * FROM rt1, rt0 WHERE (((((rt0.c0)<=(rt0.c2))) IS TRUE)) ORDER BY (rt0.c1 COLLATE RTRIM IN (((rt1.c1) NOT BETWEEN (NULL) AND (rt0.c1)))) ASC, (+ ((((rt0.c1, rt0.c1, rt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt1.c0, rt1.c2, rt0.c2))))) ASC;
SELECT ALL * FROM t1, rt0, rt1 WHERE (NULLIF(DISTINCT 't둟%[', ((rt0.c1) BETWEEN (rt0.c0) AND (NULL))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT 't둟%[', ((rt0.c1) BETWEEN (rt0.c0) AND (NULL)))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL * FROM t1, rt0, rt1 WHERE (NULLIF(DISTINCT 't둟%[', ((rt0.c1) BETWEEN (rt0.c0) AND (NULL))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT 't둟%[', ((rt0.c1) BETWEEN (rt0.c0) AND (NULL)))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL * FROM t1, rt0, rt1 WHERE (NULLIF(DISTINCT 't둟%[', ((rt0.c1) BETWEEN (rt0.c0) AND (NULL))));
SELECT * FROM rt1 WHERE ((((rt1.c1)) BETWEEN (((((rt1.c2))>=((rt1.c2))))) AND ((rt1.c1))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN (((((rt1.c2))>=((rt1.c2))))) AND ((rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c1)) BETWEEN (((((rt1.c2))>=((rt1.c2))))) AND ((rt1.c1))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN (((((rt1.c2))>=((rt1.c2))))) AND ((rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c1)) BETWEEN (((((rt1.c2))>=((rt1.c2))))) AND ((rt1.c1))));
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((((((((((((((rt0.c0) NOT NULL))AND((('') IS TRUE))))OR((NULL IN ()))))AND(((rt0.c1)>(t1.c0)))))OR(SUBSTR(rt0.c1, rt0.c1))))AND('-1322146413')))OR(CASE WHEN rt0.c1 THEN rt0.c1 WHEN t1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END))) ORDER BY (('-1202946108') BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c1))) AND (((t1.c0)|(rt0.c0)))), UNLIKELY(NULL) ASC, IFNULL(DISTINCT ((rt0.c0)LIKE(rt0.c2)), x'') ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c0) NOT NULL))AND((('') IS TRUE))))OR((NULL IN ()))))AND(((rt0.c1)>(t1.c0)))))OR(SUBSTR(rt0.c1, rt0.c1))))AND('-1322146413')))OR(CASE WHEN rt0.c1 THEN rt0.c1 WHEN t1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM t1, rt0 ORDER BY (('-1202946108') BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c1))) AND (((t1.c0)|(rt0.c0)))), UNLIKELY(NULL) ASC, IFNULL(DISTINCT ((rt0.c0)LIKE(rt0.c2)), x'') ASC);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((((((((((((((rt0.c0) NOT NULL))AND((('') IS TRUE))))OR((NULL IN ()))))AND(((rt0.c1)>(t1.c0)))))OR(SUBSTR(rt0.c1, rt0.c1))))AND('-1322146413')))OR(CASE WHEN rt0.c1 THEN rt0.c1 WHEN t1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END))) ORDER BY (('-1202946108') BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c1))) AND (((t1.c0)|(rt0.c0)))), UNLIKELY(NULL) ASC, IFNULL(DISTINCT ((rt0.c0)LIKE(rt0.c2)), x'') ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c0) NOT NULL))AND((('') IS TRUE))))OR((NULL IN ()))))AND(((rt0.c1)>(t1.c0)))))OR(SUBSTR(rt0.c1, rt0.c1))))AND('-1322146413')))OR(CASE WHEN rt0.c1 THEN rt0.c1 WHEN t1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM t1, rt0 ORDER BY (('-1202946108') BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c1))) AND (((t1.c0)|(rt0.c0)))), UNLIKELY(NULL) ASC, IFNULL(DISTINCT ((rt0.c0)LIKE(rt0.c2)), x'') ASC);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((((((((((((((rt0.c0) NOT NULL))AND((('') IS TRUE))))OR((NULL IN ()))))AND(((rt0.c1)>(t1.c0)))))OR(SUBSTR(rt0.c1, rt0.c1))))AND('-1322146413')))OR(CASE WHEN rt0.c1 THEN rt0.c1 WHEN t1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END))) ORDER BY (('-1202946108') BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c1))) AND (((t1.c0)|(rt0.c0)))), UNLIKELY(NULL) ASC, IFNULL(DISTINCT ((rt0.c0)LIKE(rt0.c2)), x'') ASC;
SELECT COUNT(*) FROM t1 CROSS JOIN rt0 ON CASE NULL  WHEN t1.c0 COLLATE BINARY THEN ((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c0)) WHEN ((((((((t1.c0)OR(t1.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt1.c1)) THEN (rt0.c1 IN ()) WHEN LIKE(rt0.c0, rt0.c1, '0') THEN ((rt1.c0) NOT NULL) ELSE CASE t1.c0  WHEN rt1.c1 THEN t1.c0 END END LEFT OUTER JOIN rt1 ON TOTAL_CHANGES() WHERE ((((((((((rt0.c0 IN ()))AND((NOT (rt1.c2)))))OR(rt1.c1)))OR((rt1.c0 IN (rt0.c1)))))OR(LIKELIHOOD(rt0.c2, 0.5386222427164656)))) ORDER BY ((rt1.c2)<(rt1.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c0 IN ()))AND((NOT (rt1.c2)))))OR(rt1.c1)))OR((rt1.c0 IN (rt0.c1)))))OR(LIKELIHOOD(rt0.c2, 0.5386222427164656)))) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON CASE NULL  WHEN t1.c0 COLLATE BINARY THEN ((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c0)) WHEN ((((((((t1.c0)OR(t1.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt1.c1)) THEN (rt0.c1 IN ()) WHEN LIKE(rt0.c0, rt0.c1, '0') THEN ((rt1.c0) NOT NULL) ELSE CASE t1.c0  WHEN rt1.c1 THEN t1.c0 END END LEFT OUTER JOIN rt1 ON TOTAL_CHANGES() ORDER BY ((rt1.c2)<(rt1.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM t1 CROSS JOIN rt0 ON CASE NULL  WHEN t1.c0 COLLATE BINARY THEN ((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c0)) WHEN ((((((((t1.c0)OR(t1.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt1.c1)) THEN (rt0.c1 IN ()) WHEN LIKE(rt0.c0, rt0.c1, '0') THEN ((rt1.c0) NOT NULL) ELSE CASE t1.c0  WHEN rt1.c1 THEN t1.c0 END END LEFT OUTER JOIN rt1 ON TOTAL_CHANGES() WHERE ((((((((((rt0.c0 IN ()))AND((NOT (rt1.c2)))))OR(rt1.c1)))OR((rt1.c0 IN (rt0.c1)))))OR(LIKELIHOOD(rt0.c2, 0.5386222427164656)))) ORDER BY ((rt1.c2)<(rt1.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c0 IN ()))AND((NOT (rt1.c2)))))OR(rt1.c1)))OR((rt1.c0 IN (rt0.c1)))))OR(LIKELIHOOD(rt0.c2, 0.5386222427164656)))) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON CASE NULL  WHEN t1.c0 COLLATE BINARY THEN ((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c0)) WHEN ((((((((t1.c0)OR(t1.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt1.c1)) THEN (rt0.c1 IN ()) WHEN LIKE(rt0.c0, rt0.c1, '0') THEN ((rt1.c0) NOT NULL) ELSE CASE t1.c0  WHEN rt1.c1 THEN t1.c0 END END LEFT OUTER JOIN rt1 ON TOTAL_CHANGES() ORDER BY ((rt1.c2)<(rt1.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM t1 CROSS JOIN rt0 ON CASE NULL  WHEN t1.c0 COLLATE BINARY THEN ((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c0)) WHEN ((((((((t1.c0)OR(t1.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt1.c1)) THEN (rt0.c1 IN ()) WHEN LIKE(rt0.c0, rt0.c1, '0') THEN ((rt1.c0) NOT NULL) ELSE CASE t1.c0  WHEN rt1.c1 THEN t1.c0 END END LEFT OUTER JOIN rt1 ON TOTAL_CHANGES() WHERE ((((((((((rt0.c0 IN ()))AND((NOT (rt1.c2)))))OR(rt1.c1)))OR((rt1.c0 IN (rt0.c1)))))OR(LIKELIHOOD(rt0.c2, 0.5386222427164656)))) ORDER BY ((rt1.c2)<(rt1.c1 COLLATE NOCASE));
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (((((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((t1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((t1.c0))) IN ())) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (((((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((t1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((t1.c0))) IN ())) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (((((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((t1.c0))) IN ()));
SELECT ALL * FROM rt0 INNER JOIN rt1 ON IFNULL(CAST(0x4da4fd06 AS NUMERIC), (rt0.c1 IN (rt1.c1))) INNER JOIN t1 ON IFNULL(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), SQLITE_COMPILEOPTION_GET(rt0.c2)) WHERE ('gX}9o1' COLLATE RTRIM) ORDER BY ((((((((CASE rt1.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)OR(((((rt1.c1)AND('34P\nk~+')))AND(rt1.c0)))))AND((rt1.c0 IN ()))))AND((rt0.c1 IN ()))))AND(((((rt1.c0)OR(rt0.c1)))AND(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('gX}9o1' COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON IFNULL(CAST(0X4da4fd06 AS NUMERIC), (rt0.c1 IN (rt1.c1))) INNER JOIN t1 ON IFNULL(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), SQLITE_COMPILEOPTION_GET(rt0.c2)) ORDER BY ((((((((CASE rt1.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)OR(((((rt1.c1)AND('34P\nk~+')))AND(rt1.c0)))))AND((rt1.c0 IN ()))))AND((rt0.c1 IN ()))))AND(((((rt1.c0)OR(rt0.c1)))AND(rt0.c1)))) DESC);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON IFNULL(CAST(0x4da4fd06 AS NUMERIC), (rt0.c1 IN (rt1.c1))) INNER JOIN t1 ON IFNULL(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), SQLITE_COMPILEOPTION_GET(rt0.c2)) WHERE ('gX}9o1' COLLATE RTRIM) ORDER BY ((((((((CASE rt1.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)OR(((((rt1.c1)AND('34P\nk~+')))AND(rt1.c0)))))AND((rt1.c0 IN ()))))AND((rt0.c1 IN ()))))AND(((((rt1.c0)OR(rt0.c1)))AND(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('gX}9o1' COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON IFNULL(CAST(0X4da4fd06 AS NUMERIC), (rt0.c1 IN (rt1.c1))) INNER JOIN t1 ON IFNULL(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), SQLITE_COMPILEOPTION_GET(rt0.c2)) ORDER BY ((((((((CASE rt1.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)OR(((((rt1.c1)AND('34P\nk~+')))AND(rt1.c0)))))AND((rt1.c0 IN ()))))AND((rt0.c1 IN ()))))AND(((((rt1.c0)OR(rt0.c1)))AND(rt0.c1)))) DESC);
SELECT COUNT(*) FROM t1 WHERE (INSTR(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND('')), ((t1.c0) IS FALSE))) ORDER BY ((((t1.c0) IS TRUE)) ISNULL);
SELECT SUM(count) FROM (SELECT ((INSTR(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND('')), ((t1.c0) IS FALSE))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0) IS TRUE)) ISNULL));
SELECT COUNT(*) FROM t1 WHERE (INSTR(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND('')), ((t1.c0) IS FALSE))) ORDER BY ((((t1.c0) IS TRUE)) ISNULL);
SELECT SUM(count) FROM (SELECT ((INSTR(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND('')), ((t1.c0) IS FALSE))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0) IS TRUE)) ISNULL));
SELECT COUNT(*) FROM t1 WHERE (INSTR(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND('')), ((t1.c0) IS FALSE))) ORDER BY ((((t1.c0) IS TRUE)) ISNULL);
SELECT * FROM t1, rt0, rt1 WHERE ((((+ (rt0.c1)))>=(((rt0.c0)IS NOT(t1.c0))))) ORDER BY x'40fb' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1)))>=(((rt0.c0)IS NOT(t1.c0))))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY x'40fb' DESC);
SELECT * FROM t1, rt0, rt1 WHERE ((((+ (rt0.c1)))>=(((rt0.c0)IS NOT(t1.c0))))) ORDER BY x'40fb' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1)))>=(((rt0.c0)IS NOT(t1.c0))))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY x'40fb' DESC);
SELECT * FROM t1, rt0, rt1 WHERE ((((+ (rt0.c1)))>=(((rt0.c0)IS NOT(t1.c0))))) ORDER BY x'40fb' DESC;
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY ((CAST(rt1.c0 AS INTEGER)) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c1 END) AND ((- (rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c0 AS INTEGER)) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c1 END) AND ((- (rt1.c2))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY ((CAST(rt1.c0 AS INTEGER)) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c1 END) AND ((- (rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c0 AS INTEGER)) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c1 END) AND ((- (rt1.c2))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY ((CAST(rt1.c0 AS INTEGER)) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c1 END) AND ((- (rt1.c2))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c1 WHERE (CASE WHEN CASE WHEN 'f1' THEN rt1.c2 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c2 END THEN ((rt0.c0)-(rt1.c0)) END) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN 'f1' THEN rt1.c2 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c2 END THEN ((rt0.c0)-(rt1.c0)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c1 ORDER BY rt1.c2 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c1 WHERE (CASE WHEN CASE WHEN 'f1' THEN rt1.c2 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c2 END THEN ((rt0.c0)-(rt1.c0)) END) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN 'f1' THEN rt1.c2 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c2 END THEN ((rt0.c0)-(rt1.c0)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c1 ORDER BY rt1.c2 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c1 WHERE (CASE WHEN CASE WHEN 'f1' THEN rt1.c2 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c2 END THEN ((rt0.c0)-(rt1.c0)) END) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(LOWER(DISTINCT rt1.c1) AS REAL)) ORDER BY CAST((((rt1.c1))>((rt0.c1))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(DISTINCT rt1.c1) AS REAL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST((((rt1.c1))>((rt0.c1))) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(LOWER(DISTINCT rt1.c1) AS REAL)) ORDER BY CAST((((rt1.c1))>((rt0.c1))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(DISTINCT rt1.c1) AS REAL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST((((rt1.c1))>((rt0.c1))) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST(LOWER(DISTINCT rt1.c1) AS REAL)) ORDER BY CAST((((rt1.c1))>((rt0.c1))) AS NUMERIC)  NULLS LAST;
SELECT ALL * FROM rt0, t1, rt1 WHERE ((((((((rt1.c0))!=((rt0.c1))))AND(((rt1.c1)>(rt1.c1)))))AND((((rt0.c2))<>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c0))!=((rt0.c1))))AND(((rt1.c1)>(rt1.c1)))))AND((((rt0.c2))!=((rt0.c2)))))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT ALL * FROM rt0, t1, rt1 WHERE ((((((((rt1.c0))!=((rt0.c1))))AND(((rt1.c1)>(rt1.c1)))))AND((((rt0.c2))<>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c0))!=((rt0.c1))))AND(((rt1.c1)>(rt1.c1)))))AND((((rt0.c2))!=((rt0.c2)))))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT ALL * FROM rt0, t1, rt1 WHERE ((((((((rt1.c0))!=((rt0.c1))))AND(((rt1.c1)>(rt1.c1)))))AND((((rt0.c2))<>((rt0.c2))))));
SELECT * FROM rt1, t1, rt0 INDEXED BY i0 WHERE (rt1.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2 COLLATE BINARY) IS TRUE)  as count FROM rt1, t1, rt0 INDEXED BY i0);
SELECT * FROM rt1, t1, rt0 INDEXED BY i0 WHERE (rt1.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2 COLLATE BINARY) IS TRUE)  as count FROM rt1, t1, rt0 INDEXED BY i0);
SELECT COUNT(*) FROM t1, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))<=(((((t1.c0)AND(rt0.c1)))AND(t1.c0))))) ORDER BY CASE WHEN TRIM(rt0.c2) THEN ((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))<=(((((t1.c0)AND(rt0.c1)))AND(t1.c0))))) IS TRUE)  as count FROM t1, rt0 ORDER BY CASE WHEN TRIM(rt0.c2) THEN ((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END);
SELECT COUNT(*) FROM t1, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))<=(((((t1.c0)AND(rt0.c1)))AND(t1.c0))))) ORDER BY CASE WHEN TRIM(rt0.c2) THEN ((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))<=(((((t1.c0)AND(rt0.c1)))AND(t1.c0))))) IS TRUE)  as count FROM t1, rt0 ORDER BY CASE WHEN TRIM(rt0.c2) THEN ((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END);
SELECT COUNT(*) FROM t1, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))<=(((((t1.c0)AND(rt0.c1)))AND(t1.c0))))) ORDER BY CASE WHEN TRIM(rt0.c2) THEN ((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END;
SELECT * FROM t1, rt1, rt0 WHERE (CAST((+ (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT * FROM t1, rt1, rt0 WHERE (CAST((+ (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT * FROM t1, rt1, rt0 WHERE (CAST((+ (rt0.c2)) AS BLOB));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON '-1276999459' WHERE (((x'') NOT NULL)) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'') NOT NULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON '-1276999459' ORDER BY rt0.c1  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON '-1276999459' WHERE (((x'') NOT NULL)) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'') NOT NULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON '-1276999459' ORDER BY rt0.c1  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON '-1276999459' WHERE (((x'') NOT NULL)) ORDER BY rt0.c1  NULLS FIRST;
SELECT * FROM rt1, t1, rt0 WHERE (json_valid((((t1.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt1.c1, rt1.c0)) AND ((rt0.c2, 0.2513443750636518, rt1.c0))))) ORDER BY ((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_valid((((t1.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt1.c1, rt1.c0)) AND ((rt0.c2, 0.2513443750636518, rt1.c0))))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY ((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))) ISNULL) DESC);
SELECT * FROM rt1, t1, rt0 WHERE (json_valid((((t1.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt1.c1, rt1.c0)) AND ((rt0.c2, 0.2513443750636518, rt1.c0))))) ORDER BY ((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_valid((((t1.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt1.c1, rt1.c0)) AND ((rt0.c2, 0.2513443750636518, rt1.c0))))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY ((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))) ISNULL) DESC);
SELECT * FROM rt1, t1, rt0 WHERE (json_valid((((t1.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt1.c1, rt1.c0)) AND ((rt0.c2, 0.2513443750636518, rt1.c0))))) ORDER BY ((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))) ISNULL) DESC;
SELECT ALL * FROM t1 WHERE (((t1.c0 COLLATE RTRIM) IS FALSE)) ORDER BY TRIM((((('-479416313')OR(t1.c0)))OR(t1.c0))) ASC  NULLS FIRST, (((((((((((((((t1.c0)) BETWEEN ((0.22757660692679738)) AND ((t1.c0))))AND(((NULL)-(t1.c0)))))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)))AND(((t1.c0)AND(t1.c0)))))OR((((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, -1.313428242E9, -2070760743, t1.c0))))))AND(t1.c0)))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))), '_C' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY TRIM((((('-479416313')OR(t1.c0)))OR(t1.c0))) ASC  NULLS FIRST, (((((((((((((((t1.c0)) BETWEEN ((0.22757660692679738)) AND ((t1.c0))))AND(((NULL)-(t1.c0)))))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)))AND(((t1.c0)AND(t1.c0)))))OR((((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, -1.313428242E9, -2070760743, t1.c0))))))AND(t1.c0)))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))), '_C' ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((t1.c0 COLLATE RTRIM) IS FALSE)) ORDER BY TRIM((((('-479416313')OR(t1.c0)))OR(t1.c0))) ASC  NULLS FIRST, (((((((((((((((t1.c0)) BETWEEN ((0.22757660692679738)) AND ((t1.c0))))AND(((NULL)-(t1.c0)))))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)))AND(((t1.c0)AND(t1.c0)))))OR((((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, -1.313428242E9, -2070760743, t1.c0))))))AND(t1.c0)))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))), '_C' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY TRIM((((('-479416313')OR(t1.c0)))OR(t1.c0))) ASC  NULLS FIRST, (((((((((((((((t1.c0)) BETWEEN ((0.22757660692679738)) AND ((t1.c0))))AND(((NULL)-(t1.c0)))))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)))AND(((t1.c0)AND(t1.c0)))))OR((((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, -1.313428242E9, -2070760743, t1.c0))))))AND(t1.c0)))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))), '_C' ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((t1.c0 COLLATE RTRIM) IS FALSE)) ORDER BY TRIM((((('-479416313')OR(t1.c0)))OR(t1.c0))) ASC  NULLS FIRST, (((((((((((((((t1.c0)) BETWEEN ((0.22757660692679738)) AND ((t1.c0))))AND(((NULL)-(t1.c0)))))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)))AND(((t1.c0)AND(t1.c0)))))OR((((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, -1.313428242E9, -2070760743, t1.c0))))))AND(t1.c0)))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))), '_C' ASC  NULLS FIRST;
SELECT ALL * FROM rt0 NOT INDEXED WHERE (rt0.c0) ORDER BY (~ (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (~ (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END))  NULLS LAST);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (rt0.c0) ORDER BY (~ (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (~ (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END))  NULLS LAST);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (rt0.c0) ORDER BY (~ (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END))  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE ((((((((((rt1.c0 IN ()))OR(NULL)))AND(((rt0.c2)==(rt0.c0)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c0 END)))AND(((((rt0.c1)AND(rt1.c2)))OR(rt1.c2))))) ORDER BY json_remove(((rt0.c1) ISNULL), (rt1.c2 IN ()))  NULLS LAST, (NOT (((((rt0.c1)AND(rt1.c2)))AND(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt1.c0 IN ()))OR(NULL)))AND(((rt0.c2)==(rt0.c0)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c0 END)))AND(((((rt0.c1)AND(rt1.c2)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY json_remove(((rt0.c1) ISNULL), (rt1.c2 IN ()))  NULLS LAST, (NOT (((((rt0.c1)AND(rt1.c2)))AND(rt0.c0)))) ASC);
SELECT ALL * FROM rt1, rt0 WHERE ((((((((((rt1.c0 IN ()))OR(NULL)))AND(((rt0.c2)==(rt0.c0)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c0 END)))AND(((((rt0.c1)AND(rt1.c2)))OR(rt1.c2))))) ORDER BY json_remove(((rt0.c1) ISNULL), (rt1.c2 IN ()))  NULLS LAST, (NOT (((((rt0.c1)AND(rt1.c2)))AND(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt1.c0 IN ()))OR(NULL)))AND(((rt0.c2)==(rt0.c0)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c0 END)))AND(((((rt0.c1)AND(rt1.c2)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY json_remove(((rt0.c1) ISNULL), (rt1.c2 IN ()))  NULLS LAST, (NOT (((((rt0.c1)AND(rt1.c2)))AND(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0 COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0 COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0 COLLATE RTRIM);
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS BLOB)) NOTNULL)) ORDER BY ((json_array(t1.c0, t1.c0, t1.c0, t1.c0))>=(((t1.c0) NOT NULL)))  NULLS FIRST, ((t1.c0) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY ((json_array(t1.c0, t1.c0, t1.c0, t1.c0))>=(((t1.c0) NOT NULL)))  NULLS FIRST, ((t1.c0) NOT NULL));
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS BLOB)) NOTNULL)) ORDER BY ((json_array(t1.c0, t1.c0, t1.c0, t1.c0))>=(((t1.c0) NOT NULL)))  NULLS FIRST, ((t1.c0) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY ((json_array(t1.c0, t1.c0, t1.c0, t1.c0))>=(((t1.c0) NOT NULL)))  NULLS FIRST, ((t1.c0) NOT NULL));
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS BLOB)) NOTNULL)) ORDER BY ((json_array(t1.c0, t1.c0, t1.c0, t1.c0))>=(((t1.c0) NOT NULL)))  NULLS FIRST, ((t1.c0) NOT NULL);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c1 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 IN ()) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c1 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 IN ()) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c1 IN ()) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (((((rt1.c0) IS FALSE))IS NOT((((t1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) IS FALSE))IS NOT((((t1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (((((rt1.c0) IS FALSE))IS NOT((((t1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) IS FALSE))IS NOT((((t1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (((((rt1.c0) IS FALSE))IS NOT((((t1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))));
SELECT * FROM rt0 WHERE ((((rt0.c0)==(rt0.c0)) IN (CAST(NULL AS TEXT), (((('We酟')OR(rt0.c1)))AND(rt0.c1))))) ORDER BY (((rt0.c0 IN ()))GLOB(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))) ASC, LIKELIHOOD(rt0.c0, 0.7720289626093558) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)==(rt0.c0)) IN (CAST(NULL AS TEXT), (((('We酟')OR(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))GLOB(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))) ASC, LIKELIHOOD(rt0.c0, 0.7720289626093558) COLLATE RTRIM);
SELECT * FROM rt0 WHERE ((((rt0.c0)==(rt0.c0)) IN (CAST(NULL AS TEXT), (((('We酟')OR(rt0.c1)))AND(rt0.c1))))) ORDER BY (((rt0.c0 IN ()))GLOB(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))) ASC, LIKELIHOOD(rt0.c0, 0.7720289626093558) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)==(rt0.c0)) IN (CAST(NULL AS TEXT), (((('We酟')OR(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))GLOB(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))) ASC, LIKELIHOOD(rt0.c0, 0.7720289626093558) COLLATE RTRIM);
SELECT * FROM rt0 WHERE ((((rt0.c0)==(rt0.c0)) IN (CAST(NULL AS TEXT), (((('We酟')OR(rt0.c1)))AND(rt0.c1))))) ORDER BY (((rt0.c0 IN ()))GLOB(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))) ASC, LIKELIHOOD(rt0.c0, 0.7720289626093558) COLLATE RTRIM;
SELECT * FROM rt1 WHERE (CASE rt1.c0  WHEN (((-1.954197043E9))<>((rt1.c2))) THEN ((rt1.c2)&(rt1.c2)) END) ORDER BY UNLIKELY(DISTINCT ((rt1.c0)AND(rt1.c0))), rt1.c2 DESC  NULLS LAST, (((CAST(rt1.c0 AS INTEGER)))<((rt1.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c0  WHEN (((-1.954197043E9))<>((rt1.c2))) THEN ((rt1.c2)&(rt1.c2)) END) IS TRUE)  as count FROM rt1 ORDER BY UNLIKELY(DISTINCT ((rt1.c0)AND(rt1.c0))), rt1.c2 DESC  NULLS LAST, (((CAST(rt1.c0 AS INTEGER)))<((rt1.c1)))  NULLS LAST);
SELECT * FROM rt1 WHERE (CASE rt1.c0  WHEN (((-1.954197043E9))<>((rt1.c2))) THEN ((rt1.c2)&(rt1.c2)) END) ORDER BY UNLIKELY(DISTINCT ((rt1.c0)AND(rt1.c0))), rt1.c2 DESC  NULLS LAST, (((CAST(rt1.c0 AS INTEGER)))<((rt1.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c0  WHEN (((-1.954197043E9))<>((rt1.c2))) THEN ((rt1.c2)&(rt1.c2)) END) IS TRUE)  as count FROM rt1 ORDER BY UNLIKELY(DISTINCT ((rt1.c0)AND(rt1.c0))), rt1.c2 DESC  NULLS LAST, (((CAST(rt1.c0 AS INTEGER)))<((rt1.c1)))  NULLS LAST);
SELECT * FROM rt1 WHERE (CASE rt1.c0  WHEN (((-1.954197043E9))<>((rt1.c2))) THEN ((rt1.c2)&(rt1.c2)) END) ORDER BY UNLIKELY(DISTINCT ((rt1.c0)AND(rt1.c0))), rt1.c2 DESC  NULLS LAST, (((CAST(rt1.c0 AS INTEGER)))<((rt1.c1)))  NULLS LAST;
SELECT ALL * FROM t1, rt0, rt1 WHERE (((((((rt0.c2)%(NULL)))OR(((rt1.c0)&(rt1.c2)))))AND(rt1.c1 COLLATE BINARY))) ORDER BY (((((((((((((NULL IN ()))AND(COALESCE(t1.c0, rt0.c0, rt0.c0, rt0.c1))))OR(((rt1.c1)>>(rt0.c0)))))OR(CAST(rt0.c1 AS TEXT))))AND(((((rt1.c1)OR(rt0.c2)))OR(NULL)))))AND((+ (0x48e14025)))))AND(rt1.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)%(NULL)))OR(((rt1.c0)&(rt1.c2)))))AND(rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY (((((((((((((NULL IN ()))AND(COALESCE(t1.c0, rt0.c0, rt0.c0, rt0.c1))))OR(((rt1.c1)>>(rt0.c0)))))OR(CAST(rt0.c1 AS TEXT))))AND(((((rt1.c1)OR(rt0.c2)))OR(NULL)))))AND((+ (0X48e14025)))))AND(rt1.c2)) DESC);
SELECT ALL * FROM t1, rt0, rt1 WHERE (((((((rt0.c2)%(NULL)))OR(((rt1.c0)&(rt1.c2)))))AND(rt1.c1 COLLATE BINARY))) ORDER BY (((((((((((((NULL IN ()))AND(COALESCE(t1.c0, rt0.c0, rt0.c0, rt0.c1))))OR(((rt1.c1)>>(rt0.c0)))))OR(CAST(rt0.c1 AS TEXT))))AND(((((rt1.c1)OR(rt0.c2)))OR(NULL)))))AND((+ (0x48e14025)))))AND(rt1.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)%(NULL)))OR(((rt1.c0)&(rt1.c2)))))AND(rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY (((((((((((((NULL IN ()))AND(COALESCE(t1.c0, rt0.c0, rt0.c0, rt0.c1))))OR(((rt1.c1)>>(rt0.c0)))))OR(CAST(rt0.c1 AS TEXT))))AND(((((rt1.c1)OR(rt0.c2)))OR(NULL)))))AND((+ (0X48e14025)))))AND(rt1.c2)) DESC);
SELECT ALL * FROM t1, rt0, rt1 WHERE (((((((rt0.c2)%(NULL)))OR(((rt1.c0)&(rt1.c2)))))AND(rt1.c1 COLLATE BINARY))) ORDER BY (((((((((((((NULL IN ()))AND(COALESCE(t1.c0, rt0.c0, rt0.c0, rt0.c1))))OR(((rt1.c1)>>(rt0.c0)))))OR(CAST(rt0.c1 AS TEXT))))AND(((((rt1.c1)OR(rt0.c2)))OR(NULL)))))AND((+ (0x48e14025)))))AND(rt1.c2)) DESC;
SELECT * FROM rt1 WHERE ((~ (CAST(NULL AS BLOB)))) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c1 WHEN x'' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 END)%(CASE 'X㼡'  WHEN rt1.c1 THEN rt1.c2 END)), (((NOT (rt1.c1))) BETWEEN ((~ (rt1.c0))) AND (x''))  NULLS LAST, CAST(CAST(rt1.c1 AS TEXT) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(NULL AS BLOB)))) IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c1 WHEN x'' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 END)%(CASE 'X㼡'  WHEN rt1.c1 THEN rt1.c2 END)), (((NOT (rt1.c1))) BETWEEN ((~ (rt1.c0))) AND (x''))  NULLS LAST, CAST(CAST(rt1.c1 AS TEXT) AS REAL) ASC);
SELECT * FROM rt1 WHERE ((~ (CAST(NULL AS BLOB)))) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c1 WHEN x'' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 END)%(CASE 'X㼡'  WHEN rt1.c1 THEN rt1.c2 END)), (((NOT (rt1.c1))) BETWEEN ((~ (rt1.c0))) AND (x''))  NULLS LAST, CAST(CAST(rt1.c1 AS TEXT) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(NULL AS BLOB)))) IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c1 WHEN x'' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 END)%(CASE 'X㼡'  WHEN rt1.c1 THEN rt1.c2 END)), (((NOT (rt1.c1))) BETWEEN ((~ (rt1.c0))) AND (x''))  NULLS LAST, CAST(CAST(rt1.c1 AS TEXT) AS REAL) ASC);
SELECT * FROM rt1 WHERE ((~ (CAST(NULL AS BLOB)))) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c1 WHEN x'' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 END)%(CASE 'X㼡'  WHEN rt1.c1 THEN rt1.c2 END)), (((NOT (rt1.c1))) BETWEEN ((~ (rt1.c0))) AND (x''))  NULLS LAST, CAST(CAST(rt1.c1 AS TEXT) AS REAL) ASC;
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((rt0.c0 COLLATE NOCASE IN ((rt0.c0 IN ()), rt0.c1 COLLATE BINARY))) ORDER BY '820187206';
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE NOCASE IN ((rt0.c0 IN ()), rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY '820187206');
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((rt0.c0 COLLATE NOCASE IN ((rt0.c0 IN ()), rt0.c1 COLLATE BINARY))) ORDER BY '820187206';
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE NOCASE IN ((rt0.c0 IN ()), rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY '820187206');
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((rt0.c0 COLLATE NOCASE IN ((rt0.c0 IN ()), rt0.c1 COLLATE BINARY))) ORDER BY '820187206';
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(ABS(rt1.c0) AS INTEGER)) ORDER BY rt1.c0, (+ ((rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((CAST(ABS(rt1.c0) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0, (+ ((rt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(ABS(rt1.c0) AS INTEGER)) ORDER BY rt1.c0, (+ ((rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((CAST(ABS(rt1.c0) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0, (+ ((rt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(ABS(rt1.c0) AS INTEGER)) ORDER BY rt1.c0, (+ ((rt1.c0 IN ())));
SELECT ALL * FROM rt0 WHERE ((- (rt0.c1)) COLLATE NOCASE) ORDER BY ((((rt0.c0) NOT NULL))>=(((0.9222812009762239)<(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT NULL))>=(((0.9222812009762239)<(rt0.c0)))) ASC);
SELECT ALL * FROM rt0 WHERE ((- (rt0.c1)) COLLATE NOCASE) ORDER BY ((((rt0.c0) NOT NULL))>=(((0.9222812009762239)<(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT NULL))>=(((0.9222812009762239)<(rt0.c0)))) ASC);
SELECT ALL * FROM rt0 WHERE ((- (rt0.c1)) COLLATE NOCASE) ORDER BY ((((rt0.c0) NOT NULL))>=(((0.9222812009762239)<(rt0.c0)))) ASC;
SELECT ALL * FROM rt0, rt1 WHERE (((((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))) NOT BETWEEN (rt1.c1 COLLATE BINARY) AND ((((rt0.c0))>((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))) NOT BETWEEN (rt1.c1 COLLATE BINARY) AND ((((rt0.c0))>((rt1.c1)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))) NOT BETWEEN (rt1.c1 COLLATE BINARY) AND ((((rt0.c0))>((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))) NOT BETWEEN (rt1.c1 COLLATE BINARY) AND ((((rt0.c0))>((rt1.c1)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))) NOT BETWEEN (rt1.c1 COLLATE BINARY) AND ((((rt0.c0))>((rt1.c1))))));
SELECT * FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c0)IS(rt0.c0))) BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))) AND (((x'') ISNULL)));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY ((((rt0.c0)IS(rt0.c0))) BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))) AND (((x'') ISNULL))));
SELECT * FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c0)IS(rt0.c0))) BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))) AND (((x'') ISNULL)));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY ((((rt0.c0)IS(rt0.c0))) BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))) AND (((x'') ISNULL))));
SELECT * FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c0)IS(rt0.c0))) BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))) AND (((x'') ISNULL)));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((((NULL)=(rt0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((((NULL)=(rt0.c0))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((((NULL)=(rt0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((((NULL)=(rt0.c0))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((((NULL)=(rt0.c0))) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))GLOB((((rt1.c2))<((rt1.c2))))) FULL OUTER JOIN rt1 ON (- (NULL)) WHERE ((rt1.c1 IN ())) ORDER BY CAST('1_}U' AS REAL), ((0.28551851604655476 COLLATE NOCASE) IS FALSE) DESC, (rt0.c0 IN ());
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ())) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))GLOB((((rt1.c2))<((rt1.c2))))) FULL OUTER JOIN rt1 ON (- (NULL)) ORDER BY CAST('1_}U' AS REAL), ((0.28551851604655476 COLLATE NOCASE) IS FALSE) DESC, (rt0.c0 IN ()));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))GLOB((((rt1.c2))<((rt1.c2))))) FULL OUTER JOIN rt1 ON (- (NULL)) WHERE ((rt1.c1 IN ())) ORDER BY CAST('1_}U' AS REAL), ((0.28551851604655476 COLLATE NOCASE) IS FALSE) DESC, (rt0.c0 IN ());
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ())) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))GLOB((((rt1.c2))<((rt1.c2))))) FULL OUTER JOIN rt1 ON (- (NULL)) ORDER BY CAST('1_}U' AS REAL), ((0.28551851604655476 COLLATE NOCASE) IS FALSE) DESC, (rt0.c0 IN ()));
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (((((rt0.c2)<>(rt1.c2)))||((rt0.c0 IN ())))) ORDER BY SQLITE_COMPILEOPTION_USED(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c1 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)!=(rt1.c2)))||((rt0.c0 IN ())))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY SQLITE_COMPILEOPTION_USED(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c1 END)  NULLS FIRST);
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (((((rt0.c2)<>(rt1.c2)))||((rt0.c0 IN ())))) ORDER BY SQLITE_COMPILEOPTION_USED(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c1 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)!=(rt1.c2)))||((rt0.c0 IN ())))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY SQLITE_COMPILEOPTION_USED(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c1 END)  NULLS FIRST);
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (((((rt0.c2)<>(rt1.c2)))||((rt0.c0 IN ())))) ORDER BY SQLITE_COMPILEOPTION_USED(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c1 END)  NULLS FIRST;
SELECT * FROM t1 WHERE (CASE CAST(t1.c0 AS REAL)  WHEN LIKELIHOOD(DISTINCT t1.c0, 0.7390343782580986) THEN (t1.c0 IN ()) END) ORDER BY CASE t1.c0 COLLATE BINARY  WHEN (~ (t1.c0)) THEN (((t1.c0)) NOT BETWEEN ((x'0467')) AND ((t1.c0))) ELSE ((t1.c0)%(t1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t1.c0 AS REAL)  WHEN LIKELIHOOD(DISTINCT t1.c0, 0.7390343782580986) THEN (t1.c0 IN ()) END) IS TRUE)  as count FROM t1 ORDER BY CASE t1.c0 COLLATE BINARY  WHEN (~ (t1.c0)) THEN (((t1.c0)) NOT BETWEEN ((x'0467')) AND ((t1.c0))) ELSE ((t1.c0)%(t1.c0)) END DESC  NULLS LAST);
SELECT * FROM t1 WHERE (CASE CAST(t1.c0 AS REAL)  WHEN LIKELIHOOD(DISTINCT t1.c0, 0.7390343782580986) THEN (t1.c0 IN ()) END) ORDER BY CASE t1.c0 COLLATE BINARY  WHEN (~ (t1.c0)) THEN (((t1.c0)) NOT BETWEEN ((x'0467')) AND ((t1.c0))) ELSE ((t1.c0)%(t1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t1.c0 AS REAL)  WHEN LIKELIHOOD(DISTINCT t1.c0, 0.7390343782580986) THEN (t1.c0 IN ()) END) IS TRUE)  as count FROM t1 ORDER BY CASE t1.c0 COLLATE BINARY  WHEN (~ (t1.c0)) THEN (((t1.c0)) NOT BETWEEN ((x'0467')) AND ((t1.c0))) ELSE ((t1.c0)%(t1.c0)) END DESC  NULLS LAST);
SELECT * FROM t1 WHERE (CASE CAST(t1.c0 AS REAL)  WHEN LIKELIHOOD(DISTINCT t1.c0, 0.7390343782580986) THEN (t1.c0 IN ()) END) ORDER BY CASE t1.c0 COLLATE BINARY  WHEN (~ (t1.c0)) THEN (((t1.c0)) NOT BETWEEN ((x'0467')) AND ((t1.c0))) ELSE ((t1.c0)%(t1.c0)) END DESC  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE (((rt0.c2) NOT BETWEEN (((((rt0.c2)AND(rt1.c1)))OR(rt0.c1))) AND (((rt0.c1) BETWEEN ('곮6') AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (((((rt0.c2)AND(rt1.c1)))OR(rt0.c1))) AND (((rt0.c1) BETWEEN ('곮6') AND (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((rt0.c2) NOT BETWEEN (((((rt0.c2)AND(rt1.c1)))OR(rt0.c1))) AND (((rt0.c1) BETWEEN ('곮6') AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (((((rt0.c2)AND(rt1.c1)))OR(rt0.c1))) AND (((rt0.c1) BETWEEN ('곮6') AND (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((rt0.c2) NOT BETWEEN (((((rt0.c2)AND(rt1.c1)))OR(rt0.c1))) AND (((rt0.c1) BETWEEN ('곮6') AND (rt1.c2)))));
SELECT * FROM rt1 WHERE ((+ ((- (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((+ ((- (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((+ ((- (rt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (CASE WHEN rt1.c0 THEN rt1.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 THEN rt1.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (CASE WHEN rt1.c0 THEN rt1.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 THEN rt1.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (CASE WHEN rt1.c0 THEN rt1.c1 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_array_length(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)), (~ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)), (~ (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_array_length(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)), (~ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)), (~ (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt1.c0 COLLATE BINARY)AND((((rt0.c1))>=((rt0.c2))))))AND((rt1.c1 IN (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0 COLLATE BINARY)AND((((rt0.c1))>=((rt0.c2))))))AND((rt1.c1 IN (rt1.c2))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt1.c0 COLLATE BINARY)AND((((rt0.c1))>=((rt0.c2))))))AND((rt1.c1 IN (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0 COLLATE BINARY)AND((((rt0.c1))>=((rt0.c2))))))AND((rt1.c1 IN (rt1.c2))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt1.c0 COLLATE BINARY)AND((((rt0.c1))>=((rt0.c2))))))AND((rt1.c1 IN (rt1.c2)))));
SELECT ALL COUNT(*) FROM t1 WHERE (CASE CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END  WHEN t1.c0 THEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) ELSE ((0.1306607973349334)-(t1.c0)) END) ORDER BY (((t1.c0)) BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((((t1.c0)OR(t1.c0))))) DESC, ((t1.c0)=(t1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END  WHEN t1.c0 THEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) ELSE ((0.1306607973349334)-(t1.c0)) END) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0)) BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((((t1.c0)OR(t1.c0))))) DESC, ((t1.c0)==(t1.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END  WHEN t1.c0 THEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) ELSE ((0.1306607973349334)-(t1.c0)) END) ORDER BY (((t1.c0)) BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((((t1.c0)OR(t1.c0))))) DESC, ((t1.c0)=(t1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END  WHEN t1.c0 THEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) ELSE ((0.1306607973349334)-(t1.c0)) END) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0)) BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((((t1.c0)OR(t1.c0))))) DESC, ((t1.c0)==(t1.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END  WHEN t1.c0 THEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) ELSE ((0.1306607973349334)-(t1.c0)) END) ORDER BY (((t1.c0)) BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((((t1.c0)OR(t1.c0))))) DESC, ((t1.c0)=(t1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (0.428346857710168 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((0.428346857710168 COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (0.428346857710168 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((0.428346857710168 COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (0.428346857710168 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON ((((t1.c0)/(rt0.c2))) BETWEEN ((- (NULL))) AND (((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))) WHERE ((((rt0.c0)) BETWEEN ((t1.c0)) AND ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))))) ORDER BY (((((((rt0.c2))=((rt0.c0))))OR(rt0.c1)))OR(((((((((rt0.c2)AND(t1.c0)))OR(-875075807)))OR(rt0.c1)))AND(rt0.c0)))) DESC, 0.6972408703690974 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((t1.c0)) AND ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON ((((t1.c0)/(rt0.c2))) BETWEEN ((- (NULL))) AND (((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))) ORDER BY (((((((rt0.c2))=((rt0.c0))))OR(rt0.c1)))OR(((((((((rt0.c2)AND(t1.c0)))OR(-875075807)))OR(rt0.c1)))AND(rt0.c0)))) DESC, 0.6972408703690974 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON ((((t1.c0)/(rt0.c2))) BETWEEN ((- (NULL))) AND (((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))) WHERE ((((rt0.c0)) BETWEEN ((t1.c0)) AND ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))))) ORDER BY (((((((rt0.c2))=((rt0.c0))))OR(rt0.c1)))OR(((((((((rt0.c2)AND(t1.c0)))OR(-875075807)))OR(rt0.c1)))AND(rt0.c0)))) DESC, 0.6972408703690974 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((t1.c0)) AND ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON ((((t1.c0)/(rt0.c2))) BETWEEN ((- (NULL))) AND (((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))) ORDER BY (((((((rt0.c2))=((rt0.c0))))OR(rt0.c1)))OR(((((((((rt0.c2)AND(t1.c0)))OR(-875075807)))OR(rt0.c1)))AND(rt0.c0)))) DESC, 0.6972408703690974 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON ((((t1.c0)/(rt0.c2))) BETWEEN ((- (NULL))) AND (((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))) WHERE ((((rt0.c0)) BETWEEN ((t1.c0)) AND ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))))) ORDER BY (((((((rt0.c2))=((rt0.c0))))OR(rt0.c1)))OR(((((((((rt0.c2)AND(t1.c0)))OR(-875075807)))OR(rt0.c1)))AND(rt0.c0)))) DESC, 0.6972408703690974 COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE ((((rt1.c0, ((rt1.c2)-(rt0.c1)), (rt1.c0 IN ())))>(((rt0.c2 IN (rt1.c0)), ((rt0.c2)+(rt0.c0)), CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, ((rt1.c2)-(rt0.c1)), (rt1.c0 IN ())))>(((rt0.c2 IN (rt1.c0)), ((rt0.c2)+(rt0.c0)), CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE ((((rt1.c0, ((rt1.c2)-(rt0.c1)), (rt1.c0 IN ())))>(((rt0.c2 IN (rt1.c0)), ((rt0.c2)+(rt0.c0)), CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, ((rt1.c2)-(rt0.c1)), (rt1.c0 IN ())))>(((rt0.c2 IN (rt1.c0)), ((rt0.c2)+(rt0.c0)), CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE ((((rt1.c0, ((rt1.c2)-(rt0.c1)), (rt1.c0 IN ())))>(((rt0.c2 IN (rt1.c0)), ((rt0.c2)+(rt0.c0)), CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c0 END))));
SELECT ALL * FROM t1 WHERE (CASE WHEN (t1.c0 IN ()) THEN ((((t1.c0)AND(x'')))AND(t1.c0)) ELSE 0x31efd121 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t1.c0 IN ()) THEN ((((t1.c0)AND(x'')))AND(t1.c0)) ELSE 0X31efd121 END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE WHEN (t1.c0 IN ()) THEN ((((t1.c0)AND(x'')))AND(t1.c0)) ELSE 0x31efd121 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t1.c0 IN ()) THEN ((((t1.c0)AND(x'')))AND(t1.c0)) ELSE 0X31efd121 END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE WHEN (t1.c0 IN ()) THEN ((((t1.c0)AND(x'')))AND(t1.c0)) ELSE 0x31efd121 END);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON ((('v5Cᡪ') BETWEEN (t1.c0) AND (rt0.c1)) IN ()) RIGHT OUTER JOIN t1 ON rt0.c1 WHERE (CAST((NOT (rt0.c0)) AS TEXT)) ORDER BY (((rt1.c1)<(rt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((('v5Cᡪ') BETWEEN (t1.c0) AND (rt0.c1)) IN ()) RIGHT OUTER JOIN t1 ON rt0.c1 ORDER BY (((rt1.c1)<(rt0.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON ((('v5Cᡪ') BETWEEN (t1.c0) AND (rt0.c1)) IN ()) RIGHT OUTER JOIN t1 ON rt0.c1 WHERE (CAST((NOT (rt0.c0)) AS TEXT)) ORDER BY (((rt1.c1)<(rt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((('v5Cᡪ') BETWEEN (t1.c0) AND (rt0.c1)) IN ()) RIGHT OUTER JOIN t1 ON rt0.c1 ORDER BY (((rt1.c1)<(rt0.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON ((('v5Cᡪ') BETWEEN (t1.c0) AND (rt0.c1)) IN ()) RIGHT OUTER JOIN t1 ON rt0.c1 WHERE (CAST((NOT (rt0.c0)) AS TEXT)) ORDER BY (((rt1.c1)<(rt0.c0)) IN ())  NULLS LAST;
SELECT ALL * FROM rt0, t1 WHERE (rt0.c2) ORDER BY LAST_INSERT_ROWID()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, t1 ORDER BY LAST_INSERT_ROWID()  NULLS LAST);
SELECT ALL * FROM rt0, t1 WHERE (rt0.c2) ORDER BY LAST_INSERT_ROWID()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, t1 ORDER BY LAST_INSERT_ROWID()  NULLS LAST);
SELECT ALL * FROM rt0, t1 WHERE (rt0.c2) ORDER BY LAST_INSERT_ROWID()  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((CAST(rt0.c1 AS TEXT)) NOT NULL)) ORDER BY ((x'c806') NOT BETWEEN ((((rt0.c1))!=((rt0.c1)))) AND (CAST(rt0.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM rt0, t1 ORDER BY ((x'c806') NOT BETWEEN ((((rt0.c1))!=((rt0.c1)))) AND (CAST(rt0.c2 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((CAST(rt0.c1 AS TEXT)) NOT NULL)) ORDER BY ((x'c806') NOT BETWEEN ((((rt0.c1))!=((rt0.c1)))) AND (CAST(rt0.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM rt0, t1 ORDER BY ((x'c806') NOT BETWEEN ((((rt0.c1))!=((rt0.c1)))) AND (CAST(rt0.c2 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((CAST(rt0.c1 AS TEXT)) NOT NULL)) ORDER BY ((x'c806') NOT BETWEEN ((((rt0.c1))!=((rt0.c1)))) AND (CAST(rt0.c2 AS NUMERIC)));
