-- Time: 2024/06/09 14:43:27
-- Database: database85
-- Database version: 3.40.0
-- seed value: 869354485
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 INTEGER , +c4 TEXT ); -- 1ms;
CREATE TABLE IF NOT EXISTS t1 (c0 REAL ); -- 0ms;
PRAGMA default_cache_size = -856709219; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES (''), (x''), (4.1608048E7); -- 1ms;
PRAGMA application_id; -- 0ms;
PRAGMA main.cache_spill = -151186462820462951; -- 0ms;
ANALYZE; -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED, c2 UNINDEXED); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c3, c4, c0) VALUES ('DAÍûù~[w', NULL, '\nW', ''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '18457'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 125858155); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
PRAGMA incremental_vacuum; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA threads; -- 0ms;
VACUUM main; -- 1ms;
INSERT OR ABORT INTO vt0(c1, c0) VALUES (0xffffffffccefa79d, NULL); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=('g6'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(NULL) WHERE CAST((vt0.c1 IN ()) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (x''), (x''), (x''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c0, c1) VALUES (NULL, x'', NULL), ('-1032866635', NULL, NULL), (x'', NULL, ''); -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c2; -- 1ms;
PRAGMA main.short_column_names; -- 0ms;
INSERT OR REPLACE INTO t1 VALUES (NULL); -- 1ms;
REINDEX  rt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '31307'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c0) VALUES (0.07022911921859942, -2052025222); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x''); -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c2)=(1782724839, 0.8231510806055621) WHERE vt0.c2; -- 1ms;
COMMIT TRANSACTION; -- 1ms;
ALTER TABLE t0 RENAME COLUMN c2 TO c42; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 366315243); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 944712748); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=830113902,11');\n; -- 0ms;
ALTER TABLE t0 ADD COLUMN c92 REAL; -- 1ms;
ALTER TABLE t0 ADD COLUMN c56 BLOB; -- 1ms;
UPDATE rt0 SET c3='0.07022911921859942'; -- 0ms;
DROP TABLE t0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA mmap_size = -243038999623925789; -- 0ms;
INSERT OR ABORT INTO rt0(c0, c1, c4, c3, c2) VALUES ('1216460391', '1888909484', NULL, '\nw', 0.1556683035182349); -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c1) VALUES ('m', x''); -- 1ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
INSERT OR ABORT INTO vt0(c2, c0) VALUES (NULL, x''); -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (-512024046), (NULL), (0.7842687781447593); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 527705976); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1218334461);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=4'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=12'); -- 1ms;
END; -- 0ms;
UPDATE OR FAIL rt0 SET (c2)=(0.0676754016102602) WHERE TRIM(DISTINCT (~ (rt0.c0)), LOWER(rt0.c4)); -- 1ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (NULL); -- 0ms;
VACUUM; -- 1ms;
PRAGMA temp.locking_mode; -- 0ms;
PRAGMA temp.defer_foreign_keys = true; -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c1) VALUES (NULL, 0.27835172600828173); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
END; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR ABORT INTO rt0(c2, c3, c1) VALUES ('1365706921', x'5862', x'31c9'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1218334461,6');\n; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('1782724839') ORDER BY ((((rt0.c4)AND(rt0.c4))) IS FALSE)  NULLS FIRST, CASE ((vt0.c1) NOT NULL)  WHEN vt0.c2 THEN CASE WHEN vt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 ELSE vt0.c1 END ELSE ((rt0.c0) BETWEEN (vt0.c2) AND (rt0.c0)) END ASC, rt0.c1;
SELECT SUM(count) FROM (SELECT ALL (('1782724839') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c4)AND(rt0.c4))) IS FALSE)  NULLS FIRST, CASE ((vt0.c1) NOT NULL)  WHEN vt0.c2 THEN CASE WHEN vt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 ELSE vt0.c1 END ELSE ((rt0.c0) BETWEEN (vt0.c2) AND (rt0.c0)) END ASC, rt0.c1);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('1782724839') ORDER BY ((((rt0.c4)AND(rt0.c4))) IS FALSE)  NULLS FIRST, CASE ((vt0.c1) NOT NULL)  WHEN vt0.c2 THEN CASE WHEN vt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 ELSE vt0.c1 END ELSE ((rt0.c0) BETWEEN (vt0.c2) AND (rt0.c0)) END ASC, rt0.c1;
SELECT SUM(count) FROM (SELECT ALL (('1782724839') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c4)AND(rt0.c4))) IS FALSE)  NULLS FIRST, CASE ((vt0.c1) NOT NULL)  WHEN vt0.c2 THEN CASE WHEN vt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 ELSE vt0.c1 END ELSE ((rt0.c0) BETWEEN (vt0.c2) AND (rt0.c0)) END ASC, rt0.c1);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('1782724839') ORDER BY ((((rt0.c4)AND(rt0.c4))) IS FALSE)  NULLS FIRST, CASE ((vt0.c1) NOT NULL)  WHEN vt0.c2 THEN CASE WHEN vt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 ELSE vt0.c1 END ELSE ((rt0.c0) BETWEEN (vt0.c2) AND (rt0.c0)) END ASC, rt0.c1;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0 IN ()))AND(vt0.c2 COLLATE NOCASE)))OR((vt0.c1 IN ())))) ORDER BY (((((vt0.c2 IN ()))OR(((vt0.c1) ISNULL))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))AND(vt0.c2 COLLATE NOCASE)))OR((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2 IN ()))OR(((vt0.c1) ISNULL))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0 IN ()))AND(vt0.c2 COLLATE NOCASE)))OR((vt0.c1 IN ())))) ORDER BY (((((vt0.c2 IN ()))OR(((vt0.c1) ISNULL))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))AND(vt0.c2 COLLATE NOCASE)))OR((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2 IN ()))OR(((vt0.c1) ISNULL))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0 IN ()))AND(vt0.c2 COLLATE NOCASE)))OR((vt0.c1 IN ())))) ORDER BY (((((vt0.c2 IN ()))OR(((vt0.c1) ISNULL))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c2 COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (vt0.c2 COLLATE BINARY) ORDER BY -0.0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY -0.0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c2 COLLATE BINARY) ORDER BY -0.0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY -0.0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c2 COLLATE BINARY) ORDER BY -0.0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (ABS(CAST(0.7197247546950309 AS BLOB))) ORDER BY (((vt0.c1)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((rt0.c2 COLLATE NOCASE))), ((((CAST(vt0.c1 AS TEXT))AND(CAST(rt0.c2 AS BLOB))))AND((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c3))))), rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(CAST(0.7197247546950309 AS BLOB))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c1)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((rt0.c2 COLLATE NOCASE))), ((((CAST(vt0.c1 AS TEXT))AND(CAST(rt0.c2 AS BLOB))))AND((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c3))))), rt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (ABS(CAST(0.7197247546950309 AS BLOB))) ORDER BY (((vt0.c1)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((rt0.c2 COLLATE NOCASE))), ((((CAST(vt0.c1 AS TEXT))AND(CAST(rt0.c2 AS BLOB))))AND((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c3))))), rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(CAST(0.7197247546950309 AS BLOB))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c1)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((rt0.c2 COLLATE NOCASE))), ((((CAST(vt0.c1 AS TEXT))AND(CAST(rt0.c2 AS BLOB))))AND((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c3))))), rt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (ABS(CAST(0.7197247546950309 AS BLOB))) ORDER BY (((vt0.c1)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((rt0.c2 COLLATE NOCASE))), ((((CAST(vt0.c1 AS TEXT))AND(CAST(rt0.c2 AS BLOB))))AND((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c3))))), rt0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((((rt0.c4, rt0.c3, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, 0.4317498763417481, rt0.c4, 'MO/1')) AND ((rt0.c3, rt0.c1, rt0.c3, rt0.c3, x''))))-(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('HN')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c4, rt0.c3, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, 0.4317498763417481, rt0.c4, 'MO/1')) AND ((rt0.c3, rt0.c1, rt0.c3, rt0.c3, x''))))-(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('HN')))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((((rt0.c4, rt0.c3, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, 0.4317498763417481, rt0.c4, 'MO/1')) AND ((rt0.c3, rt0.c1, rt0.c3, rt0.c3, x''))))-(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('HN')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c4, rt0.c3, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, 0.4317498763417481, rt0.c4, 'MO/1')) AND ((rt0.c3, rt0.c1, rt0.c3, rt0.c3, x''))))-(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('HN')))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((((rt0.c4, rt0.c3, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, 0.4317498763417481, rt0.c4, 'MO/1')) AND ((rt0.c3, rt0.c1, rt0.c3, rt0.c3, x''))))-(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('HN')))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c2 IN ()))AND(((vt0.c2)/(vt0.c1)))))AND(((vt0.c2) IS TRUE))))OR((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND((vt0.c1 IN (vt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c2 IN ()))AND(((vt0.c2)/(vt0.c1)))))AND(((vt0.c2) IS TRUE))))OR((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND((vt0.c1 IN (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c2 IN ()))AND(((vt0.c2)/(vt0.c1)))))AND(((vt0.c2) IS TRUE))))OR((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND((vt0.c1 IN (vt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c2 IN ()))AND(((vt0.c2)/(vt0.c1)))))AND(((vt0.c2) IS TRUE))))OR((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND((vt0.c1 IN (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c2 IN ()))AND(((vt0.c2)/(vt0.c1)))))AND(((vt0.c2) IS TRUE))))OR((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND((vt0.c1 IN (vt0.c2)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1) BETWEEN (vt0.c2) AND (rt0.c3)))>=(((rt0.c2)%(vt0.c2))))) ORDER BY (+ (((vt0.c1)>=(rt0.c4)))) DESC, x'eeae';
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (vt0.c2) AND (rt0.c3)))>=(((rt0.c2)%(vt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ (((vt0.c1)>=(rt0.c4)))) DESC, x'eeae');
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1) BETWEEN (vt0.c2) AND (rt0.c3)))>=(((rt0.c2)%(vt0.c2))))) ORDER BY (+ (((vt0.c1)>=(rt0.c4)))) DESC, x'eeae';
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (vt0.c2) AND (rt0.c3)))>=(((rt0.c2)%(vt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ (((vt0.c1)>=(rt0.c4)))) DESC, x'eeae');
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1) BETWEEN (vt0.c2) AND (rt0.c3)))>=(((rt0.c2)%(vt0.c2))))) ORDER BY (+ (((vt0.c1)>=(rt0.c4)))) DESC, x'eeae';
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c2))=((vt0.c2))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c2))==((vt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c2))=((vt0.c2))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c2))==((vt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c2))=((vt0.c2))) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))) IS FALSE)) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))) IS FALSE)) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))) IS FALSE)) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ('-1994217555');
SELECT SUM(count) FROM (SELECT ALL (('-1994217555') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-1994217555');
SELECT SUM(count) FROM (SELECT ALL (('-1994217555') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-1994217555');
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN rt0.c0 COLLATE NOCASE THEN TRIM('''}\n(F‚Åí4') ELSE rt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 COLLATE NOCASE THEN TRIM('''}\n(F‚Åí4') ELSE rt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN rt0.c0 COLLATE NOCASE THEN TRIM('''}\n(F‚Åí4') ELSE rt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 COLLATE NOCASE THEN TRIM('''}\n(F‚Åí4') ELSE rt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN rt0.c0 COLLATE NOCASE THEN TRIM('''}\n(F‚Åí4') ELSE rt0.c0 COLLATE BINARY END);
SELECT COUNT(*) FROM rt0 WHERE (1.216460391E9);
SELECT SUM(count) FROM (SELECT ((1.216460391E9) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (1.216460391E9);
SELECT SUM(count) FROM (SELECT ((1.216460391E9) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (1.216460391E9);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)<=(rt0.c1))) IS TRUE)) ORDER BY (rt0.c1 IN ()) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<=(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN ()) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)<=(rt0.c1))) IS TRUE)) ORDER BY (rt0.c1 IN ()) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<=(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN ()) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)<=(rt0.c1))) IS TRUE)) ORDER BY (rt0.c1 IN ()) COLLATE BINARY DESC  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN rt0 ON (((vt0.c1)==(vt0.c0)) IN ()) WHERE (((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((vt0.c1)==(vt0.c0)) IN ()));
SELECT * FROM vt0 CROSS JOIN rt0 ON (((vt0.c1)==(vt0.c0)) IN ()) WHERE (((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((vt0.c1)==(vt0.c0)) IN ()));
SELECT * FROM vt0 CROSS JOIN rt0 ON (((vt0.c1)==(vt0.c0)) IN ()) WHERE (((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)) COLLATE RTRIM);
SELECT * FROM vt0, rt0 WHERE (CAST(rt0.c3 COLLATE BINARY AS REAL)) ORDER BY ((((((((((rt0.c4)=(rt0.c4)))AND(((rt0.c0) NOT NULL))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((rt0.c4) BETWEEN (vt0.c2) AND (x'')))))OR(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((rt0.c4)=(rt0.c4)))AND(((rt0.c0) NOT NULL))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((rt0.c4) BETWEEN (vt0.c2) AND (x'')))))OR(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)))));
SELECT * FROM vt0, rt0 WHERE (CAST(rt0.c3 COLLATE BINARY AS REAL)) ORDER BY ((((((((((rt0.c4)=(rt0.c4)))AND(((rt0.c0) NOT NULL))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((rt0.c4) BETWEEN (vt0.c2) AND (x'')))))OR(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((rt0.c4)=(rt0.c4)))AND(((rt0.c0) NOT NULL))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((rt0.c4) BETWEEN (vt0.c2) AND (x'')))))OR(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)))));
SELECT * FROM vt0, rt0 WHERE (CAST(rt0.c3 COLLATE BINARY AS REAL)) ORDER BY ((((((((((rt0.c4)=(rt0.c4)))AND(((rt0.c0) NOT NULL))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((rt0.c4) BETWEEN (vt0.c2) AND (x'')))))OR(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c4))));
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE (LIKELIHOOD(rt0.c3 COLLATE NOCASE, 0.3568132191555371));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(rt0.c3 COLLATE NOCASE, 0.3568132191555371)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE (LIKELIHOOD(rt0.c3 COLLATE NOCASE, 0.3568132191555371));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(rt0.c3 COLLATE NOCASE, 0.3568132191555371)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE (LIKELIHOOD(rt0.c3 COLLATE NOCASE, 0.3568132191555371));
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULLIF(((((rt0.c3)AND(rt0.c2)))AND(vt0.c0)), (+ (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((((rt0.c3)AND(rt0.c2)))AND(vt0.c0)), (+ (vt0.c1)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULLIF(((((rt0.c3)AND(rt0.c2)))AND(vt0.c0)), (+ (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((((rt0.c3)AND(rt0.c2)))AND(vt0.c0)), (+ (vt0.c1)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULLIF(((((rt0.c3)AND(rt0.c2)))AND(vt0.c0)), (+ (vt0.c1))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((0.9345137097301881, NULL, vt0.c2)) BETWEEN ((x'', CAST(vt0.c2 AS BLOB), ((vt0.c2)AND(0.08913488282635484)))) AND ((((vt0.c2)LIKE(rt0.c3)), CAST(rt0.c1 AS BLOB), (('L*')OR(rt0.c4)))))) ORDER BY rt0.c3 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((0.9345137097301881, NULL, vt0.c2)) BETWEEN ((x'', CAST(vt0.c2 AS BLOB), ((vt0.c2)AND(0.08913488282635484)))) AND ((((vt0.c2)LIKE(rt0.c3)), CAST(rt0.c1 AS BLOB), (('L*')OR(rt0.c4)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c3 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((0.9345137097301881, NULL, vt0.c2)) BETWEEN ((x'', CAST(vt0.c2 AS BLOB), ((vt0.c2)AND(0.08913488282635484)))) AND ((((vt0.c2)LIKE(rt0.c3)), CAST(rt0.c1 AS BLOB), (('L*')OR(rt0.c4)))))) ORDER BY rt0.c3 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((0.9345137097301881, NULL, vt0.c2)) BETWEEN ((x'', CAST(vt0.c2 AS BLOB), ((vt0.c2)AND(0.08913488282635484)))) AND ((((vt0.c2)LIKE(rt0.c3)), CAST(rt0.c1 AS BLOB), (('L*')OR(rt0.c4)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c3 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((0.9345137097301881, NULL, vt0.c2)) BETWEEN ((x'', CAST(vt0.c2 AS BLOB), ((vt0.c2)AND(0.08913488282635484)))) AND ((((vt0.c2)LIKE(rt0.c3)), CAST(rt0.c1 AS BLOB), (('L*')OR(rt0.c4)))))) ORDER BY rt0.c3 DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE ABS(rt0.c3)  WHEN x'' THEN ((rt0.c1)/(-836098956)) WHEN (((rt0.c2))>((rt0.c4))) THEN LOWER('1365706921') WHEN TRIM(DISTINCT rt0.c3, rt0.c2) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((x'f371c531'))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ABS(rt0.c3)  WHEN x'' THEN ((rt0.c1)/(-836098956)) WHEN (((rt0.c2))>((rt0.c4))) THEN LOWER('1365706921') WHEN TRIM(DISTINCT rt0.c3, rt0.c2) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((x'f371c531'))) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ABS(rt0.c3)  WHEN x'' THEN ((rt0.c1)/(-836098956)) WHEN (((rt0.c2))>((rt0.c4))) THEN LOWER('1365706921') WHEN TRIM(DISTINCT rt0.c3, rt0.c2) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((x'f371c531'))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ABS(rt0.c3)  WHEN x'' THEN ((rt0.c1)/(-836098956)) WHEN (((rt0.c2))>((rt0.c4))) THEN LOWER('1365706921') WHEN TRIM(DISTINCT rt0.c3, rt0.c2) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((x'f371c531'))) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ABS(rt0.c3)  WHEN x'' THEN ((rt0.c1)/(-836098956)) WHEN (((rt0.c2))>((rt0.c4))) THEN LOWER('1365706921') WHEN TRIM(DISTINCT rt0.c3, rt0.c2) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((x'f371c531'))) END);
SELECT ALL * FROM vt0, rt0 WHERE (CAST((+ (rt0.c4)) AS REAL)) ORDER BY ((CAST(vt0.c2 AS BLOB)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c4)) AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(vt0.c2 AS BLOB)) NOT NULL) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (CAST((+ (rt0.c4)) AS REAL)) ORDER BY ((CAST(vt0.c2 AS BLOB)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c4)) AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(vt0.c2 AS BLOB)) NOT NULL) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (CAST((+ (rt0.c4)) AS REAL)) ORDER BY ((CAST(vt0.c2 AS BLOB)) NOT NULL) ASC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c2, vt0.c0, '-14017155')) BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND (('0.9345137097301881', vt0.c2, vt0.c2))) IN (((vt0.c1)<=(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2, vt0.c0, '-14017155')) BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND (('0.9345137097301881', vt0.c2, vt0.c2))) IN (((vt0.c1)<=(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c2, vt0.c0, '-14017155')) BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND (('0.9345137097301881', vt0.c2, vt0.c2))) IN (((vt0.c1)<=(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2, vt0.c0, '-14017155')) BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND (('0.9345137097301881', vt0.c2, vt0.c2))) IN (((vt0.c1)<=(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c2, vt0.c0, '-14017155')) BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND (('0.9345137097301881', vt0.c2, vt0.c2))) IN (((vt0.c1)<=(vt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((NULL) BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN ((- (x''))) AND ((((rt0.c3, vt0.c0, rt0.c3)) BETWEEN ((rt0.c2, vt0.c1, rt0.c1)) AND ((rt0.c4, vt0.c2, vt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN ((- (x''))) AND ((((rt0.c3, vt0.c0, rt0.c3)) BETWEEN ((rt0.c2, vt0.c1, rt0.c1)) AND ((rt0.c4, vt0.c2, vt0.c2)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((NULL) BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN ((- (x''))) AND ((((rt0.c3, vt0.c0, rt0.c3)) BETWEEN ((rt0.c2, vt0.c1, rt0.c1)) AND ((rt0.c4, vt0.c2, vt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN ((- (x''))) AND ((((rt0.c3, vt0.c0, rt0.c3)) BETWEEN ((rt0.c2, vt0.c1, rt0.c1)) AND ((rt0.c4, vt0.c2, vt0.c2)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((NULL) BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN ((- (x''))) AND ((((rt0.c3, vt0.c0, rt0.c3)) BETWEEN ((rt0.c2, vt0.c1, rt0.c1)) AND ((rt0.c4, vt0.c2, vt0.c2))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY) NOTNULL)) ORDER BY ((((rt0.c2) BETWEEN (NULL) AND (rt0.c4))) BETWEEN (((((rt0.c3)AND(rt0.c1)))AND(rt0.c1))) AND (CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2) BETWEEN (NULL) AND (rt0.c4))) BETWEEN (((((rt0.c3)AND(rt0.c1)))AND(rt0.c1))) AND (CAST(rt0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY) NOTNULL)) ORDER BY ((((rt0.c2) BETWEEN (NULL) AND (rt0.c4))) BETWEEN (((((rt0.c3)AND(rt0.c1)))AND(rt0.c1))) AND (CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2) BETWEEN (NULL) AND (rt0.c4))) BETWEEN (((((rt0.c3)AND(rt0.c1)))AND(rt0.c1))) AND (CAST(rt0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY) NOTNULL)) ORDER BY ((((rt0.c2) BETWEEN (NULL) AND (rt0.c4))) BETWEEN (((((rt0.c3)AND(rt0.c1)))AND(rt0.c1))) AND (CAST(rt0.c1 AS INTEGER)));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON (- ((- (rt0.c0)))) WHERE ((('0.9345137097301881')<>(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c3))))) ORDER BY json_array_length(x'd055') COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('0.9345137097301881')!=(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (- ((- (rt0.c0)))) ORDER BY json_array_length(x'd055') COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON (- ((- (rt0.c0)))) WHERE ((('0.9345137097301881')<>(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c3))))) ORDER BY json_array_length(x'd055') COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('0.9345137097301881')!=(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (- ((- (rt0.c0)))) ORDER BY json_array_length(x'd055') COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)) AS INTEGER)) ORDER BY (((rt0.c3))!=((((rt0.c2) ISNULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3))<>((((rt0.c2) ISNULL))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)) AS INTEGER)) ORDER BY (((rt0.c3))!=((((rt0.c2) ISNULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3))<>((((rt0.c2) ISNULL))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)) AS INTEGER)) ORDER BY (((rt0.c3))!=((((rt0.c2) ISNULL))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c2);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c3)OR(rt0.c3)) THEN CAST(rt0.c2 AS TEXT) END WHERE ((((rt0.c4)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((vt0.c0)/(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((vt0.c0)/(rt0.c1)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c3)OR(rt0.c3)) THEN CAST(rt0.c2 AS TEXT) END);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c3)OR(rt0.c3)) THEN CAST(rt0.c2 AS TEXT) END WHERE ((((rt0.c4)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((vt0.c0)/(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((vt0.c0)/(rt0.c1)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c3)OR(rt0.c3)) THEN CAST(rt0.c2 AS TEXT) END);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c3)OR(rt0.c3)) THEN CAST(rt0.c2 AS TEXT) END WHERE ((((rt0.c4)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((vt0.c0)/(rt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c4)+(rt0.c1)))OR(rt0.c1)))OR(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)+(rt0.c1)))OR(rt0.c1)))OR(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c4)+(rt0.c1)))OR(rt0.c1)))OR(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)+(rt0.c1)))OR(rt0.c1)))OR(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c4)+(rt0.c1)))OR(rt0.c1)))OR(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (json_array_length(CAST(rt0.c3 AS REAL))) ORDER BY ((HEX(rt0.c0))%(UPPER(DISTINCT -5.12024046E8))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(CAST(rt0.c3 AS REAL))) IS TRUE)  as count FROM rt0 ORDER BY ((HEX(rt0.c0))%(UPPER(DISTINCT -5.12024046E8))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (json_array_length(CAST(rt0.c3 AS REAL))) ORDER BY ((HEX(rt0.c0))%(UPPER(DISTINCT -5.12024046E8))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(CAST(rt0.c3 AS REAL))) IS TRUE)  as count FROM rt0 ORDER BY ((HEX(rt0.c0))%(UPPER(DISTINCT -5.12024046E8))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (json_array_length(CAST(rt0.c3 AS REAL))) ORDER BY ((HEX(rt0.c0))%(UPPER(DISTINCT -5.12024046E8))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c4)<<(rt0.c4)) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c4)<<(rt0.c4)) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c4)<<(rt0.c4)) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c4)<<(rt0.c4)) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c4)<<(rt0.c4)) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END);
SELECT COUNT(*) FROM rt0 WHERE ((((('.x')) BETWEEN ((rt0.c2)) AND ((NULL))) IN ((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c2, rt0.c3, rt0.c0))), TRIM(rt0.c1)))) ORDER BY (TYPEOF(DISTINCT rt0.c4) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('.x')) BETWEEN ((rt0.c2)) AND ((NULL))) IN ((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c2, rt0.c3, rt0.c0))), TRIM(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (TYPEOF(DISTINCT rt0.c4) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((('.x')) BETWEEN ((rt0.c2)) AND ((NULL))) IN ((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c2, rt0.c3, rt0.c0))), TRIM(rt0.c1)))) ORDER BY (TYPEOF(DISTINCT rt0.c4) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('.x')) BETWEEN ((rt0.c2)) AND ((NULL))) IN ((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c2, rt0.c3, rt0.c0))), TRIM(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (TYPEOF(DISTINCT rt0.c4) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((('.x')) BETWEEN ((rt0.c2)) AND ((NULL))) IN ((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c2, rt0.c3, rt0.c0))), TRIM(rt0.c1)))) ORDER BY (TYPEOF(DISTINCT rt0.c4) IN ())  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 ELSE NULL END) BETWEEN ((~ (rt0.c3))) AND (((((rt0.c4)OR(rt0.c4)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 ELSE NULL END) BETWEEN ((~ (rt0.c3))) AND (((((rt0.c4)OR(rt0.c4)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 ELSE NULL END) BETWEEN ((~ (rt0.c3))) AND (((((rt0.c4)OR(rt0.c4)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 ELSE NULL END) BETWEEN ((~ (rt0.c3))) AND (((((rt0.c4)OR(rt0.c4)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 ELSE NULL END) BETWEEN ((~ (rt0.c3))) AND (((((rt0.c4)OR(rt0.c4)))OR(rt0.c3)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS REAL));
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((rt0.c0 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((rt0.c0 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((rt0.c0 COLLATE BINARY) IS TRUE));
SELECT COUNT(*) FROM rt0, vt0 WHERE (JULIANDAY(((((((((vt0.c2)AND(vt0.c2)))AND(rt0.c0)))OR(vt0.c2)))OR(rt0.c3)), ((rt0.c2) IS TRUE), ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c4)))AND(0Xe9738e0)))AND(rt0.c2)))) ORDER BY ((((((rt0.c1)OR(vt0.c2)))OR(rt0.c4)))==('%\rrC  xo'));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(((((((((vt0.c2)AND(vt0.c2)))AND(rt0.c0)))OR(vt0.c2)))OR(rt0.c3)), ((rt0.c2) IS TRUE), ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c4)))AND(0xe9738e0)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c1)OR(vt0.c2)))OR(rt0.c4)))=('%\rrC  xo')));
SELECT COUNT(*) FROM rt0, vt0 WHERE (JULIANDAY(((((((((vt0.c2)AND(vt0.c2)))AND(rt0.c0)))OR(vt0.c2)))OR(rt0.c3)), ((rt0.c2) IS TRUE), ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c4)))AND(0Xe9738e0)))AND(rt0.c2)))) ORDER BY ((((((rt0.c1)OR(vt0.c2)))OR(rt0.c4)))==('%\rrC  xo'));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(((((((((vt0.c2)AND(vt0.c2)))AND(rt0.c0)))OR(vt0.c2)))OR(rt0.c3)), ((rt0.c2) IS TRUE), ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c4)))AND(0xe9738e0)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c1)OR(vt0.c2)))OR(rt0.c4)))=('%\rrC  xo')));
SELECT COUNT(*) FROM rt0, vt0 WHERE (JULIANDAY(((((((((vt0.c2)AND(vt0.c2)))AND(rt0.c0)))OR(vt0.c2)))OR(rt0.c3)), ((rt0.c2) IS TRUE), ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c4)))AND(0Xe9738e0)))AND(rt0.c2)))) ORDER BY ((((((rt0.c1)OR(vt0.c2)))OR(rt0.c4)))==('%\rrC  xo'));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ('G' IN (rt0.c4)) WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END THEN ((rt0.c4)>(rt0.c0)) ELSE (vt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END THEN ((rt0.c4)>(rt0.c0)) ELSE (vt0.c2 IN ()) END) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ('G' IN (rt0.c4)));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ('G' IN (rt0.c4)) WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END THEN ((rt0.c4)>(rt0.c0)) ELSE (vt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END THEN ((rt0.c4)>(rt0.c0)) ELSE (vt0.c2 IN ()) END) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ('G' IN (rt0.c4)));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ('G' IN (rt0.c4)) WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END THEN ((rt0.c4)>(rt0.c0)) ELSE (vt0.c2 IN ()) END);
SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0)AND(vt0.c2)))AND(vt0.c0))))) ORDER BY COALESCE(DISTINCT ((vt0.c2)IS(vt0.c1)), 0.03326004110118963, CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))), ((((vt0.c2)OR(((0.6203729464180049)+(vt0.c2)))))AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 END)) ASC, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((vt0.c0)AND(vt0.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT ((vt0.c2)IS(vt0.c1)), 0.03326004110118963, CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))), ((((vt0.c2)OR(((0.6203729464180049)+(vt0.c2)))))AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 END)) ASC, vt0.c0 ASC);
SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0)AND(vt0.c2)))AND(vt0.c0))))) ORDER BY COALESCE(DISTINCT ((vt0.c2)IS(vt0.c1)), 0.03326004110118963, CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))), ((((vt0.c2)OR(((0.6203729464180049)+(vt0.c2)))))AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 END)) ASC, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((vt0.c0)AND(vt0.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT ((vt0.c2)IS(vt0.c1)), 0.03326004110118963, CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))), ((((vt0.c2)OR(((0.6203729464180049)+(vt0.c2)))))AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 END)) ASC, vt0.c0 ASC);
SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0)AND(vt0.c2)))AND(vt0.c0))))) ORDER BY COALESCE(DISTINCT ((vt0.c2)IS(vt0.c1)), 0.03326004110118963, CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))), ((((vt0.c2)OR(((0.6203729464180049)+(vt0.c2)))))AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 END)) ASC, vt0.c0 ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c3 WHERE ((((x'')) BETWEEN (((((rt0.c3))>((vt0.c2))))) AND ((((rt0.c1)AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((x'')) BETWEEN (((((rt0.c3))>((vt0.c2))))) AND ((((rt0.c1)AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c3);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c3 WHERE ((((x'')) BETWEEN (((((rt0.c3))>((vt0.c2))))) AND ((((rt0.c1)AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((x'')) BETWEEN (((((rt0.c3))>((vt0.c2))))) AND ((((rt0.c1)AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c3);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c3 WHERE ((((x'')) BETWEEN (((((rt0.c3))>((vt0.c2))))) AND ((((rt0.c1)AND(vt0.c0))))));
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN vt0.c2 THEN ((rt0.c3)<<(vt0.c0)) ELSE rt0.c4 END) ORDER BY (CAST(rt0.c3 AS INTEGER) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c2 THEN ((rt0.c3)<<(vt0.c0)) ELSE rt0.c4 END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CAST(rt0.c3 AS INTEGER) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN vt0.c2 THEN ((rt0.c3)<<(vt0.c0)) ELSE rt0.c4 END) ORDER BY (CAST(rt0.c3 AS INTEGER) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c2 THEN ((rt0.c3)<<(vt0.c0)) ELSE rt0.c4 END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CAST(rt0.c3 AS INTEGER) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN vt0.c2 THEN ((rt0.c3)<<(vt0.c0)) ELSE rt0.c4 END) ORDER BY (CAST(rt0.c3 AS INTEGER) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c0)LIKE(rt0.c0))  WHEN ((rt0.c0)&(vt0.c1)) THEN UNICODE(rt0.c0) END WHERE (IFNULL(((rt0.c2) NOT NULL), ((rt0.c0) NOT BETWEEN (NULL) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((rt0.c2) NOT NULL), ((rt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c0)LIKE(rt0.c0))  WHEN ((rt0.c0)&(vt0.c1)) THEN UNICODE(rt0.c0) END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c0)LIKE(rt0.c0))  WHEN ((rt0.c0)&(vt0.c1)) THEN UNICODE(rt0.c0) END WHERE (IFNULL(((rt0.c2) NOT NULL), ((rt0.c0) NOT BETWEEN (NULL) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((rt0.c2) NOT NULL), ((rt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c0)LIKE(rt0.c0))  WHEN ((rt0.c0)&(vt0.c1)) THEN UNICODE(rt0.c0) END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c0)LIKE(rt0.c0))  WHEN ((rt0.c0)&(vt0.c1)) THEN UNICODE(rt0.c0) END WHERE (IFNULL(((rt0.c2) NOT NULL), ((rt0.c0) NOT BETWEEN (NULL) AND (vt0.c1))));
SELECT ALL * FROM vt0 WHERE (((('&	C*q7DMU'))>((vt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((('&	C*q7DMU'))>((vt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((('&	C*q7DMU'))>((vt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((('&	C*q7DMU'))>((vt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((('&	C*q7DMU'))>((vt0.c1))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_extract(((vt0.c1)GLOB(vt0.c0)), CAST(vt0.c0 AS BLOB), CAST(vt0.c2 AS INTEGER), IFNULL(DISTINCT vt0.c2, vt0.c2), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c2)), (((vt0.c1, vt0.c2, vt0.c2, vt0.c1, 0x6a1e8c6f)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c2, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c2, vt0.c1, vt0.c0))))) ORDER BY ((LIKELY(vt0.c1))>(((vt0.c2)>(vt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_extract(((vt0.c1)GLOB(vt0.c0)), CAST(vt0.c0 AS BLOB), CAST(vt0.c2 AS INTEGER), IFNULL(DISTINCT vt0.c2, vt0.c2), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c2)), (((vt0.c1, vt0.c2, vt0.c2, vt0.c1, 0x6a1e8c6f)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c2, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c2, vt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY(vt0.c1))>(((vt0.c2)>(vt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_extract(((vt0.c1)GLOB(vt0.c0)), CAST(vt0.c0 AS BLOB), CAST(vt0.c2 AS INTEGER), IFNULL(DISTINCT vt0.c2, vt0.c2), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c2)), (((vt0.c1, vt0.c2, vt0.c2, vt0.c1, 0x6a1e8c6f)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c2, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c2, vt0.c1, vt0.c0))))) ORDER BY ((LIKELY(vt0.c1))>(((vt0.c2)>(vt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_extract(((vt0.c1)GLOB(vt0.c0)), CAST(vt0.c0 AS BLOB), CAST(vt0.c2 AS INTEGER), IFNULL(DISTINCT vt0.c2, vt0.c2), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c2)), (((vt0.c1, vt0.c2, vt0.c2, vt0.c1, 0x6a1e8c6f)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c2, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c2, vt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY(vt0.c1))>(((vt0.c2)>(vt0.c2))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c2) ISNULL))>(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1))))) ORDER BY 0.6336593854278157, ((CASE WHEN vt0.c0 THEN vt0.c0 END)&((((((((('257556544')OR(0.8345147907372826)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) ISNULL))>(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY 0.6336593854278157, ((CASE WHEN vt0.c0 THEN vt0.c0 END)&((((((((('257556544')OR(0.8345147907372826)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c2) ISNULL))>(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1))))) ORDER BY 0.6336593854278157, ((CASE WHEN vt0.c0 THEN vt0.c0 END)&((((((((('257556544')OR(0.8345147907372826)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) ISNULL))>(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY 0.6336593854278157, ((CASE WHEN vt0.c0 THEN vt0.c0 END)&((((((((('257556544')OR(0.8345147907372826)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c2) ISNULL))>(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1))))) ORDER BY 0.6336593854278157, ((CASE WHEN vt0.c0 THEN vt0.c0 END)&((((((((('257556544')OR(0.8345147907372826)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))) ASC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE ((LIKELIHOOD(vt0.c2, 0.16750155090178287) IN ())) ORDER BY LOWER(((rt0.c0)AND(vt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((LIKELIHOOD(vt0.c2, 0.16750155090178287) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY LOWER(((rt0.c0)AND(vt0.c2)))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((LIKELIHOOD(vt0.c2, 0.16750155090178287) IN ())) ORDER BY LOWER(((rt0.c0)AND(vt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((LIKELIHOOD(vt0.c2, 0.16750155090178287) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY LOWER(((rt0.c0)AND(vt0.c2)))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((LIKELIHOOD(vt0.c2, 0.16750155090178287) IN ())) ORDER BY LOWER(((rt0.c0)AND(vt0.c2)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON rt0.c3 WHERE ((+ (rt0.c3))) ORDER BY ((((CASE vt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE NULL END)OR(((rt0.c1)<=(vt0.c1)))))AND(((vt0.c1)|(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c3))) IS TRUE)  as count FROM rt0 NOT INDEXED INNER JOIN vt0 ON rt0.c3 ORDER BY ((((CASE vt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE NULL END)OR(((rt0.c1)<=(vt0.c1)))))AND(((vt0.c1)|(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON rt0.c3 WHERE ((+ (rt0.c3))) ORDER BY ((((CASE vt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE NULL END)OR(((rt0.c1)<=(vt0.c1)))))AND(((vt0.c1)|(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c3))) IS TRUE)  as count FROM rt0 NOT INDEXED INNER JOIN vt0 ON rt0.c3 ORDER BY ((((CASE vt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE NULL END)OR(((rt0.c1)<=(vt0.c1)))))AND(((vt0.c1)|(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON rt0.c3 WHERE ((+ (rt0.c3))) ORDER BY ((((CASE vt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE NULL END)OR(((rt0.c1)<=(vt0.c1)))))AND(((vt0.c1)|(rt0.c0))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE ((rt0.c4) ISNULL)  WHEN ((rt0.c4)GLOB(rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1)) ELSE (+ (rt0.c0)) END) ORDER BY (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((CASE rt0.c1  WHEN rt0.c1 THEN x'bb57e994' END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c4) ISNULL)  WHEN ((rt0.c4)GLOB(rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1)) ELSE (+ (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((CASE rt0.c1  WHEN rt0.c1 THEN x'bb57e994' END)))  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE ((rt0.c4) ISNULL)  WHEN ((rt0.c4)GLOB(rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1)) ELSE (+ (rt0.c0)) END) ORDER BY (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((CASE rt0.c1  WHEN rt0.c1 THEN x'bb57e994' END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c4) ISNULL)  WHEN ((rt0.c4)GLOB(rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1)) ELSE (+ (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((CASE rt0.c1  WHEN rt0.c1 THEN x'bb57e994' END)))  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE ((rt0.c4) ISNULL)  WHEN ((rt0.c4)GLOB(rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1)) ELSE (+ (rt0.c0)) END) ORDER BY (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((CASE rt0.c1  WHEN rt0.c1 THEN x'bb57e994' END)))  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((+ (rt0.c4))) NOT BETWEEN (TRIM(DISTINCT rt0.c3)) AND (INSTR(rt0.c2, rt0.c1)))) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c3 END IN ()), (rt0.c4 IN ()) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c4))) NOT BETWEEN (TRIM(DISTINCT rt0.c3)) AND (INSTR(rt0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c2 THEN rt0.c3 END IN ()), (rt0.c4 IN ()) COLLATE NOCASE DESC);
SELECT * FROM rt0 WHERE ((((+ (rt0.c4))) NOT BETWEEN (TRIM(DISTINCT rt0.c3)) AND (INSTR(rt0.c2, rt0.c1)))) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c3 END IN ()), (rt0.c4 IN ()) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c4))) NOT BETWEEN (TRIM(DISTINCT rt0.c3)) AND (INSTR(rt0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c2 THEN rt0.c3 END IN ()), (rt0.c4 IN ()) COLLATE NOCASE DESC);
SELECT * FROM rt0 WHERE ((((+ (rt0.c4))) NOT BETWEEN (TRIM(DISTINCT rt0.c3)) AND (INSTR(rt0.c2, rt0.c1)))) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c3 END IN ()), (rt0.c4 IN ()) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((COALESCE(rt0.c0, vt0.c1))LIKE(((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt0.c0, vt0.c1))LIKE(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((COALESCE(rt0.c0, vt0.c1))LIKE(((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt0.c0, vt0.c1))LIKE(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((COALESCE(rt0.c0, vt0.c1))LIKE(((rt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))IS(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE RTRIM, SQLITE_COMPILEOPTION_GET((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))IS(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE RTRIM, SQLITE_COMPILEOPTION_GET((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))IS(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE RTRIM, SQLITE_COMPILEOPTION_GET((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))IS(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE RTRIM, SQLITE_COMPILEOPTION_GET((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))IS(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE RTRIM, SQLITE_COMPILEOPTION_GET((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((+ (rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c3)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((+ (rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c3)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((+ (rt0.c3)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (IFNULL(COALESCE(DISTINCT rt0.c1, rt0.c3), LIKELIHOOD(DISTINCT rt0.c4, 0.6938217448738383))) ORDER BY CAST(((((rt0.c0)OR(rt0.c1)))OR('742504192')) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(COALESCE(DISTINCT rt0.c1, rt0.c3), LIKELIHOOD(DISTINCT rt0.c4, 0.6938217448738383))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c0)OR(rt0.c1)))OR('742504192')) AS TEXT) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (IFNULL(COALESCE(DISTINCT rt0.c1, rt0.c3), LIKELIHOOD(DISTINCT rt0.c4, 0.6938217448738383))) ORDER BY CAST(((((rt0.c0)OR(rt0.c1)))OR('742504192')) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(COALESCE(DISTINCT rt0.c1, rt0.c3), LIKELIHOOD(DISTINCT rt0.c4, 0.6938217448738383))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c0)OR(rt0.c1)))OR('742504192')) AS TEXT) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (IFNULL(COALESCE(DISTINCT rt0.c1, rt0.c3), LIKELIHOOD(DISTINCT rt0.c4, 0.6938217448738383))) ORDER BY CAST(((((rt0.c0)OR(rt0.c1)))OR('742504192')) AS TEXT) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c3 IN ())) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND ('-512024046'))) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ())) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND ('-512024046'))) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3 IN ())) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND ('-512024046'))) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ())) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND ('-512024046'))) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3 IN ())) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND ('-512024046'))) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2) IS FALSE) IN ((rt0.c0 IN ()), (+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) IS FALSE) IN ((rt0.c0 IN ()), (+ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2) IS FALSE) IN ((rt0.c0 IN ()), (+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) IS FALSE) IN ((rt0.c0 IN ()), (+ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2) IS FALSE) IN ((rt0.c0 IN ()), (+ (rt0.c1)))));
SELECT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c3)))IS(((rt0.c2) IS TRUE)))) ORDER BY ((NULL IN ()) IN ());
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c3)))IS(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY ((NULL IN ()) IN ()));
SELECT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c3)))IS(((rt0.c2) IS TRUE)))) ORDER BY ((NULL IN ()) IN ());
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c3)))IS(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY ((NULL IN ()) IN ()));
SELECT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c3)))IS(((rt0.c2) IS TRUE)))) ORDER BY ((NULL IN ()) IN ());
SELECT COUNT(*) FROM rt0, vt0 WHERE (((- (rt0.c4)) IN ())) ORDER BY ((((vt0.c1)||(rt0.c4)))||(((rt0.c3) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c4)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c1)||(rt0.c4)))||(((rt0.c3) IS TRUE)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((- (rt0.c4)) IN ())) ORDER BY ((((vt0.c1)||(rt0.c4)))||(((rt0.c3) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c4)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c1)||(rt0.c4)))||(((rt0.c3) IS TRUE)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((- (rt0.c4)) IN ())) ORDER BY ((((vt0.c1)||(rt0.c4)))||(((rt0.c3) IS TRUE)))  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c0))>=((vt0.c0))))OR((('nP')&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))>=((vt0.c0))))OR((('nP')&(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c0))>=((vt0.c0))))OR((('nP')&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))>=((vt0.c0))))OR((('nP')&(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c0))>=((vt0.c0))))OR((('nP')&(vt0.c0)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c3) NOT NULL) WHERE (UPPER(DISTINCT rt0.c0) COLLATE RTRIM) ORDER BY CAST(0.35439649231497905 AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c3) NOT NULL) ORDER BY CAST(0.35439649231497905 AS NUMERIC) DESC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c3) NOT NULL) WHERE (UPPER(DISTINCT rt0.c0) COLLATE RTRIM) ORDER BY CAST(0.35439649231497905 AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c3) NOT NULL) ORDER BY CAST(0.35439649231497905 AS NUMERIC) DESC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c3) NOT NULL) WHERE (UPPER(DISTINCT rt0.c0) COLLATE RTRIM) ORDER BY CAST(0.35439649231497905 AS NUMERIC) DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY (((((((('Uz')AND(((x'')-(rt0.c0)))))OR(rt0.c2)))OR(0.5269278833335488)))OR(CAST(rt0.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((((((('Uz')AND(((x'')-(rt0.c0)))))OR(rt0.c2)))OR(0.5269278833335488)))OR(CAST(rt0.c0 AS REAL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY (((((((('Uz')AND(((x'')-(rt0.c0)))))OR(rt0.c2)))OR(0.5269278833335488)))OR(CAST(rt0.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((((((('Uz')AND(((x'')-(rt0.c0)))))OR(rt0.c2)))OR(0.5269278833335488)))OR(CAST(rt0.c0 AS REAL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY (((((((('Uz')AND(((x'')-(rt0.c0)))))OR(rt0.c2)))OR(0.5269278833335488)))OR(CAST(rt0.c0 AS REAL))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (json_remove(CAST(x'' AS INTEGER), vt0.c2)) ORDER BY (((((vt0.c2 IN ()))OR((vt0.c1 IN (x'6394', vt0.c1)))))OR(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END))  NULLS FIRST, (((NULL)==(vt0.c1)) IN (vt0.c2 COLLATE RTRIM)) DESC, ((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))&(((((vt0.c0)OR(vt0.c2)))AND(vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_remove(CAST(x'' AS INTEGER), vt0.c2)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2 IN ()))OR((vt0.c1 IN (x'6394', vt0.c1)))))OR(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END))  NULLS FIRST, (((NULL)=(vt0.c1)) IN (vt0.c2 COLLATE RTRIM)) DESC, ((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))&(((((vt0.c0)OR(vt0.c2)))AND(vt0.c2))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (json_remove(CAST(x'' AS INTEGER), vt0.c2)) ORDER BY (((((vt0.c2 IN ()))OR((vt0.c1 IN (x'6394', vt0.c1)))))OR(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END))  NULLS FIRST, (((NULL)==(vt0.c1)) IN (vt0.c2 COLLATE RTRIM)) DESC, ((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))&(((((vt0.c0)OR(vt0.c2)))AND(vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_remove(CAST(x'' AS INTEGER), vt0.c2)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2 IN ()))OR((vt0.c1 IN (x'6394', vt0.c1)))))OR(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END))  NULLS FIRST, (((NULL)=(vt0.c1)) IN (vt0.c2 COLLATE RTRIM)) DESC, ((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))&(((((vt0.c0)OR(vt0.c2)))AND(vt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3)OR(rt0.c0)))-(((rt0.c2)IS(''))))) ORDER BY (- (MIN(rt0.c3, rt0.c4))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)OR(rt0.c0)))-(((rt0.c2)IS(''))))) IS TRUE)  as count FROM rt0 ORDER BY (- (MIN(rt0.c3, rt0.c4))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3)OR(rt0.c0)))-(((rt0.c2)IS(''))))) ORDER BY (- (MIN(rt0.c3, rt0.c4))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)OR(rt0.c0)))-(((rt0.c2)IS(''))))) IS TRUE)  as count FROM rt0 ORDER BY (- (MIN(rt0.c3, rt0.c4))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3)OR(rt0.c0)))-(((rt0.c2)IS(''))))) ORDER BY (- (MIN(rt0.c3, rt0.c4))) ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0 IN ()))>(((rt0.c2)<(rt0.c1))))) ORDER BY CAST(rt0.c0 AS REAL)  NULLS LAST, (((0.21900484644110607)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((rt0.c1)))  NULLS FIRST, CAST(((((vt0.c2)AND(rt0.c2)))OR(vt0.c2)) AS REAL);
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))>(((rt0.c2)<(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c0 AS REAL)  NULLS LAST, (((0.21900484644110607)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((rt0.c1)))  NULLS FIRST, CAST(((((vt0.c2)AND(rt0.c2)))OR(vt0.c2)) AS REAL));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0 IN ()))>(((rt0.c2)<(rt0.c1))))) ORDER BY CAST(rt0.c0 AS REAL)  NULLS LAST, (((0.21900484644110607)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((rt0.c1)))  NULLS FIRST, CAST(((((vt0.c2)AND(rt0.c2)))OR(vt0.c2)) AS REAL);
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))>(((rt0.c2)<(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c0 AS REAL)  NULLS LAST, (((0.21900484644110607)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((rt0.c1)))  NULLS FIRST, CAST(((((vt0.c2)AND(rt0.c2)))OR(vt0.c2)) AS REAL));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0 IN ()))>(((rt0.c2)<(rt0.c1))))) ORDER BY CAST(rt0.c0 AS REAL)  NULLS LAST, (((0.21900484644110607)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((rt0.c1)))  NULLS FIRST, CAST(((((vt0.c2)AND(rt0.c2)))OR(vt0.c2)) AS REAL);
SELECT COUNT(*) FROM rt0 WHERE ('0.35439649231497905');
SELECT SUM(count) FROM (SELECT ALL (('0.35439649231497905') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('0.35439649231497905');
SELECT SUM(count) FROM (SELECT ALL (('0.35439649231497905') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('0.35439649231497905');
SELECT ALL * FROM rt0 WHERE ((((rt0.c3) NOTNULL) IN ())) ORDER BY rt0.c2 ASC, ((((rt0.c3)>(NULL)))>(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END))  NULLS LAST, ((CASE WHEN rt0.c1 THEN rt0.c4 WHEN 0x27ae370 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END)IS NOT(rt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) NOTNULL) IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC, ((((rt0.c3)>(NULL)))>(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END))  NULLS LAST, ((CASE WHEN rt0.c1 THEN rt0.c4 WHEN 0X27ae370 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END)IS NOT(rt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3) NOTNULL) IN ())) ORDER BY rt0.c2 ASC, ((((rt0.c3)>(NULL)))>(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END))  NULLS LAST, ((CASE WHEN rt0.c1 THEN rt0.c4 WHEN 0x27ae370 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END)IS NOT(rt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) NOTNULL) IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC, ((((rt0.c3)>(NULL)))>(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END))  NULLS LAST, ((CASE WHEN rt0.c1 THEN rt0.c4 WHEN 0X27ae370 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END)IS NOT(rt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3) NOTNULL) IN ())) ORDER BY rt0.c2 ASC, ((((rt0.c3)>(NULL)))>(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END))  NULLS LAST, ((CASE WHEN rt0.c1 THEN rt0.c4 WHEN 0x27ae370 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END)IS NOT(rt0.c0)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY ((((rt0.c0) ISNULL))<>((- (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) ISNULL))!=((- (rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY ((((rt0.c0) ISNULL))<>((- (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) ISNULL))!=((- (rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY ((((rt0.c0) ISNULL))<>((- (rt0.c1)))) ASC;
SELECT ALL * FROM rt0, vt0 WHERE ('') ORDER BY ((((vt0.c1)<(rt0.c4)))>=(((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c1)<(rt0.c4)))>=(((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt0.c2)))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ('') ORDER BY ((((vt0.c1)<(rt0.c4)))>=(((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c1)<(rt0.c4)))>=(((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt0.c2)))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ('') ORDER BY ((((vt0.c1)<(rt0.c4)))>=(((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt0.c2)))) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)>=(rt0.c3)) IN (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c3))))) ORDER BY x'', CAST((rt0.c4 IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT (((((rt0.c0)>=(rt0.c3)) IN (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY x'', CAST((rt0.c4 IN ()) AS REAL));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)>=(rt0.c3)) IN (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c3))))) ORDER BY x'', CAST((rt0.c4 IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT (((((rt0.c0)>=(rt0.c3)) IN (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY x'', CAST((rt0.c4 IN ()) AS REAL));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)>=(rt0.c3)) IN (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c3))))) ORDER BY x'', CAST((rt0.c4 IN ()) AS REAL);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2))) ISNULL));
SELECT * FROM rt0 WHERE ('159278680');
SELECT SUM(count) FROM (SELECT (('159278680') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('159278680');
SELECT SUM(count) FROM (SELECT (('159278680') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('159278680');
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((x'')OR(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'')OR(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((x'')OR(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'')OR(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((x'')OR(rt0.c2)) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (((NULL)||((rt0.c1 IN ())))) ORDER BY (- (0.291527527959889));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)||((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (- (0.291527527959889)));
SELECT COUNT(*) FROM rt0 WHERE (((NULL)||((rt0.c1 IN ())))) ORDER BY (- (0.291527527959889));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)||((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (- (0.291527527959889)));
SELECT COUNT(*) FROM rt0 WHERE (((NULL)||((rt0.c1 IN ())))) ORDER BY (- (0.291527527959889));
SELECT * FROM vt0 WHERE ('\nW') ORDER BY (((((NULL)>(vt0.c0)), ((vt0.c1)%(vt0.c2)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))<(((((vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c2)) AND ((NULL, vt0.c1, vt0.c1))), '!h<3R0(cC', CAST(vt0.c0 AS TEXT)))) DESC, vt0.c1 DESC, (('1084817474') NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (('\nW') IS TRUE)  as count FROM vt0 ORDER BY (((((NULL)>(vt0.c0)), ((vt0.c1)%(vt0.c2)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))<(((((vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c2)) AND ((NULL, vt0.c1, vt0.c1))), '!h<3R0(cC', CAST(vt0.c0 AS TEXT)))) DESC, vt0.c1 DESC, (('1084817474') NOTNULL));
SELECT * FROM vt0 WHERE ('\nW') ORDER BY (((((NULL)>(vt0.c0)), ((vt0.c1)%(vt0.c2)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))<(((((vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c2)) AND ((NULL, vt0.c1, vt0.c1))), '!h<3R0(cC', CAST(vt0.c0 AS TEXT)))) DESC, vt0.c1 DESC, (('1084817474') NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (('\nW') IS TRUE)  as count FROM vt0 ORDER BY (((((NULL)>(vt0.c0)), ((vt0.c1)%(vt0.c2)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))<(((((vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c2)) AND ((NULL, vt0.c1, vt0.c1))), '!h<3R0(cC', CAST(vt0.c0 AS TEXT)))) DESC, vt0.c1 DESC, (('1084817474') NOTNULL));
SELECT * FROM vt0 WHERE ('\nW') ORDER BY (((((NULL)>(vt0.c0)), ((vt0.c1)%(vt0.c2)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))<(((((vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c2)) AND ((NULL, vt0.c1, vt0.c1))), '!h<3R0(cC', CAST(vt0.c0 AS TEXT)))) DESC, vt0.c1 DESC, (('1084817474') NOTNULL);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)LIKE(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)LIKE(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)LIKE(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)LIKE(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)LIKE(vt0.c0)) AS BLOB));
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c3)OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((rt0.c2)AND(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((rt0.c2)AND(vt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c3)OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((rt0.c2)AND(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((rt0.c2)AND(vt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c3)OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((rt0.c2)AND(vt0.c2)))));
SELECT * FROM vt0, rt0 WHERE (((rt0.c0) NOT BETWEEN (x'') AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c3))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c0) NOT BETWEEN (x'') AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c3))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c0) NOT BETWEEN (x'') AND (rt0.c3)));
SELECT * FROM rt0 CROSS JOIN vt0 ON CASE WHEN rt0.c4 THEN ((rt0.c4) NOTNULL) WHEN ((((((((vt0.c1)OR(vt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)) THEN (- (vt0.c2)) WHEN (- (0.2046869053987933)) THEN ((((rt0.c4)AND(vt0.c1)))OR(rt0.c3)) WHEN '' THEN TRIM(DISTINCT rt0.c0, rt0.c2) WHEN CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END THEN (((('HN')OR(rt0.c3)))OR(vt0.c2)) END WHERE ((((((((rt0.c2))==((rt0.c2))))AND(((rt0.c4)||(rt0.c1)))))AND((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((rt0.c4)))))) ORDER BY ((rt0.c2 IN (vt0.c1, rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2))=((rt0.c2))))AND(((rt0.c4)||(rt0.c1)))))AND((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((rt0.c4)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE WHEN rt0.c4 THEN ((rt0.c4) NOTNULL) WHEN ((((((((vt0.c1)OR(vt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)) THEN (- (vt0.c2)) WHEN (- (0.2046869053987933)) THEN ((((rt0.c4)AND(vt0.c1)))OR(rt0.c3)) WHEN '' THEN TRIM(DISTINCT rt0.c0, rt0.c2) WHEN CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END THEN (((('HN')OR(rt0.c3)))OR(vt0.c2)) END ORDER BY ((rt0.c2 IN (vt0.c1, rt0.c2)) IN ()));
SELECT * FROM rt0 CROSS JOIN vt0 ON CASE WHEN rt0.c4 THEN ((rt0.c4) NOTNULL) WHEN ((((((((vt0.c1)OR(vt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)) THEN (- (vt0.c2)) WHEN (- (0.2046869053987933)) THEN ((((rt0.c4)AND(vt0.c1)))OR(rt0.c3)) WHEN '' THEN TRIM(DISTINCT rt0.c0, rt0.c2) WHEN CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END THEN (((('HN')OR(rt0.c3)))OR(vt0.c2)) END WHERE ((((((((rt0.c2))==((rt0.c2))))AND(((rt0.c4)||(rt0.c1)))))AND((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((rt0.c4)))))) ORDER BY ((rt0.c2 IN (vt0.c1, rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2))=((rt0.c2))))AND(((rt0.c4)||(rt0.c1)))))AND((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((rt0.c4)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE WHEN rt0.c4 THEN ((rt0.c4) NOTNULL) WHEN ((((((((vt0.c1)OR(vt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)) THEN (- (vt0.c2)) WHEN (- (0.2046869053987933)) THEN ((((rt0.c4)AND(vt0.c1)))OR(rt0.c3)) WHEN '' THEN TRIM(DISTINCT rt0.c0, rt0.c2) WHEN CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END THEN (((('HN')OR(rt0.c3)))OR(vt0.c2)) END ORDER BY ((rt0.c2 IN (vt0.c1, rt0.c2)) IN ()));
SELECT * FROM rt0 CROSS JOIN vt0 ON CASE WHEN rt0.c4 THEN ((rt0.c4) NOTNULL) WHEN ((((((((vt0.c1)OR(vt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)) THEN (- (vt0.c2)) WHEN (- (0.2046869053987933)) THEN ((((rt0.c4)AND(vt0.c1)))OR(rt0.c3)) WHEN '' THEN TRIM(DISTINCT rt0.c0, rt0.c2) WHEN CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END THEN (((('HN')OR(rt0.c3)))OR(vt0.c2)) END WHERE ((((((((rt0.c2))==((rt0.c2))))AND(((rt0.c4)||(rt0.c1)))))AND((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((rt0.c4)))))) ORDER BY ((rt0.c2 IN (vt0.c1, rt0.c2)) IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE COALESCE(DISTINCT vt0.c1, vt0.c0, vt0.c0, vt0.c1)  WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c2)) THEN CAST(vt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(DISTINCT vt0.c1, vt0.c0, vt0.c0, vt0.c1)  WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c2)) THEN CAST(vt0.c1 AS REAL) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE COALESCE(DISTINCT vt0.c1, vt0.c0, vt0.c0, vt0.c1)  WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c2)) THEN CAST(vt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(DISTINCT vt0.c1, vt0.c0, vt0.c0, vt0.c1)  WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c2)) THEN CAST(vt0.c1 AS REAL) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE COALESCE(DISTINCT vt0.c1, vt0.c0, vt0.c0, vt0.c1)  WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c2)) THEN CAST(vt0.c1 AS REAL) END);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(0xffffffffaec3a224 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(0Xffffffffaec3a224 AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(0xffffffffaec3a224 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(0Xffffffffaec3a224 AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(0xffffffffaec3a224 AS INTEGER));
SELECT * FROM vt0, rt0 WHERE (ABS(CAST(x'' AS INTEGER))) ORDER BY ((((rt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)))>=(LIKELIHOOD(rt0.c2, 0.37506565198011266))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(x'' AS INTEGER))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)))>=(LIKELIHOOD(rt0.c2, 0.37506565198011266))) DESC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (ABS(CAST(x'' AS INTEGER))) ORDER BY ((((rt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)))>=(LIKELIHOOD(rt0.c2, 0.37506565198011266))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(x'' AS INTEGER))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)))>=(LIKELIHOOD(rt0.c2, 0.37506565198011266))) DESC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (ABS(CAST(x'' AS INTEGER))) ORDER BY ((((rt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)))>=(LIKELIHOOD(rt0.c2, 0.37506565198011266))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c1)>(vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)>(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c1)>(vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)>(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c1)>(vt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((('-1399294261') NOT NULL)))) ORDER BY CAST(ABS(DISTINCT rt0.c3) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((~ ((('-1399294261') NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(ABS(DISTINCT rt0.c3) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((('-1399294261') NOT NULL)))) ORDER BY CAST(ABS(DISTINCT rt0.c3) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((~ ((('-1399294261') NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(ABS(DISTINCT rt0.c3) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((('-1399294261') NOT NULL)))) ORDER BY CAST(ABS(DISTINCT rt0.c3) AS NUMERIC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c1 AS REAL) COLLATE RTRIM WHERE (((((vt0.c0)>>(vt0.c2)))AND(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c2)))AND(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c1 AS REAL) COLLATE RTRIM);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c1 AS REAL) COLLATE RTRIM WHERE (((((vt0.c0)>>(vt0.c2)))AND(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c2)))AND(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c1 AS REAL) COLLATE RTRIM);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c1 AS REAL) COLLATE RTRIM WHERE (((((vt0.c0)>>(vt0.c2)))AND(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((((((((((((((((vt0.c1)OR(rt0.c2)))AND(rt0.c1)))AND(vt0.c2)))OR(x'')))AND(rt0.c2)))OR(vt0.c1)))AND(((vt0.c0) NOT NULL))))OR(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)))))OR(((-755327022) NOT BETWEEN (vt0.c2) AND (rt0.c2)))))OR(rt0.c4)))AND(rt0.c2 COLLATE NOCASE)))OR(((rt0.c0) IS TRUE))) WHERE ((((((((((vt0.c0 IN ()))OR(vt0.c1 COLLATE BINARY)))AND(CAST(rt0.c3 AS REAL))))OR(rt0.c1)))AND(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN ()))OR(vt0.c1 COLLATE BINARY)))AND(CAST(rt0.c3 AS REAL))))OR(rt0.c1)))AND(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((((((((((((((((vt0.c1)OR(rt0.c2)))AND(rt0.c1)))AND(vt0.c2)))OR(x'')))AND(rt0.c2)))OR(vt0.c1)))AND(((vt0.c0) NOT NULL))))OR(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)))))OR(((-755327022) NOT BETWEEN (vt0.c2) AND (rt0.c2)))))OR(rt0.c4)))AND(rt0.c2 COLLATE NOCASE)))OR(((rt0.c0) IS TRUE))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((((((((((((((((vt0.c1)OR(rt0.c2)))AND(rt0.c1)))AND(vt0.c2)))OR(x'')))AND(rt0.c2)))OR(vt0.c1)))AND(((vt0.c0) NOT NULL))))OR(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)))))OR(((-755327022) NOT BETWEEN (vt0.c2) AND (rt0.c2)))))OR(rt0.c4)))AND(rt0.c2 COLLATE NOCASE)))OR(((rt0.c0) IS TRUE))) WHERE ((((((((((vt0.c0 IN ()))OR(vt0.c1 COLLATE BINARY)))AND(CAST(rt0.c3 AS REAL))))OR(rt0.c1)))AND(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN ()))OR(vt0.c1 COLLATE BINARY)))AND(CAST(rt0.c3 AS REAL))))OR(rt0.c1)))AND(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((((((((((((((((vt0.c1)OR(rt0.c2)))AND(rt0.c1)))AND(vt0.c2)))OR(x'')))AND(rt0.c2)))OR(vt0.c1)))AND(((vt0.c0) NOT NULL))))OR(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)))))OR(((-755327022) NOT BETWEEN (vt0.c2) AND (rt0.c2)))))OR(rt0.c4)))AND(rt0.c2 COLLATE NOCASE)))OR(((rt0.c0) IS TRUE))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((((((((((((((((vt0.c1)OR(rt0.c2)))AND(rt0.c1)))AND(vt0.c2)))OR(x'')))AND(rt0.c2)))OR(vt0.c1)))AND(((vt0.c0) NOT NULL))))OR(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)))))OR(((-755327022) NOT BETWEEN (vt0.c2) AND (rt0.c2)))))OR(rt0.c4)))AND(rt0.c2 COLLATE NOCASE)))OR(((rt0.c0) IS TRUE))) WHERE ((((((((((vt0.c0 IN ()))OR(vt0.c1 COLLATE BINARY)))AND(CAST(rt0.c3 AS REAL))))OR(rt0.c1)))AND(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c1, -1280107617, vt0.c2)) BETWEEN ((rt0.c2, vt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c4, rt0.c2))) COLLATE RTRIM) ORDER BY rt0.c3 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1, -1280107617, vt0.c2)) BETWEEN ((rt0.c2, vt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c4, rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c3 ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c1, -1280107617, vt0.c2)) BETWEEN ((rt0.c2, vt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c4, rt0.c2))) COLLATE RTRIM) ORDER BY rt0.c3 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1, -1280107617, vt0.c2)) BETWEEN ((rt0.c2, vt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c4, rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c3 ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c1, -1280107617, vt0.c2)) BETWEEN ((rt0.c2, vt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c4, rt0.c2))) COLLATE RTRIM) ORDER BY rt0.c3 ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST((((rt0.c4))>=((rt0.c3))) AS TEXT) WHERE ((((rt0.c2)) BETWEEN (((+ (vt0.c0)))) AND ((rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN (((+ (vt0.c0)))) AND ((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST((((rt0.c4))>=((rt0.c3))) AS TEXT));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST((((rt0.c4))>=((rt0.c3))) AS TEXT) WHERE ((((rt0.c2)) BETWEEN (((+ (vt0.c0)))) AND ((rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN (((+ (vt0.c0)))) AND ((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST((((rt0.c4))>=((rt0.c3))) AS TEXT));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST((((rt0.c4))>=((rt0.c3))) AS TEXT) WHERE ((((rt0.c2)) BETWEEN (((+ (vt0.c0)))) AND ((rt0.c2 COLLATE NOCASE))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c2, vt0.c2, vt0.c1)) NOT BETWEEN (('-2112553100' COLLATE RTRIM, CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c4 END, (((vt0.c1)) BETWEEN ((rt0.c3)) AND ((vt0.c1))))) AND (((((rt0.c4))!=((rt0.c0))), ((vt0.c2) IS TRUE), ((((rt0.c2)OR(rt0.c1)))OR('1758839238'))))) WHERE (((((((x'')+(vt0.c0)))AND((((vt0.c2))<((rt0.c2))))))OR(((((rt0.c2)OR(vt0.c0)))AND(rt0.c2))))) ORDER BY 0.973347148860862 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')+(vt0.c0)))AND((((vt0.c2))<((rt0.c2))))))OR(((((rt0.c2)OR(vt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c2, vt0.c2, vt0.c1)) NOT BETWEEN (('-2112553100' COLLATE RTRIM, CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c4 END, (((vt0.c1)) BETWEEN ((rt0.c3)) AND ((vt0.c1))))) AND (((((rt0.c4))!=((rt0.c0))), ((vt0.c2) IS TRUE), ((((rt0.c2)OR(rt0.c1)))OR('1758839238'))))) ORDER BY 0.973347148860862 COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c2, vt0.c2, vt0.c1)) NOT BETWEEN (('-2112553100' COLLATE RTRIM, CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c4 END, (((vt0.c1)) BETWEEN ((rt0.c3)) AND ((vt0.c1))))) AND (((((rt0.c4))!=((rt0.c0))), ((vt0.c2) IS TRUE), ((((rt0.c2)OR(rt0.c1)))OR('1758839238'))))) WHERE (((((((x'')+(vt0.c0)))AND((((vt0.c2))<((rt0.c2))))))OR(((((rt0.c2)OR(vt0.c0)))AND(rt0.c2))))) ORDER BY 0.973347148860862 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')+(vt0.c0)))AND((((vt0.c2))<((rt0.c2))))))OR(((((rt0.c2)OR(vt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c2, vt0.c2, vt0.c1)) NOT BETWEEN (('-2112553100' COLLATE RTRIM, CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c4 END, (((vt0.c1)) BETWEEN ((rt0.c3)) AND ((vt0.c1))))) AND (((((rt0.c4))!=((rt0.c0))), ((vt0.c2) IS TRUE), ((((rt0.c2)OR(rt0.c1)))OR('1758839238'))))) ORDER BY 0.973347148860862 COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c2, vt0.c2, vt0.c1)) NOT BETWEEN (('-2112553100' COLLATE RTRIM, CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c4 END, (((vt0.c1)) BETWEEN ((rt0.c3)) AND ((vt0.c1))))) AND (((((rt0.c4))!=((rt0.c0))), ((vt0.c2) IS TRUE), ((((rt0.c2)OR(rt0.c1)))OR('1758839238'))))) WHERE (((((((x'')+(vt0.c0)))AND((((vt0.c2))<((rt0.c2))))))OR(((((rt0.c2)OR(vt0.c0)))AND(rt0.c2))))) ORDER BY 0.973347148860862 COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c4) NOTNULL) IN ()) WHERE (CASE WHEN (((rt0.c0, rt0.c2, rt0.c1))=((vt0.c2, '-848238090', rt0.c3))) THEN QUOTE(vt0.c2) WHEN (rt0.c4 IN ()) THEN (vt0.c1 IN ()) WHEN '-2028777698' THEN ((rt0.c1)<=(rt0.c2)) WHEN UPPER(rt0.c1) THEN CHANGES() WHEN (((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) THEN ((vt0.c1) NOTNULL) ELSE vt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c0, rt0.c2, rt0.c1))=((vt0.c2, '-848238090', rt0.c3))) THEN QUOTE(vt0.c2) WHEN (rt0.c4 IN ()) THEN (vt0.c1 IN ()) WHEN '-2028777698' THEN ((rt0.c1)<=(rt0.c2)) WHEN UPPER(rt0.c1) THEN CHANGES() WHEN (((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) THEN ((vt0.c1) NOTNULL) ELSE vt0.c2 END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c4) NOTNULL) IN ()));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c4) NOTNULL) IN ()) WHERE (CASE WHEN (((rt0.c0, rt0.c2, rt0.c1))=((vt0.c2, '-848238090', rt0.c3))) THEN QUOTE(vt0.c2) WHEN (rt0.c4 IN ()) THEN (vt0.c1 IN ()) WHEN '-2028777698' THEN ((rt0.c1)<=(rt0.c2)) WHEN UPPER(rt0.c1) THEN CHANGES() WHEN (((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) THEN ((vt0.c1) NOTNULL) ELSE vt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c0, rt0.c2, rt0.c1))=((vt0.c2, '-848238090', rt0.c3))) THEN QUOTE(vt0.c2) WHEN (rt0.c4 IN ()) THEN (vt0.c1 IN ()) WHEN '-2028777698' THEN ((rt0.c1)<=(rt0.c2)) WHEN UPPER(rt0.c1) THEN CHANGES() WHEN (((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) THEN ((vt0.c1) NOTNULL) ELSE vt0.c2 END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c4) NOTNULL) IN ()));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c4) NOTNULL) IN ()) WHERE (CASE WHEN (((rt0.c0, rt0.c2, rt0.c1))=((vt0.c2, '-848238090', rt0.c3))) THEN QUOTE(vt0.c2) WHEN (rt0.c4 IN ()) THEN (vt0.c1 IN ()) WHEN '-2028777698' THEN ((rt0.c1)<=(rt0.c2)) WHEN UPPER(rt0.c1) THEN CHANGES() WHEN (((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) THEN ((vt0.c1) NOTNULL) ELSE vt0.c2 END);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c2, rt0.c0, rt0.c0))<=((rt0.c3, rt0.c0, rt0.c4, rt0.c2, rt0.c4)))) IS FALSE)) ORDER BY ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 END)IS(((0X7daa5612) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c2, rt0.c2, rt0.c0, rt0.c0))<=((rt0.c3, rt0.c0, rt0.c4, rt0.c2, rt0.c4)))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 END)IS(((0X7daa5612) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c2, rt0.c0, rt0.c0))<=((rt0.c3, rt0.c0, rt0.c4, rt0.c2, rt0.c4)))) IS FALSE)) ORDER BY ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 END)IS(((0X7daa5612) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c2, rt0.c2, rt0.c0, rt0.c0))<=((rt0.c3, rt0.c0, rt0.c4, rt0.c2, rt0.c4)))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 END)IS(((0X7daa5612) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c2, rt0.c0, rt0.c0))<=((rt0.c3, rt0.c0, rt0.c4, rt0.c2, rt0.c4)))) IS FALSE)) ORDER BY ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 END)IS(((0X7daa5612) NOT NULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (highlight((('YÍûù') BETWEEN (rt0.c0) AND (rt0.c4)), ((((rt0.c3)AND(rt0.c4)))AND(rt0.c3)), ((rt0.c4)GLOB(rt0.c1)), ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((highlight((('YÍûù') BETWEEN (rt0.c0) AND (rt0.c4)), ((((rt0.c3)AND(rt0.c4)))AND(rt0.c3)), ((rt0.c4)GLOB(rt0.c1)), ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (highlight((('YÍûù') BETWEEN (rt0.c0) AND (rt0.c4)), ((((rt0.c3)AND(rt0.c4)))AND(rt0.c3)), ((rt0.c4)GLOB(rt0.c1)), ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((highlight((('YÍûù') BETWEEN (rt0.c0) AND (rt0.c4)), ((((rt0.c3)AND(rt0.c4)))AND(rt0.c3)), ((rt0.c4)GLOB(rt0.c1)), ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((x'997ef530')|(vt0.c1))) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((((vt0.c1, vt0.c2, vt0.c0)) BETWEEN ((vt0.c2, vt0.c2, vt0.c2)) AND ((vt0.c2, vt0.c1, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'997ef530')|(vt0.c1))) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((((vt0.c1, vt0.c2, vt0.c0)) BETWEEN ((vt0.c2, vt0.c2, vt0.c2)) AND ((vt0.c2, vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((x'997ef530')|(vt0.c1))) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((((vt0.c1, vt0.c2, vt0.c0)) BETWEEN ((vt0.c2, vt0.c2, vt0.c2)) AND ((vt0.c2, vt0.c1, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'997ef530')|(vt0.c1))) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((((vt0.c1, vt0.c2, vt0.c0)) BETWEEN ((vt0.c2, vt0.c2, vt0.c2)) AND ((vt0.c2, vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((x'997ef530')|(vt0.c1))) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((((vt0.c1, vt0.c2, vt0.c0)) BETWEEN ((vt0.c2, vt0.c2, vt0.c2)) AND ((vt0.c2, vt0.c1, vt0.c1))))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN ()))<<(0.6395642594177359)));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))<<(0.6395642594177359))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN ()))<<(0.6395642594177359)));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))<<(0.6395642594177359))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN ()))<<(0.6395642594177359)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)||(vt0.c2)))LIKE((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)||(vt0.c2)))LIKE((+ (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)||(vt0.c2)))LIKE((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)||(vt0.c2)))LIKE((+ (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)||(vt0.c2)))LIKE((+ (rt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((- (0Xffffffffce2a2474)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (0Xffffffffce2a2474)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (0Xffffffffce2a2474)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (0Xffffffffce2a2474)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (0Xffffffffce2a2474)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1)>>(0xffffffffb3f5270b)))>>('~|\')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>>(0xffffffffb3f5270b)))>>('~|\'))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1)>>(0xffffffffb3f5270b)))>>('~|\')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>>(0xffffffffb3f5270b)))>>('~|\'))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1)>>(0xffffffffb3f5270b)))>>('~|\')));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CASE WHEN rt0.c4 THEN vt0.c2 WHEN '' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END) BETWEEN (vt0.c0) AND ('456986837')));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c4 THEN vt0.c2 WHEN '' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END) BETWEEN (vt0.c0) AND ('456986837'))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CASE WHEN rt0.c4 THEN vt0.c2 WHEN '' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END) BETWEEN (vt0.c0) AND ('456986837')));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c4 THEN vt0.c2 WHEN '' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END) BETWEEN (vt0.c0) AND ('456986837'))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CASE WHEN rt0.c4 THEN vt0.c2 WHEN '' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END) BETWEEN (vt0.c0) AND ('456986837')));
SELECT COUNT(*) FROM rt0 WHERE (((x'10f2' IN ()) IN ((rt0.c4 IN ()), (((rt0.c1))>=((rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((x'10f2' IN ()) IN ((rt0.c4 IN ()), (((rt0.c1))>=((rt0.c4)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((x'10f2' IN ()) IN ((rt0.c4 IN ()), (((rt0.c1))>=((rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((x'10f2' IN ()) IN ((rt0.c4 IN ()), (((rt0.c1))>=((rt0.c4)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((x'10f2' IN ()) IN ((rt0.c4 IN ()), (((rt0.c1))>=((rt0.c4))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(((vt0.c0)OR(vt0.c1)))) ORDER BY (((vt0.c1) BETWEEN (vt0.c1) AND ('bq')) IN ()) ASC  NULLS FIRST, (((~ (vt0.c0))) NOT BETWEEN (((vt0.c0)*(vt0.c2))) AND ((vt0.c2 IN ()))) ASC, ((vt0.c1 IN ()) IN (vt0.c0 COLLATE NOCASE))  NULLS LAST, ((((vt0.c1)GLOB(vt0.c0))) BETWEEN (((vt0.c0)>=(vt0.c1))) AND (json_array_length(vt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((vt0.c0)OR(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) BETWEEN (vt0.c1) AND ('bq')) IN ()) ASC  NULLS FIRST, (((~ (vt0.c0))) NOT BETWEEN (((vt0.c0)*(vt0.c2))) AND ((vt0.c2 IN ()))) ASC, ((vt0.c1 IN ()) IN (vt0.c0 COLLATE NOCASE))  NULLS LAST, ((((vt0.c1)GLOB(vt0.c0))) BETWEEN (((vt0.c0)>=(vt0.c1))) AND (json_array_length(vt0.c2))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(((vt0.c0)OR(vt0.c1)))) ORDER BY (((vt0.c1) BETWEEN (vt0.c1) AND ('bq')) IN ()) ASC  NULLS FIRST, (((~ (vt0.c0))) NOT BETWEEN (((vt0.c0)*(vt0.c2))) AND ((vt0.c2 IN ()))) ASC, ((vt0.c1 IN ()) IN (vt0.c0 COLLATE NOCASE))  NULLS LAST, ((((vt0.c1)GLOB(vt0.c0))) BETWEEN (((vt0.c0)>=(vt0.c1))) AND (json_array_length(vt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((vt0.c0)OR(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) BETWEEN (vt0.c1) AND ('bq')) IN ()) ASC  NULLS FIRST, (((~ (vt0.c0))) NOT BETWEEN (((vt0.c0)*(vt0.c2))) AND ((vt0.c2 IN ()))) ASC, ((vt0.c1 IN ()) IN (vt0.c0 COLLATE NOCASE))  NULLS LAST, ((((vt0.c1)GLOB(vt0.c0))) BETWEEN (((vt0.c0)>=(vt0.c1))) AND (json_array_length(vt0.c2))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((~ (((vt0.c2) NOT NULL)))) ORDER BY ((CAST('EA' AS REAL)) NOT BETWEEN (0.08913488282635484) AND (CASE vt0.c1  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)) DESC, CAST(((rt0.c1)<=(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST('EA' AS REAL)) NOT BETWEEN (0.08913488282635484) AND (CASE vt0.c1  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)) DESC, CAST(((rt0.c1)<=(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((~ (((vt0.c2) NOT NULL)))) ORDER BY ((CAST('EA' AS REAL)) NOT BETWEEN (0.08913488282635484) AND (CASE vt0.c1  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)) DESC, CAST(((rt0.c1)<=(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST('EA' AS REAL)) NOT BETWEEN (0.08913488282635484) AND (CASE vt0.c1  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)) DESC, CAST(((rt0.c1)<=(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((~ (((vt0.c2) NOT NULL)))) ORDER BY ((CAST('EA' AS REAL)) NOT BETWEEN (0.08913488282635484) AND (CASE vt0.c1  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)) DESC, CAST(((rt0.c1)<=(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((vt0.c0)>>(vt0.c0))  WHEN (((rt0.c1))>((vt0.c1))) THEN rt0.c4 END) ORDER BY (((rt0.c3 IN ())) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)>>(vt0.c0))  WHEN (((rt0.c1))>((vt0.c1))) THEN rt0.c4 END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c3 IN ())) NOT NULL) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((vt0.c0)>>(vt0.c0))  WHEN (((rt0.c1))>((vt0.c1))) THEN rt0.c4 END) ORDER BY (((rt0.c3 IN ())) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)>>(vt0.c0))  WHEN (((rt0.c1))>((vt0.c1))) THEN rt0.c4 END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c3 IN ())) NOT NULL) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((vt0.c0)>>(vt0.c0))  WHEN (((rt0.c1))>((vt0.c1))) THEN rt0.c4 END) ORDER BY (((rt0.c3 IN ())) NOT NULL) ASC;
SELECT ALL * FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('');
SELECT * FROM vt0, rt0 WHERE (((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))AND(((0.6197011218359669) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(rt0.c2 COLLATE RTRIM)))AND(UPPER(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))AND(((0.6197011218359669) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(rt0.c2 COLLATE RTRIM)))AND(UPPER(vt0.c2)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))AND(((0.6197011218359669) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(rt0.c2 COLLATE RTRIM)))AND(UPPER(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))AND(((0.6197011218359669) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(rt0.c2 COLLATE RTRIM)))AND(UPPER(vt0.c2)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))AND(((0.6197011218359669) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(rt0.c2 COLLATE RTRIM)))AND(UPPER(vt0.c2))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1 COLLATE BINARY)AND(((vt0.c0)&(vt0.c2)))))OR(((vt0.c0)<=(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 COLLATE BINARY)AND(((vt0.c0)&(vt0.c2)))))OR(((vt0.c0)<=(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1 COLLATE BINARY)AND(((vt0.c0)&(vt0.c2)))))OR(((vt0.c0)<=(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 COLLATE BINARY)AND(((vt0.c0)&(vt0.c2)))))OR(((vt0.c0)<=(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1 COLLATE BINARY)AND(((vt0.c0)&(vt0.c2)))))OR(((vt0.c0)<=(vt0.c2)))));
SELECT * FROM rt0, vt0 WHERE (((IFNULL(vt0.c0, vt0.c1)) BETWEEN (CAST(rt0.c4 AS BLOB)) AND ('lsCz\rF]*' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(vt0.c0, vt0.c1)) BETWEEN (CAST(rt0.c4 AS BLOB)) AND ('lsCz\rF]*' COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((IFNULL(vt0.c0, vt0.c1)) BETWEEN (CAST(rt0.c4 AS BLOB)) AND ('lsCz\rF]*' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(vt0.c0, vt0.c1)) BETWEEN (CAST(rt0.c4 AS BLOB)) AND ('lsCz\rF]*' COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((IFNULL(vt0.c0, vt0.c1)) BETWEEN (CAST(rt0.c4 AS BLOB)) AND ('lsCz\rF]*' COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY ((CAST(rt0.c3 AS REAL)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c3 AS REAL)) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY ((CAST(rt0.c3 AS REAL)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c3 AS REAL)) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY ((CAST(rt0.c3 AS REAL)) ISNULL);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON CASE 0.4106682445461468  WHEN (NOT (rt0.c4)) THEN rt0.c0 COLLATE NOCASE ELSE vt0.c1 COLLATE NOCASE END WHERE (CASE ((rt0.c0) NOTNULL)  WHEN ((rt0.c3) IS FALSE) THEN (rt0.c3 IN ()) END) ORDER BY ((((rt0.c4)<(rt0.c0)))&(TYPEOF(DISTINCT rt0.c4))) DESC, ((rt0.c4) NOTNULL) COLLATE NOCASE DESC  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((rt0.c3) ISNULL))) AND ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) NOTNULL)  WHEN ((rt0.c3) IS FALSE) THEN (rt0.c3 IN ()) END) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE 0.4106682445461468  WHEN (NOT (rt0.c4)) THEN rt0.c0 COLLATE NOCASE ELSE vt0.c1 COLLATE NOCASE END ORDER BY ((((rt0.c4)<(rt0.c0)))&(TYPEOF(DISTINCT rt0.c4))) DESC, ((rt0.c4) NOTNULL) COLLATE NOCASE DESC  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((rt0.c3) ISNULL))) AND ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON CASE 0.4106682445461468  WHEN (NOT (rt0.c4)) THEN rt0.c0 COLLATE NOCASE ELSE vt0.c1 COLLATE NOCASE END WHERE (CASE ((rt0.c0) NOTNULL)  WHEN ((rt0.c3) IS FALSE) THEN (rt0.c3 IN ()) END) ORDER BY ((((rt0.c4)<(rt0.c0)))&(TYPEOF(DISTINCT rt0.c4))) DESC, ((rt0.c4) NOTNULL) COLLATE NOCASE DESC  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((rt0.c3) ISNULL))) AND ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) NOTNULL)  WHEN ((rt0.c3) IS FALSE) THEN (rt0.c3 IN ()) END) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE 0.4106682445461468  WHEN (NOT (rt0.c4)) THEN rt0.c0 COLLATE NOCASE ELSE vt0.c1 COLLATE NOCASE END ORDER BY ((((rt0.c4)<(rt0.c0)))&(TYPEOF(DISTINCT rt0.c4))) DESC, ((rt0.c4) NOTNULL) COLLATE NOCASE DESC  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((rt0.c3) ISNULL))) AND ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON CASE 0.4106682445461468  WHEN (NOT (rt0.c4)) THEN rt0.c0 COLLATE NOCASE ELSE vt0.c1 COLLATE NOCASE END WHERE (CASE ((rt0.c0) NOTNULL)  WHEN ((rt0.c3) IS FALSE) THEN (rt0.c3 IN ()) END) ORDER BY ((((rt0.c4)<(rt0.c0)))&(TYPEOF(DISTINCT rt0.c4))) DESC, ((rt0.c4) NOTNULL) COLLATE NOCASE DESC  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((rt0.c3) ISNULL))) AND ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c4 THEN ((rt0.c4)%(rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c4 THEN ((rt0.c4)%(rt0.c4)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c4 THEN ((rt0.c4)%(rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c4 THEN ((rt0.c4)%(rt0.c4)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c4 THEN ((rt0.c4)%(rt0.c4)) END);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((CAST(rt0.c2 AS TEXT))OR(rt0.c3 COLLATE RTRIM)))AND((((rt0.c1)) NOT BETWEEN (('')) AND ((-7.55327022E8)))))) ORDER BY (('352910642') NOT BETWEEN (((rt0.c0) IS TRUE)) AND (CAST(vt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS TEXT))OR(rt0.c3 COLLATE RTRIM)))AND((((rt0.c1)) NOT BETWEEN (('')) AND ((-7.55327022E8)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (('352910642') NOT BETWEEN (((rt0.c0) IS TRUE)) AND (CAST(vt0.c0 AS INTEGER))) DESC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((CAST(rt0.c2 AS TEXT))OR(rt0.c3 COLLATE RTRIM)))AND((((rt0.c1)) NOT BETWEEN (('')) AND ((-7.55327022E8)))))) ORDER BY (('352910642') NOT BETWEEN (((rt0.c0) IS TRUE)) AND (CAST(vt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS TEXT))OR(rt0.c3 COLLATE RTRIM)))AND((((rt0.c1)) NOT BETWEEN (('')) AND ((-7.55327022E8)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (('352910642') NOT BETWEEN (((rt0.c0) IS TRUE)) AND (CAST(vt0.c0 AS INTEGER))) DESC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((CAST(rt0.c2 AS TEXT))OR(rt0.c3 COLLATE RTRIM)))AND((((rt0.c1)) NOT BETWEEN (('')) AND ((-7.55327022E8)))))) ORDER BY (('352910642') NOT BETWEEN (((rt0.c0) IS TRUE)) AND (CAST(vt0.c0 AS INTEGER))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c2 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (vt0.c1);
SELECT ALL * FROM rt0, vt0 WHERE (((-83156136) NOT BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((-83156136) NOT BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((-83156136) NOT BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((-83156136) NOT BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((-83156136) NOT BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)<=((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)<=((- (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)<=((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)<=((- (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)<=((- (vt0.c1)))));
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c4 IN (rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c4 IN (rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c4 IN (rt0.c1))) NOTNULL));
SELECT * FROM vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((LIKE(0.7437259407866912, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((LIKE(0.7437259407866912, vt0.c0) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((LIKE(0.7437259407866912, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((LIKE(0.7437259407866912, vt0.c0) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((LIKE(0.7437259407866912, vt0.c0) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(x'af5d' AS BLOB)) ORDER BY NULL DESC  NULLS LAST, -1.4017155E7 ASC, (((((rt0.c1) IS TRUE), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1)), ((rt0.c2)/(rt0.c0))))>=((((rt0.c4) IS FALSE), ((rt0.c2) ISNULL), (NOT (rt0.c3))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'af5d' AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC  NULLS LAST, -1.4017155E7 ASC, (((((rt0.c1) IS TRUE), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1)), ((rt0.c2)/(rt0.c0))))>=((((rt0.c4) IS FALSE), ((rt0.c2) ISNULL), (NOT (rt0.c3))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(x'af5d' AS BLOB)) ORDER BY NULL DESC  NULLS LAST, -1.4017155E7 ASC, (((((rt0.c1) IS TRUE), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1)), ((rt0.c2)/(rt0.c0))))>=((((rt0.c4) IS FALSE), ((rt0.c2) ISNULL), (NOT (rt0.c3))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'af5d' AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC  NULLS LAST, -1.4017155E7 ASC, (((((rt0.c1) IS TRUE), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1)), ((rt0.c2)/(rt0.c0))))>=((((rt0.c4) IS FALSE), ((rt0.c2) ISNULL), (NOT (rt0.c3))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(x'af5d' AS BLOB)) ORDER BY NULL DESC  NULLS LAST, -1.4017155E7 ASC, (((((rt0.c1) IS TRUE), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1)), ((rt0.c2)/(rt0.c0))))>=((((rt0.c4) IS FALSE), ((rt0.c2) ISNULL), (NOT (rt0.c3))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'1d9d') ORDER BY CAST(CAST(vt0.c1 AS NUMERIC) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'1d9d') IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(CAST(vt0.c1 AS NUMERIC) AS BLOB) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'1d9d') ORDER BY CAST(CAST(vt0.c1 AS NUMERIC) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'1d9d') IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(CAST(vt0.c1 AS NUMERIC) AS BLOB) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'1d9d') ORDER BY CAST(CAST(vt0.c1 AS NUMERIC) AS BLOB) ASC  NULLS FIRST;
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CASE ((rt0.c3)>>(rt0.c1))  WHEN rt0.c4 THEN ((vt0.c1) NOT NULL) END WHERE (((rt0.c3) IS TRUE)) ORDER BY (('')LIKE(rt0.c0)), (~ (vt0.c1)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) IS TRUE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE ((rt0.c3)>>(rt0.c1))  WHEN rt0.c4 THEN ((vt0.c1) NOT NULL) END ORDER BY (('')LIKE(rt0.c0)), (~ (vt0.c1)) COLLATE NOCASE ASC);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CASE ((rt0.c3)>>(rt0.c1))  WHEN rt0.c4 THEN ((vt0.c1) NOT NULL) END WHERE (((rt0.c3) IS TRUE)) ORDER BY (('')LIKE(rt0.c0)), (~ (vt0.c1)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) IS TRUE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE ((rt0.c3)>>(rt0.c1))  WHEN rt0.c4 THEN ((vt0.c1) NOT NULL) END ORDER BY (('')LIKE(rt0.c0)), (~ (vt0.c1)) COLLATE NOCASE ASC);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CASE ((rt0.c3)>>(rt0.c1))  WHEN rt0.c4 THEN ((vt0.c1) NOT NULL) END WHERE (((rt0.c3) IS TRUE)) ORDER BY (('')LIKE(rt0.c0)), (~ (vt0.c1)) COLLATE NOCASE ASC;
SELECT ALL * FROM rt0, vt0 WHERE ((((('0d6Ó£°')OR(CASE vt0.c1  WHEN rt0.c4 THEN vt0.c1 ELSE vt0.c0 END)))AND(((vt0.c0) IS FALSE)))) ORDER BY rt0.c1 ASC  NULLS LAST, ((((rt0.c2) NOTNULL))=(((vt0.c2)-(''))))  NULLS FIRST, rt0.c4 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('0d6Ó£°')OR(CASE vt0.c1  WHEN rt0.c4 THEN vt0.c1 ELSE vt0.c0 END)))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1 ASC  NULLS LAST, ((((rt0.c2) NOTNULL))=(((vt0.c2)-(''))))  NULLS FIRST, rt0.c4 DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((((('0d6Ó£°')OR(CASE vt0.c1  WHEN rt0.c4 THEN vt0.c1 ELSE vt0.c0 END)))AND(((vt0.c0) IS FALSE)))) ORDER BY rt0.c1 ASC  NULLS LAST, ((((rt0.c2) NOTNULL))=(((vt0.c2)-(''))))  NULLS FIRST, rt0.c4 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('0d6Ó£°')OR(CASE vt0.c1  WHEN rt0.c4 THEN vt0.c1 ELSE vt0.c0 END)))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1 ASC  NULLS LAST, ((((rt0.c2) NOTNULL))=(((vt0.c2)-(''))))  NULLS FIRST, rt0.c4 DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((((('0d6Ó£°')OR(CASE vt0.c1  WHEN rt0.c4 THEN vt0.c1 ELSE vt0.c0 END)))AND(((vt0.c0) IS FALSE)))) ORDER BY rt0.c1 ASC  NULLS LAST, ((((rt0.c2) NOTNULL))=(((vt0.c2)-(''))))  NULLS FIRST, rt0.c4 DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((- (rt0.c4)))AND((rt0.c1 IN ())))) ORDER BY vt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c4)))AND((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c2  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((- (rt0.c4)))AND((rt0.c1 IN ())))) ORDER BY vt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c4)))AND((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c2  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((- (rt0.c4)))AND((rt0.c1 IN ())))) ORDER BY vt0.c2  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (CAST(vt0.c0 AS BLOB)) ORDER BY SUBSTR(((rt0.c2) NOTNULL), CAST(vt0.c1 AS NUMERIC))  NULLS LAST, (((NOT (vt0.c1)))<('JB<''+\r ')) DESC  NULLS LAST, (((rt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)) IN (CASE WHEN vt0.c0 THEN NULL END)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY SUBSTR(((rt0.c2) NOTNULL), CAST(vt0.c1 AS NUMERIC))  NULLS LAST, (((NOT (vt0.c1)))<('JB<''+\r ')) DESC  NULLS LAST, (((rt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)) IN (CASE WHEN vt0.c0 THEN NULL END)) DESC);
SELECT * FROM vt0, rt0 WHERE (CAST(vt0.c0 AS BLOB)) ORDER BY SUBSTR(((rt0.c2) NOTNULL), CAST(vt0.c1 AS NUMERIC))  NULLS LAST, (((NOT (vt0.c1)))<('JB<''+\r ')) DESC  NULLS LAST, (((rt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)) IN (CASE WHEN vt0.c0 THEN NULL END)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY SUBSTR(((rt0.c2) NOTNULL), CAST(vt0.c1 AS NUMERIC))  NULLS LAST, (((NOT (vt0.c1)))<('JB<''+\r ')) DESC  NULLS LAST, (((rt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)) IN (CASE WHEN vt0.c0 THEN NULL END)) DESC);
SELECT * FROM vt0, rt0 WHERE (CAST(vt0.c0 AS BLOB)) ORDER BY SUBSTR(((rt0.c2) NOTNULL), CAST(vt0.c1 AS NUMERIC))  NULLS LAST, (((NOT (vt0.c1)))<('JB<''+\r ')) DESC  NULLS LAST, (((rt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)) IN (CASE WHEN vt0.c0 THEN NULL END)) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0) IS FALSE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE)) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0) IS FALSE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE)) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0) IS FALSE)) ISNULL));
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))OR(x'')))AND(vt0.c1)))OR(vt0.c1)))||((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c1)))OR(x'')))AND(vt0.c1)))OR(vt0.c1)))||((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))OR(x'')))AND(vt0.c1)))OR(vt0.c1)))||((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c1)))OR(x'')))AND(vt0.c1)))OR(vt0.c1)))||((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))OR(x'')))AND(vt0.c1)))OR(vt0.c1)))||((vt0.c1 IN ()))));
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))+(CAST(rt0.c3 AS REAL))) DESC  NULLS FIRST, ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))IS NOT(((((rt0.c4)OR(rt0.c4)))OR(rt0.c0)))), ((rt0.c4) NOT NULL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))+(CAST(rt0.c3 AS REAL))) DESC  NULLS FIRST, ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))IS NOT(((((rt0.c4)OR(rt0.c4)))OR(rt0.c0)))), ((rt0.c4) NOT NULL) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))+(CAST(rt0.c3 AS REAL))) DESC  NULLS FIRST, ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))IS NOT(((((rt0.c4)OR(rt0.c4)))OR(rt0.c0)))), ((rt0.c4) NOT NULL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))+(CAST(rt0.c3 AS REAL))) DESC  NULLS FIRST, ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))IS NOT(((((rt0.c4)OR(rt0.c4)))OR(rt0.c0)))), ((rt0.c4) NOT NULL) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))+(CAST(rt0.c3 AS REAL))) DESC  NULLS FIRST, ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))IS NOT(((((rt0.c4)OR(rt0.c4)))OR(rt0.c0)))), ((rt0.c4) NOT NULL) COLLATE RTRIM;
SELECT * FROM rt0 WHERE ((UPPER(DISTINCT rt0.c4) IN ()));
SELECT SUM(count) FROM (SELECT (((UPPER(DISTINCT rt0.c4) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((UPPER(DISTINCT rt0.c4) IN ()));
SELECT SUM(count) FROM (SELECT (((UPPER(DISTINCT rt0.c4) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((UPPER(DISTINCT rt0.c4) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (('''' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('''' IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (('''' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('''' IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (('''' IN ()));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CHANGES()) ORDER BY (((((rt0.c0))>=((rt0.c3))))<((rt0.c2 IN (0.17742567528602393)))) DESC  NULLS LAST, CASE WHEN ((((rt0.c0)AND(vt0.c0)))AND(0.7880088816935393)) THEN (vt0.c0 IN (vt0.c0)) WHEN rt0.c4 COLLATE NOCASE THEN ((rt0.c3) NOT BETWEEN (vt0.c2) AND (NULL)) WHEN (NULL IN ()) THEN (NOT (vt0.c2)) ELSE (((vt0.c1))!=((rt0.c4))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c0))>=((rt0.c3))))<((rt0.c2 IN (0.17742567528602393)))) DESC  NULLS LAST, CASE WHEN ((((rt0.c0)AND(vt0.c0)))AND(0.7880088816935393)) THEN (vt0.c0 IN (vt0.c0)) WHEN rt0.c4 COLLATE NOCASE THEN ((rt0.c3) NOT BETWEEN (vt0.c2) AND (NULL)) WHEN (NULL IN ()) THEN (NOT (vt0.c2)) ELSE (((vt0.c1))<>((rt0.c4))) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CHANGES()) ORDER BY (((((rt0.c0))>=((rt0.c3))))<((rt0.c2 IN (0.17742567528602393)))) DESC  NULLS LAST, CASE WHEN ((((rt0.c0)AND(vt0.c0)))AND(0.7880088816935393)) THEN (vt0.c0 IN (vt0.c0)) WHEN rt0.c4 COLLATE NOCASE THEN ((rt0.c3) NOT BETWEEN (vt0.c2) AND (NULL)) WHEN (NULL IN ()) THEN (NOT (vt0.c2)) ELSE (((vt0.c1))!=((rt0.c4))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c0))>=((rt0.c3))))<((rt0.c2 IN (0.17742567528602393)))) DESC  NULLS LAST, CASE WHEN ((((rt0.c0)AND(vt0.c0)))AND(0.7880088816935393)) THEN (vt0.c0 IN (vt0.c0)) WHEN rt0.c4 COLLATE NOCASE THEN ((rt0.c3) NOT BETWEEN (vt0.c2) AND (NULL)) WHEN (NULL IN ()) THEN (NOT (vt0.c2)) ELSE (((vt0.c1))<>((rt0.c4))) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CHANGES()) ORDER BY (((((rt0.c0))>=((rt0.c3))))<((rt0.c2 IN (0.17742567528602393)))) DESC  NULLS LAST, CASE WHEN ((((rt0.c0)AND(vt0.c0)))AND(0.7880088816935393)) THEN (vt0.c0 IN (vt0.c0)) WHEN rt0.c4 COLLATE NOCASE THEN ((rt0.c3) NOT BETWEEN (vt0.c2) AND (NULL)) WHEN (NULL IN ()) THEN (NOT (vt0.c2)) ELSE (((vt0.c1))!=((rt0.c4))) END  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(((0.2715234324854693) BETWEEN (rt0.c0) AND (rt0.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((0.2715234324854693) BETWEEN (rt0.c0) AND (rt0.c3)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((0.2715234324854693) BETWEEN (rt0.c0) AND (rt0.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((0.2715234324854693) BETWEEN (rt0.c0) AND (rt0.c3)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((0.2715234324854693) BETWEEN (rt0.c0) AND (rt0.c3)) AS BLOB));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY json_patch(((rt0.c2)GLOB(rt0.c3)), (rt0.c4 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY json_patch(((rt0.c2)GLOB(rt0.c3)), (rt0.c4 IN ())) ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY json_patch(((rt0.c2)GLOB(rt0.c3)), (rt0.c4 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY json_patch(((rt0.c2)GLOB(rt0.c3)), (rt0.c4 IN ())) ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY json_patch(((rt0.c2)GLOB(rt0.c3)), (rt0.c4 IN ())) ASC;
SELECT ALL * FROM rt0 WHERE (CASE CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c1) NOTNULL) WHEN ((rt0.c4)/(rt0.c3)) THEN '' WHEN ((x'df56') NOT NULL) THEN (rt0.c4 IN ()) END) ORDER BY CASE WHEN rt0.c3 THEN (rt0.c0 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c1) NOTNULL) WHEN ((rt0.c4)/(rt0.c3)) THEN '' WHEN ((x'df56') NOT NULL) THEN (rt0.c4 IN ()) END) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c3 THEN (rt0.c0 IN ()) END DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c1) NOTNULL) WHEN ((rt0.c4)/(rt0.c3)) THEN '' WHEN ((x'df56') NOT NULL) THEN (rt0.c4 IN ()) END) ORDER BY CASE WHEN rt0.c3 THEN (rt0.c0 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c1) NOTNULL) WHEN ((rt0.c4)/(rt0.c3)) THEN '' WHEN ((x'df56') NOT NULL) THEN (rt0.c4 IN ()) END) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c3 THEN (rt0.c0 IN ()) END DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c1) NOTNULL) WHEN ((rt0.c4)/(rt0.c3)) THEN '' WHEN ((x'df56') NOT NULL) THEN (rt0.c4 IN ()) END) ORDER BY CASE WHEN rt0.c3 THEN (rt0.c0 IN ()) END DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE (vt0.c1 IN ())  WHEN NULL THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) END) ORDER BY (~ (vt0.c1)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c1 IN ())  WHEN NULL THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c1)) COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE (vt0.c1 IN ())  WHEN NULL THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) END) ORDER BY (~ (vt0.c1)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c1 IN ())  WHEN NULL THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c1)) COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE (vt0.c1 IN ())  WHEN NULL THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) END) ORDER BY (~ (vt0.c1)) COLLATE BINARY DESC  NULLS LAST;
SELECT * FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c3 AS TEXT))|(vt0.c0 COLLATE NOCASE)) WHERE ((('') BETWEEN (')') AND (CAST(rt0.c3 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((('') BETWEEN (')') AND (CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c3 AS TEXT))|(vt0.c0 COLLATE NOCASE)));
SELECT * FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c3 AS TEXT))|(vt0.c0 COLLATE NOCASE)) WHERE ((('') BETWEEN (')') AND (CAST(rt0.c3 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((('') BETWEEN (')') AND (CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c3 AS TEXT))|(vt0.c0 COLLATE NOCASE)));
SELECT * FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c3 AS TEXT))|(vt0.c0 COLLATE NOCASE)) WHERE ((('') BETWEEN (')') AND (CAST(rt0.c3 AS TEXT))));
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)) THEN ((vt0.c1)%(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)) THEN ((vt0.c1)%(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)) THEN ((vt0.c1)%(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)) THEN ((vt0.c1)%(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)) THEN ((vt0.c1)%(vt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((x'') NOT BETWEEN ((vt0.c1 IN ())) AND ('zÍà§')) WHERE ((NOT (((rt0.c0)<>(rt0.c1))))) ORDER BY (- (rt0.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)<>(rt0.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((x'') NOT BETWEEN ((vt0.c1 IN ())) AND ('zÍà§')) ORDER BY (- (rt0.c1 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((x'') NOT BETWEEN ((vt0.c1 IN ())) AND ('zÍà§')) WHERE ((NOT (((rt0.c0)<>(rt0.c1))))) ORDER BY (- (rt0.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)<>(rt0.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((x'') NOT BETWEEN ((vt0.c1 IN ())) AND ('zÍà§')) ORDER BY (- (rt0.c1 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((x'') NOT BETWEEN ((vt0.c1 IN ())) AND ('zÍà§')) WHERE ((NOT (((rt0.c0)<>(rt0.c1))))) ORDER BY (- (rt0.c1 COLLATE RTRIM)) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((json_object(rt0.c3, rt0.c3)) BETWEEN (CASE NULL  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 END) AND (rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL ((((json_object(rt0.c3, rt0.c3)) BETWEEN (CASE NULL  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 END) AND (rt0.c4))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((json_object(rt0.c3, rt0.c3)) BETWEEN (CASE NULL  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 END) AND (rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL ((((json_object(rt0.c3, rt0.c3)) BETWEEN (CASE NULL  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 END) AND (rt0.c4))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON CAST(((((x'')OR(vt0.c0)))AND(rt0.c1)) AS NUMERIC) WHERE (((LOWER(rt0.c2)) BETWEEN ((- (rt0.c2))) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((LOWER(rt0.c2)) BETWEEN ((- (rt0.c2))) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CAST(((((x'')OR(vt0.c0)))AND(rt0.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON CAST(((((x'')OR(vt0.c0)))AND(rt0.c1)) AS NUMERIC) WHERE (((LOWER(rt0.c2)) BETWEEN ((- (rt0.c2))) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((LOWER(rt0.c2)) BETWEEN ((- (rt0.c2))) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CAST(((((x'')OR(vt0.c0)))AND(rt0.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON CAST(((((x'')OR(vt0.c0)))AND(rt0.c1)) AS NUMERIC) WHERE (((LOWER(rt0.c2)) BETWEEN ((- (rt0.c2))) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT * FROM vt0 WHERE (((0.4004727687384173)AND(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((0.4004727687384173)AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((0.4004727687384173)AND(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((0.4004727687384173)AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((0.4004727687384173)AND(vt0.c0)) COLLATE RTRIM);
SELECT * FROM rt0 WHERE ((((rt0.c0))>(((rt0.c3 IN ()))))) ORDER BY (((((rt0.c3)%(rt0.c0))))>=((rt0.c4))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0))>(((rt0.c3 IN ()))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3)%(rt0.c0))))>=((rt0.c4))) DESC);
SELECT * FROM rt0 WHERE ((((rt0.c0))>(((rt0.c3 IN ()))))) ORDER BY (((((rt0.c3)%(rt0.c0))))>=((rt0.c4))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0))>(((rt0.c3 IN ()))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3)%(rt0.c0))))>=((rt0.c4))) DESC);
SELECT * FROM rt0 WHERE ((((rt0.c0))>(((rt0.c3 IN ()))))) ORDER BY (((((rt0.c3)%(rt0.c0))))>=((rt0.c4))) DESC;
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (IFNULL(DISTINCT CASE vt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN rt0.c0 END, ((((((((rt0.c4)AND(vt0.c2)))OR(rt0.c0)))AND('-1275779317')))OR(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT CASE vt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN rt0.c0 END, ((((((((rt0.c4)AND(vt0.c2)))OR(rt0.c0)))AND('-1275779317')))OR(rt0.c3)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (IFNULL(DISTINCT CASE vt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN rt0.c0 END, ((((((((rt0.c4)AND(vt0.c2)))OR(rt0.c0)))AND('-1275779317')))OR(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT CASE vt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN rt0.c0 END, ((((((((rt0.c4)AND(vt0.c2)))OR(rt0.c0)))AND('-1275779317')))OR(rt0.c3)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (IFNULL(DISTINCT CASE vt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN rt0.c0 END, ((((((((rt0.c4)AND(vt0.c2)))OR(rt0.c0)))AND('-1275779317')))OR(rt0.c3))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END IN ())) ORDER BY (- (rt0.c4)), CASE CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END  WHEN SUBSTR(rt0.c3, rt0.c1) THEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)) WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN rt0.c3 COLLATE RTRIM THEN CAST(rt0.c3 AS BLOB) END DESC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c4)), CASE CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END  WHEN SUBSTR(rt0.c3, rt0.c1) THEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)) WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN rt0.c3 COLLATE RTRIM THEN CAST(rt0.c3 AS BLOB) END DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END IN ())) ORDER BY (- (rt0.c4)), CASE CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END  WHEN SUBSTR(rt0.c3, rt0.c1) THEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)) WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN rt0.c3 COLLATE RTRIM THEN CAST(rt0.c3 AS BLOB) END DESC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c4)), CASE CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END  WHEN SUBSTR(rt0.c3, rt0.c1) THEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)) WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN rt0.c3 COLLATE RTRIM THEN CAST(rt0.c3 AS BLOB) END DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END IN ())) ORDER BY (- (rt0.c4)), CASE CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END  WHEN SUBSTR(rt0.c3, rt0.c1) THEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)) WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN rt0.c3 COLLATE RTRIM THEN CAST(rt0.c3 AS BLOB) END DESC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) IS TRUE))<<((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) IS TRUE))<<((- (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) IS TRUE))<<((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) IS TRUE))<<((- (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) IS TRUE))<<((- (rt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c4)))<(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c4)))<(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c4)))<(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c4)))<(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c4)))<(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c3) ORDER BY json_valid(rt0.c2) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, rt0 ORDER BY json_valid(rt0.c2) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c3) ORDER BY json_valid(rt0.c2) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, rt0 ORDER BY json_valid(rt0.c2) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c3) ORDER BY json_valid(rt0.c2) COLLATE BINARY DESC;
SELECT ALL * FROM vt0 WHERE ((~ ((+ (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ ((+ (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ ((+ (vt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC))AND(rtreenode(rt0.c2, rt0.c0))))OR(NULLIF('-1245634478', rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS NUMERIC))AND(rtreenode(rt0.c2, rt0.c0))))OR(NULLIF('-1245634478', rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC))AND(rtreenode(rt0.c2, rt0.c0))))OR(NULLIF('-1245634478', rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS NUMERIC))AND(rtreenode(rt0.c2, rt0.c0))))OR(NULLIF('-1245634478', rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC))AND(rtreenode(rt0.c2, rt0.c0))))OR(NULLIF('-1245634478', rt0.c3))));
SELECT * FROM rt0 WHERE ((CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END IN (CAST(rt0.c2 AS BLOB)))) ORDER BY (rt0.c0 IN (json(rt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END IN (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 IN (json(rt0.c0))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END IN (CAST(rt0.c2 AS BLOB)))) ORDER BY (rt0.c0 IN (json(rt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END IN (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 IN (json(rt0.c0))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END IN (CAST(rt0.c2 AS BLOB)))) ORDER BY (rt0.c0 IN (json(rt0.c0))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c4 COLLATE NOCASE  WHEN NULLIF(DISTINCT rt0.c2, rt0.c1) THEN CAST(rt0.c3 AS INTEGER) END) ORDER BY CAST(((rt0.c4)!=(rt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c4 COLLATE NOCASE  WHEN NULLIF(DISTINCT rt0.c2, rt0.c1) THEN CAST(rt0.c3 AS INTEGER) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c4)!=(rt0.c0)) AS REAL));
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c4 COLLATE NOCASE  WHEN NULLIF(DISTINCT rt0.c2, rt0.c1) THEN CAST(rt0.c3 AS INTEGER) END) ORDER BY CAST(((rt0.c4)!=(rt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c4 COLLATE NOCASE  WHEN NULLIF(DISTINCT rt0.c2, rt0.c1) THEN CAST(rt0.c3 AS INTEGER) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c4)!=(rt0.c0)) AS REAL));
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c4 COLLATE NOCASE  WHEN NULLIF(DISTINCT rt0.c2, rt0.c1) THEN CAST(rt0.c3 AS INTEGER) END) ORDER BY CAST(((rt0.c4)!=(rt0.c0)) AS REAL);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)*(vt0.c0))))<((vt0.c0)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))IS((((vt0.c2, vt0.c0, vt0.c1))>((vt0.c2, vt0.c1, vt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)*(vt0.c0))))<((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))IS((((vt0.c2, vt0.c0, vt0.c1))>((vt0.c2, vt0.c1, vt0.c2))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)*(vt0.c0))))<((vt0.c0)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))IS((((vt0.c2, vt0.c0, vt0.c1))>((vt0.c2, vt0.c1, vt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)*(vt0.c0))))<((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))IS((((vt0.c2, vt0.c0, vt0.c1))>((vt0.c2, vt0.c1, vt0.c2))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)*(vt0.c0))))<((vt0.c0)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))IS((((vt0.c2, vt0.c0, vt0.c1))>((vt0.c2, vt0.c1, vt0.c2))))) DESC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (CASE ((rt0.c0) ISNULL)  WHEN CASE WHEN rt0.c2 THEN x'' ELSE vt0.c1 END THEN CASE rt0.c4  WHEN vt0.c2 THEN NULL ELSE rt0.c4 END WHEN CAST(rt0.c3 AS TEXT) THEN ((((vt0.c0)AND(vt0.c2)))OR(vt0.c0)) WHEN (NOT (vt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) ELSE ((rt0.c0)/(rt0.c4)) END) ORDER BY (NOT ('-1632882054'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) ISNULL)  WHEN CASE WHEN rt0.c2 THEN x'' ELSE vt0.c1 END THEN CASE rt0.c4  WHEN vt0.c2 THEN NULL ELSE rt0.c4 END WHEN CAST(rt0.c3 AS TEXT) THEN ((((vt0.c0)AND(vt0.c2)))OR(vt0.c0)) WHEN (NOT (vt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) ELSE ((rt0.c0)/(rt0.c4)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT ('-1632882054'))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (CASE ((rt0.c0) ISNULL)  WHEN CASE WHEN rt0.c2 THEN x'' ELSE vt0.c1 END THEN CASE rt0.c4  WHEN vt0.c2 THEN NULL ELSE rt0.c4 END WHEN CAST(rt0.c3 AS TEXT) THEN ((((vt0.c0)AND(vt0.c2)))OR(vt0.c0)) WHEN (NOT (vt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) ELSE ((rt0.c0)/(rt0.c4)) END) ORDER BY (NOT ('-1632882054'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) ISNULL)  WHEN CASE WHEN rt0.c2 THEN x'' ELSE vt0.c1 END THEN CASE rt0.c4  WHEN vt0.c2 THEN NULL ELSE rt0.c4 END WHEN CAST(rt0.c3 AS TEXT) THEN ((((vt0.c0)AND(vt0.c2)))OR(vt0.c0)) WHEN (NOT (vt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) ELSE ((rt0.c0)/(rt0.c4)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT ('-1632882054'))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (CASE ((rt0.c0) ISNULL)  WHEN CASE WHEN rt0.c2 THEN x'' ELSE vt0.c1 END THEN CASE rt0.c4  WHEN vt0.c2 THEN NULL ELSE rt0.c4 END WHEN CAST(rt0.c3 AS TEXT) THEN ((((vt0.c0)AND(vt0.c2)))OR(vt0.c0)) WHEN (NOT (vt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) ELSE ((rt0.c0)/(rt0.c4)) END) ORDER BY (NOT ('-1632882054'))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((- (CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT (((- (CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT (((- (CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (CAST(vt0.c1 AS REAL))));
SELECT * FROM rt0, vt0 WHERE (json_insert(rt0.c2, rt0.c3, rt0.c3) COLLATE NOCASE) ORDER BY CASE ((vt0.c1)IS NOT(rt0.c4))  WHEN ((rt0.c0)IS NOT(rt0.c1)) THEN ((rt0.c1)&(rt0.c0)) ELSE (((('-1994217555')OR(x'a9be')))AND(rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_insert(rt0.c2, rt0.c3, rt0.c3) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((vt0.c1)IS NOT(rt0.c4))  WHEN ((rt0.c0)IS NOT(rt0.c1)) THEN ((rt0.c1)&(rt0.c0)) ELSE (((('-1994217555')OR(x'a9be')))AND(rt0.c1)) END  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (json_insert(rt0.c2, rt0.c3, rt0.c3) COLLATE NOCASE) ORDER BY CASE ((vt0.c1)IS NOT(rt0.c4))  WHEN ((rt0.c0)IS NOT(rt0.c1)) THEN ((rt0.c1)&(rt0.c0)) ELSE (((('-1994217555')OR(x'a9be')))AND(rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_insert(rt0.c2, rt0.c3, rt0.c3) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((vt0.c1)IS NOT(rt0.c4))  WHEN ((rt0.c0)IS NOT(rt0.c1)) THEN ((rt0.c1)&(rt0.c0)) ELSE (((('-1994217555')OR(x'a9be')))AND(rt0.c1)) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM rt0 WHERE (((json_remove(NULL, rt0.c3, rt0.c2, rt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(NULL, rt0.c3, rt0.c2, rt0.c0)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((json_remove(NULL, rt0.c3, rt0.c2, rt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(NULL, rt0.c3, rt0.c2, rt0.c0)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((json_remove(NULL, rt0.c3, rt0.c2, rt0.c0)) IS TRUE));
SELECT * FROM vt0 WHERE ((((((((vt0.c0))<((vt0.c1))))OR(((vt0.c2) NOTNULL))))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0))<((vt0.c1))))OR(((vt0.c2) NOTNULL))))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((vt0.c0))<((vt0.c1))))OR(((vt0.c2) NOTNULL))))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0))<((vt0.c1))))OR(((vt0.c2) NOTNULL))))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((vt0.c0))<((vt0.c1))))OR(((vt0.c2) NOTNULL))))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c3 AS INTEGER) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c3 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c3 AS INTEGER) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c3 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c3 AS INTEGER) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT ((x'') ISNULL)));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((x'') ISNULL))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT ((x'') ISNULL)));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((x'') ISNULL))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT ((x'') ISNULL)));
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c3)))|((((('-83156136')OR(rt0.c3)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c3)))|((((('-83156136')OR(rt0.c3)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c3)))|((((('-83156136')OR(rt0.c3)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c3)))|((((('-83156136')OR(rt0.c3)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c3)))|((((('-83156136')OR(rt0.c3)))OR(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (NULLIF(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c1)), ((rt0.c3)>(0.9135471421057598)))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c1)), ((rt0.c3)>(0.9135471421057598)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c1)), ((rt0.c3)>(0.9135471421057598)))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c1)), ((rt0.c3)>(0.9135471421057598)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c1)), ((rt0.c3)>(0.9135471421057598)))) ORDER BY rt0.c0 DESC;
SELECT * FROM rt0, vt0 WHERE ((((+ (rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((+ (rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((+ (rt0.c0))) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ROUND(((vt0.c1) BETWEEN (NULL) AND (rt0.c3)), CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END) WHERE ((+ (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c3))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ROUND(((vt0.c1) BETWEEN (NULL) AND (rt0.c3)), CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ROUND(((vt0.c1) BETWEEN (NULL) AND (rt0.c3)), CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END) WHERE ((+ (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c3))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ROUND(((vt0.c1) BETWEEN (NULL) AND (rt0.c3)), CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ROUND(((vt0.c1) BETWEEN (NULL) AND (rt0.c3)), CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END) WHERE ((+ (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((((vt0.c1)IS(vt0.c0)))<((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c2, vt0.c1)) AND ((vt0.c1, vt0.c2, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS(vt0.c0)))<((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c2, vt0.c1)) AND ((vt0.c1, vt0.c2, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((((vt0.c1)IS(vt0.c0)))<((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c2, vt0.c1)) AND ((vt0.c1, vt0.c2, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS(vt0.c0)))<((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c2, vt0.c1)) AND ((vt0.c1, vt0.c2, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((((vt0.c1)IS(vt0.c0)))<((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c2, vt0.c1)) AND ((vt0.c1, vt0.c2, vt0.c0))))));
SELECT * FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (+ ((+ (0.6863692343752483)))) WHERE ((+ (vt0.c1 COLLATE BINARY))) ORDER BY -1126753045;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (+ ((+ (0.6863692343752483)))) ORDER BY -1126753045);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (+ ((+ (0.6863692343752483)))) WHERE ((+ (vt0.c1 COLLATE BINARY))) ORDER BY -1126753045;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (+ ((+ (0.6863692343752483)))) ORDER BY -1126753045);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3)>=(rt0.c1))))>(((NOT (rt0.c1)))))) ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END)==(((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)>=(rt0.c1))))>(((NOT (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END)=(((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3)>=(rt0.c1))))>(((NOT (rt0.c1)))))) ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END)==(((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)>=(rt0.c1))))>(((NOT (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END)=(((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3)>=(rt0.c1))))>(((NOT (rt0.c1)))))) ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END)==(((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c1)OR(rt0.c1))))) ORDER BY ((((((((((rt0.c0) IS FALSE))OR((rt0.c3 IN ()))))OR(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)))))AND(json_patch(rt0.c0, ''))))AND(7.42504192E8)) ASC  NULLS LAST, ((rt0.c0)<(CASE WHEN rt0.c2 THEN rt0.c3 END)) ASC, ((UNICODE(rt0.c0)) NOT BETWEEN (((rt0.c3)IS(rt0.c2))) AND (rt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1)OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0) IS FALSE))OR((rt0.c3 IN ()))))OR(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)))))AND(json_patch(rt0.c0, ''))))AND(7.42504192E8)) ASC  NULLS LAST, ((rt0.c0)<(CASE WHEN rt0.c2 THEN rt0.c3 END)) ASC, ((UNICODE(rt0.c0)) NOT BETWEEN (((rt0.c3)IS(rt0.c2))) AND (rt0.c0)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c1)OR(rt0.c1))))) ORDER BY ((((((((((rt0.c0) IS FALSE))OR((rt0.c3 IN ()))))OR(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)))))AND(json_patch(rt0.c0, ''))))AND(7.42504192E8)) ASC  NULLS LAST, ((rt0.c0)<(CASE WHEN rt0.c2 THEN rt0.c3 END)) ASC, ((UNICODE(rt0.c0)) NOT BETWEEN (((rt0.c3)IS(rt0.c2))) AND (rt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1)OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0) IS FALSE))OR((rt0.c3 IN ()))))OR(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)))))AND(json_patch(rt0.c0, ''))))AND(7.42504192E8)) ASC  NULLS LAST, ((rt0.c0)<(CASE WHEN rt0.c2 THEN rt0.c3 END)) ASC, ((UNICODE(rt0.c0)) NOT BETWEEN (((rt0.c3)IS(rt0.c2))) AND (rt0.c0)) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((+ (((((rt0.c3)AND(rt0.c2)))OR(rt0.c3))))) ORDER BY ((((rt0.c3)AND(rt0.c3))) NOT BETWEEN (CAST(rt0.c4 AS TEXT)) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((rt0.c3)AND(rt0.c2)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)AND(rt0.c3))) NOT BETWEEN (CAST(rt0.c4 AS TEXT)) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)));
SELECT ALL * FROM rt0 WHERE ((+ (((((rt0.c3)AND(rt0.c2)))OR(rt0.c3))))) ORDER BY ((((rt0.c3)AND(rt0.c3))) NOT BETWEEN (CAST(rt0.c4 AS TEXT)) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((rt0.c3)AND(rt0.c2)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)AND(rt0.c3))) NOT BETWEEN (CAST(rt0.c4 AS TEXT)) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)));
SELECT ALL * FROM rt0 WHERE ((+ (((((rt0.c3)AND(rt0.c2)))OR(rt0.c3))))) ORDER BY ((((rt0.c3)AND(rt0.c3))) NOT BETWEEN (CAST(rt0.c4 AS TEXT)) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END));
SELECT ALL * FROM vt0, rt0 WHERE ((~ (LOWER(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL (((~ (LOWER(rt0.c4)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((~ (LOWER(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL (((~ (LOWER(rt0.c4)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((~ (LOWER(rt0.c4))));
SELECT * FROM vt0 CROSS JOIN rt0 ON x'' WHERE (((((((((CAST(rt0.c4 AS BLOB))AND(x'dba5' COLLATE NOCASE)))OR((((NULL))>((rt0.c4))))))OR(rt0.c1)))OR((((rt0.c1, rt0.c3, rt0.c3))>((rt0.c1, vt0.c2, rt0.c2)))))) ORDER BY (NOT (CASE rt0.c2  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c4 AS BLOB))AND(x'dba5' COLLATE NOCASE)))OR((((NULL))>((rt0.c4))))))OR(rt0.c1)))OR((((rt0.c1, rt0.c3, rt0.c3))>((rt0.c1, vt0.c2, rt0.c2)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON x'' ORDER BY (NOT (CASE rt0.c2  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT * FROM vt0 CROSS JOIN rt0 ON x'' WHERE (((((((((CAST(rt0.c4 AS BLOB))AND(x'dba5' COLLATE NOCASE)))OR((((NULL))>((rt0.c4))))))OR(rt0.c1)))OR((((rt0.c1, rt0.c3, rt0.c3))>((rt0.c1, vt0.c2, rt0.c2)))))) ORDER BY (NOT (CASE rt0.c2  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c4 AS BLOB))AND(x'dba5' COLLATE NOCASE)))OR((((NULL))>((rt0.c4))))))OR(rt0.c1)))OR((((rt0.c1, rt0.c3, rt0.c3))>((rt0.c1, vt0.c2, rt0.c2)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON x'' ORDER BY (NOT (CASE rt0.c2  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT * FROM vt0 CROSS JOIN rt0 ON x'' WHERE (((((((((CAST(rt0.c4 AS BLOB))AND(x'dba5' COLLATE NOCASE)))OR((((NULL))>((rt0.c4))))))OR(rt0.c1)))OR((((rt0.c1, rt0.c3, rt0.c3))>((rt0.c1, vt0.c2, rt0.c2)))))) ORDER BY (NOT (CASE rt0.c2  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END));
SELECT ALL * FROM vt0, rt0 WHERE (CAST(x'' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(x'' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(x'' AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c2 END)!=(vt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c2 END)<>(vt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c2 END)!=(vt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c2 END)<>(vt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c2 END)!=(vt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY)&(vt0.c1 COLLATE RTRIM))) ORDER BY CASE IFNULL(vt0.c2, rt0.c3)  WHEN NULL THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN ((rt0.c3) ISNULL) THEN (((rt0.c4)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))) WHEN vt0.c2 COLLATE BINARY THEN vt0.c1 END, ((((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))OR(((rt0.c1) IS TRUE))) ASC  NULLS FIRST, CASE WHEN rt0.c1 COLLATE RTRIM THEN ((vt0.c0) BETWEEN (vt0.c2) AND (rt0.c0)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)&(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE IFNULL(vt0.c2, rt0.c3)  WHEN NULL THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN ((rt0.c3) ISNULL) THEN (((rt0.c4)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))) WHEN vt0.c2 COLLATE BINARY THEN vt0.c1 END, ((((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))OR(((rt0.c1) IS TRUE))) ASC  NULLS FIRST, CASE WHEN rt0.c1 COLLATE RTRIM THEN ((vt0.c0) BETWEEN (vt0.c2) AND (rt0.c0)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c1)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY)&(vt0.c1 COLLATE RTRIM))) ORDER BY CASE IFNULL(vt0.c2, rt0.c3)  WHEN NULL THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN ((rt0.c3) ISNULL) THEN (((rt0.c4)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))) WHEN vt0.c2 COLLATE BINARY THEN vt0.c1 END, ((((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))OR(((rt0.c1) IS TRUE))) ASC  NULLS FIRST, CASE WHEN rt0.c1 COLLATE RTRIM THEN ((vt0.c0) BETWEEN (vt0.c2) AND (rt0.c0)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)&(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE IFNULL(vt0.c2, rt0.c3)  WHEN NULL THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN ((rt0.c3) ISNULL) THEN (((rt0.c4)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))) WHEN vt0.c2 COLLATE BINARY THEN vt0.c1 END, ((((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))OR(((rt0.c1) IS TRUE))) ASC  NULLS FIRST, CASE WHEN rt0.c1 COLLATE RTRIM THEN ((vt0.c0) BETWEEN (vt0.c2) AND (rt0.c0)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c1)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY)&(vt0.c1 COLLATE RTRIM))) ORDER BY CASE IFNULL(vt0.c2, rt0.c3)  WHEN NULL THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN ((rt0.c3) ISNULL) THEN (((rt0.c4)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))) WHEN vt0.c2 COLLATE BINARY THEN vt0.c1 END, ((((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))OR(((rt0.c1) IS TRUE))) ASC  NULLS FIRST, CASE WHEN rt0.c1 COLLATE RTRIM THEN ((vt0.c0) BETWEEN (vt0.c2) AND (rt0.c0)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c1)) END ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (NULL) ORDER BY (((vt0.c0 COLLATE RTRIM, '9‚Øõ~K' COLLATE NOCASE, CASE rt0.c4  WHEN rt0.c4 THEN vt0.c2 END))<>((((rt0.c3)<(vt0.c2)), ((rt0.c0) NOTNULL), (- (rt0.c1))))) DESC  NULLS LAST, (((((vt0.c0)LIKE(vt0.c2))))!=((rt0.c2 COLLATE NOCASE))), CAST(vt0.c1 COLLATE RTRIM AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0 COLLATE RTRIM, '9‚Øõ~K' COLLATE NOCASE, CASE rt0.c4  WHEN rt0.c4 THEN vt0.c2 END))<>((((rt0.c3)<(vt0.c2)), ((rt0.c0) NOTNULL), (- (rt0.c1))))) DESC  NULLS LAST, (((((vt0.c0)LIKE(vt0.c2))))!=((rt0.c2 COLLATE NOCASE))), CAST(vt0.c1 COLLATE RTRIM AS BLOB) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (NULL) ORDER BY (((vt0.c0 COLLATE RTRIM, '9‚Øõ~K' COLLATE NOCASE, CASE rt0.c4  WHEN rt0.c4 THEN vt0.c2 END))<>((((rt0.c3)<(vt0.c2)), ((rt0.c0) NOTNULL), (- (rt0.c1))))) DESC  NULLS LAST, (((((vt0.c0)LIKE(vt0.c2))))!=((rt0.c2 COLLATE NOCASE))), CAST(vt0.c1 COLLATE RTRIM AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0 COLLATE RTRIM, '9‚Øõ~K' COLLATE NOCASE, CASE rt0.c4  WHEN rt0.c4 THEN vt0.c2 END))<>((((rt0.c3)<(vt0.c2)), ((rt0.c0) NOTNULL), (- (rt0.c1))))) DESC  NULLS LAST, (((((vt0.c0)LIKE(vt0.c2))))!=((rt0.c2 COLLATE NOCASE))), CAST(vt0.c1 COLLATE RTRIM AS BLOB) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (NULL) ORDER BY (((vt0.c0 COLLATE RTRIM, '9‚Øõ~K' COLLATE NOCASE, CASE rt0.c4  WHEN rt0.c4 THEN vt0.c2 END))<>((((rt0.c3)<(vt0.c2)), ((rt0.c0) NOTNULL), (- (rt0.c1))))) DESC  NULLS LAST, (((((vt0.c0)LIKE(vt0.c2))))!=((rt0.c2 COLLATE NOCASE))), CAST(vt0.c1 COLLATE RTRIM AS BLOB) DESC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c4) AND ('-1674475283')))AND(CAST(rt0.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (rt0.c4) AND ('-1674475283')))AND(CAST(rt0.c3 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c4) AND ('-1674475283')))AND(CAST(rt0.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (rt0.c4) AND ('-1674475283')))AND(CAST(rt0.c3 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c4) AND ('-1674475283')))AND(CAST(rt0.c3 AS BLOB))));
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) AS REAL)) ORDER BY ((((rt0.c4 COLLATE BINARY)AND((~ (rt0.c3)))))OR((- (rt0.c4))));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4 COLLATE BINARY)AND((~ (rt0.c3)))))OR((- (rt0.c4)))));
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) AS REAL)) ORDER BY ((((rt0.c4 COLLATE BINARY)AND((~ (rt0.c3)))))OR((- (rt0.c4))));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4 COLLATE BINARY)AND((~ (rt0.c3)))))OR((- (rt0.c4)))));
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) AS REAL)) ORDER BY ((((rt0.c4 COLLATE BINARY)AND((~ (rt0.c3)))))OR((- (rt0.c4))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c2)<=(vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c1)) WHEN CASE WHEN vt0.c1 THEN 898892536 END THEN (((vt0.c1, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c2) ISNULL) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END END) ORDER BY ((((vt0.c0)LIKE(vt0.c0))) BETWEEN (((vt0.c2)GLOB(vt0.c1))) AND (((0.2632037976806114) NOT BETWEEN (x'') AND (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c2)<=(vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c1)) WHEN CASE WHEN vt0.c1 THEN 898892536 END THEN (((vt0.c1, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c2) ISNULL) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)LIKE(vt0.c0))) BETWEEN (((vt0.c2)GLOB(vt0.c1))) AND (((0.2632037976806114) NOT BETWEEN (x'') AND (vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c2)<=(vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c1)) WHEN CASE WHEN vt0.c1 THEN 898892536 END THEN (((vt0.c1, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c2) ISNULL) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END END) ORDER BY ((((vt0.c0)LIKE(vt0.c0))) BETWEEN (((vt0.c2)GLOB(vt0.c1))) AND (((0.2632037976806114) NOT BETWEEN (x'') AND (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c2)<=(vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c1)) WHEN CASE WHEN vt0.c1 THEN 898892536 END THEN (((vt0.c1, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c2) ISNULL) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)LIKE(vt0.c0))) BETWEEN (((vt0.c2)GLOB(vt0.c1))) AND (((0.2632037976806114) NOT BETWEEN (x'') AND (vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c2)<=(vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c1)) WHEN CASE WHEN vt0.c1 THEN 898892536 END THEN (((vt0.c1, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c2) ISNULL) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END END) ORDER BY ((((vt0.c0)LIKE(vt0.c0))) BETWEEN (((vt0.c2)GLOB(vt0.c1))) AND (((0.2632037976806114) NOT BETWEEN (x'') AND (vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (((((vt0.c1)<(x'')))>((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<(x'')))>((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((vt0.c1)<(x'')))>((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<(x'')))>((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((vt0.c1)<(x'')))>((NOT (rt0.c0)))));
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE ((((vt0.c0)) NOT BETWEEN (((+ (rt0.c1)))) AND (('-1084281893')))) ORDER BY ((vt0.c2) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((+ (rt0.c1)))) AND (('-1084281893')))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c2) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE ((((vt0.c0)) NOT BETWEEN (((+ (rt0.c1)))) AND (('-1084281893')))) ORDER BY ((vt0.c2) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((+ (rt0.c1)))) AND (('-1084281893')))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c2) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE ((((vt0.c0)) NOT BETWEEN (((+ (rt0.c1)))) AND (('-1084281893')))) ORDER BY ((vt0.c2) NOT NULL) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE (~ (vt0.c1))  WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c2)+(vt0.c0)) WHEN ((0.6790271131641591) BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c2) NOTNULL) WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c1))=((NULL))) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt0.c1))  WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c2)+(vt0.c0)) WHEN ((0.6790271131641591) BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c2) NOTNULL) WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c1))==((NULL))) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (~ (vt0.c1))  WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c2)+(vt0.c0)) WHEN ((0.6790271131641591) BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c2) NOTNULL) WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c1))=((NULL))) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt0.c1))  WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c2)+(vt0.c0)) WHEN ((0.6790271131641591) BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c2) NOTNULL) WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c1))==((NULL))) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (~ (vt0.c1))  WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c2)+(vt0.c0)) WHEN ((0.6790271131641591) BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c2) NOTNULL) WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c1))=((NULL))) END);
SELECT ALL * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c2);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) NOT NULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOT NULL) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) NOT NULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOT NULL) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) NOT NULL) AS REAL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c1)-(rt0.c2))))>=((CAST(rt0.c3 AS BLOB))))) ORDER BY TOTAL_CHANGES()  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)-(rt0.c2))))>=((CAST(rt0.c3 AS BLOB))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY TOTAL_CHANGES()  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c1)-(rt0.c2))))>=((CAST(rt0.c3 AS BLOB))))) ORDER BY TOTAL_CHANGES()  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)-(rt0.c2))))>=((CAST(rt0.c3 AS BLOB))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY TOTAL_CHANGES()  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c1)-(rt0.c2))))>=((CAST(rt0.c3 AS BLOB))))) ORDER BY TOTAL_CHANGES()  NULLS LAST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((TIME(rt0.c2, rt0.c2, rt0.c2))+(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c2 ELSE 0.08913488282635484 END)) WHERE (((CAST(NULL AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((TIME(rt0.c2, rt0.c2, rt0.c2))+(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c2 ELSE 0.08913488282635484 END)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((TIME(rt0.c2, rt0.c2, rt0.c2))+(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c2 ELSE 0.08913488282635484 END)) WHERE (((CAST(NULL AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((TIME(rt0.c2, rt0.c2, rt0.c2))+(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c2 ELSE 0.08913488282635484 END)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((TIME(rt0.c2, rt0.c2, rt0.c2))+(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c2 ELSE 0.08913488282635484 END)) WHERE (((CAST(NULL AS NUMERIC)) IS TRUE));
SELECT ALL * FROM vt0, rt0 WHERE ((((-2078690769 IN ()))-(((0.648093595409863)GLOB(4.56986837E8))))) ORDER BY CASE (- (rt0.c0))  WHEN (vt0.c2 IN ()) THEN (NOT (vt0.c0)) WHEN (((vt0.c0, rt0.c0, vt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c2)) AND ((rt0.c0, vt0.c2, vt0.c0))) THEN ((vt0.c2)|(rt0.c1)) WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) THEN (((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c4))) ELSE CASE rt0.c3  WHEN 2.4479152E8 THEN vt0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL (((((-2078690769 IN ()))-(((0.648093595409863)GLOB(4.56986837E8))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE (- (rt0.c0))  WHEN (vt0.c2 IN ()) THEN (NOT (vt0.c0)) WHEN (((vt0.c0, rt0.c0, vt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c2)) AND ((rt0.c0, vt0.c2, vt0.c0))) THEN ((vt0.c2)|(rt0.c1)) WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) THEN (((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c4))) ELSE CASE rt0.c3  WHEN 2.4479152E8 THEN vt0.c0 END END);
SELECT ALL * FROM vt0, rt0 WHERE ((((-2078690769 IN ()))-(((0.648093595409863)GLOB(4.56986837E8))))) ORDER BY CASE (- (rt0.c0))  WHEN (vt0.c2 IN ()) THEN (NOT (vt0.c0)) WHEN (((vt0.c0, rt0.c0, vt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c2)) AND ((rt0.c0, vt0.c2, vt0.c0))) THEN ((vt0.c2)|(rt0.c1)) WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) THEN (((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c4))) ELSE CASE rt0.c3  WHEN 2.4479152E8 THEN vt0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL (((((-2078690769 IN ()))-(((0.648093595409863)GLOB(4.56986837E8))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE (- (rt0.c0))  WHEN (vt0.c2 IN ()) THEN (NOT (vt0.c0)) WHEN (((vt0.c0, rt0.c0, vt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c2)) AND ((rt0.c0, vt0.c2, vt0.c0))) THEN ((vt0.c2)|(rt0.c1)) WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) THEN (((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c4))) ELSE CASE rt0.c3  WHEN 2.4479152E8 THEN vt0.c0 END END);
SELECT ALL * FROM vt0, rt0 WHERE ((((-2078690769 IN ()))-(((0.648093595409863)GLOB(4.56986837E8))))) ORDER BY CASE (- (rt0.c0))  WHEN (vt0.c2 IN ()) THEN (NOT (vt0.c0)) WHEN (((vt0.c0, rt0.c0, vt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c2)) AND ((rt0.c0, vt0.c2, vt0.c0))) THEN ((vt0.c2)|(rt0.c1)) WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) THEN (((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c4))) ELSE CASE rt0.c3  WHEN 2.4479152E8 THEN vt0.c0 END END;
SELECT COUNT(*) FROM rt0 WHERE (LOWER(LIKELY(DISTINCT rt0.c1))) ORDER BY rt0.c4;
SELECT SUM(count) FROM (SELECT ((LOWER(LIKELY(DISTINCT rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c4);
SELECT COUNT(*) FROM rt0 WHERE (LOWER(LIKELY(DISTINCT rt0.c1))) ORDER BY rt0.c4;
SELECT SUM(count) FROM (SELECT ((LOWER(LIKELY(DISTINCT rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c4);
SELECT COUNT(*) FROM rt0 WHERE (LOWER(LIKELY(DISTINCT rt0.c1))) ORDER BY rt0.c4;
SELECT COUNT(*) FROM vt0 WHERE (((((((((UNLIKELY(vt0.c1))AND(((vt0.c1) ISNULL))))AND(((vt0.c1) NOT NULL))))AND(NULL)))AND(TRIM(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((((UNLIKELY(vt0.c1))AND(((vt0.c1) ISNULL))))AND(((vt0.c1) NOT NULL))))AND(NULL)))AND(TRIM(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((UNLIKELY(vt0.c1))AND(((vt0.c1) ISNULL))))AND(((vt0.c1) NOT NULL))))AND(NULL)))AND(TRIM(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((((UNLIKELY(vt0.c1))AND(((vt0.c1) ISNULL))))AND(((vt0.c1) NOT NULL))))AND(NULL)))AND(TRIM(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((UNLIKELY(vt0.c1))AND(((vt0.c1) ISNULL))))AND(((vt0.c1) NOT NULL))))AND(NULL)))AND(TRIM(vt0.c1))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)%(vt0.c1)) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)%(vt0.c1)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)%(vt0.c1)) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)%(vt0.c1)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)%(vt0.c1)) COLLATE RTRIM COLLATE BINARY);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN CASE WHEN vt0.c2 THEN 0.6863692343752483 END THEN ((NULL) NOT BETWEEN (rt0.c4) AND (vt0.c1)) WHEN ((((vt0.c1)OR(rt0.c0)))AND(vt0.c1)) THEN (- (vt0.c1)) WHEN x'' THEN rt0.c4 END WHERE ((((rt0.c0 IN ())) BETWEEN (vt0.c2) AND (('159278680' IN ()))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) BETWEEN (vt0.c2) AND (('159278680' IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN CASE WHEN vt0.c2 THEN 0.6863692343752483 END THEN ((NULL) NOT BETWEEN (rt0.c4) AND (vt0.c1)) WHEN ((((vt0.c1)OR(rt0.c0)))AND(vt0.c1)) THEN (- (vt0.c1)) WHEN x'' THEN rt0.c4 END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN CASE WHEN vt0.c2 THEN 0.6863692343752483 END THEN ((NULL) NOT BETWEEN (rt0.c4) AND (vt0.c1)) WHEN ((((vt0.c1)OR(rt0.c0)))AND(vt0.c1)) THEN (- (vt0.c1)) WHEN x'' THEN rt0.c4 END WHERE ((((rt0.c0 IN ())) BETWEEN (vt0.c2) AND (('159278680' IN ()))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) BETWEEN (vt0.c2) AND (('159278680' IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN CASE WHEN vt0.c2 THEN 0.6863692343752483 END THEN ((NULL) NOT BETWEEN (rt0.c4) AND (vt0.c1)) WHEN ((((vt0.c1)OR(rt0.c0)))AND(vt0.c1)) THEN (- (vt0.c1)) WHEN x'' THEN rt0.c4 END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN CASE WHEN vt0.c2 THEN 0.6863692343752483 END THEN ((NULL) NOT BETWEEN (rt0.c4) AND (vt0.c1)) WHEN ((((vt0.c1)OR(rt0.c0)))AND(vt0.c1)) THEN (- (vt0.c1)) WHEN x'' THEN rt0.c4 END WHERE ((((rt0.c0 IN ())) BETWEEN (vt0.c2) AND (('159278680' IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)) COLLATE BINARY) ORDER BY (+ (((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c3)))AND(0.9182133166899588)))AND(rt0.c3)))) ASC, ((((((830113902) IS TRUE))OR(((rt0.c2)<>(rt0.c3)))))AND(((rt0.c0)<<(rt0.c3)))) DESC, json_array_length(962099207) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (+ (((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c3)))AND(0.9182133166899588)))AND(rt0.c3)))) ASC, ((((((830113902) IS TRUE))OR(((rt0.c2)!=(rt0.c3)))))AND(((rt0.c0)<<(rt0.c3)))) DESC, json_array_length(962099207) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)) COLLATE BINARY) ORDER BY (+ (((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c3)))AND(0.9182133166899588)))AND(rt0.c3)))) ASC, ((((((830113902) IS TRUE))OR(((rt0.c2)<>(rt0.c3)))))AND(((rt0.c0)<<(rt0.c3)))) DESC, json_array_length(962099207) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (+ (((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c3)))AND(0.9182133166899588)))AND(rt0.c3)))) ASC, ((((((830113902) IS TRUE))OR(((rt0.c2)!=(rt0.c3)))))AND(((rt0.c0)<<(rt0.c3)))) DESC, json_array_length(962099207) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)) COLLATE BINARY) ORDER BY (+ (((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c3)))AND(0.9182133166899588)))AND(rt0.c3)))) ASC, ((((((830113902) IS TRUE))OR(((rt0.c2)<>(rt0.c3)))))AND(((rt0.c0)<<(rt0.c3)))) DESC, json_array_length(962099207) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (((((((((vt0.c1)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c4))))) ORDER BY CASE WHEN 0Xfffffffff07998ce THEN CAST(rt0.c1 AS TEXT) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((((((((vt0.c1)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY CASE WHEN 0xfffffffff07998ce THEN CAST(rt0.c1 AS TEXT) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (((((((((vt0.c1)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c4))))) ORDER BY CASE WHEN 0Xfffffffff07998ce THEN CAST(rt0.c1 AS TEXT) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((((((((vt0.c1)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY CASE WHEN 0xfffffffff07998ce THEN CAST(rt0.c1 AS TEXT) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (((((((((vt0.c1)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c4))))) ORDER BY CASE WHEN 0Xfffffffff07998ce THEN CAST(rt0.c1 AS TEXT) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c4)))AND(HEX(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c4)))AND(HEX(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c4)))AND(HEX(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c4)))AND(HEX(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c4)))AND(HEX(rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)%(vt0.c1)))/(rt0.c2 COLLATE BINARY))) ORDER BY COALESCE(DISTINCT x'bc30', rt0.c0), ((rt0.c3) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)%(vt0.c1)))/(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 ORDER BY COALESCE(DISTINCT x'bc30', rt0.c0), ((rt0.c3) ISNULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)%(vt0.c1)))/(rt0.c2 COLLATE BINARY))) ORDER BY COALESCE(DISTINCT x'bc30', rt0.c0), ((rt0.c3) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)%(vt0.c1)))/(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 ORDER BY COALESCE(DISTINCT x'bc30', rt0.c0), ((rt0.c3) ISNULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)%(vt0.c1)))/(rt0.c2 COLLATE BINARY))) ORDER BY COALESCE(DISTINCT x'bc30', rt0.c0), ((rt0.c3) ISNULL);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN vt0.c0 THEN '' ELSE vt0.c2 END)AND(CASE WHEN rt0.c0 THEN '' WHEN vt0.c2 THEN rt0.c4 WHEN vt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN '' ELSE vt0.c2 END)AND(CASE WHEN rt0.c0 THEN '' WHEN vt0.c2 THEN rt0.c4 WHEN vt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN vt0.c0 THEN '' ELSE vt0.c2 END)AND(CASE WHEN rt0.c0 THEN '' WHEN vt0.c2 THEN rt0.c4 WHEN vt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN '' ELSE vt0.c2 END)AND(CASE WHEN rt0.c0 THEN '' WHEN vt0.c2 THEN rt0.c4 WHEN vt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN vt0.c0 THEN '' ELSE vt0.c2 END)AND(CASE WHEN rt0.c0 THEN '' WHEN vt0.c2 THEN rt0.c4 WHEN vt0.c1 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY) ORDER BY (((((rt0.c3)AND(rt0.c4)))OR(rt0.c1)) IN (((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3)AND(rt0.c4)))OR(rt0.c1)) IN (((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY) ORDER BY (((((rt0.c3)AND(rt0.c4)))OR(rt0.c1)) IN (((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3)AND(rt0.c4)))OR(rt0.c1)) IN (((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY) ORDER BY (((((rt0.c3)AND(rt0.c4)))OR(rt0.c1)) IN (((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c3)OR(rt0.c0)))OR(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c3)OR(rt0.c0)))OR(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c3)OR(rt0.c0)))OR(rt0.c0))) IS TRUE));
SELECT * FROM rt0 WHERE ((((0X71f1401b)<(rt0.c3)) IN ())) ORDER BY (((rt0.c0 IN ()))>(RTRIM(x''))) DESC, (((((rt0.c3, rt0.c1, rt0.c1))<=((rt0.c2, '', rt0.c2)))) BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c3) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((0x71f1401b)<(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))>(RTRIM(x''))) DESC, (((((rt0.c3, rt0.c1, rt0.c1))<=((rt0.c2, '', rt0.c2)))) BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c3) NOT NULL))));
SELECT * FROM rt0 WHERE ((((0X71f1401b)<(rt0.c3)) IN ())) ORDER BY (((rt0.c0 IN ()))>(RTRIM(x''))) DESC, (((((rt0.c3, rt0.c1, rt0.c1))<=((rt0.c2, '', rt0.c2)))) BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c3) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((0x71f1401b)<(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))>(RTRIM(x''))) DESC, (((((rt0.c3, rt0.c1, rt0.c1))<=((rt0.c2, '', rt0.c2)))) BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c3) NOT NULL))));
SELECT * FROM rt0 WHERE ((((0X71f1401b)<(rt0.c3)) IN ())) ORDER BY (((rt0.c0 IN ()))>(RTRIM(x''))) DESC, (((((rt0.c3, rt0.c1, rt0.c1))<=((rt0.c2, '', rt0.c2)))) BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c3) NOT NULL)));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED RIGHT OUTER JOIN vt0 ON rt0.c1 WHERE (CAST(((rt0.c4) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4) IS TRUE) AS REAL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c1);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED RIGHT OUTER JOIN vt0 ON rt0.c1 WHERE (CAST(((rt0.c4) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4) IS TRUE) AS REAL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c1);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED RIGHT OUTER JOIN vt0 ON rt0.c1 WHERE (CAST(((rt0.c4) IS TRUE) AS REAL));
SELECT COUNT(*) FROM rt0 WHERE (((NOT (rt0.c3)) IN (((-1.674475283E9)<<(rt0.c2))))) ORDER BY CAST(CAST(rt0.c3 AS REAL) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c3)) IN (((-1.674475283E9)<<(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c3 AS REAL) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (((NOT (rt0.c3)) IN (((-1.674475283E9)<<(rt0.c2))))) ORDER BY CAST(CAST(rt0.c3 AS REAL) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c3)) IN (((-1.674475283E9)<<(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c3 AS REAL) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (((NOT (rt0.c3)) IN (((-1.674475283E9)<<(rt0.c2))))) ORDER BY CAST(CAST(rt0.c3 AS REAL) AS NUMERIC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((vt0.c0)<=(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<=(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((vt0.c0)<=(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<=(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((vt0.c0)<=(rt0.c1)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END, (- (vt0.c0)), vt0.c1 COLLATE NOCASE)) AND ((((vt0.c2)+(0.8395994141478278)), ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)), 0.8499995488340673)))) ORDER BY ((CAST(vt0.c1 AS INTEGER)) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END, (- (vt0.c0)), vt0.c1 COLLATE NOCASE)) AND ((((vt0.c2)+(0.8395994141478278)), ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)), 0.8499995488340673)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS INTEGER)) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END, (- (vt0.c0)), vt0.c1 COLLATE NOCASE)) AND ((((vt0.c2)+(0.8395994141478278)), ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)), 0.8499995488340673)))) ORDER BY ((CAST(vt0.c1 AS INTEGER)) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END, (- (vt0.c0)), vt0.c1 COLLATE NOCASE)) AND ((((vt0.c2)+(0.8395994141478278)), ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)), 0.8499995488340673)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS INTEGER)) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END, (- (vt0.c0)), vt0.c1 COLLATE NOCASE)) AND ((((vt0.c2)+(0.8395994141478278)), ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)), 0.8499995488340673)))) ORDER BY ((CAST(vt0.c1 AS INTEGER)) NOTNULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY NULL ASC, ((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 END)OR(((vt0.c1)IS NOT(vt0.c2)))))OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC, ((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 END)OR(((vt0.c1)IS NOT(vt0.c2)))))OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY NULL ASC, ((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 END)OR(((vt0.c1)IS NOT(vt0.c2)))))OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC, ((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 END)OR(((vt0.c1)IS NOT(vt0.c2)))))OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY NULL ASC, ((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 END)OR(((vt0.c1)IS NOT(vt0.c2)))))OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)AND(CAST(rt0.c1 AS NUMERIC))))AND(((rt0.c1)-(rt0.c0)))))OR((rt0.c2 IN (rt0.c0, rt0.c0)))))AND(CHANGES())));
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)AND(CAST(rt0.c1 AS NUMERIC))))AND(((rt0.c1)-(rt0.c0)))))OR((rt0.c2 IN (rt0.c0, rt0.c0)))))AND(CHANGES()))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)AND(CAST(rt0.c1 AS NUMERIC))))AND(((rt0.c1)-(rt0.c0)))))OR((rt0.c2 IN (rt0.c0, rt0.c0)))))AND(CHANGES())));
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)AND(CAST(rt0.c1 AS NUMERIC))))AND(((rt0.c1)-(rt0.c0)))))OR((rt0.c2 IN (rt0.c0, rt0.c0)))))AND(CHANGES()))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)AND(CAST(rt0.c1 AS NUMERIC))))AND(((rt0.c1)-(rt0.c0)))))OR((rt0.c2 IN (rt0.c0, rt0.c0)))))AND(CHANGES())));
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c2, 1.365706921E9)) BETWEEN (((((((((('159278680')OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c0)), 0.4004727687384173, ((((vt0.c1)OR(vt0.c2)))OR('')))) AND (((NOT (vt0.c1)), CASE WHEN x'' THEN vt0.c0 END, (vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c2, 1.365706921E9)) BETWEEN (((((((((('159278680')OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c0)), 0.4004727687384173, ((((vt0.c1)OR(vt0.c2)))OR('')))) AND (((NOT (vt0.c1)), CASE WHEN x'' THEN vt0.c0 END, (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c2, 1.365706921E9)) BETWEEN (((((((((('159278680')OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c0)), 0.4004727687384173, ((((vt0.c1)OR(vt0.c2)))OR('')))) AND (((NOT (vt0.c1)), CASE WHEN x'' THEN vt0.c0 END, (vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c2, 1.365706921E9)) BETWEEN (((((((((('159278680')OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c0)), 0.4004727687384173, ((((vt0.c1)OR(vt0.c2)))OR('')))) AND (((NOT (vt0.c1)), CASE WHEN x'' THEN vt0.c0 END, (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c2, 1.365706921E9)) BETWEEN (((((((((('159278680')OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c0)), 0.4004727687384173, ((((vt0.c1)OR(vt0.c2)))OR('')))) AND (((NOT (vt0.c1)), CASE WHEN x'' THEN vt0.c0 END, (vt0.c0 IN ())))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)%(-1380519108)))OR(((vt0.c2)+(vt0.c2)))))OR(vt0.c2))) ORDER BY COALESCE(DISTINCT ((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)), CAST(vt0.c2 AS INTEGER)), ((CAST('-1548944031' AS INTEGER))>=(vt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)%(-1380519108)))OR(((vt0.c2)+(vt0.c2)))))OR(vt0.c2))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT ((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)), CAST(vt0.c2 AS INTEGER)), ((CAST('-1548944031' AS INTEGER))>=(vt0.c1 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)%(-1380519108)))OR(((vt0.c2)+(vt0.c2)))))OR(vt0.c2))) ORDER BY COALESCE(DISTINCT ((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)), CAST(vt0.c2 AS INTEGER)), ((CAST('-1548944031' AS INTEGER))>=(vt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)%(-1380519108)))OR(((vt0.c2)+(vt0.c2)))))OR(vt0.c2))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT ((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)), CAST(vt0.c2 AS INTEGER)), ((CAST('-1548944031' AS INTEGER))>=(vt0.c1 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)%(-1380519108)))OR(((vt0.c2)+(vt0.c2)))))OR(vt0.c2))) ORDER BY COALESCE(DISTINCT ((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)), CAST(vt0.c2 AS INTEGER)), ((CAST('-1548944031' AS INTEGER))>=(vt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)GLOB((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)GLOB((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)GLOB((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c4)=(rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4)==(rt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c4)=(rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4)==(rt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c4)=(rt0.c2)) AS REAL));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((rt0.c4)) NOT BETWEEN ((NULL)) AND ((CAST(vt0.c0 AS REAL)))) WHERE (CAST(CAST(rt0.c4 AS INTEGER) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c4 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((rt0.c4)) NOT BETWEEN ((NULL)) AND ((CAST(vt0.c0 AS REAL)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((rt0.c4)) NOT BETWEEN ((NULL)) AND ((CAST(vt0.c0 AS REAL)))) WHERE (CAST(CAST(rt0.c4 AS INTEGER) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c4 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((rt0.c4)) NOT BETWEEN ((NULL)) AND ((CAST(vt0.c0 AS REAL)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((rt0.c4)) NOT BETWEEN ((NULL)) AND ((CAST(vt0.c0 AS REAL)))) WHERE (CAST(CAST(rt0.c4 AS INTEGER) AS BLOB));
SELECT ALL COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE ((~ (((rt0.c3)OR(rt0.c4))))) ORDER BY ((((rt0.c0)<<(rt0.c0))) BETWEEN (((rt0.c2)%(vt0.c2))) AND (((x'0e14')IS NOT(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c3)OR(rt0.c4))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0)<<(rt0.c0))) BETWEEN (((rt0.c2)%(vt0.c2))) AND (((x'0e14')IS NOT(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE ((~ (((rt0.c3)OR(rt0.c4))))) ORDER BY ((((rt0.c0)<<(rt0.c0))) BETWEEN (((rt0.c2)%(vt0.c2))) AND (((x'0e14')IS NOT(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c3)OR(rt0.c4))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0)<<(rt0.c0))) BETWEEN (((rt0.c2)%(vt0.c2))) AND (((x'0e14')IS NOT(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE ((~ (((rt0.c3)OR(rt0.c4))))) ORDER BY ((((rt0.c0)<<(rt0.c0))) BETWEEN (((rt0.c2)%(vt0.c2))) AND (((x'0e14')IS NOT(rt0.c1))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1 IN ()), (rt0.c1 IN (0.5562505893547272)), CAST(rt0.c3 AS REAL)))<((((rt0.c2)|(rt0.c2)), (~ (0.4748563242855003)), ((vt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 IN ()), (rt0.c1 IN (0.5562505893547272)), CAST(rt0.c3 AS REAL)))<((((rt0.c2)|(rt0.c2)), (~ (0.4748563242855003)), ((vt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1 IN ()), (rt0.c1 IN (0.5562505893547272)), CAST(rt0.c3 AS REAL)))<((((rt0.c2)|(rt0.c2)), (~ (0.4748563242855003)), ((vt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 IN ()), (rt0.c1 IN (0.5562505893547272)), CAST(rt0.c3 AS REAL)))<((((rt0.c2)|(rt0.c2)), (~ (0.4748563242855003)), ((vt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1 IN ()), (rt0.c1 IN (0.5562505893547272)), CAST(rt0.c3 AS REAL)))<((((rt0.c2)|(rt0.c2)), (~ (0.4748563242855003)), ((vt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))));
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT ALL * FROM vt0, rt0 WHERE (((INSTR(vt0.c2, rt0.c0)) IS FALSE)) ORDER BY (~ (vt0.c1 COLLATE RTRIM)) DESC, CASE WHEN vt0.c0 COLLATE RTRIM THEN (- (vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((INSTR(vt0.c2, rt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (vt0.c1 COLLATE RTRIM)) DESC, CASE WHEN vt0.c0 COLLATE RTRIM THEN (- (vt0.c0)) END  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((INSTR(vt0.c2, rt0.c0)) IS FALSE)) ORDER BY (~ (vt0.c1 COLLATE RTRIM)) DESC, CASE WHEN vt0.c0 COLLATE RTRIM THEN (- (vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((INSTR(vt0.c2, rt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (vt0.c1 COLLATE RTRIM)) DESC, CASE WHEN vt0.c0 COLLATE RTRIM THEN (- (vt0.c0)) END  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((INSTR(vt0.c2, rt0.c0)) IS FALSE)) ORDER BY (~ (vt0.c1 COLLATE RTRIM)) DESC, CASE WHEN vt0.c0 COLLATE RTRIM THEN (- (vt0.c0)) END  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN LIKE(rt0.c0, rt0.c0) THEN (rt0.c2 IN ()) WHEN TRIM(rt0.c1, rt0.c1) THEN ((rt0.c1) NOTNULL) WHEN rt0.c2 THEN ((1477356175) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN ((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)) WHEN ((rt0.c1) NOTNULL) THEN ((((vt0.c2)AND('-852958691')))AND(rt0.c4)) END) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKE(rt0.c0, rt0.c0) THEN (rt0.c2 IN ()) WHEN TRIM(rt0.c1, rt0.c1) THEN ((rt0.c1) NOTNULL) WHEN rt0.c2 THEN ((1477356175) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN ((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)) WHEN ((rt0.c1) NOTNULL) THEN ((((vt0.c2)AND('-852958691')))AND(rt0.c4)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN LIKE(rt0.c0, rt0.c0) THEN (rt0.c2 IN ()) WHEN TRIM(rt0.c1, rt0.c1) THEN ((rt0.c1) NOTNULL) WHEN rt0.c2 THEN ((1477356175) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN ((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)) WHEN ((rt0.c1) NOTNULL) THEN ((((vt0.c2)AND('-852958691')))AND(rt0.c4)) END) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKE(rt0.c0, rt0.c0) THEN (rt0.c2 IN ()) WHEN TRIM(rt0.c1, rt0.c1) THEN ((rt0.c1) NOTNULL) WHEN rt0.c2 THEN ((1477356175) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN ((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)) WHEN ((rt0.c1) NOTNULL) THEN ((((vt0.c2)AND('-852958691')))AND(rt0.c4)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN LIKE(rt0.c0, rt0.c0) THEN (rt0.c2 IN ()) WHEN TRIM(rt0.c1, rt0.c1) THEN ((rt0.c1) NOTNULL) WHEN rt0.c2 THEN ((1477356175) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN ((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)) WHEN ((rt0.c1) NOTNULL) THEN ((((vt0.c2)AND('-852958691')))AND(rt0.c4)) END) ORDER BY NULL DESC;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (ROUND(rt0.c2, rt0.c1) IN (HEX(vt0.c0), CASE vt0.c2  WHEN rt0.c1 THEN '' ELSE rt0.c4 END)) WHERE ((NOT ((+ (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (vt0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (ROUND(rt0.c2, rt0.c1) IN (HEX(vt0.c0), CASE vt0.c2  WHEN rt0.c1 THEN '' ELSE rt0.c4 END)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (ROUND(rt0.c2, rt0.c1) IN (HEX(vt0.c0), CASE vt0.c2  WHEN rt0.c1 THEN '' ELSE rt0.c4 END)) WHERE ((NOT ((+ (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (vt0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (ROUND(rt0.c2, rt0.c1) IN (HEX(vt0.c0), CASE vt0.c2  WHEN rt0.c1 THEN '' ELSE rt0.c4 END)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (ROUND(rt0.c2, rt0.c1) IN (HEX(vt0.c0), CASE vt0.c2  WHEN rt0.c1 THEN '' ELSE rt0.c4 END)) WHERE ((NOT ((+ (vt0.c2)))));
SELECT ALL * FROM rt0, vt0 WHERE ((((CAST(vt0.c1 AS NUMERIC), x'7c25', -1.084281893E9))==(((NULL IN (vt0.c1, vt0.c2)), CAST(vt0.c1 AS INTEGER), ((vt0.c2) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c1 AS NUMERIC), x'7c25', -1.084281893E9))=(((NULL IN (vt0.c1, vt0.c2)), CAST(vt0.c1 AS INTEGER), ((vt0.c2) IS TRUE))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((CAST(vt0.c1 AS NUMERIC), x'7c25', -1.084281893E9))==(((NULL IN (vt0.c1, vt0.c2)), CAST(vt0.c1 AS INTEGER), ((vt0.c2) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c1 AS NUMERIC), x'7c25', -1.084281893E9))=(((NULL IN (vt0.c1, vt0.c2)), CAST(vt0.c1 AS INTEGER), ((vt0.c2) IS TRUE))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((CAST(vt0.c1 AS NUMERIC), x'7c25', -1.084281893E9))==(((NULL IN (vt0.c1, vt0.c2)), CAST(vt0.c1 AS INTEGER), ((vt0.c2) IS TRUE)))));
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0) NOTNULL))<=(CASE vt0.c1  WHEN vt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL))<=(CASE vt0.c1  WHEN vt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0) NOTNULL))<=(CASE vt0.c1  WHEN vt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL))<=(CASE vt0.c1  WHEN vt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0) NOTNULL))<=(CASE vt0.c1  WHEN vt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c3)>=(rt0.c1)))>=(((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))) ASC, UNICODE(((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)>=(rt0.c1)))>=(((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))) ASC, UNICODE(((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1))) DESC);
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c3)>=(rt0.c1)))>=(((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))) ASC, UNICODE(((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)>=(rt0.c1)))>=(((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))) ASC, UNICODE(((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1))) DESC);
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c3)>=(rt0.c1)))>=(((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))) ASC, UNICODE(((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1))) DESC;
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY ((((rt0.c0)+(rt0.c3)))||(((((rt0.c2)OR(rt0.c0)))AND(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 ORDER BY ((((rt0.c0)+(rt0.c3)))||(((((rt0.c2)OR(rt0.c0)))AND(vt0.c1)))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY ((((rt0.c0)+(rt0.c3)))||(((((rt0.c2)OR(rt0.c0)))AND(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 ORDER BY ((((rt0.c0)+(rt0.c3)))||(((((rt0.c2)OR(rt0.c0)))AND(vt0.c1)))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY ((((rt0.c0)+(rt0.c3)))||(((((rt0.c2)OR(rt0.c0)))AND(vt0.c1)))) ASC;
SELECT * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c2)))AND(-1.245634478E9))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c2)))AND(-1.245634478E9))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c2)))AND(-1.245634478E9))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c2)))AND(-1.245634478E9))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c2)))AND(-1.245634478E9))) ISNULL));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON vt0.c0 WHERE (vt0.c1) ORDER BY json_array(rt0.c1, ((vt0.c2)+(vt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON vt0.c0 ORDER BY json_array(rt0.c1, ((vt0.c2)+(vt0.c2))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON vt0.c0 WHERE (vt0.c1) ORDER BY json_array(rt0.c1, ((vt0.c2)+(vt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON vt0.c0 ORDER BY json_array(rt0.c1, ((vt0.c2)+(vt0.c2))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON vt0.c0 WHERE (vt0.c1) ORDER BY json_array(rt0.c1, ((vt0.c2)+(vt0.c2))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) NOT NULL)) ORDER BY CASE WHEN (~ (rt0.c2)) THEN ((rt0.c3)+(rt0.c4)) END;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (~ (rt0.c2)) THEN ((rt0.c3)+(rt0.c4)) END);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) NOT NULL)) ORDER BY CASE WHEN (~ (rt0.c2)) THEN ((rt0.c3)+(rt0.c4)) END;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (~ (rt0.c2)) THEN ((rt0.c3)+(rt0.c4)) END);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) NOT NULL)) ORDER BY CASE WHEN (~ (rt0.c2)) THEN ((rt0.c3)+(rt0.c4)) END;
SELECT ALL * FROM vt0, rt0 WHERE ((((('1084817474')>=(rt0.c4))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (1003277054 COLLATE RTRIM))) ORDER BY CAST(((rt0.c1)-(rt0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('1084817474')>=(rt0.c4))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (1003277054 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c1)-(rt0.c0)) AS NUMERIC) DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((((('1084817474')>=(rt0.c4))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (1003277054 COLLATE RTRIM))) ORDER BY CAST(((rt0.c1)-(rt0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('1084817474')>=(rt0.c4))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (1003277054 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c1)-(rt0.c0)) AS NUMERIC) DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((((('1084817474')>=(rt0.c4))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (1003277054 COLLATE RTRIM))) ORDER BY CAST(((rt0.c1)-(rt0.c0)) AS NUMERIC) DESC;
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1) NOTNULL)  WHEN (((vt0.c0, vt0.c0, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c1, 0.9114289512130115)) AND ((vt0.c1, vt0.c2, vt0.c2))) THEN (vt0.c0 IN (vt0.c1)) WHEN (NOT (vt0.c0)) THEN vt0.c2 WHEN (+ (vt0.c0)) THEN x'' END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1) NOTNULL)  WHEN (((vt0.c0, vt0.c0, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c1, 0.9114289512130115)) AND ((vt0.c1, vt0.c2, vt0.c2))) THEN (vt0.c0 IN (vt0.c1)) WHEN (NOT (vt0.c0)) THEN vt0.c2 WHEN (+ (vt0.c0)) THEN x'' END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1) NOTNULL)  WHEN (((vt0.c0, vt0.c0, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c1, 0.9114289512130115)) AND ((vt0.c1, vt0.c2, vt0.c2))) THEN (vt0.c0 IN (vt0.c1)) WHEN (NOT (vt0.c0)) THEN vt0.c2 WHEN (+ (vt0.c0)) THEN x'' END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1) NOTNULL)  WHEN (((vt0.c0, vt0.c0, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c1, 0.9114289512130115)) AND ((vt0.c1, vt0.c2, vt0.c2))) THEN (vt0.c0 IN (vt0.c1)) WHEN (NOT (vt0.c0)) THEN vt0.c2 WHEN (+ (vt0.c0)) THEN x'' END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1) NOTNULL)  WHEN (((vt0.c0, vt0.c0, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c1, 0.9114289512130115)) AND ((vt0.c1, vt0.c2, vt0.c2))) THEN (vt0.c0 IN (vt0.c1)) WHEN (NOT (vt0.c0)) THEN vt0.c2 WHEN (+ (vt0.c0)) THEN x'' END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c3)*(rt0.c0)) IN (CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)*(rt0.c0)) IN (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c3)*(rt0.c0)) IN (CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)*(rt0.c0)) IN (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c3)*(rt0.c0)) IN (CAST(rt0.c1 AS INTEGER))));
SELECT * FROM rt0, vt0 WHERE (CASE WHEN vt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c2 THEN NULL WHEN NULL THEN x'a330' WHEN vt0.c2 THEN rt0.c1 END COLLATE NOCASE) ORDER BY ((CASE WHEN '' THEN rt0.c3 WHEN vt0.c2 THEN rt0.c3 WHEN x'656c' THEN vt0.c2 END)>>(((vt0.c1) BETWEEN (rt0.c4) AND (vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c2 THEN NULL WHEN NULL THEN x'a330' WHEN vt0.c2 THEN rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN '' THEN rt0.c3 WHEN vt0.c2 THEN rt0.c3 WHEN x'656c' THEN vt0.c2 END)>>(((vt0.c1) BETWEEN (rt0.c4) AND (vt0.c2)))));
SELECT * FROM rt0, vt0 WHERE (CASE WHEN vt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c2 THEN NULL WHEN NULL THEN x'a330' WHEN vt0.c2 THEN rt0.c1 END COLLATE NOCASE) ORDER BY ((CASE WHEN '' THEN rt0.c3 WHEN vt0.c2 THEN rt0.c3 WHEN x'656c' THEN vt0.c2 END)>>(((vt0.c1) BETWEEN (rt0.c4) AND (vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c2 THEN NULL WHEN NULL THEN x'a330' WHEN vt0.c2 THEN rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN '' THEN rt0.c3 WHEN vt0.c2 THEN rt0.c3 WHEN x'656c' THEN vt0.c2 END)>>(((vt0.c1) BETWEEN (rt0.c4) AND (vt0.c2)))));
SELECT * FROM rt0, vt0 WHERE (CASE WHEN vt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c2 THEN NULL WHEN NULL THEN x'a330' WHEN vt0.c2 THEN rt0.c1 END COLLATE NOCASE) ORDER BY ((CASE WHEN '' THEN rt0.c3 WHEN vt0.c2 THEN rt0.c3 WHEN x'656c' THEN vt0.c2 END)>>(((vt0.c1) BETWEEN (rt0.c4) AND (vt0.c2))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (TYPEOF(DISTINCT ((vt0.c1) IS FALSE))) ORDER BY ((((rt0.c3)LIKE(vt0.c0)))LIKE(327197629)) ASC  NULLS LAST, ((((rt0.c3 IN ())))<>((vt0.c1 COLLATE NOCASE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((vt0.c1) IS FALSE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3)LIKE(vt0.c0)))LIKE(327197629)) ASC  NULLS LAST, ((((rt0.c3 IN ())))!=((vt0.c1 COLLATE NOCASE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (TYPEOF(DISTINCT ((vt0.c1) IS FALSE))) ORDER BY ((((rt0.c3)LIKE(vt0.c0)))LIKE(327197629)) ASC  NULLS LAST, ((((rt0.c3 IN ())))<>((vt0.c1 COLLATE NOCASE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((vt0.c1) IS FALSE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3)LIKE(vt0.c0)))LIKE(327197629)) ASC  NULLS LAST, ((((rt0.c3 IN ())))!=((vt0.c1 COLLATE NOCASE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (TYPEOF(DISTINCT ((vt0.c1) IS FALSE))) ORDER BY ((((rt0.c3)LIKE(vt0.c0)))LIKE(327197629)) ASC  NULLS LAST, ((((rt0.c3 IN ())))<>((vt0.c1 COLLATE NOCASE))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((LENGTH(vt0.c1)) BETWEEN (((0.2990912933159946)+(vt0.c0))) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(vt0.c1)) BETWEEN (((0.2990912933159946)+(vt0.c0))) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((LENGTH(vt0.c1)) BETWEEN (((0.2990912933159946)+(vt0.c0))) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(vt0.c1)) BETWEEN (((0.2990912933159946)+(vt0.c0))) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((LENGTH(vt0.c1)) BETWEEN (((0.2990912933159946)+(vt0.c0))) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c4)/(0.6713912861530122))) NOT BETWEEN (TRIM(DISTINCT rt0.c3)) AND (((rt0.c2)>=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)/(0.6713912861530122))) NOT BETWEEN (TRIM(DISTINCT rt0.c3)) AND (((rt0.c2)>=(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c4)/(0.6713912861530122))) NOT BETWEEN (TRIM(DISTINCT rt0.c3)) AND (((rt0.c2)>=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)/(0.6713912861530122))) NOT BETWEEN (TRIM(DISTINCT rt0.c3)) AND (((rt0.c2)>=(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c4)/(0.6713912861530122))) NOT BETWEEN (TRIM(DISTINCT rt0.c3)) AND (((rt0.c2)>=(rt0.c0)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (~ (((rt0.c2) BETWEEN (0.7283975395839369) AND (rt0.c0)))) WHERE (((((rt0.c0) IS FALSE)) BETWEEN ((((rt0.c4))<((vt0.c0)))) AND (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4))))) ORDER BY (((NOT (vt0.c1)))==(NULL COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE)) BETWEEN ((((rt0.c4))<((vt0.c0)))) AND (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (~ (((rt0.c2) BETWEEN (0.7283975395839369) AND (rt0.c0)))) ORDER BY (((NOT (vt0.c1)))=(NULL COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (~ (((rt0.c2) BETWEEN (0.7283975395839369) AND (rt0.c0)))) WHERE (((((rt0.c0) IS FALSE)) BETWEEN ((((rt0.c4))<((vt0.c0)))) AND (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4))))) ORDER BY (((NOT (vt0.c1)))==(NULL COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE)) BETWEEN ((((rt0.c4))<((vt0.c0)))) AND (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (~ (((rt0.c2) BETWEEN (0.7283975395839369) AND (rt0.c0)))) ORDER BY (((NOT (vt0.c1)))=(NULL COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (~ (((rt0.c2) BETWEEN (0.7283975395839369) AND (rt0.c0)))) WHERE (((((rt0.c0) IS FALSE)) BETWEEN ((((rt0.c4))<((vt0.c0)))) AND (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4))))) ORDER BY (((NOT (vt0.c1)))==(NULL COLLATE NOCASE)) ASC;
SELECT * FROM rt0 WHERE ((TRIM(DISTINCT rt0.c2) IN ())) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT rt0.c2) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 COLLATE RTRIM AS INTEGER) DESC);
SELECT * FROM rt0 WHERE ((TRIM(DISTINCT rt0.c2) IN ())) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT rt0.c2) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 COLLATE RTRIM AS INTEGER) DESC);
SELECT * FROM rt0 WHERE ((TRIM(DISTINCT rt0.c2) IN ())) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS INTEGER) DESC;
SELECT ALL * FROM vt0, rt0 WHERE ((rt0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((rt0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((rt0.c0 IN ()) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c2)AND(rt0.c4)))OR(rt0.c3))) NOT BETWEEN (((('np'))>(('-2052025222')))) AND (vt0.c2))) ORDER BY COALESCE(((rt0.c0)IS NOT(vt0.c1)), ((rt0.c2) IS TRUE), CASE WHEN '1477356175' THEN rt0.c1 END, (vt0.c2 IN (rt0.c4))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c3))) NOT BETWEEN (((('np'))>(('-2052025222')))) AND (vt0.c2))) IS TRUE)  as count FROM vt0, rt0 ORDER BY COALESCE(((rt0.c0)IS NOT(vt0.c1)), ((rt0.c2) IS TRUE), CASE WHEN '1477356175' THEN rt0.c1 END, (vt0.c2 IN (rt0.c4))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c2)AND(rt0.c4)))OR(rt0.c3))) NOT BETWEEN (((('np'))>(('-2052025222')))) AND (vt0.c2))) ORDER BY COALESCE(((rt0.c0)IS NOT(vt0.c1)), ((rt0.c2) IS TRUE), CASE WHEN '1477356175' THEN rt0.c1 END, (vt0.c2 IN (rt0.c4))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c3))) NOT BETWEEN (((('np'))>(('-2052025222')))) AND (vt0.c2))) IS TRUE)  as count FROM vt0, rt0 ORDER BY COALESCE(((rt0.c0)IS NOT(vt0.c1)), ((rt0.c2) IS TRUE), CASE WHEN '1477356175' THEN rt0.c1 END, (vt0.c2 IN (rt0.c4))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c2)AND(rt0.c4)))OR(rt0.c3))) NOT BETWEEN (((('np'))>(('-2052025222')))) AND (vt0.c2))) ORDER BY COALESCE(((rt0.c0)IS NOT(vt0.c1)), ((rt0.c2) IS TRUE), CASE WHEN '1477356175' THEN rt0.c1 END, (vt0.c2 IN (rt0.c4))) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (CASE WHEN 'Br<.%H‡¨îp' THEN ((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)))OR(rt0.c2)))AND(rt0.c1)) ELSE ((rt0.c0)=(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 'Br<.%H‡¨îp' THEN ((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)))OR(rt0.c2)))AND(rt0.c1)) ELSE ((rt0.c0)==(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN 'Br<.%H‡¨îp' THEN ((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)))OR(rt0.c2)))AND(rt0.c1)) ELSE ((rt0.c0)=(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 'Br<.%H‡¨îp' THEN ((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)))OR(rt0.c2)))AND(rt0.c1)) ELSE ((rt0.c0)==(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN 'Br<.%H‡¨îp' THEN ((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)))OR(rt0.c2)))AND(rt0.c1)) ELSE ((rt0.c0)=(rt0.c1)) END);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN NULL THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END COLLATE RTRIM) ORDER BY CASE WHEN ((((vt0.c2)AND(vt0.c2)))OR(x'')) THEN x'5f8a' ELSE json_valid(vt0.c2) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY CASE WHEN ((((vt0.c2)AND(vt0.c2)))OR(x'')) THEN x'5f8a' ELSE json_valid(vt0.c2) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN NULL THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END COLLATE RTRIM) ORDER BY CASE WHEN ((((vt0.c2)AND(vt0.c2)))OR(x'')) THEN x'5f8a' ELSE json_valid(vt0.c2) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY CASE WHEN ((((vt0.c2)AND(vt0.c2)))OR(x'')) THEN x'5f8a' ELSE json_valid(vt0.c2) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN NULL THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END COLLATE RTRIM) ORDER BY CASE WHEN ((((vt0.c2)AND(vt0.c2)))OR(x'')) THEN x'5f8a' ELSE json_valid(vt0.c2) END  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (CAST((vt0.c1 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST((vt0.c1 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST((vt0.c1 IN ()) AS INTEGER));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c2) NOTNULL))OR(CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c1 END)))AND(-8.36098956E8)) WHERE ((((((rt0.c3)>>(rt0.c2)), UPPER(0xffffffff9b106dd5), ((rt0.c0)*(rt0.c0))))<=((((((rt0.c3)OR(vt0.c2)))AND(rt0.c3)), ((vt0.c1)<<(vt0.c0)), vt0.c1 COLLATE NOCASE)))) ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(rt0.c1)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)>>(rt0.c2)), UPPER(0xffffffff9b106dd5), ((rt0.c0)*(rt0.c0))))<=((((((rt0.c3)OR(vt0.c2)))AND(rt0.c3)), ((vt0.c1)<<(vt0.c0)), vt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c2) NOTNULL))OR(CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c1 END)))AND(-8.36098956E8)) ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(rt0.c1)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c2) NOTNULL))OR(CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c1 END)))AND(-8.36098956E8)) WHERE ((((((rt0.c3)>>(rt0.c2)), UPPER(0xffffffff9b106dd5), ((rt0.c0)*(rt0.c0))))<=((((((rt0.c3)OR(vt0.c2)))AND(rt0.c3)), ((vt0.c1)<<(vt0.c0)), vt0.c1 COLLATE NOCASE)))) ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(rt0.c1)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)>>(rt0.c2)), UPPER(0xffffffff9b106dd5), ((rt0.c0)*(rt0.c0))))<=((((((rt0.c3)OR(vt0.c2)))AND(rt0.c3)), ((vt0.c1)<<(vt0.c0)), vt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c2) NOTNULL))OR(CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c1 END)))AND(-8.36098956E8)) ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(rt0.c1)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c2) NOTNULL))OR(CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c1 END)))AND(-8.36098956E8)) WHERE ((((((rt0.c3)>>(rt0.c2)), UPPER(0xffffffff9b106dd5), ((rt0.c0)*(rt0.c0))))<=((((((rt0.c3)OR(vt0.c2)))AND(rt0.c3)), ((vt0.c1)<<(vt0.c0)), vt0.c1 COLLATE NOCASE)))) ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(rt0.c1)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((~ (TRIM(rt0.c4, rt0.c2)))) ORDER BY ((((rt0.c1)<>(rt0.c0))) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))) AND (((rt0.c1)LIKE(rt0.c4)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (TRIM(rt0.c4, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<>(rt0.c0))) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))) AND (((rt0.c1)LIKE(rt0.c4)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((~ (TRIM(rt0.c4, rt0.c2)))) ORDER BY ((((rt0.c1)<>(rt0.c0))) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))) AND (((rt0.c1)LIKE(rt0.c4)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (TRIM(rt0.c4, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<>(rt0.c0))) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))) AND (((rt0.c1)LIKE(rt0.c4)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((~ (TRIM(rt0.c4, rt0.c2)))) ORDER BY ((((rt0.c1)<>(rt0.c0))) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))) AND (((rt0.c1)LIKE(rt0.c4)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c1)!=(vt0.c1)) COLLATE NOCASE WHERE ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) IN ())) ORDER BY (CAST(rt0.c1 AS TEXT) IN ()) DESC, ((((rt0.c0) ISNULL))<=((((rt0.c3)) BETWEEN (('pl')) AND ((0.1289010637205017))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c1)<>(vt0.c1)) COLLATE NOCASE ORDER BY (CAST(rt0.c1 AS TEXT) IN ()) DESC, ((((rt0.c0) ISNULL))<=((((rt0.c3)) BETWEEN (('pl')) AND ((0.1289010637205017))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c1)!=(vt0.c1)) COLLATE NOCASE WHERE ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) IN ())) ORDER BY (CAST(rt0.c1 AS TEXT) IN ()) DESC, ((((rt0.c0) ISNULL))<=((((rt0.c3)) BETWEEN (('pl')) AND ((0.1289010637205017))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c1)<>(vt0.c1)) COLLATE NOCASE ORDER BY (CAST(rt0.c1 AS TEXT) IN ()) DESC, ((((rt0.c0) ISNULL))<=((((rt0.c3)) BETWEEN (('pl')) AND ((0.1289010637205017))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c1)!=(vt0.c1)) COLLATE NOCASE WHERE ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) IN ())) ORDER BY (CAST(rt0.c1 AS TEXT) IN ()) DESC, ((((rt0.c0) ISNULL))<=((((rt0.c3)) BETWEEN (('pl')) AND ((0.1289010637205017))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'');
SELECT COUNT(*) FROM vt0, rt0 WHERE ((~ (((((vt0.c0)AND(vt0.c2)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c0)AND(vt0.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((~ (((((vt0.c0)AND(vt0.c2)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c0)AND(vt0.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((~ (((((vt0.c0)AND(vt0.c2)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c4 AS INTEGER) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c4 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c4 AS INTEGER) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c4 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c4 AS INTEGER) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (('^c' IN ()));
SELECT SUM(count) FROM (SELECT ((('^c' IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (('^c' IN ()));
SELECT SUM(count) FROM (SELECT ((('^c' IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (('^c' IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c1)/(vt0.c1)) THEN rt0.c4 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)/(vt0.c1)) THEN rt0.c4 END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c1)/(vt0.c1)) THEN rt0.c4 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)/(vt0.c1)) THEN rt0.c4 END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c1)/(vt0.c1)) THEN rt0.c4 END);
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY ((((((rt0.c4)OR(rt0.c4)))OR(rt0.c0)))>((- (NULL)))) ASC, CAST('HN' AS REAL) DESC  NULLS LAST, ((((rt0.c2)AND(((rt0.c0)>(x'')))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c4)OR(rt0.c4)))OR(rt0.c0)))>((- (NULL)))) ASC, CAST('HN' AS REAL) DESC  NULLS LAST, ((((rt0.c2)AND(((rt0.c0)>(x'')))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)) DESC);
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY ((((((rt0.c4)OR(rt0.c4)))OR(rt0.c0)))>((- (NULL)))) ASC, CAST('HN' AS REAL) DESC  NULLS LAST, ((((rt0.c2)AND(((rt0.c0)>(x'')))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c4)OR(rt0.c4)))OR(rt0.c0)))>((- (NULL)))) ASC, CAST('HN' AS REAL) DESC  NULLS LAST, ((((rt0.c2)AND(((rt0.c0)>(x'')))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)) DESC);
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY ((((((rt0.c4)OR(rt0.c4)))OR(rt0.c0)))>((- (NULL)))) ASC, CAST('HN' AS REAL) DESC  NULLS LAST, ((((rt0.c2)AND(((rt0.c0)>(x'')))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ('iDdL') ORDER BY CAST(((vt0.c2)||(vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT (('iDdL') IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c2)||(vt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE ('iDdL') ORDER BY CAST(((vt0.c2)||(vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT (('iDdL') IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c2)||(vt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE ('iDdL') ORDER BY CAST(((vt0.c2)||(vt0.c0)) AS REAL);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((rt0.c4 IN ()) COLLATE NOCASE) ORDER BY ((((-467569443) NOT BETWEEN (vt0.c2) AND (rt0.c3))) BETWEEN (((rt0.c4) NOTNULL)) AND (((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c4 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((-467569443) NOT BETWEEN (vt0.c2) AND (rt0.c3))) BETWEEN (((rt0.c4) NOTNULL)) AND (((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((rt0.c4 IN ()) COLLATE NOCASE) ORDER BY ((((-467569443) NOT BETWEEN (vt0.c2) AND (rt0.c3))) BETWEEN (((rt0.c4) NOTNULL)) AND (((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c4 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((-467569443) NOT BETWEEN (vt0.c2) AND (rt0.c3))) BETWEEN (((rt0.c4) NOTNULL)) AND (((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((rt0.c4 IN ()) COLLATE NOCASE) ORDER BY ((((-467569443) NOT BETWEEN (vt0.c2) AND (rt0.c3))) BETWEEN (((rt0.c4) NOTNULL)) AND (((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)))) ASC;
SELECT ALL * FROM rt0 WHERE ('1479797188');
SELECT SUM(count) FROM (SELECT (('1479797188') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('1479797188');
SELECT SUM(count) FROM (SELECT (('1479797188') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('1479797188');
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (((((((('2108315154')AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)) THEN ((rt0.c1)<<(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((((((('2108315154')AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)) THEN ((rt0.c1)<<(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (((((((('2108315154')AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)) THEN ((rt0.c1)<<(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((((((('2108315154')AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)) THEN ((rt0.c1)<<(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (((((((('2108315154')AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)) THEN ((rt0.c1)<<(rt0.c0)) END);
SELECT ALL * FROM rt0, vt0 NOT INDEXED WHERE ((((rt0.c0)GLOB(rt0.c2)) IN (RTRIM(0.118380091765655)))) ORDER BY ((CASE vt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c4 ELSE rt0.c1 END)<>((((vt0.c1, vt0.c0, vt0.c2))=((rt0.c1, rt0.c2, rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)GLOB(rt0.c2)) IN (RTRIM(0.118380091765655)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE vt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c4 ELSE rt0.c1 END)<>((((vt0.c1, vt0.c0, vt0.c2))==((rt0.c1, rt0.c2, rt0.c0)))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 NOT INDEXED WHERE ((((rt0.c0)GLOB(rt0.c2)) IN (RTRIM(0.118380091765655)))) ORDER BY ((CASE vt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c4 ELSE rt0.c1 END)<>((((vt0.c1, vt0.c0, vt0.c2))=((rt0.c1, rt0.c2, rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)GLOB(rt0.c2)) IN (RTRIM(0.118380091765655)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE vt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c4 ELSE rt0.c1 END)<>((((vt0.c1, vt0.c0, vt0.c2))==((rt0.c1, rt0.c2, rt0.c0)))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 NOT INDEXED WHERE ((((rt0.c0)GLOB(rt0.c2)) IN (RTRIM(0.118380091765655)))) ORDER BY ((CASE vt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c4 ELSE rt0.c1 END)<>((((vt0.c1, vt0.c0, vt0.c2))=((rt0.c1, rt0.c2, rt0.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((NOT (IFNULL(DISTINCT rt0.c1, NULL))));
SELECT SUM(count) FROM (SELECT (((NOT (IFNULL(DISTINCT rt0.c1, NULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((NOT (IFNULL(DISTINCT rt0.c1, NULL))));
SELECT SUM(count) FROM (SELECT (((NOT (IFNULL(DISTINCT rt0.c1, NULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((NOT (IFNULL(DISTINCT rt0.c1, NULL))));
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c2 ELSE rt0.c4 END) BETWEEN ((~ (rt0.c4))) AND (CASE WHEN rt0.c2 THEN rt0.c3 END)) ASC  NULLS FIRST, (((rt0.c0 IN (rt0.c1))) NOT BETWEEN (rt0.c0) AND (((rt0.c1)LIKE(rt0.c3)))), rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c2 ELSE rt0.c4 END) BETWEEN ((~ (rt0.c4))) AND (CASE WHEN rt0.c2 THEN rt0.c3 END)) ASC  NULLS FIRST, (((rt0.c0 IN (rt0.c1))) NOT BETWEEN (rt0.c0) AND (((rt0.c1)LIKE(rt0.c3)))), rt0.c1 ASC);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c2 ELSE rt0.c4 END) BETWEEN ((~ (rt0.c4))) AND (CASE WHEN rt0.c2 THEN rt0.c3 END)) ASC  NULLS FIRST, (((rt0.c0 IN (rt0.c1))) NOT BETWEEN (rt0.c0) AND (((rt0.c1)LIKE(rt0.c3)))), rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c2 ELSE rt0.c4 END) BETWEEN ((~ (rt0.c4))) AND (CASE WHEN rt0.c2 THEN rt0.c3 END)) ASC  NULLS FIRST, (((rt0.c0 IN (rt0.c1))) NOT BETWEEN (rt0.c0) AND (((rt0.c1)LIKE(rt0.c3)))), rt0.c1 ASC);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c2 ELSE rt0.c4 END) BETWEEN ((~ (rt0.c4))) AND (CASE WHEN rt0.c2 THEN rt0.c3 END)) ASC  NULLS FIRST, (((rt0.c0 IN (rt0.c1))) NOT BETWEEN (rt0.c0) AND (((rt0.c1)LIKE(rt0.c3)))), rt0.c1 ASC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((NOT ((rt0.c1 IN ())))) ORDER BY LTRIM(vt0.c1 COLLATE BINARY)  NULLS LAST, ((rt0.c3 COLLATE NOCASE) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0 NOT INDEXED NATURAL JOIN rt0 ORDER BY LTRIM(vt0.c1 COLLATE BINARY)  NULLS LAST, ((rt0.c3 COLLATE NOCASE) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((NOT ((rt0.c1 IN ())))) ORDER BY LTRIM(vt0.c1 COLLATE BINARY)  NULLS LAST, ((rt0.c3 COLLATE NOCASE) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0 NOT INDEXED NATURAL JOIN rt0 ORDER BY LTRIM(vt0.c1 COLLATE BINARY)  NULLS LAST, ((rt0.c3 COLLATE NOCASE) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((NOT ((rt0.c1 IN ())))) ORDER BY LTRIM(vt0.c1 COLLATE BINARY)  NULLS LAST, ((rt0.c3 COLLATE NOCASE) ISNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c2)+(rt0.c4))) BETWEEN (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(NULL)))OR(rt0.c2))) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)+(rt0.c4))) BETWEEN (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(NULL)))OR(rt0.c2))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c2)+(rt0.c4))) BETWEEN (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(NULL)))OR(rt0.c2))) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)+(rt0.c4))) BETWEEN (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(NULL)))OR(rt0.c2))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c2)+(rt0.c4))) BETWEEN (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(NULL)))OR(rt0.c2))) AND ((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL)) IS FALSE));
SELECT * FROM vt0 WHERE ('-14017155') ORDER BY ((((((((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)OR((vt0.c2 IN ()))))AND(vt0.c2 COLLATE NOCASE)))OR(NULL)))AND(vt0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-14017155') IS TRUE)  as count FROM vt0 ORDER BY ((((((((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)OR((vt0.c2 IN ()))))AND(vt0.c2 COLLATE NOCASE)))OR(NULL)))AND(vt0.c1)) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ('-14017155') ORDER BY ((((((((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)OR((vt0.c2 IN ()))))AND(vt0.c2 COLLATE NOCASE)))OR(NULL)))AND(vt0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-14017155') IS TRUE)  as count FROM vt0 ORDER BY ((((((((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)OR((vt0.c2 IN ()))))AND(vt0.c2 COLLATE NOCASE)))OR(NULL)))AND(vt0.c1)) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ('-14017155') ORDER BY ((((((((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)OR((vt0.c2 IN ()))))AND(vt0.c2 COLLATE NOCASE)))OR(NULL)))AND(vt0.c1)) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (((IFNULL(rt0.c2, rt0.c3)) BETWEEN ((+ (NULL))) AND (''))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c2, rt0.c3)) BETWEEN ((+ (NULL))) AND (''))) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((IFNULL(rt0.c2, rt0.c3)) BETWEEN ((+ (NULL))) AND (''))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c2, rt0.c3)) BETWEEN ((+ (NULL))) AND (''))) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((IFNULL(rt0.c2, rt0.c3)) BETWEEN ((+ (NULL))) AND (''))) ORDER BY NULL  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (LIKELY(DISTINCT (0.6515828604185708 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (0.6515828604185708 IN ()))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LIKELY(DISTINCT (0.6515828604185708 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (0.6515828604185708 IN ()))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LIKELY(DISTINCT (0.6515828604185708 IN ())));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ORDER BY (vt0.c0 COLLATE BINARY IN (vt0.c2)) ASC  NULLS FIRST, (((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((LTRIM(x'', vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE BINARY IN (vt0.c2)) ASC  NULLS FIRST, (((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((LTRIM(x'', vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ORDER BY (vt0.c0 COLLATE BINARY IN (vt0.c2)) ASC  NULLS FIRST, (((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((LTRIM(x'', vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE BINARY IN (vt0.c2)) ASC  NULLS FIRST, (((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((LTRIM(x'', vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ORDER BY (vt0.c0 COLLATE BINARY IN (vt0.c2)) ASC  NULLS FIRST, (((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((LTRIM(x'', vt0.c0))));
SELECT * FROM rt0, vt0 WHERE (CAST(LTRIM(rt0.c4, rt0.c0) AS TEXT)) ORDER BY (((rt0.c3)) NOT BETWEEN ((CAST(vt0.c1 AS BLOB))) AND ((LOWER(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LTRIM(rt0.c4, rt0.c0) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c3)) NOT BETWEEN ((CAST(vt0.c1 AS BLOB))) AND ((LOWER(rt0.c3)))) DESC);
SELECT * FROM rt0, vt0 WHERE (CAST(LTRIM(rt0.c4, rt0.c0) AS TEXT)) ORDER BY (((rt0.c3)) NOT BETWEEN ((CAST(vt0.c1 AS BLOB))) AND ((LOWER(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LTRIM(rt0.c4, rt0.c0) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c3)) NOT BETWEEN ((CAST(vt0.c1 AS BLOB))) AND ((LOWER(rt0.c3)))) DESC);
SELECT * FROM rt0, vt0 WHERE (CAST(LTRIM(rt0.c4, rt0.c0) AS TEXT)) ORDER BY (((rt0.c3)) NOT BETWEEN ((CAST(vt0.c1 AS BLOB))) AND ((LOWER(rt0.c3)))) DESC;
SELECT ALL * FROM rt0 WHERE (((LIKELY(rt0.c0))-(((NULL)>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt0.c0))-(((NULL)>=(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((LIKELY(rt0.c0))-(((NULL)>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt0.c0))-(((NULL)>=(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((LIKELY(rt0.c0))-(((NULL)>=(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY CAST(((rt0.c4)|(rt0.c3)) AS INTEGER) DESC  NULLS LAST, SQLITE_COMPILEOPTION_USED(LIKELIHOOD(rt0.c0, 0.6455240512595647)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c4)|(rt0.c3)) AS INTEGER) DESC  NULLS LAST, SQLITE_COMPILEOPTION_USED(LIKELIHOOD(rt0.c0, 0.6455240512595647)) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY CAST(((rt0.c4)|(rt0.c3)) AS INTEGER) DESC  NULLS LAST, SQLITE_COMPILEOPTION_USED(LIKELIHOOD(rt0.c0, 0.6455240512595647)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c4)|(rt0.c3)) AS INTEGER) DESC  NULLS LAST, SQLITE_COMPILEOPTION_USED(LIKELIHOOD(rt0.c0, 0.6455240512595647)) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY CAST(((rt0.c4)|(rt0.c3)) AS INTEGER) DESC  NULLS LAST, SQLITE_COMPILEOPTION_USED(LIKELIHOOD(rt0.c0, 0.6455240512595647)) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN (((~ (rt0.c1)))) AND ((CAST(rt0.c2 AS BLOB))))) ORDER BY ((((vt0.c1)<(rt0.c4))) NOT BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.6743708089868282)) AND (rt0.c2));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((~ (rt0.c1)))) AND ((CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c1)<(rt0.c4))) NOT BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.6743708089868282)) AND (rt0.c2)));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN (((~ (rt0.c1)))) AND ((CAST(rt0.c2 AS BLOB))))) ORDER BY ((((vt0.c1)<(rt0.c4))) NOT BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.6743708089868282)) AND (rt0.c2));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((~ (rt0.c1)))) AND ((CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c1)<(rt0.c4))) NOT BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.6743708089868282)) AND (rt0.c2)));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN (((~ (rt0.c1)))) AND ((CAST(rt0.c2 AS BLOB))))) ORDER BY ((((vt0.c1)<(rt0.c4))) NOT BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.6743708089868282)) AND (rt0.c2));
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN NULL WHEN vt0.c0 THEN vt0.c2 END WHEN CAST(vt0.c0 AS BLOB) THEN CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END WHEN CAST(vt0.c2 AS INTEGER) THEN ((rt0.c3)LIKE(vt0.c2)) END) ORDER BY ((((((((((rt0.c1) BETWEEN (rt0.c4) AND (vt0.c2)))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c4)))))AND(CAST(rt0.c0 AS BLOB))))OR(CAST(NULL AS REAL))))OR(rt0.c3 COLLATE RTRIM)) DESC  NULLS FIRST, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN NULL WHEN vt0.c0 THEN vt0.c2 END WHEN CAST(vt0.c0 AS BLOB) THEN CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END WHEN CAST(vt0.c2 AS INTEGER) THEN ((rt0.c3)LIKE(vt0.c2)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((rt0.c1) BETWEEN (rt0.c4) AND (vt0.c2)))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c4)))))AND(CAST(rt0.c0 AS BLOB))))OR(CAST(NULL AS REAL))))OR(rt0.c3 COLLATE RTRIM)) DESC  NULLS FIRST, vt0.c0 DESC);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN NULL WHEN vt0.c0 THEN vt0.c2 END WHEN CAST(vt0.c0 AS BLOB) THEN CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END WHEN CAST(vt0.c2 AS INTEGER) THEN ((rt0.c3)LIKE(vt0.c2)) END) ORDER BY ((((((((((rt0.c1) BETWEEN (rt0.c4) AND (vt0.c2)))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c4)))))AND(CAST(rt0.c0 AS BLOB))))OR(CAST(NULL AS REAL))))OR(rt0.c3 COLLATE RTRIM)) DESC  NULLS FIRST, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN NULL WHEN vt0.c0 THEN vt0.c2 END WHEN CAST(vt0.c0 AS BLOB) THEN CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END WHEN CAST(vt0.c2 AS INTEGER) THEN ((rt0.c3)LIKE(vt0.c2)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((rt0.c1) BETWEEN (rt0.c4) AND (vt0.c2)))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c4)))))AND(CAST(rt0.c0 AS BLOB))))OR(CAST(NULL AS REAL))))OR(rt0.c3 COLLATE RTRIM)) DESC  NULLS FIRST, vt0.c0 DESC);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN NULL WHEN vt0.c0 THEN vt0.c2 END WHEN CAST(vt0.c0 AS BLOB) THEN CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END WHEN CAST(vt0.c2 AS INTEGER) THEN ((rt0.c3)LIKE(vt0.c2)) END) ORDER BY ((((((((((rt0.c1) BETWEEN (rt0.c4) AND (vt0.c2)))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c4)))))AND(CAST(rt0.c0 AS BLOB))))OR(CAST(NULL AS REAL))))OR(rt0.c3 COLLATE RTRIM)) DESC  NULLS FIRST, vt0.c0 DESC;
SELECT * FROM vt0 WHERE ('?+)1b');
SELECT SUM(count) FROM (SELECT ALL (('?+)1b') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('?+)1b');
SELECT SUM(count) FROM (SELECT ALL (('?+)1b') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('?+)1b');
SELECT ALL COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE (GLOB(((vt0.c1) NOTNULL), 0.0954364957418623 COLLATE BINARY)) ORDER BY ((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (0.291527527959889) AND (TRIM(rt0.c0, vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((GLOB(((vt0.c1) NOTNULL), 0.0954364957418623 COLLATE BINARY)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (0.291527527959889) AND (TRIM(rt0.c0, vt0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE (GLOB(((vt0.c1) NOTNULL), 0.0954364957418623 COLLATE BINARY)) ORDER BY ((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (0.291527527959889) AND (TRIM(rt0.c0, vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((GLOB(((vt0.c1) NOTNULL), 0.0954364957418623 COLLATE BINARY)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (0.291527527959889) AND (TRIM(rt0.c0, vt0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE (GLOB(((vt0.c1) NOTNULL), 0.0954364957418623 COLLATE BINARY)) ORDER BY ((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (0.291527527959889) AND (TRIM(rt0.c0, vt0.c1)))  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (((((rt0.c4) ISNULL)) NOT BETWEEN (0.5727309760286667) AND ('l')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) ISNULL)) NOT BETWEEN (0.5727309760286667) AND ('l'))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c4) ISNULL)) NOT BETWEEN (0.5727309760286667) AND ('l')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) ISNULL)) NOT BETWEEN (0.5727309760286667) AND ('l'))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c4) ISNULL)) NOT BETWEEN (0.5727309760286667) AND ('l')));
SELECT * FROM rt0 WHERE (((-573114031)>=(rt0.c4)) COLLATE RTRIM) ORDER BY (- (0.3434980052915315)) DESC  NULLS FIRST, ((((+ (rt0.c1))))>=((CAST(0.5215620780230644 AS BLOB)))) ASC, ((rt0.c1 COLLATE BINARY) NOT BETWEEN (CASE WHEN x'bca2' THEN rt0.c2 END) AND (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((-573114031)>=(rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (- (0.3434980052915315)) DESC  NULLS FIRST, ((((+ (rt0.c1))))>=((CAST(0.5215620780230644 AS BLOB)))) ASC, ((rt0.c1 COLLATE BINARY) NOT BETWEEN (CASE WHEN x'bca2' THEN rt0.c2 END) AND (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 END)) DESC);
SELECT * FROM rt0 WHERE (((-573114031)>=(rt0.c4)) COLLATE RTRIM) ORDER BY (- (0.3434980052915315)) DESC  NULLS FIRST, ((((+ (rt0.c1))))>=((CAST(0.5215620780230644 AS BLOB)))) ASC, ((rt0.c1 COLLATE BINARY) NOT BETWEEN (CASE WHEN x'bca2' THEN rt0.c2 END) AND (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((-573114031)>=(rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (- (0.3434980052915315)) DESC  NULLS FIRST, ((((+ (rt0.c1))))>=((CAST(0.5215620780230644 AS BLOB)))) ASC, ((rt0.c1 COLLATE BINARY) NOT BETWEEN (CASE WHEN x'bca2' THEN rt0.c2 END) AND (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 END)) DESC);
SELECT * FROM rt0 WHERE (((-573114031)>=(rt0.c4)) COLLATE RTRIM) ORDER BY (- (0.3434980052915315)) DESC  NULLS FIRST, ((((+ (rt0.c1))))>=((CAST(0.5215620780230644 AS BLOB)))) ASC, ((rt0.c1 COLLATE BINARY) NOT BETWEEN (CASE WHEN x'bca2' THEN rt0.c2 END) AND (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 END)) DESC;
SELECT * FROM rt0, vt0 WHERE ((((1099499556)) BETWEEN ((0.6079007423770753)) AND ((vt0.c2))) COLLATE BINARY) ORDER BY (IFNULL(DISTINCT rt0.c0, rt0.c3) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((1099499556)) BETWEEN ((0.6079007423770753)) AND ((vt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (IFNULL(DISTINCT rt0.c0, rt0.c3) IN ())  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((1099499556)) BETWEEN ((0.6079007423770753)) AND ((vt0.c2))) COLLATE BINARY) ORDER BY (IFNULL(DISTINCT rt0.c0, rt0.c3) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((1099499556)) BETWEEN ((0.6079007423770753)) AND ((vt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (IFNULL(DISTINCT rt0.c0, rt0.c3) IN ())  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((1099499556)) BETWEEN ((0.6079007423770753)) AND ((vt0.c2))) COLLATE BINARY) ORDER BY (IFNULL(DISTINCT rt0.c0, rt0.c3) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c1)<=(vt0.c0))) NOT BETWEEN (rt0.c3) AND (((rt0.c2) ISNULL))) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c1)<=(vt0.c0))) NOT BETWEEN (rt0.c3) AND (((rt0.c2) ISNULL))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c1)<=(vt0.c0))) NOT BETWEEN (rt0.c3) AND (((rt0.c2) ISNULL))) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c1)<=(vt0.c0))) NOT BETWEEN (rt0.c3) AND (((rt0.c2) ISNULL))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c1)<=(vt0.c0))) NOT BETWEEN (rt0.c3) AND (((rt0.c2) ISNULL))) WHERE ('');
SELECT COUNT(*) FROM vt0 WHERE (((((- (-836098956)), 0xffffffffdb6ef3a7, ((vt0.c2) ISNULL)))=(('-2142147566' COLLATE BINARY, ((vt0.c0)IS(vt0.c0)), vt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((- (-836098956)), 0xffffffffdb6ef3a7, ((vt0.c2) ISNULL)))=(('-2142147566' COLLATE BINARY, ((vt0.c0)IS(vt0.c0)), vt0.c2)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((- (-836098956)), 0xffffffffdb6ef3a7, ((vt0.c2) ISNULL)))=(('-2142147566' COLLATE BINARY, ((vt0.c0)IS(vt0.c0)), vt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((- (-836098956)), 0xffffffffdb6ef3a7, ((vt0.c2) ISNULL)))=(('-2142147566' COLLATE BINARY, ((vt0.c0)IS(vt0.c0)), vt0.c2)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((- (-836098956)), 0xffffffffdb6ef3a7, ((vt0.c2) ISNULL)))=(('-2142147566' COLLATE BINARY, ((vt0.c0)IS(vt0.c0)), vt0.c2))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE (- (rt0.c0))  WHEN ((rt0.c2)-(-1.399294261E9)) THEN ((x'') ISNULL) WHEN (('449723390') NOTNULL) THEN (((rt0.c0, rt0.c1, vt0.c2))==((vt0.c2, rt0.c2, NULL))) WHEN CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END THEN rt0.c4 END) ORDER BY 0.9114289512130115  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (rt0.c0))  WHEN ((rt0.c2)-(-1.399294261E9)) THEN ((x'') ISNULL) WHEN (('449723390') NOTNULL) THEN (((rt0.c0, rt0.c1, vt0.c2))==((vt0.c2, rt0.c2, NULL))) WHEN CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END THEN rt0.c4 END) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.9114289512130115  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE (- (rt0.c0))  WHEN ((rt0.c2)-(-1.399294261E9)) THEN ((x'') ISNULL) WHEN (('449723390') NOTNULL) THEN (((rt0.c0, rt0.c1, vt0.c2))==((vt0.c2, rt0.c2, NULL))) WHEN CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END THEN rt0.c4 END) ORDER BY 0.9114289512130115  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (rt0.c0))  WHEN ((rt0.c2)-(-1.399294261E9)) THEN ((x'') ISNULL) WHEN (('449723390') NOTNULL) THEN (((rt0.c0, rt0.c1, vt0.c2))==((vt0.c2, rt0.c2, NULL))) WHEN CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END THEN rt0.c4 END) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.9114289512130115  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE (- (rt0.c0))  WHEN ((rt0.c2)-(-1.399294261E9)) THEN ((x'') ISNULL) WHEN (('449723390') NOTNULL) THEN (((rt0.c0, rt0.c1, vt0.c2))==((vt0.c2, rt0.c2, NULL))) WHEN CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END THEN rt0.c4 END) ORDER BY 0.9114289512130115  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c1) ISNULL))OR(((((((((x'')AND(vt0.c2)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))))AND(CAST(vt0.c2 AS NUMERIC))))OR((vt0.c2 IN (vt0.c0)))))OR(((vt0.c1)OR(x''))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1) ISNULL))OR(((((((((x'')AND(vt0.c2)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))))AND(CAST(vt0.c2 AS NUMERIC))))OR((vt0.c2 IN (vt0.c0)))))OR(((vt0.c1)OR(x''))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c1) ISNULL))OR(((((((((x'')AND(vt0.c2)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))))AND(CAST(vt0.c2 AS NUMERIC))))OR((vt0.c2 IN (vt0.c0)))))OR(((vt0.c1)OR(x''))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1) ISNULL))OR(((((((((x'')AND(vt0.c2)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))))AND(CAST(vt0.c2 AS NUMERIC))))OR((vt0.c2 IN (vt0.c0)))))OR(((vt0.c1)OR(x''))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c1) ISNULL))OR(((((((((x'')AND(vt0.c2)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))))AND(CAST(vt0.c2 AS NUMERIC))))OR((vt0.c2 IN (vt0.c0)))))OR(((vt0.c1)OR(x''))))) ORDER BY vt0.c1 ASC;
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c0 AS TEXT))OR(CASE WHEN '7k' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END)))OR(x''))) ORDER BY CAST(x'' AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS TEXT))OR(CASE WHEN '7k' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END)))OR(x''))) IS TRUE)  as count FROM rt0 ORDER BY CAST(x'' AS REAL) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c0 AS TEXT))OR(CASE WHEN '7k' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END)))OR(x''))) ORDER BY CAST(x'' AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS TEXT))OR(CASE WHEN '7k' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END)))OR(x''))) IS TRUE)  as count FROM rt0 ORDER BY CAST(x'' AS REAL) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c0 AS TEXT))OR(CASE WHEN '7k' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END)))OR(x''))) ORDER BY CAST(x'' AS REAL) DESC;
SELECT COUNT(*) FROM vt0 WHERE (0xffffffffaec3a224) ORDER BY ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffaec3a224) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (0xffffffffaec3a224) ORDER BY ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffaec3a224) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (0xffffffffaec3a224) ORDER BY ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL)  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN (rt0.c3 IN (vt0.c1)) THEN (NOT (rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c3 IN (vt0.c1)) THEN (NOT (rt0.c4)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN (rt0.c3 IN (vt0.c1)) THEN (NOT (rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c3 IN (vt0.c1)) THEN (NOT (rt0.c4)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN (rt0.c3 IN (vt0.c1)) THEN (NOT (rt0.c4)) END);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c1) ORDER BY NULL COLLATE BINARY, (((((((('MO/1')AND(ROUND(vt0.c0, vt0.c0))))OR(((vt0.c1)||(rt0.c2)))))AND(((rt0.c4)>>(rt0.c1)))))AND(((vt0.c0)&(vt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL COLLATE BINARY, (((((((('MO/1')AND(ROUND(vt0.c0, vt0.c0))))OR(((vt0.c1)||(rt0.c2)))))AND(((rt0.c4)>>(rt0.c1)))))AND(((vt0.c0)&(vt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c1) ORDER BY NULL COLLATE BINARY, (((((((('MO/1')AND(ROUND(vt0.c0, vt0.c0))))OR(((vt0.c1)||(rt0.c2)))))AND(((rt0.c4)>>(rt0.c1)))))AND(((vt0.c0)&(vt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL COLLATE BINARY, (((((((('MO/1')AND(ROUND(vt0.c0, vt0.c0))))OR(((vt0.c1)||(rt0.c2)))))AND(((rt0.c4)>>(rt0.c1)))))AND(((vt0.c0)&(vt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c1) ORDER BY NULL COLLATE BINARY, (((((((('MO/1')AND(ROUND(vt0.c0, vt0.c0))))OR(((vt0.c1)||(rt0.c2)))))AND(((rt0.c4)>>(rt0.c1)))))AND(((vt0.c0)&(vt0.c2)))) ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) THEN ((vt0.c0)&(rt0.c3)) WHEN (- (vt0.c0)) THEN (NOT (vt0.c1)) WHEN (((rt0.c3)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2))) THEN '0.291527527959889' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) THEN ((vt0.c0)&(rt0.c3)) WHEN (- (vt0.c0)) THEN (NOT (vt0.c1)) WHEN (((rt0.c3)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2))) THEN '0.291527527959889' END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) THEN ((vt0.c0)&(rt0.c3)) WHEN (- (vt0.c0)) THEN (NOT (vt0.c1)) WHEN (((rt0.c3)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2))) THEN '0.291527527959889' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) THEN ((vt0.c0)&(rt0.c3)) WHEN (- (vt0.c0)) THEN (NOT (vt0.c1)) WHEN (((rt0.c3)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2))) THEN '0.291527527959889' END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) THEN ((vt0.c0)&(rt0.c3)) WHEN (- (vt0.c0)) THEN (NOT (vt0.c1)) WHEN (((rt0.c3)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2))) THEN '0.291527527959889' END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((0.6449424587869815) BETWEEN (rt0.c1) AND (vt0.c1 COLLATE NOCASE)) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((0.6449424587869815) BETWEEN (rt0.c1) AND (vt0.c1 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((0.6449424587869815) BETWEEN (rt0.c1) AND (vt0.c1 COLLATE NOCASE)) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((0.6449424587869815) BETWEEN (rt0.c1) AND (vt0.c1 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((0.6449424587869815) BETWEEN (rt0.c1) AND (vt0.c1 COLLATE NOCASE)) WHERE (rt0.c3);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY ((rt0.c1 COLLATE BINARY)%(((rt0.c2) NOT BETWEEN (rt0.c4) AND (0.8802957054311517)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE BINARY)%(((rt0.c2) NOT BETWEEN (rt0.c4) AND (0.8802957054311517)))) DESC);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY ((rt0.c1 COLLATE BINARY)%(((rt0.c2) NOT BETWEEN (rt0.c4) AND (0.8802957054311517)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE BINARY)%(((rt0.c2) NOT BETWEEN (rt0.c4) AND (0.8802957054311517)))) DESC);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY ((rt0.c1 COLLATE BINARY)%(((rt0.c2) NOT BETWEEN (rt0.c4) AND (0.8802957054311517)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c1 AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS TEXT) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c1 AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS TEXT) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c1 AS TEXT) AS TEXT));
SELECT * FROM vt0, rt0 WHERE ((NOT (((rt0.c2)/(rt0.c0))))) ORDER BY (((rt0.c3, rt0.c3, 0.6533069119717343, rt0.c2, rt0.c4)) NOT BETWEEN ((TYPEOF(vt0.c1), rt0.c3, rt0.c1, (rt0.c2 IN ()), CASE vt0.c1  WHEN rt0.c3 THEN vt0.c0 END)) AND (('a', ((rt0.c0)IS NOT(rt0.c0)), (((('')OR(rt0.c0)))OR(rt0.c1)), vt0.c0 COLLATE BINARY, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2)/(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c3, rt0.c3, 0.6533069119717343, rt0.c2, rt0.c4)) NOT BETWEEN ((TYPEOF(vt0.c1), rt0.c3, rt0.c1, (rt0.c2 IN ()), CASE vt0.c1  WHEN rt0.c3 THEN vt0.c0 END)) AND (('a', ((rt0.c0)IS NOT(rt0.c0)), (((('')OR(rt0.c0)))OR(rt0.c1)), vt0.c0 COLLATE BINARY, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) DESC);
SELECT * FROM vt0, rt0 WHERE ((NOT (((rt0.c2)/(rt0.c0))))) ORDER BY (((rt0.c3, rt0.c3, 0.6533069119717343, rt0.c2, rt0.c4)) NOT BETWEEN ((TYPEOF(vt0.c1), rt0.c3, rt0.c1, (rt0.c2 IN ()), CASE vt0.c1  WHEN rt0.c3 THEN vt0.c0 END)) AND (('a', ((rt0.c0)IS NOT(rt0.c0)), (((('')OR(rt0.c0)))OR(rt0.c1)), vt0.c0 COLLATE BINARY, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2)/(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c3, rt0.c3, 0.6533069119717343, rt0.c2, rt0.c4)) NOT BETWEEN ((TYPEOF(vt0.c1), rt0.c3, rt0.c1, (rt0.c2 IN ()), CASE vt0.c1  WHEN rt0.c3 THEN vt0.c0 END)) AND (('a', ((rt0.c0)IS NOT(rt0.c0)), (((('')OR(rt0.c0)))OR(rt0.c1)), vt0.c0 COLLATE BINARY, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) DESC);
SELECT * FROM vt0, rt0 WHERE ((NOT (((rt0.c2)/(rt0.c0))))) ORDER BY (((rt0.c3, rt0.c3, 0.6533069119717343, rt0.c2, rt0.c4)) NOT BETWEEN ((TYPEOF(vt0.c1), rt0.c3, rt0.c1, (rt0.c2 IN ()), CASE vt0.c1  WHEN rt0.c3 THEN vt0.c0 END)) AND (('a', ((rt0.c0)IS NOT(rt0.c0)), (((('')OR(rt0.c0)))OR(rt0.c1)), vt0.c0 COLLATE BINARY, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) DESC;
SELECT * FROM rt0 WHERE ((((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))*(((((rt0.c4)AND(rt0.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))*(((((rt0.c4)AND(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))*(((((rt0.c4)AND(rt0.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))*(((((rt0.c4)AND(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))*(((((rt0.c4)AND(rt0.c0)))OR(rt0.c0)))));
SELECT * FROM vt0 WHERE (1847499252);
SELECT SUM(count) FROM (SELECT ALL ((1847499252) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (1847499252);
SELECT SUM(count) FROM (SELECT ALL ((1847499252) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (1847499252);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c2)%(vt0.c0))  WHEN '-2074384716' THEN TRIM(vt0.c0) WHEN (vt0.c2 IN ()) THEN ((vt0.c1)AND(vt0.c1)) WHEN ((vt0.c1) NOTNULL) THEN x'' WHEN ((vt0.c2)OR(0Xffffffffa6582b40)) THEN vt0.c2 WHEN ((vt0.c2) ISNULL) THEN ((vt0.c2)IS NOT(vt0.c2)) ELSE vt0.c1 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c2)%(vt0.c0))  WHEN '-2074384716' THEN TRIM(vt0.c0) WHEN (vt0.c2 IN ()) THEN ((vt0.c1)AND(vt0.c1)) WHEN ((vt0.c1) NOTNULL) THEN x'' WHEN ((vt0.c2)OR(0xffffffffa6582b40)) THEN vt0.c2 WHEN ((vt0.c2) ISNULL) THEN ((vt0.c2)IS NOT(vt0.c2)) ELSE vt0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c2)%(vt0.c0))  WHEN '-2074384716' THEN TRIM(vt0.c0) WHEN (vt0.c2 IN ()) THEN ((vt0.c1)AND(vt0.c1)) WHEN ((vt0.c1) NOTNULL) THEN x'' WHEN ((vt0.c2)OR(0Xffffffffa6582b40)) THEN vt0.c2 WHEN ((vt0.c2) ISNULL) THEN ((vt0.c2)IS NOT(vt0.c2)) ELSE vt0.c1 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c2)%(vt0.c0))  WHEN '-2074384716' THEN TRIM(vt0.c0) WHEN (vt0.c2 IN ()) THEN ((vt0.c1)AND(vt0.c1)) WHEN ((vt0.c1) NOTNULL) THEN x'' WHEN ((vt0.c2)OR(0xffffffffa6582b40)) THEN vt0.c2 WHEN ((vt0.c2) ISNULL) THEN ((vt0.c2)IS NOT(vt0.c2)) ELSE vt0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c2)%(vt0.c0))  WHEN '-2074384716' THEN TRIM(vt0.c0) WHEN (vt0.c2 IN ()) THEN ((vt0.c1)AND(vt0.c1)) WHEN ((vt0.c1) NOTNULL) THEN x'' WHEN ((vt0.c2)OR(0Xffffffffa6582b40)) THEN vt0.c2 WHEN ((vt0.c2) ISNULL) THEN ((vt0.c2)IS NOT(vt0.c2)) ELSE vt0.c1 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM vt0 WHERE (-1632882054) ORDER BY CAST(((((((((vt0.c2)OR(vt0.c2)))OR(-1168001639)))OR(vt0.c0)))AND(vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((-1632882054) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((((((vt0.c2)OR(vt0.c2)))OR(-1168001639)))OR(vt0.c0)))AND(vt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (-1632882054) ORDER BY CAST(((((((((vt0.c2)OR(vt0.c2)))OR(-1168001639)))OR(vt0.c0)))AND(vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((-1632882054) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((((((vt0.c2)OR(vt0.c2)))OR(-1168001639)))OR(vt0.c0)))AND(vt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (-1632882054) ORDER BY CAST(((((((((vt0.c2)OR(vt0.c2)))OR(-1168001639)))OR(vt0.c0)))AND(vt0.c0)) AS NUMERIC);
SELECT * FROM rt0 WHERE (UNICODE(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (UNICODE(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (UNICODE(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END));
SELECT * FROM vt0 WHERE ((NOT ('1741001174' COLLATE NOCASE))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ('1741001174' COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((NOT ('1741001174' COLLATE NOCASE))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ('1741001174' COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((NOT ('1741001174' COLLATE NOCASE))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON HEX(rt0.c2 COLLATE BINARY) WHERE ((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1))))%(CASE vt0.c1  WHEN rt0.c2 THEN x'a28ba624' ELSE vt0.c1 END))) ORDER BY CAST((((rt0.c1))>=((vt0.c1))) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1))))%(CASE vt0.c1  WHEN rt0.c2 THEN x'a28ba624' ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON HEX(rt0.c2 COLLATE BINARY) ORDER BY CAST((((rt0.c1))>=((vt0.c1))) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON HEX(rt0.c2 COLLATE BINARY) WHERE ((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1))))%(CASE vt0.c1  WHEN rt0.c2 THEN x'a28ba624' ELSE vt0.c1 END))) ORDER BY CAST((((rt0.c1))>=((vt0.c1))) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1))))%(CASE vt0.c1  WHEN rt0.c2 THEN x'a28ba624' ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON HEX(rt0.c2 COLLATE BINARY) ORDER BY CAST((((rt0.c1))>=((vt0.c1))) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON HEX(rt0.c2 COLLATE BINARY) WHERE ((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1))))%(CASE vt0.c1  WHEN rt0.c2 THEN x'a28ba624' ELSE vt0.c1 END))) ORDER BY CAST((((rt0.c1))>=((vt0.c1))) AS NUMERIC) ASC;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((vt0.c2)<(((rt0.c3) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (vt0.c0) ORDER BY ((((((('0.6079007423770753')) BETWEEN ((rt0.c0)) AND ((rt0.c2))))OR(((vt0.c1)*(vt0.c1)))))AND((rt0.c4 IN (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((vt0.c2)<(((rt0.c3) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY ((((((('0.6079007423770753')) BETWEEN ((rt0.c0)) AND ((rt0.c2))))OR(((vt0.c1)*(vt0.c1)))))AND((rt0.c4 IN (rt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((vt0.c2)<(((rt0.c3) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (vt0.c0) ORDER BY ((((((('0.6079007423770753')) BETWEEN ((rt0.c0)) AND ((rt0.c2))))OR(((vt0.c1)*(vt0.c1)))))AND((rt0.c4 IN (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((vt0.c2)<(((rt0.c3) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY ((((((('0.6079007423770753')) BETWEEN ((rt0.c0)) AND ((rt0.c2))))OR(((vt0.c1)*(vt0.c1)))))AND((rt0.c4 IN (rt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((vt0.c2)<(((rt0.c3) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (vt0.c0) ORDER BY ((((((('0.6079007423770753')) BETWEEN ((rt0.c0)) AND ((rt0.c2))))OR(((vt0.c1)*(vt0.c1)))))AND((rt0.c4 IN (rt0.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((((((rt0.c3)OR(x'')))OR(rt0.c2)))OR(rt0.c0)))AND(vt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c3)OR(x'')))OR(rt0.c2)))OR(rt0.c0)))AND(vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((((((rt0.c3)OR(x'')))OR(rt0.c2)))OR(rt0.c0)))AND(vt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c3)OR(x'')))OR(rt0.c2)))OR(rt0.c0)))AND(vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((((((rt0.c3)OR(x'')))OR(rt0.c2)))OR(rt0.c0)))AND(vt0.c2)) COLLATE RTRIM);
SELECT * FROM vt0 INNER JOIN rt0 ON ((((((((((vt0.c0) NOTNULL))OR(((((rt0.c3)AND(vt0.c0)))OR(vt0.c1)))))AND((((0.6790271131641591, rt0.c2, rt0.c3, vt0.c2, rt0.c1))<>((rt0.c3, rt0.c0, rt0.c3, rt0.c4, rt0.c2))))))AND(CAST(rt0.c2 AS REAL))))OR(CAST(vt0.c1 AS BLOB))) WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)) ORDER BY '0.17742567528602393' ASC  NULLS LAST, CASE CAST(rt0.c0 AS NUMERIC)  WHEN ((9.62099207E8) IS FALSE) THEN rt0.c4 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((((((((vt0.c0) NOTNULL))OR(((((rt0.c3)AND(vt0.c0)))OR(vt0.c1)))))AND((((0.6790271131641591, rt0.c2, rt0.c3, vt0.c2, rt0.c1))<>((rt0.c3, rt0.c0, rt0.c3, rt0.c4, rt0.c2))))))AND(CAST(rt0.c2 AS REAL))))OR(CAST(vt0.c1 AS BLOB))) ORDER BY '0.17742567528602393' ASC  NULLS LAST, CASE CAST(rt0.c0 AS NUMERIC)  WHEN ((9.62099207E8) IS FALSE) THEN rt0.c4 COLLATE NOCASE END ASC);
SELECT * FROM vt0 INNER JOIN rt0 ON ((((((((((vt0.c0) NOTNULL))OR(((((rt0.c3)AND(vt0.c0)))OR(vt0.c1)))))AND((((0.6790271131641591, rt0.c2, rt0.c3, vt0.c2, rt0.c1))<>((rt0.c3, rt0.c0, rt0.c3, rt0.c4, rt0.c2))))))AND(CAST(rt0.c2 AS REAL))))OR(CAST(vt0.c1 AS BLOB))) WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)) ORDER BY '0.17742567528602393' ASC  NULLS LAST, CASE CAST(rt0.c0 AS NUMERIC)  WHEN ((9.62099207E8) IS FALSE) THEN rt0.c4 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((((((((vt0.c0) NOTNULL))OR(((((rt0.c3)AND(vt0.c0)))OR(vt0.c1)))))AND((((0.6790271131641591, rt0.c2, rt0.c3, vt0.c2, rt0.c1))<>((rt0.c3, rt0.c0, rt0.c3, rt0.c4, rt0.c2))))))AND(CAST(rt0.c2 AS REAL))))OR(CAST(vt0.c1 AS BLOB))) ORDER BY '0.17742567528602393' ASC  NULLS LAST, CASE CAST(rt0.c0 AS NUMERIC)  WHEN ((9.62099207E8) IS FALSE) THEN rt0.c4 COLLATE NOCASE END ASC);
SELECT * FROM vt0 INNER JOIN rt0 ON ((((((((((vt0.c0) NOTNULL))OR(((((rt0.c3)AND(vt0.c0)))OR(vt0.c1)))))AND((((0.6790271131641591, rt0.c2, rt0.c3, vt0.c2, rt0.c1))<>((rt0.c3, rt0.c0, rt0.c3, rt0.c4, rt0.c2))))))AND(CAST(rt0.c2 AS REAL))))OR(CAST(vt0.c1 AS BLOB))) WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)) ORDER BY '0.17742567528602393' ASC  NULLS LAST, CASE CAST(rt0.c0 AS NUMERIC)  WHEN ((9.62099207E8) IS FALSE) THEN rt0.c4 COLLATE NOCASE END ASC;
SELECT * FROM vt0 WHERE (LOWER(((vt0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((LOWER(((vt0.c1) IS TRUE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LOWER(((vt0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((LOWER(((vt0.c1) IS TRUE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LOWER(((vt0.c1) IS TRUE)));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (- (rt0.c3)) COLLATE NOCASE WHERE (((((rt0.c4)<=(rt0.c4)))<<(rt0.c4))) ORDER BY CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN '1943867676' END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)<=(rt0.c4)))<<(rt0.c4))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (- (rt0.c3)) COLLATE NOCASE ORDER BY CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN '1943867676' END ASC);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (- (rt0.c3)) COLLATE NOCASE WHERE (((((rt0.c4)<=(rt0.c4)))<<(rt0.c4))) ORDER BY CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN '1943867676' END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)<=(rt0.c4)))<<(rt0.c4))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (- (rt0.c3)) COLLATE NOCASE ORDER BY CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN '1943867676' END ASC);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (- (rt0.c3)) COLLATE NOCASE WHERE (((((rt0.c4)<=(rt0.c4)))<<(rt0.c4))) ORDER BY CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN '1943867676' END ASC;
SELECT * FROM vt0, rt0 WHERE (((((((vt0.c1)%(rt0.c4)))AND(((rt0.c3) IS TRUE))))OR(0.9135471421057598)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)%(rt0.c4)))AND(((rt0.c3) IS TRUE))))OR(0.9135471421057598))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((((vt0.c1)%(rt0.c4)))AND(((rt0.c3) IS TRUE))))OR(0.9135471421057598)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)%(rt0.c4)))AND(((rt0.c3) IS TRUE))))OR(0.9135471421057598))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((((vt0.c1)%(rt0.c4)))AND(((rt0.c3) IS TRUE))))OR(0.9135471421057598)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (UNLIKELY(DISTINCT x''));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT x'')) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (UNLIKELY(DISTINCT x''));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT x'')) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (UNLIKELY(DISTINCT x''));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM rt0, vt0 WHERE ((- (CASE WHEN vt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN '5W%,d' WHEN rt0.c0 THEN vt0.c2 END))) ORDER BY (((rt0.c4 COLLATE BINARY, load_extension(vt0.c2), ((vt0.c1)/(rt0.c4)), (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((rt0.c0))), CASE WHEN rt0.c1 THEN vt0.c2 ELSE vt0.c2 END))!=((((vt0.c0)/(rt0.c1)), (((vt0.c2)) BETWEEN (('-1863210019')) AND ((x''))), UPPER(vt0.c1), (rt0.c2 IN ()), json_patch(rt0.c1, 1))));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN '5W%,d' WHEN rt0.c0 THEN vt0.c2 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c4 COLLATE BINARY, load_extension(vt0.c2), ((vt0.c1)/(rt0.c4)), (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((rt0.c0))), CASE WHEN rt0.c1 THEN vt0.c2 ELSE vt0.c2 END))!=((((vt0.c0)/(rt0.c1)), (((vt0.c2)) BETWEEN (('-1863210019')) AND ((x''))), UPPER(vt0.c1), (rt0.c2 IN ()), json_patch(rt0.c1, 1)))));
SELECT ALL * FROM rt0, vt0 WHERE ((- (CASE WHEN vt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN '5W%,d' WHEN rt0.c0 THEN vt0.c2 END))) ORDER BY (((rt0.c4 COLLATE BINARY, load_extension(vt0.c2), ((vt0.c1)/(rt0.c4)), (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((rt0.c0))), CASE WHEN rt0.c1 THEN vt0.c2 ELSE vt0.c2 END))!=((((vt0.c0)/(rt0.c1)), (((vt0.c2)) BETWEEN (('-1863210019')) AND ((x''))), UPPER(vt0.c1), (rt0.c2 IN ()), json_patch(rt0.c1, 1))));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN '5W%,d' WHEN rt0.c0 THEN vt0.c2 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c4 COLLATE BINARY, load_extension(vt0.c2), ((vt0.c1)/(rt0.c4)), (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((rt0.c0))), CASE WHEN rt0.c1 THEN vt0.c2 ELSE vt0.c2 END))!=((((vt0.c0)/(rt0.c1)), (((vt0.c2)) BETWEEN (('-1863210019')) AND ((x''))), UPPER(vt0.c1), (rt0.c2 IN ()), json_patch(rt0.c1, 1)))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (CAST(rt0.c0 AS BLOB))) WHERE (TRIM((((vt0.c0, 0.077866698620643, rt0.c2))!=((rt0.c4, vt0.c2, x'a20d'))))) ORDER BY CASE WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((vt0.c0, 0.077866698620643, rt0.c2))!=((rt0.c4, vt0.c2, x'a20d'))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (CAST(rt0.c0 AS BLOB))) ORDER BY CASE WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY DESC);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (CAST(rt0.c0 AS BLOB))) WHERE (TRIM((((vt0.c0, 0.077866698620643, rt0.c2))!=((rt0.c4, vt0.c2, x'a20d'))))) ORDER BY CASE WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((vt0.c0, 0.077866698620643, rt0.c2))!=((rt0.c4, vt0.c2, x'a20d'))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (CAST(rt0.c0 AS BLOB))) ORDER BY CASE WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY DESC);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (CAST(rt0.c0 AS BLOB))) WHERE (TRIM((((vt0.c0, 0.077866698620643, rt0.c2))!=((rt0.c4, vt0.c2, x'a20d'))))) ORDER BY CASE WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c0 IN (vt0.c1)))IS NOT(((rt0.c3) IS FALSE))) WHERE (((((((((((rt0.c2)OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2))) NOT BETWEEN (((((rt0.c4)OR(rt0.c3)))AND(vt0.c1))) AND (json_extract(vt0.c2, rt0.c0)))) ORDER BY SQLITE_COMPILEOPTION_USED(rt0.c1 COLLATE NOCASE) DESC  NULLS LAST, rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2))) NOT BETWEEN (((((rt0.c4)OR(rt0.c3)))AND(vt0.c1))) AND (json_extract(vt0.c2, rt0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c0 IN (vt0.c1)))IS NOT(((rt0.c3) IS FALSE))) ORDER BY SQLITE_COMPILEOPTION_USED(rt0.c1 COLLATE NOCASE) DESC  NULLS LAST, rt0.c2 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c0 IN (vt0.c1)))IS NOT(((rt0.c3) IS FALSE))) WHERE (((((((((((rt0.c2)OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2))) NOT BETWEEN (((((rt0.c4)OR(rt0.c3)))AND(vt0.c1))) AND (json_extract(vt0.c2, rt0.c0)))) ORDER BY SQLITE_COMPILEOPTION_USED(rt0.c1 COLLATE NOCASE) DESC  NULLS LAST, rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2))) NOT BETWEEN (((((rt0.c4)OR(rt0.c3)))AND(vt0.c1))) AND (json_extract(vt0.c2, rt0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c0 IN (vt0.c1)))IS NOT(((rt0.c3) IS FALSE))) ORDER BY SQLITE_COMPILEOPTION_USED(rt0.c1 COLLATE NOCASE) DESC  NULLS LAST, rt0.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((TRIM(DISTINCT rt0.c2, rt0.c2))<(((((rt0.c3)OR(rt0.c1)))AND(rt0.c1))))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) BETWEEN ((((('-613485657')AND(vt0.c2)))OR(vt0.c1))) AND ((NOT (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt0.c2, rt0.c2))<(((((rt0.c3)OR(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c1 AS INTEGER)) BETWEEN ((((('-613485657')AND(vt0.c2)))OR(vt0.c1))) AND ((NOT (vt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((TRIM(DISTINCT rt0.c2, rt0.c2))<(((((rt0.c3)OR(rt0.c1)))AND(rt0.c1))))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) BETWEEN ((((('-613485657')AND(vt0.c2)))OR(vt0.c1))) AND ((NOT (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt0.c2, rt0.c2))<(((((rt0.c3)OR(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c1 AS INTEGER)) BETWEEN ((((('-613485657')AND(vt0.c2)))OR(vt0.c1))) AND ((NOT (vt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((TRIM(DISTINCT rt0.c2, rt0.c2))<(((((rt0.c3)OR(rt0.c1)))AND(rt0.c1))))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) BETWEEN ((((('-613485657')AND(vt0.c2)))OR(vt0.c1))) AND ((NOT (vt0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (NULL);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) IS FALSE) COLLATE RTRIM) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) IS FALSE) COLLATE RTRIM) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) IS FALSE) COLLATE RTRIM) ORDER BY rt0.c0;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c4)AND(rt0.c3)))AND(rt0.c0))) IS FALSE)) ORDER BY ((((CAST(rt0.c4 AS TEXT))AND(((rt0.c0)>=(vt0.c2)))))AND(CAST(vt0.c0 AS REAL))) DESC, ((rt0.c0) BETWEEN ((((x''))<>((rt0.c4)))) AND (((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((CAST(rt0.c4 AS TEXT))AND(((rt0.c0)>=(vt0.c2)))))AND(CAST(vt0.c0 AS REAL))) DESC, ((rt0.c0) BETWEEN ((((x''))!=((rt0.c4)))) AND (((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c4)AND(rt0.c3)))AND(rt0.c0))) IS FALSE)) ORDER BY ((((CAST(rt0.c4 AS TEXT))AND(((rt0.c0)>=(vt0.c2)))))AND(CAST(vt0.c0 AS REAL))) DESC, ((rt0.c0) BETWEEN ((((x''))<>((rt0.c4)))) AND (((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((CAST(rt0.c4 AS TEXT))AND(((rt0.c0)>=(vt0.c2)))))AND(CAST(vt0.c0 AS REAL))) DESC, ((rt0.c0) BETWEEN ((((x''))!=((rt0.c4)))) AND (((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c4)AND(rt0.c3)))AND(rt0.c0))) IS FALSE)) ORDER BY ((((CAST(rt0.c4 AS TEXT))AND(((rt0.c0)>=(vt0.c2)))))AND(CAST(vt0.c0 AS REAL))) DESC, ((rt0.c0) BETWEEN ((((x''))<>((rt0.c4)))) AND (((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c2))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY ((((NULL)AND(vt0.c1)))OR((~ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((NULL)AND(vt0.c1)))OR((~ (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY ((((NULL)AND(vt0.c1)))OR((~ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((NULL)AND(vt0.c1)))OR((~ (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY ((((NULL)AND(vt0.c1)))OR((~ (vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((CAST(rt0.c2 AS BLOB), ((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)), CASE vt0.c2  WHEN vt0.c1 THEN rt0.c3 ELSE rt0.c2 END))>((CASE WHEN rt0.c0 THEN rt0.c0 END, (0.05626983372557348 IN ()), LENGTH(rt0.c3))))) ORDER BY '1477356175';
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c2 AS BLOB), ((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)), CASE vt0.c2  WHEN vt0.c1 THEN rt0.c3 ELSE rt0.c2 END))>((CASE WHEN rt0.c0 THEN rt0.c0 END, (0.05626983372557348 IN ()), LENGTH(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY '1477356175');
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((CAST(rt0.c2 AS BLOB), ((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)), CASE vt0.c2  WHEN vt0.c1 THEN rt0.c3 ELSE rt0.c2 END))>((CASE WHEN rt0.c0 THEN rt0.c0 END, (0.05626983372557348 IN ()), LENGTH(rt0.c3))))) ORDER BY '1477356175';
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c2 AS BLOB), ((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)), CASE vt0.c2  WHEN vt0.c1 THEN rt0.c3 ELSE rt0.c2 END))>((CASE WHEN rt0.c0 THEN rt0.c0 END, (0.05626983372557348 IN ()), LENGTH(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY '1477356175');
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((CAST(rt0.c2 AS BLOB), ((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)), CASE vt0.c2  WHEN vt0.c1 THEN rt0.c3 ELSE rt0.c2 END))>((CASE WHEN rt0.c0 THEN rt0.c0 END, (0.05626983372557348 IN ()), LENGTH(rt0.c3))))) ORDER BY '1477356175';
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULLIF(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE) ORDER BY CASE WHEN CAST(vt0.c2 AS BLOB) THEN ((rt0.c4)%(vt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN CAST(vt0.c2 AS BLOB) THEN ((rt0.c4)%(vt0.c2)) END);
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULLIF(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE) ORDER BY CASE WHEN CAST(vt0.c2 AS BLOB) THEN ((rt0.c4)%(vt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN CAST(vt0.c2 AS BLOB) THEN ((rt0.c4)%(vt0.c2)) END);
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULLIF(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE) ORDER BY CASE WHEN CAST(vt0.c2 AS BLOB) THEN ((rt0.c4)%(vt0.c2)) END;
SELECT * FROM rt0 WHERE ((+ (rt0.c4)) COLLATE BINARY) ORDER BY ((((((((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END)OR(((((((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c3)))OR('Zn8È¶å{')))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c4)))))OR(((((rt0.c4)OR(rt0.c1)))AND(rt0.c3)))))AND(('j&Êö¥O' IN (rt0.c1)))))AND(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c4)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((((((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END)OR(((((((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c3)))OR('Zn8È¶å{')))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c4)))))OR(((((rt0.c4)OR(rt0.c1)))AND(rt0.c3)))))AND(('j&Êö¥O' IN (rt0.c1)))))AND(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((+ (rt0.c4)) COLLATE BINARY) ORDER BY ((((((((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END)OR(((((((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c3)))OR('Zn8È¶å{')))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c4)))))OR(((((rt0.c4)OR(rt0.c1)))AND(rt0.c3)))))AND(('j&Êö¥O' IN (rt0.c1)))))AND(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c4)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((((((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END)OR(((((((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c3)))OR('Zn8È¶å{')))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c4)))))OR(((((rt0.c4)OR(rt0.c1)))AND(rt0.c3)))))AND(('j&Êö¥O' IN (rt0.c1)))))AND(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((+ (rt0.c4)) COLLATE BINARY) ORDER BY ((((((((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END)OR(((((((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c3)))OR('Zn8È¶å{')))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c4)))))OR(((((rt0.c4)OR(rt0.c1)))AND(rt0.c3)))))AND(('j&Êö¥O' IN (rt0.c1)))))AND(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (LENGTH(((rt0.c0)>=(rt0.c2)))) ORDER BY (+ (((rt0.c0) NOT NULL)))  NULLS FIRST, (((((((((rt0.c2 IN ()))OR(x'')))OR(CAST(vt0.c1 AS BLOB))))OR(LOWER(DISTINCT vt0.c2))))OR(0.9176803368644675)) ASC  NULLS LAST, vt0.c1 ASC  NULLS LAST, (((((rt0.c2)AND(0X71b68a59)))AND(rt0.c4)) IN (((0.5608065763709467) IS FALSE), 505670095)) ASC;
SELECT SUM(count) FROM (SELECT ((LENGTH(((rt0.c0)>=(rt0.c2)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ (((rt0.c0) NOT NULL)))  NULLS FIRST, (((((((((rt0.c2 IN ()))OR(x'')))OR(CAST(vt0.c1 AS BLOB))))OR(LOWER(DISTINCT vt0.c2))))OR(0.9176803368644675)) ASC  NULLS LAST, vt0.c1 ASC  NULLS LAST, (((((rt0.c2)AND(0X71b68a59)))AND(rt0.c4)) IN (((0.5608065763709467) IS FALSE), 505670095)) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (LENGTH(((rt0.c0)>=(rt0.c2)))) ORDER BY (+ (((rt0.c0) NOT NULL)))  NULLS FIRST, (((((((((rt0.c2 IN ()))OR(x'')))OR(CAST(vt0.c1 AS BLOB))))OR(LOWER(DISTINCT vt0.c2))))OR(0.9176803368644675)) ASC  NULLS LAST, vt0.c1 ASC  NULLS LAST, (((((rt0.c2)AND(0X71b68a59)))AND(rt0.c4)) IN (((0.5608065763709467) IS FALSE), 505670095)) ASC;
SELECT SUM(count) FROM (SELECT ((LENGTH(((rt0.c0)>=(rt0.c2)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ (((rt0.c0) NOT NULL)))  NULLS FIRST, (((((((((rt0.c2 IN ()))OR(x'')))OR(CAST(vt0.c1 AS BLOB))))OR(LOWER(DISTINCT vt0.c2))))OR(0.9176803368644675)) ASC  NULLS LAST, vt0.c1 ASC  NULLS LAST, (((((rt0.c2)AND(0X71b68a59)))AND(rt0.c4)) IN (((0.5608065763709467) IS FALSE), 505670095)) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (LENGTH(((rt0.c0)>=(rt0.c2)))) ORDER BY (+ (((rt0.c0) NOT NULL)))  NULLS FIRST, (((((((((rt0.c2 IN ()))OR(x'')))OR(CAST(vt0.c1 AS BLOB))))OR(LOWER(DISTINCT vt0.c2))))OR(0.9176803368644675)) ASC  NULLS LAST, vt0.c1 ASC  NULLS LAST, (((((rt0.c2)AND(0X71b68a59)))AND(rt0.c4)) IN (((0.5608065763709467) IS FALSE), 505670095)) ASC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (- (rt0.c2 COLLATE BINARY)) WHERE ((((((((((NOT (vt0.c1)))AND(CASE rt0.c4  WHEN rt0.c4 THEN -467569443 END)))AND((rt0.c4 IN ()))))AND('-1823289379')))OR(((vt0.c2) BETWEEN (vt0.c2) AND (x'effd4dfc'))))) ORDER BY (((((vt0.c0, vt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c4, vt0.c1, vt0.c0)) AND ((vt0.c2, rt0.c0, vt0.c2))))*((((vt0.c0))>=((vt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (vt0.c1)))AND(CASE rt0.c4  WHEN rt0.c4 THEN -467569443 END)))AND((rt0.c4 IN ()))))AND('-1823289379')))OR(((vt0.c2) BETWEEN (vt0.c2) AND (x'effd4dfc'))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (- (rt0.c2 COLLATE BINARY)) ORDER BY (((((vt0.c0, vt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c4, vt0.c1, vt0.c0)) AND ((vt0.c2, rt0.c0, vt0.c2))))*((((vt0.c0))>=((vt0.c2))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (- (rt0.c2 COLLATE BINARY)) WHERE ((((((((((NOT (vt0.c1)))AND(CASE rt0.c4  WHEN rt0.c4 THEN -467569443 END)))AND((rt0.c4 IN ()))))AND('-1823289379')))OR(((vt0.c2) BETWEEN (vt0.c2) AND (x'effd4dfc'))))) ORDER BY (((((vt0.c0, vt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c4, vt0.c1, vt0.c0)) AND ((vt0.c2, rt0.c0, vt0.c2))))*((((vt0.c0))>=((vt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (vt0.c1)))AND(CASE rt0.c4  WHEN rt0.c4 THEN -467569443 END)))AND((rt0.c4 IN ()))))AND('-1823289379')))OR(((vt0.c2) BETWEEN (vt0.c2) AND (x'effd4dfc'))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (- (rt0.c2 COLLATE BINARY)) ORDER BY (((((vt0.c0, vt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c4, vt0.c1, vt0.c0)) AND ((vt0.c2, rt0.c0, vt0.c2))))*((((vt0.c0))>=((vt0.c2))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (- (rt0.c2 COLLATE BINARY)) WHERE ((((((((((NOT (vt0.c1)))AND(CASE rt0.c4  WHEN rt0.c4 THEN -467569443 END)))AND((rt0.c4 IN ()))))AND('-1823289379')))OR(((vt0.c2) BETWEEN (vt0.c2) AND (x'effd4dfc'))))) ORDER BY (((((vt0.c0, vt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c4, vt0.c1, vt0.c0)) AND ((vt0.c2, rt0.c0, vt0.c2))))*((((vt0.c0))>=((vt0.c2))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (((rt0.c0) NOT NULL)) AND ((NOT (vt0.c2))))) ORDER BY (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)), TRIM(DISTINCT vt0.c0, rt0.c4), CAST(rt0.c0 AS REAL), LIKELIHOOD(x'8892', 0.9991461167293968), ((('MO/o'))>((rt0.c4)))))<>((((vt0.c1)IS(vt0.c0)), (rt0.c1 IN ()), CASE WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c1 END, CAST('uY*xeprGu' AS REAL), ((rt0.c4)||(rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) BETWEEN (((rt0.c0) NOT NULL)) AND ((NOT (vt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)), TRIM(DISTINCT vt0.c0, rt0.c4), CAST(rt0.c0 AS REAL), LIKELIHOOD(x'8892', 0.9991461167293968), ((('MO/o'))>((rt0.c4)))))!=((((vt0.c1)IS(vt0.c0)), (rt0.c1 IN ()), CASE WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c1 END, CAST('uY*xeprGu' AS REAL), ((rt0.c4)||(rt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (((rt0.c0) NOT NULL)) AND ((NOT (vt0.c2))))) ORDER BY (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)), TRIM(DISTINCT vt0.c0, rt0.c4), CAST(rt0.c0 AS REAL), LIKELIHOOD(x'8892', 0.9991461167293968), ((('MO/o'))>((rt0.c4)))))<>((((vt0.c1)IS(vt0.c0)), (rt0.c1 IN ()), CASE WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c1 END, CAST('uY*xeprGu' AS REAL), ((rt0.c4)||(rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) BETWEEN (((rt0.c0) NOT NULL)) AND ((NOT (vt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)), TRIM(DISTINCT vt0.c0, rt0.c4), CAST(rt0.c0 AS REAL), LIKELIHOOD(x'8892', 0.9991461167293968), ((('MO/o'))>((rt0.c4)))))!=((((vt0.c1)IS(vt0.c0)), (rt0.c1 IN ()), CASE WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c1 END, CAST('uY*xeprGu' AS REAL), ((rt0.c4)||(rt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (((rt0.c0) NOT NULL)) AND ((NOT (vt0.c2))))) ORDER BY (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)), TRIM(DISTINCT vt0.c0, rt0.c4), CAST(rt0.c0 AS REAL), LIKELIHOOD(x'8892', 0.9991461167293968), ((('MO/o'))>((rt0.c4)))))<>((((vt0.c1)IS(vt0.c0)), (rt0.c1 IN ()), CASE WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c1 END, CAST('uY*xeprGu' AS REAL), ((rt0.c4)||(rt0.c1))))) DESC;
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((vt0.c1)/(rt0.c3))))) ORDER BY (((rt0.c0 IN (vt0.c1)))>>(IFNULL(DISTINCT vt0.c0, vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((vt0.c1)/(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0 IN (vt0.c1)))>>(IFNULL(DISTINCT vt0.c0, vt0.c1))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((vt0.c1)/(rt0.c3))))) ORDER BY (((rt0.c0 IN (vt0.c1)))>>(IFNULL(DISTINCT vt0.c0, vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((vt0.c1)/(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0 IN (vt0.c1)))>>(IFNULL(DISTINCT vt0.c0, vt0.c1))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((vt0.c1)/(rt0.c3))))) ORDER BY (((rt0.c0 IN (vt0.c1)))>>(IFNULL(DISTINCT vt0.c0, vt0.c1))) ASC;
SELECT * FROM vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY CASE WHEN ((vt0.c1)-(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1)-(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)) END  NULLS FIRST);
SELECT * FROM vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY CASE WHEN ((vt0.c1)-(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1)-(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)) END  NULLS FIRST);
SELECT * FROM vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY CASE WHEN ((vt0.c1)-(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)) END  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) AS NUMERIC)) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END) NOT NULL) ASC, CASE WHEN ((rt0.c4)AND(rt0.c0)) THEN (((rt0.c2))>((rt0.c2))) ELSE ((rt0.c4)<=(rt0.c3)) END DESC, ((('-1693422123', rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c4 COLLATE RTRIM, (((rt0.c3, rt0.c0, rt0.c4))>((rt0.c2, rt0.c2, rt0.c4))), rt0.c4 COLLATE BINARY)) AND ((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c4)), ((((rt0.c4)AND(rt0.c4)))OR(rt0.c2)), (~ (rt0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END) NOT NULL) ASC, CASE WHEN ((rt0.c4)AND(rt0.c0)) THEN (((rt0.c2))>((rt0.c2))) ELSE ((rt0.c4)<=(rt0.c3)) END DESC, ((('-1693422123', rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c4 COLLATE RTRIM, (((rt0.c3, rt0.c0, rt0.c4))>((rt0.c2, rt0.c2, rt0.c4))), rt0.c4 COLLATE BINARY)) AND ((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c4)), ((((rt0.c4)AND(rt0.c4)))OR(rt0.c2)), (~ (rt0.c3)))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) AS NUMERIC)) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END) NOT NULL) ASC, CASE WHEN ((rt0.c4)AND(rt0.c0)) THEN (((rt0.c2))>((rt0.c2))) ELSE ((rt0.c4)<=(rt0.c3)) END DESC, ((('-1693422123', rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c4 COLLATE RTRIM, (((rt0.c3, rt0.c0, rt0.c4))>((rt0.c2, rt0.c2, rt0.c4))), rt0.c4 COLLATE BINARY)) AND ((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c4)), ((((rt0.c4)AND(rt0.c4)))OR(rt0.c2)), (~ (rt0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END) NOT NULL) ASC, CASE WHEN ((rt0.c4)AND(rt0.c0)) THEN (((rt0.c2))>((rt0.c2))) ELSE ((rt0.c4)<=(rt0.c3)) END DESC, ((('-1693422123', rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c4 COLLATE RTRIM, (((rt0.c3, rt0.c0, rt0.c4))>((rt0.c2, rt0.c2, rt0.c4))), rt0.c4 COLLATE BINARY)) AND ((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c4)), ((((rt0.c4)AND(rt0.c4)))OR(rt0.c2)), (~ (rt0.c3)))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) AS NUMERIC)) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END) NOT NULL) ASC, CASE WHEN ((rt0.c4)AND(rt0.c0)) THEN (((rt0.c2))>((rt0.c2))) ELSE ((rt0.c4)<=(rt0.c3)) END DESC, ((('-1693422123', rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c4 COLLATE RTRIM, (((rt0.c3, rt0.c0, rt0.c4))>((rt0.c2, rt0.c2, rt0.c4))), rt0.c4 COLLATE BINARY)) AND ((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c4)), ((((rt0.c4)AND(rt0.c4)))OR(rt0.c2)), (~ (rt0.c3)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c2, vt0.c2)) AND ((vt0.c2, vt0.c0, vt0.c1))))AND(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END))) ORDER BY CASE WHEN ((vt0.c1)>(vt0.c2)) THEN (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0))) END DESC, CAST(vt0.c2 COLLATE RTRIM AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c2, vt0.c2)) AND ((vt0.c2, vt0.c0, vt0.c1))))AND(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1)>(vt0.c2)) THEN (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0))) END DESC, CAST(vt0.c2 COLLATE RTRIM AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c2, vt0.c2)) AND ((vt0.c2, vt0.c0, vt0.c1))))AND(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END))) ORDER BY CASE WHEN ((vt0.c1)>(vt0.c2)) THEN (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0))) END DESC, CAST(vt0.c2 COLLATE RTRIM AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c2, vt0.c2)) AND ((vt0.c2, vt0.c0, vt0.c1))))AND(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1)>(vt0.c2)) THEN (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0))) END DESC, CAST(vt0.c2 COLLATE RTRIM AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c2, vt0.c2)) AND ((vt0.c2, vt0.c0, vt0.c1))))AND(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END))) ORDER BY CASE WHEN ((vt0.c1)>(vt0.c2)) THEN (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0))) END DESC, CAST(vt0.c2 COLLATE RTRIM AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c1, vt0.c0, rt0.c0))>((vt0.c2, rt0.c0, rt0.c1)))) NOT BETWEEN (rt0.c4) AND ('-763599948'))) ORDER BY (((((((rt0.c0))!=((0.813153217619162))))OR((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR((rt0.c0 IN (vt0.c2, rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, vt0.c0, rt0.c0))>((vt0.c2, rt0.c0, rt0.c1)))) NOT BETWEEN (rt0.c4) AND ('-763599948'))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((((rt0.c0))<>((0.813153217619162))))OR((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR((rt0.c0 IN (vt0.c2, rt0.c2)))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c1, vt0.c0, rt0.c0))>((vt0.c2, rt0.c0, rt0.c1)))) NOT BETWEEN (rt0.c4) AND ('-763599948'))) ORDER BY (((((((rt0.c0))!=((0.813153217619162))))OR((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR((rt0.c0 IN (vt0.c2, rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, vt0.c0, rt0.c0))>((vt0.c2, rt0.c0, rt0.c1)))) NOT BETWEEN (rt0.c4) AND ('-763599948'))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((((rt0.c0))<>((0.813153217619162))))OR((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR((rt0.c0 IN (vt0.c2, rt0.c2)))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c1, vt0.c0, rt0.c0))>((vt0.c2, rt0.c0, rt0.c1)))) NOT BETWEEN (rt0.c4) AND ('-763599948'))) ORDER BY (((((((rt0.c0))!=((0.813153217619162))))OR((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR((rt0.c0 IN (vt0.c2, rt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 THEN ((rt0.c3)IS(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN ((rt0.c3)IS(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 THEN ((rt0.c3)IS(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN ((rt0.c3)IS(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 THEN ((rt0.c3)IS(rt0.c1)) END);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1, vt0.c0, vt0.c1)) BETWEEN (((((vt0.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c0))==((rt0.c2, vt0.c0, NULL, rt0.c0, vt0.c0))), rt0.c3 COLLATE RTRIM, ((((vt0.c2)AND(rt0.c3)))OR(rt0.c1)))) AND ((rt0.c1 COLLATE BINARY, NULL, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, vt0.c0, vt0.c1)) BETWEEN (((((vt0.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c0))=((rt0.c2, vt0.c0, NULL, rt0.c0, vt0.c0))), rt0.c3 COLLATE RTRIM, ((((vt0.c2)AND(rt0.c3)))OR(rt0.c1)))) AND ((rt0.c1 COLLATE BINARY, NULL, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1, vt0.c0, vt0.c1)) BETWEEN (((((vt0.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c0))==((rt0.c2, vt0.c0, NULL, rt0.c0, vt0.c0))), rt0.c3 COLLATE RTRIM, ((((vt0.c2)AND(rt0.c3)))OR(rt0.c1)))) AND ((rt0.c1 COLLATE BINARY, NULL, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, vt0.c0, vt0.c1)) BETWEEN (((((vt0.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c0))=((rt0.c2, vt0.c0, NULL, rt0.c0, vt0.c0))), rt0.c3 COLLATE RTRIM, ((((vt0.c2)AND(rt0.c3)))OR(rt0.c1)))) AND ((rt0.c1 COLLATE BINARY, NULL, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1, vt0.c0, vt0.c1)) BETWEEN (((((vt0.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c0))==((rt0.c2, vt0.c0, NULL, rt0.c0, vt0.c0))), rt0.c3 COLLATE RTRIM, ((((vt0.c2)AND(rt0.c3)))OR(rt0.c1)))) AND ((rt0.c1 COLLATE BINARY, NULL, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c2))))));
SELECT ALL * FROM rt0, vt0 WHERE (((UNLIKELY(rt0.c0))IS(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(rt0.c0))IS(x''))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((UNLIKELY(rt0.c0))IS(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(rt0.c0))IS(x''))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((UNLIKELY(rt0.c0))IS(x'')));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((-2.078690769E9))))=(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) WHERE (((((((((COALESCE(rt0.c0, vt0.c1))OR(((rt0.c3)|(rt0.c1)))))AND(((rt0.c0)|(rt0.c1)))))AND(((rt0.c1)AND(rt0.c0)))))AND(vt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((((COALESCE(rt0.c0, vt0.c1))OR(((rt0.c3)|(rt0.c1)))))AND(((rt0.c0)|(rt0.c1)))))AND(((rt0.c1)AND(rt0.c0)))))AND(vt0.c2))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((-2.078690769E9))))==(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((-2.078690769E9))))=(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) WHERE (((((((((COALESCE(rt0.c0, vt0.c1))OR(((rt0.c3)|(rt0.c1)))))AND(((rt0.c0)|(rt0.c1)))))AND(((rt0.c1)AND(rt0.c0)))))AND(vt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((((COALESCE(rt0.c0, vt0.c1))OR(((rt0.c3)|(rt0.c1)))))AND(((rt0.c0)|(rt0.c1)))))AND(((rt0.c1)AND(rt0.c0)))))AND(vt0.c2))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((-2.078690769E9))))==(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((-2.078690769E9))))=(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) WHERE (((((((((COALESCE(rt0.c0, vt0.c1))OR(((rt0.c3)|(rt0.c1)))))AND(((rt0.c0)|(rt0.c1)))))AND(((rt0.c1)AND(rt0.c0)))))AND(vt0.c2)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (CASE WHEN vt0.c2 THEN '<?' END)) WHERE (((IFNULL(rt0.c4, vt0.c0))-(load_extension(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c4, vt0.c0))-(load_extension(rt0.c4)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (CASE WHEN vt0.c2 THEN '<?' END)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (CASE WHEN vt0.c2 THEN '<?' END)) WHERE (((IFNULL(rt0.c4, vt0.c0))-(load_extension(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c4, vt0.c0))-(load_extension(rt0.c4)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (CASE WHEN vt0.c2 THEN '<?' END)));
SELECT ALL * FROM vt0 WHERE (ROUND(((vt0.c2) ISNULL), (vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(((vt0.c2) ISNULL), (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (ROUND(((vt0.c2) ISNULL), (vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(((vt0.c2) ISNULL), (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (ROUND(((vt0.c2) ISNULL), (vt0.c1 IN ())));
SELECT COUNT(*) FROM vt0 WHERE ((('-91800013') IS FALSE)) ORDER BY CASE WHEN (((vt0.c2))>=((0.809070301786391))) THEN CASE vt0.c1  WHEN vt0.c0 THEN 0.5818394344626451 WHEN 0Xffffffff8419b22f THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END ELSE ((vt0.c0) IS TRUE) END  NULLS FIRST, vt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((('-91800013') IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c2))>=((0.809070301786391))) THEN CASE vt0.c1  WHEN vt0.c0 THEN 0.5818394344626451 WHEN 0Xffffffff8419b22f THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END ELSE ((vt0.c0) IS TRUE) END  NULLS FIRST, vt0.c2);
SELECT COUNT(*) FROM vt0 WHERE ((('-91800013') IS FALSE)) ORDER BY CASE WHEN (((vt0.c2))>=((0.809070301786391))) THEN CASE vt0.c1  WHEN vt0.c0 THEN 0.5818394344626451 WHEN 0Xffffffff8419b22f THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END ELSE ((vt0.c0) IS TRUE) END  NULLS FIRST, vt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((('-91800013') IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c2))>=((0.809070301786391))) THEN CASE vt0.c1  WHEN vt0.c0 THEN 0.5818394344626451 WHEN 0Xffffffff8419b22f THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END ELSE ((vt0.c0) IS TRUE) END  NULLS FIRST, vt0.c2);
SELECT COUNT(*) FROM vt0 WHERE ((('-91800013') IS FALSE)) ORDER BY CASE WHEN (((vt0.c2))>=((0.809070301786391))) THEN CASE vt0.c1  WHEN vt0.c0 THEN 0.5818394344626451 WHEN 0Xffffffff8419b22f THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END ELSE ((vt0.c0) IS TRUE) END  NULLS FIRST, vt0.c2;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((NULL)/(rt0.c0)))GLOB((NULL IN ())))) ORDER BY (vt0.c0 IN ()) DESC  NULLS FIRST, '0.4106682445461468' ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL)/(rt0.c0)))GLOB((NULL IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (vt0.c0 IN ()) DESC  NULLS FIRST, '0.4106682445461468' ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((NULL)/(rt0.c0)))GLOB((NULL IN ())))) ORDER BY (vt0.c0 IN ()) DESC  NULLS FIRST, '0.4106682445461468' ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL)/(rt0.c0)))GLOB((NULL IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (vt0.c0 IN ()) DESC  NULLS FIRST, '0.4106682445461468' ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((NULL)/(rt0.c0)))GLOB((NULL IN ())))) ORDER BY (vt0.c0 IN ()) DESC  NULLS FIRST, '0.4106682445461468' ASC;
SELECT * FROM rt0 WHERE (((CASE 0Xffffffff9f80ddf3  WHEN rt0.c1 THEN rt0.c0 END)<>('FALSE')));
SELECT SUM(count) FROM (SELECT ((((CASE 0xffffffff9f80ddf3  WHEN rt0.c1 THEN rt0.c0 END)!=('FALSE'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE 0Xffffffff9f80ddf3  WHEN rt0.c1 THEN rt0.c0 END)<>('FALSE')));
SELECT SUM(count) FROM (SELECT ((((CASE 0xffffffff9f80ddf3  WHEN rt0.c1 THEN rt0.c0 END)!=('FALSE'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE 0Xffffffff9f80ddf3  WHEN rt0.c1 THEN rt0.c0 END)<>('FALSE')));
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c0))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))) AND ((rt0.c0 IN ())))) ORDER BY CAST(rt0.c4 AS REAL) DESC, ((((rt0.c1)-(rt0.c0))) NOT NULL)  NULLS FIRST, (((rt0.c4 IN (rt0.c2))) BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) AND (rt0.c2));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c4 AS REAL) DESC, ((((rt0.c1)-(rt0.c0))) NOT NULL)  NULLS FIRST, (((rt0.c4 IN (rt0.c2))) BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) AND (rt0.c2)));
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c0))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))) AND ((rt0.c0 IN ())))) ORDER BY CAST(rt0.c4 AS REAL) DESC, ((((rt0.c1)-(rt0.c0))) NOT NULL)  NULLS FIRST, (((rt0.c4 IN (rt0.c2))) BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) AND (rt0.c2));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c4 AS REAL) DESC, ((((rt0.c1)-(rt0.c0))) NOT NULL)  NULLS FIRST, (((rt0.c4 IN (rt0.c2))) BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) AND (rt0.c2)));
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c0))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))) AND ((rt0.c0 IN ())))) ORDER BY CAST(rt0.c4 AS REAL) DESC, ((((rt0.c1)-(rt0.c0))) NOT NULL)  NULLS FIRST, (((rt0.c4 IN (rt0.c2))) BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) AND (rt0.c2));
SELECT * FROM rt0, vt0 WHERE (((((vt0.c2 IN (vt0.c0))))<=((((vt0.c0)LIKE(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2 IN (vt0.c0))))<=((((vt0.c0)LIKE(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((vt0.c2 IN (vt0.c0))))<=((((vt0.c0)LIKE(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2 IN (vt0.c0))))<=((((vt0.c0)LIKE(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((vt0.c2 IN (vt0.c0))))<=((((vt0.c0)LIKE(rt0.c2))))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3)&(rt0.c3))) IS TRUE)) ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))|(rt0.c3))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)&(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))|(rt0.c3))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3)&(rt0.c3))) IS TRUE)) ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))|(rt0.c3))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)&(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))|(rt0.c3))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3)&(rt0.c3))) IS TRUE)) ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))|(rt0.c3))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c2)))-(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c2)))-(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c2 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c2)))-(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c2)))-(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c2 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c2)))-(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c2 END)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON 0.1450404452450147 WHERE (((((((((UPPER(rt0.c4))OR('1003277054')))AND((NOT (rt0.c1)))))AND(CAST(vt0.c0 AS INTEGER))))OR(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((UPPER(rt0.c4))OR('1003277054')))AND((NOT (rt0.c1)))))AND(CAST(vt0.c0 AS INTEGER))))OR(vt0.c1))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON 0.1450404452450147);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON 0.1450404452450147 WHERE (((((((((UPPER(rt0.c4))OR('1003277054')))AND((NOT (rt0.c1)))))AND(CAST(vt0.c0 AS INTEGER))))OR(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((UPPER(rt0.c4))OR('1003277054')))AND((NOT (rt0.c1)))))AND(CAST(vt0.c0 AS INTEGER))))OR(vt0.c1))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON 0.1450404452450147);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON 0.1450404452450147 WHERE (((((((((UPPER(rt0.c4))OR('1003277054')))AND((NOT (rt0.c1)))))AND(CAST(vt0.c0 AS INTEGER))))OR(vt0.c1)));
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((((vt0.c2) ISNULL), NULLIF(DISTINCT rt0.c0, rt0.c4), CASE WHEN 1621626487 THEN rt0.c3 ELSE rt0.c3 END)) AND ((CASE vt0.c1  WHEN rt0.c2 THEN 'fv<ci3}n~' END, (- (vt0.c2)), (((rt0.c4, vt0.c2, rt0.c4))<((rt0.c1, rt0.c2, rt0.c2))))))) ORDER BY ((((((((rt0.c3)AND(vt0.c0)))OR(vt0.c1)))AND(0.5492908048164328)))OR(vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((((vt0.c2) ISNULL), NULLIF(DISTINCT rt0.c0, rt0.c4), CASE WHEN 1621626487 THEN rt0.c3 ELSE rt0.c3 END)) AND ((CASE vt0.c1  WHEN rt0.c2 THEN 'fv<ci3}n~' END, (- (vt0.c2)), (((rt0.c4, vt0.c2, rt0.c4))<((rt0.c1, rt0.c2, rt0.c2))))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((rt0.c3)AND(vt0.c0)))OR(vt0.c1)))AND(0.5492908048164328)))OR(vt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((((vt0.c2) ISNULL), NULLIF(DISTINCT rt0.c0, rt0.c4), CASE WHEN 1621626487 THEN rt0.c3 ELSE rt0.c3 END)) AND ((CASE vt0.c1  WHEN rt0.c2 THEN 'fv<ci3}n~' END, (- (vt0.c2)), (((rt0.c4, vt0.c2, rt0.c4))<((rt0.c1, rt0.c2, rt0.c2))))))) ORDER BY ((((((((rt0.c3)AND(vt0.c0)))OR(vt0.c1)))AND(0.5492908048164328)))OR(vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((((vt0.c2) ISNULL), NULLIF(DISTINCT rt0.c0, rt0.c4), CASE WHEN 1621626487 THEN rt0.c3 ELSE rt0.c3 END)) AND ((CASE vt0.c1  WHEN rt0.c2 THEN 'fv<ci3}n~' END, (- (vt0.c2)), (((rt0.c4, vt0.c2, rt0.c4))<((rt0.c1, rt0.c2, rt0.c2))))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((rt0.c3)AND(vt0.c0)))OR(vt0.c1)))AND(0.5492908048164328)))OR(vt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((((vt0.c2) ISNULL), NULLIF(DISTINCT rt0.c0, rt0.c4), CASE WHEN 1621626487 THEN rt0.c3 ELSE rt0.c3 END)) AND ((CASE vt0.c1  WHEN rt0.c2 THEN 'fv<ci3}n~' END, (- (vt0.c2)), (((rt0.c4, vt0.c2, rt0.c4))<((rt0.c1, rt0.c2, rt0.c2))))))) ORDER BY ((((((((rt0.c3)AND(vt0.c0)))OR(vt0.c1)))AND(0.5492908048164328)))OR(vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((((((((((x'0f56') ISNULL))OR(rt0.c4 COLLATE NOCASE)))AND(0.8902585385835974)))AND(CAST(rt0.c0 AS TEXT))))OR(((((rt0.c4)AND(rt0.c1)))AND(rt0.c0)))))OR(TRIM(rt0.c1, rt0.c3))))OR(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((x'0f56') ISNULL))OR(rt0.c4 COLLATE NOCASE)))AND(0.8902585385835974)))AND(CAST(rt0.c0 AS TEXT))))OR(((((rt0.c4)AND(rt0.c1)))AND(rt0.c0)))))OR(TRIM(rt0.c1, rt0.c3))))OR(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((((((((x'0f56') ISNULL))OR(rt0.c4 COLLATE NOCASE)))AND(0.8902585385835974)))AND(CAST(rt0.c0 AS TEXT))))OR(((((rt0.c4)AND(rt0.c1)))AND(rt0.c0)))))OR(TRIM(rt0.c1, rt0.c3))))OR(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((x'0f56') ISNULL))OR(rt0.c4 COLLATE NOCASE)))AND(0.8902585385835974)))AND(CAST(rt0.c0 AS TEXT))))OR(((((rt0.c4)AND(rt0.c1)))AND(rt0.c0)))))OR(TRIM(rt0.c1, rt0.c3))))OR(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((((((((x'0f56') ISNULL))OR(rt0.c4 COLLATE NOCASE)))AND(0.8902585385835974)))AND(CAST(rt0.c0 AS TEXT))))OR(((((rt0.c4)AND(rt0.c1)))AND(rt0.c0)))))OR(TRIM(rt0.c1, rt0.c3))))OR(CAST(rt0.c1 AS REAL))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM WHERE ((((rt0.c1 COLLATE RTRIM, ((((vt0.c2)OR(rt0.c1)))OR(NULL)), TRIM(vt0.c1, rt0.c0)))>(((rt0.c2 IN ()), ((rt0.c2)>(rt0.c2)), ((vt0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE RTRIM, ((((vt0.c2)OR(rt0.c1)))OR(NULL)), TRIM(vt0.c1, rt0.c0)))>(((rt0.c2 IN ()), ((rt0.c2)>(rt0.c2)), ((vt0.c0) ISNULL))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM WHERE ((((rt0.c1 COLLATE RTRIM, ((((vt0.c2)OR(rt0.c1)))OR(NULL)), TRIM(vt0.c1, rt0.c0)))>(((rt0.c2 IN ()), ((rt0.c2)>(rt0.c2)), ((vt0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE RTRIM, ((((vt0.c2)OR(rt0.c1)))OR(NULL)), TRIM(vt0.c1, rt0.c0)))>(((rt0.c2 IN ()), ((rt0.c2)>(rt0.c2)), ((vt0.c0) ISNULL))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM WHERE ((((rt0.c1 COLLATE RTRIM, ((((vt0.c2)OR(rt0.c1)))OR(NULL)), TRIM(vt0.c1, rt0.c0)))>(((rt0.c2 IN ()), ((rt0.c2)>(rt0.c2)), ((vt0.c0) ISNULL)))));
SELECT * FROM rt0 WHERE (UPPER(DISTINCT CASE WHEN 0.24759894350961453 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE WHEN 0.24759894350961453 THEN rt0.c1 END)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (UPPER(DISTINCT CASE WHEN 0.24759894350961453 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE WHEN 0.24759894350961453 THEN rt0.c1 END)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (UPPER(DISTINCT CASE WHEN 0.24759894350961453 THEN rt0.c1 END));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (LENGTH(rt0.c4)))) ORDER BY 2.4479152E8 DESC, ((((((vt0.c1) NOTNULL))AND(((rt0.c2) IS TRUE))))OR(rt0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (LENGTH(rt0.c4)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 2.4479152E8 DESC, ((((((vt0.c1) NOTNULL))AND(((rt0.c2) IS TRUE))))OR(rt0.c2)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (LENGTH(rt0.c4)))) ORDER BY 2.4479152E8 DESC, ((((((vt0.c1) NOTNULL))AND(((rt0.c2) IS TRUE))))OR(rt0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (LENGTH(rt0.c4)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 2.4479152E8 DESC, ((((((vt0.c1) NOTNULL))AND(((rt0.c2) IS TRUE))))OR(rt0.c2)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (LENGTH(rt0.c4)))) ORDER BY 2.4479152E8 DESC, ((((((vt0.c1) NOTNULL))AND(((rt0.c2) IS TRUE))))OR(rt0.c2)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN (((+ (vt0.c2)))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN (((+ (vt0.c2)))) AND ((vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN (((+ (vt0.c2)))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN (((+ (vt0.c2)))) AND ((vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN (((+ (vt0.c2)))) AND ((vt0.c0))));
SELECT * FROM vt0 WHERE (((((vt0.c2)LIKE(vt0.c1)))<=(CAST(vt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)LIKE(vt0.c1)))<=(CAST(vt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c2)LIKE(vt0.c1)))<=(CAST(vt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)LIKE(vt0.c1)))<=(CAST(vt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c2)LIKE(vt0.c1)))<=(CAST(vt0.c2 AS NUMERIC))));
SELECT * FROM rt0 WHERE ((- (0.6790271131641591))) ORDER BY CASE WHEN rt0.c4 THEN x'' END COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (0.6790271131641591))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c4 THEN x'' END COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((- (0.6790271131641591))) ORDER BY CASE WHEN rt0.c4 THEN x'' END COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (0.6790271131641591))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c4 THEN x'' END COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((- (0.6790271131641591))) ORDER BY CASE WHEN rt0.c4 THEN x'' END COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0))<((vt0.c2))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0))<((vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0))<((vt0.c2))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0))<((vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0))<((vt0.c2))))));
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c4)&(vt0.c2)))OR(((rt0.c1) BETWEEN (rt0.c1) AND ('#Oy_')))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)&(vt0.c2)))OR(((rt0.c1) BETWEEN (rt0.c1) AND ('#Oy_'))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c4)&(vt0.c2)))OR(((rt0.c1) BETWEEN (rt0.c1) AND ('#Oy_')))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)&(vt0.c2)))OR(((rt0.c1) BETWEEN (rt0.c1) AND ('#Oy_'))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c4)&(vt0.c2)))OR(((rt0.c1) BETWEEN (rt0.c1) AND ('#Oy_')))));
SELECT ALL * FROM vt0, rt0 WHERE ((((((vt0.c2)) BETWEEN ((rt0.c3)) AND ((vt0.c0))))<(((rt0.c3)|(rt0.c3))))) ORDER BY CAST(((rt0.c2) BETWEEN ('\!‚ú≥Ôµ°q}8Vj') AND (rt0.c4)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2)) BETWEEN ((rt0.c3)) AND ((vt0.c0))))<(((rt0.c3)|(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c2) BETWEEN ('\!‚ú≥Ôµ°q}8Vj') AND (rt0.c4)) AS TEXT) ASC);
SELECT ALL * FROM vt0, rt0 WHERE ((((((vt0.c2)) BETWEEN ((rt0.c3)) AND ((vt0.c0))))<(((rt0.c3)|(rt0.c3))))) ORDER BY CAST(((rt0.c2) BETWEEN ('\!‚ú≥Ôµ°q}8Vj') AND (rt0.c4)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2)) BETWEEN ((rt0.c3)) AND ((vt0.c0))))<(((rt0.c3)|(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c2) BETWEEN ('\!‚ú≥Ôµ°q}8Vj') AND (rt0.c4)) AS TEXT) ASC);
SELECT ALL * FROM vt0, rt0 WHERE ((((((vt0.c2)) BETWEEN ((rt0.c3)) AND ((vt0.c0))))<(((rt0.c3)|(rt0.c3))))) ORDER BY CAST(((rt0.c2) BETWEEN ('\!‚ú≥Ôµ°q}8Vj') AND (rt0.c4)) AS TEXT) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((-573114031)GLOB(vt0.c0))) NOTNULL)) ORDER BY HEX(DISTINCT CAST(vt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((((((-573114031)GLOB(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT CAST(vt0.c0 AS REAL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((-573114031)GLOB(vt0.c0))) NOTNULL)) ORDER BY HEX(DISTINCT CAST(vt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((((((-573114031)GLOB(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT CAST(vt0.c0 AS REAL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((-573114031)GLOB(vt0.c0))) NOTNULL)) ORDER BY HEX(DISTINCT CAST(vt0.c0 AS REAL));
SELECT * FROM vt0 WHERE (((vt0.c0)>>(vt0.c2)) COLLATE RTRIM) ORDER BY CASE (~ (0.2568829574873781))  WHEN ((0.7283975395839369) NOT NULL) THEN (vt0.c2 IN ()) WHEN ((((vt0.c1)AND('-1504171200')))AND(vt0.c0)) THEN (~ (vt0.c0)) WHEN NULL THEN vt0.c2 ELSE ((vt0.c1)>>(vt0.c2)) END;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>>(vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CASE (~ (0.2568829574873781))  WHEN ((0.7283975395839369) NOT NULL) THEN (vt0.c2 IN ()) WHEN ((((vt0.c1)AND('-1504171200')))AND(vt0.c0)) THEN (~ (vt0.c0)) WHEN NULL THEN vt0.c2 ELSE ((vt0.c1)>>(vt0.c2)) END);
SELECT * FROM vt0 WHERE (((vt0.c0)>>(vt0.c2)) COLLATE RTRIM) ORDER BY CASE (~ (0.2568829574873781))  WHEN ((0.7283975395839369) NOT NULL) THEN (vt0.c2 IN ()) WHEN ((((vt0.c1)AND('-1504171200')))AND(vt0.c0)) THEN (~ (vt0.c0)) WHEN NULL THEN vt0.c2 ELSE ((vt0.c1)>>(vt0.c2)) END;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>>(vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CASE (~ (0.2568829574873781))  WHEN ((0.7283975395839369) NOT NULL) THEN (vt0.c2 IN ()) WHEN ((((vt0.c1)AND('-1504171200')))AND(vt0.c0)) THEN (~ (vt0.c0)) WHEN NULL THEN vt0.c2 ELSE ((vt0.c1)>>(vt0.c2)) END);
SELECT * FROM vt0 WHERE (((vt0.c0)>>(vt0.c2)) COLLATE RTRIM) ORDER BY CASE (~ (0.2568829574873781))  WHEN ((0.7283975395839369) NOT NULL) THEN (vt0.c2 IN ()) WHEN ((((vt0.c1)AND('-1504171200')))AND(vt0.c0)) THEN (~ (vt0.c0)) WHEN NULL THEN vt0.c2 ELSE ((vt0.c1)>>(vt0.c2)) END;
SELECT * FROM rt0 WHERE (UNLIKELY(((rt0.c3) NOTNULL))) ORDER BY (((rt0.c4)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) AND ((LIKELY(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((rt0.c3) NOTNULL))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c4)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) AND ((LIKELY(DISTINCT rt0.c1)))));
SELECT * FROM rt0 WHERE (UNLIKELY(((rt0.c3) NOTNULL))) ORDER BY (((rt0.c4)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) AND ((LIKELY(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((rt0.c3) NOTNULL))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c4)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) AND ((LIKELY(DISTINCT rt0.c1)))));
SELECT * FROM rt0 WHERE (UNLIKELY(((rt0.c3) NOTNULL))) ORDER BY (((rt0.c4)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) AND ((LIKELY(DISTINCT rt0.c1))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON '-377270235' WHERE (((('a', CAST(vt0.c0 AS REAL), rt0.c3 COLLATE BINARY))>((((rt0.c3) IS FALSE), rt0.c0 COLLATE RTRIM, rt0.c0 COLLATE BINARY)))) ORDER BY (NOT (((rt0.c4) NOT NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('a', CAST(vt0.c0 AS REAL), rt0.c3 COLLATE BINARY))>((((rt0.c3) IS FALSE), rt0.c0 COLLATE RTRIM, rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON '-377270235' ORDER BY (NOT (((rt0.c4) NOT NULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON '-377270235' WHERE (((('a', CAST(vt0.c0 AS REAL), rt0.c3 COLLATE BINARY))>((((rt0.c3) IS FALSE), rt0.c0 COLLATE RTRIM, rt0.c0 COLLATE BINARY)))) ORDER BY (NOT (((rt0.c4) NOT NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('a', CAST(vt0.c0 AS REAL), rt0.c3 COLLATE BINARY))>((((rt0.c3) IS FALSE), rt0.c0 COLLATE RTRIM, rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON '-377270235' ORDER BY (NOT (((rt0.c4) NOT NULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON '-377270235' WHERE (((('a', CAST(vt0.c0 AS REAL), rt0.c3 COLLATE BINARY))>((((rt0.c3) IS FALSE), rt0.c0 COLLATE RTRIM, rt0.c0 COLLATE BINARY)))) ORDER BY (NOT (((rt0.c4) NOT NULL))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c2) AND (1.782724839E9)))<>(vt0.c1 COLLATE RTRIM))) ORDER BY (~ (((vt0.c1) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c2) AND (1.782724839E9)))!=(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c1) NOT NULL))) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c2) AND (1.782724839E9)))<>(vt0.c1 COLLATE RTRIM))) ORDER BY (~ (((vt0.c1) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c2) AND (1.782724839E9)))!=(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c1) NOT NULL))) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c2) AND (1.782724839E9)))<>(vt0.c1 COLLATE RTRIM))) ORDER BY (~ (((vt0.c1) NOT NULL))) DESC;
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON NULL WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON NULL);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON NULL WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON NULL);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON NULL WHERE (x'');
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c3 WHERE (((vt0.c1) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c3);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c3 WHERE (((vt0.c1) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c3);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c3 WHERE (((vt0.c1) IS TRUE) COLLATE NOCASE);
SELECT ALL * FROM rt0, vt0 WHERE ((((((((-1362910684)OR(x'3f80')))AND(vt0.c0))))<=((((((((((rt0.c4)AND(rt0.c1)))OR(vt0.c2)))AND(vt0.c1)))OR(rt0.c4)))))) ORDER BY (((rt0.c2) IS FALSE) IN ()) ASC  NULLS FIRST, ((TRIM(DISTINCT vt0.c0))+(0.5530990890334612)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((-1362910684)OR(x'3f80')))AND(vt0.c0))))<=((((((((((rt0.c4)AND(rt0.c1)))OR(vt0.c2)))AND(vt0.c1)))OR(rt0.c4)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2) IS FALSE) IN ()) ASC  NULLS FIRST, ((TRIM(DISTINCT vt0.c0))+(0.5530990890334612)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((((((-1362910684)OR(x'3f80')))AND(vt0.c0))))<=((((((((((rt0.c4)AND(rt0.c1)))OR(vt0.c2)))AND(vt0.c1)))OR(rt0.c4)))))) ORDER BY (((rt0.c2) IS FALSE) IN ()) ASC  NULLS FIRST, ((TRIM(DISTINCT vt0.c0))+(0.5530990890334612)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((-1362910684)OR(x'3f80')))AND(vt0.c0))))<=((((((((((rt0.c4)AND(rt0.c1)))OR(vt0.c2)))AND(vt0.c1)))OR(rt0.c4)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2) IS FALSE) IN ()) ASC  NULLS FIRST, ((TRIM(DISTINCT vt0.c0))+(0.5530990890334612)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((((((-1362910684)OR(x'3f80')))AND(vt0.c0))))<=((((((((((rt0.c4)AND(rt0.c1)))OR(vt0.c2)))AND(vt0.c1)))OR(rt0.c4)))))) ORDER BY (((rt0.c2) IS FALSE) IN ()) ASC  NULLS FIRST, ((TRIM(DISTINCT vt0.c0))+(0.5530990890334612)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'') ORDER BY CAST(rt0.c3 AS BLOB) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c3 AS BLOB) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'') ORDER BY CAST(rt0.c3 AS BLOB) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c3 AS BLOB) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'') ORDER BY CAST(rt0.c3 AS BLOB) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) IS FALSE));
SELECT * FROM rt0, vt0 WHERE ((((rt0.c3 IN ()))OR(((vt0.c0)||(rt0.c2))))) ORDER BY (('990948454') IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ()))OR(((vt0.c0)||(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (('990948454') IS FALSE) ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c3 IN ()))OR(((vt0.c0)||(rt0.c2))))) ORDER BY (('990948454') IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ()))OR(((vt0.c0)||(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (('990948454') IS FALSE) ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c3 IN ()))OR(((vt0.c0)||(rt0.c2))))) ORDER BY (('990948454') IS FALSE) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (((((+ (vt0.c1)), (~ (vt0.c0)), ((((rt0.c3)OR(rt0.c3)))AND(vt0.c0))))>((CAST(rt0.c1 AS BLOB), rt0.c2, CASE WHEN vt0.c2 THEN rt0.c3 END)))) ORDER BY (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 END IN ())  NULLS FIRST, CAST(rt0.c3 AS NUMERIC) COLLATE RTRIM COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((+ (vt0.c1)), (~ (vt0.c0)), ((((rt0.c3)OR(rt0.c3)))AND(vt0.c0))))>((CAST(rt0.c1 AS BLOB), rt0.c2, CASE WHEN vt0.c2 THEN rt0.c3 END)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 END IN ())  NULLS FIRST, CAST(rt0.c3 AS NUMERIC) COLLATE RTRIM COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((+ (vt0.c1)), (~ (vt0.c0)), ((((rt0.c3)OR(rt0.c3)))AND(vt0.c0))))>((CAST(rt0.c1 AS BLOB), rt0.c2, CASE WHEN vt0.c2 THEN rt0.c3 END)))) ORDER BY (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 END IN ())  NULLS FIRST, CAST(rt0.c3 AS NUMERIC) COLLATE RTRIM COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((+ (vt0.c1)), (~ (vt0.c0)), ((((rt0.c3)OR(rt0.c3)))AND(vt0.c0))))>((CAST(rt0.c1 AS BLOB), rt0.c2, CASE WHEN vt0.c2 THEN rt0.c3 END)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 END IN ())  NULLS FIRST, CAST(rt0.c3 AS NUMERIC) COLLATE RTRIM COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((+ (vt0.c1)), (~ (vt0.c0)), ((((rt0.c3)OR(rt0.c3)))AND(vt0.c0))))>((CAST(rt0.c1 AS BLOB), rt0.c2, CASE WHEN vt0.c2 THEN rt0.c3 END)))) ORDER BY (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 END IN ())  NULLS FIRST, CAST(rt0.c3 AS NUMERIC) COLLATE RTRIM COLLATE BINARY DESC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE ((((vt0.c1 IN ())) NOTNULL)) ORDER BY ((((rt0.c2)OR(rt0.c3))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)OR(rt0.c3))) NOTNULL)  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c1 IN ())) NOTNULL)) ORDER BY ((((rt0.c2)OR(rt0.c3))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)OR(rt0.c3))) NOTNULL)  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c1 IN ())) NOTNULL)) ORDER BY ((((rt0.c2)OR(rt0.c3))) NOTNULL)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c3))) NOT BETWEEN (((0.7442874385494405)<>(rt0.c4))) AND (UPPER(DISTINCT rt0.c0)))) ORDER BY LIKELY(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))), (~ ((rt0.c4 IN ()))), CAST(((((rt0.c3)OR(1.847499252E9)))AND(rt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c3))) NOT BETWEEN (((0.7442874385494405)!=(rt0.c4))) AND (UPPER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))), (~ ((rt0.c4 IN ()))), CAST(((((rt0.c3)OR(1.847499252E9)))AND(rt0.c2)) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c3))) NOT BETWEEN (((0.7442874385494405)<>(rt0.c4))) AND (UPPER(DISTINCT rt0.c0)))) ORDER BY LIKELY(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))), (~ ((rt0.c4 IN ()))), CAST(((((rt0.c3)OR(1.847499252E9)))AND(rt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c3))) NOT BETWEEN (((0.7442874385494405)!=(rt0.c4))) AND (UPPER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))), (~ ((rt0.c4 IN ()))), CAST(((((rt0.c3)OR(1.847499252E9)))AND(rt0.c2)) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c3))) NOT BETWEEN (((0.7442874385494405)<>(rt0.c4))) AND (UPPER(DISTINCT rt0.c0)))) ORDER BY LIKELY(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))), (~ ((rt0.c4 IN ()))), CAST(((((rt0.c3)OR(1.847499252E9)))AND(rt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN 0.7412401454260008 THEN rt0.c3 ELSE rt0.c0 END) NOTNULL)) ORDER BY ((((rt0.c3)<<(rt0.c3)))>((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0.7412401454260008 THEN rt0.c3 ELSE rt0.c0 END) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)<<(rt0.c3)))>((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))))));
SELECT ALL * FROM rt0 WHERE (((CASE WHEN 0.7412401454260008 THEN rt0.c3 ELSE rt0.c0 END) NOTNULL)) ORDER BY ((((rt0.c3)<<(rt0.c3)))>((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0.7412401454260008 THEN rt0.c3 ELSE rt0.c0 END) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)<<(rt0.c3)))>((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))))));
SELECT ALL * FROM rt0 WHERE (((CASE WHEN 0.7412401454260008 THEN rt0.c3 ELSE rt0.c0 END) NOTNULL)) ORDER BY ((((rt0.c3)<<(rt0.c3)))>((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1 IN ('9v0DY'))) NOT NULL)) ORDER BY (NOT (CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END))  NULLS FIRST, ((CAST(NULL AS REAL)) NOT BETWEEN (CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c2 ELSE vt0.c1 END) AND (''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ('9v0DY'))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END))  NULLS FIRST, ((CAST(NULL AS REAL)) NOT BETWEEN (CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c2 ELSE vt0.c1 END) AND (''))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1 IN ('9v0DY'))) NOT NULL)) ORDER BY (NOT (CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END))  NULLS FIRST, ((CAST(NULL AS REAL)) NOT BETWEEN (CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c2 ELSE vt0.c1 END) AND (''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ('9v0DY'))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END))  NULLS FIRST, ((CAST(NULL AS REAL)) NOT BETWEEN (CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c2 ELSE vt0.c1 END) AND (''))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1 IN ('9v0DY'))) NOT NULL)) ORDER BY (NOT (CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END))  NULLS FIRST, ((CAST(NULL AS REAL)) NOT BETWEEN (CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c2 ELSE vt0.c1 END) AND (''))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST((+ (vt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((+ (vt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((+ (vt0.c2)) AS TEXT));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON rt0.c4 WHERE (((vt0.c0)>(vt0.c2)) COLLATE RTRIM) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>(vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON rt0.c4 ORDER BY rt0.c2);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON rt0.c4 WHERE (((vt0.c0)>(vt0.c2)) COLLATE RTRIM) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>(vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON rt0.c4 ORDER BY rt0.c2);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON rt0.c4 WHERE (((vt0.c0)>(vt0.c2)) COLLATE RTRIM) ORDER BY rt0.c2;
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) IS FALSE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) IS FALSE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) IS FALSE) AS NUMERIC));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN rtreenode(rt0.c1, rt0.c2) THEN ((rt0.c2) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rtreenode(rt0.c1, rt0.c2) THEN ((rt0.c2) IS TRUE) END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN rtreenode(rt0.c1, rt0.c2) THEN ((rt0.c2) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rtreenode(rt0.c1, rt0.c2) THEN ((rt0.c2) IS TRUE) END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN rtreenode(rt0.c1, rt0.c2) THEN ((rt0.c2) IS TRUE) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((-1.994217555E9) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((-1.994217555E9) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((-1.994217555E9) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((-1.994217555E9) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((-1.994217555E9) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKE(((((rt0.c4)OR(rt0.c1)))AND(rt0.c4)), (- (rt0.c4))));
SELECT SUM(count) FROM (SELECT ((LIKE(((((rt0.c4)OR(rt0.c1)))AND(rt0.c4)), (- (rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKE(((((rt0.c4)OR(rt0.c1)))AND(rt0.c4)), (- (rt0.c4))));
SELECT SUM(count) FROM (SELECT ((LIKE(((((rt0.c4)OR(rt0.c1)))AND(rt0.c4)), (- (rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKE(((((rt0.c4)OR(rt0.c1)))AND(rt0.c4)), (- (rt0.c4))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) IS FALSE) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) IS FALSE) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) IS FALSE) IN ()));
SELECT * FROM rt0 WHERE (CAST((- (rt0.c3)) AS BLOB)) ORDER BY (~ (((rt0.c2) IS FALSE))), UNLIKELY(CASE WHEN rt0.c4 THEN '' WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c3)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c2) IS FALSE))), UNLIKELY(CASE WHEN rt0.c4 THEN '' WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END));
SELECT * FROM rt0 WHERE (CAST((- (rt0.c3)) AS BLOB)) ORDER BY (~ (((rt0.c2) IS FALSE))), UNLIKELY(CASE WHEN rt0.c4 THEN '' WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c3)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c2) IS FALSE))), UNLIKELY(CASE WHEN rt0.c4 THEN '' WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END));
SELECT * FROM rt0 WHERE (CAST((- (rt0.c3)) AS BLOB)) ORDER BY (~ (((rt0.c2) IS FALSE))), UNLIKELY(CASE WHEN rt0.c4 THEN '' WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0)AND(vt0.c2)))/(((vt0.c2) BETWEEN (vt0.c1) AND (0Xffffffffff2a1d7d))))) ORDER BY (- (((rt0.c4) NOT BETWEEN ('-1362910684') AND (rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c2)))/(((vt0.c2) BETWEEN (vt0.c1) AND (0Xffffffffff2a1d7d))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (((rt0.c4) NOT BETWEEN ('-1362910684') AND (rt0.c3)))) ASC);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0)AND(vt0.c2)))/(((vt0.c2) BETWEEN (vt0.c1) AND (0Xffffffffff2a1d7d))))) ORDER BY (- (((rt0.c4) NOT BETWEEN ('-1362910684') AND (rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c2)))/(((vt0.c2) BETWEEN (vt0.c1) AND (0Xffffffffff2a1d7d))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (((rt0.c4) NOT BETWEEN ('-1362910684') AND (rt0.c3)))) ASC);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0)AND(vt0.c2)))/(((vt0.c2) BETWEEN (vt0.c1) AND (0Xffffffffff2a1d7d))))) ORDER BY (- (((rt0.c4) NOT BETWEEN ('-1362910684') AND (rt0.c3)))) ASC;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (- (CASE WHEN vt0.c1 THEN rt0.c2 END)) WHERE (((rt0.c3)>(((((NULL)AND(rt0.c3)))AND(vt0.c1))))) ORDER BY '/(<5?Ë°Æ?\' COLLATE NOCASE ASC  NULLS LAST, ((((vt0.c2) IS FALSE))IS NOT(vt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)>(((((NULL)AND(rt0.c3)))AND(vt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (- (CASE WHEN vt0.c1 THEN rt0.c2 END)) ORDER BY '/(<5?Ë°Æ?\' COLLATE NOCASE ASC  NULLS LAST, ((((vt0.c2) IS FALSE))IS NOT(vt0.c1)) DESC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (- (CASE WHEN vt0.c1 THEN rt0.c2 END)) WHERE (((rt0.c3)>(((((NULL)AND(rt0.c3)))AND(vt0.c1))))) ORDER BY '/(<5?Ë°Æ?\' COLLATE NOCASE ASC  NULLS LAST, ((((vt0.c2) IS FALSE))IS NOT(vt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)>(((((NULL)AND(rt0.c3)))AND(vt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (- (CASE WHEN vt0.c1 THEN rt0.c2 END)) ORDER BY '/(<5?Ë°Æ?\' COLLATE NOCASE ASC  NULLS LAST, ((((vt0.c2) IS FALSE))IS NOT(vt0.c1)) DESC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (- (CASE WHEN vt0.c1 THEN rt0.c2 END)) WHERE (((rt0.c3)>(((((NULL)AND(rt0.c3)))AND(vt0.c1))))) ORDER BY '/(<5?Ë°Æ?\' COLLATE NOCASE ASC  NULLS LAST, ((((vt0.c2) IS FALSE))IS NOT(vt0.c1)) DESC;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((+ (vt0.c1))) NOT BETWEEN (((rt0.c3)+(rt0.c3))) AND (((vt0.c2) NOTNULL)))) ORDER BY ((UNLIKELY(vt0.c2)) ISNULL) ASC  NULLS LAST, ((vt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c1))) NOT BETWEEN (((rt0.c3)+(rt0.c3))) AND (((vt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((UNLIKELY(vt0.c2)) ISNULL) ASC  NULLS LAST, ((vt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((+ (vt0.c1))) NOT BETWEEN (((rt0.c3)+(rt0.c3))) AND (((vt0.c2) NOTNULL)))) ORDER BY ((UNLIKELY(vt0.c2)) ISNULL) ASC  NULLS LAST, ((vt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c1))) NOT BETWEEN (((rt0.c3)+(rt0.c3))) AND (((vt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((UNLIKELY(vt0.c2)) ISNULL) ASC  NULLS LAST, ((vt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((+ (vt0.c1))) NOT BETWEEN (((rt0.c3)+(rt0.c3))) AND (((vt0.c2) NOTNULL)))) ORDER BY ((UNLIKELY(vt0.c2)) ISNULL) ASC  NULLS LAST, ((vt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((((((((((vt0.c2)OR(rt0.c3)))AND(vt0.c2)))AND(vt0.c2)))AND(rt0.c0)))<=(x''))) ORDER BY x'' COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c2)OR(rt0.c3)))AND(vt0.c2)))AND(vt0.c2)))AND(rt0.c0)))<=(x''))) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'' COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((((((((((vt0.c2)OR(rt0.c3)))AND(vt0.c2)))AND(vt0.c2)))AND(rt0.c0)))<=(x''))) ORDER BY x'' COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c2)OR(rt0.c3)))AND(vt0.c2)))AND(vt0.c2)))AND(rt0.c0)))<=(x''))) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'' COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((((((((((vt0.c2)OR(rt0.c3)))AND(vt0.c2)))AND(vt0.c2)))AND(rt0.c0)))<=(x''))) ORDER BY x'' COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY ((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 ELSE x'' END) AND (((rt0.c0) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 ELSE x'' END) AND (((rt0.c0) IS TRUE))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY ((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 ELSE x'' END) AND (((rt0.c0) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 ELSE x'' END) AND (((rt0.c0) IS TRUE))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY ((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 ELSE x'' END) AND (((rt0.c0) IS TRUE))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1)LIKE(vt0.c1)) AS INTEGER)) ORDER BY LIKELY(((vt0.c1)<<(x'7158')));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)LIKE(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY LIKELY(((vt0.c1)<<(x'7158'))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1)LIKE(vt0.c1)) AS INTEGER)) ORDER BY LIKELY(((vt0.c1)<<(x'7158')));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)LIKE(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY LIKELY(((vt0.c1)<<(x'7158'))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1)LIKE(vt0.c1)) AS INTEGER)) ORDER BY LIKELY(((vt0.c1)<<(x'7158')));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((((((rt0.c2, vt0.c0, vt0.c0))!=((vt0.c1, rt0.c1, vt0.c1))))AND(((vt0.c2) BETWEEN (rt0.c3) AND (vt0.c2)))))AND(ABS(vt0.c2))) WHERE (((((((rt0.c0)AND(vt0.c1)))AND(vt0.c1)))LIKE(CASE WHEN rt0.c4 THEN rt0.c2 END))) ORDER BY (((rt0.c1)OR(vt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(vt0.c1)))AND(vt0.c1)))LIKE(CASE WHEN rt0.c4 THEN rt0.c2 END))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((((((rt0.c2, vt0.c0, vt0.c0))<>((vt0.c1, rt0.c1, vt0.c1))))AND(((vt0.c2) BETWEEN (rt0.c3) AND (vt0.c2)))))AND(ABS(vt0.c2))) ORDER BY (((rt0.c1)OR(vt0.c1)) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((((((rt0.c2, vt0.c0, vt0.c0))!=((vt0.c1, rt0.c1, vt0.c1))))AND(((vt0.c2) BETWEEN (rt0.c3) AND (vt0.c2)))))AND(ABS(vt0.c2))) WHERE (((((((rt0.c0)AND(vt0.c1)))AND(vt0.c1)))LIKE(CASE WHEN rt0.c4 THEN rt0.c2 END))) ORDER BY (((rt0.c1)OR(vt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(vt0.c1)))AND(vt0.c1)))LIKE(CASE WHEN rt0.c4 THEN rt0.c2 END))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((((((rt0.c2, vt0.c0, vt0.c0))<>((vt0.c1, rt0.c1, vt0.c1))))AND(((vt0.c2) BETWEEN (rt0.c3) AND (vt0.c2)))))AND(ABS(vt0.c2))) ORDER BY (((rt0.c1)OR(vt0.c1)) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((((((rt0.c2, vt0.c0, vt0.c0))!=((vt0.c1, rt0.c1, vt0.c1))))AND(((vt0.c2) BETWEEN (rt0.c3) AND (vt0.c2)))))AND(ABS(vt0.c2))) WHERE (((((((rt0.c0)AND(vt0.c1)))AND(vt0.c1)))LIKE(CASE WHEN rt0.c4 THEN rt0.c2 END))) ORDER BY (((rt0.c1)OR(vt0.c1)) IN ())  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c3))) NOT BETWEEN (HEX(rt0.c3)) AND (((rt0.c0)>>(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c3))) NOT BETWEEN (HEX(rt0.c3)) AND (((rt0.c0)>>(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c3))) NOT BETWEEN (HEX(rt0.c3)) AND (((rt0.c0)>>(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c3))) NOT BETWEEN (HEX(rt0.c3)) AND (((rt0.c0)>>(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c3))) NOT BETWEEN (HEX(rt0.c3)) AND (((rt0.c0)>>(rt0.c4)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))GLOB(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))GLOB(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))GLOB(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))GLOB(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))GLOB(CAST(vt0.c0 AS BLOB))));
SELECT ALL * FROM vt0 WHERE (((('0.4317498763417481')) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('0.4317498763417481')) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((('0.4317498763417481')) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('0.4317498763417481')) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((('0.4317498763417481')) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((((vt0.c2))<=((vt0.c2))))));
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c2))<=((vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((((vt0.c2))<=((vt0.c2))))));
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c2))<=((vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((((vt0.c2))<=((vt0.c2))))));
SELECT * FROM rt0 WHERE (CAST((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c4))) AS BLOB)) ORDER BY ((rt0.c3 COLLATE NOCASE)/(LIKELIHOOD(rt0.c0, 0.7136412654716009)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c4))) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3 COLLATE NOCASE)/(LIKELIHOOD(rt0.c0, 0.7136412654716009)))  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c4))) AS BLOB)) ORDER BY ((rt0.c3 COLLATE NOCASE)/(LIKELIHOOD(rt0.c0, 0.7136412654716009)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c4))) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3 COLLATE NOCASE)/(LIKELIHOOD(rt0.c0, 0.7136412654716009)))  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c4))) AS BLOB)) ORDER BY ((rt0.c3 COLLATE NOCASE)/(LIKELIHOOD(rt0.c0, 0.7136412654716009)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS REAL)) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS REAL)) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (CAST(rt0.c2 AS INTEGER))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE 0x16848aa2  WHEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END THEN ((vt0.c1) IS FALSE) WHEN vt0.c2 COLLATE NOCASE THEN vt0.c1 COLLATE NOCASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c1)) THEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) ELSE ((rt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE 0x16848aa2  WHEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END THEN ((vt0.c1) IS FALSE) WHEN vt0.c2 COLLATE NOCASE THEN vt0.c1 COLLATE NOCASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c1)) THEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) ELSE ((rt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE 0x16848aa2  WHEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END THEN ((vt0.c1) IS FALSE) WHEN vt0.c2 COLLATE NOCASE THEN vt0.c1 COLLATE NOCASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c1)) THEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) ELSE ((rt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE 0x16848aa2  WHEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END THEN ((vt0.c1) IS FALSE) WHEN vt0.c2 COLLATE NOCASE THEN vt0.c1 COLLATE NOCASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c1)) THEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) ELSE ((rt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE 0x16848aa2  WHEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END THEN ((vt0.c1) IS FALSE) WHEN vt0.c2 COLLATE NOCASE THEN vt0.c1 COLLATE NOCASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c1)) THEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) ELSE ((rt0.c0) NOT NULL) END);
SELECT * FROM vt0, rt0 WHERE (((CAST(rt0.c3 AS INTEGER))<=(((((((((((((vt0.c2)OR(vt0.c1)))OR(rt0.c3)))AND(rt0.c1)))OR(vt0.c2)))AND(vt0.c0)))OR(rt0.c4))))) ORDER BY CAST(LTRIM(rt0.c4) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS INTEGER))<=(((((((((((((vt0.c2)OR(vt0.c1)))OR(rt0.c3)))AND(rt0.c1)))OR(vt0.c2)))AND(vt0.c0)))OR(rt0.c4))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(LTRIM(rt0.c4) AS NUMERIC) ASC);
SELECT * FROM vt0, rt0 WHERE (((CAST(rt0.c3 AS INTEGER))<=(((((((((((((vt0.c2)OR(vt0.c1)))OR(rt0.c3)))AND(rt0.c1)))OR(vt0.c2)))AND(vt0.c0)))OR(rt0.c4))))) ORDER BY CAST(LTRIM(rt0.c4) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS INTEGER))<=(((((((((((((vt0.c2)OR(vt0.c1)))OR(rt0.c3)))AND(rt0.c1)))OR(vt0.c2)))AND(vt0.c0)))OR(rt0.c4))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(LTRIM(rt0.c4) AS NUMERIC) ASC);
SELECT * FROM vt0, rt0 WHERE (((CAST(rt0.c3 AS INTEGER))<=(((((((((((((vt0.c2)OR(vt0.c1)))OR(rt0.c3)))AND(rt0.c1)))OR(vt0.c2)))AND(vt0.c0)))OR(rt0.c4))))) ORDER BY CAST(LTRIM(rt0.c4) AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0)GLOB(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0)GLOB(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0)GLOB(vt0.c1)))));
SELECT * FROM vt0 WHERE (CASE vt0.c2 COLLATE NOCASE  WHEN ((vt0.c2)AND(vt0.c1)) THEN (~ (vt0.c1)) WHEN vt0.c1 THEN ((vt0.c2) IS TRUE) WHEN (- (vt0.c1)) THEN (vt0.c1 IN (vt0.c0)) ELSE ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))OR('FP')))AND(vt0.c2)) END) ORDER BY (NOT ((((vt0.c2, vt0.c1, vt0.c1))<>((vt0.c1, vt0.c1, vt0.c2))))) ASC, ((((json_quote(vt0.c2))AND(((vt0.c0)&(vt0.c2)))))OR(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c2 COLLATE NOCASE  WHEN ((vt0.c2)AND(vt0.c1)) THEN (~ (vt0.c1)) WHEN vt0.c1 THEN ((vt0.c2) IS TRUE) WHEN (- (vt0.c1)) THEN (vt0.c1 IN (vt0.c0)) ELSE ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))OR('FP')))AND(vt0.c2)) END) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((((vt0.c2, vt0.c1, vt0.c1))<>((vt0.c1, vt0.c1, vt0.c2))))) ASC, ((((json_quote(vt0.c2))AND(((vt0.c0)&(vt0.c2)))))OR(vt0.c0)) ASC);
SELECT * FROM vt0 WHERE (CASE vt0.c2 COLLATE NOCASE  WHEN ((vt0.c2)AND(vt0.c1)) THEN (~ (vt0.c1)) WHEN vt0.c1 THEN ((vt0.c2) IS TRUE) WHEN (- (vt0.c1)) THEN (vt0.c1 IN (vt0.c0)) ELSE ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))OR('FP')))AND(vt0.c2)) END) ORDER BY (NOT ((((vt0.c2, vt0.c1, vt0.c1))<>((vt0.c1, vt0.c1, vt0.c2))))) ASC, ((((json_quote(vt0.c2))AND(((vt0.c0)&(vt0.c2)))))OR(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c2 COLLATE NOCASE  WHEN ((vt0.c2)AND(vt0.c1)) THEN (~ (vt0.c1)) WHEN vt0.c1 THEN ((vt0.c2) IS TRUE) WHEN (- (vt0.c1)) THEN (vt0.c1 IN (vt0.c0)) ELSE ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))OR('FP')))AND(vt0.c2)) END) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((((vt0.c2, vt0.c1, vt0.c1))<>((vt0.c1, vt0.c1, vt0.c2))))) ASC, ((((json_quote(vt0.c2))AND(((vt0.c0)&(vt0.c2)))))OR(vt0.c0)) ASC);
SELECT * FROM rt0 WHERE (-1.168001639E9) ORDER BY CASE ((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c1))  WHEN '-679201952' THEN (((rt0.c3, rt0.c3, rt0.c2, 0.8537926808240413, rt0.c1))>((rt0.c3, rt0.c4, rt0.c1, rt0.c2, rt0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((-1.168001639E9) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c1))  WHEN '-679201952' THEN (((rt0.c3, rt0.c3, rt0.c2, 0.8537926808240413, rt0.c1))>((rt0.c3, rt0.c4, rt0.c1, rt0.c2, rt0.c0))) END ASC);
SELECT * FROM rt0 WHERE (-1.168001639E9) ORDER BY CASE ((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c1))  WHEN '-679201952' THEN (((rt0.c3, rt0.c3, rt0.c2, 0.8537926808240413, rt0.c1))>((rt0.c3, rt0.c4, rt0.c1, rt0.c2, rt0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((-1.168001639E9) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c1))  WHEN '-679201952' THEN (((rt0.c3, rt0.c3, rt0.c2, 0.8537926808240413, rt0.c1))>((rt0.c3, rt0.c4, rt0.c1, rt0.c2, rt0.c0))) END ASC);
SELECT * FROM rt0 WHERE (-1.168001639E9) ORDER BY CASE ((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c1))  WHEN '-679201952' THEN (((rt0.c3, rt0.c3, rt0.c2, 0.8537926808240413, rt0.c1))>((rt0.c3, rt0.c4, rt0.c1, rt0.c2, rt0.c0))) END ASC;
SELECT COUNT(*) FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c1, rt0.c3))<=((rt0.c3, rt0.c4, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c0, rt0.c1, rt0.c3))<=((rt0.c3, rt0.c4, rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c1, rt0.c3))<=((rt0.c3, rt0.c4, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c0, rt0.c1, rt0.c3))<=((rt0.c3, rt0.c4, rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c1, rt0.c3))<=((rt0.c3, rt0.c4, rt0.c3))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) NOT NULL) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) NOT NULL) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3) NOT NULL) IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c4, rt0.c4)) NOT BETWEEN ((((((rt0.c4)AND(rt0.c3)))OR(rt0.c4)), rt0.c4, (((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) AND ((((((rt0.c0)OR(rt0.c3)))AND(NULL)), CASE WHEN rt0.c4 THEN rt0.c0 END, ((rt0.c1)IS(rt0.c3)))))) ORDER BY TRIM(DISTINCT rt0.c0 COLLATE BINARY) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c4, rt0.c4)) NOT BETWEEN ((((((rt0.c4)AND(rt0.c3)))OR(rt0.c4)), rt0.c4, (((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) AND ((((((rt0.c0)OR(rt0.c3)))AND(NULL)), CASE WHEN rt0.c4 THEN rt0.c0 END, ((rt0.c1)IS(rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY TRIM(DISTINCT rt0.c0 COLLATE BINARY) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c4, rt0.c4)) NOT BETWEEN ((((((rt0.c4)AND(rt0.c3)))OR(rt0.c4)), rt0.c4, (((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) AND ((((((rt0.c0)OR(rt0.c3)))AND(NULL)), CASE WHEN rt0.c4 THEN rt0.c0 END, ((rt0.c1)IS(rt0.c3)))))) ORDER BY TRIM(DISTINCT rt0.c0 COLLATE BINARY) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c4, rt0.c4)) NOT BETWEEN ((((((rt0.c4)AND(rt0.c3)))OR(rt0.c4)), rt0.c4, (((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) AND ((((((rt0.c0)OR(rt0.c3)))AND(NULL)), CASE WHEN rt0.c4 THEN rt0.c0 END, ((rt0.c1)IS(rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY TRIM(DISTINCT rt0.c0 COLLATE BINARY) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c4, rt0.c4)) NOT BETWEEN ((((((rt0.c4)AND(rt0.c3)))OR(rt0.c4)), rt0.c4, (((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) AND ((((((rt0.c0)OR(rt0.c3)))AND(NULL)), CASE WHEN rt0.c4 THEN rt0.c0 END, ((rt0.c1)IS(rt0.c3)))))) ORDER BY TRIM(DISTINCT rt0.c0 COLLATE BINARY) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((json_array(vt0.c0, vt0.c1, vt0.c1, vt0.c1) IN ())) ORDER BY ((((((vt0.c1)OR(vt0.c2)))OR(vt0.c1))) NOT BETWEEN (vt0.c2 COLLATE NOCASE) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((json_array(vt0.c0, vt0.c1, vt0.c1, vt0.c1) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)OR(vt0.c2)))OR(vt0.c1))) NOT BETWEEN (vt0.c2 COLLATE NOCASE) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END))  NULLS LAST);
SELECT * FROM vt0 WHERE ((json_array(vt0.c0, vt0.c1, vt0.c1, vt0.c1) IN ())) ORDER BY ((((((vt0.c1)OR(vt0.c2)))OR(vt0.c1))) NOT BETWEEN (vt0.c2 COLLATE NOCASE) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((json_array(vt0.c0, vt0.c1, vt0.c1, vt0.c1) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)OR(vt0.c2)))OR(vt0.c1))) NOT BETWEEN (vt0.c2 COLLATE NOCASE) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END))  NULLS LAST);
SELECT * FROM vt0 WHERE ((json_array(vt0.c0, vt0.c1, vt0.c1, vt0.c1) IN ())) ORDER BY ((((((vt0.c1)OR(vt0.c2)))OR(vt0.c1))) NOT BETWEEN (vt0.c2 COLLATE NOCASE) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (x'321f') ORDER BY (((((rt0.c0))<=((vt0.c2)))) NOT BETWEEN ((rt0.c1 IN (rt0.c4))) AND (CAST(vt0.c1 AS INTEGER)))  NULLS FIRST, NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'321f') IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c0))<=((vt0.c2)))) NOT BETWEEN ((rt0.c1 IN (rt0.c4))) AND (CAST(vt0.c1 AS INTEGER)))  NULLS FIRST, NULL ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (x'321f') ORDER BY (((((rt0.c0))<=((vt0.c2)))) NOT BETWEEN ((rt0.c1 IN (rt0.c4))) AND (CAST(vt0.c1 AS INTEGER)))  NULLS FIRST, NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'321f') IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c0))<=((vt0.c2)))) NOT BETWEEN ((rt0.c1 IN (rt0.c4))) AND (CAST(vt0.c1 AS INTEGER)))  NULLS FIRST, NULL ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (x'321f') ORDER BY (((((rt0.c0))<=((vt0.c2)))) NOT BETWEEN ((rt0.c1 IN (rt0.c4))) AND (CAST(vt0.c1 AS INTEGER)))  NULLS FIRST, NULL ASC;
SELECT ALL * FROM vt0, rt0 WHERE (TYPEOF((((rt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((0.5269278833335488)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((((rt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((0.5269278833335488))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (TYPEOF((((rt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((0.5269278833335488)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((((rt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((0.5269278833335488))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (TYPEOF((((rt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((0.5269278833335488)))));
SELECT * FROM rt0 CROSS JOIN vt0 ON ((LOWER(rt0.c3)) NOT NULL) WHERE ((((rt0.c4 COLLATE NOCASE))<=((CASE vt0.c2  WHEN rt0.c2 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4 COLLATE NOCASE))<=((CASE vt0.c2  WHEN rt0.c2 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((LOWER(rt0.c3)) NOT NULL));
SELECT * FROM rt0 CROSS JOIN vt0 ON ((LOWER(rt0.c3)) NOT NULL) WHERE ((((rt0.c4 COLLATE NOCASE))<=((CASE vt0.c2  WHEN rt0.c2 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4 COLLATE NOCASE))<=((CASE vt0.c2  WHEN rt0.c2 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((LOWER(rt0.c3)) NOT NULL));
SELECT * FROM rt0 CROSS JOIN vt0 ON ((LOWER(rt0.c3)) NOT NULL) WHERE ((((rt0.c4 COLLATE NOCASE))<=((CASE vt0.c2  WHEN rt0.c2 THEN rt0.c0 END))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN (rt0.c3)))%(CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN (rt0.c3)))%(CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN (rt0.c3)))%(CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN (rt0.c3)))%(CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN (rt0.c3)))%(CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT * FROM rt0 WHERE ((- (((rt0.c3)GLOB(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c3)GLOB(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (((rt0.c3)GLOB(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c3)GLOB(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (((rt0.c3)GLOB(rt0.c3)))));
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0, rt0 WHERE ((~ (CASE rt0.c4  WHEN vt0.c2 THEN rt0.c4 ELSE rt0.c3 END))) ORDER BY RTRIM((((NULL))<((vt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt0.c4  WHEN vt0.c2 THEN rt0.c4 ELSE rt0.c3 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY RTRIM((((NULL))<((vt0.c2)))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((~ (CASE rt0.c4  WHEN vt0.c2 THEN rt0.c4 ELSE rt0.c3 END))) ORDER BY RTRIM((((NULL))<((vt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt0.c4  WHEN vt0.c2 THEN rt0.c4 ELSE rt0.c3 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY RTRIM((((NULL))<((vt0.c2)))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((~ (CASE rt0.c4  WHEN vt0.c2 THEN rt0.c4 ELSE rt0.c3 END))) ORDER BY RTRIM((((NULL))<((vt0.c2)))) DESC;
SELECT * FROM vt0 WHERE (UPPER(DISTINCT CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END)) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS REAL)  NULLS FIRST, (NOT (((vt0.c0)||(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END)) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS REAL)  NULLS FIRST, (NOT (((vt0.c0)||(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (UPPER(DISTINCT CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END)) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS REAL)  NULLS FIRST, (NOT (((vt0.c0)||(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END)) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS REAL)  NULLS FIRST, (NOT (((vt0.c0)||(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (UPPER(DISTINCT CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END)) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS REAL)  NULLS FIRST, (NOT (((vt0.c0)||(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3))>=((vt0.c1))) IN (((rt0.c3)GLOB(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3))>=((vt0.c1))) IN (((rt0.c3)GLOB(vt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3))>=((vt0.c1))) IN (((rt0.c3)GLOB(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3))>=((vt0.c1))) IN (((rt0.c3)GLOB(vt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3))>=((vt0.c1))) IN (((rt0.c3)GLOB(vt0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE (TRIM(1982571332)) ORDER BY TRIM(DISTINCT CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN 0.20439505811872205 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END, ((vt0.c1)/(vt0.c2)));
SELECT SUM(count) FROM (SELECT ((TRIM(1982571332)) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN 0.20439505811872205 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END, ((vt0.c1)/(vt0.c2))));
SELECT COUNT(*) FROM vt0 WHERE (TRIM(1982571332)) ORDER BY TRIM(DISTINCT CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN 0.20439505811872205 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END, ((vt0.c1)/(vt0.c2)));
SELECT SUM(count) FROM (SELECT ((TRIM(1982571332)) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN 0.20439505811872205 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END, ((vt0.c1)/(vt0.c2))));
SELECT COUNT(*) FROM vt0 WHERE (TRIM(1982571332)) ORDER BY TRIM(DISTINCT CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN 0.20439505811872205 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END, ((vt0.c1)/(vt0.c2)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE ''  WHEN vt0.c0 THEN vt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE ''  WHEN vt0.c0 THEN vt0.c0 END AS REAL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE ''  WHEN vt0.c0 THEN vt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE ''  WHEN vt0.c0 THEN vt0.c0 END AS REAL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE ''  WHEN vt0.c0 THEN vt0.c0 END AS REAL));
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c1)IS NOT(rt0.c3))) ISNULL)) ORDER BY ((vt0.c2)>=(CAST(NULL AS TEXT)))  NULLS LAST, (((rt0.c3, vt0.c2, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0 COLLATE RTRIM, CASE WHEN rt0.c0 THEN vt0.c1 END)) AND (((((vt0.c0, rt0.c0, rt0.c2))==((vt0.c1, rt0.c4, rt0.c4))), (rt0.c4 IN (rt0.c4, x'')), ((vt0.c1)>(vt0.c0))))) DESC, (- (rt0.c3)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS NOT(rt0.c3))) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c2)>=(CAST(NULL AS TEXT)))  NULLS LAST, (((rt0.c3, vt0.c2, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0 COLLATE RTRIM, CASE WHEN rt0.c0 THEN vt0.c1 END)) AND (((((vt0.c0, rt0.c0, rt0.c2))=((vt0.c1, rt0.c4, rt0.c4))), (rt0.c4 IN (rt0.c4, x'')), ((vt0.c1)>(vt0.c0))))) DESC, (- (rt0.c3)) COLLATE BINARY);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c1)IS NOT(rt0.c3))) ISNULL)) ORDER BY ((vt0.c2)>=(CAST(NULL AS TEXT)))  NULLS LAST, (((rt0.c3, vt0.c2, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0 COLLATE RTRIM, CASE WHEN rt0.c0 THEN vt0.c1 END)) AND (((((vt0.c0, rt0.c0, rt0.c2))==((vt0.c1, rt0.c4, rt0.c4))), (rt0.c4 IN (rt0.c4, x'')), ((vt0.c1)>(vt0.c0))))) DESC, (- (rt0.c3)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS NOT(rt0.c3))) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c2)>=(CAST(NULL AS TEXT)))  NULLS LAST, (((rt0.c3, vt0.c2, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0 COLLATE RTRIM, CASE WHEN rt0.c0 THEN vt0.c1 END)) AND (((((vt0.c0, rt0.c0, rt0.c2))=((vt0.c1, rt0.c4, rt0.c4))), (rt0.c4 IN (rt0.c4, x'')), ((vt0.c1)>(vt0.c0))))) DESC, (- (rt0.c3)) COLLATE BINARY);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c1)IS NOT(rt0.c3))) ISNULL)) ORDER BY ((vt0.c2)>=(CAST(NULL AS TEXT)))  NULLS LAST, (((rt0.c3, vt0.c2, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0 COLLATE RTRIM, CASE WHEN rt0.c0 THEN vt0.c1 END)) AND (((((vt0.c0, rt0.c0, rt0.c2))==((vt0.c1, rt0.c4, rt0.c4))), (rt0.c4 IN (rt0.c4, x'')), ((vt0.c1)>(vt0.c0))))) DESC, (- (rt0.c3)) COLLATE BINARY;
SELECT * FROM vt0 WHERE (((((0x7307b02) BETWEEN (vt0.c0) AND (vt0.c2))) ISNULL)) ORDER BY (NOT (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST, '0.7412401454260008' ASC  NULLS LAST, vt0.c1 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((0X7307b02) BETWEEN (vt0.c0) AND (vt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST, '0.7412401454260008' ASC  NULLS LAST, vt0.c1 COLLATE RTRIM ASC);
SELECT * FROM vt0 WHERE (((((0x7307b02) BETWEEN (vt0.c0) AND (vt0.c2))) ISNULL)) ORDER BY (NOT (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST, '0.7412401454260008' ASC  NULLS LAST, vt0.c1 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((0X7307b02) BETWEEN (vt0.c0) AND (vt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST, '0.7412401454260008' ASC  NULLS LAST, vt0.c1 COLLATE RTRIM ASC);
SELECT * FROM vt0 WHERE (((((0x7307b02) BETWEEN (vt0.c0) AND (vt0.c2))) ISNULL)) ORDER BY (NOT (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST, '0.7412401454260008' ASC  NULLS LAST, vt0.c1 COLLATE RTRIM ASC;
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c4)))) BETWEEN (rt0.c2) AND (CAST(rt0.c0 AS NUMERIC)))) ORDER BY '-142409475' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c4)))) BETWEEN (rt0.c2) AND (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY '-142409475' ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c4)))) BETWEEN (rt0.c2) AND (CAST(rt0.c0 AS NUMERIC)))) ORDER BY '-142409475' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c4)))) BETWEEN (rt0.c2) AND (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY '-142409475' ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c4)))) BETWEEN (rt0.c2) AND (CAST(rt0.c0 AS NUMERIC)))) ORDER BY '-142409475' ASC  NULLS FIRST;
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2)+((- (rt0.c2)))) WHERE (((- ('1758839238')) IN ())) ORDER BY ((((((((((((CASE rt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE rt0.c3 END)OR(-1569249434)))AND(CAST(rt0.c4 AS NUMERIC))))AND(((rt0.c1)/(rt0.c4)))))AND(HEX(DISTINCT '-714956713'))))AND(vt0.c0)))OR(LAST_INSERT_ROWID())) DESC, vt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- ('1758839238')) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2)+((- (rt0.c2)))) ORDER BY ((((((((((((CASE rt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE rt0.c3 END)OR(-1569249434)))AND(CAST(rt0.c4 AS NUMERIC))))AND(((rt0.c1)/(rt0.c4)))))AND(HEX(DISTINCT '-714956713'))))AND(vt0.c0)))OR(LAST_INSERT_ROWID())) DESC, vt0.c2 DESC  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2)+((- (rt0.c2)))) WHERE (((- ('1758839238')) IN ())) ORDER BY ((((((((((((CASE rt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE rt0.c3 END)OR(-1569249434)))AND(CAST(rt0.c4 AS NUMERIC))))AND(((rt0.c1)/(rt0.c4)))))AND(HEX(DISTINCT '-714956713'))))AND(vt0.c0)))OR(LAST_INSERT_ROWID())) DESC, vt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- ('1758839238')) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2)+((- (rt0.c2)))) ORDER BY ((((((((((((CASE rt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE rt0.c3 END)OR(-1569249434)))AND(CAST(rt0.c4 AS NUMERIC))))AND(((rt0.c1)/(rt0.c4)))))AND(HEX(DISTINCT '-714956713'))))AND(vt0.c0)))OR(LAST_INSERT_ROWID())) DESC, vt0.c2 DESC  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2)+((- (rt0.c2)))) WHERE (((- ('1758839238')) IN ())) ORDER BY ((((((((((((CASE rt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE rt0.c3 END)OR(-1569249434)))AND(CAST(rt0.c4 AS NUMERIC))))AND(((rt0.c1)/(rt0.c4)))))AND(HEX(DISTINCT '-714956713'))))AND(vt0.c0)))OR(LAST_INSERT_ROWID())) DESC, vt0.c2 DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))&(((rt0.c1)>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))&(((rt0.c1)>(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))&(((rt0.c1)>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))&(((rt0.c1)>(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))&(((rt0.c1)>(rt0.c3)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (('1477356175') NOT BETWEEN ((vt0.c2 IN ())) AND (CASE vt0.c1  WHEN vt0.c0 THEN x'' END)) DESC  NULLS LAST, CAST((vt0.c1 IN ()) AS INTEGER) ASC  NULLS FIRST, ((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (('1477356175') NOT BETWEEN ((vt0.c2 IN ())) AND (CASE vt0.c1  WHEN vt0.c0 THEN x'' END)) DESC  NULLS LAST, CAST((vt0.c1 IN ()) AS INTEGER) ASC  NULLS FIRST, ((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (('1477356175') NOT BETWEEN ((vt0.c2 IN ())) AND (CASE vt0.c1  WHEN vt0.c0 THEN x'' END)) DESC  NULLS LAST, CAST((vt0.c1 IN ()) AS INTEGER) ASC  NULLS FIRST, ((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (('1477356175') NOT BETWEEN ((vt0.c2 IN ())) AND (CASE vt0.c1  WHEN vt0.c0 THEN x'' END)) DESC  NULLS LAST, CAST((vt0.c1 IN ()) AS INTEGER) ASC  NULLS FIRST, ((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (('1477356175') NOT BETWEEN ((vt0.c2 IN ())) AND (CASE vt0.c1  WHEN vt0.c0 THEN x'' END)) DESC  NULLS LAST, CAST((vt0.c1 IN ()) AS INTEGER) ASC  NULLS FIRST, ((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))) ASC;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))>=(vt0.c1))) ORDER BY (((((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1))<((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))))AND(((vt0.c1)AND(vt0.c0)))))OR(((vt0.c1)|(vt0.c0)))) ASC, CASE WHEN ((vt0.c1)=(vt0.c2)) THEN ((('_wk)…ì‰Äõk}r')) BETWEEN (('')) AND ((vt0.c0))) WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN '-2100427123' THEN vt0.c0 WHEN 0.715414156113867 THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN ((x'5bf1') BETWEEN (vt0.c2) AND (vt0.c0)) THEN QUOTE(4.4972339E8) END  NULLS LAST, ((+ (vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))>=(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1))<((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))))AND(((vt0.c1)AND(vt0.c0)))))OR(((vt0.c1)|(vt0.c0)))) ASC, CASE WHEN ((vt0.c1)==(vt0.c2)) THEN ((('_wk)…ì‰Äõk}r')) BETWEEN (('')) AND ((vt0.c0))) WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN '-2100427123' THEN vt0.c0 WHEN 0.715414156113867 THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN ((x'5bf1') BETWEEN (vt0.c2) AND (vt0.c0)) THEN QUOTE(4.4972339E8) END  NULLS LAST, ((+ (vt0.c1)) IN ()));
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))>=(vt0.c1))) ORDER BY (((((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1))<((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))))AND(((vt0.c1)AND(vt0.c0)))))OR(((vt0.c1)|(vt0.c0)))) ASC, CASE WHEN ((vt0.c1)=(vt0.c2)) THEN ((('_wk)…ì‰Äõk}r')) BETWEEN (('')) AND ((vt0.c0))) WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN '-2100427123' THEN vt0.c0 WHEN 0.715414156113867 THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN ((x'5bf1') BETWEEN (vt0.c2) AND (vt0.c0)) THEN QUOTE(4.4972339E8) END  NULLS LAST, ((+ (vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))>=(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1))<((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))))AND(((vt0.c1)AND(vt0.c0)))))OR(((vt0.c1)|(vt0.c0)))) ASC, CASE WHEN ((vt0.c1)==(vt0.c2)) THEN ((('_wk)…ì‰Äõk}r')) BETWEEN (('')) AND ((vt0.c0))) WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN '-2100427123' THEN vt0.c0 WHEN 0.715414156113867 THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN ((x'5bf1') BETWEEN (vt0.c2) AND (vt0.c0)) THEN QUOTE(4.4972339E8) END  NULLS LAST, ((+ (vt0.c1)) IN ()));
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))>=(vt0.c1))) ORDER BY (((((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1))<((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))))AND(((vt0.c1)AND(vt0.c0)))))OR(((vt0.c1)|(vt0.c0)))) ASC, CASE WHEN ((vt0.c1)=(vt0.c2)) THEN ((('_wk)…ì‰Äõk}r')) BETWEEN (('')) AND ((vt0.c0))) WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN '-2100427123' THEN vt0.c0 WHEN 0.715414156113867 THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN ((x'5bf1') BETWEEN (vt0.c2) AND (vt0.c0)) THEN QUOTE(4.4972339E8) END  NULLS LAST, ((+ (vt0.c1)) IN ());
SELECT COUNT(*) FROM rt0 WHERE (CAST(LIKELIHOOD(rt0.c1, 0.8334185504672825) AS NUMERIC)) ORDER BY ((((((rt0.c2)OR(rt0.c4)))AND(rt0.c4))) NOT BETWEEN (((rt0.c0)<=(rt0.c1))) AND (CAST(rt0.c3 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(rt0.c1, 0.8334185504672825) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)OR(rt0.c4)))AND(rt0.c4))) NOT BETWEEN (((rt0.c0)<=(rt0.c1))) AND (CAST(rt0.c3 AS INTEGER))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(LIKELIHOOD(rt0.c1, 0.8334185504672825) AS NUMERIC)) ORDER BY ((((((rt0.c2)OR(rt0.c4)))AND(rt0.c4))) NOT BETWEEN (((rt0.c0)<=(rt0.c1))) AND (CAST(rt0.c3 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(rt0.c1, 0.8334185504672825) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)OR(rt0.c4)))AND(rt0.c4))) NOT BETWEEN (((rt0.c0)<=(rt0.c1))) AND (CAST(rt0.c3 AS INTEGER))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(LIKELIHOOD(rt0.c1, 0.8334185504672825) AS NUMERIC)) ORDER BY ((((((rt0.c2)OR(rt0.c4)))AND(rt0.c4))) NOT BETWEEN (((rt0.c0)<=(rt0.c1))) AND (CAST(rt0.c3 AS INTEGER)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)>>(vt0.c1)) IN ())) ORDER BY NULL ASC  NULLS LAST, vt0.c2 DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)>>(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS LAST, vt0.c2 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)>>(vt0.c1)) IN ())) ORDER BY NULL ASC  NULLS LAST, vt0.c2 DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)>>(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS LAST, vt0.c2 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)>>(vt0.c1)) IN ())) ORDER BY NULL ASC  NULLS LAST, vt0.c2 DESC;
SELECT ALL * FROM rt0 WHERE (CAST((- (rt0.c1)) AS TEXT)) ORDER BY CASE LIKELY(DISTINCT rt0.c1)  WHEN NULL THEN (((rt0.c0, 'G	', x''))=((rt0.c3, rt0.c3, rt0.c0))) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CASE LIKELY(DISTINCT rt0.c1)  WHEN NULL THEN (((rt0.c0, 'G	', x''))==((rt0.c3, rt0.c3, rt0.c0))) END DESC);
SELECT ALL * FROM rt0 WHERE (CAST((- (rt0.c1)) AS TEXT)) ORDER BY CASE LIKELY(DISTINCT rt0.c1)  WHEN NULL THEN (((rt0.c0, 'G	', x''))=((rt0.c3, rt0.c3, rt0.c0))) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CASE LIKELY(DISTINCT rt0.c1)  WHEN NULL THEN (((rt0.c0, 'G	', x''))==((rt0.c3, rt0.c3, rt0.c0))) END DESC);
SELECT ALL * FROM rt0 WHERE (CAST((- (rt0.c1)) AS TEXT)) ORDER BY CASE LIKELY(DISTINCT rt0.c1)  WHEN NULL THEN (((rt0.c0, 'G	', x''))=((rt0.c3, rt0.c3, rt0.c0))) END DESC;
SELECT * FROM vt0 WHERE ((((((((((('r\nKi') NOT BETWEEN (vt0.c0) AND (vt0.c2)))OR(((vt0.c2) IS FALSE))))OR(ABS(vt0.c1))))AND((NOT (vt0.c2)))))AND(((vt0.c0)>>(vt0.c2))))) ORDER BY ((UNICODE(vt0.c0))IS NOT((NOT (vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((((((((('r\nKi') NOT BETWEEN (vt0.c0) AND (vt0.c2)))OR(((vt0.c2) IS FALSE))))OR(ABS(vt0.c1))))AND((NOT (vt0.c2)))))AND(((vt0.c0)>>(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((UNICODE(vt0.c0))IS NOT((NOT (vt0.c1)))));
SELECT * FROM vt0 WHERE ((((((((((('r\nKi') NOT BETWEEN (vt0.c0) AND (vt0.c2)))OR(((vt0.c2) IS FALSE))))OR(ABS(vt0.c1))))AND((NOT (vt0.c2)))))AND(((vt0.c0)>>(vt0.c2))))) ORDER BY ((UNICODE(vt0.c0))IS NOT((NOT (vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((((((((('r\nKi') NOT BETWEEN (vt0.c0) AND (vt0.c2)))OR(((vt0.c2) IS FALSE))))OR(ABS(vt0.c1))))AND((NOT (vt0.c2)))))AND(((vt0.c0)>>(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((UNICODE(vt0.c0))IS NOT((NOT (vt0.c1)))));
SELECT * FROM vt0 WHERE ((((((((((('r\nKi') NOT BETWEEN (vt0.c0) AND (vt0.c2)))OR(((vt0.c2) IS FALSE))))OR(ABS(vt0.c1))))AND((NOT (vt0.c2)))))AND(((vt0.c0)>>(vt0.c2))))) ORDER BY ((UNICODE(vt0.c0))IS NOT((NOT (vt0.c1))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON NULL WHERE (CASE WHEN ((((rt0.c0)AND(vt0.c2)))AND(rt0.c4)) THEN 0.2746243935502679 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c0)AND(vt0.c2)))AND(rt0.c4)) THEN 0.2746243935502679 COLLATE BINARY END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON NULL);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON NULL WHERE (CASE WHEN ((((rt0.c0)AND(vt0.c2)))AND(rt0.c4)) THEN 0.2746243935502679 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c0)AND(vt0.c2)))AND(rt0.c4)) THEN 0.2746243935502679 COLLATE BINARY END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON NULL);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON NULL WHERE (CASE WHEN ((((rt0.c0)AND(vt0.c2)))AND(rt0.c4)) THEN 0.2746243935502679 COLLATE BINARY END);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2) BETWEEN (x'3b40') AND (rt0.c2)) IN ())) ORDER BY (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)), ((rt0.c4)|(0xffffffff9c3188ed)), CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END))==(((('nÓáÑ') NOTNULL), TRIM(rt0.c3, rt0.c2), ((rt0.c3) ISNULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (x'3b40') AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)), ((rt0.c4)|(0Xffffffff9c3188ed)), CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END))==(((('nÓáÑ') NOTNULL), TRIM(rt0.c3, rt0.c2), ((rt0.c3) ISNULL)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2) BETWEEN (x'3b40') AND (rt0.c2)) IN ())) ORDER BY (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)), ((rt0.c4)|(0xffffffff9c3188ed)), CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END))==(((('nÓáÑ') NOTNULL), TRIM(rt0.c3, rt0.c2), ((rt0.c3) ISNULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (x'3b40') AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)), ((rt0.c4)|(0Xffffffff9c3188ed)), CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END))==(((('nÓáÑ') NOTNULL), TRIM(rt0.c3, rt0.c2), ((rt0.c3) ISNULL)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2) BETWEEN (x'3b40') AND (rt0.c2)) IN ())) ORDER BY (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)), ((rt0.c4)|(0xffffffff9c3188ed)), CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END))==(((('nÓáÑ') NOTNULL), TRIM(rt0.c3, rt0.c2), ((rt0.c3) ISNULL)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) IS TRUE));
SELECT * FROM vt0, rt0 WHERE (CAST(((vt0.c1) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(((vt0.c1) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(((vt0.c1) ISNULL) AS BLOB));
SELECT * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c2);
SELECT * FROM rt0 WHERE ((((+ (rt0.c2)))IS NOT(((rt0.c3)<<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2)))IS NOT(((rt0.c3)<<(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((+ (rt0.c2)))IS NOT(((rt0.c3)<<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2)))IS NOT(((rt0.c3)<<(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((+ (rt0.c2)))IS NOT(((rt0.c3)<<(rt0.c0)))));
SELECT ALL * FROM vt0 NOT INDEXED NATURAL JOIN rt0 WHERE ((~ (rt0.c1))) ORDER BY CASE 0.6673813688567419  WHEN vt0.c2 COLLATE NOCASE THEN ((vt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)) ELSE ((vt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CASE 0.6673813688567419  WHEN vt0.c2 COLLATE NOCASE THEN ((vt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)) ELSE ((vt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM vt0 NOT INDEXED NATURAL JOIN rt0 WHERE ((~ (rt0.c1))) ORDER BY CASE 0.6673813688567419  WHEN vt0.c2 COLLATE NOCASE THEN ((vt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)) ELSE ((vt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CASE 0.6673813688567419  WHEN vt0.c2 COLLATE NOCASE THEN ((vt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)) ELSE ((vt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM vt0 NOT INDEXED NATURAL JOIN rt0 WHERE ((~ (rt0.c1))) ORDER BY CASE 0.6673813688567419  WHEN vt0.c2 COLLATE NOCASE THEN ((vt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)) ELSE ((vt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (LOWER(CAST(rt0.c4 AS TEXT))) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN ((rt0.c1)GLOB(rt0.c3)) ELSE load_extension(1780386927, 179673934) END  NULLS LAST, ((((CAST(rt0.c1 AS REAL))AND((- (rt0.c4)))))AND(CAST(rt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((LOWER(CAST(rt0.c4 AS TEXT))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (rt0.c0 IN ()) THEN ((rt0.c1)GLOB(rt0.c3)) ELSE load_extension(1780386927, 179673934) END  NULLS LAST, ((((CAST(rt0.c1 AS REAL))AND((- (rt0.c4)))))AND(CAST(rt0.c0 AS TEXT))));
SELECT COUNT(*) FROM rt0 WHERE (LOWER(CAST(rt0.c4 AS TEXT))) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN ((rt0.c1)GLOB(rt0.c3)) ELSE load_extension(1780386927, 179673934) END  NULLS LAST, ((((CAST(rt0.c1 AS REAL))AND((- (rt0.c4)))))AND(CAST(rt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((LOWER(CAST(rt0.c4 AS TEXT))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (rt0.c0 IN ()) THEN ((rt0.c1)GLOB(rt0.c3)) ELSE load_extension(1780386927, 179673934) END  NULLS LAST, ((((CAST(rt0.c1 AS REAL))AND((- (rt0.c4)))))AND(CAST(rt0.c0 AS TEXT))));
SELECT ALL * FROM vt0, rt0 WHERE ((((((vt0.c1))>((2108315154)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))>((2108315154)))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((vt0.c1))>((2108315154)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))>((2108315154)))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((vt0.c1))>((2108315154)))) IS TRUE));
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c2)-(rt0.c1)))>(((((rt0.c4)AND(rt0.c4)))OR(rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)-(rt0.c1)))>(((((rt0.c4)AND(rt0.c4)))OR(rt0.c4))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c2)-(rt0.c1)))>(((((rt0.c4)AND(rt0.c4)))OR(rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)-(rt0.c1)))>(((((rt0.c4)AND(rt0.c4)))OR(rt0.c4))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c2)-(rt0.c1)))>(((((rt0.c4)AND(rt0.c4)))OR(rt0.c4))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c2))=((vt0.c0)))) NOTNULL)) ORDER BY rt0.c4  NULLS FIRST, (CAST(rt0.c2 AS INTEGER) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c2))=((vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c4  NULLS FIRST, (CAST(rt0.c2 AS INTEGER) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c2))=((vt0.c0)))) NOTNULL)) ORDER BY rt0.c4  NULLS FIRST, (CAST(rt0.c2 AS INTEGER) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c2))=((vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c4  NULLS FIRST, (CAST(rt0.c2 AS INTEGER) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c2))=((vt0.c0)))) NOTNULL)) ORDER BY rt0.c4  NULLS FIRST, (CAST(rt0.c2 AS INTEGER) IN ()) DESC;
SELECT ALL * FROM rt0 WHERE ((NOT (json_valid('2052833131')))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (json_valid('2052833131')))) IS TRUE)  as count FROM rt0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((NOT (json_valid('2052833131')))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (json_valid('2052833131')))) IS TRUE)  as count FROM rt0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((NOT (json_valid('2052833131')))) ORDER BY NULL  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c3, rt0.c2, rt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), ((rt0.c4) NOTNULL), ((rt0.c0) NOT NULL))) AND ((0Xffffffff9eac327a, vt0.c1 COLLATE BINARY, x'' COLLATE RTRIM)))) ORDER BY (~ (QUOTE(x''))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c2, rt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), ((rt0.c4) NOTNULL), ((rt0.c0) NOT NULL))) AND ((0xffffffff9eac327a, vt0.c1 COLLATE BINARY, x'' COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (QUOTE(x''))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c3, rt0.c2, rt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), ((rt0.c4) NOTNULL), ((rt0.c0) NOT NULL))) AND ((0Xffffffff9eac327a, vt0.c1 COLLATE BINARY, x'' COLLATE RTRIM)))) ORDER BY (~ (QUOTE(x''))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c2, rt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), ((rt0.c4) NOTNULL), ((rt0.c0) NOT NULL))) AND ((0xffffffff9eac327a, vt0.c1 COLLATE BINARY, x'' COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (QUOTE(x''))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c3, rt0.c2, rt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), ((rt0.c4) NOTNULL), ((rt0.c0) NOT NULL))) AND ((0Xffffffff9eac327a, vt0.c1 COLLATE BINARY, x'' COLLATE RTRIM)))) ORDER BY (~ (QUOTE(x''))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(0.03072582474032637)))AND(0.4317498763417481))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))) AND (vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(0.03072582474032637)))AND(0.4317498763417481))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(0.03072582474032637)))AND(0.4317498763417481))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))) AND (vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(0.03072582474032637)))AND(0.4317498763417481))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(0.03072582474032637)))AND(0.4317498763417481))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))) AND (vt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (CASE vt0.c0  WHEN '0Qi\r8S' THEN vt0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c2 ELSE vt0.c1 END)) WHERE (CASE 0.8431856934094216  WHEN (((rt0.c3, rt0.c1, vt0.c0))<((rt0.c0, rt0.c0, rt0.c3))) THEN CAST(vt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.8431856934094216  WHEN (((rt0.c3, rt0.c1, vt0.c0))<((rt0.c0, rt0.c0, rt0.c3))) THEN CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (CASE vt0.c0  WHEN '0Qi\r8S' THEN vt0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c2 ELSE vt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (CASE vt0.c0  WHEN '0Qi\r8S' THEN vt0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c2 ELSE vt0.c1 END)) WHERE (CASE 0.8431856934094216  WHEN (((rt0.c3, rt0.c1, vt0.c0))<((rt0.c0, rt0.c0, rt0.c3))) THEN CAST(vt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.8431856934094216  WHEN (((rt0.c3, rt0.c1, vt0.c0))<((rt0.c0, rt0.c0, rt0.c3))) THEN CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (CASE vt0.c0  WHEN '0Qi\r8S' THEN vt0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c2 ELSE vt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (CASE vt0.c0  WHEN '0Qi\r8S' THEN vt0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c2 ELSE vt0.c1 END)) WHERE (CASE 0.8431856934094216  WHEN (((rt0.c3, rt0.c1, vt0.c0))<((rt0.c0, rt0.c0, rt0.c3))) THEN CAST(vt0.c0 AS BLOB) END);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END AS TEXT));
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)*(vt0.c2)) THEN CASE vt0.c1  WHEN 0.08378730190359296 THEN vt0.c1 END END) ORDER BY (((vt0.c0 IN ())) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)*(vt0.c2)) THEN CASE vt0.c1  WHEN 0.08378730190359296 THEN vt0.c1 END END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT NULL) ASC);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)*(vt0.c2)) THEN CASE vt0.c1  WHEN 0.08378730190359296 THEN vt0.c1 END END) ORDER BY (((vt0.c0 IN ())) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)*(vt0.c2)) THEN CASE vt0.c1  WHEN 0.08378730190359296 THEN vt0.c1 END END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT NULL) ASC);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)*(vt0.c2)) THEN CASE vt0.c1  WHEN 0.08378730190359296 THEN vt0.c1 END END) ORDER BY (((vt0.c0 IN ())) NOT NULL) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1)+(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN -664617882 THEN rt0.c2 ELSE rt0.c3 END))) ORDER BY ((rt0.c4) ISNULL), CASE CAST(vt0.c2 AS NUMERIC)  WHEN (+ (rt0.c2)) THEN vt0.c1 ELSE rt0.c2 COLLATE NOCASE END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)+(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN -664617882 THEN rt0.c2 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c4) ISNULL), CASE CAST(vt0.c2 AS NUMERIC)  WHEN (+ (rt0.c2)) THEN vt0.c1 ELSE rt0.c2 COLLATE NOCASE END DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1)+(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN -664617882 THEN rt0.c2 ELSE rt0.c3 END))) ORDER BY ((rt0.c4) ISNULL), CASE CAST(vt0.c2 AS NUMERIC)  WHEN (+ (rt0.c2)) THEN vt0.c1 ELSE rt0.c2 COLLATE NOCASE END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)+(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN -664617882 THEN rt0.c2 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c4) ISNULL), CASE CAST(vt0.c2 AS NUMERIC)  WHEN (+ (rt0.c2)) THEN vt0.c1 ELSE rt0.c2 COLLATE NOCASE END DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1)+(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN -664617882 THEN rt0.c2 ELSE rt0.c3 END))) ORDER BY ((rt0.c4) ISNULL), CASE CAST(vt0.c2 AS NUMERIC)  WHEN (+ (rt0.c2)) THEN vt0.c1 ELSE rt0.c2 COLLATE NOCASE END DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c2)OR(x'')))AND(rt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c4) AND (rt0.c3))) AND ((((rt0.c2))<>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c2)OR(x'')))AND(rt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c4) AND (rt0.c3))) AND ((((rt0.c2))<>((vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c2)OR(x'')))AND(rt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c4) AND (rt0.c3))) AND ((((rt0.c2))<>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c2)OR(x'')))AND(rt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c4) AND (rt0.c3))) AND ((((rt0.c2))<>((vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c2)OR(x'')))AND(rt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c4) AND (rt0.c3))) AND ((((rt0.c2))<>((vt0.c0))))));
SELECT * FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c3)) BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c0))), rt0.c4 COLLATE BINARY, CAST(rt0.c3 AS NUMERIC))) AND (((rt0.c3 IN ()), ((rt0.c2)/(rt0.c4)), rt0.c1)))) ORDER BY (((rt0.c2)GLOB(rt0.c2)) IN (((((((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c4)), CAST(rt0.c0 AS TEXT))) DESC, CAST(0.9741808127192345 AS BLOB);
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c1, rt0.c3)) BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c0))), rt0.c4 COLLATE BINARY, CAST(rt0.c3 AS NUMERIC))) AND (((rt0.c3 IN ()), ((rt0.c2)/(rt0.c4)), rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)GLOB(rt0.c2)) IN (((((((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c4)), CAST(rt0.c0 AS TEXT))) DESC, CAST(0.9741808127192345 AS BLOB));
SELECT * FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c3)) BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c0))), rt0.c4 COLLATE BINARY, CAST(rt0.c3 AS NUMERIC))) AND (((rt0.c3 IN ()), ((rt0.c2)/(rt0.c4)), rt0.c1)))) ORDER BY (((rt0.c2)GLOB(rt0.c2)) IN (((((((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c4)), CAST(rt0.c0 AS TEXT))) DESC, CAST(0.9741808127192345 AS BLOB);
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c1, rt0.c3)) BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c0))), rt0.c4 COLLATE BINARY, CAST(rt0.c3 AS NUMERIC))) AND (((rt0.c3 IN ()), ((rt0.c2)/(rt0.c4)), rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)GLOB(rt0.c2)) IN (((((((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c4)), CAST(rt0.c0 AS TEXT))) DESC, CAST(0.9741808127192345 AS BLOB));
SELECT * FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c3)) BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c0))), rt0.c4 COLLATE BINARY, CAST(rt0.c3 AS NUMERIC))) AND (((rt0.c3 IN ()), ((rt0.c2)/(rt0.c4)), rt0.c1)))) ORDER BY (((rt0.c2)GLOB(rt0.c2)) IN (((((((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c4)), CAST(rt0.c0 AS TEXT))) DESC, CAST(0.9741808127192345 AS BLOB);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c2)-(vt0.c1)) THEN (vt0.c0 IN ()) ELSE vt0.c1 END) ORDER BY (+ ((+ (vt0.c1)))) ASC, (((0.0021482775472009275)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN x'f130' WHEN -2.47657708E8 THEN vt0.c2 WHEN x'b3e4' THEN 0x1863b0ad ELSE vt0.c0 END))) ASC, SUBSTR(SQLITE_COMPILEOPTION_USED(vt0.c2), CASE vt0.c1  WHEN vt0.c2 THEN 'Qn' ELSE vt0.c2 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c2)-(vt0.c1)) THEN (vt0.c0 IN ()) ELSE vt0.c1 END) IS TRUE)  as count FROM vt0 ORDER BY (+ ((+ (vt0.c1)))) ASC, (((0.0021482775472009275)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN x'f130' WHEN -2.47657708E8 THEN vt0.c2 WHEN x'b3e4' THEN 0X1863b0ad ELSE vt0.c0 END))) ASC, SUBSTR(SQLITE_COMPILEOPTION_USED(vt0.c2), CASE vt0.c1  WHEN vt0.c2 THEN 'Qn' ELSE vt0.c2 END)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c2)-(vt0.c1)) THEN (vt0.c0 IN ()) ELSE vt0.c1 END) ORDER BY (+ ((+ (vt0.c1)))) ASC, (((0.0021482775472009275)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN x'f130' WHEN -2.47657708E8 THEN vt0.c2 WHEN x'b3e4' THEN 0x1863b0ad ELSE vt0.c0 END))) ASC, SUBSTR(SQLITE_COMPILEOPTION_USED(vt0.c2), CASE vt0.c1  WHEN vt0.c2 THEN 'Qn' ELSE vt0.c2 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c2)-(vt0.c1)) THEN (vt0.c0 IN ()) ELSE vt0.c1 END) IS TRUE)  as count FROM vt0 ORDER BY (+ ((+ (vt0.c1)))) ASC, (((0.0021482775472009275)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN x'f130' WHEN -2.47657708E8 THEN vt0.c2 WHEN x'b3e4' THEN 0X1863b0ad ELSE vt0.c0 END))) ASC, SUBSTR(SQLITE_COMPILEOPTION_USED(vt0.c2), CASE vt0.c1  WHEN vt0.c2 THEN 'Qn' ELSE vt0.c2 END)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c2)-(vt0.c1)) THEN (vt0.c0 IN ()) ELSE vt0.c1 END) ORDER BY (+ ((+ (vt0.c1)))) ASC, (((0.0021482775472009275)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN x'f130' WHEN -2.47657708E8 THEN vt0.c2 WHEN x'b3e4' THEN 0x1863b0ad ELSE vt0.c0 END))) ASC, SUBSTR(SQLITE_COMPILEOPTION_USED(vt0.c2), CASE vt0.c1  WHEN vt0.c2 THEN 'Qn' ELSE vt0.c2 END)  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'');
SELECT ALL * FROM vt0, rt0 WHERE (((CASE rt0.c4  WHEN rt0.c1 THEN vt0.c2 END)<=(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c4  WHEN rt0.c1 THEN vt0.c2 END)<=(rt0.c0))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE rt0.c4  WHEN rt0.c1 THEN vt0.c2 END)<=(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c4  WHEN rt0.c1 THEN vt0.c2 END)<=(rt0.c0))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE rt0.c4  WHEN rt0.c1 THEN vt0.c2 END)<=(rt0.c0)));
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c1)))<<(((vt0.c1)*(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c1)))<<(((vt0.c1)*(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c1)))<<(((vt0.c1)*(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c1)))<<(((vt0.c1)*(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c1)))<<(((vt0.c1)*(vt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)))|(UPPER(rt0.c0)))) ORDER BY rt0.c4 ASC  NULLS LAST, CASE WHEN ((rt0.c1) IS FALSE) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)))|(UPPER(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c4 ASC  NULLS LAST, CASE WHEN ((rt0.c1) IS FALSE) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END END);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)))|(UPPER(rt0.c0)))) ORDER BY rt0.c4 ASC  NULLS LAST, CASE WHEN ((rt0.c1) IS FALSE) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)))|(UPPER(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c4 ASC  NULLS LAST, CASE WHEN ((rt0.c1) IS FALSE) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END END);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)))|(UPPER(rt0.c0)))) ORDER BY rt0.c4 ASC  NULLS LAST, CASE WHEN ((rt0.c1) IS FALSE) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END END;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c1)IS NOT(rt0.c2)))) AND (((rt0.c1 IN (rt0.c1)))))) ORDER BY (((((~ (rt0.c2)))AND(((((rt0.c4)AND(rt0.c1)))OR(rt0.c0)))))OR(((rt0.c3) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((rt0.c1)IS NOT(rt0.c2)))) AND (((rt0.c1 IN (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((~ (rt0.c2)))AND(((((rt0.c4)AND(rt0.c1)))OR(rt0.c0)))))OR(((rt0.c3) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c1)IS NOT(rt0.c2)))) AND (((rt0.c1 IN (rt0.c1)))))) ORDER BY (((((~ (rt0.c2)))AND(((((rt0.c4)AND(rt0.c1)))OR(rt0.c0)))))OR(((rt0.c3) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((rt0.c1)IS NOT(rt0.c2)))) AND (((rt0.c1 IN (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((~ (rt0.c2)))AND(((((rt0.c4)AND(rt0.c1)))OR(rt0.c0)))))OR(((rt0.c3) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c1)IS NOT(rt0.c2)))) AND (((rt0.c1 IN (rt0.c1)))))) ORDER BY (((((~ (rt0.c2)))AND(((((rt0.c4)AND(rt0.c1)))OR(rt0.c0)))))OR(((rt0.c3) NOTNULL)));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(0.3344150587283291)))OR(vt0.c2))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(0.3344150587283291)))OR(vt0.c2))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(0.3344150587283291)))OR(vt0.c2))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(0.3344150587283291)))OR(vt0.c2))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(0.3344150587283291)))OR(vt0.c2))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c2) NOTNULL))));
SELECT ALL * FROM vt0, rt0 WHERE ((~ ((rt0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c4 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((~ ((rt0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c4 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((~ ((rt0.c4 IN ()))));
SELECT * FROM rt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (SQLITE_SOURCE_ID());
SELECT ALL COUNT(*) FROM vt0 WHERE (DATETIME(vt0.c2, CAST(vt0.c1 AS BLOB), ((vt0.c1)IS(vt0.c0)))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(vt0.c2, CAST(vt0.c1 AS BLOB), ((vt0.c1)IS(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (DATETIME(vt0.c2, CAST(vt0.c1 AS BLOB), ((vt0.c1)IS(vt0.c0)))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(vt0.c2, CAST(vt0.c1 AS BLOB), ((vt0.c1)IS(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (DATETIME(vt0.c2, CAST(vt0.c1 AS BLOB), ((vt0.c1)IS(vt0.c0)))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOTNULL) ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- ((((rt0.c4))=((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt0.c4))==((rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- ((((rt0.c4))=((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt0.c4))==((rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- ((((rt0.c4))=((rt0.c3))))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON CAST(vt0.c2 COLLATE NOCASE AS TEXT) WHERE (((LIKELY(vt0.c1)) IS TRUE)) ORDER BY CASE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((0.37961726743991786)))  WHEN ((rt0.c0)*(rt0.c2)) THEN ((rt0.c0)>=(rt0.c4)) END;
SELECT SUM(count) FROM (SELECT ((((LIKELY(vt0.c1)) IS TRUE)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CAST(vt0.c2 COLLATE NOCASE AS TEXT) ORDER BY CASE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((0.37961726743991786)))  WHEN ((rt0.c0)*(rt0.c2)) THEN ((rt0.c0)>=(rt0.c4)) END);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON CAST(vt0.c2 COLLATE NOCASE AS TEXT) WHERE (((LIKELY(vt0.c1)) IS TRUE)) ORDER BY CASE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((0.37961726743991786)))  WHEN ((rt0.c0)*(rt0.c2)) THEN ((rt0.c0)>=(rt0.c4)) END;
SELECT SUM(count) FROM (SELECT ((((LIKELY(vt0.c1)) IS TRUE)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CAST(vt0.c2 COLLATE NOCASE AS TEXT) ORDER BY CASE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((0.37961726743991786)))  WHEN ((rt0.c0)*(rt0.c2)) THEN ((rt0.c0)>=(rt0.c4)) END);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON CAST(vt0.c2 COLLATE NOCASE AS TEXT) WHERE (((LIKELY(vt0.c1)) IS TRUE)) ORDER BY CASE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((0.37961726743991786)))  WHEN ((rt0.c0)*(rt0.c2)) THEN ((rt0.c0)>=(rt0.c4)) END;
SELECT ALL * FROM vt0 WHERE ((JULIANDAY(vt0.c1, vt0.c0, vt0.c2) IN ())) ORDER BY CASE ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0))  WHEN (((vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c2))) THEN (((vt0.c1))>((vt0.c1))) END DESC;
SELECT SUM(count) FROM (SELECT (((JULIANDAY(vt0.c1, vt0.c0, vt0.c2) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0))  WHEN (((vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c2))) THEN (((vt0.c1))>((vt0.c1))) END DESC);
SELECT ALL * FROM vt0 WHERE ((JULIANDAY(vt0.c1, vt0.c0, vt0.c2) IN ())) ORDER BY CASE ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0))  WHEN (((vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c2))) THEN (((vt0.c1))>((vt0.c1))) END DESC;
SELECT SUM(count) FROM (SELECT (((JULIANDAY(vt0.c1, vt0.c0, vt0.c2) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0))  WHEN (((vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c2))) THEN (((vt0.c1))>((vt0.c1))) END DESC);
SELECT ALL * FROM vt0 WHERE ((JULIANDAY(vt0.c1, vt0.c0, vt0.c2) IN ())) ORDER BY CASE ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0))  WHEN (((vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c2))) THEN (((vt0.c1))>((vt0.c1))) END DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0)))*(CASE WHEN vt0.c2 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))*(CASE WHEN vt0.c2 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0)))*(CASE WHEN vt0.c2 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))*(CASE WHEN vt0.c2 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0)))*(CASE WHEN vt0.c2 THEN vt0.c1 END)));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1))>=((vt0.c2))))AND(TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))>=((vt0.c2))))AND(TOTAL_CHANGES()))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1))>=((vt0.c2))))AND(TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))>=((vt0.c2))))AND(TOTAL_CHANGES()))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1))>=((vt0.c2))))AND(TOTAL_CHANGES())));
SELECT ALL * FROM vt0, rt0 WHERE ((+ (rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c3))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((+ (rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c3))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((+ (rt0.c3)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)/(rt0.c1)))*(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) ORDER BY ((((rt0.c0)OR(rt0.c2)))/((((rt0.c0, rt0.c1, rt0.c1))=((rt0.c1, rt0.c2, rt0.c4))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)/(rt0.c1)))*(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)OR(rt0.c2)))/((((rt0.c0, rt0.c1, rt0.c1))=((rt0.c1, rt0.c2, rt0.c4))))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)/(rt0.c1)))*(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) ORDER BY ((((rt0.c0)OR(rt0.c2)))/((((rt0.c0, rt0.c1, rt0.c1))=((rt0.c1, rt0.c2, rt0.c4))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)/(rt0.c1)))*(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)OR(rt0.c2)))/((((rt0.c0, rt0.c1, rt0.c1))=((rt0.c1, rt0.c2, rt0.c4))))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)/(rt0.c1)))*(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) ORDER BY ((((rt0.c0)OR(rt0.c2)))/((((rt0.c0, rt0.c1, rt0.c1))=((rt0.c1, rt0.c2, rt0.c4))))) DESC;
SELECT * FROM rt0, vt0 WHERE (LIKE(vt0.c2 COLLATE RTRIM, CAST(rt0.c4 AS BLOB), ''''));
SELECT SUM(count) FROM (SELECT ((LIKE(vt0.c2 COLLATE RTRIM, CAST(rt0.c4 AS BLOB), '''')) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (LIKE(vt0.c2 COLLATE RTRIM, CAST(rt0.c4 AS BLOB), ''''));
SELECT SUM(count) FROM (SELECT ((LIKE(vt0.c2 COLLATE RTRIM, CAST(rt0.c4 AS BLOB), '''')) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (LIKE(vt0.c2 COLLATE RTRIM, CAST(rt0.c4 AS BLOB), ''''));
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN (vt0.c2 IN ()) ELSE ('-2052025222' IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE NOCASE  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN (vt0.c2 IN ()) ELSE ('-2052025222' IN ()) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN (vt0.c2 IN ()) ELSE ('-2052025222' IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE NOCASE  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN (vt0.c2 IN ()) ELSE ('-2052025222' IN ()) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN (vt0.c2 IN ()) ELSE ('-2052025222' IN ()) END);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)==(rt0.c1))) NOT BETWEEN (((rt0.c1)>>(vt0.c2))) AND (((vt0.c0)/(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)==(rt0.c1))) NOT BETWEEN (((rt0.c1)>>(vt0.c2))) AND (((vt0.c0)/(NULL))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)==(rt0.c1))) NOT BETWEEN (((rt0.c1)>>(vt0.c2))) AND (((vt0.c0)/(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)==(rt0.c1))) NOT BETWEEN (((rt0.c1)>>(vt0.c2))) AND (((vt0.c0)/(NULL))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)==(rt0.c1))) NOT BETWEEN (((rt0.c1)>>(vt0.c2))) AND (((vt0.c0)/(NULL)))));
SELECT * FROM vt0 WHERE (((((vt0.c2))==((vt0.c0))) IN (((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2))==((vt0.c0))) IN (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c2))==((vt0.c0))) IN (((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2))==((vt0.c0))) IN (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c2))==((vt0.c0))) IN (((vt0.c1) IS TRUE))));
SELECT * FROM rt0 WHERE (CASE (((rt0.c0))<((rt0.c3)))  WHEN ((rt0.c1)<<(x'')) THEN 'i3*‚è±' ELSE '261020467' END) ORDER BY (NOT ((+ (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c0))<((rt0.c3)))  WHEN ((rt0.c1)<<(x'')) THEN 'i3*‚è±' ELSE '261020467' END) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((+ (rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE (((rt0.c0))<((rt0.c3)))  WHEN ((rt0.c1)<<(x'')) THEN 'i3*‚è±' ELSE '261020467' END) ORDER BY (NOT ((+ (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c0))<((rt0.c3)))  WHEN ((rt0.c1)<<(x'')) THEN 'i3*‚è±' ELSE '261020467' END) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((+ (rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE (((rt0.c0))<((rt0.c3)))  WHEN ((rt0.c1)<<(x'')) THEN 'i3*‚è±' ELSE '261020467' END) ORDER BY (NOT ((+ (rt0.c2)))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((((CASE vt0.c1  WHEN -1.399294261E9 THEN vt0.c2 WHEN vt0.c2 THEN 0x6171a28a WHEN vt0.c2 THEN vt0.c1 END)OR(((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)))))AND(vt0.c1)))OR(vt0.c1 COLLATE NOCASE)))AND((((vt0.c1, vt0.c0, vt0.c0))>((vt0.c2, vt0.c2, vt0.c1)))))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE vt0.c1  WHEN -1.399294261E9 THEN vt0.c2 WHEN vt0.c2 THEN 0x6171a28a WHEN vt0.c2 THEN vt0.c1 END)OR(((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)))))AND(vt0.c1)))OR(vt0.c1 COLLATE NOCASE)))AND((((vt0.c1, vt0.c0, vt0.c0))>((vt0.c2, vt0.c2, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((((CASE vt0.c1  WHEN -1.399294261E9 THEN vt0.c2 WHEN vt0.c2 THEN 0x6171a28a WHEN vt0.c2 THEN vt0.c1 END)OR(((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)))))AND(vt0.c1)))OR(vt0.c1 COLLATE NOCASE)))AND((((vt0.c1, vt0.c0, vt0.c0))>((vt0.c2, vt0.c2, vt0.c1)))))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE vt0.c1  WHEN -1.399294261E9 THEN vt0.c2 WHEN vt0.c2 THEN 0x6171a28a WHEN vt0.c2 THEN vt0.c1 END)OR(((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)))))AND(vt0.c1)))OR(vt0.c1 COLLATE NOCASE)))AND((((vt0.c1, vt0.c0, vt0.c0))>((vt0.c2, vt0.c2, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((((CASE vt0.c1  WHEN -1.399294261E9 THEN vt0.c2 WHEN vt0.c2 THEN 0x6171a28a WHEN vt0.c2 THEN vt0.c1 END)OR(((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)))))AND(vt0.c1)))OR(vt0.c1 COLLATE NOCASE)))AND((((vt0.c1, vt0.c0, vt0.c0))>((vt0.c2, vt0.c2, vt0.c1)))))) ORDER BY x''  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c3, rt0.c2)) BETWEEN ((((rt0.c1) ISNULL), ((rt0.c3) ISNULL), vt0.c0 COLLATE NOCASE)) AND (((+ (rt0.c1)), (- (rt0.c1)), (+ (rt0.c3)))))) ORDER BY ('1548923382' IN ());
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c3, rt0.c2)) BETWEEN ((((rt0.c1) ISNULL), ((rt0.c3) ISNULL), vt0.c0 COLLATE NOCASE)) AND (((+ (rt0.c1)), (- (rt0.c1)), (+ (rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ('1548923382' IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c3, rt0.c2)) BETWEEN ((((rt0.c1) ISNULL), ((rt0.c3) ISNULL), vt0.c0 COLLATE NOCASE)) AND (((+ (rt0.c1)), (- (rt0.c1)), (+ (rt0.c3)))))) ORDER BY ('1548923382' IN ());
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c3, rt0.c2)) BETWEEN ((((rt0.c1) ISNULL), ((rt0.c3) ISNULL), vt0.c0 COLLATE NOCASE)) AND (((+ (rt0.c1)), (- (rt0.c1)), (+ (rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ('1548923382' IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c3, rt0.c2)) BETWEEN ((((rt0.c1) ISNULL), ((rt0.c3) ISNULL), vt0.c0 COLLATE NOCASE)) AND (((+ (rt0.c1)), (- (rt0.c1)), (+ (rt0.c3)))))) ORDER BY ('1548923382' IN ());
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)) AS TEXT)) ORDER BY (((((rt0.c2)||(rt0.c0)), ((0.08378730190359296) NOT NULL), x'407b'))<=((((((((((NULL)OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c3)), ((rt0.c2)<(0.813153217619162)), ((0.5787948369978105)IS NOT(rt0.c3))))), (((((rt0.c0))==((rt0.c0)))) BETWEEN (((rt0.c0)%(rt0.c3))) AND (rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2)||(rt0.c0)), ((0.08378730190359296) NOT NULL), x'407b'))<=((((((((((NULL)OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c3)), ((rt0.c2)<(0.813153217619162)), ((0.5787948369978105)IS NOT(rt0.c3))))), (((((rt0.c0))=((rt0.c0)))) BETWEEN (((rt0.c0)%(rt0.c3))) AND (rt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)) AS TEXT)) ORDER BY (((((rt0.c2)||(rt0.c0)), ((0.08378730190359296) NOT NULL), x'407b'))<=((((((((((NULL)OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c3)), ((rt0.c2)<(0.813153217619162)), ((0.5787948369978105)IS NOT(rt0.c3))))), (((((rt0.c0))==((rt0.c0)))) BETWEEN (((rt0.c0)%(rt0.c3))) AND (rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2)||(rt0.c0)), ((0.08378730190359296) NOT NULL), x'407b'))<=((((((((((NULL)OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c3)), ((rt0.c2)<(0.813153217619162)), ((0.5787948369978105)IS NOT(rt0.c3))))), (((((rt0.c0))=((rt0.c0)))) BETWEEN (((rt0.c0)%(rt0.c3))) AND (rt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)) AS TEXT)) ORDER BY (((((rt0.c2)||(rt0.c0)), ((0.08378730190359296) NOT NULL), x'407b'))<=((((((((((NULL)OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c3)), ((rt0.c2)<(0.813153217619162)), ((0.5787948369978105)IS NOT(rt0.c3))))), (((((rt0.c0))==((rt0.c0)))) BETWEEN (((rt0.c0)%(rt0.c3))) AND (rt0.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (CAST(('372302148' IN (rt0.c0)) AS NUMERIC)) ORDER BY ((x'0487')OR(((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))) ASC  NULLS LAST, (((('-1692827311')GLOB(rt0.c4)))<<(((rt0.c1)=(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(('372302148' IN (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((x'0487')OR(((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))) ASC  NULLS LAST, (((('-1692827311')GLOB(rt0.c4)))<<(((rt0.c1)==(rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (CAST(('372302148' IN (rt0.c0)) AS NUMERIC)) ORDER BY ((x'0487')OR(((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))) ASC  NULLS LAST, (((('-1692827311')GLOB(rt0.c4)))<<(((rt0.c1)=(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(('372302148' IN (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((x'0487')OR(((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))) ASC  NULLS LAST, (((('-1692827311')GLOB(rt0.c4)))<<(((rt0.c1)==(rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (CAST(('372302148' IN (rt0.c0)) AS NUMERIC)) ORDER BY ((x'0487')OR(((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))) ASC  NULLS LAST, (((('-1692827311')GLOB(rt0.c4)))<<(((rt0.c1)=(rt0.c2)))) ASC;
SELECT ALL * FROM vt0, rt0 WHERE (IFNULL(vt0.c1, vt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((IFNULL(vt0.c1, vt0.c2 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (IFNULL(vt0.c1, vt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((IFNULL(vt0.c1, vt0.c2 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (IFNULL(vt0.c1, vt0.c2 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)GLOB(rt0.c4))) NOT BETWEEN (CAST(rt0.c4 AS TEXT)) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)GLOB(rt0.c4))) NOT BETWEEN (CAST(rt0.c4 AS TEXT)) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)GLOB(rt0.c4))) NOT BETWEEN (CAST(rt0.c4 AS TEXT)) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)GLOB(rt0.c4))) NOT BETWEEN (CAST(rt0.c4 AS TEXT)) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)GLOB(rt0.c4))) NOT BETWEEN (CAST(rt0.c4 AS TEXT)) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c2)=(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c2)=(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c2)=(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c2)=(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c2)=(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE ((rt0.c2)IS NOT('352910642'))  WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)) THEN (('[]') NOT BETWEEN (vt0.c2) AND (rt0.c1)) ELSE (((rt0.c1))<((rt0.c4))) END) ORDER BY (vt0.c1 COLLATE BINARY IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)IS NOT('352910642'))  WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)) THEN (('[]') NOT BETWEEN (vt0.c2) AND (rt0.c1)) ELSE (((rt0.c1))<((rt0.c4))) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (vt0.c1 COLLATE BINARY IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE ((rt0.c2)IS NOT('352910642'))  WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)) THEN (('[]') NOT BETWEEN (vt0.c2) AND (rt0.c1)) ELSE (((rt0.c1))<((rt0.c4))) END) ORDER BY (vt0.c1 COLLATE BINARY IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)IS NOT('352910642'))  WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)) THEN (('[]') NOT BETWEEN (vt0.c2) AND (rt0.c1)) ELSE (((rt0.c1))<((rt0.c4))) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (vt0.c1 COLLATE BINARY IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE ((rt0.c2)IS NOT('352910642'))  WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)) THEN (('[]') NOT BETWEEN (vt0.c2) AND (rt0.c1)) ELSE (((rt0.c1))<((rt0.c4))) END) ORDER BY (vt0.c1 COLLATE BINARY IN ())  NULLS FIRST;
SELECT * FROM vt0 WHERE (MAX(vt0.c0 COLLATE NOCASE, (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((MAX(vt0.c0 COLLATE NOCASE, (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (MAX(vt0.c0 COLLATE NOCASE, (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((MAX(vt0.c0 COLLATE NOCASE, (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (MAX(vt0.c0 COLLATE NOCASE, (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))));
SELECT * FROM vt0 WHERE (((((vt0.c2)*(vt0.c0))) ISNULL)) ORDER BY CASE 0.701345522501564  WHEN x'' THEN NULL END, (((vt0.c1)AND(0.10313806982112006)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)*(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE 0.701345522501564  WHEN x'' THEN NULL END, (((vt0.c1)AND(0.10313806982112006)) IN ()) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c2)*(vt0.c0))) ISNULL)) ORDER BY CASE 0.701345522501564  WHEN x'' THEN NULL END, (((vt0.c1)AND(0.10313806982112006)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)*(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE 0.701345522501564  WHEN x'' THEN NULL END, (((vt0.c1)AND(0.10313806982112006)) IN ()) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c2)*(vt0.c0))) ISNULL)) ORDER BY CASE 0.701345522501564  WHEN x'' THEN NULL END, (((vt0.c1)AND(0.10313806982112006)) IN ()) ASC;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN 0.6673813688567419 THEN rt0.c2 ELSE rt0.c4 END WHEN ((rt0.c3)AND(rt0.c3)) THEN CAST(rt0.c2 AS NUMERIC) WHEN '''' THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END ELSE ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)) END) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c2 END)>(((((rt0.c3)OR(rt0.c3)))OR('257556544')))) ASC, CASE WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)) THEN NULL WHEN 372302148 THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END WHEN NULLIF(DISTINCT rt0.c2, rt0.c1) THEN CAST(rt0.c0 AS NUMERIC) ELSE UNLIKELY(DISTINCT rt0.c2) END  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN 0.6673813688567419 THEN rt0.c2 ELSE rt0.c4 END WHEN ((rt0.c3)AND(rt0.c3)) THEN CAST(rt0.c2 AS NUMERIC) WHEN '''' THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END ELSE ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c2 END)>(((((rt0.c3)OR(rt0.c3)))OR('257556544')))) ASC, CASE WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)) THEN NULL WHEN 372302148 THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END WHEN NULLIF(DISTINCT rt0.c2, rt0.c1) THEN CAST(rt0.c0 AS NUMERIC) ELSE UNLIKELY(DISTINCT rt0.c2) END  NULLS FIRST, NULL ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN 0.6673813688567419 THEN rt0.c2 ELSE rt0.c4 END WHEN ((rt0.c3)AND(rt0.c3)) THEN CAST(rt0.c2 AS NUMERIC) WHEN '''' THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END ELSE ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)) END) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c2 END)>(((((rt0.c3)OR(rt0.c3)))OR('257556544')))) ASC, CASE WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)) THEN NULL WHEN 372302148 THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END WHEN NULLIF(DISTINCT rt0.c2, rt0.c1) THEN CAST(rt0.c0 AS NUMERIC) ELSE UNLIKELY(DISTINCT rt0.c2) END  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN 0.6673813688567419 THEN rt0.c2 ELSE rt0.c4 END WHEN ((rt0.c3)AND(rt0.c3)) THEN CAST(rt0.c2 AS NUMERIC) WHEN '''' THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END ELSE ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c2 END)>(((((rt0.c3)OR(rt0.c3)))OR('257556544')))) ASC, CASE WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)) THEN NULL WHEN 372302148 THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END WHEN NULLIF(DISTINCT rt0.c2, rt0.c1) THEN CAST(rt0.c0 AS NUMERIC) ELSE UNLIKELY(DISTINCT rt0.c2) END  NULLS FIRST, NULL ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN 0.6673813688567419 THEN rt0.c2 ELSE rt0.c4 END WHEN ((rt0.c3)AND(rt0.c3)) THEN CAST(rt0.c2 AS NUMERIC) WHEN '''' THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END ELSE ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)) END) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c2 END)>(((((rt0.c3)OR(rt0.c3)))OR('257556544')))) ASC, CASE WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)) THEN NULL WHEN 372302148 THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END WHEN NULLIF(DISTINCT rt0.c2, rt0.c1) THEN CAST(rt0.c0 AS NUMERIC) ELSE UNLIKELY(DISTINCT rt0.c2) END  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((x'd2c4') BETWEEN (vt0.c0) AND (vt0.c2)))LIKE((((vt0.c0, vt0.c1, vt0.c2))<=(('0.1556683035182349', vt0.c1, vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'd2c4') BETWEEN (vt0.c0) AND (vt0.c2)))LIKE((((vt0.c0, vt0.c1, vt0.c2))<=(('0.1556683035182349', vt0.c1, vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((x'd2c4') BETWEEN (vt0.c0) AND (vt0.c2)))LIKE((((vt0.c0, vt0.c1, vt0.c2))<=(('0.1556683035182349', vt0.c1, vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'd2c4') BETWEEN (vt0.c0) AND (vt0.c2)))LIKE((((vt0.c0, vt0.c1, vt0.c2))<=(('0.1556683035182349', vt0.c1, vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((x'd2c4') BETWEEN (vt0.c0) AND (vt0.c2)))LIKE((((vt0.c0, vt0.c1, vt0.c2))<=(('0.1556683035182349', vt0.c1, vt0.c2))))));
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c2)>>(rt0.c0)))AND(CASE WHEN vt0.c1 THEN rt0.c4 END)))OR(((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)>>(rt0.c0)))AND(CASE WHEN vt0.c1 THEN rt0.c4 END)))OR(((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c2)>>(rt0.c0)))AND(CASE WHEN vt0.c1 THEN rt0.c4 END)))OR(((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)>>(rt0.c0)))AND(CASE WHEN vt0.c1 THEN rt0.c4 END)))OR(((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c2)>>(rt0.c0)))AND(CASE WHEN vt0.c1 THEN rt0.c4 END)))OR(((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c2)))));
SELECT ALL * FROM vt0 WHERE ((- ((~ (vt0.c0))))) ORDER BY (+ (((((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c2)))OR('244791520')))AND(vt0.c1)))OR(vt0.c1)))AND(-3.77270235E8)))) DESC;
SELECT SUM(count) FROM (SELECT (((- ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c2)))OR('244791520')))AND(vt0.c1)))OR(vt0.c1)))AND(-3.77270235E8)))) DESC);
SELECT ALL * FROM vt0 WHERE ((- ((~ (vt0.c0))))) ORDER BY (+ (((((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c2)))OR('244791520')))AND(vt0.c1)))OR(vt0.c1)))AND(-3.77270235E8)))) DESC;
SELECT SUM(count) FROM (SELECT (((- ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c2)))OR('244791520')))AND(vt0.c1)))OR(vt0.c1)))AND(-3.77270235E8)))) DESC);
SELECT ALL * FROM vt0 WHERE ((- ((~ (vt0.c0))))) ORDER BY (+ (((((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c2)))OR('244791520')))AND(vt0.c1)))OR(vt0.c1)))AND(-3.77270235E8)))) DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (UNLIKELY(((vt0.c0)>=(rt0.c0)))) ORDER BY ((~ (rt0.c3)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt0.c0)>=(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((~ (rt0.c3)) IN ()));
SELECT COUNT(*) FROM vt0, rt0 WHERE (UNLIKELY(((vt0.c0)>=(rt0.c0)))) ORDER BY ((~ (rt0.c3)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt0.c0)>=(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((~ (rt0.c3)) IN ()));
SELECT COUNT(*) FROM vt0, rt0 WHERE (UNLIKELY(((vt0.c0)>=(rt0.c0)))) ORDER BY ((~ (rt0.c3)) IN ());
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c1)*(rt0.c0)))) AND (((~ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN ((((rt0.c1)*(rt0.c0)))) AND (((~ (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c1)*(rt0.c0)))) AND (((~ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN ((((rt0.c1)*(rt0.c0)))) AND (((~ (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c1)*(rt0.c0)))) AND (((~ (rt0.c0))))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE 1e500  WHEN NULL THEN vt0.c2 END THEN CAST(0.5203944516913859 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE 1e500  WHEN NULL THEN vt0.c2 END THEN CAST(0.5203944516913859 AS NUMERIC) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE 1e500  WHEN NULL THEN vt0.c2 END THEN CAST(0.5203944516913859 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE 1e500  WHEN NULL THEN vt0.c2 END THEN CAST(0.5203944516913859 AS NUMERIC) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE 1e500  WHEN NULL THEN vt0.c2 END THEN CAST(0.5203944516913859 AS NUMERIC) END);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) IS TRUE));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1)|(rt0.c2)))>=(((x'')|(rt0.c3))))) ORDER BY vt0.c0 DESC  NULLS FIRST, ((rt0.c0)AND(rt0.c4)) COLLATE BINARY, CAST(((rt0.c2) NOTNULL) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)|(rt0.c2)))>=(((x'')|(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0 DESC  NULLS FIRST, ((rt0.c0)AND(rt0.c4)) COLLATE BINARY, CAST(((rt0.c2) NOTNULL) AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1)|(rt0.c2)))>=(((x'')|(rt0.c3))))) ORDER BY vt0.c0 DESC  NULLS FIRST, ((rt0.c0)AND(rt0.c4)) COLLATE BINARY, CAST(((rt0.c2) NOTNULL) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)|(rt0.c2)))>=(((x'')|(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0 DESC  NULLS FIRST, ((rt0.c0)AND(rt0.c4)) COLLATE BINARY, CAST(((rt0.c2) NOTNULL) AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1)|(rt0.c2)))>=(((x'')|(rt0.c3))))) ORDER BY vt0.c0 DESC  NULLS FIRST, ((rt0.c0)AND(rt0.c4)) COLLATE BINARY, CAST(((rt0.c2) NOTNULL) AS INTEGER) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((- (rt0.c4)) COLLATE RTRIM) ORDER BY ((((rt0.c3 COLLATE RTRIM)OR(rt0.c1 COLLATE NOCASE)))AND(rt0.c2 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3 COLLATE RTRIM)OR(rt0.c1 COLLATE NOCASE)))AND(rt0.c2 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((- (rt0.c4)) COLLATE RTRIM) ORDER BY ((((rt0.c3 COLLATE RTRIM)OR(rt0.c1 COLLATE NOCASE)))AND(rt0.c2 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3 COLLATE RTRIM)OR(rt0.c1 COLLATE NOCASE)))AND(rt0.c2 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((- (rt0.c4)) COLLATE RTRIM) ORDER BY ((((rt0.c3 COLLATE RTRIM)OR(rt0.c1 COLLATE NOCASE)))AND(rt0.c2 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c2) NOTNULL))OR(((rt0.c0)LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) NOTNULL))OR(((rt0.c0)LIKE(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c2) NOTNULL))OR(((rt0.c0)LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) NOTNULL))OR(((rt0.c0)LIKE(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c2) NOTNULL))OR(((rt0.c0)LIKE(rt0.c0)))));
SELECT * FROM vt0, rt0 WHERE (CAST(((vt0.c2) NOT NULL) AS BLOB)) ORDER BY ((((NULL) ISNULL))LIKE(((vt0.c0) BETWEEN (vt0.c2) AND (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2) NOT NULL) AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((NULL) ISNULL))LIKE(((vt0.c0) BETWEEN (vt0.c2) AND (rt0.c2)))) ASC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (CAST(((vt0.c2) NOT NULL) AS BLOB)) ORDER BY ((((NULL) ISNULL))LIKE(((vt0.c0) BETWEEN (vt0.c2) AND (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2) NOT NULL) AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((NULL) ISNULL))LIKE(((vt0.c0) BETWEEN (vt0.c2) AND (rt0.c2)))) ASC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (CAST(((vt0.c2) NOT NULL) AS BLOB)) ORDER BY ((((NULL) ISNULL))LIKE(((vt0.c0) BETWEEN (vt0.c2) AND (rt0.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c1 THEN vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c1 THEN vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c0 END AS NUMERIC));
SELECT * FROM rt0 WHERE (((((rt0.c4) IS FALSE))>=(rt0.c3))) ORDER BY LIKELIHOOD(rt0.c2, 0.4225041013291283)  NULLS FIRST, (((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c0))))>((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c1 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) IS FALSE))>=(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(rt0.c2, 0.4225041013291283)  NULLS FIRST, (((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c0))))>((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c1 END))) DESC);
SELECT * FROM rt0 WHERE (((((rt0.c4) IS FALSE))>=(rt0.c3))) ORDER BY LIKELIHOOD(rt0.c2, 0.4225041013291283)  NULLS FIRST, (((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c0))))>((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c1 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) IS FALSE))>=(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(rt0.c2, 0.4225041013291283)  NULLS FIRST, (((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c0))))>((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c1 END))) DESC);
SELECT * FROM rt0 WHERE (((((rt0.c4) IS FALSE))>=(rt0.c3))) ORDER BY LIKELIHOOD(rt0.c2, 0.4225041013291283)  NULLS FIRST, (((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c0))))>((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c1 END))) DESC;
SELECT * FROM vt0 WHERE ((vt0.c0 IN (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 IN (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 IN (((vt0.c0) IS FALSE))));
SELECT * FROM rt0, vt0 WHERE ((vt0.c1 IN ())) ORDER BY ((((((rt0.c1)AND(vt0.c1)))OR(93349058)))*(((((rt0.c3)OR(vt0.c0)))OR(x''))));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c1)AND(vt0.c1)))OR(93349058)))*(((((rt0.c3)OR(vt0.c0)))OR(x'')))));
SELECT * FROM rt0, vt0 WHERE ((vt0.c1 IN ())) ORDER BY ((((((rt0.c1)AND(vt0.c1)))OR(93349058)))*(((((rt0.c3)OR(vt0.c0)))OR(x''))));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c1)AND(vt0.c1)))OR(93349058)))*(((((rt0.c3)OR(vt0.c0)))OR(x'')))));
SELECT * FROM rt0, vt0 WHERE ((vt0.c1 IN ())) ORDER BY ((((((rt0.c1)AND(vt0.c1)))OR(93349058)))*(((((rt0.c3)OR(vt0.c0)))OR(x''))));
SELECT * FROM vt0 WHERE (((((vt0.c2)*(vt0.c0)))==(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)*(vt0.c0)))=(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c2)*(vt0.c0)))==(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)*(vt0.c0)))=(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c2)*(vt0.c0)))==(vt0.c1)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((CAST(vt0.c0 AS TEXT))AND(vt0.c2 COLLATE NOCASE)))OR(7.42504192E8));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS TEXT))AND(vt0.c2 COLLATE NOCASE)))OR(7.42504192E8)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((CAST(vt0.c0 AS TEXT))AND(vt0.c2 COLLATE NOCASE)))OR(7.42504192E8));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS TEXT))AND(vt0.c2 COLLATE NOCASE)))OR(7.42504192E8)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((CAST(vt0.c0 AS TEXT))AND(vt0.c2 COLLATE NOCASE)))OR(7.42504192E8));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0)>=(rt0.c3))) NOT BETWEEN (vt0.c2) AND (((vt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>=(rt0.c3))) NOT BETWEEN (vt0.c2) AND (((vt0.c1) BETWEEN (rt0.c4) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0)>=(rt0.c3))) NOT BETWEEN (vt0.c2) AND (((vt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>=(rt0.c3))) NOT BETWEEN (vt0.c2) AND (((vt0.c1) BETWEEN (rt0.c4) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0)>=(rt0.c3))) NOT BETWEEN (vt0.c2) AND (((vt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)))));
SELECT COUNT(*) FROM rt0 NOT INDEXED CROSS JOIN vt0 ON (((- (vt0.c2)))<(CAST(rt0.c3 AS INTEGER))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((- (vt0.c2)))<(CAST(rt0.c3 AS INTEGER))));
SELECT COUNT(*) FROM rt0 NOT INDEXED CROSS JOIN vt0 ON (((- (vt0.c2)))<(CAST(rt0.c3 AS INTEGER))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((- (vt0.c2)))<(CAST(rt0.c3 AS INTEGER))));
SELECT COUNT(*) FROM rt0 NOT INDEXED CROSS JOIN vt0 ON (((- (vt0.c2)))<(CAST(rt0.c3 AS INTEGER))) WHERE (NULL);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END THEN SQLITE_SOURCE_ID() WHEN NULL THEN (('J„∫õ') NOT NULL) WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)) THEN -2095827700 ELSE x'' END) ORDER BY (((vt0.c1)) BETWEEN ((410145251)) AND ((vt0.c1))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END THEN SQLITE_SOURCE_ID() WHEN NULL THEN (('J„∫õ') NOT NULL) WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)) THEN -2095827700 ELSE x'' END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN ((410145251)) AND ((vt0.c1))) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END THEN SQLITE_SOURCE_ID() WHEN NULL THEN (('J„∫õ') NOT NULL) WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)) THEN -2095827700 ELSE x'' END) ORDER BY (((vt0.c1)) BETWEEN ((410145251)) AND ((vt0.c1))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END THEN SQLITE_SOURCE_ID() WHEN NULL THEN (('J„∫õ') NOT NULL) WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)) THEN -2095827700 ELSE x'' END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN ((410145251)) AND ((vt0.c1))) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END THEN SQLITE_SOURCE_ID() WHEN NULL THEN (('J„∫õ') NOT NULL) WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)) THEN -2095827700 ELSE x'' END) ORDER BY (((vt0.c1)) BETWEEN ((410145251)) AND ((vt0.c1))) COLLATE NOCASE;
SELECT * FROM rt0 WHERE ((NOT ((rt0.c3 IN ())))) ORDER BY ((((((rt0.c4)OR(rt0.c2)))AND(rt0.c2)))IS NOT((rt0.c1 IN ()))) ASC  NULLS FIRST, ((CAST(0X6b7209a3 AS INTEGER))LIKE((((rt0.c0))>=((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c4)OR(rt0.c2)))AND(rt0.c2)))IS NOT((rt0.c1 IN ()))) ASC  NULLS FIRST, ((CAST(0x6b7209a3 AS INTEGER))LIKE((((rt0.c0))>=((rt0.c1))))));
SELECT * FROM rt0 WHERE ((NOT ((rt0.c3 IN ())))) ORDER BY ((((((rt0.c4)OR(rt0.c2)))AND(rt0.c2)))IS NOT((rt0.c1 IN ()))) ASC  NULLS FIRST, ((CAST(0X6b7209a3 AS INTEGER))LIKE((((rt0.c0))>=((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c4)OR(rt0.c2)))AND(rt0.c2)))IS NOT((rt0.c1 IN ()))) ASC  NULLS FIRST, ((CAST(0x6b7209a3 AS INTEGER))LIKE((((rt0.c0))>=((rt0.c1))))));
SELECT * FROM rt0 WHERE ((NOT ((rt0.c3 IN ())))) ORDER BY ((((((rt0.c4)OR(rt0.c2)))AND(rt0.c2)))IS NOT((rt0.c1 IN ()))) ASC  NULLS FIRST, ((CAST(0X6b7209a3 AS INTEGER))LIKE((((rt0.c0))>=((rt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END COLLATE RTRIM);
SELECT * FROM vt0 WHERE ((((x'' IN (vt0.c1, vt0.c0)))==(vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((x'' IN (vt0.c1, vt0.c0)))=(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((x'' IN (vt0.c1, vt0.c0)))==(vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((x'' IN (vt0.c1, vt0.c0)))=(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((x'' IN (vt0.c1, vt0.c0)))==(vt0.c1 COLLATE BINARY)));
SELECT * FROM rt0 WHERE ((((((((((((rt0.c0, rt0.c4, rt0.c4))!=(('tV|7W', rt0.c1, rt0.c0))))OR(((((NULL)AND(rt0.c0)))OR(rt0.c4)))))OR(((NULL)=(rt0.c2)))))AND(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c0, rt0.c4, rt0.c4))<>(('tV|7W', rt0.c1, rt0.c0))))OR(((((NULL)AND(rt0.c0)))OR(rt0.c4)))))OR(((NULL)=(rt0.c2)))))AND(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((((((((rt0.c0, rt0.c4, rt0.c4))!=(('tV|7W', rt0.c1, rt0.c0))))OR(((((NULL)AND(rt0.c0)))OR(rt0.c4)))))OR(((NULL)=(rt0.c2)))))AND(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c0, rt0.c4, rt0.c4))<>(('tV|7W', rt0.c1, rt0.c0))))OR(((((NULL)AND(rt0.c0)))OR(rt0.c4)))))OR(((NULL)=(rt0.c2)))))AND(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((((((((rt0.c0, rt0.c4, rt0.c4))!=(('tV|7W', rt0.c1, rt0.c0))))OR(((((NULL)AND(rt0.c0)))OR(rt0.c4)))))OR(((NULL)=(rt0.c2)))))AND(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT ALL * FROM vt0, rt0 WHERE (CAST(vt0.c1 AS INTEGER)) ORDER BY (((((vt0.c2, 0.6112578399792108, vt0.c2))<=((vt0.c2, vt0.c2, 0.9761183835269368))))<<(-1.632882054E9)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((vt0.c2, 0.6112578399792108, vt0.c2))<=((vt0.c2, vt0.c2, 0.9761183835269368))))<<(-1.632882054E9)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(vt0.c1 AS INTEGER)) ORDER BY (((((vt0.c2, 0.6112578399792108, vt0.c2))<=((vt0.c2, vt0.c2, 0.9761183835269368))))<<(-1.632882054E9)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((vt0.c2, 0.6112578399792108, vt0.c2))<=((vt0.c2, vt0.c2, 0.9761183835269368))))<<(-1.632882054E9)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(vt0.c1 AS INTEGER)) ORDER BY (((((vt0.c2, 0.6112578399792108, vt0.c2))<=((vt0.c2, vt0.c2, 0.9761183835269368))))<<(-1.632882054E9)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((IFNULL(rt0.c0, vt0.c1))!=(((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c4))))) ORDER BY COALESCE(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)), json_extract(rt0.c1, vt0.c2, rt0.c3, rt0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt0.c0, vt0.c1))!=(((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c4))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY COALESCE(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)), json_extract(rt0.c1, vt0.c2, rt0.c3, rt0.c1)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((IFNULL(rt0.c0, vt0.c1))!=(((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c4))))) ORDER BY COALESCE(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)), json_extract(rt0.c1, vt0.c2, rt0.c3, rt0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt0.c0, vt0.c1))!=(((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c4))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY COALESCE(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)), json_extract(rt0.c1, vt0.c2, rt0.c3, rt0.c1)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((IFNULL(rt0.c0, vt0.c1))!=(((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c4))))) ORDER BY COALESCE(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)), json_extract(rt0.c1, vt0.c2, rt0.c3, rt0.c1)) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c0)|(rt0.c2)) AS INTEGER) WHERE (((((rt0.c4)>(vt0.c0)))!=((((rt0.c3)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1)))))) ORDER BY (((rt0.c2 IN (vt0.c1)))>=((((vt0.c1))<=((rt0.c3)))))  NULLS FIRST, LIKELY(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN x'' WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)>(vt0.c0)))<>((((rt0.c3)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c0)|(rt0.c2)) AS INTEGER) ORDER BY (((rt0.c2 IN (vt0.c1)))>=((((vt0.c1))<=((rt0.c3)))))  NULLS FIRST, LIKELY(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN x'' WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END) ASC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c0)|(rt0.c2)) AS INTEGER) WHERE (((((rt0.c4)>(vt0.c0)))!=((((rt0.c3)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1)))))) ORDER BY (((rt0.c2 IN (vt0.c1)))>=((((vt0.c1))<=((rt0.c3)))))  NULLS FIRST, LIKELY(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN x'' WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)>(vt0.c0)))<>((((rt0.c3)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c0)|(rt0.c2)) AS INTEGER) ORDER BY (((rt0.c2 IN (vt0.c1)))>=((((vt0.c1))<=((rt0.c3)))))  NULLS FIRST, LIKELY(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN x'' WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END) ASC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c0)|(rt0.c2)) AS INTEGER) WHERE (((((rt0.c4)>(vt0.c0)))!=((((rt0.c3)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1)))))) ORDER BY (((rt0.c2 IN (vt0.c1)))>=((((vt0.c1))<=((rt0.c3)))))  NULLS FIRST, LIKELY(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN x'' WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END) ASC;
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((NOT (rt0.c3)) IN ()) WHERE (CASE WHEN ((rt0.c4) IS TRUE) THEN ((rt0.c1)<=(x'')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c4) IS TRUE) THEN ((rt0.c1)<=(x'')) END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((NOT (rt0.c3)) IN ()));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((NOT (rt0.c3)) IN ()) WHERE (CASE WHEN ((rt0.c4) IS TRUE) THEN ((rt0.c1)<=(x'')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c4) IS TRUE) THEN ((rt0.c1)<=(x'')) END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((NOT (rt0.c3)) IN ()));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((NOT (rt0.c3)) IN ()) WHERE (CASE WHEN ((rt0.c4) IS TRUE) THEN ((rt0.c1)<=(x'')) END);
SELECT ALL * FROM rt0, vt0 WHERE (((x'') NOT BETWEEN (rt0.c2) AND (0.8219671153839849)) COLLATE NOCASE) ORDER BY ((vt0.c0 IN ()) IN (rt0.c2));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (rt0.c2) AND (0.8219671153839849)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0 IN ()) IN (rt0.c2)));
SELECT ALL * FROM rt0, vt0 WHERE (((x'') NOT BETWEEN (rt0.c2) AND (0.8219671153839849)) COLLATE NOCASE) ORDER BY ((vt0.c0 IN ()) IN (rt0.c2));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (rt0.c2) AND (0.8219671153839849)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0 IN ()) IN (rt0.c2)));
SELECT ALL * FROM rt0, vt0 WHERE (((x'') NOT BETWEEN (rt0.c2) AND (0.8219671153839849)) COLLATE NOCASE) ORDER BY ((vt0.c0 IN ()) IN (rt0.c2));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((x'')<<(rt0.c1)) AS TEXT) WHERE ((((rt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((x'')<<(rt0.c1)) AS TEXT));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((x'')<<(rt0.c1)) AS TEXT) WHERE ((((rt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((x'')<<(rt0.c1)) AS TEXT));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((x'')<<(rt0.c1)) AS TEXT) WHERE ((((rt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c1);
SELECT * FROM vt0, rt0 WHERE (rt0.c0) ORDER BY (((rt0.c2) IS FALSE) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2) IS FALSE) IN ()) ASC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (rt0.c0) ORDER BY (((rt0.c2) IS FALSE) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2) IS FALSE) IN ()) ASC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (rt0.c0) ORDER BY (((rt0.c2) IS FALSE) IN ()) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c2) ISNULL)) AND (0Xfffffffff07998ce))) ORDER BY (~ (x'')), COALESCE(DISTINCT ((vt0.c0)GLOB(0X48e91559)), ((vt0.c0)>=(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END, ((vt0.c2) NOT NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c2) ISNULL)) AND (0Xfffffffff07998ce))) IS TRUE)  as count FROM vt0 ORDER BY (~ (x'')), COALESCE(DISTINCT ((vt0.c0)GLOB(0x48e91559)), ((vt0.c0)>=(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END, ((vt0.c2) NOT NULL)) DESC);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c2) ISNULL)) AND (0Xfffffffff07998ce))) ORDER BY (~ (x'')), COALESCE(DISTINCT ((vt0.c0)GLOB(0X48e91559)), ((vt0.c0)>=(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END, ((vt0.c2) NOT NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c2) ISNULL)) AND (0Xfffffffff07998ce))) IS TRUE)  as count FROM vt0 ORDER BY (~ (x'')), COALESCE(DISTINCT ((vt0.c0)GLOB(0x48e91559)), ((vt0.c0)>=(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END, ((vt0.c2) NOT NULL)) DESC);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c2) ISNULL)) AND (0Xfffffffff07998ce))) ORDER BY (~ (x'')), COALESCE(DISTINCT ((vt0.c0)GLOB(0X48e91559)), ((vt0.c0)>=(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END, ((vt0.c2) NOT NULL)) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c3) ORDER BY json_insert(json_array(rt0.c0, rt0.c0), rt0.c0, NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt0 ORDER BY json_insert(json_array(rt0.c0, rt0.c0), rt0.c0, NULL) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c3) ORDER BY json_insert(json_array(rt0.c0, rt0.c0), rt0.c0, NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt0 ORDER BY json_insert(json_array(rt0.c0, rt0.c0), rt0.c0, NULL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((DATETIME(vt0.c2, 0.2773893351855543, vt0.c1))!=(DATE(vt0.c0, x'', vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((DATETIME(vt0.c2, 0.2773893351855543, vt0.c1))<>(DATE(vt0.c0, x'', vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((DATETIME(vt0.c2, 0.2773893351855543, vt0.c1))!=(DATE(vt0.c0, x'', vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((DATETIME(vt0.c2, 0.2773893351855543, vt0.c1))<>(DATE(vt0.c0, x'', vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((DATETIME(vt0.c2, 0.2773893351855543, vt0.c1))!=(DATE(vt0.c0, x'', vt0.c1))));
SELECT * FROM rt0, vt0 WHERE (rt0.c3) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (rt0.c3) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (rt0.c3) ORDER BY NULL  NULLS FIRST;
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((((NULL)OR(vt0.c1 COLLATE NOCASE)))OR(((rt0.c4) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(vt0.c1 COLLATE NOCASE)))OR(((rt0.c4) NOT NULL)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((((NULL)OR(vt0.c1 COLLATE NOCASE)))OR(((rt0.c4) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(vt0.c1 COLLATE NOCASE)))OR(((rt0.c4) NOT NULL)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((((NULL)OR(vt0.c1 COLLATE NOCASE)))OR(((rt0.c4) NOT NULL))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c2) BETWEEN (vt0.c1) AND (0.20463107243144307))) NOT NULL) WHERE ((((vt0.c0, x'', vt0.c1)) NOT BETWEEN ((((vt0.c2)IS(vt0.c2)), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)), (rt0.c4 IN ()))) AND ((COALESCE(rt0.c1, vt0.c2), ((rt0.c0) IS TRUE), (~ ('1479797188'))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, x'', vt0.c1)) NOT BETWEEN ((((vt0.c2)IS(vt0.c2)), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)), (rt0.c4 IN ()))) AND ((COALESCE(rt0.c1, vt0.c2), ((rt0.c0) IS TRUE), (~ ('1479797188')))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c2) BETWEEN (vt0.c1) AND (0.20463107243144307))) NOT NULL));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c2) BETWEEN (vt0.c1) AND (0.20463107243144307))) NOT NULL) WHERE ((((vt0.c0, x'', vt0.c1)) NOT BETWEEN ((((vt0.c2)IS(vt0.c2)), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)), (rt0.c4 IN ()))) AND ((COALESCE(rt0.c1, vt0.c2), ((rt0.c0) IS TRUE), (~ ('1479797188'))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, x'', vt0.c1)) NOT BETWEEN ((((vt0.c2)IS(vt0.c2)), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)), (rt0.c4 IN ()))) AND ((COALESCE(rt0.c1, vt0.c2), ((rt0.c0) IS TRUE), (~ ('1479797188')))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c2) BETWEEN (vt0.c1) AND (0.20463107243144307))) NOT NULL));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c2) BETWEEN (vt0.c1) AND (0.20463107243144307))) NOT NULL) WHERE ((((vt0.c0, x'', vt0.c1)) NOT BETWEEN ((((vt0.c2)IS(vt0.c2)), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)), (rt0.c4 IN ()))) AND ((COALESCE(rt0.c1, vt0.c2), ((rt0.c0) IS TRUE), (~ ('1479797188'))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE ('934276813') ORDER BY ((((vt0.c2)+(vt0.c1)))>((~ (0X48f1c47d)))) DESC, (((((vt0.c0 IN (vt0.c2)))AND(((vt0.c1) NOTNULL))))AND(vt0.c2 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('934276813') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)+(vt0.c1)))>((~ (0X48f1c47d)))) DESC, (((((vt0.c0 IN (vt0.c2)))AND(((vt0.c1) NOTNULL))))AND(vt0.c2 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('934276813') ORDER BY ((((vt0.c2)+(vt0.c1)))>((~ (0X48f1c47d)))) DESC, (((((vt0.c0 IN (vt0.c2)))AND(((vt0.c1) NOTNULL))))AND(vt0.c2 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('934276813') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)+(vt0.c1)))>((~ (0X48f1c47d)))) DESC, (((((vt0.c0 IN (vt0.c2)))AND(((vt0.c1) NOTNULL))))AND(vt0.c2 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('934276813') ORDER BY ((((vt0.c2)+(vt0.c1)))>((~ (0X48f1c47d)))) DESC, (((((vt0.c0 IN (vt0.c2)))AND(((vt0.c1) NOTNULL))))AND(vt0.c2 COLLATE BINARY))  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2) ORDER BY (+ (rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (rt0.c0))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2) ORDER BY (+ (rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (rt0.c0))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2) ORDER BY (+ (rt0.c0))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (x'') ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN ((~ (rt0.c1))) AND ((((rt0.c4)) NOT BETWEEN ((vt0.c1)) AND ((NULL))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN ((~ (rt0.c1))) AND ((((rt0.c4)) NOT BETWEEN ((vt0.c1)) AND ((NULL))))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (x'') ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN ((~ (rt0.c1))) AND ((((rt0.c4)) NOT BETWEEN ((vt0.c1)) AND ((NULL))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN ((~ (rt0.c1))) AND ((((rt0.c4)) NOT BETWEEN ((vt0.c1)) AND ((NULL))))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (x'') ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN ((~ (rt0.c1))) AND ((((rt0.c4)) NOT BETWEEN ((vt0.c1)) AND ((NULL))))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (COALESCE(DISTINCT LOWER(rt0.c0), x''));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT LOWER(rt0.c0), x'')) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (COALESCE(DISTINCT LOWER(rt0.c0), x''));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT LOWER(rt0.c0), x'')) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (COALESCE(DISTINCT LOWER(rt0.c0), x''));
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(x'' AS NUMERIC)) BETWEEN (((((rt0.c0)OR(vt0.c2)))AND(rt0.c1))) AND (vt0.c0))) ORDER BY ((NULL)|((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS NUMERIC)) BETWEEN (((((rt0.c0)OR(vt0.c2)))AND(rt0.c1))) AND (vt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((NULL)|((rt0.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(x'' AS NUMERIC)) BETWEEN (((((rt0.c0)OR(vt0.c2)))AND(rt0.c1))) AND (vt0.c0))) ORDER BY ((NULL)|((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS NUMERIC)) BETWEEN (((((rt0.c0)OR(vt0.c2)))AND(rt0.c1))) AND (vt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((NULL)|((rt0.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(x'' AS NUMERIC)) BETWEEN (((((rt0.c0)OR(vt0.c2)))AND(rt0.c1))) AND (vt0.c0))) ORDER BY ((NULL)|((rt0.c0 IN ())))  NULLS LAST;
