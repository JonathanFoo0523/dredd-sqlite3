-- Time: 2024/06/09 14:43:26
-- Database: database14
-- Database version: 3.40.0
-- seed value: 869354414
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1); -- 0ms;
ANALYZE; -- 1ms;
ANALYZE; -- 0ms;
UPDATE rt0 SET c0='' WHERE 686251374; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(0X28e75d6e) WHERE 0.7900549934029535; -- 0ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
INSERT OR ABORT INTO vt0(c0, c1) VALUES (716585589, 0.7900549934029535); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
COMMIT; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES ('716585589'); -- 0ms;
PRAGMA main.optimize; -- 0ms;
PRAGMA wal_autocheckpoint = 6190489721071322466; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 14); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0X2fc3f4d9); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (0.7900549934029535, NULL); -- 1ms;
UPDATE OR REPLACE rt0 SET (c2)=(NULL) WHERE (((((rt0.c0))>((rt0.c0)))) NOTNULL); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0x572e4908; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE ((vt0.c0 COLLATE BINARY) ISNULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c0) VALUES (NULL, -1132070093), (0.30673873122564577, 7.16585589E8), (NULL, x''); -- 1ms;
UPDATE OR IGNORE rt0 SET c1=0Xffffffffd5115c87, c1=233216545 WHERE CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c0)=(x'', 0.3446942635445772); -- 0ms;
UPDATE OR ABORT vt0 SET (c1, c1)=('0.3446942635445772', x'3a19') WHERE LOWER(DISTINCT vt0.c1) COLLATE RTRIM; -- 0ms;
ANALYZE; -- 1ms;
PRAGMA main.cell_size_check; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (0.11541099568406998, ''); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA temp.secure_delete; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c2, c1)=(x'', '', NULL) WHERE json_array_length(rt0.c0, ((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))); -- 0ms;
UPDATE rt0 SET (c0)=(NULL) WHERE (('') NOT NULL); -- 0ms;
UPDATE vt0 SET (c1, c0)=(x'61da', 0.202513910981862); -- 1ms;
UPDATE OR ROLLBACK rt0 SET c0=''; -- 0ms;
UPDATE OR REPLACE rt0 SET c1=NULL, c0=x'3373'; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE vt0 SET c1='1460419796', c0=x'f6c6'; -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0, c1) VALUES ('0q', '-720282489'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET (c0, c1, c0)=('716585589', '-720282489', '-966665652'); -- 1ms;
UPDATE OR IGNORE rt0 SET (c0, c1)=(x'', -1132070093); -- 0ms;
UPDATE rt0 SET c0=NULL, c1='' WHERE (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))>(((rt0.c1)IS(rt0.c0)))); -- 1ms;
UPDATE OR ABORT rt0 SET (c1)=(x'1a2ca3ed') WHERE rt0.c0; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
UPDATE OR FAIL vt0 SET c1=1.462651144E9 WHERE vt0.c0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 801371353);\n; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.3446942635445772, '3W4J'), (x'', 0.24859557644749708), ('1220863988', x''); -- 0ms;
UPDATE OR ABORT vt0 SET (c1)=(0.14018444220644677) WHERE ((((vt0.c1)=(vt0.c1)))IS(((vt0.c0) ISNULL))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '62359'); -- 0ms;
COMMIT; -- 0ms;
DELETE FROM vt0; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA optimize; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
REINDEX RTRIM; -- 1ms;
REINDEX  rt0; -- 0ms;
PRAGMA temp.defer_foreign_keys; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
PRAGMA incremental_vacuum(-720282489); -- 0ms;
VACUUM; -- 1ms;
UPDATE OR ABORT vt0 SET (c0, c0, c1)=(NULL, NULL, x''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-541231601 unordered'); -- 0ms;
UPDATE vt0 SET (c1)=(NULL); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA secure_delete = false; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR ABORT rt0 SET (c1, c2)=(0.18373166760172788, '(U') WHERE (+ (load_extension(rt0.c2))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(NULL) WHERE ((((rt0.c0) IS TRUE)) NOT BETWEEN (0.9248708921535562) AND ((~ (rt0.c0)))); -- 0ms;
PRAGMA main.reverse_unordered_selects = false; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (x'ec8f', NULL); -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))IS(rt0.c1)) FROM rt0; -- 0ms;
UPDATE vt0 SET (c1, c1, c1)=('-1534039024', NULL, '233216545') WHERE json_object(vt0.c1, vt0.c0, vt0.c1, vt0.c0) COLLATE RTRIM; -- 0ms;
UPDATE OR REPLACE rt0 SET (c0, c0, c0)=('0.24859557644749708', 0Xde69a21, 0.8030702181762005) WHERE ((((rt0.c2) ISNULL))LIKE(((((rt0.c1)OR(rt0.c1)))AND('-1214669692')))); -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
DROP VIEW v0; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA main.optimize; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c1)=('ԍ2|', 0xffffffffd2f6ee8b) WHERE (+ (CAST(vt0.c1 AS REAL))); -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=(749723420); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '24558'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
PRAGMA optimize; -- 0ms;
PRAGMA locking_mode; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 5); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (x'', '1220863988'); -- 0ms;
PRAGMA automatic_index = false; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-835322282,2');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c2) VALUES (-1.534039024E9, NULL); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, -0.0); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)/(vt0.c1)))OR(LOWER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)/(vt0.c1)))OR(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)/(vt0.c1)))OR(LOWER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)/(vt0.c1)))OR(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)/(vt0.c1)))OR(LOWER(vt0.c0))));
SELECT ALL * FROM vt0, rt0 WHERE (((0.25336854683135923)<(((vt0.c0)*(vt0.c1))))) ORDER BY ((((vt0.c0)IS(rt0.c0)))>(((NULL)/(vt0.c0))))  NULLS FIRST, (~ (((((rt0.c0)AND(rt0.c2)))AND(rt0.c1))))  NULLS LAST, (- (rt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.25336854683135923)<(((vt0.c0)*(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)IS(rt0.c0)))>(((NULL)/(vt0.c0))))  NULLS FIRST, (~ (((((rt0.c0)AND(rt0.c2)))AND(rt0.c1))))  NULLS LAST, (- (rt0.c0)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((0.25336854683135923)<(((vt0.c0)*(vt0.c1))))) ORDER BY ((((vt0.c0)IS(rt0.c0)))>(((NULL)/(vt0.c0))))  NULLS FIRST, (~ (((((rt0.c0)AND(rt0.c2)))AND(rt0.c1))))  NULLS LAST, (- (rt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.25336854683135923)<(((vt0.c0)*(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)IS(rt0.c0)))>(((NULL)/(vt0.c0))))  NULLS FIRST, (~ (((((rt0.c0)AND(rt0.c2)))AND(rt0.c1))))  NULLS LAST, (- (rt0.c0)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((0.25336854683135923)<(((vt0.c0)*(vt0.c1))))) ORDER BY ((((vt0.c0)IS(rt0.c0)))>(((NULL)/(vt0.c0))))  NULLS FIRST, (~ (((((rt0.c0)AND(rt0.c2)))AND(rt0.c1))))  NULLS LAST, (- (rt0.c0)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((('Q<h''정mṁ^c', rt0.c2, rt0.c0)) NOT BETWEEN ((((rt0.c0)<>(rt0.c0)), LIKELIHOOD(vt0.c0, 0.8855719838990153), CAST(rt0.c1 AS TEXT))) AND ((((rt0.c1)AND(vt0.c1)), ((vt0.c0)OR(vt0.c1)), LIKELY(x'')))));
SELECT SUM(count) FROM (SELECT ((((('Q<h''정mṁ^c', rt0.c2, rt0.c0)) NOT BETWEEN ((((rt0.c0)!=(rt0.c0)), LIKELIHOOD(vt0.c0, 0.8855719838990153), CAST(rt0.c1 AS TEXT))) AND ((((rt0.c1)AND(vt0.c1)), ((vt0.c0)OR(vt0.c1)), LIKELY(x''))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((('Q<h''정mṁ^c', rt0.c2, rt0.c0)) NOT BETWEEN ((((rt0.c0)<>(rt0.c0)), LIKELIHOOD(vt0.c0, 0.8855719838990153), CAST(rt0.c1 AS TEXT))) AND ((((rt0.c1)AND(vt0.c1)), ((vt0.c0)OR(vt0.c1)), LIKELY(x'')))));
SELECT SUM(count) FROM (SELECT ((((('Q<h''정mṁ^c', rt0.c2, rt0.c0)) NOT BETWEEN ((((rt0.c0)!=(rt0.c0)), LIKELIHOOD(vt0.c0, 0.8855719838990153), CAST(rt0.c1 AS TEXT))) AND ((((rt0.c1)AND(vt0.c1)), ((vt0.c0)OR(vt0.c1)), LIKELY(x''))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((('Q<h''정mṁ^c', rt0.c2, rt0.c0)) NOT BETWEEN ((((rt0.c0)<>(rt0.c0)), LIKELIHOOD(vt0.c0, 0.8855719838990153), CAST(rt0.c1 AS TEXT))) AND ((((rt0.c1)AND(vt0.c1)), ((vt0.c0)OR(vt0.c1)), LIKELY(x'')))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((vt0.c1 IN ()));
SELECT * FROM rt0 WHERE ((((((rt0.c1))<=((rt0.c0)))) BETWEEN ('-1798995518') AND ((((0x793feace))<((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))<=((rt0.c0)))) BETWEEN ('-1798995518') AND ((((0X793feace))<((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c1))<=((rt0.c0)))) BETWEEN ('-1798995518') AND ((((0x793feace))<((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))<=((rt0.c0)))) BETWEEN ('-1798995518') AND ((((0X793feace))<((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c1))<=((rt0.c0)))) BETWEEN ('-1798995518') AND ((((0x793feace))<((rt0.c0))))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((vt0.c1, (~ (rt0.c1)), json(vt0.c0)))>=(((((vt0.c0, NULL, rt0.c2, rt0.c1, rt0.c2))<>((rt0.c0, vt0.c1, rt0.c0, vt0.c0, vt0.c0))), (((rt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2))), CAST(vt0.c1 AS TEXT)))) WHERE (((((((((NULL)AND(rt0.c2 COLLATE NOCASE)))AND(CAST(vt0.c1 AS INTEGER))))AND(((rt0.c2) IS FALSE))))AND(json(rt0.c1)))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)AND(rt0.c2 COLLATE NOCASE)))AND(CAST(vt0.c1 AS INTEGER))))AND(((rt0.c2) IS FALSE))))AND(json(rt0.c1)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((vt0.c1, (~ (rt0.c1)), json(vt0.c0)))>=(((((vt0.c0, NULL, rt0.c2, rt0.c1, rt0.c2))!=((rt0.c0, vt0.c1, rt0.c0, vt0.c0, vt0.c0))), (((rt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2))), CAST(vt0.c1 AS TEXT)))) ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((vt0.c1, (~ (rt0.c1)), json(vt0.c0)))>=(((((vt0.c0, NULL, rt0.c2, rt0.c1, rt0.c2))<>((rt0.c0, vt0.c1, rt0.c0, vt0.c0, vt0.c0))), (((rt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2))), CAST(vt0.c1 AS TEXT)))) WHERE (((((((((NULL)AND(rt0.c2 COLLATE NOCASE)))AND(CAST(vt0.c1 AS INTEGER))))AND(((rt0.c2) IS FALSE))))AND(json(rt0.c1)))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)AND(rt0.c2 COLLATE NOCASE)))AND(CAST(vt0.c1 AS INTEGER))))AND(((rt0.c2) IS FALSE))))AND(json(rt0.c1)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((vt0.c1, (~ (rt0.c1)), json(vt0.c0)))>=(((((vt0.c0, NULL, rt0.c2, rt0.c1, rt0.c2))!=((rt0.c0, vt0.c1, rt0.c0, vt0.c0, vt0.c0))), (((rt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2))), CAST(vt0.c1 AS TEXT)))) ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((vt0.c1, (~ (rt0.c1)), json(vt0.c0)))>=(((((vt0.c0, NULL, rt0.c2, rt0.c1, rt0.c2))<>((rt0.c0, vt0.c1, rt0.c0, vt0.c0, vt0.c0))), (((rt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2))), CAST(vt0.c1 AS TEXT)))) WHERE (((((((((NULL)AND(rt0.c2 COLLATE NOCASE)))AND(CAST(vt0.c1 AS INTEGER))))AND(((rt0.c2) IS FALSE))))AND(json(rt0.c1)))) ORDER BY NULL  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((CASE WHEN rt0.c1 THEN vt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c1 THEN vt0.c1 END IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((CASE WHEN rt0.c1 THEN vt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c1 THEN vt0.c1 END IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((CASE WHEN rt0.c1 THEN vt0.c1 END IN ()));
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0))) ISNULL));
SELECT ALL * FROM vt0 WHERE (HEX(CAST(vt0.c1 AS TEXT))) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(CAST(vt0.c1 AS TEXT))) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (HEX(CAST(vt0.c1 AS TEXT))) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(CAST(vt0.c1 AS TEXT))) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (HEX(CAST(vt0.c1 AS TEXT))) ORDER BY x'' ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST(0X1abb0f56 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0x1abb0f56 AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(0X1abb0f56 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0x1abb0f56 AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(0X1abb0f56 AS REAL));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c1 COLLATE BINARY)<<(vt0.c1 COLLATE BINARY)) WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1)))OR(UNLIKELY(DISTINCT rt0.c2))))OR(LIKE(vt0.c0, rt0.c2, '	')))) ORDER BY ((rt0.c1 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1)))OR(UNLIKELY(DISTINCT rt0.c2))))OR(LIKE(vt0.c0, rt0.c2, '	')))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c1 COLLATE BINARY)<<(vt0.c1 COLLATE BINARY)) ORDER BY ((rt0.c1 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c1 COLLATE BINARY)<<(vt0.c1 COLLATE BINARY)) WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1)))OR(UNLIKELY(DISTINCT rt0.c2))))OR(LIKE(vt0.c0, rt0.c2, '	')))) ORDER BY ((rt0.c1 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1)))OR(UNLIKELY(DISTINCT rt0.c2))))OR(LIKE(vt0.c0, rt0.c2, '	')))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c1 COLLATE BINARY)<<(vt0.c1 COLLATE BINARY)) ORDER BY ((rt0.c1 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c1 COLLATE BINARY)<<(vt0.c1 COLLATE BINARY)) WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1)))OR(UNLIKELY(DISTINCT rt0.c2))))OR(LIKE(vt0.c0, rt0.c2, '	')))) ORDER BY ((rt0.c1 IN ()) IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(((((vt0.c0)OR(vt0.c0)))AND('(U')), CAST('' AS NUMERIC))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((COALESCE(((((vt0.c0)OR(vt0.c0)))AND('(U')), CAST('' AS NUMERIC))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(((((vt0.c0)OR(vt0.c0)))AND('(U')), CAST('' AS NUMERIC))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((COALESCE(((((vt0.c0)OR(vt0.c0)))AND('(U')), CAST('' AS NUMERIC))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(((((vt0.c0)OR(vt0.c0)))AND('(U')), CAST('' AS NUMERIC))) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)<<(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<<(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)<<(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<<(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)<<(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))) AS INTEGER)) ORDER BY CASE WHEN ((vt0.c1)||(vt0.c1)) THEN vt0.c1 COLLATE NOCASE END DESC, (((vt0.c0) IS FALSE) IN (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST, vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1)||(vt0.c1)) THEN vt0.c1 COLLATE NOCASE END DESC, (((vt0.c0) IS FALSE) IN (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST, vt0.c1 DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))) AS INTEGER)) ORDER BY CASE WHEN ((vt0.c1)||(vt0.c1)) THEN vt0.c1 COLLATE NOCASE END DESC, (((vt0.c0) IS FALSE) IN (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST, vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1)||(vt0.c1)) THEN vt0.c1 COLLATE NOCASE END DESC, (((vt0.c0) IS FALSE) IN (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST, vt0.c1 DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))) AS INTEGER)) ORDER BY CASE WHEN ((vt0.c1)||(vt0.c1)) THEN vt0.c1 COLLATE NOCASE END DESC, (((vt0.c0) IS FALSE) IN (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST, vt0.c1 DESC;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((TRIM(DISTINCT rt0.c1, rt0.c1))OR(CAST(rt0.c1 AS BLOB))))OR(((rt0.c1) ISNULL))) WHERE ((((rt0.c2 IN (vt0.c1, rt0.c0))) IS TRUE)) ORDER BY CASE ((vt0.c0)<=(0.8030702181762005))  WHEN rt0.c0 THEN CAST(rt0.c0 AS INTEGER) WHEN ((rt0.c0)IS NOT(rt0.c0)) THEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) WHEN (((rt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c2))) THEN (vt0.c0 IN ()) WHEN CAST(rt0.c2 AS BLOB) THEN vt0.c0 WHEN (((vt0.c1)) BETWEEN ((NULL)) AND ((rt0.c1))) THEN CAST(vt0.c1 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (vt0.c1, rt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((TRIM(DISTINCT rt0.c1, rt0.c1))OR(CAST(rt0.c1 AS BLOB))))OR(((rt0.c1) ISNULL))) ORDER BY CASE ((vt0.c0)<=(0.8030702181762005))  WHEN rt0.c0 THEN CAST(rt0.c0 AS INTEGER) WHEN ((rt0.c0)IS NOT(rt0.c0)) THEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) WHEN (((rt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c2))) THEN (vt0.c0 IN ()) WHEN CAST(rt0.c2 AS BLOB) THEN vt0.c0 WHEN (((vt0.c1)) BETWEEN ((NULL)) AND ((rt0.c1))) THEN CAST(vt0.c1 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((TRIM(DISTINCT rt0.c1, rt0.c1))OR(CAST(rt0.c1 AS BLOB))))OR(((rt0.c1) ISNULL))) WHERE ((((rt0.c2 IN (vt0.c1, rt0.c0))) IS TRUE)) ORDER BY CASE ((vt0.c0)<=(0.8030702181762005))  WHEN rt0.c0 THEN CAST(rt0.c0 AS INTEGER) WHEN ((rt0.c0)IS NOT(rt0.c0)) THEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) WHEN (((rt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c2))) THEN (vt0.c0 IN ()) WHEN CAST(rt0.c2 AS BLOB) THEN vt0.c0 WHEN (((vt0.c1)) BETWEEN ((NULL)) AND ((rt0.c1))) THEN CAST(vt0.c1 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (vt0.c1, rt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((TRIM(DISTINCT rt0.c1, rt0.c1))OR(CAST(rt0.c1 AS BLOB))))OR(((rt0.c1) ISNULL))) ORDER BY CASE ((vt0.c0)<=(0.8030702181762005))  WHEN rt0.c0 THEN CAST(rt0.c0 AS INTEGER) WHEN ((rt0.c0)IS NOT(rt0.c0)) THEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) WHEN (((rt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c2))) THEN (vt0.c0 IN ()) WHEN CAST(rt0.c2 AS BLOB) THEN vt0.c0 WHEN (((vt0.c1)) BETWEEN ((NULL)) AND ((rt0.c1))) THEN CAST(vt0.c1 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((TRIM(DISTINCT rt0.c1, rt0.c1))OR(CAST(rt0.c1 AS BLOB))))OR(((rt0.c1) ISNULL))) WHERE ((((rt0.c2 IN (vt0.c1, rt0.c0))) IS TRUE)) ORDER BY CASE ((vt0.c0)<=(0.8030702181762005))  WHEN rt0.c0 THEN CAST(rt0.c0 AS INTEGER) WHEN ((rt0.c0)IS NOT(rt0.c0)) THEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) WHEN (((rt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c2))) THEN (vt0.c0 IN ()) WHEN CAST(rt0.c2 AS BLOB) THEN vt0.c0 WHEN (((vt0.c1)) BETWEEN ((NULL)) AND ((rt0.c1))) THEN CAST(vt0.c1 AS NUMERIC) END;
SELECT ALL * FROM rt0 WHERE (json_quote((NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_quote((NOT (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (json_quote((NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_quote((NOT (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (json_quote((NOT (rt0.c0))));
SELECT * FROM rt0, vt0 WHERE (-1960194831) ORDER BY ((((((vt0.c0)AND(rt0.c1)))OR(rt0.c2)))||(((rt0.c1) BETWEEN (rt0.c0) AND (NULL)))) ASC  NULLS FIRST, CAST(CAST(rt0.c0 AS REAL) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1960194831) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((vt0.c0)AND(rt0.c1)))OR(rt0.c2)))||(((rt0.c1) BETWEEN (rt0.c0) AND (NULL)))) ASC  NULLS FIRST, CAST(CAST(rt0.c0 AS REAL) AS NUMERIC)  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (-1960194831) ORDER BY ((((((vt0.c0)AND(rt0.c1)))OR(rt0.c2)))||(((rt0.c1) BETWEEN (rt0.c0) AND (NULL)))) ASC  NULLS FIRST, CAST(CAST(rt0.c0 AS REAL) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1960194831) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((vt0.c0)AND(rt0.c1)))OR(rt0.c2)))||(((rt0.c1) BETWEEN (rt0.c0) AND (NULL)))) ASC  NULLS FIRST, CAST(CAST(rt0.c0 AS REAL) AS NUMERIC)  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (-1960194831) ORDER BY ((((((vt0.c0)AND(rt0.c1)))OR(rt0.c2)))||(((rt0.c1) BETWEEN (rt0.c0) AND (NULL)))) ASC  NULLS FIRST, CAST(CAST(rt0.c0 AS REAL) AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((COALESCE(x'8417', '')) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((COALESCE(x'8417', '')) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((COALESCE(x'8417', '')) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((COALESCE(x'8417', '')) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((COALESCE(x'8417', '')) NOTNULL);
SELECT ALL * FROM vt0 NOT INDEXED NATURAL JOIN rt0 WHERE (((((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c0)))>>((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c0)))>>((NOT (rt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NOT INDEXED NATURAL JOIN rt0 WHERE (((((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c0)))>>((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c0)))>>((NOT (rt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NOT INDEXED NATURAL JOIN rt0 WHERE (((((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c0)))>>((NOT (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)==(rt0.c2))))) ORDER BY (- (((-1998838767) ISNULL))) ASC  NULLS FIRST, CASE (rt0.c2 IN ())  WHEN LIKE(rt0.c1, rt0.c1, '0') THEN (rt0.c2 IN ()) WHEN (+ (rt0.c2)) THEN LIKELY(rt0.c0) WHEN ((rt0.c1)<(rt0.c0)) THEN (((rt0.c2))<(('716585589'))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1)=(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (- (((-1998838767) ISNULL))) ASC  NULLS FIRST, CASE (rt0.c2 IN ())  WHEN LIKE(rt0.c1, rt0.c1, '0') THEN (rt0.c2 IN ()) WHEN (+ (rt0.c2)) THEN LIKELY(rt0.c0) WHEN ((rt0.c1)<(rt0.c0)) THEN (((rt0.c2))<(('716585589'))) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)==(rt0.c2))))) ORDER BY (- (((-1998838767) ISNULL))) ASC  NULLS FIRST, CASE (rt0.c2 IN ())  WHEN LIKE(rt0.c1, rt0.c1, '0') THEN (rt0.c2 IN ()) WHEN (+ (rt0.c2)) THEN LIKELY(rt0.c0) WHEN ((rt0.c1)<(rt0.c0)) THEN (((rt0.c2))<(('716585589'))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1)=(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (- (((-1998838767) ISNULL))) ASC  NULLS FIRST, CASE (rt0.c2 IN ())  WHEN LIKE(rt0.c1, rt0.c1, '0') THEN (rt0.c2 IN ()) WHEN (+ (rt0.c2)) THEN LIKELY(rt0.c0) WHEN ((rt0.c1)<(rt0.c0)) THEN (((rt0.c2))<(('716585589'))) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)==(rt0.c2))))) ORDER BY (- (((-1998838767) ISNULL))) ASC  NULLS FIRST, CASE (rt0.c2 IN ())  WHEN LIKE(rt0.c1, rt0.c1, '0') THEN (rt0.c2 IN ()) WHEN (+ (rt0.c2)) THEN LIKELY(rt0.c0) WHEN ((rt0.c1)<(rt0.c0)) THEN (((rt0.c2))<(('716585589'))) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)AND(rt0.c1)))IS NOT(((rt0.c2)>>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c1)))IS NOT(((rt0.c2)>>(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)AND(rt0.c1)))IS NOT(((rt0.c2)>>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c1)))IS NOT(((rt0.c2)>>(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)AND(rt0.c1)))IS NOT(((rt0.c2)>>(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (rt0.c0)));
SELECT ALL * FROM vt0, rt0 WHERE (TRIM(((rt0.c1)-(vt0.c0)), CAST(0x28acf1b3 AS NUMERIC))) ORDER BY (((0xffffffff8aa6c815, rt0.c1, '')) BETWEEN ((ABS(rt0.c1), CASE WHEN rt0.c1 THEN 0.6503207161904246 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c1)LIKE('-1968781291')))) AND ((((rt0.c2)<(rt0.c0)), (rt0.c0 IN ()), ((rt0.c0)||(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c1)-(vt0.c0)), CAST(0X28acf1b3 AS NUMERIC))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((0xffffffff8aa6c815, rt0.c1, '')) BETWEEN ((ABS(rt0.c1), CASE WHEN rt0.c1 THEN 0.6503207161904246 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c1)LIKE('-1968781291')))) AND ((((rt0.c2)<(rt0.c0)), (rt0.c0 IN ()), ((rt0.c0)||(rt0.c2))))));
SELECT ALL * FROM vt0, rt0 WHERE (TRIM(((rt0.c1)-(vt0.c0)), CAST(0x28acf1b3 AS NUMERIC))) ORDER BY (((0xffffffff8aa6c815, rt0.c1, '')) BETWEEN ((ABS(rt0.c1), CASE WHEN rt0.c1 THEN 0.6503207161904246 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c1)LIKE('-1968781291')))) AND ((((rt0.c2)<(rt0.c0)), (rt0.c0 IN ()), ((rt0.c0)||(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c1)-(vt0.c0)), CAST(0X28acf1b3 AS NUMERIC))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((0xffffffff8aa6c815, rt0.c1, '')) BETWEEN ((ABS(rt0.c1), CASE WHEN rt0.c1 THEN 0.6503207161904246 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c1)LIKE('-1968781291')))) AND ((((rt0.c2)<(rt0.c0)), (rt0.c0 IN ()), ((rt0.c0)||(rt0.c2))))));
SELECT ALL * FROM vt0, rt0 WHERE (TRIM(((rt0.c1)-(vt0.c0)), CAST(0x28acf1b3 AS NUMERIC))) ORDER BY (((0xffffffff8aa6c815, rt0.c1, '')) BETWEEN ((ABS(rt0.c1), CASE WHEN rt0.c1 THEN 0.6503207161904246 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c1)LIKE('-1968781291')))) AND ((((rt0.c2)<(rt0.c0)), (rt0.c0 IN ()), ((rt0.c0)||(rt0.c2)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0) NOTNULL))OR((+ (rt0.c1)))))OR(QUOTE(rt0.c0))) WHERE (((((rt0.c2)>(rt0.c2))) BETWEEN ('') AND (CAST(rt0.c1 AS TEXT)))) ORDER BY (((((vt0.c0))>((rt0.c1)))) NOT BETWEEN (0.07677327714763393) AND (((((((((vt0.c1)OR(rt0.c0)))AND(0xffffffff88dc2411)))OR(vt0.c0)))AND(rt0.c2)))) DESC  NULLS LAST, (~ (rt0.c0)) ASC  NULLS LAST, (((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>(rt0.c2))) BETWEEN ('') AND (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0) NOTNULL))OR((+ (rt0.c1)))))OR(QUOTE(rt0.c0))) ORDER BY (((((vt0.c0))>((rt0.c1)))) NOT BETWEEN (0.07677327714763393) AND (((((((((vt0.c1)OR(rt0.c0)))AND(0Xffffffff88dc2411)))OR(vt0.c0)))AND(rt0.c2)))) DESC  NULLS LAST, (~ (rt0.c0)) ASC  NULLS LAST, (((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0) NOTNULL))OR((+ (rt0.c1)))))OR(QUOTE(rt0.c0))) WHERE (((((rt0.c2)>(rt0.c2))) BETWEEN ('') AND (CAST(rt0.c1 AS TEXT)))) ORDER BY (((((vt0.c0))>((rt0.c1)))) NOT BETWEEN (0.07677327714763393) AND (((((((((vt0.c1)OR(rt0.c0)))AND(0xffffffff88dc2411)))OR(vt0.c0)))AND(rt0.c2)))) DESC  NULLS LAST, (~ (rt0.c0)) ASC  NULLS LAST, (((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>(rt0.c2))) BETWEEN ('') AND (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0) NOTNULL))OR((+ (rt0.c1)))))OR(QUOTE(rt0.c0))) ORDER BY (((((vt0.c0))>((rt0.c1)))) NOT BETWEEN (0.07677327714763393) AND (((((((((vt0.c1)OR(rt0.c0)))AND(0Xffffffff88dc2411)))OR(vt0.c0)))AND(rt0.c2)))) DESC  NULLS LAST, (~ (rt0.c0)) ASC  NULLS LAST, (((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0) NOTNULL))OR((+ (rt0.c1)))))OR(QUOTE(rt0.c0))) WHERE (((((rt0.c2)>(rt0.c2))) BETWEEN ('') AND (CAST(rt0.c1 AS TEXT)))) ORDER BY (((((vt0.c0))>((rt0.c1)))) NOT BETWEEN (0.07677327714763393) AND (((((((((vt0.c1)OR(rt0.c0)))AND(0xffffffff88dc2411)))OR(vt0.c0)))AND(rt0.c2)))) DESC  NULLS LAST, (~ (rt0.c0)) ASC  NULLS LAST, (((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((TIME(rt0.c2, rt0.c2, x'')))<>((json_insert(rt0.c1, rt0.c1, rt0.c2, '(U', rt0.c0))))) ORDER BY NULL DESC, CAST(NULL AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((TIME(rt0.c2, rt0.c2, x'')))!=((json_insert(rt0.c1, rt0.c1, rt0.c2, '(U', rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC, CAST(NULL AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((TIME(rt0.c2, rt0.c2, x'')))<>((json_insert(rt0.c1, rt0.c1, rt0.c2, '(U', rt0.c0))))) ORDER BY NULL DESC, CAST(NULL AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((TIME(rt0.c2, rt0.c2, x'')))!=((json_insert(rt0.c1, rt0.c1, rt0.c2, '(U', rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC, CAST(NULL AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT x'', (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ORDER BY ((NULL)-(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT x'', (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((NULL)-(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))));
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT x'', (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ORDER BY ((NULL)-(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT x'', (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((NULL)-(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))));
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT x'', (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ORDER BY ((NULL)-(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((+ (rt0.c1)))OR(((NULL) BETWEEN (rt0.c2) AND (rt0.c1)))))OR(((rt0.c2)==(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt0.c1)))OR(((NULL) BETWEEN (rt0.c2) AND (rt0.c1)))))OR(((rt0.c2)=(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((+ (rt0.c1)))OR(((NULL) BETWEEN (rt0.c2) AND (rt0.c1)))))OR(((rt0.c2)==(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt0.c1)))OR(((NULL) BETWEEN (rt0.c2) AND (rt0.c1)))))OR(((rt0.c2)=(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((+ (rt0.c1)))OR(((NULL) BETWEEN (rt0.c2) AND (rt0.c1)))))OR(((rt0.c2)==(rt0.c1)))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN ((vt0.c1) ISNULL) WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) THEN (vt0.c1 IN ()) WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0))<=((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN ((vt0.c1) ISNULL) WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) THEN (vt0.c1 IN ()) WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0))<=((vt0.c1))) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN ((vt0.c1) ISNULL) WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) THEN (vt0.c1 IN ()) WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0))<=((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN ((vt0.c1) ISNULL) WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) THEN (vt0.c1 IN ()) WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0))<=((vt0.c1))) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN ((vt0.c1) ISNULL) WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) THEN (vt0.c1 IN ()) WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0))<=((vt0.c1))) END);
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c1)))AND(NULL))))<=((((vt0.c0)GLOB(vt0.c0)))))) ORDER BY (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))!=(((+ (vt0.c1))))) DESC, ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)AND(vt0.c1)))AND(NULL))))<=((((vt0.c0)GLOB(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<>(((+ (vt0.c1))))) DESC, ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c1)))AND(NULL))))<=((((vt0.c0)GLOB(vt0.c0)))))) ORDER BY (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))!=(((+ (vt0.c1))))) DESC, ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)AND(vt0.c1)))AND(NULL))))<=((((vt0.c0)GLOB(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<>(((+ (vt0.c1))))) DESC, ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c1)))AND(NULL))))<=((((vt0.c0)GLOB(vt0.c0)))))) ORDER BY (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))!=(((+ (vt0.c1))))) DESC, ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE);
SELECT ALL * FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) ORDER BY (- (((vt0.c1) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c1) NOT NULL)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) ORDER BY (- (((vt0.c1) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c1) NOT NULL)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) ORDER BY (- (((vt0.c1) NOT NULL)))  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE ('716585589');
SELECT SUM(count) FROM (SELECT ALL (('716585589') IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ('716585589');
SELECT SUM(count) FROM (SELECT ALL (('716585589') IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ('716585589');
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE RTRIM) ORDER BY (((((((((('6F괇.*B')OR(vt0.c1)))OR(vt0.c1)))AND(rt0.c0)))AND(rt0.c0)))-((x'' IN ()))) ASC  NULLS FIRST, '-340306362', (- (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((((((('6F괇.*B')OR(vt0.c1)))OR(vt0.c1)))AND(rt0.c0)))AND(rt0.c0)))-((x'' IN ()))) ASC  NULLS FIRST, '-340306362', (- (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE RTRIM) ORDER BY (((((((((('6F괇.*B')OR(vt0.c1)))OR(vt0.c1)))AND(rt0.c0)))AND(rt0.c0)))-((x'' IN ()))) ASC  NULLS FIRST, '-340306362', (- (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((((((('6F괇.*B')OR(vt0.c1)))OR(vt0.c1)))AND(rt0.c0)))AND(rt0.c0)))-((x'' IN ()))) ASC  NULLS FIRST, '-340306362', (- (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE RTRIM) ORDER BY (((((((((('6F괇.*B')OR(vt0.c1)))OR(vt0.c1)))AND(rt0.c0)))AND(rt0.c0)))-((x'' IN ()))) ASC  NULLS FIRST, '-340306362', (- (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((- (rt0.c1)))>=((('-1417403660')-(rt0.c0))))) ORDER BY rt0.c2 DESC  NULLS LAST, ((((NOT (rt0.c2)), ((rt0.c2) IS FALSE), ((rt0.c1)IS NOT(rt0.c1))))>((((rt0.c2)IS(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END, rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1)))>=((('-1417403660')-(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS LAST, ((((NOT (rt0.c2)), ((rt0.c2) IS FALSE), ((rt0.c1)IS NOT(rt0.c1))))>((((rt0.c2)IS(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END, rt0.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((- (rt0.c1)))>=((('-1417403660')-(rt0.c0))))) ORDER BY rt0.c2 DESC  NULLS LAST, ((((NOT (rt0.c2)), ((rt0.c2) IS FALSE), ((rt0.c1)IS NOT(rt0.c1))))>((((rt0.c2)IS(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END, rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1)))>=((('-1417403660')-(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS LAST, ((((NOT (rt0.c2)), ((rt0.c2) IS FALSE), ((rt0.c1)IS NOT(rt0.c1))))>((((rt0.c2)IS(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END, rt0.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((- (rt0.c1)))>=((('-1417403660')-(rt0.c0))))) ORDER BY rt0.c2 DESC  NULLS LAST, ((((NOT (rt0.c2)), ((rt0.c2) IS FALSE), ((rt0.c1)IS NOT(rt0.c1))))>((((rt0.c2)IS(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END, rt0.c1)))  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c0) ORDER BY '' COLLATE NOCASE DESC, CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 END COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY '' COLLATE NOCASE DESC, CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 END COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c0) ORDER BY '' COLLATE NOCASE DESC, CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 END COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY '' COLLATE NOCASE DESC, CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 END COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c0) ORDER BY '' COLLATE NOCASE DESC, CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 END COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN 0.7408332530362904 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c1)<(vt0.c0))) AND ((- (1.220863988E9))))) ORDER BY (((vt0.c0 IN ()))GLOB(vt0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN 0.7408332530362904 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c1)<(vt0.c0))) AND ((- (1.220863988E9))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))GLOB(vt0.c0 COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN 0.7408332530362904 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c1)<(vt0.c0))) AND ((- (1.220863988E9))))) ORDER BY (((vt0.c0 IN ()))GLOB(vt0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN 0.7408332530362904 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c1)<(vt0.c0))) AND ((- (1.220863988E9))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))GLOB(vt0.c0 COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN 0.7408332530362904 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c1)<(vt0.c0))) AND ((- (1.220863988E9))))) ORDER BY (((vt0.c0 IN ()))GLOB(vt0.c0 COLLATE NOCASE)) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.5228023422872795)LIKE(vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((0.5228023422872795)LIKE(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.5228023422872795)LIKE(vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((0.5228023422872795)LIKE(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.5228023422872795)LIKE(vt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((TRIM(vt0.c0))<((NOT (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((TRIM(vt0.c0))<((NOT (vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((TRIM(vt0.c0))<((NOT (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((TRIM(vt0.c0))<((NOT (vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((TRIM(vt0.c0))<((NOT (vt0.c1))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))AND(json_extract(vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))AND(json_extract(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))AND(json_extract(vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))AND(json_extract(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))AND(json_extract(vt0.c0, vt0.c1))));
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND(vt0.c1 COLLATE RTRIM)))AND(CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND(vt0.c1 COLLATE RTRIM)))AND(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND(vt0.c1 COLLATE RTRIM)))AND(CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND(vt0.c1 COLLATE RTRIM)))AND(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND(vt0.c1 COLLATE RTRIM)))AND(CAST(rt0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE ((0.12886488384419947) IS TRUE)  WHEN (((rt0.c0))<=((vt0.c0))) THEN (('')LIKE(vt0.c1)) END) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0.12886488384419947) IS TRUE)  WHEN (((rt0.c0))<=((vt0.c0))) THEN (('')LIKE(vt0.c1)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0 DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE ((0.12886488384419947) IS TRUE)  WHEN (((rt0.c0))<=((vt0.c0))) THEN (('')LIKE(vt0.c1)) END) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0.12886488384419947) IS TRUE)  WHEN (((rt0.c0))<=((vt0.c0))) THEN (('')LIKE(vt0.c1)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0 DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE ((0.12886488384419947) IS TRUE)  WHEN (((rt0.c0))<=((vt0.c0))) THEN (('')LIKE(vt0.c1)) END) ORDER BY rt0.c0 DESC;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON LIKELY(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))) WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON LIKELY(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON LIKELY(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))) WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON LIKELY(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON LIKELY(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))) WHERE ((+ (NULL)));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT * FROM rt0 NOT INDEXED, vt0 WHERE (((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0 NOT INDEXED, vt0 WHERE (((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0 NOT INDEXED, vt0 WHERE (((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN rt0.c1 END THEN 0.012429910664734756 ELSE ((rt0.c0)>(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c0 THEN rt0.c1 END THEN 0.012429910664734756 ELSE ((rt0.c0)>(rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN rt0.c1 END THEN 0.012429910664734756 ELSE ((rt0.c0)>(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c0 THEN rt0.c1 END THEN 0.012429910664734756 ELSE ((rt0.c0)>(rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN rt0.c1 END THEN 0.012429910664734756 ELSE ((rt0.c0)>(rt0.c0)) END);
SELECT ALL * FROM vt0, rt0 WHERE (CAST((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (-775193801) AND (vt0.c0)) AS INTEGER)) ORDER BY CASE WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c0) NOT NULL) ELSE '1870962399' END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT BETWEEN (-775193801) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c0) NOT NULL) ELSE '1870962399' END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (-775193801) AND (vt0.c0)) AS INTEGER)) ORDER BY CASE WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c0) NOT NULL) ELSE '1870962399' END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT BETWEEN (-775193801) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c0) NOT NULL) ELSE '1870962399' END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (-775193801) AND (vt0.c0)) AS INTEGER)) ORDER BY CASE WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c0) NOT NULL) ELSE '1870962399' END;
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c1, ((rt0.c2) IS TRUE), (rt0.c1 IN (rt0.c2))))>=((HEX(vt0.c0), (((rt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c1, rt0.c0)) AND ((x'3561', rt0.c1, rt0.c0))), CAST(rt0.c1 AS REAL)))) WHERE (((rt0.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c1, ((rt0.c2) IS TRUE), (rt0.c1 IN (rt0.c2))))>=((HEX(vt0.c0), (((rt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c1, rt0.c0)) AND ((x'3561', rt0.c1, rt0.c0))), CAST(rt0.c1 AS REAL)))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c1, ((rt0.c2) IS TRUE), (rt0.c1 IN (rt0.c2))))>=((HEX(vt0.c0), (((rt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c1, rt0.c0)) AND ((x'3561', rt0.c1, rt0.c0))), CAST(rt0.c1 AS REAL)))) WHERE (((rt0.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c1, ((rt0.c2) IS TRUE), (rt0.c1 IN (rt0.c2))))>=((HEX(vt0.c0), (((rt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c1, rt0.c0)) AND ((x'3561', rt0.c1, rt0.c0))), CAST(rt0.c1 AS REAL)))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c1, ((rt0.c2) IS TRUE), (rt0.c1 IN (rt0.c2))))>=((HEX(vt0.c0), (((rt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c1, rt0.c0)) AND ((x'3561', rt0.c1, rt0.c0))), CAST(rt0.c1 AS REAL)))) WHERE (((rt0.c2) IS FALSE));
SELECT * FROM rt0 WHERE (((((((((IFNULL(rt0.c0, rt0.c0))AND(((((((((x'')AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND ('2015645386')))))AND(rt0.c0 COLLATE NOCASE)))AND(rt0.c1))) ORDER BY (~ (rt0.c2 COLLATE NOCASE))  NULLS FIRST, (0.15102291663783451 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((IFNULL(rt0.c0, rt0.c0))AND(((((((((x'')AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND ('2015645386')))))AND(rt0.c0 COLLATE NOCASE)))AND(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY (~ (rt0.c2 COLLATE NOCASE))  NULLS FIRST, (0.15102291663783451 IN ()) DESC);
SELECT * FROM rt0 WHERE (((((((((IFNULL(rt0.c0, rt0.c0))AND(((((((((x'')AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND ('2015645386')))))AND(rt0.c0 COLLATE NOCASE)))AND(rt0.c1))) ORDER BY (~ (rt0.c2 COLLATE NOCASE))  NULLS FIRST, (0.15102291663783451 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((IFNULL(rt0.c0, rt0.c0))AND(((((((((x'')AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND ('2015645386')))))AND(rt0.c0 COLLATE NOCASE)))AND(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY (~ (rt0.c2 COLLATE NOCASE))  NULLS FIRST, (0.15102291663783451 IN ()) DESC);
SELECT * FROM rt0 WHERE (((((((((IFNULL(rt0.c0, rt0.c0))AND(((((((((x'')AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND ('2015645386')))))AND(rt0.c0 COLLATE NOCASE)))AND(rt0.c1))) ORDER BY (~ (rt0.c2 COLLATE NOCASE))  NULLS FIRST, (0.15102291663783451 IN ()) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)IS NOT(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS NOT(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)IS NOT(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS NOT(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)IS NOT(vt0.c0))) ISNULL));
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c1;
SELECT ALL COUNT(*) FROM rt0 WHERE (0.9248708921535562);
SELECT SUM(count) FROM (SELECT ALL ((0.9248708921535562) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.9248708921535562);
SELECT SUM(count) FROM (SELECT ALL ((0.9248708921535562) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.9248708921535562);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END)AND(CASE WHEN x'' THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY ABS(DISTINCT vt0.c1 COLLATE BINARY) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c1 END)AND(CASE WHEN x'' THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ABS(DISTINCT vt0.c1 COLLATE BINARY) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END)AND(CASE WHEN x'' THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY ABS(DISTINCT vt0.c1 COLLATE BINARY) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c1 END)AND(CASE WHEN x'' THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ABS(DISTINCT vt0.c1 COLLATE BINARY) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END)AND(CASE WHEN x'' THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY ABS(DISTINCT vt0.c1 COLLATE BINARY) ASC;
SELECT * FROM rt0, vt0 WHERE (((rt0.c2 COLLATE NOCASE) BETWEEN ((- (rt0.c2))) AND (load_extension(rt0.c2, rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) BETWEEN ((- (rt0.c2))) AND (load_extension(rt0.c2, rt0.c2)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((rt0.c2 COLLATE NOCASE) BETWEEN ((- (rt0.c2))) AND (load_extension(rt0.c2, rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) BETWEEN ((- (rt0.c2))) AND (load_extension(rt0.c2, rt0.c2)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c1) IS FALSE)) ORDER BY ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY ASC, (((rt0.c0, vt0.c0, vt0.c1)) BETWEEN ((x'', (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))), ((((rt0.c2)OR(rt0.c0)))AND(vt0.c0)))) AND (((- (rt0.c1)), vt0.c0, rt0.c0 COLLATE RTRIM))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY ASC, (((rt0.c0, vt0.c0, vt0.c1)) BETWEEN ((x'', (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))), ((((rt0.c2)OR(rt0.c0)))AND(vt0.c0)))) AND (((- (rt0.c1)), vt0.c0, rt0.c0 COLLATE RTRIM))) DESC);
SELECT * FROM vt0, rt0 WHERE (((rt0.c1) IS FALSE)) ORDER BY ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY ASC, (((rt0.c0, vt0.c0, vt0.c1)) BETWEEN ((x'', (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))), ((((rt0.c2)OR(rt0.c0)))AND(vt0.c0)))) AND (((- (rt0.c1)), vt0.c0, rt0.c0 COLLATE RTRIM))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY ASC, (((rt0.c0, vt0.c0, vt0.c1)) BETWEEN ((x'', (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))), ((((rt0.c2)OR(rt0.c0)))AND(vt0.c0)))) AND (((- (rt0.c1)), vt0.c0, rt0.c0 COLLATE RTRIM))) DESC);
SELECT * FROM vt0, rt0 WHERE (((rt0.c1) IS FALSE)) ORDER BY ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY ASC, (((rt0.c0, vt0.c0, vt0.c1)) BETWEEN ((x'', (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))), ((((rt0.c2)OR(rt0.c0)))AND(vt0.c0)))) AND (((- (rt0.c1)), vt0.c0, rt0.c0 COLLATE RTRIM))) DESC;
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS TEXT)) ORDER BY (((((((rt0.c1))<((rt0.c1))))AND(((rt0.c0) IS TRUE))))AND(((rt0.c0)&(rt0.c0)))) ASC  NULLS FIRST, CASE ((rt0.c2)LIKE(rt0.c1))  WHEN TRIM(DISTINCT rt0.c0) THEN rt0.c1 COLLATE RTRIM ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END, ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS BLOB) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c1))<((rt0.c1))))AND(((rt0.c0) IS TRUE))))AND(((rt0.c0)&(rt0.c0)))) ASC  NULLS FIRST, CASE ((rt0.c2)LIKE(rt0.c1))  WHEN TRIM(DISTINCT rt0.c0) THEN rt0.c1 COLLATE RTRIM ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END, ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS TEXT)) ORDER BY (((((((rt0.c1))<((rt0.c1))))AND(((rt0.c0) IS TRUE))))AND(((rt0.c0)&(rt0.c0)))) ASC  NULLS FIRST, CASE ((rt0.c2)LIKE(rt0.c1))  WHEN TRIM(DISTINCT rt0.c0) THEN rt0.c1 COLLATE RTRIM ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END, ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS BLOB) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c1))<((rt0.c1))))AND(((rt0.c0) IS TRUE))))AND(((rt0.c0)&(rt0.c0)))) ASC  NULLS FIRST, CASE ((rt0.c2)LIKE(rt0.c1))  WHEN TRIM(DISTINCT rt0.c0) THEN rt0.c1 COLLATE RTRIM ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END, ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS TEXT)) ORDER BY (((((((rt0.c1))<((rt0.c1))))AND(((rt0.c0) IS TRUE))))AND(((rt0.c0)&(rt0.c0)))) ASC  NULLS FIRST, CASE ((rt0.c2)LIKE(rt0.c1))  WHEN TRIM(DISTINCT rt0.c0) THEN rt0.c1 COLLATE RTRIM ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END, ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c0)!=(rt0.c2)) IN ()) WHERE (CAST((((rt0.c2, 0xffffffff974d10cd, rt0.c2))>=((vt0.c1, NULL, rt0.c1))) AS NUMERIC)) ORDER BY INSTR(rt0.c0, (((rt0.c1, rt0.c1, vt0.c0))!=((rt0.c2, NULL, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2, 0Xffffffff974d10cd, rt0.c2))>=((vt0.c1, NULL, rt0.c1))) AS NUMERIC)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c0)!=(rt0.c2)) IN ()) ORDER BY INSTR(rt0.c0, (((rt0.c1, rt0.c1, vt0.c0))!=((rt0.c2, NULL, vt0.c1)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c0)!=(rt0.c2)) IN ()) WHERE (CAST((((rt0.c2, 0xffffffff974d10cd, rt0.c2))>=((vt0.c1, NULL, rt0.c1))) AS NUMERIC)) ORDER BY INSTR(rt0.c0, (((rt0.c1, rt0.c1, vt0.c0))!=((rt0.c2, NULL, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2, 0Xffffffff974d10cd, rt0.c2))>=((vt0.c1, NULL, rt0.c1))) AS NUMERIC)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c0)!=(rt0.c2)) IN ()) ORDER BY INSTR(rt0.c0, (((rt0.c1, rt0.c1, vt0.c0))!=((rt0.c2, NULL, vt0.c1)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c0)!=(rt0.c2)) IN ()) WHERE (CAST((((rt0.c2, 0xffffffff974d10cd, rt0.c2))>=((vt0.c1, NULL, rt0.c1))) AS NUMERIC)) ORDER BY INSTR(rt0.c0, (((rt0.c1, rt0.c1, vt0.c0))!=((rt0.c2, NULL, vt0.c1))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND ('6f괇.*b')))IS(ABS(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c0) AND ('6f괇.*b')))IS(ABS(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND ('6f괇.*b')))IS(ABS(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c0) AND ('6f괇.*b')))IS(ABS(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND ('6f괇.*b')))IS(ABS(rt0.c0))));
SELECT ALL * FROM vt0, rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (x'ad627cce' COLLATE BINARY) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (x'ad627cce' COLLATE BINARY) AND (rt0.c2))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (x'ad627cce' COLLATE BINARY) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (x'ad627cce' COLLATE BINARY) AND (rt0.c2))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (x'ad627cce' COLLATE BINARY) AND (rt0.c2)));
SELECT * FROM rt0 INNER JOIN vt0 ON ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c1)))))>=((NULL COLLATE NOCASE))) WHERE (UNICODE((('749723420') IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE((('749723420') IS FALSE))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c1)))))>=((NULL COLLATE NOCASE))));
SELECT * FROM rt0 INNER JOIN vt0 ON ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c1)))))>=((NULL COLLATE NOCASE))) WHERE (UNICODE((('749723420') IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE((('749723420') IS FALSE))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c1)))))>=((NULL COLLATE NOCASE))));
SELECT * FROM rt0 INNER JOIN vt0 ON ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c1)))))>=((NULL COLLATE NOCASE))) WHERE (UNICODE((('749723420') IS FALSE)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ ((((vt0.c0))<((vt0.c0)))))) ORDER BY (- (CASE WHEN rt0.c1 THEN vt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (CASE WHEN rt0.c1 THEN vt0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ ((((vt0.c0))<((vt0.c0)))))) ORDER BY (- (CASE WHEN rt0.c1 THEN vt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (CASE WHEN rt0.c1 THEN vt0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ ((((vt0.c0))<((vt0.c0)))))) ORDER BY (- (CASE WHEN rt0.c1 THEN vt0.c1 END)) DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (SQLITE_SOURCE_ID());
SELECT ALL * FROM vt0 WHERE (((682422707) IS TRUE)) ORDER BY CAST((NOT (vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((682422707) IS TRUE)) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY CAST((NOT (vt0.c0)) AS REAL));
SELECT ALL * FROM vt0 WHERE (((682422707) IS TRUE)) ORDER BY CAST((NOT (vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((682422707) IS TRUE)) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY CAST((NOT (vt0.c0)) AS REAL));
SELECT ALL * FROM vt0 WHERE (((682422707) IS TRUE)) ORDER BY CAST((NOT (vt0.c0)) AS REAL);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0)==(CASE rt0.c1  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)==(CASE rt0.c1  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0)==(CASE rt0.c1  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)==(CASE rt0.c1  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0)==(CASE rt0.c1  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c1)AND(x'')))OR('0.7408332530362904')))OR(rt0.c1)))OR(rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))OR('1077382294')))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(x'')))OR('0.7408332530362904')))OR(rt0.c1)))OR(rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))OR('1077382294')))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c1)AND(x'')))OR('0.7408332530362904')))OR(rt0.c1)))OR(rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))OR('1077382294')))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(x'')))OR('0.7408332530362904')))OR(rt0.c1)))OR(rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))OR('1077382294')))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c1)AND(x'')))OR('0.7408332530362904')))OR(rt0.c1)))OR(rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))OR('1077382294')))OR(rt0.c1)))));
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c1)-(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1)-(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c1)-(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1)-(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c1)-(vt0.c1)))));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1)OR(x'814f')))OR(vt0.c1)) COLLATE NOCASE) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR(x'814f')))OR(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c1 DESC);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1)OR(x'814f')))OR(vt0.c1)) COLLATE NOCASE) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR(x'814f')))OR(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c1 DESC);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1)OR(x'814f')))OR(vt0.c1)) COLLATE NOCASE) ORDER BY vt0.c1 DESC;
SELECT ALL * FROM rt0, vt0 WHERE (((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(vt0.c1)))>=(IFNULL(DISTINCT vt0.c1, vt0.c0)))) ORDER BY (((((vt0.c1)|(rt0.c2))))=(((NOT (x''))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(vt0.c1)))>=(IFNULL(DISTINCT vt0.c1, vt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((vt0.c1)|(rt0.c2))))==(((NOT (x''))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(vt0.c1)))>=(IFNULL(DISTINCT vt0.c1, vt0.c0)))) ORDER BY (((((vt0.c1)|(rt0.c2))))=(((NOT (x''))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(vt0.c1)))>=(IFNULL(DISTINCT vt0.c1, vt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((vt0.c1)|(rt0.c2))))==(((NOT (x''))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(vt0.c1)))>=(IFNULL(DISTINCT vt0.c1, vt0.c0)))) ORDER BY (((((vt0.c1)|(rt0.c2))))=(((NOT (x''))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c1 IN (0.059621823722342704, rt0.c2))) NOT NULL)) ORDER BY CAST(vt0.c0 AS INTEGER) DESC, 'fN_o1G噾&1'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (0.059621823722342704, rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(vt0.c0 AS INTEGER) DESC, 'fN_o1G噾&1'  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c1 IN (0.059621823722342704, rt0.c2))) NOT NULL)) ORDER BY CAST(vt0.c0 AS INTEGER) DESC, 'fN_o1G噾&1'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (0.059621823722342704, rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(vt0.c0 AS INTEGER) DESC, 'fN_o1G噾&1'  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c1 IN (0.059621823722342704, rt0.c2))) NOT NULL)) ORDER BY CAST(vt0.c0 AS INTEGER) DESC, 'fN_o1G噾&1'  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE ((((vt0.c1 COLLATE BINARY))=((CAST(rt0.c2 AS BLOB))))) ORDER BY (+ ((+ (rt0.c1))))  NULLS FIRST, CASE ((((vt0.c0)AND(rt0.c1)))OR(rt0.c1))  WHEN ((rt0.c2)-(rt0.c2)) THEN json_quote(rt0.c0) END;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 COLLATE BINARY))==((CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ ((+ (rt0.c1))))  NULLS FIRST, CASE ((((vt0.c0)AND(rt0.c1)))OR(rt0.c1))  WHEN ((rt0.c2)-(rt0.c2)) THEN json_quote(rt0.c0) END);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c1 COLLATE BINARY))=((CAST(rt0.c2 AS BLOB))))) ORDER BY (+ ((+ (rt0.c1))))  NULLS FIRST, CASE ((((vt0.c0)AND(rt0.c1)))OR(rt0.c1))  WHEN ((rt0.c2)-(rt0.c2)) THEN json_quote(rt0.c0) END;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 COLLATE BINARY))==((CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ ((+ (rt0.c1))))  NULLS FIRST, CASE ((((vt0.c0)AND(rt0.c1)))OR(rt0.c1))  WHEN ((rt0.c2)-(rt0.c2)) THEN json_quote(rt0.c0) END);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c1 COLLATE BINARY))=((CAST(rt0.c2 AS BLOB))))) ORDER BY (+ ((+ (rt0.c1))))  NULLS FIRST, CASE ((((vt0.c0)AND(rt0.c1)))OR(rt0.c1))  WHEN ((rt0.c2)-(rt0.c2)) THEN json_quote(rt0.c0) END;
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((((((rt0.c2) NOT NULL))OR(((vt0.c1)!=(vt0.c1)))))AND(rt0.c0 COLLATE RTRIM))) ORDER BY ((((vt0.c0)LIKE(rt0.c2))) BETWEEN (0Xffffffff8a1f5664) AND (-507580423));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) NOT NULL))OR(((vt0.c1)<>(vt0.c1)))))AND(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((vt0.c0)LIKE(rt0.c2))) BETWEEN (0xffffffff8a1f5664) AND (-507580423)));
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((((((rt0.c2) NOT NULL))OR(((vt0.c1)!=(vt0.c1)))))AND(rt0.c0 COLLATE RTRIM))) ORDER BY ((((vt0.c0)LIKE(rt0.c2))) BETWEEN (0Xffffffff8a1f5664) AND (-507580423));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) NOT NULL))OR(((vt0.c1)<>(vt0.c1)))))AND(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((vt0.c0)LIKE(rt0.c2))) BETWEEN (0xffffffff8a1f5664) AND (-507580423)));
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((((((rt0.c2) NOT NULL))OR(((vt0.c1)!=(vt0.c1)))))AND(rt0.c0 COLLATE RTRIM))) ORDER BY ((((vt0.c0)LIKE(rt0.c2))) BETWEEN (0Xffffffff8a1f5664) AND (-507580423));
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c1 IN ())) ORDER BY (NOT (x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0 ORDER BY (NOT (x''))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c1 IN ())) ORDER BY (NOT (x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0 ORDER BY (NOT (x''))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c1 IN ())) ORDER BY (NOT (x''))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c1) NOTNULL) WHERE (vt0.c1) ORDER BY ((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c0)<=(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (0.6782039401120938) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c1) NOTNULL) ORDER BY ((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c0)<=(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (0.6782039401120938) AND (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c1) NOTNULL) WHERE (vt0.c1) ORDER BY ((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c0)<=(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (0.6782039401120938) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c1) NOTNULL) ORDER BY ((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c0)<=(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (0.6782039401120938) AND (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c1) NOTNULL) WHERE (vt0.c1) ORDER BY ((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c0)<=(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (0.6782039401120938) AND (vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (0.08805348941302504);
SELECT SUM(count) FROM (SELECT ALL ((0.08805348941302504) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.08805348941302504);
SELECT SUM(count) FROM (SELECT ALL ((0.08805348941302504) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.08805348941302504);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2)<(vt0.c1)))/(x''))) ORDER BY ((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 END)*(((rt0.c0)&(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<(vt0.c1)))/(x''))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 END)*(((rt0.c0)&(rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2)<(vt0.c1)))/(x''))) ORDER BY ((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 END)*(((rt0.c0)&(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<(vt0.c1)))/(x''))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 END)*(((rt0.c0)&(rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2)<(vt0.c1)))/(x''))) ORDER BY ((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 END)*(((rt0.c0)&(rt0.c2)))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)))+(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)))+(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)))+(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)))+(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)))+(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c1)<>(rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)<>(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c1)<>(rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)<>(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c1)<>(rt0.c2)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)>=(vt0.c0)))*(rt0.c0))) ORDER BY ((RTRIM(rt0.c0)) BETWEEN (((((rt0.c1)AND(rt0.c1)))OR(vt0.c1))) AND (((((((((rt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c0)))) ASC, CAST(((vt0.c1)+(vt0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.c0)))*(rt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((RTRIM(rt0.c0)) BETWEEN (((((rt0.c1)AND(rt0.c1)))OR(vt0.c1))) AND (((((((((rt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c0)))) ASC, CAST(((vt0.c1)+(vt0.c0)) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)>=(vt0.c0)))*(rt0.c0))) ORDER BY ((RTRIM(rt0.c0)) BETWEEN (((((rt0.c1)AND(rt0.c1)))OR(vt0.c1))) AND (((((((((rt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c0)))) ASC, CAST(((vt0.c1)+(vt0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.c0)))*(rt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((RTRIM(rt0.c0)) BETWEEN (((((rt0.c1)AND(rt0.c1)))OR(vt0.c1))) AND (((((((((rt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c0)))) ASC, CAST(((vt0.c1)+(vt0.c0)) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)>=(vt0.c0)))*(rt0.c0))) ORDER BY ((RTRIM(rt0.c0)) BETWEEN (((((rt0.c1)AND(rt0.c1)))OR(vt0.c1))) AND (((((((((rt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c0)))) ASC, CAST(((vt0.c1)+(vt0.c0)) AS BLOB)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((~ (vt0.c0))))<((vt0.c0)))) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0)>(vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt0.c0))))<((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0)>(vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((~ (vt0.c0))))<((vt0.c0)))) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0)>(vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt0.c0))))<((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0)>(vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((~ (vt0.c0))))<((vt0.c0)))) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0)>(vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c1)) BETWEEN ((CAST(vt0.c1 AS TEXT))) AND ((rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((CAST(vt0.c1 AS TEXT))) AND ((rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c1)) BETWEEN ((CAST(vt0.c1 AS TEXT))) AND ((rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((CAST(vt0.c1 AS TEXT))) AND ((rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c1)) BETWEEN ((CAST(vt0.c1 AS TEXT))) AND ((rt0.c0))));
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))) ORDER BY (((('1220863988') NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((- (rt0.c0)))) ASC  NULLS FIRST, ((rt0.c1 IN ()) IN ()), (((rt0.c2)) NOT BETWEEN (((+ (rt0.c1)))) AND (('\na\rԍ,卙*)U')));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((('1220863988') NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((- (rt0.c0)))) ASC  NULLS FIRST, ((rt0.c1 IN ()) IN ()), (((rt0.c2)) NOT BETWEEN (((+ (rt0.c1)))) AND (('\na\rԍ,卙*)U'))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))) ORDER BY (((('1220863988') NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((- (rt0.c0)))) ASC  NULLS FIRST, ((rt0.c1 IN ()) IN ()), (((rt0.c2)) NOT BETWEEN (((+ (rt0.c1)))) AND (('\na\rԍ,卙*)U')));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((('1220863988') NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((- (rt0.c0)))) ASC  NULLS FIRST, ((rt0.c1 IN ()) IN ()), (((rt0.c2)) NOT BETWEEN (((+ (rt0.c1)))) AND (('\na\rԍ,卙*)U'))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))) ORDER BY (((('1220863988') NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((- (rt0.c0)))) ASC  NULLS FIRST, ((rt0.c1 IN ()) IN ()), (((rt0.c2)) NOT BETWEEN (((+ (rt0.c1)))) AND (('\na\rԍ,卙*)U')));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c1 WHERE (((((vt0.c0)<(rt0.c2)))||(NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(rt0.c2)))||(NULL))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c1);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c1 WHERE (((((vt0.c0)<(rt0.c2)))||(NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(rt0.c2)))||(NULL))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c1);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c1 WHERE (((((vt0.c0)<(rt0.c2)))||(NULL)));
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))IS NOT(((vt0.c0)OR(vt0.c1))))) ORDER BY HEX(vt0.c1 COLLATE BINARY), ((((vt0.c1)>>(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0))  NULLS FIRST, ((((((vt0.c0) IS TRUE))AND(((vt0.c0)%(vt0.c0)))))AND(CAST(vt0.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))IS NOT(((vt0.c0)OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY HEX(vt0.c1 COLLATE BINARY), ((((vt0.c1)>>(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0))  NULLS FIRST, ((((((vt0.c0) IS TRUE))AND(((vt0.c0)%(vt0.c0)))))AND(CAST(vt0.c0 AS TEXT))) DESC);
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))IS NOT(((vt0.c0)OR(vt0.c1))))) ORDER BY HEX(vt0.c1 COLLATE BINARY), ((((vt0.c1)>>(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0))  NULLS FIRST, ((((((vt0.c0) IS TRUE))AND(((vt0.c0)%(vt0.c0)))))AND(CAST(vt0.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))IS NOT(((vt0.c0)OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY HEX(vt0.c1 COLLATE BINARY), ((((vt0.c1)>>(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0))  NULLS FIRST, ((((((vt0.c0) IS TRUE))AND(((vt0.c0)%(vt0.c0)))))AND(CAST(vt0.c0 AS TEXT))) DESC);
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))IS NOT(((vt0.c0)OR(vt0.c1))))) ORDER BY HEX(vt0.c1 COLLATE BINARY), ((((vt0.c1)>>(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0))  NULLS FIRST, ((((((vt0.c0) IS TRUE))AND(((vt0.c0)%(vt0.c0)))))AND(CAST(vt0.c0 AS TEXT))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)GLOB(rt0.c0)))<<(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)GLOB(rt0.c0)))<<(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)GLOB(rt0.c0)))<<(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)GLOB(rt0.c0)))<<(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)GLOB(rt0.c0)))<<(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((HEX(DISTINCT 2.33216545E8))AND(MIN(rt0.c2, rt0.c1))))OR(((vt0.c0)IS NOT(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((HEX(DISTINCT 2.33216545E8))AND(MIN(rt0.c2, rt0.c1))))OR(((vt0.c0)IS NOT(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((HEX(DISTINCT 2.33216545E8))AND(MIN(rt0.c2, rt0.c1))))OR(((vt0.c0)IS NOT(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((HEX(DISTINCT 2.33216545E8))AND(MIN(rt0.c2, rt0.c1))))OR(((vt0.c0)IS NOT(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((HEX(DISTINCT 2.33216545E8))AND(MIN(rt0.c2, rt0.c1))))OR(((vt0.c0)IS NOT(vt0.c1)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) BETWEEN (x'') AND (rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (x'') AND (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) BETWEEN (x'') AND (rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (x'') AND (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) BETWEEN (x'') AND (rt0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)<<(rt0.c1)))*(json_insert(0.681959486597954, NULL, rt0.c2, rt0.c2, rt0.c1)))) ORDER BY ((x'') BETWEEN (((((rt0.c2)OR('')))OR(rt0.c1))) AND (((rt0.c0)||(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<<(rt0.c1)))*(json_insert(0.681959486597954, NULL, rt0.c2, rt0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((x'') BETWEEN (((((rt0.c2)OR('')))OR(rt0.c1))) AND (((rt0.c0)||(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)<<(rt0.c1)))*(json_insert(0.681959486597954, NULL, rt0.c2, rt0.c2, rt0.c1)))) ORDER BY ((x'') BETWEEN (((((rt0.c2)OR('')))OR(rt0.c1))) AND (((rt0.c0)||(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<<(rt0.c1)))*(json_insert(0.681959486597954, NULL, rt0.c2, rt0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((x'') BETWEEN (((((rt0.c2)OR('')))OR(rt0.c1))) AND (((rt0.c0)||(rt0.c0)))) ASC);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN ((rt0.c1)<(rt0.c0)) THEN rt0.c2 COLLATE BINARY ELSE TYPEOF(rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN ((rt0.c1)<(rt0.c0)) THEN rt0.c2 COLLATE BINARY ELSE TYPEOF(rt0.c0) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN ((rt0.c1)<(rt0.c0)) THEN rt0.c2 COLLATE BINARY ELSE TYPEOF(rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN ((rt0.c1)<(rt0.c0)) THEN rt0.c2 COLLATE BINARY ELSE TYPEOF(rt0.c0) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN ((rt0.c1)<(rt0.c0)) THEN rt0.c2 COLLATE BINARY ELSE TYPEOF(rt0.c0) END);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((CAST('749723420' AS NUMERIC))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (0.5284724251695282)))) WHERE (CAST(((rt0.c2)<<(rt0.c0)) AS REAL)) ORDER BY ((((rt0.c1)IS NOT('z~%')))||(0.1857741396260848)), rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)<<(rt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((CAST('749723420' AS NUMERIC))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (0.5284724251695282)))) ORDER BY ((((rt0.c1)IS NOT('z~%')))||(0.1857741396260848)), rt0.c0 DESC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((CAST('749723420' AS NUMERIC))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (0.5284724251695282)))) WHERE (CAST(((rt0.c2)<<(rt0.c0)) AS REAL)) ORDER BY ((((rt0.c1)IS NOT('z~%')))||(0.1857741396260848)), rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)<<(rt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((CAST('749723420' AS NUMERIC))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (0.5284724251695282)))) ORDER BY ((((rt0.c1)IS NOT('z~%')))||(0.1857741396260848)), rt0.c0 DESC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((CAST('749723420' AS NUMERIC))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (0.5284724251695282)))) WHERE (CAST(((rt0.c2)<<(rt0.c0)) AS REAL)) ORDER BY ((((rt0.c1)IS NOT('z~%')))||(0.1857741396260848)), rt0.c0 DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) NOTNULL)) ORDER BY CAST(vt0.c1 AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) NOTNULL)) ORDER BY CAST(vt0.c1 AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) NOTNULL)) ORDER BY CAST(vt0.c1 AS BLOB) ASC  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS TEXT))-(((vt0.c0)<(x'cbb8')))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))-(((vt0.c0)<(x'cbb8'))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS TEXT))-(((vt0.c0)<(x'cbb8')))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))-(((vt0.c0)<(x'cbb8'))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS TEXT))-(((vt0.c0)<(x'cbb8')))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULL);
SELECT COUNT(*) FROM rt0, vt0 WHERE (IFNULL(LAST_INSERT_ROWID(), ((rt0.c1) IS TRUE))) ORDER BY rt0.c0, (((((NOT (rt0.c2)))AND(CASE rt0.c1  WHEN rt0.c2 THEN vt0.c1 END)))OR(LIKELIHOOD(rt0.c1, 0.44145596808382026))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(LAST_INSERT_ROWID(), ((rt0.c1) IS TRUE))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0, (((((NOT (rt0.c2)))AND(CASE rt0.c1  WHEN rt0.c2 THEN vt0.c1 END)))OR(LIKELIHOOD(rt0.c1, 0.44145596808382026))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (IFNULL(LAST_INSERT_ROWID(), ((rt0.c1) IS TRUE))) ORDER BY rt0.c0, (((((NOT (rt0.c2)))AND(CASE rt0.c1  WHEN rt0.c2 THEN vt0.c1 END)))OR(LIKELIHOOD(rt0.c1, 0.44145596808382026))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(LAST_INSERT_ROWID(), ((rt0.c1) IS TRUE))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0, (((((NOT (rt0.c2)))AND(CASE rt0.c1  WHEN rt0.c2 THEN vt0.c1 END)))OR(LIKELIHOOD(rt0.c1, 0.44145596808382026))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (IFNULL(LAST_INSERT_ROWID(), ((rt0.c1) IS TRUE))) ORDER BY rt0.c0, (((((NOT (rt0.c2)))AND(CASE rt0.c1  WHEN rt0.c2 THEN vt0.c1 END)))OR(LIKELIHOOD(rt0.c1, 0.44145596808382026))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (MIN(vt0.c1, ((vt0.c0)AND(vt0.c1)))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((MIN(vt0.c1, ((vt0.c0)AND(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT * FROM vt0 WHERE (MIN(vt0.c1, ((vt0.c0)AND(vt0.c1)))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((MIN(vt0.c1, ((vt0.c0)AND(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT * FROM vt0 WHERE (MIN(vt0.c1, ((vt0.c0)AND(vt0.c1)))) ORDER BY vt0.c1;
SELECT * FROM vt0, rt0 WHERE ((((~ (vt0.c0)))AND(CAST(vt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))AND(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((~ (vt0.c0)))AND(CAST(vt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))AND(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((~ (vt0.c0)))AND(CAST(vt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN CASE rt0.c2  WHEN x'4bef' THEN rt0.c1 ELSE vt0.c0 END END) ORDER BY ((0.8062604272732304)>(rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c0 IN ()) THEN CASE rt0.c2  WHEN x'4bef' THEN rt0.c1 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((0.8062604272732304)>(rt0.c2)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN CASE rt0.c2  WHEN x'4bef' THEN rt0.c1 ELSE vt0.c0 END END) ORDER BY ((0.8062604272732304)>(rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c0 IN ()) THEN CASE rt0.c2  WHEN x'4bef' THEN rt0.c1 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((0.8062604272732304)>(rt0.c2)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN CASE rt0.c2  WHEN x'4bef' THEN rt0.c1 ELSE vt0.c0 END END) ORDER BY ((0.8062604272732304)>(rt0.c2));
SELECT * FROM vt0 WHERE ((((0Xffffffff8aa6c815)GLOB(NULL)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((0Xffffffff8aa6c815)GLOB(NULL)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((0Xffffffff8aa6c815)GLOB(NULL)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((0Xffffffff8aa6c815)GLOB(NULL)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((0Xffffffff8aa6c815)GLOB(NULL)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL)) NOT BETWEEN (vt0.c1) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL)) NOT BETWEEN (vt0.c1) AND (NULL))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL)) NOT BETWEEN (vt0.c1) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL)) NOT BETWEEN (vt0.c1) AND (NULL))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL)) NOT BETWEEN (vt0.c1) AND (NULL)));
SELECT ALL * FROM rt0 WHERE (HEX(rt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((HEX(rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (HEX(rt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((HEX(rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (HEX(rt0.c0) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS INTEGER))=(((((x'a899')AND(rt0.c0)))AND(0.7511295123860215)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS INTEGER))=(((((x'a899')AND(rt0.c0)))AND(0.7511295123860215))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS INTEGER))=(((((x'a899')AND(rt0.c0)))AND(0.7511295123860215)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS INTEGER))=(((((x'a899')AND(rt0.c0)))AND(0.7511295123860215))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS INTEGER))=(((((x'a899')AND(rt0.c0)))AND(0.7511295123860215)))));
SELECT COUNT(*) FROM vt0 WHERE (json_insert((((vt0.c0))>((vt0.c0))), CAST(vt0.c0 AS NUMERIC), ((vt0.c1)%(vt0.c1)))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert((((vt0.c0))>((vt0.c0))), CAST(vt0.c0 AS NUMERIC), ((vt0.c1)%(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (json_insert((((vt0.c0))>((vt0.c0))), CAST(vt0.c0 AS NUMERIC), ((vt0.c1)%(vt0.c1)))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert((((vt0.c0))>((vt0.c0))), CAST(vt0.c0 AS NUMERIC), ((vt0.c1)%(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (json_insert((((vt0.c0))>((vt0.c0))), CAST(vt0.c0 AS NUMERIC), ((vt0.c1)%(vt0.c1)))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (rt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND (((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND (((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND (((rt0.c1) NOT NULL))));
SELECT * FROM vt0, rt0 WHERE (CAST(CAST('0.14018444220644677' AS INTEGER) AS INTEGER)) ORDER BY 0.8928014539780306  NULLS FIRST, ((vt0.c0) BETWEEN (((x'') IS TRUE)) AND (CAST(rt0.c0 AS TEXT))), vt0.c1 COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST('0.14018444220644677' AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.8928014539780306  NULLS FIRST, ((vt0.c0) BETWEEN (((x'') IS TRUE)) AND (CAST(rt0.c0 AS TEXT))), vt0.c1 COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST(CAST('0.14018444220644677' AS INTEGER) AS INTEGER)) ORDER BY 0.8928014539780306  NULLS FIRST, ((vt0.c0) BETWEEN (((x'') IS TRUE)) AND (CAST(rt0.c0 AS TEXT))), vt0.c1 COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST('0.14018444220644677' AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.8928014539780306  NULLS FIRST, ((vt0.c0) BETWEEN (((x'') IS TRUE)) AND (CAST(rt0.c0 AS TEXT))), vt0.c1 COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST(CAST('0.14018444220644677' AS INTEGER) AS INTEGER)) ORDER BY 0.8928014539780306  NULLS FIRST, ((vt0.c0) BETWEEN (((x'') IS TRUE)) AND (CAST(rt0.c0 AS TEXT))), vt0.c1 COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE ((rt0.c2) IS FALSE)  WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c2) ISNULL) WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE NULL END WHEN ((rt0.c0) NOTNULL) THEN (+ (rt0.c0)) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) IS FALSE)  WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c2) ISNULL) WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE NULL END WHEN ((rt0.c0) NOTNULL) THEN (+ (rt0.c0)) ELSE NULL END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c2) IS FALSE)  WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c2) ISNULL) WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE NULL END WHEN ((rt0.c0) NOTNULL) THEN (+ (rt0.c0)) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) IS FALSE)  WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c2) ISNULL) WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE NULL END WHEN ((rt0.c0) NOTNULL) THEN (+ (rt0.c0)) ELSE NULL END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c2) IS FALSE)  WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c2) ISNULL) WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE NULL END WHEN ((rt0.c0) NOTNULL) THEN (+ (rt0.c0)) ELSE NULL END);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN json_remove(x'', vt0.c1) WHEN 0.5808200573140233 THEN rt0.c0 WHEN (+ (rt0.c0)) THEN ((vt0.c0)LIKE(rt0.c1)) END) ORDER BY (((((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))OR(CAST(vt0.c0 AS BLOB))))AND((((vt0.c1))<((vt0.c1))))))OR(CASE vt0.c1  WHEN vt0.c1 THEN rt0.c0 END)))AND(COALESCE(DISTINCT vt0.c1, rt0.c2)))  NULLS LAST, (((((vt0.c0)-(vt0.c0)), NULL, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))>=((NULL, (- (vt0.c1)), ((vt0.c0) NOTNULL)))), (((((((rt0.c1)AND(vt0.c1)))OR(vt0.c1)), CASE WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c0 END, rt0.c2 COLLATE NOCASE))!=(((- (rt0.c1)), vt0.c1, ((rt0.c0)IS NOT(vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS INTEGER) THEN json_remove(x'', vt0.c1) WHEN 0.5808200573140233 THEN rt0.c0 WHEN (+ (rt0.c0)) THEN ((vt0.c0)LIKE(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))OR(CAST(vt0.c0 AS BLOB))))AND((((vt0.c1))<((vt0.c1))))))OR(CASE vt0.c1  WHEN vt0.c1 THEN rt0.c0 END)))AND(COALESCE(DISTINCT vt0.c1, rt0.c2)))  NULLS LAST, (((((vt0.c0)-(vt0.c0)), NULL, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))>=((NULL, (- (vt0.c1)), ((vt0.c0) NOTNULL)))), (((((((rt0.c1)AND(vt0.c1)))OR(vt0.c1)), CASE WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c0 END, rt0.c2 COLLATE NOCASE))<>(((- (rt0.c1)), vt0.c1, ((rt0.c0)IS NOT(vt0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN json_remove(x'', vt0.c1) WHEN 0.5808200573140233 THEN rt0.c0 WHEN (+ (rt0.c0)) THEN ((vt0.c0)LIKE(rt0.c1)) END) ORDER BY (((((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))OR(CAST(vt0.c0 AS BLOB))))AND((((vt0.c1))<((vt0.c1))))))OR(CASE vt0.c1  WHEN vt0.c1 THEN rt0.c0 END)))AND(COALESCE(DISTINCT vt0.c1, rt0.c2)))  NULLS LAST, (((((vt0.c0)-(vt0.c0)), NULL, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))>=((NULL, (- (vt0.c1)), ((vt0.c0) NOTNULL)))), (((((((rt0.c1)AND(vt0.c1)))OR(vt0.c1)), CASE WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c0 END, rt0.c2 COLLATE NOCASE))!=(((- (rt0.c1)), vt0.c1, ((rt0.c0)IS NOT(vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS INTEGER) THEN json_remove(x'', vt0.c1) WHEN 0.5808200573140233 THEN rt0.c0 WHEN (+ (rt0.c0)) THEN ((vt0.c0)LIKE(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))OR(CAST(vt0.c0 AS BLOB))))AND((((vt0.c1))<((vt0.c1))))))OR(CASE vt0.c1  WHEN vt0.c1 THEN rt0.c0 END)))AND(COALESCE(DISTINCT vt0.c1, rt0.c2)))  NULLS LAST, (((((vt0.c0)-(vt0.c0)), NULL, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))>=((NULL, (- (vt0.c1)), ((vt0.c0) NOTNULL)))), (((((((rt0.c1)AND(vt0.c1)))OR(vt0.c1)), CASE WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c0 END, rt0.c2 COLLATE NOCASE))<>(((- (rt0.c1)), vt0.c1, ((rt0.c0)IS NOT(vt0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((x'0f70')<<(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'0f70')<<(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((x'0f70')<<(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'0f70')<<(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((x'0f70')<<(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))));
SELECT * FROM rt0 WHERE (((((NOT (rt0.c1))))<=((ABS(rt0.c0))))) ORDER BY LOWER(DISTINCT (((rt0.c0, rt0.c2, rt0.c1))=((rt0.c0, rt0.c2, NULL))));
SELECT SUM(count) FROM (SELECT ((((((NOT (rt0.c1))))<=((ABS(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY LOWER(DISTINCT (((rt0.c0, rt0.c2, rt0.c1))==((rt0.c0, rt0.c2, NULL)))));
SELECT * FROM rt0 WHERE (((((NOT (rt0.c1))))<=((ABS(rt0.c0))))) ORDER BY LOWER(DISTINCT (((rt0.c0, rt0.c2, rt0.c1))=((rt0.c0, rt0.c2, NULL))));
SELECT SUM(count) FROM (SELECT ((((((NOT (rt0.c1))))<=((ABS(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY LOWER(DISTINCT (((rt0.c0, rt0.c2, rt0.c1))==((rt0.c0, rt0.c2, NULL)))));
SELECT * FROM rt0 WHERE (((((NOT (rt0.c1))))<=((ABS(rt0.c0))))) ORDER BY LOWER(DISTINCT (((rt0.c0, rt0.c2, rt0.c1))=((rt0.c0, rt0.c2, NULL))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ())) IS FALSE)) ORDER BY ((CAST(0.2550202686588744 AS REAL)) NOT NULL) DESC, (((((((0.18373166760172788)AND(rt0.c2)))AND(NULL)), (rt0.c1 IN ()), CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN x'' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))<((((rt0.c0)IS(rt0.c1)), (rt0.c0 IN (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c2) AND ('1097093977'))))) DESC, (+ (x'')) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(0.2550202686588744 AS REAL)) NOT NULL) DESC, (((((((0.18373166760172788)AND(rt0.c2)))AND(NULL)), (rt0.c1 IN ()), CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN x'' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))<((((rt0.c0)IS(rt0.c1)), (rt0.c0 IN (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c2) AND ('1097093977'))))) DESC, (+ (x'')) DESC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ())) IS FALSE)) ORDER BY ((CAST(0.2550202686588744 AS REAL)) NOT NULL) DESC, (((((((0.18373166760172788)AND(rt0.c2)))AND(NULL)), (rt0.c1 IN ()), CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN x'' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))<((((rt0.c0)IS(rt0.c1)), (rt0.c0 IN (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c2) AND ('1097093977'))))) DESC, (+ (x'')) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(0.2550202686588744 AS REAL)) NOT NULL) DESC, (((((((0.18373166760172788)AND(rt0.c2)))AND(NULL)), (rt0.c1 IN ()), CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN x'' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))<((((rt0.c0)IS(rt0.c1)), (rt0.c0 IN (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c2) AND ('1097093977'))))) DESC, (+ (x'')) DESC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ())) IS FALSE)) ORDER BY ((CAST(0.2550202686588744 AS REAL)) NOT NULL) DESC, (((((((0.18373166760172788)AND(rt0.c2)))AND(NULL)), (rt0.c1 IN ()), CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN x'' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))<((((rt0.c0)IS(rt0.c1)), (rt0.c0 IN (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c2) AND ('1097093977'))))) DESC, (+ (x'')) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)<<(rt0.c0)))IS NOT(((rt0.c0)<<(rt0.c1))))) ORDER BY CASE CASE rt0.c1  WHEN NULL THEN rt0.c0 ELSE rt0.c2 END  WHEN ((x'') NOT BETWEEN ('2079224110') AND (rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END ELSE CAST(rt0.c1 AS INTEGER) END  NULLS FIRST, CASE ((rt0.c2)OR(rt0.c1))  WHEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)) THEN (+ (rt0.c2)) ELSE ((rt0.c1) NOT NULL) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<<(rt0.c0)))IS NOT(((rt0.c0)<<(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE CASE rt0.c1  WHEN NULL THEN rt0.c0 ELSE rt0.c2 END  WHEN ((x'') NOT BETWEEN ('2079224110') AND (rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END ELSE CAST(rt0.c1 AS INTEGER) END  NULLS FIRST, CASE ((rt0.c2)OR(rt0.c1))  WHEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)) THEN (+ (rt0.c2)) ELSE ((rt0.c1) NOT NULL) END ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)<<(rt0.c0)))IS NOT(((rt0.c0)<<(rt0.c1))))) ORDER BY CASE CASE rt0.c1  WHEN NULL THEN rt0.c0 ELSE rt0.c2 END  WHEN ((x'') NOT BETWEEN ('2079224110') AND (rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END ELSE CAST(rt0.c1 AS INTEGER) END  NULLS FIRST, CASE ((rt0.c2)OR(rt0.c1))  WHEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)) THEN (+ (rt0.c2)) ELSE ((rt0.c1) NOT NULL) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<<(rt0.c0)))IS NOT(((rt0.c0)<<(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE CASE rt0.c1  WHEN NULL THEN rt0.c0 ELSE rt0.c2 END  WHEN ((x'') NOT BETWEEN ('2079224110') AND (rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END ELSE CAST(rt0.c1 AS INTEGER) END  NULLS FIRST, CASE ((rt0.c2)OR(rt0.c1))  WHEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)) THEN (+ (rt0.c2)) ELSE ((rt0.c1) NOT NULL) END ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)<<(rt0.c0)))IS NOT(((rt0.c0)<<(rt0.c1))))) ORDER BY CASE CASE rt0.c1  WHEN NULL THEN rt0.c0 ELSE rt0.c2 END  WHEN ((x'') NOT BETWEEN ('2079224110') AND (rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END ELSE CAST(rt0.c1 AS INTEGER) END  NULLS FIRST, CASE ((rt0.c2)OR(rt0.c1))  WHEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)) THEN (+ (rt0.c2)) ELSE ((rt0.c1) NOT NULL) END ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.6503207161904246 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((0.6503207161904246 COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.6503207161904246 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((0.6503207161904246 COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.6503207161904246 COLLATE RTRIM);
SELECT ALL * FROM vt0, rt0 WHERE ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))!=((((vt0.c1) ISNULL))))) ORDER BY (((CASE NULL  WHEN vt0.c0 THEN rt0.c2 WHEN NULL THEN NULL WHEN rt0.c0 THEN rt0.c0 END))<>((UNLIKELY(DISTINCT rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))!=((((vt0.c1) ISNULL))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((CASE NULL  WHEN vt0.c0 THEN rt0.c2 WHEN NULL THEN NULL WHEN rt0.c0 THEN rt0.c0 END))<>((UNLIKELY(DISTINCT rt0.c0)))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))!=((((vt0.c1) ISNULL))))) ORDER BY (((CASE NULL  WHEN vt0.c0 THEN rt0.c2 WHEN NULL THEN NULL WHEN rt0.c0 THEN rt0.c0 END))<>((UNLIKELY(DISTINCT rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))!=((((vt0.c1) ISNULL))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((CASE NULL  WHEN vt0.c0 THEN rt0.c2 WHEN NULL THEN NULL WHEN rt0.c0 THEN rt0.c0 END))<>((UNLIKELY(DISTINCT rt0.c0)))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))!=((((vt0.c1) ISNULL))))) ORDER BY (((CASE NULL  WHEN vt0.c0 THEN rt0.c2 WHEN NULL THEN NULL WHEN rt0.c0 THEN rt0.c0 END))<>((UNLIKELY(DISTINCT rt0.c0)))) DESC;
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((((x'') IS FALSE))AND(LENGTH(vt0.c1))))OR(((rt0.c2)>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'') IS FALSE))AND(LENGTH(vt0.c1))))OR(((rt0.c2)>(rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((((x'') IS FALSE))AND(LENGTH(vt0.c1))))OR(((rt0.c2)>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'') IS FALSE))AND(LENGTH(vt0.c1))))OR(((rt0.c2)>(rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((((x'') IS FALSE))AND(LENGTH(vt0.c1))))OR(((rt0.c2)>(rt0.c2)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0) NOTNULL))IS((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL))IS((~ (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0) NOTNULL))IS((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL))IS((~ (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0) NOTNULL))IS((~ (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c2)) AS REAL)) ORDER BY CAST(CAST('''4d6' AS REAL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN (rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST('''4d6' AS REAL) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c2)) AS REAL)) ORDER BY CAST(CAST('''4d6' AS REAL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN (rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST('''4d6' AS REAL) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c2)) AS REAL)) ORDER BY CAST(CAST('''4d6' AS REAL) AS INTEGER);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) ORDER BY (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((- (vt0.c1)), ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)), ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))) AND ((((vt0.c0)>(vt0.c1)), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END, vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((- (vt0.c1)), ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)), ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))) AND ((((vt0.c0)>(vt0.c1)), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END, vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) ORDER BY (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((- (vt0.c1)), ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)), ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))) AND ((((vt0.c0)>(vt0.c1)), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END, vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((- (vt0.c1)), ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)), ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))) AND ((((vt0.c0)>(vt0.c1)), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END, vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) ORDER BY (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((- (vt0.c1)), ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)), ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))) AND ((((vt0.c0)>(vt0.c1)), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END, vt0.c0)))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CHAR(rt0.c1 COLLATE RTRIM)) ORDER BY NULL, ((((rt0.c0) IS TRUE))>=((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL, ((((rt0.c0) IS TRUE))>=((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CHAR(rt0.c1 COLLATE RTRIM)) ORDER BY NULL, ((((rt0.c0) IS TRUE))>=((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL, ((((rt0.c0) IS TRUE))>=((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CHAR(rt0.c1 COLLATE RTRIM)) ORDER BY NULL, ((((rt0.c0) IS TRUE))>=((vt0.c0 IN ())));
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT NULL)) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL)) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT NULL)) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL)) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT NULL)) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c1)IS NOT(rt0.c2)))>=(rt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)IS NOT(rt0.c2)))>=(rt0.c0)) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c1)IS NOT(rt0.c2)))>=(rt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)IS NOT(rt0.c2)))>=(rt0.c0)) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c1)IS NOT(rt0.c2)))>=(rt0.c0)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 THEN (~ (rt0.c2)) ELSE (~ (rt0.c0)) END) ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))GLOB(((rt0.c2)-(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN (~ (rt0.c2)) ELSE (~ (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))GLOB(((rt0.c2)-(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 THEN (~ (rt0.c2)) ELSE (~ (rt0.c0)) END) ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))GLOB(((rt0.c2)-(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN (~ (rt0.c2)) ELSE (~ (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))GLOB(((rt0.c2)-(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 THEN (~ (rt0.c2)) ELSE (~ (rt0.c0)) END) ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))GLOB(((rt0.c2)-(rt0.c1))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (json_array_length((rt0.c2 IN ()))) ORDER BY (~ (CAST(vt0.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length((rt0.c2 IN ()))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (CAST(vt0.c0 AS REAL))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (json_array_length((rt0.c2 IN ()))) ORDER BY (~ (CAST(vt0.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length((rt0.c2 IN ()))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (CAST(vt0.c0 AS REAL))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (json_array_length((rt0.c2 IN ()))) ORDER BY (~ (CAST(vt0.c0 AS REAL))) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY ((((((vt0.c0) ISNULL))OR(LIKELY(vt0.c0))))OR(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) ISNULL))OR(LIKELY(vt0.c0))))OR(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY ((((((vt0.c0) ISNULL))OR(LIKELY(vt0.c0))))OR(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) ISNULL))OR(LIKELY(vt0.c0))))OR(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY ((((((vt0.c0) ISNULL))OR(LIKELY(vt0.c0))))OR(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((('2b')OR(('' IN ()))))OR(LIKELY(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((('2b')OR(('' IN ()))))OR(LIKELY(DISTINCT rt0.c2)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((('2b')OR(('' IN ()))))OR(LIKELY(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((('2b')OR(('' IN ()))))OR(LIKELY(DISTINCT rt0.c2)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((('2b')OR(('' IN ()))))OR(LIKELY(DISTINCT rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'');
SELECT COUNT(*) FROM rt0 WHERE ((~ (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN 0.060684762023205274 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN 0.060684762023205274 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN 0.060684762023205274 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN 0.060684762023205274 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN 0.060684762023205274 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)<>(vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((CAST('-1534039024' AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST('-1534039024' AS REAL) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((CAST('-1534039024' AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST('-1534039024' AS REAL) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((CAST('-1534039024' AS REAL) IN ()));
SELECT * FROM vt0 WHERE (((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))IS(vt0.c1))) ORDER BY CAST(((vt0.c1)OR(vt0.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))IS(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1)OR(vt0.c1)) AS REAL));
SELECT * FROM vt0 WHERE (((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))IS(vt0.c1))) ORDER BY CAST(((vt0.c1)OR(vt0.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))IS(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1)OR(vt0.c1)) AS REAL));
SELECT * FROM vt0 WHERE (((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))IS(vt0.c1))) ORDER BY CAST(((vt0.c1)OR(vt0.c1)) AS REAL);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULLIF(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(vt0.c1)))AND(rt0.c0)))) ORDER BY ((((((0x229d64a9)AND(rt0.c2)))OR(rt0.c0)))=(((vt0.c1)-(rt0.c0)))) ASC  NULLS FIRST, (~ (IFNULL(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((NULLIF(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(vt0.c1)))AND(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((0X229d64a9)AND(rt0.c2)))OR(rt0.c0)))=(((vt0.c1)-(rt0.c0)))) ASC  NULLS FIRST, (~ (IFNULL(vt0.c0, vt0.c0))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULLIF(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(vt0.c1)))AND(rt0.c0)))) ORDER BY ((((((0x229d64a9)AND(rt0.c2)))OR(rt0.c0)))=(((vt0.c1)-(rt0.c0)))) ASC  NULLS FIRST, (~ (IFNULL(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((NULLIF(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(vt0.c1)))AND(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((0X229d64a9)AND(rt0.c2)))OR(rt0.c0)))=(((vt0.c1)-(rt0.c0)))) ASC  NULLS FIRST, (~ (IFNULL(vt0.c0, vt0.c0))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULLIF(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(vt0.c1)))AND(rt0.c0)))) ORDER BY ((((((0x229d64a9)AND(rt0.c2)))OR(rt0.c0)))=(((vt0.c1)-(rt0.c0)))) ASC  NULLS FIRST, (~ (IFNULL(vt0.c0, vt0.c0)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((NOT (vt0.c0)), ((((rt0.c1)OR(vt0.c1)))AND(rt0.c1)), CAST(rt0.c1 AS NUMERIC)))>=((CAST(vt0.c1 AS NUMERIC), NULL, ((rt0.c0)>=(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt0.c0)), ((((rt0.c1)OR(vt0.c1)))AND(rt0.c1)), CAST(rt0.c1 AS NUMERIC)))>=((CAST(vt0.c1 AS NUMERIC), NULL, ((rt0.c0)>=(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((NOT (vt0.c0)), ((((rt0.c1)OR(vt0.c1)))AND(rt0.c1)), CAST(rt0.c1 AS NUMERIC)))>=((CAST(vt0.c1 AS NUMERIC), NULL, ((rt0.c0)>=(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt0.c0)), ((((rt0.c1)OR(vt0.c1)))AND(rt0.c1)), CAST(rt0.c1 AS NUMERIC)))>=((CAST(vt0.c1 AS NUMERIC), NULL, ((rt0.c0)>=(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((NOT (vt0.c0)), ((((rt0.c1)OR(vt0.c1)))AND(rt0.c1)), CAST(rt0.c1 AS NUMERIC)))>=((CAST(vt0.c1 AS NUMERIC), NULL, ((rt0.c0)>=(rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))>((vt0.c0 IN (vt0.c0, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))>((vt0.c0 IN (vt0.c0, rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))>((vt0.c0 IN (vt0.c0, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))>((vt0.c0 IN (vt0.c0, rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))>((vt0.c0 IN (vt0.c0, rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((- (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (rt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE (CASE LOWER(DISTINCT rt0.c1)  WHEN CAST(x'' AS TEXT) THEN x'807f' END) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE LOWER(DISTINCT rt0.c1)  WHEN CAST(x'' AS TEXT) THEN x'807f' END) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) ISNULL) ASC);
SELECT ALL * FROM rt0 WHERE (CASE LOWER(DISTINCT rt0.c1)  WHEN CAST(x'' AS TEXT) THEN x'807f' END) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE LOWER(DISTINCT rt0.c1)  WHEN CAST(x'' AS TEXT) THEN x'807f' END) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) ISNULL) ASC);
SELECT ALL * FROM rt0 WHERE (CASE LOWER(DISTINCT rt0.c1)  WHEN CAST(x'' AS TEXT) THEN x'807f' END) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) ISNULL) ASC;
SELECT * FROM rt0 WHERE (UPPER(rt0.c0)) ORDER BY COALESCE(DISTINCT rt0.c0 COLLATE BINARY, ((rt0.c0) NOT NULL)) DESC  NULLS LAST, (NOT (((rt0.c0)/(rt0.c0)))) DESC  NULLS FIRST, UPPER(((((rt0.c1)AND('1845821987')))AND(rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(rt0.c0)) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(DISTINCT rt0.c0 COLLATE BINARY, ((rt0.c0) NOT NULL)) DESC  NULLS LAST, (NOT (((rt0.c0)/(rt0.c0)))) DESC  NULLS FIRST, UPPER(((((rt0.c1)AND('1845821987')))AND(rt0.c2))) DESC);
SELECT * FROM rt0 WHERE (UPPER(rt0.c0)) ORDER BY COALESCE(DISTINCT rt0.c0 COLLATE BINARY, ((rt0.c0) NOT NULL)) DESC  NULLS LAST, (NOT (((rt0.c0)/(rt0.c0)))) DESC  NULLS FIRST, UPPER(((((rt0.c1)AND('1845821987')))AND(rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(rt0.c0)) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(DISTINCT rt0.c0 COLLATE BINARY, ((rt0.c0) NOT NULL)) DESC  NULLS LAST, (NOT (((rt0.c0)/(rt0.c0)))) DESC  NULLS FIRST, UPPER(((((rt0.c1)AND('1845821987')))AND(rt0.c2))) DESC);
SELECT * FROM rt0 WHERE (UPPER(rt0.c0)) ORDER BY COALESCE(DISTINCT rt0.c0 COLLATE BINARY, ((rt0.c0) NOT NULL)) DESC  NULLS LAST, (NOT (((rt0.c0)/(rt0.c0)))) DESC  NULLS FIRST, UPPER(((((rt0.c1)AND('1845821987')))AND(rt0.c2))) DESC;
SELECT * FROM vt0 WHERE (((NULL)<<(((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((NULL)<<(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((NULL)<<(((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((NULL)<<(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((NULL)<<(((vt0.c1) IS TRUE))));
SELECT * FROM rt0 WHERE (-155269693) ORDER BY (((CASE WHEN rt0.c1 THEN rt0.c0 END))<=((CAST(rt0.c0 AS REAL)))) ASC, QUOTE(((((7.4972342E8)AND(rt0.c1)))AND(rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-155269693) IS TRUE)  as count FROM rt0 ORDER BY (((CASE WHEN rt0.c1 THEN rt0.c0 END))<=((CAST(rt0.c0 AS REAL)))) ASC, QUOTE(((((7.4972342E8)AND(rt0.c1)))AND(rt0.c1)))  NULLS LAST);
SELECT * FROM rt0 WHERE (-155269693) ORDER BY (((CASE WHEN rt0.c1 THEN rt0.c0 END))<=((CAST(rt0.c0 AS REAL)))) ASC, QUOTE(((((7.4972342E8)AND(rt0.c1)))AND(rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-155269693) IS TRUE)  as count FROM rt0 ORDER BY (((CASE WHEN rt0.c1 THEN rt0.c0 END))<=((CAST(rt0.c0 AS REAL)))) ASC, QUOTE(((((7.4972342E8)AND(rt0.c1)))AND(rt0.c1)))  NULLS LAST);
SELECT * FROM rt0 WHERE (-155269693) ORDER BY (((CASE WHEN rt0.c1 THEN rt0.c0 END))<=((CAST(rt0.c0 AS REAL)))) ASC, QUOTE(((((7.4972342E8)AND(rt0.c1)))AND(rt0.c1)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((+ ('417867421'))))) ORDER BY CAST(((NULL) ISNULL) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((+ ('417867421'))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((NULL) ISNULL) AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((+ ('417867421'))))) ORDER BY CAST(((NULL) ISNULL) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((+ ('417867421'))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((NULL) ISNULL) AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((+ ('417867421'))))) ORDER BY CAST(((NULL) ISNULL) AS INTEGER) DESC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE ((('0.2550202686588744') IS FALSE));
SELECT SUM(count) FROM (SELECT (((('0.2550202686588744') IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((('0.2550202686588744') IS FALSE));
SELECT SUM(count) FROM (SELECT (((('0.2550202686588744') IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((('0.2550202686588744') IS FALSE));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c1 COLLATE BINARY) BETWEEN (((rt0.c1) NOTNULL)) AND (rt0.c2)) WHERE (((((rt0.c0)||(rt0.c0)))<>('-568339857')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)||(rt0.c0)))!=('-568339857'))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c1 COLLATE BINARY) BETWEEN (((rt0.c1) NOTNULL)) AND (rt0.c2)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c1 COLLATE BINARY) BETWEEN (((rt0.c1) NOTNULL)) AND (rt0.c2)) WHERE (((((rt0.c0)||(rt0.c0)))<>('-568339857')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)||(rt0.c0)))!=('-568339857'))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c1 COLLATE BINARY) BETWEEN (((rt0.c1) NOTNULL)) AND (rt0.c2)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((vt0.c1 COLLATE BINARY) BETWEEN (((rt0.c1) NOTNULL)) AND (rt0.c2)) WHERE (((((rt0.c0)||(rt0.c0)))<>('-568339857')));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('-1534039024')AND(NULL)))AND(0.9298026827124968))) ORDER BY (((vt0.c0)OR(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((('-1534039024')AND(NULL)))AND(0.9298026827124968))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)OR(vt0.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('-1534039024')AND(NULL)))AND(0.9298026827124968))) ORDER BY (((vt0.c0)OR(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((('-1534039024')AND(NULL)))AND(0.9298026827124968))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)OR(vt0.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('-1534039024')AND(NULL)))AND(0.9298026827124968))) ORDER BY (((vt0.c0)OR(vt0.c0)) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)OR(x'd270')))AND((vt0.c1 IN ())))) ORDER BY ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR(vt0.c1)))OR(rt0.c0))) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))OR(0.3387994249870615))) AND (((vt0.c1)>(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)OR(x'd270')))AND((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR(vt0.c1)))OR(rt0.c0))) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))OR(0.3387994249870615))) AND (((vt0.c1)>(rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)OR(x'd270')))AND((vt0.c1 IN ())))) ORDER BY ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR(vt0.c1)))OR(rt0.c0))) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))OR(0.3387994249870615))) AND (((vt0.c1)>(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)OR(x'd270')))AND((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR(vt0.c1)))OR(rt0.c0))) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))OR(0.3387994249870615))) AND (((vt0.c1)>(rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)OR(x'd270')))AND((vt0.c1 IN ())))) ORDER BY ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR(vt0.c1)))OR(rt0.c0))) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))OR(0.3387994249870615))) AND (((vt0.c1)>(rt0.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((- (rt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE (NULL) ORDER BY CASE ((rt0.c2) IS FALSE)  WHEN CAST(vt0.c0 AS BLOB) THEN ((x'')<(vt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((- (rt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) ORDER BY CASE ((rt0.c2) IS FALSE)  WHEN CAST(vt0.c0 AS BLOB) THEN ((x'')<(vt0.c1)) END);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((- (rt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE (NULL) ORDER BY CASE ((rt0.c2) IS FALSE)  WHEN CAST(vt0.c0 AS BLOB) THEN ((x'')<(vt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((- (rt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) ORDER BY CASE ((rt0.c2) IS FALSE)  WHEN CAST(vt0.c0 AS BLOB) THEN ((x'')<(vt0.c1)) END);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((- (rt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE (NULL) ORDER BY CASE ((rt0.c2) IS FALSE)  WHEN CAST(vt0.c0 AS BLOB) THEN ((x'')<(vt0.c1)) END;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON vt0.c1 WHERE ((~ (((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON vt0.c1);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON vt0.c1 WHERE ((~ (((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON vt0.c1);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON vt0.c1 WHERE ((~ (((rt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS BLOB) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (UNLIKELY(((vt0.c0)>=(rt0.c2)))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt0.c0)>=(rt0.c2)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (UNLIKELY(((vt0.c0)>=(rt0.c2)))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt0.c0)>=(rt0.c2)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (UNLIKELY(((vt0.c0)>=(rt0.c2)))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c1)))<(((((rt0.c0)OR('2062625960')))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c1)))<(((((rt0.c0)OR('2062625960')))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c1)))<(((((rt0.c0)OR('2062625960')))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c1)))<(((((rt0.c0)OR('2062625960')))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c1)))<(((((rt0.c0)OR('2062625960')))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN CHANGES() END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN CHANGES() END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN CHANGES() END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN CHANGES() END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN CHANGES() END);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS TEXT) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS TEXT) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS TEXT) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS TEXT) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS TEXT) AS REAL));
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c2) ISNULL) THEN x'' WHEN (+ (rt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) WHEN ((rt0.c2)GLOB(vt0.c1)) THEN 0xf89902e COLLATE BINARY END) ORDER BY x'5ec5';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) ISNULL) THEN x'' WHEN (+ (rt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) WHEN ((rt0.c2)GLOB(vt0.c1)) THEN 0xf89902e COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'5ec5');
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c2) ISNULL) THEN x'' WHEN (+ (rt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) WHEN ((rt0.c2)GLOB(vt0.c1)) THEN 0xf89902e COLLATE BINARY END) ORDER BY x'5ec5';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) ISNULL) THEN x'' WHEN (+ (rt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) WHEN ((rt0.c2)GLOB(vt0.c1)) THEN 0xf89902e COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'5ec5');
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c2) ISNULL) THEN x'' WHEN (+ (rt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) WHEN ((rt0.c2)GLOB(vt0.c1)) THEN 0xf89902e COLLATE BINARY END) ORDER BY x'5ec5';
SELECT * FROM rt0, vt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 ELSE vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 ELSE vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 ELSE vt0.c0 END) ISNULL));
SELECT * FROM rt0, vt0 WHERE (vt0.c0) ORDER BY CAST(rt0.c2 AS TEXT) DESC, ((((CAST(vt0.c1 AS NUMERIC))AND(CAST(vt0.c0 AS INTEGER))))OR((rt0.c0 IN ()))) DESC  NULLS LAST, ((((vt0.c1)>=(rt0.c0))) BETWEEN (((((rt0.c2)OR(0.8348665511005714)))AND(0.17824886840744292))) AND (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(rt0.c2 AS TEXT) DESC, ((((CAST(vt0.c1 AS NUMERIC))AND(CAST(vt0.c0 AS INTEGER))))OR((rt0.c0 IN ()))) DESC  NULLS LAST, ((((vt0.c1)>=(rt0.c0))) BETWEEN (((((rt0.c2)OR(0.8348665511005714)))AND(0.17824886840744292))) AND (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (vt0.c0) ORDER BY CAST(rt0.c2 AS TEXT) DESC, ((((CAST(vt0.c1 AS NUMERIC))AND(CAST(vt0.c0 AS INTEGER))))OR((rt0.c0 IN ()))) DESC  NULLS LAST, ((((vt0.c1)>=(rt0.c0))) BETWEEN (((((rt0.c2)OR(0.8348665511005714)))AND(0.17824886840744292))) AND (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(rt0.c2 AS TEXT) DESC, ((((CAST(vt0.c1 AS NUMERIC))AND(CAST(vt0.c0 AS INTEGER))))OR((rt0.c0 IN ()))) DESC  NULLS LAST, ((((vt0.c1)>=(rt0.c0))) BETWEEN (((((rt0.c2)OR(0.8348665511005714)))AND(0.17824886840744292))) AND (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (vt0.c0) ORDER BY CAST(rt0.c2 AS TEXT) DESC, ((((CAST(vt0.c1 AS NUMERIC))AND(CAST(vt0.c0 AS INTEGER))))OR((rt0.c0 IN ()))) DESC  NULLS LAST, ((((vt0.c1)>=(rt0.c0))) BETWEEN (((((rt0.c2)OR(0.8348665511005714)))AND(0.17824886840744292))) AND (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) ASC  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (vt0.c0) ORDER BY CAST(CASE WHEN rt0.c1 THEN vt0.c1 END AS TEXT), ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN '2015645386' WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(CASE WHEN rt0.c1 THEN vt0.c1 END AS TEXT), ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN '2015645386' WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END) ISNULL) DESC);
SELECT * FROM rt0, vt0 WHERE (vt0.c0) ORDER BY CAST(CASE WHEN rt0.c1 THEN vt0.c1 END AS TEXT), ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN '2015645386' WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(CASE WHEN rt0.c1 THEN vt0.c1 END AS TEXT), ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN '2015645386' WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END) ISNULL) DESC);
SELECT * FROM rt0, vt0 WHERE (vt0.c0) ORDER BY CAST(CASE WHEN rt0.c1 THEN vt0.c1 END AS TEXT), ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN '2015645386' WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END) ISNULL) DESC;
SELECT ALL * FROM rt0 WHERE (((rt0.c1)&((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)&((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)&((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)&((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)&((rt0.c0 IN ()))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((((('y{')OR((((vt0.c0, rt0.c2, rt0.c2))<=((rt0.c0, vt0.c1, rt0.c1))))))AND(((rt0.c0)*('2015645386')))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)))))OR(((((rt0.c0)OR(rt0.c2)))AND(vt0.c0))))) ORDER BY (((((0.25336854683135923 IN ()))OR((0.1314156382604551 IN ()))))AND(((rt0.c2)-(rt0.c2)))), ((((x'')IS(rt0.c1))) NOT BETWEEN (rt0.c2) AND (((rt0.c1)IS(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((((((('y{')OR((((vt0.c0, rt0.c2, rt0.c2))<=((rt0.c0, vt0.c1, rt0.c1))))))AND(((rt0.c0)*('2015645386')))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)))))OR(((((rt0.c0)OR(rt0.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((0.25336854683135923 IN ()))OR((0.1314156382604551 IN ()))))AND(((rt0.c2)-(rt0.c2)))), ((((x'')IS(rt0.c1))) NOT BETWEEN (rt0.c2) AND (((rt0.c1)IS(rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((((('y{')OR((((vt0.c0, rt0.c2, rt0.c2))<=((rt0.c0, vt0.c1, rt0.c1))))))AND(((rt0.c0)*('2015645386')))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)))))OR(((((rt0.c0)OR(rt0.c2)))AND(vt0.c0))))) ORDER BY (((((0.25336854683135923 IN ()))OR((0.1314156382604551 IN ()))))AND(((rt0.c2)-(rt0.c2)))), ((((x'')IS(rt0.c1))) NOT BETWEEN (rt0.c2) AND (((rt0.c1)IS(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((((((('y{')OR((((vt0.c0, rt0.c2, rt0.c2))<=((rt0.c0, vt0.c1, rt0.c1))))))AND(((rt0.c0)*('2015645386')))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)))))OR(((((rt0.c0)OR(rt0.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((0.25336854683135923 IN ()))OR((0.1314156382604551 IN ()))))AND(((rt0.c2)-(rt0.c2)))), ((((x'')IS(rt0.c1))) NOT BETWEEN (rt0.c2) AND (((rt0.c1)IS(rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((((('y{')OR((((vt0.c0, rt0.c2, rt0.c2))<=((rt0.c0, vt0.c1, rt0.c1))))))AND(((rt0.c0)*('2015645386')))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)))))OR(((((rt0.c0)OR(rt0.c2)))AND(vt0.c0))))) ORDER BY (((((0.25336854683135923 IN ()))OR((0.1314156382604551 IN ()))))AND(((rt0.c2)-(rt0.c2)))), ((((x'')IS(rt0.c1))) NOT BETWEEN (rt0.c2) AND (((rt0.c1)IS(rt0.c1))));
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1) BETWEEN (-660952324) AND (vt0.c1)) IN (((rt0.c2)AND(rt0.c0))))) ORDER BY CASE WHEN (((rt0.c1))<>((rt0.c2))) THEN vt0.c0 COLLATE BINARY END DESC  NULLS FIRST, (NOT ((rt0.c0 IN ()))) ASC, (+ (rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) BETWEEN (-660952324) AND (vt0.c1)) IN (((rt0.c2)AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN (((rt0.c1))<>((rt0.c2))) THEN vt0.c0 COLLATE BINARY END DESC  NULLS FIRST, (NOT ((rt0.c0 IN ()))) ASC, (+ (rt0.c0))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1) BETWEEN (-660952324) AND (vt0.c1)) IN (((rt0.c2)AND(rt0.c0))))) ORDER BY CASE WHEN (((rt0.c1))<>((rt0.c2))) THEN vt0.c0 COLLATE BINARY END DESC  NULLS FIRST, (NOT ((rt0.c0 IN ()))) ASC, (+ (rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) BETWEEN (-660952324) AND (vt0.c1)) IN (((rt0.c2)AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN (((rt0.c1))<>((rt0.c2))) THEN vt0.c0 COLLATE BINARY END DESC  NULLS FIRST, (NOT ((rt0.c0 IN ()))) ASC, (+ (rt0.c0))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1) BETWEEN (-660952324) AND (vt0.c1)) IN (((rt0.c2)AND(rt0.c0))))) ORDER BY CASE WHEN (((rt0.c1))<>((rt0.c2))) THEN vt0.c0 COLLATE BINARY END DESC  NULLS FIRST, (NOT ((rt0.c0 IN ()))) ASC, (+ (rt0.c0))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON TYPEOF(DISTINCT CASE vt0.c0  WHEN NULL THEN rt0.c1 ELSE x'' END) WHERE (CASE (((rt0.c0))<=((vt0.c1)))  WHEN vt0.c1 COLLATE RTRIM THEN ((rt0.c0)IS(rt0.c1)) END) ORDER BY (((((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))>((((vt0.c1) IS FALSE)))) ASC, (('-1798995518') IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c0))<=((vt0.c1)))  WHEN vt0.c1 COLLATE RTRIM THEN ((rt0.c0)IS(rt0.c1)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON TYPEOF(DISTINCT CASE vt0.c0  WHEN NULL THEN rt0.c1 ELSE x'' END) ORDER BY (((((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))>((((vt0.c1) IS FALSE)))) ASC, (('-1798995518') IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON TYPEOF(DISTINCT CASE vt0.c0  WHEN NULL THEN rt0.c1 ELSE x'' END) WHERE (CASE (((rt0.c0))<=((vt0.c1)))  WHEN vt0.c1 COLLATE RTRIM THEN ((rt0.c0)IS(rt0.c1)) END) ORDER BY (((((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))>((((vt0.c1) IS FALSE)))) ASC, (('-1798995518') IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c0))<=((vt0.c1)))  WHEN vt0.c1 COLLATE RTRIM THEN ((rt0.c0)IS(rt0.c1)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON TYPEOF(DISTINCT CASE vt0.c0  WHEN NULL THEN rt0.c1 ELSE x'' END) ORDER BY (((((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))>((((vt0.c1) IS FALSE)))) ASC, (('-1798995518') IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON TYPEOF(DISTINCT CASE vt0.c0  WHEN NULL THEN rt0.c1 ELSE x'' END) WHERE (CASE (((rt0.c0))<=((vt0.c1)))  WHEN vt0.c1 COLLATE RTRIM THEN ((rt0.c0)IS(rt0.c1)) END) ORDER BY (((((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))>((((vt0.c1) IS FALSE)))) ASC, (('-1798995518') IS TRUE) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) NOTNULL));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('2b');
SELECT SUM(count) FROM (SELECT (('2b') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('2b');
SELECT SUM(count) FROM (SELECT (('2b') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('2b');
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) IS FALSE)) ORDER BY (~ (vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (vt0.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) IS FALSE)) ORDER BY (~ (vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (vt0.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) IS FALSE)) ORDER BY (~ (vt0.c0 COLLATE BINARY)) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST('' AS NUMERIC)) ORDER BY ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))<=('0.1857741396260848'))  NULLS LAST, ((('X,PD' IN ()))<(0.9354056989021186))  NULLS LAST, (((((vt0.c0, vt0.c1, vt0.c0))==((vt0.c0, vt0.c0, vt0.c1)))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((CAST('' AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))<=('0.1857741396260848'))  NULLS LAST, ((('X,PD' IN ()))<(0.9354056989021186))  NULLS LAST, (((((vt0.c0, vt0.c1, vt0.c0))==((vt0.c0, vt0.c0, vt0.c1)))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST('' AS NUMERIC)) ORDER BY ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))<=('0.1857741396260848'))  NULLS LAST, ((('X,PD' IN ()))<(0.9354056989021186))  NULLS LAST, (((((vt0.c0, vt0.c1, vt0.c0))==((vt0.c0, vt0.c0, vt0.c1)))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((CAST('' AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))<=('0.1857741396260848'))  NULLS LAST, ((('X,PD' IN ()))<(0.9354056989021186))  NULLS LAST, (((((vt0.c0, vt0.c1, vt0.c0))==((vt0.c0, vt0.c0, vt0.c1)))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST('' AS NUMERIC)) ORDER BY ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))<=('0.1857741396260848'))  NULLS LAST, ((('X,PD' IN ()))<(0.9354056989021186))  NULLS LAST, (((((vt0.c0, vt0.c1, vt0.c0))==((vt0.c0, vt0.c0, vt0.c1)))) IS TRUE) DESC;
SELECT * FROM vt0, rt0 WHERE (CASE ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0))  WHEN CASE rt0.c0  WHEN '0.15102291663783451' THEN rt0.c1 ELSE vt0.c0 END THEN ((vt0.c0)+(vt0.c1)) WHEN (((vt0.c1))>=((rt0.c0))) THEN CAST(rt0.c0 AS REAL) WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN (~ (rt0.c2)) WHEN '87568412' THEN '' WHEN vt0.c1 THEN rt0.c1 ELSE ((((vt0.c0)OR(vt0.c1)))OR(rt0.c1)) END) ORDER BY ((((((((((vt0.c1)OR(vt0.c0)))OR(((rt0.c2)>(vt0.c1)))))AND(rt0.c1)))AND(LIKE(rt0.c1, rt0.c2, '7'))))AND(CASE WHEN vt0.c1 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN 7.16585589E8 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0))  WHEN CASE rt0.c0  WHEN '0.15102291663783451' THEN rt0.c1 ELSE vt0.c0 END THEN ((vt0.c0)+(vt0.c1)) WHEN (((vt0.c1))>=((rt0.c0))) THEN CAST(rt0.c0 AS REAL) WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN (~ (rt0.c2)) WHEN '87568412' THEN '' WHEN vt0.c1 THEN rt0.c1 ELSE ((((vt0.c0)OR(vt0.c1)))OR(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((vt0.c1)OR(vt0.c0)))OR(((rt0.c2)>(vt0.c1)))))AND(rt0.c1)))AND(LIKE(rt0.c1, rt0.c2, '7'))))AND(CASE WHEN vt0.c1 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN 7.16585589E8 ELSE rt0.c1 END)));
SELECT * FROM vt0, rt0 WHERE (CASE ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0))  WHEN CASE rt0.c0  WHEN '0.15102291663783451' THEN rt0.c1 ELSE vt0.c0 END THEN ((vt0.c0)+(vt0.c1)) WHEN (((vt0.c1))>=((rt0.c0))) THEN CAST(rt0.c0 AS REAL) WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN (~ (rt0.c2)) WHEN '87568412' THEN '' WHEN vt0.c1 THEN rt0.c1 ELSE ((((vt0.c0)OR(vt0.c1)))OR(rt0.c1)) END) ORDER BY ((((((((((vt0.c1)OR(vt0.c0)))OR(((rt0.c2)>(vt0.c1)))))AND(rt0.c1)))AND(LIKE(rt0.c1, rt0.c2, '7'))))AND(CASE WHEN vt0.c1 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN 7.16585589E8 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0))  WHEN CASE rt0.c0  WHEN '0.15102291663783451' THEN rt0.c1 ELSE vt0.c0 END THEN ((vt0.c0)+(vt0.c1)) WHEN (((vt0.c1))>=((rt0.c0))) THEN CAST(rt0.c0 AS REAL) WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN (~ (rt0.c2)) WHEN '87568412' THEN '' WHEN vt0.c1 THEN rt0.c1 ELSE ((((vt0.c0)OR(vt0.c1)))OR(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((vt0.c1)OR(vt0.c0)))OR(((rt0.c2)>(vt0.c1)))))AND(rt0.c1)))AND(LIKE(rt0.c1, rt0.c2, '7'))))AND(CASE WHEN vt0.c1 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN 7.16585589E8 ELSE rt0.c1 END)));
SELECT * FROM vt0, rt0 WHERE (CASE ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0))  WHEN CASE rt0.c0  WHEN '0.15102291663783451' THEN rt0.c1 ELSE vt0.c0 END THEN ((vt0.c0)+(vt0.c1)) WHEN (((vt0.c1))>=((rt0.c0))) THEN CAST(rt0.c0 AS REAL) WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN (~ (rt0.c2)) WHEN '87568412' THEN '' WHEN vt0.c1 THEN rt0.c1 ELSE ((((vt0.c0)OR(vt0.c1)))OR(rt0.c1)) END) ORDER BY ((((((((((vt0.c1)OR(vt0.c0)))OR(((rt0.c2)>(vt0.c1)))))AND(rt0.c1)))AND(LIKE(rt0.c1, rt0.c2, '7'))))AND(CASE WHEN vt0.c1 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN 7.16585589E8 ELSE rt0.c1 END));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((LIKELIHOOD(DISTINCT vt0.c0, 0.07199436178055674)) NOT NULL) WHERE (((((rt0.c0)|(x'')))<>(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)|(x'')))!=(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((LIKELIHOOD(DISTINCT vt0.c0, 0.07199436178055674)) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((LIKELIHOOD(DISTINCT vt0.c0, 0.07199436178055674)) NOT NULL) WHERE (((((rt0.c0)|(x'')))<>(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)|(x'')))!=(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((LIKELIHOOD(DISTINCT vt0.c0, 0.07199436178055674)) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((LIKELIHOOD(DISTINCT vt0.c0, 0.07199436178055674)) NOT NULL) WHERE (((((rt0.c0)|(x'')))<>(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT * FROM rt0, vt0 WHERE (((((CAST(vt0.c1 AS NUMERIC))OR(((((rt0.c1)OR(vt0.c1)))OR(vt0.c0)))))OR(((((((((rt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c1 AS NUMERIC))OR(((((rt0.c1)OR(vt0.c1)))OR(vt0.c0)))))OR(((((((((rt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((CAST(vt0.c1 AS NUMERIC))OR(((((rt0.c1)OR(vt0.c1)))OR(vt0.c0)))))OR(((((((((rt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c1 AS NUMERIC))OR(((((rt0.c1)OR(vt0.c1)))OR(vt0.c0)))))OR(((((((((rt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((CAST(vt0.c1 AS NUMERIC))OR(((((rt0.c1)OR(vt0.c1)))OR(vt0.c0)))))OR(((((((((rt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(rt0.c2)))OR(rt0.c2)))));
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE ((((((((vt0.c0)AND(0xffe3cb5)))OR(rt0.c2))))>=((((vt0.c1) NOTNULL))))) ORDER BY (- (((vt0.c1) ISNULL))) DESC  NULLS LAST, (('1894370087') NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c0))) AND (((vt0.c1)>(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)AND(0Xffe3cb5)))OR(rt0.c2))))>=((((vt0.c1) NOTNULL))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (((vt0.c1) ISNULL))) DESC  NULLS LAST, (('1894370087') NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c0))) AND (((vt0.c1)>(rt0.c2))))  NULLS FIRST);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE ((((((((vt0.c0)AND(0xffe3cb5)))OR(rt0.c2))))>=((((vt0.c1) NOTNULL))))) ORDER BY (- (((vt0.c1) ISNULL))) DESC  NULLS LAST, (('1894370087') NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c0))) AND (((vt0.c1)>(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)AND(0Xffe3cb5)))OR(rt0.c2))))>=((((vt0.c1) NOTNULL))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (((vt0.c1) ISNULL))) DESC  NULLS LAST, (('1894370087') NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c0))) AND (((vt0.c1)>(rt0.c2))))  NULLS FIRST);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE ((((((((vt0.c0)AND(0xffe3cb5)))OR(rt0.c2))))>=((((vt0.c1) NOTNULL))))) ORDER BY (- (((vt0.c1) ISNULL))) DESC  NULLS LAST, (('1894370087') NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c0))) AND (((vt0.c1)>(rt0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c2 COLLATE BINARY IN ())) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE) DESC  NULLS FIRST, rt0.c1 COLLATE NOCASE COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE) DESC  NULLS FIRST, rt0.c1 COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c2 COLLATE BINARY IN ())) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE) DESC  NULLS FIRST, rt0.c1 COLLATE NOCASE COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE) DESC  NULLS FIRST, rt0.c1 COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c2 COLLATE BINARY IN ())) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE) DESC  NULLS FIRST, rt0.c1 COLLATE NOCASE COLLATE NOCASE;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON NULL WHERE ((+ (((rt0.c1)AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1)AND(vt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON NULL);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON NULL WHERE ((+ (((rt0.c1)AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1)AND(vt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON NULL);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON NULL WHERE ((+ (((rt0.c1)AND(vt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN (rt0.c0 IN (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 COLLATE RTRIM THEN (rt0.c0 IN (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN (rt0.c0 IN (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 COLLATE RTRIM THEN (rt0.c0 IN (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN (rt0.c0 IN (rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c0, vt0.c1)) NOT BETWEEN ((((rt0.c1)==(rt0.c2)), (rt0.c2 IN ()), NULL)) AND (((~ (vt0.c1)), rt0.c1 COLLATE RTRIM, rt0.c2)))) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))) AND ((((rt0.c2, rt0.c2, 0.681959486597954)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c0, vt0.c1)) NOT BETWEEN ((((rt0.c1)==(rt0.c2)), (rt0.c2 IN ()), NULL)) AND (((~ (vt0.c1)), rt0.c1 COLLATE RTRIM, rt0.c2)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))) AND ((((rt0.c2, rt0.c2, 0.681959486597954)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c0, vt0.c1)) NOT BETWEEN ((((rt0.c1)==(rt0.c2)), (rt0.c2 IN ()), NULL)) AND (((~ (vt0.c1)), rt0.c1 COLLATE RTRIM, rt0.c2)))) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))) AND ((((rt0.c2, rt0.c2, 0.681959486597954)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c0, vt0.c1)) NOT BETWEEN ((((rt0.c1)==(rt0.c2)), (rt0.c2 IN ()), NULL)) AND (((~ (vt0.c1)), rt0.c1 COLLATE RTRIM, rt0.c2)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))) AND ((((rt0.c2, rt0.c2, 0.681959486597954)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c0, vt0.c1)) NOT BETWEEN ((((rt0.c1)==(rt0.c2)), (rt0.c2 IN ()), NULL)) AND (((~ (vt0.c1)), rt0.c1 COLLATE RTRIM, rt0.c2)))) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))) AND ((((rt0.c2, rt0.c2, 0.681959486597954)) NOT BETWEEN ((vt0.c0, rt0.c1, rt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)))AND(x'4b4c'))) ORDER BY (((rt0.c0 IN ()))&(((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)))AND(x'4b4c'))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))&(((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)))AND(x'4b4c'))) ORDER BY (((rt0.c0 IN ()))&(((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)))AND(x'4b4c'))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))&(((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)))AND(x'4b4c'))) ORDER BY (((rt0.c0 IN ()))&(((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))) ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (NULL))) ORDER BY rt0.c0 DESC  NULLS LAST, ((LOWER(DISTINCT vt0.c0))OR(x'')) ASC, rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0 DESC  NULLS LAST, ((LOWER(DISTINCT vt0.c0))OR(x'')) ASC, rt0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (NULL))) ORDER BY rt0.c0 DESC  NULLS LAST, ((LOWER(DISTINCT vt0.c0))OR(x'')) ASC, rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0 DESC  NULLS LAST, ((LOWER(DISTINCT vt0.c0))OR(x'')) ASC, rt0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (NULL))) ORDER BY rt0.c0 DESC  NULLS LAST, ((LOWER(DISTINCT vt0.c0))OR(x'')) ASC, rt0.c0 ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ('2XD') ORDER BY ((((rt0.c1)IS NOT(rt0.c0)))>(COALESCE(rt0.c2, rt0.c1, rt0.c1, rt0.c1)))  NULLS LAST, HEX(DISTINCT x'f3cc'), rt0.c1 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('2XD') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)IS NOT(rt0.c0)))>(COALESCE(rt0.c2, rt0.c1, rt0.c1, rt0.c1)))  NULLS LAST, HEX(DISTINCT x'f3cc'), rt0.c1 COLLATE BINARY  NULLS LAST);
SELECT * FROM rt0 WHERE ('2XD') ORDER BY ((((rt0.c1)IS NOT(rt0.c0)))>(COALESCE(rt0.c2, rt0.c1, rt0.c1, rt0.c1)))  NULLS LAST, HEX(DISTINCT x'f3cc'), rt0.c1 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('2XD') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)IS NOT(rt0.c0)))>(COALESCE(rt0.c2, rt0.c1, rt0.c1, rt0.c1)))  NULLS LAST, HEX(DISTINCT x'f3cc'), rt0.c1 COLLATE BINARY  NULLS LAST);
SELECT * FROM rt0 WHERE ('2XD') ORDER BY ((((rt0.c1)IS NOT(rt0.c0)))>(COALESCE(rt0.c2, rt0.c1, rt0.c1, rt0.c1)))  NULLS LAST, HEX(DISTINCT x'f3cc'), rt0.c1 COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c1)) COLLATE BINARY);
SELECT * FROM vt0 WHERE (((('iNdiMz&')) NOT BETWEEN ((((vt0.c1) IS FALSE))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ((((('iNdiMz&')) NOT BETWEEN ((((vt0.c1) IS FALSE))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((('iNdiMz&')) NOT BETWEEN ((((vt0.c1) IS FALSE))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ((((('iNdiMz&')) NOT BETWEEN ((((vt0.c1) IS FALSE))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((('iNdiMz&')) NOT BETWEEN ((((vt0.c1) IS FALSE))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON x'' COLLATE BINARY WHERE (CASE highlight(vt0.c0, rt0.c2, vt0.c1, rt0.c1)  WHEN ((((vt0.c0)AND(rt0.c1)))AND(vt0.c1)) THEN vt0.c0 COLLATE NOCASE WHEN (vt0.c0 IN (rt0.c1, vt0.c1)) THEN rt0.c0 COLLATE RTRIM WHEN ((vt0.c1)>>(rt0.c2)) THEN ((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)) ELSE (((vt0.c1))=((vt0.c1))) END) ORDER BY CASE CASE WHEN rt0.c0 THEN rt0.c0 END  WHEN load_extension(vt0.c0, vt0.c0) THEN (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((NULL))) ELSE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE highlight(vt0.c0, rt0.c2, vt0.c1, rt0.c1)  WHEN ((((vt0.c0)AND(rt0.c1)))AND(vt0.c1)) THEN vt0.c0 COLLATE NOCASE WHEN (vt0.c0 IN (rt0.c1, vt0.c1)) THEN rt0.c0 COLLATE RTRIM WHEN ((vt0.c1)>>(rt0.c2)) THEN ((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)) ELSE (((vt0.c1))=((vt0.c1))) END) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON x'' COLLATE BINARY ORDER BY CASE CASE WHEN rt0.c0 THEN rt0.c0 END  WHEN load_extension(vt0.c0, vt0.c0) THEN (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((NULL))) ELSE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) END DESC);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON x'' COLLATE BINARY WHERE (CASE highlight(vt0.c0, rt0.c2, vt0.c1, rt0.c1)  WHEN ((((vt0.c0)AND(rt0.c1)))AND(vt0.c1)) THEN vt0.c0 COLLATE NOCASE WHEN (vt0.c0 IN (rt0.c1, vt0.c1)) THEN rt0.c0 COLLATE RTRIM WHEN ((vt0.c1)>>(rt0.c2)) THEN ((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)) ELSE (((vt0.c1))=((vt0.c1))) END) ORDER BY CASE CASE WHEN rt0.c0 THEN rt0.c0 END  WHEN load_extension(vt0.c0, vt0.c0) THEN (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((NULL))) ELSE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE highlight(vt0.c0, rt0.c2, vt0.c1, rt0.c1)  WHEN ((((vt0.c0)AND(rt0.c1)))AND(vt0.c1)) THEN vt0.c0 COLLATE NOCASE WHEN (vt0.c0 IN (rt0.c1, vt0.c1)) THEN rt0.c0 COLLATE RTRIM WHEN ((vt0.c1)>>(rt0.c2)) THEN ((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)) ELSE (((vt0.c1))=((vt0.c1))) END) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON x'' COLLATE BINARY ORDER BY CASE CASE WHEN rt0.c0 THEN rt0.c0 END  WHEN load_extension(vt0.c0, vt0.c0) THEN (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((NULL))) ELSE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) END DESC);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON x'' COLLATE BINARY WHERE (CASE highlight(vt0.c0, rt0.c2, vt0.c1, rt0.c1)  WHEN ((((vt0.c0)AND(rt0.c1)))AND(vt0.c1)) THEN vt0.c0 COLLATE NOCASE WHEN (vt0.c0 IN (rt0.c1, vt0.c1)) THEN rt0.c0 COLLATE RTRIM WHEN ((vt0.c1)>>(rt0.c2)) THEN ((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)) ELSE (((vt0.c1))=((vt0.c1))) END) ORDER BY CASE CASE WHEN rt0.c0 THEN rt0.c0 END  WHEN load_extension(vt0.c0, vt0.c0) THEN (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((NULL))) ELSE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) END DESC;
SELECT ALL * FROM vt0 WHERE (((NULL)<=((NOT (vt0.c0))))) ORDER BY (((vt0.c1)) NOT BETWEEN ((UNLIKELY(DISTINCT vt0.c1))) AND (((- (vt0.c0))))) DESC  NULLS FIRST, (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((NULL))))&(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))), (((((vt0.c1 IN ()))AND((('')>(vt0.c0)))))OR(((vt0.c0)+(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<=((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((UNLIKELY(DISTINCT vt0.c1))) AND (((- (vt0.c0))))) DESC  NULLS FIRST, (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((NULL))))&(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))), (((((vt0.c1 IN ()))AND((('')>(vt0.c0)))))OR(((vt0.c0)+(vt0.c1)))) DESC);
SELECT ALL * FROM vt0 WHERE (((NULL)<=((NOT (vt0.c0))))) ORDER BY (((vt0.c1)) NOT BETWEEN ((UNLIKELY(DISTINCT vt0.c1))) AND (((- (vt0.c0))))) DESC  NULLS FIRST, (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((NULL))))&(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))), (((((vt0.c1 IN ()))AND((('')>(vt0.c0)))))OR(((vt0.c0)+(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<=((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((UNLIKELY(DISTINCT vt0.c1))) AND (((- (vt0.c0))))) DESC  NULLS FIRST, (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((NULL))))&(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))), (((((vt0.c1 IN ()))AND((('')>(vt0.c0)))))OR(((vt0.c0)+(vt0.c1)))) DESC);
SELECT ALL * FROM vt0 WHERE (((NULL)<=((NOT (vt0.c0))))) ORDER BY (((vt0.c1)) NOT BETWEEN ((UNLIKELY(DISTINCT vt0.c1))) AND (((- (vt0.c0))))) DESC  NULLS FIRST, (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((NULL))))&(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))), (((((vt0.c1 IN ()))AND((('')>(vt0.c0)))))OR(((vt0.c0)+(vt0.c1)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (CASE (('m/u&') BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) THEN NULL END) ORDER BY (((vt0.c0 IN ()))OR(CASE 0X6aee1b1e  WHEN vt0.c1 THEN vt0.c1 WHEN 0.8265867327703427 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE 0X2cafdf1c END)) DESC  NULLS LAST, ((((vt0.c1)OR(vt0.c0)))>=(CAST(vt0.c1 AS NUMERIC))) ASC  NULLS FIRST, vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (('m/u&') BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) THEN NULL END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))OR(CASE 0X6aee1b1e  WHEN vt0.c1 THEN vt0.c1 WHEN 0.8265867327703427 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE 0X2cafdf1c END)) DESC  NULLS LAST, ((((vt0.c1)OR(vt0.c0)))>=(CAST(vt0.c1 AS NUMERIC))) ASC  NULLS FIRST, vt0.c1 ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE (('m/u&') BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) THEN NULL END) ORDER BY (((vt0.c0 IN ()))OR(CASE 0X6aee1b1e  WHEN vt0.c1 THEN vt0.c1 WHEN 0.8265867327703427 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE 0X2cafdf1c END)) DESC  NULLS LAST, ((((vt0.c1)OR(vt0.c0)))>=(CAST(vt0.c1 AS NUMERIC))) ASC  NULLS FIRST, vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (('m/u&') BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) THEN NULL END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))OR(CASE 0X6aee1b1e  WHEN vt0.c1 THEN vt0.c1 WHEN 0.8265867327703427 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE 0X2cafdf1c END)) DESC  NULLS LAST, ((((vt0.c1)OR(vt0.c0)))>=(CAST(vt0.c1 AS NUMERIC))) ASC  NULLS FIRST, vt0.c1 ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE (('m/u&') BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) THEN NULL END) ORDER BY (((vt0.c0 IN ()))OR(CASE 0X6aee1b1e  WHEN vt0.c1 THEN vt0.c1 WHEN 0.8265867327703427 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE 0X2cafdf1c END)) DESC  NULLS LAST, ((((vt0.c1)OR(vt0.c0)))>=(CAST(vt0.c1 AS NUMERIC))) ASC  NULLS FIRST, vt0.c1 ASC;
SELECT COUNT(*) FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END IN ()));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) ISNULL))&(((rt0.c2)-(NULL))))) ORDER BY (CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END IN ((((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL))&(((rt0.c2)-(NULL))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END IN ((((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) ISNULL))&(((rt0.c2)-(NULL))))) ORDER BY (CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END IN ((((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL))&(((rt0.c2)-(NULL))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END IN ((((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) ISNULL))&(((rt0.c2)-(NULL))))) ORDER BY (CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END IN ((((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, vt0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM rt0 WHERE ((LIKELY(DISTINCT rt0.c0) IN (x'5790', ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((LIKELY(DISTINCT rt0.c0) IN (x'5790', ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((LIKELY(DISTINCT rt0.c0) IN (x'5790', ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((LIKELY(DISTINCT rt0.c0) IN (x'5790', ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((LIKELY(DISTINCT rt0.c0) IN (x'5790', ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1) NOT NULL));
SELECT ALL * FROM rt0 WHERE (((('0.07677327714763393') ISNULL) IN ((~ (rt0.c1)), (~ (rt0.c1))))) ORDER BY CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN '1773348288' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('0.07677327714763393') ISNULL) IN ((~ (rt0.c1)), (~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN '1773348288' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END COLLATE BINARY ASC);
SELECT ALL * FROM rt0 WHERE (((('0.07677327714763393') ISNULL) IN ((~ (rt0.c1)), (~ (rt0.c1))))) ORDER BY CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN '1773348288' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('0.07677327714763393') ISNULL) IN ((~ (rt0.c1)), (~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN '1773348288' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END COLLATE BINARY ASC);
SELECT ALL * FROM rt0 WHERE (((('0.07677327714763393') ISNULL) IN ((~ (rt0.c1)), (~ (rt0.c1))))) ORDER BY CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN '1773348288' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END COLLATE BINARY ASC;
SELECT * FROM vt0, rt0 WHERE (COALESCE(x'', rt0.c2 COLLATE NOCASE)) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((COALESCE(x'', rt0.c2 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1);
SELECT * FROM vt0, rt0 WHERE (COALESCE(x'', rt0.c2 COLLATE NOCASE)) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((COALESCE(x'', rt0.c2 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1);
SELECT * FROM vt0, rt0 WHERE (COALESCE(x'', rt0.c2 COLLATE NOCASE)) ORDER BY rt0.c1;
SELECT ALL * FROM rt0, vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((0.31184212992947224))<((vt0.c1))))<=(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) ORDER BY (((TRIM(DISTINCT vt0.c0, rt0.c2)))<(((('쥱\r8~')*('2b'))))), CASE rt0.c0 COLLATE NOCASE  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('1339951350')) THEN (~ (rt0.c0)) WHEN (((rt0.c1))<((NULL))) THEN (vt0.c1 IN ()) WHEN ((rt0.c2)/(rt0.c1)) THEN x'' WHEN vt0.c1 THEN CAST(vt0.c1 AS BLOB) WHEN (((((((('koS{')AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c1)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END END, CAST((~ (vt0.c1)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((0.31184212992947224))<((vt0.c1))))<=(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((TRIM(DISTINCT vt0.c0, rt0.c2)))<(((('쥱\r8~')*('2b'))))), CASE rt0.c0 COLLATE NOCASE  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('1339951350')) THEN (~ (rt0.c0)) WHEN (((rt0.c1))<((NULL))) THEN (vt0.c1 IN ()) WHEN ((rt0.c2)/(rt0.c1)) THEN x'' WHEN vt0.c1 THEN CAST(vt0.c1 AS BLOB) WHEN (((((((('koS{')AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c1)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END END, CAST((~ (vt0.c1)) AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((0.31184212992947224))<((vt0.c1))))<=(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) ORDER BY (((TRIM(DISTINCT vt0.c0, rt0.c2)))<(((('쥱\r8~')*('2b'))))), CASE rt0.c0 COLLATE NOCASE  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('1339951350')) THEN (~ (rt0.c0)) WHEN (((rt0.c1))<((NULL))) THEN (vt0.c1 IN ()) WHEN ((rt0.c2)/(rt0.c1)) THEN x'' WHEN vt0.c1 THEN CAST(vt0.c1 AS BLOB) WHEN (((((((('koS{')AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c1)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END END, CAST((~ (vt0.c1)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((0.31184212992947224))<((vt0.c1))))<=(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((TRIM(DISTINCT vt0.c0, rt0.c2)))<(((('쥱\r8~')*('2b'))))), CASE rt0.c0 COLLATE NOCASE  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('1339951350')) THEN (~ (rt0.c0)) WHEN (((rt0.c1))<((NULL))) THEN (vt0.c1 IN ()) WHEN ((rt0.c2)/(rt0.c1)) THEN x'' WHEN vt0.c1 THEN CAST(vt0.c1 AS BLOB) WHEN (((((((('koS{')AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c1)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END END, CAST((~ (vt0.c1)) AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((0.31184212992947224))<((vt0.c1))))<=(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) ORDER BY (((TRIM(DISTINCT vt0.c0, rt0.c2)))<(((('쥱\r8~')*('2b'))))), CASE rt0.c0 COLLATE NOCASE  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('1339951350')) THEN (~ (rt0.c0)) WHEN (((rt0.c1))<((NULL))) THEN (vt0.c1 IN ()) WHEN ((rt0.c2)/(rt0.c1)) THEN x'' WHEN vt0.c1 THEN CAST(vt0.c1 AS BLOB) WHEN (((((((('koS{')AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c1)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END END, CAST((~ (vt0.c1)) AS REAL) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)GLOB(rt0.c1)) COLLATE BINARY) ORDER BY ((((((rt0.c1) IS TRUE))OR(CASE rt0.c1  WHEN rt0.c1 THEN x'1b5a' END)))OR(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)GLOB(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1) IS TRUE))OR(CASE rt0.c1  WHEN rt0.c1 THEN x'1b5a' END)))OR(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)GLOB(rt0.c1)) COLLATE BINARY) ORDER BY ((((((rt0.c1) IS TRUE))OR(CASE rt0.c1  WHEN rt0.c1 THEN x'1b5a' END)))OR(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)GLOB(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1) IS TRUE))OR(CASE rt0.c1  WHEN rt0.c1 THEN x'1b5a' END)))OR(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)GLOB(rt0.c1)) COLLATE BINARY) ORDER BY ((((((rt0.c1) IS TRUE))OR(CASE rt0.c1  WHEN rt0.c1 THEN x'1b5a' END)))OR(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE NULL  WHEN 0Xffffffff9ec28dda THEN vt0.c1 ELSE vt0.c1 END)) AND ((((rt0.c1) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE NULL  WHEN 0xffffffff9ec28dda THEN vt0.c1 ELSE vt0.c1 END)) AND ((((rt0.c1) IS FALSE))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE NULL  WHEN 0Xffffffff9ec28dda THEN vt0.c1 ELSE vt0.c1 END)) AND ((((rt0.c1) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE NULL  WHEN 0xffffffff9ec28dda THEN vt0.c1 ELSE vt0.c1 END)) AND ((((rt0.c1) IS FALSE))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE NULL  WHEN 0Xffffffff9ec28dda THEN vt0.c1 ELSE vt0.c1 END)) AND ((((rt0.c1) IS FALSE)))));
SELECT ALL * FROM rt0, vt0 WHERE ((((((((rt0.c0))>=((rt0.c0))))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(x''))) NOT BETWEEN (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c1))) AND ((- (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0))>=((rt0.c0))))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(x''))) NOT BETWEEN (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c1))) AND ((- (rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((((((rt0.c0))>=((rt0.c0))))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(x''))) NOT BETWEEN (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c1))) AND ((- (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0))>=((rt0.c0))))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(x''))) NOT BETWEEN (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c1))) AND ((- (rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((((((rt0.c0))>=((rt0.c0))))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(x''))) NOT BETWEEN (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c1))) AND ((- (rt0.c1))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))AND(x'5950')))/((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c0)))AND(x'5950')))/((- (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))AND(x'5950')))/((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c0)))AND(x'5950')))/((- (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))AND(x'5950')))/((- (rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN (((+ (rt0.c2)))) AND ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))))) ORDER BY ((((rt0.c0)AND(rt0.c2))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN (((+ (rt0.c2)))) AND ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)AND(rt0.c2))) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN (((+ (rt0.c2)))) AND ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))))) ORDER BY ((((rt0.c0)AND(rt0.c2))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN (((+ (rt0.c2)))) AND ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)AND(rt0.c2))) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN (((+ (rt0.c2)))) AND ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))))) ORDER BY ((((rt0.c0)AND(rt0.c2))) ISNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2))==((rt0.c1))) IN ())) ORDER BY 0.6782039401120938 ASC, CASE (rt0.c0 IN ())  WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN CHAR(rt0.c2, rt0.c0, rt0.c0) ELSE (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c1))) END DESC, (((rt0.c0)LIKE(rt0.c2)) IN ((rt0.c1 IN (rt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2))==((rt0.c1))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY 0.6782039401120938 ASC, CASE (rt0.c0 IN ())  WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN CHAR(rt0.c2, rt0.c0, rt0.c0) ELSE (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c1))) END DESC, (((rt0.c0)LIKE(rt0.c2)) IN ((rt0.c1 IN (rt0.c0, rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2))==((rt0.c1))) IN ())) ORDER BY 0.6782039401120938 ASC, CASE (rt0.c0 IN ())  WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN CHAR(rt0.c2, rt0.c0, rt0.c0) ELSE (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c1))) END DESC, (((rt0.c0)LIKE(rt0.c2)) IN ((rt0.c1 IN (rt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2))==((rt0.c1))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY 0.6782039401120938 ASC, CASE (rt0.c0 IN ())  WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN CHAR(rt0.c2, rt0.c0, rt0.c0) ELSE (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c1))) END DESC, (((rt0.c0)LIKE(rt0.c2)) IN ((rt0.c1 IN (rt0.c0, rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2))==((rt0.c1))) IN ())) ORDER BY 0.6782039401120938 ASC, CASE (rt0.c0 IN ())  WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN CHAR(rt0.c2, rt0.c0, rt0.c0) ELSE (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c1))) END DESC, (((rt0.c0)LIKE(rt0.c2)) IN ((rt0.c1 IN (rt0.c0, rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((- (rt0.c2)))OR(rt0.c0 COLLATE RTRIM)))OR(CAST(rt0.c1 AS BLOB))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR((- (rt0.c0))))) ORDER BY ((- (rt0.c0)) IN (x''))  NULLS LAST, '667662397' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((((((((- (rt0.c2)))OR(rt0.c0 COLLATE RTRIM)))OR(CAST(rt0.c1 AS BLOB))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR((- (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((- (rt0.c0)) IN (x''))  NULLS LAST, '667662397' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((- (rt0.c2)))OR(rt0.c0 COLLATE RTRIM)))OR(CAST(rt0.c1 AS BLOB))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR((- (rt0.c0))))) ORDER BY ((- (rt0.c0)) IN (x''))  NULLS LAST, '667662397' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((((((((- (rt0.c2)))OR(rt0.c0 COLLATE RTRIM)))OR(CAST(rt0.c1 AS BLOB))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR((- (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((- (rt0.c0)) IN (x''))  NULLS LAST, '667662397' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((- (rt0.c2)))OR(rt0.c0 COLLATE RTRIM)))OR(CAST(rt0.c1 AS BLOB))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR((- (rt0.c0))))) ORDER BY ((- (rt0.c0)) IN (x''))  NULLS LAST, '667662397' COLLATE RTRIM;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((NULL) BETWEEN (vt0.c1) AND (vt0.c1)) IN (CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((NULL) BETWEEN (vt0.c1) AND (vt0.c1)) IN (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((NULL) BETWEEN (vt0.c1) AND (vt0.c1)) IN (CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((NULL) BETWEEN (vt0.c1) AND (vt0.c1)) IN (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((NULL) BETWEEN (vt0.c1) AND (vt0.c1)) IN (CAST(rt0.c1 AS TEXT))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((CASE rt0.c2  WHEN vt0.c1 THEN vt0.c1 END, vt0.c1, rt0.c2 COLLATE NOCASE))>((vt0.c1 COLLATE NOCASE, (~ (rt0.c2)), ((rt0.c0)=(vt0.c0))))) WHERE ((((((rt0.c2 IN (vt0.c0)))OR(((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(JULIANDAY(vt0.c0, vt0.c0, ''))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2 IN (vt0.c0)))OR(((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(JULIANDAY(vt0.c0, vt0.c0, '')))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((CASE rt0.c2  WHEN vt0.c1 THEN vt0.c1 END, vt0.c1, rt0.c2 COLLATE NOCASE))>((vt0.c1 COLLATE NOCASE, (~ (rt0.c2)), ((rt0.c0)==(vt0.c0))))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((CASE rt0.c2  WHEN vt0.c1 THEN vt0.c1 END, vt0.c1, rt0.c2 COLLATE NOCASE))>((vt0.c1 COLLATE NOCASE, (~ (rt0.c2)), ((rt0.c0)=(vt0.c0))))) WHERE ((((((rt0.c2 IN (vt0.c0)))OR(((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(JULIANDAY(vt0.c0, vt0.c0, ''))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2 IN (vt0.c0)))OR(((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(JULIANDAY(vt0.c0, vt0.c0, '')))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((CASE rt0.c2  WHEN vt0.c1 THEN vt0.c1 END, vt0.c1, rt0.c2 COLLATE NOCASE))>((vt0.c1 COLLATE NOCASE, (~ (rt0.c2)), ((rt0.c0)==(vt0.c0))))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((CASE rt0.c2  WHEN vt0.c1 THEN vt0.c1 END, vt0.c1, rt0.c2 COLLATE NOCASE))>((vt0.c1 COLLATE NOCASE, (~ (rt0.c2)), ((rt0.c0)=(vt0.c0))))) WHERE ((((((rt0.c2 IN (vt0.c0)))OR(((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(JULIANDAY(vt0.c0, vt0.c0, ''))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((('-214018359' IN ()) IN ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('-214018359' IN ()) IN ((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('-214018359' IN ()) IN ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('-214018359' IN ()) IN ((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('-214018359' IN ()) IN ((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (rt0.c2 IN (vt0.c1, rt0.c0)) THEN ((((vt0.c1)AND(vt0.c0)))OR(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c2 IN (vt0.c1, rt0.c0)) THEN ((((vt0.c1)AND(vt0.c0)))OR(rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (rt0.c2 IN (vt0.c1, rt0.c0)) THEN ((((vt0.c1)AND(vt0.c0)))OR(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c2 IN (vt0.c1, rt0.c0)) THEN ((((vt0.c1)AND(vt0.c0)))OR(rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (rt0.c2 IN (vt0.c1, rt0.c0)) THEN ((((vt0.c1)AND(vt0.c0)))OR(rt0.c2)) END);
SELECT * FROM rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) IN (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(NULL)))AND(rt0.c0)), CASE rt0.c2  WHEN 'FALSE' THEN rt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) IN (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(NULL)))AND(rt0.c0)), CASE rt0.c2  WHEN 'FALSE' THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) IN (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(NULL)))AND(rt0.c0)), CASE rt0.c2  WHEN 'FALSE' THEN rt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) IN (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(NULL)))AND(rt0.c0)), CASE rt0.c2  WHEN 'FALSE' THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) IN (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(NULL)))AND(rt0.c0)), CASE rt0.c2  WHEN 'FALSE' THEN rt0.c0 ELSE rt0.c1 END)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON 'dy7!' WHERE ((((~ (rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON 'dy7!');
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON 'dy7!' WHERE ((((~ (rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON 'dy7!');
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON 'dy7!' WHERE ((((~ (rt0.c2))) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (json_array_length(vt0.c1, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))) ORDER BY CASE WHEN -460051994 THEN GLOB(vt0.c0, vt0.c1) ELSE CAST(vt0.c1 AS INTEGER) END  NULLS FIRST, (+ (LIKE(vt0.c0, vt0.c0, '|'))) ASC, CAST(((vt0.c0)>=(vt0.c1)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_array_length(vt0.c1, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN -460051994 THEN GLOB(vt0.c0, vt0.c1) ELSE CAST(vt0.c1 AS INTEGER) END  NULLS FIRST, (+ (LIKE(vt0.c0, vt0.c0, '|'))) ASC, CAST(((vt0.c0)>=(vt0.c1)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (json_array_length(vt0.c1, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))) ORDER BY CASE WHEN -460051994 THEN GLOB(vt0.c0, vt0.c1) ELSE CAST(vt0.c1 AS INTEGER) END  NULLS FIRST, (+ (LIKE(vt0.c0, vt0.c0, '|'))) ASC, CAST(((vt0.c0)>=(vt0.c1)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_array_length(vt0.c1, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN -460051994 THEN GLOB(vt0.c0, vt0.c1) ELSE CAST(vt0.c1 AS INTEGER) END  NULLS FIRST, (+ (LIKE(vt0.c0, vt0.c0, '|'))) ASC, CAST(((vt0.c0)>=(vt0.c1)) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((-1535787680) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((-1535787680) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((-1535787680) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((-1535787680) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((-1535787680) NOT NULL) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE ((+ (0.6139864159136741))) ORDER BY ((~ (vt0.c1)) IN ()), (~ (((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (0.6139864159136741))) IS TRUE)  as count FROM vt0 ORDER BY ((~ (vt0.c1)) IN ()), (~ (((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((+ (0.6139864159136741))) ORDER BY ((~ (vt0.c1)) IN ()), (~ (((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (0.6139864159136741))) IS TRUE)  as count FROM vt0 ORDER BY ((~ (vt0.c1)) IN ()), (~ (((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((+ (0.6139864159136741))) ORDER BY ((~ (vt0.c1)) IN ()), (~ (((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((((((vt0.c0)/('{<W*a7p-')))AND(((vt0.c0)%(vt0.c0)))))AND(vt0.c0)) ASC  NULLS LAST, ((LOWER(vt0.c0))>=(((vt0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)/('{<W*a7p-')))AND(((vt0.c0)%(vt0.c0)))))AND(vt0.c0)) ASC  NULLS LAST, ((LOWER(vt0.c0))>=(((vt0.c0) NOT NULL)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((((((vt0.c0)/('{<W*a7p-')))AND(((vt0.c0)%(vt0.c0)))))AND(vt0.c0)) ASC  NULLS LAST, ((LOWER(vt0.c0))>=(((vt0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)/('{<W*a7p-')))AND(((vt0.c0)%(vt0.c0)))))AND(vt0.c0)) ASC  NULLS LAST, ((LOWER(vt0.c0))>=(((vt0.c0) NOT NULL)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((((((vt0.c0)/('{<W*a7p-')))AND(((vt0.c0)%(vt0.c0)))))AND(vt0.c0)) ASC  NULLS LAST, ((LOWER(vt0.c0))>=(((vt0.c0) NOT NULL)))  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE ('' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('' COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE (0.29101081365147974) ORDER BY ((((rt0.c2)<('2062625960'))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.29101081365147974) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)<('2062625960'))) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (0.29101081365147974) ORDER BY ((((rt0.c2)<('2062625960'))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.29101081365147974) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)<('2062625960'))) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (0.29101081365147974) ORDER BY ((((rt0.c2)<('2062625960'))) NOTNULL) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (((((CAST(rt0.c0 AS INTEGER))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR(CASE rt0.c1  WHEN vt0.c1 THEN rt0.c2 ELSE '\rfe\rog' END))) ORDER BY CAST(rt0.c0 AS TEXT) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS INTEGER))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR(CASE rt0.c1  WHEN vt0.c1 THEN rt0.c2 ELSE '\rfe\rog' END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(rt0.c0 AS TEXT) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((((CAST(rt0.c0 AS INTEGER))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR(CASE rt0.c1  WHEN vt0.c1 THEN rt0.c2 ELSE '\rfe\rog' END))) ORDER BY CAST(rt0.c0 AS TEXT) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS INTEGER))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR(CASE rt0.c1  WHEN vt0.c1 THEN rt0.c2 ELSE '\rfe\rog' END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(rt0.c0 AS TEXT) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((((CAST(rt0.c0 AS INTEGER))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))OR(CASE rt0.c1  WHEN vt0.c1 THEN rt0.c2 ELSE '\rfe\rog' END))) ORDER BY CAST(rt0.c0 AS TEXT) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((NOT (((0xffffffff974d10cd) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY (((((rt0.c2) IS FALSE)))<=(((rt0.c2 IN (rt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((0Xffffffff974d10cd) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2) IS FALSE)))<=(((rt0.c2 IN (rt0.c2))))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((NOT (((0xffffffff974d10cd) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY (((((rt0.c2) IS FALSE)))<=(((rt0.c2 IN (rt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((0Xffffffff974d10cd) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2) IS FALSE)))<=(((rt0.c2 IN (rt0.c2))))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((NOT (((0xffffffff974d10cd) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY (((((rt0.c2) IS FALSE)))<=(((rt0.c2 IN (rt0.c2))))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (((((CAST(rt0.c0 AS INTEGER))AND(CAST(rt0.c1 AS BLOB))))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c0 AS INTEGER))AND(CAST(rt0.c1 AS BLOB))))OR(rt0.c1))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((CAST(rt0.c0 AS INTEGER))AND(CAST(rt0.c1 AS BLOB))))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c0 AS INTEGER))AND(CAST(rt0.c1 AS BLOB))))OR(rt0.c1))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((CAST(rt0.c0 AS INTEGER))AND(CAST(rt0.c1 AS BLOB))))OR(rt0.c1)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (vt0.c1 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY (vt0.c1 IN ()) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (vt0.c1 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY (vt0.c1 IN ()) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (vt0.c1 IN ()) DESC;
SELECT * FROM rt0 WHERE (((rt0.c1 IN ()) IN (NULL, ((rt0.c2)<(rt0.c0))))) ORDER BY ((((rt0.c2)AND(rt0.c0)))GLOB(CASE WHEN rt0.c0 THEN rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN (NULL, ((rt0.c2)<(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)AND(rt0.c0)))GLOB(CASE WHEN rt0.c0 THEN rt0.c1 END)) DESC);
SELECT * FROM rt0 WHERE (((rt0.c1 IN ()) IN (NULL, ((rt0.c2)<(rt0.c0))))) ORDER BY ((((rt0.c2)AND(rt0.c0)))GLOB(CASE WHEN rt0.c0 THEN rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN (NULL, ((rt0.c2)<(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)AND(rt0.c0)))GLOB(CASE WHEN rt0.c0 THEN rt0.c1 END)) DESC);
SELECT * FROM rt0 WHERE (((rt0.c1 IN ()) IN (NULL, ((rt0.c2)<(rt0.c0))))) ORDER BY ((((rt0.c2)AND(rt0.c0)))GLOB(CASE WHEN rt0.c0 THEN rt0.c1 END)) DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (8.7568412E7) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN ('-1175689348' COLLATE BINARY) AND (((rt0.c0)<<(rt0.c0)))), ((LIKELY(rt0.c2))|(CASE WHEN rt0.c0 THEN rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((8.7568412E7) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN ('-1175689348' COLLATE BINARY) AND (((rt0.c0)<<(rt0.c0)))), ((LIKELY(rt0.c2))|(CASE WHEN rt0.c0 THEN rt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (8.7568412E7) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN ('-1175689348' COLLATE BINARY) AND (((rt0.c0)<<(rt0.c0)))), ((LIKELY(rt0.c2))|(CASE WHEN rt0.c0 THEN rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((8.7568412E7) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN ('-1175689348' COLLATE BINARY) AND (((rt0.c0)<<(rt0.c0)))), ((LIKELY(rt0.c2))|(CASE WHEN rt0.c0 THEN rt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (8.7568412E7) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN ('-1175689348' COLLATE BINARY) AND (((rt0.c0)<<(rt0.c0)))), ((LIKELY(rt0.c2))|(CASE WHEN rt0.c0 THEN rt0.c0 END))  NULLS LAST;
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c2 COLLATE BINARY))==((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE BINARY))=((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c2 COLLATE BINARY))==((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE BINARY))=((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c2 COLLATE BINARY))==((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1))))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)) IN ())) ORDER BY ((((((rt0.c0)<<(rt0.c1)))OR(LIKE(rt0.c2, rt0.c0))))OR(((rt0.c1)||(rt0.c2)))) DESC, (('FJ')|((- (rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)<<(rt0.c1)))OR(LIKE(rt0.c2, rt0.c0))))OR(((rt0.c1)||(rt0.c2)))) DESC, (('FJ')|((- (rt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)) IN ())) ORDER BY ((((((rt0.c0)<<(rt0.c1)))OR(LIKE(rt0.c2, rt0.c0))))OR(((rt0.c1)||(rt0.c2)))) DESC, (('FJ')|((- (rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)<<(rt0.c1)))OR(LIKE(rt0.c2, rt0.c0))))OR(((rt0.c1)||(rt0.c2)))) DESC, (('FJ')|((- (rt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)) IN ())) ORDER BY ((((((rt0.c0)<<(rt0.c1)))OR(LIKE(rt0.c2, rt0.c0))))OR(((rt0.c1)||(rt0.c2)))) DESC, (('FJ')|((- (rt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1 IN (rt0.c2, vt0.c1)) IN ())) ORDER BY CAST(((rt0.c2) NOT NULL) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN (rt0.c2, vt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c2) NOT NULL) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1 IN (rt0.c2, vt0.c1)) IN ())) ORDER BY CAST(((rt0.c2) NOT NULL) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN (rt0.c2, vt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c2) NOT NULL) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1 IN (rt0.c2, vt0.c1)) IN ())) ORDER BY CAST(((rt0.c2) NOT NULL) AS TEXT);
SELECT * FROM vt0 WHERE (IFNULL((+ (vt0.c0)), (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((IFNULL((+ (vt0.c0)), (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (IFNULL((+ (vt0.c0)), (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((IFNULL((+ (vt0.c0)), (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (IFNULL((+ (vt0.c0)), (vt0.c0 IN ())));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (CAST((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) AS TEXT));
SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c1)AND(rt0.c1)))OR(vt0.c0)))|(((vt0.c1)GLOB(rt0.c1))))) ORDER BY (((((rt0.c2)LIKE(rt0.c0))))<>((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(rt0.c1)))OR(vt0.c0)))|(((vt0.c1)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c2)LIKE(rt0.c0))))<>((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 END)))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c1)AND(rt0.c1)))OR(vt0.c0)))|(((vt0.c1)GLOB(rt0.c1))))) ORDER BY (((((rt0.c2)LIKE(rt0.c0))))<>((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(rt0.c1)))OR(vt0.c0)))|(((vt0.c1)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c2)LIKE(rt0.c0))))<>((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 END)))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c1)AND(rt0.c1)))OR(vt0.c0)))|(((vt0.c1)GLOB(rt0.c1))))) ORDER BY (((((rt0.c2)LIKE(rt0.c0))))<>((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 END)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(LIKE(rt0.c2, vt0.c1, 'd') AS REAL)) ORDER BY (TRIM(DISTINCT rt0.c0, vt0.c0) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKE(rt0.c2, vt0.c1, 'd') AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (TRIM(DISTINCT rt0.c0, vt0.c0) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(LIKE(rt0.c2, vt0.c1, 'd') AS REAL)) ORDER BY (TRIM(DISTINCT rt0.c0, vt0.c0) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKE(rt0.c2, vt0.c1, 'd') AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (TRIM(DISTINCT rt0.c0, vt0.c0) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(LIKE(rt0.c2, vt0.c1, 'd') AS REAL)) ORDER BY (TRIM(DISTINCT rt0.c0, vt0.c0) IN ()) DESC;
SELECT * FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE NOCASE);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (CAST(((((vt0.c1)OR(rt0.c1)))AND(rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c1)OR(rt0.c1)))AND(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (CAST(((((vt0.c1)OR(rt0.c1)))AND(rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c1)OR(rt0.c1)))AND(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (CAST(((((vt0.c1)OR(rt0.c1)))AND(rt0.c1)) AS TEXT));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((LIKELIHOOD(DISTINCT x'983f', 0.06849158230300867))%(((((vt0.c0)OR(rt0.c0)))OR(vt0.c1))))) ORDER BY (((rt0.c0, vt0.c1, rt0.c1)) BETWEEN ((LIKELIHOOD(DISTINCT vt0.c1, 0.7060142725582158), (- (rt0.c0)), (((rt0.c0))<=((vt0.c1))))) AND ((((rt0.c2)LIKE(vt0.c1)), vt0.c0 COLLATE NOCASE, vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT x'983f', 0.06849158230300867))%(((((vt0.c0)OR(rt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0, vt0.c1, rt0.c1)) BETWEEN ((LIKELIHOOD(DISTINCT vt0.c1, 0.7060142725582158), (- (rt0.c0)), (((rt0.c0))<=((vt0.c1))))) AND ((((rt0.c2)LIKE(vt0.c1)), vt0.c0 COLLATE NOCASE, vt0.c1 COLLATE BINARY))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((LIKELIHOOD(DISTINCT x'983f', 0.06849158230300867))%(((((vt0.c0)OR(rt0.c0)))OR(vt0.c1))))) ORDER BY (((rt0.c0, vt0.c1, rt0.c1)) BETWEEN ((LIKELIHOOD(DISTINCT vt0.c1, 0.7060142725582158), (- (rt0.c0)), (((rt0.c0))<=((vt0.c1))))) AND ((((rt0.c2)LIKE(vt0.c1)), vt0.c0 COLLATE NOCASE, vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT x'983f', 0.06849158230300867))%(((((vt0.c0)OR(rt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0, vt0.c1, rt0.c1)) BETWEEN ((LIKELIHOOD(DISTINCT vt0.c1, 0.7060142725582158), (- (rt0.c0)), (((rt0.c0))<=((vt0.c1))))) AND ((((rt0.c2)LIKE(vt0.c1)), vt0.c0 COLLATE NOCASE, vt0.c1 COLLATE BINARY))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((LIKELIHOOD(DISTINCT x'983f', 0.06849158230300867))%(((((vt0.c0)OR(rt0.c0)))OR(vt0.c1))))) ORDER BY (((rt0.c0, vt0.c1, rt0.c1)) BETWEEN ((LIKELIHOOD(DISTINCT vt0.c1, 0.7060142725582158), (- (rt0.c0)), (((rt0.c0))<=((vt0.c1))))) AND ((((rt0.c2)LIKE(vt0.c1)), vt0.c0 COLLATE NOCASE, vt0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END AS TEXT));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST((((((((((((('')OR(rt0.c0)))AND(rt0.c1)))AND('^#')))OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)) AS NUMERIC)) ORDER BY 0.22449164837103142 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((((((((((('')OR(rt0.c0)))AND(rt0.c1)))AND('^#')))OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.22449164837103142 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST((((((((((((('')OR(rt0.c0)))AND(rt0.c1)))AND('^#')))OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)) AS NUMERIC)) ORDER BY 0.22449164837103142 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((((((((((('')OR(rt0.c0)))AND(rt0.c1)))AND('^#')))OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.22449164837103142 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST((((((((((((('')OR(rt0.c0)))AND(rt0.c1)))AND('^#')))OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)) AS NUMERIC)) ORDER BY 0.22449164837103142 ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (LIKELY(rt0.c2) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((LIKELY(rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LIKELY(rt0.c2) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((LIKELY(rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LIKELY(rt0.c2) COLLATE BINARY);
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB)) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c1 AS REAL))AND(((((vt0.c0)OR(vt0.c1)))OR(0x448eaec2)))))OR(((vt0.c1)==(vt0.c0))))) ORDER BY (((+ (vt0.c0))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c1 AS REAL))AND(((((vt0.c0)OR(vt0.c1)))OR(0X448eaec2)))))OR(((vt0.c1)==(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0))) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c1 AS REAL))AND(((((vt0.c0)OR(vt0.c1)))OR(0x448eaec2)))))OR(((vt0.c1)==(vt0.c0))))) ORDER BY (((+ (vt0.c0))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c1 AS REAL))AND(((((vt0.c0)OR(vt0.c1)))OR(0X448eaec2)))))OR(((vt0.c1)==(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0))) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c1 AS REAL))AND(((((vt0.c0)OR(vt0.c1)))OR(0x448eaec2)))))OR(((vt0.c1)==(vt0.c0))))) ORDER BY (((+ (vt0.c0))) ISNULL) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((- (rt0.c0)))GLOB(CAST(NULL AS REAL)))) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)AND(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))))OR(SUBSTR(rt0.c0, rt0.c0))), ((((0.5573393474341659)||('1')))>(rt0.c1 COLLATE BINARY)), (((((rt0.c0))==((rt0.c1)))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0)))GLOB(CAST(NULL AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)AND(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))))OR(SUBSTR(rt0.c0, rt0.c0))), ((((0.5573393474341659)||('1')))>(rt0.c1 COLLATE BINARY)), (((((rt0.c0))=((rt0.c1)))) ISNULL));
SELECT * FROM rt0 WHERE ((((- (rt0.c0)))GLOB(CAST(NULL AS REAL)))) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)AND(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))))OR(SUBSTR(rt0.c0, rt0.c0))), ((((0.5573393474341659)||('1')))>(rt0.c1 COLLATE BINARY)), (((((rt0.c0))==((rt0.c1)))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0)))GLOB(CAST(NULL AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)AND(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))))OR(SUBSTR(rt0.c0, rt0.c0))), ((((0.5573393474341659)||('1')))>(rt0.c1 COLLATE BINARY)), (((((rt0.c0))=((rt0.c1)))) ISNULL));
SELECT * FROM rt0 WHERE ((((- (rt0.c0)))GLOB(CAST(NULL AS REAL)))) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)AND(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))))OR(SUBSTR(rt0.c0, rt0.c0))), ((((0.5573393474341659)||('1')))>(rt0.c1 COLLATE BINARY)), (((((rt0.c0))==((rt0.c1)))) ISNULL);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)-(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)-(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)-(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)-(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)-(rt0.c2)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (COALESCE(DISTINCT ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)), (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((-8.35322282E8, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0))))) ORDER BY json_patch(rt0.c1, ((rt0.c2) IS TRUE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)), (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((-8.35322282E8, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY json_patch(rt0.c1, ((rt0.c2) IS TRUE)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (COALESCE(DISTINCT ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)), (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((-8.35322282E8, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0))))) ORDER BY json_patch(rt0.c1, ((rt0.c2) IS TRUE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)), (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((-8.35322282E8, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY json_patch(rt0.c1, ((rt0.c2) IS TRUE)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (COALESCE(DISTINCT ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)), (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((-8.35322282E8, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0))))) ORDER BY json_patch(rt0.c1, ((rt0.c2) IS TRUE)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN '580740265' THEN rt0.c0 ELSE rt0.c1 END) IS TRUE)) ORDER BY (((rt0.c2 IN (rt0.c0)))<=(rt0.c2)) DESC  NULLS LAST, (((rt0.c1)-(rt0.c0)) IN ()), ((rt0.c1)*(rt0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN '580740265' THEN rt0.c0 ELSE rt0.c1 END) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN (rt0.c0)))<=(rt0.c2)) DESC  NULLS LAST, (((rt0.c1)-(rt0.c0)) IN ()), ((rt0.c1)*(rt0.c2)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN '580740265' THEN rt0.c0 ELSE rt0.c1 END) IS TRUE)) ORDER BY (((rt0.c2 IN (rt0.c0)))<=(rt0.c2)) DESC  NULLS LAST, (((rt0.c1)-(rt0.c0)) IN ()), ((rt0.c1)*(rt0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN '580740265' THEN rt0.c0 ELSE rt0.c1 END) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN (rt0.c0)))<=(rt0.c2)) DESC  NULLS LAST, (((rt0.c1)-(rt0.c0)) IN ()), ((rt0.c1)*(rt0.c2)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN '580740265' THEN rt0.c0 ELSE rt0.c1 END) IS TRUE)) ORDER BY (((rt0.c2 IN (rt0.c0)))<=(rt0.c2)) DESC  NULLS LAST, (((rt0.c1)-(rt0.c0)) IN ()), ((rt0.c1)*(rt0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (CAST(((rt0.c1) NOT NULL) AS INTEGER)) ORDER BY (NOT ((rt0.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT ((rt0.c2 IN ()))) DESC);
SELECT * FROM rt0, vt0 WHERE (CAST(((rt0.c1) NOT NULL) AS INTEGER)) ORDER BY (NOT ((rt0.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT ((rt0.c2 IN ()))) DESC);
SELECT * FROM rt0, vt0 WHERE (CAST(((rt0.c1) NOT NULL) AS INTEGER)) ORDER BY (NOT ((rt0.c2 IN ()))) DESC;
SELECT * FROM vt0 WHERE (NULL) ORDER BY ((((((((((vt0.c0)LIKE(vt0.c0)))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))))OR(((NULL) BETWEEN (vt0.c0) AND (vt0.c1)))))AND((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))))OR(((((vt0.c1)OR(vt0.c0)))OR(0.21335241452027642))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)LIKE(vt0.c0)))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))))OR(((NULL) BETWEEN (vt0.c0) AND (vt0.c1)))))AND((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))))OR(((((vt0.c1)OR(vt0.c0)))OR(0.21335241452027642)))));
SELECT * FROM vt0 WHERE (NULL) ORDER BY ((((((((((vt0.c0)LIKE(vt0.c0)))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))))OR(((NULL) BETWEEN (vt0.c0) AND (vt0.c1)))))AND((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))))OR(((((vt0.c1)OR(vt0.c0)))OR(0.21335241452027642))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)LIKE(vt0.c0)))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))))OR(((NULL) BETWEEN (vt0.c0) AND (vt0.c1)))))AND((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))))OR(((((vt0.c1)OR(vt0.c0)))OR(0.21335241452027642)))));
SELECT * FROM vt0 WHERE (NULL) ORDER BY ((((((((((vt0.c0)LIKE(vt0.c0)))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))))OR(((NULL) BETWEEN (vt0.c0) AND (vt0.c1)))))AND((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))))OR(((((vt0.c1)OR(vt0.c0)))OR(0.21335241452027642))));
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS TEXT))<((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))<((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS TEXT))<((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))<((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS TEXT))<((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))));
SELECT * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END)IS('-1631416870')) DESC, (((('')AND(rt0.c0)))OR(CAST(rt0.c2 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END)IS('-1631416870')) DESC, (((('')AND(rt0.c0)))OR(CAST(rt0.c2 AS REAL))) DESC);
SELECT * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END)IS('-1631416870')) DESC, (((('')AND(rt0.c0)))OR(CAST(rt0.c2 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END)IS('-1631416870')) DESC, (((('')AND(rt0.c0)))OR(CAST(rt0.c2 AS REAL))) DESC);
SELECT * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END)IS('-1631416870')) DESC, (((('')AND(rt0.c0)))OR(CAST(rt0.c2 AS REAL))) DESC;
SELECT * FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM)=(CAST(NULL AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)=(CAST(NULL AS REAL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM)=(CAST(NULL AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)=(CAST(NULL AS REAL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM)=(CAST(NULL AS REAL))));
SELECT ALL * FROM vt0, rt0 WHERE ((- ((- (vt0.c0))))) ORDER BY IFNULL((- (rt0.c1)), (((rt0.c2))<((rt0.c2)))), UPPER(((rt0.c1)OR(rt0.c2))), PRINTF((+ (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY IFNULL((- (rt0.c1)), (((rt0.c2))<((rt0.c2)))), UPPER(((rt0.c1)OR(rt0.c2))), PRINTF((+ (rt0.c0))));
SELECT ALL * FROM vt0, rt0 WHERE ((- ((- (vt0.c0))))) ORDER BY IFNULL((- (rt0.c1)), (((rt0.c2))<((rt0.c2)))), UPPER(((rt0.c1)OR(rt0.c2))), PRINTF((+ (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY IFNULL((- (rt0.c1)), (((rt0.c2))<((rt0.c2)))), UPPER(((rt0.c1)OR(rt0.c2))), PRINTF((+ (rt0.c0))));
SELECT ALL * FROM vt0, rt0 WHERE ((- ((- (vt0.c0))))) ORDER BY IFNULL((- (rt0.c1)), (((rt0.c2))<((rt0.c2)))), UPPER(((rt0.c1)OR(rt0.c2))), PRINTF((+ (rt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM rt0 WHERE ((((('')AND(json_array(rt0.c0, rt0.c0))))OR(((rt0.c0)+(rt0.c2))))) ORDER BY HEX(DISTINCT (((rt0.c1)) BETWEEN ((0.10964852777252088)) AND ((x'526b'))))  NULLS FIRST, COALESCE(CAST(rt0.c2 AS INTEGER), TYPEOF(DISTINCT '-58573183')) ASC, NULL COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('')AND(json_array(rt0.c0, rt0.c0))))OR(((rt0.c0)+(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT (((rt0.c1)) BETWEEN ((0.10964852777252088)) AND ((x'526b'))))  NULLS FIRST, COALESCE(CAST(rt0.c2 AS INTEGER), TYPEOF(DISTINCT '-58573183')) ASC, NULL COLLATE NOCASE DESC);
SELECT * FROM rt0 WHERE ((((('')AND(json_array(rt0.c0, rt0.c0))))OR(((rt0.c0)+(rt0.c2))))) ORDER BY HEX(DISTINCT (((rt0.c1)) BETWEEN ((0.10964852777252088)) AND ((x'526b'))))  NULLS FIRST, COALESCE(CAST(rt0.c2 AS INTEGER), TYPEOF(DISTINCT '-58573183')) ASC, NULL COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('')AND(json_array(rt0.c0, rt0.c0))))OR(((rt0.c0)+(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT (((rt0.c1)) BETWEEN ((0.10964852777252088)) AND ((x'526b'))))  NULLS FIRST, COALESCE(CAST(rt0.c2 AS INTEGER), TYPEOF(DISTINCT '-58573183')) ASC, NULL COLLATE NOCASE DESC);
SELECT * FROM rt0 WHERE ((((('')AND(json_array(rt0.c0, rt0.c0))))OR(((rt0.c0)+(rt0.c2))))) ORDER BY HEX(DISTINCT (((rt0.c1)) BETWEEN ((0.10964852777252088)) AND ((x'526b'))))  NULLS FIRST, COALESCE(CAST(rt0.c2 AS INTEGER), TYPEOF(DISTINCT '-58573183')) ASC, NULL COLLATE NOCASE DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0)GLOB(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)GLOB(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0)GLOB(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)GLOB(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0)GLOB(rt0.c1)) IN ()));
SELECT * FROM rt0, vt0 WHERE ((((~ (rt0.c0))) NOT BETWEEN ('-1631416870') AND (((rt0.c2)%(vt0.c1))))) ORDER BY (((((- (-1682937402)))AND(((rt0.c1) NOT NULL))))OR(((((vt0.c0)OR(rt0.c1)))AND(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0))) NOT BETWEEN ('-1631416870') AND (((rt0.c2)%(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((- (-1682937402)))AND(((rt0.c1) NOT NULL))))OR(((((vt0.c0)OR(rt0.c1)))AND(rt0.c1))))  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((~ (rt0.c0))) NOT BETWEEN ('-1631416870') AND (((rt0.c2)%(vt0.c1))))) ORDER BY (((((- (-1682937402)))AND(((rt0.c1) NOT NULL))))OR(((((vt0.c0)OR(rt0.c1)))AND(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0))) NOT BETWEEN ('-1631416870') AND (((rt0.c2)%(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((- (-1682937402)))AND(((rt0.c1) NOT NULL))))OR(((((vt0.c0)OR(rt0.c1)))AND(rt0.c1))))  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((~ (rt0.c0))) NOT BETWEEN ('-1631416870') AND (((rt0.c2)%(vt0.c1))))) ORDER BY (((((- (-1682937402)))AND(((rt0.c1) NOT NULL))))OR(((((vt0.c0)OR(rt0.c1)))AND(rt0.c1))))  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN (~ (vt0.c1)) THEN x'' END) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS NUMERIC), ((vt0.c0 COLLATE RTRIM)>=(((vt0.c0) IS FALSE)))  NULLS FIRST, ((vt0.c1 COLLATE BINARY)%(1.220863988E9)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN (~ (vt0.c1)) THEN x'' END) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 COLLATE NOCASE AS NUMERIC), ((vt0.c0 COLLATE RTRIM)>=(((vt0.c0) IS FALSE)))  NULLS FIRST, ((vt0.c1 COLLATE BINARY)%(1.220863988E9)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN (~ (vt0.c1)) THEN x'' END) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS NUMERIC), ((vt0.c0 COLLATE RTRIM)>=(((vt0.c0) IS FALSE)))  NULLS FIRST, ((vt0.c1 COLLATE BINARY)%(1.220863988E9)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN (~ (vt0.c1)) THEN x'' END) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 COLLATE NOCASE AS NUMERIC), ((vt0.c0 COLLATE RTRIM)>=(((vt0.c0) IS FALSE)))  NULLS FIRST, ((vt0.c1 COLLATE BINARY)%(1.220863988E9)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN (~ (vt0.c1)) THEN x'' END) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS NUMERIC), ((vt0.c0 COLLATE RTRIM)>=(((vt0.c0) IS FALSE)))  NULLS FIRST, ((vt0.c1 COLLATE BINARY)%(1.220863988E9)) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (NULL) AND (rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (NULL) AND (rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (NULL) AND (rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (NULL) AND (rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (NULL) AND (rt0.c0)) AS REAL));
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN 0X27cbb83d WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END AS NUMERIC)) ORDER BY 0.30673873122564577;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN 0X27cbb83d WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY 0.30673873122564577);
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN 0X27cbb83d WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END AS NUMERIC)) ORDER BY 0.30673873122564577;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN 0X27cbb83d WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY 0.30673873122564577);
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN 0X27cbb83d WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END AS NUMERIC)) ORDER BY 0.30673873122564577;
SELECT * FROM vt0 WHERE ((((((((((vt0.c0 IN ('篜NjH&**')))OR(CAST(vt0.c0 AS INTEGER))))AND((NOT (vt0.c0)))))OR(NULL)))AND(rtreenode(vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN ('篜NjH&**')))OR(CAST(vt0.c0 AS INTEGER))))AND((NOT (vt0.c0)))))OR(NULL)))AND(rtreenode(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((((vt0.c0 IN ('篜NjH&**')))OR(CAST(vt0.c0 AS INTEGER))))AND((NOT (vt0.c0)))))OR(NULL)))AND(rtreenode(vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN ('篜NjH&**')))OR(CAST(vt0.c0 AS INTEGER))))AND((NOT (vt0.c0)))))OR(NULL)))AND(rtreenode(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((((vt0.c0 IN ('篜NjH&**')))OR(CAST(vt0.c0 AS INTEGER))))AND((NOT (vt0.c0)))))OR(NULL)))AND(rtreenode(vt0.c0, vt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((0.22242460990755197)AND(rt0.c2)))OR(rt0.c2)) COLLATE RTRIM) ORDER BY ((((rt0.c0) NOTNULL))*(((rt0.c2)||(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((0.22242460990755197)AND(rt0.c2)))OR(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOTNULL))*(((rt0.c2)||(rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((0.22242460990755197)AND(rt0.c2)))OR(rt0.c2)) COLLATE RTRIM) ORDER BY ((((rt0.c0) NOTNULL))*(((rt0.c2)||(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((0.22242460990755197)AND(rt0.c2)))OR(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOTNULL))*(((rt0.c2)||(rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((0.22242460990755197)AND(rt0.c2)))OR(rt0.c2)) COLLATE RTRIM) ORDER BY ((((rt0.c0) NOTNULL))*(((rt0.c2)||(rt0.c1)))) ASC;
SELECT ALL * FROM vt0, rt0 WHERE ('0.7511295123860215') ORDER BY ((((vt0.c0)*(vt0.c1)))>>(((((rt0.c2)OR(vt0.c0)))OR(vt0.c1)))) ASC, rt0.c1;
SELECT SUM(count) FROM (SELECT (('0.7511295123860215') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)*(vt0.c1)))>>(((((rt0.c2)OR(vt0.c0)))OR(vt0.c1)))) ASC, rt0.c1);
SELECT ALL * FROM vt0, rt0 WHERE ('0.7511295123860215') ORDER BY ((((vt0.c0)*(vt0.c1)))>>(((((rt0.c2)OR(vt0.c0)))OR(vt0.c1)))) ASC, rt0.c1;
SELECT SUM(count) FROM (SELECT (('0.7511295123860215') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)*(vt0.c1)))>>(((((rt0.c2)OR(vt0.c0)))OR(vt0.c1)))) ASC, rt0.c1);
SELECT ALL * FROM vt0, rt0 WHERE ('0.7511295123860215') ORDER BY ((((vt0.c0)*(vt0.c1)))>>(((((rt0.c2)OR(vt0.c0)))OR(vt0.c1)))) ASC, rt0.c1;
SELECT * FROM rt0 WHERE ((ROUND(rt0.c1, rt0.c2) IN (((rt0.c2) IS FALSE), ((rt0.c1)<(rt0.c0))))) ORDER BY (CAST(NULL AS INTEGER) IN ())  NULLS FIRST, (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)) IN ()) DESC  NULLS LAST, ((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0)))<<(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((ROUND(rt0.c1, rt0.c2) IN (((rt0.c2) IS FALSE), ((rt0.c1)<(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(NULL AS INTEGER) IN ())  NULLS FIRST, (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)) IN ()) DESC  NULLS LAST, ((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0)))<<(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((ROUND(rt0.c1, rt0.c2) IN (((rt0.c2) IS FALSE), ((rt0.c1)<(rt0.c0))))) ORDER BY (CAST(NULL AS INTEGER) IN ())  NULLS FIRST, (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)) IN ()) DESC  NULLS LAST, ((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0)))<<(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((ROUND(rt0.c1, rt0.c2) IN (((rt0.c2) IS FALSE), ((rt0.c1)<(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(NULL AS INTEGER) IN ())  NULLS FIRST, (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)) IN ()) DESC  NULLS LAST, ((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0)))<<(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((ROUND(rt0.c1, rt0.c2) IN (((rt0.c2) IS FALSE), ((rt0.c1)<(rt0.c0))))) ORDER BY (CAST(NULL AS INTEGER) IN ())  NULLS FIRST, (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)) IN ()) DESC  NULLS LAST, ((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0)))<<(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>(vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST('-863937711' AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>(vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST('-863937711' AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>(vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST('-863937711' AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>(vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST('-863937711' AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>(vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST('-863937711' AS REAL))));
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((((- (NULL))) BETWEEN (NULL) AND (((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((- (NULL))) BETWEEN (NULL) AND (((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((((- (NULL))) BETWEEN (NULL) AND (((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((- (NULL))) BETWEEN (NULL) AND (((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((((- (NULL))) BETWEEN (NULL) AND (((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))))<((((((rt0.c0)OR(vt0.c0)))OR(vt0.c0))))) WHERE ((NOT (((vt0.c1)IS(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1)IS(rt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))))<((((((rt0.c0)OR(vt0.c0)))OR(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))))<((((((rt0.c0)OR(vt0.c0)))OR(vt0.c0))))) WHERE ((NOT (((vt0.c1)IS(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1)IS(rt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))))<((((((rt0.c0)OR(vt0.c0)))OR(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))))<((((((rt0.c0)OR(vt0.c0)))OR(vt0.c0))))) WHERE ((NOT (((vt0.c1)IS(rt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1)<(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)<(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1)<(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)<(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1)<(rt0.c2)) IN ()));
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c1)!=(rt0.c2))) AND ((+ (rt0.c2))))) ORDER BY ((rt0.c1 COLLATE BINARY) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c1)!=(rt0.c2))) AND ((+ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE BINARY) IS TRUE) ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c1)!=(rt0.c2))) AND ((+ (rt0.c2))))) ORDER BY ((rt0.c1 COLLATE BINARY) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c1)!=(rt0.c2))) AND ((+ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE BINARY) IS TRUE) ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c1)!=(rt0.c2))) AND ((+ (rt0.c2))))) ORDER BY ((rt0.c1 COLLATE BINARY) IS TRUE) ASC;
SELECT ALL * FROM rt0 WHERE (rt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2 COLLATE NOCASE);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CASE UNLIKELY(DISTINCT rt0.c0)  WHEN ((((((((((((vt0.c1)AND(NULL)))OR(rt0.c2)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c0)) THEN (((rt0.c0))=((vt0.c0))) ELSE CAST(rt0.c2 AS INTEGER) END WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE UNLIKELY(DISTINCT rt0.c0)  WHEN ((((((((((((vt0.c1)AND(NULL)))OR(rt0.c2)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c0)) THEN (((rt0.c0))=((vt0.c0))) ELSE CAST(rt0.c2 AS INTEGER) END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CASE UNLIKELY(DISTINCT rt0.c0)  WHEN ((((((((((((vt0.c1)AND(NULL)))OR(rt0.c2)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c0)) THEN (((rt0.c0))=((vt0.c0))) ELSE CAST(rt0.c2 AS INTEGER) END WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE UNLIKELY(DISTINCT rt0.c0)  WHEN ((((((((((((vt0.c1)AND(NULL)))OR(rt0.c2)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c0)) THEN (((rt0.c0))=((vt0.c0))) ELSE CAST(rt0.c2 AS INTEGER) END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CASE UNLIKELY(DISTINCT rt0.c0)  WHEN ((((((((((((vt0.c1)AND(NULL)))OR(rt0.c2)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c0)) THEN (((rt0.c0))=((vt0.c0))) ELSE CAST(rt0.c2 AS INTEGER) END WHERE (rt0.c1);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c1)))||(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN (((vt0.c0))=((vt0.c0))) THEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)) WHEN IFNULL(DISTINCT vt0.c1, 1845821987) THEN ((NULL)!=(vt0.c0)) WHEN (((vt0.c1))<=((vt0.c0))) THEN ((vt0.c1)>>(vt0.c1)) ELSE ((vt0.c0) NOT NULL) END ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c1)))||(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN (((vt0.c0))=((vt0.c0))) THEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)) WHEN IFNULL(DISTINCT vt0.c1, 1845821987) THEN ((NULL)!=(vt0.c0)) WHEN (((vt0.c1))<=((vt0.c0))) THEN ((vt0.c1)>>(vt0.c1)) ELSE ((vt0.c0) NOT NULL) END ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c1)))||(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN (((vt0.c0))=((vt0.c0))) THEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)) WHEN IFNULL(DISTINCT vt0.c1, 1845821987) THEN ((NULL)!=(vt0.c0)) WHEN (((vt0.c1))<=((vt0.c0))) THEN ((vt0.c1)>>(vt0.c1)) ELSE ((vt0.c0) NOT NULL) END ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c1)))||(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN (((vt0.c0))=((vt0.c0))) THEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)) WHEN IFNULL(DISTINCT vt0.c1, 1845821987) THEN ((NULL)!=(vt0.c0)) WHEN (((vt0.c1))<=((vt0.c0))) THEN ((vt0.c1)>>(vt0.c1)) ELSE ((vt0.c0) NOT NULL) END ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c1)))||(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN (((vt0.c0))=((vt0.c0))) THEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)) WHEN IFNULL(DISTINCT vt0.c1, 1845821987) THEN ((NULL)!=(vt0.c0)) WHEN (((vt0.c1))<=((vt0.c0))) THEN ((vt0.c1)>>(vt0.c1)) ELSE ((vt0.c0) NOT NULL) END ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (NULL))) IS TRUE)) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c0 END)OR((vt0.c0 IN ()))))AND(((rt0.c2)>>(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (NULL))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c0 END)OR((vt0.c0 IN ()))))AND(((rt0.c2)>>(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (NULL))) IS TRUE)) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c0 END)OR((vt0.c0 IN ()))))AND(((rt0.c2)>>(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (NULL))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c0 END)OR((vt0.c0 IN ()))))AND(((rt0.c2)>>(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (NULL))) IS TRUE)) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c0 END)OR((vt0.c0 IN ()))))AND(((rt0.c2)>>(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((~ (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((~ (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((~ (vt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(0.1900147052810678 AS REAL) AS REAL)) ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC, CAST(x'410e' AS TEXT), CAST(((((vt0.c0)OR(vt0.c1)))OR(NULL)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(0.1900147052810678 AS REAL) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC, CAST(x'410e' AS TEXT), CAST(((((vt0.c0)OR(vt0.c1)))OR(NULL)) AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(0.1900147052810678 AS REAL) AS REAL)) ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC, CAST(x'410e' AS TEXT), CAST(((((vt0.c0)OR(vt0.c1)))OR(NULL)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(0.1900147052810678 AS REAL) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC, CAST(x'410e' AS TEXT), CAST(((((vt0.c0)OR(vt0.c1)))OR(NULL)) AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(0.1900147052810678 AS REAL) AS REAL)) ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC, CAST(x'410e' AS TEXT), CAST(((((vt0.c0)OR(vt0.c1)))OR(NULL)) AS BLOB) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c1) ISNULL) IN ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) ISNULL) IN ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), rt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c1) ISNULL) IN ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) ISNULL) IN ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), rt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c1) ISNULL) IN ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), rt0.c1)));
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c1)OR(vt0.c1)))OR(rt0.c2)))<((('\na\rԍ,卙*)u')||(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(vt0.c1)))OR(rt0.c2)))<((('\na\rԍ,卙*)u')||(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c1)OR(vt0.c1)))OR(rt0.c2)))<((('\na\rԍ,卙*)u')||(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(vt0.c1)))OR(rt0.c2)))<((('\na\rԍ,卙*)u')||(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c1)OR(vt0.c1)))OR(rt0.c2)))<((('\na\rԍ,卙*)u')||(rt0.c0)))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON TRIM(DISTINCT ((vt0.c0)<<(rt0.c1))) WHERE ((~ (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON TRIM(DISTINCT ((vt0.c0)<<(rt0.c1))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON TRIM(DISTINCT ((vt0.c0)<<(rt0.c1))) WHERE ((~ (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON TRIM(DISTINCT ((vt0.c0)<<(rt0.c1))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON TRIM(DISTINCT ((vt0.c0)<<(rt0.c1))) WHERE ((~ (vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((0.11987197517500214) NOT NULL) COLLATE NOCASE WHERE (((CAST(rt0.c0 AS TEXT))LIKE('')));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT))LIKE(''))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((0.11987197517500214) NOT NULL) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((0.11987197517500214) NOT NULL) COLLATE NOCASE WHERE (((CAST(rt0.c0 AS TEXT))LIKE('')));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT))LIKE(''))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((0.11987197517500214) NOT NULL) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((0.11987197517500214) NOT NULL) COLLATE NOCASE WHERE (((CAST(rt0.c0 AS TEXT))LIKE('')));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)|(rt0.c1)) AS BLOB) WHERE ((~ ((rt0.c1 IN (rt0.c2))))) ORDER BY ((NULL) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))AND('m/u&'))) AND (x''));
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c1 IN (rt0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)|(rt0.c1)) AS BLOB) ORDER BY ((NULL) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))AND('m/u&'))) AND (x'')));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)|(rt0.c1)) AS BLOB) WHERE ((~ ((rt0.c1 IN (rt0.c2))))) ORDER BY ((NULL) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))AND('m/u&'))) AND (x''));
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c1 IN (rt0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)|(rt0.c1)) AS BLOB) ORDER BY ((NULL) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))AND('m/u&'))) AND (x'')));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)|(rt0.c1)) AS BLOB) WHERE ((~ ((rt0.c1 IN (rt0.c2))))) ORDER BY ((NULL) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))AND('m/u&'))) AND (x''));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((((((((rt0.c0)AND(0.31184212992947224)))OR(rt0.c0)))OR('3-/')))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((rt0.c0)AND(0.31184212992947224)))OR(rt0.c0)))OR('3-/')))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((((((((rt0.c0)AND(0.31184212992947224)))OR(rt0.c0)))OR('3-/')))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((rt0.c0)AND(0.31184212992947224)))OR(rt0.c0)))OR('3-/')))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((((((((rt0.c0)AND(0.31184212992947224)))OR(rt0.c0)))OR('3-/')))OR(rt0.c0)))));
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), TRIM(x'6434'), '62693346')) AND ((((vt0.c1) NOTNULL), (((NULL))<>((rt0.c0))), ((vt0.c1)<=(rt0.c1)))))) ORDER BY ((vt0.c1) ISNULL) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), TRIM(x'6434'), '62693346')) AND ((((vt0.c1) NOTNULL), (((NULL))!=((rt0.c0))), ((vt0.c1)<=(rt0.c1)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((vt0.c1) ISNULL) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), TRIM(x'6434'), '62693346')) AND ((((vt0.c1) NOTNULL), (((NULL))<>((rt0.c0))), ((vt0.c1)<=(rt0.c1)))))) ORDER BY ((vt0.c1) ISNULL) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), TRIM(x'6434'), '62693346')) AND ((((vt0.c1) NOTNULL), (((NULL))!=((rt0.c0))), ((vt0.c1)<=(rt0.c1)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((vt0.c1) ISNULL) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), TRIM(x'6434'), '62693346')) AND ((((vt0.c1) NOTNULL), (((NULL))<>((rt0.c0))), ((vt0.c1)<=(rt0.c1)))))) ORDER BY ((vt0.c1) ISNULL) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (- ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (- ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (- ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (- ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (- ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)IS NOT(rt0.c0))) NOT BETWEEN (x'8a1f') AND (CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS NOT(rt0.c0))) NOT BETWEEN (x'8a1f') AND (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)IS NOT(rt0.c0))) NOT BETWEEN (x'8a1f') AND (CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS NOT(rt0.c0))) NOT BETWEEN (x'8a1f') AND (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)IS NOT(rt0.c0))) NOT BETWEEN (x'8a1f') AND (CAST(rt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1) NOT NULL))OR(((vt0.c1)GLOB(vt0.c1)))))AND(CAST(vt0.c0 AS BLOB)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) NOT NULL))OR(((vt0.c1)GLOB(vt0.c1)))))AND(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1) NOT NULL))OR(((vt0.c1)GLOB(vt0.c1)))))AND(CAST(vt0.c0 AS BLOB)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) NOT NULL))OR(((vt0.c1)GLOB(vt0.c1)))))AND(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1) NOT NULL))OR(((vt0.c1)GLOB(vt0.c1)))))AND(CAST(vt0.c0 AS BLOB)))) ORDER BY NULL;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(-720282489 AS NUMERIC) COLLATE RTRIM) ORDER BY (~ (((((vt0.c1)OR(rt0.c1)))AND(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(-720282489 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (((((vt0.c1)OR(rt0.c1)))AND(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(-720282489 AS NUMERIC) COLLATE RTRIM) ORDER BY (~ (((((vt0.c1)OR(rt0.c1)))AND(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(-720282489 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (((((vt0.c1)OR(rt0.c1)))AND(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(-720282489 AS NUMERIC) COLLATE RTRIM) ORDER BY (~ (((((vt0.c1)OR(rt0.c1)))AND(vt0.c1))))  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE ((rt0.c1 IN (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((rt0.c1 IN (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((rt0.c1 IN (vt0.c0)) COLLATE BINARY);
SELECT * FROM rt0, vt0 WHERE (CASE (rt0.c2 IN ())  WHEN CASE 0.08420133814787778  WHEN rt0.c1 THEN vt0.c1 END THEN x'3f30' COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c2 IN ())  WHEN CASE 0.08420133814787778  WHEN rt0.c1 THEN vt0.c1 END THEN x'3f30' COLLATE NOCASE END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE (rt0.c2 IN ())  WHEN CASE 0.08420133814787778  WHEN rt0.c1 THEN vt0.c1 END THEN x'3f30' COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c2 IN ())  WHEN CASE 0.08420133814787778  WHEN rt0.c1 THEN vt0.c1 END THEN x'3f30' COLLATE NOCASE END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE (rt0.c2 IN ())  WHEN CASE 0.08420133814787778  WHEN rt0.c1 THEN vt0.c1 END THEN x'3f30' COLLATE NOCASE END);
SELECT * FROM rt0 WHERE (x'') ORDER BY (NULL IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY (NULL IN ())  NULLS FIRST);
SELECT * FROM rt0 WHERE (x'') ORDER BY (NULL IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY (NULL IN ())  NULLS FIRST);
SELECT * FROM rt0 WHERE (x'') ORDER BY (NULL IN ())  NULLS FIRST;
SELECT * FROM vt0 WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (vt0.c0)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2) NOT BETWEEN (((0.30673873122564577) BETWEEN (NULL) AND (vt0.c1))) AND (rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (((0.30673873122564577) BETWEEN (NULL) AND (vt0.c1))) AND (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2) NOT BETWEEN (((0.30673873122564577) BETWEEN (NULL) AND (vt0.c1))) AND (rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (((0.30673873122564577) BETWEEN (NULL) AND (vt0.c1))) AND (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2) NOT BETWEEN (((0.30673873122564577) BETWEEN (NULL) AND (vt0.c1))) AND (rt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE (((rt0.c0 COLLATE BINARY)<<(((((vt0.c1)AND(rt0.c0)))OR(NULL))))) ORDER BY PRINTF(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))), CAST(((vt0.c0)<=(rt0.c2)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)<<(((((vt0.c1)AND(rt0.c0)))OR(NULL))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY PRINTF(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))), CAST(((vt0.c0)<=(rt0.c2)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE (((rt0.c0 COLLATE BINARY)<<(((((vt0.c1)AND(rt0.c0)))OR(NULL))))) ORDER BY PRINTF(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))), CAST(((vt0.c0)<=(rt0.c2)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)<<(((((vt0.c1)AND(rt0.c0)))OR(NULL))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY PRINTF(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))), CAST(((vt0.c0)<=(rt0.c2)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE (((rt0.c0 COLLATE BINARY)<<(((((vt0.c1)AND(rt0.c0)))OR(NULL))))) ORDER BY PRINTF(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))), CAST(((vt0.c0)<=(rt0.c2)) AS NUMERIC)  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))) BETWEEN (((rt0.c2)==(rt0.c0))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))) BETWEEN (((rt0.c2)==(rt0.c0))) AND (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))) BETWEEN (((rt0.c2)==(rt0.c0))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))) BETWEEN (((rt0.c2)==(rt0.c0))) AND (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))) BETWEEN (((rt0.c2)==(rt0.c0))) AND (rt0.c0)));
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c1)<=(vt0.c1)) THEN vt0.c1 ELSE json_array(vt0.c1, rt0.c0) END) ORDER BY (('-1175689348')LIKE(vt0.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)<=(vt0.c1)) THEN vt0.c1 ELSE json_array(vt0.c1, rt0.c0) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (('-1175689348')LIKE(vt0.c1 COLLATE BINARY)) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c1)<=(vt0.c1)) THEN vt0.c1 ELSE json_array(vt0.c1, rt0.c0) END) ORDER BY (('-1175689348')LIKE(vt0.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)<=(vt0.c1)) THEN vt0.c1 ELSE json_array(vt0.c1, rt0.c0) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (('-1175689348')LIKE(vt0.c1 COLLATE BINARY)) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c1)<=(vt0.c1)) THEN vt0.c1 ELSE json_array(vt0.c1, rt0.c0) END) ORDER BY (('-1175689348')LIKE(vt0.c1 COLLATE BINARY)) ASC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS(vt0.c1))) NOT BETWEEN (((vt0.c0)*(vt0.c1))) AND ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS(vt0.c1))) NOT BETWEEN (((vt0.c0)*(vt0.c1))) AND ((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS(vt0.c1))) NOT BETWEEN (((vt0.c0)*(vt0.c1))) AND ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS(vt0.c1))) NOT BETWEEN (((vt0.c0)*(vt0.c1))) AND ((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS(vt0.c1))) NOT BETWEEN (((vt0.c0)*(vt0.c1))) AND ((+ (vt0.c1)))));
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))>((NULL, vt0.c1, vt0.c0))) THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END END) ORDER BY ((CASE WHEN vt0.c1 THEN x'' ELSE vt0.c1 END) BETWEEN (vt0.c1 COLLATE BINARY) AND ((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))>((NULL, vt0.c1, vt0.c0))) THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c1 THEN x'' ELSE vt0.c1 END) BETWEEN (vt0.c1 COLLATE BINARY) AND ((vt0.c0 IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))>((NULL, vt0.c1, vt0.c0))) THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END END) ORDER BY ((CASE WHEN vt0.c1 THEN x'' ELSE vt0.c1 END) BETWEEN (vt0.c1 COLLATE BINARY) AND ((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))>((NULL, vt0.c1, vt0.c0))) THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c1 THEN x'' ELSE vt0.c1 END) BETWEEN (vt0.c1 COLLATE BINARY) AND ((vt0.c0 IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))>((NULL, vt0.c1, vt0.c0))) THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END END) ORDER BY ((CASE WHEN vt0.c1 THEN x'' ELSE vt0.c1 END) BETWEEN (vt0.c1 COLLATE BINARY) AND ((vt0.c0 IN ()))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('篜NjH&**'))) NOT BETWEEN ((vt0.c0 IN ())) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('篜NjH&**'))) NOT BETWEEN ((vt0.c0 IN ())) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('篜NjH&**'))) NOT BETWEEN ((vt0.c0 IN ())) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('篜NjH&**'))) NOT BETWEEN ((vt0.c0 IN ())) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('篜NjH&**'))) NOT BETWEEN ((vt0.c0 IN ())) AND ((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(((((((((rt0.c2)OR(x'')))OR(vt0.c1)))OR(x'')))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((((((((rt0.c2)OR(x'')))OR(vt0.c1)))OR(x'')))AND(rt0.c2)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(((((((((rt0.c2)OR(x'')))OR(vt0.c1)))OR(x'')))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((((((((rt0.c2)OR(x'')))OR(vt0.c1)))OR(x'')))AND(rt0.c2)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(((((((((rt0.c2)OR(x'')))OR(vt0.c1)))OR(x'')))AND(rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c0) IS TRUE) COLLATE RTRIM WHERE (CAST((- (rt0.c1)) AS REAL)) ORDER BY ((((CAST(rt0.c2 AS BLOB))AND(((rt0.c1)>=(rt0.c1)))))AND(((rt0.c0) BETWEEN (0x3d4e9939) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c0) IS TRUE) COLLATE RTRIM ORDER BY ((((CAST(rt0.c2 AS BLOB))AND(((rt0.c1)>=(rt0.c1)))))AND(((rt0.c0) BETWEEN (0x3d4e9939) AND (rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c0) IS TRUE) COLLATE RTRIM WHERE (CAST((- (rt0.c1)) AS REAL)) ORDER BY ((((CAST(rt0.c2 AS BLOB))AND(((rt0.c1)>=(rt0.c1)))))AND(((rt0.c0) BETWEEN (0x3d4e9939) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c0) IS TRUE) COLLATE RTRIM ORDER BY ((((CAST(rt0.c2 AS BLOB))AND(((rt0.c1)>=(rt0.c1)))))AND(((rt0.c0) BETWEEN (0x3d4e9939) AND (rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c0) IS TRUE) COLLATE RTRIM WHERE (CAST((- (rt0.c1)) AS REAL)) ORDER BY ((((CAST(rt0.c2 AS BLOB))AND(((rt0.c1)>=(rt0.c1)))))AND(((rt0.c0) BETWEEN (0x3d4e9939) AND (rt0.c0)))) ASC;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(CAST('0Q' AS REAL) AS NUMERIC) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(CAST('0Q' AS REAL) AS NUMERIC));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(CAST('0Q' AS REAL) AS NUMERIC) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(CAST('0Q' AS REAL) AS NUMERIC));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(CAST('0Q' AS REAL) AS NUMERIC) WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND ((((vt0.c0))>((vt0.c1)))))) ORDER BY (((((NULL IN ()))AND((- (-35916023)))))AND(rt0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND ((((vt0.c0))>((vt0.c1)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((NULL IN ()))AND((- (-35916023)))))AND(rt0.c2)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND ((((vt0.c0))>((vt0.c1)))))) ORDER BY (((((NULL IN ()))AND((- (-35916023)))))AND(rt0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND ((((vt0.c0))>((vt0.c1)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((NULL IN ()))AND((- (-35916023)))))AND(rt0.c2)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT ((rt0.c0 IN ())))) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT ((rt0.c0 IN ())))) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT ((rt0.c0 IN ())))) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((TYPEOF(vt0.c1)) NOT BETWEEN (((rt0.c1) IS TRUE)) AND (CASE WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 END)) WHERE (CAST(HEX(vt0.c0) AS BLOB)) ORDER BY (((('1') IS TRUE))*((((vt0.c0))>=((rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(vt0.c0) AS BLOB)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((TYPEOF(vt0.c1)) NOT BETWEEN (((rt0.c1) IS TRUE)) AND (CASE WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 END)) ORDER BY (((('1') IS TRUE))*((((vt0.c0))>=((rt0.c2))))) DESC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((TYPEOF(vt0.c1)) NOT BETWEEN (((rt0.c1) IS TRUE)) AND (CASE WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 END)) WHERE (CAST(HEX(vt0.c0) AS BLOB)) ORDER BY (((('1') IS TRUE))*((((vt0.c0))>=((rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(vt0.c0) AS BLOB)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((TYPEOF(vt0.c1)) NOT BETWEEN (((rt0.c1) IS TRUE)) AND (CASE WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 END)) ORDER BY (((('1') IS TRUE))*((((vt0.c0))>=((rt0.c2))))) DESC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((TYPEOF(vt0.c1)) NOT BETWEEN (((rt0.c1) IS TRUE)) AND (CASE WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 END)) WHERE (CAST(HEX(vt0.c0) AS BLOB)) ORDER BY (((('1') IS TRUE))*((((vt0.c0))>=((rt0.c2))))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY json_patch(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)), (NOT (rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY json_patch(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)), (NOT (rt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY json_patch(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)), (NOT (rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY json_patch(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)), (NOT (rt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY json_patch(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)), (NOT (rt0.c0))) DESC  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY ((rt0.c1)LIKE(rt0.c1)) COLLATE RTRIM  NULLS LAST, ((((rt0.c1)>(rt0.c0)))-(rt0.c1 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1)LIKE(rt0.c1)) COLLATE RTRIM  NULLS LAST, ((((rt0.c1)>(rt0.c0)))-(rt0.c1 COLLATE BINARY)) ASC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY ((rt0.c1)LIKE(rt0.c1)) COLLATE RTRIM  NULLS LAST, ((((rt0.c1)>(rt0.c0)))-(rt0.c1 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1)LIKE(rt0.c1)) COLLATE RTRIM  NULLS LAST, ((((rt0.c1)>(rt0.c0)))-(rt0.c1 COLLATE BINARY)) ASC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY ((rt0.c1)LIKE(rt0.c1)) COLLATE RTRIM  NULLS LAST, ((((rt0.c1)>(rt0.c0)))-(rt0.c1 COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)!=(vt0.c1)) THEN ((vt0.c1) ISNULL) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)!=(vt0.c1)) THEN ((vt0.c1) ISNULL) ELSE x'' END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)!=(vt0.c1)) THEN ((vt0.c1) ISNULL) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)!=(vt0.c1)) THEN ((vt0.c1) ISNULL) ELSE x'' END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)!=(vt0.c1)) THEN ((vt0.c1) ISNULL) ELSE x'' END);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS TEXT) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (STRFTIME(rt0.c1 COLLATE BINARY, (NOT (rt0.c1)), load_extension(rt0.c2))) ORDER BY CAST(rt0.c1 AS INTEGER) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((STRFTIME(rt0.c1 COLLATE BINARY, (NOT (rt0.c1)), load_extension(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS INTEGER) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE (STRFTIME(rt0.c1 COLLATE BINARY, (NOT (rt0.c1)), load_extension(rt0.c2))) ORDER BY CAST(rt0.c1 AS INTEGER) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((STRFTIME(rt0.c1 COLLATE BINARY, (NOT (rt0.c1)), load_extension(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS INTEGER) COLLATE RTRIM);
SELECT * FROM vt0 NOT INDEXED WHERE (((vt0.c1 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE (((vt0.c1 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE (((vt0.c1 COLLATE BINARY) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (CAST(rt0.c0 AS TEXT))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL COLLATE RTRIM) ORDER BY (+ (NULL)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (NULL)) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL COLLATE RTRIM) ORDER BY (+ (NULL)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (NULL)) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL COLLATE RTRIM) ORDER BY (+ (NULL)) COLLATE RTRIM DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((~ (vt0.c0))) NOT BETWEEN (CASE WHEN rt0.c0 THEN x'32ce' ELSE rt0.c0 END) AND (((((vt0.c1)OR(rt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) NOT BETWEEN (CASE WHEN rt0.c0 THEN x'32ce' ELSE rt0.c0 END) AND (((((vt0.c1)OR(rt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((~ (vt0.c0))) NOT BETWEEN (CASE WHEN rt0.c0 THEN x'32ce' ELSE rt0.c0 END) AND (((((vt0.c1)OR(rt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) NOT BETWEEN (CASE WHEN rt0.c0 THEN x'32ce' ELSE rt0.c0 END) AND (((((vt0.c1)OR(rt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((~ (vt0.c0))) NOT BETWEEN (CASE WHEN rt0.c0 THEN x'32ce' ELSE rt0.c0 END) AND (((((vt0.c1)OR(rt0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (-1.214669692E9)))|(((vt0.c0)*(vt0.c1))))) ORDER BY (((vt0.c0)GLOB(vt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c0) AND (-1.214669692E9)))|(((vt0.c0)*(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)GLOB(vt0.c0)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (-1.214669692E9)))|(((vt0.c0)*(vt0.c1))))) ORDER BY (((vt0.c0)GLOB(vt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c0) AND (-1.214669692E9)))|(((vt0.c0)*(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)GLOB(vt0.c0)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (-1.214669692E9)))|(((vt0.c0)*(vt0.c1))))) ORDER BY (((vt0.c0)GLOB(vt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) BETWEEN ((((vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1))<((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c0)))) AND (vt0.c1 COLLATE RTRIM))) ORDER BY ((vt0.c0) NOT BETWEEN (CASE vt0.c1  WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '*' ELSE vt0.c1 END) AND ((vt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) BETWEEN ((((vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1))<((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c0)))) AND (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (CASE vt0.c1  WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '*' ELSE vt0.c1 END) AND ((vt0.c0 IN ()))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) BETWEEN ((((vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1))<((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c0)))) AND (vt0.c1 COLLATE RTRIM))) ORDER BY ((vt0.c0) NOT BETWEEN (CASE vt0.c1  WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '*' ELSE vt0.c1 END) AND ((vt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) BETWEEN ((((vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1))<((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c0)))) AND (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (CASE vt0.c1  WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '*' ELSE vt0.c1 END) AND ((vt0.c0 IN ()))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) BETWEEN ((((vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1))<((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c0)))) AND (vt0.c1 COLLATE RTRIM))) ORDER BY ((vt0.c0) NOT BETWEEN (CASE vt0.c1  WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '*' ELSE vt0.c1 END) AND ((vt0.c0 IN ()))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, CAST(vt0.c1 AS BLOB), ((vt0.c0) IS FALSE)))>=((CAST(vt0.c0 AS TEXT), CAST(vt0.c1 AS TEXT), ((vt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, CAST(vt0.c1 AS BLOB), ((vt0.c0) IS FALSE)))>=((CAST(vt0.c0 AS TEXT), CAST(vt0.c1 AS TEXT), ((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, CAST(vt0.c1 AS BLOB), ((vt0.c0) IS FALSE)))>=((CAST(vt0.c0 AS TEXT), CAST(vt0.c1 AS TEXT), ((vt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, CAST(vt0.c1 AS BLOB), ((vt0.c0) IS FALSE)))>=((CAST(vt0.c0 AS TEXT), CAST(vt0.c1 AS TEXT), ((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, CAST(vt0.c1 AS BLOB), ((vt0.c0) IS FALSE)))>=((CAST(vt0.c0 AS TEXT), CAST(vt0.c1 AS TEXT), ((vt0.c0) IS TRUE)))));
SELECT * FROM rt0 WHERE (((((CAST(rt0.c0 AS NUMERIC))AND((+ (rt0.c1)))))AND(((rt0.c1)|(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS NUMERIC))AND((+ (rt0.c1)))))AND(((rt0.c1)|(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((CAST(rt0.c0 AS NUMERIC))AND((+ (rt0.c1)))))AND(((rt0.c1)|(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS NUMERIC))AND((+ (rt0.c1)))))AND(((rt0.c1)|(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((CAST(rt0.c0 AS NUMERIC))AND((+ (rt0.c1)))))AND(((rt0.c1)|(rt0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) NOT NULL));
SELECT * FROM rt0 WHERE (((LIKELY(DISTINCT rt0.c1))LIKE((((rt0.c0))<=((rt0.c2)))))) ORDER BY CAST(CAST(rt0.c2 AS NUMERIC) AS BLOB) DESC  NULLS LAST, (((+ (rt0.c0))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT rt0.c1))LIKE((((rt0.c0))<=((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c2 AS NUMERIC) AS BLOB) DESC  NULLS LAST, (((+ (rt0.c0))) IS TRUE)  NULLS FIRST);
SELECT * FROM rt0 WHERE (((LIKELY(DISTINCT rt0.c1))LIKE((((rt0.c0))<=((rt0.c2)))))) ORDER BY CAST(CAST(rt0.c2 AS NUMERIC) AS BLOB) DESC  NULLS LAST, (((+ (rt0.c0))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT rt0.c1))LIKE((((rt0.c0))<=((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c2 AS NUMERIC) AS BLOB) DESC  NULLS LAST, (((+ (rt0.c0))) IS TRUE)  NULLS FIRST);
SELECT * FROM rt0 WHERE (((LIKELY(DISTINCT rt0.c1))LIKE((((rt0.c0))<=((rt0.c2)))))) ORDER BY CAST(CAST(rt0.c2 AS NUMERIC) AS BLOB) DESC  NULLS LAST, (((+ (rt0.c0))) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (MAX((- (rt0.c0)), ((rt0.c0)IS NOT(rt0.c0)), (('-541231601')GLOB(rt0.c2)), (((rt0.c1))>=((rt0.c2))), (- (rt0.c2)), ((rt0.c1)GLOB('1891507571'))));
SELECT SUM(count) FROM (SELECT ((MAX((- (rt0.c0)), ((rt0.c0)IS NOT(rt0.c0)), (('-541231601')GLOB(rt0.c2)), (((rt0.c1))>=((rt0.c2))), (- (rt0.c2)), ((rt0.c1)GLOB('1891507571')))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (MAX((- (rt0.c0)), ((rt0.c0)IS NOT(rt0.c0)), (('-541231601')GLOB(rt0.c2)), (((rt0.c1))>=((rt0.c2))), (- (rt0.c2)), ((rt0.c1)GLOB('1891507571'))));
SELECT SUM(count) FROM (SELECT ((MAX((- (rt0.c0)), ((rt0.c0)IS NOT(rt0.c0)), (('-541231601')GLOB(rt0.c2)), (((rt0.c1))>=((rt0.c2))), (- (rt0.c2)), ((rt0.c1)GLOB('1891507571')))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (MAX((- (rt0.c0)), ((rt0.c0)IS NOT(rt0.c0)), (('-541231601')GLOB(rt0.c2)), (((rt0.c1))>=((rt0.c2))), (- (rt0.c2)), ((rt0.c1)GLOB('1891507571'))));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY ((UPPER(vt0.c0)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((UPPER(vt0.c0)) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY ((UPPER(vt0.c0)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((UPPER(vt0.c0)) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY ((UPPER(vt0.c0)) NOTNULL)  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0) ISNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0) ISNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0) ISNULL)) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c0))<((vt0.c0)))) NOT NULL) WHERE ((((((rt0.c2 IN (vt0.c0)))AND(ABS(vt0.c0))))AND(((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2 IN (vt0.c0)))AND(ABS(vt0.c0))))AND(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c0))<((vt0.c0)))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c0))<((vt0.c0)))) NOT NULL) WHERE ((((((rt0.c2 IN (vt0.c0)))AND(ABS(vt0.c0))))AND(((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2 IN (vt0.c0)))AND(ABS(vt0.c0))))AND(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c0))<((vt0.c0)))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c0))<((vt0.c0)))) NOT NULL) WHERE ((((((rt0.c2 IN (vt0.c0)))AND(ABS(vt0.c0))))AND(((rt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0 IN ())))>=((((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN ())))>=((((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0 IN ())))>=((((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN ())))>=((((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0 IN ())))>=((((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)>(rt0.c0)) AS NUMERIC)) ORDER BY (((rt0.c0) ISNULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)>(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) ISNULL) IN ()) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)>(rt0.c0)) AS NUMERIC)) ORDER BY (((rt0.c0) ISNULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)>(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) ISNULL) IN ()) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)>(rt0.c0)) AS NUMERIC)) ORDER BY (((rt0.c0) ISNULL) IN ()) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((x'') NOT BETWEEN ('DYH') AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN ('DYH') AND (vt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((x'') NOT BETWEEN ('DYH') AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN ('DYH') AND (vt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((x'') NOT BETWEEN ('DYH') AND (vt0.c1)));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1)IS(((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))) WHERE (((vt0.c0 COLLATE BINARY)<(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)<(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1)IS(((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1)IS(((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))) WHERE (((vt0.c0 COLLATE BINARY)<(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)<(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1)IS(((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1)IS(((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))) WHERE (((vt0.c0 COLLATE BINARY)<(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 END)));
SELECT * FROM rt0 WHERE (TYPEOF(((rt0.c1) IS FALSE))) ORDER BY '-460051994'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt0.c1) IS FALSE))) IS TRUE)  as count FROM rt0 ORDER BY '-460051994'  NULLS LAST);
SELECT * FROM rt0 WHERE (TYPEOF(((rt0.c1) IS FALSE))) ORDER BY '-460051994'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt0.c1) IS FALSE))) IS TRUE)  as count FROM rt0 ORDER BY '-460051994'  NULLS LAST);
SELECT * FROM rt0 WHERE (TYPEOF(((rt0.c1) IS FALSE))) ORDER BY '-460051994'  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((rt0.c0) IS TRUE), UNLIKELY(rt0.c2))) AND ((rt0.c1, (NOT (rt0.c2)), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((rt0.c0) IS TRUE), UNLIKELY(rt0.c2))) AND ((rt0.c1, (NOT (rt0.c2)), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((rt0.c0) IS TRUE), UNLIKELY(rt0.c2))) AND ((rt0.c1, (NOT (rt0.c2)), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((rt0.c0) IS TRUE), UNLIKELY(rt0.c2))) AND ((rt0.c1, (NOT (rt0.c2)), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((rt0.c0) IS TRUE), UNLIKELY(rt0.c2))) AND ((rt0.c1, (NOT (rt0.c2)), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))))));
SELECT ALL * FROM vt0 WHERE (((((((x'')OR(vt0.c0)))AND(x'88a2'))) NOT NULL)) ORDER BY (((NOT (7.16585589E8)))AND(COALESCE(vt0.c0, vt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')OR(vt0.c0)))AND(x'88a2'))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (7.16585589E8)))AND(COALESCE(vt0.c0, vt0.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((x'')OR(vt0.c0)))AND(x'88a2'))) NOT NULL)) ORDER BY (((NOT (7.16585589E8)))AND(COALESCE(vt0.c0, vt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')OR(vt0.c0)))AND(x'88a2'))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (7.16585589E8)))AND(COALESCE(vt0.c0, vt0.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((x'')OR(vt0.c0)))AND(x'88a2'))) NOT NULL)) ORDER BY (((NOT (7.16585589E8)))AND(COALESCE(vt0.c0, vt0.c1))) ASC  NULLS FIRST;
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (CAST(CASE WHEN rt0.c2 THEN 'XbQG!~?o' END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c2 THEN 'XbQG!~?o' END AS BLOB)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (CAST(CASE WHEN rt0.c2 THEN 'XbQG!~?o' END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c2 THEN 'XbQG!~?o' END AS BLOB)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (CAST(CASE WHEN rt0.c2 THEN 'XbQG!~?o' END AS BLOB));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2 IN ())) BETWEEN (x'e3c9') AND (IFNULL(rt0.c2, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) BETWEEN (x'e3c9') AND (IFNULL(rt0.c2, vt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2 IN ())) BETWEEN (x'e3c9') AND (IFNULL(rt0.c2, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) BETWEEN (x'e3c9') AND (IFNULL(rt0.c2, vt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2 IN ())) BETWEEN (x'e3c9') AND (IFNULL(rt0.c2, vt0.c1))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- ((NULL IN ())))) ORDER BY TOTAL_CHANGES() ASC, ((((((rt0.c2, rt0.c1, rt0.c1))==((vt0.c0, rt0.c0, rt0.c2)))))<((((((((((rt0.c1)OR(rt0.c0)))OR('')))AND(vt0.c1)))OR(vt0.c0))))) DESC  NULLS FIRST, (((+ (vt0.c1)))>>((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((rt0.c2, vt0.c1, vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((- ((NULL IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY TOTAL_CHANGES() ASC, ((((((rt0.c2, rt0.c1, rt0.c1))==((vt0.c0, rt0.c0, rt0.c2)))))<((((((((((rt0.c1)OR(rt0.c0)))OR('')))AND(vt0.c1)))OR(vt0.c0))))) DESC  NULLS FIRST, (((+ (vt0.c1)))>>((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((rt0.c2, vt0.c1, vt0.c0))))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- ((NULL IN ())))) ORDER BY TOTAL_CHANGES() ASC, ((((((rt0.c2, rt0.c1, rt0.c1))==((vt0.c0, rt0.c0, rt0.c2)))))<((((((((((rt0.c1)OR(rt0.c0)))OR('')))AND(vt0.c1)))OR(vt0.c0))))) DESC  NULLS FIRST, (((+ (vt0.c1)))>>((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((rt0.c2, vt0.c1, vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((- ((NULL IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY TOTAL_CHANGES() ASC, ((((((rt0.c2, rt0.c1, rt0.c1))==((vt0.c0, rt0.c0, rt0.c2)))))<((((((((((rt0.c1)OR(rt0.c0)))OR('')))AND(vt0.c1)))OR(vt0.c0))))) DESC  NULLS FIRST, (((+ (vt0.c1)))>>((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((rt0.c2, vt0.c1, vt0.c0))))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- ((NULL IN ())))) ORDER BY TOTAL_CHANGES() ASC, ((((((rt0.c2, rt0.c1, rt0.c1))==((vt0.c0, rt0.c0, rt0.c2)))))<((((((((((rt0.c1)OR(rt0.c0)))OR('')))AND(vt0.c1)))OR(vt0.c0))))) DESC  NULLS FIRST, (((+ (vt0.c1)))>>((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((rt0.c2, vt0.c1, vt0.c0))))) ASC;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((~ (rt0.c0)) IN ()) WHERE (((rt0.c0 COLLATE NOCASE)*(NULLIF(NULL, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE)*(NULLIF(NULL, vt0.c1)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((~ (rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((~ (rt0.c0)) IN ()) WHERE (((rt0.c0 COLLATE NOCASE)*(NULLIF(NULL, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE)*(NULLIF(NULL, vt0.c1)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((~ (rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((~ (rt0.c0)) IN ()) WHERE (((rt0.c0 COLLATE NOCASE)*(NULLIF(NULL, vt0.c1))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2) BETWEEN (((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(rt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(rt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2) BETWEEN (((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(rt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(rt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2) BETWEEN (((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(rt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0)||(0xffffffffa475bd60)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)||(0Xffffffffa475bd60))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0)||(0xffffffffa475bd60)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)||(0Xffffffffa475bd60))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0)||(0xffffffffa475bd60)))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)+(rt0.c2)))OR(((rt0.c1) NOT NULL))))AND((- (rt0.c0))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)+(rt0.c2)))OR(((rt0.c1) NOT NULL))))AND((- (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)+(rt0.c2)))OR(((rt0.c1) NOT NULL))))AND((- (rt0.c0))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)+(rt0.c2)))OR(((rt0.c1) NOT NULL))))AND((- (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)+(rt0.c2)))OR(((rt0.c1) NOT NULL))))AND((- (rt0.c0))))) ORDER BY rt0.c1;
SELECT COUNT(*) FROM vt0, rt0 WHERE ('-9223372036854775808') ORDER BY LIKELIHOOD((~ (0.61929720809604)), 0.8721588156456348);
SELECT SUM(count) FROM (SELECT (('-9223372036854775808') IS TRUE)  as count FROM vt0, rt0 ORDER BY LIKELIHOOD((~ (0.61929720809604)), 0.8721588156456348));
SELECT COUNT(*) FROM vt0, rt0 WHERE ('-9223372036854775808') ORDER BY LIKELIHOOD((~ (0.61929720809604)), 0.8721588156456348);
SELECT SUM(count) FROM (SELECT (('-9223372036854775808') IS TRUE)  as count FROM vt0, rt0 ORDER BY LIKELIHOOD((~ (0.61929720809604)), 0.8721588156456348));
SELECT COUNT(*) FROM vt0, rt0 WHERE ('-9223372036854775808') ORDER BY LIKELIHOOD((~ (0.61929720809604)), 0.8721588156456348);
SELECT * FROM rt0, vt0 WHERE ((- (((vt0.c0) NOT NULL)))) ORDER BY (((NOT (rt0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NOT (rt0.c0))) IS FALSE) ASC);
SELECT * FROM rt0, vt0 WHERE ((- (((vt0.c0) NOT NULL)))) ORDER BY (((NOT (rt0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NOT (rt0.c0))) IS FALSE) ASC);
SELECT * FROM rt0, vt0 WHERE ((- (((vt0.c0) NOT NULL)))) ORDER BY (((NOT (rt0.c0))) IS FALSE) ASC;
SELECT * FROM vt0 WHERE ((+ (CAST(vt0.c0 AS INTEGER)))) ORDER BY CASE ((vt0.c1)||(vt0.c0))  WHEN ((NULL) NOT NULL) THEN CASE 0x183d05fd  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END ASC;
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c1)||(vt0.c0))  WHEN ((NULL) NOT NULL) THEN CASE 0x183d05fd  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END ASC);
SELECT * FROM vt0 WHERE ((+ (CAST(vt0.c0 AS INTEGER)))) ORDER BY CASE ((vt0.c1)||(vt0.c0))  WHEN ((NULL) NOT NULL) THEN CASE 0x183d05fd  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END ASC;
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c1)||(vt0.c0))  WHEN ((NULL) NOT NULL) THEN CASE 0x183d05fd  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END ASC);
SELECT * FROM vt0 WHERE ((+ (CAST(vt0.c0 AS INTEGER)))) ORDER BY CASE ((vt0.c1)||(vt0.c0))  WHEN ((NULL) NOT NULL) THEN CASE 0x183d05fd  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END ASC;
SELECT * FROM vt0 WHERE ((- ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- ((vt0.c1 IN ()))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON '793865772' WHERE ((((rt0.c1 IN ()))<=(NULL)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))<=(NULL))) IS TRUE)  as count FROM vt0 NOT INDEXED LEFT OUTER JOIN rt0 ON '793865772');
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON '793865772' WHERE ((((rt0.c1 IN ()))<=(NULL)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))<=(NULL))) IS TRUE)  as count FROM vt0 NOT INDEXED LEFT OUTER JOIN rt0 ON '793865772');
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON '793865772' WHERE ((((rt0.c1 IN ()))<=(NULL)));
SELECT * FROM rt0, vt0 WHERE ((CASE vt0.c1  WHEN rt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN '~9m9O7JJ>' END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c1  WHEN rt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN '~9m9O7JJ>' END IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((CASE vt0.c1  WHEN rt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN '~9m9O7JJ>' END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c1  WHEN rt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN '~9m9O7JJ>' END IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((CASE vt0.c1  WHEN rt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN '~9m9O7JJ>' END IN ()));
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2))) NOT BETWEEN (NULL) AND (CASE vt0.c0  WHEN x'' THEN rt0.c0 ELSE rt0.c2 END)) WHERE (((((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))AND(((rt0.c0) IS FALSE))))AND('0.3387994249870615')))OR(rt0.c2 COLLATE BINARY)))AND(('''4d6' IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))AND(((rt0.c0) IS FALSE))))AND('0.3387994249870615')))OR(rt0.c2 COLLATE BINARY)))AND(('''4d6' IN ())))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2))) NOT BETWEEN (NULL) AND (CASE vt0.c0  WHEN x'' THEN rt0.c0 ELSE rt0.c2 END)));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2))) NOT BETWEEN (NULL) AND (CASE vt0.c0  WHEN x'' THEN rt0.c0 ELSE rt0.c2 END)) WHERE (((((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))AND(((rt0.c0) IS FALSE))))AND('0.3387994249870615')))OR(rt0.c2 COLLATE BINARY)))AND(('''4d6' IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))AND(((rt0.c0) IS FALSE))))AND('0.3387994249870615')))OR(rt0.c2 COLLATE BINARY)))AND(('''4d6' IN ())))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2))) NOT BETWEEN (NULL) AND (CASE vt0.c0  WHEN x'' THEN rt0.c0 ELSE rt0.c2 END)));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2))) NOT BETWEEN (NULL) AND (CASE vt0.c0  WHEN x'' THEN rt0.c0 ELSE rt0.c2 END)) WHERE (((((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))AND(((rt0.c0) IS FALSE))))AND('0.3387994249870615')))OR(rt0.c2 COLLATE BINARY)))AND(('''4d6' IN ()))));
SELECT ALL * FROM vt0, rt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(rt0.c2)))IS NOT(0Xffffffff8a1f5664)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)OR(vt0.c1)))AND(rt0.c2)))IS NOT(0Xffffffff8a1f5664))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(rt0.c2)))IS NOT(0Xffffffff8a1f5664)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)OR(vt0.c1)))AND(rt0.c2)))IS NOT(0Xffffffff8a1f5664))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(rt0.c2)))IS NOT(0Xffffffff8a1f5664)));
SELECT * FROM vt0 INNER JOIN rt0 ON ((rt0.c1) NOT NULL) COLLATE BINARY WHERE (((((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)))AND('2034232014')))AND(vt0.c1))) BETWEEN ('X,PD') AND (((rt0.c2)>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)))AND('2034232014')))AND(vt0.c1))) BETWEEN ('X,PD') AND (((rt0.c2)>=(rt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c1) NOT NULL) COLLATE BINARY);
SELECT * FROM vt0 INNER JOIN rt0 ON ((rt0.c1) NOT NULL) COLLATE BINARY WHERE (((((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)))AND('2034232014')))AND(vt0.c1))) BETWEEN ('X,PD') AND (((rt0.c2)>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)))AND('2034232014')))AND(vt0.c1))) BETWEEN ('X,PD') AND (((rt0.c2)>=(rt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c1) NOT NULL) COLLATE BINARY);
SELECT * FROM vt0 INNER JOIN rt0 ON ((rt0.c1) NOT NULL) COLLATE BINARY WHERE (((((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)))AND('2034232014')))AND(vt0.c1))) BETWEEN ('X,PD') AND (((rt0.c2)>=(rt0.c1)))));
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT NULL)) ORDER BY ((x'')OR(((((vt0.c1)AND(NULL)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((x'')OR(((((vt0.c1)AND(NULL)))AND(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT NULL)) ORDER BY ((x'')OR(((((vt0.c1)AND(NULL)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((x'')OR(((((vt0.c1)AND(NULL)))AND(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT NULL)) ORDER BY ((x'')OR(((((vt0.c1)AND(NULL)))AND(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (NULL IN ()) WHERE (((json_patch(rt0.c2, rt0.c0))|((((vt0.c0, rt0.c1, '1924976671', rt0.c0, rt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, '-827716967', rt0.c0, rt0.c0)) AND ((vt0.c1, x'', rt0.c1, NULL, rt0.c1)))))) ORDER BY TIME(CAST('0.10964852777252088' AS NUMERIC), (('') BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c2)>(rt0.c2)))  NULLS FIRST, (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END IN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((json_patch(rt0.c2, rt0.c0))|((((vt0.c0, rt0.c1, '1924976671', rt0.c0, rt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, '-827716967', rt0.c0, rt0.c0)) AND ((vt0.c1, x'', rt0.c1, NULL, rt0.c1)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (NULL IN ()) ORDER BY TIME(CAST('0.10964852777252088' AS NUMERIC), (('') BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c2)>(rt0.c2)))  NULLS FIRST, (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END IN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (NULL IN ()) WHERE (((json_patch(rt0.c2, rt0.c0))|((((vt0.c0, rt0.c1, '1924976671', rt0.c0, rt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, '-827716967', rt0.c0, rt0.c0)) AND ((vt0.c1, x'', rt0.c1, NULL, rt0.c1)))))) ORDER BY TIME(CAST('0.10964852777252088' AS NUMERIC), (('') BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c2)>(rt0.c2)))  NULLS FIRST, (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END IN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((json_patch(rt0.c2, rt0.c0))|((((vt0.c0, rt0.c1, '1924976671', rt0.c0, rt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, '-827716967', rt0.c0, rt0.c0)) AND ((vt0.c1, x'', rt0.c1, NULL, rt0.c1)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (NULL IN ()) ORDER BY TIME(CAST('0.10964852777252088' AS NUMERIC), (('') BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c2)>(rt0.c2)))  NULLS FIRST, (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END IN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (NULL IN ()) WHERE (((json_patch(rt0.c2, rt0.c0))|((((vt0.c0, rt0.c1, '1924976671', rt0.c0, rt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, '-827716967', rt0.c0, rt0.c0)) AND ((vt0.c1, x'', rt0.c1, NULL, rt0.c1)))))) ORDER BY TIME(CAST('0.10964852777252088' AS NUMERIC), (('') BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c2)>(rt0.c2)))  NULLS FIRST, (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END IN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))) ASC;
SELECT ALL * FROM rt0, vt0 WHERE ('}8#') ORDER BY UNLIKELY(DISTINCT 0.16369510621443528);
SELECT SUM(count) FROM (SELECT (('}8#') IS TRUE)  as count FROM rt0, vt0 ORDER BY UNLIKELY(DISTINCT 0.16369510621443528));
SELECT ALL * FROM rt0, vt0 WHERE ('}8#') ORDER BY UNLIKELY(DISTINCT 0.16369510621443528);
SELECT SUM(count) FROM (SELECT (('}8#') IS TRUE)  as count FROM rt0, vt0 ORDER BY UNLIKELY(DISTINCT 0.16369510621443528));
SELECT ALL * FROM rt0, vt0 WHERE ('}8#') ORDER BY UNLIKELY(DISTINCT 0.16369510621443528);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (((rt0.c1 IN (rt0.c0)))AND(((vt0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1 IN (rt0.c0)))AND(((vt0.c0) ISNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (((rt0.c1 IN (rt0.c0)))AND(((vt0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1 IN (rt0.c0)))AND(((vt0.c0) ISNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (((rt0.c1 IN (rt0.c0)))AND(((vt0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((2086011660, ((((vt0.c1)OR(-784687685)))OR(rt0.c0)), CAST(rt0.c2 AS BLOB))) AND ((TRIM(DISTINCT rt0.c1, 0.6449101128935757), ((((rt0.c2)OR('0.059621823722342704')))OR(rt0.c0)), ((rt0.c2) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((2086011660, ((((vt0.c1)OR(-784687685)))OR(rt0.c0)), CAST(rt0.c2 AS BLOB))) AND ((TRIM(DISTINCT rt0.c1, 0.6449101128935757), ((((rt0.c2)OR('0.059621823722342704')))OR(rt0.c0)), ((rt0.c2) IS FALSE))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((2086011660, ((((vt0.c1)OR(-784687685)))OR(rt0.c0)), CAST(rt0.c2 AS BLOB))) AND ((TRIM(DISTINCT rt0.c1, 0.6449101128935757), ((((rt0.c2)OR('0.059621823722342704')))OR(rt0.c0)), ((rt0.c2) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((2086011660, ((((vt0.c1)OR(-784687685)))OR(rt0.c0)), CAST(rt0.c2 AS BLOB))) AND ((TRIM(DISTINCT rt0.c1, 0.6449101128935757), ((((rt0.c2)OR('0.059621823722342704')))OR(rt0.c0)), ((rt0.c2) IS FALSE))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((2086011660, ((((vt0.c1)OR(-784687685)))OR(rt0.c0)), CAST(rt0.c2 AS BLOB))) AND ((TRIM(DISTINCT rt0.c1, 0.6449101128935757), ((((rt0.c2)OR('0.059621823722342704')))OR(rt0.c0)), ((rt0.c2) IS FALSE)))));
SELECT ALL * FROM vt0 WHERE (x'' COLLATE RTRIM) ORDER BY ((vt0.c1 COLLATE BINARY) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE BINARY) ISNULL) DESC);
SELECT ALL * FROM vt0 WHERE (x'' COLLATE RTRIM) ORDER BY ((vt0.c1 COLLATE BINARY) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE BINARY) ISNULL) DESC);
SELECT ALL * FROM vt0 WHERE (x'' COLLATE RTRIM) ORDER BY ((vt0.c1 COLLATE BINARY) ISNULL) DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))OR(rt0.c1))) NOT BETWEEN (((vt0.c1) NOT BETWEEN ('(U') AND (rt0.c1))) AND ((x'82980cce' IN (rt0.c1))))) ORDER BY NULL, x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))OR(rt0.c1))) NOT BETWEEN (((vt0.c1) NOT BETWEEN ('(U') AND (rt0.c1))) AND ((x'82980cce' IN (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL, x'' DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))OR(rt0.c1))) NOT BETWEEN (((vt0.c1) NOT BETWEEN ('(U') AND (rt0.c1))) AND ((x'82980cce' IN (rt0.c1))))) ORDER BY NULL, x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))OR(rt0.c1))) NOT BETWEEN (((vt0.c1) NOT BETWEEN ('(U') AND (rt0.c1))) AND ((x'82980cce' IN (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL, x'' DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))OR(rt0.c1))) NOT BETWEEN (((vt0.c1) NOT BETWEEN ('(U') AND (rt0.c1))) AND ((x'82980cce' IN (rt0.c1))))) ORDER BY NULL, x'' DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('') ORDER BY ((((((((6.86251374E8)AND(((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(rt0.c1)))OR(((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)))))OR(CAST(vt0.c1 AS REAL)))  NULLS FIRST, vt0.c0, CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c2 END AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((6.86251374E8)AND(((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(rt0.c1)))OR(((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)))))OR(CAST(vt0.c1 AS REAL)))  NULLS FIRST, vt0.c0, CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c2 END AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('') ORDER BY ((((((((6.86251374E8)AND(((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(rt0.c1)))OR(((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)))))OR(CAST(vt0.c1 AS REAL)))  NULLS FIRST, vt0.c0, CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c2 END AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((6.86251374E8)AND(((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(rt0.c1)))OR(((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)))))OR(CAST(vt0.c1 AS REAL)))  NULLS FIRST, vt0.c0, CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c2 END AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('') ORDER BY ((((((((6.86251374E8)AND(((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(rt0.c1)))OR(((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)))))OR(CAST(vt0.c1 AS REAL)))  NULLS FIRST, vt0.c0, CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c2 END AS NUMERIC) ASC;
SELECT ALL * FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 END) ISNULL)) ORDER BY CASE ((0.44974866455450835)>(rt0.c0))  WHEN (((vt0.c0))=((vt0.c0))) THEN (vt0.c1 IN ()) ELSE (~ (rt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 END) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((0.44974866455450835)>(rt0.c0))  WHEN (((vt0.c0))==((vt0.c0))) THEN (vt0.c1 IN ()) ELSE (~ (rt0.c2)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 END) ISNULL)) ORDER BY CASE ((0.44974866455450835)>(rt0.c0))  WHEN (((vt0.c0))=((vt0.c0))) THEN (vt0.c1 IN ()) ELSE (~ (rt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 END) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((0.44974866455450835)>(rt0.c0))  WHEN (((vt0.c0))==((vt0.c0))) THEN (vt0.c1 IN ()) ELSE (~ (rt0.c2)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 END) ISNULL)) ORDER BY CASE ((0.44974866455450835)>(rt0.c0))  WHEN (((vt0.c0))=((vt0.c0))) THEN (vt0.c1 IN ()) ELSE (~ (rt0.c2)) END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))) NOT BETWEEN (((vt0.c1)>=(vt0.c0))) AND (((vt0.c1) NOT NULL)))) ORDER BY ((vt0.c1)AND((vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))) NOT BETWEEN (((vt0.c1)>=(vt0.c0))) AND (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)AND((vt0.c0 IN (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))) NOT BETWEEN (((vt0.c1)>=(vt0.c0))) AND (((vt0.c1) NOT NULL)))) ORDER BY ((vt0.c1)AND((vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))) NOT BETWEEN (((vt0.c1)>=(vt0.c0))) AND (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)AND((vt0.c0 IN (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))) NOT BETWEEN (((vt0.c1)>=(vt0.c0))) AND (((vt0.c1) NOT NULL)))) ORDER BY ((vt0.c1)AND((vt0.c0 IN (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)AND(-541231601)))AND(((vt0.c0)/(vt0.c0))))) ORDER BY vt0.c0 ASC, (NOT ((~ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)AND(-541231601)))AND(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC, (NOT ((~ (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)AND(-541231601)))AND(((vt0.c0)/(vt0.c0))))) ORDER BY vt0.c0 ASC, (NOT ((~ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)AND(-541231601)))AND(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC, (NOT ((~ (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)AND(-541231601)))AND(((vt0.c0)/(vt0.c0))))) ORDER BY vt0.c0 ASC, (NOT ((~ (vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((x'', rt0.c0, rt0.c2)) NOT BETWEEN (((('0.7511295123860215')-(rt0.c2)), CAST(rt0.c0 AS BLOB), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((0.035116990571247286, (rt0.c1 IN ()), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((''))))))) ORDER BY (LIKELY(rt0.c2) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((x'', rt0.c0, rt0.c2)) NOT BETWEEN (((('0.7511295123860215')-(rt0.c2)), CAST(rt0.c0 AS BLOB), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((0.035116990571247286, (rt0.c1 IN ()), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((''))))))) IS TRUE)  as count FROM rt0 ORDER BY (LIKELY(rt0.c2) IN ()) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((x'', rt0.c0, rt0.c2)) NOT BETWEEN (((('0.7511295123860215')-(rt0.c2)), CAST(rt0.c0 AS BLOB), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((0.035116990571247286, (rt0.c1 IN ()), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((''))))))) ORDER BY (LIKELY(rt0.c2) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((x'', rt0.c0, rt0.c2)) NOT BETWEEN (((('0.7511295123860215')-(rt0.c2)), CAST(rt0.c0 AS BLOB), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((0.035116990571247286, (rt0.c1 IN ()), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((''))))))) IS TRUE)  as count FROM rt0 ORDER BY (LIKELY(rt0.c2) IN ()) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((x'', rt0.c0, rt0.c2)) NOT BETWEEN (((('0.7511295123860215')-(rt0.c2)), CAST(rt0.c0 AS BLOB), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((0.035116990571247286, (rt0.c1 IN ()), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((''))))))) ORDER BY (LIKELY(rt0.c2) IN ()) DESC;
SELECT ALL * FROM vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE 'Jg%' END)AND(((((x'')AND(vt0.c0)))AND(vt0.c0)))))OR(CASE vt0.c1  WHEN '0.1857741396260848' THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE 'Jg%' END)AND(((((x'')AND(vt0.c0)))AND(vt0.c0)))))OR(CASE vt0.c1  WHEN '0.1857741396260848' THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE 'Jg%' END)AND(((((x'')AND(vt0.c0)))AND(vt0.c0)))))OR(CASE vt0.c1  WHEN '0.1857741396260848' THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE 'Jg%' END)AND(((((x'')AND(vt0.c0)))AND(vt0.c0)))))OR(CASE vt0.c1  WHEN '0.1857741396260848' THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE 'Jg%' END)AND(((((x'')AND(vt0.c0)))AND(vt0.c0)))))OR(CASE vt0.c1  WHEN '0.1857741396260848' THEN vt0.c1 END)));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((rt0.c2 COLLATE NOCASE) BETWEEN (((rt0.c1) IS FALSE)) AND (rt0.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE NOCASE) BETWEEN (((rt0.c1) IS FALSE)) AND (rt0.c0 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((rt0.c2 COLLATE NOCASE) BETWEEN (((rt0.c1) IS FALSE)) AND (rt0.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE NOCASE) BETWEEN (((rt0.c1) IS FALSE)) AND (rt0.c0 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((rt0.c2 COLLATE NOCASE) BETWEEN (((rt0.c1) IS FALSE)) AND (rt0.c0 COLLATE NOCASE)) DESC;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0 COLLATE RTRIM) IS FALSE) WHERE (((((CAST(rt0.c0 AS BLOB))OR(-214018359)))AND((rt0.c2 IN ())))) ORDER BY GLOB(((x'') IS FALSE), ABS(1.077382294E9))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS BLOB))OR(-214018359)))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0 COLLATE RTRIM) IS FALSE) ORDER BY GLOB(((x'') IS FALSE), ABS(1.077382294E9))  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0 COLLATE RTRIM) IS FALSE) WHERE (((((CAST(rt0.c0 AS BLOB))OR(-214018359)))AND((rt0.c2 IN ())))) ORDER BY GLOB(((x'') IS FALSE), ABS(1.077382294E9))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS BLOB))OR(-214018359)))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0 COLLATE RTRIM) IS FALSE) ORDER BY GLOB(((x'') IS FALSE), ABS(1.077382294E9))  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0 COLLATE RTRIM) IS FALSE) WHERE (((((CAST(rt0.c0 AS BLOB))OR(-214018359)))AND((rt0.c2 IN ())))) ORDER BY GLOB(((x'') IS FALSE), ABS(1.077382294E9))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c0) NOTNULL) AS INTEGER)) ORDER BY (- (((x'')%(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (((x'')%(rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c0) NOTNULL) AS INTEGER)) ORDER BY (- (((x'')%(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (((x'')%(rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c0) NOTNULL) AS INTEGER)) ORDER BY (- (((x'')%(rt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKE(0X34fb0d87, (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((LIKE(0X34fb0d87, (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKE(0X34fb0d87, (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((LIKE(0X34fb0d87, (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKE(0X34fb0d87, (vt0.c0 IN ())));
SELECT * FROM vt0, rt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY NULLIF(((vt0.c0)OR(vt0.c1)), ((vt0.c1)&(vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULLIF(((vt0.c0)OR(vt0.c1)), ((vt0.c1)&(vt0.c1))) DESC);
SELECT * FROM vt0, rt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY NULLIF(((vt0.c0)OR(vt0.c1)), ((vt0.c1)&(vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULLIF(((vt0.c0)OR(vt0.c1)), ((vt0.c1)&(vt0.c1))) DESC);
SELECT * FROM vt0, rt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY NULLIF(((vt0.c0)OR(vt0.c1)), ((vt0.c1)&(vt0.c1))) DESC;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN 'y#' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 'y#' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN 'y#' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 'y#' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN 'y#' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (NULL) AND (((vt0.c0) BETWEEN (1.894370087E9) AND (vt0.c0))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (NULL) AND (((vt0.c0) BETWEEN (1.894370087E9) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (NULL) AND (((vt0.c0) BETWEEN (1.894370087E9) AND (vt0.c0))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (NULL) AND (((vt0.c0) BETWEEN (1.894370087E9) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (NULL) AND (((vt0.c0) BETWEEN (1.894370087E9) AND (vt0.c0))))) ORDER BY vt0.c1 ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((0.07954233464695593)) NOT BETWEEN ((json('dy7!'))) AND ((CAST(x'' AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((0.07954233464695593)) NOT BETWEEN ((json('dy7!'))) AND ((CAST(x'' AS BLOB))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((0.07954233464695593)) NOT BETWEEN ((json('dy7!'))) AND ((CAST(x'' AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((0.07954233464695593)) NOT BETWEEN ((json('dy7!'))) AND ((CAST(x'' AS BLOB))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (-1.798995518E9))) ORDER BY ((((((((x'')AND('')))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c1)) COLLATE RTRIM  NULLS FIRST, ((((((vt0.c1) NOTNULL))OR(((((((((rt0.c2)OR(vt0.c0)))OR('-507580423')))OR(vt0.c0)))AND(vt0.c0)))))AND(((rt0.c0)IS(vt0.c0))))  NULLS FIRST, (((UPPER(DISTINCT vt0.c0), ((rt0.c0)|(rt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.20266951279821788 END))<=((((rt0.c2) NOTNULL), ((vt0.c1)IS NOT(rt0.c1)), rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((~ (-1.798995518E9))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((x'')AND('')))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c1)) COLLATE RTRIM  NULLS FIRST, ((((((vt0.c1) NOTNULL))OR(((((((((rt0.c2)OR(vt0.c0)))OR('-507580423')))OR(vt0.c0)))AND(vt0.c0)))))AND(((rt0.c0)IS(vt0.c0))))  NULLS FIRST, (((UPPER(DISTINCT vt0.c0), ((rt0.c0)|(rt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.20266951279821788 END))<=((((rt0.c2) NOTNULL), ((vt0.c1)IS NOT(rt0.c1)), rt0.c0 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (-1.798995518E9))) ORDER BY ((((((((x'')AND('')))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c1)) COLLATE RTRIM  NULLS FIRST, ((((((vt0.c1) NOTNULL))OR(((((((((rt0.c2)OR(vt0.c0)))OR('-507580423')))OR(vt0.c0)))AND(vt0.c0)))))AND(((rt0.c0)IS(vt0.c0))))  NULLS FIRST, (((UPPER(DISTINCT vt0.c0), ((rt0.c0)|(rt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.20266951279821788 END))<=((((rt0.c2) NOTNULL), ((vt0.c1)IS NOT(rt0.c1)), rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((~ (-1.798995518E9))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((x'')AND('')))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c1)) COLLATE RTRIM  NULLS FIRST, ((((((vt0.c1) NOTNULL))OR(((((((((rt0.c2)OR(vt0.c0)))OR('-507580423')))OR(vt0.c0)))AND(vt0.c0)))))AND(((rt0.c0)IS(vt0.c0))))  NULLS FIRST, (((UPPER(DISTINCT vt0.c0), ((rt0.c0)|(rt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.20266951279821788 END))<=((((rt0.c2) NOTNULL), ((vt0.c1)IS NOT(rt0.c1)), rt0.c0 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (-1.798995518E9))) ORDER BY ((((((((x'')AND('')))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c1)) COLLATE RTRIM  NULLS FIRST, ((((((vt0.c1) NOTNULL))OR(((((((((rt0.c2)OR(vt0.c0)))OR('-507580423')))OR(vt0.c0)))AND(vt0.c0)))))AND(((rt0.c0)IS(vt0.c0))))  NULLS FIRST, (((UPPER(DISTINCT vt0.c0), ((rt0.c0)|(rt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.20266951279821788 END))<=((((rt0.c2) NOTNULL), ((vt0.c1)IS NOT(rt0.c1)), rt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOTNULL));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)%(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)%(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)%(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)%(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)%(rt0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c2)OR(vt0.c1)))OR(rt0.c2)))&((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(vt0.c1)))OR(rt0.c2)))&((+ (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c2)OR(vt0.c1)))OR(rt0.c2)))&((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(vt0.c1)))OR(rt0.c2)))&((+ (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c2)OR(vt0.c1)))OR(rt0.c2)))&((+ (rt0.c2)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (0xffffffffee2d41e6) AND (SQLITE_SOURCE_ID())) WHERE ((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) ORDER BY (((((((('◀!')OR((NOT (vt0.c0)))))OR(((rt0.c1) ISNULL))))OR(vt0.c1)))AND((((rt0.c1))>=((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (0Xffffffffee2d41e6) AND (SQLITE_SOURCE_ID())) ORDER BY (((((((('◀!')OR((NOT (vt0.c0)))))OR(((rt0.c1) ISNULL))))OR(vt0.c1)))AND((((rt0.c1))>=((vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (0xffffffffee2d41e6) AND (SQLITE_SOURCE_ID())) WHERE ((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) ORDER BY (((((((('◀!')OR((NOT (vt0.c0)))))OR(((rt0.c1) ISNULL))))OR(vt0.c1)))AND((((rt0.c1))>=((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (0Xffffffffee2d41e6) AND (SQLITE_SOURCE_ID())) ORDER BY (((((((('◀!')OR((NOT (vt0.c0)))))OR(((rt0.c1) ISNULL))))OR(vt0.c1)))AND((((rt0.c1))>=((vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (0xffffffffee2d41e6) AND (SQLITE_SOURCE_ID())) WHERE ((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) ORDER BY (((((((('◀!')OR((NOT (vt0.c0)))))OR(((rt0.c1) ISNULL))))OR(vt0.c1)))AND((((rt0.c1))>=((vt0.c0)))))  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (((NOT (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((NOT (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((NOT (vt0.c0)) IN ()));
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x''))))*((- (rt0.c2))))) ORDER BY ABS(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))  NULLS LAST, NULL, ((NULLIF(rt0.c1, rt0.c1)) NOT BETWEEN (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))) AND ((rt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x''))))*((- (rt0.c2))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ABS(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))  NULLS LAST, NULL, ((NULLIF(rt0.c1, rt0.c1)) NOT BETWEEN (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))) AND ((rt0.c1 IN ())))  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x''))))*((- (rt0.c2))))) ORDER BY ABS(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))  NULLS LAST, NULL, ((NULLIF(rt0.c1, rt0.c1)) NOT BETWEEN (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))) AND ((rt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x''))))*((- (rt0.c2))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ABS(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))  NULLS LAST, NULL, ((NULLIF(rt0.c1, rt0.c1)) NOT BETWEEN (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))) AND ((rt0.c1 IN ())))  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x''))))*((- (rt0.c2))))) ORDER BY ABS(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))  NULLS LAST, NULL, ((NULLIF(rt0.c1, rt0.c1)) NOT BETWEEN (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))) AND ((rt0.c1 IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL))<=((vt0.c0 IN ())))) ORDER BY (NOT (CASE WHEN vt0.c1 THEN NULL END));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL))<=((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CASE WHEN vt0.c1 THEN NULL END)));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL))<=((vt0.c0 IN ())))) ORDER BY (NOT (CASE WHEN vt0.c1 THEN NULL END));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL))<=((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CASE WHEN vt0.c1 THEN NULL END)));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL))<=((vt0.c0 IN ())))) ORDER BY (NOT (CASE WHEN vt0.c1 THEN NULL END));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS FALSE));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (- (rt0.c0)) COLLATE RTRIM COLLATE NOCASE WHERE ((((NOT (vt0.c0))) BETWEEN (rt0.c0) AND (((rt0.c0)||(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) BETWEEN (rt0.c0) AND (((rt0.c0)||(vt0.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (- (rt0.c0)) COLLATE RTRIM COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (- (rt0.c0)) COLLATE RTRIM COLLATE NOCASE WHERE ((((NOT (vt0.c0))) BETWEEN (rt0.c0) AND (((rt0.c0)||(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) BETWEEN (rt0.c0) AND (((rt0.c0)||(vt0.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (- (rt0.c0)) COLLATE RTRIM COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (- (rt0.c0)) COLLATE RTRIM COLLATE NOCASE WHERE ((((NOT (vt0.c0))) BETWEEN (rt0.c0) AND (((rt0.c0)||(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((((rt0.c0) IS TRUE))AND(COALESCE(rt0.c1, rt0.c0))))AND(((rt0.c0) NOT NULL)))) ORDER BY (NOT (LTRIM(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) IS TRUE))AND(COALESCE(rt0.c1, rt0.c0))))AND(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (NOT (LTRIM(vt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((((rt0.c0) IS TRUE))AND(COALESCE(rt0.c1, rt0.c0))))AND(((rt0.c0) NOT NULL)))) ORDER BY (NOT (LTRIM(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) IS TRUE))AND(COALESCE(rt0.c1, rt0.c0))))AND(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (NOT (LTRIM(vt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((((rt0.c0) IS TRUE))AND(COALESCE(rt0.c1, rt0.c0))))AND(((rt0.c0) NOT NULL)))) ORDER BY (NOT (LTRIM(vt0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)IS(vt0.c1)))%(''))) ORDER BY ((rt0.c2) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((x'' IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(vt0.c1)))%(''))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c2) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((x'' IN ()))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)IS(vt0.c1)))%(''))) ORDER BY ((rt0.c2) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((x'' IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(vt0.c1)))%(''))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c2) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((x'' IN ()))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)IS(vt0.c1)))%(''))) ORDER BY ((rt0.c2) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((x'' IN ()))) DESC;
SELECT * FROM rt0, vt0 WHERE (((((((vt0.c1) NOT NULL))OR(vt0.c0 COLLATE BINARY)))AND((('D4Fd')%(vt0.c0))))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) NOT NULL))OR(vt0.c0 COLLATE BINARY)))AND((('D4Fd')%(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1 DESC);
SELECT * FROM rt0, vt0 WHERE (((((((vt0.c1) NOT NULL))OR(vt0.c0 COLLATE BINARY)))AND((('D4Fd')%(vt0.c0))))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) NOT NULL))OR(vt0.c0 COLLATE BINARY)))AND((('D4Fd')%(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1 DESC);
SELECT * FROM rt0, vt0 WHERE (((((((vt0.c1) NOT NULL))OR(vt0.c0 COLLATE BINARY)))AND((('D4Fd')%(vt0.c0))))) ORDER BY rt0.c1 DESC;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON CASE ((((rt0.c0)AND(rt0.c2)))OR(vt0.c1))  WHEN (NOT (4.06652413E8)) THEN vt0.c1 END WHERE ((((rt0.c0))==((rt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0))==((rt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CASE ((((rt0.c0)AND(rt0.c2)))OR(vt0.c1))  WHEN (NOT (4.06652413E8)) THEN vt0.c1 END);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON CASE ((((rt0.c0)AND(rt0.c2)))OR(vt0.c1))  WHEN (NOT (4.06652413E8)) THEN vt0.c1 END WHERE ((((rt0.c0))==((rt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0))==((rt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CASE ((((rt0.c0)AND(rt0.c2)))OR(vt0.c1))  WHEN (NOT (4.06652413E8)) THEN vt0.c1 END);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON CASE ((((rt0.c0)AND(rt0.c2)))OR(vt0.c1))  WHEN (NOT (4.06652413E8)) THEN vt0.c1 END WHERE ((((rt0.c0))==((rt0.c1))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((('0.5284724251695282')) BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ((~ (rt0.c0)))) WHERE (CASE (rt0.c0 IN ())  WHEN rt0.c2 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY END) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 END) NOT NULL)  NULLS LAST, ((((rt0.c2)-(rt0.c2)))>=(((vt0.c0)>=(rt0.c2))))  NULLS LAST, CAST((NOT (rt0.c2)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c0 IN ())  WHEN rt0.c2 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((('0.5284724251695282')) BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ((~ (rt0.c0)))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 END) NOT NULL)  NULLS LAST, ((((rt0.c2)-(rt0.c2)))>=(((vt0.c0)>=(rt0.c2))))  NULLS LAST, CAST((NOT (rt0.c2)) AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((('0.5284724251695282')) BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ((~ (rt0.c0)))) WHERE (CASE (rt0.c0 IN ())  WHEN rt0.c2 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY END) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 END) NOT NULL)  NULLS LAST, ((((rt0.c2)-(rt0.c2)))>=(((vt0.c0)>=(rt0.c2))))  NULLS LAST, CAST((NOT (rt0.c2)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c0 IN ())  WHEN rt0.c2 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((('0.5284724251695282')) BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ((~ (rt0.c0)))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 END) NOT NULL)  NULLS LAST, ((((rt0.c2)-(rt0.c2)))>=(((vt0.c0)>=(rt0.c2))))  NULLS LAST, CAST((NOT (rt0.c2)) AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((('0.5284724251695282')) BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ((~ (rt0.c0)))) WHERE (CASE (rt0.c0 IN ())  WHEN rt0.c2 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY END) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 END) NOT NULL)  NULLS LAST, ((((rt0.c2)-(rt0.c2)))>=(((vt0.c0)>=(rt0.c2))))  NULLS LAST, CAST((NOT (rt0.c2)) AS BLOB) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, ((vt0.c0) IS FALSE))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c1, ABS(DISTINCT vt0.c1))))) ORDER BY (NOT (((vt0.c0) BETWEEN ('888868231') AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, ((vt0.c0) IS FALSE))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c1, ABS(DISTINCT vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) BETWEEN ('888868231') AND (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, ((vt0.c0) IS FALSE))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c1, ABS(DISTINCT vt0.c1))))) ORDER BY (NOT (((vt0.c0) BETWEEN ('888868231') AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, ((vt0.c0) IS FALSE))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c1, ABS(DISTINCT vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) BETWEEN ('888868231') AND (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, ((vt0.c0) IS FALSE))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c1, ABS(DISTINCT vt0.c1))))) ORDER BY (NOT (((vt0.c0) BETWEEN ('888868231') AND (vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)=(rt0.c0)) IN ())) ORDER BY '?o';
SELECT SUM(count) FROM (SELECT (((((rt0.c1)==(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY '?o');
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)=(rt0.c0)) IN ())) ORDER BY '?o';
SELECT SUM(count) FROM (SELECT (((((rt0.c1)==(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY '?o');
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)=(rt0.c0)) IN ())) ORDER BY '?o';
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN '4hL\r䈟-' ELSE vt0.c1 END AS NUMERIC)) ORDER BY COALESCE(DISTINCT vt0.c1, (('1166196703')IS NOT('r{䌝ZRYq'))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN '4hL\r䈟-' ELSE vt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT vt0.c1, (('1166196703')IS NOT('r{䌝ZRYq'))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN '4hL\r䈟-' ELSE vt0.c1 END AS NUMERIC)) ORDER BY COALESCE(DISTINCT vt0.c1, (('1166196703')IS NOT('r{䌝ZRYq'))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN '4hL\r䈟-' ELSE vt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT vt0.c1, (('1166196703')IS NOT('r{䌝ZRYq'))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN '4hL\r䈟-' ELSE vt0.c1 END AS NUMERIC)) ORDER BY COALESCE(DISTINCT vt0.c1, (('1166196703')IS NOT('r{䌝ZRYq'))) DESC;
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN (((+ (rt0.c0)))) AND ((vt0.c0 COLLATE RTRIM))) WHERE ((((NOT (rt0.c0))) IS TRUE)) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN (((+ (rt0.c0)))) AND ((vt0.c0 COLLATE RTRIM))) ORDER BY x''  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN (((+ (rt0.c0)))) AND ((vt0.c0 COLLATE RTRIM))) WHERE ((((NOT (rt0.c0))) IS TRUE)) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN (((+ (rt0.c0)))) AND ((vt0.c0 COLLATE RTRIM))) ORDER BY x''  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN (((+ (rt0.c0)))) AND ((vt0.c0 COLLATE RTRIM))) WHERE ((((NOT (rt0.c0))) IS TRUE)) ORDER BY x''  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1)+(vt0.c0))) BETWEEN (rt0.c0) AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)+(vt0.c0))) BETWEEN (rt0.c0) AND (vt0.c1))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1)+(vt0.c0))) BETWEEN (rt0.c0) AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)+(vt0.c0))) BETWEEN (rt0.c0) AND (vt0.c1))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1)+(vt0.c0))) BETWEEN (rt0.c0) AND (vt0.c1)));
SELECT * FROM rt0, vt0 WHERE (CASE ((vt0.c0)GLOB(rt0.c2))  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0)|(rt0.c0)) WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) THEN (((vt0.c0, rt0.c0, rt0.c1))>((x'', rt0.c2, rt0.c2))) WHEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 END THEN (- (x'ab71')) ELSE CAST(rt0.c1 AS INTEGER) END) ORDER BY ((x'ae3d' COLLATE NOCASE) ISNULL) ASC, CAST(UNLIKELY(vt0.c1) AS INTEGER) ASC, (~ (vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)GLOB(rt0.c2))  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0)|(rt0.c0)) WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) THEN (((vt0.c0, rt0.c0, rt0.c1))>((x'', rt0.c2, rt0.c2))) WHEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 END THEN (- (x'ab71')) ELSE CAST(rt0.c1 AS INTEGER) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((x'ae3d' COLLATE NOCASE) ISNULL) ASC, CAST(UNLIKELY(vt0.c1) AS INTEGER) ASC, (~ (vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CASE ((vt0.c0)GLOB(rt0.c2))  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0)|(rt0.c0)) WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) THEN (((vt0.c0, rt0.c0, rt0.c1))>((x'', rt0.c2, rt0.c2))) WHEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 END THEN (- (x'ab71')) ELSE CAST(rt0.c1 AS INTEGER) END) ORDER BY ((x'ae3d' COLLATE NOCASE) ISNULL) ASC, CAST(UNLIKELY(vt0.c1) AS INTEGER) ASC, (~ (vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)GLOB(rt0.c2))  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0)|(rt0.c0)) WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) THEN (((vt0.c0, rt0.c0, rt0.c1))>((x'', rt0.c2, rt0.c2))) WHEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 END THEN (- (x'ab71')) ELSE CAST(rt0.c1 AS INTEGER) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((x'ae3d' COLLATE NOCASE) ISNULL) ASC, CAST(UNLIKELY(vt0.c1) AS INTEGER) ASC, (~ (vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CASE ((vt0.c0)GLOB(rt0.c2))  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0)|(rt0.c0)) WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) THEN (((vt0.c0, rt0.c0, rt0.c1))>((x'', rt0.c2, rt0.c2))) WHEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 END THEN (- (x'ab71')) ELSE CAST(rt0.c1 AS INTEGER) END) ORDER BY ((x'ae3d' COLLATE NOCASE) ISNULL) ASC, CAST(UNLIKELY(vt0.c1) AS INTEGER) ASC, (~ (vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TOTAL_CHANGES());
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c1) ORDER BY ((NOT (rt0.c0)) IN (CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((NOT (rt0.c0)) IN (CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c1) ORDER BY ((NOT (rt0.c0)) IN (CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((NOT (rt0.c0)) IN (CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c1) ORDER BY ((NOT (rt0.c0)) IN (CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((((rt0.c2)OR(vt0.c1)))AND(vt0.c0))  WHEN vt0.c0 THEN '*UF' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c2)OR(vt0.c1)))AND(vt0.c0))  WHEN vt0.c0 THEN '*UF' END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((((rt0.c2)OR(vt0.c1)))AND(vt0.c0))  WHEN vt0.c0 THEN '*UF' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c2)OR(vt0.c1)))AND(vt0.c0))  WHEN vt0.c0 THEN '*UF' END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((((rt0.c2)OR(vt0.c1)))AND(vt0.c0))  WHEN vt0.c0 THEN '*UF' END);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (('z~%') BETWEEN (rt0.c2 COLLATE BINARY) AND (((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) WHERE ('1166196703');
SELECT SUM(count) FROM (SELECT (('1166196703') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (('z~%') BETWEEN (rt0.c2 COLLATE BINARY) AND (((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (('z~%') BETWEEN (rt0.c2 COLLATE BINARY) AND (((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) WHERE ('1166196703');
SELECT SUM(count) FROM (SELECT (('1166196703') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (('z~%') BETWEEN (rt0.c2 COLLATE BINARY) AND (((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (('z~%') BETWEEN (rt0.c2 COLLATE BINARY) AND (((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) WHERE ('1166196703');
SELECT COUNT(*) FROM rt0 WHERE (COALESCE(rt0.c0, ((rt0.c0)%(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((COALESCE(rt0.c0, ((rt0.c0)%(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (COALESCE(rt0.c0, ((rt0.c0)%(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((COALESCE(rt0.c0, ((rt0.c0)%(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (COALESCE(rt0.c0, ((rt0.c0)%(rt0.c1))));
SELECT * FROM rt0, vt0 WHERE (ABS(vt0.c0 COLLATE NOCASE)) ORDER BY LIKELY(((((((((vt0.c1)OR(rt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY LIKELY(((((((((vt0.c1)OR(rt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(rt0.c1))) ASC);
SELECT * FROM rt0, vt0 WHERE (ABS(vt0.c0 COLLATE NOCASE)) ORDER BY LIKELY(((((((((vt0.c1)OR(rt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY LIKELY(((((((((vt0.c1)OR(rt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(rt0.c1))) ASC);
SELECT * FROM rt0, vt0 WHERE (ABS(vt0.c0 COLLATE NOCASE)) ORDER BY LIKELY(((((((((vt0.c1)OR(rt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(rt0.c1))) ASC;
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN 0.514147850505035 ELSE vt0.c0 END))) ORDER BY '-404543464', CASE (('NeVv[Y]J*') BETWEEN (x'') AND (vt0.c1))  WHEN vt0.c1 THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE CASE WHEN rt0.c2 THEN rt0.c2 WHEN x'8a60' THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END END ASC  NULLS FIRST, (NOT (LIKE(vt0.c0, rt0.c0, '2')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN 0.514147850505035 ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY '-404543464', CASE (('NeVv[Y]J*') BETWEEN (x'') AND (vt0.c1))  WHEN vt0.c1 THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE CASE WHEN rt0.c2 THEN rt0.c2 WHEN x'8a60' THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END END ASC  NULLS FIRST, (NOT (LIKE(vt0.c0, rt0.c0, '2')))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN 0.514147850505035 ELSE vt0.c0 END))) ORDER BY '-404543464', CASE (('NeVv[Y]J*') BETWEEN (x'') AND (vt0.c1))  WHEN vt0.c1 THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE CASE WHEN rt0.c2 THEN rt0.c2 WHEN x'8a60' THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END END ASC  NULLS FIRST, (NOT (LIKE(vt0.c0, rt0.c0, '2')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN 0.514147850505035 ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY '-404543464', CASE (('NeVv[Y]J*') BETWEEN (x'') AND (vt0.c1))  WHEN vt0.c1 THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE CASE WHEN rt0.c2 THEN rt0.c2 WHEN x'8a60' THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END END ASC  NULLS FIRST, (NOT (LIKE(vt0.c0, rt0.c0, '2')))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN 0.514147850505035 ELSE vt0.c0 END))) ORDER BY '-404543464', CASE (('NeVv[Y]J*') BETWEEN (x'') AND (vt0.c1))  WHEN vt0.c1 THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE CASE WHEN rt0.c2 THEN rt0.c2 WHEN x'8a60' THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END END ASC  NULLS FIRST, (NOT (LIKE(vt0.c0, rt0.c0, '2')))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((((((vt0.c0 IN (vt0.c1)))AND(((vt0.c1)LIKE(vt0.c0)))))AND(((x'be9e') BETWEEN (vt0.c0) AND (vt0.c1)))))OR(((vt0.c0)>(vt0.c1)))))AND(CASE WHEN x'8e68' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN (vt0.c1)))AND(((vt0.c1)LIKE(vt0.c0)))))AND(((x'be9e') BETWEEN (vt0.c0) AND (vt0.c1)))))OR(((vt0.c0)>(vt0.c1)))))AND(CASE WHEN x'8e68' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((((((vt0.c0 IN (vt0.c1)))AND(((vt0.c1)LIKE(vt0.c0)))))AND(((x'be9e') BETWEEN (vt0.c0) AND (vt0.c1)))))OR(((vt0.c0)>(vt0.c1)))))AND(CASE WHEN x'8e68' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN (vt0.c1)))AND(((vt0.c1)LIKE(vt0.c0)))))AND(((x'be9e') BETWEEN (vt0.c0) AND (vt0.c1)))))OR(((vt0.c0)>(vt0.c1)))))AND(CASE WHEN x'8e68' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((((((vt0.c0 IN (vt0.c1)))AND(((vt0.c1)LIKE(vt0.c0)))))AND(((x'be9e') BETWEEN (vt0.c0) AND (vt0.c1)))))OR(((vt0.c0)>(vt0.c1)))))AND(CASE WHEN x'8e68' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)AND(rt0.c2)) AS TEXT)) ORDER BY (((rt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((((rt0.c2)>(rt0.c0)), (rt0.c0 IN ()), rt0.c2, (~ (rt0.c0)), ((rt0.c2) ISNULL))) AND ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)), (((rt0.c2, rt0.c2, rt0.c0))!=((rt0.c1, rt0.c1, x''))), ((rt0.c0)GLOB(rt0.c2)), (((rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, 0xffffffffce35fe56, rt0.c2, x'', rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c1))), rt0.c1))) ASC  NULLS LAST, ((rt0.c0 COLLATE RTRIM)<>(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)AND(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((((rt0.c2)>(rt0.c0)), (rt0.c0 IN ()), rt0.c2, (~ (rt0.c0)), ((rt0.c2) ISNULL))) AND ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)), (((rt0.c2, rt0.c2, rt0.c0))<>((rt0.c1, rt0.c1, x''))), ((rt0.c0)GLOB(rt0.c2)), (((rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, 0Xffffffffce35fe56, rt0.c2, x'', rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c1))), rt0.c1))) ASC  NULLS LAST, ((rt0.c0 COLLATE RTRIM)<>(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)AND(rt0.c2)) AS TEXT)) ORDER BY (((rt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((((rt0.c2)>(rt0.c0)), (rt0.c0 IN ()), rt0.c2, (~ (rt0.c0)), ((rt0.c2) ISNULL))) AND ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)), (((rt0.c2, rt0.c2, rt0.c0))!=((rt0.c1, rt0.c1, x''))), ((rt0.c0)GLOB(rt0.c2)), (((rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, 0xffffffffce35fe56, rt0.c2, x'', rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c1))), rt0.c1))) ASC  NULLS LAST, ((rt0.c0 COLLATE RTRIM)<>(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)AND(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((((rt0.c2)>(rt0.c0)), (rt0.c0 IN ()), rt0.c2, (~ (rt0.c0)), ((rt0.c2) ISNULL))) AND ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)), (((rt0.c2, rt0.c2, rt0.c0))<>((rt0.c1, rt0.c1, x''))), ((rt0.c0)GLOB(rt0.c2)), (((rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, 0Xffffffffce35fe56, rt0.c2, x'', rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c1))), rt0.c1))) ASC  NULLS LAST, ((rt0.c0 COLLATE RTRIM)<>(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)AND(rt0.c2)) AS TEXT)) ORDER BY (((rt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((((rt0.c2)>(rt0.c0)), (rt0.c0 IN ()), rt0.c2, (~ (rt0.c0)), ((rt0.c2) ISNULL))) AND ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)), (((rt0.c2, rt0.c2, rt0.c0))!=((rt0.c1, rt0.c1, x''))), ((rt0.c0)GLOB(rt0.c2)), (((rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, 0xffffffffce35fe56, rt0.c2, x'', rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c1))), rt0.c1))) ASC  NULLS LAST, ((rt0.c0 COLLATE RTRIM)<>(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c1)LIKE(rt0.c0))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c1 END) AND (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0))))) ORDER BY (((CASE '{\n'  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END))<((rt0.c1 COLLATE NOCASE))), (- (((rt0.c1)GLOB(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)LIKE(rt0.c0))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c1 END) AND (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((CASE '{\n'  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END))<((rt0.c1 COLLATE NOCASE))), (- (((rt0.c1)GLOB(rt0.c1))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c1)LIKE(rt0.c0))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c1 END) AND (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0))))) ORDER BY (((CASE '{\n'  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END))<((rt0.c1 COLLATE NOCASE))), (- (((rt0.c1)GLOB(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)LIKE(rt0.c0))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c1 END) AND (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((CASE '{\n'  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END))<((rt0.c1 COLLATE NOCASE))), (- (((rt0.c1)GLOB(rt0.c1))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c1)LIKE(rt0.c0))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c1 END) AND (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0))))) ORDER BY (((CASE '{\n'  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END))<((rt0.c1 COLLATE NOCASE))), (- (((rt0.c1)GLOB(rt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((rt0.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((rt0.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((rt0.c1 IN ()) COLLATE RTRIM);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0) IS TRUE))<>((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE))<>((~ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0) IS TRUE))<>((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE))<>((~ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0) IS TRUE))<>((~ (rt0.c1)))));
SELECT ALL * FROM rt0, vt0 WHERE ((vt0.c1 IN (x'', rt0.c1)) COLLATE BINARY) ORDER BY (~ (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END)), x'';
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN (x'', rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END)), x'');
SELECT ALL * FROM rt0, vt0 WHERE ((vt0.c1 IN (x'', rt0.c1)) COLLATE BINARY) ORDER BY (~ (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END)), x'';
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN (x'', rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END)), x'');
SELECT ALL * FROM rt0, vt0 WHERE ((vt0.c1 IN (x'', rt0.c1)) COLLATE BINARY) ORDER BY (~ (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END)), x'';
SELECT * FROM rt0 WHERE (NULL) ORDER BY (rt0.c2 COLLATE BINARY IN ())  NULLS FIRST, ((rt0.c1 COLLATE RTRIM) BETWEEN ((((rt0.c0))>=((rt0.c2)))) AND (((rt0.c0)OR(rt0.c1)))), CASE WHEN (+ (rt0.c2)) THEN x'' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 COLLATE BINARY IN ())  NULLS FIRST, ((rt0.c1 COLLATE RTRIM) BETWEEN ((((rt0.c0))>=((rt0.c2)))) AND (((rt0.c0)OR(rt0.c1)))), CASE WHEN (+ (rt0.c2)) THEN x'' END  NULLS FIRST);
SELECT * FROM rt0 WHERE (NULL) ORDER BY (rt0.c2 COLLATE BINARY IN ())  NULLS FIRST, ((rt0.c1 COLLATE RTRIM) BETWEEN ((((rt0.c0))>=((rt0.c2)))) AND (((rt0.c0)OR(rt0.c1)))), CASE WHEN (+ (rt0.c2)) THEN x'' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 COLLATE BINARY IN ())  NULLS FIRST, ((rt0.c1 COLLATE RTRIM) BETWEEN ((((rt0.c0))>=((rt0.c2)))) AND (((rt0.c0)OR(rt0.c1)))), CASE WHEN (+ (rt0.c2)) THEN x'' END  NULLS FIRST);
SELECT * FROM rt0 WHERE (NULL) ORDER BY (rt0.c2 COLLATE BINARY IN ())  NULLS FIRST, ((rt0.c1 COLLATE RTRIM) BETWEEN ((((rt0.c0))>=((rt0.c2)))) AND (((rt0.c0)OR(rt0.c1)))), CASE WHEN (+ (rt0.c2)) THEN x'' END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT (rt0.c1 IN (rt0.c1, rt0.c1)), 0.4578458658154744)) ORDER BY (((((+ (rt0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN 2.60673582E8 WHEN rt0.c0 THEN rt0.c2 END)))OR(CASE 'QofG_O^'  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)), (((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)) IN (LIKELIHOOD(DISTINCT rt0.c2, 0.8272229713312609))) ASC, (((((rt0.c0)AND(0X42c403eb)))OR(rt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (rt0.c1 IN (rt0.c1, rt0.c1)), 0.4578458658154744)) IS TRUE)  as count FROM rt0 ORDER BY (((((+ (rt0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN 2.60673582E8 WHEN rt0.c0 THEN rt0.c2 END)))OR(CASE 'QofG_O^'  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)), (((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)) IN (LIKELIHOOD(DISTINCT rt0.c2, 0.8272229713312609))) ASC, (((((rt0.c0)AND(0X42c403eb)))OR(rt0.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT (rt0.c1 IN (rt0.c1, rt0.c1)), 0.4578458658154744)) ORDER BY (((((+ (rt0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN 2.60673582E8 WHEN rt0.c0 THEN rt0.c2 END)))OR(CASE 'QofG_O^'  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)), (((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)) IN (LIKELIHOOD(DISTINCT rt0.c2, 0.8272229713312609))) ASC, (((((rt0.c0)AND(0X42c403eb)))OR(rt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (rt0.c1 IN (rt0.c1, rt0.c1)), 0.4578458658154744)) IS TRUE)  as count FROM rt0 ORDER BY (((((+ (rt0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN 2.60673582E8 WHEN rt0.c0 THEN rt0.c2 END)))OR(CASE 'QofG_O^'  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)), (((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)) IN (LIKELIHOOD(DISTINCT rt0.c2, 0.8272229713312609))) ASC, (((((rt0.c0)AND(0X42c403eb)))OR(rt0.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT (rt0.c1 IN (rt0.c1, rt0.c1)), 0.4578458658154744)) ORDER BY (((((+ (rt0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN 2.60673582E8 WHEN rt0.c0 THEN rt0.c2 END)))OR(CASE 'QofG_O^'  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)), (((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)) IN (LIKELIHOOD(DISTINCT rt0.c2, 0.8272229713312609))) ASC, (((((rt0.c0)AND(0X42c403eb)))OR(rt0.c0)) IN ())  NULLS FIRST;
SELECT * FROM vt0 CROSS JOIN rt0 ON rt0.c0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))IS NOT(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))IS NOT(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON rt0.c0);
SELECT * FROM vt0 CROSS JOIN rt0 ON rt0.c0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))IS NOT(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))IS NOT(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON rt0.c0);
SELECT * FROM vt0 CROSS JOIN rt0 ON rt0.c0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))IS NOT(vt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c0)/(rt0.c2)))) ORDER BY ((((rt0.c0)IS(rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (LIKE(rt0.c2, rt0.c0, 'f'))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(((rt0.c0)/(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)IS(rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (LIKE(rt0.c2, rt0.c0, 'f'))) DESC);
SELECT ALL * FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c0)/(rt0.c2)))) ORDER BY ((((rt0.c0)IS(rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (LIKE(rt0.c2, rt0.c0, 'f'))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(((rt0.c0)/(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)IS(rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (LIKE(rt0.c2, rt0.c0, 'f'))) DESC);
SELECT ALL * FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c0)/(rt0.c2)))) ORDER BY ((((rt0.c0)IS(rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (LIKE(rt0.c2, rt0.c0, 'f'))) DESC;
SELECT * FROM rt0, vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ()));
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0)>(rt0.c1)) IN (ABS(x'')))) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE  NULLS FIRST, CASE WHEN (((vt0.c1))!=((rt0.c0))) THEN INSTR(rt0.c0, rt0.c0) ELSE vt0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>(rt0.c1)) IN (ABS(x'')))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE  NULLS FIRST, CASE WHEN (((vt0.c1))!=((rt0.c0))) THEN INSTR(rt0.c0, rt0.c0) ELSE vt0.c0 END DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0)>(rt0.c1)) IN (ABS(x'')))) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE  NULLS FIRST, CASE WHEN (((vt0.c1))!=((rt0.c0))) THEN INSTR(rt0.c0, rt0.c0) ELSE vt0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>(rt0.c1)) IN (ABS(x'')))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE  NULLS FIRST, CASE WHEN (((vt0.c1))!=((rt0.c0))) THEN INSTR(rt0.c0, rt0.c0) ELSE vt0.c0 END DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0)>(rt0.c1)) IN (ABS(x'')))) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE  NULLS FIRST, CASE WHEN (((vt0.c1))!=((rt0.c0))) THEN INSTR(rt0.c0, rt0.c0) ELSE vt0.c0 END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY -404543464;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY -404543464);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY -404543464;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY -404543464);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c0, rt0.c2, NULL))<=((vt0.c0, vt0.c0, 0.8667108371157312, rt0.c0, vt0.c1))) COLLATE BINARY) ORDER BY CAST(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, rt0.c0, rt0.c2, NULL))<=((vt0.c0, vt0.c0, 0.8667108371157312, rt0.c0, vt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c0, rt0.c2, NULL))<=((vt0.c0, vt0.c0, 0.8667108371157312, rt0.c0, vt0.c1))) COLLATE BINARY) ORDER BY CAST(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, rt0.c0, rt0.c2, NULL))<=((vt0.c0, vt0.c0, 0.8667108371157312, rt0.c0, vt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c0, rt0.c2, NULL))<=((vt0.c0, vt0.c0, 0.8667108371157312, rt0.c0, vt0.c1))) COLLATE BINARY) ORDER BY CAST(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) AS TEXT) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (rt0.c2 COLLATE RTRIM))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((+ (rt0.c0))) AND (highlight(vt0.c0, rt0.c0, vt0.c1, rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((+ (rt0.c0))) AND (highlight(vt0.c0, rt0.c0, vt0.c1, rt0.c0)))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (rt0.c2 COLLATE RTRIM))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((+ (rt0.c0))) AND (highlight(vt0.c0, rt0.c0, vt0.c1, rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((+ (rt0.c0))) AND (highlight(vt0.c0, rt0.c0, vt0.c1, rt0.c0)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c1)OR(vt0.c1)))) ORDER BY (- (((vt0.c1)-(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((vt0.c1)OR(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c1)-(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c1)OR(vt0.c1)))) ORDER BY (- (((vt0.c1)-(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((vt0.c1)OR(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c1)-(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c1)OR(vt0.c1)))) ORDER BY (- (((vt0.c1)-(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ('v+kh?N') ORDER BY (((((~ (rt0.c0)))OR(CAST(rt0.c0 AS TEXT))))AND((((rt0.c1))<((rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('v+kh?N') IS TRUE)  as count FROM rt0 ORDER BY (((((~ (rt0.c0)))OR(CAST(rt0.c0 AS TEXT))))AND((((rt0.c1))<((rt0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('v+kh?N') ORDER BY (((((~ (rt0.c0)))OR(CAST(rt0.c0 AS TEXT))))AND((((rt0.c1))<((rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('v+kh?N') IS TRUE)  as count FROM rt0 ORDER BY (((((~ (rt0.c0)))OR(CAST(rt0.c0 AS TEXT))))AND((((rt0.c1))<((rt0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('v+kh?N') ORDER BY (((((~ (rt0.c0)))OR(CAST(rt0.c0 AS TEXT))))AND((((rt0.c1))<((rt0.c2)))))  NULLS FIRST;
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((+ (rt0.c2)) COLLATE BINARY) ORDER BY CAST(((((((((((((rt0.c2)OR(vt0.c1)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c1)))AND(x'')) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CAST(((((((((((((rt0.c2)OR(vt0.c1)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c1)))AND(x'')) AS TEXT)  NULLS FIRST);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((+ (rt0.c2)) COLLATE BINARY) ORDER BY CAST(((((((((((((rt0.c2)OR(vt0.c1)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c1)))AND(x'')) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CAST(((((((((((((rt0.c2)OR(vt0.c1)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c1)))AND(x'')) AS TEXT)  NULLS FIRST);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((+ (rt0.c2)) COLLATE BINARY) ORDER BY CAST(((((((((((((rt0.c2)OR(vt0.c1)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c1)))AND(x'')) AS TEXT)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) BETWEEN (((vt0.c1 IN ()), ((vt0.c1) ISNULL), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (NOT (vt0.c1)))) AND ((((vt0.c0)>(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((vt0.c0, vt0.c0, vt0.c1))<>((vt0.c1, vt0.c0, vt0.c1))), (vt0.c1 IN (vt0.c0)), (vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) BETWEEN (((vt0.c1 IN ()), ((vt0.c1) ISNULL), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (NOT (vt0.c1)))) AND ((((vt0.c0)>(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((vt0.c0, vt0.c0, vt0.c1))<>((vt0.c1, vt0.c0, vt0.c1))), (vt0.c1 IN (vt0.c0)), (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) BETWEEN (((vt0.c1 IN ()), ((vt0.c1) ISNULL), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (NOT (vt0.c1)))) AND ((((vt0.c0)>(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((vt0.c0, vt0.c0, vt0.c1))<>((vt0.c1, vt0.c0, vt0.c1))), (vt0.c1 IN (vt0.c0)), (vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) BETWEEN (((vt0.c1 IN ()), ((vt0.c1) ISNULL), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (NOT (vt0.c1)))) AND ((((vt0.c0)>(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((vt0.c0, vt0.c0, vt0.c1))<>((vt0.c1, vt0.c0, vt0.c1))), (vt0.c1 IN (vt0.c0)), (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) BETWEEN (((vt0.c1 IN ()), ((vt0.c1) ISNULL), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (NOT (vt0.c1)))) AND ((((vt0.c0)>(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((vt0.c0, vt0.c0, vt0.c1))<>((vt0.c1, vt0.c0, vt0.c1))), (vt0.c1 IN (vt0.c0)), (vt0.c0 IN ())))));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))IS(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))IS(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))IS(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))IS(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))IS(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((+ (rt0.c1 COLLATE NOCASE))) ORDER BY CAST(rt0.c2 AS REAL) COLLATE BINARY COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 AS REAL) COLLATE BINARY COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((+ (rt0.c1 COLLATE NOCASE))) ORDER BY CAST(rt0.c2 AS REAL) COLLATE BINARY COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 AS REAL) COLLATE BINARY COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((+ (rt0.c1 COLLATE NOCASE))) ORDER BY CAST(rt0.c2 AS REAL) COLLATE BINARY COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN (0.9955892537632873) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) BETWEEN (0.9955892537632873) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN (0.9955892537632873) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) BETWEEN (0.9955892537632873) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN (0.9955892537632873) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (NOT (rt0.c1))  WHEN rt0.c2 COLLATE RTRIM THEN rt0.c1 ELSE '*' END) ORDER BY ((TRIM(rt0.c1)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (rt0.c1))  WHEN rt0.c2 COLLATE RTRIM THEN rt0.c1 ELSE '*' END) IS TRUE)  as count FROM rt0 ORDER BY ((TRIM(rt0.c1)) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (NOT (rt0.c1))  WHEN rt0.c2 COLLATE RTRIM THEN rt0.c1 ELSE '*' END) ORDER BY ((TRIM(rt0.c1)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (rt0.c1))  WHEN rt0.c2 COLLATE RTRIM THEN rt0.c1 ELSE '*' END) IS TRUE)  as count FROM rt0 ORDER BY ((TRIM(rt0.c1)) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (NOT (rt0.c1))  WHEN rt0.c2 COLLATE RTRIM THEN rt0.c1 ELSE '*' END) ORDER BY ((TRIM(rt0.c1)) IS FALSE) DESC;
SELECT * FROM rt0 NOT INDEXED, vt0 WHERE (CAST((NOT (rt0.c2)) AS TEXT)) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB), vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB), vt0.c1 ASC);
SELECT * FROM rt0 NOT INDEXED, vt0 WHERE (CAST((NOT (rt0.c2)) AS TEXT)) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB), vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB), vt0.c1 ASC);
SELECT * FROM rt0 NOT INDEXED, vt0 WHERE (CAST((NOT (rt0.c2)) AS TEXT)) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB), vt0.c1 ASC;
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)) AS INTEGER));
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY (((rt0.c1 IN (rt0.c1))) BETWEEN (((rt0.c0)||(0.8599816556481462))) AND ((~ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN (rt0.c1))) BETWEEN (((rt0.c0)||(0.8599816556481462))) AND ((~ (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY (((rt0.c1 IN (rt0.c1))) BETWEEN (((rt0.c0)||(0.8599816556481462))) AND ((~ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN (rt0.c1))) BETWEEN (((rt0.c0)||(0.8599816556481462))) AND ((~ (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY (((rt0.c1 IN (rt0.c1))) BETWEEN (((rt0.c0)||(0.8599816556481462))) AND ((~ (rt0.c0))));
SELECT * FROM rt0, vt0 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((NULL) NOT NULL));
SELECT ALL * FROM vt0, rt0 WHERE (ABS(((((((((rt0.c2)AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c2)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((((((((rt0.c2)AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c2)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (ABS(((((((((rt0.c2)AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c2)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((((((((rt0.c2)AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c2)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (ABS(((((((((rt0.c2)AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c2)))OR(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c0)|(vt0.c1)))) AND ((CAST(0.47951789861020144 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c0)|(vt0.c1)))) AND ((CAST(0.47951789861020144 AS BLOB))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c0)|(vt0.c1)))) AND ((CAST(0.47951789861020144 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c0)|(vt0.c1)))) AND ((CAST(0.47951789861020144 AS BLOB))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c0)|(vt0.c1)))) AND ((CAST(0.47951789861020144 AS BLOB)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (NULL))) BETWEEN (CASE WHEN x'72d3' THEN vt0.c1 ELSE vt0.c0 END) AND (vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (NULL))) BETWEEN (CASE WHEN x'72d3' THEN vt0.c1 ELSE vt0.c0 END) AND (vt0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (NULL))) BETWEEN (CASE WHEN x'72d3' THEN vt0.c1 ELSE vt0.c0 END) AND (vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (NULL))) BETWEEN (CASE WHEN x'72d3' THEN vt0.c1 ELSE vt0.c0 END) AND (vt0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (NULL))) BETWEEN (CASE WHEN x'72d3' THEN vt0.c1 ELSE vt0.c0 END) AND (vt0.c0)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2)>=(rt0.c0)))IS NOT(rt0.c0)) WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))>>(((rt0.c1)OR(vt0.c0))))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))>>(((rt0.c1)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2)>=(rt0.c0)))IS NOT(rt0.c0)) ORDER BY x''  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2)>=(rt0.c0)))IS NOT(rt0.c0)) WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))>>(((rt0.c1)OR(vt0.c0))))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))>>(((rt0.c1)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2)>=(rt0.c0)))IS NOT(rt0.c0)) ORDER BY x''  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2)>=(rt0.c0)))IS NOT(rt0.c0)) WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))>>(((rt0.c1)OR(vt0.c0))))) ORDER BY x''  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)));
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((((((rt0.c0))>((rt0.c2))))OR(IFNULL(DISTINCT vt0.c0, vt0.c1))))AND((vt0.c0 IN (rt0.c0, rt0.c1, NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0))>((rt0.c2))))OR(IFNULL(DISTINCT vt0.c0, vt0.c1))))AND((vt0.c0 IN (rt0.c0, rt0.c1, NULL))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((((((rt0.c0))>((rt0.c2))))OR(IFNULL(DISTINCT vt0.c0, vt0.c1))))AND((vt0.c0 IN (rt0.c0, rt0.c1, NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0))>((rt0.c2))))OR(IFNULL(DISTINCT vt0.c0, vt0.c1))))AND((vt0.c0 IN (rt0.c0, rt0.c1, NULL))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((((((rt0.c0))>((rt0.c2))))OR(IFNULL(DISTINCT vt0.c0, vt0.c1))))AND((vt0.c0 IN (rt0.c0, rt0.c1, NULL)))));
SELECT ALL * FROM vt0 WHERE (UPPER((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((+ (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (UPPER((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((+ (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (UPPER((+ (vt0.c0))));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)>=(-1.55269693E8)) AS BLOB)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (0.8235061306408136))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>=(-1.55269693E8)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (0.8235061306408136))) NOTNULL)  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)>=(-1.55269693E8)) AS BLOB)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (0.8235061306408136))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>=(-1.55269693E8)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (0.8235061306408136))) NOTNULL)  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)>=(-1.55269693E8)) AS BLOB)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (0.8235061306408136))) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN 0.37501996293312967 THEN vt0.c1 COLLATE BINARY ELSE (((vt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.37501996293312967 THEN vt0.c1 COLLATE BINARY ELSE (((vt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c1))) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN 0.37501996293312967 THEN vt0.c1 COLLATE BINARY ELSE (((vt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.37501996293312967 THEN vt0.c1 COLLATE BINARY ELSE (((vt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c1))) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN 0.37501996293312967 THEN vt0.c1 COLLATE BINARY ELSE (((vt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c1))) END);
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))) NOTNULL)) ORDER BY '', rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY '', rt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))) NOTNULL)) ORDER BY '', rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY '', rt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))) NOTNULL)) ORDER BY '', rt0.c1  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))+(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))+(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))+(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))+(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))+(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)));
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))||(((vt0.c0)<=(vt0.c1))))) ORDER BY CAST((((x'', vt0.c0, vt0.c1))>=((NULL, vt0.c1, vt0.c1))) AS BLOB)  NULLS LAST, NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))||(((vt0.c0)<=(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((((x'', vt0.c0, vt0.c1))>=((NULL, vt0.c1, vt0.c1))) AS BLOB)  NULLS LAST, NULL DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))||(((vt0.c0)<=(vt0.c1))))) ORDER BY CAST((((x'', vt0.c0, vt0.c1))>=((NULL, vt0.c1, vt0.c1))) AS BLOB)  NULLS LAST, NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))||(((vt0.c0)<=(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((((x'', vt0.c0, vt0.c1))>=((NULL, vt0.c1, vt0.c1))) AS BLOB)  NULLS LAST, NULL DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))||(((vt0.c0)<=(vt0.c1))))) ORDER BY CAST((((x'', vt0.c0, vt0.c1))>=((NULL, vt0.c1, vt0.c1))) AS BLOB)  NULLS LAST, NULL DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((((vt0.c1)OR(rt0.c0)))AND(rt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c1)) END) ORDER BY (CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c1)OR(rt0.c0)))AND(rt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c1)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((((vt0.c1)OR(rt0.c0)))AND(rt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c1)) END) ORDER BY (CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c1)OR(rt0.c0)))AND(rt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c1)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((((vt0.c1)OR(rt0.c0)))AND(rt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c1)) END) ORDER BY (CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ());
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1)+(vt0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (rt0.c2) AND (0.019276873578692677))) AND ((- (vt0.c1))))) ORDER BY load_extension(vt0.c1, ((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)+(vt0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (rt0.c2) AND (0.019276873578692677))) AND ((- (vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY load_extension(vt0.c1, ((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c1))) DESC);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1)+(vt0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (rt0.c2) AND (0.019276873578692677))) AND ((- (vt0.c1))))) ORDER BY load_extension(vt0.c1, ((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)+(vt0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (rt0.c2) AND (0.019276873578692677))) AND ((- (vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY load_extension(vt0.c1, ((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c1))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) IN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) IN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) IN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) IN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) IN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON rt0.c1 WHERE ((((((vt0.c1 IN ()))OR((NOT (rt0.c1)))))OR((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1 IN ()))OR((NOT (rt0.c1)))))OR((~ (rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON rt0.c1);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON rt0.c1 WHERE ((((((vt0.c1 IN ()))OR((NOT (rt0.c1)))))OR((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1 IN ()))OR((NOT (rt0.c1)))))OR((~ (rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON rt0.c1);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON rt0.c1 WHERE ((((((vt0.c1 IN ()))OR((NOT (rt0.c1)))))OR((~ (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((x'')GLOB(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((x'')GLOB(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((x'')GLOB(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((x'')GLOB(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((x'')GLOB(rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c0))!=((rt0.c2)))) IS FALSE) WHERE (load_extension(CASE vt0.c1  WHEN '-94198297' THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 END, ((rt0.c0)IS NOT(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((load_extension(CASE vt0.c1  WHEN '-94198297' THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 END, ((rt0.c0)IS NOT(rt0.c2)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c0))<>((rt0.c2)))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c0))!=((rt0.c2)))) IS FALSE) WHERE (load_extension(CASE vt0.c1  WHEN '-94198297' THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 END, ((rt0.c0)IS NOT(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((load_extension(CASE vt0.c1  WHEN '-94198297' THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 END, ((rt0.c0)IS NOT(rt0.c2)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c0))<>((rt0.c2)))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))=((rt0.c2 IN ()))) WHERE (((rt0.c2)<<('(N5 J{r*g')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)<<('(N5 J{r*g'))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))==((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))=((rt0.c2 IN ()))) WHERE (((rt0.c2)<<('(N5 J{r*g')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)<<('(N5 J{r*g'))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))==((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))=((rt0.c2 IN ()))) WHERE (((rt0.c2)<<('(N5 J{r*g')));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE rt0.c2 COLLATE NOCASE  WHEN (vt0.c0 IN ()) THEN (NOT (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE NOCASE  WHEN (vt0.c0 IN ()) THEN (NOT (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE rt0.c2 COLLATE NOCASE  WHEN (vt0.c0 IN ()) THEN (NOT (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE NOCASE  WHEN (vt0.c0 IN ()) THEN (NOT (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE rt0.c2 COLLATE NOCASE  WHEN (vt0.c0 IN ()) THEN (NOT (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END);
SELECT * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))==(((((vt0.c1))<((vt0.c0))))))) ORDER BY (ABS(vt0.c1) IN ());
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))=(((((vt0.c1))<((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY (ABS(vt0.c1) IN ()));
SELECT * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))==(((((vt0.c1))<((vt0.c0))))))) ORDER BY (ABS(vt0.c1) IN ());
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))=(((((vt0.c1))<((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY (ABS(vt0.c1) IN ()));
SELECT * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))==(((((vt0.c1))<((vt0.c0))))))) ORDER BY (ABS(vt0.c1) IN ());
SELECT ALL * FROM vt0, rt0 WHERE ((UPPER(vt0.c0) IN (TYPEOF(0X41645359), CAST(rt0.c0 AS BLOB)))) ORDER BY ((rt0.c0)||(vt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((UPPER(vt0.c0) IN (TYPEOF(0X41645359), CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c0)||(vt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM vt0, rt0 WHERE ((UPPER(vt0.c0) IN (TYPEOF(0X41645359), CAST(rt0.c0 AS BLOB)))) ORDER BY ((rt0.c0)||(vt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((UPPER(vt0.c0) IN (TYPEOF(0X41645359), CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c0)||(vt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM vt0, rt0 WHERE ((UPPER(vt0.c0) IN (TYPEOF(0X41645359), CAST(rt0.c0 AS BLOB)))) ORDER BY ((rt0.c0)||(vt0.c1)) COLLATE RTRIM;
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((vt0.c0)&(rt0.c1)) IN (((((rt0.c0)OR(vt0.c1)))AND(vt0.c1))))) ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c1 END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)&(rt0.c1)) IN (((((rt0.c0)OR(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c1 END COLLATE RTRIM ASC);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((vt0.c0)&(rt0.c1)) IN (((((rt0.c0)OR(vt0.c1)))AND(vt0.c1))))) ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c1 END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)&(rt0.c1)) IN (((((rt0.c0)OR(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c1 END COLLATE RTRIM ASC);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((vt0.c0)&(rt0.c1)) IN (((((rt0.c0)OR(vt0.c1)))AND(vt0.c1))))) ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c1 END COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (' -o	9/')))<=(CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (' -o	9/')))<=(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (' -o	9/')))<=(CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (' -o	9/')))<=(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (' -o	9/')))<=(CAST(rt0.c2 AS REAL))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c2, rt0.c2, NULL))>=((rt0.c0, vt0.c0, rt0.c1)))) BETWEEN ((rt0.c2 IN ())) AND (CASE rt0.c0  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY (((vt0.c1) NOT BETWEEN ('-1780998583') AND (vt0.c0)) IN ()) DESC, CAST(((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c2, NULL))>=((rt0.c0, vt0.c0, rt0.c1)))) BETWEEN ((rt0.c2 IN ())) AND (CASE rt0.c0  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c1) NOT BETWEEN ('-1780998583') AND (vt0.c0)) IN ()) DESC, CAST(((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c2, rt0.c2, NULL))>=((rt0.c0, vt0.c0, rt0.c1)))) BETWEEN ((rt0.c2 IN ())) AND (CASE rt0.c0  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY (((vt0.c1) NOT BETWEEN ('-1780998583') AND (vt0.c0)) IN ()) DESC, CAST(((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c2, NULL))>=((rt0.c0, vt0.c0, rt0.c1)))) BETWEEN ((rt0.c2 IN ())) AND (CASE rt0.c0  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c1) NOT BETWEEN ('-1780998583') AND (vt0.c0)) IN ()) DESC, CAST(((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c2, rt0.c2, NULL))>=((rt0.c0, vt0.c0, rt0.c1)))) BETWEEN ((rt0.c2 IN ())) AND (CASE rt0.c0  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY (((vt0.c1) NOT BETWEEN ('-1780998583') AND (vt0.c0)) IN ()) DESC, CAST(((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)) AS BLOB)  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((x'4d68') NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) AND (CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'4d68') NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) AND (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((x'4d68') NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) AND (CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'4d68') NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) AND (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((x'4d68') NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) AND (CAST(rt0.c1 AS NUMERIC))));
SELECT ALL * FROM vt0 WHERE (TRIM(x'0920'));
SELECT SUM(count) FROM (SELECT ((TRIM(x'0920')) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TRIM(x'0920'));
SELECT SUM(count) FROM (SELECT ((TRIM(x'0920')) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TRIM(x'0920'));
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c1) IS FALSE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS FALSE)) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c1) IS FALSE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS FALSE)) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c1) IS FALSE)) ISNULL));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c0 AS INTEGER) WHERE ((~ (((rt0.c1) NOTNULL)))) ORDER BY CASE (((rt0.c0, vt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((0.226229271958296, vt0.c0, vt0.c0)))  WHEN ((rt0.c2) NOT NULL) THEN ((((vt0.c0)AND(rt0.c1)))AND(rt0.c0)) ELSE vt0.c1 END, (~ (CAST(vt0.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c0 AS INTEGER) ORDER BY CASE (((rt0.c0, vt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((0.226229271958296, vt0.c0, vt0.c0)))  WHEN ((rt0.c2) NOT NULL) THEN ((((vt0.c0)AND(rt0.c1)))AND(rt0.c0)) ELSE vt0.c1 END, (~ (CAST(vt0.c0 AS REAL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c0 AS INTEGER) WHERE ((~ (((rt0.c1) NOTNULL)))) ORDER BY CASE (((rt0.c0, vt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((0.226229271958296, vt0.c0, vt0.c0)))  WHEN ((rt0.c2) NOT NULL) THEN ((((vt0.c0)AND(rt0.c1)))AND(rt0.c0)) ELSE vt0.c1 END, (~ (CAST(vt0.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c0 AS INTEGER) ORDER BY CASE (((rt0.c0, vt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((0.226229271958296, vt0.c0, vt0.c0)))  WHEN ((rt0.c2) NOT NULL) THEN ((((vt0.c0)AND(rt0.c1)))AND(rt0.c0)) ELSE vt0.c1 END, (~ (CAST(vt0.c0 AS REAL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c0 AS INTEGER) WHERE ((~ (((rt0.c1) NOTNULL)))) ORDER BY CASE (((rt0.c0, vt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((0.226229271958296, vt0.c0, vt0.c0)))  WHEN ((rt0.c2) NOT NULL) THEN ((((vt0.c0)AND(rt0.c1)))AND(rt0.c0)) ELSE vt0.c1 END, (~ (CAST(vt0.c0 AS REAL)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1)<<(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)<<(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1)<<(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)<<(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1)<<(rt0.c2)) IN ()));
SELECT ALL * FROM rt0 WHERE (CASE CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c1) ISNULL) WHEN (((NULL)) BETWEEN (('띗')) AND ((rt0.c2))) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END WHEN LIKELY(DISTINCT rt0.c1) THEN rt0.c2 COLLATE RTRIM ELSE load_extension(rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c1) ISNULL) WHEN (((NULL)) BETWEEN (('띗')) AND ((rt0.c2))) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END WHEN LIKELY(DISTINCT rt0.c1) THEN rt0.c2 COLLATE RTRIM ELSE load_extension(rt0.c0) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c1) ISNULL) WHEN (((NULL)) BETWEEN (('띗')) AND ((rt0.c2))) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END WHEN LIKELY(DISTINCT rt0.c1) THEN rt0.c2 COLLATE RTRIM ELSE load_extension(rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c1) ISNULL) WHEN (((NULL)) BETWEEN (('띗')) AND ((rt0.c2))) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END WHEN LIKELY(DISTINCT rt0.c1) THEN rt0.c2 COLLATE RTRIM ELSE load_extension(rt0.c0) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c1) ISNULL) WHEN (((NULL)) BETWEEN (('띗')) AND ((rt0.c2))) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END WHEN LIKELY(DISTINCT rt0.c1) THEN rt0.c2 COLLATE RTRIM ELSE load_extension(rt0.c0) END);
SELECT * FROM rt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN x'' THEN rt0.c0 ELSE rt0.c0 END) BETWEEN (TRIM(rt0.c0, rt0.c0)) AND (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN x'' THEN rt0.c0 ELSE rt0.c0 END) BETWEEN (TRIM(rt0.c0, rt0.c0)) AND (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN x'' THEN rt0.c0 ELSE rt0.c0 END) BETWEEN (TRIM(rt0.c0, rt0.c0)) AND (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN x'' THEN rt0.c0 ELSE rt0.c0 END) BETWEEN (TRIM(rt0.c0, rt0.c0)) AND (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN x'' THEN rt0.c0 ELSE rt0.c0 END) BETWEEN (TRIM(rt0.c0, rt0.c0)) AND (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)));
SELECT ALL * FROM vt0 WHERE ((((('1339951350')*(vt0.c1)))>=(UPPER(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((('1339951350')*(vt0.c1)))>=(UPPER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((('1339951350')*(vt0.c1)))>=(UPPER(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((('1339951350')*(vt0.c1)))>=(UPPER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((('1339951350')*(vt0.c1)))>=(UPPER(DISTINCT vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC)) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY CAST(vt0.c0 COLLATE NOCASE AS TEXT) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC)) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY CAST(vt0.c0 COLLATE NOCASE AS TEXT) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC)) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS TEXT) ASC;
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN (x'', rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN (x'', rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN (x'', rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN (x'', rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN (x'', rt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 END)OR((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c1 END)OR((+ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 END)OR((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c1 END)OR((+ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 END)OR((+ (rt0.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON NULL COLLATE NOCASE WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END)|((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c0 END)|((+ (rt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON NULL COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON NULL COLLATE NOCASE WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END)|((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c0 END)|((+ (rt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON NULL COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON NULL COLLATE NOCASE WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END)|((+ (rt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ((vt0.c0 IN ()), ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS TEXT)))) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ((vt0.c0 IN ()), ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ((vt0.c0 IN ()), ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS TEXT)))) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ((vt0.c0 IN ()), ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ((vt0.c0 IN ()), ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS TEXT)))) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) NOT NULL))OR(CAST(rt0.c0 AS TEXT))))AND(rt0.c0))) ORDER BY ((((rt0.c2)-(rt0.c2)))>>((((rt0.c2))<>((rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) NOT NULL))OR(CAST(rt0.c0 AS TEXT))))AND(rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)-(rt0.c2)))>>((((rt0.c2))!=((rt0.c1))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) NOT NULL))OR(CAST(rt0.c0 AS TEXT))))AND(rt0.c0))) ORDER BY ((((rt0.c2)-(rt0.c2)))>>((((rt0.c2))<>((rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) NOT NULL))OR(CAST(rt0.c0 AS TEXT))))AND(rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)-(rt0.c2)))>>((((rt0.c2))!=((rt0.c1))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) NOT NULL))OR(CAST(rt0.c0 AS TEXT))))AND(rt0.c0))) ORDER BY ((((rt0.c2)-(rt0.c2)))>>((((rt0.c2))<>((rt0.c1))))) ASC;
SELECT ALL * FROM vt0, rt0 WHERE (CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (((rt0.c0, rt0.c1, vt0.c0))<=((vt0.c1, '-340306362', vt0.c0))) COLLATE NOCASE WHERE (((((((vt0.c1)|(rt0.c1)))AND('8	R,I/' COLLATE RTRIM)))AND(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)|(rt0.c1)))AND('8	R,I/' COLLATE RTRIM)))AND(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((rt0.c0, rt0.c1, vt0.c0))<=((vt0.c1, '-340306362', vt0.c0))) COLLATE NOCASE);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (((rt0.c0, rt0.c1, vt0.c0))<=((vt0.c1, '-340306362', vt0.c0))) COLLATE NOCASE WHERE (((((((vt0.c1)|(rt0.c1)))AND('8	R,I/' COLLATE RTRIM)))AND(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)|(rt0.c1)))AND('8	R,I/' COLLATE RTRIM)))AND(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((rt0.c0, rt0.c1, vt0.c0))<=((vt0.c1, '-340306362', vt0.c0))) COLLATE NOCASE);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (((rt0.c0, rt0.c1, vt0.c0))<=((vt0.c1, '-340306362', vt0.c0))) COLLATE NOCASE WHERE (((((((vt0.c1)|(rt0.c1)))AND('8	R,I/' COLLATE RTRIM)))AND(rt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0)OR(vt0.c1)), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), 'S[LMs')) AND ((vt0.c1, ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)), ((vt0.c0)-(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0)OR(vt0.c1)), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), 'S[LMs')) AND ((vt0.c1, ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)), ((vt0.c0)-(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0)OR(vt0.c1)), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), 'S[LMs')) AND ((vt0.c1, ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)), ((vt0.c0)-(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0)OR(vt0.c1)), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), 'S[LMs')) AND ((vt0.c1, ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)), ((vt0.c0)-(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0)OR(vt0.c1)), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), 'S[LMs')) AND ((vt0.c1, ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)), ((vt0.c0)-(vt0.c1))))));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS REAL)) ORDER BY ((((((((vt0.c0)OR(rt0.c0)))OR(0xffffffffee2d41e6)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)))))AND('1PF'))  NULLS FIRST, 'R⠘Adw]#' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((((((((vt0.c0)OR(rt0.c0)))OR(0Xffffffffee2d41e6)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)))))AND('1PF'))  NULLS FIRST, 'R⠘Adw]#' DESC  NULLS LAST);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS REAL)) ORDER BY ((((((((vt0.c0)OR(rt0.c0)))OR(0xffffffffee2d41e6)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)))))AND('1PF'))  NULLS FIRST, 'R⠘Adw]#' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((((((((vt0.c0)OR(rt0.c0)))OR(0Xffffffffee2d41e6)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)))))AND('1PF'))  NULLS FIRST, 'R⠘Adw]#' DESC  NULLS LAST);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS REAL)) ORDER BY ((((((((vt0.c0)OR(rt0.c0)))OR(0xffffffffee2d41e6)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)))))AND('1PF'))  NULLS FIRST, 'R⠘Adw]#' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(x'' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(x'' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(x'' AS NUMERIC));
SELECT * FROM rt0, vt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY CAST(vt0.c1 AS BLOB) COLLATE RTRIM DESC  NULLS LAST, ((rt0.c1 IN (rt0.c1, vt0.c1)) IN ())  NULLS LAST, vt0.c1;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(vt0.c1 AS BLOB) COLLATE RTRIM DESC  NULLS LAST, ((rt0.c1 IN (rt0.c1, vt0.c1)) IN ())  NULLS LAST, vt0.c1);
SELECT * FROM rt0, vt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY CAST(vt0.c1 AS BLOB) COLLATE RTRIM DESC  NULLS LAST, ((rt0.c1 IN (rt0.c1, vt0.c1)) IN ())  NULLS LAST, vt0.c1;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(vt0.c1 AS BLOB) COLLATE RTRIM DESC  NULLS LAST, ((rt0.c1 IN (rt0.c1, vt0.c1)) IN ())  NULLS LAST, vt0.c1);
SELECT * FROM rt0, vt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY CAST(vt0.c1 AS BLOB) COLLATE RTRIM DESC  NULLS LAST, ((rt0.c1 IN (rt0.c1, vt0.c1)) IN ())  NULLS LAST, vt0.c1;
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c1) ORDER BY (((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) IN ()) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c1) ORDER BY (((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) IN ()) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c1) ORDER BY (((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) IN ()) DESC;
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON CASE CAST(rt0.c2 AS INTEGER)  WHEN ((('-537358077'))>=((rt0.c0))) THEN (('b?') NOT BETWEEN (vt0.c1) AND ('Lg>')) END WHERE ((x'446e' IN ()));
SELECT SUM(count) FROM (SELECT (((x'446e' IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE CAST(rt0.c2 AS INTEGER)  WHEN ((('-537358077'))>=((rt0.c0))) THEN (('b?') NOT BETWEEN (vt0.c1) AND ('Lg>')) END);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON CASE CAST(rt0.c2 AS INTEGER)  WHEN ((('-537358077'))>=((rt0.c0))) THEN (('b?') NOT BETWEEN (vt0.c1) AND ('Lg>')) END WHERE ((x'446e' IN ()));
SELECT SUM(count) FROM (SELECT (((x'446e' IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE CAST(rt0.c2 AS INTEGER)  WHEN ((('-537358077'))>=((rt0.c0))) THEN (('b?') NOT BETWEEN (vt0.c1) AND ('Lg>')) END);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON CASE CAST(rt0.c2 AS INTEGER)  WHEN ((('-537358077'))>=((rt0.c0))) THEN (('b?') NOT BETWEEN (vt0.c1) AND ('Lg>')) END WHERE ((x'446e' IN ()));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c1 ASC;
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((CAST(rt0.c1 AS TEXT))>=(TRIM(DISTINCT rt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c1 AS TEXT))>=(TRIM(DISTINCT rt0.c1))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((CAST(rt0.c1 AS TEXT))>=(TRIM(DISTINCT rt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c1 AS TEXT))>=(TRIM(DISTINCT rt0.c1))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((CAST(rt0.c1 AS TEXT))>=(TRIM(DISTINCT rt0.c1))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<((((0.9866698415039695)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY (+ ((vt0.c1 IN ()))) ASC, (NOT ((((vt0.c0))<=((vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<((((0.9866698415039695)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((vt0.c1 IN ()))) ASC, (NOT ((((vt0.c0))<=((vt0.c1))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<((((0.9866698415039695)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY (+ ((vt0.c1 IN ()))) ASC, (NOT ((((vt0.c0))<=((vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<((((0.9866698415039695)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((vt0.c1 IN ()))) ASC, (NOT ((((vt0.c0))<=((vt0.c1))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<((((0.9866698415039695)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY (+ ((vt0.c1 IN ()))) ASC, (NOT ((((vt0.c0))<=((vt0.c1))))) ASC;
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c0 IN (vt0.c0)))=(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (vt0.c0)))==(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c0 IN (vt0.c0)))=(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (vt0.c0)))==(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c0 IN (vt0.c0)))=(vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2 IN ()))<>((vt0.c0 IN ())))) ORDER BY (((NOT (rt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt0.c1)*(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))!=((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NOT (rt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt0.c1)*(vt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2 IN ()))<>((vt0.c0 IN ())))) ORDER BY (((NOT (rt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt0.c1)*(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))!=((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NOT (rt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt0.c1)*(vt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2 IN ()))<>((vt0.c0 IN ())))) ORDER BY (((NOT (rt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt0.c1)*(vt0.c1))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN (vt0.c1, 1.150201538E9)) IN ())) ORDER BY (~ (SUBSTR(vt0.c0, vt0.c0))) ASC, (('-364875827')==(vt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN (vt0.c1, 1.150201538E9)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (~ (SUBSTR(vt0.c0, vt0.c0))) ASC, (('-364875827')=(vt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN (vt0.c1, 1.150201538E9)) IN ())) ORDER BY (~ (SUBSTR(vt0.c0, vt0.c0))) ASC, (('-364875827')==(vt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN (vt0.c1, 1.150201538E9)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (~ (SUBSTR(vt0.c0, vt0.c0))) ASC, (('-364875827')=(vt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN (vt0.c1, 1.150201538E9)) IN ())) ORDER BY (~ (SUBSTR(vt0.c0, vt0.c0))) ASC, (('-364875827')==(vt0.c1)) COLLATE NOCASE;
SELECT * FROM rt0 WHERE ((NOT (rt0.c2)) COLLATE RTRIM) ORDER BY TOTAL_CHANGES()  NULLS FIRST, (CASE 0.5212213677102622  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END IN ((((rt0.c2, 'JS⫝{G&㚟', rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, NULL)) AND ((rt0.c2, rt0.c1, rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY TOTAL_CHANGES()  NULLS FIRST, (CASE 0.5212213677102622  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END IN ((((rt0.c2, 'JS⫝{G&㚟', rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, NULL)) AND ((rt0.c2, rt0.c1, rt0.c0))))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((NOT (rt0.c2)) COLLATE RTRIM) ORDER BY TOTAL_CHANGES()  NULLS FIRST, (CASE 0.5212213677102622  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END IN ((((rt0.c2, 'JS⫝{G&㚟', rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, NULL)) AND ((rt0.c2, rt0.c1, rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY TOTAL_CHANGES()  NULLS FIRST, (CASE 0.5212213677102622  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END IN ((((rt0.c2, 'JS⫝{G&㚟', rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, NULL)) AND ((rt0.c2, rt0.c1, rt0.c0))))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((NOT (rt0.c2)) COLLATE RTRIM) ORDER BY TOTAL_CHANGES()  NULLS FIRST, (CASE 0.5212213677102622  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END IN ((((rt0.c2, 'JS⫝{G&㚟', rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, NULL)) AND ((rt0.c2, rt0.c1, rt0.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'');
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)<(rt0.c2)))OR(((rt0.c0)OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<(rt0.c2)))OR(((rt0.c0)OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)<(rt0.c2)))OR(((rt0.c0)OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<(rt0.c2)))OR(((rt0.c0)OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)<(rt0.c2)))OR(((rt0.c0)OR(rt0.c2)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN (vt0.c1 IN ()) END);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2 COLLATE RTRIM, ((rt0.c0)LIKE(rt0.c2)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)) AND ((TRIM(DISTINCT rt0.c2), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), UPPER(DISTINCT x'')))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2 COLLATE RTRIM, ((rt0.c0)LIKE(rt0.c2)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)) AND ((TRIM(DISTINCT rt0.c2), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), UPPER(DISTINCT x''))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2 COLLATE RTRIM, ((rt0.c0)LIKE(rt0.c2)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)) AND ((TRIM(DISTINCT rt0.c2), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), UPPER(DISTINCT x'')))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2 COLLATE RTRIM, ((rt0.c0)LIKE(rt0.c2)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)) AND ((TRIM(DISTINCT rt0.c2), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), UPPER(DISTINCT x''))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2 COLLATE RTRIM, ((rt0.c0)LIKE(rt0.c2)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)) AND ((TRIM(DISTINCT rt0.c2), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), UPPER(DISTINCT x'')))));
SELECT COUNT(*) FROM vt0 WHERE (TYPEOF(CAST(vt0.c1 AS REAL))) ORDER BY ((COALESCE(DISTINCT '-1322091060', vt0.c0))+(vt0.c1)) DESC  NULLS LAST, vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(vt0.c1 AS REAL))) IS TRUE)  as count FROM vt0 ORDER BY ((COALESCE(DISTINCT '-1322091060', vt0.c0))+(vt0.c1)) DESC  NULLS LAST, vt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (TYPEOF(CAST(vt0.c1 AS REAL))) ORDER BY ((COALESCE(DISTINCT '-1322091060', vt0.c0))+(vt0.c1)) DESC  NULLS LAST, vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(vt0.c1 AS REAL))) IS TRUE)  as count FROM vt0 ORDER BY ((COALESCE(DISTINCT '-1322091060', vt0.c0))+(vt0.c1)) DESC  NULLS LAST, vt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (TYPEOF(CAST(vt0.c1 AS REAL))) ORDER BY ((COALESCE(DISTINCT '-1322091060', vt0.c0))+(vt0.c1)) DESC  NULLS LAST, vt0.c1  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c0)<(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)<(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)<(vt0.c1)) COLLATE BINARY);
SELECT * FROM rt0 WHERE (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY rt0.c2 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY rt0.c2 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY rt0.c2 COLLATE NOCASE  NULLS LAST;
SELECT * FROM vt0 WHERE (-1.977657756E9) ORDER BY (- (CAST(vt0.c1 AS NUMERIC))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1.977657756E9) IS TRUE)  as count FROM vt0 ORDER BY (- (CAST(vt0.c1 AS NUMERIC))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (-1.977657756E9) ORDER BY (- (CAST(vt0.c1 AS NUMERIC))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1.977657756E9) IS TRUE)  as count FROM vt0 ORDER BY (- (CAST(vt0.c1 AS NUMERIC))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (-1.977657756E9) ORDER BY (- (CAST(vt0.c1 AS NUMERIC))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((('-568339857' IN ()))AND((rt0.c2 IN ()))))AND(((rt0.c1)!=(rt0.c0))))) ORDER BY rt0.c2  NULLS FIRST, ((NULL)IS(((rt0.c0)/(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((('-568339857' IN ()))AND((rt0.c2 IN ()))))AND(((rt0.c1)!=(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST, ((NULL)IS(((rt0.c0)/(rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((((('-568339857' IN ()))AND((rt0.c2 IN ()))))AND(((rt0.c1)!=(rt0.c0))))) ORDER BY rt0.c2  NULLS FIRST, ((NULL)IS(((rt0.c0)/(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((('-568339857' IN ()))AND((rt0.c2 IN ()))))AND(((rt0.c1)!=(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST, ((NULL)IS(((rt0.c0)/(rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((((('-568339857' IN ()))AND((rt0.c2 IN ()))))AND(((rt0.c1)!=(rt0.c0))))) ORDER BY rt0.c2  NULLS FIRST, ((NULL)IS(((rt0.c0)/(rt0.c0))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (HEX(((rt0.c2)&(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((HEX(((rt0.c2)&(vt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (HEX(((rt0.c2)&(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((HEX(((rt0.c2)&(vt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (HEX(((rt0.c2)&(vt0.c1))));
SELECT * FROM vt0 CROSS JOIN rt0 ON UNICODE(((rt0.c0) IS TRUE)) WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON UNICODE(((rt0.c0) IS TRUE)));
SELECT * FROM vt0 CROSS JOIN rt0 ON UNICODE(((rt0.c0) IS TRUE)) WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON UNICODE(((rt0.c0) IS TRUE)));
SELECT * FROM vt0 CROSS JOIN rt0 ON UNICODE(((rt0.c0) IS TRUE)) WHERE ((rt0.c0 IN ()));
SELECT * FROM rt0, vt0 WHERE ((((vt0.c1, rt0.c1, rt0.c1)) BETWEEN (((('-1237261902') NOT NULL), ((rt0.c2)IS(rt0.c2)), ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))) AND ((rt0.c0 COLLATE NOCASE, vt0.c0, rt0.c2)))) ORDER BY ((vt0.c1) NOT BETWEEN (LIKELY(rt0.c2)) AND (((rt0.c0)GLOB(rt0.c2)))) ASC, ((((((((IFNULL(DISTINCT rt0.c2, NULL))AND((rt0.c1 IN (vt0.c1)))))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c2)AND(rt0.c1)))))AND((NOT (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, rt0.c1, rt0.c1)) BETWEEN (((('-1237261902') NOT NULL), ((rt0.c2)IS(rt0.c2)), ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))) AND ((rt0.c0 COLLATE NOCASE, vt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c1) NOT BETWEEN (LIKELY(rt0.c2)) AND (((rt0.c0)GLOB(rt0.c2)))) ASC, ((((((((IFNULL(DISTINCT rt0.c2, NULL))AND((rt0.c1 IN (vt0.c1)))))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c2)AND(rt0.c1)))))AND((NOT (rt0.c2)))) ASC);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c1, rt0.c1, rt0.c1)) BETWEEN (((('-1237261902') NOT NULL), ((rt0.c2)IS(rt0.c2)), ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))) AND ((rt0.c0 COLLATE NOCASE, vt0.c0, rt0.c2)))) ORDER BY ((vt0.c1) NOT BETWEEN (LIKELY(rt0.c2)) AND (((rt0.c0)GLOB(rt0.c2)))) ASC, ((((((((IFNULL(DISTINCT rt0.c2, NULL))AND((rt0.c1 IN (vt0.c1)))))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c2)AND(rt0.c1)))))AND((NOT (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, rt0.c1, rt0.c1)) BETWEEN (((('-1237261902') NOT NULL), ((rt0.c2)IS(rt0.c2)), ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))) AND ((rt0.c0 COLLATE NOCASE, vt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c1) NOT BETWEEN (LIKELY(rt0.c2)) AND (((rt0.c0)GLOB(rt0.c2)))) ASC, ((((((((IFNULL(DISTINCT rt0.c2, NULL))AND((rt0.c1 IN (vt0.c1)))))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c2)AND(rt0.c1)))))AND((NOT (rt0.c2)))) ASC);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c1, rt0.c1, rt0.c1)) BETWEEN (((('-1237261902') NOT NULL), ((rt0.c2)IS(rt0.c2)), ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))) AND ((rt0.c0 COLLATE NOCASE, vt0.c0, rt0.c2)))) ORDER BY ((vt0.c1) NOT BETWEEN (LIKELY(rt0.c2)) AND (((rt0.c0)GLOB(rt0.c2)))) ASC, ((((((((IFNULL(DISTINCT rt0.c2, NULL))AND((rt0.c1 IN (vt0.c1)))))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c2)AND(rt0.c1)))))AND((NOT (rt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c1, rt0.c2, vt0.c0)) BETWEEN ((rt0.c1, vt0.c1, ((vt0.c0)<=(rt0.c0)))) AND ((((rt0.c1)%(vt0.c0)), (vt0.c1 IN ()), CAST(rt0.c1 AS REAL)))) WHERE ((((((((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((0.6148014152615148, vt0.c1, vt0.c1)) AND ((rt0.c1, vt0.c0, vt0.c1))))AND(vt0.c0 COLLATE NOCASE)))OR((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c1)))))) ORDER BY (MAX(-1.132070093E9, rt0.c0) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((0.6148014152615148, vt0.c1, vt0.c1)) AND ((rt0.c1, vt0.c0, vt0.c1))))AND(vt0.c0 COLLATE NOCASE)))OR((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c1, rt0.c2, vt0.c0)) BETWEEN ((rt0.c1, vt0.c1, ((vt0.c0)<=(rt0.c0)))) AND ((((rt0.c1)%(vt0.c0)), (vt0.c1 IN ()), CAST(rt0.c1 AS REAL)))) ORDER BY (MAX(-1.132070093E9, rt0.c0) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c1, rt0.c2, vt0.c0)) BETWEEN ((rt0.c1, vt0.c1, ((vt0.c0)<=(rt0.c0)))) AND ((((rt0.c1)%(vt0.c0)), (vt0.c1 IN ()), CAST(rt0.c1 AS REAL)))) WHERE ((((((((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((0.6148014152615148, vt0.c1, vt0.c1)) AND ((rt0.c1, vt0.c0, vt0.c1))))AND(vt0.c0 COLLATE NOCASE)))OR((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c1)))))) ORDER BY (MAX(-1.132070093E9, rt0.c0) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((0.6148014152615148, vt0.c1, vt0.c1)) AND ((rt0.c1, vt0.c0, vt0.c1))))AND(vt0.c0 COLLATE NOCASE)))OR((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c1, rt0.c2, vt0.c0)) BETWEEN ((rt0.c1, vt0.c1, ((vt0.c0)<=(rt0.c0)))) AND ((((rt0.c1)%(vt0.c0)), (vt0.c1 IN ()), CAST(rt0.c1 AS REAL)))) ORDER BY (MAX(-1.132070093E9, rt0.c0) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c1, rt0.c2, vt0.c0)) BETWEEN ((rt0.c1, vt0.c1, ((vt0.c0)<=(rt0.c0)))) AND ((((rt0.c1)%(vt0.c0)), (vt0.c1 IN ()), CAST(rt0.c1 AS REAL)))) WHERE ((((((((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((0.6148014152615148, vt0.c1, vt0.c1)) AND ((rt0.c1, vt0.c0, vt0.c1))))AND(vt0.c0 COLLATE NOCASE)))OR((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c1)))))) ORDER BY (MAX(-1.132070093E9, rt0.c0) IN ()) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c1)<=(vt0.c1))) ISNULL)) ORDER BY (((CAST(vt0.c0 AS REAL)))<>((HEX(DISTINCT vt0.c1)))) ASC  NULLS LAST, json_object(load_extension(vt0.c1, vt0.c0), ((vt0.c0) IS TRUE)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<=(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS REAL)))!=((HEX(DISTINCT vt0.c1)))) ASC  NULLS LAST, json_object(load_extension(vt0.c1, vt0.c0), ((vt0.c0) IS TRUE)) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c1)<=(vt0.c1))) ISNULL)) ORDER BY (((CAST(vt0.c0 AS REAL)))<>((HEX(DISTINCT vt0.c1)))) ASC  NULLS LAST, json_object(load_extension(vt0.c1, vt0.c0), ((vt0.c0) IS TRUE)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<=(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS REAL)))!=((HEX(DISTINCT vt0.c1)))) ASC  NULLS LAST, json_object(load_extension(vt0.c1, vt0.c0), ((vt0.c0) IS TRUE)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c1 AS INTEGER))OR(((vt0.c0) IS TRUE))))AND(x'f790')));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c1 AS INTEGER))OR(((vt0.c0) IS TRUE))))AND(x'f790'))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c1 AS INTEGER))OR(((vt0.c0) IS TRUE))))AND(x'f790')));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c1 AS INTEGER))OR(((vt0.c0) IS TRUE))))AND(x'f790'))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c1 AS INTEGER))OR(((vt0.c0) IS TRUE))))AND(x'f790')));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(NULL)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(NULL)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(NULL)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(NULL)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(NULL)) IN ()));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST(CAST(rt0.c2 AS TEXT) AS REAL) WHERE ((+ (((((vt0.c1)AND(0.6276948055499407)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((vt0.c1)AND(0.6276948055499407)))AND(rt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST(CAST(rt0.c2 AS TEXT) AS REAL));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST(CAST(rt0.c2 AS TEXT) AS REAL) WHERE ((+ (((((vt0.c1)AND(0.6276948055499407)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((vt0.c1)AND(0.6276948055499407)))AND(rt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST(CAST(rt0.c2 AS TEXT) AS REAL));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST(CAST(rt0.c2 AS TEXT) AS REAL) WHERE ((+ (((((vt0.c1)AND(0.6276948055499407)))AND(rt0.c0)))));
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (((~ (rt0.c2))) BETWEEN (((rt0.c0)GLOB(rt0.c2))) AND (x'd9ab')) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c2))) BETWEEN (((rt0.c0)GLOB(rt0.c2))) AND (x'd9ab')) ASC);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (((~ (rt0.c2))) BETWEEN (((rt0.c0)GLOB(rt0.c2))) AND (x'd9ab')) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c2))) BETWEEN (((rt0.c0)GLOB(rt0.c2))) AND (x'd9ab')) ASC);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (((~ (rt0.c2))) BETWEEN (((rt0.c0)GLOB(rt0.c2))) AND (x'd9ab')) ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (((vt0.c0)=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)==(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (((vt0.c0)=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)==(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (((vt0.c0)=(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(((vt0.c0)>>(vt0.c1)))) ORDER BY ((CAST(vt0.c0 AS REAL))IS NOT(CAST(vt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt0.c0)>>(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))IS NOT(CAST(vt0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(((vt0.c0)>>(vt0.c1)))) ORDER BY ((CAST(vt0.c0 AS REAL))IS NOT(CAST(vt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt0.c0)>>(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))IS NOT(CAST(vt0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(((vt0.c0)>>(vt0.c1)))) ORDER BY ((CAST(vt0.c0 AS REAL))IS NOT(CAST(vt0.c1 AS INTEGER)));
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))IS(IFNULL(vt0.c1, vt0.c0)))) ORDER BY (((((vt0.c0)AND(0xffe3cb5)))AND(vt0.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))IS(IFNULL(vt0.c1, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)AND(0Xffe3cb5)))AND(vt0.c1)) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))IS(IFNULL(vt0.c1, vt0.c0)))) ORDER BY (((((vt0.c0)AND(0xffe3cb5)))AND(vt0.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))IS(IFNULL(vt0.c1, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)AND(0Xffe3cb5)))AND(vt0.c1)) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))IS(IFNULL(vt0.c1, vt0.c0)))) ORDER BY (((((vt0.c0)AND(0xffe3cb5)))AND(vt0.c1)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c1 COLLATE NOCASE))) ORDER BY ((((vt0.c1)>(vt0.c1))) NOT BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS TEXT)))  NULLS LAST, CAST((+ (vt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)>(vt0.c1))) NOT BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS TEXT)))  NULLS LAST, CAST((+ (vt0.c0)) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c1 COLLATE NOCASE))) ORDER BY ((((vt0.c1)>(vt0.c1))) NOT BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS TEXT)))  NULLS LAST, CAST((+ (vt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)>(vt0.c1))) NOT BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS TEXT)))  NULLS LAST, CAST((+ (vt0.c0)) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c1 COLLATE NOCASE))) ORDER BY ((((vt0.c1)>(vt0.c1))) NOT BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS TEXT)))  NULLS LAST, CAST((+ (vt0.c0)) AS NUMERIC)  NULLS LAST;
