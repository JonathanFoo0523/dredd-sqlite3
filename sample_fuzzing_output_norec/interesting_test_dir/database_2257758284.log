-- Time: 2024/06/09 20:40:49
-- Database: database84
-- Database version: 3.40.0
-- seed value: 2257758284
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c1) VALUES (x'', NULL), (x'', ''), (0.3156849010169156, '709115426'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('-1958741362', x'74e5195f', 7.09115426E8); -- 0ms;
PRAGMA integrity_check; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES ('709115426', 'hours'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0, c1) VALUES ('1982636391', NULL, NULL), ('-4538990', NULL, x''), (x'f3c6', x'', '0.3156849010169156'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c0, c2) VALUES ('1982636391', 'WRܯC', 0Xffffffffffbabd92); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (0.2897000323582041); -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.recursive_triggers = false; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0, c2) VALUES ('0.3156849010169156', 0Xffffffffd0b6ee62, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES ('', 0.2897000323582041); -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES ('0.3156849010169156', 1443404080); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (x'7c5e'); -- 0ms;
ANALYZE; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (0.6581886326156119, 0xffffffffffbabd92); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.checkpoint_fullfsync; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (x'', ((CAST(x'' AS REAL))<>(((('-1958741362', '-746180867', x''))!=((0.774773890079708, 0.18056945120772605, -746180867)))))); -- 1ms;
INSERT OR IGNORE INTO rt0 VALUES (0.22496325062155054, 0.9127254001832424, 0.2897000323582041); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES (NULL, 0.3156849010169156), (x'4d4a', 'ztﶯZa'), ('k*C(', 0Xfffffffff4cbaa83), (']/', NULL), (0.22859155727638436, 0.6581886326156119); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c0) VALUES (',\C/Cn]', -187979133), (NULL, x''), ('-793317790', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES ('-1732471301', 0.22859155727638436); -- 0ms;
PRAGMA integrity_check; -- 0ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c0, c2) VALUES (x'', ((((HEX(0x762ca167))AND(((1982636391) NOT BETWEEN (NULL) AND (-4538990.0)))))OR(((x'')=(0.2813613969012462))))); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, x'a8b9', 0x32f9fdaf); -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.reverse_unordered_selects = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  rt0; -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (x'', -1.732471301E9), (x'', x'37fa'), ('<䭆N', 'QZ欂'), ('0.774773890079708', NULL), (NULL, x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM; -- 4ms;
PRAGMA main.auto_vacuum; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c1) VALUES (NULL, x'55ee'); -- 0ms;
PRAGMA main.recursive_triggers; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES ('vHCe5~', '*\ +ꪃ'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c2) VALUES (0x41f616de, x'', '-1428669141'); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (0.16187023333670336, NULL, 0X231f4909); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c1, c0) VALUES (1982636391, '', 0.32539291482462573); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, '986453275', '0.16187023333670336'), (0.33754696514504323, x'', 0.774773890079708), (NULL, x'dfeb', x'559f'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c1) VALUES (NULL); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1 UNINDEXED); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.cell_size_check; -- 0ms;
PRAGMA busy_timeout = 10000; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES ('7-Y⋑v]'), (0.08022019917428702), (x''), ('-897605673'), (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR FAIL INTO rt0 VALUES (NULL, 'Zwf zg', 0.774773890079708), ('0.2897000323582041', '*YNz', NULL), ('-76977900', '-793317790', -76977900); -- 1ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (0.5905328405229207, x''); -- 0ms;
VACUUM; -- 1ms;
PRAGMA wal_autocheckpoint; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR ABORT INTO rt0(c2) VALUES (x'e405'), (0.40726522646126917), (0.7330676437135625); -- 1ms;
PRAGMA default_cache_size; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES ('-1732471301', '1586104111'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
END TRANSACTION; -- 0ms;
PRAGMA integrity_check; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('380726183'); -- 1ms;
REINDEX; -- 1ms;
PRAGMA cell_size_check = true; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt0, rt0 WHERE (UNLIKELY('-1317427024' COLLATE RTRIM)) ORDER BY (((vt0.c1)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END)) AND (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY('-1317427024' COLLATE RTRIM)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END)) AND (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) DESC);
SELECT * FROM vt0, rt0 WHERE (UNLIKELY('-1317427024' COLLATE RTRIM)) ORDER BY (((vt0.c1)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END)) AND (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY('-1317427024' COLLATE RTRIM)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END)) AND (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) DESC);
SELECT * FROM vt0, rt0 WHERE (UNLIKELY('-1317427024' COLLATE RTRIM)) ORDER BY (((vt0.c1)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END)) AND (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) DESC;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON vt0.c0 WHERE ((((rt0.c2 IN ())) NOT BETWEEN (CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN '515000311' THEN rt0.c1 END) AND (((x'')>=(NULL))))) ORDER BY CAST(CAST(rt0.c0 AS NUMERIC) AS REAL)  NULLS LAST, ((((vt0.c1)>(rt0.c2))) BETWEEN (TRIM(vt0.c0)) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) NOT BETWEEN (CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN '515000311' THEN rt0.c1 END) AND (((x'')>=(NULL))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON vt0.c0 ORDER BY CAST(CAST(rt0.c0 AS NUMERIC) AS REAL)  NULLS LAST, ((((vt0.c1)>(rt0.c2))) BETWEEN (TRIM(vt0.c0)) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON vt0.c0 WHERE ((((rt0.c2 IN ())) NOT BETWEEN (CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN '515000311' THEN rt0.c1 END) AND (((x'')>=(NULL))))) ORDER BY CAST(CAST(rt0.c0 AS NUMERIC) AS REAL)  NULLS LAST, ((((vt0.c1)>(rt0.c2))) BETWEEN (TRIM(vt0.c0)) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) NOT BETWEEN (CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN '515000311' THEN rt0.c1 END) AND (((x'')>=(NULL))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON vt0.c0 ORDER BY CAST(CAST(rt0.c0 AS NUMERIC) AS REAL)  NULLS LAST, ((((vt0.c1)>(rt0.c2))) BETWEEN (TRIM(vt0.c0)) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON vt0.c0 WHERE ((((rt0.c2 IN ())) NOT BETWEEN (CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN '515000311' THEN rt0.c1 END) AND (((x'')>=(NULL))))) ORDER BY CAST(CAST(rt0.c0 AS NUMERIC) AS REAL)  NULLS LAST, ((((vt0.c1)>(rt0.c2))) BETWEEN (TRIM(vt0.c0)) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) NOTNULL)))) ORDER BY ((((vt0.c1)*(vt0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)*(vt0.c0))) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) NOTNULL)))) ORDER BY ((((vt0.c1)*(vt0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)*(vt0.c0))) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) NOTNULL)))) ORDER BY ((((vt0.c1)*(vt0.c0))) ISNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (NOT (((rt0.c2) IS FALSE))) WHERE (NULL) ORDER BY ((COALESCE(rt0.c0, vt0.c0)) BETWEEN (((((rt0.c2)AND(vt0.c1)))AND(rt0.c0))) AND (((vt0.c0)=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (NOT (((rt0.c2) IS FALSE))) ORDER BY ((COALESCE(rt0.c0, vt0.c0)) BETWEEN (((((rt0.c2)AND(vt0.c1)))AND(rt0.c0))) AND (((vt0.c0)==(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (NOT (((rt0.c2) IS FALSE))) WHERE (NULL) ORDER BY ((COALESCE(rt0.c0, vt0.c0)) BETWEEN (((((rt0.c2)AND(vt0.c1)))AND(rt0.c0))) AND (((vt0.c0)=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (NOT (((rt0.c2) IS FALSE))) ORDER BY ((COALESCE(rt0.c0, vt0.c0)) BETWEEN (((((rt0.c2)AND(vt0.c1)))AND(rt0.c0))) AND (((vt0.c0)==(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (NOT (((rt0.c2) IS FALSE))) WHERE (NULL) ORDER BY ((COALESCE(rt0.c0, vt0.c0)) BETWEEN (((((rt0.c2)AND(vt0.c1)))AND(rt0.c0))) AND (((vt0.c0)=(rt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS((-2144910603 IN ()))) ORDER BY (~ (((vt0.c0)-(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((ABS((-2144910603 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0)-(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS((-2144910603 IN ()))) ORDER BY (~ (((vt0.c0)-(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((ABS((-2144910603 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0)-(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS((-2144910603 IN ()))) ORDER BY (~ (((vt0.c0)-(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN (rt0.c2 IN (vt0.c0)) THEN COALESCE(rt0.c2, vt0.c1) WHEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(0X22c66899)) WHEN ((((((((vt0.c1)AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c1)) THEN CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN '1342410912' WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c1 END END WHERE (((((vt0.c1)IS NOT(rt0.c1))) NOT BETWEEN (((vt0.c0)<>(vt0.c1))) AND (json_object(rt0.c0, rt0.c1, rt0.c0, rt0.c0)))) ORDER BY (NULL IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS NOT(rt0.c1))) NOT BETWEEN (((vt0.c0)!=(vt0.c1))) AND (json_object(rt0.c0, rt0.c1, rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN (rt0.c2 IN (vt0.c0)) THEN COALESCE(rt0.c2, vt0.c1) WHEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(0X22c66899)) WHEN ((((((((vt0.c1)AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c1)) THEN CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN '1342410912' WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c1 END END ORDER BY (NULL IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN (rt0.c2 IN (vt0.c0)) THEN COALESCE(rt0.c2, vt0.c1) WHEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(0X22c66899)) WHEN ((((((((vt0.c1)AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c1)) THEN CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN '1342410912' WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c1 END END WHERE (((((vt0.c1)IS NOT(rt0.c1))) NOT BETWEEN (((vt0.c0)<>(vt0.c1))) AND (json_object(rt0.c0, rt0.c1, rt0.c0, rt0.c0)))) ORDER BY (NULL IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS NOT(rt0.c1))) NOT BETWEEN (((vt0.c0)!=(vt0.c1))) AND (json_object(rt0.c0, rt0.c1, rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN (rt0.c2 IN (vt0.c0)) THEN COALESCE(rt0.c2, vt0.c1) WHEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(0X22c66899)) WHEN ((((((((vt0.c1)AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c1)) THEN CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN '1342410912' WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c1 END END ORDER BY (NULL IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1, 0.31251569660196643, rt0.c2))==((vt0.c1, rt0.c1, 0.02941696416638273)))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, 0.31251569660196643, rt0.c2))=((vt0.c1, rt0.c1, 0.02941696416638273)))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1, 0.31251569660196643, rt0.c2))==((vt0.c1, rt0.c1, 0.02941696416638273)))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, 0.31251569660196643, rt0.c2))=((vt0.c1, rt0.c1, 0.02941696416638273)))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1, 0.31251569660196643, rt0.c2))==((vt0.c1, rt0.c1, 0.02941696416638273)))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'' COLLATE BINARY);
SELECT * FROM vt0 WHERE (json_extract(LTRIM(vt0.c0, vt0.c0), ((vt0.c0) NOT NULL), (((vt0.c1))<>((vt0.c1))), ((vt0.c0)|(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(LTRIM(vt0.c0, vt0.c0), ((vt0.c0) NOT NULL), (((vt0.c1))!=((vt0.c1))), ((vt0.c0)|(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (json_extract(LTRIM(vt0.c0, vt0.c0), ((vt0.c0) NOT NULL), (((vt0.c1))<>((vt0.c1))), ((vt0.c0)|(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(LTRIM(vt0.c0, vt0.c0), ((vt0.c0) NOT NULL), (((vt0.c1))!=((vt0.c1))), ((vt0.c0)|(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c0)&(rt0.c0)))))OR(((((((((rt0.c2)AND(rt0.c2)))AND(x'a086')))AND(rt0.c0)))OR(rt0.c1))))) ORDER BY (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))<>((CHAR(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c0)&(rt0.c0)))))OR(((((((((rt0.c2)AND(rt0.c2)))AND(x'a086')))AND(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))<>((CHAR(rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c0)&(rt0.c0)))))OR(((((((((rt0.c2)AND(rt0.c2)))AND(x'a086')))AND(rt0.c0)))OR(rt0.c1))))) ORDER BY (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))<>((CHAR(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c0)&(rt0.c0)))))OR(((((((((rt0.c2)AND(rt0.c2)))AND(x'a086')))AND(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))<>((CHAR(rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c0)&(rt0.c0)))))OR(((((((((rt0.c2)AND(rt0.c2)))AND(x'a086')))AND(rt0.c0)))OR(rt0.c1))))) ORDER BY (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))<>((CHAR(rt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((CASE WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN 0.8721285797837861 THEN vt0.c1 ELSE rt0.c0 END, ((rt0.c1) IS TRUE), ((rt0.c1)<<(rt0.c2))))<=(((+ (rt0.c1)), ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)), ((rt0.c2)<=(vt0.c0)))))) ORDER BY MIN(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c2 END, ((rt0.c0)==(rt0.c2)), ((vt0.c1)LIKE(vt0.c1)), rt0.c1 COLLATE BINARY) DESC, NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN 0.8721285797837861 THEN vt0.c1 ELSE rt0.c0 END, ((rt0.c1) IS TRUE), ((rt0.c1)<<(rt0.c2))))<=(((+ (rt0.c1)), ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)), ((rt0.c2)<=(vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY MIN(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c2 END, ((rt0.c0)=(rt0.c2)), ((vt0.c1)LIKE(vt0.c1)), rt0.c1 COLLATE BINARY) DESC, NULL DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((CASE WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN 0.8721285797837861 THEN vt0.c1 ELSE rt0.c0 END, ((rt0.c1) IS TRUE), ((rt0.c1)<<(rt0.c2))))<=(((+ (rt0.c1)), ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)), ((rt0.c2)<=(vt0.c0)))))) ORDER BY MIN(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c2 END, ((rt0.c0)==(rt0.c2)), ((vt0.c1)LIKE(vt0.c1)), rt0.c1 COLLATE BINARY) DESC, NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN 0.8721285797837861 THEN vt0.c1 ELSE rt0.c0 END, ((rt0.c1) IS TRUE), ((rt0.c1)<<(rt0.c2))))<=(((+ (rt0.c1)), ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)), ((rt0.c2)<=(vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY MIN(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c2 END, ((rt0.c0)=(rt0.c2)), ((vt0.c1)LIKE(vt0.c1)), rt0.c1 COLLATE BINARY) DESC, NULL DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((CASE WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN 0.8721285797837861 THEN vt0.c1 ELSE rt0.c0 END, ((rt0.c1) IS TRUE), ((rt0.c1)<<(rt0.c2))))<=(((+ (rt0.c1)), ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)), ((rt0.c2)<=(vt0.c0)))))) ORDER BY MIN(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c2 END, ((rt0.c0)==(rt0.c2)), ((vt0.c1)LIKE(vt0.c1)), rt0.c1 COLLATE BINARY) DESC, NULL DESC;
SELECT * FROM vt0, rt0 WHERE (CASE ((vt0.c1)<<(0.8721285797837861))  WHEN (((0.19138412105527203)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN (rt0.c1 IN ()) WHEN (~ (rt0.c1)) THEN (- (0.2897000323582041)) WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 END THEN rt0.c1 COLLATE BINARY WHEN ((vt0.c1)+(rt0.c2)) THEN ((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)) WHEN vt0.c0 THEN 'KS' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1)<<(0.8721285797837861))  WHEN (((0.19138412105527203)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN (rt0.c1 IN ()) WHEN (~ (rt0.c1)) THEN (- (0.2897000323582041)) WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 END THEN rt0.c1 COLLATE BINARY WHEN ((vt0.c1)+(rt0.c2)) THEN ((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)) WHEN vt0.c0 THEN 'KS' END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE ((vt0.c1)<<(0.8721285797837861))  WHEN (((0.19138412105527203)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN (rt0.c1 IN ()) WHEN (~ (rt0.c1)) THEN (- (0.2897000323582041)) WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 END THEN rt0.c1 COLLATE BINARY WHEN ((vt0.c1)+(rt0.c2)) THEN ((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)) WHEN vt0.c0 THEN 'KS' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1)<<(0.8721285797837861))  WHEN (((0.19138412105527203)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN (rt0.c1 IN ()) WHEN (~ (rt0.c1)) THEN (- (0.2897000323582041)) WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 END THEN rt0.c1 COLLATE BINARY WHEN ((vt0.c1)+(rt0.c2)) THEN ((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)) WHEN vt0.c0 THEN 'KS' END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE ((vt0.c1)<<(0.8721285797837861))  WHEN (((0.19138412105527203)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN (rt0.c1 IN ()) WHEN (~ (rt0.c1)) THEN (- (0.2897000323582041)) WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 END THEN rt0.c1 COLLATE BINARY WHEN ((vt0.c1)+(rt0.c2)) THEN ((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)) WHEN vt0.c0 THEN 'KS' END);
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c0)&(rt0.c2)))AND(((((((((rt0.c0)OR(rt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c0)))))OR(((vt0.c1)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)&(rt0.c2)))AND(((((((((rt0.c0)OR(rt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c0)))))OR(((vt0.c1)AND(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c0)&(rt0.c2)))AND(((((((((rt0.c0)OR(rt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c0)))))OR(((vt0.c1)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)&(rt0.c2)))AND(((((((((rt0.c0)OR(rt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c0)))))OR(((vt0.c1)AND(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c0)&(rt0.c2)))AND(((((((((rt0.c0)OR(rt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c0)))))OR(((vt0.c1)AND(vt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR('')))OR(2127543506))) NOT BETWEEN (((rt0.c0)!=(rt0.c0))) AND (((rt0.c1)GLOB(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR('')))OR(2127543506))) NOT BETWEEN (((rt0.c0)!=(rt0.c0))) AND (((rt0.c1)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR('')))OR(2127543506))) NOT BETWEEN (((rt0.c0)!=(rt0.c0))) AND (((rt0.c1)GLOB(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR('')))OR(2127543506))) NOT BETWEEN (((rt0.c0)!=(rt0.c0))) AND (((rt0.c1)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR('')))OR(2127543506))) NOT BETWEEN (((rt0.c0)!=(rt0.c0))) AND (((rt0.c1)GLOB(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c0)<(NULL)) THEN CASE NULL  WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c0 END END) ORDER BY ((CAST(rt0.c1 AS INTEGER))>>((- (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)<(NULL)) THEN CASE NULL  WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c1 AS INTEGER))>>((- (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c0)<(NULL)) THEN CASE NULL  WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c0 END END) ORDER BY ((CAST(rt0.c1 AS INTEGER))>>((- (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)<(NULL)) THEN CASE NULL  WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c1 AS INTEGER))>>((- (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c0)<(NULL)) THEN CASE NULL  WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c0 END END) ORDER BY ((CAST(rt0.c1 AS INTEGER))>>((- (vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c0) ORDER BY ((CAST(rt0.c0 AS TEXT))-(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c0 AS TEXT))-(NULL)) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c0) ORDER BY ((CAST(rt0.c0 AS TEXT))-(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c0 AS TEXT))-(NULL)) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c0) ORDER BY ((CAST(rt0.c0 AS TEXT))-(NULL)) DESC;
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)))));
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c0)>(rt0.c0)) THEN (vt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN (rt0.c2 IN ()) WHEN json_array(vt0.c0, NULL) THEN UNLIKELY(rt0.c2) ELSE ((rt0.c1) NOT BETWEEN (x'') AND (NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)>(rt0.c0)) THEN (vt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN (rt0.c2 IN ()) WHEN json_array(vt0.c0, NULL) THEN UNLIKELY(rt0.c2) ELSE ((rt0.c1) NOT BETWEEN (x'') AND (NULL)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c0)>(rt0.c0)) THEN (vt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN (rt0.c2 IN ()) WHEN json_array(vt0.c0, NULL) THEN UNLIKELY(rt0.c2) ELSE ((rt0.c1) NOT BETWEEN (x'') AND (NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)>(rt0.c0)) THEN (vt0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN (rt0.c2 IN ()) WHEN json_array(vt0.c0, NULL) THEN UNLIKELY(rt0.c2) ELSE ((rt0.c1) NOT BETWEEN (x'') AND (NULL)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)>=(vt0.c1)))%(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>=(vt0.c1)))%(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)>=(vt0.c1)))%(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>=(vt0.c1)))%(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)>=(vt0.c1)))%(vt0.c0)));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0)LIKE(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)LIKE(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0)LIKE(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)LIKE(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0)LIKE(vt0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((rt0.c1)AND(vt0.c0))) AND ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((rt0.c1)AND(vt0.c0))) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((rt0.c1)AND(vt0.c0))) AND ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((rt0.c1)AND(vt0.c0))) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((rt0.c1)AND(vt0.c0))) AND ((- (vt0.c0)))));
SELECT * FROM rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND(vt0.c1)))AND(vt0.c1 COLLATE NOCASE))) ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))||(CAST(vt0.c1 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)AND(vt0.c1)))AND(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))||(CAST(vt0.c1 AS TEXT))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND(vt0.c1)))AND(vt0.c1 COLLATE NOCASE))) ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))||(CAST(vt0.c1 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)AND(vt0.c1)))AND(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))||(CAST(vt0.c1 AS TEXT))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND(vt0.c1)))AND(vt0.c1 COLLATE NOCASE))) ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))||(CAST(vt0.c1 AS TEXT))) DESC  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC), (rt0.c2 IN ()), CAST(rt0.c2 AS INTEGER))) AND ((vt0.c0, (NOT (rt0.c1)), ((rt0.c1)<=('NdY|q&')))))) ORDER BY CAST(CAST(vt0.c1 AS INTEGER) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC), (rt0.c2 IN ()), CAST(rt0.c2 AS INTEGER))) AND ((vt0.c0, (NOT (rt0.c1)), ((rt0.c1)<=('NdY|q&')))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(CAST(vt0.c1 AS INTEGER) AS REAL) DESC);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC), (rt0.c2 IN ()), CAST(rt0.c2 AS INTEGER))) AND ((vt0.c0, (NOT (rt0.c1)), ((rt0.c1)<=('NdY|q&')))))) ORDER BY CAST(CAST(vt0.c1 AS INTEGER) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC), (rt0.c2 IN ()), CAST(rt0.c2 AS INTEGER))) AND ((vt0.c0, (NOT (rt0.c1)), ((rt0.c1)<=('NdY|q&')))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(CAST(vt0.c1 AS INTEGER) AS REAL) DESC);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC), (rt0.c2 IN ()), CAST(rt0.c2 AS INTEGER))) AND ((vt0.c0, (NOT (rt0.c1)), ((rt0.c1)<=('NdY|q&')))))) ORDER BY CAST(CAST(vt0.c1 AS INTEGER) AS REAL) DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY ((CAST(rt0.c1 AS NUMERIC)) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c1 AS NUMERIC)) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY ((CAST(rt0.c1 AS NUMERIC)) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c1 AS NUMERIC)) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY ((CAST(rt0.c1 AS NUMERIC)) IS FALSE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((rt0.c0))>=((vt0.c0))) COLLATE RTRIM) ORDER BY ((((rt0.c0)<<(vt0.c0))) ISNULL), vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0))>=((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((rt0.c0)<<(vt0.c0))) ISNULL), vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((rt0.c0))>=((vt0.c0))) COLLATE RTRIM) ORDER BY ((((rt0.c0)<<(vt0.c0))) ISNULL), vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0))>=((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((rt0.c0)<<(vt0.c0))) ISNULL), vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((rt0.c0))>=((vt0.c0))) COLLATE RTRIM) ORDER BY ((((rt0.c0)<<(vt0.c0))) ISNULL), vt0.c0 ASC;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (json_object(((vt0.c1)/(rt0.c2)), ((((vt0.c1)AND('')))AND(NULL)))) ORDER BY (((rt0.c0))>((vt0.c0))) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_object(((vt0.c1)/(rt0.c2)), ((((vt0.c1)AND('')))AND(NULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0))>((vt0.c0))) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (json_object(((vt0.c1)/(rt0.c2)), ((((vt0.c1)AND('')))AND(NULL)))) ORDER BY (((rt0.c0))>((vt0.c0))) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_object(((vt0.c1)/(rt0.c2)), ((((vt0.c1)AND('')))AND(NULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0))>((vt0.c0))) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0)||(rt0.c1 COLLATE BINARY))) ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)||(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0)||(rt0.c1 COLLATE BINARY))) ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)||(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0)||(rt0.c1 COLLATE BINARY))) ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC;
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((rt0.c2)*(vt0.c0)) AS TEXT)) ORDER BY CAST(((rt0.c1)IS NOT(rt0.c2)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)*(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c1)IS NOT(rt0.c2)) AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((rt0.c2)*(vt0.c0)) AS TEXT)) ORDER BY CAST(((rt0.c1)IS NOT(rt0.c2)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)*(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c1)IS NOT(rt0.c2)) AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((rt0.c2)*(vt0.c0)) AS TEXT)) ORDER BY CAST(((rt0.c1)IS NOT(rt0.c2)) AS INTEGER) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(CAST(rt0.c0 AS REAL))))OR((('') NOTNULL)))) ORDER BY ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(CAST(rt0.c0 AS REAL))))OR((('') NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(CAST(rt0.c0 AS REAL))))OR((('') NOTNULL)))) ORDER BY ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(CAST(rt0.c0 AS REAL))))OR((('') NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(CAST(rt0.c0 AS REAL))))OR((('') NOTNULL)))) ORDER BY ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) IS TRUE)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((~ (vt0.c1)), ((vt0.c1) IS TRUE), CAST(vt0.c1 AS TEXT)))<((((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)<(vt0.c1)), vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ((((((~ (vt0.c1)), ((vt0.c1) IS TRUE), CAST(vt0.c1 AS TEXT)))<((((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)<(vt0.c1)), vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((~ (vt0.c1)), ((vt0.c1) IS TRUE), CAST(vt0.c1 AS TEXT)))<((((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)<(vt0.c1)), vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ((((((~ (vt0.c1)), ((vt0.c1) IS TRUE), CAST(vt0.c1 AS TEXT)))<((((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)<(vt0.c1)), vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((~ (vt0.c1)), ((vt0.c1) IS TRUE), CAST(vt0.c1 AS TEXT)))<((((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)<(vt0.c1)), vt0.c0 COLLATE NOCASE))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN 0.33530403562807265 WHEN rt0.c1 THEN vt0.c1 END  WHEN rt0.c1 COLLATE RTRIM THEN (((x''))<=((rt0.c2))) WHEN CAST(rt0.c1 AS TEXT) THEN ((((rt0.c2)OR(vt0.c1)))OR(vt0.c0)) WHEN UPPER(DISTINCT rt0.c1) THEN HEX(rt0.c2) ELSE ((rt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) END) ORDER BY ((GLOB(vt0.c1, vt0.c0))OR(((((rt0.c1)OR(vt0.c1)))AND(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN 0.33530403562807265 WHEN rt0.c1 THEN vt0.c1 END  WHEN rt0.c1 COLLATE RTRIM THEN (((x''))<=((rt0.c2))) WHEN CAST(rt0.c1 AS TEXT) THEN ((((rt0.c2)OR(vt0.c1)))OR(vt0.c0)) WHEN UPPER(DISTINCT rt0.c1) THEN HEX(rt0.c2) ELSE ((rt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((GLOB(vt0.c1, vt0.c0))OR(((((rt0.c1)OR(vt0.c1)))AND(rt0.c1)))) DESC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN 0.33530403562807265 WHEN rt0.c1 THEN vt0.c1 END  WHEN rt0.c1 COLLATE RTRIM THEN (((x''))<=((rt0.c2))) WHEN CAST(rt0.c1 AS TEXT) THEN ((((rt0.c2)OR(vt0.c1)))OR(vt0.c0)) WHEN UPPER(DISTINCT rt0.c1) THEN HEX(rt0.c2) ELSE ((rt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) END) ORDER BY ((GLOB(vt0.c1, vt0.c0))OR(((((rt0.c1)OR(vt0.c1)))AND(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN 0.33530403562807265 WHEN rt0.c1 THEN vt0.c1 END  WHEN rt0.c1 COLLATE RTRIM THEN (((x''))<=((rt0.c2))) WHEN CAST(rt0.c1 AS TEXT) THEN ((((rt0.c2)OR(vt0.c1)))OR(vt0.c0)) WHEN UPPER(DISTINCT rt0.c1) THEN HEX(rt0.c2) ELSE ((rt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((GLOB(vt0.c1, vt0.c0))OR(((((rt0.c1)OR(vt0.c1)))AND(rt0.c1)))) DESC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN 0.33530403562807265 WHEN rt0.c1 THEN vt0.c1 END  WHEN rt0.c1 COLLATE RTRIM THEN (((x''))<=((rt0.c2))) WHEN CAST(rt0.c1 AS TEXT) THEN ((((rt0.c2)OR(vt0.c1)))OR(vt0.c0)) WHEN UPPER(DISTINCT rt0.c1) THEN HEX(rt0.c2) ELSE ((rt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) END) ORDER BY ((GLOB(vt0.c1, vt0.c0))OR(((((rt0.c1)OR(vt0.c1)))AND(rt0.c1)))) DESC;
SELECT * FROM rt0 WHERE (((json_array(rt0.c2, rt0.c1))||(LOWER(rt0.c1)))) ORDER BY ((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((json_array(rt0.c2, rt0.c1))||(LOWER(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1))) NOTNULL));
SELECT * FROM rt0 WHERE (((json_array(rt0.c2, rt0.c1))||(LOWER(rt0.c1)))) ORDER BY ((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((json_array(rt0.c2, rt0.c1))||(LOWER(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1))) NOTNULL));
SELECT * FROM rt0 WHERE (((json_array(rt0.c2, rt0.c1))||(LOWER(rt0.c1)))) ORDER BY ((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1))) NOTNULL);
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ()))|(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))|(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ()))|(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))|(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ()))|(rt0.c1 COLLATE RTRIM)));
SELECT * FROM rt0 WHERE ((- (CASE WHEN '' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN '' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (CASE WHEN '' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN '' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (CASE WHEN '' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1))>=((rt0.c2))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1))>=((rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1))>=((rt0.c2))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1))>=((rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1))>=((rt0.c2))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((((vt0.c1))<>((vt0.c0))))*(CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)) WHERE (((rt0.c2)-(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)-(vt0.c1))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((((vt0.c1))!=((vt0.c0))))*(CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((((vt0.c1))<>((vt0.c0))))*(CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)) WHERE (((rt0.c2)-(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)-(vt0.c1))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((((vt0.c1))!=((vt0.c0))))*(CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((((vt0.c1))<>((vt0.c0))))*(CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)) WHERE (((rt0.c2)-(vt0.c1)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CAST(rt0.c1 AS TEXT))OR(NULL)))OR((~ (rt0.c0)))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))AND((rt0.c0 IN ())))) ORDER BY NULLIF((rt0.c1 IN ()), IFNULL(rt0.c1, rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c1 AS TEXT))OR(NULL)))OR((~ (rt0.c0)))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY NULLIF((rt0.c1 IN ()), IFNULL(rt0.c1, rt0.c0)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CAST(rt0.c1 AS TEXT))OR(NULL)))OR((~ (rt0.c0)))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))AND((rt0.c0 IN ())))) ORDER BY NULLIF((rt0.c1 IN ()), IFNULL(rt0.c1, rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c1 AS TEXT))OR(NULL)))OR((~ (rt0.c0)))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY NULLIF((rt0.c1 IN ()), IFNULL(rt0.c1, rt0.c0)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CAST(rt0.c1 AS TEXT))OR(NULL)))OR((~ (rt0.c0)))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))AND((rt0.c0 IN ())))) ORDER BY NULLIF((rt0.c1 IN ()), IFNULL(rt0.c1, rt0.c0)) DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((CAST(rt0.c0 AS REAL))OR(((vt0.c0)!=(vt0.c0)))))OR(0.4027129306459736)));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c0 AS REAL))OR(((vt0.c0)<>(vt0.c0)))))OR(0.4027129306459736))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((CAST(rt0.c0 AS REAL))OR(((vt0.c0)!=(vt0.c0)))))OR(0.4027129306459736)));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c0 AS REAL))OR(((vt0.c0)<>(vt0.c0)))))OR(0.4027129306459736))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((CAST(rt0.c0 AS REAL))OR(((vt0.c0)!=(vt0.c0)))))OR(0.4027129306459736)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (-1732471301);
SELECT SUM(count) FROM (SELECT ((-1732471301) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (-1732471301);
SELECT SUM(count) FROM (SELECT ((-1732471301) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (-1732471301);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2))<>((rt0.c2)))) NOT BETWEEN (CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN x'' WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c1 END) AND (-1428669141)) WHERE ((((- (rt0.c1)))+(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1)))+(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2))!=((rt0.c2)))) NOT BETWEEN (CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN x'' WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c1 END) AND (-1428669141)));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2))<>((rt0.c2)))) NOT BETWEEN (CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN x'' WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c1 END) AND (-1428669141)) WHERE ((((- (rt0.c1)))+(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1)))+(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2))!=((rt0.c2)))) NOT BETWEEN (CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN x'' WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c1 END) AND (-1428669141)));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2))<>((rt0.c2)))) NOT BETWEEN (CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN x'' WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c1 END) AND (-1428669141)) WHERE ((((- (rt0.c1)))+(vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) BETWEEN ((~ (vt0.c1))) AND (CAST(NULL AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN ((~ (vt0.c1))) AND (CAST(NULL AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) BETWEEN ((~ (vt0.c1))) AND (CAST(NULL AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN ((~ (vt0.c1))) AND (CAST(NULL AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) BETWEEN ((~ (vt0.c1))) AND (CAST(NULL AS BLOB))));
SELECT * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'');
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((CAST('' AS BLOB)))==(((rt0.c1 IN ())))) WHERE ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((x'5cf9'))) COLLATE BINARY) ORDER BY (('-1317427024')!=(((rt0.c0)IS NOT(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((x'5cf9'))) COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((CAST('' AS BLOB)))==(((rt0.c1 IN ())))) ORDER BY (('-1317427024')!=(((rt0.c0)IS NOT(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((CAST('' AS BLOB)))==(((rt0.c1 IN ())))) WHERE ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((x'5cf9'))) COLLATE BINARY) ORDER BY (('-1317427024')!=(((rt0.c0)IS NOT(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((x'5cf9'))) COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((CAST('' AS BLOB)))==(((rt0.c1 IN ())))) ORDER BY (('-1317427024')!=(((rt0.c0)IS NOT(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((CAST('' AS BLOB)))==(((rt0.c1 IN ())))) WHERE ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((x'5cf9'))) COLLATE BINARY) ORDER BY (('-1317427024')!=(((rt0.c0)IS NOT(vt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)>=(rt0.c0)))>=(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>=(rt0.c0)))>=(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)>=(rt0.c0)))>=(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>=(rt0.c0)))>=(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)>=(rt0.c0)))>=(rt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (~ (rt0.c1)) COLLATE BINARY DESC, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY COLLATE NOCASE ASC  NULLS FIRST, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))GLOB(LOWER(DISTINCT rt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (~ (rt0.c1)) COLLATE BINARY DESC, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY COLLATE NOCASE ASC  NULLS FIRST, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))GLOB(LOWER(DISTINCT rt0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (~ (rt0.c1)) COLLATE BINARY DESC, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY COLLATE NOCASE ASC  NULLS FIRST, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))GLOB(LOWER(DISTINCT rt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (~ (rt0.c1)) COLLATE BINARY DESC, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY COLLATE NOCASE ASC  NULLS FIRST, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))GLOB(LOWER(DISTINCT rt0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (~ (rt0.c1)) COLLATE BINARY DESC, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY COLLATE NOCASE ASC  NULLS FIRST, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))GLOB(LOWER(DISTINCT rt0.c0))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2))) BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) AND (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c2))) BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2))) BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) AND (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c2))) BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2))) BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) AND (rt0.c1 COLLATE BINARY)));
SELECT * FROM rt0 WHERE (CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) THEN CASE WHEN -1057679599 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END ELSE (NOT (rt0.c0)) END) ORDER BY CASE WHEN NULL THEN (rt0.c1 IN ()) END DESC, ((((rt0.c1 COLLATE BINARY)OR((NULL IN ()))))AND(rt0.c2));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) THEN CASE WHEN -1057679599 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END ELSE (NOT (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN NULL THEN (rt0.c1 IN ()) END DESC, ((((rt0.c1 COLLATE BINARY)OR((NULL IN ()))))AND(rt0.c2)));
SELECT * FROM rt0 WHERE (CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) THEN CASE WHEN -1057679599 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END ELSE (NOT (rt0.c0)) END) ORDER BY CASE WHEN NULL THEN (rt0.c1 IN ()) END DESC, ((((rt0.c1 COLLATE BINARY)OR((NULL IN ()))))AND(rt0.c2));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) THEN CASE WHEN -1057679599 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END ELSE (NOT (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN NULL THEN (rt0.c1 IN ()) END DESC, ((((rt0.c1 COLLATE BINARY)OR((NULL IN ()))))AND(rt0.c2)));
SELECT * FROM rt0 WHERE (CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) THEN CASE WHEN -1057679599 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END ELSE (NOT (rt0.c0)) END) ORDER BY CASE WHEN NULL THEN (rt0.c1 IN ()) END DESC, ((((rt0.c1 COLLATE BINARY)OR((NULL IN ()))))AND(rt0.c2));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)OR(((NULL) IS TRUE))))OR((rt0.c1 IN ())))) ORDER BY ((CAST(vt0.c1 AS NUMERIC))*(CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN 0X284a2e81 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(((NULL) IS TRUE))))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(vt0.c1 AS NUMERIC))*(CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN 0x284a2e81 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)OR(((NULL) IS TRUE))))OR((rt0.c1 IN ())))) ORDER BY ((CAST(vt0.c1 AS NUMERIC))*(CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN 0X284a2e81 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(((NULL) IS TRUE))))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(vt0.c1 AS NUMERIC))*(CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN 0x284a2e81 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)OR(((NULL) IS TRUE))))OR((rt0.c1 IN ())))) ORDER BY ((CAST(vt0.c1 AS NUMERIC))*(CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN 0X284a2e81 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c0 END));
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END IN ())) ORDER BY ((((rt0.c2 IN (rt0.c0))))>=((LOWER(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2 IN (rt0.c0))))>=((LOWER(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END IN ())) ORDER BY ((((rt0.c2 IN (rt0.c0))))>=((LOWER(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2 IN (rt0.c0))))>=((LOWER(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END IN ())) ORDER BY ((((rt0.c2 IN (rt0.c0))))>=((LOWER(rt0.c2))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)<=(rt0.c2))) BETWEEN ((vt0.c0 IN ())) AND (NULL))) ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))<>((TYPEOF(DISTINCT rt0.c1)))) DESC  NULLS LAST, (TRIM(rt0.c0, vt0.c0) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<=(rt0.c2))) BETWEEN ((vt0.c0 IN ())) AND (NULL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))!=((TYPEOF(DISTINCT rt0.c1)))) DESC  NULLS LAST, (TRIM(rt0.c0, vt0.c0) IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)<=(rt0.c2))) BETWEEN ((vt0.c0 IN ())) AND (NULL))) ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))<>((TYPEOF(DISTINCT rt0.c1)))) DESC  NULLS LAST, (TRIM(rt0.c0, vt0.c0) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<=(rt0.c2))) BETWEEN ((vt0.c0 IN ())) AND (NULL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))!=((TYPEOF(DISTINCT rt0.c1)))) DESC  NULLS LAST, (TRIM(rt0.c0, vt0.c0) IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)<=(rt0.c2))) BETWEEN ((vt0.c0 IN ())) AND (NULL))) ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))<>((TYPEOF(DISTINCT rt0.c1)))) DESC  NULLS LAST, (TRIM(rt0.c0, vt0.c0) IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ ((((NULL)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 END)<>(((vt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT (((+ ((((NULL)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 END)<>(((vt0.c1) ISNULL))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ ((((NULL)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 END)<>(((vt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT (((+ ((((NULL)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 END)<>(((vt0.c1) ISNULL))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ ((((NULL)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 END)<>(((vt0.c1) ISNULL)));
SELECT * FROM vt0, rt0 WHERE (CAST(0.6725551048257222 AS NUMERIC)) ORDER BY ((((rt0.c2)LIKE(vt0.c1))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.6725551048257222 AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)LIKE(vt0.c1))) NOTNULL) ASC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (CAST(0.6725551048257222 AS NUMERIC)) ORDER BY ((((rt0.c2)LIKE(vt0.c1))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.6725551048257222 AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)LIKE(vt0.c1))) NOTNULL) ASC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (CAST(0.6725551048257222 AS NUMERIC)) ORDER BY ((((rt0.c2)LIKE(vt0.c1))) NOTNULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1)<<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1)<<(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1)<<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1)<<(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1)<<(vt0.c1)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (NOT ((vt0.c1 IN (rt0.c2)))) WHERE (((rt0.c2) BETWEEN (rt0.c0) AND (CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (rt0.c0) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (NOT ((vt0.c1 IN (rt0.c2)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (NOT ((vt0.c1 IN (rt0.c2)))) WHERE (((rt0.c2) BETWEEN (rt0.c0) AND (CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (rt0.c0) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (NOT ((vt0.c1 IN (rt0.c2)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (NOT ((vt0.c1 IN (rt0.c2)))) WHERE (((rt0.c2) BETWEEN (rt0.c0) AND (CAST(rt0.c2 AS TEXT))));
SELECT ALL * FROM rt0, vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c1, 0.8932014540952063))*((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))) ORDER BY (((((rt0.c2, NULL, vt0.c0, rt0.c2, rt0.c1))==((rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c0))))!=(TYPEOF(rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT vt0.c1, 0.8932014540952063))*((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c2, NULL, vt0.c0, rt0.c2, rt0.c1))=((rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c0))))!=(TYPEOF(rt0.c0))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c1, 0.8932014540952063))*((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))) ORDER BY (((((rt0.c2, NULL, vt0.c0, rt0.c2, rt0.c1))==((rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c0))))!=(TYPEOF(rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT vt0.c1, 0.8932014540952063))*((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c2, NULL, vt0.c0, rt0.c2, rt0.c1))=((rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c0))))!=(TYPEOF(rt0.c0))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c1, 0.8932014540952063))*((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))) ORDER BY (((((rt0.c2, NULL, vt0.c0, rt0.c2, rt0.c1))==((rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c0))))!=(TYPEOF(rt0.c0))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (json_quote(CAST(rt0.c2 AS TEXT))) ORDER BY CAST(((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(CAST(rt0.c2 AS TEXT))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)) AS BLOB) ASC);
SELECT COUNT(*) FROM rt0 WHERE (json_quote(CAST(rt0.c2 AS TEXT))) ORDER BY CAST(((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(CAST(rt0.c2 AS TEXT))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)) AS BLOB) ASC);
SELECT COUNT(*) FROM rt0 WHERE (json_quote(CAST(rt0.c2 AS TEXT))) ORDER BY CAST(((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)-('855244207'))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)-('855244207'))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)-('855244207'))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)-('855244207'))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)-('855244207'))) ISNULL));
SELECT ALL * FROM rt0 WHERE (CASE TRIM(rt0.c2, rt0.c0)  WHEN (+ (rt0.c0)) THEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE ((rt0.c2)GLOB(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(rt0.c2, rt0.c0)  WHEN (+ (rt0.c0)) THEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE ((rt0.c2)GLOB(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE TRIM(rt0.c2, rt0.c0)  WHEN (+ (rt0.c0)) THEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE ((rt0.c2)GLOB(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(rt0.c2, rt0.c0)  WHEN (+ (rt0.c0)) THEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE ((rt0.c2)GLOB(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE TRIM(rt0.c2, rt0.c0)  WHEN (+ (rt0.c0)) THEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE ((rt0.c2)GLOB(rt0.c1)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 THEN CAST(rt0.c1 AS TEXT) ELSE (NOT (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 THEN CAST(rt0.c1 AS TEXT) ELSE (NOT (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 THEN CAST(rt0.c1 AS TEXT) ELSE (NOT (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 THEN CAST(rt0.c1 AS TEXT) ELSE (NOT (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 THEN CAST(rt0.c1 AS TEXT) ELSE (NOT (rt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((LENGTH(rt0.c1)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(rt0.c1)) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((LENGTH(rt0.c1)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(rt0.c1)) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((LENGTH(rt0.c1)) ISNULL));
SELECT ALL * FROM vt0 WHERE (((vt0.c1)!=((- (vt0.c1))))) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) AS INTEGER) DESC  NULLS FIRST, 'U#''<}QM#' DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)!=((- (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) AS INTEGER) DESC  NULLS FIRST, 'U#''<}QM#' DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)!=((- (vt0.c1))))) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) AS INTEGER) DESC  NULLS FIRST, 'U#''<}QM#' DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)!=((- (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) AS INTEGER) DESC  NULLS FIRST, 'U#''<}QM#' DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)!=((- (vt0.c1))))) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) AS INTEGER) DESC  NULLS FIRST, 'U#''<}QM#' DESC;
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((SQLITE_COMPILEOPTION_GET(rt0.c1)))<>((((rt0.c1) IS TRUE)))) WHERE ((- (CASE WHEN rt0.c2 THEN rt0.c2 ELSE x'' END))) ORDER BY ((vt0.c1 COLLATE RTRIM) BETWEEN ('%w)7' COLLATE RTRIM) AND (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt0.c2 THEN rt0.c2 ELSE x'' END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((SQLITE_COMPILEOPTION_GET(rt0.c1)))!=((((rt0.c1) IS TRUE)))) ORDER BY ((vt0.c1 COLLATE RTRIM) BETWEEN ('%w)7' COLLATE RTRIM) AND (vt0.c0))  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((SQLITE_COMPILEOPTION_GET(rt0.c1)))<>((((rt0.c1) IS TRUE)))) WHERE ((- (CASE WHEN rt0.c2 THEN rt0.c2 ELSE x'' END))) ORDER BY ((vt0.c1 COLLATE RTRIM) BETWEEN ('%w)7' COLLATE RTRIM) AND (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt0.c2 THEN rt0.c2 ELSE x'' END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((SQLITE_COMPILEOPTION_GET(rt0.c1)))!=((((rt0.c1) IS TRUE)))) ORDER BY ((vt0.c1 COLLATE RTRIM) BETWEEN ('%w)7' COLLATE RTRIM) AND (vt0.c0))  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((SQLITE_COMPILEOPTION_GET(rt0.c1)))<>((((rt0.c1) IS TRUE)))) WHERE ((- (CASE WHEN rt0.c2 THEN rt0.c2 ELSE x'' END))) ORDER BY ((vt0.c1 COLLATE RTRIM) BETWEEN ('%w)7' COLLATE RTRIM) AND (vt0.c0))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((x'' COLLATE NOCASE)OR(0.28963532010617954)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY vt0.c1, CAST(-1072249511 COLLATE RTRIM AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'' COLLATE NOCASE)OR(0.28963532010617954)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1, CAST(-1072249511 COLLATE RTRIM AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((x'' COLLATE NOCASE)OR(0.28963532010617954)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY vt0.c1, CAST(-1072249511 COLLATE RTRIM AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'' COLLATE NOCASE)OR(0.28963532010617954)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1, CAST(-1072249511 COLLATE RTRIM AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((x'' COLLATE NOCASE)OR(0.28963532010617954)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY vt0.c1, CAST(-1072249511 COLLATE RTRIM AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (NULL);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c0)-(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE (((((rt0.c2)>=(vt0.c0)))<=(CAST(rt0.c1 AS REAL)))) ORDER BY 'WRܯC'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>=(vt0.c0)))<=(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c0)-(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))) ORDER BY 'WRܯC'  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c0)-(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE (((((rt0.c2)>=(vt0.c0)))<=(CAST(rt0.c1 AS REAL)))) ORDER BY 'WRܯC'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>=(vt0.c0)))<=(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c0)-(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))) ORDER BY 'WRܯC'  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c0)-(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE (((((rt0.c2)>=(vt0.c0)))<=(CAST(rt0.c1 AS REAL)))) ORDER BY 'WRܯC'  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE ((((((((rt0.c1)OR(x'19d3')))OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c1))  WHEN ((rt0.c2)AND(vt0.c0)) THEN ((rt0.c0)>=(vt0.c0)) END) ORDER BY (rt0.c0 COLLATE RTRIM IN ()), ((((((rt0.c2) ISNULL))AND('*90h|vB[Z' COLLATE NOCASE)))AND(((((((((vt0.c1)AND(vt0.c1)))AND('')))AND(rt0.c2)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt0.c1)OR(x'19d3')))OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c1))  WHEN ((rt0.c2)AND(vt0.c0)) THEN ((rt0.c0)>=(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (rt0.c0 COLLATE RTRIM IN ()), ((((((rt0.c2) ISNULL))AND('*90h|vB[Z' COLLATE NOCASE)))AND(((((((((vt0.c1)AND(vt0.c1)))AND('')))AND(rt0.c2)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE ((((((((rt0.c1)OR(x'19d3')))OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c1))  WHEN ((rt0.c2)AND(vt0.c0)) THEN ((rt0.c0)>=(vt0.c0)) END) ORDER BY (rt0.c0 COLLATE RTRIM IN ()), ((((((rt0.c2) ISNULL))AND('*90h|vB[Z' COLLATE NOCASE)))AND(((((((((vt0.c1)AND(vt0.c1)))AND('')))AND(rt0.c2)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt0.c1)OR(x'19d3')))OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c1))  WHEN ((rt0.c2)AND(vt0.c0)) THEN ((rt0.c0)>=(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (rt0.c0 COLLATE RTRIM IN ()), ((((((rt0.c2) ISNULL))AND('*90h|vB[Z' COLLATE NOCASE)))AND(((((((((vt0.c1)AND(vt0.c1)))AND('')))AND(rt0.c2)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE ((((((((rt0.c1)OR(x'19d3')))OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c1))  WHEN ((rt0.c2)AND(vt0.c0)) THEN ((rt0.c0)>=(vt0.c0)) END) ORDER BY (rt0.c0 COLLATE RTRIM IN ()), ((((((rt0.c2) ISNULL))AND('*90h|vB[Z' COLLATE NOCASE)))AND(((((((((vt0.c1)AND(vt0.c1)))AND('')))AND(rt0.c2)))AND(vt0.c0))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (LIKELY(CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (LIKELY(CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (LIKELY(CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END));
SELECT * FROM vt0 WHERE ((NOT (((vt0.c0)||(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)||(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (((vt0.c0)||(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)||(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (((vt0.c0)||(vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(STRFTIME(vt0.c1, vt0.c1, vt0.c1, x'', vt0.c0), vt0.c1 COLLATE RTRIM)) ORDER BY (((8.55244207E8) ISNULL) IN (((0.18557790704735744) IS FALSE))) DESC, CAST(vt0.c0 AS BLOB) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(STRFTIME(vt0.c1, vt0.c1, vt0.c1, x'', vt0.c0), vt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 ORDER BY (((8.55244207E8) ISNULL) IN (((0.18557790704735744) IS FALSE))) DESC, CAST(vt0.c0 AS BLOB) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(STRFTIME(vt0.c1, vt0.c1, vt0.c1, x'', vt0.c0), vt0.c1 COLLATE RTRIM)) ORDER BY (((8.55244207E8) ISNULL) IN (((0.18557790704735744) IS FALSE))) DESC, CAST(vt0.c0 AS BLOB) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(STRFTIME(vt0.c1, vt0.c1, vt0.c1, x'', vt0.c0), vt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 ORDER BY (((8.55244207E8) ISNULL) IN (((0.18557790704735744) IS FALSE))) DESC, CAST(vt0.c0 AS BLOB) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(STRFTIME(vt0.c1, vt0.c1, vt0.c1, x'', vt0.c0), vt0.c1 COLLATE RTRIM)) ORDER BY (((8.55244207E8) ISNULL) IN (((0.18557790704735744) IS FALSE))) DESC, CAST(vt0.c0 AS BLOB) COLLATE BINARY;
SELECT * FROM vt0 WHERE ((((vt0.c0, (vt0.c1 IN ()), ((vt0.c1)+(x'ea7f5b74'))))>(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((-799639836))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, (vt0.c1 IN ()))))) ORDER BY (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, 0.6865008323197328, vt0.c0))))&(vt0.c0 COLLATE RTRIM))  NULLS LAST, (((vt0.c1 IN ()))/(((vt0.c0) BETWEEN (NULL) AND (vt0.c1))))  NULLS FIRST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) IS FALSE) THEN vt0.c1 WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c1)>(vt0.c0)) WHEN 'z0' THEN (vt0.c1 IN ()) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, (vt0.c1 IN ()), ((vt0.c1)+(x'ea7f5b74'))))>(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((-799639836))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, (vt0.c1 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, 0.6865008323197328, vt0.c0))))&(vt0.c0 COLLATE RTRIM))  NULLS LAST, (((vt0.c1 IN ()))/(((vt0.c0) BETWEEN (NULL) AND (vt0.c1))))  NULLS FIRST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) IS FALSE) THEN vt0.c1 WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c1)>(vt0.c0)) WHEN 'z0' THEN (vt0.c1 IN ()) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0, (vt0.c1 IN ()), ((vt0.c1)+(x'ea7f5b74'))))>(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((-799639836))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, (vt0.c1 IN ()))))) ORDER BY (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, 0.6865008323197328, vt0.c0))))&(vt0.c0 COLLATE RTRIM))  NULLS LAST, (((vt0.c1 IN ()))/(((vt0.c0) BETWEEN (NULL) AND (vt0.c1))))  NULLS FIRST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) IS FALSE) THEN vt0.c1 WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c1)>(vt0.c0)) WHEN 'z0' THEN (vt0.c1 IN ()) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, (vt0.c1 IN ()), ((vt0.c1)+(x'ea7f5b74'))))>(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((-799639836))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, (vt0.c1 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, 0.6865008323197328, vt0.c0))))&(vt0.c0 COLLATE RTRIM))  NULLS LAST, (((vt0.c1 IN ()))/(((vt0.c0) BETWEEN (NULL) AND (vt0.c1))))  NULLS FIRST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) IS FALSE) THEN vt0.c1 WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c1)>(vt0.c0)) WHEN 'z0' THEN (vt0.c1 IN ()) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0, (vt0.c1 IN ()), ((vt0.c1)+(x'ea7f5b74'))))>(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((-799639836))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, (vt0.c1 IN ()))))) ORDER BY (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, 0.6865008323197328, vt0.c0))))&(vt0.c0 COLLATE RTRIM))  NULLS LAST, (((vt0.c1 IN ()))/(((vt0.c0) BETWEEN (NULL) AND (vt0.c1))))  NULLS FIRST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) IS FALSE) THEN vt0.c1 WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c1)>(vt0.c0)) WHEN 'z0' THEN (vt0.c1 IN ()) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC;
SELECT COUNT(*) FROM vt0 WHERE ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN (('1982636391', NULL COLLATE BINARY, CASE WHEN rt0.c0 THEN -1188464243 WHEN 0.22496325062155054 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) AND (((((rt0.c2, rt0.c1, rt0.c2))=((-27942718, rt0.c0, 0.4117573810933157))), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN (('1982636391', NULL COLLATE BINARY, CASE WHEN rt0.c0 THEN -1188464243 WHEN 0.22496325062155054 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) AND (((((rt0.c2, rt0.c1, rt0.c2))==((-27942718, rt0.c0, 0.4117573810933157))), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN (('1982636391', NULL COLLATE BINARY, CASE WHEN rt0.c0 THEN -1188464243 WHEN 0.22496325062155054 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) AND (((((rt0.c2, rt0.c1, rt0.c2))=((-27942718, rt0.c0, 0.4117573810933157))), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN (('1982636391', NULL COLLATE BINARY, CASE WHEN rt0.c0 THEN -1188464243 WHEN 0.22496325062155054 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) AND (((((rt0.c2, rt0.c1, rt0.c2))==((-27942718, rt0.c0, 0.4117573810933157))), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN (('1982636391', NULL COLLATE BINARY, CASE WHEN rt0.c0 THEN -1188464243 WHEN 0.22496325062155054 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) AND (((((rt0.c2, rt0.c1, rt0.c2))=((-27942718, rt0.c0, 0.4117573810933157))), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))));
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT LIKELIHOOD(0.966030795509252, 0.8075158941803039), 0.8610978924784496)) ORDER BY ((((rt0.c2)==(rt0.c1)))<=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT LIKELIHOOD(0.966030795509252, 0.8075158941803039), 0.8610978924784496)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)=(rt0.c1)))<=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT LIKELIHOOD(0.966030795509252, 0.8075158941803039), 0.8610978924784496)) ORDER BY ((((rt0.c2)==(rt0.c1)))<=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT LIKELIHOOD(0.966030795509252, 0.8075158941803039), 0.8610978924784496)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)=(rt0.c1)))<=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT LIKELIHOOD(0.966030795509252, 0.8075158941803039), 0.8610978924784496)) ORDER BY ((((rt0.c2)==(rt0.c1)))<=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c0))) NOT BETWEEN (((rt0.c0)||(rt0.c2))) AND ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)GLOB(rt0.c0))) NOT BETWEEN (((rt0.c0)||(rt0.c2))) AND ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c0))) NOT BETWEEN (((rt0.c0)||(rt0.c2))) AND ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)GLOB(rt0.c0))) NOT BETWEEN (((rt0.c0)||(rt0.c2))) AND ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c0))) NOT BETWEEN (((rt0.c0)||(rt0.c2))) AND ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), (vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), (vt0.c0 IN (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), (vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), (vt0.c0 IN (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), (vt0.c0 IN (vt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))) AND (CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE) BETWEEN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))) AND (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))) AND (CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE) BETWEEN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))) AND (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))) AND (CAST(rt0.c1 AS INTEGER))));
SELECT * FROM vt0 WHERE (LOWER((NOT (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((LOWER((NOT (vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LOWER((NOT (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((LOWER((NOT (vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LOWER((NOT (vt0.c1))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1)) BETWEEN (((vt0.c0 IN ()))) AND ((((((((((NULL)AND(vt0.c1)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN (((vt0.c0 IN ()))) AND ((((((((((NULL)AND(vt0.c1)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1)) BETWEEN (((vt0.c0 IN ()))) AND ((((((((((NULL)AND(vt0.c1)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN (((vt0.c0 IN ()))) AND ((((((((((NULL)AND(vt0.c1)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1)) BETWEEN (((vt0.c0 IN ()))) AND ((((((((((NULL)AND(vt0.c1)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c2))))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((0.1035928164919967)OR(((rt0.c2)|(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.1035928164919967)OR(((rt0.c2)|(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((0.1035928164919967)OR(((rt0.c2)|(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.1035928164919967)OR(((rt0.c2)|(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((0.1035928164919967)OR(((rt0.c2)|(vt0.c1)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c1))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (CASE WHEN rt0.c0 THEN vt0.c1 END)) WHERE (rt0.c0) ORDER BY COALESCE(DISTINCT rt0.c0, rt0.c2) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c1))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (CASE WHEN rt0.c0 THEN vt0.c1 END)) ORDER BY COALESCE(DISTINCT rt0.c0, rt0.c2) COLLATE RTRIM);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c1))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (CASE WHEN rt0.c0 THEN vt0.c1 END)) WHERE (rt0.c0) ORDER BY COALESCE(DISTINCT rt0.c0, rt0.c2) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c1))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (CASE WHEN rt0.c0 THEN vt0.c1 END)) ORDER BY COALESCE(DISTINCT rt0.c0, rt0.c2) COLLATE RTRIM);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c1))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (CASE WHEN rt0.c0 THEN vt0.c1 END)) WHERE (rt0.c0) ORDER BY COALESCE(DISTINCT rt0.c0, rt0.c2) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((vt0.c1 IN (vt0.c1)))LIKE('-0.0')) WHERE (((SQLITE_COMPILEOPTION_GET(0.8721285797837861))%((((rt0.c2))>=((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_GET(0.8721285797837861))%((((rt0.c2))>=((rt0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((vt0.c1 IN (vt0.c1)))LIKE('-0.0')));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((vt0.c1 IN (vt0.c1)))LIKE('-0.0')) WHERE (((SQLITE_COMPILEOPTION_GET(0.8721285797837861))%((((rt0.c2))>=((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_GET(0.8721285797837861))%((((rt0.c2))>=((rt0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((vt0.c1 IN (vt0.c1)))LIKE('-0.0')));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((vt0.c1 IN (vt0.c1)))LIKE('-0.0')) WHERE (((SQLITE_COMPILEOPTION_GET(0.8721285797837861))%((((rt0.c2))>=((rt0.c0))))));
SELECT * FROM vt0 WHERE (CAST(highlight(vt0.c0, vt0.c1, vt0.c0, vt0.c1) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(highlight(vt0.c0, vt0.c1, vt0.c0, vt0.c1) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(highlight(vt0.c0, vt0.c1, vt0.c0, vt0.c1) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(highlight(vt0.c0, vt0.c1, vt0.c0, vt0.c1) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((('-76977900')/(rt0.c1)) IN ())) ORDER BY ((vt0.c0) BETWEEN (((x'bc768498') ISNULL)) AND (NULLIF(DISTINCT vt0.c0, rt0.c0))), (((0.5470850719688201, (NOT (vt0.c1)), ((rt0.c0) NOT NULL)))>=((CAST(vt0.c0 AS NUMERIC), vt0.c1 COLLATE NOCASE, (rt0.c0 IN ())))) DESC  NULLS FIRST, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))AND('1586104111')))AND(vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('-76977900')/(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0) BETWEEN (((x'bc768498') ISNULL)) AND (NULLIF(DISTINCT vt0.c0, rt0.c0))), (((0.5470850719688201, (NOT (vt0.c1)), ((rt0.c0) NOT NULL)))>=((CAST(vt0.c0 AS NUMERIC), vt0.c1 COLLATE NOCASE, (rt0.c0 IN ())))) DESC  NULLS FIRST, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))AND('1586104111')))AND(vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((('-76977900')/(rt0.c1)) IN ())) ORDER BY ((vt0.c0) BETWEEN (((x'bc768498') ISNULL)) AND (NULLIF(DISTINCT vt0.c0, rt0.c0))), (((0.5470850719688201, (NOT (vt0.c1)), ((rt0.c0) NOT NULL)))>=((CAST(vt0.c0 AS NUMERIC), vt0.c1 COLLATE NOCASE, (rt0.c0 IN ())))) DESC  NULLS FIRST, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))AND('1586104111')))AND(vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('-76977900')/(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0) BETWEEN (((x'bc768498') ISNULL)) AND (NULLIF(DISTINCT vt0.c0, rt0.c0))), (((0.5470850719688201, (NOT (vt0.c1)), ((rt0.c0) NOT NULL)))>=((CAST(vt0.c0 AS NUMERIC), vt0.c1 COLLATE NOCASE, (rt0.c0 IN ())))) DESC  NULLS FIRST, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))AND('1586104111')))AND(vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((('-76977900')/(rt0.c1)) IN ())) ORDER BY ((vt0.c0) BETWEEN (((x'bc768498') ISNULL)) AND (NULLIF(DISTINCT vt0.c0, rt0.c0))), (((0.5470850719688201, (NOT (vt0.c1)), ((rt0.c0) NOT NULL)))>=((CAST(vt0.c0 AS NUMERIC), vt0.c1 COLLATE NOCASE, (rt0.c0 IN ())))) DESC  NULLS FIRST, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))AND('1586104111')))AND(vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (CAST(rt0.c0 AS INTEGER)) ORDER BY (((((((rt0.c1))=((rt0.c1))))OR(vt0.c1)))AND(CASE WHEN rt0.c2 THEN vt0.c1 WHEN '-76977900' THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)), (((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((rt0.c1))=((rt0.c1))))OR(vt0.c1)))AND(CASE WHEN rt0.c2 THEN vt0.c1 WHEN '-76977900' THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)), (((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (CAST(rt0.c0 AS INTEGER)) ORDER BY (((((((rt0.c1))=((rt0.c1))))OR(vt0.c1)))AND(CASE WHEN rt0.c2 THEN vt0.c1 WHEN '-76977900' THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)), (((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((rt0.c1))=((rt0.c1))))OR(vt0.c1)))AND(CASE WHEN rt0.c2 THEN vt0.c1 WHEN '-76977900' THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)), (((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (CAST(rt0.c0 AS INTEGER)) ORDER BY (((((((rt0.c1))=((rt0.c1))))OR(vt0.c1)))AND(CASE WHEN rt0.c2 THEN vt0.c1 WHEN '-76977900' THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)), (((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN 0xffffffffc0ea47fb THEN vt0.c0 WHEN rt0.c2 THEN '-314979371' END AS NUMERIC)) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN 0xffffffffc0ea47fb THEN vt0.c0 WHEN rt0.c2 THEN '-314979371' END AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN 0xffffffffc0ea47fb THEN vt0.c0 WHEN rt0.c2 THEN '-314979371' END AS NUMERIC)) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN 0xffffffffc0ea47fb THEN vt0.c0 WHEN rt0.c2 THEN '-314979371' END AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN 0xffffffffc0ea47fb THEN vt0.c0 WHEN rt0.c2 THEN '-314979371' END AS NUMERIC)) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) IS FALSE));
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(vt0.c1 AS TEXT))&(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS TEXT))&(rt0.c1))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(vt0.c1 AS TEXT))&(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS TEXT))&(rt0.c1))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(vt0.c1 AS TEXT))&(rt0.c1)));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT))LIKE(((rt0.c2)IS NOT(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS TEXT))LIKE(((rt0.c2)IS NOT(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT))LIKE(((rt0.c2)IS NOT(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS TEXT))LIKE(((rt0.c2)IS NOT(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT))LIKE(((rt0.c2)IS NOT(rt0.c2)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))/((((NULL, vt0.c1, vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c0, x'87a6f6a2', vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))/((((NULL, vt0.c1, vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c0, x'87a6f6a2', vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))/((((NULL, vt0.c1, vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c0, x'87a6f6a2', vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))/((((NULL, vt0.c1, vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c0, x'87a6f6a2', vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))/((((NULL, vt0.c1, vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c0, x'87a6f6a2', vt0.c1))))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((('-314979371') IS TRUE)))==((CASE rt0.c1  WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 END))) WHERE ((((rt0.c1)|(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)|(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((('-314979371') IS TRUE)))==((CASE rt0.c1  WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 END))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((('-314979371') IS TRUE)))==((CASE rt0.c1  WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 END))) WHERE ((((rt0.c1)|(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)|(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((('-314979371') IS TRUE)))==((CASE rt0.c1  WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 END))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((('-314979371') IS TRUE)))==((CASE rt0.c1  WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 END))) WHERE ((((rt0.c1)|(vt0.c0)) IN ()));
SELECT ALL * FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (x'');
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))%(NULL COLLATE RTRIM)) WHERE (-1.317427024E9) ORDER BY ((CAST('21776924' AS BLOB))==((vt0.c0 IN ()))) ASC, (((vt0.c0 IN ()))<(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1.317427024E9) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))%(NULL COLLATE RTRIM)) ORDER BY ((CAST('21776924' AS BLOB))=((vt0.c0 IN ()))) ASC, (((vt0.c0 IN ()))<(vt0.c0)) DESC  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))%(NULL COLLATE RTRIM)) WHERE (-1.317427024E9) ORDER BY ((CAST('21776924' AS BLOB))==((vt0.c0 IN ()))) ASC, (((vt0.c0 IN ()))<(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1.317427024E9) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))%(NULL COLLATE RTRIM)) ORDER BY ((CAST('21776924' AS BLOB))=((vt0.c0 IN ()))) ASC, (((vt0.c0 IN ()))<(vt0.c0)) DESC  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))%(NULL COLLATE RTRIM)) WHERE (-1.317427024E9) ORDER BY ((CAST('21776924' AS BLOB))==((vt0.c0 IN ()))) ASC, (((vt0.c0 IN ()))<(vt0.c0)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((LOWER(DISTINCT rt0.c2)) BETWEEN (((rt0.c2)/(rt0.c2))) AND (((x'') NOT BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT rt0.c2)) BETWEEN (((rt0.c2)/(rt0.c2))) AND (((x'') NOT BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((LOWER(DISTINCT rt0.c2)) BETWEEN (((rt0.c2)/(rt0.c2))) AND (((x'') NOT BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT rt0.c2)) BETWEEN (((rt0.c2)/(rt0.c2))) AND (((x'') NOT BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((LOWER(DISTINCT rt0.c2)) BETWEEN (((rt0.c2)/(rt0.c2))) AND (((x'') NOT BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE ((SQLITE_COMPILEOPTION_GET(NULL) IN ((rt0.c0 IN ()), (NOT (vt0.c1))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND ((CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)))  NULLS FIRST, (+ (CASE WHEN vt0.c1 THEN vt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((SQLITE_COMPILEOPTION_GET(NULL) IN ((rt0.c0 IN ()), (NOT (vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND ((CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)))  NULLS FIRST, (+ (CASE WHEN vt0.c1 THEN vt0.c1 END)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((SQLITE_COMPILEOPTION_GET(NULL) IN ((rt0.c0 IN ()), (NOT (vt0.c1))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND ((CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)))  NULLS FIRST, (+ (CASE WHEN vt0.c1 THEN vt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((SQLITE_COMPILEOPTION_GET(NULL) IN ((rt0.c0 IN ()), (NOT (vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND ((CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)))  NULLS FIRST, (+ (CASE WHEN vt0.c1 THEN vt0.c1 END)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((SQLITE_COMPILEOPTION_GET(NULL) IN ((rt0.c0 IN ()), (NOT (vt0.c1))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND ((CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)))  NULLS FIRST, (+ (CASE WHEN vt0.c1 THEN vt0.c1 END)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 NOT INDEXED WHERE (CAST(CAST(rt0.c2 AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS TEXT) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (CAST(CAST(rt0.c2 AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS TEXT) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (CAST(CAST(rt0.c2 AS TEXT) AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR(rt0.c0 COLLATE BINARY)))AND(((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR(rt0.c0 COLLATE BINARY)))AND(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR(rt0.c0 COLLATE BINARY)))AND(((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR(rt0.c0 COLLATE BINARY)))AND(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR(rt0.c0 COLLATE BINARY)))AND(((rt0.c2) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2, ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)), ((rt0.c2) IS FALSE)))>=((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), highlight(rt0.c1, rt0.c1, '0.8721285797837861', rt0.c2), CASE WHEN rt0.c0 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)), ((rt0.c2) IS FALSE)))>=((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), highlight(rt0.c1, rt0.c1, '0.8721285797837861', rt0.c2), CASE WHEN rt0.c0 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2, ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)), ((rt0.c2) IS FALSE)))>=((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), highlight(rt0.c1, rt0.c1, '0.8721285797837861', rt0.c2), CASE WHEN rt0.c0 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)), ((rt0.c2) IS FALSE)))>=((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), highlight(rt0.c1, rt0.c1, '0.8721285797837861', rt0.c2), CASE WHEN rt0.c0 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((- (vt0.c0)) IN ()) WHERE (((589252873) IS FALSE)) ORDER BY CASE ((vt0.c0)+(rt0.c2))  WHEN ((NULL) ISNULL) THEN STRFTIME(vt0.c0, rt0.c1, rt0.c1, rt0.c2, vt0.c1) ELSE CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((589252873) IS FALSE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((- (vt0.c0)) IN ()) ORDER BY CASE ((vt0.c0)+(rt0.c2))  WHEN ((NULL) ISNULL) THEN STRFTIME(vt0.c0, rt0.c1, rt0.c1, rt0.c2, vt0.c1) ELSE CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((- (vt0.c0)) IN ()) WHERE (((589252873) IS FALSE)) ORDER BY CASE ((vt0.c0)+(rt0.c2))  WHEN ((NULL) ISNULL) THEN STRFTIME(vt0.c0, rt0.c1, rt0.c1, rt0.c2, vt0.c1) ELSE CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((589252873) IS FALSE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((- (vt0.c0)) IN ()) ORDER BY CASE ((vt0.c0)+(rt0.c2))  WHEN ((NULL) ISNULL) THEN STRFTIME(vt0.c0, rt0.c1, rt0.c1, rt0.c2, vt0.c1) ELSE CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((- (vt0.c0)) IN ()) WHERE (((589252873) IS FALSE)) ORDER BY CASE ((vt0.c0)+(rt0.c2))  WHEN ((NULL) ISNULL) THEN STRFTIME(vt0.c0, rt0.c1, rt0.c1, rt0.c2, vt0.c1) ELSE CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((NOT (vt0.c1)))));
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN 611805954 THEN rt0.c1 WHEN '922873390' THEN x'' END) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) AND ((- (rt0.c2))))) ORDER BY (((((rt0.c0)%(rt0.c1))))<>((CAST(NULL AS NUMERIC)))) DESC, CAST(1982636391 AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN 611805954 THEN rt0.c1 WHEN '922873390' THEN x'' END) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) AND ((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)%(rt0.c1))))!=((CAST(NULL AS NUMERIC)))) DESC, CAST(1982636391 AS BLOB) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN 611805954 THEN rt0.c1 WHEN '922873390' THEN x'' END) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) AND ((- (rt0.c2))))) ORDER BY (((((rt0.c0)%(rt0.c1))))<>((CAST(NULL AS NUMERIC)))) DESC, CAST(1982636391 AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN 611805954 THEN rt0.c1 WHEN '922873390' THEN x'' END) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) AND ((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)%(rt0.c1))))!=((CAST(NULL AS NUMERIC)))) DESC, CAST(1982636391 AS BLOB) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN 611805954 THEN rt0.c1 WHEN '922873390' THEN x'' END) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) AND ((- (rt0.c2))))) ORDER BY (((((rt0.c0)%(rt0.c1))))<>((CAST(NULL AS NUMERIC)))) DESC, CAST(1982636391 AS BLOB) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON TRIM(DISTINCT ((rt0.c2)!=(vt0.c1))) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON TRIM(DISTINCT ((rt0.c2)<>(vt0.c1))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON TRIM(DISTINCT ((rt0.c2)!=(vt0.c1))) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON TRIM(DISTINCT ((rt0.c2)<>(vt0.c1))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON TRIM(DISTINCT ((rt0.c2)!=(vt0.c1))) WHERE (vt0.c1);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (CAST(UPPER(vt0.c1) AS INTEGER)) ORDER BY (- ((rt0.c2 IN ()))) DESC  NULLS LAST, rt0.c0  NULLS FIRST, (((((~ (rt0.c2)))AND((((NULL, rt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((rt0.c2, vt0.c1, 0x7ecfbcd2))))))OR(CAST(vt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(vt0.c1) AS INTEGER)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (- ((rt0.c2 IN ()))) DESC  NULLS LAST, rt0.c0  NULLS FIRST, (((((~ (rt0.c2)))AND((((NULL, rt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((rt0.c2, vt0.c1, 0x7ecfbcd2))))))OR(CAST(vt0.c1 AS INTEGER)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (CAST(UPPER(vt0.c1) AS INTEGER)) ORDER BY (- ((rt0.c2 IN ()))) DESC  NULLS LAST, rt0.c0  NULLS FIRST, (((((~ (rt0.c2)))AND((((NULL, rt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((rt0.c2, vt0.c1, 0x7ecfbcd2))))))OR(CAST(vt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(vt0.c1) AS INTEGER)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (- ((rt0.c2 IN ()))) DESC  NULLS LAST, rt0.c0  NULLS FIRST, (((((~ (rt0.c2)))AND((((NULL, rt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((rt0.c2, vt0.c1, 0x7ecfbcd2))))))OR(CAST(vt0.c1 AS INTEGER)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (CAST(UPPER(vt0.c1) AS INTEGER)) ORDER BY (- ((rt0.c2 IN ()))) DESC  NULLS LAST, rt0.c0  NULLS FIRST, (((((~ (rt0.c2)))AND((((NULL, rt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((rt0.c2, vt0.c1, 0x7ecfbcd2))))))OR(CAST(vt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT * FROM vt0 WHERE (CAST((- (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((- (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((- (vt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE vt0.c1  WHEN rt0.c2 THEN rt0.c2 END) IS FALSE)) ORDER BY (((((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))+(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN rt0.c2 THEN rt0.c2 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))+(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE vt0.c1  WHEN rt0.c2 THEN rt0.c2 END) IS FALSE)) ORDER BY (((((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))+(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN rt0.c2 THEN rt0.c2 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))+(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE vt0.c1  WHEN rt0.c2 THEN rt0.c2 END) IS FALSE)) ORDER BY (((((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))+(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) AS NUMERIC)) ORDER BY (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN ((NOT (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN ((NOT (rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) AS NUMERIC)) ORDER BY (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN ((NOT (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN ((NOT (rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) AS NUMERIC)) ORDER BY (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN ((NOT (rt0.c2)))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((STRFTIME(x'', vt0.c0, '-852095044'))=((((vt0.c1))<>((0.07747780610833044)))))) ORDER BY '0.32539291482462573' DESC;
SELECT SUM(count) FROM (SELECT ((((STRFTIME(x'', vt0.c0, '-852095044'))=((((vt0.c1))!=((0.07747780610833044)))))) IS TRUE)  as count FROM vt0 ORDER BY '0.32539291482462573' DESC);
SELECT COUNT(*) FROM vt0 WHERE (((STRFTIME(x'', vt0.c0, '-852095044'))=((((vt0.c1))<>((0.07747780610833044)))))) ORDER BY '0.32539291482462573' DESC;
SELECT SUM(count) FROM (SELECT ((((STRFTIME(x'', vt0.c0, '-852095044'))=((((vt0.c1))!=((0.07747780610833044)))))) IS TRUE)  as count FROM vt0 ORDER BY '0.32539291482462573' DESC);
SELECT COUNT(*) FROM vt0 WHERE (((STRFTIME(x'', vt0.c0, '-852095044'))=((((vt0.c1))<>((0.07747780610833044)))))) ORDER BY '0.32539291482462573' DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((x'37cf') NOT NULL)) ORDER BY (((NOT (rt0.c1)))IS(SQLITE_VERSION())) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'37cf') NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NOT (rt0.c1)))IS(SQLITE_VERSION())) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((x'37cf') NOT NULL)) ORDER BY (((NOT (rt0.c1)))IS(SQLITE_VERSION())) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'37cf') NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NOT (rt0.c1)))IS(SQLITE_VERSION())) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((x'37cf') NOT NULL)) ORDER BY (((NOT (rt0.c1)))IS(SQLITE_VERSION())) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (0.02941696416638273) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((0.02941696416638273) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (0.02941696416638273) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((0.02941696416638273) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (0.02941696416638273) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c1 COLLATE NOCASE)OR((vt0.c0 IN ()))))AND(vt0.c1)))OR(vt0.c0)))OR(((vt0.c0) IS TRUE)))) ORDER BY CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END  WHEN vt0.c0 THEN UNLIKELY(vt0.c1) ELSE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS LAST, ((((CAST('7-Y⋑v]' AS BLOB))OR((vt0.c0 IN (vt0.c1, vt0.c0)))))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1 COLLATE NOCASE)OR((vt0.c0 IN ()))))AND(vt0.c1)))OR(vt0.c0)))OR(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END  WHEN vt0.c0 THEN UNLIKELY(vt0.c1) ELSE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS LAST, ((((CAST('7-Y⋑v]' AS BLOB))OR((vt0.c0 IN (vt0.c1, vt0.c0)))))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c1 COLLATE NOCASE)OR((vt0.c0 IN ()))))AND(vt0.c1)))OR(vt0.c0)))OR(((vt0.c0) IS TRUE)))) ORDER BY CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END  WHEN vt0.c0 THEN UNLIKELY(vt0.c1) ELSE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS LAST, ((((CAST('7-Y⋑v]' AS BLOB))OR((vt0.c0 IN (vt0.c1, vt0.c0)))))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1 COLLATE NOCASE)OR((vt0.c0 IN ()))))AND(vt0.c1)))OR(vt0.c0)))OR(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END  WHEN vt0.c0 THEN UNLIKELY(vt0.c1) ELSE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS LAST, ((((CAST('7-Y⋑v]' AS BLOB))OR((vt0.c0 IN (vt0.c1, vt0.c0)))))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c1 COLLATE NOCASE)OR((vt0.c0 IN ()))))AND(vt0.c1)))OR(vt0.c0)))OR(((vt0.c0) IS TRUE)))) ORDER BY CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END  WHEN vt0.c0 THEN UNLIKELY(vt0.c1) ELSE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS LAST, ((((CAST('7-Y⋑v]' AS BLOB))OR((vt0.c0 IN (vt0.c1, vt0.c0)))))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((('675950209')<=(vt0.c1)))-(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((('675950209')<=(vt0.c1)))-(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((('675950209')<=(vt0.c1)))-(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((('675950209')<=(vt0.c1)))-(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((('675950209')<=(vt0.c1)))-(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))));
SELECT ALL * FROM rt0, vt0 WHERE ((((CAST(rt0.c2 AS NUMERIC), CASE WHEN 0.941579358018033 THEN rt0.c0 ELSE vt0.c1 END, vt0.c0))<=((rt0.c1, ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)), CAST(vt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c2 AS NUMERIC), CASE WHEN 0.941579358018033 THEN rt0.c0 ELSE vt0.c1 END, vt0.c0))<=((rt0.c1, ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)), CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((CAST(rt0.c2 AS NUMERIC), CASE WHEN 0.941579358018033 THEN rt0.c0 ELSE vt0.c1 END, vt0.c0))<=((rt0.c1, ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)), CAST(vt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c2 AS NUMERIC), CASE WHEN 0.941579358018033 THEN rt0.c0 ELSE vt0.c1 END, vt0.c0))<=((rt0.c1, ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)), CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((CAST(rt0.c2 AS NUMERIC), CASE WHEN 0.941579358018033 THEN rt0.c0 ELSE vt0.c1 END, vt0.c0))<=((rt0.c1, ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)), CAST(vt0.c0 AS NUMERIC)))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (UNLIKELY(DISTINCT rt0.c1)) AND ('-2144910603')));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (UNLIKELY(DISTINCT rt0.c1)) AND ('-2144910603'))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (UNLIKELY(DISTINCT rt0.c1)) AND ('-2144910603')));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (UNLIKELY(DISTINCT rt0.c1)) AND ('-2144910603'))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (UNLIKELY(DISTINCT rt0.c1)) AND ('-2144910603')));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 IN ()) IN (((vt0.c0)>>(rt0.c2)), (~ (rt0.c2))))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))%(CAST(vt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN (((vt0.c0)>>(rt0.c2)), (~ (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED ORDER BY (((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))%(CAST(vt0.c1 AS INTEGER)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 IN ()) IN (((vt0.c0)>>(rt0.c2)), (~ (rt0.c2))))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))%(CAST(vt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN (((vt0.c0)>>(rt0.c2)), (~ (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED ORDER BY (((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))%(CAST(vt0.c1 AS INTEGER)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 IN ()) IN (((vt0.c0)>>(rt0.c2)), (~ (rt0.c2))))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))%(CAST(vt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c1) ORDER BY LIKE(((rt0.c2)IS(vt0.c0)), (rt0.c0 IN ('-849766295'))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY LIKE(((rt0.c2)IS(vt0.c0)), (rt0.c0 IN ('-849766295'))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c1) ORDER BY LIKE(((rt0.c2)IS(vt0.c0)), (rt0.c0 IN ('-849766295'))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY LIKE(((rt0.c2)IS(vt0.c0)), (rt0.c0 IN ('-849766295'))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c1) ORDER BY LIKE(((rt0.c2)IS(vt0.c0)), (rt0.c0 IN ('-849766295'))) ASC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) IS FALSE)) IS FALSE)) ORDER BY json_type(vt0.c1)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY json_type(vt0.c1)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) IS FALSE)) IS FALSE)) ORDER BY json_type(vt0.c1)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY json_type(vt0.c1)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) IS FALSE)) IS FALSE)) ORDER BY json_type(vt0.c1)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)=(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CASE WHEN (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) THEN (('') NOTNULL) WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c0)!=(vt0.c0)) WHEN (- (vt0.c0)) THEN LIKELIHOOD(vt0.c0, 0.40039187155487166) END;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)==(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) THEN (('') NOTNULL) WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c0)!=(vt0.c0)) WHEN (- (vt0.c0)) THEN LIKELIHOOD(vt0.c0, 0.40039187155487166) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)=(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CASE WHEN (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) THEN (('') NOTNULL) WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c0)!=(vt0.c0)) WHEN (- (vt0.c0)) THEN LIKELIHOOD(vt0.c0, 0.40039187155487166) END;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)==(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) THEN (('') NOTNULL) WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c0)!=(vt0.c0)) WHEN (- (vt0.c0)) THEN LIKELIHOOD(vt0.c0, 0.40039187155487166) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)=(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CASE WHEN (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) THEN (('') NOTNULL) WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c0)!=(vt0.c0)) WHEN (- (vt0.c0)) THEN LIKELIHOOD(vt0.c0, 0.40039187155487166) END;
SELECT COUNT(*) FROM vt0 WHERE ((((x'' IN (vt0.c0, vt0.c0)))>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CASE WHEN ((vt0.c1) NOT BETWEEN (x'fa96') AND (vt0.c1)) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END ELSE ((vt0.c1)OR(vt0.c0)) END  NULLS LAST, CASE NULL  WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END ELSE ((((vt0.c0)OR(x'')))AND(0.9973337415672149)) END  NULLS FIRST, ((((SUBSTR(vt0.c1, vt0.c1))AND((- (vt0.c0)))))AND(((vt0.c1) NOT BETWEEN ('z0') AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN (vt0.c0, vt0.c0)))>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1) NOT BETWEEN (x'fa96') AND (vt0.c1)) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END ELSE ((vt0.c1)OR(vt0.c0)) END  NULLS LAST, CASE NULL  WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END ELSE ((((vt0.c0)OR(x'')))AND(0.9973337415672149)) END  NULLS FIRST, ((((SUBSTR(vt0.c1, vt0.c1))AND((- (vt0.c0)))))AND(((vt0.c1) NOT BETWEEN ('z0') AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((x'' IN (vt0.c0, vt0.c0)))>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CASE WHEN ((vt0.c1) NOT BETWEEN (x'fa96') AND (vt0.c1)) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END ELSE ((vt0.c1)OR(vt0.c0)) END  NULLS LAST, CASE NULL  WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END ELSE ((((vt0.c0)OR(x'')))AND(0.9973337415672149)) END  NULLS FIRST, ((((SUBSTR(vt0.c1, vt0.c1))AND((- (vt0.c0)))))AND(((vt0.c1) NOT BETWEEN ('z0') AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN (vt0.c0, vt0.c0)))>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1) NOT BETWEEN (x'fa96') AND (vt0.c1)) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END ELSE ((vt0.c1)OR(vt0.c0)) END  NULLS LAST, CASE NULL  WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END ELSE ((((vt0.c0)OR(x'')))AND(0.9973337415672149)) END  NULLS FIRST, ((((SUBSTR(vt0.c1, vt0.c1))AND((- (vt0.c0)))))AND(((vt0.c1) NOT BETWEEN ('z0') AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((x'' IN (vt0.c0, vt0.c0)))>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CASE WHEN ((vt0.c1) NOT BETWEEN (x'fa96') AND (vt0.c1)) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END ELSE ((vt0.c1)OR(vt0.c0)) END  NULLS LAST, CASE NULL  WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END ELSE ((((vt0.c0)OR(x'')))AND(0.9973337415672149)) END  NULLS FIRST, ((((SUBSTR(vt0.c1, vt0.c1))AND((- (vt0.c0)))))AND(((vt0.c1) NOT BETWEEN ('z0') AND (vt0.c0))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((rt0.c1)) BETWEEN ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((0.4567685229642172))) WHERE ((('')/(rt0.c1 COLLATE NOCASE))) ORDER BY ((UNLIKELY(DISTINCT rt0.c2)) ISNULL) DESC, CASE WHEN CAST(rt0.c0 AS REAL) THEN rt0.c1 COLLATE BINARY ELSE CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL (((('')/(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((rt0.c1)) BETWEEN ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((0.4567685229642172))) ORDER BY ((UNLIKELY(DISTINCT rt0.c2)) ISNULL) DESC, CASE WHEN CAST(rt0.c0 AS REAL) THEN rt0.c1 COLLATE BINARY ELSE CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END END);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((rt0.c1)) BETWEEN ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((0.4567685229642172))) WHERE ((('')/(rt0.c1 COLLATE NOCASE))) ORDER BY ((UNLIKELY(DISTINCT rt0.c2)) ISNULL) DESC, CASE WHEN CAST(rt0.c0 AS REAL) THEN rt0.c1 COLLATE BINARY ELSE CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL (((('')/(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((rt0.c1)) BETWEEN ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((0.4567685229642172))) ORDER BY ((UNLIKELY(DISTINCT rt0.c2)) ISNULL) DESC, CASE WHEN CAST(rt0.c0 AS REAL) THEN rt0.c1 COLLATE BINARY ELSE CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END END);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((rt0.c1)) BETWEEN ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((0.4567685229642172))) WHERE ((('')/(rt0.c1 COLLATE NOCASE))) ORDER BY ((UNLIKELY(DISTINCT rt0.c2)) ISNULL) DESC, CASE WHEN CAST(rt0.c0 AS REAL) THEN rt0.c1 COLLATE BINARY ELSE CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END END;
SELECT ALL * FROM rt0, vt0 WHERE ((- (rt0.c1 COLLATE RTRIM))) ORDER BY rt0.c2 COLLATE BINARY, CASE ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c1))  WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE RTRIM END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2 COLLATE BINARY, CASE ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c1))  WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE RTRIM END  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((- (rt0.c1 COLLATE RTRIM))) ORDER BY rt0.c2 COLLATE BINARY, CASE ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c1))  WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE RTRIM END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2 COLLATE BINARY, CASE ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c1))  WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE RTRIM END  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((- (rt0.c1 COLLATE RTRIM))) ORDER BY rt0.c2 COLLATE BINARY, CASE ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c1))  WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE RTRIM END  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN rt0 ON ((CAST('-799639836' AS REAL)) IS FALSE) WHERE ('') ORDER BY ((('-897605673')==(rt0.c2)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((CAST('-799639836' AS REAL)) IS FALSE) ORDER BY ((('-897605673')==(rt0.c2)) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN rt0 ON ((CAST('-799639836' AS REAL)) IS FALSE) WHERE ('') ORDER BY ((('-897605673')==(rt0.c2)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((CAST('-799639836' AS REAL)) IS FALSE) ORDER BY ((('-897605673')==(rt0.c2)) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN rt0 ON ((CAST('-799639836' AS REAL)) IS FALSE) WHERE ('') ORDER BY ((('-897605673')==(rt0.c2)) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((~ (((vt0.c0)>(rt0.c1))))) ORDER BY (~ (vt0.c1)) COLLATE RTRIM ASC, ((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c2)))OR(((rt0.c1)%(x'43dc')))))AND((NOT (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)>(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (vt0.c1)) COLLATE RTRIM ASC, ((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c2)))OR(((rt0.c1)%(x'43dc')))))AND((NOT (rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((~ (((vt0.c0)>(rt0.c1))))) ORDER BY (~ (vt0.c1)) COLLATE RTRIM ASC, ((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c2)))OR(((rt0.c1)%(x'43dc')))))AND((NOT (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)>(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (vt0.c1)) COLLATE RTRIM ASC, ((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c2)))OR(((rt0.c1)%(x'43dc')))))AND((NOT (rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((~ (((vt0.c0)>(rt0.c1))))) ORDER BY (~ (vt0.c1)) COLLATE RTRIM ASC, ((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c2)))OR(((rt0.c1)%(x'43dc')))))AND((NOT (rt0.c1))))  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)/(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)/(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)/(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)/(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)/(rt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0 WHERE (((LIKELY(vt0.c1)) NOT BETWEEN (0xffffffffaad83d2b) AND (vt0.c1 COLLATE NOCASE))) ORDER BY NULL, CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(vt0.c1)) NOT BETWEEN (0xffffffffaad83d2b) AND (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY NULL, CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((LIKELY(vt0.c1)) NOT BETWEEN (0xffffffffaad83d2b) AND (vt0.c1 COLLATE NOCASE))) ORDER BY NULL, CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(vt0.c1)) NOT BETWEEN (0xffffffffaad83d2b) AND (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY NULL, CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((LIKELY(vt0.c1)) NOT BETWEEN (0xffffffffaad83d2b) AND (vt0.c1 COLLATE NOCASE))) ORDER BY NULL, CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))=(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))==(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))=(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))==(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))=(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)));
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c0)|(rt0.c2)) THEN NULLIF('-1249141857', rt0.c2) END) ORDER BY ((vt0.c1)AND(vt0.c1)) COLLATE RTRIM DESC, (((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c2)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)|(rt0.c2)) THEN NULLIF('-1249141857', rt0.c2) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c1)AND(vt0.c1)) COLLATE RTRIM DESC, (((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c2)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c0)|(rt0.c2)) THEN NULLIF('-1249141857', rt0.c2) END) ORDER BY ((vt0.c1)AND(vt0.c1)) COLLATE RTRIM DESC, (((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c2)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)|(rt0.c2)) THEN NULLIF('-1249141857', rt0.c2) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c1)AND(vt0.c1)) COLLATE RTRIM DESC, (((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c2)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c0)|(rt0.c2)) THEN NULLIF('-1249141857', rt0.c2) END) ORDER BY ((vt0.c1)AND(vt0.c1)) COLLATE RTRIM DESC, (((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c2)) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((- (vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((- (vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((- (vt0.c1))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))OR(rt0.c2)))AND(((rt0.c0) IS TRUE))))OR(COALESCE(0.597661105756019, rt0.c1, rt0.c1, rt0.c1))))AND(((rt0.c2)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))OR(rt0.c2)))AND(((rt0.c0) IS TRUE))))OR(COALESCE(0.597661105756019, rt0.c1, rt0.c1, rt0.c1))))AND(((rt0.c2)IS(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))OR(rt0.c2)))AND(((rt0.c0) IS TRUE))))OR(COALESCE(0.597661105756019, rt0.c1, rt0.c1, rt0.c1))))AND(((rt0.c2)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))OR(rt0.c2)))AND(((rt0.c0) IS TRUE))))OR(COALESCE(0.597661105756019, rt0.c1, rt0.c1, rt0.c1))))AND(((rt0.c2)IS(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))OR(rt0.c2)))AND(((rt0.c0) IS TRUE))))OR(COALESCE(0.597661105756019, rt0.c1, rt0.c1, rt0.c1))))AND(((rt0.c2)IS(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((~ (rt0.c1)))AND(((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt0.c1)))AND(((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))))AND(rt0.c2))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((~ (rt0.c1)))AND(((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt0.c1)))AND(((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))))AND(rt0.c2))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((~ (rt0.c1)))AND(((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))))AND(rt0.c2)));
SELECT * FROM rt0 WHERE ((((rt0.c1 IN ()))IS(x'')));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))IS(x''))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1 IN ()))IS(x'')));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))IS(x''))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1 IN ()))IS(x'')));
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(vt0.c1 AS REAL)) BETWEEN (((0xffffffff861ececb)>(''))) AND ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL)) BETWEEN (((0Xffffffff861ececb)>(''))) AND ((- (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(vt0.c1 AS REAL)) BETWEEN (((0xffffffff861ececb)>(''))) AND ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL)) BETWEEN (((0Xffffffff861ececb)>(''))) AND ((- (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(vt0.c1 AS REAL)) BETWEEN (((0xffffffff861ececb)>(''))) AND ((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON x'' WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))==(CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))==(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON x'');
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON x'' WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))==(CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))==(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON x'');
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON x'' WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))==(CAST(rt0.c2 AS NUMERIC))));
SELECT * FROM vt0 WHERE ((~ (CAST('' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST('' AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (CAST('' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST('' AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (CAST('' AS INTEGER))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((json_patch(rt0.c1, vt0.c0) IN ())) ORDER BY CASE WHEN IFNULL(rt0.c0, vt0.c1) THEN ((rt0.c0)*(rt0.c1)) END DESC  NULLS FIRST, ((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((json_patch(rt0.c1, vt0.c0) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN IFNULL(rt0.c0, vt0.c1) THEN ((rt0.c0)*(rt0.c1)) END DESC  NULLS FIRST, ((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((json_patch(rt0.c1, vt0.c0) IN ())) ORDER BY CASE WHEN IFNULL(rt0.c0, vt0.c1) THEN ((rt0.c0)*(rt0.c1)) END DESC  NULLS FIRST, ((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((json_patch(rt0.c1, vt0.c0) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN IFNULL(rt0.c0, vt0.c1) THEN ((rt0.c0)*(rt0.c1)) END DESC  NULLS FIRST, ((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((json_patch(rt0.c1, vt0.c0) IN ())) ORDER BY CASE WHEN IFNULL(rt0.c0, vt0.c1) THEN ((rt0.c0)*(rt0.c1)) END DESC  NULLS FIRST, ((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c1) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END) NOT BETWEEN (CASE rt0.c1  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c1 THEN NULL END) AND (((rt0.c0)IS NOT(x'5ffe'))));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END) NOT BETWEEN (CASE rt0.c1  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c1 THEN NULL END) AND (((rt0.c0)IS NOT(x'5ffe')))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c1) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END) NOT BETWEEN (CASE rt0.c1  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c1 THEN NULL END) AND (((rt0.c0)IS NOT(x'5ffe'))));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END) NOT BETWEEN (CASE rt0.c1  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c1 THEN NULL END) AND (((rt0.c0)IS NOT(x'5ffe')))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c1) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END) NOT BETWEEN (CASE rt0.c1  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c1 THEN NULL END) AND (((rt0.c0)IS NOT(x'5ffe'))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)*('-817012213')) IN (((0.12981809582658688) BETWEEN (rt0.c1) AND ('>Ze⅁P(탰)7xN')), rt0.c1))) ORDER BY CAST(rt0.c0 AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)*('-817012213')) IN (((0.12981809582658688) BETWEEN (rt0.c1) AND ('>Ze⅁P(탰)7xN')), rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 AS REAL)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)*('-817012213')) IN (((0.12981809582658688) BETWEEN (rt0.c1) AND ('>Ze⅁P(탰)7xN')), rt0.c1))) ORDER BY CAST(rt0.c0 AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)*('-817012213')) IN (((0.12981809582658688) BETWEEN (rt0.c1) AND ('>Ze⅁P(탰)7xN')), rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 AS REAL)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)*('-817012213')) IN (((0.12981809582658688) BETWEEN (rt0.c1) AND ('>Ze⅁P(탰)7xN')), rt0.c1))) ORDER BY CAST(rt0.c0 AS REAL)  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN (NOT (rt0.c1)) THEN ((((((((vt0.c0)AND(vt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(vt0.c0)) END) ORDER BY (- (rt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS REAL)  WHEN (NOT (rt0.c1)) THEN ((((((((vt0.c0)AND(vt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (rt0.c2)) COLLATE BINARY);
SELECT * FROM vt0, rt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN (NOT (rt0.c1)) THEN ((((((((vt0.c0)AND(vt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(vt0.c0)) END) ORDER BY (- (rt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS REAL)  WHEN (NOT (rt0.c1)) THEN ((((((((vt0.c0)AND(vt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (rt0.c2)) COLLATE BINARY);
SELECT * FROM vt0, rt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN (NOT (rt0.c1)) THEN ((((((((vt0.c0)AND(vt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(vt0.c0)) END) ORDER BY (- (rt0.c2)) COLLATE BINARY;
SELECT ALL * FROM rt0, vt0 WHERE (x'') ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0);
SELECT ALL * FROM rt0, vt0 WHERE (x'') ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0);
SELECT ALL * FROM rt0, vt0 WHERE (x'') ORDER BY rt0.c0;
SELECT * FROM rt0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))/(((((x'')AND(rt0.c2)))AND(vt0.c0))))) ORDER BY rt0.c0 COLLATE RTRIM ASC, CAST('7P*kyI1' AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))/(((((x'')AND(rt0.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0 COLLATE RTRIM ASC, CAST('7P*kyI1' AS BLOB) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))/(((((x'')AND(rt0.c2)))AND(vt0.c0))))) ORDER BY rt0.c0 COLLATE RTRIM ASC, CAST('7P*kyI1' AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))/(((((x'')AND(rt0.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0 COLLATE RTRIM ASC, CAST('7P*kyI1' AS BLOB) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))/(((((x'')AND(rt0.c2)))AND(vt0.c0))))) ORDER BY rt0.c0 COLLATE RTRIM ASC, CAST('7P*kyI1' AS BLOB) DESC  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE ((NOT (((vt0.c0)%(vt0.c0))))) ORDER BY ((((rt0.c0) IS FALSE)) BETWEEN ((rt0.c1 IN ())) AND (0.40726522646126917));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0) IS FALSE)) BETWEEN ((rt0.c1 IN ())) AND (0.40726522646126917)));
SELECT * FROM vt0, rt0 WHERE ((NOT (((vt0.c0)%(vt0.c0))))) ORDER BY ((((rt0.c0) IS FALSE)) BETWEEN ((rt0.c1 IN ())) AND (0.40726522646126917));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0) IS FALSE)) BETWEEN ((rt0.c1 IN ())) AND (0.40726522646126917)));
SELECT * FROM vt0, rt0 WHERE ((NOT (((vt0.c0)%(vt0.c0))))) ORDER BY ((((rt0.c0) IS FALSE)) BETWEEN ((rt0.c1 IN ())) AND (0.40726522646126917));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ()))IS(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 END)) WHERE ((x'c18b' IN ())) ORDER BY CAST((((rt0.c2))>=((vt0.c0))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((x'c18b' IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ()))IS(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 END)) ORDER BY CAST((((rt0.c2))>=((vt0.c0))) AS NUMERIC));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ()))IS(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 END)) WHERE ((x'c18b' IN ())) ORDER BY CAST((((rt0.c2))>=((vt0.c0))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((x'c18b' IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ()))IS(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 END)) ORDER BY CAST((((rt0.c2))>=((vt0.c0))) AS NUMERIC));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ()))IS(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 END)) WHERE ((x'c18b' IN ())) ORDER BY CAST((((rt0.c2))>=((vt0.c0))) AS NUMERIC);
SELECT ALL * FROM rt0, vt0 WHERE ((((('333937187')OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))OR(((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((('333937187')OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))OR(((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((('333937187')OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))OR(((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((('333937187')OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))OR(((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((('333937187')OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))OR(((rt0.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)GLOB(rt0.c0)))OR(HEX(rt0.c0))))OR(json_type(rt0.c0)))) ORDER BY CAST(rt0.c0 AS INTEGER) ASC, (((rt0.c1)|(rt0.c2)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)GLOB(rt0.c0)))OR(HEX(rt0.c0))))OR(json_type(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 AS INTEGER) ASC, (((rt0.c1)|(rt0.c2)) IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)GLOB(rt0.c0)))OR(HEX(rt0.c0))))OR(json_type(rt0.c0)))) ORDER BY CAST(rt0.c0 AS INTEGER) ASC, (((rt0.c1)|(rt0.c2)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)GLOB(rt0.c0)))OR(HEX(rt0.c0))))OR(json_type(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 AS INTEGER) ASC, (((rt0.c1)|(rt0.c2)) IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)GLOB(rt0.c0)))OR(HEX(rt0.c0))))OR(json_type(rt0.c0)))) ORDER BY CAST(rt0.c0 AS INTEGER) ASC, (((rt0.c1)|(rt0.c2)) IN ()) DESC;
SELECT ALL * FROM rt0, vt0 WHERE ((~ (((vt0.c1)||(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c1)||(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((~ (((vt0.c1)||(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c1)||(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((~ (((vt0.c1)||(rt0.c2)))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE '-1617485503' END))) WHERE (x'35a3') ORDER BY ((((rt0.c0)==(rt0.c0)))IS(vt0.c0 COLLATE BINARY)), ((CASE WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)OR(((rt0.c1)>(vt0.c0))))  NULLS LAST, ((~ (rt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((x'35a3') IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE '-1617485503' END))) ORDER BY ((((rt0.c0)==(rt0.c0)))IS(vt0.c0 COLLATE BINARY)), ((CASE WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)OR(((rt0.c1)>(vt0.c0))))  NULLS LAST, ((~ (rt0.c0)) IN ()) ASC);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE '-1617485503' END))) WHERE (x'35a3') ORDER BY ((((rt0.c0)==(rt0.c0)))IS(vt0.c0 COLLATE BINARY)), ((CASE WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)OR(((rt0.c1)>(vt0.c0))))  NULLS LAST, ((~ (rt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((x'35a3') IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE '-1617485503' END))) ORDER BY ((((rt0.c0)==(rt0.c0)))IS(vt0.c0 COLLATE BINARY)), ((CASE WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)OR(((rt0.c1)>(vt0.c0))))  NULLS LAST, ((~ (rt0.c0)) IN ()) ASC);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))) AND ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE '-1617485503' END))) WHERE (x'35a3') ORDER BY ((((rt0.c0)==(rt0.c0)))IS(vt0.c0 COLLATE BINARY)), ((CASE WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)OR(((rt0.c1)>(vt0.c0))))  NULLS LAST, ((~ (rt0.c0)) IN ()) ASC;
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ()))GLOB((((rt0.c1))<>((rt0.c1)))))) ORDER BY rt0.c1 DESC  NULLS LAST, (((((~ (rt0.c2)))AND(NULL)))AND(rt0.c0))  NULLS FIRST, (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))GLOB((((rt0.c1))!=((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC  NULLS LAST, (((((~ (rt0.c2)))AND(NULL)))AND(rt0.c0))  NULLS FIRST, (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) IN ()) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ()))GLOB((((rt0.c1))<>((rt0.c1)))))) ORDER BY rt0.c1 DESC  NULLS LAST, (((((~ (rt0.c2)))AND(NULL)))AND(rt0.c0))  NULLS FIRST, (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))GLOB((((rt0.c1))!=((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC  NULLS LAST, (((((~ (rt0.c2)))AND(NULL)))AND(rt0.c0))  NULLS FIRST, (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) IN ()) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ()))GLOB((((rt0.c1))<>((rt0.c1)))))) ORDER BY rt0.c1 DESC  NULLS LAST, (((((~ (rt0.c2)))AND(NULL)))AND(rt0.c0))  NULLS FIRST, (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (CAST(((vt0.c0) NOT NULL) AS BLOB)) ORDER BY (NOT (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT NULL) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (CAST(((vt0.c0) NOT NULL) AS BLOB)) ORDER BY (NOT (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT NULL) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (CAST(((vt0.c0) NOT NULL) AS BLOB)) ORDER BY (NOT (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))));
SELECT * FROM rt0 WHERE ((((rt0.c0)+(NULL)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)+(NULL)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0)+(NULL)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)+(NULL)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0)+(NULL)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) IS TRUE)) ORDER BY ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND('\~醴Kr')))OR(vt0.c0))) NOTNULL) DESC  NULLS FIRST, ((((vt0.c0)AND(vt0.c0)))||('-j')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND('\~醴Kr')))OR(vt0.c0))) NOTNULL) DESC  NULLS FIRST, ((((vt0.c0)AND(vt0.c0)))||('-j')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) IS TRUE)) ORDER BY ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND('\~醴Kr')))OR(vt0.c0))) NOTNULL) DESC  NULLS FIRST, ((((vt0.c0)AND(vt0.c0)))||('-j')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND('\~醴Kr')))OR(vt0.c0))) NOTNULL) DESC  NULLS FIRST, ((((vt0.c0)AND(vt0.c0)))||('-j')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) IS TRUE)) ORDER BY ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND('\~醴Kr')))OR(vt0.c0))) NOTNULL) DESC  NULLS FIRST, ((((vt0.c0)AND(vt0.c0)))||('-j')) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((- (vt0.c1)) IN ()) DESC, vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((- (vt0.c1)) IN ()) DESC, vt0.c1);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((- (vt0.c1)) IN ()) DESC, vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((- (vt0.c1)) IN ()) DESC, vt0.c1);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((- (vt0.c1)) IN ()) DESC, vt0.c1;
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(rt0.c2 AS BLOB))GLOB(((x'c9d8')OR(0.40179598505870606)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB))GLOB(((x'c9d8')OR(0.40179598505870606))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(rt0.c2 AS BLOB))GLOB(((x'c9d8')OR(0.40179598505870606)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB))GLOB(((x'c9d8')OR(0.40179598505870606))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(rt0.c2 AS BLOB))GLOB(((x'c9d8')OR(0.40179598505870606)))));
SELECT * FROM rt0 WHERE (((((rt0.c2)%(rt0.c1)))IS((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)%(rt0.c1)))IS((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)%(rt0.c1)))IS((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)%(rt0.c1)))IS((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)%(rt0.c1)))IS((NOT (rt0.c2)))));
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c1) IS TRUE) AS TEXT)) ORDER BY CAST((rt0.c2 IN ()) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) IS TRUE) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((rt0.c2 IN ()) AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c1) IS TRUE) AS TEXT)) ORDER BY CAST((rt0.c2 IN ()) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) IS TRUE) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((rt0.c2 IN ()) AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c1) IS TRUE) AS TEXT)) ORDER BY CAST((rt0.c2 IN ()) AS BLOB) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1)AND(rt0.c0)))IS NOT(((rt0.c0)GLOB(vt0.c1))))) ORDER BY ((rt0.c2 COLLATE BINARY) ISNULL), (((((rt0.c0)AND(0.12481970594034919)))AND(rt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)AND(rt0.c0)))IS NOT(((rt0.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c2 COLLATE BINARY) ISNULL), (((((rt0.c0)AND(0.12481970594034919)))AND(rt0.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1)AND(rt0.c0)))IS NOT(((rt0.c0)GLOB(vt0.c1))))) ORDER BY ((rt0.c2 COLLATE BINARY) ISNULL), (((((rt0.c0)AND(0.12481970594034919)))AND(rt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)AND(rt0.c0)))IS NOT(((rt0.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c2 COLLATE BINARY) ISNULL), (((((rt0.c0)AND(0.12481970594034919)))AND(rt0.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1)AND(rt0.c0)))IS NOT(((rt0.c0)GLOB(vt0.c1))))) ORDER BY ((rt0.c2 COLLATE BINARY) ISNULL), (((((rt0.c0)AND(0.12481970594034919)))AND(rt0.c0)) IN ())  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))<<(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))<<(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0 DESC);
SELECT * FROM vt0, rt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))<<(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))<<(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0 DESC);
SELECT * FROM vt0, rt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))<<(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY vt0.c0 DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c0  WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c2 END) NOTNULL)) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c2 END) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY x'' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c0  WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c2 END) NOTNULL)) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c2 END) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY x'' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c0  WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c2 END) NOTNULL)) ORDER BY x'' DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(IFNULL(DISTINCT rt0.c2, rt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(DISTINCT rt0.c2, rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(IFNULL(DISTINCT rt0.c2, rt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(DISTINCT rt0.c2, rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(IFNULL(DISTINCT rt0.c2, rt0.c2) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c2);
SELECT ALL * FROM vt0, rt0 WHERE ((~ ((('-793317790') ISNULL)))) ORDER BY ((((((rt0.c0)OR('-888739784')))OR(rt0.c2))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND ('0.4567685229642172')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((('-793317790') ISNULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c0)OR('-888739784')))OR(rt0.c2))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND ('0.4567685229642172')) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((~ ((('-793317790') ISNULL)))) ORDER BY ((((((rt0.c0)OR('-888739784')))OR(rt0.c2))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND ('0.4567685229642172')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((('-793317790') ISNULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c0)OR('-888739784')))OR(rt0.c2))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND ('0.4567685229642172')) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((~ ((('-793317790') ISNULL)))) ORDER BY ((((((rt0.c0)OR('-888739784')))OR(rt0.c2))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND ('0.4567685229642172')) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((NULL IN ()))==((((vt0.c0))>((vt0.c0)))))) ORDER BY ((((vt0.c1)|(vt0.c1))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))=((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)|(vt0.c1))) IS TRUE) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((NULL IN ()))==((((vt0.c0))>((vt0.c0)))))) ORDER BY ((((vt0.c1)|(vt0.c1))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))=((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)|(vt0.c1))) IS TRUE) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((NULL IN ()))==((((vt0.c0))>((vt0.c0)))))) ORDER BY ((((vt0.c1)|(vt0.c1))) IS TRUE) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)))OR(LIKELIHOOD(rt0.c0, 0.10569782127927774))))AND((rt0.c0 IN ())))) ORDER BY (((NOT (rt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)))OR(LIKELIHOOD(rt0.c0, 0.10569782127927774))))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((NOT (rt0.c1))) NOT NULL));
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)))OR(LIKELIHOOD(rt0.c0, 0.10569782127927774))))AND((rt0.c0 IN ())))) ORDER BY (((NOT (rt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)))OR(LIKELIHOOD(rt0.c0, 0.10569782127927774))))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((NOT (rt0.c1))) NOT NULL));
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)))OR(LIKELIHOOD(rt0.c0, 0.10569782127927774))))AND((rt0.c0 IN ())))) ORDER BY (((NOT (rt0.c1))) NOT NULL);
SELECT * FROM rt0 WHERE (((0X3acc151b) IS TRUE)) ORDER BY ((((((rt0.c0) IS TRUE))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND('-282365827'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0x3acc151b) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0) IS TRUE))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND('-282365827'))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((0X3acc151b) IS TRUE)) ORDER BY ((((((rt0.c0) IS TRUE))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND('-282365827'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0x3acc151b) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0) IS TRUE))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND('-282365827'))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((0X3acc151b) IS TRUE)) ORDER BY ((((((rt0.c0) IS TRUE))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND('-282365827'))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((x'')OR(rt0.c1)))OR(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR(rt0.c1)))OR(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((x'')OR(rt0.c1)))OR(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR(rt0.c1)))OR(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((x'')OR(rt0.c1)))OR(CAST(rt0.c0 AS NUMERIC))));
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS BLOB))||((x'' IN (rt0.c1, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB))||((x'' IN (rt0.c1, rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS BLOB))||((x'' IN (rt0.c1, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB))||((x'' IN (rt0.c1, rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS BLOB))||((x'' IN (rt0.c1, rt0.c0)))));
SELECT ALL * FROM rt0, vt0 WHERE (((('909979620')) BETWEEN (((rt0.c0 IN (rt0.c2)))) AND ((CAST(x'' AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL ((((('909979620')) BETWEEN (((rt0.c0 IN (rt0.c2)))) AND ((CAST(x'' AS REAL))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((('909979620')) BETWEEN (((rt0.c0 IN (rt0.c2)))) AND ((CAST(x'' AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL ((((('909979620')) BETWEEN (((rt0.c0 IN (rt0.c2)))) AND ((CAST(x'' AS REAL))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((('909979620')) BETWEEN (((rt0.c0 IN (rt0.c2)))) AND ((CAST(x'' AS REAL)))));
SELECT ALL * FROM rt0, vt0 WHERE ((- (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((- (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((- (rt0.c1 COLLATE BINARY)));
SELECT * FROM rt0 WHERE ('986453275');
SELECT SUM(count) FROM (SELECT (('986453275') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('986453275');
SELECT SUM(count) FROM (SELECT (('986453275') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('986453275');
SELECT * FROM vt0, rt0 WHERE (CASE WHEN (((rt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN (rt0.c0 IN (vt0.c0)) END) ORDER BY CASE (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c1)) AND ((vt0.c1, 'BbꅧK4I', rt0.c2)))  WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN ((rt0.c0) IS TRUE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN (rt0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c1)) AND ((vt0.c1, 'BbꅧK4I', rt0.c2)))  WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN ((rt0.c0) IS TRUE) END  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN (((rt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN (rt0.c0 IN (vt0.c0)) END) ORDER BY CASE (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c1)) AND ((vt0.c1, 'BbꅧK4I', rt0.c2)))  WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN ((rt0.c0) IS TRUE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN (rt0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c1)) AND ((vt0.c1, 'BbꅧK4I', rt0.c2)))  WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN ((rt0.c0) IS TRUE) END  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN (((rt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN (rt0.c0 IN (vt0.c0)) END) ORDER BY CASE (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c1)) AND ((vt0.c1, 'BbꅧK4I', rt0.c2)))  WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN ((rt0.c0) IS TRUE) END  NULLS LAST;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2 WHERE (' \r');
SELECT SUM(count) FROM (SELECT ((' \r') IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2 WHERE (' \r');
SELECT SUM(count) FROM (SELECT ((' \r') IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2 WHERE (' \r');
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON 0.2673679027266447 WHERE (0xffffffffd0b6ee62) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((0Xffffffffd0b6ee62) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON 0.2673679027266447 ORDER BY rt0.c1);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON 0.2673679027266447 WHERE (0xffffffffd0b6ee62) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((0Xffffffffd0b6ee62) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON 0.2673679027266447 ORDER BY rt0.c1);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON 0.2673679027266447 WHERE (0xffffffffd0b6ee62) ORDER BY rt0.c1;
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN (rt0.c2, rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN (rt0.c2, rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN (rt0.c2, rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN (rt0.c2, rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN (rt0.c2, rt0.c2)) AS REAL));
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0) NOTNULL)) IS FALSE));
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((((vt0.c1)>(rt0.c2)))==(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>(rt0.c2)))==(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((((vt0.c1)>(rt0.c2)))==(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>(rt0.c2)))==(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((((vt0.c1)>(rt0.c2)))==(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE 0.6883947360386957 END IN ()), CAST(vt0.c0 AS TEXT) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE 0.6883947360386957 END IN ()), CAST(vt0.c0 AS TEXT) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE 0.6883947360386957 END IN ()), CAST(vt0.c0 AS TEXT) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE 0.6883947360386957 END IN ()), CAST(vt0.c0 AS TEXT) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE 0.6883947360386957 END IN ()), CAST(vt0.c0 AS TEXT) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1 COLLATE RTRIM, '986453275')) AND ((GLOB(0.7318289617452062, vt0.c1), ((vt0.c1)>=(vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) ORDER BY '-746180867' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1 COLLATE RTRIM, '986453275')) AND ((GLOB(0.7318289617452062, vt0.c1), ((vt0.c1)>=(vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY '-746180867' ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1 COLLATE RTRIM, '986453275')) AND ((GLOB(0.7318289617452062, vt0.c1), ((vt0.c1)>=(vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) ORDER BY '-746180867' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1 COLLATE RTRIM, '986453275')) AND ((GLOB(0.7318289617452062, vt0.c1), ((vt0.c1)>=(vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY '-746180867' ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1 COLLATE RTRIM, '986453275')) AND ((GLOB(0.7318289617452062, vt0.c1), ((vt0.c1)>=(vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) ORDER BY '-746180867' ASC;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)&(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)&(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)&(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)&(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)&(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (GLOB(CAST(rt0.c1 AS NUMERIC), -746618179)) ORDER BY CASE rt0.c2  WHEN rt0.c2 THEN '0.4117573810933157' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((GLOB(CAST(rt0.c1 AS NUMERIC), -746618179)) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c2  WHEN rt0.c2 THEN '0.4117573810933157' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (GLOB(CAST(rt0.c1 AS NUMERIC), -746618179)) ORDER BY CASE rt0.c2  WHEN rt0.c2 THEN '0.4117573810933157' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((GLOB(CAST(rt0.c1 AS NUMERIC), -746618179)) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c2  WHEN rt0.c2 THEN '0.4117573810933157' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (GLOB(CAST(rt0.c1 AS NUMERIC), -746618179)) ORDER BY CASE rt0.c2  WHEN rt0.c2 THEN '0.4117573810933157' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM rt0 WHERE (((DATETIME(rt0.c0, rt0.c2, rt0.c1))IS(CASE x''  WHEN rt0.c0 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(rt0.c0, rt0.c2, rt0.c1))IS(CASE x''  WHEN rt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((DATETIME(rt0.c0, rt0.c2, rt0.c1))IS(CASE x''  WHEN rt0.c0 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(rt0.c0, rt0.c2, rt0.c1))IS(CASE x''  WHEN rt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((DATETIME(rt0.c0, rt0.c2, rt0.c1))IS(CASE x''  WHEN rt0.c0 THEN rt0.c2 END)));
SELECT COUNT(*) FROM rt0 WHERE (((909979620) NOT BETWEEN (x'' COLLATE RTRIM) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY CASE WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 COLLATE NOCASE ELSE (((rt0.c2, rt0.c0, rt0.c1))=((rt0.c2, x'', rt0.c1))) END  NULLS LAST, x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((909979620) NOT BETWEEN (x'' COLLATE RTRIM) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 COLLATE NOCASE ELSE (((rt0.c2, rt0.c0, rt0.c1))==((rt0.c2, x'', rt0.c1))) END  NULLS LAST, x'' DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((909979620) NOT BETWEEN (x'' COLLATE RTRIM) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY CASE WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 COLLATE NOCASE ELSE (((rt0.c2, rt0.c0, rt0.c1))=((rt0.c2, x'', rt0.c1))) END  NULLS LAST, x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((909979620) NOT BETWEEN (x'' COLLATE RTRIM) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 COLLATE NOCASE ELSE (((rt0.c2, rt0.c0, rt0.c1))==((rt0.c2, x'', rt0.c1))) END  NULLS LAST, x'' DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((909979620) NOT BETWEEN (x'' COLLATE RTRIM) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY CASE WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 COLLATE NOCASE ELSE (((rt0.c2, rt0.c0, rt0.c1))=((rt0.c2, x'', rt0.c1))) END  NULLS LAST, x'' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (ABS(DISTINCT vt0.c1));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT vt0.c1)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (ABS(DISTINCT vt0.c1));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT vt0.c1)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (ABS(DISTINCT vt0.c1));
SELECT * FROM rt0, vt0 WHERE (LOWER(DISTINCT rt0.c2) COLLATE BINARY) ORDER BY (((vt0.c1, vt0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c2) ISNULL), '512007520', rt0.c2)) AND ((((vt0.c1) IS FALSE), (rt0.c2 IN (0.7501636228496413)), vt0.c0))), vt0.c0 COLLATE RTRIM  NULLS LAST, ((rt0.c0 COLLATE RTRIM)>=((rt0.c0 IN (rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c1, vt0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c2) ISNULL), '512007520', rt0.c2)) AND ((((vt0.c1) IS FALSE), (rt0.c2 IN (0.7501636228496413)), vt0.c0))), vt0.c0 COLLATE RTRIM  NULLS LAST, ((rt0.c0 COLLATE RTRIM)>=((rt0.c0 IN (rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (LOWER(DISTINCT rt0.c2) COLLATE BINARY) ORDER BY (((vt0.c1, vt0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c2) ISNULL), '512007520', rt0.c2)) AND ((((vt0.c1) IS FALSE), (rt0.c2 IN (0.7501636228496413)), vt0.c0))), vt0.c0 COLLATE RTRIM  NULLS LAST, ((rt0.c0 COLLATE RTRIM)>=((rt0.c0 IN (rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c1, vt0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c2) ISNULL), '512007520', rt0.c2)) AND ((((vt0.c1) IS FALSE), (rt0.c2 IN (0.7501636228496413)), vt0.c0))), vt0.c0 COLLATE RTRIM  NULLS LAST, ((rt0.c0 COLLATE RTRIM)>=((rt0.c0 IN (rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (LOWER(DISTINCT rt0.c2) COLLATE BINARY) ORDER BY (((vt0.c1, vt0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c2) ISNULL), '512007520', rt0.c2)) AND ((((vt0.c1) IS FALSE), (rt0.c2 IN (0.7501636228496413)), vt0.c0))), vt0.c0 COLLATE RTRIM  NULLS LAST, ((rt0.c0 COLLATE RTRIM)>=((rt0.c0 IN (rt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((+ (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))));
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((vt0.c1)&('')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)&('')) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((vt0.c1)&('')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)&('')) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((vt0.c1)&('')) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)==(rt0.c0))) BETWEEN ('') AND (((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)=(rt0.c0))) BETWEEN ('') AND (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)==(rt0.c0))) BETWEEN ('') AND (((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)=(rt0.c0))) BETWEEN ('') AND (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)==(rt0.c0))) BETWEEN ('') AND (((rt0.c0) IS TRUE))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))GLOB(vt0.c0 COLLATE BINARY))) ORDER BY CASE (((vt0.c1, vt0.c1, 0.31251569660196643)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1)))  WHEN ((vt0.c0) NOT BETWEEN (0.5125526224041187) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END ELSE ((vt0.c0)IS(vt0.c1)) END;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))GLOB(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c1, vt0.c1, 0.31251569660196643)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1)))  WHEN ((vt0.c0) NOT BETWEEN (0.5125526224041187) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END ELSE ((vt0.c0)IS(vt0.c1)) END);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))GLOB(vt0.c0 COLLATE BINARY))) ORDER BY CASE (((vt0.c1, vt0.c1, 0.31251569660196643)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1)))  WHEN ((vt0.c0) NOT BETWEEN (0.5125526224041187) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END ELSE ((vt0.c0)IS(vt0.c1)) END;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))GLOB(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c1, vt0.c1, 0.31251569660196643)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1)))  WHEN ((vt0.c0) NOT BETWEEN (0.5125526224041187) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END ELSE ((vt0.c0)IS(vt0.c1)) END);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))GLOB(vt0.c0 COLLATE BINARY))) ORDER BY CASE (((vt0.c1, vt0.c1, 0.31251569660196643)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1)))  WHEN ((vt0.c0) NOT BETWEEN (0.5125526224041187) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END ELSE ((vt0.c0)IS(vt0.c1)) END;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((((vt0.c0)AND(rt0.c2)))OR(vt0.c1)))AND(x'8453')))OR('ﮱdQI')))AND((((rt0.c0, vt0.c1, rt0.c2)) BETWEEN ((x'dc6c', 'hE', rt0.c1)) AND ((rt0.c2, vt0.c1, rt0.c2))))))OR(CAST(rt0.c2 AS NUMERIC)))) ORDER BY CASE ((vt0.c1)>(vt0.c1))  WHEN ((rt0.c0) NOT NULL) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN UNLIKELY(rt0.c1) THEN vt0.c1 WHEN TRIM(DISTINCT rt0.c2) THEN (NOT (rt0.c1)) END, NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)AND(rt0.c2)))OR(vt0.c1)))AND(x'8453')))OR('ﮱdQI')))AND((((rt0.c0, vt0.c1, rt0.c2)) BETWEEN ((x'dc6c', 'hE', rt0.c1)) AND ((rt0.c2, vt0.c1, rt0.c2))))))OR(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE ((vt0.c1)>(vt0.c1))  WHEN ((rt0.c0) NOT NULL) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN UNLIKELY(rt0.c1) THEN vt0.c1 WHEN TRIM(DISTINCT rt0.c2) THEN (NOT (rt0.c1)) END, NULL ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((((vt0.c0)AND(rt0.c2)))OR(vt0.c1)))AND(x'8453')))OR('ﮱdQI')))AND((((rt0.c0, vt0.c1, rt0.c2)) BETWEEN ((x'dc6c', 'hE', rt0.c1)) AND ((rt0.c2, vt0.c1, rt0.c2))))))OR(CAST(rt0.c2 AS NUMERIC)))) ORDER BY CASE ((vt0.c1)>(vt0.c1))  WHEN ((rt0.c0) NOT NULL) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN UNLIKELY(rt0.c1) THEN vt0.c1 WHEN TRIM(DISTINCT rt0.c2) THEN (NOT (rt0.c1)) END, NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)AND(rt0.c2)))OR(vt0.c1)))AND(x'8453')))OR('ﮱdQI')))AND((((rt0.c0, vt0.c1, rt0.c2)) BETWEEN ((x'dc6c', 'hE', rt0.c1)) AND ((rt0.c2, vt0.c1, rt0.c2))))))OR(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE ((vt0.c1)>(vt0.c1))  WHEN ((rt0.c0) NOT NULL) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN UNLIKELY(rt0.c1) THEN vt0.c1 WHEN TRIM(DISTINCT rt0.c2) THEN (NOT (rt0.c1)) END, NULL ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((((vt0.c0)AND(rt0.c2)))OR(vt0.c1)))AND(x'8453')))OR('ﮱdQI')))AND((((rt0.c0, vt0.c1, rt0.c2)) BETWEEN ((x'dc6c', 'hE', rt0.c1)) AND ((rt0.c2, vt0.c1, rt0.c2))))))OR(CAST(rt0.c2 AS NUMERIC)))) ORDER BY CASE ((vt0.c1)>(vt0.c1))  WHEN ((rt0.c0) NOT NULL) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN UNLIKELY(rt0.c1) THEN vt0.c1 WHEN TRIM(DISTINCT rt0.c2) THEN (NOT (rt0.c1)) END, NULL ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)<<(rt0.c0)) AS NUMERIC)) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(CAST(rt0.c1 AS INTEGER))))AND(CAST(rt0.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)<<(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(CAST(rt0.c1 AS INTEGER))))AND(CAST(rt0.c0 AS TEXT))) DESC);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)<<(rt0.c0)) AS NUMERIC)) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(CAST(rt0.c1 AS INTEGER))))AND(CAST(rt0.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)<<(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(CAST(rt0.c1 AS INTEGER))))AND(CAST(rt0.c0 AS TEXT))) DESC);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)<<(rt0.c0)) AS NUMERIC)) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(CAST(rt0.c1 AS INTEGER))))AND(CAST(rt0.c0 AS TEXT))) DESC;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (- ((vt0.c1 IN ()))) WHERE (((((rt0.c2) IS TRUE)) BETWEEN (((rt0.c0) ISNULL)) AND (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE)) BETWEEN (((rt0.c0) ISNULL)) AND (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (- ((vt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (- ((vt0.c1 IN ()))) WHERE (((((rt0.c2) IS TRUE)) BETWEEN (((rt0.c0) ISNULL)) AND (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE)) BETWEEN (((rt0.c0) ISNULL)) AND (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (- ((vt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (- ((vt0.c1 IN ()))) WHERE (((((rt0.c2) IS TRUE)) BETWEEN (((rt0.c0) ISNULL)) AND (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c2, 0.8559095611814742));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT rt0.c2, 0.8559095611814742)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c2, 0.8559095611814742));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT rt0.c2, 0.8559095611814742)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c2, 0.8559095611814742));
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c2))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF(rt0.c2) COLLATE NOCASE) ORDER BY CAST((rt0.c0 IN (rt0.c2)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt0.c2) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c0 IN (rt0.c2)) AS BLOB) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF(rt0.c2) COLLATE NOCASE) ORDER BY CAST((rt0.c0 IN (rt0.c2)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt0.c2) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c0 IN (rt0.c2)) AS BLOB) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF(rt0.c2) COLLATE NOCASE) ORDER BY CAST((rt0.c0 IN (rt0.c2)) AS BLOB) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 COLLATE RTRIM, ((rt0.c1) IS FALSE), NULL))=((((((NULL)AND(rt0.c1)))AND(rt0.c1)), ((rt0.c2)%(rt0.c2)), rt0.c0)))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE RTRIM, ((rt0.c1) IS FALSE), NULL))=((((((NULL)AND(rt0.c1)))AND(rt0.c1)), ((rt0.c2)%(rt0.c2)), rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 COLLATE RTRIM, ((rt0.c1) IS FALSE), NULL))=((((((NULL)AND(rt0.c1)))AND(rt0.c1)), ((rt0.c2)%(rt0.c2)), rt0.c0)))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE RTRIM, ((rt0.c1) IS FALSE), NULL))=((((((NULL)AND(rt0.c1)))AND(rt0.c1)), ((rt0.c2)%(rt0.c2)), rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 COLLATE RTRIM, ((rt0.c1) IS FALSE), NULL))=((((((NULL)AND(rt0.c1)))AND(rt0.c1)), ((rt0.c2)%(rt0.c2)), rt0.c0)))) ORDER BY rt0.c1 DESC;
SELECT COUNT(*) FROM rt0 WHERE (((UPPER(DISTINCT rt0.c2)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (0.774773890079708))) ORDER BY UPPER(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT rt0.c2)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (0.774773890079708))) IS TRUE)  as count FROM rt0 ORDER BY UPPER(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((UPPER(DISTINCT rt0.c2)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (0.774773890079708))) ORDER BY UPPER(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT rt0.c2)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (0.774773890079708))) IS TRUE)  as count FROM rt0 ORDER BY UPPER(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((UPPER(DISTINCT rt0.c2)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (0.774773890079708))) ORDER BY UPPER(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))<>(((vt0.c1)||('-403652673'))))) ORDER BY (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN (TRIM(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt0.c0)))!=(((vt0.c1)||('-403652673'))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN (TRIM(vt0.c1))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))<>(((vt0.c1)||('-403652673'))))) ORDER BY (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN (TRIM(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt0.c0)))!=(((vt0.c1)||('-403652673'))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN (TRIM(vt0.c1))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))<>(((vt0.c1)||('-403652673'))))) ORDER BY (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN (TRIM(vt0.c1)));
SELECT * FROM rt0, vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND((((rt0.c1))<=((vt0.c0))))))AND(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND((((rt0.c1))<=((vt0.c0))))))AND(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND((((rt0.c1))<=((vt0.c0))))))AND(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND((((rt0.c1))<=((vt0.c0))))))AND(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND((((rt0.c1))<=((vt0.c0))))))AND(rt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) IS TRUE) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE WHEN 0.6725551048257222 THEN rt0.c2 END)OR(CAST(3.80726183E8 AS TEXT))))AND(CAST(rt0.c2 AS TEXT)))) ORDER BY ((rt0.c0) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN 0.6725551048257222 THEN rt0.c2 END)OR(CAST(3.80726183E8 AS TEXT))))AND(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE WHEN 0.6725551048257222 THEN rt0.c2 END)OR(CAST(3.80726183E8 AS TEXT))))AND(CAST(rt0.c2 AS TEXT)))) ORDER BY ((rt0.c0) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN 0.6725551048257222 THEN rt0.c2 END)OR(CAST(3.80726183E8 AS TEXT))))AND(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE WHEN 0.6725551048257222 THEN rt0.c2 END)OR(CAST(3.80726183E8 AS TEXT))))AND(CAST(rt0.c2 AS TEXT)))) ORDER BY ((rt0.c0) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ ((((vt0.c0))>=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c0))>=((rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ ((((vt0.c0))>=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c0))>=((rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ ((((vt0.c0))>=((rt0.c2))))));
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)GLOB((rt0.c1 IN (rt0.c2, rt0.c2))))) ORDER BY 0.3143977686598266 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)GLOB((rt0.c1 IN (rt0.c2, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY 0.3143977686598266 COLLATE BINARY  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)GLOB((rt0.c1 IN (rt0.c2, rt0.c2))))) ORDER BY 0.3143977686598266 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)GLOB((rt0.c1 IN (rt0.c2, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY 0.3143977686598266 COLLATE BINARY  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)GLOB((rt0.c1 IN (rt0.c2, rt0.c2))))) ORDER BY 0.3143977686598266 COLLATE BINARY  NULLS LAST;
SELECT * FROM vt0 WHERE (((((0Xffffffff828bb332) IS FALSE))<<(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0Xffffffff828bb332) IS FALSE))<<(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((0Xffffffff828bb332) IS FALSE))<<(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0Xffffffff828bb332) IS FALSE))<<(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((0Xffffffff828bb332) IS FALSE))<<(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0 WHERE (HEX(DISTINCT CASE WHEN x'6cee' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) ORDER BY CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END  WHEN UNLIKELY(DISTINCT vt0.c1) THEN ((vt0.c1) IS FALSE) WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN (NOT (vt0.c1)) WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c1)-(vt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CASE WHEN x'6cee' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt0 ORDER BY CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END  WHEN UNLIKELY(DISTINCT vt0.c1) THEN ((vt0.c1) IS FALSE) WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN (NOT (vt0.c1)) WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c1)-(vt0.c1)) END DESC);
SELECT * FROM vt0 WHERE (HEX(DISTINCT CASE WHEN x'6cee' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) ORDER BY CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END  WHEN UNLIKELY(DISTINCT vt0.c1) THEN ((vt0.c1) IS FALSE) WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN (NOT (vt0.c1)) WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c1)-(vt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CASE WHEN x'6cee' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt0 ORDER BY CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END  WHEN UNLIKELY(DISTINCT vt0.c1) THEN ((vt0.c1) IS FALSE) WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN (NOT (vt0.c1)) WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c1)-(vt0.c1)) END DESC);
SELECT * FROM vt0 WHERE (HEX(DISTINCT CASE WHEN x'6cee' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) ORDER BY CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END  WHEN UNLIKELY(DISTINCT vt0.c1) THEN ((vt0.c1) IS FALSE) WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN (NOT (vt0.c1)) WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c1)-(vt0.c1)) END DESC;
SELECT ALL * FROM rt0 WHERE (CASE WHEN '}梙' COLLATE BINARY THEN json_array(rt0.c0, rt0.c0) END) ORDER BY ((((rt0.c1)<(rt0.c2)))+(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '}梙' COLLATE BINARY THEN json_array(rt0.c0, rt0.c0) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<(rt0.c2)))+(rt0.c2))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN '}梙' COLLATE BINARY THEN json_array(rt0.c0, rt0.c0) END) ORDER BY ((((rt0.c1)<(rt0.c2)))+(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '}梙' COLLATE BINARY THEN json_array(rt0.c0, rt0.c0) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<(rt0.c2)))+(rt0.c2))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN '}梙' COLLATE BINARY THEN json_array(rt0.c0, rt0.c0) END) ORDER BY ((((rt0.c1)<(rt0.c2)))+(rt0.c2))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(CAST(rt0.c0 AS INTEGER))) ORDER BY ((((x'') NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((TYPEOF(CAST(rt0.c0 AS INTEGER))) IS TRUE)  as count FROM rt0 ORDER BY ((((x'') NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(CAST(rt0.c0 AS INTEGER))) ORDER BY ((((x'') NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((TYPEOF(CAST(rt0.c0 AS INTEGER))) IS TRUE)  as count FROM rt0 ORDER BY ((((x'') NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(CAST(rt0.c0 AS INTEGER))) ORDER BY ((((x'') NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOTNULL);
SELECT * FROM rt0, vt0 WHERE (((((((((((rt0.c2)AND(x'')))AND(rt0.c1)))AND(vt0.c0)))AND(x''))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)AND(x'')))AND(rt0.c1)))AND(vt0.c0)))AND(x''))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((((((((rt0.c2)AND(x'')))AND(rt0.c1)))AND(vt0.c0)))AND(x''))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)AND(x'')))AND(rt0.c1)))AND(vt0.c0)))AND(x''))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((((((((rt0.c2)AND(x'')))AND(rt0.c1)))AND(vt0.c0)))AND(x''))) NOTNULL));
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN (((vt0.c0)==(vt0.c0))) AND (vt0.c1))) ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN (((vt0.c0)==(vt0.c0))) AND (vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN (((vt0.c0)==(vt0.c0))) AND (vt0.c1))) ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN (((vt0.c0)==(vt0.c0))) AND (vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN (((vt0.c0)==(vt0.c0))) AND (vt0.c1))) ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (- ((rt0.c0 IN ()))) WHERE (((((((vt0.c1)IS NOT(vt0.c1)))OR(((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))))AND((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)IS NOT(vt0.c1)))OR(((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))))AND((~ (rt0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (- ((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (- ((rt0.c0 IN ()))) WHERE (((((((vt0.c1)IS NOT(vt0.c1)))OR(((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))))AND((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)IS NOT(vt0.c1)))OR(((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))))AND((~ (rt0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (- ((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (- ((rt0.c0 IN ()))) WHERE (((((((vt0.c1)IS NOT(vt0.c1)))OR(((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))))AND((~ (rt0.c1)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) NOT BETWEEN ('-746618179') AND ((((rt0.c1, rt0.c2, vt0.c0))==((vt0.c1, rt0.c2, vt0.c1))))) WHERE (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) NOT BETWEEN ('-746618179') AND ((((rt0.c1, rt0.c2, vt0.c0))==((vt0.c1, rt0.c2, vt0.c1))))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) NOT BETWEEN ('-746618179') AND ((((rt0.c1, rt0.c2, vt0.c0))==((vt0.c1, rt0.c2, vt0.c1))))) WHERE (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) NOT BETWEEN ('-746618179') AND ((((rt0.c1, rt0.c2, vt0.c0))==((vt0.c1, rt0.c2, vt0.c1))))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) NOT BETWEEN ('-746618179') AND ((((rt0.c1, rt0.c2, vt0.c0))==((vt0.c1, rt0.c2, vt0.c1))))) WHERE (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(vt0.c1)))+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN 1586104111 ELSE ((x'')<>(vt0.c1)) END DESC  NULLS LAST, ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)<=((- (vt0.c0))))  NULLS LAST, CAST((vt0.c1 IN ()) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(vt0.c1)))+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN 1586104111 ELSE ((x'')<>(vt0.c1)) END DESC  NULLS LAST, ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)<=((- (vt0.c0))))  NULLS LAST, CAST((vt0.c1 IN ()) AS NUMERIC) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(vt0.c1)))+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN 1586104111 ELSE ((x'')<>(vt0.c1)) END DESC  NULLS LAST, ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)<=((- (vt0.c0))))  NULLS LAST, CAST((vt0.c1 IN ()) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(vt0.c1)))+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN 1586104111 ELSE ((x'')<>(vt0.c1)) END DESC  NULLS LAST, ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)<=((- (vt0.c0))))  NULLS LAST, CAST((vt0.c1 IN ()) AS NUMERIC) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(vt0.c1)))+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN 1586104111 ELSE ((x'')<>(vt0.c1)) END DESC  NULLS LAST, ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)<=((- (vt0.c0))))  NULLS LAST, CAST((vt0.c1 IN ()) AS NUMERIC) DESC;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON LIKELY(0.16187023333670336) COLLATE BINARY WHERE ('l뾬,') ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE), (((rt0.c1, 0.697341154308419 COLLATE RTRIM, rt0.c1, vt0.c1 COLLATE NOCASE, 0Xffffffffbeca3bc9))<>(((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), CAST(rt0.c0 AS BLOB), (+ (rt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c1)), vt0.c0))) DESC, (~ (((((0.35208352040650803)AND(rt0.c0)))OR(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (('l뾬,') IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON LIKELY(0.16187023333670336) COLLATE BINARY ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE), (((rt0.c1, 0.697341154308419 COLLATE RTRIM, rt0.c1, vt0.c1 COLLATE NOCASE, 0Xffffffffbeca3bc9))<>(((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), CAST(rt0.c0 AS BLOB), (+ (rt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c1)), vt0.c0))) DESC, (~ (((((0.35208352040650803)AND(rt0.c0)))OR(vt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON LIKELY(0.16187023333670336) COLLATE BINARY WHERE ('l뾬,') ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE), (((rt0.c1, 0.697341154308419 COLLATE RTRIM, rt0.c1, vt0.c1 COLLATE NOCASE, 0Xffffffffbeca3bc9))<>(((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), CAST(rt0.c0 AS BLOB), (+ (rt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c1)), vt0.c0))) DESC, (~ (((((0.35208352040650803)AND(rt0.c0)))OR(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (('l뾬,') IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON LIKELY(0.16187023333670336) COLLATE BINARY ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE), (((rt0.c1, 0.697341154308419 COLLATE RTRIM, rt0.c1, vt0.c1 COLLATE NOCASE, 0Xffffffffbeca3bc9))<>(((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), CAST(rt0.c0 AS BLOB), (+ (rt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c1)), vt0.c0))) DESC, (~ (((((0.35208352040650803)AND(rt0.c0)))OR(vt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON LIKELY(0.16187023333670336) COLLATE BINARY WHERE ('l뾬,') ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE), (((rt0.c1, 0.697341154308419 COLLATE RTRIM, rt0.c1, vt0.c1 COLLATE NOCASE, 0Xffffffffbeca3bc9))<>(((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), CAST(rt0.c0 AS BLOB), (+ (rt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c1)), vt0.c0))) DESC, (~ (((((0.35208352040650803)AND(rt0.c0)))OR(vt0.c1)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (0.580911734687393) ORDER BY NULLIF(rt0.c0, 0.33530403562807265) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.580911734687393) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(rt0.c0, 0.33530403562807265) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (0.580911734687393) ORDER BY NULLIF(rt0.c0, 0.33530403562807265) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.580911734687393) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(rt0.c0, 0.33530403562807265) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (0.580911734687393) ORDER BY NULLIF(rt0.c0, 0.33530403562807265) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (CAST(COALESCE(rt0.c2, vt0.c1) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(COALESCE(rt0.c2, vt0.c1) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(COALESCE(rt0.c2, vt0.c1) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(COALESCE(rt0.c2, vt0.c1) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(COALESCE(rt0.c2, vt0.c1) AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE (TRIM(((rt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c2) ISNULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (TRIM(((rt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c2) ISNULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (TRIM(((rt0.c2) ISNULL)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0) NOTNULL)) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0) NOTNULL)) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0) NOTNULL)) ORDER BY rt0.c1  NULLS LAST;
SELECT * FROM rt0 INNER JOIN vt0 ON 'voWS戋ㅜB' WHERE (((('-1058387973')) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((((vt0.c1)>>(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((('-1058387973')) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((((vt0.c1)>>(vt0.c0)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON 'voWS戋ㅜB');
SELECT * FROM rt0 INNER JOIN vt0 ON 'voWS戋ㅜB' WHERE (((('-1058387973')) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((((vt0.c1)>>(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((('-1058387973')) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((((vt0.c1)>>(vt0.c0)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON 'voWS戋ㅜB');
SELECT * FROM rt0 INNER JOIN vt0 ON 'voWS戋ㅜB' WHERE (((('-1058387973')) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((((vt0.c1)>>(vt0.c0))))));
SELECT ALL * FROM rt0 WHERE (NULLIF('-403652673', '-1769142227' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((NULLIF('-403652673', '-1769142227' COLLATE NOCASE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULLIF('-403652673', '-1769142227' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((NULLIF('-403652673', '-1769142227' COLLATE NOCASE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULLIF('-403652673', '-1769142227' COLLATE NOCASE));
SELECT * FROM vt0 WHERE ((((vt0.c0) IS FALSE) IN (vt0.c1))) ORDER BY ((NULL) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) IS FALSE) IN (vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) NOT NULL)  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0) IS FALSE) IN (vt0.c1))) ORDER BY ((NULL) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) IS FALSE) IN (vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) NOT NULL)  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0) IS FALSE) IN (vt0.c1))) ORDER BY ((NULL) NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((('!8')) BETWEEN ((((((NULL)OR(rt0.c0)))AND(rt0.c2)))) AND ((NULLIF(DISTINCT vt0.c0, rt0.c2)))) WHERE (NULL COLLATE BINARY) ORDER BY (((((((((vt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((('!8')) BETWEEN ((((((NULL)OR(rt0.c0)))AND(rt0.c2)))) AND ((NULLIF(DISTINCT vt0.c0, rt0.c2)))) ORDER BY (((((((((vt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((('!8')) BETWEEN ((((((NULL)OR(rt0.c0)))AND(rt0.c2)))) AND ((NULLIF(DISTINCT vt0.c0, rt0.c2)))) WHERE (NULL COLLATE BINARY) ORDER BY (((((((((vt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((('!8')) BETWEEN ((((((NULL)OR(rt0.c0)))AND(rt0.c2)))) AND ((NULLIF(DISTINCT vt0.c0, rt0.c2)))) ORDER BY (((((((((vt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((('!8')) BETWEEN ((((((NULL)OR(rt0.c0)))AND(rt0.c2)))) AND ((NULLIF(DISTINCT vt0.c0, rt0.c2)))) WHERE (NULL COLLATE BINARY) ORDER BY (((((((((vt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ('-846783192') ORDER BY CASE rt0.c2  WHEN '-2059834518' THEN rt0.c2 ELSE rt0.c1 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-846783192') IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c2  WHEN '-2059834518' THEN rt0.c2 ELSE rt0.c1 END COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('-846783192') ORDER BY CASE rt0.c2  WHEN '-2059834518' THEN rt0.c2 ELSE rt0.c1 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-846783192') IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c2  WHEN '-2059834518' THEN rt0.c2 ELSE rt0.c1 END COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('-846783192') ORDER BY CASE rt0.c2  WHEN '-2059834518' THEN rt0.c2 ELSE rt0.c1 END COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS TEXT))<<(((vt0.c0) BETWEEN (rt0.c2) AND (NULL))))) ORDER BY ABS(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))<<(((vt0.c0) BETWEEN (rt0.c2) AND (NULL))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ABS(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))));
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS TEXT))<<(((vt0.c0) BETWEEN (rt0.c2) AND (NULL))))) ORDER BY ABS(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))<<(((vt0.c0) BETWEEN (rt0.c2) AND (NULL))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ABS(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))));
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS TEXT))<<(((vt0.c0) BETWEEN (rt0.c2) AND (NULL))))) ORDER BY ABS(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)));
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))AND(((vt0.c1) NOTNULL))))OR(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS TEXT))AND(((vt0.c1) NOTNULL))))OR(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))AND(((vt0.c1) NOTNULL))))OR(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS TEXT))AND(((vt0.c1) NOTNULL))))OR(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))AND(((vt0.c1) NOTNULL))))OR(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE ('-852095044') ORDER BY (((CASE WHEN rt0.c0 THEN '-372251540' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END, rt0.c1, rt0.c1))>=((rt0.c1 COLLATE BINARY, (rt0.c2 IN ()), ((rt0.c1)>>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (('-852095044') IS TRUE)  as count FROM rt0 ORDER BY (((CASE WHEN rt0.c0 THEN '-372251540' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END, rt0.c1, rt0.c1))>=((rt0.c1 COLLATE BINARY, (rt0.c2 IN ()), ((rt0.c1)>>(rt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE ('-852095044') ORDER BY (((CASE WHEN rt0.c0 THEN '-372251540' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END, rt0.c1, rt0.c1))>=((rt0.c1 COLLATE BINARY, (rt0.c2 IN ()), ((rt0.c1)>>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (('-852095044') IS TRUE)  as count FROM rt0 ORDER BY (((CASE WHEN rt0.c0 THEN '-372251540' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END, rt0.c1, rt0.c1))>=((rt0.c1 COLLATE BINARY, (rt0.c2 IN ()), ((rt0.c1)>>(rt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE ('-852095044') ORDER BY (((CASE WHEN rt0.c0 THEN '-372251540' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END, rt0.c1, rt0.c1))>=((rt0.c1 COLLATE BINARY, (rt0.c2 IN ()), ((rt0.c1)>>(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c2)));
SELECT COUNT(*) FROM rt0 WHERE (((((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))AND((rt0.c1 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))AND((rt0.c1 IN (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))AND((rt0.c1 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))AND((rt0.c1 IN (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))AND((rt0.c1 IN (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c2) IS TRUE))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON 'ujDWkGb' WHERE ((NOT (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON 'ujDWkGb');
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON 'ujDWkGb' WHERE ((NOT (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON 'ujDWkGb');
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON 'ujDWkGb' WHERE ((NOT (vt0.c0 COLLATE NOCASE)));
SELECT * FROM rt0, vt0 WHERE (NULL) ORDER BY ((((CAST(-1.058387973E9 AS NUMERIC))OR(PRINTF(vt0.c0))))AND(((rt0.c0)IS(vt0.c0)))), ((((vt0.c0) NOTNULL))==(CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((CAST(-1.058387973E9 AS NUMERIC))OR(PRINTF(vt0.c0))))AND(((rt0.c0)IS(vt0.c0)))), ((((vt0.c0) NOTNULL))==(CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c1 END))  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (NULL) ORDER BY ((((CAST(-1.058387973E9 AS NUMERIC))OR(PRINTF(vt0.c0))))AND(((rt0.c0)IS(vt0.c0)))), ((((vt0.c0) NOTNULL))==(CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((CAST(-1.058387973E9 AS NUMERIC))OR(PRINTF(vt0.c0))))AND(((rt0.c0)IS(vt0.c0)))), ((((vt0.c0) NOTNULL))==(CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c1 END))  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (NULL) ORDER BY ((((CAST(-1.058387973E9 AS NUMERIC))OR(PRINTF(vt0.c0))))AND(((rt0.c0)IS(vt0.c0)))), ((((vt0.c0) NOTNULL))==(CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c1 END))  NULLS LAST;
SELECT * FROM rt0 WHERE ((((+ (rt0.c1)))IS NOT(((rt0.c2)GLOB(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1)))IS NOT(((rt0.c2)GLOB(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((+ (rt0.c1)))IS NOT(((rt0.c2)GLOB(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1)))IS NOT(((rt0.c2)GLOB(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((+ (rt0.c1)))IS NOT(((rt0.c2)GLOB(rt0.c2)))));
SELECT * FROM vt0, rt0 WHERE (json_object(CAST(vt0.c0 AS BLOB), ((rt0.c1)||(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_object(CAST(vt0.c0 AS BLOB), ((rt0.c1)||(vt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (json_object(CAST(vt0.c0 AS BLOB), ((rt0.c1)||(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_object(CAST(vt0.c0 AS BLOB), ((rt0.c1)||(vt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END)>=(CASE WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY (- (((rt0.c0)-(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c0 END)>=(CASE WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (((rt0.c0)-(rt0.c1)))) ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END)>=(CASE WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY (- (((rt0.c0)-(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c0 END)>=(CASE WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (((rt0.c0)-(rt0.c1)))) ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END)>=(CASE WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY (- (((rt0.c0)-(rt0.c1)))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT));
SELECT * FROM rt0 WHERE ((((rt0.c0)OR(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)OR(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0)OR(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)OR(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0)OR(rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (RTRIM(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))) ORDER BY CASE TRIM(DISTINCT vt0.c1)  WHEN ((vt0.c0)||(vt0.c1)) THEN ((vt0.c1)IS(vt0.c1)) ELSE (((vt0.c1))<((vt0.c0))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CASE TRIM(DISTINCT vt0.c1)  WHEN ((vt0.c0)||(vt0.c1)) THEN ((vt0.c1)IS(vt0.c1)) ELSE (((vt0.c1))<((vt0.c0))) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (RTRIM(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))) ORDER BY CASE TRIM(DISTINCT vt0.c1)  WHEN ((vt0.c0)||(vt0.c1)) THEN ((vt0.c1)IS(vt0.c1)) ELSE (((vt0.c1))<((vt0.c0))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CASE TRIM(DISTINCT vt0.c1)  WHEN ((vt0.c0)||(vt0.c1)) THEN ((vt0.c1)IS(vt0.c1)) ELSE (((vt0.c1))<((vt0.c0))) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (RTRIM(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))) ORDER BY CASE TRIM(DISTINCT vt0.c1)  WHEN ((vt0.c0)||(vt0.c1)) THEN ((vt0.c1)IS(vt0.c1)) ELSE (((vt0.c1))<((vt0.c0))) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((+ (rt0.c0)) AS BLOB)) ORDER BY CASE ((rt0.c0)IS(rt0.c2))  WHEN ((rt0.c2)||(rt0.c1)) THEN (((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0))) ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0)IS(rt0.c2))  WHEN ((rt0.c2)||(rt0.c1)) THEN (((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0))) ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((+ (rt0.c0)) AS BLOB)) ORDER BY CASE ((rt0.c0)IS(rt0.c2))  WHEN ((rt0.c2)||(rt0.c1)) THEN (((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0))) ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0)IS(rt0.c2))  WHEN ((rt0.c2)||(rt0.c1)) THEN (((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0))) ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((+ (rt0.c0)) AS BLOB)) ORDER BY CASE ((rt0.c0)IS(rt0.c2))  WHEN ((rt0.c2)||(rt0.c1)) THEN (((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0))) ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) AND ((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) AND ((- (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) AND ((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) AND ((- (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) AND ((- (vt0.c1)))));
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c0)GLOB(rt0.c2)) AS TEXT)) ORDER BY CAST(SQLITE_COMPILEOPTION_GET('ꃂiQh*+Y	#') AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)GLOB(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(SQLITE_COMPILEOPTION_GET('ꃂiQh*+Y	#') AS TEXT)  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c0)GLOB(rt0.c2)) AS TEXT)) ORDER BY CAST(SQLITE_COMPILEOPTION_GET('ꃂiQh*+Y	#') AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)GLOB(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(SQLITE_COMPILEOPTION_GET('ꃂiQh*+Y	#') AS TEXT)  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c0)GLOB(rt0.c2)) AS TEXT)) ORDER BY CAST(SQLITE_COMPILEOPTION_GET('ꃂiQh*+Y	#') AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN vt0.c0 END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN vt0.c0 END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN vt0.c0 END);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)*(vt0.c0)))AND((+ (vt0.c0)))))OR(NULL))) ORDER BY HEX(DISTINCT (vt0.c1 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)*(vt0.c0)))AND((+ (vt0.c0)))))OR(NULL))) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT (vt0.c1 IN ())) ASC);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)*(vt0.c0)))AND((+ (vt0.c0)))))OR(NULL))) ORDER BY HEX(DISTINCT (vt0.c1 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)*(vt0.c0)))AND((+ (vt0.c0)))))OR(NULL))) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT (vt0.c1 IN ())) ASC);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)*(vt0.c0)))AND((+ (vt0.c0)))))OR(NULL))) ORDER BY HEX(DISTINCT (vt0.c1 IN ())) ASC;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON LIKELIHOOD((((vt0.c0))=((vt0.c1))), 0.8678951600564717) WHERE (((((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON LIKELIHOOD((((vt0.c0))=((vt0.c1))), 0.8678951600564717));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON LIKELIHOOD((((vt0.c0))=((vt0.c1))), 0.8678951600564717) WHERE (((((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON LIKELIHOOD((((vt0.c0))=((vt0.c1))), 0.8678951600564717));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON LIKELIHOOD((((vt0.c0))=((vt0.c1))), 0.8678951600564717) WHERE (((((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0))) IS FALSE));
SELECT ALL * FROM rt0 WHERE ((((NULL, rt0.c1 COLLATE BINARY, ((0Xffffffffc71366a8) NOT BETWEEN (rt0.c2) AND (rt0.c0))))>((CAST(rt0.c1 AS TEXT), ((((((((rt0.c0)AND(0.22496325062155054)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))) ORDER BY ((((((((CAST('1622009754' AS BLOB))AND(json_object(rt0.c1, rt0.c1))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)))OR(((rt0.c2) BETWEEN (rt0.c0) AND ('zwf zg')))))AND((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((1304617571, rt0.c2, x'')) AND ((rt0.c2, rt0.c1, rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (((((NULL, rt0.c1 COLLATE BINARY, ((0Xffffffffc71366a8) NOT BETWEEN (rt0.c2) AND (rt0.c0))))>((CAST(rt0.c1 AS TEXT), ((((((((rt0.c0)AND(0.22496325062155054)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((CAST('1622009754' AS BLOB))AND(json_object(rt0.c1, rt0.c1))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)))OR(((rt0.c2) BETWEEN (rt0.c0) AND ('zwf zg')))))AND((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((1304617571, rt0.c2, x'')) AND ((rt0.c2, rt0.c1, rt0.c1))))) DESC);
SELECT ALL * FROM rt0 WHERE ((((NULL, rt0.c1 COLLATE BINARY, ((0Xffffffffc71366a8) NOT BETWEEN (rt0.c2) AND (rt0.c0))))>((CAST(rt0.c1 AS TEXT), ((((((((rt0.c0)AND(0.22496325062155054)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))) ORDER BY ((((((((CAST('1622009754' AS BLOB))AND(json_object(rt0.c1, rt0.c1))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)))OR(((rt0.c2) BETWEEN (rt0.c0) AND ('zwf zg')))))AND((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((1304617571, rt0.c2, x'')) AND ((rt0.c2, rt0.c1, rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (((((NULL, rt0.c1 COLLATE BINARY, ((0Xffffffffc71366a8) NOT BETWEEN (rt0.c2) AND (rt0.c0))))>((CAST(rt0.c1 AS TEXT), ((((((((rt0.c0)AND(0.22496325062155054)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((CAST('1622009754' AS BLOB))AND(json_object(rt0.c1, rt0.c1))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)))OR(((rt0.c2) BETWEEN (rt0.c0) AND ('zwf zg')))))AND((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((1304617571, rt0.c2, x'')) AND ((rt0.c2, rt0.c1, rt0.c1))))) DESC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c1))>((vt0.c1, vt0.c0, vt0.c1)))) BETWEEN ((NULL IN ())) AND ((~ (vt0.c0))))) ORDER BY (+ (((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c1, vt0.c1))>((vt0.c1, vt0.c0, vt0.c1)))) BETWEEN ((NULL IN ())) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) NOT NULL))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c1))>((vt0.c1, vt0.c0, vt0.c1)))) BETWEEN ((NULL IN ())) AND ((~ (vt0.c0))))) ORDER BY (+ (((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c1, vt0.c1))>((vt0.c1, vt0.c0, vt0.c1)))) BETWEEN ((NULL IN ())) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) NOT NULL))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c1))>((vt0.c1, vt0.c0, vt0.c1)))) BETWEEN ((NULL IN ())) AND ((~ (vt0.c0))))) ORDER BY (+ (((vt0.c0) NOT NULL)));
SELECT ALL COUNT(*) FROM rt0 WHERE (json_extract(rt0.c0, rt0.c2) COLLATE RTRIM) ORDER BY CAST(((rt0.c2)<(rt0.c1)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_extract(rt0.c0, rt0.c2) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2)<(rt0.c1)) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_extract(rt0.c0, rt0.c2) COLLATE RTRIM) ORDER BY CAST(((rt0.c2)<(rt0.c1)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_extract(rt0.c0, rt0.c2) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2)<(rt0.c1)) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (vt0.c0) ORDER BY CASE WHEN ((((((((rt0.c1)OR(0.3224777144111495)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN RTRIM(x'') WHEN rt0.c1 THEN ((('FALSE')) BETWEEN ((rt0.c2)) AND ((vt0.c0))) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) THEN ((rt0.c1) ISNULL) END ASC, ((((((((((rt0.c0)>(rt0.c1)))OR((rt0.c1 IN ()))))AND(CASE WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c1 THEN 0.863753995539799 WHEN rt0.c2 THEN rt0.c2 END)))AND((~ (rt0.c2)))))OR((~ (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY CASE WHEN ((((((((rt0.c1)OR(0.3224777144111495)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN RTRIM(x'') WHEN rt0.c1 THEN ((('FALSE')) BETWEEN ((rt0.c2)) AND ((vt0.c0))) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) THEN ((rt0.c1) ISNULL) END ASC, ((((((((((rt0.c0)>(rt0.c1)))OR((rt0.c1 IN ()))))AND(CASE WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c1 THEN 0.863753995539799 WHEN rt0.c2 THEN rt0.c2 END)))AND((~ (rt0.c2)))))OR((~ (vt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (vt0.c0) ORDER BY CASE WHEN ((((((((rt0.c1)OR(0.3224777144111495)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN RTRIM(x'') WHEN rt0.c1 THEN ((('FALSE')) BETWEEN ((rt0.c2)) AND ((vt0.c0))) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) THEN ((rt0.c1) ISNULL) END ASC, ((((((((((rt0.c0)>(rt0.c1)))OR((rt0.c1 IN ()))))AND(CASE WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c1 THEN 0.863753995539799 WHEN rt0.c2 THEN rt0.c2 END)))AND((~ (rt0.c2)))))OR((~ (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY CASE WHEN ((((((((rt0.c1)OR(0.3224777144111495)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN RTRIM(x'') WHEN rt0.c1 THEN ((('FALSE')) BETWEEN ((rt0.c2)) AND ((vt0.c0))) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) THEN ((rt0.c1) ISNULL) END ASC, ((((((((((rt0.c0)>(rt0.c1)))OR((rt0.c1 IN ()))))AND(CASE WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c1 THEN 0.863753995539799 WHEN rt0.c2 THEN rt0.c2 END)))AND((~ (rt0.c2)))))OR((~ (vt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (vt0.c0) ORDER BY CASE WHEN ((((((((rt0.c1)OR(0.3224777144111495)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN RTRIM(x'') WHEN rt0.c1 THEN ((('FALSE')) BETWEEN ((rt0.c2)) AND ((vt0.c0))) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) THEN ((rt0.c1) ISNULL) END ASC, ((((((((((rt0.c0)>(rt0.c1)))OR((rt0.c1 IN ()))))AND(CASE WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c1 THEN 0.863753995539799 WHEN rt0.c2 THEN rt0.c2 END)))AND((~ (rt0.c2)))))OR((~ (vt0.c1)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)+(((rt0.c2) NOTNULL)))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)+(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)+(((rt0.c2) NOTNULL)))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)+(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)+(((rt0.c2) NOTNULL)))) ORDER BY rt0.c1 DESC;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM rt0 WHERE ((+ (-8.17012213E8)));
SELECT SUM(count) FROM (SELECT (((+ (-8.17012213E8))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (-8.17012213E8)));
SELECT SUM(count) FROM (SELECT (((+ (-8.17012213E8))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (-8.17012213E8)));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c0 COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c0 COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c0 COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1)%(CAST(rt0.c0 AS INTEGER)))) ORDER BY (('\~醴kr') NOT BETWEEN (((vt0.c1)||(rt0.c1))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)%(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (('\~醴kr') NOT BETWEEN (((vt0.c1)||(rt0.c1))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1)%(CAST(rt0.c0 AS INTEGER)))) ORDER BY (('\~醴kr') NOT BETWEEN (((vt0.c1)||(rt0.c1))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)%(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (('\~醴kr') NOT BETWEEN (((vt0.c1)||(rt0.c1))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1)%(CAST(rt0.c0 AS INTEGER)))) ORDER BY (('\~醴kr') NOT BETWEEN (((vt0.c1)||(rt0.c1))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((')1U晙試.9' IN ())) ORDER BY (+ (((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))), (((rt0.c1, rt0.c2, x'')) BETWEEN (((NOT (rt0.c1)), rt0.c0 COLLATE NOCASE, (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(x'565c')))AND(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((')1U晙試.9' IN ())) IS TRUE)  as count FROM rt0 ORDER BY (+ (((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))), (((rt0.c1, rt0.c2, x'')) BETWEEN (((NOT (rt0.c1)), rt0.c0 COLLATE NOCASE, (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(x'565c')))AND(rt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((')1U晙試.9' IN ())) ORDER BY (+ (((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))), (((rt0.c1, rt0.c2, x'')) BETWEEN (((NOT (rt0.c1)), rt0.c0 COLLATE NOCASE, (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(x'565c')))AND(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((')1U晙試.9' IN ())) IS TRUE)  as count FROM rt0 ORDER BY (+ (((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))), (((rt0.c1, rt0.c2, x'')) BETWEEN (((NOT (rt0.c1)), rt0.c0 COLLATE NOCASE, (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(x'565c')))AND(rt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((')1U晙試.9' IN ())) ORDER BY (+ (((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))), (((rt0.c1, rt0.c2, x'')) BETWEEN (((NOT (rt0.c1)), rt0.c0 COLLATE NOCASE, (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(x'565c')))AND(rt0.c0)))))  NULLS LAST;
SELECT * FROM vt0 WHERE (STRFTIME(((vt0.c1)GLOB(vt0.c0)), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ORDER BY CASE WHEN CAST(vt0.c1 AS INTEGER) THEN (((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, '-2044801333', vt0.c0))) END;
SELECT SUM(count) FROM (SELECT ((STRFTIME(((vt0.c1)GLOB(vt0.c0)), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c1 AS INTEGER) THEN (((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, '-2044801333', vt0.c0))) END);
SELECT * FROM vt0 WHERE (STRFTIME(((vt0.c1)GLOB(vt0.c0)), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ORDER BY CASE WHEN CAST(vt0.c1 AS INTEGER) THEN (((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, '-2044801333', vt0.c0))) END;
SELECT SUM(count) FROM (SELECT ((STRFTIME(((vt0.c1)GLOB(vt0.c0)), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c1 AS INTEGER) THEN (((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, '-2044801333', vt0.c0))) END);
SELECT * FROM vt0 WHERE (STRFTIME(((vt0.c1)GLOB(vt0.c0)), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ORDER BY CASE WHEN CAST(vt0.c1 AS INTEGER) THEN (((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, '-2044801333', vt0.c0))) END;
SELECT * FROM rt0, vt0 WHERE (CAST(((vt0.c1)>>(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)>>(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST(((vt0.c1)>>(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)>>(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST(((vt0.c1)>>(vt0.c1)) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (('1443404080' IN ())) ORDER BY (vt0.c1 IN ('-1094042679', vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((('1443404080' IN ())) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 IN ('-1094042679', vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (('1443404080' IN ())) ORDER BY (vt0.c1 IN ('-1094042679', vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((('1443404080' IN ())) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 IN ('-1094042679', vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (('1443404080' IN ())) ORDER BY (vt0.c1 IN ('-1094042679', vt0.c0)) COLLATE RTRIM;
SELECT COUNT(*) FROM rt0 WHERE (((((-1843118913)AND(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE) ORDER BY (((0xffffffffcc2b636a))>((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((-1843118913)AND(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((0xffffffffcc2b636a))>((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((-1843118913)AND(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE) ORDER BY (((0xffffffffcc2b636a))>((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((-1843118913)AND(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((0xffffffffcc2b636a))>((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((-1843118913)AND(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE) ORDER BY (((0xffffffffcc2b636a))>((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((~ ((((rt0.c0, rt0.c1, 0.863753995539799)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, rt0.c0)))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c0, rt0.c1, 0.863753995539799)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c1 ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((~ ((((rt0.c0, rt0.c1, 0.863753995539799)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, rt0.c0)))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c0, rt0.c1, 0.863753995539799)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c1 ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((~ ((((rt0.c0, rt0.c1, 0.863753995539799)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, rt0.c0)))))) ORDER BY vt0.c1 ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)<<(NULL)) IN ())) ORDER BY TYPEOF((~ (vt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<<(NULL)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF((~ (vt0.c1))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)<<(NULL)) IN ())) ORDER BY TYPEOF((~ (vt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<<(NULL)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF((~ (vt0.c1))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)<<(NULL)) IN ())) ORDER BY TYPEOF((~ (vt0.c1))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CAST(rt0.c0 AS TEXT) IN (CAST(rt0.c0 AS BLOB), ((vt0.c1)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS TEXT) IN (CAST(rt0.c0 AS BLOB), ((vt0.c1)!=(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CAST(rt0.c0 AS TEXT) IN (CAST(rt0.c0 AS BLOB), ((vt0.c1)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS TEXT) IN (CAST(rt0.c0 AS BLOB), ((vt0.c1)!=(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CAST(rt0.c0 AS TEXT) IN (CAST(rt0.c0 AS BLOB), ((vt0.c1)!=(vt0.c0)))));
SELECT * FROM vt0 WHERE (((((vt0.c1)GLOB(vt0.c0))) NOT BETWEEN (NULL) AND ((- (vt0.c1))))) ORDER BY CASE WHEN x'4757' THEN ((vt0.c1)!=(vt0.c1)) ELSE (vt0.c1 IN (vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)GLOB(vt0.c0))) NOT BETWEEN (NULL) AND ((- (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN x'4757' THEN ((vt0.c1)<>(vt0.c1)) ELSE (vt0.c1 IN (vt0.c0)) END DESC);
SELECT * FROM vt0 WHERE (((((vt0.c1)GLOB(vt0.c0))) NOT BETWEEN (NULL) AND ((- (vt0.c1))))) ORDER BY CASE WHEN x'4757' THEN ((vt0.c1)!=(vt0.c1)) ELSE (vt0.c1 IN (vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)GLOB(vt0.c0))) NOT BETWEEN (NULL) AND ((- (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN x'4757' THEN ((vt0.c1)<>(vt0.c1)) ELSE (vt0.c1 IN (vt0.c0)) END DESC);
SELECT * FROM vt0 WHERE (((((vt0.c1)GLOB(vt0.c0))) NOT BETWEEN (NULL) AND ((- (vt0.c1))))) ORDER BY CASE WHEN x'4757' THEN ((vt0.c1)!=(vt0.c1)) ELSE (vt0.c1 IN (vt0.c0)) END DESC;
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (CAST(LIKELY(rt0.c0) AS TEXT)) ORDER BY (((((vt0.c0 IN ()))AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c1) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(rt0.c0) AS TEXT)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (((((vt0.c0 IN ()))AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c1) IS FALSE)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (CAST(LIKELY(rt0.c0) AS TEXT)) ORDER BY (((((vt0.c0 IN ()))AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c1) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(rt0.c0) AS TEXT)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (((((vt0.c0 IN ()))AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c1) IS FALSE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_extract((vt0.c1 IN ()), ((((((((vt0.c0)AND(vt0.c1)))AND(NULL)))AND(vt0.c1)))AND(x''))));
SELECT SUM(count) FROM (SELECT ALL ((json_extract((vt0.c1 IN ()), ((((((((vt0.c0)AND(vt0.c1)))AND(NULL)))AND(vt0.c1)))AND(x'')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_extract((vt0.c1 IN ()), ((((((((vt0.c0)AND(vt0.c1)))AND(NULL)))AND(vt0.c1)))AND(x''))));
SELECT SUM(count) FROM (SELECT ALL ((json_extract((vt0.c1 IN ()), ((((((((vt0.c0)AND(vt0.c1)))AND(NULL)))AND(vt0.c1)))AND(x'')))) IS TRUE)  as count FROM vt0);
SELECT * FROM rt0 WHERE ((((+ (rt0.c2)))&(((rt0.c0)<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2)))&(((rt0.c0)<(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((+ (rt0.c2)))&(((rt0.c0)<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2)))&(((rt0.c0)<(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((+ (rt0.c2)))&(((rt0.c0)<(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULL);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((rt0.c1 COLLATE BINARY)IS(CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN '855244207' THEN x'12fc' WHEN rt0.c1 THEN rt0.c0 END)) WHERE ((((rt0.c1)) BETWEEN ((HEX(rt0.c1))) AND ((((rt0.c2)>>(vt0.c0)))))) ORDER BY rt0.c1 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((HEX(rt0.c1))) AND ((((rt0.c2)>>(vt0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c1 COLLATE BINARY)IS(CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN '855244207' THEN x'12fc' WHEN rt0.c1 THEN rt0.c0 END)) ORDER BY rt0.c1 COLLATE NOCASE ASC);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((rt0.c1 COLLATE BINARY)IS(CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN '855244207' THEN x'12fc' WHEN rt0.c1 THEN rt0.c0 END)) WHERE ((((rt0.c1)) BETWEEN ((HEX(rt0.c1))) AND ((((rt0.c2)>>(vt0.c0)))))) ORDER BY rt0.c1 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((HEX(rt0.c1))) AND ((((rt0.c2)>>(vt0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c1 COLLATE BINARY)IS(CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN '855244207' THEN x'12fc' WHEN rt0.c1 THEN rt0.c0 END)) ORDER BY rt0.c1 COLLATE NOCASE ASC);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((rt0.c1 COLLATE BINARY)IS(CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN '855244207' THEN x'12fc' WHEN rt0.c1 THEN rt0.c0 END)) WHERE ((((rt0.c1)) BETWEEN ((HEX(rt0.c1))) AND ((((rt0.c2)>>(vt0.c0)))))) ORDER BY rt0.c1 COLLATE NOCASE ASC;
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE (((((vt0.c0)IS(rt0.c1))) NOT BETWEEN ((~ (x''))) AND (vt0.c1))) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN vt0.c1 COLLATE BINARY ELSE ((rt0.c0) NOT NULL) END, ((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 END)OR(CASE WHEN rt0.c0 THEN vt0.c0 END)))OR((((vt0.c0))>((rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS(rt0.c1))) NOT BETWEEN ((~ (x''))) AND (vt0.c1))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN (rt0.c0 IN ()) THEN vt0.c1 COLLATE BINARY ELSE ((rt0.c0) NOT NULL) END, ((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 END)OR(CASE WHEN rt0.c0 THEN vt0.c0 END)))OR((((vt0.c0))>((rt0.c1))))) DESC);
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE (((((vt0.c0)IS(rt0.c1))) NOT BETWEEN ((~ (x''))) AND (vt0.c1))) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN vt0.c1 COLLATE BINARY ELSE ((rt0.c0) NOT NULL) END, ((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 END)OR(CASE WHEN rt0.c0 THEN vt0.c0 END)))OR((((vt0.c0))>((rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS(rt0.c1))) NOT BETWEEN ((~ (x''))) AND (vt0.c1))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN (rt0.c0 IN ()) THEN vt0.c1 COLLATE BINARY ELSE ((rt0.c0) NOT NULL) END, ((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 END)OR(CASE WHEN rt0.c0 THEN vt0.c0 END)))OR((((vt0.c0))>((rt0.c1))))) DESC);
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE (((((vt0.c0)IS(rt0.c1))) NOT BETWEEN ((~ (x''))) AND (vt0.c1))) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN vt0.c1 COLLATE BINARY ELSE ((rt0.c0) NOT NULL) END, ((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 END)OR(CASE WHEN rt0.c0 THEN vt0.c0 END)))OR((((vt0.c0))>((rt0.c1))))) DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))>(CASE rt0.c2  WHEN vt0.c1 THEN '2120767657' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))>(CASE rt0.c2  WHEN vt0.c1 THEN '2120767657' END))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))>(CASE rt0.c2  WHEN vt0.c1 THEN '2120767657' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))>(CASE rt0.c2  WHEN vt0.c1 THEN '2120767657' END))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))>(CASE rt0.c2  WHEN vt0.c1 THEN '2120767657' END)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))));
SELECT * FROM rt0 WHERE (CASE CAST(rt0.c2 AS BLOB)  WHEN (~ (rt0.c2)) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((x''))) ELSE ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c2 AS BLOB)  WHEN (~ (rt0.c2)) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((x''))) ELSE ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE CAST(rt0.c2 AS BLOB)  WHEN (~ (rt0.c2)) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((x''))) ELSE ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c2 AS BLOB)  WHEN (~ (rt0.c2)) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((x''))) ELSE ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE CAST(rt0.c2 AS BLOB)  WHEN (~ (rt0.c2)) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((x''))) ELSE ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)) END);
SELECT ALL * FROM rt0, vt0 WHERE ((((((vt0.c0 IN ()))OR(vt0.c0 COLLATE BINARY)))OR(((rt0.c1)GLOB(rt0.c1))))) ORDER BY (((rt0.c0)|(-1903607397)) IN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (NULL) AND (rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR(vt0.c0 COLLATE BINARY)))OR(((rt0.c1)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0)|(-1903607397)) IN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (NULL) AND (rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((((vt0.c0 IN ()))OR(vt0.c0 COLLATE BINARY)))OR(((rt0.c1)GLOB(rt0.c1))))) ORDER BY (((rt0.c0)|(-1903607397)) IN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (NULL) AND (rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR(vt0.c0 COLLATE BINARY)))OR(((rt0.c1)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0)|(-1903607397)) IN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (NULL) AND (rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((((vt0.c0 IN ()))OR(vt0.c0 COLLATE BINARY)))OR(((rt0.c1)GLOB(rt0.c1))))) ORDER BY (((rt0.c0)|(-1903607397)) IN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (NULL) AND (rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (~ (IFNULL(DISTINCT rt0.c1, x''))) WHERE (((((vt0.c1 COLLATE NOCASE)OR(((rt0.c2) IS FALSE))))AND((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE NOCASE)OR(((rt0.c2) IS FALSE))))AND((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (~ (IFNULL(DISTINCT rt0.c1, x''))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (~ (IFNULL(DISTINCT rt0.c1, x''))) WHERE (((((vt0.c1 COLLATE NOCASE)OR(((rt0.c2) IS FALSE))))AND((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE NOCASE)OR(((rt0.c2) IS FALSE))))AND((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (~ (IFNULL(DISTINCT rt0.c1, x''))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (~ (IFNULL(DISTINCT rt0.c1, x''))) WHERE (((((vt0.c1 COLLATE NOCASE)OR(((rt0.c2) IS FALSE))))AND((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1))))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 END THEN (NOT (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 END THEN (NOT (vt0.c1)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 END THEN (NOT (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 END THEN (NOT (vt0.c1)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 END THEN (NOT (vt0.c1)) END);
SELECT * FROM vt0, rt0 WHERE (IFNULL(((rt0.c1) IS TRUE), rt0.c2)) ORDER BY NULLIF(DISTINCT CAST(vt0.c1 AS REAL), (((rt0.c2))!=((vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt0.c1) IS TRUE), rt0.c2)) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULLIF(DISTINCT CAST(vt0.c1 AS REAL), (((rt0.c2))!=((vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (IFNULL(((rt0.c1) IS TRUE), rt0.c2)) ORDER BY NULLIF(DISTINCT CAST(vt0.c1 AS REAL), (((rt0.c2))!=((vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt0.c1) IS TRUE), rt0.c2)) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULLIF(DISTINCT CAST(vt0.c1 AS REAL), (((rt0.c2))!=((vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (IFNULL(((rt0.c1) IS TRUE), rt0.c2)) ORDER BY NULLIF(DISTINCT CAST(vt0.c1 AS REAL), (((rt0.c2))!=((vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS INTEGER)) ORDER BY CAST(-1302414878 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS REAL) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(-1302414878 AS TEXT) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS INTEGER)) ORDER BY CAST(-1302414878 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS REAL) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(-1302414878 AS TEXT) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS INTEGER)) ORDER BY CAST(-1302414878 AS TEXT) ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY (rt0.c2 COLLATE NOCASE IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c2 COLLATE NOCASE IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY (rt0.c2 COLLATE NOCASE IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c2 COLLATE NOCASE IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY (rt0.c2 COLLATE NOCASE IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1)<<(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)<<(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1)<<(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)<<(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1)<<(rt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ())) ORDER BY ((LOWER(DISTINCT rt0.c0))>=(((rt0.c1) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((LOWER(DISTINCT rt0.c0))>=(((rt0.c1) NOTNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ())) ORDER BY ((LOWER(DISTINCT rt0.c0))>=(((rt0.c1) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((LOWER(DISTINCT rt0.c0))>=(((rt0.c1) NOTNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ())) ORDER BY ((LOWER(DISTINCT rt0.c0))>=(((rt0.c1) NOTNULL))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS REAL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (1624379267);
SELECT SUM(count) FROM (SELECT ((1624379267) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (1624379267);
SELECT SUM(count) FROM (SELECT ((1624379267) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (1624379267);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c1) ORDER BY ((x'')>(rt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((x'')>(rt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c1) ORDER BY ((x'')>(rt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((x'')>(rt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c1) ORDER BY ((x'')>(rt0.c0)) COLLATE NOCASE;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY (((vt0.c1) NOTNULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) NOTNULL) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY (((vt0.c1) NOTNULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) NOTNULL) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY (((vt0.c1) NOTNULL) IN ()) DESC;
SELECT * FROM vt0 WHERE ((((((vt0.c1)+(vt0.c1))))<((((vt0.c1) NOT BETWEEN (vt0.c1) AND ('W*1')))))) ORDER BY ((vt0.c1)>(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))), vt0.c0 ASC, (((vt0.c1 IN (vt0.c1)))<=(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, (((x'')) NOT BETWEEN (((vt0.c1 IN ()))) AND ((vt0.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)+(vt0.c1))))<((((vt0.c1) NOT BETWEEN (vt0.c1) AND ('W*1')))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)>(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))), vt0.c0 ASC, (((vt0.c1 IN (vt0.c1)))<=(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, (((x'')) NOT BETWEEN (((vt0.c1 IN ()))) AND ((vt0.c0 COLLATE BINARY)))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c1)+(vt0.c1))))<((((vt0.c1) NOT BETWEEN (vt0.c1) AND ('W*1')))))) ORDER BY ((vt0.c1)>(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))), vt0.c0 ASC, (((vt0.c1 IN (vt0.c1)))<=(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, (((x'')) NOT BETWEEN (((vt0.c1 IN ()))) AND ((vt0.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)+(vt0.c1))))<((((vt0.c1) NOT BETWEEN (vt0.c1) AND ('W*1')))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)>(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))), vt0.c0 ASC, (((vt0.c1 IN (vt0.c1)))<=(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, (((x'')) NOT BETWEEN (((vt0.c1 IN ()))) AND ((vt0.c0 COLLATE BINARY)))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c1)+(vt0.c1))))<((((vt0.c1) NOT BETWEEN (vt0.c1) AND ('W*1')))))) ORDER BY ((vt0.c1)>(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))), vt0.c0 ASC, (((vt0.c1 IN (vt0.c1)))<=(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, (((x'')) NOT BETWEEN (((vt0.c1 IN ()))) AND ((vt0.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (IFNULL(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)), vt0.c0 COLLATE BINARY)) ORDER BY ((CAST(vt0.c0 AS TEXT))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)), vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)));
SELECT ALL * FROM vt0 WHERE (IFNULL(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)), vt0.c0 COLLATE BINARY)) ORDER BY ((CAST(vt0.c0 AS TEXT))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)), vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)));
SELECT ALL * FROM vt0 WHERE (IFNULL(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)), vt0.c0 COLLATE BINARY)) ORDER BY ((CAST(vt0.c0 AS TEXT))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END));
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(UNLIKELY(vt0.c1))))OR(((x'2396')>=(-2.82365827E8))))) ORDER BY ((((vt0.c1) ISNULL)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(UNLIKELY(vt0.c1))))OR(((x'2396')>=(-2.82365827E8))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) ISNULL)) NOTNULL) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(UNLIKELY(vt0.c1))))OR(((x'2396')>=(-2.82365827E8))))) ORDER BY ((((vt0.c1) ISNULL)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(UNLIKELY(vt0.c1))))OR(((x'2396')>=(-2.82365827E8))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) ISNULL)) NOTNULL) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(UNLIKELY(vt0.c1))))OR(((x'2396')>=(-2.82365827E8))))) ORDER BY ((((vt0.c1) ISNULL)) NOTNULL) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ ((((vt0.c1, rt0.c0, vt0.c0)) BETWEEN (('33282279', vt0.c0, vt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c1, rt0.c0, vt0.c0)) BETWEEN (('33282279', vt0.c0, vt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ ((((vt0.c1, rt0.c0, vt0.c0)) BETWEEN (('33282279', vt0.c0, vt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c1, rt0.c0, vt0.c0)) BETWEEN (('33282279', vt0.c0, vt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ ((((vt0.c1, rt0.c0, vt0.c0)) BETWEEN (('33282279', vt0.c0, vt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c0))))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)LIKE(rt0.c2))) NOT BETWEEN (((rt0.c1)LIKE(rt0.c2))) AND (((rt0.c0)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)LIKE(rt0.c2))) NOT BETWEEN (((rt0.c1)LIKE(rt0.c2))) AND (((rt0.c0)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)LIKE(rt0.c2))) NOT BETWEEN (((rt0.c1)LIKE(rt0.c2))) AND (((rt0.c0)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)LIKE(rt0.c2))) NOT BETWEEN (((rt0.c1)LIKE(rt0.c2))) AND (((rt0.c0)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)LIKE(rt0.c2))) NOT BETWEEN (((rt0.c1)LIKE(rt0.c2))) AND (((rt0.c0)IS NOT(rt0.c1)))));
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (COALESCE(DISTINCT vt0.c1, vt0.c0)) AND (CASE vt0.c0  WHEN x'' THEN vt0.c0 END))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (x'01f2')))) ASC  NULLS LAST, NULL ASC, ((NULL) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE) BETWEEN (COALESCE(DISTINCT vt0.c1, vt0.c0)) AND (CASE vt0.c0  WHEN x'' THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (x'01f2')))) ASC  NULLS LAST, NULL ASC, ((NULL) IS FALSE) DESC);
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (COALESCE(DISTINCT vt0.c1, vt0.c0)) AND (CASE vt0.c0  WHEN x'' THEN vt0.c0 END))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (x'01f2')))) ASC  NULLS LAST, NULL ASC, ((NULL) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE) BETWEEN (COALESCE(DISTINCT vt0.c1, vt0.c0)) AND (CASE vt0.c0  WHEN x'' THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (x'01f2')))) ASC  NULLS LAST, NULL ASC, ((NULL) IS FALSE) DESC);
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (COALESCE(DISTINCT vt0.c1, vt0.c0)) AND (CASE vt0.c0  WHEN x'' THEN vt0.c0 END))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (x'01f2')))) ASC  NULLS LAST, NULL ASC, ((NULL) IS FALSE) DESC;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON CASE CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END  WHEN QUOTE(vt0.c0) THEN ((rt0.c2) IS FALSE) WHEN (~ (vt0.c1)) THEN ((vt0.c0) ISNULL) WHEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) THEN ((((rt0.c0)AND(vt0.c1)))AND(rt0.c1)) END WHERE (NULL) ORDER BY ((((((((CAST(0.6921491476246955 AS REAL))AND(((((rt0.c2)OR(rt0.c0)))AND('')))))OR(rt0.c2)))OR((((rt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END  WHEN QUOTE(vt0.c0) THEN ((rt0.c2) IS FALSE) WHEN (~ (vt0.c1)) THEN ((vt0.c0) ISNULL) WHEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) THEN ((((rt0.c0)AND(vt0.c1)))AND(rt0.c1)) END ORDER BY ((((((((CAST(0.6921491476246955 AS REAL))AND(((((rt0.c2)OR(rt0.c0)))AND('')))))OR(rt0.c2)))OR((((rt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON CASE CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END  WHEN QUOTE(vt0.c0) THEN ((rt0.c2) IS FALSE) WHEN (~ (vt0.c1)) THEN ((vt0.c0) ISNULL) WHEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) THEN ((((rt0.c0)AND(vt0.c1)))AND(rt0.c1)) END WHERE (NULL) ORDER BY ((((((((CAST(0.6921491476246955 AS REAL))AND(((((rt0.c2)OR(rt0.c0)))AND('')))))OR(rt0.c2)))OR((((rt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END  WHEN QUOTE(vt0.c0) THEN ((rt0.c2) IS FALSE) WHEN (~ (vt0.c1)) THEN ((vt0.c0) ISNULL) WHEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) THEN ((((rt0.c0)AND(vt0.c1)))AND(rt0.c1)) END ORDER BY ((((((((CAST(0.6921491476246955 AS REAL))AND(((((rt0.c2)OR(rt0.c0)))AND('')))))OR(rt0.c2)))OR((((rt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON CASE CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END  WHEN QUOTE(vt0.c0) THEN ((rt0.c2) IS FALSE) WHEN (~ (vt0.c1)) THEN ((vt0.c0) ISNULL) WHEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) THEN ((((rt0.c0)AND(vt0.c1)))AND(rt0.c1)) END WHERE (NULL) ORDER BY ((((((((CAST(0.6921491476246955 AS REAL))AND(((((rt0.c2)OR(rt0.c0)))AND('')))))OR(rt0.c2)))OR((((rt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2))));
SELECT * FROM vt0, rt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN '1342410912' END)+((((x''))<=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c2 THEN '1342410912' END)+((((x''))<=((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN '1342410912' END)+((((x''))<=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c2 THEN '1342410912' END)+((((x''))<=((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN '1342410912' END)+((((x''))<=((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND ((+ (rt0.c1))))) ORDER BY 0xaf1a529  NULLS FIRST, TRIM((- (rt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND ((+ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0Xaf1a529  NULLS FIRST, TRIM((- (rt0.c2))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND ((+ (rt0.c1))))) ORDER BY 0xaf1a529  NULLS FIRST, TRIM((- (rt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND ((+ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0Xaf1a529  NULLS FIRST, TRIM((- (rt0.c2))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (NOT ((((vt0.c1, NULL, vt0.c0))<=((vt0.c0, vt0.c1, rt0.c2))))) WHERE (((((((rt0.c0)OR(vt0.c0)))AND('^,')))/(((vt0.c1)OR(rt0.c1))))) ORDER BY (((((vt0.c0)IS NOT(rt0.c2))))<=((((((rt0.c2)AND(vt0.c1)))OR(rt0.c0))))) ASC, (vt0.c1 IN (0Xffffffffd6482f05, CAST(rt0.c2 AS INTEGER)))  NULLS FIRST, (+ (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(vt0.c0)))AND('^,')))/(((vt0.c1)OR(rt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (NOT ((((vt0.c1, NULL, vt0.c0))<=((vt0.c0, vt0.c1, rt0.c2))))) ORDER BY (((((vt0.c0)IS NOT(rt0.c2))))<=((((((rt0.c2)AND(vt0.c1)))OR(rt0.c0))))) ASC, (vt0.c1 IN (0xffffffffd6482f05, CAST(rt0.c2 AS INTEGER)))  NULLS FIRST, (+ (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (NOT ((((vt0.c1, NULL, vt0.c0))<=((vt0.c0, vt0.c1, rt0.c2))))) WHERE (((((((rt0.c0)OR(vt0.c0)))AND('^,')))/(((vt0.c1)OR(rt0.c1))))) ORDER BY (((((vt0.c0)IS NOT(rt0.c2))))<=((((((rt0.c2)AND(vt0.c1)))OR(rt0.c0))))) ASC, (vt0.c1 IN (0Xffffffffd6482f05, CAST(rt0.c2 AS INTEGER)))  NULLS FIRST, (+ (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(vt0.c0)))AND('^,')))/(((vt0.c1)OR(rt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (NOT ((((vt0.c1, NULL, vt0.c0))<=((vt0.c0, vt0.c1, rt0.c2))))) ORDER BY (((((vt0.c0)IS NOT(rt0.c2))))<=((((((rt0.c2)AND(vt0.c1)))OR(rt0.c0))))) ASC, (vt0.c1 IN (0xffffffffd6482f05, CAST(rt0.c2 AS INTEGER)))  NULLS FIRST, (+ (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (NOT ((((vt0.c1, NULL, vt0.c0))<=((vt0.c0, vt0.c1, rt0.c2))))) WHERE (((((((rt0.c0)OR(vt0.c0)))AND('^,')))/(((vt0.c1)OR(rt0.c1))))) ORDER BY (((((vt0.c0)IS NOT(rt0.c2))))<=((((((rt0.c2)AND(vt0.c1)))OR(rt0.c0))))) ASC, (vt0.c1 IN (0Xffffffffd6482f05, CAST(rt0.c2 AS INTEGER)))  NULLS FIRST, (+ (vt0.c0));
SELECT * FROM rt0, vt0 WHERE (TYPEOF(DISTINCT 0.4117573810933157)) ORDER BY ((rt0.c1) NOTNULL) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT 0.4117573810933157)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1) NOTNULL) COLLATE NOCASE ASC);
SELECT * FROM rt0, vt0 WHERE (TYPEOF(DISTINCT 0.4117573810933157)) ORDER BY ((rt0.c1) NOTNULL) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT 0.4117573810933157)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1) NOTNULL) COLLATE NOCASE ASC);
SELECT * FROM rt0, vt0 WHERE (TYPEOF(DISTINCT 0.4117573810933157)) ORDER BY ((rt0.c1) NOTNULL) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1) ISNULL)) IS TRUE)) ORDER BY (~ (((((rt0.c1)OR(vt0.c0)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (((((rt0.c1)OR(vt0.c0)))OR(vt0.c1)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1) ISNULL)) IS TRUE)) ORDER BY (~ (((((rt0.c1)OR(vt0.c0)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (((((rt0.c1)OR(vt0.c0)))OR(vt0.c1)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1) ISNULL)) IS TRUE)) ORDER BY (~ (((((rt0.c1)OR(vt0.c0)))OR(vt0.c1))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (- ((~ (rt0.c0)))) WHERE ((((((vt0.c0)AND(vt0.c0)))OR(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt0.c0)))OR(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (- ((~ (rt0.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (- ((~ (rt0.c0)))) WHERE ((((((vt0.c0)AND(vt0.c0)))OR(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt0.c0)))OR(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (- ((~ (rt0.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (- ((~ (rt0.c0)))) WHERE ((((((vt0.c0)AND(vt0.c0)))OR(rt0.c1)) IN ()));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM)OR((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))) WHERE (((((rt0.c2) NOT NULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL)) NOT NULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM)OR((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM)OR((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))) WHERE (((((rt0.c2) NOT NULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL)) NOT NULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM)OR((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM)OR((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))) WHERE (((((rt0.c2) NOT NULL)) NOT NULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (~ (((((vt0.c1)AND(vt0.c1)))AND(rt0.c2)))) WHERE ((((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) ISNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (~ (((((vt0.c1)AND(vt0.c1)))AND(rt0.c2)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (~ (((((vt0.c1)AND(vt0.c1)))AND(rt0.c2)))) WHERE ((((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) ISNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (~ (((((vt0.c1)AND(vt0.c1)))AND(rt0.c2)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (~ (((((vt0.c1)AND(vt0.c1)))AND(rt0.c2)))) WHERE ((((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) ISNULL));
SELECT * FROM rt0 WHERE ((NOT ((((rt0.c2))=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c2))=((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT ((((rt0.c2))=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c2))=((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT ((((rt0.c2))=((rt0.c1))))));
SELECT * FROM rt0, vt0 WHERE (((NULL) ISNULL)) ORDER BY CAST(rt0.c2 COLLATE BINARY AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(rt0.c2 COLLATE BINARY AS TEXT));
SELECT * FROM rt0, vt0 WHERE (((NULL) ISNULL)) ORDER BY CAST(rt0.c2 COLLATE BINARY AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(rt0.c2 COLLATE BINARY AS TEXT));
SELECT * FROM rt0, vt0 WHERE (((NULL) ISNULL)) ORDER BY CAST(rt0.c2 COLLATE BINARY AS TEXT);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON '1304617571' WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END)-(((rt0.c1)&(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c2 END)-(((rt0.c1)&(rt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON '1304617571');
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON '1304617571' WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END)-(((rt0.c1)&(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c2 END)-(((rt0.c1)&(rt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON '1304617571');
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON '1304617571' WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END)-(((rt0.c1)&(rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)IS NOT(rt0.c1)) AS INTEGER)) ORDER BY CAST(CAST(rt0.c1 AS TEXT) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)IS NOT(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c1 AS TEXT) AS REAL) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)IS NOT(rt0.c1)) AS INTEGER)) ORDER BY CAST(CAST(rt0.c1 AS TEXT) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)IS NOT(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c1 AS TEXT) AS REAL) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)IS NOT(rt0.c1)) AS INTEGER)) ORDER BY CAST(CAST(rt0.c1 AS TEXT) AS REAL) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (((0.37954539331714865) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((0.37954539331714865) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (((0.37954539331714865) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((0.37954539331714865) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (((0.37954539331714865) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT * FROM rt0, vt0 WHERE (NULL) ORDER BY (((vt0.c0 IN ()))AND(rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0 IN ()))AND(rt0.c2)) ASC);
SELECT * FROM rt0, vt0 WHERE (NULL) ORDER BY (((vt0.c0 IN ()))AND(rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0 IN ()))AND(rt0.c2)) ASC);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1)LIKE(rt0.c1)) THEN CAST(rt0.c0 AS TEXT) ELSE (+ (rt0.c2)) END) ORDER BY (((rt0.c2))>=((x''))) COLLATE NOCASE, CASE CASE WHEN rt0.c0 THEN rt0.c2 END  WHEN (((rt0.c1, rt0.c2, rt0.c0))>=((rt0.c0, rt0.c2, rt0.c0))) THEN ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(x'')) ELSE CASE 0.20217460305226076  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)LIKE(rt0.c1)) THEN CAST(rt0.c0 AS TEXT) ELSE (+ (rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2))>=((x''))) COLLATE NOCASE, CASE CASE WHEN rt0.c0 THEN rt0.c2 END  WHEN (((rt0.c1, rt0.c2, rt0.c0))>=((rt0.c0, rt0.c2, rt0.c0))) THEN ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(x'')) ELSE CASE 0.20217460305226076  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END END  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1)LIKE(rt0.c1)) THEN CAST(rt0.c0 AS TEXT) ELSE (+ (rt0.c2)) END) ORDER BY (((rt0.c2))>=((x''))) COLLATE NOCASE, CASE CASE WHEN rt0.c0 THEN rt0.c2 END  WHEN (((rt0.c1, rt0.c2, rt0.c0))>=((rt0.c0, rt0.c2, rt0.c0))) THEN ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(x'')) ELSE CASE 0.20217460305226076  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)LIKE(rt0.c1)) THEN CAST(rt0.c0 AS TEXT) ELSE (+ (rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2))>=((x''))) COLLATE NOCASE, CASE CASE WHEN rt0.c0 THEN rt0.c2 END  WHEN (((rt0.c1, rt0.c2, rt0.c0))>=((rt0.c0, rt0.c2, rt0.c0))) THEN ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(x'')) ELSE CASE 0.20217460305226076  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END END  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1)LIKE(rt0.c1)) THEN CAST(rt0.c0 AS TEXT) ELSE (+ (rt0.c2)) END) ORDER BY (((rt0.c2))>=((x''))) COLLATE NOCASE, CASE CASE WHEN rt0.c0 THEN rt0.c2 END  WHEN (((rt0.c1, rt0.c2, rt0.c0))>=((rt0.c0, rt0.c2, rt0.c0))) THEN ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(x'')) ELSE CASE 0.20217460305226076  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END END  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0))))));
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY CAST((+ (rt0.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((+ (rt0.c0)) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY CAST((+ (rt0.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((+ (rt0.c0)) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY CAST((+ (rt0.c0)) AS REAL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) IN ())) ORDER BY ((((-1.302414878E9) NOT NULL))||(((vt0.c0)*(vt0.c0)))) ASC, (+ (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((-1.302414878E9) NOT NULL))||(((vt0.c0)*(vt0.c0)))) ASC, (+ (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) IN ())) ORDER BY ((((-1.302414878E9) NOT NULL))||(((vt0.c0)*(vt0.c0)))) ASC, (+ (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((-1.302414878E9) NOT NULL))||(((vt0.c0)*(vt0.c0)))) ASC, (+ (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) IN ())) ORDER BY ((((-1.302414878E9) NOT NULL))||(((vt0.c0)*(vt0.c0)))) ASC, (+ (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END));
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1)) NOT BETWEEN (((((vt0.c1, '-1732471301', 'Cw'))>=((rt0.c0, vt0.c1, vt0.c1))))) AND ((((rt0.c2) NOT BETWEEN (0.9329062770218449) AND (rt0.c0)))))) ORDER BY CAST(CAST(0.034960067151209584 AS TEXT) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN (((((vt0.c1, '-1732471301', 'Cw'))>=((rt0.c0, vt0.c1, vt0.c1))))) AND ((((rt0.c2) NOT BETWEEN (0.9329062770218449) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(CAST(0.034960067151209584 AS TEXT) AS NUMERIC) ASC);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1)) NOT BETWEEN (((((vt0.c1, '-1732471301', 'Cw'))>=((rt0.c0, vt0.c1, vt0.c1))))) AND ((((rt0.c2) NOT BETWEEN (0.9329062770218449) AND (rt0.c0)))))) ORDER BY CAST(CAST(0.034960067151209584 AS TEXT) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN (((((vt0.c1, '-1732471301', 'Cw'))>=((rt0.c0, vt0.c1, vt0.c1))))) AND ((((rt0.c2) NOT BETWEEN (0.9329062770218449) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(CAST(0.034960067151209584 AS TEXT) AS NUMERIC) ASC);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1)) NOT BETWEEN (((((vt0.c1, '-1732471301', 'Cw'))>=((rt0.c0, vt0.c1, vt0.c1))))) AND ((((rt0.c2) NOT BETWEEN (0.9329062770218449) AND (rt0.c0)))))) ORDER BY CAST(CAST(0.034960067151209584 AS TEXT) AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN ((~ (vt0.c0))) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY IFNULL(DISTINCT CAST(vt0.c1 AS TEXT), (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1)))), (vt0.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) BETWEEN ((~ (vt0.c0))) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(DISTINCT CAST(vt0.c1 AS TEXT), (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1)))), (vt0.c0 IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN ((~ (vt0.c0))) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY IFNULL(DISTINCT CAST(vt0.c1 AS TEXT), (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1)))), (vt0.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) BETWEEN ((~ (vt0.c0))) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(DISTINCT CAST(vt0.c1 AS TEXT), (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1)))), (vt0.c0 IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN ((~ (vt0.c0))) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY IFNULL(DISTINCT CAST(vt0.c1 AS TEXT), (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1)))), (vt0.c0 IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((rt0.c2)<=(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((rt0.c2)<=(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((rt0.c2)<=(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((rt0.c2)<=(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((rt0.c2)<=(rt0.c2)) END);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c1))<=((rt0.c1)))))<((((rt0.c0)*(rt0.c2)))))) ORDER BY ((((rt0.c2)<>(NULL))) BETWEEN (0.2504444464327936) AND (2120767657))  NULLS FIRST, rt0.c1, ((rt0.c1) IS FALSE) DESC  NULLS LAST, (((+ (rt0.c1)))>(TRIM(DISTINCT rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1))<=((rt0.c1)))))<((((rt0.c0)*(rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)!=(NULL))) BETWEEN (0.2504444464327936) AND (2120767657))  NULLS FIRST, rt0.c1, ((rt0.c1) IS FALSE) DESC  NULLS LAST, (((+ (rt0.c1)))>(TRIM(DISTINCT rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c1))<=((rt0.c1)))))<((((rt0.c0)*(rt0.c2)))))) ORDER BY ((((rt0.c2)<>(NULL))) BETWEEN (0.2504444464327936) AND (2120767657))  NULLS FIRST, rt0.c1, ((rt0.c1) IS FALSE) DESC  NULLS LAST, (((+ (rt0.c1)))>(TRIM(DISTINCT rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1))<=((rt0.c1)))))<((((rt0.c0)*(rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)!=(NULL))) BETWEEN (0.2504444464327936) AND (2120767657))  NULLS FIRST, rt0.c1, ((rt0.c1) IS FALSE) DESC  NULLS LAST, (((+ (rt0.c1)))>(TRIM(DISTINCT rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c1))<=((rt0.c1)))))<((((rt0.c0)*(rt0.c2)))))) ORDER BY ((((rt0.c2)<>(NULL))) BETWEEN (0.2504444464327936) AND (2120767657))  NULLS FIRST, rt0.c1, ((rt0.c1) IS FALSE) DESC  NULLS LAST, (((+ (rt0.c1)))>(TRIM(DISTINCT rt0.c2)));
SELECT * FROM rt0 WHERE (CAST((((-1380442908, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0))) AS REAL)) ORDER BY UNLIKELY(DISTINCT rt0.c2 COLLATE BINARY) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((-1380442908, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0))) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(DISTINCT rt0.c2 COLLATE BINARY) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST((((-1380442908, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0))) AS REAL)) ORDER BY UNLIKELY(DISTINCT rt0.c2 COLLATE BINARY) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((-1380442908, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0))) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(DISTINCT rt0.c2 COLLATE BINARY) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST((((-1380442908, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0))) AS REAL)) ORDER BY UNLIKELY(DISTINCT rt0.c2 COLLATE BINARY) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (SUBSTR(((rt0.c2)GLOB(rt0.c1)), rt0.c1));
SELECT SUM(count) FROM (SELECT ((SUBSTR(((rt0.c2)GLOB(rt0.c1)), rt0.c1)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (SUBSTR(((rt0.c2)GLOB(rt0.c1)), rt0.c1));
SELECT SUM(count) FROM (SELECT ((SUBSTR(((rt0.c2)GLOB(rt0.c1)), rt0.c1)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (SUBSTR(((rt0.c2)GLOB(rt0.c1)), rt0.c1));
SELECT * FROM vt0 WHERE (((ABS(DISTINCT vt0.c0))==(((vt0.c1)IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT vt0.c0))=(((vt0.c1)IS(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((ABS(DISTINCT vt0.c0))==(((vt0.c1)IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT vt0.c0))=(((vt0.c1)IS(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((ABS(DISTINCT vt0.c0))==(((vt0.c1)IS(vt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE ((((((((((((rt0.c2))<>((rt0.c0))))AND((((rt0.c1))>((rt0.c2))))))OR((~ (5.15000311E8)))))OR(CAST(rt0.c0 AS TEXT))))AND(IFNULL(rt0.c2, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c2))!=((rt0.c0))))AND((((rt0.c1))>((rt0.c2))))))OR((~ (5.15000311E8)))))OR(CAST(rt0.c0 AS TEXT))))AND(IFNULL(rt0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((((rt0.c2))<>((rt0.c0))))AND((((rt0.c1))>((rt0.c2))))))OR((~ (5.15000311E8)))))OR(CAST(rt0.c0 AS TEXT))))AND(IFNULL(rt0.c2, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c2))!=((rt0.c0))))AND((((rt0.c1))>((rt0.c2))))))OR((~ (5.15000311E8)))))OR(CAST(rt0.c0 AS TEXT))))AND(IFNULL(rt0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((((rt0.c2))<>((rt0.c0))))AND((((rt0.c1))>((rt0.c2))))))OR((~ (5.15000311E8)))))OR(CAST(rt0.c0 AS TEXT))))AND(IFNULL(rt0.c2, rt0.c1))));
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE '0.22859155727638436' END IN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 END, vt0.c1 COLLATE NOCASE, (~ (vt0.c1)))) DESC  NULLS LAST, (((rt0.c0)!=(rt0.c1)) IN (CASE WHEN vt0.c1 THEN rt0.c2 ELSE -1e500 END)) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE '0.22859155727638436' END IN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 END, vt0.c1 COLLATE NOCASE, (~ (vt0.c1)))) DESC  NULLS LAST, (((rt0.c0)<>(rt0.c1)) IN (CASE WHEN vt0.c1 THEN rt0.c2 ELSE -1e500 END)) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE '0.22859155727638436' END IN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 END, vt0.c1 COLLATE NOCASE, (~ (vt0.c1)))) DESC  NULLS LAST, (((rt0.c0)!=(rt0.c1)) IN (CASE WHEN vt0.c1 THEN rt0.c2 ELSE -1e500 END)) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE '0.22859155727638436' END IN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 END, vt0.c1 COLLATE NOCASE, (~ (vt0.c1)))) DESC  NULLS LAST, (((rt0.c0)<>(rt0.c1)) IN (CASE WHEN vt0.c1 THEN rt0.c2 ELSE -1e500 END)) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE '0.22859155727638436' END IN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 END, vt0.c1 COLLATE NOCASE, (~ (vt0.c1)))) DESC  NULLS LAST, (((rt0.c0)!=(rt0.c1)) IN (CASE WHEN vt0.c1 THEN rt0.c2 ELSE -1e500 END)) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((- (vt0.c1)))||(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))||(rt0.c0))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((- (vt0.c1)))||(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))||(rt0.c0))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((- (vt0.c1)))||(rt0.c0)));
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(x'')))||(((rt0.c0) ISNULL)))) ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))<=((rt0.c0 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c1)))AND(x'')))||(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))<=((rt0.c0 COLLATE RTRIM))) ASC);
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(x'')))||(((rt0.c0) ISNULL)))) ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))<=((rt0.c0 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c1)))AND(x'')))||(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))<=((rt0.c0 COLLATE RTRIM))) ASC);
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(x'')))||(((rt0.c0) ISNULL)))) ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))<=((rt0.c0 COLLATE RTRIM))) ASC;
SELECT * FROM rt0 WHERE (((((((((((rt0.c1)OR('1355742929')))OR('1㺽Nj3N')))OR(rt0.c0)))OR(rt0.c1)))==(rt0.c1))) ORDER BY (((((+ (rt0.c1)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR(CASE 0xffffffffe23b2bd4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)), (((((rt0.c2)OR(rt0.c1))))<((0Xffffffffc71366a8))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)OR('1355742929')))OR('1㺽Nj3N')))OR(rt0.c0)))OR(rt0.c1)))==(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY (((((+ (rt0.c1)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR(CASE 0Xffffffffe23b2bd4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)), (((((rt0.c2)OR(rt0.c1))))<((0Xffffffffc71366a8))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((((((rt0.c1)OR('1355742929')))OR('1㺽Nj3N')))OR(rt0.c0)))OR(rt0.c1)))==(rt0.c1))) ORDER BY (((((+ (rt0.c1)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR(CASE 0xffffffffe23b2bd4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)), (((((rt0.c2)OR(rt0.c1))))<((0Xffffffffc71366a8))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)OR('1355742929')))OR('1㺽Nj3N')))OR(rt0.c0)))OR(rt0.c1)))==(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY (((((+ (rt0.c1)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR(CASE 0Xffffffffe23b2bd4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)), (((((rt0.c2)OR(rt0.c1))))<((0Xffffffffc71366a8))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((((((rt0.c1)OR('1355742929')))OR('1㺽Nj3N')))OR(rt0.c0)))OR(rt0.c1)))==(rt0.c1))) ORDER BY (((((+ (rt0.c1)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR(CASE 0xffffffffe23b2bd4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)), (((((rt0.c2)OR(rt0.c1))))<((0Xffffffffc71366a8))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((LIKELY(DISTINCT rt0.c1))AND(((((rt0.c0)AND(vt0.c1)))AND(vt0.c1)))))AND((((rt0.c1, NULL, rt0.c0))>=((rt0.c1, rt0.c2, '')))))) ORDER BY NULL DESC  NULLS LAST, (((json_array_length(rt0.c1)))>(('-799147087')));
SELECT SUM(count) FROM (SELECT ((((((LIKELY(DISTINCT rt0.c1))AND(((((rt0.c0)AND(vt0.c1)))AND(vt0.c1)))))AND((((rt0.c1, NULL, rt0.c0))>=((rt0.c1, rt0.c2, '')))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL DESC  NULLS LAST, (((json_array_length(rt0.c1)))>(('-799147087'))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((LIKELY(DISTINCT rt0.c1))AND(((((rt0.c0)AND(vt0.c1)))AND(vt0.c1)))))AND((((rt0.c1, NULL, rt0.c0))>=((rt0.c1, rt0.c2, '')))))) ORDER BY NULL DESC  NULLS LAST, (((json_array_length(rt0.c1)))>(('-799147087')));
SELECT SUM(count) FROM (SELECT ((((((LIKELY(DISTINCT rt0.c1))AND(((((rt0.c0)AND(vt0.c1)))AND(vt0.c1)))))AND((((rt0.c1, NULL, rt0.c0))>=((rt0.c1, rt0.c2, '')))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL DESC  NULLS LAST, (((json_array_length(rt0.c1)))>(('-799147087'))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((LIKELY(DISTINCT rt0.c1))AND(((((rt0.c0)AND(vt0.c1)))AND(vt0.c1)))))AND((((rt0.c1, NULL, rt0.c0))>=((rt0.c1, rt0.c2, '')))))) ORDER BY NULL DESC  NULLS LAST, (((json_array_length(rt0.c1)))>(('-799147087')));
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c0)) AS TEXT));
SELECT ALL * FROM rt0, vt0 WHERE (vt0.c0) ORDER BY ((((rt0.c2)*(vt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((rt0.c1)AND(rt0.c2)))OR(0.12981809582658688)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c2)*(vt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((rt0.c1)AND(rt0.c2)))OR(0.12981809582658688)))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (vt0.c0) ORDER BY ((((rt0.c2)*(vt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((rt0.c1)AND(rt0.c2)))OR(0.12981809582658688)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c2)*(vt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((rt0.c1)AND(rt0.c2)))OR(0.12981809582658688)))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (vt0.c0) ORDER BY ((((rt0.c2)*(vt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((rt0.c1)AND(rt0.c2)))OR(0.12981809582658688)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((0.6604657247154578 COLLATE RTRIM)AND((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.6604657247154578 COLLATE RTRIM)AND((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((0.6604657247154578 COLLATE RTRIM)AND((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.6604657247154578 COLLATE RTRIM)AND((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((0.6604657247154578 COLLATE RTRIM)AND((+ (vt0.c1)))));
SELECT * FROM vt0 WHERE (((((vt0.c1)<<(vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<<(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)<<(vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<<(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)<<(vt0.c1))) ISNULL));
SELECT ALL * FROM vt0, rt0 WHERE ((((((((((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND((((rt0.c2))==((vt0.c0))))))OR(vt0.c0)))OR((- (rt0.c0)))))AND((((rt0.c1))<=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND((((rt0.c2))==((vt0.c0))))))OR(vt0.c0)))OR((- (rt0.c0)))))AND((((rt0.c1))<=((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((((((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND((((rt0.c2))==((vt0.c0))))))OR(vt0.c0)))OR((- (rt0.c0)))))AND((((rt0.c1))<=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND((((rt0.c2))==((vt0.c0))))))OR(vt0.c0)))OR((- (rt0.c0)))))AND((((rt0.c1))<=((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((((((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND((((rt0.c2))==((vt0.c0))))))OR(vt0.c0)))OR((- (rt0.c0)))))AND((((rt0.c1))<=((rt0.c1))))));
SELECT ALL * FROM vt0 WHERE ((((('-1429200488') NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) ORDER BY CAST(((vt0.c1)|(vt0.c1)) AS REAL)  NULLS LAST, CASE WHEN (((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c0, '709115426', vt0.c0))) THEN (vt0.c0 IN (vt0.c0, vt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('-1429200488') NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1)|(vt0.c1)) AS REAL)  NULLS LAST, CASE WHEN (((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c0, '709115426', vt0.c0))) THEN (vt0.c0 IN (vt0.c0, vt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((('-1429200488') NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) ORDER BY CAST(((vt0.c1)|(vt0.c1)) AS REAL)  NULLS LAST, CASE WHEN (((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c0, '709115426', vt0.c0))) THEN (vt0.c0 IN (vt0.c0, vt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('-1429200488') NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1)|(vt0.c1)) AS REAL)  NULLS LAST, CASE WHEN (((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c0, '709115426', vt0.c0))) THEN (vt0.c0 IN (vt0.c0, vt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((('-1429200488') NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) ORDER BY CAST(((vt0.c1)|(vt0.c1)) AS REAL)  NULLS LAST, CASE WHEN (((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c0, '709115426', vt0.c0))) THEN (vt0.c0 IN (vt0.c0, vt0.c1)) END  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))<(CAST(rt0.c0 AS REAL)))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))<(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))<(CAST(rt0.c0 AS REAL)))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))<(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))<(CAST(rt0.c0 AS REAL)))) ORDER BY NULL  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2))) NOTNULL));
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB))>=(((rt0.c2)>(rt0.c2))))) ORDER BY TRIM(rt0.c0, ((rt0.c2) BETWEEN ('RG') AND (rt0.c1))) ASC  NULLS LAST, rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS BLOB))>=(((rt0.c2)>(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY TRIM(rt0.c0, ((rt0.c2) BETWEEN ('RG') AND (rt0.c1))) ASC  NULLS LAST, rt0.c1 DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB))>=(((rt0.c2)>(rt0.c2))))) ORDER BY TRIM(rt0.c0, ((rt0.c2) BETWEEN ('RG') AND (rt0.c1))) ASC  NULLS LAST, rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS BLOB))>=(((rt0.c2)>(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY TRIM(rt0.c0, ((rt0.c2) BETWEEN ('RG') AND (rt0.c1))) ASC  NULLS LAST, rt0.c1 DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB))>=(((rt0.c2)>(rt0.c2))))) ORDER BY TRIM(rt0.c0, ((rt0.c2) BETWEEN ('RG') AND (rt0.c1))) ASC  NULLS LAST, rt0.c1 DESC  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (CAST('589252873' AS NUMERIC)) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('589252873' AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 ORDER BY x''  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CAST('589252873' AS NUMERIC)) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('589252873' AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 ORDER BY x''  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CAST('589252873' AS NUMERIC)) ORDER BY x''  NULLS FIRST;
SELECT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END AS REAL)) ORDER BY 0.8332810632909793, ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))+(rt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY 0.8332810632909793, ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))+(rt0.c0)) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END AS REAL)) ORDER BY 0.8332810632909793, ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))+(rt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY 0.8332810632909793, ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))+(rt0.c0)) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END AS REAL)) ORDER BY 0.8332810632909793, ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))+(rt0.c0)) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON IFNULL((~ (vt0.c0)), ((0.1650056341818903) NOT NULL)) WHERE (((((rt0.c1)-(-1e500))) BETWEEN (CASE rt0.c2  WHEN '-49584348' THEN vt0.c0 ELSE rt0.c1 END) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)-(-1e500))) BETWEEN (CASE rt0.c2  WHEN '-49584348' THEN vt0.c0 ELSE rt0.c1 END) AND (vt0.c0))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON IFNULL((~ (vt0.c0)), ((0.1650056341818903) NOT NULL)));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON IFNULL((~ (vt0.c0)), ((0.1650056341818903) NOT NULL)) WHERE (((((rt0.c1)-(-1e500))) BETWEEN (CASE rt0.c2  WHEN '-49584348' THEN vt0.c0 ELSE rt0.c1 END) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)-(-1e500))) BETWEEN (CASE rt0.c2  WHEN '-49584348' THEN vt0.c0 ELSE rt0.c1 END) AND (vt0.c0))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON IFNULL((~ (vt0.c0)), ((0.1650056341818903) NOT NULL)));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON IFNULL((~ (vt0.c0)), ((0.1650056341818903) NOT NULL)) WHERE (((((rt0.c1)-(-1e500))) BETWEEN (CASE rt0.c2  WHEN '-49584348' THEN vt0.c0 ELSE rt0.c1 END) AND (vt0.c0)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c2))) AND (((rt0.c2) NOTNULL)))) ORDER BY (UPPER(DISTINCT NULL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c2))) AND (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (UPPER(DISTINCT NULL) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c2))) AND (((rt0.c2) NOTNULL)))) ORDER BY (UPPER(DISTINCT NULL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c2))) AND (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (UPPER(DISTINCT NULL) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c2))) AND (((rt0.c2) NOTNULL)))) ORDER BY (UPPER(DISTINCT NULL) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (((vt0.c1)>=('K|'))))) ORDER BY CAST(((rt0.c2)LIKE(rt0.c1)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1)>=('K|'))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c2)LIKE(rt0.c1)) AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (((vt0.c1)>=('K|'))))) ORDER BY CAST(((rt0.c2)LIKE(rt0.c1)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1)>=('K|'))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c2)LIKE(rt0.c1)) AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (((vt0.c1)>=('K|'))))) ORDER BY CAST(((rt0.c2)LIKE(rt0.c1)) AS NUMERIC) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY (((vt0.c0))==((rt0.c1))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0))=((rt0.c1))) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY (((vt0.c0))==((rt0.c1))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0))=((rt0.c1))) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY (((vt0.c0))==((rt0.c1))) COLLATE NOCASE;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((((rt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1)) BETWEEN ((NULL, vt0.c1, vt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c0, 0.09572937713300189, vt0.c0, vt0.c0, vt0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1)) BETWEEN ((NULL, vt0.c1, vt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c0, 0.09572937713300189, vt0.c0, vt0.c0, vt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((((rt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1)) BETWEEN ((NULL, vt0.c1, vt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c0, 0.09572937713300189, vt0.c0, vt0.c0, vt0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1)) BETWEEN ((NULL, vt0.c1, vt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c0, 0.09572937713300189, vt0.c0, vt0.c0, vt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((((rt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c1)) BETWEEN ((NULL, vt0.c1, vt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c0, 0.09572937713300189, vt0.c0, vt0.c0, vt0.c0))) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE ('&');
SELECT SUM(count) FROM (SELECT ALL (('&') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('&');
SELECT SUM(count) FROM (SELECT ALL (('&') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('&');
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)==(UNLIKELY(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)=(UNLIKELY(NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)==(UNLIKELY(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)=(UNLIKELY(NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)==(UNLIKELY(NULL))));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (rt0.c0 COLLATE NOCASE))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c0))) IS FALSE) DESC);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (rt0.c0 COLLATE NOCASE))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c0))) IS FALSE) DESC);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (rt0.c0 COLLATE NOCASE))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c0))) IS FALSE) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) BETWEEN ((rt0.c1 IN (rt0.c1, rt0.c1))) AND (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(x'a50656b02e64')))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) BETWEEN ((rt0.c1 IN (rt0.c1, rt0.c1))) AND (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(x'a50656b02e64'))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) BETWEEN ((rt0.c1 IN (rt0.c1, rt0.c1))) AND (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(x'a50656b02e64')))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) BETWEEN ((rt0.c1 IN (rt0.c1, rt0.c1))) AND (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(x'a50656b02e64'))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) BETWEEN ((rt0.c1 IN (rt0.c1, rt0.c1))) AND (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(x'a50656b02e64')))));
SELECT * FROM rt0, vt0 WHERE (CAST(((((rt0.c0)OR(vt0.c0)))OR(rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)OR(vt0.c0)))OR(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST(((((rt0.c0)OR(vt0.c0)))OR(rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)OR(vt0.c0)))OR(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST(((((rt0.c0)OR(vt0.c0)))OR(rt0.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON NULL WHERE ((((vt0.c0)) NOT BETWEEN ((-9.55029848E8)) AND ((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((-9.55029848E8)) AND ((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON NULL WHERE ((((vt0.c0)) NOT BETWEEN ((-9.55029848E8)) AND ((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((-9.55029848E8)) AND ((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON NULL WHERE ((((vt0.c0)) NOT BETWEEN ((-9.55029848E8)) AND ((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((('-1743276807')OR(NULL)))AND(rt0.c1 COLLATE BINARY))) ORDER BY vt0.c0, TRIM(DISTINCT CASE WHEN rt0.c0 THEN rt0.c1 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('-1743276807')OR(NULL)))AND(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0, TRIM(DISTINCT CASE WHEN rt0.c0 THEN rt0.c1 END)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((('-1743276807')OR(NULL)))AND(rt0.c1 COLLATE BINARY))) ORDER BY vt0.c0, TRIM(DISTINCT CASE WHEN rt0.c0 THEN rt0.c1 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('-1743276807')OR(NULL)))AND(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0, TRIM(DISTINCT CASE WHEN rt0.c0 THEN rt0.c1 END)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((('-1743276807')OR(NULL)))AND(rt0.c1 COLLATE BINARY))) ORDER BY vt0.c0, TRIM(DISTINCT CASE WHEN rt0.c0 THEN rt0.c1 END)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)<=(vt0.c1)))) AND (('292982821')))) ORDER BY (~ (vt0.c1)) COLLATE BINARY  NULLS LAST, ((CAST(vt0.c1 AS BLOB))+((- (vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((vt0.c1)<=(vt0.c1)))) AND (('292982821')))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c1)) COLLATE BINARY  NULLS LAST, ((CAST(vt0.c1 AS BLOB))+((- (vt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)<=(vt0.c1)))) AND (('292982821')))) ORDER BY (~ (vt0.c1)) COLLATE BINARY  NULLS LAST, ((CAST(vt0.c1 AS BLOB))+((- (vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((vt0.c1)<=(vt0.c1)))) AND (('292982821')))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c1)) COLLATE BINARY  NULLS LAST, ((CAST(vt0.c1 AS BLOB))+((- (vt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)<=(vt0.c1)))) AND (('292982821')))) ORDER BY (~ (vt0.c1)) COLLATE BINARY  NULLS LAST, ((CAST(vt0.c1 AS BLOB))+((- (vt0.c1)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c2) BETWEEN (rt0.c1) AND ('*k')) AS NUMERIC) WHERE (-1.188464243E9) ORDER BY (((rt0.c1)>>(rt0.c2)) IN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1.188464243E9) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c2) BETWEEN (rt0.c1) AND ('*k')) AS NUMERIC) ORDER BY (((rt0.c1)>>(rt0.c2)) IN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c2) BETWEEN (rt0.c1) AND ('*k')) AS NUMERIC) WHERE (-1.188464243E9) ORDER BY (((rt0.c1)>>(rt0.c2)) IN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1.188464243E9) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c2) BETWEEN (rt0.c1) AND ('*k')) AS NUMERIC) ORDER BY (((rt0.c1)>>(rt0.c2)) IN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c2) BETWEEN (rt0.c1) AND ('*k')) AS NUMERIC) WHERE (-1.188464243E9) ORDER BY (((rt0.c1)>>(rt0.c2)) IN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(rt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(1.336287953E9 AS INTEGER)) BETWEEN (((vt0.c1)<>(vt0.c1))) AND (0x11769025)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(1.336287953E9 AS INTEGER)) BETWEEN (((vt0.c1)!=(vt0.c1))) AND (0x11769025))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(1.336287953E9 AS INTEGER)) BETWEEN (((vt0.c1)<>(vt0.c1))) AND (0x11769025)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(1.336287953E9 AS INTEGER)) BETWEEN (((vt0.c1)!=(vt0.c1))) AND (0x11769025))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(1.336287953E9 AS INTEGER)) BETWEEN (((vt0.c1)<>(vt0.c1))) AND (0x11769025)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c0)<<((('-403652673') BETWEEN (rt0.c0) AND (rt0.c1)))) WHERE (0.4046268229974538) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.4046268229974538) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c0)<<((('-403652673') BETWEEN (rt0.c0) AND (rt0.c1)))) ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c0)<<((('-403652673') BETWEEN (rt0.c0) AND (rt0.c1)))) WHERE (0.4046268229974538) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.4046268229974538) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c0)<<((('-403652673') BETWEEN (rt0.c0) AND (rt0.c1)))) ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c0)<<((('-403652673') BETWEEN (rt0.c0) AND (rt0.c1)))) WHERE (0.4046268229974538) ORDER BY NULL  NULLS LAST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN 0x7c5ec89f THEN vt0.c1 END AS NUMERIC) WHERE (((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(((vt0.c1) NOTNULL)))) ORDER BY ((((x'33e6') BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL), NULL  NULLS LAST, '1041077241' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN 0X7c5ec89f THEN vt0.c1 END AS NUMERIC) ORDER BY ((((x'33e6') BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL), NULL  NULLS LAST, '1041077241' ASC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN 0x7c5ec89f THEN vt0.c1 END AS NUMERIC) WHERE (((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(((vt0.c1) NOTNULL)))) ORDER BY ((((x'33e6') BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL), NULL  NULLS LAST, '1041077241' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN 0X7c5ec89f THEN vt0.c1 END AS NUMERIC) ORDER BY ((((x'33e6') BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL), NULL  NULLS LAST, '1041077241' ASC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN 0x7c5ec89f THEN vt0.c1 END AS NUMERIC) WHERE (((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(((vt0.c1) NOTNULL)))) ORDER BY ((((x'33e6') BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL), NULL  NULLS LAST, '1041077241' ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (((vt0.c0, '-282365827', rt0.c1, rt0.c2, 0x10aa7711)) NOT BETWEEN ((((NULL) NOTNULL), vt0.c1, ((rt0.c1)|(rt0.c1)), (+ (vt0.c0)), vt0.c1)) AND ((((('909979620', vt0.c1, rt0.c2))>((vt0.c0, rt0.c2, rt0.c2))), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), json_object(rt0.c1, rt0.c0), CAST(vt0.c1 AS BLOB), ''))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0, '-282365827', rt0.c1, rt0.c2, 0X10aa7711)) NOT BETWEEN ((((NULL) NOTNULL), vt0.c1, ((rt0.c1)|(rt0.c1)), (+ (vt0.c0)), vt0.c1)) AND ((((('909979620', vt0.c1, rt0.c2))>((vt0.c0, rt0.c2, rt0.c2))), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), json_object(rt0.c1, rt0.c0), CAST(vt0.c1 AS BLOB), ''))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (((vt0.c0, '-282365827', rt0.c1, rt0.c2, 0x10aa7711)) NOT BETWEEN ((((NULL) NOTNULL), vt0.c1, ((rt0.c1)|(rt0.c1)), (+ (vt0.c0)), vt0.c1)) AND ((((('909979620', vt0.c1, rt0.c2))>((vt0.c0, rt0.c2, rt0.c2))), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), json_object(rt0.c1, rt0.c0), CAST(vt0.c1 AS BLOB), ''))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0, '-282365827', rt0.c1, rt0.c2, 0X10aa7711)) NOT BETWEEN ((((NULL) NOTNULL), vt0.c1, ((rt0.c1)|(rt0.c1)), (+ (vt0.c0)), vt0.c1)) AND ((((('909979620', vt0.c1, rt0.c2))>((vt0.c0, rt0.c2, rt0.c2))), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), json_object(rt0.c1, rt0.c0), CAST(vt0.c1 AS BLOB), ''))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (((vt0.c0, '-282365827', rt0.c1, rt0.c2, 0x10aa7711)) NOT BETWEEN ((((NULL) NOTNULL), vt0.c1, ((rt0.c1)|(rt0.c1)), (+ (vt0.c0)), vt0.c1)) AND ((((('909979620', vt0.c1, rt0.c2))>((vt0.c0, rt0.c2, rt0.c2))), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), json_object(rt0.c1, rt0.c0), CAST(vt0.c1 AS BLOB), ''))) ASC;
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS REAL), ((((rt0.c2)<<(x'')))>>('2120767657')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 COLLATE RTRIM AS REAL), ((((rt0.c2)<<(x'')))>>('2120767657')) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS REAL), ((((rt0.c2)<<(x'')))>>('2120767657')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 COLLATE RTRIM AS REAL), ((((rt0.c2)<<(x'')))>>('2120767657')) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS REAL), ((((rt0.c2)<<(x'')))>>('2120767657')) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2 IN ())) BETWEEN (0.3224777144111495) AND (((rt0.c2)-(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) BETWEEN (0.3224777144111495) AND (((rt0.c2)-(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2 IN ())) BETWEEN (0.3224777144111495) AND (((rt0.c2)-(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) BETWEEN (0.3224777144111495) AND (((rt0.c2)-(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2 IN ())) BETWEEN (0.3224777144111495) AND (((rt0.c2)-(rt0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) IS TRUE)) IS TRUE)) ORDER BY 0.5648708776687406 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY 0.5648708776687406 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) IS TRUE)) IS TRUE)) ORDER BY 0.5648708776687406 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY 0.5648708776687406 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) IS TRUE)) IS TRUE)) ORDER BY 0.5648708776687406 ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(vt0.c1 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(vt0.c1 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(vt0.c1 AS BLOB));
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c1)/(rt0.c0)) THEN '-1823692526' COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)/(rt0.c0)) THEN '-1823692526' COLLATE NOCASE END) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c1)/(rt0.c0)) THEN '-1823692526' COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)/(rt0.c0)) THEN '-1823692526' COLLATE NOCASE END) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c1)/(rt0.c0)) THEN '-1823692526' COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((0.8446356948305541))>=((vt0.c1))))<<(CAST(vt0.c1 AS BLOB)))) ORDER BY (~ (((vt0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((0.8446356948305541))>=((vt0.c1))))<<(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0) NOTNULL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((0.8446356948305541))>=((vt0.c1))))<<(CAST(vt0.c1 AS BLOB)))) ORDER BY (~ (((vt0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((0.8446356948305541))>=((vt0.c1))))<<(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0) NOTNULL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((0.8446356948305541))>=((vt0.c1))))<<(CAST(vt0.c1 AS BLOB)))) ORDER BY (~ (((vt0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1)GLOB(vt0.c1)) COLLATE BINARY WHERE ((+ (((rt0.c0)>=(rt0.c0))))) ORDER BY (((NOT (vt0.c1)))-(((vt0.c1) NOTNULL)))  NULLS FIRST, CAST(vt0.c1 AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0)>=(rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1)GLOB(vt0.c1)) COLLATE BINARY ORDER BY (((NOT (vt0.c1)))-(((vt0.c1) NOTNULL)))  NULLS FIRST, CAST(vt0.c1 AS BLOB)  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1)GLOB(vt0.c1)) COLLATE BINARY WHERE ((+ (((rt0.c0)>=(rt0.c0))))) ORDER BY (((NOT (vt0.c1)))-(((vt0.c1) NOTNULL)))  NULLS FIRST, CAST(vt0.c1 AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0)>=(rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1)GLOB(vt0.c1)) COLLATE BINARY ORDER BY (((NOT (vt0.c1)))-(((vt0.c1) NOTNULL)))  NULLS FIRST, CAST(vt0.c1 AS BLOB)  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1)GLOB(vt0.c1)) COLLATE BINARY WHERE ((+ (((rt0.c0)>=(rt0.c0))))) ORDER BY (((NOT (vt0.c1)))-(((vt0.c1) NOTNULL)))  NULLS FIRST, CAST(vt0.c1 AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 END)OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY (((rt0.c2, rt0.c2, rt0.c1)) BETWEEN (((~ (rt0.c1)), ((rt0.c2) NOT NULL), ((rt0.c0)<(rt0.c2)))) AND ((rt0.c2 COLLATE BINARY, (rt0.c2 IN (rt0.c2)), ((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c2 THEN rt0.c2 END)OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c2, rt0.c1)) BETWEEN (((~ (rt0.c1)), ((rt0.c2) NOT NULL), ((rt0.c0)<(rt0.c2)))) AND ((rt0.c2 COLLATE BINARY, (rt0.c2 IN (rt0.c2)), ((rt0.c0) IS TRUE)))));
SELECT COUNT(*) FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 END)OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY (((rt0.c2, rt0.c2, rt0.c1)) BETWEEN (((~ (rt0.c1)), ((rt0.c2) NOT NULL), ((rt0.c0)<(rt0.c2)))) AND ((rt0.c2 COLLATE BINARY, (rt0.c2 IN (rt0.c2)), ((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c2 THEN rt0.c2 END)OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c2, rt0.c1)) BETWEEN (((~ (rt0.c1)), ((rt0.c2) NOT NULL), ((rt0.c0)<(rt0.c2)))) AND ((rt0.c2 COLLATE BINARY, (rt0.c2 IN (rt0.c2)), ((rt0.c0) IS TRUE)))));
SELECT COUNT(*) FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 END)OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY (((rt0.c2, rt0.c2, rt0.c1)) BETWEEN (((~ (rt0.c1)), ((rt0.c2) NOT NULL), ((rt0.c0)<(rt0.c2)))) AND ((rt0.c2 COLLATE BINARY, (rt0.c2 IN (rt0.c2)), ((rt0.c0) IS TRUE))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (~ (rt0.c0)) WHERE (CASE WHEN CAST(rt0.c0 AS BLOB) THEN rt0.c0 WHEN CAST(rt0.c0 AS BLOB) THEN ((vt0.c1)+(rt0.c2)) WHEN (((rt0.c2))>=((rt0.c2))) THEN CAST(vt0.c1 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c0 AS BLOB) THEN rt0.c0 WHEN CAST(rt0.c0 AS BLOB) THEN ((vt0.c1)+(rt0.c2)) WHEN (((rt0.c2))>=((rt0.c2))) THEN CAST(vt0.c1 AS TEXT) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (~ (rt0.c0)));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (~ (rt0.c0)) WHERE (CASE WHEN CAST(rt0.c0 AS BLOB) THEN rt0.c0 WHEN CAST(rt0.c0 AS BLOB) THEN ((vt0.c1)+(rt0.c2)) WHEN (((rt0.c2))>=((rt0.c2))) THEN CAST(vt0.c1 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c0 AS BLOB) THEN rt0.c0 WHEN CAST(rt0.c0 AS BLOB) THEN ((vt0.c1)+(rt0.c2)) WHEN (((rt0.c2))>=((rt0.c2))) THEN CAST(vt0.c1 AS TEXT) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (~ (rt0.c0)));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (~ (rt0.c0)) WHERE (CASE WHEN CAST(rt0.c0 AS BLOB) THEN rt0.c0 WHEN CAST(rt0.c0 AS BLOB) THEN ((vt0.c1)+(rt0.c2)) WHEN (((rt0.c2))>=((rt0.c2))) THEN CAST(vt0.c1 AS TEXT) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(0.9221866946072614)))AND(vt0.c0)))AND(vt0.c0)))LIKE(((vt0.c0) ISNULL)))) ORDER BY ((CASE WHEN x'' THEN vt0.c1 END) NOT NULL), ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))==(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))OR(0.9221866946072614)))AND(vt0.c0)))AND(vt0.c0)))LIKE(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN x'' THEN vt0.c1 END) NOT NULL), ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))==(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(0.9221866946072614)))AND(vt0.c0)))AND(vt0.c0)))LIKE(((vt0.c0) ISNULL)))) ORDER BY ((CASE WHEN x'' THEN vt0.c1 END) NOT NULL), ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))==(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))OR(0.9221866946072614)))AND(vt0.c0)))AND(vt0.c0)))LIKE(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN x'' THEN vt0.c1 END) NOT NULL), ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))==(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(0.9221866946072614)))AND(vt0.c0)))AND(vt0.c0)))LIKE(((vt0.c0) ISNULL)))) ORDER BY ((CASE WHEN x'' THEN vt0.c1 END) NOT NULL), ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))==(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0 COLLATE BINARY)OR((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))))AND(json_array(0.559008946816769, vt0.c0)))) ORDER BY ((x'0480')-(TRIM(DISTINCT rt0.c1, rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE BINARY)OR((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))))AND(json_array(0.559008946816769, vt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((x'0480')-(TRIM(DISTINCT rt0.c1, rt0.c2)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0 COLLATE BINARY)OR((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))))AND(json_array(0.559008946816769, vt0.c0)))) ORDER BY ((x'0480')-(TRIM(DISTINCT rt0.c1, rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE BINARY)OR((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))))AND(json_array(0.559008946816769, vt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((x'0480')-(TRIM(DISTINCT rt0.c1, rt0.c2)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN ((vt0.c1 IN ())) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) BETWEEN ((vt0.c1 IN ())) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN ((vt0.c1 IN ())) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) BETWEEN ((vt0.c1 IN ())) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN ((vt0.c1 IN ())) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON LIKELIHOOD((- (rt0.c2)), 0.6623218516810335) WHERE ((((((rt0.c2) NOTNULL)))<=((rt0.c2 COLLATE BINARY)))) ORDER BY (((rt0.c0 IN (vt0.c0)))<=(vt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) NOTNULL)))<=((rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON LIKELIHOOD((- (rt0.c2)), 0.6623218516810335) ORDER BY (((rt0.c0 IN (vt0.c0)))<=(vt0.c0)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON LIKELIHOOD((- (rt0.c2)), 0.6623218516810335) WHERE ((((((rt0.c2) NOTNULL)))<=((rt0.c2 COLLATE BINARY)))) ORDER BY (((rt0.c0 IN (vt0.c0)))<=(vt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) NOTNULL)))<=((rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON LIKELIHOOD((- (rt0.c2)), 0.6623218516810335) ORDER BY (((rt0.c0 IN (vt0.c0)))<=(vt0.c0)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON LIKELIHOOD((- (rt0.c2)), 0.6623218516810335) WHERE ((((((rt0.c2) NOTNULL)))<=((rt0.c2 COLLATE BINARY)))) ORDER BY (((rt0.c0 IN (vt0.c0)))<=(vt0.c0)) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('');
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE (((vt0.c0)%(vt0.c1)) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)%(vt0.c1)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c1);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE (((vt0.c0)%(vt0.c1)) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)%(vt0.c1)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c1);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE (((vt0.c0)%(vt0.c1)) COLLATE BINARY COLLATE NOCASE);
SELECT * FROM rt0 WHERE (((rt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (((((0.3982075869092515)OR(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE) ORDER BY ((((0.4429741424414908)&(rt0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.3982075869092515)OR(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((0.4429741424414908)&(rt0.c0))) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((0.3982075869092515)OR(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE) ORDER BY ((((0.4429741424414908)&(rt0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.3982075869092515)OR(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((0.4429741424414908)&(rt0.c0))) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((0.3982075869092515)OR(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE) ORDER BY ((((0.4429741424414908)&(rt0.c0))) ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND (((rt0.c0)*(rt0.c1))))) ORDER BY (CASE WHEN '-1565931565' THEN rt0.c1 END IN ());
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND (((rt0.c0)*(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN '-1565931565' THEN rt0.c1 END IN ()));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND (((rt0.c0)*(rt0.c1))))) ORDER BY (CASE WHEN '-1565931565' THEN rt0.c1 END IN ());
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND (((rt0.c0)*(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN '-1565931565' THEN rt0.c1 END IN ()));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND (((rt0.c0)*(rt0.c1))))) ORDER BY (CASE WHEN '-1565931565' THEN rt0.c1 END IN ());
SELECT ALL * FROM rt0, vt0 WHERE (('ྃ#(E11)' IN ())) ORDER BY (((vt0.c0)+(rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ((('ྃ#(E11)' IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0)+(rt0.c2)) IN ()));
SELECT ALL * FROM rt0, vt0 WHERE (('ྃ#(E11)' IN ())) ORDER BY (((vt0.c0)+(rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ((('ྃ#(E11)' IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0)+(rt0.c2)) IN ()));
SELECT ALL * FROM rt0, vt0 WHERE (('ྃ#(E11)' IN ())) ORDER BY (((vt0.c0)+(rt0.c2)) IN ());
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CASE rt0.c2  WHEN vt0.c1 THEN rt0.c2 END IN ())) ORDER BY (((0X64854b46)) BETWEEN ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((CASE 0.4027129306459736  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c1 END))) DESC  NULLS FIRST, '0.8332810632909793';
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c2  WHEN vt0.c1 THEN rt0.c2 END IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((0x64854b46)) BETWEEN ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((CASE 0.4027129306459736  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c1 END))) DESC  NULLS FIRST, '0.8332810632909793');
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CASE rt0.c2  WHEN vt0.c1 THEN rt0.c2 END IN ())) ORDER BY (((0X64854b46)) BETWEEN ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((CASE 0.4027129306459736  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c1 END))) DESC  NULLS FIRST, '0.8332810632909793';
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c2  WHEN vt0.c1 THEN rt0.c2 END IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((0x64854b46)) BETWEEN ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((CASE 0.4027129306459736  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c1 END))) DESC  NULLS FIRST, '0.8332810632909793');
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CASE rt0.c2  WHEN vt0.c1 THEN rt0.c2 END IN ())) ORDER BY (((0X64854b46)) BETWEEN ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((CASE 0.4027129306459736  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c1 END))) DESC  NULLS FIRST, '0.8332810632909793';
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((((vt0.c1)AND('')))OR(vt0.c0))) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((((vt0.c1)AND('')))OR(vt0.c0))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((((vt0.c1)AND('')))OR(vt0.c0))) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((((vt0.c1)AND('')))OR(vt0.c0))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((((vt0.c1)AND('')))OR(vt0.c0))) AND ((vt0.c1 IN ()))));
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT ALL * FROM rt0, vt0 WHERE (LIKELIHOOD(DISTINCT json_remove(rt0.c0, NULL, vt0.c0, vt0.c0), 0.2496057271702622));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT json_remove(rt0.c0, NULL, vt0.c0, vt0.c0), 0.2496057271702622)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (LIKELIHOOD(DISTINCT json_remove(rt0.c0, NULL, vt0.c0, vt0.c0), 0.2496057271702622));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT json_remove(rt0.c0, NULL, vt0.c0, vt0.c0), 0.2496057271702622)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (LIKELIHOOD(DISTINCT json_remove(rt0.c0, NULL, vt0.c0, vt0.c0), 0.2496057271702622));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'') ORDER BY LOWER(DISTINCT (+ (rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0 ORDER BY LOWER(DISTINCT (+ (rt0.c2))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'') ORDER BY LOWER(DISTINCT (+ (rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0 ORDER BY LOWER(DISTINCT (+ (rt0.c2))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'') ORDER BY LOWER(DISTINCT (+ (rt0.c2))) ASC;
SELECT * FROM rt0, vt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))OR(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END)))AND(((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))OR(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END)))AND(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))OR(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END)))AND(((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))OR(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END)))AND(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))OR(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END)))AND(((rt0.c0) NOT NULL))));
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 END)<<(json_extract(rt0.c1, rt0.c1, rt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c0 END)<<(json_extract(rt0.c1, rt0.c1, rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 END)<<(json_extract(rt0.c1, rt0.c1, rt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c0 END)<<(json_extract(rt0.c1, rt0.c1, rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) BETWEEN (((rt0.c2) ISNULL)) AND (((('-1094042679')) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ORDER BY (rt0.c0 IN (rt0.c0, rt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) BETWEEN (((rt0.c2) ISNULL)) AND (((('-1094042679')) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 IN (rt0.c0, rt0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) BETWEEN (((rt0.c2) ISNULL)) AND (((('-1094042679')) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ORDER BY (rt0.c0 IN (rt0.c0, rt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) BETWEEN (((rt0.c2) ISNULL)) AND (((('-1094042679')) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 IN (rt0.c0, rt0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) BETWEEN (((rt0.c2) ISNULL)) AND (((('-1094042679')) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ORDER BY (rt0.c0 IN (rt0.c0, rt0.c2)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (0.9631941463028126);
SELECT SUM(count) FROM (SELECT ALL ((0.9631941463028126) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (0.9631941463028126);
SELECT SUM(count) FROM (SELECT ALL ((0.9631941463028126) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (0.9631941463028126);
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c2 AS NUMERIC)  WHEN rt0.c1 COLLATE NOCASE THEN (NOT (rt0.c0)) WHEN (rt0.c0 IN (rt0.c2)) THEN (~ (rt0.c0)) WHEN UPPER(DISTINCT rt0.c1) THEN ((rt0.c1) IS TRUE) ELSE 0.8603512504639971 END) ORDER BY ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c2 AS NUMERIC)  WHEN rt0.c1 COLLATE NOCASE THEN (NOT (rt0.c0)) WHEN (rt0.c0 IN (rt0.c2)) THEN (~ (rt0.c0)) WHEN UPPER(DISTINCT rt0.c1) THEN ((rt0.c1) IS TRUE) ELSE 0.8603512504639971 END) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))) NOTNULL));
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c2 AS NUMERIC)  WHEN rt0.c1 COLLATE NOCASE THEN (NOT (rt0.c0)) WHEN (rt0.c0 IN (rt0.c2)) THEN (~ (rt0.c0)) WHEN UPPER(DISTINCT rt0.c1) THEN ((rt0.c1) IS TRUE) ELSE 0.8603512504639971 END) ORDER BY ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c2 AS NUMERIC)  WHEN rt0.c1 COLLATE NOCASE THEN (NOT (rt0.c0)) WHEN (rt0.c0 IN (rt0.c2)) THEN (~ (rt0.c0)) WHEN UPPER(DISTINCT rt0.c1) THEN ((rt0.c1) IS TRUE) ELSE 0.8603512504639971 END) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))) NOTNULL));
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c2 AS NUMERIC)  WHEN rt0.c1 COLLATE NOCASE THEN (NOT (rt0.c0)) WHEN (rt0.c0 IN (rt0.c2)) THEN (~ (rt0.c0)) WHEN UPPER(DISTINCT rt0.c1) THEN ((rt0.c1) IS TRUE) ELSE 0.8603512504639971 END) ORDER BY ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))) NOTNULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (((('')) NOT BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND ((((vt0.c0)||(vt0.c0)))))) ORDER BY (~ (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((('')) NOT BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND ((((vt0.c0)||(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((('')) NOT BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND ((((vt0.c0)||(vt0.c0)))))) ORDER BY (~ (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((('')) NOT BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND ((((vt0.c0)||(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((('')) NOT BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND ((((vt0.c0)||(vt0.c0)))))) ORDER BY (~ (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)) DESC;
SELECT * FROM rt0, vt0 WHERE ((NOT ((rt0.c2 IN ())))) ORDER BY NULL  NULLS LAST, (((rt0.c1 IN ()))%(((rt0.c2)IS NOT(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL  NULLS LAST, (((rt0.c1 IN ()))%(((rt0.c2)IS NOT(rt0.c2))))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((NOT ((rt0.c2 IN ())))) ORDER BY NULL  NULLS LAST, (((rt0.c1 IN ()))%(((rt0.c2)IS NOT(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL  NULLS LAST, (((rt0.c1 IN ()))%(((rt0.c2)IS NOT(rt0.c2))))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((NOT ((rt0.c2 IN ())))) ORDER BY NULL  NULLS LAST, (((rt0.c1 IN ()))%(((rt0.c2)IS NOT(rt0.c2))))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c0)OR(rt0.c2)))AND(rt0.c2))) IS TRUE)) ORDER BY UPPER(((vt0.c1)&(vt0.c0))), ((((rt0.c0)IS NOT(rt0.c2)))-(CAST(vt0.c1 AS TEXT))) ASC  NULLS FIRST, (((rt0.c2, vt0.c0, rt0.c2)) BETWEEN (((+ (vt0.c0)), CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END, ((rt0.c1)%(vt0.c0)))) AND (((((vt0.c1, vt0.c1, rt0.c0))=((0xe12667, rt0.c1, rt0.c0))), ((rt0.c1)IS(vt0.c0)), ((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(rt0.c2)))AND(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY UPPER(((vt0.c1)&(vt0.c0))), ((((rt0.c0)IS NOT(rt0.c2)))-(CAST(vt0.c1 AS TEXT))) ASC  NULLS FIRST, (((rt0.c2, vt0.c0, rt0.c2)) BETWEEN (((+ (vt0.c0)), CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END, ((rt0.c1)%(vt0.c0)))) AND (((((vt0.c1, vt0.c1, rt0.c0))==((0Xe12667, rt0.c1, rt0.c0))), ((rt0.c1)IS(vt0.c0)), ((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c0)OR(rt0.c2)))AND(rt0.c2))) IS TRUE)) ORDER BY UPPER(((vt0.c1)&(vt0.c0))), ((((rt0.c0)IS NOT(rt0.c2)))-(CAST(vt0.c1 AS TEXT))) ASC  NULLS FIRST, (((rt0.c2, vt0.c0, rt0.c2)) BETWEEN (((+ (vt0.c0)), CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END, ((rt0.c1)%(vt0.c0)))) AND (((((vt0.c1, vt0.c1, rt0.c0))=((0xe12667, rt0.c1, rt0.c0))), ((rt0.c1)IS(vt0.c0)), ((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(rt0.c2)))AND(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY UPPER(((vt0.c1)&(vt0.c0))), ((((rt0.c0)IS NOT(rt0.c2)))-(CAST(vt0.c1 AS TEXT))) ASC  NULLS FIRST, (((rt0.c2, vt0.c0, rt0.c2)) BETWEEN (((+ (vt0.c0)), CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END, ((rt0.c1)%(vt0.c0)))) AND (((((vt0.c1, vt0.c1, rt0.c0))==((0Xe12667, rt0.c1, rt0.c0))), ((rt0.c1)IS(vt0.c0)), ((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c0)OR(rt0.c2)))AND(rt0.c2))) IS TRUE)) ORDER BY UPPER(((vt0.c1)&(vt0.c0))), ((((rt0.c0)IS NOT(rt0.c2)))-(CAST(vt0.c1 AS TEXT))) ASC  NULLS FIRST, (((rt0.c2, vt0.c0, rt0.c2)) BETWEEN (((+ (vt0.c0)), CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END, ((rt0.c1)%(vt0.c0)))) AND (((((vt0.c1, vt0.c1, rt0.c0))=((0xe12667, rt0.c1, rt0.c0))), ((rt0.c1)IS(vt0.c0)), ((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c1))))) DESC  NULLS FIRST;
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((((vt0.c0, rt0.c0, rt0.c0, vt0.c0, rt0.c2, x'', rt0.c0))>=((rt0.c2, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1)))))>((((rt0.c0)OR(rt0.c2))))) WHERE (CASE WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((vt0.c0, rt0.c0, rt0.c0, vt0.c0, rt0.c2, x'', rt0.c0))>=((rt0.c2, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1)))))>((((rt0.c0)OR(rt0.c2))))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((((vt0.c0, rt0.c0, rt0.c0, vt0.c0, rt0.c2, x'', rt0.c0))>=((rt0.c2, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1)))))>((((rt0.c0)OR(rt0.c2))))) WHERE (CASE WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((vt0.c0, rt0.c0, rt0.c0, vt0.c0, rt0.c2, x'', rt0.c0))>=((rt0.c2, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1)))))>((((rt0.c0)OR(rt0.c2))))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((((vt0.c0, rt0.c0, rt0.c0, vt0.c0, rt0.c2, x'', rt0.c0))>=((rt0.c2, rt0.c1, vt0.c1, rt0.c2, vt0.c0, rt0.c0, rt0.c1)))))>((((rt0.c0)OR(rt0.c2))))) WHERE (CASE WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c1 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((vt0.c1)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((rt0.c2)==(rt0.c2))))) WHERE ((((rt0.c1, rt0.c1, vt0.c0, rt0.c1, vt0.c1)) NOT BETWEEN ((CASE vt0.c1  WHEN vt0.c0 THEN x'0fe1' ELSE rt0.c1 END, (+ (vt0.c1)), vt0.c0 COLLATE NOCASE, ((rt0.c2)|(rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((NULL IN ()), ((NULL)<>(vt0.c0)), NULL COLLATE BINARY, CAST(vt0.c1 AS INTEGER), (~ (rt0.c2)))))) ORDER BY CAST(((vt0.c0)&(vt0.c1)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c1, vt0.c0, rt0.c1, vt0.c1)) NOT BETWEEN ((CASE vt0.c1  WHEN vt0.c0 THEN x'0fe1' ELSE rt0.c1 END, (+ (vt0.c1)), vt0.c0 COLLATE NOCASE, ((rt0.c2)|(rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((NULL IN ()), ((NULL)!=(vt0.c0)), NULL COLLATE BINARY, CAST(vt0.c1 AS INTEGER), (~ (rt0.c2)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((vt0.c1)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((rt0.c2)=(rt0.c2))))) ORDER BY CAST(((vt0.c0)&(vt0.c1)) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((vt0.c1)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((rt0.c2)==(rt0.c2))))) WHERE ((((rt0.c1, rt0.c1, vt0.c0, rt0.c1, vt0.c1)) NOT BETWEEN ((CASE vt0.c1  WHEN vt0.c0 THEN x'0fe1' ELSE rt0.c1 END, (+ (vt0.c1)), vt0.c0 COLLATE NOCASE, ((rt0.c2)|(rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((NULL IN ()), ((NULL)<>(vt0.c0)), NULL COLLATE BINARY, CAST(vt0.c1 AS INTEGER), (~ (rt0.c2)))))) ORDER BY CAST(((vt0.c0)&(vt0.c1)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c1, vt0.c0, rt0.c1, vt0.c1)) NOT BETWEEN ((CASE vt0.c1  WHEN vt0.c0 THEN x'0fe1' ELSE rt0.c1 END, (+ (vt0.c1)), vt0.c0 COLLATE NOCASE, ((rt0.c2)|(rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((NULL IN ()), ((NULL)!=(vt0.c0)), NULL COLLATE BINARY, CAST(vt0.c1 AS INTEGER), (~ (rt0.c2)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((vt0.c1)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((rt0.c2)=(rt0.c2))))) ORDER BY CAST(((vt0.c0)&(vt0.c1)) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((vt0.c1)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((rt0.c2)==(rt0.c2))))) WHERE ((((rt0.c1, rt0.c1, vt0.c0, rt0.c1, vt0.c1)) NOT BETWEEN ((CASE vt0.c1  WHEN vt0.c0 THEN x'0fe1' ELSE rt0.c1 END, (+ (vt0.c1)), vt0.c0 COLLATE NOCASE, ((rt0.c2)|(rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((NULL IN ()), ((NULL)<>(vt0.c0)), NULL COLLATE BINARY, CAST(vt0.c1 AS INTEGER), (~ (rt0.c2)))))) ORDER BY CAST(((vt0.c0)&(vt0.c1)) AS TEXT) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(vt0.c1 AS TEXT)) ORDER BY rt0.c2 ASC  NULLS LAST, ((CAST(rt0.c2 AS NUMERIC))LIKE((((rt0.c2))==((vt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2 ASC  NULLS LAST, ((CAST(rt0.c2 AS NUMERIC))LIKE((((rt0.c2))==((vt0.c1))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(vt0.c1 AS TEXT)) ORDER BY rt0.c2 ASC  NULLS LAST, ((CAST(rt0.c2 AS NUMERIC))LIKE((((rt0.c2))==((vt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2 ASC  NULLS LAST, ((CAST(rt0.c2 AS NUMERIC))LIKE((((rt0.c2))==((vt0.c1))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(vt0.c1 AS TEXT)) ORDER BY rt0.c2 ASC  NULLS LAST, ((CAST(rt0.c2 AS NUMERIC))LIKE((((rt0.c2))==((vt0.c1))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON 0.003987815006039175 WHERE (NULLIF(vt0.c1, ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(vt0.c1, ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON 0.003987815006039175);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON 0.003987815006039175 WHERE (NULLIF(vt0.c1, ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(vt0.c1, ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON 0.003987815006039175);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON 0.003987815006039175 WHERE (NULLIF(vt0.c1, ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))));
SELECT * FROM rt0 WHERE ((((((((((((rt0.c0, rt0.c1, rt0.c1))!=((rt0.c0, rt0.c1, rt0.c2))))OR(NULL)))AND((((rt0.c2))<((rt0.c0))))))OR(CASE rt0.c0  WHEN 5.15000311E8 THEN rt0.c0 ELSE rt0.c1 END)))AND((rt0.c0 IN (rt0.c2))))) ORDER BY ((rt0.c0 COLLATE RTRIM)LIKE('')), ((NULLIF(DISTINCT rt0.c0, rt0.c1))IS NOT((NOT (rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c0, rt0.c1, rt0.c1))!=((rt0.c0, rt0.c1, rt0.c2))))OR(NULL)))AND((((rt0.c2))<((rt0.c0))))))OR(CASE rt0.c0  WHEN 5.15000311E8 THEN rt0.c0 ELSE rt0.c1 END)))AND((rt0.c0 IN (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE RTRIM)LIKE('')), ((NULLIF(DISTINCT rt0.c0, rt0.c1))IS NOT((NOT (rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((((((((rt0.c0, rt0.c1, rt0.c1))!=((rt0.c0, rt0.c1, rt0.c2))))OR(NULL)))AND((((rt0.c2))<((rt0.c0))))))OR(CASE rt0.c0  WHEN 5.15000311E8 THEN rt0.c0 ELSE rt0.c1 END)))AND((rt0.c0 IN (rt0.c2))))) ORDER BY ((rt0.c0 COLLATE RTRIM)LIKE('')), ((NULLIF(DISTINCT rt0.c0, rt0.c1))IS NOT((NOT (rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c0, rt0.c1, rt0.c1))!=((rt0.c0, rt0.c1, rt0.c2))))OR(NULL)))AND((((rt0.c2))<((rt0.c0))))))OR(CASE rt0.c0  WHEN 5.15000311E8 THEN rt0.c0 ELSE rt0.c1 END)))AND((rt0.c0 IN (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE RTRIM)LIKE('')), ((NULLIF(DISTINCT rt0.c0, rt0.c1))IS NOT((NOT (rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((((((((rt0.c0, rt0.c1, rt0.c1))!=((rt0.c0, rt0.c1, rt0.c2))))OR(NULL)))AND((((rt0.c2))<((rt0.c0))))))OR(CASE rt0.c0  WHEN 5.15000311E8 THEN rt0.c0 ELSE rt0.c1 END)))AND((rt0.c0 IN (rt0.c2))))) ORDER BY ((rt0.c0 COLLATE RTRIM)LIKE('')), ((NULLIF(DISTINCT rt0.c0, rt0.c1))IS NOT((NOT (rt0.c2)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LENGTH((rt0.c0 IN (vt0.c0)))) ORDER BY CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END COLLATE NOCASE ASC, load_extension(rt0.c2 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LENGTH((rt0.c0 IN (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END COLLATE NOCASE ASC, load_extension(rt0.c2 COLLATE NOCASE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LENGTH((rt0.c0 IN (vt0.c0)))) ORDER BY CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END COLLATE NOCASE ASC, load_extension(rt0.c2 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LENGTH((rt0.c0 IN (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END COLLATE NOCASE ASC, load_extension(rt0.c2 COLLATE NOCASE) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1)||(rt0.c1)) IN (CAST(vt0.c0 AS TEXT), (~ (rt0.c1)), rt0.c1 COLLATE BINARY))) ORDER BY ((vt0.c1)<(rt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)||(rt0.c1)) IN (CAST(vt0.c0 AS TEXT), (~ (rt0.c1)), rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c1)<(rt0.c0)) COLLATE BINARY DESC);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1)||(rt0.c1)) IN (CAST(vt0.c0 AS TEXT), (~ (rt0.c1)), rt0.c1 COLLATE BINARY))) ORDER BY ((vt0.c1)<(rt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)||(rt0.c1)) IN (CAST(vt0.c0 AS TEXT), (~ (rt0.c1)), rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c1)<(rt0.c0)) COLLATE BINARY DESC);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1)||(rt0.c1)) IN (CAST(vt0.c0 AS TEXT), (~ (rt0.c1)), rt0.c1 COLLATE BINARY))) ORDER BY ((vt0.c1)<(rt0.c0)) COLLATE BINARY DESC;
SELECT ALL * FROM vt0 WHERE ((((((- (NULL)))AND(((vt0.c1) NOTNULL))))OR(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((- (NULL)))AND(((vt0.c1) NOTNULL))))OR(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((- (NULL)))AND(((vt0.c1) NOTNULL))))OR(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((- (NULL)))AND(((vt0.c1) NOTNULL))))OR(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((- (NULL)))AND(((vt0.c1) NOTNULL))))OR(vt0.c1)));
SELECT * FROM rt0 INNER JOIN vt0 ON (((rt0.c2)) BETWEEN ((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(vt0.c0)))) AND ((rt0.c0))) WHERE (vt0.c1) ORDER BY (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((rt0.c2)) BETWEEN ((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(vt0.c0)))) AND ((rt0.c0))) ORDER BY (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) DESC  NULLS LAST);
SELECT * FROM rt0 INNER JOIN vt0 ON (((rt0.c2)) BETWEEN ((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(vt0.c0)))) AND ((rt0.c0))) WHERE (vt0.c1) ORDER BY (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((rt0.c2)) BETWEEN ((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(vt0.c0)))) AND ((rt0.c0))) ORDER BY (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) DESC  NULLS LAST);
SELECT * FROM rt0 INNER JOIN vt0 ON (((rt0.c2)) BETWEEN ((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(vt0.c0)))) AND ((rt0.c0))) WHERE (vt0.c1) ORDER BY (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) IS TRUE)) ORDER BY vt0.c1 ASC, rt0.c1 DESC, CAST(UNLIKELY(rt0.c0) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c1 ASC, rt0.c1 DESC, CAST(UNLIKELY(rt0.c0) AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) IS TRUE)) ORDER BY vt0.c1 ASC, rt0.c1 DESC, CAST(UNLIKELY(rt0.c0) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c1 ASC, rt0.c1 DESC, CAST(UNLIKELY(rt0.c0) AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) IS TRUE)) ORDER BY vt0.c1 ASC, rt0.c1 DESC, CAST(UNLIKELY(rt0.c0) AS INTEGER) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON vt0.c0 WHERE ((((((vt0.c0))<=((rt0.c2)))) BETWEEN (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 END) AND (((vt0.c1) IS FALSE)))) ORDER BY ((((0.4462234454915197) IS FALSE)) BETWEEN (rt0.c0) AND ((((vt0.c0, rt0.c0, vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2, rt0.c2, vt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1, vt0.c1, rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((rt0.c2)))) BETWEEN (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 END) AND (((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON vt0.c0 ORDER BY ((((0.4462234454915197) IS FALSE)) BETWEEN (rt0.c0) AND ((((vt0.c0, rt0.c0, vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2, rt0.c2, vt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1, vt0.c1, rt0.c0))))) DESC);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON vt0.c0 WHERE ((((((vt0.c0))<=((rt0.c2)))) BETWEEN (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 END) AND (((vt0.c1) IS FALSE)))) ORDER BY ((((0.4462234454915197) IS FALSE)) BETWEEN (rt0.c0) AND ((((vt0.c0, rt0.c0, vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2, rt0.c2, vt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1, vt0.c1, rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((rt0.c2)))) BETWEEN (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 END) AND (((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON vt0.c0 ORDER BY ((((0.4462234454915197) IS FALSE)) BETWEEN (rt0.c0) AND ((((vt0.c0, rt0.c0, vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2, rt0.c2, vt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1, vt0.c1, rt0.c0))))) DESC);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON vt0.c0 WHERE ((((((vt0.c0))<=((rt0.c2)))) BETWEEN (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 END) AND (((vt0.c1) IS FALSE)))) ORDER BY ((((0.4462234454915197) IS FALSE)) BETWEEN (rt0.c0) AND ((((vt0.c0, rt0.c0, vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2, rt0.c2, vt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1, vt0.c1, rt0.c0))))) DESC;
SELECT * FROM vt0 WHERE ((((~ (NULL))) BETWEEN ((((vt0.c1))==((vt0.c0)))) AND (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)))<((NOT (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (NULL))) BETWEEN ((((vt0.c1))==((vt0.c0)))) AND (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)))<((NOT (vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((~ (NULL))) BETWEEN ((((vt0.c1))==((vt0.c0)))) AND (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)))<((NOT (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (NULL))) BETWEEN ((((vt0.c1))==((vt0.c0)))) AND (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)))<((NOT (vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((~ (NULL))) BETWEEN ((((vt0.c1))==((vt0.c0)))) AND (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)))<((NOT (vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ('2009359580') ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (('2009359580') IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT * FROM rt0 WHERE ('2009359580') ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (('2009359580') IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT * FROM rt0 WHERE ('2009359580') ORDER BY rt0.c0;
SELECT * FROM vt0 WHERE ((((+ (vt0.c0))) NOTNULL)) ORDER BY ABS(DISTINCT (((vt0.c0))<>((vt0.c1)))) ASC  NULLS LAST, ((vt0.c1) BETWEEN ((((('1866187658')OR(vt0.c1)))OR(vt0.c1))) AND (((vt0.c1) ISNULL))) ASC  NULLS FIRST, LOWER(vt0.c0) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ABS(DISTINCT (((vt0.c0))!=((vt0.c1)))) ASC  NULLS LAST, ((vt0.c1) BETWEEN ((((('1866187658')OR(vt0.c1)))OR(vt0.c1))) AND (((vt0.c1) ISNULL))) ASC  NULLS FIRST, LOWER(vt0.c0) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0))) NOTNULL)) ORDER BY ABS(DISTINCT (((vt0.c0))<>((vt0.c1)))) ASC  NULLS LAST, ((vt0.c1) BETWEEN ((((('1866187658')OR(vt0.c1)))OR(vt0.c1))) AND (((vt0.c1) ISNULL))) ASC  NULLS FIRST, LOWER(vt0.c0) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ABS(DISTINCT (((vt0.c0))!=((vt0.c1)))) ASC  NULLS LAST, ((vt0.c1) BETWEEN ((((('1866187658')OR(vt0.c1)))OR(vt0.c1))) AND (((vt0.c1) ISNULL))) ASC  NULLS FIRST, LOWER(vt0.c0) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0))) NOTNULL)) ORDER BY ABS(DISTINCT (((vt0.c0))<>((vt0.c1)))) ASC  NULLS LAST, ((vt0.c1) BETWEEN ((((('1866187658')OR(vt0.c1)))OR(vt0.c1))) AND (((vt0.c1) ISNULL))) ASC  NULLS FIRST, LOWER(vt0.c0) COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c0) IS FALSE) THEN QUOTE(rt0.c1) END) ORDER BY CASE rt0.c0  WHEN '' THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) IS FALSE) THEN QUOTE(rt0.c1) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE rt0.c0  WHEN '' THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c0 END COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c0) IS FALSE) THEN QUOTE(rt0.c1) END) ORDER BY CASE rt0.c0  WHEN '' THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) IS FALSE) THEN QUOTE(rt0.c1) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE rt0.c0  WHEN '' THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c0 END COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c0) IS FALSE) THEN QUOTE(rt0.c1) END) ORDER BY CASE rt0.c0  WHEN '' THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c1) IS TRUE) END WHERE (((rt0.c1)%(rt0.c1)) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)%(rt0.c1)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c1) IS TRUE) END);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c1) IS TRUE) END WHERE (((rt0.c1)%(rt0.c1)) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)%(rt0.c1)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c1) IS TRUE) END);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c1) IS TRUE) END WHERE (((rt0.c1)%(rt0.c1)) COLLATE BINARY COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c1)) BETWEEN ((((rt0.c2) IS TRUE))) AND ((vt0.c0 COLLATE BINARY)))) ORDER BY 'A샀i<9wDy';
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((((rt0.c2) IS TRUE))) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 'A샀i<9wDy');
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c1)) BETWEEN ((((rt0.c2) IS TRUE))) AND ((vt0.c0 COLLATE BINARY)))) ORDER BY 'A샀i<9wDy';
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((((rt0.c2) IS TRUE))) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 'A샀i<9wDy');
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c1)) BETWEEN ((((rt0.c2) IS TRUE))) AND ((vt0.c0 COLLATE BINARY)))) ORDER BY 'A샀i<9wDy';
SELECT * FROM vt0 NOT INDEXED WHERE (((((vt0.c0) BETWEEN (0.9246851783357996) AND (vt0.c0)))||((- (vt0.c0))))) ORDER BY (((((vt0.c1 IN ()))AND(CAST(vt0.c1 AS TEXT))))AND('vW]~^{4362815981055083493-8065574453907165791T1814:495T242T565:-1274382647491844918 1583T7757616597703340142:+|s')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (0.9246851783357996) AND (vt0.c0)))||((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1 IN ()))AND(CAST(vt0.c1 AS TEXT))))AND('vW]~^{4362815981055083493-8065574453907165791T1814:495T242T565:-1274382647491844918 1583T7757616597703340142:+|s')) ASC  NULLS LAST);
SELECT * FROM vt0 NOT INDEXED WHERE (((((vt0.c0) BETWEEN (0.9246851783357996) AND (vt0.c0)))||((- (vt0.c0))))) ORDER BY (((((vt0.c1 IN ()))AND(CAST(vt0.c1 AS TEXT))))AND('vW]~^{4362815981055083493-8065574453907165791T1814:495T242T565:-1274382647491844918 1583T7757616597703340142:+|s')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (0.9246851783357996) AND (vt0.c0)))||((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1 IN ()))AND(CAST(vt0.c1 AS TEXT))))AND('vW]~^{4362815981055083493-8065574453907165791T1814:495T242T565:-1274382647491844918 1583T7757616597703340142:+|s')) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((~ (vt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) NOTNULL)) ISNULL)) ORDER BY HEX(DISTINCT ((rt0.c0)!=(0.12117919620825124)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL)) ISNULL)) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 ORDER BY HEX(DISTINCT ((rt0.c0)!=(0.12117919620825124))));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) NOTNULL)) ISNULL)) ORDER BY HEX(DISTINCT ((rt0.c0)!=(0.12117919620825124)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL)) ISNULL)) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 ORDER BY HEX(DISTINCT ((rt0.c0)!=(0.12117919620825124))));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) NOTNULL)) ISNULL)) ORDER BY HEX(DISTINCT ((rt0.c0)!=(0.12117919620825124)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((CAST('-700837947' AS NUMERIC))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((rt0.c1) ISNULL)))) ORDER BY rt0.c2 DESC, ((((rt0.c1)>(rt0.c1))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST('-700837947' AS NUMERIC))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 DESC, ((((rt0.c1)>(rt0.c1))) NOT NULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((CAST('-700837947' AS NUMERIC))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((rt0.c1) ISNULL)))) ORDER BY rt0.c2 DESC, ((((rt0.c1)>(rt0.c1))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST('-700837947' AS NUMERIC))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 DESC, ((((rt0.c1)>(rt0.c1))) NOT NULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((CAST('-700837947' AS NUMERIC))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((rt0.c1) ISNULL)))) ORDER BY rt0.c2 DESC, ((((rt0.c1)>(rt0.c1))) NOT NULL) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c0) IS FALSE) THEN rt0.c1 WHEN (- (rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END ELSE ((rt0.c1) NOTNULL) END) ORDER BY (((rt0.c1)<(rt0.c1)) IN (((rt0.c0)||(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) IS FALSE) THEN rt0.c1 WHEN (- (rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END ELSE ((rt0.c1) NOTNULL) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)<(rt0.c1)) IN (((rt0.c0)||(rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c0) IS FALSE) THEN rt0.c1 WHEN (- (rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END ELSE ((rt0.c1) NOTNULL) END) ORDER BY (((rt0.c1)<(rt0.c1)) IN (((rt0.c0)||(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) IS FALSE) THEN rt0.c1 WHEN (- (rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END ELSE ((rt0.c1) NOTNULL) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)<(rt0.c1)) IN (((rt0.c0)||(rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c0) IS FALSE) THEN rt0.c1 WHEN (- (rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END ELSE ((rt0.c1) NOTNULL) END) ORDER BY (((rt0.c1)<(rt0.c1)) IN (((rt0.c0)||(rt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)-(rt0.c0))) BETWEEN ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) AND ((rt0.c2 IN ())))) ORDER BY (((vt0.c1 IN ())) NOT BETWEEN ((rt0.c0 IN ())) AND ((vt0.c0 IN ()))) ASC, ((((((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)))<>((NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(rt0.c0))) BETWEEN ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c1 IN ())) NOT BETWEEN ((rt0.c0 IN ())) AND ((vt0.c0 IN ()))) ASC, ((((((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)))!=((NOT (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)-(rt0.c0))) BETWEEN ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) AND ((rt0.c2 IN ())))) ORDER BY (((vt0.c1 IN ())) NOT BETWEEN ((rt0.c0 IN ())) AND ((vt0.c0 IN ()))) ASC, ((((((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)))<>((NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(rt0.c0))) BETWEEN ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c1 IN ())) NOT BETWEEN ((rt0.c0 IN ())) AND ((vt0.c0 IN ()))) ASC, ((((((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)))!=((NOT (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)-(rt0.c0))) BETWEEN ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) AND ((rt0.c2 IN ())))) ORDER BY (((vt0.c1 IN ())) NOT BETWEEN ((rt0.c0 IN ())) AND ((vt0.c0 IN ()))) ASC, ((((((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)))<>((NOT (rt0.c0))));
SELECT * FROM vt0 WHERE (((vt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1 IN ()) IN ()));
SELECT * FROM rt0, vt0 WHERE (((TRIM(rt0.c0))||((((rt0.c0))>((rt0.c2)))))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))) BETWEEN (vt0.c1) AND (x'a82b1c87'));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c0))||((((rt0.c0))>((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))) BETWEEN (vt0.c1) AND (x'a82b1c87')));
SELECT * FROM rt0, vt0 WHERE (((TRIM(rt0.c0))||((((rt0.c0))>((rt0.c2)))))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))) BETWEEN (vt0.c1) AND (x'a82b1c87'));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c0))||((((rt0.c0))>((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))) BETWEEN (vt0.c1) AND (x'a82b1c87')));
SELECT * FROM rt0, vt0 WHERE (((TRIM(rt0.c0))||((((rt0.c0))>((rt0.c2)))))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))) BETWEEN (vt0.c1) AND (x'a82b1c87'));
SELECT * FROM rt0, vt0 WHERE ((((NOT (vt0.c1)))|(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1)))|(NULL))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((NOT (vt0.c1)))|(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1)))|(NULL))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((NOT (vt0.c1)))|(NULL)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((vt0.c0)AND(rt0.c0)))AND(vt0.c1)))AND(CAST(rt0.c2 AS BLOB))))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(rt0.c0)))AND(vt0.c1)))AND(CAST(rt0.c2 AS BLOB))))OR(rt0.c0))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((vt0.c0)AND(rt0.c0)))AND(vt0.c1)))AND(CAST(rt0.c2 AS BLOB))))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(rt0.c0)))AND(vt0.c1)))AND(CAST(rt0.c2 AS BLOB))))OR(rt0.c0))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((vt0.c0)AND(rt0.c0)))AND(vt0.c1)))AND(CAST(rt0.c2 AS BLOB))))OR(rt0.c0)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1) IS TRUE) IN ())) ORDER BY (((vt0.c0) NOTNULL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0) NOTNULL) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1) IS TRUE) IN ())) ORDER BY (((vt0.c0) NOTNULL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0) NOTNULL) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1) IS TRUE) IN ())) ORDER BY (((vt0.c0) NOTNULL) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c1) IS TRUE))-(((vt0.c1) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) IS TRUE))-(((vt0.c1) NOT NULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c1) IS TRUE))-(((vt0.c1) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) IS TRUE))-(((vt0.c1) NOT NULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c1) IS TRUE))-(((vt0.c1) NOT NULL))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))AND((((((((('0.40726522646126917')OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))))OR(((rt0.c0) ISNULL))))AND((- (rt0.c1)))))AND((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))AND((((((((('0.40726522646126917')OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))))OR(((rt0.c0) ISNULL))))AND((- (rt0.c1)))))AND((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))AND((((((((('0.40726522646126917')OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))))OR(((rt0.c0) ISNULL))))AND((- (rt0.c1)))))AND((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))AND((((((((('0.40726522646126917')OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))))OR(((rt0.c0) ISNULL))))AND((- (rt0.c1)))))AND((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))AND((((((((('0.40726522646126917')OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))))OR(((rt0.c0) ISNULL))))AND((- (rt0.c1)))))AND((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c1))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON CASE WHEN (x'' IN (vt0.c0)) THEN rt0.c2 COLLATE NOCASE ELSE CAST('-1507662927' AS BLOB) END WHERE (rt0.c1) ORDER BY ((rt0.c0 COLLATE BINARY) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CASE WHEN (x'' IN (vt0.c0)) THEN rt0.c2 COLLATE NOCASE ELSE CAST('-1507662927' AS BLOB) END ORDER BY ((rt0.c0 COLLATE BINARY) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON CASE WHEN (x'' IN (vt0.c0)) THEN rt0.c2 COLLATE NOCASE ELSE CAST('-1507662927' AS BLOB) END WHERE (rt0.c1) ORDER BY ((rt0.c0 COLLATE BINARY) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CASE WHEN (x'' IN (vt0.c0)) THEN rt0.c2 COLLATE NOCASE ELSE CAST('-1507662927' AS BLOB) END ORDER BY ((rt0.c0 COLLATE BINARY) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON CASE WHEN (x'' IN (vt0.c0)) THEN rt0.c2 COLLATE NOCASE ELSE CAST('-1507662927' AS BLOB) END WHERE (rt0.c1) ORDER BY ((rt0.c0 COLLATE BINARY) ISNULL)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)GLOB(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0)<<(((rt0.c2) BETWEEN (0.3143977686598266) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<<(((rt0.c2) BETWEEN (0.3143977686598266) AND (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0)<<(((rt0.c2) BETWEEN (0.3143977686598266) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<<(((rt0.c2) BETWEEN (0.3143977686598266) AND (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0)<<(((rt0.c2) BETWEEN (0.3143977686598266) AND (rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c0 COLLATE BINARY)AND(rt0.c2 COLLATE NOCASE)))AND((- (rt0.c2)))))OR(rt0.c2)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0 COLLATE BINARY)AND(rt0.c2 COLLATE NOCASE)))AND((- (rt0.c2)))))OR(rt0.c2)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c0 COLLATE BINARY)AND(rt0.c2 COLLATE NOCASE)))AND((- (rt0.c2)))))OR(rt0.c2)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0 COLLATE BINARY)AND(rt0.c2 COLLATE NOCASE)))AND((- (rt0.c2)))))OR(rt0.c2)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c0 COLLATE BINARY)AND(rt0.c2 COLLATE NOCASE)))AND((- (rt0.c2)))))OR(rt0.c2)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0)) BETWEEN ((rt0.c2)) AND (('-966867856')))) BETWEEN (((vt0.c1) NOT NULL)) AND ((x'f0c5' IN ()))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((rt0.c2)) AND (('-966867856')))) BETWEEN (((vt0.c1) NOT NULL)) AND ((x'f0c5' IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0)) BETWEEN ((rt0.c2)) AND (('-966867856')))) BETWEEN (((vt0.c1) NOT NULL)) AND ((x'f0c5' IN ()))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((rt0.c2)) AND (('-966867856')))) BETWEEN (((vt0.c1) NOT NULL)) AND ((x'f0c5' IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0)) BETWEEN ((rt0.c2)) AND (('-966867856')))) BETWEEN (((vt0.c1) NOT NULL)) AND ((x'f0c5' IN ()))));
SELECT ALL * FROM rt0 WHERE (((0.5718272074597848)IS(((rt0.c1)|(rt0.c0))))) ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (NULL)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((0.5718272074597848)IS(((rt0.c1)|(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (NULL)) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (((0.5718272074597848)IS(((rt0.c1)|(rt0.c0))))) ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (NULL)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((0.5718272074597848)IS(((rt0.c1)|(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (NULL)) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (((0.5718272074597848)IS(((rt0.c1)|(rt0.c0))))) ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (NULL)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((NULL) NOT NULL)  WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (NULL) AND (-20024183)) ELSE ((vt0.c1)AND(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((NULL) NOT NULL)  WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (NULL) AND (-20024183)) ELSE ((vt0.c1)AND(vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((NULL) NOT NULL)  WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (NULL) AND (-20024183)) ELSE ((vt0.c1)AND(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((NULL) NOT NULL)  WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (NULL) AND (-20024183)) ELSE ((vt0.c1)AND(vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((NULL) NOT NULL)  WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (NULL) AND (-20024183)) ELSE ((vt0.c1)AND(vt0.c1)) END);
SELECT * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1) IS FALSE))) AND ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))))) ORDER BY (((+ (vt0.c1)))*(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC, CAST((((vt0.c1))=((vt0.c0))) AS BLOB);
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c1) IS FALSE))) AND ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c1)))*(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC, CAST((((vt0.c1))==((vt0.c0))) AS BLOB));
SELECT * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1) IS FALSE))) AND ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))))) ORDER BY (((+ (vt0.c1)))*(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC, CAST((((vt0.c1))=((vt0.c0))) AS BLOB);
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c1) IS FALSE))) AND ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c1)))*(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC, CAST((((vt0.c1))==((vt0.c0))) AS BLOB));
SELECT * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1) IS FALSE))) AND ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))))) ORDER BY (((+ (vt0.c1)))*(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC, CAST((((vt0.c1))=((vt0.c0))) AS BLOB);
SELECT COUNT(*) FROM vt0, rt0 WHERE (COALESCE(DISTINCT (~ ('Edܯ暨')), ((NULL) NOTNULL))) ORDER BY rt0.c1 DESC  NULLS LAST, (- (rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (~ ('Edܯ暨')), ((NULL) NOTNULL))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1 DESC  NULLS LAST, (- (rt0.c2))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (COALESCE(DISTINCT (~ ('Edܯ暨')), ((NULL) NOTNULL))) ORDER BY rt0.c1 DESC  NULLS LAST, (- (rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (~ ('Edܯ暨')), ((NULL) NOTNULL))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1 DESC  NULLS LAST, (- (rt0.c2))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (COALESCE(DISTINCT (~ ('Edܯ暨')), ((NULL) NOTNULL))) ORDER BY rt0.c1 DESC  NULLS LAST, (- (rt0.c2))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NULL)) BETWEEN ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))) AND ((rt0.c0 COLLATE RTRIM)))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))/((rt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))) AND ((rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))/((rt0.c0 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NULL)) BETWEEN ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))) AND ((rt0.c0 COLLATE RTRIM)))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))/((rt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))) AND ((rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))/((rt0.c0 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NULL)) BETWEEN ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))) AND ((rt0.c0 COLLATE RTRIM)))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))/((rt0.c0 IN ())))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0 IN (vt0.c0)))+(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY x'' DESC, (~ (((rt0.c2) IS FALSE)))  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))|(('1975406320' IN (rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))+(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY x'' DESC, (~ (((rt0.c2) IS FALSE)))  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))|(('1975406320' IN (rt0.c1)))));
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0 IN (vt0.c0)))+(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY x'' DESC, (~ (((rt0.c2) IS FALSE)))  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))|(('1975406320' IN (rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))+(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY x'' DESC, (~ (((rt0.c2) IS FALSE)))  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))|(('1975406320' IN (rt0.c1)))));
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0 IN (vt0.c0)))+(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY x'' DESC, (~ (((rt0.c2) IS FALSE)))  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))|(('1975406320' IN (rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'8498') BETWEEN ((+ (rt0.c2))) AND (IFNULL(DISTINCT rt0.c2, rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((x'8498') BETWEEN ((+ (rt0.c2))) AND (IFNULL(DISTINCT rt0.c2, rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'8498') BETWEEN ((+ (rt0.c2))) AND (IFNULL(DISTINCT rt0.c2, rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((x'8498') BETWEEN ((+ (rt0.c2))) AND (IFNULL(DISTINCT rt0.c2, rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'8498') BETWEEN ((+ (rt0.c2))) AND (IFNULL(DISTINCT rt0.c2, rt0.c2))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c1) ORDER BY CAST(((rt0.c2)IS(rt0.c2)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c2)IS(rt0.c2)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c1) ORDER BY CAST(((rt0.c2)IS(rt0.c2)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c2)IS(rt0.c2)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c1) ORDER BY CAST(((rt0.c2)IS(rt0.c2)) AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST(((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)) AS REAL) WHERE ((((((((((((((rt0.c0 IN ()))OR(((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))))AND(rt0.c1)))AND((rt0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))))OR(((rt0.c0) IS FALSE))))OR((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((rt0.c0 IN ()))OR(((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))))AND(rt0.c1)))AND((rt0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))))OR(((rt0.c0) IS FALSE))))OR((- (rt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST(((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST(((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)) AS REAL) WHERE ((((((((((((((rt0.c0 IN ()))OR(((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))))AND(rt0.c1)))AND((rt0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))))OR(((rt0.c0) IS FALSE))))OR((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((rt0.c0 IN ()))OR(((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))))AND(rt0.c1)))AND((rt0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))))OR(((rt0.c0) IS FALSE))))OR((- (rt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST(((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST(((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)) AS REAL) WHERE ((((((((((((((rt0.c0 IN ()))OR(((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))))AND(rt0.c1)))AND((rt0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))))OR(((rt0.c0) IS FALSE))))OR((- (rt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c0 AS NUMERIC))<((((vt0.c0))>((rt0.c0)))))) ORDER BY (((CAST(rt0.c1 AS TEXT)))>((CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC))<((((vt0.c0))>((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((CAST(rt0.c1 AS TEXT)))>((CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c0 AS NUMERIC))<((((vt0.c0))>((rt0.c0)))))) ORDER BY (((CAST(rt0.c1 AS TEXT)))>((CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC))<((((vt0.c0))>((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((CAST(rt0.c1 AS TEXT)))>((CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c0 AS NUMERIC))<((((vt0.c0))>((rt0.c0)))))) ORDER BY (((CAST(rt0.c1 AS TEXT)))>((CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (((vt0.c1))>=((vt0.c0)))  WHEN ((vt0.c0)<=(vt0.c0)) THEN NULL ELSE CAST(vt0.c1 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c1))>=((vt0.c0)))  WHEN ((vt0.c0)<=(vt0.c0)) THEN NULL ELSE CAST(vt0.c1 AS BLOB) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (((vt0.c1))>=((vt0.c0)))  WHEN ((vt0.c0)<=(vt0.c0)) THEN NULL ELSE CAST(vt0.c1 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c1))>=((vt0.c0)))  WHEN ((vt0.c0)<=(vt0.c0)) THEN NULL ELSE CAST(vt0.c1 AS BLOB) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (((vt0.c1))>=((vt0.c0)))  WHEN ((vt0.c0)<=(vt0.c0)) THEN NULL ELSE CAST(vt0.c1 AS BLOB) END);
SELECT * FROM vt0 CROSS JOIN rt0 ON LIKELY((+ (vt0.c1))) WHERE (((((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)))>(vt0.c1))) ORDER BY ((rt0.c2)=(0.40726522646126917)) DESC  NULLS FIRST, ((((((((((vt0.c0)AND(vt0.c1)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))OR(CAST(vt0.c0 AS INTEGER))))OR(((rt0.c1) IS FALSE))))OR(((vt0.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)))>(vt0.c1))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON LIKELY((+ (vt0.c1))) ORDER BY ((rt0.c2)==(0.40726522646126917)) DESC  NULLS FIRST, ((((((((((vt0.c0)AND(vt0.c1)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))OR(CAST(vt0.c0 AS INTEGER))))OR(((rt0.c1) IS FALSE))))OR(((vt0.c0) ISNULL)))  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN rt0 ON LIKELY((+ (vt0.c1))) WHERE (((((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)))>(vt0.c1))) ORDER BY ((rt0.c2)=(0.40726522646126917)) DESC  NULLS FIRST, ((((((((((vt0.c0)AND(vt0.c1)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))OR(CAST(vt0.c0 AS INTEGER))))OR(((rt0.c1) IS FALSE))))OR(((vt0.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)))>(vt0.c1))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON LIKELY((+ (vt0.c1))) ORDER BY ((rt0.c2)==(0.40726522646126917)) DESC  NULLS FIRST, ((((((((((vt0.c0)AND(vt0.c1)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))OR(CAST(vt0.c0 AS INTEGER))))OR(((rt0.c1) IS FALSE))))OR(((vt0.c0) ISNULL)))  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN rt0 ON LIKELY((+ (vt0.c1))) WHERE (((((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)))>(vt0.c1))) ORDER BY ((rt0.c2)=(0.40726522646126917)) DESC  NULLS FIRST, ((((((((((vt0.c0)AND(vt0.c1)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))OR(CAST(vt0.c0 AS INTEGER))))OR(((rt0.c1) IS FALSE))))OR(((vt0.c0) ISNULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE vt0.c0  WHEN ((rt0.c2) IS FALSE) THEN '!ຑG{' ELSE (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN ((rt0.c2) IS FALSE) THEN '!ຑG{' ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE vt0.c0  WHEN ((rt0.c2) IS FALSE) THEN '!ຑG{' ELSE (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN ((rt0.c2) IS FALSE) THEN '!ຑG{' ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE vt0.c0  WHEN ((rt0.c2) IS FALSE) THEN '!ຑG{' ELSE (rt0.c2 IN ()) END);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) BETWEEN (((rt0.c0)IS NOT(vt0.c1))) AND ((NOT (vt0.c1))))) ORDER BY ((((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))AND(CAST(rt0.c1 AS REAL))))OR(((vt0.c0)<<(vt0.c1)))) DESC  NULLS FIRST, vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(vt0.c0))) BETWEEN (((rt0.c0)IS NOT(vt0.c1))) AND ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))AND(CAST(rt0.c1 AS REAL))))OR(((vt0.c0)<<(vt0.c1)))) DESC  NULLS FIRST, vt0.c1 DESC);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) BETWEEN (((rt0.c0)IS NOT(vt0.c1))) AND ((NOT (vt0.c1))))) ORDER BY ((((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))AND(CAST(rt0.c1 AS REAL))))OR(((vt0.c0)<<(vt0.c1)))) DESC  NULLS FIRST, vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(vt0.c0))) BETWEEN (((rt0.c0)IS NOT(vt0.c1))) AND ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))AND(CAST(rt0.c1 AS REAL))))OR(((vt0.c0)<<(vt0.c1)))) DESC  NULLS FIRST, vt0.c1 DESC);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) BETWEEN (((rt0.c0)IS NOT(vt0.c1))) AND ((NOT (vt0.c1))))) ORDER BY ((((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))AND(CAST(rt0.c1 AS REAL))))OR(((vt0.c0)<<(vt0.c1)))) DESC  NULLS FIRST, vt0.c1 DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN ((((((((NULL)AND(rt0.c1)))OR('')))AND(rt0.c0)))OR(vt0.c0)) WHEN (- (rt0.c1)) THEN rt0.c2 COLLATE NOCASE WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) WHEN CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END THEN 0.08478352087496865 WHEN ((('ⷶT', rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((vt0.c0, rt0.c2, NULL))) THEN ((rt0.c1) ISNULL) ELSE NULLIF(vt0.c0, vt0.c1) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN ((((((((NULL)AND(rt0.c1)))OR('')))AND(rt0.c0)))OR(vt0.c0)) WHEN (- (rt0.c1)) THEN rt0.c2 COLLATE NOCASE WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) WHEN CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END THEN 0.08478352087496865 WHEN ((('ⷶT', rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((vt0.c0, rt0.c2, NULL))) THEN ((rt0.c1) ISNULL) ELSE NULLIF(vt0.c0, vt0.c1) END DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN ((((((((NULL)AND(rt0.c1)))OR('')))AND(rt0.c0)))OR(vt0.c0)) WHEN (- (rt0.c1)) THEN rt0.c2 COLLATE NOCASE WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) WHEN CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END THEN 0.08478352087496865 WHEN ((('ⷶT', rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((vt0.c0, rt0.c2, NULL))) THEN ((rt0.c1) ISNULL) ELSE NULLIF(vt0.c0, vt0.c1) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN ((((((((NULL)AND(rt0.c1)))OR('')))AND(rt0.c0)))OR(vt0.c0)) WHEN (- (rt0.c1)) THEN rt0.c2 COLLATE NOCASE WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) WHEN CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END THEN 0.08478352087496865 WHEN ((('ⷶT', rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((vt0.c0, rt0.c2, NULL))) THEN ((rt0.c1) ISNULL) ELSE NULLIF(vt0.c0, vt0.c1) END DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN ((((((((NULL)AND(rt0.c1)))OR('')))AND(rt0.c0)))OR(vt0.c0)) WHEN (- (rt0.c1)) THEN rt0.c2 COLLATE NOCASE WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) WHEN CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END THEN 0.08478352087496865 WHEN ((('ⷶT', rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((vt0.c0, rt0.c2, NULL))) THEN ((rt0.c1) ISNULL) ELSE NULLIF(vt0.c0, vt0.c1) END DESC;
SELECT * FROM rt0, vt0 WHERE ((((((NOT (vt0.c1)))OR(x'')))AND((rt0.c1 IN (rt0.c0))))) ORDER BY (((rt0.c2 IN ())) BETWEEN (((rt0.c0)<>(rt0.c0))) AND (vt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c1)))OR(x'')))AND((rt0.c1 IN (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2 IN ())) BETWEEN (((rt0.c0)!=(rt0.c0))) AND (vt0.c1)) DESC);
SELECT * FROM rt0, vt0 WHERE ((((((NOT (vt0.c1)))OR(x'')))AND((rt0.c1 IN (rt0.c0))))) ORDER BY (((rt0.c2 IN ())) BETWEEN (((rt0.c0)<>(rt0.c0))) AND (vt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c1)))OR(x'')))AND((rt0.c1 IN (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2 IN ())) BETWEEN (((rt0.c0)!=(rt0.c0))) AND (vt0.c1)) DESC);
SELECT * FROM rt0, vt0 WHERE ((((((NOT (vt0.c1)))OR(x'')))AND((rt0.c1 IN (rt0.c0))))) ORDER BY (((rt0.c2 IN ())) BETWEEN (((rt0.c0)<>(rt0.c0))) AND (vt0.c1)) DESC;
SELECT ALL * FROM rt0, vt0 NOT INDEXED WHERE (((CAST(rt0.c1 AS BLOB))%(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS BLOB))%(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 NOT INDEXED WHERE (((CAST(rt0.c1 AS BLOB))%(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS BLOB))%(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 NOT INDEXED WHERE (((CAST(rt0.c1 AS BLOB))%(((rt0.c2) ISNULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS BLOB));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0) NOTNULL)))>=((((rt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOTNULL)))>=((((rt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0) NOTNULL)))>=((((rt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOTNULL)))>=((((rt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0) NOTNULL)))>=((((rt0.c0) NOT NULL)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) COLLATE BINARY);
SELECT * FROM rt0 WHERE ((((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(''))))==((rt0.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(''))))=((rt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(''))))==((rt0.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(''))))=((rt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(''))))==((rt0.c1 COLLATE NOCASE))));
SELECT ALL * FROM rt0 WHERE (UPPER(CAST(x'' AS TEXT))) ORDER BY ((((x'a37a')OR(highlight('909979620', rt0.c0, rt0.c1, rt0.c2))))OR((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2)))))  NULLS LAST, ((NOT (rt0.c1)) IN (((rt0.c2) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(CAST(x'' AS TEXT))) IS TRUE)  as count FROM rt0 ORDER BY ((((x'a37a')OR(highlight('909979620', rt0.c0, rt0.c1, rt0.c2))))OR((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2)))))  NULLS LAST, ((NOT (rt0.c1)) IN (((rt0.c2) IS TRUE))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (UPPER(CAST(x'' AS TEXT))) ORDER BY ((((x'a37a')OR(highlight('909979620', rt0.c0, rt0.c1, rt0.c2))))OR((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2)))))  NULLS LAST, ((NOT (rt0.c1)) IN (((rt0.c2) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(CAST(x'' AS TEXT))) IS TRUE)  as count FROM rt0 ORDER BY ((((x'a37a')OR(highlight('909979620', rt0.c0, rt0.c1, rt0.c2))))OR((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2)))))  NULLS LAST, ((NOT (rt0.c1)) IN (((rt0.c2) IS TRUE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS TEXT)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS TEXT)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT)) ISNULL));
SELECT * FROM vt0 WHERE (((json_type(vt0.c1))+(((vt0.c0)<(vt0.c1))))) ORDER BY CAST(vt0.c1 COLLATE BINARY AS BLOB);
SELECT SUM(count) FROM (SELECT ((((json_type(vt0.c1))+(((vt0.c0)<(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 COLLATE BINARY AS BLOB));
SELECT * FROM vt0 WHERE (((json_type(vt0.c1))+(((vt0.c0)<(vt0.c1))))) ORDER BY CAST(vt0.c1 COLLATE BINARY AS BLOB);
SELECT SUM(count) FROM (SELECT ((((json_type(vt0.c1))+(((vt0.c0)<(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 COLLATE BINARY AS BLOB));
SELECT * FROM vt0 WHERE (((json_type(vt0.c1))+(((vt0.c0)<(vt0.c1))))) ORDER BY CAST(vt0.c1 COLLATE BINARY AS BLOB);
SELECT COUNT(*) FROM vt0 WHERE (((+ (vt0.c0)) IN ())) ORDER BY (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>=((CASE vt0.c0  WHEN '-0.0' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>=((CASE vt0.c0  WHEN '-0.0' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))));
SELECT COUNT(*) FROM vt0 WHERE (((+ (vt0.c0)) IN ())) ORDER BY (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>=((CASE vt0.c0  WHEN '-0.0' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>=((CASE vt0.c0  WHEN '-0.0' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))));
SELECT COUNT(*) FROM vt0 WHERE (((+ (vt0.c0)) IN ())) ORDER BY (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>=((CASE vt0.c0  WHEN '-0.0' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c0);
SELECT * FROM vt0, rt0 WHERE ((((((('1259625235')OR(rt0.c2)))OR('')))AND((+ (rt0.c1))))) ORDER BY CAST(((NULL)AND(rt0.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((((('1259625235')OR(rt0.c2)))OR('')))AND((+ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((NULL)AND(rt0.c1)) AS NUMERIC));
SELECT * FROM vt0, rt0 WHERE ((((((('1259625235')OR(rt0.c2)))OR('')))AND((+ (rt0.c1))))) ORDER BY CAST(((NULL)AND(rt0.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((((('1259625235')OR(rt0.c2)))OR('')))AND((+ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((NULL)AND(rt0.c1)) AS NUMERIC));
SELECT * FROM vt0, rt0 WHERE ((((((('1259625235')OR(rt0.c2)))OR('')))AND((+ (rt0.c1))))) ORDER BY CAST(((NULL)AND(rt0.c1)) AS NUMERIC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c1 END IN ())) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 END) BETWEEN ((- (rt0.c2))) AND ('2142490343')), rt0.c0 COLLATE NOCASE ASC  NULLS FIRST, CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c0 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 END) BETWEEN ((- (rt0.c2))) AND ('2142490343')), rt0.c0 COLLATE NOCASE ASC  NULLS FIRST, CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)) AS BLOB) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c1 END IN ())) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 END) BETWEEN ((- (rt0.c2))) AND ('2142490343')), rt0.c0 COLLATE NOCASE ASC  NULLS FIRST, CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c0 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 END) BETWEEN ((- (rt0.c2))) AND ('2142490343')), rt0.c0 COLLATE NOCASE ASC  NULLS FIRST, CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)) AS BLOB) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c1 END IN ())) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 END) BETWEEN ((- (rt0.c2))) AND ('2142490343')), rt0.c0 COLLATE NOCASE ASC  NULLS FIRST, CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)) AS BLOB) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ((('|8') BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ((('|8') BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ((('|8') BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ((('|8') BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ((('|8') BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (((vt0.c1) NOT NULL)) AND (((vt0.c0)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE) BETWEEN (((vt0.c1) NOT NULL)) AND (((vt0.c0)<=(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (((vt0.c1) NOT NULL)) AND (((vt0.c0)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE) BETWEEN (((vt0.c1) NOT NULL)) AND (((vt0.c0)<=(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (((vt0.c1) NOT NULL)) AND (((vt0.c0)<=(rt0.c0)))));
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOTNULL))OR((('-854784838')/(vt0.c1)))))AND(vt0.c1 COLLATE BINARY))) ORDER BY 0.40179598505870606  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOTNULL))OR((('-854784838')/(vt0.c1)))))AND(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY 0.40179598505870606  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOTNULL))OR((('-854784838')/(vt0.c1)))))AND(vt0.c1 COLLATE BINARY))) ORDER BY 0.40179598505870606  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOTNULL))OR((('-854784838')/(vt0.c1)))))AND(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY 0.40179598505870606  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOTNULL))OR((('-854784838')/(vt0.c1)))))AND(vt0.c1 COLLATE BINARY))) ORDER BY 0.40179598505870606  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE ((((- (x''))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((- (x''))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((- (x''))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((- (x''))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((- (x''))) IS FALSE));
SELECT * FROM rt0 WHERE (CAST(CASE WHEN 9.0997962E8 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END AS TEXT)) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN 9.0997962E8 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY x''  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(CASE WHEN 9.0997962E8 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END AS TEXT)) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN 9.0997962E8 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY x''  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(CASE WHEN 9.0997962E8 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END AS TEXT)) ORDER BY x''  NULLS FIRST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))|((('-848159292') NOT BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE (((((0.16187023333670336) IS TRUE)) NOT NULL)) ORDER BY ((((((((((vt0.c0) IS FALSE))OR(rt0.c1)))OR(NULLIF(DISTINCT rt0.c0, rt0.c1))))AND(((rt0.c1)/(rt0.c0)))))OR(((vt0.c1)>(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.16187023333670336) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))|((('-848159292') NOT BETWEEN (rt0.c1) AND (rt0.c2)))) ORDER BY ((((((((((vt0.c0) IS FALSE))OR(rt0.c1)))OR(NULLIF(DISTINCT rt0.c0, rt0.c1))))AND(((rt0.c1)/(rt0.c0)))))OR(((vt0.c1)>(NULL)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))|((('-848159292') NOT BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE (((((0.16187023333670336) IS TRUE)) NOT NULL)) ORDER BY ((((((((((vt0.c0) IS FALSE))OR(rt0.c1)))OR(NULLIF(DISTINCT rt0.c0, rt0.c1))))AND(((rt0.c1)/(rt0.c0)))))OR(((vt0.c1)>(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.16187023333670336) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))|((('-848159292') NOT BETWEEN (rt0.c1) AND (rt0.c2)))) ORDER BY ((((((((((vt0.c0) IS FALSE))OR(rt0.c1)))OR(NULLIF(DISTINCT rt0.c0, rt0.c1))))AND(((rt0.c1)/(rt0.c0)))))OR(((vt0.c1)>(NULL)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))|((('-848159292') NOT BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE (((((0.16187023333670336) IS TRUE)) NOT NULL)) ORDER BY ((((((((((vt0.c0) IS FALSE))OR(rt0.c1)))OR(NULLIF(DISTINCT rt0.c0, rt0.c1))))AND(((rt0.c1)/(rt0.c0)))))OR(((vt0.c1)>(NULL))));
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY)<>(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY CASE WHEN ((rt0.c2)GLOB(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))) ELSE x'' END, ('461039078' IN ())  NULLS LAST, CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)!=(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN ((rt0.c2)GLOB(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))) ELSE x'' END, ('461039078' IN ())  NULLS LAST, CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END COLLATE BINARY);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY)<>(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY CASE WHEN ((rt0.c2)GLOB(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))) ELSE x'' END, ('461039078' IN ())  NULLS LAST, CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)!=(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN ((rt0.c2)GLOB(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))) ELSE x'' END, ('461039078' IN ())  NULLS LAST, CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END COLLATE BINARY);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY)<>(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY CASE WHEN ((rt0.c2)GLOB(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))) ELSE x'' END, ('461039078' IN ())  NULLS LAST, CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END COLLATE BINARY;
SELECT ALL * FROM rt0 WHERE ((~ ((rt0.c2 IN ())))) ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT), ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT), ''  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((~ ((rt0.c2 IN ())))) ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT), ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT), ''  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((~ ((rt0.c2 IN ())))) ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT), ''  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((((((((0.2897000323582041)OR(vt0.c0)))OR(0.6043373834690333)))AND(vt0.c0)))OR(vt0.c1)))!=((vt0.c0 IN ())))) ORDER BY x'' DESC  NULLS LAST, ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(((((((((vt0.c0)AND(1943681259)))AND(x'')))AND(x'')))OR(x'')))))OR('k￿_bUX'));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0.2897000323582041)OR(vt0.c0)))OR(0.6043373834690333)))AND(vt0.c0)))OR(vt0.c1)))<>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC  NULLS LAST, ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(((((((((vt0.c0)AND(1943681259)))AND(x'')))AND(x'')))OR(x'')))))OR('k￿_bUX')));
SELECT ALL * FROM vt0 WHERE (((((((((((0.2897000323582041)OR(vt0.c0)))OR(0.6043373834690333)))AND(vt0.c0)))OR(vt0.c1)))!=((vt0.c0 IN ())))) ORDER BY x'' DESC  NULLS LAST, ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(((((((((vt0.c0)AND(1943681259)))AND(x'')))AND(x'')))OR(x'')))))OR('k￿_bUX'));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0.2897000323582041)OR(vt0.c0)))OR(0.6043373834690333)))AND(vt0.c0)))OR(vt0.c1)))<>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC  NULLS LAST, ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(((((((((vt0.c0)AND(1943681259)))AND(x'')))AND(x'')))OR(x'')))))OR('k￿_bUX')));
SELECT ALL * FROM vt0 WHERE (((((((((((0.2897000323582041)OR(vt0.c0)))OR(0.6043373834690333)))AND(vt0.c0)))OR(vt0.c1)))!=((vt0.c0 IN ())))) ORDER BY x'' DESC  NULLS LAST, ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(((((((((vt0.c0)AND(1943681259)))AND(x'')))AND(x'')))OR(x'')))))OR('k￿_bUX'));
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) COLLATE RTRIM) ORDER BY ((vt0.c1)IS NOT((rt0.c2 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c1)IS NOT((rt0.c2 IN ()))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) COLLATE RTRIM) ORDER BY ((vt0.c1)IS NOT((rt0.c2 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c1)IS NOT((rt0.c2 IN ()))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) COLLATE RTRIM) ORDER BY ((vt0.c1)IS NOT((rt0.c2 IN ()))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE TRIM(rt0.c1)  WHEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE NULL END THEN ((vt0.c0) NOT NULL) WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c1))) THEN HEX(vt0.c0) WHEN ((rt0.c0) ISNULL) THEN 0.10145348945208932 END) ORDER BY ((((((((((rt0.c2)<(rt0.c2)))OR(CAST(rt0.c0 AS BLOB))))OR(((rt0.c1) NOTNULL))))OR(TYPEOF(DISTINCT rt0.c1))))OR(CAST(vt0.c1 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(rt0.c1)  WHEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE NULL END THEN ((vt0.c0) NOT NULL) WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c1))) THEN HEX(vt0.c0) WHEN ((rt0.c0) ISNULL) THEN 0.10145348945208932 END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((rt0.c2)<(rt0.c2)))OR(CAST(rt0.c0 AS BLOB))))OR(((rt0.c1) NOTNULL))))OR(TYPEOF(DISTINCT rt0.c1))))OR(CAST(vt0.c1 AS BLOB))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE TRIM(rt0.c1)  WHEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE NULL END THEN ((vt0.c0) NOT NULL) WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c1))) THEN HEX(vt0.c0) WHEN ((rt0.c0) ISNULL) THEN 0.10145348945208932 END) ORDER BY ((((((((((rt0.c2)<(rt0.c2)))OR(CAST(rt0.c0 AS BLOB))))OR(((rt0.c1) NOTNULL))))OR(TYPEOF(DISTINCT rt0.c1))))OR(CAST(vt0.c1 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(rt0.c1)  WHEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE NULL END THEN ((vt0.c0) NOT NULL) WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c1))) THEN HEX(vt0.c0) WHEN ((rt0.c0) ISNULL) THEN 0.10145348945208932 END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((rt0.c2)<(rt0.c2)))OR(CAST(rt0.c0 AS BLOB))))OR(((rt0.c1) NOTNULL))))OR(TYPEOF(DISTINCT rt0.c1))))OR(CAST(vt0.c1 AS BLOB))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE TRIM(rt0.c1)  WHEN CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE NULL END THEN ((vt0.c0) NOT NULL) WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c1))) THEN HEX(vt0.c0) WHEN ((rt0.c0) ISNULL) THEN 0.10145348945208932 END) ORDER BY ((((((((((rt0.c2)<(rt0.c2)))OR(CAST(rt0.c0 AS BLOB))))OR(((rt0.c1) NOTNULL))))OR(TYPEOF(DISTINCT rt0.c1))))OR(CAST(vt0.c1 AS BLOB))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (COALESCE(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0) IS TRUE), ABS(vt0.c0), (~ (x'2e83')))) ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0) IS TRUE), ABS(vt0.c0), (~ (x'2e83')))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (COALESCE(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0) IS TRUE), ABS(vt0.c0), (~ (x'2e83')))) ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0) IS TRUE), ABS(vt0.c0), (~ (x'2e83')))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (COALESCE(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0) IS TRUE), ABS(vt0.c0), (~ (x'2e83')))) ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS INTEGER) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 COLLATE NOCASE IN ((~ (vt0.c0))))) ORDER BY ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE NOCASE IN ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 COLLATE NOCASE IN ((~ (vt0.c0))))) ORDER BY ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE NOCASE IN ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 COLLATE NOCASE IN ((~ (vt0.c0))))) ORDER BY ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY DESC;
SELECT * FROM rt0, vt0 WHERE (NULL) ORDER BY NULLIF(DISTINCT (~ (rt0.c0)), ((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULLIF(DISTINCT (~ (rt0.c0)), ((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (NULL) ORDER BY NULLIF(DISTINCT (~ (rt0.c0)), ((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULLIF(DISTINCT (~ (rt0.c0)), ((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (NULL) ORDER BY NULLIF(DISTINCT (~ (rt0.c0)), ((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c1)OR(vt0.c0)))))AND((('-36019306')==(-1.507662927E9)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c1)OR(vt0.c0)))))AND((('-36019306')=(-1.507662927E9))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c1)OR(vt0.c0)))))AND((('-36019306')==(-1.507662927E9)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c1)OR(vt0.c0)))))AND((('-36019306')=(-1.507662927E9))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c1)OR(vt0.c0)))))AND((('-36019306')==(-1.507662927E9)))));
SELECT * FROM vt0, rt0 WHERE (CAST(CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END AS TEXT));
SELECT ALL * FROM vt0 WHERE (((0.5108859733049486) BETWEEN ((((vt0.c0, '611805954', vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0)))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((0.5108859733049486) BETWEEN ((((vt0.c0, '611805954', vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0)))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((0.5108859733049486) BETWEEN ((((vt0.c0, '611805954', vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0)))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((0.5108859733049486) BETWEEN ((((vt0.c0, '611805954', vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0)))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((0.5108859733049486) BETWEEN ((((vt0.c0, '611805954', vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0)))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((rt0.c2 IN ())) NOTNULL) WHERE (rt0.c2) ORDER BY (((rt0.c0)) NOT BETWEEN ((((vt0.c1)/(rt0.c2)))) AND (((((rt0.c0, vt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c1, NULL, rt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((rt0.c2 IN ())) NOTNULL) ORDER BY (((rt0.c0)) NOT BETWEEN ((((vt0.c1)/(rt0.c2)))) AND (((((rt0.c0, vt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c1, NULL, rt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1)))))) DESC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((rt0.c2 IN ())) NOTNULL) WHERE (rt0.c2) ORDER BY (((rt0.c0)) NOT BETWEEN ((((vt0.c1)/(rt0.c2)))) AND (((((rt0.c0, vt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c1, NULL, rt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((rt0.c2 IN ())) NOTNULL) ORDER BY (((rt0.c0)) NOT BETWEEN ((((vt0.c1)/(rt0.c2)))) AND (((((rt0.c0, vt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c1, NULL, rt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1)))))) DESC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((rt0.c2 IN ())) NOTNULL) WHERE (rt0.c2) ORDER BY (((rt0.c0)) NOT BETWEEN ((((vt0.c1)/(rt0.c2)))) AND (((((rt0.c0, vt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c1, NULL, rt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1)))))) DESC;
SELECT * FROM rt0, vt0 WHERE ('a샀i<9wdy') ORDER BY ((((rt0.c0 IN ()), ((rt0.c1)||(vt0.c0)), (~ (rt0.c2)), CHANGES(), LOWER(rt0.c0)))>=((((((((((rt0.c0)AND(NULL)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c2)), ((vt0.c1) BETWEEN ('') AND (vt0.c0)), rt0.c1 COLLATE BINARY, CASE rt0.c0  WHEN vt0.c1 THEN vt0.c1 END, (~ (NULL))))) DESC, CASE WHEN ((rt0.c0) BETWEEN (0.5635147364853424) AND (rt0.c0)) THEN ABS(rt0.c2) WHEN CAST(rt0.c0 AS TEXT) THEN CASE WHEN vt0.c0 THEN rt0.c1 END WHEN (((('0.22496325062155054')AND(vt0.c0)))AND(rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) ELSE (((rt0.c1, rt0.c2, vt0.c1))>=((vt0.c0, vt0.c1, rt0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT (('a샀i<9wdy') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0 IN ()), ((rt0.c1)||(vt0.c0)), (~ (rt0.c2)), CHANGES(), LOWER(rt0.c0)))>=((((((((((rt0.c0)AND(NULL)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c2)), ((vt0.c1) BETWEEN ('') AND (vt0.c0)), rt0.c1 COLLATE BINARY, CASE rt0.c0  WHEN vt0.c1 THEN vt0.c1 END, (~ (NULL))))) DESC, CASE WHEN ((rt0.c0) BETWEEN (0.5635147364853424) AND (rt0.c0)) THEN ABS(rt0.c2) WHEN CAST(rt0.c0 AS TEXT) THEN CASE WHEN vt0.c0 THEN rt0.c1 END WHEN (((('0.22496325062155054')AND(vt0.c0)))AND(rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) ELSE (((rt0.c1, rt0.c2, vt0.c1))>=((vt0.c0, vt0.c1, rt0.c0))) END ASC);
SELECT * FROM rt0, vt0 WHERE ('a샀i<9wdy') ORDER BY ((((rt0.c0 IN ()), ((rt0.c1)||(vt0.c0)), (~ (rt0.c2)), CHANGES(), LOWER(rt0.c0)))>=((((((((((rt0.c0)AND(NULL)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c2)), ((vt0.c1) BETWEEN ('') AND (vt0.c0)), rt0.c1 COLLATE BINARY, CASE rt0.c0  WHEN vt0.c1 THEN vt0.c1 END, (~ (NULL))))) DESC, CASE WHEN ((rt0.c0) BETWEEN (0.5635147364853424) AND (rt0.c0)) THEN ABS(rt0.c2) WHEN CAST(rt0.c0 AS TEXT) THEN CASE WHEN vt0.c0 THEN rt0.c1 END WHEN (((('0.22496325062155054')AND(vt0.c0)))AND(rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) ELSE (((rt0.c1, rt0.c2, vt0.c1))>=((vt0.c0, vt0.c1, rt0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT (('a샀i<9wdy') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0 IN ()), ((rt0.c1)||(vt0.c0)), (~ (rt0.c2)), CHANGES(), LOWER(rt0.c0)))>=((((((((((rt0.c0)AND(NULL)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c2)), ((vt0.c1) BETWEEN ('') AND (vt0.c0)), rt0.c1 COLLATE BINARY, CASE rt0.c0  WHEN vt0.c1 THEN vt0.c1 END, (~ (NULL))))) DESC, CASE WHEN ((rt0.c0) BETWEEN (0.5635147364853424) AND (rt0.c0)) THEN ABS(rt0.c2) WHEN CAST(rt0.c0 AS TEXT) THEN CASE WHEN vt0.c0 THEN rt0.c1 END WHEN (((('0.22496325062155054')AND(vt0.c0)))AND(rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) ELSE (((rt0.c1, rt0.c2, vt0.c1))>=((vt0.c0, vt0.c1, rt0.c0))) END ASC);
SELECT * FROM rt0, vt0 WHERE ('a샀i<9wdy') ORDER BY ((((rt0.c0 IN ()), ((rt0.c1)||(vt0.c0)), (~ (rt0.c2)), CHANGES(), LOWER(rt0.c0)))>=((((((((((rt0.c0)AND(NULL)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c2)), ((vt0.c1) BETWEEN ('') AND (vt0.c0)), rt0.c1 COLLATE BINARY, CASE rt0.c0  WHEN vt0.c1 THEN vt0.c1 END, (~ (NULL))))) DESC, CASE WHEN ((rt0.c0) BETWEEN (0.5635147364853424) AND (rt0.c0)) THEN ABS(rt0.c2) WHEN CAST(rt0.c0 AS TEXT) THEN CASE WHEN vt0.c0 THEN rt0.c1 END WHEN (((('0.22496325062155054')AND(vt0.c0)))AND(rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) ELSE (((rt0.c1, rt0.c2, vt0.c1))>=((vt0.c0, vt0.c1, rt0.c0))) END ASC;
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2) ISNULL)) NOT BETWEEN (((rt0.c1)<=(vt0.c1))) AND (CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) ISNULL)) NOT BETWEEN (((rt0.c1)<=(vt0.c1))) AND (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2) ISNULL)) NOT BETWEEN (((rt0.c1)<=(vt0.c1))) AND (CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) ISNULL)) NOT BETWEEN (((rt0.c1)<=(vt0.c1))) AND (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2) ISNULL)) NOT BETWEEN (((rt0.c1)<=(vt0.c1))) AND (CAST(rt0.c1 AS TEXT))));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1 IN (rt0.c2)), (((vt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((rt0.c0, vt0.c0, rt0.c2))), '-76977900'))<((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)), (+ (vt0.c0)), ((vt0.c0) NOT NULL))))) ORDER BY ((rt0.c2 COLLATE BINARY) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 IN (rt0.c2)), (((vt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((rt0.c0, vt0.c0, rt0.c2))), '-76977900'))<((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)), (+ (vt0.c0)), ((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c2 COLLATE BINARY) NOT NULL) ASC);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1 IN (rt0.c2)), (((vt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((rt0.c0, vt0.c0, rt0.c2))), '-76977900'))<((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)), (+ (vt0.c0)), ((vt0.c0) NOT NULL))))) ORDER BY ((rt0.c2 COLLATE BINARY) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 IN (rt0.c2)), (((vt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((rt0.c0, vt0.c0, rt0.c2))), '-76977900'))<((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)), (+ (vt0.c0)), ((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c2 COLLATE BINARY) NOT NULL) ASC);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1 IN (rt0.c2)), (((vt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((rt0.c0, vt0.c0, rt0.c2))), '-76977900'))<((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)), (+ (vt0.c0)), ((vt0.c0) NOT NULL))))) ORDER BY ((rt0.c2 COLLATE BINARY) NOT NULL) ASC;
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c1 IN ()))*(rt0.c2))) ORDER BY ((((((((((((LIKELY(vt0.c0))OR(((vt0.c0) NOTNULL))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR((~ (rt0.c2)))))OR(((vt0.c0)GLOB(rt0.c2)))))AND(((rt0.c1) ISNULL))))AND(((rt0.c0) IS FALSE))), (((((((((((rt0.c1))>((rt0.c0))))OR(CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END)))OR('')))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 END)))OR(((NULL)!=(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))*(rt0.c2))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((((LIKELY(vt0.c0))OR(((vt0.c0) NOTNULL))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR((~ (rt0.c2)))))OR(((vt0.c0)GLOB(rt0.c2)))))AND(((rt0.c1) ISNULL))))AND(((rt0.c0) IS FALSE))), (((((((((((rt0.c1))>((rt0.c0))))OR(CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END)))OR('')))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 END)))OR(((NULL)<>(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c1 IN ()))*(rt0.c2))) ORDER BY ((((((((((((LIKELY(vt0.c0))OR(((vt0.c0) NOTNULL))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR((~ (rt0.c2)))))OR(((vt0.c0)GLOB(rt0.c2)))))AND(((rt0.c1) ISNULL))))AND(((rt0.c0) IS FALSE))), (((((((((((rt0.c1))>((rt0.c0))))OR(CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END)))OR('')))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 END)))OR(((NULL)!=(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))*(rt0.c2))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((((LIKELY(vt0.c0))OR(((vt0.c0) NOTNULL))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR((~ (rt0.c2)))))OR(((vt0.c0)GLOB(rt0.c2)))))AND(((rt0.c1) ISNULL))))AND(((rt0.c0) IS FALSE))), (((((((((((rt0.c1))>((rt0.c0))))OR(CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END)))OR('')))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 END)))OR(((NULL)<>(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c1 IN ()))*(rt0.c2))) ORDER BY ((((((((((((LIKELY(vt0.c0))OR(((vt0.c0) NOTNULL))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR((~ (rt0.c2)))))OR(((vt0.c0)GLOB(rt0.c2)))))AND(((rt0.c1) ISNULL))))AND(((rt0.c0) IS FALSE))), (((((((((((rt0.c1))>((rt0.c0))))OR(CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END)))OR('')))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 END)))OR(((NULL)!=(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE ((((((((((((((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c2))))OR(UPPER(rt0.c2))))OR(rt0.c1 COLLATE NOCASE)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR(((((x'')OR(rt0.c2)))OR(rt0.c2)))))AND(NULL))) ORDER BY ((((rt0.c1)&('676540764')))>=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) ASC  NULLS LAST, ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)) COLLATE RTRIM DESC, IFNULL(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), CASE WHEN rt0.c2 THEN rt0.c2 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c2))))OR(UPPER(rt0.c2))))OR(rt0.c1 COLLATE NOCASE)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR(((((x'')OR(rt0.c2)))OR(rt0.c2)))))AND(NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)&('676540764')))>=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) ASC  NULLS LAST, ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)) COLLATE RTRIM DESC, IFNULL(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), CASE WHEN rt0.c2 THEN rt0.c2 END)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((((((((((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c2))))OR(UPPER(rt0.c2))))OR(rt0.c1 COLLATE NOCASE)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR(((((x'')OR(rt0.c2)))OR(rt0.c2)))))AND(NULL))) ORDER BY ((((rt0.c1)&('676540764')))>=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) ASC  NULLS LAST, ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)) COLLATE RTRIM DESC, IFNULL(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), CASE WHEN rt0.c2 THEN rt0.c2 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c2))))OR(UPPER(rt0.c2))))OR(rt0.c1 COLLATE NOCASE)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR(((((x'')OR(rt0.c2)))OR(rt0.c2)))))AND(NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)&('676540764')))>=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) ASC  NULLS LAST, ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)) COLLATE RTRIM DESC, IFNULL(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), CASE WHEN rt0.c2 THEN rt0.c2 END)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((((((((((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c2))))OR(UPPER(rt0.c2))))OR(rt0.c1 COLLATE NOCASE)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR(((((x'')OR(rt0.c2)))OR(rt0.c2)))))AND(NULL))) ORDER BY ((((rt0.c1)&('676540764')))>=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) ASC  NULLS LAST, ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)) COLLATE RTRIM DESC, IFNULL(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), CASE WHEN rt0.c2 THEN rt0.c2 END)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c1 IN (rt0.c1, rt0.c2))  WHEN ((rt0.c2)>=(rt0.c0)) THEN LIKELY(DISTINCT rt0.c1) END) ORDER BY (((((((((((x'')) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(rt0.c0 COLLATE BINARY)))AND((NOT (rt0.c2)))))OR(TRIM(rt0.c1))))OR(((rt0.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c1 IN (rt0.c1, rt0.c2))  WHEN ((rt0.c2)>=(rt0.c0)) THEN LIKELY(DISTINCT rt0.c1) END) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((x'')) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(rt0.c0 COLLATE BINARY)))AND((NOT (rt0.c2)))))OR(TRIM(rt0.c1))))OR(((rt0.c0) IS FALSE)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c1 IN (rt0.c1, rt0.c2))  WHEN ((rt0.c2)>=(rt0.c0)) THEN LIKELY(DISTINCT rt0.c1) END) ORDER BY (((((((((((x'')) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(rt0.c0 COLLATE BINARY)))AND((NOT (rt0.c2)))))OR(TRIM(rt0.c1))))OR(((rt0.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c1 IN (rt0.c1, rt0.c2))  WHEN ((rt0.c2)>=(rt0.c0)) THEN LIKELY(DISTINCT rt0.c1) END) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((x'')) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(rt0.c0 COLLATE BINARY)))AND((NOT (rt0.c2)))))OR(TRIM(rt0.c1))))OR(((rt0.c0) IS FALSE)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c1 IN (rt0.c1, rt0.c2))  WHEN ((rt0.c2)>=(rt0.c0)) THEN LIKELY(DISTINCT rt0.c1) END) ORDER BY (((((((((((x'')) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(rt0.c0 COLLATE BINARY)))AND((NOT (rt0.c2)))))OR(TRIM(rt0.c1))))OR(((rt0.c0) IS FALSE)))  NULLS FIRST;
SELECT * FROM rt0 INNER JOIN vt0 ON rt0.c2 WHERE (((rt0.c2)==(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON rt0.c2);
SELECT * FROM rt0 INNER JOIN vt0 ON rt0.c2 WHERE (((rt0.c2)==(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON rt0.c2);
SELECT * FROM rt0 INNER JOIN vt0 ON rt0.c2 WHERE (((rt0.c2)==(vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(CAST(vt0.c1 AS REAL))));
SELECT * FROM rt0 WHERE ('*k') ORDER BY ((((((rt0.c0)AND(0.22859155727638436)))OR(rt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((((rt0.c0, rt0.c2, rt0.c2))<=((rt0.c2, rt0.c2, NULL))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('*k') IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)AND(0.22859155727638436)))OR(rt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((((rt0.c0, rt0.c2, rt0.c2))<=((rt0.c2, rt0.c2, NULL))))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ('*k') ORDER BY ((((((rt0.c0)AND(0.22859155727638436)))OR(rt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((((rt0.c0, rt0.c2, rt0.c2))<=((rt0.c2, rt0.c2, NULL))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('*k') IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)AND(0.22859155727638436)))OR(rt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((((rt0.c0, rt0.c2, rt0.c2))<=((rt0.c2, rt0.c2, NULL))))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ('*k') ORDER BY ((((((rt0.c0)AND(0.22859155727638436)))OR(rt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((((rt0.c0, rt0.c2, rt0.c2))<=((rt0.c2, rt0.c2, NULL))))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((x'') NOT NULL)) ORDER BY (((vt0.c0 IN (vt0.c1, vt0.c0)))IS NOT(('-1220481460' IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c1, vt0.c0)))IS NOT(('-1220481460' IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((x'') NOT NULL)) ORDER BY (((vt0.c0 IN (vt0.c1, vt0.c0)))IS NOT(('-1220481460' IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c1, vt0.c0)))IS NOT(('-1220481460' IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((x'') NOT NULL)) ORDER BY (((vt0.c0 IN (vt0.c1, vt0.c0)))IS NOT(('-1220481460' IN ()))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c2 AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c2 AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c2 AS INTEGER)) ISNULL));
SELECT ALL * FROM rt0 WHERE (CAST(0.8311683072518368 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(0.8311683072518368 AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(0.8311683072518368 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(0.8311683072518368 AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(0.8311683072518368 AS TEXT));
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'') ORDER BY CASE WHEN COALESCE(DISTINCT rt0.c0, rt0.c0) THEN (((((((('aQ')AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c0)) ELSE NULL END DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN COALESCE(DISTINCT rt0.c0, rt0.c0) THEN (((((((('aQ')AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c0)) ELSE NULL END DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'') ORDER BY CASE WHEN COALESCE(DISTINCT rt0.c0, rt0.c0) THEN (((((((('aQ')AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c0)) ELSE NULL END DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN COALESCE(DISTINCT rt0.c0, rt0.c0) THEN (((((((('aQ')AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c0)) ELSE NULL END DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'') ORDER BY CASE WHEN COALESCE(DISTINCT rt0.c0, rt0.c0) THEN (((((((('aQ')AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c0)) ELSE NULL END DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c0 WHEN x'30292be0' THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 END AS REAL)) ORDER BY ((CAST(rt0.c0 AS TEXT))&((~ (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c0 THEN rt0.c0 WHEN x'30292be0' THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 END AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c0 AS TEXT))&((~ (rt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c0 WHEN x'30292be0' THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 END AS REAL)) ORDER BY ((CAST(rt0.c0 AS TEXT))&((~ (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c0 THEN rt0.c0 WHEN x'30292be0' THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 END AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c0 AS TEXT))&((~ (rt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c0 WHEN x'30292be0' THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 END AS REAL)) ORDER BY ((CAST(rt0.c0 AS TEXT))&((~ (rt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((NOT (rt0.c1)))AND(CAST(rt0.c1 AS REAL))))AND(((('6^GG-')) BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c1)))AND(CAST(rt0.c1 AS REAL))))AND(((('6^GG-')) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((NOT (rt0.c1)))AND(CAST(rt0.c1 AS REAL))))AND(((('6^GG-')) BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c1)))AND(CAST(rt0.c1 AS REAL))))AND(((('6^GG-')) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((NOT (rt0.c1)))AND(CAST(rt0.c1 AS REAL))))AND(((('6^GG-')) BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT * FROM vt0 WHERE (((((vt0.c1) IS TRUE))|(x'4943' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS TRUE))|(x'4943' COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1) IS TRUE))|(x'4943' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS TRUE))|(x'4943' COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1) IS TRUE))|(x'4943' COLLATE BINARY)));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1))=((rt0.c0))) COLLATE BINARY) ORDER BY (NOT (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1))=((rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1))=((rt0.c0))) COLLATE BINARY) ORDER BY (NOT (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1))=((rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1))=((rt0.c0))) COLLATE BINARY) ORDER BY (NOT (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((vt0.c0) NOT NULL))OR((vt0.c1 IN ()))))AND((((rt0.c2, vt0.c0, rt0.c1))>((rt0.c0, rt0.c0, rt0.c0))))))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c0)&(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) NOT NULL))OR((vt0.c1 IN ()))))AND((((rt0.c2, vt0.c0, rt0.c1))>((rt0.c0, rt0.c0, rt0.c0))))))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c0)&(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((vt0.c0) NOT NULL))OR((vt0.c1 IN ()))))AND((((rt0.c2, vt0.c0, rt0.c1))>((rt0.c0, rt0.c0, rt0.c0))))))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c0)&(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) NOT NULL))OR((vt0.c1 IN ()))))AND((((rt0.c2, vt0.c0, rt0.c1))>((rt0.c0, rt0.c0, rt0.c0))))))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c0)&(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((vt0.c0) NOT NULL))OR((vt0.c1 IN ()))))AND((((rt0.c2, vt0.c0, rt0.c1))>((rt0.c0, rt0.c0, rt0.c0))))))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c0)&(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (0Xfffffffff92c5805)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>=((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), vt0.c1)))) ORDER BY ((TOTAL_CHANGES())>=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (0Xfffffffff92c5805)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>=((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((TOTAL_CHANGES())>=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (0Xfffffffff92c5805)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>=((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), vt0.c1)))) ORDER BY ((TOTAL_CHANGES())>=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (0Xfffffffff92c5805)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>=((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((TOTAL_CHANGES())>=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (0Xfffffffff92c5805)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>=((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), vt0.c1)))) ORDER BY ((TOTAL_CHANGES())>=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END));
SELECT * FROM rt0 WHERE ((rt0.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c2 IN ()));
SELECT * FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0))LIKE(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(NULL)))AND(vt0.c1))))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c0))LIKE(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(NULL)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0))LIKE(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(NULL)))AND(vt0.c1))))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c0))LIKE(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(NULL)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0))LIKE(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(NULL)))AND(vt0.c1))))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c0 END IN (((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c0 END IN (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c0 END IN (((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c0 END IN (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c0 END IN (((rt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 IN (rt0.c0, rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN (rt0.c0, rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 IN (rt0.c0, rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN (rt0.c0, rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 IN (rt0.c0, rt0.c0)) IN ()));
SELECT * FROM vt0, rt0 WHERE (((LAST_INSERT_ROWID())!=((vt0.c0 IN ())))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)))<((+ (rt0.c0))))  NULLS LAST, CASE WHEN vt0.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS INTEGER) ELSE rt0.c2 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ((((LAST_INSERT_ROWID())!=((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)))<((+ (rt0.c0))))  NULLS LAST, CASE WHEN vt0.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS INTEGER) ELSE rt0.c2 COLLATE NOCASE END);
SELECT * FROM vt0, rt0 WHERE (((LAST_INSERT_ROWID())!=((vt0.c0 IN ())))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)))<((+ (rt0.c0))))  NULLS LAST, CASE WHEN vt0.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS INTEGER) ELSE rt0.c2 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ((((LAST_INSERT_ROWID())!=((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)))<((+ (rt0.c0))))  NULLS LAST, CASE WHEN vt0.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS INTEGER) ELSE rt0.c2 COLLATE NOCASE END);
SELECT * FROM vt0, rt0 WHERE (((LAST_INSERT_ROWID())!=((vt0.c0 IN ())))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)))<((+ (rt0.c0))))  NULLS LAST, CASE WHEN vt0.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS INTEGER) ELSE rt0.c2 COLLATE NOCASE END;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)LIKE(rt0.c2)))OR((('-403652673') IS FALSE))))OR(((rt0.c0) IS FALSE)))) ORDER BY (('U#''<}QM#')LIKE(((rt0.c1)IS(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)LIKE(rt0.c2)))OR((('-403652673') IS FALSE))))OR(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY (('U#''<}QM#')LIKE(((rt0.c1)IS(rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)LIKE(rt0.c2)))OR((('-403652673') IS FALSE))))OR(((rt0.c0) IS FALSE)))) ORDER BY (('U#''<}QM#')LIKE(((rt0.c1)IS(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)LIKE(rt0.c2)))OR((('-403652673') IS FALSE))))OR(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY (('U#''<}QM#')LIKE(((rt0.c1)IS(rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)LIKE(rt0.c2)))OR((('-403652673') IS FALSE))))OR(((rt0.c0) IS FALSE)))) ORDER BY (('U#''<}QM#')LIKE(((rt0.c1)IS(rt0.c1)))) ASC;
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0)OR(x'')))<<(CASE WHEN vt0.c0 THEN rt0.c1 END))) ORDER BY CAST((((vt0.c1))=((rt0.c1))) AS INTEGER), rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)OR(x'')))<<(CASE WHEN vt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((((vt0.c1))=((rt0.c1))) AS INTEGER), rt0.c1 ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0)OR(x'')))<<(CASE WHEN vt0.c0 THEN rt0.c1 END))) ORDER BY CAST((((vt0.c1))=((rt0.c1))) AS INTEGER), rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)OR(x'')))<<(CASE WHEN vt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((((vt0.c1))=((rt0.c1))) AS INTEGER), rt0.c1 ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0)OR(x'')))<<(CASE WHEN vt0.c0 THEN rt0.c1 END))) ORDER BY CAST((((vt0.c1))=((rt0.c1))) AS INTEGER), rt0.c1 ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)))<(((vt0.c1)<<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)))<(((vt0.c1)<<(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)))<(((vt0.c1)<<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)))<(((vt0.c1)<<(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)))<(((vt0.c1)<<(rt0.c2)))));
SELECT * FROM rt0 WHERE (((CASE rt0.c1  WHEN 2.127543506E9 THEN rt0.c0 END) BETWEEN (((rt0.c0)||(rt0.c2))) AND (((('NdY|q&'))<>((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN 2.127543506E9 THEN rt0.c0 END) BETWEEN (((rt0.c0)||(rt0.c2))) AND (((('NdY|q&'))<>((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE rt0.c1  WHEN 2.127543506E9 THEN rt0.c0 END) BETWEEN (((rt0.c0)||(rt0.c2))) AND (((('NdY|q&'))<>((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN 2.127543506E9 THEN rt0.c0 END) BETWEEN (((rt0.c0)||(rt0.c2))) AND (((('NdY|q&'))<>((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE rt0.c1  WHEN 2.127543506E9 THEN rt0.c0 END) BETWEEN (((rt0.c0)||(rt0.c2))) AND (((('NdY|q&'))<>((rt0.c0))))));
SELECT * FROM vt0 WHERE (((vt0.c1)<<(CAST(vt0.c0 AS REAL)))) ORDER BY ((vt0.c0 COLLATE RTRIM)>=(((vt0.c1)>(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)<<(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)>=(((vt0.c1)>(vt0.c1))))  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c1)<<(CAST(vt0.c0 AS REAL)))) ORDER BY ((vt0.c0 COLLATE RTRIM)>=(((vt0.c1)>(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)<<(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)>=(((vt0.c1)>(vt0.c1))))  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c1)<<(CAST(vt0.c0 AS REAL)))) ORDER BY ((vt0.c0 COLLATE RTRIM)>=(((vt0.c1)>(vt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS BLOB) IN (((rt0.c2)+(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS BLOB) IN (((rt0.c2)+(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS BLOB) IN (((rt0.c2)+(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS BLOB) IN (((rt0.c2)+(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS BLOB) IN (((rt0.c2)+(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((((((vt0.c1))!=((vt0.c0))))AND(((vt0.c0)%(vt0.c0)))))OR(LIKE(vt0.c0, vt0.c1, '0'))))OR(CAST(vt0.c0 AS REAL))))AND(QUOTE(vt0.c1))))OR(x'dff0')))AND((((vt0.c1))>((vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((vt0.c1))<>((vt0.c0))))AND(((vt0.c0)%(vt0.c0)))))OR(LIKE(vt0.c0, vt0.c1, '0'))))OR(CAST(vt0.c0 AS REAL))))AND(QUOTE(vt0.c1))))OR(x'dff0')))AND((((vt0.c1))>((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((((((vt0.c1))!=((vt0.c0))))AND(((vt0.c0)%(vt0.c0)))))OR(LIKE(vt0.c0, vt0.c1, '0'))))OR(CAST(vt0.c0 AS REAL))))AND(QUOTE(vt0.c1))))OR(x'dff0')))AND((((vt0.c1))>((vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((vt0.c1))<>((vt0.c0))))AND(((vt0.c0)%(vt0.c0)))))OR(LIKE(vt0.c0, vt0.c1, '0'))))OR(CAST(vt0.c0 AS REAL))))AND(QUOTE(vt0.c1))))OR(x'dff0')))AND((((vt0.c1))>((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((((((vt0.c1))!=((vt0.c0))))AND(((vt0.c0)%(vt0.c0)))))OR(LIKE(vt0.c0, vt0.c1, '0'))))OR(CAST(vt0.c0 AS REAL))))AND(QUOTE(vt0.c1))))OR(x'dff0')))AND((((vt0.c1))>((vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) NOTNULL)));
SELECT ALL * FROM rt0, vt0 WHERE ((CAST(rt0.c2 AS TEXT) IN ())) ORDER BY 0.6255924864664711 DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS TEXT) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.6255924864664711 DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((CAST(rt0.c2 AS TEXT) IN ())) ORDER BY 0.6255924864664711 DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS TEXT) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.6255924864664711 DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((CAST(rt0.c2 AS TEXT) IN ())) ORDER BY 0.6255924864664711 DESC;
SELECT * FROM rt0 WHERE (((((rt0.c2)!=(rt0.c0)))<<(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)!=(rt0.c0)))<<(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)!=(rt0.c0)))<<(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)!=(rt0.c0)))<<(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)!=(rt0.c0)))<<(CAST(rt0.c2 AS BLOB))));
SELECT ALL * FROM rt0, vt0 WHERE (CAST(x'' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(x'' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(x'' AS INTEGER));
SELECT * FROM rt0, vt0 WHERE ((- (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((- (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((- (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((- (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((- (vt0.c0)) COLLATE RTRIM);
SELECT * FROM rt0, vt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)!=(rt0.c2)))-(((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<>(rt0.c2)))-(((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)!=(rt0.c2)))-(((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<>(rt0.c2)))-(((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)!=(rt0.c2)))-(((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1)))));
SELECT * FROM vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c1 END) NOT BETWEEN (((rt0.c0) ISNULL)) AND (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt0.c1 END) NOT BETWEEN (((rt0.c0) ISNULL)) AND (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c1 END) NOT BETWEEN (((rt0.c0) ISNULL)) AND (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt0.c1 END) NOT BETWEEN (((rt0.c0) ISNULL)) AND (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c1 END) NOT BETWEEN (((rt0.c0) ISNULL)) AND (rt0.c1 COLLATE RTRIM)));
