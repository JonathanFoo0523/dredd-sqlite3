-- Time: 2024/06/09 00:52:58
-- Database: database71
-- Database version: 3.40.0
-- seed value: 1477238271
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 BLOB ); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0, c1); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''); -- 0ms;
PRAGMA temp.foreign_keys; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
PRAGMA journal_mode = PERSIST; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
REINDEX  t1; -- 3ms;
INSERT OR FAIL INTO vt1(c1, c0) VALUES ('', NULL), (NULL, ''), (0.8784947089742818, '<k'); -- 0ms;
PRAGMA temp.default_cache_size; -- 0ms;
PRAGMA temp.cell_size_check; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1, c4) VALUES (NULL, x'', NULL, 0.8784947089742818); -- 0ms;
ALTER TABLE t1 ADD COLUMN c66 INTEGER; -- 0ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE rt0; -- 0ms;
ANALYZE temp; -- 0ms;
REINDEX; -- 0ms;
ALTER TABLE t1 ADD COLUMN c21 INTEGER; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
PRAGMA temp.cache_size = 1588540211229749404; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET (c1)=(NULL); -- 1ms;
ALTER TABLE t1 ADD COLUMN c25 INT; -- 4ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
PRAGMA main.automatic_index = false; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1 UNINDEXED); -- 1ms;
ALTER TABLE t1 RENAME TO t0; -- 5ms;
ALTER TABLE t0 ADD COLUMN c44 INT; -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-1964617386,15');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 34352888); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=8'); -- 0ms;
PRAGMA main.recursive_triggers = false; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 1ms;
PRAGMA main.cell_size_check = true; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 6); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 4ms;
PRAGMA journal_size_limit = 0; -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c92; -- 1ms;
UPDATE OR IGNORE t0 SET (c92)=('-1101663519'); -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c92 TO c72; -- 1ms;
UPDATE t0 SET (c72)=(-1964617386); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.cell_size_check; -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '24606'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('Sx')OR(0.8784947089742818))  WHEN HEX(0.06877476777159841) THEN ((x'') IS TRUE) END; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt1 SET c1=-1992937201; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i57 ON t0(((((c72) NOT BETWEEN ('1052029514') AND (c72))) NOT BETWEEN (((((c72)OR(c72)))AND(0.5676910387937075))) AND (((c72)>(c72))))); -- 1ms;
PRAGMA main.cell_size_check = false; -- 1ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(''); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i34 ON t0((~ ((NOT (c72)))) COLLATE RTRIM DESC) WHERE CASE WHEN c72 COLLATE BINARY THEN ((c72) IS FALSE) ELSE '<k' END; -- 1ms;
PRAGMA temp.busy_timeout; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=7'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
REINDEX; -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE i57; -- 0ms;
DROP INDEX IF EXISTS "i57"; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON (((vt1.c0)) NOT BETWEEN (((- (t0.c72)))) AND ((((vt1.c1)IS NOT(t0.c72))))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (((vt1.c0)) NOT BETWEEN (((- (t0.c72)))) AND ((((vt1.c1)IS NOT(t0.c72))))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON (((vt1.c0)) NOT BETWEEN (((- (t0.c72)))) AND ((((vt1.c1)IS NOT(t0.c72))))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (((vt1.c0)) NOT BETWEEN (((- (t0.c72)))) AND ((((vt1.c1)IS NOT(t0.c72))))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON (((vt1.c0)) NOT BETWEEN (((- (t0.c72)))) AND ((((vt1.c1)IS NOT(t0.c72))))) WHERE (x'');
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE ((~ (CASE WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY (rt0.c3 COLLATE BINARY IN ()) ASC  NULLS LAST, ((((((((((x'a4bc') ISNULL))OR(vt1.c1 COLLATE RTRIM)))OR(1.052029514E9)))OR(((rt0.c0)+(t0.c72)))))OR(CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c3 WHEN vt1.c1 THEN t0.c72 END));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY (rt0.c3 COLLATE BINARY IN ()) ASC  NULLS LAST, ((((((((((x'a4bc') ISNULL))OR(vt1.c1 COLLATE RTRIM)))OR(1.052029514E9)))OR(((rt0.c0)+(t0.c72)))))OR(CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c3 WHEN vt1.c1 THEN t0.c72 END)));
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE ((~ (CASE WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY (rt0.c3 COLLATE BINARY IN ()) ASC  NULLS LAST, ((((((((((x'a4bc') ISNULL))OR(vt1.c1 COLLATE RTRIM)))OR(1.052029514E9)))OR(((rt0.c0)+(t0.c72)))))OR(CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c3 WHEN vt1.c1 THEN t0.c72 END));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY (rt0.c3 COLLATE BINARY IN ()) ASC  NULLS LAST, ((((((((((x'a4bc') ISNULL))OR(vt1.c1 COLLATE RTRIM)))OR(1.052029514E9)))OR(((rt0.c0)+(t0.c72)))))OR(CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c3 WHEN vt1.c1 THEN t0.c72 END)));
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE ((~ (CASE WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY (rt0.c3 COLLATE BINARY IN ()) ASC  NULLS LAST, ((((((((((x'a4bc') ISNULL))OR(vt1.c1 COLLATE RTRIM)))OR(1.052029514E9)))OR(((rt0.c0)+(t0.c72)))))OR(CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c3 WHEN vt1.c1 THEN t0.c72 END));
SELECT ALL * FROM rt0, vt1, t0 WHERE (NULL) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY rt0.c1);
SELECT ALL * FROM rt0, vt1, t0 WHERE (NULL) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY rt0.c1);
SELECT ALL * FROM rt0, vt1, t0 WHERE (NULL) ORDER BY rt0.c1;
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE ((((- (0x2eb89649)))<<((~ (rt0.c4))))) ORDER BY (rt0.c0 COLLATE RTRIM IN ((((vt1.c1, '864317444', rt0.c4))<>((t0.c72, rt0.c4, vt1.c1))))) ASC  NULLS FIRST, QUOTE((- (vt1.c1))) DESC  NULLS FIRST, (((t0.c72))!=((vt1.c1))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((- (0x2eb89649)))<<((~ (rt0.c4))))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY (rt0.c0 COLLATE RTRIM IN ((((vt1.c1, '864317444', rt0.c4))!=((t0.c72, rt0.c4, vt1.c1))))) ASC  NULLS FIRST, QUOTE((- (vt1.c1))) DESC  NULLS FIRST, (((t0.c72))!=((vt1.c1))) COLLATE BINARY);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE ((((- (0x2eb89649)))<<((~ (rt0.c4))))) ORDER BY (rt0.c0 COLLATE RTRIM IN ((((vt1.c1, '864317444', rt0.c4))<>((t0.c72, rt0.c4, vt1.c1))))) ASC  NULLS FIRST, QUOTE((- (vt1.c1))) DESC  NULLS FIRST, (((t0.c72))!=((vt1.c1))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((- (0x2eb89649)))<<((~ (rt0.c4))))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY (rt0.c0 COLLATE RTRIM IN ((((vt1.c1, '864317444', rt0.c4))!=((t0.c72, rt0.c4, vt1.c1))))) ASC  NULLS FIRST, QUOTE((- (vt1.c1))) DESC  NULLS FIRST, (((t0.c72))!=((vt1.c1))) COLLATE BINARY);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE ((((- (0x2eb89649)))<<((~ (rt0.c4))))) ORDER BY (rt0.c0 COLLATE RTRIM IN ((((vt1.c1, '864317444', rt0.c4))<>((t0.c72, rt0.c4, vt1.c1))))) ASC  NULLS FIRST, QUOTE((- (vt1.c1))) DESC  NULLS FIRST, (((t0.c72))!=((vt1.c1))) COLLATE BINARY;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((((((rt0.c1)AND('-1101663519')))AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c3)) IN (((rt0.c3) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c1)AND('-1101663519')))AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c3)) IN (((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((((((rt0.c1)AND('-1101663519')))AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c3)) IN (((rt0.c3) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c1)AND('-1101663519')))AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c3)) IN (((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((((((rt0.c1)AND('-1101663519')))AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c3)) IN (((rt0.c3) IS FALSE))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3, rt0.c2, rt0.c4))==((rt0.c2, rt0.c0, rt0.c4)))) BETWEEN ((- (rt0.c2))) AND ((('6ꢇU9魫{d') ISNULL)))) ORDER BY (1052029514 IN ()), ((CAST(rt0.c3 AS TEXT)) NOT NULL)  NULLS LAST, (((rt0.c4 COLLATE NOCASE, (rt0.c0 IN ()), ((rt0.c3) IS FALSE), rt0.c0, ((rt0.c4)>=(rt0.c4))))>(((((rt0.c1, rt0.c1, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c3))), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c4)), rt0.c3 COLLATE BINARY, (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, rt0.c2, rt0.c4))==((rt0.c2, rt0.c0, rt0.c4)))) BETWEEN ((- (rt0.c2))) AND ((('6ꢇU9魫{d') ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (1052029514 IN ()), ((CAST(rt0.c3 AS TEXT)) NOT NULL)  NULLS LAST, (((rt0.c4 COLLATE NOCASE, (rt0.c0 IN ()), ((rt0.c3) IS FALSE), rt0.c0, ((rt0.c4)>=(rt0.c4))))>(((((rt0.c1, rt0.c1, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c3))), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c4)), rt0.c3 COLLATE BINARY, (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) DESC);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3, rt0.c2, rt0.c4))==((rt0.c2, rt0.c0, rt0.c4)))) BETWEEN ((- (rt0.c2))) AND ((('6ꢇU9魫{d') ISNULL)))) ORDER BY (1052029514 IN ()), ((CAST(rt0.c3 AS TEXT)) NOT NULL)  NULLS LAST, (((rt0.c4 COLLATE NOCASE, (rt0.c0 IN ()), ((rt0.c3) IS FALSE), rt0.c0, ((rt0.c4)>=(rt0.c4))))>(((((rt0.c1, rt0.c1, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c3))), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c4)), rt0.c3 COLLATE BINARY, (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, rt0.c2, rt0.c4))==((rt0.c2, rt0.c0, rt0.c4)))) BETWEEN ((- (rt0.c2))) AND ((('6ꢇU9魫{d') ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (1052029514 IN ()), ((CAST(rt0.c3 AS TEXT)) NOT NULL)  NULLS LAST, (((rt0.c4 COLLATE NOCASE, (rt0.c0 IN ()), ((rt0.c3) IS FALSE), rt0.c0, ((rt0.c4)>=(rt0.c4))))>(((((rt0.c1, rt0.c1, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c3))), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c4)), rt0.c3 COLLATE BINARY, (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) DESC);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3, rt0.c2, rt0.c4))==((rt0.c2, rt0.c0, rt0.c4)))) BETWEEN ((- (rt0.c2))) AND ((('6ꢇU9魫{d') ISNULL)))) ORDER BY (1052029514 IN ()), ((CAST(rt0.c3 AS TEXT)) NOT NULL)  NULLS LAST, (((rt0.c4 COLLATE NOCASE, (rt0.c0 IN ()), ((rt0.c3) IS FALSE), rt0.c0, ((rt0.c4)>=(rt0.c4))))>(((((rt0.c1, rt0.c1, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c3))), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c4)), rt0.c3 COLLATE BINARY, (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) DESC;
SELECT ALL * FROM vt1, t0, rt0 WHERE ((NOT (MIN(t0.c72, rt0.c1, rt0.c1, rt0.c2)))) ORDER BY rt0.c1, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((NOT (MIN(t0.c72, rt0.c1, rt0.c1, rt0.c2)))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY rt0.c1, rt0.c0);
SELECT ALL * FROM vt1, t0, rt0 WHERE ((NOT (MIN(t0.c72, rt0.c1, rt0.c1, rt0.c2)))) ORDER BY rt0.c1, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((NOT (MIN(t0.c72, rt0.c1, rt0.c1, rt0.c2)))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY rt0.c1, rt0.c0);
SELECT ALL * FROM vt1, t0, rt0 WHERE ((NOT (MIN(t0.c72, rt0.c1, rt0.c1, rt0.c2)))) ORDER BY rt0.c1, rt0.c0;
SELECT ALL * FROM vt1, rt0, t0 WHERE (((CASE rt0.c4  WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c4 WHEN 1.052029514E9 THEN vt1.c1 ELSE rt0.c3 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c4  WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c4 WHEN 1.052029514E9 THEN vt1.c1 ELSE rt0.c3 END) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE (((CASE rt0.c4  WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c4 WHEN 1.052029514E9 THEN vt1.c1 ELSE rt0.c3 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c4  WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c4 WHEN 1.052029514E9 THEN vt1.c1 ELSE rt0.c3 END) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE (((CASE rt0.c4  WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c4 WHEN 1.052029514E9 THEN vt1.c1 ELSE rt0.c3 END) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c4))!=((rt0.c2)))))) ORDER BY ((((((rt0.c1)/(rt0.c2)))AND(0.8784947089742818)))OR(CASE x'c25c'  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c4))!=((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)/(rt0.c2)))AND(0.8784947089742818)))OR(CASE x'c25c'  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c4))!=((rt0.c2)))))) ORDER BY ((((((rt0.c1)/(rt0.c2)))AND(0.8784947089742818)))OR(CASE x'c25c'  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c4))!=((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)/(rt0.c2)))AND(0.8784947089742818)))OR(CASE x'c25c'  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c4))!=((rt0.c2)))))) ORDER BY ((((((rt0.c1)/(rt0.c2)))AND(0.8784947089742818)))OR(CASE x'c25c'  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) ASC  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE ((((((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c0)))AND('2_C')))OR(t0.c72)))AND(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c0)))AND('2_C')))OR(t0.c72)))AND(rt0.c3)) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c0)))AND('2_C')))OR(t0.c72)))AND(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c0)))AND('2_C')))OR(t0.c72)))AND(rt0.c3)) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c0)))AND('2_C')))OR(t0.c72)))AND(rt0.c3)) IN ()));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON CASE ((rt0.c4)%(rt0.c3))  WHEN (+ (rt0.c0)) THEN ((rt0.c1)<>(rt0.c4)) WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 END THEN (rt0.c1 IN ()) WHEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN ((x'c970')*(rt0.c0)) ELSE ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)) END FULL OUTER JOIN rt0 ON ((CAST(t0.c72 AS TEXT))<(((vt1.c0) BETWEEN (rt0.c2) AND ('0.06877476777159841')))) WHERE (CASE rt0.c4  WHEN 1387425011 THEN vt1.c1 WHEN vt1.c1 THEN rt0.c4 WHEN vt1.c0 THEN x'1657' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE vt1.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c4  WHEN 1387425011 THEN vt1.c1 WHEN vt1.c1 THEN rt0.c4 WHEN vt1.c0 THEN x'1657' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE vt1.c1 END COLLATE RTRIM) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CASE ((rt0.c4)%(rt0.c3))  WHEN (+ (rt0.c0)) THEN ((rt0.c1)<>(rt0.c4)) WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 END THEN (rt0.c1 IN ()) WHEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN ((x'c970')*(rt0.c0)) ELSE ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)) END FULL OUTER JOIN rt0 ON ((CAST(t0.c72 AS TEXT))<(((vt1.c0) BETWEEN (rt0.c2) AND ('0.06877476777159841')))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON CASE ((rt0.c4)%(rt0.c3))  WHEN (+ (rt0.c0)) THEN ((rt0.c1)<>(rt0.c4)) WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 END THEN (rt0.c1 IN ()) WHEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN ((x'c970')*(rt0.c0)) ELSE ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)) END FULL OUTER JOIN rt0 ON ((CAST(t0.c72 AS TEXT))<(((vt1.c0) BETWEEN (rt0.c2) AND ('0.06877476777159841')))) WHERE (CASE rt0.c4  WHEN 1387425011 THEN vt1.c1 WHEN vt1.c1 THEN rt0.c4 WHEN vt1.c0 THEN x'1657' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE vt1.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c4  WHEN 1387425011 THEN vt1.c1 WHEN vt1.c1 THEN rt0.c4 WHEN vt1.c0 THEN x'1657' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE vt1.c1 END COLLATE RTRIM) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CASE ((rt0.c4)%(rt0.c3))  WHEN (+ (rt0.c0)) THEN ((rt0.c1)<>(rt0.c4)) WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 END THEN (rt0.c1 IN ()) WHEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN ((x'c970')*(rt0.c0)) ELSE ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)) END FULL OUTER JOIN rt0 ON ((CAST(t0.c72 AS TEXT))<(((vt1.c0) BETWEEN (rt0.c2) AND ('0.06877476777159841')))));
SELECT * FROM rt0, t0 WHERE (CAST(((rt0.c3) NOT NULL) AS INTEGER)) ORDER BY (((((rt0.c1 IN (t0.c72)))OR(((rt0.c3)+(rt0.c3)))))OR((('-773143135')==(t0.c72)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((rt0.c1 IN (t0.c72)))OR(((rt0.c3)+(rt0.c3)))))OR((('-773143135')=(t0.c72)))) DESC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (CAST(((rt0.c3) NOT NULL) AS INTEGER)) ORDER BY (((((rt0.c1 IN (t0.c72)))OR(((rt0.c3)+(rt0.c3)))))OR((('-773143135')==(t0.c72)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((rt0.c1 IN (t0.c72)))OR(((rt0.c3)+(rt0.c3)))))OR((('-773143135')=(t0.c72)))) DESC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (CAST(((rt0.c3) NOT NULL) AS INTEGER)) ORDER BY (((((rt0.c1 IN (t0.c72)))OR(((rt0.c3)+(rt0.c3)))))OR((('-773143135')==(t0.c72)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c4))) ORDER BY ((((rt0.c3)<>(rt0.c3))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c4))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c3)<>(rt0.c3))) NOT NULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c4))) ORDER BY ((((rt0.c3)<>(rt0.c3))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c4))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c3)<>(rt0.c3))) NOT NULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c4))) ORDER BY ((((rt0.c3)<>(rt0.c3))) NOT NULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((+ (0x7bff9425)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (0X7bff9425)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ (0x7bff9425)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (0X7bff9425)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ (0x7bff9425)) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT))LIKE(CAST(rt0.c1 AS REAL)))) ORDER BY (((~ (rt0.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT))LIKE(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c2))) IS FALSE));
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT))LIKE(CAST(rt0.c1 AS REAL)))) ORDER BY (((~ (rt0.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT))LIKE(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c2))) IS FALSE));
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT))LIKE(CAST(rt0.c1 AS REAL)))) ORDER BY (((~ (rt0.c2))) IS FALSE);
SELECT ALL * FROM t0 WHERE ((((((t0.c72 IN (t0.c72, t0.c72)))OR(((-773143135) BETWEEN (t0.c72) AND (t0.c72)))))AND(CASE WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END))) ORDER BY ((((((t0.c72)=(t0.c72)))OR(t0.c72)))OR(t0.c72 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c72 IN (t0.c72, t0.c72)))OR(((-773143135) BETWEEN (t0.c72) AND (t0.c72)))))AND(CASE WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c72)==(t0.c72)))OR(t0.c72)))OR(t0.c72 COLLATE BINARY)) ASC);
SELECT ALL * FROM t0 WHERE ((((((t0.c72 IN (t0.c72, t0.c72)))OR(((-773143135) BETWEEN (t0.c72) AND (t0.c72)))))AND(CASE WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END))) ORDER BY ((((((t0.c72)=(t0.c72)))OR(t0.c72)))OR(t0.c72 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c72 IN (t0.c72, t0.c72)))OR(((-773143135) BETWEEN (t0.c72) AND (t0.c72)))))AND(CASE WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c72)==(t0.c72)))OR(t0.c72)))OR(t0.c72 COLLATE BINARY)) ASC);
SELECT ALL * FROM t0 WHERE ((((((t0.c72 IN (t0.c72, t0.c72)))OR(((-773143135) BETWEEN (t0.c72) AND (t0.c72)))))AND(CASE WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END))) ORDER BY ((((((t0.c72)=(t0.c72)))OR(t0.c72)))OR(t0.c72 COLLATE BINARY)) ASC;
SELECT ALL * FROM rt0, vt1 WHERE (((((x'37bd')OR(vt1.c1 COLLATE NOCASE)))OR(rt0.c1))) ORDER BY (((rt0.c3 IN ())) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))))  NULLS LAST, (+ (rt0.c4)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'37bd')OR(vt1.c1 COLLATE NOCASE)))OR(rt0.c1))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c3 IN ())) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))))  NULLS LAST, (+ (rt0.c4)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((((x'37bd')OR(vt1.c1 COLLATE NOCASE)))OR(rt0.c1))) ORDER BY (((rt0.c3 IN ())) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))))  NULLS LAST, (+ (rt0.c4)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'37bd')OR(vt1.c1 COLLATE NOCASE)))OR(rt0.c1))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c3 IN ())) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))))  NULLS LAST, (+ (rt0.c4)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((((x'37bd')OR(vt1.c1 COLLATE NOCASE)))OR(rt0.c1))) ORDER BY (((rt0.c3 IN ())) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))))  NULLS LAST, (+ (rt0.c4)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1 FULL OUTER JOIN rt0 ON ((vt1.c0 IN ()) IN ()) WHERE (CAST((((vt1.c1, rt0.c2, t0.c72)) BETWEEN ((rt0.c2, t0.c72, rt0.c4)) AND ((vt1.c1, 0.5601157596039938, '-1678666179'))) AS BLOB)) ORDER BY (('3&MA^n^%뉊' IN ()) IN ()) DESC  NULLS LAST, ((((((rt0.c3)) BETWEEN ((vt1.c0)) AND ((0.8784947089742818)))))<((x''))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c1, rt0.c2, t0.c72)) BETWEEN ((rt0.c2, t0.c72, rt0.c4)) AND ((vt1.c1, 0.5601157596039938, '-1678666179'))) AS BLOB)) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN rt0 ON ((vt1.c0 IN ()) IN ()) ORDER BY (('3&MA^n^%뉊' IN ()) IN ()) DESC  NULLS LAST, ((((((rt0.c3)) BETWEEN ((vt1.c0)) AND ((0.8784947089742818)))))<((x''))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 FULL OUTER JOIN rt0 ON ((vt1.c0 IN ()) IN ()) WHERE (CAST((((vt1.c1, rt0.c2, t0.c72)) BETWEEN ((rt0.c2, t0.c72, rt0.c4)) AND ((vt1.c1, 0.5601157596039938, '-1678666179'))) AS BLOB)) ORDER BY (('3&MA^n^%뉊' IN ()) IN ()) DESC  NULLS LAST, ((((((rt0.c3)) BETWEEN ((vt1.c0)) AND ((0.8784947089742818)))))<((x''))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c1, rt0.c2, t0.c72)) BETWEEN ((rt0.c2, t0.c72, rt0.c4)) AND ((vt1.c1, 0.5601157596039938, '-1678666179'))) AS BLOB)) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN rt0 ON ((vt1.c0 IN ()) IN ()) ORDER BY (('3&MA^n^%뉊' IN ()) IN ()) DESC  NULLS LAST, ((((((rt0.c3)) BETWEEN ((vt1.c0)) AND ((0.8784947089742818)))))<((x''))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 FULL OUTER JOIN rt0 ON ((vt1.c0 IN ()) IN ()) WHERE (CAST((((vt1.c1, rt0.c2, t0.c72)) BETWEEN ((rt0.c2, t0.c72, rt0.c4)) AND ((vt1.c1, 0.5601157596039938, '-1678666179'))) AS BLOB)) ORDER BY (('3&MA^n^%뉊' IN ()) IN ()) DESC  NULLS LAST, ((((((rt0.c3)) BETWEEN ((vt1.c0)) AND ((0.8784947089742818)))))<((x''))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (NULLIF(DISTINCT x'', t0.c72));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT x'', t0.c72)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULLIF(DISTINCT x'', t0.c72));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT x'', t0.c72)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULLIF(DISTINCT x'', t0.c72));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (+ (NULL)) LEFT OUTER JOIN t0 ON rt0.c0 WHERE ((~ (rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (+ (NULL)) LEFT OUTER JOIN t0 ON rt0.c0);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (+ (NULL)) LEFT OUTER JOIN t0 ON rt0.c0 WHERE ((~ (rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (+ (NULL)) LEFT OUTER JOIN t0 ON rt0.c0);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (+ (NULL)) LEFT OUTER JOIN t0 ON rt0.c0 WHERE ((~ (rt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c72)>(t0.c72)))LIKE(((((t0.c72)AND(-773143135)))OR(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c72)>(t0.c72)))LIKE(((((t0.c72)AND(-773143135)))OR(NULL))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c72)>(t0.c72)))LIKE(((((t0.c72)AND(-773143135)))OR(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c72)>(t0.c72)))LIKE(((((t0.c72)AND(-773143135)))OR(NULL))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c72)>(t0.c72)))LIKE(((((t0.c72)AND(-773143135)))OR(NULL)))));
SELECT * FROM vt1 INNER JOIN rt0 ON ((rt0.c2 IN ()) IN ()) LEFT OUTER JOIN t0 ON ((((t0.c72)<(vt1.c0))) NOT NULL) WHERE (CASE WHEN 0.9256049515086161 THEN (rt0.c0 IN (NULL)) ELSE ((vt1.c0)*(vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.9256049515086161 THEN (rt0.c0 IN (NULL)) ELSE ((vt1.c0)*(vt1.c1)) END) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((rt0.c2 IN ()) IN ()) LEFT OUTER JOIN t0 ON ((((t0.c72)<(vt1.c0))) NOT NULL));
SELECT * FROM vt1 INNER JOIN rt0 ON ((rt0.c2 IN ()) IN ()) LEFT OUTER JOIN t0 ON ((((t0.c72)<(vt1.c0))) NOT NULL) WHERE (CASE WHEN 0.9256049515086161 THEN (rt0.c0 IN (NULL)) ELSE ((vt1.c0)*(vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.9256049515086161 THEN (rt0.c0 IN (NULL)) ELSE ((vt1.c0)*(vt1.c1)) END) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((rt0.c2 IN ()) IN ()) LEFT OUTER JOIN t0 ON ((((t0.c72)<(vt1.c0))) NOT NULL));
SELECT * FROM vt1 INNER JOIN rt0 ON ((rt0.c2 IN ()) IN ()) LEFT OUTER JOIN t0 ON ((((t0.c72)<(vt1.c0))) NOT NULL) WHERE (CASE WHEN 0.9256049515086161 THEN (rt0.c0 IN (NULL)) ELSE ((vt1.c0)*(vt1.c1)) END);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4))) NOTNULL));
SELECT * FROM rt0, vt1 WHERE (TYPEOF(rt0.c3) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt0.c3) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (TYPEOF(rt0.c3) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt0.c3) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (TYPEOF(rt0.c3) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM t0, rt0, vt1 WHERE (HEX((vt1.c1 IN (rt0.c0)))) ORDER BY ((vt1.c1)LIKE(rt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((HEX((vt1.c1 IN (rt0.c0)))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((vt1.c1)LIKE(rt0.c2)) COLLATE BINARY);
SELECT ALL * FROM t0, rt0, vt1 WHERE (HEX((vt1.c1 IN (rt0.c0)))) ORDER BY ((vt1.c1)LIKE(rt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((HEX((vt1.c1 IN (rt0.c0)))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((vt1.c1)LIKE(rt0.c2)) COLLATE BINARY);
SELECT ALL * FROM t0, rt0, vt1 WHERE (HEX((vt1.c1 IN (rt0.c0)))) ORDER BY ((vt1.c1)LIKE(rt0.c2)) COLLATE BINARY;
SELECT * FROM t0 WHERE (((t0.c72)>(((t0.c72)IS(t0.c72))))) ORDER BY (x'' IN ()) COLLATE BINARY ASC, CAST(t0.c72 AS INTEGER), (((+ (t0.c72)))&(CAST(t0.c72 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c72)>(((t0.c72)IS(t0.c72))))) IS TRUE)  as count FROM t0 ORDER BY (x'' IN ()) COLLATE BINARY ASC, CAST(t0.c72 AS INTEGER), (((+ (t0.c72)))&(CAST(t0.c72 AS BLOB)))  NULLS LAST);
SELECT * FROM t0 WHERE (((t0.c72)>(((t0.c72)IS(t0.c72))))) ORDER BY (x'' IN ()) COLLATE BINARY ASC, CAST(t0.c72 AS INTEGER), (((+ (t0.c72)))&(CAST(t0.c72 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c72)>(((t0.c72)IS(t0.c72))))) IS TRUE)  as count FROM t0 ORDER BY (x'' IN ()) COLLATE BINARY ASC, CAST(t0.c72 AS INTEGER), (((+ (t0.c72)))&(CAST(t0.c72 AS BLOB)))  NULLS LAST);
SELECT * FROM t0 WHERE (((t0.c72)>(((t0.c72)IS(t0.c72))))) ORDER BY (x'' IN ()) COLLATE BINARY ASC, CAST(t0.c72 AS INTEGER), (((+ (t0.c72)))&(CAST(t0.c72 AS BLOB)))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((LTRIM(vt1.c0, vt1.c1)) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN 'T1025-956 i' ELSE vt1.c0 END) AND (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(vt1.c0, vt1.c1)) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN 'T1025-956 i' ELSE vt1.c0 END) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((LTRIM(vt1.c0, vt1.c1)) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN 'T1025-956 i' ELSE vt1.c0 END) AND (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(vt1.c0, vt1.c1)) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN 'T1025-956 i' ELSE vt1.c0 END) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((LTRIM(vt1.c0, vt1.c1)) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN 'T1025-956 i' ELSE vt1.c0 END) AND (CAST(vt1.c0 AS TEXT))));
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4))) NOT BETWEEN (((((((((rt0.c3)OR(vt1.c1)))OR(rt0.c4)))AND(vt1.c0)))AND(vt1.c1))) AND (CASE rt0.c1  WHEN rt0.c1 THEN vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4))) NOT BETWEEN (((((((((rt0.c3)OR(vt1.c1)))OR(rt0.c4)))AND(vt1.c0)))AND(vt1.c1))) AND (CASE rt0.c1  WHEN rt0.c1 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4))) NOT BETWEEN (((((((((rt0.c3)OR(vt1.c1)))OR(rt0.c4)))AND(vt1.c0)))AND(vt1.c1))) AND (CASE rt0.c1  WHEN rt0.c1 THEN vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4))) NOT BETWEEN (((((((((rt0.c3)OR(vt1.c1)))OR(rt0.c4)))AND(vt1.c0)))AND(vt1.c1))) AND (CASE rt0.c1  WHEN rt0.c1 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4))) NOT BETWEEN (((((((((rt0.c3)OR(vt1.c1)))OR(rt0.c4)))AND(vt1.c0)))AND(vt1.c1))) AND (CASE rt0.c1  WHEN rt0.c1 THEN vt1.c1 END)));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN NULL WHEN LIKE(rt0.c2, rt0.c1, '1') THEN (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) WHEN ((rt0.c4) IS TRUE) THEN (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS BLOB) THEN NULL WHEN LIKE(rt0.c2, rt0.c1, '1') THEN (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) WHEN ((rt0.c4) IS TRUE) THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN NULL WHEN LIKE(rt0.c2, rt0.c1, '1') THEN (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) WHEN ((rt0.c4) IS TRUE) THEN (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS BLOB) THEN NULL WHEN LIKE(rt0.c2, rt0.c1, '1') THEN (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) WHEN ((rt0.c4) IS TRUE) THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN NULL WHEN LIKE(rt0.c2, rt0.c1, '1') THEN (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) WHEN ((rt0.c4) IS TRUE) THEN (rt0.c1 IN ()) END);
SELECT * FROM rt0, vt1, t0 WHERE (CASE RTRIM(vt1.c0)  WHEN ((((((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c3)))OR('864317444')))AND(t0.c72)))OR(0X33847004)))OR(rt0.c0)) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) ELSE ((rt0.c4) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE RTRIM(vt1.c0)  WHEN ((((((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c3)))OR('864317444')))AND(t0.c72)))OR(0X33847004)))OR(rt0.c0)) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) ELSE ((rt0.c4) NOT NULL) END) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT * FROM rt0, vt1, t0 WHERE (CASE RTRIM(vt1.c0)  WHEN ((((((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c3)))OR('864317444')))AND(t0.c72)))OR(0X33847004)))OR(rt0.c0)) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) ELSE ((rt0.c4) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE RTRIM(vt1.c0)  WHEN ((((((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c3)))OR('864317444')))AND(t0.c72)))OR(0X33847004)))OR(rt0.c0)) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) ELSE ((rt0.c4) NOT NULL) END) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT * FROM rt0, vt1, t0 WHERE (CASE RTRIM(vt1.c0)  WHEN ((((((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c3)))OR('864317444')))AND(t0.c72)))OR(0X33847004)))OR(rt0.c0)) THEN (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) ELSE ((rt0.c4) NOT NULL) END);
SELECT * FROM t0, vt1, rt0 NOT INDEXED WHERE (NULLIF(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, vt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, vt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT * FROM t0, vt1, rt0 NOT INDEXED WHERE (NULLIF(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, vt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, vt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT * FROM t0, vt1, rt0 NOT INDEXED WHERE (NULLIF(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, vt1.c0 COLLATE BINARY));
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c0 ASC  NULLS LAST, ((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)<((vt1.c1 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC  NULLS LAST, ((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)<((vt1.c1 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c0 ASC  NULLS LAST, ((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)<((vt1.c1 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC  NULLS LAST, ((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)<((vt1.c1 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c0 ASC  NULLS LAST, ((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)<((vt1.c1 IN ()))) ASC  NULLS FIRST;
SELECT * FROM t0, vt1 LEFT OUTER JOIN rt0 ON QUOTE((+ (rt0.c0))) WHERE (UPPER(CAST(rt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CAST(rt0.c0 AS INTEGER))) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN rt0 ON QUOTE((+ (rt0.c0))));
SELECT * FROM t0, vt1 LEFT OUTER JOIN rt0 ON QUOTE((+ (rt0.c0))) WHERE (UPPER(CAST(rt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CAST(rt0.c0 AS INTEGER))) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN rt0 ON QUOTE((+ (rt0.c0))));
SELECT * FROM t0, vt1 LEFT OUTER JOIN rt0 ON QUOTE((+ (rt0.c0))) WHERE (UPPER(CAST(rt0.c0 AS INTEGER)));
SELECT * FROM rt0 WHERE ((((NULL IN (rt0.c4, rt0.c3)))%(rt0.c3))) ORDER BY ((rt0.c3 COLLATE RTRIM) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN (rt0.c4, rt0.c3)))%(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3 COLLATE RTRIM) NOTNULL));
SELECT * FROM rt0 WHERE ((((NULL IN (rt0.c4, rt0.c3)))%(rt0.c3))) ORDER BY ((rt0.c3 COLLATE RTRIM) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN (rt0.c4, rt0.c3)))%(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3 COLLATE RTRIM) NOTNULL));
SELECT * FROM rt0 WHERE ((((NULL IN (rt0.c4, rt0.c3)))%(rt0.c3))) ORDER BY ((rt0.c3 COLLATE RTRIM) NOTNULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c0)))*(rt0.c4))) ORDER BY (((rt0.c4 IN (rt0.c4))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c0)))*(rt0.c4))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c4 IN (rt0.c4))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c0)))*(rt0.c4))) ORDER BY (((rt0.c4 IN (rt0.c4))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c0)))*(rt0.c4))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c4 IN (rt0.c4))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c0)))*(rt0.c4))) ORDER BY (((rt0.c4 IN (rt0.c4))) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS INTEGER));
SELECT ALL * FROM vt1 WHERE (((vt1.c0)-(vt1.c1))) ORDER BY ((((NOT (vt1.c1)), (- (vt1.c1)), LIKELY(DISTINCT vt1.c1)))<>((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)), vt1.c0 COLLATE NOCASE, (vt1.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)-(vt1.c1))) IS TRUE)  as count FROM vt1 ORDER BY ((((NOT (vt1.c1)), (- (vt1.c1)), LIKELY(DISTINCT vt1.c1)))!=((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)), vt1.c0 COLLATE NOCASE, (vt1.c0 IN ())))) DESC);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)-(vt1.c1))) ORDER BY ((((NOT (vt1.c1)), (- (vt1.c1)), LIKELY(DISTINCT vt1.c1)))<>((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)), vt1.c0 COLLATE NOCASE, (vt1.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)-(vt1.c1))) IS TRUE)  as count FROM vt1 ORDER BY ((((NOT (vt1.c1)), (- (vt1.c1)), LIKELY(DISTINCT vt1.c1)))!=((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)), vt1.c0 COLLATE NOCASE, (vt1.c0 IN ())))) DESC);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)-(vt1.c1))) ORDER BY ((((NOT (vt1.c1)), (- (vt1.c1)), LIKELY(DISTINCT vt1.c1)))<>((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)), vt1.c0 COLLATE NOCASE, (vt1.c0 IN ())))) DESC;
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (((((rt0.c0) NOT NULL))|(CASE WHEN rt0.c3 THEN t0.c72 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL))|(CASE WHEN rt0.c3 THEN t0.c72 ELSE vt1.c1 END))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (((((rt0.c0) NOT NULL))|(CASE WHEN rt0.c3 THEN t0.c72 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL))|(CASE WHEN rt0.c3 THEN t0.c72 ELSE vt1.c1 END))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (((((rt0.c0) NOT NULL))|(CASE WHEN rt0.c3 THEN t0.c72 ELSE vt1.c1 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c72)OR(x'f145')))AND('778545287'))) NOT BETWEEN ((t0.c72 IN ())) AND (((t0.c72)/(0.8125046869055103)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c72)OR(x'f145')))AND('778545287'))) NOT BETWEEN ((t0.c72 IN ())) AND (((t0.c72)/(0.8125046869055103))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c72)OR(x'f145')))AND('778545287'))) NOT BETWEEN ((t0.c72 IN ())) AND (((t0.c72)/(0.8125046869055103)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c72)OR(x'f145')))AND('778545287'))) NOT BETWEEN ((t0.c72 IN ())) AND (((t0.c72)/(0.8125046869055103))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c72)OR(x'f145')))AND('778545287'))) NOT BETWEEN ((t0.c72 IN ())) AND (((t0.c72)/(0.8125046869055103)))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((x'3a0bc37628d4') IS TRUE))AND(((x'') IS FALSE))))AND(TYPEOF(DISTINCT vt1.c0))) WHERE (CAST(NULL AS TEXT)) ORDER BY ((LAST_INSERT_ROWID())IS NOT(x'64a4')) DESC  NULLS LAST, ((((rt0.c0) BETWEEN (rt0.c1) AND (vt1.c0))) ISNULL)  NULLS LAST, (((vt1.c0, rt0.c0, rt0.c1)) BETWEEN ((CAST(vt1.c1 AS TEXT), ((vt1.c0)=(x'')), CASE '479312618'  WHEN rt0.c0 THEN rt0.c4 ELSE '1387425011' END)) AND ((CASE vt1.c1  WHEN rt0.c0 THEN x'd440' ELSE vt1.c1 END, x'816e', json_remove(vt1.c0, rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((x'3a0bc37628d4') IS TRUE))AND(((x'') IS FALSE))))AND(TYPEOF(DISTINCT vt1.c0))) ORDER BY ((LAST_INSERT_ROWID())IS NOT(x'64a4')) DESC  NULLS LAST, ((((rt0.c0) BETWEEN (rt0.c1) AND (vt1.c0))) ISNULL)  NULLS LAST, (((vt1.c0, rt0.c0, rt0.c1)) BETWEEN ((CAST(vt1.c1 AS TEXT), ((vt1.c0)==(x'')), CASE '479312618'  WHEN rt0.c0 THEN rt0.c4 ELSE '1387425011' END)) AND ((CASE vt1.c1  WHEN rt0.c0 THEN x'd440' ELSE vt1.c1 END, x'816e', json_remove(vt1.c0, rt0.c0))))  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((x'3a0bc37628d4') IS TRUE))AND(((x'') IS FALSE))))AND(TYPEOF(DISTINCT vt1.c0))) WHERE (CAST(NULL AS TEXT)) ORDER BY ((LAST_INSERT_ROWID())IS NOT(x'64a4')) DESC  NULLS LAST, ((((rt0.c0) BETWEEN (rt0.c1) AND (vt1.c0))) ISNULL)  NULLS LAST, (((vt1.c0, rt0.c0, rt0.c1)) BETWEEN ((CAST(vt1.c1 AS TEXT), ((vt1.c0)=(x'')), CASE '479312618'  WHEN rt0.c0 THEN rt0.c4 ELSE '1387425011' END)) AND ((CASE vt1.c1  WHEN rt0.c0 THEN x'd440' ELSE vt1.c1 END, x'816e', json_remove(vt1.c0, rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((x'3a0bc37628d4') IS TRUE))AND(((x'') IS FALSE))))AND(TYPEOF(DISTINCT vt1.c0))) ORDER BY ((LAST_INSERT_ROWID())IS NOT(x'64a4')) DESC  NULLS LAST, ((((rt0.c0) BETWEEN (rt0.c1) AND (vt1.c0))) ISNULL)  NULLS LAST, (((vt1.c0, rt0.c0, rt0.c1)) BETWEEN ((CAST(vt1.c1 AS TEXT), ((vt1.c0)==(x'')), CASE '479312618'  WHEN rt0.c0 THEN rt0.c4 ELSE '1387425011' END)) AND ((CASE vt1.c1  WHEN rt0.c0 THEN x'd440' ELSE vt1.c1 END, x'816e', json_remove(vt1.c0, rt0.c0))))  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((x'3a0bc37628d4') IS TRUE))AND(((x'') IS FALSE))))AND(TYPEOF(DISTINCT vt1.c0))) WHERE (CAST(NULL AS TEXT)) ORDER BY ((LAST_INSERT_ROWID())IS NOT(x'64a4')) DESC  NULLS LAST, ((((rt0.c0) BETWEEN (rt0.c1) AND (vt1.c0))) ISNULL)  NULLS LAST, (((vt1.c0, rt0.c0, rt0.c1)) BETWEEN ((CAST(vt1.c1 AS TEXT), ((vt1.c0)=(x'')), CASE '479312618'  WHEN rt0.c0 THEN rt0.c4 ELSE '1387425011' END)) AND ((CASE vt1.c1  WHEN rt0.c0 THEN x'd440' ELSE vt1.c1 END, x'816e', json_remove(vt1.c0, rt0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c3)))*(NULL)) WHERE (CASE rt0.c1  WHEN t0.c72 THEN rt0.c4 END COLLATE BINARY) ORDER BY (((rt0.c1)) BETWEEN (((- (rt0.c2)))) AND (((rt0.c0 IN ('T*')))));
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN t0.c72 THEN rt0.c4 END COLLATE BINARY) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c3)))*(NULL)) ORDER BY (((rt0.c1)) BETWEEN (((- (rt0.c2)))) AND (((rt0.c0 IN ('T*'))))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c3)))*(NULL)) WHERE (CASE rt0.c1  WHEN t0.c72 THEN rt0.c4 END COLLATE BINARY) ORDER BY (((rt0.c1)) BETWEEN (((- (rt0.c2)))) AND (((rt0.c0 IN ('T*')))));
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN t0.c72 THEN rt0.c4 END COLLATE BINARY) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c3)))*(NULL)) ORDER BY (((rt0.c1)) BETWEEN (((- (rt0.c2)))) AND (((rt0.c0 IN ('T*'))))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c3)))*(NULL)) WHERE (CASE rt0.c1  WHEN t0.c72 THEN rt0.c4 END COLLATE BINARY) ORDER BY (((rt0.c1)) BETWEEN (((- (rt0.c2)))) AND (((rt0.c0 IN ('T*')))));
SELECT * FROM rt0, vt1, t0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT * FROM rt0, vt1, t0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT * FROM rt0, vt1, t0 WHERE (rt0.c3);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (COALESCE(DISTINCT ((vt1.c1) NOTNULL), vt1.c0, (- (vt1.c0)), ((t0.c72)<>(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((vt1.c1) NOTNULL), vt1.c0, (- (vt1.c0)), ((t0.c72)!=(vt1.c1)))) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (COALESCE(DISTINCT ((vt1.c1) NOTNULL), vt1.c0, (- (vt1.c0)), ((t0.c72)<>(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((vt1.c1) NOTNULL), vt1.c0, (- (vt1.c0)), ((t0.c72)!=(vt1.c1)))) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (COALESCE(DISTINCT ((vt1.c1) NOTNULL), vt1.c0, (- (vt1.c0)), ((t0.c72)<>(vt1.c1))));
SELECT * FROM rt0, vt1, t0 WHERE (CASE rt0.c0  WHEN ((rt0.c2) BETWEEN (vt1.c1) AND (t0.c72)) THEN ((vt1.c1)<(rt0.c0)) ELSE ((x'')/(rt0.c3)) END) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN ((rt0.c2) BETWEEN (vt1.c1) AND (t0.c72)) THEN ((vt1.c1)<(rt0.c0)) ELSE ((x'')/(rt0.c3)) END) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY x'' ASC  NULLS LAST);
SELECT * FROM rt0, vt1, t0 WHERE (CASE rt0.c0  WHEN ((rt0.c2) BETWEEN (vt1.c1) AND (t0.c72)) THEN ((vt1.c1)<(rt0.c0)) ELSE ((x'')/(rt0.c3)) END) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN ((rt0.c2) BETWEEN (vt1.c1) AND (t0.c72)) THEN ((vt1.c1)<(rt0.c0)) ELSE ((x'')/(rt0.c3)) END) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY x'' ASC  NULLS LAST);
SELECT * FROM rt0, vt1, t0 WHERE (CASE rt0.c0  WHEN ((rt0.c2) BETWEEN (vt1.c1) AND (t0.c72)) THEN ((vt1.c1)<(rt0.c0)) ELSE ((x'')/(rt0.c3)) END) ORDER BY x'' ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE WHEN (rt0.c3 IN ()) THEN ((rt0.c4)OR(rt0.c4)) ELSE UNLIKELY(rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c3 IN ()) THEN ((rt0.c4)OR(rt0.c4)) ELSE UNLIKELY(rt0.c0) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN (rt0.c3 IN ()) THEN ((rt0.c4)OR(rt0.c4)) ELSE UNLIKELY(rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c3 IN ()) THEN ((rt0.c4)OR(rt0.c4)) ELSE UNLIKELY(rt0.c0) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN (rt0.c3 IN ()) THEN ((rt0.c4)OR(rt0.c4)) ELSE UNLIKELY(rt0.c0) END);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE ((((vt1.c1))!=((((((((((t0.c72)OR(vt1.c0)))AND(vt1.c1)))AND(t0.c72)))AND(t0.c72)))))) ORDER BY CAST(x'' AS NUMERIC)  NULLS FIRST, ((((vt1.c1)&(vt1.c0)))>>(((t0.c72)>=(NULL)))) DESC  NULLS LAST, CASE WHEN ((vt1.c0)<(vt1.c1)) THEN (- (t0.c72)) WHEN vt1.c1 THEN (+ (vt1.c0)) WHEN (NOT (vt1.c0)) THEN ((t0.c72)/(t0.c72)) WHEN ((vt1.c1) ISNULL) THEN ((t0.c72)OR(vt1.c0)) WHEN ((vt1.c0)||(0.7749051388956624)) THEN TOTAL_CHANGES() ELSE LTRIM(vt1.c1, '') END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1))!=((((((((((t0.c72)OR(vt1.c0)))AND(vt1.c1)))AND(t0.c72)))AND(t0.c72)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY CAST(x'' AS NUMERIC)  NULLS FIRST, ((((vt1.c1)&(vt1.c0)))>>(((t0.c72)>=(NULL)))) DESC  NULLS LAST, CASE WHEN ((vt1.c0)<(vt1.c1)) THEN (- (t0.c72)) WHEN vt1.c1 THEN (+ (vt1.c0)) WHEN (NOT (vt1.c0)) THEN ((t0.c72)/(t0.c72)) WHEN ((vt1.c1) ISNULL) THEN ((t0.c72)OR(vt1.c0)) WHEN ((vt1.c0)||(0.7749051388956624)) THEN TOTAL_CHANGES() ELSE LTRIM(vt1.c1, '') END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE ((((vt1.c1))!=((((((((((t0.c72)OR(vt1.c0)))AND(vt1.c1)))AND(t0.c72)))AND(t0.c72)))))) ORDER BY CAST(x'' AS NUMERIC)  NULLS FIRST, ((((vt1.c1)&(vt1.c0)))>>(((t0.c72)>=(NULL)))) DESC  NULLS LAST, CASE WHEN ((vt1.c0)<(vt1.c1)) THEN (- (t0.c72)) WHEN vt1.c1 THEN (+ (vt1.c0)) WHEN (NOT (vt1.c0)) THEN ((t0.c72)/(t0.c72)) WHEN ((vt1.c1) ISNULL) THEN ((t0.c72)OR(vt1.c0)) WHEN ((vt1.c0)||(0.7749051388956624)) THEN TOTAL_CHANGES() ELSE LTRIM(vt1.c1, '') END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1))!=((((((((((t0.c72)OR(vt1.c0)))AND(vt1.c1)))AND(t0.c72)))AND(t0.c72)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY CAST(x'' AS NUMERIC)  NULLS FIRST, ((((vt1.c1)&(vt1.c0)))>>(((t0.c72)>=(NULL)))) DESC  NULLS LAST, CASE WHEN ((vt1.c0)<(vt1.c1)) THEN (- (t0.c72)) WHEN vt1.c1 THEN (+ (vt1.c0)) WHEN (NOT (vt1.c0)) THEN ((t0.c72)/(t0.c72)) WHEN ((vt1.c1) ISNULL) THEN ((t0.c72)OR(vt1.c0)) WHEN ((vt1.c0)||(0.7749051388956624)) THEN TOTAL_CHANGES() ELSE LTRIM(vt1.c1, '') END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE ((((vt1.c1))!=((((((((((t0.c72)OR(vt1.c0)))AND(vt1.c1)))AND(t0.c72)))AND(t0.c72)))))) ORDER BY CAST(x'' AS NUMERIC)  NULLS FIRST, ((((vt1.c1)&(vt1.c0)))>>(((t0.c72)>=(NULL)))) DESC  NULLS LAST, CASE WHEN ((vt1.c0)<(vt1.c1)) THEN (- (t0.c72)) WHEN vt1.c1 THEN (+ (vt1.c0)) WHEN (NOT (vt1.c0)) THEN ((t0.c72)/(t0.c72)) WHEN ((vt1.c1) ISNULL) THEN ((t0.c72)OR(vt1.c0)) WHEN ((vt1.c0)||(0.7749051388956624)) THEN TOTAL_CHANGES() ELSE LTRIM(vt1.c1, '') END ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt1 WHERE (ABS(((vt1.c0)-(x''))));
SELECT SUM(count) FROM (SELECT ((ABS(((vt1.c0)-(x'')))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (ABS(((vt1.c0)-(x''))));
SELECT SUM(count) FROM (SELECT ((ABS(((vt1.c0)-(x'')))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (ABS(((vt1.c0)-(x''))));
SELECT * FROM rt0 WHERE ((((LOWER(rt0.c1), (rt0.c1 IN ()), (((rt0.c3, rt0.c1, rt0.c4))=((rt0.c3, rt0.c3, rt0.c0))), ((rt0.c4)<<(rt0.c4)), (((rt0.c0, 0.8784947089742818, rt0.c1))<=((rt0.c1, rt0.c3, rt0.c1)))))>=(((NOT (rt0.c4)), rt0.c2 COLLATE RTRIM, (((rt0.c2))>=((rt0.c1))), rt0.c1 COLLATE NOCASE, CASE rt0.c4  WHEN rt0.c1 THEN NULL END))));
SELECT SUM(count) FROM (SELECT (((((LOWER(rt0.c1), (rt0.c1 IN ()), (((rt0.c3, rt0.c1, rt0.c4))==((rt0.c3, rt0.c3, rt0.c0))), ((rt0.c4)<<(rt0.c4)), (((rt0.c0, 0.8784947089742818, rt0.c1))<=((rt0.c1, rt0.c3, rt0.c1)))))>=(((NOT (rt0.c4)), rt0.c2 COLLATE RTRIM, (((rt0.c2))>=((rt0.c1))), rt0.c1 COLLATE NOCASE, CASE rt0.c4  WHEN rt0.c1 THEN NULL END)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((LOWER(rt0.c1), (rt0.c1 IN ()), (((rt0.c3, rt0.c1, rt0.c4))=((rt0.c3, rt0.c3, rt0.c0))), ((rt0.c4)<<(rt0.c4)), (((rt0.c0, 0.8784947089742818, rt0.c1))<=((rt0.c1, rt0.c3, rt0.c1)))))>=(((NOT (rt0.c4)), rt0.c2 COLLATE RTRIM, (((rt0.c2))>=((rt0.c1))), rt0.c1 COLLATE NOCASE, CASE rt0.c4  WHEN rt0.c1 THEN NULL END))));
SELECT SUM(count) FROM (SELECT (((((LOWER(rt0.c1), (rt0.c1 IN ()), (((rt0.c3, rt0.c1, rt0.c4))==((rt0.c3, rt0.c3, rt0.c0))), ((rt0.c4)<<(rt0.c4)), (((rt0.c0, 0.8784947089742818, rt0.c1))<=((rt0.c1, rt0.c3, rt0.c1)))))>=(((NOT (rt0.c4)), rt0.c2 COLLATE RTRIM, (((rt0.c2))>=((rt0.c1))), rt0.c1 COLLATE NOCASE, CASE rt0.c4  WHEN rt0.c1 THEN NULL END)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((LOWER(rt0.c1), (rt0.c1 IN ()), (((rt0.c3, rt0.c1, rt0.c4))=((rt0.c3, rt0.c3, rt0.c0))), ((rt0.c4)<<(rt0.c4)), (((rt0.c0, 0.8784947089742818, rt0.c1))<=((rt0.c1, rt0.c3, rt0.c1)))))>=(((NOT (rt0.c4)), rt0.c2 COLLATE RTRIM, (((rt0.c2))>=((rt0.c1))), rt0.c1 COLLATE NOCASE, CASE rt0.c4  WHEN rt0.c1 THEN NULL END))));
SELECT ALL * FROM t0 NATURAL JOIN vt1 WHERE (((((json_quote(vt1.c1))AND(((vt1.c0) NOTNULL))))OR(CASE WHEN vt1.c0 THEN t0.c72 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((json_quote(vt1.c1))AND(((vt1.c0) NOTNULL))))OR(CASE WHEN vt1.c0 THEN t0.c72 ELSE vt1.c1 END))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT ALL * FROM t0 NATURAL JOIN vt1 WHERE (((((json_quote(vt1.c1))AND(((vt1.c0) NOTNULL))))OR(CASE WHEN vt1.c0 THEN t0.c72 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((json_quote(vt1.c1))AND(((vt1.c0) NOTNULL))))OR(CASE WHEN vt1.c0 THEN t0.c72 ELSE vt1.c1 END))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT ALL * FROM t0 NATURAL JOIN vt1 WHERE (((((json_quote(vt1.c1))AND(((vt1.c0) NOTNULL))))OR(CASE WHEN vt1.c0 THEN t0.c72 ELSE vt1.c1 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((vt1.c1) BETWEEN (x'') AND (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((vt1.c1) BETWEEN (x'') AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((vt1.c1) BETWEEN (x'') AND (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((vt1.c1) BETWEEN (x'') AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((vt1.c1) BETWEEN (x'') AND (vt1.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER))%((NOT (rt0.c1))))) ORDER BY (~ ((NOT (rt0.c1))))  NULLS FIRST, (~ (((vt1.c1)GLOB(rt0.c1))))  NULLS LAST, CASE (rt0.c4 IN (vt1.c1))  WHEN (rt0.c2 IN ()) THEN ((rt0.c4)>>(vt1.c1)) ELSE ((rt0.c0) NOTNULL) END DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS INTEGER))%((NOT (rt0.c1))))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY (~ ((NOT (rt0.c1))))  NULLS FIRST, (~ (((vt1.c1)GLOB(rt0.c1))))  NULLS LAST, CASE (rt0.c4 IN (vt1.c1))  WHEN (rt0.c2 IN ()) THEN ((rt0.c4)>>(vt1.c1)) ELSE ((rt0.c0) NOTNULL) END DESC);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER))%((NOT (rt0.c1))))) ORDER BY (~ ((NOT (rt0.c1))))  NULLS FIRST, (~ (((vt1.c1)GLOB(rt0.c1))))  NULLS LAST, CASE (rt0.c4 IN (vt1.c1))  WHEN (rt0.c2 IN ()) THEN ((rt0.c4)>>(vt1.c1)) ELSE ((rt0.c0) NOTNULL) END DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS INTEGER))%((NOT (rt0.c1))))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY (~ ((NOT (rt0.c1))))  NULLS FIRST, (~ (((vt1.c1)GLOB(rt0.c1))))  NULLS LAST, CASE (rt0.c4 IN (vt1.c1))  WHEN (rt0.c2 IN ()) THEN ((rt0.c4)>>(vt1.c1)) ELSE ((rt0.c0) NOTNULL) END DESC);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER))%((NOT (rt0.c1))))) ORDER BY (~ ((NOT (rt0.c1))))  NULLS FIRST, (~ (((vt1.c1)GLOB(rt0.c1))))  NULLS LAST, CASE (rt0.c4 IN (vt1.c1))  WHEN (rt0.c2 IN ()) THEN ((rt0.c4)>>(vt1.c1)) ELSE ((rt0.c0) NOTNULL) END DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('3&ma^n^%뉊')+(rt0.c4))) NOT BETWEEN (((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3))) AND (CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((+ (NULL)) IN (CASE WHEN rt0.c3 THEN rt0.c3 END))  NULLS LAST, ((CAST(rt0.c3 AS NUMERIC)) IS FALSE) ASC, MIN((rt0.c4 IN ()), (+ (rt0.c3)), rt0.c0, CASE WHEN rt0.c4 THEN x'' END);
SELECT SUM(count) FROM (SELECT (((((('3&ma^n^%뉊')+(rt0.c4))) NOT BETWEEN (((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3))) AND (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY ((+ (NULL)) IN (CASE WHEN rt0.c3 THEN rt0.c3 END))  NULLS LAST, ((CAST(rt0.c3 AS NUMERIC)) IS FALSE) ASC, MIN((rt0.c4 IN ()), (+ (rt0.c3)), rt0.c0, CASE WHEN rt0.c4 THEN x'' END));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('3&ma^n^%뉊')+(rt0.c4))) NOT BETWEEN (((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3))) AND (CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((+ (NULL)) IN (CASE WHEN rt0.c3 THEN rt0.c3 END))  NULLS LAST, ((CAST(rt0.c3 AS NUMERIC)) IS FALSE) ASC, MIN((rt0.c4 IN ()), (+ (rt0.c3)), rt0.c0, CASE WHEN rt0.c4 THEN x'' END);
SELECT SUM(count) FROM (SELECT (((((('3&ma^n^%뉊')+(rt0.c4))) NOT BETWEEN (((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3))) AND (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY ((+ (NULL)) IN (CASE WHEN rt0.c3 THEN rt0.c3 END))  NULLS LAST, ((CAST(rt0.c3 AS NUMERIC)) IS FALSE) ASC, MIN((rt0.c4 IN ()), (+ (rt0.c3)), rt0.c0, CASE WHEN rt0.c4 THEN x'' END));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('3&ma^n^%뉊')+(rt0.c4))) NOT BETWEEN (((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3))) AND (CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((+ (NULL)) IN (CASE WHEN rt0.c3 THEN rt0.c3 END))  NULLS LAST, ((CAST(rt0.c3 AS NUMERIC)) IS FALSE) ASC, MIN((rt0.c4 IN ()), (+ (rt0.c3)), rt0.c0, CASE WHEN rt0.c4 THEN x'' END);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON ((((rt0.c4) NOTNULL))&(CAST(vt1.c1 AS BLOB))) RIGHT OUTER JOIN rt0 ON (((+ (rt0.c3))) ISNULL) WHERE (rt0.c0) ORDER BY CASE WHEN NULL THEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c1 END ELSE ((rt0.c0) IS FALSE) END DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((((rt0.c4) NOTNULL))&(CAST(vt1.c1 AS BLOB))) RIGHT OUTER JOIN rt0 ON (((+ (rt0.c3))) ISNULL) ORDER BY CASE WHEN NULL THEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c1 END ELSE ((rt0.c0) IS FALSE) END DESC);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON ((((rt0.c4) NOTNULL))&(CAST(vt1.c1 AS BLOB))) RIGHT OUTER JOIN rt0 ON (((+ (rt0.c3))) ISNULL) WHERE (rt0.c0) ORDER BY CASE WHEN NULL THEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c1 END ELSE ((rt0.c0) IS FALSE) END DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((((rt0.c4) NOTNULL))&(CAST(vt1.c1 AS BLOB))) RIGHT OUTER JOIN rt0 ON (((+ (rt0.c3))) ISNULL) ORDER BY CASE WHEN NULL THEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c1 END ELSE ((rt0.c0) IS FALSE) END DESC);
SELECT * FROM vt1, t0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT * FROM vt1, t0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT * FROM vt1, t0, rt0 WHERE (rt0.c1);
SELECT ALL * FROM vt1, t0 CROSS JOIN rt0 ON CAST(((((rt0.c4)OR(rt0.c4)))AND(rt0.c1)) AS NUMERIC) WHERE ((((rt0.c4 IN ())) BETWEEN (0.5601157596039938) AND (CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4 IN ())) BETWEEN (0.5601157596039938) AND (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN rt0 ON CAST(((((rt0.c4)OR(rt0.c4)))AND(rt0.c1)) AS NUMERIC));
SELECT ALL * FROM vt1, t0 CROSS JOIN rt0 ON CAST(((((rt0.c4)OR(rt0.c4)))AND(rt0.c1)) AS NUMERIC) WHERE ((((rt0.c4 IN ())) BETWEEN (0.5601157596039938) AND (CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4 IN ())) BETWEEN (0.5601157596039938) AND (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN rt0 ON CAST(((((rt0.c4)OR(rt0.c4)))AND(rt0.c1)) AS NUMERIC));
SELECT ALL * FROM vt1, t0 CROSS JOIN rt0 ON CAST(((((rt0.c4)OR(rt0.c4)))AND(rt0.c1)) AS NUMERIC) WHERE ((((rt0.c4 IN ())) BETWEEN (0.5601157596039938) AND (CAST(vt1.c0 AS NUMERIC))));
SELECT COUNT(*) FROM rt0, t0 WHERE (((t0.c72) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c72) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NOT INDEXED, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((t0.c72) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c72) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NOT INDEXED, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((t0.c72) ISNULL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2 COLLATE RTRIM)AND(CAST(rt0.c0 AS TEXT))))OR(((((((((rt0.c1)OR(rt0.c4)))OR(x'')))AND(rt0.c1)))OR(t0.c72)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 COLLATE RTRIM)AND(CAST(rt0.c0 AS TEXT))))OR(((((((((rt0.c1)OR(rt0.c4)))OR(x'')))AND(rt0.c1)))OR(t0.c72))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2 COLLATE RTRIM)AND(CAST(rt0.c0 AS TEXT))))OR(((((((((rt0.c1)OR(rt0.c4)))OR(x'')))AND(rt0.c1)))OR(t0.c72)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 COLLATE RTRIM)AND(CAST(rt0.c0 AS TEXT))))OR(((((((((rt0.c1)OR(rt0.c4)))OR(x'')))AND(rt0.c1)))OR(t0.c72))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2 COLLATE RTRIM)AND(CAST(rt0.c0 AS TEXT))))OR(((((((((rt0.c1)OR(rt0.c4)))OR(x'')))AND(rt0.c1)))OR(t0.c72)))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON ((CASE rt0.c3  WHEN vt1.c0 THEN rt0.c0 END)/(((rt0.c4)%(vt1.c0)))) RIGHT OUTER JOIN rt0 ON (((- (vt1.c1)))%((((rt0.c0))==((rt0.c0))))) WHERE (rt0.c2) ORDER BY ((rt0.c4)<>(((((rt0.c1)OR(rt0.c0)))OR(0.7521416108240632)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((CASE rt0.c3  WHEN vt1.c0 THEN rt0.c0 END)/(((rt0.c4)%(vt1.c0)))) RIGHT OUTER JOIN rt0 ON (((- (vt1.c1)))%((((rt0.c0))==((rt0.c0))))) ORDER BY ((rt0.c4)!=(((((rt0.c1)OR(rt0.c0)))OR(0.7521416108240632)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON ((CASE rt0.c3  WHEN vt1.c0 THEN rt0.c0 END)/(((rt0.c4)%(vt1.c0)))) RIGHT OUTER JOIN rt0 ON (((- (vt1.c1)))%((((rt0.c0))==((rt0.c0))))) WHERE (rt0.c2) ORDER BY ((rt0.c4)<>(((((rt0.c1)OR(rt0.c0)))OR(0.7521416108240632)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((CASE rt0.c3  WHEN vt1.c0 THEN rt0.c0 END)/(((rt0.c4)%(vt1.c0)))) RIGHT OUTER JOIN rt0 ON (((- (vt1.c1)))%((((rt0.c0))==((rt0.c0))))) ORDER BY ((rt0.c4)!=(((((rt0.c1)OR(rt0.c0)))OR(0.7521416108240632)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4) IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4) IS FALSE) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4) IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4) IS FALSE) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4) IS FALSE) AS REAL));
SELECT ALL * FROM vt1, t0, rt0 WHERE (TYPEOF(NULL COLLATE RTRIM)) ORDER BY CAST((~ (vt1.c1)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(NULL COLLATE RTRIM)) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY CAST((~ (vt1.c1)) AS TEXT));
SELECT ALL * FROM vt1, t0, rt0 WHERE (TYPEOF(NULL COLLATE RTRIM)) ORDER BY CAST((~ (vt1.c1)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(NULL COLLATE RTRIM)) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY CAST((~ (vt1.c1)) AS TEXT));
SELECT ALL * FROM vt1, t0, rt0 WHERE (TYPEOF(NULL COLLATE RTRIM)) ORDER BY CAST((~ (vt1.c1)) AS TEXT);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON (((((+ (vt1.c1)))AND((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))))AND(0X52b26cf3)) FULL OUTER JOIN t0 ON ((0.8784947089742818)GLOB(GLOB(rt0.c4, vt1.c1))) WHERE (((((((rt0.c2)<<(rt0.c1)))OR((x'cc18' IN ()))))AND(((((((((((((rt0.c0)OR(rt0.c2)))OR(t0.c72)))OR(rt0.c0)))OR(rt0.c3)))OR(vt1.c0)))AND(rt0.c0))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)<<(rt0.c1)))OR((x'cc18' IN ()))))AND(((((((((((((rt0.c0)OR(rt0.c2)))OR(t0.c72)))OR(rt0.c0)))OR(rt0.c3)))OR(vt1.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (((((+ (vt1.c1)))AND((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))))AND(0x52b26cf3)) FULL OUTER JOIN t0 ON ((0.8784947089742818)GLOB(GLOB(rt0.c4, vt1.c1))) ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON (((((+ (vt1.c1)))AND((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))))AND(0X52b26cf3)) FULL OUTER JOIN t0 ON ((0.8784947089742818)GLOB(GLOB(rt0.c4, vt1.c1))) WHERE (((((((rt0.c2)<<(rt0.c1)))OR((x'cc18' IN ()))))AND(((((((((((((rt0.c0)OR(rt0.c2)))OR(t0.c72)))OR(rt0.c0)))OR(rt0.c3)))OR(vt1.c0)))AND(rt0.c0))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)<<(rt0.c1)))OR((x'cc18' IN ()))))AND(((((((((((((rt0.c0)OR(rt0.c2)))OR(t0.c72)))OR(rt0.c0)))OR(rt0.c3)))OR(vt1.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (((((+ (vt1.c1)))AND((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))))AND(0x52b26cf3)) FULL OUTER JOIN t0 ON ((0.8784947089742818)GLOB(GLOB(rt0.c4, vt1.c1))) ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON (((((+ (vt1.c1)))AND((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))))AND(0X52b26cf3)) FULL OUTER JOIN t0 ON ((0.8784947089742818)GLOB(GLOB(rt0.c4, vt1.c1))) WHERE (((((((rt0.c2)<<(rt0.c1)))OR((x'cc18' IN ()))))AND(((((((((((((rt0.c0)OR(rt0.c2)))OR(t0.c72)))OR(rt0.c0)))OR(rt0.c3)))OR(vt1.c0)))AND(rt0.c0))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1 WHERE (((CASE WHEN vt1.c1 THEN x'9827' WHEN rt0.c3 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END) BETWEEN (((rt0.c0) NOTNULL)) AND (((((rt0.c2)OR(rt0.c4)))AND(rt0.c2))))) ORDER BY (((rt0.c3 IN ())) NOT BETWEEN (((rt0.c4) IS TRUE)) AND (((vt1.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c1 THEN x'9827' WHEN rt0.c3 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END) BETWEEN (((rt0.c0) NOTNULL)) AND (((((rt0.c2)OR(rt0.c4)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1 ORDER BY (((rt0.c3 IN ())) NOT BETWEEN (((rt0.c4) IS TRUE)) AND (((vt1.c0) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1 WHERE (((CASE WHEN vt1.c1 THEN x'9827' WHEN rt0.c3 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END) BETWEEN (((rt0.c0) NOTNULL)) AND (((((rt0.c2)OR(rt0.c4)))AND(rt0.c2))))) ORDER BY (((rt0.c3 IN ())) NOT BETWEEN (((rt0.c4) IS TRUE)) AND (((vt1.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c1 THEN x'9827' WHEN rt0.c3 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END) BETWEEN (((rt0.c0) NOTNULL)) AND (((((rt0.c2)OR(rt0.c4)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1 ORDER BY (((rt0.c3 IN ())) NOT BETWEEN (((rt0.c4) IS TRUE)) AND (((vt1.c0) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1 WHERE (((CASE WHEN vt1.c1 THEN x'9827' WHEN rt0.c3 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END) BETWEEN (((rt0.c0) NOTNULL)) AND (((((rt0.c2)OR(rt0.c4)))AND(rt0.c2))))) ORDER BY (((rt0.c3 IN ())) NOT BETWEEN (((rt0.c4) IS TRUE)) AND (((vt1.c0) IS TRUE))) DESC;
SELECT COUNT(*) FROM rt0, t0 WHERE ((0Xffffffffc9b11ca9 IN ())) ORDER BY (~ (((((rt0.c4)OR(rt0.c2)))OR(t0.c72)))) DESC  NULLS FIRST, CAST(((rt0.c0) IS FALSE) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((0Xffffffffc9b11ca9 IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY (~ (((((rt0.c4)OR(rt0.c2)))OR(t0.c72)))) DESC  NULLS FIRST, CAST(((rt0.c0) IS FALSE) AS BLOB));
SELECT COUNT(*) FROM rt0, t0 WHERE ((0Xffffffffc9b11ca9 IN ())) ORDER BY (~ (((((rt0.c4)OR(rt0.c2)))OR(t0.c72)))) DESC  NULLS FIRST, CAST(((rt0.c0) IS FALSE) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((0Xffffffffc9b11ca9 IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY (~ (((((rt0.c4)OR(rt0.c2)))OR(t0.c72)))) DESC  NULLS FIRST, CAST(((rt0.c0) IS FALSE) AS BLOB));
SELECT COUNT(*) FROM rt0, t0 WHERE ((0Xffffffffc9b11ca9 IN ())) ORDER BY (~ (((((rt0.c4)OR(rt0.c2)))OR(t0.c72)))) DESC  NULLS FIRST, CAST(((rt0.c0) IS FALSE) AS BLOB);
SELECT * FROM rt0, t0, vt1 WHERE (0.40646339730288894) ORDER BY CASE ''  WHEN (((vt1.c0))<((rt0.c2))) THEN rt0.c3 WHEN x'' THEN (rt0.c3 IN ()) WHEN (~ (rt0.c1)) THEN ((rt0.c0) IS TRUE) ELSE (rt0.c0 IN ()) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.40646339730288894) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY CASE ''  WHEN (((vt1.c0))<((rt0.c2))) THEN rt0.c3 WHEN x'' THEN (rt0.c3 IN ()) WHEN (~ (rt0.c1)) THEN ((rt0.c0) IS TRUE) ELSE (rt0.c0 IN ()) END DESC  NULLS FIRST);
SELECT * FROM rt0, t0, vt1 WHERE (0.40646339730288894) ORDER BY CASE ''  WHEN (((vt1.c0))<((rt0.c2))) THEN rt0.c3 WHEN x'' THEN (rt0.c3 IN ()) WHEN (~ (rt0.c1)) THEN ((rt0.c0) IS TRUE) ELSE (rt0.c0 IN ()) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.40646339730288894) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY CASE ''  WHEN (((vt1.c0))<((rt0.c2))) THEN rt0.c3 WHEN x'' THEN (rt0.c3 IN ()) WHEN (~ (rt0.c1)) THEN ((rt0.c0) IS TRUE) ELSE (rt0.c0 IN ()) END DESC  NULLS FIRST);
SELECT * FROM rt0, t0, vt1 WHERE (0.40646339730288894) ORDER BY CASE ''  WHEN (((vt1.c0))<((rt0.c2))) THEN rt0.c3 WHEN x'' THEN (rt0.c3 IN ()) WHEN (~ (rt0.c1)) THEN ((rt0.c0) IS TRUE) ELSE (rt0.c0 IN ()) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1, rt0 NOT INDEXED WHERE ((rt0.c2 IN (rt0.c0, 0.6728500148434993)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN (rt0.c0, 0.6728500148434993)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 NOT INDEXED WHERE ((rt0.c2 IN (rt0.c0, 0.6728500148434993)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN (rt0.c0, 0.6728500148434993)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 NOT INDEXED WHERE ((rt0.c2 IN (rt0.c0, 0.6728500148434993)) COLLATE NOCASE);
SELECT ALL * FROM vt1, t0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (vt1.c1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c1) ORDER BY ((((((((((vt1.c0) NOTNULL))OR(((rt0.c0) NOT BETWEEN (x'') AND (vt1.c1)))))OR((- (rt0.c2)))))OR(CAST(rt0.c1 AS INTEGER))))OR(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((((vt1.c0) NOTNULL))OR(((rt0.c0) NOT BETWEEN (x'') AND (vt1.c1)))))OR((- (rt0.c2)))))OR(CAST(rt0.c1 AS INTEGER))))OR(rt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c1) ORDER BY ((((((((((vt1.c0) NOTNULL))OR(((rt0.c0) NOT BETWEEN (x'') AND (vt1.c1)))))OR((- (rt0.c2)))))OR(CAST(rt0.c1 AS INTEGER))))OR(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((((vt1.c0) NOTNULL))OR(((rt0.c0) NOT BETWEEN (x'') AND (vt1.c1)))))OR((- (rt0.c2)))))OR(CAST(rt0.c1 AS INTEGER))))OR(rt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c1) ORDER BY ((((((((((vt1.c0) NOTNULL))OR(((rt0.c0) NOT BETWEEN (x'') AND (vt1.c1)))))OR((- (rt0.c2)))))OR(CAST(rt0.c1 AS INTEGER))))OR(rt0.c0))  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1 WHERE (((((~ (vt1.c0))))==((CASE t0.c72  WHEN t0.c72 THEN t0.c72 ELSE vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt1.c0))))==((CASE t0.c72  WHEN t0.c72 THEN t0.c72 ELSE vt1.c0 END)))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((~ (vt1.c0))))==((CASE t0.c72  WHEN t0.c72 THEN t0.c72 ELSE vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt1.c0))))==((CASE t0.c72  WHEN t0.c72 THEN t0.c72 ELSE vt1.c0 END)))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((~ (vt1.c0))))==((CASE t0.c72  WHEN t0.c72 THEN t0.c72 ELSE vt1.c0 END))));
SELECT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))IS(CAST(rt0.c0 AS TEXT)))) ORDER BY ((((rt0.c0)>=(rt0.c3))) NOT BETWEEN ((NULL IN ())) AND (((rt0.c3) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))IS(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)>=(rt0.c3))) NOT BETWEEN ((NULL IN ())) AND (((rt0.c3) ISNULL))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))IS(CAST(rt0.c0 AS TEXT)))) ORDER BY ((((rt0.c0)>=(rt0.c3))) NOT BETWEEN ((NULL IN ())) AND (((rt0.c3) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))IS(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)>=(rt0.c3))) NOT BETWEEN ((NULL IN ())) AND (((rt0.c3) ISNULL))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))IS(CAST(rt0.c0 AS TEXT)))) ORDER BY ((((rt0.c0)>=(rt0.c3))) NOT BETWEEN ((NULL IN ())) AND (((rt0.c3) ISNULL))) ASC  NULLS FIRST;
SELECT * FROM t0, rt0 WHERE (x'') ORDER BY (((rt0.c3 IN ()))IS NOT(LIKE(rt0.c0, rt0.c4)))  NULLS LAST, (- (((((rt0.c3)OR(t0.c72)))AND(t0.c72)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c3 IN ()))IS NOT(LIKE(rt0.c0, rt0.c4)))  NULLS LAST, (- (((((rt0.c3)OR(t0.c72)))AND(t0.c72)))) ASC);
SELECT * FROM t0, rt0 WHERE (x'') ORDER BY (((rt0.c3 IN ()))IS NOT(LIKE(rt0.c0, rt0.c4)))  NULLS LAST, (- (((((rt0.c3)OR(t0.c72)))AND(t0.c72)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c3 IN ()))IS NOT(LIKE(rt0.c0, rt0.c4)))  NULLS LAST, (- (((((rt0.c3)OR(t0.c72)))AND(t0.c72)))) ASC);
SELECT * FROM t0, rt0 WHERE (x'') ORDER BY (((rt0.c3 IN ()))IS NOT(LIKE(rt0.c0, rt0.c4)))  NULLS LAST, (- (((((rt0.c3)OR(t0.c72)))AND(t0.c72)))) ASC;
SELECT ALL * FROM rt0, vt1 WHERE ((((x'' IN (rt0.c3))) BETWEEN (CAST(rt0.c4 AS BLOB)) AND (rt0.c4 COLLATE RTRIM))) ORDER BY 'T*' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'' IN (rt0.c3))) BETWEEN (CAST(rt0.c4 AS BLOB)) AND (rt0.c4 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1 ORDER BY 'T*' ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((((x'' IN (rt0.c3))) BETWEEN (CAST(rt0.c4 AS BLOB)) AND (rt0.c4 COLLATE RTRIM))) ORDER BY 'T*' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'' IN (rt0.c3))) BETWEEN (CAST(rt0.c4 AS BLOB)) AND (rt0.c4 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1 ORDER BY 'T*' ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((((x'' IN (rt0.c3))) BETWEEN (CAST(rt0.c4 AS BLOB)) AND (rt0.c4 COLLATE RTRIM))) ORDER BY 'T*' ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (CASE WHEN (vt1.c1 IN (vt1.c0)) THEN (- (vt1.c0)) END) ORDER BY (NULL IN (vt1.c1)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c1 IN (vt1.c0)) THEN (- (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (NULL IN (vt1.c1)) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (CASE WHEN (vt1.c1 IN (vt1.c0)) THEN (- (vt1.c0)) END) ORDER BY (NULL IN (vt1.c1)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c1 IN (vt1.c0)) THEN (- (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (NULL IN (vt1.c1)) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (CASE WHEN (vt1.c1 IN (vt1.c0)) THEN (- (vt1.c0)) END) ORDER BY (NULL IN (vt1.c1)) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c72) NOTNULL))GLOB(t0.c72 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c72) NOTNULL))GLOB(t0.c72 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c72) NOTNULL))GLOB(t0.c72 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c72) NOTNULL))GLOB(t0.c72 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c72) NOTNULL))GLOB(t0.c72 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (t0.c72))) ORDER BY ((((t0.c72)&(t0.c72))) NOT BETWEEN (0.5601157596039938) AND (((t0.c72)IS NOT(t0.c72)))) DESC, ((t0.c72 IN (t0.c72)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c72))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c72)&(t0.c72))) NOT BETWEEN (0.5601157596039938) AND (((t0.c72)IS NOT(t0.c72)))) DESC, ((t0.c72 IN (t0.c72)) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (t0.c72))) ORDER BY ((((t0.c72)&(t0.c72))) NOT BETWEEN (0.5601157596039938) AND (((t0.c72)IS NOT(t0.c72)))) DESC, ((t0.c72 IN (t0.c72)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c72))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c72)&(t0.c72))) NOT BETWEEN (0.5601157596039938) AND (((t0.c72)IS NOT(t0.c72)))) DESC, ((t0.c72 IN (t0.c72)) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (t0.c72))) ORDER BY ((((t0.c72)&(t0.c72))) NOT BETWEEN (0.5601157596039938) AND (((t0.c72)IS NOT(t0.c72)))) DESC, ((t0.c72 IN (t0.c72)) IN ());
SELECT COUNT(*) FROM vt1, rt0 WHERE (((rt0.c4) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4) NOT NULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((rt0.c4) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4) NOT NULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((rt0.c4) NOT NULL));
SELECT ALL * FROM rt0, t0 WHERE (TOTAL_CHANGES() COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES() COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (TOTAL_CHANGES() COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES() COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (TOTAL_CHANGES() COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON ((((t0.c72) BETWEEN (vt1.c0) AND (t0.c72))) NOTNULL) WHERE ('953200406');
SELECT SUM(count) FROM (SELECT ALL (('953200406') IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((((t0.c72) BETWEEN (vt1.c0) AND (t0.c72))) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON ((((t0.c72) BETWEEN (vt1.c0) AND (t0.c72))) NOTNULL) WHERE ('953200406');
SELECT SUM(count) FROM (SELECT ALL (('953200406') IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((((t0.c72) BETWEEN (vt1.c0) AND (t0.c72))) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON ((((t0.c72) BETWEEN (vt1.c0) AND (t0.c72))) NOTNULL) WHERE ('953200406');
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)OR((+ (vt1.c1)))))OR((+ (-7.73143135E8)))))OR(((vt1.c1) IS FALSE))))AND(TYPEOF(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)OR((+ (vt1.c1)))))OR((+ (-7.73143135E8)))))OR(((vt1.c1) IS FALSE))))AND(TYPEOF(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)OR((+ (vt1.c1)))))OR((+ (-7.73143135E8)))))OR(((vt1.c1) IS FALSE))))AND(TYPEOF(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)OR((+ (vt1.c1)))))OR((+ (-7.73143135E8)))))OR(((vt1.c1) IS FALSE))))AND(TYPEOF(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)OR((+ (vt1.c1)))))OR((+ (-7.73143135E8)))))OR(((vt1.c1) IS FALSE))))AND(TYPEOF(DISTINCT vt1.c0))));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE (((CAST(rt0.c0 AS TEXT))LIKE(0.7585931802023685)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT))LIKE(0.7585931802023685))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE (((CAST(rt0.c0 AS TEXT))LIKE(0.7585931802023685)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT))LIKE(0.7585931802023685))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE (((CAST(rt0.c0 AS TEXT))LIKE(0.7585931802023685)));
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN t0 ON highlight(UPPER(rt0.c3), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END, ((vt1.c1)>=(vt1.c1)), NULLIF(t0.c72, vt1.c1)) WHERE (((((((((((((0.4237139789184713)OR(vt1.c1)))AND(rt0.c4)))AND(((vt1.c0) NOTNULL))))OR(((rt0.c0)IS(rt0.c3)))))AND((- (vt1.c1)))))OR(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((((((((((((0.4237139789184713)OR(vt1.c1)))AND(rt0.c4)))AND(((vt1.c0) NOTNULL))))OR(((rt0.c0)IS(rt0.c3)))))AND((- (vt1.c1)))))OR(rt0.c3))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN t0 ON highlight(UPPER(rt0.c3), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END, ((vt1.c1)>=(vt1.c1)), NULLIF(t0.c72, vt1.c1)));
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN t0 ON highlight(UPPER(rt0.c3), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END, ((vt1.c1)>=(vt1.c1)), NULLIF(t0.c72, vt1.c1)) WHERE (((((((((((((0.4237139789184713)OR(vt1.c1)))AND(rt0.c4)))AND(((vt1.c0) NOTNULL))))OR(((rt0.c0)IS(rt0.c3)))))AND((- (vt1.c1)))))OR(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((((((((((((0.4237139789184713)OR(vt1.c1)))AND(rt0.c4)))AND(((vt1.c0) NOTNULL))))OR(((rt0.c0)IS(rt0.c3)))))AND((- (vt1.c1)))))OR(rt0.c3))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN t0 ON highlight(UPPER(rt0.c3), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END, ((vt1.c1)>=(vt1.c1)), NULLIF(t0.c72, vt1.c1)));
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN t0 ON highlight(UPPER(rt0.c3), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END, ((vt1.c1)>=(vt1.c1)), NULLIF(t0.c72, vt1.c1)) WHERE (((((((((((((0.4237139789184713)OR(vt1.c1)))AND(rt0.c4)))AND(((vt1.c0) NOTNULL))))OR(((rt0.c0)IS(rt0.c3)))))AND((- (vt1.c1)))))OR(rt0.c3)));
SELECT ALL * FROM t0 WHERE (t0.c72) ORDER BY CASE WHEN ROUND(t0.c72, t0.c72) THEN '' ELSE ((t0.c72) IS TRUE) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c72) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ROUND(t0.c72, t0.c72) THEN '' ELSE ((t0.c72) IS TRUE) END ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c72) ORDER BY CASE WHEN ROUND(t0.c72, t0.c72) THEN '' ELSE ((t0.c72) IS TRUE) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c72) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ROUND(t0.c72, t0.c72) THEN '' ELSE ((t0.c72) IS TRUE) END ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c72) ORDER BY CASE WHEN ROUND(t0.c72, t0.c72) THEN '' ELSE ((t0.c72) IS TRUE) END ASC  NULLS FIRST;
SELECT * FROM t0, vt1 WHERE (((((t0.c72)-(x''))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c72)-(x''))) NOT NULL)) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((((t0.c72)-(x''))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c72)-(x''))) NOT NULL)) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((((t0.c72)-(x''))) NOT NULL));
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY CASE vt1.c1 COLLATE NOCASE  WHEN ((vt1.c1)>>(0.7180159967072753)) THEN vt1.c1 COLLATE NOCASE END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c1 COLLATE NOCASE  WHEN ((vt1.c1)>>(0.7180159967072753)) THEN vt1.c1 COLLATE NOCASE END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY CASE vt1.c1 COLLATE NOCASE  WHEN ((vt1.c1)>>(0.7180159967072753)) THEN vt1.c1 COLLATE NOCASE END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c1 COLLATE NOCASE  WHEN ((vt1.c1)>>(0.7180159967072753)) THEN vt1.c1 COLLATE NOCASE END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY CASE vt1.c1 COLLATE NOCASE  WHEN ((vt1.c1)>>(0.7180159967072753)) THEN vt1.c1 COLLATE NOCASE END  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (NULL);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON rt0.c4 CROSS JOIN t0 ON CASE WHEN SUBSTR(rt0.c3, rt0.c4) THEN LIKELIHOOD(DISTINCT rt0.c1, 0.5249116919205871) ELSE TRIM(DISTINCT 2087168582, vt1.c1) END WHERE (((x'523a')>>((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((x'523a')>>((~ (rt0.c2))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON rt0.c4 CROSS JOIN t0 ON CASE WHEN SUBSTR(rt0.c3, rt0.c4) THEN LIKELIHOOD(DISTINCT rt0.c1, 0.5249116919205871) ELSE TRIM(DISTINCT 2087168582, vt1.c1) END);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON rt0.c4 CROSS JOIN t0 ON CASE WHEN SUBSTR(rt0.c3, rt0.c4) THEN LIKELIHOOD(DISTINCT rt0.c1, 0.5249116919205871) ELSE TRIM(DISTINCT 2087168582, vt1.c1) END WHERE (((x'523a')>>((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((x'523a')>>((~ (rt0.c2))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON rt0.c4 CROSS JOIN t0 ON CASE WHEN SUBSTR(rt0.c3, rt0.c4) THEN LIKELIHOOD(DISTINCT rt0.c1, 0.5249116919205871) ELSE TRIM(DISTINCT 2087168582, vt1.c1) END);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON rt0.c4 CROSS JOIN t0 ON CASE WHEN SUBSTR(rt0.c3, rt0.c4) THEN LIKELIHOOD(DISTINCT rt0.c1, 0.5249116919205871) ELSE TRIM(DISTINCT 2087168582, vt1.c1) END WHERE (((x'523a')>>((~ (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((('616577238')IS(x'')) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((('616577238')IS(x'')) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((('616577238')IS(x'')) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((('616577238')IS(x'')) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((('616577238')IS(x'')) IN ()));
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ()))IS(((NULL)>>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))IS(((NULL)>>(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ()))IS(((NULL)>>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))IS(((NULL)>>(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ()))IS(((NULL)>>(rt0.c2)))));
SELECT ALL * FROM t0 WHERE (t0.c72) ORDER BY CASE WHEN ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)) THEN ((t0.c72) IS TRUE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c72) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)) THEN ((t0.c72) IS TRUE) END  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c72) ORDER BY CASE WHEN ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)) THEN ((t0.c72) IS TRUE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c72) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)) THEN ((t0.c72) IS TRUE) END  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c72) ORDER BY CASE WHEN ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)) THEN ((t0.c72) IS TRUE) END  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (CASE WHEN ((rt0.c0)||(t0.c72)) THEN ((rt0.c3)<<(t0.c72)) END) ORDER BY (NOT (CASE WHEN rt0.c3 THEN t0.c72 WHEN 0.5229611784107261 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c4 END));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)||(t0.c72)) THEN ((rt0.c3)<<(t0.c72)) END) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (NOT (CASE WHEN rt0.c3 THEN t0.c72 WHEN 0.5229611784107261 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c4 END)));
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (CASE WHEN ((rt0.c0)||(t0.c72)) THEN ((rt0.c3)<<(t0.c72)) END) ORDER BY (NOT (CASE WHEN rt0.c3 THEN t0.c72 WHEN 0.5229611784107261 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c4 END));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)||(t0.c72)) THEN ((rt0.c3)<<(t0.c72)) END) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (NOT (CASE WHEN rt0.c3 THEN t0.c72 WHEN 0.5229611784107261 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c4 END)));
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (CASE WHEN ((rt0.c0)||(t0.c72)) THEN ((rt0.c3)<<(t0.c72)) END) ORDER BY (NOT (CASE WHEN rt0.c3 THEN t0.c72 WHEN 0.5229611784107261 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c4 END));
SELECT * FROM vt1, rt0, t0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c1 THEN vt1.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c1 THEN vt1.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c1 THEN vt1.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c1 THEN vt1.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c1 THEN vt1.c0 END AS NUMERIC));
SELECT ALL * FROM vt1 WHERE ((+ (((((vt1.c1)AND(vt1.c1)))AND(vt1.c1))))) ORDER BY ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (CASE ''  WHEN vt1.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt1.c1)AND(vt1.c1)))AND(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (CASE ''  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL * FROM vt1 WHERE ((+ (((((vt1.c1)AND(vt1.c1)))AND(vt1.c1))))) ORDER BY ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (CASE ''  WHEN vt1.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt1.c1)AND(vt1.c1)))AND(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (CASE ''  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL * FROM vt1 WHERE ((+ (((((vt1.c1)AND(vt1.c1)))AND(vt1.c1))))) ORDER BY ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (CASE ''  WHEN vt1.c0 THEN vt1.c0 END));
SELECT ALL * FROM t0 WHERE (((t0.c72) NOTNULL)) ORDER BY CAST((t0.c72 IN (t0.c72, t0.c72)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c72) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c72 IN (t0.c72, t0.c72)) AS REAL));
SELECT ALL * FROM t0 WHERE (((t0.c72) NOTNULL)) ORDER BY CAST((t0.c72 IN (t0.c72, t0.c72)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c72) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c72 IN (t0.c72, t0.c72)) AS REAL));
SELECT ALL * FROM t0 WHERE (((t0.c72) NOTNULL)) ORDER BY CAST((t0.c72 IN (t0.c72, t0.c72)) AS REAL);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (highlight(((rt0.c2) NOT NULL), (rt0.c2 IN ()), CAST(rt0.c0 AS NUMERIC), ((rt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((highlight(((rt0.c2) NOT NULL), (rt0.c2 IN ()), CAST(rt0.c0 AS NUMERIC), ((rt0.c1) IS FALSE))) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (highlight(((rt0.c2) NOT NULL), (rt0.c2 IN ()), CAST(rt0.c0 AS NUMERIC), ((rt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((highlight(((rt0.c2) NOT NULL), (rt0.c2 IN ()), CAST(rt0.c0 AS NUMERIC), ((rt0.c1) IS FALSE))) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (highlight(((rt0.c2) NOT NULL), (rt0.c2 IN ()), CAST(rt0.c0 AS NUMERIC), ((rt0.c1) IS FALSE)));
SELECT COUNT(*) FROM vt1, t0 INNER JOIN rt0 ON rt0.c2 WHERE (((json_remove(rt0.c3, vt1.c1)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c72))) AND (LIKELIHOOD(DISTINCT t0.c72, 0.5325247208866026))));
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(rt0.c3, vt1.c1)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c72))) AND (LIKELIHOOD(DISTINCT t0.c72, 0.5325247208866026)))) IS TRUE)  as count FROM vt1, t0 INNER JOIN rt0 ON rt0.c2);
SELECT COUNT(*) FROM vt1, t0 INNER JOIN rt0 ON rt0.c2 WHERE (((json_remove(rt0.c3, vt1.c1)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c72))) AND (LIKELIHOOD(DISTINCT t0.c72, 0.5325247208866026))));
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(rt0.c3, vt1.c1)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c72))) AND (LIKELIHOOD(DISTINCT t0.c72, 0.5325247208866026)))) IS TRUE)  as count FROM vt1, t0 INNER JOIN rt0 ON rt0.c2);
SELECT COUNT(*) FROM vt1, t0 INNER JOIN rt0 ON rt0.c2 WHERE (((json_remove(rt0.c3, vt1.c1)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c72))) AND (LIKELIHOOD(DISTINCT t0.c72, 0.5325247208866026))));
SELECT ALL * FROM vt1 WHERE (((((((vt1.c1)<=(vt1.c0)))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END)))OR(IFNULL(DISTINCT vt1.c1, vt1.c0)))) ORDER BY '953200406' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)<=(vt1.c0)))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END)))OR(IFNULL(DISTINCT vt1.c1, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY '953200406' ASC);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c1)<=(vt1.c0)))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END)))OR(IFNULL(DISTINCT vt1.c1, vt1.c0)))) ORDER BY '953200406' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)<=(vt1.c0)))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END)))OR(IFNULL(DISTINCT vt1.c1, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY '953200406' ASC);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c1)<=(vt1.c0)))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END)))OR(IFNULL(DISTINCT vt1.c1, vt1.c0)))) ORDER BY '953200406' ASC;
SELECT ALL * FROM vt1, rt0, t0 WHERE (((rt0.c0 IN ()) IN ())) ORDER BY CAST(vt1.c1 COLLATE NOCASE AS INTEGER) ASC  NULLS LAST, 0.3667906787602432 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY CAST(vt1.c1 COLLATE NOCASE AS INTEGER) ASC  NULLS LAST, 0.3667906787602432 DESC);
SELECT ALL * FROM vt1, rt0, t0 WHERE (((rt0.c0 IN ()) IN ())) ORDER BY CAST(vt1.c1 COLLATE NOCASE AS INTEGER) ASC  NULLS LAST, 0.3667906787602432 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY CAST(vt1.c1 COLLATE NOCASE AS INTEGER) ASC  NULLS LAST, 0.3667906787602432 DESC);
SELECT ALL * FROM vt1, rt0, t0 WHERE (((rt0.c0 IN ()) IN ())) ORDER BY CAST(vt1.c1 COLLATE NOCASE AS INTEGER) ASC  NULLS LAST, 0.3667906787602432 DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c72)>=(t0.c72))) IS FALSE)) ORDER BY CASE WHEN CASE t0.c72  WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END THEN (NOT (t0.c72)) WHEN CASE t0.c72  WHEN t0.c72 THEN t0.c72 END THEN (~ (t0.c72)) WHEN (t0.c72 IN (t0.c72)) THEN UNLIKELY(NULL) ELSE ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c72)>=(t0.c72))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CASE t0.c72  WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END THEN (NOT (t0.c72)) WHEN CASE t0.c72  WHEN t0.c72 THEN t0.c72 END THEN (~ (t0.c72)) WHEN (t0.c72 IN (t0.c72)) THEN UNLIKELY(NULL) ELSE ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)) END);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c72)>=(t0.c72))) IS FALSE)) ORDER BY CASE WHEN CASE t0.c72  WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END THEN (NOT (t0.c72)) WHEN CASE t0.c72  WHEN t0.c72 THEN t0.c72 END THEN (~ (t0.c72)) WHEN (t0.c72 IN (t0.c72)) THEN UNLIKELY(NULL) ELSE ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c72)>=(t0.c72))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CASE t0.c72  WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END THEN (NOT (t0.c72)) WHEN CASE t0.c72  WHEN t0.c72 THEN t0.c72 END THEN (~ (t0.c72)) WHEN (t0.c72 IN (t0.c72)) THEN UNLIKELY(NULL) ELSE ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)) END);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c72)>=(t0.c72))) IS FALSE)) ORDER BY CASE WHEN CASE t0.c72  WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END THEN (NOT (t0.c72)) WHEN CASE t0.c72  WHEN t0.c72 THEN t0.c72 END THEN (~ (t0.c72)) WHEN (t0.c72 IN (t0.c72)) THEN UNLIKELY(NULL) ELSE ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)) END;
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (((rt0.c0)IS NOT(CAST(rt0.c0 AS TEXT)))) ORDER BY CAST(((rt0.c2)AND(rt0.c3)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)IS NOT(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY CAST(((rt0.c2)AND(rt0.c3)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (((rt0.c0)IS NOT(CAST(rt0.c0 AS TEXT)))) ORDER BY CAST(((rt0.c2)AND(rt0.c3)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)IS NOT(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY CAST(((rt0.c2)AND(rt0.c3)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (((rt0.c0)IS NOT(CAST(rt0.c0 AS TEXT)))) ORDER BY CAST(((rt0.c2)AND(rt0.c3)) AS REAL) ASC;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((NULL IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) IS TRUE)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((NULL IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) IS TRUE)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((NULL IN ())) IS TRUE));
SELECT * FROM rt0 WHERE (CAST(((rt0.c0) ISNULL) AS INTEGER)) ORDER BY 'D씅0\'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) ISNULL) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY 'D씅0\'  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(((rt0.c0) ISNULL) AS INTEGER)) ORDER BY 'D씅0\'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) ISNULL) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY 'D씅0\'  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(((rt0.c0) ISNULL) AS INTEGER)) ORDER BY 'D씅0\'  NULLS FIRST;
SELECT ALL * FROM t0, vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (vt1.c1);
SELECT * FROM vt1 WHERE ((((vt1.c0)<>(-1983794406)) IN ())) ORDER BY (((vt1.c1 IN ())) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((vt1.c0)<>(-1983794406)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1 IN ())) IS FALSE));
SELECT * FROM vt1 WHERE ((((vt1.c0)<>(-1983794406)) IN ())) ORDER BY (((vt1.c1 IN ())) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((vt1.c0)<>(-1983794406)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1 IN ())) IS FALSE));
SELECT * FROM vt1 WHERE ((((vt1.c0)<>(-1983794406)) IN ())) ORDER BY (((vt1.c1 IN ())) IS FALSE);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ('-1194035763') ORDER BY TOTAL_CHANGES() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1194035763') IS TRUE)  as count FROM t0, rt0 ORDER BY TOTAL_CHANGES() ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ('-1194035763') ORDER BY TOTAL_CHANGES() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1194035763') IS TRUE)  as count FROM t0, rt0 ORDER BY TOTAL_CHANGES() ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ('-1194035763') ORDER BY TOTAL_CHANGES() ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c72) NOT NULL) THEN ((t0.c72) BETWEEN (t0.c72) AND (t0.c72)) END) ORDER BY (((t0.c72 COLLATE BINARY))==(((t0.c72 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c72) NOT NULL) THEN ((t0.c72) BETWEEN (t0.c72) AND (t0.c72)) END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c72 COLLATE BINARY))==(((t0.c72 IN ()))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c72) NOT NULL) THEN ((t0.c72) BETWEEN (t0.c72) AND (t0.c72)) END) ORDER BY (((t0.c72 COLLATE BINARY))==(((t0.c72 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c72) NOT NULL) THEN ((t0.c72) BETWEEN (t0.c72) AND (t0.c72)) END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c72 COLLATE BINARY))==(((t0.c72 IN ()))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c72) NOT NULL) THEN ((t0.c72) BETWEEN (t0.c72) AND (t0.c72)) END) ORDER BY (((t0.c72 COLLATE BINARY))==(((t0.c72 IN ()))))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((((((CASE 'D씅0\'  WHEN vt1.c1 THEN vt1.c1 END)AND(((vt1.c1) NOTNULL))))AND(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END)))AND(vt1.c0)))OR(IFNULL(vt1.c0, vt1.c0)))) ORDER BY ((((JULIANDAY(vt1.c1, vt1.c1, vt1.c0))AND(((vt1.c1) IS TRUE))))OR(((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE 'D씅0\'  WHEN vt1.c1 THEN vt1.c1 END)AND(((vt1.c1) NOTNULL))))AND(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END)))AND(vt1.c0)))OR(IFNULL(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((JULIANDAY(vt1.c1, vt1.c1, vt1.c0))AND(((vt1.c1) IS TRUE))))OR(((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((((((CASE 'D씅0\'  WHEN vt1.c1 THEN vt1.c1 END)AND(((vt1.c1) NOTNULL))))AND(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END)))AND(vt1.c0)))OR(IFNULL(vt1.c0, vt1.c0)))) ORDER BY ((((JULIANDAY(vt1.c1, vt1.c1, vt1.c0))AND(((vt1.c1) IS TRUE))))OR(((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE 'D씅0\'  WHEN vt1.c1 THEN vt1.c1 END)AND(((vt1.c1) NOTNULL))))AND(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END)))AND(vt1.c0)))OR(IFNULL(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((JULIANDAY(vt1.c1, vt1.c1, vt1.c0))AND(((vt1.c1) IS TRUE))))OR(((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((((((CASE 'D씅0\'  WHEN vt1.c1 THEN vt1.c1 END)AND(((vt1.c1) NOTNULL))))AND(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END)))AND(vt1.c0)))OR(IFNULL(vt1.c0, vt1.c0)))) ORDER BY ((((JULIANDAY(vt1.c1, vt1.c1, vt1.c0))AND(((vt1.c1) IS TRUE))))OR(((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))) DESC  NULLS LAST;
SELECT * FROM rt0, vt1, t0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT * FROM rt0, vt1, t0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT * FROM rt0, vt1, t0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END) IS FALSE));
SELECT * FROM rt0 WHERE ((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END IN ()));
SELECT ALL * FROM rt0, vt1, t0 WHERE ((((CAST(vt1.c0 AS BLOB)))<>(((((rt0.c0, rt0.c0, rt0.c3, t0.c72, vt1.c1))>=((vt1.c0, rt0.c4, rt0.c2, rt0.c4, vt1.c0)))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt1.c0 AS BLOB)))!=(((((rt0.c0, rt0.c0, rt0.c3, t0.c72, vt1.c1))>=((vt1.c0, rt0.c4, rt0.c2, rt0.c4, vt1.c0))))))) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL * FROM rt0, vt1, t0 WHERE ((((CAST(vt1.c0 AS BLOB)))<>(((((rt0.c0, rt0.c0, rt0.c3, t0.c72, vt1.c1))>=((vt1.c0, rt0.c4, rt0.c2, rt0.c4, vt1.c0)))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt1.c0 AS BLOB)))!=(((((rt0.c0, rt0.c0, rt0.c3, t0.c72, vt1.c1))>=((vt1.c0, rt0.c4, rt0.c2, rt0.c4, vt1.c0))))))) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL * FROM rt0, vt1, t0 WHERE ((((CAST(vt1.c0 AS BLOB)))<>(((((rt0.c0, rt0.c0, rt0.c3, t0.c72, vt1.c1))>=((vt1.c0, rt0.c4, rt0.c2, rt0.c4, vt1.c0)))))));
SELECT * FROM t0, vt1 WHERE ((vt1.c0 COLLATE BINARY IN ((('-94730674')==(vt1.c0)), ((vt1.c0)>=(t0.c72)))));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE BINARY IN ((('-94730674')==(vt1.c0)), ((vt1.c0)>=(t0.c72))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((vt1.c0 COLLATE BINARY IN ((('-94730674')==(vt1.c0)), ((vt1.c0)>=(t0.c72)))));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE BINARY IN ((('-94730674')==(vt1.c0)), ((vt1.c0)>=(t0.c72))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((vt1.c0 COLLATE BINARY IN ((('-94730674')==(vt1.c0)), ((vt1.c0)>=(t0.c72)))));
SELECT ALL * FROM vt1, t0 WHERE ((NOT ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((NOT ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((NOT ((+ (vt1.c0)))));
SELECT ALL * FROM rt0, vt1, t0 WHERE ((NOT ((((rt0.c3)) BETWEEN ((rt0.c0)) AND (('-290769558')))))) ORDER BY ((vt1.c1 COLLATE RTRIM)+(((rt0.c2)<<(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c3)) BETWEEN ((rt0.c0)) AND (('-290769558')))))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ((vt1.c1 COLLATE RTRIM)+(((rt0.c2)<<(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1, t0 WHERE ((NOT ((((rt0.c3)) BETWEEN ((rt0.c0)) AND (('-290769558')))))) ORDER BY ((vt1.c1 COLLATE RTRIM)+(((rt0.c2)<<(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c3)) BETWEEN ((rt0.c0)) AND (('-290769558')))))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ((vt1.c1 COLLATE RTRIM)+(((rt0.c2)<<(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1, t0 WHERE ((NOT ((((rt0.c3)) BETWEEN ((rt0.c0)) AND (('-290769558')))))) ORDER BY ((vt1.c1 COLLATE RTRIM)+(((rt0.c2)<<(rt0.c2)))) DESC  NULLS LAST;
SELECT * FROM rt0, vt1, t0 WHERE (0.06880162038741622);
SELECT SUM(count) FROM (SELECT ((0.06880162038741622) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT * FROM rt0, vt1, t0 WHERE (0.06880162038741622);
SELECT SUM(count) FROM (SELECT ((0.06880162038741622) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT * FROM rt0, vt1, t0 WHERE (0.06880162038741622);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOT BETWEEN (((rt0.c3)>>(rt0.c3))) AND (((rt0.c3)-('-1983794406')))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOT BETWEEN (((rt0.c3)>>(rt0.c3))) AND (((rt0.c3)-('-1983794406'))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOT BETWEEN (((rt0.c3)>>(rt0.c3))) AND (((rt0.c3)-('-1983794406')))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOT BETWEEN (((rt0.c3)>>(rt0.c3))) AND (((rt0.c3)-('-1983794406'))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOT BETWEEN (((rt0.c3)>>(rt0.c3))) AND (((rt0.c3)-('-1983794406')))));
SELECT * FROM vt1, rt0, t0 WHERE ((((rt0.c0)) BETWEEN ((rtreenode(rt0.c4, t0.c72))) AND ((((((t0.c72)OR(rt0.c3)))AND(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((rtreenode(rt0.c4, t0.c72))) AND ((((((t0.c72)OR(rt0.c3)))AND(rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE ((((rt0.c0)) BETWEEN ((rtreenode(rt0.c4, t0.c72))) AND ((((((t0.c72)OR(rt0.c3)))AND(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((rtreenode(rt0.c4, t0.c72))) AND ((((((t0.c72)OR(rt0.c3)))AND(rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE ((((rt0.c0)) BETWEEN ((rtreenode(rt0.c4, t0.c72))) AND ((((((t0.c72)OR(rt0.c3)))AND(rt0.c2))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE NULL  WHEN (vt1.c1 IN (vt1.c1)) THEN ((vt1.c1)|(0Xffffffffb5ceea91)) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN (vt1.c1 IN (vt1.c1)) THEN ((vt1.c1)|(0Xffffffffb5ceea91)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE NULL  WHEN (vt1.c1 IN (vt1.c1)) THEN ((vt1.c1)|(0Xffffffffb5ceea91)) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN (vt1.c1 IN (vt1.c1)) THEN ((vt1.c1)|(0Xffffffffb5ceea91)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE NULL  WHEN (vt1.c1 IN (vt1.c1)) THEN ((vt1.c1)|(0Xffffffffb5ceea91)) END);
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON (((((t0.c72)) BETWEEN ((t0.c72)) AND ((t0.c72)))) IS TRUE) WHERE (((((((vt1.c0)<=(t0.c72)))AND(vt1.c1)))OR(0.5452318263271873)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)<=(t0.c72)))AND(vt1.c1)))OR(0.5452318263271873))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((((t0.c72)) BETWEEN ((t0.c72)) AND ((t0.c72)))) IS TRUE));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON (((((t0.c72)) BETWEEN ((t0.c72)) AND ((t0.c72)))) IS TRUE) WHERE (((((((vt1.c0)<=(t0.c72)))AND(vt1.c1)))OR(0.5452318263271873)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)<=(t0.c72)))AND(vt1.c1)))OR(0.5452318263271873))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((((t0.c72)) BETWEEN ((t0.c72)) AND ((t0.c72)))) IS TRUE));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON (((((t0.c72)) BETWEEN ((t0.c72)) AND ((t0.c72)))) IS TRUE) WHERE (((((((vt1.c0)<=(t0.c72)))AND(vt1.c1)))OR(0.5452318263271873)));
SELECT * FROM rt0 CROSS JOIN vt1 ON ((CASE WHEN rt0.c3 THEN vt1.c1 ELSE NULL END)==(vt1.c1 COLLATE RTRIM)) WHERE (((ABS(rt0.c3)) NOT BETWEEN (((((((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c4)))OR(vt1.c0)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c3))) AND (((rt0.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((ABS(rt0.c3)) NOT BETWEEN (((((((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c4)))OR(vt1.c0)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c3))) AND (((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((CASE WHEN rt0.c3 THEN vt1.c1 ELSE NULL END)=(vt1.c1 COLLATE RTRIM)));
SELECT * FROM rt0 CROSS JOIN vt1 ON ((CASE WHEN rt0.c3 THEN vt1.c1 ELSE NULL END)==(vt1.c1 COLLATE RTRIM)) WHERE (((ABS(rt0.c3)) NOT BETWEEN (((((((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c4)))OR(vt1.c0)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c3))) AND (((rt0.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((ABS(rt0.c3)) NOT BETWEEN (((((((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c4)))OR(vt1.c0)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c3))) AND (((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((CASE WHEN rt0.c3 THEN vt1.c1 ELSE NULL END)=(vt1.c1 COLLATE RTRIM)));
SELECT * FROM rt0 CROSS JOIN vt1 ON ((CASE WHEN rt0.c3 THEN vt1.c1 ELSE NULL END)==(vt1.c1 COLLATE RTRIM)) WHERE (((ABS(rt0.c3)) NOT BETWEEN (((((((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c4)))OR(vt1.c0)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c3))) AND (((rt0.c3) ISNULL))));
SELECT ALL * FROM vt1, t0, rt0 WHERE (vt1.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL * FROM vt1, t0, rt0 WHERE (vt1.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL * FROM vt1, t0, rt0 WHERE (vt1.c0 COLLATE RTRIM);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (t0.c72 COLLATE NOCASE) ORDER BY CASE WHEN TRIM(DISTINCT t0.c72) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))) ELSE (rt0.c0 IN (t0.c72)) END, (CASE t0.c72  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END IN ())  NULLS FIRST, (((+ (rt0.c2)))<(CAST(rt0.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c72 COLLATE NOCASE) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY CASE WHEN TRIM(DISTINCT t0.c72) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))) ELSE (rt0.c0 IN (t0.c72)) END, (CASE t0.c72  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END IN ())  NULLS FIRST, (((+ (rt0.c2)))<(CAST(rt0.c0 AS REAL)))  NULLS LAST);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (t0.c72 COLLATE NOCASE) ORDER BY CASE WHEN TRIM(DISTINCT t0.c72) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))) ELSE (rt0.c0 IN (t0.c72)) END, (CASE t0.c72  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END IN ())  NULLS FIRST, (((+ (rt0.c2)))<(CAST(rt0.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c72 COLLATE NOCASE) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY CASE WHEN TRIM(DISTINCT t0.c72) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))) ELSE (rt0.c0 IN (t0.c72)) END, (CASE t0.c72  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END IN ())  NULLS FIRST, (((+ (rt0.c2)))<(CAST(rt0.c0 AS REAL)))  NULLS LAST);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (t0.c72 COLLATE NOCASE) ORDER BY CASE WHEN TRIM(DISTINCT t0.c72) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))) ELSE (rt0.c0 IN (t0.c72)) END, (CASE t0.c72  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END IN ())  NULLS FIRST, (((+ (rt0.c2)))<(CAST(rt0.c0 AS REAL)))  NULLS LAST;
SELECT * FROM rt0, t0, vt1 WHERE (((((0.7674577740408274)AND(json_type(vt1.c1))))AND((((x'')) NOT BETWEEN ((vt1.c1)) AND ((t0.c72))))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.7674577740408274)AND(json_type(vt1.c1))))AND((((x'')) NOT BETWEEN ((vt1.c1)) AND ((t0.c72)))))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT * FROM rt0, t0, vt1 WHERE (((((0.7674577740408274)AND(json_type(vt1.c1))))AND((((x'')) NOT BETWEEN ((vt1.c1)) AND ((t0.c72))))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.7674577740408274)AND(json_type(vt1.c1))))AND((((x'')) NOT BETWEEN ((vt1.c1)) AND ((t0.c72)))))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT * FROM rt0, t0, vt1 WHERE (((((0.7674577740408274)AND(json_type(vt1.c1))))AND((((x'')) NOT BETWEEN ((vt1.c1)) AND ((t0.c72))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c1)*(vt1.c1)) AS TEXT)) ORDER BY (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END IN ((+ (vt1.c1)), ((vt1.c0)&(vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1)*(vt1.c1)) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END IN ((+ (vt1.c1)), ((vt1.c0)&(vt1.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c1)*(vt1.c1)) AS TEXT)) ORDER BY (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END IN ((+ (vt1.c1)), ((vt1.c0)&(vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1)*(vt1.c1)) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END IN ((+ (vt1.c1)), ((vt1.c0)&(vt1.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c1)*(vt1.c1)) AS TEXT)) ORDER BY (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END IN ((+ (vt1.c1)), ((vt1.c0)&(vt1.c1)))) DESC;
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c4 IN ()))&(CAST(rt0.c4 AS NUMERIC)))) ORDER BY (((rt0.c0, ((rt0.c4)&(t0.c72)), ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3))))<((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ()))&(CAST(rt0.c4 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c0, ((rt0.c4)&(t0.c72)), ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3))))<((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c4 IN ()))&(CAST(rt0.c4 AS NUMERIC)))) ORDER BY (((rt0.c0, ((rt0.c4)&(t0.c72)), ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3))))<((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ()))&(CAST(rt0.c4 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c0, ((rt0.c4)&(t0.c72)), ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3))))<((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c4 IN ()))&(CAST(rt0.c4 AS NUMERIC)))) ORDER BY (((rt0.c0, ((rt0.c4)&(t0.c72)), ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3))))<((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c1))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c2))  WHEN LOWER(rt0.c2) THEN LIKELIHOOD(DISTINCT rt0.c1, 0.7607107938106352) END) ORDER BY (0.44660123223255266 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c2))  WHEN LOWER(rt0.c2) THEN LIKELIHOOD(DISTINCT rt0.c1, 0.7607107938106352) END) IS TRUE)  as count FROM rt0 ORDER BY (0.44660123223255266 IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c2))  WHEN LOWER(rt0.c2) THEN LIKELIHOOD(DISTINCT rt0.c1, 0.7607107938106352) END) ORDER BY (0.44660123223255266 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c2))  WHEN LOWER(rt0.c2) THEN LIKELIHOOD(DISTINCT rt0.c1, 0.7607107938106352) END) IS TRUE)  as count FROM rt0 ORDER BY (0.44660123223255266 IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c2))  WHEN LOWER(rt0.c2) THEN LIKELIHOOD(DISTINCT rt0.c1, 0.7607107938106352) END) ORDER BY (0.44660123223255266 IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c3 END) AND (0.7142933817599839)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c3 END) AND (0.7142933817599839))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c3 END) AND (0.7142933817599839)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c3 END) AND (0.7142933817599839))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c3 END) AND (0.7142933817599839)));
SELECT * FROM rt0, t0, vt1 WHERE ((((rt0.c4)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((NOT (rt0.c2)))))) ORDER BY (((rt0.c2, rt0.c0, vt1.c0)) BETWEEN (((((NULL, rt0.c2, vt1.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, vt1.c1)) AND ((rt0.c4, vt1.c1, rt0.c0))), CAST(rt0.c1 AS REAL), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c1))))) AND ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c4 END, ((rt0.c2) IS FALSE), (rt0.c1 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((NOT (rt0.c2)))))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (((rt0.c2, rt0.c0, vt1.c0)) BETWEEN (((((NULL, rt0.c2, vt1.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, vt1.c1)) AND ((rt0.c4, vt1.c1, rt0.c0))), CAST(rt0.c1 AS REAL), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c1))))) AND ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c4 END, ((rt0.c2) IS FALSE), (rt0.c1 IN ()))))  NULLS LAST);
SELECT * FROM rt0, t0, vt1 WHERE ((((rt0.c4)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((NOT (rt0.c2)))))) ORDER BY (((rt0.c2, rt0.c0, vt1.c0)) BETWEEN (((((NULL, rt0.c2, vt1.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, vt1.c1)) AND ((rt0.c4, vt1.c1, rt0.c0))), CAST(rt0.c1 AS REAL), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c1))))) AND ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c4 END, ((rt0.c2) IS FALSE), (rt0.c1 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((NOT (rt0.c2)))))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (((rt0.c2, rt0.c0, vt1.c0)) BETWEEN (((((NULL, rt0.c2, vt1.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, vt1.c1)) AND ((rt0.c4, vt1.c1, rt0.c0))), CAST(rt0.c1 AS REAL), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c1))))) AND ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c4 END, ((rt0.c2) IS FALSE), (rt0.c1 IN ()))))  NULLS LAST);
SELECT * FROM rt0, t0, vt1 WHERE ((((rt0.c4)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((NOT (rt0.c2)))))) ORDER BY (((rt0.c2, rt0.c0, vt1.c0)) BETWEEN (((((NULL, rt0.c2, vt1.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, vt1.c1)) AND ((rt0.c4, vt1.c1, rt0.c0))), CAST(rt0.c1 AS REAL), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c1))))) AND ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c4 END, ((rt0.c2) IS FALSE), (rt0.c1 IN ()))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0 WHERE ((((vt1.c1)) NOT BETWEEN ((t0.c72)) AND ((0.229674943342154))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) NOT BETWEEN ((t0.c72)) AND ((0.229674943342154)))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((vt1.c1)) NOT BETWEEN ((t0.c72)) AND ((0.229674943342154))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) NOT BETWEEN ((t0.c72)) AND ((0.229674943342154)))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((vt1.c1)) NOT BETWEEN ((t0.c72)) AND ((0.229674943342154))));
SELECT ALL * FROM rt0 WHERE (0.41285979837533693);
SELECT SUM(count) FROM (SELECT ((0.41285979837533693) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (0.41285979837533693);
SELECT SUM(count) FROM (SELECT ((0.41285979837533693) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (0.41285979837533693);
SELECT ALL * FROM vt1, rt0, t0 WHERE ((((vt1.c1))>((vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1))>((vt1.c0)))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE ((((vt1.c1))>((vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1))>((vt1.c0)))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE ((((vt1.c1))>((vt1.c0))));
SELECT ALL COUNT(*) FROM vt1, rt0 CROSS JOIN t0 ON ((((rt0.c1)/(vt1.c1)))LIKE(((vt1.c0)&(rt0.c3)))) WHERE (((CASE WHEN rt0.c3 THEN x'' ELSE rt0.c0 END)<<((rt0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c3 THEN x'' ELSE rt0.c0 END)<<((rt0.c4 IN ())))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN t0 ON ((((rt0.c1)/(vt1.c1)))LIKE(((vt1.c0)&(rt0.c3)))));
SELECT ALL COUNT(*) FROM vt1, rt0 CROSS JOIN t0 ON ((((rt0.c1)/(vt1.c1)))LIKE(((vt1.c0)&(rt0.c3)))) WHERE (((CASE WHEN rt0.c3 THEN x'' ELSE rt0.c0 END)<<((rt0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c3 THEN x'' ELSE rt0.c0 END)<<((rt0.c4 IN ())))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN t0 ON ((((rt0.c1)/(vt1.c1)))LIKE(((vt1.c0)&(rt0.c3)))));
SELECT ALL COUNT(*) FROM vt1, rt0 CROSS JOIN t0 ON ((((rt0.c1)/(vt1.c1)))LIKE(((vt1.c0)&(rt0.c3)))) WHERE (((CASE WHEN rt0.c3 THEN x'' ELSE rt0.c0 END)<<((rt0.c4 IN ()))));
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c4) NOT BETWEEN (vt1.c1) AND (rt0.c1)))*((vt1.c1 IN ()))) WHERE ((((rt0.c1)) BETWEEN (((((t0.c72, rt0.c2, rt0.c0))>((vt1.c0, rt0.c0, vt1.c0))))) AND ((NULL)))) ORDER BY (((('d씅0\') NOT BETWEEN (rt0.c1) AND (rt0.c3)))!=(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)), CASE WHEN ('-1194035763' IN ()) THEN COALESCE(rt0.c3, rt0.c2, rt0.c0, t0.c72) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN (((((t0.c72, rt0.c2, rt0.c0))>((vt1.c0, rt0.c0, vt1.c0))))) AND ((NULL)))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c4) NOT BETWEEN (vt1.c1) AND (rt0.c1)))*((vt1.c1 IN ()))) ORDER BY (((('d씅0\') NOT BETWEEN (rt0.c1) AND (rt0.c3)))!=(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)), CASE WHEN ('-1194035763' IN ()) THEN COALESCE(rt0.c3, rt0.c2, rt0.c0, t0.c72) END ASC  NULLS LAST);
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c4) NOT BETWEEN (vt1.c1) AND (rt0.c1)))*((vt1.c1 IN ()))) WHERE ((((rt0.c1)) BETWEEN (((((t0.c72, rt0.c2, rt0.c0))>((vt1.c0, rt0.c0, vt1.c0))))) AND ((NULL)))) ORDER BY (((('d씅0\') NOT BETWEEN (rt0.c1) AND (rt0.c3)))!=(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)), CASE WHEN ('-1194035763' IN ()) THEN COALESCE(rt0.c3, rt0.c2, rt0.c0, t0.c72) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN (((((t0.c72, rt0.c2, rt0.c0))>((vt1.c0, rt0.c0, vt1.c0))))) AND ((NULL)))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c4) NOT BETWEEN (vt1.c1) AND (rt0.c1)))*((vt1.c1 IN ()))) ORDER BY (((('d씅0\') NOT BETWEEN (rt0.c1) AND (rt0.c3)))!=(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)), CASE WHEN ('-1194035763' IN ()) THEN COALESCE(rt0.c3, rt0.c2, rt0.c0, t0.c72) END ASC  NULLS LAST);
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c4) NOT BETWEEN (vt1.c1) AND (rt0.c1)))*((vt1.c1 IN ()))) WHERE ((((rt0.c1)) BETWEEN (((((t0.c72, rt0.c2, rt0.c0))>((vt1.c0, rt0.c0, vt1.c0))))) AND ((NULL)))) ORDER BY (((('d씅0\') NOT BETWEEN (rt0.c1) AND (rt0.c3)))!=(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)), CASE WHEN ('-1194035763' IN ()) THEN COALESCE(rt0.c3, rt0.c2, rt0.c0, t0.c72) END ASC  NULLS LAST;
SELECT * FROM t0 WHERE (LIKELY(DISTINCT CAST(t0.c72 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT CAST(t0.c72 AS BLOB))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (LIKELY(DISTINCT CAST(t0.c72 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT CAST(t0.c72 AS BLOB))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (LIKELY(DISTINCT CAST(t0.c72 AS BLOB)));
SELECT ALL * FROM vt1 WHERE (json_array_length(((0.23533045867500724) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY ((load_extension(vt1.c1, vt1.c0))||(((((vt1.c1)OR(vt1.c0)))AND(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((0.23533045867500724) BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((load_extension(vt1.c1, vt1.c0))||(((((vt1.c1)OR(vt1.c0)))AND(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (json_array_length(((0.23533045867500724) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY ((load_extension(vt1.c1, vt1.c0))||(((((vt1.c1)OR(vt1.c0)))AND(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((0.23533045867500724) BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((load_extension(vt1.c1, vt1.c0))||(((((vt1.c1)OR(vt1.c0)))AND(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (json_array_length(((0.23533045867500724) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY ((load_extension(vt1.c1, vt1.c0))||(((((vt1.c1)OR(vt1.c0)))AND(vt1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(json_valid(t0.c72) AS BLOB)) ORDER BY ROUND(((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)), ((x'')<<(rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_valid(t0.c72) AS BLOB)) IS TRUE)  as count FROM rt0, t0 ORDER BY ROUND(((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)), ((x'')<<(rt0.c4))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(json_valid(t0.c72) AS BLOB)) ORDER BY ROUND(((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)), ((x'')<<(rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_valid(t0.c72) AS BLOB)) IS TRUE)  as count FROM rt0, t0 ORDER BY ROUND(((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)), ((x'')<<(rt0.c4))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(json_valid(t0.c72) AS BLOB)) ORDER BY ROUND(((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)), ((x'')<<(rt0.c4)));
SELECT ALL * FROM t0 WHERE (CAST(((((t0.c72)OR(t0.c72)))AND(t0.c72)) AS BLOB)) ORDER BY CAST((+ (t0.c72)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c72)OR(t0.c72)))AND(t0.c72)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY CAST((+ (t0.c72)) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST(((((t0.c72)OR(t0.c72)))AND(t0.c72)) AS BLOB)) ORDER BY CAST((+ (t0.c72)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c72)OR(t0.c72)))AND(t0.c72)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY CAST((+ (t0.c72)) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST(((((t0.c72)OR(t0.c72)))AND(t0.c72)) AS BLOB)) ORDER BY CAST((+ (t0.c72)) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM t0, rt0, vt1 WHERE (((((CAST(rt0.c1 AS NUMERIC))OR(((vt1.c1) IS TRUE))))OR((0x38d0af16 IN ())))) ORDER BY TRIM(DISTINCT (~ (vt1.c0)), (('0.0') BETWEEN (rt0.c4) AND (rt0.c2))), ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS NUMERIC))OR(((vt1.c1) IS TRUE))))OR((0x38d0af16 IN ())))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY TRIM(DISTINCT (~ (vt1.c0)), (('0.0') BETWEEN (rt0.c4) AND (rt0.c2))), ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL) ASC);
SELECT ALL * FROM t0, rt0, vt1 WHERE (((((CAST(rt0.c1 AS NUMERIC))OR(((vt1.c1) IS TRUE))))OR((0x38d0af16 IN ())))) ORDER BY TRIM(DISTINCT (~ (vt1.c0)), (('0.0') BETWEEN (rt0.c4) AND (rt0.c2))), ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS NUMERIC))OR(((vt1.c1) IS TRUE))))OR((0x38d0af16 IN ())))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY TRIM(DISTINCT (~ (vt1.c0)), (('0.0') BETWEEN (rt0.c4) AND (rt0.c2))), ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL) ASC);
SELECT ALL * FROM t0, rt0, vt1 WHERE (((((CAST(rt0.c1 AS NUMERIC))OR(((vt1.c1) IS TRUE))))OR((0x38d0af16 IN ())))) ORDER BY TRIM(DISTINCT (~ (vt1.c0)), (('0.0') BETWEEN (rt0.c4) AND (rt0.c2))), ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL) ASC;
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (rt0.c3);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0)%(rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)%(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0)%(rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)%(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0)%(rt0.c1)) AS REAL));
SELECT * FROM t0, rt0 WHERE (CASE WHEN (~ (t0.c72)) THEN ((0.12370607481458962) IS TRUE) WHEN CASE rt0.c2  WHEN t0.c72 THEN rt0.c4 ELSE rt0.c3 END THEN ((rt0.c0)<(rt0.c4)) WHEN ((t0.c72) IS TRUE) THEN t0.c72 COLLATE RTRIM END) ORDER BY (((((((((((rt0.c4))!=((rt0.c2))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(CASE t0.c72  WHEN rt0.c2 THEN '' ELSE rt0.c0 END)))AND(rt0.c4 COLLATE RTRIM)))AND(rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (t0.c72)) THEN ((0.12370607481458962) IS TRUE) WHEN CASE rt0.c2  WHEN t0.c72 THEN rt0.c4 ELSE rt0.c3 END THEN ((rt0.c0)<(rt0.c4)) WHEN ((t0.c72) IS TRUE) THEN t0.c72 COLLATE RTRIM END) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((((((((rt0.c4))!=((rt0.c2))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(CASE t0.c72  WHEN rt0.c2 THEN '' ELSE rt0.c0 END)))AND(rt0.c4 COLLATE RTRIM)))AND(rt0.c1)));
SELECT * FROM t0, rt0 WHERE (CASE WHEN (~ (t0.c72)) THEN ((0.12370607481458962) IS TRUE) WHEN CASE rt0.c2  WHEN t0.c72 THEN rt0.c4 ELSE rt0.c3 END THEN ((rt0.c0)<(rt0.c4)) WHEN ((t0.c72) IS TRUE) THEN t0.c72 COLLATE RTRIM END) ORDER BY (((((((((((rt0.c4))!=((rt0.c2))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(CASE t0.c72  WHEN rt0.c2 THEN '' ELSE rt0.c0 END)))AND(rt0.c4 COLLATE RTRIM)))AND(rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (t0.c72)) THEN ((0.12370607481458962) IS TRUE) WHEN CASE rt0.c2  WHEN t0.c72 THEN rt0.c4 ELSE rt0.c3 END THEN ((rt0.c0)<(rt0.c4)) WHEN ((t0.c72) IS TRUE) THEN t0.c72 COLLATE RTRIM END) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((((((((rt0.c4))!=((rt0.c2))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(CASE t0.c72  WHEN rt0.c2 THEN '' ELSE rt0.c0 END)))AND(rt0.c4 COLLATE RTRIM)))AND(rt0.c1)));
SELECT * FROM t0, rt0 WHERE (CASE WHEN (~ (t0.c72)) THEN ((0.12370607481458962) IS TRUE) WHEN CASE rt0.c2  WHEN t0.c72 THEN rt0.c4 ELSE rt0.c3 END THEN ((rt0.c0)<(rt0.c4)) WHEN ((t0.c72) IS TRUE) THEN t0.c72 COLLATE RTRIM END) ORDER BY (((((((((((rt0.c4))!=((rt0.c2))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(CASE t0.c72  WHEN rt0.c2 THEN '' ELSE rt0.c0 END)))AND(rt0.c4 COLLATE RTRIM)))AND(rt0.c1));
SELECT * FROM rt0 INNER JOIN t0 ON ((x'') NOT BETWEEN ((rt0.c0 IN ())) AND (TRIM(DISTINCT rt0.c4))) CROSS JOIN vt1 ON CASE ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c1))  WHEN ((vt1.c0) NOT BETWEEN (rt0.c3) AND (vt1.c0)) THEN ((vt1.c0)=(vt1.c1)) ELSE ((rt0.c3) NOT NULL) END WHERE (CAST(((rt0.c4) BETWEEN (rt0.c4) AND (vt1.c1)) AS TEXT)) ORDER BY CAST(CASE '9}C1y'  WHEN rt0.c0 THEN rt0.c1 END AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4) BETWEEN (rt0.c4) AND (vt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((x'') NOT BETWEEN ((rt0.c0 IN ())) AND (TRIM(DISTINCT rt0.c4))) CROSS JOIN vt1 ON CASE ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c1))  WHEN ((vt1.c0) NOT BETWEEN (rt0.c3) AND (vt1.c0)) THEN ((vt1.c0)==(vt1.c1)) ELSE ((rt0.c3) NOT NULL) END ORDER BY CAST(CASE '9}C1y'  WHEN rt0.c0 THEN rt0.c1 END AS BLOB)  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN t0 ON ((x'') NOT BETWEEN ((rt0.c0 IN ())) AND (TRIM(DISTINCT rt0.c4))) CROSS JOIN vt1 ON CASE ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c1))  WHEN ((vt1.c0) NOT BETWEEN (rt0.c3) AND (vt1.c0)) THEN ((vt1.c0)=(vt1.c1)) ELSE ((rt0.c3) NOT NULL) END WHERE (CAST(((rt0.c4) BETWEEN (rt0.c4) AND (vt1.c1)) AS TEXT)) ORDER BY CAST(CASE '9}C1y'  WHEN rt0.c0 THEN rt0.c1 END AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4) BETWEEN (rt0.c4) AND (vt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((x'') NOT BETWEEN ((rt0.c0 IN ())) AND (TRIM(DISTINCT rt0.c4))) CROSS JOIN vt1 ON CASE ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c1))  WHEN ((vt1.c0) NOT BETWEEN (rt0.c3) AND (vt1.c0)) THEN ((vt1.c0)==(vt1.c1)) ELSE ((rt0.c3) NOT NULL) END ORDER BY CAST(CASE '9}C1y'  WHEN rt0.c0 THEN rt0.c1 END AS BLOB)  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN t0 ON ((x'') NOT BETWEEN ((rt0.c0 IN ())) AND (TRIM(DISTINCT rt0.c4))) CROSS JOIN vt1 ON CASE ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c1))  WHEN ((vt1.c0) NOT BETWEEN (rt0.c3) AND (vt1.c0)) THEN ((vt1.c0)=(vt1.c1)) ELSE ((rt0.c3) NOT NULL) END WHERE (CAST(((rt0.c4) BETWEEN (rt0.c4) AND (vt1.c1)) AS TEXT)) ORDER BY CAST(CASE '9}C1y'  WHEN rt0.c0 THEN rt0.c1 END AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt1 WHERE (NULL);
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON (~ (CAST(rt0.c3 AS REAL))) CROSS JOIN t0 ON ((rt0.c0) NOT BETWEEN (IFNULL(DISTINCT vt1.c1, rt0.c4)) AND ('TRUE')) WHERE ((NOT (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (~ (CAST(rt0.c3 AS REAL))) CROSS JOIN t0 ON ((rt0.c0) NOT BETWEEN (IFNULL(DISTINCT vt1.c1, rt0.c4)) AND ('TRUE')));
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON (~ (CAST(rt0.c3 AS REAL))) CROSS JOIN t0 ON ((rt0.c0) NOT BETWEEN (IFNULL(DISTINCT vt1.c1, rt0.c4)) AND ('TRUE')) WHERE ((NOT (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (~ (CAST(rt0.c3 AS REAL))) CROSS JOIN t0 ON ((rt0.c0) NOT BETWEEN (IFNULL(DISTINCT vt1.c1, rt0.c4)) AND ('TRUE')));
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON (~ (CAST(rt0.c3 AS REAL))) CROSS JOIN t0 ON ((rt0.c0) NOT BETWEEN (IFNULL(DISTINCT vt1.c1, rt0.c4)) AND ('TRUE')) WHERE ((NOT (rt0.c2)));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE (((vt1.c0)-(t0.c72)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)-(t0.c72)) COLLATE RTRIM) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE (((vt1.c0)-(t0.c72)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)-(t0.c72)) COLLATE RTRIM) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE (((vt1.c0)-(t0.c72)) COLLATE RTRIM);
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN rt0 ON x'117659cf' WHERE (((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c3)))=(CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c3)))==(CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c4 END))) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN rt0 ON x'117659cf');
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN rt0 ON x'117659cf' WHERE (((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c3)))=(CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c3)))==(CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c4 END))) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN rt0 ON x'117659cf');
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN rt0 ON x'117659cf' WHERE (((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c3)))=(CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c4 END)));
SELECT ALL * FROM vt1, t0, rt0 WHERE (((((t0.c72, rt0.c0, rt0.c4)) BETWEEN ((vt1.c1, vt1.c0, rt0.c4)) AND ((rt0.c1, vt1.c1, t0.c72))) IN (CASE t0.c72  WHEN vt1.c0 THEN 's	9鐥w' ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c72, rt0.c0, rt0.c4)) BETWEEN ((vt1.c1, vt1.c0, rt0.c4)) AND ((rt0.c1, vt1.c1, t0.c72))) IN (CASE t0.c72  WHEN vt1.c0 THEN 's	9鐥w' ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL * FROM vt1, t0, rt0 WHERE (((((t0.c72, rt0.c0, rt0.c4)) BETWEEN ((vt1.c1, vt1.c0, rt0.c4)) AND ((rt0.c1, vt1.c1, t0.c72))) IN (CASE t0.c72  WHEN vt1.c0 THEN 's	9鐥w' ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c72, rt0.c0, rt0.c4)) BETWEEN ((vt1.c1, vt1.c0, rt0.c4)) AND ((rt0.c1, vt1.c1, t0.c72))) IN (CASE t0.c72  WHEN vt1.c0 THEN 's	9鐥w' ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL * FROM vt1, t0, rt0 WHERE (((((t0.c72, rt0.c0, rt0.c4)) BETWEEN ((vt1.c1, vt1.c0, rt0.c4)) AND ((rt0.c1, vt1.c1, t0.c72))) IN (CASE t0.c72  WHEN vt1.c0 THEN 's	9鐥w' ELSE vt1.c1 END)));
SELECT * FROM rt0 WHERE (((((x'')AND((((rt0.c2, rt0.c0, rt0.c2))>(('', rt0.c2, rt0.c0))))))OR((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((x'')AND((((rt0.c2, rt0.c0, rt0.c2))>(('', rt0.c2, rt0.c0))))))OR((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((x'')AND((((rt0.c2, rt0.c0, rt0.c2))>(('', rt0.c2, rt0.c0))))))OR((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((x'')AND((((rt0.c2, rt0.c0, rt0.c2))>(('', rt0.c2, rt0.c0))))))OR((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((x'')AND((((rt0.c2, rt0.c0, rt0.c2))>(('', rt0.c2, rt0.c0))))))OR((rt0.c0 IN ()))));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c4 AS NUMERIC) COLLATE NOCASE WHERE (CASE WHEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 END THEN CAST(rt0.c0 AS NUMERIC) END) ORDER BY ((((((rt0.c0)AND(rt0.c4)))AND(rt0.c1)))IS NOT(((rt0.c1)<(rt0.c1)))), ((((rt0.c0)/(rt0.c1)))AND(CAST(rt0.c2 AS INTEGER))), ((rt0.c1)%(rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 END THEN CAST(rt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c4 AS NUMERIC) COLLATE NOCASE ORDER BY ((((((rt0.c0)AND(rt0.c4)))AND(rt0.c1)))IS NOT(((rt0.c1)<(rt0.c1)))), ((((rt0.c0)/(rt0.c1)))AND(CAST(rt0.c2 AS INTEGER))), ((rt0.c1)%(rt0.c2)) COLLATE NOCASE);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c4 AS NUMERIC) COLLATE NOCASE WHERE (CASE WHEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 END THEN CAST(rt0.c0 AS NUMERIC) END) ORDER BY ((((((rt0.c0)AND(rt0.c4)))AND(rt0.c1)))IS NOT(((rt0.c1)<(rt0.c1)))), ((((rt0.c0)/(rt0.c1)))AND(CAST(rt0.c2 AS INTEGER))), ((rt0.c1)%(rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 END THEN CAST(rt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c4 AS NUMERIC) COLLATE NOCASE ORDER BY ((((((rt0.c0)AND(rt0.c4)))AND(rt0.c1)))IS NOT(((rt0.c1)<(rt0.c1)))), ((((rt0.c0)/(rt0.c1)))AND(CAST(rt0.c2 AS INTEGER))), ((rt0.c1)%(rt0.c2)) COLLATE NOCASE);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c4 AS NUMERIC) COLLATE NOCASE WHERE (CASE WHEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 END THEN CAST(rt0.c0 AS NUMERIC) END) ORDER BY ((((((rt0.c0)AND(rt0.c4)))AND(rt0.c1)))IS NOT(((rt0.c1)<(rt0.c1)))), ((((rt0.c0)/(rt0.c1)))AND(CAST(rt0.c2 AS INTEGER))), ((rt0.c1)%(rt0.c2)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE ((+ (((t0.c72)<=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c72)<=(rt0.c2))))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE ((+ (((t0.c72)<=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c72)<=(rt0.c2))))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE ((+ (((t0.c72)<=(rt0.c2)))));
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE ((CAST(vt1.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE ((CAST(vt1.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE ((CAST(vt1.c0 AS INTEGER) IN ()));
SELECT * FROM vt1 WHERE ((((- (vt1.c0))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((- (vt1.c0))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((- (vt1.c0))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (CAST(vt1.c0 AS INTEGER))));
SELECT * FROM vt1 NOT INDEXED, t0 WHERE (CASE CAST(vt1.c1 AS TEXT)  WHEN (vt1.c1 IN ()) THEN t0.c72 COLLATE RTRIM END) ORDER BY (((vt1.c0)) NOT BETWEEN (((((('712685')OR(t0.c72)))OR(vt1.c1)))) AND (((+ (t0.c72))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c1 AS TEXT)  WHEN (vt1.c1 IN ()) THEN t0.c72 COLLATE RTRIM END) IS TRUE)  as count FROM vt1, t0 ORDER BY (((vt1.c0)) NOT BETWEEN (((((('712685')OR(t0.c72)))OR(vt1.c1)))) AND (((+ (t0.c72))))) DESC);
SELECT * FROM vt1 NOT INDEXED, t0 WHERE (CASE CAST(vt1.c1 AS TEXT)  WHEN (vt1.c1 IN ()) THEN t0.c72 COLLATE RTRIM END) ORDER BY (((vt1.c0)) NOT BETWEEN (((((('712685')OR(t0.c72)))OR(vt1.c1)))) AND (((+ (t0.c72))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c1 AS TEXT)  WHEN (vt1.c1 IN ()) THEN t0.c72 COLLATE RTRIM END) IS TRUE)  as count FROM vt1, t0 ORDER BY (((vt1.c0)) NOT BETWEEN (((((('712685')OR(t0.c72)))OR(vt1.c1)))) AND (((+ (t0.c72))))) DESC);
SELECT * FROM vt1 NOT INDEXED, t0 WHERE (CASE CAST(vt1.c1 AS TEXT)  WHEN (vt1.c1 IN ()) THEN t0.c72 COLLATE RTRIM END) ORDER BY (((vt1.c0)) NOT BETWEEN (((((('712685')OR(t0.c72)))OR(vt1.c1)))) AND (((+ (t0.c72))))) DESC;
SELECT ALL * FROM t0 WHERE ((((t0.c72)) BETWEEN ((((t0.c72) ISNULL))) AND ((LIKELY(t0.c72)))));
SELECT SUM(count) FROM (SELECT (((((t0.c72)) BETWEEN ((((t0.c72) ISNULL))) AND ((LIKELY(t0.c72))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c72)) BETWEEN ((((t0.c72) ISNULL))) AND ((LIKELY(t0.c72)))));
SELECT SUM(count) FROM (SELECT (((((t0.c72)) BETWEEN ((((t0.c72) ISNULL))) AND ((LIKELY(t0.c72))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c72)) BETWEEN ((((t0.c72) ISNULL))) AND ((LIKELY(t0.c72)))));
SELECT * FROM t0, vt1 WHERE ((((vt1.c0 IN ())) NOTNULL)) ORDER BY '1692890312' DESC, ((UPPER(vt1.c0))IS((((t0.c72, vt1.c1, NULL))>=((t0.c72, vt1.c0, vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM t0, vt1 ORDER BY '1692890312' DESC, ((UPPER(vt1.c0))IS((((t0.c72, vt1.c1, NULL))>=((t0.c72, vt1.c0, vt1.c0))))) DESC  NULLS LAST);
SELECT * FROM t0, vt1 WHERE ((((vt1.c0 IN ())) NOTNULL)) ORDER BY '1692890312' DESC, ((UPPER(vt1.c0))IS((((t0.c72, vt1.c1, NULL))>=((t0.c72, vt1.c0, vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM t0, vt1 ORDER BY '1692890312' DESC, ((UPPER(vt1.c0))IS((((t0.c72, vt1.c1, NULL))>=((t0.c72, vt1.c0, vt1.c0))))) DESC  NULLS LAST);
SELECT * FROM t0, vt1 WHERE ((((vt1.c0 IN ())) NOTNULL)) ORDER BY '1692890312' DESC, ((UPPER(vt1.c0))IS((((t0.c72, vt1.c1, NULL))>=((t0.c72, vt1.c0, vt1.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((0.6189792380171211)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))) BETWEEN (((0.12438168618841572)+(vt1.c1))) AND (CAST(vt1.c1 AS BLOB)))) ORDER BY ((((t0.c72, vt1.c1, t0.c72))<=((vt1.c0, 0.5590674584090705, NULL))) IN ()) DESC  NULLS LAST, vt1.c0, ABS(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((0.6189792380171211)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))) BETWEEN (((0.12438168618841572)+(vt1.c1))) AND (CAST(vt1.c1 AS BLOB)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((t0.c72, vt1.c1, t0.c72))<=((vt1.c0, 0.5590674584090705, NULL))) IN ()) DESC  NULLS LAST, vt1.c0, ABS(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))));
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((0.6189792380171211)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))) BETWEEN (((0.12438168618841572)+(vt1.c1))) AND (CAST(vt1.c1 AS BLOB)))) ORDER BY ((((t0.c72, vt1.c1, t0.c72))<=((vt1.c0, 0.5590674584090705, NULL))) IN ()) DESC  NULLS LAST, vt1.c0, ABS(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((0.6189792380171211)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))) BETWEEN (((0.12438168618841572)+(vt1.c1))) AND (CAST(vt1.c1 AS BLOB)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((t0.c72, vt1.c1, t0.c72))<=((vt1.c0, 0.5590674584090705, NULL))) IN ()) DESC  NULLS LAST, vt1.c0, ABS(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))));
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((0.6189792380171211)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))) BETWEEN (((0.12438168618841572)+(vt1.c1))) AND (CAST(vt1.c1 AS BLOB)))) ORDER BY ((((t0.c72, vt1.c1, t0.c72))<=((vt1.c0, 0.5590674584090705, NULL))) IN ()) DESC  NULLS LAST, vt1.c0, ABS(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)));
SELECT * FROM vt1, t0 WHERE ((((((t0.c72))!=((vt1.c1)))) NOT BETWEEN (((t0.c72) BETWEEN (vt1.c1) AND (vt1.c0))) AND ((vt1.c1 IN ())))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c72))<>((vt1.c1)))) NOT BETWEEN (((t0.c72) BETWEEN (vt1.c1) AND (vt1.c0))) AND ((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1, t0 ORDER BY NULL  NULLS FIRST);
SELECT * FROM vt1, t0 WHERE ((((((t0.c72))!=((vt1.c1)))) NOT BETWEEN (((t0.c72) BETWEEN (vt1.c1) AND (vt1.c0))) AND ((vt1.c1 IN ())))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c72))<>((vt1.c1)))) NOT BETWEEN (((t0.c72) BETWEEN (vt1.c1) AND (vt1.c0))) AND ((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1, t0 ORDER BY NULL  NULLS FIRST);
SELECT * FROM vt1, t0 WHERE ((((((t0.c72))!=((vt1.c1)))) NOT BETWEEN (((t0.c72) BETWEEN (vt1.c1) AND (vt1.c0))) AND ((vt1.c1 IN ())))) ORDER BY NULL  NULLS FIRST;
SELECT * FROM vt1, rt0 CROSS JOIN t0 ON ((((vt1.c0) NOT BETWEEN (t0.c72) AND (rt0.c4))) ISNULL) WHERE (0.9719653896981952) ORDER BY ((vt1.c1) BETWEEN (rt0.c0) AND (vt1.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.9719653896981952) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN t0 ON ((((vt1.c0) NOT BETWEEN (t0.c72) AND (rt0.c4))) ISNULL) ORDER BY ((vt1.c1) BETWEEN (rt0.c0) AND (vt1.c1)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt1, rt0 CROSS JOIN t0 ON ((((vt1.c0) NOT BETWEEN (t0.c72) AND (rt0.c4))) ISNULL) WHERE (0.9719653896981952) ORDER BY ((vt1.c1) BETWEEN (rt0.c0) AND (vt1.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.9719653896981952) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN t0 ON ((((vt1.c0) NOT BETWEEN (t0.c72) AND (rt0.c4))) ISNULL) ORDER BY ((vt1.c1) BETWEEN (rt0.c0) AND (vt1.c1)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt1, rt0 CROSS JOIN t0 ON ((((vt1.c0) NOT BETWEEN (t0.c72) AND (rt0.c4))) ISNULL) WHERE (0.9719653896981952) ORDER BY ((vt1.c1) BETWEEN (rt0.c0) AND (vt1.c1)) COLLATE NOCASE  NULLS LAST;
SELECT * FROM t0 WHERE ((((((t0.c72) NOT BETWEEN (-1338381504) AND (t0.c72)), (- (t0.c72)), t0.c72, (t0.c72 IN ()), CAST(t0.c72 AS INTEGER)))>=((CASE WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 END, (t0.c72 IN ()), ((((((((t0.c72)OR(t0.c72)))AND(t0.c72)))OR(t0.c72)))OR(0.931347424793578)), CAST(t0.c72 AS TEXT), ((t0.c72) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c72) NOT BETWEEN (-1338381504) AND (t0.c72)), (- (t0.c72)), t0.c72, (t0.c72 IN ()), CAST(t0.c72 AS INTEGER)))>=((CASE WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 END, (t0.c72 IN ()), ((((((((t0.c72)OR(t0.c72)))AND(t0.c72)))OR(t0.c72)))OR(0.931347424793578)), CAST(t0.c72 AS TEXT), ((t0.c72) NOT NULL))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c72) NOT BETWEEN (-1338381504) AND (t0.c72)), (- (t0.c72)), t0.c72, (t0.c72 IN ()), CAST(t0.c72 AS INTEGER)))>=((CASE WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 END, (t0.c72 IN ()), ((((((((t0.c72)OR(t0.c72)))AND(t0.c72)))OR(t0.c72)))OR(0.931347424793578)), CAST(t0.c72 AS TEXT), ((t0.c72) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c72) NOT BETWEEN (-1338381504) AND (t0.c72)), (- (t0.c72)), t0.c72, (t0.c72 IN ()), CAST(t0.c72 AS INTEGER)))>=((CASE WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 END, (t0.c72 IN ()), ((((((((t0.c72)OR(t0.c72)))AND(t0.c72)))OR(t0.c72)))OR(0.931347424793578)), CAST(t0.c72 AS TEXT), ((t0.c72) NOT NULL))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c72) NOT BETWEEN (-1338381504) AND (t0.c72)), (- (t0.c72)), t0.c72, (t0.c72 IN ()), CAST(t0.c72 AS INTEGER)))>=((CASE WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 END, (t0.c72 IN ()), ((((((((t0.c72)OR(t0.c72)))AND(t0.c72)))OR(t0.c72)))OR(0.931347424793578)), CAST(t0.c72 AS TEXT), ((t0.c72) NOT NULL)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (('-773143135' IN ())) ORDER BY (((((((((vt1.c1 IN ()))AND(((vt1.c1)<<(vt1.c0)))))AND(-1.194035763E9)))OR(vt1.c1 COLLATE NOCASE)))AND(UNICODE(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('-773143135' IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((((((((vt1.c1 IN ()))AND(((vt1.c1)<<(vt1.c0)))))AND(-1.194035763E9)))OR(vt1.c1 COLLATE NOCASE)))AND(UNICODE(vt1.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (('-773143135' IN ())) ORDER BY (((((((((vt1.c1 IN ()))AND(((vt1.c1)<<(vt1.c0)))))AND(-1.194035763E9)))OR(vt1.c1 COLLATE NOCASE)))AND(UNICODE(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('-773143135' IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((((((((vt1.c1 IN ()))AND(((vt1.c1)<<(vt1.c0)))))AND(-1.194035763E9)))OR(vt1.c1 COLLATE NOCASE)))AND(UNICODE(vt1.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (('-773143135' IN ())) ORDER BY (((((((((vt1.c1 IN ()))AND(((vt1.c1)<<(vt1.c0)))))AND(-1.194035763E9)))OR(vt1.c1 COLLATE NOCASE)))AND(UNICODE(vt1.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON (t0.c72 IN (((vt1.c0) NOT NULL))) WHERE ((+ (t0.c72)));
SELECT SUM(count) FROM (SELECT (((+ (t0.c72))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (t0.c72 IN (((vt1.c0) NOT NULL))));
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON (t0.c72 IN (((vt1.c0) NOT NULL))) WHERE ((+ (t0.c72)));
SELECT SUM(count) FROM (SELECT (((+ (t0.c72))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (t0.c72 IN (((vt1.c0) NOT NULL))));
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON (t0.c72 IN (((vt1.c0) NOT NULL))) WHERE ((+ (t0.c72)));
SELECT ALL * FROM t0, rt0 WHERE (((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))LIKE(CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))LIKE(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))LIKE(CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))LIKE(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))LIKE(CAST(rt0.c0 AS BLOB))));
SELECT ALL * FROM vt1, rt0, t0 WHERE ((((t0.c72, x'ec4c', x''))<(((((rt0.c1))!=((t0.c72))), (NOT (NULL)), LOWER(t0.c72))))) ORDER BY ((((((((((((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c2)))AND(CAST(rt0.c2 AS BLOB))))AND((((t0.c72)) BETWEEN ((vt1.c0)) AND ((rt0.c3))))))AND(CASE WHEN rt0.c2 THEN t0.c72 WHEN rt0.c1 THEN t0.c72 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN t0.c72 WHEN vt1.c1 THEN t0.c72 ELSE rt0.c1 END)))AND(((vt1.c1)<(rt0.c2)))))AND((~ (rt0.c1)))))OR(CAST(rt0.c0 AS BLOB))) DESC  NULLS FIRST, (- (CASE WHEN rt0.c3 THEN rt0.c2 END)) DESC, CAST(NULL AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c72, x'ec4c', x''))<(((((rt0.c1))<>((t0.c72))), (NOT (NULL)), LOWER(t0.c72))))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY ((((((((((((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c2)))AND(CAST(rt0.c2 AS BLOB))))AND((((t0.c72)) BETWEEN ((vt1.c0)) AND ((rt0.c3))))))AND(CASE WHEN rt0.c2 THEN t0.c72 WHEN rt0.c1 THEN t0.c72 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN t0.c72 WHEN vt1.c1 THEN t0.c72 ELSE rt0.c1 END)))AND(((vt1.c1)<(rt0.c2)))))AND((~ (rt0.c1)))))OR(CAST(rt0.c0 AS BLOB))) DESC  NULLS FIRST, (- (CASE WHEN rt0.c3 THEN rt0.c2 END)) DESC, CAST(NULL AS INTEGER)  NULLS LAST);
SELECT ALL * FROM vt1, rt0, t0 WHERE ((((t0.c72, x'ec4c', x''))<(((((rt0.c1))!=((t0.c72))), (NOT (NULL)), LOWER(t0.c72))))) ORDER BY ((((((((((((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c2)))AND(CAST(rt0.c2 AS BLOB))))AND((((t0.c72)) BETWEEN ((vt1.c0)) AND ((rt0.c3))))))AND(CASE WHEN rt0.c2 THEN t0.c72 WHEN rt0.c1 THEN t0.c72 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN t0.c72 WHEN vt1.c1 THEN t0.c72 ELSE rt0.c1 END)))AND(((vt1.c1)<(rt0.c2)))))AND((~ (rt0.c1)))))OR(CAST(rt0.c0 AS BLOB))) DESC  NULLS FIRST, (- (CASE WHEN rt0.c3 THEN rt0.c2 END)) DESC, CAST(NULL AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c72, x'ec4c', x''))<(((((rt0.c1))<>((t0.c72))), (NOT (NULL)), LOWER(t0.c72))))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY ((((((((((((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c2)))AND(CAST(rt0.c2 AS BLOB))))AND((((t0.c72)) BETWEEN ((vt1.c0)) AND ((rt0.c3))))))AND(CASE WHEN rt0.c2 THEN t0.c72 WHEN rt0.c1 THEN t0.c72 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN t0.c72 WHEN vt1.c1 THEN t0.c72 ELSE rt0.c1 END)))AND(((vt1.c1)<(rt0.c2)))))AND((~ (rt0.c1)))))OR(CAST(rt0.c0 AS BLOB))) DESC  NULLS FIRST, (- (CASE WHEN rt0.c3 THEN rt0.c2 END)) DESC, CAST(NULL AS INTEGER)  NULLS LAST);
SELECT ALL * FROM vt1, rt0, t0 WHERE ((((t0.c72, x'ec4c', x''))<(((((rt0.c1))!=((t0.c72))), (NOT (NULL)), LOWER(t0.c72))))) ORDER BY ((((((((((((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c2)))AND(CAST(rt0.c2 AS BLOB))))AND((((t0.c72)) BETWEEN ((vt1.c0)) AND ((rt0.c3))))))AND(CASE WHEN rt0.c2 THEN t0.c72 WHEN rt0.c1 THEN t0.c72 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN t0.c72 WHEN vt1.c1 THEN t0.c72 ELSE rt0.c1 END)))AND(((vt1.c1)<(rt0.c2)))))AND((~ (rt0.c1)))))OR(CAST(rt0.c0 AS BLOB))) DESC  NULLS FIRST, (- (CASE WHEN rt0.c3 THEN rt0.c2 END)) DESC, CAST(NULL AS INTEGER)  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (CAST((rt0.c4 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c4 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (CAST((rt0.c4 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c4 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (CAST((rt0.c4 IN ()) AS TEXT));
SELECT ALL * FROM rt0, t0, vt1 WHERE (((((rt0.c4)!=(vt1.c0)))<((0.2314357367030606 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)<>(vt1.c0)))<((0.2314357367030606 IN ())))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT ALL * FROM rt0, t0, vt1 WHERE (((((rt0.c4)!=(vt1.c0)))<((0.2314357367030606 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)<>(vt1.c0)))<((0.2314357367030606 IN ())))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT ALL * FROM rt0, t0, vt1 WHERE (((((rt0.c4)!=(vt1.c0)))<((0.2314357367030606 IN ()))));
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c72  WHEN t0.c72 THEN t0.c72 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c72  WHEN t0.c72 THEN t0.c72 END COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c72  WHEN t0.c72 THEN t0.c72 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c72  WHEN t0.c72 THEN t0.c72 END COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c72  WHEN t0.c72 THEN t0.c72 END COLLATE RTRIM);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)OR(vt1.c1)))OR(rt0.c1))) NOT BETWEEN (rt0.c1) AND (CAST(vt1.c0 AS BLOB))) RIGHT OUTER JOIN t0 ON (((vt1.c1)|(rt0.c0)) IN ()) WHERE ((((t0.c72) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c72) NOTNULL) IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)OR(vt1.c1)))OR(rt0.c1))) NOT BETWEEN (rt0.c1) AND (CAST(vt1.c0 AS BLOB))) RIGHT OUTER JOIN t0 ON (((vt1.c1)|(rt0.c0)) IN ()));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)OR(vt1.c1)))OR(rt0.c1))) NOT BETWEEN (rt0.c1) AND (CAST(vt1.c0 AS BLOB))) RIGHT OUTER JOIN t0 ON (((vt1.c1)|(rt0.c0)) IN ()) WHERE ((((t0.c72) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c72) NOTNULL) IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)OR(vt1.c1)))OR(rt0.c1))) NOT BETWEEN (rt0.c1) AND (CAST(vt1.c0 AS BLOB))) RIGHT OUTER JOIN t0 ON (((vt1.c1)|(rt0.c0)) IN ()));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)OR(vt1.c1)))OR(rt0.c1))) NOT BETWEEN (rt0.c1) AND (CAST(vt1.c0 AS BLOB))) RIGHT OUTER JOIN t0 ON (((vt1.c1)|(rt0.c0)) IN ()) WHERE ((((t0.c72) NOTNULL) IN ()));
SELECT * FROM t0, vt1 WHERE (0.617302088896576);
SELECT SUM(count) FROM (SELECT ((0.617302088896576) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (0.617302088896576);
SELECT SUM(count) FROM (SELECT ((0.617302088896576) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (0.617302088896576);
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((((((t0.c72)AND(rt0.c2)))OR(rt0.c0)))>=(x'')) WHERE ((((t0.c72)) NOT BETWEEN ((NULL)) AND ((rt0.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((t0.c72)) NOT BETWEEN ((NULL)) AND ((rt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((((((t0.c72)AND(rt0.c2)))OR(rt0.c0)))>=(x'')));
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((((((t0.c72)AND(rt0.c2)))OR(rt0.c0)))>=(x'')) WHERE ((((t0.c72)) NOT BETWEEN ((NULL)) AND ((rt0.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((t0.c72)) NOT BETWEEN ((NULL)) AND ((rt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((((((t0.c72)AND(rt0.c2)))OR(rt0.c0)))>=(x'')));
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((((((t0.c72)AND(rt0.c2)))OR(rt0.c0)))>=(x'')) WHERE ((((t0.c72)) NOT BETWEEN ((NULL)) AND ((rt0.c1 COLLATE BINARY))));
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (INSTR(CAST(rt0.c1 AS TEXT), QUOTE(vt1.c0))) ORDER BY 0.4416162813468969  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(CAST(rt0.c1 AS TEXT), QUOTE(vt1.c0))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY 0.4416162813468969  NULLS FIRST);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (INSTR(CAST(rt0.c1 AS TEXT), QUOTE(vt1.c0))) ORDER BY 0.4416162813468969  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(CAST(rt0.c1 AS TEXT), QUOTE(vt1.c0))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY 0.4416162813468969  NULLS FIRST);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (INSTR(CAST(rt0.c1 AS TEXT), QUOTE(vt1.c0))) ORDER BY 0.4416162813468969  NULLS FIRST;
SELECT * FROM rt0, vt1, t0 WHERE (NULLIF(CASE rt0.c2  WHEN rt0.c3 THEN vt1.c1 END, CASE WHEN vt1.c1 THEN vt1.c0 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((NULLIF(CASE rt0.c2  WHEN rt0.c3 THEN vt1.c1 END, CASE WHEN vt1.c1 THEN vt1.c0 ELSE rt0.c1 END)) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT * FROM rt0, vt1, t0 WHERE (NULLIF(CASE rt0.c2  WHEN rt0.c3 THEN vt1.c1 END, CASE WHEN vt1.c1 THEN vt1.c0 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((NULLIF(CASE rt0.c2  WHEN rt0.c3 THEN vt1.c1 END, CASE WHEN vt1.c1 THEN vt1.c0 ELSE rt0.c1 END)) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT * FROM rt0, vt1, t0 WHERE (NULLIF(CASE rt0.c2  WHEN rt0.c3 THEN vt1.c1 END, CASE WHEN vt1.c1 THEN vt1.c0 ELSE rt0.c1 END));
SELECT ALL * FROM vt1, rt0 WHERE (LIKELIHOOD(vt1.c0 COLLATE BINARY, 0.6750079713695976));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(vt1.c0 COLLATE BINARY, 0.6750079713695976)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (LIKELIHOOD(vt1.c0 COLLATE BINARY, 0.6750079713695976));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(vt1.c0 COLLATE BINARY, 0.6750079713695976)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (LIKELIHOOD(vt1.c0 COLLATE BINARY, 0.6750079713695976));
SELECT * FROM rt0, t0, vt1 WHERE ((((rt0.c1 IN ()))==((NOT (t0.c72)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))=((NOT (t0.c72))))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT * FROM rt0, t0, vt1 WHERE ((((rt0.c1 IN ()))==((NOT (t0.c72)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))=((NOT (t0.c72))))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT * FROM rt0, t0, vt1 WHERE ((((rt0.c1 IN ()))==((NOT (t0.c72)))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c2))>((rt0.c0)))) BETWEEN (x'') AND (((t0.c72)OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))>((rt0.c0)))) BETWEEN (x'') AND (((t0.c72)OR(rt0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c2))>((rt0.c0)))) BETWEEN (x'') AND (((t0.c72)OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))>((rt0.c0)))) BETWEEN (x'') AND (((t0.c72)OR(rt0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c2))>((rt0.c0)))) BETWEEN (x'') AND (((t0.c72)OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CAST(vt1.c1 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CAST(vt1.c1 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CAST(vt1.c1 COLLATE RTRIM AS REAL));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((t0.c72)>=(vt1.c0)) IN ())) ORDER BY ((UNICODE(t0.c72)) IS TRUE)  NULLS LAST, (((t0.c72 IN (t0.c72)))IS(CASE t0.c72  WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE t0.c72 END)) ASC  NULLS LAST, CAST((vt1.c0 IN (vt1.c1, vt1.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c72)>=(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, t0 ORDER BY ((UNICODE(t0.c72)) IS TRUE)  NULLS LAST, (((t0.c72 IN (t0.c72)))IS(CASE t0.c72  WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE t0.c72 END)) ASC  NULLS LAST, CAST((vt1.c0 IN (vt1.c1, vt1.c0)) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((t0.c72)>=(vt1.c0)) IN ())) ORDER BY ((UNICODE(t0.c72)) IS TRUE)  NULLS LAST, (((t0.c72 IN (t0.c72)))IS(CASE t0.c72  WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE t0.c72 END)) ASC  NULLS LAST, CAST((vt1.c0 IN (vt1.c1, vt1.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c72)>=(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, t0 ORDER BY ((UNICODE(t0.c72)) IS TRUE)  NULLS LAST, (((t0.c72 IN (t0.c72)))IS(CASE t0.c72  WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE t0.c72 END)) ASC  NULLS LAST, CAST((vt1.c0 IN (vt1.c1, vt1.c0)) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((t0.c72)>=(vt1.c0)) IN ())) ORDER BY ((UNICODE(t0.c72)) IS TRUE)  NULLS LAST, (((t0.c72 IN (t0.c72)))IS(CASE t0.c72  WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE t0.c72 END)) ASC  NULLS LAST, CAST((vt1.c0 IN (vt1.c1, vt1.c0)) AS NUMERIC) ASC;
SELECT * FROM rt0, t0 LEFT OUTER JOIN vt1 ON (((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c1)) IN (CASE rt0.c2  WHEN t0.c72 THEN rt0.c4 END)) WHERE (rt0.c0) ORDER BY vt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt1 ON (((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c1)) IN (CASE rt0.c2  WHEN t0.c72 THEN rt0.c4 END)) ORDER BY vt1.c1  NULLS LAST);
SELECT * FROM rt0, t0 LEFT OUTER JOIN vt1 ON (((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c1)) IN (CASE rt0.c2  WHEN t0.c72 THEN rt0.c4 END)) WHERE (rt0.c0) ORDER BY vt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt1 ON (((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c1)) IN (CASE rt0.c2  WHEN t0.c72 THEN rt0.c4 END)) ORDER BY vt1.c1  NULLS LAST);
SELECT * FROM rt0, t0 LEFT OUTER JOIN vt1 ON (((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c1)) IN (CASE rt0.c2  WHEN t0.c72 THEN rt0.c4 END)) WHERE (rt0.c0) ORDER BY vt1.c1  NULLS LAST;
SELECT ALL * FROM vt1, t0, rt0 WHERE (CASE WHEN (~ (vt1.c0)) THEN vt1.c1 ELSE ((t0.c72) IS FALSE) END) ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS BLOB)  NULLS LAST, (((((rt0.c2)>=(t0.c72)), ((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c3)), rt0.c1))<(((rt0.c4 IN ()), CAST(vt1.c1 AS TEXT), ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c4)))AND(NULL)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt1.c0)) THEN vt1.c1 ELSE ((t0.c72) IS FALSE) END) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS BLOB)  NULLS LAST, (((((rt0.c2)>=(t0.c72)), ((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c3)), rt0.c1))<(((rt0.c4 IN ()), CAST(vt1.c1 AS TEXT), ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c4)))AND(NULL)))))  NULLS FIRST);
SELECT ALL * FROM vt1, t0, rt0 WHERE (CASE WHEN (~ (vt1.c0)) THEN vt1.c1 ELSE ((t0.c72) IS FALSE) END) ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS BLOB)  NULLS LAST, (((((rt0.c2)>=(t0.c72)), ((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c3)), rt0.c1))<(((rt0.c4 IN ()), CAST(vt1.c1 AS TEXT), ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c4)))AND(NULL)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt1.c0)) THEN vt1.c1 ELSE ((t0.c72) IS FALSE) END) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS BLOB)  NULLS LAST, (((((rt0.c2)>=(t0.c72)), ((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c3)), rt0.c1))<(((rt0.c4 IN ()), CAST(vt1.c1 AS TEXT), ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c4)))AND(NULL)))))  NULLS FIRST);
SELECT ALL * FROM vt1, t0, rt0 WHERE (CASE WHEN (~ (vt1.c0)) THEN vt1.c1 ELSE ((t0.c72) IS FALSE) END) ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS BLOB)  NULLS LAST, (((((rt0.c2)>=(t0.c72)), ((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c3)), rt0.c1))<(((rt0.c4 IN ()), CAST(vt1.c1 AS TEXT), ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c4)))AND(NULL)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE ((rt0.c3)>>(rt0.c0))  WHEN CAST(rt0.c3 AS NUMERIC) THEN ((t0.c72) NOT NULL) ELSE CAST(rt0.c3 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3)>>(rt0.c0))  WHEN CAST(rt0.c3 AS NUMERIC) THEN ((t0.c72) NOT NULL) ELSE CAST(rt0.c3 AS REAL) END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE ((rt0.c3)>>(rt0.c0))  WHEN CAST(rt0.c3 AS NUMERIC) THEN ((t0.c72) NOT NULL) ELSE CAST(rt0.c3 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3)>>(rt0.c0))  WHEN CAST(rt0.c3 AS NUMERIC) THEN ((t0.c72) NOT NULL) ELSE CAST(rt0.c3 AS REAL) END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE ((rt0.c3)>>(rt0.c0))  WHEN CAST(rt0.c3 AS NUMERIC) THEN ((t0.c72) NOT NULL) ELSE CAST(rt0.c3 AS REAL) END);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c1)/(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1)/(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c1)/(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1)/(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c1)/(rt0.c1)))));
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (((((vt1.c1) ISNULL)) NOT BETWEEN ((+ (vt1.c0))) AND (((vt1.c0) NOT NULL)))) ORDER BY (NOT ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) ISNULL)) NOT BETWEEN ((+ (vt1.c0))) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1 ORDER BY (NOT ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c1))))));
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (((((vt1.c1) ISNULL)) NOT BETWEEN ((+ (vt1.c0))) AND (((vt1.c0) NOT NULL)))) ORDER BY (NOT ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) ISNULL)) NOT BETWEEN ((+ (vt1.c0))) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1 ORDER BY (NOT ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c1))))));
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (((((vt1.c1) ISNULL)) NOT BETWEEN ((+ (vt1.c0))) AND (((vt1.c0) NOT NULL)))) ORDER BY (NOT ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c1)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON (((((vt1.c0))>=((vt1.c0)))) BETWEEN (CAST(vt1.c1 AS BLOB)) AND (((vt1.c0) NOT NULL))) WHERE (((CAST(x'' AS BLOB)) NOT BETWEEN ((+ (vt1.c0))) AND (((vt1.c0) BETWEEN (x'57af') AND (0.2470215200145519)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS BLOB)) NOT BETWEEN ((+ (vt1.c0))) AND (((vt1.c0) BETWEEN (x'57af') AND (0.2470215200145519))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (((((vt1.c0))>=((vt1.c0)))) BETWEEN (CAST(vt1.c1 AS BLOB)) AND (((vt1.c0) NOT NULL))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON (((((vt1.c0))>=((vt1.c0)))) BETWEEN (CAST(vt1.c1 AS BLOB)) AND (((vt1.c0) NOT NULL))) WHERE (((CAST(x'' AS BLOB)) NOT BETWEEN ((+ (vt1.c0))) AND (((vt1.c0) BETWEEN (x'57af') AND (0.2470215200145519)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS BLOB)) NOT BETWEEN ((+ (vt1.c0))) AND (((vt1.c0) BETWEEN (x'57af') AND (0.2470215200145519))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (((((vt1.c0))>=((vt1.c0)))) BETWEEN (CAST(vt1.c1 AS BLOB)) AND (((vt1.c0) NOT NULL))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON (((((vt1.c0))>=((vt1.c0)))) BETWEEN (CAST(vt1.c1 AS BLOB)) AND (((vt1.c0) NOT NULL))) WHERE (((CAST(x'' AS BLOB)) NOT BETWEEN ((+ (vt1.c0))) AND (((vt1.c0) BETWEEN (x'57af') AND (0.2470215200145519)))));
SELECT ALL * FROM rt0, t0, vt1 WHERE (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM) ORDER BY NULLIF(((0.8038222705081229)||(rt0.c2)), CAST(rt0.c0 AS BLOB)) DESC, CAST((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((x''))) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY NULLIF(((0.8038222705081229)||(rt0.c2)), CAST(rt0.c0 AS BLOB)) DESC, CAST((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((x''))) AS INTEGER) DESC);
SELECT ALL * FROM rt0, t0, vt1 WHERE (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM) ORDER BY NULLIF(((0.8038222705081229)||(rt0.c2)), CAST(rt0.c0 AS BLOB)) DESC, CAST((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((x''))) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY NULLIF(((0.8038222705081229)||(rt0.c2)), CAST(rt0.c0 AS BLOB)) DESC, CAST((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((x''))) AS INTEGER) DESC);
SELECT ALL * FROM rt0, t0, vt1 WHERE (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM) ORDER BY NULLIF(((0.8038222705081229)||(rt0.c2)), CAST(rt0.c0 AS BLOB)) DESC, CAST((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((x''))) AS INTEGER) DESC;
SELECT ALL * FROM rt0 WHERE ((- ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- ((NOT (rt0.c1)))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON (((vt1.c0 IN ())) BETWEEN ((((x'', vt1.c0, rt0.c4)) BETWEEN ((rt0.c1, NULL, rt0.c3)) AND ((rt0.c2, vt1.c1, rt0.c4)))) AND (((rt0.c1)+(rt0.c2)))) LEFT OUTER JOIN rt0 ON 1.262470405E9 WHERE (((CAST(rt0.c4 AS BLOB))-((((t0.c72))>((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c4 AS BLOB))-((((t0.c72))>((rt0.c0)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (((vt1.c0 IN ())) BETWEEN ((((x'', vt1.c0, rt0.c4)) BETWEEN ((rt0.c1, NULL, rt0.c3)) AND ((rt0.c2, vt1.c1, rt0.c4)))) AND (((rt0.c1)+(rt0.c2)))) LEFT OUTER JOIN rt0 ON 1.262470405E9);
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON (((vt1.c0 IN ())) BETWEEN ((((x'', vt1.c0, rt0.c4)) BETWEEN ((rt0.c1, NULL, rt0.c3)) AND ((rt0.c2, vt1.c1, rt0.c4)))) AND (((rt0.c1)+(rt0.c2)))) LEFT OUTER JOIN rt0 ON 1.262470405E9 WHERE (((CAST(rt0.c4 AS BLOB))-((((t0.c72))>((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c4 AS BLOB))-((((t0.c72))>((rt0.c0)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (((vt1.c0 IN ())) BETWEEN ((((x'', vt1.c0, rt0.c4)) BETWEEN ((rt0.c1, NULL, rt0.c3)) AND ((rt0.c2, vt1.c1, rt0.c4)))) AND (((rt0.c1)+(rt0.c2)))) LEFT OUTER JOIN rt0 ON 1.262470405E9);
SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c4)))AND(rt0.c4)))AND(rt0.c0 COLLATE RTRIM))) ORDER BY ((((rt0.c2)&('')))LIKE(((rt0.c0) BETWEEN (rt0.c2) AND (NULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c4)))AND(rt0.c4)))AND(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)&('')))LIKE(((rt0.c0) BETWEEN (rt0.c2) AND (NULL)))) DESC);
SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c4)))AND(rt0.c4)))AND(rt0.c0 COLLATE RTRIM))) ORDER BY ((((rt0.c2)&('')))LIKE(((rt0.c0) BETWEEN (rt0.c2) AND (NULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c4)))AND(rt0.c4)))AND(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)&('')))LIKE(((rt0.c0) BETWEEN (rt0.c2) AND (NULL)))) DESC);
SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c4)))AND(rt0.c4)))AND(rt0.c0 COLLATE RTRIM))) ORDER BY ((((rt0.c2)&('')))LIKE(((rt0.c0) BETWEEN (rt0.c2) AND (NULL)))) DESC;
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON CAST((0.2424212188531778 IN ()) AS BLOB) WHERE ((((rt0.c4 IN (rt0.c2)))<>(rt0.c2 COLLATE BINARY))) ORDER BY (NOT (((rt0.c2)GLOB(rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN (rt0.c2)))!=(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CAST((0.2424212188531778 IN ()) AS BLOB) ORDER BY (NOT (((rt0.c2)GLOB(rt0.c3)))) ASC);
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON CAST((0.2424212188531778 IN ()) AS BLOB) WHERE ((((rt0.c4 IN (rt0.c2)))<>(rt0.c2 COLLATE BINARY))) ORDER BY (NOT (((rt0.c2)GLOB(rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN (rt0.c2)))!=(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CAST((0.2424212188531778 IN ()) AS BLOB) ORDER BY (NOT (((rt0.c2)GLOB(rt0.c3)))) ASC);
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON CAST((0.2424212188531778 IN ()) AS BLOB) WHERE ((((rt0.c4 IN (rt0.c2)))<>(rt0.c2 COLLATE BINARY))) ORDER BY (NOT (((rt0.c2)GLOB(rt0.c3)))) ASC;
SELECT ALL * FROM t0 WHERE (((((t0.c72) ISNULL))>>(((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72))))) ORDER BY ((t0.c72 COLLATE BINARY)|(SQLITE_COMPILEOPTION_USED(0.41612173536785946)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c72) ISNULL))>>(((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c72 COLLATE BINARY)|(SQLITE_COMPILEOPTION_USED(0.41612173536785946)))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c72) ISNULL))>>(((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72))))) ORDER BY ((t0.c72 COLLATE BINARY)|(SQLITE_COMPILEOPTION_USED(0.41612173536785946)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c72) ISNULL))>>(((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c72 COLLATE BINARY)|(SQLITE_COMPILEOPTION_USED(0.41612173536785946)))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c72) ISNULL))>>(((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72))))) ORDER BY ((t0.c72 COLLATE BINARY)|(SQLITE_COMPILEOPTION_USED(0.41612173536785946)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c72 COLLATE BINARY, '', '579259338'))>=(((((NULL))!=((t0.c72))), CAST(t0.c72 AS REAL), t0.c72))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c72 COLLATE BINARY, '', '579259338'))>=(((((NULL))!=((t0.c72))), CAST(t0.c72 AS REAL), t0.c72)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c72 COLLATE BINARY, '', '579259338'))>=(((((NULL))!=((t0.c72))), CAST(t0.c72 AS REAL), t0.c72))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c72 COLLATE BINARY, '', '579259338'))>=(((((NULL))!=((t0.c72))), CAST(t0.c72 AS REAL), t0.c72)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c72 COLLATE BINARY, '', '579259338'))>=(((((NULL))!=((t0.c72))), CAST(t0.c72 AS REAL), t0.c72))));
SELECT ALL * FROM t0, vt1, rt0 WHERE (0.45607553805246803);
SELECT SUM(count) FROM (SELECT ALL ((0.45607553805246803) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE (0.45607553805246803);
SELECT SUM(count) FROM (SELECT ALL ((0.45607553805246803) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE (0.45607553805246803);
SELECT * FROM t0 WHERE (((HEX(DISTINCT t0.c72))>>(((t0.c72)*(t0.c72)))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT t0.c72))>>(((t0.c72)*(t0.c72))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((HEX(DISTINCT t0.c72))>>(((t0.c72)*(t0.c72)))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT t0.c72))>>(((t0.c72)*(t0.c72))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((HEX(DISTINCT t0.c72))>>(((t0.c72)*(t0.c72)))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON CASE (NOT (rt0.c3))  WHEN rt0.c4 COLLATE BINARY THEN (rt0.c2 IN ()) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) THEN ((rt0.c0)IS NOT(rt0.c1)) WHEN x'' THEN (rt0.c3 IN ()) WHEN rt0.c3 THEN ((NULL)%(rt0.c3)) WHEN t0.c72 COLLATE BINARY THEN rt0.c0 COLLATE BINARY ELSE (((t0.c72)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) END WHERE ((~ ((((rt0.c1, rt0.c1, rt0.c4)) NOT BETWEEN (('䧃༼e|z', rt0.c0, rt0.c1)) AND ((1390216543, rt0.c4, t0.c72))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c1, rt0.c1, rt0.c4)) NOT BETWEEN (('䧃༼e|z', rt0.c0, rt0.c1)) AND ((1390216543, rt0.c4, t0.c72)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CASE (NOT (rt0.c3))  WHEN rt0.c4 COLLATE BINARY THEN (rt0.c2 IN ()) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) THEN ((rt0.c0)IS NOT(rt0.c1)) WHEN x'' THEN (rt0.c3 IN ()) WHEN rt0.c3 THEN ((NULL)%(rt0.c3)) WHEN t0.c72 COLLATE BINARY THEN rt0.c0 COLLATE BINARY ELSE (((t0.c72)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) END);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON CASE (NOT (rt0.c3))  WHEN rt0.c4 COLLATE BINARY THEN (rt0.c2 IN ()) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) THEN ((rt0.c0)IS NOT(rt0.c1)) WHEN x'' THEN (rt0.c3 IN ()) WHEN rt0.c3 THEN ((NULL)%(rt0.c3)) WHEN t0.c72 COLLATE BINARY THEN rt0.c0 COLLATE BINARY ELSE (((t0.c72)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) END WHERE ((~ ((((rt0.c1, rt0.c1, rt0.c4)) NOT BETWEEN (('䧃༼e|z', rt0.c0, rt0.c1)) AND ((1390216543, rt0.c4, t0.c72))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c1, rt0.c1, rt0.c4)) NOT BETWEEN (('䧃༼e|z', rt0.c0, rt0.c1)) AND ((1390216543, rt0.c4, t0.c72)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CASE (NOT (rt0.c3))  WHEN rt0.c4 COLLATE BINARY THEN (rt0.c2 IN ()) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) THEN ((rt0.c0)IS NOT(rt0.c1)) WHEN x'' THEN (rt0.c3 IN ()) WHEN rt0.c3 THEN ((NULL)%(rt0.c3)) WHEN t0.c72 COLLATE BINARY THEN rt0.c0 COLLATE BINARY ELSE (((t0.c72)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) END);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON CASE (NOT (rt0.c3))  WHEN rt0.c4 COLLATE BINARY THEN (rt0.c2 IN ()) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) THEN ((rt0.c0)IS NOT(rt0.c1)) WHEN x'' THEN (rt0.c3 IN ()) WHEN rt0.c3 THEN ((NULL)%(rt0.c3)) WHEN t0.c72 COLLATE BINARY THEN rt0.c0 COLLATE BINARY ELSE (((t0.c72)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) END WHERE ((~ ((((rt0.c1, rt0.c1, rt0.c4)) NOT BETWEEN (('䧃༼e|z', rt0.c0, rt0.c1)) AND ((1390216543, rt0.c4, t0.c72))))));
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c1 IN ()))%(CAST(rt0.c0 AS INTEGER)))) ORDER BY ((((('616577238')!=(vt1.c0))))>=((CAST(rt0.c4 AS NUMERIC)))) DESC, IFNULL((~ (rt0.c3)), ((((NULL)AND(vt1.c0)))OR(rt0.c4)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN ()))%(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((('616577238')!=(vt1.c0))))>=((CAST(rt0.c4 AS NUMERIC)))) DESC, IFNULL((~ (rt0.c3)), ((((NULL)AND(vt1.c0)))OR(rt0.c4)))  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c1 IN ()))%(CAST(rt0.c0 AS INTEGER)))) ORDER BY ((((('616577238')!=(vt1.c0))))>=((CAST(rt0.c4 AS NUMERIC)))) DESC, IFNULL((~ (rt0.c3)), ((((NULL)AND(vt1.c0)))OR(rt0.c4)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN ()))%(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((('616577238')!=(vt1.c0))))>=((CAST(rt0.c4 AS NUMERIC)))) DESC, IFNULL((~ (rt0.c3)), ((((NULL)AND(vt1.c0)))OR(rt0.c4)))  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c1 IN ()))%(CAST(rt0.c0 AS INTEGER)))) ORDER BY ((((('616577238')!=(vt1.c0))))>=((CAST(rt0.c4 AS NUMERIC)))) DESC, IFNULL((~ (rt0.c3)), ((((NULL)AND(vt1.c0)))OR(rt0.c4)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))), (((vt1.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c0, vt1.c1))), TOTAL_CHANGES(), (+ (vt1.c1)), ((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))OR(0.4992474536431464)))OR(vt1.c1))))<>(((((NULL)) BETWEEN ((vt1.c1)) AND ((vt1.c1))), CAST(x'' AS INTEGER), '1368148419' COLLATE RTRIM, (((vt1.c0))>((vt1.c0))), (((vt1.c0, 0.9482112835281495, vt1.c1)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, 5.79259338E8)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))), (((vt1.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c0, vt1.c1))), TOTAL_CHANGES(), (+ (vt1.c1)), ((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))OR(0.4992474536431464)))OR(vt1.c1))))<>(((((NULL)) BETWEEN ((vt1.c1)) AND ((vt1.c1))), CAST(x'' AS INTEGER), '1368148419' COLLATE RTRIM, (((vt1.c0))>((vt1.c0))), (((vt1.c0, 0.9482112835281495, vt1.c1)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, 5.79259338E8))))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))), (((vt1.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c0, vt1.c1))), TOTAL_CHANGES(), (+ (vt1.c1)), ((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))OR(0.4992474536431464)))OR(vt1.c1))))<>(((((NULL)) BETWEEN ((vt1.c1)) AND ((vt1.c1))), CAST(x'' AS INTEGER), '1368148419' COLLATE RTRIM, (((vt1.c0))>((vt1.c0))), (((vt1.c0, 0.9482112835281495, vt1.c1)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, 5.79259338E8)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))), (((vt1.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c0, vt1.c1))), TOTAL_CHANGES(), (+ (vt1.c1)), ((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))OR(0.4992474536431464)))OR(vt1.c1))))<>(((((NULL)) BETWEEN ((vt1.c1)) AND ((vt1.c1))), CAST(x'' AS INTEGER), '1368148419' COLLATE RTRIM, (((vt1.c0))>((vt1.c0))), (((vt1.c0, 0.9482112835281495, vt1.c1)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, 5.79259338E8))))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))), (((vt1.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c0, vt1.c1))), TOTAL_CHANGES(), (+ (vt1.c1)), ((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))OR(0.4992474536431464)))OR(vt1.c1))))<>(((((NULL)) BETWEEN ((vt1.c1)) AND ((vt1.c1))), CAST(x'' AS INTEGER), '1368148419' COLLATE RTRIM, (((vt1.c0))>((vt1.c0))), (((vt1.c0, 0.9482112835281495, vt1.c1)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, 5.79259338E8)))))));
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c1 END)IS((- (vt1.c1))))) ORDER BY ((((vt1.c1)<=(vt1.c1))) BETWEEN (((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((NOT (vt1.c1))))  NULLS LAST, (~ (((vt1.c1) NOTNULL))) ASC, ((CAST(vt1.c1 AS NUMERIC)) BETWEEN (-1.244730735E9) AND (((vt1.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c1 END)IS((- (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)<=(vt1.c1))) BETWEEN (((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((NOT (vt1.c1))))  NULLS LAST, (~ (((vt1.c1) NOTNULL))) ASC, ((CAST(vt1.c1 AS NUMERIC)) BETWEEN (-1.244730735E9) AND (((vt1.c1) ISNULL))));
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c1 END)IS((- (vt1.c1))))) ORDER BY ((((vt1.c1)<=(vt1.c1))) BETWEEN (((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((NOT (vt1.c1))))  NULLS LAST, (~ (((vt1.c1) NOTNULL))) ASC, ((CAST(vt1.c1 AS NUMERIC)) BETWEEN (-1.244730735E9) AND (((vt1.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c1 END)IS((- (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)<=(vt1.c1))) BETWEEN (((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((NOT (vt1.c1))))  NULLS LAST, (~ (((vt1.c1) NOTNULL))) ASC, ((CAST(vt1.c1 AS NUMERIC)) BETWEEN (-1.244730735E9) AND (((vt1.c1) ISNULL))));
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c1 END)IS((- (vt1.c1))))) ORDER BY ((((vt1.c1)<=(vt1.c1))) BETWEEN (((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((NOT (vt1.c1))))  NULLS LAST, (~ (((vt1.c1) NOTNULL))) ASC, ((CAST(vt1.c1 AS NUMERIC)) BETWEEN (-1.244730735E9) AND (((vt1.c1) ISNULL)));
SELECT ALL * FROM rt0, t0 WHERE ((x'' IN ())) ORDER BY (- (rt0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY (- (rt0.c2)) ASC  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE ((x'' IN ())) ORDER BY (- (rt0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY (- (rt0.c2)) ASC  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE ((x'' IN ())) ORDER BY (- (rt0.c2)) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (((((0.9574948651713666) NOT BETWEEN (rt0.c3) AND (rt0.c0))) ISNULL)) ORDER BY (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))) COLLATE RTRIM ASC  NULLS LAST, ((((((((((vt1.c1)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c3))) BETWEEN ((rt0.c4 IN (vt1.c1))) AND (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(vt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.9574948651713666) NOT BETWEEN (rt0.c3) AND (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))) COLLATE RTRIM ASC  NULLS LAST, ((((((((((vt1.c1)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c3))) BETWEEN ((rt0.c4 IN (vt1.c1))) AND (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(vt1.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((((0.9574948651713666) NOT BETWEEN (rt0.c3) AND (rt0.c0))) ISNULL)) ORDER BY (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))) COLLATE RTRIM ASC  NULLS LAST, ((((((((((vt1.c1)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c3))) BETWEEN ((rt0.c4 IN (vt1.c1))) AND (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(vt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.9574948651713666) NOT BETWEEN (rt0.c3) AND (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))) COLLATE RTRIM ASC  NULLS LAST, ((((((((((vt1.c1)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c3))) BETWEEN ((rt0.c4 IN (vt1.c1))) AND (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(vt1.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((((0.9574948651713666) NOT BETWEEN (rt0.c3) AND (rt0.c0))) ISNULL)) ORDER BY (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))) COLLATE RTRIM ASC  NULLS LAST, ((((((((((vt1.c1)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c3))) BETWEEN ((rt0.c4 IN (vt1.c1))) AND (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(vt1.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c1 COLLATE NOCASE)AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))))OR(0.23931258061945881)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))))AND(((vt1.c0)/(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c1 COLLATE NOCASE)AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))))OR(0.23931258061945881)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))))AND(((vt1.c0)/(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c1 COLLATE NOCASE)AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))))OR(0.23931258061945881)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))))AND(((vt1.c0)/(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c1 COLLATE NOCASE)AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))))OR(0.23931258061945881)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))))AND(((vt1.c0)/(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c1 COLLATE NOCASE)AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))))OR(0.23931258061945881)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))))AND(((vt1.c0)/(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN ()));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON (('H~1 X+]A') BETWEEN (CASE rt0.c2  WHEN x'331d' THEN rt0.c4 END) AND (rt0.c3)) RIGHT OUTER JOIN vt1 ON (- (LOWER(rt0.c2))) WHERE (((vt1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (('H~1 X+]A') BETWEEN (CASE rt0.c2  WHEN x'331d' THEN rt0.c4 END) AND (rt0.c3)) RIGHT OUTER JOIN vt1 ON (- (LOWER(rt0.c2))));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON (('H~1 X+]A') BETWEEN (CASE rt0.c2  WHEN x'331d' THEN rt0.c4 END) AND (rt0.c3)) RIGHT OUTER JOIN vt1 ON (- (LOWER(rt0.c2))) WHERE (((vt1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (('H~1 X+]A') BETWEEN (CASE rt0.c2  WHEN x'331d' THEN rt0.c4 END) AND (rt0.c3)) RIGHT OUTER JOIN vt1 ON (- (LOWER(rt0.c2))));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON (('H~1 X+]A') BETWEEN (CASE rt0.c2  WHEN x'331d' THEN rt0.c4 END) AND (rt0.c3)) RIGHT OUTER JOIN vt1 ON (- (LOWER(rt0.c2))) WHERE (((vt1.c0 IN ()) IN ()));
SELECT * FROM t0 FULL OUTER JOIN vt1 ON (+ ('-1252821512' COLLATE BINARY)) RIGHT OUTER JOIN rt0 ON CAST(vt1.c0 AS INTEGER) COLLATE RTRIM WHERE (((((rt0.c1 IN ())))>(((+ (0.01213228152838397)))))) ORDER BY IFNULL(((rt0.c1)-(t0.c72)), ((rt0.c1)IS NOT(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 IN ())))>(((+ (0.01213228152838397)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (+ ('-1252821512' COLLATE BINARY)) RIGHT OUTER JOIN rt0 ON CAST(vt1.c0 AS INTEGER) COLLATE RTRIM ORDER BY IFNULL(((rt0.c1)-(t0.c72)), ((rt0.c1)IS NOT(rt0.c2))));
SELECT * FROM t0 FULL OUTER JOIN vt1 ON (+ ('-1252821512' COLLATE BINARY)) RIGHT OUTER JOIN rt0 ON CAST(vt1.c0 AS INTEGER) COLLATE RTRIM WHERE (((((rt0.c1 IN ())))>(((+ (0.01213228152838397)))))) ORDER BY IFNULL(((rt0.c1)-(t0.c72)), ((rt0.c1)IS NOT(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 IN ())))>(((+ (0.01213228152838397)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (+ ('-1252821512' COLLATE BINARY)) RIGHT OUTER JOIN rt0 ON CAST(vt1.c0 AS INTEGER) COLLATE RTRIM ORDER BY IFNULL(((rt0.c1)-(t0.c72)), ((rt0.c1)IS NOT(rt0.c2))));
SELECT * FROM t0 FULL OUTER JOIN vt1 ON (+ ('-1252821512' COLLATE BINARY)) RIGHT OUTER JOIN rt0 ON CAST(vt1.c0 AS INTEGER) COLLATE RTRIM WHERE (((((rt0.c1 IN ())))>(((+ (0.01213228152838397)))))) ORDER BY IFNULL(((rt0.c1)-(t0.c72)), ((rt0.c1)IS NOT(rt0.c2)));
SELECT ALL * FROM vt1, rt0 WHERE (((~ (rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c4)) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((~ (rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c4)) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((~ (rt0.c4)) IN ()));
SELECT * FROM vt1 WHERE ((~ (CAST(vt1.c0 AS BLOB)))) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT * FROM vt1 WHERE ((~ (CAST(vt1.c0 AS BLOB)))) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT * FROM vt1 WHERE ((~ (CAST(vt1.c0 AS BLOB)))) ORDER BY vt1.c0  NULLS FIRST;
SELECT * FROM t0, rt0, vt1 WHERE (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))AND(vt1.c1)))OR(vt1.c0)) COLLATE RTRIM) ORDER BY ((((rt0.c2) BETWEEN (t0.c72) AND (vt1.c0)))>=(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE '[]' END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))AND(vt1.c1)))OR(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((((rt0.c2) BETWEEN (t0.c72) AND (vt1.c0)))>=(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE '[]' END)) DESC);
SELECT * FROM t0, rt0, vt1 WHERE (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))AND(vt1.c1)))OR(vt1.c0)) COLLATE RTRIM) ORDER BY ((((rt0.c2) BETWEEN (t0.c72) AND (vt1.c0)))>=(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE '[]' END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))AND(vt1.c1)))OR(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((((rt0.c2) BETWEEN (t0.c72) AND (vt1.c0)))>=(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE '[]' END)) DESC);
SELECT * FROM t0, rt0, vt1 WHERE (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))AND(vt1.c1)))OR(vt1.c0)) COLLATE RTRIM) ORDER BY ((((rt0.c2) BETWEEN (t0.c72) AND (vt1.c0)))>=(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE '[]' END)) DESC;
SELECT * FROM t0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (t0.c72) AND (rt0.c4))) BETWEEN (LOWER(t0.c72)) AND (CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (t0.c72) AND (rt0.c4))) BETWEEN (LOWER(t0.c72)) AND (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (t0.c72) AND (rt0.c4))) BETWEEN (LOWER(t0.c72)) AND (CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (t0.c72) AND (rt0.c4))) BETWEEN (LOWER(t0.c72)) AND (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (t0.c72) AND (rt0.c4))) BETWEEN (LOWER(t0.c72)) AND (CAST(rt0.c1 AS REAL))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE '0.06877476777159841'  WHEN load_extension(rt0.c1, rt0.c3) THEN (t0.c72 IN ()) ELSE rt0.c2 END INNER JOIN vt1 ON ((((((((((((((t0.c72) NOT BETWEEN (rt0.c1) AND (t0.c72)))AND(((((((((vt1.c0)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(vt1.c1)))))OR((rt0.c2 IN (rt0.c2)))))OR(rt0.c3)))AND(rt0.c2 COLLATE NOCASE)))OR(vt1.c0 COLLATE RTRIM)))OR(((((x'103f')OR(rt0.c4)))OR(rt0.c4)))) WHERE (((((((((((((((((0x52b26cf3)AND(rt0.c0)))OR(0.1307670201314115)))OR(((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c3)))))OR(vt1.c0)))AND(CAST('o(\)' AS INTEGER))))AND(json_array_length(rt0.c0, rt0.c4))))OR((- (rt0.c3)))))OR((NOT (rt0.c4))))) ORDER BY CASE CASE WHEN rt0.c4 THEN rt0.c0 END  WHEN ((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN t0.c72 END  NULLS LAST, CASE WHEN '-1101663519' THEN (NOT (rt0.c4)) END ASC  NULLS FIRST, ((rt0.c1)||(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((0x52b26cf3)AND(rt0.c0)))OR(0.1307670201314115)))OR(((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c3)))))OR(vt1.c0)))AND(CAST('o(\)' AS INTEGER))))AND(json_array_length(rt0.c0, rt0.c4))))OR((- (rt0.c3)))))OR((NOT (rt0.c4))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CASE '0.06877476777159841'  WHEN load_extension(rt0.c1, rt0.c3) THEN (t0.c72 IN ()) ELSE rt0.c2 END INNER JOIN vt1 ON ((((((((((((((t0.c72) NOT BETWEEN (rt0.c1) AND (t0.c72)))AND(((((((((vt1.c0)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(vt1.c1)))))OR((rt0.c2 IN (rt0.c2)))))OR(rt0.c3)))AND(rt0.c2 COLLATE NOCASE)))OR(vt1.c0 COLLATE RTRIM)))OR(((((x'103f')OR(rt0.c4)))OR(rt0.c4)))) ORDER BY CASE CASE WHEN rt0.c4 THEN rt0.c0 END  WHEN ((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN t0.c72 END  NULLS LAST, CASE WHEN '-1101663519' THEN (NOT (rt0.c4)) END ASC  NULLS FIRST, ((rt0.c1)||(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE '0.06877476777159841'  WHEN load_extension(rt0.c1, rt0.c3) THEN (t0.c72 IN ()) ELSE rt0.c2 END INNER JOIN vt1 ON ((((((((((((((t0.c72) NOT BETWEEN (rt0.c1) AND (t0.c72)))AND(((((((((vt1.c0)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(vt1.c1)))))OR((rt0.c2 IN (rt0.c2)))))OR(rt0.c3)))AND(rt0.c2 COLLATE NOCASE)))OR(vt1.c0 COLLATE RTRIM)))OR(((((x'103f')OR(rt0.c4)))OR(rt0.c4)))) WHERE (((((((((((((((((0x52b26cf3)AND(rt0.c0)))OR(0.1307670201314115)))OR(((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c3)))))OR(vt1.c0)))AND(CAST('o(\)' AS INTEGER))))AND(json_array_length(rt0.c0, rt0.c4))))OR((- (rt0.c3)))))OR((NOT (rt0.c4))))) ORDER BY CASE CASE WHEN rt0.c4 THEN rt0.c0 END  WHEN ((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN t0.c72 END  NULLS LAST, CASE WHEN '-1101663519' THEN (NOT (rt0.c4)) END ASC  NULLS FIRST, ((rt0.c1)||(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((0x52b26cf3)AND(rt0.c0)))OR(0.1307670201314115)))OR(((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c3)))))OR(vt1.c0)))AND(CAST('o(\)' AS INTEGER))))AND(json_array_length(rt0.c0, rt0.c4))))OR((- (rt0.c3)))))OR((NOT (rt0.c4))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CASE '0.06877476777159841'  WHEN load_extension(rt0.c1, rt0.c3) THEN (t0.c72 IN ()) ELSE rt0.c2 END INNER JOIN vt1 ON ((((((((((((((t0.c72) NOT BETWEEN (rt0.c1) AND (t0.c72)))AND(((((((((vt1.c0)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(vt1.c1)))))OR((rt0.c2 IN (rt0.c2)))))OR(rt0.c3)))AND(rt0.c2 COLLATE NOCASE)))OR(vt1.c0 COLLATE RTRIM)))OR(((((x'103f')OR(rt0.c4)))OR(rt0.c4)))) ORDER BY CASE CASE WHEN rt0.c4 THEN rt0.c0 END  WHEN ((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN t0.c72 END  NULLS LAST, CASE WHEN '-1101663519' THEN (NOT (rt0.c4)) END ASC  NULLS FIRST, ((rt0.c1)||(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE '0.06877476777159841'  WHEN load_extension(rt0.c1, rt0.c3) THEN (t0.c72 IN ()) ELSE rt0.c2 END INNER JOIN vt1 ON ((((((((((((((t0.c72) NOT BETWEEN (rt0.c1) AND (t0.c72)))AND(((((((((vt1.c0)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(vt1.c1)))))OR((rt0.c2 IN (rt0.c2)))))OR(rt0.c3)))AND(rt0.c2 COLLATE NOCASE)))OR(vt1.c0 COLLATE RTRIM)))OR(((((x'103f')OR(rt0.c4)))OR(rt0.c4)))) WHERE (((((((((((((((((0x52b26cf3)AND(rt0.c0)))OR(0.1307670201314115)))OR(((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c3)))))OR(vt1.c0)))AND(CAST('o(\)' AS INTEGER))))AND(json_array_length(rt0.c0, rt0.c4))))OR((- (rt0.c3)))))OR((NOT (rt0.c4))))) ORDER BY CASE CASE WHEN rt0.c4 THEN rt0.c0 END  WHEN ((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN t0.c72 END  NULLS LAST, CASE WHEN '-1101663519' THEN (NOT (rt0.c4)) END ASC  NULLS FIRST, ((rt0.c1)||(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN (vt1.c0 COLLATE NOCASE))) ORDER BY ((- (rt0.c3)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((- (rt0.c3)) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN (vt1.c0 COLLATE NOCASE))) ORDER BY ((- (rt0.c3)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((- (rt0.c3)) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN (vt1.c0 COLLATE NOCASE))) ORDER BY ((- (rt0.c3)) IN ()) ASC  NULLS FIRST;
SELECT * FROM t0, vt1 WHERE (((((((vt1.c0) NOTNULL))AND(t0.c72 COLLATE NOCASE)))OR((~ (vt1.c1))))) ORDER BY CAST(((vt1.c1)GLOB(t0.c72)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOTNULL))AND(t0.c72 COLLATE NOCASE)))OR((~ (vt1.c1))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(((vt1.c1)GLOB(t0.c72)) AS INTEGER));
SELECT * FROM t0, vt1 WHERE (((((((vt1.c0) NOTNULL))AND(t0.c72 COLLATE NOCASE)))OR((~ (vt1.c1))))) ORDER BY CAST(((vt1.c1)GLOB(t0.c72)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOTNULL))AND(t0.c72 COLLATE NOCASE)))OR((~ (vt1.c1))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(((vt1.c1)GLOB(t0.c72)) AS INTEGER));
SELECT * FROM t0, vt1 WHERE (((((((vt1.c0) NOTNULL))AND(t0.c72 COLLATE NOCASE)))OR((~ (vt1.c1))))) ORDER BY CAST(((vt1.c1)GLOB(t0.c72)) AS INTEGER);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((((((((rt0.c4 COLLATE RTRIM)OR('1390216543')))OR(CAST(t0.c72 AS NUMERIC))))AND(((t0.c72)/(rt0.c4)))))OR((((rt0.c4, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, rt0.c2, rt0.c1)) AND ((t0.c72, vt1.c1, rt0.c3)))))) ORDER BY (((rt0.c1 IN ()))*((((t0.c72, rt0.c0, rt0.c0)) BETWEEN ((rt0.c4, vt1.c1, rt0.c0)) AND ((vt1.c1, rt0.c3, rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c4 COLLATE RTRIM)OR('1390216543')))OR(CAST(t0.c72 AS NUMERIC))))AND(((t0.c72)/(rt0.c4)))))OR((((rt0.c4, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, rt0.c2, rt0.c1)) AND ((t0.c72, vt1.c1, rt0.c3)))))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY (((rt0.c1 IN ()))*((((t0.c72, rt0.c0, rt0.c0)) BETWEEN ((rt0.c4, vt1.c1, rt0.c0)) AND ((vt1.c1, rt0.c3, rt0.c0))))) ASC);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((((((((rt0.c4 COLLATE RTRIM)OR('1390216543')))OR(CAST(t0.c72 AS NUMERIC))))AND(((t0.c72)/(rt0.c4)))))OR((((rt0.c4, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, rt0.c2, rt0.c1)) AND ((t0.c72, vt1.c1, rt0.c3)))))) ORDER BY (((rt0.c1 IN ()))*((((t0.c72, rt0.c0, rt0.c0)) BETWEEN ((rt0.c4, vt1.c1, rt0.c0)) AND ((vt1.c1, rt0.c3, rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c4 COLLATE RTRIM)OR('1390216543')))OR(CAST(t0.c72 AS NUMERIC))))AND(((t0.c72)/(rt0.c4)))))OR((((rt0.c4, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, rt0.c2, rt0.c1)) AND ((t0.c72, vt1.c1, rt0.c3)))))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY (((rt0.c1 IN ()))*((((t0.c72, rt0.c0, rt0.c0)) BETWEEN ((rt0.c4, vt1.c1, rt0.c0)) AND ((vt1.c1, rt0.c3, rt0.c0))))) ASC);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((((((((rt0.c4 COLLATE RTRIM)OR('1390216543')))OR(CAST(t0.c72 AS NUMERIC))))AND(((t0.c72)/(rt0.c4)))))OR((((rt0.c4, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, rt0.c2, rt0.c1)) AND ((t0.c72, vt1.c1, rt0.c3)))))) ORDER BY (((rt0.c1 IN ()))*((((t0.c72, rt0.c0, rt0.c0)) BETWEEN ((rt0.c4, vt1.c1, rt0.c0)) AND ((vt1.c1, rt0.c3, rt0.c0))))) ASC;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (LIKELY(DISTINCT '1692890312'));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT '1692890312')) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (LIKELY(DISTINCT '1692890312'));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT '1692890312')) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (LIKELY(DISTINCT '1692890312'));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CASE WHEN CAST(vt1.c1 AS INTEGER) THEN ((t0.c72)GLOB(vt1.c0)) WHEN (~ (t0.c72)) THEN ((t0.c72) NOTNULL) WHEN (t0.c72 IN ()) THEN ((vt1.c1)IS NOT(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c1 AS INTEGER) THEN ((t0.c72)GLOB(vt1.c0)) WHEN (~ (t0.c72)) THEN ((t0.c72) NOTNULL) WHEN (t0.c72 IN ()) THEN ((vt1.c1)IS NOT(vt1.c0)) END) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CASE WHEN CAST(vt1.c1 AS INTEGER) THEN ((t0.c72)GLOB(vt1.c0)) WHEN (~ (t0.c72)) THEN ((t0.c72) NOTNULL) WHEN (t0.c72 IN ()) THEN ((vt1.c1)IS NOT(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c1 AS INTEGER) THEN ((t0.c72)GLOB(vt1.c0)) WHEN (~ (t0.c72)) THEN ((t0.c72) NOTNULL) WHEN (t0.c72 IN ()) THEN ((vt1.c1)IS NOT(vt1.c0)) END) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CASE WHEN CAST(vt1.c1 AS INTEGER) THEN ((t0.c72)GLOB(vt1.c0)) WHEN (~ (t0.c72)) THEN ((t0.c72) NOTNULL) WHEN (t0.c72 IN ()) THEN ((vt1.c1)IS NOT(vt1.c0)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c4))!=((rt0.c3)))) NOT NULL)) ORDER BY (((x'')) BETWEEN (((- (rt0.c4)))) AND (((((rt0.c2, rt0.c3, rt0.c1, rt0.c1, rt0.c0))<((rt0.c3, rt0.c1, rt0.c0, rt0.c4, x'ae90')))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4))<>((rt0.c3)))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((x'')) BETWEEN (((- (rt0.c4)))) AND (((((rt0.c2, rt0.c3, rt0.c1, rt0.c1, rt0.c0))<((rt0.c3, rt0.c1, rt0.c0, rt0.c4, x'ae90')))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c4))!=((rt0.c3)))) NOT NULL)) ORDER BY (((x'')) BETWEEN (((- (rt0.c4)))) AND (((((rt0.c2, rt0.c3, rt0.c1, rt0.c1, rt0.c0))<((rt0.c3, rt0.c1, rt0.c0, rt0.c4, x'ae90')))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4))<>((rt0.c3)))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((x'')) BETWEEN (((- (rt0.c4)))) AND (((((rt0.c2, rt0.c3, rt0.c1, rt0.c1, rt0.c0))<((rt0.c3, rt0.c1, rt0.c0, rt0.c4, x'ae90')))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c4))!=((rt0.c3)))) NOT NULL)) ORDER BY (((x'')) BETWEEN (((- (rt0.c4)))) AND (((((rt0.c2, rt0.c3, rt0.c1, rt0.c1, rt0.c0))<((rt0.c3, rt0.c1, rt0.c0, rt0.c4, x'ae90')))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c1)<<(rt0.c3))))) ORDER BY ((((rt0.c0) NOTNULL)) IS FALSE) ASC, (((((rt0.c1))>((rt0.c2))))%(x'ef1135ce')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1)<<(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOTNULL)) IS FALSE) ASC, (((((rt0.c1))>((rt0.c2))))%(x'ef1135ce')) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c1)<<(rt0.c3))))) ORDER BY ((((rt0.c0) NOTNULL)) IS FALSE) ASC, (((((rt0.c1))>((rt0.c2))))%(x'ef1135ce')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1)<<(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOTNULL)) IS FALSE) ASC, (((((rt0.c1))>((rt0.c2))))%(x'ef1135ce')) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c1)<<(rt0.c3))))) ORDER BY ((((rt0.c0) NOTNULL)) IS FALSE) ASC, (((((rt0.c1))>((rt0.c2))))%(x'ef1135ce')) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (((((vt1.c1)||(vt1.c1))) IS TRUE)) ORDER BY (((((x'fe87'))<((vt1.c1))))OR((((vt1.c0))>=((vt1.c1))))) ASC  NULLS LAST, (((vt1.c0 IN ())) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)||(vt1.c1))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY (((((x'fe87'))<((vt1.c1))))OR((((vt1.c0))>=((vt1.c1))))) ASC  NULLS LAST, (((vt1.c0 IN ())) IS TRUE)  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c1)||(vt1.c1))) IS TRUE)) ORDER BY (((((x'fe87'))<((vt1.c1))))OR((((vt1.c0))>=((vt1.c1))))) ASC  NULLS LAST, (((vt1.c0 IN ())) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)||(vt1.c1))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY (((((x'fe87'))<((vt1.c1))))OR((((vt1.c0))>=((vt1.c1))))) ASC  NULLS LAST, (((vt1.c0 IN ())) IS TRUE)  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c1)||(vt1.c1))) IS TRUE)) ORDER BY (((((x'fe87'))<((vt1.c1))))OR((((vt1.c0))>=((vt1.c1))))) ASC  NULLS LAST, (((vt1.c0 IN ())) IS TRUE)  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))) ELSE rt0.c1 COLLATE BINARY END) ORDER BY (((vt1.c0)-(vt1.c1)) IN (0X69439bc9, ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)))) ASC, (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))=(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN vt1.c1 WHEN '-911139671' THEN vt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) NOT NULL) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))) ELSE rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c0)-(vt1.c1)) IN (0x69439bc9, ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)))) ASC, (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))==(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN vt1.c1 WHEN '-911139671' THEN vt1.c1 END))  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))) ELSE rt0.c1 COLLATE BINARY END) ORDER BY (((vt1.c0)-(vt1.c1)) IN (0X69439bc9, ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)))) ASC, (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))=(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN vt1.c1 WHEN '-911139671' THEN vt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) NOT NULL) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))) ELSE rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c0)-(vt1.c1)) IN (0x69439bc9, ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)))) ASC, (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))==(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN vt1.c1 WHEN '-911139671' THEN vt1.c1 END))  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))) ELSE rt0.c1 COLLATE BINARY END) ORDER BY (((vt1.c0)-(vt1.c1)) IN (0X69439bc9, ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)))) ASC, (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))=(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN vt1.c1 WHEN '-911139671' THEN vt1.c1 END))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE ((NOT (rt0.c0)) COLLATE RTRIM) ORDER BY ((((((((0X5e33f956)AND((+ (rt0.c2)))))AND(((vt1.c1) ISNULL))))AND(CAST(x'' AS TEXT))))OR(CHANGES())) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY ((((((((0x5e33f956)AND((+ (rt0.c2)))))AND(((vt1.c1) ISNULL))))AND(CAST(x'' AS TEXT))))OR(CHANGES())) ASC);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE ((NOT (rt0.c0)) COLLATE RTRIM) ORDER BY ((((((((0X5e33f956)AND((+ (rt0.c2)))))AND(((vt1.c1) ISNULL))))AND(CAST(x'' AS TEXT))))OR(CHANGES())) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY ((((((((0x5e33f956)AND((+ (rt0.c2)))))AND(((vt1.c1) ISNULL))))AND(CAST(x'' AS TEXT))))OR(CHANGES())) ASC);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE ((NOT (rt0.c0)) COLLATE RTRIM) ORDER BY ((((((((0X5e33f956)AND((+ (rt0.c2)))))AND(((vt1.c1) ISNULL))))AND(CAST(x'' AS TEXT))))OR(CHANGES())) ASC;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((((((((0.8950227499859675) NOTNULL))AND(((vt1.c0) IS TRUE))))AND(((vt1.c1) IS FALSE))))OR(t0.c72)))AND(((x'')||(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0.8950227499859675) NOTNULL))AND(((vt1.c0) IS TRUE))))AND(((vt1.c1) IS FALSE))))OR(t0.c72)))AND(((x'')||(vt1.c1))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((((((((0.8950227499859675) NOTNULL))AND(((vt1.c0) IS TRUE))))AND(((vt1.c1) IS FALSE))))OR(t0.c72)))AND(((x'')||(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0.8950227499859675) NOTNULL))AND(((vt1.c0) IS TRUE))))AND(((vt1.c1) IS FALSE))))OR(t0.c72)))AND(((x'')||(vt1.c1))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((((((((0.8950227499859675) NOTNULL))AND(((vt1.c0) IS TRUE))))AND(((vt1.c1) IS FALSE))))OR(t0.c72)))AND(((x'')||(vt1.c1)))));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE (((CAST(t0.c72 AS BLOB))==((((vt1.c0, vt1.c0, t0.c72))==((vt1.c0, t0.c72, t0.c72)))))) ORDER BY ((((((vt1.c0))!=((t0.c72)))))>=((json_array(vt1.c0, vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c72 AS BLOB))=((((vt1.c0, vt1.c0, t0.c72))==((vt1.c0, t0.c72, t0.c72)))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1 ORDER BY ((((((vt1.c0))<>((t0.c72)))))>=((json_array(vt1.c0, vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE (((CAST(t0.c72 AS BLOB))==((((vt1.c0, vt1.c0, t0.c72))==((vt1.c0, t0.c72, t0.c72)))))) ORDER BY ((((((vt1.c0))!=((t0.c72)))))>=((json_array(vt1.c0, vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c72 AS BLOB))=((((vt1.c0, vt1.c0, t0.c72))==((vt1.c0, t0.c72, t0.c72)))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1 ORDER BY ((((((vt1.c0))<>((t0.c72)))))>=((json_array(vt1.c0, vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE (((CAST(t0.c72 AS BLOB))==((((vt1.c0, vt1.c0, t0.c72))==((vt1.c0, t0.c72, t0.c72)))))) ORDER BY ((((((vt1.c0))!=((t0.c72)))))>=((json_array(vt1.c0, vt1.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, t0, vt1 WHERE (CASE WHEN (rt0.c2 IN ()) THEN rt0.c4 COLLATE BINARY WHEN ((rt0.c2)GLOB(t0.c72)) THEN (NOT (rt0.c4)) WHEN ((((rt0.c0)OR(vt1.c1)))OR(0.5016108902492652)) THEN CAST(x'f030' AS INTEGER) ELSE (((t0.c72, t0.c72, t0.c72, rt0.c4, '-489249845')) NOT BETWEEN ((rt0.c4, rt0.c3, vt1.c1, vt1.c1, rt0.c3)) AND ((rt0.c3, -7.73143135E8, vt1.c0, rt0.c2, rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c2 IN ()) THEN rt0.c4 COLLATE BINARY WHEN ((rt0.c2)GLOB(t0.c72)) THEN (NOT (rt0.c4)) WHEN ((((rt0.c0)OR(vt1.c1)))OR(0.5016108902492652)) THEN CAST(x'f030' AS INTEGER) ELSE (((t0.c72, t0.c72, t0.c72, rt0.c4, '-489249845')) NOT BETWEEN ((rt0.c4, rt0.c3, vt1.c1, vt1.c1, rt0.c3)) AND ((rt0.c3, -7.73143135E8, vt1.c0, rt0.c2, rt0.c2))) END) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT ALL * FROM rt0, t0, vt1 WHERE (CASE WHEN (rt0.c2 IN ()) THEN rt0.c4 COLLATE BINARY WHEN ((rt0.c2)GLOB(t0.c72)) THEN (NOT (rt0.c4)) WHEN ((((rt0.c0)OR(vt1.c1)))OR(0.5016108902492652)) THEN CAST(x'f030' AS INTEGER) ELSE (((t0.c72, t0.c72, t0.c72, rt0.c4, '-489249845')) NOT BETWEEN ((rt0.c4, rt0.c3, vt1.c1, vt1.c1, rt0.c3)) AND ((rt0.c3, -7.73143135E8, vt1.c0, rt0.c2, rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c2 IN ()) THEN rt0.c4 COLLATE BINARY WHEN ((rt0.c2)GLOB(t0.c72)) THEN (NOT (rt0.c4)) WHEN ((((rt0.c0)OR(vt1.c1)))OR(0.5016108902492652)) THEN CAST(x'f030' AS INTEGER) ELSE (((t0.c72, t0.c72, t0.c72, rt0.c4, '-489249845')) NOT BETWEEN ((rt0.c4, rt0.c3, vt1.c1, vt1.c1, rt0.c3)) AND ((rt0.c3, -7.73143135E8, vt1.c0, rt0.c2, rt0.c2))) END) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT ALL * FROM rt0, t0, vt1 WHERE (CASE WHEN (rt0.c2 IN ()) THEN rt0.c4 COLLATE BINARY WHEN ((rt0.c2)GLOB(t0.c72)) THEN (NOT (rt0.c4)) WHEN ((((rt0.c0)OR(vt1.c1)))OR(0.5016108902492652)) THEN CAST(x'f030' AS INTEGER) ELSE (((t0.c72, t0.c72, t0.c72, rt0.c4, '-489249845')) NOT BETWEEN ((rt0.c4, rt0.c3, vt1.c1, vt1.c1, rt0.c3)) AND ((rt0.c3, -7.73143135E8, vt1.c0, rt0.c2, rt0.c2))) END);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((TOTAL_CHANGES())IS NOT(CAST(t0.c72 AS INTEGER)))) ORDER BY ((((vt1.c0) NOTNULL)) BETWEEN (((t0.c72)*(vt1.c1))) AND (((((vt1.c1)OR(vt1.c1)))AND(t0.c72)))) ASC;
SELECT SUM(count) FROM (SELECT ((((TOTAL_CHANGES())IS NOT(CAST(t0.c72 AS INTEGER)))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((vt1.c0) NOTNULL)) BETWEEN (((t0.c72)*(vt1.c1))) AND (((((vt1.c1)OR(vt1.c1)))AND(t0.c72)))) ASC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((TOTAL_CHANGES())IS NOT(CAST(t0.c72 AS INTEGER)))) ORDER BY ((((vt1.c0) NOTNULL)) BETWEEN (((t0.c72)*(vt1.c1))) AND (((((vt1.c1)OR(vt1.c1)))AND(t0.c72)))) ASC;
SELECT SUM(count) FROM (SELECT ((((TOTAL_CHANGES())IS NOT(CAST(t0.c72 AS INTEGER)))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((vt1.c0) NOTNULL)) BETWEEN (((t0.c72)*(vt1.c1))) AND (((((vt1.c1)OR(vt1.c1)))AND(t0.c72)))) ASC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((TOTAL_CHANGES())IS NOT(CAST(t0.c72 AS INTEGER)))) ORDER BY ((((vt1.c0) NOTNULL)) BETWEEN (((t0.c72)*(vt1.c1))) AND (((((vt1.c1)OR(vt1.c1)))AND(t0.c72)))) ASC;
SELECT * FROM vt1, t0, rt0 WHERE (((((UNICODE(vt1.c0))OR((~ (rt0.c0)))))OR('Md')));
SELECT SUM(count) FROM (SELECT ALL ((((((UNICODE(vt1.c0))OR((~ (rt0.c0)))))OR('Md'))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT * FROM vt1, t0, rt0 WHERE (((((UNICODE(vt1.c0))OR((~ (rt0.c0)))))OR('Md')));
SELECT SUM(count) FROM (SELECT ALL ((((((UNICODE(vt1.c0))OR((~ (rt0.c0)))))OR('Md'))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT * FROM vt1, t0, rt0 WHERE (((((UNICODE(vt1.c0))OR((~ (rt0.c0)))))OR('Md')));
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c1)%(vt1.c1)) THEN ((vt1.c0)=(vt1.c0)) WHEN (+ (vt1.c1)) THEN (NULL IN ()) WHEN ((NULL) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END END) ORDER BY CAST((vt1.c1 IN ()) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1)%(vt1.c1)) THEN ((vt1.c0)==(vt1.c0)) WHEN (+ (vt1.c1)) THEN (NULL IN ()) WHEN ((NULL) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END END) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c1 IN ()) AS REAL) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c1)%(vt1.c1)) THEN ((vt1.c0)=(vt1.c0)) WHEN (+ (vt1.c1)) THEN (NULL IN ()) WHEN ((NULL) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END END) ORDER BY CAST((vt1.c1 IN ()) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1)%(vt1.c1)) THEN ((vt1.c0)==(vt1.c0)) WHEN (+ (vt1.c1)) THEN (NULL IN ()) WHEN ((NULL) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END END) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c1 IN ()) AS REAL) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c1)%(vt1.c1)) THEN ((vt1.c0)=(vt1.c0)) WHEN (+ (vt1.c1)) THEN (NULL IN ()) WHEN ((NULL) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END END) ORDER BY CAST((vt1.c1 IN ()) AS REAL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(TRIM(rt0.c1) AS REAL) FULL OUTER JOIN t0 ON TRIM(rt0.c3) WHERE (DATETIME(rt0.c4, rt0.c4, rt0.c3) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((DATETIME(rt0.c4, rt0.c4, rt0.c3) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(TRIM(rt0.c1) AS REAL) FULL OUTER JOIN t0 ON TRIM(rt0.c3));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(TRIM(rt0.c1) AS REAL) FULL OUTER JOIN t0 ON TRIM(rt0.c3) WHERE (DATETIME(rt0.c4, rt0.c4, rt0.c3) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((DATETIME(rt0.c4, rt0.c4, rt0.c3) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(TRIM(rt0.c1) AS REAL) FULL OUTER JOIN t0 ON TRIM(rt0.c3));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(TRIM(rt0.c1) AS REAL) FULL OUTER JOIN t0 ON TRIM(rt0.c3) WHERE (DATETIME(rt0.c4, rt0.c4, rt0.c3) COLLATE RTRIM COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))OR(rt0.c4))) AND (LIKELY(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))OR(rt0.c4))) AND (LIKELY(rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))OR(rt0.c4))) AND (LIKELY(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))OR(rt0.c4))) AND (LIKELY(rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))OR(rt0.c4))) AND (LIKELY(rt0.c4))));
SELECT * FROM rt0, vt1 FULL OUTER JOIN t0 ON ((((t0.c72 IN ())))!=(((0X38d0af16 IN ())))) WHERE ((((vt1.c0 IN (t0.c72)))%(CAST(rt0.c4 AS NUMERIC)))) ORDER BY (- (CASE WHEN vt1.c0 THEN 'H~1 X+]A' END)) ASC, (((((vt1.c0)) BETWEEN ((t0.c72)) AND ((rt0.c0)))) NOTNULL)  NULLS LAST, CASE WHEN (((vt1.c1))<=((t0.c72))) THEN ((rt0.c4) NOT BETWEEN (t0.c72) AND ('-547107735')) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (t0.c72)))%(CAST(rt0.c4 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN t0 ON ((((t0.c72 IN ())))!=(((0X38d0af16 IN ())))) ORDER BY (- (CASE WHEN vt1.c0 THEN 'H~1 X+]A' END)) ASC, (((((vt1.c0)) BETWEEN ((t0.c72)) AND ((rt0.c0)))) NOTNULL)  NULLS LAST, CASE WHEN (((vt1.c1))<=((t0.c72))) THEN ((rt0.c4) NOT BETWEEN (t0.c72) AND ('-547107735')) END DESC  NULLS FIRST);
SELECT * FROM rt0, vt1 FULL OUTER JOIN t0 ON ((((t0.c72 IN ())))!=(((0X38d0af16 IN ())))) WHERE ((((vt1.c0 IN (t0.c72)))%(CAST(rt0.c4 AS NUMERIC)))) ORDER BY (- (CASE WHEN vt1.c0 THEN 'H~1 X+]A' END)) ASC, (((((vt1.c0)) BETWEEN ((t0.c72)) AND ((rt0.c0)))) NOTNULL)  NULLS LAST, CASE WHEN (((vt1.c1))<=((t0.c72))) THEN ((rt0.c4) NOT BETWEEN (t0.c72) AND ('-547107735')) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (t0.c72)))%(CAST(rt0.c4 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN t0 ON ((((t0.c72 IN ())))!=(((0X38d0af16 IN ())))) ORDER BY (- (CASE WHEN vt1.c0 THEN 'H~1 X+]A' END)) ASC, (((((vt1.c0)) BETWEEN ((t0.c72)) AND ((rt0.c0)))) NOTNULL)  NULLS LAST, CASE WHEN (((vt1.c1))<=((t0.c72))) THEN ((rt0.c4) NOT BETWEEN (t0.c72) AND ('-547107735')) END DESC  NULLS FIRST);
SELECT * FROM rt0, vt1 FULL OUTER JOIN t0 ON ((((t0.c72 IN ())))!=(((0X38d0af16 IN ())))) WHERE ((((vt1.c0 IN (t0.c72)))%(CAST(rt0.c4 AS NUMERIC)))) ORDER BY (- (CASE WHEN vt1.c0 THEN 'H~1 X+]A' END)) ASC, (((((vt1.c0)) BETWEEN ((t0.c72)) AND ((rt0.c0)))) NOTNULL)  NULLS LAST, CASE WHEN (((vt1.c1))<=((t0.c72))) THEN ((rt0.c4) NOT BETWEEN (t0.c72) AND ('-547107735')) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (TRIM(rt0.c1)))) ORDER BY '778545287';
SELECT SUM(count) FROM (SELECT ALL (((- (TRIM(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY '778545287');
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (TRIM(rt0.c1)))) ORDER BY '778545287';
SELECT SUM(count) FROM (SELECT ALL (((- (TRIM(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY '778545287');
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (TRIM(rt0.c1)))) ORDER BY '778545287';
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ((- (((vt1.c1)-(vt1.c0))))) ORDER BY ((((- (t0.c72)), ((vt1.c0) NOTNULL), ((vt1.c0)&(vt1.c1))))<((((((vt1.c0)AND(t0.c72)))AND(vt1.c1)), ((t0.c72)>(vt1.c1)), ((vt1.c1) NOT BETWEEN (t0.c72) AND (vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c1)-(vt1.c0))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1 ORDER BY ((((- (t0.c72)), ((vt1.c0) NOTNULL), ((vt1.c0)&(vt1.c1))))<((((((vt1.c0)AND(t0.c72)))AND(vt1.c1)), ((t0.c72)>(vt1.c1)), ((vt1.c1) NOT BETWEEN (t0.c72) AND (vt1.c0))))) ASC);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ((- (((vt1.c1)-(vt1.c0))))) ORDER BY ((((- (t0.c72)), ((vt1.c0) NOTNULL), ((vt1.c0)&(vt1.c1))))<((((((vt1.c0)AND(t0.c72)))AND(vt1.c1)), ((t0.c72)>(vt1.c1)), ((vt1.c1) NOT BETWEEN (t0.c72) AND (vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c1)-(vt1.c0))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1 ORDER BY ((((- (t0.c72)), ((vt1.c0) NOTNULL), ((vt1.c0)&(vt1.c1))))<((((((vt1.c0)AND(t0.c72)))AND(vt1.c1)), ((t0.c72)>(vt1.c1)), ((vt1.c1) NOT BETWEEN (t0.c72) AND (vt1.c0))))) ASC);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ((- (((vt1.c1)-(vt1.c0))))) ORDER BY ((((- (t0.c72)), ((vt1.c0) NOTNULL), ((vt1.c0)&(vt1.c1))))<((((((vt1.c0)AND(t0.c72)))AND(vt1.c1)), ((t0.c72)>(vt1.c1)), ((vt1.c1) NOT BETWEEN (t0.c72) AND (vt1.c0))))) ASC;
SELECT ALL * FROM t0, vt1, rt0 WHERE ((~ (rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE ((~ (rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE ((~ (rt0.c3 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1, rt0 INNER JOIN t0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY WHERE ((+ (vt1.c0))) ORDER BY ((CASE WHEN vt1.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN rt0.c4 WHEN NULL THEN rt0.c3 ELSE -9.4730674E7 END)%(CAST(rt0.c1 AS INTEGER)))  NULLS LAST, (((vt1.c1 IN ()))/((vt1.c0 IN (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN t0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY ORDER BY ((CASE WHEN vt1.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN rt0.c4 WHEN NULL THEN rt0.c3 ELSE -9.4730674E7 END)%(CAST(rt0.c1 AS INTEGER)))  NULLS LAST, (((vt1.c1 IN ()))/((vt1.c0 IN (vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 INNER JOIN t0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY WHERE ((+ (vt1.c0))) ORDER BY ((CASE WHEN vt1.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN rt0.c4 WHEN NULL THEN rt0.c3 ELSE -9.4730674E7 END)%(CAST(rt0.c1 AS INTEGER)))  NULLS LAST, (((vt1.c1 IN ()))/((vt1.c0 IN (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN t0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY ORDER BY ((CASE WHEN vt1.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN rt0.c4 WHEN NULL THEN rt0.c3 ELSE -9.4730674E7 END)%(CAST(rt0.c1 AS INTEGER)))  NULLS LAST, (((vt1.c1 IN ()))/((vt1.c0 IN (vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 INNER JOIN t0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY WHERE ((+ (vt1.c0))) ORDER BY ((CASE WHEN vt1.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN rt0.c4 WHEN NULL THEN rt0.c3 ELSE -9.4730674E7 END)%(CAST(rt0.c1 AS INTEGER)))  NULLS LAST, (((vt1.c1 IN ()))/((vt1.c0 IN (vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON (((- ('2087168582'))) NOT NULL) CROSS JOIN vt1 ON ((0X381ddc6b)GLOB((rt0.c1 IN ()))) WHERE (((vt1.c0 IN ()) IN ())) ORDER BY ((0.8759390203218053) BETWEEN (rt0.c4) AND (CAST(rt0.c0 AS INTEGER)))  NULLS LAST, rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((- ('2087168582'))) NOT NULL) CROSS JOIN vt1 ON ((0X381ddc6b)GLOB((rt0.c1 IN ()))) ORDER BY ((0.8759390203218053) BETWEEN (rt0.c4) AND (CAST(rt0.c0 AS INTEGER)))  NULLS LAST, rt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON (((- ('2087168582'))) NOT NULL) CROSS JOIN vt1 ON ((0X381ddc6b)GLOB((rt0.c1 IN ()))) WHERE (((vt1.c0 IN ()) IN ())) ORDER BY ((0.8759390203218053) BETWEEN (rt0.c4) AND (CAST(rt0.c0 AS INTEGER)))  NULLS LAST, rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((- ('2087168582'))) NOT NULL) CROSS JOIN vt1 ON ((0X381ddc6b)GLOB((rt0.c1 IN ()))) ORDER BY ((0.8759390203218053) BETWEEN (rt0.c4) AND (CAST(rt0.c0 AS INTEGER)))  NULLS LAST, rt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON (((- ('2087168582'))) NOT NULL) CROSS JOIN vt1 ON ((0X381ddc6b)GLOB((rt0.c1 IN ()))) WHERE (((vt1.c0 IN ()) IN ())) ORDER BY ((0.8759390203218053) BETWEEN (rt0.c4) AND (CAST(rt0.c0 AS INTEGER)))  NULLS LAST, rt0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c2 COLLATE BINARY COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE BINARY COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c2 COLLATE BINARY COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE BINARY COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c2 COLLATE BINARY COLLATE BINARY COLLATE RTRIM);
SELECT ALL * FROM t0, vt1 WHERE (TRIM(0.4396654693460462)) ORDER BY (((t0.c72 IN (t0.c72)))/(vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(0.4396654693460462)) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c72 IN (t0.c72)))/(vt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE (TRIM(0.4396654693460462)) ORDER BY (((t0.c72 IN (t0.c72)))/(vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(0.4396654693460462)) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c72 IN (t0.c72)))/(vt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE (TRIM(0.4396654693460462)) ORDER BY (((t0.c72 IN (t0.c72)))/(vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT * FROM t0, vt1, rt0 WHERE ((((rt0.c3, rt0.c4, vt1.c0)) NOT BETWEEN ((json_patch(rt0.c2, rt0.c0), ((vt1.c1) NOTNULL), ((vt1.c0) IS TRUE))) AND (((rt0.c3 IN (NULL, vt1.c1)), ((rt0.c1) BETWEEN (t0.c72) AND (rt0.c0)), LIKELY(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c4, vt1.c0)) NOT BETWEEN ((json_patch(rt0.c2, rt0.c0), ((vt1.c1) NOTNULL), ((vt1.c0) IS TRUE))) AND (((rt0.c3 IN (NULL, vt1.c1)), ((rt0.c1) BETWEEN (t0.c72) AND (rt0.c0)), LIKELY(vt1.c1))))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT * FROM t0, vt1, rt0 WHERE ((((rt0.c3, rt0.c4, vt1.c0)) NOT BETWEEN ((json_patch(rt0.c2, rt0.c0), ((vt1.c1) NOTNULL), ((vt1.c0) IS TRUE))) AND (((rt0.c3 IN (NULL, vt1.c1)), ((rt0.c1) BETWEEN (t0.c72) AND (rt0.c0)), LIKELY(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c4, vt1.c0)) NOT BETWEEN ((json_patch(rt0.c2, rt0.c0), ((vt1.c1) NOTNULL), ((vt1.c0) IS TRUE))) AND (((rt0.c3 IN (NULL, vt1.c1)), ((rt0.c1) BETWEEN (t0.c72) AND (rt0.c0)), LIKELY(vt1.c1))))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT * FROM t0, vt1, rt0 WHERE ((((rt0.c3, rt0.c4, vt1.c0)) NOT BETWEEN ((json_patch(rt0.c2, rt0.c0), ((vt1.c1) NOTNULL), ((vt1.c0) IS TRUE))) AND (((rt0.c3 IN (NULL, vt1.c1)), ((rt0.c1) BETWEEN (t0.c72) AND (rt0.c0)), LIKELY(vt1.c1)))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c72) IS TRUE)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c72) IS TRUE)) ISNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c72) IS TRUE)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c72) IS TRUE)) ISNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c72) IS TRUE)) ISNULL));
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c3);
SELECT * FROM rt0, t0 WHERE (TRIM(DISTINCT ((((rt0.c1)OR(rt0.c4)))AND(rt0.c3)))) ORDER BY rt0.c4 ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((((rt0.c1)OR(rt0.c4)))AND(rt0.c3)))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c4 ASC);
SELECT * FROM rt0, t0 WHERE (TRIM(DISTINCT ((((rt0.c1)OR(rt0.c4)))AND(rt0.c3)))) ORDER BY rt0.c4 ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((((rt0.c1)OR(rt0.c4)))AND(rt0.c3)))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c4 ASC);
SELECT * FROM rt0, t0 WHERE (TRIM(DISTINCT ((((rt0.c1)OR(rt0.c4)))AND(rt0.c3)))) ORDER BY rt0.c4 ASC;
SELECT * FROM vt1, rt0 WHERE (((((rt0.c4) NOT NULL))|((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT NULL))|((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c4) NOT NULL))|((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT NULL))|((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c4) NOT NULL))|((+ (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ('-1791117875');
SELECT SUM(count) FROM (SELECT (('-1791117875') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('-1791117875');
SELECT SUM(count) FROM (SELECT (('-1791117875') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('-1791117875');
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE WHEN (+ ('now')) THEN (vt1.c1 IN ()) ELSE TYPEOF(DISTINCT vt1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ ('now')) THEN (vt1.c1 IN ()) ELSE TYPEOF(DISTINCT vt1.c0) END) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE WHEN (+ ('now')) THEN (vt1.c1 IN ()) ELSE TYPEOF(DISTINCT vt1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ ('now')) THEN (vt1.c1 IN ()) ELSE TYPEOF(DISTINCT vt1.c0) END) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE WHEN (+ ('now')) THEN (vt1.c1 IN ()) ELSE TYPEOF(DISTINCT vt1.c0) END);
SELECT * FROM t0, rt0, vt1 WHERE (1907970623) ORDER BY ((t0.c72)||(CASE WHEN vt1.c1 THEN vt1.c0 ELSE rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((1907970623) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((t0.c72)||(CASE WHEN vt1.c1 THEN vt1.c0 ELSE rt0.c1 END)) DESC);
SELECT * FROM t0, rt0, vt1 WHERE (1907970623) ORDER BY ((t0.c72)||(CASE WHEN vt1.c1 THEN vt1.c0 ELSE rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((1907970623) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((t0.c72)||(CASE WHEN vt1.c1 THEN vt1.c0 ELSE rt0.c1 END)) DESC);
SELECT * FROM t0, rt0, vt1 WHERE (1907970623) ORDER BY ((t0.c72)||(CASE WHEN vt1.c1 THEN vt1.c0 ELSE rt0.c1 END)) DESC;
SELECT * FROM t0 WHERE (((((t0.c72)OR(t0.c72)))OR(t0.c72)) COLLATE NOCASE) ORDER BY t0.c72, (((json(t0.c72)))!=(((+ (1.907970623E9))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c72)OR(t0.c72)))OR(t0.c72)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY t0.c72, (((json(t0.c72)))<>(((+ (1.907970623E9))))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c72)OR(t0.c72)))OR(t0.c72)) COLLATE NOCASE) ORDER BY t0.c72, (((json(t0.c72)))!=(((+ (1.907970623E9))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c72)OR(t0.c72)))OR(t0.c72)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY t0.c72, (((json(t0.c72)))<>(((+ (1.907970623E9))))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c72)OR(t0.c72)))OR(t0.c72)) COLLATE NOCASE) ORDER BY t0.c72, (((json(t0.c72)))!=(((+ (1.907970623E9))))) DESC  NULLS LAST;
SELECT ALL * FROM vt1, t0 WHERE (CASE WHEN t0.c72 THEN CAST(vt1.c0 AS REAL) ELSE vt1.c0 COLLATE BINARY END) ORDER BY json_valid(((vt1.c1)IS(vt1.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c72 THEN CAST(vt1.c0 AS REAL) ELSE vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1, t0 ORDER BY json_valid(((vt1.c1)IS(vt1.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE (CASE WHEN t0.c72 THEN CAST(vt1.c0 AS REAL) ELSE vt1.c0 COLLATE BINARY END) ORDER BY json_valid(((vt1.c1)IS(vt1.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c72 THEN CAST(vt1.c0 AS REAL) ELSE vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1, t0 ORDER BY json_valid(((vt1.c1)IS(vt1.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE (CASE WHEN t0.c72 THEN CAST(vt1.c0 AS REAL) ELSE vt1.c0 COLLATE BINARY END) ORDER BY json_valid(((vt1.c1)IS(vt1.c1))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt0, vt1 WHERE ((((rt0.c2 IN (rt0.c4, rt0.c2)))IS NOT('479312618')));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c4, rt0.c2)))IS NOT('479312618'))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt0, vt1 WHERE ((((rt0.c2 IN (rt0.c4, rt0.c2)))IS NOT('479312618')));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c4, rt0.c2)))IS NOT('479312618'))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt0, vt1 WHERE ((((rt0.c2 IN (rt0.c4, rt0.c2)))IS NOT('479312618')));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c72) BETWEEN (t0.c72) AND (t0.c72)))%(((t0.c72)GLOB(t0.c72))))) ORDER BY (~ (CAST(t0.c72 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c72) BETWEEN (t0.c72) AND (t0.c72)))%(((t0.c72)GLOB(t0.c72))))) IS TRUE)  as count FROM t0 ORDER BY (~ (CAST(t0.c72 AS NUMERIC)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c72) BETWEEN (t0.c72) AND (t0.c72)))%(((t0.c72)GLOB(t0.c72))))) ORDER BY (~ (CAST(t0.c72 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c72) BETWEEN (t0.c72) AND (t0.c72)))%(((t0.c72)GLOB(t0.c72))))) IS TRUE)  as count FROM t0 ORDER BY (~ (CAST(t0.c72 AS NUMERIC)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c72) BETWEEN (t0.c72) AND (t0.c72)))%(((t0.c72)GLOB(t0.c72))))) ORDER BY (~ (CAST(t0.c72 AS NUMERIC)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (IFNULL(DISTINCT ((rt0.c3) IS TRUE), (((rt0.c0, rt0.c2, rt0.c2))>((rt0.c1, rt0.c3, rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((rt0.c3) IS TRUE), (((rt0.c0, rt0.c2, rt0.c2))>((rt0.c1, rt0.c3, rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (IFNULL(DISTINCT ((rt0.c3) IS TRUE), (((rt0.c0, rt0.c2, rt0.c2))>((rt0.c1, rt0.c3, rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((rt0.c3) IS TRUE), (((rt0.c0, rt0.c2, rt0.c2))>((rt0.c1, rt0.c3, rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (IFNULL(DISTINCT ((rt0.c3) IS TRUE), (((rt0.c0, rt0.c2, rt0.c2))>((rt0.c1, rt0.c3, rt0.c4)))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((rt0.c0) ISNULL) COLLATE NOCASE CROSS JOIN vt1 ON NULL WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((rt0.c0) ISNULL) COLLATE NOCASE CROSS JOIN vt1 ON NULL);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((rt0.c0) ISNULL) COLLATE NOCASE CROSS JOIN vt1 ON NULL WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((rt0.c0) ISNULL) COLLATE NOCASE CROSS JOIN vt1 ON NULL);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((rt0.c0) ISNULL) COLLATE NOCASE CROSS JOIN vt1 ON NULL WHERE (NULL);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON rtreenode(HEX(DISTINCT rt0.c0), ((rt0.c1)GLOB(rt0.c2))) LEFT OUTER JOIN t0 ON CASE vt1.c1  WHEN ((rt0.c3)==(rt0.c0)) THEN x'c6a3aab4' COLLATE BINARY END WHERE ((0.9574948651713666 IN (((((vt1.c1)AND(rt0.c0)))AND(t0.c72)), rt0.c2))) ORDER BY DATETIME(((rt0.c0)||(t0.c72)), ((vt1.c0) NOTNULL), ((rt0.c1)<<(vt1.c0)), ((841486778)-(rt0.c4)), (NOT (rt0.c3)), ((((vt1.c1)AND(NULL)))OR(rt0.c4)), CAST(rt0.c0 AS NUMERIC))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((0.9574948651713666 IN (((((vt1.c1)AND(rt0.c0)))AND(t0.c72)), rt0.c2))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON rtreenode(HEX(DISTINCT rt0.c0), ((rt0.c1)GLOB(rt0.c2))) LEFT OUTER JOIN t0 ON CASE vt1.c1  WHEN ((rt0.c3)=(rt0.c0)) THEN x'c6a3aab4' COLLATE BINARY END ORDER BY DATETIME(((rt0.c0)||(t0.c72)), ((vt1.c0) NOTNULL), ((rt0.c1)<<(vt1.c0)), ((841486778)-(rt0.c4)), (NOT (rt0.c3)), ((((vt1.c1)AND(NULL)))OR(rt0.c4)), CAST(rt0.c0 AS NUMERIC))  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON rtreenode(HEX(DISTINCT rt0.c0), ((rt0.c1)GLOB(rt0.c2))) LEFT OUTER JOIN t0 ON CASE vt1.c1  WHEN ((rt0.c3)==(rt0.c0)) THEN x'c6a3aab4' COLLATE BINARY END WHERE ((0.9574948651713666 IN (((((vt1.c1)AND(rt0.c0)))AND(t0.c72)), rt0.c2))) ORDER BY DATETIME(((rt0.c0)||(t0.c72)), ((vt1.c0) NOTNULL), ((rt0.c1)<<(vt1.c0)), ((841486778)-(rt0.c4)), (NOT (rt0.c3)), ((((vt1.c1)AND(NULL)))OR(rt0.c4)), CAST(rt0.c0 AS NUMERIC))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((0.9574948651713666 IN (((((vt1.c1)AND(rt0.c0)))AND(t0.c72)), rt0.c2))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON rtreenode(HEX(DISTINCT rt0.c0), ((rt0.c1)GLOB(rt0.c2))) LEFT OUTER JOIN t0 ON CASE vt1.c1  WHEN ((rt0.c3)=(rt0.c0)) THEN x'c6a3aab4' COLLATE BINARY END ORDER BY DATETIME(((rt0.c0)||(t0.c72)), ((vt1.c0) NOTNULL), ((rt0.c1)<<(vt1.c0)), ((841486778)-(rt0.c4)), (NOT (rt0.c3)), ((((vt1.c1)AND(NULL)))OR(rt0.c4)), CAST(rt0.c0 AS NUMERIC))  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON rtreenode(HEX(DISTINCT rt0.c0), ((rt0.c1)GLOB(rt0.c2))) LEFT OUTER JOIN t0 ON CASE vt1.c1  WHEN ((rt0.c3)==(rt0.c0)) THEN x'c6a3aab4' COLLATE BINARY END WHERE ((0.9574948651713666 IN (((((vt1.c1)AND(rt0.c0)))AND(t0.c72)), rt0.c2))) ORDER BY DATETIME(((rt0.c0)||(t0.c72)), ((vt1.c0) NOTNULL), ((rt0.c1)<<(vt1.c0)), ((841486778)-(rt0.c4)), (NOT (rt0.c3)), ((((vt1.c1)AND(NULL)))OR(rt0.c4)), CAST(rt0.c0 AS NUMERIC))  NULLS LAST;
SELECT * FROM vt1, rt0 WHERE (UNLIKELY(((rt0.c0)<=(vt1.c0)))) ORDER BY (CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((rt0.c0)<=(vt1.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 END IN ()));
SELECT * FROM vt1, rt0 WHERE (UNLIKELY(((rt0.c0)<=(vt1.c0)))) ORDER BY (CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((rt0.c0)<=(vt1.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 END IN ()));
SELECT * FROM vt1, rt0 WHERE (UNLIKELY(((rt0.c0)<=(vt1.c0)))) ORDER BY (CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 END IN ());
SELECT * FROM t0 WHERE ((((((('FP')&(x'')))AND((t0.c72 IN ()))))AND(t0.c72))) ORDER BY UPPER(DISTINCT (- (t0.c72))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((('FP')&(x'')))AND((t0.c72 IN ()))))AND(t0.c72))) IS TRUE)  as count FROM t0 ORDER BY UPPER(DISTINCT (- (t0.c72))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((((((('FP')&(x'')))AND((t0.c72 IN ()))))AND(t0.c72))) ORDER BY UPPER(DISTINCT (- (t0.c72))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((('FP')&(x'')))AND((t0.c72 IN ()))))AND(t0.c72))) IS TRUE)  as count FROM t0 ORDER BY UPPER(DISTINCT (- (t0.c72))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((((((('FP')&(x'')))AND((t0.c72 IN ()))))AND(t0.c72))) ORDER BY UPPER(DISTINCT (- (t0.c72))) DESC  NULLS LAST;
SELECT ALL * FROM vt1, t0 WHERE (MIN(((vt1.c1)AND(vt1.c1)), ((((((((vt1.c0)OR(vt1.c1)))AND(t0.c72)))OR(vt1.c1)))OR(vt1.c0)))) ORDER BY CASE LOWER(vt1.c0)  WHEN ((vt1.c1)<(vt1.c1)) THEN ((vt1.c0)+(NULL)) END DESC, ((((CASE t0.c72  WHEN x'' THEN vt1.c1 END)AND((((t0.c72))<((vt1.c0))))))OR(LIKELIHOOD(DISTINCT vt1.c0, 0.612438523306016)))  NULLS LAST, (+ (((vt1.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((MIN(((vt1.c1)AND(vt1.c1)), ((((((((vt1.c0)OR(vt1.c1)))AND(t0.c72)))OR(vt1.c1)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE LOWER(vt1.c0)  WHEN ((vt1.c1)<(vt1.c1)) THEN ((vt1.c0)+(NULL)) END DESC, ((((CASE t0.c72  WHEN x'' THEN vt1.c1 END)AND((((t0.c72))<((vt1.c0))))))OR(LIKELIHOOD(DISTINCT vt1.c0, 0.612438523306016)))  NULLS LAST, (+ (((vt1.c1) NOT NULL))));
SELECT ALL * FROM vt1, t0 WHERE (MIN(((vt1.c1)AND(vt1.c1)), ((((((((vt1.c0)OR(vt1.c1)))AND(t0.c72)))OR(vt1.c1)))OR(vt1.c0)))) ORDER BY CASE LOWER(vt1.c0)  WHEN ((vt1.c1)<(vt1.c1)) THEN ((vt1.c0)+(NULL)) END DESC, ((((CASE t0.c72  WHEN x'' THEN vt1.c1 END)AND((((t0.c72))<((vt1.c0))))))OR(LIKELIHOOD(DISTINCT vt1.c0, 0.612438523306016)))  NULLS LAST, (+ (((vt1.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((MIN(((vt1.c1)AND(vt1.c1)), ((((((((vt1.c0)OR(vt1.c1)))AND(t0.c72)))OR(vt1.c1)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE LOWER(vt1.c0)  WHEN ((vt1.c1)<(vt1.c1)) THEN ((vt1.c0)+(NULL)) END DESC, ((((CASE t0.c72  WHEN x'' THEN vt1.c1 END)AND((((t0.c72))<((vt1.c0))))))OR(LIKELIHOOD(DISTINCT vt1.c0, 0.612438523306016)))  NULLS LAST, (+ (((vt1.c1) NOT NULL))));
SELECT ALL * FROM vt1, t0 WHERE (MIN(((vt1.c1)AND(vt1.c1)), ((((((((vt1.c0)OR(vt1.c1)))AND(t0.c72)))OR(vt1.c1)))OR(vt1.c0)))) ORDER BY CASE LOWER(vt1.c0)  WHEN ((vt1.c1)<(vt1.c1)) THEN ((vt1.c0)+(NULL)) END DESC, ((((CASE t0.c72  WHEN x'' THEN vt1.c1 END)AND((((t0.c72))<((vt1.c0))))))OR(LIKELIHOOD(DISTINCT vt1.c0, 0.612438523306016)))  NULLS LAST, (+ (((vt1.c1) NOT NULL)));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)>>(rt0.c1))) BETWEEN (LIKE(rt0.c4, rt0.c1)) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>>(rt0.c1))) BETWEEN (LIKE(rt0.c4, rt0.c1)) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)>>(rt0.c1))) BETWEEN (LIKE(rt0.c4, rt0.c1)) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>>(rt0.c1))) BETWEEN (LIKE(rt0.c4, rt0.c1)) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)>>(rt0.c1))) BETWEEN (LIKE(rt0.c4, rt0.c1)) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))));
SELECT * FROM vt1, rt0 FULL OUTER JOIN t0 ON (((((vt1.c1))!=((x'aeb8')))) BETWEEN (((rt0.c1)IS NOT(rt0.c3))) AND (((((t0.c72)OR(rt0.c4)))AND(vt1.c0)))) WHERE ((((t0.c72)) NOT BETWEEN ((vt1.c1 COLLATE RTRIM)) AND (((rt0.c0 IN (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c72)) NOT BETWEEN ((vt1.c1 COLLATE RTRIM)) AND (((rt0.c0 IN (rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN t0 ON (((((vt1.c1))!=((x'aeb8')))) BETWEEN (((rt0.c1)IS NOT(rt0.c3))) AND (((((t0.c72)OR(rt0.c4)))AND(vt1.c0)))));
SELECT * FROM vt1, rt0 FULL OUTER JOIN t0 ON (((((vt1.c1))!=((x'aeb8')))) BETWEEN (((rt0.c1)IS NOT(rt0.c3))) AND (((((t0.c72)OR(rt0.c4)))AND(vt1.c0)))) WHERE ((((t0.c72)) NOT BETWEEN ((vt1.c1 COLLATE RTRIM)) AND (((rt0.c0 IN (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c72)) NOT BETWEEN ((vt1.c1 COLLATE RTRIM)) AND (((rt0.c0 IN (rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN t0 ON (((((vt1.c1))!=((x'aeb8')))) BETWEEN (((rt0.c1)IS NOT(rt0.c3))) AND (((((t0.c72)OR(rt0.c4)))AND(vt1.c0)))));
SELECT * FROM vt1, rt0 FULL OUTER JOIN t0 ON (((((vt1.c1))!=((x'aeb8')))) BETWEEN (((rt0.c1)IS NOT(rt0.c3))) AND (((((t0.c72)OR(rt0.c4)))AND(vt1.c0)))) WHERE ((((t0.c72)) NOT BETWEEN ((vt1.c1 COLLATE RTRIM)) AND (((rt0.c0 IN (rt0.c2))))));
SELECT ALL * FROM rt0 WHERE (((rt0.c4 COLLATE RTRIM)|(CAST(rt0.c1 AS TEXT)))) ORDER BY LIKELY(rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE RTRIM)|(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(rt0.c4));
SELECT ALL * FROM rt0 WHERE (((rt0.c4 COLLATE RTRIM)|(CAST(rt0.c1 AS TEXT)))) ORDER BY LIKELY(rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE RTRIM)|(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(rt0.c4));
SELECT ALL * FROM rt0 WHERE (((rt0.c4 COLLATE RTRIM)|(CAST(rt0.c1 AS TEXT)))) ORDER BY LIKELY(rt0.c4);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (rt0.c4);
SELECT * FROM t0, rt0, vt1 WHERE (((x'') NOT BETWEEN (((rt0.c1) NOTNULL)) AND (((((rt0.c1)AND(vt1.c1)))OR(rt0.c1))))) ORDER BY (NOT (''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (((rt0.c1) NOTNULL)) AND (((((rt0.c1)AND(vt1.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY (NOT (''))  NULLS LAST);
SELECT * FROM t0, rt0, vt1 WHERE (((x'') NOT BETWEEN (((rt0.c1) NOTNULL)) AND (((((rt0.c1)AND(vt1.c1)))OR(rt0.c1))))) ORDER BY (NOT (''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (((rt0.c1) NOTNULL)) AND (((((rt0.c1)AND(vt1.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY (NOT (''))  NULLS LAST);
SELECT * FROM t0, rt0, vt1 WHERE (((x'') NOT BETWEEN (((rt0.c1) NOTNULL)) AND (((((rt0.c1)AND(vt1.c1)))OR(rt0.c1))))) ORDER BY (NOT (''))  NULLS LAST;
SELECT * FROM t0, vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c1 END COLLATE NOCASE COLLATE BINARY) ORDER BY TYPEOF(DISTINCT (+ (vt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c1 END COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM t0, vt1 ORDER BY TYPEOF(DISTINCT (+ (vt1.c1)))  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c1 END COLLATE NOCASE COLLATE BINARY) ORDER BY TYPEOF(DISTINCT (+ (vt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c1 END COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM t0, vt1 ORDER BY TYPEOF(DISTINCT (+ (vt1.c1)))  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c1 END COLLATE NOCASE COLLATE BINARY) ORDER BY TYPEOF(DISTINCT (+ (vt1.c1)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c4)) NOT BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((((vt1.c0)<=(rt0.c4))))) CROSS JOIN vt1 ON CAST(CAST(rt0.c1 AS INTEGER) AS REAL) WHERE (CASE WHEN (~ (rt0.c1)) THEN vt1.c0 COLLATE BINARY END) ORDER BY (+ (CASE rt0.c1  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt0.c1)) THEN vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c4)) NOT BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((((vt1.c0)<=(rt0.c4))))) CROSS JOIN vt1 ON CAST(CAST(rt0.c1 AS INTEGER) AS REAL) ORDER BY (+ (CASE rt0.c1  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c4)) NOT BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((((vt1.c0)<=(rt0.c4))))) CROSS JOIN vt1 ON CAST(CAST(rt0.c1 AS INTEGER) AS REAL) WHERE (CASE WHEN (~ (rt0.c1)) THEN vt1.c0 COLLATE BINARY END) ORDER BY (+ (CASE rt0.c1  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt0.c1)) THEN vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c4)) NOT BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((((vt1.c0)<=(rt0.c4))))) CROSS JOIN vt1 ON CAST(CAST(rt0.c1 AS INTEGER) AS REAL) ORDER BY (+ (CASE rt0.c1  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c0 END)) DESC);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE ((((vt1.c0, rt0.c0, rt0.c2)) BETWEEN ((((0.1364660730356264)|(rt0.c4)), ((rt0.c1)IS(t0.c72)), (NOT (vt1.c0)))) AND (((((t0.c72, rt0.c2, vt1.c1))==((rt0.c2, rt0.c3, vt1.c0))), json_array_length(t0.c72, rt0.c3), vt1.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, rt0.c0, rt0.c2)) BETWEEN ((((0.1364660730356264)|(rt0.c4)), ((rt0.c1)IS(t0.c72)), (NOT (vt1.c0)))) AND (((((t0.c72, rt0.c2, vt1.c1))==((rt0.c2, rt0.c3, vt1.c0))), json_array_length(t0.c72, rt0.c3), vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE ((((vt1.c0, rt0.c0, rt0.c2)) BETWEEN ((((0.1364660730356264)|(rt0.c4)), ((rt0.c1)IS(t0.c72)), (NOT (vt1.c0)))) AND (((((t0.c72, rt0.c2, vt1.c1))==((rt0.c2, rt0.c3, vt1.c0))), json_array_length(t0.c72, rt0.c3), vt1.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, rt0.c0, rt0.c2)) BETWEEN ((((0.1364660730356264)|(rt0.c4)), ((rt0.c1)IS(t0.c72)), (NOT (vt1.c0)))) AND (((((t0.c72, rt0.c2, vt1.c1))==((rt0.c2, rt0.c3, vt1.c0))), json_array_length(t0.c72, rt0.c3), vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE ((((vt1.c0, rt0.c0, rt0.c2)) BETWEEN ((((0.1364660730356264)|(rt0.c4)), ((rt0.c1)IS(t0.c72)), (NOT (vt1.c0)))) AND (((((t0.c72, rt0.c2, vt1.c1))==((rt0.c2, rt0.c3, vt1.c0))), json_array_length(t0.c72, rt0.c3), vt1.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c2) ORDER BY (((((((((+ (rt0.c4)))AND((((vt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c4))))))OR(TYPEOF(DISTINCT rt0.c0))))OR(((vt1.c0) NOT NULL))))AND((~ ('1907970623'))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((((((+ (rt0.c4)))AND((((vt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c4))))))OR(TYPEOF(DISTINCT rt0.c0))))OR(((vt1.c0) NOT NULL))))AND((~ ('1907970623')))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c2) ORDER BY (((((((((+ (rt0.c4)))AND((((vt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c4))))))OR(TYPEOF(DISTINCT rt0.c0))))OR(((vt1.c0) NOT NULL))))AND((~ ('1907970623'))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((((((+ (rt0.c4)))AND((((vt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c4))))))OR(TYPEOF(DISTINCT rt0.c0))))OR(((vt1.c0) NOT NULL))))AND((~ ('1907970623')))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c2) ORDER BY (((((((((+ (rt0.c4)))AND((((vt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c4))))))OR(TYPEOF(DISTINCT rt0.c0))))OR(((vt1.c0) NOT NULL))))AND((~ ('1907970623'))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(t0.c72 AS TEXT) COLLATE RTRIM) ORDER BY (((rt0.c2 COLLATE RTRIM, (((rt0.c2, rt0.c0, t0.c72))!=((rt0.c1, '0.229674943342154', rt0.c2))), CAST(rt0.c4 AS BLOB)))<=((((rt0.c0) IS TRUE), CAST(rt0.c1 AS BLOB), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c72 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c2 COLLATE RTRIM, (((rt0.c2, rt0.c0, t0.c72))<>((rt0.c1, '0.229674943342154', rt0.c2))), CAST(rt0.c4 AS BLOB)))<=((((rt0.c0) IS TRUE), CAST(rt0.c1 AS BLOB), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(t0.c72 AS TEXT) COLLATE RTRIM) ORDER BY (((rt0.c2 COLLATE RTRIM, (((rt0.c2, rt0.c0, t0.c72))!=((rt0.c1, '0.229674943342154', rt0.c2))), CAST(rt0.c4 AS BLOB)))<=((((rt0.c0) IS TRUE), CAST(rt0.c1 AS BLOB), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c72 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c2 COLLATE RTRIM, (((rt0.c2, rt0.c0, t0.c72))<>((rt0.c1, '0.229674943342154', rt0.c2))), CAST(rt0.c4 AS BLOB)))<=((((rt0.c0) IS TRUE), CAST(rt0.c1 AS BLOB), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(t0.c72 AS TEXT) COLLATE RTRIM) ORDER BY (((rt0.c2 COLLATE RTRIM, (((rt0.c2, rt0.c0, t0.c72))!=((rt0.c1, '0.229674943342154', rt0.c2))), CAST(rt0.c4 AS BLOB)))<=((((rt0.c0) IS TRUE), CAST(rt0.c1 AS BLOB), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) DESC;
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (((((NULL)AND(x'')))OR(CHAR(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(x'')))OR(CHAR(vt1.c1)))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (((((NULL)AND(x'')))OR(CHAR(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(x'')))OR(CHAR(vt1.c1)))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (((((NULL)AND(x'')))OR(CHAR(vt1.c1))));
SELECT * FROM t0 WHERE (x'') ORDER BY (((t0.c72 IN ())) ISNULL);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 ORDER BY (((t0.c72 IN ())) ISNULL));
SELECT * FROM t0 WHERE (x'') ORDER BY (((t0.c72 IN ())) ISNULL);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 ORDER BY (((t0.c72 IN ())) ISNULL));
SELECT * FROM t0 WHERE (x'') ORDER BY (((t0.c72 IN ())) ISNULL);
SELECT ALL * FROM t0 WHERE (CASE WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT (CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT (CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT (CAST(rt0.c1 AS INTEGER))));
SELECT ALL * FROM vt1, rt0 WHERE (((0.9407183298619157)*(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((0.9407183298619157)*(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((0.9407183298619157)*(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((0.9407183298619157)*(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((0.9407183298619157)*(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT COUNT(*) FROM vt1, rt0, t0 NOT INDEXED WHERE (((CAST(vt1.c1 AS INTEGER)) NOT NULL)) ORDER BY json_quote((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY json_quote((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, t0 NOT INDEXED WHERE (((CAST(vt1.c1 AS INTEGER)) NOT NULL)) ORDER BY json_quote((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY json_quote((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, t0 NOT INDEXED WHERE (((CAST(vt1.c1 AS INTEGER)) NOT NULL)) ORDER BY json_quote((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ('') ORDER BY ((rt0.c0) IS TRUE) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) IS TRUE) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ('') ORDER BY ((rt0.c0) IS TRUE) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) IS TRUE) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ('') ORDER BY ((rt0.c0) IS TRUE) COLLATE BINARY ASC;
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS BLOB) COLLATE RTRIM);
SELECT ALL * FROM vt1 WHERE ((HEX(vt1.c0) IN ())) ORDER BY ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((HEX(vt1.c0) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((HEX(vt1.c0) IN ())) ORDER BY ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((HEX(vt1.c0) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((HEX(vt1.c0) IN ())) ORDER BY ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))|(((vt1.c1)LIKE(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS INTEGER))|(((vt1.c1)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))|(((vt1.c1)LIKE(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS INTEGER))|(((vt1.c1)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))|(((vt1.c1)LIKE(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1) ISNULL)) NOT BETWEEN (CASE rt0.c4  WHEN vt1.c0 THEN rt0.c4 WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (((rt0.c0)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL)) NOT BETWEEN (CASE rt0.c4  WHEN vt1.c0 THEN rt0.c4 WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (((rt0.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1) ISNULL)) NOT BETWEEN (CASE rt0.c4  WHEN vt1.c0 THEN rt0.c4 WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (((rt0.c0)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL)) NOT BETWEEN (CASE rt0.c4  WHEN vt1.c0 THEN rt0.c4 WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (((rt0.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1) ISNULL)) NOT BETWEEN (CASE rt0.c4  WHEN vt1.c0 THEN rt0.c4 WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (((rt0.c0)IS NOT(vt1.c0)))));
SELECT ALL * FROM vt1, rt0, t0 WHERE (((((vt1.c1)OR(((((t0.c72)OR(rt0.c1)))AND('/xCTBm')))))OR((((rt0.c4))<>((rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)OR(((((t0.c72)OR(rt0.c1)))AND('/xCTBm')))))OR((((rt0.c4))!=((rt0.c4)))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE (((((vt1.c1)OR(((((t0.c72)OR(rt0.c1)))AND('/xCTBm')))))OR((((rt0.c4))<>((rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)OR(((((t0.c72)OR(rt0.c1)))AND('/xCTBm')))))OR((((rt0.c4))!=((rt0.c4)))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE (((((vt1.c1)OR(((((t0.c72)OR(rt0.c1)))AND('/xCTBm')))))OR((((rt0.c4))<>((rt0.c4))))));
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c2 COLLATE NOCASE)<=(rt0.c4))) ORDER BY LENGTH(((rt0.c3) BETWEEN (t0.c72) AND (rt0.c4))), (- (LIKE(rt0.c3, x'', 'a'))), LTRIM(((rt0.c4)OR(rt0.c4))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE)<=(rt0.c4))) IS TRUE)  as count FROM rt0, t0 ORDER BY LENGTH(((rt0.c3) BETWEEN (t0.c72) AND (rt0.c4))), (- (LIKE(rt0.c3, x'', 'a'))), LTRIM(((rt0.c4)OR(rt0.c4))) DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c2 COLLATE NOCASE)<=(rt0.c4))) ORDER BY LENGTH(((rt0.c3) BETWEEN (t0.c72) AND (rt0.c4))), (- (LIKE(rt0.c3, x'', 'a'))), LTRIM(((rt0.c4)OR(rt0.c4))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE)<=(rt0.c4))) IS TRUE)  as count FROM rt0, t0 ORDER BY LENGTH(((rt0.c3) BETWEEN (t0.c72) AND (rt0.c4))), (- (LIKE(rt0.c3, x'', 'a'))), LTRIM(((rt0.c4)OR(rt0.c4))) DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c2 COLLATE NOCASE)<=(rt0.c4))) ORDER BY LENGTH(((rt0.c3) BETWEEN (t0.c72) AND (rt0.c4))), (- (LIKE(rt0.c3, x'', 'a'))), LTRIM(((rt0.c4)OR(rt0.c4))) DESC;
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (CASE WHEN (((rt0.c4)) NOT BETWEEN ((t0.c72)) AND ((vt1.c1))) THEN (((vt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) ELSE 0.5016108902492652 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c4)) NOT BETWEEN ((t0.c72)) AND ((vt1.c1))) THEN (((vt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) ELSE 0.5016108902492652 END) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (CASE WHEN (((rt0.c4)) NOT BETWEEN ((t0.c72)) AND ((vt1.c1))) THEN (((vt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) ELSE 0.5016108902492652 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c4)) NOT BETWEEN ((t0.c72)) AND ((vt1.c1))) THEN (((vt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) ELSE 0.5016108902492652 END) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (CASE WHEN (((rt0.c4)) NOT BETWEEN ((t0.c72)) AND ((vt1.c1))) THEN (((vt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) ELSE 0.5016108902492652 END);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (~ (CAST(0xffffffff9f3fc46b AS NUMERIC))) WHERE ((((- (rt0.c4)))>=(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c4)))>=(rt0.c0))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (~ (CAST(0xffffffff9f3fc46b AS NUMERIC))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (~ (CAST(0xffffffff9f3fc46b AS NUMERIC))) WHERE ((((- (rt0.c4)))>=(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c4)))>=(rt0.c0))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (~ (CAST(0xffffffff9f3fc46b AS NUMERIC))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (~ (CAST(0xffffffff9f3fc46b AS NUMERIC))) WHERE ((((- (rt0.c4)))>=(rt0.c0)));
SELECT ALL * FROM rt0 WHERE (json(rt0.c1) COLLATE NOCASE) ORDER BY CASE rt0.c0  WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN CAST(rt0.c0 AS REAL) ELSE rt0.c0 COLLATE BINARY END ASC, ((((rt0.c2)>=(rt0.c4))) BETWEEN (((rt0.c4) BETWEEN (x'') AND (rt0.c4))) AND ((((rt0.c2, rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c3, NULL)) BETWEEN ((rt0.c0, NULL, rt0.c1, rt0.c2, rt0.c4, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c3, rt0.c3, rt0.c1, rt0.c3, rt0.c4))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json(rt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c0  WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN CAST(rt0.c0 AS REAL) ELSE rt0.c0 COLLATE BINARY END ASC, ((((rt0.c2)>=(rt0.c4))) BETWEEN (((rt0.c4) BETWEEN (x'') AND (rt0.c4))) AND ((((rt0.c2, rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c3, NULL)) BETWEEN ((rt0.c0, NULL, rt0.c1, rt0.c2, rt0.c4, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c3, rt0.c3, rt0.c1, rt0.c3, rt0.c4))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (json(rt0.c1) COLLATE NOCASE) ORDER BY CASE rt0.c0  WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN CAST(rt0.c0 AS REAL) ELSE rt0.c0 COLLATE BINARY END ASC, ((((rt0.c2)>=(rt0.c4))) BETWEEN (((rt0.c4) BETWEEN (x'') AND (rt0.c4))) AND ((((rt0.c2, rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c3, NULL)) BETWEEN ((rt0.c0, NULL, rt0.c1, rt0.c2, rt0.c4, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c3, rt0.c3, rt0.c1, rt0.c3, rt0.c4))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json(rt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c0  WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN CAST(rt0.c0 AS REAL) ELSE rt0.c0 COLLATE BINARY END ASC, ((((rt0.c2)>=(rt0.c4))) BETWEEN (((rt0.c4) BETWEEN (x'') AND (rt0.c4))) AND ((((rt0.c2, rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c3, NULL)) BETWEEN ((rt0.c0, NULL, rt0.c1, rt0.c2, rt0.c4, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c3, rt0.c3, rt0.c1, rt0.c3, rt0.c4))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (json(rt0.c1) COLLATE NOCASE) ORDER BY CASE rt0.c0  WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN CAST(rt0.c0 AS REAL) ELSE rt0.c0 COLLATE BINARY END ASC, ((((rt0.c2)>=(rt0.c4))) BETWEEN (((rt0.c4) BETWEEN (x'') AND (rt0.c4))) AND ((((rt0.c2, rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c3, NULL)) BETWEEN ((rt0.c0, NULL, rt0.c1, rt0.c2, rt0.c4, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c3, rt0.c3, rt0.c1, rt0.c3, rt0.c4))))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((~ ((~ (t0.c72))))) ORDER BY ((((t0.c72)%(t0.c72))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (t0.c72))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c72)%(t0.c72))) NOT NULL) ASC  NULLS LAST);
SELECT * FROM t0 WHERE ((~ ((~ (t0.c72))))) ORDER BY ((((t0.c72)%(t0.c72))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (t0.c72))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c72)%(t0.c72))) NOT NULL) ASC  NULLS LAST);
SELECT * FROM t0 WHERE ((~ ((~ (t0.c72))))) ORDER BY ((((t0.c72)%(t0.c72))) NOT NULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c4)%(rt0.c0)))+(((rt0.c4)>>(rt0.c2))))) ORDER BY 0Xffffffff9bf1963d DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)%(rt0.c0)))+(((rt0.c4)>>(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY 0Xffffffff9bf1963d DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c4)%(rt0.c0)))+(((rt0.c4)>>(rt0.c2))))) ORDER BY 0Xffffffff9bf1963d DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)%(rt0.c0)))+(((rt0.c4)>>(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY 0Xffffffff9bf1963d DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c4)%(rt0.c0)))+(((rt0.c4)>>(rt0.c2))))) ORDER BY 0Xffffffff9bf1963d DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c1) ISNULL) AS BLOB)) ORDER BY '' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY '' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c1) ISNULL) AS BLOB)) ORDER BY '' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY '' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c1) ISNULL) AS BLOB)) ORDER BY '' ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0 WHERE (ABS(DISTINCT ((((vt1.c0)OR(vt1.c0)))OR(t0.c72)))) ORDER BY ((((vt1.c0)AND(vt1.c0)))>(MAX(vt1.c0, t0.c72))) ASC;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((((vt1.c0)OR(vt1.c0)))OR(t0.c72)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((vt1.c0)AND(vt1.c0)))>(MAX(vt1.c0, t0.c72))) ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE (ABS(DISTINCT ((((vt1.c0)OR(vt1.c0)))OR(t0.c72)))) ORDER BY ((((vt1.c0)AND(vt1.c0)))>(MAX(vt1.c0, t0.c72))) ASC;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((((vt1.c0)OR(vt1.c0)))OR(t0.c72)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((vt1.c0)AND(vt1.c0)))>(MAX(vt1.c0, t0.c72))) ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE (ABS(DISTINCT ((((vt1.c0)OR(vt1.c0)))OR(t0.c72)))) ORDER BY ((((vt1.c0)AND(vt1.c0)))>(MAX(vt1.c0, t0.c72))) ASC;
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 AS REAL) COLLATE RTRIM);
SELECT * FROM rt0, t0, vt1 WHERE (CAST('a샨bㄏ' AS REAL)) ORDER BY CASE ((rt0.c3) BETWEEN (rt0.c3) AND (vt1.c1))  WHEN (~ (rt0.c3)) THEN NULL ELSE ((((vt1.c0)OR('-62198024')))OR(rt0.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('a샨bㄏ' AS REAL)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY CASE ((rt0.c3) BETWEEN (rt0.c3) AND (vt1.c1))  WHEN (~ (rt0.c3)) THEN NULL ELSE ((((vt1.c0)OR('-62198024')))OR(rt0.c2)) END DESC  NULLS LAST);
SELECT * FROM rt0, t0, vt1 WHERE (CAST('a샨bㄏ' AS REAL)) ORDER BY CASE ((rt0.c3) BETWEEN (rt0.c3) AND (vt1.c1))  WHEN (~ (rt0.c3)) THEN NULL ELSE ((((vt1.c0)OR('-62198024')))OR(rt0.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('a샨bㄏ' AS REAL)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY CASE ((rt0.c3) BETWEEN (rt0.c3) AND (vt1.c1))  WHEN (~ (rt0.c3)) THEN NULL ELSE ((((vt1.c0)OR('-62198024')))OR(rt0.c2)) END DESC  NULLS LAST);
SELECT * FROM rt0, t0, vt1 WHERE (CAST('a샨bㄏ' AS REAL)) ORDER BY CASE ((rt0.c3) BETWEEN (rt0.c3) AND (vt1.c1))  WHEN (~ (rt0.c3)) THEN NULL ELSE ((((vt1.c0)OR('-62198024')))OR(rt0.c2)) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (CAST(rt0.c3 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (CAST(rt0.c3 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (CAST(rt0.c3 AS NUMERIC) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ ((rt0.c1 IN (t0.c72))))) ORDER BY (((0x5e940b57)) BETWEEN (((rt0.c4 IN ()))) AND (((rt0.c3 IN (rt0.c4)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c1 IN (t0.c72))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((0X5e940b57)) BETWEEN (((rt0.c4 IN ()))) AND (((rt0.c3 IN (rt0.c4)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ ((rt0.c1 IN (t0.c72))))) ORDER BY (((0x5e940b57)) BETWEEN (((rt0.c4 IN ()))) AND (((rt0.c3 IN (rt0.c4)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c1 IN (t0.c72))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((0X5e940b57)) BETWEEN (((rt0.c4 IN ()))) AND (((rt0.c3 IN (rt0.c4)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ ((rt0.c1 IN (t0.c72))))) ORDER BY (((0x5e940b57)) BETWEEN (((rt0.c4 IN ()))) AND (((rt0.c3 IN (rt0.c4)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON CASE WHEN (((x'', rt0.c0, rt0.c2)) BETWEEN ((rt0.c4, rt0.c3, rt0.c2)) AND ((rt0.c0, rt0.c3, ''))) THEN CASE WHEN vt1.c1 THEN rt0.c4 ELSE vt1.c0 END WHEN x'' THEN ((((((((vt1.c1)OR(rt0.c2)))AND(rt0.c2)))AND(vt1.c1)))OR(rt0.c1)) WHEN IFNULL(rt0.c0, rt0.c3) THEN (((rt0.c0))>=((rt0.c3))) END WHERE (CASE WHEN vt1.c1 COLLATE RTRIM THEN ((rt0.c1)<=(rt0.c2)) END) ORDER BY rt0.c4  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c1 COLLATE RTRIM THEN ((rt0.c1)<=(rt0.c2)) END) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON CASE WHEN (((x'', rt0.c0, rt0.c2)) BETWEEN ((rt0.c4, rt0.c3, rt0.c2)) AND ((rt0.c0, rt0.c3, ''))) THEN CASE WHEN vt1.c1 THEN rt0.c4 ELSE vt1.c0 END WHEN x'' THEN ((((((((vt1.c1)OR(rt0.c2)))AND(rt0.c2)))AND(vt1.c1)))OR(rt0.c1)) WHEN IFNULL(rt0.c0, rt0.c3) THEN (((rt0.c0))>=((rt0.c3))) END ORDER BY rt0.c4  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON CASE WHEN (((x'', rt0.c0, rt0.c2)) BETWEEN ((rt0.c4, rt0.c3, rt0.c2)) AND ((rt0.c0, rt0.c3, ''))) THEN CASE WHEN vt1.c1 THEN rt0.c4 ELSE vt1.c0 END WHEN x'' THEN ((((((((vt1.c1)OR(rt0.c2)))AND(rt0.c2)))AND(vt1.c1)))OR(rt0.c1)) WHEN IFNULL(rt0.c0, rt0.c3) THEN (((rt0.c0))>=((rt0.c3))) END WHERE (CASE WHEN vt1.c1 COLLATE RTRIM THEN ((rt0.c1)<=(rt0.c2)) END) ORDER BY rt0.c4  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c1 COLLATE RTRIM THEN ((rt0.c1)<=(rt0.c2)) END) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON CASE WHEN (((x'', rt0.c0, rt0.c2)) BETWEEN ((rt0.c4, rt0.c3, rt0.c2)) AND ((rt0.c0, rt0.c3, ''))) THEN CASE WHEN vt1.c1 THEN rt0.c4 ELSE vt1.c0 END WHEN x'' THEN ((((((((vt1.c1)OR(rt0.c2)))AND(rt0.c2)))AND(vt1.c1)))OR(rt0.c1)) WHEN IFNULL(rt0.c0, rt0.c3) THEN (((rt0.c0))>=((rt0.c3))) END ORDER BY rt0.c4  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON CASE WHEN (((x'', rt0.c0, rt0.c2)) BETWEEN ((rt0.c4, rt0.c3, rt0.c2)) AND ((rt0.c0, rt0.c3, ''))) THEN CASE WHEN vt1.c1 THEN rt0.c4 ELSE vt1.c0 END WHEN x'' THEN ((((((((vt1.c1)OR(rt0.c2)))AND(rt0.c2)))AND(vt1.c1)))OR(rt0.c1)) WHEN IFNULL(rt0.c0, rt0.c3) THEN (((rt0.c0))>=((rt0.c3))) END WHERE (CASE WHEN vt1.c1 COLLATE RTRIM THEN ((rt0.c1)<=(rt0.c2)) END) ORDER BY rt0.c4  NULLS FIRST;
SELECT ALL * FROM vt1, t0, rt0 NOT INDEXED WHERE (CAST(841486778 AS REAL)) ORDER BY 0.933438520010143 DESC, ((CAST(vt1.c1 AS REAL)) NOT BETWEEN (LIKELIHOOD(rt0.c1, 0.9229400862411732)) AND (vt1.c1)), ((json_type(vt1.c1)) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(841486778 AS REAL)) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY 0.933438520010143 DESC, ((CAST(vt1.c1 AS REAL)) NOT BETWEEN (LIKELIHOOD(rt0.c1, 0.9229400862411732)) AND (vt1.c1)), ((json_type(vt1.c1)) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t0, rt0 NOT INDEXED WHERE (CAST(841486778 AS REAL)) ORDER BY 0.933438520010143 DESC, ((CAST(vt1.c1 AS REAL)) NOT BETWEEN (LIKELIHOOD(rt0.c1, 0.9229400862411732)) AND (vt1.c1)), ((json_type(vt1.c1)) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(841486778 AS REAL)) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY 0.933438520010143 DESC, ((CAST(vt1.c1 AS REAL)) NOT BETWEEN (LIKELIHOOD(rt0.c1, 0.9229400862411732)) AND (vt1.c1)), ((json_type(vt1.c1)) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t0, rt0 NOT INDEXED WHERE (CAST(841486778 AS REAL)) ORDER BY 0.933438520010143 DESC, ((CAST(vt1.c1 AS REAL)) NOT BETWEEN (LIKELIHOOD(rt0.c1, 0.9229400862411732)) AND (vt1.c1)), ((json_type(vt1.c1)) NOTNULL) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CAST(((((t0.c72)OR(t0.c72)))OR(t0.c72)) AS NUMERIC)) ORDER BY (((t0.c72 IN (t0.c72, t0.c72))) NOT BETWEEN (((t0.c72) ISNULL)) AND (t0.c72))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c72)OR(t0.c72)))OR(t0.c72)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c72 IN (t0.c72, t0.c72))) NOT BETWEEN (((t0.c72) ISNULL)) AND (t0.c72))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST(((((t0.c72)OR(t0.c72)))OR(t0.c72)) AS NUMERIC)) ORDER BY (((t0.c72 IN (t0.c72, t0.c72))) NOT BETWEEN (((t0.c72) ISNULL)) AND (t0.c72))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c72)OR(t0.c72)))OR(t0.c72)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c72 IN (t0.c72, t0.c72))) NOT BETWEEN (((t0.c72) ISNULL)) AND (t0.c72))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST(((((t0.c72)OR(t0.c72)))OR(t0.c72)) AS NUMERIC)) ORDER BY (((t0.c72 IN (t0.c72, t0.c72))) NOT BETWEEN (((t0.c72) ISNULL)) AND (t0.c72))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE ((((rt0.c0 IN ()))<>(((x'') NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))<>(((x'') NOTNULL)))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE ((((rt0.c0 IN ()))<>(((x'') NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))<>(((x'') NOTNULL)))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE ((((rt0.c0 IN ()))<>(((x'') NOTNULL))));
SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (((vt1.c1)%(vt1.c1))) AND (((vt1.c0) NOT NULL)))) ORDER BY ((((IFNULL(DISTINCT vt1.c0, 0.4237139789184713))OR(((vt1.c0)>=(vt1.c1)))))OR(vt1.c1 COLLATE BINARY)) ASC, HEX(DISTINCT ((vt1.c1)/(vt1.c0))) DESC  NULLS LAST, ((((CASE WHEN vt1.c1 THEN vt1.c0 END)OR(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(vt1.c1 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (((vt1.c1)%(vt1.c1))) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((((IFNULL(DISTINCT vt1.c0, 0.4237139789184713))OR(((vt1.c0)>=(vt1.c1)))))OR(vt1.c1 COLLATE BINARY)) ASC, HEX(DISTINCT ((vt1.c1)/(vt1.c0))) DESC  NULLS LAST, ((((CASE WHEN vt1.c1 THEN vt1.c0 END)OR(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(vt1.c1 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (((vt1.c1)%(vt1.c1))) AND (((vt1.c0) NOT NULL)))) ORDER BY ((((IFNULL(DISTINCT vt1.c0, 0.4237139789184713))OR(((vt1.c0)>=(vt1.c1)))))OR(vt1.c1 COLLATE BINARY)) ASC, HEX(DISTINCT ((vt1.c1)/(vt1.c0))) DESC  NULLS LAST, ((((CASE WHEN vt1.c1 THEN vt1.c0 END)OR(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(vt1.c1 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (((vt1.c1)%(vt1.c1))) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((((IFNULL(DISTINCT vt1.c0, 0.4237139789184713))OR(((vt1.c0)>=(vt1.c1)))))OR(vt1.c1 COLLATE BINARY)) ASC, HEX(DISTINCT ((vt1.c1)/(vt1.c0))) DESC  NULLS LAST, ((((CASE WHEN vt1.c1 THEN vt1.c0 END)OR(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(vt1.c1 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (((vt1.c1)%(vt1.c1))) AND (((vt1.c0) NOT NULL)))) ORDER BY ((((IFNULL(DISTINCT vt1.c0, 0.4237139789184713))OR(((vt1.c0)>=(vt1.c1)))))OR(vt1.c1 COLLATE BINARY)) ASC, HEX(DISTINCT ((vt1.c1)/(vt1.c0))) DESC  NULLS LAST, ((((CASE WHEN vt1.c1 THEN vt1.c0 END)OR(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(vt1.c1 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL * FROM vt1 INNER JOIN rt0 ON ((((0X7fea4818) BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL) WHERE (CAST(rt0.c2 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((0X7fea4818) BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON ((((0X7fea4818) BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL) WHERE (CAST(rt0.c2 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((0X7fea4818) BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON ((((0X7fea4818) BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL) WHERE (CAST(rt0.c2 AS INTEGER) COLLATE RTRIM);
SELECT * FROM vt1 WHERE (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((vt1.c1)>=(vt1.c0)), (((vt1.c0, vt1.c0, vt1.c1))>((vt1.c1, vt1.c0, vt1.c1)))))>=((vt1.c0 COLLATE NOCASE, (vt1.c1 IN (vt1.c0)), CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((vt1.c1)>=(vt1.c0)), (((vt1.c0, vt1.c0, vt1.c1))>((vt1.c1, vt1.c0, vt1.c1)))))>=((vt1.c0 COLLATE NOCASE, (vt1.c1 IN (vt1.c0)), CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((vt1.c1)>=(vt1.c0)), (((vt1.c0, vt1.c0, vt1.c1))>((vt1.c1, vt1.c0, vt1.c1)))))>=((vt1.c0 COLLATE NOCASE, (vt1.c1 IN (vt1.c0)), CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((vt1.c1)>=(vt1.c0)), (((vt1.c0, vt1.c0, vt1.c1))>((vt1.c1, vt1.c0, vt1.c1)))))>=((vt1.c0 COLLATE NOCASE, (vt1.c1 IN (vt1.c0)), CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((vt1.c1)>=(vt1.c0)), (((vt1.c0, vt1.c0, vt1.c1))>((vt1.c1, vt1.c0, vt1.c1)))))>=((vt1.c0 COLLATE NOCASE, (vt1.c1 IN (vt1.c0)), CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON TYPEOF(vt1.c1) WHERE (CAST(vt1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON TYPEOF(vt1.c1));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON TYPEOF(vt1.c1) WHERE (CAST(vt1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON TYPEOF(vt1.c1));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON TYPEOF(vt1.c1) WHERE (CAST(vt1.c0 AS INTEGER));
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((vt1.c0 COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((vt1.c0 COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((vt1.c0 COLLATE RTRIM) NOTNULL));
SELECT ALL * FROM rt0, vt1 INNER JOIN t0 ON CASE 0.1307670201314115  WHEN x'' COLLATE BINARY THEN '' WHEN (NOT (rt0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((((rt0.c2)AND(rt0.c4)))OR(rt0.c4)) THEN CAST(rt0.c2 AS REAL) ELSE CAST(rt0.c0 AS TEXT) END WHERE (((t0.c72)%((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((t0.c72)%((vt1.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1 INNER JOIN t0 ON CASE 0.1307670201314115  WHEN x'' COLLATE BINARY THEN '' WHEN (NOT (rt0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((((rt0.c2)AND(rt0.c4)))OR(rt0.c4)) THEN CAST(rt0.c2 AS REAL) ELSE CAST(rt0.c0 AS TEXT) END);
SELECT ALL * FROM rt0, vt1 INNER JOIN t0 ON CASE 0.1307670201314115  WHEN x'' COLLATE BINARY THEN '' WHEN (NOT (rt0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((((rt0.c2)AND(rt0.c4)))OR(rt0.c4)) THEN CAST(rt0.c2 AS REAL) ELSE CAST(rt0.c0 AS TEXT) END WHERE (((t0.c72)%((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((t0.c72)%((vt1.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1 INNER JOIN t0 ON CASE 0.1307670201314115  WHEN x'' COLLATE BINARY THEN '' WHEN (NOT (rt0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((((rt0.c2)AND(rt0.c4)))OR(rt0.c4)) THEN CAST(rt0.c2 AS REAL) ELSE CAST(rt0.c0 AS TEXT) END);
SELECT ALL * FROM rt0, vt1 INNER JOIN t0 ON CASE 0.1307670201314115  WHEN x'' COLLATE BINARY THEN '' WHEN (NOT (rt0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((((rt0.c2)AND(rt0.c4)))OR(rt0.c4)) THEN CAST(rt0.c2 AS REAL) ELSE CAST(rt0.c0 AS TEXT) END WHERE (((t0.c72)%((vt1.c0 IN ()))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))LIKE(rt0.c2 COLLATE NOCASE))) ORDER BY 0X7bff9425  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))LIKE(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY 0X7bff9425  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))LIKE(rt0.c2 COLLATE NOCASE))) ORDER BY 0X7bff9425  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))LIKE(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY 0X7bff9425  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1) IS FALSE) IN (((NULL) BETWEEN (vt1.c1) AND (vt1.c1)), vt1.c1 COLLATE NOCASE))) ORDER BY (((vt1.c0 IN (vt1.c0))) NOT BETWEEN (vt1.c1) AND (vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1) IS FALSE) IN (((NULL) BETWEEN (vt1.c1) AND (vt1.c1)), vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0))) NOT BETWEEN (vt1.c1) AND (vt1.c0)) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1) IS FALSE) IN (((NULL) BETWEEN (vt1.c1) AND (vt1.c1)), vt1.c1 COLLATE NOCASE))) ORDER BY (((vt1.c0 IN (vt1.c0))) NOT BETWEEN (vt1.c1) AND (vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1) IS FALSE) IN (((NULL) BETWEEN (vt1.c1) AND (vt1.c1)), vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0))) NOT BETWEEN (vt1.c1) AND (vt1.c0)) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1) IS FALSE) IN (((NULL) BETWEEN (vt1.c1) AND (vt1.c1)), vt1.c1 COLLATE NOCASE))) ORDER BY (((vt1.c0 IN (vt1.c0))) NOT BETWEEN (vt1.c1) AND (vt1.c0)) DESC;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1) NOT BETWEEN (x'0667') AND (0.5891302940638625)) IN ((((vt1.c0))>=((NULL))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1) NOT BETWEEN (x'0667') AND (0.5891302940638625)) IN ((((vt1.c0))>=((NULL)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1) NOT BETWEEN (x'0667') AND (0.5891302940638625)) IN ((((vt1.c0))>=((NULL))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1) NOT BETWEEN (x'0667') AND (0.5891302940638625)) IN ((((vt1.c0))>=((NULL)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1) NOT BETWEEN (x'0667') AND (0.5891302940638625)) IN ((((vt1.c0))>=((NULL))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (+ (rt0.c3)) THEN rt0.c4 COLLATE NOCASE END) ORDER BY ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (rt0.c3)) THEN rt0.c4 COLLATE NOCASE END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (+ (rt0.c3)) THEN rt0.c4 COLLATE NOCASE END) ORDER BY ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (rt0.c3)) THEN rt0.c4 COLLATE NOCASE END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (+ (rt0.c3)) THEN rt0.c4 COLLATE NOCASE END) ORDER BY ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4))) NOT NULL);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON ((((((x''))<((vt1.c0)))))<((NULLIF(DISTINCT vt1.c0, vt1.c1)))) WHERE ((((NOT (vt1.c0)))|(((vt1.c0) BETWEEN (t0.c72) AND (t0.c72)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))|(((vt1.c0) BETWEEN (t0.c72) AND (t0.c72))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON ((((((x''))<((vt1.c0)))))<((NULLIF(DISTINCT vt1.c0, vt1.c1)))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON ((((((x''))<((vt1.c0)))))<((NULLIF(DISTINCT vt1.c0, vt1.c1)))) WHERE ((((NOT (vt1.c0)))|(((vt1.c0) BETWEEN (t0.c72) AND (t0.c72)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))|(((vt1.c0) BETWEEN (t0.c72) AND (t0.c72))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON ((((((x''))<((vt1.c0)))))<((NULLIF(DISTINCT vt1.c0, vt1.c1)))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON ((((((x''))<((vt1.c0)))))<((NULLIF(DISTINCT vt1.c0, vt1.c1)))) WHERE ((((NOT (vt1.c0)))|(((vt1.c0) BETWEEN (t0.c72) AND (t0.c72)))));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((CAST(rt0.c3 AS NUMERIC) IN (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c3 AS NUMERIC) IN (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((CAST(rt0.c3 AS NUMERIC) IN (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c3 AS NUMERIC) IN (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((CAST(rt0.c3 AS NUMERIC) IN (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT ALL * FROM vt1, rt0 WHERE (CASE CASE vt1.c0  WHEN rt0.c3 THEN vt1.c1 WHEN rt0.c4 THEN rt0.c3 WHEN NULL THEN rt0.c1 END  WHEN CASE rt0.c4  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c1 END THEN ((rt0.c4)<(rt0.c1)) ELSE ((((((((((((rt0.c1)OR(rt0.c0)))AND('-1078267913')))OR(rt0.c0)))OR(vt1.c1)))AND(rt0.c0)))OR(0.6814188963646414)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt1.c0  WHEN rt0.c3 THEN vt1.c1 WHEN rt0.c4 THEN rt0.c3 WHEN NULL THEN rt0.c1 END  WHEN CASE rt0.c4  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c1 END THEN ((rt0.c4)<(rt0.c1)) ELSE ((((((((((((rt0.c1)OR(rt0.c0)))AND('-1078267913')))OR(rt0.c0)))OR(vt1.c1)))AND(rt0.c0)))OR(0.6814188963646414)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE CASE vt1.c0  WHEN rt0.c3 THEN vt1.c1 WHEN rt0.c4 THEN rt0.c3 WHEN NULL THEN rt0.c1 END  WHEN CASE rt0.c4  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c1 END THEN ((rt0.c4)<(rt0.c1)) ELSE ((((((((((((rt0.c1)OR(rt0.c0)))AND('-1078267913')))OR(rt0.c0)))OR(vt1.c1)))AND(rt0.c0)))OR(0.6814188963646414)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt1.c0  WHEN rt0.c3 THEN vt1.c1 WHEN rt0.c4 THEN rt0.c3 WHEN NULL THEN rt0.c1 END  WHEN CASE rt0.c4  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c1 END THEN ((rt0.c4)<(rt0.c1)) ELSE ((((((((((((rt0.c1)OR(rt0.c0)))AND('-1078267913')))OR(rt0.c0)))OR(vt1.c1)))AND(rt0.c0)))OR(0.6814188963646414)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE CASE vt1.c0  WHEN rt0.c3 THEN vt1.c1 WHEN rt0.c4 THEN rt0.c3 WHEN NULL THEN rt0.c1 END  WHEN CASE rt0.c4  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c1 END THEN ((rt0.c4)<(rt0.c1)) ELSE ((((((((((((rt0.c1)OR(rt0.c0)))AND('-1078267913')))OR(rt0.c0)))OR(vt1.c1)))AND(rt0.c0)))OR(0.6814188963646414)) END);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (((((((((((NULL) NOT BETWEEN (rt0.c3) AND (rt0.c0)))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c1)))))AND(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))))OR((((vt1.c0))=((rt0.c2)))))) ORDER BY TRIM(DISTINCT vt1.c1 COLLATE RTRIM, (rt0.c0 IN (rt0.c0, vt1.c0, rt0.c2))) ASC  NULLS FIRST, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL) NOT BETWEEN (rt0.c3) AND (rt0.c0)))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c1)))))AND(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))))OR((((vt1.c0))=((rt0.c2)))))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY TRIM(DISTINCT vt1.c1 COLLATE RTRIM, (rt0.c0 IN (rt0.c0, vt1.c0, rt0.c2))) ASC  NULLS FIRST, rt0.c0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (((((((((((NULL) NOT BETWEEN (rt0.c3) AND (rt0.c0)))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c1)))))AND(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))))OR((((vt1.c0))=((rt0.c2)))))) ORDER BY TRIM(DISTINCT vt1.c1 COLLATE RTRIM, (rt0.c0 IN (rt0.c0, vt1.c0, rt0.c2))) ASC  NULLS FIRST, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL) NOT BETWEEN (rt0.c3) AND (rt0.c0)))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c1)))))AND(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))))OR((((vt1.c0))=((rt0.c2)))))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY TRIM(DISTINCT vt1.c1 COLLATE RTRIM, (rt0.c0 IN (rt0.c0, vt1.c0, rt0.c2))) ASC  NULLS FIRST, rt0.c0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (((((((((((NULL) NOT BETWEEN (rt0.c3) AND (rt0.c0)))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c1)))))AND(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))))OR((((vt1.c0))=((rt0.c2)))))) ORDER BY TRIM(DISTINCT vt1.c1 COLLATE RTRIM, (rt0.c0 IN (rt0.c0, vt1.c0, rt0.c2))) ASC  NULLS FIRST, rt0.c0;
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (CASE (rt0.c1 IN ())  WHEN ((rt0.c0)/(NULL)) THEN CAST(rt0.c0 AS BLOB) ELSE QUOTE(rt0.c4) END) ORDER BY ((((((rt0.c0) IS TRUE))AND(rt0.c4 COLLATE RTRIM)))OR(((rt0.c2) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c1 IN ())  WHEN ((rt0.c0)/(NULL)) THEN CAST(rt0.c0 AS BLOB) ELSE QUOTE(rt0.c4) END) IS TRUE)  as count FROM t0, vt1 NOT INDEXED, rt0 ORDER BY ((((((rt0.c0) IS TRUE))AND(rt0.c4 COLLATE RTRIM)))OR(((rt0.c2) IS FALSE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (CASE (rt0.c1 IN ())  WHEN ((rt0.c0)/(NULL)) THEN CAST(rt0.c0 AS BLOB) ELSE QUOTE(rt0.c4) END) ORDER BY ((((((rt0.c0) IS TRUE))AND(rt0.c4 COLLATE RTRIM)))OR(((rt0.c2) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c1 IN ())  WHEN ((rt0.c0)/(NULL)) THEN CAST(rt0.c0 AS BLOB) ELSE QUOTE(rt0.c4) END) IS TRUE)  as count FROM t0, vt1 NOT INDEXED, rt0 ORDER BY ((((((rt0.c0) IS TRUE))AND(rt0.c4 COLLATE RTRIM)))OR(((rt0.c2) IS FALSE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (CASE (rt0.c1 IN ())  WHEN ((rt0.c0)/(NULL)) THEN CAST(rt0.c0 AS BLOB) ELSE QUOTE(rt0.c4) END) ORDER BY ((((((rt0.c0) IS TRUE))AND(rt0.c4 COLLATE RTRIM)))OR(((rt0.c2) IS FALSE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (0.20484340814145985 IN (((vt1.c0)*(rt0.c1)), ((((vt1.c0)OR(rt0.c3)))OR(vt1.c0)))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (0.20484340814145985 IN (((vt1.c0)*(rt0.c1)), ((((vt1.c0)OR(rt0.c3)))OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (0.20484340814145985 IN (((vt1.c0)*(rt0.c1)), ((((vt1.c0)OR(rt0.c3)))OR(vt1.c0)))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (0.20484340814145985 IN (((vt1.c0)*(rt0.c1)), ((((vt1.c0)OR(rt0.c3)))OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (0.20484340814145985 IN (((vt1.c0)*(rt0.c1)), ((((vt1.c0)OR(rt0.c3)))OR(vt1.c0)))) WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((json_extract('-1964617386', t0.c72))<(CAST(rt0.c3 AS BLOB)))) ORDER BY 0.27636239878374924 DESC;
SELECT SUM(count) FROM (SELECT ((((json_extract('-1964617386', t0.c72))<(CAST(rt0.c3 AS BLOB)))) IS TRUE)  as count FROM rt0, t0 ORDER BY 0.27636239878374924 DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((json_extract('-1964617386', t0.c72))<(CAST(rt0.c3 AS BLOB)))) ORDER BY 0.27636239878374924 DESC;
SELECT SUM(count) FROM (SELECT ((((json_extract('-1964617386', t0.c72))<(CAST(rt0.c3 AS BLOB)))) IS TRUE)  as count FROM rt0, t0 ORDER BY 0.27636239878374924 DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((json_extract('-1964617386', t0.c72))<(CAST(rt0.c3 AS BLOB)))) ORDER BY 0.27636239878374924 DESC;
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (UPPER(DISTINCT CASE NULL  WHEN rt0.c4 THEN vt1.c0 ELSE 'Md' END)) ORDER BY (((rt0.c2)IS NOT(vt1.c1)) IN ())  NULLS LAST, (x'' IN (x'', (NOT (rt0.c3)))), IFNULL(DISTINCT ((rt0.c4)IS(rt0.c3)), t0.c72 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE NULL  WHEN rt0.c4 THEN vt1.c0 ELSE 'Md' END)) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY (((rt0.c2)IS NOT(vt1.c1)) IN ())  NULLS LAST, (x'' IN (x'', (NOT (rt0.c3)))), IFNULL(DISTINCT ((rt0.c4)IS(rt0.c3)), t0.c72 COLLATE NOCASE));
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (UPPER(DISTINCT CASE NULL  WHEN rt0.c4 THEN vt1.c0 ELSE 'Md' END)) ORDER BY (((rt0.c2)IS NOT(vt1.c1)) IN ())  NULLS LAST, (x'' IN (x'', (NOT (rt0.c3)))), IFNULL(DISTINCT ((rt0.c4)IS(rt0.c3)), t0.c72 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE NULL  WHEN rt0.c4 THEN vt1.c0 ELSE 'Md' END)) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY (((rt0.c2)IS NOT(vt1.c1)) IN ())  NULLS LAST, (x'' IN (x'', (NOT (rt0.c3)))), IFNULL(DISTINCT ((rt0.c4)IS(rt0.c3)), t0.c72 COLLATE NOCASE));
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (UPPER(DISTINCT CASE NULL  WHEN rt0.c4 THEN vt1.c0 ELSE 'Md' END)) ORDER BY (((rt0.c2)IS NOT(vt1.c1)) IN ())  NULLS LAST, (x'' IN (x'', (NOT (rt0.c3)))), IFNULL(DISTINCT ((rt0.c4)IS(rt0.c3)), t0.c72 COLLATE NOCASE);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c4, vt1.c0, rt0.c1, rt0.c4, rt0.c0)) BETWEEN (((~ (rt0.c0)), (((vt1.c0, rt0.c1, rt0.c2))>((vt1.c1, rt0.c3, rt0.c2))), rt0.c4 COLLATE NOCASE, vt1.c0, ((rt0.c2) IS TRUE))) AND ((NULL, CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END, ((vt1.c0) NOTNULL), (((rt0.c4, vt1.c0, rt0.c3))<((vt1.c1, rt0.c3, rt0.c0))), ((((((((rt0.c2)OR(vt1.c0)))OR(rt0.c0)))OR(vt1.c0)))OR(vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4, vt1.c0, rt0.c1, rt0.c4, rt0.c0)) BETWEEN (((~ (rt0.c0)), (((vt1.c0, rt0.c1, rt0.c2))>((vt1.c1, rt0.c3, rt0.c2))), rt0.c4 COLLATE NOCASE, vt1.c0, ((rt0.c2) IS TRUE))) AND ((NULL, CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END, ((vt1.c0) NOTNULL), (((rt0.c4, vt1.c0, rt0.c3))<((vt1.c1, rt0.c3, rt0.c0))), ((((((((rt0.c2)OR(vt1.c0)))OR(rt0.c0)))OR(vt1.c0)))OR(vt1.c1)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c4, vt1.c0, rt0.c1, rt0.c4, rt0.c0)) BETWEEN (((~ (rt0.c0)), (((vt1.c0, rt0.c1, rt0.c2))>((vt1.c1, rt0.c3, rt0.c2))), rt0.c4 COLLATE NOCASE, vt1.c0, ((rt0.c2) IS TRUE))) AND ((NULL, CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END, ((vt1.c0) NOTNULL), (((rt0.c4, vt1.c0, rt0.c3))<((vt1.c1, rt0.c3, rt0.c0))), ((((((((rt0.c2)OR(vt1.c0)))OR(rt0.c0)))OR(vt1.c0)))OR(vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4, vt1.c0, rt0.c1, rt0.c4, rt0.c0)) BETWEEN (((~ (rt0.c0)), (((vt1.c0, rt0.c1, rt0.c2))>((vt1.c1, rt0.c3, rt0.c2))), rt0.c4 COLLATE NOCASE, vt1.c0, ((rt0.c2) IS TRUE))) AND ((NULL, CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END, ((vt1.c0) NOTNULL), (((rt0.c4, vt1.c0, rt0.c3))<((vt1.c1, rt0.c3, rt0.c0))), ((((((((rt0.c2)OR(vt1.c0)))OR(rt0.c0)))OR(vt1.c0)))OR(vt1.c1)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c4, vt1.c0, rt0.c1, rt0.c4, rt0.c0)) BETWEEN (((~ (rt0.c0)), (((vt1.c0, rt0.c1, rt0.c2))>((vt1.c1, rt0.c3, rt0.c2))), rt0.c4 COLLATE NOCASE, vt1.c0, ((rt0.c2) IS TRUE))) AND ((NULL, CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END, ((vt1.c0) NOTNULL), (((rt0.c4, vt1.c0, rt0.c3))<((vt1.c1, rt0.c3, rt0.c0))), ((((((((rt0.c2)OR(vt1.c0)))OR(rt0.c0)))OR(vt1.c0)))OR(vt1.c1))))));
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (CAST((rt0.c1 IN ()) AS BLOB)) ORDER BY json_array(rt0.c2, ((rt0.c2)<(t0.c72)), (((vt1.c1)) BETWEEN ((t0.c72)) AND ((rt0.c0))), LOWER('f~')) DESC  NULLS FIRST, CAST((((rt0.c1, vt1.c1, NULL))!=((vt1.c0, rt0.c1, rt0.c2))) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY json_array(rt0.c2, ((rt0.c2)<(t0.c72)), (((vt1.c1)) BETWEEN ((t0.c72)) AND ((rt0.c0))), LOWER('f~')) DESC  NULLS FIRST, CAST((((rt0.c1, vt1.c1, NULL))<>((vt1.c0, rt0.c1, rt0.c2))) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (CAST((rt0.c1 IN ()) AS BLOB)) ORDER BY json_array(rt0.c2, ((rt0.c2)<(t0.c72)), (((vt1.c1)) BETWEEN ((t0.c72)) AND ((rt0.c0))), LOWER('f~')) DESC  NULLS FIRST, CAST((((rt0.c1, vt1.c1, NULL))!=((vt1.c0, rt0.c1, rt0.c2))) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY json_array(rt0.c2, ((rt0.c2)<(t0.c72)), (((vt1.c1)) BETWEEN ((t0.c72)) AND ((rt0.c0))), LOWER('f~')) DESC  NULLS FIRST, CAST((((rt0.c1, vt1.c1, NULL))<>((vt1.c0, rt0.c1, rt0.c2))) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (CAST((rt0.c1 IN ()) AS BLOB)) ORDER BY json_array(rt0.c2, ((rt0.c2)<(t0.c72)), (((vt1.c1)) BETWEEN ((t0.c72)) AND ((rt0.c0))), LOWER('f~')) DESC  NULLS FIRST, CAST((((rt0.c1, vt1.c1, NULL))!=((vt1.c0, rt0.c1, rt0.c2))) AS NUMERIC) DESC  NULLS LAST;
SELECT * FROM vt1, t0 LEFT OUTER JOIN rt0 ON (((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((vt1.c0))))AND(rt0.c1)))OR(((((NULL)OR(rt0.c1)))AND(rt0.c4)))) WHERE ((vt1.c0 IN (((rt0.c4) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (((rt0.c4) NOTNULL)))) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN rt0 ON (((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((vt1.c0))))AND(rt0.c1)))OR(((((NULL)OR(rt0.c1)))AND(rt0.c4)))));
SELECT * FROM vt1, t0 LEFT OUTER JOIN rt0 ON (((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((vt1.c0))))AND(rt0.c1)))OR(((((NULL)OR(rt0.c1)))AND(rt0.c4)))) WHERE ((vt1.c0 IN (((rt0.c4) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (((rt0.c4) NOTNULL)))) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN rt0 ON (((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((vt1.c0))))AND(rt0.c1)))OR(((((NULL)OR(rt0.c1)))AND(rt0.c4)))));
SELECT * FROM vt1, t0 LEFT OUTER JOIN rt0 ON (((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((vt1.c0))))AND(rt0.c1)))OR(((((NULL)OR(rt0.c1)))AND(rt0.c4)))) WHERE ((vt1.c0 IN (((rt0.c4) NOTNULL))));
SELECT ALL COUNT(*) FROM t0 WHERE (LTRIM(NULL)) ORDER BY (- (((t0.c72)>>(t0.c72))))  NULLS LAST, CASE WHEN ((x'76df') IS FALSE) THEN (t0.c72 IN (t0.c72)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LTRIM(NULL)) IS TRUE)  as count FROM t0 ORDER BY (- (((t0.c72)>>(t0.c72))))  NULLS LAST, CASE WHEN ((x'76df') IS FALSE) THEN (t0.c72 IN (t0.c72)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (LTRIM(NULL)) ORDER BY (- (((t0.c72)>>(t0.c72))))  NULLS LAST, CASE WHEN ((x'76df') IS FALSE) THEN (t0.c72 IN (t0.c72)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LTRIM(NULL)) IS TRUE)  as count FROM t0 ORDER BY (- (((t0.c72)>>(t0.c72))))  NULLS LAST, CASE WHEN ((x'76df') IS FALSE) THEN (t0.c72 IN (t0.c72)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (LTRIM(NULL)) ORDER BY (- (((t0.c72)>>(t0.c72))))  NULLS LAST, CASE WHEN ((x'76df') IS FALSE) THEN (t0.c72 IN (t0.c72)) END DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (((((((t0.c72)AND(t0.c72)))OR(t0.c72)))==((- (t0.c72))))) ORDER BY (((t0.c72))<((t0.c72)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c72)AND(t0.c72)))OR(t0.c72)))==((- (t0.c72))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c72))<((t0.c72))));
SELECT * FROM t0 WHERE (((((((t0.c72)AND(t0.c72)))OR(t0.c72)))==((- (t0.c72))))) ORDER BY (((t0.c72))<((t0.c72)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c72)AND(t0.c72)))OR(t0.c72)))==((- (t0.c72))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c72))<((t0.c72))));
SELECT * FROM t0 WHERE (((((((t0.c72)AND(t0.c72)))OR(t0.c72)))==((- (t0.c72))))) ORDER BY (((t0.c72))<((t0.c72)));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, t0, rt0 WHERE (CASE WHEN (((rt0.c2, rt0.c3, rt0.c2))>((rt0.c3, rt0.c3, vt1.c1))) THEN vt1.c0 WHEN -5.41388996E8 THEN (('-1309621160') NOT BETWEEN (1.692890312E9) AND (vt1.c1)) WHEN CAST(t0.c72 AS NUMERIC) THEN rt0.c4 COLLATE RTRIM WHEN x'e27e' THEN '' WHEN json_remove(vt1.c1, t0.c72, vt1.c1, vt1.c1) THEN ((0.6059585113633978) NOT BETWEEN (vt1.c1) AND (rt0.c2)) ELSE NULL END) ORDER BY CAST(((-1.244730735E9)IS(rt0.c0)) AS REAL), LOWER(CAST(rt0.c2 AS INTEGER))  NULLS LAST, (((rt0.c3)) BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((rt0.c3))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2, rt0.c3, rt0.c2))>((rt0.c3, rt0.c3, vt1.c1))) THEN vt1.c0 WHEN -5.41388996E8 THEN (('-1309621160') NOT BETWEEN (1.692890312E9) AND (vt1.c1)) WHEN CAST(t0.c72 AS NUMERIC) THEN rt0.c4 COLLATE RTRIM WHEN x'e27e' THEN '' WHEN json_remove(vt1.c1, t0.c72, vt1.c1, vt1.c1) THEN ((0.6059585113633978) NOT BETWEEN (vt1.c1) AND (rt0.c2)) ELSE NULL END) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY CAST(((-1.244730735E9)IS(rt0.c0)) AS REAL), LOWER(CAST(rt0.c2 AS INTEGER))  NULLS LAST, (((rt0.c3)) BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((rt0.c3))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, t0, rt0 WHERE (CASE WHEN (((rt0.c2, rt0.c3, rt0.c2))>((rt0.c3, rt0.c3, vt1.c1))) THEN vt1.c0 WHEN -5.41388996E8 THEN (('-1309621160') NOT BETWEEN (1.692890312E9) AND (vt1.c1)) WHEN CAST(t0.c72 AS NUMERIC) THEN rt0.c4 COLLATE RTRIM WHEN x'e27e' THEN '' WHEN json_remove(vt1.c1, t0.c72, vt1.c1, vt1.c1) THEN ((0.6059585113633978) NOT BETWEEN (vt1.c1) AND (rt0.c2)) ELSE NULL END) ORDER BY CAST(((-1.244730735E9)IS(rt0.c0)) AS REAL), LOWER(CAST(rt0.c2 AS INTEGER))  NULLS LAST, (((rt0.c3)) BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((rt0.c3))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2, rt0.c3, rt0.c2))>((rt0.c3, rt0.c3, vt1.c1))) THEN vt1.c0 WHEN -5.41388996E8 THEN (('-1309621160') NOT BETWEEN (1.692890312E9) AND (vt1.c1)) WHEN CAST(t0.c72 AS NUMERIC) THEN rt0.c4 COLLATE RTRIM WHEN x'e27e' THEN '' WHEN json_remove(vt1.c1, t0.c72, vt1.c1, vt1.c1) THEN ((0.6059585113633978) NOT BETWEEN (vt1.c1) AND (rt0.c2)) ELSE NULL END) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY CAST(((-1.244730735E9)IS(rt0.c0)) AS REAL), LOWER(CAST(rt0.c2 AS INTEGER))  NULLS LAST, (((rt0.c3)) BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((rt0.c3))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, t0, rt0 WHERE (CASE WHEN (((rt0.c2, rt0.c3, rt0.c2))>((rt0.c3, rt0.c3, vt1.c1))) THEN vt1.c0 WHEN -5.41388996E8 THEN (('-1309621160') NOT BETWEEN (1.692890312E9) AND (vt1.c1)) WHEN CAST(t0.c72 AS NUMERIC) THEN rt0.c4 COLLATE RTRIM WHEN x'e27e' THEN '' WHEN json_remove(vt1.c1, t0.c72, vt1.c1, vt1.c1) THEN ((0.6059585113633978) NOT BETWEEN (vt1.c1) AND (rt0.c2)) ELSE NULL END) ORDER BY CAST(((-1.244730735E9)IS(rt0.c0)) AS REAL), LOWER(CAST(rt0.c2 AS INTEGER))  NULLS LAST, (((rt0.c3)) BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((rt0.c3))) DESC  NULLS FIRST;
SELECT * FROM rt0, t0 WHERE (HEX(rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((HEX(rt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (HEX(rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((HEX(rt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (HEX(rt0.c1 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (t0.c72);
SELECT SUM(count) FROM (SELECT ALL ((t0.c72) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (t0.c72);
SELECT SUM(count) FROM (SELECT ALL ((t0.c72) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (t0.c72);
SELECT ALL * FROM vt1, t0, rt0 WHERE (CAST(vt1.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS REAL)) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL * FROM vt1, t0, rt0 WHERE (CAST(vt1.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS REAL)) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL * FROM vt1, t0, rt0 WHERE (CAST(vt1.c0 AS REAL));
SELECT ALL COUNT(*) FROM t0, vt1 NATURAL JOIN rt0 WHERE ('') ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, vt1 NATURAL JOIN rt0 ORDER BY x'' DESC);
SELECT ALL COUNT(*) FROM t0, vt1 NATURAL JOIN rt0 WHERE ('') ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, vt1 NATURAL JOIN rt0 ORDER BY x'' DESC);
SELECT ALL COUNT(*) FROM t0, vt1 NATURAL JOIN rt0 WHERE ('') ORDER BY x'' DESC;
SELECT ALL * FROM vt1, t0 WHERE (((t0.c72 COLLATE NOCASE) IS TRUE)) ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END THEN NULL COLLATE NOCASE ELSE (((t0.c72, t0.c72, 2.146060312E9)) NOT BETWEEN ((vt1.c0, t0.c72, vt1.c1)) AND ((vt1.c1, vt1.c0, vt1.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c72 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END THEN NULL COLLATE NOCASE ELSE (((t0.c72, t0.c72, 2.146060312E9)) NOT BETWEEN ((vt1.c0, t0.c72, vt1.c1)) AND ((vt1.c1, vt1.c0, vt1.c0))) END  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE (((t0.c72 COLLATE NOCASE) IS TRUE)) ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END THEN NULL COLLATE NOCASE ELSE (((t0.c72, t0.c72, 2.146060312E9)) NOT BETWEEN ((vt1.c0, t0.c72, vt1.c1)) AND ((vt1.c1, vt1.c0, vt1.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c72 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END THEN NULL COLLATE NOCASE ELSE (((t0.c72, t0.c72, 2.146060312E9)) NOT BETWEEN ((vt1.c0, t0.c72, vt1.c1)) AND ((vt1.c1, vt1.c0, vt1.c0))) END  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE (((t0.c72 COLLATE NOCASE) IS TRUE)) ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END THEN NULL COLLATE NOCASE ELSE (((t0.c72, t0.c72, 2.146060312E9)) NOT BETWEEN ((vt1.c0, t0.c72, vt1.c1)) AND ((vt1.c1, vt1.c0, vt1.c0))) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS TEXT)) BETWEEN (((rt0.c3) IS TRUE)) AND (CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS TEXT)) BETWEEN (((rt0.c3) IS TRUE)) AND (CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS TEXT)) BETWEEN (((rt0.c3) IS TRUE)) AND (CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS TEXT)) BETWEEN (((rt0.c3) IS TRUE)) AND (CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS TEXT)) BETWEEN (((rt0.c3) IS TRUE)) AND (CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END)));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CAST(vt1.c1 AS REAL)) BETWEEN (((rt0.c0) IS FALSE)) AND ('' COLLATE RTRIM))) ORDER BY '953200406';
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS REAL)) BETWEEN (((rt0.c0) IS FALSE)) AND ('' COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1 ORDER BY '953200406');
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CAST(vt1.c1 AS REAL)) BETWEEN (((rt0.c0) IS FALSE)) AND ('' COLLATE RTRIM))) ORDER BY '953200406';
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS REAL)) BETWEEN (((rt0.c0) IS FALSE)) AND ('' COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1 ORDER BY '953200406');
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CAST(vt1.c1 AS REAL)) BETWEEN (((rt0.c0) IS FALSE)) AND ('' COLLATE RTRIM))) ORDER BY '953200406';
SELECT * FROM t0, vt1 WHERE (CASE WHEN (vt1.c1 IN (vt1.c0)) THEN (t0.c72 IN ()) WHEN t0.c72 COLLATE BINARY THEN MAX(vt1.c1, '', vt1.c0, vt1.c1) WHEN ((t0.c72)IS(vt1.c0)) THEN ((vt1.c1) BETWEEN (vt1.c1) AND (0xffffffffeeab356a)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c1 IN (vt1.c0)) THEN (t0.c72 IN ()) WHEN t0.c72 COLLATE BINARY THEN MAX(vt1.c1, '', vt1.c0, vt1.c1) WHEN ((t0.c72)IS(vt1.c0)) THEN ((vt1.c1) BETWEEN (vt1.c1) AND (0Xffffffffeeab356a)) END) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (CASE WHEN (vt1.c1 IN (vt1.c0)) THEN (t0.c72 IN ()) WHEN t0.c72 COLLATE BINARY THEN MAX(vt1.c1, '', vt1.c0, vt1.c1) WHEN ((t0.c72)IS(vt1.c0)) THEN ((vt1.c1) BETWEEN (vt1.c1) AND (0xffffffffeeab356a)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c1 IN (vt1.c0)) THEN (t0.c72 IN ()) WHEN t0.c72 COLLATE BINARY THEN MAX(vt1.c1, '', vt1.c0, vt1.c1) WHEN ((t0.c72)IS(vt1.c0)) THEN ((vt1.c1) BETWEEN (vt1.c1) AND (0Xffffffffeeab356a)) END) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (CASE WHEN (vt1.c1 IN (vt1.c0)) THEN (t0.c72 IN ()) WHEN t0.c72 COLLATE BINARY THEN MAX(vt1.c1, '', vt1.c0, vt1.c1) WHEN ((t0.c72)IS(vt1.c0)) THEN ((vt1.c1) BETWEEN (vt1.c1) AND (0xffffffffeeab356a)) END);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (0.9853511124163753);
SELECT SUM(count) FROM (SELECT ((0.9853511124163753) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (0.9853511124163753);
SELECT SUM(count) FROM (SELECT ((0.9853511124163753) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (0.9853511124163753);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((((((rt0.c0)*(rt0.c1)))OR(TRIM(DISTINCT vt1.c1))))AND(((vt1.c1)==(rt0.c3)))) CROSS JOIN t0 ON (vt1.c1 IN (NULL, rt0.c0)) COLLATE RTRIM WHERE (((((((((((((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END)AND(rt0.c0)))OR(rt0.c0)))OR((((rt0.c2, rt0.c2, vt1.c0, rt0.c2, rt0.c0)) BETWEEN ((vt1.c1, '', rt0.c2, rt0.c4, rt0.c3)) AND ((rt0.c4, t0.c72, rt0.c2, vt1.c0, rt0.c4))))))AND(((rt0.c0)=(rt0.c0)))))AND(((((((((rt0.c4)OR(t0.c72)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))))AND(json_object(rt0.c1, vt1.c1)))) ORDER BY json(CASE rt0.c0  WHEN t0.c72 THEN rt0.c2 END) ASC  NULLS FIRST, (((rt0.c1 IN ()))GLOB(((((NULL)AND(vt1.c0)))AND(vt1.c1))))  NULLS LAST, (((7.78545287E8 IN ())) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END)AND(rt0.c0)))OR(rt0.c0)))OR((((rt0.c2, rt0.c2, vt1.c0, rt0.c2, rt0.c0)) BETWEEN ((vt1.c1, '', rt0.c2, rt0.c4, rt0.c3)) AND ((rt0.c4, t0.c72, rt0.c2, vt1.c0, rt0.c4))))))AND(((rt0.c0)==(rt0.c0)))))AND(((((((((rt0.c4)OR(t0.c72)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))))AND(json_object(rt0.c1, vt1.c1)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((((rt0.c0)*(rt0.c1)))OR(TRIM(DISTINCT vt1.c1))))AND(((vt1.c1)==(rt0.c3)))) CROSS JOIN t0 ON (vt1.c1 IN (NULL, rt0.c0)) COLLATE RTRIM ORDER BY json(CASE rt0.c0  WHEN t0.c72 THEN rt0.c2 END) ASC  NULLS FIRST, (((rt0.c1 IN ()))GLOB(((((NULL)AND(vt1.c0)))AND(vt1.c1))))  NULLS LAST, (((7.78545287E8 IN ())) IS TRUE) ASC);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((((((rt0.c0)*(rt0.c1)))OR(TRIM(DISTINCT vt1.c1))))AND(((vt1.c1)==(rt0.c3)))) CROSS JOIN t0 ON (vt1.c1 IN (NULL, rt0.c0)) COLLATE RTRIM WHERE (((((((((((((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END)AND(rt0.c0)))OR(rt0.c0)))OR((((rt0.c2, rt0.c2, vt1.c0, rt0.c2, rt0.c0)) BETWEEN ((vt1.c1, '', rt0.c2, rt0.c4, rt0.c3)) AND ((rt0.c4, t0.c72, rt0.c2, vt1.c0, rt0.c4))))))AND(((rt0.c0)=(rt0.c0)))))AND(((((((((rt0.c4)OR(t0.c72)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))))AND(json_object(rt0.c1, vt1.c1)))) ORDER BY json(CASE rt0.c0  WHEN t0.c72 THEN rt0.c2 END) ASC  NULLS FIRST, (((rt0.c1 IN ()))GLOB(((((NULL)AND(vt1.c0)))AND(vt1.c1))))  NULLS LAST, (((7.78545287E8 IN ())) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END)AND(rt0.c0)))OR(rt0.c0)))OR((((rt0.c2, rt0.c2, vt1.c0, rt0.c2, rt0.c0)) BETWEEN ((vt1.c1, '', rt0.c2, rt0.c4, rt0.c3)) AND ((rt0.c4, t0.c72, rt0.c2, vt1.c0, rt0.c4))))))AND(((rt0.c0)==(rt0.c0)))))AND(((((((((rt0.c4)OR(t0.c72)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))))AND(json_object(rt0.c1, vt1.c1)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((((rt0.c0)*(rt0.c1)))OR(TRIM(DISTINCT vt1.c1))))AND(((vt1.c1)==(rt0.c3)))) CROSS JOIN t0 ON (vt1.c1 IN (NULL, rt0.c0)) COLLATE RTRIM ORDER BY json(CASE rt0.c0  WHEN t0.c72 THEN rt0.c2 END) ASC  NULLS FIRST, (((rt0.c1 IN ()))GLOB(((((NULL)AND(vt1.c0)))AND(vt1.c1))))  NULLS LAST, (((7.78545287E8 IN ())) IS TRUE) ASC);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((((((rt0.c0)*(rt0.c1)))OR(TRIM(DISTINCT vt1.c1))))AND(((vt1.c1)==(rt0.c3)))) CROSS JOIN t0 ON (vt1.c1 IN (NULL, rt0.c0)) COLLATE RTRIM WHERE (((((((((((((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END)AND(rt0.c0)))OR(rt0.c0)))OR((((rt0.c2, rt0.c2, vt1.c0, rt0.c2, rt0.c0)) BETWEEN ((vt1.c1, '', rt0.c2, rt0.c4, rt0.c3)) AND ((rt0.c4, t0.c72, rt0.c2, vt1.c0, rt0.c4))))))AND(((rt0.c0)=(rt0.c0)))))AND(((((((((rt0.c4)OR(t0.c72)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))))AND(json_object(rt0.c1, vt1.c1)))) ORDER BY json(CASE rt0.c0  WHEN t0.c72 THEN rt0.c2 END) ASC  NULLS FIRST, (((rt0.c1 IN ()))GLOB(((((NULL)AND(vt1.c0)))AND(vt1.c1))))  NULLS LAST, (((7.78545287E8 IN ())) IS TRUE) ASC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END)<(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END)<(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END)<(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END)<(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END)<(((rt0.c2) ISNULL))));
SELECT COUNT(*) FROM vt1 WHERE (0X4c091b6e) ORDER BY ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) DESC  NULLS FIRST, ((LENGTH(vt1.c1)) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0X4c091b6e) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) DESC  NULLS FIRST, ((LENGTH(vt1.c1)) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (0X4c091b6e) ORDER BY ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) DESC  NULLS FIRST, ((LENGTH(vt1.c1)) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0X4c091b6e) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) DESC  NULLS FIRST, ((LENGTH(vt1.c1)) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (0X4c091b6e) ORDER BY ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) DESC  NULLS FIRST, ((LENGTH(vt1.c1)) NOTNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE ((((((- (rt0.c2)))OR(CAST(t0.c72 AS NUMERIC))))AND(((t0.c72) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt0.c2)))OR(CAST(t0.c72 AS NUMERIC))))AND(((t0.c72) NOT NULL)))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE ((((((- (rt0.c2)))OR(CAST(t0.c72 AS NUMERIC))))AND(((t0.c72) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt0.c2)))OR(CAST(t0.c72 AS NUMERIC))))AND(((t0.c72) NOT NULL)))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE ((((((- (rt0.c2)))OR(CAST(t0.c72 AS NUMERIC))))AND(((t0.c72) NOT NULL))));
SELECT ALL * FROM rt0, vt1 NOT INDEXED WHERE (((CAST(rt0.c0 AS REAL)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS REAL)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 NOT INDEXED WHERE (((CAST(rt0.c0 AS REAL)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS REAL)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 NOT INDEXED WHERE (((CAST(rt0.c0 AS REAL)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (rt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON ((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))OR(NULL)))AND(t0.c72)) COLLATE NOCASE WHERE (((t0.c72 COLLATE NOCASE)>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (CASE t0.c72  WHEN vt1.c1 THEN t0.c72 WHEN vt1.c0 THEN t0.c72 WHEN vt1.c1 THEN vt1.c1 END IN (CASE WHEN t0.c72 THEN vt1.c0 WHEN t0.c72 THEN t0.c72 WHEN vt1.c1 THEN '2\n' ELSE vt1.c1 END));
SELECT SUM(count) FROM (SELECT ((((t0.c72 COLLATE NOCASE)>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))OR(NULL)))AND(t0.c72)) COLLATE NOCASE ORDER BY (CASE t0.c72  WHEN vt1.c1 THEN t0.c72 WHEN vt1.c0 THEN t0.c72 WHEN vt1.c1 THEN vt1.c1 END IN (CASE WHEN t0.c72 THEN vt1.c0 WHEN t0.c72 THEN t0.c72 WHEN vt1.c1 THEN '2\n' ELSE vt1.c1 END)));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON ((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))OR(NULL)))AND(t0.c72)) COLLATE NOCASE WHERE (((t0.c72 COLLATE NOCASE)>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (CASE t0.c72  WHEN vt1.c1 THEN t0.c72 WHEN vt1.c0 THEN t0.c72 WHEN vt1.c1 THEN vt1.c1 END IN (CASE WHEN t0.c72 THEN vt1.c0 WHEN t0.c72 THEN t0.c72 WHEN vt1.c1 THEN '2\n' ELSE vt1.c1 END));
SELECT SUM(count) FROM (SELECT ((((t0.c72 COLLATE NOCASE)>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))OR(NULL)))AND(t0.c72)) COLLATE NOCASE ORDER BY (CASE t0.c72  WHEN vt1.c1 THEN t0.c72 WHEN vt1.c0 THEN t0.c72 WHEN vt1.c1 THEN vt1.c1 END IN (CASE WHEN t0.c72 THEN vt1.c0 WHEN t0.c72 THEN t0.c72 WHEN vt1.c1 THEN '2\n' ELSE vt1.c1 END)));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON ((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))OR(NULL)))AND(t0.c72)) COLLATE NOCASE WHERE (((t0.c72 COLLATE NOCASE)>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (CASE t0.c72  WHEN vt1.c1 THEN t0.c72 WHEN vt1.c0 THEN t0.c72 WHEN vt1.c1 THEN vt1.c1 END IN (CASE WHEN t0.c72 THEN vt1.c0 WHEN t0.c72 THEN t0.c72 WHEN vt1.c1 THEN '2\n' ELSE vt1.c1 END));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN (((((rt0.c1))!=((rt0.c0))))) AND ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 END)))) ORDER BY (((((NOT (rt0.c4)))AND(rt0.c2)))OR(((x'')*(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN (((((rt0.c1))<>((rt0.c0))))) AND ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 END)))) IS TRUE)  as count FROM rt0 ORDER BY (((((NOT (rt0.c4)))AND(rt0.c2)))OR(((x'')*(rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN (((((rt0.c1))!=((rt0.c0))))) AND ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 END)))) ORDER BY (((((NOT (rt0.c4)))AND(rt0.c2)))OR(((x'')*(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN (((((rt0.c1))<>((rt0.c0))))) AND ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 END)))) IS TRUE)  as count FROM rt0 ORDER BY (((((NOT (rt0.c4)))AND(rt0.c2)))OR(((x'')*(rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN (((((rt0.c1))!=((rt0.c0))))) AND ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 END)))) ORDER BY (((((NOT (rt0.c4)))AND(rt0.c2)))OR(((x'')*(rt0.c1))));
SELECT * FROM vt1 WHERE (((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) IN (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) IN (x''))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) IN (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) IN (x''))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) IN (x'')));
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c72))) NOT BETWEEN (((t0.c72)LIKE(t0.c72))) AND (((t0.c72) BETWEEN (t0.c72) AND (NULL))))) ORDER BY (((t0.c72 IN ())) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c72))) NOT BETWEEN (((t0.c72)LIKE(t0.c72))) AND (((t0.c72) BETWEEN (t0.c72) AND (NULL))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c72 IN ())) ISNULL) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c72))) NOT BETWEEN (((t0.c72)LIKE(t0.c72))) AND (((t0.c72) BETWEEN (t0.c72) AND (NULL))))) ORDER BY (((t0.c72 IN ())) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c72))) NOT BETWEEN (((t0.c72)LIKE(t0.c72))) AND (((t0.c72) BETWEEN (t0.c72) AND (NULL))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c72 IN ())) ISNULL) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c72))) NOT BETWEEN (((t0.c72)LIKE(t0.c72))) AND (((t0.c72) BETWEEN (t0.c72) AND (NULL))))) ORDER BY (((t0.c72 IN ())) ISNULL) DESC;
SELECT * FROM vt1, t0 WHERE (CAST((~ (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (CAST((~ (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (CAST((~ (vt1.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt1 WHERE (((('1766038473', vt1.c1, vt1.c1)) BETWEEN ((vt1.c0, (vt1.c0 IN ()), ((vt1.c0)<>(vt1.c0)))) AND ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END, LOWER(DISTINCT vt1.c0), ((vt1.c1)<(vt1.c0)))))) ORDER BY vt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((('1766038473', vt1.c1, vt1.c1)) BETWEEN ((vt1.c0, (vt1.c0 IN ()), ((vt1.c0)<>(vt1.c0)))) AND ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END, LOWER(DISTINCT vt1.c0), ((vt1.c1)<(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((('1766038473', vt1.c1, vt1.c1)) BETWEEN ((vt1.c0, (vt1.c0 IN ()), ((vt1.c0)<>(vt1.c0)))) AND ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END, LOWER(DISTINCT vt1.c0), ((vt1.c1)<(vt1.c0)))))) ORDER BY vt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((('1766038473', vt1.c1, vt1.c1)) BETWEEN ((vt1.c0, (vt1.c0 IN ()), ((vt1.c0)<>(vt1.c0)))) AND ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END, LOWER(DISTINCT vt1.c0), ((vt1.c1)<(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((('1766038473', vt1.c1, vt1.c1)) BETWEEN ((vt1.c0, (vt1.c0 IN ()), ((vt1.c0)<>(vt1.c0)))) AND ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END, LOWER(DISTINCT vt1.c0), ((vt1.c1)<(vt1.c0)))))) ORDER BY vt1.c1 DESC;
SELECT ALL * FROM t0, vt1, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))<(CASE WHEN rt0.c2 THEN rt0.c4 ELSE 0xffffffffde94b47a END))) ORDER BY COALESCE((vt1.c0 IN ()), ((rt0.c3) IS FALSE))  NULLS FIRST, ((((highlight(vt1.c1, vt1.c1, x'f7ba', rt0.c4))AND(CASE WHEN rt0.c0 THEN t0.c72 ELSE rt0.c1 END)))AND(((vt1.c0)||(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))<(CASE WHEN rt0.c2 THEN rt0.c4 ELSE 0Xffffffffde94b47a END))) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY COALESCE((vt1.c0 IN ()), ((rt0.c3) IS FALSE))  NULLS FIRST, ((((highlight(vt1.c1, vt1.c1, x'f7ba', rt0.c4))AND(CASE WHEN rt0.c0 THEN t0.c72 ELSE rt0.c1 END)))AND(((vt1.c0)||(rt0.c1))))  NULLS LAST);
SELECT ALL * FROM t0, vt1, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))<(CASE WHEN rt0.c2 THEN rt0.c4 ELSE 0xffffffffde94b47a END))) ORDER BY COALESCE((vt1.c0 IN ()), ((rt0.c3) IS FALSE))  NULLS FIRST, ((((highlight(vt1.c1, vt1.c1, x'f7ba', rt0.c4))AND(CASE WHEN rt0.c0 THEN t0.c72 ELSE rt0.c1 END)))AND(((vt1.c0)||(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))<(CASE WHEN rt0.c2 THEN rt0.c4 ELSE 0Xffffffffde94b47a END))) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY COALESCE((vt1.c0 IN ()), ((rt0.c3) IS FALSE))  NULLS FIRST, ((((highlight(vt1.c1, vt1.c1, x'f7ba', rt0.c4))AND(CASE WHEN rt0.c0 THEN t0.c72 ELSE rt0.c1 END)))AND(((vt1.c0)||(rt0.c1))))  NULLS LAST);
SELECT ALL * FROM t0, vt1, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))<(CASE WHEN rt0.c2 THEN rt0.c4 ELSE 0xffffffffde94b47a END))) ORDER BY COALESCE((vt1.c0 IN ()), ((rt0.c3) IS FALSE))  NULLS FIRST, ((((highlight(vt1.c1, vt1.c1, x'f7ba', rt0.c4))AND(CASE WHEN rt0.c0 THEN t0.c72 ELSE rt0.c1 END)))AND(((vt1.c0)||(rt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE ('-827403903') ORDER BY ('-1252821512' IN (((((rt0.c4)OR(x'')))OR(t0.c72)), '-1992937201'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-827403903') IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ('-1252821512' IN (((((rt0.c4)OR(x'')))OR(t0.c72)), '-1992937201'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE ('-827403903') ORDER BY ('-1252821512' IN (((((rt0.c4)OR(x'')))OR(t0.c72)), '-1992937201'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-827403903') IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ('-1252821512' IN (((((rt0.c4)OR(x'')))OR(t0.c72)), '-1992937201'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE ('-827403903') ORDER BY ('-1252821512' IN (((((rt0.c4)OR(x'')))OR(t0.c72)), '-1992937201'))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))%(vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))%(vt1.c1))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))%(vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))%(vt1.c1))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))%(vt1.c1)));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON rt0.c4 INNER JOIN vt1 ON UPPER(DISTINCT rt0.c4) WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON rt0.c4 INNER JOIN vt1 ON UPPER(DISTINCT rt0.c4));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON rt0.c4 INNER JOIN vt1 ON UPPER(DISTINCT rt0.c4) WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON rt0.c4 INNER JOIN vt1 ON UPPER(DISTINCT rt0.c4));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON rt0.c4 INNER JOIN vt1 ON UPPER(DISTINCT rt0.c4) WHERE (LAST_INSERT_ROWID());
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)IS NOT(rt0.c2)) AS INTEGER) WHERE (CASE WHEN (rt0.c2 IN (rt0.c0, rt0.c4)) THEN ((rt0.c2)&(rt0.c0)) WHEN rt0.c2 THEN (~ (rt0.c0)) WHEN ((rt0.c4) IS FALSE) THEN '-1194035763' ELSE JULIANDAY(rt0.c1, rt0.c2, rt0.c3) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c2 IN (rt0.c0, rt0.c4)) THEN ((rt0.c2)&(rt0.c0)) WHEN rt0.c2 THEN (~ (rt0.c0)) WHEN ((rt0.c4) IS FALSE) THEN '-1194035763' ELSE JULIANDAY(rt0.c1, rt0.c2, rt0.c3) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)IS NOT(rt0.c2)) AS INTEGER));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)IS NOT(rt0.c2)) AS INTEGER) WHERE (CASE WHEN (rt0.c2 IN (rt0.c0, rt0.c4)) THEN ((rt0.c2)&(rt0.c0)) WHEN rt0.c2 THEN (~ (rt0.c0)) WHEN ((rt0.c4) IS FALSE) THEN '-1194035763' ELSE JULIANDAY(rt0.c1, rt0.c2, rt0.c3) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c2 IN (rt0.c0, rt0.c4)) THEN ((rt0.c2)&(rt0.c0)) WHEN rt0.c2 THEN (~ (rt0.c0)) WHEN ((rt0.c4) IS FALSE) THEN '-1194035763' ELSE JULIANDAY(rt0.c1, rt0.c2, rt0.c3) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)IS NOT(rt0.c2)) AS INTEGER));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)IS NOT(rt0.c2)) AS INTEGER) WHERE (CASE WHEN (rt0.c2 IN (rt0.c0, rt0.c4)) THEN ((rt0.c2)&(rt0.c0)) WHEN rt0.c2 THEN (~ (rt0.c0)) WHEN ((rt0.c4) IS FALSE) THEN '-1194035763' ELSE JULIANDAY(rt0.c1, rt0.c2, rt0.c3) END);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE ((~ ((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))) ORDER BY CAST('' COLLATE BINARY AS REAL);
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY CAST('' COLLATE BINARY AS REAL));
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE ((~ ((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))) ORDER BY CAST('' COLLATE BINARY AS REAL);
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY CAST('' COLLATE BINARY AS REAL));
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE ((~ ((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))) ORDER BY CAST('' COLLATE BINARY AS REAL);
SELECT ALL COUNT(*) FROM t0 WHERE ('') ORDER BY CASE (((t0.c72))<=(('0.5601157596039938')))  WHEN t0.c72 THEN ((t0.c72)>(t0.c72)) WHEN (NOT (t0.c72)) THEN CASE t0.c72  WHEN t0.c72 THEN t0.c72 END WHEN (((t0.c72))==((t0.c72))) THEN (((t0.c72))==((t0.c72))) ELSE CAST(NULL AS BLOB) END ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0 ORDER BY CASE (((t0.c72))<=(('0.5601157596039938')))  WHEN t0.c72 THEN ((t0.c72)>(t0.c72)) WHEN (NOT (t0.c72)) THEN CASE t0.c72  WHEN t0.c72 THEN t0.c72 END WHEN (((t0.c72))==((t0.c72))) THEN (((t0.c72))==((t0.c72))) ELSE CAST(NULL AS BLOB) END ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ('') ORDER BY CASE (((t0.c72))<=(('0.5601157596039938')))  WHEN t0.c72 THEN ((t0.c72)>(t0.c72)) WHEN (NOT (t0.c72)) THEN CASE t0.c72  WHEN t0.c72 THEN t0.c72 END WHEN (((t0.c72))==((t0.c72))) THEN (((t0.c72))==((t0.c72))) ELSE CAST(NULL AS BLOB) END ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0 ORDER BY CASE (((t0.c72))<=(('0.5601157596039938')))  WHEN t0.c72 THEN ((t0.c72)>(t0.c72)) WHEN (NOT (t0.c72)) THEN CASE t0.c72  WHEN t0.c72 THEN t0.c72 END WHEN (((t0.c72))==((t0.c72))) THEN (((t0.c72))==((t0.c72))) ELSE CAST(NULL AS BLOB) END ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ('') ORDER BY CASE (((t0.c72))<=(('0.5601157596039938')))  WHEN t0.c72 THEN ((t0.c72)>(t0.c72)) WHEN (NOT (t0.c72)) THEN CASE t0.c72  WHEN t0.c72 THEN t0.c72 END WHEN (((t0.c72))==((t0.c72))) THEN (((t0.c72))==((t0.c72))) ELSE CAST(NULL AS BLOB) END ASC;
SELECT ALL * FROM rt0, vt1 WHERE (CAST(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)) AS BLOB)) ORDER BY (((('\n<ŨNDy')AND(rt0.c1 COLLATE NOCASE)))AND(LIKELY(DISTINCT vt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((('\n<ŨNDy')AND(rt0.c1 COLLATE NOCASE)))AND(LIKELY(DISTINCT vt1.c1))) DESC);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)) AS BLOB)) ORDER BY (((('\n<ŨNDy')AND(rt0.c1 COLLATE NOCASE)))AND(LIKELY(DISTINCT vt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((('\n<ŨNDy')AND(rt0.c1 COLLATE NOCASE)))AND(LIKELY(DISTINCT vt1.c1))) DESC);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)) AS BLOB)) ORDER BY (((('\n<ŨNDy')AND(rt0.c1 COLLATE NOCASE)))AND(LIKELY(DISTINCT vt1.c1))) DESC;
SELECT ALL * FROM rt0 WHERE (((rt0.c1) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1) NOT NULL) COLLATE NOCASE);
SELECT * FROM t0 WHERE (((((t0.c72)%(t0.c72)))OR(SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c72)%(t0.c72)))OR(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c72)%(t0.c72)))OR(SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c72)%(t0.c72)))OR(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c72)%(t0.c72)))OR(SQLITE_SOURCE_ID())));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c72))<=((t0.c72))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t0.c72))<=((t0.c72))) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c72))<=((t0.c72))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t0.c72))<=((t0.c72))) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c72))<=((t0.c72))) COLLATE RTRIM);
SELECT ALL * FROM t0, vt1, rt0 WHERE ((CASE rt0.c0  WHEN '' THEN rt0.c4 ELSE vt1.c1 END IN ())) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c0  WHEN '' THEN rt0.c4 ELSE vt1.c1 END IN ())) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL * FROM t0, vt1, rt0 WHERE ((CASE rt0.c0  WHEN '' THEN rt0.c4 ELSE vt1.c1 END IN ())) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c0  WHEN '' THEN rt0.c4 ELSE vt1.c1 END IN ())) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL * FROM t0, vt1, rt0 WHERE ((CASE rt0.c0  WHEN '' THEN rt0.c4 ELSE vt1.c1 END IN ())) ORDER BY vt1.c0  NULLS FIRST;
SELECT ALL * FROM rt0, vt1 NOT INDEXED WHERE (NULL) ORDER BY (((((rt0.c1))<>((vt1.c0))))OR(((rt0.c4) IS TRUE))) ASC  NULLS LAST, (((rt0.c2)*(-1617484225)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c1))!=((vt1.c0))))OR(((rt0.c4) IS TRUE))) ASC  NULLS LAST, (((rt0.c2)*(-1617484225)) IN ())  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 NOT INDEXED WHERE (NULL) ORDER BY (((((rt0.c1))<>((vt1.c0))))OR(((rt0.c4) IS TRUE))) ASC  NULLS LAST, (((rt0.c2)*(-1617484225)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c1))!=((vt1.c0))))OR(((rt0.c4) IS TRUE))) ASC  NULLS LAST, (((rt0.c2)*(-1617484225)) IN ())  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 NOT INDEXED WHERE (NULL) ORDER BY (((((rt0.c1))<>((vt1.c0))))OR(((rt0.c4) IS TRUE))) ASC  NULLS LAST, (((rt0.c2)*(-1617484225)) IN ())  NULLS FIRST;
SELECT * FROM vt1 WHERE (CASE WHEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c1, vt1.c0, vt1.c0))) THEN CASE WHEN vt1.c0 THEN 0.7078376903036369 END ELSE (vt1.c0 IN ()) END) ORDER BY (vt1.c0 COLLATE NOCASE IN ()), (((vt1.c0)) BETWEEN ((CASE WHEN 0.030379049562016425 THEN vt1.c0 ELSE vt1.c1 END)) AND ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c1, vt1.c0, vt1.c0))) THEN CASE WHEN vt1.c0 THEN 0.7078376903036369 END ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 COLLATE NOCASE IN ()), (((vt1.c0)) BETWEEN ((CASE WHEN 0.030379049562016425 THEN vt1.c0 ELSE vt1.c1 END)) AND ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))  NULLS LAST);
SELECT * FROM vt1 WHERE (CASE WHEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c1, vt1.c0, vt1.c0))) THEN CASE WHEN vt1.c0 THEN 0.7078376903036369 END ELSE (vt1.c0 IN ()) END) ORDER BY (vt1.c0 COLLATE NOCASE IN ()), (((vt1.c0)) BETWEEN ((CASE WHEN 0.030379049562016425 THEN vt1.c0 ELSE vt1.c1 END)) AND ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c1, vt1.c0, vt1.c0))) THEN CASE WHEN vt1.c0 THEN 0.7078376903036369 END ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 COLLATE NOCASE IN ()), (((vt1.c0)) BETWEEN ((CASE WHEN 0.030379049562016425 THEN vt1.c0 ELSE vt1.c1 END)) AND ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))  NULLS LAST);
SELECT * FROM vt1 WHERE (CASE WHEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c1, vt1.c0, vt1.c0))) THEN CASE WHEN vt1.c0 THEN 0.7078376903036369 END ELSE (vt1.c0 IN ()) END) ORDER BY (vt1.c0 COLLATE NOCASE IN ()), (((vt1.c0)) BETWEEN ((CASE WHEN 0.030379049562016425 THEN vt1.c0 ELSE vt1.c1 END)) AND ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))  NULLS LAST;
SELECT * FROM t0, rt0, vt1 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT * FROM t0, rt0, vt1 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT * FROM t0, rt0, vt1 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (vt1.c0))) IS FALSE));
SELECT * FROM vt1 WHERE (((x'56a2')!=(((vt1.c0)-(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'56a2')<>(((vt1.c0)-(NULL))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((x'56a2')!=(((vt1.c0)-(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'56a2')<>(((vt1.c0)-(NULL))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((x'56a2')!=(((vt1.c0)-(NULL)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (UPPER(((rt0.c4)>=(rt0.c2)))) ORDER BY ((((x'') NOT BETWEEN (rt0.c2) AND (vt1.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((rt0.c4)>=(rt0.c2)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((x'') NOT BETWEEN (rt0.c2) AND (vt1.c0))) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (UPPER(((rt0.c4)>=(rt0.c2)))) ORDER BY ((((x'') NOT BETWEEN (rt0.c2) AND (vt1.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((rt0.c4)>=(rt0.c2)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((x'') NOT BETWEEN (rt0.c2) AND (vt1.c0))) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (UPPER(((rt0.c4)>=(rt0.c2)))) ORDER BY ((((x'') NOT BETWEEN (rt0.c2) AND (vt1.c0))) NOT NULL) ASC;
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON (((t0.c72) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ()) WHERE ((CASE WHEN t0.c72 THEN t0.c72 END IN (((t0.c72)LIKE(vt1.c0))))) ORDER BY (((vt1.c0)||(vt1.c1)) IN (((vt1.c1)AND(vt1.c1)), (((vt1.c1))!=((vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c72 THEN t0.c72 END IN (((t0.c72)LIKE(vt1.c0))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON (((t0.c72) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ()) ORDER BY (((vt1.c0)||(vt1.c1)) IN (((vt1.c1)AND(vt1.c1)), (((vt1.c1))<>((vt1.c1))))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON (((t0.c72) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ()) WHERE ((CASE WHEN t0.c72 THEN t0.c72 END IN (((t0.c72)LIKE(vt1.c0))))) ORDER BY (((vt1.c0)||(vt1.c1)) IN (((vt1.c1)AND(vt1.c1)), (((vt1.c1))!=((vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c72 THEN t0.c72 END IN (((t0.c72)LIKE(vt1.c0))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON (((t0.c72) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ()) ORDER BY (((vt1.c0)||(vt1.c1)) IN (((vt1.c1)AND(vt1.c1)), (((vt1.c1))<>((vt1.c1))))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON (((t0.c72) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ()) WHERE ((CASE WHEN t0.c72 THEN t0.c72 END IN (((t0.c72)LIKE(vt1.c0))))) ORDER BY (((vt1.c0)||(vt1.c1)) IN (((vt1.c1)AND(vt1.c1)), (((vt1.c1))!=((vt1.c1)))));
SELECT ALL * FROM t0 WHERE ((- (((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72))))) ORDER BY (((t0.c72)) BETWEEN ((CASE WHEN 1368148419 THEN t0.c72 END)) AND ((((x'718a6c29029f')AND(t0.c72)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c72)) BETWEEN ((CASE WHEN 1368148419 THEN t0.c72 END)) AND ((((x'718a6c29029f')AND(t0.c72)))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((- (((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72))))) ORDER BY (((t0.c72)) BETWEEN ((CASE WHEN 1368148419 THEN t0.c72 END)) AND ((((x'718a6c29029f')AND(t0.c72)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c72)) BETWEEN ((CASE WHEN 1368148419 THEN t0.c72 END)) AND ((((x'718a6c29029f')AND(t0.c72)))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((- (((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72))))) ORDER BY (((t0.c72)) BETWEEN ((CASE WHEN 1368148419 THEN t0.c72 END)) AND ((((x'718a6c29029f')AND(t0.c72)))))  NULLS LAST;
SELECT * FROM t0 WHERE (((NULL) BETWEEN (((t0.c72) BETWEEN (t0.c72) AND (t0.c72))) AND (((((t0.c72)OR(t0.c72)))AND(t0.c72)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (((t0.c72) BETWEEN (t0.c72) AND (t0.c72))) AND (((((t0.c72)OR(t0.c72)))AND(t0.c72))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((NULL) BETWEEN (((t0.c72) BETWEEN (t0.c72) AND (t0.c72))) AND (((((t0.c72)OR(t0.c72)))AND(t0.c72)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (((t0.c72) BETWEEN (t0.c72) AND (t0.c72))) AND (((((t0.c72)OR(t0.c72)))AND(t0.c72))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((NULL) BETWEEN (((t0.c72) BETWEEN (t0.c72) AND (t0.c72))) AND (((((t0.c72)OR(t0.c72)))AND(t0.c72)))));
SELECT COUNT(*) FROM vt1, t0 RIGHT OUTER JOIN rt0 ON ((rt0.c3) IS FALSE) WHERE ((((~ (rt0.c3))) NOT NULL)) ORDER BY (vt1.c1 IN (vt1.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c3))) NOT NULL)) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN rt0 ON ((rt0.c3) IS FALSE) ORDER BY (vt1.c1 IN (vt1.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt1, t0 RIGHT OUTER JOIN rt0 ON ((rt0.c3) IS FALSE) WHERE ((((~ (rt0.c3))) NOT NULL)) ORDER BY (vt1.c1 IN (vt1.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c3))) NOT NULL)) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN rt0 ON ((rt0.c3) IS FALSE) ORDER BY (vt1.c1 IN (vt1.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt1, t0 RIGHT OUTER JOIN rt0 ON ((rt0.c3) IS FALSE) WHERE ((((~ (rt0.c3))) NOT NULL)) ORDER BY (vt1.c1 IN (vt1.c0)) COLLATE RTRIM ASC;
SELECT * FROM t0 CROSS JOIN vt1 ON NULL WHERE (('945552730' IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((('945552730' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON NULL);
SELECT * FROM t0 CROSS JOIN vt1 ON NULL WHERE (('945552730' IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((('945552730' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON NULL);
SELECT * FROM t0 CROSS JOIN vt1 ON NULL WHERE (('945552730' IN ()) COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (CAST(IFNULL(t0.c72, t0.c72) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(t0.c72, t0.c72) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(IFNULL(t0.c72, t0.c72) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(t0.c72, t0.c72) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(IFNULL(t0.c72, t0.c72) AS TEXT));
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT ((t0.c72 IN ())))) ORDER BY (+ (((((((((t0.c72)OR(t0.c72)))OR(t0.c72)))OR(t0.c72)))OR(t0.c72)))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((t0.c72 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (+ (((((((((t0.c72)OR(t0.c72)))OR(t0.c72)))OR(t0.c72)))OR(t0.c72)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT ((t0.c72 IN ())))) ORDER BY (+ (((((((((t0.c72)OR(t0.c72)))OR(t0.c72)))OR(t0.c72)))OR(t0.c72)))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((t0.c72 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (+ (((((((((t0.c72)OR(t0.c72)))OR(t0.c72)))OR(t0.c72)))OR(t0.c72)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT ((t0.c72 IN ())))) ORDER BY (+ (((((((((t0.c72)OR(t0.c72)))OR(t0.c72)))OR(t0.c72)))OR(t0.c72)))) ASC;
SELECT * FROM rt0, vt1 WHERE ((- (((((vt1.c0)OR(rt0.c3)))OR(rt0.c4))))) ORDER BY x'fa1613e1'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((((vt1.c0)OR(rt0.c3)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY x'fa1613e1'  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE ((- (((((vt1.c0)OR(rt0.c3)))OR(rt0.c4))))) ORDER BY x'fa1613e1'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((((vt1.c0)OR(rt0.c3)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY x'fa1613e1'  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE ((- (((((vt1.c0)OR(rt0.c3)))OR(rt0.c4))))) ORDER BY x'fa1613e1'  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE (((0.7142933817599839) NOT BETWEEN ((~ (x''))) AND (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c4))))) ORDER BY HEX(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))AND(x'')))OR(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((0.7142933817599839) NOT BETWEEN ((~ (x''))) AND (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c4))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY HEX(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))AND(x'')))OR(rt0.c3))));
SELECT ALL * FROM vt1, rt0 WHERE (((0.7142933817599839) NOT BETWEEN ((~ (x''))) AND (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c4))))) ORDER BY HEX(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))AND(x'')))OR(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((0.7142933817599839) NOT BETWEEN ((~ (x''))) AND (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c4))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY HEX(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))AND(x'')))OR(rt0.c3))));
SELECT ALL * FROM vt1, rt0 WHERE (((0.7142933817599839) NOT BETWEEN ((~ (x''))) AND (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c4))))) ORDER BY HEX(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))AND(x'')))OR(rt0.c3)));
SELECT ALL * FROM vt1, rt0, t0 WHERE (((+ (rt0.c3)) IN ())) ORDER BY (((((vt1.c1)IS(rt0.c1))))>(((((rt0.c3))<=((vt1.c0)))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c3)) IN ())) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY (((((vt1.c1)IS(rt0.c1))))>(((((rt0.c3))<=((vt1.c0)))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, t0 WHERE (((+ (rt0.c3)) IN ())) ORDER BY (((((vt1.c1)IS(rt0.c1))))>(((((rt0.c3))<=((vt1.c0)))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c3)) IN ())) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY (((((vt1.c1)IS(rt0.c1))))>(((((rt0.c3))<=((vt1.c0)))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, t0 WHERE (((+ (rt0.c3)) IN ())) ORDER BY (((((vt1.c1)IS(rt0.c1))))>(((((rt0.c3))<=((vt1.c0)))))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))-(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))-(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))-(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))-(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))-(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((x'')GLOB(('j_tR YQ%z' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')GLOB(('j_tR YQ%z' IN ())))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((x'')GLOB(('j_tR YQ%z' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')GLOB(('j_tR YQ%z' IN ())))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((x'')GLOB(('j_tR YQ%z' IN ()))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN rt0.c1 THEN rt0.c2 WHEN t0.c72 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN vt1.c1 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END AS BLOB) FULL OUTER JOIN vt1 ON ((vt1.c1) IS TRUE) COLLATE BINARY WHERE (CAST(((((vt1.c0)AND(rt0.c3)))OR(rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)AND(rt0.c3)))OR(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN rt0.c1 THEN rt0.c2 WHEN t0.c72 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN vt1.c1 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END AS BLOB) FULL OUTER JOIN vt1 ON ((vt1.c1) IS TRUE) COLLATE BINARY);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN rt0.c1 THEN rt0.c2 WHEN t0.c72 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN vt1.c1 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END AS BLOB) FULL OUTER JOIN vt1 ON ((vt1.c1) IS TRUE) COLLATE BINARY WHERE (CAST(((((vt1.c0)AND(rt0.c3)))OR(rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)AND(rt0.c3)))OR(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN rt0.c1 THEN rt0.c2 WHEN t0.c72 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN vt1.c1 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END AS BLOB) FULL OUTER JOIN vt1 ON ((vt1.c1) IS TRUE) COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((+ (((x'2faf') BETWEEN (vt1.c1) AND (t0.c72))))) ORDER BY LIKELIHOOD(vt1.c1 COLLATE NOCASE, 0.712458480015396) ASC  NULLS LAST, ((CASE vt1.c1  WHEN t0.c72 THEN t0.c72 END) BETWEEN (((t0.c72) NOTNULL)) AND (((vt1.c0)OR(vt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((x'2faf') BETWEEN (vt1.c1) AND (t0.c72))))) IS TRUE)  as count FROM t0, vt1 ORDER BY LIKELIHOOD(vt1.c1 COLLATE NOCASE, 0.712458480015396) ASC  NULLS LAST, ((CASE vt1.c1  WHEN t0.c72 THEN t0.c72 END) BETWEEN (((t0.c72) NOTNULL)) AND (((vt1.c0)OR(vt1.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((+ (((x'2faf') BETWEEN (vt1.c1) AND (t0.c72))))) ORDER BY LIKELIHOOD(vt1.c1 COLLATE NOCASE, 0.712458480015396) ASC  NULLS LAST, ((CASE vt1.c1  WHEN t0.c72 THEN t0.c72 END) BETWEEN (((t0.c72) NOTNULL)) AND (((vt1.c0)OR(vt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((x'2faf') BETWEEN (vt1.c1) AND (t0.c72))))) IS TRUE)  as count FROM t0, vt1 ORDER BY LIKELIHOOD(vt1.c1 COLLATE NOCASE, 0.712458480015396) ASC  NULLS LAST, ((CASE vt1.c1  WHEN t0.c72 THEN t0.c72 END) BETWEEN (((t0.c72) NOTNULL)) AND (((vt1.c0)OR(vt1.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((+ (((x'2faf') BETWEEN (vt1.c1) AND (t0.c72))))) ORDER BY LIKELIHOOD(vt1.c1 COLLATE NOCASE, 0.712458480015396) ASC  NULLS LAST, ((CASE vt1.c1  WHEN t0.c72 THEN t0.c72 END) BETWEEN (((t0.c72) NOTNULL)) AND (((vt1.c0)OR(vt1.c1)))) DESC  NULLS LAST;
SELECT * FROM vt1, t0, rt0 WHERE (((((((vt1.c1) IS TRUE))AND(CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 END)))AND(((((rt0.c0)OR(0.6212742496610958)))OR(rt0.c4))))) ORDER BY CASE (vt1.c1 IN ())  WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END THEN ((t0.c72)-(t0.c72)) END;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1) IS TRUE))AND(CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 END)))AND(((((rt0.c0)OR(0.6212742496610958)))OR(rt0.c4))))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY CASE (vt1.c1 IN ())  WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END THEN ((t0.c72)-(t0.c72)) END);
SELECT * FROM vt1, t0, rt0 WHERE (((((((vt1.c1) IS TRUE))AND(CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 END)))AND(((((rt0.c0)OR(0.6212742496610958)))OR(rt0.c4))))) ORDER BY CASE (vt1.c1 IN ())  WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END THEN ((t0.c72)-(t0.c72)) END;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1) IS TRUE))AND(CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 END)))AND(((((rt0.c0)OR(0.6212742496610958)))OR(rt0.c4))))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY CASE (vt1.c1 IN ())  WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END THEN ((t0.c72)-(t0.c72)) END);
SELECT * FROM vt1, t0, rt0 WHERE (((((((vt1.c1) IS TRUE))AND(CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 END)))AND(((((rt0.c0)OR(0.6212742496610958)))OR(rt0.c4))))) ORDER BY CASE (vt1.c1 IN ())  WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END THEN ((t0.c72)-(t0.c72)) END;
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((((rt0.c3)!=(0.3322566510015078))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((((rt0.c3)<>(0.3322566510015078)))))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((((rt0.c3)!=(0.3322566510015078))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((((rt0.c3)<>(0.3322566510015078)))))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((((rt0.c3)!=(0.3322566510015078))))));
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN t0 ON (- (CAST(t0.c72 AS INTEGER))) WHERE (((((rt0.c0) IS FALSE))-(((((((((rt0.c0)OR(vt1.c1)))OR(rt0.c2)))OR('&䍄録u?')))AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE))-(((((((((rt0.c0)OR(vt1.c1)))OR(rt0.c2)))OR('&䍄録u?')))AND(vt1.c1))))) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0 LEFT OUTER JOIN t0 ON (- (CAST(t0.c72 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN t0 ON (- (CAST(t0.c72 AS INTEGER))) WHERE (((((rt0.c0) IS FALSE))-(((((((((rt0.c0)OR(vt1.c1)))OR(rt0.c2)))OR('&䍄録u?')))AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE))-(((((((((rt0.c0)OR(vt1.c1)))OR(rt0.c2)))OR('&䍄録u?')))AND(vt1.c1))))) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0 LEFT OUTER JOIN t0 ON (- (CAST(t0.c72 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN t0 ON (- (CAST(t0.c72 AS INTEGER))) WHERE (((((rt0.c0) IS FALSE))-(((((((((rt0.c0)OR(vt1.c1)))OR(rt0.c2)))OR('&䍄録u?')))AND(vt1.c1)))));
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN t0.c72 ELSE vt1.c0 END THEN ((t0.c72)!=(rt0.c0)) ELSE ((rt0.c0)GLOB(rt0.c3)) END) ORDER BY ((((t0.c72) NOT NULL)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c1 THEN t0.c72 ELSE vt1.c0 END THEN ((t0.c72)<>(rt0.c0)) ELSE ((rt0.c0)GLOB(rt0.c3)) END) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((((t0.c72) NOT NULL)) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN t0.c72 ELSE vt1.c0 END THEN ((t0.c72)!=(rt0.c0)) ELSE ((rt0.c0)GLOB(rt0.c3)) END) ORDER BY ((((t0.c72) NOT NULL)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c1 THEN t0.c72 ELSE vt1.c0 END THEN ((t0.c72)<>(rt0.c0)) ELSE ((rt0.c0)GLOB(rt0.c3)) END) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((((t0.c72) NOT NULL)) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN t0.c72 ELSE vt1.c0 END THEN ((t0.c72)!=(rt0.c0)) ELSE ((rt0.c0)GLOB(rt0.c3)) END) ORDER BY ((((t0.c72) NOT NULL)) ISNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (CAST(rt0.c1 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS TEXT)) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (CAST(rt0.c1 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS TEXT)) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (CAST(rt0.c1 AS TEXT));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((t0.c72) NOT BETWEEN ('阽j{''lIxH') AND (vt1.c1)) COLLATE RTRIM) ORDER BY (UNLIKELY(DISTINCT vt1.c1) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c72) NOT BETWEEN ('阽j{''lIxH') AND (vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1 ORDER BY (UNLIKELY(DISTINCT vt1.c1) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((t0.c72) NOT BETWEEN ('阽j{''lIxH') AND (vt1.c1)) COLLATE RTRIM) ORDER BY (UNLIKELY(DISTINCT vt1.c1) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c72) NOT BETWEEN ('阽j{''lIxH') AND (vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1 ORDER BY (UNLIKELY(DISTINCT vt1.c1) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((t0.c72) NOT BETWEEN ('阽j{''lIxH') AND (vt1.c1)) COLLATE RTRIM) ORDER BY (UNLIKELY(DISTINCT vt1.c1) IN ())  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 CROSS JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC))||((- ('0.27636239878374924')))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC))||((- ('0.27636239878374924')))));
SELECT ALL * FROM vt1, rt0 CROSS JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC))||((- ('0.27636239878374924')))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC))||((- ('0.27636239878374924')))));
SELECT ALL * FROM vt1, rt0 CROSS JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC))||((- ('0.27636239878374924')))) WHERE (NULL);
SELECT * FROM vt1 WHERE ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) IN (HEX(DISTINCT vt1.c1), CAST(vt1.c0 AS REAL)))) ORDER BY (- (((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c1))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) IN (HEX(DISTINCT vt1.c1), CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY (- (((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c1)))));
SELECT * FROM vt1 WHERE ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) IN (HEX(DISTINCT vt1.c1), CAST(vt1.c0 AS REAL)))) ORDER BY (- (((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c1))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) IN (HEX(DISTINCT vt1.c1), CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY (- (((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c1)))));
SELECT * FROM vt1 WHERE ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) IN (HEX(DISTINCT vt1.c1), CAST(vt1.c0 AS REAL)))) ORDER BY (- (((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c1))));
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c4)>=(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((rt0.c4)>=(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c4)>=(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((rt0.c4)>=(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c4)>=(rt0.c2 COLLATE BINARY)));
SELECT * FROM rt0 WHERE (((((rt0.c3)AND((((rt0.c2))>=((rt0.c2))))))OR(((rt0.c0)-(rt0.c1))))) ORDER BY (((- (rt0.c1)))AND((('479312618')|(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)AND((((rt0.c2))>=((rt0.c2))))))OR(((rt0.c0)-(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((- (rt0.c1)))AND((('479312618')|(rt0.c3)))));
SELECT * FROM rt0 WHERE (((((rt0.c3)AND((((rt0.c2))>=((rt0.c2))))))OR(((rt0.c0)-(rt0.c1))))) ORDER BY (((- (rt0.c1)))AND((('479312618')|(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)AND((((rt0.c2))>=((rt0.c2))))))OR(((rt0.c0)-(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((- (rt0.c1)))AND((('479312618')|(rt0.c3)))));
SELECT * FROM rt0 WHERE (((((rt0.c3)AND((((rt0.c2))>=((rt0.c2))))))OR(((rt0.c0)-(rt0.c1))))) ORDER BY (((- (rt0.c1)))AND((('479312618')|(rt0.c3))));
SELECT * FROM t0 WHERE (((((t0.c72 COLLATE RTRIM)AND(t0.c72)))AND((((t0.c72, t0.c72, t0.c72)) BETWEEN ((t0.c72, t0.c72, t0.c72)) AND ((t0.c72, t0.c72, t0.c72)))))) ORDER BY CASE CAST(t0.c72 AS TEXT)  WHEN t0.c72 THEN t0.c72 ELSE (((t0.c72))>=((t0.c72))) END ASC  NULLS LAST, CAST(((t0.c72)<<(t0.c72)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c72 COLLATE RTRIM)AND(t0.c72)))AND((((t0.c72, t0.c72, t0.c72)) BETWEEN ((t0.c72, t0.c72, t0.c72)) AND ((t0.c72, t0.c72, t0.c72)))))) IS TRUE)  as count FROM t0 ORDER BY CASE CAST(t0.c72 AS TEXT)  WHEN t0.c72 THEN t0.c72 ELSE (((t0.c72))>=((t0.c72))) END ASC  NULLS LAST, CAST(((t0.c72)<<(t0.c72)) AS INTEGER) ASC);
SELECT * FROM t0 WHERE (((((t0.c72 COLLATE RTRIM)AND(t0.c72)))AND((((t0.c72, t0.c72, t0.c72)) BETWEEN ((t0.c72, t0.c72, t0.c72)) AND ((t0.c72, t0.c72, t0.c72)))))) ORDER BY CASE CAST(t0.c72 AS TEXT)  WHEN t0.c72 THEN t0.c72 ELSE (((t0.c72))>=((t0.c72))) END ASC  NULLS LAST, CAST(((t0.c72)<<(t0.c72)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c72 COLLATE RTRIM)AND(t0.c72)))AND((((t0.c72, t0.c72, t0.c72)) BETWEEN ((t0.c72, t0.c72, t0.c72)) AND ((t0.c72, t0.c72, t0.c72)))))) IS TRUE)  as count FROM t0 ORDER BY CASE CAST(t0.c72 AS TEXT)  WHEN t0.c72 THEN t0.c72 ELSE (((t0.c72))>=((t0.c72))) END ASC  NULLS LAST, CAST(((t0.c72)<<(t0.c72)) AS INTEGER) ASC);
SELECT * FROM t0 WHERE (((((t0.c72 COLLATE RTRIM)AND(t0.c72)))AND((((t0.c72, t0.c72, t0.c72)) BETWEEN ((t0.c72, t0.c72, t0.c72)) AND ((t0.c72, t0.c72, t0.c72)))))) ORDER BY CASE CAST(t0.c72 AS TEXT)  WHEN t0.c72 THEN t0.c72 ELSE (((t0.c72))>=((t0.c72))) END ASC  NULLS LAST, CAST(((t0.c72)<<(t0.c72)) AS INTEGER) ASC;
SELECT * FROM vt1, rt0 INNER JOIN t0 ON ((((((x'b935'))<((rt0.c4)))))!=(((t0.c72 IN ())))) WHERE (((vt1.c0) IS FALSE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 INNER JOIN t0 ON ((((((x'b935'))<((rt0.c4)))))!=(((t0.c72 IN ())))));
SELECT * FROM vt1, rt0 INNER JOIN t0 ON ((((((x'b935'))<((rt0.c4)))))!=(((t0.c72 IN ())))) WHERE (((vt1.c0) IS FALSE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 INNER JOIN t0 ON ((((((x'b935'))<((rt0.c4)))))!=(((t0.c72 IN ())))));
SELECT * FROM vt1, rt0 INNER JOIN t0 ON ((((((x'b935'))<((rt0.c4)))))!=(((t0.c72 IN ())))) WHERE (((vt1.c0) IS FALSE) COLLATE RTRIM);
SELECT ALL * FROM t0, vt1, rt0 WHERE (CASE CASE WHEN vt1.c1 THEN rt0.c1 END  WHEN CASE WHEN rt0.c4 THEN vt1.c1 ELSE vt1.c1 END THEN CASE vt1.c0  WHEN vt1.c0 THEN 482828776 END ELSE ((0X7fea4818)|(t0.c72)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt1.c1 THEN rt0.c1 END  WHEN CASE WHEN rt0.c4 THEN vt1.c1 ELSE vt1.c1 END THEN CASE vt1.c0  WHEN vt1.c0 THEN 482828776 END ELSE ((0X7fea4818)|(t0.c72)) END) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE (CASE CASE WHEN vt1.c1 THEN rt0.c1 END  WHEN CASE WHEN rt0.c4 THEN vt1.c1 ELSE vt1.c1 END THEN CASE vt1.c0  WHEN vt1.c0 THEN 482828776 END ELSE ((0X7fea4818)|(t0.c72)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt1.c1 THEN rt0.c1 END  WHEN CASE WHEN rt0.c4 THEN vt1.c1 ELSE vt1.c1 END THEN CASE vt1.c0  WHEN vt1.c0 THEN 482828776 END ELSE ((0X7fea4818)|(t0.c72)) END) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE (CASE CASE WHEN vt1.c1 THEN rt0.c1 END  WHEN CASE WHEN rt0.c4 THEN vt1.c1 ELSE vt1.c1 END THEN CASE vt1.c0  WHEN vt1.c0 THEN 482828776 END ELSE ((0X7fea4818)|(t0.c72)) END);
SELECT ALL * FROM rt0, t0, vt1 WHERE (CASE ((vt1.c0)%(rt0.c1))  WHEN CAST(rt0.c3 AS TEXT) THEN LIKELY(rt0.c3) ELSE ((rt0.c2)+(vt1.c0)) END) ORDER BY ((((((((((vt1.c0)OR(rt0.c3)))AND(rt0.c0)))AND(vt1.c1)))OR(rt0.c2))) IS TRUE)  NULLS LAST, CASE rt0.c3  WHEN 0X71c81a1 THEN vt1.c0 ELSE rt0.c3 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)%(rt0.c1))  WHEN CAST(rt0.c3 AS TEXT) THEN LIKELY(rt0.c3) ELSE ((rt0.c2)+(vt1.c0)) END) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((((((((((vt1.c0)OR(rt0.c3)))AND(rt0.c0)))AND(vt1.c1)))OR(rt0.c2))) IS TRUE)  NULLS LAST, CASE rt0.c3  WHEN 0x71c81a1 THEN vt1.c0 ELSE rt0.c3 END COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt1 WHERE (CASE ((vt1.c0)%(rt0.c1))  WHEN CAST(rt0.c3 AS TEXT) THEN LIKELY(rt0.c3) ELSE ((rt0.c2)+(vt1.c0)) END) ORDER BY ((((((((((vt1.c0)OR(rt0.c3)))AND(rt0.c0)))AND(vt1.c1)))OR(rt0.c2))) IS TRUE)  NULLS LAST, CASE rt0.c3  WHEN 0X71c81a1 THEN vt1.c0 ELSE rt0.c3 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)%(rt0.c1))  WHEN CAST(rt0.c3 AS TEXT) THEN LIKELY(rt0.c3) ELSE ((rt0.c2)+(vt1.c0)) END) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((((((((((vt1.c0)OR(rt0.c3)))AND(rt0.c0)))AND(vt1.c1)))OR(rt0.c2))) IS TRUE)  NULLS LAST, CASE rt0.c3  WHEN 0x71c81a1 THEN vt1.c0 ELSE rt0.c3 END COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt1 WHERE (CASE ((vt1.c0)%(rt0.c1))  WHEN CAST(rt0.c3 AS TEXT) THEN LIKELY(rt0.c3) ELSE ((rt0.c2)+(vt1.c0)) END) ORDER BY ((((((((((vt1.c0)OR(rt0.c3)))AND(rt0.c0)))AND(vt1.c1)))OR(rt0.c2))) IS TRUE)  NULLS LAST, CASE rt0.c3  WHEN 0X71c81a1 THEN vt1.c0 ELSE rt0.c3 END COLLATE BINARY  NULLS LAST;
SELECT * FROM t0 WHERE ((~ (((x'') NOTNULL)))) ORDER BY ((0.6408102956886991)IS((NULL IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((x'') NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((0.6408102956886991)IS((NULL IN ()))) ASC);
SELECT * FROM t0 WHERE ((~ (((x'') NOTNULL)))) ORDER BY ((0.6408102956886991)IS((NULL IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((x'') NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((0.6408102956886991)IS((NULL IN ()))) ASC);
SELECT * FROM t0 WHERE ((~ (((x'') NOTNULL)))) ORDER BY ((0.6408102956886991)IS((NULL IN ()))) ASC;
SELECT * FROM vt1, t0 WHERE ((((((vt1.c1)AND(t0.c72)))OR(vt1.c0)) IN (vt1.c0 COLLATE BINARY, (- (vt1.c1))))) ORDER BY (((((((vt1.c1)) NOT BETWEEN ((t0.c72)) AND ((t0.c72))))OR(CASE WHEN t0.c72 THEN NULL ELSE vt1.c0 END)))AND(vt1.c0));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)AND(t0.c72)))OR(vt1.c0)) IN (vt1.c0 COLLATE BINARY, (- (vt1.c1))))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((((vt1.c1)) NOT BETWEEN ((t0.c72)) AND ((t0.c72))))OR(CASE WHEN t0.c72 THEN NULL ELSE vt1.c0 END)))AND(vt1.c0)));
SELECT * FROM vt1, t0 WHERE ((((((vt1.c1)AND(t0.c72)))OR(vt1.c0)) IN (vt1.c0 COLLATE BINARY, (- (vt1.c1))))) ORDER BY (((((((vt1.c1)) NOT BETWEEN ((t0.c72)) AND ((t0.c72))))OR(CASE WHEN t0.c72 THEN NULL ELSE vt1.c0 END)))AND(vt1.c0));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)AND(t0.c72)))OR(vt1.c0)) IN (vt1.c0 COLLATE BINARY, (- (vt1.c1))))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((((vt1.c1)) NOT BETWEEN ((t0.c72)) AND ((t0.c72))))OR(CASE WHEN t0.c72 THEN NULL ELSE vt1.c0 END)))AND(vt1.c0)));
SELECT * FROM vt1, t0 WHERE ((((((vt1.c1)AND(t0.c72)))OR(vt1.c0)) IN (vt1.c0 COLLATE BINARY, (- (vt1.c1))))) ORDER BY (((((((vt1.c1)) NOT BETWEEN ((t0.c72)) AND ((t0.c72))))OR(CASE WHEN t0.c72 THEN NULL ELSE vt1.c0 END)))AND(vt1.c0));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (IFNULL(CAST(rt0.c0 AS BLOB), CASE WHEN rt0.c2 THEN rt0.c2 ELSE x'' END)) ORDER BY ((((t0.c72)-(x''))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CAST(rt0.c0 AS BLOB), CASE WHEN rt0.c2 THEN rt0.c2 ELSE x'' END)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c72)-(x''))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (IFNULL(CAST(rt0.c0 AS BLOB), CASE WHEN rt0.c2 THEN rt0.c2 ELSE x'' END)) ORDER BY ((((t0.c72)-(x''))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CAST(rt0.c0 AS BLOB), CASE WHEN rt0.c2 THEN rt0.c2 ELSE x'' END)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c72)-(x''))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (IFNULL(CAST(rt0.c0 AS BLOB), CASE WHEN rt0.c2 THEN rt0.c2 ELSE x'' END)) ORDER BY ((((t0.c72)-(x''))) NOTNULL);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((vt1.c0 IN ()))AND(((rt0.c0) NOT NULL))))AND(((rt0.c2)%(rt0.c0))))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))AND(((rt0.c0) NOT NULL))))AND(((rt0.c2)%(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((vt1.c0 IN ()))AND(((rt0.c0) NOT NULL))))AND(((rt0.c2)%(rt0.c0))))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))AND(((rt0.c0) NOT NULL))))AND(((rt0.c2)%(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((vt1.c0 IN ()))AND(((rt0.c0) NOT NULL))))AND(((rt0.c2)%(rt0.c0))))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON '-1252821512' CROSS JOIN t0 ON ((((rt0.c1) NOTNULL)) NOT BETWEEN (((t0.c72) NOTNULL)) AND (CAST(0.12370607481458962 AS REAL))) WHERE (MIN('阽j{''lixh', CASE rt0.c3  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ORDER BY t0.c72 DESC;
SELECT SUM(count) FROM (SELECT ((MIN('阽j{''lixh', CASE rt0.c3  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON '-1252821512' CROSS JOIN t0 ON ((((rt0.c1) NOTNULL)) NOT BETWEEN (((t0.c72) NOTNULL)) AND (CAST(0.12370607481458962 AS REAL))) ORDER BY t0.c72 DESC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON '-1252821512' CROSS JOIN t0 ON ((((rt0.c1) NOTNULL)) NOT BETWEEN (((t0.c72) NOTNULL)) AND (CAST(0.12370607481458962 AS REAL))) WHERE (MIN('阽j{''lixh', CASE rt0.c3  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ORDER BY t0.c72 DESC;
SELECT SUM(count) FROM (SELECT ((MIN('阽j{''lixh', CASE rt0.c3  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON '-1252821512' CROSS JOIN t0 ON ((((rt0.c1) NOTNULL)) NOT BETWEEN (((t0.c72) NOTNULL)) AND (CAST(0.12370607481458962 AS REAL))) ORDER BY t0.c72 DESC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON '-1252821512' CROSS JOIN t0 ON ((((rt0.c1) NOTNULL)) NOT BETWEEN (((t0.c72) NOTNULL)) AND (CAST(0.12370607481458962 AS REAL))) WHERE (MIN('阽j{''lixh', CASE rt0.c3  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ORDER BY t0.c72 DESC;
SELECT * FROM rt0, t0 WHERE ((+ ((+ (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (rt0.c4))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((+ ((+ (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (rt0.c4))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((+ ((+ (rt0.c4)))));
SELECT ALL * FROM vt1, t0 WHERE (t0.c72) ORDER BY (((t0.c72, t0.c72, '-1992937201')) NOT BETWEEN ((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)), vt1.c1, (NOT (t0.c72)))) AND (((((t0.c72))=((t0.c72))), (NOT (t0.c72)), ((vt1.c0)+(t0.c72)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c72) IS TRUE)  as count FROM vt1, t0 ORDER BY (((t0.c72, t0.c72, '-1992937201')) NOT BETWEEN ((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)), vt1.c1, (NOT (t0.c72)))) AND (((((t0.c72))=((t0.c72))), (NOT (t0.c72)), ((vt1.c0)+(t0.c72)))))  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE (t0.c72) ORDER BY (((t0.c72, t0.c72, '-1992937201')) NOT BETWEEN ((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)), vt1.c1, (NOT (t0.c72)))) AND (((((t0.c72))=((t0.c72))), (NOT (t0.c72)), ((vt1.c0)+(t0.c72)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c72) IS TRUE)  as count FROM vt1, t0 ORDER BY (((t0.c72, t0.c72, '-1992937201')) NOT BETWEEN ((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)), vt1.c1, (NOT (t0.c72)))) AND (((((t0.c72))=((t0.c72))), (NOT (t0.c72)), ((vt1.c0)+(t0.c72)))))  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE (t0.c72) ORDER BY (((t0.c72, t0.c72, '-1992937201')) NOT BETWEEN ((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)), vt1.c1, (NOT (t0.c72)))) AND (((((t0.c72))=((t0.c72))), (NOT (t0.c72)), ((vt1.c0)+(t0.c72)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (0.2314357367030606) ORDER BY 'mOxS54|' COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.2314357367030606) IS TRUE)  as count FROM rt0, t0 ORDER BY 'mOxS54|' COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (0.2314357367030606) ORDER BY 'mOxS54|' COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.2314357367030606) IS TRUE)  as count FROM rt0, t0 ORDER BY 'mOxS54|' COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (0.2314357367030606) ORDER BY 'mOxS54|' COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE ('479312618');
SELECT SUM(count) FROM (SELECT (('479312618') IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE ('479312618');
SELECT SUM(count) FROM (SELECT (('479312618') IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE ('479312618');
SELECT ALL COUNT(*) FROM t0 WHERE (((((TRIM(DISTINCT t0.c72, t0.c72))OR(((NULL)<>(t0.c72)))))OR(LIKELIHOOD(t0.c72, 0.268026357029413)))) ORDER BY ((t0.c72) NOTNULL) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT t0.c72, t0.c72))OR(((NULL)!=(t0.c72)))))OR(LIKELIHOOD(t0.c72, 0.268026357029413)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c72) NOTNULL) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((TRIM(DISTINCT t0.c72, t0.c72))OR(((NULL)<>(t0.c72)))))OR(LIKELIHOOD(t0.c72, 0.268026357029413)))) ORDER BY ((t0.c72) NOTNULL) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT t0.c72, t0.c72))OR(((NULL)!=(t0.c72)))))OR(LIKELIHOOD(t0.c72, 0.268026357029413)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c72) NOTNULL) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((TRIM(DISTINCT t0.c72, t0.c72))OR(((NULL)<>(t0.c72)))))OR(LIKELIHOOD(t0.c72, 0.268026357029413)))) ORDER BY ((t0.c72) NOTNULL) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT NULL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(((t0.c72) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c72) IS TRUE) AS REAL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(((t0.c72) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c72) IS TRUE) AS REAL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(((t0.c72) IS TRUE) AS REAL));
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c0) NOT NULL)))>(((((vt1.c1, vt1.c1, t0.c72)) BETWEEN ((vt1.c0, x'', t0.c72)) AND ((NULL, t0.c72, vt1.c1))))))) ORDER BY (((vt1.c1, vt1.c1, vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((((t0.c72)==(vt1.c0)), vt1.c0, (((x''))>((t0.c72))), CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END, t0.c72)) AND ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) NOTNULL), STRFTIME(t0.c72, vt1.c0, vt1.c0), CAST(vt1.c0 AS REAL), CASE WHEN '953200406' THEN vt1.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) NOT NULL)))>(((((vt1.c1, vt1.c1, t0.c72)) BETWEEN ((vt1.c0, x'', t0.c72)) AND ((NULL, t0.c72, vt1.c1))))))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((vt1.c1, vt1.c1, vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((((t0.c72)==(vt1.c0)), vt1.c0, (((x''))>((t0.c72))), CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END, t0.c72)) AND ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) NOTNULL), STRFTIME(t0.c72, vt1.c0, vt1.c0), CAST(vt1.c0 AS REAL), CASE WHEN '953200406' THEN vt1.c0 END)))  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c0) NOT NULL)))>(((((vt1.c1, vt1.c1, t0.c72)) BETWEEN ((vt1.c0, x'', t0.c72)) AND ((NULL, t0.c72, vt1.c1))))))) ORDER BY (((vt1.c1, vt1.c1, vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((((t0.c72)==(vt1.c0)), vt1.c0, (((x''))>((t0.c72))), CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END, t0.c72)) AND ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) NOTNULL), STRFTIME(t0.c72, vt1.c0, vt1.c0), CAST(vt1.c0 AS REAL), CASE WHEN '953200406' THEN vt1.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) NOT NULL)))>(((((vt1.c1, vt1.c1, t0.c72)) BETWEEN ((vt1.c0, x'', t0.c72)) AND ((NULL, t0.c72, vt1.c1))))))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((vt1.c1, vt1.c1, vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((((t0.c72)==(vt1.c0)), vt1.c0, (((x''))>((t0.c72))), CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END, t0.c72)) AND ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) NOTNULL), STRFTIME(t0.c72, vt1.c0, vt1.c0), CAST(vt1.c0 AS REAL), CASE WHEN '953200406' THEN vt1.c0 END)))  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c0) NOT NULL)))>(((((vt1.c1, vt1.c1, t0.c72)) BETWEEN ((vt1.c0, x'', t0.c72)) AND ((NULL, t0.c72, vt1.c1))))))) ORDER BY (((vt1.c1, vt1.c1, vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((((t0.c72)==(vt1.c0)), vt1.c0, (((x''))>((t0.c72))), CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END, t0.c72)) AND ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) NOTNULL), STRFTIME(t0.c72, vt1.c0, vt1.c0), CAST(vt1.c0 AS REAL), CASE WHEN '953200406' THEN vt1.c0 END)))  NULLS LAST;
SELECT * FROM t0 WHERE ((NOT (t0.c72 COLLATE NOCASE))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c72 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY NULL);
SELECT * FROM t0 WHERE ((NOT (t0.c72 COLLATE NOCASE))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c72 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY NULL);
SELECT * FROM t0 WHERE ((NOT (t0.c72 COLLATE NOCASE))) ORDER BY NULL;
SELECT * FROM vt1, t0 WHERE (CAST((+ (t0.c72)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((+ (t0.c72)) AS REAL)) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (CAST((+ (t0.c72)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((+ (t0.c72)) AS REAL)) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (CAST((+ (t0.c72)) AS REAL));
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE ((- (rt0.c0 COLLATE RTRIM))) ORDER BY ((CASE vt1.c1  WHEN rt0.c2 THEN rt0.c4 ELSE 0x25d85553 END) BETWEEN ((((rt0.c3)) BETWEEN ((t0.c72)) AND ((rt0.c0)))) AND (CASE WHEN rt0.c3 THEN rt0.c3 WHEN t0.c72 THEN rt0.c2 WHEN rt0.c4 THEN t0.c72 ELSE -1112221431 END));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((CASE vt1.c1  WHEN rt0.c2 THEN rt0.c4 ELSE 0x25d85553 END) BETWEEN ((((rt0.c3)) BETWEEN ((t0.c72)) AND ((rt0.c0)))) AND (CASE WHEN rt0.c3 THEN rt0.c3 WHEN t0.c72 THEN rt0.c2 WHEN rt0.c4 THEN t0.c72 ELSE -1112221431 END)));
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE ((- (rt0.c0 COLLATE RTRIM))) ORDER BY ((CASE vt1.c1  WHEN rt0.c2 THEN rt0.c4 ELSE 0x25d85553 END) BETWEEN ((((rt0.c3)) BETWEEN ((t0.c72)) AND ((rt0.c0)))) AND (CASE WHEN rt0.c3 THEN rt0.c3 WHEN t0.c72 THEN rt0.c2 WHEN rt0.c4 THEN t0.c72 ELSE -1112221431 END));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((CASE vt1.c1  WHEN rt0.c2 THEN rt0.c4 ELSE 0x25d85553 END) BETWEEN ((((rt0.c3)) BETWEEN ((t0.c72)) AND ((rt0.c0)))) AND (CASE WHEN rt0.c3 THEN rt0.c3 WHEN t0.c72 THEN rt0.c2 WHEN rt0.c4 THEN t0.c72 ELSE -1112221431 END)));
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE ((- (rt0.c0 COLLATE RTRIM))) ORDER BY ((CASE vt1.c1  WHEN rt0.c2 THEN rt0.c4 ELSE 0x25d85553 END) BETWEEN ((((rt0.c3)) BETWEEN ((t0.c72)) AND ((rt0.c0)))) AND (CASE WHEN rt0.c3 THEN rt0.c3 WHEN t0.c72 THEN rt0.c2 WHEN rt0.c4 THEN t0.c72 ELSE -1112221431 END));
SELECT ALL * FROM t0, rt0 WHERE ('JV');
SELECT SUM(count) FROM (SELECT ALL (('JV') IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ('JV');
SELECT SUM(count) FROM (SELECT ALL (('JV') IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ('JV');
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((CASE WHEN vt1.c1 THEN vt1.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c1 THEN vt1.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c1 END IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((CASE WHEN vt1.c1 THEN vt1.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c1 THEN vt1.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c1 END IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((CASE WHEN vt1.c1 THEN vt1.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c1 END IN ()));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (ROUND(CASE t0.c72  WHEN rt0.c3 THEN rt0.c1 ELSE t0.c72 END, ((rt0.c4) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((ROUND(CASE t0.c72  WHEN rt0.c3 THEN rt0.c1 ELSE t0.c72 END, ((rt0.c4) NOTNULL))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (ROUND(CASE t0.c72  WHEN rt0.c3 THEN rt0.c1 ELSE t0.c72 END, ((rt0.c4) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((ROUND(CASE t0.c72  WHEN rt0.c3 THEN rt0.c1 ELSE t0.c72 END, ((rt0.c4) NOTNULL))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (ROUND(CASE t0.c72  WHEN rt0.c3 THEN rt0.c1 ELSE t0.c72 END, ((rt0.c4) NOTNULL)));
SELECT ALL * FROM t0, rt0 NATURAL JOIN vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt1);
SELECT ALL * FROM t0, rt0 NATURAL JOIN vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt1);
SELECT ALL * FROM t0, rt0 NATURAL JOIN vt1 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2) NOTNULL)) IS TRUE));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c0)<>(t0.c72)), (+ (rt0.c1)), rt0.c1 COLLATE BINARY))!=((((((rt0.c0)AND(rt0.c4)))OR(rt0.c0)), ((1.810842436E9) BETWEEN (rt0.c3) AND (t0.c72)), CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 END))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)<>(t0.c72)), (+ (rt0.c1)), rt0.c1 COLLATE BINARY))<>((((((rt0.c0)AND(rt0.c4)))OR(rt0.c0)), ((1.810842436E9) BETWEEN (rt0.c3) AND (t0.c72)), CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 END)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c0)<>(t0.c72)), (+ (rt0.c1)), rt0.c1 COLLATE BINARY))!=((((((rt0.c0)AND(rt0.c4)))OR(rt0.c0)), ((1.810842436E9) BETWEEN (rt0.c3) AND (t0.c72)), CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 END))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)<>(t0.c72)), (+ (rt0.c1)), rt0.c1 COLLATE BINARY))<>((((((rt0.c0)AND(rt0.c4)))OR(rt0.c0)), ((1.810842436E9) BETWEEN (rt0.c3) AND (t0.c72)), CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 END)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c0)<>(t0.c72)), (+ (rt0.c1)), rt0.c1 COLLATE BINARY))!=((((((rt0.c0)AND(rt0.c4)))OR(rt0.c0)), ((1.810842436E9) BETWEEN (rt0.c3) AND (t0.c72)), CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 END))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((vt1.c0) IS FALSE) COLLATE RTRIM WHERE (((rt0.c1)||((((vt1.c0, rt0.c2, rt0.c2)) BETWEEN ((vt1.c0, rt0.c2, vt1.c0)) AND ((rt0.c0, vt1.c1, rt0.c2)))))) ORDER BY (- (rt0.c1)) ASC  NULLS LAST, ((rt0.c2) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)||((((vt1.c0, rt0.c2, rt0.c2)) BETWEEN ((vt1.c0, rt0.c2, vt1.c0)) AND ((rt0.c0, vt1.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((vt1.c0) IS FALSE) COLLATE RTRIM ORDER BY (- (rt0.c1)) ASC  NULLS LAST, ((rt0.c2) NOT NULL) ASC);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((vt1.c0) IS FALSE) COLLATE RTRIM WHERE (((rt0.c1)||((((vt1.c0, rt0.c2, rt0.c2)) BETWEEN ((vt1.c0, rt0.c2, vt1.c0)) AND ((rt0.c0, vt1.c1, rt0.c2)))))) ORDER BY (- (rt0.c1)) ASC  NULLS LAST, ((rt0.c2) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)||((((vt1.c0, rt0.c2, rt0.c2)) BETWEEN ((vt1.c0, rt0.c2, vt1.c0)) AND ((rt0.c0, vt1.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((vt1.c0) IS FALSE) COLLATE RTRIM ORDER BY (- (rt0.c1)) ASC  NULLS LAST, ((rt0.c2) NOT NULL) ASC);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((vt1.c0) IS FALSE) COLLATE RTRIM WHERE (((rt0.c1)||((((vt1.c0, rt0.c2, rt0.c2)) BETWEEN ((vt1.c0, rt0.c2, vt1.c0)) AND ((rt0.c0, vt1.c1, rt0.c2)))))) ORDER BY (- (rt0.c1)) ASC  NULLS LAST, ((rt0.c2) NOT NULL) ASC;
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN ((rt0.c2) ISNULL) THEN (rt0.c4 IN ()) ELSE CAST(vt1.c0 AS TEXT) END WHERE ((CAST(rt0.c1 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS TEXT) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN ((rt0.c2) ISNULL) THEN (rt0.c4 IN ()) ELSE CAST(vt1.c0 AS TEXT) END);
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN ((rt0.c2) ISNULL) THEN (rt0.c4 IN ()) ELSE CAST(vt1.c0 AS TEXT) END WHERE ((CAST(rt0.c1 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS TEXT) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN ((rt0.c2) ISNULL) THEN (rt0.c4 IN ()) ELSE CAST(vt1.c0 AS TEXT) END);
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN ((rt0.c2) ISNULL) THEN (rt0.c4 IN ()) ELSE CAST(vt1.c0 AS TEXT) END WHERE ((CAST(rt0.c1 AS TEXT) IN ()));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((((vt1.c0) IS TRUE))OR(CASE vt1.c1  WHEN vt1.c0 THEN t0.c72 ELSE vt1.c0 END)))OR(t0.c72 COLLATE RTRIM)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(t0.c72 COLLATE BINARY)) WHERE (((t0.c72)<>(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c72)!=(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((((vt1.c0) IS TRUE))OR(CASE vt1.c1  WHEN vt1.c0 THEN t0.c72 ELSE vt1.c0 END)))OR(t0.c72 COLLATE RTRIM)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(t0.c72 COLLATE BINARY)));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((((vt1.c0) IS TRUE))OR(CASE vt1.c1  WHEN vt1.c0 THEN t0.c72 ELSE vt1.c0 END)))OR(t0.c72 COLLATE RTRIM)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(t0.c72 COLLATE BINARY)) WHERE (((t0.c72)<>(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c72)!=(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((((vt1.c0) IS TRUE))OR(CASE vt1.c1  WHEN vt1.c0 THEN t0.c72 ELSE vt1.c0 END)))OR(t0.c72 COLLATE RTRIM)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(t0.c72 COLLATE BINARY)));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((((vt1.c0) IS TRUE))OR(CASE vt1.c1  WHEN vt1.c0 THEN t0.c72 ELSE vt1.c0 END)))OR(t0.c72 COLLATE RTRIM)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(t0.c72 COLLATE BINARY)) WHERE (((t0.c72)<>(vt1.c0)) COLLATE BINARY);
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (LIKELIHOOD(rt0.c1, 0.8338409221581617) IN ()) WHERE (LIKELY(((NULL) IS FALSE))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))/((- (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((NULL) IS FALSE))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (LIKELIHOOD(rt0.c1, 0.8338409221581617) IN ()) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))/((- (rt0.c1)))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (LIKELIHOOD(rt0.c1, 0.8338409221581617) IN ()) WHERE (LIKELY(((NULL) IS FALSE))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))/((- (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((NULL) IS FALSE))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (LIKELIHOOD(rt0.c1, 0.8338409221581617) IN ()) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))/((- (rt0.c1)))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (LIKELIHOOD(rt0.c1, 0.8338409221581617) IN ()) WHERE (LIKELY(((NULL) IS FALSE))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))/((- (rt0.c1))));
SELECT ALL * FROM t0 WHERE ((((('941481067' IN ()), (NOT (t0.c72)), ((t0.c72)*(t0.c72))))=((LIKE(t0.c72, t0.c72, 'F'), ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)), (t0.c72 IN ()))))) ORDER BY CASE WHEN x'' THEN t0.c72 ELSE t0.c72 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((('941481067' IN ()), (NOT (t0.c72)), ((t0.c72)*(t0.c72))))==((LIKE(t0.c72, t0.c72, 'F'), ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)), (t0.c72 IN ()))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN x'' THEN t0.c72 ELSE t0.c72 END COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE ((((('941481067' IN ()), (NOT (t0.c72)), ((t0.c72)*(t0.c72))))=((LIKE(t0.c72, t0.c72, 'F'), ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)), (t0.c72 IN ()))))) ORDER BY CASE WHEN x'' THEN t0.c72 ELSE t0.c72 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((('941481067' IN ()), (NOT (t0.c72)), ((t0.c72)*(t0.c72))))==((LIKE(t0.c72, t0.c72, 'F'), ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)), (t0.c72 IN ()))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN x'' THEN t0.c72 ELSE t0.c72 END COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE ((((('941481067' IN ()), (NOT (t0.c72)), ((t0.c72)*(t0.c72))))=((LIKE(t0.c72, t0.c72, 'F'), ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)), (t0.c72 IN ()))))) ORDER BY CASE WHEN x'' THEN t0.c72 ELSE t0.c72 END COLLATE NOCASE;
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4) NOT BETWEEN (rt0.c0) AND (x'')) AS NUMERIC)) ORDER BY rt0.c4 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4) NOT BETWEEN (rt0.c0) AND (x'')) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c4 ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4) NOT BETWEEN (rt0.c0) AND (x'')) AS NUMERIC)) ORDER BY rt0.c4 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4) NOT BETWEEN (rt0.c0) AND (x'')) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c4 ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4) NOT BETWEEN (rt0.c0) AND (x'')) AS NUMERIC)) ORDER BY rt0.c4 ASC  NULLS LAST;
SELECT * FROM t0, vt1 WHERE ((((+ (vt1.c0)))*(vt1.c0))) ORDER BY 712685;
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))*(vt1.c0))) IS TRUE)  as count FROM t0, vt1 ORDER BY 712685);
SELECT * FROM t0, vt1 WHERE ((((+ (vt1.c0)))*(vt1.c0))) ORDER BY 712685;
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))*(vt1.c0))) IS TRUE)  as count FROM t0, vt1 ORDER BY 712685);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c0) ORDER BY CASE WHEN TRIM(rt0.c3) THEN ((((((((rt0.c0)AND(rt0.c0)))OR(vt1.c0)))OR(rt0.c2)))OR(rt0.c0)) WHEN ((rt0.c4) NOT BETWEEN (vt1.c1) AND (rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN CAST(rt0.c2 AS BLOB) THEN x'1f26' ELSE (rt0.c0 IN ()) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE WHEN TRIM(rt0.c3) THEN ((((((((rt0.c0)AND(rt0.c0)))OR(vt1.c0)))OR(rt0.c2)))OR(rt0.c0)) WHEN ((rt0.c4) NOT BETWEEN (vt1.c1) AND (rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN CAST(rt0.c2 AS BLOB) THEN x'1f26' ELSE (rt0.c0 IN ()) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c0) ORDER BY CASE WHEN TRIM(rt0.c3) THEN ((((((((rt0.c0)AND(rt0.c0)))OR(vt1.c0)))OR(rt0.c2)))OR(rt0.c0)) WHEN ((rt0.c4) NOT BETWEEN (vt1.c1) AND (rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN CAST(rt0.c2 AS BLOB) THEN x'1f26' ELSE (rt0.c0 IN ()) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE WHEN TRIM(rt0.c3) THEN ((((((((rt0.c0)AND(rt0.c0)))OR(vt1.c0)))OR(rt0.c2)))OR(rt0.c0)) WHEN ((rt0.c4) NOT BETWEEN (vt1.c1) AND (rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN CAST(rt0.c2 AS BLOB) THEN x'1f26' ELSE (rt0.c0 IN ()) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c0) ORDER BY CASE WHEN TRIM(rt0.c3) THEN ((((((((rt0.c0)AND(rt0.c0)))OR(vt1.c0)))OR(rt0.c2)))OR(rt0.c0)) WHEN ((rt0.c4) NOT BETWEEN (vt1.c1) AND (rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END WHEN CAST(rt0.c2 AS BLOB) THEN x'1f26' ELSE (rt0.c0 IN ()) END DESC  NULLS FIRST;
SELECT ALL * FROM t0, vt1, rt0 WHERE (CASE WHEN CAST(vt1.c1 AS NUMERIC) THEN (((rt0.c0))!=((rt0.c3))) ELSE ((((((((rt0.c1)AND(t0.c72)))OR(x'')))OR(t0.c72)))AND(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt1.c1 AS NUMERIC) THEN (((rt0.c0))<>((rt0.c3))) ELSE ((((((((rt0.c1)AND(t0.c72)))OR(x'')))OR(t0.c72)))AND(rt0.c2)) END) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE (CASE WHEN CAST(vt1.c1 AS NUMERIC) THEN (((rt0.c0))!=((rt0.c3))) ELSE ((((((((rt0.c1)AND(t0.c72)))OR(x'')))OR(t0.c72)))AND(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt1.c1 AS NUMERIC) THEN (((rt0.c0))<>((rt0.c3))) ELSE ((((((((rt0.c1)AND(t0.c72)))OR(x'')))OR(t0.c72)))AND(rt0.c2)) END) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE (CASE WHEN CAST(vt1.c1 AS NUMERIC) THEN (((rt0.c0))!=((rt0.c3))) ELSE ((((((((rt0.c1)AND(t0.c72)))OR(x'')))OR(t0.c72)))AND(rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c3) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3) ISNULL) AS TEXT)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c3) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3) ISNULL) AS TEXT)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c3) ISNULL) AS TEXT));
SELECT COUNT(*) FROM t0 WHERE ((((~ (t0.c72))) BETWEEN (((((((((((((t0.c72)AND(0.6627516199110272)))AND(t0.c72)))OR(t0.c72)))AND(t0.c72)))OR(t0.c72)))OR(t0.c72))) AND (1390216543))) ORDER BY ((((CAST(t0.c72 AS NUMERIC))AND(((t0.c72)||(t0.c72)))))AND(t0.c72)) ASC;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c72))) BETWEEN (((((((((((((t0.c72)AND(0.6627516199110272)))AND(t0.c72)))OR(t0.c72)))AND(t0.c72)))OR(t0.c72)))OR(t0.c72))) AND (1390216543))) IS TRUE)  as count FROM t0 ORDER BY ((((CAST(t0.c72 AS NUMERIC))AND(((t0.c72)||(t0.c72)))))AND(t0.c72)) ASC);
SELECT COUNT(*) FROM t0 WHERE ((((~ (t0.c72))) BETWEEN (((((((((((((t0.c72)AND(0.6627516199110272)))AND(t0.c72)))OR(t0.c72)))AND(t0.c72)))OR(t0.c72)))OR(t0.c72))) AND (1390216543))) ORDER BY ((((CAST(t0.c72 AS NUMERIC))AND(((t0.c72)||(t0.c72)))))AND(t0.c72)) ASC;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c72))) BETWEEN (((((((((((((t0.c72)AND(0.6627516199110272)))AND(t0.c72)))OR(t0.c72)))AND(t0.c72)))OR(t0.c72)))OR(t0.c72))) AND (1390216543))) IS TRUE)  as count FROM t0 ORDER BY ((((CAST(t0.c72 AS NUMERIC))AND(((t0.c72)||(t0.c72)))))AND(t0.c72)) ASC);
SELECT COUNT(*) FROM t0 WHERE ((((~ (t0.c72))) BETWEEN (((((((((((((t0.c72)AND(0.6627516199110272)))AND(t0.c72)))OR(t0.c72)))AND(t0.c72)))OR(t0.c72)))OR(t0.c72))) AND (1390216543))) ORDER BY ((((CAST(t0.c72 AS NUMERIC))AND(((t0.c72)||(t0.c72)))))AND(t0.c72)) ASC;
SELECT ALL * FROM rt0, vt1, t0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 END)<>(rt0.c4 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 END)<>(rt0.c4 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL * FROM rt0, vt1, t0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 END)<>(rt0.c4 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 END)<>(rt0.c4 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL * FROM rt0, vt1, t0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 END)<>(rt0.c4 COLLATE RTRIM)));
SELECT ALL * FROM rt0, t0 WHERE (((((x'')<<(rt0.c2)))||(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')<<(rt0.c2)))||(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c1)) IN ())  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (((((x'')<<(rt0.c2)))||(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')<<(rt0.c2)))||(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c1)) IN ())  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (((((x'')<<(rt0.c2)))||(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c1)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((vt1.c1) BETWEEN (vt1.c1) AND ((((rt0.c4)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c4))))) WHERE ((((((vt1.c0)OR(vt1.c1)))OR(rt0.c0)) IN (TRIM(DISTINCT rt0.c0, rt0.c3), rt0.c0 COLLATE NOCASE))) ORDER BY ((+ (rt0.c3)) IN ());
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)OR(vt1.c1)))OR(rt0.c0)) IN (TRIM(DISTINCT rt0.c0, rt0.c3), rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((vt1.c1) BETWEEN (vt1.c1) AND ((((rt0.c4)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c4))))) ORDER BY ((+ (rt0.c3)) IN ()));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((vt1.c1) BETWEEN (vt1.c1) AND ((((rt0.c4)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c4))))) WHERE ((((((vt1.c0)OR(vt1.c1)))OR(rt0.c0)) IN (TRIM(DISTINCT rt0.c0, rt0.c3), rt0.c0 COLLATE NOCASE))) ORDER BY ((+ (rt0.c3)) IN ());
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)OR(vt1.c1)))OR(rt0.c0)) IN (TRIM(DISTINCT rt0.c0, rt0.c3), rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((vt1.c1) BETWEEN (vt1.c1) AND ((((rt0.c4)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c4))))) ORDER BY ((+ (rt0.c3)) IN ()));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((vt1.c1) BETWEEN (vt1.c1) AND ((((rt0.c4)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c4))))) WHERE ((((((vt1.c0)OR(vt1.c1)))OR(rt0.c0)) IN (TRIM(DISTINCT rt0.c0, rt0.c3), rt0.c0 COLLATE NOCASE))) ORDER BY ((+ (rt0.c3)) IN ());
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (CAST(rt0.c2 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (CAST(rt0.c2 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (CAST(rt0.c2 COLLATE RTRIM AS REAL));
SELECT COUNT(*) FROM t0, vt1 WHERE ((((vt1.c1 IN ()))AND((+ (vt1.c0))))) ORDER BY ((((((((((vt1.c0)OR(t0.c72)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))|(CASE '~,0鐥[> r'  WHEN t0.c72 THEN vt1.c1 ELSE NULL END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN ()))AND((+ (vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((((((((vt1.c0)OR(t0.c72)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))|(CASE '~,0鐥[> r'  WHEN t0.c72 THEN vt1.c1 ELSE NULL END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((vt1.c1 IN ()))AND((+ (vt1.c0))))) ORDER BY ((((((((((vt1.c0)OR(t0.c72)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))|(CASE '~,0鐥[> r'  WHEN t0.c72 THEN vt1.c1 ELSE NULL END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN ()))AND((+ (vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((((((((vt1.c0)OR(t0.c72)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))|(CASE '~,0鐥[> r'  WHEN t0.c72 THEN vt1.c1 ELSE NULL END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((vt1.c1 IN ()))AND((+ (vt1.c0))))) ORDER BY ((((((((((vt1.c0)OR(t0.c72)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))|(CASE '~,0鐥[> r'  WHEN t0.c72 THEN vt1.c1 ELSE NULL END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c1)>(vt1.c1)), LOWER(DISTINCT vt1.c0), CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END))>((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)), ((((vt1.c1)OR('-883169825')))OR(vt1.c1)), (- (vt1.c1)))))) ORDER BY (((((vt1.c1 IN (vt1.c0)))AND(((vt1.c1) IS FALSE))))OR(vt1.c1));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1)>(vt1.c1)), LOWER(DISTINCT vt1.c0), CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END))>((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)), ((((vt1.c1)OR('-883169825')))OR(vt1.c1)), (- (vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c1 IN (vt1.c0)))AND(((vt1.c1) IS FALSE))))OR(vt1.c1)));
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c1)>(vt1.c1)), LOWER(DISTINCT vt1.c0), CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END))>((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)), ((((vt1.c1)OR('-883169825')))OR(vt1.c1)), (- (vt1.c1)))))) ORDER BY (((((vt1.c1 IN (vt1.c0)))AND(((vt1.c1) IS FALSE))))OR(vt1.c1));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1)>(vt1.c1)), LOWER(DISTINCT vt1.c0), CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END))>((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)), ((((vt1.c1)OR('-883169825')))OR(vt1.c1)), (- (vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c1 IN (vt1.c0)))AND(((vt1.c1) IS FALSE))))OR(vt1.c1)));
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c1)>(vt1.c1)), LOWER(DISTINCT vt1.c0), CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END))>((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)), ((((vt1.c1)OR('-883169825')))OR(vt1.c1)), (- (vt1.c1)))))) ORDER BY (((((vt1.c1 IN (vt1.c0)))AND(((vt1.c1) IS FALSE))))OR(vt1.c1));
SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS NUMERIC)) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt1.c0 ELSE x'' END) AND ((~ ('-1309621160'))))) ORDER BY vt1.c0 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS NUMERIC)) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt1.c0 ELSE x'' END) AND ((~ ('-1309621160'))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS NUMERIC)) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt1.c0 ELSE x'' END) AND ((~ ('-1309621160'))))) ORDER BY vt1.c0 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS NUMERIC)) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt1.c0 ELSE x'' END) AND ((~ ('-1309621160'))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS NUMERIC)) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt1.c0 ELSE x'' END) AND ((~ ('-1309621160'))))) ORDER BY vt1.c0 COLLATE RTRIM ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE (LIKELY((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ORDER BY JULIANDAY(vt1.c0, ((vt1.c1)IS(vt1.c1)), vt1.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY JULIANDAY(vt1.c0, ((vt1.c1)IS(vt1.c1)), vt1.c0)  NULLS LAST);
SELECT * FROM vt1 WHERE (LIKELY((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ORDER BY JULIANDAY(vt1.c0, ((vt1.c1)IS(vt1.c1)), vt1.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY JULIANDAY(vt1.c0, ((vt1.c1)IS(vt1.c1)), vt1.c0)  NULLS LAST);
SELECT * FROM vt1 WHERE (LIKELY((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ORDER BY JULIANDAY(vt1.c0, ((vt1.c1)IS(vt1.c1)), vt1.c0)  NULLS LAST;
SELECT * FROM vt1 WHERE (CASE ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (vt1.c1 IN ()) THEN '-1338381504' WHEN (((vt1.c1))<=((vt1.c0))) THEN vt1.c1 WHEN ((vt1.c0)-(vt1.c1)) THEN ((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)) END) ORDER BY CASE vt1.c1  WHEN ((vt1.c0)<=(vt1.c1)) THEN TYPEOF(vt1.c1) ELSE CAST(vt1.c0 AS BLOB) END ASC, CASE WHEN x'' THEN (((vt1.c1)) NOT BETWEEN ((x'')) AND ((vt1.c0))) WHEN ((vt1.c1)>>(vt1.c0)) THEN ((vt1.c1)/(vt1.c1)) WHEN (((vt1.c0, vt1.c0, 0.2424212188531778)) BETWEEN ((x'8d37', vt1.c1, vt1.c0)) AND ((NULL, vt1.c0, vt1.c0))) THEN ((vt1.c0)<=(vt1.c1)) END ASC, ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))IS(vt1.c0)) ASC  NULLS LAST, '269880530'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (vt1.c1 IN ()) THEN '-1338381504' WHEN (((vt1.c1))<=((vt1.c0))) THEN vt1.c1 WHEN ((vt1.c0)-(vt1.c1)) THEN ((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)) END) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c1  WHEN ((vt1.c0)<=(vt1.c1)) THEN TYPEOF(vt1.c1) ELSE CAST(vt1.c0 AS BLOB) END ASC, CASE WHEN x'' THEN (((vt1.c1)) NOT BETWEEN ((x'')) AND ((vt1.c0))) WHEN ((vt1.c1)>>(vt1.c0)) THEN ((vt1.c1)/(vt1.c1)) WHEN (((vt1.c0, vt1.c0, 0.2424212188531778)) BETWEEN ((x'8d37', vt1.c1, vt1.c0)) AND ((NULL, vt1.c0, vt1.c0))) THEN ((vt1.c0)<=(vt1.c1)) END ASC, ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))IS(vt1.c0)) ASC  NULLS LAST, '269880530'  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (vt1.c1 IN ()) THEN '-1338381504' WHEN (((vt1.c1))<=((vt1.c0))) THEN vt1.c1 WHEN ((vt1.c0)-(vt1.c1)) THEN ((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)) END) ORDER BY CASE vt1.c1  WHEN ((vt1.c0)<=(vt1.c1)) THEN TYPEOF(vt1.c1) ELSE CAST(vt1.c0 AS BLOB) END ASC, CASE WHEN x'' THEN (((vt1.c1)) NOT BETWEEN ((x'')) AND ((vt1.c0))) WHEN ((vt1.c1)>>(vt1.c0)) THEN ((vt1.c1)/(vt1.c1)) WHEN (((vt1.c0, vt1.c0, 0.2424212188531778)) BETWEEN ((x'8d37', vt1.c1, vt1.c0)) AND ((NULL, vt1.c0, vt1.c0))) THEN ((vt1.c0)<=(vt1.c1)) END ASC, ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))IS(vt1.c0)) ASC  NULLS LAST, '269880530'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (vt1.c1 IN ()) THEN '-1338381504' WHEN (((vt1.c1))<=((vt1.c0))) THEN vt1.c1 WHEN ((vt1.c0)-(vt1.c1)) THEN ((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)) END) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c1  WHEN ((vt1.c0)<=(vt1.c1)) THEN TYPEOF(vt1.c1) ELSE CAST(vt1.c0 AS BLOB) END ASC, CASE WHEN x'' THEN (((vt1.c1)) NOT BETWEEN ((x'')) AND ((vt1.c0))) WHEN ((vt1.c1)>>(vt1.c0)) THEN ((vt1.c1)/(vt1.c1)) WHEN (((vt1.c0, vt1.c0, 0.2424212188531778)) BETWEEN ((x'8d37', vt1.c1, vt1.c0)) AND ((NULL, vt1.c0, vt1.c0))) THEN ((vt1.c0)<=(vt1.c1)) END ASC, ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))IS(vt1.c0)) ASC  NULLS LAST, '269880530'  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (vt1.c1 IN ()) THEN '-1338381504' WHEN (((vt1.c1))<=((vt1.c0))) THEN vt1.c1 WHEN ((vt1.c0)-(vt1.c1)) THEN ((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)) END) ORDER BY CASE vt1.c1  WHEN ((vt1.c0)<=(vt1.c1)) THEN TYPEOF(vt1.c1) ELSE CAST(vt1.c0 AS BLOB) END ASC, CASE WHEN x'' THEN (((vt1.c1)) NOT BETWEEN ((x'')) AND ((vt1.c0))) WHEN ((vt1.c1)>>(vt1.c0)) THEN ((vt1.c1)/(vt1.c1)) WHEN (((vt1.c0, vt1.c0, 0.2424212188531778)) BETWEEN ((x'8d37', vt1.c1, vt1.c0)) AND ((NULL, vt1.c0, vt1.c0))) THEN ((vt1.c0)<=(vt1.c1)) END ASC, ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))IS(vt1.c0)) ASC  NULLS LAST, '269880530'  NULLS FIRST;
SELECT * FROM t0 WHERE (CASE WHEN COALESCE(DISTINCT t0.c72, t0.c72) THEN TRIM(DISTINCT NULL) WHEN t0.c72 THEN ((t0.c72) IS FALSE) WHEN t0.c72 COLLATE NOCASE THEN ((t0.c72)<=(t0.c72)) ELSE t0.c72 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN COALESCE(DISTINCT t0.c72, t0.c72) THEN TRIM(DISTINCT NULL) WHEN t0.c72 THEN ((t0.c72) IS FALSE) WHEN t0.c72 COLLATE NOCASE THEN ((t0.c72)<=(t0.c72)) ELSE t0.c72 COLLATE BINARY END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN COALESCE(DISTINCT t0.c72, t0.c72) THEN TRIM(DISTINCT NULL) WHEN t0.c72 THEN ((t0.c72) IS FALSE) WHEN t0.c72 COLLATE NOCASE THEN ((t0.c72)<=(t0.c72)) ELSE t0.c72 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN COALESCE(DISTINCT t0.c72, t0.c72) THEN TRIM(DISTINCT NULL) WHEN t0.c72 THEN ((t0.c72) IS FALSE) WHEN t0.c72 COLLATE NOCASE THEN ((t0.c72)<=(t0.c72)) ELSE t0.c72 COLLATE BINARY END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN COALESCE(DISTINCT t0.c72, t0.c72) THEN TRIM(DISTINCT NULL) WHEN t0.c72 THEN ((t0.c72) IS FALSE) WHEN t0.c72 COLLATE NOCASE THEN ((t0.c72)<=(t0.c72)) ELSE t0.c72 COLLATE BINARY END);
SELECT * FROM rt0, t0, vt1 WHERE (((((CAST(t0.c72 AS TEXT))AND(('Y|X0' IN ()))))AND(CAST(vt1.c1 AS REAL)))) ORDER BY PRINTF('') DESC  NULLS FIRST, ((rt0.c2) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c72 AS TEXT))AND(('Y|X0' IN ()))))AND(CAST(vt1.c1 AS REAL)))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY PRINTF('') DESC  NULLS FIRST, ((rt0.c2) ISNULL) ASC  NULLS FIRST);
SELECT * FROM rt0, t0, vt1 WHERE (((((CAST(t0.c72 AS TEXT))AND(('Y|X0' IN ()))))AND(CAST(vt1.c1 AS REAL)))) ORDER BY PRINTF('') DESC  NULLS FIRST, ((rt0.c2) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c72 AS TEXT))AND(('Y|X0' IN ()))))AND(CAST(vt1.c1 AS REAL)))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY PRINTF('') DESC  NULLS FIRST, ((rt0.c2) ISNULL) ASC  NULLS FIRST);
SELECT * FROM rt0, t0, vt1 WHERE (((((CAST(t0.c72 AS TEXT))AND(('Y|X0' IN ()))))AND(CAST(vt1.c1 AS REAL)))) ORDER BY PRINTF('') DESC  NULLS FIRST, ((rt0.c2) ISNULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (~ (-541388996)) WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (~ (-541388996)));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (~ (-541388996)) WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (~ (-541388996)));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (~ (-541388996)) WHERE (rt0.c4);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)==('1262470405'))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)==('1262470405'))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)==('1262470405'))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)==('1262470405'))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)==('1262470405'))) NOTNULL));
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN (rt0.c4) AND (rt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN (rt0.c4) AND (rt0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN (rt0.c4) AND (rt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN (rt0.c4) AND (rt0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN (rt0.c4) AND (rt0.c1)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON ((((t0.c72)OR(RTRIM(rt0.c0))))OR((+ (vt1.c0)))) FULL OUTER JOIN t0 ON ((((((rt0.c3)AND(t0.c72)))OR(rt0.c2))) BETWEEN (((x'5f80')||(x''))) AND (rt0.c0)) WHERE (CAST(CAST(rt0.c0 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((((t0.c72)OR(RTRIM(rt0.c0))))OR((+ (vt1.c0)))) FULL OUTER JOIN t0 ON ((((((rt0.c3)AND(t0.c72)))OR(rt0.c2))) BETWEEN (((x'5f80')||(x''))) AND (rt0.c0)));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON ((((t0.c72)OR(RTRIM(rt0.c0))))OR((+ (vt1.c0)))) FULL OUTER JOIN t0 ON ((((((rt0.c3)AND(t0.c72)))OR(rt0.c2))) BETWEEN (((x'5f80')||(x''))) AND (rt0.c0)) WHERE (CAST(CAST(rt0.c0 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((((t0.c72)OR(RTRIM(rt0.c0))))OR((+ (vt1.c0)))) FULL OUTER JOIN t0 ON ((((((rt0.c3)AND(t0.c72)))OR(rt0.c2))) BETWEEN (((x'5f80')||(x''))) AND (rt0.c0)));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c72)) BETWEEN ((((((t0.c72)OR(t0.c72)))AND(t0.c72)))) AND (((((t0.c72))<((NULL))))))) ORDER BY CAST(((((((((t0.c72)OR(t0.c72)))AND(t0.c72)))AND(t0.c72)))OR(t0.c72)) AS INTEGER)  NULLS LAST, (((t0.c72, t0.c72, x'')) BETWEEN ((t0.c72 COLLATE NOCASE, (((t0.c72)) BETWEEN ((t0.c72)) AND ((t0.c72))), NULL)) AND ((CASE WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 WHEN x'' THEN t0.c72 ELSE t0.c72 END, ((t0.c72)>=(t0.c72)), ((t0.c72)IS NOT(t0.c72)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c72)) BETWEEN ((((((t0.c72)OR(t0.c72)))AND(t0.c72)))) AND (((((t0.c72))<((NULL))))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((((((((t0.c72)OR(t0.c72)))AND(t0.c72)))AND(t0.c72)))OR(t0.c72)) AS INTEGER)  NULLS LAST, (((t0.c72, t0.c72, x'')) BETWEEN ((t0.c72 COLLATE NOCASE, (((t0.c72)) BETWEEN ((t0.c72)) AND ((t0.c72))), NULL)) AND ((CASE WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 WHEN x'' THEN t0.c72 ELSE t0.c72 END, ((t0.c72)>=(t0.c72)), ((t0.c72)IS NOT(t0.c72)))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c72)) BETWEEN ((((((t0.c72)OR(t0.c72)))AND(t0.c72)))) AND (((((t0.c72))<((NULL))))))) ORDER BY CAST(((((((((t0.c72)OR(t0.c72)))AND(t0.c72)))AND(t0.c72)))OR(t0.c72)) AS INTEGER)  NULLS LAST, (((t0.c72, t0.c72, x'')) BETWEEN ((t0.c72 COLLATE NOCASE, (((t0.c72)) BETWEEN ((t0.c72)) AND ((t0.c72))), NULL)) AND ((CASE WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 WHEN x'' THEN t0.c72 ELSE t0.c72 END, ((t0.c72)>=(t0.c72)), ((t0.c72)IS NOT(t0.c72)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c72)) BETWEEN ((((((t0.c72)OR(t0.c72)))AND(t0.c72)))) AND (((((t0.c72))<((NULL))))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((((((((t0.c72)OR(t0.c72)))AND(t0.c72)))AND(t0.c72)))OR(t0.c72)) AS INTEGER)  NULLS LAST, (((t0.c72, t0.c72, x'')) BETWEEN ((t0.c72 COLLATE NOCASE, (((t0.c72)) BETWEEN ((t0.c72)) AND ((t0.c72))), NULL)) AND ((CASE WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 WHEN x'' THEN t0.c72 ELSE t0.c72 END, ((t0.c72)>=(t0.c72)), ((t0.c72)IS NOT(t0.c72)))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c72)) BETWEEN ((((((t0.c72)OR(t0.c72)))AND(t0.c72)))) AND (((((t0.c72))<((NULL))))))) ORDER BY CAST(((((((((t0.c72)OR(t0.c72)))AND(t0.c72)))AND(t0.c72)))OR(t0.c72)) AS INTEGER)  NULLS LAST, (((t0.c72, t0.c72, x'')) BETWEEN ((t0.c72 COLLATE NOCASE, (((t0.c72)) BETWEEN ((t0.c72)) AND ((t0.c72))), NULL)) AND ((CASE WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c72 WHEN x'' THEN t0.c72 ELSE t0.c72 END, ((t0.c72)>=(t0.c72)), ((t0.c72)IS NOT(t0.c72)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((0.6290791465790891)) NOT BETWEEN ((((vt1.c1)GLOB(vt1.c0)))) AND ((((t0.c72)<(t0.c72)))))) ORDER BY ((0.23091237194763647) IS TRUE) DESC  NULLS LAST, (+ (((t0.c72)<>(t0.c72))));
SELECT SUM(count) FROM (SELECT (((((0.6290791465790891)) NOT BETWEEN ((((vt1.c1)GLOB(vt1.c0)))) AND ((((t0.c72)<(t0.c72)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((0.23091237194763647) IS TRUE) DESC  NULLS LAST, (+ (((t0.c72)!=(t0.c72)))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((0.6290791465790891)) NOT BETWEEN ((((vt1.c1)GLOB(vt1.c0)))) AND ((((t0.c72)<(t0.c72)))))) ORDER BY ((0.23091237194763647) IS TRUE) DESC  NULLS LAST, (+ (((t0.c72)<>(t0.c72))));
SELECT SUM(count) FROM (SELECT (((((0.6290791465790891)) NOT BETWEEN ((((vt1.c1)GLOB(vt1.c0)))) AND ((((t0.c72)<(t0.c72)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((0.23091237194763647) IS TRUE) DESC  NULLS LAST, (+ (((t0.c72)!=(t0.c72)))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((0.6290791465790891)) NOT BETWEEN ((((vt1.c1)GLOB(vt1.c0)))) AND ((((t0.c72)<(t0.c72)))))) ORDER BY ((0.23091237194763647) IS TRUE) DESC  NULLS LAST, (+ (((t0.c72)<>(t0.c72))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1) NOT NULL) IN (vt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((vt1.c1) NOT NULL) IN (vt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1) NOT NULL) IN (vt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((vt1.c1) NOT NULL) IN (vt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1) NOT NULL) IN (vt1.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (((rt0.c3) NOT BETWEEN (((vt1.c1) NOT BETWEEN (0.7684664725601862) AND (rt0.c4))) AND (rt0.c2 COLLATE RTRIM))) ORDER BY UPPER(DISTINCT (((x'', rt0.c3, rt0.c2)) BETWEEN ((vt1.c1, vt1.c1, rt0.c0)) AND ((rt0.c2, rt0.c3, vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOT BETWEEN (((vt1.c1) NOT BETWEEN (0.7684664725601862) AND (rt0.c4))) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY UPPER(DISTINCT (((x'', rt0.c3, rt0.c2)) BETWEEN ((vt1.c1, vt1.c1, rt0.c0)) AND ((rt0.c2, rt0.c3, vt1.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (((rt0.c3) NOT BETWEEN (((vt1.c1) NOT BETWEEN (0.7684664725601862) AND (rt0.c4))) AND (rt0.c2 COLLATE RTRIM))) ORDER BY UPPER(DISTINCT (((x'', rt0.c3, rt0.c2)) BETWEEN ((vt1.c1, vt1.c1, rt0.c0)) AND ((rt0.c2, rt0.c3, vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOT BETWEEN (((vt1.c1) NOT BETWEEN (0.7684664725601862) AND (rt0.c4))) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY UPPER(DISTINCT (((x'', rt0.c3, rt0.c2)) BETWEEN ((vt1.c1, vt1.c1, rt0.c0)) AND ((rt0.c2, rt0.c3, vt1.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (((rt0.c3) NOT BETWEEN (((vt1.c1) NOT BETWEEN (0.7684664725601862) AND (rt0.c4))) AND (rt0.c2 COLLATE RTRIM))) ORDER BY UPPER(DISTINCT (((x'', rt0.c3, rt0.c2)) BETWEEN ((vt1.c1, vt1.c1, rt0.c0)) AND ((rt0.c2, rt0.c3, vt1.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (CAST(((rt0.c3) IS FALSE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3) IS FALSE) AS BLOB)) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (CAST(((rt0.c3) IS FALSE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3) IS FALSE) AS BLOB)) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (CAST(((rt0.c3) IS FALSE) AS BLOB));
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((((t0.c72)||(rt0.c0)))GLOB(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c72)||(rt0.c0)))GLOB(rt0.c0))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((((t0.c72)||(rt0.c0)))GLOB(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c72)||(rt0.c0)))GLOB(rt0.c0))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((((t0.c72)||(rt0.c0)))GLOB(rt0.c0)));
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON CAST(CASE WHEN rt0.c4 THEN rt0.c2 END AS REAL) CROSS JOIN vt1 ON CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS NUMERIC) WHERE (CAST(((rt0.c2)<(vt1.c0)) AS BLOB)) ORDER BY ((((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c3))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)<(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CAST(CASE WHEN rt0.c4 THEN rt0.c2 END AS REAL) CROSS JOIN vt1 ON CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS NUMERIC) ORDER BY ((((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c3))) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON CAST(CASE WHEN rt0.c4 THEN rt0.c2 END AS REAL) CROSS JOIN vt1 ON CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS NUMERIC) WHERE (CAST(((rt0.c2)<(vt1.c0)) AS BLOB)) ORDER BY ((((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c3))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)<(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CAST(CASE WHEN rt0.c4 THEN rt0.c2 END AS REAL) CROSS JOIN vt1 ON CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS NUMERIC) ORDER BY ((((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c3))) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON CAST(CASE WHEN rt0.c4 THEN rt0.c2 END AS REAL) CROSS JOIN vt1 ON CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS NUMERIC) WHERE (CAST(((rt0.c2)<(vt1.c0)) AS BLOB)) ORDER BY ((((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c3))) IS FALSE)  NULLS FIRST;
SELECT * FROM t0 WHERE (x'') ORDER BY ((NOT (t0.c72)) IN ()), CASE CAST(t0.c72 AS INTEGER)  WHEN (t0.c72 IN ()) THEN CASE t0.c72  WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END WHEN x'' COLLATE RTRIM THEN ((t0.c72) BETWEEN (t0.c72) AND (t0.c72)) WHEN (NOT (t0.c72)) THEN (+ (NULL)) ELSE ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 ORDER BY ((NOT (t0.c72)) IN ()), CASE CAST(t0.c72 AS INTEGER)  WHEN (t0.c72 IN ()) THEN CASE t0.c72  WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END WHEN x'' COLLATE RTRIM THEN ((t0.c72) BETWEEN (t0.c72) AND (t0.c72)) WHEN (NOT (t0.c72)) THEN (+ (NULL)) ELSE ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)) END  NULLS FIRST);
SELECT * FROM t0 WHERE (x'') ORDER BY ((NOT (t0.c72)) IN ()), CASE CAST(t0.c72 AS INTEGER)  WHEN (t0.c72 IN ()) THEN CASE t0.c72  WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END WHEN x'' COLLATE RTRIM THEN ((t0.c72) BETWEEN (t0.c72) AND (t0.c72)) WHEN (NOT (t0.c72)) THEN (+ (NULL)) ELSE ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 ORDER BY ((NOT (t0.c72)) IN ()), CASE CAST(t0.c72 AS INTEGER)  WHEN (t0.c72 IN ()) THEN CASE t0.c72  WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END WHEN x'' COLLATE RTRIM THEN ((t0.c72) BETWEEN (t0.c72) AND (t0.c72)) WHEN (NOT (t0.c72)) THEN (+ (NULL)) ELSE ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)) END  NULLS FIRST);
SELECT * FROM t0 WHERE (x'') ORDER BY ((NOT (t0.c72)) IN ()), CASE CAST(t0.c72 AS INTEGER)  WHEN (t0.c72 IN ()) THEN CASE t0.c72  WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END WHEN x'' COLLATE RTRIM THEN ((t0.c72) BETWEEN (t0.c72) AND (t0.c72)) WHEN (NOT (t0.c72)) THEN (+ (NULL)) ELSE ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1 FULL OUTER JOIN t0 ON (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c1))) COLLATE BINARY WHERE (((rt0.c4) BETWEEN (CAST(x'' AS INTEGER)) AND ('_䋖4bd'))) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS BLOB);
SELECT SUM(count) FROM (SELECT ((((rt0.c4) BETWEEN (CAST(x'' AS INTEGER)) AND ('_䋖4bd'))) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN t0 ON (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c1))) COLLATE BINARY ORDER BY CAST(rt0.c1 COLLATE RTRIM AS BLOB));
SELECT ALL COUNT(*) FROM rt0, vt1 FULL OUTER JOIN t0 ON (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c1))) COLLATE BINARY WHERE (((rt0.c4) BETWEEN (CAST(x'' AS INTEGER)) AND ('_䋖4bd'))) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS BLOB);
SELECT SUM(count) FROM (SELECT ((((rt0.c4) BETWEEN (CAST(x'' AS INTEGER)) AND ('_䋖4bd'))) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN t0 ON (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c1))) COLLATE BINARY ORDER BY CAST(rt0.c1 COLLATE RTRIM AS BLOB));
SELECT ALL COUNT(*) FROM rt0, vt1 FULL OUTER JOIN t0 ON (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c1))) COLLATE BINARY WHERE (((rt0.c4) BETWEEN (CAST(x'' AS INTEGER)) AND ('_䋖4bd'))) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS BLOB);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON ((((rt0.c4))==((rt0.c4))) IN (CASE t0.c72  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END, (~ (t0.c72)))) CROSS JOIN t0 ON ((((rt0.c4)<(t0.c72)))-(CAST(vt1.c0 AS REAL))) WHERE (CASE ((rt0.c4) NOT NULL)  WHEN ((((rt0.c0)OR(rt0.c4)))AND(vt1.c1)) THEN 0.6335984193564393 WHEN (~ (rt0.c4)) THEN CAST(vt1.c1 AS TEXT) WHEN rt0.c3 COLLATE NOCASE THEN rt0.c3 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c4) NOT NULL)  WHEN ((((rt0.c0)OR(rt0.c4)))AND(vt1.c1)) THEN 0.6335984193564393 WHEN (~ (rt0.c4)) THEN CAST(vt1.c1 AS TEXT) WHEN rt0.c3 COLLATE NOCASE THEN rt0.c3 COLLATE BINARY END) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((rt0.c4))=((rt0.c4))) IN (CASE t0.c72  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END, (~ (t0.c72)))) CROSS JOIN t0 ON ((((rt0.c4)<(t0.c72)))-(CAST(vt1.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON ((((rt0.c4))==((rt0.c4))) IN (CASE t0.c72  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END, (~ (t0.c72)))) CROSS JOIN t0 ON ((((rt0.c4)<(t0.c72)))-(CAST(vt1.c0 AS REAL))) WHERE (CASE ((rt0.c4) NOT NULL)  WHEN ((((rt0.c0)OR(rt0.c4)))AND(vt1.c1)) THEN 0.6335984193564393 WHEN (~ (rt0.c4)) THEN CAST(vt1.c1 AS TEXT) WHEN rt0.c3 COLLATE NOCASE THEN rt0.c3 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c4) NOT NULL)  WHEN ((((rt0.c0)OR(rt0.c4)))AND(vt1.c1)) THEN 0.6335984193564393 WHEN (~ (rt0.c4)) THEN CAST(vt1.c1 AS TEXT) WHEN rt0.c3 COLLATE NOCASE THEN rt0.c3 COLLATE BINARY END) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((rt0.c4))=((rt0.c4))) IN (CASE t0.c72  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END, (~ (t0.c72)))) CROSS JOIN t0 ON ((((rt0.c4)<(t0.c72)))-(CAST(vt1.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON ((((rt0.c4))==((rt0.c4))) IN (CASE t0.c72  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END, (~ (t0.c72)))) CROSS JOIN t0 ON ((((rt0.c4)<(t0.c72)))-(CAST(vt1.c0 AS REAL))) WHERE (CASE ((rt0.c4) NOT NULL)  WHEN ((((rt0.c0)OR(rt0.c4)))AND(vt1.c1)) THEN 0.6335984193564393 WHEN (~ (rt0.c4)) THEN CAST(vt1.c1 AS TEXT) WHEN rt0.c3 COLLATE NOCASE THEN rt0.c3 COLLATE BINARY END);
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(NULL)))OR(x'')))OR((((0.23533045867500724)) BETWEEN ((rt0.c3)) AND ((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(NULL)))OR(x'')))OR((((0.23533045867500724)) BETWEEN ((rt0.c3)) AND ((vt1.c1)))))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(NULL)))OR(x'')))OR((((0.23533045867500724)) BETWEEN ((rt0.c3)) AND ((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(NULL)))OR(x'')))OR((((0.23533045867500724)) BETWEEN ((rt0.c3)) AND ((vt1.c1)))))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE (((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(NULL)))OR(x'')))OR((((0.23533045867500724)) BETWEEN ((rt0.c3)) AND ((vt1.c1))))));
SELECT ALL COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN vt1 ON ((((CAST(vt1.c0 AS REAL))OR(1.744126678E9)))OR(((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt1.c0)))) WHERE (CAST(((((vt1.c1)AND('>D')))AND(vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c1)AND('>D')))AND(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt1 ON ((((CAST(vt1.c0 AS REAL))OR(1.744126678E9)))OR(((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN vt1 ON ((((CAST(vt1.c0 AS REAL))OR(1.744126678E9)))OR(((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt1.c0)))) WHERE (CAST(((((vt1.c1)AND('>D')))AND(vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c1)AND('>D')))AND(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt1 ON ((((CAST(vt1.c0 AS REAL))OR(1.744126678E9)))OR(((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN vt1 ON ((((CAST(vt1.c0 AS REAL))OR(1.744126678E9)))OR(((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt1.c0)))) WHERE (CAST(((((vt1.c1)AND('>D')))AND(vt1.c0)) AS BLOB));
SELECT * FROM t0 INNER JOIN rt0 ON CAST(((rt0.c3)<<(rt0.c1)) AS NUMERIC) WHERE ((((rt0.c4)) BETWEEN (((((((((('-1759116490')OR(rt0.c0)))OR('阽j{''lixh')))AND(rt0.c3)))OR(t0.c72)))) AND ((((rt0.c3)||(rt0.c4)))))) ORDER BY CASE WHEN (~ (rt0.c0)) THEN CAST(rt0.c4 AS BLOB) WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c4, rt0.c3, rt0.c3)) AND ((rt0.c3, rt0.c3, t0.c72))) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END THEN ((rt0.c0) NOTNULL) ELSE rt0.c1 END ASC, TRIM((~ (rt0.c1)))  NULLS LAST, ((TOTAL_CHANGES()) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c4) AND (t0.c72))) AND ((((rt0.c4))>((rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c4)) BETWEEN (((((((((('-1759116490')OR(rt0.c0)))OR('阽j{''lixh')))AND(rt0.c3)))OR(t0.c72)))) AND ((((rt0.c3)||(rt0.c4)))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CAST(((rt0.c3)<<(rt0.c1)) AS NUMERIC) ORDER BY CASE WHEN (~ (rt0.c0)) THEN CAST(rt0.c4 AS BLOB) WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c4, rt0.c3, rt0.c3)) AND ((rt0.c3, rt0.c3, t0.c72))) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END THEN ((rt0.c0) NOTNULL) ELSE rt0.c1 END ASC, TRIM((~ (rt0.c1)))  NULLS LAST, ((TOTAL_CHANGES()) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c4) AND (t0.c72))) AND ((((rt0.c4))>((rt0.c0)))))  NULLS LAST);
SELECT * FROM t0 INNER JOIN rt0 ON CAST(((rt0.c3)<<(rt0.c1)) AS NUMERIC) WHERE ((((rt0.c4)) BETWEEN (((((((((('-1759116490')OR(rt0.c0)))OR('阽j{''lixh')))AND(rt0.c3)))OR(t0.c72)))) AND ((((rt0.c3)||(rt0.c4)))))) ORDER BY CASE WHEN (~ (rt0.c0)) THEN CAST(rt0.c4 AS BLOB) WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c4, rt0.c3, rt0.c3)) AND ((rt0.c3, rt0.c3, t0.c72))) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END THEN ((rt0.c0) NOTNULL) ELSE rt0.c1 END ASC, TRIM((~ (rt0.c1)))  NULLS LAST, ((TOTAL_CHANGES()) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c4) AND (t0.c72))) AND ((((rt0.c4))>((rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c4)) BETWEEN (((((((((('-1759116490')OR(rt0.c0)))OR('阽j{''lixh')))AND(rt0.c3)))OR(t0.c72)))) AND ((((rt0.c3)||(rt0.c4)))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CAST(((rt0.c3)<<(rt0.c1)) AS NUMERIC) ORDER BY CASE WHEN (~ (rt0.c0)) THEN CAST(rt0.c4 AS BLOB) WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c4, rt0.c3, rt0.c3)) AND ((rt0.c3, rt0.c3, t0.c72))) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END THEN ((rt0.c0) NOTNULL) ELSE rt0.c1 END ASC, TRIM((~ (rt0.c1)))  NULLS LAST, ((TOTAL_CHANGES()) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c4) AND (t0.c72))) AND ((((rt0.c4))>((rt0.c0)))))  NULLS LAST);
SELECT * FROM t0 INNER JOIN rt0 ON CAST(((rt0.c3)<<(rt0.c1)) AS NUMERIC) WHERE ((((rt0.c4)) BETWEEN (((((((((('-1759116490')OR(rt0.c0)))OR('阽j{''lixh')))AND(rt0.c3)))OR(t0.c72)))) AND ((((rt0.c3)||(rt0.c4)))))) ORDER BY CASE WHEN (~ (rt0.c0)) THEN CAST(rt0.c4 AS BLOB) WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c4, rt0.c3, rt0.c3)) AND ((rt0.c3, rt0.c3, t0.c72))) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END THEN ((rt0.c0) NOTNULL) ELSE rt0.c1 END ASC, TRIM((~ (rt0.c1)))  NULLS LAST, ((TOTAL_CHANGES()) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c4) AND (t0.c72))) AND ((((rt0.c4))>((rt0.c0)))))  NULLS LAST;
SELECT * FROM t0, vt1 LEFT OUTER JOIN rt0 ON ((255135259) NOTNULL) WHERE ((((rt0.c3)<(rt0.c4)) IN ())) ORDER BY vt1.c1  NULLS LAST, ((((rt0.c0)) BETWEEN ((t0.c72)) AND ((rt0.c4))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)<(rt0.c4)) IN ())) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN rt0 ON ((255135259) NOTNULL) ORDER BY vt1.c1  NULLS LAST, ((((rt0.c0)) BETWEEN ((t0.c72)) AND ((rt0.c4))) IN ())  NULLS LAST);
SELECT * FROM t0, vt1 LEFT OUTER JOIN rt0 ON ((255135259) NOTNULL) WHERE ((((rt0.c3)<(rt0.c4)) IN ())) ORDER BY vt1.c1  NULLS LAST, ((((rt0.c0)) BETWEEN ((t0.c72)) AND ((rt0.c4))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)<(rt0.c4)) IN ())) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN rt0 ON ((255135259) NOTNULL) ORDER BY vt1.c1  NULLS LAST, ((((rt0.c0)) BETWEEN ((t0.c72)) AND ((rt0.c4))) IN ())  NULLS LAST);
SELECT * FROM t0, vt1 LEFT OUTER JOIN rt0 ON ((255135259) NOTNULL) WHERE ((((rt0.c3)<(rt0.c4)) IN ())) ORDER BY vt1.c1  NULLS LAST, ((((rt0.c0)) BETWEEN ((t0.c72)) AND ((rt0.c4))) IN ())  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c72)AND(t0.c72)))AND(t0.c72)))OR(t0.c72)))OR(t0.c72))) BETWEEN ((NOT (t0.c72))) AND (t0.c72 COLLATE BINARY))) ORDER BY CASE CASE t0.c72  WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END  WHEN ((t0.c72) NOT BETWEEN ('-2055258028') AND (t0.c72)) THEN ((((t0.c72)AND(t0.c72)))AND(0.5082013858855953)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c72)AND(t0.c72)))AND(t0.c72)))OR(t0.c72)))OR(t0.c72))) BETWEEN ((NOT (t0.c72))) AND (t0.c72 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY CASE CASE t0.c72  WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END  WHEN ((t0.c72) NOT BETWEEN ('-2055258028') AND (t0.c72)) THEN ((((t0.c72)AND(t0.c72)))AND(0.5082013858855953)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c72)AND(t0.c72)))AND(t0.c72)))OR(t0.c72)))OR(t0.c72))) BETWEEN ((NOT (t0.c72))) AND (t0.c72 COLLATE BINARY))) ORDER BY CASE CASE t0.c72  WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END  WHEN ((t0.c72) NOT BETWEEN ('-2055258028') AND (t0.c72)) THEN ((((t0.c72)AND(t0.c72)))AND(0.5082013858855953)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c72)AND(t0.c72)))AND(t0.c72)))OR(t0.c72)))OR(t0.c72))) BETWEEN ((NOT (t0.c72))) AND (t0.c72 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY CASE CASE t0.c72  WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END  WHEN ((t0.c72) NOT BETWEEN ('-2055258028') AND (t0.c72)) THEN ((((t0.c72)AND(t0.c72)))AND(0.5082013858855953)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c72)AND(t0.c72)))AND(t0.c72)))OR(t0.c72)))OR(t0.c72))) BETWEEN ((NOT (t0.c72))) AND (t0.c72 COLLATE BINARY))) ORDER BY CASE CASE t0.c72  WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END  WHEN ((t0.c72) NOT BETWEEN ('-2055258028') AND (t0.c72)) THEN ((((t0.c72)AND(t0.c72)))AND(0.5082013858855953)) END ASC  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1)<(rt0.c4))) IS FALSE)) ORDER BY ((0x67f542d6) BETWEEN (((rt0.c2)<(rt0.c1))) AND (CASE rt0.c1  WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN NULL END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<(rt0.c4))) IS FALSE)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((0X67f542d6) BETWEEN (((rt0.c2)<(rt0.c1))) AND (CASE rt0.c1  WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN NULL END))  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1)<(rt0.c4))) IS FALSE)) ORDER BY ((0x67f542d6) BETWEEN (((rt0.c2)<(rt0.c1))) AND (CASE rt0.c1  WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN NULL END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<(rt0.c4))) IS FALSE)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((0X67f542d6) BETWEEN (((rt0.c2)<(rt0.c1))) AND (CASE rt0.c1  WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN NULL END))  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1)<(rt0.c4))) IS FALSE)) ORDER BY ((0x67f542d6) BETWEEN (((rt0.c2)<(rt0.c1))) AND (CASE rt0.c1  WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN NULL END))  NULLS LAST;
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c3)IS NOT(rt0.c1)))) AND ((0X71b9523f))) WHERE (((((((((rt0.c0 COLLATE NOCASE)OR(LIKELY('116096987'))))OR(CAST(vt1.c1 AS INTEGER))))AND(CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END)))OR(((rt0.c0) IS FALSE)))) ORDER BY (NOT (vt1.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0 COLLATE NOCASE)OR(LIKELY('116096987'))))OR(CAST(vt1.c1 AS INTEGER))))AND(CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END)))OR(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c3)IS NOT(rt0.c1)))) AND ((0x71b9523f))) ORDER BY (NOT (vt1.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c3)IS NOT(rt0.c1)))) AND ((0X71b9523f))) WHERE (((((((((rt0.c0 COLLATE NOCASE)OR(LIKELY('116096987'))))OR(CAST(vt1.c1 AS INTEGER))))AND(CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END)))OR(((rt0.c0) IS FALSE)))) ORDER BY (NOT (vt1.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0 COLLATE NOCASE)OR(LIKELY('116096987'))))OR(CAST(vt1.c1 AS INTEGER))))AND(CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END)))OR(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c3)IS NOT(rt0.c1)))) AND ((0x71b9523f))) ORDER BY (NOT (vt1.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c3)IS NOT(rt0.c1)))) AND ((0X71b9523f))) WHERE (((((((((rt0.c0 COLLATE NOCASE)OR(LIKELY('116096987'))))OR(CAST(vt1.c1 AS INTEGER))))AND(CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END)))OR(((rt0.c0) IS FALSE)))) ORDER BY (NOT (vt1.c0)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c3) AND (vt1.c1)) COLLATE NOCASE) ORDER BY (((((rt0.c0) NOTNULL), rt0.c4, CASE t0.c72  WHEN rt0.c0 THEN rt0.c2 END))<((((rt0.c2)<=(vt1.c0)), 0.9996650326928352, CAST(rt0.c3 AS BLOB)))), CAST(vt1.c1 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY (((((rt0.c0) NOTNULL), rt0.c4, CASE t0.c72  WHEN rt0.c0 THEN rt0.c2 END))<((((rt0.c2)<=(vt1.c0)), 0.9996650326928352, CAST(rt0.c3 AS BLOB)))), CAST(vt1.c1 AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c3) AND (vt1.c1)) COLLATE NOCASE) ORDER BY (((((rt0.c0) NOTNULL), rt0.c4, CASE t0.c72  WHEN rt0.c0 THEN rt0.c2 END))<((((rt0.c2)<=(vt1.c0)), 0.9996650326928352, CAST(rt0.c3 AS BLOB)))), CAST(vt1.c1 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY (((((rt0.c0) NOTNULL), rt0.c4, CASE t0.c72  WHEN rt0.c0 THEN rt0.c2 END))<((((rt0.c2)<=(vt1.c0)), 0.9996650326928352, CAST(rt0.c3 AS BLOB)))), CAST(vt1.c1 AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c3) AND (vt1.c1)) COLLATE NOCASE) ORDER BY (((((rt0.c0) NOTNULL), rt0.c4, CASE t0.c72  WHEN rt0.c0 THEN rt0.c2 END))<((((rt0.c2)<=(vt1.c0)), 0.9996650326928352, CAST(rt0.c3 AS BLOB)))), CAST(vt1.c1 AS INTEGER)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (CASE WHEN rt0.c2 THEN rt0.c4 END IN ()) WHERE ('<R');
SELECT SUM(count) FROM (SELECT (('<R') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (CASE WHEN rt0.c2 THEN rt0.c4 END IN ()));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (CASE WHEN rt0.c2 THEN rt0.c4 END IN ()) WHERE ('<R');
SELECT SUM(count) FROM (SELECT (('<R') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (CASE WHEN rt0.c2 THEN rt0.c4 END IN ()));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (CASE WHEN rt0.c2 THEN rt0.c4 END IN ()) WHERE ('<R');
SELECT ALL COUNT(*) FROM vt1 WHERE (TIME(TRIM(vt1.c0), ((((((((0.01213228152838397)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)), ((vt1.c0)>(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TIME(TRIM(vt1.c0), ((((((((0.01213228152838397)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)), ((vt1.c0)>(vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (TIME(TRIM(vt1.c0), ((((((((0.01213228152838397)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)), ((vt1.c0)>(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TIME(TRIM(vt1.c0), ((((((((0.01213228152838397)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)), ((vt1.c0)>(vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (TIME(TRIM(vt1.c0), ((((((((0.01213228152838397)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)), ((vt1.c0)>(vt1.c1))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST((~ (rt0.c0)) AS BLOB)) ORDER BY ((((rt0.c4)<<(rt0.c1))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c4)<<(rt0.c1))) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST((~ (rt0.c0)) AS BLOB)) ORDER BY ((((rt0.c4)<<(rt0.c1))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c4)<<(rt0.c1))) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST((~ (rt0.c0)) AS BLOB)) ORDER BY ((((rt0.c4)<<(rt0.c1))) IS FALSE)  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 FULL OUTER JOIN t0 ON ((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c4))) IS TRUE) WHERE (((((((t0.c72)OR(t0.c72)))OR(rt0.c3)))<=(((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c72)OR(t0.c72)))OR(rt0.c3)))<=(((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED FULL OUTER JOIN t0 ON ((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c4))) IS TRUE));
SELECT COUNT(*) FROM rt0, vt1 FULL OUTER JOIN t0 ON ((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c4))) IS TRUE) WHERE (((((((t0.c72)OR(t0.c72)))OR(rt0.c3)))<=(((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c72)OR(t0.c72)))OR(rt0.c3)))<=(((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED FULL OUTER JOIN t0 ON ((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c4))) IS TRUE));
SELECT COUNT(*) FROM rt0, vt1 FULL OUTER JOIN t0 ON ((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c4))) IS TRUE) WHERE (((((((t0.c72)OR(t0.c72)))OR(rt0.c3)))<=(((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))LIKE(TYPEOF(vt1.c0)))) ORDER BY ((((((NULL) IS FALSE))OR(((vt1.c1) NOTNULL))))OR(((rt0.c1) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))LIKE(TYPEOF(vt1.c0)))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((((((NULL) IS FALSE))OR(((vt1.c1) NOTNULL))))OR(((rt0.c1) NOT NULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))LIKE(TYPEOF(vt1.c0)))) ORDER BY ((((((NULL) IS FALSE))OR(((vt1.c1) NOTNULL))))OR(((rt0.c1) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))LIKE(TYPEOF(vt1.c0)))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((((((NULL) IS FALSE))OR(((vt1.c1) NOTNULL))))OR(((rt0.c1) NOT NULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))LIKE(TYPEOF(vt1.c0)))) ORDER BY ((((((NULL) IS FALSE))OR(((vt1.c1) NOTNULL))))OR(((rt0.c1) NOT NULL)))  NULLS LAST;
SELECT * FROM rt0, t0 WHERE ((((t0.c72)) NOT BETWEEN ((((((rt0.c4)OR(rt0.c2)))OR(rt0.c3)))) AND (((rt0.c3 IN ()))))) ORDER BY ((t0.c72) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c72)) NOT BETWEEN ((((((rt0.c4)OR(rt0.c2)))OR(rt0.c3)))) AND (((rt0.c3 IN ()))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((t0.c72) IS FALSE) ASC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE ((((t0.c72)) NOT BETWEEN ((((((rt0.c4)OR(rt0.c2)))OR(rt0.c3)))) AND (((rt0.c3 IN ()))))) ORDER BY ((t0.c72) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c72)) NOT BETWEEN ((((((rt0.c4)OR(rt0.c2)))OR(rt0.c3)))) AND (((rt0.c3 IN ()))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((t0.c72) IS FALSE) ASC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE ((((t0.c72)) NOT BETWEEN ((((((rt0.c4)OR(rt0.c2)))OR(rt0.c3)))) AND (((rt0.c3 IN ()))))) ORDER BY ((t0.c72) IS FALSE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (ABS(DISTINCT vt1.c1) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT vt1.c1) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (ABS(DISTINCT vt1.c1) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT vt1.c1) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (ABS(DISTINCT vt1.c1) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL * FROM t0, rt0, vt1 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))AND('-555692014')));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))AND('-555692014'))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL * FROM t0, rt0, vt1 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))AND('-555692014')));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))AND('-555692014'))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL * FROM t0, rt0, vt1 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))AND('-555692014')));
SELECT ALL * FROM t0, rt0 WHERE (ABS('db') COLLATE NOCASE) ORDER BY (- (CAST(rt0.c2 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS('db') COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 ORDER BY (- (CAST(rt0.c2 AS BLOB)))  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (ABS('db') COLLATE NOCASE) ORDER BY (- (CAST(rt0.c2 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS('db') COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 ORDER BY (- (CAST(rt0.c2 AS BLOB)))  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (ABS('db') COLLATE NOCASE) ORDER BY (- (CAST(rt0.c2 AS BLOB)))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c1 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c1 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c1 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c1 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c1 COLLATE RTRIM AS BLOB));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((~ (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((~ (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((~ (rt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1)>=(vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)>=(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1)>=(vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)>=(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1)>=(vt1.c1)) IN ()));
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) THEN (+ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) THEN (+ (vt1.c0)) END) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) THEN (+ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) THEN (+ (vt1.c0)) END) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) THEN (+ (vt1.c0)) END);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c72 THEN t0.c72 WHEN '' THEN t0.c72 WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END)!=('-1536176034')));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c72 THEN t0.c72 WHEN '' THEN t0.c72 WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END)<>('-1536176034'))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c72 THEN t0.c72 WHEN '' THEN t0.c72 WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END)!=('-1536176034')));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c72 THEN t0.c72 WHEN '' THEN t0.c72 WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END)<>('-1536176034'))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c72 THEN t0.c72 WHEN '' THEN t0.c72 WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END)!=('-1536176034')));
SELECT * FROM rt0 INNER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER))OR(rt0.c4 COLLATE BINARY)) WHERE (CAST(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN vt1.c0 THEN NULL WHEN rt0.c4 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c4 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN vt1.c0 THEN NULL WHEN rt0.c4 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c4 END AS INTEGER)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER))OR(rt0.c4 COLLATE BINARY)));
SELECT * FROM rt0 INNER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER))OR(rt0.c4 COLLATE BINARY)) WHERE (CAST(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN vt1.c0 THEN NULL WHEN rt0.c4 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c4 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN vt1.c0 THEN NULL WHEN rt0.c4 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c4 END AS INTEGER)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER))OR(rt0.c4 COLLATE BINARY)));
SELECT * FROM rt0 INNER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER))OR(rt0.c4 COLLATE BINARY)) WHERE (CAST(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN vt1.c0 THEN NULL WHEN rt0.c4 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c4 END AS INTEGER));
SELECT ALL * FROM t0 WHERE ((t0.c72 IN ()) COLLATE BINARY) ORDER BY (~ (t0.c72)), 'YrnV/qs,' COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((t0.c72 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY (~ (t0.c72)), 'YrnV/qs,' COLLATE BINARY DESC);
SELECT ALL * FROM t0 WHERE ((t0.c72 IN ()) COLLATE BINARY) ORDER BY (~ (t0.c72)), 'YrnV/qs,' COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((t0.c72 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY (~ (t0.c72)), 'YrnV/qs,' COLLATE BINARY DESC);
SELECT ALL * FROM t0 WHERE ((t0.c72 IN ()) COLLATE BINARY) ORDER BY (~ (t0.c72)), 'YrnV/qs,' COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((CAST(vt1.c0 AS INTEGER))-((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER))-((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((CAST(vt1.c0 AS INTEGER))-((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER))-((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((CAST(vt1.c0 AS INTEGER))-((~ (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c1)))) NOT BETWEEN (vt1.c1) AND ((+ (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c1)))) NOT BETWEEN (vt1.c1) AND ((+ (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c1)))) NOT BETWEEN (vt1.c1) AND ((+ (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c1)))) NOT BETWEEN (vt1.c1) AND ((+ (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c1)))) NOT BETWEEN (vt1.c1) AND ((+ (vt1.c1)))));
SELECT COUNT(*) FROM t0 WHERE ('269880530' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('269880530' COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('269880530' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('269880530' COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('269880530' COLLATE RTRIM);
SELECT * FROM vt1, t0, rt0 WHERE (HEX(vt1.c1)) ORDER BY vt1.c0 DESC, ((json_valid(t0.c72))<>(CASE 'Q1dF*>Jd'  WHEN rt0.c1 THEN t0.c72 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((HEX(vt1.c1)) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY vt1.c0 DESC, ((json_valid(t0.c72))!=(CASE 'Q1dF*>Jd'  WHEN rt0.c1 THEN t0.c72 ELSE rt0.c0 END)));
SELECT * FROM vt1, t0, rt0 WHERE (HEX(vt1.c1)) ORDER BY vt1.c0 DESC, ((json_valid(t0.c72))<>(CASE 'Q1dF*>Jd'  WHEN rt0.c1 THEN t0.c72 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((HEX(vt1.c1)) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY vt1.c0 DESC, ((json_valid(t0.c72))!=(CASE 'Q1dF*>Jd'  WHEN rt0.c1 THEN t0.c72 ELSE rt0.c0 END)));
SELECT * FROM vt1, t0, rt0 WHERE (HEX(vt1.c1)) ORDER BY vt1.c0 DESC, ((json_valid(t0.c72))<>(CASE 'Q1dF*>Jd'  WHEN rt0.c1 THEN t0.c72 ELSE rt0.c0 END));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) NOTNULL) IN ())) ORDER BY ((((((((((x'')-(rt0.c3)))AND(rt0.c1)))OR(CAST(NULL AS NUMERIC))))OR(((0x782f0087) IS TRUE))))AND((rt0.c4 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOTNULL) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((x'')-(rt0.c3)))AND(rt0.c1)))OR(CAST(NULL AS NUMERIC))))OR(((0X782f0087) IS TRUE))))AND((rt0.c4 IN ()))) DESC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) NOTNULL) IN ())) ORDER BY ((((((((((x'')-(rt0.c3)))AND(rt0.c1)))OR(CAST(NULL AS NUMERIC))))OR(((0x782f0087) IS TRUE))))AND((rt0.c4 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOTNULL) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((x'')-(rt0.c3)))AND(rt0.c1)))OR(CAST(NULL AS NUMERIC))))OR(((0X782f0087) IS TRUE))))AND((rt0.c4 IN ()))) DESC);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((- (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((- (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((- (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((NOT (HEX(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((NOT (HEX(rt0.c2)))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((NOT (HEX(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((NOT (HEX(rt0.c2)))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((NOT (HEX(rt0.c2))));
SELECT ALL * FROM rt0, vt1, t0 WHERE (((((vt1.c1)>>(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)>>(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL * FROM rt0, vt1, t0 WHERE (((((vt1.c1)>>(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)>>(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL * FROM rt0, vt1, t0 WHERE (((((vt1.c1)>>(rt0.c2))) IS TRUE));
SELECT ALL * FROM rt0, t0 CROSS JOIN vt1 ON (NOT (((((((((rt0.c1)OR(vt1.c1)))AND(-7.73143135E8)))OR(rt0.c0)))OR('27O۬')))) WHERE (((((((t0.c72) BETWEEN (rt0.c3) AND (vt1.c1)))AND(COALESCE(rt0.c2, vt1.c1))))AND(rt0.c4 COLLATE BINARY))) ORDER BY ((((rt0.c2) NOTNULL)) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c72) BETWEEN (rt0.c3) AND (vt1.c1)))AND(COALESCE(rt0.c2, vt1.c1))))AND(rt0.c4 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt1 ON (NOT (((((((((rt0.c1)OR(vt1.c1)))AND(-7.73143135E8)))OR(rt0.c0)))OR('27O۬')))) ORDER BY ((((rt0.c2) NOTNULL)) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 CROSS JOIN vt1 ON (NOT (((((((((rt0.c1)OR(vt1.c1)))AND(-7.73143135E8)))OR(rt0.c0)))OR('27O۬')))) WHERE (((((((t0.c72) BETWEEN (rt0.c3) AND (vt1.c1)))AND(COALESCE(rt0.c2, vt1.c1))))AND(rt0.c4 COLLATE BINARY))) ORDER BY ((((rt0.c2) NOTNULL)) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c72) BETWEEN (rt0.c3) AND (vt1.c1)))AND(COALESCE(rt0.c2, vt1.c1))))AND(rt0.c4 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt1 ON (NOT (((((((((rt0.c1)OR(vt1.c1)))AND(-7.73143135E8)))OR(rt0.c0)))OR('27O۬')))) ORDER BY ((((rt0.c2) NOTNULL)) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 CROSS JOIN vt1 ON (NOT (((((((((rt0.c1)OR(vt1.c1)))AND(-7.73143135E8)))OR(rt0.c0)))OR('27O۬')))) WHERE (((((((t0.c72) BETWEEN (rt0.c3) AND (vt1.c1)))AND(COALESCE(rt0.c2, vt1.c1))))AND(rt0.c4 COLLATE BINARY))) ORDER BY ((((rt0.c2) NOTNULL)) NOT NULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c0) IS TRUE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c0) IS TRUE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c0) IS TRUE)) NOT NULL));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN '864317444' THEN ((('2080347173', t0.c72, t0.c72, NULL, t0.c72, t0.c72, t0.c72)) BETWEEN ((t0.c72, t0.c72, t0.c72, t0.c72, t0.c72, t0.c72, t0.c72)) AND ((t0.c72, '', t0.c72, t0.c72, t0.c72, t0.c72, t0.c72))) WHEN ((((t0.c72)OR(t0.c72)))OR(t0.c72)) THEN CHANGES() WHEN ((t0.c72) BETWEEN (t0.c72) AND (t0.c72)) THEN (NOT (t0.c72)) ELSE ((t0.c72)-(t0.c72)) END) ORDER BY t0.c72  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '864317444' THEN ((('2080347173', t0.c72, t0.c72, NULL, t0.c72, t0.c72, t0.c72)) BETWEEN ((t0.c72, t0.c72, t0.c72, t0.c72, t0.c72, t0.c72, t0.c72)) AND ((t0.c72, '', t0.c72, t0.c72, t0.c72, t0.c72, t0.c72))) WHEN ((((t0.c72)OR(t0.c72)))OR(t0.c72)) THEN CHANGES() WHEN ((t0.c72) BETWEEN (t0.c72) AND (t0.c72)) THEN (NOT (t0.c72)) ELSE ((t0.c72)-(t0.c72)) END) IS TRUE)  as count FROM t0 ORDER BY t0.c72  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN '864317444' THEN ((('2080347173', t0.c72, t0.c72, NULL, t0.c72, t0.c72, t0.c72)) BETWEEN ((t0.c72, t0.c72, t0.c72, t0.c72, t0.c72, t0.c72, t0.c72)) AND ((t0.c72, '', t0.c72, t0.c72, t0.c72, t0.c72, t0.c72))) WHEN ((((t0.c72)OR(t0.c72)))OR(t0.c72)) THEN CHANGES() WHEN ((t0.c72) BETWEEN (t0.c72) AND (t0.c72)) THEN (NOT (t0.c72)) ELSE ((t0.c72)-(t0.c72)) END) ORDER BY t0.c72  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '864317444' THEN ((('2080347173', t0.c72, t0.c72, NULL, t0.c72, t0.c72, t0.c72)) BETWEEN ((t0.c72, t0.c72, t0.c72, t0.c72, t0.c72, t0.c72, t0.c72)) AND ((t0.c72, '', t0.c72, t0.c72, t0.c72, t0.c72, t0.c72))) WHEN ((((t0.c72)OR(t0.c72)))OR(t0.c72)) THEN CHANGES() WHEN ((t0.c72) BETWEEN (t0.c72) AND (t0.c72)) THEN (NOT (t0.c72)) ELSE ((t0.c72)-(t0.c72)) END) IS TRUE)  as count FROM t0 ORDER BY t0.c72  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN '864317444' THEN ((('2080347173', t0.c72, t0.c72, NULL, t0.c72, t0.c72, t0.c72)) BETWEEN ((t0.c72, t0.c72, t0.c72, t0.c72, t0.c72, t0.c72, t0.c72)) AND ((t0.c72, '', t0.c72, t0.c72, t0.c72, t0.c72, t0.c72))) WHEN ((((t0.c72)OR(t0.c72)))OR(t0.c72)) THEN CHANGES() WHEN ((t0.c72) BETWEEN (t0.c72) AND (t0.c72)) THEN (NOT (t0.c72)) ELSE ((t0.c72)-(t0.c72)) END) ORDER BY t0.c72  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE (((rt0.c4) ISNULL) COLLATE RTRIM) ORDER BY '-1033801697' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY '-1033801697' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE (((rt0.c4) ISNULL) COLLATE RTRIM) ORDER BY '-1033801697' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY '-1033801697' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE (((rt0.c4) ISNULL) COLLATE RTRIM) ORDER BY '-1033801697' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON CASE WHEN rt0.c4 THEN ((rt0.c1) NOT NULL) ELSE CASE t0.c72  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END END WHERE (0.5352980008228161);
SELECT SUM(count) FROM (SELECT ALL ((0.5352980008228161) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CASE WHEN rt0.c4 THEN ((rt0.c1) NOT NULL) ELSE CASE t0.c72  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END END);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON CASE WHEN rt0.c4 THEN ((rt0.c1) NOT NULL) ELSE CASE t0.c72  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END END WHERE (0.5352980008228161);
SELECT SUM(count) FROM (SELECT ALL ((0.5352980008228161) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CASE WHEN rt0.c4 THEN ((rt0.c1) NOT NULL) ELSE CASE t0.c72  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END END);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON CASE WHEN rt0.c4 THEN ((rt0.c1) NOT NULL) ELSE CASE t0.c72  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END END WHERE (0.5352980008228161);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON CASE ((rt0.c4)-(rt0.c0))  WHEN ((rt0.c2) NOTNULL) THEN LIKELY(rt0.c4) ELSE CASE WHEN rt0.c1 THEN vt1.c0 END END INNER JOIN t0 ON CASE (rt0.c1 IN ())  WHEN ((vt1.c1)IS(t0.c72)) THEN (- (rt0.c2)) ELSE ((((x'')OR(t0.c72)))OR(rt0.c0)) END WHERE (CAST(((vt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC)) ORDER BY (((CAST(vt1.c0 AS REAL)))>((((rt0.c0)<>(0x1c91baea))))), ((CASE WHEN 0.670515487893896 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN '-358828611' THEN vt1.c1 ELSE rt0.c3 END)<<(((((((((((((rt0.c1)AND(t0.c72)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c0)))OR(vt1.c0)))OR(vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON CASE ((rt0.c4)-(rt0.c0))  WHEN ((rt0.c2) NOTNULL) THEN LIKELY(rt0.c4) ELSE CASE WHEN rt0.c1 THEN vt1.c0 END END INNER JOIN t0 ON CASE (rt0.c1 IN ())  WHEN ((vt1.c1)IS(t0.c72)) THEN (- (rt0.c2)) ELSE ((((x'')OR(t0.c72)))OR(rt0.c0)) END ORDER BY (((CAST(vt1.c0 AS REAL)))>((((rt0.c0)<>(0x1c91baea))))), ((CASE WHEN 0.670515487893896 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN '-358828611' THEN vt1.c1 ELSE rt0.c3 END)<<(((((((((((((rt0.c1)AND(t0.c72)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c0)))OR(vt1.c0)))OR(vt1.c1)))) DESC);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON CASE ((rt0.c4)-(rt0.c0))  WHEN ((rt0.c2) NOTNULL) THEN LIKELY(rt0.c4) ELSE CASE WHEN rt0.c1 THEN vt1.c0 END END INNER JOIN t0 ON CASE (rt0.c1 IN ())  WHEN ((vt1.c1)IS(t0.c72)) THEN (- (rt0.c2)) ELSE ((((x'')OR(t0.c72)))OR(rt0.c0)) END WHERE (CAST(((vt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC)) ORDER BY (((CAST(vt1.c0 AS REAL)))>((((rt0.c0)<>(0x1c91baea))))), ((CASE WHEN 0.670515487893896 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN '-358828611' THEN vt1.c1 ELSE rt0.c3 END)<<(((((((((((((rt0.c1)AND(t0.c72)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c0)))OR(vt1.c0)))OR(vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON CASE ((rt0.c4)-(rt0.c0))  WHEN ((rt0.c2) NOTNULL) THEN LIKELY(rt0.c4) ELSE CASE WHEN rt0.c1 THEN vt1.c0 END END INNER JOIN t0 ON CASE (rt0.c1 IN ())  WHEN ((vt1.c1)IS(t0.c72)) THEN (- (rt0.c2)) ELSE ((((x'')OR(t0.c72)))OR(rt0.c0)) END ORDER BY (((CAST(vt1.c0 AS REAL)))>((((rt0.c0)<>(0x1c91baea))))), ((CASE WHEN 0.670515487893896 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN '-358828611' THEN vt1.c1 ELSE rt0.c3 END)<<(((((((((((((rt0.c1)AND(t0.c72)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c0)))OR(vt1.c0)))OR(vt1.c1)))) DESC);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON CASE ((rt0.c4)-(rt0.c0))  WHEN ((rt0.c2) NOTNULL) THEN LIKELY(rt0.c4) ELSE CASE WHEN rt0.c1 THEN vt1.c0 END END INNER JOIN t0 ON CASE (rt0.c1 IN ())  WHEN ((vt1.c1)IS(t0.c72)) THEN (- (rt0.c2)) ELSE ((((x'')OR(t0.c72)))OR(rt0.c0)) END WHERE (CAST(((vt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC)) ORDER BY (((CAST(vt1.c0 AS REAL)))>((((rt0.c0)<>(0x1c91baea))))), ((CASE WHEN 0.670515487893896 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN '-358828611' THEN vt1.c1 ELSE rt0.c3 END)<<(((((((((((((rt0.c1)AND(t0.c72)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c0)))OR(vt1.c0)))OR(vt1.c1)))) DESC;
SELECT COUNT(*) FROM vt1, t0 LEFT OUTER JOIN rt0 ON (NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c1))))) WHERE (((ABS(rt0.c1)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt0.c1)) IS TRUE)) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN rt0 ON (NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c1))))));
SELECT COUNT(*) FROM vt1, t0 LEFT OUTER JOIN rt0 ON (NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c1))))) WHERE (((ABS(rt0.c1)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt0.c1)) IS TRUE)) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN rt0 ON (NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c1))))));
SELECT COUNT(*) FROM vt1, t0 LEFT OUTER JOIN rt0 ON (NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c1))))) WHERE (((ABS(rt0.c1)) IS TRUE));
SELECT ALL * FROM vt1, rt0 WHERE ((((vt1.c1)) BETWEEN ((0Xffffffff8be79b6b)) AND ((rt0.c2)))) ORDER BY (rt0.c4 IN (x'', vt1.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((0Xffffffff8be79b6b)) AND ((rt0.c2)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (rt0.c4 IN (x'', vt1.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE ((((vt1.c1)) BETWEEN ((0Xffffffff8be79b6b)) AND ((rt0.c2)))) ORDER BY (rt0.c4 IN (x'', vt1.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((0Xffffffff8be79b6b)) AND ((rt0.c2)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (rt0.c4 IN (x'', vt1.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE ((((vt1.c1)) BETWEEN ((0Xffffffff8be79b6b)) AND ((rt0.c2)))) ORDER BY (rt0.c4 IN (x'', vt1.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((vt1.c1)-(vt1.c1)) IN (((((vt1.c1)AND(t0.c72)))AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)-(vt1.c1)) IN (((((vt1.c1)AND(t0.c72)))AND(vt1.c1))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((vt1.c1)-(vt1.c1)) IN (((((vt1.c1)AND(t0.c72)))AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)-(vt1.c1)) IN (((((vt1.c1)AND(t0.c72)))AND(vt1.c1))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((vt1.c1)-(vt1.c1)) IN (((((vt1.c1)AND(t0.c72)))AND(vt1.c1)))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON ((x'') IS FALSE) WHERE (CAST(0.073633001532313 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(0.073633001532313 AS INTEGER)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON ((x'') IS FALSE));
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON ((x'') IS FALSE) WHERE (CAST(0.073633001532313 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(0.073633001532313 AS INTEGER)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON ((x'') IS FALSE));
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON ((x'') IS FALSE) WHERE (CAST(0.073633001532313 AS INTEGER));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((((vt1.c1) IS TRUE)) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((((vt1.c1) IS TRUE)) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((((vt1.c1) IS TRUE)) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((((vt1.c1) IS TRUE)) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((((vt1.c1) IS TRUE)) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))) WHERE (rt0.c1);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)IS(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c2))))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))<<(((rt0.c4)<(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY)IS(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))<<(((rt0.c4)<(rt0.c1)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)IS(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c2))))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))<<(((rt0.c4)<(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY)IS(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))<<(((rt0.c4)<(rt0.c1)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)IS(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c2))))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))<<(((rt0.c4)<(rt0.c1)))) DESC;
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (((MIN(vt1.c0, rt0.c2)) NOT BETWEEN (rt0.c4) AND (((vt1.c0) BETWEEN (rt0.c4) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((MIN(vt1.c0, rt0.c2)) NOT BETWEEN (rt0.c4) AND (((vt1.c0) BETWEEN (rt0.c4) AND (rt0.c3))))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (((MIN(vt1.c0, rt0.c2)) NOT BETWEEN (rt0.c4) AND (((vt1.c0) BETWEEN (rt0.c4) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((MIN(vt1.c0, rt0.c2)) NOT BETWEEN (rt0.c4) AND (((vt1.c0) BETWEEN (rt0.c4) AND (rt0.c3))))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (((MIN(vt1.c0, rt0.c2)) NOT BETWEEN (rt0.c4) AND (((vt1.c0) BETWEEN (rt0.c4) AND (rt0.c3)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (0.014753102765953985);
SELECT SUM(count) FROM (SELECT ALL ((0.014753102765953985) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (0.014753102765953985);
SELECT SUM(count) FROM (SELECT ALL ((0.014753102765953985) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (0.014753102765953985);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN (((+ (vt1.c0)))) AND ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4))))) RIGHT OUTER JOIN t0 ON vt1.c0 WHERE (NULLIF(rt0.c2, rt0.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULLIF(rt0.c2, rt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN (((+ (vt1.c0)))) AND ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4))))) RIGHT OUTER JOIN t0 ON vt1.c0);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN (((+ (vt1.c0)))) AND ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4))))) RIGHT OUTER JOIN t0 ON vt1.c0 WHERE (NULLIF(rt0.c2, rt0.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULLIF(rt0.c2, rt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN (((+ (vt1.c0)))) AND ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4))))) RIGHT OUTER JOIN t0 ON vt1.c0);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN (((+ (vt1.c0)))) AND ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4))))) RIGHT OUTER JOIN t0 ON vt1.c0 WHERE (NULLIF(rt0.c2, rt0.c1) COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (((((((t0.c72)AND(x'ac3e')))OR(x''))) NOT BETWEEN ((NOT (t0.c72))) AND (t0.c72)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c72)AND(x'ac3e')))OR(x''))) NOT BETWEEN ((NOT (t0.c72))) AND (t0.c72))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c72)AND(x'ac3e')))OR(x''))) NOT BETWEEN ((NOT (t0.c72))) AND (t0.c72)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c72)AND(x'ac3e')))OR(x''))) NOT BETWEEN ((NOT (t0.c72))) AND (t0.c72))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c72)AND(x'ac3e')))OR(x''))) NOT BETWEEN ((NOT (t0.c72))) AND (t0.c72)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(0.7330534054195076)))OR(rt0.c3)) IN ())) ORDER BY ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c4))) BETWEEN (((rt0.c0) NOT NULL)) AND (((rt0.c3)/(rt0.c4))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(0.7330534054195076)))OR(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c4))) BETWEEN (((rt0.c0) NOT NULL)) AND (((rt0.c3)/(rt0.c4)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(0.7330534054195076)))OR(rt0.c3)) IN ())) ORDER BY ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c4))) BETWEEN (((rt0.c0) NOT NULL)) AND (((rt0.c3)/(rt0.c4))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(0.7330534054195076)))OR(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c4))) BETWEEN (((rt0.c0) NOT NULL)) AND (((rt0.c3)/(rt0.c4)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(0.7330534054195076)))OR(rt0.c3)) IN ())) ORDER BY ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c4))) BETWEEN (((rt0.c0) NOT NULL)) AND (((rt0.c3)/(rt0.c4))));
SELECT ALL * FROM t0 WHERE (((((t0.c72) NOT BETWEEN ('.4') AND (t0.c72))) NOT BETWEEN (t0.c72 COLLATE RTRIM) AND (((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c72) NOT BETWEEN ('.4') AND (t0.c72))) NOT BETWEEN (t0.c72 COLLATE RTRIM) AND (((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c72) NOT BETWEEN ('.4') AND (t0.c72))) NOT BETWEEN (t0.c72 COLLATE RTRIM) AND (((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c72) NOT BETWEEN ('.4') AND (t0.c72))) NOT BETWEEN (t0.c72 COLLATE RTRIM) AND (((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c72) NOT BETWEEN ('.4') AND (t0.c72))) NOT BETWEEN (t0.c72 COLLATE RTRIM) AND (((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((CASE WHEN vt1.c0 THEN t0.c72 ELSE vt1.c0 END)AND(((vt1.c1) BETWEEN (vt1.c0) AND (t0.c72)))))OR(-1.244730735E9)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN t0.c72 ELSE vt1.c0 END)AND(((vt1.c1) BETWEEN (vt1.c0) AND (t0.c72)))))OR(-1.244730735E9))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((CASE WHEN vt1.c0 THEN t0.c72 ELSE vt1.c0 END)AND(((vt1.c1) BETWEEN (vt1.c0) AND (t0.c72)))))OR(-1.244730735E9)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN t0.c72 ELSE vt1.c0 END)AND(((vt1.c1) BETWEEN (vt1.c0) AND (t0.c72)))))OR(-1.244730735E9))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((CASE WHEN vt1.c0 THEN t0.c72 ELSE vt1.c0 END)AND(((vt1.c1) BETWEEN (vt1.c0) AND (t0.c72)))))OR(-1.244730735E9)));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((t0.c72) NOTNULL))OR('945552730' COLLATE RTRIM))) ORDER BY (((~ (vt1.c1))) IS TRUE)  NULLS LAST, CASE ((t0.c72) BETWEEN (vt1.c1) AND (vt1.c1))  WHEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END THEN ((t0.c72)&(t0.c72)) WHEN CASE WHEN x'' THEN vt1.c1 ELSE t0.c72 END THEN vt1.c0 COLLATE BINARY WHEN ((t0.c72) NOTNULL) THEN (NOT (vt1.c0)) ELSE ((0.34851197027801883)<>(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((t0.c72) NOTNULL))OR('945552730' COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((~ (vt1.c1))) IS TRUE)  NULLS LAST, CASE ((t0.c72) BETWEEN (vt1.c1) AND (vt1.c1))  WHEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END THEN ((t0.c72)&(t0.c72)) WHEN CASE WHEN x'' THEN vt1.c1 ELSE t0.c72 END THEN vt1.c0 COLLATE BINARY WHEN ((t0.c72) NOTNULL) THEN (NOT (vt1.c0)) ELSE ((0.34851197027801883)!=(vt1.c0)) END);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((t0.c72) NOTNULL))OR('945552730' COLLATE RTRIM))) ORDER BY (((~ (vt1.c1))) IS TRUE)  NULLS LAST, CASE ((t0.c72) BETWEEN (vt1.c1) AND (vt1.c1))  WHEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END THEN ((t0.c72)&(t0.c72)) WHEN CASE WHEN x'' THEN vt1.c1 ELSE t0.c72 END THEN vt1.c0 COLLATE BINARY WHEN ((t0.c72) NOTNULL) THEN (NOT (vt1.c0)) ELSE ((0.34851197027801883)<>(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((t0.c72) NOTNULL))OR('945552730' COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((~ (vt1.c1))) IS TRUE)  NULLS LAST, CASE ((t0.c72) BETWEEN (vt1.c1) AND (vt1.c1))  WHEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END THEN ((t0.c72)&(t0.c72)) WHEN CASE WHEN x'' THEN vt1.c1 ELSE t0.c72 END THEN vt1.c0 COLLATE BINARY WHEN ((t0.c72) NOTNULL) THEN (NOT (vt1.c0)) ELSE ((0.34851197027801883)!=(vt1.c0)) END);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((t0.c72) NOTNULL))OR('945552730' COLLATE RTRIM))) ORDER BY (((~ (vt1.c1))) IS TRUE)  NULLS LAST, CASE ((t0.c72) BETWEEN (vt1.c1) AND (vt1.c1))  WHEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END THEN ((t0.c72)&(t0.c72)) WHEN CASE WHEN x'' THEN vt1.c1 ELSE t0.c72 END THEN vt1.c0 COLLATE BINARY WHEN ((t0.c72) NOTNULL) THEN (NOT (vt1.c0)) ELSE ((0.34851197027801883)<>(vt1.c0)) END;
SELECT * FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c1);
SELECT * FROM t0, vt1 WHERE (((CASE t0.c72  WHEN vt1.c1 THEN vt1.c0 ELSE t0.c72 END)GLOB((~ ('2100538360'))))) ORDER BY (((NOT (vt1.c1))) BETWEEN (t0.c72) AND (((vt1.c1)OR(t0.c72))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c72  WHEN vt1.c1 THEN vt1.c0 ELSE t0.c72 END)GLOB((~ ('2100538360'))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((NOT (vt1.c1))) BETWEEN (t0.c72) AND (((vt1.c1)OR(t0.c72))))  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (((CASE t0.c72  WHEN vt1.c1 THEN vt1.c0 ELSE t0.c72 END)GLOB((~ ('2100538360'))))) ORDER BY (((NOT (vt1.c1))) BETWEEN (t0.c72) AND (((vt1.c1)OR(t0.c72))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c72  WHEN vt1.c1 THEN vt1.c0 ELSE t0.c72 END)GLOB((~ ('2100538360'))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((NOT (vt1.c1))) BETWEEN (t0.c72) AND (((vt1.c1)OR(t0.c72))))  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (((CASE t0.c72  WHEN vt1.c1 THEN vt1.c0 ELSE t0.c72 END)GLOB((~ ('2100538360'))))) ORDER BY (((NOT (vt1.c1))) BETWEEN (t0.c72) AND (((vt1.c1)OR(t0.c72))))  NULLS LAST;
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON ((((((vt1.c1)OR(t0.c72)))AND(vt1.c0)))AND(CAST(t0.c72 AS REAL))) WHERE (load_extension(vt1.c0, ((t0.c72)>>(vt1.c1)))) ORDER BY ((((((vt1.c0, t0.c72, vt1.c1)) NOT BETWEEN ((vt1.c0, t0.c72, vt1.c1)) AND ((vt1.c1, t0.c72, t0.c72)))))=((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(vt1.c0, ((t0.c72)>>(vt1.c1)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON ((((((vt1.c1)OR(t0.c72)))AND(vt1.c0)))AND(CAST(t0.c72 AS REAL))) ORDER BY ((((((vt1.c0, t0.c72, vt1.c1)) NOT BETWEEN ((vt1.c0, t0.c72, vt1.c1)) AND ((vt1.c1, t0.c72, t0.c72)))))=((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON ((((((vt1.c1)OR(t0.c72)))AND(vt1.c0)))AND(CAST(t0.c72 AS REAL))) WHERE (load_extension(vt1.c0, ((t0.c72)>>(vt1.c1)))) ORDER BY ((((((vt1.c0, t0.c72, vt1.c1)) NOT BETWEEN ((vt1.c0, t0.c72, vt1.c1)) AND ((vt1.c1, t0.c72, t0.c72)))))=((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(vt1.c0, ((t0.c72)>>(vt1.c1)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON ((((((vt1.c1)OR(t0.c72)))AND(vt1.c0)))AND(CAST(t0.c72 AS REAL))) ORDER BY ((((((vt1.c0, t0.c72, vt1.c1)) NOT BETWEEN ((vt1.c0, t0.c72, vt1.c1)) AND ((vt1.c1, t0.c72, t0.c72)))))=((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (0.6665981529245548))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((+ (0.6665981529245548))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (0.6665981529245548))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((+ (0.6665981529245548))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (0.6665981529245548))) IS FALSE));
SELECT * FROM rt0, vt1 INNER JOIN t0 ON CASE CASE WHEN vt1.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c1 END  WHEN (vt1.c1 IN ()) THEN UNLIKELY(rt0.c3) ELSE (NOT (t0.c72)) END WHERE ((((~ (rt0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c3))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1 INNER JOIN t0 ON CASE CASE WHEN vt1.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c1 END  WHEN (vt1.c1 IN ()) THEN UNLIKELY(rt0.c3) ELSE (NOT (t0.c72)) END);
SELECT * FROM rt0, vt1 INNER JOIN t0 ON CASE CASE WHEN vt1.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c1 END  WHEN (vt1.c1 IN ()) THEN UNLIKELY(rt0.c3) ELSE (NOT (t0.c72)) END WHERE ((((~ (rt0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c3))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1 INNER JOIN t0 ON CASE CASE WHEN vt1.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c1 END  WHEN (vt1.c1 IN ()) THEN UNLIKELY(rt0.c3) ELSE (NOT (t0.c72)) END);
SELECT * FROM rt0, vt1 INNER JOIN t0 ON CASE CASE WHEN vt1.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c1 END  WHEN (vt1.c1 IN ()) THEN UNLIKELY(rt0.c3) ELSE (NOT (t0.c72)) END WHERE ((((~ (rt0.c3))) IS FALSE));
SELECT COUNT(*) FROM vt1 WHERE (LIKELIHOOD((((vt1.c1))>((vt1.c1))), 0.17523812883259327)) ORDER BY (((((((vt1.c1, vt1.c0, vt1.c1))>=((vt1.c1, vt1.c0, '-1534599515'))))OR(CAST(vt1.c1 AS BLOB))))OR(((vt1.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((((vt1.c1))>((vt1.c1))), 0.17523812883259327)) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c1, vt1.c0, vt1.c1))>=((vt1.c1, vt1.c0, '-1534599515'))))OR(CAST(vt1.c1 AS BLOB))))OR(((vt1.c0) NOTNULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (LIKELIHOOD((((vt1.c1))>((vt1.c1))), 0.17523812883259327)) ORDER BY (((((((vt1.c1, vt1.c0, vt1.c1))>=((vt1.c1, vt1.c0, '-1534599515'))))OR(CAST(vt1.c1 AS BLOB))))OR(((vt1.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((((vt1.c1))>((vt1.c1))), 0.17523812883259327)) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c1, vt1.c0, vt1.c1))>=((vt1.c1, vt1.c0, '-1534599515'))))OR(CAST(vt1.c1 AS BLOB))))OR(((vt1.c0) NOTNULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (LIKELIHOOD((((vt1.c1))>((vt1.c1))), 0.17523812883259327)) ORDER BY (((((((vt1.c1, vt1.c0, vt1.c1))>=((vt1.c1, vt1.c0, '-1534599515'))))OR(CAST(vt1.c1 AS BLOB))))OR(((vt1.c0) NOTNULL))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN ((rt0.c2) IS FALSE) THEN (NOT (rt0.c3)) ELSE ((rt0.c2)>=(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN ((rt0.c2) IS FALSE) THEN (NOT (rt0.c3)) ELSE ((rt0.c2)>=(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN ((rt0.c2) IS FALSE) THEN (NOT (rt0.c3)) ELSE ((rt0.c2)>=(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN ((rt0.c2) IS FALSE) THEN (NOT (rt0.c3)) ELSE ((rt0.c2)>=(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN ((rt0.c2) IS FALSE) THEN (NOT (rt0.c3)) ELSE ((rt0.c2)>=(rt0.c1)) END);
SELECT * FROM t0, vt1, rt0 WHERE (((CASE WHEN NULL THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN t0.c72 THEN vt1.c1 ELSE rt0.c1 END) BETWEEN (((((NULL)OR(rt0.c1)))AND(rt0.c0))) AND (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN t0.c72 THEN vt1.c1 ELSE rt0.c1 END) BETWEEN (((((NULL)OR(rt0.c1)))AND(rt0.c0))) AND (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT * FROM t0, vt1, rt0 WHERE (((CASE WHEN NULL THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN t0.c72 THEN vt1.c1 ELSE rt0.c1 END) BETWEEN (((((NULL)OR(rt0.c1)))AND(rt0.c0))) AND (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN t0.c72 THEN vt1.c1 ELSE rt0.c1 END) BETWEEN (((((NULL)OR(rt0.c1)))AND(rt0.c0))) AND (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT * FROM t0, vt1, rt0 WHERE (((CASE WHEN NULL THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN t0.c72 THEN vt1.c1 ELSE rt0.c1 END) BETWEEN (((((NULL)OR(rt0.c1)))AND(rt0.c0))) AND (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT * FROM t0 WHERE (t0.c72) ORDER BY JULIANDAY(NULL, (((t0.c72, t0.c72, t0.c72))<=((t0.c72, t0.c72, t0.c72))), t0.c72 COLLATE RTRIM, ((t0.c72)==(t0.c72)), ((((t0.c72)AND(0.5676910387937075)))OR(t0.c72)), t0.c72 COLLATE NOCASE, NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c72) IS TRUE)  as count FROM t0 ORDER BY JULIANDAY(NULL, (((t0.c72, t0.c72, t0.c72))<=((t0.c72, t0.c72, t0.c72))), t0.c72 COLLATE RTRIM, ((t0.c72)==(t0.c72)), ((((t0.c72)AND(0.5676910387937075)))OR(t0.c72)), t0.c72 COLLATE NOCASE, NULL) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (t0.c72) ORDER BY JULIANDAY(NULL, (((t0.c72, t0.c72, t0.c72))<=((t0.c72, t0.c72, t0.c72))), t0.c72 COLLATE RTRIM, ((t0.c72)==(t0.c72)), ((((t0.c72)AND(0.5676910387937075)))OR(t0.c72)), t0.c72 COLLATE NOCASE, NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c72) IS TRUE)  as count FROM t0 ORDER BY JULIANDAY(NULL, (((t0.c72, t0.c72, t0.c72))<=((t0.c72, t0.c72, t0.c72))), t0.c72 COLLATE RTRIM, ((t0.c72)==(t0.c72)), ((((t0.c72)AND(0.5676910387937075)))OR(t0.c72)), t0.c72 COLLATE NOCASE, NULL) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (t0.c72) ORDER BY JULIANDAY(NULL, (((t0.c72, t0.c72, t0.c72))<=((t0.c72, t0.c72, t0.c72))), t0.c72 COLLATE RTRIM, ((t0.c72)==(t0.c72)), ((((t0.c72)AND(0.5676910387937075)))OR(t0.c72)), t0.c72 COLLATE NOCASE, NULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST('1387425011' AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST('1387425011' AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST('1387425011' AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST('1387425011' AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST('1387425011' AS TEXT) COLLATE RTRIM);
SELECT * FROM t0, vt1 WHERE (((((((t0.c72)AND(vt1.c0)))AND(vt1.c1))) NOT BETWEEN ((NOT (vt1.c1))) AND (json_valid(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c72)AND(vt1.c0)))AND(vt1.c1))) NOT BETWEEN ((NOT (vt1.c1))) AND (json_valid(vt1.c1)))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((((((t0.c72)AND(vt1.c0)))AND(vt1.c1))) NOT BETWEEN ((NOT (vt1.c1))) AND (json_valid(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c72)AND(vt1.c0)))AND(vt1.c1))) NOT BETWEEN ((NOT (vt1.c1))) AND (json_valid(vt1.c1)))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((((((t0.c72)AND(vt1.c0)))AND(vt1.c1))) NOT BETWEEN ((NOT (vt1.c1))) AND (json_valid(vt1.c1))));
SELECT * FROM rt0, t0, vt1 WHERE ((NOT (CAST(vt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT * FROM rt0, t0, vt1 WHERE ((NOT (CAST(vt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT * FROM rt0, t0, vt1 WHERE ((NOT (CAST(vt1.c1 AS NUMERIC))));
SELECT * FROM t0 NOT INDEXED, rt0, vt1 WHERE (CASE (NOT (rt0.c0))  WHEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)) THEN t0.c72 COLLATE BINARY ELSE ((rt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt0.c0))  WHEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)) THEN t0.c72 COLLATE BINARY ELSE ((rt0.c0) NOTNULL) END) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT * FROM t0 NOT INDEXED, rt0, vt1 WHERE (CASE (NOT (rt0.c0))  WHEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)) THEN t0.c72 COLLATE BINARY ELSE ((rt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt0.c0))  WHEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)) THEN t0.c72 COLLATE BINARY ELSE ((rt0.c0) NOTNULL) END) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT * FROM t0 NOT INDEXED, rt0, vt1 WHERE (CASE (NOT (rt0.c0))  WHEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0)) THEN t0.c72 COLLATE BINARY ELSE ((rt0.c0) NOTNULL) END);
SELECT ALL * FROM t0, rt0 WHERE (((((CAST(rt0.c3 AS TEXT))OR(rt0.c4)))AND(CASE WHEN t0.c72 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN '-1459420824' ELSE t0.c72 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c3 AS TEXT))OR(rt0.c4)))AND(CASE WHEN t0.c72 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN '-1459420824' ELSE t0.c72 END))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((CAST(rt0.c3 AS TEXT))OR(rt0.c4)))AND(CASE WHEN t0.c72 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN '-1459420824' ELSE t0.c72 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c3 AS TEXT))OR(rt0.c4)))AND(CASE WHEN t0.c72 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN '-1459420824' ELSE t0.c72 END))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((CAST(rt0.c3 AS TEXT))OR(rt0.c4)))AND(CASE WHEN t0.c72 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN '-1459420824' ELSE t0.c72 END)));
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN rt0 ON (+ (NULL)) COLLATE BINARY COLLATE NOCASE WHERE (CASE ((rt0.c1)>>(t0.c72))  WHEN (((rt0.c1))>((vt1.c1))) THEN (rt0.c4 IN (vt1.c0)) ELSE ((((rt0.c0)OR(t0.c72)))AND(vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)>>(t0.c72))  WHEN (((rt0.c1))>((vt1.c1))) THEN (rt0.c4 IN (vt1.c0)) ELSE ((((rt0.c0)OR(t0.c72)))AND(vt1.c1)) END) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN rt0 ON (+ (NULL)) COLLATE BINARY COLLATE NOCASE);
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN rt0 ON (+ (NULL)) COLLATE BINARY COLLATE NOCASE WHERE (CASE ((rt0.c1)>>(t0.c72))  WHEN (((rt0.c1))>((vt1.c1))) THEN (rt0.c4 IN (vt1.c0)) ELSE ((((rt0.c0)OR(t0.c72)))AND(vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)>>(t0.c72))  WHEN (((rt0.c1))>((vt1.c1))) THEN (rt0.c4 IN (vt1.c0)) ELSE ((((rt0.c0)OR(t0.c72)))AND(vt1.c1)) END) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN rt0 ON (+ (NULL)) COLLATE BINARY COLLATE NOCASE);
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN rt0 ON (+ (NULL)) COLLATE BINARY COLLATE NOCASE WHERE (CASE ((rt0.c1)>>(t0.c72))  WHEN (((rt0.c1))>((vt1.c1))) THEN (rt0.c4 IN (vt1.c0)) ELSE ((((rt0.c0)OR(t0.c72)))AND(vt1.c1)) END);
