-- Time: 2024/06/11 14:16:42
-- Database: database89
-- Database version: 3.40.0
-- seed value: 2439481389
PRAGMA cache_size = 50000; -- 2ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE TABLE t0 (c0 REAL  CHECK ( (~ (0.988769230998085)))); -- 0ms;
CREATE INDEX i42 ON t0(CAST(0.3988339652292303 AS INTEGER) ASC) WHERE CASE WHEN json_valid(c0) THEN (c0 IN (c0)) END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES ('Rs(M罬'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0X28ffe52a), ('D\I5.|D'), (0.5284846139721807), ('D\I5.|D'), ('pQ'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.5284846139721807), (x''), (0.618263109802098); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i89 ON t0(TRIM(DISTINCT CASE c0  WHEN c0 THEN c0 ELSE c0 END)); -- 0ms;
CREATE INDEX IF NOT EXISTS i51 ON t0((+ (0X28ffe52a)) COLLATE BINARY ASC); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c0='-1370829487', c0=0.618263109802098; -- 1ms;
CREATE INDEX i47 ON t0((((c0)) NOT BETWEEN ((c0)) AND ((c0))) COLLATE BINARY COLLATE NOCASE); -- 0ms;
PRAGMA short_column_names; -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ALTER TABLE t0 ADD COLUMN c9 TEXT; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x''; -- 0ms;
UPDATE OR FAIL t0 SET c9=x'fd1e'; -- 0ms;
UPDATE rt0 SET c2='0.5284846139721807', c1=0.5284846139721807 WHERE CAST(((rt0.c1)<<(rt0.c0)) AS INTEGER); -- 0ms;
ROLLBACK TRANSACTION; -- 4ms;
UPDATE OR IGNORE t0 SET (c0, c0, c0)=('rs(m罬', '', x'') WHERE (((t0.c0))>((t0.c0))) COLLATE BINARY COLLATE BINARY; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=('') WHERE t0.c0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL, c0=0.4135320230092546; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (-1333674721), (0.5604092357139078), (NULL); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
PRAGMA temp.cache_spill; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA incremental_vacuum(1982971587); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(0.3154181404859371, -1.333674721E9); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '1982971587 -1370829487 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1476321232 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1476321232' IN ()))OR(((('')) BETWEEN (('콚j??FFwv')) AND (('D-c+'))))))OR(((x'ec4b') ISNULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=-2051006921 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE(((NULL) NOT BETWEEN ('Z<྆-#uA+') AND (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=1476321232 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1885801985 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=371054509 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))!=((''))))IS(((('1028654941', NULL, NULL))>(('|?', NULL, -1885801985))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN -1827171611 THEN 0.5849039781911286 ELSE 0X645f4291 END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '1028654941 sz=802998139 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((-1.370829487E9) BETWEEN (-1e500) AND (0.7326191343996902)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS TEXT)) NOT BETWEEN (CASE '1683964561'  WHEN '>' THEN 0xffffffffa9d88803 ELSE x'd7bb' END) AND (((0.0343523576524567)>('-9223372036854775808')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) BETWEEN (('1982971587')) AND (('')))) BETWEEN ((((('-521123412')OR(0Xffffffff869ccf5a)))AND(NULL))) AND (0xffffffffe0f049ac COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') IS TRUE) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=901642088'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-851799431 sz=-1185085975 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '-1445427197 sz=192225541'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '-510188960 -1305067713 sz=-851799431 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-971183026 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('')<=(((NULL)-(0.5412366051199817)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'36b9'))>((CASE 1.476321232E9  WHEN 0.034410765304721314 THEN x'' ELSE x'' END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE NOCASE AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER('1032510187') COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=1982971587 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=1866335092 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 0.3988339652292303 THEN 0.4284241003680692 END)>(x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=-736985236 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(DISTINCT NULL))IS NOT(((NULL) NOT BETWEEN ('8<\_Kd	g') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.12784575193231051; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-736985236'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '-2040871110 sz=-2086624905 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((6.87858986E8)>(NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)-(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1072405096 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((- ('-2036543654')))AND((((1.032510187E9, '1072405096', '')) BETWEEN (('7b', x'', 0.3154181404859371)) AND ((x'', x'', 0.17710992474205345))))))AND(((NULL) NOT NULL))))OR((+ (x'')))))AND(CASE WHEN '-422036886' THEN x'' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 0.4655044256569889 THEN '901642088' WHEN x'' THEN -1827171611 WHEN '1109917614' THEN x'' WHEN '-1885801985' THEN 0.17519792170628445 WHEN 416123927 THEN NULL ELSE 0xfffffffff7f12b72 END)OR(NULL COLLATE RTRIM)))OR(CAST(NULL AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-101202329 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1095828888 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=919778693 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT (((('8<\_Kd	g')AND(306542088)))OR(0.1321492888548731))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=1407711417'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS TEXT) COLLATE RTRIM COLLATE RTRIM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-1954412758 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-1881856652 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=644787255 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-778664148 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=-250523344'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.9581082042181206)))>>(((NULL) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=1524407057 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.5393649754596894, 1733776238, x''))<=((NULL, x'1289', x'cb1f2d81')))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- (0.4655044256569889))  WHEN (((x''))=((0.6371042352929911))) THEN '0.7326191343996902' COLLATE RTRIM END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=1683964561 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL IN ()))OR((((0.8363818024301637))>=(('LM\n1KuKj'))))))OR(0Xffffffffde929b25 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=416123927 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=706714227 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(-1.35189646E8 AS NUMERIC) IN (('-1885801985' IN ('fx?.d+*LK', 'ZPH&a')), ((x'')>(0.4972998489967707)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0Xffffffff8e373d85 THEN x'' WHEN 0.5870616340687882 THEN '-1347069278' WHEN '' THEN x'' ELSE x'59a2' END)!=(0.3653589234348993 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-353728965'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT BETWEEN ('|NM//') AND (x'')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')IS('2098955162')) IN (((x'')*('')), ((NULL)%(1202532928)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-1333674721 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1032510187 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '-210566407 2 sz=2012889650 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1334547664 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((1202532928) NOT BETWEEN ('-135189646') AND ('0.12784575193231051')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((('')OR('')))OR(NULL)))OR(NULL)))AND(-1.445427197E9)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('2078594503' AS NUMERIC) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=-1185085975'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (2.098955162E9)))OR(((NULL) NOT BETWEEN (0Xffffffffafb55aa2) AND ('')))))AND((((0x4227ffae, 1715916189, 0.5573584646416363)) BETWEEN (('524694208', x'dd70', '2098809334')) AND ((NULL, NULL, NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1216288216 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '1733776238 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1954412758 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '-1770754389 0 sz=133423748'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-210566407 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1864233371 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1496792634 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-1507710534 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '0 sz=-210566407 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1095828888') IS TRUE))%(((x'')*(0.6952221535561112)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 1095828888 sz=1558705705 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- ('')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-701745405 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1674399975 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5393649754596894; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((3.06542088E8)AND('')))OR(NULL))) BETWEEN ((((NULL, x'5ef8', '371054509')) BETWEEN ((0.17710992474205345, x'437c', 1390973469)) AND ((x'', x'', NULL)))) AND (((x'') NOT NULL))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE MIN((~ ('524694208')), ('0' IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '0 sz=253033820 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1171708062 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) ISNULL) IN ((((('Ut')OR(NULL)))OR(-2.04087111E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1140424882'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-123192640) NOT NULL))<(((524694208)>(0.4394815001373925)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-761873211'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1595987438 sz=2012889650 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((0.3640796266234746)AND(0.20080070145222872)))AND(0.5476737486499419)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN ((NULL)) AND ((x'99bb')))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '133423748 sz=519398810 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-386555513'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '780304261 sz=1820695343 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=-736985236 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '2 sz=901642088'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=-652155463 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_COMPILEOPTION_USED(x''))<<(0.6029195042652938 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF(NULL, 'Ec', 0.034410765304721314, '', x'') COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=424391495 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=553531854 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((+ ('1947024712')))OR(((((((((x'')AND(NULL)))OR(NULL)))AND(0.6029195042652938)))AND('')))))AND(((NULL) NOT BETWEEN (0.5393649754596894) AND (0.5476737486499419)))))AND((0x4227ffae IN (x'')))))OR(((('-1338503290', 0.7914781617093661, NULL)) NOT BETWEEN ((0.5412366051199817, x'', 0Xffffffff92b5ab99)) AND ((NULL, NULL, '37187057'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1390973469 sz=524694208 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-985115210 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '-135189646'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-2001616417)OR(NULL)))OR(NULL)))AND(((((x'2259')AND('-1674208634')))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1982971587') NOT NULL))AND((((('-1052367719')AND(0.11555372349361903)))OR(0.7006173570407472)))))AND(-639005498 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('306542088' COLLATE RTRIM)AND(((0.6768975553963028)OR(x'f351')))))OR(CAST('-971183026' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-510188960'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN 4.24391495E8 THEN 0.4610030061418704 END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '0 sz=-1770754389 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=2047503769 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -2.50523344E8; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.31502422718590917 COLLATE BINARY)AND(('-1338503290' IN ()))))AND(((0.6462032766942098)|(0.0343523576524567)))))AND(LIKELIHOOD(DISTINCT x'', 0.739339262211057))))AND((((687858986))<>((-2.001616417E9))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('802998139')||('63942931'))))>((((0.008699160504758718)&(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1311397088' IN ()))>=((0.42464978171903467 IN (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x12ee210a)GLOB(-2051006921)))*(CASE 'aFzc'  WHEN 0.3692046262363723 THEN 0xa4a3808 ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=428250423 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-647172285 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1279343851 sz=2078594503 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-508204417 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN ('-1012914837') AND (NULL))) BETWEEN (((0.07296561748364438)IS(0.48251203345260907))) AND (((((0x5adc9b11)AND('-971183026')))OR('	Re')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN (NULL) AND ('%%'))) NOT BETWEEN ((('j1笪b%e')LIKE(0.618263109802098))) AND ((('	Re') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(((x'abf1') ISNULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0xffffffffe6d83a6a) ISNULL) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) NOT BETWEEN ('kQ w,#+NQ') AND (NULL))  WHEN json_array('lF', 0.4124373293224598, 0.9837549728265804, '1933366035') THEN ((1518201989)>=('()\')) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.9606727336095352 AS REAL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('a3,?)9!' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) ISNULL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=435915806 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=506717770 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-2017987205 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 2141150255 sz=802998139 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1070067476 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE 2006073265  WHEN NULL THEN 'f&' ELSE '蘻k' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.1769626579549557) ISNULL))>(-1.954412758E9 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1558705705 IN (NULL)))||((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '4 2 sz=-1682452259 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((780304261) IS FALSE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)/(0.19635891779884085)))IS((((((((('-1334547664')OR('2135530050')))OR(0.249254538327079)))OR(2062672205)))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('' COLLATE NOCASE AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT CAST(x'0253' AS BLOB), CAST('-1370829487' AS NUMERIC)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1989796189 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-1050835481 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) BETWEEN (NULL) AND (0.10104786240164687))  WHEN 'f㜃' COLLATE RTRIM THEN '{}' COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((~ ('0.988769230998085')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '1360316732 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-510188960 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1971446815 196688967 sz=-1429037605'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-250523344'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x3cfb113))<>(((('1609839470')LIKE(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '701122913 sz=846329954 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1083453483'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=1366259529 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE MAX('J', NULL)  WHEN (- ('-149903513')) THEN CASE WHEN NULL THEN 0.640552806797206 ELSE '' END ELSE 0xffffffffcdbe1dde COLLATE RTRIM END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1864233371') NOT NULL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=706714227'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-1860451722')<<('&S'))  WHEN (((x'', 'I~w⥸w>裼', 840456854))>((NULL, 'W E&]R', 7.80304261E8))) THEN (NOT ('-530497342')) ELSE ((NULL)/('')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-422036886 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1305067713 416123927'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-2036543654 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('0.10104786240164687') NOTNULL))OR(LIKELY(x''))))OR(((('-1370829487', x'', '1918871660'))>=((x'acad', x'', 0xffffffff98651237))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=-542923023 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6029195042652938)*(0.7389521132018665))) BETWEEN ((('I')OR(1733776238))) AND (CASE WHEN NULL THEN '(' WHEN 0.7841469176425109 THEN '' WHEN x'' THEN x'' ELSE x'a72f' END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS((('1072405096')OR('D\I5.qD'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE x''  WHEN 'mv-R|' THEN '0.17519792170628445' WHEN '' THEN '-1280866097' WHEN -7.01745405E8 THEN x'fadc5c36' END AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1261132894 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '-2132903491 sz=2136487099'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('-1496792634' AS NUMERIC)))<=((1.733776238E9 COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-353728965 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=1476321232 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1219474125 sz=732806549'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(TYPEOF(DISTINCT x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-1954449902 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.03975363289328859, NULL, NULL))<((-5.21123412E8, '', NULL)))) NOT BETWEEN (((((NULL)OR(x'')))AND(0.09651846758668636))) AND ((((('876505495')OR(x'')))AND('-1311397088')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.1031684790500138 AS TEXT) IN (((((((((NULL)AND(0Xfffffffff8a83ac0)))AND('-124583181')))AND('-1480080953')))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=371054509'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '0 sz=919778693 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=217247414 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(x'' AS REAL)  WHEN (((x''))==((0.29197098868496263))) THEN ((0.3988339652292303)&('338503889')) WHEN ((0.7354598104907568)IS NOT(1218776915)) THEN CAST(x'77f1' AS INTEGER) WHEN CAST(x'' AS NUMERIC) THEN ((NULL)IS NOT(NULL)) ELSE ((('', NULL, 42846309))<>((x'', -8.51799431E8, '豦'))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '424391495 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '2 sz=-1983578121'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) NOT BETWEEN ('0.17710992474205345' COLLATE RTRIM) AND (((NULL) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '428250423 sz=-2122144235'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0Xfffffffff892a186 IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=489237287 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '0 sz=895880527 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=824855757 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-538184584 -2041042507 sz=1021820581'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1566941653 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=-1996308042'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-508204417 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=278673372 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=827220252'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1954412758'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE ''  WHEN '' THEN 0Xffffffffe0f049ac WHEN '873060201' THEN '1050881871' WHEN NULL THEN '2098955162' END)=(((0.45713764237837606) NOT BETWEEN (x'') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((+ ('-1674208634'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-546821170 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1808600969 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=317595914'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1880311701 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1098539010 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') ISNULL) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '1278507345 sz=1745689344 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.5284846139721807)AND(x'bd1352d1')))AND('AS')))==('-1885801985' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1572910755'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(NULL AS TEXT), ((((0.008699160504758718)AND(NULL)))AND(NULL)), (((('1733776238')OR(0.9063285997159727)))AND('0.19635891779884085'))))>=((0.7790759432442008, 0.10165941479012519, ((NULL)+(x'd3819c5e'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'' IN ())))<=((CAST(0.2670251348910152 AS BLOB)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1052367719 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9575247848637417, x'', 0.42563528574608445)) NOT BETWEEN ((((x'a56e') NOT NULL), ((x'')==(x'')), ((647121095) NOT BETWEEN ('q\/%#*i6.') AND (0.2657656590691254)))) AND (((((x''))!=((0.16905312241698855))), 2098955162, (~ (x'c3142f7e'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((- ('-1496792634')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.683964561E9)&('')))LIKE(((-519354874) BETWEEN (0.9213296050802878) AND (-1181180686)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1052367719 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '2 0 sz=-985115210 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-652155463 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')>(0.8621342807275456)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-422036886'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')>>(x'e24e')))OR('k>KxwIQAs')))AND((((x''))!=(('x'))))))AND((((0X300724ad)) NOT BETWEEN ((4.16123927E8)) AND ((0.04794886324895031))))))OR(('YIXOp' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=-1864233371 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('2098955162')<(x'675d')))OR(((0.901766275721277)-(2.5303382E8)))))OR(CASE NULL  WHEN 0.4787733658765798 THEN x'' ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(((0.4394815001373925) BETWEEN ('') AND (x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '0 4'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'') NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '-778664148 sz=-1450174052 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_valid(0.1246717947267556 COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '*8'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2061670283 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.1321492888548731)%(NULL))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.1396836261123121)OR(x'0c39')))OR(0x28ffe52a)) IN (0.16905312241698855, '0.42563528574608445')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=1893236045'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND(3.71054509E8)))OR(NULL))) BETWEEN (CAST(1.072405096E9 AS NUMERIC)) AND (CAST('l((' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1133073924 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1577188013 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(json_remove('#1퍽N', '-409119442') AS INTEGER); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=1085516661 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '795966973 sz=-506913979 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1674399975; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=1345589648'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 -1012717506 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1542112786 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=996758554 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=1052836486 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.17519792170628445 AS BLOB)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_extract('6', x'')) NOT BETWEEN (NULL) AND (((((0.9123682720228697)AND(NULL)))OR(x'790c')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-672242008 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ (0xffffffff90e20e65))  WHEN CAST('-1731412276' AS BLOB) THEN ((('	.')) BETWEEN (('?')) AND (('1859417499'))) ELSE '1279343851' COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(((('-1338503290')) BETWEEN ((NULL)) AND (('-1674208634')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9407999120397609 IN (x'')) IN ()); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(CAST('' AS BLOB), NULL COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-965842110 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=204129077 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT ((NULL) NOT BETWEEN (x'8038') AND (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-2096377152')) BETWEEN ((TRIM(x''))) AND ((((0.3640796266234746)=(910133403))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((LIKE(0.4610030061418704, NULL, 'N')))<=(((((x'')) NOT BETWEEN (('-353728965')) AND ((0xffffffff98361431)))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1887649523 sz=-1494709502 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN 'tQP''e\S' WHEN 0.19583168353617053 THEN CASE WHEN NULL THEN NULL ELSE x'ad73' END WHEN ((0.19800580282963476) IS TRUE) THEN ((NULL)*('')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN 'l邓o₴	k5 *' THEN '.' END) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('') NOT BETWEEN ('') AND ('N0')))AND(STRFTIME(x'', NULL, 9.19778693E8))))AND(((((0.05769938001798369)OR(x'68799854')))OR('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-1770754389 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=2128383244 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-2126339297 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (json_insert('687858986', NULL, -1555133882, 0.7334081468774826, 0.7409240100664887))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.2904215474391194)GLOB(x''))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT (((0.46587913678804826, 0X6f9221de, 1279343851))<>((x'', 0.8179113383845674, -1908982395)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-1595987438'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)|(NULL)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '0 2 sz=-1954412758 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-422036886 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('1674399975' AS REAL))AND(CAST(-1.171708062E9 AS TEXT))))OR(CASE WHEN '-1542062393' THEN '-566349260' WHEN -1242596360 THEN '253033820' WHEN '5aBmG.' THEN 0xffffffff8f06e71b ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1419295252 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM(INSTR(NULL, 0.7777594121191346)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1391278416'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '4 sz=706714227 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'') IS TRUE)))<=(((((('<,Hr')OR(0.19091884781984803)))OR(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN x'' ELSE 0.29179767858980943 END)IS(((NULL) BETWEEN (1698686852) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert((~ (0.7912394620968974)), (('') NOT NULL), 928254413); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>>(NULL)))IS NOT((('-918494610')*('-1385823207')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1183630641 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-841921306 IN (NULL, 0.4411592265593757)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1850887570 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) NOT BETWEEN ((NULL)) AND ((NULL)))) BETWEEN (NULL COLLATE BINARY) AND (x'')); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=773879124 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=1437944596 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '553531854'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1648784137 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-352823875 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1555021938', 0.717334640103458, NULL)) NOT BETWEEN ((((x'') NOT NULL), (((('LyX-~7f/w')AND('-1620122179')))OR(NULL)), (('')OR(0xffffffff88b1c1df)))) AND ((((586783258) NOT NULL), ((0.4124373293224598) IS TRUE), CASE NULL  WHEN 1.407711417E9 THEN -1.052367719E9 WHEN '1202532928' THEN NULL WHEN x'' THEN x'' ELSE 'now!6gJ' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '524694208 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-422036886 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-849351020 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (SUBSTR('%+봌ꜱ_eKo}', x'') IN (CASE WHEN -1509454468 THEN NULL ELSE x'06bc' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('j.h0⭓,|MJ', x'e122b6ba', x'')) BETWEEN ((x'39f2f921', 0xffffffff817fc7e1, '-508204417')) AND (('1647293688', x'1865', x'')))) NOT BETWEEN ((+ ('豦'))) AND ((('-508204417') NOT BETWEEN (0.4134110319469043) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=380557827 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0xea642ab THEN 1340466928 WHEN NULL THEN x'' WHEN 0.2417473461091897 THEN x'e3c9' ELSE '' END) BETWEEN (CAST(x'dcfc' AS INTEGER)) AND ((('-778664148') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0X20fe39ce) NOT BETWEEN (x'd78e') AND (NULL)))OR(((('-560817371')) BETWEEN (('0.4411592265593757')) AND ((''))))))OR((((0.8205477144939087))<>((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'8305')OR(x'3407')))OR(NULL))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('2072769364') IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-925482596 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('R㽊(	')) NOT BETWEEN ((0.059476636918714076)) AND (('192225541'))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=239731830 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffce6a86e9) NOTNULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.4284241003680692)) BETWEEN ((NULL COLLATE NOCASE)) AND (((('') IS FALSE)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '-1172825945 sz=-2025638637 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-44972877 sz=-16589707 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1476321232')/(NULL)))<=(NULL COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2098809334 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL)))/(CAST(-5.60817371E8 AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '1581586184 sz=253033820 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=1280241637 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-40753222) IS FALSE))|(((-1803655125) NOT BETWEEN (x'') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=1866335092'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5792989698258041) NOT NULL)) NOT BETWEEN (((0x7fffffffffffffff)>>(0xffffffffbbadda7d))) AND (x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.6106906135137393 AS NUMERIC))&(((('羅Q', -867325796, 0.010288217450899473)) NOT BETWEEN ((1.279343851E9, 0.3654618447684339, '0.9837549728265804')) AND (('', x'', x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-333263824 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-723346633'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, 0.028969477720942827, x'', 'P<', NULL)) BETWEEN ((0.38576792399853044, 'lwKs', x'', x'd9138790', '<_')) AND (('382765183', '-985115210', 0x2de19bfe, x'', 0.3864107381619577))))<=((((((((('')AND(NULL)))AND('_fI')))OR(NULL)))AND(x'b4aa')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=371054509 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '1264914911 sz=452385281 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('*%2竁ꆇYl' IN ()))+(((0.6029195042652938)<>(-1964708560)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.48251203345260907'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '4 -883766422 sz=1526238859'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2040871110 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '371054509 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-210566407 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1843604679 -90732844'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '780304261 sz=-1674290811 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.2494122144250347)))<>(TRIM(DISTINCT ''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '133423748 sz=428250423 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '0 sz=275616659 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (LIKELY(1.7976931348623157E308) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-751835638 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('1414849362' IN (NULL, x'2b5eb5e2')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')&(x'')))>=(((('vw&', NULL, x'')) NOT BETWEEN (('446625353', 0.12368879382913689, NULL)) AND ((-84803683, 'Ia', NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-520633775 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1724024402'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-334753157') ISNULL)  WHEN CASE WHEN 'g' THEN 0Xffffffff9b35cabd ELSE 0.7366582395216987 END THEN (((NULL))>((NULL))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '0 4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-886964896 0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '582085771 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-761873211 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-169716886 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-139940294 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=1540565912 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=521450347 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '154461496 sz=-971183026 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-521123412')*(x'' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-911859051'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'') NOT BETWEEN ('1476321232') AND ('LPXL')) THEN ((NULL) NOT BETWEEN (x'0933') AND (-2086583168)) WHEN (((('b㵷hYm6')AND('-1483344462')))OR('lyx-~7f/w')) THEN CASE WHEN 0.007989579780633416 THEN 0.18037488942067004 WHEN '-366924301' THEN x'' WHEN '-1940024852' THEN '-778664148' WHEN '-487167835' THEN '' WHEN x'' THEN NULL ELSE NULL END WHEN x'' THEN ((0x183d44e6) NOT NULL) ELSE x'' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL IN ('-1311397088')))OR('0.9581082042181206')))OR(x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '-1560386806 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 -1950396086 sz=333877366 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-545328602')) NOT BETWEEN (('')) AND ((0x7dd79e26))))<=((('750314127') BETWEEN (0Xffffffffd286fde6) AND ('-230982012')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1639928021 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('l]' AS NUMERIC))<(((1.407711417E9) BETWEEN ('1558705705') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1863890544 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffff93d83947 COLLATE NOCASE) NOT BETWEEN (CAST(x'' AS TEXT)) AND (((NULL)*(0.8154348144970359)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=-556966820 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(0.3653589234348993 AS TEXT) THEN ((((((((NULL)AND(NULL)))OR('1134784726')))AND('')))AND(-1.333674721E9)) ELSE SQLITE_SOURCE_ID() END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=1 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=133423748 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL)))-(((((NULL)AND(0.05541189149461645)))AND('R5')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1413645872 sz=-250523344 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('848001361') ISNULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-1819148082) NOT BETWEEN (x'') AND ('7a0'))))<=((((0.1246717947267556)&(''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-422036886'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-194355006 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=683324302 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)=(0xffffffff8ff4f8c3)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1311397088 -667164500 sz=420951381 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY(CAST(x'' AS TEXT), ((1740056458)=(x'')), (- (1628631535)), (x'7e0a' IN (0xffffffffef1e629d)), CASE WHEN x'' THEN NULL END); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '2 429492522 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '-1496792634 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1434830741 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=1091723582 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-410449925 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-159163931 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=524694208'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '-1885801985 1910613334 0 sz=-508735162 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('253033820')OR(NULL)))AND('I['))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)IS NOT('')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '0 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-569647780 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffff880c035a) IS FALSE)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8300062735693688)) NOT BETWEEN (((((NULL)) NOT BETWEEN ((NULL)) AND ((1535099177))))) AND ((((x'') BETWEEN (x'') AND (x'80ea'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (x'', '1558705705')))>=(CAST(-1717680472 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT CAST(x'' AS TEXT)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-3.53728965E8)<<(-1.185085975E9))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-952626034 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1390973469 sz=1244882439 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2098809334 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('802998139')&(NULL)))||(CAST('-135189646' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1885801985'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9667416444414071; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '0 sz=1476321232 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1299727264)OR('?v')))AND('Ge--')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('Q}TYv')||(1.202532928E9))) BETWEEN (((((((((NULL)AND(x'')))OR(NULL)))OR(NULL)))OR(''))) AND (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LTRIM(0.7200446655147418, 0.43770474496924305))IS NOT(((x'')/(0.5284846139721807)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-461497457') ISNULL)  WHEN CAST(0X3584aff1 AS INTEGER) THEN CASE WHEN 'j!!H)' THEN '-1370829487' WHEN 0xffffffffc343e418 THEN x'' WHEN ',kX4S?J' THEN x'fcd2a751151f' END WHEN ((1.92225541E8)&('-851799431')) THEN ((x'') IS FALSE) WHEN ((0.8407272627352713)IS NOT(0.18242067147963648)) THEN ((-5.60817371E8) BETWEEN (NULL) AND (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('2118905279')) BETWEEN ((0x7b47eb8a)) AND (('w+엊enh1ꞅ'))) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-647172285 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '7176220 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1195820342'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('l邓o₴	k5 *' IN (NULL))) BETWEEN ((((x'')) NOT BETWEEN ((1665651381)) AND ((x'')))) AND (((NULL) NOT BETWEEN ('-639005498') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '61962188'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1933846672)) NOT BETWEEN (('1715916189' COLLATE NOCASE)) AND (((- (x'2726'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL)))IS NOT(((((0.0)AND('0.8363818024301637')))OR(1072405096)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT x'', 0Xffffffffbfe0c8e1) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_USED(((((0.19583168353617053)AND(0.4158279422166661)))AND(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1514564426'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-1755492088 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-855835199 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.10430327487543878) NOT BETWEEN (1785194269) AND (x''))  WHEN 0.4957647141645931 THEN (+ ('-264763517')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1698593401 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((('')<(0X543f70b3)))AND((~ (x'')))))OR(((NULL)/(x'd2a3')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) BETWEEN ((0.16671782123920986)) AND ((x'')))) BETWEEN (('663577236' IN (-1334547664, 1.476321232E9))) AND (((('1041407442')) NOT BETWEEN ((x'')) AND (('6'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '0 -1517957142 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.387706856101222 COLLATE NOCASE)IS((((('m88')AND(NULL)))AND(1947024712)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((306542088) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '0 sz=1875152358 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-778664148 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '2 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '2 sz=-1357769629'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8201742052213556)) BETWEEN (((NOT (NULL)))) AND ((((((((((0.9298673235656787)AND(x'b1a8')))OR('-273355099')))OR(-1561024686)))AND(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '480403456 sz=-431579044 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-521123412 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1595521042 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.07944789311937084, 0.07997803372623402, 0.24500805899172984)) BETWEEN (('', x'', NULL)) AND (('0.988769230998085', 'X', '}'))), CAST(0.09651846758668636 AS NUMERIC), '7a0'))>=((((x'')|('^㥠|Ds]8|K')), ((((x'')OR('{B')))AND(0Xfffffffff8a83ac0)), (('-560817371') IS FALSE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=404532465 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1866335092 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '0 0 sz=-510188960'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=2047503769 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('P' IN (x'', NULL)))OR((('{}S') NOT BETWEEN (0.10179421096557462) AND (0.16232717643400374)))))OR((- (2078594503)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '54314316 sz=-542148768 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(((NULL)<=(0.27537636289589495))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '0 -1338503290 sz=682981537 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '0 sz=1211941879 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) NOT BETWEEN (((0.6219267186712039)>(''))) AND (0.7006173570407472 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) BETWEEN (('-156923452')) AND ((0.8476280490356056)))) BETWEEN ((~ (NULL))) AND (((x'434a')<('-190090655')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=1806218966'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=2098809334 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(NULL AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1398113067'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=875737718'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-210566407 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '-1864233371 sz=-1347069278 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '2 749647772 sz=83215718 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '240620246 sz=-777719535 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-9259261 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1667498985 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '2 0 sz=172636168 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1258091237 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((NULL)AND(NULL)))OR('2034176292')))AND(0.19091884781984803)))AND('1789654140')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.26621887358985663; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=-1338503290'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2036543654 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('63942931')-('-250523344')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '}쌖fe*bzS('; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('0.901766275721277' COLLATE BINARY IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=-1687062341'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '553531854 0 sz=1715916189 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-474673691 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-1829169575'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=824099167 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-233193421 sz=1079159136 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-1765908499'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))<>(('-1885437228')))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x3b08c29d; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'I6'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '0 sz=1881133741 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1384187545) NOT BETWEEN (x'') AND (NULL)))*(((0.5849039781911286) BETWEEN ('0.034410765304721314') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '-578576290'  WHEN 'Ut' THEN '-101202329' END)<<(((((780304261)OR(NULL)))AND('848127808')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT 0.5003590245084186); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1683964561 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 0Xffffffffd196872c  WHEN 0.640552806797206 THEN 0.12442291897282187 ELSE 0Xffffffffd0090b3f END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1860747605 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE NULL  WHEN x'ec32' THEN NULL ELSE NULL END IN (((0xffffffffd855def4) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-582135425'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '-396438482 sz=2125684251 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1997010967 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-27713931 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '0 317595914 sz=-647172285 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=27374170'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1724965393 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)%(x'')))>>(((0x4227ffae)|(0.5362606964032353)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-212533588'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '359162324 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1697137195 2 sz=-1529802192 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=454580306 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=340385603'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'b86f')) NOT BETWEEN ((x'')) AND ((x'ca21')))))>=(((- (x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1247167536 sz=-778664148'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST('1535333400' AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.4135320230092546)*('-652942939')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')-('')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((1.72636168E8) NOT BETWEEN (NULL) AND (x'94c3')))OR(UPPER(DISTINCT x''))))OR(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=1674399975 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 1028654941 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '-2051006921 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE MIN(((0x5adc9b11) BETWEEN ('2011712532') AND ('me')), x'' COLLATE RTRIM); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(x'' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-1481350386 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '2 -1336036754'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '-545328602 sz=-1334811548 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((load_extension(NULL, 0.9577633321915553)))<=(((('-1864233371') NOT NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-386555513 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=858790334 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'e(1mr\n뎪'  WHEN x'' THEN 0.512894075250849 ELSE '-1745636524' END) NOT BETWEEN (((((0.5228507731971189)AND('0.10104786240164687')))OR(''))) AND ((((NULL, x'', 0.12591123706461094, 'f㜃', x'bbb7'))=((x'', 0Xffffffffa2ae24cd, '-796529979', NULL, x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1232809965 sz=226652943 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9294483238154675) IS TRUE))==((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1718746998 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) IS TRUE) IN ((NOT (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1864233371 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=150167184 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-686112265 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('X(''d*' COLLATE BINARY)AND((+ (x'83bc')))))AND(CASE WHEN 0.7554117246628738 THEN NULL END)))AND(((((0X7d1949f6)AND('')))AND(0.8205477144939087)))))AND((('515084944') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('-2001616417')|(x'a936')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=1157019445 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=2096211193'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-72241936 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 2 sz=814219088 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-123192640 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-1333674721') NOT BETWEEN (0.3830157278525085) AND (0.13826631021611968)) AS TEXT); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=192225541 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-1954412758'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=1269617646 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=-895071632'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-639005498 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(SUBSTR(0.38028826367914437, 0.2618531457147092)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1117235358 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0x239f3bbd)OR(0.17540124721206285))))<>((((NULL) NOTNULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.17139160190109815 COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.3284487443005586)AND(x'')))OR(0.28865382423581254)))AND(NULL)))AND(0.37834512723634217)))>>(0.0047126578266044605)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((((((NULL)AND(x'')))OR(-5.08204417E8)))OR(NULL)))OR(NULL)) THEN ((0.6253415713563538)-(919778693)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1129172733'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) IS FALSE))OR((((0.43355564631947274))<>((x''))))))AND((('') NOT BETWEEN (0X31a40581) AND (NULL)))))OR(((x'e6d6')<>('')))))AND((('6')|(0.10104786240164687)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(UPPER(DISTINCT '1095828888') AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '-1536456367 sz=-262724857'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 3.17595914E8 THEN 'G{?' END)>=(((x'')LIKE(0.901766275721277)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=1716378944 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((+ (NULL)), LENGTH('')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD(NULL, 0.9083851921188791)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '2 sz=617064732 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(((x'')/(''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '37187057 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2093229029 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '646034004 0 sz=288377964'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8929341278016915) NOT NULL)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.010288217450899473)>=(0Xffffffffb9515a2c)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=275600527'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') IS FALSE) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '0 sz=1663678544 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '0 sz=2038574671'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1945139598 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '37187057'  WHEN -1342184210 THEN 0.15688236234327657 WHEN -164214914 THEN 0.36525808047799513 WHEN -2.001616417E9 THEN '-250523344' END) NOT BETWEEN ((+ ('f&'))) AND ((x'8431' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('!?U(\zB')IS(x'9f26')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-1946217797' THEN NULL WHEN x'' THEN x'dba4' WHEN 0.2809958905637894 THEN x'' WHEN NULL THEN '48640548' WHEN 'a' THEN NULL END)*('' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN (x'7105')))IS NOT((('424391495')=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
UPDATE OR ABORT t0 SET c0='p4!KO' WHERE DATETIME((~ (t0.c0)), CAST(t0.c0 AS TEXT), CAST(t0.c0 AS BLOB), ((t0.c0)+(t0.c0)), ((t0.c0)<(t0.c0)), (NOT (t0.c0)), t0.c0 COLLATE RTRIM, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0 COLLATE RTRIM); -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
UPDATE OR REPLACE t0 SET c0=x'e795' WHERE (~ (t0.c0)); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(0.5829514864785064, 0.17644844575409857) WHERE ((t0.c0 COLLATE NOCASE) BETWEEN ((NOT (t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (0.4393406229207184), (x''), ('vM)P淀\5'); -- 0ms;
UPDATE OR REPLACE t0 SET (c0, c0)=('-!4hq?l2', 0x35bdf768) WHERE ''; -- 0ms;
CREATE VIEW v0(c0, c1, c2, c3, c4) AS SELECT DENSE_RANK() OVER (), CASE t0.c0 COLLATE NOCASE  WHEN (((t0.c0))<((t0.c0))) THEN ((t0.c0)%(0.07039873286177178)) ELSE TOTAL(t0.c0) END, ((((t0.c0) ISNULL)) BETWEEN (((t0.c0) IS FALSE)) AND ((('')%(t0.c0)))), CAST(GROUP_CONCAT(t0.c0) AS TEXT), ((t0.c0)|(t0.c0)) COLLATE BINARY FROM t0; -- 1ms;
UPDATE OR ABORT t0 SET c0='K5'; -- 0ms;
UPDATE t0 SET c0=1.866335092E9, c0=NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=763469788 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=-1311397088'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '639767283'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=172636168 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TOTAL_CHANGES()) NOT BETWEEN ((+ (''))) AND (((x'')&(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') BETWEEN ('-2049365006') AND (''))  WHEN (('') NOT NULL) THEN (x'' IN ('-0.0', NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '424391495 sz=1767424110 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 'FjQ]F<x#' THEN NULL ELSE '706893667' END) NOTNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=-111960575 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '1010731172 sz=1176120970'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.1691008693589361, NULL, NULL)) NOT BETWEEN ((ROUND(x'', '-778664148'), ((0.37334389431801895) BETWEEN (x'') AND (NULL)), highlight('\,', NULL, '-647172285', x''))) AND ((CASE 1634434703  WHEN 'Juy	uCaZ' THEN 0.021864330413207567 END, CASE 0Xffffffffafb55aa2  WHEN NULL THEN x'c791' END, ((((((((NULL)AND(0.041567150391479846)))OR(NULL)))AND(x'')))OR(x'c4b3'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' sz=1866335092'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ' sz=1883089675 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-1311397088 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=1982971587 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x62fe5a57 IN (0.03425935692164361, x'')) IN (CAST(NULL AS BLOB), (x'149d' IN (0.3693380303183862, 0.19800580282963476)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1347069278') ISNULL)) NOT BETWEEN (-778664148) AND (0.9251961014561895 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((((((('133705698')AND(NULL)))AND(0.8962378852760606)))AND(NULL)))AND(0.8179113383845674)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1688374268 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('-1693068134') NOT BETWEEN ('-1595987438') AND (-1.185085975E9)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6768975553963028 COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (('S!IxL(' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' sz=371054509 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1678443216 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_type(((0xffffffff842f5973) IS FALSE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(SQLITE_VERSION()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=311117673 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('2098809334' AS INTEGER), (~ ('-1779509108')), ((NULL) NOT NULL)))=((((0Xffffffffcd3a9279)<(NULL)), ((NULL) BETWEEN (0xffffffffccb238e9) AND ('')), (NOT (0.4411592265593757))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=-985115210 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-652155463 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1704288983')) BETWEEN ((6.3942931E7)) AND (('1709249106'))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'2146')!=(x'60b6')))<((x'' IN (-5.1018896E8, 0xffffffffc7d1f869)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '0 -2036543654 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ' sz=1524407057'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-1076365922'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=-123192640 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'c03c'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' sz=-1662750260 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1490433368 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-206515788'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-382582064 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1185085975 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1028654941 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', '0 sz=1109917614 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-2051006921 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', '114015419 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.7519793413926802)OR(-851799431)))AND('1407711417')), (((0.2550686223447025, '780304261', 0.3219823844552405)) BETWEEN ((0.6819899117110629, x'83acdbbc', x'')) AND (('', -124723541, x''))), CAST(NULL AS BLOB)))<=((CASE 0.6768975553963028  WHEN '1947024712' THEN '-1305067713' END, (((('c')AND('-1370829487')))AND(x'')), CASE WHEN 'g' THEN 0x287e09cb WHEN x'' THEN NULL WHEN NULL THEN '#bv	' ELSE '' END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((x'90a1')) AND ((3.17595914E8))) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=1520824747'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=1381503771 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('AS' IN ()))<>(((0.4134110319469043)IS NOT(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) IS FALSE) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.3654618447684339)<>(x'')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '2 4 sz=-1775873818 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((((((((((('A>')AND(NULL)))OR(0xffffffff99c65564)))AND(0.34947470270396497)))AND(NULL)))OR(NULL)))OR(-1485847104)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=813052993'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '-2034754147 sz=1391918946'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1606201356 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-1662186528 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', '0 780304261 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((((1.72636168E8, x'f04ff374', NULL, x'4189', ''))<=((0.4185792840002277, 0.6462032766942098, x'', '-1533443236', x''))))AND(((0X10405a96) NOT BETWEEN ('r5') AND (NULL)))))AND(0.8276828907759708 COLLATE BINARY)))OR(CASE '1803186532'  WHEN x'c5df' THEN '-2014495187' ELSE '1476321232' END)))OR(((0.3533647018347391)+(x'')))))AND(x'351d7772' COLLATE NOCASE)))AND(((x'')IS('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', '-1246968632 sz=587208813'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=419661898 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '1202532928 sz=-1086778160 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=1947066157 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1609951905; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-6.39005498E8, 'Mr', x'')) NOT BETWEEN ((TRIM(DISTINCT '0.42464978171903467', 0Xffffffffcefb2a18), (((('jy~ ')AND(0.02308221723832804)))AND('-938490399')), ((((-736985236)OR(NULL)))AND('v,')))) AND ((0Xffffffffbda7062f COLLATE NOCASE, ((x'')>('2119838836')), (x'871c' IN (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.07763761615882081) BETWEEN (NULL) AND (x'4193'))))=((CAST('-1052367719' AS NUMERIC)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1525235644'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('919778693')) BETWEEN ((((-287612319)>=(NULL)))) AND (((('859596967') BETWEEN ('-1333674721') AND (0.49942743936920597))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.6595656978489329)IS NOT(x'')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')>=(NULL)), (((1.947024712E9))>=(('U0%P3'))), TRIM(DISTINCT NULL)))>=((((0.5494053055743159) NOTNULL), (NOT (NULL)), (((((((('1558705705')OR('Y')))AND(0.46158971755268907)))OR(NULL)))OR(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((' E(hJ)N')==(NULL))))<((CASE '<(9E%-J'  WHEN 0Xbe7e6bd THEN NULL WHEN x'57ae' THEN x'79af' WHEN 0.7323095424149778 THEN -2.086624905E9 ELSE 0.8936532255817347 END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.311397088E9)) BETWEEN ((((NULL) NOT NULL))) AND ((CASE NULL  WHEN x'' THEN 0x3e6bdc8 WHEN NULL THEN '0.7914781617093661' WHEN NULL THEN 0.13686937089555784 END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x'')) BETWEEN ((x'')) AND ((0.807013595632588)))  WHEN (((241856877))<>((x''))) THEN ((((0.5096234332182682)OR(x'')))OR('0.3653589234348993')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1249248408 0 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<=(x''))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('aFzc' IN (0.7914781617093661)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0Xffffffffa2e84965) IS FALSE))OR((((((((('')AND(NULL)))OR(-1052367719)))AND(NULL)))OR(NULL)))))OR((x'' IN ()))))OR(((x'') ISNULL))))OR(CAST(x'893d' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-1261683806 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '0 sz=551773560 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-1159111374 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN '1167653963' THEN '-1369067393' END  WHEN ((('ZPH&a')) NOT BETWEEN ((-545328602)) AND ((0.3511970250709274))) THEN (('gS罬ISY&F') ISNULL) ELSE CASE NULL  WHEN 0.0343523576524567 THEN x'' ELSE 0.07296561748364438 END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=287310927 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-633791644 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((2098809334)>(x''))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=-761873211 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.1267798925392234)OR((0.3692046262363723 IN (0.8621342807275456)))))OR((NULL IN (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=975559549 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=-1525824387 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-2036543654 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((0.8052322058881187, x'', NULL)) NOT BETWEEN ((x'14c6c3f6', '', 1.032510187E9)) AND ((x'', '-1885801985', 'i^YeyfJXA')))  WHEN (NOT (NULL)) THEN CASE ''  WHEN NULL THEN x'0ae9' END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'Lm*3\nqmA'  WHEN '[]' THEN 0.2176625672669752 ELSE 0.4134110319469043 END)LIKE(CASE '~L)贄z/w'  WHEN NULL THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(x'' AS BLOB)  WHEN 0.3505709462090364 COLLATE NOCASE THEN ((x'a89a') NOT BETWEEN ('weekday[k') AND (x'4dbf7587')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1334547664 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '0 sz=1286666297 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC))/((('')LIKE('-736985236')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-526050761 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-1833587815'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (json_array_length(x'', x'') IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(NULL AS TEXT))OR((x'ddfa' IN ()))))OR(0.29197098868496263 COLLATE RTRIM)))AND((+ (0.28878792169842016)))))AND((NULL IN (1.095828888E9, 0.270931926913913)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '0 sz=1071145341 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', '-1146944844 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS NUMERIC)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1701634766 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' sz=1496676283 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=-521123412 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-580330197 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LENGTH(0.7912394620968974))=(((-1.881856652E9) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '780304261 1780684632 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '2 0 sz=-1507710534 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((-264525756) NOT NULL) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '-1338503290 -1624831101 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=694692414 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') BETWEEN ('-770164875') AND (0.2343760659224714))  WHEN ((x'ea56') NOTNULL) THEN (x'' IN ('335072137')) ELSE 0.3654618447684339 COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1828444673 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-565110481 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1148686135 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' sz=115193644 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=1103877959 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.5000224090558504 AS NUMERIC) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(x'', x'9388'))+((((NULL)) BETWEEN ((0.7883616255533471)) AND (('me'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (NULL) AND (-1114936260)))>(((((0.9837549728265804)OR(NULL)))OR(x'94f9')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((NULL)) AND ((0.25824232101366695))) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x19869537)) BETWEEN ((NULLIF(0X3d50075d, '524694208'))) AND (((('0.7354598104907568')>(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-736985236 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=1285385954 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(CAST(x'' AS NUMERIC)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('PAuj')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', '2021246090 -736985236 sz=643124070 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, x'', x'72fb', 0x2fdcc77b, x'6ad1')) BETWEEN (((~ (0.5393649754596894)), COALESCE(NULL, '油0Y''(', x'', 0.7439247928928081), ((((0.7791865695438067)AND('*a䊑]ZHy鵖')))OR(x'')), (((-960483078)) NOT BETWEEN (('1702061088')) AND ((''))), (((NULL, 0.3692046262363723, 0x3d50075d))<(('t)', x'e86c', NULL))))) AND ((NULL, (((x'', '\ni', 0X5e74b55))>=((0.6032789308722025, x'', 0.6470184754469255))), CASE WHEN NULL THEN NULL ELSE NULL END, x'32f3', -422036886))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8760643715335653)LIKE(-2040871110))) BETWEEN (((x'9e31')*(x'd199'))) AND (CAST(x'' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=-351640531 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1319826239')IS('-652155463')))AND('-998554845' COLLATE BINARY)))AND((((((((((((('0')AND('-704653229')))OR('wW')))OR(x'')))AND('')))AND('')))OR('I6')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')) NOT BETWEEN (('-2051006921')) AND ((x'')))))<(((('0.5870616340687882')>=(-7.78664148E8))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '-210566407 -784349021'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((NULL))==((x'8b9a'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-508204417 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('Ge--' IN ()))<<(LIKELY(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '1970459042 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ' sz=-1348531678 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' sz=-143717023'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=155063057'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)-('-1742620655')))&(('1835600442' IN ('412968183')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'e1ba' COLLATE RTRIM)GLOB(LENGTH(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '0 sz=-2034161980'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' sz=-529648379 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-150979026)AND(x'')))AND(0.8251252270975504)))*(x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1206518185 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT NULL)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.3796591187634294 IN ()) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', '-2040871110 sz=1380606281'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-321586949 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '0 sz=13283863 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-592430627 sz=-1558621202'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-971183026'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9299727970535924; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1402679225'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=-701745405 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-2040871110'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS NUMERIC)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-2051458311 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=371054509 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=135817552 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1827661401 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) ISNULL) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((MIN('9솸', '')) BETWEEN (x'' COLLATE NOCASE) AND (((x'e2b3959f') BETWEEN (0Xffffffffae4acd51) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' sz=-1549927783'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1121163219') NOTNULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-641119670 306542088 sz=-1446027398 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ' sz=644787255 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=1476321232'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '1132489094 0 sz=1733776238 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '2 4 sz=-721022038'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1885801985 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=1600989293 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((1564989604)AND(CAST(x'4fa8' AS INTEGER))))AND(((1.032510187E9) ISNULL))))AND(((x'')LIKE(NULL)))))OR(((NULL) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=1540859271 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NULL IN ())  WHEN ((((((((NULL)OR(0.614085030560827)))AND('-508204417')))OR(NULL)))OR(NULL)) THEN ((('')) NOT BETWEEN ((0Xfffffffff9448605)) AND ((NULL))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', '0 sz=230898552'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1202992560 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' sz=-1055751358'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=821207717 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') BETWEEN (x'') AND (NULL)))OR((NULL IN ()))))OR(((((x'')OR(NULL)))AND('ᴛ')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('n/I6|U') NOT BETWEEN (SQLITE_COMPILEOPTION_GET('865068419')) AND (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '-688860742 -560817371'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((('0.618263109802098')AND(NULL)))OR(0.9306576725050956)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-1132465002 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xfffffffff8a83ac0) NOT NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3051867775554762) NOTNULL))>=(((0.0966899969358388)<<(0.5446062082981381)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(x'' AS BLOB) THEN (('pSm_6\B超') NOTNULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (-964443934))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '-1305067713 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', '-718706344 sz=1279343851'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('371054509' AS INTEGER)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' sz=443086553 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('163117077') BETWEEN (x'') AND ('-1827171611')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL))=(('1072405096'))))AND(((NULL)-('')))))OR(('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-780293245 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6910362869867751)) BETWEEN ((TRIM(0.6400437934094285, '.'))) AND (((('1715916189')==(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1634795724 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=706714227 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1332386249 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL)) BETWEEN (((((((((x'')OR('C굳\>o')))AND(0Xffffffffa090a12b)))AND(NULL)))OR('419378999'))) AND ('-1770754389' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '0 sz=1407711417 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-828862839 sz=-725243669 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')<=(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1836112196 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '-1967702526 166607641 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT (('I') BETWEEN ('Ja 	J') AND (0.17967505567203812))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', '-348695526', NULL)) BETWEEN ((('1475569506' IN ('')), CAST(1.947024712E9 AS TEXT), (~ ('1868489282')))) AND ((((x'd95c') ISNULL), (('0.42563528574608445')|('sHhꬠy	')), ((x'08cb') BETWEEN (0.8942481865114994) AND (0Xffffffffff0b8809))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')<('-2055960318')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '2 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '1095828888 -1329207459 sz=483221202 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' sz=494089542'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffffafb55aa2; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1864233371 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 0 sz=879112031 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((STRFTIME(x'a74f', x'', 7.06714227E8))) AND ((((NULL)==(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')>(0.09651846758668636)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 -985115210 sz=-1339492300'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'dc07' IN ())) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0xfffffffff1115130)OR(NULL)))OR(0.060731323238810475)))OR((('W') NOT BETWEEN (x'74e8') AND (0.4379122028097321)))))AND(0Xfffffffffee1e8d6 COLLATE BINARY)))OR((-1061980710 IN (NULL)))))AND(CAST('' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1524407057 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '2 sz=-736985236 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=2047503769 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '2012889650 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 sz=-901879538'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=-647172285 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'') ISNULL), ((NULL) NOT BETWEEN (x'18ce0d48') AND (0.17390138031767743)), ((0.9900927749324694)/(0X4078a673))))=((CAST(x'5dd3' AS REAL), ((-1.305067713E9) BETWEEN (0X19869537) AND (NULL)), (+ ('2097527152912717352 1099:629--248671561057723776-431 999T587 851:'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '2 617300721 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.41531526994665036) ISNULL))|((NULL IN (0.7409515385363956, '-1333674721')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('25329539')/(0.1942647396493875)))+(CASE x'bea3'  WHEN NULL THEN -126439250 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '-750909236 sz=-236578176 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE WHEN '1347456644' THEN '' WHEN '-609811570' THEN NULL WHEN '{\.i{Wq' THEN '37187057' ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB((NULL IN ()), ((NULL)*(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '1407711417 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NULL IN ()))OR(UPPER('63942931'))))AND((~ (0.2276445594693931)))))AND((((0xffffffffcd21bc88))>((0Xfffffffff400e1ae))))))OR(((NULL) NOT BETWEEN (306542088) AND ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '-1817422390'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=-761873211 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((0Xffffffffa9d88803))>=((0.5284846139721807))) THEN ((x'')IS NOT('X')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')+('')))IS((((((((((((('C*(*V\rn')AND(0.1699514927242659)))OR('-647172285')))AND(2.01288965E9)))AND('⤪+')))OR(NULL)))OR(0.11948489878263102)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' sz=2038087557 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('yC[l_6	is')<(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 -281651778 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=919778693 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.14382325876674695)AND('VR摧獺{8FP')))OR(1.683964561E9)))AND('')))AND(x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '63942931 sz=1697882551'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', '1028654941 0 sz=-1628128007 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=-1455463717 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ' sz=1883671758 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((((((((NULL)OR(x'')))AND('')))AND(NULL)))AND(x'0e54'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-712131619 sz=-576785661 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.3109873044284842)>=((((('Q⒙')OR(0.1396836261123121)))OR('-1726844959')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-521123412'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL)||(-1140424882)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN x'' THEN x'f49d' WHEN NULL THEN x'' WHEN '1072405096' THEN NULL WHEN x'' THEN 0.025945703639583595 WHEN -1.216288216E9 THEN 1003511842 ELSE '{I.א쁽J[' END)>(TYPEOF(''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('V0') NOT BETWEEN ('1279343851') AND (NULL))) BETWEEN (CASE 0.5849039781911286  WHEN x'd7a3' THEN 0.43257777994976065 ELSE NULL END) AND (CASE NULL  WHEN NULL THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' sz=265336927 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=2119280218 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', '0 984992375 sz=510770775 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.04794886324895031; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 -1185085975 sz=-1114925555 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'')AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(',kx4s?j' AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object(CAST(0.13452872489488255 AS NUMERIC), (('-1270884525')IS NOT('-417937531')), (((-1.185085975E9, NULL, 0.7094185219634956)) NOT BETWEEN (('%℅22XUx', 0xffffffffba292762, x'')) AND ((x'', NULL, NULL))), LOWER(DISTINCT NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' sz=-1475479588'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '0 sz=-2007703678'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1733776238 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' sz=-778664148'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' sz=-985115210'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((~ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=802998139'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)<(x'25e7')) THEN ((((x'')AND(0.8206726517322713)))OR(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '1814240694 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0X2376df1) NOT BETWEEN ('k\nXcYM') AND (NULL)) THEN CASE WHEN 0.8407427662657677 THEN NULL END WHEN ((NULL) NOT BETWEEN (NULL) AND ('-2051006921')) THEN ((1.820695343E9) NOTNULL) WHEN ((0.9123419774137078)%(0.5354709167591865)) THEN (~ (x'')) ELSE ('-1335676488' IN (x'cc29', '1706218175')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.5870616340687882)%(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', '0 -1958024761 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'30b4'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1656410823 sz=336197301 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=1326280426 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE LENGTH(NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ',R'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=1213115106 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=1202532928'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1638578362 1982971587 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1853762074'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' sz=-736985236 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-926782564 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-353728965 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('4j' AS INTEGER) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)GLOB('-647172285')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', '2 -1748611161 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=1596765325'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-123192640 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=-517014986 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-2036543654'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('Qn' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-701745405 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('cF')<=(0xffffffffcf164e1e))) BETWEEN ((((707419317)) BETWEEN ((0X7ab3af0b)) AND (('2146934669')))) AND (CASE NULL  WHEN '1562669347' THEN '1970791012' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=-2099807406 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')|('-672555418')))AND(((NULL)IS(NULL)))))AND(0.7930827264695861 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '-83268053 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('9-eｨ_Ux') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ('1954202969' IN ('901642088')) THEN ((x'd21c')%('1733776238')) ELSE (('-1140424882')OR(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '-1864233371'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-639005498'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('627383729' AS TEXT))>(((0.3640796266234746)=('-218704885')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')OR('2047503769')))OR(773807971))) BETWEEN (DATETIME('Y9IO)A', x'', 0.6861609867880234, x'', 0.9705867334258867)) AND (((NULL) NOT BETWEEN (0.659855182214648) AND ('')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', '-1642046080 sz=779269952 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(UNLIKELY('-1448305199')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-861022344' IN ('-1881856652'))) NOT BETWEEN (CASE WHEN x'35b1' THEN 0.7794285002058624 WHEN x'' THEN 'q' WHEN 0.4134110319469043 THEN x'' ELSE 0Xffffffff90e20e65 END) AND ((('1558705705') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-1340516266'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', '-701745405 sz=1265584207 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', '0 2 sz=-1736907990 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0Xfffffffff37302f9)&(NULL)))OR(CAST(NULL AS REAL))))OR(('I~w⥸w>裼' IN ()))))AND(((x'') NOT BETWEEN (x'') AND (0.7168834039733948)))))AND((~ ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1171708062 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=553531854 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-1827171611 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=644787255 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=839228494 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.2238411944514508, -456771968, '795649854')) BETWEEN ((0.3710952479514572 COLLATE RTRIM, CHANGES(), (x'4cf7' IN ()))) AND ((json_array_length(0X470592da, NULL), (((x''))=((0.7924916665882193))), ('2047503769' IN ())))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))<((-1.370829487E9))))+(LIKELIHOOD(DISTINCT NULL, 0.055881333542745604))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')*(x''))))<(((((NULL, '', x'f142')) NOT BETWEEN ((NULL, '802998139', NULL)) AND ((x'', x'', x'')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '424391495 2 sz=-614831161 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=262931717 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ' sz=1715916189 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=743792887'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '-1879574511 sz=-701745405 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.03975363289328859' IN ())) BETWEEN (CAST(NULL AS BLOB)) AND (((((NULL)AND('X')))OR('J縿')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR(((0.19091884781984803)>(0x226fb10d)))))OR(CASE WHEN 0xfffffffffcb37624 THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'fa67' COLLATE NOCASE) NOT BETWEEN ((((0.36620013838333987))>=((x'')))) AND (HEX('-786082192'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS('-2006748534' COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0Xffffffff88b1c1df)-(0.7374582719055989)))AND(((('m1')) BETWEEN (('-123192640')) AND ((''))))))OR((0.7171718827501253 IN ()))))AND((((0x3cfb113))>((x'fe88'))))))AND(((-5.08204417E8)OR(0.31957301834005636)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=2087749089 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '-678191833'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE ''  WHEN NULL THEN 0.4560067786212192 ELSE '-848769996' END)+((0.2326022188885889 IN ('a')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ('-647172285', '-2051006921')))||(CHANGES())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((-645841657)OR('133423748')))AND(0.14038642116521027)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=1267768019 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.5894044873666537)OR('%1\F')))AND(x'8887'))) BETWEEN ((NOT (0.7354598104907568))) AND (((('0.249254538327079')) BETWEEN ((NULL)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 1593944245 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0Xffffffffcdd75c9b) NOTNULL) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1171708062 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', '0 0 sz=-741674697 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (0.9344214900897618) AND (NULL))) NOT BETWEEN (x'9d22' COLLATE RTRIM) AND (((x'') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('/T') IS TRUE)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ' sz=-1426477734 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=-1185085975'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', '-1609683273 sz=-1885801985'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '0?Hk^'  WHEN '\nH' THEN x'd5ed' WHEN '-101202329' THEN x'' WHEN 0.48631648374170966 THEN x'4cad' ELSE '1674399975' END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(NULL)))OR(NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' sz=-1881856652'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (NULL)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=-1860412842 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE WHEN '' THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-965593425 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ' sz=-1357734299 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE WHEN x'730a' THEN 665724305 WHEN '' THEN '' WHEN NULL THEN '' ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', '0 -1415542385 sz=-336231586 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'267a' COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS((('780304261')>('-1140424882'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-2064321002'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' sz=-1507710534 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-2103653007 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=2011758285 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0xffffffffb1748e1a)IS NOT('317595914')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('-371397737', x'', x'', x'', x''))==((-101202329, NULL, x'', x'', NULL))))AND((('J.')||('!ꃍDJWMEQ0')))))AND((NOT ('435107882')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(1.109917614E9 AS REAL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '377257373 1209871659 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-1507710534 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=851311668 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' sz=-73834970 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1545882010 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOT BETWEEN ('5aBmG.') AND (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -5.45328602E8 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_valid(CAST(x'3e2d' AS TEXT)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((NULL)AND(x'')))OR(NULL)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-472741813'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=1869914898 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('m88' IN (''))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '-1185085975'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)!=('')))GLOB(UPPER(DISTINCT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '278690863'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1407711417'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')+((+ ('147264241')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '0 sz=798727037'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=707962300'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-61022559 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=-171365370 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '-765798256 sz=-1767147211'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((DATE('C\r', 0.08067391754106945, -395264737))AND(NULL)))AND((0X65dcd088 IN ('948346974', 0Xffffffffbba2b2f3)))))AND((- (x'')))))OR((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '2 sz=-1674208634'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1095828888'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '-761873211 sz=403826459 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(MAX(x'', 0xffffffffc54855b6, '-1445427197', NULL) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=1674399975 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-510188960 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '713288718 0 sz=871021443 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-371187043'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR('519398810')))==((- (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.4949584679687544))>((x'b4ad'))) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((-1.305067713E9) NOT BETWEEN (0.3161962244766996) AND (0Xffffffffb5d2097f))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1148782533 791165207 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('z,⒙2')OR((~ (-2040871110)))))OR((NULL IN ('s')))))OR(CASE x'd2c00731'  WHEN -123192640 THEN 0.7778710619215801 WHEN NULL THEN x'' WHEN 1.820695343E9 THEN 0.7953575566394482 WHEN -971183026 THEN '' WHEN 0.2732347358249544 THEN NULL ELSE 0.8301412661157347 END)))OR(((x'')IS('.wh')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL)) NOT BETWEEN ((1305148456)) AND ((NULL))) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' sz=-492075750 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=1927969288 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'c656' AS REAL) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '0 sz=-411301891 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' sz=-1347069278 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '0 2 sz=-1305067713 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((+ (NULL))))<((CASE WHEN 2005326108 THEN 0.7755016233526196 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1030111229 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', '2 457677832 sz=-956622431 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=416123927 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS TEXT) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-736985236 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' sz=-1493496898 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '-2015947544 sz=-272525128 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('[⺁⃈*w5i')) NOT BETWEEN ((UPPER(NULL))) AND (((((NULL, NULL, NULL)) BETWEEN ((0.9506626706805007, 0.8277246945476809, 0.6952221535561112)) AND ((-1.185085975E9, x'08f2', 2.047503769E9)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '0 -500544843 sz=2011578179 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '1617696159'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'5d04' IN ())))<=((((0.26515260691746656) BETWEEN ('쇟d') AND (0.8598719061955998))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-135189646 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' sz=2029653777 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '2 2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS REAL)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=535929445'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.6605485574304899)<<(0.04320136398863195)))OR(0.752690371418424 COLLATE NOCASE)))OR((NOT (0.9022558186592212)))))OR(0.14187700406132742)))AND(((NULL)-(x'38eb')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-652155463 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('G6')AND((- ('-1140424882')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '0 sz=1913417628 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1674399975 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (-1.35189646E8)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.13460632493022506 IN ((('2012889650') BETWEEN ('.%T''.t(਄|)') AND (-433999523)), ((-5.21123412E8) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-560817371'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-2074670630 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json((('Q0䈲^Y<0m') NOT BETWEEN (x'') AND (0.27350316310656086))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '38394902'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-1387240422'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(x'')) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.9967508658627241)OR(NULL)))AND(NULL)))IS NOT((((NULL))>=((0x13239153))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-508429117 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '416123927 0 0 sz=1674399975 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '0 sz=1820695343 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1757786645 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', ' sz=-1555140894 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-808688687 sz=-135189646 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=46430661 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('')AND(((NULL)LIKE(0.6890392819684663)))))OR((- (NULL)))))AND(CASE WHEN 'N81\r' THEN x'' WHEN '644787255' THEN x'' WHEN '' THEN NULL ELSE '-1463981872' END)))AND(CASE WHEN 0.5528791449176121 THEN 'oy' WHEN ' tA/-?' THEN ',kx4s?j' WHEN 0.9979732234399104 THEN 1.558705705E9 ELSE 0.9366784599519224 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-838935565 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=-1680418579 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' sz=1775726741'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (x'7daf'))))==((((NULL)IS NOT(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL)!=(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'9b02'))=((0.7777594121191346))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=963617360 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('N堥j''')OR('7._SW')))AND('0VQ^{cS\')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1338503290 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((('<KN|yQ', '-1881856652', NULL)) NOT BETWEEN ((1945659418, 0.9200097098990085, NULL)) AND ((x'e72e', x'', 0x35bdf768))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', '0 0 sz=373283728'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1429010664 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', '306542088 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') BETWEEN (NULL) AND (0.7226167385333784))  WHEN ((('TN*pSuq', '', NULL))>=(('428250423', 'x', '-1483218993'))) THEN ((-203639658)OR(x'')) ELSE (NOT (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=-296298187 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1124783937 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1028654941'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)<('1e500')) IN (((x'') NOT BETWEEN ('-701745405') AND ('>')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((HEX(0.7178280950490492))AND((NULL IN ()))))AND(((((x'')OR(0.20080070145222872)))AND(0.30426754147078194)))))OR(CAST(0.273681620189445 AS REAL))))AND('-2051006921' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-701745405 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL))>=(((x'0416')<(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=1298565121'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', '0 -1908982395 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-237991299 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT '424391495', CAST(0.1211702697725453 AS BLOB)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', '1310676480 sz=-2131248163 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1559831447')<(NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_extract(NULL, '1982971587', 'Q᢭J', NULL))+(((NULL)OR(0.4784403314651583)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8027966004992013; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i47', '-1466941145 sz=416123927 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=1194340354'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-617846472 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=-1218897543 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT NULL))IS NOT('>4LP')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '2 1948446007 sz=2016200883'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=941666277 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=2143389530 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'b19a') IS FALSE))|(CAST(-4.22036886E8 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((0Xa4a3808)AND('-560817371')))AND(x''))  WHEN CAST(NULL AS BLOB) THEN ((((-1833587815)AND(NULL)))AND(0.6258497598409728)) WHEN TRIM('a쏹2氍') THEN x'' WHEN ((((0.46660363949567485)AND(',Ht2\nkK?_')))OR('')) THEN -1.908982395E9 ELSE CASE WHEN 0.11470385259436022 THEN 'kq]P5lVs' WHEN NULL THEN '|9N>/' WHEN NULL THEN NULL ELSE '	Re' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', '-1823457705 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE HEX(NULL)  WHEN ((NULL)<('0.9123682720228697')) THEN CASE WHEN NULL THEN '-1726276555' ELSE 0xffffffffd920e5b9 END WHEN (~ (x'3afe')) THEN NULL WHEN TIME('-1052367719', 490540770, 0xffffffff9f1802b9) THEN CASE WHEN '-1305067713' THEN NULL ELSE 'r㔙' END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') BETWEEN ('-893520059') AND (CAST(0.15006011696419574 AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 -971183026 sz=-1496792634'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '0 sz=2098955162 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE 'AqN'  WHEN 'NxD|{v5' THEN 'FALSE' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('wt')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ' sz=-422036886 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9697411507457874) NOT BETWEEN (COALESCE('1942480394', x'')) AND ((3.06542088E8 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.5485511640596423)-('-1827171611')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'')AND(x'')))OR(0.2999733274249661)))OR('-1438589395')))OR(NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-971183026 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', '-410657954 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NOT (0xfffffffffe2349c5)))OR((0.2488945498999846 IN ()))))OR((((NULL))<=((0.059476636918714076))))))OR(-5.21123412E8)))AND((+ ('-885891746')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=-1674208634 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=327442961 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS TEXT) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', ' sz=1002521381 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7271929050556684; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-0.0)>(x'')) COLLATE RTRIM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=-776808813 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((((((((NULL)OR(NULL)))AND(2.078594503E9)))AND('+4溫rv')))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'3af85832' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=780304261'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=1675342752'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'5d77')LIKE('0.8363818024301637')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=-560817371 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-927917369'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', ' sz=901642088 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('') NOT BETWEEN ('-210566407') AND ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i47', ' sz=-444434564 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i42', '442942016 2 sz=424391495 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i51', ' sz=76099667 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(CASE WHEN NULL THEN 0.00882400409455697 END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=554911374 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i51', '-985115210 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9433531290963192, NULL, NULL)) NOT BETWEEN ((ABS(DISTINCT 0.3484135333566071), (NOT ('0.1321492888548731')), (NOT (x'c58a')))) AND (((x'722e' IN ()), TRIM(DISTINCT 739415597), (((-1976994320)) NOT BETWEEN (('-985115210')) AND ((x'a619')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'i42', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=1971738843 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'')||(0.7889991079314578))  WHEN (NOT ('-213623468')) THEN (('-1827171611') NOT BETWEEN (x'') AND (0.8680003172848303)) WHEN (0.7579696336353388 IN ()) THEN (NULL IN (x'9ff367e9')) WHEN LIKE(0.1396836261123121, '0.5792989698258041', 'J') THEN ((((((((x'a7f0')AND(x'')))AND('')))OR(NULL)))OR('m')) WHEN ((((((((0.7006173570407472)AND(0.5001339670289963)))AND(1.92225541E8)))OR('0.48251203345260907')))AND(0.09323240390651699)) THEN ((x'') IS TRUE) WHEN ((x'') NOTNULL) THEN CAST('-405907715' AS NUMERIC) ELSE (('') IS TRUE) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.6582053723927865  WHEN 0.20575485248819902 THEN 279773529 WHEN 0.11170609389015695 THEN '687858986' WHEN NULL THEN x'' ELSE -1.2319264E8 END)IS(TRIM('901642088', 0.45095463725397544))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-2052712363 -517905777 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '_4'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR ABORT INTO t0 VALUES (NULL), (NULL), (((CHAR(NULL)) BETWEEN (CAST(NULL AS TEXT)) AND (CAST(0.3648078943572398 AS NUMERIC)))); -- 0ms;
DROP INDEX "i51"; -- 0ms;
PRAGMA temp.soft_heap_limit = 3550122333315752739; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'b2c1', c0=0.7841469176425109; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.7912394620968974, c0=NULL; -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA busy_timeout; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1, , columnsize=0); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c96; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO t0(c96) VALUES (x''); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
ANALYZE v0; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (-1.01202329E8); -- 0ms;
UPDATE vt0 SET (c1)=(x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES (NULL); -- 1ms;
UPDATE OR IGNORE vt0 SET c0='-1951357531', c1=x'4d24' WHERE (+ (vt0.c0)) COLLATE BINARY; -- 0ms;
CREATE INDEX i52 ON t0(c96); -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
UPDATE OR FAIL t0 SET c96=NULL; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(x'') WHERE UPPER(DISTINCT ((vt0.c1)<<(vt0.c0))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=4'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'', c1=0xffffffffbc60e711; -- 1ms;
CREATE TEMP TABLE t1 (c0 INT ); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0x266d209c WHERE ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (vt0.c0) AND (vt0.c1 COLLATE BINARY)); -- 1ms;
PRAGMA temp.foreign_keys = false; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (x''), (NULL), ('1951003697'), (x''), ('P'); -- 0ms;
UPDATE t1 SET (c0)=('') WHERE CASE WHEN ((t1.c0)|(t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c0 ELSE NULL END ELSE (((t1.c0))<((t1.c0))) END; -- 0ms;
UPDATE vt0 SET c0=0.3918020332446174 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<<(vt0.c0 COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=('-9566958'); -- 0ms;
DROP TABLE vt0; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM v0, t1, t0 WHERE (DATETIME(t0.c96, ((v0.c2) NOT NULL), ((t1.c0)*('0.5393649754596894'))));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(t0.c96, ((v0.c2) NOT NULL), ((t1.c0)*('0.5393649754596894')))) IS TRUE)  as count FROM v0, t1, t0);
SELECT * FROM v0, t1, t0 WHERE (DATETIME(t0.c96, ((v0.c2) NOT NULL), ((t1.c0)*('0.5393649754596894'))));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(t0.c96, ((v0.c2) NOT NULL), ((t1.c0)*('0.5393649754596894')))) IS TRUE)  as count FROM v0, t1, t0);
SELECT * FROM v0, t1, t0 WHERE (DATETIME(t0.c96, ((v0.c2) NOT NULL), ((t1.c0)*('0.5393649754596894'))));
SELECT COUNT(*) FROM v0 WHERE (((('-1674208634'))=((CAST(v0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL ((((('-1674208634'))==((CAST(v0.c0 AS REAL))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((('-1674208634'))=((CAST(v0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL ((((('-1674208634'))==((CAST(v0.c0 AS REAL))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((('-1674208634'))=((CAST(v0.c0 AS REAL)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (CAST(v0.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(v0.c3 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (CAST(v0.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(v0.c3 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (CAST(v0.c3 AS BLOB))));
SELECT * FROM t0 WHERE ((((t0.c96 IN (t0.c96))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((t0.c96 IN (t0.c96))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c96 IN (t0.c96))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((t0.c96 IN (t0.c96))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c96 IN (t0.c96))) ISNULL));
SELECT * FROM v0, t1, t0 WHERE ((('0.6106906135137393' COLLATE NOCASE) ISNULL)) ORDER BY (((((((((v0.c4)OR(0.9399717925531604)))OR(t1.c0)))OR(v0.c1)))OR(NULL)) IN ()) DESC, ((v0.c0 IN (t1.c0)) IN (((((t0.c96)OR(v0.c1)))OR(v0.c3)))), ((v0.c1)&(t0.c96)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('0.6106906135137393' COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM v0, t1, t0 ORDER BY (((((((((v0.c4)OR(0.9399717925531604)))OR(t1.c0)))OR(v0.c1)))OR(NULL)) IN ()) DESC, ((v0.c0 IN (t1.c0)) IN (((((t0.c96)OR(v0.c1)))OR(v0.c3)))), ((v0.c1)&(t0.c96)) COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM v0, t1, t0 WHERE ((('0.6106906135137393' COLLATE NOCASE) ISNULL)) ORDER BY (((((((((v0.c4)OR(0.9399717925531604)))OR(t1.c0)))OR(v0.c1)))OR(NULL)) IN ()) DESC, ((v0.c0 IN (t1.c0)) IN (((((t0.c96)OR(v0.c1)))OR(v0.c3)))), ((v0.c1)&(t0.c96)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('0.6106906135137393' COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM v0, t1, t0 ORDER BY (((((((((v0.c4)OR(0.9399717925531604)))OR(t1.c0)))OR(v0.c1)))OR(NULL)) IN ()) DESC, ((v0.c0 IN (t1.c0)) IN (((((t0.c96)OR(v0.c1)))OR(v0.c3)))), ((v0.c1)&(t0.c96)) COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM v0, t1, t0 WHERE ((('0.6106906135137393' COLLATE NOCASE) ISNULL)) ORDER BY (((((((((v0.c4)OR(0.9399717925531604)))OR(t1.c0)))OR(v0.c1)))OR(NULL)) IN ()) DESC, ((v0.c0 IN (t1.c0)) IN (((((t0.c96)OR(v0.c1)))OR(v0.c3)))), ((v0.c1)&(t0.c96)) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, v0 WHERE (UPPER(DISTINCT (((v0.c4)) NOT BETWEEN ((t1.c0)) AND ((v0.c1))))) ORDER BY (CASE v0.c2  WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (((v0.c4)) NOT BETWEEN ((t1.c0)) AND ((v0.c1))))) IS TRUE)  as count FROM t1, v0 ORDER BY (CASE v0.c2  WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (UPPER(DISTINCT (((v0.c4)) NOT BETWEEN ((t1.c0)) AND ((v0.c1))))) ORDER BY (CASE v0.c2  WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (((v0.c4)) NOT BETWEEN ((t1.c0)) AND ((v0.c1))))) IS TRUE)  as count FROM t1, v0 ORDER BY (CASE v0.c2  WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (UPPER(DISTINCT (((v0.c4)) NOT BETWEEN ((t1.c0)) AND ((v0.c1))))) ORDER BY (CASE v0.c2  WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((v0.c3) NOT BETWEEN (v0.c4) AND (v0.c4)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c3) NOT BETWEEN (v0.c4) AND (v0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c3) NOT BETWEEN (v0.c4) AND (v0.c4)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c3) NOT BETWEEN (v0.c4) AND (v0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c3) NOT BETWEEN (v0.c4) AND (v0.c4)) COLLATE NOCASE);
SELECT * FROM t0, t1 WHERE ('*T') ORDER BY ((t1.c0 COLLATE RTRIM)IS NOT((+ ('0.7790759432442008'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('*T') IS TRUE)  as count FROM t0, t1 ORDER BY ((t1.c0 COLLATE RTRIM)IS NOT((+ ('0.7790759432442008'))))  NULLS LAST);
SELECT * FROM t0, t1 WHERE ('*T') ORDER BY ((t1.c0 COLLATE RTRIM)IS NOT((+ ('0.7790759432442008'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('*T') IS TRUE)  as count FROM t0, t1 ORDER BY ((t1.c0 COLLATE RTRIM)IS NOT((+ ('0.7790759432442008'))))  NULLS LAST);
SELECT * FROM t0, t1 WHERE ('*T') ORDER BY ((t1.c0 COLLATE RTRIM)IS NOT((+ ('0.7790759432442008'))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((((t1.c0)<=(t1.c0)))) AND ((CASE WHEN t1.c0 THEN t1.c0 END)))) ORDER BY t1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN ((((t1.c0)<=(t1.c0)))) AND ((CASE WHEN t1.c0 THEN t1.c0 END)))) IS TRUE)  as count FROM t1 ORDER BY t1.c0 DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((((t1.c0)<=(t1.c0)))) AND ((CASE WHEN t1.c0 THEN t1.c0 END)))) ORDER BY t1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN ((((t1.c0)<=(t1.c0)))) AND ((CASE WHEN t1.c0 THEN t1.c0 END)))) IS TRUE)  as count FROM t1 ORDER BY t1.c0 DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((((t1.c0)<=(t1.c0)))) AND ((CASE WHEN t1.c0 THEN t1.c0 END)))) ORDER BY t1.c0 DESC  NULLS LAST;
SELECT * FROM v0, t0 INNER JOIN t1 ON ((v0.c0) IS FALSE) COLLATE BINARY WHERE ((((v0.c3)|(t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c3)|(t1.c0)) IN ())) IS TRUE)  as count FROM v0, t0 INNER JOIN t1 ON ((v0.c0) IS FALSE) COLLATE BINARY);
SELECT * FROM v0, t0 INNER JOIN t1 ON ((v0.c0) IS FALSE) COLLATE BINARY WHERE ((((v0.c3)|(t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c3)|(t1.c0)) IN ())) IS TRUE)  as count FROM v0, t0 INNER JOIN t1 ON ((v0.c0) IS FALSE) COLLATE BINARY);
SELECT * FROM v0, t0 INNER JOIN t1 ON ((v0.c0) IS FALSE) COLLATE BINARY WHERE ((((v0.c3)|(t1.c0)) IN ()));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN t0 ON ((((((v0.c3)AND(v0.c3)))OR(v0.c0))) BETWEEN (((((v0.c0)OR(v0.c4)))AND(v0.c3))) AND ((- (v0.c1)))) CROSS JOIN v0 ON ((((v0.c2)/(t1.c0)))<=((~ (v0.c2)))) WHERE ((((v0.c2)) BETWEEN ((((v0.c2) NOTNULL))) AND ((((v0.c0)GLOB(v0.c1)))))) ORDER BY ((((((v0.c1)>=(v0.c2)))OR((((v0.c3))<=((v0.c3))))))AND((v0.c4 IN (t1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) BETWEEN ((((v0.c2) NOTNULL))) AND ((((v0.c0)GLOB(v0.c1)))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON ((((((v0.c3)AND(v0.c3)))OR(v0.c0))) BETWEEN (((((v0.c0)OR(v0.c4)))AND(v0.c3))) AND ((- (v0.c1)))) CROSS JOIN v0 ON ((((v0.c2)/(t1.c0)))<=((~ (v0.c2)))) ORDER BY ((((((v0.c1)>=(v0.c2)))OR((((v0.c3))<=((v0.c3))))))AND((v0.c4 IN (t1.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN t0 ON ((((((v0.c3)AND(v0.c3)))OR(v0.c0))) BETWEEN (((((v0.c0)OR(v0.c4)))AND(v0.c3))) AND ((- (v0.c1)))) CROSS JOIN v0 ON ((((v0.c2)/(t1.c0)))<=((~ (v0.c2)))) WHERE ((((v0.c2)) BETWEEN ((((v0.c2) NOTNULL))) AND ((((v0.c0)GLOB(v0.c1)))))) ORDER BY ((((((v0.c1)>=(v0.c2)))OR((((v0.c3))<=((v0.c3))))))AND((v0.c4 IN (t1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) BETWEEN ((((v0.c2) NOTNULL))) AND ((((v0.c0)GLOB(v0.c1)))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON ((((((v0.c3)AND(v0.c3)))OR(v0.c0))) BETWEEN (((((v0.c0)OR(v0.c4)))AND(v0.c3))) AND ((- (v0.c1)))) CROSS JOIN v0 ON ((((v0.c2)/(t1.c0)))<=((~ (v0.c2)))) ORDER BY ((((((v0.c1)>=(v0.c2)))OR((((v0.c3))<=((v0.c3))))))AND((v0.c4 IN (t1.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 NATURAL JOIN t1 WHERE (((((('U᫡')) BETWEEN ((v0.c3)) AND ((t1.c0))))>=(json_insert(t0.c96, v0.c2, v0.c3)))) ORDER BY (((v0.c3 IN ()))>((t1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((('U᫡')) BETWEEN ((v0.c3)) AND ((t1.c0))))>=(json_insert(t0.c96, v0.c2, v0.c3)))) IS TRUE)  as count FROM v0, t0 NATURAL JOIN t1 ORDER BY (((v0.c3 IN ()))>((t1.c0 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 NATURAL JOIN t1 WHERE (((((('U᫡')) BETWEEN ((v0.c3)) AND ((t1.c0))))>=(json_insert(t0.c96, v0.c2, v0.c3)))) ORDER BY (((v0.c3 IN ()))>((t1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((('U᫡')) BETWEEN ((v0.c3)) AND ((t1.c0))))>=(json_insert(t0.c96, v0.c2, v0.c3)))) IS TRUE)  as count FROM v0, t0 NATURAL JOIN t1 ORDER BY (((v0.c3 IN ()))>((t1.c0 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 NATURAL JOIN t1 WHERE (((((('U᫡')) BETWEEN ((v0.c3)) AND ((t1.c0))))>=(json_insert(t0.c96, v0.c2, v0.c3)))) ORDER BY (((v0.c3 IN ()))>((t1.c0 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON CAST((NOT (v0.c4)) AS BLOB) RIGHT OUTER JOIN t1 ON NULL WHERE (0.9637165831309839) ORDER BY ((((v0.c3) BETWEEN (t0.c96) AND (v0.c4)))<<((((v0.c3, v0.c0, 0.20406748667509111)) BETWEEN ((v0.c2, v0.c3, v0.c1)) AND ((v0.c2, v0.c1, t0.c96)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.9637165831309839) IS TRUE)  as count FROM v0 INNER JOIN t0 ON CAST((NOT (v0.c4)) AS BLOB) RIGHT OUTER JOIN t1 ON NULL ORDER BY ((((v0.c3) BETWEEN (t0.c96) AND (v0.c4)))<<((((v0.c3, v0.c0, 0.20406748667509111)) BETWEEN ((v0.c2, v0.c3, v0.c1)) AND ((v0.c2, v0.c1, t0.c96)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON CAST((NOT (v0.c4)) AS BLOB) RIGHT OUTER JOIN t1 ON NULL WHERE (0.9637165831309839) ORDER BY ((((v0.c3) BETWEEN (t0.c96) AND (v0.c4)))<<((((v0.c3, v0.c0, 0.20406748667509111)) BETWEEN ((v0.c2, v0.c3, v0.c1)) AND ((v0.c2, v0.c1, t0.c96)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.9637165831309839) IS TRUE)  as count FROM v0 INNER JOIN t0 ON CAST((NOT (v0.c4)) AS BLOB) RIGHT OUTER JOIN t1 ON NULL ORDER BY ((((v0.c3) BETWEEN (t0.c96) AND (v0.c4)))<<((((v0.c3, v0.c0, 0.20406748667509111)) BETWEEN ((v0.c2, v0.c3, v0.c1)) AND ((v0.c2, v0.c1, t0.c96)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON CAST((NOT (v0.c4)) AS BLOB) RIGHT OUTER JOIN t1 ON NULL WHERE (0.9637165831309839) ORDER BY ((((v0.c3) BETWEEN (t0.c96) AND (v0.c4)))<<((((v0.c3, v0.c0, 0.20406748667509111)) BETWEEN ((v0.c2, v0.c3, v0.c1)) AND ((v0.c2, v0.c1, t0.c96)))))  NULLS FIRST;
SELECT * FROM v0 FULL OUTER JOIN t0 ON (((('b㵷hym6')>(v0.c4)))>>(TRIM(DISTINCT t0.c96, t1.c0))) INNER JOIN t1 ON ((((v0.c1)!=(t0.c96)))*(NULL)) WHERE (((((v0.c2)<>(v0.c4))) BETWEEN ((x'' IN (v0.c2))) AND (json_valid(t1.c0)))) ORDER BY (v0.c4 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)<>(v0.c4))) BETWEEN ((x'' IN (v0.c2))) AND (json_valid(t1.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON (((('b㵷hym6')>(v0.c4)))>>(TRIM(DISTINCT t0.c96, t1.c0))) INNER JOIN t1 ON ((((v0.c1)!=(t0.c96)))*(NULL)) ORDER BY (v0.c4 IN ()) COLLATE BINARY ASC);
SELECT * FROM v0 FULL OUTER JOIN t0 ON (((('b㵷hym6')>(v0.c4)))>>(TRIM(DISTINCT t0.c96, t1.c0))) INNER JOIN t1 ON ((((v0.c1)!=(t0.c96)))*(NULL)) WHERE (((((v0.c2)<>(v0.c4))) BETWEEN ((x'' IN (v0.c2))) AND (json_valid(t1.c0)))) ORDER BY (v0.c4 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)<>(v0.c4))) BETWEEN ((x'' IN (v0.c2))) AND (json_valid(t1.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON (((('b㵷hym6')>(v0.c4)))>>(TRIM(DISTINCT t0.c96, t1.c0))) INNER JOIN t1 ON ((((v0.c1)!=(t0.c96)))*(NULL)) ORDER BY (v0.c4 IN ()) COLLATE BINARY ASC);
SELECT * FROM t0, v0, t1 WHERE ((((v0.c0 COLLATE BINARY))!=((((v0.c2)<=(t0.c96))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 COLLATE BINARY))<>((((v0.c2)<=(t0.c96)))))) IS TRUE)  as count FROM t0, v0, t1);
SELECT * FROM t0, v0, t1 WHERE ((((v0.c0 COLLATE BINARY))!=((((v0.c2)<=(t0.c96))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 COLLATE BINARY))<>((((v0.c2)<=(t0.c96)))))) IS TRUE)  as count FROM t0, v0, t1);
SELECT * FROM t0, v0, t1 WHERE ((((v0.c0 COLLATE BINARY))!=((((v0.c2)<=(t0.c96))))));
SELECT ALL * FROM t1 LEFT OUTER JOIN t0 ON ((t0.c96 COLLATE BINARY) BETWEEN ((((t0.c96)) BETWEEN ((x'')) AND ((t1.c0)))) AND (CAST(t1.c0 AS TEXT))) WHERE (((DATETIME(t1.c0, t0.c96, t1.c0)) NOT BETWEEN (((t1.c0) IS FALSE)) AND (((x'') BETWEEN (t0.c96) AND (t0.c96)))));
SELECT SUM(count) FROM (SELECT ((((DATETIME(t1.c0, t0.c96, t1.c0)) NOT BETWEEN (((t1.c0) IS FALSE)) AND (((x'') BETWEEN (t0.c96) AND (t0.c96))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON ((t0.c96 COLLATE BINARY) BETWEEN ((((t0.c96)) BETWEEN ((x'')) AND ((t1.c0)))) AND (CAST(t1.c0 AS TEXT))));
SELECT ALL * FROM t1 LEFT OUTER JOIN t0 ON ((t0.c96 COLLATE BINARY) BETWEEN ((((t0.c96)) BETWEEN ((x'')) AND ((t1.c0)))) AND (CAST(t1.c0 AS TEXT))) WHERE (((DATETIME(t1.c0, t0.c96, t1.c0)) NOT BETWEEN (((t1.c0) IS FALSE)) AND (((x'') BETWEEN (t0.c96) AND (t0.c96)))));
SELECT SUM(count) FROM (SELECT ((((DATETIME(t1.c0, t0.c96, t1.c0)) NOT BETWEEN (((t1.c0) IS FALSE)) AND (((x'') BETWEEN (t0.c96) AND (t0.c96))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON ((t0.c96 COLLATE BINARY) BETWEEN ((((t0.c96)) BETWEEN ((x'')) AND ((t1.c0)))) AND (CAST(t1.c0 AS TEXT))));
SELECT ALL * FROM t1 LEFT OUTER JOIN t0 ON ((t0.c96 COLLATE BINARY) BETWEEN ((((t0.c96)) BETWEEN ((x'')) AND ((t1.c0)))) AND (CAST(t1.c0 AS TEXT))) WHERE (((DATETIME(t1.c0, t0.c96, t1.c0)) NOT BETWEEN (((t1.c0) IS FALSE)) AND (((x'') BETWEEN (t0.c96) AND (t0.c96)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c96) ISNULL)) ORDER BY ((((CAST(t0.c96 AS REAL))AND(CASE WHEN t0.c96 THEN t0.c96 WHEN 0.7024665444027621 THEN t0.c96 WHEN x'' THEN t0.c96 ELSE t0.c96 END)))AND(CASE t0.c96  WHEN t0.c96 THEN x'b475' END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c96) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((CAST(t0.c96 AS REAL))AND(CASE WHEN t0.c96 THEN t0.c96 WHEN 0.7024665444027621 THEN t0.c96 WHEN x'' THEN t0.c96 ELSE t0.c96 END)))AND(CASE t0.c96  WHEN t0.c96 THEN x'b475' END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c96) ISNULL)) ORDER BY ((((CAST(t0.c96 AS REAL))AND(CASE WHEN t0.c96 THEN t0.c96 WHEN 0.7024665444027621 THEN t0.c96 WHEN x'' THEN t0.c96 ELSE t0.c96 END)))AND(CASE t0.c96  WHEN t0.c96 THEN x'b475' END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c96) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((CAST(t0.c96 AS REAL))AND(CASE WHEN t0.c96 THEN t0.c96 WHEN 0.7024665444027621 THEN t0.c96 WHEN x'' THEN t0.c96 ELSE t0.c96 END)))AND(CASE t0.c96  WHEN t0.c96 THEN x'b475' END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c96) ISNULL)) ORDER BY ((((CAST(t0.c96 AS REAL))AND(CASE WHEN t0.c96 THEN t0.c96 WHEN 0.7024665444027621 THEN t0.c96 WHEN x'' THEN t0.c96 ELSE t0.c96 END)))AND(CASE t0.c96  WHEN t0.c96 THEN x'b475' END))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((t1.c0 IN ()))AND(t1.c0 COLLATE NOCASE)))OR(t1.c0)))OR(CAST(t1.c0 AS REAL))))OR(CHANGES()))) ORDER BY t1.c0 ASC, ((((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(((t1.c0)AND(t1.c0)))))OR(CAST(t1.c0 AS BLOB))))OR((t1.c0 IN ()))))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END));
SELECT SUM(count) FROM (SELECT (((((((((((t1.c0 IN ()))AND(t1.c0 COLLATE NOCASE)))OR(t1.c0)))OR(CAST(t1.c0 AS REAL))))OR(CHANGES()))) IS TRUE)  as count FROM t1 ORDER BY t1.c0 ASC, ((((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(((t1.c0)AND(t1.c0)))))OR(CAST(t1.c0 AS BLOB))))OR((t1.c0 IN ()))))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((t1.c0 IN ()))AND(t1.c0 COLLATE NOCASE)))OR(t1.c0)))OR(CAST(t1.c0 AS REAL))))OR(CHANGES()))) ORDER BY t1.c0 ASC, ((((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(((t1.c0)AND(t1.c0)))))OR(CAST(t1.c0 AS BLOB))))OR((t1.c0 IN ()))))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END));
SELECT SUM(count) FROM (SELECT (((((((((((t1.c0 IN ()))AND(t1.c0 COLLATE NOCASE)))OR(t1.c0)))OR(CAST(t1.c0 AS REAL))))OR(CHANGES()))) IS TRUE)  as count FROM t1 ORDER BY t1.c0 ASC, ((((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(((t1.c0)AND(t1.c0)))))OR(CAST(t1.c0 AS BLOB))))OR((t1.c0 IN ()))))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((t1.c0 IN ()))AND(t1.c0 COLLATE NOCASE)))OR(t1.c0)))OR(CAST(t1.c0 AS REAL))))OR(CHANGES()))) ORDER BY t1.c0 ASC, ((((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(((t1.c0)AND(t1.c0)))))OR(CAST(t1.c0 AS BLOB))))OR((t1.c0 IN ()))))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END));
SELECT ALL COUNT(*) FROM v0, t1, t0 WHERE (t0.c96);
SELECT SUM(count) FROM (SELECT ALL ((t0.c96) IS TRUE)  as count FROM v0, t1, t0);
SELECT ALL COUNT(*) FROM v0, t1, t0 WHERE (t0.c96);
SELECT SUM(count) FROM (SELECT ALL ((t0.c96) IS TRUE)  as count FROM v0, t1, t0);
SELECT ALL COUNT(*) FROM v0, t1, t0 WHERE (t0.c96);
SELECT * FROM v0, t1 WHERE ((~ (HEX(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (HEX(v0.c0)))) IS TRUE)  as count FROM v0, t1);
SELECT * FROM v0, t1 WHERE ((~ (HEX(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (HEX(v0.c0)))) IS TRUE)  as count FROM v0, t1);
SELECT * FROM v0, t1 WHERE ((~ (HEX(v0.c0))));
SELECT * FROM v0 WHERE (CASE WHEN (v0.c1 IN ()) THEN (0Xffffffff858f87bf IN (v0.c2)) END) ORDER BY ((((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c0)))>=(CAST(v0.c1 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c1 IN ()) THEN (0xffffffff858f87bf IN (v0.c2)) END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c0)))>=(CAST(v0.c1 AS BLOB)))  NULLS FIRST);
SELECT * FROM v0 WHERE (CASE WHEN (v0.c1 IN ()) THEN (0Xffffffff858f87bf IN (v0.c2)) END) ORDER BY ((((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c0)))>=(CAST(v0.c1 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c1 IN ()) THEN (0xffffffff858f87bf IN (v0.c2)) END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c0)))>=(CAST(v0.c1 AS BLOB)))  NULLS FIRST);
SELECT * FROM v0 WHERE (CASE WHEN (v0.c1 IN ()) THEN (0Xffffffff858f87bf IN (v0.c2)) END) ORDER BY ((((v0.c4) NOT BETWEEN (v0.c1) AND (v0.c0)))>=(CAST(v0.c1 AS BLOB)))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT COUNT(*) FROM v0 INNER JOIN t1 ON ((CAST(v0.c0 AS INTEGER))>=(v0.c1)) FULL OUTER JOIN t0 ON (((t0.c96) NOT BETWEEN (v0.c3) AND (v0.c3)) IN (CAST(v0.c4 AS INTEGER))) WHERE (v0.c4);
SELECT SUM(count) FROM (SELECT ALL ((v0.c4) IS TRUE)  as count FROM v0 INNER JOIN t1 ON ((CAST(v0.c0 AS INTEGER))>=(v0.c1)) FULL OUTER JOIN t0 ON (((t0.c96) NOT BETWEEN (v0.c3) AND (v0.c3)) IN (CAST(v0.c4 AS INTEGER))));
SELECT COUNT(*) FROM v0 INNER JOIN t1 ON ((CAST(v0.c0 AS INTEGER))>=(v0.c1)) FULL OUTER JOIN t0 ON (((t0.c96) NOT BETWEEN (v0.c3) AND (v0.c3)) IN (CAST(v0.c4 AS INTEGER))) WHERE (v0.c4);
SELECT SUM(count) FROM (SELECT ALL ((v0.c4) IS TRUE)  as count FROM v0 INNER JOIN t1 ON ((CAST(v0.c0 AS INTEGER))>=(v0.c1)) FULL OUTER JOIN t0 ON (((t0.c96) NOT BETWEEN (v0.c3) AND (v0.c3)) IN (CAST(v0.c4 AS INTEGER))));
SELECT COUNT(*) FROM v0 INNER JOIN t1 ON ((CAST(v0.c0 AS INTEGER))>=(v0.c1)) FULL OUTER JOIN t0 ON (((t0.c96) NOT BETWEEN (v0.c3) AND (v0.c3)) IN (CAST(v0.c4 AS INTEGER))) WHERE (v0.c4);
SELECT ALL * FROM v0, t0, t1 WHERE (((((t0.c96) NOT BETWEEN (t0.c96) AND (t1.c0))) IS TRUE)) ORDER BY ((NOT (v0.c3)) IN (0X7c8c5125)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c96) NOT BETWEEN (t0.c96) AND (t1.c0))) IS TRUE)) IS TRUE)  as count FROM v0, t0, t1 ORDER BY ((NOT (v0.c3)) IN (0X7c8c5125)) ASC  NULLS LAST);
SELECT ALL * FROM v0, t0, t1 WHERE (((((t0.c96) NOT BETWEEN (t0.c96) AND (t1.c0))) IS TRUE)) ORDER BY ((NOT (v0.c3)) IN (0X7c8c5125)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c96) NOT BETWEEN (t0.c96) AND (t1.c0))) IS TRUE)) IS TRUE)  as count FROM v0, t0, t1 ORDER BY ((NOT (v0.c3)) IN (0X7c8c5125)) ASC  NULLS LAST);
SELECT ALL * FROM v0, t0, t1 WHERE (((((t0.c96) NOT BETWEEN (t0.c96) AND (t1.c0))) IS TRUE)) ORDER BY ((NOT (v0.c3)) IN (0X7c8c5125)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (((~ (t0.c96))) BETWEEN (t0.c96) AND (((t1.c0)>>(0.7153286520807273)))) INNER JOIN t1 ON (CAST(v0.c0 AS BLOB) IN ()) WHERE (CASE (NOT (v0.c4))  WHEN t1.c0 THEN ((0.8439531960234697) BETWEEN (v0.c3) AND (t1.c0)) WHEN CAST(v0.c2 AS REAL) THEN CASE WHEN t0.c96 THEN v0.c2 END WHEN (- (0.15652088028741684)) THEN ((0.5849039781911286)+(v0.c1)) ELSE (('1947024712') NOT BETWEEN (v0.c0) AND (v0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (v0.c4))  WHEN t1.c0 THEN ((0.8439531960234697) BETWEEN (v0.c3) AND (t1.c0)) WHEN CAST(v0.c2 AS REAL) THEN CASE WHEN t0.c96 THEN v0.c2 END WHEN (- (0.15652088028741684)) THEN ((0.5849039781911286)+(v0.c1)) ELSE (('1947024712') NOT BETWEEN (v0.c0) AND (v0.c2)) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (((~ (t0.c96))) BETWEEN (t0.c96) AND (((t1.c0)>>(0.7153286520807273)))) INNER JOIN t1 ON (CAST(v0.c0 AS BLOB) IN ()));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (((~ (t0.c96))) BETWEEN (t0.c96) AND (((t1.c0)>>(0.7153286520807273)))) INNER JOIN t1 ON (CAST(v0.c0 AS BLOB) IN ()) WHERE (CASE (NOT (v0.c4))  WHEN t1.c0 THEN ((0.8439531960234697) BETWEEN (v0.c3) AND (t1.c0)) WHEN CAST(v0.c2 AS REAL) THEN CASE WHEN t0.c96 THEN v0.c2 END WHEN (- (0.15652088028741684)) THEN ((0.5849039781911286)+(v0.c1)) ELSE (('1947024712') NOT BETWEEN (v0.c0) AND (v0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (v0.c4))  WHEN t1.c0 THEN ((0.8439531960234697) BETWEEN (v0.c3) AND (t1.c0)) WHEN CAST(v0.c2 AS REAL) THEN CASE WHEN t0.c96 THEN v0.c2 END WHEN (- (0.15652088028741684)) THEN ((0.5849039781911286)+(v0.c1)) ELSE (('1947024712') NOT BETWEEN (v0.c0) AND (v0.c2)) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (((~ (t0.c96))) BETWEEN (t0.c96) AND (((t1.c0)>>(0.7153286520807273)))) INNER JOIN t1 ON (CAST(v0.c0 AS BLOB) IN ()));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (((~ (t0.c96))) BETWEEN (t0.c96) AND (((t1.c0)>>(0.7153286520807273)))) INNER JOIN t1 ON (CAST(v0.c0 AS BLOB) IN ()) WHERE (CASE (NOT (v0.c4))  WHEN t1.c0 THEN ((0.8439531960234697) BETWEEN (v0.c3) AND (t1.c0)) WHEN CAST(v0.c2 AS REAL) THEN CASE WHEN t0.c96 THEN v0.c2 END WHEN (- (0.15652088028741684)) THEN ((0.5849039781911286)+(v0.c1)) ELSE (('1947024712') NOT BETWEEN (v0.c0) AND (v0.c2)) END);
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON t0.c96 WHERE (((((v0.c2)GLOB(v0.c2)))OR(IFNULL(DISTINCT '', v0.c2))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)GLOB(v0.c2)))OR(IFNULL(DISTINCT '', v0.c2)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON t0.c96);
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON t0.c96 WHERE (((((v0.c2)GLOB(v0.c2)))OR(IFNULL(DISTINCT '', v0.c2))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)GLOB(v0.c2)))OR(IFNULL(DISTINCT '', v0.c2)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON t0.c96);
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON t0.c96 WHERE (((((v0.c2)GLOB(v0.c2)))OR(IFNULL(DISTINCT '', v0.c2))));
SELECT ALL * FROM v0 WHERE (((((((((((v0.c4) NOT NULL))AND(TOTAL_CHANGES())))OR(v0.c2 COLLATE NOCASE)))AND((+ (v0.c1)))))OR((v0.c1 IN ())))) ORDER BY (((NOT (v0.c1))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c4) NOT NULL))AND(TOTAL_CHANGES())))OR(v0.c2 COLLATE NOCASE)))AND((+ (v0.c1)))))OR((v0.c1 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c1))) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c4) NOT NULL))AND(TOTAL_CHANGES())))OR(v0.c2 COLLATE NOCASE)))AND((+ (v0.c1)))))OR((v0.c1 IN ())))) ORDER BY (((NOT (v0.c1))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c4) NOT NULL))AND(TOTAL_CHANGES())))OR(v0.c2 COLLATE NOCASE)))AND((+ (v0.c1)))))OR((v0.c1 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c1))) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c4) NOT NULL))AND(TOTAL_CHANGES())))OR(v0.c2 COLLATE NOCASE)))AND((+ (v0.c1)))))OR((v0.c1 IN ())))) ORDER BY (((NOT (v0.c1))) NOT NULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0, t1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, t0, t1);
SELECT ALL COUNT(*) FROM v0, t0, t1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, t0, t1);
SELECT ALL COUNT(*) FROM v0, t0, t1 WHERE (v0.c0);
SELECT ALL * FROM v0, t0 WHERE (SQLITE_COMPILEOPTION_GET((('0.901766275721277') NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET((('0.901766275721277') NOTNULL))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (SQLITE_COMPILEOPTION_GET((('0.901766275721277') NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET((('0.901766275721277') NOTNULL))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (SQLITE_COMPILEOPTION_GET((('0.901766275721277') NOTNULL)));
SELECT COUNT(*) FROM t1 INNER JOIN v0 ON (((t1.c0) BETWEEN (v0.c2) AND (v0.c3)) IN ()) WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 INNER JOIN v0 ON (((t1.c0) BETWEEN (v0.c2) AND (v0.c3)) IN ()));
SELECT COUNT(*) FROM t1 INNER JOIN v0 ON (((t1.c0) BETWEEN (v0.c2) AND (v0.c3)) IN ()) WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 INNER JOIN v0 ON (((t1.c0) BETWEEN (v0.c2) AND (v0.c3)) IN ()));
SELECT COUNT(*) FROM t1 INNER JOIN v0 ON (((t1.c0) BETWEEN (v0.c2) AND (v0.c3)) IN ()) WHERE (t1.c0);
SELECT * FROM t1 WHERE (((((t1.c0)<=(t1.c0))) BETWEEN (t1.c0) AND (t1.c0 COLLATE BINARY))) ORDER BY CASE t1.c0 COLLATE RTRIM  WHEN t1.c0 THEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) WHEN ((t1.c0) NOT NULL) THEN ((t1.c0) BETWEEN (t1.c0) AND (x'')) WHEN (t1.c0 IN ()) THEN (- (t1.c0)) ELSE (t1.c0 IN ()) END ASC, (+ ('0.07296561748364438' COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)<=(t1.c0))) BETWEEN (t1.c0) AND (t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1 ORDER BY CASE t1.c0 COLLATE RTRIM  WHEN t1.c0 THEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) WHEN ((t1.c0) NOT NULL) THEN ((t1.c0) BETWEEN (t1.c0) AND (x'')) WHEN (t1.c0 IN ()) THEN (- (t1.c0)) ELSE (t1.c0 IN ()) END ASC, (+ ('0.07296561748364438' COLLATE RTRIM)) DESC);
SELECT * FROM t1 WHERE (((((t1.c0)<=(t1.c0))) BETWEEN (t1.c0) AND (t1.c0 COLLATE BINARY))) ORDER BY CASE t1.c0 COLLATE RTRIM  WHEN t1.c0 THEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) WHEN ((t1.c0) NOT NULL) THEN ((t1.c0) BETWEEN (t1.c0) AND (x'')) WHEN (t1.c0 IN ()) THEN (- (t1.c0)) ELSE (t1.c0 IN ()) END ASC, (+ ('0.07296561748364438' COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)<=(t1.c0))) BETWEEN (t1.c0) AND (t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1 ORDER BY CASE t1.c0 COLLATE RTRIM  WHEN t1.c0 THEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) WHEN ((t1.c0) NOT NULL) THEN ((t1.c0) BETWEEN (t1.c0) AND (x'')) WHEN (t1.c0 IN ()) THEN (- (t1.c0)) ELSE (t1.c0 IN ()) END ASC, (+ ('0.07296561748364438' COLLATE RTRIM)) DESC);
SELECT * FROM t1 WHERE (((((t1.c0)<=(t1.c0))) BETWEEN (t1.c0) AND (t1.c0 COLLATE BINARY))) ORDER BY CASE t1.c0 COLLATE RTRIM  WHEN t1.c0 THEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) WHEN ((t1.c0) NOT NULL) THEN ((t1.c0) BETWEEN (t1.c0) AND (x'')) WHEN (t1.c0 IN ()) THEN (- (t1.c0)) ELSE (t1.c0 IN ()) END ASC, (+ ('0.07296561748364438' COLLATE RTRIM)) DESC;
SELECT ALL * FROM v0, t0 WHERE ((~ ((((v0.c0)) NOT BETWEEN (('<5'')')) AND ((v0.c0)))))) ORDER BY (~ ((('') IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT (((~ ((((v0.c0)) NOT BETWEEN (('<5'')')) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, t0 ORDER BY (~ ((('') IS FALSE))) ASC);
SELECT ALL * FROM v0, t0 WHERE ((~ ((((v0.c0)) NOT BETWEEN (('<5'')')) AND ((v0.c0)))))) ORDER BY (~ ((('') IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT (((~ ((((v0.c0)) NOT BETWEEN (('<5'')')) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, t0 ORDER BY (~ ((('') IS FALSE))) ASC);
SELECT ALL * FROM v0, t0 WHERE ((~ ((((v0.c0)) NOT BETWEEN (('<5'')')) AND ((v0.c0)))))) ORDER BY (~ ((('') IS FALSE))) ASC;
SELECT * FROM v0, t1 WHERE (((CASE WHEN v0.c4 THEN v0.c2 END) NOT BETWEEN (v0.c4) AND (x''))) ORDER BY 0x436ccf73  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c4 THEN v0.c2 END) NOT BETWEEN (v0.c4) AND (x''))) IS TRUE)  as count FROM v0, t1 ORDER BY 0x436ccf73  NULLS FIRST);
SELECT * FROM v0, t1 WHERE (((CASE WHEN v0.c4 THEN v0.c2 END) NOT BETWEEN (v0.c4) AND (x''))) ORDER BY 0x436ccf73  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c4 THEN v0.c2 END) NOT BETWEEN (v0.c4) AND (x''))) IS TRUE)  as count FROM v0, t1 ORDER BY 0x436ccf73  NULLS FIRST);
SELECT ALL * FROM t0, t1 WHERE (((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(((((t1.c0)AND(t0.c96)))AND(t1.c0)))))OR(json_valid(t0.c96))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(((((t1.c0)AND(t0.c96)))AND(t1.c0)))))OR(json_valid(t0.c96)))) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t0, t1 WHERE (((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(((((t1.c0)AND(t0.c96)))AND(t1.c0)))))OR(json_valid(t0.c96))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(((((t1.c0)AND(t0.c96)))AND(t1.c0)))))OR(json_valid(t0.c96)))) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t0, t1 WHERE (((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(((((t1.c0)AND(t0.c96)))AND(t1.c0)))))OR(json_valid(t0.c96))));
SELECT ALL * FROM t1 FULL OUTER JOIN v0 ON (((('qj73(1')AND(t1.c0)))AND(v0.c0)) COLLATE NOCASE WHERE (((CASE v0.c3  WHEN v0.c4 THEN v0.c4 WHEN t1.c0 THEN t1.c0 WHEN 0.19747470961870706 THEN v0.c4 ELSE t1.c0 END)OR((+ (v0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c3  WHEN v0.c4 THEN v0.c4 WHEN t1.c0 THEN t1.c0 WHEN 0.19747470961870706 THEN v0.c4 ELSE t1.c0 END)OR((+ (v0.c3))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN v0 ON (((('qj73(1')AND(t1.c0)))AND(v0.c0)) COLLATE NOCASE);
SELECT ALL * FROM t1 FULL OUTER JOIN v0 ON (((('qj73(1')AND(t1.c0)))AND(v0.c0)) COLLATE NOCASE WHERE (((CASE v0.c3  WHEN v0.c4 THEN v0.c4 WHEN t1.c0 THEN t1.c0 WHEN 0.19747470961870706 THEN v0.c4 ELSE t1.c0 END)OR((+ (v0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c3  WHEN v0.c4 THEN v0.c4 WHEN t1.c0 THEN t1.c0 WHEN 0.19747470961870706 THEN v0.c4 ELSE t1.c0 END)OR((+ (v0.c3))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN v0 ON (((('qj73(1')AND(t1.c0)))AND(v0.c0)) COLLATE NOCASE);
SELECT ALL * FROM t1 FULL OUTER JOIN v0 ON (((('qj73(1')AND(t1.c0)))AND(v0.c0)) COLLATE NOCASE WHERE (((CASE v0.c3  WHEN v0.c4 THEN v0.c4 WHEN t1.c0 THEN t1.c0 WHEN 0.19747470961870706 THEN v0.c4 ELSE t1.c0 END)OR((+ (v0.c3)))));
SELECT * FROM t0, t1 WHERE ((((((t0.c96) NOT BETWEEN (t1.c0) AND (t0.c96))))<=((((t0.c96) BETWEEN (t0.c96) AND (t1.c0)))))) ORDER BY IFNULL(DISTINCT ((t0.c96)!=(t0.c96)), TRIM(NULL)) DESC, (CASE t1.c0  WHEN t0.c96 THEN t0.c96 END IN ((- (t0.c96))));
SELECT SUM(count) FROM (SELECT (((((((t0.c96) NOT BETWEEN (t1.c0) AND (t0.c96))))<=((((t0.c96) BETWEEN (t0.c96) AND (t1.c0)))))) IS TRUE)  as count FROM t0, t1 ORDER BY IFNULL(DISTINCT ((t0.c96)!=(t0.c96)), TRIM(NULL)) DESC, (CASE t1.c0  WHEN t0.c96 THEN t0.c96 END IN ((- (t0.c96)))));
SELECT * FROM t0, t1 WHERE ((((((t0.c96) NOT BETWEEN (t1.c0) AND (t0.c96))))<=((((t0.c96) BETWEEN (t0.c96) AND (t1.c0)))))) ORDER BY IFNULL(DISTINCT ((t0.c96)!=(t0.c96)), TRIM(NULL)) DESC, (CASE t1.c0  WHEN t0.c96 THEN t0.c96 END IN ((- (t0.c96))));
SELECT SUM(count) FROM (SELECT (((((((t0.c96) NOT BETWEEN (t1.c0) AND (t0.c96))))<=((((t0.c96) BETWEEN (t0.c96) AND (t1.c0)))))) IS TRUE)  as count FROM t0, t1 ORDER BY IFNULL(DISTINCT ((t0.c96)!=(t0.c96)), TRIM(NULL)) DESC, (CASE t1.c0  WHEN t0.c96 THEN t0.c96 END IN ((- (t0.c96)))));
SELECT * FROM t0, t1 WHERE ((((((t0.c96) NOT BETWEEN (t1.c0) AND (t0.c96))))<=((((t0.c96) BETWEEN (t0.c96) AND (t1.c0)))))) ORDER BY IFNULL(DISTINCT ((t0.c96)!=(t0.c96)), TRIM(NULL)) DESC, (CASE t1.c0  WHEN t0.c96 THEN t0.c96 END IN ((- (t0.c96))));
SELECT ALL * FROM t0, t1 WHERE (((t1.c0) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t1.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t0, t1 WHERE (((t1.c0) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t1.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t0, t1 WHERE (((t1.c0) NOT NULL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT ((~ (t0.c96)))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ (t0.c96))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT ((~ (t0.c96)))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ (t0.c96))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT ((~ (t0.c96)))));
SELECT ALL COUNT(*) FROM t1, v0, t0 WHERE (TRIM(CAST(t1.c0 AS INTEGER))) ORDER BY ((t1.c0)LIKE(t1.c0)) COLLATE RTRIM ASC  NULLS LAST, ((((v0.c3)>>(t1.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(t1.c0 AS INTEGER))) IS TRUE)  as count FROM t1, v0, t0 ORDER BY ((t1.c0)LIKE(t1.c0)) COLLATE RTRIM ASC  NULLS LAST, ((((v0.c3)>>(t1.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM t1, v0, t0 WHERE (TRIM(CAST(t1.c0 AS INTEGER))) ORDER BY ((t1.c0)LIKE(t1.c0)) COLLATE RTRIM ASC  NULLS LAST, ((((v0.c3)>>(t1.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(t1.c0 AS INTEGER))) IS TRUE)  as count FROM t1, v0, t0 ORDER BY ((t1.c0)LIKE(t1.c0)) COLLATE RTRIM ASC  NULLS LAST, ((((v0.c3)>>(t1.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM t1, v0, t0 WHERE (TRIM(CAST(t1.c0 AS INTEGER))) ORDER BY ((t1.c0)LIKE(t1.c0)) COLLATE RTRIM ASC  NULLS LAST, ((((v0.c3)>>(t1.c0))) NOT NULL);
SELECT ALL COUNT(*) FROM t0, v0, t1 WHERE (CASE WHEN ((v0.c4)OR(t1.c0)) THEN v0.c2 WHEN ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c4)) THEN CASE WHEN v0.c4 THEN v0.c2 WHEN v0.c4 THEN v0.c4 WHEN v0.c1 THEN x'227a' ELSE v0.c2 END WHEN (((v0.c2))=((v0.c3))) THEN CASE v0.c2  WHEN v0.c2 THEN v0.c1 END END) ORDER BY x'36552ce1';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c4)OR(t1.c0)) THEN v0.c2 WHEN ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c4)) THEN CASE WHEN v0.c4 THEN v0.c2 WHEN v0.c4 THEN v0.c4 WHEN v0.c1 THEN x'227a' ELSE v0.c2 END WHEN (((v0.c2))=((v0.c3))) THEN CASE v0.c2  WHEN v0.c2 THEN v0.c1 END END) IS TRUE)  as count FROM t0, v0, t1 ORDER BY x'36552ce1');
SELECT ALL COUNT(*) FROM t0, v0, t1 WHERE (CASE WHEN ((v0.c4)OR(t1.c0)) THEN v0.c2 WHEN ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c4)) THEN CASE WHEN v0.c4 THEN v0.c2 WHEN v0.c4 THEN v0.c4 WHEN v0.c1 THEN x'227a' ELSE v0.c2 END WHEN (((v0.c2))=((v0.c3))) THEN CASE v0.c2  WHEN v0.c2 THEN v0.c1 END END) ORDER BY x'36552ce1';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c4)OR(t1.c0)) THEN v0.c2 WHEN ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c4)) THEN CASE WHEN v0.c4 THEN v0.c2 WHEN v0.c4 THEN v0.c4 WHEN v0.c1 THEN x'227a' ELSE v0.c2 END WHEN (((v0.c2))=((v0.c3))) THEN CASE v0.c2  WHEN v0.c2 THEN v0.c1 END END) IS TRUE)  as count FROM t0, v0, t1 ORDER BY x'36552ce1');
SELECT ALL COUNT(*) FROM t0, v0, t1 WHERE (CASE WHEN ((v0.c4)OR(t1.c0)) THEN v0.c2 WHEN ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c4)) THEN CASE WHEN v0.c4 THEN v0.c2 WHEN v0.c4 THEN v0.c4 WHEN v0.c1 THEN x'227a' ELSE v0.c2 END WHEN (((v0.c2))=((v0.c3))) THEN CASE v0.c2  WHEN v0.c2 THEN v0.c1 END END) ORDER BY x'36552ce1';
SELECT ALL * FROM t0 WHERE (0.9114863743376957) ORDER BY ((((t0.c96) NOT NULL)) BETWEEN (LIKELY(t0.c96)) AND ((+ (t0.c96))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.9114863743376957) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c96) NOT NULL)) BETWEEN (LIKELY(t0.c96)) AND ((+ (t0.c96))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (0.9114863743376957) ORDER BY ((((t0.c96) NOT NULL)) BETWEEN (LIKELY(t0.c96)) AND ((+ (t0.c96))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.9114863743376957) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c96) NOT NULL)) BETWEEN (LIKELY(t0.c96)) AND ((+ (t0.c96))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (0.9114863743376957) ORDER BY ((((t0.c96) NOT NULL)) BETWEEN (LIKELY(t0.c96)) AND ((+ (t0.c96))))  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE BINARY) NOT NULL)) ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 END)>(((t1.c0)IS NOT(t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 END)>(((t1.c0)IS NOT(t1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE BINARY) NOT NULL)) ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 END)>(((t1.c0)IS NOT(t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 END)>(((t1.c0)IS NOT(t1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE BINARY) NOT NULL)) ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 END)>(((t1.c0)IS NOT(t1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, t0 WHERE (((t1.c0 COLLATE BINARY) NOT BETWEEN ((- (9.597368652857208E-4))) AND (t0.c96 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE BINARY) NOT BETWEEN ((- (9.597368652857208E-4))) AND (t0.c96 COLLATE NOCASE))) IS TRUE)  as count FROM t1, t0);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (((t1.c0 COLLATE BINARY) NOT BETWEEN ((- (9.597368652857208E-4))) AND (t0.c96 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE BINARY) NOT BETWEEN ((- (9.597368652857208E-4))) AND (t0.c96 COLLATE NOCASE))) IS TRUE)  as count FROM t1, t0);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (((t1.c0 COLLATE BINARY) NOT BETWEEN ((- (9.597368652857208E-4))) AND (t0.c96 COLLATE NOCASE)));
SELECT COUNT(*) FROM t1 NATURAL JOIN v0 WHERE (json_insert(((v0.c2) NOT BETWEEN (v0.c3) AND (x'548e')), v0.c1, CASE WHEN v0.c0 THEN v0.c1 ELSE t1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((v0.c2) NOT BETWEEN (v0.c3) AND (x'548e')), v0.c1, CASE WHEN v0.c0 THEN v0.c1 ELSE t1.c0 END)) IS TRUE)  as count FROM t1 NATURAL JOIN v0);
SELECT COUNT(*) FROM t1 NATURAL JOIN v0 WHERE (json_insert(((v0.c2) NOT BETWEEN (v0.c3) AND (x'548e')), v0.c1, CASE WHEN v0.c0 THEN v0.c1 ELSE t1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((v0.c2) NOT BETWEEN (v0.c3) AND (x'548e')), v0.c1, CASE WHEN v0.c0 THEN v0.c1 ELSE t1.c0 END)) IS TRUE)  as count FROM t1 NATURAL JOIN v0);
SELECT COUNT(*) FROM t1 NATURAL JOIN v0 WHERE (json_insert(((v0.c2) NOT BETWEEN (v0.c3) AND (x'548e')), v0.c1, CASE WHEN v0.c0 THEN v0.c1 ELSE t1.c0 END));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN v0 ON (HEX(DISTINCT v0.c1) IN ()) WHERE (((((t1.c0)!=(v0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)!=(v0.c2))) ISNULL)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN v0 ON (HEX(DISTINCT v0.c1) IN ()));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN v0 ON (HEX(DISTINCT v0.c1) IN ()) WHERE (((((t1.c0)!=(v0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)!=(v0.c2))) ISNULL)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN v0 ON (HEX(DISTINCT v0.c1) IN ()));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN v0 ON (HEX(DISTINCT v0.c1) IN ()) WHERE (((((t1.c0)!=(v0.c2))) ISNULL));
SELECT * FROM v0, t0 WHERE (CAST((((('-1347069278')OR(v0.c3)))OR(v0.c4)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((('-1347069278')OR(v0.c3)))OR(v0.c4)) AS REAL)) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (CAST((((('-1347069278')OR(v0.c3)))OR(v0.c4)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((('-1347069278')OR(v0.c3)))OR(v0.c4)) AS REAL)) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (CAST((((('-1347069278')OR(v0.c3)))OR(v0.c4)) AS REAL));
SELECT * FROM t0, v0, t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((v0.c0))))<<(CAST(t0.c96 AS REAL)))) ORDER BY NULLIF(DISTINCT v0.c0, ((v0.c1)GLOB(v0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((v0.c0))))<<(CAST(t0.c96 AS REAL)))) IS TRUE)  as count FROM t0, v0, t1 ORDER BY NULLIF(DISTINCT v0.c0, ((v0.c1)GLOB(v0.c1))));
SELECT * FROM t0, v0, t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((v0.c0))))<<(CAST(t0.c96 AS REAL)))) ORDER BY NULLIF(DISTINCT v0.c0, ((v0.c1)GLOB(v0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((v0.c0))))<<(CAST(t0.c96 AS REAL)))) IS TRUE)  as count FROM t0, v0, t1 ORDER BY NULLIF(DISTINCT v0.c0, ((v0.c1)GLOB(v0.c1))));
SELECT * FROM t0, v0, t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((v0.c0))))<<(CAST(t0.c96 AS REAL)))) ORDER BY NULLIF(DISTINCT v0.c0, ((v0.c1)GLOB(v0.c1)));
SELECT COUNT(*) FROM t0 WHERE (1.820695343E9);
SELECT SUM(count) FROM (SELECT ((1.820695343E9) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (1.820695343E9);
SELECT SUM(count) FROM (SELECT ((1.820695343E9) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (1.820695343E9);
SELECT * FROM t0 WHERE ((((((((((t0.c96 IN (x'')))AND(CASE WHEN t0.c96 THEN t0.c96 END)))AND(((((t0.c96)AND(0.4555896361578422)))AND(t0.c96)))))OR(((t0.c96) NOT BETWEEN (0xffffffff86a86c3e) AND (t0.c96)))))OR((t0.c96 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c96 IN (x'')))AND(CASE WHEN t0.c96 THEN t0.c96 END)))AND(((((t0.c96)AND(0.4555896361578422)))AND(t0.c96)))))OR(((t0.c96) NOT BETWEEN (0Xffffffff86a86c3e) AND (t0.c96)))))OR((t0.c96 IN ())))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((((t0.c96 IN (x'')))AND(CASE WHEN t0.c96 THEN t0.c96 END)))AND(((((t0.c96)AND(0.4555896361578422)))AND(t0.c96)))))OR(((t0.c96) NOT BETWEEN (0xffffffff86a86c3e) AND (t0.c96)))))OR((t0.c96 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c96 IN (x'')))AND(CASE WHEN t0.c96 THEN t0.c96 END)))AND(((((t0.c96)AND(0.4555896361578422)))AND(t0.c96)))))OR(((t0.c96) NOT BETWEEN (0Xffffffff86a86c3e) AND (t0.c96)))))OR((t0.c96 IN ())))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((((t0.c96 IN (x'')))AND(CASE WHEN t0.c96 THEN t0.c96 END)))AND(((((t0.c96)AND(0.4555896361578422)))AND(t0.c96)))))OR(((t0.c96) NOT BETWEEN (0xffffffff86a86c3e) AND (t0.c96)))))OR((t0.c96 IN ()))));
SELECT ALL * FROM v0, t1, t0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0, t1, t0);
SELECT ALL * FROM v0, t1, t0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0, t1, t0);
SELECT ALL * FROM v0, t1, t0 WHERE (v0.c1);
SELECT COUNT(*) FROM v0, t0, t1 WHERE (((t1.c0)-(v0.c4)) COLLATE NOCASE) ORDER BY (NOT (((v0.c3) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)-(v0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, t1 ORDER BY (NOT (((v0.c3) ISNULL)))  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, t1 WHERE (((t1.c0)-(v0.c4)) COLLATE NOCASE) ORDER BY (NOT (((v0.c3) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)-(v0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, t1 ORDER BY (NOT (((v0.c3) ISNULL)))  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, t1 WHERE (((t1.c0)-(v0.c4)) COLLATE NOCASE) ORDER BY (NOT (((v0.c3) ISNULL)))  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((((t0.c96)) BETWEEN ((t0.c96)) AND ((t0.c96))))<=(rtreenode(t0.c96, t0.c96)))) ORDER BY ((((t0.c96) IS FALSE)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c96)) BETWEEN ((t0.c96)) AND ((t0.c96))))<=(rtreenode(t0.c96, t0.c96)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c96) IS FALSE)) IS FALSE));
SELECT ALL * FROM t0 WHERE ((((((t0.c96)) BETWEEN ((t0.c96)) AND ((t0.c96))))<=(rtreenode(t0.c96, t0.c96)))) ORDER BY ((((t0.c96) IS FALSE)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c96)) BETWEEN ((t0.c96)) AND ((t0.c96))))<=(rtreenode(t0.c96, t0.c96)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c96) IS FALSE)) IS FALSE));
SELECT ALL * FROM t0 WHERE ((((((t0.c96)) BETWEEN ((t0.c96)) AND ((t0.c96))))<=(rtreenode(t0.c96, t0.c96)))) ORDER BY ((((t0.c96) IS FALSE)) IS FALSE);
SELECT ALL * FROM v0 WHERE ((+ (v0.c3))) ORDER BY TRIM((NOT (v0.c2))) DESC  NULLS LAST, v0.c4, (- (((((v0.c4)OR(v0.c4)))AND(v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (v0.c3))) IS TRUE)  as count FROM v0 ORDER BY TRIM((NOT (v0.c2))) DESC  NULLS LAST, v0.c4, (- (((((v0.c4)OR(v0.c4)))AND(v0.c2))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((+ (v0.c3))) ORDER BY TRIM((NOT (v0.c2))) DESC  NULLS LAST, v0.c4, (- (((((v0.c4)OR(v0.c4)))AND(v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (v0.c3))) IS TRUE)  as count FROM v0 ORDER BY TRIM((NOT (v0.c2))) DESC  NULLS LAST, v0.c4, (- (((((v0.c4)OR(v0.c4)))AND(v0.c2))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((+ (v0.c3))) ORDER BY TRIM((NOT (v0.c2))) DESC  NULLS LAST, v0.c4, (- (((((v0.c4)OR(v0.c4)))AND(v0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM t0, v0 WHERE (CAST((v0.c4 IN (t0.c96)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c4 IN (t0.c96)) AS TEXT)) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (CAST((v0.c4 IN (t0.c96)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c4 IN (t0.c96)) AS TEXT)) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (CAST((v0.c4 IN (t0.c96)) AS TEXT));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN v0 ON '-1770754389' CROSS JOIN t0 ON ((v0.c2 COLLATE RTRIM) BETWEEN (CASE WHEN v0.c0 THEN v0.c4 ELSE v0.c3 END) AND (v0.c0 COLLATE RTRIM)) WHERE (CASE ((0.47449919541315777)<>(t1.c0))  WHEN ((v0.c2)||(v0.c3)) THEN 0X2fb1c071 ELSE (((v0.c1))!=((t0.c96))) END) ORDER BY CAST(CASE v0.c2  WHEN x'' THEN v0.c3 ELSE v0.c3 END AS TEXT)  NULLS FIRST, x'', ((((v0.c2)|(v0.c2)))GLOB(CAST(v0.c4 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0.47449919541315777)!=(t1.c0))  WHEN ((v0.c2)||(v0.c3)) THEN 0x2fb1c071 ELSE (((v0.c1))<>((t0.c96))) END) IS TRUE)  as count FROM t1 FULL OUTER JOIN v0 ON '-1770754389' CROSS JOIN t0 ON ((v0.c2 COLLATE RTRIM) BETWEEN (CASE WHEN v0.c0 THEN v0.c4 ELSE v0.c3 END) AND (v0.c0 COLLATE RTRIM)) ORDER BY CAST(CASE v0.c2  WHEN x'' THEN v0.c3 ELSE v0.c3 END AS TEXT)  NULLS FIRST, x'', ((((v0.c2)|(v0.c2)))GLOB(CAST(v0.c4 AS NUMERIC))));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN v0 ON '-1770754389' CROSS JOIN t0 ON ((v0.c2 COLLATE RTRIM) BETWEEN (CASE WHEN v0.c0 THEN v0.c4 ELSE v0.c3 END) AND (v0.c0 COLLATE RTRIM)) WHERE (CASE ((0.47449919541315777)<>(t1.c0))  WHEN ((v0.c2)||(v0.c3)) THEN 0X2fb1c071 ELSE (((v0.c1))!=((t0.c96))) END) ORDER BY CAST(CASE v0.c2  WHEN x'' THEN v0.c3 ELSE v0.c3 END AS TEXT)  NULLS FIRST, x'', ((((v0.c2)|(v0.c2)))GLOB(CAST(v0.c4 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0.47449919541315777)!=(t1.c0))  WHEN ((v0.c2)||(v0.c3)) THEN 0x2fb1c071 ELSE (((v0.c1))<>((t0.c96))) END) IS TRUE)  as count FROM t1 FULL OUTER JOIN v0 ON '-1770754389' CROSS JOIN t0 ON ((v0.c2 COLLATE RTRIM) BETWEEN (CASE WHEN v0.c0 THEN v0.c4 ELSE v0.c3 END) AND (v0.c0 COLLATE RTRIM)) ORDER BY CAST(CASE v0.c2  WHEN x'' THEN v0.c3 ELSE v0.c3 END AS TEXT)  NULLS FIRST, x'', ((((v0.c2)|(v0.c2)))GLOB(CAST(v0.c4 AS NUMERIC))));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN v0 ON '-1770754389' CROSS JOIN t0 ON ((v0.c2 COLLATE RTRIM) BETWEEN (CASE WHEN v0.c0 THEN v0.c4 ELSE v0.c3 END) AND (v0.c0 COLLATE RTRIM)) WHERE (CASE ((0.47449919541315777)<>(t1.c0))  WHEN ((v0.c2)||(v0.c3)) THEN 0X2fb1c071 ELSE (((v0.c1))!=((t0.c96))) END) ORDER BY CAST(CASE v0.c2  WHEN x'' THEN v0.c3 ELSE v0.c3 END AS TEXT)  NULLS FIRST, x'', ((((v0.c2)|(v0.c2)))GLOB(CAST(v0.c4 AS NUMERIC)));
SELECT ALL * FROM t1 INNER JOIN t0 ON (NOT (((t1.c0) NOT BETWEEN (t0.c96) AND (t1.c0)))) WHERE (CASE ((t1.c0)>(t0.c96))  WHEN 'R7hx' THEN (~ (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c0)>(t0.c96))  WHEN 'R7hx' THEN (~ (t1.c0)) END) IS TRUE)  as count FROM t1 INNER JOIN t0 ON (NOT (((t1.c0) NOT BETWEEN (t0.c96) AND (t1.c0)))));
SELECT ALL * FROM t1 INNER JOIN t0 ON (NOT (((t1.c0) NOT BETWEEN (t0.c96) AND (t1.c0)))) WHERE (CASE ((t1.c0)>(t0.c96))  WHEN 'R7hx' THEN (~ (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c0)>(t0.c96))  WHEN 'R7hx' THEN (~ (t1.c0)) END) IS TRUE)  as count FROM t1 INNER JOIN t0 ON (NOT (((t1.c0) NOT BETWEEN (t0.c96) AND (t1.c0)))));
SELECT ALL * FROM t1 INNER JOIN t0 ON (NOT (((t1.c0) NOT BETWEEN (t0.c96) AND (t1.c0)))) WHERE (CASE ((t1.c0)>(t0.c96))  WHEN 'R7hx' THEN (~ (t1.c0)) END);
SELECT ALL * FROM v0, t1 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE (TOTAL_CHANGES());
SELECT ALL COUNT(*) FROM t0 WHERE (0.26242504717101645) ORDER BY (((t0.c96)) BETWEEN ((((-391492590) NOT BETWEEN (t0.c96) AND (0.41512300250851775)))) AND ((CAST(t0.c96 AS BLOB)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.26242504717101645) IS TRUE)  as count FROM t0 ORDER BY (((t0.c96)) BETWEEN ((((-391492590) NOT BETWEEN (t0.c96) AND (0.41512300250851775)))) AND ((CAST(t0.c96 AS BLOB)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (0.26242504717101645) ORDER BY (((t0.c96)) BETWEEN ((((-391492590) NOT BETWEEN (t0.c96) AND (0.41512300250851775)))) AND ((CAST(t0.c96 AS BLOB)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.26242504717101645) IS TRUE)  as count FROM t0 ORDER BY (((t0.c96)) BETWEEN ((((-391492590) NOT BETWEEN (t0.c96) AND (0.41512300250851775)))) AND ((CAST(t0.c96 AS BLOB)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (0.26242504717101645) ORDER BY (((t0.c96)) BETWEEN ((((-391492590) NOT BETWEEN (t0.c96) AND (0.41512300250851775)))) AND ((CAST(t0.c96 AS BLOB)))) ASC  NULLS LAST;
SELECT * FROM t1, t0 WHERE ((((t0.c96, t0.c96, t1.c0)) NOT BETWEEN ((((((t0.c96)AND(t1.c0)))AND(t1.c0)), CASE t0.c96  WHEN t1.c0 THEN t1.c0 END, (('') NOTNULL))) AND ((t1.c0 COLLATE BINARY, CAST(t0.c96 AS BLOB), (NOT (t0.c96)))))) ORDER BY CAST(t0.c96 COLLATE NOCASE AS REAL)  NULLS LAST, (((t1.c0))>=((t1.c0))) COLLATE NOCASE ASC  NULLS FIRST, (NOT (t0.c96 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c96, t0.c96, t1.c0)) NOT BETWEEN ((((((t0.c96)AND(t1.c0)))AND(t1.c0)), CASE t0.c96  WHEN t1.c0 THEN t1.c0 END, (('') NOTNULL))) AND ((t1.c0 COLLATE BINARY, CAST(t0.c96 AS BLOB), (NOT (t0.c96)))))) IS TRUE)  as count FROM t1, t0 ORDER BY CAST(t0.c96 COLLATE NOCASE AS REAL)  NULLS LAST, (((t1.c0))>=((t1.c0))) COLLATE NOCASE ASC  NULLS FIRST, (NOT (t0.c96 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM t1, t0 WHERE ((((t0.c96, t0.c96, t1.c0)) NOT BETWEEN ((((((t0.c96)AND(t1.c0)))AND(t1.c0)), CASE t0.c96  WHEN t1.c0 THEN t1.c0 END, (('') NOTNULL))) AND ((t1.c0 COLLATE BINARY, CAST(t0.c96 AS BLOB), (NOT (t0.c96)))))) ORDER BY CAST(t0.c96 COLLATE NOCASE AS REAL)  NULLS LAST, (((t1.c0))>=((t1.c0))) COLLATE NOCASE ASC  NULLS FIRST, (NOT (t0.c96 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c96, t0.c96, t1.c0)) NOT BETWEEN ((((((t0.c96)AND(t1.c0)))AND(t1.c0)), CASE t0.c96  WHEN t1.c0 THEN t1.c0 END, (('') NOTNULL))) AND ((t1.c0 COLLATE BINARY, CAST(t0.c96 AS BLOB), (NOT (t0.c96)))))) IS TRUE)  as count FROM t1, t0 ORDER BY CAST(t0.c96 COLLATE NOCASE AS REAL)  NULLS LAST, (((t1.c0))>=((t1.c0))) COLLATE NOCASE ASC  NULLS FIRST, (NOT (t0.c96 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM t1, t0 WHERE ((((t0.c96, t0.c96, t1.c0)) NOT BETWEEN ((((((t0.c96)AND(t1.c0)))AND(t1.c0)), CASE t0.c96  WHEN t1.c0 THEN t1.c0 END, (('') NOTNULL))) AND ((t1.c0 COLLATE BINARY, CAST(t0.c96 AS BLOB), (NOT (t0.c96)))))) ORDER BY CAST(t0.c96 COLLATE NOCASE AS REAL)  NULLS LAST, (((t1.c0))>=((t1.c0))) COLLATE NOCASE ASC  NULLS FIRST, (NOT (t0.c96 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL * FROM t0, t1 RIGHT OUTER JOIN v0 ON ((CASE v0.c3  WHEN v0.c4 THEN v0.c3 END) NOTNULL) WHERE ((LIKELY(t0.c96) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LIKELY(t0.c96) IN ())) IS TRUE)  as count FROM t0, t1 RIGHT OUTER JOIN v0 ON ((CASE v0.c3  WHEN v0.c4 THEN v0.c3 END) NOTNULL));
SELECT ALL * FROM t0, t1 RIGHT OUTER JOIN v0 ON ((CASE v0.c3  WHEN v0.c4 THEN v0.c3 END) NOTNULL) WHERE ((LIKELY(t0.c96) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LIKELY(t0.c96) IN ())) IS TRUE)  as count FROM t0, t1 RIGHT OUTER JOIN v0 ON ((CASE v0.c3  WHEN v0.c4 THEN v0.c3 END) NOTNULL));
SELECT ALL * FROM t0, t1 RIGHT OUTER JOIN v0 ON ((CASE v0.c3  WHEN v0.c4 THEN v0.c3 END) NOTNULL) WHERE ((LIKELY(t0.c96) IN ()));
SELECT ALL COUNT(*) FROM v0, t1, t0 WHERE (json(((v0.c2)<>(t1.c0)))) ORDER BY (((~ (v0.c3))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json(((v0.c2)!=(t1.c0)))) IS TRUE)  as count FROM v0, t1, t0 ORDER BY (((~ (v0.c3))) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t1, t0 WHERE (json(((v0.c2)<>(t1.c0)))) ORDER BY (((~ (v0.c3))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json(((v0.c2)!=(t1.c0)))) IS TRUE)  as count FROM v0, t1, t0 ORDER BY (((~ (v0.c3))) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t1, t0 WHERE (json(((v0.c2)<>(t1.c0)))) ORDER BY (((~ (v0.c3))) NOT NULL) ASC  NULLS LAST;
SELECT ALL * FROM t0, t1, v0 WHERE (((((CAST(t1.c0 AS NUMERIC))AND(x'13c4')))OR(CAST(t1.c0 AS INTEGER)))) ORDER BY (~ (CASE WHEN v0.c4 THEN v0.c4 END));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t1.c0 AS NUMERIC))AND(x'13c4')))OR(CAST(t1.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, t1, v0 NOT INDEXED ORDER BY (~ (CASE WHEN v0.c4 THEN v0.c4 END)));
SELECT ALL * FROM t0, t1, v0 WHERE (((((CAST(t1.c0 AS NUMERIC))AND(x'13c4')))OR(CAST(t1.c0 AS INTEGER)))) ORDER BY (~ (CASE WHEN v0.c4 THEN v0.c4 END));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t1.c0 AS NUMERIC))AND(x'13c4')))OR(CAST(t1.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, t1, v0 NOT INDEXED ORDER BY (~ (CASE WHEN v0.c4 THEN v0.c4 END)));
SELECT ALL * FROM t0, t1, v0 WHERE (((((CAST(t1.c0 AS NUMERIC))AND(x'13c4')))OR(CAST(t1.c0 AS INTEGER)))) ORDER BY (~ (CASE WHEN v0.c4 THEN v0.c4 END));
SELECT COUNT(*) FROM v0 INNER JOIN t1 ON ((v0.c3)>=(((v0.c0) NOT NULL))) LEFT OUTER JOIN t0 ON ((((v0.c0)LIKE(t1.c0))) NOTNULL) WHERE (((((((v0.c4)OR(v0.c4)))OR(v0.c1)))%(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c4)OR(v0.c4)))OR(v0.c1)))%(x''))) IS TRUE)  as count FROM v0 INNER JOIN t1 ON ((v0.c3)>=(((v0.c0) NOT NULL))) LEFT OUTER JOIN t0 ON ((((v0.c0)LIKE(t1.c0))) NOTNULL));
SELECT COUNT(*) FROM v0 INNER JOIN t1 ON ((v0.c3)>=(((v0.c0) NOT NULL))) LEFT OUTER JOIN t0 ON ((((v0.c0)LIKE(t1.c0))) NOTNULL) WHERE (((((((v0.c4)OR(v0.c4)))OR(v0.c1)))%(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c4)OR(v0.c4)))OR(v0.c1)))%(x''))) IS TRUE)  as count FROM v0 INNER JOIN t1 ON ((v0.c3)>=(((v0.c0) NOT NULL))) LEFT OUTER JOIN t0 ON ((((v0.c0)LIKE(t1.c0))) NOTNULL));
SELECT COUNT(*) FROM v0 INNER JOIN t1 ON ((v0.c3)>=(((v0.c0) NOT NULL))) LEFT OUTER JOIN t0 ON ((((v0.c0)LIKE(t1.c0))) NOTNULL) WHERE (((((((v0.c4)OR(v0.c4)))OR(v0.c1)))%(x'')));
SELECT * FROM t1 WHERE ((+ ((t1.c0 IN ())))) ORDER BY ((t1.c0) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((((t1.c0)OR(t1.c0)))OR(t1.c0)))) DESC  NULLS LAST, ((((t1.c0)||(t1.c0)))-(((t1.c0)>(t1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((t1.c0 IN ())))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((((t1.c0)OR(t1.c0)))OR(t1.c0)))) DESC  NULLS LAST, ((((t1.c0)||(t1.c0)))-(((t1.c0)>(t1.c0)))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE ((+ ((t1.c0 IN ())))) ORDER BY ((t1.c0) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((((t1.c0)OR(t1.c0)))OR(t1.c0)))) DESC  NULLS LAST, ((((t1.c0)||(t1.c0)))-(((t1.c0)>(t1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((t1.c0 IN ())))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((((t1.c0)OR(t1.c0)))OR(t1.c0)))) DESC  NULLS LAST, ((((t1.c0)||(t1.c0)))-(((t1.c0)>(t1.c0)))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE ((+ ((t1.c0 IN ())))) ORDER BY ((t1.c0) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((((t1.c0)OR(t1.c0)))OR(t1.c0)))) DESC  NULLS LAST, ((((t1.c0)||(t1.c0)))-(((t1.c0)>(t1.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE ((~ (t1.c0)) COLLATE RTRIM) ORDER BY ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))%(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN -239245110 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))%(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN -239245110 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((~ (t1.c0)) COLLATE RTRIM) ORDER BY ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))%(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN -239245110 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))%(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN -239245110 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((~ (t1.c0)) COLLATE RTRIM) ORDER BY ((((((t1.c0)AND(t1.c0)))AND(t1.c0)))%(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN -239245110 END)) DESC  NULLS LAST;
SELECT * FROM t1, v0 WHERE (((NULL)||((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL)||((+ (v0.c0))))) IS TRUE)  as count FROM t1, v0);
SELECT * FROM t1, v0 WHERE (((NULL)||((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL)||((+ (v0.c0))))) IS TRUE)  as count FROM t1, v0);
SELECT * FROM t1, v0 WHERE (((NULL)||((+ (v0.c0)))));
SELECT ALL * FROM t0, t1 FULL OUTER JOIN v0 ON (((((t1.c0, v0.c2, v0.c4))>=((v0.c1, v0.c2, v0.c4)))) NOT NULL) WHERE ((~ (((v0.c1)<<(t0.c96)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c1)<<(t0.c96))))) IS TRUE)  as count FROM t0, t1 FULL OUTER JOIN v0 ON (((((t1.c0, v0.c2, v0.c4))>=((v0.c1, v0.c2, v0.c4)))) NOT NULL));
SELECT ALL * FROM t0, t1 FULL OUTER JOIN v0 ON (((((t1.c0, v0.c2, v0.c4))>=((v0.c1, v0.c2, v0.c4)))) NOT NULL) WHERE ((~ (((v0.c1)<<(t0.c96)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c1)<<(t0.c96))))) IS TRUE)  as count FROM t0, t1 FULL OUTER JOIN v0 ON (((((t1.c0, v0.c2, v0.c4))>=((v0.c1, v0.c2, v0.c4)))) NOT NULL));
SELECT ALL * FROM t0, t1 FULL OUTER JOIN v0 ON (((((t1.c0, v0.c2, v0.c4))>=((v0.c1, v0.c2, v0.c4)))) NOT NULL) WHERE ((~ (((v0.c1)<<(t0.c96)))));
SELECT COUNT(*) FROM v0, t0, t1 WHERE (((CASE v0.c0  WHEN x'7ce34197' THEN v0.c1 ELSE v0.c2 END)!=(CAST(v0.c1 AS REAL)))) ORDER BY ((CAST(v0.c2 AS BLOB)) NOTNULL) DESC, 0.4655044256569889 DESC, ((CASE v0.c0  WHEN v0.c0 THEN v0.c3 END)<<(((v0.c3) NOT BETWEEN (t0.c96) AND ('^㥠|Ds]8|K'))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN x'7ce34197' THEN v0.c1 ELSE v0.c2 END)<>(CAST(v0.c1 AS REAL)))) IS TRUE)  as count FROM v0, t0, t1 ORDER BY ((CAST(v0.c2 AS BLOB)) NOTNULL) DESC, 0.4655044256569889 DESC, ((CASE v0.c0  WHEN v0.c0 THEN v0.c3 END)<<(((v0.c3) NOT BETWEEN (t0.c96) AND ('^㥠|Ds]8|K')))));
SELECT COUNT(*) FROM v0, t0, t1 WHERE (((CASE v0.c0  WHEN x'7ce34197' THEN v0.c1 ELSE v0.c2 END)!=(CAST(v0.c1 AS REAL)))) ORDER BY ((CAST(v0.c2 AS BLOB)) NOTNULL) DESC, 0.4655044256569889 DESC, ((CASE v0.c0  WHEN v0.c0 THEN v0.c3 END)<<(((v0.c3) NOT BETWEEN (t0.c96) AND ('^㥠|Ds]8|K'))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN x'7ce34197' THEN v0.c1 ELSE v0.c2 END)<>(CAST(v0.c1 AS REAL)))) IS TRUE)  as count FROM v0, t0, t1 ORDER BY ((CAST(v0.c2 AS BLOB)) NOTNULL) DESC, 0.4655044256569889 DESC, ((CASE v0.c0  WHEN v0.c0 THEN v0.c3 END)<<(((v0.c3) NOT BETWEEN (t0.c96) AND ('^㥠|Ds]8|K')))));
SELECT COUNT(*) FROM v0, t0, t1 WHERE (((CASE v0.c0  WHEN x'7ce34197' THEN v0.c1 ELSE v0.c2 END)!=(CAST(v0.c1 AS REAL)))) ORDER BY ((CAST(v0.c2 AS BLOB)) NOTNULL) DESC, 0.4655044256569889 DESC, ((CASE v0.c0  WHEN v0.c0 THEN v0.c3 END)<<(((v0.c3) NOT BETWEEN (t0.c96) AND ('^㥠|Ds]8|K'))));
SELECT COUNT(*) FROM t1 WHERE ((+ ((NOT (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((NOT (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((+ ((NOT (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((NOT (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((+ ((NOT (t1.c0)))));
SELECT ALL * FROM v0 WHERE ((NOT (0.03388531579005016)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.03388531579005016))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT (0.03388531579005016)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.03388531579005016))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT (0.03388531579005016)));
SELECT ALL COUNT(*) FROM v0, t1 WHERE ((~ (v0.c1)) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (v0.c1)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM v0, t1);
SELECT ALL COUNT(*) FROM v0, t1 WHERE ((~ (v0.c1)) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (v0.c1)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM v0, t1);
SELECT ALL COUNT(*) FROM v0, t1 WHERE ((~ (v0.c1)) COLLATE NOCASE COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((((((v0.c2)OR(v0.c3)))AND(t0.c96)))AND(v0.c3)))OR(v0.c3)))%('1-偃vdD\n'))) ORDER BY (((((t0.c96)) BETWEEN ((v0.c4)) AND ((v0.c4))))=(((((v0.c4)AND(t0.c96)))AND(v0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c2)OR(v0.c3)))AND(t0.c96)))AND(v0.c3)))OR(v0.c3)))%('1-偃vdD\n'))) IS TRUE)  as count FROM t0, v0 ORDER BY (((((t0.c96)) BETWEEN ((v0.c4)) AND ((v0.c4))))=(((((v0.c4)AND(t0.c96)))AND(v0.c4)))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((((((v0.c2)OR(v0.c3)))AND(t0.c96)))AND(v0.c3)))OR(v0.c3)))%('1-偃vdD\n'))) ORDER BY (((((t0.c96)) BETWEEN ((v0.c4)) AND ((v0.c4))))=(((((v0.c4)AND(t0.c96)))AND(v0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c2)OR(v0.c3)))AND(t0.c96)))AND(v0.c3)))OR(v0.c3)))%('1-偃vdD\n'))) IS TRUE)  as count FROM t0, v0 ORDER BY (((((t0.c96)) BETWEEN ((v0.c4)) AND ((v0.c4))))=(((((v0.c4)AND(t0.c96)))AND(v0.c4)))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((((((v0.c2)OR(v0.c3)))AND(t0.c96)))AND(v0.c3)))OR(v0.c3)))%('1-偃vdD\n'))) ORDER BY (((((t0.c96)) BETWEEN ((v0.c4)) AND ((v0.c4))))=(((((v0.c4)AND(t0.c96)))AND(v0.c4))));
SELECT * FROM v0 WHERE (((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END) NOT NULL)) ORDER BY ((((v0.c2) IS FALSE))/((+ (v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2) IS FALSE))/((+ (v0.c0)))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END) NOT NULL)) ORDER BY ((((v0.c2) IS FALSE))/((+ (v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2) IS FALSE))/((+ (v0.c0)))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END) NOT NULL)) ORDER BY ((((v0.c2) IS FALSE))/((+ (v0.c0)))) ASC  NULLS LAST;
SELECT * FROM v0, t1 LEFT OUTER JOIN t0 ON (((((t0.c96)) BETWEEN ((v0.c3)) AND ((v0.c4))))&(LOWER(DISTINCT v0.c3))) WHERE ((- ((NOT (v0.c4)))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (v0.c4))))) IS TRUE)  as count FROM v0, t1 LEFT OUTER JOIN t0 ON (((((t0.c96)) BETWEEN ((v0.c3)) AND ((v0.c4))))&(LOWER(DISTINCT v0.c3))));
SELECT * FROM v0, t1 LEFT OUTER JOIN t0 ON (((((t0.c96)) BETWEEN ((v0.c3)) AND ((v0.c4))))&(LOWER(DISTINCT v0.c3))) WHERE ((- ((NOT (v0.c4)))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (v0.c4))))) IS TRUE)  as count FROM v0, t1 LEFT OUTER JOIN t0 ON (((((t0.c96)) BETWEEN ((v0.c3)) AND ((v0.c4))))&(LOWER(DISTINCT v0.c3))));
SELECT * FROM v0, t1 LEFT OUTER JOIN t0 ON (((((t0.c96)) BETWEEN ((v0.c3)) AND ((v0.c4))))&(LOWER(DISTINCT v0.c3))) WHERE ((- ((NOT (v0.c4)))));
SELECT * FROM v0, t1 WHERE (CAST(0.995590057924025 AS REAL)) ORDER BY (((v0.c3)) BETWEEN ((v0.c1)) AND (((v0.c2 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.995590057924025 AS REAL)) IS TRUE)  as count FROM v0, t1 ORDER BY (((v0.c3)) BETWEEN ((v0.c1)) AND (((v0.c2 IN ())))) DESC);
SELECT * FROM v0, t1 WHERE (CAST(0.995590057924025 AS REAL)) ORDER BY (((v0.c3)) BETWEEN ((v0.c1)) AND (((v0.c2 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.995590057924025 AS REAL)) IS TRUE)  as count FROM v0, t1 ORDER BY (((v0.c3)) BETWEEN ((v0.c1)) AND (((v0.c2 IN ())))) DESC);
SELECT * FROM v0, t1 WHERE (CAST(0.995590057924025 AS REAL)) ORDER BY (((v0.c3)) BETWEEN ((v0.c1)) AND (((v0.c2 IN ())))) DESC;
SELECT ALL COUNT(*) FROM t0, t1 WHERE (((((((t1.c0, t1.c0, t1.c0))<((t0.c96, t1.c0, t1.c0))), ((t1.c0)+(t1.c0)), ((t1.c0)<>('驨<'))))!=(((((t1.c0, x'', t1.c0)) BETWEEN ((t0.c96, t1.c0, '9')) AND ((t1.c0, t0.c96, t1.c0))), t0.c96, CASE t1.c0  WHEN x'78c7' THEN t0.c96 END)))) ORDER BY LOWER(DISTINCT t1.c0) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0, t1.c0, t1.c0))<((t0.c96, t1.c0, t1.c0))), ((t1.c0)+(t1.c0)), ((t1.c0)<>('驨<'))))<>(((((t1.c0, x'', t1.c0)) BETWEEN ((t0.c96, t1.c0, '9')) AND ((t1.c0, t0.c96, t1.c0))), t0.c96, CASE t1.c0  WHEN x'78c7' THEN t0.c96 END)))) IS TRUE)  as count FROM t0, t1 ORDER BY LOWER(DISTINCT t1.c0) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (((((((t1.c0, t1.c0, t1.c0))<((t0.c96, t1.c0, t1.c0))), ((t1.c0)+(t1.c0)), ((t1.c0)<>('驨<'))))!=(((((t1.c0, x'', t1.c0)) BETWEEN ((t0.c96, t1.c0, '9')) AND ((t1.c0, t0.c96, t1.c0))), t0.c96, CASE t1.c0  WHEN x'78c7' THEN t0.c96 END)))) ORDER BY LOWER(DISTINCT t1.c0) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0, t1.c0, t1.c0))<((t0.c96, t1.c0, t1.c0))), ((t1.c0)+(t1.c0)), ((t1.c0)<>('驨<'))))<>(((((t1.c0, x'', t1.c0)) BETWEEN ((t0.c96, t1.c0, '9')) AND ((t1.c0, t0.c96, t1.c0))), t0.c96, CASE t1.c0  WHEN x'78c7' THEN t0.c96 END)))) IS TRUE)  as count FROM t0, t1 ORDER BY LOWER(DISTINCT t1.c0) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (((((((t1.c0, t1.c0, t1.c0))<((t0.c96, t1.c0, t1.c0))), ((t1.c0)+(t1.c0)), ((t1.c0)<>('驨<'))))!=(((((t1.c0, x'', t1.c0)) BETWEEN ((t0.c96, t1.c0, '9')) AND ((t1.c0, t0.c96, t1.c0))), t0.c96, CASE t1.c0  WHEN x'78c7' THEN t0.c96 END)))) ORDER BY LOWER(DISTINCT t1.c0) COLLATE BINARY  NULLS LAST;
SELECT * FROM v0 WHERE (v0.c4) ORDER BY (((v0.c2 IN ())) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c4) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2 IN ())) NOTNULL)  NULLS FIRST);
SELECT * FROM v0 WHERE (v0.c4) ORDER BY (((v0.c2 IN ())) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c4) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2 IN ())) NOTNULL)  NULLS FIRST);
SELECT * FROM v0 WHERE (v0.c4) ORDER BY (((v0.c2 IN ())) NOTNULL)  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c96 COLLATE RTRIM))>((t0.c96))));
SELECT SUM(count) FROM (SELECT (((((t0.c96 COLLATE RTRIM))>((t0.c96)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c96 COLLATE RTRIM))>((t0.c96))));
SELECT SUM(count) FROM (SELECT (((((t0.c96 COLLATE RTRIM))>((t0.c96)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c96 COLLATE RTRIM))>((t0.c96))));
SELECT ALL COUNT(*) FROM t1, v0 INNER JOIN t0 ON v0.c1 WHERE (CAST(NULL AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS REAL)) IS TRUE)  as count FROM t1, v0 INNER JOIN t0 ON v0.c1);
SELECT ALL COUNT(*) FROM t1, v0 INNER JOIN t0 ON v0.c1 WHERE (CAST(NULL AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS REAL)) IS TRUE)  as count FROM t1, v0 INNER JOIN t0 ON v0.c1);
SELECT ALL COUNT(*) FROM t1, v0 INNER JOIN t0 ON v0.c1 WHERE (CAST(NULL AS REAL));
SELECT * FROM v0 WHERE (TOTAL_CHANGES()) ORDER BY CASE WHEN ((v0.c2)AND(v0.c4)) THEN ((v0.c2) NOTNULL) WHEN (((v0.c2, v0.c3, v0.c4))<((v0.c4, v0.c0, v0.c2))) THEN ((v0.c1) BETWEEN (v0.c4) AND (v0.c0)) WHEN v0.c2 COLLATE NOCASE THEN ((((x'')OR(v0.c0)))OR(v0.c3)) ELSE CASE v0.c2  WHEN v0.c0 THEN v0.c4 WHEN v0.c0 THEN v0.c1 WHEN v0.c3 THEN v0.c3 ELSE v0.c2 END END DESC, (+ ((('-1930631550')OR(v0.c4))));
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c2)AND(v0.c4)) THEN ((v0.c2) NOTNULL) WHEN (((v0.c2, v0.c3, v0.c4))<((v0.c4, v0.c0, v0.c2))) THEN ((v0.c1) BETWEEN (v0.c4) AND (v0.c0)) WHEN v0.c2 COLLATE NOCASE THEN ((((x'')OR(v0.c0)))OR(v0.c3)) ELSE CASE v0.c2  WHEN v0.c0 THEN v0.c4 WHEN v0.c0 THEN v0.c1 WHEN v0.c3 THEN v0.c3 ELSE v0.c2 END END DESC, (+ ((('-1930631550')OR(v0.c4)))));
SELECT * FROM v0 WHERE (TOTAL_CHANGES()) ORDER BY CASE WHEN ((v0.c2)AND(v0.c4)) THEN ((v0.c2) NOTNULL) WHEN (((v0.c2, v0.c3, v0.c4))<((v0.c4, v0.c0, v0.c2))) THEN ((v0.c1) BETWEEN (v0.c4) AND (v0.c0)) WHEN v0.c2 COLLATE NOCASE THEN ((((x'')OR(v0.c0)))OR(v0.c3)) ELSE CASE v0.c2  WHEN v0.c0 THEN v0.c4 WHEN v0.c0 THEN v0.c1 WHEN v0.c3 THEN v0.c3 ELSE v0.c2 END END DESC, (+ ((('-1930631550')OR(v0.c4))));
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c2)AND(v0.c4)) THEN ((v0.c2) NOTNULL) WHEN (((v0.c2, v0.c3, v0.c4))<((v0.c4, v0.c0, v0.c2))) THEN ((v0.c1) BETWEEN (v0.c4) AND (v0.c0)) WHEN v0.c2 COLLATE NOCASE THEN ((((x'')OR(v0.c0)))OR(v0.c3)) ELSE CASE v0.c2  WHEN v0.c0 THEN v0.c4 WHEN v0.c0 THEN v0.c1 WHEN v0.c3 THEN v0.c3 ELSE v0.c2 END END DESC, (+ ((('-1930631550')OR(v0.c4)))));
SELECT * FROM v0 WHERE (TOTAL_CHANGES()) ORDER BY CASE WHEN ((v0.c2)AND(v0.c4)) THEN ((v0.c2) NOTNULL) WHEN (((v0.c2, v0.c3, v0.c4))<((v0.c4, v0.c0, v0.c2))) THEN ((v0.c1) BETWEEN (v0.c4) AND (v0.c0)) WHEN v0.c2 COLLATE NOCASE THEN ((((x'')OR(v0.c0)))OR(v0.c3)) ELSE CASE v0.c2  WHEN v0.c0 THEN v0.c4 WHEN v0.c0 THEN v0.c1 WHEN v0.c3 THEN v0.c3 ELSE v0.c2 END END DESC, (+ ((('-1930631550')OR(v0.c4))));
SELECT ALL * FROM t1, t0, v0 WHERE (CAST(CASE WHEN t0.c96 THEN v0.c3 END AS BLOB)) ORDER BY ((((((((((v0.c2)OR(t0.c96)))OR(v0.c0)))OR(v0.c1)))AND(v0.c4)))<<(CASE WHEN v0.c3 THEN t0.c96 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c96 THEN v0.c3 END AS BLOB)) IS TRUE)  as count FROM t1, t0, v0 ORDER BY ((((((((((v0.c2)OR(t0.c96)))OR(v0.c0)))OR(v0.c1)))AND(v0.c4)))<<(CASE WHEN v0.c3 THEN t0.c96 END)));
SELECT ALL * FROM t1, t0, v0 WHERE (CAST(CASE WHEN t0.c96 THEN v0.c3 END AS BLOB)) ORDER BY ((((((((((v0.c2)OR(t0.c96)))OR(v0.c0)))OR(v0.c1)))AND(v0.c4)))<<(CASE WHEN v0.c3 THEN t0.c96 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c96 THEN v0.c3 END AS BLOB)) IS TRUE)  as count FROM t1, t0, v0 ORDER BY ((((((((((v0.c2)OR(t0.c96)))OR(v0.c0)))OR(v0.c1)))AND(v0.c4)))<<(CASE WHEN v0.c3 THEN t0.c96 END)));
SELECT ALL * FROM t1, t0, v0 WHERE (CAST(CASE WHEN t0.c96 THEN v0.c3 END AS BLOB)) ORDER BY ((((((((((v0.c2)OR(t0.c96)))OR(v0.c0)))OR(v0.c1)))AND(v0.c4)))<<(CASE WHEN v0.c3 THEN t0.c96 END));
SELECT * FROM t0, t1 WHERE (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM) ORDER BY load_extension(t1.c0, t1.c0) COLLATE NOCASE  NULLS FIRST, ((t1.c0) NOT BETWEEN ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))) AND ('802998139'));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, t1 ORDER BY load_extension(t1.c0, t1.c0) COLLATE NOCASE  NULLS FIRST, ((t1.c0) NOT BETWEEN ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))) AND ('802998139')));
SELECT * FROM t0, t1 WHERE (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM) ORDER BY load_extension(t1.c0, t1.c0) COLLATE NOCASE  NULLS FIRST, ((t1.c0) NOT BETWEEN ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))) AND ('802998139'));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, t1 ORDER BY load_extension(t1.c0, t1.c0) COLLATE NOCASE  NULLS FIRST, ((t1.c0) NOT BETWEEN ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))) AND ('802998139')));
SELECT COUNT(*) FROM t0 WHERE (ABS(((((t0.c96)AND(t0.c96)))OR(t0.c96)))) ORDER BY ((((t0.c96)GLOB(t0.c96))) BETWEEN (((t0.c96)&(t0.c96))) AND ((- (t0.c96))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(((((t0.c96)AND(t0.c96)))OR(t0.c96)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c96)GLOB(t0.c96))) BETWEEN (((t0.c96)&(t0.c96))) AND ((- (t0.c96))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (ABS(((((t0.c96)AND(t0.c96)))OR(t0.c96)))) ORDER BY ((((t0.c96)GLOB(t0.c96))) BETWEEN (((t0.c96)&(t0.c96))) AND ((- (t0.c96))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(((((t0.c96)AND(t0.c96)))OR(t0.c96)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c96)GLOB(t0.c96))) BETWEEN (((t0.c96)&(t0.c96))) AND ((- (t0.c96))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (ABS(((((t0.c96)AND(t0.c96)))OR(t0.c96)))) ORDER BY ((((t0.c96)GLOB(t0.c96))) BETWEEN (((t0.c96)&(t0.c96))) AND ((- (t0.c96))))  NULLS FIRST;
SELECT COUNT(*) FROM t1, t0, v0 WHERE ((((((v0.c0)OR(v0.c0)))AND(t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)OR(v0.c0)))AND(t1.c0)) IN ())) IS TRUE)  as count FROM t1, t0, v0);
SELECT COUNT(*) FROM t1, t0, v0 WHERE ((((((v0.c0)OR(v0.c0)))AND(t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)OR(v0.c0)))AND(t1.c0)) IN ())) IS TRUE)  as count FROM t1, t0, v0);
SELECT COUNT(*) FROM t1, t0, v0 WHERE ((((((v0.c0)OR(v0.c0)))AND(t1.c0)) IN ()));
SELECT * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) ISNULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) ISNULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) ISNULL));
SELECT ALL * FROM t0 WHERE ((((t0.c96 IN ())) NOT NULL)) ORDER BY NULL ASC  NULLS FIRST, SQLITE_COMPILEOPTION_GET(((t0.c96) ISNULL)) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c96 IN ())) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY NULL ASC  NULLS FIRST, SQLITE_COMPILEOPTION_GET(((t0.c96) ISNULL)) DESC);
SELECT ALL * FROM t0 WHERE ((((t0.c96 IN ())) NOT NULL)) ORDER BY NULL ASC  NULLS FIRST, SQLITE_COMPILEOPTION_GET(((t0.c96) ISNULL)) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c96 IN ())) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY NULL ASC  NULLS FIRST, SQLITE_COMPILEOPTION_GET(((t0.c96) ISNULL)) DESC);
SELECT ALL * FROM t0 WHERE ((((t0.c96 IN ())) NOT NULL)) ORDER BY NULL ASC  NULLS FIRST, SQLITE_COMPILEOPTION_GET(((t0.c96) ISNULL)) DESC;
SELECT COUNT(*) FROM t1, v0 WHERE (((v0.c3 COLLATE NOCASE) BETWEEN (x'') AND (CASE WHEN v0.c2 THEN v0.c3 END))) ORDER BY (((NOT (v0.c4)))>(((v0.c3)>(x'48aa')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c3 COLLATE NOCASE) BETWEEN (x'') AND (CASE WHEN v0.c2 THEN v0.c3 END))) IS TRUE)  as count FROM t1, v0 ORDER BY (((NOT (v0.c4)))>(((v0.c3)>(x'48aa')))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, v0 WHERE (((v0.c3 COLLATE NOCASE) BETWEEN (x'') AND (CASE WHEN v0.c2 THEN v0.c3 END))) ORDER BY (((NOT (v0.c4)))>(((v0.c3)>(x'48aa')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c3 COLLATE NOCASE) BETWEEN (x'') AND (CASE WHEN v0.c2 THEN v0.c3 END))) IS TRUE)  as count FROM t1, v0 ORDER BY (((NOT (v0.c4)))>(((v0.c3)>(x'48aa')))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, v0 WHERE (((v0.c3 COLLATE NOCASE) BETWEEN (x'') AND (CASE WHEN v0.c2 THEN v0.c3 END))) ORDER BY (((NOT (v0.c4)))>(((v0.c3)>(x'48aa')))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((((t1.c0)=(t1.c0))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (CASE WHEN t1.c0 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)==(t1.c0))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (CASE WHEN t1.c0 THEN t1.c0 END))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c0)=(t1.c0))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (CASE WHEN t1.c0 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)==(t1.c0))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (CASE WHEN t1.c0 THEN t1.c0 END))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c0)=(t1.c0))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (CASE WHEN t1.c0 THEN t1.c0 END)));
SELECT COUNT(*) FROM v0, t1 WHERE (x'064e') ORDER BY '0.6029195042652938', ((((((((((t1.c0)AND(v0.c4)))AND(v0.c1)))AND(v0.c2)))OR(v0.c1)))LIKE((- (v0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'064e') IS TRUE)  as count FROM v0, t1 ORDER BY '0.6029195042652938', ((((((((((t1.c0)AND(v0.c4)))AND(v0.c1)))AND(v0.c2)))OR(v0.c1)))LIKE((- (v0.c4))))  NULLS LAST);
SELECT COUNT(*) FROM v0, t1 WHERE (x'064e') ORDER BY '0.6029195042652938', ((((((((((t1.c0)AND(v0.c4)))AND(v0.c1)))AND(v0.c2)))OR(v0.c1)))LIKE((- (v0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'064e') IS TRUE)  as count FROM v0, t1 ORDER BY '0.6029195042652938', ((((((((((t1.c0)AND(v0.c4)))AND(v0.c1)))AND(v0.c2)))OR(v0.c1)))LIKE((- (v0.c4))))  NULLS LAST);
SELECT COUNT(*) FROM v0, t1 WHERE (x'064e') ORDER BY '0.6029195042652938', ((((((((((t1.c0)AND(v0.c4)))AND(v0.c1)))AND(v0.c2)))OR(v0.c1)))LIKE((- (v0.c4))))  NULLS LAST;
SELECT ALL * FROM t1, v0, t0 WHERE (CAST((NOT (t0.c96)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t0.c96)) AS TEXT)) IS TRUE)  as count FROM t1, v0, t0);
SELECT ALL * FROM t1, v0, t0 WHERE (CAST((NOT (t0.c96)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t0.c96)) AS TEXT)) IS TRUE)  as count FROM t1, v0, t0);
SELECT ALL * FROM t1, v0, t0 WHERE (CAST((NOT (t0.c96)) AS TEXT));
SELECT COUNT(*) FROM v0, t0 CROSS JOIN t1 ON (((((((((NOT (NULL)))OR((t1.c0 IN ()))))AND((~ (0.249254538327079)))))AND(1620255303)))OR(t1.c0)) WHERE (ABS(DISTINCT CASE v0.c1  WHEN v0.c3 THEN v0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT CASE v0.c1  WHEN v0.c3 THEN v0.c1 END)) IS TRUE)  as count FROM v0, t0 CROSS JOIN t1 ON (((((((((NOT (NULL)))OR((t1.c0 IN ()))))AND((~ (0.249254538327079)))))AND(1620255303)))OR(t1.c0)));
SELECT COUNT(*) FROM v0, t0 CROSS JOIN t1 ON (((((((((NOT (NULL)))OR((t1.c0 IN ()))))AND((~ (0.249254538327079)))))AND(1620255303)))OR(t1.c0)) WHERE (ABS(DISTINCT CASE v0.c1  WHEN v0.c3 THEN v0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT CASE v0.c1  WHEN v0.c3 THEN v0.c1 END)) IS TRUE)  as count FROM v0, t0 CROSS JOIN t1 ON (((((((((NOT (NULL)))OR((t1.c0 IN ()))))AND((~ (0.249254538327079)))))AND(1620255303)))OR(t1.c0)));
SELECT COUNT(*) FROM v0, t0 CROSS JOIN t1 ON (((((((((NOT (NULL)))OR((t1.c0 IN ()))))AND((~ (0.249254538327079)))))AND(1620255303)))OR(t1.c0)) WHERE (ABS(DISTINCT CASE v0.c1  WHEN v0.c3 THEN v0.c1 END));
SELECT * FROM t1, v0 WHERE (((CASE WHEN 1227336780 THEN v0.c0 END)<>((((v0.c2, v0.c0, v0.c4))>=((v0.c4, t1.c0, 'w\n'))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 1227336780 THEN v0.c0 END)<>((((v0.c2, v0.c0, v0.c4))>=((v0.c4, t1.c0, 'w\n')))))) IS TRUE)  as count FROM t1, v0);
SELECT * FROM t1, v0 WHERE (((CASE WHEN 1227336780 THEN v0.c0 END)<>((((v0.c2, v0.c0, v0.c4))>=((v0.c4, t1.c0, 'w\n'))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 1227336780 THEN v0.c0 END)<>((((v0.c2, v0.c0, v0.c4))>=((v0.c4, t1.c0, 'w\n')))))) IS TRUE)  as count FROM t1, v0);
SELECT * FROM t1, v0 WHERE (((CASE WHEN 1227336780 THEN v0.c0 END)<>((((v0.c2, v0.c0, v0.c4))>=((v0.c4, t1.c0, 'w\n'))))));
SELECT ALL * FROM t0, v0, t1 WHERE ((- ((+ (t0.c96)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (t0.c96))))) IS TRUE)  as count FROM t0, v0, t1);
SELECT ALL * FROM t0, v0, t1 WHERE ((- ((+ (t0.c96)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (t0.c96))))) IS TRUE)  as count FROM t0, v0, t1);
SELECT ALL * FROM t0, v0, t1 WHERE ((- ((+ (t0.c96)))));
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0) NOT BETWEEN (((t1.c0)<(t1.c0))) AND (TYPEOF(DISTINCT 0.5935703381648227)))) ORDER BY (NOT (t1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT BETWEEN (((t1.c0)<(t1.c0))) AND (TYPEOF(DISTINCT 0.5935703381648227)))) IS TRUE)  as count FROM t1 ORDER BY (NOT (t1.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0) NOT BETWEEN (((t1.c0)<(t1.c0))) AND (TYPEOF(DISTINCT 0.5935703381648227)))) ORDER BY (NOT (t1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT BETWEEN (((t1.c0)<(t1.c0))) AND (TYPEOF(DISTINCT 0.5935703381648227)))) IS TRUE)  as count FROM t1 ORDER BY (NOT (t1.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0) NOT BETWEEN (((t1.c0)<(t1.c0))) AND (TYPEOF(DISTINCT 0.5935703381648227)))) ORDER BY (NOT (t1.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (HEX(DISTINCT ((t0.c96) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((t0.c96) NOT NULL))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (HEX(DISTINCT ((t0.c96) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((t0.c96) NOT NULL))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (HEX(DISTINCT ((t0.c96) NOT NULL)));
SELECT ALL COUNT(*) FROM t1, t0 WHERE (t0.c96) ORDER BY CAST(((x'')<(t0.c96)) AS INTEGER) ASC, (((t1.c0 IN (t1.c0, t1.c0, t1.c0)))<=(t1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((t0.c96) IS TRUE)  as count FROM t1, t0 ORDER BY CAST(((x'')<(t0.c96)) AS INTEGER) ASC, (((t1.c0 IN (t1.c0, t1.c0, t1.c0)))<=(t1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t1, t0 WHERE (t0.c96) ORDER BY CAST(((x'')<(t0.c96)) AS INTEGER) ASC, (((t1.c0 IN (t1.c0, t1.c0, t1.c0)))<=(t1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((t0.c96) IS TRUE)  as count FROM t1, t0 ORDER BY CAST(((x'')<(t0.c96)) AS INTEGER) ASC, (((t1.c0 IN (t1.c0, t1.c0, t1.c0)))<=(t1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t1, t0 WHERE (t0.c96) ORDER BY CAST(((x'')<(t0.c96)) AS INTEGER) ASC, (((t1.c0 IN (t1.c0, t1.c0, t1.c0)))<=(t1.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c96)<=(t0.c96)))||(((((((((t0.c96)AND(t0.c96)))OR(t0.c96)))OR(t0.c96)))AND(t0.c96)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c96)<=(t0.c96)))||(((((((((t0.c96)AND(t0.c96)))OR(t0.c96)))OR(t0.c96)))AND(t0.c96))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c96)<=(t0.c96)))||(((((((((t0.c96)AND(t0.c96)))OR(t0.c96)))OR(t0.c96)))AND(t0.c96)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c96)<=(t0.c96)))||(((((((((t0.c96)AND(t0.c96)))OR(t0.c96)))OR(t0.c96)))AND(t0.c96))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c96)<=(t0.c96)))||(((((((((t0.c96)AND(t0.c96)))OR(t0.c96)))OR(t0.c96)))AND(t0.c96)))));
SELECT COUNT(*) FROM v0, t0 WHERE ((((((((((~ (v0.c3)))AND((- (v0.c2)))))OR(json_insert(v0.c3, t0.c96, v0.c4, v0.c3, x'6d2e'))))AND(CAST(v0.c2 AS REAL))))OR(((((v0.c2)AND(v0.c0)))AND(v0.c0))))) ORDER BY CASE CAST(t0.c96 AS NUMERIC)  WHEN 0.10356336368795438 THEN CASE WHEN v0.c2 THEN v0.c0 END WHEN CAST(v0.c2 AS REAL) THEN NULL WHEN CASE v0.c1  WHEN 0.36244401353978084 THEN v0.c2 END THEN ((t0.c96) NOT BETWEEN (v0.c4) AND (v0.c2)) END, ((+ (v0.c3)) IN (((((((((v0.c4)OR(v0.c4)))AND(v0.c4)))OR(v0.c2)))AND(v0.c2)), ((v0.c1) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((~ (v0.c3)))AND((- (v0.c2)))))OR(json_insert(v0.c3, t0.c96, v0.c4, v0.c3, x'6d2e'))))AND(CAST(v0.c2 AS REAL))))OR(((((v0.c2)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY CASE CAST(t0.c96 AS NUMERIC)  WHEN 0.10356336368795438 THEN CASE WHEN v0.c2 THEN v0.c0 END WHEN CAST(v0.c2 AS REAL) THEN NULL WHEN CASE v0.c1  WHEN 0.36244401353978084 THEN v0.c2 END THEN ((t0.c96) NOT BETWEEN (v0.c4) AND (v0.c2)) END, ((+ (v0.c3)) IN (((((((((v0.c4)OR(v0.c4)))AND(v0.c4)))OR(v0.c2)))AND(v0.c2)), ((v0.c1) NOTNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE ((((((((((~ (v0.c3)))AND((- (v0.c2)))))OR(json_insert(v0.c3, t0.c96, v0.c4, v0.c3, x'6d2e'))))AND(CAST(v0.c2 AS REAL))))OR(((((v0.c2)AND(v0.c0)))AND(v0.c0))))) ORDER BY CASE CAST(t0.c96 AS NUMERIC)  WHEN 0.10356336368795438 THEN CASE WHEN v0.c2 THEN v0.c0 END WHEN CAST(v0.c2 AS REAL) THEN NULL WHEN CASE v0.c1  WHEN 0.36244401353978084 THEN v0.c2 END THEN ((t0.c96) NOT BETWEEN (v0.c4) AND (v0.c2)) END, ((+ (v0.c3)) IN (((((((((v0.c4)OR(v0.c4)))AND(v0.c4)))OR(v0.c2)))AND(v0.c2)), ((v0.c1) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((~ (v0.c3)))AND((- (v0.c2)))))OR(json_insert(v0.c3, t0.c96, v0.c4, v0.c3, x'6d2e'))))AND(CAST(v0.c2 AS REAL))))OR(((((v0.c2)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY CASE CAST(t0.c96 AS NUMERIC)  WHEN 0.10356336368795438 THEN CASE WHEN v0.c2 THEN v0.c0 END WHEN CAST(v0.c2 AS REAL) THEN NULL WHEN CASE v0.c1  WHEN 0.36244401353978084 THEN v0.c2 END THEN ((t0.c96) NOT BETWEEN (v0.c4) AND (v0.c2)) END, ((+ (v0.c3)) IN (((((((((v0.c4)OR(v0.c4)))AND(v0.c4)))OR(v0.c2)))AND(v0.c2)), ((v0.c1) NOTNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE ((((((((((~ (v0.c3)))AND((- (v0.c2)))))OR(json_insert(v0.c3, t0.c96, v0.c4, v0.c3, x'6d2e'))))AND(CAST(v0.c2 AS REAL))))OR(((((v0.c2)AND(v0.c0)))AND(v0.c0))))) ORDER BY CASE CAST(t0.c96 AS NUMERIC)  WHEN 0.10356336368795438 THEN CASE WHEN v0.c2 THEN v0.c0 END WHEN CAST(v0.c2 AS REAL) THEN NULL WHEN CASE v0.c1  WHEN 0.36244401353978084 THEN v0.c2 END THEN ((t0.c96) NOT BETWEEN (v0.c4) AND (v0.c2)) END, ((+ (v0.c3)) IN (((((((((v0.c4)OR(v0.c4)))AND(v0.c4)))OR(v0.c2)))AND(v0.c2)), ((v0.c1) NOTNULL)))  NULLS FIRST;
SELECT * FROM t1, v0 WHERE (CAST(CASE WHEN v0.c3 THEN v0.c4 ELSE v0.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c3 THEN v0.c4 ELSE v0.c1 END AS NUMERIC)) IS TRUE)  as count FROM t1, v0);
SELECT * FROM t1, v0 WHERE (CAST(CASE WHEN v0.c3 THEN v0.c4 ELSE v0.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c3 THEN v0.c4 ELSE v0.c1 END AS NUMERIC)) IS TRUE)  as count FROM t1, v0);
SELECT * FROM t1, v0 WHERE (CAST(CASE WHEN v0.c3 THEN v0.c4 ELSE v0.c1 END AS NUMERIC));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c96)AND(t0.c96)) COLLATE BINARY) ORDER BY 0.31502422718590917 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c96)AND(t0.c96)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY 0.31502422718590917 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c96)AND(t0.c96)) COLLATE BINARY) ORDER BY 0.31502422718590917 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c96)AND(t0.c96)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY 0.31502422718590917 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c96)AND(t0.c96)) COLLATE BINARY) ORDER BY 0.31502422718590917 DESC  NULLS LAST;
SELECT ALL * FROM t0 INDEXED BY i47, v0 NOT INDEXED WHERE ((- ((- (x'')))));
SELECT SUM(count) FROM (SELECT (((- ((- (x''))))) IS TRUE)  as count FROM t0 INDEXED BY i47, v0);
SELECT ALL * FROM t0 INDEXED BY i47, v0 NOT INDEXED WHERE ((- ((- (x'')))));
SELECT SUM(count) FROM (SELECT (((- ((- (x''))))) IS TRUE)  as count FROM t0 INDEXED BY i47, v0);
SELECT ALL * FROM t0 INDEXED BY i47, v0 NOT INDEXED WHERE ((- ((- (x'')))));
SELECT ALL COUNT(*) FROM t1 WHERE (0.5554876383043176) ORDER BY t1.c0 ASC, t1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.5554876383043176) IS TRUE)  as count FROM t1 ORDER BY t1.c0 ASC, t1.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (0.5554876383043176) ORDER BY t1.c0 ASC, t1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.5554876383043176) IS TRUE)  as count FROM t1 ORDER BY t1.c0 ASC, t1.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (0.5554876383043176) ORDER BY t1.c0 ASC, t1.c0 ASC  NULLS FIRST;
SELECT ALL * FROM t1, v0, t0 WHERE ((('-2110798128' COLLATE RTRIM) NOT BETWEEN (NULLIF(DISTINCT t1.c0, t1.c0)) AND (NULL))) ORDER BY (((v0.c4, t0.c96, v0.c4)) NOT BETWEEN (((v0.c4 IN (t0.c96)), ((x'')*(t1.c0)), ((((((((v0.c0)AND(v0.c3)))AND(v0.c0)))OR('3%7P넧.F(Q')))AND(NULL)))) AND ((CASE v0.c0  WHEN t1.c0 THEN 0.6111389050562482 ELSE t0.c96 END, ((v0.c2) BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS TEXT))))  NULLS LAST, (((v0.c2 IN ())) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-2110798128' COLLATE RTRIM) NOT BETWEEN (NULLIF(DISTINCT t1.c0, t1.c0)) AND (NULL))) IS TRUE)  as count FROM t1, v0, t0 ORDER BY (((v0.c4, t0.c96, v0.c4)) NOT BETWEEN (((v0.c4 IN (t0.c96)), ((x'')*(t1.c0)), ((((((((v0.c0)AND(v0.c3)))AND(v0.c0)))OR('3%7P넧.F(Q')))AND(NULL)))) AND ((CASE v0.c0  WHEN t1.c0 THEN 0.6111389050562482 ELSE t0.c96 END, ((v0.c2) BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS TEXT))))  NULLS LAST, (((v0.c2 IN ())) ISNULL)  NULLS FIRST);
SELECT ALL * FROM t1, v0, t0 WHERE ((('-2110798128' COLLATE RTRIM) NOT BETWEEN (NULLIF(DISTINCT t1.c0, t1.c0)) AND (NULL))) ORDER BY (((v0.c4, t0.c96, v0.c4)) NOT BETWEEN (((v0.c4 IN (t0.c96)), ((x'')*(t1.c0)), ((((((((v0.c0)AND(v0.c3)))AND(v0.c0)))OR('3%7P넧.F(Q')))AND(NULL)))) AND ((CASE v0.c0  WHEN t1.c0 THEN 0.6111389050562482 ELSE t0.c96 END, ((v0.c2) BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS TEXT))))  NULLS LAST, (((v0.c2 IN ())) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-2110798128' COLLATE RTRIM) NOT BETWEEN (NULLIF(DISTINCT t1.c0, t1.c0)) AND (NULL))) IS TRUE)  as count FROM t1, v0, t0 ORDER BY (((v0.c4, t0.c96, v0.c4)) NOT BETWEEN (((v0.c4 IN (t0.c96)), ((x'')*(t1.c0)), ((((((((v0.c0)AND(v0.c3)))AND(v0.c0)))OR('3%7P넧.F(Q')))AND(NULL)))) AND ((CASE v0.c0  WHEN t1.c0 THEN 0.6111389050562482 ELSE t0.c96 END, ((v0.c2) BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS TEXT))))  NULLS LAST, (((v0.c2 IN ())) ISNULL)  NULLS FIRST);
SELECT ALL * FROM t1, v0, t0 WHERE ((('-2110798128' COLLATE RTRIM) NOT BETWEEN (NULLIF(DISTINCT t1.c0, t1.c0)) AND (NULL))) ORDER BY (((v0.c4, t0.c96, v0.c4)) NOT BETWEEN (((v0.c4 IN (t0.c96)), ((x'')*(t1.c0)), ((((((((v0.c0)AND(v0.c3)))AND(v0.c0)))OR('3%7P넧.F(Q')))AND(NULL)))) AND ((CASE v0.c0  WHEN t1.c0 THEN 0.6111389050562482 ELSE t0.c96 END, ((v0.c2) BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS TEXT))))  NULLS LAST, (((v0.c2 IN ())) ISNULL)  NULLS FIRST;
SELECT * FROM t1, t0, v0 WHERE (CASE WHEN (- (v0.c1)) THEN CAST(v0.c0 AS BLOB) ELSE CASE v0.c3  WHEN x'' THEN v0.c2 WHEN v0.c4 THEN v0.c0 WHEN t1.c0 THEN t0.c96 ELSE v0.c4 END END) ORDER BY CAST(x'' AS REAL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (v0.c1)) THEN CAST(v0.c0 AS BLOB) ELSE CASE v0.c3  WHEN x'' THEN v0.c2 WHEN v0.c4 THEN v0.c0 WHEN t1.c0 THEN t0.c96 ELSE v0.c4 END END) IS TRUE)  as count FROM t1, t0, v0 ORDER BY CAST(x'' AS REAL));
SELECT * FROM t1, t0, v0 WHERE (CASE WHEN (- (v0.c1)) THEN CAST(v0.c0 AS BLOB) ELSE CASE v0.c3  WHEN x'' THEN v0.c2 WHEN v0.c4 THEN v0.c0 WHEN t1.c0 THEN t0.c96 ELSE v0.c4 END END) ORDER BY CAST(x'' AS REAL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (v0.c1)) THEN CAST(v0.c0 AS BLOB) ELSE CASE v0.c3  WHEN x'' THEN v0.c2 WHEN v0.c4 THEN v0.c0 WHEN t1.c0 THEN t0.c96 ELSE v0.c4 END END) IS TRUE)  as count FROM t1, t0, v0 ORDER BY CAST(x'' AS REAL));
SELECT * FROM t1, t0, v0 WHERE (CASE WHEN (- (v0.c1)) THEN CAST(v0.c0 AS BLOB) ELSE CASE v0.c3  WHEN x'' THEN v0.c2 WHEN v0.c4 THEN v0.c0 WHEN t1.c0 THEN t0.c96 ELSE v0.c4 END END) ORDER BY CAST(x'' AS REAL);
SELECT * FROM v0 WHERE (CAST(v0.c1 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 AS BLOB)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c1 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 AS BLOB)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c1 AS BLOB));
SELECT * FROM t1 WHERE (((((((((((((((t1.c0)==(t1.c0)))OR((t1.c0 IN ()))))AND(TRIM(DISTINCT t1.c0, t1.c0))))AND(NULL)))AND((((t1.c0))!=((t1.c0))))))OR(((t1.c0)/(t1.c0)))))OR((((t1.c0))>((t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t1.c0)=(t1.c0)))OR((t1.c0 IN ()))))AND(TRIM(DISTINCT t1.c0, t1.c0))))AND(NULL)))AND((((t1.c0))<>((t1.c0))))))OR(((t1.c0)/(t1.c0)))))OR((((t1.c0))>((t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((((((((((((t1.c0)==(t1.c0)))OR((t1.c0 IN ()))))AND(TRIM(DISTINCT t1.c0, t1.c0))))AND(NULL)))AND((((t1.c0))!=((t1.c0))))))OR(((t1.c0)/(t1.c0)))))OR((((t1.c0))>((t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t1.c0)=(t1.c0)))OR((t1.c0 IN ()))))AND(TRIM(DISTINCT t1.c0, t1.c0))))AND(NULL)))AND((((t1.c0))<>((t1.c0))))))OR(((t1.c0)/(t1.c0)))))OR((((t1.c0))>((t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((((((((((((t1.c0)==(t1.c0)))OR((t1.c0 IN ()))))AND(TRIM(DISTINCT t1.c0, t1.c0))))AND(NULL)))AND((((t1.c0))!=((t1.c0))))))OR(((t1.c0)/(t1.c0)))))OR((((t1.c0))>((t1.c0))))));
SELECT ALL COUNT(*) FROM v0, t1, t0 WHERE ((((t1.c0 IN ()))&(HEX(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN ()))&(HEX(v0.c1)))) IS TRUE)  as count FROM v0, t1, t0);
SELECT ALL COUNT(*) FROM v0, t1, t0 WHERE ((((t1.c0 IN ()))&(HEX(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN ()))&(HEX(v0.c1)))) IS TRUE)  as count FROM v0, t1, t0);
SELECT ALL COUNT(*) FROM v0, t1, t0 WHERE ((((t1.c0 IN ()))&(HEX(v0.c1))));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN t0 ON TIME(CASE WHEN t1.c0 THEN t1.c0 WHEN t0.c96 THEN t0.c96 WHEN t1.c0 THEN 0.5294138449786681 WHEN t0.c96 THEN t1.c0 WHEN t0.c96 THEN 0.34305841653716973 END, CASE t1.c0  WHEN t1.c0 THEN t0.c96 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c96 WHEN t1.c0 THEN t1.c0 WHEN t0.c96 THEN t0.c96 END, (((x''))!=((t1.c0))), ((t0.c96)GLOB(t1.c0)), CAST(t1.c0 AS NUMERIC), CAST(t1.c0 AS BLOB), CAST(t1.c0 AS INTEGER)) WHERE ((NOT (((t1.c0)IS NOT(t1.c0))))) ORDER BY (('~IAE[	')&((((t0.c96))>((t1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c0)IS NOT(t1.c0))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON TIME(CASE WHEN t1.c0 THEN t1.c0 WHEN t0.c96 THEN t0.c96 WHEN t1.c0 THEN 0.5294138449786681 WHEN t0.c96 THEN t1.c0 WHEN t0.c96 THEN 0.34305841653716973 END, CASE t1.c0  WHEN t1.c0 THEN t0.c96 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c96 WHEN t1.c0 THEN t1.c0 WHEN t0.c96 THEN t0.c96 END, (((x''))!=((t1.c0))), ((t0.c96)GLOB(t1.c0)), CAST(t1.c0 AS NUMERIC), CAST(t1.c0 AS BLOB), CAST(t1.c0 AS INTEGER)) ORDER BY (('~IAE[	')&((((t0.c96))>((t1.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN t0 ON TIME(CASE WHEN t1.c0 THEN t1.c0 WHEN t0.c96 THEN t0.c96 WHEN t1.c0 THEN 0.5294138449786681 WHEN t0.c96 THEN t1.c0 WHEN t0.c96 THEN 0.34305841653716973 END, CASE t1.c0  WHEN t1.c0 THEN t0.c96 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c96 WHEN t1.c0 THEN t1.c0 WHEN t0.c96 THEN t0.c96 END, (((x''))!=((t1.c0))), ((t0.c96)GLOB(t1.c0)), CAST(t1.c0 AS NUMERIC), CAST(t1.c0 AS BLOB), CAST(t1.c0 AS INTEGER)) WHERE ((NOT (((t1.c0)IS NOT(t1.c0))))) ORDER BY (('~IAE[	')&((((t0.c96))>((t1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c0)IS NOT(t1.c0))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON TIME(CASE WHEN t1.c0 THEN t1.c0 WHEN t0.c96 THEN t0.c96 WHEN t1.c0 THEN 0.5294138449786681 WHEN t0.c96 THEN t1.c0 WHEN t0.c96 THEN 0.34305841653716973 END, CASE t1.c0  WHEN t1.c0 THEN t0.c96 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c96 WHEN t1.c0 THEN t1.c0 WHEN t0.c96 THEN t0.c96 END, (((x''))!=((t1.c0))), ((t0.c96)GLOB(t1.c0)), CAST(t1.c0 AS NUMERIC), CAST(t1.c0 AS BLOB), CAST(t1.c0 AS INTEGER)) ORDER BY (('~IAE[	')&((((t0.c96))>((t1.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN t0 ON TIME(CASE WHEN t1.c0 THEN t1.c0 WHEN t0.c96 THEN t0.c96 WHEN t1.c0 THEN 0.5294138449786681 WHEN t0.c96 THEN t1.c0 WHEN t0.c96 THEN 0.34305841653716973 END, CASE t1.c0  WHEN t1.c0 THEN t0.c96 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c96 WHEN t1.c0 THEN t1.c0 WHEN t0.c96 THEN t0.c96 END, (((x''))!=((t1.c0))), ((t0.c96)GLOB(t1.c0)), CAST(t1.c0 AS NUMERIC), CAST(t1.c0 AS BLOB), CAST(t1.c0 AS INTEGER)) WHERE ((NOT (((t1.c0)IS NOT(t1.c0))))) ORDER BY (('~IAE[	')&((((t0.c96))>((t1.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON (((v0.c2) BETWEEN (v0.c2) AND (v0.c3)) IN ((((v0.c1)) NOT BETWEEN ((v0.c3)) AND ((v0.c3))))) WHERE (((v0.c0) BETWEEN (t0.c96) AND (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (t0.c96) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (((v0.c2) BETWEEN (v0.c2) AND (v0.c3)) IN ((((v0.c1)) NOT BETWEEN ((v0.c3)) AND ((v0.c3))))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON (((v0.c2) BETWEEN (v0.c2) AND (v0.c3)) IN ((((v0.c1)) NOT BETWEEN ((v0.c3)) AND ((v0.c3))))) WHERE (((v0.c0) BETWEEN (t0.c96) AND (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (t0.c96) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (((v0.c2) BETWEEN (v0.c2) AND (v0.c3)) IN ((((v0.c1)) NOT BETWEEN ((v0.c3)) AND ((v0.c3))))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON (((v0.c2) BETWEEN (v0.c2) AND (v0.c3)) IN ((((v0.c1)) NOT BETWEEN ((v0.c3)) AND ((v0.c3))))) WHERE (((v0.c0) BETWEEN (t0.c96) AND (v0.c0)) COLLATE NOCASE);
SELECT * FROM t0 WHERE (((t0.c96 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c96 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c96 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c96 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c96 COLLATE BINARY) ISNULL));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN t0 ON ((x'')<=(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) WHERE (((((t1.c0)==(t1.c0))) BETWEEN ((((t0.c96))<((t0.c96)))) AND (((t1.c0) IS TRUE)))) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)==(t1.c0))) BETWEEN ((((t0.c96))<((t0.c96)))) AND (((t1.c0) IS TRUE)))) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON ((x'')<=(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) ORDER BY t1.c0);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN t0 ON ((x'')<=(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) WHERE (((((t1.c0)==(t1.c0))) BETWEEN ((((t0.c96))<((t0.c96)))) AND (((t1.c0) IS TRUE)))) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)==(t1.c0))) BETWEEN ((((t0.c96))<((t0.c96)))) AND (((t1.c0) IS TRUE)))) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON ((x'')<=(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) ORDER BY t1.c0);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN t0 ON ((x'')<=(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) WHERE (((((t1.c0)==(t1.c0))) BETWEEN ((((t0.c96))<((t0.c96)))) AND (((t1.c0) IS TRUE)))) ORDER BY t1.c0;
SELECT * FROM t1 INDEXED BY i47 FULL OUTER JOIN v0 ON (((((t1.c0, v0.c3, t1.c0))>=((t1.c0, v0.c3, v0.c2)))) NOT BETWEEN (((v0.c4) NOT BETWEEN (v0.c4) AND (v0.c3))) AND (x'')) WHERE (((v0.c0) NOT NULL) COLLATE BINARY) ORDER BY ((CASE WHEN v0.c1 THEN t1.c0 END)>(t1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t1 INDEXED BY i47 FULL OUTER JOIN v0 ON (((((t1.c0, v0.c3, t1.c0))>=((t1.c0, v0.c3, v0.c2)))) NOT BETWEEN (((v0.c4) NOT BETWEEN (v0.c4) AND (v0.c3))) AND (x'')) ORDER BY ((CASE WHEN v0.c1 THEN t1.c0 END)>(t1.c0)) DESC);
SELECT * FROM t1 INDEXED BY i47 FULL OUTER JOIN v0 ON (((((t1.c0, v0.c3, t1.c0))>=((t1.c0, v0.c3, v0.c2)))) NOT BETWEEN (((v0.c4) NOT BETWEEN (v0.c4) AND (v0.c3))) AND (x'')) WHERE (((v0.c0) NOT NULL) COLLATE BINARY) ORDER BY ((CASE WHEN v0.c1 THEN t1.c0 END)>(t1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t1 INDEXED BY i47 FULL OUTER JOIN v0 ON (((((t1.c0, v0.c3, t1.c0))>=((t1.c0, v0.c3, v0.c2)))) NOT BETWEEN (((v0.c4) NOT BETWEEN (v0.c4) AND (v0.c3))) AND (x'')) ORDER BY ((CASE WHEN v0.c1 THEN t1.c0 END)>(t1.c0)) DESC);
SELECT ALL COUNT(*) FROM t1, t0, v0 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, t0, v0);
SELECT ALL COUNT(*) FROM t1, t0, v0 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, t0, v0);
SELECT ALL COUNT(*) FROM t1, t0, v0 WHERE (t1.c0);
SELECT ALL COUNT(*) FROM v0, t0, t1 WHERE (((v0.c3)>>(t0.c96)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c3)>>(t0.c96)) COLLATE BINARY) IS TRUE)  as count FROM v0, t0, t1);
SELECT ALL COUNT(*) FROM v0, t0, t1 WHERE (((v0.c3)>>(t0.c96)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c3)>>(t0.c96)) COLLATE BINARY) IS TRUE)  as count FROM v0, t0, t1);
SELECT ALL COUNT(*) FROM v0, t0, t1 WHERE (((v0.c3)>>(t0.c96)) COLLATE BINARY);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 END COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 END COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, v0 RIGHT OUTER JOIN t1 ON (((~ (v0.c4)))*((('')==(v0.c2)))) WHERE (((+ (v0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (v0.c2)) IN ())) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN t1 ON (((~ (v0.c4)))*((('')==(v0.c2)))));
SELECT ALL COUNT(*) FROM t0, v0 RIGHT OUTER JOIN t1 ON (((~ (v0.c4)))*((('')==(v0.c2)))) WHERE (((+ (v0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (v0.c2)) IN ())) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN t1 ON (((~ (v0.c4)))*((('')==(v0.c2)))));
SELECT ALL COUNT(*) FROM t0, v0 RIGHT OUTER JOIN t1 ON (((~ (v0.c4)))*((('')==(v0.c2)))) WHERE (((+ (v0.c2)) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (GLOB(((NULL) BETWEEN (v0.c4) AND (v0.c1)), CASE v0.c2  WHEN v0.c3 THEN v0.c4 WHEN v0.c3 THEN v0.c4 WHEN v0.c1 THEN v0.c3 END)) ORDER BY (NOT (v0.c1)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((GLOB(((NULL) BETWEEN (v0.c4) AND (v0.c1)), CASE v0.c2  WHEN v0.c3 THEN v0.c4 WHEN v0.c3 THEN v0.c4 WHEN v0.c1 THEN v0.c3 END)) IS TRUE)  as count FROM v0 ORDER BY (NOT (v0.c1)) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (GLOB(((NULL) BETWEEN (v0.c4) AND (v0.c1)), CASE v0.c2  WHEN v0.c3 THEN v0.c4 WHEN v0.c3 THEN v0.c4 WHEN v0.c1 THEN v0.c3 END)) ORDER BY (NOT (v0.c1)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((GLOB(((NULL) BETWEEN (v0.c4) AND (v0.c1)), CASE v0.c2  WHEN v0.c3 THEN v0.c4 WHEN v0.c3 THEN v0.c4 WHEN v0.c1 THEN v0.c3 END)) IS TRUE)  as count FROM v0 ORDER BY (NOT (v0.c1)) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (GLOB(((NULL) BETWEEN (v0.c4) AND (v0.c1)), CASE v0.c2  WHEN v0.c3 THEN v0.c4 WHEN v0.c3 THEN v0.c4 WHEN v0.c1 THEN v0.c3 END)) ORDER BY (NOT (v0.c1)) COLLATE BINARY  NULLS LAST;
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT COUNT(*) FROM t1, v0 LEFT OUTER JOIN t0 ON v0.c1 WHERE (0.8639751732757411);
SELECT SUM(count) FROM (SELECT ((0.8639751732757411) IS TRUE)  as count FROM t1, v0 LEFT OUTER JOIN t0 ON v0.c1);
SELECT COUNT(*) FROM t1, v0 LEFT OUTER JOIN t0 ON v0.c1 WHERE (0.8639751732757411);
SELECT SUM(count) FROM (SELECT ((0.8639751732757411) IS TRUE)  as count FROM t1, v0 LEFT OUTER JOIN t0 ON v0.c1);
SELECT COUNT(*) FROM t1, v0 LEFT OUTER JOIN t0 ON v0.c1 WHERE (0.8639751732757411);
SELECT COUNT(*) FROM v0, t0, t1 WHERE (CAST(CASE v0.c1  WHEN t0.c96 THEN t1.c0 ELSE t1.c0 END AS TEXT)) ORDER BY (- (v0.c1 COLLATE RTRIM)) ASC, (((((v0.c3, v0.c1, v0.c1))=((v0.c3, v0.c1, x'0e7e'))))*(t1.c0 COLLATE BINARY)) DESC  NULLS LAST, (((v0.c1 IN (v0.c4, t0.c96)))*((~ (v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE v0.c1  WHEN t0.c96 THEN t1.c0 ELSE t1.c0 END AS TEXT)) IS TRUE)  as count FROM v0, t0, t1 ORDER BY (- (v0.c1 COLLATE RTRIM)) ASC, (((((v0.c3, v0.c1, v0.c1))=((v0.c3, v0.c1, x'0e7e'))))*(t1.c0 COLLATE BINARY)) DESC  NULLS LAST, (((v0.c1 IN (v0.c4, t0.c96)))*((~ (v0.c2)))));
SELECT COUNT(*) FROM v0, t0, t1 WHERE (CAST(CASE v0.c1  WHEN t0.c96 THEN t1.c0 ELSE t1.c0 END AS TEXT)) ORDER BY (- (v0.c1 COLLATE RTRIM)) ASC, (((((v0.c3, v0.c1, v0.c1))=((v0.c3, v0.c1, x'0e7e'))))*(t1.c0 COLLATE BINARY)) DESC  NULLS LAST, (((v0.c1 IN (v0.c4, t0.c96)))*((~ (v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE v0.c1  WHEN t0.c96 THEN t1.c0 ELSE t1.c0 END AS TEXT)) IS TRUE)  as count FROM v0, t0, t1 ORDER BY (- (v0.c1 COLLATE RTRIM)) ASC, (((((v0.c3, v0.c1, v0.c1))=((v0.c3, v0.c1, x'0e7e'))))*(t1.c0 COLLATE BINARY)) DESC  NULLS LAST, (((v0.c1 IN (v0.c4, t0.c96)))*((~ (v0.c2)))));
SELECT COUNT(*) FROM v0, t0, t1 WHERE (CAST(CASE v0.c1  WHEN t0.c96 THEN t1.c0 ELSE t1.c0 END AS TEXT)) ORDER BY (- (v0.c1 COLLATE RTRIM)) ASC, (((((v0.c3, v0.c1, v0.c1))=((v0.c3, v0.c1, x'0e7e'))))*(t1.c0 COLLATE BINARY)) DESC  NULLS LAST, (((v0.c1 IN (v0.c4, t0.c96)))*((~ (v0.c2))));
SELECT ALL * FROM v0, t0 INNER JOIN t1 ON 0.0343523576524567 WHERE (((((v0.c3)IS NOT(v0.c2))) NOT BETWEEN (((v0.c4)=(v0.c3))) AND (CASE WHEN v0.c4 THEN '-761873211' WHEN v0.c0 THEN t1.c0 WHEN v0.c4 THEN v0.c4 WHEN v0.c3 THEN v0.c0 WHEN v0.c3 THEN t0.c96 ELSE v0.c3 END))) ORDER BY ((CASE v0.c0  WHEN v0.c4 THEN v0.c2 END)!=(t0.c96))  NULLS LAST, ((((((((((((v0.c0)OR(t0.c96)))AND(v0.c2)))AND(v0.c2)))OR(0.4469013236790217)))OR(CAST(t0.c96 AS INTEGER))))AND(((t1.c0)>>(0xffffffffba292762))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c3)IS NOT(v0.c2))) NOT BETWEEN (((v0.c4)=(v0.c3))) AND (CASE WHEN v0.c4 THEN '-761873211' WHEN v0.c0 THEN t1.c0 WHEN v0.c4 THEN v0.c4 WHEN v0.c3 THEN v0.c0 WHEN v0.c3 THEN t0.c96 ELSE v0.c3 END))) IS TRUE)  as count FROM v0, t0 INNER JOIN t1 ON 0.0343523576524567 ORDER BY ((CASE v0.c0  WHEN v0.c4 THEN v0.c2 END)!=(t0.c96))  NULLS LAST, ((((((((((((v0.c0)OR(t0.c96)))AND(v0.c2)))AND(v0.c2)))OR(0.4469013236790217)))OR(CAST(t0.c96 AS INTEGER))))AND(((t1.c0)>>(0xffffffffba292762)))));
SELECT ALL * FROM v0, t0 INNER JOIN t1 ON 0.0343523576524567 WHERE (((((v0.c3)IS NOT(v0.c2))) NOT BETWEEN (((v0.c4)=(v0.c3))) AND (CASE WHEN v0.c4 THEN '-761873211' WHEN v0.c0 THEN t1.c0 WHEN v0.c4 THEN v0.c4 WHEN v0.c3 THEN v0.c0 WHEN v0.c3 THEN t0.c96 ELSE v0.c3 END))) ORDER BY ((CASE v0.c0  WHEN v0.c4 THEN v0.c2 END)!=(t0.c96))  NULLS LAST, ((((((((((((v0.c0)OR(t0.c96)))AND(v0.c2)))AND(v0.c2)))OR(0.4469013236790217)))OR(CAST(t0.c96 AS INTEGER))))AND(((t1.c0)>>(0xffffffffba292762))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c3)IS NOT(v0.c2))) NOT BETWEEN (((v0.c4)=(v0.c3))) AND (CASE WHEN v0.c4 THEN '-761873211' WHEN v0.c0 THEN t1.c0 WHEN v0.c4 THEN v0.c4 WHEN v0.c3 THEN v0.c0 WHEN v0.c3 THEN t0.c96 ELSE v0.c3 END))) IS TRUE)  as count FROM v0, t0 INNER JOIN t1 ON 0.0343523576524567 ORDER BY ((CASE v0.c0  WHEN v0.c4 THEN v0.c2 END)!=(t0.c96))  NULLS LAST, ((((((((((((v0.c0)OR(t0.c96)))AND(v0.c2)))AND(v0.c2)))OR(0.4469013236790217)))OR(CAST(t0.c96 AS INTEGER))))AND(((t1.c0)>>(0xffffffffba292762)))));
SELECT ALL * FROM v0, t0 INNER JOIN t1 ON 0.0343523576524567 WHERE (((((v0.c3)IS NOT(v0.c2))) NOT BETWEEN (((v0.c4)=(v0.c3))) AND (CASE WHEN v0.c4 THEN '-761873211' WHEN v0.c0 THEN t1.c0 WHEN v0.c4 THEN v0.c4 WHEN v0.c3 THEN v0.c0 WHEN v0.c3 THEN t0.c96 ELSE v0.c3 END))) ORDER BY ((CASE v0.c0  WHEN v0.c4 THEN v0.c2 END)!=(t0.c96))  NULLS LAST, ((((((((((((v0.c0)OR(t0.c96)))AND(v0.c2)))AND(v0.c2)))OR(0.4469013236790217)))OR(CAST(t0.c96 AS INTEGER))))AND(((t1.c0)>>(0xffffffffba292762))));
SELECT ALL * FROM t0, v0, t1 WHERE (v0.c4);
SELECT SUM(count) FROM (SELECT ((v0.c4) IS TRUE)  as count FROM t0, v0, t1);
SELECT ALL * FROM t0, v0, t1 WHERE (v0.c4);
SELECT SUM(count) FROM (SELECT ((v0.c4) IS TRUE)  as count FROM t0, v0, t1);
SELECT ALL * FROM t0, v0, t1 WHERE (v0.c4);
SELECT ALL * FROM v0 WHERE (x'f335');
SELECT SUM(count) FROM (SELECT ((x'f335') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (x'f335');
SELECT SUM(count) FROM (SELECT ((x'f335') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (x'f335');
SELECT ALL * FROM t0, t1, v0 WHERE ((((((v0.c3, v0.c3, v0.c3)) NOT BETWEEN ((x'', v0.c2, v0.c2)) AND ((v0.c1, t0.c96, v0.c3)))) NOT BETWEEN (((v0.c4) NOT BETWEEN (v0.c0) AND (0.8413919704000062))) AND (((((((((v0.c4)OR(v0.c2)))OR(v0.c3)))OR(v0.c2)))OR(t0.c96))))) ORDER BY (((('317595914') NOTNULL)) BETWEEN (v0.c3 COLLATE NOCASE) AND (((v0.c2)|(v0.c2)))), (CASE WHEN v0.c4 THEN NULL ELSE v0.c1 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c3, v0.c3, v0.c3)) NOT BETWEEN ((x'', v0.c2, v0.c2)) AND ((v0.c1, t0.c96, v0.c3)))) NOT BETWEEN (((v0.c4) NOT BETWEEN (v0.c0) AND (0.8413919704000062))) AND (((((((((v0.c4)OR(v0.c2)))OR(v0.c3)))OR(v0.c2)))OR(t0.c96))))) IS TRUE)  as count FROM t0, t1, v0 ORDER BY (((('317595914') NOTNULL)) BETWEEN (v0.c3 COLLATE NOCASE) AND (((v0.c2)|(v0.c2)))), (CASE WHEN v0.c4 THEN NULL ELSE v0.c1 END IN ())  NULLS LAST);
SELECT ALL * FROM t0, t1, v0 WHERE ((((((v0.c3, v0.c3, v0.c3)) NOT BETWEEN ((x'', v0.c2, v0.c2)) AND ((v0.c1, t0.c96, v0.c3)))) NOT BETWEEN (((v0.c4) NOT BETWEEN (v0.c0) AND (0.8413919704000062))) AND (((((((((v0.c4)OR(v0.c2)))OR(v0.c3)))OR(v0.c2)))OR(t0.c96))))) ORDER BY (((('317595914') NOTNULL)) BETWEEN (v0.c3 COLLATE NOCASE) AND (((v0.c2)|(v0.c2)))), (CASE WHEN v0.c4 THEN NULL ELSE v0.c1 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c3, v0.c3, v0.c3)) NOT BETWEEN ((x'', v0.c2, v0.c2)) AND ((v0.c1, t0.c96, v0.c3)))) NOT BETWEEN (((v0.c4) NOT BETWEEN (v0.c0) AND (0.8413919704000062))) AND (((((((((v0.c4)OR(v0.c2)))OR(v0.c3)))OR(v0.c2)))OR(t0.c96))))) IS TRUE)  as count FROM t0, t1, v0 ORDER BY (((('317595914') NOTNULL)) BETWEEN (v0.c3 COLLATE NOCASE) AND (((v0.c2)|(v0.c2)))), (CASE WHEN v0.c4 THEN NULL ELSE v0.c1 END IN ())  NULLS LAST);
SELECT ALL * FROM t0, t1, v0 WHERE ((((((v0.c3, v0.c3, v0.c3)) NOT BETWEEN ((x'', v0.c2, v0.c2)) AND ((v0.c1, t0.c96, v0.c3)))) NOT BETWEEN (((v0.c4) NOT BETWEEN (v0.c0) AND (0.8413919704000062))) AND (((((((((v0.c4)OR(v0.c2)))OR(v0.c3)))OR(v0.c2)))OR(t0.c96))))) ORDER BY (((('317595914') NOTNULL)) BETWEEN (v0.c3 COLLATE NOCASE) AND (((v0.c2)|(v0.c2)))), (CASE WHEN v0.c4 THEN NULL ELSE v0.c1 END IN ())  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((CASE t0.c96  WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 END)LIKE(((((((((((((t0.c96)OR(t0.c96)))OR(t0.c96)))OR(t0.c96)))AND(NULL)))OR(t0.c96)))AND('E6'))))) ORDER BY LIKELY(((t0.c96)-(t0.c96))) DESC, UNLIKELY(DISTINCT x'6d99') DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c96  WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 END)LIKE(((((((((((((t0.c96)OR(t0.c96)))OR(t0.c96)))OR(t0.c96)))AND(NULL)))OR(t0.c96)))AND('E6'))))) IS TRUE)  as count FROM t0 ORDER BY LIKELY(((t0.c96)-(t0.c96))) DESC, UNLIKELY(DISTINCT x'6d99') DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((CASE t0.c96  WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 END)LIKE(((((((((((((t0.c96)OR(t0.c96)))OR(t0.c96)))OR(t0.c96)))AND(NULL)))OR(t0.c96)))AND('E6'))))) ORDER BY LIKELY(((t0.c96)-(t0.c96))) DESC, UNLIKELY(DISTINCT x'6d99') DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c96  WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 END)LIKE(((((((((((((t0.c96)OR(t0.c96)))OR(t0.c96)))OR(t0.c96)))AND(NULL)))OR(t0.c96)))AND('E6'))))) IS TRUE)  as count FROM t0 ORDER BY LIKELY(((t0.c96)-(t0.c96))) DESC, UNLIKELY(DISTINCT x'6d99') DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((CASE t0.c96  WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 END)LIKE(((((((((((((t0.c96)OR(t0.c96)))OR(t0.c96)))OR(t0.c96)))AND(NULL)))OR(t0.c96)))AND('E6'))))) ORDER BY LIKELY(((t0.c96)-(t0.c96))) DESC, UNLIKELY(DISTINCT x'6d99') DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, t1, v0 WHERE ((((v0.c4 IN ()))%(v0.c4))) ORDER BY CASE WHEN ((((((((((((v0.c0)OR(t0.c96)))OR(v0.c0)))AND(t1.c0)))OR(x'')))OR(x'')))OR(v0.c3)) THEN IFNULL(v0.c3, v0.c0) ELSE ((v0.c0)/(v0.c4)) END, ((((((v0.c4)AND(v0.c0)))AND((- (v0.c3)))))OR(((t0.c96) NOT BETWEEN (v0.c3) AND (v0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c4 IN ()))%(v0.c4))) IS TRUE)  as count FROM t0, t1, v0 ORDER BY CASE WHEN ((((((((((((v0.c0)OR(t0.c96)))OR(v0.c0)))AND(t1.c0)))OR(x'')))OR(x'')))OR(v0.c3)) THEN IFNULL(v0.c3, v0.c0) ELSE ((v0.c0)/(v0.c4)) END, ((((((v0.c4)AND(v0.c0)))AND((- (v0.c3)))))OR(((t0.c96) NOT BETWEEN (v0.c3) AND (v0.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, t1, v0 WHERE ((((v0.c4 IN ()))%(v0.c4))) ORDER BY CASE WHEN ((((((((((((v0.c0)OR(t0.c96)))OR(v0.c0)))AND(t1.c0)))OR(x'')))OR(x'')))OR(v0.c3)) THEN IFNULL(v0.c3, v0.c0) ELSE ((v0.c0)/(v0.c4)) END, ((((((v0.c4)AND(v0.c0)))AND((- (v0.c3)))))OR(((t0.c96) NOT BETWEEN (v0.c3) AND (v0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c4 IN ()))%(v0.c4))) IS TRUE)  as count FROM t0, t1, v0 ORDER BY CASE WHEN ((((((((((((v0.c0)OR(t0.c96)))OR(v0.c0)))AND(t1.c0)))OR(x'')))OR(x'')))OR(v0.c3)) THEN IFNULL(v0.c3, v0.c0) ELSE ((v0.c0)/(v0.c4)) END, ((((((v0.c4)AND(v0.c0)))AND((- (v0.c3)))))OR(((t0.c96) NOT BETWEEN (v0.c3) AND (v0.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, t1, v0 WHERE ((((v0.c4 IN ()))%(v0.c4))) ORDER BY CASE WHEN ((((((((((((v0.c0)OR(t0.c96)))OR(v0.c0)))AND(t1.c0)))OR(x'')))OR(x'')))OR(v0.c3)) THEN IFNULL(v0.c3, v0.c0) ELSE ((v0.c0)/(v0.c4)) END, ((((((v0.c4)AND(v0.c0)))AND((- (v0.c3)))))OR(((t0.c96) NOT BETWEEN (v0.c3) AND (v0.c3))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0 INDEXED BY i47, t1 WHERE ((((v0.c3, 0.8627342865442807, v0.c4)) NOT BETWEEN ((CAST(v0.c2 AS REAL), ((v0.c0) NOT NULL), CASE WHEN t1.c0 THEN t0.c96 END)) AND ((CAST('1005288384' AS INTEGER), (((x'612f', v0.c3, t1.c0))!=((v0.c3, v0.c4, t0.c96))), ((((((((v0.c4)AND(v0.c2)))AND(v0.c3)))OR(v0.c4)))AND(t1.c0)))))) ORDER BY (((t0.c96 IN ()))IS NOT(CASE v0.c0  WHEN NULL THEN v0.c3 WHEN v0.c1 THEN v0.c1 WHEN t0.c96 THEN v0.c3 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c3, 0.8627342865442807, v0.c4)) NOT BETWEEN ((CAST(v0.c2 AS REAL), ((v0.c0) NOT NULL), CASE WHEN t1.c0 THEN t0.c96 END)) AND ((CAST('1005288384' AS INTEGER), (((x'612f', v0.c3, t1.c0))<>((v0.c3, v0.c4, t0.c96))), ((((((((v0.c4)AND(v0.c2)))AND(v0.c3)))OR(v0.c4)))AND(t1.c0)))))) IS TRUE)  as count FROM t0, v0 INDEXED BY i47, t1 ORDER BY (((t0.c96 IN ()))IS NOT(CASE v0.c0  WHEN NULL THEN v0.c3 WHEN v0.c1 THEN v0.c1 WHEN t0.c96 THEN v0.c3 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 INDEXED BY i47, t1 WHERE ((((v0.c3, 0.8627342865442807, v0.c4)) NOT BETWEEN ((CAST(v0.c2 AS REAL), ((v0.c0) NOT NULL), CASE WHEN t1.c0 THEN t0.c96 END)) AND ((CAST('1005288384' AS INTEGER), (((x'612f', v0.c3, t1.c0))!=((v0.c3, v0.c4, t0.c96))), ((((((((v0.c4)AND(v0.c2)))AND(v0.c3)))OR(v0.c4)))AND(t1.c0)))))) ORDER BY (((t0.c96 IN ()))IS NOT(CASE v0.c0  WHEN NULL THEN v0.c3 WHEN v0.c1 THEN v0.c1 WHEN t0.c96 THEN v0.c3 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c3, 0.8627342865442807, v0.c4)) NOT BETWEEN ((CAST(v0.c2 AS REAL), ((v0.c0) NOT NULL), CASE WHEN t1.c0 THEN t0.c96 END)) AND ((CAST('1005288384' AS INTEGER), (((x'612f', v0.c3, t1.c0))<>((v0.c3, v0.c4, t0.c96))), ((((((((v0.c4)AND(v0.c2)))AND(v0.c3)))OR(v0.c4)))AND(t1.c0)))))) IS TRUE)  as count FROM t0, v0 INDEXED BY i47, t1 ORDER BY (((t0.c96 IN ()))IS NOT(CASE v0.c0  WHEN NULL THEN v0.c3 WHEN v0.c1 THEN v0.c1 WHEN t0.c96 THEN v0.c3 END))  NULLS LAST);
SELECT COUNT(*) FROM t0, t1, v0 WHERE ((rtreenode(v0.c0, t1.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((rtreenode(v0.c0, t1.c0) IN ())) IS TRUE)  as count FROM t0, t1, v0);
SELECT COUNT(*) FROM t0, t1, v0 WHERE ((rtreenode(v0.c0, t1.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((rtreenode(v0.c0, t1.c0) IN ())) IS TRUE)  as count FROM t0, t1, v0);
SELECT COUNT(*) FROM t0, t1, v0 WHERE ((rtreenode(v0.c0, t1.c0) IN ()));
SELECT ALL * FROM t0 WHERE ((((((t0.c96) ISNULL)))>((((NULL) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c96) ISNULL)))>((((NULL) ISNULL))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c96) ISNULL)))>((((NULL) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c96) ISNULL)))>((((NULL) ISNULL))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c96) ISNULL)))>((((NULL) ISNULL)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN t1 ON ((CAST(t1.c0 AS TEXT))IS(CHANGES())) LEFT OUTER JOIN v0 ON ((((v0.c2)>(v0.c2))) BETWEEN (CAST(v0.c0 AS BLOB)) AND (CAST(v0.c1 AS NUMERIC))) WHERE (((((v0.c4)<<(t1.c0)))IS NOT(CASE v0.c2  WHEN v0.c1 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c4)<<(t1.c0)))IS NOT(CASE v0.c2  WHEN v0.c1 THEN t1.c0 END))) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON ((CAST(t1.c0 AS TEXT))IS(CHANGES())) LEFT OUTER JOIN v0 ON ((((v0.c2)>(v0.c2))) BETWEEN (CAST(v0.c0 AS BLOB)) AND (CAST(v0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN t1 ON ((CAST(t1.c0 AS TEXT))IS(CHANGES())) LEFT OUTER JOIN v0 ON ((((v0.c2)>(v0.c2))) BETWEEN (CAST(v0.c0 AS BLOB)) AND (CAST(v0.c1 AS NUMERIC))) WHERE (((((v0.c4)<<(t1.c0)))IS NOT(CASE v0.c2  WHEN v0.c1 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c4)<<(t1.c0)))IS NOT(CASE v0.c2  WHEN v0.c1 THEN t1.c0 END))) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON ((CAST(t1.c0 AS TEXT))IS(CHANGES())) LEFT OUTER JOIN v0 ON ((((v0.c2)>(v0.c2))) BETWEEN (CAST(v0.c0 AS BLOB)) AND (CAST(v0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN t1 ON ((CAST(t1.c0 AS TEXT))IS(CHANGES())) LEFT OUTER JOIN v0 ON ((((v0.c2)>(v0.c2))) BETWEEN (CAST(v0.c0 AS BLOB)) AND (CAST(v0.c1 AS NUMERIC))) WHERE (((((v0.c4)<<(t1.c0)))IS NOT(CASE v0.c2  WHEN v0.c1 THEN t1.c0 END)));
SELECT ALL COUNT(*) FROM t1, v0 WHERE (CAST('-961683391' AS TEXT)) ORDER BY (((((v0.c4))<>((v0.c3)))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-961683391' AS TEXT)) IS TRUE)  as count FROM t1, v0 ORDER BY (((((v0.c4))<>((v0.c3)))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (CAST('-961683391' AS TEXT)) ORDER BY (((((v0.c4))<>((v0.c3)))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-961683391' AS TEXT)) IS TRUE)  as count FROM t1, v0 ORDER BY (((((v0.c4))<>((v0.c3)))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (CAST('-961683391' AS TEXT)) ORDER BY (((((v0.c4))<>((v0.c3)))) NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((v0.c3) IS FALSE))AND(t0.c96))) ORDER BY ((((((v0.c0, v0.c0, t0.c96)) NOT BETWEEN ((t0.c96, v0.c4, v0.c2)) AND ((v0.c3, v0.c4, t0.c96)))))!=(((v0.c3 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c3) IS FALSE))AND(t0.c96))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((((v0.c0, v0.c0, t0.c96)) NOT BETWEEN ((t0.c96, v0.c4, v0.c2)) AND ((v0.c3, v0.c4, t0.c96)))))<>(((v0.c3 IN ())))) ASC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((v0.c3) IS FALSE))AND(t0.c96))) ORDER BY ((((((v0.c0, v0.c0, t0.c96)) NOT BETWEEN ((t0.c96, v0.c4, v0.c2)) AND ((v0.c3, v0.c4, t0.c96)))))!=(((v0.c3 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c3) IS FALSE))AND(t0.c96))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((((v0.c0, v0.c0, t0.c96)) NOT BETWEEN ((t0.c96, v0.c4, v0.c2)) AND ((v0.c3, v0.c4, t0.c96)))))<>(((v0.c3 IN ())))) ASC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((v0.c3) IS FALSE))AND(t0.c96))) ORDER BY ((((((v0.c0, v0.c0, t0.c96)) NOT BETWEEN ((t0.c96, v0.c4, v0.c2)) AND ((v0.c3, v0.c4, t0.c96)))))!=(((v0.c3 IN ())))) ASC;
SELECT COUNT(*) FROM v0, t1 WHERE (((((CASE WHEN v0.c3 THEN t1.c0 END)OR(((v0.c0)-(v0.c0)))))AND(v0.c4))) ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c3) NOT BETWEEN (v0.c3) AND (t1.c0)))) AND ((((v0.c2)*(v0.c2))))) DESC  NULLS LAST, (((v0.c3)) BETWEEN ((0.4124373293224598)) AND ((((NULL)OR(v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c3 THEN t1.c0 END)OR(((v0.c0)-(v0.c0)))))AND(v0.c4))) IS TRUE)  as count FROM v0, t1 ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c3) NOT BETWEEN (v0.c3) AND (t1.c0)))) AND ((((v0.c2)*(v0.c2))))) DESC  NULLS LAST, (((v0.c3)) BETWEEN ((0.4124373293224598)) AND ((((NULL)OR(v0.c0))))) ASC);
SELECT COUNT(*) FROM v0, t1 WHERE (((((CASE WHEN v0.c3 THEN t1.c0 END)OR(((v0.c0)-(v0.c0)))))AND(v0.c4))) ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c3) NOT BETWEEN (v0.c3) AND (t1.c0)))) AND ((((v0.c2)*(v0.c2))))) DESC  NULLS LAST, (((v0.c3)) BETWEEN ((0.4124373293224598)) AND ((((NULL)OR(v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c3 THEN t1.c0 END)OR(((v0.c0)-(v0.c0)))))AND(v0.c4))) IS TRUE)  as count FROM v0, t1 ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c3) NOT BETWEEN (v0.c3) AND (t1.c0)))) AND ((((v0.c2)*(v0.c2))))) DESC  NULLS LAST, (((v0.c3)) BETWEEN ((0.4124373293224598)) AND ((((NULL)OR(v0.c0))))) ASC);
SELECT COUNT(*) FROM v0, t1 WHERE (((((CASE WHEN v0.c3 THEN t1.c0 END)OR(((v0.c0)-(v0.c0)))))AND(v0.c4))) ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c3) NOT BETWEEN (v0.c3) AND (t1.c0)))) AND ((((v0.c2)*(v0.c2))))) DESC  NULLS LAST, (((v0.c3)) BETWEEN ((0.4124373293224598)) AND ((((NULL)OR(v0.c0))))) ASC;
SELECT * FROM t0 WHERE (((TYPEOF(t0.c96))GLOB(((t0.c96) NOTNULL)))) ORDER BY (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)) IN (((t0.c96)&('416123927')))) DESC, CASE COALESCE(t0.c96, -1185085975)  WHEN ((t0.c96)!=(t0.c96)) THEN (~ (t0.c96)) END;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(t0.c96))GLOB(((t0.c96) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)) IN (((t0.c96)&('416123927')))) DESC, CASE COALESCE(t0.c96, -1185085975)  WHEN ((t0.c96)!=(t0.c96)) THEN (~ (t0.c96)) END);
SELECT * FROM t0 WHERE (((TYPEOF(t0.c96))GLOB(((t0.c96) NOTNULL)))) ORDER BY (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)) IN (((t0.c96)&('416123927')))) DESC, CASE COALESCE(t0.c96, -1185085975)  WHEN ((t0.c96)!=(t0.c96)) THEN (~ (t0.c96)) END;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(t0.c96))GLOB(((t0.c96) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)) IN (((t0.c96)&('416123927')))) DESC, CASE COALESCE(t0.c96, -1185085975)  WHEN ((t0.c96)!=(t0.c96)) THEN (~ (t0.c96)) END);
SELECT * FROM t0 WHERE (((TYPEOF(t0.c96))GLOB(((t0.c96) NOTNULL)))) ORDER BY (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)) IN (((t0.c96)&('416123927')))) DESC, CASE COALESCE(t0.c96, -1185085975)  WHEN ((t0.c96)!=(t0.c96)) THEN (~ (t0.c96)) END;
SELECT * FROM v0 WHERE (0.6850405715063922) ORDER BY -353728965, ((((v0.c4 COLLATE NOCASE)AND(((v0.c2)&(v0.c3)))))OR(CAST(v0.c3 AS REAL)))  NULLS LAST, (((((v0.c4, v0.c4, NULL))<=((v0.c4, v0.c0, v0.c0))))AND(((v0.c1)AND(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((0.6850405715063922) IS TRUE)  as count FROM v0 ORDER BY -353728965, ((((v0.c4 COLLATE NOCASE)AND(((v0.c2)&(v0.c3)))))OR(CAST(v0.c3 AS REAL)))  NULLS LAST, (((((v0.c4, v0.c4, NULL))<=((v0.c4, v0.c0, v0.c0))))AND(((v0.c1)AND(v0.c0)))) DESC);
SELECT * FROM v0 WHERE (0.6850405715063922) ORDER BY -353728965, ((((v0.c4 COLLATE NOCASE)AND(((v0.c2)&(v0.c3)))))OR(CAST(v0.c3 AS REAL)))  NULLS LAST, (((((v0.c4, v0.c4, NULL))<=((v0.c4, v0.c0, v0.c0))))AND(((v0.c1)AND(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((0.6850405715063922) IS TRUE)  as count FROM v0 ORDER BY -353728965, ((((v0.c4 COLLATE NOCASE)AND(((v0.c2)&(v0.c3)))))OR(CAST(v0.c3 AS REAL)))  NULLS LAST, (((((v0.c4, v0.c4, NULL))<=((v0.c4, v0.c0, v0.c0))))AND(((v0.c1)AND(v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(x'' COLLATE RTRIM AS REAL)) ORDER BY (NOT (t1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CAST(x'' COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM t1 ORDER BY (NOT (t1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(x'' COLLATE RTRIM AS REAL)) ORDER BY (NOT (t1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CAST(x'' COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM t1 ORDER BY (NOT (t1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(x'' COLLATE RTRIM AS REAL)) ORDER BY (NOT (t1.c0)) COLLATE BINARY;
SELECT ALL * FROM t1, t0 WHERE (CASE WHEN ((t1.c0)/(t1.c0)) THEN ((t0.c96) ISNULL) WHEN (t1.c0 IN (t1.c0, t1.c0)) THEN CASE t0.c96  WHEN x'' THEN '-t' WHEN t0.c96 THEN t1.c0 WHEN t0.c96 THEN t0.c96 ELSE t1.c0 END WHEN (~ (t0.c96)) THEN (NOT (t0.c96)) WHEN CAST(t1.c0 AS REAL) THEN t1.c0 WHEN ((t1.c0)IS NOT(t0.c96)) THEN ((t1.c0)<(t0.c96)) ELSE (((t0.c96)) BETWEEN ((t0.c96)) AND ((0xffffffffd296bcc5))) END) ORDER BY CAST(((((t1.c0)OR(t1.c0)))AND(t1.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c0)/(t1.c0)) THEN ((t0.c96) ISNULL) WHEN (t1.c0 IN (t1.c0, t1.c0)) THEN CASE t0.c96  WHEN x'' THEN '-t' WHEN t0.c96 THEN t1.c0 WHEN t0.c96 THEN t0.c96 ELSE t1.c0 END WHEN (~ (t0.c96)) THEN (NOT (t0.c96)) WHEN CAST(t1.c0 AS REAL) THEN t1.c0 WHEN ((t1.c0)IS NOT(t0.c96)) THEN ((t1.c0)<(t0.c96)) ELSE (((t0.c96)) BETWEEN ((t0.c96)) AND ((0xffffffffd296bcc5))) END) IS TRUE)  as count FROM t1, t0 ORDER BY CAST(((((t1.c0)OR(t1.c0)))AND(t1.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL * FROM t1, t0 WHERE (CASE WHEN ((t1.c0)/(t1.c0)) THEN ((t0.c96) ISNULL) WHEN (t1.c0 IN (t1.c0, t1.c0)) THEN CASE t0.c96  WHEN x'' THEN '-t' WHEN t0.c96 THEN t1.c0 WHEN t0.c96 THEN t0.c96 ELSE t1.c0 END WHEN (~ (t0.c96)) THEN (NOT (t0.c96)) WHEN CAST(t1.c0 AS REAL) THEN t1.c0 WHEN ((t1.c0)IS NOT(t0.c96)) THEN ((t1.c0)<(t0.c96)) ELSE (((t0.c96)) BETWEEN ((t0.c96)) AND ((0xffffffffd296bcc5))) END) ORDER BY CAST(((((t1.c0)OR(t1.c0)))AND(t1.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c0)/(t1.c0)) THEN ((t0.c96) ISNULL) WHEN (t1.c0 IN (t1.c0, t1.c0)) THEN CASE t0.c96  WHEN x'' THEN '-t' WHEN t0.c96 THEN t1.c0 WHEN t0.c96 THEN t0.c96 ELSE t1.c0 END WHEN (~ (t0.c96)) THEN (NOT (t0.c96)) WHEN CAST(t1.c0 AS REAL) THEN t1.c0 WHEN ((t1.c0)IS NOT(t0.c96)) THEN ((t1.c0)<(t0.c96)) ELSE (((t0.c96)) BETWEEN ((t0.c96)) AND ((0xffffffffd296bcc5))) END) IS TRUE)  as count FROM t1, t0 ORDER BY CAST(((((t1.c0)OR(t1.c0)))AND(t1.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL * FROM t1, t0 WHERE (CASE WHEN ((t1.c0)/(t1.c0)) THEN ((t0.c96) ISNULL) WHEN (t1.c0 IN (t1.c0, t1.c0)) THEN CASE t0.c96  WHEN x'' THEN '-t' WHEN t0.c96 THEN t1.c0 WHEN t0.c96 THEN t0.c96 ELSE t1.c0 END WHEN (~ (t0.c96)) THEN (NOT (t0.c96)) WHEN CAST(t1.c0 AS REAL) THEN t1.c0 WHEN ((t1.c0)IS NOT(t0.c96)) THEN ((t1.c0)<(t0.c96)) ELSE (((t0.c96)) BETWEEN ((t0.c96)) AND ((0xffffffffd296bcc5))) END) ORDER BY CAST(((((t1.c0)OR(t1.c0)))AND(t1.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (((v0.c0) NOT BETWEEN ((v0.c4 IN (t0.c96))) AND (((((((((v0.c1)OR(t0.c96)))OR(v0.c1)))OR(v0.c0)))AND(v0.c4))))) ORDER BY ((0Xffffffff87b118e7) NOT BETWEEN (((((v0.c3)AND(v0.c3)))AND(0.0804272209663992))) AND (CAST('1019489203' AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN ((v0.c4 IN (t0.c96))) AND (((((((((v0.c1)OR(t0.c96)))OR(v0.c1)))OR(v0.c0)))AND(v0.c4))))) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY ((0Xffffffff87b118e7) NOT BETWEEN (((((v0.c3)AND(v0.c3)))AND(0.0804272209663992))) AND (CAST('1019489203' AS NUMERIC))));
SELECT COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (((v0.c0) NOT BETWEEN ((v0.c4 IN (t0.c96))) AND (((((((((v0.c1)OR(t0.c96)))OR(v0.c1)))OR(v0.c0)))AND(v0.c4))))) ORDER BY ((0Xffffffff87b118e7) NOT BETWEEN (((((v0.c3)AND(v0.c3)))AND(0.0804272209663992))) AND (CAST('1019489203' AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN ((v0.c4 IN (t0.c96))) AND (((((((((v0.c1)OR(t0.c96)))OR(v0.c1)))OR(v0.c0)))AND(v0.c4))))) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY ((0Xffffffff87b118e7) NOT BETWEEN (((((v0.c3)AND(v0.c3)))AND(0.0804272209663992))) AND (CAST('1019489203' AS NUMERIC))));
SELECT COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (((v0.c0) NOT BETWEEN ((v0.c4 IN (t0.c96))) AND (((((((((v0.c1)OR(t0.c96)))OR(v0.c1)))OR(v0.c0)))AND(v0.c4))))) ORDER BY ((0Xffffffff87b118e7) NOT BETWEEN (((((v0.c3)AND(v0.c3)))AND(0.0804272209663992))) AND (CAST('1019489203' AS NUMERIC)));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN t0 ON v0.c4 FULL OUTER JOIN v0 ON ((((t1.c0)+(v0.c4)))>(((v0.c3)GLOB(v0.c1)))) WHERE (((v0.c2 IN ()) IN ())) ORDER BY ((((v0.c4) ISNULL))<=(CASE WHEN v0.c4 THEN v0.c4 ELSE v0.c0 END)) DESC  NULLS FIRST, (NOT (v0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((v0.c2 IN ()) IN ())) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON v0.c4 FULL OUTER JOIN v0 ON ((((t1.c0)+(v0.c4)))>(((v0.c3)GLOB(v0.c1)))) ORDER BY ((((v0.c4) ISNULL))<=(CASE WHEN v0.c4 THEN v0.c4 ELSE v0.c0 END)) DESC  NULLS FIRST, (NOT (v0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN t0 ON v0.c4 FULL OUTER JOIN v0 ON ((((t1.c0)+(v0.c4)))>(((v0.c3)GLOB(v0.c1)))) WHERE (((v0.c2 IN ()) IN ())) ORDER BY ((((v0.c4) ISNULL))<=(CASE WHEN v0.c4 THEN v0.c4 ELSE v0.c0 END)) DESC  NULLS FIRST, (NOT (v0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((v0.c2 IN ()) IN ())) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON v0.c4 FULL OUTER JOIN v0 ON ((((t1.c0)+(v0.c4)))>(((v0.c3)GLOB(v0.c1)))) ORDER BY ((((v0.c4) ISNULL))<=(CASE WHEN v0.c4 THEN v0.c4 ELSE v0.c0 END)) DESC  NULLS FIRST, (NOT (v0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM t1, t0 WHERE (CAST(x'aea0' AS BLOB)) ORDER BY (CASE WHEN t0.c96 THEN t1.c0 ELSE t1.c0 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'aea0' AS BLOB)) IS TRUE)  as count FROM t1, t0 ORDER BY (CASE WHEN t0.c96 THEN t1.c0 ELSE t1.c0 END IN ()));
SELECT COUNT(*) FROM t1, t0 WHERE (CAST(x'aea0' AS BLOB)) ORDER BY (CASE WHEN t0.c96 THEN t1.c0 ELSE t1.c0 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'aea0' AS BLOB)) IS TRUE)  as count FROM t1, t0 ORDER BY (CASE WHEN t0.c96 THEN t1.c0 ELSE t1.c0 END IN ()));
SELECT COUNT(*) FROM t1, t0 WHERE (CAST(x'aea0' AS BLOB)) ORDER BY (CASE WHEN t0.c96 THEN t1.c0 ELSE t1.c0 END IN ());
SELECT COUNT(*) FROM t1, v0 WHERE (json_array_length(CASE WHEN v0.c1 THEN v0.c0 END, ((x'')/(v0.c4)))) ORDER BY (((v0.c2 IN ())) BETWEEN (HEX(-911981455)) AND (((v0.c1)<>(NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((json_array_length(CASE WHEN v0.c1 THEN v0.c0 END, ((x'')/(v0.c4)))) IS TRUE)  as count FROM t1, v0 ORDER BY (((v0.c2 IN ())) BETWEEN (HEX(-911981455)) AND (((v0.c1)!=(NULL)))) ASC);
SELECT COUNT(*) FROM t1, v0 WHERE (json_array_length(CASE WHEN v0.c1 THEN v0.c0 END, ((x'')/(v0.c4)))) ORDER BY (((v0.c2 IN ())) BETWEEN (HEX(-911981455)) AND (((v0.c1)<>(NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((json_array_length(CASE WHEN v0.c1 THEN v0.c0 END, ((x'')/(v0.c4)))) IS TRUE)  as count FROM t1, v0 ORDER BY (((v0.c2 IN ())) BETWEEN (HEX(-911981455)) AND (((v0.c1)!=(NULL)))) ASC);
SELECT COUNT(*) FROM t1, v0 WHERE (json_array_length(CASE WHEN v0.c1 THEN v0.c0 END, ((x'')/(v0.c4)))) ORDER BY (((v0.c2 IN ())) BETWEEN (HEX(-911981455)) AND (((v0.c1)<>(NULL)))) ASC;
SELECT ALL * FROM v0, t1, t0 WHERE (MIN(((((v0.c2)OR(v0.c4)))OR(v0.c0)), ((v0.c4)AND(v0.c2))));
SELECT SUM(count) FROM (SELECT ((MIN(((((v0.c2)OR(v0.c4)))OR(v0.c0)), ((v0.c4)AND(v0.c2)))) IS TRUE)  as count FROM v0, t1, t0);
SELECT ALL * FROM v0, t1, t0 WHERE (MIN(((((v0.c2)OR(v0.c4)))OR(v0.c0)), ((v0.c4)AND(v0.c2))));
SELECT SUM(count) FROM (SELECT ((MIN(((((v0.c2)OR(v0.c4)))OR(v0.c0)), ((v0.c4)AND(v0.c2)))) IS TRUE)  as count FROM v0, t1, t0);
SELECT ALL * FROM v0, t1, t0 WHERE (MIN(((((v0.c2)OR(v0.c4)))OR(v0.c0)), ((v0.c4)AND(v0.c2))));
SELECT ALL COUNT(*) FROM t0, v0, t1 WHERE (((((v0.c0)=(t1.c0)))|(((t0.c96)>(v0.c2))))) ORDER BY (((((v0.c2))=((x'')))) NOT NULL), (((t0.c96 IN ())) NOT BETWEEN ((- (t1.c0))) AND (IFNULL(v0.c2, NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)==(t1.c0)))|(((t0.c96)>(v0.c2))))) IS TRUE)  as count FROM t0, v0, t1 ORDER BY (((((v0.c2))=((x'')))) NOT NULL), (((t0.c96 IN ())) NOT BETWEEN ((- (t1.c0))) AND (IFNULL(v0.c2, NULL))) ASC);
SELECT ALL COUNT(*) FROM t0, v0, t1 WHERE (((((v0.c0)=(t1.c0)))|(((t0.c96)>(v0.c2))))) ORDER BY (((((v0.c2))=((x'')))) NOT NULL), (((t0.c96 IN ())) NOT BETWEEN ((- (t1.c0))) AND (IFNULL(v0.c2, NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)==(t1.c0)))|(((t0.c96)>(v0.c2))))) IS TRUE)  as count FROM t0, v0, t1 ORDER BY (((((v0.c2))=((x'')))) NOT NULL), (((t0.c96 IN ())) NOT BETWEEN ((- (t1.c0))) AND (IFNULL(v0.c2, NULL))) ASC);
SELECT ALL COUNT(*) FROM t0, v0, t1 WHERE (((((v0.c0)=(t1.c0)))|(((t0.c96)>(v0.c2))))) ORDER BY (((((v0.c2))=((x'')))) NOT NULL), (((t0.c96 IN ())) NOT BETWEEN ((- (t1.c0))) AND (IFNULL(v0.c2, NULL))) ASC;
SELECT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '_㘨' WHEN t1.c0 THEN t1.c0 ELSE 0.766217114994377 END)&((+ (t1.c0))))) ORDER BY ((t1.c0) NOT BETWEEN (((t1.c0) IS TRUE)) AND ((+ (t1.c0)))), CASE WHEN ((t1.c0) NOT NULL) THEN CAST(t1.c0 AS BLOB) ELSE ((((((((t1.c0)OR(t1.c0)))OR('-873986714')))AND(x'')))AND(t1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '_㘨' WHEN t1.c0 THEN t1.c0 ELSE 0.766217114994377 END)&((+ (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0) NOT BETWEEN (((t1.c0) IS TRUE)) AND ((+ (t1.c0)))), CASE WHEN ((t1.c0) NOT NULL) THEN CAST(t1.c0 AS BLOB) ELSE ((((((((t1.c0)OR(t1.c0)))OR('-873986714')))AND(x'')))AND(t1.c0)) END DESC);
SELECT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '_㘨' WHEN t1.c0 THEN t1.c0 ELSE 0.766217114994377 END)&((+ (t1.c0))))) ORDER BY ((t1.c0) NOT BETWEEN (((t1.c0) IS TRUE)) AND ((+ (t1.c0)))), CASE WHEN ((t1.c0) NOT NULL) THEN CAST(t1.c0 AS BLOB) ELSE ((((((((t1.c0)OR(t1.c0)))OR('-873986714')))AND(x'')))AND(t1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '_㘨' WHEN t1.c0 THEN t1.c0 ELSE 0.766217114994377 END)&((+ (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0) NOT BETWEEN (((t1.c0) IS TRUE)) AND ((+ (t1.c0)))), CASE WHEN ((t1.c0) NOT NULL) THEN CAST(t1.c0 AS BLOB) ELSE ((((((((t1.c0)OR(t1.c0)))OR('-873986714')))AND(x'')))AND(t1.c0)) END DESC);
SELECT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '_㘨' WHEN t1.c0 THEN t1.c0 ELSE 0.766217114994377 END)&((+ (t1.c0))))) ORDER BY ((t1.c0) NOT BETWEEN (((t1.c0) IS TRUE)) AND ((+ (t1.c0)))), CASE WHEN ((t1.c0) NOT NULL) THEN CAST(t1.c0 AS BLOB) ELSE ((((((((t1.c0)OR(t1.c0)))OR('-873986714')))AND(x'')))AND(t1.c0)) END DESC;
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((t1.c0)|(t1.c0)))AND(DATETIME(t1.c0, t1.c0, t1.c0))))AND(((t1.c0) BETWEEN (-1.370829487E9) AND (t1.c0)))))AND((t1.c0 IN (0.31502422718590917, t1.c0)))))OR((t1.c0 IN ())))) ORDER BY t1.c0 ASC, ((((t1.c0)OR(t1.c0)))OR(t1.c0)) COLLATE NOCASE, LIKELIHOOD(DISTINCT ((t1.c0) IS FALSE), 0.26225872924909444) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0)|(t1.c0)))AND(DATETIME(t1.c0, t1.c0, t1.c0))))AND(((t1.c0) BETWEEN (-1.370829487E9) AND (t1.c0)))))AND((t1.c0 IN (0.31502422718590917, t1.c0)))))OR((t1.c0 IN ())))) IS TRUE)  as count FROM t1 ORDER BY t1.c0 ASC, ((((t1.c0)OR(t1.c0)))OR(t1.c0)) COLLATE NOCASE, LIKELIHOOD(DISTINCT ((t1.c0) IS FALSE), 0.26225872924909444) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((t1.c0)|(t1.c0)))AND(DATETIME(t1.c0, t1.c0, t1.c0))))AND(((t1.c0) BETWEEN (-1.370829487E9) AND (t1.c0)))))AND((t1.c0 IN (0.31502422718590917, t1.c0)))))OR((t1.c0 IN ())))) ORDER BY t1.c0 ASC, ((((t1.c0)OR(t1.c0)))OR(t1.c0)) COLLATE NOCASE, LIKELIHOOD(DISTINCT ((t1.c0) IS FALSE), 0.26225872924909444) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0)|(t1.c0)))AND(DATETIME(t1.c0, t1.c0, t1.c0))))AND(((t1.c0) BETWEEN (-1.370829487E9) AND (t1.c0)))))AND((t1.c0 IN (0.31502422718590917, t1.c0)))))OR((t1.c0 IN ())))) IS TRUE)  as count FROM t1 ORDER BY t1.c0 ASC, ((((t1.c0)OR(t1.c0)))OR(t1.c0)) COLLATE NOCASE, LIKELIHOOD(DISTINCT ((t1.c0) IS FALSE), 0.26225872924909444) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((t1.c0)|(t1.c0)))AND(DATETIME(t1.c0, t1.c0, t1.c0))))AND(((t1.c0) BETWEEN (-1.370829487E9) AND (t1.c0)))))AND((t1.c0 IN (0.31502422718590917, t1.c0)))))OR((t1.c0 IN ())))) ORDER BY t1.c0 ASC, ((((t1.c0)OR(t1.c0)))OR(t1.c0)) COLLATE NOCASE, LIKELIHOOD(DISTINCT ((t1.c0) IS FALSE), 0.26225872924909444) DESC;
SELECT * FROM t0, v0 FULL OUTER JOIN t1 ON (((v0.c0, t1.c0, v0.c0)) BETWEEN ((v0.c3, ((((v0.c1)AND(v0.c4)))AND(v0.c1)), '-521123412' COLLATE NOCASE)) AND ((NULL, ('0.1769626579549557' IN (t1.c0)), CAST(v0.c3 AS BLOB)))) WHERE (COALESCE(CASE v0.c1  WHEN v0.c2 THEN v0.c3 END, (((v0.c3))>((v0.c3))), ((t0.c96)GLOB(v0.c2)), ((t0.c96) NOT BETWEEN (v0.c1) AND (v0.c0)), (- (v0.c1)), (- (t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CASE v0.c1  WHEN v0.c2 THEN v0.c3 END, (((v0.c3))>((v0.c3))), ((t0.c96)GLOB(v0.c2)), ((t0.c96) NOT BETWEEN (v0.c1) AND (v0.c0)), (- (v0.c1)), (- (t1.c0)))) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN t1 ON (((v0.c0, t1.c0, v0.c0)) BETWEEN ((v0.c3, ((((v0.c1)AND(v0.c4)))AND(v0.c1)), '-521123412' COLLATE NOCASE)) AND ((NULL, ('0.1769626579549557' IN (t1.c0)), CAST(v0.c3 AS BLOB)))));
SELECT * FROM t0, v0 FULL OUTER JOIN t1 ON (((v0.c0, t1.c0, v0.c0)) BETWEEN ((v0.c3, ((((v0.c1)AND(v0.c4)))AND(v0.c1)), '-521123412' COLLATE NOCASE)) AND ((NULL, ('0.1769626579549557' IN (t1.c0)), CAST(v0.c3 AS BLOB)))) WHERE (COALESCE(CASE v0.c1  WHEN v0.c2 THEN v0.c3 END, (((v0.c3))>((v0.c3))), ((t0.c96)GLOB(v0.c2)), ((t0.c96) NOT BETWEEN (v0.c1) AND (v0.c0)), (- (v0.c1)), (- (t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CASE v0.c1  WHEN v0.c2 THEN v0.c3 END, (((v0.c3))>((v0.c3))), ((t0.c96)GLOB(v0.c2)), ((t0.c96) NOT BETWEEN (v0.c1) AND (v0.c0)), (- (v0.c1)), (- (t1.c0)))) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN t1 ON (((v0.c0, t1.c0, v0.c0)) BETWEEN ((v0.c3, ((((v0.c1)AND(v0.c4)))AND(v0.c1)), '-521123412' COLLATE NOCASE)) AND ((NULL, ('0.1769626579549557' IN (t1.c0)), CAST(v0.c3 AS BLOB)))));
SELECT * FROM t0, v0 FULL OUTER JOIN t1 ON (((v0.c0, t1.c0, v0.c0)) BETWEEN ((v0.c3, ((((v0.c1)AND(v0.c4)))AND(v0.c1)), '-521123412' COLLATE NOCASE)) AND ((NULL, ('0.1769626579549557' IN (t1.c0)), CAST(v0.c3 AS BLOB)))) WHERE (COALESCE(CASE v0.c1  WHEN v0.c2 THEN v0.c3 END, (((v0.c3))>((v0.c3))), ((t0.c96)GLOB(v0.c2)), ((t0.c96) NOT BETWEEN (v0.c1) AND (v0.c0)), (- (v0.c1)), (- (t1.c0))));
SELECT COUNT(*) FROM t1, v0 WHERE (CAST((('-2001616417')OR(v0.c2)) AS BLOB)) ORDER BY ((v0.c1)-(t1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('-2001616417')OR(v0.c2)) AS BLOB)) IS TRUE)  as count FROM t1, v0 ORDER BY ((v0.c1)-(t1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM t1, v0 WHERE (CAST((('-2001616417')OR(v0.c2)) AS BLOB)) ORDER BY ((v0.c1)-(t1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('-2001616417')OR(v0.c2)) AS BLOB)) IS TRUE)  as count FROM t1, v0 ORDER BY ((v0.c1)-(t1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM t1, v0 WHERE (CAST((('-2001616417')OR(v0.c2)) AS BLOB)) ORDER BY ((v0.c1)-(t1.c0)) COLLATE BINARY;
SELECT * FROM v0 LEFT OUTER JOIN t0 ON CASE WHEN '' THEN ((t1.c0)<<(v0.c2)) END FULL OUTER JOIN t1 ON ((v0.c3) NOT BETWEEN (((((v0.c3)AND(v0.c3)))OR(NULL))) AND (((v0.c3)GLOB(v0.c0)))) WHERE (CASE WHEN ((v0.c2) ISNULL) THEN CASE WHEN t1.c0 THEN t1.c0 END WHEN CAST(t0.c96 AS REAL) THEN '' WHEN ((((((((v0.c1)AND(v0.c3)))AND('Q}TYv')))OR(t0.c96)))OR(v0.c3)) THEN -1.333674721E9 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c2) ISNULL) THEN CASE WHEN t1.c0 THEN t1.c0 END WHEN CAST(t0.c96 AS REAL) THEN '' WHEN ((((((((v0.c1)AND(v0.c3)))AND('Q}TYv')))OR(t0.c96)))OR(v0.c3)) THEN -1.333674721E9 END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON CASE WHEN '' THEN ((t1.c0)<<(v0.c2)) END FULL OUTER JOIN t1 ON ((v0.c3) NOT BETWEEN (((((v0.c3)AND(v0.c3)))OR(NULL))) AND (((v0.c3)GLOB(v0.c0)))));
SELECT * FROM v0 LEFT OUTER JOIN t0 ON CASE WHEN '' THEN ((t1.c0)<<(v0.c2)) END FULL OUTER JOIN t1 ON ((v0.c3) NOT BETWEEN (((((v0.c3)AND(v0.c3)))OR(NULL))) AND (((v0.c3)GLOB(v0.c0)))) WHERE (CASE WHEN ((v0.c2) ISNULL) THEN CASE WHEN t1.c0 THEN t1.c0 END WHEN CAST(t0.c96 AS REAL) THEN '' WHEN ((((((((v0.c1)AND(v0.c3)))AND('Q}TYv')))OR(t0.c96)))OR(v0.c3)) THEN -1.333674721E9 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c2) ISNULL) THEN CASE WHEN t1.c0 THEN t1.c0 END WHEN CAST(t0.c96 AS REAL) THEN '' WHEN ((((((((v0.c1)AND(v0.c3)))AND('Q}TYv')))OR(t0.c96)))OR(v0.c3)) THEN -1.333674721E9 END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON CASE WHEN '' THEN ((t1.c0)<<(v0.c2)) END FULL OUTER JOIN t1 ON ((v0.c3) NOT BETWEEN (((((v0.c3)AND(v0.c3)))OR(NULL))) AND (((v0.c3)GLOB(v0.c0)))));
SELECT COUNT(*) FROM v0, t0 NATURAL JOIN t1 WHERE ((((((t1.c0)) NOT BETWEEN ((v0.c3)) AND ((v0.c0))))OR(((v0.c2)<=(t0.c96))))) ORDER BY ((('-1864715826', ((((v0.c4)AND(t1.c0)))AND(t0.c96)), v0.c1))<=((((((v0.c1)AND('''')))AND(v0.c1)), ((v0.c2) IS FALSE), ((0.29179767858980943) ISNULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t1.c0)) NOT BETWEEN ((v0.c3)) AND ((v0.c0))))OR(((v0.c2)<=(t0.c96))))) IS TRUE)  as count FROM v0, t0 NATURAL JOIN t1 ORDER BY ((('-1864715826', ((((v0.c4)AND(t1.c0)))AND(t0.c96)), v0.c1))<=((((((v0.c1)AND('''')))AND(v0.c1)), ((v0.c2) IS FALSE), ((0.29179767858980943) ISNULL)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 NATURAL JOIN t1 WHERE ((((((t1.c0)) NOT BETWEEN ((v0.c3)) AND ((v0.c0))))OR(((v0.c2)<=(t0.c96))))) ORDER BY ((('-1864715826', ((((v0.c4)AND(t1.c0)))AND(t0.c96)), v0.c1))<=((((((v0.c1)AND('''')))AND(v0.c1)), ((v0.c2) IS FALSE), ((0.29179767858980943) ISNULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t1.c0)) NOT BETWEEN ((v0.c3)) AND ((v0.c0))))OR(((v0.c2)<=(t0.c96))))) IS TRUE)  as count FROM v0, t0 NATURAL JOIN t1 ORDER BY ((('-1864715826', ((((v0.c4)AND(t1.c0)))AND(t0.c96)), v0.c1))<=((((((v0.c1)AND('''')))AND(v0.c1)), ((v0.c2) IS FALSE), ((0.29179767858980943) ISNULL)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 NATURAL JOIN t1 WHERE ((((((t1.c0)) NOT BETWEEN ((v0.c3)) AND ((v0.c0))))OR(((v0.c2)<=(t0.c96))))) ORDER BY ((('-1864715826', ((((v0.c4)AND(t1.c0)))AND(t0.c96)), v0.c1))<=((((((v0.c1)AND('''')))AND(v0.c1)), ((v0.c2) IS FALSE), ((0.29179767858980943) ISNULL)))) ASC  NULLS LAST;
SELECT ALL * FROM t0, t1, v0 WHERE (v0.c0) ORDER BY CASE x''  WHEN CAST(v0.c3 AS INTEGER) THEN 'Iw&1' ELSE (+ (v0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, t1, v0 ORDER BY CASE x''  WHEN CAST(v0.c3 AS INTEGER) THEN 'Iw&1' ELSE (+ (v0.c0)) END DESC  NULLS FIRST);
SELECT ALL * FROM t0, t1, v0 WHERE (v0.c0) ORDER BY CASE x''  WHEN CAST(v0.c3 AS INTEGER) THEN 'Iw&1' ELSE (+ (v0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, t1, v0 ORDER BY CASE x''  WHEN CAST(v0.c3 AS INTEGER) THEN 'Iw&1' ELSE (+ (v0.c0)) END DESC  NULLS FIRST);
SELECT ALL * FROM t0, t1, v0 WHERE (v0.c0) ORDER BY CASE x''  WHEN CAST(v0.c3 AS INTEGER) THEN 'Iw&1' ELSE (+ (v0.c0)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, t1 WHERE (LIKELY('')) ORDER BY CASE ((((t1.c0)OR(t0.c96)))OR(t0.c96))  WHEN '1619286520' THEN ((t1.c0) IS TRUE) ELSE (+ (t1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((LIKELY('')) IS TRUE)  as count FROM t0, t1 ORDER BY CASE ((((t1.c0)OR(t0.c96)))OR(t0.c96))  WHEN '1619286520' THEN ((t1.c0) IS TRUE) ELSE (+ (t1.c0)) END ASC);
SELECT COUNT(*) FROM t0, t1 WHERE (LIKELY('')) ORDER BY CASE ((((t1.c0)OR(t0.c96)))OR(t0.c96))  WHEN '1619286520' THEN ((t1.c0) IS TRUE) ELSE (+ (t1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((LIKELY('')) IS TRUE)  as count FROM t0, t1 ORDER BY CASE ((((t1.c0)OR(t0.c96)))OR(t0.c96))  WHEN '1619286520' THEN ((t1.c0) IS TRUE) ELSE (+ (t1.c0)) END ASC);
SELECT COUNT(*) FROM t0, t1 WHERE (LIKELY('')) ORDER BY CASE ((((t1.c0)OR(t0.c96)))OR(t0.c96))  WHEN '1619286520' THEN ((t1.c0) IS TRUE) ELSE (+ (t1.c0)) END ASC;
SELECT COUNT(*) FROM t0, v0, t1 WHERE (((((0.39019528617394883)AND(t1.c0))) BETWEEN (((((((((v0.c3)AND(t1.c0)))OR(v0.c2)))AND(v0.c1)))AND(v0.c2))) AND ((- (v0.c2))))) ORDER BY (~ ('i8')) DESC, ((((((NULL) NOT BETWEEN (t1.c0) AND (t0.c96)))AND(t0.c96)))AND(((v0.c3)<(v0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.39019528617394883)AND(t1.c0))) BETWEEN (((((((((v0.c3)AND(t1.c0)))OR(v0.c2)))AND(v0.c1)))AND(v0.c2))) AND ((- (v0.c2))))) IS TRUE)  as count FROM t0, v0, t1 ORDER BY (~ ('i8')) DESC, ((((((NULL) NOT BETWEEN (t1.c0) AND (t0.c96)))AND(t0.c96)))AND(((v0.c3)<(v0.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0, t1 WHERE (((((0.39019528617394883)AND(t1.c0))) BETWEEN (((((((((v0.c3)AND(t1.c0)))OR(v0.c2)))AND(v0.c1)))AND(v0.c2))) AND ((- (v0.c2))))) ORDER BY (~ ('i8')) DESC, ((((((NULL) NOT BETWEEN (t1.c0) AND (t0.c96)))AND(t0.c96)))AND(((v0.c3)<(v0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.39019528617394883)AND(t1.c0))) BETWEEN (((((((((v0.c3)AND(t1.c0)))OR(v0.c2)))AND(v0.c1)))AND(v0.c2))) AND ((- (v0.c2))))) IS TRUE)  as count FROM t0, v0, t1 ORDER BY (~ ('i8')) DESC, ((((((NULL) NOT BETWEEN (t1.c0) AND (t0.c96)))AND(t0.c96)))AND(((v0.c3)<(v0.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0, t1 WHERE (((((0.39019528617394883)AND(t1.c0))) BETWEEN (((((((((v0.c3)AND(t1.c0)))OR(v0.c2)))AND(v0.c1)))AND(v0.c2))) AND ((- (v0.c2))))) ORDER BY (~ ('i8')) DESC, ((((((NULL) NOT BETWEEN (t1.c0) AND (t0.c96)))AND(t0.c96)))AND(((v0.c3)<(v0.c2)))) ASC  NULLS FIRST;
SELECT * FROM t1 WHERE ((((((0.0343523576524567) NOTNULL)))>=(((- (t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.0343523576524567) NOTNULL)))>=(((- (t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((0.0343523576524567) NOTNULL)))>=(((- (t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.0343523576524567) NOTNULL)))>=(((- (t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((0.0343523576524567) NOTNULL)))>=(((- (t1.c0))))));
SELECT * FROM t1 WHERE ((~ (t1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((~ (t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((~ (t1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((~ (t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((~ (t1.c0)) COLLATE NOCASE);
SELECT * FROM v0, t1 WHERE ((((((v0.c2)<>(t1.c0))))<=((((t1.c0)>>(-403785209))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2)<>(t1.c0))))<=((((t1.c0)>>(-403785209)))))) IS TRUE)  as count FROM v0, t1);
SELECT * FROM v0, t1 WHERE ((((((v0.c2)<>(t1.c0))))<=((((t1.c0)>>(-403785209))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2)<>(t1.c0))))<=((((t1.c0)>>(-403785209)))))) IS TRUE)  as count FROM v0, t1);
SELECT * FROM v0, t1 WHERE ((((((v0.c2)<>(t1.c0))))<=((((t1.c0)>>(-403785209))))));
SELECT * FROM t1, v0, t0 WHERE ((((t0.c96))=(((((NULL, v0.c2, t0.c96))=((1.733776238E9, v0.c0, t0.c96)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c96))=(((((NULL, v0.c2, t0.c96))==((1.733776238E9, v0.c0, t0.c96))))))) IS TRUE)  as count FROM t1, v0, t0);
SELECT * FROM t1, v0, t0 WHERE ((((t0.c96))=(((((NULL, v0.c2, t0.c96))=((1.733776238E9, v0.c0, t0.c96)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c96))=(((((NULL, v0.c2, t0.c96))==((1.733776238E9, v0.c0, t0.c96))))))) IS TRUE)  as count FROM t1, v0, t0);
SELECT * FROM t1, v0, t0 WHERE ((((t0.c96))=(((((NULL, v0.c2, t0.c96))=((1.733776238E9, v0.c0, t0.c96)))))));
SELECT * FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (NULL);
SELECT ALL * FROM v0 INNER JOIN t1 ON CAST(((1371001293)>=(v0.c3)) AS NUMERIC) WHERE (CAST('*' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST('*' AS REAL)) IS TRUE)  as count FROM v0 INNER JOIN t1 ON CAST(((1371001293)>=(v0.c3)) AS NUMERIC));
SELECT ALL * FROM v0 INNER JOIN t1 ON CAST(((1371001293)>=(v0.c3)) AS NUMERIC) WHERE (CAST('*' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST('*' AS REAL)) IS TRUE)  as count FROM v0 INNER JOIN t1 ON CAST(((1371001293)>=(v0.c3)) AS NUMERIC));
SELECT ALL * FROM v0 INNER JOIN t1 ON CAST(((1371001293)>=(v0.c3)) AS NUMERIC) WHERE (CAST('*' AS REAL));
SELECT COUNT(*) FROM t1, t0 WHERE (((((t0.c96)AND(((t1.c0) IS TRUE))))AND((((t0.c96))=((t0.c96)))))) ORDER BY (((1733776238 COLLATE BINARY, SQLITE_COMPILEOPTION_GET('-715900164'), highlight(t1.c0, t1.c0, t0.c96, t0.c96)))<>((((((t0.c96)AND(t0.c96)))OR(t1.c0)), CAST(t1.c0 AS INTEGER), ((t0.c96) IS FALSE)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c96)AND(((t1.c0) IS TRUE))))AND((((t0.c96))==((t0.c96)))))) IS TRUE)  as count FROM t1, t0 ORDER BY (((1733776238 COLLATE BINARY, SQLITE_COMPILEOPTION_GET('-715900164'), highlight(t1.c0, t1.c0, t0.c96, t0.c96)))<>((((((t0.c96)AND(t0.c96)))OR(t1.c0)), CAST(t1.c0 AS INTEGER), ((t0.c96) IS FALSE)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, t0 WHERE (((((t0.c96)AND(((t1.c0) IS TRUE))))AND((((t0.c96))=((t0.c96)))))) ORDER BY (((1733776238 COLLATE BINARY, SQLITE_COMPILEOPTION_GET('-715900164'), highlight(t1.c0, t1.c0, t0.c96, t0.c96)))<>((((((t0.c96)AND(t0.c96)))OR(t1.c0)), CAST(t1.c0 AS INTEGER), ((t0.c96) IS FALSE)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c96)AND(((t1.c0) IS TRUE))))AND((((t0.c96))==((t0.c96)))))) IS TRUE)  as count FROM t1, t0 ORDER BY (((1733776238 COLLATE BINARY, SQLITE_COMPILEOPTION_GET('-715900164'), highlight(t1.c0, t1.c0, t0.c96, t0.c96)))<>((((((t0.c96)AND(t0.c96)))OR(t1.c0)), CAST(t1.c0 AS INTEGER), ((t0.c96) IS FALSE)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, t0 WHERE (((((t0.c96)AND(((t1.c0) IS TRUE))))AND((((t0.c96))=((t0.c96)))))) ORDER BY (((1733776238 COLLATE BINARY, SQLITE_COMPILEOPTION_GET('-715900164'), highlight(t1.c0, t1.c0, t0.c96, t0.c96)))<>((((((t0.c96)AND(t0.c96)))OR(t1.c0)), CAST(t1.c0 AS INTEGER), ((t0.c96) IS FALSE)))) DESC  NULLS LAST;
SELECT ALL * FROM t0 NOT INDEXED, v0, t1 WHERE (CAST(COALESCE(DISTINCT v0.c0, v0.c4) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(COALESCE(DISTINCT v0.c0, v0.c4) AS NUMERIC)) IS TRUE)  as count FROM t0, v0, t1);
SELECT ALL * FROM t0 NOT INDEXED, v0, t1 WHERE (CAST(COALESCE(DISTINCT v0.c0, v0.c4) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(COALESCE(DISTINCT v0.c0, v0.c4) AS NUMERIC)) IS TRUE)  as count FROM t0, v0, t1);
SELECT ALL * FROM t0 NOT INDEXED, v0, t1 WHERE (CAST(COALESCE(DISTINCT v0.c0, v0.c4) AS NUMERIC));
SELECT ALL * FROM v0, t1, t0 WHERE ((NOT ((((t1.c0)) NOT BETWEEN ((v0.c3)) AND ((t0.c96))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t1.c0)) NOT BETWEEN ((v0.c3)) AND ((t0.c96)))))) IS TRUE)  as count FROM v0, t1, t0);
SELECT ALL * FROM v0, t1, t0 WHERE ((NOT ((((t1.c0)) NOT BETWEEN ((v0.c3)) AND ((t0.c96))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t1.c0)) NOT BETWEEN ((v0.c3)) AND ((t0.c96)))))) IS TRUE)  as count FROM v0, t1, t0);
SELECT ALL * FROM v0, t1, t0 WHERE ((NOT ((((t1.c0)) NOT BETWEEN ((v0.c3)) AND ((t0.c96))))));
SELECT * FROM t1, v0 WHERE (CASE CAST(v0.c2 AS INTEGER)  WHEN ((((v0.c4)OR(x'9b57')))AND(v0.c2)) THEN ((v0.c0)<<(t1.c0)) ELSE TRIM(v0.c3, v0.c1) END) ORDER BY COALESCE((v0.c2 IN ()), v0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c2 AS INTEGER)  WHEN ((((v0.c4)OR(x'9b57')))AND(v0.c2)) THEN ((v0.c0)<<(t1.c0)) ELSE TRIM(v0.c3, v0.c1) END) IS TRUE)  as count FROM t1 NOT INDEXED, v0 ORDER BY COALESCE((v0.c2 IN ()), v0.c0 COLLATE NOCASE));
SELECT * FROM t1, v0 WHERE (CASE CAST(v0.c2 AS INTEGER)  WHEN ((((v0.c4)OR(x'9b57')))AND(v0.c2)) THEN ((v0.c0)<<(t1.c0)) ELSE TRIM(v0.c3, v0.c1) END) ORDER BY COALESCE((v0.c2 IN ()), v0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c2 AS INTEGER)  WHEN ((((v0.c4)OR(x'9b57')))AND(v0.c2)) THEN ((v0.c0)<<(t1.c0)) ELSE TRIM(v0.c3, v0.c1) END) IS TRUE)  as count FROM t1 NOT INDEXED, v0 ORDER BY COALESCE((v0.c2 IN ()), v0.c0 COLLATE NOCASE));
SELECT * FROM t1, v0 WHERE (CASE CAST(v0.c2 AS INTEGER)  WHEN ((((v0.c4)OR(x'9b57')))AND(v0.c2)) THEN ((v0.c0)<<(t1.c0)) ELSE TRIM(v0.c3, v0.c1) END) ORDER BY COALESCE((v0.c2 IN ()), v0.c0 COLLATE NOCASE);
SELECT * FROM v0 WHERE (((((CAST(v0.c1 AS TEXT))AND(CASE v0.c4  WHEN v0.c4 THEN v0.c2 END)))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c1 AS TEXT))AND(CASE v0.c4  WHEN v0.c4 THEN v0.c2 END)))OR(NULL))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((CAST(v0.c1 AS TEXT))AND(CASE v0.c4  WHEN v0.c4 THEN v0.c2 END)))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c1 AS TEXT))AND(CASE v0.c4  WHEN v0.c4 THEN v0.c2 END)))OR(NULL))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((CAST(v0.c1 AS TEXT))AND(CASE v0.c4  WHEN v0.c4 THEN v0.c2 END)))OR(NULL)));
SELECT COUNT(*) FROM t1, v0 WHERE (((t1.c0 COLLATE RTRIM)<=((+ (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE RTRIM)<=((+ (v0.c1))))) IS TRUE)  as count FROM t1, v0);
SELECT COUNT(*) FROM t1, v0 WHERE (((t1.c0 COLLATE RTRIM)<=((+ (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE RTRIM)<=((+ (v0.c1))))) IS TRUE)  as count FROM t1, v0);
SELECT COUNT(*) FROM t1, v0 WHERE (((t1.c0 COLLATE RTRIM)<=((+ (v0.c1)))));
SELECT * FROM t0 WHERE ((((((+ (0.8311417759733889)))OR(t0.c96)))AND(ABS(t0.c96)))) ORDER BY (- ((t0.c96 IN (-2122748752))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((+ (0.8311417759733889)))OR(t0.c96)))AND(ABS(t0.c96)))) IS TRUE)  as count FROM t0 ORDER BY (- ((t0.c96 IN (-2122748752))))  NULLS FIRST);
SELECT * FROM t0 WHERE ((((((+ (0.8311417759733889)))OR(t0.c96)))AND(ABS(t0.c96)))) ORDER BY (- ((t0.c96 IN (-2122748752))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((+ (0.8311417759733889)))OR(t0.c96)))AND(ABS(t0.c96)))) IS TRUE)  as count FROM t0 ORDER BY (- ((t0.c96 IN (-2122748752))))  NULLS FIRST);
SELECT * FROM t0 WHERE ((((((+ (0.8311417759733889)))OR(t0.c96)))AND(ABS(t0.c96)))) ORDER BY (- ((t0.c96 IN (-2122748752))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, t1, v0 WHERE (((CHAR(t0.c96))*(load_extension(t0.c96))));
SELECT SUM(count) FROM (SELECT ALL ((((CHAR(t0.c96))*(load_extension(t0.c96)))) IS TRUE)  as count FROM t0, t1, v0);
SELECT ALL COUNT(*) FROM t0, t1, v0 WHERE (((CHAR(t0.c96))*(load_extension(t0.c96))));
SELECT SUM(count) FROM (SELECT ALL ((((CHAR(t0.c96))*(load_extension(t0.c96)))) IS TRUE)  as count FROM t0, t1, v0);
SELECT * FROM t1, t0 WHERE (((t0.c96 COLLATE RTRIM)>>(t0.c96 COLLATE BINARY))) ORDER BY (((t0.c96, t1.c0, '')) BETWEEN ((t1.c0, t0.c96, t0.c96)) AND ((t0.c96, t0.c96, t0.c96))) COLLATE RTRIM, 'gp~GA(' ASC, ((((NULL, t0.c96, t1.c0))<=((t1.c0, t0.c96, t1.c0))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((t0.c96 COLLATE RTRIM)>>(t0.c96 COLLATE BINARY))) IS TRUE)  as count FROM t1, t0 ORDER BY (((t0.c96, t1.c0, '')) BETWEEN ((t1.c0, t0.c96, t0.c96)) AND ((t0.c96, t0.c96, t0.c96))) COLLATE RTRIM, 'gp~GA(' ASC, ((((NULL, t0.c96, t1.c0))<=((t1.c0, t0.c96, t1.c0))) IN ()));
SELECT * FROM t1, t0 WHERE (((t0.c96 COLLATE RTRIM)>>(t0.c96 COLLATE BINARY))) ORDER BY (((t0.c96, t1.c0, '')) BETWEEN ((t1.c0, t0.c96, t0.c96)) AND ((t0.c96, t0.c96, t0.c96))) COLLATE RTRIM, 'gp~GA(' ASC, ((((NULL, t0.c96, t1.c0))<=((t1.c0, t0.c96, t1.c0))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((t0.c96 COLLATE RTRIM)>>(t0.c96 COLLATE BINARY))) IS TRUE)  as count FROM t1, t0 ORDER BY (((t0.c96, t1.c0, '')) BETWEEN ((t1.c0, t0.c96, t0.c96)) AND ((t0.c96, t0.c96, t0.c96))) COLLATE RTRIM, 'gp~GA(' ASC, ((((NULL, t0.c96, t1.c0))<=((t1.c0, t0.c96, t1.c0))) IN ()));
SELECT * FROM t1, t0 WHERE (((t0.c96 COLLATE RTRIM)>>(t0.c96 COLLATE BINARY))) ORDER BY (((t0.c96, t1.c0, '')) BETWEEN ((t1.c0, t0.c96, t0.c96)) AND ((t0.c96, t0.c96, t0.c96))) COLLATE RTRIM, 'gp~GA(' ASC, ((((NULL, t0.c96, t1.c0))<=((t1.c0, t0.c96, t1.c0))) IN ());
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((((((('<rjd')OR((('371054509') IS FALSE))))AND(((v0.c3) ISNULL))))AND((((t0.c96))<((v0.c2))))))AND(x'16320852')));
SELECT SUM(count) FROM (SELECT ALL (((((((((('<rjd')OR((('371054509') IS FALSE))))AND(((v0.c3) ISNULL))))AND((((t0.c96))<((v0.c2))))))AND(x'16320852'))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((((((('<rjd')OR((('371054509') IS FALSE))))AND(((v0.c3) ISNULL))))AND((((t0.c96))<((v0.c2))))))AND(x'16320852')));
SELECT SUM(count) FROM (SELECT ALL (((((((((('<rjd')OR((('371054509') IS FALSE))))AND(((v0.c3) ISNULL))))AND((((t0.c96))<((v0.c2))))))AND(x'16320852'))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((((((('<rjd')OR((('371054509') IS FALSE))))AND(((v0.c3) ISNULL))))AND((((t0.c96))<((v0.c2))))))AND(x'16320852')));
SELECT * FROM t1 WHERE (CASE WHEN ((t1.c0) NOTNULL) THEN NULL WHEN ((((t1.c0)AND(0.36645068407533343)))AND(t1.c0)) THEN x'084e' WHEN ((t1.c0)*(NULL)) THEN ((t1.c0)/(t1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c0) NOTNULL) THEN NULL WHEN ((((t1.c0)AND(0.36645068407533343)))AND(t1.c0)) THEN x'084e' WHEN ((t1.c0)*(NULL)) THEN ((t1.c0)/(t1.c0)) END) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE WHEN ((t1.c0) NOTNULL) THEN NULL WHEN ((((t1.c0)AND(0.36645068407533343)))AND(t1.c0)) THEN x'084e' WHEN ((t1.c0)*(NULL)) THEN ((t1.c0)/(t1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c0) NOTNULL) THEN NULL WHEN ((((t1.c0)AND(0.36645068407533343)))AND(t1.c0)) THEN x'084e' WHEN ((t1.c0)*(NULL)) THEN ((t1.c0)/(t1.c0)) END) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE WHEN ((t1.c0) NOTNULL) THEN NULL WHEN ((((t1.c0)AND(0.36645068407533343)))AND(t1.c0)) THEN x'084e' WHEN ((t1.c0)*(NULL)) THEN ((t1.c0)/(t1.c0)) END);
SELECT * FROM t1 RIGHT OUTER JOIN v0 ON ((v0.c0) BETWEEN (((((v0.c4)OR(v0.c2)))OR(v0.c0))) AND (((v0.c4)IS NOT(t0.c96)))) CROSS JOIN t0 ON ((json_array_length(v0.c2, v0.c3))<>(((((((((v0.c2)OR('793431461')))OR(v0.c1)))OR(v0.c2)))AND(v0.c4)))) WHERE (CAST(v0.c1 AS BLOB)) ORDER BY (((v0.c0)<<(v0.c2)) IN ()), load_extension((((v0.c1))<=((v0.c1))), '-1954412758');
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 AS BLOB)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON ((v0.c0) BETWEEN (((((v0.c4)OR(v0.c2)))OR(v0.c0))) AND (((v0.c4)IS NOT(t0.c96)))) CROSS JOIN t0 ON ((json_array_length(v0.c2, v0.c3))<>(((((((((v0.c2)OR('793431461')))OR(v0.c1)))OR(v0.c2)))AND(v0.c4)))) ORDER BY (((v0.c0)<<(v0.c2)) IN ()), load_extension((((v0.c1))<=((v0.c1))), '-1954412758'));
SELECT * FROM t1 RIGHT OUTER JOIN v0 ON ((v0.c0) BETWEEN (((((v0.c4)OR(v0.c2)))OR(v0.c0))) AND (((v0.c4)IS NOT(t0.c96)))) CROSS JOIN t0 ON ((json_array_length(v0.c2, v0.c3))<>(((((((((v0.c2)OR('793431461')))OR(v0.c1)))OR(v0.c2)))AND(v0.c4)))) WHERE (CAST(v0.c1 AS BLOB)) ORDER BY (((v0.c0)<<(v0.c2)) IN ()), load_extension((((v0.c1))<=((v0.c1))), '-1954412758');
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 AS BLOB)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON ((v0.c0) BETWEEN (((((v0.c4)OR(v0.c2)))OR(v0.c0))) AND (((v0.c4)IS NOT(t0.c96)))) CROSS JOIN t0 ON ((json_array_length(v0.c2, v0.c3))<>(((((((((v0.c2)OR('793431461')))OR(v0.c1)))OR(v0.c2)))AND(v0.c4)))) ORDER BY (((v0.c0)<<(v0.c2)) IN ()), load_extension((((v0.c1))<=((v0.c1))), '-1954412758'));
SELECT COUNT(*) FROM t1, v0 WHERE (v0.c2) ORDER BY (((v0.c4)) NOT BETWEEN ((v0.c4)) AND ((v0.c3))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM t1, v0 ORDER BY (((v0.c4)) NOT BETWEEN ((v0.c4)) AND ((v0.c3))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, v0 WHERE (v0.c2) ORDER BY (((v0.c4)) NOT BETWEEN ((v0.c4)) AND ((v0.c3))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM t1, v0 ORDER BY (((v0.c4)) NOT BETWEEN ((v0.c4)) AND ((v0.c3))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, v0 WHERE (v0.c2) ORDER BY (((v0.c4)) NOT BETWEEN ((v0.c4)) AND ((v0.c3))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, v0, t0 WHERE (((CASE WHEN v0.c0 THEN v0.c2 END)%(((v0.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c2 END)%(((v0.c3) IS TRUE)))) IS TRUE)  as count FROM t1, v0, t0);
SELECT ALL COUNT(*) FROM t1, v0, t0 WHERE (((CASE WHEN v0.c0 THEN v0.c2 END)%(((v0.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c2 END)%(((v0.c3) IS TRUE)))) IS TRUE)  as count FROM t1, v0, t0);
SELECT ALL COUNT(*) FROM t1, v0, t0 WHERE (((CASE WHEN v0.c0 THEN v0.c2 END)%(((v0.c3) IS TRUE))));
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN ((('', t1.c0, x'', t1.c0, t1.c0)) BETWEEN (('', t1.c0, t1.c0, t1.c0, t1.c0)) AND (('1524407057', t1.c0, t1.c0, t1.c0, t1.c0))) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((('', t1.c0, x'', t1.c0, t1.c0)) BETWEEN (('', t1.c0, t1.c0, t1.c0, t1.c0)) AND (('1524407057', t1.c0, t1.c0, t1.c0, t1.c0))) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN ((('', t1.c0, x'', t1.c0, t1.c0)) BETWEEN (('', t1.c0, t1.c0, t1.c0, t1.c0)) AND (('1524407057', t1.c0, t1.c0, t1.c0, t1.c0))) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((('', t1.c0, x'', t1.c0, t1.c0)) BETWEEN (('', t1.c0, t1.c0, t1.c0, t1.c0)) AND (('1524407057', t1.c0, t1.c0, t1.c0, t1.c0))) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN ((('', t1.c0, x'', t1.c0, t1.c0)) BETWEEN (('', t1.c0, t1.c0, t1.c0, t1.c0)) AND (('1524407057', t1.c0, t1.c0, t1.c0, t1.c0))) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END);
SELECT * FROM t0, v0, t1 WHERE (CAST(((t0.c96)<(v0.c4)) AS TEXT)) ORDER BY (((v0.c1 IN ()))>=(((v0.c3)OR(v0.c2)))) ASC  NULLS FIRST, t1.c0 ASC  NULLS FIRST, ((((((((((((UPPER(DISTINCT v0.c4))OR(((v0.c2)OR(v0.c2)))))AND(((t0.c96)IS(v0.c4)))))AND(((v0.c4) NOT NULL))))AND(((t1.c0)LIKE(v0.c4)))))OR(')ธR	5')))AND('Ҍc')) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c96)<(v0.c4)) AS TEXT)) IS TRUE)  as count FROM t0, v0, t1 ORDER BY (((v0.c1 IN ()))>=(((v0.c3)OR(v0.c2)))) ASC  NULLS FIRST, t1.c0 ASC  NULLS FIRST, ((((((((((((UPPER(DISTINCT v0.c4))OR(((v0.c2)OR(v0.c2)))))AND(((t0.c96)IS(v0.c4)))))AND(((v0.c4) NOT NULL))))AND(((t1.c0)LIKE(v0.c4)))))OR(')ธR	5')))AND('Ҍc')) ASC);
SELECT * FROM t0, v0, t1 WHERE (CAST(((t0.c96)<(v0.c4)) AS TEXT)) ORDER BY (((v0.c1 IN ()))>=(((v0.c3)OR(v0.c2)))) ASC  NULLS FIRST, t1.c0 ASC  NULLS FIRST, ((((((((((((UPPER(DISTINCT v0.c4))OR(((v0.c2)OR(v0.c2)))))AND(((t0.c96)IS(v0.c4)))))AND(((v0.c4) NOT NULL))))AND(((t1.c0)LIKE(v0.c4)))))OR(')ธR	5')))AND('Ҍc')) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c96)<(v0.c4)) AS TEXT)) IS TRUE)  as count FROM t0, v0, t1 ORDER BY (((v0.c1 IN ()))>=(((v0.c3)OR(v0.c2)))) ASC  NULLS FIRST, t1.c0 ASC  NULLS FIRST, ((((((((((((UPPER(DISTINCT v0.c4))OR(((v0.c2)OR(v0.c2)))))AND(((t0.c96)IS(v0.c4)))))AND(((v0.c4) NOT NULL))))AND(((t1.c0)LIKE(v0.c4)))))OR(')ธR	5')))AND('Ҍc')) ASC);
SELECT * FROM t0, v0, t1 WHERE (CAST(((t0.c96)<(v0.c4)) AS TEXT)) ORDER BY (((v0.c1 IN ()))>=(((v0.c3)OR(v0.c2)))) ASC  NULLS FIRST, t1.c0 ASC  NULLS FIRST, ((((((((((((UPPER(DISTINCT v0.c4))OR(((v0.c2)OR(v0.c2)))))AND(((t0.c96)IS(v0.c4)))))AND(((v0.c4) NOT NULL))))AND(((t1.c0)LIKE(v0.c4)))))OR(')ธR	5')))AND('Ҍc')) ASC;
SELECT * FROM t1 WHERE (((((t1.c0) ISNULL)) BETWEEN (t1.c0 COLLATE NOCASE) AND (((t1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0) ISNULL)) BETWEEN (t1.c0 COLLATE NOCASE) AND (((t1.c0) IS FALSE)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c0) ISNULL)) BETWEEN (t1.c0 COLLATE NOCASE) AND (((t1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0) ISNULL)) BETWEEN (t1.c0 COLLATE NOCASE) AND (((t1.c0) IS FALSE)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c0) ISNULL)) BETWEEN (t1.c0 COLLATE NOCASE) AND (((t1.c0) IS FALSE))));
SELECT * FROM v0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 NOT INDEXED, t0);
SELECT * FROM v0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 NOT INDEXED, t0);
SELECT * FROM v0, t0 WHERE (x'');
SELECT COUNT(*) FROM t0, t1, v0 WHERE ((+ (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, t1, v0);
SELECT COUNT(*) FROM t0, t1, v0 WHERE ((+ (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, t1, v0);
SELECT COUNT(*) FROM t0, t1, v0 WHERE ((+ (v0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t1, v0 WHERE (((NULL) IS FALSE)) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE)) IS TRUE)  as count FROM t1, v0 ORDER BY t1.c0);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (((NULL) IS FALSE)) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE)) IS TRUE)  as count FROM t1, v0 ORDER BY t1.c0);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (((NULL) IS FALSE)) ORDER BY t1.c0;
SELECT COUNT(*) FROM t1, t0, v0 WHERE (((((v0.c2) NOTNULL))<<(CAST(v0.c3 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOTNULL))<<(CAST(v0.c3 AS TEXT)))) IS TRUE)  as count FROM t1, t0, v0);
SELECT COUNT(*) FROM t1, t0, v0 WHERE (((((v0.c2) NOTNULL))<<(CAST(v0.c3 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOTNULL))<<(CAST(v0.c3 AS TEXT)))) IS TRUE)  as count FROM t1, t0, v0);
SELECT COUNT(*) FROM t1, t0, v0 WHERE (((((v0.c2) NOTNULL))<<(CAST(v0.c3 AS TEXT))));
SELECT ALL COUNT(*) FROM t1, t0 INNER JOIN v0 ON ((json_quote(v0.c2))-((('-503619005')LIKE(t1.c0)))) WHERE ((CASE WHEN x'62b6d6d5' THEN -1.881856652E9 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN x'62b6d6d5' THEN -1.881856652E9 END IN ())) IS TRUE)  as count FROM t1, t0 INNER JOIN v0 ON ((json_quote(v0.c2))-((('-503619005')LIKE(t1.c0)))));
SELECT ALL COUNT(*) FROM t1, t0 INNER JOIN v0 ON ((json_quote(v0.c2))-((('-503619005')LIKE(t1.c0)))) WHERE ((CASE WHEN x'62b6d6d5' THEN -1.881856652E9 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN x'62b6d6d5' THEN -1.881856652E9 END IN ())) IS TRUE)  as count FROM t1, t0 INNER JOIN v0 ON ((json_quote(v0.c2))-((('-503619005')LIKE(t1.c0)))));
SELECT ALL COUNT(*) FROM t1, t0 INNER JOIN v0 ON ((json_quote(v0.c2))-((('-503619005')LIKE(t1.c0)))) WHERE ((CASE WHEN x'62b6d6d5' THEN -1.881856652E9 END IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT * FROM v0 WHERE (((('-647172285')) NOT BETWEEN (((v0.c1 IN ()))) AND ((((v0.c0)+(v0.c4)))))) ORDER BY (((v0.c3, v0.c2, v0.c2)) NOT BETWEEN (((NOT (v0.c2)), ((v0.c4) NOTNULL), (((v0.c1, '-1601787785', v0.c1)) NOT BETWEEN ((v0.c0, v0.c0, v0.c4)) AND ((v0.c3, v0.c1, v0.c0))))) AND ((((((v0.c1)OR(x'56c6')))AND(v0.c4)), ((v0.c2) NOT NULL), ((((v0.c2)OR(v0.c3)))AND(v0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('-647172285')) NOT BETWEEN (((v0.c1 IN ()))) AND ((((v0.c0)+(v0.c4)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c3, v0.c2, v0.c2)) NOT BETWEEN (((NOT (v0.c2)), ((v0.c4) NOTNULL), (((v0.c1, '-1601787785', v0.c1)) NOT BETWEEN ((v0.c0, v0.c0, v0.c4)) AND ((v0.c3, v0.c1, v0.c0))))) AND ((((((v0.c1)OR(x'56c6')))AND(v0.c4)), ((v0.c2) NOT NULL), ((((v0.c2)OR(v0.c3)))AND(v0.c1))))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((('-647172285')) NOT BETWEEN (((v0.c1 IN ()))) AND ((((v0.c0)+(v0.c4)))))) ORDER BY (((v0.c3, v0.c2, v0.c2)) NOT BETWEEN (((NOT (v0.c2)), ((v0.c4) NOTNULL), (((v0.c1, '-1601787785', v0.c1)) NOT BETWEEN ((v0.c0, v0.c0, v0.c4)) AND ((v0.c3, v0.c1, v0.c0))))) AND ((((((v0.c1)OR(x'56c6')))AND(v0.c4)), ((v0.c2) NOT NULL), ((((v0.c2)OR(v0.c3)))AND(v0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('-647172285')) NOT BETWEEN (((v0.c1 IN ()))) AND ((((v0.c0)+(v0.c4)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c3, v0.c2, v0.c2)) NOT BETWEEN (((NOT (v0.c2)), ((v0.c4) NOTNULL), (((v0.c1, '-1601787785', v0.c1)) NOT BETWEEN ((v0.c0, v0.c0, v0.c4)) AND ((v0.c3, v0.c1, v0.c0))))) AND ((((((v0.c1)OR(x'56c6')))AND(v0.c4)), ((v0.c2) NOT NULL), ((((v0.c2)OR(v0.c3)))AND(v0.c1))))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((('-647172285')) NOT BETWEEN (((v0.c1 IN ()))) AND ((((v0.c0)+(v0.c4)))))) ORDER BY (((v0.c3, v0.c2, v0.c2)) NOT BETWEEN (((NOT (v0.c2)), ((v0.c4) NOTNULL), (((v0.c1, '-1601787785', v0.c1)) NOT BETWEEN ((v0.c0, v0.c0, v0.c4)) AND ((v0.c3, v0.c1, v0.c0))))) AND ((((((v0.c1)OR(x'56c6')))AND(v0.c4)), ((v0.c2) NOT NULL), ((((v0.c2)OR(v0.c3)))AND(v0.c1))))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, v0 WHERE (((v0.c1) NOT BETWEEN (v0.c4) AND (v0.c4)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) NOT BETWEEN (v0.c4) AND (v0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((v0.c1) NOT BETWEEN (v0.c4) AND (v0.c4)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) NOT BETWEEN (v0.c4) AND (v0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((v0.c1) NOT BETWEEN (v0.c4) AND (v0.c4)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, t0, t1 WHERE (((CASE WHEN t1.c0 THEN v0.c0 ELSE t1.c0 END) BETWEEN ((((v0.c2))<((v0.c1)))) AND (CASE v0.c1  WHEN v0.c3 THEN v0.c3 WHEN v0.c2 THEN t1.c0 WHEN v0.c3 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c0 THEN v0.c0 ELSE t1.c0 END) BETWEEN ((((v0.c2))<((v0.c1)))) AND (CASE v0.c1  WHEN v0.c3 THEN v0.c3 WHEN v0.c2 THEN t1.c0 WHEN v0.c3 THEN t1.c0 END))) IS TRUE)  as count FROM v0, t0, t1);
SELECT ALL COUNT(*) FROM v0, t0, t1 WHERE (((CASE WHEN t1.c0 THEN v0.c0 ELSE t1.c0 END) BETWEEN ((((v0.c2))<((v0.c1)))) AND (CASE v0.c1  WHEN v0.c3 THEN v0.c3 WHEN v0.c2 THEN t1.c0 WHEN v0.c3 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c0 THEN v0.c0 ELSE t1.c0 END) BETWEEN ((((v0.c2))<((v0.c1)))) AND (CASE v0.c1  WHEN v0.c3 THEN v0.c3 WHEN v0.c2 THEN t1.c0 WHEN v0.c3 THEN t1.c0 END))) IS TRUE)  as count FROM v0, t0, t1);
SELECT ALL COUNT(*) FROM v0, t0, t1 WHERE (((CASE WHEN t1.c0 THEN v0.c0 ELSE t1.c0 END) BETWEEN ((((v0.c2))<((v0.c1)))) AND (CASE v0.c1  WHEN v0.c3 THEN v0.c3 WHEN v0.c2 THEN t1.c0 WHEN v0.c3 THEN t1.c0 END)));
SELECT * FROM t1 CROSS JOIN t0 ON (((v0.c3)) NOT BETWEEN (((~ ('-353728965')))) AND ((CASE v0.c2  WHEN v0.c0 THEN v0.c0 ELSE v0.c4 END))) RIGHT OUTER JOIN v0 ON (NOT (v0.c1)) WHERE ((('瞺iK46L')GLOB(((v0.c0)==(v0.c4))))) ORDER BY CASE WHEN 0X3d8adaeb THEN ((v0.c1)==(v0.c4)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('瞺iK46L')GLOB(((v0.c0)=(v0.c4))))) IS TRUE)  as count FROM t1 CROSS JOIN t0 ON (((v0.c3)) NOT BETWEEN (((~ ('-353728965')))) AND ((CASE v0.c2  WHEN v0.c0 THEN v0.c0 ELSE v0.c4 END))) RIGHT OUTER JOIN v0 ON (NOT (v0.c1)) ORDER BY CASE WHEN 0X3d8adaeb THEN ((v0.c1)==(v0.c4)) END  NULLS LAST);
SELECT * FROM t1 CROSS JOIN t0 ON (((v0.c3)) NOT BETWEEN (((~ ('-353728965')))) AND ((CASE v0.c2  WHEN v0.c0 THEN v0.c0 ELSE v0.c4 END))) RIGHT OUTER JOIN v0 ON (NOT (v0.c1)) WHERE ((('瞺iK46L')GLOB(((v0.c0)==(v0.c4))))) ORDER BY CASE WHEN 0X3d8adaeb THEN ((v0.c1)==(v0.c4)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('瞺iK46L')GLOB(((v0.c0)=(v0.c4))))) IS TRUE)  as count FROM t1 CROSS JOIN t0 ON (((v0.c3)) NOT BETWEEN (((~ ('-353728965')))) AND ((CASE v0.c2  WHEN v0.c0 THEN v0.c0 ELSE v0.c4 END))) RIGHT OUTER JOIN v0 ON (NOT (v0.c1)) ORDER BY CASE WHEN 0X3d8adaeb THEN ((v0.c1)==(v0.c4)) END  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((((~ (t0.c96)))AND(((((t0.c96)AND(t0.c96)))AND(t0.c96)))))AND((((t0.c96)) NOT BETWEEN ((t0.c96)) AND ((t0.c96)))))) ORDER BY CAST((((t0.c96))==((t0.c96))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((((~ (t0.c96)))AND(((((t0.c96)AND(t0.c96)))AND(t0.c96)))))AND((((t0.c96)) NOT BETWEEN ((t0.c96)) AND ((t0.c96)))))) IS TRUE)  as count FROM t0 ORDER BY CAST((((t0.c96))==((t0.c96))) AS INTEGER));
SELECT ALL * FROM t0 WHERE ((((((~ (t0.c96)))AND(((((t0.c96)AND(t0.c96)))AND(t0.c96)))))AND((((t0.c96)) NOT BETWEEN ((t0.c96)) AND ((t0.c96)))))) ORDER BY CAST((((t0.c96))==((t0.c96))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((((~ (t0.c96)))AND(((((t0.c96)AND(t0.c96)))AND(t0.c96)))))AND((((t0.c96)) NOT BETWEEN ((t0.c96)) AND ((t0.c96)))))) IS TRUE)  as count FROM t0 ORDER BY CAST((((t0.c96))==((t0.c96))) AS INTEGER));
SELECT ALL * FROM t0 WHERE ((((((~ (t0.c96)))AND(((((t0.c96)AND(t0.c96)))AND(t0.c96)))))AND((((t0.c96)) NOT BETWEEN ((t0.c96)) AND ((t0.c96)))))) ORDER BY CAST((((t0.c96))==((t0.c96))) AS INTEGER);
SELECT * FROM t1, v0 INNER JOIN t0 ON (((((v0.c2, v0.c2, t1.c0))<=((v0.c4, v0.c1, ''))))IS NOT(1084459319)) WHERE (((CAST(v0.c2 AS INTEGER))IS(CAST('' AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS INTEGER))IS(CAST('' AS REAL)))) IS TRUE)  as count FROM t1, v0 INNER JOIN t0 ON (((((v0.c2, v0.c2, t1.c0))<=((v0.c4, v0.c1, ''))))IS NOT(1084459319)));
SELECT * FROM t1, v0 INNER JOIN t0 ON (((((v0.c2, v0.c2, t1.c0))<=((v0.c4, v0.c1, ''))))IS NOT(1084459319)) WHERE (((CAST(v0.c2 AS INTEGER))IS(CAST('' AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS INTEGER))IS(CAST('' AS REAL)))) IS TRUE)  as count FROM t1, v0 INNER JOIN t0 ON (((((v0.c2, v0.c2, t1.c0))<=((v0.c4, v0.c1, ''))))IS NOT(1084459319)));
SELECT * FROM t1, v0 INNER JOIN t0 ON (((((v0.c2, v0.c2, t1.c0))<=((v0.c4, v0.c1, ''))))IS NOT(1084459319)) WHERE (((CAST(v0.c2 AS INTEGER))IS(CAST('' AS REAL))));
SELECT * FROM t1, v0, t0 WHERE (CASE WHEN v0.c2 THEN (v0.c3 IN ()) WHEN ((v0.c0)>=(t1.c0)) THEN (- (v0.c2)) WHEN ((v0.c1)||(v0.c3)) THEN (((v0.c0))>((v0.c3))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c2 THEN (v0.c3 IN ()) WHEN ((v0.c0)>=(t1.c0)) THEN (- (v0.c2)) WHEN ((v0.c1)||(v0.c3)) THEN (((v0.c0))>((v0.c3))) END) IS TRUE)  as count FROM t1, v0, t0);
SELECT * FROM t1, v0, t0 WHERE (CASE WHEN v0.c2 THEN (v0.c3 IN ()) WHEN ((v0.c0)>=(t1.c0)) THEN (- (v0.c2)) WHEN ((v0.c1)||(v0.c3)) THEN (((v0.c0))>((v0.c3))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c2 THEN (v0.c3 IN ()) WHEN ((v0.c0)>=(t1.c0)) THEN (- (v0.c2)) WHEN ((v0.c1)||(v0.c3)) THEN (((v0.c0))>((v0.c3))) END) IS TRUE)  as count FROM t1, v0, t0);
SELECT * FROM t1, v0, t0 WHERE (CASE WHEN v0.c2 THEN (v0.c3 IN ()) WHEN ((v0.c0)>=(t1.c0)) THEN (- (v0.c2)) WHEN ((v0.c1)||(v0.c3)) THEN (((v0.c0))>((v0.c3))) END);
SELECT * FROM t1 WHERE ((((t1.c0) NOT NULL) IN ('857199965')));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0) NOT NULL) IN ('857199965'))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c0) NOT NULL) IN ('857199965')));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0) NOT NULL) IN ('857199965'))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c0) NOT NULL) IN ('857199965')));
SELECT * FROM t1 INNER JOIN t0 ON ((((t0.c96)+(t1.c0)))=(((t1.c0) IS FALSE))) WHERE (((((((t0.c96)AND(t0.c96)))AND(t1.c0)))LIKE(((t0.c96) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c96)AND(t0.c96)))AND(t1.c0)))LIKE(((t0.c96) ISNULL)))) IS TRUE)  as count FROM t1 INNER JOIN t0 ON ((((t0.c96)+(t1.c0)))==(((t1.c0) IS FALSE))));
SELECT * FROM t1 INNER JOIN t0 ON ((((t0.c96)+(t1.c0)))=(((t1.c0) IS FALSE))) WHERE (((((((t0.c96)AND(t0.c96)))AND(t1.c0)))LIKE(((t0.c96) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c96)AND(t0.c96)))AND(t1.c0)))LIKE(((t0.c96) ISNULL)))) IS TRUE)  as count FROM t1 INNER JOIN t0 ON ((((t0.c96)+(t1.c0)))==(((t1.c0) IS FALSE))));
SELECT * FROM t1 INNER JOIN t0 ON ((((t0.c96)+(t1.c0)))=(((t1.c0) IS FALSE))) WHERE (((((((t0.c96)AND(t0.c96)))AND(t1.c0)))LIKE(((t0.c96) ISNULL))));
SELECT ALL * FROM t1 WHERE (TRIM(DISTINCT (- (t1.c0)), x''));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (- (t1.c0)), x'')) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (TRIM(DISTINCT (- (t1.c0)), x''));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (- (t1.c0)), x'')) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (TRIM(DISTINCT (- (t1.c0)), x''));
SELECT COUNT(*) FROM v0, t0 WHERE (((((v0.c1)<=(v0.c0))) BETWEEN ('1674399975') AND ((((v0.c1, v0.c0, v0.c3))>((t0.c96, v0.c3, v0.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)<=(v0.c0))) BETWEEN ('1674399975') AND ((((v0.c1, v0.c0, v0.c3))>((t0.c96, v0.c3, v0.c4)))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((((v0.c1)<=(v0.c0))) BETWEEN ('1674399975') AND ((((v0.c1, v0.c0, v0.c3))>((t0.c96, v0.c3, v0.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)<=(v0.c0))) BETWEEN ('1674399975') AND ((((v0.c1, v0.c0, v0.c3))>((t0.c96, v0.c3, v0.c4)))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((((v0.c1)<=(v0.c0))) BETWEEN ('1674399975') AND ((((v0.c1, v0.c0, v0.c3))>((t0.c96, v0.c3, v0.c4))))));
SELECT * FROM v0 WHERE (RTRIM(((((v0.c0)OR(v0.c1)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((((v0.c0)OR(v0.c1)))OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (RTRIM(((((v0.c0)OR(v0.c1)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((((v0.c0)OR(v0.c1)))OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (RTRIM(((((v0.c0)OR(v0.c1)))OR(v0.c0))));
SELECT COUNT(*) FROM v0, t0 WHERE ((NOT (CASE '!['  WHEN v0.c2 THEN v0.c1 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE '!['  WHEN v0.c2 THEN v0.c1 ELSE x'' END))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((NOT (CASE '!['  WHEN v0.c2 THEN v0.c1 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE '!['  WHEN v0.c2 THEN v0.c1 ELSE x'' END))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((NOT (CASE '!['  WHEN v0.c2 THEN v0.c1 ELSE x'' END)));
SELECT ALL COUNT(*) FROM t0, t1 WHERE (((0.18097684996188423 COLLATE RTRIM) NOT NULL)) ORDER BY ((CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN x'' ELSE t0.c96 END)>>(CAST(t0.c96 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.18097684996188423 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM t0, t1 NOT INDEXED ORDER BY ((CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN x'' ELSE t0.c96 END)>>(CAST(t0.c96 AS INTEGER))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (((0.18097684996188423 COLLATE RTRIM) NOT NULL)) ORDER BY ((CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN x'' ELSE t0.c96 END)>>(CAST(t0.c96 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.18097684996188423 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM t0, t1 NOT INDEXED ORDER BY ((CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN x'' ELSE t0.c96 END)>>(CAST(t0.c96 AS INTEGER))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (((0.18097684996188423 COLLATE RTRIM) NOT NULL)) ORDER BY ((CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN x'' ELSE t0.c96 END)>>(CAST(t0.c96 AS INTEGER))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, t1 WHERE (((((((((((t0.c96)OR(t1.c0)))OR(t0.c96)))AND(t1.c0)))OR(t1.c0)))*((~ (t1.c0))))) ORDER BY t0.c96;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c96)OR(t1.c0)))OR(t0.c96)))AND(t1.c0)))OR(t1.c0)))*((~ (t1.c0))))) IS TRUE)  as count FROM t0, t1 ORDER BY t0.c96);
SELECT COUNT(*) FROM t0, t1 WHERE (((((((((((t0.c96)OR(t1.c0)))OR(t0.c96)))AND(t1.c0)))OR(t1.c0)))*((~ (t1.c0))))) ORDER BY t0.c96;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c96)OR(t1.c0)))OR(t0.c96)))AND(t1.c0)))OR(t1.c0)))*((~ (t1.c0))))) IS TRUE)  as count FROM t0, t1 ORDER BY t0.c96);
SELECT COUNT(*) FROM t0, t1 WHERE (((((((((((t0.c96)OR(t1.c0)))OR(t0.c96)))AND(t1.c0)))OR(t1.c0)))*((~ (t1.c0))))) ORDER BY t0.c96;
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(t1.c0 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(t1.c0 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(t1.c0 AS NUMERIC) COLLATE NOCASE);
SELECT ALL * FROM t1 WHERE (((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0))) NOT BETWEEN (((t1.c0) NOT NULL)) AND (CAST(t1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0))) NOT BETWEEN (((t1.c0) NOT NULL)) AND (CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0))) NOT BETWEEN (((t1.c0) NOT NULL)) AND (CAST(t1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0))) NOT BETWEEN (((t1.c0) NOT NULL)) AND (CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0))) NOT BETWEEN (((t1.c0) NOT NULL)) AND (CAST(t1.c0 AS BLOB))));
SELECT COUNT(*) FROM v0 WHERE (CAST((v0.c1 IN ()) AS INTEGER)) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((x'')<(v0.c3)) WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c0)) THEN ((v0.c0) BETWEEN (v0.c4) AND (v0.c4)) WHEN ('0.7777594121191346' IN ()) THEN RTRIM(v0.c2) ELSE (v0.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((x'')<(v0.c3)) WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c0)) THEN ((v0.c0) BETWEEN (v0.c4) AND (v0.c4)) WHEN ('0.7777594121191346' IN ()) THEN RTRIM(v0.c2) ELSE (v0.c0 IN ()) END  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST((v0.c1 IN ()) AS INTEGER)) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((x'')<(v0.c3)) WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c0)) THEN ((v0.c0) BETWEEN (v0.c4) AND (v0.c4)) WHEN ('0.7777594121191346' IN ()) THEN RTRIM(v0.c2) ELSE (v0.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((x'')<(v0.c3)) WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c0)) THEN ((v0.c0) BETWEEN (v0.c4) AND (v0.c4)) WHEN ('0.7777594121191346' IN ()) THEN RTRIM(v0.c2) ELSE (v0.c0 IN ()) END  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST((v0.c1 IN ()) AS INTEGER)) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN ((x'')<(v0.c3)) WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c0)) THEN ((v0.c0) BETWEEN (v0.c4) AND (v0.c4)) WHEN ('0.7777594121191346' IN ()) THEN RTRIM(v0.c2) ELSE (v0.c0 IN ()) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (v0.c3) ORDER BY v0.c2 DESC  NULLS FIRST, ((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END) NOT BETWEEN (((v0.c2)*(v0.c1))) AND (0x6c859b2f))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c3) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c2 DESC  NULLS FIRST, ((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END) NOT BETWEEN (((v0.c2)*(v0.c1))) AND (0X6c859b2f))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (v0.c3) ORDER BY v0.c2 DESC  NULLS FIRST, ((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END) NOT BETWEEN (((v0.c2)*(v0.c1))) AND (0x6c859b2f))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c3) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c2 DESC  NULLS FIRST, ((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END) NOT BETWEEN (((v0.c2)*(v0.c1))) AND (0X6c859b2f))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (v0.c3) ORDER BY v0.c2 DESC  NULLS FIRST, ((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END) NOT BETWEEN (((v0.c2)*(v0.c1))) AND (0x6c859b2f))  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((((CAST(t1.c0 AS TEXT), LIKELIHOOD(t1.c0, 0.3785697127868072), ((t1.c0) NOT NULL)))==(((0.13644238349983107 IN (t1.c0)), CASE t1.c0  WHEN NULL THEN t1.c0 WHEN t1.c0 THEN 0X731e7523 WHEN t1.c0 THEN t1.c0 END, (NOT ('11060720'))))));
SELECT SUM(count) FROM (SELECT (((((CAST(t1.c0 AS TEXT), LIKELIHOOD(t1.c0, 0.3785697127868072), ((t1.c0) NOT NULL)))==(((0.13644238349983107 IN (t1.c0)), CASE t1.c0  WHEN NULL THEN t1.c0 WHEN t1.c0 THEN 0x731e7523 WHEN t1.c0 THEN t1.c0 END, (NOT ('11060720')))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((CAST(t1.c0 AS TEXT), LIKELIHOOD(t1.c0, 0.3785697127868072), ((t1.c0) NOT NULL)))==(((0.13644238349983107 IN (t1.c0)), CASE t1.c0  WHEN NULL THEN t1.c0 WHEN t1.c0 THEN 0X731e7523 WHEN t1.c0 THEN t1.c0 END, (NOT ('11060720'))))));
SELECT SUM(count) FROM (SELECT (((((CAST(t1.c0 AS TEXT), LIKELIHOOD(t1.c0, 0.3785697127868072), ((t1.c0) NOT NULL)))==(((0.13644238349983107 IN (t1.c0)), CASE t1.c0  WHEN NULL THEN t1.c0 WHEN t1.c0 THEN 0x731e7523 WHEN t1.c0 THEN t1.c0 END, (NOT ('11060720')))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((CAST(t1.c0 AS TEXT), LIKELIHOOD(t1.c0, 0.3785697127868072), ((t1.c0) NOT NULL)))==(((0.13644238349983107 IN (t1.c0)), CASE t1.c0  WHEN NULL THEN t1.c0 WHEN t1.c0 THEN 0X731e7523 WHEN t1.c0 THEN t1.c0 END, (NOT ('11060720'))))));
SELECT * FROM t0, t1 INNER JOIN v0 ON (((((NULL IN ()))AND(v0.c4)))AND(((((v0.c2)AND(v0.c3)))OR(t1.c0)))) WHERE ((((v0.c0, t1.c0, t1.c0)) BETWEEN (((v0.c2 IN (v0.c0, 0.987063431639329)), ((NULL)<(v0.c2)), v0.c4)) AND ((((t1.c0) IS TRUE), t0.c96, ((v0.c3)-(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, t1.c0, t1.c0)) BETWEEN (((v0.c2 IN (v0.c0, 0.987063431639329)), ((NULL)<(v0.c2)), v0.c4)) AND ((((t1.c0) IS TRUE), t0.c96, ((v0.c3)-(v0.c0)))))) IS TRUE)  as count FROM t0, t1 INNER JOIN v0 ON (((((NULL IN ()))AND(v0.c4)))AND(((((v0.c2)AND(v0.c3)))OR(t1.c0)))));
SELECT * FROM t0, t1 INNER JOIN v0 ON (((((NULL IN ()))AND(v0.c4)))AND(((((v0.c2)AND(v0.c3)))OR(t1.c0)))) WHERE ((((v0.c0, t1.c0, t1.c0)) BETWEEN (((v0.c2 IN (v0.c0, 0.987063431639329)), ((NULL)<(v0.c2)), v0.c4)) AND ((((t1.c0) IS TRUE), t0.c96, ((v0.c3)-(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, t1.c0, t1.c0)) BETWEEN (((v0.c2 IN (v0.c0, 0.987063431639329)), ((NULL)<(v0.c2)), v0.c4)) AND ((((t1.c0) IS TRUE), t0.c96, ((v0.c3)-(v0.c0)))))) IS TRUE)  as count FROM t0, t1 INNER JOIN v0 ON (((((NULL IN ()))AND(v0.c4)))AND(((((v0.c2)AND(v0.c3)))OR(t1.c0)))));
SELECT * FROM t0, t1 INNER JOIN v0 ON (((((NULL IN ()))AND(v0.c4)))AND(((((v0.c2)AND(v0.c3)))OR(t1.c0)))) WHERE ((((v0.c0, t1.c0, t1.c0)) BETWEEN (((v0.c2 IN (v0.c0, 0.987063431639329)), ((NULL)<(v0.c2)), v0.c4)) AND ((((t1.c0) IS TRUE), t0.c96, ((v0.c3)-(v0.c0))))));
SELECT ALL COUNT(*) FROM t1, v0, t0 WHERE (((((((v0.c3)AND(v0.c2)))AND(0X28ffe52a))) NOT BETWEEN (((4.16123927E8)<<(v0.c3))) AND ((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c3)AND(v0.c2)))AND(0X28ffe52a))) NOT BETWEEN (((4.16123927E8)<<(v0.c3))) AND ((v0.c1 IN ())))) IS TRUE)  as count FROM t1, v0, t0);
SELECT ALL COUNT(*) FROM t1, v0, t0 WHERE (((((((v0.c3)AND(v0.c2)))AND(0X28ffe52a))) NOT BETWEEN (((4.16123927E8)<<(v0.c3))) AND ((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c3)AND(v0.c2)))AND(0X28ffe52a))) NOT BETWEEN (((4.16123927E8)<<(v0.c3))) AND ((v0.c1 IN ())))) IS TRUE)  as count FROM t1, v0, t0);
SELECT ALL COUNT(*) FROM t1, v0, t0 WHERE (((((((v0.c3)AND(v0.c2)))AND(0X28ffe52a))) NOT BETWEEN (((4.16123927E8)<<(v0.c3))) AND ((v0.c1 IN ()))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON (((v0.c0)) NOT BETWEEN (((NOT (v0.c2)))) AND ((((t0.c96)<(v0.c1))))) WHERE ((((t0.c96, t0.c96, v0.c1)) NOT BETWEEN ((((((((((v0.c3)OR(v0.c0)))AND(x'aa7c')))AND(v0.c4)))OR(v0.c0)), v0.c2 COLLATE RTRIM, (((('e}뻃')AND(v0.c1)))AND(NULL)))) AND ((v0.c1 COLLATE RTRIM, ((v0.c1)IS NOT(v0.c0)), v0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((t0.c96, t0.c96, v0.c1)) NOT BETWEEN ((((((((((v0.c3)OR(v0.c0)))AND(x'aa7c')))AND(v0.c4)))OR(v0.c0)), v0.c2 COLLATE RTRIM, (((('e}뻃')AND(v0.c1)))AND(NULL)))) AND ((v0.c1 COLLATE RTRIM, ((v0.c1)IS NOT(v0.c0)), v0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON (((v0.c0)) NOT BETWEEN (((NOT (v0.c2)))) AND ((((t0.c96)<(v0.c1))))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON (((v0.c0)) NOT BETWEEN (((NOT (v0.c2)))) AND ((((t0.c96)<(v0.c1))))) WHERE ((((t0.c96, t0.c96, v0.c1)) NOT BETWEEN ((((((((((v0.c3)OR(v0.c0)))AND(x'aa7c')))AND(v0.c4)))OR(v0.c0)), v0.c2 COLLATE RTRIM, (((('e}뻃')AND(v0.c1)))AND(NULL)))) AND ((v0.c1 COLLATE RTRIM, ((v0.c1)IS NOT(v0.c0)), v0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((t0.c96, t0.c96, v0.c1)) NOT BETWEEN ((((((((((v0.c3)OR(v0.c0)))AND(x'aa7c')))AND(v0.c4)))OR(v0.c0)), v0.c2 COLLATE RTRIM, (((('e}뻃')AND(v0.c1)))AND(NULL)))) AND ((v0.c1 COLLATE RTRIM, ((v0.c1)IS NOT(v0.c0)), v0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON (((v0.c0)) NOT BETWEEN (((NOT (v0.c2)))) AND ((((t0.c96)<(v0.c1))))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON (((v0.c0)) NOT BETWEEN (((NOT (v0.c2)))) AND ((((t0.c96)<(v0.c1))))) WHERE ((((t0.c96, t0.c96, v0.c1)) NOT BETWEEN ((((((((((v0.c3)OR(v0.c0)))AND(x'aa7c')))AND(v0.c4)))OR(v0.c0)), v0.c2 COLLATE RTRIM, (((('e}뻃')AND(v0.c1)))AND(NULL)))) AND ((v0.c1 COLLATE RTRIM, ((v0.c1)IS NOT(v0.c0)), v0.c2 COLLATE NOCASE))));
SELECT * FROM t1, t0 WHERE ((((t0.c96)+(t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c96)+(t1.c0)) IN ())) IS TRUE)  as count FROM t1, t0);
SELECT * FROM t1, t0 WHERE ((((t0.c96)+(t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c96)+(t1.c0)) IN ())) IS TRUE)  as count FROM t1, t0);
SELECT * FROM t1, t0 WHERE ((((t0.c96)+(t1.c0)) IN ()));
SELECT COUNT(*) FROM v0, t0, t1 WHERE (((((v0.c1)AND(v0.c2)))OR(v0.c4)) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)AND(v0.c2)))OR(v0.c4)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, t1);
SELECT COUNT(*) FROM v0, t0, t1 WHERE (((((v0.c1)AND(v0.c2)))OR(v0.c4)) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)AND(v0.c2)))OR(v0.c4)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, t1);
SELECT COUNT(*) FROM v0, t0, t1 WHERE (((((v0.c1)AND(v0.c2)))OR(v0.c4)) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON ((((v0.c2)IS NOT(t0.c96)))/((((v0.c4, v0.c3, v0.c0))=((v0.c2, t0.c96, v0.c4))))) WHERE ((~ (((v0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c1) NOT NULL)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((((v0.c2)IS NOT(t0.c96)))/((((v0.c4, v0.c3, v0.c0))==((v0.c2, t0.c96, v0.c4))))));
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON ((((v0.c2)IS NOT(t0.c96)))/((((v0.c4, v0.c3, v0.c0))=((v0.c2, t0.c96, v0.c4))))) WHERE ((~ (((v0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c1) NOT NULL)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((((v0.c2)IS NOT(t0.c96)))/((((v0.c4, v0.c3, v0.c0))==((v0.c2, t0.c96, v0.c4))))));
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON ((((v0.c2)IS NOT(t0.c96)))/((((v0.c4, v0.c3, v0.c0))=((v0.c2, t0.c96, v0.c4))))) WHERE ((~ (((v0.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM t1, v0 WHERE ((((v0.c1)*(t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c1)*(t1.c0)) IN ())) IS TRUE)  as count FROM t1, v0);
SELECT ALL COUNT(*) FROM t1, v0 WHERE ((((v0.c1)*(t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c1)*(t1.c0)) IN ())) IS TRUE)  as count FROM t1, v0);
SELECT ALL COUNT(*) FROM t1, v0 WHERE ((((v0.c1)*(t1.c0)) IN ()));
SELECT ALL * FROM t1, t0 WHERE (((CAST(t0.c96 AS NUMERIC)) ISNULL)) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c96 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM t1, t0 ORDER BY t1.c0);
SELECT ALL * FROM t1, t0 WHERE (((CAST(t0.c96 AS NUMERIC)) ISNULL)) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c96 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM t1, t0 ORDER BY t1.c0);
SELECT ALL * FROM t1, t0 WHERE (((CAST(t0.c96 AS NUMERIC)) ISNULL)) ORDER BY t1.c0;
SELECT COUNT(*) FROM t1 WHERE (0.07002686494587407) ORDER BY ((((t1.c0)-(t1.c0))) NOTNULL) ASC  NULLS FIRST, (((t1.c0 IN (t1.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.07002686494587407) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)-(t1.c0))) NOTNULL) ASC  NULLS FIRST, (((t1.c0 IN (t1.c0))) NOT NULL) ASC);
SELECT COUNT(*) FROM t1 WHERE (0.07002686494587407) ORDER BY ((((t1.c0)-(t1.c0))) NOTNULL) ASC  NULLS FIRST, (((t1.c0 IN (t1.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.07002686494587407) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)-(t1.c0))) NOTNULL) ASC  NULLS FIRST, (((t1.c0 IN (t1.c0))) NOT NULL) ASC);
SELECT COUNT(*) FROM t1 WHERE (0.07002686494587407) ORDER BY ((((t1.c0)-(t1.c0))) NOTNULL) ASC  NULLS FIRST, (((t1.c0 IN (t1.c0))) NOT NULL) ASC;
SELECT ALL * FROM t0, v0, t1 WHERE (CAST(CASE v0.c4  WHEN v0.c1 THEN v0.c4 END AS NUMERIC)) ORDER BY ((((((((t0.c96)OR(v0.c3)))AND(v0.c1)))OR(TRIM(',KX4S?J'))))AND((v0.c2 IN ())))  NULLS LAST, (((v0.c2 IN ())) BETWEEN (CAST(t0.c96 AS BLOB)) AND (v0.c1 COLLATE RTRIM)) DESC  NULLS LAST, (NOT (x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE v0.c4  WHEN v0.c1 THEN v0.c4 END AS NUMERIC)) IS TRUE)  as count FROM t0, v0, t1 ORDER BY ((((((((t0.c96)OR(v0.c3)))AND(v0.c1)))OR(TRIM(',KX4S?J'))))AND((v0.c2 IN ())))  NULLS LAST, (((v0.c2 IN ())) BETWEEN (CAST(t0.c96 AS BLOB)) AND (v0.c1 COLLATE RTRIM)) DESC  NULLS LAST, (NOT (x'')) ASC);
SELECT ALL * FROM t0, v0, t1 WHERE (CAST(CASE v0.c4  WHEN v0.c1 THEN v0.c4 END AS NUMERIC)) ORDER BY ((((((((t0.c96)OR(v0.c3)))AND(v0.c1)))OR(TRIM(',KX4S?J'))))AND((v0.c2 IN ())))  NULLS LAST, (((v0.c2 IN ())) BETWEEN (CAST(t0.c96 AS BLOB)) AND (v0.c1 COLLATE RTRIM)) DESC  NULLS LAST, (NOT (x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE v0.c4  WHEN v0.c1 THEN v0.c4 END AS NUMERIC)) IS TRUE)  as count FROM t0, v0, t1 ORDER BY ((((((((t0.c96)OR(v0.c3)))AND(v0.c1)))OR(TRIM(',KX4S?J'))))AND((v0.c2 IN ())))  NULLS LAST, (((v0.c2 IN ())) BETWEEN (CAST(t0.c96 AS BLOB)) AND (v0.c1 COLLATE RTRIM)) DESC  NULLS LAST, (NOT (x'')) ASC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c96 IN ())) NOT NULL) RIGHT OUTER JOIN t1 ON (('') BETWEEN (((v0.c1)AND(t1.c0))) AND (((v0.c4) BETWEEN (t0.c96) AND (v0.c0)))) WHERE ((NOT ((- (v0.c4)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (v0.c4))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c96 IN ())) NOT NULL) RIGHT OUTER JOIN t1 ON (('') BETWEEN (((v0.c1)AND(t1.c0))) AND (((v0.c4) BETWEEN (t0.c96) AND (v0.c0)))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c96 IN ())) NOT NULL) RIGHT OUTER JOIN t1 ON (('') BETWEEN (((v0.c1)AND(t1.c0))) AND (((v0.c4) BETWEEN (t0.c96) AND (v0.c0)))) WHERE ((NOT ((- (v0.c4)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (v0.c4))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c96 IN ())) NOT NULL) RIGHT OUTER JOIN t1 ON (('') BETWEEN (((v0.c1)AND(t1.c0))) AND (((v0.c4) BETWEEN (t0.c96) AND (v0.c0)))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c96 IN ())) NOT NULL) RIGHT OUTER JOIN t1 ON (('') BETWEEN (((v0.c1)AND(t1.c0))) AND (((v0.c4) BETWEEN (t0.c96) AND (v0.c0)))) WHERE ((NOT ((- (v0.c4)))));
SELECT * FROM v0, t0, t1 WHERE (COALESCE(((v0.c2) BETWEEN (v0.c0) AND (v0.c1)), ((v0.c1)|(v0.c3)))) ORDER BY (~ (t0.c96));
SELECT SUM(count) FROM (SELECT ((COALESCE(((v0.c2) BETWEEN (v0.c0) AND (v0.c1)), ((v0.c1)|(v0.c3)))) IS TRUE)  as count FROM v0, t0, t1 ORDER BY (~ (t0.c96)));
SELECT * FROM v0, t0, t1 WHERE (COALESCE(((v0.c2) BETWEEN (v0.c0) AND (v0.c1)), ((v0.c1)|(v0.c3)))) ORDER BY (~ (t0.c96));
SELECT SUM(count) FROM (SELECT ((COALESCE(((v0.c2) BETWEEN (v0.c0) AND (v0.c1)), ((v0.c1)|(v0.c3)))) IS TRUE)  as count FROM v0, t0, t1 ORDER BY (~ (t0.c96)));
SELECT * FROM v0, t0, t1 WHERE (COALESCE(((v0.c2) BETWEEN (v0.c0) AND (v0.c1)), ((v0.c1)|(v0.c3)))) ORDER BY (~ (t0.c96));
SELECT COUNT(*) FROM t1, v0 WHERE (ABS(DISTINCT CAST(v0.c3 AS NUMERIC))) ORDER BY ((UNICODE(v0.c2)) NOT BETWEEN (((v0.c1) BETWEEN (v0.c4) AND (t1.c0))) AND (v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT CAST(v0.c3 AS NUMERIC))) IS TRUE)  as count FROM t1, v0 ORDER BY ((UNICODE(v0.c2)) NOT BETWEEN (((v0.c1) BETWEEN (v0.c4) AND (t1.c0))) AND (v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, v0 WHERE (ABS(DISTINCT CAST(v0.c3 AS NUMERIC))) ORDER BY ((UNICODE(v0.c2)) NOT BETWEEN (((v0.c1) BETWEEN (v0.c4) AND (t1.c0))) AND (v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT CAST(v0.c3 AS NUMERIC))) IS TRUE)  as count FROM t1, v0 ORDER BY ((UNICODE(v0.c2)) NOT BETWEEN (((v0.c1) BETWEEN (v0.c4) AND (t1.c0))) AND (v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, v0 WHERE (ABS(DISTINCT CAST(v0.c3 AS NUMERIC))) ORDER BY ((UNICODE(v0.c2)) NOT BETWEEN (((v0.c1) BETWEEN (v0.c4) AND (t1.c0))) AND (v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT ALL * FROM t1 FULL OUTER JOIN v0 ON (((t1.c0 IN (v0.c2)))!=(((t0.c96)>>(v0.c0)))) FULL OUTER JOIN t0 ON (~ (((t0.c96) BETWEEN (t0.c96) AND (v0.c2)))) WHERE (2.078594503E9) ORDER BY ((t1.c0)=(v0.c2)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((2.078594503E9) IS TRUE)  as count FROM t1 FULL OUTER JOIN v0 ON (((t1.c0 IN (v0.c2)))!=(((t0.c96)>>(v0.c0)))) FULL OUTER JOIN t0 ON (~ (((t0.c96) BETWEEN (t0.c96) AND (v0.c2)))) ORDER BY ((t1.c0)==(v0.c2)) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM t1 FULL OUTER JOIN v0 ON (((t1.c0 IN (v0.c2)))!=(((t0.c96)>>(v0.c0)))) FULL OUTER JOIN t0 ON (~ (((t0.c96) BETWEEN (t0.c96) AND (v0.c2)))) WHERE (2.078594503E9) ORDER BY ((t1.c0)=(v0.c2)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((2.078594503E9) IS TRUE)  as count FROM t1 FULL OUTER JOIN v0 ON (((t1.c0 IN (v0.c2)))!=(((t0.c96)>>(v0.c0)))) FULL OUTER JOIN t0 ON (~ (((t0.c96) BETWEEN (t0.c96) AND (v0.c2)))) ORDER BY ((t1.c0)==(v0.c2)) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM t1, v0 NATURAL JOIN t0 WHERE (json(CAST(v0.c3 AS TEXT))) ORDER BY v0.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json(CAST(v0.c3 AS TEXT))) IS TRUE)  as count FROM t1, v0 NATURAL JOIN t0 ORDER BY v0.c4  NULLS LAST);
SELECT * FROM t1, v0 NATURAL JOIN t0 WHERE (json(CAST(v0.c3 AS TEXT))) ORDER BY v0.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json(CAST(v0.c3 AS TEXT))) IS TRUE)  as count FROM t1, v0 NATURAL JOIN t0 ORDER BY v0.c4  NULLS LAST);
SELECT * FROM t1, v0 NATURAL JOIN t0 WHERE (json(CAST(v0.c3 AS TEXT))) ORDER BY v0.c4  NULLS LAST;
SELECT COUNT(*) FROM v0, t0, t1 WHERE ((((((- (t0.c96)))AND(((v0.c3) NOTNULL))))OR(((v0.c3)>>(-9223372036854775808))))) ORDER BY (((((v0.c1, t0.c96, t0.c96)) BETWEEN ((v0.c1, v0.c1, x'92ad')) AND ((v0.c0, t1.c0, v0.c4))))<>(v0.c4));
SELECT SUM(count) FROM (SELECT ALL (((((((- (t0.c96)))AND(((v0.c3) NOTNULL))))OR(((v0.c3)>>(-9223372036854775808))))) IS TRUE)  as count FROM v0, t0, t1 ORDER BY (((((v0.c1, t0.c96, t0.c96)) BETWEEN ((v0.c1, v0.c1, x'92ad')) AND ((v0.c0, t1.c0, v0.c4))))<>(v0.c4)));
SELECT COUNT(*) FROM v0, t0, t1 WHERE ((((((- (t0.c96)))AND(((v0.c3) NOTNULL))))OR(((v0.c3)>>(-9223372036854775808))))) ORDER BY (((((v0.c1, t0.c96, t0.c96)) BETWEEN ((v0.c1, v0.c1, x'92ad')) AND ((v0.c0, t1.c0, v0.c4))))<>(v0.c4));
SELECT SUM(count) FROM (SELECT ALL (((((((- (t0.c96)))AND(((v0.c3) NOTNULL))))OR(((v0.c3)>>(-9223372036854775808))))) IS TRUE)  as count FROM v0, t0, t1 ORDER BY (((((v0.c1, t0.c96, t0.c96)) BETWEEN ((v0.c1, v0.c1, x'92ad')) AND ((v0.c0, t1.c0, v0.c4))))<>(v0.c4)));
SELECT COUNT(*) FROM v0, t0, t1 WHERE ((((((- (t0.c96)))AND(((v0.c3) NOTNULL))))OR(((v0.c3)>>(-9223372036854775808))))) ORDER BY (((((v0.c1, t0.c96, t0.c96)) BETWEEN ((v0.c1, v0.c1, x'92ad')) AND ((v0.c0, t1.c0, v0.c4))))<>(v0.c4));
SELECT * FROM v0, t0 WHERE (((((((v0.c0)OR(v0.c2)))OR(v0.c4)))<(((v0.c2)>>(0X70abefd4)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(v0.c2)))OR(v0.c4)))<(((v0.c2)>>(0X70abefd4))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((((v0.c0)OR(v0.c2)))OR(v0.c4)))<(((v0.c2)>>(0X70abefd4)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(v0.c2)))OR(v0.c4)))<(((v0.c2)>>(0X70abefd4))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((((v0.c0)OR(v0.c2)))OR(v0.c4)))<(((v0.c2)>>(0X70abefd4)))));
SELECT ALL COUNT(*) FROM t0, t1 WHERE (CAST(((t0.c96)-(t0.c96)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c96)-(t0.c96)) AS TEXT)) IS TRUE)  as count FROM t0, t1);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (CAST(((t0.c96)-(t0.c96)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c96)-(t0.c96)) AS TEXT)) IS TRUE)  as count FROM t0, t1);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (CAST(((t0.c96)-(t0.c96)) AS TEXT));
SELECT * FROM t0 WHERE (0.9287794990509716) ORDER BY CASE t0.c96  WHEN ((t0.c96) NOTNULL) THEN ((NULL)/(t0.c96)) WHEN CAST(t0.c96 AS INTEGER) THEN t0.c96 WHEN CAST(t0.c96 AS REAL) THEN ((t0.c96) BETWEEN (t0.c96) AND (t0.c96)) ELSE (('-353728965') NOTNULL) END DESC, 0.3200375448439  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.9287794990509716) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c96  WHEN ((t0.c96) NOTNULL) THEN ((NULL)/(t0.c96)) WHEN CAST(t0.c96 AS INTEGER) THEN t0.c96 WHEN CAST(t0.c96 AS REAL) THEN ((t0.c96) BETWEEN (t0.c96) AND (t0.c96)) ELSE (('-353728965') NOTNULL) END DESC, 0.3200375448439  NULLS FIRST);
SELECT * FROM t0 WHERE (0.9287794990509716) ORDER BY CASE t0.c96  WHEN ((t0.c96) NOTNULL) THEN ((NULL)/(t0.c96)) WHEN CAST(t0.c96 AS INTEGER) THEN t0.c96 WHEN CAST(t0.c96 AS REAL) THEN ((t0.c96) BETWEEN (t0.c96) AND (t0.c96)) ELSE (('-353728965') NOTNULL) END DESC, 0.3200375448439  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.9287794990509716) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c96  WHEN ((t0.c96) NOTNULL) THEN ((NULL)/(t0.c96)) WHEN CAST(t0.c96 AS INTEGER) THEN t0.c96 WHEN CAST(t0.c96 AS REAL) THEN ((t0.c96) BETWEEN (t0.c96) AND (t0.c96)) ELSE (('-353728965') NOTNULL) END DESC, 0.3200375448439  NULLS FIRST);
SELECT * FROM t0 WHERE (0.9287794990509716) ORDER BY CASE t0.c96  WHEN ((t0.c96) NOTNULL) THEN ((NULL)/(t0.c96)) WHEN CAST(t0.c96 AS INTEGER) THEN t0.c96 WHEN CAST(t0.c96 AS REAL) THEN ((t0.c96) BETWEEN (t0.c96) AND (t0.c96)) ELSE (('-353728965') NOTNULL) END DESC, 0.3200375448439  NULLS FIRST;
SELECT ALL * FROM t0 INDEXED BY i42 NATURAL JOIN t1 WHERE (LIKELY(((((t1.c0)OR(t0.c96)))AND(t0.c96)))) ORDER BY UNLIKELY(((t1.c0) NOT BETWEEN (t0.c96) AND (t1.c0))), CASE WHEN (~ (t1.c0)) THEN ((t0.c96)%(t0.c96)) WHEN t0.c96 THEN ((((t1.c0)OR(t0.c96)))AND(t1.c0)) WHEN t1.c0 THEN ((t1.c0) NOTNULL) WHEN ((t1.c0)>=(t0.c96)) THEN CAST(t1.c0 AS REAL) WHEN CAST(t1.c0 AS REAL) THEN (((t1.c0)) BETWEEN ((NULL)) AND ((t1.c0))) ELSE -736985236 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((t1.c0)OR(t0.c96)))AND(t0.c96)))) IS TRUE)  as count FROM t0 INDEXED BY i42 NATURAL JOIN t1 ORDER BY UNLIKELY(((t1.c0) NOT BETWEEN (t0.c96) AND (t1.c0))), CASE WHEN (~ (t1.c0)) THEN ((t0.c96)%(t0.c96)) WHEN t0.c96 THEN ((((t1.c0)OR(t0.c96)))AND(t1.c0)) WHEN t1.c0 THEN ((t1.c0) NOTNULL) WHEN ((t1.c0)>=(t0.c96)) THEN CAST(t1.c0 AS REAL) WHEN CAST(t1.c0 AS REAL) THEN (((t1.c0)) BETWEEN ((NULL)) AND ((t1.c0))) ELSE -736985236 END  NULLS FIRST);
SELECT ALL * FROM t0 INDEXED BY i42 NATURAL JOIN t1 WHERE (LIKELY(((((t1.c0)OR(t0.c96)))AND(t0.c96)))) ORDER BY UNLIKELY(((t1.c0) NOT BETWEEN (t0.c96) AND (t1.c0))), CASE WHEN (~ (t1.c0)) THEN ((t0.c96)%(t0.c96)) WHEN t0.c96 THEN ((((t1.c0)OR(t0.c96)))AND(t1.c0)) WHEN t1.c0 THEN ((t1.c0) NOTNULL) WHEN ((t1.c0)>=(t0.c96)) THEN CAST(t1.c0 AS REAL) WHEN CAST(t1.c0 AS REAL) THEN (((t1.c0)) BETWEEN ((NULL)) AND ((t1.c0))) ELSE -736985236 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((t1.c0)OR(t0.c96)))AND(t0.c96)))) IS TRUE)  as count FROM t0 INDEXED BY i42 NATURAL JOIN t1 ORDER BY UNLIKELY(((t1.c0) NOT BETWEEN (t0.c96) AND (t1.c0))), CASE WHEN (~ (t1.c0)) THEN ((t0.c96)%(t0.c96)) WHEN t0.c96 THEN ((((t1.c0)OR(t0.c96)))AND(t1.c0)) WHEN t1.c0 THEN ((t1.c0) NOTNULL) WHEN ((t1.c0)>=(t0.c96)) THEN CAST(t1.c0 AS REAL) WHEN CAST(t1.c0 AS REAL) THEN (((t1.c0)) BETWEEN ((NULL)) AND ((t1.c0))) ELSE -736985236 END  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (CAST((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0))) AS BLOB)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0))) AS BLOB)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST((((t1.c0, t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0))) AS BLOB));
SELECT COUNT(*) FROM v0, t0, t1 WHERE (CAST((((0.33089384136417155)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((0.33089384136417155)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) AS REAL)) IS TRUE)  as count FROM v0, t0, t1);
SELECT COUNT(*) FROM v0, t0, t1 WHERE (CAST((((0.33089384136417155)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((0.33089384136417155)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) AS REAL)) IS TRUE)  as count FROM v0, t0, t1);
SELECT COUNT(*) FROM v0, t0, t1 WHERE (CAST((((0.33089384136417155)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) AS REAL));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c1)IS NOT(v0.c0))) NOT BETWEEN ((('')||(NULL))) AND (((v0.c3) BETWEEN (v0.c3) AND (t0.c96)))) WHERE ((((t0.c96)) NOT BETWEEN ((CASE v0.c1  WHEN v0.c3 THEN v0.c0 ELSE v0.c4 END)) AND ((rtreenode(v0.c1, v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((t0.c96)) NOT BETWEEN ((CASE v0.c1  WHEN v0.c3 THEN v0.c0 ELSE v0.c4 END)) AND ((rtreenode(v0.c1, v0.c1))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c1)IS NOT(v0.c0))) NOT BETWEEN ((('')||(NULL))) AND (((v0.c3) BETWEEN (v0.c3) AND (t0.c96)))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c1)IS NOT(v0.c0))) NOT BETWEEN ((('')||(NULL))) AND (((v0.c3) BETWEEN (v0.c3) AND (t0.c96)))) WHERE ((((t0.c96)) NOT BETWEEN ((CASE v0.c1  WHEN v0.c3 THEN v0.c0 ELSE v0.c4 END)) AND ((rtreenode(v0.c1, v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((t0.c96)) NOT BETWEEN ((CASE v0.c1  WHEN v0.c3 THEN v0.c0 ELSE v0.c4 END)) AND ((rtreenode(v0.c1, v0.c1))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c1)IS NOT(v0.c0))) NOT BETWEEN ((('')||(NULL))) AND (((v0.c3) BETWEEN (v0.c3) AND (t0.c96)))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c1)IS NOT(v0.c0))) NOT BETWEEN ((('')||(NULL))) AND (((v0.c3) BETWEEN (v0.c3) AND (t0.c96)))) WHERE ((((t0.c96)) NOT BETWEEN ((CASE v0.c1  WHEN v0.c3 THEN v0.c0 ELSE v0.c4 END)) AND ((rtreenode(v0.c1, v0.c1)))));
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c1 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c1 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c1 COLLATE BINARY) NOT NULL));
SELECT COUNT(*) FROM t0 WHERE (((TRIM(t0.c96, t0.c96))AND(t0.c96))) ORDER BY CASE COALESCE(DISTINCT t0.c96, t0.c96)  WHEN ((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)) THEN ((('', t0.c96, t0.c96)) NOT BETWEEN ((t0.c96, t0.c96, '1683964561')) AND ((t0.c96, t0.c96, t0.c96))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(t0.c96, t0.c96))AND(t0.c96))) IS TRUE)  as count FROM t0 ORDER BY CASE COALESCE(DISTINCT t0.c96, t0.c96)  WHEN ((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)) THEN ((('', t0.c96, t0.c96)) NOT BETWEEN ((t0.c96, t0.c96, '1683964561')) AND ((t0.c96, t0.c96, t0.c96))) END DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((TRIM(t0.c96, t0.c96))AND(t0.c96))) ORDER BY CASE COALESCE(DISTINCT t0.c96, t0.c96)  WHEN ((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)) THEN ((('', t0.c96, t0.c96)) NOT BETWEEN ((t0.c96, t0.c96, '1683964561')) AND ((t0.c96, t0.c96, t0.c96))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(t0.c96, t0.c96))AND(t0.c96))) IS TRUE)  as count FROM t0 ORDER BY CASE COALESCE(DISTINCT t0.c96, t0.c96)  WHEN ((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)) THEN ((('', t0.c96, t0.c96)) NOT BETWEEN ((t0.c96, t0.c96, '1683964561')) AND ((t0.c96, t0.c96, t0.c96))) END DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((TRIM(t0.c96, t0.c96))AND(t0.c96))) ORDER BY CASE COALESCE(DISTINCT t0.c96, t0.c96)  WHEN ((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)) THEN ((('', t0.c96, t0.c96)) NOT BETWEEN ((t0.c96, t0.c96, '1683964561')) AND ((t0.c96, t0.c96, t0.c96))) END DESC  NULLS LAST;
SELECT * FROM t0, t1 CROSS JOIN v0 ON ((v0.c2) IS FALSE) COLLATE RTRIM WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM t0, t1 CROSS JOIN v0 ON ((v0.c2) IS FALSE) COLLATE RTRIM);
SELECT * FROM t0, t1 CROSS JOIN v0 ON ((v0.c2) IS FALSE) COLLATE RTRIM WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM t0, t1 CROSS JOIN v0 ON ((v0.c2) IS FALSE) COLLATE RTRIM);
SELECT * FROM t0, t1 CROSS JOIN v0 ON ((v0.c2) IS FALSE) COLLATE RTRIM WHERE (v0.c2);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN t1 ON MIN(((v0.c1)*(t1.c0)), ((t1.c0)GLOB('{ZI8rQ7'))) FULL OUTER JOIN v0 ON v0.c1 WHERE (((((t1.c0)GLOB(v0.c3))) ISNULL)) ORDER BY ((((v0.c2)LIKE(v0.c2))) NOT BETWEEN ((v0.c3 IN (0.32891009276682937))) AND (((v0.c1) NOT BETWEEN (v0.c3) AND (t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)GLOB(v0.c3))) ISNULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t1 ON MIN(((v0.c1)*(t1.c0)), ((t1.c0)GLOB('{ZI8rQ7'))) FULL OUTER JOIN v0 ON v0.c1 ORDER BY ((((v0.c2)LIKE(v0.c2))) NOT BETWEEN ((v0.c3 IN (0.32891009276682937))) AND (((v0.c1) NOT BETWEEN (v0.c3) AND (t1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN t1 ON MIN(((v0.c1)*(t1.c0)), ((t1.c0)GLOB('{ZI8rQ7'))) FULL OUTER JOIN v0 ON v0.c1 WHERE (((((t1.c0)GLOB(v0.c3))) ISNULL)) ORDER BY ((((v0.c2)LIKE(v0.c2))) NOT BETWEEN ((v0.c3 IN (0.32891009276682937))) AND (((v0.c1) NOT BETWEEN (v0.c3) AND (t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)GLOB(v0.c3))) ISNULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t1 ON MIN(((v0.c1)*(t1.c0)), ((t1.c0)GLOB('{ZI8rQ7'))) FULL OUTER JOIN v0 ON v0.c1 ORDER BY ((((v0.c2)LIKE(v0.c2))) NOT BETWEEN ((v0.c3 IN (0.32891009276682937))) AND (((v0.c1) NOT BETWEEN (v0.c3) AND (t1.c0))))  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON UPPER(DISTINCT v0.c0 COLLATE RTRIM) WHERE (CASE v0.c3  WHEN TYPEOF(DISTINCT v0.c2) THEN CASE v0.c3  WHEN v0.c3 THEN v0.c1 WHEN v0.c1 THEN v0.c3 WHEN t0.c96 THEN v0.c0 ELSE v0.c2 END WHEN ((v0.c2)=(v0.c1)) THEN CASE v0.c3  WHEN v0.c1 THEN v0.c3 ELSE t0.c96 END WHEN ROUND(v0.c3, t0.c96) THEN LTRIM(v0.c3, 'start of day') END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c3  WHEN TYPEOF(DISTINCT v0.c2) THEN CASE v0.c3  WHEN v0.c3 THEN v0.c1 WHEN v0.c1 THEN v0.c3 WHEN t0.c96 THEN v0.c0 ELSE v0.c2 END WHEN ((v0.c2)==(v0.c1)) THEN CASE v0.c3  WHEN v0.c1 THEN v0.c3 ELSE t0.c96 END WHEN ROUND(v0.c3, t0.c96) THEN LTRIM(v0.c3, 'start of day') END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON UPPER(DISTINCT v0.c0 COLLATE RTRIM));
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON UPPER(DISTINCT v0.c0 COLLATE RTRIM) WHERE (CASE v0.c3  WHEN TYPEOF(DISTINCT v0.c2) THEN CASE v0.c3  WHEN v0.c3 THEN v0.c1 WHEN v0.c1 THEN v0.c3 WHEN t0.c96 THEN v0.c0 ELSE v0.c2 END WHEN ((v0.c2)=(v0.c1)) THEN CASE v0.c3  WHEN v0.c1 THEN v0.c3 ELSE t0.c96 END WHEN ROUND(v0.c3, t0.c96) THEN LTRIM(v0.c3, 'start of day') END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c3  WHEN TYPEOF(DISTINCT v0.c2) THEN CASE v0.c3  WHEN v0.c3 THEN v0.c1 WHEN v0.c1 THEN v0.c3 WHEN t0.c96 THEN v0.c0 ELSE v0.c2 END WHEN ((v0.c2)==(v0.c1)) THEN CASE v0.c3  WHEN v0.c1 THEN v0.c3 ELSE t0.c96 END WHEN ROUND(v0.c3, t0.c96) THEN LTRIM(v0.c3, 'start of day') END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON UPPER(DISTINCT v0.c0 COLLATE RTRIM));
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON UPPER(DISTINCT v0.c0 COLLATE RTRIM) WHERE (CASE v0.c3  WHEN TYPEOF(DISTINCT v0.c2) THEN CASE v0.c3  WHEN v0.c3 THEN v0.c1 WHEN v0.c1 THEN v0.c3 WHEN t0.c96 THEN v0.c0 ELSE v0.c2 END WHEN ((v0.c2)=(v0.c1)) THEN CASE v0.c3  WHEN v0.c1 THEN v0.c3 ELSE t0.c96 END WHEN ROUND(v0.c3, t0.c96) THEN LTRIM(v0.c3, 'start of day') END);
SELECT COUNT(*) FROM v0, t1 WHERE ((((- (v0.c1))) BETWEEN (PRINTF(v0.c2)) AND (((v0.c4)!=(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((((- (v0.c1))) BETWEEN (PRINTF(v0.c2)) AND (((v0.c4)!=(v0.c2))))) IS TRUE)  as count FROM v0, t1);
SELECT COUNT(*) FROM v0, t1 WHERE ((((- (v0.c1))) BETWEEN (PRINTF(v0.c2)) AND (((v0.c4)!=(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((((- (v0.c1))) BETWEEN (PRINTF(v0.c2)) AND (((v0.c4)!=(v0.c2))))) IS TRUE)  as count FROM v0, t1);
SELECT COUNT(*) FROM v0, t1 WHERE ((((- (v0.c1))) BETWEEN (PRINTF(v0.c2)) AND (((v0.c4)!=(v0.c2)))));
SELECT * FROM t1 WHERE (LENGTH(((t1.c0) ISNULL))) ORDER BY 0.10876374785221476;
SELECT SUM(count) FROM (SELECT ((LENGTH(((t1.c0) ISNULL))) IS TRUE)  as count FROM t1 ORDER BY 0.10876374785221476);
SELECT * FROM t1 WHERE (LENGTH(((t1.c0) ISNULL))) ORDER BY 0.10876374785221476;
SELECT SUM(count) FROM (SELECT ((LENGTH(((t1.c0) ISNULL))) IS TRUE)  as count FROM t1 ORDER BY 0.10876374785221476);
SELECT * FROM t1 WHERE (LENGTH(((t1.c0) ISNULL))) ORDER BY 0.10876374785221476;
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS REAL))>=(((t1.c0)%(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS REAL))>=(((t1.c0)%(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS REAL))>=(((t1.c0)%(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS REAL))>=(((t1.c0)%(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS REAL))>=(((t1.c0)%(t1.c0)))));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (MAX(t0.c96, MIN(t0.c96, v0.c2), ((v0.c1)%('	.')), ((v0.c4)<<(v0.c3)))) ORDER BY (- (IFNULL(DISTINCT v0.c1, v0.c4)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((MAX(t0.c96, MIN(t0.c96, v0.c2), ((v0.c1)%('	.')), ((v0.c4)<<(v0.c3)))) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY (- (IFNULL(DISTINCT v0.c1, v0.c4)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (MAX(t0.c96, MIN(t0.c96, v0.c2), ((v0.c1)%('	.')), ((v0.c4)<<(v0.c3)))) ORDER BY (- (IFNULL(DISTINCT v0.c1, v0.c4)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((MAX(t0.c96, MIN(t0.c96, v0.c2), ((v0.c1)%('	.')), ((v0.c4)<<(v0.c3)))) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY (- (IFNULL(DISTINCT v0.c1, v0.c4)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (MAX(t0.c96, MIN(t0.c96, v0.c2), ((v0.c1)%('	.')), ((v0.c4)<<(v0.c3)))) ORDER BY (- (IFNULL(DISTINCT v0.c1, v0.c4)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((0.4135320230092546 COLLATE NOCASE)|(json_extract(t0.c96, t0.c96)))) ORDER BY x'408b';
SELECT SUM(count) FROM (SELECT ALL ((((0.4135320230092546 COLLATE NOCASE)|(json_extract(t0.c96, t0.c96)))) IS TRUE)  as count FROM t0 ORDER BY x'408b');
SELECT ALL COUNT(*) FROM t0 WHERE (((0.4135320230092546 COLLATE NOCASE)|(json_extract(t0.c96, t0.c96)))) ORDER BY x'408b';
SELECT SUM(count) FROM (SELECT ALL ((((0.4135320230092546 COLLATE NOCASE)|(json_extract(t0.c96, t0.c96)))) IS TRUE)  as count FROM t0 ORDER BY x'408b');
SELECT ALL COUNT(*) FROM t0 WHERE (((0.4135320230092546 COLLATE NOCASE)|(json_extract(t0.c96, t0.c96)))) ORDER BY x'408b';
SELECT COUNT(*) FROM t1, v0 WHERE ((((- (v0.c4)))<=(((NULL) BETWEEN (t1.c0) AND (x''))))) ORDER BY json_quote(v0.c4) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c4)))<=(((NULL) BETWEEN (t1.c0) AND (x''))))) IS TRUE)  as count FROM t1, v0 ORDER BY json_quote(v0.c4) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, v0 WHERE ((((- (v0.c4)))<=(((NULL) BETWEEN (t1.c0) AND (x''))))) ORDER BY json_quote(v0.c4) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c4)))<=(((NULL) BETWEEN (t1.c0) AND (x''))))) IS TRUE)  as count FROM t1, v0 ORDER BY json_quote(v0.c4) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, v0 WHERE ((((- (v0.c4)))<=(((NULL) BETWEEN (t1.c0) AND (x''))))) ORDER BY json_quote(v0.c4) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM v0, t0 WHERE (x'2c00');
SELECT SUM(count) FROM (SELECT ((x'2c00') IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (x'2c00');
SELECT SUM(count) FROM (SELECT ((x'2c00') IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (x'2c00');
SELECT COUNT(*) FROM v0, t0, t1 WHERE ((((((((((((v0.c2)) NOT BETWEEN ((v0.c3)) AND ((v0.c4))))OR(CASE v0.c0  WHEN v0.c1 THEN v0.c4 WHEN v0.c3 THEN '豦' WHEN t0.c96 THEN v0.c0 ELSE v0.c0 END)))OR(((-8.51799431E8) NOT BETWEEN (v0.c1) AND (t0.c96)))))OR(((v0.c3)&(v0.c1)))))OR((NOT (t0.c96)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((v0.c2)) NOT BETWEEN ((v0.c3)) AND ((v0.c4))))OR(CASE v0.c0  WHEN v0.c1 THEN v0.c4 WHEN v0.c3 THEN '豦' WHEN t0.c96 THEN v0.c0 ELSE v0.c0 END)))OR(((-8.51799431E8) NOT BETWEEN (v0.c1) AND (t0.c96)))))OR(((v0.c3)&(v0.c1)))))OR((NOT (t0.c96))))) IS TRUE)  as count FROM v0, t0, t1);
SELECT COUNT(*) FROM v0, t0, t1 WHERE ((((((((((((v0.c2)) NOT BETWEEN ((v0.c3)) AND ((v0.c4))))OR(CASE v0.c0  WHEN v0.c1 THEN v0.c4 WHEN v0.c3 THEN '豦' WHEN t0.c96 THEN v0.c0 ELSE v0.c0 END)))OR(((-8.51799431E8) NOT BETWEEN (v0.c1) AND (t0.c96)))))OR(((v0.c3)&(v0.c1)))))OR((NOT (t0.c96)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((v0.c2)) NOT BETWEEN ((v0.c3)) AND ((v0.c4))))OR(CASE v0.c0  WHEN v0.c1 THEN v0.c4 WHEN v0.c3 THEN '豦' WHEN t0.c96 THEN v0.c0 ELSE v0.c0 END)))OR(((-8.51799431E8) NOT BETWEEN (v0.c1) AND (t0.c96)))))OR(((v0.c3)&(v0.c1)))))OR((NOT (t0.c96))))) IS TRUE)  as count FROM v0, t0, t1);
SELECT COUNT(*) FROM v0, t0, t1 WHERE ((((((((((((v0.c2)) NOT BETWEEN ((v0.c3)) AND ((v0.c4))))OR(CASE v0.c0  WHEN v0.c1 THEN v0.c4 WHEN v0.c3 THEN '豦' WHEN t0.c96 THEN v0.c0 ELSE v0.c0 END)))OR(((-8.51799431E8) NOT BETWEEN (v0.c1) AND (t0.c96)))))OR(((v0.c3)&(v0.c1)))))OR((NOT (t0.c96)))));
SELECT * FROM t1 WHERE ((((t1.c0)-(t1.c0)) IN ())) ORDER BY CAST(((t1.c0)GLOB(t1.c0)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)-(t1.c0)) IN ())) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c0)GLOB(t1.c0)) AS TEXT) DESC  NULLS LAST);
SELECT * FROM t1 WHERE ((((t1.c0)-(t1.c0)) IN ())) ORDER BY CAST(((t1.c0)GLOB(t1.c0)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)-(t1.c0)) IN ())) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c0)GLOB(t1.c0)) AS TEXT) DESC  NULLS LAST);
SELECT * FROM t1 WHERE ((((t1.c0)-(t1.c0)) IN ())) ORDER BY CAST(((t1.c0)GLOB(t1.c0)) AS TEXT) DESC  NULLS LAST;
SELECT * FROM v0, t1, t0 WHERE ((((v0.c1)) NOT BETWEEN (((NOT (v0.c4)))) AND ((t0.c96 COLLATE RTRIM)))) ORDER BY (((HEX(v0.c3), t1.c0 COLLATE NOCASE, ((t1.c0) NOTNULL)))<(((v0.c2 IN (v0.c0, t1.c0)), ((((((((((((t0.c96)OR(t1.c0)))AND(v0.c1)))AND(v0.c1)))AND(v0.c3)))OR(v0.c2)))OR(t1.c0)), ((((v0.c3)OR(v0.c4)))OR(t0.c96))))) ASC  NULLS FIRST, CASE WHEN (- (v0.c3)) THEN ((t0.c96)||(v0.c4)) ELSE ((((v0.c1)AND(t1.c0)))AND(v0.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c1)) NOT BETWEEN (((NOT (v0.c4)))) AND ((t0.c96 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, t1, t0 ORDER BY (((HEX(v0.c3), t1.c0 COLLATE NOCASE, ((t1.c0) NOTNULL)))<(((v0.c2 IN (v0.c0, t1.c0)), ((((((((((((t0.c96)OR(t1.c0)))AND(v0.c1)))AND(v0.c1)))AND(v0.c3)))OR(v0.c2)))OR(t1.c0)), ((((v0.c3)OR(v0.c4)))OR(t0.c96))))) ASC  NULLS FIRST, CASE WHEN (- (v0.c3)) THEN ((t0.c96)||(v0.c4)) ELSE ((((v0.c1)AND(t1.c0)))AND(v0.c2)) END DESC  NULLS LAST);
SELECT * FROM v0, t1, t0 WHERE ((((v0.c1)) NOT BETWEEN (((NOT (v0.c4)))) AND ((t0.c96 COLLATE RTRIM)))) ORDER BY (((HEX(v0.c3), t1.c0 COLLATE NOCASE, ((t1.c0) NOTNULL)))<(((v0.c2 IN (v0.c0, t1.c0)), ((((((((((((t0.c96)OR(t1.c0)))AND(v0.c1)))AND(v0.c1)))AND(v0.c3)))OR(v0.c2)))OR(t1.c0)), ((((v0.c3)OR(v0.c4)))OR(t0.c96))))) ASC  NULLS FIRST, CASE WHEN (- (v0.c3)) THEN ((t0.c96)||(v0.c4)) ELSE ((((v0.c1)AND(t1.c0)))AND(v0.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c1)) NOT BETWEEN (((NOT (v0.c4)))) AND ((t0.c96 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, t1, t0 ORDER BY (((HEX(v0.c3), t1.c0 COLLATE NOCASE, ((t1.c0) NOTNULL)))<(((v0.c2 IN (v0.c0, t1.c0)), ((((((((((((t0.c96)OR(t1.c0)))AND(v0.c1)))AND(v0.c1)))AND(v0.c3)))OR(v0.c2)))OR(t1.c0)), ((((v0.c3)OR(v0.c4)))OR(t0.c96))))) ASC  NULLS FIRST, CASE WHEN (- (v0.c3)) THEN ((t0.c96)||(v0.c4)) ELSE ((((v0.c1)AND(t1.c0)))AND(v0.c2)) END DESC  NULLS LAST);
SELECT * FROM v0, t1, t0 WHERE ((((v0.c1)) NOT BETWEEN (((NOT (v0.c4)))) AND ((t0.c96 COLLATE RTRIM)))) ORDER BY (((HEX(v0.c3), t1.c0 COLLATE NOCASE, ((t1.c0) NOTNULL)))<(((v0.c2 IN (v0.c0, t1.c0)), ((((((((((((t0.c96)OR(t1.c0)))AND(v0.c1)))AND(v0.c1)))AND(v0.c3)))OR(v0.c2)))OR(t1.c0)), ((((v0.c3)OR(v0.c4)))OR(t0.c96))))) ASC  NULLS FIRST, CASE WHEN (- (v0.c3)) THEN ((t0.c96)||(v0.c4)) ELSE ((((v0.c1)AND(t1.c0)))AND(v0.c2)) END DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ('1e500000');
SELECT SUM(count) FROM (SELECT (('1e500000') IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ('1e500000');
SELECT SUM(count) FROM (SELECT (('1e500000') IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ('1e500000');
SELECT ALL COUNT(*) FROM v0, t0 LEFT OUTER JOIN t1 ON (('![S崉')<=(((v0.c4)GLOB(v0.c1)))) WHERE (((v0.c3 COLLATE BINARY) BETWEEN (x'') AND (((t0.c96)IS NOT('0[XDY~B+'))))) ORDER BY UPPER(CAST(v0.c3 AS TEXT)) ASC, json_array(((v0.c2)-(v0.c0)), (((v0.c0))<(('1863503619'))), v0.c3 COLLATE BINARY, (NOT (v0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c3 COLLATE BINARY) BETWEEN (x'') AND (((t0.c96)IS NOT('0[XDY~B+'))))) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN t1 ON (('![S崉')<=(((v0.c4)GLOB(v0.c1)))) ORDER BY UPPER(CAST(v0.c3 AS TEXT)) ASC, json_array(((v0.c2)-(v0.c0)), (((v0.c0))<(('1863503619'))), v0.c3 COLLATE BINARY, (NOT (v0.c1))));
SELECT ALL COUNT(*) FROM v0, t0 LEFT OUTER JOIN t1 ON (('![S崉')<=(((v0.c4)GLOB(v0.c1)))) WHERE (((v0.c3 COLLATE BINARY) BETWEEN (x'') AND (((t0.c96)IS NOT('0[XDY~B+'))))) ORDER BY UPPER(CAST(v0.c3 AS TEXT)) ASC, json_array(((v0.c2)-(v0.c0)), (((v0.c0))<(('1863503619'))), v0.c3 COLLATE BINARY, (NOT (v0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c3 COLLATE BINARY) BETWEEN (x'') AND (((t0.c96)IS NOT('0[XDY~B+'))))) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN t1 ON (('![S崉')<=(((v0.c4)GLOB(v0.c1)))) ORDER BY UPPER(CAST(v0.c3 AS TEXT)) ASC, json_array(((v0.c2)-(v0.c0)), (((v0.c0))<(('1863503619'))), v0.c3 COLLATE BINARY, (NOT (v0.c1))));
SELECT ALL COUNT(*) FROM v0, t0 LEFT OUTER JOIN t1 ON (('![S崉')<=(((v0.c4)GLOB(v0.c1)))) WHERE (((v0.c3 COLLATE BINARY) BETWEEN (x'') AND (((t0.c96)IS NOT('0[XDY~B+'))))) ORDER BY UPPER(CAST(v0.c3 AS TEXT)) ASC, json_array(((v0.c2)-(v0.c0)), (((v0.c0))<(('1863503619'))), v0.c3 COLLATE BINARY, (NOT (v0.c1)));
SELECT ALL * FROM t0, v0, t1 WHERE (CASE ((v0.c3) NOT NULL)  WHEN HEX(DISTINCT v0.c0) THEN CAST(v0.c2 AS INTEGER) WHEN PRINTF(v0.c4, v0.c0, -701745405) THEN 0.07264935890074609 WHEN (+ (v0.c2)) THEN (((v0.c3)) NOT BETWEEN ((t1.c0)) AND ((t0.c96))) ELSE t0.c96 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c3) NOT NULL)  WHEN HEX(DISTINCT v0.c0) THEN CAST(v0.c2 AS INTEGER) WHEN PRINTF(v0.c4, v0.c0, -701745405) THEN 0.07264935890074609 WHEN (+ (v0.c2)) THEN (((v0.c3)) NOT BETWEEN ((t1.c0)) AND ((t0.c96))) ELSE t0.c96 END) IS TRUE)  as count FROM t0, v0, t1);
SELECT ALL * FROM t0, v0, t1 WHERE (CASE ((v0.c3) NOT NULL)  WHEN HEX(DISTINCT v0.c0) THEN CAST(v0.c2 AS INTEGER) WHEN PRINTF(v0.c4, v0.c0, -701745405) THEN 0.07264935890074609 WHEN (+ (v0.c2)) THEN (((v0.c3)) NOT BETWEEN ((t1.c0)) AND ((t0.c96))) ELSE t0.c96 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c3) NOT NULL)  WHEN HEX(DISTINCT v0.c0) THEN CAST(v0.c2 AS INTEGER) WHEN PRINTF(v0.c4, v0.c0, -701745405) THEN 0.07264935890074609 WHEN (+ (v0.c2)) THEN (((v0.c3)) NOT BETWEEN ((t1.c0)) AND ((t0.c96))) ELSE t0.c96 END) IS TRUE)  as count FROM t0, v0, t1);
SELECT ALL * FROM t0, v0, t1 WHERE (CASE ((v0.c3) NOT NULL)  WHEN HEX(DISTINCT v0.c0) THEN CAST(v0.c2 AS INTEGER) WHEN PRINTF(v0.c4, v0.c0, -701745405) THEN 0.07264935890074609 WHEN (+ (v0.c2)) THEN (((v0.c3)) NOT BETWEEN ((t1.c0)) AND ((t0.c96))) ELSE t0.c96 END);
SELECT COUNT(*) FROM t1, v0 WHERE (UNLIKELY(((v0.c3) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((v0.c3) IS FALSE))) IS TRUE)  as count FROM t1, v0);
SELECT COUNT(*) FROM t1, v0 WHERE (UNLIKELY(((v0.c3) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((v0.c3) IS FALSE))) IS TRUE)  as count FROM t1, v0);
SELECT COUNT(*) FROM t1, v0 WHERE (UNLIKELY(((v0.c3) IS FALSE)));
SELECT COUNT(*) FROM t1, t0, v0 WHERE (CAST(((((v0.c0)OR(v0.c1)))OR(t1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)OR(v0.c1)))OR(t1.c0)) AS TEXT)) IS TRUE)  as count FROM t1, t0, v0);
SELECT COUNT(*) FROM t1, t0, v0 WHERE (CAST(((((v0.c0)OR(v0.c1)))OR(t1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)OR(v0.c1)))OR(t1.c0)) AS TEXT)) IS TRUE)  as count FROM t1, t0, v0);
SELECT COUNT(*) FROM t1, t0, v0 WHERE (CAST(((((v0.c0)OR(v0.c1)))OR(t1.c0)) AS TEXT));
SELECT * FROM v0, t0, t1 WHERE (((v0.c1 COLLATE NOCASE) NOT BETWEEN (((t1.c0) BETWEEN (0.38113298781912397) AND (t0.c96))) AND ((- (v0.c3))))) ORDER BY CAST(-305012448 AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE NOCASE) NOT BETWEEN (((t1.c0) BETWEEN (0.38113298781912397) AND (t0.c96))) AND ((- (v0.c3))))) IS TRUE)  as count FROM v0, t0, t1 ORDER BY CAST(-305012448 AS NUMERIC)  NULLS FIRST);
SELECT * FROM v0, t0, t1 WHERE (((v0.c1 COLLATE NOCASE) NOT BETWEEN (((t1.c0) BETWEEN (0.38113298781912397) AND (t0.c96))) AND ((- (v0.c3))))) ORDER BY CAST(-305012448 AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE NOCASE) NOT BETWEEN (((t1.c0) BETWEEN (0.38113298781912397) AND (t0.c96))) AND ((- (v0.c3))))) IS TRUE)  as count FROM v0, t0, t1 ORDER BY CAST(-305012448 AS NUMERIC)  NULLS FIRST);
SELECT * FROM v0, t0, t1 WHERE (((v0.c1 COLLATE NOCASE) NOT BETWEEN (((t1.c0) BETWEEN (0.38113298781912397) AND (t0.c96))) AND ((- (v0.c3))))) ORDER BY CAST(-305012448 AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((CAST(t0.c96 AS REAL)))>((((t0.c96)LIKE(t0.c96))))));
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c96 AS REAL)))>((((t0.c96)LIKE(t0.c96)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((CAST(t0.c96 AS REAL)))>((((t0.c96)LIKE(t0.c96))))));
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c96 AS REAL)))>((((t0.c96)LIKE(t0.c96)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((CAST(t0.c96 AS REAL)))>((((t0.c96)LIKE(t0.c96))))));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c3)<=(((((v0.c0)AND(0.35981078896139396)))OR(v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((v0.c3)<=(((((v0.c0)AND(0.35981078896139396)))OR(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c3)<=(((((v0.c0)AND(0.35981078896139396)))OR(v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((v0.c3)<=(((((v0.c0)AND(0.35981078896139396)))OR(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c3)<=(((((v0.c0)AND(0.35981078896139396)))OR(v0.c2)))));
SELECT ALL * FROM v0, t0 FULL OUTER JOIN t1 ON ((((t1.c0)>(v0.c3)))==(((((v0.c3)AND(v0.c1)))OR(v0.c1)))) WHERE ((((((v0.c2 IN ()))AND(((t0.c96)AND(v0.c0)))))AND(((t1.c0)%(v0.c4)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c2 IN ()))AND(((t0.c96)AND(v0.c0)))))AND(((t1.c0)%(v0.c4))))) IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN t1 ON ((((t1.c0)>(v0.c3)))==(((((v0.c3)AND(v0.c1)))OR(v0.c1)))));
SELECT ALL * FROM v0, t0 FULL OUTER JOIN t1 ON ((((t1.c0)>(v0.c3)))==(((((v0.c3)AND(v0.c1)))OR(v0.c1)))) WHERE ((((((v0.c2 IN ()))AND(((t0.c96)AND(v0.c0)))))AND(((t1.c0)%(v0.c4)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c2 IN ()))AND(((t0.c96)AND(v0.c0)))))AND(((t1.c0)%(v0.c4))))) IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN t1 ON ((((t1.c0)>(v0.c3)))==(((((v0.c3)AND(v0.c1)))OR(v0.c1)))));
SELECT ALL * FROM v0, t0 FULL OUTER JOIN t1 ON ((((t1.c0)>(v0.c3)))==(((((v0.c3)AND(v0.c1)))OR(v0.c1)))) WHERE ((((((v0.c2 IN ()))AND(((t0.c96)AND(v0.c0)))))AND(((t1.c0)%(v0.c4)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((~ ((- (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((~ ((- (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((~ ((- (t1.c0)))));
SELECT * FROM v0 CROSS JOIN t0 ON ((t0.c96)|(((((v0.c3)AND(v0.c0)))OR(NULL)))) CROSS JOIN t1 ON ((((((v0.c1, v0.c2, x''))>((t0.c96, v0.c0, v0.c2)))))=((((NULL) ISNULL)))) WHERE (CASE ((v0.c1) NOTNULL)  WHEN 'ꗸ' THEN ((((t1.c0)AND(v0.c1)))OR(x'')) ELSE IFNULL(NULL, v0.c4) END) ORDER BY ((LAST_INSERT_ROWID())LIKE((+ (v0.c4)))) DESC  NULLS FIRST, ((CAST(v0.c2 AS NUMERIC)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c1) NOTNULL)  WHEN 'ꗸ' THEN ((((t1.c0)AND(v0.c1)))OR(x'')) ELSE IFNULL(NULL, v0.c4) END) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((t0.c96)|(((((v0.c3)AND(v0.c0)))OR(NULL)))) CROSS JOIN t1 ON ((((((v0.c1, v0.c2, x''))>((t0.c96, v0.c0, v0.c2)))))==((((NULL) ISNULL)))) ORDER BY ((LAST_INSERT_ROWID())LIKE((+ (v0.c4)))) DESC  NULLS FIRST, ((CAST(v0.c2 AS NUMERIC)) NOT NULL) DESC);
SELECT * FROM v0 CROSS JOIN t0 ON ((t0.c96)|(((((v0.c3)AND(v0.c0)))OR(NULL)))) CROSS JOIN t1 ON ((((((v0.c1, v0.c2, x''))>((t0.c96, v0.c0, v0.c2)))))=((((NULL) ISNULL)))) WHERE (CASE ((v0.c1) NOTNULL)  WHEN 'ꗸ' THEN ((((t1.c0)AND(v0.c1)))OR(x'')) ELSE IFNULL(NULL, v0.c4) END) ORDER BY ((LAST_INSERT_ROWID())LIKE((+ (v0.c4)))) DESC  NULLS FIRST, ((CAST(v0.c2 AS NUMERIC)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c1) NOTNULL)  WHEN 'ꗸ' THEN ((((t1.c0)AND(v0.c1)))OR(x'')) ELSE IFNULL(NULL, v0.c4) END) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((t0.c96)|(((((v0.c3)AND(v0.c0)))OR(NULL)))) CROSS JOIN t1 ON ((((((v0.c1, v0.c2, x''))>((t0.c96, v0.c0, v0.c2)))))==((((NULL) ISNULL)))) ORDER BY ((LAST_INSERT_ROWID())LIKE((+ (v0.c4)))) DESC  NULLS FIRST, ((CAST(v0.c2 AS NUMERIC)) NOT NULL) DESC);
SELECT * FROM v0 CROSS JOIN t0 ON ((t0.c96)|(((((v0.c3)AND(v0.c0)))OR(NULL)))) CROSS JOIN t1 ON ((((((v0.c1, v0.c2, x''))>((t0.c96, v0.c0, v0.c2)))))=((((NULL) ISNULL)))) WHERE (CASE ((v0.c1) NOTNULL)  WHEN 'ꗸ' THEN ((((t1.c0)AND(v0.c1)))OR(x'')) ELSE IFNULL(NULL, v0.c4) END) ORDER BY ((LAST_INSERT_ROWID())LIKE((+ (v0.c4)))) DESC  NULLS FIRST, ((CAST(v0.c2 AS NUMERIC)) NOT NULL) DESC;
SELECT ALL * FROM v0, t1, t0 WHERE (((v0.c0) NOTNULL) COLLATE NOCASE) ORDER BY CASE v0.c3  WHEN (v0.c1 IN ()) THEN (~ (v0.c0)) ELSE ((t0.c96)IS(v0.c4)) END, ((((v0.c1)>=(v0.c3)))<(CASE t0.c96  WHEN v0.c3 THEN v0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM v0, t1, t0 ORDER BY CASE v0.c3  WHEN (v0.c1 IN ()) THEN (~ (v0.c0)) ELSE ((t0.c96)IS(v0.c4)) END, ((((v0.c1)>=(v0.c3)))<(CASE t0.c96  WHEN v0.c3 THEN v0.c2 END))  NULLS FIRST);
SELECT ALL * FROM v0, t1, t0 WHERE (((v0.c0) NOTNULL) COLLATE NOCASE) ORDER BY CASE v0.c3  WHEN (v0.c1 IN ()) THEN (~ (v0.c0)) ELSE ((t0.c96)IS(v0.c4)) END, ((((v0.c1)>=(v0.c3)))<(CASE t0.c96  WHEN v0.c3 THEN v0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM v0, t1, t0 ORDER BY CASE v0.c3  WHEN (v0.c1 IN ()) THEN (~ (v0.c0)) ELSE ((t0.c96)IS(v0.c4)) END, ((((v0.c1)>=(v0.c3)))<(CASE t0.c96  WHEN v0.c3 THEN v0.c2 END))  NULLS FIRST);
SELECT ALL * FROM v0, t1, t0 WHERE (((v0.c0) NOTNULL) COLLATE NOCASE) ORDER BY CASE v0.c3  WHEN (v0.c1 IN ()) THEN (~ (v0.c0)) ELSE ((t0.c96)IS(v0.c4)) END, ((((v0.c1)>=(v0.c3)))<(CASE t0.c96  WHEN v0.c3 THEN v0.c2 END))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((('?驳Hcz') NOT NULL)) NOT BETWEEN ((((t1.c0)) BETWEEN ((NULL)) AND ((t1.c0)))) AND (((t1.c0) NOTNULL)))) ORDER BY json_type(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('?驳Hcz') NOT NULL)) NOT BETWEEN ((((t1.c0)) BETWEEN ((NULL)) AND ((t1.c0)))) AND (((t1.c0) NOTNULL)))) IS TRUE)  as count FROM t1 ORDER BY json_type(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((((('?驳Hcz') NOT NULL)) NOT BETWEEN ((((t1.c0)) BETWEEN ((NULL)) AND ((t1.c0)))) AND (((t1.c0) NOTNULL)))) ORDER BY json_type(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('?驳Hcz') NOT NULL)) NOT BETWEEN ((((t1.c0)) BETWEEN ((NULL)) AND ((t1.c0)))) AND (((t1.c0) NOTNULL)))) IS TRUE)  as count FROM t1 ORDER BY json_type(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((((('?驳Hcz') NOT NULL)) NOT BETWEEN ((((t1.c0)) BETWEEN ((NULL)) AND ((t1.c0)))) AND (((t1.c0) NOTNULL)))) ORDER BY json_type(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)  NULLS FIRST;
SELECT * FROM t0 WHERE (CASE WHEN (((t0.c96))<=((NULL))) THEN ((t0.c96)>>(t0.c96)) ELSE ((t0.c96) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c96))<=((NULL))) THEN ((t0.c96)>>(t0.c96)) ELSE ((t0.c96) IS FALSE) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN (((t0.c96))<=((NULL))) THEN ((t0.c96)>>(t0.c96)) ELSE ((t0.c96) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c96))<=((NULL))) THEN ((t0.c96)>>(t0.c96)) ELSE ((t0.c96) IS FALSE) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN (((t0.c96))<=((NULL))) THEN ((t0.c96)>>(t0.c96)) ELSE ((t0.c96) IS FALSE) END);
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c2)) BETWEEN ((((((t0.c96)OR(v0.c1)))AND(v0.c1)))) AND ((((((t0.c96)AND(v0.c4)))AND(v0.c2))))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) BETWEEN ((((((t0.c96)OR(v0.c1)))AND(v0.c1)))) AND ((((((t0.c96)AND(v0.c4)))AND(v0.c2)))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c2)) BETWEEN ((((((t0.c96)OR(v0.c1)))AND(v0.c1)))) AND ((((((t0.c96)AND(v0.c4)))AND(v0.c2))))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) BETWEEN ((((((t0.c96)OR(v0.c1)))AND(v0.c1)))) AND ((((((t0.c96)AND(v0.c4)))AND(v0.c2)))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c2)) BETWEEN ((((((t0.c96)OR(v0.c1)))AND(v0.c1)))) AND ((((((t0.c96)AND(v0.c4)))AND(v0.c2))))));
SELECT ALL * FROM t0 INNER JOIN t1 ON ((t1.c0)>(((t1.c0)LIKE(t0.c96)))) WHERE (((((((((CASE x''  WHEN t0.c96 THEN t1.c0 ELSE t1.c0 END)AND(ABS(DISTINCT t0.c96))))AND((((t0.c96)) BETWEEN ((0.7197533008333138)) AND ((t1.c0))))))OR(t1.c0 COLLATE BINARY)))OR(((t1.c0)-(t1.c0))))) ORDER BY ((((t0.c96) ISNULL)) NOT BETWEEN (TYPEOF(t0.c96)) AND (t1.c0))  NULLS LAST, ((((((((CAST(t0.c96 AS BLOB))AND('-404021129')))OR(((t1.c0)IS(t1.c0)))))OR((t1.c0 IN ()))))OR(t0.c96));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE x''  WHEN t0.c96 THEN t1.c0 ELSE t1.c0 END)AND(ABS(DISTINCT t0.c96))))AND((((t0.c96)) BETWEEN ((0.7197533008333138)) AND ((t1.c0))))))OR(t1.c0 COLLATE BINARY)))OR(((t1.c0)-(t1.c0))))) IS TRUE)  as count FROM t0 INNER JOIN t1 ON ((t1.c0)>(((t1.c0)LIKE(t0.c96)))) ORDER BY ((((t0.c96) ISNULL)) NOT BETWEEN (TYPEOF(t0.c96)) AND (t1.c0))  NULLS LAST, ((((((((CAST(t0.c96 AS BLOB))AND('-404021129')))OR(((t1.c0)IS(t1.c0)))))OR((t1.c0 IN ()))))OR(t0.c96)));
SELECT ALL * FROM t0 INNER JOIN t1 ON ((t1.c0)>(((t1.c0)LIKE(t0.c96)))) WHERE (((((((((CASE x''  WHEN t0.c96 THEN t1.c0 ELSE t1.c0 END)AND(ABS(DISTINCT t0.c96))))AND((((t0.c96)) BETWEEN ((0.7197533008333138)) AND ((t1.c0))))))OR(t1.c0 COLLATE BINARY)))OR(((t1.c0)-(t1.c0))))) ORDER BY ((((t0.c96) ISNULL)) NOT BETWEEN (TYPEOF(t0.c96)) AND (t1.c0))  NULLS LAST, ((((((((CAST(t0.c96 AS BLOB))AND('-404021129')))OR(((t1.c0)IS(t1.c0)))))OR((t1.c0 IN ()))))OR(t0.c96));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE x''  WHEN t0.c96 THEN t1.c0 ELSE t1.c0 END)AND(ABS(DISTINCT t0.c96))))AND((((t0.c96)) BETWEEN ((0.7197533008333138)) AND ((t1.c0))))))OR(t1.c0 COLLATE BINARY)))OR(((t1.c0)-(t1.c0))))) IS TRUE)  as count FROM t0 INNER JOIN t1 ON ((t1.c0)>(((t1.c0)LIKE(t0.c96)))) ORDER BY ((((t0.c96) ISNULL)) NOT BETWEEN (TYPEOF(t0.c96)) AND (t1.c0))  NULLS LAST, ((((((((CAST(t0.c96 AS BLOB))AND('-404021129')))OR(((t1.c0)IS(t1.c0)))))OR((t1.c0 IN ()))))OR(t0.c96)));
SELECT ALL * FROM t0 INNER JOIN t1 ON ((t1.c0)>(((t1.c0)LIKE(t0.c96)))) WHERE (((((((((CASE x''  WHEN t0.c96 THEN t1.c0 ELSE t1.c0 END)AND(ABS(DISTINCT t0.c96))))AND((((t0.c96)) BETWEEN ((0.7197533008333138)) AND ((t1.c0))))))OR(t1.c0 COLLATE BINARY)))OR(((t1.c0)-(t1.c0))))) ORDER BY ((((t0.c96) ISNULL)) NOT BETWEEN (TYPEOF(t0.c96)) AND (t1.c0))  NULLS LAST, ((((((((CAST(t0.c96 AS BLOB))AND('-404021129')))OR(((t1.c0)IS(t1.c0)))))OR((t1.c0 IN ()))))OR(t0.c96));
SELECT ALL * FROM t1, t0 WHERE ((((t0.c96) ISNULL) IN ())) ORDER BY ((((((t0.c96)OR(t0.c96)))AND(t0.c96))) BETWEEN (((t0.c96)GLOB(NULL))) AND (((t1.c0)|(t0.c96)))) ASC  NULLS LAST, x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c96) ISNULL) IN ())) IS TRUE)  as count FROM t1, t0 ORDER BY ((((((t0.c96)OR(t0.c96)))AND(t0.c96))) BETWEEN (((t0.c96)GLOB(NULL))) AND (((t1.c0)|(t0.c96)))) ASC  NULLS LAST, x'' DESC  NULLS FIRST);
SELECT ALL * FROM t1, t0 WHERE ((((t0.c96) ISNULL) IN ())) ORDER BY ((((((t0.c96)OR(t0.c96)))AND(t0.c96))) BETWEEN (((t0.c96)GLOB(NULL))) AND (((t1.c0)|(t0.c96)))) ASC  NULLS LAST, x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c96) ISNULL) IN ())) IS TRUE)  as count FROM t1, t0 ORDER BY ((((((t0.c96)OR(t0.c96)))AND(t0.c96))) BETWEEN (((t0.c96)GLOB(NULL))) AND (((t1.c0)|(t0.c96)))) ASC  NULLS LAST, x'' DESC  NULLS FIRST);
SELECT ALL * FROM t1, t0 WHERE ((((t0.c96) ISNULL) IN ())) ORDER BY ((((((t0.c96)OR(t0.c96)))AND(t0.c96))) BETWEEN (((t0.c96)GLOB(NULL))) AND (((t1.c0)|(t0.c96)))) ASC  NULLS LAST, x'' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((- (HEX(0.12987287500438593)))) ORDER BY (~ ((('-911256896')>=(v0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (HEX(0.12987287500438593)))) IS TRUE)  as count FROM t0, v0 ORDER BY (~ ((('-911256896')>=(v0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((- (HEX(0.12987287500438593)))) ORDER BY (~ ((('-911256896')>=(v0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (HEX(0.12987287500438593)))) IS TRUE)  as count FROM t0, v0 ORDER BY (~ ((('-911256896')>=(v0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((- (HEX(0.12987287500438593)))) ORDER BY (~ ((('-911256896')>=(v0.c1)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t1 FULL OUTER JOIN t0 ON v0.c4 WHERE (((TRIM(v0.c4)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(v0.c4)) IS FALSE)) IS TRUE)  as count FROM v0, t1 FULL OUTER JOIN t0 ON v0.c4);
SELECT ALL COUNT(*) FROM v0, t1 FULL OUTER JOIN t0 ON v0.c4 WHERE (((TRIM(v0.c4)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(v0.c4)) IS FALSE)) IS TRUE)  as count FROM v0, t1 FULL OUTER JOIN t0 ON v0.c4);
SELECT ALL COUNT(*) FROM v0, t1 FULL OUTER JOIN t0 ON v0.c4 WHERE (((TRIM(v0.c4)) IS FALSE));
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)<=((((0.7912394620968974)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)<=((((0.7912394620968974)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)<=((((0.7912394620968974)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)<=((((0.7912394620968974)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)<=((((0.7912394620968974)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT * FROM v0, t1 WHERE ((NOT (v0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0, t1);
SELECT * FROM v0, t1 WHERE ((NOT (v0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0, t1);
SELECT * FROM v0, t1 WHERE ((NOT (v0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON (- (v0.c0)) WHERE (CAST(v0.c2 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c2 AS REAL)) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON (- (v0.c0)));
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON (- (v0.c0)) WHERE (CAST(v0.c2 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c2 AS REAL)) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON (- (v0.c0)));
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON (- (v0.c0)) WHERE (CAST(v0.c2 AS REAL));
SELECT ALL * FROM t0 WHERE (CASE WHEN CAST(t0.c96 AS TEXT) THEN ((t0.c96) IS TRUE) ELSE '蘻k' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c96 AS TEXT) THEN ((t0.c96) IS TRUE) ELSE '蘻k' END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN CAST(t0.c96 AS TEXT) THEN ((t0.c96) IS TRUE) ELSE '蘻k' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c96 AS TEXT) THEN ((t0.c96) IS TRUE) ELSE '蘻k' END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN CAST(t0.c96 AS TEXT) THEN ((t0.c96) IS TRUE) ELSE '蘻k' END);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT ALL * FROM t0 WHERE (CAST(UPPER(DISTINCT t0.c96) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(DISTINCT t0.c96) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(UPPER(DISTINCT t0.c96) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(DISTINCT t0.c96) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(UPPER(DISTINCT t0.c96) AS INTEGER));
SELECT * FROM v0, t0 WHERE ((((CASE WHEN v0.c4 THEN v0.c2 ELSE v0.c0 END, CASE WHEN v0.c3 THEN v0.c2 ELSE v0.c4 END, ((((((((NULL)OR(v0.c4)))AND(v0.c4)))OR('\x.g⍜<A>''')))AND(v0.c2))))>=((CASE WHEN v0.c4 THEN t0.c96 END, ((((v0.c2)OR(v0.c2)))OR(v0.c1)), ((v0.c4)/(v0.c1)))))) ORDER BY (((v0.c1 IN (v0.c4, t0.c96))) NOTNULL)  NULLS LAST, (((((v0.c0) ISNULL)))!=((((v0.c2)GLOB(t0.c96))))), (((('H8') NOT BETWEEN ('0.19635891779884085') AND (v0.c2))) BETWEEN (CASE v0.c2  WHEN v0.c2 THEN v0.c4 WHEN v0.c1 THEN '-101202329' WHEN v0.c4 THEN t0.c96 ELSE v0.c3 END) AND (CASE v0.c2  WHEN t0.c96 THEN t0.c96 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN v0.c4 THEN v0.c2 ELSE v0.c0 END, CASE WHEN v0.c3 THEN v0.c2 ELSE v0.c4 END, ((((((((NULL)OR(v0.c4)))AND(v0.c4)))OR('\x.g⍜<A>''')))AND(v0.c2))))>=((CASE WHEN v0.c4 THEN t0.c96 END, ((((v0.c2)OR(v0.c2)))OR(v0.c1)), ((v0.c4)/(v0.c1)))))) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c1 IN (v0.c4, t0.c96))) NOTNULL)  NULLS LAST, (((((v0.c0) ISNULL)))<>((((v0.c2)GLOB(t0.c96))))), (((('H8') NOT BETWEEN ('0.19635891779884085') AND (v0.c2))) BETWEEN (CASE v0.c2  WHEN v0.c2 THEN v0.c4 WHEN v0.c1 THEN '-101202329' WHEN v0.c4 THEN t0.c96 ELSE v0.c3 END) AND (CASE v0.c2  WHEN t0.c96 THEN t0.c96 END)) DESC);
SELECT * FROM v0, t0 WHERE ((((CASE WHEN v0.c4 THEN v0.c2 ELSE v0.c0 END, CASE WHEN v0.c3 THEN v0.c2 ELSE v0.c4 END, ((((((((NULL)OR(v0.c4)))AND(v0.c4)))OR('\x.g⍜<A>''')))AND(v0.c2))))>=((CASE WHEN v0.c4 THEN t0.c96 END, ((((v0.c2)OR(v0.c2)))OR(v0.c1)), ((v0.c4)/(v0.c1)))))) ORDER BY (((v0.c1 IN (v0.c4, t0.c96))) NOTNULL)  NULLS LAST, (((((v0.c0) ISNULL)))!=((((v0.c2)GLOB(t0.c96))))), (((('H8') NOT BETWEEN ('0.19635891779884085') AND (v0.c2))) BETWEEN (CASE v0.c2  WHEN v0.c2 THEN v0.c4 WHEN v0.c1 THEN '-101202329' WHEN v0.c4 THEN t0.c96 ELSE v0.c3 END) AND (CASE v0.c2  WHEN t0.c96 THEN t0.c96 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN v0.c4 THEN v0.c2 ELSE v0.c0 END, CASE WHEN v0.c3 THEN v0.c2 ELSE v0.c4 END, ((((((((NULL)OR(v0.c4)))AND(v0.c4)))OR('\x.g⍜<A>''')))AND(v0.c2))))>=((CASE WHEN v0.c4 THEN t0.c96 END, ((((v0.c2)OR(v0.c2)))OR(v0.c1)), ((v0.c4)/(v0.c1)))))) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c1 IN (v0.c4, t0.c96))) NOTNULL)  NULLS LAST, (((((v0.c0) ISNULL)))<>((((v0.c2)GLOB(t0.c96))))), (((('H8') NOT BETWEEN ('0.19635891779884085') AND (v0.c2))) BETWEEN (CASE v0.c2  WHEN v0.c2 THEN v0.c4 WHEN v0.c1 THEN '-101202329' WHEN v0.c4 THEN t0.c96 ELSE v0.c3 END) AND (CASE v0.c2  WHEN t0.c96 THEN t0.c96 END)) DESC);
SELECT * FROM v0, t0 WHERE ((((CASE WHEN v0.c4 THEN v0.c2 ELSE v0.c0 END, CASE WHEN v0.c3 THEN v0.c2 ELSE v0.c4 END, ((((((((NULL)OR(v0.c4)))AND(v0.c4)))OR('\x.g⍜<A>''')))AND(v0.c2))))>=((CASE WHEN v0.c4 THEN t0.c96 END, ((((v0.c2)OR(v0.c2)))OR(v0.c1)), ((v0.c4)/(v0.c1)))))) ORDER BY (((v0.c1 IN (v0.c4, t0.c96))) NOTNULL)  NULLS LAST, (((((v0.c0) ISNULL)))!=((((v0.c2)GLOB(t0.c96))))), (((('H8') NOT BETWEEN ('0.19635891779884085') AND (v0.c2))) BETWEEN (CASE v0.c2  WHEN v0.c2 THEN v0.c4 WHEN v0.c1 THEN '-101202329' WHEN v0.c4 THEN t0.c96 ELSE v0.c3 END) AND (CASE v0.c2  WHEN t0.c96 THEN t0.c96 END)) DESC;
SELECT * FROM t0, t1, v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0, t1, v0);
SELECT * FROM t0, t1, v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0, t1, v0);
SELECT * FROM t0, t1, v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE);
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON ((t0.c96) BETWEEN ((((v0.c1))<((v0.c1)))) AND (((t0.c96)GLOB(v0.c3)))) WHERE ((((v0.c3 IN ())) NOT BETWEEN (((v0.c3) ISNULL)) AND (((NULL)>(t0.c96))))) ORDER BY ((CASE WHEN v0.c1 THEN v0.c3 ELSE v0.c4 END)IS((v0.c1 IN ()))) ASC, 0.30249951042718315 DESC, v0.c1, CAST(((v0.c0)/(NULL)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c3 IN ())) NOT BETWEEN (((v0.c3) ISNULL)) AND (((NULL)>(t0.c96))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((t0.c96) BETWEEN ((((v0.c1))<((v0.c1)))) AND (((t0.c96)GLOB(v0.c3)))) ORDER BY ((CASE WHEN v0.c1 THEN v0.c3 ELSE v0.c4 END)IS((v0.c1 IN ()))) ASC, 0.30249951042718315 DESC, v0.c1, CAST(((v0.c0)/(NULL)) AS TEXT));
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON ((t0.c96) BETWEEN ((((v0.c1))<((v0.c1)))) AND (((t0.c96)GLOB(v0.c3)))) WHERE ((((v0.c3 IN ())) NOT BETWEEN (((v0.c3) ISNULL)) AND (((NULL)>(t0.c96))))) ORDER BY ((CASE WHEN v0.c1 THEN v0.c3 ELSE v0.c4 END)IS((v0.c1 IN ()))) ASC, 0.30249951042718315 DESC, v0.c1, CAST(((v0.c0)/(NULL)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c3 IN ())) NOT BETWEEN (((v0.c3) ISNULL)) AND (((NULL)>(t0.c96))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((t0.c96) BETWEEN ((((v0.c1))<((v0.c1)))) AND (((t0.c96)GLOB(v0.c3)))) ORDER BY ((CASE WHEN v0.c1 THEN v0.c3 ELSE v0.c4 END)IS((v0.c1 IN ()))) ASC, 0.30249951042718315 DESC, v0.c1, CAST(((v0.c0)/(NULL)) AS TEXT));
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON ((t0.c96) BETWEEN ((((v0.c1))<((v0.c1)))) AND (((t0.c96)GLOB(v0.c3)))) WHERE ((((v0.c3 IN ())) NOT BETWEEN (((v0.c3) ISNULL)) AND (((NULL)>(t0.c96))))) ORDER BY ((CASE WHEN v0.c1 THEN v0.c3 ELSE v0.c4 END)IS((v0.c1 IN ()))) ASC, 0.30249951042718315 DESC, v0.c1, CAST(((v0.c0)/(NULL)) AS TEXT);
SELECT ALL COUNT(*) FROM t1 WHERE ((- (((t1.c0)IS NOT(NULL))))) ORDER BY ((((t1.c0)<<(t1.c0))) BETWEEN ((t1.c0 IN (t1.c0))) AND (((((t1.c0)AND(t1.c0)))AND(t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((t1.c0)IS NOT(NULL))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)<<(t1.c0))) BETWEEN ((t1.c0 IN (t1.c0))) AND (((((t1.c0)AND(t1.c0)))AND(t1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((- (((t1.c0)IS NOT(NULL))))) ORDER BY ((((t1.c0)<<(t1.c0))) BETWEEN ((t1.c0 IN (t1.c0))) AND (((((t1.c0)AND(t1.c0)))AND(t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((t1.c0)IS NOT(NULL))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)<<(t1.c0))) BETWEEN ((t1.c0 IN (t1.c0))) AND (((((t1.c0)AND(t1.c0)))AND(t1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((- (((t1.c0)IS NOT(NULL))))) ORDER BY ((((t1.c0)<<(t1.c0))) BETWEEN ((t1.c0 IN (t1.c0))) AND (((((t1.c0)AND(t1.c0)))AND(t1.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (((((CAST(v0.c0 AS REAL))OR(t0.c96)))AND(((t0.c96)%(v0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS REAL))OR(t0.c96)))AND(((t0.c96)%(v0.c4))))) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (((((CAST(v0.c0 AS REAL))OR(t0.c96)))AND(((t0.c96)%(v0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS REAL))OR(t0.c96)))AND(((t0.c96)%(v0.c4))))) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (((((CAST(v0.c0 AS REAL))OR(t0.c96)))AND(((t0.c96)%(v0.c4)))));
SELECT * FROM v0, t0, t1 WHERE (HEX(((v0.c2)OR(v0.c0)))) ORDER BY t0.c96 COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((v0.c2)OR(v0.c0)))) IS TRUE)  as count FROM v0, t0, t1 ORDER BY t0.c96 COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM v0, t0, t1 WHERE (HEX(((v0.c2)OR(v0.c0)))) ORDER BY t0.c96 COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((v0.c2)OR(v0.c0)))) IS TRUE)  as count FROM v0, t0, t1 ORDER BY t0.c96 COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM v0, t0, t1 WHERE (HEX(((v0.c2)OR(v0.c0)))) ORDER BY t0.c96 COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL * FROM t0, v0 WHERE ((((v0.c1)) BETWEEN ((((v0.c4) BETWEEN (v0.c3) AND (v0.c4)))) AND ((((((((((v0.c4)OR(v0.c3)))OR(v0.c3)))AND(v0.c0)))OR(v0.c2)))))) ORDER BY CAST(v0.c1 COLLATE BINARY AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) BETWEEN ((((v0.c4) BETWEEN (v0.c3) AND (v0.c4)))) AND ((((((((((v0.c4)OR(v0.c3)))OR(v0.c3)))AND(v0.c0)))OR(v0.c2)))))) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(v0.c1 COLLATE BINARY AS INTEGER) ASC);
SELECT ALL * FROM t0, v0 WHERE ((((v0.c1)) BETWEEN ((((v0.c4) BETWEEN (v0.c3) AND (v0.c4)))) AND ((((((((((v0.c4)OR(v0.c3)))OR(v0.c3)))AND(v0.c0)))OR(v0.c2)))))) ORDER BY CAST(v0.c1 COLLATE BINARY AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) BETWEEN ((((v0.c4) BETWEEN (v0.c3) AND (v0.c4)))) AND ((((((((((v0.c4)OR(v0.c3)))OR(v0.c3)))AND(v0.c0)))OR(v0.c2)))))) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(v0.c1 COLLATE BINARY AS INTEGER) ASC);
SELECT ALL * FROM t0, v0 WHERE ((((v0.c1)) BETWEEN ((((v0.c4) BETWEEN (v0.c3) AND (v0.c4)))) AND ((((((((((v0.c4)OR(v0.c3)))OR(v0.c3)))AND(v0.c0)))OR(v0.c2)))))) ORDER BY CAST(v0.c1 COLLATE BINARY AS INTEGER) ASC;
SELECT ALL * FROM v0 LEFT OUTER JOIN t1 ON (~ (HEX(DISTINCT v0.c2))) WHERE ((((v0.c0) IS TRUE) IN (((v0.c0)>(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) IS TRUE) IN (((v0.c0)>(v0.c2))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t1 ON (~ (HEX(DISTINCT v0.c2))));
SELECT ALL * FROM v0 LEFT OUTER JOIN t1 ON (~ (HEX(DISTINCT v0.c2))) WHERE ((((v0.c0) IS TRUE) IN (((v0.c0)>(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) IS TRUE) IN (((v0.c0)>(v0.c2))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t1 ON (~ (HEX(DISTINCT v0.c2))));
SELECT ALL * FROM v0 LEFT OUTER JOIN t1 ON (~ (HEX(DISTINCT v0.c2))) WHERE ((((v0.c0) IS TRUE) IN (((v0.c0)>(v0.c2)))));
SELECT ALL * FROM t1 WHERE (TYPEOF((t1.c0 IN ()))) ORDER BY PRINTF(t1.c0 COLLATE RTRIM, UPPER(DISTINCT t1.c0), ((t1.c0)AND(t1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((t1.c0 IN ()))) IS TRUE)  as count FROM t1 ORDER BY PRINTF(t1.c0 COLLATE RTRIM, UPPER(DISTINCT t1.c0), ((t1.c0)AND(t1.c0))) DESC);
SELECT ALL * FROM t1 WHERE (TYPEOF((t1.c0 IN ()))) ORDER BY PRINTF(t1.c0 COLLATE RTRIM, UPPER(DISTINCT t1.c0), ((t1.c0)AND(t1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((t1.c0 IN ()))) IS TRUE)  as count FROM t1 ORDER BY PRINTF(t1.c0 COLLATE RTRIM, UPPER(DISTINCT t1.c0), ((t1.c0)AND(t1.c0))) DESC);
SELECT ALL * FROM t1 WHERE (TYPEOF((t1.c0 IN ()))) ORDER BY PRINTF(t1.c0 COLLATE RTRIM, UPPER(DISTINCT t1.c0), ((t1.c0)AND(t1.c0))) DESC;
SELECT * FROM t1, v0 WHERE (((ABS(DISTINCT t1.c0)) BETWEEN (((x'')<(t1.c0))) AND ((NOT (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT t1.c0)) BETWEEN (((x'')<(t1.c0))) AND ((NOT (v0.c1))))) IS TRUE)  as count FROM t1, v0);
SELECT * FROM t1, v0 WHERE (((ABS(DISTINCT t1.c0)) BETWEEN (((x'')<(t1.c0))) AND ((NOT (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT t1.c0)) BETWEEN (((x'')<(t1.c0))) AND ((NOT (v0.c1))))) IS TRUE)  as count FROM t1, v0);
SELECT * FROM t1, v0 WHERE (((ABS(DISTINCT t1.c0)) BETWEEN (((x'')<(t1.c0))) AND ((NOT (v0.c1)))));
SELECT ALL COUNT(*) FROM v0, t0, t1 WHERE (((NULL) NOT NULL)) ORDER BY CAST(((v0.c2) ISNULL) AS REAL) ASC, (('-545328602')>=('')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL)) IS TRUE)  as count FROM v0, t0, t1 ORDER BY CAST(((v0.c2) ISNULL) AS REAL) ASC, (('-545328602')>=('')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, t1 WHERE (((NULL) NOT NULL)) ORDER BY CAST(((v0.c2) ISNULL) AS REAL) ASC, (('-545328602')>=('')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL)) IS TRUE)  as count FROM v0, t0, t1 ORDER BY CAST(((v0.c2) ISNULL) AS REAL) ASC, (('-545328602')>=('')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, t1 WHERE (((NULL) NOT NULL)) ORDER BY CAST(((v0.c2) ISNULL) AS REAL) ASC, (('-545328602')>=('')) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY ((((t1.c0)==(t1.c0)))<=(((t1.c0)>(t1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)=(t1.c0)))<=(((t1.c0)>(t1.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY ((((t1.c0)==(t1.c0)))<=(((t1.c0)>(t1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)=(t1.c0)))<=(((t1.c0)>(t1.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY ((((t1.c0)==(t1.c0)))<=(((t1.c0)>(t1.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM t1 RIGHT OUTER JOIN t0 ON 0.7063324003174127 FULL OUTER JOIN v0 ON x'' WHERE ((((((t0.c96) BETWEEN (t1.c0) AND (v0.c0)), ((v0.c4)==(v0.c1)), t1.c0))<((t1.c0, v0.c3, CASE v0.c2  WHEN t0.c96 THEN v0.c0 WHEN v0.c3 THEN 'rms' WHEN x'' THEN v0.c3 ELSE '' END))));
SELECT SUM(count) FROM (SELECT (((((((t0.c96) BETWEEN (t1.c0) AND (v0.c0)), ((v0.c4)==(v0.c1)), t1.c0))<((t1.c0, v0.c3, CASE v0.c2  WHEN t0.c96 THEN v0.c0 WHEN v0.c3 THEN 'rms' WHEN x'' THEN v0.c3 ELSE '' END)))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN t0 ON 0.7063324003174127 FULL OUTER JOIN v0 ON x'');
SELECT ALL * FROM t1 RIGHT OUTER JOIN t0 ON 0.7063324003174127 FULL OUTER JOIN v0 ON x'' WHERE ((((((t0.c96) BETWEEN (t1.c0) AND (v0.c0)), ((v0.c4)==(v0.c1)), t1.c0))<((t1.c0, v0.c3, CASE v0.c2  WHEN t0.c96 THEN v0.c0 WHEN v0.c3 THEN 'rms' WHEN x'' THEN v0.c3 ELSE '' END))));
SELECT SUM(count) FROM (SELECT (((((((t0.c96) BETWEEN (t1.c0) AND (v0.c0)), ((v0.c4)==(v0.c1)), t1.c0))<((t1.c0, v0.c3, CASE v0.c2  WHEN t0.c96 THEN v0.c0 WHEN v0.c3 THEN 'rms' WHEN x'' THEN v0.c3 ELSE '' END)))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN t0 ON 0.7063324003174127 FULL OUTER JOIN v0 ON x'');
SELECT ALL * FROM t1 RIGHT OUTER JOIN t0 ON 0.7063324003174127 FULL OUTER JOIN v0 ON x'' WHERE ((((((t0.c96) BETWEEN (t1.c0) AND (v0.c0)), ((v0.c4)==(v0.c1)), t1.c0))<((t1.c0, v0.c3, CASE v0.c2  WHEN t0.c96 THEN v0.c0 WHEN v0.c3 THEN 'rms' WHEN x'' THEN v0.c3 ELSE '' END))));
SELECT * FROM t1, t0 FULL OUTER JOIN v0 ON ((((v0.c3) NOT BETWEEN (v0.c2) AND (t0.c96))) NOT NULL) WHERE (((CAST(t1.c0 AS REAL))GLOB((- (v0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS REAL))GLOB((- (v0.c4))))) IS TRUE)  as count FROM t1, t0 FULL OUTER JOIN v0 ON ((((v0.c3) NOT BETWEEN (v0.c2) AND (t0.c96))) NOT NULL));
SELECT * FROM t1, t0 FULL OUTER JOIN v0 ON ((((v0.c3) NOT BETWEEN (v0.c2) AND (t0.c96))) NOT NULL) WHERE (((CAST(t1.c0 AS REAL))GLOB((- (v0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS REAL))GLOB((- (v0.c4))))) IS TRUE)  as count FROM t1, t0 FULL OUTER JOIN v0 ON ((((v0.c3) NOT BETWEEN (v0.c2) AND (t0.c96))) NOT NULL));
SELECT * FROM t1, t0 FULL OUTER JOIN v0 ON ((((v0.c3) NOT BETWEEN (v0.c2) AND (t0.c96))) NOT NULL) WHERE (((CAST(t1.c0 AS REAL))GLOB((- (v0.c4)))));
SELECT ALL COUNT(*) FROM t1, t0, v0 WHERE (((((t0.c96 IN (t0.c96, x''))))>((COALESCE(DISTINCT v0.c4, v0.c1))))) ORDER BY (((v0.c1) IS FALSE) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c96 IN (t0.c96, x''))))>((COALESCE(DISTINCT v0.c4, v0.c1))))) IS TRUE)  as count FROM t1, t0, v0 ORDER BY (((v0.c1) IS FALSE) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, t0, v0 WHERE (((((t0.c96 IN (t0.c96, x''))))>((COALESCE(DISTINCT v0.c4, v0.c1))))) ORDER BY (((v0.c1) IS FALSE) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c96 IN (t0.c96, x''))))>((COALESCE(DISTINCT v0.c4, v0.c1))))) IS TRUE)  as count FROM t1, t0, v0 ORDER BY (((v0.c1) IS FALSE) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, t0, v0 WHERE (((((t0.c96 IN (t0.c96, x''))))>((COALESCE(DISTINCT v0.c4, v0.c1))))) ORDER BY (((v0.c1) IS FALSE) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOTNULL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOTNULL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOTNULL));
SELECT ALL * FROM t0 WHERE (((((((t0.c96)OR(t0.c96)))OR(t0.c96))) NOT BETWEEN (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96))) AND ((((t0.c96, t0.c96, t0.c96)) NOT BETWEEN ((t0.c96, t0.c96, t0.c96)) AND ((t0.c96, t0.c96, t0.c96))))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c96)OR(t0.c96)))OR(t0.c96))) NOT BETWEEN (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96))) AND ((((t0.c96, t0.c96, t0.c96)) NOT BETWEEN ((t0.c96, t0.c96, t0.c96)) AND ((t0.c96, t0.c96, t0.c96)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c96)OR(t0.c96)))OR(t0.c96))) NOT BETWEEN (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96))) AND ((((t0.c96, t0.c96, t0.c96)) NOT BETWEEN ((t0.c96, t0.c96, t0.c96)) AND ((t0.c96, t0.c96, t0.c96))))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c96)OR(t0.c96)))OR(t0.c96))) NOT BETWEEN (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96))) AND ((((t0.c96, t0.c96, t0.c96)) NOT BETWEEN ((t0.c96, t0.c96, t0.c96)) AND ((t0.c96, t0.c96, t0.c96)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c96)OR(t0.c96)))OR(t0.c96))) NOT BETWEEN (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96))) AND ((((t0.c96, t0.c96, t0.c96)) NOT BETWEEN ((t0.c96, t0.c96, t0.c96)) AND ((t0.c96, t0.c96, t0.c96))))));
SELECT * FROM t0 NOT INDEXED WHERE ((((- (t0.c96))) BETWEEN ('1407711417') AND ((- (t0.c96)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c96))) BETWEEN ('1407711417') AND ((- (t0.c96))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 NOT INDEXED WHERE ((((- (t0.c96))) BETWEEN ('1407711417') AND ((- (t0.c96)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c96))) BETWEEN ('1407711417') AND ((- (t0.c96))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 NOT INDEXED WHERE ((((- (t0.c96))) BETWEEN ('1407711417') AND ((- (t0.c96)))));
SELECT * FROM v0, t1 WHERE (((((((v0.c3)) BETWEEN ((v0.c0)) AND ((v0.c0)))))>(((~ (v0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c3)) BETWEEN ((v0.c0)) AND ((v0.c0)))))>(((~ (v0.c3)))))) IS TRUE)  as count FROM v0, t1);
SELECT * FROM v0, t1 WHERE (((((((v0.c3)) BETWEEN ((v0.c0)) AND ((v0.c0)))))>(((~ (v0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c3)) BETWEEN ((v0.c0)) AND ((v0.c0)))))>(((~ (v0.c3)))))) IS TRUE)  as count FROM v0, t1);
SELECT * FROM v0, t1 WHERE (((((((v0.c3)) BETWEEN ((v0.c0)) AND ((v0.c0)))))>(((~ (v0.c3))))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c4 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((v0.c4 COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c4 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((v0.c4 COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c4 COLLATE NOCASE);
SELECT COUNT(*) FROM t1, t0, v0 WHERE (CAST('[<\rk' AS TEXT)) ORDER BY ((CAST(t0.c96 AS REAL)) NOT BETWEEN ((((t0.c96, t1.c0, 180718912)) NOT BETWEEN ((v0.c0, v0.c2, t1.c0)) AND ((t0.c96, t1.c0, t1.c0)))) AND (((('-1827171611', v0.c2, t0.c96, t1.c0, v0.c2)) NOT BETWEEN ((v0.c3, v0.c3, x'afb1', t0.c96, t0.c96)) AND ((v0.c0, v0.c4, x'c859', x'', v0.c4)))));
SELECT SUM(count) FROM (SELECT ((CAST('[<\rk' AS TEXT)) IS TRUE)  as count FROM t1, t0, v0 ORDER BY ((CAST(t0.c96 AS REAL)) NOT BETWEEN ((((t0.c96, t1.c0, 180718912)) NOT BETWEEN ((v0.c0, v0.c2, t1.c0)) AND ((t0.c96, t1.c0, t1.c0)))) AND (((('-1827171611', v0.c2, t0.c96, t1.c0, v0.c2)) NOT BETWEEN ((v0.c3, v0.c3, x'afb1', t0.c96, t0.c96)) AND ((v0.c0, v0.c4, x'c859', x'', v0.c4))))));
SELECT COUNT(*) FROM t1, t0, v0 WHERE (CAST('[<\rk' AS TEXT)) ORDER BY ((CAST(t0.c96 AS REAL)) NOT BETWEEN ((((t0.c96, t1.c0, 180718912)) NOT BETWEEN ((v0.c0, v0.c2, t1.c0)) AND ((t0.c96, t1.c0, t1.c0)))) AND (((('-1827171611', v0.c2, t0.c96, t1.c0, v0.c2)) NOT BETWEEN ((v0.c3, v0.c3, x'afb1', t0.c96, t0.c96)) AND ((v0.c0, v0.c4, x'c859', x'', v0.c4)))));
SELECT SUM(count) FROM (SELECT ((CAST('[<\rk' AS TEXT)) IS TRUE)  as count FROM t1, t0, v0 ORDER BY ((CAST(t0.c96 AS REAL)) NOT BETWEEN ((((t0.c96, t1.c0, 180718912)) NOT BETWEEN ((v0.c0, v0.c2, t1.c0)) AND ((t0.c96, t1.c0, t1.c0)))) AND (((('-1827171611', v0.c2, t0.c96, t1.c0, v0.c2)) NOT BETWEEN ((v0.c3, v0.c3, x'afb1', t0.c96, t0.c96)) AND ((v0.c0, v0.c4, x'c859', x'', v0.c4))))));
SELECT COUNT(*) FROM t1, t0, v0 WHERE (CAST('[<\rk' AS TEXT)) ORDER BY ((CAST(t0.c96 AS REAL)) NOT BETWEEN ((((t0.c96, t1.c0, 180718912)) NOT BETWEEN ((v0.c0, v0.c2, t1.c0)) AND ((t0.c96, t1.c0, t1.c0)))) AND (((('-1827171611', v0.c2, t0.c96, t1.c0, v0.c2)) NOT BETWEEN ((v0.c3, v0.c3, x'afb1', t0.c96, t0.c96)) AND ((v0.c0, v0.c4, x'c859', x'', v0.c4)))));
SELECT * FROM v0, t1, t0 WHERE (((t1.c0 COLLATE NOCASE)<((((('')OR(v0.c0)))AND(t1.c0))))) ORDER BY ((t1.c0) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE NOCASE)<((((('')OR(v0.c0)))AND(t1.c0))))) IS TRUE)  as count FROM v0, t1, t0 ORDER BY ((t1.c0) NOTNULL) DESC);
SELECT * FROM v0, t1, t0 WHERE (((t1.c0 COLLATE NOCASE)<((((('')OR(v0.c0)))AND(t1.c0))))) ORDER BY ((t1.c0) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE NOCASE)<((((('')OR(v0.c0)))AND(t1.c0))))) IS TRUE)  as count FROM v0, t1, t0 ORDER BY ((t1.c0) NOTNULL) DESC);
SELECT * FROM v0, t1, t0 WHERE (((t1.c0 COLLATE NOCASE)<((((('')OR(v0.c0)))AND(t1.c0))))) ORDER BY ((t1.c0) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM t0, t1 WHERE ((NOT (((t1.c0)==(0.2802074386893354))))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c0)=(0.2802074386893354))))) IS TRUE)  as count FROM t0, t1 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1 WHERE ((NOT (((t1.c0)==(0.2802074386893354))))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c0)=(0.2802074386893354))))) IS TRUE)  as count FROM t0, t1 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1 WHERE ((NOT (((t1.c0)==(0.2802074386893354))))) ORDER BY NULL ASC  NULLS LAST;
SELECT * FROM t0, t1, v0 WHERE (((v0.c3 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c3 IN ()) IN ())) IS TRUE)  as count FROM t0, t1, v0);
SELECT * FROM t0, t1, v0 WHERE (((v0.c3 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c3 IN ()) IN ())) IS TRUE)  as count FROM t0, t1, v0);
SELECT * FROM t0, t1, v0 WHERE (((v0.c3 IN ()) IN ()));
SELECT ALL * FROM t1 LEFT OUTER JOIN v0 ON ((CASE t1.c0  WHEN '\m' THEN v0.c2 END) BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((v0.c1 IN (v0.c2, t1.c0)))) WHERE ((((((v0.c4)) NOT BETWEEN ((v0.c0)) AND ((t1.c0))))-((+ (v0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c4)) NOT BETWEEN ((v0.c0)) AND ((t1.c0))))-((+ (v0.c3))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN v0 ON ((CASE t1.c0  WHEN '\m' THEN v0.c2 END) BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((v0.c1 IN (v0.c2, t1.c0)))));
SELECT ALL * FROM t1 LEFT OUTER JOIN v0 ON ((CASE t1.c0  WHEN '\m' THEN v0.c2 END) BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((v0.c1 IN (v0.c2, t1.c0)))) WHERE ((((((v0.c4)) NOT BETWEEN ((v0.c0)) AND ((t1.c0))))-((+ (v0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c4)) NOT BETWEEN ((v0.c0)) AND ((t1.c0))))-((+ (v0.c3))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN v0 ON ((CASE t1.c0  WHEN '\m' THEN v0.c2 END) BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((v0.c1 IN (v0.c2, t1.c0)))));
SELECT ALL * FROM t1 LEFT OUTER JOIN v0 ON ((CASE t1.c0  WHEN '\m' THEN v0.c2 END) BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((v0.c1 IN (v0.c2, t1.c0)))) WHERE ((((((v0.c4)) NOT BETWEEN ((v0.c0)) AND ((t1.c0))))-((+ (v0.c3)))));
SELECT * FROM t1, t0 WHERE (((x'')-(0.36242570337024804)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')-(0.36242570337024804))) IS TRUE)  as count FROM t1, t0);
SELECT * FROM t1, t0 WHERE (((x'')-(0.36242570337024804)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')-(0.36242570337024804))) IS TRUE)  as count FROM t1, t0);
SELECT * FROM t1, t0 WHERE (((x'')-(0.36242570337024804)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c96 IN ()))>=((~ (t0.c96))))) ORDER BY ((((x'' IN ())))==((t0.c96 COLLATE RTRIM)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c96 IN ()))>=((~ (t0.c96))))) IS TRUE)  as count FROM t0 ORDER BY ((((x'' IN ())))=((t0.c96 COLLATE RTRIM)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c96 IN ()))>=((~ (t0.c96))))) ORDER BY ((((x'' IN ())))==((t0.c96 COLLATE RTRIM)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c96 IN ()))>=((~ (t0.c96))))) IS TRUE)  as count FROM t0 ORDER BY ((((x'' IN ())))=((t0.c96 COLLATE RTRIM)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c96 IN ()))>=((~ (t0.c96))))) ORDER BY ((((x'' IN ())))==((t0.c96 COLLATE RTRIM)))  NULLS FIRST;
SELECT * FROM v0 WHERE ((~ (v0.c2 COLLATE BINARY))) ORDER BY v0.c1 DESC  NULLS FIRST, x'' ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY v0.c1 DESC  NULLS FIRST, x'' ASC);
SELECT * FROM v0 WHERE ((~ (v0.c2 COLLATE BINARY))) ORDER BY v0.c1 DESC  NULLS FIRST, x'' ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY v0.c1 DESC  NULLS FIRST, x'' ASC);
SELECT * FROM v0 WHERE ((~ (v0.c2 COLLATE BINARY))) ORDER BY v0.c1 DESC  NULLS FIRST, x'' ASC;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)*(t1.c0))) NOT BETWEEN (LIKELY(t1.c0)) AND (((t1.c0) ISNULL)))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)*(t1.c0))) NOT BETWEEN (LIKELY(t1.c0)) AND (((t1.c0) ISNULL)))) IS TRUE)  as count FROM t1 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)*(t1.c0))) NOT BETWEEN (LIKELY(t1.c0)) AND (((t1.c0) ISNULL)))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)*(t1.c0))) NOT BETWEEN (LIKELY(t1.c0)) AND (((t1.c0) ISNULL)))) IS TRUE)  as count FROM t1 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)*(t1.c0))) NOT BETWEEN (LIKELY(t1.c0)) AND (((t1.c0) ISNULL)))) ORDER BY NULL ASC;
SELECT ALL * FROM t0, t1, v0 WHERE (((((v0.c1) ISNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) ISNULL)) NOT NULL)) IS TRUE)  as count FROM t0, t1, v0);
SELECT ALL * FROM t0, t1, v0 WHERE (((((v0.c1) ISNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) ISNULL)) NOT NULL)) IS TRUE)  as count FROM t0, t1, v0);
SELECT ALL * FROM t0, t1, v0 WHERE (((((v0.c1) ISNULL)) NOT NULL));
SELECT ALL COUNT(*) FROM t1, t0 WHERE (UPPER(DISTINCT NULL)) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT NULL)) IS TRUE)  as count FROM t1, t0 ORDER BY x''  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (UPPER(DISTINCT NULL)) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT NULL)) IS TRUE)  as count FROM t1, t0 ORDER BY x''  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (UPPER(DISTINCT NULL)) ORDER BY x''  NULLS LAST;
SELECT * FROM t0 WHERE (((('0.5412366051199817'))>((((t0.c96) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ((((('0.5412366051199817'))>((((t0.c96) IS TRUE))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((('0.5412366051199817'))>((((t0.c96) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ((((('0.5412366051199817'))>((((t0.c96) IS TRUE))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((('0.5412366051199817'))>((((t0.c96) IS TRUE)))));
SELECT * FROM v0 WHERE (((((((((v0.c1)AND(v0.c4)))AND(v0.c1)))OR(CASE WHEN v0.c0 THEN v0.c4 WHEN x'' THEN x'' WHEN v0.c4 THEN v0.c2 WHEN v0.c1 THEN v0.c3 WHEN v0.c0 THEN 'xB' ELSE v0.c3 END)))AND(((v0.c0)IS NOT(v0.c1))))) ORDER BY ((((((v0.c0)AND(NULL)))OR(v0.c0)))|(CASE WHEN v0.c4 THEN v0.c1 ELSE v0.c3 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((v0.c1)AND(v0.c4)))AND(v0.c1)))OR(CASE WHEN v0.c0 THEN v0.c4 WHEN x'' THEN x'' WHEN v0.c4 THEN v0.c2 WHEN v0.c1 THEN v0.c3 WHEN v0.c0 THEN 'xB' ELSE v0.c3 END)))AND(((v0.c0)IS NOT(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)AND(NULL)))OR(v0.c0)))|(CASE WHEN v0.c4 THEN v0.c1 ELSE v0.c3 END)) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((((((v0.c1)AND(v0.c4)))AND(v0.c1)))OR(CASE WHEN v0.c0 THEN v0.c4 WHEN x'' THEN x'' WHEN v0.c4 THEN v0.c2 WHEN v0.c1 THEN v0.c3 WHEN v0.c0 THEN 'xB' ELSE v0.c3 END)))AND(((v0.c0)IS NOT(v0.c1))))) ORDER BY ((((((v0.c0)AND(NULL)))OR(v0.c0)))|(CASE WHEN v0.c4 THEN v0.c1 ELSE v0.c3 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((v0.c1)AND(v0.c4)))AND(v0.c1)))OR(CASE WHEN v0.c0 THEN v0.c4 WHEN x'' THEN x'' WHEN v0.c4 THEN v0.c2 WHEN v0.c1 THEN v0.c3 WHEN v0.c0 THEN 'xB' ELSE v0.c3 END)))AND(((v0.c0)IS NOT(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)AND(NULL)))OR(v0.c0)))|(CASE WHEN v0.c4 THEN v0.c1 ELSE v0.c3 END)) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((((((v0.c1)AND(v0.c4)))AND(v0.c1)))OR(CASE WHEN v0.c0 THEN v0.c4 WHEN x'' THEN x'' WHEN v0.c4 THEN v0.c2 WHEN v0.c1 THEN v0.c3 WHEN v0.c0 THEN 'xB' ELSE v0.c3 END)))AND(((v0.c0)IS NOT(v0.c1))))) ORDER BY ((((((v0.c0)AND(NULL)))OR(v0.c0)))|(CASE WHEN v0.c4 THEN v0.c1 ELSE v0.c3 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (TYPEOF(((t1.c0)IS(t1.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((t1.c0)IS(t1.c0)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (TYPEOF(((t1.c0)IS(t1.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((t1.c0)IS(t1.c0)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (TYPEOF(((t1.c0)IS(t1.c0))));
SELECT ALL * FROM t0, v0 WHERE ((((((v0.c0))>=((v0.c0)))) ISNULL)) ORDER BY CAST(PRINTF(v0.c0) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))>=((v0.c0)))) ISNULL)) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(PRINTF(v0.c0) AS TEXT)  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE ((((((v0.c0))>=((v0.c0)))) ISNULL)) ORDER BY CAST(PRINTF(v0.c0) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))>=((v0.c0)))) ISNULL)) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(PRINTF(v0.c0) AS TEXT)  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE ((((((v0.c0))>=((v0.c0)))) ISNULL)) ORDER BY CAST(PRINTF(v0.c0) AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM t0, t1 NATURAL JOIN v0 WHERE ((- (((t0.c96) NOT BETWEEN (v0.c4) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c96) NOT BETWEEN (v0.c4) AND (v0.c2))))) IS TRUE)  as count FROM t0, t1 NATURAL JOIN v0);
SELECT COUNT(*) FROM t0, t1 NATURAL JOIN v0 WHERE ((- (((t0.c96) NOT BETWEEN (v0.c4) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c96) NOT BETWEEN (v0.c4) AND (v0.c2))))) IS TRUE)  as count FROM t0, t1 NATURAL JOIN v0);
SELECT COUNT(*) FROM t0, t1 NATURAL JOIN v0 WHERE ((- (((t0.c96) NOT BETWEEN (v0.c4) AND (v0.c2)))));
SELECT * FROM t0 LEFT OUTER JOIN v0 ON 0.6144200083467175 INNER JOIN t1 ON t1.c0 WHERE (CAST(t0.c96 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c96 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON 0.6144200083467175 INNER JOIN t1 ON t1.c0);
SELECT * FROM t0 LEFT OUTER JOIN v0 ON 0.6144200083467175 INNER JOIN t1 ON t1.c0 WHERE (CAST(t0.c96 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c96 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON 0.6144200083467175 INNER JOIN t1 ON t1.c0);
SELECT * FROM t0 LEFT OUTER JOIN v0 ON 0.6144200083467175 INNER JOIN t1 ON t1.c0 WHERE (CAST(t0.c96 COLLATE BINARY AS INTEGER));
SELECT ALL COUNT(*) FROM t0 WHERE ((((- (t0.c96))) NOT NULL)) ORDER BY 0X58fa2b0e ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c96))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY 0x58fa2b0e ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((- (t0.c96))) NOT NULL)) ORDER BY 0X58fa2b0e ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c96))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY 0x58fa2b0e ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (((t1.c0)OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c0)OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c0)OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT * FROM t1, t0 WHERE (((TRIM(t1.c0)) BETWEEN (CHANGES()) AND ((((t1.c0, t0.c96, t0.c96)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, 0.29185589312804816, t0.c96)))))) ORDER BY t0.c96  NULLS FIRST, '' COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((TRIM(t1.c0)) BETWEEN (CHANGES()) AND ((((t1.c0, t0.c96, t0.c96)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, 0.29185589312804816, t0.c96)))))) IS TRUE)  as count FROM t1, t0 ORDER BY t0.c96  NULLS FIRST, '' COLLATE BINARY ASC);
SELECT * FROM t1, t0 WHERE (((TRIM(t1.c0)) BETWEEN (CHANGES()) AND ((((t1.c0, t0.c96, t0.c96)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, 0.29185589312804816, t0.c96)))))) ORDER BY t0.c96  NULLS FIRST, '' COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((TRIM(t1.c0)) BETWEEN (CHANGES()) AND ((((t1.c0, t0.c96, t0.c96)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, 0.29185589312804816, t0.c96)))))) IS TRUE)  as count FROM t1, t0 ORDER BY t0.c96  NULLS FIRST, '' COLLATE BINARY ASC);
SELECT * FROM t1, t0 WHERE (((TRIM(t1.c0)) BETWEEN (CHANGES()) AND ((((t1.c0, t0.c96, t0.c96)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, 0.29185589312804816, t0.c96)))))) ORDER BY t0.c96  NULLS FIRST, '' COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((- (TRIM(DISTINCT v0.c2, v0.c2)))) ORDER BY ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (TRIM(DISTINCT v0.c2, v0.c2)))) IS TRUE)  as count FROM v0 ORDER BY ''  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (TRIM(DISTINCT v0.c2, v0.c2)))) ORDER BY ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (TRIM(DISTINCT v0.c2, v0.c2)))) IS TRUE)  as count FROM v0 ORDER BY ''  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (TRIM(DISTINCT v0.c2, v0.c2)))) ORDER BY ''  NULLS FIRST;
SELECT * FROM t1 WHERE (((((((NULL)GLOB(t1.c0)))AND(json_object('-74101697', t1.c0))))OR(CASE t1.c0  WHEN 0.8080739279306509 THEN t1.c0 ELSE '>Q' END)));
SELECT SUM(count) FROM (SELECT ((((((((NULL)GLOB(t1.c0)))AND(json_object('-74101697', t1.c0))))OR(CASE t1.c0  WHEN 0.8080739279306509 THEN t1.c0 ELSE '>Q' END))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((((NULL)GLOB(t1.c0)))AND(json_object('-74101697', t1.c0))))OR(CASE t1.c0  WHEN 0.8080739279306509 THEN t1.c0 ELSE '>Q' END)));
SELECT SUM(count) FROM (SELECT ((((((((NULL)GLOB(t1.c0)))AND(json_object('-74101697', t1.c0))))OR(CASE t1.c0  WHEN 0.8080739279306509 THEN t1.c0 ELSE '>Q' END))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((((NULL)GLOB(t1.c0)))AND(json_object('-74101697', t1.c0))))OR(CASE t1.c0  WHEN 0.8080739279306509 THEN t1.c0 ELSE '>Q' END)));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN t0 ON (((((((((~ (v0.c3)))AND(((v0.c1)>=(t1.c0)))))AND(CAST(v0.c1 AS INTEGER))))AND('0.7790759432442008')))AND(LENGTH(v0.c0))) INNER JOIN v0 ON ((((CAST(v0.c1 AS NUMERIC))OR(v0.c3 COLLATE RTRIM)))OR(((((((((v0.c4)OR(v0.c1)))OR(v0.c4)))AND(v0.c2)))OR(v0.c0)))) WHERE ((((((v0.c3, v0.c0, v0.c2))==((t1.c0, v0.c1, v0.c0))))<>(((v0.c0)OR(v0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c3, v0.c0, v0.c2))==((t1.c0, v0.c1, v0.c0))))<>(((v0.c0)OR(v0.c4))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON (((((((((~ (v0.c3)))AND(((v0.c1)>=(t1.c0)))))AND(CAST(v0.c1 AS INTEGER))))AND('0.7790759432442008')))AND(LENGTH(v0.c0))) INNER JOIN v0 ON ((((CAST(v0.c1 AS NUMERIC))OR(v0.c3 COLLATE RTRIM)))OR(((((((((v0.c4)OR(v0.c1)))OR(v0.c4)))AND(v0.c2)))OR(v0.c0)))));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN t0 ON (((((((((~ (v0.c3)))AND(((v0.c1)>=(t1.c0)))))AND(CAST(v0.c1 AS INTEGER))))AND('0.7790759432442008')))AND(LENGTH(v0.c0))) INNER JOIN v0 ON ((((CAST(v0.c1 AS NUMERIC))OR(v0.c3 COLLATE RTRIM)))OR(((((((((v0.c4)OR(v0.c1)))OR(v0.c4)))AND(v0.c2)))OR(v0.c0)))) WHERE ((((((v0.c3, v0.c0, v0.c2))==((t1.c0, v0.c1, v0.c0))))<>(((v0.c0)OR(v0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c3, v0.c0, v0.c2))==((t1.c0, v0.c1, v0.c0))))<>(((v0.c0)OR(v0.c4))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON (((((((((~ (v0.c3)))AND(((v0.c1)>=(t1.c0)))))AND(CAST(v0.c1 AS INTEGER))))AND('0.7790759432442008')))AND(LENGTH(v0.c0))) INNER JOIN v0 ON ((((CAST(v0.c1 AS NUMERIC))OR(v0.c3 COLLATE RTRIM)))OR(((((((((v0.c4)OR(v0.c1)))OR(v0.c4)))AND(v0.c2)))OR(v0.c0)))));
SELECT ALL * FROM t0, v0, t1 WHERE ((~ (CASE v0.c0  WHEN v0.c2 THEN t1.c0 WHEN v0.c0 THEN '4x⧞W' WHEN v0.c4 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE v0.c0  WHEN v0.c2 THEN t1.c0 WHEN v0.c0 THEN '4x⧞W' WHEN v0.c4 THEN t1.c0 END))) IS TRUE)  as count FROM t0, v0, t1);
SELECT ALL * FROM t0, v0, t1 WHERE ((~ (CASE v0.c0  WHEN v0.c2 THEN t1.c0 WHEN v0.c0 THEN '4x⧞W' WHEN v0.c4 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE v0.c0  WHEN v0.c2 THEN t1.c0 WHEN v0.c0 THEN '4x⧞W' WHEN v0.c4 THEN t1.c0 END))) IS TRUE)  as count FROM t0, v0, t1);
SELECT ALL * FROM t0, v0, t1 WHERE ((~ (CASE v0.c0  WHEN v0.c2 THEN t1.c0 WHEN v0.c0 THEN '4x⧞W' WHEN v0.c4 THEN t1.c0 END)));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT ALL * FROM t0, v0, t1 WHERE ((~ (((v0.c3)IS NOT(v0.c3))))) ORDER BY (((v0.c3)|('鬑VjA')) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c3)IS NOT(v0.c3))))) IS TRUE)  as count FROM t0, v0, t1 ORDER BY (((v0.c3)|('鬑VjA')) IN ())  NULLS FIRST);
SELECT ALL * FROM t0, v0, t1 WHERE ((~ (((v0.c3)IS NOT(v0.c3))))) ORDER BY (((v0.c3)|('鬑VjA')) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c3)IS NOT(v0.c3))))) IS TRUE)  as count FROM t0, v0, t1 ORDER BY (((v0.c3)|('鬑VjA')) IN ())  NULLS FIRST);
SELECT ALL * FROM t0, v0, t1 WHERE ((~ (((v0.c3)IS NOT(v0.c3))))) ORDER BY (((v0.c3)|('鬑VjA')) IN ())  NULLS FIRST;
SELECT ALL * FROM t1 CROSS JOIN t0 ON ((INSTR(t1.c0, t1.c0))LIKE(t0.c96)) WHERE (((((((((((t1.c0) NOT BETWEEN (t0.c96) AND (t0.c96)))OR(json_extract(t1.c0, t0.c96))))AND(t0.c96 COLLATE BINARY)))AND((t1.c0 IN (t1.c0)))))AND((- (t1.c0))))) ORDER BY CAST(load_extension(t0.c96, t0.c96) AS REAL)  NULLS LAST, json_extract((NOT (t0.c96)), (NOT (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0) NOT BETWEEN (t0.c96) AND (t0.c96)))OR(json_extract(t1.c0, t0.c96))))AND(t0.c96 COLLATE BINARY)))AND((t1.c0 IN (t1.c0)))))AND((- (t1.c0))))) IS TRUE)  as count FROM t1 CROSS JOIN t0 ON ((INSTR(t1.c0, t1.c0))LIKE(t0.c96)) ORDER BY CAST(load_extension(t0.c96, t0.c96) AS REAL)  NULLS LAST, json_extract((NOT (t0.c96)), (NOT (t1.c0))));
SELECT ALL * FROM t1 CROSS JOIN t0 ON ((INSTR(t1.c0, t1.c0))LIKE(t0.c96)) WHERE (((((((((((t1.c0) NOT BETWEEN (t0.c96) AND (t0.c96)))OR(json_extract(t1.c0, t0.c96))))AND(t0.c96 COLLATE BINARY)))AND((t1.c0 IN (t1.c0)))))AND((- (t1.c0))))) ORDER BY CAST(load_extension(t0.c96, t0.c96) AS REAL)  NULLS LAST, json_extract((NOT (t0.c96)), (NOT (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0) NOT BETWEEN (t0.c96) AND (t0.c96)))OR(json_extract(t1.c0, t0.c96))))AND(t0.c96 COLLATE BINARY)))AND((t1.c0 IN (t1.c0)))))AND((- (t1.c0))))) IS TRUE)  as count FROM t1 CROSS JOIN t0 ON ((INSTR(t1.c0, t1.c0))LIKE(t0.c96)) ORDER BY CAST(load_extension(t0.c96, t0.c96) AS REAL)  NULLS LAST, json_extract((NOT (t0.c96)), (NOT (t1.c0))));
SELECT ALL * FROM t1 CROSS JOIN t0 ON ((INSTR(t1.c0, t1.c0))LIKE(t0.c96)) WHERE (((((((((((t1.c0) NOT BETWEEN (t0.c96) AND (t0.c96)))OR(json_extract(t1.c0, t0.c96))))AND(t0.c96 COLLATE BINARY)))AND((t1.c0 IN (t1.c0)))))AND((- (t1.c0))))) ORDER BY CAST(load_extension(t0.c96, t0.c96) AS REAL)  NULLS LAST, json_extract((NOT (t0.c96)), (NOT (t1.c0)));
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((428250423))))IS NOT(((((t1.c0)AND(t1.c0)))AND(t1.c0))))) ORDER BY ((x'')GLOB(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))), ((((x'') IS FALSE)) NOT BETWEEN (CASE WHEN t1.c0 THEN t1.c0 END) AND ('2098955162')) DESC;
SELECT SUM(count) FROM (SELECT (((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((428250423))))IS NOT(((((t1.c0)AND(t1.c0)))AND(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((x'')GLOB(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))), ((((x'') IS FALSE)) NOT BETWEEN (CASE WHEN t1.c0 THEN t1.c0 END) AND ('2098955162')) DESC);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((428250423))))IS NOT(((((t1.c0)AND(t1.c0)))AND(t1.c0))))) ORDER BY ((x'')GLOB(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))), ((((x'') IS FALSE)) NOT BETWEEN (CASE WHEN t1.c0 THEN t1.c0 END) AND ('2098955162')) DESC;
SELECT SUM(count) FROM (SELECT (((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((428250423))))IS NOT(((((t1.c0)AND(t1.c0)))AND(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((x'')GLOB(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))), ((((x'') IS FALSE)) NOT BETWEEN (CASE WHEN t1.c0 THEN t1.c0 END) AND ('2098955162')) DESC);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((428250423))))IS NOT(((((t1.c0)AND(t1.c0)))AND(t1.c0))))) ORDER BY ((x'')GLOB(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))), ((((x'') IS FALSE)) NOT BETWEEN (CASE WHEN t1.c0 THEN t1.c0 END) AND ('2098955162')) DESC;
SELECT ALL * FROM t1, t0 CROSS JOIN v0 ON CAST(t1.c0 COLLATE NOCASE AS NUMERIC) WHERE (CAST((((NULL, v0.c3, v0.c0))<=((v0.c0, t0.c96, v0.c1))) AS TEXT)) ORDER BY (((CASE x'9e0d'  WHEN v0.c0 THEN v0.c0 WHEN v0.c3 THEN v0.c0 WHEN v0.c3 THEN v0.c3 ELSE t0.c96 END))<=((((((((((v0.c3)AND(t0.c96)))AND(v0.c0)))AND(v0.c3)))AND(v0.c3)))));
SELECT SUM(count) FROM (SELECT ((CAST((((NULL, v0.c3, v0.c0))<=((v0.c0, t0.c96, v0.c1))) AS TEXT)) IS TRUE)  as count FROM t1, t0 CROSS JOIN v0 ON CAST(t1.c0 COLLATE NOCASE AS NUMERIC) ORDER BY (((CASE x'9e0d'  WHEN v0.c0 THEN v0.c0 WHEN v0.c3 THEN v0.c0 WHEN v0.c3 THEN v0.c3 ELSE t0.c96 END))<=((((((((((v0.c3)AND(t0.c96)))AND(v0.c0)))AND(v0.c3)))AND(v0.c3))))));
SELECT ALL * FROM t1, t0 CROSS JOIN v0 ON CAST(t1.c0 COLLATE NOCASE AS NUMERIC) WHERE (CAST((((NULL, v0.c3, v0.c0))<=((v0.c0, t0.c96, v0.c1))) AS TEXT)) ORDER BY (((CASE x'9e0d'  WHEN v0.c0 THEN v0.c0 WHEN v0.c3 THEN v0.c0 WHEN v0.c3 THEN v0.c3 ELSE t0.c96 END))<=((((((((((v0.c3)AND(t0.c96)))AND(v0.c0)))AND(v0.c3)))AND(v0.c3)))));
SELECT SUM(count) FROM (SELECT ((CAST((((NULL, v0.c3, v0.c0))<=((v0.c0, t0.c96, v0.c1))) AS TEXT)) IS TRUE)  as count FROM t1, t0 CROSS JOIN v0 ON CAST(t1.c0 COLLATE NOCASE AS NUMERIC) ORDER BY (((CASE x'9e0d'  WHEN v0.c0 THEN v0.c0 WHEN v0.c3 THEN v0.c0 WHEN v0.c3 THEN v0.c3 ELSE t0.c96 END))<=((((((((((v0.c3)AND(t0.c96)))AND(v0.c0)))AND(v0.c3)))AND(v0.c3))))));
SELECT ALL * FROM t1, t0 CROSS JOIN v0 ON CAST(t1.c0 COLLATE NOCASE AS NUMERIC) WHERE (CAST((((NULL, v0.c3, v0.c0))<=((v0.c0, t0.c96, v0.c1))) AS TEXT)) ORDER BY (((CASE x'9e0d'  WHEN v0.c0 THEN v0.c0 WHEN v0.c3 THEN v0.c0 WHEN v0.c3 THEN v0.c3 ELSE t0.c96 END))<=((((((((((v0.c3)AND(t0.c96)))AND(v0.c0)))AND(v0.c3)))AND(v0.c3)))));
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c96)AND(t0.c96)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c96)AND(t0.c96)) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c96)AND(t0.c96)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c96)AND(t0.c96)) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c96)AND(t0.c96)) IN ()));
SELECT ALL * FROM t0, v0 WHERE (v0.c4) ORDER BY ((((v0.c2 COLLATE RTRIM)OR(((v0.c0) ISNULL))))OR(v0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c4) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c2 COLLATE RTRIM)OR(((v0.c0) ISNULL))))OR(v0.c0))  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (v0.c4) ORDER BY ((((v0.c2 COLLATE RTRIM)OR(((v0.c0) ISNULL))))OR(v0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c4) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c2 COLLATE RTRIM)OR(((v0.c0) ISNULL))))OR(v0.c0))  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (v0.c4) ORDER BY ((((v0.c2 COLLATE RTRIM)OR(((v0.c0) ISNULL))))OR(v0.c0))  NULLS LAST;
SELECT ALL * FROM t0, t1 WHERE (0.6733237991463575);
SELECT SUM(count) FROM (SELECT ((0.6733237991463575) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t0, t1 WHERE (0.6733237991463575);
SELECT SUM(count) FROM (SELECT ((0.6733237991463575) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t0, t1 WHERE (0.6733237991463575);
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c4, v0.c2, v0.c3, v0.c0)) NOT BETWEEN (('-1092318929', v0.c2 COLLATE BINARY, CAST(v0.c3 AS TEXT), v0.c3, CAST(v0.c0 AS BLOB))) AND ((v0.c1, ((((v0.c4)AND(v0.c2)))OR(1624722940)), (~ (v0.c1)), ((v0.c4) IS FALSE), NULL)))) ORDER BY (+ (((v0.c2)AND(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c4, v0.c2, v0.c3, v0.c0)) NOT BETWEEN (('-1092318929', v0.c2 COLLATE BINARY, CAST(v0.c3 AS TEXT), v0.c3, CAST(v0.c0 AS BLOB))) AND ((v0.c1, ((((v0.c4)AND(v0.c2)))OR(1624722940)), (~ (v0.c1)), ((v0.c4) IS FALSE), NULL)))) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c2)AND(v0.c2)))));
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c4, v0.c2, v0.c3, v0.c0)) NOT BETWEEN (('-1092318929', v0.c2 COLLATE BINARY, CAST(v0.c3 AS TEXT), v0.c3, CAST(v0.c0 AS BLOB))) AND ((v0.c1, ((((v0.c4)AND(v0.c2)))OR(1624722940)), (~ (v0.c1)), ((v0.c4) IS FALSE), NULL)))) ORDER BY (+ (((v0.c2)AND(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c4, v0.c2, v0.c3, v0.c0)) NOT BETWEEN (('-1092318929', v0.c2 COLLATE BINARY, CAST(v0.c3 AS TEXT), v0.c3, CAST(v0.c0 AS BLOB))) AND ((v0.c1, ((((v0.c4)AND(v0.c2)))OR(1624722940)), (~ (v0.c1)), ((v0.c4) IS FALSE), NULL)))) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c2)AND(v0.c2)))));
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c4, v0.c2, v0.c3, v0.c0)) NOT BETWEEN (('-1092318929', v0.c2 COLLATE BINARY, CAST(v0.c3 AS TEXT), v0.c3, CAST(v0.c0 AS BLOB))) AND ((v0.c1, ((((v0.c4)AND(v0.c2)))OR(1624722940)), (~ (v0.c1)), ((v0.c4) IS FALSE), NULL)))) ORDER BY (+ (((v0.c2)AND(v0.c2))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c0)<=(t1.c0))))<((((t1.c0)<=(t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)<=(t1.c0))))<((((t1.c0)<=(t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c0)<=(t1.c0))))<((((t1.c0)<=(t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)<=(t1.c0))))<((((t1.c0)<=(t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c0)<=(t1.c0))))<((((t1.c0)<=(t1.c0))))));
SELECT ALL COUNT(*) FROM t0, t1 WHERE (CAST(((t0.c96) BETWEEN (t1.c0) AND (t1.c0)) AS REAL)) ORDER BY UNLIKELY(((t1.c0) IS FALSE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c96) BETWEEN (t1.c0) AND (t1.c0)) AS REAL)) IS TRUE)  as count FROM t0, t1 ORDER BY UNLIKELY(((t1.c0) IS FALSE)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (CAST(((t0.c96) BETWEEN (t1.c0) AND (t1.c0)) AS REAL)) ORDER BY UNLIKELY(((t1.c0) IS FALSE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c96) BETWEEN (t1.c0) AND (t1.c0)) AS REAL)) IS TRUE)  as count FROM t0, t1 ORDER BY UNLIKELY(((t1.c0) IS FALSE)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (CAST(((t0.c96) BETWEEN (t1.c0) AND (t1.c0)) AS REAL)) ORDER BY UNLIKELY(((t1.c0) IS FALSE)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((ABS(v0.c3)) NOT BETWEEN (CASE v0.c2  WHEN t0.c96 THEN v0.c1 ELSE v0.c1 END) AND (v0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(v0.c3)) NOT BETWEEN (CASE v0.c2  WHEN t0.c96 THEN v0.c1 ELSE v0.c1 END) AND (v0.c3))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((ABS(v0.c3)) NOT BETWEEN (CASE v0.c2  WHEN t0.c96 THEN v0.c1 ELSE v0.c1 END) AND (v0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(v0.c3)) NOT BETWEEN (CASE v0.c2  WHEN t0.c96 THEN v0.c1 ELSE v0.c1 END) AND (v0.c3))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((ABS(v0.c3)) NOT BETWEEN (CASE v0.c2  WHEN t0.c96 THEN v0.c1 ELSE v0.c1 END) AND (v0.c3)));
SELECT ALL COUNT(*) FROM t0, t1 WHERE ((t0.c96 COLLATE NOCASE IN (('129215488' IN ()), (((t0.c96, t0.c96, t0.c96))<>((t0.c96, t1.c0, t1.c0)))))) ORDER BY (CASE WHEN t1.c0 THEN t1.c0 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c96 COLLATE NOCASE IN (('129215488' IN ()), (((t0.c96, t0.c96, t0.c96))!=((t0.c96, t1.c0, t1.c0)))))) IS TRUE)  as count FROM t0, t1 ORDER BY (CASE WHEN t1.c0 THEN t1.c0 END IN ()) ASC);
SELECT ALL COUNT(*) FROM t0, t1 WHERE ((t0.c96 COLLATE NOCASE IN (('129215488' IN ()), (((t0.c96, t0.c96, t0.c96))<>((t0.c96, t1.c0, t1.c0)))))) ORDER BY (CASE WHEN t1.c0 THEN t1.c0 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c96 COLLATE NOCASE IN (('129215488' IN ()), (((t0.c96, t0.c96, t0.c96))!=((t0.c96, t1.c0, t1.c0)))))) IS TRUE)  as count FROM t0, t1 ORDER BY (CASE WHEN t1.c0 THEN t1.c0 END IN ()) ASC);
SELECT ALL COUNT(*) FROM t0, t1 WHERE ((t0.c96 COLLATE NOCASE IN (('129215488' IN ()), (((t0.c96, t0.c96, t0.c96))<>((t0.c96, t1.c0, t1.c0)))))) ORDER BY (CASE WHEN t1.c0 THEN t1.c0 END IN ()) ASC;
SELECT ALL * FROM v0, t0 WHERE (CAST(((((v0.c4)OR(v0.c0)))OR(v0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c4)OR(v0.c0)))OR(v0.c2)) AS REAL)) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (CAST(((((v0.c4)OR(v0.c0)))OR(v0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c4)OR(v0.c0)))OR(v0.c2)) AS REAL)) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (CAST(((((v0.c4)OR(v0.c0)))OR(v0.c2)) AS REAL));
SELECT ALL * FROM v0, t1 WHERE (((((v0.c2 COLLATE RTRIM)AND(((((v0.c0)AND(v0.c0)))AND(v0.c3)))))OR((v0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2 COLLATE RTRIM)AND(((((v0.c0)AND(v0.c0)))AND(v0.c3)))))OR((v0.c4 IN ())))) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE (((((v0.c2 COLLATE RTRIM)AND(((((v0.c0)AND(v0.c0)))AND(v0.c3)))))OR((v0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2 COLLATE RTRIM)AND(((((v0.c0)AND(v0.c0)))AND(v0.c3)))))OR((v0.c4 IN ())))) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE (((((v0.c2 COLLATE RTRIM)AND(((((v0.c0)AND(v0.c0)))AND(v0.c3)))))OR((v0.c4 IN ()))));
SELECT ALL * FROM t0, v0, t1 WHERE ((((v0.c4)) NOT BETWEEN ((0.017597811264366214)) AND ((((v0.c3)>(v0.c2)))))) ORDER BY (('')-(CAST('bU0(' AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c4)) NOT BETWEEN ((0.017597811264366214)) AND ((((v0.c3)>(v0.c2)))))) IS TRUE)  as count FROM t0, v0, t1 ORDER BY (('')-(CAST('bU0(' AS REAL))) ASC);
SELECT ALL * FROM t0, v0, t1 WHERE ((((v0.c4)) NOT BETWEEN ((0.017597811264366214)) AND ((((v0.c3)>(v0.c2)))))) ORDER BY (('')-(CAST('bU0(' AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c4)) NOT BETWEEN ((0.017597811264366214)) AND ((((v0.c3)>(v0.c2)))))) IS TRUE)  as count FROM t0, v0, t1 ORDER BY (('')-(CAST('bU0(' AS REAL))) ASC);
SELECT ALL * FROM t0, v0, t1 WHERE ((((v0.c4)) NOT BETWEEN ((0.017597811264366214)) AND ((((v0.c3)>(v0.c2)))))) ORDER BY (('')-(CAST('bU0(' AS REAL))) ASC;
SELECT ALL COUNT(*) FROM t1, v0, t0 WHERE ((+ ((((v0.c1, v0.c1, v0.c4))<=((v0.c1, v0.c1, v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((v0.c1, v0.c1, v0.c4))<=((v0.c1, v0.c1, v0.c2)))))) IS TRUE)  as count FROM t1, v0, t0);
SELECT ALL COUNT(*) FROM t1, v0, t0 WHERE ((+ ((((v0.c1, v0.c1, v0.c4))<=((v0.c1, v0.c1, v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((v0.c1, v0.c1, v0.c4))<=((v0.c1, v0.c1, v0.c2)))))) IS TRUE)  as count FROM t1, v0, t0);
SELECT ALL COUNT(*) FROM t1, v0, t0 WHERE ((+ ((((v0.c1, v0.c1, v0.c4))<=((v0.c1, v0.c1, v0.c2))))));
SELECT ALL * FROM v0, t1 INDEXED BY i47, t0 WHERE ((((~ (v0.c2))) BETWEEN (((((v0.c1)OR(v0.c3)))OR(v0.c0))) AND (CAST(v0.c2 AS BLOB)))) ORDER BY ((((x'')<=(v0.c2)))IS(NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c2))) BETWEEN (((((v0.c1)OR(v0.c3)))OR(v0.c0))) AND (CAST(v0.c2 AS BLOB)))) IS TRUE)  as count FROM v0, t1 INDEXED BY i47, t0 ORDER BY ((((x'')<=(v0.c2)))IS(NULL)) DESC  NULLS FIRST);
SELECT ALL * FROM v0, t1 INDEXED BY i47, t0 WHERE ((((~ (v0.c2))) BETWEEN (((((v0.c1)OR(v0.c3)))OR(v0.c0))) AND (CAST(v0.c2 AS BLOB)))) ORDER BY ((((x'')<=(v0.c2)))IS(NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c2))) BETWEEN (((((v0.c1)OR(v0.c3)))OR(v0.c0))) AND (CAST(v0.c2 AS BLOB)))) IS TRUE)  as count FROM v0, t1 INDEXED BY i47, t0 ORDER BY ((((x'')<=(v0.c2)))IS(NULL)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (((t1.c0)|(t1.c0))))) ORDER BY t1.c0 COLLATE BINARY COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c0)|(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY t1.c0 COLLATE BINARY COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (((t1.c0)|(t1.c0))))) ORDER BY t1.c0 COLLATE BINARY COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c0)|(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY t1.c0 COLLATE BINARY COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (((t1.c0)|(t1.c0))))) ORDER BY t1.c0 COLLATE BINARY COLLATE BINARY;
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c3)AND(v0.c2)))OR(v0.c4))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((v0.c3)AND(v0.c2)))OR(v0.c4))) ISNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c3)AND(v0.c2)))OR(v0.c4))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((v0.c3)AND(v0.c2)))OR(v0.c4))) ISNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c3)AND(v0.c2)))OR(v0.c4))) ISNULL));
SELECT COUNT(*) FROM t0, t1 WHERE (((((((NULL)<<(t0.c96)))AND(((t1.c0)<(t1.c0)))))AND(((t1.c0) NOT NULL)))) ORDER BY ((((((((TRIM(NULL, t1.c0))OR(COALESCE(DISTINCT 1063137118, t1.c0, t0.c96, t0.c96))))OR(t0.c96)))AND((('l訬㜃1D>z')>(t1.c0)))))OR(LIKELIHOOD(t1.c0, 0.8872884731391698))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)<<(t0.c96)))AND(((t1.c0)<(t1.c0)))))AND(((t1.c0) NOT NULL)))) IS TRUE)  as count FROM t0, t1 ORDER BY ((((((((TRIM(NULL, t1.c0))OR(COALESCE(DISTINCT 1063137118, t1.c0, t0.c96, t0.c96))))OR(t0.c96)))AND((('l訬㜃1D>z')>(t1.c0)))))OR(LIKELIHOOD(t1.c0, 0.8872884731391698))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, t1 WHERE (((((((NULL)<<(t0.c96)))AND(((t1.c0)<(t1.c0)))))AND(((t1.c0) NOT NULL)))) ORDER BY ((((((((TRIM(NULL, t1.c0))OR(COALESCE(DISTINCT 1063137118, t1.c0, t0.c96, t0.c96))))OR(t0.c96)))AND((('l訬㜃1D>z')>(t1.c0)))))OR(LIKELIHOOD(t1.c0, 0.8872884731391698))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)<<(t0.c96)))AND(((t1.c0)<(t1.c0)))))AND(((t1.c0) NOT NULL)))) IS TRUE)  as count FROM t0, t1 ORDER BY ((((((((TRIM(NULL, t1.c0))OR(COALESCE(DISTINCT 1063137118, t1.c0, t0.c96, t0.c96))))OR(t0.c96)))AND((('l訬㜃1D>z')>(t1.c0)))))OR(LIKELIHOOD(t1.c0, 0.8872884731391698))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, t1 WHERE (((((((NULL)<<(t0.c96)))AND(((t1.c0)<(t1.c0)))))AND(((t1.c0) NOT NULL)))) ORDER BY ((((((((TRIM(NULL, t1.c0))OR(COALESCE(DISTINCT 1063137118, t1.c0, t0.c96, t0.c96))))OR(t0.c96)))AND((('l訬㜃1D>z')>(t1.c0)))))OR(LIKELIHOOD(t1.c0, 0.8872884731391698))) DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (v0.c2) ORDER BY (((v0.c1)) NOT BETWEEN (((v0.c3 IN (v0.c0)))) AND ((LIKELY(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1)) NOT BETWEEN (((v0.c3 IN (v0.c0)))) AND ((LIKELY(v0.c0)))));
SELECT ALL * FROM v0 WHERE (v0.c2) ORDER BY (((v0.c1)) NOT BETWEEN (((v0.c3 IN (v0.c0)))) AND ((LIKELY(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1)) NOT BETWEEN (((v0.c3 IN (v0.c0)))) AND ((LIKELY(v0.c0)))));
SELECT ALL * FROM v0 WHERE (v0.c2) ORDER BY (((v0.c1)) NOT BETWEEN (((v0.c3 IN (v0.c0)))) AND ((LIKELY(v0.c0))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((v0.c3)) BETWEEN ((CAST(v0.c1 AS REAL))) AND ((COALESCE(DISTINCT v0.c4, v0.c4))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c3)) BETWEEN ((CAST(v0.c1 AS REAL))) AND ((COALESCE(DISTINCT v0.c4, v0.c4))))) IS TRUE)  as count FROM v0, t0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((v0.c3)) BETWEEN ((CAST(v0.c1 AS REAL))) AND ((COALESCE(DISTINCT v0.c4, v0.c4))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c3)) BETWEEN ((CAST(v0.c1 AS REAL))) AND ((COALESCE(DISTINCT v0.c4, v0.c4))))) IS TRUE)  as count FROM v0, t0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((v0.c3)) BETWEEN ((CAST(v0.c1 AS REAL))) AND ((COALESCE(DISTINCT v0.c4, v0.c4))))) ORDER BY NULL;
SELECT ALL * FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (NULL);
SELECT COUNT(*) FROM v0, t0 LEFT OUTER JOIN t1 ON CASE WHEN CAST(x'ec16' AS REAL) THEN 0.00518029701071876 WHEN (((0x4e1c03c5, 0x5d254bdc, t1.c0))<((t1.c0, x'', v0.c1))) THEN CAST(v0.c3 AS TEXT) WHEN ((v0.c4)%(v0.c1)) THEN v0.c4 COLLATE BINARY ELSE (v0.c0 IN ()) END WHERE ((((v0.c2 IN (v0.c4))) BETWEEN (((((((((t0.c96)OR(v0.c2)))AND(v0.c2)))AND(t1.c0)))AND(v0.c3))) AND (t1.c0 COLLATE BINARY))) ORDER BY (((v0.c3 IN ())) ISNULL) DESC  NULLS FIRST, v0.c3  NULLS LAST, (+ ('-826636815')) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c2 IN (v0.c4))) BETWEEN (((((((((t0.c96)OR(v0.c2)))AND(v0.c2)))AND(t1.c0)))AND(v0.c3))) AND (t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN t1 ON CASE WHEN CAST(x'ec16' AS REAL) THEN 0.00518029701071876 WHEN (((0x4e1c03c5, 0x5d254bdc, t1.c0))<((t1.c0, x'', v0.c1))) THEN CAST(v0.c3 AS TEXT) WHEN ((v0.c4)%(v0.c1)) THEN v0.c4 COLLATE BINARY ELSE (v0.c0 IN ()) END ORDER BY (((v0.c3 IN ())) ISNULL) DESC  NULLS FIRST, v0.c3  NULLS LAST, (+ ('-826636815')) ASC);
SELECT COUNT(*) FROM v0, t0 LEFT OUTER JOIN t1 ON CASE WHEN CAST(x'ec16' AS REAL) THEN 0.00518029701071876 WHEN (((0x4e1c03c5, 0x5d254bdc, t1.c0))<((t1.c0, x'', v0.c1))) THEN CAST(v0.c3 AS TEXT) WHEN ((v0.c4)%(v0.c1)) THEN v0.c4 COLLATE BINARY ELSE (v0.c0 IN ()) END WHERE ((((v0.c2 IN (v0.c4))) BETWEEN (((((((((t0.c96)OR(v0.c2)))AND(v0.c2)))AND(t1.c0)))AND(v0.c3))) AND (t1.c0 COLLATE BINARY))) ORDER BY (((v0.c3 IN ())) ISNULL) DESC  NULLS FIRST, v0.c3  NULLS LAST, (+ ('-826636815')) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c2 IN (v0.c4))) BETWEEN (((((((((t0.c96)OR(v0.c2)))AND(v0.c2)))AND(t1.c0)))AND(v0.c3))) AND (t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN t1 ON CASE WHEN CAST(x'ec16' AS REAL) THEN 0.00518029701071876 WHEN (((0x4e1c03c5, 0x5d254bdc, t1.c0))<((t1.c0, x'', v0.c1))) THEN CAST(v0.c3 AS TEXT) WHEN ((v0.c4)%(v0.c1)) THEN v0.c4 COLLATE BINARY ELSE (v0.c0 IN ()) END ORDER BY (((v0.c3 IN ())) ISNULL) DESC  NULLS FIRST, v0.c3  NULLS LAST, (+ ('-826636815')) ASC);
SELECT COUNT(*) FROM v0, t0 LEFT OUTER JOIN t1 ON CASE WHEN CAST(x'ec16' AS REAL) THEN 0.00518029701071876 WHEN (((0x4e1c03c5, 0x5d254bdc, t1.c0))<((t1.c0, x'', v0.c1))) THEN CAST(v0.c3 AS TEXT) WHEN ((v0.c4)%(v0.c1)) THEN v0.c4 COLLATE BINARY ELSE (v0.c0 IN ()) END WHERE ((((v0.c2 IN (v0.c4))) BETWEEN (((((((((t0.c96)OR(v0.c2)))AND(v0.c2)))AND(t1.c0)))AND(v0.c3))) AND (t1.c0 COLLATE BINARY))) ORDER BY (((v0.c3 IN ())) ISNULL) DESC  NULLS FIRST, v0.c3  NULLS LAST, (+ ('-826636815')) ASC;
SELECT ALL * FROM v0, t1, t0 WHERE (CAST(((v0.c4) IS FALSE) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c4) IS FALSE) AS TEXT)) IS TRUE)  as count FROM v0, t1, t0);
SELECT ALL * FROM v0, t1, t0 WHERE (CAST(((v0.c4) IS FALSE) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c4) IS FALSE) AS TEXT)) IS TRUE)  as count FROM v0, t1, t0);
SELECT ALL * FROM v0, t1, t0 WHERE (CAST(((v0.c4) IS FALSE) AS TEXT));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (NULL);
SELECT ALL COUNT(*) FROM v0 WHERE (((UPPER(DISTINCT x''))>>(((v0.c4)IS(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(DISTINCT x''))>>(((v0.c4)IS(NULL))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((UPPER(DISTINCT x''))>>(((v0.c4)IS(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(DISTINCT x''))>>(((v0.c4)IS(NULL))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((UPPER(DISTINCT x''))>>(((v0.c4)IS(NULL)))));
SELECT * FROM v0 WHERE (LTRIM(v0.c0)) ORDER BY (CASE v0.c4  WHEN x'' THEN v0.c4 END IN ()) DESC, (((v0.c4)) BETWEEN (((((v0.c3))<=((v0.c3))))) AND ((v0.c0))) DESC, (- (CAST(v0.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(v0.c0)) IS TRUE)  as count FROM v0 ORDER BY (CASE v0.c4  WHEN x'' THEN v0.c4 END IN ()) DESC, (((v0.c4)) BETWEEN (((((v0.c3))<=((v0.c3))))) AND ((v0.c0))) DESC, (- (CAST(v0.c0 AS INTEGER))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (LTRIM(v0.c0)) ORDER BY (CASE v0.c4  WHEN x'' THEN v0.c4 END IN ()) DESC, (((v0.c4)) BETWEEN (((((v0.c3))<=((v0.c3))))) AND ((v0.c0))) DESC, (- (CAST(v0.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(v0.c0)) IS TRUE)  as count FROM v0 ORDER BY (CASE v0.c4  WHEN x'' THEN v0.c4 END IN ()) DESC, (((v0.c4)) BETWEEN (((((v0.c3))<=((v0.c3))))) AND ((v0.c0))) DESC, (- (CAST(v0.c0 AS INTEGER))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (LTRIM(v0.c0)) ORDER BY (CASE v0.c4  WHEN x'' THEN v0.c4 END IN ()) DESC, (((v0.c4)) BETWEEN (((((v0.c3))<=((v0.c3))))) AND ((v0.c0))) DESC, (- (CAST(v0.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 FULL OUTER JOIN v0 ON v0.c1 COLLATE RTRIM CROSS JOIN t0 ON ((((v0.c1)<(v0.c0))) BETWEEN (TYPEOF(DISTINCT t0.c96)) AND (0.3988339652292303 COLLATE BINARY)) WHERE (t1.c0) ORDER BY ((t1.c0) BETWEEN (((v0.c1)|(v0.c0))) AND (((((v0.c1)AND(t0.c96)))OR(v0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 FULL OUTER JOIN v0 ON v0.c1 COLLATE RTRIM CROSS JOIN t0 ON ((((v0.c1)<(v0.c0))) BETWEEN (TYPEOF(DISTINCT t0.c96)) AND (0.3988339652292303 COLLATE BINARY)) ORDER BY ((t1.c0) BETWEEN (((v0.c1)|(v0.c0))) AND (((((v0.c1)AND(t0.c96)))OR(v0.c3)))));
SELECT ALL * FROM t1 FULL OUTER JOIN v0 ON v0.c1 COLLATE RTRIM CROSS JOIN t0 ON ((((v0.c1)<(v0.c0))) BETWEEN (TYPEOF(DISTINCT t0.c96)) AND (0.3988339652292303 COLLATE BINARY)) WHERE (t1.c0) ORDER BY ((t1.c0) BETWEEN (((v0.c1)|(v0.c0))) AND (((((v0.c1)AND(t0.c96)))OR(v0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 FULL OUTER JOIN v0 ON v0.c1 COLLATE RTRIM CROSS JOIN t0 ON ((((v0.c1)<(v0.c0))) BETWEEN (TYPEOF(DISTINCT t0.c96)) AND (0.3988339652292303 COLLATE BINARY)) ORDER BY ((t1.c0) BETWEEN (((v0.c1)|(v0.c0))) AND (((((v0.c1)AND(t0.c96)))OR(v0.c3)))));
SELECT ALL * FROM t1 FULL OUTER JOIN v0 ON v0.c1 COLLATE RTRIM CROSS JOIN t0 ON ((((v0.c1)<(v0.c0))) BETWEEN (TYPEOF(DISTINCT t0.c96)) AND (0.3988339652292303 COLLATE BINARY)) WHERE (t1.c0) ORDER BY ((t1.c0) BETWEEN (((v0.c1)|(v0.c0))) AND (((((v0.c1)AND(t0.c96)))OR(v0.c3))));
SELECT * FROM t0 INNER JOIN v0 ON v0.c1 FULL OUTER JOIN t1 ON (((CAST(v0.c1 AS INTEGER)))<=((t1.c0))) WHERE (NULLIF(((((0.30321065325508534)AND(0.5137090027304355)))OR(v0.c3)), CASE WHEN NULL THEN v0.c3 ELSE v0.c1 END)) ORDER BY (((v0.c2 IN ())) BETWEEN (((v0.c0)<(t1.c0))) AND (CASE WHEN v0.c3 THEN v0.c4 END))  NULLS FIRST, CASE WHEN v0.c3 COLLATE RTRIM THEN (t1.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((((0.30321065325508534)AND(0.5137090027304355)))OR(v0.c3)), CASE WHEN NULL THEN v0.c3 ELSE v0.c1 END)) IS TRUE)  as count FROM t0 INNER JOIN v0 ON v0.c1 FULL OUTER JOIN t1 ON (((CAST(v0.c1 AS INTEGER)))<=((t1.c0))) ORDER BY (((v0.c2 IN ())) BETWEEN (((v0.c0)<(t1.c0))) AND (CASE WHEN v0.c3 THEN v0.c4 END))  NULLS FIRST, CASE WHEN v0.c3 COLLATE RTRIM THEN (t1.c0 IN ()) END);
SELECT * FROM t0 INNER JOIN v0 ON v0.c1 FULL OUTER JOIN t1 ON (((CAST(v0.c1 AS INTEGER)))<=((t1.c0))) WHERE (NULLIF(((((0.30321065325508534)AND(0.5137090027304355)))OR(v0.c3)), CASE WHEN NULL THEN v0.c3 ELSE v0.c1 END)) ORDER BY (((v0.c2 IN ())) BETWEEN (((v0.c0)<(t1.c0))) AND (CASE WHEN v0.c3 THEN v0.c4 END))  NULLS FIRST, CASE WHEN v0.c3 COLLATE RTRIM THEN (t1.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((((0.30321065325508534)AND(0.5137090027304355)))OR(v0.c3)), CASE WHEN NULL THEN v0.c3 ELSE v0.c1 END)) IS TRUE)  as count FROM t0 INNER JOIN v0 ON v0.c1 FULL OUTER JOIN t1 ON (((CAST(v0.c1 AS INTEGER)))<=((t1.c0))) ORDER BY (((v0.c2 IN ())) BETWEEN (((v0.c0)<(t1.c0))) AND (CASE WHEN v0.c3 THEN v0.c4 END))  NULLS FIRST, CASE WHEN v0.c3 COLLATE RTRIM THEN (t1.c0 IN ()) END);
SELECT * FROM t0 INNER JOIN v0 ON v0.c1 FULL OUTER JOIN t1 ON (((CAST(v0.c1 AS INTEGER)))<=((t1.c0))) WHERE (NULLIF(((((0.30321065325508534)AND(0.5137090027304355)))OR(v0.c3)), CASE WHEN NULL THEN v0.c3 ELSE v0.c1 END)) ORDER BY (((v0.c2 IN ())) BETWEEN (((v0.c0)<(t1.c0))) AND (CASE WHEN v0.c3 THEN v0.c4 END))  NULLS FIRST, CASE WHEN v0.c3 COLLATE RTRIM THEN (t1.c0 IN ()) END;
SELECT ALL * FROM v0 WHERE ((+ (TYPEOF(DISTINCT v0.c3)))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c0) NOT BETWEEN ('1982971587') AND (v0.c4))));
SELECT SUM(count) FROM (SELECT ALL (((+ (TYPEOF(DISTINCT v0.c3)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c0) NOT BETWEEN ('1982971587') AND (v0.c4)))));
SELECT ALL * FROM v0 WHERE ((+ (TYPEOF(DISTINCT v0.c3)))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c0) NOT BETWEEN ('1982971587') AND (v0.c4))));
SELECT SUM(count) FROM (SELECT ALL (((+ (TYPEOF(DISTINCT v0.c3)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c0) NOT BETWEEN ('1982971587') AND (v0.c4)))));
SELECT ALL * FROM v0 WHERE ((+ (TYPEOF(DISTINCT v0.c3)))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c0) NOT BETWEEN ('1982971587') AND (v0.c4))));
SELECT * FROM t0 CROSS JOIN v0 ON ((((CAST(v0.c0 AS REAL))AND(CASE WHEN t0.c96 THEN v0.c1 END)))OR((- (v0.c1)))) WHERE (CAST(x'3ed5' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(x'3ed5' AS INTEGER)) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((((CAST(v0.c0 AS REAL))AND(CASE WHEN t0.c96 THEN v0.c1 END)))OR((- (v0.c1)))));
SELECT * FROM t0 CROSS JOIN v0 ON ((((CAST(v0.c0 AS REAL))AND(CASE WHEN t0.c96 THEN v0.c1 END)))OR((- (v0.c1)))) WHERE (CAST(x'3ed5' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(x'3ed5' AS INTEGER)) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((((CAST(v0.c0 AS REAL))AND(CASE WHEN t0.c96 THEN v0.c1 END)))OR((- (v0.c1)))));
SELECT * FROM t0 CROSS JOIN v0 ON ((((CAST(v0.c0 AS REAL))AND(CASE WHEN t0.c96 THEN v0.c1 END)))OR((- (v0.c1)))) WHERE (CAST(x'3ed5' AS INTEGER));
SELECT COUNT(*) FROM t0, t1 RIGHT OUTER JOIN v0 ON ((v0.c1 COLLATE BINARY) BETWEEN (((((v0.c2)OR(v0.c2)))AND(v0.c3))) AND ((((t1.c0))<(('-1e500'))))) WHERE (((((CASE WHEN v0.c0 THEN t0.c96 ELSE t0.c96 END)OR(UNLIKELY(DISTINCT v0.c0))))AND(t0.c96))) ORDER BY (((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c0 THEN t0.c96 ELSE t0.c96 END)OR(UNLIKELY(DISTINCT v0.c0))))AND(t0.c96))) IS TRUE)  as count FROM t0 NOT INDEXED, t1 RIGHT OUTER JOIN v0 ON ((v0.c1 COLLATE BINARY) BETWEEN (((((v0.c2)OR(v0.c2)))AND(v0.c3))) AND ((((t1.c0))<(('-1e500'))))) ORDER BY (((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0, t1 RIGHT OUTER JOIN v0 ON ((v0.c1 COLLATE BINARY) BETWEEN (((((v0.c2)OR(v0.c2)))AND(v0.c3))) AND ((((t1.c0))<(('-1e500'))))) WHERE (((((CASE WHEN v0.c0 THEN t0.c96 ELSE t0.c96 END)OR(UNLIKELY(DISTINCT v0.c0))))AND(t0.c96))) ORDER BY (((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c0 THEN t0.c96 ELSE t0.c96 END)OR(UNLIKELY(DISTINCT v0.c0))))AND(t0.c96))) IS TRUE)  as count FROM t0 NOT INDEXED, t1 RIGHT OUTER JOIN v0 ON ((v0.c1 COLLATE BINARY) BETWEEN (((((v0.c2)OR(v0.c2)))AND(v0.c3))) AND ((((t1.c0))<(('-1e500'))))) ORDER BY (((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0, t1 RIGHT OUTER JOIN v0 ON ((v0.c1 COLLATE BINARY) BETWEEN (((((v0.c2)OR(v0.c2)))AND(v0.c3))) AND ((((t1.c0))<(('-1e500'))))) WHERE (((((CASE WHEN v0.c0 THEN t0.c96 ELSE t0.c96 END)OR(UNLIKELY(DISTINCT v0.c0))))AND(t0.c96))) ORDER BY (((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) IN ())  NULLS FIRST;
SELECT ALL * FROM t1 INDEXED BY i52 LEFT OUTER JOIN v0 ON ((((((((v0.c1 COLLATE RTRIM)OR((~ (t1.c0)))))AND((+ (t1.c0)))))AND(((((t0.c96)AND(v0.c2)))AND(t1.c0)))))OR(((t1.c0) NOTNULL))) INNER JOIN t0 ON ((((v0.c0) NOTNULL))>('')) WHERE (x'8340');
SELECT SUM(count) FROM (SELECT ALL ((x'8340') IS TRUE)  as count FROM t1 INDEXED BY i52 LEFT OUTER JOIN v0 ON ((((((((v0.c1 COLLATE RTRIM)OR((~ (t1.c0)))))AND((+ (t1.c0)))))AND(((((t0.c96)AND(v0.c2)))AND(t1.c0)))))OR(((t1.c0) NOTNULL))) INNER JOIN t0 ON ((((v0.c0) NOTNULL))>('')));
SELECT ALL * FROM t1 INDEXED BY i52 LEFT OUTER JOIN v0 ON ((((((((v0.c1 COLLATE RTRIM)OR((~ (t1.c0)))))AND((+ (t1.c0)))))AND(((((t0.c96)AND(v0.c2)))AND(t1.c0)))))OR(((t1.c0) NOTNULL))) INNER JOIN t0 ON ((((v0.c0) NOTNULL))>('')) WHERE (x'8340');
SELECT SUM(count) FROM (SELECT ALL ((x'8340') IS TRUE)  as count FROM t1 INDEXED BY i52 LEFT OUTER JOIN v0 ON ((((((((v0.c1 COLLATE RTRIM)OR((~ (t1.c0)))))AND((+ (t1.c0)))))AND(((((t0.c96)AND(v0.c2)))AND(t1.c0)))))OR(((t1.c0) NOTNULL))) INNER JOIN t0 ON ((((v0.c0) NOTNULL))>('')));
SELECT ALL * FROM v0 CROSS JOIN t0 ON ((((x'')OR(((x'')-(v0.c2)))))OR(v0.c0)) FULL OUTER JOIN t1 ON (0.6097458656215549 IN (CASE v0.c1  WHEN v0.c4 THEN v0.c2 END, (((v0.c4, t0.c96, NULL))!=((582067811, t1.c0, x'171a'))))) WHERE ((((t1.c0)) BETWEEN ((v0.c2)) AND ((t0.c96))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)) BETWEEN ((v0.c2)) AND ((t0.c96))) COLLATE NOCASE) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((((x'')OR(((x'')-(v0.c2)))))OR(v0.c0)) FULL OUTER JOIN t1 ON (0.6097458656215549 IN (CASE v0.c1  WHEN v0.c4 THEN v0.c2 END, (((v0.c4, t0.c96, NULL))<>((582067811, t1.c0, x'171a'))))));
SELECT ALL * FROM v0 CROSS JOIN t0 ON ((((x'')OR(((x'')-(v0.c2)))))OR(v0.c0)) FULL OUTER JOIN t1 ON (0.6097458656215549 IN (CASE v0.c1  WHEN v0.c4 THEN v0.c2 END, (((v0.c4, t0.c96, NULL))!=((582067811, t1.c0, x'171a'))))) WHERE ((((t1.c0)) BETWEEN ((v0.c2)) AND ((t0.c96))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)) BETWEEN ((v0.c2)) AND ((t0.c96))) COLLATE NOCASE) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((((x'')OR(((x'')-(v0.c2)))))OR(v0.c0)) FULL OUTER JOIN t1 ON (0.6097458656215549 IN (CASE v0.c1  WHEN v0.c4 THEN v0.c2 END, (((v0.c4, t0.c96, NULL))<>((582067811, t1.c0, x'171a'))))));
SELECT ALL * FROM v0 CROSS JOIN t0 ON ((((x'')OR(((x'')-(v0.c2)))))OR(v0.c0)) FULL OUTER JOIN t1 ON (0.6097458656215549 IN (CASE v0.c1  WHEN v0.c4 THEN v0.c2 END, (((v0.c4, t0.c96, NULL))!=((582067811, t1.c0, x'171a'))))) WHERE ((((t1.c0)) BETWEEN ((v0.c2)) AND ((t0.c96))) COLLATE NOCASE);
SELECT * FROM t0 WHERE ((DATE('-1813183340', t0.c96, t0.c96, t0.c96, t0.c96) IN ((- (t0.c96)), CAST(t0.c96 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((DATE('-1813183340', t0.c96, t0.c96, t0.c96, t0.c96) IN ((- (t0.c96)), CAST(t0.c96 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((DATE('-1813183340', t0.c96, t0.c96, t0.c96, t0.c96) IN ((- (t0.c96)), CAST(t0.c96 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((DATE('-1813183340', t0.c96, t0.c96, t0.c96, t0.c96) IN ((- (t0.c96)), CAST(t0.c96 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((DATE('-1813183340', t0.c96, t0.c96, t0.c96, t0.c96) IN ((- (t0.c96)), CAST(t0.c96 AS BLOB))));
SELECT * FROM t0, v0, t1 WHERE (((CAST(v0.c1 AS TEXT)) NOT BETWEEN ((t1.c0 IN ())) AND (1406116977)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS TEXT)) NOT BETWEEN ((t1.c0 IN ())) AND (1406116977))) IS TRUE)  as count FROM t0, v0, t1);
SELECT * FROM t0, v0, t1 WHERE (((CAST(v0.c1 AS TEXT)) NOT BETWEEN ((t1.c0 IN ())) AND (1406116977)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS TEXT)) NOT BETWEEN ((t1.c0 IN ())) AND (1406116977))) IS TRUE)  as count FROM t0, v0, t1);
SELECT * FROM t0, v0, t1 WHERE (((CAST(v0.c1 AS TEXT)) NOT BETWEEN ((t1.c0 IN ())) AND (1406116977)));
SELECT ALL * FROM t1 INNER JOIN t0 ON (((('')|(t0.c96)))%(CAST(t0.c96 AS BLOB))) WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 INNER JOIN t0 ON (((('')|(t0.c96)))%(CAST(t0.c96 AS BLOB))));
SELECT ALL * FROM t1 INNER JOIN t0 ON (((('')|(t0.c96)))%(CAST(t0.c96 AS BLOB))) WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 INNER JOIN t0 ON (((('')|(t0.c96)))%(CAST(t0.c96 AS BLOB))));
SELECT ALL * FROM t1 INNER JOIN t0 ON (((('')|(t0.c96)))%(CAST(t0.c96 AS BLOB))) WHERE (t1.c0);
SELECT * FROM t1, v0 NATURAL JOIN t0 WHERE (CASE WHEN ((v0.c4) IS FALSE) THEN v0.c3 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c4) IS FALSE) THEN v0.c3 END) IS TRUE)  as count FROM t1, v0 NATURAL JOIN t0);
SELECT * FROM t1, v0 NATURAL JOIN t0 WHERE (CASE WHEN ((v0.c4) IS FALSE) THEN v0.c3 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c4) IS FALSE) THEN v0.c3 END) IS TRUE)  as count FROM t1, v0 NATURAL JOIN t0);
SELECT * FROM t1, v0 NATURAL JOIN t0 WHERE (CASE WHEN ((v0.c4) IS FALSE) THEN v0.c3 END);
SELECT ALL COUNT(*) FROM t1, v0, t0 WHERE ((- ((((v0.c3)) BETWEEN ((t1.c0)) AND ((t0.c96)))))) ORDER BY UPPER(DISTINCT v0.c0) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((v0.c3)) BETWEEN ((t1.c0)) AND ((t0.c96)))))) IS TRUE)  as count FROM t1, v0, t0 ORDER BY UPPER(DISTINCT v0.c0) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, v0, t0 WHERE ((- ((((v0.c3)) BETWEEN ((t1.c0)) AND ((t0.c96)))))) ORDER BY UPPER(DISTINCT v0.c0) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((v0.c3)) BETWEEN ((t1.c0)) AND ((t0.c96)))))) IS TRUE)  as count FROM t1, v0, t0 ORDER BY UPPER(DISTINCT v0.c0) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, v0, t0 WHERE ((- ((((v0.c3)) BETWEEN ((t1.c0)) AND ((t0.c96)))))) ORDER BY UPPER(DISTINCT v0.c0) COLLATE BINARY  NULLS LAST;
SELECT * FROM v0 WHERE ((((((((v0.c1)OR(v0.c0)))OR(v0.c2))))<=((CAST(v0.c2 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c1)OR(v0.c0)))OR(v0.c2))))<=((CAST(v0.c2 AS BLOB))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((((v0.c1)OR(v0.c0)))OR(v0.c2))))<=((CAST(v0.c2 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c1)OR(v0.c0)))OR(v0.c2))))<=((CAST(v0.c2 AS BLOB))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((((v0.c1)OR(v0.c0)))OR(v0.c2))))<=((CAST(v0.c2 AS BLOB)))));
SELECT COUNT(*) FROM v0, t0, t1 WHERE (CASE WHEN t0.c96 THEN ((v0.c1)OR(t1.c0)) WHEN v0.c3 THEN ((v0.c0)IS(v0.c0)) WHEN CAST(t0.c96 AS BLOB) THEN json_quote('-2036543654') ELSE v0.c4 END) ORDER BY ((((((((((((t1.c0)AND(v0.c3)))OR(t1.c0)))OR(CAST(v0.c4 AS NUMERIC))))OR(NULL)))OR(v0.c1 COLLATE NOCASE)))OR((((t1.c0, '-1370829487', '?lF')) BETWEEN ((t1.c0, v0.c4, v0.c4)) AND ((v0.c2, v0.c4, v0.c1)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c96 THEN ((v0.c1)OR(t1.c0)) WHEN v0.c3 THEN ((v0.c0)IS(v0.c0)) WHEN CAST(t0.c96 AS BLOB) THEN json_quote('-2036543654') ELSE v0.c4 END) IS TRUE)  as count FROM v0, t0, t1 ORDER BY ((((((((((((t1.c0)AND(v0.c3)))OR(t1.c0)))OR(CAST(v0.c4 AS NUMERIC))))OR(NULL)))OR(v0.c1 COLLATE NOCASE)))OR((((t1.c0, '-1370829487', '?lF')) BETWEEN ((t1.c0, v0.c4, v0.c4)) AND ((v0.c2, v0.c4, v0.c1))))));
SELECT COUNT(*) FROM v0, t0, t1 WHERE (CASE WHEN t0.c96 THEN ((v0.c1)OR(t1.c0)) WHEN v0.c3 THEN ((v0.c0)IS(v0.c0)) WHEN CAST(t0.c96 AS BLOB) THEN json_quote('-2036543654') ELSE v0.c4 END) ORDER BY ((((((((((((t1.c0)AND(v0.c3)))OR(t1.c0)))OR(CAST(v0.c4 AS NUMERIC))))OR(NULL)))OR(v0.c1 COLLATE NOCASE)))OR((((t1.c0, '-1370829487', '?lF')) BETWEEN ((t1.c0, v0.c4, v0.c4)) AND ((v0.c2, v0.c4, v0.c1)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c96 THEN ((v0.c1)OR(t1.c0)) WHEN v0.c3 THEN ((v0.c0)IS(v0.c0)) WHEN CAST(t0.c96 AS BLOB) THEN json_quote('-2036543654') ELSE v0.c4 END) IS TRUE)  as count FROM v0, t0, t1 ORDER BY ((((((((((((t1.c0)AND(v0.c3)))OR(t1.c0)))OR(CAST(v0.c4 AS NUMERIC))))OR(NULL)))OR(v0.c1 COLLATE NOCASE)))OR((((t1.c0, '-1370829487', '?lF')) BETWEEN ((t1.c0, v0.c4, v0.c4)) AND ((v0.c2, v0.c4, v0.c1))))));
SELECT COUNT(*) FROM v0, t0, t1 WHERE (CASE WHEN t0.c96 THEN ((v0.c1)OR(t1.c0)) WHEN v0.c3 THEN ((v0.c0)IS(v0.c0)) WHEN CAST(t0.c96 AS BLOB) THEN json_quote('-2036543654') ELSE v0.c4 END) ORDER BY ((((((((((((t1.c0)AND(v0.c3)))OR(t1.c0)))OR(CAST(v0.c4 AS NUMERIC))))OR(NULL)))OR(v0.c1 COLLATE NOCASE)))OR((((t1.c0, '-1370829487', '?lF')) BETWEEN ((t1.c0, v0.c4, v0.c4)) AND ((v0.c2, v0.c4, v0.c1)))));
SELECT ALL * FROM v0 INDEXED BY i52 WHERE (CASE ((v0.c2) IS FALSE)  WHEN CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END THEN 0.8375692449352359 END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c2) IS FALSE)  WHEN CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END THEN 0.8375692449352359 END) IS TRUE)  as count FROM v0 INDEXED BY i52);
SELECT ALL * FROM v0 INDEXED BY i52 WHERE (CASE ((v0.c2) IS FALSE)  WHEN CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END THEN 0.8375692449352359 END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c2) IS FALSE)  WHEN CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END THEN 0.8375692449352359 END) IS TRUE)  as count FROM v0 INDEXED BY i52);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (((x'193ae62831bd') NOT BETWEEN (((t0.c96)>>(v0.c2))) AND (v0.c4 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((x'193ae62831bd') NOT BETWEEN (((t0.c96)>>(v0.c2))) AND (v0.c4 COLLATE BINARY))) IS TRUE)  as count FROM t0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (((x'193ae62831bd') NOT BETWEEN (((t0.c96)>>(v0.c2))) AND (v0.c4 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((x'193ae62831bd') NOT BETWEEN (((t0.c96)>>(v0.c2))) AND (v0.c4 COLLATE BINARY))) IS TRUE)  as count FROM t0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (((x'193ae62831bd') NOT BETWEEN (((t0.c96)>>(v0.c2))) AND (v0.c4 COLLATE BINARY)));
SELECT * FROM t1, t0, v0 WHERE ((t0.c96 IN ()) COLLATE NOCASE) ORDER BY ((t1.c0 COLLATE BINARY) BETWEEN (((v0.c1) IS FALSE)) AND (NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c96 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t1, t0, v0 ORDER BY ((t1.c0 COLLATE BINARY) BETWEEN (((v0.c1) IS FALSE)) AND (NULL)) DESC  NULLS FIRST);
SELECT * FROM t1, t0, v0 WHERE ((t0.c96 IN ()) COLLATE NOCASE) ORDER BY ((t1.c0 COLLATE BINARY) BETWEEN (((v0.c1) IS FALSE)) AND (NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c96 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t1, t0, v0 ORDER BY ((t1.c0 COLLATE BINARY) BETWEEN (((v0.c1) IS FALSE)) AND (NULL)) DESC  NULLS FIRST);
SELECT * FROM t1, t0, v0 WHERE ((t0.c96 IN ()) COLLATE NOCASE) ORDER BY ((t1.c0 COLLATE BINARY) BETWEEN (((v0.c1) IS FALSE)) AND (NULL)) DESC  NULLS FIRST;
SELECT ALL * FROM v0, t0 WHERE (((((v0.c1)==(v0.c1))) NOT BETWEEN (((((t0.c96)AND(t0.c96)))OR(v0.c0))) AND ((((v0.c4)) BETWEEN ((v0.c0)) AND ((v0.c2)))))) ORDER BY (((((~ (v0.c0)))AND((+ (v0.c1)))))OR(((v0.c3) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)=(v0.c1))) NOT BETWEEN (((((t0.c96)AND(t0.c96)))OR(v0.c0))) AND ((((v0.c4)) BETWEEN ((v0.c0)) AND ((v0.c2)))))) IS TRUE)  as count FROM v0, t0 ORDER BY (((((~ (v0.c0)))AND((+ (v0.c1)))))OR(((v0.c3) NOT NULL))));
SELECT ALL * FROM v0, t0 WHERE (((((v0.c1)==(v0.c1))) NOT BETWEEN (((((t0.c96)AND(t0.c96)))OR(v0.c0))) AND ((((v0.c4)) BETWEEN ((v0.c0)) AND ((v0.c2)))))) ORDER BY (((((~ (v0.c0)))AND((+ (v0.c1)))))OR(((v0.c3) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)=(v0.c1))) NOT BETWEEN (((((t0.c96)AND(t0.c96)))OR(v0.c0))) AND ((((v0.c4)) BETWEEN ((v0.c0)) AND ((v0.c2)))))) IS TRUE)  as count FROM v0, t0 ORDER BY (((((~ (v0.c0)))AND((+ (v0.c1)))))OR(((v0.c3) NOT NULL))));
SELECT ALL * FROM v0, t0 WHERE (((((v0.c1)==(v0.c1))) NOT BETWEEN (((((t0.c96)AND(t0.c96)))OR(v0.c0))) AND ((((v0.c4)) BETWEEN ((v0.c0)) AND ((v0.c2)))))) ORDER BY (((((~ (v0.c0)))AND((+ (v0.c1)))))OR(((v0.c3) NOT NULL)));
SELECT COUNT(*) FROM t0 WHERE (UNICODE(((t0.c96) NOTNULL))) ORDER BY (((x'f1fe')) BETWEEN ((0Xffffffff9316ac05)) AND ((((t0.c96)>(t0.c96)))));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((t0.c96) NOTNULL))) IS TRUE)  as count FROM t0 ORDER BY (((x'f1fe')) BETWEEN ((0xffffffff9316ac05)) AND ((((t0.c96)>(t0.c96))))));
SELECT COUNT(*) FROM t0 WHERE (UNICODE(((t0.c96) NOTNULL))) ORDER BY (((x'f1fe')) BETWEEN ((0Xffffffff9316ac05)) AND ((((t0.c96)>(t0.c96)))));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((t0.c96) NOTNULL))) IS TRUE)  as count FROM t0 ORDER BY (((x'f1fe')) BETWEEN ((0xffffffff9316ac05)) AND ((((t0.c96)>(t0.c96))))));
SELECT COUNT(*) FROM t0 WHERE (UNICODE(((t0.c96) NOTNULL))) ORDER BY (((x'f1fe')) BETWEEN ((0Xffffffff9316ac05)) AND ((((t0.c96)>(t0.c96)))));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)<>(t1.c0)))GLOB(-2018164381))) ORDER BY (((t1.c0, '', t1.c0)) NOT BETWEEN ((((t1.c0)>>(t1.c0)), ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)), CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) AND ((((((t1.c0)OR(t1.c0)))OR(t1.c0)), json_remove('-250523344', t1.c0, t1.c0, t1.c0), (t1.c0 IN (t1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)<>(t1.c0)))GLOB(-2018164381))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0, '', t1.c0)) NOT BETWEEN ((((t1.c0)>>(t1.c0)), ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)), CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) AND ((((((t1.c0)OR(t1.c0)))OR(t1.c0)), json_remove('-250523344', t1.c0, t1.c0, t1.c0), (t1.c0 IN (t1.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)<>(t1.c0)))GLOB(-2018164381))) ORDER BY (((t1.c0, '', t1.c0)) NOT BETWEEN ((((t1.c0)>>(t1.c0)), ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)), CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) AND ((((((t1.c0)OR(t1.c0)))OR(t1.c0)), json_remove('-250523344', t1.c0, t1.c0, t1.c0), (t1.c0 IN (t1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)<>(t1.c0)))GLOB(-2018164381))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0, '', t1.c0)) NOT BETWEEN ((((t1.c0)>>(t1.c0)), ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)), CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) AND ((((((t1.c0)OR(t1.c0)))OR(t1.c0)), json_remove('-250523344', t1.c0, t1.c0, t1.c0), (t1.c0 IN (t1.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)<>(t1.c0)))GLOB(-2018164381))) ORDER BY (((t1.c0, '', t1.c0)) NOT BETWEEN ((((t1.c0)>>(t1.c0)), ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c0)), CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) AND ((((((t1.c0)OR(t1.c0)))OR(t1.c0)), json_remove('-250523344', t1.c0, t1.c0, t1.c0), (t1.c0 IN (t1.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 CROSS JOIN v0 ON ((((v0.c0)||(v0.c1)))AND(((0.43664097310857486) NOT NULL))) WHERE (CASE (v0.c0 IN ())  WHEN ((v0.c1)LIKE(v0.c3)) THEN v0.c2 ELSE ((v0.c3)<>(v0.c4)) END) ORDER BY ((v0.c2)==(v0.c3)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((CASE (v0.c0 IN ())  WHEN ((v0.c1)LIKE(v0.c3)) THEN v0.c2 ELSE ((v0.c3)!=(v0.c4)) END) IS TRUE)  as count FROM t1 CROSS JOIN v0 ON ((((v0.c0)||(v0.c1)))AND(((0.43664097310857486) NOT NULL))) ORDER BY ((v0.c2)=(v0.c3)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN v0 ON ((((v0.c0)||(v0.c1)))AND(((0.43664097310857486) NOT NULL))) WHERE (CASE (v0.c0 IN ())  WHEN ((v0.c1)LIKE(v0.c3)) THEN v0.c2 ELSE ((v0.c3)<>(v0.c4)) END) ORDER BY ((v0.c2)==(v0.c3)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((CASE (v0.c0 IN ())  WHEN ((v0.c1)LIKE(v0.c3)) THEN v0.c2 ELSE ((v0.c3)!=(v0.c4)) END) IS TRUE)  as count FROM t1 CROSS JOIN v0 ON ((((v0.c0)||(v0.c1)))AND(((0.43664097310857486) NOT NULL))) ORDER BY ((v0.c2)=(v0.c3)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN v0 ON ((((v0.c0)||(v0.c1)))AND(((0.43664097310857486) NOT NULL))) WHERE (CASE (v0.c0 IN ())  WHEN ((v0.c1)LIKE(v0.c3)) THEN v0.c2 ELSE ((v0.c3)<>(v0.c4)) END) ORDER BY ((v0.c2)==(v0.c3)) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM t1 WHERE (0.6362946118257572);
SELECT SUM(count) FROM (SELECT ((0.6362946118257572) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (0.6362946118257572);
SELECT SUM(count) FROM (SELECT ((0.6362946118257572) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (0.6362946118257572);
SELECT * FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (NULL);
SELECT ALL COUNT(*) FROM v0, t1, t0 WHERE ((NOT (((t1.c0) IS FALSE)))) ORDER BY (((- (t0.c96)))OR(v0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c0) IS FALSE)))) IS TRUE)  as count FROM v0, t1, t0 ORDER BY (((- (t0.c96)))OR(v0.c2))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t1, t0 WHERE ((NOT (((t1.c0) IS FALSE)))) ORDER BY (((- (t0.c96)))OR(v0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c0) IS FALSE)))) IS TRUE)  as count FROM v0, t1, t0 ORDER BY (((- (t0.c96)))OR(v0.c2))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t1, t0 WHERE ((NOT (((t1.c0) IS FALSE)))) ORDER BY (((- (t0.c96)))OR(v0.c2))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN v0 ON (~ ((~ (v0.c2)))) WHERE ((((v0.c1, v0.c1, v0.c3, t1.c0, v0.c2)) BETWEEN ((((((v0.c1)OR(v0.c4)))OR(v0.c3)), (+ (v0.c0)), (~ (t1.c0)), ((v0.c2) ISNULL), ((v0.c4) BETWEEN (v0.c2) AND (v0.c3)))) AND ((((((v0.c4)AND(v0.c1)))OR(v0.c2)), ((v0.c2) IS FALSE), v0.c1 COLLATE RTRIM, (v0.c0 IN (v0.c1)), (v0.c0 IN (v0.c2))))));
SELECT SUM(count) FROM (SELECT (((((v0.c1, v0.c1, v0.c3, t1.c0, v0.c2)) BETWEEN ((((((v0.c1)OR(v0.c4)))OR(v0.c3)), (+ (v0.c0)), (~ (t1.c0)), ((v0.c2) ISNULL), ((v0.c4) BETWEEN (v0.c2) AND (v0.c3)))) AND ((((((v0.c4)AND(v0.c1)))OR(v0.c2)), ((v0.c2) IS FALSE), v0.c1 COLLATE RTRIM, (v0.c0 IN (v0.c1)), (v0.c0 IN (v0.c2)))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN v0 ON (~ ((~ (v0.c2)))));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN v0 ON (~ ((~ (v0.c2)))) WHERE ((((v0.c1, v0.c1, v0.c3, t1.c0, v0.c2)) BETWEEN ((((((v0.c1)OR(v0.c4)))OR(v0.c3)), (+ (v0.c0)), (~ (t1.c0)), ((v0.c2) ISNULL), ((v0.c4) BETWEEN (v0.c2) AND (v0.c3)))) AND ((((((v0.c4)AND(v0.c1)))OR(v0.c2)), ((v0.c2) IS FALSE), v0.c1 COLLATE RTRIM, (v0.c0 IN (v0.c1)), (v0.c0 IN (v0.c2))))));
SELECT SUM(count) FROM (SELECT (((((v0.c1, v0.c1, v0.c3, t1.c0, v0.c2)) BETWEEN ((((((v0.c1)OR(v0.c4)))OR(v0.c3)), (+ (v0.c0)), (~ (t1.c0)), ((v0.c2) ISNULL), ((v0.c4) BETWEEN (v0.c2) AND (v0.c3)))) AND ((((((v0.c4)AND(v0.c1)))OR(v0.c2)), ((v0.c2) IS FALSE), v0.c1 COLLATE RTRIM, (v0.c0 IN (v0.c1)), (v0.c0 IN (v0.c2)))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN v0 ON (~ ((~ (v0.c2)))));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN v0 ON (~ ((~ (v0.c2)))) WHERE ((((v0.c1, v0.c1, v0.c3, t1.c0, v0.c2)) BETWEEN ((((((v0.c1)OR(v0.c4)))OR(v0.c3)), (+ (v0.c0)), (~ (t1.c0)), ((v0.c2) ISNULL), ((v0.c4) BETWEEN (v0.c2) AND (v0.c3)))) AND ((((((v0.c4)AND(v0.c1)))OR(v0.c2)), ((v0.c2) IS FALSE), v0.c1 COLLATE RTRIM, (v0.c0 IN (v0.c1)), (v0.c0 IN (v0.c2))))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((v0.c1 IN ())) ORDER BY CASE v0.c2 COLLATE BINARY  WHEN ((t0.c96) BETWEEN (t0.c96) AND (v0.c0)) THEN ((t0.c96) NOTNULL) WHEN ((NULL) NOT NULL) THEN ((v0.c4) NOTNULL) WHEN CASE WHEN v0.c2 THEN t0.c96 WHEN t0.c96 THEN v0.c3 WHEN '蘻k' THEN v0.c0 ELSE v0.c4 END THEN v0.c4 COLLATE NOCASE ELSE ((t0.c96)LIKE(v0.c4)) END;
SELECT SUM(count) FROM (SELECT ALL (((v0.c1 IN ())) IS TRUE)  as count FROM t0, v0 ORDER BY CASE v0.c2 COLLATE BINARY  WHEN ((t0.c96) BETWEEN (t0.c96) AND (v0.c0)) THEN ((t0.c96) NOTNULL) WHEN ((NULL) NOT NULL) THEN ((v0.c4) NOTNULL) WHEN CASE WHEN v0.c2 THEN t0.c96 WHEN t0.c96 THEN v0.c3 WHEN '蘻k' THEN v0.c0 ELSE v0.c4 END THEN v0.c4 COLLATE NOCASE ELSE ((t0.c96)LIKE(v0.c4)) END);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((v0.c1 IN ())) ORDER BY CASE v0.c2 COLLATE BINARY  WHEN ((t0.c96) BETWEEN (t0.c96) AND (v0.c0)) THEN ((t0.c96) NOTNULL) WHEN ((NULL) NOT NULL) THEN ((v0.c4) NOTNULL) WHEN CASE WHEN v0.c2 THEN t0.c96 WHEN t0.c96 THEN v0.c3 WHEN '蘻k' THEN v0.c0 ELSE v0.c4 END THEN v0.c4 COLLATE NOCASE ELSE ((t0.c96)LIKE(v0.c4)) END;
SELECT SUM(count) FROM (SELECT ALL (((v0.c1 IN ())) IS TRUE)  as count FROM t0, v0 ORDER BY CASE v0.c2 COLLATE BINARY  WHEN ((t0.c96) BETWEEN (t0.c96) AND (v0.c0)) THEN ((t0.c96) NOTNULL) WHEN ((NULL) NOT NULL) THEN ((v0.c4) NOTNULL) WHEN CASE WHEN v0.c2 THEN t0.c96 WHEN t0.c96 THEN v0.c3 WHEN '蘻k' THEN v0.c0 ELSE v0.c4 END THEN v0.c4 COLLATE NOCASE ELSE ((t0.c96)LIKE(v0.c4)) END);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((v0.c1 IN ())) ORDER BY CASE v0.c2 COLLATE BINARY  WHEN ((t0.c96) BETWEEN (t0.c96) AND (v0.c0)) THEN ((t0.c96) NOTNULL) WHEN ((NULL) NOT NULL) THEN ((v0.c4) NOTNULL) WHEN CASE WHEN v0.c2 THEN t0.c96 WHEN t0.c96 THEN v0.c3 WHEN '蘻k' THEN v0.c0 ELSE v0.c4 END THEN v0.c4 COLLATE NOCASE ELSE ((t0.c96)LIKE(v0.c4)) END;
SELECT ALL COUNT(*) FROM t1, v0 WHERE (v0.c4);
SELECT SUM(count) FROM (SELECT ALL ((v0.c4) IS TRUE)  as count FROM t1, v0);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (v0.c4);
SELECT SUM(count) FROM (SELECT ALL ((v0.c4) IS TRUE)  as count FROM t1, v0);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (v0.c4);
SELECT ALL * FROM t0, v0, t1 WHERE (v0.c3);
SELECT SUM(count) FROM (SELECT ((v0.c3) IS TRUE)  as count FROM t0, v0, t1);
SELECT ALL * FROM t0, v0, t1 WHERE (v0.c3);
SELECT SUM(count) FROM (SELECT ((v0.c3) IS TRUE)  as count FROM t0, v0, t1);
SELECT ALL * FROM t0, v0, t1 WHERE (v0.c3);
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))>=((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))), ((t1.c0)GLOB(t1.c0)))) AND ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN '>鯈' THEN t1.c0 END, t1.c0, ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))>=((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))), ((t1.c0)GLOB(t1.c0)))) AND ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN '>鯈' THEN t1.c0 END, t1.c0, ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))>=((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))), ((t1.c0)GLOB(t1.c0)))) AND ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN '>鯈' THEN t1.c0 END, t1.c0, ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))>=((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))), ((t1.c0)GLOB(t1.c0)))) AND ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN '>鯈' THEN t1.c0 END, t1.c0, ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))>=((t1.c0, t1.c0, t1.c0, t1.c0, t1.c0))), ((t1.c0)GLOB(t1.c0)))) AND ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN '>鯈' THEN t1.c0 END, t1.c0, ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))));
SELECT ALL * FROM t0 NATURAL JOIN t1 WHERE ((t0.c96 IN (t0.c96, t0.c96)) COLLATE BINARY) ORDER BY CAST(((((t0.c96)AND(t0.c96)))OR(t1.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t0.c96 IN (t0.c96, t0.c96)) COLLATE BINARY) IS TRUE)  as count FROM t0 NATURAL JOIN t1 ORDER BY CAST(((((t0.c96)AND(t0.c96)))OR(t1.c0)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM t0 NATURAL JOIN t1 WHERE ((t0.c96 IN (t0.c96, t0.c96)) COLLATE BINARY) ORDER BY CAST(((((t0.c96)AND(t0.c96)))OR(t1.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t0.c96 IN (t0.c96, t0.c96)) COLLATE BINARY) IS TRUE)  as count FROM t0 NATURAL JOIN t1 ORDER BY CAST(((((t0.c96)AND(t0.c96)))OR(t1.c0)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM t0 NATURAL JOIN t1 WHERE ((t0.c96 IN (t0.c96, t0.c96)) COLLATE BINARY) ORDER BY CAST(((((t0.c96)AND(t0.c96)))OR(t1.c0)) AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM t0, v0, t1 WHERE (((((v0.c1) BETWEEN (v0.c1) AND (v0.c0)))>=(CAST(t0.c96 AS INTEGER)))) ORDER BY (NOT (CAST(v0.c3 AS REAL))), ((v0.c3)==(v0.c2)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN (v0.c1) AND (v0.c0)))>=(CAST(t0.c96 AS INTEGER)))) IS TRUE)  as count FROM t0, v0, t1 ORDER BY (NOT (CAST(v0.c3 AS REAL))), ((v0.c3)=(v0.c2)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM t0, v0, t1 WHERE (((((v0.c1) BETWEEN (v0.c1) AND (v0.c0)))>=(CAST(t0.c96 AS INTEGER)))) ORDER BY (NOT (CAST(v0.c3 AS REAL))), ((v0.c3)==(v0.c2)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN (v0.c1) AND (v0.c0)))>=(CAST(t0.c96 AS INTEGER)))) IS TRUE)  as count FROM t0, v0, t1 ORDER BY (NOT (CAST(v0.c3 AS REAL))), ((v0.c3)=(v0.c2)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM t0, v0, t1 WHERE (((((v0.c1) BETWEEN (v0.c1) AND (v0.c0)))>=(CAST(t0.c96 AS INTEGER)))) ORDER BY (NOT (CAST(v0.c3 AS REAL))), ((v0.c3)==(v0.c2)) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((((v0.c2)) NOT BETWEEN ((x'9385')) AND ((v0.c4))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c2)) NOT BETWEEN ((x'9385')) AND ((v0.c4))) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((((v0.c2)) NOT BETWEEN ((x'9385')) AND ((v0.c4))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c2)) NOT BETWEEN ((x'9385')) AND ((v0.c4))) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((((v0.c2)) NOT BETWEEN ((x'9385')) AND ((v0.c4))) AS INTEGER));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))OR(((t1.c0) NOT NULL))))OR(t1.c0 COLLATE BINARY)))AND(CAST(t1.c0 AS BLOB))))AND((NOT (t1.c0))))) ORDER BY (((((('466529311') IS TRUE))OR(((t1.c0) IS TRUE))))OR(((t1.c0) IS TRUE))) ASC, CAST('-2059550140' AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))OR(((t1.c0) NOT NULL))))OR(t1.c0 COLLATE BINARY)))AND(CAST(t1.c0 AS BLOB))))AND((NOT (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY (((((('466529311') IS TRUE))OR(((t1.c0) IS TRUE))))OR(((t1.c0) IS TRUE))) ASC, CAST('-2059550140' AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))OR(((t1.c0) NOT NULL))))OR(t1.c0 COLLATE BINARY)))AND(CAST(t1.c0 AS BLOB))))AND((NOT (t1.c0))))) ORDER BY (((((('466529311') IS TRUE))OR(((t1.c0) IS TRUE))))OR(((t1.c0) IS TRUE))) ASC, CAST('-2059550140' AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))OR(((t1.c0) NOT NULL))))OR(t1.c0 COLLATE BINARY)))AND(CAST(t1.c0 AS BLOB))))AND((NOT (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY (((((('466529311') IS TRUE))OR(((t1.c0) IS TRUE))))OR(((t1.c0) IS TRUE))) ASC, CAST('-2059550140' AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))OR(((t1.c0) NOT NULL))))OR(t1.c0 COLLATE BINARY)))AND(CAST(t1.c0 AS BLOB))))AND((NOT (t1.c0))))) ORDER BY (((((('466529311') IS TRUE))OR(((t1.c0) IS TRUE))))OR(((t1.c0) IS TRUE))) ASC, CAST('-2059550140' AS TEXT) ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CAST((((v0.c1)) BETWEEN ((v0.c4)) AND ((v0.c2))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c1)) BETWEEN ((v0.c4)) AND ((v0.c2))) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST((((v0.c1)) BETWEEN ((v0.c4)) AND ((v0.c2))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c1)) BETWEEN ((v0.c4)) AND ((v0.c2))) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST((((v0.c1)) BETWEEN ((v0.c4)) AND ((v0.c2))) AS TEXT));
SELECT COUNT(*) FROM t0, t1, v0 WHERE (UNLIKELY(v0.c3 COLLATE NOCASE)) ORDER BY CAST(((v0.c1)+(v0.c0)) AS NUMERIC) DESC  NULLS LAST, CASE WHEN json_extract(v0.c2, 0.5174089257431281) THEN ((v0.c2)||(v0.c1)) WHEN CASE v0.c1  WHEN v0.c2 THEN t1.c0 WHEN t0.c96 THEN t1.c0 WHEN v0.c2 THEN v0.c3 ELSE v0.c3 END THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 END WHEN (v0.c0 IN (v0.c1)) THEN CASE v0.c1  WHEN v0.c2 THEN 'MF}H敚e)KA' END WHEN 0.47054828092069845 THEN t1.c0 COLLATE NOCASE WHEN ((((((((t1.c0)OR(t0.c96)))OR(v0.c0)))AND(t1.c0)))OR(v0.c3)) THEN t1.c0 COLLATE BINARY ELSE (t0.c96 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(v0.c3 COLLATE NOCASE)) IS TRUE)  as count FROM t0, t1, v0 ORDER BY CAST(((v0.c1)+(v0.c0)) AS NUMERIC) DESC  NULLS LAST, CASE WHEN json_extract(v0.c2, 0.5174089257431281) THEN ((v0.c2)||(v0.c1)) WHEN CASE v0.c1  WHEN v0.c2 THEN t1.c0 WHEN t0.c96 THEN t1.c0 WHEN v0.c2 THEN v0.c3 ELSE v0.c3 END THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 END WHEN (v0.c0 IN (v0.c1)) THEN CASE v0.c1  WHEN v0.c2 THEN 'MF}H敚e)KA' END WHEN 0.47054828092069845 THEN t1.c0 COLLATE NOCASE WHEN ((((((((t1.c0)OR(t0.c96)))OR(v0.c0)))AND(t1.c0)))OR(v0.c3)) THEN t1.c0 COLLATE BINARY ELSE (t0.c96 IN ()) END DESC);
SELECT COUNT(*) FROM t0, t1, v0 WHERE (UNLIKELY(v0.c3 COLLATE NOCASE)) ORDER BY CAST(((v0.c1)+(v0.c0)) AS NUMERIC) DESC  NULLS LAST, CASE WHEN json_extract(v0.c2, 0.5174089257431281) THEN ((v0.c2)||(v0.c1)) WHEN CASE v0.c1  WHEN v0.c2 THEN t1.c0 WHEN t0.c96 THEN t1.c0 WHEN v0.c2 THEN v0.c3 ELSE v0.c3 END THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 END WHEN (v0.c0 IN (v0.c1)) THEN CASE v0.c1  WHEN v0.c2 THEN 'MF}H敚e)KA' END WHEN 0.47054828092069845 THEN t1.c0 COLLATE NOCASE WHEN ((((((((t1.c0)OR(t0.c96)))OR(v0.c0)))AND(t1.c0)))OR(v0.c3)) THEN t1.c0 COLLATE BINARY ELSE (t0.c96 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(v0.c3 COLLATE NOCASE)) IS TRUE)  as count FROM t0, t1, v0 ORDER BY CAST(((v0.c1)+(v0.c0)) AS NUMERIC) DESC  NULLS LAST, CASE WHEN json_extract(v0.c2, 0.5174089257431281) THEN ((v0.c2)||(v0.c1)) WHEN CASE v0.c1  WHEN v0.c2 THEN t1.c0 WHEN t0.c96 THEN t1.c0 WHEN v0.c2 THEN v0.c3 ELSE v0.c3 END THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 END WHEN (v0.c0 IN (v0.c1)) THEN CASE v0.c1  WHEN v0.c2 THEN 'MF}H敚e)KA' END WHEN 0.47054828092069845 THEN t1.c0 COLLATE NOCASE WHEN ((((((((t1.c0)OR(t0.c96)))OR(v0.c0)))AND(t1.c0)))OR(v0.c3)) THEN t1.c0 COLLATE BINARY ELSE (t0.c96 IN ()) END DESC);
SELECT COUNT(*) FROM t0, t1, v0 WHERE (UNLIKELY(v0.c3 COLLATE NOCASE)) ORDER BY CAST(((v0.c1)+(v0.c0)) AS NUMERIC) DESC  NULLS LAST, CASE WHEN json_extract(v0.c2, 0.5174089257431281) THEN ((v0.c2)||(v0.c1)) WHEN CASE v0.c1  WHEN v0.c2 THEN t1.c0 WHEN t0.c96 THEN t1.c0 WHEN v0.c2 THEN v0.c3 ELSE v0.c3 END THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 END WHEN (v0.c0 IN (v0.c1)) THEN CASE v0.c1  WHEN v0.c2 THEN 'MF}H敚e)KA' END WHEN 0.47054828092069845 THEN t1.c0 COLLATE NOCASE WHEN ((((((((t1.c0)OR(t0.c96)))OR(v0.c0)))AND(t1.c0)))OR(v0.c3)) THEN t1.c0 COLLATE BINARY ELSE (t0.c96 IN ()) END DESC;
SELECT ALL * FROM t0, v0 WHERE (v0.c4) ORDER BY MIN(json_patch(v0.c2, v0.c0), ((v0.c0)*(v0.c2)), ((((v0.c4)AND(v0.c3)))OR(v0.c2)), CAST(v0.c0 AS REAL))  NULLS FIRST, 0Xffffffffe809a29b DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c4) IS TRUE)  as count FROM t0, v0 ORDER BY MIN(json_patch(v0.c2, v0.c0), ((v0.c0)*(v0.c2)), ((((v0.c4)AND(v0.c3)))OR(v0.c2)), CAST(v0.c0 AS REAL))  NULLS FIRST, 0Xffffffffe809a29b DESC  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (v0.c4) ORDER BY MIN(json_patch(v0.c2, v0.c0), ((v0.c0)*(v0.c2)), ((((v0.c4)AND(v0.c3)))OR(v0.c2)), CAST(v0.c0 AS REAL))  NULLS FIRST, 0Xffffffffe809a29b DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c4) IS TRUE)  as count FROM t0, v0 ORDER BY MIN(json_patch(v0.c2, v0.c0), ((v0.c0)*(v0.c2)), ((((v0.c4)AND(v0.c3)))OR(v0.c2)), CAST(v0.c0 AS REAL))  NULLS FIRST, 0Xffffffffe809a29b DESC  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (v0.c4) ORDER BY MIN(json_patch(v0.c2, v0.c0), ((v0.c0)*(v0.c2)), ((((v0.c4)AND(v0.c3)))OR(v0.c2)), CAST(v0.c0 AS REAL))  NULLS FIRST, 0Xffffffffe809a29b DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, v0, t0 WHERE (((t1.c0)OR(v0.c4)) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t1.c0)OR(v0.c4)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM t1, v0, t0);
SELECT ALL COUNT(*) FROM t1, v0, t0 WHERE (((t1.c0)OR(v0.c4)) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t1.c0)OR(v0.c4)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM t1, v0, t0);
SELECT ALL COUNT(*) FROM t1, v0, t0 WHERE (((t1.c0)OR(v0.c4)) COLLATE NOCASE COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, v0, t1 WHERE (CAST(((t1.c0) BETWEEN (v0.c4) AND (v0.c3)) AS BLOB)) ORDER BY (('-1881856652') IS TRUE), ((((v0.c3)/('568559600')))GLOB(((t1.c0)=(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0) BETWEEN (v0.c4) AND (v0.c3)) AS BLOB)) IS TRUE)  as count FROM t0, v0, t1 ORDER BY (('-1881856652') IS TRUE), ((((v0.c3)/('568559600')))GLOB(((t1.c0)=(t1.c0)))));
SELECT ALL COUNT(*) FROM t0, v0, t1 WHERE (CAST(((t1.c0) BETWEEN (v0.c4) AND (v0.c3)) AS BLOB)) ORDER BY (('-1881856652') IS TRUE), ((((v0.c3)/('568559600')))GLOB(((t1.c0)=(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0) BETWEEN (v0.c4) AND (v0.c3)) AS BLOB)) IS TRUE)  as count FROM t0, v0, t1 ORDER BY (('-1881856652') IS TRUE), ((((v0.c3)/('568559600')))GLOB(((t1.c0)=(t1.c0)))));
SELECT ALL COUNT(*) FROM t0, v0, t1 WHERE (CAST(((t1.c0) BETWEEN (v0.c4) AND (v0.c3)) AS BLOB)) ORDER BY (('-1881856652') IS TRUE), ((((v0.c3)/('568559600')))GLOB(((t1.c0)=(t1.c0))));
SELECT ALL * FROM v0 WHERE (((((((((((((((v0.c4)OR(v0.c2)))OR(v0.c2)))AND(v0.c2)))OR(0.30853364879734024)))OR(v0.c1)))AND(v0.c0))) NOT BETWEEN (((v0.c4) NOT BETWEEN (v0.c0) AND (v0.c1))) AND (v0.c2))) ORDER BY (+ (CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c4 THEN v0.c2 WHEN v0.c2 THEN v0.c4 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((v0.c4)OR(v0.c2)))OR(v0.c2)))AND(v0.c2)))OR(0.30853364879734024)))OR(v0.c1)))AND(v0.c0))) NOT BETWEEN (((v0.c4) NOT BETWEEN (v0.c0) AND (v0.c1))) AND (v0.c2))) IS TRUE)  as count FROM v0 ORDER BY (+ (CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c4 THEN v0.c2 WHEN v0.c2 THEN v0.c4 END))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((((((((((v0.c4)OR(v0.c2)))OR(v0.c2)))AND(v0.c2)))OR(0.30853364879734024)))OR(v0.c1)))AND(v0.c0))) NOT BETWEEN (((v0.c4) NOT BETWEEN (v0.c0) AND (v0.c1))) AND (v0.c2))) ORDER BY (+ (CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c4 THEN v0.c2 WHEN v0.c2 THEN v0.c4 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((v0.c4)OR(v0.c2)))OR(v0.c2)))AND(v0.c2)))OR(0.30853364879734024)))OR(v0.c1)))AND(v0.c0))) NOT BETWEEN (((v0.c4) NOT BETWEEN (v0.c0) AND (v0.c1))) AND (v0.c2))) IS TRUE)  as count FROM v0 ORDER BY (+ (CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c4 THEN v0.c2 WHEN v0.c2 THEN v0.c4 END))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((((((((((v0.c4)OR(v0.c2)))OR(v0.c2)))AND(v0.c2)))OR(0.30853364879734024)))OR(v0.c1)))AND(v0.c0))) NOT BETWEEN (((v0.c4) NOT BETWEEN (v0.c0) AND (v0.c1))) AND (v0.c2))) ORDER BY (+ (CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c4 THEN v0.c2 WHEN v0.c2 THEN v0.c4 END))  NULLS FIRST;
SELECT ALL * FROM t0, t1 WHERE (CAST(t1.c0 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t0, t1 WHERE (CAST(t1.c0 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t0, t1 WHERE (CAST(t1.c0 AS INTEGER) COLLATE BINARY);
SELECT * FROM v0, t1, t0 WHERE (((((0.22733868212611208) BETWEEN (v0.c1) AND (t1.c0))) NOT BETWEEN (0.16360213009644575) AND (t0.c96 COLLATE RTRIM))) ORDER BY ((('G0')<<(x'')) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.22733868212611208) BETWEEN (v0.c1) AND (t1.c0))) NOT BETWEEN (0.16360213009644575) AND (t0.c96 COLLATE RTRIM))) IS TRUE)  as count FROM v0, t1, t0 ORDER BY ((('G0')<<(x'')) IN ()) ASC  NULLS LAST);
SELECT * FROM v0, t1, t0 WHERE (((((0.22733868212611208) BETWEEN (v0.c1) AND (t1.c0))) NOT BETWEEN (0.16360213009644575) AND (t0.c96 COLLATE RTRIM))) ORDER BY ((('G0')<<(x'')) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.22733868212611208) BETWEEN (v0.c1) AND (t1.c0))) NOT BETWEEN (0.16360213009644575) AND (t0.c96 COLLATE RTRIM))) IS TRUE)  as count FROM v0, t1, t0 ORDER BY ((('G0')<<(x'')) IN ()) ASC  NULLS LAST);
SELECT * FROM v0, t1, t0 WHERE (((((0.22733868212611208) BETWEEN (v0.c1) AND (t1.c0))) NOT BETWEEN (0.16360213009644575) AND (t0.c96 COLLATE RTRIM))) ORDER BY ((('G0')<<(x'')) IN ()) ASC  NULLS LAST;
SELECT * FROM t1, v0, t0 WHERE (((CASE WHEN t1.c0 THEN t0.c96 ELSE v0.c1 END)/(NULL))) ORDER BY ((((CAST(v0.c1 AS REAL))AND(v0.c2)))OR((('') IS TRUE))), ((CAST(t0.c96 AS REAL)) NOT BETWEEN ((NOT (t1.c0))) AND ((NOT (v0.c3))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c0 THEN t0.c96 ELSE v0.c1 END)/(NULL))) IS TRUE)  as count FROM t1, v0, t0 ORDER BY ((((CAST(v0.c1 AS REAL))AND(v0.c2)))OR((('') IS TRUE))), ((CAST(t0.c96 AS REAL)) NOT BETWEEN ((NOT (t1.c0))) AND ((NOT (v0.c3)))));
SELECT * FROM t1, v0, t0 WHERE (((CASE WHEN t1.c0 THEN t0.c96 ELSE v0.c1 END)/(NULL))) ORDER BY ((((CAST(v0.c1 AS REAL))AND(v0.c2)))OR((('') IS TRUE))), ((CAST(t0.c96 AS REAL)) NOT BETWEEN ((NOT (t1.c0))) AND ((NOT (v0.c3))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c0 THEN t0.c96 ELSE v0.c1 END)/(NULL))) IS TRUE)  as count FROM t1, v0, t0 ORDER BY ((((CAST(v0.c1 AS REAL))AND(v0.c2)))OR((('') IS TRUE))), ((CAST(t0.c96 AS REAL)) NOT BETWEEN ((NOT (t1.c0))) AND ((NOT (v0.c3)))));
SELECT * FROM t1, v0, t0 WHERE (((CASE WHEN t1.c0 THEN t0.c96 ELSE v0.c1 END)/(NULL))) ORDER BY ((((CAST(v0.c1 AS REAL))AND(v0.c2)))OR((('') IS TRUE))), ((CAST(t0.c96 AS REAL)) NOT BETWEEN ((NOT (t1.c0))) AND ((NOT (v0.c3))));
SELECT ALL * FROM t0, v0 NATURAL JOIN t1 WHERE (((CASE '1095828888'  WHEN v0.c3 THEN t1.c0 WHEN v0.c1 THEN v0.c4 WHEN v0.c3 THEN v0.c4 END)IS((NOT (t1.c0))))) ORDER BY ((CAST(0.8864436401994344 AS BLOB))%(((((v0.c2)AND(t1.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE '1095828888'  WHEN v0.c3 THEN t1.c0 WHEN v0.c1 THEN v0.c4 WHEN v0.c3 THEN v0.c4 END)IS((NOT (t1.c0))))) IS TRUE)  as count FROM t0, v0 NATURAL JOIN t1 ORDER BY ((CAST(0.8864436401994344 AS BLOB))%(((((v0.c2)AND(t1.c0)))OR(v0.c0)))));
SELECT ALL * FROM t0, v0 NATURAL JOIN t1 WHERE (((CASE '1095828888'  WHEN v0.c3 THEN t1.c0 WHEN v0.c1 THEN v0.c4 WHEN v0.c3 THEN v0.c4 END)IS((NOT (t1.c0))))) ORDER BY ((CAST(0.8864436401994344 AS BLOB))%(((((v0.c2)AND(t1.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE '1095828888'  WHEN v0.c3 THEN t1.c0 WHEN v0.c1 THEN v0.c4 WHEN v0.c3 THEN v0.c4 END)IS((NOT (t1.c0))))) IS TRUE)  as count FROM t0, v0 NATURAL JOIN t1 ORDER BY ((CAST(0.8864436401994344 AS BLOB))%(((((v0.c2)AND(t1.c0)))OR(v0.c0)))));
SELECT ALL * FROM t0, v0 NATURAL JOIN t1 WHERE (((CASE '1095828888'  WHEN v0.c3 THEN t1.c0 WHEN v0.c1 THEN v0.c4 WHEN v0.c3 THEN v0.c4 END)IS((NOT (t1.c0))))) ORDER BY ((CAST(0.8864436401994344 AS BLOB))%(((((v0.c2)AND(t1.c0)))OR(v0.c0))));
SELECT ALL * FROM t1, t0 CROSS JOIN v0 ON (((((- (v0.c4)))AND(t1.c0)))OR(COALESCE(v0.c1, x''))) WHERE ((+ (((NULL)AND(t0.c96)))));
SELECT SUM(count) FROM (SELECT (((+ (((NULL)AND(t0.c96))))) IS TRUE)  as count FROM t1, t0 CROSS JOIN v0 ON (((((- (v0.c4)))AND(t1.c0)))OR(COALESCE(v0.c1, x''))));
SELECT ALL * FROM t1, t0 CROSS JOIN v0 ON (((((- (v0.c4)))AND(t1.c0)))OR(COALESCE(v0.c1, x''))) WHERE ((+ (((NULL)AND(t0.c96)))));
SELECT SUM(count) FROM (SELECT (((+ (((NULL)AND(t0.c96))))) IS TRUE)  as count FROM t1, t0 CROSS JOIN v0 ON (((((- (v0.c4)))AND(t1.c0)))OR(COALESCE(v0.c1, x''))));
SELECT ALL * FROM t1, t0 CROSS JOIN v0 ON (((((- (v0.c4)))AND(t1.c0)))OR(COALESCE(v0.c1, x''))) WHERE ((+ (((NULL)AND(t0.c96)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) IS FALSE))AND(0x757c40d7)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) IS FALSE))AND(0X757c40d7))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) IS FALSE))AND(0x757c40d7)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) IS FALSE))AND(0X757c40d7))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) IS FALSE))AND(0x757c40d7)));
SELECT * FROM t0 WHERE (t0.c96);
SELECT SUM(count) FROM (SELECT ((t0.c96) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c96);
SELECT SUM(count) FROM (SELECT ((t0.c96) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c96);
SELECT COUNT(*) FROM t0, v0 WHERE ((CAST(t0.c96 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c96 AS INTEGER) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((CAST(t0.c96 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c96 AS INTEGER) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((CAST(t0.c96 AS INTEGER) IN ()));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0 COLLATE BINARY))>((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))) ORDER BY (((t1.c0))=((t1.c0))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 COLLATE BINARY))>((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0))==((t1.c0))) COLLATE BINARY ASC);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0 COLLATE BINARY))>((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))) ORDER BY (((t1.c0))=((t1.c0))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 COLLATE BINARY))>((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0))==((t1.c0))) COLLATE BINARY ASC);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0 COLLATE BINARY))>((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))) ORDER BY (((t1.c0))=((t1.c0))) COLLATE BINARY ASC;
SELECT * FROM v0, t0 WHERE (CASE WHEN (((t0.c96))>=((v0.c4))) THEN highlight(v0.c3, t0.c96, t0.c96, v0.c3) ELSE v0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c96))>=((v0.c4))) THEN highlight(v0.c3, t0.c96, t0.c96, v0.c3) ELSE v0.c1 END) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (CASE WHEN (((t0.c96))>=((v0.c4))) THEN highlight(v0.c3, t0.c96, t0.c96, v0.c3) ELSE v0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c96))>=((v0.c4))) THEN highlight(v0.c3, t0.c96, t0.c96, v0.c3) ELSE v0.c1 END) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (CASE WHEN (((t0.c96))>=((v0.c4))) THEN highlight(v0.c3, t0.c96, t0.c96, v0.c3) ELSE v0.c1 END);
SELECT ALL COUNT(*) FROM t0, t1, v0 WHERE ((((('V⦺\R9')AND(v0.c1)))AND(v0.c4)) COLLATE BINARY) ORDER BY (((v0.c1)AND(v0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('V⦺\R9')AND(v0.c1)))AND(v0.c4)) COLLATE BINARY) IS TRUE)  as count FROM t0, t1, v0 ORDER BY (((v0.c1)AND(v0.c1)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1, v0 WHERE ((((('V⦺\R9')AND(v0.c1)))AND(v0.c4)) COLLATE BINARY) ORDER BY (((v0.c1)AND(v0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('V⦺\R9')AND(v0.c1)))AND(v0.c4)) COLLATE BINARY) IS TRUE)  as count FROM t0, t1, v0 ORDER BY (((v0.c1)AND(v0.c1)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t1, v0 WHERE ((((('V⦺\R9')AND(v0.c1)))AND(v0.c4)) COLLATE BINARY) ORDER BY (((v0.c1)AND(v0.c1)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0)-(v0.c1))  WHEN (((v0.c3))>((x'5937'))) THEN ((v0.c3)||(v0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)-(v0.c1))  WHEN (((v0.c3))>((x'5937'))) THEN ((v0.c3)||(v0.c4)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0)-(v0.c1))  WHEN (((v0.c3))>((x'5937'))) THEN ((v0.c3)||(v0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)-(v0.c1))  WHEN (((v0.c3))>((x'5937'))) THEN ((v0.c3)||(v0.c4)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0)-(v0.c1))  WHEN (((v0.c3))>((x'5937'))) THEN ((v0.c3)||(v0.c4)) END);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((t0.c96)&(t0.c96)))>=(((NULL) NOT BETWEEN (t0.c96) AND (0Xffffffff92b5ab99)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c96)&(t0.c96)))>=(((NULL) NOT BETWEEN (t0.c96) AND (0xffffffff92b5ab99))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((t0.c96)&(t0.c96)))>=(((NULL) NOT BETWEEN (t0.c96) AND (0Xffffffff92b5ab99)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c96)&(t0.c96)))>=(((NULL) NOT BETWEEN (t0.c96) AND (0xffffffff92b5ab99))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((t0.c96)&(t0.c96)))>=(((NULL) NOT BETWEEN (t0.c96) AND (0Xffffffff92b5ab99)))));
SELECT * FROM v0, t0 WHERE ((((v0.c4, v0.c1, v0.c2)) BETWEEN (((((v0.c4))>((v0.c2))), (v0.c0 IN (0.640552806797206, v0.c3)), ((v0.c0)-(v0.c2)))) AND (((v0.c4 IN (v0.c0, t0.c96)), CAST(v0.c4 AS BLOB), SQLITE_COMPILEOPTION_USED(v0.c0))))) ORDER BY (NOT (((v0.c2) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c4, v0.c1, v0.c2)) BETWEEN (((((v0.c4))>((v0.c2))), (v0.c0 IN (0.640552806797206, v0.c3)), ((v0.c0)-(v0.c2)))) AND (((v0.c4 IN (v0.c0, t0.c96)), CAST(v0.c4 AS BLOB), SQLITE_COMPILEOPTION_USED(v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY (NOT (((v0.c2) ISNULL))) ASC  NULLS LAST);
SELECT * FROM v0, t0 WHERE ((((v0.c4, v0.c1, v0.c2)) BETWEEN (((((v0.c4))>((v0.c2))), (v0.c0 IN (0.640552806797206, v0.c3)), ((v0.c0)-(v0.c2)))) AND (((v0.c4 IN (v0.c0, t0.c96)), CAST(v0.c4 AS BLOB), SQLITE_COMPILEOPTION_USED(v0.c0))))) ORDER BY (NOT (((v0.c2) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c4, v0.c1, v0.c2)) BETWEEN (((((v0.c4))>((v0.c2))), (v0.c0 IN (0.640552806797206, v0.c3)), ((v0.c0)-(v0.c2)))) AND (((v0.c4 IN (v0.c0, t0.c96)), CAST(v0.c4 AS BLOB), SQLITE_COMPILEOPTION_USED(v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY (NOT (((v0.c2) ISNULL))) ASC  NULLS LAST);
SELECT * FROM v0, t0 WHERE ((((v0.c4, v0.c1, v0.c2)) BETWEEN (((((v0.c4))>((v0.c2))), (v0.c0 IN (0.640552806797206, v0.c3)), ((v0.c0)-(v0.c2)))) AND (((v0.c4 IN (v0.c0, t0.c96)), CAST(v0.c4 AS BLOB), SQLITE_COMPILEOPTION_USED(v0.c0))))) ORDER BY (NOT (((v0.c2) ISNULL))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, t1 WHERE (((((t0.c96)) NOT BETWEEN ((t0.c96)) AND ((0.48173508985053326))) IN ())) ORDER BY ((0.8554264499279477)&(((t0.c96) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c96)) NOT BETWEEN ((t0.c96)) AND ((0.48173508985053326))) IN ())) IS TRUE)  as count FROM t0, t1 ORDER BY ((0.8554264499279477)&(((t0.c96) NOTNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM t0, t1 WHERE (((((t0.c96)) NOT BETWEEN ((t0.c96)) AND ((0.48173508985053326))) IN ())) ORDER BY ((0.8554264499279477)&(((t0.c96) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c96)) NOT BETWEEN ((t0.c96)) AND ((0.48173508985053326))) IN ())) IS TRUE)  as count FROM t0, t1 ORDER BY ((0.8554264499279477)&(((t0.c96) NOTNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM t0, t1 WHERE (((((t0.c96)) NOT BETWEEN ((t0.c96)) AND ((0.48173508985053326))) IN ())) ORDER BY ((0.8554264499279477)&(((t0.c96) NOTNULL)))  NULLS FIRST;
SELECT * FROM t1, v0, t0 WHERE (((((v0.c3) NOT BETWEEN (v0.c0) AND (v0.c4)))&(v0.c0))) ORDER BY (((('534698165')AND(((t0.c96) NOT BETWEEN (v0.c3) AND (v0.c4)))))AND(v0.c4))  NULLS LAST, v0.c4  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c3) NOT BETWEEN (v0.c0) AND (v0.c4)))&(v0.c0))) IS TRUE)  as count FROM t1, v0, t0 ORDER BY (((('534698165')AND(((t0.c96) NOT BETWEEN (v0.c3) AND (v0.c4)))))AND(v0.c4))  NULLS LAST, v0.c4  NULLS FIRST);
SELECT * FROM t1, v0, t0 WHERE (((((v0.c3) NOT BETWEEN (v0.c0) AND (v0.c4)))&(v0.c0))) ORDER BY (((('534698165')AND(((t0.c96) NOT BETWEEN (v0.c3) AND (v0.c4)))))AND(v0.c4))  NULLS LAST, v0.c4  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c3) NOT BETWEEN (v0.c0) AND (v0.c4)))&(v0.c0))) IS TRUE)  as count FROM t1, v0, t0 ORDER BY (((('534698165')AND(((t0.c96) NOT BETWEEN (v0.c3) AND (v0.c4)))))AND(v0.c4))  NULLS LAST, v0.c4  NULLS FIRST);
SELECT * FROM t1, v0, t0 WHERE (((((v0.c3) NOT BETWEEN (v0.c0) AND (v0.c4)))&(v0.c0))) ORDER BY (((('534698165')AND(((t0.c96) NOT BETWEEN (v0.c3) AND (v0.c4)))))AND(v0.c4))  NULLS LAST, v0.c4  NULLS FIRST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN t1 ON '1373334480' INNER JOIN v0 ON '1384841607' WHERE ((+ (((((v0.c4)AND(t0.c96)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((v0.c4)AND(t0.c96)))AND(v0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON '1373334480' INNER JOIN v0 ON '1384841607');
SELECT COUNT(*) FROM t0 FULL OUTER JOIN t1 ON '1373334480' INNER JOIN v0 ON '1384841607' WHERE ((+ (((((v0.c4)AND(t0.c96)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((v0.c4)AND(t0.c96)))AND(v0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON '1373334480' INNER JOIN v0 ON '1384841607');
SELECT COUNT(*) FROM t0 FULL OUTER JOIN t1 ON '1373334480' INNER JOIN v0 ON '1384841607' WHERE ((+ (((((v0.c4)AND(t0.c96)))AND(v0.c0)))));
SELECT ALL COUNT(*) FROM t0, v0, t1 WHERE (((((((v0.c4) BETWEEN (t1.c0) AND (v0.c2)))OR((((v0.c0))>((v0.c2))))))OR(CAST(t0.c96 AS NUMERIC)))) ORDER BY CASE WHEN t0.c96 THEN t1.c0 WHEN v0.c0 THEN t0.c96 WHEN v0.c3 THEN t0.c96 ELSE v0.c2 END COLLATE BINARY  NULLS LAST, ((TYPEOF(v0.c1))=(((t1.c0) BETWEEN (v0.c0) AND (v0.c4))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c4) BETWEEN (t1.c0) AND (v0.c2)))OR((((v0.c0))>((v0.c2))))))OR(CAST(t0.c96 AS NUMERIC)))) IS TRUE)  as count FROM t0, v0, t1 ORDER BY CASE WHEN t0.c96 THEN t1.c0 WHEN v0.c0 THEN t0.c96 WHEN v0.c3 THEN t0.c96 ELSE v0.c2 END COLLATE BINARY  NULLS LAST, ((TYPEOF(v0.c1))==(((t1.c0) BETWEEN (v0.c0) AND (v0.c4)))));
SELECT ALL COUNT(*) FROM t0, v0, t1 WHERE (((((((v0.c4) BETWEEN (t1.c0) AND (v0.c2)))OR((((v0.c0))>((v0.c2))))))OR(CAST(t0.c96 AS NUMERIC)))) ORDER BY CASE WHEN t0.c96 THEN t1.c0 WHEN v0.c0 THEN t0.c96 WHEN v0.c3 THEN t0.c96 ELSE v0.c2 END COLLATE BINARY  NULLS LAST, ((TYPEOF(v0.c1))=(((t1.c0) BETWEEN (v0.c0) AND (v0.c4))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c4) BETWEEN (t1.c0) AND (v0.c2)))OR((((v0.c0))>((v0.c2))))))OR(CAST(t0.c96 AS NUMERIC)))) IS TRUE)  as count FROM t0, v0, t1 ORDER BY CASE WHEN t0.c96 THEN t1.c0 WHEN v0.c0 THEN t0.c96 WHEN v0.c3 THEN t0.c96 ELSE v0.c2 END COLLATE BINARY  NULLS LAST, ((TYPEOF(v0.c1))==(((t1.c0) BETWEEN (v0.c0) AND (v0.c4)))));
SELECT ALL COUNT(*) FROM t0, v0, t1 WHERE (((((((v0.c4) BETWEEN (t1.c0) AND (v0.c2)))OR((((v0.c0))>((v0.c2))))))OR(CAST(t0.c96 AS NUMERIC)))) ORDER BY CASE WHEN t0.c96 THEN t1.c0 WHEN v0.c0 THEN t0.c96 WHEN v0.c3 THEN t0.c96 ELSE v0.c2 END COLLATE BINARY  NULLS LAST, ((TYPEOF(v0.c1))=(((t1.c0) BETWEEN (v0.c0) AND (v0.c4))));
SELECT * FROM t1 NATURAL JOIN v0 WHERE (UPPER(((v0.c3)!=(0.024952985233922975))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((v0.c3)<>(0.024952985233922975)))) IS TRUE)  as count FROM t1 NATURAL JOIN v0);
SELECT * FROM t1 NATURAL JOIN v0 WHERE (UPPER(((v0.c3)!=(0.024952985233922975))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((v0.c3)<>(0.024952985233922975)))) IS TRUE)  as count FROM t1 NATURAL JOIN v0);
SELECT * FROM t1 NATURAL JOIN v0 WHERE (UPPER(((v0.c3)!=(0.024952985233922975))));
SELECT ALL * FROM v0, t0 WHERE (((((v0.c3, v0.c3, v0.c4)) BETWEEN ((v0.c2, v0.c1, t0.c96)) AND ((v0.c2, v0.c0, v0.c3))) IN (((v0.c2)|(v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c3, v0.c3, v0.c4)) BETWEEN ((v0.c2, v0.c1, t0.c96)) AND ((v0.c2, v0.c0, v0.c3))) IN (((v0.c2)|(v0.c1))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (((((v0.c3, v0.c3, v0.c4)) BETWEEN ((v0.c2, v0.c1, t0.c96)) AND ((v0.c2, v0.c0, v0.c3))) IN (((v0.c2)|(v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c3, v0.c3, v0.c4)) BETWEEN ((v0.c2, v0.c1, t0.c96)) AND ((v0.c2, v0.c0, v0.c3))) IN (((v0.c2)|(v0.c1))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (((((v0.c3, v0.c3, v0.c4)) BETWEEN ((v0.c2, v0.c1, t0.c96)) AND ((v0.c2, v0.c0, v0.c3))) IN (((v0.c2)|(v0.c1)))));
SELECT ALL COUNT(*) FROM t0, v0 CROSS JOIN t1 ON ((((((t1.c0)AND(v0.c4)))OR(0.5079592117658852))) IS FALSE) WHERE (((((((((((v0.c2)||(t0.c96)))AND(0.7409240100664887)))AND((((t0.c96))>=((v0.c2))))))OR(((v0.c2) IS TRUE))))OR(0.717334640103458 COLLATE BINARY))) ORDER BY 0.9171342511119452  NULLS LAST, TRIM(((v0.c3)OR(x''))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c2)||(t0.c96)))AND(0.7409240100664887)))AND((((t0.c96))>=((v0.c2))))))OR(((v0.c2) IS TRUE))))OR(0.717334640103458 COLLATE BINARY))) IS TRUE)  as count FROM t0, v0 CROSS JOIN t1 ON ((((((t1.c0)AND(v0.c4)))OR(0.5079592117658852))) IS FALSE) ORDER BY 0.9171342511119452  NULLS LAST, TRIM(((v0.c3)OR(x''))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 CROSS JOIN t1 ON ((((((t1.c0)AND(v0.c4)))OR(0.5079592117658852))) IS FALSE) WHERE (((((((((((v0.c2)||(t0.c96)))AND(0.7409240100664887)))AND((((t0.c96))>=((v0.c2))))))OR(((v0.c2) IS TRUE))))OR(0.717334640103458 COLLATE BINARY))) ORDER BY 0.9171342511119452  NULLS LAST, TRIM(((v0.c3)OR(x''))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c2)||(t0.c96)))AND(0.7409240100664887)))AND((((t0.c96))>=((v0.c2))))))OR(((v0.c2) IS TRUE))))OR(0.717334640103458 COLLATE BINARY))) IS TRUE)  as count FROM t0, v0 CROSS JOIN t1 ON ((((((t1.c0)AND(v0.c4)))OR(0.5079592117658852))) IS FALSE) ORDER BY 0.9171342511119452  NULLS LAST, TRIM(((v0.c3)OR(x''))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 CROSS JOIN t1 ON ((((((t1.c0)AND(v0.c4)))OR(0.5079592117658852))) IS FALSE) WHERE (((((((((((v0.c2)||(t0.c96)))AND(0.7409240100664887)))AND((((t0.c96))>=((v0.c2))))))OR(((v0.c2) IS TRUE))))OR(0.717334640103458 COLLATE BINARY))) ORDER BY 0.9171342511119452  NULLS LAST, TRIM(((v0.c3)OR(x''))) ASC  NULLS LAST;
SELECT ALL * FROM t0, v0 WHERE ((- (((NULL)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((NULL)*(v0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((- (((NULL)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((NULL)*(v0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((- (((NULL)*(v0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c96);
SELECT SUM(count) FROM (SELECT ALL ((t0.c96) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c96);
SELECT SUM(count) FROM (SELECT ALL ((t0.c96) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c96);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((+ (t0.c96)))>(LIKE(t0.c96, t0.c96, '-'))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((+ (t0.c96)))>(LIKE(t0.c96, t0.c96, '-'))) DESC);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((+ (t0.c96)))>(LIKE(t0.c96, t0.c96, '-'))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((+ (t0.c96)))>(LIKE(t0.c96, t0.c96, '-'))) DESC);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((+ (t0.c96)))>(LIKE(t0.c96, t0.c96, '-'))) DESC;
SELECT * FROM v0 WHERE (((((v0.c1) IS FALSE))<(0.08210854672525447)));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) IS FALSE))<(0.08210854672525447))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c1) IS FALSE))<(0.08210854672525447)));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) IS FALSE))<(0.08210854672525447))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c1) IS FALSE))<(0.08210854672525447)));
SELECT ALL * FROM t0 WHERE (LENGTH(NULL)) ORDER BY ((t0.c96) IS FALSE) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((LENGTH(NULL)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c96) IS FALSE) COLLATE BINARY DESC);
SELECT ALL * FROM t0 WHERE (LENGTH(NULL)) ORDER BY ((t0.c96) IS FALSE) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((LENGTH(NULL)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c96) IS FALSE) COLLATE BINARY DESC);
SELECT ALL * FROM t0 WHERE (LENGTH(NULL)) ORDER BY ((t0.c96) IS FALSE) COLLATE BINARY DESC;
SELECT ALL * FROM v0, t1 WHERE ((((LOWER(v0.c2), ABS(v0.c1), v0.c3))<=((CAST(v0.c0 AS NUMERIC), v0.c1 COLLATE NOCASE, (v0.c0 IN (v0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((LOWER(v0.c2), ABS(v0.c1), v0.c3))<=((CAST(v0.c0 AS NUMERIC), v0.c1 COLLATE NOCASE, (v0.c0 IN (v0.c3)))))) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE ((((LOWER(v0.c2), ABS(v0.c1), v0.c3))<=((CAST(v0.c0 AS NUMERIC), v0.c1 COLLATE NOCASE, (v0.c0 IN (v0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((LOWER(v0.c2), ABS(v0.c1), v0.c3))<=((CAST(v0.c0 AS NUMERIC), v0.c1 COLLATE NOCASE, (v0.c0 IN (v0.c3)))))) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE ((((LOWER(v0.c2), ABS(v0.c1), v0.c3))<=((CAST(v0.c0 AS NUMERIC), v0.c1 COLLATE NOCASE, (v0.c0 IN (v0.c3))))));
SELECT ALL COUNT(*) FROM t1, t0, v0 WHERE ((((v0.c1, t1.c0, v0.c2, v0.c0, t1.c0)) NOT BETWEEN ((((x'')<<(v0.c2)), t1.c0, v0.c2 COLLATE RTRIM, ((v0.c4) NOTNULL), (v0.c1 IN ()))) AND ((((v0.c2)=(v0.c2)), LIKELY(t1.c0), v0.c3 COLLATE BINARY, (((v0.c4, t0.c96, v0.c4))>=((v0.c4, t1.c0, v0.c1))), ((v0.c3)/(t1.c0)))))) ORDER BY v0.c1 DESC, SQLITE_COMPILEOPTION_USED(v0.c4) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1, t1.c0, v0.c2, v0.c0, t1.c0)) NOT BETWEEN ((((x'')<<(v0.c2)), t1.c0, v0.c2 COLLATE RTRIM, ((v0.c4) NOTNULL), (v0.c1 IN ()))) AND ((((v0.c2)==(v0.c2)), LIKELY(t1.c0), v0.c3 COLLATE BINARY, (((v0.c4, t0.c96, v0.c4))>=((v0.c4, t1.c0, v0.c1))), ((v0.c3)/(t1.c0)))))) IS TRUE)  as count FROM t1, t0, v0 ORDER BY v0.c1 DESC, SQLITE_COMPILEOPTION_USED(v0.c4) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t1, t0, v0 WHERE ((((v0.c1, t1.c0, v0.c2, v0.c0, t1.c0)) NOT BETWEEN ((((x'')<<(v0.c2)), t1.c0, v0.c2 COLLATE RTRIM, ((v0.c4) NOTNULL), (v0.c1 IN ()))) AND ((((v0.c2)=(v0.c2)), LIKELY(t1.c0), v0.c3 COLLATE BINARY, (((v0.c4, t0.c96, v0.c4))>=((v0.c4, t1.c0, v0.c1))), ((v0.c3)/(t1.c0)))))) ORDER BY v0.c1 DESC, SQLITE_COMPILEOPTION_USED(v0.c4) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1, t1.c0, v0.c2, v0.c0, t1.c0)) NOT BETWEEN ((((x'')<<(v0.c2)), t1.c0, v0.c2 COLLATE RTRIM, ((v0.c4) NOTNULL), (v0.c1 IN ()))) AND ((((v0.c2)==(v0.c2)), LIKELY(t1.c0), v0.c3 COLLATE BINARY, (((v0.c4, t0.c96, v0.c4))>=((v0.c4, t1.c0, v0.c1))), ((v0.c3)/(t1.c0)))))) IS TRUE)  as count FROM t1, t0, v0 ORDER BY v0.c1 DESC, SQLITE_COMPILEOPTION_USED(v0.c4) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t1, t0, v0 WHERE ((((v0.c1, t1.c0, v0.c2, v0.c0, t1.c0)) NOT BETWEEN ((((x'')<<(v0.c2)), t1.c0, v0.c2 COLLATE RTRIM, ((v0.c4) NOTNULL), (v0.c1 IN ()))) AND ((((v0.c2)=(v0.c2)), LIKELY(t1.c0), v0.c3 COLLATE BINARY, (((v0.c4, t0.c96, v0.c4))>=((v0.c4, t1.c0, v0.c1))), ((v0.c3)/(t1.c0)))))) ORDER BY v0.c1 DESC, SQLITE_COMPILEOPTION_USED(v0.c4) COLLATE BINARY ASC;
SELECT ALL * FROM t1 WHERE ((NOT (t1.c0)) COLLATE NOCASE) ORDER BY 0.46859213247886256 DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY 0.46859213247886256 DESC);
SELECT ALL * FROM t1 WHERE ((NOT (t1.c0)) COLLATE NOCASE) ORDER BY 0.46859213247886256 DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY 0.46859213247886256 DESC);
SELECT ALL * FROM t1 WHERE ((NOT (t1.c0)) COLLATE NOCASE) ORDER BY 0.46859213247886256 DESC;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c96))<((t0.c96))) IN ())) ORDER BY (~ (((((((((t0.c96)OR(t0.c96)))OR(t0.c96)))OR(1010225264)))OR(t0.c96)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c96))<((t0.c96))) IN ())) IS TRUE)  as count FROM t0 ORDER BY (~ (((((((((t0.c96)OR(t0.c96)))OR(t0.c96)))OR(1010225264)))OR(t0.c96)))) ASC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c96))<((t0.c96))) IN ())) ORDER BY (~ (((((((((t0.c96)OR(t0.c96)))OR(t0.c96)))OR(1010225264)))OR(t0.c96)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c96))<((t0.c96))) IN ())) IS TRUE)  as count FROM t0 ORDER BY (~ (((((((((t0.c96)OR(t0.c96)))OR(t0.c96)))OR(1010225264)))OR(t0.c96)))) ASC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c96))<((t0.c96))) IN ())) ORDER BY (~ (((((((((t0.c96)OR(t0.c96)))OR(t0.c96)))OR(1010225264)))OR(t0.c96)))) ASC;
SELECT ALL COUNT(*) FROM t1, t0, v0 WHERE (CAST(v0.c3 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c3 AS INTEGER)) IS TRUE)  as count FROM t1, t0, v0);
SELECT ALL COUNT(*) FROM t1, t0, v0 WHERE (CAST(v0.c3 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c3 AS INTEGER)) IS TRUE)  as count FROM t1, t0, v0);
SELECT ALL COUNT(*) FROM t1, t0, v0 WHERE (CAST(v0.c3 AS INTEGER));
SELECT ALL * FROM t0 WHERE (CAST((~ (t0.c96)) AS BLOB)) ORDER BY CASE WHEN (NOT (t0.c96)) THEN ((t0.c96) NOT NULL) ELSE (t0.c96 IN (t0.c96)) END DESC, ((((t0.c96)OR(t0.c96)))OR(0.31502422718590917)) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (t0.c96)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (NOT (t0.c96)) THEN ((t0.c96) NOT NULL) ELSE (t0.c96 IN (t0.c96)) END DESC, ((((t0.c96)OR(t0.c96)))OR(0.31502422718590917)) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST((~ (t0.c96)) AS BLOB)) ORDER BY CASE WHEN (NOT (t0.c96)) THEN ((t0.c96) NOT NULL) ELSE (t0.c96 IN (t0.c96)) END DESC, ((((t0.c96)OR(t0.c96)))OR(0.31502422718590917)) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (t0.c96)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (NOT (t0.c96)) THEN ((t0.c96) NOT NULL) ELSE (t0.c96 IN (t0.c96)) END DESC, ((((t0.c96)OR(t0.c96)))OR(0.31502422718590917)) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST((~ (t0.c96)) AS BLOB)) ORDER BY CASE WHEN (NOT (t0.c96)) THEN ((t0.c96) NOT NULL) ELSE (t0.c96 IN (t0.c96)) END DESC, ((((t0.c96)OR(t0.c96)))OR(0.31502422718590917)) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0, t1 WHERE ((- (t0.c96)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c96)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0, t1);
SELECT ALL COUNT(*) FROM v0, t0, t1 WHERE ((- (t0.c96)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c96)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0, t1);
SELECT ALL COUNT(*) FROM v0, t0, t1 WHERE ((- (t0.c96)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, t0 INNER JOIN t1 ON NULLIF(((v0.c4) NOT BETWEEN (v0.c0) AND (v0.c3)), v0.c2) WHERE (((v0.c1)>>(v0.c2)) COLLATE RTRIM) ORDER BY ((((v0.c2)/(v0.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1)>>(v0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0 INNER JOIN t1 ON NULLIF(((v0.c4) NOT BETWEEN (v0.c0) AND (v0.c3)), v0.c2) ORDER BY ((((v0.c2)/(v0.c2))) IS FALSE));
SELECT ALL COUNT(*) FROM v0, t0 INNER JOIN t1 ON NULLIF(((v0.c4) NOT BETWEEN (v0.c0) AND (v0.c3)), v0.c2) WHERE (((v0.c1)>>(v0.c2)) COLLATE RTRIM) ORDER BY ((((v0.c2)/(v0.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1)>>(v0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0 INNER JOIN t1 ON NULLIF(((v0.c4) NOT BETWEEN (v0.c0) AND (v0.c3)), v0.c2) ORDER BY ((((v0.c2)/(v0.c2))) IS FALSE));
SELECT ALL COUNT(*) FROM v0, t0 INNER JOIN t1 ON NULLIF(((v0.c4) NOT BETWEEN (v0.c0) AND (v0.c3)), v0.c2) WHERE (((v0.c1)>>(v0.c2)) COLLATE RTRIM) ORDER BY ((((v0.c2)/(v0.c2))) IS FALSE);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2 COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2 COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2 COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2 COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2 COLLATE RTRIM COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE (CASE CASE t0.c96  WHEN t0.c96 THEN t0.c96 END  WHEN t0.c96 THEN t0.c96 COLLATE BINARY END) ORDER BY (((t0.c96)) BETWEEN (((((t0.c96, t0.c96, t0.c96, t0.c96, t0.c96))<>((t0.c96, t0.c96, t0.c96, t0.c96, t0.c96))))) AND ((CAST(t0.c96 AS REAL)))) ASC, (((((t0.c96)) NOT BETWEEN ((t0.c96)) AND ((t0.c96))))IS NOT(CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN NULL THEN t0.c96 ELSE t0.c96 END)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CASE t0.c96  WHEN t0.c96 THEN t0.c96 END  WHEN t0.c96 THEN t0.c96 COLLATE BINARY END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c96)) BETWEEN (((((t0.c96, t0.c96, t0.c96, t0.c96, t0.c96))!=((t0.c96, t0.c96, t0.c96, t0.c96, t0.c96))))) AND ((CAST(t0.c96 AS REAL)))) ASC, (((((t0.c96)) NOT BETWEEN ((t0.c96)) AND ((t0.c96))))IS NOT(CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN NULL THEN t0.c96 ELSE t0.c96 END)) ASC);
SELECT ALL * FROM t0 WHERE (CASE CASE t0.c96  WHEN t0.c96 THEN t0.c96 END  WHEN t0.c96 THEN t0.c96 COLLATE BINARY END) ORDER BY (((t0.c96)) BETWEEN (((((t0.c96, t0.c96, t0.c96, t0.c96, t0.c96))<>((t0.c96, t0.c96, t0.c96, t0.c96, t0.c96))))) AND ((CAST(t0.c96 AS REAL)))) ASC, (((((t0.c96)) NOT BETWEEN ((t0.c96)) AND ((t0.c96))))IS NOT(CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN NULL THEN t0.c96 ELSE t0.c96 END)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CASE t0.c96  WHEN t0.c96 THEN t0.c96 END  WHEN t0.c96 THEN t0.c96 COLLATE BINARY END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c96)) BETWEEN (((((t0.c96, t0.c96, t0.c96, t0.c96, t0.c96))!=((t0.c96, t0.c96, t0.c96, t0.c96, t0.c96))))) AND ((CAST(t0.c96 AS REAL)))) ASC, (((((t0.c96)) NOT BETWEEN ((t0.c96)) AND ((t0.c96))))IS NOT(CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN NULL THEN t0.c96 ELSE t0.c96 END)) ASC);
SELECT ALL * FROM t0 WHERE (CASE CASE t0.c96  WHEN t0.c96 THEN t0.c96 END  WHEN t0.c96 THEN t0.c96 COLLATE BINARY END) ORDER BY (((t0.c96)) BETWEEN (((((t0.c96, t0.c96, t0.c96, t0.c96, t0.c96))<>((t0.c96, t0.c96, t0.c96, t0.c96, t0.c96))))) AND ((CAST(t0.c96 AS REAL)))) ASC, (((((t0.c96)) NOT BETWEEN ((t0.c96)) AND ((t0.c96))))IS NOT(CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN t0.c96 WHEN NULL THEN t0.c96 ELSE t0.c96 END)) ASC;
SELECT ALL * FROM t0, v0 FULL OUTER JOIN t1 ON ((CASE WHEN v0.c3 THEN v0.c1 WHEN t0.c96 THEN x'' WHEN v0.c1 THEN v0.c2 ELSE v0.c4 END)>=((NOT (t1.c0)))) WHERE ((((v0.c0))>((2.098809334E9))) COLLATE NOCASE) ORDER BY ((((- (v0.c3))))<=((CAST(v0.c2 AS BLOB)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))>((2.098809334E9))) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN t1 ON ((CASE WHEN v0.c3 THEN v0.c1 WHEN t0.c96 THEN x'' WHEN v0.c1 THEN v0.c2 ELSE v0.c4 END)>=((NOT (t1.c0)))) ORDER BY ((((- (v0.c3))))<=((CAST(v0.c2 AS BLOB)))) DESC);
SELECT ALL * FROM t0, v0 FULL OUTER JOIN t1 ON ((CASE WHEN v0.c3 THEN v0.c1 WHEN t0.c96 THEN x'' WHEN v0.c1 THEN v0.c2 ELSE v0.c4 END)>=((NOT (t1.c0)))) WHERE ((((v0.c0))>((2.098809334E9))) COLLATE NOCASE) ORDER BY ((((- (v0.c3))))<=((CAST(v0.c2 AS BLOB)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))>((2.098809334E9))) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN t1 ON ((CASE WHEN v0.c3 THEN v0.c1 WHEN t0.c96 THEN x'' WHEN v0.c1 THEN v0.c2 ELSE v0.c4 END)>=((NOT (t1.c0)))) ORDER BY ((((- (v0.c3))))<=((CAST(v0.c2 AS BLOB)))) DESC);
SELECT ALL * FROM t0, v0 FULL OUTER JOIN t1 ON ((CASE WHEN v0.c3 THEN v0.c1 WHEN t0.c96 THEN x'' WHEN v0.c1 THEN v0.c2 ELSE v0.c4 END)>=((NOT (t1.c0)))) WHERE ((((v0.c0))>((2.098809334E9))) COLLATE NOCASE) ORDER BY ((((- (v0.c3))))<=((CAST(v0.c2 AS BLOB)))) DESC;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON ((v0.c2)*(v0.c3)) COLLATE RTRIM WHERE ((~ ((~ (v0.c4)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (v0.c4))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((v0.c2)*(v0.c3)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON ((v0.c2)*(v0.c3)) COLLATE RTRIM WHERE ((~ ((~ (v0.c4)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (v0.c4))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((v0.c2)*(v0.c3)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON ((v0.c2)*(v0.c3)) COLLATE RTRIM WHERE ((~ ((~ (v0.c4)))));
SELECT ALL * FROM t1 WHERE (CASE t1.c0  WHEN json_array_length(t1.c0, t1.c0) THEN NULL ELSE CASE t1.c0  WHEN t1.c0 THEN t1.c0 END END) ORDER BY (((((t1.c0, '', t1.c0))>=((t1.c0, t1.c0, t1.c0))))>=(((t1.c0)!=(t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE t1.c0  WHEN json_array_length(t1.c0, t1.c0) THEN NULL ELSE CASE t1.c0  WHEN t1.c0 THEN t1.c0 END END) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0, '', t1.c0))>=((t1.c0, t1.c0, t1.c0))))>=(((t1.c0)!=(t1.c0))))  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CASE t1.c0  WHEN json_array_length(t1.c0, t1.c0) THEN NULL ELSE CASE t1.c0  WHEN t1.c0 THEN t1.c0 END END) ORDER BY (((((t1.c0, '', t1.c0))>=((t1.c0, t1.c0, t1.c0))))>=(((t1.c0)!=(t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE t1.c0  WHEN json_array_length(t1.c0, t1.c0) THEN NULL ELSE CASE t1.c0  WHEN t1.c0 THEN t1.c0 END END) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0, '', t1.c0))>=((t1.c0, t1.c0, t1.c0))))>=(((t1.c0)!=(t1.c0))))  NULLS LAST);
SELECT * FROM t0 WHERE (((TRIM('jO'))==(((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96))))) ORDER BY t0.c96 DESC  NULLS LAST, ((((((t0.c96) IS TRUE))OR(CAST(t0.c96 AS TEXT))))OR(CAST(t0.c96 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM('jO'))==(((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96))))) IS TRUE)  as count FROM t0 ORDER BY t0.c96 DESC  NULLS LAST, ((((((t0.c96) IS TRUE))OR(CAST(t0.c96 AS TEXT))))OR(CAST(t0.c96 AS INTEGER))));
SELECT * FROM t0 WHERE (((TRIM('jO'))==(((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96))))) ORDER BY t0.c96 DESC  NULLS LAST, ((((((t0.c96) IS TRUE))OR(CAST(t0.c96 AS TEXT))))OR(CAST(t0.c96 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM('jO'))==(((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96))))) IS TRUE)  as count FROM t0 ORDER BY t0.c96 DESC  NULLS LAST, ((((((t0.c96) IS TRUE))OR(CAST(t0.c96 AS TEXT))))OR(CAST(t0.c96 AS INTEGER))));
SELECT * FROM t0 WHERE (((TRIM('jO'))==(((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96))))) ORDER BY t0.c96 DESC  NULLS LAST, ((((((t0.c96) IS TRUE))OR(CAST(t0.c96 AS TEXT))))OR(CAST(t0.c96 AS INTEGER)));
SELECT * FROM t1, t0, v0 WHERE ((v0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t1, t0, v0);
SELECT * FROM t1, t0, v0 WHERE ((v0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t1, t0, v0);
SELECT * FROM t1, t0, v0 WHERE ((v0.c0 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON v0.c2 WHERE (0.5840102558556531);
SELECT SUM(count) FROM (SELECT ALL ((0.5840102558556531) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON v0.c2);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON v0.c2 WHERE (0.5840102558556531);
SELECT SUM(count) FROM (SELECT ALL ((0.5840102558556531) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON v0.c2);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON v0.c2 WHERE (0.5840102558556531);
SELECT ALL COUNT(*) FROM t0, v0 NOT INDEXED WHERE ((((-1401908114 IN ()))<<(((v0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((-1401908114 IN ()))<<(((v0.c1) ISNULL)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 NOT INDEXED WHERE ((((-1401908114 IN ()))<<(((v0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((-1401908114 IN ()))<<(((v0.c1) ISNULL)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 NOT INDEXED WHERE ((((-1401908114 IN ()))<<(((v0.c1) ISNULL))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c96)) NOT BETWEEN ((t0.c96 COLLATE NOCASE)) AND ((((t0.c96) BETWEEN (t0.c96) AND (t0.c96)))))) ORDER BY (((CAST(t0.c96 AS NUMERIC)))<((ABS(DISTINCT t0.c96))))  NULLS LAST, ((((t0.c96)OR(LOWER(DISTINCT t0.c96))))OR(CASE WHEN t0.c96 THEN t0.c96 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c96)) NOT BETWEEN ((t0.c96 COLLATE NOCASE)) AND ((((t0.c96) BETWEEN (t0.c96) AND (t0.c96)))))) IS TRUE)  as count FROM t0 ORDER BY (((CAST(t0.c96 AS NUMERIC)))<((ABS(DISTINCT t0.c96))))  NULLS LAST, ((((t0.c96)OR(LOWER(DISTINCT t0.c96))))OR(CASE WHEN t0.c96 THEN t0.c96 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c96)) NOT BETWEEN ((t0.c96 COLLATE NOCASE)) AND ((((t0.c96) BETWEEN (t0.c96) AND (t0.c96)))))) ORDER BY (((CAST(t0.c96 AS NUMERIC)))<((ABS(DISTINCT t0.c96))))  NULLS LAST, ((((t0.c96)OR(LOWER(DISTINCT t0.c96))))OR(CASE WHEN t0.c96 THEN t0.c96 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c96)) NOT BETWEEN ((t0.c96 COLLATE NOCASE)) AND ((((t0.c96) BETWEEN (t0.c96) AND (t0.c96)))))) IS TRUE)  as count FROM t0 ORDER BY (((CAST(t0.c96 AS NUMERIC)))<((ABS(DISTINCT t0.c96))))  NULLS LAST, ((((t0.c96)OR(LOWER(DISTINCT t0.c96))))OR(CASE WHEN t0.c96 THEN t0.c96 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c96)) NOT BETWEEN ((t0.c96 COLLATE NOCASE)) AND ((((t0.c96) BETWEEN (t0.c96) AND (t0.c96)))))) ORDER BY (((CAST(t0.c96 AS NUMERIC)))<((ABS(DISTINCT t0.c96))))  NULLS LAST, ((((t0.c96)OR(LOWER(DISTINCT t0.c96))))OR(CASE WHEN t0.c96 THEN t0.c96 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1, t0, v0 WHERE (((v0.c4)+('07days?Ov卮'))) ORDER BY ((TRIM(v0.c2)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c4)+('07days?Ov卮'))) IS TRUE)  as count FROM t1, t0, v0 ORDER BY ((TRIM(v0.c2)) IS TRUE));
SELECT COUNT(*) FROM t1, t0, v0 WHERE (((v0.c4)+('07days?Ov卮'))) ORDER BY ((TRIM(v0.c2)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c4)+('07days?Ov卮'))) IS TRUE)  as count FROM t1, t0, v0 ORDER BY ((TRIM(v0.c2)) IS TRUE));
SELECT COUNT(*) FROM t1, t0, v0 WHERE (((v0.c4)+('07days?Ov卮'))) ORDER BY ((TRIM(v0.c2)) IS TRUE);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE BINARY)>(((t1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE BINARY)>(((t1.c0) ISNULL)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE BINARY)>(((t1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE BINARY)>(((t1.c0) ISNULL)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE BINARY)>(((t1.c0) ISNULL))));
SELECT COUNT(*) FROM t0, t1 WHERE (COALESCE(DISTINCT UPPER(t0.c96), ((t0.c96) BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY 'I|(3,'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT UPPER(t0.c96), ((t0.c96) BETWEEN (t1.c0) AND (t1.c0)))) IS TRUE)  as count FROM t0, t1 ORDER BY 'I|(3,'  NULLS FIRST);
SELECT COUNT(*) FROM t0, t1 WHERE (COALESCE(DISTINCT UPPER(t0.c96), ((t0.c96) BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY 'I|(3,'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT UPPER(t0.c96), ((t0.c96) BETWEEN (t1.c0) AND (t1.c0)))) IS TRUE)  as count FROM t0, t1 ORDER BY 'I|(3,'  NULLS FIRST);
SELECT COUNT(*) FROM t0, t1 WHERE (COALESCE(DISTINCT UPPER(t0.c96), ((t0.c96) BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY 'I|(3,'  NULLS FIRST;
SELECT * FROM v0, t0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c4)))*(CASE v0.c0  WHEN v0.c1 THEN v0.c3 ELSE v0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c4)))*(CASE v0.c0  WHEN v0.c1 THEN v0.c3 ELSE v0.c2 END))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c4)))*(CASE v0.c0  WHEN v0.c1 THEN v0.c3 ELSE v0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c4)))*(CASE v0.c0  WHEN v0.c1 THEN v0.c3 ELSE v0.c2 END))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c4)))*(CASE v0.c0  WHEN v0.c1 THEN v0.c3 ELSE v0.c2 END)));
SELECT ALL * FROM t0 WHERE (LIKELIHOOD(DISTINCT (t0.c96 IN (t0.c96)), 0.1286633205203771));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (t0.c96 IN (t0.c96)), 0.1286633205203771)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (LIKELIHOOD(DISTINCT (t0.c96 IN (t0.c96)), 0.1286633205203771));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (t0.c96 IN (t0.c96)), 0.1286633205203771)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (LIKELIHOOD(DISTINCT (t0.c96 IN (t0.c96)), 0.1286633205203771));
SELECT * FROM t0 WHERE ((((t0.c96 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c96 IN ())) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c96 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c96 IN ())) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c96 IN ())) IS TRUE));
SELECT COUNT(*) FROM v0, t0, t1 WHERE ((((((((((v0.c3)AND(v0.c3)))AND(t1.c0)))AND(v0.c3)))OR(v0.c4)) IN ())) ORDER BY ((((v0.c2) IS FALSE))<<(v0.c3 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((v0.c3)AND(v0.c3)))AND(t1.c0)))AND(v0.c3)))OR(v0.c4)) IN ())) IS TRUE)  as count FROM v0, t0, t1 ORDER BY ((((v0.c2) IS FALSE))<<(v0.c3 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, t1 WHERE ((((((((((v0.c3)AND(v0.c3)))AND(t1.c0)))AND(v0.c3)))OR(v0.c4)) IN ())) ORDER BY ((((v0.c2) IS FALSE))<<(v0.c3 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((v0.c3)AND(v0.c3)))AND(t1.c0)))AND(v0.c3)))OR(v0.c4)) IN ())) IS TRUE)  as count FROM v0, t0, t1 ORDER BY ((((v0.c2) IS FALSE))<<(v0.c3 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, t1 WHERE ((((((((((v0.c3)AND(v0.c3)))AND(t1.c0)))AND(v0.c3)))OR(v0.c4)) IN ())) ORDER BY ((((v0.c2) IS FALSE))<<(v0.c3 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, t1, v0 WHERE (((CASE t0.c96  WHEN v0.c1 THEN v0.c4 WHEN v0.c3 THEN t1.c0 WHEN t1.c0 THEN v0.c4 ELSE v0.c4 END)<(CAST(t1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c96  WHEN v0.c1 THEN v0.c4 WHEN v0.c3 THEN t1.c0 WHEN t1.c0 THEN v0.c4 ELSE v0.c4 END)<(CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM t0, t1, v0);
SELECT COUNT(*) FROM t0, t1, v0 WHERE (((CASE t0.c96  WHEN v0.c1 THEN v0.c4 WHEN v0.c3 THEN t1.c0 WHEN t1.c0 THEN v0.c4 ELSE v0.c4 END)<(CAST(t1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c96  WHEN v0.c1 THEN v0.c4 WHEN v0.c3 THEN t1.c0 WHEN t1.c0 THEN v0.c4 ELSE v0.c4 END)<(CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM t0, t1, v0);
SELECT COUNT(*) FROM t0, t1, v0 WHERE (((CASE t0.c96  WHEN v0.c1 THEN v0.c4 WHEN v0.c3 THEN t1.c0 WHEN t1.c0 THEN v0.c4 ELSE v0.c4 END)<(CAST(t1.c0 AS BLOB))));
SELECT COUNT(*) FROM t1, v0 WHERE ((t1.c0 IN ()) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((t1.c0 IN ()) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM t1, v0);
SELECT COUNT(*) FROM t1, v0 WHERE ((t1.c0 IN ()) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((t1.c0 IN ()) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM t1, v0);
SELECT COUNT(*) FROM t1, v0 WHERE ((t1.c0 IN ()) COLLATE BINARY COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) NOTNULL))>=(t1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOTNULL))>=(t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) NOTNULL))>=(t1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOTNULL))>=(t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0) NOTNULL))>=(t1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((v0.c4))<=((v0.c4))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c4))<=((v0.c4))) IN ())) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((v0.c4))<=((v0.c4))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c4))<=((v0.c4))) IN ())) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((v0.c4))<=((v0.c4))) IN ()));
SELECT * FROM t0, v0 WHERE ((STRFTIME(t0.c96, v0.c2, t0.c96) IN ()));
SELECT SUM(count) FROM (SELECT (((STRFTIME(t0.c96, v0.c2, t0.c96) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((STRFTIME(t0.c96, v0.c2, t0.c96) IN ()));
SELECT SUM(count) FROM (SELECT (((STRFTIME(t0.c96, v0.c2, t0.c96) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((STRFTIME(t0.c96, v0.c2, t0.c96) IN ()));
SELECT * FROM t1 RIGHT OUTER JOIN t0 ON (~ (CASE WHEN v0.c4 THEN v0.c2 END)) RIGHT OUTER JOIN v0 ON (((- (v0.c3)))>(CAST(t1.c0 AS TEXT))) WHERE (((((t0.c96) ISNULL)) BETWEEN ((((v0.c2)) BETWEEN ((v0.c4)) AND ((v0.c0)))) AND (((t1.c0)<(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c96) ISNULL)) BETWEEN ((((v0.c2)) BETWEEN ((v0.c4)) AND ((v0.c0)))) AND (((t1.c0)<(v0.c1))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN t0 ON (~ (CASE WHEN v0.c4 THEN v0.c2 END)) RIGHT OUTER JOIN v0 ON (((- (v0.c3)))>(CAST(t1.c0 AS TEXT))));
SELECT * FROM t1 RIGHT OUTER JOIN t0 ON (~ (CASE WHEN v0.c4 THEN v0.c2 END)) RIGHT OUTER JOIN v0 ON (((- (v0.c3)))>(CAST(t1.c0 AS TEXT))) WHERE (((((t0.c96) ISNULL)) BETWEEN ((((v0.c2)) BETWEEN ((v0.c4)) AND ((v0.c0)))) AND (((t1.c0)<(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c96) ISNULL)) BETWEEN ((((v0.c2)) BETWEEN ((v0.c4)) AND ((v0.c0)))) AND (((t1.c0)<(v0.c1))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN t0 ON (~ (CASE WHEN v0.c4 THEN v0.c2 END)) RIGHT OUTER JOIN v0 ON (((- (v0.c3)))>(CAST(t1.c0 AS TEXT))));
SELECT * FROM t1, t0, v0 WHERE ((((SQLITE_VERSION()))>((((v0.c1) IS FALSE))))) ORDER BY (((NULL)OR(v0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((SQLITE_VERSION()))>((((v0.c1) IS FALSE))))) IS TRUE)  as count FROM t1, t0, v0 NOT INDEXED ORDER BY (((NULL)OR(v0.c0)) IN ())  NULLS LAST);
SELECT * FROM t1, t0, v0 WHERE ((((SQLITE_VERSION()))>((((v0.c1) IS FALSE))))) ORDER BY (((NULL)OR(v0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((SQLITE_VERSION()))>((((v0.c1) IS FALSE))))) IS TRUE)  as count FROM t1, t0, v0 NOT INDEXED ORDER BY (((NULL)OR(v0.c0)) IN ())  NULLS LAST);
SELECT * FROM t1, t0, v0 WHERE ((((SQLITE_VERSION()))>((((v0.c1) IS FALSE))))) ORDER BY (((NULL)OR(v0.c0)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM t1 INNER JOIN v0 ON '%wR' COLLATE RTRIM WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 INNER JOIN v0 ON '%wR' COLLATE RTRIM);
SELECT COUNT(*) FROM t1 INNER JOIN v0 ON '%wR' COLLATE RTRIM WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 INNER JOIN v0 ON '%wR' COLLATE RTRIM);
SELECT COUNT(*) FROM t1 INNER JOIN v0 ON '%wR' COLLATE RTRIM WHERE (NULL);
SELECT * FROM v0, t1 WHERE ((((NOT (0.860725066160874))) BETWEEN (TOTAL_CHANGES()) AND (CAST(t1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((NOT (0.860725066160874))) BETWEEN (TOTAL_CHANGES()) AND (CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM v0, t1);
SELECT * FROM v0, t1 WHERE ((((NOT (0.860725066160874))) BETWEEN (TOTAL_CHANGES()) AND (CAST(t1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((NOT (0.860725066160874))) BETWEEN (TOTAL_CHANGES()) AND (CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM v0, t1);
SELECT * FROM v0, t1 WHERE ((((NOT (0.860725066160874))) BETWEEN (TOTAL_CHANGES()) AND (CAST(t1.c0 AS TEXT))));
SELECT * FROM v0 CROSS JOIN t0 ON ((((t1.c0)=(t1.c0))) NOT BETWEEN ((v0.c1 IN ())) AND (HEX(DISTINCT v0.c1))) LEFT OUTER JOIN t1 ON CASE ((v0.c2)%(v0.c1))  WHEN ((v0.c4)||(v0.c4)) THEN CAST(t1.c0 AS INTEGER) END WHERE ((((- (v0.c3)))IS NOT(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((- (v0.c3)))IS NOT(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((((t1.c0)=(t1.c0))) NOT BETWEEN ((v0.c1 IN ())) AND (HEX(DISTINCT v0.c1))) LEFT OUTER JOIN t1 ON CASE ((v0.c2)%(v0.c1))  WHEN ((v0.c4)||(v0.c4)) THEN CAST(t1.c0 AS INTEGER) END);
SELECT * FROM v0 CROSS JOIN t0 ON ((((t1.c0)=(t1.c0))) NOT BETWEEN ((v0.c1 IN ())) AND (HEX(DISTINCT v0.c1))) LEFT OUTER JOIN t1 ON CASE ((v0.c2)%(v0.c1))  WHEN ((v0.c4)||(v0.c4)) THEN CAST(t1.c0 AS INTEGER) END WHERE ((((- (v0.c3)))IS NOT(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((- (v0.c3)))IS NOT(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((((t1.c0)=(t1.c0))) NOT BETWEEN ((v0.c1 IN ())) AND (HEX(DISTINCT v0.c1))) LEFT OUTER JOIN t1 ON CASE ((v0.c2)%(v0.c1))  WHEN ((v0.c4)||(v0.c4)) THEN CAST(t1.c0 AS INTEGER) END);
SELECT * FROM v0 CROSS JOIN t0 ON ((((t1.c0)=(t1.c0))) NOT BETWEEN ((v0.c1 IN ())) AND (HEX(DISTINCT v0.c1))) LEFT OUTER JOIN t1 ON CASE ((v0.c2)%(v0.c1))  WHEN ((v0.c4)||(v0.c4)) THEN CAST(t1.c0 AS INTEGER) END WHERE ((((- (v0.c3)))IS NOT(((v0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM t0, v0 NATURAL JOIN t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, v0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM t0, v0 NATURAL JOIN t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, v0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM t0, v0 NATURAL JOIN t1 WHERE (x'');
SELECT COUNT(*) FROM t0 WHERE ((((t0.c96) NOT NULL) IN ())) ORDER BY HEX(DISTINCT CASE t0.c96  WHEN t0.c96 THEN t0.c96 WHEN 0.012301770262371337 THEN t0.c96 WHEN t0.c96 THEN t0.c96 END);
SELECT SUM(count) FROM (SELECT (((((t0.c96) NOT NULL) IN ())) IS TRUE)  as count FROM t0 ORDER BY HEX(DISTINCT CASE t0.c96  WHEN t0.c96 THEN t0.c96 WHEN 0.012301770262371337 THEN t0.c96 WHEN t0.c96 THEN t0.c96 END));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c96) NOT NULL) IN ())) ORDER BY HEX(DISTINCT CASE t0.c96  WHEN t0.c96 THEN t0.c96 WHEN 0.012301770262371337 THEN t0.c96 WHEN t0.c96 THEN t0.c96 END);
SELECT SUM(count) FROM (SELECT (((((t0.c96) NOT NULL) IN ())) IS TRUE)  as count FROM t0 ORDER BY HEX(DISTINCT CASE t0.c96  WHEN t0.c96 THEN t0.c96 WHEN 0.012301770262371337 THEN t0.c96 WHEN t0.c96 THEN t0.c96 END));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c96) NOT NULL) IN ())) ORDER BY HEX(DISTINCT CASE t0.c96  WHEN t0.c96 THEN t0.c96 WHEN 0.012301770262371337 THEN t0.c96 WHEN t0.c96 THEN t0.c96 END);
SELECT COUNT(*) FROM v0, t0, t1 WHERE ((((v0.c3))<((v0.c4)))) ORDER BY (((((((((NOT (t0.c96)))OR(v0.c4 COLLATE BINARY)))OR(CASE WHEN v0.c3 THEN t1.c0 WHEN v0.c0 THEN v0.c1 WHEN t1.c0 THEN v0.c2 END)))OR(CAST(t1.c0 AS REAL))))OR(((v0.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c3))<((v0.c4)))) IS TRUE)  as count FROM v0, t0, t1 ORDER BY (((((((((NOT (t0.c96)))OR(v0.c4 COLLATE BINARY)))OR(CASE WHEN v0.c3 THEN t1.c0 WHEN v0.c0 THEN v0.c1 WHEN t1.c0 THEN v0.c2 END)))OR(CAST(t1.c0 AS REAL))))OR(((v0.c2) IS FALSE))));
SELECT COUNT(*) FROM v0, t0, t1 WHERE ((((v0.c3))<((v0.c4)))) ORDER BY (((((((((NOT (t0.c96)))OR(v0.c4 COLLATE BINARY)))OR(CASE WHEN v0.c3 THEN t1.c0 WHEN v0.c0 THEN v0.c1 WHEN t1.c0 THEN v0.c2 END)))OR(CAST(t1.c0 AS REAL))))OR(((v0.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c3))<((v0.c4)))) IS TRUE)  as count FROM v0, t0, t1 ORDER BY (((((((((NOT (t0.c96)))OR(v0.c4 COLLATE BINARY)))OR(CASE WHEN v0.c3 THEN t1.c0 WHEN v0.c0 THEN v0.c1 WHEN t1.c0 THEN v0.c2 END)))OR(CAST(t1.c0 AS REAL))))OR(((v0.c2) IS FALSE))));
SELECT COUNT(*) FROM v0, t0, t1 WHERE ((((v0.c3))<((v0.c4)))) ORDER BY (((((((((NOT (t0.c96)))OR(v0.c4 COLLATE BINARY)))OR(CASE WHEN v0.c3 THEN t1.c0 WHEN v0.c0 THEN v0.c1 WHEN t1.c0 THEN v0.c2 END)))OR(CAST(t1.c0 AS REAL))))OR(((v0.c2) IS FALSE)));
SELECT * FROM t1 RIGHT OUTER JOIN t0 ON ((((((((((((((((t0.c96)AND(t1.c0)))AND(t0.c96)))AND(t1.c0)))AND(t0.c96)))OR(0.44341061529068837)))AND('*Kj3')))OR(((t1.c0) BETWEEN (t0.c96) AND (t0.c96)))))AND((t0.c96 IN (t1.c0, t1.c0, t0.c96)))) WHERE (((((t1.c0 IN ()), ((t0.c96) NOT NULL), (('r_VP%>䦬2''')LIKE(t0.c96))))<((((NULL)/(t1.c0)), ((((((((((((t1.c0)AND(t0.c96)))OR(t0.c96)))OR(t1.c0)))OR(t1.c0)))AND(t0.c96)))OR(t1.c0)), ((t0.c96) ISNULL)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0 IN ()), ((t0.c96) NOT NULL), (('r_VP%>䦬2''')LIKE(t0.c96))))<((((NULL)/(t1.c0)), ((((((((((((t1.c0)AND(t0.c96)))OR(t0.c96)))OR(t1.c0)))OR(t1.c0)))AND(t0.c96)))OR(t1.c0)), ((t0.c96) ISNULL))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN t0 ON ((((((((((((((((t0.c96)AND(t1.c0)))AND(t0.c96)))AND(t1.c0)))AND(t0.c96)))OR(0.44341061529068837)))AND('*Kj3')))OR(((t1.c0) BETWEEN (t0.c96) AND (t0.c96)))))AND((t0.c96 IN (t1.c0, t1.c0, t0.c96)))));
SELECT * FROM t1 RIGHT OUTER JOIN t0 ON ((((((((((((((((t0.c96)AND(t1.c0)))AND(t0.c96)))AND(t1.c0)))AND(t0.c96)))OR(0.44341061529068837)))AND('*Kj3')))OR(((t1.c0) BETWEEN (t0.c96) AND (t0.c96)))))AND((t0.c96 IN (t1.c0, t1.c0, t0.c96)))) WHERE (((((t1.c0 IN ()), ((t0.c96) NOT NULL), (('r_VP%>䦬2''')LIKE(t0.c96))))<((((NULL)/(t1.c0)), ((((((((((((t1.c0)AND(t0.c96)))OR(t0.c96)))OR(t1.c0)))OR(t1.c0)))AND(t0.c96)))OR(t1.c0)), ((t0.c96) ISNULL)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0 IN ()), ((t0.c96) NOT NULL), (('r_VP%>䦬2''')LIKE(t0.c96))))<((((NULL)/(t1.c0)), ((((((((((((t1.c0)AND(t0.c96)))OR(t0.c96)))OR(t1.c0)))OR(t1.c0)))AND(t0.c96)))OR(t1.c0)), ((t0.c96) ISNULL))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN t0 ON ((((((((((((((((t0.c96)AND(t1.c0)))AND(t0.c96)))AND(t1.c0)))AND(t0.c96)))OR(0.44341061529068837)))AND('*Kj3')))OR(((t1.c0) BETWEEN (t0.c96) AND (t0.c96)))))AND((t0.c96 IN (t1.c0, t1.c0, t0.c96)))));
SELECT * FROM t1 RIGHT OUTER JOIN t0 ON ((((((((((((((((t0.c96)AND(t1.c0)))AND(t0.c96)))AND(t1.c0)))AND(t0.c96)))OR(0.44341061529068837)))AND('*Kj3')))OR(((t1.c0) BETWEEN (t0.c96) AND (t0.c96)))))AND((t0.c96 IN (t1.c0, t1.c0, t0.c96)))) WHERE (((((t1.c0 IN ()), ((t0.c96) NOT NULL), (('r_VP%>䦬2''')LIKE(t0.c96))))<((((NULL)/(t1.c0)), ((((((((((((t1.c0)AND(t0.c96)))OR(t0.c96)))OR(t1.c0)))OR(t1.c0)))AND(t0.c96)))OR(t1.c0)), ((t0.c96) ISNULL)))));
SELECT ALL * FROM t1, t0 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t0.c96 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) IS TRUE)) ORDER BY t1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t0.c96 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) IS TRUE)) IS TRUE)  as count FROM t1, t0 ORDER BY t1.c0 ASC  NULLS FIRST);
SELECT ALL * FROM t1, t0 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t0.c96 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) IS TRUE)) ORDER BY t1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t0.c96 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) IS TRUE)) IS TRUE)  as count FROM t1, t0 ORDER BY t1.c0 ASC  NULLS FIRST);
SELECT ALL * FROM t1, t0 WHERE (((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t0.c96 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) IS TRUE)) ORDER BY t1.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, t1 WHERE (SQLITE_COMPILEOPTION_GET(6.44787255E8)) ORDER BY ((t0.c96) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY DESC  NULLS LAST, CAST(((t0.c96)AND(t1.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(6.44787255E8)) IS TRUE)  as count FROM t0, t1 ORDER BY ((t0.c96) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY DESC  NULLS LAST, CAST(((t0.c96)AND(t1.c0)) AS REAL) DESC);
SELECT COUNT(*) FROM t0, t1 WHERE (SQLITE_COMPILEOPTION_GET(6.44787255E8)) ORDER BY ((t0.c96) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY DESC  NULLS LAST, CAST(((t0.c96)AND(t1.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(6.44787255E8)) IS TRUE)  as count FROM t0, t1 ORDER BY ((t0.c96) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY DESC  NULLS LAST, CAST(((t0.c96)AND(t1.c0)) AS REAL) DESC);
SELECT COUNT(*) FROM t0, t1 WHERE (SQLITE_COMPILEOPTION_GET(6.44787255E8)) ORDER BY ((t0.c96) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY DESC  NULLS LAST, CAST(((t0.c96)AND(t1.c0)) AS REAL) DESC;
SELECT ALL * FROM v0 WHERE (((((x'b3a7')AND((~ (v0.c3)))))AND(((v0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((x'b3a7')AND((~ (v0.c3)))))AND(((v0.c1) NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((x'b3a7')AND((~ (v0.c3)))))AND(((v0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((x'b3a7')AND((~ (v0.c3)))))AND(((v0.c1) NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((x'b3a7')AND((~ (v0.c3)))))AND(((v0.c1) NOTNULL))));
SELECT * FROM t1, t0 INNER JOIN v0 ON (((((((v0.c0)) NOT BETWEEN ((x'')) AND ((t0.c96))))AND(TRIM(x'c9e6', v0.c2))))OR(((((t0.c96)OR(0.4148264419588076)))AND(v0.c0)))) WHERE (CAST((t0.c96 IN (v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c96 IN (v0.c0)) AS BLOB)) IS TRUE)  as count FROM t1, t0 INNER JOIN v0 ON (((((((v0.c0)) NOT BETWEEN ((x'')) AND ((t0.c96))))AND(TRIM(x'c9e6', v0.c2))))OR(((((t0.c96)OR(0.4148264419588076)))AND(v0.c0)))));
SELECT * FROM t1, t0 INNER JOIN v0 ON (((((((v0.c0)) NOT BETWEEN ((x'')) AND ((t0.c96))))AND(TRIM(x'c9e6', v0.c2))))OR(((((t0.c96)OR(0.4148264419588076)))AND(v0.c0)))) WHERE (CAST((t0.c96 IN (v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c96 IN (v0.c0)) AS BLOB)) IS TRUE)  as count FROM t1, t0 INNER JOIN v0 ON (((((((v0.c0)) NOT BETWEEN ((x'')) AND ((t0.c96))))AND(TRIM(x'c9e6', v0.c2))))OR(((((t0.c96)OR(0.4148264419588076)))AND(v0.c0)))));
SELECT * FROM t1, t0 INNER JOIN v0 ON (((((((v0.c0)) NOT BETWEEN ((x'')) AND ((t0.c96))))AND(TRIM(x'c9e6', v0.c2))))OR(((((t0.c96)OR(0.4148264419588076)))AND(v0.c0)))) WHERE (CAST((t0.c96 IN (v0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)IS NOT(t1.c0))) BETWEEN ((0.9207488126316434 IN ())) AND (t1.c0 COLLATE NOCASE))) ORDER BY (+ (t1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)IS NOT(t1.c0))) BETWEEN ((0.9207488126316434 IN ())) AND (t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1 ORDER BY (+ (t1.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)IS NOT(t1.c0))) BETWEEN ((0.9207488126316434 IN ())) AND (t1.c0 COLLATE NOCASE))) ORDER BY (+ (t1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)IS NOT(t1.c0))) BETWEEN ((0.9207488126316434 IN ())) AND (t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1 ORDER BY (+ (t1.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)IS NOT(t1.c0))) BETWEEN ((0.9207488126316434 IN ())) AND (t1.c0 COLLATE NOCASE))) ORDER BY (+ (t1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM t0, t1, v0 WHERE (CAST((v0.c3 IN ()) AS BLOB)) ORDER BY v0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c3 IN ()) AS BLOB)) IS TRUE)  as count FROM t0, t1, v0 ORDER BY v0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, t1, v0 WHERE (CAST((v0.c3 IN ()) AS BLOB)) ORDER BY v0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c3 IN ()) AS BLOB)) IS TRUE)  as count FROM t0, t1, v0 ORDER BY v0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, t1, v0 WHERE (CAST((v0.c3 IN ()) AS BLOB)) ORDER BY v0.c1 DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (((((('-566693528', v0.c1, v0.c4))<((v0.c3, v0.c2, v0.c1)))) IS TRUE)) ORDER BY v0.c2 DESC  NULLS LAST, (((v0.c4 IN (v0.c4))) IS TRUE) DESC  NULLS LAST, ((((((((((v0.c1)>(v0.c0)))AND((((NULL)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(CASE NULL  WHEN v0.c3 THEN v0.c1 WHEN v0.c0 THEN v0.c3 WHEN v0.c1 THEN '' ELSE v0.c4 END)))OR(CASE v0.c1  WHEN v0.c2 THEN v0.c0 WHEN v0.c4 THEN v0.c2 WHEN v0.c1 THEN v0.c4 END)))OR(v0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((('-566693528', v0.c1, v0.c4))<((v0.c3, v0.c2, v0.c1)))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY v0.c2 DESC  NULLS LAST, (((v0.c4 IN (v0.c4))) IS TRUE) DESC  NULLS LAST, ((((((((((v0.c1)>(v0.c0)))AND((((NULL)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(CASE NULL  WHEN v0.c3 THEN v0.c1 WHEN v0.c0 THEN v0.c3 WHEN v0.c1 THEN '' ELSE v0.c4 END)))OR(CASE v0.c1  WHEN v0.c2 THEN v0.c0 WHEN v0.c4 THEN v0.c2 WHEN v0.c1 THEN v0.c4 END)))OR(v0.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((('-566693528', v0.c1, v0.c4))<((v0.c3, v0.c2, v0.c1)))) IS TRUE)) ORDER BY v0.c2 DESC  NULLS LAST, (((v0.c4 IN (v0.c4))) IS TRUE) DESC  NULLS LAST, ((((((((((v0.c1)>(v0.c0)))AND((((NULL)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(CASE NULL  WHEN v0.c3 THEN v0.c1 WHEN v0.c0 THEN v0.c3 WHEN v0.c1 THEN '' ELSE v0.c4 END)))OR(CASE v0.c1  WHEN v0.c2 THEN v0.c0 WHEN v0.c4 THEN v0.c2 WHEN v0.c1 THEN v0.c4 END)))OR(v0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((('-566693528', v0.c1, v0.c4))<((v0.c3, v0.c2, v0.c1)))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY v0.c2 DESC  NULLS LAST, (((v0.c4 IN (v0.c4))) IS TRUE) DESC  NULLS LAST, ((((((((((v0.c1)>(v0.c0)))AND((((NULL)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(CASE NULL  WHEN v0.c3 THEN v0.c1 WHEN v0.c0 THEN v0.c3 WHEN v0.c1 THEN '' ELSE v0.c4 END)))OR(CASE v0.c1  WHEN v0.c2 THEN v0.c0 WHEN v0.c4 THEN v0.c2 WHEN v0.c1 THEN v0.c4 END)))OR(v0.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((('-566693528', v0.c1, v0.c4))<((v0.c3, v0.c2, v0.c1)))) IS TRUE)) ORDER BY v0.c2 DESC  NULLS LAST, (((v0.c4 IN (v0.c4))) IS TRUE) DESC  NULLS LAST, ((((((((((v0.c1)>(v0.c0)))AND((((NULL)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(CASE NULL  WHEN v0.c3 THEN v0.c1 WHEN v0.c0 THEN v0.c3 WHEN v0.c1 THEN '' ELSE v0.c4 END)))OR(CASE v0.c1  WHEN v0.c2 THEN v0.c0 WHEN v0.c4 THEN v0.c2 WHEN v0.c1 THEN v0.c4 END)))OR(v0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL * FROM v0, t0, t1 WHERE (((((v0.c4)*(t0.c96)))>((~ (v0.c3))))) ORDER BY ((((v0.c3)-(v0.c1)))==(((t1.c0)<(v0.c4)))) ASC  NULLS FIRST, (CASE WHEN v0.c1 THEN v0.c3 ELSE t1.c0 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c4)*(t0.c96)))>((~ (v0.c3))))) IS TRUE)  as count FROM v0, t0, t1 ORDER BY ((((v0.c3)-(v0.c1)))=(((t1.c0)<(v0.c4)))) ASC  NULLS FIRST, (CASE WHEN v0.c1 THEN v0.c3 ELSE t1.c0 END IN ()) ASC);
SELECT ALL * FROM v0, t0, t1 WHERE (((((v0.c4)*(t0.c96)))>((~ (v0.c3))))) ORDER BY ((((v0.c3)-(v0.c1)))==(((t1.c0)<(v0.c4)))) ASC  NULLS FIRST, (CASE WHEN v0.c1 THEN v0.c3 ELSE t1.c0 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c4)*(t0.c96)))>((~ (v0.c3))))) IS TRUE)  as count FROM v0, t0, t1 ORDER BY ((((v0.c3)-(v0.c1)))=(((t1.c0)<(v0.c4)))) ASC  NULLS FIRST, (CASE WHEN v0.c1 THEN v0.c3 ELSE t1.c0 END IN ()) ASC);
SELECT ALL * FROM v0, t0, t1 WHERE (((((v0.c4)*(t0.c96)))>((~ (v0.c3))))) ORDER BY ((((v0.c3)-(v0.c1)))==(((t1.c0)<(v0.c4)))) ASC  NULLS FIRST, (CASE WHEN v0.c1 THEN v0.c3 ELSE t1.c0 END IN ()) ASC;
SELECT COUNT(*) FROM t0 WHERE (TYPEOF(((t0.c96) NOT NULL))) ORDER BY ((((t0.c96)-(t0.c96))) NOT BETWEEN (CAST(t0.c96 AS TEXT)) AND (ABS(DISTINCT '-1467865782'))) DESC, (UNLIKELY(t0.c96) IN (CASE WHEN t0.c96 THEN t0.c96 ELSE t0.c96 END, HEX(t0.c96)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((t0.c96) NOT NULL))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c96)-(t0.c96))) NOT BETWEEN (CAST(t0.c96 AS TEXT)) AND (ABS(DISTINCT '-1467865782'))) DESC, (UNLIKELY(t0.c96) IN (CASE WHEN t0.c96 THEN t0.c96 ELSE t0.c96 END, HEX(t0.c96)))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (TYPEOF(((t0.c96) NOT NULL))) ORDER BY ((((t0.c96)-(t0.c96))) NOT BETWEEN (CAST(t0.c96 AS TEXT)) AND (ABS(DISTINCT '-1467865782'))) DESC, (UNLIKELY(t0.c96) IN (CASE WHEN t0.c96 THEN t0.c96 ELSE t0.c96 END, HEX(t0.c96)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((t0.c96) NOT NULL))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c96)-(t0.c96))) NOT BETWEEN (CAST(t0.c96 AS TEXT)) AND (ABS(DISTINCT '-1467865782'))) DESC, (UNLIKELY(t0.c96) IN (CASE WHEN t0.c96 THEN t0.c96 ELSE t0.c96 END, HEX(t0.c96)))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (TYPEOF(((t0.c96) NOT NULL))) ORDER BY ((((t0.c96)-(t0.c96))) NOT BETWEEN (CAST(t0.c96 AS TEXT)) AND (ABS(DISTINCT '-1467865782'))) DESC, (UNLIKELY(t0.c96) IN (CASE WHEN t0.c96 THEN t0.c96 ELSE t0.c96 END, HEX(t0.c96)))  NULLS LAST;
SELECT ALL * FROM v0, t0, t1 WHERE ((CAST(v0.c2 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c2 AS INTEGER) IN ())) IS TRUE)  as count FROM v0, t0, t1);
SELECT ALL * FROM v0, t0, t1 WHERE ((CAST(v0.c2 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c2 AS INTEGER) IN ())) IS TRUE)  as count FROM v0, t0, t1);
SELECT ALL * FROM v0, t0, t1 WHERE ((CAST(v0.c2 AS INTEGER) IN ()));
SELECT ALL COUNT(*) FROM t0, t1, v0 WHERE ((NOT (TRIM(v0.c3, t0.c96))));
SELECT SUM(count) FROM (SELECT (((NOT (TRIM(v0.c3, t0.c96)))) IS TRUE)  as count FROM t0, t1 NOT INDEXED, v0);
SELECT ALL COUNT(*) FROM t0, t1, v0 WHERE ((NOT (TRIM(v0.c3, t0.c96))));
SELECT SUM(count) FROM (SELECT (((NOT (TRIM(v0.c3, t0.c96)))) IS TRUE)  as count FROM t0, t1 NOT INDEXED, v0);
SELECT ALL COUNT(*) FROM t0, t1, v0 WHERE ((NOT (TRIM(v0.c3, t0.c96))));
SELECT * FROM t1, v0 WHERE (((CASE v0.c4  WHEN v0.c1 THEN v0.c3 ELSE v0.c1 END) NOT BETWEEN ((v0.c1 IN (v0.c4))) AND (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c4  WHEN v0.c1 THEN v0.c3 ELSE v0.c1 END) NOT BETWEEN ((v0.c1 IN (v0.c4))) AND (t1.c0))) IS TRUE)  as count FROM t1, v0);
SELECT * FROM t1, v0 WHERE (((CASE v0.c4  WHEN v0.c1 THEN v0.c3 ELSE v0.c1 END) NOT BETWEEN ((v0.c1 IN (v0.c4))) AND (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c4  WHEN v0.c1 THEN v0.c3 ELSE v0.c1 END) NOT BETWEEN ((v0.c1 IN (v0.c4))) AND (t1.c0))) IS TRUE)  as count FROM t1, v0);
SELECT * FROM t1, v0 WHERE (((CASE v0.c4  WHEN v0.c1 THEN v0.c3 ELSE v0.c1 END) NOT BETWEEN ((v0.c1 IN (v0.c4))) AND (t1.c0)));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN t1 ON ((HEX(DISTINCT '')) IS TRUE) WHERE (CAST('-180995872' AS TEXT)) ORDER BY ((t1.c0) BETWEEN (CASE WHEN t0.c96 THEN t0.c96 ELSE t0.c96 END) AND (t1.c0));
SELECT SUM(count) FROM (SELECT ((CAST('-180995872' AS TEXT)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON ((HEX(DISTINCT '')) IS TRUE) ORDER BY ((t1.c0) BETWEEN (CASE WHEN t0.c96 THEN t0.c96 ELSE t0.c96 END) AND (t1.c0)));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN t1 ON ((HEX(DISTINCT '')) IS TRUE) WHERE (CAST('-180995872' AS TEXT)) ORDER BY ((t1.c0) BETWEEN (CASE WHEN t0.c96 THEN t0.c96 ELSE t0.c96 END) AND (t1.c0));
SELECT SUM(count) FROM (SELECT ((CAST('-180995872' AS TEXT)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON ((HEX(DISTINCT '')) IS TRUE) ORDER BY ((t1.c0) BETWEEN (CASE WHEN t0.c96 THEN t0.c96 ELSE t0.c96 END) AND (t1.c0)));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN t1 ON ((HEX(DISTINCT '')) IS TRUE) WHERE (CAST('-180995872' AS TEXT)) ORDER BY ((t1.c0) BETWEEN (CASE WHEN t0.c96 THEN t0.c96 ELSE t0.c96 END) AND (t1.c0));
SELECT ALL COUNT(*) FROM t1 WHERE ((((~ (t1.c0)))<<(((((t1.c0)OR(t1.c0)))OR(t1.c0))))) ORDER BY t1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t1.c0)))<<(((((t1.c0)OR(t1.c0)))OR(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY t1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((~ (t1.c0)))<<(((((t1.c0)OR(t1.c0)))OR(t1.c0))))) ORDER BY t1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t1.c0)))<<(((((t1.c0)OR(t1.c0)))OR(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY t1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((~ (t1.c0)))<<(((((t1.c0)OR(t1.c0)))OR(t1.c0))))) ORDER BY t1.c0  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 WHERE ((('+IK#')<=((- (x'')))));
SELECT SUM(count) FROM (SELECT ALL (((('+IK#')<=((- (x''))))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((('+IK#')<=((- (x'')))));
SELECT SUM(count) FROM (SELECT ALL (((('+IK#')<=((- (x''))))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((('+IK#')<=((- (x'')))));
SELECT * FROM t0 INNER JOIN t1 ON CASE t0.c96 COLLATE NOCASE  WHEN ((t1.c0) IS FALSE) THEN CAST(t1.c0 AS NUMERIC) ELSE (((t0.c96)) BETWEEN ((t1.c0)) AND ((NULL))) END WHERE ((((t0.c96 IN (t0.c96, t0.c96))) IS FALSE)) ORDER BY (((((t0.c96 IN (t0.c96)))OR('-1968158075' COLLATE RTRIM)))AND(t1.c0 COLLATE RTRIM)) ASC, ((t0.c96)<<(t1.c0)) COLLATE RTRIM ASC, ((((- (t1.c0))))>=((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c96 IN (t0.c96, t0.c96))) IS FALSE)) IS TRUE)  as count FROM t0 INNER JOIN t1 ON CASE t0.c96 COLLATE NOCASE  WHEN ((t1.c0) IS FALSE) THEN CAST(t1.c0 AS NUMERIC) ELSE (((t0.c96)) BETWEEN ((t1.c0)) AND ((NULL))) END ORDER BY (((((t0.c96 IN (t0.c96)))OR('-1968158075' COLLATE RTRIM)))AND(t1.c0 COLLATE RTRIM)) ASC, ((t0.c96)<<(t1.c0)) COLLATE RTRIM ASC, ((((- (t1.c0))))>=((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))  NULLS FIRST);
SELECT * FROM t0 INNER JOIN t1 ON CASE t0.c96 COLLATE NOCASE  WHEN ((t1.c0) IS FALSE) THEN CAST(t1.c0 AS NUMERIC) ELSE (((t0.c96)) BETWEEN ((t1.c0)) AND ((NULL))) END WHERE ((((t0.c96 IN (t0.c96, t0.c96))) IS FALSE)) ORDER BY (((((t0.c96 IN (t0.c96)))OR('-1968158075' COLLATE RTRIM)))AND(t1.c0 COLLATE RTRIM)) ASC, ((t0.c96)<<(t1.c0)) COLLATE RTRIM ASC, ((((- (t1.c0))))>=((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c96 IN (t0.c96, t0.c96))) IS FALSE)) IS TRUE)  as count FROM t0 INNER JOIN t1 ON CASE t0.c96 COLLATE NOCASE  WHEN ((t1.c0) IS FALSE) THEN CAST(t1.c0 AS NUMERIC) ELSE (((t0.c96)) BETWEEN ((t1.c0)) AND ((NULL))) END ORDER BY (((((t0.c96 IN (t0.c96)))OR('-1968158075' COLLATE RTRIM)))AND(t1.c0 COLLATE RTRIM)) ASC, ((t0.c96)<<(t1.c0)) COLLATE RTRIM ASC, ((((- (t1.c0))))>=((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))  NULLS FIRST);
SELECT * FROM t0 INNER JOIN t1 ON CASE t0.c96 COLLATE NOCASE  WHEN ((t1.c0) IS FALSE) THEN CAST(t1.c0 AS NUMERIC) ELSE (((t0.c96)) BETWEEN ((t1.c0)) AND ((NULL))) END WHERE ((((t0.c96 IN (t0.c96, t0.c96))) IS FALSE)) ORDER BY (((((t0.c96 IN (t0.c96)))OR('-1968158075' COLLATE RTRIM)))AND(t1.c0 COLLATE RTRIM)) ASC, ((t0.c96)<<(t1.c0)) COLLATE RTRIM ASC, ((((- (t1.c0))))>=((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))  NULLS FIRST;
SELECT * FROM t0 WHERE (CAST(((t0.c96)OR(2.098955162E9)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c96)OR(2.098955162E9)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c96)OR(2.098955162E9)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c96)OR(2.098955162E9)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c96)OR(2.098955162E9)) AS TEXT));
SELECT * FROM t0 INNER JOIN t1 ON json_insert(LOWER(DISTINCT v0.c4), ((t1.c0) NOT BETWEEN (v0.c0) AND ('D-c+')), ((t1.c0)OR(t1.c0))) RIGHT OUTER JOIN v0 ON ((((t1.c0) NOT BETWEEN (v0.c4) AND (v0.c2)))OR(0.13636017927258215)) WHERE (CAST(v0.c1 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM t0 INNER JOIN t1 ON json_insert(LOWER(DISTINCT v0.c4), ((t1.c0) NOT BETWEEN (v0.c0) AND ('D-c+')), ((t1.c0)OR(t1.c0))) RIGHT OUTER JOIN v0 ON ((((t1.c0) NOT BETWEEN (v0.c4) AND (v0.c2)))OR(0.13636017927258215)));
SELECT * FROM t0 INNER JOIN t1 ON json_insert(LOWER(DISTINCT v0.c4), ((t1.c0) NOT BETWEEN (v0.c0) AND ('D-c+')), ((t1.c0)OR(t1.c0))) RIGHT OUTER JOIN v0 ON ((((t1.c0) NOT BETWEEN (v0.c4) AND (v0.c2)))OR(0.13636017927258215)) WHERE (CAST(v0.c1 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM t0 INNER JOIN t1 ON json_insert(LOWER(DISTINCT v0.c4), ((t1.c0) NOT BETWEEN (v0.c0) AND ('D-c+')), ((t1.c0)OR(t1.c0))) RIGHT OUTER JOIN v0 ON ((((t1.c0) NOT BETWEEN (v0.c4) AND (v0.c2)))OR(0.13636017927258215)));
SELECT COUNT(*) FROM t1, v0 WHERE ((((v0.c2, -927483777, v0.c2)) BETWEEN ((((t1.c0)>(v0.c2)), ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)), t1.c0)) AND ((((((v0.c4)AND(v0.c4)))AND(v0.c2)), CAST(v0.c2 AS BLOB), (((v0.c2)) BETWEEN ((v0.c4)) AND ((v0.c4))))))) ORDER BY (((((((((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c3))))AND(v0.c2)))AND(((v0.c1) ISNULL))))AND(((0Xffffffffb2363f3f)LIKE(v0.c0)))))OR(v0.c4 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c2, -927483777, v0.c2)) BETWEEN ((((t1.c0)>(v0.c2)), ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)), t1.c0)) AND ((((((v0.c4)AND(v0.c4)))AND(v0.c2)), CAST(v0.c2 AS BLOB), (((v0.c2)) BETWEEN ((v0.c4)) AND ((v0.c4))))))) IS TRUE)  as count FROM t1, v0 ORDER BY (((((((((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c3))))AND(v0.c2)))AND(((v0.c1) ISNULL))))AND(((0xffffffffb2363f3f)LIKE(v0.c0)))))OR(v0.c4 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM t1, v0 WHERE ((((v0.c2, -927483777, v0.c2)) BETWEEN ((((t1.c0)>(v0.c2)), ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)), t1.c0)) AND ((((((v0.c4)AND(v0.c4)))AND(v0.c2)), CAST(v0.c2 AS BLOB), (((v0.c2)) BETWEEN ((v0.c4)) AND ((v0.c4))))))) ORDER BY (((((((((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c3))))AND(v0.c2)))AND(((v0.c1) ISNULL))))AND(((0Xffffffffb2363f3f)LIKE(v0.c0)))))OR(v0.c4 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c2, -927483777, v0.c2)) BETWEEN ((((t1.c0)>(v0.c2)), ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)), t1.c0)) AND ((((((v0.c4)AND(v0.c4)))AND(v0.c2)), CAST(v0.c2 AS BLOB), (((v0.c2)) BETWEEN ((v0.c4)) AND ((v0.c4))))))) IS TRUE)  as count FROM t1, v0 ORDER BY (((((((((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c3))))AND(v0.c2)))AND(((v0.c1) ISNULL))))AND(((0xffffffffb2363f3f)LIKE(v0.c0)))))OR(v0.c4 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM t1, v0 WHERE ((((v0.c2, -927483777, v0.c2)) BETWEEN ((((t1.c0)>(v0.c2)), ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)), t1.c0)) AND ((((((v0.c4)AND(v0.c4)))AND(v0.c2)), CAST(v0.c2 AS BLOB), (((v0.c2)) BETWEEN ((v0.c4)) AND ((v0.c4))))))) ORDER BY (((((((((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c3))))AND(v0.c2)))AND(((v0.c1) ISNULL))))AND(((0Xffffffffb2363f3f)LIKE(v0.c0)))))OR(v0.c4 COLLATE RTRIM))  NULLS FIRST;
SELECT * FROM t1 NATURAL JOIN t0 WHERE (0.998936632535714) ORDER BY ((((((((((t1.c0)OR(t0.c96)))OR(t1.c0)))AND('-907267499')))AND(t0.c96)))IS((t1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.998936632535714) IS TRUE)  as count FROM t1 NATURAL JOIN t0 ORDER BY ((((((((((t1.c0)OR(t0.c96)))OR(t1.c0)))AND('-907267499')))AND(t0.c96)))IS((t1.c0 IN ())))  NULLS LAST);
SELECT * FROM t1 NATURAL JOIN t0 WHERE (0.998936632535714) ORDER BY ((((((((((t1.c0)OR(t0.c96)))OR(t1.c0)))AND('-907267499')))AND(t0.c96)))IS((t1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.998936632535714) IS TRUE)  as count FROM t1 NATURAL JOIN t0 ORDER BY ((((((((((t1.c0)OR(t0.c96)))OR(t1.c0)))AND('-907267499')))AND(t0.c96)))IS((t1.c0 IN ())))  NULLS LAST);
SELECT * FROM t1 NATURAL JOIN t0 WHERE (0.998936632535714) ORDER BY ((((((((((t1.c0)OR(t0.c96)))OR(t1.c0)))AND('-907267499')))AND(t0.c96)))IS((t1.c0 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ('') ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 ELSE 0.4023108068094856 END)<>(CAST('0.1031684790500138' AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 ELSE 0.4023108068094856 END)!=(CAST('0.1031684790500138' AS REAL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ('') ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 ELSE 0.4023108068094856 END)<>(CAST('0.1031684790500138' AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 ELSE 0.4023108068094856 END)!=(CAST('0.1031684790500138' AS REAL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ('') ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 ELSE 0.4023108068094856 END)<>(CAST('0.1031684790500138' AS REAL))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, t1 NOT INDEXED RIGHT OUTER JOIN v0 ON CASE CAST('>U' AS TEXT)  WHEN ((v0.c0)/(v0.c0)) THEN ((v0.c3)IS NOT(t0.c96)) END WHERE ((('')||('*	')));
SELECT SUM(count) FROM (SELECT (((('')||('*	'))) IS TRUE)  as count FROM t0, t1 RIGHT OUTER JOIN v0 ON CASE CAST('>U' AS TEXT)  WHEN ((v0.c0)/(v0.c0)) THEN ((v0.c3)IS NOT(t0.c96)) END);
SELECT COUNT(*) FROM t0, t1 NOT INDEXED RIGHT OUTER JOIN v0 ON CASE CAST('>U' AS TEXT)  WHEN ((v0.c0)/(v0.c0)) THEN ((v0.c3)IS NOT(t0.c96)) END WHERE ((('')||('*	')));
SELECT SUM(count) FROM (SELECT (((('')||('*	'))) IS TRUE)  as count FROM t0, t1 RIGHT OUTER JOIN v0 ON CASE CAST('>U' AS TEXT)  WHEN ((v0.c0)/(v0.c0)) THEN ((v0.c3)IS NOT(t0.c96)) END);
SELECT COUNT(*) FROM t0, t1 NOT INDEXED RIGHT OUTER JOIN v0 ON CASE CAST('>U' AS TEXT)  WHEN ((v0.c0)/(v0.c0)) THEN ((v0.c3)IS NOT(t0.c96)) END WHERE ((('')||('*	')));
SELECT ALL * FROM t1 INNER JOIN t0 ON t1.c0 WHERE ((- (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (t1.c0))) IS TRUE)  as count FROM t1 INNER JOIN t0 ON t1.c0);
SELECT ALL * FROM t1 INNER JOIN t0 ON t1.c0 WHERE ((- (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (t1.c0))) IS TRUE)  as count FROM t1 INNER JOIN t0 ON t1.c0);
SELECT ALL * FROM t1 INNER JOIN t0 ON t1.c0 WHERE ((- (t1.c0)));
SELECT ALL * FROM t1 WHERE ((- (((t1.c0)<=(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t1.c0)<=(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((- (((t1.c0)<=(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t1.c0)<=(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((- (((t1.c0)<=(t1.c0)))));
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (((((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)))/(((t0.c96) BETWEEN (t0.c96) AND (t0.c96)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)))/(((t0.c96) BETWEEN (t0.c96) AND (t0.c96))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (((((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)))/(((t0.c96) BETWEEN (t0.c96) AND (t0.c96)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)))/(((t0.c96) BETWEEN (t0.c96) AND (t0.c96))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (((((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)))/(((t0.c96) BETWEEN (t0.c96) AND (t0.c96)))));
SELECT COUNT(*) FROM t1, v0, t0 WHERE (((((v0.c3)==(v0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c3)==(v0.c1))) NOT NULL)) IS TRUE)  as count FROM t1, v0, t0);
SELECT COUNT(*) FROM t1, v0, t0 WHERE (((((v0.c3)==(v0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c3)==(v0.c1))) NOT NULL)) IS TRUE)  as count FROM t1, v0, t0);
SELECT COUNT(*) FROM t1, v0, t0 WHERE (((((v0.c3)==(v0.c1))) NOT NULL));
SELECT COUNT(*) FROM t0, v0 WHERE ((((v0.c1 IN ()))>(((0.6241080103784554)+(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ()))>(((0.6241080103784554)+(v0.c1))))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((((v0.c1 IN ()))>(((0.6241080103784554)+(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ()))>(((0.6241080103784554)+(v0.c1))))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((((v0.c1 IN ()))>(((0.6241080103784554)+(v0.c1)))));
SELECT ALL * FROM t1 INDEXED BY i47, v0, t0 WHERE (MIN(v0.c0, v0.c4)) ORDER BY '-386555513' DESC  NULLS FIRST, STRFTIME(((v0.c1) NOTNULL), TIME(v0.c0, v0.c1, v0.c2, t1.c0, v0.c2), ((((((((t1.c0)OR(v0.c2)))AND(v0.c0)))OR(0.21662440608751277)))OR(v0.c3))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((MIN(v0.c0, v0.c4)) IS TRUE)  as count FROM t1 INDEXED BY i47, v0, t0 ORDER BY '-386555513' DESC  NULLS FIRST, STRFTIME(((v0.c1) NOTNULL), TIME(v0.c0, v0.c1, v0.c2, t1.c0, v0.c2), ((((((((t1.c0)OR(v0.c2)))AND(v0.c0)))OR(0.21662440608751277)))OR(v0.c3))) DESC  NULLS FIRST);
SELECT ALL * FROM t1 INDEXED BY i47, v0, t0 WHERE (MIN(v0.c0, v0.c4)) ORDER BY '-386555513' DESC  NULLS FIRST, STRFTIME(((v0.c1) NOTNULL), TIME(v0.c0, v0.c1, v0.c2, t1.c0, v0.c2), ((((((((t1.c0)OR(v0.c2)))AND(v0.c0)))OR(0.21662440608751277)))OR(v0.c3))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((MIN(v0.c0, v0.c4)) IS TRUE)  as count FROM t1 INDEXED BY i47, v0, t0 ORDER BY '-386555513' DESC  NULLS FIRST, STRFTIME(((v0.c1) NOTNULL), TIME(v0.c0, v0.c1, v0.c2, t1.c0, v0.c2), ((((((((t1.c0)OR(v0.c2)))AND(v0.c0)))OR(0.21662440608751277)))OR(v0.c3))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, v0, t0 WHERE ('Q5') ORDER BY (- ((((v0.c4)) BETWEEN ((v0.c4)) AND ((v0.c3)))))  NULLS FIRST, ((((((x'')OR('}Y')))OR(v0.c2)))LIKE((~ (v0.c1))))  NULLS LAST, ((~ (t1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (('Q5') IS TRUE)  as count FROM t1 NOT INDEXED, v0, t0 ORDER BY (- ((((v0.c4)) BETWEEN ((v0.c4)) AND ((v0.c3)))))  NULLS FIRST, ((((((x'')OR('}Y')))OR(v0.c2)))LIKE((~ (v0.c1))))  NULLS LAST, ((~ (t1.c0)) IN ()) ASC);
SELECT COUNT(*) FROM t1, v0, t0 WHERE ('Q5') ORDER BY (- ((((v0.c4)) BETWEEN ((v0.c4)) AND ((v0.c3)))))  NULLS FIRST, ((((((x'')OR('}Y')))OR(v0.c2)))LIKE((~ (v0.c1))))  NULLS LAST, ((~ (t1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (('Q5') IS TRUE)  as count FROM t1 NOT INDEXED, v0, t0 ORDER BY (- ((((v0.c4)) BETWEEN ((v0.c4)) AND ((v0.c3)))))  NULLS FIRST, ((((((x'')OR('}Y')))OR(v0.c2)))LIKE((~ (v0.c1))))  NULLS LAST, ((~ (t1.c0)) IN ()) ASC);
SELECT COUNT(*) FROM t1, v0, t0 WHERE ('Q5') ORDER BY (- ((((v0.c4)) BETWEEN ((v0.c4)) AND ((v0.c3)))))  NULLS FIRST, ((((((x'')OR('}Y')))OR(v0.c2)))LIKE((~ (v0.c1))))  NULLS LAST, ((~ (t1.c0)) IN ()) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (((v0.c2) NOT BETWEEN ('}쌖fe*bzS(') AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c2) NOT BETWEEN ('}쌖fe*bzS(') AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (((v0.c2) NOT BETWEEN ('}쌖fe*bzS(') AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c2) NOT BETWEEN ('}쌖fe*bzS(') AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (((v0.c2) NOT BETWEEN ('}쌖fe*bzS(') AND (v0.c1)))));
SELECT ALL * FROM t1, v0, t0 WHERE (CAST(1980181606 AS REAL)) ORDER BY ((((0.5380801345284976)IS NOT(v0.c2))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(1980181606 AS REAL)) IS TRUE)  as count FROM t1, v0, t0 ORDER BY ((((0.5380801345284976)IS NOT(v0.c2))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM t1, v0, t0 WHERE (CAST(1980181606 AS REAL)) ORDER BY ((((0.5380801345284976)IS NOT(v0.c2))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(1980181606 AS REAL)) IS TRUE)  as count FROM t1, v0, t0 ORDER BY ((((0.5380801345284976)IS NOT(v0.c2))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM t1, v0, t0 WHERE (CAST(1980181606 AS REAL)) ORDER BY ((((0.5380801345284976)IS NOT(v0.c2))) ISNULL)  NULLS FIRST;
SELECT ALL * FROM t0, v0 WHERE (((0.5635327989002057)AND(SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT ((((0.5635327989002057)AND(SQLITE_VERSION()))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((0.5635327989002057)AND(SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT ((((0.5635327989002057)AND(SQLITE_VERSION()))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((0.5635327989002057)AND(SQLITE_VERSION())));
SELECT ALL * FROM t0, v0 WHERE ((((v0.c4)) NOT BETWEEN (((- (v0.c3)))) AND ((((v0.c2) BETWEEN (0.6367850319269076) AND (v0.c2)))))) ORDER BY (t0.c96 COLLATE NOCASE IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c4)) NOT BETWEEN (((- (v0.c3)))) AND ((((v0.c2) BETWEEN (0.6367850319269076) AND (v0.c2)))))) IS TRUE)  as count FROM t0, v0 ORDER BY (t0.c96 COLLATE NOCASE IN ()) ASC);
SELECT ALL * FROM t0, v0 WHERE ((((v0.c4)) NOT BETWEEN (((- (v0.c3)))) AND ((((v0.c2) BETWEEN (0.6367850319269076) AND (v0.c2)))))) ORDER BY (t0.c96 COLLATE NOCASE IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c4)) NOT BETWEEN (((- (v0.c3)))) AND ((((v0.c2) BETWEEN (0.6367850319269076) AND (v0.c2)))))) IS TRUE)  as count FROM t0, v0 ORDER BY (t0.c96 COLLATE NOCASE IN ()) ASC);
SELECT ALL * FROM t0, v0 WHERE ((((v0.c4)) NOT BETWEEN (((- (v0.c3)))) AND ((((v0.c2) BETWEEN (0.6367850319269076) AND (v0.c2)))))) ORDER BY (t0.c96 COLLATE NOCASE IN ()) ASC;
SELECT * FROM v0, t1, t0 WHERE ((~ (((v0.c2) NOTNULL)))) ORDER BY ((((((((((v0.c4)AND(t1.c0)))OR(CAST(t0.c96 AS BLOB))))AND(((v0.c2)GLOB(v0.c3)))))AND(CASE v0.c0  WHEN t1.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c96 WHEN v0.c4 THEN v0.c3 ELSE v0.c1 END)))OR(IFNULL(DISTINCT v0.c0, 0X3bb6c70))) DESC  NULLS FIRST, (((v0.c4, NULL, v0.c3)) NOT BETWEEN ((((((v0.c2)AND(t1.c0)))AND(t1.c0)), CAST(v0.c2 AS INTEGER), v0.c2)) AND ((((((v0.c0)AND(v0.c0)))AND(v0.c3)), (v0.c4 IN (v0.c0)), (((v0.c4))>((v0.c2))))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c2) NOTNULL)))) IS TRUE)  as count FROM v0, t1, t0 NOT INDEXED ORDER BY ((((((((((v0.c4)AND(t1.c0)))OR(CAST(t0.c96 AS BLOB))))AND(((v0.c2)GLOB(v0.c3)))))AND(CASE v0.c0  WHEN t1.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c96 WHEN v0.c4 THEN v0.c3 ELSE v0.c1 END)))OR(IFNULL(DISTINCT v0.c0, 0X3bb6c70))) DESC  NULLS FIRST, (((v0.c4, NULL, v0.c3)) NOT BETWEEN ((((((v0.c2)AND(t1.c0)))AND(t1.c0)), CAST(v0.c2 AS INTEGER), v0.c2)) AND ((((((v0.c0)AND(v0.c0)))AND(v0.c3)), (v0.c4 IN (v0.c0)), (((v0.c4))>((v0.c2)))))));
SELECT * FROM v0, t1, t0 WHERE ((~ (((v0.c2) NOTNULL)))) ORDER BY ((((((((((v0.c4)AND(t1.c0)))OR(CAST(t0.c96 AS BLOB))))AND(((v0.c2)GLOB(v0.c3)))))AND(CASE v0.c0  WHEN t1.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c96 WHEN v0.c4 THEN v0.c3 ELSE v0.c1 END)))OR(IFNULL(DISTINCT v0.c0, 0X3bb6c70))) DESC  NULLS FIRST, (((v0.c4, NULL, v0.c3)) NOT BETWEEN ((((((v0.c2)AND(t1.c0)))AND(t1.c0)), CAST(v0.c2 AS INTEGER), v0.c2)) AND ((((((v0.c0)AND(v0.c0)))AND(v0.c3)), (v0.c4 IN (v0.c0)), (((v0.c4))>((v0.c2))))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c2) NOTNULL)))) IS TRUE)  as count FROM v0, t1, t0 NOT INDEXED ORDER BY ((((((((((v0.c4)AND(t1.c0)))OR(CAST(t0.c96 AS BLOB))))AND(((v0.c2)GLOB(v0.c3)))))AND(CASE v0.c0  WHEN t1.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c96 WHEN v0.c4 THEN v0.c3 ELSE v0.c1 END)))OR(IFNULL(DISTINCT v0.c0, 0X3bb6c70))) DESC  NULLS FIRST, (((v0.c4, NULL, v0.c3)) NOT BETWEEN ((((((v0.c2)AND(t1.c0)))AND(t1.c0)), CAST(v0.c2 AS INTEGER), v0.c2)) AND ((((((v0.c0)AND(v0.c0)))AND(v0.c3)), (v0.c4 IN (v0.c0)), (((v0.c4))>((v0.c2)))))));
SELECT * FROM v0, t1, t0 WHERE ((~ (((v0.c2) NOTNULL)))) ORDER BY ((((((((((v0.c4)AND(t1.c0)))OR(CAST(t0.c96 AS BLOB))))AND(((v0.c2)GLOB(v0.c3)))))AND(CASE v0.c0  WHEN t1.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c96 WHEN v0.c4 THEN v0.c3 ELSE v0.c1 END)))OR(IFNULL(DISTINCT v0.c0, 0X3bb6c70))) DESC  NULLS FIRST, (((v0.c4, NULL, v0.c3)) NOT BETWEEN ((((((v0.c2)AND(t1.c0)))AND(t1.c0)), CAST(v0.c2 AS INTEGER), v0.c2)) AND ((((((v0.c0)AND(v0.c0)))AND(v0.c3)), (v0.c4 IN (v0.c0)), (((v0.c4))>((v0.c2))))));
SELECT ALL * FROM t0 WHERE (((((t0.c96) IS TRUE))%((('z') BETWEEN (t0.c96) AND (t0.c96))))) ORDER BY ((((t0.c96) IS TRUE)) NOT BETWEEN (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96))) AND (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c96) IS TRUE))%((('z') BETWEEN (t0.c96) AND (t0.c96))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c96) IS TRUE)) NOT BETWEEN (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96))) AND (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)))) DESC);
SELECT ALL * FROM t0 WHERE (((((t0.c96) IS TRUE))%((('z') BETWEEN (t0.c96) AND (t0.c96))))) ORDER BY ((((t0.c96) IS TRUE)) NOT BETWEEN (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96))) AND (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c96) IS TRUE))%((('z') BETWEEN (t0.c96) AND (t0.c96))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c96) IS TRUE)) NOT BETWEEN (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96))) AND (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)))) DESC);
SELECT ALL * FROM t0 WHERE (((((t0.c96) IS TRUE))%((('z') BETWEEN (t0.c96) AND (t0.c96))))) ORDER BY ((((t0.c96) IS TRUE)) NOT BETWEEN (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96))) AND (((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)))) DESC;
SELECT * FROM v0, t0 WHERE ((CAST(v0.c2 AS BLOB) IN ((v0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c2 AS BLOB) IN ((v0.c2 IN ())))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((CAST(v0.c2 AS BLOB) IN ((v0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c2 AS BLOB) IN ((v0.c2 IN ())))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((CAST(v0.c2 AS BLOB) IN ((v0.c2 IN ()))));
SELECT COUNT(*) FROM t0 WHERE ((NOT ((((t0.c96)) BETWEEN ((t0.c96)) AND ((t0.c96)))))) ORDER BY CASE ((NULL)-(t0.c96))  WHEN ((t0.c96)/(t0.c96)) THEN t0.c96 COLLATE NOCASE ELSE (NOT (t0.c96)) END  NULLS LAST, 'cXSD<Ya'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t0.c96)) BETWEEN ((t0.c96)) AND ((t0.c96)))))) IS TRUE)  as count FROM t0 ORDER BY CASE ((NULL)-(t0.c96))  WHEN ((t0.c96)/(t0.c96)) THEN t0.c96 COLLATE NOCASE ELSE (NOT (t0.c96)) END  NULLS LAST, 'cXSD<Ya'  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((NOT ((((t0.c96)) BETWEEN ((t0.c96)) AND ((t0.c96)))))) ORDER BY CASE ((NULL)-(t0.c96))  WHEN ((t0.c96)/(t0.c96)) THEN t0.c96 COLLATE NOCASE ELSE (NOT (t0.c96)) END  NULLS LAST, 'cXSD<Ya'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t0.c96)) BETWEEN ((t0.c96)) AND ((t0.c96)))))) IS TRUE)  as count FROM t0 ORDER BY CASE ((NULL)-(t0.c96))  WHEN ((t0.c96)/(t0.c96)) THEN t0.c96 COLLATE NOCASE ELSE (NOT (t0.c96)) END  NULLS LAST, 'cXSD<Ya'  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((NOT ((((t0.c96)) BETWEEN ((t0.c96)) AND ((t0.c96)))))) ORDER BY CASE ((NULL)-(t0.c96))  WHEN ((t0.c96)/(t0.c96)) THEN t0.c96 COLLATE NOCASE ELSE (NOT (t0.c96)) END  NULLS LAST, 'cXSD<Ya'  NULLS LAST;
SELECT * FROM t1 WHERE (((t1.c0) IS TRUE)) ORDER BY (+ ((((t1.c0))>((t1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((t1.c0) IS TRUE)) IS TRUE)  as count FROM t1 ORDER BY (+ ((((t1.c0))>((t1.c0))))) ASC);
SELECT * FROM t1 WHERE (((t1.c0) IS TRUE)) ORDER BY (+ ((((t1.c0))>((t1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((t1.c0) IS TRUE)) IS TRUE)  as count FROM t1 ORDER BY (+ ((((t1.c0))>((t1.c0))))) ASC);
SELECT * FROM t1 WHERE (((t1.c0) IS TRUE)) ORDER BY (+ ((((t1.c0))>((t1.c0))))) ASC;
SELECT ALL * FROM t1, v0 WHERE ((- (CASE WHEN v0.c0 THEN v0.c0 ELSE t1.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN v0.c0 THEN v0.c0 ELSE t1.c0 END))) IS TRUE)  as count FROM t1, v0);
SELECT ALL * FROM t1, v0 WHERE ((- (CASE WHEN v0.c0 THEN v0.c0 ELSE t1.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN v0.c0 THEN v0.c0 ELSE t1.c0 END))) IS TRUE)  as count FROM t1, v0);
SELECT ALL * FROM t1, v0 WHERE ((- (CASE WHEN v0.c0 THEN v0.c0 ELSE t1.c0 END)));
SELECT * FROM t0 WHERE ('656465415') ORDER BY ((((t0.c96)>>(t0.c96))) NOT BETWEEN (((t0.c96)IS(t0.c96))) AND (((t0.c96)%(t0.c96))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('656465415') IS TRUE)  as count FROM t0 ORDER BY ((((t0.c96)>>(t0.c96))) NOT BETWEEN (((t0.c96)IS(t0.c96))) AND (((t0.c96)%(t0.c96))))  NULLS FIRST);
SELECT * FROM t0 WHERE ('656465415') ORDER BY ((((t0.c96)>>(t0.c96))) NOT BETWEEN (((t0.c96)IS(t0.c96))) AND (((t0.c96)%(t0.c96))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('656465415') IS TRUE)  as count FROM t0 ORDER BY ((((t0.c96)>>(t0.c96))) NOT BETWEEN (((t0.c96)IS(t0.c96))) AND (((t0.c96)%(t0.c96))))  NULLS FIRST);
SELECT * FROM t0 WHERE ('656465415') ORDER BY ((((t0.c96)>>(t0.c96))) NOT BETWEEN (((t0.c96)IS(t0.c96))) AND (((t0.c96)%(t0.c96))))  NULLS FIRST;
SELECT COUNT(*) FROM t1, t0, v0 WHERE (CAST((((v0.c0)) NOT BETWEEN ((v0.c3)) AND ((v0.c4))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0)) NOT BETWEEN ((v0.c3)) AND ((v0.c4))) AS BLOB)) IS TRUE)  as count FROM t1, t0, v0);
SELECT COUNT(*) FROM t1, t0, v0 WHERE (CAST((((v0.c0)) NOT BETWEEN ((v0.c3)) AND ((v0.c4))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0)) NOT BETWEEN ((v0.c3)) AND ((v0.c4))) AS BLOB)) IS TRUE)  as count FROM t1, t0, v0);
SELECT COUNT(*) FROM t1, t0, v0 WHERE (CAST((((v0.c0)) NOT BETWEEN ((v0.c3)) AND ((v0.c4))) AS BLOB));
SELECT ALL * FROM t0 WHERE (((((((((CAST(t0.c96 AS INTEGER))OR(((t0.c96) NOT BETWEEN (7.80304261E8) AND (t0.c96)))))AND((((t0.c96))=((t0.c96))))))OR((((t0.c96))>((t0.c96))))))AND(CAST(t0.c96 AS INTEGER)))) ORDER BY ((x'')||(UNLIKELY(DISTINCT t0.c96))), CAST(t0.c96 AS BLOB) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t0.c96 AS INTEGER))OR(((t0.c96) NOT BETWEEN (7.80304261E8) AND (t0.c96)))))AND((((t0.c96))=((t0.c96))))))OR((((t0.c96))>((t0.c96))))))AND(CAST(t0.c96 AS INTEGER)))) IS TRUE)  as count FROM t0 ORDER BY ((x'')||(UNLIKELY(DISTINCT t0.c96))), CAST(t0.c96 AS BLOB) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((((((CAST(t0.c96 AS INTEGER))OR(((t0.c96) NOT BETWEEN (7.80304261E8) AND (t0.c96)))))AND((((t0.c96))=((t0.c96))))))OR((((t0.c96))>((t0.c96))))))AND(CAST(t0.c96 AS INTEGER)))) ORDER BY ((x'')||(UNLIKELY(DISTINCT t0.c96))), CAST(t0.c96 AS BLOB) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t0.c96 AS INTEGER))OR(((t0.c96) NOT BETWEEN (7.80304261E8) AND (t0.c96)))))AND((((t0.c96))=((t0.c96))))))OR((((t0.c96))>((t0.c96))))))AND(CAST(t0.c96 AS INTEGER)))) IS TRUE)  as count FROM t0 ORDER BY ((x'')||(UNLIKELY(DISTINCT t0.c96))), CAST(t0.c96 AS BLOB) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((((((CAST(t0.c96 AS INTEGER))OR(((t0.c96) NOT BETWEEN (7.80304261E8) AND (t0.c96)))))AND((((t0.c96))=((t0.c96))))))OR((((t0.c96))>((t0.c96))))))AND(CAST(t0.c96 AS INTEGER)))) ORDER BY ((x'')||(UNLIKELY(DISTINCT t0.c96))), CAST(t0.c96 AS BLOB) COLLATE RTRIM  NULLS LAST;
SELECT * FROM t0 WHERE (CAST(t0.c96 AS REAL)) ORDER BY HEX(((((t0.c96)AND(t0.c96)))AND(t0.c96))), (t0.c96 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c96 AS REAL)) IS TRUE)  as count FROM t0 ORDER BY HEX(((((t0.c96)AND(t0.c96)))AND(t0.c96))), (t0.c96 IN ()) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(t0.c96 AS REAL)) ORDER BY HEX(((((t0.c96)AND(t0.c96)))AND(t0.c96))), (t0.c96 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c96 AS REAL)) IS TRUE)  as count FROM t0 ORDER BY HEX(((((t0.c96)AND(t0.c96)))AND(t0.c96))), (t0.c96 IN ()) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(t0.c96 AS REAL)) ORDER BY HEX(((((t0.c96)AND(t0.c96)))AND(t0.c96))), (t0.c96 IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (v0.c2);
SELECT ALL COUNT(*) FROM v0, t1 WHERE ((- (((t1.c0) IS FALSE)))) ORDER BY (v0.c2 COLLATE BINARY IN (''))  NULLS LAST, (('-896571152')GLOB((((v0.c1))<((0.44018476842341214)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((t1.c0) IS FALSE)))) IS TRUE)  as count FROM v0, t1 ORDER BY (v0.c2 COLLATE BINARY IN (''))  NULLS LAST, (('-896571152')GLOB((((v0.c1))<((0.44018476842341214)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t1 WHERE ((- (((t1.c0) IS FALSE)))) ORDER BY (v0.c2 COLLATE BINARY IN (''))  NULLS LAST, (('-896571152')GLOB((((v0.c1))<((0.44018476842341214)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((t1.c0) IS FALSE)))) IS TRUE)  as count FROM v0, t1 ORDER BY (v0.c2 COLLATE BINARY IN (''))  NULLS LAST, (('-896571152')GLOB((((v0.c1))<((0.44018476842341214)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t1 WHERE ((- (((t1.c0) IS FALSE)))) ORDER BY (v0.c2 COLLATE BINARY IN (''))  NULLS LAST, (('-896571152')GLOB((((v0.c1))<((0.44018476842341214)))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, t0 NOT INDEXED WHERE ((~ (((x'') NOT BETWEEN (v0.c2) AND (v0.c0))))) ORDER BY (((t0.c96 IN (v0.c2)))<((((v0.c1))=((v0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((x'') NOT BETWEEN (v0.c2) AND (v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c96 IN (v0.c2)))<((((v0.c1))=((v0.c1))))));
SELECT COUNT(*) FROM v0, t0 NOT INDEXED WHERE ((~ (((x'') NOT BETWEEN (v0.c2) AND (v0.c0))))) ORDER BY (((t0.c96 IN (v0.c2)))<((((v0.c1))=((v0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((x'') NOT BETWEEN (v0.c2) AND (v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c96 IN (v0.c2)))<((((v0.c1))=((v0.c1))))));
SELECT COUNT(*) FROM v0, t0 NOT INDEXED WHERE ((~ (((x'') NOT BETWEEN (v0.c2) AND (v0.c0))))) ORDER BY (((t0.c96 IN (v0.c2)))<((((v0.c1))=((v0.c1)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((+ (x''))) NOT BETWEEN (CASE WHEN '-985115210' THEN v0.c1 ELSE v0.c1 END) AND (((v0.c4) NOT BETWEEN (v0.c2) AND (0.1234917286059366)))) WHERE (((v0.c2)-((- (t0.c96)))));
SELECT SUM(count) FROM (SELECT ((((v0.c2)-((- (t0.c96))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((+ (x''))) NOT BETWEEN (CASE WHEN '-985115210' THEN v0.c1 ELSE v0.c1 END) AND (((v0.c4) NOT BETWEEN (v0.c2) AND (0.1234917286059366)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((+ (x''))) NOT BETWEEN (CASE WHEN '-985115210' THEN v0.c1 ELSE v0.c1 END) AND (((v0.c4) NOT BETWEEN (v0.c2) AND (0.1234917286059366)))) WHERE (((v0.c2)-((- (t0.c96)))));
SELECT SUM(count) FROM (SELECT ((((v0.c2)-((- (t0.c96))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((+ (x''))) NOT BETWEEN (CASE WHEN '-985115210' THEN v0.c1 ELSE v0.c1 END) AND (((v0.c4) NOT BETWEEN (v0.c2) AND (0.1234917286059366)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((+ (x''))) NOT BETWEEN (CASE WHEN '-985115210' THEN v0.c1 ELSE v0.c1 END) AND (((v0.c4) NOT BETWEEN (v0.c2) AND (0.1234917286059366)))) WHERE (((v0.c2)-((- (t0.c96)))));
SELECT * FROM t1 WHERE (((LOWER(DISTINCT t1.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT t1.c0)) ISNULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((LOWER(DISTINCT t1.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT t1.c0)) ISNULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((LOWER(DISTINCT t1.c0)) ISNULL));
SELECT * FROM t0, v0, t1 WHERE (TIME(((v0.c4) NOT NULL), (t0.c96 IN (v0.c2)), (- (x'487c')), ((NULL)||(t1.c0)), (v0.c0 IN ()))) ORDER BY v0.c4 ASC;
SELECT SUM(count) FROM (SELECT ((TIME(((v0.c4) NOT NULL), (t0.c96 IN (v0.c2)), (- (x'487c')), ((NULL)||(t1.c0)), (v0.c0 IN ()))) IS TRUE)  as count FROM t0, v0, t1 ORDER BY v0.c4 ASC);
SELECT * FROM t0, v0, t1 WHERE (TIME(((v0.c4) NOT NULL), (t0.c96 IN (v0.c2)), (- (x'487c')), ((NULL)||(t1.c0)), (v0.c0 IN ()))) ORDER BY v0.c4 ASC;
SELECT SUM(count) FROM (SELECT ((TIME(((v0.c4) NOT NULL), (t0.c96 IN (v0.c2)), (- (x'487c')), ((NULL)||(t1.c0)), (v0.c0 IN ()))) IS TRUE)  as count FROM t0, v0, t1 ORDER BY v0.c4 ASC);
SELECT * FROM t0, v0, t1 WHERE (TIME(((v0.c4) NOT NULL), (t0.c96 IN (v0.c2)), (- (x'487c')), ((NULL)||(t1.c0)), (v0.c0 IN ()))) ORDER BY v0.c4 ASC;
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON ((((((v0.c1) IS FALSE))OR(((t1.c0)IS NOT(v0.c0)))))OR(((((v0.c4)OR(v0.c0)))OR(v0.c1)))) FULL OUTER JOIN t1 ON CAST(((((t1.c0)OR('b*')))AND('-1770754389')) AS BLOB) WHERE ((((- (t0.c96)))>>(CAST(v0.c2 AS TEXT)))) ORDER BY CASE (0xffffffff83a0a177 IN (v0.c4))  WHEN ((-1895563266) BETWEEN (v0.c0) AND (v0.c0)) THEN t0.c96 COLLATE RTRIM END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (t0.c96)))>>(CAST(v0.c2 AS TEXT)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((((((v0.c1) IS FALSE))OR(((t1.c0)IS NOT(v0.c0)))))OR(((((v0.c4)OR(v0.c0)))OR(v0.c1)))) FULL OUTER JOIN t1 ON CAST(((((t1.c0)OR('b*')))AND('-1770754389')) AS BLOB) ORDER BY CASE (0xffffffff83a0a177 IN (v0.c4))  WHEN ((-1895563266) BETWEEN (v0.c0) AND (v0.c0)) THEN t0.c96 COLLATE RTRIM END DESC  NULLS LAST);
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON ((((((v0.c1) IS FALSE))OR(((t1.c0)IS NOT(v0.c0)))))OR(((((v0.c4)OR(v0.c0)))OR(v0.c1)))) FULL OUTER JOIN t1 ON CAST(((((t1.c0)OR('b*')))AND('-1770754389')) AS BLOB) WHERE ((((- (t0.c96)))>>(CAST(v0.c2 AS TEXT)))) ORDER BY CASE (0xffffffff83a0a177 IN (v0.c4))  WHEN ((-1895563266) BETWEEN (v0.c0) AND (v0.c0)) THEN t0.c96 COLLATE RTRIM END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (t0.c96)))>>(CAST(v0.c2 AS TEXT)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((((((v0.c1) IS FALSE))OR(((t1.c0)IS NOT(v0.c0)))))OR(((((v0.c4)OR(v0.c0)))OR(v0.c1)))) FULL OUTER JOIN t1 ON CAST(((((t1.c0)OR('b*')))AND('-1770754389')) AS BLOB) ORDER BY CASE (0xffffffff83a0a177 IN (v0.c4))  WHEN ((-1895563266) BETWEEN (v0.c0) AND (v0.c0)) THEN t0.c96 COLLATE RTRIM END DESC  NULLS LAST);
SELECT * FROM t0, t1 WHERE ((~ (0.8230335734086058)));
SELECT SUM(count) FROM (SELECT ALL (((~ (0.8230335734086058))) IS TRUE)  as count FROM t0, t1);
SELECT * FROM t0, t1 WHERE ((~ (0.8230335734086058)));
SELECT SUM(count) FROM (SELECT ALL (((~ (0.8230335734086058))) IS TRUE)  as count FROM t0, t1);
SELECT * FROM t0, t1 WHERE ((~ (0.8230335734086058)));
SELECT * FROM t1 INNER JOIN t0 ON ((v0.c3)LIKE(v0.c0)) COLLATE BINARY COLLATE BINARY INNER JOIN v0 ON ((((((v0.c4)AND(0.2890736133903107)))AND(t1.c0))) ISNULL) WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)&(v0.c1)))) AND ((((v0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((v0.c0)&(v0.c1)))) AND ((((v0.c0) NOT NULL))))) IS TRUE)  as count FROM t1 INNER JOIN t0 ON ((v0.c3)LIKE(v0.c0)) COLLATE BINARY COLLATE BINARY INNER JOIN v0 ON ((((((v0.c4)AND(0.2890736133903107)))AND(t1.c0))) ISNULL));
SELECT * FROM t1 INNER JOIN t0 ON ((v0.c3)LIKE(v0.c0)) COLLATE BINARY COLLATE BINARY INNER JOIN v0 ON ((((((v0.c4)AND(0.2890736133903107)))AND(t1.c0))) ISNULL) WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)&(v0.c1)))) AND ((((v0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((v0.c0)&(v0.c1)))) AND ((((v0.c0) NOT NULL))))) IS TRUE)  as count FROM t1 INNER JOIN t0 ON ((v0.c3)LIKE(v0.c0)) COLLATE BINARY COLLATE BINARY INNER JOIN v0 ON ((((((v0.c4)AND(0.2890736133903107)))AND(t1.c0))) ISNULL));
SELECT * FROM t1 INNER JOIN t0 ON ((v0.c3)LIKE(v0.c0)) COLLATE BINARY COLLATE BINARY INNER JOIN v0 ON ((((((v0.c4)AND(0.2890736133903107)))AND(t1.c0))) ISNULL) WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)&(v0.c1)))) AND ((((v0.c0) NOT NULL)))));
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS BLOB))|((((t1.c0))>=((t1.c0)))))) ORDER BY (((((- (t1.c0)))OR((t1.c0 IN ()))))AND(((t1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS BLOB))|((((t1.c0))>=((t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY (((((- (t1.c0)))OR((t1.c0 IN ()))))AND(((t1.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS BLOB))|((((t1.c0))>=((t1.c0)))))) ORDER BY (((((- (t1.c0)))OR((t1.c0 IN ()))))AND(((t1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS BLOB))|((((t1.c0))>=((t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY (((((- (t1.c0)))OR((t1.c0 IN ()))))AND(((t1.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS BLOB))|((((t1.c0))>=((t1.c0)))))) ORDER BY (((((- (t1.c0)))OR((t1.c0 IN ()))))AND(((t1.c0) IS FALSE)));
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON CAST(((v0.c2)||(v0.c1)) AS NUMERIC) RIGHT OUTER JOIN t1 ON '' WHERE (((CASE v0.c4  WHEN v0.c0 THEN t1.c0 ELSE v0.c0 END)/(((v0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c4  WHEN v0.c0 THEN t1.c0 ELSE v0.c0 END)/(((v0.c2) NOTNULL)))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON CAST(((v0.c2)||(v0.c1)) AS NUMERIC) RIGHT OUTER JOIN t1 ON '');
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON CAST(((v0.c2)||(v0.c1)) AS NUMERIC) RIGHT OUTER JOIN t1 ON '' WHERE (((CASE v0.c4  WHEN v0.c0 THEN t1.c0 ELSE v0.c0 END)/(((v0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c4  WHEN v0.c0 THEN t1.c0 ELSE v0.c0 END)/(((v0.c2) NOTNULL)))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON CAST(((v0.c2)||(v0.c1)) AS NUMERIC) RIGHT OUTER JOIN t1 ON '');
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON CAST(((v0.c2)||(v0.c1)) AS NUMERIC) RIGHT OUTER JOIN t1 ON '' WHERE (((CASE v0.c4  WHEN v0.c0 THEN t1.c0 ELSE v0.c0 END)/(((v0.c2) NOTNULL))));
SELECT ALL * FROM t0, t1 WHERE (CASE WHEN ABS(DISTINCT t1.c0) THEN CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN 0x33ec8af WHEN t0.c96 THEN t0.c96 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ABS(DISTINCT t1.c0) THEN CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN 0X33ec8af WHEN t0.c96 THEN t0.c96 END END) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t0, t1 WHERE (CASE WHEN ABS(DISTINCT t1.c0) THEN CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN 0x33ec8af WHEN t0.c96 THEN t0.c96 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ABS(DISTINCT t1.c0) THEN CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN 0X33ec8af WHEN t0.c96 THEN t0.c96 END END) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t0, t1 WHERE (CASE WHEN ABS(DISTINCT t1.c0) THEN CASE WHEN t0.c96 THEN t0.c96 WHEN t0.c96 THEN 0x33ec8af WHEN t0.c96 THEN t0.c96 END END);
SELECT COUNT(*) FROM t0, v0, t1 WHERE ((((((0.9490421313228521)) NOT BETWEEN ((3.17595914E8)) AND ((0.1621591953710052))))>=(((t1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((((0.9490421313228521)) NOT BETWEEN ((3.17595914E8)) AND ((0.1621591953710052))))>=(((t1.c0) ISNULL)))) IS TRUE)  as count FROM t0, v0, t1);
SELECT COUNT(*) FROM t0, v0, t1 WHERE ((((((0.9490421313228521)) NOT BETWEEN ((3.17595914E8)) AND ((0.1621591953710052))))>=(((t1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((((0.9490421313228521)) NOT BETWEEN ((3.17595914E8)) AND ((0.1621591953710052))))>=(((t1.c0) ISNULL)))) IS TRUE)  as count FROM t0, v0, t1);
SELECT COUNT(*) FROM t0, v0, t1 WHERE ((((((0.9490421313228521)) NOT BETWEEN ((3.17595914E8)) AND ((0.1621591953710052))))>=(((t1.c0) ISNULL))));
SELECT ALL COUNT(*) FROM t0, t1 WHERE (((t0.c96) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c96) IS TRUE)) IS TRUE)  as count FROM t0, t1);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (((t0.c96) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c96) IS TRUE)) IS TRUE)  as count FROM t0, t1);
SELECT ALL COUNT(*) FROM t0, t1 WHERE (((t0.c96) IS TRUE));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (v0.c1);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) NOT BETWEEN (v0.c3) AND (NULL))) IS FALSE)) ORDER BY CAST(((x'')OR(v0.c2)) AS BLOB) ASC, ((((((((((((((v0.c0)LIKE(v0.c2)))AND(((v0.c0) ISNULL))))AND(((v0.c2) NOT BETWEEN (v0.c3) AND (v0.c0)))))AND(((v0.c3)<<(v0.c0)))))AND(json_extract(v0.c3, v0.c0, v0.c4, v0.c3))))AND(((v0.c0) ISNULL))))AND((NOT (v0.c2)))) DESC, json_valid(CAST(v0.c0 AS REAL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) NOT BETWEEN (v0.c3) AND (NULL))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY CAST(((x'')OR(v0.c2)) AS BLOB) ASC, ((((((((((((((v0.c0)LIKE(v0.c2)))AND(((v0.c0) ISNULL))))AND(((v0.c2) NOT BETWEEN (v0.c3) AND (v0.c0)))))AND(((v0.c3)<<(v0.c0)))))AND(json_extract(v0.c3, v0.c0, v0.c4, v0.c3))))AND(((v0.c0) ISNULL))))AND((NOT (v0.c2)))) DESC, json_valid(CAST(v0.c0 AS REAL)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) NOT BETWEEN (v0.c3) AND (NULL))) IS FALSE)) ORDER BY CAST(((x'')OR(v0.c2)) AS BLOB) ASC, ((((((((((((((v0.c0)LIKE(v0.c2)))AND(((v0.c0) ISNULL))))AND(((v0.c2) NOT BETWEEN (v0.c3) AND (v0.c0)))))AND(((v0.c3)<<(v0.c0)))))AND(json_extract(v0.c3, v0.c0, v0.c4, v0.c3))))AND(((v0.c0) ISNULL))))AND((NOT (v0.c2)))) DESC, json_valid(CAST(v0.c0 AS REAL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) NOT BETWEEN (v0.c3) AND (NULL))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY CAST(((x'')OR(v0.c2)) AS BLOB) ASC, ((((((((((((((v0.c0)LIKE(v0.c2)))AND(((v0.c0) ISNULL))))AND(((v0.c2) NOT BETWEEN (v0.c3) AND (v0.c0)))))AND(((v0.c3)<<(v0.c0)))))AND(json_extract(v0.c3, v0.c0, v0.c4, v0.c3))))AND(((v0.c0) ISNULL))))AND((NOT (v0.c2)))) DESC, json_valid(CAST(v0.c0 AS REAL)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) NOT BETWEEN (v0.c3) AND (NULL))) IS FALSE)) ORDER BY CAST(((x'')OR(v0.c2)) AS BLOB) ASC, ((((((((((((((v0.c0)LIKE(v0.c2)))AND(((v0.c0) ISNULL))))AND(((v0.c2) NOT BETWEEN (v0.c3) AND (v0.c0)))))AND(((v0.c3)<<(v0.c0)))))AND(json_extract(v0.c3, v0.c0, v0.c4, v0.c3))))AND(((v0.c0) ISNULL))))AND((NOT (v0.c2)))) DESC, json_valid(CAST(v0.c0 AS REAL)) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((('x#T!c') BETWEEN (CAST(t0.c96 AS INTEGER)) AND (t0.c96 COLLATE BINARY))) ORDER BY NULLIF(DISTINCT ((((t0.c96)AND(t0.c96)))OR(t0.c96)), t0.c96 COLLATE BINARY) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('x#T!c') BETWEEN (CAST(t0.c96 AS INTEGER)) AND (t0.c96 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY NULLIF(DISTINCT ((((t0.c96)AND(t0.c96)))OR(t0.c96)), t0.c96 COLLATE BINARY) ASC);
SELECT ALL * FROM t0 WHERE ((('x#T!c') BETWEEN (CAST(t0.c96 AS INTEGER)) AND (t0.c96 COLLATE BINARY))) ORDER BY NULLIF(DISTINCT ((((t0.c96)AND(t0.c96)))OR(t0.c96)), t0.c96 COLLATE BINARY) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('x#T!c') BETWEEN (CAST(t0.c96 AS INTEGER)) AND (t0.c96 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY NULLIF(DISTINCT ((((t0.c96)AND(t0.c96)))OR(t0.c96)), t0.c96 COLLATE BINARY) ASC);
SELECT ALL * FROM t0 WHERE ((('x#T!c') BETWEEN (CAST(t0.c96 AS INTEGER)) AND (t0.c96 COLLATE BINARY))) ORDER BY NULLIF(DISTINCT ((((t0.c96)AND(t0.c96)))OR(t0.c96)), t0.c96 COLLATE BINARY) ASC;
SELECT * FROM v0, t1 NATURAL JOIN t0 WHERE (CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c3 ELSE v0.c2 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c3 ELSE v0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM v0, t1 NATURAL JOIN t0);
SELECT * FROM v0, t1 NATURAL JOIN t0 WHERE (CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c3 ELSE v0.c2 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c3 ELSE v0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM v0, t1 NATURAL JOIN t0);
SELECT * FROM v0, t1 NATURAL JOIN t0 WHERE (CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c3 ELSE v0.c2 END COLLATE NOCASE);
SELECT COUNT(*) FROM t1, v0, t0 WHERE (((v0.c0) BETWEEN ((((v0.c0, NULL, v0.c3))<=(('8', 934398957, v0.c0)))) AND ((~ (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) BETWEEN ((((v0.c0, NULL, v0.c3))<=(('8', 934398957, v0.c0)))) AND ((~ (NULL))))) IS TRUE)  as count FROM t1, v0, t0);
SELECT COUNT(*) FROM t1, v0, t0 WHERE (((v0.c0) BETWEEN ((((v0.c0, NULL, v0.c3))<=(('8', 934398957, v0.c0)))) AND ((~ (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) BETWEEN ((((v0.c0, NULL, v0.c3))<=(('8', 934398957, v0.c0)))) AND ((~ (NULL))))) IS TRUE)  as count FROM t1, v0, t0);
SELECT COUNT(*) FROM t1, v0, t0 WHERE (((v0.c0) BETWEEN ((((v0.c0, NULL, v0.c3))<=(('8', 934398957, v0.c0)))) AND ((~ (NULL)))));
SELECT * FROM t0, v0, t1 WHERE (LIKELIHOOD(0.41180337186768523, 0.49393637000827106)) ORDER BY (((MIN(v0.c4, t0.c96, v0.c3, t1.c0, v0.c2, t1.c0)))<=((t0.c96 COLLATE RTRIM)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(0.41180337186768523, 0.49393637000827106)) IS TRUE)  as count FROM t0, v0, t1 ORDER BY (((MIN(v0.c4, t0.c96, v0.c3, t1.c0, v0.c2, t1.c0)))<=((t0.c96 COLLATE RTRIM)))  NULLS LAST);
SELECT * FROM t0, v0, t1 WHERE (LIKELIHOOD(0.41180337186768523, 0.49393637000827106)) ORDER BY (((MIN(v0.c4, t0.c96, v0.c3, t1.c0, v0.c2, t1.c0)))<=((t0.c96 COLLATE RTRIM)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(0.41180337186768523, 0.49393637000827106)) IS TRUE)  as count FROM t0, v0, t1 ORDER BY (((MIN(v0.c4, t0.c96, v0.c3, t1.c0, v0.c2, t1.c0)))<=((t0.c96 COLLATE RTRIM)))  NULLS LAST);
SELECT * FROM t0, v0, t1 WHERE (LIKELIHOOD(0.41180337186768523, 0.49393637000827106)) ORDER BY (((MIN(v0.c4, t0.c96, v0.c3, t1.c0, v0.c2, t1.c0)))<=((t0.c96 COLLATE RTRIM)))  NULLS LAST;
SELECT * FROM v0 WHERE (((v0.c1 COLLATE BINARY)%(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE BINARY)%(v0.c2))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c1 COLLATE BINARY)%(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE BINARY)%(v0.c2))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c1 COLLATE BINARY)%(v0.c2)));
SELECT * FROM v0, t0 WHERE (((((v0.c2)<=(v0.c2)))==(NULL)));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)<=(v0.c2)))=(NULL))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((v0.c2)<=(v0.c2)))==(NULL)));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)<=(v0.c2)))=(NULL))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((v0.c2)<=(v0.c2)))==(NULL)));
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0)<=(t1.c0))  WHEN CAST(t1.c0 AS BLOB) THEN (- (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c0)<=(t1.c0))  WHEN CAST(t1.c0 AS BLOB) THEN (- (t1.c0)) END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0)<=(t1.c0))  WHEN CAST(t1.c0 AS BLOB) THEN (- (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c0)<=(t1.c0))  WHEN CAST(t1.c0 AS BLOB) THEN (- (t1.c0)) END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0)<=(t1.c0))  WHEN CAST(t1.c0 AS BLOB) THEN (- (t1.c0)) END);
SELECT COUNT(*) FROM t0, t1, v0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, t1, v0);
SELECT COUNT(*) FROM t0, t1, v0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, t1, v0);
SELECT COUNT(*) FROM t0, t1, v0 WHERE ('');
SELECT * FROM t1, v0, t0 WHERE ((((t0.c96 IN (v0.c0, v0.c3))) NOT BETWEEN (CASE v0.c0  WHEN v0.c4 THEN v0.c0 ELSE v0.c4 END) AND ((~ (v0.c3)))));
SELECT SUM(count) FROM (SELECT (((((t0.c96 IN (v0.c0, v0.c3))) NOT BETWEEN (CASE v0.c0  WHEN v0.c4 THEN v0.c0 ELSE v0.c4 END) AND ((~ (v0.c3))))) IS TRUE)  as count FROM t1, v0, t0);
SELECT * FROM t1, v0, t0 WHERE ((((t0.c96 IN (v0.c0, v0.c3))) NOT BETWEEN (CASE v0.c0  WHEN v0.c4 THEN v0.c0 ELSE v0.c4 END) AND ((~ (v0.c3)))));
SELECT SUM(count) FROM (SELECT (((((t0.c96 IN (v0.c0, v0.c3))) NOT BETWEEN (CASE v0.c0  WHEN v0.c4 THEN v0.c0 ELSE v0.c4 END) AND ((~ (v0.c3))))) IS TRUE)  as count FROM t1, v0, t0);
SELECT * FROM t1, v0, t0 WHERE ((((t0.c96 IN (v0.c0, v0.c3))) NOT BETWEEN (CASE v0.c0  WHEN v0.c4 THEN v0.c0 ELSE v0.c4 END) AND ((~ (v0.c3)))));
SELECT * FROM t0, t1 WHERE (CASE WHEN UPPER(DISTINCT t1.c0) THEN (+ (t0.c96)) ELSE CAST(t1.c0 AS TEXT) END) ORDER BY x'' ASC, 'CS' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UPPER(DISTINCT t1.c0) THEN (+ (t0.c96)) ELSE CAST(t1.c0 AS TEXT) END) IS TRUE)  as count FROM t0, t1 ORDER BY x'' ASC, 'CS' DESC);
SELECT * FROM t0, t1 WHERE (CASE WHEN UPPER(DISTINCT t1.c0) THEN (+ (t0.c96)) ELSE CAST(t1.c0 AS TEXT) END) ORDER BY x'' ASC, 'CS' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UPPER(DISTINCT t1.c0) THEN (+ (t0.c96)) ELSE CAST(t1.c0 AS TEXT) END) IS TRUE)  as count FROM t0, t1 ORDER BY x'' ASC, 'CS' DESC);
SELECT * FROM t0, t1 WHERE (CASE WHEN UPPER(DISTINCT t1.c0) THEN (+ (t0.c96)) ELSE CAST(t1.c0 AS TEXT) END) ORDER BY x'' ASC, 'CS' DESC;
SELECT ALL * FROM t0 INNER JOIN t1 ON ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2)) COLLATE NOCASE LEFT OUTER JOIN v0 ON ((((CASE v0.c0  WHEN v0.c1 THEN v0.c4 END)OR(((v0.c4)>(v0.c1)))))OR(NULL)) WHERE ((t0.c96 IN ()) COLLATE RTRIM) ORDER BY (PRINTF(t1.c0) IN (t0.c96 COLLATE BINARY)) DESC, CAST(((v0.c2) IS FALSE) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((t0.c96 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0 INNER JOIN t1 ON ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2)) COLLATE NOCASE LEFT OUTER JOIN v0 ON ((((CASE v0.c0  WHEN v0.c1 THEN v0.c4 END)OR(((v0.c4)>(v0.c1)))))OR(NULL)) ORDER BY (PRINTF(t1.c0) IN (t0.c96 COLLATE BINARY)) DESC, CAST(((v0.c2) IS FALSE) AS NUMERIC) ASC);
SELECT ALL * FROM t0 INNER JOIN t1 ON ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2)) COLLATE NOCASE LEFT OUTER JOIN v0 ON ((((CASE v0.c0  WHEN v0.c1 THEN v0.c4 END)OR(((v0.c4)>(v0.c1)))))OR(NULL)) WHERE ((t0.c96 IN ()) COLLATE RTRIM) ORDER BY (PRINTF(t1.c0) IN (t0.c96 COLLATE BINARY)) DESC, CAST(((v0.c2) IS FALSE) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((t0.c96 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0 INNER JOIN t1 ON ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2)) COLLATE NOCASE LEFT OUTER JOIN v0 ON ((((CASE v0.c0  WHEN v0.c1 THEN v0.c4 END)OR(((v0.c4)>(v0.c1)))))OR(NULL)) ORDER BY (PRINTF(t1.c0) IN (t0.c96 COLLATE BINARY)) DESC, CAST(((v0.c2) IS FALSE) AS NUMERIC) ASC);
SELECT ALL * FROM t0 INNER JOIN t1 ON ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2)) COLLATE NOCASE LEFT OUTER JOIN v0 ON ((((CASE v0.c0  WHEN v0.c1 THEN v0.c4 END)OR(((v0.c4)>(v0.c1)))))OR(NULL)) WHERE ((t0.c96 IN ()) COLLATE RTRIM) ORDER BY (PRINTF(t1.c0) IN (t0.c96 COLLATE BINARY)) DESC, CAST(((v0.c2) IS FALSE) AS NUMERIC) ASC;
SELECT * FROM t0 WHERE (ABS(((t0.c96) NOT NULL))) ORDER BY ((((((((((((CASE ''  WHEN t0.c96 THEN t0.c96 END)AND(((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)))))OR(((((t0.c96)OR(t0.c96)))OR(t0.c96)))))OR(CASE WHEN t0.c96 THEN t0.c96 ELSE t0.c96 END)))AND(t0.c96)))AND(UPPER(t0.c96))))AND((t0.c96 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((ABS(((t0.c96) NOT NULL))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((((CASE ''  WHEN t0.c96 THEN t0.c96 END)AND(((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)))))OR(((((t0.c96)OR(t0.c96)))OR(t0.c96)))))OR(CASE WHEN t0.c96 THEN t0.c96 ELSE t0.c96 END)))AND(t0.c96)))AND(UPPER(t0.c96))))AND((t0.c96 IN ()))) DESC);
SELECT * FROM t0 WHERE (ABS(((t0.c96) NOT NULL))) ORDER BY ((((((((((((CASE ''  WHEN t0.c96 THEN t0.c96 END)AND(((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)))))OR(((((t0.c96)OR(t0.c96)))OR(t0.c96)))))OR(CASE WHEN t0.c96 THEN t0.c96 ELSE t0.c96 END)))AND(t0.c96)))AND(UPPER(t0.c96))))AND((t0.c96 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((ABS(((t0.c96) NOT NULL))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((((CASE ''  WHEN t0.c96 THEN t0.c96 END)AND(((t0.c96) NOT BETWEEN (t0.c96) AND (t0.c96)))))OR(((((t0.c96)OR(t0.c96)))OR(t0.c96)))))OR(CASE WHEN t0.c96 THEN t0.c96 ELSE t0.c96 END)))AND(t0.c96)))AND(UPPER(t0.c96))))AND((t0.c96 IN ()))) DESC);
SELECT COUNT(*) FROM t0, v0, t1 WHERE (((CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN x'' THEN v0.c1 END)/(((0.8363818024301637)<<(v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN x'' THEN v0.c1 END)/(((0.8363818024301637)<<(v0.c1))))) IS TRUE)  as count FROM t0, v0, t1);
SELECT COUNT(*) FROM t0, v0, t1 WHERE (((CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN x'' THEN v0.c1 END)/(((0.8363818024301637)<<(v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN x'' THEN v0.c1 END)/(((0.8363818024301637)<<(v0.c1))))) IS TRUE)  as count FROM t0, v0, t1);
SELECT COUNT(*) FROM t0, v0, t1 WHERE (((CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN x'' THEN v0.c1 END)/(((0.8363818024301637)<<(v0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)<(v0.c3)))>>(((v0.c1) NOT BETWEEN (v0.c0) AND (x'3627')))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)<(v0.c3)))>>(((v0.c1) NOT BETWEEN (v0.c0) AND (x'3627'))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)<(v0.c3)))>>(((v0.c1) NOT BETWEEN (v0.c0) AND (x'3627')))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)<(v0.c3)))>>(((v0.c1) NOT BETWEEN (v0.c0) AND (x'3627'))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)<(v0.c3)))>>(((v0.c1) NOT BETWEEN (v0.c0) AND (x'3627')))));
SELECT * FROM t0, t1, v0 WHERE (((((((t0.c96) ISNULL))OR(((v0.c0) NOT BETWEEN (-1.864233371E9) AND (v0.c4)))))AND(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c96) ISNULL))OR(((v0.c0) NOT BETWEEN (-1.864233371E9) AND (v0.c4)))))AND(v0.c2))) IS TRUE)  as count FROM t0, t1, v0);
SELECT * FROM t0, t1, v0 WHERE (((((((t0.c96) ISNULL))OR(((v0.c0) NOT BETWEEN (-1.864233371E9) AND (v0.c4)))))AND(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c96) ISNULL))OR(((v0.c0) NOT BETWEEN (-1.864233371E9) AND (v0.c4)))))AND(v0.c2))) IS TRUE)  as count FROM t0, t1, v0);
SELECT * FROM t0, t1, v0 WHERE (((((((t0.c96) ISNULL))OR(((v0.c0) NOT BETWEEN (-1.864233371E9) AND (v0.c4)))))AND(v0.c2)));
SELECT ALL * FROM t1, v0 WHERE (SQLITE_SOURCE_ID()) ORDER BY (~ (((v0.c1)IS(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t1, v0 ORDER BY (~ (((v0.c1)IS(v0.c1)))));
SELECT ALL * FROM t1, v0 WHERE (SQLITE_SOURCE_ID()) ORDER BY (~ (((v0.c1)IS(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t1, v0 ORDER BY (~ (((v0.c1)IS(v0.c1)))));
SELECT ALL * FROM t1, v0 WHERE (SQLITE_SOURCE_ID()) ORDER BY (~ (((v0.c1)IS(v0.c1))));
SELECT COUNT(*) FROM t0, t1 RIGHT OUTER JOIN v0 ON TYPEOF(DISTINCT 0Xffffffffb0380f86) WHERE ((((v0.c4)) NOT BETWEEN ((((((v0.c4)OR(v0.c2)))AND(t0.c96)))) AND (((NOT (v0.c2))))));
SELECT SUM(count) FROM (SELECT (((((v0.c4)) NOT BETWEEN ((((((v0.c4)OR(v0.c2)))AND(t0.c96)))) AND (((NOT (v0.c2)))))) IS TRUE)  as count FROM t0, t1 RIGHT OUTER JOIN v0 ON TYPEOF(DISTINCT 0xffffffffb0380f86));
SELECT COUNT(*) FROM t0, t1 RIGHT OUTER JOIN v0 ON TYPEOF(DISTINCT 0Xffffffffb0380f86) WHERE ((((v0.c4)) NOT BETWEEN ((((((v0.c4)OR(v0.c2)))AND(t0.c96)))) AND (((NOT (v0.c2))))));
SELECT SUM(count) FROM (SELECT (((((v0.c4)) NOT BETWEEN ((((((v0.c4)OR(v0.c2)))AND(t0.c96)))) AND (((NOT (v0.c2)))))) IS TRUE)  as count FROM t0, t1 RIGHT OUTER JOIN v0 ON TYPEOF(DISTINCT 0xffffffffb0380f86));
SELECT COUNT(*) FROM t0, t1 RIGHT OUTER JOIN v0 ON TYPEOF(DISTINCT 0Xffffffffb0380f86) WHERE ((((v0.c4)) NOT BETWEEN ((((((v0.c4)OR(v0.c2)))AND(t0.c96)))) AND (((NOT (v0.c2))))));
SELECT ALL COUNT(*) FROM v0, t1, t0 WHERE ((~ (v0.c4))) ORDER BY -2.50523344E8 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (v0.c4))) IS TRUE)  as count FROM v0, t1, t0 ORDER BY -2.50523344E8 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t1, t0 WHERE ((~ (v0.c4))) ORDER BY -2.50523344E8 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (v0.c4))) IS TRUE)  as count FROM v0, t1, t0 ORDER BY -2.50523344E8 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t1, t0 WHERE ((~ (v0.c4))) ORDER BY -2.50523344E8 ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (CASE WHEN ((t1.c0)>=(t1.c0)) THEN (t1.c0 IN ()) WHEN IFNULL(DISTINCT t1.c0, t1.c0) THEN (~ (t1.c0)) WHEN ((t1.c0)|(t1.c0)) THEN (- (t1.c0)) ELSE ((t1.c0)LIKE(t1.c0)) END) ORDER BY CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c0)>=(t1.c0)) THEN (t1.c0 IN ()) WHEN IFNULL(DISTINCT t1.c0, t1.c0) THEN (~ (t1.c0)) WHEN ((t1.c0)|(t1.c0)) THEN (- (t1.c0)) ELSE ((t1.c0)LIKE(t1.c0)) END) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) AS INTEGER) DESC);
SELECT ALL * FROM t1 WHERE (CASE WHEN ((t1.c0)>=(t1.c0)) THEN (t1.c0 IN ()) WHEN IFNULL(DISTINCT t1.c0, t1.c0) THEN (~ (t1.c0)) WHEN ((t1.c0)|(t1.c0)) THEN (- (t1.c0)) ELSE ((t1.c0)LIKE(t1.c0)) END) ORDER BY CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c0)>=(t1.c0)) THEN (t1.c0 IN ()) WHEN IFNULL(DISTINCT t1.c0, t1.c0) THEN (~ (t1.c0)) WHEN ((t1.c0)|(t1.c0)) THEN (- (t1.c0)) ELSE ((t1.c0)LIKE(t1.c0)) END) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) AS INTEGER) DESC);
SELECT ALL * FROM t1 WHERE (CASE WHEN ((t1.c0)>=(t1.c0)) THEN (t1.c0 IN ()) WHEN IFNULL(DISTINCT t1.c0, t1.c0) THEN (~ (t1.c0)) WHEN ((t1.c0)|(t1.c0)) THEN (- (t1.c0)) ELSE ((t1.c0)LIKE(t1.c0)) END) ORDER BY CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) AS INTEGER) DESC;
SELECT ALL * FROM v0, t1 WHERE ((NOT (((t1.c0) BETWEEN (0.877861175180549) AND (v0.c3)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c0) BETWEEN (0.877861175180549) AND (v0.c3))))) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE ((NOT (((t1.c0) BETWEEN (0.877861175180549) AND (v0.c3)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c0) BETWEEN (0.877861175180549) AND (v0.c3))))) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE ((NOT (((t1.c0) BETWEEN (0.877861175180549) AND (v0.c3)))));
SELECT ALL * FROM t0, t1 WHERE ((((t0.c96)LIKE('C<躧>VQ<羨V')) IN (load_extension(t1.c0, t1.c0))));
SELECT SUM(count) FROM (SELECT (((((t0.c96)LIKE('C<躧>VQ<羨V')) IN (load_extension(t1.c0, t1.c0)))) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t0, t1 WHERE ((((t0.c96)LIKE('C<躧>VQ<羨V')) IN (load_extension(t1.c0, t1.c0))));
SELECT SUM(count) FROM (SELECT (((((t0.c96)LIKE('C<躧>VQ<羨V')) IN (load_extension(t1.c0, t1.c0)))) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t1, v0 WHERE ((CASE t1.c0  WHEN v0.c4 THEN v0.c4 END IN ())) ORDER BY (CAST(t1.c0 AS TEXT) IN ()) DESC, UNICODE(t1.c0 COLLATE RTRIM) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE t1.c0  WHEN v0.c4 THEN v0.c4 END IN ())) IS TRUE)  as count FROM t1, v0 ORDER BY (CAST(t1.c0 AS TEXT) IN ()) DESC, UNICODE(t1.c0 COLLATE RTRIM) DESC  NULLS LAST);
SELECT ALL * FROM t1, v0 WHERE ((CASE t1.c0  WHEN v0.c4 THEN v0.c4 END IN ())) ORDER BY (CAST(t1.c0 AS TEXT) IN ()) DESC, UNICODE(t1.c0 COLLATE RTRIM) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE t1.c0  WHEN v0.c4 THEN v0.c4 END IN ())) IS TRUE)  as count FROM t1, v0 ORDER BY (CAST(t1.c0 AS TEXT) IN ()) DESC, UNICODE(t1.c0 COLLATE RTRIM) DESC  NULLS LAST);
SELECT ALL * FROM t1, v0 WHERE ((CASE t1.c0  WHEN v0.c4 THEN v0.c4 END IN ())) ORDER BY (CAST(t1.c0 AS TEXT) IN ()) DESC, UNICODE(t1.c0 COLLATE RTRIM) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t1 WHERE (((t1.c0)GLOB((((0.6901478618057758)) BETWEEN ((v0.c3)) AND ((v0.c0)))))) ORDER BY ((LOWER(DISTINCT v0.c0)) BETWEEN (v0.c2 COLLATE NOCASE) AND (((((v0.c1)AND(v0.c2)))OR(v0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((t1.c0)GLOB((((0.6901478618057758)) BETWEEN ((v0.c3)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, t1 ORDER BY ((LOWER(DISTINCT v0.c0)) BETWEEN (v0.c2 COLLATE NOCASE) AND (((((v0.c1)AND(v0.c2)))OR(v0.c1)))) ASC);
SELECT ALL COUNT(*) FROM v0, t1 WHERE (((t1.c0)GLOB((((0.6901478618057758)) BETWEEN ((v0.c3)) AND ((v0.c0)))))) ORDER BY ((LOWER(DISTINCT v0.c0)) BETWEEN (v0.c2 COLLATE NOCASE) AND (((((v0.c1)AND(v0.c2)))OR(v0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((t1.c0)GLOB((((0.6901478618057758)) BETWEEN ((v0.c3)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, t1 ORDER BY ((LOWER(DISTINCT v0.c0)) BETWEEN (v0.c2 COLLATE NOCASE) AND (((((v0.c1)AND(v0.c2)))OR(v0.c1)))) ASC);
SELECT ALL COUNT(*) FROM v0, t1 WHERE (((t1.c0)GLOB((((0.6901478618057758)) BETWEEN ((v0.c3)) AND ((v0.c0)))))) ORDER BY ((LOWER(DISTINCT v0.c0)) BETWEEN (v0.c2 COLLATE NOCASE) AND (((((v0.c1)AND(v0.c2)))OR(v0.c1)))) ASC;
SELECT * FROM t0 WHERE (CAST(TRIM(DISTINCT t0.c96) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(DISTINCT t0.c96) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(TRIM(DISTINCT t0.c96) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(DISTINCT t0.c96) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(TRIM(DISTINCT t0.c96) AS BLOB));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST(t0.c96 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c96 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST(t0.c96 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c96 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST(t0.c96 AS INTEGER) COLLATE RTRIM);
SELECT * FROM t0, t1, v0 WHERE (((((v0.c4) BETWEEN (v0.c0) AND ('-690078460')))<=(LIKELIHOOD(v0.c4, 0.6128293594055352))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c4) BETWEEN (v0.c0) AND ('-690078460')))<=(LIKELIHOOD(v0.c4, 0.6128293594055352)))) IS TRUE)  as count FROM t0, t1, v0);
SELECT * FROM t0, t1, v0 WHERE (((((v0.c4) BETWEEN (v0.c0) AND ('-690078460')))<=(LIKELIHOOD(v0.c4, 0.6128293594055352))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c4) BETWEEN (v0.c0) AND ('-690078460')))<=(LIKELIHOOD(v0.c4, 0.6128293594055352)))) IS TRUE)  as count FROM t0, t1, v0);
SELECT * FROM t0, t1, v0 WHERE (((((v0.c4) BETWEEN (v0.c0) AND ('-690078460')))<=(LIKELIHOOD(v0.c4, 0.6128293594055352))));
SELECT ALL * FROM t1 WHERE (((((t1.c0)<=(t1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)<=(t1.c0))) ISNULL)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c0)<=(t1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)<=(t1.c0))) ISNULL)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c0)<=(t1.c0))) ISNULL));
SELECT COUNT(*) FROM v0 WHERE (TYPEOF(DISTINCT MAX(v0.c1, v0.c4))) ORDER BY CASE ((x'') NOT BETWEEN (v0.c0) AND (v0.c2))  WHEN v0.c4 THEN v0.c4 COLLATE BINARY ELSE ((v0.c4)>=(v0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT MAX(v0.c1, v0.c4))) IS TRUE)  as count FROM v0 ORDER BY CASE ((x'') NOT BETWEEN (v0.c0) AND (v0.c2))  WHEN v0.c4 THEN v0.c4 COLLATE BINARY ELSE ((v0.c4)>=(v0.c2)) END  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (TYPEOF(DISTINCT MAX(v0.c1, v0.c4))) ORDER BY CASE ((x'') NOT BETWEEN (v0.c0) AND (v0.c2))  WHEN v0.c4 THEN v0.c4 COLLATE BINARY ELSE ((v0.c4)>=(v0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT MAX(v0.c1, v0.c4))) IS TRUE)  as count FROM v0 ORDER BY CASE ((x'') NOT BETWEEN (v0.c0) AND (v0.c2))  WHEN v0.c4 THEN v0.c4 COLLATE BINARY ELSE ((v0.c4)>=(v0.c2)) END  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (TYPEOF(DISTINCT MAX(v0.c1, v0.c4))) ORDER BY CASE ((x'') NOT BETWEEN (v0.c0) AND (v0.c2))  WHEN v0.c4 THEN v0.c4 COLLATE BINARY ELSE ((v0.c4)>=(v0.c2)) END  NULLS LAST;
