-- Time: 2024/06/09 16:25:50
-- Database: database75
-- Database version: 3.40.0
-- seed value: 2474483075
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 18ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 7ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE main; -- 4ms;
ANALYZE; -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
ROLLBACK TRANSACTION; -- 10ms;
PRAGMA journal_mode; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('i]ozH]-'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x'c7d7'); -- 11ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 2ms;
COMMIT; -- 0ms;
END TRANSACTION; -- 0ms;
DELETE FROM vt0 WHERE ((vt0.c0)&(vt0.c0)) COLLATE NOCASE; -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (''); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 2ms;
ANALYZE main; -- 1ms;
INSERT OR ROLLBACK INTO vt0 VALUES (0.8823229066107127), (x''), (0.8823229066107127); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('1965419129'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 2ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '18334'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '58675'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '48472'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 10ms;
PRAGMA temp.secure_delete = FAST; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0.37074290677448174), (1.965419129E9), (NULL); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.5330050378252547); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE; -- 4ms;
ROLLBACK TRANSACTION; -- 16ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
PRAGMA incremental_vacuum(-2146180670); -- 2ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('1965419129'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), (x'b2cb'), (''), ('-622998187'), (NULL), (x''), (((x'') BETWEEN ((((-6.22998187E8)) BETWEEN ((0.37074290677448174)) AND ((NULL)))) AND (((((x'')OR(x'2e62')))OR(x'4e19'))))); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 5ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('Os	??9'); -- 0ms;
PRAGMA main.busy_timeout = 0; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.3279421962081438); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
PRAGMA shrink_memory; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-2146180670,12');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0Xffffffff8013e1c2); -- 0ms;
UPDATE vt0 SET (c0)=(x'') WHERE CAST(vt0.c0 COLLATE BINARY AS INTEGER); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (-6.22998187E8); -- 1ms;
CREATE VIEW v0(c0, c1, c2) AS SELECT TRIM(x'0b0a', vt0.c0), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()), UNLIKELY(vt0.c0), ((-774945458)|(vt0.c0)))) AND ((vt0.c0, (((vt0.c0, vt0.c0, vt0.c0, '', '487157367'))<=((vt0.c0, vt0.c0, vt0.c0, '', vt0.c0))), vt0.c0))), vt0.c0 FROM vt0; -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
COMMIT; -- 0ms;
PRAGMA locking_mode = EXCLUSIVE; -- 0ms;
VACUUM; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (CAST(CAST('-774945458' AS INTEGER) AS REAL)); -- 1ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('-2051795157'), (NULL), ('FUI,'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-774945458'), (0Xffffffffc25ff41a), (NULL); -- 0ms;
PRAGMA main.application_id; -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
ANALYZE; -- 0ms;
COMMIT TRANSACTION; -- 6ms;
INSERT OR IGNORE INTO vt0 VALUES ('-2051795157'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 TEXT ); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-698366807'); -- 1ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(x'') WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x''))) IN ()); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c32; -- 5ms;
INSERT OR FAIL INTO t0 VALUES (x''); -- 1ms;
PRAGMA optimize; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x'ca46'))) NOT BETWEEN (CASE WHEN '1908061304' THEN 0.8190979419214303 ELSE NULL END) AND (((x'') NOT BETWEEN ('') AND (0xffffffffb821b4df)))); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x''), (0xffffffff8013e1c2), (-1e500); -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
ALTER TABLE t0 ADD COLUMN c13 BLOB; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=11'); -- 0ms;
ALTER TABLE t0 ADD COLUMN c86 INTEGER; -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (0.19001240660417884, 0.7328681044813558, '1908061304'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '8387'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
COMMIT; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c32) NOT BETWEEN (t0.c13) AND (t0.c32)) AS NUMERIC)) ORDER BY CASE t0.c32  WHEN t0.c86 THEN t0.c13 ELSE t0.c86 END COLLATE RTRIM  NULLS FIRST, (((GLOB(t0.c13, t0.c13)))<>((((t0.c13)%(t0.c32)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c32) NOT BETWEEN (t0.c13) AND (t0.c32)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c32  WHEN t0.c86 THEN t0.c13 ELSE t0.c86 END COLLATE RTRIM  NULLS FIRST, (((GLOB(t0.c13, t0.c13)))<>((((t0.c13)%(t0.c32)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c32) NOT BETWEEN (t0.c13) AND (t0.c32)) AS NUMERIC)) ORDER BY CASE t0.c32  WHEN t0.c86 THEN t0.c13 ELSE t0.c86 END COLLATE RTRIM  NULLS FIRST, (((GLOB(t0.c13, t0.c13)))<>((((t0.c13)%(t0.c32)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c32) NOT BETWEEN (t0.c13) AND (t0.c32)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c32  WHEN t0.c86 THEN t0.c13 ELSE t0.c86 END COLLATE RTRIM  NULLS FIRST, (((GLOB(t0.c13, t0.c13)))<>((((t0.c13)%(t0.c32)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c32) NOT BETWEEN (t0.c13) AND (t0.c32)) AS NUMERIC)) ORDER BY CASE t0.c32  WHEN t0.c86 THEN t0.c13 ELSE t0.c86 END COLLATE RTRIM  NULLS FIRST, (((GLOB(t0.c13, t0.c13)))<>((((t0.c13)%(t0.c32)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c13 AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c13 AS TEXT) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c13 AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c13 AS TEXT) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c13 AS TEXT) AS TEXT));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((+ (t0.c13)))==((NOT (t0.c32))))) ORDER BY (NOT (((vt0.c0)|(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c13)))=((NOT (t0.c32))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (((vt0.c0)|(vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((+ (t0.c13)))==((NOT (t0.c32))))) ORDER BY (NOT (((vt0.c0)|(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c13)))=((NOT (t0.c32))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (((vt0.c0)|(vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((+ (t0.c13)))==((NOT (t0.c32))))) ORDER BY (NOT (((vt0.c0)|(vt0.c0))));
SELECT ALL * FROM v0 WHERE ((((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) IS TRUE)) ORDER BY IFNULL(DISTINCT ((v0.c0)||(v0.c1)), v0.c1);
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY IFNULL(DISTINCT ((v0.c0)||(v0.c1)), v0.c1));
SELECT ALL * FROM v0 WHERE ((((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) IS TRUE)) ORDER BY IFNULL(DISTINCT ((v0.c0)||(v0.c1)), v0.c1);
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY IFNULL(DISTINCT ((v0.c0)||(v0.c1)), v0.c1));
SELECT ALL * FROM v0 WHERE ((((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) IS TRUE)) ORDER BY IFNULL(DISTINCT ((v0.c0)||(v0.c1)), v0.c1);
SELECT ALL * FROM t0, vt0, v0 WHERE ((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((0.00808747991849823))) COLLATE NOCASE) ORDER BY (+ (((vt0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((0.00808747991849823))) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (+ (((vt0.c0) NOT NULL)))  NULLS LAST);
SELECT ALL * FROM t0, vt0, v0 WHERE ((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((0.00808747991849823))) COLLATE NOCASE) ORDER BY (+ (((vt0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((0.00808747991849823))) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (+ (((vt0.c0) NOT NULL)))  NULLS LAST);
SELECT ALL * FROM t0, vt0, v0 WHERE ((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((0.00808747991849823))) COLLATE NOCASE) ORDER BY (+ (((vt0.c0) NOT NULL)))  NULLS LAST;
SELECT * FROM v0, t0, vt0 WHERE (IFNULL(DISTINCT ((vt0.c0)*(t0.c86)), t0.c86 COLLATE RTRIM)) ORDER BY ((((CAST(t0.c32 AS BLOB))AND((v0.c2 IN ()))))OR(((v0.c0) NOT BETWEEN (t0.c13) AND (v0.c1)))) ASC, CAST(CAST(t0.c13 AS NUMERIC) AS REAL) ASC  NULLS FIRST, ((0.936449192938508) NOT BETWEEN (((t0.c86)OR(v0.c1))) AND (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((vt0.c0)*(t0.c86)), t0.c86 COLLATE RTRIM)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((CAST(t0.c32 AS BLOB))AND((v0.c2 IN ()))))OR(((v0.c0) NOT BETWEEN (t0.c13) AND (v0.c1)))) ASC, CAST(CAST(t0.c13 AS NUMERIC) AS REAL) ASC  NULLS FIRST, ((0.936449192938508) NOT BETWEEN (((t0.c86)OR(v0.c1))) AND (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT * FROM v0, t0, vt0 WHERE (IFNULL(DISTINCT ((vt0.c0)*(t0.c86)), t0.c86 COLLATE RTRIM)) ORDER BY ((((CAST(t0.c32 AS BLOB))AND((v0.c2 IN ()))))OR(((v0.c0) NOT BETWEEN (t0.c13) AND (v0.c1)))) ASC, CAST(CAST(t0.c13 AS NUMERIC) AS REAL) ASC  NULLS FIRST, ((0.936449192938508) NOT BETWEEN (((t0.c86)OR(v0.c1))) AND (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((vt0.c0)*(t0.c86)), t0.c86 COLLATE RTRIM)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((CAST(t0.c32 AS BLOB))AND((v0.c2 IN ()))))OR(((v0.c0) NOT BETWEEN (t0.c13) AND (v0.c1)))) ASC, CAST(CAST(t0.c13 AS NUMERIC) AS REAL) ASC  NULLS FIRST, ((0.936449192938508) NOT BETWEEN (((t0.c86)OR(v0.c1))) AND (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT * FROM v0, t0, vt0 WHERE (IFNULL(DISTINCT ((vt0.c0)*(t0.c86)), t0.c86 COLLATE RTRIM)) ORDER BY ((((CAST(t0.c32 AS BLOB))AND((v0.c2 IN ()))))OR(((v0.c0) NOT BETWEEN (t0.c13) AND (v0.c1)))) ASC, CAST(CAST(t0.c13 AS NUMERIC) AS REAL) ASC  NULLS FIRST, ((0.936449192938508) NOT BETWEEN (((t0.c86)OR(v0.c1))) AND (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON v0.c0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (NULL))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (v0.c0) AND (NULL))) ISNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON v0.c0);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON v0.c0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (NULL))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (v0.c0) AND (NULL))) ISNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON v0.c0);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON v0.c0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (NULL))) ISNULL));
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))*(vt0.c0))) ORDER BY ((vt0.c0 COLLATE NOCASE) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))*(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) NOTNULL) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))*(vt0.c0))) ORDER BY ((vt0.c0 COLLATE NOCASE) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))*(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) NOTNULL) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))*(vt0.c0))) ORDER BY ((vt0.c0 COLLATE NOCASE) NOTNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((((~ (t0.c13))))=((((vt0.c0)|(NULL)))))) ORDER BY CAST((('') IS FALSE) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((~ (t0.c13))))=((((vt0.c0)|(NULL)))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY CAST((('') IS FALSE) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((((~ (t0.c13))))=((((vt0.c0)|(NULL)))))) ORDER BY CAST((('') IS FALSE) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((~ (t0.c13))))=((((vt0.c0)|(NULL)))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY CAST((('') IS FALSE) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((((~ (t0.c13))))=((((vt0.c0)|(NULL)))))) ORDER BY CAST((('') IS FALSE) AS INTEGER)  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (COALESCE((- (t0.c32)), ((vt0.c0) IS TRUE))) ORDER BY ((((t0.c13) NOTNULL)) IS FALSE) DESC, '-2142873708'  NULLS FIRST, ((((((((LOWER(t0.c32))AND(((((((((t0.c13)OR(vt0.c0)))OR(t0.c13)))AND(t0.c13)))OR(t0.c13)))))AND(((((t0.c86)AND(t0.c32)))AND(vt0.c0)))))AND(((0.9438621992025946)||(vt0.c0)))))OR(((vt0.c0) NOTNULL))) ASC  NULLS FIRST, LIKE(CASE t0.c13  WHEN t0.c13 THEN t0.c86 END, (((vt0.c0))<=((t0.c86))))  NULLS FIRST, CAST((t0.c13 IN (t0.c13)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((COALESCE((- (t0.c32)), ((vt0.c0) IS TRUE))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c13) NOTNULL)) IS FALSE) DESC, '-2142873708'  NULLS FIRST, ((((((((LOWER(t0.c32))AND(((((((((t0.c13)OR(vt0.c0)))OR(t0.c13)))AND(t0.c13)))OR(t0.c13)))))AND(((((t0.c86)AND(t0.c32)))AND(vt0.c0)))))AND(((0.9438621992025946)||(vt0.c0)))))OR(((vt0.c0) NOTNULL))) ASC  NULLS FIRST, LIKE(CASE t0.c13  WHEN t0.c13 THEN t0.c86 END, (((vt0.c0))<=((t0.c86))))  NULLS FIRST, CAST((t0.c13 IN (t0.c13)) AS BLOB));
SELECT COUNT(*) FROM t0, vt0 WHERE (COALESCE((- (t0.c32)), ((vt0.c0) IS TRUE))) ORDER BY ((((t0.c13) NOTNULL)) IS FALSE) DESC, '-2142873708'  NULLS FIRST, ((((((((LOWER(t0.c32))AND(((((((((t0.c13)OR(vt0.c0)))OR(t0.c13)))AND(t0.c13)))OR(t0.c13)))))AND(((((t0.c86)AND(t0.c32)))AND(vt0.c0)))))AND(((0.9438621992025946)||(vt0.c0)))))OR(((vt0.c0) NOTNULL))) ASC  NULLS FIRST, LIKE(CASE t0.c13  WHEN t0.c13 THEN t0.c86 END, (((vt0.c0))<=((t0.c86))))  NULLS FIRST, CAST((t0.c13 IN (t0.c13)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((COALESCE((- (t0.c32)), ((vt0.c0) IS TRUE))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c13) NOTNULL)) IS FALSE) DESC, '-2142873708'  NULLS FIRST, ((((((((LOWER(t0.c32))AND(((((((((t0.c13)OR(vt0.c0)))OR(t0.c13)))AND(t0.c13)))OR(t0.c13)))))AND(((((t0.c86)AND(t0.c32)))AND(vt0.c0)))))AND(((0.9438621992025946)||(vt0.c0)))))OR(((vt0.c0) NOTNULL))) ASC  NULLS FIRST, LIKE(CASE t0.c13  WHEN t0.c13 THEN t0.c86 END, (((vt0.c0))<=((t0.c86))))  NULLS FIRST, CAST((t0.c13 IN (t0.c13)) AS BLOB));
SELECT COUNT(*) FROM t0, vt0 WHERE (COALESCE((- (t0.c32)), ((vt0.c0) IS TRUE))) ORDER BY ((((t0.c13) NOTNULL)) IS FALSE) DESC, '-2142873708'  NULLS FIRST, ((((((((LOWER(t0.c32))AND(((((((((t0.c13)OR(vt0.c0)))OR(t0.c13)))AND(t0.c13)))OR(t0.c13)))))AND(((((t0.c86)AND(t0.c32)))AND(vt0.c0)))))AND(((0.9438621992025946)||(vt0.c0)))))OR(((vt0.c0) NOTNULL))) ASC  NULLS FIRST, LIKE(CASE t0.c13  WHEN t0.c13 THEN t0.c86 END, (((vt0.c0))<=((t0.c86))))  NULLS FIRST, CAST((t0.c13 IN (t0.c13)) AS BLOB);
SELECT * FROM t0 WHERE (CAST((t0.c32 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c32 IN ()) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST((t0.c32 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c32 IN ()) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST((t0.c32 IN ()) AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(0xffffffff85b4172b))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(0xffffffff85b4172b))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(0xffffffff85b4172b))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(0xffffffff85b4172b))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(0xffffffff85b4172b))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((~ (TRIM(v0.c1, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (TRIM(v0.c1, vt0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((~ (TRIM(v0.c1, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (TRIM(v0.c1, vt0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((~ (TRIM(v0.c1, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CAST(((t0.c13)<<(t0.c32)) AS BLOB)) ORDER BY ((((t0.c13)IS NOT(t0.c86)))<<(((vt0.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c13)<<(t0.c32)) AS BLOB)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((t0.c13)IS NOT(t0.c86)))<<(((vt0.c0) ISNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CAST(((t0.c13)<<(t0.c32)) AS BLOB)) ORDER BY ((((t0.c13)IS NOT(t0.c86)))<<(((vt0.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c13)<<(t0.c32)) AS BLOB)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((t0.c13)IS NOT(t0.c86)))<<(((vt0.c0) ISNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CAST(((t0.c13)<<(t0.c32)) AS BLOB)) ORDER BY ((((t0.c13)IS NOT(t0.c86)))<<(((vt0.c0) ISNULL)))  NULLS FIRST;
SELECT ALL * FROM v0, t0 WHERE (((CASE t0.c32  WHEN NULL THEN v0.c0 ELSE v0.c2 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c32  WHEN NULL THEN v0.c0 ELSE v0.c2 END) IS TRUE)) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (((CASE t0.c32  WHEN NULL THEN v0.c0 ELSE v0.c2 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c32  WHEN NULL THEN v0.c0 ELSE v0.c2 END) IS TRUE)) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (((CASE t0.c32  WHEN NULL THEN v0.c0 ELSE v0.c2 END) IS TRUE));
SELECT * FROM vt0, v0, t0 WHERE ((((t0.c86, t0.c32, t0.c13)) BETWEEN ((CASE WHEN v0.c0 THEN t0.c86 END, CASE t0.c86  WHEN t0.c32 THEN NULL ELSE v0.c2 END, CASE v0.c0  WHEN '-622998187' THEN vt0.c0 END)) AND ((((v0.c0) ISNULL), ((v0.c0)>(v0.c2)), ((t0.c32)=(t0.c86)))))) ORDER BY ((((v0.c1) ISNULL))<<(UNICODE(t0.c32)))  NULLS FIRST, (((t0.c32)==(v0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c86, t0.c32, t0.c13)) BETWEEN ((CASE WHEN v0.c0 THEN t0.c86 END, CASE t0.c86  WHEN t0.c32 THEN NULL ELSE v0.c2 END, CASE v0.c0  WHEN '-622998187' THEN vt0.c0 END)) AND ((((v0.c0) ISNULL), ((v0.c0)>(v0.c2)), ((t0.c32)=(t0.c86)))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((v0.c1) ISNULL))<<(UNICODE(t0.c32)))  NULLS FIRST, (((t0.c32)==(v0.c0)) IN ())  NULLS LAST);
SELECT * FROM vt0, v0, t0 WHERE ((((t0.c86, t0.c32, t0.c13)) BETWEEN ((CASE WHEN v0.c0 THEN t0.c86 END, CASE t0.c86  WHEN t0.c32 THEN NULL ELSE v0.c2 END, CASE v0.c0  WHEN '-622998187' THEN vt0.c0 END)) AND ((((v0.c0) ISNULL), ((v0.c0)>(v0.c2)), ((t0.c32)=(t0.c86)))))) ORDER BY ((((v0.c1) ISNULL))<<(UNICODE(t0.c32)))  NULLS FIRST, (((t0.c32)==(v0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c86, t0.c32, t0.c13)) BETWEEN ((CASE WHEN v0.c0 THEN t0.c86 END, CASE t0.c86  WHEN t0.c32 THEN NULL ELSE v0.c2 END, CASE v0.c0  WHEN '-622998187' THEN vt0.c0 END)) AND ((((v0.c0) ISNULL), ((v0.c0)>(v0.c2)), ((t0.c32)=(t0.c86)))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((v0.c1) ISNULL))<<(UNICODE(t0.c32)))  NULLS FIRST, (((t0.c32)==(v0.c0)) IN ())  NULLS LAST);
SELECT * FROM vt0, v0, t0 WHERE ((((t0.c86, t0.c32, t0.c13)) BETWEEN ((CASE WHEN v0.c0 THEN t0.c86 END, CASE t0.c86  WHEN t0.c32 THEN NULL ELSE v0.c2 END, CASE v0.c0  WHEN '-622998187' THEN vt0.c0 END)) AND ((((v0.c0) ISNULL), ((v0.c0)>(v0.c2)), ((t0.c32)=(t0.c86)))))) ORDER BY ((((v0.c1) ISNULL))<<(UNICODE(t0.c32)))  NULLS FIRST, (((t0.c32)==(v0.c0)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c2) AND (v0.c2))) IS FALSE)) ORDER BY (((v0.c1 IN ()))==(json_remove(x'6cd2', v0.c0))) DESC, v0.c2;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) BETWEEN (v0.c2) AND (v0.c2))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1 IN ()))==(json_remove(x'6cd2', v0.c0))) DESC, v0.c2);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c2) AND (v0.c2))) IS FALSE)) ORDER BY (((v0.c1 IN ()))==(json_remove(x'6cd2', v0.c0))) DESC, v0.c2;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) BETWEEN (v0.c2) AND (v0.c2))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1 IN ()))==(json_remove(x'6cd2', v0.c0))) DESC, v0.c2);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c0 COLLATE BINARY) BETWEEN (ABS(t0.c13)) AND (((((vt0.c0)OR(t0.c32)))AND(vt0.c0)))) WHERE (t0.c32);
SELECT SUM(count) FROM (SELECT ALL ((t0.c32) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c0 COLLATE BINARY) BETWEEN (ABS(t0.c13)) AND (((((vt0.c0)OR(t0.c32)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c0 COLLATE BINARY) BETWEEN (ABS(t0.c13)) AND (((((vt0.c0)OR(t0.c32)))AND(vt0.c0)))) WHERE (t0.c32);
SELECT SUM(count) FROM (SELECT ALL ((t0.c32) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c0 COLLATE BINARY) BETWEEN (ABS(t0.c13)) AND (((((vt0.c0)OR(t0.c32)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c0 COLLATE BINARY) BETWEEN (ABS(t0.c13)) AND (((((vt0.c0)OR(t0.c32)))AND(vt0.c0)))) WHERE (t0.c32);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((CAST(v0.c0 AS NUMERIC))<>(((((vt0.c0)OR(v0.c1)))OR(t0.c13))))) ORDER BY ((((v0.c0)<=(v0.c0)))/(((t0.c32)IS('鱦dJsum'))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))<>(((((vt0.c0)OR(v0.c1)))OR(t0.c13))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((((v0.c0)<=(v0.c0)))/(((t0.c32)IS('鱦dJsum')))));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((CAST(v0.c0 AS NUMERIC))<>(((((vt0.c0)OR(v0.c1)))OR(t0.c13))))) ORDER BY ((((v0.c0)<=(v0.c0)))/(((t0.c32)IS('鱦dJsum'))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))<>(((((vt0.c0)OR(v0.c1)))OR(t0.c13))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((((v0.c0)<=(v0.c0)))/(((t0.c32)IS('鱦dJsum')))));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((CAST(v0.c0 AS NUMERIC))<>(((((vt0.c0)OR(v0.c1)))OR(t0.c13))))) ORDER BY ((((v0.c0)<=(v0.c0)))/(((t0.c32)IS('鱦dJsum'))));
SELECT COUNT(*) FROM v0, t0 WHERE ((((t0.c32)) BETWEEN ((((v0.c0)GLOB(v0.c1)))) AND ((t0.c13 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((t0.c32)) BETWEEN ((((v0.c0)GLOB(v0.c1)))) AND ((t0.c13 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((t0.c32)) BETWEEN ((((v0.c0)GLOB(v0.c1)))) AND ((t0.c13 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((t0.c32)) BETWEEN ((((v0.c0)GLOB(v0.c1)))) AND ((t0.c13 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((t0.c32)) BETWEEN ((((v0.c0)GLOB(v0.c1)))) AND ((t0.c13 COLLATE RTRIM))));
SELECT * FROM v0, t0 CROSS JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN ()) WHERE ((~ (((v0.c0)||(t0.c32)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0)||(t0.c32))))) IS TRUE)  as count FROM v0, t0 CROSS JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT * FROM v0, t0 CROSS JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN ()) WHERE ((~ (((v0.c0)||(t0.c32)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0)||(t0.c32))))) IS TRUE)  as count FROM v0, t0 CROSS JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT * FROM v0, t0 CROSS JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN ()) WHERE ((~ (((v0.c0)||(t0.c32)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c32 AS TEXT))AND(((t0.c32)||(t0.c32))))) ORDER BY t0.c32;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c32 AS TEXT))AND(((t0.c32)||(t0.c32))))) IS TRUE)  as count FROM t0 ORDER BY t0.c32);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c32 AS TEXT))AND(((t0.c32)||(t0.c32))))) ORDER BY t0.c32;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c32 AS TEXT))AND(((t0.c32)||(t0.c32))))) IS TRUE)  as count FROM t0 ORDER BY t0.c32);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c32 AS TEXT))AND(((t0.c32)||(t0.c32))))) ORDER BY t0.c32;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND ((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND (((vt0.c0 IN (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND (((vt0.c0 IN (vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND ((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND (((vt0.c0 IN (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND (((vt0.c0 IN (vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND ((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND (((vt0.c0 IN (vt0.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (CAST((~ (t0.c32)) AS INTEGER)) ORDER BY (vt0.c0 IN (CASE v0.c1  WHEN t0.c32 THEN t0.c32 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN t0.c13 ELSE 0.5374632609592838 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c32)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (vt0.c0 IN (CASE v0.c1  WHEN t0.c32 THEN t0.c32 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN t0.c13 ELSE 0.5374632609592838 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (CAST((~ (t0.c32)) AS INTEGER)) ORDER BY (vt0.c0 IN (CASE v0.c1  WHEN t0.c32 THEN t0.c32 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN t0.c13 ELSE 0.5374632609592838 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c32)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (vt0.c0 IN (CASE v0.c1  WHEN t0.c32 THEN t0.c32 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN t0.c13 ELSE 0.5374632609592838 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (CAST((~ (t0.c32)) AS INTEGER)) ORDER BY (vt0.c0 IN (CASE v0.c1  WHEN t0.c32 THEN t0.c32 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN t0.c13 ELSE 0.5374632609592838 END)) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((x'' COLLATE NOCASE)AND(((v0.c2)%(v0.c2)))))OR(NULLIF(DISTINCT v0.c2, v0.c0)))) ORDER BY v0.c1 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((x'' COLLATE NOCASE)AND(((v0.c2)%(v0.c2)))))OR(NULLIF(DISTINCT v0.c2, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY v0.c1 COLLATE NOCASE DESC);
SELECT ALL * FROM v0 WHERE (((((x'' COLLATE NOCASE)AND(((v0.c2)%(v0.c2)))))OR(NULLIF(DISTINCT v0.c2, v0.c0)))) ORDER BY v0.c1 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((x'' COLLATE NOCASE)AND(((v0.c2)%(v0.c2)))))OR(NULLIF(DISTINCT v0.c2, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY v0.c1 COLLATE NOCASE DESC);
SELECT ALL * FROM v0 WHERE (((((x'' COLLATE NOCASE)AND(((v0.c2)%(v0.c2)))))OR(NULLIF(DISTINCT v0.c2, v0.c0)))) ORDER BY v0.c1 COLLATE NOCASE DESC;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON -2117791987 WHERE (CASE CASE WHEN vt0.c0 THEN t0.c13 WHEN t0.c86 THEN t0.c32 WHEN vt0.c0 THEN t0.c86 END  WHEN t0.c32 COLLATE BINARY THEN CAST('' AS INTEGER) ELSE '1965419129' END) ORDER BY ((((((t0.c86)OR(t0.c86)))OR(vt0.c0)))>>(((t0.c32) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt0.c0 THEN t0.c13 WHEN t0.c86 THEN t0.c32 WHEN vt0.c0 THEN t0.c86 END  WHEN t0.c32 COLLATE BINARY THEN CAST('' AS INTEGER) ELSE '1965419129' END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON -2117791987 ORDER BY ((((((t0.c86)OR(t0.c86)))OR(vt0.c0)))>>(((t0.c32) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON -2117791987 WHERE (CASE CASE WHEN vt0.c0 THEN t0.c13 WHEN t0.c86 THEN t0.c32 WHEN vt0.c0 THEN t0.c86 END  WHEN t0.c32 COLLATE BINARY THEN CAST('' AS INTEGER) ELSE '1965419129' END) ORDER BY ((((((t0.c86)OR(t0.c86)))OR(vt0.c0)))>>(((t0.c32) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt0.c0 THEN t0.c13 WHEN t0.c86 THEN t0.c32 WHEN vt0.c0 THEN t0.c86 END  WHEN t0.c32 COLLATE BINARY THEN CAST('' AS INTEGER) ELSE '1965419129' END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON -2117791987 ORDER BY ((((((t0.c86)OR(t0.c86)))OR(vt0.c0)))>>(((t0.c32) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON -2117791987 WHERE (CASE CASE WHEN vt0.c0 THEN t0.c13 WHEN t0.c86 THEN t0.c32 WHEN vt0.c0 THEN t0.c86 END  WHEN t0.c32 COLLATE BINARY THEN CAST('' AS INTEGER) ELSE '1965419129' END) ORDER BY ((((((t0.c86)OR(t0.c86)))OR(vt0.c0)))>>(((t0.c32) NOTNULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (UPPER(DISTINCT ((vt0.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((vt0.c0)IS(vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (UPPER(DISTINCT ((vt0.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((vt0.c0)IS(vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (UPPER(DISTINCT ((vt0.c0)IS(vt0.c0))));
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST((t0.c13 IN (t0.c86)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c13 IN (t0.c86)) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST((t0.c13 IN (t0.c86)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c13 IN (t0.c86)) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST((t0.c13 IN (t0.c86)) AS BLOB));
SELECT ALL * FROM t0, vt0, v0 WHERE (((((v0.c1) ISNULL)) BETWEEN (((((((((vt0.c0)AND(v0.c2)))OR(t0.c32)))AND(t0.c32)))AND(v0.c0))) AND (RTRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) ISNULL)) BETWEEN (((((((((vt0.c0)AND(v0.c2)))OR(t0.c32)))AND(t0.c32)))AND(v0.c0))) AND (RTRIM(vt0.c0)))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE (((((v0.c1) ISNULL)) BETWEEN (((((((((vt0.c0)AND(v0.c2)))OR(t0.c32)))AND(t0.c32)))AND(v0.c0))) AND (RTRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) ISNULL)) BETWEEN (((((((((vt0.c0)AND(v0.c2)))OR(t0.c32)))AND(t0.c32)))AND(v0.c0))) AND (RTRIM(vt0.c0)))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE (((((v0.c1) ISNULL)) BETWEEN (((((((((vt0.c0)AND(v0.c2)))OR(t0.c32)))AND(t0.c32)))AND(v0.c0))) AND (RTRIM(vt0.c0))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON (((t0.c32) NOT BETWEEN (v0.c0) AND (v0.c2)) IN (NULL)) WHERE (((((((((((((((t0.c32)AND(v0.c2)))AND(t0.c86)))AND(v0.c1)))OR(t0.c13)))OR(v0.c2)))OR(t0.c13)))<=((t0.c13 IN ())))) ORDER BY ((0.7358454813760824)>=(((t0.c13)IS(-2.142873708E9))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((t0.c32)AND(v0.c2)))AND(t0.c86)))AND(v0.c1)))OR(t0.c13)))OR(v0.c2)))OR(t0.c13)))<=((t0.c13 IN ())))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (((t0.c32) NOT BETWEEN (v0.c0) AND (v0.c2)) IN (NULL)) ORDER BY ((0.7358454813760824)>=(((t0.c13)IS(-2.142873708E9))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON (((t0.c32) NOT BETWEEN (v0.c0) AND (v0.c2)) IN (NULL)) WHERE (((((((((((((((t0.c32)AND(v0.c2)))AND(t0.c86)))AND(v0.c1)))OR(t0.c13)))OR(v0.c2)))OR(t0.c13)))<=((t0.c13 IN ())))) ORDER BY ((0.7358454813760824)>=(((t0.c13)IS(-2.142873708E9))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((t0.c32)AND(v0.c2)))AND(t0.c86)))AND(v0.c1)))OR(t0.c13)))OR(v0.c2)))OR(t0.c13)))<=((t0.c13 IN ())))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (((t0.c32) NOT BETWEEN (v0.c0) AND (v0.c2)) IN (NULL)) ORDER BY ((0.7358454813760824)>=(((t0.c13)IS(-2.142873708E9))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON (((t0.c32) NOT BETWEEN (v0.c0) AND (v0.c2)) IN (NULL)) WHERE (((((((((((((((t0.c32)AND(v0.c2)))AND(t0.c86)))AND(v0.c1)))OR(t0.c13)))OR(v0.c2)))OR(t0.c13)))<=((t0.c13 IN ())))) ORDER BY ((0.7358454813760824)>=(((t0.c13)IS(-2.142873708E9))))  NULLS FIRST;
SELECT * FROM t0 WHERE (TRIM(DISTINCT (t0.c32 IN (0.11168653747515844, 0.6014282777476749)))) ORDER BY t0.c13;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (t0.c32 IN (0.11168653747515844, 0.6014282777476749)))) IS TRUE)  as count FROM t0 ORDER BY t0.c13);
SELECT * FROM t0 WHERE (TRIM(DISTINCT (t0.c32 IN (0.11168653747515844, 0.6014282777476749)))) ORDER BY t0.c13;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (t0.c32 IN (0.11168653747515844, 0.6014282777476749)))) IS TRUE)  as count FROM t0 ORDER BY t0.c13);
SELECT * FROM t0 WHERE (TRIM(DISTINCT (t0.c32 IN (0.11168653747515844, 0.6014282777476749)))) ORDER BY t0.c13;
SELECT ALL * FROM vt0, t0 WHERE (json_array(CASE WHEN t0.c32 THEN vt0.c0 WHEN '1908061304' THEN t0.c32 WHEN t0.c13 THEN t0.c32 END, CASE t0.c13  WHEN vt0.c0 THEN t0.c32 END));
SELECT SUM(count) FROM (SELECT ALL ((json_array(CASE WHEN t0.c32 THEN vt0.c0 WHEN '1908061304' THEN t0.c32 WHEN t0.c13 THEN t0.c32 END, CASE t0.c13  WHEN vt0.c0 THEN t0.c32 END)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (json_array(CASE WHEN t0.c32 THEN vt0.c0 WHEN '1908061304' THEN t0.c32 WHEN t0.c13 THEN t0.c32 END, CASE t0.c13  WHEN vt0.c0 THEN t0.c32 END));
SELECT SUM(count) FROM (SELECT ALL ((json_array(CASE WHEN t0.c32 THEN vt0.c0 WHEN '1908061304' THEN t0.c32 WHEN t0.c13 THEN t0.c32 END, CASE t0.c13  WHEN vt0.c0 THEN t0.c32 END)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM v0, t0, vt0 WHERE (NULL) ORDER BY t0.c86  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY t0.c86  NULLS LAST);
SELECT * FROM v0, t0, vt0 WHERE (NULL) ORDER BY t0.c86  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY t0.c86  NULLS LAST);
SELECT * FROM v0, t0, vt0 WHERE (NULL) ORDER BY t0.c86  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))GLOB(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))GLOB(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))GLOB(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))GLOB(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))GLOB(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((((((t0.c32)AND(vt0.c0)))OR(t0.c32))) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c86)))) WHERE (((((t0.c13) BETWEEN (vt0.c0) AND (vt0.c0)))<>(((((((((v0.c2)AND(t0.c86)))OR(v0.c2)))AND(vt0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c13) BETWEEN (vt0.c0) AND (vt0.c0)))!=(((((((((v0.c2)AND(t0.c86)))OR(v0.c2)))AND(vt0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((((((t0.c32)AND(vt0.c0)))OR(t0.c32))) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c86)))));
SELECT ALL * FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((((((t0.c32)AND(vt0.c0)))OR(t0.c32))) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c86)))) WHERE (((((t0.c13) BETWEEN (vt0.c0) AND (vt0.c0)))<>(((((((((v0.c2)AND(t0.c86)))OR(v0.c2)))AND(vt0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c13) BETWEEN (vt0.c0) AND (vt0.c0)))!=(((((((((v0.c2)AND(t0.c86)))OR(v0.c2)))AND(vt0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((((((t0.c32)AND(vt0.c0)))OR(t0.c32))) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c86)))));
SELECT ALL * FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((((((t0.c32)AND(vt0.c0)))OR(t0.c32))) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c86)))) WHERE (((((t0.c13) BETWEEN (vt0.c0) AND (vt0.c0)))<>(((((((((v0.c2)AND(t0.c86)))OR(v0.c2)))AND(vt0.c0)))OR(v0.c0)))));
SELECT ALL * FROM t0 NOT INDEXED WHERE (t0.c86) ORDER BY (((t0.c86))<((((((((((0.4530132108655389)OR(t0.c13)))AND(t0.c32)))OR(t0.c13)))OR(t0.c32)))));
SELECT SUM(count) FROM (SELECT ((t0.c86) IS TRUE)  as count FROM t0 ORDER BY (((t0.c86))<((((((((((0.4530132108655389)OR(t0.c13)))AND(t0.c32)))OR(t0.c13)))OR(t0.c32))))));
SELECT ALL * FROM t0 NOT INDEXED WHERE (t0.c86) ORDER BY (((t0.c86))<((((((((((0.4530132108655389)OR(t0.c13)))AND(t0.c32)))OR(t0.c13)))OR(t0.c32)))));
SELECT SUM(count) FROM (SELECT ((t0.c86) IS TRUE)  as count FROM t0 ORDER BY (((t0.c86))<((((((((((0.4530132108655389)OR(t0.c13)))AND(t0.c32)))OR(t0.c13)))OR(t0.c32))))));
SELECT ALL * FROM t0 NOT INDEXED WHERE (t0.c86) ORDER BY (((t0.c86))<((((((((((0.4530132108655389)OR(t0.c13)))AND(t0.c32)))OR(t0.c13)))OR(t0.c32)))));
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((t0.c86)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c86)))) AND ((((v0.c2) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c86)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c86)))) AND ((((v0.c2) ISNULL))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((t0.c86)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c86)))) AND ((((v0.c2) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c86)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c86)))) AND ((((v0.c2) ISNULL))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((t0.c86)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c86)))) AND ((((v0.c2) ISNULL)))));
SELECT ALL * FROM v0, vt0, t0 WHERE (((((v0.c0 COLLATE BINARY)AND(((t0.c13) NOT BETWEEN (t0.c86) AND (v0.c0)))))AND(t0.c86 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE BINARY)AND(((t0.c13) NOT BETWEEN (t0.c86) AND (v0.c0)))))AND(t0.c86 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (((((v0.c0 COLLATE BINARY)AND(((t0.c13) NOT BETWEEN (t0.c86) AND (v0.c0)))))AND(t0.c86 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE BINARY)AND(((t0.c13) NOT BETWEEN (t0.c86) AND (v0.c0)))))AND(t0.c86 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (((((v0.c0 COLLATE BINARY)AND(((t0.c13) NOT BETWEEN (t0.c86) AND (v0.c0)))))AND(t0.c86 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((~ (t0.c13)) COLLATE NOCASE) ORDER BY MIN((NOT (t0.c13)), ((t0.c13)AND(t0.c32)), t0.c32 COLLATE NOCASE, ((t0.c86) BETWEEN (t0.c86) AND (t0.c86)), t0.c86 COLLATE BINARY, t0.c86);
SELECT SUM(count) FROM (SELECT (((~ (t0.c13)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY MIN((NOT (t0.c13)), ((t0.c13)AND(t0.c32)), t0.c32 COLLATE NOCASE, ((t0.c86) BETWEEN (t0.c86) AND (t0.c86)), t0.c86 COLLATE BINARY, t0.c86));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((~ (t0.c13)) COLLATE NOCASE) ORDER BY MIN((NOT (t0.c13)), ((t0.c13)AND(t0.c32)), t0.c32 COLLATE NOCASE, ((t0.c86) BETWEEN (t0.c86) AND (t0.c86)), t0.c86 COLLATE BINARY, t0.c86);
SELECT SUM(count) FROM (SELECT (((~ (t0.c13)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY MIN((NOT (t0.c13)), ((t0.c13)AND(t0.c32)), t0.c32 COLLATE NOCASE, ((t0.c86) BETWEEN (t0.c86) AND (t0.c86)), t0.c86 COLLATE BINARY, t0.c86));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((~ (t0.c13)) COLLATE NOCASE) ORDER BY MIN((NOT (t0.c13)), ((t0.c13)AND(t0.c32)), t0.c32 COLLATE NOCASE, ((t0.c86) BETWEEN (t0.c86) AND (t0.c86)), t0.c86 COLLATE BINARY, t0.c86);
SELECT ALL * FROM vt0 WHERE (CASE WHEN COALESCE(vt0.c0, 0.051343446460442976, vt0.c0, vt0.c0) THEN (+ (vt0.c0)) WHEN x'a0a9cee3' THEN vt0.c0 WHEN (~ (vt0.c0)) THEN x'2d9e' WHEN vt0.c0 THEN (x'' IN (vt0.c0, vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) ELSE ((vt0.c0)=(vt0.c0)) END) ORDER BY (((('-142644998') BETWEEN (vt0.c0) AND (0.5813418268570406)))&(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN COALESCE(vt0.c0, 0.051343446460442976, vt0.c0, vt0.c0) THEN (+ (vt0.c0)) WHEN x'a0a9cee3' THEN vt0.c0 WHEN (~ (vt0.c0)) THEN x'2d9e' WHEN vt0.c0 THEN (x'' IN (vt0.c0, vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) ELSE ((vt0.c0)=(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((('-142644998') BETWEEN (vt0.c0) AND (0.5813418268570406)))&(vt0.c0)) ASC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN COALESCE(vt0.c0, 0.051343446460442976, vt0.c0, vt0.c0) THEN (+ (vt0.c0)) WHEN x'a0a9cee3' THEN vt0.c0 WHEN (~ (vt0.c0)) THEN x'2d9e' WHEN vt0.c0 THEN (x'' IN (vt0.c0, vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) ELSE ((vt0.c0)=(vt0.c0)) END) ORDER BY (((('-142644998') BETWEEN (vt0.c0) AND (0.5813418268570406)))&(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN COALESCE(vt0.c0, 0.051343446460442976, vt0.c0, vt0.c0) THEN (+ (vt0.c0)) WHEN x'a0a9cee3' THEN vt0.c0 WHEN (~ (vt0.c0)) THEN x'2d9e' WHEN vt0.c0 THEN (x'' IN (vt0.c0, vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) ELSE ((vt0.c0)=(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((('-142644998') BETWEEN (vt0.c0) AND (0.5813418268570406)))&(vt0.c0)) ASC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN COALESCE(vt0.c0, 0.051343446460442976, vt0.c0, vt0.c0) THEN (+ (vt0.c0)) WHEN x'a0a9cee3' THEN vt0.c0 WHEN (~ (vt0.c0)) THEN x'2d9e' WHEN vt0.c0 THEN (x'' IN (vt0.c0, vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) ELSE ((vt0.c0)=(vt0.c0)) END) ORDER BY (((('-142644998') BETWEEN (vt0.c0) AND (0.5813418268570406)))&(vt0.c0)) ASC;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (- (CAST(vt0.c0 AS NUMERIC))) WHERE (CAST(-0.0 AS BLOB)) ORDER BY (((CASE WHEN t0.c32 THEN vt0.c0 WHEN vt0.c0 THEN t0.c86 WHEN t0.c13 THEN 0.903015609469147 END, (+ ('991067480')), ((t0.c32) IS FALSE)))>=((((vt0.c0) NOTNULL), SQLITE_COMPILEOPTION_GET(0x8e6ff0f), CAST(t0.c86 AS INTEGER)))) ASC  NULLS FIRST, ((((t0.c13)IS(t0.c13)))IS(((((((((((((t0.c86)OR(t0.c13)))AND(t0.c86)))OR(t0.c13)))AND(vt0.c0)))AND(t0.c32)))AND(t0.c32))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(-0.0 AS BLOB)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (- (CAST(vt0.c0 AS NUMERIC))) ORDER BY (((CASE WHEN t0.c32 THEN vt0.c0 WHEN vt0.c0 THEN t0.c86 WHEN t0.c13 THEN 0.903015609469147 END, (+ ('991067480')), ((t0.c32) IS FALSE)))>=((((vt0.c0) NOTNULL), SQLITE_COMPILEOPTION_GET(0X8e6ff0f), CAST(t0.c86 AS INTEGER)))) ASC  NULLS FIRST, ((((t0.c13)IS(t0.c13)))IS(((((((((((((t0.c86)OR(t0.c13)))AND(t0.c86)))OR(t0.c13)))AND(vt0.c0)))AND(t0.c32)))AND(t0.c32))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (- (CAST(vt0.c0 AS NUMERIC))) WHERE (CAST(-0.0 AS BLOB)) ORDER BY (((CASE WHEN t0.c32 THEN vt0.c0 WHEN vt0.c0 THEN t0.c86 WHEN t0.c13 THEN 0.903015609469147 END, (+ ('991067480')), ((t0.c32) IS FALSE)))>=((((vt0.c0) NOTNULL), SQLITE_COMPILEOPTION_GET(0x8e6ff0f), CAST(t0.c86 AS INTEGER)))) ASC  NULLS FIRST, ((((t0.c13)IS(t0.c13)))IS(((((((((((((t0.c86)OR(t0.c13)))AND(t0.c86)))OR(t0.c13)))AND(vt0.c0)))AND(t0.c32)))AND(t0.c32))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(-0.0 AS BLOB)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (- (CAST(vt0.c0 AS NUMERIC))) ORDER BY (((CASE WHEN t0.c32 THEN vt0.c0 WHEN vt0.c0 THEN t0.c86 WHEN t0.c13 THEN 0.903015609469147 END, (+ ('991067480')), ((t0.c32) IS FALSE)))>=((((vt0.c0) NOTNULL), SQLITE_COMPILEOPTION_GET(0X8e6ff0f), CAST(t0.c86 AS INTEGER)))) ASC  NULLS FIRST, ((((t0.c13)IS(t0.c13)))IS(((((((((((((t0.c86)OR(t0.c13)))AND(t0.c86)))OR(t0.c13)))AND(vt0.c0)))AND(t0.c32)))AND(t0.c32))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (- (CAST(vt0.c0 AS NUMERIC))) WHERE (CAST(-0.0 AS BLOB)) ORDER BY (((CASE WHEN t0.c32 THEN vt0.c0 WHEN vt0.c0 THEN t0.c86 WHEN t0.c13 THEN 0.903015609469147 END, (+ ('991067480')), ((t0.c32) IS FALSE)))>=((((vt0.c0) NOTNULL), SQLITE_COMPILEOPTION_GET(0x8e6ff0f), CAST(t0.c86 AS INTEGER)))) ASC  NULLS FIRST, ((((t0.c13)IS(t0.c13)))IS(((((((((((((t0.c86)OR(t0.c13)))AND(t0.c86)))OR(t0.c13)))AND(vt0.c0)))AND(t0.c32)))AND(t0.c32))))  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN v0 ON ((((vt0.c0)-(v0.c1))) BETWEEN (NULL) AND (vt0.c0)) FULL OUTER JOIN vt0 ON ((t0.c86 COLLATE RTRIM) NOT BETWEEN (HEX(DISTINCT v0.c2)) AND (((v0.c2)/(t0.c86)))) WHERE (((CASE 0.8823229066107127  WHEN t0.c32 THEN v0.c1 WHEN t0.c86 THEN t0.c86 WHEN vt0.c0 THEN v0.c1 ELSE t0.c86 END) BETWEEN (CASE t0.c86  WHEN vt0.c0 THEN t0.c86 END) AND ((NOT (v0.c0))))) ORDER BY v0.c1, ((((v0.c1) BETWEEN (t0.c13) AND (v0.c1)))<((((t0.c13, t0.c86, t0.c86)) BETWEEN ((v0.c0, x'e39af78d', v0.c1)) AND ((t0.c13, v0.c1, t0.c86))))), ((((v0.c1 COLLATE RTRIM)OR(LOWER(DISTINCT '-622998187'))))OR((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE 0.8823229066107127  WHEN t0.c32 THEN v0.c1 WHEN t0.c86 THEN t0.c86 WHEN vt0.c0 THEN v0.c1 ELSE t0.c86 END) BETWEEN (CASE t0.c86  WHEN vt0.c0 THEN t0.c86 END) AND ((NOT (v0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((((vt0.c0)-(v0.c1))) BETWEEN (NULL) AND (vt0.c0)) FULL OUTER JOIN vt0 ON ((t0.c86 COLLATE RTRIM) NOT BETWEEN (HEX(DISTINCT v0.c2)) AND (((v0.c2)/(t0.c86)))) ORDER BY v0.c1, ((((v0.c1) BETWEEN (t0.c13) AND (v0.c1)))<((((t0.c13, t0.c86, t0.c86)) BETWEEN ((v0.c0, x'e39af78d', v0.c1)) AND ((t0.c13, v0.c1, t0.c86))))), ((((v0.c1 COLLATE RTRIM)OR(LOWER(DISTINCT '-622998187'))))OR((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c2)))))  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN v0 ON ((((vt0.c0)-(v0.c1))) BETWEEN (NULL) AND (vt0.c0)) FULL OUTER JOIN vt0 ON ((t0.c86 COLLATE RTRIM) NOT BETWEEN (HEX(DISTINCT v0.c2)) AND (((v0.c2)/(t0.c86)))) WHERE (((CASE 0.8823229066107127  WHEN t0.c32 THEN v0.c1 WHEN t0.c86 THEN t0.c86 WHEN vt0.c0 THEN v0.c1 ELSE t0.c86 END) BETWEEN (CASE t0.c86  WHEN vt0.c0 THEN t0.c86 END) AND ((NOT (v0.c0))))) ORDER BY v0.c1, ((((v0.c1) BETWEEN (t0.c13) AND (v0.c1)))<((((t0.c13, t0.c86, t0.c86)) BETWEEN ((v0.c0, x'e39af78d', v0.c1)) AND ((t0.c13, v0.c1, t0.c86))))), ((((v0.c1 COLLATE RTRIM)OR(LOWER(DISTINCT '-622998187'))))OR((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE 0.8823229066107127  WHEN t0.c32 THEN v0.c1 WHEN t0.c86 THEN t0.c86 WHEN vt0.c0 THEN v0.c1 ELSE t0.c86 END) BETWEEN (CASE t0.c86  WHEN vt0.c0 THEN t0.c86 END) AND ((NOT (v0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((((vt0.c0)-(v0.c1))) BETWEEN (NULL) AND (vt0.c0)) FULL OUTER JOIN vt0 ON ((t0.c86 COLLATE RTRIM) NOT BETWEEN (HEX(DISTINCT v0.c2)) AND (((v0.c2)/(t0.c86)))) ORDER BY v0.c1, ((((v0.c1) BETWEEN (t0.c13) AND (v0.c1)))<((((t0.c13, t0.c86, t0.c86)) BETWEEN ((v0.c0, x'e39af78d', v0.c1)) AND ((t0.c13, v0.c1, t0.c86))))), ((((v0.c1 COLLATE RTRIM)OR(LOWER(DISTINCT '-622998187'))))OR((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c2)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((NOT ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT ((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1, v0.c0, v0.c2)) NOT BETWEEN ((((v0.c2)==(v0.c1)), ((v0.c1) NOT NULL), v0.c2 COLLATE BINARY)) AND (((('0.19001240660417884') BETWEEN (v0.c1) AND (v0.c2)), ((v0.c2) BETWEEN (v0.c0) AND (v0.c2)), v0.c1)))) ORDER BY 'gK' DESC, (((v0.c0, '1', v0.c1)) NOT BETWEEN ((((v0.c0)IS(v0.c0)), ((((v0.c0)OR(v0.c0)))AND(v0.c1)), ((v0.c2)>(v0.c1)))) AND ((((((((((((((v0.c0)OR(v0.c2)))AND(v0.c1)))OR(0.45784314456570097)))AND(v0.c2)))OR(v0.c2)))AND(v0.c0)), x'', v0.c0 COLLATE BINARY)))  NULLS LAST, (((v0.c0) IS FALSE) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1, v0.c0, v0.c2)) NOT BETWEEN ((((v0.c2)==(v0.c1)), ((v0.c1) NOT NULL), v0.c2 COLLATE BINARY)) AND (((('0.19001240660417884') BETWEEN (v0.c1) AND (v0.c2)), ((v0.c2) BETWEEN (v0.c0) AND (v0.c2)), v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY 'gK' DESC, (((v0.c0, '1', v0.c1)) NOT BETWEEN ((((v0.c0)IS(v0.c0)), ((((v0.c0)OR(v0.c0)))AND(v0.c1)), ((v0.c2)>(v0.c1)))) AND ((((((((((((((v0.c0)OR(v0.c2)))AND(v0.c1)))OR(0.45784314456570097)))AND(v0.c2)))OR(v0.c2)))AND(v0.c0)), x'', v0.c0 COLLATE BINARY)))  NULLS LAST, (((v0.c0) IS FALSE) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1, v0.c0, v0.c2)) NOT BETWEEN ((((v0.c2)==(v0.c1)), ((v0.c1) NOT NULL), v0.c2 COLLATE BINARY)) AND (((('0.19001240660417884') BETWEEN (v0.c1) AND (v0.c2)), ((v0.c2) BETWEEN (v0.c0) AND (v0.c2)), v0.c1)))) ORDER BY 'gK' DESC, (((v0.c0, '1', v0.c1)) NOT BETWEEN ((((v0.c0)IS(v0.c0)), ((((v0.c0)OR(v0.c0)))AND(v0.c1)), ((v0.c2)>(v0.c1)))) AND ((((((((((((((v0.c0)OR(v0.c2)))AND(v0.c1)))OR(0.45784314456570097)))AND(v0.c2)))OR(v0.c2)))AND(v0.c0)), x'', v0.c0 COLLATE BINARY)))  NULLS LAST, (((v0.c0) IS FALSE) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1, v0.c0, v0.c2)) NOT BETWEEN ((((v0.c2)==(v0.c1)), ((v0.c1) NOT NULL), v0.c2 COLLATE BINARY)) AND (((('0.19001240660417884') BETWEEN (v0.c1) AND (v0.c2)), ((v0.c2) BETWEEN (v0.c0) AND (v0.c2)), v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY 'gK' DESC, (((v0.c0, '1', v0.c1)) NOT BETWEEN ((((v0.c0)IS(v0.c0)), ((((v0.c0)OR(v0.c0)))AND(v0.c1)), ((v0.c2)>(v0.c1)))) AND ((((((((((((((v0.c0)OR(v0.c2)))AND(v0.c1)))OR(0.45784314456570097)))AND(v0.c2)))OR(v0.c2)))AND(v0.c0)), x'', v0.c0 COLLATE BINARY)))  NULLS LAST, (((v0.c0) IS FALSE) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1, v0.c0, v0.c2)) NOT BETWEEN ((((v0.c2)==(v0.c1)), ((v0.c1) NOT NULL), v0.c2 COLLATE BINARY)) AND (((('0.19001240660417884') BETWEEN (v0.c1) AND (v0.c2)), ((v0.c2) BETWEEN (v0.c0) AND (v0.c2)), v0.c1)))) ORDER BY 'gK' DESC, (((v0.c0, '1', v0.c1)) NOT BETWEEN ((((v0.c0)IS(v0.c0)), ((((v0.c0)OR(v0.c0)))AND(v0.c1)), ((v0.c2)>(v0.c1)))) AND ((((((((((((((v0.c0)OR(v0.c2)))AND(v0.c1)))OR(0.45784314456570097)))AND(v0.c2)))OR(v0.c2)))AND(v0.c0)), x'', v0.c0 COLLATE BINARY)))  NULLS LAST, (((v0.c0) IS FALSE) IN ())  NULLS LAST;
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON ((((((((((t0.c32) IS TRUE))AND(v0.c0 COLLATE BINARY)))OR(CASE WHEN v0.c0 THEN v0.c2 WHEN '-861492504' THEN v0.c1 WHEN t0.c13 THEN v0.c1 END)))OR(((((((((v0.c2)AND(v0.c2)))OR(t0.c86)))AND(v0.c2)))OR(t0.c13)))))AND((NOT (t0.c32)))) WHERE (((v0.c1)%(NULLIF(t0.c32, t0.c32)))) ORDER BY (((((NULL)=(x'5b9f'))))>=((((v0.c1)OR(v0.c0))))), ((((t0.c32) ISNULL))-(v0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c1)%(NULLIF(t0.c32, t0.c32)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((((((((((t0.c32) IS TRUE))AND(v0.c0 COLLATE BINARY)))OR(CASE WHEN v0.c0 THEN v0.c2 WHEN '-861492504' THEN v0.c1 WHEN t0.c13 THEN v0.c1 END)))OR(((((((((v0.c2)AND(v0.c2)))OR(t0.c86)))AND(v0.c2)))OR(t0.c13)))))AND((NOT (t0.c32)))) ORDER BY (((((NULL)=(x'5b9f'))))>=((((v0.c1)OR(v0.c0))))), ((((t0.c32) ISNULL))-(v0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON ((((((((((t0.c32) IS TRUE))AND(v0.c0 COLLATE BINARY)))OR(CASE WHEN v0.c0 THEN v0.c2 WHEN '-861492504' THEN v0.c1 WHEN t0.c13 THEN v0.c1 END)))OR(((((((((v0.c2)AND(v0.c2)))OR(t0.c86)))AND(v0.c2)))OR(t0.c13)))))AND((NOT (t0.c32)))) WHERE (((v0.c1)%(NULLIF(t0.c32, t0.c32)))) ORDER BY (((((NULL)=(x'5b9f'))))>=((((v0.c1)OR(v0.c0))))), ((((t0.c32) ISNULL))-(v0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c1)%(NULLIF(t0.c32, t0.c32)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((((((((((t0.c32) IS TRUE))AND(v0.c0 COLLATE BINARY)))OR(CASE WHEN v0.c0 THEN v0.c2 WHEN '-861492504' THEN v0.c1 WHEN t0.c13 THEN v0.c1 END)))OR(((((((((v0.c2)AND(v0.c2)))OR(t0.c86)))AND(v0.c2)))OR(t0.c13)))))AND((NOT (t0.c32)))) ORDER BY (((((NULL)=(x'5b9f'))))>=((((v0.c1)OR(v0.c0))))), ((((t0.c32) ISNULL))-(v0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON ((((((((((t0.c32) IS TRUE))AND(v0.c0 COLLATE BINARY)))OR(CASE WHEN v0.c0 THEN v0.c2 WHEN '-861492504' THEN v0.c1 WHEN t0.c13 THEN v0.c1 END)))OR(((((((((v0.c2)AND(v0.c2)))OR(t0.c86)))AND(v0.c2)))OR(t0.c13)))))AND((NOT (t0.c32)))) WHERE (((v0.c1)%(NULLIF(t0.c32, t0.c32)))) ORDER BY (((((NULL)=(x'5b9f'))))>=((((v0.c1)OR(v0.c0))))), ((((t0.c32) ISNULL))-(v0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON 0.6172501476359717 WHERE (((((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1)))AND(v0.c1)))OR('1387112696')));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1)))AND(v0.c1)))OR('1387112696'))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON 0.6172501476359717);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON 0.6172501476359717 WHERE (((((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1)))AND(v0.c1)))OR('1387112696')));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1)))AND(v0.c1)))OR('1387112696'))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON 0.6172501476359717);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON 0.6172501476359717 WHERE (((((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1)))AND(v0.c1)))OR('1387112696')));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (vt0.c0);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c32)>>(t0.c86))))=((t0.c86 COLLATE BINARY))) LEFT OUTER JOIN v0 ON NULL WHERE (((((CASE WHEN x'' THEN v0.c0 ELSE v0.c2 END)AND(TRIM(DISTINCT v0.c1, v0.c2))))OR((((v0.c0, vt0.c0, t0.c13)) NOT BETWEEN ((vt0.c0, t0.c32, v0.c2)) AND ((v0.c1, v0.c1, t0.c86))))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN x'' THEN v0.c0 ELSE v0.c2 END)AND(TRIM(DISTINCT v0.c1, v0.c2))))OR((((v0.c0, vt0.c0, t0.c13)) NOT BETWEEN ((vt0.c0, t0.c32, v0.c2)) AND ((v0.c1, v0.c1, t0.c86)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c32)>>(t0.c86))))==((t0.c86 COLLATE BINARY))) LEFT OUTER JOIN v0 ON NULL);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c32)>>(t0.c86))))=((t0.c86 COLLATE BINARY))) LEFT OUTER JOIN v0 ON NULL WHERE (((((CASE WHEN x'' THEN v0.c0 ELSE v0.c2 END)AND(TRIM(DISTINCT v0.c1, v0.c2))))OR((((v0.c0, vt0.c0, t0.c13)) NOT BETWEEN ((vt0.c0, t0.c32, v0.c2)) AND ((v0.c1, v0.c1, t0.c86))))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN x'' THEN v0.c0 ELSE v0.c2 END)AND(TRIM(DISTINCT v0.c1, v0.c2))))OR((((v0.c0, vt0.c0, t0.c13)) NOT BETWEEN ((vt0.c0, t0.c32, v0.c2)) AND ((v0.c1, v0.c1, t0.c86)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c32)>>(t0.c86))))==((t0.c86 COLLATE BINARY))) LEFT OUTER JOIN v0 ON NULL);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c32)>>(t0.c86))))=((t0.c86 COLLATE BINARY))) LEFT OUTER JOIN v0 ON NULL WHERE (((((CASE WHEN x'' THEN v0.c0 ELSE v0.c2 END)AND(TRIM(DISTINCT v0.c1, v0.c2))))OR((((v0.c0, vt0.c0, t0.c13)) NOT BETWEEN ((vt0.c0, t0.c32, v0.c2)) AND ((v0.c1, v0.c1, t0.c86))))));
SELECT * FROM v0, t0 WHERE ((((v0.c1) IS TRUE) IN ())) ORDER BY (((((t0.c32)) NOT BETWEEN ((t0.c13)) AND ((''))))IS NOT(((NULL) NOT BETWEEN (v0.c1) AND (t0.c32)))), NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY (((((t0.c32)) NOT BETWEEN ((t0.c13)) AND ((''))))IS NOT(((NULL) NOT BETWEEN (v0.c1) AND (t0.c32)))), NULL DESC  NULLS FIRST);
SELECT * FROM v0, t0 WHERE ((((v0.c1) IS TRUE) IN ())) ORDER BY (((((t0.c32)) NOT BETWEEN ((t0.c13)) AND ((''))))IS NOT(((NULL) NOT BETWEEN (v0.c1) AND (t0.c32)))), NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY (((((t0.c32)) NOT BETWEEN ((t0.c13)) AND ((''))))IS NOT(((NULL) NOT BETWEEN (v0.c1) AND (t0.c32)))), NULL DESC  NULLS FIRST);
SELECT * FROM v0, t0 WHERE ((((v0.c1) IS TRUE) IN ())) ORDER BY (((((t0.c32)) NOT BETWEEN ((t0.c13)) AND ((''))))IS NOT(((NULL) NOT BETWEEN (v0.c1) AND (t0.c32)))), NULL DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((('576724070')OR(((NULL)||(vt0.c0)))))AND((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('576724070')OR(((NULL)||(vt0.c0)))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((('576724070')OR(((NULL)||(vt0.c0)))))AND((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('576724070')OR(((NULL)||(vt0.c0)))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((('576724070')OR(((NULL)||(vt0.c0)))))AND((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((NULL)|(t0.c13))) NOT BETWEEN (NULL COLLATE RTRIM) AND (((t0.c86) NOT BETWEEN (t0.c86) AND (t0.c13)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)|(t0.c13))) NOT BETWEEN (NULL COLLATE RTRIM) AND (((t0.c86) NOT BETWEEN (t0.c86) AND (t0.c13))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((NULL)|(t0.c13))) NOT BETWEEN (NULL COLLATE RTRIM) AND (((t0.c86) NOT BETWEEN (t0.c86) AND (t0.c13)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)|(t0.c13))) NOT BETWEEN (NULL COLLATE RTRIM) AND (((t0.c86) NOT BETWEEN (t0.c86) AND (t0.c13))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((NULL)|(t0.c13))) NOT BETWEEN (NULL COLLATE RTRIM) AND (((t0.c86) NOT BETWEEN (t0.c86) AND (t0.c13)))));
SELECT * FROM v0, t0 WHERE (((HEX(t0.c86)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((HEX(t0.c86)) ISNULL)) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((HEX(t0.c86)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((HEX(t0.c86)) ISNULL)) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((HEX(t0.c86)) ISNULL));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (t0.c32) ORDER BY (+ ((+ (''))))  NULLS LAST, (+ (((('', t0.c13, t0.c32))<>((v0.c2, v0.c1, v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c32) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (+ ((+ (''))))  NULLS LAST, (+ (((('', t0.c13, t0.c32))<>((v0.c2, v0.c1, v0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (t0.c32) ORDER BY (+ ((+ (''))))  NULLS LAST, (+ (((('', t0.c13, t0.c32))<>((v0.c2, v0.c1, v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c32) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (+ ((+ (''))))  NULLS LAST, (+ (((('', t0.c13, t0.c32))<>((v0.c2, v0.c1, v0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (t0.c32) ORDER BY (+ ((+ (''))))  NULLS LAST, (+ (((('', t0.c13, t0.c32))<>((v0.c2, v0.c1, v0.c0))))) ASC;
SELECT ALL COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON (((+ (v0.c1)))AND(((v0.c1)>(t0.c13)))) WHERE (t0.c86);
SELECT SUM(count) FROM (SELECT ((t0.c86) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON (((+ (v0.c1)))AND(((v0.c1)>(t0.c13)))));
SELECT ALL COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON (((+ (v0.c1)))AND(((v0.c1)>(t0.c13)))) WHERE (t0.c86);
SELECT SUM(count) FROM (SELECT ((t0.c86) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON (((+ (v0.c1)))AND(((v0.c1)>(t0.c13)))));
SELECT ALL COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON (((+ (v0.c1)))AND(((v0.c1)>(t0.c13)))) WHERE (t0.c86);
SELECT ALL * FROM v0, vt0, t0 WHERE (CAST(((vt0.c0)GLOB(v0.c0)) AS BLOB)) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t0.c86) AND (vt0.c0)) THEN (t0.c32 IN ()) WHEN (0.5330050378252547 IN ()) THEN ((((((((t0.c86)OR(x'b3d7')))AND(v0.c2)))AND('487157367')))AND(t0.c13)) WHEN t0.c32 COLLATE BINARY THEN (((x'd232')) BETWEEN ((v0.c2)) AND ((t0.c13))) ELSE LIKELIHOOD(DISTINCT t0.c13, 0.17157095557110358) END, ((CASE v0.c0  WHEN t0.c13 THEN t0.c13 END)==(v0.c2 COLLATE NOCASE))  NULLS FIRST, CASE (v0.c2 IN ())  WHEN COALESCE(v0.c0, t0.c86) THEN ('-1595108348' IN ()) END;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)GLOB(v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t0.c86) AND (vt0.c0)) THEN (t0.c32 IN ()) WHEN (0.5330050378252547 IN ()) THEN ((((((((t0.c86)OR(x'b3d7')))AND(v0.c2)))AND('487157367')))AND(t0.c13)) WHEN t0.c32 COLLATE BINARY THEN (((x'd232')) BETWEEN ((v0.c2)) AND ((t0.c13))) ELSE LIKELIHOOD(DISTINCT t0.c13, 0.17157095557110358) END, ((CASE v0.c0  WHEN t0.c13 THEN t0.c13 END)==(v0.c2 COLLATE NOCASE))  NULLS FIRST, CASE (v0.c2 IN ())  WHEN COALESCE(v0.c0, t0.c86) THEN ('-1595108348' IN ()) END);
SELECT ALL * FROM v0, vt0, t0 WHERE (CAST(((vt0.c0)GLOB(v0.c0)) AS BLOB)) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t0.c86) AND (vt0.c0)) THEN (t0.c32 IN ()) WHEN (0.5330050378252547 IN ()) THEN ((((((((t0.c86)OR(x'b3d7')))AND(v0.c2)))AND('487157367')))AND(t0.c13)) WHEN t0.c32 COLLATE BINARY THEN (((x'd232')) BETWEEN ((v0.c2)) AND ((t0.c13))) ELSE LIKELIHOOD(DISTINCT t0.c13, 0.17157095557110358) END, ((CASE v0.c0  WHEN t0.c13 THEN t0.c13 END)==(v0.c2 COLLATE NOCASE))  NULLS FIRST, CASE (v0.c2 IN ())  WHEN COALESCE(v0.c0, t0.c86) THEN ('-1595108348' IN ()) END;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)GLOB(v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t0.c86) AND (vt0.c0)) THEN (t0.c32 IN ()) WHEN (0.5330050378252547 IN ()) THEN ((((((((t0.c86)OR(x'b3d7')))AND(v0.c2)))AND('487157367')))AND(t0.c13)) WHEN t0.c32 COLLATE BINARY THEN (((x'd232')) BETWEEN ((v0.c2)) AND ((t0.c13))) ELSE LIKELIHOOD(DISTINCT t0.c13, 0.17157095557110358) END, ((CASE v0.c0  WHEN t0.c13 THEN t0.c13 END)==(v0.c2 COLLATE NOCASE))  NULLS FIRST, CASE (v0.c2 IN ())  WHEN COALESCE(v0.c0, t0.c86) THEN ('-1595108348' IN ()) END);
SELECT ALL * FROM v0, vt0, t0 WHERE (CAST(((vt0.c0)GLOB(v0.c0)) AS BLOB)) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t0.c86) AND (vt0.c0)) THEN (t0.c32 IN ()) WHEN (0.5330050378252547 IN ()) THEN ((((((((t0.c86)OR(x'b3d7')))AND(v0.c2)))AND('487157367')))AND(t0.c13)) WHEN t0.c32 COLLATE BINARY THEN (((x'd232')) BETWEEN ((v0.c2)) AND ((t0.c13))) ELSE LIKELIHOOD(DISTINCT t0.c13, 0.17157095557110358) END, ((CASE v0.c0  WHEN t0.c13 THEN t0.c13 END)==(v0.c2 COLLATE NOCASE))  NULLS FIRST, CASE (v0.c2 IN ())  WHEN COALESCE(v0.c0, t0.c86) THEN ('-1595108348' IN ()) END;
SELECT ALL * FROM v0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (x'');
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) IS TRUE) WHERE ((((((t0.c32)IS(t0.c13))))<((PRINTF(t0.c32)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c32)IS(t0.c13))))<((PRINTF(t0.c32))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) IS TRUE));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) IS TRUE) WHERE ((((((t0.c32)IS(t0.c13))))<((PRINTF(t0.c32)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c32)IS(t0.c13))))<((PRINTF(t0.c32))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) IS TRUE));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) IS TRUE) WHERE ((((((t0.c32)IS(t0.c13))))<((PRINTF(t0.c32)))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON ((((v0.c0) NOT NULL))&(v0.c2 COLLATE NOCASE)) FULL OUTER JOIN vt0 ON ((CAST(t0.c86 AS NUMERIC))OR(CAST(t0.c86 AS REAL))) WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (t0.c86)))IS(CAST(t0.c32 AS INTEGER)))) ORDER BY NULL COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (v0.c0) AND (t0.c86)))IS(CAST(t0.c32 AS INTEGER)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((((v0.c0) NOT NULL))&(v0.c2 COLLATE NOCASE)) FULL OUTER JOIN vt0 ON ((CAST(t0.c86 AS NUMERIC))OR(CAST(t0.c86 AS REAL))) ORDER BY NULL COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON ((((v0.c0) NOT NULL))&(v0.c2 COLLATE NOCASE)) FULL OUTER JOIN vt0 ON ((CAST(t0.c86 AS NUMERIC))OR(CAST(t0.c86 AS REAL))) WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (t0.c86)))IS(CAST(t0.c32 AS INTEGER)))) ORDER BY NULL COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (v0.c0) AND (t0.c86)))IS(CAST(t0.c32 AS INTEGER)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((((v0.c0) NOT NULL))&(v0.c2 COLLATE NOCASE)) FULL OUTER JOIN vt0 ON ((CAST(t0.c86 AS NUMERIC))OR(CAST(t0.c86 AS REAL))) ORDER BY NULL COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON ((((v0.c0) NOT NULL))&(v0.c2 COLLATE NOCASE)) FULL OUTER JOIN vt0 ON ((CAST(t0.c86 AS NUMERIC))OR(CAST(t0.c86 AS REAL))) WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (t0.c86)))IS(CAST(t0.c32 AS INTEGER)))) ORDER BY NULL COLLATE NOCASE DESC;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON CAST(((((((((((((vt0.c0)OR(t0.c86)))AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(t0.c13)) AS BLOB) FULL OUTER JOIN t0 ON SQLITE_VERSION() WHERE (CASE ((vt0.c0)LIKE(v0.c0))  WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0)LIKE(v0.c1)) END) ORDER BY ((((t0.c86 COLLATE NOCASE)OR(CAST(t0.c86 AS TEXT))))OR(((t0.c32)+(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)LIKE(v0.c0))  WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0)LIKE(v0.c1)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON CAST(((((((((((((vt0.c0)OR(t0.c86)))AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(t0.c13)) AS BLOB) FULL OUTER JOIN t0 ON SQLITE_VERSION() ORDER BY ((((t0.c86 COLLATE NOCASE)OR(CAST(t0.c86 AS TEXT))))OR(((t0.c32)+(v0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON CAST(((((((((((((vt0.c0)OR(t0.c86)))AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(t0.c13)) AS BLOB) FULL OUTER JOIN t0 ON SQLITE_VERSION() WHERE (CASE ((vt0.c0)LIKE(v0.c0))  WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0)LIKE(v0.c1)) END) ORDER BY ((((t0.c86 COLLATE NOCASE)OR(CAST(t0.c86 AS TEXT))))OR(((t0.c32)+(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)LIKE(v0.c0))  WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0)LIKE(v0.c1)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON CAST(((((((((((((vt0.c0)OR(t0.c86)))AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(t0.c13)) AS BLOB) FULL OUTER JOIN t0 ON SQLITE_VERSION() ORDER BY ((((t0.c86 COLLATE NOCASE)OR(CAST(t0.c86 AS TEXT))))OR(((t0.c32)+(v0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (0xffffffffd007bd66);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffd007bd66) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0xffffffffd007bd66);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffd007bd66) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0xffffffffd007bd66);
SELECT ALL * FROM v0 WHERE (CASE (((v0.c2, v0.c2, v0.c1)) BETWEEN ((v0.c1, v0.c0, v0.c0)) AND ((v0.c1, 47029350, v0.c2)))  WHEN ((((((((v0.c2)AND(v0.c0)))AND(v0.c1)))OR(v0.c0)))AND(v0.c1)) THEN v0.c2 WHEN (0.028802551596558867 IN ()) THEN (v0.c0 IN (v0.c0, v0.c2)) WHEN (~ (v0.c2)) THEN TIME(x'3a6c', v0.c1, v0.c1) END) ORDER BY 0.17546348590575855;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((v0.c2, v0.c2, v0.c1)) BETWEEN ((v0.c1, v0.c0, v0.c0)) AND ((v0.c1, 47029350, v0.c2)))  WHEN ((((((((v0.c2)AND(v0.c0)))AND(v0.c1)))OR(v0.c0)))AND(v0.c1)) THEN v0.c2 WHEN (0.028802551596558867 IN ()) THEN (v0.c0 IN (v0.c0, v0.c2)) WHEN (~ (v0.c2)) THEN TIME(x'3a6c', v0.c1, v0.c1) END) IS TRUE)  as count FROM v0 ORDER BY 0.17546348590575855);
SELECT ALL * FROM v0 WHERE (CASE (((v0.c2, v0.c2, v0.c1)) BETWEEN ((v0.c1, v0.c0, v0.c0)) AND ((v0.c1, 47029350, v0.c2)))  WHEN ((((((((v0.c2)AND(v0.c0)))AND(v0.c1)))OR(v0.c0)))AND(v0.c1)) THEN v0.c2 WHEN (0.028802551596558867 IN ()) THEN (v0.c0 IN (v0.c0, v0.c2)) WHEN (~ (v0.c2)) THEN TIME(x'3a6c', v0.c1, v0.c1) END) ORDER BY 0.17546348590575855;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((v0.c2, v0.c2, v0.c1)) BETWEEN ((v0.c1, v0.c0, v0.c0)) AND ((v0.c1, 47029350, v0.c2)))  WHEN ((((((((v0.c2)AND(v0.c0)))AND(v0.c1)))OR(v0.c0)))AND(v0.c1)) THEN v0.c2 WHEN (0.028802551596558867 IN ()) THEN (v0.c0 IN (v0.c0, v0.c2)) WHEN (~ (v0.c2)) THEN TIME(x'3a6c', v0.c1, v0.c1) END) IS TRUE)  as count FROM v0 ORDER BY 0.17546348590575855);
SELECT ALL * FROM v0 WHERE (CASE (((v0.c2, v0.c2, v0.c1)) BETWEEN ((v0.c1, v0.c0, v0.c0)) AND ((v0.c1, 47029350, v0.c2)))  WHEN ((((((((v0.c2)AND(v0.c0)))AND(v0.c1)))OR(v0.c0)))AND(v0.c1)) THEN v0.c2 WHEN (0.028802551596558867 IN ()) THEN (v0.c0 IN (v0.c0, v0.c2)) WHEN (~ (v0.c2)) THEN TIME(x'3a6c', v0.c1, v0.c1) END) ORDER BY 0.17546348590575855;
SELECT ALL COUNT(*) FROM v0 WHERE ((CASE WHEN x'' THEN v0.c1 END IN ())) ORDER BY ((((v0.c0) NOTNULL))>(LTRIM(v0.c2, v0.c2))), (~ (((x'')||(v0.c1)))) DESC  NULLS LAST, (((v0.c2)) NOT BETWEEN ((CASE WHEN v0.c2 THEN v0.c0 ELSE NULL END)) AND ((SQLITE_COMPILEOPTION_GET(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN x'' THEN v0.c1 END IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOTNULL))>(LTRIM(v0.c2, v0.c2))), (~ (((x'')||(v0.c1)))) DESC  NULLS LAST, (((v0.c2)) NOT BETWEEN ((CASE WHEN v0.c2 THEN v0.c0 ELSE NULL END)) AND ((SQLITE_COMPILEOPTION_GET(v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((CASE WHEN x'' THEN v0.c1 END IN ())) ORDER BY ((((v0.c0) NOTNULL))>(LTRIM(v0.c2, v0.c2))), (~ (((x'')||(v0.c1)))) DESC  NULLS LAST, (((v0.c2)) NOT BETWEEN ((CASE WHEN v0.c2 THEN v0.c0 ELSE NULL END)) AND ((SQLITE_COMPILEOPTION_GET(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN x'' THEN v0.c1 END IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOTNULL))>(LTRIM(v0.c2, v0.c2))), (~ (((x'')||(v0.c1)))) DESC  NULLS LAST, (((v0.c2)) NOT BETWEEN ((CASE WHEN v0.c2 THEN v0.c0 ELSE NULL END)) AND ((SQLITE_COMPILEOPTION_GET(v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((CASE WHEN x'' THEN v0.c1 END IN ())) ORDER BY ((((v0.c0) NOTNULL))>(LTRIM(v0.c2, v0.c2))), (~ (((x'')||(v0.c1)))) DESC  NULLS LAST, (((v0.c2)) NOT BETWEEN ((CASE WHEN v0.c2 THEN v0.c0 ELSE NULL END)) AND ((SQLITE_COMPILEOPTION_GET(v0.c0)))) ASC;
SELECT ALL * FROM t0 WHERE (((((t0.c86)<<(t0.c86))) NOT BETWEEN ('IH)8JK') AND ((((t0.c13))<=((t0.c86))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c86)<<(t0.c86))) NOT BETWEEN ('IH)8JK') AND ((((t0.c13))<=((t0.c86)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c86)<<(t0.c86))) NOT BETWEEN ('IH)8JK') AND ((((t0.c13))<=((t0.c86))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c86)<<(t0.c86))) NOT BETWEEN ('IH)8JK') AND ((((t0.c13))<=((t0.c86)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c86)<<(t0.c86))) NOT BETWEEN ('IH)8JK') AND ((((t0.c13))<=((t0.c86))))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c32)) NOT BETWEEN ((((t0.c32)*(t0.c86)))) AND ((TRIM(t0.c86, t0.c13))))) ORDER BY NULL DESC, (NOT (-740815771));
SELECT SUM(count) FROM (SELECT (((((t0.c32)) NOT BETWEEN ((((t0.c32)*(t0.c86)))) AND ((TRIM(t0.c86, t0.c13))))) IS TRUE)  as count FROM t0 ORDER BY NULL DESC, (NOT (-740815771)));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c32)) NOT BETWEEN ((((t0.c32)*(t0.c86)))) AND ((TRIM(t0.c86, t0.c13))))) ORDER BY NULL DESC, (NOT (-740815771));
SELECT SUM(count) FROM (SELECT (((((t0.c32)) NOT BETWEEN ((((t0.c32)*(t0.c86)))) AND ((TRIM(t0.c86, t0.c13))))) IS TRUE)  as count FROM t0 ORDER BY NULL DESC, (NOT (-740815771)));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c32)) NOT BETWEEN ((((t0.c32)*(t0.c86)))) AND ((TRIM(t0.c86, t0.c13))))) ORDER BY NULL DESC, (NOT (-740815771));
SELECT COUNT(*) FROM v0 WHERE ((~ ((- (v0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ ((- (v0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ ((- (v0.c2)))));
SELECT * FROM t0 WHERE (t0.c13) ORDER BY json_object(t0.c32, t0.c32, '2117550055', t0.c86) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c13) IS TRUE)  as count FROM t0 ORDER BY json_object(t0.c32, t0.c32, '2117550055', t0.c86) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM t0 WHERE (t0.c13) ORDER BY json_object(t0.c32, t0.c32, '2117550055', t0.c86) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c13) IS TRUE)  as count FROM t0 ORDER BY json_object(t0.c32, t0.c32, '2117550055', t0.c86) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)||(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)||(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)||(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)||(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)||(vt0.c0)) IN ()));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((v0.c1, v0.c2, t0.c13)) NOT BETWEEN ((rtreenode(t0.c13, t0.c86), ABS(t0.c32), v0.c2)) AND (((((t0.c13))>((v0.c2))), v0.c2 COLLATE NOCASE, ((v0.c0) IS TRUE)))) WHERE (((((v0.c2)+(t0.c13))) NOT NULL)) ORDER BY (((((((((((((((v0.c2))<>(('1107232002'))))AND((~ (t0.c13)))))AND(v0.c0)))OR(CAST(v0.c2 AS BLOB))))OR(CAST(v0.c1 AS TEXT))))OR(466063211)))OR(((t0.c13)%(t0.c32)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)+(t0.c13))) NOT NULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((v0.c1, v0.c2, t0.c13)) NOT BETWEEN ((rtreenode(t0.c13, t0.c86), ABS(t0.c32), v0.c2)) AND (((((t0.c13))>((v0.c2))), v0.c2 COLLATE NOCASE, ((v0.c0) IS TRUE)))) ORDER BY (((((((((((((((v0.c2))<>(('1107232002'))))AND((~ (t0.c13)))))AND(v0.c0)))OR(CAST(v0.c2 AS BLOB))))OR(CAST(v0.c1 AS TEXT))))OR(466063211)))OR(((t0.c13)%(t0.c32)))) DESC);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((v0.c1, v0.c2, t0.c13)) NOT BETWEEN ((rtreenode(t0.c13, t0.c86), ABS(t0.c32), v0.c2)) AND (((((t0.c13))>((v0.c2))), v0.c2 COLLATE NOCASE, ((v0.c0) IS TRUE)))) WHERE (((((v0.c2)+(t0.c13))) NOT NULL)) ORDER BY (((((((((((((((v0.c2))<>(('1107232002'))))AND((~ (t0.c13)))))AND(v0.c0)))OR(CAST(v0.c2 AS BLOB))))OR(CAST(v0.c1 AS TEXT))))OR(466063211)))OR(((t0.c13)%(t0.c32)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)+(t0.c13))) NOT NULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((v0.c1, v0.c2, t0.c13)) NOT BETWEEN ((rtreenode(t0.c13, t0.c86), ABS(t0.c32), v0.c2)) AND (((((t0.c13))>((v0.c2))), v0.c2 COLLATE NOCASE, ((v0.c0) IS TRUE)))) ORDER BY (((((((((((((((v0.c2))<>(('1107232002'))))AND((~ (t0.c13)))))AND(v0.c0)))OR(CAST(v0.c2 AS BLOB))))OR(CAST(v0.c1 AS TEXT))))OR(466063211)))OR(((t0.c13)%(t0.c32)))) DESC);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((v0.c1, v0.c2, t0.c13)) NOT BETWEEN ((rtreenode(t0.c13, t0.c86), ABS(t0.c32), v0.c2)) AND (((((t0.c13))>((v0.c2))), v0.c2 COLLATE NOCASE, ((v0.c0) IS TRUE)))) WHERE (((((v0.c2)+(t0.c13))) NOT NULL)) ORDER BY (((((((((((((((v0.c2))<>(('1107232002'))))AND((~ (t0.c13)))))AND(v0.c0)))OR(CAST(v0.c2 AS BLOB))))OR(CAST(v0.c1 AS TEXT))))OR(466063211)))OR(((t0.c13)%(t0.c32)))) DESC;
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CAST(((((x'')AND(t0.c32)))AND(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((x'')AND(t0.c32)))AND(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CAST(((((x'')AND(t0.c32)))AND(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((x'')AND(t0.c32)))AND(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CAST(((((x'')AND(t0.c32)))AND(vt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN v0 ON x'' WHERE (((CASE 0.7729358266156183  WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN t0.c86 THEN NULL ELSE vt0.c0 END)+(0.40441571891767036)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.7729358266156183  WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN t0.c86 THEN NULL ELSE vt0.c0 END)+(0.40441571891767036))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN v0 ON x'');
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN v0 ON x'' WHERE (((CASE 0.7729358266156183  WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN t0.c86 THEN NULL ELSE vt0.c0 END)+(0.40441571891767036)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.7729358266156183  WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN t0.c86 THEN NULL ELSE vt0.c0 END)+(0.40441571891767036))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN v0 ON x'');
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN v0 ON x'' WHERE (((CASE 0.7729358266156183  WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN t0.c86 THEN NULL ELSE vt0.c0 END)+(0.40441571891767036)));
SELECT ALL * FROM v0 WHERE (0.25407012559675823);
SELECT SUM(count) FROM (SELECT ((0.25407012559675823) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.25407012559675823);
SELECT SUM(count) FROM (SELECT ((0.25407012559675823) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.25407012559675823);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (+ (t0.c13 COLLATE NOCASE)) WHERE (x'' COLLATE BINARY COLLATE NOCASE) ORDER BY (((((t0.c13)%(vt0.c0)), CAST(t0.c86 AS INTEGER), ((t0.c13)<(t0.c13))))>=(((((t0.c86, t0.c13, t0.c13)) BETWEEN (('*E', t0.c13, t0.c32)) AND ((t0.c86, t0.c86, vt0.c0))), 'FALSE' COLLATE RTRIM, CAST(vt0.c0 AS REAL))))  NULLS LAST, ((t0.c32)IS(t0.c13)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (+ (t0.c13 COLLATE NOCASE)) ORDER BY (((((t0.c13)%(vt0.c0)), CAST(t0.c86 AS INTEGER), ((t0.c13)<(t0.c13))))>=(((((t0.c86, t0.c13, t0.c13)) BETWEEN (('*E', t0.c13, t0.c32)) AND ((t0.c86, t0.c86, vt0.c0))), 'FALSE' COLLATE RTRIM, CAST(vt0.c0 AS REAL))))  NULLS LAST, ((t0.c32)IS(t0.c13)) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (+ (t0.c13 COLLATE NOCASE)) WHERE (x'' COLLATE BINARY COLLATE NOCASE) ORDER BY (((((t0.c13)%(vt0.c0)), CAST(t0.c86 AS INTEGER), ((t0.c13)<(t0.c13))))>=(((((t0.c86, t0.c13, t0.c13)) BETWEEN (('*E', t0.c13, t0.c32)) AND ((t0.c86, t0.c86, vt0.c0))), 'FALSE' COLLATE RTRIM, CAST(vt0.c0 AS REAL))))  NULLS LAST, ((t0.c32)IS(t0.c13)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (+ (t0.c13 COLLATE NOCASE)) ORDER BY (((((t0.c13)%(vt0.c0)), CAST(t0.c86 AS INTEGER), ((t0.c13)<(t0.c13))))>=(((((t0.c86, t0.c13, t0.c13)) BETWEEN (('*E', t0.c13, t0.c32)) AND ((t0.c86, t0.c86, vt0.c0))), 'FALSE' COLLATE RTRIM, CAST(vt0.c0 AS REAL))))  NULLS LAST, ((t0.c32)IS(t0.c13)) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (+ (t0.c13 COLLATE NOCASE)) WHERE (x'' COLLATE BINARY COLLATE NOCASE) ORDER BY (((((t0.c13)%(vt0.c0)), CAST(t0.c86 AS INTEGER), ((t0.c13)<(t0.c13))))>=(((((t0.c86, t0.c13, t0.c13)) BETWEEN (('*E', t0.c13, t0.c32)) AND ((t0.c86, t0.c86, vt0.c0))), 'FALSE' COLLATE RTRIM, CAST(vt0.c0 AS REAL))))  NULLS LAST, ((t0.c32)IS(t0.c13)) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN v0 ON ((((v0.c2) BETWEEN (vt0.c0) AND (v0.c1)))*(((x'') NOT BETWEEN (t0.c86) AND (vt0.c0)))) CROSS JOIN vt0 ON vt0.c0 WHERE (CHANGES()) ORDER BY ((((((t0.c86) BETWEEN (NULL) AND (v0.c2)))AND(((v0.c1)>=(t0.c13)))))AND(v0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((((v0.c2) BETWEEN (vt0.c0) AND (v0.c1)))*(((x'') NOT BETWEEN (t0.c86) AND (vt0.c0)))) CROSS JOIN vt0 ON vt0.c0 ORDER BY ((((((t0.c86) BETWEEN (NULL) AND (v0.c2)))AND(((v0.c1)>=(t0.c13)))))AND(v0.c1)) ASC);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN v0 ON ((((v0.c2) BETWEEN (vt0.c0) AND (v0.c1)))*(((x'') NOT BETWEEN (t0.c86) AND (vt0.c0)))) CROSS JOIN vt0 ON vt0.c0 WHERE (CHANGES()) ORDER BY ((((((t0.c86) BETWEEN (NULL) AND (v0.c2)))AND(((v0.c1)>=(t0.c13)))))AND(v0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((((v0.c2) BETWEEN (vt0.c0) AND (v0.c1)))*(((x'') NOT BETWEEN (t0.c86) AND (vt0.c0)))) CROSS JOIN vt0 ON vt0.c0 ORDER BY ((((((t0.c86) BETWEEN (NULL) AND (v0.c2)))AND(((v0.c1)>=(t0.c13)))))AND(v0.c1)) ASC);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN v0 ON ((((v0.c2) BETWEEN (vt0.c0) AND (v0.c1)))*(((x'') NOT BETWEEN (t0.c86) AND (vt0.c0)))) CROSS JOIN vt0 ON vt0.c0 WHERE (CHANGES()) ORDER BY ((((((t0.c86) BETWEEN (NULL) AND (v0.c2)))AND(((v0.c1)>=(t0.c13)))))AND(v0.c1)) ASC;
SELECT ALL * FROM t0 WHERE (x'd68f') ORDER BY ((((0.051843658690268524)||(t0.c86)))|(t0.c32 COLLATE BINARY)) ASC  NULLS FIRST, t0.c32 DESC  NULLS LAST, (((t0.c86, t0.c86, t0.c13)) BETWEEN ((NULL, t0.c13, t0.c13)) AND ((t0.c13, t0.c86, t0.c32))) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'd68f') IS TRUE)  as count FROM t0 ORDER BY ((((0.051843658690268524)||(t0.c86)))|(t0.c32 COLLATE BINARY)) ASC  NULLS FIRST, t0.c32 DESC  NULLS LAST, (((t0.c86, t0.c86, t0.c13)) BETWEEN ((NULL, t0.c13, t0.c13)) AND ((t0.c13, t0.c86, t0.c32))) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (x'd68f') ORDER BY ((((0.051843658690268524)||(t0.c86)))|(t0.c32 COLLATE BINARY)) ASC  NULLS FIRST, t0.c32 DESC  NULLS LAST, (((t0.c86, t0.c86, t0.c13)) BETWEEN ((NULL, t0.c13, t0.c13)) AND ((t0.c13, t0.c86, t0.c32))) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'd68f') IS TRUE)  as count FROM t0 ORDER BY ((((0.051843658690268524)||(t0.c86)))|(t0.c32 COLLATE BINARY)) ASC  NULLS FIRST, t0.c32 DESC  NULLS LAST, (((t0.c86, t0.c86, t0.c13)) BETWEEN ((NULL, t0.c13, t0.c13)) AND ((t0.c13, t0.c86, t0.c32))) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (x'd68f') ORDER BY ((((0.051843658690268524)||(t0.c86)))|(t0.c32 COLLATE BINARY)) ASC  NULLS FIRST, t0.c32 DESC  NULLS LAST, (((t0.c86, t0.c86, t0.c13)) BETWEEN ((NULL, t0.c13, t0.c13)) AND ((t0.c13, t0.c86, t0.c32))) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c13, x'', t0.c86)) BETWEEN ((t0.c13 COLLATE RTRIM, ((vt0.c0) NOT NULL), (~ (t0.c86)))) AND ((t0.c13 COLLATE NOCASE, CAST(vt0.c0 AS BLOB), vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c13, x'', t0.c86)) BETWEEN ((t0.c13 COLLATE RTRIM, ((vt0.c0) NOT NULL), (~ (t0.c86)))) AND ((t0.c13 COLLATE NOCASE, CAST(vt0.c0 AS BLOB), vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c13, x'', t0.c86)) BETWEEN ((t0.c13 COLLATE RTRIM, ((vt0.c0) NOT NULL), (~ (t0.c86)))) AND ((t0.c13 COLLATE NOCASE, CAST(vt0.c0 AS BLOB), vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c13, x'', t0.c86)) BETWEEN ((t0.c13 COLLATE RTRIM, ((vt0.c0) NOT NULL), (~ (t0.c86)))) AND ((t0.c13 COLLATE NOCASE, CAST(vt0.c0 AS BLOB), vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c13, x'', t0.c86)) BETWEEN ((t0.c13 COLLATE RTRIM, ((vt0.c0) NOT NULL), (~ (t0.c86)))) AND ((t0.c13 COLLATE NOCASE, CAST(vt0.c0 AS BLOB), vt0.c0))));
SELECT * FROM t0, v0 WHERE ((DATE('', v0.c1, v0.c0, v0.c0, v0.c1) IN (((((v0.c1)AND(t0.c32)))OR(v0.c0)), (((t0.c86))>=((v0.c1)))))) ORDER BY CAST(NULL AS TEXT);
SELECT SUM(count) FROM (SELECT (((DATE('', v0.c1, v0.c0, v0.c0, v0.c1) IN (((((v0.c1)AND(t0.c32)))OR(v0.c0)), (((t0.c86))>=((v0.c1)))))) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(NULL AS TEXT));
SELECT * FROM t0, v0 WHERE ((DATE('', v0.c1, v0.c0, v0.c0, v0.c1) IN (((((v0.c1)AND(t0.c32)))OR(v0.c0)), (((t0.c86))>=((v0.c1)))))) ORDER BY CAST(NULL AS TEXT);
SELECT SUM(count) FROM (SELECT (((DATE('', v0.c1, v0.c0, v0.c0, v0.c1) IN (((((v0.c1)AND(t0.c32)))OR(v0.c0)), (((t0.c86))>=((v0.c1)))))) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(NULL AS TEXT));
SELECT * FROM t0, v0 WHERE ((DATE('', v0.c1, v0.c0, v0.c0, v0.c1) IN (((((v0.c1)AND(t0.c32)))OR(v0.c0)), (((t0.c86))>=((v0.c1)))))) ORDER BY CAST(NULL AS TEXT);
SELECT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))))<=(v0.c0))) ORDER BY (load_extension(v0.c2, v0.c1) IN ())  NULLS FIRST, 0.9605563324718792  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))))<=(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY (load_extension(v0.c2, v0.c1) IN ())  NULLS FIRST, 0.9605563324718792  NULLS LAST);
SELECT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))))<=(v0.c0))) ORDER BY (load_extension(v0.c2, v0.c1) IN ())  NULLS FIRST, 0.9605563324718792  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))))<=(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY (load_extension(v0.c2, v0.c1) IN ())  NULLS FIRST, 0.9605563324718792  NULLS LAST);
SELECT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))))<=(v0.c0))) ORDER BY (load_extension(v0.c2, v0.c1) IN ())  NULLS FIRST, 0.9605563324718792  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (t0.c13) ORDER BY ((json(v0.c2)) BETWEEN (CASE WHEN t0.c86 THEN v0.c2 WHEN t0.c32 THEN t0.c13 WHEN v0.c0 THEN v0.c2 END) AND (((v0.c0) NOTNULL))) ASC  NULLS FIRST, TRIM(DISTINCT ((vt0.c0) BETWEEN (v0.c1) AND (t0.c86)), vt0.c0), CAST(0x1d096e77 AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c13) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((json(v0.c2)) BETWEEN (CASE WHEN t0.c86 THEN v0.c2 WHEN t0.c32 THEN t0.c13 WHEN v0.c0 THEN v0.c2 END) AND (((v0.c0) NOTNULL))) ASC  NULLS FIRST, TRIM(DISTINCT ((vt0.c0) BETWEEN (v0.c1) AND (t0.c86)), vt0.c0), CAST(0X1d096e77 AS TEXT) DESC);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (t0.c13) ORDER BY ((json(v0.c2)) BETWEEN (CASE WHEN t0.c86 THEN v0.c2 WHEN t0.c32 THEN t0.c13 WHEN v0.c0 THEN v0.c2 END) AND (((v0.c0) NOTNULL))) ASC  NULLS FIRST, TRIM(DISTINCT ((vt0.c0) BETWEEN (v0.c1) AND (t0.c86)), vt0.c0), CAST(0x1d096e77 AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c13) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((json(v0.c2)) BETWEEN (CASE WHEN t0.c86 THEN v0.c2 WHEN t0.c32 THEN t0.c13 WHEN v0.c0 THEN v0.c2 END) AND (((v0.c0) NOTNULL))) ASC  NULLS FIRST, TRIM(DISTINCT ((vt0.c0) BETWEEN (v0.c1) AND (t0.c86)), vt0.c0), CAST(0X1d096e77 AS TEXT) DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM t0 NATURAL JOIN v0 WHERE ((- (UNLIKELY(v0.c0)))) ORDER BY (((((+ (t0.c13)))OR(v0.c1 COLLATE NOCASE)))AND((((t0.c13)) NOT BETWEEN ((t0.c32)) AND ((v0.c1)))))  NULLS FIRST, (((NULL))==((CASE v0.c2  WHEN v0.c2 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (UNLIKELY(v0.c0)))) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY (((((+ (t0.c13)))OR(v0.c1 COLLATE NOCASE)))AND((((t0.c13)) NOT BETWEEN ((t0.c32)) AND ((v0.c1)))))  NULLS FIRST, (((NULL))=((CASE v0.c2  WHEN v0.c2 THEN v0.c0 END))));
SELECT COUNT(*) FROM t0 NATURAL JOIN v0 WHERE ((- (UNLIKELY(v0.c0)))) ORDER BY (((((+ (t0.c13)))OR(v0.c1 COLLATE NOCASE)))AND((((t0.c13)) NOT BETWEEN ((t0.c32)) AND ((v0.c1)))))  NULLS FIRST, (((NULL))==((CASE v0.c2  WHEN v0.c2 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (UNLIKELY(v0.c0)))) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY (((((+ (t0.c13)))OR(v0.c1 COLLATE NOCASE)))AND((((t0.c13)) NOT BETWEEN ((t0.c32)) AND ((v0.c1)))))  NULLS FIRST, (((NULL))=((CASE v0.c2  WHEN v0.c2 THEN v0.c0 END))));
SELECT COUNT(*) FROM t0 NATURAL JOIN v0 WHERE ((- (UNLIKELY(v0.c0)))) ORDER BY (((((+ (t0.c13)))OR(v0.c1 COLLATE NOCASE)))AND((((t0.c13)) NOT BETWEEN ((t0.c32)) AND ((v0.c1)))))  NULLS FIRST, (((NULL))==((CASE v0.c2  WHEN v0.c2 THEN v0.c0 END)));
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT));
SELECT * FROM t0 LEFT OUTER JOIN v0 ON x'' WHERE ((v0.c2 IN ()) COLLATE BINARY) ORDER BY ((((CASE v0.c2  WHEN t0.c32 THEN t0.c13 ELSE t0.c32 END)AND(v0.c0 COLLATE NOCASE)))AND(LTRIM(t0.c32))) ASC;
SELECT SUM(count) FROM (SELECT (((v0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON x'' ORDER BY ((((CASE v0.c2  WHEN t0.c32 THEN t0.c13 ELSE t0.c32 END)AND(v0.c0 COLLATE NOCASE)))AND(LTRIM(t0.c32))) ASC);
SELECT * FROM t0 LEFT OUTER JOIN v0 ON x'' WHERE ((v0.c2 IN ()) COLLATE BINARY) ORDER BY ((((CASE v0.c2  WHEN t0.c32 THEN t0.c13 ELSE t0.c32 END)AND(v0.c0 COLLATE NOCASE)))AND(LTRIM(t0.c32))) ASC;
SELECT SUM(count) FROM (SELECT (((v0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON x'' ORDER BY ((((CASE v0.c2  WHEN t0.c32 THEN t0.c13 ELSE t0.c32 END)AND(v0.c0 COLLATE NOCASE)))AND(LTRIM(t0.c32))) ASC);
SELECT * FROM t0 LEFT OUTER JOIN v0 ON x'' WHERE ((v0.c2 IN ()) COLLATE BINARY) ORDER BY ((((CASE v0.c2  WHEN t0.c32 THEN t0.c13 ELSE t0.c32 END)AND(v0.c0 COLLATE NOCASE)))AND(LTRIM(t0.c32))) ASC;
SELECT COUNT(*) FROM vt0, v0 WHERE ((- (((((v0.c2)AND(v0.c0)))AND(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((v0.c2)AND(v0.c0)))AND(v0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((- (((((v0.c2)AND(v0.c0)))AND(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((v0.c2)AND(v0.c0)))AND(v0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((- (((((v0.c2)AND(v0.c0)))AND(v0.c1)))));
SELECT ALL * FROM vt0, v0, t0 WHERE ((v0.c2 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE ((v0.c2 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE ((v0.c2 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((((((t0.c86)OR(vt0.c0)))OR(t0.c86))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((t0.c86)OR(vt0.c0)))OR(t0.c86))) IS TRUE)) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((((((t0.c86)OR(vt0.c0)))OR(t0.c86))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((t0.c86)OR(vt0.c0)))OR(t0.c86))) IS TRUE)) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((((((t0.c86)OR(vt0.c0)))OR(t0.c86))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (~ (CASE WHEN vt0.c0 THEN t0.c32 END)) INNER JOIN v0 ON TYPEOF(DISTINCT CAST(t0.c32 AS REAL)) WHERE (LTRIM(LIKELIHOOD(t0.c13, 0.13846084057689256)));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(LIKELIHOOD(t0.c13, 0.13846084057689256))) IS TRUE)  as count FROM vt0 NOT INDEXED LEFT OUTER JOIN t0 ON (~ (CASE WHEN vt0.c0 THEN t0.c32 END)) INNER JOIN v0 ON TYPEOF(DISTINCT CAST(t0.c32 AS REAL)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (~ (CASE WHEN vt0.c0 THEN t0.c32 END)) INNER JOIN v0 ON TYPEOF(DISTINCT CAST(t0.c32 AS REAL)) WHERE (LTRIM(LIKELIHOOD(t0.c13, 0.13846084057689256)));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(LIKELIHOOD(t0.c13, 0.13846084057689256))) IS TRUE)  as count FROM vt0 NOT INDEXED LEFT OUTER JOIN t0 ON (~ (CASE WHEN vt0.c0 THEN t0.c32 END)) INNER JOIN v0 ON TYPEOF(DISTINCT CAST(t0.c32 AS REAL)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (~ (CASE WHEN vt0.c0 THEN t0.c32 END)) INNER JOIN v0 ON TYPEOF(DISTINCT CAST(t0.c32 AS REAL)) WHERE (LTRIM(LIKELIHOOD(t0.c13, 0.13846084057689256)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c32 COLLATE BINARY)OR(((t0.c13) NOT NULL))))OR((((t0.c13))==((t0.c32)))))) ORDER BY ((((t0.c13) ISNULL)) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c32 COLLATE BINARY)OR(((t0.c13) NOT NULL))))OR((((t0.c13))==((t0.c32)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c13) ISNULL)) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c32 COLLATE BINARY)OR(((t0.c13) NOT NULL))))OR((((t0.c13))==((t0.c32)))))) ORDER BY ((((t0.c13) ISNULL)) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c32 COLLATE BINARY)OR(((t0.c13) NOT NULL))))OR((((t0.c13))==((t0.c32)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c13) ISNULL)) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c32 COLLATE BINARY)OR(((t0.c13) NOT NULL))))OR((((t0.c13))==((t0.c32)))))) ORDER BY ((((t0.c13) ISNULL)) NOTNULL) DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN t0 ON x'' COLLATE RTRIM WHERE (CASE t0.c32  WHEN t0.c86 THEN t0.c86 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c13 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c32  WHEN t0.c86 THEN t0.c86 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c13 END COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN t0 ON x'' COLLATE RTRIM);
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN t0 ON x'' COLLATE RTRIM WHERE (CASE t0.c32  WHEN t0.c86 THEN t0.c86 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c13 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c32  WHEN t0.c86 THEN t0.c86 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c13 END COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN t0 ON x'' COLLATE RTRIM);
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN t0 ON x'' COLLATE RTRIM WHERE (CASE t0.c32  WHEN t0.c86 THEN t0.c86 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c13 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (- (-1419154683)) WHERE (((0Xfffffffff0e9ad11)IS(((vt0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0))))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0xfffffffff0e9ad11)IS(((vt0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED LEFT OUTER JOIN vt0 ON (- (-1419154683)) ORDER BY NULL DESC);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (- (-1419154683)) WHERE (((0Xfffffffff0e9ad11)IS(((vt0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0))))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0xfffffffff0e9ad11)IS(((vt0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED LEFT OUTER JOIN vt0 ON (- (-1419154683)) ORDER BY NULL DESC);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (- (-1419154683)) WHERE (((0Xfffffffff0e9ad11)IS(((vt0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0))))) ORDER BY NULL DESC;
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN (vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM v0, vt0, t0 WHERE ((+ (t0.c32)));
SELECT SUM(count) FROM (SELECT (((+ (t0.c32))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE ((+ (t0.c32)));
SELECT SUM(count) FROM (SELECT (((+ (t0.c32))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE ((+ (t0.c32)));
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c32 COLLATE NOCASE))=((vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c32 COLLATE NOCASE))==((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c32 COLLATE NOCASE))=((vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c32 COLLATE NOCASE))==((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c32 COLLATE NOCASE))=((vt0.c0 COLLATE BINARY))));
SELECT * FROM t0 WHERE ((((- ('fui,'))) BETWEEN (((((t0.c13)OR(t0.c13)))AND(t0.c32))) AND (t0.c86)));
SELECT SUM(count) FROM (SELECT ALL (((((- ('fui,'))) BETWEEN (((((t0.c13)OR(t0.c13)))AND(t0.c32))) AND (t0.c86))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((- ('fui,'))) BETWEEN (((((t0.c13)OR(t0.c13)))AND(t0.c32))) AND (t0.c86)));
SELECT SUM(count) FROM (SELECT ALL (((((- ('fui,'))) BETWEEN (((((t0.c13)OR(t0.c13)))AND(t0.c32))) AND (t0.c86))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((- ('fui,'))) BETWEEN (((((t0.c13)OR(t0.c13)))AND(t0.c32))) AND (t0.c86)));
SELECT * FROM v0, vt0 WHERE ((((((v0.c0)IS(v0.c2)), ((v0.c2)|(v0.c1)), v0.c2))<=((((((v0.c2)OR(v0.c2)))OR(vt0.c0)), ((v0.c2)<(v0.c1)), LIKELIHOOD(DISTINCT v0.c0, 0.8927231261127825)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)IS(v0.c2)), ((v0.c2)|(v0.c1)), v0.c2))<=((((((v0.c2)OR(v0.c2)))OR(vt0.c0)), ((v0.c2)<(v0.c1)), LIKELIHOOD(DISTINCT v0.c0, 0.8927231261127825))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((((v0.c0)IS(v0.c2)), ((v0.c2)|(v0.c1)), v0.c2))<=((((((v0.c2)OR(v0.c2)))OR(vt0.c0)), ((v0.c2)<(v0.c1)), LIKELIHOOD(DISTINCT v0.c0, 0.8927231261127825)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)IS(v0.c2)), ((v0.c2)|(v0.c1)), v0.c2))<=((((((v0.c2)OR(v0.c2)))OR(vt0.c0)), ((v0.c2)<(v0.c1)), LIKELIHOOD(DISTINCT v0.c0, 0.8927231261127825))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((((v0.c0)IS(v0.c2)), ((v0.c2)|(v0.c1)), v0.c2))<=((((((v0.c2)OR(v0.c2)))OR(vt0.c0)), ((v0.c2)<(v0.c1)), LIKELIHOOD(DISTINCT v0.c0, 0.8927231261127825)))));
SELECT * FROM v0, vt0, t0 WHERE ((~ (((t0.c86) NOT NULL)))) ORDER BY (v0.c0 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c86) NOT NULL)))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (v0.c0 IN ()) DESC);
SELECT * FROM v0, vt0, t0 WHERE ((~ (((t0.c86) NOT NULL)))) ORDER BY (v0.c0 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c86) NOT NULL)))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (v0.c0 IN ()) DESC);
SELECT * FROM v0, vt0, t0 WHERE ((~ (((t0.c86) NOT NULL)))) ORDER BY (v0.c0 IN ()) DESC;
SELECT ALL * FROM t0 WHERE (CASE WHEN 0.024943215689456677 COLLATE RTRIM THEN t0.c13 ELSE ((t0.c86)=(t0.c86)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.024943215689456677 COLLATE RTRIM THEN t0.c13 ELSE ((t0.c86)==(t0.c86)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN 0.024943215689456677 COLLATE RTRIM THEN t0.c13 ELSE ((t0.c86)=(t0.c86)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.024943215689456677 COLLATE RTRIM THEN t0.c13 ELSE ((t0.c86)==(t0.c86)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN 0.024943215689456677 COLLATE RTRIM THEN t0.c13 ELSE ((t0.c86)=(t0.c86)) END);
SELECT * FROM v0, vt0 WHERE (((((NOT (' ~')), ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1)), ((v0.c1) IS TRUE), CAST(v0.c1 AS TEXT), ((((0.1525391925576315)OR(v0.c1)))OR('-1419154683'))))>((LENGTH(vt0.c0), vt0.c0 COLLATE RTRIM, CAST(v0.c2 AS TEXT), (+ (vt0.c0)), '*R(W')))) ORDER BY 0X1d096e77 COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (' ~')), ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1)), ((v0.c1) IS TRUE), CAST(v0.c1 AS TEXT), ((((0.1525391925576315)OR(v0.c1)))OR('-1419154683'))))>((LENGTH(vt0.c0), vt0.c0 COLLATE RTRIM, CAST(v0.c2 AS TEXT), (+ (vt0.c0)), '*R(W')))) IS TRUE)  as count FROM v0, vt0 ORDER BY 0x1d096e77 COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((((NOT (' ~')), ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1)), ((v0.c1) IS TRUE), CAST(v0.c1 AS TEXT), ((((0.1525391925576315)OR(v0.c1)))OR('-1419154683'))))>((LENGTH(vt0.c0), vt0.c0 COLLATE RTRIM, CAST(v0.c2 AS TEXT), (+ (vt0.c0)), '*R(W')))) ORDER BY 0X1d096e77 COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (' ~')), ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1)), ((v0.c1) IS TRUE), CAST(v0.c1 AS TEXT), ((((0.1525391925576315)OR(v0.c1)))OR('-1419154683'))))>((LENGTH(vt0.c0), vt0.c0 COLLATE RTRIM, CAST(v0.c2 AS TEXT), (+ (vt0.c0)), '*R(W')))) IS TRUE)  as count FROM v0, vt0 ORDER BY 0x1d096e77 COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))AND(((v0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))AND(((v0.c2) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))AND(((v0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))AND(((v0.c2) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))AND(((v0.c2) ISNULL))));
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT ((((x'')) BETWEEN ((t0.c13)) AND ((t0.c13))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((x'')) BETWEEN ((t0.c13)) AND ((t0.c13)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT ((((x'')) BETWEEN ((t0.c13)) AND ((t0.c13))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((x'')) BETWEEN ((t0.c13)) AND ((t0.c13)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT ((((x'')) BETWEEN ((t0.c13)) AND ((t0.c13))))));
SELECT ALL * FROM vt0, v0 CROSS JOIN t0 ON '967754062' WHERE ((((v0.c0, t0.c32, NULL)) BETWEEN (((((t0.c86))>((v0.c2))), (vt0.c0 IN ()), NULL COLLATE BINARY)) AND ((t0.c86, ((vt0.c0) BETWEEN (vt0.c0) AND ('U]J+q')), (t0.c86 IN ())))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, t0.c32, NULL)) BETWEEN (((((t0.c86))>((v0.c2))), (vt0.c0 IN ()), NULL COLLATE BINARY)) AND ((t0.c86, ((vt0.c0) BETWEEN (vt0.c0) AND ('U]J+q')), (t0.c86 IN ()))))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t0 ON '967754062');
SELECT ALL * FROM vt0, v0 CROSS JOIN t0 ON '967754062' WHERE ((((v0.c0, t0.c32, NULL)) BETWEEN (((((t0.c86))>((v0.c2))), (vt0.c0 IN ()), NULL COLLATE BINARY)) AND ((t0.c86, ((vt0.c0) BETWEEN (vt0.c0) AND ('U]J+q')), (t0.c86 IN ())))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, t0.c32, NULL)) BETWEEN (((((t0.c86))>((v0.c2))), (vt0.c0 IN ()), NULL COLLATE BINARY)) AND ((t0.c86, ((vt0.c0) BETWEEN (vt0.c0) AND ('U]J+q')), (t0.c86 IN ()))))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t0 ON '967754062');
SELECT ALL * FROM vt0, v0 CROSS JOIN t0 ON '967754062' WHERE ((((v0.c0, t0.c32, NULL)) BETWEEN (((((t0.c86))>((v0.c2))), (vt0.c0 IN ()), NULL COLLATE BINARY)) AND ((t0.c86, ((vt0.c0) BETWEEN (vt0.c0) AND ('U]J+q')), (t0.c86 IN ())))));
SELECT * FROM vt0, v0, t0 WHERE (((t0.c86 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c86 IN ()) IN ())) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (((t0.c86 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c86 IN ()) IN ())) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (((t0.c86 IN ()) IN ()));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((((((t0.c13))>((v0.c2)))))<=((((v0.c2)GLOB(v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c13))>((v0.c2)))))<=((((v0.c2)GLOB(v0.c0)))))) IS TRUE)  as count FROM v0, vt0, t0 NOT INDEXED);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((((((t0.c13))>((v0.c2)))))<=((((v0.c2)GLOB(v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c13))>((v0.c2)))))<=((((v0.c2)GLOB(v0.c0)))))) IS TRUE)  as count FROM v0, vt0, t0 NOT INDEXED);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((((((t0.c13))>((v0.c2)))))<=((((v0.c2)GLOB(v0.c0))))));
SELECT * FROM t0, v0, vt0 WHERE (x'cb99' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((x'cb99' COLLATE RTRIM) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE (x'cb99' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((x'cb99' COLLATE RTRIM) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE (x'cb99' COLLATE RTRIM);
SELECT * FROM vt0, t0 WHERE (highlight(t0.c32, CAST(vt0.c0 AS REAL), CAST(0xffffffffb49a2e09 AS NUMERIC), CAST(t0.c32 AS BLOB))) ORDER BY ((CASE WHEN t0.c32 THEN 0.7686552464091009 WHEN vt0.c0 THEN t0.c86 WHEN t0.c32 THEN t0.c86 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c13 ELSE t0.c86 END) NOT BETWEEN (((((t0.c32)OR(t0.c86)))AND(t0.c13))) AND (((t0.c13) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((highlight(t0.c32, CAST(vt0.c0 AS REAL), CAST(0xffffffffb49a2e09 AS NUMERIC), CAST(t0.c32 AS BLOB))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE WHEN t0.c32 THEN 0.7686552464091009 WHEN vt0.c0 THEN t0.c86 WHEN t0.c32 THEN t0.c86 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c13 ELSE t0.c86 END) NOT BETWEEN (((((t0.c32)OR(t0.c86)))AND(t0.c13))) AND (((t0.c13) NOT NULL)))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (highlight(t0.c32, CAST(vt0.c0 AS REAL), CAST(0xffffffffb49a2e09 AS NUMERIC), CAST(t0.c32 AS BLOB))) ORDER BY ((CASE WHEN t0.c32 THEN 0.7686552464091009 WHEN vt0.c0 THEN t0.c86 WHEN t0.c32 THEN t0.c86 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c13 ELSE t0.c86 END) NOT BETWEEN (((((t0.c32)OR(t0.c86)))AND(t0.c13))) AND (((t0.c13) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((highlight(t0.c32, CAST(vt0.c0 AS REAL), CAST(0xffffffffb49a2e09 AS NUMERIC), CAST(t0.c32 AS BLOB))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE WHEN t0.c32 THEN 0.7686552464091009 WHEN vt0.c0 THEN t0.c86 WHEN t0.c32 THEN t0.c86 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c13 ELSE t0.c86 END) NOT BETWEEN (((((t0.c32)OR(t0.c86)))AND(t0.c13))) AND (((t0.c13) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CASE WHEN (NOT (t0.c32)) THEN (t0.c86 IN (t0.c13, t0.c86)) WHEN CAST(t0.c86 AS TEXT) THEN CAST(vt0.c0 AS INTEGER) WHEN ((t0.c32)>=(vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(t0.c86)))OR(t0.c86)))OR(t0.c32)) END) ORDER BY (((t0.c32, '?OP', t0.c32)) BETWEEN ((((((t0.c86)OR(t0.c86)))AND(t0.c32)), (vt0.c0 IN ()), (+ (x'')))) AND ((((((((((0.5462708239448705)AND(x'')))AND(t0.c32)))OR(t0.c13)))OR(t0.c86)), ((t0.c32)GLOB(vt0.c0)), json_valid(t0.c86))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (t0.c32)) THEN (t0.c86 IN (t0.c13, t0.c86)) WHEN CAST(t0.c86 AS TEXT) THEN CAST(vt0.c0 AS INTEGER) WHEN ((t0.c32)>=(vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(t0.c86)))OR(t0.c86)))OR(t0.c32)) END) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (((t0.c32, '?OP', t0.c32)) BETWEEN ((((((t0.c86)OR(t0.c86)))AND(t0.c32)), (vt0.c0 IN ()), (+ (x'')))) AND ((((((((((0.5462708239448705)AND(x'')))AND(t0.c32)))OR(t0.c13)))OR(t0.c86)), ((t0.c32)GLOB(vt0.c0)), json_valid(t0.c86)))));
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CASE WHEN (NOT (t0.c32)) THEN (t0.c86 IN (t0.c13, t0.c86)) WHEN CAST(t0.c86 AS TEXT) THEN CAST(vt0.c0 AS INTEGER) WHEN ((t0.c32)>=(vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(t0.c86)))OR(t0.c86)))OR(t0.c32)) END) ORDER BY (((t0.c32, '?OP', t0.c32)) BETWEEN ((((((t0.c86)OR(t0.c86)))AND(t0.c32)), (vt0.c0 IN ()), (+ (x'')))) AND ((((((((((0.5462708239448705)AND(x'')))AND(t0.c32)))OR(t0.c13)))OR(t0.c86)), ((t0.c32)GLOB(vt0.c0)), json_valid(t0.c86))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (t0.c32)) THEN (t0.c86 IN (t0.c13, t0.c86)) WHEN CAST(t0.c86 AS TEXT) THEN CAST(vt0.c0 AS INTEGER) WHEN ((t0.c32)>=(vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(t0.c86)))OR(t0.c86)))OR(t0.c32)) END) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (((t0.c32, '?OP', t0.c32)) BETWEEN ((((((t0.c86)OR(t0.c86)))AND(t0.c32)), (vt0.c0 IN ()), (+ (x'')))) AND ((((((((((0.5462708239448705)AND(x'')))AND(t0.c32)))OR(t0.c13)))OR(t0.c86)), ((t0.c32)GLOB(vt0.c0)), json_valid(t0.c86)))));
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CASE WHEN (NOT (t0.c32)) THEN (t0.c86 IN (t0.c13, t0.c86)) WHEN CAST(t0.c86 AS TEXT) THEN CAST(vt0.c0 AS INTEGER) WHEN ((t0.c32)>=(vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(t0.c86)))OR(t0.c86)))OR(t0.c32)) END) ORDER BY (((t0.c32, '?OP', t0.c32)) BETWEEN ((((((t0.c86)OR(t0.c86)))AND(t0.c32)), (vt0.c0 IN ()), (+ (x'')))) AND ((((((((((0.5462708239448705)AND(x'')))AND(t0.c32)))OR(t0.c13)))OR(t0.c86)), ((t0.c32)GLOB(vt0.c0)), json_valid(t0.c86))));
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) DESC  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c13)) BETWEEN (((((t0.c86))<>((vt0.c0))))) AND ((CASE WHEN t0.c86 THEN t0.c13 WHEN t0.c32 THEN t0.c13 WHEN t0.c32 THEN t0.c13 ELSE t0.c86 END))));
SELECT SUM(count) FROM (SELECT (((((t0.c13)) BETWEEN (((((t0.c86))!=((vt0.c0))))) AND ((CASE WHEN t0.c86 THEN t0.c13 WHEN t0.c32 THEN t0.c13 WHEN t0.c32 THEN t0.c13 ELSE t0.c86 END)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c13)) BETWEEN (((((t0.c86))<>((vt0.c0))))) AND ((CASE WHEN t0.c86 THEN t0.c13 WHEN t0.c32 THEN t0.c13 WHEN t0.c32 THEN t0.c13 ELSE t0.c86 END))));
SELECT SUM(count) FROM (SELECT (((((t0.c13)) BETWEEN (((((t0.c86))!=((vt0.c0))))) AND ((CASE WHEN t0.c86 THEN t0.c13 WHEN t0.c32 THEN t0.c13 WHEN t0.c32 THEN t0.c13 ELSE t0.c86 END)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c13)) BETWEEN (((((t0.c86))<>((vt0.c0))))) AND ((CASE WHEN t0.c86 THEN t0.c13 WHEN t0.c32 THEN t0.c13 WHEN t0.c32 THEN t0.c13 ELSE t0.c86 END))));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON 0.08117482083218686 WHERE (CAST(TYPEOF(t0.c86) AS REAL)) ORDER BY ((json_insert(t0.c86, t0.c32, t0.c32))/(x'')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(t0.c86) AS REAL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON 0.08117482083218686 ORDER BY ((json_insert(t0.c86, t0.c32, t0.c32))/(x'')) DESC);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON 0.08117482083218686 WHERE (CAST(TYPEOF(t0.c86) AS REAL)) ORDER BY ((json_insert(t0.c86, t0.c32, t0.c32))/(x'')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(t0.c86) AS REAL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON 0.08117482083218686 ORDER BY ((json_insert(t0.c86, t0.c32, t0.c32))/(x'')) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c13)/(0.3989565485086546))) ORDER BY (((t0.c32)) BETWEEN ((CASE WHEN x'' THEN t0.c32 WHEN 0.7718330472977721 THEN t0.c13 WHEN t0.c13 THEN vt0.c0 ELSE t0.c32 END)) AND (((((t0.c32))>=((vt0.c0)))))) ASC, ((CASE WHEN t0.c13 THEN t0.c32 END)/(((NULL)+(t0.c13)))) DESC  NULLS FIRST, ((t0.c13 COLLATE RTRIM)LIKE((t0.c13 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c13)/(0.3989565485086546))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c32)) BETWEEN ((CASE WHEN x'' THEN t0.c32 WHEN 0.7718330472977721 THEN t0.c13 WHEN t0.c13 THEN vt0.c0 ELSE t0.c32 END)) AND (((((t0.c32))>=((vt0.c0)))))) ASC, ((CASE WHEN t0.c13 THEN t0.c32 END)/(((NULL)+(t0.c13)))) DESC  NULLS FIRST, ((t0.c13 COLLATE RTRIM)LIKE((t0.c13 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c13)/(0.3989565485086546))) ORDER BY (((t0.c32)) BETWEEN ((CASE WHEN x'' THEN t0.c32 WHEN 0.7718330472977721 THEN t0.c13 WHEN t0.c13 THEN vt0.c0 ELSE t0.c32 END)) AND (((((t0.c32))>=((vt0.c0)))))) ASC, ((CASE WHEN t0.c13 THEN t0.c32 END)/(((NULL)+(t0.c13)))) DESC  NULLS FIRST, ((t0.c13 COLLATE RTRIM)LIKE((t0.c13 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c13)/(0.3989565485086546))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c32)) BETWEEN ((CASE WHEN x'' THEN t0.c32 WHEN 0.7718330472977721 THEN t0.c13 WHEN t0.c13 THEN vt0.c0 ELSE t0.c32 END)) AND (((((t0.c32))>=((vt0.c0)))))) ASC, ((CASE WHEN t0.c13 THEN t0.c32 END)/(((NULL)+(t0.c13)))) DESC  NULLS FIRST, ((t0.c13 COLLATE RTRIM)LIKE((t0.c13 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c13)/(0.3989565485086546))) ORDER BY (((t0.c32)) BETWEEN ((CASE WHEN x'' THEN t0.c32 WHEN 0.7718330472977721 THEN t0.c13 WHEN t0.c13 THEN vt0.c0 ELSE t0.c32 END)) AND (((((t0.c32))>=((vt0.c0)))))) ASC, ((CASE WHEN t0.c13 THEN t0.c32 END)/(((NULL)+(t0.c13)))) DESC  NULLS FIRST, ((t0.c13 COLLATE RTRIM)LIKE((t0.c13 IN ()))) ASC  NULLS FIRST;
SELECT * FROM t0, vt0 NATURAL JOIN v0 WHERE (((((t0.c32)IS NOT(t0.c13)))<=(v0.c0 COLLATE BINARY))) ORDER BY (~ (t0.c13 COLLATE BINARY)) ASC, ((vt0.c0)<(t0.c86)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c32)IS NOT(t0.c13)))<=(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN v0 ORDER BY (~ (t0.c13 COLLATE BINARY)) ASC, ((vt0.c0)<(t0.c86)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM t0, vt0 NATURAL JOIN v0 WHERE (((((t0.c32)IS NOT(t0.c13)))<=(v0.c0 COLLATE BINARY))) ORDER BY (~ (t0.c13 COLLATE BINARY)) ASC, ((vt0.c0)<(t0.c86)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c32)IS NOT(t0.c13)))<=(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN v0 ORDER BY (~ (t0.c13 COLLATE BINARY)) ASC, ((vt0.c0)<(t0.c86)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM t0, vt0 NATURAL JOIN v0 WHERE (((((t0.c32)IS NOT(t0.c13)))<=(v0.c0 COLLATE BINARY))) ORDER BY (~ (t0.c13 COLLATE BINARY)) ASC, ((vt0.c0)<(t0.c86)) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0)<(0xffffffff94ee7508)))) CROSS JOIN v0 ON ((t0.c32 IN ()) IN ()) WHERE (IFNULL(((((v0.c0)OR(t0.c13)))OR(t0.c86)), (((NULL))==((t0.c13)))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((((v0.c0)OR(t0.c13)))OR(t0.c86)), (((NULL))=((t0.c13))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0)<(0xffffffff94ee7508)))) CROSS JOIN v0 ON ((t0.c32 IN ()) IN ()));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0)<(0xffffffff94ee7508)))) CROSS JOIN v0 ON ((t0.c32 IN ()) IN ()) WHERE (IFNULL(((((v0.c0)OR(t0.c13)))OR(t0.c86)), (((NULL))==((t0.c13)))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((((v0.c0)OR(t0.c13)))OR(t0.c86)), (((NULL))=((t0.c13))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0)<(0xffffffff94ee7508)))) CROSS JOIN v0 ON ((t0.c32 IN ()) IN ()));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0)<(0xffffffff94ee7508)))) CROSS JOIN v0 ON ((t0.c32 IN ()) IN ()) WHERE (IFNULL(((((v0.c0)OR(t0.c13)))OR(t0.c86)), (((NULL))==((t0.c13)))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c13) NOT BETWEEN (t0.c32) AND (t0.c13)) COLLATE BINARY) ORDER BY t0.c13 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c13) NOT BETWEEN (t0.c32) AND (t0.c13)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY t0.c13 ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c13) NOT BETWEEN (t0.c32) AND (t0.c13)) COLLATE BINARY) ORDER BY t0.c13 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c13) NOT BETWEEN (t0.c32) AND (t0.c13)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY t0.c13 ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c13) NOT BETWEEN (t0.c32) AND (t0.c13)) COLLATE BINARY) ORDER BY t0.c13 ASC  NULLS FIRST;
SELECT * FROM vt0 CROSS JOIN v0 ON 0.6610553916142584 WHERE (((((CAST(vt0.c0 AS NUMERIC))AND(CAST(v0.c2 AS REAL))))AND('-1191167815')));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS NUMERIC))AND(CAST(v0.c2 AS REAL))))AND('-1191167815'))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON 0.6610553916142584);
SELECT * FROM vt0 CROSS JOIN v0 ON 0.6610553916142584 WHERE (((((CAST(vt0.c0 AS NUMERIC))AND(CAST(v0.c2 AS REAL))))AND('-1191167815')));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS NUMERIC))AND(CAST(v0.c2 AS REAL))))AND('-1191167815'))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON 0.6610553916142584);
SELECT * FROM vt0 CROSS JOIN v0 ON 0.6610553916142584 WHERE (((((CAST(vt0.c0 AS NUMERIC))AND(CAST(v0.c2 AS REAL))))AND('-1191167815')));
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, 0.37600312101782496)) NOT BETWEEN ((((vt0.c0) ISNULL), vt0.c0, NULL)) AND ((((vt0.c0) IS FALSE), ((vt0.c0)GLOB(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, 0.37600312101782496)) NOT BETWEEN ((((vt0.c0) ISNULL), vt0.c0, NULL)) AND ((((vt0.c0) IS FALSE), ((vt0.c0)GLOB(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, 0.37600312101782496)) NOT BETWEEN ((((vt0.c0) ISNULL), vt0.c0, NULL)) AND ((((vt0.c0) IS FALSE), ((vt0.c0)GLOB(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, 0.37600312101782496)) NOT BETWEEN ((((vt0.c0) ISNULL), vt0.c0, NULL)) AND ((((vt0.c0) IS FALSE), ((vt0.c0)GLOB(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, 0.37600312101782496)) NOT BETWEEN ((((vt0.c0) ISNULL), vt0.c0, NULL)) AND ((((vt0.c0) IS FALSE), ((vt0.c0)GLOB(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT ALL * FROM vt0, t0 NATURAL JOIN v0 WHERE (((vt0.c0)<<((+ (t0.c86))))) ORDER BY ((((v0.c0)/(v0.c1)))%('')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<<((+ (t0.c86))))) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN v0 ORDER BY ((((v0.c0)/(v0.c1)))%('')) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 NATURAL JOIN v0 WHERE (((vt0.c0)<<((+ (t0.c86))))) ORDER BY ((((v0.c0)/(v0.c1)))%('')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<<((+ (t0.c86))))) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN v0 ORDER BY ((((v0.c0)/(v0.c1)))%('')) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 NATURAL JOIN v0 WHERE (((vt0.c0)<<((+ (t0.c86))))) ORDER BY ((((v0.c0)/(v0.c1)))%('')) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((HEX(DISTINCT t0.c86)) BETWEEN (((t0.c13) NOTNULL)) AND (CASE WHEN v0.c1 THEN vt0.c0 WHEN t0.c13 THEN t0.c86 WHEN v0.c1 THEN t0.c32 END)));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT t0.c86)) BETWEEN (((t0.c13) NOTNULL)) AND (CASE WHEN v0.c1 THEN vt0.c0 WHEN t0.c13 THEN t0.c86 WHEN v0.c1 THEN t0.c32 END))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((HEX(DISTINCT t0.c86)) BETWEEN (((t0.c13) NOTNULL)) AND (CASE WHEN v0.c1 THEN vt0.c0 WHEN t0.c13 THEN t0.c86 WHEN v0.c1 THEN t0.c32 END)));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT t0.c86)) BETWEEN (((t0.c13) NOTNULL)) AND (CASE WHEN v0.c1 THEN vt0.c0 WHEN t0.c13 THEN t0.c86 WHEN v0.c1 THEN t0.c32 END))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((HEX(DISTINCT t0.c86)) BETWEEN (((t0.c13) NOTNULL)) AND (CASE WHEN v0.c1 THEN vt0.c0 WHEN t0.c13 THEN t0.c86 WHEN v0.c1 THEN t0.c32 END)));
SELECT * FROM t0 WHERE (((CAST(t0.c86 AS NUMERIC))IS NOT(((t0.c13)||(t0.c86)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c86 AS NUMERIC))IS NOT(((t0.c13)||(t0.c86))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CAST(t0.c86 AS NUMERIC))IS NOT(((t0.c13)||(t0.c86)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c86 AS NUMERIC))IS NOT(((t0.c13)||(t0.c86))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CAST(t0.c86 AS NUMERIC))IS NOT(((t0.c13)||(t0.c86)))));
SELECT * FROM v0, vt0, t0 WHERE (LIKELY(DISTINCT ((((t0.c32)AND(t0.c32)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((((t0.c32)AND(t0.c32)))AND(vt0.c0)))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE (LIKELY(DISTINCT ((((t0.c32)AND(t0.c32)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((((t0.c32)AND(t0.c32)))AND(vt0.c0)))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE (LIKELY(DISTINCT ((((t0.c32)AND(t0.c32)))AND(vt0.c0))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON NULL WHERE (((-1.595108348E9) NOT BETWEEN (IFNULL(v0.c2, t0.c86)) AND (((t0.c13) BETWEEN (v0.c0) AND (t0.c13))))) ORDER BY ((((t0.c86)|(v0.c0)))=(ABS(t0.c13)))  NULLS FIRST, ((((v0.c2) ISNULL)) NOT BETWEEN (((t0.c13) BETWEEN ('?OP') AND (v0.c1))) AND (x'd1dc'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-1.595108348E9) NOT BETWEEN (IFNULL(v0.c2, t0.c86)) AND (((t0.c13) BETWEEN (v0.c0) AND (t0.c13))))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON NULL ORDER BY ((((t0.c86)|(v0.c0)))==(ABS(t0.c13)))  NULLS FIRST, ((((v0.c2) ISNULL)) NOT BETWEEN (((t0.c13) BETWEEN ('?OP') AND (v0.c1))) AND (x'd1dc'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON NULL WHERE (((-1.595108348E9) NOT BETWEEN (IFNULL(v0.c2, t0.c86)) AND (((t0.c13) BETWEEN (v0.c0) AND (t0.c13))))) ORDER BY ((((t0.c86)|(v0.c0)))=(ABS(t0.c13)))  NULLS FIRST, ((((v0.c2) ISNULL)) NOT BETWEEN (((t0.c13) BETWEEN ('?OP') AND (v0.c1))) AND (x'd1dc'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-1.595108348E9) NOT BETWEEN (IFNULL(v0.c2, t0.c86)) AND (((t0.c13) BETWEEN (v0.c0) AND (t0.c13))))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON NULL ORDER BY ((((t0.c86)|(v0.c0)))==(ABS(t0.c13)))  NULLS FIRST, ((((v0.c2) ISNULL)) NOT BETWEEN (((t0.c13) BETWEEN ('?OP') AND (v0.c1))) AND (x'd1dc'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON NULL WHERE (((-1.595108348E9) NOT BETWEEN (IFNULL(v0.c2, t0.c86)) AND (((t0.c13) BETWEEN (v0.c0) AND (t0.c13))))) ORDER BY ((((t0.c86)|(v0.c0)))=(ABS(t0.c13)))  NULLS FIRST, ((((v0.c2) ISNULL)) NOT BETWEEN (((t0.c13) BETWEEN ('?OP') AND (v0.c1))) AND (x'd1dc'))  NULLS FIRST;
SELECT * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c1);
SELECT ALL COUNT(*) FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END IN (((v0.c2)>(v0.c0))))) ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE), ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2))) NOT BETWEEN ((- (v0.c0))) AND (((((0.37600312101782496)OR('hT*c')))AND(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END IN (((v0.c2)>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE), ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2))) NOT BETWEEN ((- (v0.c0))) AND (((((0.37600312101782496)OR('hT*c')))AND(v0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END IN (((v0.c2)>(v0.c0))))) ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE), ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2))) NOT BETWEEN ((- (v0.c0))) AND (((((0.37600312101782496)OR('hT*c')))AND(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END IN (((v0.c2)>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE), ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2))) NOT BETWEEN ((- (v0.c0))) AND (((((0.37600312101782496)OR('hT*c')))AND(v0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END IN (((v0.c2)>(v0.c0))))) ORDER BY ((v0.c0 COLLATE BINARY) IS FALSE), ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2))) NOT BETWEEN ((- (v0.c0))) AND (((((0.37600312101782496)OR('hT*c')))AND(v0.c1))))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (HEX(((v0.c0)GLOB(v0.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(((v0.c0)GLOB(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (HEX(((v0.c0)GLOB(v0.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(((v0.c0)GLOB(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (HEX(((v0.c0)GLOB(v0.c0))));
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL))) AND (((~ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL))) AND (((~ (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL))) AND (((~ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL))) AND (((~ (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL))) AND (((~ (vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)=(vt0.c0))))) ORDER BY UNICODE(((x'') BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)<(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)==(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY UNICODE(((x'') BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)=(vt0.c0))))) ORDER BY UNICODE(((x'') BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)<(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)==(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY UNICODE(((x'') BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)=(vt0.c0))))) ORDER BY UNICODE(((x'') BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0))) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (vt0.c0))) ORDER BY ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0, vt0.c0))) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0))) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (vt0.c0))) ORDER BY ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0, vt0.c0))) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0))) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (vt0.c0))) ORDER BY ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM;
SELECT * FROM t0 WHERE (((((t0.c32)GLOB(x'e094'))) ISNULL)) ORDER BY CAST(((t0.c86) BETWEEN (t0.c86) AND (t0.c32)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c32)GLOB(x'e094'))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c86) BETWEEN (t0.c86) AND (t0.c32)) AS BLOB) ASC);
SELECT * FROM t0 WHERE (((((t0.c32)GLOB(x'e094'))) ISNULL)) ORDER BY CAST(((t0.c86) BETWEEN (t0.c86) AND (t0.c32)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c32)GLOB(x'e094'))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c86) BETWEEN (t0.c86) AND (t0.c32)) AS BLOB) ASC);
SELECT * FROM t0 WHERE (((((t0.c32)GLOB(x'e094'))) ISNULL)) ORDER BY CAST(((t0.c86) BETWEEN (t0.c86) AND (t0.c32)) AS BLOB) ASC;
SELECT ALL * FROM v0, t0, vt0 WHERE (CASE v0.c1  WHEN LIKE(t0.c86, x'', '3') THEN (v0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c1  WHEN LIKE(t0.c86, x'', '3') THEN (v0.c2 IN ()) END) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE (CASE v0.c1  WHEN LIKE(t0.c86, x'', '3') THEN (v0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c1  WHEN LIKE(t0.c86, x'', '3') THEN (v0.c2 IN ()) END) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE (CASE v0.c1  WHEN LIKE(t0.c86, x'', '3') THEN (v0.c2 IN ()) END);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c1))<=((((vt0.c0)&(v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1))<=((((vt0.c0)&(v0.c1)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c1))<=((((vt0.c0)&(v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1))<=((((vt0.c0)&(v0.c1)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c1))<=((((vt0.c0)&(v0.c1))))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((CASE v0.c0  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END)))) ORDER BY 0.5330050378252547  NULLS LAST, ((v0.c0 COLLATE BINARY) BETWEEN (((x'') BETWEEN (vt0.c0) AND (v0.c2))) AND (v0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((CASE v0.c0  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END)))) IS TRUE)  as count FROM v0, vt0 ORDER BY 0.5330050378252547  NULLS LAST, ((v0.c0 COLLATE BINARY) BETWEEN (((x'') BETWEEN (vt0.c0) AND (v0.c2))) AND (v0.c1))  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((CASE v0.c0  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END)))) ORDER BY 0.5330050378252547  NULLS LAST, ((v0.c0 COLLATE BINARY) BETWEEN (((x'') BETWEEN (vt0.c0) AND (v0.c2))) AND (v0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((CASE v0.c0  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END)))) IS TRUE)  as count FROM v0, vt0 ORDER BY 0.5330050378252547  NULLS LAST, ((v0.c0 COLLATE BINARY) BETWEEN (((x'') BETWEEN (vt0.c0) AND (v0.c2))) AND (v0.c1))  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((CASE v0.c0  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END)))) ORDER BY 0.5330050378252547  NULLS LAST, ((v0.c0 COLLATE BINARY) BETWEEN (((x'') BETWEEN (vt0.c0) AND (v0.c2))) AND (v0.c1))  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE ((NOT ((((t0.c13))<((t0.c13)))))) ORDER BY (((((vt0.c0) NOTNULL), (NULL IN ()), ((((t0.c86)AND(vt0.c0)))OR(vt0.c0))))<((((vt0.c0)OR(t0.c86)), (t0.c13 IN (vt0.c0)), CASE WHEN vt0.c0 THEN 'xh' END))), ((+ ('466063211')) IN (((t0.c32) BETWEEN (vt0.c0) AND (t0.c13)))) DESC, x'88ec';
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t0.c13))<((t0.c13)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((vt0.c0) NOTNULL), (NULL IN ()), ((((t0.c86)AND(vt0.c0)))OR(vt0.c0))))<((((vt0.c0)OR(t0.c86)), (t0.c13 IN (vt0.c0)), CASE WHEN vt0.c0 THEN 'xh' END))), ((+ ('466063211')) IN (((t0.c32) BETWEEN (vt0.c0) AND (t0.c13)))) DESC, x'88ec');
SELECT ALL * FROM vt0, t0 WHERE ((NOT ((((t0.c13))<((t0.c13)))))) ORDER BY (((((vt0.c0) NOTNULL), (NULL IN ()), ((((t0.c86)AND(vt0.c0)))OR(vt0.c0))))<((((vt0.c0)OR(t0.c86)), (t0.c13 IN (vt0.c0)), CASE WHEN vt0.c0 THEN 'xh' END))), ((+ ('466063211')) IN (((t0.c32) BETWEEN (vt0.c0) AND (t0.c13)))) DESC, x'88ec';
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t0.c13))<((t0.c13)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((vt0.c0) NOTNULL), (NULL IN ()), ((((t0.c86)AND(vt0.c0)))OR(vt0.c0))))<((((vt0.c0)OR(t0.c86)), (t0.c13 IN (vt0.c0)), CASE WHEN vt0.c0 THEN 'xh' END))), ((+ ('466063211')) IN (((t0.c32) BETWEEN (vt0.c0) AND (t0.c13)))) DESC, x'88ec');
SELECT ALL * FROM vt0, t0 WHERE ((NOT ((((t0.c13))<((t0.c13)))))) ORDER BY (((((vt0.c0) NOTNULL), (NULL IN ()), ((((t0.c86)AND(vt0.c0)))OR(vt0.c0))))<((((vt0.c0)OR(t0.c86)), (t0.c13 IN (vt0.c0)), CASE WHEN vt0.c0 THEN 'xh' END))), ((+ ('466063211')) IN (((t0.c32) BETWEEN (vt0.c0) AND (t0.c13)))) DESC, x'88ec';
SELECT ALL COUNT(*) FROM t0 WHERE (((((CAST(t0.c32 AS NUMERIC))AND(CAST(t0.c13 AS INTEGER))))OR(((((((((t0.c86)AND(t0.c13)))OR(t0.c86)))AND(t0.c32)))OR(t0.c32))))) ORDER BY (('1987362244') ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c32 AS NUMERIC))AND(CAST(t0.c13 AS INTEGER))))OR(((((((((t0.c86)AND(t0.c13)))OR(t0.c86)))AND(t0.c32)))OR(t0.c32))))) IS TRUE)  as count FROM t0 ORDER BY (('1987362244') ISNULL) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((CAST(t0.c32 AS NUMERIC))AND(CAST(t0.c13 AS INTEGER))))OR(((((((((t0.c86)AND(t0.c13)))OR(t0.c86)))AND(t0.c32)))OR(t0.c32))))) ORDER BY (('1987362244') ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c32 AS NUMERIC))AND(CAST(t0.c13 AS INTEGER))))OR(((((((((t0.c86)AND(t0.c13)))OR(t0.c86)))AND(t0.c32)))OR(t0.c32))))) IS TRUE)  as count FROM t0 ORDER BY (('1987362244') ISNULL) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((CAST(t0.c32 AS NUMERIC))AND(CAST(t0.c13 AS INTEGER))))OR(((((((((t0.c86)AND(t0.c13)))OR(t0.c86)))AND(t0.c32)))OR(t0.c32))))) ORDER BY (('1987362244') ISNULL) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c86)<(t0.c32)) IN ())) ORDER BY 'Z⸉';
SELECT SUM(count) FROM (SELECT ALL (((((t0.c86)<(t0.c32)) IN ())) IS TRUE)  as count FROM t0 ORDER BY 'Z⸉');
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c86)<(t0.c32)) IN ())) ORDER BY 'Z⸉';
SELECT SUM(count) FROM (SELECT ALL (((((t0.c86)<(t0.c32)) IN ())) IS TRUE)  as count FROM t0 ORDER BY 'Z⸉');
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c86)<(t0.c32)) IN ())) ORDER BY 'Z⸉';
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (0.9279518936900768);
SELECT SUM(count) FROM (SELECT ((0.9279518936900768) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (0.9279518936900768);
SELECT SUM(count) FROM (SELECT ((0.9279518936900768) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (0.9279518936900768);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c32);
SELECT SUM(count) FROM (SELECT ((t0.c32) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c32);
SELECT SUM(count) FROM (SELECT ((t0.c32) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c32);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))=(t0.c32)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))==(t0.c32))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))=(t0.c32)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))==(t0.c32))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))=(t0.c32)));
SELECT * FROM vt0, v0, t0 WHERE (CAST((+ (vt0.c0)) AS INTEGER)) ORDER BY CAST(v0.c0 AS REAL) COLLATE NOCASE  NULLS LAST, (((((v0.c1, vt0.c0, t0.c86)) NOT BETWEEN ((v0.c1, 0.17468728734218775, t0.c32)) AND ((t0.c86, t0.c13, t0.c86))))/((~ (t0.c86))));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY CAST(v0.c0 AS REAL) COLLATE NOCASE  NULLS LAST, (((((v0.c1, vt0.c0, t0.c86)) NOT BETWEEN ((v0.c1, 0.17468728734218775, t0.c32)) AND ((t0.c86, t0.c13, t0.c86))))/((~ (t0.c86)))));
SELECT * FROM vt0, v0, t0 WHERE (CAST((+ (vt0.c0)) AS INTEGER)) ORDER BY CAST(v0.c0 AS REAL) COLLATE NOCASE  NULLS LAST, (((((v0.c1, vt0.c0, t0.c86)) NOT BETWEEN ((v0.c1, 0.17468728734218775, t0.c32)) AND ((t0.c86, t0.c13, t0.c86))))/((~ (t0.c86))));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY CAST(v0.c0 AS REAL) COLLATE NOCASE  NULLS LAST, (((((v0.c1, vt0.c0, t0.c86)) NOT BETWEEN ((v0.c1, 0.17468728734218775, t0.c32)) AND ((t0.c86, t0.c13, t0.c86))))/((~ (t0.c86)))));
SELECT * FROM vt0, v0, t0 WHERE (CAST((+ (vt0.c0)) AS INTEGER)) ORDER BY CAST(v0.c0 AS REAL) COLLATE NOCASE  NULLS LAST, (((((v0.c1, vt0.c0, t0.c86)) NOT BETWEEN ((v0.c1, 0.17468728734218775, t0.c32)) AND ((t0.c86, t0.c13, t0.c86))))/((~ (t0.c86))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)))&((((v0.c2)) BETWEEN ((v0.c1)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)))&((((v0.c2)) BETWEEN ((v0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)))&((((v0.c2)) BETWEEN ((v0.c1)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)))&((((v0.c2)) BETWEEN ((v0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)))&((((v0.c2)) BETWEEN ((v0.c1)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST((((4.87157367E8))>((v0.c0))) AS NUMERIC)) ORDER BY ((v0.c0 COLLATE NOCASE)<(CASE vt0.c0  WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((4.87157367E8))>((v0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c0 COLLATE NOCASE)<(CASE vt0.c0  WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST((((4.87157367E8))>((v0.c0))) AS NUMERIC)) ORDER BY ((v0.c0 COLLATE NOCASE)<(CASE vt0.c0  WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((4.87157367E8))>((v0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c0 COLLATE NOCASE)<(CASE vt0.c0  WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST((((4.87157367E8))>((v0.c0))) AS NUMERIC)) ORDER BY ((v0.c0 COLLATE NOCASE)<(CASE vt0.c0  WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 END)) ASC;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON 0.03207257168837452 WHERE ((- (v0.c0)) COLLATE RTRIM) ORDER BY (+ (v0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, (COALESCE(v0.c0, v0.c2) IN (((v0.c0) IS FALSE))) DESC, CAST((((v0.c0))>((v0.c2))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON 0.03207257168837452 ORDER BY (+ (v0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, (COALESCE(v0.c0, v0.c2) IN (((v0.c0) IS FALSE))) DESC, CAST((((v0.c0))>((v0.c2))) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON 0.03207257168837452 WHERE ((- (v0.c0)) COLLATE RTRIM) ORDER BY (+ (v0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, (COALESCE(v0.c0, v0.c2) IN (((v0.c0) IS FALSE))) DESC, CAST((((v0.c0))>((v0.c2))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON 0.03207257168837452 ORDER BY (+ (v0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, (COALESCE(v0.c0, v0.c2) IN (((v0.c0) IS FALSE))) DESC, CAST((((v0.c0))>((v0.c2))) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON 0.03207257168837452 WHERE ((- (v0.c0)) COLLATE RTRIM) ORDER BY (+ (v0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, (COALESCE(v0.c0, v0.c2) IN (((v0.c0) IS FALSE))) DESC, CAST((((v0.c0))>((v0.c2))) AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((t0.c86)AND(t0.c32)))OR(vt0.c0)))<(((vt0.c0)>(vt0.c0))))) ORDER BY 0.7729358266156183 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c86)AND(t0.c32)))OR(vt0.c0)))<(((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY 0.7729358266156183 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((t0.c86)AND(t0.c32)))OR(vt0.c0)))<(((vt0.c0)>(vt0.c0))))) ORDER BY 0.7729358266156183 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c86)AND(t0.c32)))OR(vt0.c0)))<(((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY 0.7729358266156183 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((t0.c86)AND(t0.c32)))OR(vt0.c0)))<(((vt0.c0)>(vt0.c0))))) ORDER BY 0.7729358266156183 ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((('-2062702671') NOT BETWEEN (ABS(DISTINCT t0.c86)) AND ((((0.7507799629052114)) NOT BETWEEN ((t0.c86)) AND ((t0.c86))))));
SELECT SUM(count) FROM (SELECT ALL (((('-2062702671') NOT BETWEEN (ABS(DISTINCT t0.c86)) AND ((((0.7507799629052114)) NOT BETWEEN ((t0.c86)) AND ((t0.c86)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((('-2062702671') NOT BETWEEN (ABS(DISTINCT t0.c86)) AND ((((0.7507799629052114)) NOT BETWEEN ((t0.c86)) AND ((t0.c86))))));
SELECT SUM(count) FROM (SELECT ALL (((('-2062702671') NOT BETWEEN (ABS(DISTINCT t0.c86)) AND ((((0.7507799629052114)) NOT BETWEEN ((t0.c86)) AND ((t0.c86)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((('-2062702671') NOT BETWEEN (ABS(DISTINCT t0.c86)) AND ((((0.7507799629052114)) NOT BETWEEN ((t0.c86)) AND ((t0.c86))))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON v0.c0 FULL OUTER JOIN v0 ON ((v0.c0)&(t0.c13)) COLLATE NOCASE COLLATE NOCASE WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON v0.c0 FULL OUTER JOIN v0 ON ((v0.c0)&(t0.c13)) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON v0.c0 FULL OUTER JOIN v0 ON ((v0.c0)&(t0.c13)) COLLATE NOCASE COLLATE NOCASE WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON v0.c0 FULL OUTER JOIN v0 ON ((v0.c0)&(t0.c13)) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 WHERE ((((CASE WHEN x'' THEN t0.c86 ELSE t0.c32 END, ((t0.c13)==(t0.c32)), CASE WHEN t0.c86 THEN t0.c13 END))>((((((t0.c13)AND(t0.c13)))AND(t0.c13)), x'', x''))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN x'' THEN t0.c86 ELSE t0.c32 END, ((t0.c13)=(t0.c32)), CASE WHEN t0.c86 THEN t0.c13 END))>((((((t0.c13)AND(t0.c13)))AND(t0.c13)), x'', x'')))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((CASE WHEN x'' THEN t0.c86 ELSE t0.c32 END, ((t0.c13)==(t0.c32)), CASE WHEN t0.c86 THEN t0.c13 END))>((((((t0.c13)AND(t0.c13)))AND(t0.c13)), x'', x''))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN x'' THEN t0.c86 ELSE t0.c32 END, ((t0.c13)=(t0.c32)), CASE WHEN t0.c86 THEN t0.c13 END))>((((((t0.c13)AND(t0.c13)))AND(t0.c13)), x'', x'')))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((CASE WHEN x'' THEN t0.c86 ELSE t0.c32 END, ((t0.c13)==(t0.c32)), CASE WHEN t0.c86 THEN t0.c13 END))>((((((t0.c13)AND(t0.c13)))AND(t0.c13)), x'', x''))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((v0.c1) IS FALSE) IN ()) RIGHT OUTER JOIN vt0 ON 'Q>驅\4廏.' WHERE (CAST(((t0.c86) NOT NULL) AS NUMERIC)) ORDER BY ((((((((((v0.c2)OR(t0.c13)))AND(v0.c0)))AND(v0.c2)))OR(t0.c86)))GLOB((+ (t0.c13))));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c86) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((v0.c1) IS FALSE) IN ()) RIGHT OUTER JOIN vt0 ON 'Q>驅\4廏.' ORDER BY ((((((((((v0.c2)OR(t0.c13)))AND(v0.c0)))AND(v0.c2)))OR(t0.c86)))GLOB((+ (t0.c13)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((v0.c1) IS FALSE) IN ()) RIGHT OUTER JOIN vt0 ON 'Q>驅\4廏.' WHERE (CAST(((t0.c86) NOT NULL) AS NUMERIC)) ORDER BY ((((((((((v0.c2)OR(t0.c13)))AND(v0.c0)))AND(v0.c2)))OR(t0.c86)))GLOB((+ (t0.c13))));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c86) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((v0.c1) IS FALSE) IN ()) RIGHT OUTER JOIN vt0 ON 'Q>驅\4廏.' ORDER BY ((((((((((v0.c2)OR(t0.c13)))AND(v0.c0)))AND(v0.c2)))OR(t0.c86)))GLOB((+ (t0.c13)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((v0.c1) IS FALSE) IN ()) RIGHT OUTER JOIN vt0 ON 'Q>驅\4廏.' WHERE (CAST(((t0.c86) NOT NULL) AS NUMERIC)) ORDER BY ((((((((((v0.c2)OR(t0.c13)))AND(v0.c0)))AND(v0.c2)))OR(t0.c86)))GLOB((+ (t0.c13))));
SELECT ALL COUNT(*) FROM v0, t0 FULL OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM)&((((t0.c86))=((t0.c13))))) WHERE ((((((((t0.c32))>((vt0.c0))))AND(((vt0.c0) BETWEEN (t0.c32) AND (t0.c86)))))OR(CAST(t0.c32 AS REAL)))) ORDER BY ((CASE WHEN t0.c86 THEN vt0.c0 END) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c32))>((vt0.c0))))AND(((vt0.c0) BETWEEN (t0.c32) AND (t0.c86)))))OR(CAST(t0.c32 AS REAL)))) IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM)&((((t0.c86))==((t0.c13))))) ORDER BY ((CASE WHEN t0.c86 THEN vt0.c0 END) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 FULL OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM)&((((t0.c86))=((t0.c13))))) WHERE ((((((((t0.c32))>((vt0.c0))))AND(((vt0.c0) BETWEEN (t0.c32) AND (t0.c86)))))OR(CAST(t0.c32 AS REAL)))) ORDER BY ((CASE WHEN t0.c86 THEN vt0.c0 END) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c32))>((vt0.c0))))AND(((vt0.c0) BETWEEN (t0.c32) AND (t0.c86)))))OR(CAST(t0.c32 AS REAL)))) IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM)&((((t0.c86))==((t0.c13))))) ORDER BY ((CASE WHEN t0.c86 THEN vt0.c0 END) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 FULL OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM)&((((t0.c86))=((t0.c13))))) WHERE ((((((((t0.c32))>((vt0.c0))))AND(((vt0.c0) BETWEEN (t0.c32) AND (t0.c86)))))OR(CAST(t0.c32 AS REAL)))) ORDER BY ((CASE WHEN t0.c86 THEN vt0.c0 END) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE ((((v0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((((t0.c32) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((((t0.c32) ISNULL))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE ((((v0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((((t0.c32) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((((t0.c32) ISNULL))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE ((((v0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((((t0.c32) ISNULL)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c32)||(t0.c13))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c32)||(t0.c13))) NOT NULL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c32)||(t0.c13))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c32)||(t0.c13))) NOT NULL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c32)||(t0.c13))) NOT NULL));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM v0, vt0 WHERE ('-462529650' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('-462529650' COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ('-462529650' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('-462529650' COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ('-462529650' COLLATE BINARY);
SELECT COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c1, (~ (v0.c0)), ((v0.c0) IS TRUE))) AND ((CAST(v0.c2 AS TEXT), v0.c1, json_object(v0.c1, v0.c2, v0.c2, v0.c2, v0.c0, v0.c0)))), CAST(v0.c2 COLLATE BINARY AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c1, (~ (v0.c0)), ((v0.c0) IS TRUE))) AND ((CAST(v0.c2 AS TEXT), v0.c1, json_object(v0.c1, v0.c2, v0.c2, v0.c2, v0.c0, v0.c0)))), CAST(v0.c2 COLLATE BINARY AS NUMERIC));
SELECT COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c1, (~ (v0.c0)), ((v0.c0) IS TRUE))) AND ((CAST(v0.c2 AS TEXT), v0.c1, json_object(v0.c1, v0.c2, v0.c2, v0.c2, v0.c0, v0.c0)))), CAST(v0.c2 COLLATE BINARY AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c1, (~ (v0.c0)), ((v0.c0) IS TRUE))) AND ((CAST(v0.c2 AS TEXT), v0.c1, json_object(v0.c1, v0.c2, v0.c2, v0.c2, v0.c0, v0.c0)))), CAST(v0.c2 COLLATE BINARY AS NUMERIC));
SELECT COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c1, (~ (v0.c0)), ((v0.c0) IS TRUE))) AND ((CAST(v0.c2 AS TEXT), v0.c1, json_object(v0.c1, v0.c2, v0.c2, v0.c2, v0.c0, v0.c0)))), CAST(v0.c2 COLLATE BINARY AS NUMERIC);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((CASE WHEN t0.c32 THEN t0.c32 ELSE t0.c13 END))<((CAST(t0.c13 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c32 THEN t0.c32 ELSE t0.c13 END))<((CAST(t0.c13 AS NUMERIC))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((CASE WHEN t0.c32 THEN t0.c32 ELSE t0.c13 END))<((CAST(t0.c13 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c32 THEN t0.c32 ELSE t0.c13 END))<((CAST(t0.c13 AS NUMERIC))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((CASE WHEN t0.c32 THEN t0.c32 ELSE t0.c13 END))<((CAST(t0.c13 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c32 COLLATE RTRIM)|(((t0.c32) IS FALSE)))) ORDER BY (((((t0.c13))>=((t0.c86)))) NOT BETWEEN (((t0.c32)+(NULL))) AND ((('X+')GLOB(x'786b1cfb'))))  NULLS LAST, ((((t0.c86)AND(x'a57a'))) BETWEEN ((((t0.c32))>=((t0.c86)))) AND (IFNULL(t0.c86, t0.c13))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c32 COLLATE RTRIM)|(((t0.c32) IS FALSE)))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c13))>=((t0.c86)))) NOT BETWEEN (((t0.c32)+(NULL))) AND ((('X+')GLOB(x'786b1cfb'))))  NULLS LAST, ((((t0.c86)AND(x'a57a'))) BETWEEN ((((t0.c32))>=((t0.c86)))) AND (IFNULL(t0.c86, t0.c13))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c32 COLLATE RTRIM)|(((t0.c32) IS FALSE)))) ORDER BY (((((t0.c13))>=((t0.c86)))) NOT BETWEEN (((t0.c32)+(NULL))) AND ((('X+')GLOB(x'786b1cfb'))))  NULLS LAST, ((((t0.c86)AND(x'a57a'))) BETWEEN ((((t0.c32))>=((t0.c86)))) AND (IFNULL(t0.c86, t0.c13))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c32 COLLATE RTRIM)|(((t0.c32) IS FALSE)))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c13))>=((t0.c86)))) NOT BETWEEN (((t0.c32)+(NULL))) AND ((('X+')GLOB(x'786b1cfb'))))  NULLS LAST, ((((t0.c86)AND(x'a57a'))) BETWEEN ((((t0.c32))>=((t0.c86)))) AND (IFNULL(t0.c86, t0.c13))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c32 COLLATE RTRIM)|(((t0.c32) IS FALSE)))) ORDER BY (((((t0.c13))>=((t0.c86)))) NOT BETWEEN (((t0.c32)+(NULL))) AND ((('X+')GLOB(x'786b1cfb'))))  NULLS LAST, ((((t0.c86)AND(x'a57a'))) BETWEEN ((((t0.c32))>=((t0.c86)))) AND (IFNULL(t0.c86, t0.c13))) DESC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0)||(t0.c86)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)||(t0.c86)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0)||(t0.c86)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)||(t0.c86)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0)||(t0.c86)) IN ()));
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (((vt0.c0 IN ()))))) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)AND(vt0.c0))) AND ((vt0.c0 IN (vt0.c0, vt0.c0))))  NULLS LAST, ((((vt0.c0)IS(vt0.c0))) IS TRUE) DESC, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)AND(vt0.c0))) AND ((vt0.c0 IN (vt0.c0, vt0.c0))))  NULLS LAST, ((((vt0.c0)IS(vt0.c0))) IS TRUE) DESC, vt0.c0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (((vt0.c0 IN ()))))) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)AND(vt0.c0))) AND ((vt0.c0 IN (vt0.c0, vt0.c0))))  NULLS LAST, ((((vt0.c0)IS(vt0.c0))) IS TRUE) DESC, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)AND(vt0.c0))) AND ((vt0.c0 IN (vt0.c0, vt0.c0))))  NULLS LAST, ((((vt0.c0)IS(vt0.c0))) IS TRUE) DESC, vt0.c0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (((vt0.c0 IN ()))))) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)AND(vt0.c0))) AND ((vt0.c0 IN (vt0.c0, vt0.c0))))  NULLS LAST, ((((vt0.c0)IS(vt0.c0))) IS TRUE) DESC, vt0.c0;
SELECT ALL * FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (x'');
SELECT ALL * FROM t0 WHERE (CAST((~ (t0.c13)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c13)) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST((~ (t0.c13)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c13)) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST((~ (t0.c13)) AS INTEGER));
SELECT * FROM v0, t0 WHERE ((((v0.c2) ISNULL) IN ())) ORDER BY v0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2) ISNULL) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY v0.c1  NULLS FIRST);
SELECT * FROM v0, t0 WHERE ((((v0.c2) ISNULL) IN ())) ORDER BY v0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2) ISNULL) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY v0.c1  NULLS FIRST);
SELECT * FROM v0, t0 WHERE ((((v0.c2) ISNULL) IN ())) ORDER BY v0.c1  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (json_extract(((v0.c0) NOTNULL), SQLITE_SOURCE_ID()));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(((v0.c0) NOTNULL), SQLITE_SOURCE_ID())) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (json_extract(((v0.c0) NOTNULL), SQLITE_SOURCE_ID()));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(((v0.c0) NOTNULL), SQLITE_SOURCE_ID())) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, vt0 INNER JOIN v0 ON (((v0.c2 COLLATE NOCASE, ROUND(t0.c32, NULL), (((t0.c86, v0.c1, v0.c2)) BETWEEN ((v0.c2, vt0.c0, NULL)) AND ((t0.c32, v0.c2, t0.c86)))))<((((t0.c32)>>(v0.c0)), ((((t0.c86)AND(t0.c32)))AND(vt0.c0)), highlight(vt0.c0, v0.c0, t0.c13, v0.c1)))) WHERE (TYPEOF(DISTINCT LOWER(t0.c32))) ORDER BY ((CAST(t0.c32 AS INTEGER)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT LOWER(t0.c32))) IS TRUE)  as count FROM t0, vt0 INNER JOIN v0 ON (((v0.c2 COLLATE NOCASE, ROUND(t0.c32, NULL), (((t0.c86, v0.c1, v0.c2)) BETWEEN ((v0.c2, vt0.c0, NULL)) AND ((t0.c32, v0.c2, t0.c86)))))<((((t0.c32)>>(v0.c0)), ((((t0.c86)AND(t0.c32)))AND(vt0.c0)), highlight(vt0.c0, v0.c0, t0.c13, v0.c1)))) ORDER BY ((CAST(t0.c32 AS INTEGER)) IS TRUE) DESC);
SELECT ALL * FROM t0, vt0 INNER JOIN v0 ON (((v0.c2 COLLATE NOCASE, ROUND(t0.c32, NULL), (((t0.c86, v0.c1, v0.c2)) BETWEEN ((v0.c2, vt0.c0, NULL)) AND ((t0.c32, v0.c2, t0.c86)))))<((((t0.c32)>>(v0.c0)), ((((t0.c86)AND(t0.c32)))AND(vt0.c0)), highlight(vt0.c0, v0.c0, t0.c13, v0.c1)))) WHERE (TYPEOF(DISTINCT LOWER(t0.c32))) ORDER BY ((CAST(t0.c32 AS INTEGER)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT LOWER(t0.c32))) IS TRUE)  as count FROM t0, vt0 INNER JOIN v0 ON (((v0.c2 COLLATE NOCASE, ROUND(t0.c32, NULL), (((t0.c86, v0.c1, v0.c2)) BETWEEN ((v0.c2, vt0.c0, NULL)) AND ((t0.c32, v0.c2, t0.c86)))))<((((t0.c32)>>(v0.c0)), ((((t0.c86)AND(t0.c32)))AND(vt0.c0)), highlight(vt0.c0, v0.c0, t0.c13, v0.c1)))) ORDER BY ((CAST(t0.c32 AS INTEGER)) IS TRUE) DESC);
SELECT ALL * FROM t0, vt0 INNER JOIN v0 ON (((v0.c2 COLLATE NOCASE, ROUND(t0.c32, NULL), (((t0.c86, v0.c1, v0.c2)) BETWEEN ((v0.c2, vt0.c0, NULL)) AND ((t0.c32, v0.c2, t0.c86)))))<((((t0.c32)>>(v0.c0)), ((((t0.c86)AND(t0.c32)))AND(vt0.c0)), highlight(vt0.c0, v0.c0, t0.c13, v0.c1)))) WHERE (TYPEOF(DISTINCT LOWER(t0.c32))) ORDER BY ((CAST(t0.c32 AS INTEGER)) IS TRUE) DESC;
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c13 THEN t0.c86 COLLATE BINARY WHEN CAST(t0.c32 AS REAL) THEN ((t0.c32)+(t0.c86)) WHEN CAST(t0.c13 AS REAL) THEN x'' WHEN -1602603693 THEN ((t0.c13) IS FALSE) WHEN t0.c32 THEN (- (t0.c32)) ELSE HEX(DISTINCT t0.c86) END) ORDER BY CAST(((((t0.c32)OR(-2146180670)))AND(t0.c32)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c13 THEN t0.c86 COLLATE BINARY WHEN CAST(t0.c32 AS REAL) THEN ((t0.c32)+(t0.c86)) WHEN CAST(t0.c13 AS REAL) THEN x'' WHEN -1602603693 THEN ((t0.c13) IS FALSE) WHEN t0.c32 THEN (- (t0.c32)) ELSE HEX(DISTINCT t0.c86) END) IS TRUE)  as count FROM t0 ORDER BY CAST(((((t0.c32)OR(-2146180670)))AND(t0.c32)) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c13 THEN t0.c86 COLLATE BINARY WHEN CAST(t0.c32 AS REAL) THEN ((t0.c32)+(t0.c86)) WHEN CAST(t0.c13 AS REAL) THEN x'' WHEN -1602603693 THEN ((t0.c13) IS FALSE) WHEN t0.c32 THEN (- (t0.c32)) ELSE HEX(DISTINCT t0.c86) END) ORDER BY CAST(((((t0.c32)OR(-2146180670)))AND(t0.c32)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c13 THEN t0.c86 COLLATE BINARY WHEN CAST(t0.c32 AS REAL) THEN ((t0.c32)+(t0.c86)) WHEN CAST(t0.c13 AS REAL) THEN x'' WHEN -1602603693 THEN ((t0.c13) IS FALSE) WHEN t0.c32 THEN (- (t0.c32)) ELSE HEX(DISTINCT t0.c86) END) IS TRUE)  as count FROM t0 ORDER BY CAST(((((t0.c32)OR(-2146180670)))AND(t0.c32)) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c13 THEN t0.c86 COLLATE BINARY WHEN CAST(t0.c32 AS REAL) THEN ((t0.c32)+(t0.c86)) WHEN CAST(t0.c13 AS REAL) THEN x'' WHEN -1602603693 THEN ((t0.c13) IS FALSE) WHEN t0.c32 THEN (- (t0.c32)) ELSE HEX(DISTINCT t0.c86) END) ORDER BY CAST(((((t0.c32)OR(-2146180670)))AND(t0.c32)) AS INTEGER)  NULLS FIRST;
SELECT * FROM v0 WHERE (CAST(v0.c1 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c1 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c1 AS BLOB) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ('') ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, t0, vt0 ORDER BY x'' ASC);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ('') ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, t0, vt0 ORDER BY x'' ASC);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ('') ORDER BY x'' ASC;
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (t0.c13) ORDER BY COALESCE(DISTINCT (v0.c2 IN ()), ((t0.c13)LIKE(v0.c1))) ASC, (((((t0.c13) NOT BETWEEN (v0.c2) AND (v0.c0))))!=((v0.c1)));
SELECT SUM(count) FROM (SELECT ((t0.c13) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY COALESCE(DISTINCT (v0.c2 IN ()), ((t0.c13)LIKE(v0.c1))) ASC, (((((t0.c13) NOT BETWEEN (v0.c2) AND (v0.c0))))<>((v0.c1))));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (t0.c13) ORDER BY COALESCE(DISTINCT (v0.c2 IN ()), ((t0.c13)LIKE(v0.c1))) ASC, (((((t0.c13) NOT BETWEEN (v0.c2) AND (v0.c0))))!=((v0.c1)));
SELECT SUM(count) FROM (SELECT ((t0.c13) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY COALESCE(DISTINCT (v0.c2 IN ()), ((t0.c13)LIKE(v0.c1))) ASC, (((((t0.c13) NOT BETWEEN (v0.c2) AND (v0.c0))))<>((v0.c1))));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (t0.c13) ORDER BY COALESCE(DISTINCT (v0.c2 IN ()), ((t0.c13)LIKE(v0.c1))) ASC, (((((t0.c13) NOT BETWEEN (v0.c2) AND (v0.c0))))!=((v0.c1)));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((((v0.c1) BETWEEN (t0.c86) AND (t0.c32))) NOTNULL) RIGHT OUTER JOIN vt0 ON (((((vt0.c0, t0.c13, x'')) BETWEEN ((t0.c86, v0.c2, v0.c0)) AND ((t0.c32, '', v0.c1)))) ISNULL) WHERE ((((t0.c86 IN (v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c86 IN (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((((v0.c1) BETWEEN (t0.c86) AND (t0.c32))) NOTNULL) RIGHT OUTER JOIN vt0 ON (((((vt0.c0, t0.c13, x'')) BETWEEN ((t0.c86, v0.c2, v0.c0)) AND ((t0.c32, '', v0.c1)))) ISNULL));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((((v0.c1) BETWEEN (t0.c86) AND (t0.c32))) NOTNULL) RIGHT OUTER JOIN vt0 ON (((((vt0.c0, t0.c13, x'')) BETWEEN ((t0.c86, v0.c2, v0.c0)) AND ((t0.c32, '', v0.c1)))) ISNULL) WHERE ((((t0.c86 IN (v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c86 IN (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((((v0.c1) BETWEEN (t0.c86) AND (t0.c32))) NOTNULL) RIGHT OUTER JOIN vt0 ON (((((vt0.c0, t0.c13, x'')) BETWEEN ((t0.c86, v0.c2, v0.c0)) AND ((t0.c32, '', v0.c1)))) ISNULL));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((((v0.c1) BETWEEN (t0.c86) AND (t0.c32))) NOTNULL) RIGHT OUTER JOIN vt0 ON (((((vt0.c0, t0.c13, x'')) BETWEEN ((t0.c86, v0.c2, v0.c0)) AND ((t0.c32, '', v0.c1)))) ISNULL) WHERE ((((t0.c86 IN (v0.c0))) IS TRUE));
SELECT COUNT(*) FROM t0 WHERE (TRIM(DISTINCT (t0.c86 IN (t0.c86))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (t0.c86 IN (t0.c86)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TRIM(DISTINCT (t0.c86 IN (t0.c86))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (t0.c86 IN (t0.c86)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TRIM(DISTINCT (t0.c86 IN (t0.c86))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(LIKELY(vt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(vt0.c0) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(LIKELY(vt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(vt0.c0) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(LIKELY(vt0.c0) AS BLOB));
SELECT * FROM v0, vt0 WHERE (CAST(0.06892688606952102 AS BLOB) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.06892688606952102 AS BLOB) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST(0.06892688606952102 AS BLOB) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.06892688606952102 AS BLOB) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST(0.06892688606952102 AS BLOB) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)>(NULL)) AS REAL)) ORDER BY (+ (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>(NULL)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)>(NULL)) AS REAL)) ORDER BY (+ (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>(NULL)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)>(NULL)) AS REAL)) ORDER BY (+ (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))));
SELECT * FROM v0 WHERE (((((((1082209274)AND(v0.c0)))AND(v0.c1)))>(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((1082209274)AND(v0.c0)))AND(v0.c1)))>(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((1082209274)AND(v0.c0)))AND(v0.c1)))>(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((1082209274)AND(v0.c0)))AND(v0.c1)))>(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((1082209274)AND(v0.c0)))AND(v0.c1)))>(((v0.c0) ISNULL))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((- (v0.c0)) IN (((v0.c0)<(v0.c1))))) ORDER BY ((((v0.c2) IS FALSE)) NOT BETWEEN (((((((((x'902f4b9f')AND(v0.c2)))AND(v0.c1)))AND(v0.c0)))OR(v0.c0))) AND (vt0.c0)), CAST(((v0.c0)-('-51327241')) AS TEXT) DESC  NULLS FIRST, CAST(v0.c2 AS TEXT) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((- (v0.c0)) IN (((v0.c0)<(v0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c2) IS FALSE)) NOT BETWEEN (((((((((x'902f4b9f')AND(v0.c2)))AND(v0.c1)))AND(v0.c0)))OR(v0.c0))) AND (vt0.c0)), CAST(((v0.c0)-('-51327241')) AS TEXT) DESC  NULLS FIRST, CAST(v0.c2 AS TEXT) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, vt0 WHERE (((- (v0.c0)) IN (((v0.c0)<(v0.c1))))) ORDER BY ((((v0.c2) IS FALSE)) NOT BETWEEN (((((((((x'902f4b9f')AND(v0.c2)))AND(v0.c1)))AND(v0.c0)))OR(v0.c0))) AND (vt0.c0)), CAST(((v0.c0)-('-51327241')) AS TEXT) DESC  NULLS FIRST, CAST(v0.c2 AS TEXT) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((- (v0.c0)) IN (((v0.c0)<(v0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c2) IS FALSE)) NOT BETWEEN (((((((((x'902f4b9f')AND(v0.c2)))AND(v0.c1)))AND(v0.c0)))OR(v0.c0))) AND (vt0.c0)), CAST(((v0.c0)-('-51327241')) AS TEXT) DESC  NULLS FIRST, CAST(v0.c2 AS TEXT) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, vt0 WHERE (((- (v0.c0)) IN (((v0.c0)<(v0.c1))))) ORDER BY ((((v0.c2) IS FALSE)) NOT BETWEEN (((((((((x'902f4b9f')AND(v0.c2)))AND(v0.c1)))AND(v0.c0)))OR(v0.c0))) AND (vt0.c0)), CAST(((v0.c0)-('-51327241')) AS TEXT) DESC  NULLS FIRST, CAST(v0.c2 AS TEXT) COLLATE RTRIM;
SELECT * FROM t0, v0, vt0 WHERE (CAST(CAST(v0.c0 AS INTEGER) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS INTEGER) AS REAL)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE (CAST(CAST(v0.c0 AS INTEGER) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS INTEGER) AS REAL)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE (CAST(CAST(v0.c0 AS INTEGER) AS REAL));
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((NOT (vt0.c0))))) ORDER BY ((vt0.c0 IN ()) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((NOT (vt0.c0))))) ORDER BY ((vt0.c0 IN ()) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((NOT (vt0.c0))))) ORDER BY ((vt0.c0 IN ()) IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULLIF(vt0.c0, vt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((NULLIF(vt0.c0, vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULLIF(vt0.c0, vt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((NULLIF(vt0.c0, vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULLIF(vt0.c0, vt0.c0)) IS FALSE));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((v0.c1)<(IFNULL(DISTINCT t0.c32, v0.c2))));
SELECT SUM(count) FROM (SELECT ((((v0.c1)<(IFNULL(DISTINCT t0.c32, v0.c2)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((v0.c1)<(IFNULL(DISTINCT t0.c32, v0.c2))));
SELECT SUM(count) FROM (SELECT ((((v0.c1)<(IFNULL(DISTINCT t0.c32, v0.c2)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((v0.c1)<(IFNULL(DISTINCT t0.c32, v0.c2))));
SELECT * FROM v0 NATURAL JOIN t0 WHERE ((((((('Nb48鱦')>=(t0.c86)))OR(((v0.c2)<>(t0.c32)))))AND(DATETIME(v0.c2, t0.c13, v0.c0))));
SELECT SUM(count) FROM (SELECT (((((((('Nb48鱦')>=(t0.c86)))OR(((v0.c2)!=(t0.c32)))))AND(DATETIME(v0.c2, t0.c13, v0.c0)))) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT * FROM v0 NATURAL JOIN t0 WHERE ((((((('Nb48鱦')>=(t0.c86)))OR(((v0.c2)<>(t0.c32)))))AND(DATETIME(v0.c2, t0.c13, v0.c0))));
SELECT SUM(count) FROM (SELECT (((((((('Nb48鱦')>=(t0.c86)))OR(((v0.c2)!=(t0.c32)))))AND(DATETIME(v0.c2, t0.c13, v0.c0)))) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT * FROM v0 NATURAL JOIN t0 WHERE ((((((('Nb48鱦')>=(t0.c86)))OR(((v0.c2)<>(t0.c32)))))AND(DATETIME(v0.c2, t0.c13, v0.c0))));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((t0.c32, x'', v0.c2)) BETWEEN ((((vt0.c0)<(t0.c86)), ((t0.c32) IS FALSE), CASE t0.c86  WHEN v0.c1 THEN v0.c1 END)) AND (((('466063211')<<(vt0.c0)), CASE WHEN 'M\r' THEN v0.c0 WHEN t0.c13 THEN t0.c13 WHEN t0.c32 THEN v0.c1 END, (+ (v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c32, x'', v0.c2)) BETWEEN ((((vt0.c0)<(t0.c86)), ((t0.c32) IS FALSE), CASE t0.c86  WHEN v0.c1 THEN v0.c1 END)) AND (((('466063211')<<(vt0.c0)), CASE WHEN 'M\r' THEN v0.c0 WHEN t0.c13 THEN t0.c13 WHEN t0.c32 THEN v0.c1 END, (+ (v0.c2)))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((t0.c32, x'', v0.c2)) BETWEEN ((((vt0.c0)<(t0.c86)), ((t0.c32) IS FALSE), CASE t0.c86  WHEN v0.c1 THEN v0.c1 END)) AND (((('466063211')<<(vt0.c0)), CASE WHEN 'M\r' THEN v0.c0 WHEN t0.c13 THEN t0.c13 WHEN t0.c32 THEN v0.c1 END, (+ (v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c32, x'', v0.c2)) BETWEEN ((((vt0.c0)<(t0.c86)), ((t0.c32) IS FALSE), CASE t0.c86  WHEN v0.c1 THEN v0.c1 END)) AND (((('466063211')<<(vt0.c0)), CASE WHEN 'M\r' THEN v0.c0 WHEN t0.c13 THEN t0.c13 WHEN t0.c32 THEN v0.c1 END, (+ (v0.c2)))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((t0.c32, x'', v0.c2)) BETWEEN ((((vt0.c0)<(t0.c86)), ((t0.c32) IS FALSE), CASE t0.c86  WHEN v0.c1 THEN v0.c1 END)) AND (((('466063211')<<(vt0.c0)), CASE WHEN 'M\r' THEN v0.c0 WHEN t0.c13 THEN t0.c13 WHEN t0.c32 THEN v0.c1 END, (+ (v0.c2))))));
SELECT * FROM vt0 CROSS JOIN t0 ON (((t0.c32)) NOT BETWEEN ((((t0.c13)+(v0.c1)))) AND ((v0.c0))) LEFT OUTER JOIN v0 ON ((((UNLIKELY(v0.c2))OR(CASE -2.142873708E9  WHEN v0.c0 THEN v0.c0 END)))AND((((t0.c32))!=((t0.c86))))) WHERE ((((((v0.c1 IN ()))OR(t0.c32)))OR(((v0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((((v0.c1 IN ()))OR(t0.c32)))OR(((v0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((t0.c32)) NOT BETWEEN ((((t0.c13)+(v0.c1)))) AND ((v0.c0))) LEFT OUTER JOIN v0 ON ((((UNLIKELY(v0.c2))OR(CASE -2.142873708E9  WHEN v0.c0 THEN v0.c0 END)))AND((((t0.c32))<>((t0.c86))))));
SELECT * FROM vt0 CROSS JOIN t0 ON (((t0.c32)) NOT BETWEEN ((((t0.c13)+(v0.c1)))) AND ((v0.c0))) LEFT OUTER JOIN v0 ON ((((UNLIKELY(v0.c2))OR(CASE -2.142873708E9  WHEN v0.c0 THEN v0.c0 END)))AND((((t0.c32))!=((t0.c86))))) WHERE ((((((v0.c1 IN ()))OR(t0.c32)))OR(((v0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((((v0.c1 IN ()))OR(t0.c32)))OR(((v0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((t0.c32)) NOT BETWEEN ((((t0.c13)+(v0.c1)))) AND ((v0.c0))) LEFT OUTER JOIN v0 ON ((((UNLIKELY(v0.c2))OR(CASE -2.142873708E9  WHEN v0.c0 THEN v0.c0 END)))AND((((t0.c32))<>((t0.c86))))));
SELECT * FROM vt0 CROSS JOIN t0 ON (((t0.c32)) NOT BETWEEN ((((t0.c13)+(v0.c1)))) AND ((v0.c0))) LEFT OUTER JOIN v0 ON ((((UNLIKELY(v0.c2))OR(CASE -2.142873708E9  WHEN v0.c0 THEN v0.c0 END)))AND((((t0.c32))!=((t0.c86))))) WHERE ((((((v0.c1 IN ()))OR(t0.c32)))OR(((v0.c1) IS FALSE))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((('_>~NS\nDVK' COLLATE RTRIM) NOT NULL)) ORDER BY ((((((((t0.c13 COLLATE RTRIM)AND(((t0.c13) ISNULL))))OR((~ (v0.c0)))))AND(CASE v0.c0  WHEN t0.c13 THEN -594426651 END)))OR(((((v0.c2)OR(t0.c32)))OR(v0.c2))));
SELECT SUM(count) FROM (SELECT (((('_>~NS\nDVK' COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM v0, t0 ORDER BY ((((((((t0.c13 COLLATE RTRIM)AND(((t0.c13) ISNULL))))OR((~ (v0.c0)))))AND(CASE v0.c0  WHEN t0.c13 THEN -594426651 END)))OR(((((v0.c2)OR(t0.c32)))OR(v0.c2)))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((('_>~NS\nDVK' COLLATE RTRIM) NOT NULL)) ORDER BY ((((((((t0.c13 COLLATE RTRIM)AND(((t0.c13) ISNULL))))OR((~ (v0.c0)))))AND(CASE v0.c0  WHEN t0.c13 THEN -594426651 END)))OR(((((v0.c2)OR(t0.c32)))OR(v0.c2))));
SELECT SUM(count) FROM (SELECT (((('_>~NS\nDVK' COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM v0, t0 ORDER BY ((((((((t0.c13 COLLATE RTRIM)AND(((t0.c13) ISNULL))))OR((~ (v0.c0)))))AND(CASE v0.c0  WHEN t0.c13 THEN -594426651 END)))OR(((((v0.c2)OR(t0.c32)))OR(v0.c2)))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((('_>~NS\nDVK' COLLATE RTRIM) NOT NULL)) ORDER BY ((((((((t0.c13 COLLATE RTRIM)AND(((t0.c13) ISNULL))))OR((~ (v0.c0)))))AND(CASE v0.c0  WHEN t0.c13 THEN -594426651 END)))OR(((((v0.c2)OR(t0.c32)))OR(v0.c2))));
SELECT * FROM v0, t0 WHERE ((((v0.c1)) BETWEEN ((CASE t0.c13  WHEN t0.c32 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN t0.c86 END)) AND (((NOT (t0.c86))))));
SELECT SUM(count) FROM (SELECT (((((v0.c1)) BETWEEN ((CASE t0.c13  WHEN t0.c32 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN t0.c86 END)) AND (((NOT (t0.c86)))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((v0.c1)) BETWEEN ((CASE t0.c13  WHEN t0.c32 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN t0.c86 END)) AND (((NOT (t0.c86))))));
SELECT SUM(count) FROM (SELECT (((((v0.c1)) BETWEEN ((CASE t0.c13  WHEN t0.c32 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN t0.c86 END)) AND (((NOT (t0.c86)))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((v0.c1)) BETWEEN ((CASE t0.c13  WHEN t0.c32 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN t0.c86 END)) AND (((NOT (t0.c86))))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON (((((vt0.c0) BETWEEN (t0.c13) AND (v0.c2))))>((((t0.c32)*(v0.c1))))) RIGHT OUTER JOIN vt0 ON 0.37612179957388947 WHERE ((t0.c13 COLLATE RTRIM IN ())) ORDER BY ((CAST(t0.c13 AS BLOB)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((t0.c13 COLLATE RTRIM IN ())) IS TRUE)  as count FROM v0 INNER JOIN t0 ON (((((vt0.c0) BETWEEN (t0.c13) AND (v0.c2))))>((((t0.c32)*(v0.c1))))) RIGHT OUTER JOIN vt0 ON 0.37612179957388947 ORDER BY ((CAST(t0.c13 AS BLOB)) NOT NULL));
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON (((((vt0.c0) BETWEEN (t0.c13) AND (v0.c2))))>((((t0.c32)*(v0.c1))))) RIGHT OUTER JOIN vt0 ON 0.37612179957388947 WHERE ((t0.c13 COLLATE RTRIM IN ())) ORDER BY ((CAST(t0.c13 AS BLOB)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((t0.c13 COLLATE RTRIM IN ())) IS TRUE)  as count FROM v0 INNER JOIN t0 ON (((((vt0.c0) BETWEEN (t0.c13) AND (v0.c2))))>((((t0.c32)*(v0.c1))))) RIGHT OUTER JOIN vt0 ON 0.37612179957388947 ORDER BY ((CAST(t0.c13 AS BLOB)) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (x'' COLLATE BINARY) ORDER BY 0.8729186303145209 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.8729186303145209 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (x'' COLLATE BINARY) ORDER BY 0.8729186303145209 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.8729186303145209 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (x'' COLLATE BINARY) ORDER BY 0.8729186303145209 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 NOT INDEXED WHERE (((CASE v0.c1  WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c1  WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END) NOT NULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 NOT INDEXED WHERE (((CASE v0.c1  WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c1  WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END) NOT NULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 NOT INDEXED WHERE (((CASE v0.c1  WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (CAST(LENGTH(vt0.c0) AS BLOB)) ORDER BY (((NOT (vt0.c0)))>>(((vt0.c0)!=(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LENGTH(vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))>>(((vt0.c0)!=(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(LENGTH(vt0.c0) AS BLOB)) ORDER BY (((NOT (vt0.c0)))>>(((vt0.c0)!=(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LENGTH(vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))>>(((vt0.c0)!=(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(LENGTH(vt0.c0) AS BLOB)) ORDER BY (((NOT (vt0.c0)))>>(((vt0.c0)!=(vt0.c0)))) ASC;
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN v0 ON t0.c32 WHERE ((((((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) NOT NULL)) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN v0 ON t0.c32);
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN v0 ON t0.c32 WHERE ((((((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) NOT NULL)) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN v0 ON t0.c32);
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN v0 ON t0.c32 WHERE ((((((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) NOT NULL));
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c2))<>((''))))>>(IFNULL(v0.c1, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2))!=((''))))>>(IFNULL(v0.c1, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c2))<>((''))))>>(IFNULL(v0.c1, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2))!=((''))))>>(IFNULL(v0.c1, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c2))<>((''))))>>(IFNULL(v0.c1, v0.c0))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (v0.c1) AND (COALESCE('-1595108348', vt0.c0))) WHERE (CAST(SQLITE_COMPILEOPTION_GET(v0.c1) AS REAL)) ORDER BY (v0.c2 COLLATE RTRIM IN (NULL, ((v0.c2)<>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_COMPILEOPTION_GET(v0.c1) AS REAL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (v0.c1) AND (COALESCE('-1595108348', vt0.c0))) ORDER BY (v0.c2 COLLATE RTRIM IN (NULL, ((v0.c2)!=(vt0.c0)))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (v0.c1) AND (COALESCE('-1595108348', vt0.c0))) WHERE (CAST(SQLITE_COMPILEOPTION_GET(v0.c1) AS REAL)) ORDER BY (v0.c2 COLLATE RTRIM IN (NULL, ((v0.c2)<>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_COMPILEOPTION_GET(v0.c1) AS REAL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (v0.c1) AND (COALESCE('-1595108348', vt0.c0))) ORDER BY (v0.c2 COLLATE RTRIM IN (NULL, ((v0.c2)!=(vt0.c0)))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (v0.c1) AND (COALESCE('-1595108348', vt0.c0))) WHERE (CAST(SQLITE_COMPILEOPTION_GET(v0.c1) AS REAL)) ORDER BY (v0.c2 COLLATE RTRIM IN (NULL, ((v0.c2)<>(vt0.c0))));
SELECT ALL * FROM v0, t0 WHERE (((((t0.c13)IS(v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((t0.c13)) AND ((v0.c2)))) AND (CAST(v0.c0 AS TEXT)))) ORDER BY ((v0.c2)>(((t0.c86) ISNULL))) DESC, CAST((- (t0.c86)) AS NUMERIC)  NULLS FIRST, ((((v0.c0)OR(t0.c32))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c13)IS(v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((t0.c13)) AND ((v0.c2)))) AND (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0, t0 ORDER BY ((v0.c2)>(((t0.c86) ISNULL))) DESC, CAST((- (t0.c86)) AS NUMERIC)  NULLS FIRST, ((((v0.c0)OR(t0.c32))) NOT NULL) DESC);
SELECT ALL * FROM v0, t0 WHERE (((((t0.c13)IS(v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((t0.c13)) AND ((v0.c2)))) AND (CAST(v0.c0 AS TEXT)))) ORDER BY ((v0.c2)>(((t0.c86) ISNULL))) DESC, CAST((- (t0.c86)) AS NUMERIC)  NULLS FIRST, ((((v0.c0)OR(t0.c32))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c13)IS(v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((t0.c13)) AND ((v0.c2)))) AND (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0, t0 ORDER BY ((v0.c2)>(((t0.c86) ISNULL))) DESC, CAST((- (t0.c86)) AS NUMERIC)  NULLS FIRST, ((((v0.c0)OR(t0.c32))) NOT NULL) DESC);
SELECT ALL * FROM v0, t0 WHERE (((((t0.c13)IS(v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((t0.c13)) AND ((v0.c2)))) AND (CAST(v0.c0 AS TEXT)))) ORDER BY ((v0.c2)>(((t0.c86) ISNULL))) DESC, CAST((- (t0.c86)) AS NUMERIC)  NULLS FIRST, ((((v0.c0)OR(t0.c32))) NOT NULL) DESC;
SELECT * FROM v0, vt0 WHERE (((vt0.c0)||(((v0.c0)<<(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)||(((v0.c0)<<(v0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((vt0.c0)||(((v0.c0)<<(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)||(((v0.c0)<<(v0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((vt0.c0)||(((v0.c0)<<(v0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) NOT NULL)))>((TYPEOF(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOT NULL)))>((TYPEOF(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) NOT NULL)))>((TYPEOF(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOT NULL)))>((TYPEOF(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) NOT NULL)))>((TYPEOF(vt0.c0)))));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (NULL);
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON STRFTIME((~ (t0.c32)), (((v0.c1))<((t0.c13))), CAST(v0.c0 AS NUMERIC), t0.c86, ((((vt0.c0)OR(vt0.c0)))AND(v0.c2)), v0.c2, ((t0.c86) BETWEEN (vt0.c0) AND (t0.c32))) CROSS JOIN vt0 ON (((+ (t0.c32)))IS((t0.c86 IN ()))) WHERE (t0.c32);
SELECT SUM(count) FROM (SELECT ALL ((t0.c32) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON STRFTIME((~ (t0.c32)), (((v0.c1))<((t0.c13))), CAST(v0.c0 AS NUMERIC), t0.c86, ((((vt0.c0)OR(vt0.c0)))AND(v0.c2)), v0.c2, ((t0.c86) BETWEEN (vt0.c0) AND (t0.c32))) CROSS JOIN vt0 ON (((+ (t0.c32)))IS((t0.c86 IN ()))));
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON STRFTIME((~ (t0.c32)), (((v0.c1))<((t0.c13))), CAST(v0.c0 AS NUMERIC), t0.c86, ((((vt0.c0)OR(vt0.c0)))AND(v0.c2)), v0.c2, ((t0.c86) BETWEEN (vt0.c0) AND (t0.c32))) CROSS JOIN vt0 ON (((+ (t0.c32)))IS((t0.c86 IN ()))) WHERE (t0.c32);
SELECT SUM(count) FROM (SELECT ALL ((t0.c32) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON STRFTIME((~ (t0.c32)), (((v0.c1))<((t0.c13))), CAST(v0.c0 AS NUMERIC), t0.c86, ((((vt0.c0)OR(vt0.c0)))AND(v0.c2)), v0.c2, ((t0.c86) BETWEEN (vt0.c0) AND (t0.c32))) CROSS JOIN vt0 ON (((+ (t0.c32)))IS((t0.c86 IN ()))));
SELECT ALL * FROM v0, vt0, t0 WHERE (t0.c13) ORDER BY ((((t0.c32)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))) IN ()) DESC  NULLS LAST, ((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((x'0a3f'))), (- (t0.c32)), (t0.c86 IN (''))))<>(((((t0.c32))>((v0.c0))), (v0.c2 IN ()), (NOT (v0.c2))))) ASC  NULLS FIRST, (((((t0.c86) BETWEEN (t0.c32) AND (v0.c0))))<=((UPPER(DISTINCT v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c13) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((((t0.c32)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))) IN ()) DESC  NULLS LAST, ((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((x'0a3f'))), (- (t0.c32)), (t0.c86 IN (''))))!=(((((t0.c32))>((v0.c0))), (v0.c2 IN ()), (NOT (v0.c2))))) ASC  NULLS FIRST, (((((t0.c86) BETWEEN (t0.c32) AND (v0.c0))))<=((UPPER(DISTINCT v0.c2))))  NULLS FIRST);
SELECT ALL * FROM v0, vt0, t0 WHERE (t0.c13) ORDER BY ((((t0.c32)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))) IN ()) DESC  NULLS LAST, ((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((x'0a3f'))), (- (t0.c32)), (t0.c86 IN (''))))<>(((((t0.c32))>((v0.c0))), (v0.c2 IN ()), (NOT (v0.c2))))) ASC  NULLS FIRST, (((((t0.c86) BETWEEN (t0.c32) AND (v0.c0))))<=((UPPER(DISTINCT v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c13) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((((t0.c32)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))) IN ()) DESC  NULLS LAST, ((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((x'0a3f'))), (- (t0.c32)), (t0.c86 IN (''))))!=(((((t0.c32))>((v0.c0))), (v0.c2 IN ()), (NOT (v0.c2))))) ASC  NULLS FIRST, (((((t0.c86) BETWEEN (t0.c32) AND (v0.c0))))<=((UPPER(DISTINCT v0.c2))))  NULLS FIRST);
SELECT ALL * FROM v0, vt0, t0 WHERE (t0.c13) ORDER BY ((((t0.c32)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))) IN ()) DESC  NULLS LAST, ((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((x'0a3f'))), (- (t0.c32)), (t0.c86 IN (''))))<>(((((t0.c32))>((v0.c0))), (v0.c2 IN ()), (NOT (v0.c2))))) ASC  NULLS FIRST, (((((t0.c86) BETWEEN (t0.c32) AND (v0.c0))))<=((UPPER(DISTINCT v0.c2))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY LIKELIHOOD(TYPEOF(vt0.c0), 0.3883449850070295), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(TYPEOF(vt0.c0), 0.3883449850070295), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (vt0.c0)));
SELECT * FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY LIKELIHOOD(TYPEOF(vt0.c0), 0.3883449850070295), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(TYPEOF(vt0.c0), 0.3883449850070295), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (vt0.c0)));
SELECT * FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY LIKELIHOOD(TYPEOF(vt0.c0), 0.3883449850070295), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (vt0.c0));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c13 COLLATE BINARY)=(t0.c86)));
SELECT SUM(count) FROM (SELECT ((((t0.c13 COLLATE BINARY)=(t0.c86))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c13 COLLATE BINARY)=(t0.c86)));
SELECT SUM(count) FROM (SELECT ((((t0.c13 COLLATE BINARY)=(t0.c86))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c13 COLLATE BINARY)=(t0.c86)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (+ (((t0.c86) NOT NULL))) INNER JOIN v0 ON ((((v0.c0)) BETWEEN ((t0.c86)) AND ((1115255487))) IN ((((-1.205750561E9, t0.c13, v0.c1))=((t0.c13, v0.c0, v0.c0))))) WHERE (((((((v0.c0) IS TRUE))OR(((((vt0.c0)OR(v0.c1)))AND(v0.c0)))))AND(CASE v0.c0  WHEN vt0.c0 THEN v0.c2 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) IS TRUE))OR(((((vt0.c0)OR(v0.c1)))AND(v0.c0)))))AND(CASE v0.c0  WHEN vt0.c0 THEN v0.c2 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (+ (((t0.c86) NOT NULL))) INNER JOIN v0 ON ((((v0.c0)) BETWEEN ((t0.c86)) AND ((1115255487))) IN ((((-1.205750561E9, t0.c13, v0.c1))==((t0.c13, v0.c0, v0.c0))))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (+ (((t0.c86) NOT NULL))) INNER JOIN v0 ON ((((v0.c0)) BETWEEN ((t0.c86)) AND ((1115255487))) IN ((((-1.205750561E9, t0.c13, v0.c1))=((t0.c13, v0.c0, v0.c0))))) WHERE (((((((v0.c0) IS TRUE))OR(((((vt0.c0)OR(v0.c1)))AND(v0.c0)))))AND(CASE v0.c0  WHEN vt0.c0 THEN v0.c2 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) IS TRUE))OR(((((vt0.c0)OR(v0.c1)))AND(v0.c0)))))AND(CASE v0.c0  WHEN vt0.c0 THEN v0.c2 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (+ (((t0.c86) NOT NULL))) INNER JOIN v0 ON ((((v0.c0)) BETWEEN ((t0.c86)) AND ((1115255487))) IN ((((-1.205750561E9, t0.c13, v0.c1))==((t0.c13, v0.c0, v0.c0))))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (+ (((t0.c86) NOT NULL))) INNER JOIN v0 ON ((((v0.c0)) BETWEEN ((t0.c86)) AND ((1115255487))) IN ((((-1.205750561E9, t0.c13, v0.c1))=((t0.c13, v0.c0, v0.c0))))) WHERE (((((((v0.c0) IS TRUE))OR(((((vt0.c0)OR(v0.c1)))AND(v0.c0)))))AND(CASE v0.c0  WHEN vt0.c0 THEN v0.c2 ELSE vt0.c0 END)));
SELECT ALL * FROM v0, vt0 WHERE ((((+ (v0.c1)))<<((+ (v0.c2))))) ORDER BY ((((((((CASE v0.c1  WHEN vt0.c0 THEN vt0.c0 END)OR(((v0.c2)GLOB(vt0.c0)))))AND(0.7624776813509556)))OR(((((((((v0.c2)AND(v0.c2)))OR(v0.c0)))AND(v0.c2)))AND(v0.c2)))))AND(v0.c1 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c1)))<<((+ (v0.c2))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((CASE v0.c1  WHEN vt0.c0 THEN vt0.c0 END)OR(((v0.c2)GLOB(vt0.c0)))))AND(0.7624776813509556)))OR(((((((((v0.c2)AND(v0.c2)))OR(v0.c0)))AND(v0.c2)))AND(v0.c2)))))AND(v0.c1 COLLATE NOCASE)) ASC);
SELECT ALL * FROM v0, vt0 WHERE ((((+ (v0.c1)))<<((+ (v0.c2))))) ORDER BY ((((((((CASE v0.c1  WHEN vt0.c0 THEN vt0.c0 END)OR(((v0.c2)GLOB(vt0.c0)))))AND(0.7624776813509556)))OR(((((((((v0.c2)AND(v0.c2)))OR(v0.c0)))AND(v0.c2)))AND(v0.c2)))))AND(v0.c1 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c1)))<<((+ (v0.c2))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((CASE v0.c1  WHEN vt0.c0 THEN vt0.c0 END)OR(((v0.c2)GLOB(vt0.c0)))))AND(0.7624776813509556)))OR(((((((((v0.c2)AND(v0.c2)))OR(v0.c0)))AND(v0.c2)))AND(v0.c2)))))AND(v0.c1 COLLATE NOCASE)) ASC);
SELECT ALL * FROM v0, vt0 WHERE ((((+ (v0.c1)))<<((+ (v0.c2))))) ORDER BY ((((((((CASE v0.c1  WHEN vt0.c0 THEN vt0.c0 END)OR(((v0.c2)GLOB(vt0.c0)))))AND(0.7624776813509556)))OR(((((((((v0.c2)AND(v0.c2)))OR(v0.c0)))AND(v0.c2)))AND(v0.c2)))))AND(v0.c1 COLLATE NOCASE)) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))>(vt0.c0 COLLATE BINARY))) ORDER BY (((((vt0.c0) ISNULL)))<>((((vt0.c0)%(vt0.c0))))) ASC, 0.6172501476359717, (((((vt0.c0)|(vt0.c0))))<((0.8627068148889065)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))>(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) ISNULL)))!=((((vt0.c0)%(vt0.c0))))) ASC, 0.6172501476359717, (((((vt0.c0)|(vt0.c0))))<((0.8627068148889065))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))>(vt0.c0 COLLATE BINARY))) ORDER BY (((((vt0.c0) ISNULL)))<>((((vt0.c0)%(vt0.c0))))) ASC, 0.6172501476359717, (((((vt0.c0)|(vt0.c0))))<((0.8627068148889065)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))>(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) ISNULL)))!=((((vt0.c0)%(vt0.c0))))) ASC, 0.6172501476359717, (((((vt0.c0)|(vt0.c0))))<((0.8627068148889065))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))>(vt0.c0 COLLATE BINARY))) ORDER BY (((((vt0.c0) ISNULL)))<>((((vt0.c0)%(vt0.c0))))) ASC, 0.6172501476359717, (((((vt0.c0)|(vt0.c0))))<((0.8627068148889065)));
SELECT COUNT(*) FROM t0 WHERE (CAST((((t0.c32))<=((t0.c86))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c32))<=((t0.c86))) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((((t0.c32))<=((t0.c86))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c32))<=((t0.c86))) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((((t0.c32))<=((t0.c86))) AS NUMERIC));
SELECT * FROM t0, vt0, v0 WHERE (((UPPER(t0.c32)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((UPPER(t0.c32)) NOT NULL)) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE (((UPPER(t0.c32)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((UPPER(t0.c32)) NOT NULL)) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE (((UPPER(t0.c32)) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE ((+ (CASE 0.7427626005674776  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((UPPER(vt0.c0))-((- (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE 0.7427626005674776  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((UPPER(vt0.c0))-((- (vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (CASE 0.7427626005674776  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((UPPER(vt0.c0))-((- (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE 0.7427626005674776  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((UPPER(vt0.c0))-((- (vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (CASE 0.7427626005674776  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((UPPER(vt0.c0))-((- (vt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON t0.c13 WHERE ((((t0.c13)AND(t0.c32)) IN ((((t0.c13, t0.c86, t0.c32))=((t0.c86, t0.c13, t0.c13))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c13)AND(t0.c32)) IN ((((t0.c13, t0.c86, t0.c32))=((t0.c86, t0.c13, t0.c13)))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON t0.c13);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON t0.c13 WHERE ((((t0.c13)AND(t0.c32)) IN ((((t0.c13, t0.c86, t0.c32))=((t0.c86, t0.c13, t0.c13))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c13)AND(t0.c32)) IN ((((t0.c13, t0.c86, t0.c32))=((t0.c86, t0.c13, t0.c13)))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON t0.c13);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON t0.c13 WHERE ((((t0.c13)AND(t0.c32)) IN ((((t0.c13, t0.c86, t0.c32))=((t0.c86, t0.c13, t0.c13))))));
SELECT * FROM v0, vt0, t0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (CASE WHEN ((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 END) ORDER BY TRIM(DISTINCT DATETIME('Q>驅\4廏.', vt0.c0, vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT DATETIME('Q>驅\4廏.', vt0.c0, vt0.c0))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN ((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 END) ORDER BY TRIM(DISTINCT DATETIME('Q>驅\4廏.', vt0.c0, vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT DATETIME('Q>驅\4廏.', vt0.c0, vt0.c0))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN ((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 END) ORDER BY TRIM(DISTINCT DATETIME('Q>驅\4廏.', vt0.c0, vt0.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ('-804799130');
SELECT SUM(count) FROM (SELECT (('-804799130') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ('-804799130');
SELECT SUM(count) FROM (SELECT (('-804799130') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ('-804799130');
SELECT * FROM v0 WHERE (((CASE WHEN x'' THEN v0.c1 ELSE v0.c1 END)/(CAST(v0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN x'' THEN v0.c1 ELSE v0.c1 END)/(CAST(v0.c2 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE WHEN x'' THEN v0.c1 ELSE v0.c1 END)/(CAST(v0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN x'' THEN v0.c1 ELSE v0.c1 END)/(CAST(v0.c2 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE WHEN x'' THEN v0.c1 ELSE v0.c1 END)/(CAST(v0.c2 AS REAL))));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((((v0.c2)) NOT BETWEEN ((487867007)) AND (((NOT (v0.c2)))))) ORDER BY t0.c32  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) NOT BETWEEN ((487867007)) AND (((NOT (v0.c2)))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY t0.c32  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((((v0.c2)) NOT BETWEEN ((487867007)) AND (((NOT (v0.c2)))))) ORDER BY t0.c32  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) NOT BETWEEN ((487867007)) AND (((NOT (v0.c2)))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY t0.c32  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((((v0.c2)) NOT BETWEEN ((487867007)) AND (((NOT (v0.c2)))))) ORDER BY t0.c32  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0, (+ (vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, (+ (vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0, (+ (vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, (+ (vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0, (+ (vt0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((x'c65a'))<((t0.c86)))) NOT BETWEEN ((v0.c1 IN (t0.c86, v0.c0))) AND ((~ (v0.c1))))) ORDER BY (((((t0.c86)) NOT BETWEEN ((0.051843658690268524)) AND ((v0.c2)))) BETWEEN ((((v0.c0))=((t0.c32)))) AND ((- (v0.c0)))) ASC  NULLS FIRST, CAST(((((((((((((v0.c1)OR(t0.c13)))OR(v0.c2)))OR(v0.c1)))AND(t0.c86)))AND(v0.c1)))OR(v0.c2)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((((x'c65a'))<((t0.c86)))) NOT BETWEEN ((v0.c1 IN (t0.c86, v0.c0))) AND ((~ (v0.c1))))) IS TRUE)  as count FROM t0, v0 ORDER BY (((((t0.c86)) NOT BETWEEN ((0.051843658690268524)) AND ((v0.c2)))) BETWEEN ((((v0.c0))=((t0.c32)))) AND ((- (v0.c0)))) ASC  NULLS FIRST, CAST(((((((((((((v0.c1)OR(t0.c13)))OR(v0.c2)))OR(v0.c1)))AND(t0.c86)))AND(v0.c1)))OR(v0.c2)) AS REAL));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((x'c65a'))<((t0.c86)))) NOT BETWEEN ((v0.c1 IN (t0.c86, v0.c0))) AND ((~ (v0.c1))))) ORDER BY (((((t0.c86)) NOT BETWEEN ((0.051843658690268524)) AND ((v0.c2)))) BETWEEN ((((v0.c0))=((t0.c32)))) AND ((- (v0.c0)))) ASC  NULLS FIRST, CAST(((((((((((((v0.c1)OR(t0.c13)))OR(v0.c2)))OR(v0.c1)))AND(t0.c86)))AND(v0.c1)))OR(v0.c2)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((((x'c65a'))<((t0.c86)))) NOT BETWEEN ((v0.c1 IN (t0.c86, v0.c0))) AND ((~ (v0.c1))))) IS TRUE)  as count FROM t0, v0 ORDER BY (((((t0.c86)) NOT BETWEEN ((0.051843658690268524)) AND ((v0.c2)))) BETWEEN ((((v0.c0))=((t0.c32)))) AND ((- (v0.c0)))) ASC  NULLS FIRST, CAST(((((((((((((v0.c1)OR(t0.c13)))OR(v0.c2)))OR(v0.c1)))AND(t0.c86)))AND(v0.c1)))OR(v0.c2)) AS REAL));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((x'c65a'))<((t0.c86)))) NOT BETWEEN ((v0.c1 IN (t0.c86, v0.c0))) AND ((~ (v0.c1))))) ORDER BY (((((t0.c86)) NOT BETWEEN ((0.051843658690268524)) AND ((v0.c2)))) BETWEEN ((((v0.c0))=((t0.c32)))) AND ((- (v0.c0)))) ASC  NULLS FIRST, CAST(((((((((((((v0.c1)OR(t0.c13)))OR(v0.c2)))OR(v0.c1)))AND(t0.c86)))AND(v0.c1)))OR(v0.c2)) AS REAL);
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON t0.c32 CROSS JOIN vt0 ON (+ (t0.c32 COLLATE NOCASE)) WHERE ((CASE t0.c32  WHEN t0.c32 THEN vt0.c0 ELSE v0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE t0.c32  WHEN t0.c32 THEN vt0.c0 ELSE v0.c2 END IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON t0.c32 CROSS JOIN vt0 ON (+ (t0.c32 COLLATE NOCASE)));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON t0.c32 CROSS JOIN vt0 ON (+ (t0.c32 COLLATE NOCASE)) WHERE ((CASE t0.c32  WHEN t0.c32 THEN vt0.c0 ELSE v0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE t0.c32  WHEN t0.c32 THEN vt0.c0 ELSE v0.c2 END IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON t0.c32 CROSS JOIN vt0 ON (+ (t0.c32 COLLATE NOCASE)));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON t0.c32 CROSS JOIN vt0 ON (+ (t0.c32 COLLATE NOCASE)) WHERE ((CASE t0.c32  WHEN t0.c32 THEN vt0.c0 ELSE v0.c2 END IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)-(vt0.c0)))));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (CASE WHEN CASE WHEN v0.c2 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN t0.c32 ELSE '' END THEN t0.c13 COLLATE NOCASE WHEN (vt0.c0 IN ()) THEN v0.c0 COLLATE RTRIM WHEN ((412383799)<(v0.c0)) THEN (('(\')%(v0.c2)) ELSE ((v0.c2) NOT BETWEEN (t0.c13) AND ('1908061304')) END) ORDER BY CASE 0.09285488311381584  WHEN ABS(DISTINCT v0.c1) THEN ((vt0.c0)+(t0.c13)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN v0.c2 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN t0.c32 ELSE '' END THEN t0.c13 COLLATE NOCASE WHEN (vt0.c0 IN ()) THEN v0.c0 COLLATE RTRIM WHEN ((412383799)<(v0.c0)) THEN (('(\')%(v0.c2)) ELSE ((v0.c2) NOT BETWEEN (t0.c13) AND ('1908061304')) END) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CASE 0.09285488311381584  WHEN ABS(DISTINCT v0.c1) THEN ((vt0.c0)+(t0.c13)) END  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (CASE WHEN CASE WHEN v0.c2 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN t0.c32 ELSE '' END THEN t0.c13 COLLATE NOCASE WHEN (vt0.c0 IN ()) THEN v0.c0 COLLATE RTRIM WHEN ((412383799)<(v0.c0)) THEN (('(\')%(v0.c2)) ELSE ((v0.c2) NOT BETWEEN (t0.c13) AND ('1908061304')) END) ORDER BY CASE 0.09285488311381584  WHEN ABS(DISTINCT v0.c1) THEN ((vt0.c0)+(t0.c13)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN v0.c2 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN t0.c32 ELSE '' END THEN t0.c13 COLLATE NOCASE WHEN (vt0.c0 IN ()) THEN v0.c0 COLLATE RTRIM WHEN ((412383799)<(v0.c0)) THEN (('(\')%(v0.c2)) ELSE ((v0.c2) NOT BETWEEN (t0.c13) AND ('1908061304')) END) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CASE 0.09285488311381584  WHEN ABS(DISTINCT v0.c1) THEN ((vt0.c0)+(t0.c13)) END  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (CASE WHEN CASE WHEN v0.c2 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN t0.c32 ELSE '' END THEN t0.c13 COLLATE NOCASE WHEN (vt0.c0 IN ()) THEN v0.c0 COLLATE RTRIM WHEN ((412383799)<(v0.c0)) THEN (('(\')%(v0.c2)) ELSE ((v0.c2) NOT BETWEEN (t0.c13) AND ('1908061304')) END) ORDER BY CASE 0.09285488311381584  WHEN ABS(DISTINCT v0.c1) THEN ((vt0.c0)+(t0.c13)) END  NULLS FIRST;
SELECT * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c1);
SELECT ALL * FROM vt0, v0, t0 WHERE (((t0.c13)AND(v0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c13)AND(v0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE (((t0.c13)AND(v0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c13)AND(v0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE (((t0.c13)AND(v0.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(x'0c39' AS INTEGER)) IS FALSE)) ORDER BY ((0x642b9bee)AND(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST, x'899b' DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(x'0c39' AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((0X642b9bee)AND(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST, x'899b' DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(x'0c39' AS INTEGER)) IS FALSE)) ORDER BY ((0x642b9bee)AND(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST, x'899b' DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(x'0c39' AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((0X642b9bee)AND(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST, x'899b' DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(x'0c39' AS INTEGER)) IS FALSE)) ORDER BY ((0x642b9bee)AND(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST, x'899b' DESC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((((- (v0.c1)))OR(v0.c1)))AND(((((vt0.c0)OR(t0.c32)))AND(0.9120468039672525)))) RIGHT OUTER JOIN t0 ON (((v0.c2)) BETWEEN ((((v0.c2)<(vt0.c0)))) AND ((((v0.c2) NOT NULL)))) WHERE ((- (((vt0.c0)IS(t0.c86))))) ORDER BY ((((((((1115255487)OR(t0.c32)))OR(v0.c0)))OR((- (0.40441571891767036)))))OR(CASE WHEN '466063211' THEN t0.c86 ELSE v0.c0 END)), ((NULLIF(vt0.c0, v0.c0)) IS FALSE);
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)IS(t0.c86))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((((- (v0.c1)))OR(v0.c1)))AND(((((vt0.c0)OR(t0.c32)))AND(0.9120468039672525)))) RIGHT OUTER JOIN t0 ON (((v0.c2)) BETWEEN ((((v0.c2)<(vt0.c0)))) AND ((((v0.c2) NOT NULL)))) ORDER BY ((((((((1115255487)OR(t0.c32)))OR(v0.c0)))OR((- (0.40441571891767036)))))OR(CASE WHEN '466063211' THEN t0.c86 ELSE v0.c0 END)), ((NULLIF(vt0.c0, v0.c0)) IS FALSE));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((((- (v0.c1)))OR(v0.c1)))AND(((((vt0.c0)OR(t0.c32)))AND(0.9120468039672525)))) RIGHT OUTER JOIN t0 ON (((v0.c2)) BETWEEN ((((v0.c2)<(vt0.c0)))) AND ((((v0.c2) NOT NULL)))) WHERE ((- (((vt0.c0)IS(t0.c86))))) ORDER BY ((((((((1115255487)OR(t0.c32)))OR(v0.c0)))OR((- (0.40441571891767036)))))OR(CASE WHEN '466063211' THEN t0.c86 ELSE v0.c0 END)), ((NULLIF(vt0.c0, v0.c0)) IS FALSE);
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)IS(t0.c86))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((((- (v0.c1)))OR(v0.c1)))AND(((((vt0.c0)OR(t0.c32)))AND(0.9120468039672525)))) RIGHT OUTER JOIN t0 ON (((v0.c2)) BETWEEN ((((v0.c2)<(vt0.c0)))) AND ((((v0.c2) NOT NULL)))) ORDER BY ((((((((1115255487)OR(t0.c32)))OR(v0.c0)))OR((- (0.40441571891767036)))))OR(CASE WHEN '466063211' THEN t0.c86 ELSE v0.c0 END)), ((NULLIF(vt0.c0, v0.c0)) IS FALSE));
SELECT * FROM t0, vt0 WHERE ((((t0.c86, vt0.c0, vt0.c0))>((t0.c86, vt0.c0, x''))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((t0.c86, vt0.c0, vt0.c0))>((t0.c86, vt0.c0, x''))) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((t0.c86, vt0.c0, vt0.c0))>((t0.c86, vt0.c0, x''))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((t0.c86, vt0.c0, vt0.c0))>((t0.c86, vt0.c0, x''))) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((t0.c86, vt0.c0, vt0.c0))>((t0.c86, vt0.c0, x''))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((CASE t0.c13  WHEN vt0.c0 THEN v0.c2 END) NOT BETWEEN (((v0.c0)>=(v0.c0))) AND (CASE v0.c0  WHEN v0.c2 THEN t0.c13 END)) FULL OUTER JOIN vt0 ON (((((t0.c13 IN ()))AND(CAST(t0.c32 AS BLOB))))AND(CAST(vt0.c0 AS BLOB))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((CASE t0.c13  WHEN vt0.c0 THEN v0.c2 END) NOT BETWEEN (((v0.c0)>=(v0.c0))) AND (CASE v0.c0  WHEN v0.c2 THEN t0.c13 END)) FULL OUTER JOIN vt0 ON (((((t0.c13 IN ()))AND(CAST(t0.c32 AS BLOB))))AND(CAST(vt0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((CASE t0.c13  WHEN vt0.c0 THEN v0.c2 END) NOT BETWEEN (((v0.c0)>=(v0.c0))) AND (CASE v0.c0  WHEN v0.c2 THEN t0.c13 END)) FULL OUTER JOIN vt0 ON (((((t0.c13 IN ()))AND(CAST(t0.c32 AS BLOB))))AND(CAST(vt0.c0 AS BLOB))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((CASE t0.c13  WHEN vt0.c0 THEN v0.c2 END) NOT BETWEEN (((v0.c0)>=(v0.c0))) AND (CASE v0.c0  WHEN v0.c2 THEN t0.c13 END)) FULL OUTER JOIN vt0 ON (((((t0.c13 IN ()))AND(CAST(t0.c32 AS BLOB))))AND(CAST(vt0.c0 AS BLOB))));
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((((t0.c13))<>((v0.c1))))IS NOT(((t0.c13) NOT BETWEEN (vt0.c0) AND (t0.c13))))) ORDER BY ((CAST(v0.c1 AS REAL))||(((v0.c1)+(t0.c86)))), CAST(((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c2)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c13))!=((v0.c1))))IS NOT(((t0.c13) NOT BETWEEN (vt0.c0) AND (t0.c13))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((CAST(v0.c1 AS REAL))||(((v0.c1)+(t0.c86)))), CAST(((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c2)) AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((((t0.c13))<>((v0.c1))))IS NOT(((t0.c13) NOT BETWEEN (vt0.c0) AND (t0.c13))))) ORDER BY ((CAST(v0.c1 AS REAL))||(((v0.c1)+(t0.c86)))), CAST(((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c2)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c13))!=((v0.c1))))IS NOT(((t0.c13) NOT BETWEEN (vt0.c0) AND (t0.c13))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((CAST(v0.c1 AS REAL))||(((v0.c1)+(t0.c86)))), CAST(((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c2)) AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((((t0.c13))<>((v0.c1))))IS NOT(((t0.c13) NOT BETWEEN (vt0.c0) AND (t0.c13))))) ORDER BY ((CAST(v0.c1 AS REAL))||(((v0.c1)+(t0.c86)))), CAST(((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c2)) AS REAL) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (t0.c13);
SELECT SUM(count) FROM (SELECT ((t0.c13) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c13);
SELECT SUM(count) FROM (SELECT ((t0.c13) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c13);
SELECT ALL * FROM vt0, t0, v0 WHERE ((((v0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE ((((v0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE ((((v0.c0) NOTNULL) IN ()));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((v0.c1 COLLATE NOCASE)||(((t0.c32) NOT NULL))) RIGHT OUTER JOIN v0 ON (((((v0.c1, t0.c86, t0.c13)) BETWEEN ((v0.c1, vt0.c0, v0.c0)) AND ((t0.c13, vt0.c0, v0.c1)))) NOT BETWEEN (v0.c0) AND (((t0.c86)==(vt0.c0)))) WHERE (((v0.c0) ISNULL)) ORDER BY CAST(CAST(t0.c32 AS REAL) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((v0.c1 COLLATE NOCASE)||(((t0.c32) NOT NULL))) RIGHT OUTER JOIN v0 ON (((((v0.c1, t0.c86, t0.c13)) BETWEEN ((v0.c1, vt0.c0, v0.c0)) AND ((t0.c13, vt0.c0, v0.c1)))) NOT BETWEEN (v0.c0) AND (((t0.c86)=(vt0.c0)))) ORDER BY CAST(CAST(t0.c32 AS REAL) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((v0.c1 COLLATE NOCASE)||(((t0.c32) NOT NULL))) RIGHT OUTER JOIN v0 ON (((((v0.c1, t0.c86, t0.c13)) BETWEEN ((v0.c1, vt0.c0, v0.c0)) AND ((t0.c13, vt0.c0, v0.c1)))) NOT BETWEEN (v0.c0) AND (((t0.c86)==(vt0.c0)))) WHERE (((v0.c0) ISNULL)) ORDER BY CAST(CAST(t0.c32 AS REAL) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((v0.c1 COLLATE NOCASE)||(((t0.c32) NOT NULL))) RIGHT OUTER JOIN v0 ON (((((v0.c1, t0.c86, t0.c13)) BETWEEN ((v0.c1, vt0.c0, v0.c0)) AND ((t0.c13, vt0.c0, v0.c1)))) NOT BETWEEN (v0.c0) AND (((t0.c86)=(vt0.c0)))) ORDER BY CAST(CAST(t0.c32 AS REAL) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (0.17957794695583384);
SELECT SUM(count) FROM (SELECT ALL ((0.17957794695583384) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (0.17957794695583384);
SELECT SUM(count) FROM (SELECT ALL ((0.17957794695583384) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (0.17957794695583384);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOTNULL)) ORDER BY (((NOT (vt0.c0)))IS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))IS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOTNULL)) ORDER BY (((NOT (vt0.c0)))IS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))IS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOTNULL)) ORDER BY (((NOT (vt0.c0)))IS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((((((v0.c1)OR(vt0.c0)))AND(NULL))) NOT NULL) CROSS JOIN v0 ON t0.c13 WHERE (-6.22998187E8) ORDER BY ((((v0.c2)OR(((0.8454872235614119) NOT NULL))))AND(CAST(t0.c32 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((-6.22998187E8) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((((v0.c1)OR(vt0.c0)))AND(NULL))) NOT NULL) CROSS JOIN v0 ON t0.c13 ORDER BY ((((v0.c2)OR(((0.8454872235614119) NOT NULL))))AND(CAST(t0.c32 AS BLOB))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((((((v0.c1)OR(vt0.c0)))AND(NULL))) NOT NULL) CROSS JOIN v0 ON t0.c13 WHERE (-6.22998187E8) ORDER BY ((((v0.c2)OR(((0.8454872235614119) NOT NULL))))AND(CAST(t0.c32 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((-6.22998187E8) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((((v0.c1)OR(vt0.c0)))AND(NULL))) NOT NULL) CROSS JOIN v0 ON t0.c13 ORDER BY ((((v0.c2)OR(((0.8454872235614119) NOT NULL))))AND(CAST(t0.c32 AS BLOB))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((((((v0.c1)OR(vt0.c0)))AND(NULL))) NOT NULL) CROSS JOIN v0 ON t0.c13 WHERE (-6.22998187E8) ORDER BY ((((v0.c2)OR(((0.8454872235614119) NOT NULL))))AND(CAST(t0.c32 AS BLOB)));
SELECT ALL * FROM t0, v0 WHERE ((CAST('-645024795' AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST('-645024795' AS TEXT) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((CAST('-645024795' AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST('-645024795' AS TEXT) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((CAST('-645024795' AS TEXT) IN ()));
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>(TYPEOF(DISTINCT vt0.c0)))) ORDER BY CAST(LTRIM(vt0.c0, vt0.c0) AS NUMERIC) DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>(TYPEOF(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(LTRIM(vt0.c0, vt0.c0) AS NUMERIC) DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) DESC);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>(TYPEOF(DISTINCT vt0.c0)))) ORDER BY CAST(LTRIM(vt0.c0, vt0.c0) AS NUMERIC) DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>(TYPEOF(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(LTRIM(vt0.c0, vt0.c0) AS NUMERIC) DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) DESC);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>(TYPEOF(DISTINCT vt0.c0)))) ORDER BY CAST(LTRIM(vt0.c0, vt0.c0) AS NUMERIC) DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) DESC;
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((((((((((vt0.c0)OR(t0.c86)))AND(v0.c1)))AND(v0.c0)))OR(t0.c13)))IS(CASE WHEN t0.c86 THEN t0.c86 ELSE t0.c32 END))) ORDER BY ((((t0.c32) IS TRUE))GLOB(((v0.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(t0.c86)))AND(v0.c1)))AND(v0.c0)))OR(t0.c13)))IS(CASE WHEN t0.c86 THEN t0.c86 ELSE t0.c32 END))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((((t0.c32) IS TRUE))GLOB(((v0.c2) IS TRUE))));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((((((((((vt0.c0)OR(t0.c86)))AND(v0.c1)))AND(v0.c0)))OR(t0.c13)))IS(CASE WHEN t0.c86 THEN t0.c86 ELSE t0.c32 END))) ORDER BY ((((t0.c32) IS TRUE))GLOB(((v0.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(t0.c86)))AND(v0.c1)))AND(v0.c0)))OR(t0.c13)))IS(CASE WHEN t0.c86 THEN t0.c86 ELSE t0.c32 END))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((((t0.c32) IS TRUE))GLOB(((v0.c2) IS TRUE))));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((((((((((vt0.c0)OR(t0.c86)))AND(v0.c1)))AND(v0.c0)))OR(t0.c13)))IS(CASE WHEN t0.c86 THEN t0.c86 ELSE t0.c32 END))) ORDER BY ((((t0.c32) IS TRUE))GLOB(((v0.c2) IS TRUE)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (('1139394573' IN ((t0.c86 IN (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((t0.c32)) AND ((t0.c32)))))) ORDER BY (- ((~ (t0.c13)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((('1139394573' IN ((t0.c86 IN (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((t0.c32)) AND ((t0.c32)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (- ((~ (t0.c13)))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (('1139394573' IN ((t0.c86 IN (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((t0.c32)) AND ((t0.c32)))))) ORDER BY (- ((~ (t0.c13)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((('1139394573' IN ((t0.c86 IN (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((t0.c32)) AND ((t0.c32)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (- ((~ (t0.c13)))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (('1139394573' IN ((t0.c86 IN (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((t0.c32)) AND ((t0.c32)))))) ORDER BY (- ((~ (t0.c13)))) DESC;
SELECT * FROM v0 WHERE ('Os	??9');
SELECT SUM(count) FROM (SELECT (('Os	??9') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ('Os	??9');
SELECT SUM(count) FROM (SELECT (('Os	??9') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ('Os	??9');
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((((((((v0.c1)OR(((v0.c2) ISNULL))))AND('-594426651')))AND((t0.c13 IN (v0.c1)))))OR(((v0.c2) BETWEEN (t0.c86) AND (vt0.c0))))) ORDER BY (- ((NOT (v0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c1)OR(((v0.c2) ISNULL))))AND('-594426651')))AND((t0.c13 IN (v0.c1)))))OR(((v0.c2) BETWEEN (t0.c86) AND (vt0.c0))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (- ((NOT (v0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((((((((v0.c1)OR(((v0.c2) ISNULL))))AND('-594426651')))AND((t0.c13 IN (v0.c1)))))OR(((v0.c2) BETWEEN (t0.c86) AND (vt0.c0))))) ORDER BY (- ((NOT (v0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c1)OR(((v0.c2) ISNULL))))AND('-594426651')))AND((t0.c13 IN (v0.c1)))))OR(((v0.c2) BETWEEN (t0.c86) AND (vt0.c0))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (- ((NOT (v0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((((((((v0.c1)OR(((v0.c2) ISNULL))))AND('-594426651')))AND((t0.c13 IN (v0.c1)))))OR(((v0.c2) BETWEEN (t0.c86) AND (vt0.c0))))) ORDER BY (- ((NOT (v0.c1)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) BETWEEN ((CAST(v0.c2 AS INTEGER))) AND ((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))))) ORDER BY '1908061304', ((((v0.c2)OR(v0.c2))) NOTNULL), (((v0.c1)||(vt0.c0)) IN (CASE WHEN v0.c2 THEN vt0.c0 ELSE v0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((CAST(v0.c2 AS INTEGER))) AND ((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY '1908061304', ((((v0.c2)OR(v0.c2))) NOTNULL), (((v0.c1)||(vt0.c0)) IN (CASE WHEN v0.c2 THEN vt0.c0 ELSE v0.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) BETWEEN ((CAST(v0.c2 AS INTEGER))) AND ((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))))) ORDER BY '1908061304', ((((v0.c2)OR(v0.c2))) NOTNULL), (((v0.c1)||(vt0.c0)) IN (CASE WHEN v0.c2 THEN vt0.c0 ELSE v0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((CAST(v0.c2 AS INTEGER))) AND ((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY '1908061304', ((((v0.c2)OR(v0.c2))) NOTNULL), (((v0.c1)||(vt0.c0)) IN (CASE WHEN v0.c2 THEN vt0.c0 ELSE v0.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) BETWEEN ((CAST(v0.c2 AS INTEGER))) AND ((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))))) ORDER BY '1908061304', ((((v0.c2)OR(v0.c2))) NOTNULL), (((v0.c1)||(vt0.c0)) IN (CASE WHEN v0.c2 THEN vt0.c0 ELSE v0.c0 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (0.8274089636673944) ORDER BY ((UPPER(DISTINCT v0.c2))=(((v0.c2) NOT NULL))), ((COALESCE(DISTINCT v0.c0, v0.c2)) BETWEEN ((v0.c2 IN (v0.c1, v0.c1))) AND (((v0.c0)IS NOT(v0.c0)))) ASC  NULLS FIRST, ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((v0.c0)GLOB(v0.c0))) AND (TRIM(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((0.8274089636673944) IS TRUE)  as count FROM v0 ORDER BY ((UPPER(DISTINCT v0.c2))==(((v0.c2) NOT NULL))), ((COALESCE(DISTINCT v0.c0, v0.c2)) BETWEEN ((v0.c2 IN (v0.c1, v0.c1))) AND (((v0.c0)IS NOT(v0.c0)))) ASC  NULLS FIRST, ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((v0.c0)GLOB(v0.c0))) AND (TRIM(NULL))));
SELECT COUNT(*) FROM v0 WHERE (0.8274089636673944) ORDER BY ((UPPER(DISTINCT v0.c2))=(((v0.c2) NOT NULL))), ((COALESCE(DISTINCT v0.c0, v0.c2)) BETWEEN ((v0.c2 IN (v0.c1, v0.c1))) AND (((v0.c0)IS NOT(v0.c0)))) ASC  NULLS FIRST, ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((v0.c0)GLOB(v0.c0))) AND (TRIM(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((0.8274089636673944) IS TRUE)  as count FROM v0 ORDER BY ((UPPER(DISTINCT v0.c2))==(((v0.c2) NOT NULL))), ((COALESCE(DISTINCT v0.c0, v0.c2)) BETWEEN ((v0.c2 IN (v0.c1, v0.c1))) AND (((v0.c0)IS NOT(v0.c0)))) ASC  NULLS FIRST, ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((v0.c0)GLOB(v0.c0))) AND (TRIM(NULL))));
SELECT COUNT(*) FROM v0 WHERE (0.8274089636673944) ORDER BY ((UPPER(DISTINCT v0.c2))=(((v0.c2) NOT NULL))), ((COALESCE(DISTINCT v0.c0, v0.c2)) BETWEEN ((v0.c2 IN (v0.c1, v0.c1))) AND (((v0.c0)IS NOT(v0.c0)))) ASC  NULLS FIRST, ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((v0.c0)GLOB(v0.c0))) AND (TRIM(NULL)));
SELECT * FROM v0, t0, vt0 WHERE ((((((((v0.c0)AND(v0.c1)))OR(v0.c0))))>=(((+ (v0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0)AND(v0.c1)))OR(v0.c0))))>=(((+ (v0.c2)))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE ((((((((v0.c0)AND(v0.c1)))OR(v0.c0))))>=(((+ (v0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0)AND(v0.c1)))OR(v0.c0))))>=(((+ (v0.c2)))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE ((((((((v0.c0)AND(v0.c1)))OR(v0.c0))))>=(((+ (v0.c2))))));
SELECT * FROM t0 WHERE (((((NULL) NOT BETWEEN (NULL) AND (t0.c13)))<>((((t0.c32)) NOT BETWEEN ((t0.c13)) AND ((t0.c86))))));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT BETWEEN (NULL) AND (t0.c13)))!=((((t0.c32)) NOT BETWEEN ((t0.c13)) AND ((t0.c86)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((NULL) NOT BETWEEN (NULL) AND (t0.c13)))<>((((t0.c32)) NOT BETWEEN ((t0.c13)) AND ((t0.c86))))));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT BETWEEN (NULL) AND (t0.c13)))!=((((t0.c32)) NOT BETWEEN ((t0.c13)) AND ((t0.c86)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((NULL) NOT BETWEEN (NULL) AND (t0.c13)))<>((((t0.c32)) NOT BETWEEN ((t0.c13)) AND ((t0.c86))))));
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c32) BETWEEN (t0.c86) AND (vt0.c0))) BETWEEN (t0.c32 COLLATE NOCASE) AND (((t0.c86) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c32) BETWEEN (t0.c86) AND (vt0.c0))) BETWEEN (t0.c32 COLLATE NOCASE) AND (((t0.c86) IS TRUE)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c32) BETWEEN (t0.c86) AND (vt0.c0))) BETWEEN (t0.c32 COLLATE NOCASE) AND (((t0.c86) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c32) BETWEEN (t0.c86) AND (vt0.c0))) BETWEEN (t0.c32 COLLATE NOCASE) AND (((t0.c86) IS TRUE)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c32) BETWEEN (t0.c86) AND (vt0.c0))) BETWEEN (t0.c32 COLLATE NOCASE) AND (((t0.c86) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY (((vt0.c0 IN (vt0.c0)))>>(vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0)))>>(vt0.c0 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY (((vt0.c0 IN (vt0.c0)))>>(vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0)))>>(vt0.c0 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY (((vt0.c0 IN (vt0.c0)))>>(vt0.c0 COLLATE BINARY)) ASC;
SELECT * FROM vt0, t0 WHERE (json_array((NOT (t0.c13)), CAST(vt0.c0 AS BLOB), CAST(t0.c86 AS REAL), t0.c13 COLLATE NOCASE)) ORDER BY (((((((((t0.c86)AND(0.08117482083218686)))AND(t0.c13)))AND(t0.c32)))OR(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((json_array((NOT (t0.c13)), CAST(vt0.c0 AS BLOB), CAST(t0.c86 AS REAL), t0.c13 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((((((t0.c86)AND(0.08117482083218686)))AND(t0.c13)))AND(t0.c32)))OR(vt0.c0)) IN ()) ASC);
SELECT * FROM vt0, t0 WHERE (json_array((NOT (t0.c13)), CAST(vt0.c0 AS BLOB), CAST(t0.c86 AS REAL), t0.c13 COLLATE NOCASE)) ORDER BY (((((((((t0.c86)AND(0.08117482083218686)))AND(t0.c13)))AND(t0.c32)))OR(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((json_array((NOT (t0.c13)), CAST(vt0.c0 AS BLOB), CAST(t0.c86 AS REAL), t0.c13 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((((((t0.c86)AND(0.08117482083218686)))AND(t0.c13)))AND(t0.c32)))OR(vt0.c0)) IN ()) ASC);
SELECT * FROM vt0, v0 WHERE (CAST(v0.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CAST(v0.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CAST(v0.c2 AS TEXT));
SELECT * FROM t0 WHERE (((CASE WHEN t0.c13 THEN t0.c32 END)||(t0.c32)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c13 THEN t0.c32 END)||(t0.c32))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c13 THEN t0.c32 END)||(t0.c32)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c13 THEN t0.c32 END)||(t0.c32))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c13 THEN t0.c32 END)||(t0.c32)));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))%(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))%(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))%(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))%(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))%(((vt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON t0.c32 INNER JOIN t0 ON ((((((((CASE v0.c2  WHEN t0.c86 THEN t0.c86 END)OR(v0.c2)))OR(load_extension(t0.c86))))AND(CASE v0.c0  WHEN 0Xfffffffff77f68fa THEN t0.c86 ELSE 1.987362244E9 END)))AND((- (t0.c13)))) WHERE (((v0.c0 COLLATE NOCASE)IS NOT(((((v0.c2)AND(v0.c1)))AND(v0.c0))))) ORDER BY ((TYPEOF(v0.c2)) NOT BETWEEN ((((('')OR(vt0.c0)))OR(vt0.c0))) AND (((((v0.c0)OR(v0.c2)))OR(t0.c13)))), ((((v0.c0) NOT BETWEEN (NULL) AND (v0.c1))) NOT NULL) DESC, ((((t0.c32)AND(((v0.c2) BETWEEN (v0.c0) AND (t0.c13)))))OR((v0.c2 IN (v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)IS NOT(((((v0.c2)AND(v0.c1)))AND(v0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON t0.c32 INNER JOIN t0 ON ((((((((CASE v0.c2  WHEN t0.c86 THEN t0.c86 END)OR(v0.c2)))OR(load_extension(t0.c86))))AND(CASE v0.c0  WHEN 0Xfffffffff77f68fa THEN t0.c86 ELSE 1.987362244E9 END)))AND((- (t0.c13)))) ORDER BY ((TYPEOF(v0.c2)) NOT BETWEEN ((((('')OR(vt0.c0)))OR(vt0.c0))) AND (((((v0.c0)OR(v0.c2)))OR(t0.c13)))), ((((v0.c0) NOT BETWEEN (NULL) AND (v0.c1))) NOT NULL) DESC, ((((t0.c32)AND(((v0.c2) BETWEEN (v0.c0) AND (t0.c13)))))OR((v0.c2 IN (v0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON t0.c32 INNER JOIN t0 ON ((((((((CASE v0.c2  WHEN t0.c86 THEN t0.c86 END)OR(v0.c2)))OR(load_extension(t0.c86))))AND(CASE v0.c0  WHEN 0Xfffffffff77f68fa THEN t0.c86 ELSE 1.987362244E9 END)))AND((- (t0.c13)))) WHERE (((v0.c0 COLLATE NOCASE)IS NOT(((((v0.c2)AND(v0.c1)))AND(v0.c0))))) ORDER BY ((TYPEOF(v0.c2)) NOT BETWEEN ((((('')OR(vt0.c0)))OR(vt0.c0))) AND (((((v0.c0)OR(v0.c2)))OR(t0.c13)))), ((((v0.c0) NOT BETWEEN (NULL) AND (v0.c1))) NOT NULL) DESC, ((((t0.c32)AND(((v0.c2) BETWEEN (v0.c0) AND (t0.c13)))))OR((v0.c2 IN (v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)IS NOT(((((v0.c2)AND(v0.c1)))AND(v0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON t0.c32 INNER JOIN t0 ON ((((((((CASE v0.c2  WHEN t0.c86 THEN t0.c86 END)OR(v0.c2)))OR(load_extension(t0.c86))))AND(CASE v0.c0  WHEN 0Xfffffffff77f68fa THEN t0.c86 ELSE 1.987362244E9 END)))AND((- (t0.c13)))) ORDER BY ((TYPEOF(v0.c2)) NOT BETWEEN ((((('')OR(vt0.c0)))OR(vt0.c0))) AND (((((v0.c0)OR(v0.c2)))OR(t0.c13)))), ((((v0.c0) NOT BETWEEN (NULL) AND (v0.c1))) NOT NULL) DESC, ((((t0.c32)AND(((v0.c2) BETWEEN (v0.c0) AND (t0.c13)))))OR((v0.c2 IN (v0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((t0.c13 IN ()))!=(x'')) WHERE (COALESCE(DISTINCT (- (vt0.c0)), CASE t0.c86  WHEN t0.c13 THEN t0.c13 ELSE 0xffffffffd1cf454e END)) ORDER BY LIKE((t0.c13 IN ()), ((t0.c86) NOT BETWEEN (t0.c86) AND (vt0.c0)), '0')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (- (vt0.c0)), CASE t0.c86  WHEN t0.c13 THEN t0.c13 ELSE 0xffffffffd1cf454e END)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((t0.c13 IN ()))!=(x'')) ORDER BY LIKE((t0.c13 IN ()), ((t0.c86) NOT BETWEEN (t0.c86) AND (vt0.c0)), '0')  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((t0.c13 IN ()))!=(x'')) WHERE (COALESCE(DISTINCT (- (vt0.c0)), CASE t0.c86  WHEN t0.c13 THEN t0.c13 ELSE 0xffffffffd1cf454e END)) ORDER BY LIKE((t0.c13 IN ()), ((t0.c86) NOT BETWEEN (t0.c86) AND (vt0.c0)), '0')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (- (vt0.c0)), CASE t0.c86  WHEN t0.c13 THEN t0.c13 ELSE 0xffffffffd1cf454e END)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((t0.c13 IN ()))!=(x'')) ORDER BY LIKE((t0.c13 IN ()), ((t0.c86) NOT BETWEEN (t0.c86) AND (vt0.c0)), '0')  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((t0.c13 IN ()))!=(x'')) WHERE (COALESCE(DISTINCT (- (vt0.c0)), CASE t0.c86  WHEN t0.c13 THEN t0.c13 ELSE 0xffffffffd1cf454e END)) ORDER BY LIKE((t0.c13 IN ()), ((t0.c86) NOT BETWEEN (t0.c86) AND (vt0.c0)), '0')  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN t0 ON (+ (CAST(v0.c0 AS REAL))) WHERE ((((('')AND(((vt0.c0)LIKE(v0.c2)))))AND(((t0.c86)-(v0.c2))))) ORDER BY CASE (((('3')AND(v0.c2)))AND(v0.c1))  WHEN (v0.c0 IN ()) THEN TRIM(v0.c0) END;
SELECT SUM(count) FROM (SELECT (((((('')AND(((vt0.c0)LIKE(v0.c2)))))AND(((t0.c86)-(v0.c2))))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN t0 ON (+ (CAST(v0.c0 AS REAL))) ORDER BY CASE (((('3')AND(v0.c2)))AND(v0.c1))  WHEN (v0.c0 IN ()) THEN TRIM(v0.c0) END);
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN t0 ON (+ (CAST(v0.c0 AS REAL))) WHERE ((((('')AND(((vt0.c0)LIKE(v0.c2)))))AND(((t0.c86)-(v0.c2))))) ORDER BY CASE (((('3')AND(v0.c2)))AND(v0.c1))  WHEN (v0.c0 IN ()) THEN TRIM(v0.c0) END;
SELECT SUM(count) FROM (SELECT (((((('')AND(((vt0.c0)LIKE(v0.c2)))))AND(((t0.c86)-(v0.c2))))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN t0 ON (+ (CAST(v0.c0 AS REAL))) ORDER BY CASE (((('3')AND(v0.c2)))AND(v0.c1))  WHEN (v0.c0 IN ()) THEN TRIM(v0.c0) END);
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN t0 ON (+ (CAST(v0.c0 AS REAL))) WHERE ((((('')AND(((vt0.c0)LIKE(v0.c2)))))AND(((t0.c86)-(v0.c2))))) ORDER BY CASE (((('3')AND(v0.c2)))AND(v0.c1))  WHEN (v0.c0 IN ()) THEN TRIM(v0.c0) END;
SELECT * FROM v0 WHERE ((((v0.c1)) BETWEEN ((IFNULL(DISTINCT v0.c1, v0.c1))) AND (((v0.c0 IN ()))))) ORDER BY (~ ('},/')), CASE (- (v0.c1))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '-2085162457' END THEN CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END ELSE CAST(v0.c0 AS TEXT) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) BETWEEN ((IFNULL(DISTINCT v0.c1, v0.c1))) AND (((v0.c0 IN ()))))) IS TRUE)  as count FROM v0 ORDER BY (~ ('},/')), CASE (- (v0.c1))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '-2085162457' END THEN CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END ELSE CAST(v0.c0 AS TEXT) END ASC  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c1)) BETWEEN ((IFNULL(DISTINCT v0.c1, v0.c1))) AND (((v0.c0 IN ()))))) ORDER BY (~ ('},/')), CASE (- (v0.c1))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '-2085162457' END THEN CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END ELSE CAST(v0.c0 AS TEXT) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) BETWEEN ((IFNULL(DISTINCT v0.c1, v0.c1))) AND (((v0.c0 IN ()))))) IS TRUE)  as count FROM v0 ORDER BY (~ ('},/')), CASE (- (v0.c1))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '-2085162457' END THEN CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END ELSE CAST(v0.c0 AS TEXT) END ASC  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c1)) BETWEEN ((IFNULL(DISTINCT v0.c1, v0.c1))) AND (((v0.c0 IN ()))))) ORDER BY (~ ('},/')), CASE (- (v0.c1))  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '-2085162457' END THEN CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END ELSE CAST(v0.c0 AS TEXT) END ASC  NULLS LAST;
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CAST(((t0.c86)|(t0.c32)) AS TEXT) WHERE (((CASE WHEN t0.c13 THEN t0.c13 ELSE vt0.c0 END)<(json_quote(t0.c86)))) ORDER BY (CAST(t0.c13 AS REAL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c13 THEN t0.c13 ELSE vt0.c0 END)<(json_quote(t0.c86)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CAST(((t0.c86)|(t0.c32)) AS TEXT) ORDER BY (CAST(t0.c13 AS REAL) IN ())  NULLS FIRST);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CAST(((t0.c86)|(t0.c32)) AS TEXT) WHERE (((CASE WHEN t0.c13 THEN t0.c13 ELSE vt0.c0 END)<(json_quote(t0.c86)))) ORDER BY (CAST(t0.c13 AS REAL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c13 THEN t0.c13 ELSE vt0.c0 END)<(json_quote(t0.c86)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CAST(((t0.c86)|(t0.c32)) AS TEXT) ORDER BY (CAST(t0.c13 AS REAL) IN ())  NULLS FIRST);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CAST(((t0.c86)|(t0.c32)) AS TEXT) WHERE (((CASE WHEN t0.c13 THEN t0.c13 ELSE vt0.c0 END)<(json_quote(t0.c86)))) ORDER BY (CAST(t0.c13 AS REAL) IN ())  NULLS FIRST;
SELECT * FROM t0, vt0, v0 WHERE (((((((((((((t0.c86)AND((- (v0.c2)))))AND(((v0.c2)AND(t0.c86)))))OR(((t0.c32) BETWEEN ('1232454308') AND (v0.c2)))))OR(((x'')>>(v0.c1)))))OR((((t0.c13))==((vt0.c0))))))AND((((((((((((('iF')OR(t0.c32)))OR(v0.c2)))AND(v0.c1)))OR(v0.c0)))AND(t0.c13)))OR(t0.c86)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c86)AND((- (v0.c2)))))AND(((v0.c2)AND(t0.c86)))))OR(((t0.c32) BETWEEN ('1232454308') AND (v0.c2)))))OR(((x'')>>(v0.c1)))))OR((((t0.c13))=((vt0.c0))))))AND((((((((((((('iF')OR(t0.c32)))OR(v0.c2)))AND(v0.c1)))OR(v0.c0)))AND(t0.c13)))OR(t0.c86))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE (((((((((((((t0.c86)AND((- (v0.c2)))))AND(((v0.c2)AND(t0.c86)))))OR(((t0.c32) BETWEEN ('1232454308') AND (v0.c2)))))OR(((x'')>>(v0.c1)))))OR((((t0.c13))==((vt0.c0))))))AND((((((((((((('iF')OR(t0.c32)))OR(v0.c2)))AND(v0.c1)))OR(v0.c0)))AND(t0.c13)))OR(t0.c86)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c86)AND((- (v0.c2)))))AND(((v0.c2)AND(t0.c86)))))OR(((t0.c32) BETWEEN ('1232454308') AND (v0.c2)))))OR(((x'')>>(v0.c1)))))OR((((t0.c13))=((vt0.c0))))))AND((((((((((((('iF')OR(t0.c32)))OR(v0.c2)))AND(v0.c1)))OR(v0.c0)))AND(t0.c13)))OR(t0.c86))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE (((((((((((((t0.c86)AND((- (v0.c2)))))AND(((v0.c2)AND(t0.c86)))))OR(((t0.c32) BETWEEN ('1232454308') AND (v0.c2)))))OR(((x'')>>(v0.c1)))))OR((((t0.c13))==((vt0.c0))))))AND((((((((((((('iF')OR(t0.c32)))OR(v0.c2)))AND(v0.c1)))OR(v0.c0)))AND(t0.c13)))OR(t0.c86)))));
SELECT COUNT(*) FROM vt0, v0 FULL OUTER JOIN t0 ON CASE WHEN CASE v0.c2  WHEN vt0.c0 THEN t0.c86 WHEN t0.c32 THEN v0.c2 WHEN v0.c0 THEN vt0.c0 ELSE v0.c1 END THEN t0.c13 COLLATE RTRIM END WHERE (CASE WHEN LIKE(t0.c32, ' ', '7') THEN (((v0.c2))>=((t0.c32))) WHEN IFNULL(DISTINCT vt0.c0, v0.c0) THEN CAST(v0.c2 AS BLOB) WHEN (v0.c1 IN ()) THEN ((vt0.c0) BETWEEN (x'17d5') AND (t0.c86)) ELSE (((v0.c0))<>((t0.c86))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKE(t0.c32, ' ', '7') THEN (((v0.c2))>=((t0.c32))) WHEN IFNULL(DISTINCT vt0.c0, v0.c0) THEN CAST(v0.c2 AS BLOB) WHEN (v0.c1 IN ()) THEN ((vt0.c0) BETWEEN (x'17d5') AND (t0.c86)) ELSE (((v0.c0))<>((t0.c86))) END) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN t0 ON CASE WHEN CASE v0.c2  WHEN vt0.c0 THEN t0.c86 WHEN t0.c32 THEN v0.c2 WHEN v0.c0 THEN vt0.c0 ELSE v0.c1 END THEN t0.c13 COLLATE RTRIM END);
SELECT COUNT(*) FROM vt0, v0 FULL OUTER JOIN t0 ON CASE WHEN CASE v0.c2  WHEN vt0.c0 THEN t0.c86 WHEN t0.c32 THEN v0.c2 WHEN v0.c0 THEN vt0.c0 ELSE v0.c1 END THEN t0.c13 COLLATE RTRIM END WHERE (CASE WHEN LIKE(t0.c32, ' ', '7') THEN (((v0.c2))>=((t0.c32))) WHEN IFNULL(DISTINCT vt0.c0, v0.c0) THEN CAST(v0.c2 AS BLOB) WHEN (v0.c1 IN ()) THEN ((vt0.c0) BETWEEN (x'17d5') AND (t0.c86)) ELSE (((v0.c0))<>((t0.c86))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKE(t0.c32, ' ', '7') THEN (((v0.c2))>=((t0.c32))) WHEN IFNULL(DISTINCT vt0.c0, v0.c0) THEN CAST(v0.c2 AS BLOB) WHEN (v0.c1 IN ()) THEN ((vt0.c0) BETWEEN (x'17d5') AND (t0.c86)) ELSE (((v0.c0))<>((t0.c86))) END) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN t0 ON CASE WHEN CASE v0.c2  WHEN vt0.c0 THEN t0.c86 WHEN t0.c32 THEN v0.c2 WHEN v0.c0 THEN vt0.c0 ELSE v0.c1 END THEN t0.c13 COLLATE RTRIM END);
SELECT COUNT(*) FROM vt0, v0 FULL OUTER JOIN t0 ON CASE WHEN CASE v0.c2  WHEN vt0.c0 THEN t0.c86 WHEN t0.c32 THEN v0.c2 WHEN v0.c0 THEN vt0.c0 ELSE v0.c1 END THEN t0.c13 COLLATE RTRIM END WHERE (CASE WHEN LIKE(t0.c32, ' ', '7') THEN (((v0.c2))>=((t0.c32))) WHEN IFNULL(DISTINCT vt0.c0, v0.c0) THEN CAST(v0.c2 AS BLOB) WHEN (v0.c1 IN ()) THEN ((vt0.c0) BETWEEN (x'17d5') AND (t0.c86)) ELSE (((v0.c0))<>((t0.c86))) END);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (v0.c0) ORDER BY NULL COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY NULL COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (v0.c0) ORDER BY NULL COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY NULL COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (v0.c0) ORDER BY NULL COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON LIKELY(((t0.c32)-(v0.c2))) RIGHT OUTER JOIN v0 ON (+ (t0.c86 COLLATE BINARY)) WHERE (((vt0.c0)<>(v0.c2))) ORDER BY (((v0.c1) NOTNULL) IN ()) DESC  NULLS LAST, t0.c32;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<>(v0.c2))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON LIKELY(((t0.c32)-(v0.c2))) RIGHT OUTER JOIN v0 ON (+ (t0.c86 COLLATE BINARY)) ORDER BY (((v0.c1) NOTNULL) IN ()) DESC  NULLS LAST, t0.c32);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON LIKELY(((t0.c32)-(v0.c2))) RIGHT OUTER JOIN v0 ON (+ (t0.c86 COLLATE BINARY)) WHERE (((vt0.c0)<>(v0.c2))) ORDER BY (((v0.c1) NOTNULL) IN ()) DESC  NULLS LAST, t0.c32;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<>(v0.c2))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON LIKELY(((t0.c32)-(v0.c2))) RIGHT OUTER JOIN v0 ON (+ (t0.c86 COLLATE BINARY)) ORDER BY (((v0.c1) NOTNULL) IN ()) DESC  NULLS LAST, t0.c32);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (IFNULL(DISTINCT (((v0.c2))>=((t0.c13))), (~ (v0.c2)))) ORDER BY 1.905680079E9 ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT (((v0.c2))>=((t0.c13))), (~ (v0.c2)))) IS TRUE)  as count FROM v0, t0 ORDER BY 1.905680079E9 ASC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (IFNULL(DISTINCT (((v0.c2))>=((t0.c13))), (~ (v0.c2)))) ORDER BY 1.905680079E9 ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT (((v0.c2))>=((t0.c13))), (~ (v0.c2)))) IS TRUE)  as count FROM v0, t0 ORDER BY 1.905680079E9 ASC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (IFNULL(DISTINCT (((v0.c2))>=((t0.c13))), (~ (v0.c2)))) ORDER BY 1.905680079E9 ASC;
SELECT ALL * FROM t0, vt0, v0 WHERE (((((CASE WHEN t0.c13 THEN v0.c2 ELSE vt0.c0 END)OR(0xfffffffffb6014e1)))OR(((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t0.c13 THEN v0.c2 ELSE vt0.c0 END)OR(0Xfffffffffb6014e1)))OR(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE (((((CASE WHEN t0.c13 THEN v0.c2 ELSE vt0.c0 END)OR(0xfffffffffb6014e1)))OR(((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t0.c13 THEN v0.c2 ELSE vt0.c0 END)OR(0Xfffffffffb6014e1)))OR(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE (((((CASE WHEN t0.c13 THEN v0.c2 ELSE vt0.c0 END)OR(0xfffffffffb6014e1)))OR(((vt0.c0)GLOB(vt0.c0)))));
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0 IN (v0.c1))))>((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN (v0.c1))))>((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0 IN (v0.c1))))>((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN (v0.c1))))>((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0 IN (v0.c1))))>((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END))));
SELECT ALL COUNT(*) FROM vt0, t0 NOT INDEXED WHERE (CAST(t0.c32 AS REAL) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c32 AS REAL) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 NOT INDEXED WHERE (CAST(t0.c32 AS REAL) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c32 AS REAL) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 NOT INDEXED WHERE (CAST(t0.c32 AS REAL) COLLATE NOCASE COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)LIKE(vt0.c0)) THEN ((vt0.c0)-(vt0.c0)) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)LIKE(vt0.c0)) THEN ((vt0.c0)-(vt0.c0)) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)LIKE(vt0.c0)) THEN ((vt0.c0)-(vt0.c0)) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)LIKE(vt0.c0)) THEN ((vt0.c0)-(vt0.c0)) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)LIKE(vt0.c0)) THEN ((vt0.c0)-(vt0.c0)) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (LENGTH(((vt0.c0)>(t0.c13)))) ORDER BY (~ (t0.c13));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((vt0.c0)>(t0.c13)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (~ (t0.c13)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (LENGTH(((vt0.c0)>(t0.c13)))) ORDER BY (~ (t0.c13));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((vt0.c0)>(t0.c13)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (~ (t0.c13)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (LENGTH(((vt0.c0)>(t0.c13)))) ORDER BY (~ (t0.c13));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (NOT (LTRIM(v0.c0, v0.c0))) CROSS JOIN t0 ON CASE t0.c86  WHEN ((t0.c32) ISNULL) THEN CAST(t0.c86 AS BLOB) ELSE (- (v0.c1)) END WHERE (CASE WHEN json_array_length(t0.c86, t0.c86) THEN (NOT (v0.c2)) ELSE CASE v0.c2  WHEN v0.c0 THEN NULL ELSE t0.c13 END END) ORDER BY CASE WHEN (- (v0.c0)) THEN '-1602603693' ELSE ((vt0.c0) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_array_length(t0.c86, t0.c86) THEN (NOT (v0.c2)) ELSE CASE v0.c2  WHEN v0.c0 THEN NULL ELSE t0.c13 END END) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (NOT (LTRIM(v0.c0, v0.c0))) CROSS JOIN t0 ON CASE t0.c86  WHEN ((t0.c32) ISNULL) THEN CAST(t0.c86 AS BLOB) ELSE (- (v0.c1)) END ORDER BY CASE WHEN (- (v0.c0)) THEN '-1602603693' ELSE ((vt0.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (NOT (LTRIM(v0.c0, v0.c0))) CROSS JOIN t0 ON CASE t0.c86  WHEN ((t0.c32) ISNULL) THEN CAST(t0.c86 AS BLOB) ELSE (- (v0.c1)) END WHERE (CASE WHEN json_array_length(t0.c86, t0.c86) THEN (NOT (v0.c2)) ELSE CASE v0.c2  WHEN v0.c0 THEN NULL ELSE t0.c13 END END) ORDER BY CASE WHEN (- (v0.c0)) THEN '-1602603693' ELSE ((vt0.c0) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_array_length(t0.c86, t0.c86) THEN (NOT (v0.c2)) ELSE CASE v0.c2  WHEN v0.c0 THEN NULL ELSE t0.c13 END END) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (NOT (LTRIM(v0.c0, v0.c0))) CROSS JOIN t0 ON CASE t0.c86  WHEN ((t0.c32) ISNULL) THEN CAST(t0.c86 AS BLOB) ELSE (- (v0.c1)) END ORDER BY CASE WHEN (- (v0.c0)) THEN '-1602603693' ELSE ((vt0.c0) NOT NULL) END);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOTNULL)) BETWEEN (((v0.c2)||(v0.c2))) AND (CAST(v0.c1 AS NUMERIC)))) ORDER BY '-1027962872';
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL)) BETWEEN (((v0.c2)||(v0.c2))) AND (CAST(v0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0 ORDER BY '-1027962872');
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOTNULL)) BETWEEN (((v0.c2)||(v0.c2))) AND (CAST(v0.c1 AS NUMERIC)))) ORDER BY '-1027962872';
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL)) BETWEEN (((v0.c2)||(v0.c2))) AND (CAST(v0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0 ORDER BY '-1027962872');
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOTNULL)) BETWEEN (((v0.c2)||(v0.c2))) AND (CAST(v0.c1 AS NUMERIC)))) ORDER BY '-1027962872';
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((0xffffffffde598e3d)))) ORDER BY CAST(0xffffffffd6bc72b1 AS REAL)  NULLS FIRST, (UPPER(vt0.c0) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((0Xffffffffde598e3d)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(0xffffffffd6bc72b1 AS REAL)  NULLS FIRST, (UPPER(vt0.c0) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((0xffffffffde598e3d)))) ORDER BY CAST(0xffffffffd6bc72b1 AS REAL)  NULLS FIRST, (UPPER(vt0.c0) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((0Xffffffffde598e3d)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(0xffffffffd6bc72b1 AS REAL)  NULLS FIRST, (UPPER(vt0.c0) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((0xffffffffde598e3d)))) ORDER BY CAST(0xffffffffd6bc72b1 AS REAL)  NULLS FIRST, (UPPER(vt0.c0) IN ()) ASC;
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (NULL COLLATE BINARY) ORDER BY ((t0.c32)GLOB(t0.c13)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((t0.c32)GLOB(t0.c13)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (NULL COLLATE BINARY) ORDER BY ((t0.c32)GLOB(t0.c13)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((t0.c32)GLOB(t0.c13)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (NULL COLLATE BINARY) ORDER BY ((t0.c32)GLOB(t0.c13)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (0.04400715201016514) ORDER BY ((- (t0.c86)) IN ());
SELECT SUM(count) FROM (SELECT ((0.04400715201016514) IS TRUE)  as count FROM t0, v0 ORDER BY ((- (t0.c86)) IN ()));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (0.04400715201016514) ORDER BY ((- (t0.c86)) IN ());
SELECT SUM(count) FROM (SELECT ((0.04400715201016514) IS TRUE)  as count FROM t0, v0 ORDER BY ((- (t0.c86)) IN ()));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (0.04400715201016514) ORDER BY ((- (t0.c86)) IN ());
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)-(x'f6a2')))OR(CAST(vt0.c0 AS REAL))))OR((vt0.c0 IN (vt0.c0))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)-(x'f6a2')))OR(CAST(vt0.c0 AS REAL))))OR((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)-(x'f6a2')))OR(CAST(vt0.c0 AS REAL))))OR((vt0.c0 IN (vt0.c0))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)-(x'f6a2')))OR(CAST(vt0.c0 AS REAL))))OR((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)-(x'f6a2')))OR(CAST(vt0.c0 AS REAL))))OR((vt0.c0 IN (vt0.c0))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (-1.033898982E9) ORDER BY (((((v0.c0, v0.c1, '1192918336'))<=((v0.c0, v0.c1, v0.c1)))) IS TRUE), ((json_array_length(v0.c2, vt0.c0))LIKE(CAST(x'' AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-1.033898982E9) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((v0.c0, v0.c1, '1192918336'))<=((v0.c0, v0.c1, v0.c1)))) IS TRUE), ((json_array_length(v0.c2, vt0.c0))LIKE(CAST(x'' AS BLOB))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (-1.033898982E9) ORDER BY (((((v0.c0, v0.c1, '1192918336'))<=((v0.c0, v0.c1, v0.c1)))) IS TRUE), ((json_array_length(v0.c2, vt0.c0))LIKE(CAST(x'' AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-1.033898982E9) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((v0.c0, v0.c1, '1192918336'))<=((v0.c0, v0.c1, v0.c1)))) IS TRUE), ((json_array_length(v0.c2, vt0.c0))LIKE(CAST(x'' AS BLOB))) DESC  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((((((v0.c0)|(t0.c86)))OR(CAST(t0.c32 AS NUMERIC))))AND(((t0.c86)<(v0.c1))))) ORDER BY LIKE((t0.c13 IN ()), ((t0.c13) NOT NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)|(t0.c86)))OR(CAST(t0.c32 AS NUMERIC))))AND(((t0.c86)<(v0.c1))))) IS TRUE)  as count FROM t0, v0 ORDER BY LIKE((t0.c13 IN ()), ((t0.c13) NOT NULL)) ASC);
SELECT * FROM t0, v0 WHERE (((((((v0.c0)|(t0.c86)))OR(CAST(t0.c32 AS NUMERIC))))AND(((t0.c86)<(v0.c1))))) ORDER BY LIKE((t0.c13 IN ()), ((t0.c13) NOT NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)|(t0.c86)))OR(CAST(t0.c32 AS NUMERIC))))AND(((t0.c86)<(v0.c1))))) IS TRUE)  as count FROM t0, v0 ORDER BY LIKE((t0.c13 IN ()), ((t0.c13) NOT NULL)) ASC);
SELECT * FROM t0, v0 WHERE (((((((v0.c0)|(t0.c86)))OR(CAST(t0.c32 AS NUMERIC))))AND(((t0.c86)<(v0.c1))))) ORDER BY LIKE((t0.c13 IN ()), ((t0.c13) NOT NULL)) ASC;
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((((t0.c86)<=(v0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c86)<=(v0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((((t0.c86)<=(v0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c86)<=(v0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((((t0.c86)<=(v0.c1))) ISNULL));
SELECT ALL * FROM t0, vt0 WHERE (0.0021913529201775805);
SELECT SUM(count) FROM (SELECT ALL ((0.0021913529201775805) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (0.0021913529201775805);
SELECT SUM(count) FROM (SELECT ALL ((0.0021913529201775805) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (0.0021913529201775805);
SELECT * FROM v0 WHERE (0.7171178018264225) ORDER BY ((((v0.c1)%(v0.c0))) BETWEEN ((0.6203844018499571 IN ())) AND ((((v0.c0))<((x''))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7171178018264225) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1)%(v0.c0))) BETWEEN ((0.6203844018499571 IN ())) AND ((((v0.c0))<((x''))))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (0.7171178018264225) ORDER BY ((((v0.c1)%(v0.c0))) BETWEEN ((0.6203844018499571 IN ())) AND ((((v0.c0))<((x''))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7171178018264225) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1)%(v0.c0))) BETWEEN ((0.6203844018499571 IN ())) AND ((((v0.c0))<((x''))))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (0.7171178018264225) ORDER BY ((((v0.c1)%(v0.c0))) BETWEEN ((0.6203844018499571 IN ())) AND ((((v0.c0))<((x''))))) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0, v0 WHERE (((0.37600312101782496) BETWEEN (((t0.c86)>>(v0.c1))) AND (CAST(v0.c0 AS BLOB)))) ORDER BY ((- (v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((0.37600312101782496) BETWEEN (((t0.c86)>>(v0.c1))) AND (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((- (v0.c0)) IN ()));
SELECT ALL * FROM t0, vt0, v0 WHERE (((0.37600312101782496) BETWEEN (((t0.c86)>>(v0.c1))) AND (CAST(v0.c0 AS BLOB)))) ORDER BY ((- (v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((0.37600312101782496) BETWEEN (((t0.c86)>>(v0.c1))) AND (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((- (v0.c0)) IN ()));
SELECT ALL * FROM t0, vt0, v0 WHERE (((0.37600312101782496) BETWEEN (((t0.c86)>>(v0.c1))) AND (CAST(v0.c0 AS BLOB)))) ORDER BY ((- (v0.c0)) IN ());
SELECT ALL * FROM vt0, v0, t0 WHERE (((((t0.c13) NOTNULL)) BETWEEN (((t0.c13) NOT NULL)) AND (((0.16691570191150318)|(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c13) NOTNULL)) BETWEEN (((t0.c13) NOT NULL)) AND (((0.16691570191150318)|(v0.c1))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE (((((t0.c13) NOTNULL)) BETWEEN (((t0.c13) NOT NULL)) AND (((0.16691570191150318)|(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c13) NOTNULL)) BETWEEN (((t0.c13) NOT NULL)) AND (((0.16691570191150318)|(v0.c1))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE (((((t0.c13) NOTNULL)) BETWEEN (((t0.c13) NOT NULL)) AND (((0.16691570191150318)|(v0.c1)))));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((RTRIM(v0.c1))|(CAST(t0.c32 AS INTEGER)))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS TEXT) ASC, LOWER(('' IN ())) DESC  NULLS LAST, ((((CASE t0.c32  WHEN v0.c0 THEN t0.c13 ELSE -1144778198 END)OR(t0.c13 COLLATE RTRIM)))AND(t0.c86))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((RTRIM(v0.c1))|(CAST(t0.c32 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS TEXT) ASC, LOWER(('' IN ())) DESC  NULLS LAST, ((((CASE t0.c32  WHEN v0.c0 THEN t0.c13 ELSE -1144778198 END)OR(t0.c13 COLLATE RTRIM)))AND(t0.c86))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((RTRIM(v0.c1))|(CAST(t0.c32 AS INTEGER)))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS TEXT) ASC, LOWER(('' IN ())) DESC  NULLS LAST, ((((CASE t0.c32  WHEN v0.c0 THEN t0.c13 ELSE -1144778198 END)OR(t0.c13 COLLATE RTRIM)))AND(t0.c86))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((RTRIM(v0.c1))|(CAST(t0.c32 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS TEXT) ASC, LOWER(('' IN ())) DESC  NULLS LAST, ((((CASE t0.c32  WHEN v0.c0 THEN t0.c13 ELSE -1144778198 END)OR(t0.c13 COLLATE RTRIM)))AND(t0.c86))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((RTRIM(v0.c1))|(CAST(t0.c32 AS INTEGER)))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS TEXT) ASC, LOWER(('' IN ())) DESC  NULLS LAST, ((((CASE t0.c32  WHEN v0.c0 THEN t0.c13 ELSE -1144778198 END)OR(t0.c13 COLLATE RTRIM)))AND(t0.c86))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (v0.c2);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ('487867007' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('487867007' COLLATE BINARY) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ('487867007' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('487867007' COLLATE BINARY) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ('487867007' COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c13)%(t0.c86)))AND(t0.c13 COLLATE BINARY)))AND(((t0.c13) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c13)%(t0.c86)))AND(t0.c13 COLLATE BINARY)))AND(((t0.c13) IS TRUE)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c13)%(t0.c86)))AND(t0.c13 COLLATE BINARY)))AND(((t0.c13) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c13)%(t0.c86)))AND(t0.c13 COLLATE BINARY)))AND(((t0.c13) IS TRUE)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c13)%(t0.c86)))AND(t0.c13 COLLATE BINARY)))AND(((t0.c13) IS TRUE))));
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c32))) ORDER BY CAST((+ (t0.c32)) AS TEXT)  NULLS FIRST, ((NOT (NULL)) IN (((((((((((((t0.c86)AND(t0.c32)))OR(t0.c32)))AND(t0.c32)))AND('916220105')))OR(t0.c13)))OR(t0.c13)), ((t0.c13)<<(t0.c32)))) ASC, ((LIKELY(t0.c32))%((NOT (t0.c32)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (t0.c32))) IS TRUE)  as count FROM t0 ORDER BY CAST((+ (t0.c32)) AS TEXT)  NULLS FIRST, ((NOT (NULL)) IN (((((((((((((t0.c86)AND(t0.c32)))OR(t0.c32)))AND(t0.c32)))AND('916220105')))OR(t0.c13)))OR(t0.c13)), ((t0.c13)<<(t0.c32)))) ASC, ((LIKELY(t0.c32))%((NOT (t0.c32)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c32))) ORDER BY CAST((+ (t0.c32)) AS TEXT)  NULLS FIRST, ((NOT (NULL)) IN (((((((((((((t0.c86)AND(t0.c32)))OR(t0.c32)))AND(t0.c32)))AND('916220105')))OR(t0.c13)))OR(t0.c13)), ((t0.c13)<<(t0.c32)))) ASC, ((LIKELY(t0.c32))%((NOT (t0.c32)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (t0.c32))) IS TRUE)  as count FROM t0 ORDER BY CAST((+ (t0.c32)) AS TEXT)  NULLS FIRST, ((NOT (NULL)) IN (((((((((((((t0.c86)AND(t0.c32)))OR(t0.c32)))AND(t0.c32)))AND('916220105')))OR(t0.c13)))OR(t0.c13)), ((t0.c13)<<(t0.c32)))) ASC, ((LIKELY(t0.c32))%((NOT (t0.c32)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c32))) ORDER BY CAST((+ (t0.c32)) AS TEXT)  NULLS FIRST, ((NOT (NULL)) IN (((((((((((((t0.c86)AND(t0.c32)))OR(t0.c32)))AND(t0.c32)))AND('916220105')))OR(t0.c13)))OR(t0.c13)), ((t0.c13)<<(t0.c32)))) ASC, ((LIKELY(t0.c32))%((NOT (t0.c32)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (0Xa9a3e95)), ((vt0.c0)<=(vt0.c0)), ((vt0.c0) NOT NULL))) AND ((NULL, ((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))OR(vt0.c0)))AND(vt0.c0)), vt0.c0)))) ORDER BY (((vt0.c0)AND(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (0xa9a3e95)), ((vt0.c0)<=(vt0.c0)), ((vt0.c0) NOT NULL))) AND ((NULL, ((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))OR(vt0.c0)))AND(vt0.c0)), vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)AND(vt0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (0Xa9a3e95)), ((vt0.c0)<=(vt0.c0)), ((vt0.c0) NOT NULL))) AND ((NULL, ((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))OR(vt0.c0)))AND(vt0.c0)), vt0.c0)))) ORDER BY (((vt0.c0)AND(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (0xa9a3e95)), ((vt0.c0)<=(vt0.c0)), ((vt0.c0) NOT NULL))) AND ((NULL, ((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))OR(vt0.c0)))AND(vt0.c0)), vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)AND(vt0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (0Xa9a3e95)), ((vt0.c0)<=(vt0.c0)), ((vt0.c0) NOT NULL))) AND ((NULL, ((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))OR(vt0.c0)))AND(vt0.c0)), vt0.c0)))) ORDER BY (((vt0.c0)AND(vt0.c0)) IN ()) ASC;
SELECT ALL * FROM t0, vt0, v0 WHERE (t0.c86) ORDER BY HEX(((v0.c2) IS FALSE)) DESC  NULLS LAST, ((((((((((((((t0.c86)OR(t0.c86)))AND(t0.c32)))AND(vt0.c0)))OR(t0.c13)))OR(t0.c32)))AND(t0.c13))) BETWEEN (((((((((v0.c0)AND(v0.c2)))OR(t0.c86)))AND(v0.c1)))OR(v0.c1))) AND ((- (t0.c13))))  NULLS FIRST, -9223372036854775808 ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c86) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY HEX(((v0.c2) IS FALSE)) DESC  NULLS LAST, ((((((((((((((t0.c86)OR(t0.c86)))AND(t0.c32)))AND(vt0.c0)))OR(t0.c13)))OR(t0.c32)))AND(t0.c13))) BETWEEN (((((((((v0.c0)AND(v0.c2)))OR(t0.c86)))AND(v0.c1)))OR(v0.c1))) AND ((- (t0.c13))))  NULLS FIRST, -9223372036854775808 ASC);
SELECT ALL * FROM t0, vt0, v0 WHERE (t0.c86) ORDER BY HEX(((v0.c2) IS FALSE)) DESC  NULLS LAST, ((((((((((((((t0.c86)OR(t0.c86)))AND(t0.c32)))AND(vt0.c0)))OR(t0.c13)))OR(t0.c32)))AND(t0.c13))) BETWEEN (((((((((v0.c0)AND(v0.c2)))OR(t0.c86)))AND(v0.c1)))OR(v0.c1))) AND ((- (t0.c13))))  NULLS FIRST, -9223372036854775808 ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c86) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY HEX(((v0.c2) IS FALSE)) DESC  NULLS LAST, ((((((((((((((t0.c86)OR(t0.c86)))AND(t0.c32)))AND(vt0.c0)))OR(t0.c13)))OR(t0.c32)))AND(t0.c13))) BETWEEN (((((((((v0.c0)AND(v0.c2)))OR(t0.c86)))AND(v0.c1)))OR(v0.c1))) AND ((- (t0.c13))))  NULLS FIRST, -9223372036854775808 ASC);
SELECT ALL * FROM t0, vt0, v0 WHERE (t0.c86) ORDER BY HEX(((v0.c2) IS FALSE)) DESC  NULLS LAST, ((((((((((((((t0.c86)OR(t0.c86)))AND(t0.c32)))AND(vt0.c0)))OR(t0.c13)))OR(t0.c32)))AND(t0.c13))) BETWEEN (((((((((v0.c0)AND(v0.c2)))OR(t0.c86)))AND(v0.c1)))OR(v0.c1))) AND ((- (t0.c13))))  NULLS FIRST, -9223372036854775808 ASC;
SELECT ALL * FROM v0 WHERE (0.41327946985155006) ORDER BY CAST(TOTAL_CHANGES() AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.41327946985155006) IS TRUE)  as count FROM v0 ORDER BY CAST(TOTAL_CHANGES() AS INTEGER) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (0.41327946985155006) ORDER BY CAST(TOTAL_CHANGES() AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.41327946985155006) IS TRUE)  as count FROM v0 ORDER BY CAST(TOTAL_CHANGES() AS INTEGER) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (0.41327946985155006) ORDER BY CAST(TOTAL_CHANGES() AS INTEGER) ASC  NULLS LAST;
SELECT ALL * FROM t0, v0 WHERE (0.32587010416256723) ORDER BY (((v0.c2)) NOT BETWEEN ((((v0.c1) IS TRUE))) AND ((((v0.c2)&(v0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.32587010416256723) IS TRUE)  as count FROM t0, v0 ORDER BY (((v0.c2)) NOT BETWEEN ((((v0.c1) IS TRUE))) AND ((((v0.c2)&(v0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, v0 WHERE (0.32587010416256723) ORDER BY (((v0.c2)) NOT BETWEEN ((((v0.c1) IS TRUE))) AND ((((v0.c2)&(v0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.32587010416256723) IS TRUE)  as count FROM t0, v0 ORDER BY (((v0.c2)) NOT BETWEEN ((((v0.c1) IS TRUE))) AND ((((v0.c2)&(v0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, v0 WHERE (0.32587010416256723) ORDER BY (((v0.c2)) NOT BETWEEN ((((v0.c1) IS TRUE))) AND ((((v0.c2)&(v0.c0))))) ASC  NULLS FIRST;
SELECT * FROM v0, t0, vt0 WHERE (CASE ((t0.c86) NOTNULL)  WHEN ((t0.c32) NOTNULL) THEN ((v0.c2)-(v0.c1)) END) ORDER BY (((((t0.c13))<((v0.c2)))) NOT BETWEEN (IFNULL(v0.c1, v0.c2)) AND (((v0.c2) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c86) NOTNULL)  WHEN ((t0.c32) NOTNULL) THEN ((v0.c2)-(v0.c1)) END) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((((t0.c13))<((v0.c2)))) NOT BETWEEN (IFNULL(v0.c1, v0.c2)) AND (((v0.c2) IS TRUE))) ASC  NULLS FIRST);
SELECT * FROM v0, t0, vt0 WHERE (CASE ((t0.c86) NOTNULL)  WHEN ((t0.c32) NOTNULL) THEN ((v0.c2)-(v0.c1)) END) ORDER BY (((((t0.c13))<((v0.c2)))) NOT BETWEEN (IFNULL(v0.c1, v0.c2)) AND (((v0.c2) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c86) NOTNULL)  WHEN ((t0.c32) NOTNULL) THEN ((v0.c2)-(v0.c1)) END) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((((t0.c13))<((v0.c2)))) NOT BETWEEN (IFNULL(v0.c1, v0.c2)) AND (((v0.c2) IS TRUE))) ASC  NULLS FIRST);
SELECT * FROM v0, t0, vt0 WHERE (CASE ((t0.c86) NOTNULL)  WHEN ((t0.c32) NOTNULL) THEN ((v0.c2)-(v0.c1)) END) ORDER BY (((((t0.c13))<((v0.c2)))) NOT BETWEEN (IFNULL(v0.c1, v0.c2)) AND (((v0.c2) IS TRUE))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (v0.c0 COLLATE RTRIM IN ((v0.c1 IN ()))) RIGHT OUTER JOIN v0 ON ((CASE WHEN t0.c86 THEN x'' WHEN vt0.c0 THEN t0.c13 WHEN t0.c32 THEN v0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c13 THEN t0.c32 END) NOT BETWEEN ((v0.c0 IN (t0.c32, t0.c13, v0.c2))) AND (CASE t0.c86  WHEN v0.c0 THEN '1388815900' WHEN t0.c32 THEN v0.c1 WHEN vt0.c0 THEN x'' END)) WHERE (CAST(((t0.c13)IS(v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c13)IS(v0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (v0.c0 COLLATE RTRIM IN ((v0.c1 IN ()))) RIGHT OUTER JOIN v0 ON ((CASE WHEN t0.c86 THEN x'' WHEN vt0.c0 THEN t0.c13 WHEN t0.c32 THEN v0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c13 THEN t0.c32 END) NOT BETWEEN ((v0.c0 IN (t0.c32, t0.c13, v0.c2))) AND (CASE t0.c86  WHEN v0.c0 THEN '1388815900' WHEN t0.c32 THEN v0.c1 WHEN vt0.c0 THEN x'' END)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (v0.c0 COLLATE RTRIM IN ((v0.c1 IN ()))) RIGHT OUTER JOIN v0 ON ((CASE WHEN t0.c86 THEN x'' WHEN vt0.c0 THEN t0.c13 WHEN t0.c32 THEN v0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c13 THEN t0.c32 END) NOT BETWEEN ((v0.c0 IN (t0.c32, t0.c13, v0.c2))) AND (CASE t0.c86  WHEN v0.c0 THEN '1388815900' WHEN t0.c32 THEN v0.c1 WHEN vt0.c0 THEN x'' END)) WHERE (CAST(((t0.c13)IS(v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c13)IS(v0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (v0.c0 COLLATE RTRIM IN ((v0.c1 IN ()))) RIGHT OUTER JOIN v0 ON ((CASE WHEN t0.c86 THEN x'' WHEN vt0.c0 THEN t0.c13 WHEN t0.c32 THEN v0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c13 THEN t0.c32 END) NOT BETWEEN ((v0.c0 IN (t0.c32, t0.c13, v0.c2))) AND (CASE t0.c86  WHEN v0.c0 THEN '1388815900' WHEN t0.c32 THEN v0.c1 WHEN vt0.c0 THEN x'' END)));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((((((v0.c1)) NOT BETWEEN ((t0.c86)) AND ((NULL))))AND('')))AND((t0.c13 IN ())))) ORDER BY IFNULL(DISTINCT CAST(v0.c1 AS INTEGER), ((((t0.c86)AND(vt0.c0)))OR(v0.c0))), ((vt0.c0)%(t0.c32)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((((((v0.c1)) NOT BETWEEN ((t0.c86)) AND ((NULL))))AND('')))AND((t0.c13 IN ())))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY IFNULL(DISTINCT CAST(v0.c1 AS INTEGER), ((((t0.c86)AND(vt0.c0)))OR(v0.c0))), ((vt0.c0)%(t0.c32)) COLLATE NOCASE);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((((((v0.c1)) NOT BETWEEN ((t0.c86)) AND ((NULL))))AND('')))AND((t0.c13 IN ())))) ORDER BY IFNULL(DISTINCT CAST(v0.c1 AS INTEGER), ((((t0.c86)AND(vt0.c0)))OR(v0.c0))), ((vt0.c0)%(t0.c32)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((((((v0.c1)) NOT BETWEEN ((t0.c86)) AND ((NULL))))AND('')))AND((t0.c13 IN ())))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY IFNULL(DISTINCT CAST(v0.c1 AS INTEGER), ((((t0.c86)AND(vt0.c0)))OR(v0.c0))), ((vt0.c0)%(t0.c32)) COLLATE NOCASE);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((((((v0.c1)) NOT BETWEEN ((t0.c86)) AND ((NULL))))AND('')))AND((t0.c13 IN ())))) ORDER BY IFNULL(DISTINCT CAST(v0.c1 AS INTEGER), ((((t0.c86)AND(vt0.c0)))OR(v0.c0))), ((vt0.c0)%(t0.c32)) COLLATE NOCASE;
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((t0.c32, v0.c2, v0.c2)) BETWEEN ((((t0.c13) BETWEEN (v0.c1) AND (vt0.c0)), ((x'') IS TRUE), SQLITE_VERSION())) AND ((CASE WHEN v0.c1 THEN t0.c13 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN t0.c86 END, ((v0.c2)AND(t0.c86)), t0.c13)))) ORDER BY ((CAST('䋑IdeEN' AS REAL))<(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c32, v0.c2, v0.c2)) BETWEEN ((((t0.c13) BETWEEN (v0.c1) AND (vt0.c0)), ((x'') IS TRUE), SQLITE_VERSION())) AND ((CASE WHEN v0.c1 THEN t0.c13 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN t0.c86 END, ((v0.c2)AND(t0.c86)), t0.c13)))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((CAST('䋑IdeEN' AS REAL))<(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1)))) ASC);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((t0.c32, v0.c2, v0.c2)) BETWEEN ((((t0.c13) BETWEEN (v0.c1) AND (vt0.c0)), ((x'') IS TRUE), SQLITE_VERSION())) AND ((CASE WHEN v0.c1 THEN t0.c13 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN t0.c86 END, ((v0.c2)AND(t0.c86)), t0.c13)))) ORDER BY ((CAST('䋑IdeEN' AS REAL))<(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c32, v0.c2, v0.c2)) BETWEEN ((((t0.c13) BETWEEN (v0.c1) AND (vt0.c0)), ((x'') IS TRUE), SQLITE_VERSION())) AND ((CASE WHEN v0.c1 THEN t0.c13 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN t0.c86 END, ((v0.c2)AND(t0.c86)), t0.c13)))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((CAST('䋑IdeEN' AS REAL))<(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1)))) ASC);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((t0.c32, v0.c2, v0.c2)) BETWEEN ((((t0.c13) BETWEEN (v0.c1) AND (vt0.c0)), ((x'') IS TRUE), SQLITE_VERSION())) AND ((CASE WHEN v0.c1 THEN t0.c13 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN t0.c86 END, ((v0.c2)AND(t0.c86)), t0.c13)))) ORDER BY ((CAST('䋑IdeEN' AS REAL))<(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1)))) ASC;
SELECT COUNT(*) FROM t0 WHERE (((t0.c86 COLLATE BINARY) NOT BETWEEN (((t0.c32)>=(t0.c13))) AND (RTRIM(t0.c86)))) ORDER BY ((t0.c32)IS NOT(((((t0.c32)OR(t0.c86)))AND(t0.c13))))  NULLS LAST, ((((((t0.c86)AND(t0.c32)))AND(t0.c13)))|(((t0.c13)>=(t0.c86)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c86 COLLATE BINARY) NOT BETWEEN (((t0.c32)>=(t0.c13))) AND (RTRIM(t0.c86)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c32)IS NOT(((((t0.c32)OR(t0.c86)))AND(t0.c13))))  NULLS LAST, ((((((t0.c86)AND(t0.c32)))AND(t0.c13)))|(((t0.c13)>=(t0.c86)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c86 COLLATE BINARY) NOT BETWEEN (((t0.c32)>=(t0.c13))) AND (RTRIM(t0.c86)))) ORDER BY ((t0.c32)IS NOT(((((t0.c32)OR(t0.c86)))AND(t0.c13))))  NULLS LAST, ((((((t0.c86)AND(t0.c32)))AND(t0.c13)))|(((t0.c13)>=(t0.c86)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c86 COLLATE BINARY) NOT BETWEEN (((t0.c32)>=(t0.c13))) AND (RTRIM(t0.c86)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c32)IS NOT(((((t0.c32)OR(t0.c86)))AND(t0.c13))))  NULLS LAST, ((((((t0.c86)AND(t0.c32)))AND(t0.c13)))|(((t0.c13)>=(t0.c86)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c86 COLLATE BINARY) NOT BETWEEN (((t0.c32)>=(t0.c13))) AND (RTRIM(t0.c86)))) ORDER BY ((t0.c32)IS NOT(((((t0.c32)OR(t0.c86)))AND(t0.c13))))  NULLS LAST, ((((((t0.c86)AND(t0.c32)))AND(t0.c13)))|(((t0.c13)>=(t0.c86)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 INNER JOIN v0 ON ((CAST(t0.c86 AS INTEGER))<<((NOT (v0.c0)))) WHERE (((((((t0.c32) BETWEEN (t0.c86) AND (t0.c13)))AND(((v0.c1)<=(t0.c13)))))OR(((((vt0.c0)AND(t0.c13)))OR(t0.c13)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c32) BETWEEN (t0.c86) AND (t0.c13)))AND(((v0.c1)<=(t0.c13)))))OR(((((vt0.c0)AND(t0.c13)))OR(t0.c13))))) IS TRUE)  as count FROM vt0, t0 INNER JOIN v0 ON ((CAST(t0.c86 AS INTEGER))<<((NOT (v0.c0)))));
SELECT COUNT(*) FROM vt0, t0 INNER JOIN v0 ON ((CAST(t0.c86 AS INTEGER))<<((NOT (v0.c0)))) WHERE (((((((t0.c32) BETWEEN (t0.c86) AND (t0.c13)))AND(((v0.c1)<=(t0.c13)))))OR(((((vt0.c0)AND(t0.c13)))OR(t0.c13)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c32) BETWEEN (t0.c86) AND (t0.c13)))AND(((v0.c1)<=(t0.c13)))))OR(((((vt0.c0)AND(t0.c13)))OR(t0.c13))))) IS TRUE)  as count FROM vt0, t0 INNER JOIN v0 ON ((CAST(t0.c86 AS INTEGER))<<((NOT (v0.c0)))));
SELECT COUNT(*) FROM vt0, t0 INNER JOIN v0 ON ((CAST(t0.c86 AS INTEGER))<<((NOT (v0.c0)))) WHERE (((((((t0.c32) BETWEEN (t0.c86) AND (t0.c13)))AND(((v0.c1)<=(t0.c13)))))OR(((((vt0.c0)AND(t0.c13)))OR(t0.c13)))));
SELECT ALL * FROM vt0 WHERE (((0.4453243875959624) ISNULL));
SELECT SUM(count) FROM (SELECT ((((0.4453243875959624) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((0.4453243875959624) ISNULL));
SELECT SUM(count) FROM (SELECT ((((0.4453243875959624) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((0.4453243875959624) ISNULL));
SELECT ALL * FROM t0 WHERE (ABS(DISTINCT TRIM(DISTINCT t0.c32)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT TRIM(DISTINCT t0.c32))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (ABS(DISTINCT TRIM(DISTINCT t0.c32)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT TRIM(DISTINCT t0.c32))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (ABS(DISTINCT TRIM(DISTINCT t0.c32)));
SELECT * FROM t0, vt0, v0 WHERE ((((v0.c2, t0.c86, t0.c13)) BETWEEN ((CAST(t0.c86 AS REAL), CASE WHEN v0.c2 THEN v0.c0 END, v0.c0 COLLATE BINARY)) AND ((t0.c86, CAST(t0.c13 AS NUMERIC), UNLIKELY(v0.c1))))) ORDER BY CASE ((t0.c32) BETWEEN (NULL) AND (v0.c1))  WHEN CAST('鱦DJSUM' AS TEXT) THEN CAST(v0.c1 AS NUMERIC) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2, t0.c86, t0.c13)) BETWEEN ((CAST(t0.c86 AS REAL), CASE WHEN v0.c2 THEN v0.c0 END, v0.c0 COLLATE BINARY)) AND ((t0.c86, CAST(t0.c13 AS NUMERIC), UNLIKELY(v0.c1))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CASE ((t0.c32) BETWEEN (NULL) AND (v0.c1))  WHEN CAST('鱦DJSUM' AS TEXT) THEN CAST(v0.c1 AS NUMERIC) END ASC);
SELECT * FROM t0, vt0, v0 WHERE ((((v0.c2, t0.c86, t0.c13)) BETWEEN ((CAST(t0.c86 AS REAL), CASE WHEN v0.c2 THEN v0.c0 END, v0.c0 COLLATE BINARY)) AND ((t0.c86, CAST(t0.c13 AS NUMERIC), UNLIKELY(v0.c1))))) ORDER BY CASE ((t0.c32) BETWEEN (NULL) AND (v0.c1))  WHEN CAST('鱦DJSUM' AS TEXT) THEN CAST(v0.c1 AS NUMERIC) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2, t0.c86, t0.c13)) BETWEEN ((CAST(t0.c86 AS REAL), CASE WHEN v0.c2 THEN v0.c0 END, v0.c0 COLLATE BINARY)) AND ((t0.c86, CAST(t0.c13 AS NUMERIC), UNLIKELY(v0.c1))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CASE ((t0.c32) BETWEEN (NULL) AND (v0.c1))  WHEN CAST('鱦DJSUM' AS TEXT) THEN CAST(v0.c1 AS NUMERIC) END ASC);
SELECT * FROM t0, vt0, v0 WHERE ((((v0.c2, t0.c86, t0.c13)) BETWEEN ((CAST(t0.c86 AS REAL), CASE WHEN v0.c2 THEN v0.c0 END, v0.c0 COLLATE BINARY)) AND ((t0.c86, CAST(t0.c13 AS NUMERIC), UNLIKELY(v0.c1))))) ORDER BY CASE ((t0.c32) BETWEEN (NULL) AND (v0.c1))  WHEN CAST('鱦DJSUM' AS TEXT) THEN CAST(v0.c1 AS NUMERIC) END ASC;
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (json_array_length(((((v0.c0)AND(t0.c13)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((((v0.c0)AND(t0.c13)))OR(v0.c0)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (json_array_length(((((v0.c0)AND(t0.c13)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((((v0.c0)AND(t0.c13)))OR(v0.c0)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (json_array_length(((((v0.c0)AND(t0.c13)))OR(v0.c0))));
SELECT ALL * FROM vt0 WHERE (MIN(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((MIN(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (MIN(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((MIN(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (MIN(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN v0 ON (((((v0.c1)) NOT BETWEEN ((t0.c13)) AND ((v0.c1))))IS NOT((NOT (t0.c13)))) WHERE (x'4f16') ORDER BY CAST(((vt0.c0) IS TRUE) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'4f16') IS TRUE)  as count FROM vt0, t0 CROSS JOIN v0 ON (((((v0.c1)) NOT BETWEEN ((t0.c13)) AND ((v0.c1))))IS NOT((NOT (t0.c13)))) ORDER BY CAST(((vt0.c0) IS TRUE) AS REAL) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN v0 ON (((((v0.c1)) NOT BETWEEN ((t0.c13)) AND ((v0.c1))))IS NOT((NOT (t0.c13)))) WHERE (x'4f16') ORDER BY CAST(((vt0.c0) IS TRUE) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'4f16') IS TRUE)  as count FROM vt0, t0 CROSS JOIN v0 ON (((((v0.c1)) NOT BETWEEN ((t0.c13)) AND ((v0.c1))))IS NOT((NOT (t0.c13)))) ORDER BY CAST(((vt0.c0) IS TRUE) AS REAL) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN v0 ON (((((v0.c1)) NOT BETWEEN ((t0.c13)) AND ((v0.c1))))IS NOT((NOT (t0.c13)))) WHERE (x'4f16') ORDER BY CAST(((vt0.c0) IS TRUE) AS REAL) ASC;
SELECT ALL * FROM v0, vt0, t0 WHERE (((((t0.c13) NOTNULL)) BETWEEN (vt0.c0) AND ((((-1.419154683E9, t0.c13, '~k Z䋑\r\p^'))>((v0.c1, v0.c2, vt0.c0)))))) ORDER BY (((('\na|') NOT BETWEEN (t0.c32) AND (x'')))LIKE(v0.c0)) DESC, 0.10627518787987922  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c13) NOTNULL)) BETWEEN (vt0.c0) AND ((((-1.419154683E9, t0.c13, '~k Z䋑\r\p^'))>((v0.c1, v0.c2, vt0.c0)))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((('\na|') NOT BETWEEN (t0.c32) AND (x'')))LIKE(v0.c0)) DESC, 0.10627518787987922  NULLS LAST);
SELECT ALL * FROM v0, vt0, t0 WHERE (((((t0.c13) NOTNULL)) BETWEEN (vt0.c0) AND ((((-1.419154683E9, t0.c13, '~k Z䋑\r\p^'))>((v0.c1, v0.c2, vt0.c0)))))) ORDER BY (((('\na|') NOT BETWEEN (t0.c32) AND (x'')))LIKE(v0.c0)) DESC, 0.10627518787987922  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c13) NOTNULL)) BETWEEN (vt0.c0) AND ((((-1.419154683E9, t0.c13, '~k Z䋑\r\p^'))>((v0.c1, v0.c2, vt0.c0)))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((('\na|') NOT BETWEEN (t0.c32) AND (x'')))LIKE(v0.c0)) DESC, 0.10627518787987922  NULLS LAST);
SELECT ALL * FROM v0, vt0, t0 WHERE (((((t0.c13) NOTNULL)) BETWEEN (vt0.c0) AND ((((-1.419154683E9, t0.c13, '~k Z䋑\r\p^'))>((v0.c1, v0.c2, vt0.c0)))))) ORDER BY (((('\na|') NOT BETWEEN (t0.c32) AND (x'')))LIKE(v0.c0)) DESC, 0.10627518787987922  NULLS LAST;
SELECT ALL * FROM t0, v0, vt0 WHERE ((((((t0.c86) NOT BETWEEN (v0.c1) AND (v0.c0)), ((t0.c32) IS FALSE), ((x'52fb')AND(v0.c1))))<=((v0.c0, CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END, (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))))) ORDER BY t0.c13 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c86) NOT BETWEEN (v0.c1) AND (v0.c0)), ((t0.c32) IS FALSE), ((x'52fb')AND(v0.c1))))<=((v0.c0, CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END, (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY t0.c13 DESC  NULLS LAST);
SELECT ALL * FROM t0, v0, vt0 WHERE ((((((t0.c86) NOT BETWEEN (v0.c1) AND (v0.c0)), ((t0.c32) IS FALSE), ((x'52fb')AND(v0.c1))))<=((v0.c0, CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END, (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))))) ORDER BY t0.c13 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c86) NOT BETWEEN (v0.c1) AND (v0.c0)), ((t0.c32) IS FALSE), ((x'52fb')AND(v0.c1))))<=((v0.c0, CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END, (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY t0.c13 DESC  NULLS LAST);
SELECT ALL * FROM t0, v0, vt0 WHERE ((((((t0.c86) NOT BETWEEN (v0.c1) AND (v0.c0)), ((t0.c32) IS FALSE), ((x'52fb')AND(v0.c1))))<=((v0.c0, CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END, (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))))) ORDER BY t0.c13 DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)/(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)*(vt0.c0)))|(((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)/(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)*(vt0.c0)))|(((vt0.c0) ISNULL))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)/(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)*(vt0.c0)))|(((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)/(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)*(vt0.c0)))|(((vt0.c0) ISNULL))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)/(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)*(vt0.c0)))|(((vt0.c0) ISNULL)));
SELECT COUNT(*) FROM vt0 WHERE (-959993468);
SELECT SUM(count) FROM (SELECT ALL ((-959993468) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (-959993468);
SELECT SUM(count) FROM (SELECT ALL ((-959993468) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (-959993468);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((CAST(vt0.c0 AS NUMERIC))IS((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))IS((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((CAST(vt0.c0 AS NUMERIC))IS((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))IS((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((CAST(vt0.c0 AS NUMERIC))IS((v0.c0 IN ()))));
SELECT ALL * FROM v0, t0 WHERE (CAST((((t0.c13, t0.c13, 0.5004892367461403)) NOT BETWEEN ((t0.c32, t0.c13, t0.c86)) AND ((v0.c2, t0.c32, t0.c32))) AS BLOB)) ORDER BY (NOT (((t0.c86) BETWEEN (v0.c1) AND ('7ec~b9/'))));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c13, t0.c13, 0.5004892367461403)) NOT BETWEEN ((t0.c32, t0.c13, t0.c86)) AND ((v0.c2, t0.c32, t0.c32))) AS BLOB)) IS TRUE)  as count FROM v0, t0 ORDER BY (NOT (((t0.c86) BETWEEN (v0.c1) AND ('7ec~b9/')))));
SELECT ALL * FROM v0, t0 WHERE (CAST((((t0.c13, t0.c13, 0.5004892367461403)) NOT BETWEEN ((t0.c32, t0.c13, t0.c86)) AND ((v0.c2, t0.c32, t0.c32))) AS BLOB)) ORDER BY (NOT (((t0.c86) BETWEEN (v0.c1) AND ('7ec~b9/'))));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c13, t0.c13, 0.5004892367461403)) NOT BETWEEN ((t0.c32, t0.c13, t0.c86)) AND ((v0.c2, t0.c32, t0.c32))) AS BLOB)) IS TRUE)  as count FROM v0, t0 ORDER BY (NOT (((t0.c86) BETWEEN (v0.c1) AND ('7ec~b9/')))));
SELECT ALL * FROM v0, t0 WHERE (CAST((((t0.c13, t0.c13, 0.5004892367461403)) NOT BETWEEN ((t0.c32, t0.c13, t0.c86)) AND ((v0.c2, t0.c32, t0.c32))) AS BLOB)) ORDER BY (NOT (((t0.c86) BETWEEN (v0.c1) AND ('7ec~b9/'))));
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (((((((v0.c1)OR(v0.c1)))AND(v0.c2))) NOT BETWEEN (LIKE(v0.c0, vt0.c0, '4')) AND (x'768d')));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c1)OR(v0.c1)))AND(v0.c2))) NOT BETWEEN (LIKE(v0.c0, vt0.c0, '4')) AND (x'768d'))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (((((((v0.c1)OR(v0.c1)))AND(v0.c2))) NOT BETWEEN (LIKE(v0.c0, vt0.c0, '4')) AND (x'768d')));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c1)OR(v0.c1)))AND(v0.c2))) NOT BETWEEN (LIKE(v0.c0, vt0.c0, '4')) AND (x'768d'))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (((((((v0.c1)OR(v0.c1)))AND(v0.c2))) NOT BETWEEN (LIKE(v0.c0, vt0.c0, '4')) AND (x'768d')));
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))) COLLATE BINARY WHERE ((((vt0.c0, v0.c2, v0.c1, v0.c0, v0.c0)) BETWEEN ((((v0.c0)-(v0.c1)), ((v0.c0)<(v0.c1)), (vt0.c0 IN ()), (v0.c2 IN ('d[P]')), CASE v0.c0  WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END)) AND ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0)), CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 END, ((vt0.c0) IS TRUE), 0.8698914044945475, (((vt0.c0))>=((v0.c0))))))) ORDER BY CASE (vt0.c0 IN (v0.c1))  WHEN NULLIF(v0.c1, v0.c0) THEN (((('0.33865784163808554')OR(v0.c0)))AND(v0.c0)) ELSE ((((vt0.c0)OR(v0.c0)))AND(v0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, v0.c2, v0.c1, v0.c0, v0.c0)) BETWEEN ((((v0.c0)-(v0.c1)), ((v0.c0)<(v0.c1)), (vt0.c0 IN ()), (v0.c2 IN ('d[P]')), CASE v0.c0  WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END)) AND ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0)), CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 END, ((vt0.c0) IS TRUE), 0.8698914044945475, (((vt0.c0))>=((v0.c0))))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))) COLLATE BINARY ORDER BY CASE (vt0.c0 IN (v0.c1))  WHEN NULLIF(v0.c1, v0.c0) THEN (((('0.33865784163808554')OR(v0.c0)))AND(v0.c0)) ELSE ((((vt0.c0)OR(v0.c0)))AND(v0.c1)) END);
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))) COLLATE BINARY WHERE ((((vt0.c0, v0.c2, v0.c1, v0.c0, v0.c0)) BETWEEN ((((v0.c0)-(v0.c1)), ((v0.c0)<(v0.c1)), (vt0.c0 IN ()), (v0.c2 IN ('d[P]')), CASE v0.c0  WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END)) AND ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0)), CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 END, ((vt0.c0) IS TRUE), 0.8698914044945475, (((vt0.c0))>=((v0.c0))))))) ORDER BY CASE (vt0.c0 IN (v0.c1))  WHEN NULLIF(v0.c1, v0.c0) THEN (((('0.33865784163808554')OR(v0.c0)))AND(v0.c0)) ELSE ((((vt0.c0)OR(v0.c0)))AND(v0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, v0.c2, v0.c1, v0.c0, v0.c0)) BETWEEN ((((v0.c0)-(v0.c1)), ((v0.c0)<(v0.c1)), (vt0.c0 IN ()), (v0.c2 IN ('d[P]')), CASE v0.c0  WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END)) AND ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0)), CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 END, ((vt0.c0) IS TRUE), 0.8698914044945475, (((vt0.c0))>=((v0.c0))))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))) COLLATE BINARY ORDER BY CASE (vt0.c0 IN (v0.c1))  WHEN NULLIF(v0.c1, v0.c0) THEN (((('0.33865784163808554')OR(v0.c0)))AND(v0.c0)) ELSE ((((vt0.c0)OR(v0.c0)))AND(v0.c1)) END);
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))) COLLATE BINARY WHERE ((((vt0.c0, v0.c2, v0.c1, v0.c0, v0.c0)) BETWEEN ((((v0.c0)-(v0.c1)), ((v0.c0)<(v0.c1)), (vt0.c0 IN ()), (v0.c2 IN ('d[P]')), CASE v0.c0  WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END)) AND ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0)), CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 END, ((vt0.c0) IS TRUE), 0.8698914044945475, (((vt0.c0))>=((v0.c0))))))) ORDER BY CASE (vt0.c0 IN (v0.c1))  WHEN NULLIF(v0.c1, v0.c0) THEN (((('0.33865784163808554')OR(v0.c0)))AND(v0.c0)) ELSE ((((vt0.c0)OR(v0.c0)))AND(v0.c1)) END;
SELECT ALL * FROM t0, vt0 WHERE ((((- (t0.c32))) ISNULL)) ORDER BY (((CASE t0.c13  WHEN t0.c13 THEN t0.c32 WHEN t0.c32 THEN t0.c32 WHEN 0.4845844619334091 THEN t0.c32 ELSE vt0.c0 END))<((CASE t0.c86  WHEN t0.c86 THEN t0.c13 END)))  NULLS FIRST, ((((((((t0.c13)OR(t0.c32)))OR(t0.c32)))OR(((t0.c13) NOT BETWEEN (t0.c86) AND (t0.c32)))))AND((((t0.c13))!=((t0.c32)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c32))) ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((CASE t0.c13  WHEN t0.c13 THEN t0.c32 WHEN t0.c32 THEN t0.c32 WHEN 0.4845844619334091 THEN t0.c32 ELSE vt0.c0 END))<((CASE t0.c86  WHEN t0.c86 THEN t0.c13 END)))  NULLS FIRST, ((((((((t0.c13)OR(t0.c32)))OR(t0.c32)))OR(((t0.c13) NOT BETWEEN (t0.c86) AND (t0.c32)))))AND((((t0.c13))<>((t0.c32))))));
SELECT ALL * FROM t0, vt0 WHERE ((((- (t0.c32))) ISNULL)) ORDER BY (((CASE t0.c13  WHEN t0.c13 THEN t0.c32 WHEN t0.c32 THEN t0.c32 WHEN 0.4845844619334091 THEN t0.c32 ELSE vt0.c0 END))<((CASE t0.c86  WHEN t0.c86 THEN t0.c13 END)))  NULLS FIRST, ((((((((t0.c13)OR(t0.c32)))OR(t0.c32)))OR(((t0.c13) NOT BETWEEN (t0.c86) AND (t0.c32)))))AND((((t0.c13))!=((t0.c32)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c32))) ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((CASE t0.c13  WHEN t0.c13 THEN t0.c32 WHEN t0.c32 THEN t0.c32 WHEN 0.4845844619334091 THEN t0.c32 ELSE vt0.c0 END))<((CASE t0.c86  WHEN t0.c86 THEN t0.c13 END)))  NULLS FIRST, ((((((((t0.c13)OR(t0.c32)))OR(t0.c32)))OR(((t0.c13) NOT BETWEEN (t0.c86) AND (t0.c32)))))AND((((t0.c13))<>((t0.c32))))));
SELECT ALL * FROM t0, vt0 WHERE ((((- (t0.c32))) ISNULL)) ORDER BY (((CASE t0.c13  WHEN t0.c13 THEN t0.c32 WHEN t0.c32 THEN t0.c32 WHEN 0.4845844619334091 THEN t0.c32 ELSE vt0.c0 END))<((CASE t0.c86  WHEN t0.c86 THEN t0.c13 END)))  NULLS FIRST, ((((((((t0.c13)OR(t0.c32)))OR(t0.c32)))OR(((t0.c13) NOT BETWEEN (t0.c86) AND (t0.c32)))))AND((((t0.c13))!=((t0.c32)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (~ (((vt0.c0) NOTNULL))) WHERE (0.4913372163837585);
SELECT SUM(count) FROM (SELECT ((0.4913372163837585) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (~ (((vt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (~ (((vt0.c0) NOTNULL))) WHERE (0.4913372163837585);
SELECT SUM(count) FROM (SELECT ((0.4913372163837585) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (~ (((vt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (~ (((vt0.c0) NOTNULL))) WHERE (0.4913372163837585);
SELECT ALL * FROM t0 WHERE (((0x178b3e2d)AND((~ (t0.c86))))) ORDER BY (((~ (t0.c13)))>(t0.c32 COLLATE BINARY)), CAST(t0.c86 AS NUMERIC) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((0x178b3e2d)AND((~ (t0.c86))))) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c13)))>(t0.c32 COLLATE BINARY)), CAST(t0.c86 AS NUMERIC) COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE (((0x178b3e2d)AND((~ (t0.c86))))) ORDER BY (((~ (t0.c13)))>(t0.c32 COLLATE BINARY)), CAST(t0.c86 AS NUMERIC) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((0x178b3e2d)AND((~ (t0.c86))))) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c13)))>(t0.c32 COLLATE BINARY)), CAST(t0.c86 AS NUMERIC) COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE (((0x178b3e2d)AND((~ (t0.c86))))) ORDER BY (((~ (t0.c13)))>(t0.c32 COLLATE BINARY)), CAST(t0.c86 AS NUMERIC) COLLATE NOCASE;
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN (NOT (vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (0.5818596508376151 IN ()) THEN -2.051795157E9 WHEN TRIM(vt0.c0) THEN (('0.8729186303145209')&(vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)LIKE(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN (NOT (vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (0.5818596508376151 IN ()) THEN -2.051795157E9 WHEN TRIM(vt0.c0) THEN (('0.8729186303145209')&(vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)LIKE(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN (NOT (vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (0.5818596508376151 IN ()) THEN -2.051795157E9 WHEN TRIM(vt0.c0) THEN (('0.8729186303145209')&(vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)LIKE(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN (NOT (vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (0.5818596508376151 IN ()) THEN -2.051795157E9 WHEN TRIM(vt0.c0) THEN (('0.8729186303145209')&(vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)LIKE(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN (NOT (vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (0.5818596508376151 IN ()) THEN -2.051795157E9 WHEN TRIM(vt0.c0) THEN (('0.8729186303145209')&(vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)LIKE(vt0.c0)) END);
SELECT ALL * FROM v0, vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))AND(v0.c1)), ((((v0.c2)OR(v0.c2)))OR(vt0.c0)), (vt0.c0 IN (v0.c1))))=(((v0.c0 IN (0.3622908504940563)), v0.c1 COLLATE NOCASE, ((v0.c0)<(v0.c2)))))) ORDER BY (((vt0.c0)) BETWEEN (('~}둸1-eYU')) AND ((((vt0.c0) NOT BETWEEN (v0.c2) AND (vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)AND(vt0.c0)))AND(v0.c1)), ((((v0.c2)OR(v0.c2)))OR(vt0.c0)), (vt0.c0 IN (v0.c1))))=(((v0.c0 IN (0.3622908504940563)), v0.c1 COLLATE NOCASE, ((v0.c0)<(v0.c2)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0)) BETWEEN (('~}둸1-eYU')) AND ((((vt0.c0) NOT BETWEEN (v0.c2) AND (vt0.c0))))) ASC);
SELECT ALL * FROM v0, vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))AND(v0.c1)), ((((v0.c2)OR(v0.c2)))OR(vt0.c0)), (vt0.c0 IN (v0.c1))))=(((v0.c0 IN (0.3622908504940563)), v0.c1 COLLATE NOCASE, ((v0.c0)<(v0.c2)))))) ORDER BY (((vt0.c0)) BETWEEN (('~}둸1-eYU')) AND ((((vt0.c0) NOT BETWEEN (v0.c2) AND (vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)AND(vt0.c0)))AND(v0.c1)), ((((v0.c2)OR(v0.c2)))OR(vt0.c0)), (vt0.c0 IN (v0.c1))))=(((v0.c0 IN (0.3622908504940563)), v0.c1 COLLATE NOCASE, ((v0.c0)<(v0.c2)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0)) BETWEEN (('~}둸1-eYU')) AND ((((vt0.c0) NOT BETWEEN (v0.c2) AND (vt0.c0))))) ASC);
SELECT ALL * FROM v0, vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))AND(v0.c1)), ((((v0.c2)OR(v0.c2)))OR(vt0.c0)), (vt0.c0 IN (v0.c1))))=(((v0.c0 IN (0.3622908504940563)), v0.c1 COLLATE NOCASE, ((v0.c0)<(v0.c2)))))) ORDER BY (((vt0.c0)) BETWEEN (('~}둸1-eYU')) AND ((((vt0.c0) NOT BETWEEN (v0.c2) AND (vt0.c0))))) ASC;
SELECT ALL * FROM t0 WHERE (((t0.c32) BETWEEN (t0.c13 COLLATE BINARY) AND (t0.c32)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c32) BETWEEN (t0.c13 COLLATE BINARY) AND (t0.c32))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c32) BETWEEN (t0.c13 COLLATE BINARY) AND (t0.c32)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c32) BETWEEN (t0.c13 COLLATE BINARY) AND (t0.c32))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c32) BETWEEN (t0.c13 COLLATE BINARY) AND (t0.c32)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c0)|(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)|(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c0)|(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)|(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c0)|(vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0, v0 WHERE (((((((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)))OR(v0.c2)))AND(((v0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)))OR(v0.c2)))AND(((v0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)))OR(v0.c2)))AND(((v0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)))OR(v0.c2)))AND(((v0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)))OR(v0.c2)))AND(((v0.c0)>>(vt0.c0)))));
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT NULL))>(v0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL))>(v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT NULL))>(v0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL))>(v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT NULL))>(v0.c2 COLLATE BINARY)));
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN NULL WHEN v0.c2 THEN v0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN NULL WHEN v0.c2 THEN v0.c0 END) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN NULL WHEN v0.c2 THEN v0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN NULL WHEN v0.c2 THEN v0.c0 END) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN NULL WHEN v0.c2 THEN v0.c0 END) IS FALSE));
SELECT COUNT(*) FROM t0 WHERE (TRIM(t0.c13) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TRIM(t0.c13) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TRIM(t0.c13) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TRIM(t0.c13) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TRIM(t0.c13) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOTNULL)) ORDER BY t0.c32 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY t0.c32 COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOTNULL)) ORDER BY t0.c32 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY t0.c32 COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOTNULL)) ORDER BY t0.c32 COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (CASE v0.c0  WHEN NULL THEN CASE WHEN t0.c32 THEN t0.c86 ELSE t0.c32 END END) ORDER BY 0.6614640714973218;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN NULL THEN CASE WHEN t0.c32 THEN t0.c86 ELSE t0.c32 END END) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY 0.6614640714973218);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (CASE v0.c0  WHEN NULL THEN CASE WHEN t0.c32 THEN t0.c86 ELSE t0.c32 END END) ORDER BY 0.6614640714973218;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN NULL THEN CASE WHEN t0.c32 THEN t0.c86 ELSE t0.c32 END END) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY 0.6614640714973218);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (CASE v0.c0  WHEN NULL THEN CASE WHEN t0.c32 THEN t0.c86 ELSE t0.c32 END END) ORDER BY 0.6614640714973218;
SELECT * FROM v0, t0, vt0 WHERE ((- (((t0.c86) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c86) NOTNULL)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE ((- (((t0.c86) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c86) NOTNULL)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE ((- (((t0.c86) NOTNULL))));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (NOT ((+ (v0.c1)))) WHERE (CAST(v0.c0 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (NOT ((+ (v0.c1)))));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (NOT ((+ (v0.c1)))) WHERE (CAST(v0.c0 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (NOT ((+ (v0.c1)))));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (NOT ((+ (v0.c1)))) WHERE (CAST(v0.c0 AS INTEGER) COLLATE NOCASE);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON CASE v0.c1 COLLATE BINARY  WHEN MAX(v0.c0, v0.c2) THEN ((t0.c13)-(v0.c2)) END FULL OUTER JOIN v0 ON CASE WHEN ((((t0.c32)OR(v0.c1)))AND(v0.c2)) THEN CAST(v0.c0 AS BLOB) ELSE CAST(x'e4b0' AS BLOB) END WHERE (CHAR(SUBSTR(vt0.c0, v0.c2), ((vt0.c0) BETWEEN (v0.c0) AND (NULL)), ((((v0.c0)AND(t0.c13)))AND(''))));
SELECT SUM(count) FROM (SELECT ((CHAR(SUBSTR(vt0.c0, v0.c2), ((vt0.c0) BETWEEN (v0.c0) AND (NULL)), ((((v0.c0)AND(t0.c13)))AND('')))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CASE v0.c1 COLLATE BINARY  WHEN MAX(v0.c0, v0.c2) THEN ((t0.c13)-(v0.c2)) END FULL OUTER JOIN v0 ON CASE WHEN ((((t0.c32)OR(v0.c1)))AND(v0.c2)) THEN CAST(v0.c0 AS BLOB) ELSE CAST(x'e4b0' AS BLOB) END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON CASE v0.c1 COLLATE BINARY  WHEN MAX(v0.c0, v0.c2) THEN ((t0.c13)-(v0.c2)) END FULL OUTER JOIN v0 ON CASE WHEN ((((t0.c32)OR(v0.c1)))AND(v0.c2)) THEN CAST(v0.c0 AS BLOB) ELSE CAST(x'e4b0' AS BLOB) END WHERE (CHAR(SUBSTR(vt0.c0, v0.c2), ((vt0.c0) BETWEEN (v0.c0) AND (NULL)), ((((v0.c0)AND(t0.c13)))AND(''))));
SELECT SUM(count) FROM (SELECT ((CHAR(SUBSTR(vt0.c0, v0.c2), ((vt0.c0) BETWEEN (v0.c0) AND (NULL)), ((((v0.c0)AND(t0.c13)))AND('')))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CASE v0.c1 COLLATE BINARY  WHEN MAX(v0.c0, v0.c2) THEN ((t0.c13)-(v0.c2)) END FULL OUTER JOIN v0 ON CASE WHEN ((((t0.c32)OR(v0.c1)))AND(v0.c2)) THEN CAST(v0.c0 AS BLOB) ELSE CAST(x'e4b0' AS BLOB) END);
SELECT COUNT(*) FROM vt0 WHERE ((('')||((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('')||((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((('')||((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('')||((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((('')||((+ (vt0.c0)))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CAST(SUBSTR(t0.c86, vt0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(SUBSTR(t0.c86, vt0.c0) AS REAL)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CAST(SUBSTR(t0.c86, vt0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(SUBSTR(t0.c86, vt0.c0) AS REAL)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CAST(SUBSTR(t0.c86, vt0.c0) AS REAL));
SELECT * FROM vt0, t0, v0 WHERE (((t0.c32) NOT NULL)) ORDER BY CASE WHEN v0.c0 THEN t0.c32 ELSE t0.c86 END COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c32) NOT NULL)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY CASE WHEN v0.c0 THEN t0.c32 ELSE t0.c86 END COLLATE BINARY ASC);
SELECT * FROM vt0, t0, v0 WHERE (((t0.c32) NOT NULL)) ORDER BY CASE WHEN v0.c0 THEN t0.c32 ELSE t0.c86 END COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c32) NOT NULL)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY CASE WHEN v0.c0 THEN t0.c32 ELSE t0.c86 END COLLATE BINARY ASC);
SELECT * FROM vt0, t0, v0 WHERE (((t0.c32) NOT NULL)) ORDER BY CASE WHEN v0.c0 THEN t0.c32 ELSE t0.c86 END COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (UPPER(((((t0.c13)AND(v0.c2)))OR(t0.c86)))) ORDER BY (((vt0.c0)AND(t0.c32)) IN (((t0.c86)<=(v0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER(((((t0.c13)AND(v0.c2)))OR(t0.c86)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((vt0.c0)AND(t0.c32)) IN (((t0.c86)<=(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (UPPER(((((t0.c13)AND(v0.c2)))OR(t0.c86)))) ORDER BY (((vt0.c0)AND(t0.c32)) IN (((t0.c86)<=(v0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER(((((t0.c13)AND(v0.c2)))OR(t0.c86)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((vt0.c0)AND(t0.c32)) IN (((t0.c86)<=(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (UPPER(((((t0.c13)AND(v0.c2)))OR(t0.c86)))) ORDER BY (((vt0.c0)AND(t0.c32)) IN (((t0.c86)<=(v0.c0))));
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((('0.17546348590575855')LIKE((v0.c1 IN ())))) ORDER BY (- (CASE WHEN x'' THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((('0.17546348590575855')LIKE((v0.c1 IN ())))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (- (CASE WHEN x'' THEN v0.c0 END)));
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((('0.17546348590575855')LIKE((v0.c1 IN ())))) ORDER BY (- (CASE WHEN x'' THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((('0.17546348590575855')LIKE((v0.c1 IN ())))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (- (CASE WHEN x'' THEN v0.c0 END)));
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((('0.17546348590575855')LIKE((v0.c1 IN ())))) ORDER BY (- (CASE WHEN x'' THEN v0.c0 END));
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN v0 ON v0.c2 WHERE (CAST((+ (t0.c86)) AS NUMERIC)) ORDER BY CAST(v0.c2 AS BLOB), CASE WHEN ((v0.c1) BETWEEN (vt0.c0) AND (47029350)) THEN ((vt0.c0)>=(t0.c13)) ELSE (v0.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT ((CAST((+ (t0.c86)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN v0 ON v0.c2 ORDER BY CAST(v0.c2 AS BLOB), CASE WHEN ((v0.c1) BETWEEN (vt0.c0) AND (47029350)) THEN ((vt0.c0)>=(t0.c13)) ELSE (v0.c0 IN ()) END);
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN v0 ON v0.c2 WHERE (CAST((+ (t0.c86)) AS NUMERIC)) ORDER BY CAST(v0.c2 AS BLOB), CASE WHEN ((v0.c1) BETWEEN (vt0.c0) AND (47029350)) THEN ((vt0.c0)>=(t0.c13)) ELSE (v0.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT ((CAST((+ (t0.c86)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN v0 ON v0.c2 ORDER BY CAST(v0.c2 AS BLOB), CASE WHEN ((v0.c1) BETWEEN (vt0.c0) AND (47029350)) THEN ((vt0.c0)>=(t0.c13)) ELSE (v0.c0 IN ()) END);
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN v0 ON v0.c2 WHERE (CAST((+ (t0.c86)) AS NUMERIC)) ORDER BY CAST(v0.c2 AS BLOB), CASE WHEN ((v0.c1) BETWEEN (vt0.c0) AND (47029350)) THEN ((vt0.c0)>=(t0.c13)) ELSE (v0.c0 IN ()) END;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c32) ORDER BY CASE WHEN INSTR(t0.c13, t0.c86) THEN t0.c32 WHEN CAST(t0.c86 AS NUMERIC) THEN ((vt0.c0) NOT BETWEEN (t0.c32) AND (vt0.c0)) WHEN ((vt0.c0)OR('-564556227')) THEN t0.c86 ELSE ((vt0.c0) NOT BETWEEN (t0.c13) AND (t0.c32)) END;
SELECT SUM(count) FROM (SELECT ALL ((t0.c32) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN INSTR(t0.c13, t0.c86) THEN t0.c32 WHEN CAST(t0.c86 AS NUMERIC) THEN ((vt0.c0) NOT BETWEEN (t0.c32) AND (vt0.c0)) WHEN ((vt0.c0)OR('-564556227')) THEN t0.c86 ELSE ((vt0.c0) NOT BETWEEN (t0.c13) AND (t0.c32)) END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c32) ORDER BY CASE WHEN INSTR(t0.c13, t0.c86) THEN t0.c32 WHEN CAST(t0.c86 AS NUMERIC) THEN ((vt0.c0) NOT BETWEEN (t0.c32) AND (vt0.c0)) WHEN ((vt0.c0)OR('-564556227')) THEN t0.c86 ELSE ((vt0.c0) NOT BETWEEN (t0.c13) AND (t0.c32)) END;
SELECT SUM(count) FROM (SELECT ALL ((t0.c32) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN INSTR(t0.c13, t0.c86) THEN t0.c32 WHEN CAST(t0.c86 AS NUMERIC) THEN ((vt0.c0) NOT BETWEEN (t0.c32) AND (vt0.c0)) WHEN ((vt0.c0)OR('-564556227')) THEN t0.c86 ELSE ((vt0.c0) NOT BETWEEN (t0.c13) AND (t0.c32)) END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c32) ORDER BY CASE WHEN INSTR(t0.c13, t0.c86) THEN t0.c32 WHEN CAST(t0.c86 AS NUMERIC) THEN ((vt0.c0) NOT BETWEEN (t0.c32) AND (vt0.c0)) WHEN ((vt0.c0)OR('-564556227')) THEN t0.c86 ELSE ((vt0.c0) NOT BETWEEN (t0.c13) AND (t0.c32)) END;
SELECT * FROM v0, t0 LEFT OUTER JOIN vt0 ON v0.c2 WHERE (((t0.c13 COLLATE RTRIM)%(((((((((((((t0.c13)OR(t0.c86)))OR(x'e0bf')))AND(t0.c13)))OR(t0.c86)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c13 COLLATE RTRIM)%(((((((((((((t0.c13)OR(t0.c86)))OR(x'e0bf')))AND(t0.c13)))OR(t0.c86)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN vt0 ON v0.c2);
SELECT * FROM v0, t0 LEFT OUTER JOIN vt0 ON v0.c2 WHERE (((t0.c13 COLLATE RTRIM)%(((((((((((((t0.c13)OR(t0.c86)))OR(x'e0bf')))AND(t0.c13)))OR(t0.c86)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c13 COLLATE RTRIM)%(((((((((((((t0.c13)OR(t0.c86)))OR(x'e0bf')))AND(t0.c13)))OR(t0.c86)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN vt0 ON v0.c2);
SELECT * FROM v0, t0 LEFT OUTER JOIN vt0 ON v0.c2 WHERE (((t0.c13 COLLATE RTRIM)%(((((((((((((t0.c13)OR(t0.c86)))OR(x'e0bf')))AND(t0.c13)))OR(t0.c86)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((v0.c2) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c2) IS TRUE) IN ())) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((v0.c2) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c2) IS TRUE) IN ())) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((v0.c2) IS TRUE) IN ()));
SELECT ALL * FROM v0, vt0 WHERE (NULL) ORDER BY (+ ((((v0.c2))>((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY (+ ((((v0.c2))>((vt0.c0))))));
SELECT ALL * FROM v0, vt0 WHERE (NULL) ORDER BY (+ ((((v0.c2))>((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY (+ ((((v0.c2))>((vt0.c0))))));
SELECT ALL * FROM v0, vt0 WHERE (NULL) ORDER BY (+ ((((v0.c2))>((vt0.c0)))));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (NULL) ORDER BY t0.c13  NULLS LAST, ((((vt0.c0)LIKE(0.7562628647076083)))>((+ (t0.c86))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY t0.c13  NULLS LAST, ((((vt0.c0)LIKE(0.7562628647076083)))>((+ (t0.c86)))));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (NULL) ORDER BY t0.c13  NULLS LAST, ((((vt0.c0)LIKE(0.7562628647076083)))>((+ (t0.c86))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY t0.c13  NULLS LAST, ((((vt0.c0)LIKE(0.7562628647076083)))>((+ (t0.c86)))));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (NULL) ORDER BY t0.c13  NULLS LAST, ((((vt0.c0)LIKE(0.7562628647076083)))>((+ (t0.c86))));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((((((v0.c1)IS(v0.c2))))<=(((((v0.c0)) NOT BETWEEN ((t0.c32)) AND ((vt0.c0))))))) ORDER BY t0.c32, CAST(v0.c1 COLLATE RTRIM AS REAL) ASC  NULLS LAST, CAST(((((((((v0.c0)OR(t0.c13)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c1)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c1)IS(v0.c2))))<=(((((v0.c0)) NOT BETWEEN ((t0.c32)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY t0.c32, CAST(v0.c1 COLLATE RTRIM AS REAL) ASC  NULLS LAST, CAST(((((((((v0.c0)OR(t0.c13)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c1)) AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((((((v0.c1)IS(v0.c2))))<=(((((v0.c0)) NOT BETWEEN ((t0.c32)) AND ((vt0.c0))))))) ORDER BY t0.c32, CAST(v0.c1 COLLATE RTRIM AS REAL) ASC  NULLS LAST, CAST(((((((((v0.c0)OR(t0.c13)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c1)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c1)IS(v0.c2))))<=(((((v0.c0)) NOT BETWEEN ((t0.c32)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY t0.c32, CAST(v0.c1 COLLATE RTRIM AS REAL) ASC  NULLS LAST, CAST(((((((((v0.c0)OR(t0.c13)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c1)) AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((((((v0.c1)IS(v0.c2))))<=(((((v0.c0)) NOT BETWEEN ((t0.c32)) AND ((vt0.c0))))))) ORDER BY t0.c32, CAST(v0.c1 COLLATE RTRIM AS REAL) ASC  NULLS LAST, CAST(((((((((v0.c0)OR(t0.c13)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c1)) AS REAL) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (t0.c13);
SELECT SUM(count) FROM (SELECT ALL ((t0.c13) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c13);
SELECT SUM(count) FROM (SELECT ALL ((t0.c13) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c13);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)+(x'0098')))>=(v0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)+(x'0098')))>=(v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)+(x'0098')))>=(v0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)+(x'0098')))>=(v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)+(x'0098')))>=(v0.c2 COLLATE NOCASE)));
SELECT * FROM vt0 WHERE (((((vt0.c0)+(vt0.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(vt0.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)+(vt0.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(vt0.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)+(vt0.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND (vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt0 WHERE ((((-1.027962872E9, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)!=(vt0.c0))))>=(((x'' IN ()), json_array(vt0.c0, vt0.c0), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((-1.027962872E9, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)<>(vt0.c0))))>=(((x'' IN ()), json_array(vt0.c0, vt0.c0), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((-1.027962872E9, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)!=(vt0.c0))))>=(((x'' IN ()), json_array(vt0.c0, vt0.c0), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((-1.027962872E9, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)<>(vt0.c0))))>=(((x'' IN ()), json_array(vt0.c0, vt0.c0), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((-1.027962872E9, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)!=(vt0.c0))))>=(((x'' IN ()), json_array(vt0.c0, vt0.c0), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))));
SELECT ALL * FROM v0, t0 WHERE (CASE ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))  WHEN t0.c86 COLLATE BINARY THEN NULL ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c32))) END) ORDER BY CAST('X+' AS TEXT) DESC  NULLS FIRST, json_object(t0.c13, (- (v0.c0)), v0.c1, ((v0.c2)|(t0.c86)));
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))  WHEN t0.c86 COLLATE BINARY THEN NULL ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c32))) END) IS TRUE)  as count FROM v0, t0 ORDER BY CAST('X+' AS TEXT) DESC  NULLS FIRST, json_object(t0.c13, (- (v0.c0)), v0.c1, ((v0.c2)|(t0.c86))));
SELECT ALL * FROM v0, t0 WHERE (CASE ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))  WHEN t0.c86 COLLATE BINARY THEN NULL ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c32))) END) ORDER BY CAST('X+' AS TEXT) DESC  NULLS FIRST, json_object(t0.c13, (- (v0.c0)), v0.c1, ((v0.c2)|(t0.c86)));
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))  WHEN t0.c86 COLLATE BINARY THEN NULL ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c32))) END) IS TRUE)  as count FROM v0, t0 ORDER BY CAST('X+' AS TEXT) DESC  NULLS FIRST, json_object(t0.c13, (- (v0.c0)), v0.c1, ((v0.c2)|(t0.c86))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c2)<(991067480)))AND((+ (v0.c0)))))AND(CASE v0.c1  WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END))) ORDER BY ((+ (v0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c2)<(991067480)))AND((+ (v0.c0)))))AND(CASE v0.c1  WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END))) IS TRUE)  as count FROM v0 ORDER BY ((+ (v0.c1)) IN ()) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c2)<(991067480)))AND((+ (v0.c0)))))AND(CASE v0.c1  WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END))) ORDER BY ((+ (v0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c2)<(991067480)))AND((+ (v0.c0)))))AND(CASE v0.c1  WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END))) IS TRUE)  as count FROM v0 ORDER BY ((+ (v0.c1)) IN ()) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c2)<(991067480)))AND((+ (v0.c0)))))AND(CASE v0.c1  WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END))) ORDER BY ((+ (v0.c1)) IN ()) DESC;
SELECT * FROM vt0, t0, v0 WHERE (((((((0.4845844619334091)+(NULL)))AND((((v0.c2))>((t0.c86))))))AND(((v0.c0)*(t0.c32))))) ORDER BY ((((v0.c2) IS FALSE)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.4845844619334091)+(NULL)))AND((((v0.c2))>((t0.c86))))))AND(((v0.c0)*(t0.c32))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((v0.c2) IS FALSE)) IS TRUE)  NULLS LAST);
SELECT * FROM vt0, t0, v0 WHERE (((((((0.4845844619334091)+(NULL)))AND((((v0.c2))>((t0.c86))))))AND(((v0.c0)*(t0.c32))))) ORDER BY ((((v0.c2) IS FALSE)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.4845844619334091)+(NULL)))AND((((v0.c2))>((t0.c86))))))AND(((v0.c0)*(t0.c32))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((v0.c2) IS FALSE)) IS TRUE)  NULLS LAST);
SELECT * FROM vt0, t0, v0 WHERE (((((((0.4845844619334091)+(NULL)))AND((((v0.c2))>((t0.c86))))))AND(((v0.c0)*(t0.c32))))) ORDER BY ((((v0.c2) IS FALSE)) IS TRUE)  NULLS LAST;
SELECT * FROM t0 WHERE (((((- (t0.c86))))=(((~ (NULL)))))) ORDER BY (((t0.c13 IN (t0.c86, t0.c86)))>>((t0.c86 IN (t0.c86)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((- (t0.c86))))=(((~ (NULL)))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c13 IN (t0.c86, t0.c86)))>>((t0.c86 IN (t0.c86)))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((- (t0.c86))))=(((~ (NULL)))))) ORDER BY (((t0.c13 IN (t0.c86, t0.c86)))>>((t0.c86 IN (t0.c86)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((- (t0.c86))))=(((~ (NULL)))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c13 IN (t0.c86, t0.c86)))>>((t0.c86 IN (t0.c86)))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((- (t0.c86))))=(((~ (NULL)))))) ORDER BY (((t0.c13 IN (t0.c86, t0.c86)))>>((t0.c86 IN (t0.c86)))) DESC  NULLS FIRST;
SELECT ALL * FROM v0, t0 WHERE (CASE t0.c86 COLLATE BINARY  WHEN ((t0.c13) NOT BETWEEN (v0.c0) AND (t0.c32)) THEN ((v0.c1)<(t0.c86)) WHEN (+ (v0.c1)) THEN (((v0.c0))<((t0.c86))) WHEN (NOT (t0.c13)) THEN (t0.c13 IN ()) END) ORDER BY (((v0.c2))=((t0.c13))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c86 COLLATE BINARY  WHEN ((t0.c13) NOT BETWEEN (v0.c0) AND (t0.c32)) THEN ((v0.c1)<(t0.c86)) WHEN (+ (v0.c1)) THEN (((v0.c0))<((t0.c86))) WHEN (NOT (t0.c13)) THEN (t0.c13 IN ()) END) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c2))=((t0.c13))) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM v0, t0 WHERE (CASE t0.c86 COLLATE BINARY  WHEN ((t0.c13) NOT BETWEEN (v0.c0) AND (t0.c32)) THEN ((v0.c1)<(t0.c86)) WHEN (+ (v0.c1)) THEN (((v0.c0))<((t0.c86))) WHEN (NOT (t0.c13)) THEN (t0.c13 IN ()) END) ORDER BY (((v0.c2))=((t0.c13))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c86 COLLATE BINARY  WHEN ((t0.c13) NOT BETWEEN (v0.c0) AND (t0.c32)) THEN ((v0.c1)<(t0.c86)) WHEN (+ (v0.c1)) THEN (((v0.c0))<((t0.c86))) WHEN (NOT (t0.c13)) THEN (t0.c13 IN ()) END) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c2))=((t0.c13))) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM v0, t0 WHERE (CASE t0.c86 COLLATE BINARY  WHEN ((t0.c13) NOT BETWEEN (v0.c0) AND (t0.c32)) THEN ((v0.c1)<(t0.c86)) WHEN (+ (v0.c1)) THEN (((v0.c0))<((t0.c86))) WHEN (NOT (t0.c13)) THEN (t0.c13 IN ()) END) ORDER BY (((v0.c2))=((t0.c13))) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((('M\r')AND(v0.c0)))OR(v0.c2))))<((((v0.c0)GLOB(v0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((('M\r')AND(v0.c0)))OR(v0.c2))))<((((v0.c0)GLOB(v0.c1)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((('M\r')AND(v0.c0)))OR(v0.c2))))<((((v0.c0)GLOB(v0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((('M\r')AND(v0.c0)))OR(v0.c2))))<((((v0.c0)GLOB(v0.c1)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((('M\r')AND(v0.c0)))OR(v0.c2))))<((((v0.c0)GLOB(v0.c1))))));
SELECT COUNT(*) FROM t0, vt0 INNER JOIN v0 ON vt0.c0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM t0, vt0 INNER JOIN v0 ON vt0.c0);
SELECT COUNT(*) FROM t0, vt0 INNER JOIN v0 ON vt0.c0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM t0, vt0 INNER JOIN v0 ON vt0.c0);
SELECT COUNT(*) FROM t0, vt0 INNER JOIN v0 ON vt0.c0 WHERE (v0.c1);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1 IN ()))>(((v0.c0)=('1116637992'))))) ORDER BY ((((v0.c1) ISNULL))>>((((v0.c1))>((v0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ()))>(((v0.c0)==('1116637992'))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) ISNULL))>>((((v0.c1))>((v0.c2))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1 IN ()))>(((v0.c0)=('1116637992'))))) ORDER BY ((((v0.c1) ISNULL))>>((((v0.c1))>((v0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ()))>(((v0.c0)==('1116637992'))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) ISNULL))>>((((v0.c1))>((v0.c2))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1 IN ()))>(((v0.c0)=('1116637992'))))) ORDER BY ((((v0.c1) ISNULL))>>((((v0.c1))>((v0.c2))))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((((((t0.c32)OR(0.11168653747515844)))OR(t0.c86)))|(((t0.c13)&(t0.c86))))) ORDER BY ((t0.c13) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((((t0.c32)OR(0.11168653747515844)))OR(t0.c86)))|(((t0.c13)&(t0.c86))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c13) NOTNULL));
SELECT * FROM t0 WHERE (((((((t0.c32)OR(0.11168653747515844)))OR(t0.c86)))|(((t0.c13)&(t0.c86))))) ORDER BY ((t0.c13) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((((t0.c32)OR(0.11168653747515844)))OR(t0.c86)))|(((t0.c13)&(t0.c86))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c13) NOTNULL));
SELECT * FROM t0 WHERE (((((((t0.c32)OR(0.11168653747515844)))OR(t0.c86)))|(((t0.c13)&(t0.c86))))) ORDER BY ((t0.c13) NOTNULL);
SELECT ALL * FROM v0, t0 NATURAL JOIN vt0 WHERE (CASE ABS(v0.c2)  WHEN '' THEN (+ (v0.c2)) ELSE (~ (t0.c32)) END);
SELECT SUM(count) FROM (SELECT ((CASE ABS(v0.c2)  WHEN '' THEN (+ (v0.c2)) ELSE (~ (t0.c32)) END) IS TRUE)  as count FROM v0, t0 NATURAL JOIN vt0);
SELECT ALL * FROM v0, t0 NATURAL JOIN vt0 WHERE (CASE ABS(v0.c2)  WHEN '' THEN (+ (v0.c2)) ELSE (~ (t0.c32)) END);
SELECT SUM(count) FROM (SELECT ((CASE ABS(v0.c2)  WHEN '' THEN (+ (v0.c2)) ELSE (~ (t0.c32)) END) IS TRUE)  as count FROM v0, t0 NATURAL JOIN vt0);
SELECT ALL * FROM v0, t0 NATURAL JOIN vt0 WHERE (CASE ABS(v0.c2)  WHEN '' THEN (+ (v0.c2)) ELSE (~ (t0.c32)) END);
SELECT * FROM t0, v0 WHERE (((((t0.c86)*(v0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c86)*(v0.c2))) IS TRUE)) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((((t0.c86)*(v0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c86)*(v0.c2))) IS TRUE)) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((((t0.c86)*(v0.c2))) IS TRUE));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (('381038729')))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (('381038729')))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (('381038729')))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (('381038729')))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (('381038729')))) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))=(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))==(NULL))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))=(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))==(NULL))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))=(NULL)));
SELECT * FROM v0 WHERE (CASE ((v0.c0)LIKE(v0.c1))  WHEN NULL THEN ((v0.c2)IS(v0.c0)) END) ORDER BY (~ (v0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)LIKE(v0.c1))  WHEN NULL THEN ((v0.c2)IS(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY (~ (v0.c2)) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (CASE ((v0.c0)LIKE(v0.c1))  WHEN NULL THEN ((v0.c2)IS(v0.c0)) END) ORDER BY (~ (v0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)LIKE(v0.c1))  WHEN NULL THEN ((v0.c2)IS(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY (~ (v0.c2)) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (CASE ((v0.c0)LIKE(v0.c1))  WHEN NULL THEN ((v0.c2)IS(v0.c0)) END) ORDER BY (~ (v0.c2)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM v0 WHERE (x'') ORDER BY (((v0.c2 IN (v0.c2, v0.c0)))*(v0.c1)) DESC, ((v0.c2 IN ()) IN (CAST(v0.c1 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY (((v0.c2 IN (v0.c2, v0.c0)))*(v0.c1)) DESC, ((v0.c2 IN ()) IN (CAST(v0.c1 AS INTEGER))) DESC);
SELECT ALL * FROM v0 WHERE (x'') ORDER BY (((v0.c2 IN (v0.c2, v0.c0)))*(v0.c1)) DESC, ((v0.c2 IN ()) IN (CAST(v0.c1 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY (((v0.c2 IN (v0.c2, v0.c0)))*(v0.c1)) DESC, ((v0.c2 IN ()) IN (CAST(v0.c1 AS INTEGER))) DESC);
SELECT ALL * FROM v0 WHERE (x'') ORDER BY (((v0.c2 IN (v0.c2, v0.c0)))*(v0.c1)) DESC, ((v0.c2 IN ()) IN (CAST(v0.c1 AS INTEGER))) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (0X4a29fdf1);
SELECT SUM(count) FROM (SELECT ALL ((0X4a29fdf1) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (0X4a29fdf1);
SELECT SUM(count) FROM (SELECT ALL ((0X4a29fdf1) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (0X4a29fdf1);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (v0.c1);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c32)LIKE(0xffffffffcac8a2ad))) BETWEEN (t0.c86 COLLATE NOCASE) AND (((t0.c86)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c32)LIKE(0xffffffffcac8a2ad))) BETWEEN (t0.c86 COLLATE NOCASE) AND (((t0.c86)!=(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c32)LIKE(0xffffffffcac8a2ad))) BETWEEN (t0.c86 COLLATE NOCASE) AND (((t0.c86)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c32)LIKE(0xffffffffcac8a2ad))) BETWEEN (t0.c86 COLLATE NOCASE) AND (((t0.c86)!=(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c32)LIKE(0xffffffffcac8a2ad))) BETWEEN (t0.c86 COLLATE NOCASE) AND (((t0.c86)<>(vt0.c0)))));
SELECT * FROM t0, v0, vt0 WHERE (CAST((((t0.c13)) BETWEEN ((v0.c2)) AND ((v0.c1))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c13)) BETWEEN ((v0.c2)) AND ((v0.c1))) AS NUMERIC)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE (CAST((((t0.c13)) BETWEEN ((v0.c2)) AND ((v0.c1))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c13)) BETWEEN ((v0.c2)) AND ((v0.c1))) AS NUMERIC)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE (CAST((((t0.c13)) BETWEEN ((v0.c2)) AND ((v0.c1))) AS NUMERIC));
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((t0.c86)) NOT BETWEEN ((LIKE(t0.c13, t0.c86, '/'))) AND ((v0.c0))) INNER JOIN t0 ON ((UNLIKELY(t0.c32))&(((v0.c0) NOT BETWEEN (t0.c86) AND (t0.c32)))) WHERE (CAST(((v0.c0)<=(t0.c86)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)<=(t0.c86)) AS BLOB)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((t0.c86)) NOT BETWEEN ((LIKE(t0.c13, t0.c86, '/'))) AND ((v0.c0))) INNER JOIN t0 ON ((UNLIKELY(t0.c32))&(((v0.c0) NOT BETWEEN (t0.c86) AND (t0.c32)))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((t0.c86)) NOT BETWEEN ((LIKE(t0.c13, t0.c86, '/'))) AND ((v0.c0))) INNER JOIN t0 ON ((UNLIKELY(t0.c32))&(((v0.c0) NOT BETWEEN (t0.c86) AND (t0.c32)))) WHERE (CAST(((v0.c0)<=(t0.c86)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)<=(t0.c86)) AS BLOB)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((t0.c86)) NOT BETWEEN ((LIKE(t0.c13, t0.c86, '/'))) AND ((v0.c0))) INNER JOIN t0 ON ((UNLIKELY(t0.c32))&(((v0.c0) NOT BETWEEN (t0.c86) AND (t0.c32)))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((t0.c86)) NOT BETWEEN ((LIKE(t0.c13, t0.c86, '/'))) AND ((v0.c0))) INNER JOIN t0 ON ((UNLIKELY(t0.c32))&(((v0.c0) NOT BETWEEN (t0.c86) AND (t0.c32)))) WHERE (CAST(((v0.c0)<=(t0.c86)) AS BLOB));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (vt0.c0);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c1 THEN x'' END)/(CAST(v0.c0 AS TEXT)))) ORDER BY (((v0.c0)IS(v0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c1 THEN x'' END)/(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)IS(v0.c1)) IN ()));
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c1 THEN x'' END)/(CAST(v0.c0 AS TEXT)))) ORDER BY (((v0.c0)IS(v0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c1 THEN x'' END)/(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)IS(v0.c1)) IN ()));
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c1 THEN x'' END)/(CAST(v0.c0 AS TEXT)))) ORDER BY (((v0.c0)IS(v0.c1)) IN ());
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c2))<=((v0.c2)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c2))<=((v0.c2)))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c2))<=((v0.c2)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c2))<=((v0.c2)))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c2))<=((v0.c2)))) NOT NULL));
SELECT * FROM t0, vt0 WHERE (CAST(x'edfe' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(x'edfe' AS REAL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST(x'edfe' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(x'edfe' AS REAL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST(x'edfe' AS REAL));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN v0 ON CASE ((t0.c86)>>(v0.c0))  WHEN v0.c1 THEN v0.c2 ELSE ((t0.c86) ISNULL) END INNER JOIN vt0 ON (((t0.c32)) BETWEEN ((v0.c2)) AND ((t0.c13))) COLLATE RTRIM WHERE (CASE ((v0.c2) BETWEEN (0.5655091713996551) AND (vt0.c0))  WHEN CASE x''  WHEN t0.c86 THEN v0.c1 WHEN t0.c32 THEN t0.c86 WHEN vt0.c0 THEN v0.c1 END THEN ((NULL)AND(v0.c0)) ELSE (~ (t0.c86)) END) ORDER BY ((CAST(t0.c13 AS BLOB))<=(((t0.c86) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c2) BETWEEN (0.5655091713996551) AND (vt0.c0))  WHEN CASE x''  WHEN t0.c86 THEN v0.c1 WHEN t0.c32 THEN t0.c86 WHEN vt0.c0 THEN v0.c1 END THEN ((NULL)AND(v0.c0)) ELSE (~ (t0.c86)) END) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON CASE ((t0.c86)>>(v0.c0))  WHEN v0.c1 THEN v0.c2 ELSE ((t0.c86) ISNULL) END INNER JOIN vt0 ON (((t0.c32)) BETWEEN ((v0.c2)) AND ((t0.c13))) COLLATE RTRIM ORDER BY ((CAST(t0.c13 AS BLOB))<=(((t0.c86) IS TRUE))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN v0 ON CASE ((t0.c86)>>(v0.c0))  WHEN v0.c1 THEN v0.c2 ELSE ((t0.c86) ISNULL) END INNER JOIN vt0 ON (((t0.c32)) BETWEEN ((v0.c2)) AND ((t0.c13))) COLLATE RTRIM WHERE (CASE ((v0.c2) BETWEEN (0.5655091713996551) AND (vt0.c0))  WHEN CASE x''  WHEN t0.c86 THEN v0.c1 WHEN t0.c32 THEN t0.c86 WHEN vt0.c0 THEN v0.c1 END THEN ((NULL)AND(v0.c0)) ELSE (~ (t0.c86)) END) ORDER BY ((CAST(t0.c13 AS BLOB))<=(((t0.c86) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c2) BETWEEN (0.5655091713996551) AND (vt0.c0))  WHEN CASE x''  WHEN t0.c86 THEN v0.c1 WHEN t0.c32 THEN t0.c86 WHEN vt0.c0 THEN v0.c1 END THEN ((NULL)AND(v0.c0)) ELSE (~ (t0.c86)) END) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON CASE ((t0.c86)>>(v0.c0))  WHEN v0.c1 THEN v0.c2 ELSE ((t0.c86) ISNULL) END INNER JOIN vt0 ON (((t0.c32)) BETWEEN ((v0.c2)) AND ((t0.c13))) COLLATE RTRIM ORDER BY ((CAST(t0.c13 AS BLOB))<=(((t0.c86) IS TRUE))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN v0 ON CASE ((t0.c86)>>(v0.c0))  WHEN v0.c1 THEN v0.c2 ELSE ((t0.c86) ISNULL) END INNER JOIN vt0 ON (((t0.c32)) BETWEEN ((v0.c2)) AND ((t0.c13))) COLLATE RTRIM WHERE (CASE ((v0.c2) BETWEEN (0.5655091713996551) AND (vt0.c0))  WHEN CASE x''  WHEN t0.c86 THEN v0.c1 WHEN t0.c32 THEN t0.c86 WHEN vt0.c0 THEN v0.c1 END THEN ((NULL)AND(v0.c0)) ELSE (~ (t0.c86)) END) ORDER BY ((CAST(t0.c13 AS BLOB))<=(((t0.c86) IS TRUE)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((v0.c2 COLLATE BINARY)*((v0.c0 IN ()))) CROSS JOIN t0 ON (((t0.c32 IN (v0.c2)))LIKE(LTRIM(v0.c1))) WHERE (((CAST(v0.c0 AS INTEGER))-(CAST(t0.c13 AS REAL)))) ORDER BY (('0.40441571891767036') ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER))-(CAST(t0.c13 AS REAL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((v0.c2 COLLATE BINARY)*((v0.c0 IN ()))) CROSS JOIN t0 ON (((t0.c32 IN (v0.c2)))LIKE(LTRIM(v0.c1))) ORDER BY (('0.40441571891767036') ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((v0.c2 COLLATE BINARY)*((v0.c0 IN ()))) CROSS JOIN t0 ON (((t0.c32 IN (v0.c2)))LIKE(LTRIM(v0.c1))) WHERE (((CAST(v0.c0 AS INTEGER))-(CAST(t0.c13 AS REAL)))) ORDER BY (('0.40441571891767036') ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER))-(CAST(t0.c13 AS REAL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((v0.c2 COLLATE BINARY)*((v0.c0 IN ()))) CROSS JOIN t0 ON (((t0.c32 IN (v0.c2)))LIKE(LTRIM(v0.c1))) ORDER BY (('0.40441571891767036') ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((v0.c2 COLLATE BINARY)*((v0.c0 IN ()))) CROSS JOIN t0 ON (((t0.c32 IN (v0.c2)))LIKE(LTRIM(v0.c1))) WHERE (((CAST(v0.c0 AS INTEGER))-(CAST(t0.c13 AS REAL)))) ORDER BY (('0.40441571891767036') ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((~ (v0.c1)))GLOB(CAST(v0.c2 AS TEXT)))) ORDER BY (0.9339748313869642 IN ()), ((v0.c1)AND(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c1)))GLOB(CAST(v0.c2 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY (0.9339748313869642 IN ()), ((v0.c1)AND(NULL))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((~ (v0.c1)))GLOB(CAST(v0.c2 AS TEXT)))) ORDER BY (0.9339748313869642 IN ()), ((v0.c1)AND(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c1)))GLOB(CAST(v0.c2 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY (0.9339748313869642 IN ()), ((v0.c1)AND(NULL))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((~ (v0.c1)))GLOB(CAST(v0.c2 AS TEXT)))) ORDER BY (0.9339748313869642 IN ()), ((v0.c1)AND(NULL))  NULLS FIRST;
SELECT * FROM t0 WHERE (LIKELIHOOD(((((t0.c86)OR(t0.c86)))OR(0Xffffffff8013e1c2)), 0.628164641168644));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((((t0.c86)OR(t0.c86)))OR(0xffffffff8013e1c2)), 0.628164641168644)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (LIKELIHOOD(((((t0.c86)OR(t0.c86)))OR(0Xffffffff8013e1c2)), 0.628164641168644));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((((t0.c86)OR(t0.c86)))OR(0xffffffff8013e1c2)), 0.628164641168644)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (LIKELIHOOD(((((t0.c86)OR(t0.c86)))OR(0Xffffffff8013e1c2)), 0.628164641168644));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON (((((t0.c32, 0.15819216480536302, t0.c86)) BETWEEN ((t0.c86, vt0.c0, x'')) AND (('1157146493', vt0.c0, vt0.c0))))==((((t0.c86))>=((t0.c32))))) WHERE (((((-0.0) NOT BETWEEN (t0.c13) AND (t0.c13))) BETWEEN ((~ (t0.c32))) AND ((t0.c32 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((-0.0) NOT BETWEEN (t0.c13) AND (t0.c13))) BETWEEN ((~ (t0.c32))) AND ((t0.c32 IN ())))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((((t0.c32, 0.15819216480536302, t0.c86)) BETWEEN ((t0.c86, vt0.c0, x'')) AND (('1157146493', vt0.c0, vt0.c0))))==((((t0.c86))>=((t0.c32))))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON (((((t0.c32, 0.15819216480536302, t0.c86)) BETWEEN ((t0.c86, vt0.c0, x'')) AND (('1157146493', vt0.c0, vt0.c0))))==((((t0.c86))>=((t0.c32))))) WHERE (((((-0.0) NOT BETWEEN (t0.c13) AND (t0.c13))) BETWEEN ((~ (t0.c32))) AND ((t0.c32 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((-0.0) NOT BETWEEN (t0.c13) AND (t0.c13))) BETWEEN ((~ (t0.c32))) AND ((t0.c32 IN ())))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((((t0.c32, 0.15819216480536302, t0.c86)) BETWEEN ((t0.c86, vt0.c0, x'')) AND (('1157146493', vt0.c0, vt0.c0))))==((((t0.c86))>=((t0.c32))))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON (((((t0.c32, 0.15819216480536302, t0.c86)) BETWEEN ((t0.c86, vt0.c0, x'')) AND (('1157146493', vt0.c0, vt0.c0))))==((((t0.c86))>=((t0.c32))))) WHERE (((((-0.0) NOT BETWEEN (t0.c13) AND (t0.c13))) BETWEEN ((~ (t0.c32))) AND ((t0.c32 IN ()))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c32)>=((t0.c86 IN (t0.c86)))));
SELECT SUM(count) FROM (SELECT ((((t0.c32)>=((t0.c86 IN (t0.c86))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c32)>=((t0.c86 IN (t0.c86)))));
SELECT SUM(count) FROM (SELECT ((((t0.c32)>=((t0.c86 IN (t0.c86))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c32)>=((t0.c86 IN (t0.c86)))));
SELECT ALL * FROM v0 WHERE ((((((v0.c0 IN ()))OR(v0.c0 COLLATE NOCASE)))AND(CAST(v0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN ()))OR(v0.c0 COLLATE NOCASE)))AND(CAST(v0.c1 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0 IN ()))OR(v0.c0 COLLATE NOCASE)))AND(CAST(v0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN ()))OR(v0.c0 COLLATE NOCASE)))AND(CAST(v0.c1 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0 IN ()))OR(v0.c0 COLLATE NOCASE)))AND(CAST(v0.c1 AS BLOB))));
SELECT ALL * FROM t0, v0 WHERE (((((((((((v0.c2)AND(t0.c32)))OR(v0.c0)))AND(v0.c2)))AND(t0.c13)))-(((((v0.c0)OR(t0.c13)))OR(t0.c32)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c2)AND(t0.c32)))OR(v0.c0)))AND(v0.c2)))AND(t0.c13)))-(((((v0.c0)OR(t0.c13)))OR(t0.c32))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((((((((((v0.c2)AND(t0.c32)))OR(v0.c0)))AND(v0.c2)))AND(t0.c13)))-(((((v0.c0)OR(t0.c13)))OR(t0.c32)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c2)AND(t0.c32)))OR(v0.c0)))AND(v0.c2)))AND(t0.c13)))-(((((v0.c0)OR(t0.c13)))OR(t0.c32))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((((((((((v0.c2)AND(t0.c32)))OR(v0.c0)))AND(v0.c2)))AND(t0.c13)))-(((((v0.c0)OR(t0.c13)))OR(t0.c32)))));
SELECT ALL * FROM v0, t0, vt0 WHERE ((~ (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((~ (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE ((~ (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((~ (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE ((~ (v0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 WHERE (0.952565135364372);
SELECT SUM(count) FROM (SELECT ((0.952565135364372) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (0.952565135364372);
SELECT SUM(count) FROM (SELECT ((0.952565135364372) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (0.952565135364372);
SELECT * FROM t0, v0 NATURAL JOIN vt0 WHERE (json_patch((v0.c0 IN ()), ((t0.c86) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((json_patch((v0.c0 IN ()), ((t0.c86) NOTNULL))) IS TRUE)  as count FROM t0, v0 NATURAL JOIN vt0);
SELECT * FROM t0, v0 NATURAL JOIN vt0 WHERE (json_patch((v0.c0 IN ()), ((t0.c86) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((json_patch((v0.c0 IN ()), ((t0.c86) NOTNULL))) IS TRUE)  as count FROM t0, v0 NATURAL JOIN vt0);
SELECT * FROM t0, v0 NATURAL JOIN vt0 WHERE (json_patch((v0.c0 IN ()), ((t0.c86) NOTNULL)));
SELECT ALL * FROM vt0 WHERE (((1150019192) IS TRUE)) ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))IS(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((1150019192) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))IS(vt0.c0)));
SELECT ALL * FROM vt0 WHERE (((1150019192) IS TRUE)) ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))IS(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((1150019192) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))IS(vt0.c0)));
SELECT ALL * FROM vt0 WHERE (((1150019192) IS TRUE)) ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))IS(vt0.c0));
SELECT * FROM t0, vt0 WHERE (t0.c86);
SELECT SUM(count) FROM (SELECT ((t0.c86) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (t0.c86);
SELECT SUM(count) FROM (SELECT ((t0.c86) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (t0.c86);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c13)) BETWEEN (((t0.c13 IN (t0.c13)))) AND ((((t0.c86)=(t0.c32))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c13)) BETWEEN (((t0.c13 IN (t0.c13)))) AND ((((t0.c86)==(t0.c32)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c13)) BETWEEN (((t0.c13 IN (t0.c13)))) AND ((((t0.c86)=(t0.c32))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c13)) BETWEEN (((t0.c13 IN (t0.c13)))) AND ((((t0.c86)==(t0.c32)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c13)) BETWEEN (((t0.c13 IN (t0.c13)))) AND ((((t0.c86)=(t0.c32))))));
SELECT * FROM t0 INNER JOIN vt0 ON GLOB(((v0.c1)*(v0.c1)), (v0.c1 IN ())) RIGHT OUTER JOIN v0 ON t0.c13 WHERE (((((v0.c0) IS TRUE)) ISNULL)) ORDER BY (((v0.c1, v0.c0, v0.c2)) NOT BETWEEN ((vt0.c0, v0.c2, t0.c13)) AND ((t0.c86, t0.c86, vt0.c0))) COLLATE NOCASE, ((((v0.c1)<=(NULL))) NOT BETWEEN (NULL) AND (NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE)) ISNULL)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON GLOB(((v0.c1)*(v0.c1)), (v0.c1 IN ())) RIGHT OUTER JOIN v0 ON t0.c13 ORDER BY (((v0.c1, v0.c0, v0.c2)) NOT BETWEEN ((vt0.c0, v0.c2, t0.c13)) AND ((t0.c86, t0.c86, vt0.c0))) COLLATE NOCASE, ((((v0.c1)<=(NULL))) NOT BETWEEN (NULL) AND (NULL)));
SELECT * FROM t0 INNER JOIN vt0 ON GLOB(((v0.c1)*(v0.c1)), (v0.c1 IN ())) RIGHT OUTER JOIN v0 ON t0.c13 WHERE (((((v0.c0) IS TRUE)) ISNULL)) ORDER BY (((v0.c1, v0.c0, v0.c2)) NOT BETWEEN ((vt0.c0, v0.c2, t0.c13)) AND ((t0.c86, t0.c86, vt0.c0))) COLLATE NOCASE, ((((v0.c1)<=(NULL))) NOT BETWEEN (NULL) AND (NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE)) ISNULL)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON GLOB(((v0.c1)*(v0.c1)), (v0.c1 IN ())) RIGHT OUTER JOIN v0 ON t0.c13 ORDER BY (((v0.c1, v0.c0, v0.c2)) NOT BETWEEN ((vt0.c0, v0.c2, t0.c13)) AND ((t0.c86, t0.c86, vt0.c0))) COLLATE NOCASE, ((((v0.c1)<=(NULL))) NOT BETWEEN (NULL) AND (NULL)));
SELECT * FROM t0 WHERE ((CASE t0.c13  WHEN t0.c86 THEN t0.c32 ELSE t0.c86 END IN ())) ORDER BY '-1027962872' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE t0.c13  WHEN t0.c86 THEN t0.c32 ELSE t0.c86 END IN ())) IS TRUE)  as count FROM t0 ORDER BY '-1027962872' DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((CASE t0.c13  WHEN t0.c86 THEN t0.c32 ELSE t0.c86 END IN ())) ORDER BY '-1027962872' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE t0.c13  WHEN t0.c86 THEN t0.c32 ELSE t0.c86 END IN ())) IS TRUE)  as count FROM t0 ORDER BY '-1027962872' DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((CASE t0.c13  WHEN t0.c86 THEN t0.c32 ELSE t0.c86 END IN ())) ORDER BY '-1027962872' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (v0.c0) ORDER BY (NOT (((t0.c32) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (NOT (((t0.c32) IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (v0.c0) ORDER BY (NOT (((t0.c32) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (NOT (((t0.c32) IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (v0.c0) ORDER BY (NOT (((t0.c32) IS FALSE))) ASC;
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c32 AS REAL))LIKE(((t0.c32)*(t0.c86))))) ORDER BY (+ (t0.c13))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c32 AS REAL))LIKE(((t0.c32)*(t0.c86))))) IS TRUE)  as count FROM t0 ORDER BY (+ (t0.c13))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c32 AS REAL))LIKE(((t0.c32)*(t0.c86))))) ORDER BY (+ (t0.c13))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c32 AS REAL))LIKE(((t0.c32)*(t0.c86))))) IS TRUE)  as count FROM t0 ORDER BY (+ (t0.c13))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c32 AS REAL))LIKE(((t0.c32)*(t0.c86))))) ORDER BY (+ (t0.c13))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((NOT (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((NOT (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((NOT (vt0.c0)) IN ()));
SELECT COUNT(*) FROM t0, v0 WHERE (t0.c13);
SELECT SUM(count) FROM (SELECT ALL ((t0.c13) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (t0.c13);
SELECT SUM(count) FROM (SELECT ALL ((t0.c13) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (t0.c13);
SELECT COUNT(*) FROM v0 WHERE (((NOT (v0.c0)) IN (((v0.c0) BETWEEN (v0.c2) AND (v0.c1)), ((v0.c1) BETWEEN (v0.c0) AND (x''))))) ORDER BY ((CAST(v0.c0 AS NUMERIC)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (v0.c0)) IN (((v0.c0) BETWEEN (v0.c2) AND (v0.c1)), ((v0.c1) BETWEEN (v0.c0) AND (x''))))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS NUMERIC)) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((NOT (v0.c0)) IN (((v0.c0) BETWEEN (v0.c2) AND (v0.c1)), ((v0.c1) BETWEEN (v0.c0) AND (x''))))) ORDER BY ((CAST(v0.c0 AS NUMERIC)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (v0.c0)) IN (((v0.c0) BETWEEN (v0.c2) AND (v0.c1)), ((v0.c1) BETWEEN (v0.c0) AND (x''))))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS NUMERIC)) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((NOT (v0.c0)) IN (((v0.c0) BETWEEN (v0.c2) AND (v0.c1)), ((v0.c1) BETWEEN (v0.c0) AND (x''))))) ORDER BY ((CAST(v0.c0 AS NUMERIC)) IS TRUE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((+ (((v0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((+ (((v0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((+ (((v0.c1) NOT NULL))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)-(vt0.c0)), vt0.c0 COLLATE NOCASE, x''))!=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(x'' AS TEXT), (vt0.c0 IN ()))))) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (0Xffffffffb90038b9)))OR(((vt0.c0)&(vt0.c0)))))OR(vt0.c0)) DESC, CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)-(vt0.c0)), vt0.c0 COLLATE NOCASE, x''))<>(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(x'' AS TEXT), (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (0Xffffffffb90038b9)))OR(((vt0.c0)&(vt0.c0)))))OR(vt0.c0)) DESC, CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)-(vt0.c0)), vt0.c0 COLLATE NOCASE, x''))!=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(x'' AS TEXT), (vt0.c0 IN ()))))) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (0Xffffffffb90038b9)))OR(((vt0.c0)&(vt0.c0)))))OR(vt0.c0)) DESC, CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)-(vt0.c0)), vt0.c0 COLLATE NOCASE, x''))<>(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(x'' AS TEXT), (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (0Xffffffffb90038b9)))OR(((vt0.c0)&(vt0.c0)))))OR(vt0.c0)) DESC, CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)-(vt0.c0)), vt0.c0 COLLATE NOCASE, x''))!=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(x'' AS TEXT), (vt0.c0 IN ()))))) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (0Xffffffffb90038b9)))OR(((vt0.c0)&(vt0.c0)))))OR(vt0.c0)) DESC, CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON t0.c32 INNER JOIN t0 ON ((NULL) BETWEEN (((t0.c32)GLOB(t0.c32))) AND (((vt0.c0) NOT BETWEEN (v0.c1) AND (t0.c13)))) WHERE (t0.c13) ORDER BY x'cc36' DESC, ((((0.9537485220379627)OR((- (t0.c13)))))OR(x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c13) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON t0.c32 INNER JOIN t0 ON ((NULL) BETWEEN (((t0.c32)GLOB(t0.c32))) AND (((vt0.c0) NOT BETWEEN (v0.c1) AND (t0.c13)))) ORDER BY x'cc36' DESC, ((((0.9537485220379627)OR((- (t0.c13)))))OR(x'')) ASC);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON t0.c32 INNER JOIN t0 ON ((NULL) BETWEEN (((t0.c32)GLOB(t0.c32))) AND (((vt0.c0) NOT BETWEEN (v0.c1) AND (t0.c13)))) WHERE (t0.c13) ORDER BY x'cc36' DESC, ((((0.9537485220379627)OR((- (t0.c13)))))OR(x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c13) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON t0.c32 INNER JOIN t0 ON ((NULL) BETWEEN (((t0.c32)GLOB(t0.c32))) AND (((vt0.c0) NOT BETWEEN (v0.c1) AND (t0.c13)))) ORDER BY x'cc36' DESC, ((((0.9537485220379627)OR((- (t0.c13)))))OR(x'')) ASC);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON t0.c32 INNER JOIN t0 ON ((NULL) BETWEEN (((t0.c32)GLOB(t0.c32))) AND (((vt0.c0) NOT BETWEEN (v0.c1) AND (t0.c13)))) WHERE (t0.c13) ORDER BY x'cc36' DESC, ((((0.9537485220379627)OR((- (t0.c13)))))OR(x'')) ASC;
SELECT * FROM v0 WHERE (((((((((((v0.c2)OR(v0.c1)))OR(v0.c1)))OR(v0.c0)))OR(v0.c0))) BETWEEN ((~ (v0.c2))) AND (STRFTIME('0.32587010416256723', v0.c2, 0.7653204346235527)))) ORDER BY ((((((v0.c1)AND(NULL)))OR(v0.c0 COLLATE BINARY)))AND((((v0.c1, v0.c0, -2.085162457E9)) BETWEEN ((v0.c1, v0.c0, 'RA')) AND ((v0.c0, v0.c2, v0.c0))))) ASC, ((('-1196129324' IN ()))IS NOT(((v0.c2)+(v0.c2)))) ASC, (NOT (CASE v0.c0  WHEN -824209144 THEN v0.c1 ELSE v0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c2)OR(v0.c1)))OR(v0.c1)))OR(v0.c0)))OR(v0.c0))) BETWEEN ((~ (v0.c2))) AND (STRFTIME('0.32587010416256723', v0.c2, 0.7653204346235527)))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c1)AND(NULL)))OR(v0.c0 COLLATE BINARY)))AND((((v0.c1, v0.c0, -2.085162457E9)) BETWEEN ((v0.c1, v0.c0, 'RA')) AND ((v0.c0, v0.c2, v0.c0))))) ASC, ((('-1196129324' IN ()))IS NOT(((v0.c2)+(v0.c2)))) ASC, (NOT (CASE v0.c0  WHEN -824209144 THEN v0.c1 ELSE v0.c1 END)) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((((((((v0.c2)OR(v0.c1)))OR(v0.c1)))OR(v0.c0)))OR(v0.c0))) BETWEEN ((~ (v0.c2))) AND (STRFTIME('0.32587010416256723', v0.c2, 0.7653204346235527)))) ORDER BY ((((((v0.c1)AND(NULL)))OR(v0.c0 COLLATE BINARY)))AND((((v0.c1, v0.c0, -2.085162457E9)) BETWEEN ((v0.c1, v0.c0, 'RA')) AND ((v0.c0, v0.c2, v0.c0))))) ASC, ((('-1196129324' IN ()))IS NOT(((v0.c2)+(v0.c2)))) ASC, (NOT (CASE v0.c0  WHEN -824209144 THEN v0.c1 ELSE v0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c2)OR(v0.c1)))OR(v0.c1)))OR(v0.c0)))OR(v0.c0))) BETWEEN ((~ (v0.c2))) AND (STRFTIME('0.32587010416256723', v0.c2, 0.7653204346235527)))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c1)AND(NULL)))OR(v0.c0 COLLATE BINARY)))AND((((v0.c1, v0.c0, -2.085162457E9)) BETWEEN ((v0.c1, v0.c0, 'RA')) AND ((v0.c0, v0.c2, v0.c0))))) ASC, ((('-1196129324' IN ()))IS NOT(((v0.c2)+(v0.c2)))) ASC, (NOT (CASE v0.c0  WHEN -824209144 THEN v0.c1 ELSE v0.c1 END)) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((((((((v0.c2)OR(v0.c1)))OR(v0.c1)))OR(v0.c0)))OR(v0.c0))) BETWEEN ((~ (v0.c2))) AND (STRFTIME('0.32587010416256723', v0.c2, 0.7653204346235527)))) ORDER BY ((((((v0.c1)AND(NULL)))OR(v0.c0 COLLATE BINARY)))AND((((v0.c1, v0.c0, -2.085162457E9)) BETWEEN ((v0.c1, v0.c0, 'RA')) AND ((v0.c0, v0.c2, v0.c0))))) ASC, ((('-1196129324' IN ()))IS NOT(((v0.c2)+(v0.c2)))) ASC, (NOT (CASE v0.c0  WHEN -824209144 THEN v0.c1 ELSE v0.c1 END)) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((UNLIKELY(183813236))<((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((UNLIKELY(183813236))<((NOT (vt0.c0)))));
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((UNLIKELY(183813236))<((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((UNLIKELY(183813236))<((NOT (vt0.c0)))));
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((UNLIKELY(183813236))<((NOT (vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, t0 WHERE (((((t0.c86) NOTNULL))IS NOT(x''))) ORDER BY ((LIKELIHOOD(DISTINCT t0.c86, 0.2590184147024095))!=((((t0.c13)) BETWEEN ((t0.c13)) AND ((t0.c13))))) ASC  NULLS FIRST, ((((((((CAST(')k' AS TEXT))AND(((vt0.c0)!=(t0.c32)))))AND(x'')))AND(0.13182238609221364)))OR(CASE WHEN t0.c32 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c86) NOTNULL))IS NOT(x''))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((LIKELIHOOD(DISTINCT t0.c86, 0.2590184147024095))!=((((t0.c13)) BETWEEN ((t0.c13)) AND ((t0.c13))))) ASC  NULLS FIRST, ((((((((CAST(')k' AS TEXT))AND(((vt0.c0)<>(t0.c32)))))AND(x'')))AND(0.13182238609221364)))OR(CASE WHEN t0.c32 THEN vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, t0 WHERE (((((t0.c86) NOTNULL))IS NOT(x''))) ORDER BY ((LIKELIHOOD(DISTINCT t0.c86, 0.2590184147024095))!=((((t0.c13)) BETWEEN ((t0.c13)) AND ((t0.c13))))) ASC  NULLS FIRST, ((((((((CAST(')k' AS TEXT))AND(((vt0.c0)!=(t0.c32)))))AND(x'')))AND(0.13182238609221364)))OR(CASE WHEN t0.c32 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c86) NOTNULL))IS NOT(x''))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((LIKELIHOOD(DISTINCT t0.c86, 0.2590184147024095))!=((((t0.c13)) BETWEEN ((t0.c13)) AND ((t0.c13))))) ASC  NULLS FIRST, ((((((((CAST(')k' AS TEXT))AND(((vt0.c0)<>(t0.c32)))))AND(x'')))AND(0.13182238609221364)))OR(CASE WHEN t0.c32 THEN vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, t0 WHERE (((((t0.c86) NOTNULL))IS NOT(x''))) ORDER BY ((LIKELIHOOD(DISTINCT t0.c86, 0.2590184147024095))!=((((t0.c13)) BETWEEN ((t0.c13)) AND ((t0.c13))))) ASC  NULLS FIRST, ((((((((CAST(')k' AS TEXT))AND(((vt0.c0)!=(t0.c32)))))AND(x'')))AND(0.13182238609221364)))OR(CASE WHEN t0.c32 THEN vt0.c0 END))  NULLS LAST;
SELECT * FROM v0, t0, vt0 WHERE ('v<s\');
SELECT SUM(count) FROM (SELECT (('v<s\') IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE ('v<s\');
SELECT SUM(count) FROM (SELECT (('v<s\') IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE ('v<s\');
SELECT * FROM v0 WHERE (CAST(v0.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c2 AS TEXT)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c2 AS TEXT)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c2 AS TEXT));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((1.244265969E9)|((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((1.244265969E9)|((~ (v0.c0))))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((1.244265969E9)|((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((1.244265969E9)|((~ (v0.c0))))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((1.244265969E9)|((~ (v0.c0)))));
SELECT * FROM v0, t0, vt0 WHERE (CAST((((vt0.c0))>=((vt0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))>=((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (CAST((((vt0.c0))>=((vt0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))>=((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (CAST((((vt0.c0))>=((vt0.c0))) AS NUMERIC));
SELECT * FROM vt0, v0, t0 WHERE (UPPER(0.8847011248968453)) ORDER BY CAST('' AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((UPPER(0.8847011248968453)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY CAST('' AS INTEGER));
SELECT * FROM vt0, v0, t0 WHERE (UPPER(0.8847011248968453)) ORDER BY CAST('' AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((UPPER(0.8847011248968453)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY CAST('' AS INTEGER));
SELECT * FROM vt0, v0, t0 WHERE (UPPER(0.8847011248968453)) ORDER BY CAST('' AS INTEGER);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((((((t0.c13)AND(t0.c86)))OR(vt0.c0)))OR(t0.c86)))OR(t0.c32)) IN (CASE t0.c13  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c32 WHEN vt0.c0 THEN t0.c32 WHEN t0.c13 THEN vt0.c0 ELSE t0.c13 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c13)AND(t0.c86)))OR(vt0.c0)))OR(t0.c86)))OR(t0.c32)) IN (CASE t0.c13  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c32 WHEN vt0.c0 THEN t0.c32 WHEN t0.c13 THEN vt0.c0 ELSE t0.c13 END))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((((((t0.c13)AND(t0.c86)))OR(vt0.c0)))OR(t0.c86)))OR(t0.c32)) IN (CASE t0.c13  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c32 WHEN vt0.c0 THEN t0.c32 WHEN t0.c13 THEN vt0.c0 ELSE t0.c13 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c13)AND(t0.c86)))OR(vt0.c0)))OR(t0.c86)))OR(t0.c32)) IN (CASE t0.c13  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c32 WHEN vt0.c0 THEN t0.c32 WHEN t0.c13 THEN vt0.c0 ELSE t0.c13 END))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((((((t0.c13)AND(t0.c86)))OR(vt0.c0)))OR(t0.c86)))OR(t0.c32)) IN (CASE t0.c13  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c32 WHEN vt0.c0 THEN t0.c32 WHEN t0.c13 THEN vt0.c0 ELSE t0.c13 END)));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (- (CAST(t0.c86 AS BLOB))) FULL OUTER JOIN v0 ON v0.c0 WHERE (((((v0.c1)*(v0.c2)))/(((((((((v0.c1)OR(t0.c13)))AND(v0.c2)))AND(NULL)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)*(v0.c2)))/(((((((((v0.c1)OR(t0.c13)))AND(v0.c2)))AND(NULL)))AND(vt0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (- (CAST(t0.c86 AS BLOB))) FULL OUTER JOIN v0 ON v0.c0);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (- (CAST(t0.c86 AS BLOB))) FULL OUTER JOIN v0 ON v0.c0 WHERE (((((v0.c1)*(v0.c2)))/(((((((((v0.c1)OR(t0.c13)))AND(v0.c2)))AND(NULL)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)*(v0.c2)))/(((((((((v0.c1)OR(t0.c13)))AND(v0.c2)))AND(NULL)))AND(vt0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (- (CAST(t0.c86 AS BLOB))) FULL OUTER JOIN v0 ON v0.c0);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (- (CAST(t0.c86 AS BLOB))) FULL OUTER JOIN v0 ON v0.c0 WHERE (((((v0.c1)*(v0.c2)))/(((((((((v0.c1)OR(t0.c13)))AND(v0.c2)))AND(NULL)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0 LEFT OUTER JOIN t0 ON (- (CAST(v0.c2 AS BLOB))) WHERE ('aᱦj戀N');
SELECT SUM(count) FROM (SELECT (('aᱦj戀N') IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN t0 ON (- (CAST(v0.c2 AS BLOB))));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0 LEFT OUTER JOIN t0 ON (- (CAST(v0.c2 AS BLOB))) WHERE ('aᱦj戀N');
SELECT SUM(count) FROM (SELECT (('aᱦj戀N') IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN t0 ON (- (CAST(v0.c2 AS BLOB))));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0 LEFT OUTER JOIN t0 ON (- (CAST(v0.c2 AS BLOB))) WHERE ('aᱦj戀N');
SELECT ALL * FROM v0, t0 WHERE ((((((x'de6df0f5', v0.c2, v0.c1))>=((t0.c32, t0.c13, t0.c86)))) BETWEEN ((- (v0.c2))) AND (((v0.c0)IS NOT(NULL)))));
SELECT SUM(count) FROM (SELECT (((((((x'de6df0f5', v0.c2, v0.c1))>=((t0.c32, t0.c13, t0.c86)))) BETWEEN ((- (v0.c2))) AND (((v0.c0)IS NOT(NULL))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((((x'de6df0f5', v0.c2, v0.c1))>=((t0.c32, t0.c13, t0.c86)))) BETWEEN ((- (v0.c2))) AND (((v0.c0)IS NOT(NULL)))));
SELECT SUM(count) FROM (SELECT (((((((x'de6df0f5', v0.c2, v0.c1))>=((t0.c32, t0.c13, t0.c86)))) BETWEEN ((- (v0.c2))) AND (((v0.c0)IS NOT(NULL))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((((x'de6df0f5', v0.c2, v0.c1))>=((t0.c32, t0.c13, t0.c86)))) BETWEEN ((- (v0.c2))) AND (((v0.c0)IS NOT(NULL)))));
SELECT * FROM t0, v0 RIGHT OUTER JOIN vt0 ON '1085640565' COLLATE NOCASE WHERE (((CASE WHEN t0.c32 THEN t0.c13 END)%(CASE v0.c1  WHEN t0.c32 THEN t0.c13 WHEN t0.c86 THEN x'f8da' WHEN v0.c1 THEN NULL WHEN t0.c13 THEN v0.c2 WHEN t0.c13 THEN t0.c86 END))) ORDER BY CAST((v0.c1 IN ()) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c32 THEN t0.c13 END)%(CASE v0.c1  WHEN t0.c32 THEN t0.c13 WHEN t0.c86 THEN x'f8da' WHEN v0.c1 THEN NULL WHEN t0.c13 THEN v0.c2 WHEN t0.c13 THEN t0.c86 END))) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON '1085640565' COLLATE NOCASE ORDER BY CAST((v0.c1 IN ()) AS TEXT) DESC);
SELECT * FROM t0, v0 RIGHT OUTER JOIN vt0 ON '1085640565' COLLATE NOCASE WHERE (((CASE WHEN t0.c32 THEN t0.c13 END)%(CASE v0.c1  WHEN t0.c32 THEN t0.c13 WHEN t0.c86 THEN x'f8da' WHEN v0.c1 THEN NULL WHEN t0.c13 THEN v0.c2 WHEN t0.c13 THEN t0.c86 END))) ORDER BY CAST((v0.c1 IN ()) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c32 THEN t0.c13 END)%(CASE v0.c1  WHEN t0.c32 THEN t0.c13 WHEN t0.c86 THEN x'f8da' WHEN v0.c1 THEN NULL WHEN t0.c13 THEN v0.c2 WHEN t0.c13 THEN t0.c86 END))) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON '1085640565' COLLATE NOCASE ORDER BY CAST((v0.c1 IN ()) AS TEXT) DESC);
SELECT * FROM t0, v0 RIGHT OUTER JOIN vt0 ON '1085640565' COLLATE NOCASE WHERE (((CASE WHEN t0.c32 THEN t0.c13 END)%(CASE v0.c1  WHEN t0.c32 THEN t0.c13 WHEN t0.c86 THEN x'f8da' WHEN v0.c1 THEN NULL WHEN t0.c13 THEN v0.c2 WHEN t0.c13 THEN t0.c86 END))) ORDER BY CAST((v0.c1 IN ()) AS TEXT) DESC;
SELECT * FROM vt0, t0 WHERE (CAST(((t0.c32)==(t0.c13)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c32)==(t0.c13)) AS TEXT)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST(((t0.c32)==(t0.c13)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c32)==(t0.c13)) AS TEXT)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST(((t0.c32)==(t0.c13)) AS TEXT));
SELECT ALL * FROM vt0, v0, t0 WHERE (((((CAST(t0.c86 AS TEXT))OR(TRIM(DISTINCT v0.c1, t0.c32))))OR((v0.c1 IN ())))) ORDER BY (((((((-8.24209144E8, v0.c1, t0.c86)) NOT BETWEEN ((v0.c1, v0.c2, v0.c1)) AND ((v0.c0, t0.c86, v0.c2))))AND(((v0.c2) NOTNULL))))OR(((t0.c86)<>(t0.c86)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c86 AS TEXT))OR(TRIM(DISTINCT v0.c1, t0.c32))))OR((v0.c1 IN ())))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((((((-8.24209144E8, v0.c1, t0.c86)) NOT BETWEEN ((v0.c1, v0.c2, v0.c1)) AND ((v0.c0, t0.c86, v0.c2))))AND(((v0.c2) NOTNULL))))OR(((t0.c86)!=(t0.c86)))) ASC);
SELECT ALL * FROM vt0, v0, t0 WHERE (((((CAST(t0.c86 AS TEXT))OR(TRIM(DISTINCT v0.c1, t0.c32))))OR((v0.c1 IN ())))) ORDER BY (((((((-8.24209144E8, v0.c1, t0.c86)) NOT BETWEEN ((v0.c1, v0.c2, v0.c1)) AND ((v0.c0, t0.c86, v0.c2))))AND(((v0.c2) NOTNULL))))OR(((t0.c86)<>(t0.c86)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c86 AS TEXT))OR(TRIM(DISTINCT v0.c1, t0.c32))))OR((v0.c1 IN ())))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((((((-8.24209144E8, v0.c1, t0.c86)) NOT BETWEEN ((v0.c1, v0.c2, v0.c1)) AND ((v0.c0, t0.c86, v0.c2))))AND(((v0.c2) NOTNULL))))OR(((t0.c86)!=(t0.c86)))) ASC);
SELECT ALL * FROM vt0, v0, t0 WHERE (((((CAST(t0.c86 AS TEXT))OR(TRIM(DISTINCT v0.c1, t0.c32))))OR((v0.c1 IN ())))) ORDER BY (((((((-8.24209144E8, v0.c1, t0.c86)) NOT BETWEEN ((v0.c1, v0.c2, v0.c1)) AND ((v0.c0, t0.c86, v0.c2))))AND(((v0.c2) NOTNULL))))OR(((t0.c86)<>(t0.c86)))) ASC;
SELECT * FROM t0 WHERE (CAST(CASE WHEN t0.c86 THEN t0.c32 WHEN t0.c32 THEN t0.c32 WHEN t0.c32 THEN t0.c86 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c86 THEN t0.c32 WHEN t0.c32 THEN t0.c32 WHEN t0.c32 THEN t0.c86 END AS BLOB)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(CASE WHEN t0.c86 THEN t0.c32 WHEN t0.c32 THEN t0.c32 WHEN t0.c32 THEN t0.c86 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c86 THEN t0.c32 WHEN t0.c32 THEN t0.c32 WHEN t0.c32 THEN t0.c86 END AS BLOB)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(CASE WHEN t0.c86 THEN t0.c32 WHEN t0.c32 THEN t0.c32 WHEN t0.c32 THEN t0.c86 END AS BLOB));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (t0.c32 COLLATE NOCASE) ORDER BY ((((v0.c0)OR(v0.c2)))OR(t0.c86)) COLLATE BINARY DESC  NULLS FIRST, (((v0.c1, t0.c13, t0.c13))<>((v0.c0, v0.c1, v0.c0))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c32 COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((v0.c0)OR(v0.c2)))OR(t0.c86)) COLLATE BINARY DESC  NULLS FIRST, (((v0.c1, t0.c13, t0.c13))!=((v0.c0, v0.c1, v0.c0))) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (t0.c32 COLLATE NOCASE) ORDER BY ((((v0.c0)OR(v0.c2)))OR(t0.c86)) COLLATE BINARY DESC  NULLS FIRST, (((v0.c1, t0.c13, t0.c13))<>((v0.c0, v0.c1, v0.c0))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c32 COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((v0.c0)OR(v0.c2)))OR(t0.c86)) COLLATE BINARY DESC  NULLS FIRST, (((v0.c1, t0.c13, t0.c13))!=((v0.c0, v0.c1, v0.c0))) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (t0.c32 COLLATE NOCASE) ORDER BY ((((v0.c0)OR(v0.c2)))OR(t0.c86)) COLLATE BINARY DESC  NULLS FIRST, (((v0.c1, t0.c13, t0.c13))<>((v0.c0, v0.c1, v0.c0))) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (TRIM(DISTINCT t0.c32, t0.c86) COLLATE NOCASE) ORDER BY (((NOT (v0.c1))) NOT BETWEEN (((v0.c1) BETWEEN (v0.c0) AND (v0.c0))) AND ((~ (t0.c86)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT t0.c32, t0.c86) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((NOT (v0.c1))) NOT BETWEEN (((v0.c1) BETWEEN (v0.c0) AND (v0.c0))) AND ((~ (t0.c86)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (TRIM(DISTINCT t0.c32, t0.c86) COLLATE NOCASE) ORDER BY (((NOT (v0.c1))) NOT BETWEEN (((v0.c1) BETWEEN (v0.c0) AND (v0.c0))) AND ((~ (t0.c86)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT t0.c32, t0.c86) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((NOT (v0.c1))) NOT BETWEEN (((v0.c1) BETWEEN (v0.c0) AND (v0.c0))) AND ((~ (t0.c86)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (TRIM(DISTINCT t0.c32, t0.c86) COLLATE NOCASE) ORDER BY (((NOT (v0.c1))) NOT BETWEEN (((v0.c1) BETWEEN (v0.c0) AND (v0.c0))) AND ((~ (t0.c86)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((+ (((((t0.c32)AND(t0.c32)))AND(t0.c13))))) ORDER BY ((((0.10627518787987922) NOT NULL))GLOB((t0.c32 IN ())))  NULLS LAST, ((((t0.c86) NOT BETWEEN (t0.c86) AND (t0.c13)))/(((t0.c86) NOT BETWEEN (t0.c32) AND (t0.c86))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((((t0.c32)AND(t0.c32)))AND(t0.c13))))) IS TRUE)  as count FROM t0 ORDER BY ((((0.10627518787987922) NOT NULL))GLOB((t0.c32 IN ())))  NULLS LAST, ((((t0.c86) NOT BETWEEN (t0.c86) AND (t0.c13)))/(((t0.c86) NOT BETWEEN (t0.c32) AND (t0.c86))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((+ (((((t0.c32)AND(t0.c32)))AND(t0.c13))))) ORDER BY ((((0.10627518787987922) NOT NULL))GLOB((t0.c32 IN ())))  NULLS LAST, ((((t0.c86) NOT BETWEEN (t0.c86) AND (t0.c13)))/(((t0.c86) NOT BETWEEN (t0.c32) AND (t0.c86))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((((t0.c32)AND(t0.c32)))AND(t0.c13))))) IS TRUE)  as count FROM t0 ORDER BY ((((0.10627518787987922) NOT NULL))GLOB((t0.c32 IN ())))  NULLS LAST, ((((t0.c86) NOT BETWEEN (t0.c86) AND (t0.c13)))/(((t0.c86) NOT BETWEEN (t0.c32) AND (t0.c86))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((+ (((((t0.c32)AND(t0.c32)))AND(t0.c13))))) ORDER BY ((((0.10627518787987922) NOT NULL))GLOB((t0.c32 IN ())))  NULLS LAST, ((((t0.c86) NOT BETWEEN (t0.c86) AND (t0.c13)))/(((t0.c86) NOT BETWEEN (t0.c32) AND (t0.c86))))  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (json_remove((((',DU', t0.c86, t0.c32))==((t0.c86, t0.c13, t0.c13))), t0.c13 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((json_remove((((',DU', t0.c86, t0.c32))=((t0.c86, t0.c13, t0.c13))), t0.c13 COLLATE BINARY)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (json_remove((((',DU', t0.c86, t0.c32))==((t0.c86, t0.c13, t0.c13))), t0.c13 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((json_remove((((',DU', t0.c86, t0.c32))=((t0.c86, t0.c13, t0.c13))), t0.c13 COLLATE BINARY)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM vt0, v0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT ALL * FROM v0 WHERE (((v0.c2)<(v0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2)<(v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c2)<(v0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2)<(v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c2)<(v0.c1)) COLLATE NOCASE);
SELECT * FROM t0 WHERE (((((((((((((((t0.c13)OR(t0.c32)))AND(t0.c86)))OR(t0.c32)))AND(t0.c13)))AND(t0.c32)))AND(t0.c86)))+((t0.c86 IN ())))) ORDER BY ((t0.c86) IS TRUE) COLLATE BINARY  NULLS FIRST, x'' COLLATE BINARY, CAST(CAST(t0.c86 AS BLOB) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c13)OR(t0.c32)))AND(t0.c86)))OR(t0.c32)))AND(t0.c13)))AND(t0.c32)))AND(t0.c86)))+((t0.c86 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c86) IS TRUE) COLLATE BINARY  NULLS FIRST, x'' COLLATE BINARY, CAST(CAST(t0.c86 AS BLOB) AS INTEGER) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((((((((((((((t0.c13)OR(t0.c32)))AND(t0.c86)))OR(t0.c32)))AND(t0.c13)))AND(t0.c32)))AND(t0.c86)))+((t0.c86 IN ())))) ORDER BY ((t0.c86) IS TRUE) COLLATE BINARY  NULLS FIRST, x'' COLLATE BINARY, CAST(CAST(t0.c86 AS BLOB) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c13)OR(t0.c32)))AND(t0.c86)))OR(t0.c32)))AND(t0.c13)))AND(t0.c32)))AND(t0.c86)))+((t0.c86 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c86) IS TRUE) COLLATE BINARY  NULLS FIRST, x'' COLLATE BINARY, CAST(CAST(t0.c86 AS BLOB) AS INTEGER) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((((((((((((((t0.c13)OR(t0.c32)))AND(t0.c86)))OR(t0.c32)))AND(t0.c13)))AND(t0.c32)))AND(t0.c86)))+((t0.c86 IN ())))) ORDER BY ((t0.c86) IS TRUE) COLLATE BINARY  NULLS FIRST, x'' COLLATE BINARY, CAST(CAST(t0.c86 AS BLOB) AS INTEGER) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)) ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)GLOB(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)GLOB(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)) ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)GLOB(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)GLOB(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)) ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)GLOB(vt0.c0))));
SELECT * FROM v0 FULL OUTER JOIN t0 ON LOWER(DISTINCT vt0.c0) RIGHT OUTER JOIN vt0 ON v0.c0 WHERE ((v0.c2 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON LOWER(DISTINCT vt0.c0) RIGHT OUTER JOIN vt0 ON v0.c0);
SELECT * FROM v0 FULL OUTER JOIN t0 ON LOWER(DISTINCT vt0.c0) RIGHT OUTER JOIN vt0 ON v0.c0 WHERE ((v0.c2 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON LOWER(DISTINCT vt0.c0) RIGHT OUTER JOIN vt0 ON v0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((vt0.c0 IN ())))) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((vt0.c0 IN ())))) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((vt0.c0 IN ())))) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (json_valid(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((json_valid(vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (json_valid(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((json_valid(vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (json_valid(vt0.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM t0 WHERE (HEX(((t0.c13) BETWEEN (t0.c13) AND (t0.c13)))) ORDER BY IFNULL(((t0.c13)<(t0.c86)), ((x'') IS TRUE)) DESC;
SELECT SUM(count) FROM (SELECT ((HEX(((t0.c13) BETWEEN (t0.c13) AND (t0.c13)))) IS TRUE)  as count FROM t0 ORDER BY IFNULL(((t0.c13)<(t0.c86)), ((x'') IS TRUE)) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (HEX(((t0.c13) BETWEEN (t0.c13) AND (t0.c13)))) ORDER BY IFNULL(((t0.c13)<(t0.c86)), ((x'') IS TRUE)) DESC;
SELECT SUM(count) FROM (SELECT ((HEX(((t0.c13) BETWEEN (t0.c13) AND (t0.c13)))) IS TRUE)  as count FROM t0 ORDER BY IFNULL(((t0.c13)<(t0.c86)), ((x'') IS TRUE)) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (HEX(((t0.c13) BETWEEN (t0.c13) AND (t0.c13)))) ORDER BY IFNULL(((t0.c13)<(t0.c86)), ((x'') IS TRUE)) DESC;
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN v0 ON ((((((v0.c0)IS(t0.c32)))OR(CASE t0.c86  WHEN t0.c86 THEN v0.c0 END)))OR(((t0.c32) BETWEEN (v0.c1) AND (v0.c2)))) WHERE (CASE NULL  WHEN t0.c32 COLLATE BINARY THEN v0.c0 COLLATE RTRIM ELSE (((v0.c2))<>((v0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN t0.c32 COLLATE BINARY THEN v0.c0 COLLATE RTRIM ELSE (((v0.c2))<>((v0.c2))) END) IS TRUE)  as count FROM vt0, t0 INNER JOIN v0 ON ((((((v0.c0)IS(t0.c32)))OR(CASE t0.c86  WHEN t0.c86 THEN v0.c0 END)))OR(((t0.c32) BETWEEN (v0.c1) AND (v0.c2)))));
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN v0 ON ((((((v0.c0)IS(t0.c32)))OR(CASE t0.c86  WHEN t0.c86 THEN v0.c0 END)))OR(((t0.c32) BETWEEN (v0.c1) AND (v0.c2)))) WHERE (CASE NULL  WHEN t0.c32 COLLATE BINARY THEN v0.c0 COLLATE RTRIM ELSE (((v0.c2))<>((v0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN t0.c32 COLLATE BINARY THEN v0.c0 COLLATE RTRIM ELSE (((v0.c2))<>((v0.c2))) END) IS TRUE)  as count FROM vt0, t0 INNER JOIN v0 ON ((((((v0.c0)IS(t0.c32)))OR(CASE t0.c86  WHEN t0.c86 THEN v0.c0 END)))OR(((t0.c32) BETWEEN (v0.c1) AND (v0.c2)))));
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN v0 ON ((((((v0.c0)IS(t0.c32)))OR(CASE t0.c86  WHEN t0.c86 THEN v0.c0 END)))OR(((t0.c32) BETWEEN (v0.c1) AND (v0.c2)))) WHERE (CASE NULL  WHEN t0.c32 COLLATE BINARY THEN v0.c0 COLLATE RTRIM ELSE (((v0.c2))<>((v0.c2))) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULLIF(vt0.c0, 0xffffffffde598e3d)) BETWEEN (vt0.c0) AND (vt0.c0))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(vt0.c0, 0Xffffffffde598e3d)) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULLIF(vt0.c0, 0xffffffffde598e3d)) BETWEEN (vt0.c0) AND (vt0.c0))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(vt0.c0, 0Xffffffffde598e3d)) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULLIF(vt0.c0, 0xffffffffde598e3d)) BETWEEN (vt0.c0) AND (vt0.c0))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((- (LOWER(t0.c13)))) ORDER BY (((NOT (''))) BETWEEN (NULL) AND (((t0.c13) IS FALSE)))  NULLS LAST, (((t0.c13)) NOT BETWEEN ((((t0.c32) ISNULL))) AND ((t0.c86 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (LOWER(t0.c13)))) IS TRUE)  as count FROM t0 ORDER BY (((NOT (''))) BETWEEN (NULL) AND (((t0.c13) IS FALSE)))  NULLS LAST, (((t0.c13)) NOT BETWEEN ((((t0.c32) ISNULL))) AND ((t0.c86 COLLATE BINARY)))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((- (LOWER(t0.c13)))) ORDER BY (((NOT (''))) BETWEEN (NULL) AND (((t0.c13) IS FALSE)))  NULLS LAST, (((t0.c13)) NOT BETWEEN ((((t0.c32) ISNULL))) AND ((t0.c86 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (LOWER(t0.c13)))) IS TRUE)  as count FROM t0 ORDER BY (((NOT (''))) BETWEEN (NULL) AND (((t0.c13) IS FALSE)))  NULLS LAST, (((t0.c13)) NOT BETWEEN ((((t0.c32) ISNULL))) AND ((t0.c86 COLLATE BINARY)))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((- (LOWER(t0.c13)))) ORDER BY (((NOT (''))) BETWEEN (NULL) AND (((t0.c13) IS FALSE)))  NULLS LAST, (((t0.c13)) NOT BETWEEN ((((t0.c32) ISNULL))) AND ((t0.c86 COLLATE BINARY)))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c1);
SELECT COUNT(*) FROM v0, vt0 WHERE (JULIANDAY(CAST(vt0.c0 AS BLOB), CAST(v0.c0 AS REAL), (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(CAST(vt0.c0 AS BLOB), CAST(v0.c0 AS REAL), (vt0.c0 IN ()))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (JULIANDAY(CAST(vt0.c0 AS BLOB), CAST(v0.c0 AS REAL), (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(CAST(vt0.c0 AS BLOB), CAST(v0.c0 AS REAL), (vt0.c0 IN ()))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (JULIANDAY(CAST(vt0.c0 AS BLOB), CAST(v0.c0 AS REAL), (vt0.c0 IN ())));
SELECT * FROM t0 WHERE ((~ (t0.c13 COLLATE BINARY))) ORDER BY ABS(0.3082112028901566 COLLATE BINARY), ((((t0.c13)AND(t0.c13 COLLATE BINARY)))AND(CAST(t0.c86 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c13 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY ABS(0.3082112028901566 COLLATE BINARY), ((((t0.c13)AND(t0.c13 COLLATE BINARY)))AND(CAST(t0.c86 AS REAL))));
SELECT * FROM t0 WHERE ((~ (t0.c13 COLLATE BINARY))) ORDER BY ABS(0.3082112028901566 COLLATE BINARY), ((((t0.c13)AND(t0.c13 COLLATE BINARY)))AND(CAST(t0.c86 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c13 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY ABS(0.3082112028901566 COLLATE BINARY), ((((t0.c13)AND(t0.c13 COLLATE BINARY)))AND(CAST(t0.c86 AS REAL))));
SELECT * FROM t0 WHERE ((~ (t0.c13 COLLATE BINARY))) ORDER BY ABS(0.3082112028901566 COLLATE BINARY), ((((t0.c13)AND(t0.c13 COLLATE BINARY)))AND(CAST(t0.c86 AS REAL)));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c0) AND (v0.c2))) NOT BETWEEN (((v0.c0)<=(v0.c0))) AND (LIKELY(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) BETWEEN (v0.c0) AND (v0.c2))) NOT BETWEEN (((v0.c0)<=(v0.c0))) AND (LIKELY(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c0) AND (v0.c2))) NOT BETWEEN (((v0.c0)<=(v0.c0))) AND (LIKELY(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) BETWEEN (v0.c0) AND (v0.c2))) NOT BETWEEN (((v0.c0)<=(v0.c0))) AND (LIKELY(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c0) AND (v0.c2))) NOT BETWEEN (((v0.c0)<=(v0.c0))) AND (LIKELY(v0.c0))));
SELECT * FROM t0, vt0 WHERE (CASE (((vt0.c0, x'', vt0.c0))<=((t0.c32, t0.c32, x'36ae')))  WHEN t0.c86 COLLATE NOCASE THEN CAST(0.415546318431568 AS INTEGER) WHEN (((x'8350', t0.c32, vt0.c0))>=((t0.c32, t0.c32, t0.c32))) THEN (- (vt0.c0)) WHEN ((t0.c86) NOTNULL) THEN json_array_length(vt0.c0) ELSE (((t0.c86))<=((t0.c86))) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0, x'', vt0.c0))<=((t0.c32, t0.c32, x'36ae')))  WHEN t0.c86 COLLATE NOCASE THEN CAST(0.415546318431568 AS INTEGER) WHEN (((x'8350', t0.c32, vt0.c0))>=((t0.c32, t0.c32, t0.c32))) THEN (- (vt0.c0)) WHEN ((t0.c86) NOTNULL) THEN json_array_length(vt0.c0) ELSE (((t0.c86))<=((t0.c86))) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE (((vt0.c0, x'', vt0.c0))<=((t0.c32, t0.c32, x'36ae')))  WHEN t0.c86 COLLATE NOCASE THEN CAST(0.415546318431568 AS INTEGER) WHEN (((x'8350', t0.c32, vt0.c0))>=((t0.c32, t0.c32, t0.c32))) THEN (- (vt0.c0)) WHEN ((t0.c86) NOTNULL) THEN json_array_length(vt0.c0) ELSE (((t0.c86))<=((t0.c86))) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0, x'', vt0.c0))<=((t0.c32, t0.c32, x'36ae')))  WHEN t0.c86 COLLATE NOCASE THEN CAST(0.415546318431568 AS INTEGER) WHEN (((x'8350', t0.c32, vt0.c0))>=((t0.c32, t0.c32, t0.c32))) THEN (- (vt0.c0)) WHEN ((t0.c86) NOTNULL) THEN json_array_length(vt0.c0) ELSE (((t0.c86))<=((t0.c86))) END) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- ((((('-13812681')AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((('-13812681')AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- ((((('-13812681')AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((('-13812681')AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- ((((('-13812681')AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 FULL OUTER JOIN t0 ON ((CAST(v0.c1 AS NUMERIC))+(((t0.c86) IS FALSE))) WHERE ((~ (((v0.c0)!=(x'')))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0)<>(x''))))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN t0 ON ((CAST(v0.c1 AS NUMERIC))+(((t0.c86) IS FALSE))));
SELECT ALL COUNT(*) FROM v0, vt0 FULL OUTER JOIN t0 ON ((CAST(v0.c1 AS NUMERIC))+(((t0.c86) IS FALSE))) WHERE ((~ (((v0.c0)!=(x'')))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0)<>(x''))))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN t0 ON ((CAST(v0.c1 AS NUMERIC))+(((t0.c86) IS FALSE))));
SELECT ALL COUNT(*) FROM v0, vt0 FULL OUTER JOIN t0 ON ((CAST(v0.c1 AS NUMERIC))+(((t0.c86) IS FALSE))) WHERE ((~ (((v0.c0)!=(x'')))));
SELECT ALL * FROM v0, t0 WHERE ((((v0.c1)) BETWEEN ((UNLIKELY(DISTINCT v0.c1))) AND ((((t0.c13) NOT BETWEEN (t0.c32) AND (v0.c0)))))) ORDER BY CASE CAST(t0.c86 AS REAL)  WHEN ((v0.c0) IS TRUE) THEN (t0.c32 IN ()) ELSE (((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c1))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) BETWEEN ((UNLIKELY(DISTINCT v0.c1))) AND ((((t0.c13) NOT BETWEEN (t0.c32) AND (v0.c0)))))) IS TRUE)  as count FROM v0, t0 ORDER BY CASE CAST(t0.c86 AS REAL)  WHEN ((v0.c0) IS TRUE) THEN (t0.c32 IN ()) ELSE (((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c1))) END DESC  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE ((((v0.c1)) BETWEEN ((UNLIKELY(DISTINCT v0.c1))) AND ((((t0.c13) NOT BETWEEN (t0.c32) AND (v0.c0)))))) ORDER BY CASE CAST(t0.c86 AS REAL)  WHEN ((v0.c0) IS TRUE) THEN (t0.c32 IN ()) ELSE (((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c1))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) BETWEEN ((UNLIKELY(DISTINCT v0.c1))) AND ((((t0.c13) NOT BETWEEN (t0.c32) AND (v0.c0)))))) IS TRUE)  as count FROM v0, t0 ORDER BY CASE CAST(t0.c86 AS REAL)  WHEN ((v0.c0) IS TRUE) THEN (t0.c32 IN ()) ELSE (((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c1))) END DESC  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE ((((v0.c1)) BETWEEN ((UNLIKELY(DISTINCT v0.c1))) AND ((((t0.c13) NOT BETWEEN (t0.c32) AND (v0.c0)))))) ORDER BY CASE CAST(t0.c86 AS REAL)  WHEN ((v0.c0) IS TRUE) THEN (t0.c32 IN ()) ELSE (((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c1))) END DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c2);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((CASE v0.c1  WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c1  WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((CASE v0.c1  WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c1  WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((CASE v0.c1  WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END) IS FALSE));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((t0.c32 IN ()) IN ()) WHERE (((CAST(t0.c86 AS BLOB)) NOT BETWEEN (((t0.c32)IS(t0.c32))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c32)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c86 AS BLOB)) NOT BETWEEN (((t0.c32)IS(t0.c32))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c32))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((t0.c32 IN ()) IN ()));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((t0.c32 IN ()) IN ()) WHERE (((CAST(t0.c86 AS BLOB)) NOT BETWEEN (((t0.c32)IS(t0.c32))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c32)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c86 AS BLOB)) NOT BETWEEN (((t0.c32)IS(t0.c32))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c32))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((t0.c32 IN ()) IN ()));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((t0.c32 IN ()) IN ()) WHERE (((CAST(t0.c86 AS BLOB)) NOT BETWEEN (((t0.c32)IS(t0.c32))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c32)))));
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0)OR(vt0.c0))) AND (vt0.c0 COLLATE RTRIM))) ORDER BY (((((vt0.c0))>=((vt0.c0))))/(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0)OR(vt0.c0))) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))>=((vt0.c0))))/(vt0.c0)) DESC);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0)OR(vt0.c0))) AND (vt0.c0 COLLATE RTRIM))) ORDER BY (((((vt0.c0))>=((vt0.c0))))/(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0)OR(vt0.c0))) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))>=((vt0.c0))))/(vt0.c0)) DESC);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0)OR(vt0.c0))) AND (vt0.c0 COLLATE RTRIM))) ORDER BY (((((vt0.c0))>=((vt0.c0))))/(vt0.c0)) DESC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0)IS NOT(vt0.c0)))))AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0)IS NOT(vt0.c0)))))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0)IS NOT(vt0.c0)))))AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0)IS NOT(vt0.c0)))))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0)IS NOT(vt0.c0)))))AND(vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY CASE WHEN CAST(t0.c13 AS TEXT) THEN t0.c13 COLLATE NOCASE ELSE ((((((((t0.c32)OR(t0.c86)))AND(t0.c13)))OR(-2.142873708E9)))OR('0.16691570191150318')) END  NULLS LAST, ((((t0.c86)|(t0.c86))) NOT BETWEEN (x'afe3cb85') AND (((t0.c32) BETWEEN (t0.c32) AND (t0.c86))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CAST(t0.c13 AS TEXT) THEN t0.c13 COLLATE NOCASE ELSE ((((((((t0.c32)OR(t0.c86)))AND(t0.c13)))OR(-2.142873708E9)))OR('0.16691570191150318')) END  NULLS LAST, ((((t0.c86)|(t0.c86))) NOT BETWEEN (x'afe3cb85') AND (((t0.c32) BETWEEN (t0.c32) AND (t0.c86)))));
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY CASE WHEN CAST(t0.c13 AS TEXT) THEN t0.c13 COLLATE NOCASE ELSE ((((((((t0.c32)OR(t0.c86)))AND(t0.c13)))OR(-2.142873708E9)))OR('0.16691570191150318')) END  NULLS LAST, ((((t0.c86)|(t0.c86))) NOT BETWEEN (x'afe3cb85') AND (((t0.c32) BETWEEN (t0.c32) AND (t0.c86))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CAST(t0.c13 AS TEXT) THEN t0.c13 COLLATE NOCASE ELSE ((((((((t0.c32)OR(t0.c86)))AND(t0.c13)))OR(-2.142873708E9)))OR('0.16691570191150318')) END  NULLS LAST, ((((t0.c86)|(t0.c86))) NOT BETWEEN (x'afe3cb85') AND (((t0.c32) BETWEEN (t0.c32) AND (t0.c86)))));
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY CASE WHEN CAST(t0.c13 AS TEXT) THEN t0.c13 COLLATE NOCASE ELSE ((((((((t0.c32)OR(t0.c86)))AND(t0.c13)))OR(-2.142873708E9)))OR('0.16691570191150318')) END  NULLS LAST, ((((t0.c86)|(t0.c86))) NOT BETWEEN (x'afe3cb85') AND (((t0.c32) BETWEEN (t0.c32) AND (t0.c86))));
SELECT ALL * FROM vt0, v0, t0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(0x73ada65))) BETWEEN (t0.c32 COLLATE BINARY) AND (v0.c1))) ORDER BY 0x6cdc4597;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(0x73ada65))) BETWEEN (t0.c32 COLLATE BINARY) AND (v0.c1))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY 0x6cdc4597);
SELECT ALL * FROM vt0, v0, t0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(0x73ada65))) BETWEEN (t0.c32 COLLATE BINARY) AND (v0.c1))) ORDER BY 0x6cdc4597;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(0x73ada65))) BETWEEN (t0.c32 COLLATE BINARY) AND (v0.c1))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY 0x6cdc4597);
SELECT ALL * FROM vt0 WHERE (((RTRIM(vt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((RTRIM(vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((RTRIM(vt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((RTRIM(vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((RTRIM(vt0.c0)) IS FALSE));
SELECT * FROM t0, vt0, v0 WHERE ((((vt0.c0, t0.c13, t0.c13)) BETWEEN (((~ (v0.c0)), (~ (vt0.c0)), (((vt0.c0, t0.c86, 0.8712882516493531))<((t0.c13, v0.c0, vt0.c0))))) AND ((((t0.c86) IS FALSE), ((t0.c86) IS TRUE), MIN(v0.c0, t0.c32))))) ORDER BY (((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((t0.c13))))OR(((v0.c2)+(t0.c13)))))OR(v0.c1));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, t0.c13, t0.c13)) BETWEEN (((~ (v0.c0)), (~ (vt0.c0)), (((vt0.c0, t0.c86, 0.8712882516493531))<((t0.c13, v0.c0, vt0.c0))))) AND ((((t0.c86) IS FALSE), ((t0.c86) IS TRUE), MIN(v0.c0, t0.c32))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((t0.c13))))OR(((v0.c2)+(t0.c13)))))OR(v0.c1)));
SELECT * FROM t0, vt0, v0 WHERE ((((vt0.c0, t0.c13, t0.c13)) BETWEEN (((~ (v0.c0)), (~ (vt0.c0)), (((vt0.c0, t0.c86, 0.8712882516493531))<((t0.c13, v0.c0, vt0.c0))))) AND ((((t0.c86) IS FALSE), ((t0.c86) IS TRUE), MIN(v0.c0, t0.c32))))) ORDER BY (((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((t0.c13))))OR(((v0.c2)+(t0.c13)))))OR(v0.c1));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, t0.c13, t0.c13)) BETWEEN (((~ (v0.c0)), (~ (vt0.c0)), (((vt0.c0, t0.c86, 0.8712882516493531))<((t0.c13, v0.c0, vt0.c0))))) AND ((((t0.c86) IS FALSE), ((t0.c86) IS TRUE), MIN(v0.c0, t0.c32))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((t0.c13))))OR(((v0.c2)+(t0.c13)))))OR(v0.c1)));
SELECT * FROM t0, vt0, v0 WHERE ((((vt0.c0, t0.c13, t0.c13)) BETWEEN (((~ (v0.c0)), (~ (vt0.c0)), (((vt0.c0, t0.c86, 0.8712882516493531))<((t0.c13, v0.c0, vt0.c0))))) AND ((((t0.c86) IS FALSE), ((t0.c86) IS TRUE), MIN(v0.c0, t0.c32))))) ORDER BY (((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((t0.c13))))OR(((v0.c2)+(t0.c13)))))OR(v0.c1));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c13 AS TEXT)) BETWEEN (((t0.c13)%(t0.c13))) AND ((NOT (t0.c86))))) ORDER BY CAST(CASE WHEN t0.c86 THEN t0.c13 WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN t0.c32 END AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c13 AS TEXT)) BETWEEN (((t0.c13)%(t0.c13))) AND ((NOT (t0.c86))))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE WHEN t0.c86 THEN t0.c13 WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN t0.c32 END AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c13 AS TEXT)) BETWEEN (((t0.c13)%(t0.c13))) AND ((NOT (t0.c86))))) ORDER BY CAST(CASE WHEN t0.c86 THEN t0.c13 WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN t0.c32 END AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c13 AS TEXT)) BETWEEN (((t0.c13)%(t0.c13))) AND ((NOT (t0.c86))))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE WHEN t0.c86 THEN t0.c13 WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN t0.c32 END AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c13 AS TEXT)) BETWEEN (((t0.c13)%(t0.c13))) AND ((NOT (t0.c86))))) ORDER BY CAST(CASE WHEN t0.c86 THEN t0.c13 WHEN t0.c13 THEN t0.c13 WHEN t0.c13 THEN t0.c32 END AS REAL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c2)=(t0.c86))) IS FALSE) FULL OUTER JOIN t0 ON t0.c13 WHERE (t0.c86) ORDER BY (((CAST(v0.c1 AS NUMERIC)))<=(((v0.c2 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c86) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c2)==(t0.c86))) IS FALSE) FULL OUTER JOIN t0 ON t0.c13 ORDER BY (((CAST(v0.c1 AS NUMERIC)))<=(((v0.c2 IN ())))) DESC);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c2)=(t0.c86))) IS FALSE) FULL OUTER JOIN t0 ON t0.c13 WHERE (t0.c86) ORDER BY (((CAST(v0.c1 AS NUMERIC)))<=(((v0.c2 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c86) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c2)==(t0.c86))) IS FALSE) FULL OUTER JOIN t0 ON t0.c13 ORDER BY (((CAST(v0.c1 AS NUMERIC)))<=(((v0.c2 IN ())))) DESC);
SELECT ALL * FROM t0, vt0, v0 WHERE (t0.c13);
SELECT SUM(count) FROM (SELECT ((t0.c13) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE (t0.c13);
SELECT SUM(count) FROM (SELECT ((t0.c13) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE (t0.c13);
SELECT ALL * FROM t0, v0 LEFT OUTER JOIN vt0 ON ((v0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM WHERE (((((t0.c86)LIKE(v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c86)LIKE(v0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON ((v0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM t0, v0 LEFT OUTER JOIN vt0 ON ((v0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM WHERE (((((t0.c86)LIKE(v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c86)LIKE(v0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON ((v0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM t0, v0 LEFT OUTER JOIN vt0 ON ((v0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM WHERE (((((t0.c86)LIKE(v0.c0))) NOT NULL));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON t0.c86 FULL OUTER JOIN vt0 ON (((v0.c2)) BETWEEN ((((t0.c13) IS FALSE))) AND ((v0.c0))) WHERE (UPPER(DISTINCT (NOT (t0.c32))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (NOT (t0.c32)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON t0.c86 FULL OUTER JOIN vt0 ON (((v0.c2)) BETWEEN ((((t0.c13) IS FALSE))) AND ((v0.c0))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON t0.c86 FULL OUTER JOIN vt0 ON (((v0.c2)) BETWEEN ((((t0.c13) IS FALSE))) AND ((v0.c0))) WHERE (UPPER(DISTINCT (NOT (t0.c32))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (NOT (t0.c32)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON t0.c86 FULL OUTER JOIN vt0 ON (((v0.c2)) BETWEEN ((((t0.c13) IS FALSE))) AND ((v0.c0))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON t0.c86 FULL OUTER JOIN vt0 ON (((v0.c2)) BETWEEN ((((t0.c13) IS FALSE))) AND ((v0.c0))) WHERE (UPPER(DISTINCT (NOT (t0.c32))));
SELECT * FROM v0 WHERE ((~ (CAST(v0.c0 AS REAL)))) ORDER BY ((NULLIF(DISTINCT v0.c1, v0.c0)) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END) AND (CASE WHEN x'' THEN v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY ((NULLIF(DISTINCT v0.c1, v0.c0)) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END) AND (CASE WHEN x'' THEN v0.c0 END))  NULLS LAST);
SELECT * FROM v0 WHERE ((~ (CAST(v0.c0 AS REAL)))) ORDER BY ((NULLIF(DISTINCT v0.c1, v0.c0)) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END) AND (CASE WHEN x'' THEN v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY ((NULLIF(DISTINCT v0.c1, v0.c0)) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END) AND (CASE WHEN x'' THEN v0.c0 END))  NULLS LAST);
SELECT * FROM v0 WHERE ((~ (CAST(v0.c0 AS REAL)))) ORDER BY ((NULLIF(DISTINCT v0.c1, v0.c0)) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END) AND (CASE WHEN x'' THEN v0.c0 END))  NULLS LAST;
SELECT ALL * FROM t0, v0, vt0 WHERE (((v0.c0)|(t0.c86)) COLLATE NOCASE) ORDER BY (((((t0.c32))>((v0.c0)))) NOT BETWEEN (v0.c2) AND (((v0.c1)>(t0.c32))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)|(t0.c86)) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (((((t0.c32))>((v0.c0)))) NOT BETWEEN (v0.c2) AND (((v0.c1)>(t0.c32))))  NULLS LAST);
SELECT ALL * FROM t0, v0, vt0 WHERE (((v0.c0)|(t0.c86)) COLLATE NOCASE) ORDER BY (((((t0.c32))>((v0.c0)))) NOT BETWEEN (v0.c2) AND (((v0.c1)>(t0.c32))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)|(t0.c86)) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (((((t0.c32))>((v0.c0)))) NOT BETWEEN (v0.c2) AND (((v0.c1)>(t0.c32))))  NULLS LAST);
SELECT ALL * FROM t0, v0, vt0 WHERE (((v0.c0)|(t0.c86)) COLLATE NOCASE) ORDER BY (((((t0.c32))>((v0.c0)))) NOT BETWEEN (v0.c2) AND (((v0.c1)>(t0.c32))))  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (TRIM(DISTINCT vt0.c0)) AND (((t0.c32) IS TRUE)))) ORDER BY CAST((((('')OR(t0.c32)))OR(t0.c86)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) NOT BETWEEN (TRIM(DISTINCT vt0.c0)) AND (((t0.c32) IS TRUE)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((((('')OR(t0.c32)))OR(t0.c86)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (TRIM(DISTINCT vt0.c0)) AND (((t0.c32) IS TRUE)))) ORDER BY CAST((((('')OR(t0.c32)))OR(t0.c86)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) NOT BETWEEN (TRIM(DISTINCT vt0.c0)) AND (((t0.c32) IS TRUE)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((((('')OR(t0.c32)))OR(t0.c86)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (TRIM(DISTINCT vt0.c0)) AND (((t0.c32) IS TRUE)))) ORDER BY CAST((((('')OR(t0.c32)))OR(t0.c86)) AS INTEGER)  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c32, ((((((((((((t0.c86)AND(t0.c13)))OR(t0.c86)))AND(0.32587010416256723)))OR(t0.c32)))AND(0.33214700662592034)))AND(t0.c86)), ((t0.c86)<=(t0.c32))))>=((CAST(t0.c13 AS BLOB), (t0.c13 IN ()), t0.c32))));
SELECT SUM(count) FROM (SELECT (((((t0.c32, ((((((((((((t0.c86)AND(t0.c13)))OR(t0.c86)))AND(0.32587010416256723)))OR(t0.c32)))AND(0.33214700662592034)))AND(t0.c86)), ((t0.c86)<=(t0.c32))))>=((CAST(t0.c13 AS BLOB), (t0.c13 IN ()), t0.c32)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c32, ((((((((((((t0.c86)AND(t0.c13)))OR(t0.c86)))AND(0.32587010416256723)))OR(t0.c32)))AND(0.33214700662592034)))AND(t0.c86)), ((t0.c86)<=(t0.c32))))>=((CAST(t0.c13 AS BLOB), (t0.c13 IN ()), t0.c32))));
SELECT SUM(count) FROM (SELECT (((((t0.c32, ((((((((((((t0.c86)AND(t0.c13)))OR(t0.c86)))AND(0.32587010416256723)))OR(t0.c32)))AND(0.33214700662592034)))AND(t0.c86)), ((t0.c86)<=(t0.c32))))>=((CAST(t0.c13 AS BLOB), (t0.c13 IN ()), t0.c32)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c32, ((((((((((((t0.c86)AND(t0.c13)))OR(t0.c86)))AND(0.32587010416256723)))OR(t0.c32)))AND(0.33214700662592034)))AND(t0.c86)), ((t0.c86)<=(t0.c32))))>=((CAST(t0.c13 AS BLOB), (t0.c13 IN ()), t0.c32))));
SELECT * FROM t0, v0 FULL OUTER JOIN vt0 ON (~ (((v0.c1) NOTNULL))) WHERE ((~ (((v0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c1) IS FALSE)))) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN vt0 ON (~ (((v0.c1) NOTNULL))));
SELECT * FROM t0, v0 FULL OUTER JOIN vt0 ON (~ (((v0.c1) NOTNULL))) WHERE ((~ (((v0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c1) IS FALSE)))) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN vt0 ON (~ (((v0.c1) NOTNULL))));
SELECT * FROM t0, v0 FULL OUTER JOIN vt0 ON (~ (((v0.c1) NOTNULL))) WHERE ((~ (((v0.c1) IS FALSE))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((UPPER(vt0.c0))LIKE(((v0.c2) NOT BETWEEN (t0.c13) AND (v0.c1)))) INNER JOIN v0 ON '149356303' WHERE (((((t0.c13)<=(t0.c13)))%((v0.c2 IN (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c13)<=(t0.c13)))%((v0.c2 IN (NULL))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((UPPER(vt0.c0))LIKE(((v0.c2) NOT BETWEEN (t0.c13) AND (v0.c1)))) INNER JOIN v0 ON '149356303');
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((UPPER(vt0.c0))LIKE(((v0.c2) NOT BETWEEN (t0.c13) AND (v0.c1)))) INNER JOIN v0 ON '149356303' WHERE (((((t0.c13)<=(t0.c13)))%((v0.c2 IN (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c13)<=(t0.c13)))%((v0.c2 IN (NULL))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((UPPER(vt0.c0))LIKE(((v0.c2) NOT BETWEEN (t0.c13) AND (v0.c1)))) INNER JOIN v0 ON '149356303');
SELECT ALL * FROM t0, vt0, v0 WHERE (((CASE v0.c1  WHEN v0.c1 THEN vt0.c0 ELSE t0.c32 END)!=(((t0.c13)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c1  WHEN v0.c1 THEN vt0.c0 ELSE t0.c32 END)<>(((t0.c13)GLOB(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE (((CASE v0.c1  WHEN v0.c1 THEN vt0.c0 ELSE t0.c32 END)!=(((t0.c13)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c1  WHEN v0.c1 THEN vt0.c0 ELSE t0.c32 END)<>(((t0.c13)GLOB(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE (((CASE v0.c1  WHEN v0.c1 THEN vt0.c0 ELSE t0.c32 END)!=(((t0.c13)GLOB(vt0.c0)))));
SELECT * FROM v0, vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(v0.c0)) END);
SELECT ALL * FROM v0, vt0, t0 WHERE (CASE WHEN ((t0.c86)IS NOT(vt0.c0)) THEN ((t0.c86)+(t0.c32)) ELSE (v0.c2 IN ()) END) ORDER BY CASE ((v0.c0)!=('CEAzX'')'))  WHEN (- (t0.c13)) THEN ((v0.c2) NOT BETWEEN (v0.c2) AND (t0.c86)) ELSE (+ (v0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c86)IS NOT(vt0.c0)) THEN ((t0.c86)+(t0.c32)) ELSE (v0.c2 IN ()) END) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CASE ((v0.c0)<>('CEAzX'')'))  WHEN (- (t0.c13)) THEN ((v0.c2) NOT BETWEEN (v0.c2) AND (t0.c86)) ELSE (+ (v0.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0, t0 WHERE (CASE WHEN ((t0.c86)IS NOT(vt0.c0)) THEN ((t0.c86)+(t0.c32)) ELSE (v0.c2 IN ()) END) ORDER BY CASE ((v0.c0)!=('CEAzX'')'))  WHEN (- (t0.c13)) THEN ((v0.c2) NOT BETWEEN (v0.c2) AND (t0.c86)) ELSE (+ (v0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c86)IS NOT(vt0.c0)) THEN ((t0.c86)+(t0.c32)) ELSE (v0.c2 IN ()) END) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CASE ((v0.c0)<>('CEAzX'')'))  WHEN (- (t0.c13)) THEN ((v0.c2) NOT BETWEEN (v0.c2) AND (t0.c86)) ELSE (+ (v0.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0, t0 WHERE (CASE WHEN ((t0.c86)IS NOT(vt0.c0)) THEN ((t0.c86)+(t0.c32)) ELSE (v0.c2 IN ()) END) ORDER BY CASE ((v0.c0)!=('CEAzX'')'))  WHEN (- (t0.c13)) THEN ((v0.c2) NOT BETWEEN (v0.c2) AND (t0.c86)) ELSE (+ (v0.c0)) END ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE COLLATE NOCASE) ORDER BY (((vt0.c0 IN ()))OR(((vt0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))OR(((vt0.c0) ISNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE COLLATE NOCASE) ORDER BY (((vt0.c0 IN ()))OR(((vt0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))OR(((vt0.c0) ISNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE COLLATE NOCASE) ORDER BY (((vt0.c0 IN ()))OR(((vt0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((NULL IN ()))IS((vt0.c0 IN ())))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))IS((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL) DESC);
SELECT ALL * FROM vt0 WHERE ((((NULL IN ()))IS((vt0.c0 IN ())))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))IS((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL) DESC);
SELECT ALL * FROM vt0 WHERE ((((NULL IN ()))IS((vt0.c0 IN ())))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c86) NOT BETWEEN (t0.c32) AND (t0.c86)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c86) NOT BETWEEN (t0.c32) AND (t0.c86)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c86) NOT BETWEEN (t0.c32) AND (t0.c86)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c86) NOT BETWEEN (t0.c32) AND (t0.c86)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c86) NOT BETWEEN (t0.c32) AND (t0.c86)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN v0 ON ((((((((((v0.c2)||(0Xffffffffd8a7ae4e)))OR(((t0.c13)-(t0.c32)))))OR(CASE WHEN vt0.c0 THEN x'' WHEN t0.c13 THEN t0.c32 WHEN '' THEN v0.c1 END)))AND(((v0.c1)OR(t0.c32)))))OR(v0.c1)) WHERE (UPPER(DISTINCT t0.c32));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT t0.c32)) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN v0 ON ((((((((((v0.c2)||(0Xffffffffd8a7ae4e)))OR(((t0.c13)-(t0.c32)))))OR(CASE WHEN vt0.c0 THEN x'' WHEN t0.c13 THEN t0.c32 WHEN '' THEN v0.c1 END)))AND(((v0.c1)OR(t0.c32)))))OR(v0.c1)));
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN v0 ON ((((((((((v0.c2)||(0Xffffffffd8a7ae4e)))OR(((t0.c13)-(t0.c32)))))OR(CASE WHEN vt0.c0 THEN x'' WHEN t0.c13 THEN t0.c32 WHEN '' THEN v0.c1 END)))AND(((v0.c1)OR(t0.c32)))))OR(v0.c1)) WHERE (UPPER(DISTINCT t0.c32));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT t0.c32)) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN v0 ON ((((((((((v0.c2)||(0Xffffffffd8a7ae4e)))OR(((t0.c13)-(t0.c32)))))OR(CASE WHEN vt0.c0 THEN x'' WHEN t0.c13 THEN t0.c32 WHEN '' THEN v0.c1 END)))AND(((v0.c1)OR(t0.c32)))))OR(v0.c1)));
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN v0 ON ((((((((((v0.c2)||(0Xffffffffd8a7ae4e)))OR(((t0.c13)-(t0.c32)))))OR(CASE WHEN vt0.c0 THEN x'' WHEN t0.c13 THEN t0.c32 WHEN '' THEN v0.c1 END)))AND(((v0.c1)OR(t0.c32)))))OR(v0.c1)) WHERE (UPPER(DISTINCT t0.c32));
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN vt0.c0 THEN (+ (v0.c2)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END THEN vt0.c0 COLLATE BINARY WHEN ((v0.c0)GLOB('-1183387276')) THEN (- (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN (+ (v0.c2)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END THEN vt0.c0 COLLATE BINARY WHEN ((v0.c0)GLOB('-1183387276')) THEN (- (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN vt0.c0 THEN (+ (v0.c2)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END THEN vt0.c0 COLLATE BINARY WHEN ((v0.c0)GLOB('-1183387276')) THEN (- (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN (+ (v0.c2)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END THEN vt0.c0 COLLATE BINARY WHEN ((v0.c0)GLOB('-1183387276')) THEN (- (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN vt0.c0 THEN (+ (v0.c2)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END THEN vt0.c0 COLLATE BINARY WHEN ((v0.c0)GLOB('-1183387276')) THEN (- (vt0.c0)) END);
SELECT ALL * FROM v0 CROSS JOIN t0 ON NULL RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(t0.c86 AS NUMERIC) THEN v0.c0 COLLATE RTRIM WHEN LIKELIHOOD(DISTINCT v0.c2, 0.840490595234251) THEN ((v0.c1) IS TRUE) WHEN CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c32 THEN t0.c86 WHEN t0.c32 THEN v0.c1 ELSE v0.c0 END THEN (NOT (v0.c2)) ELSE ((v0.c0) NOT BETWEEN (v0.c2) AND (t0.c13)) END WHERE (CAST((+ (v0.c1)) AS INTEGER)) ORDER BY v0.c0, ((((((((t0.c32 COLLATE NOCASE)AND((NULL IN ()))))OR(((v0.c1) ISNULL))))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c1)) AS INTEGER)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON NULL RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(t0.c86 AS NUMERIC) THEN v0.c0 COLLATE RTRIM WHEN LIKELIHOOD(DISTINCT v0.c2, 0.840490595234251) THEN ((v0.c1) IS TRUE) WHEN CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c32 THEN t0.c86 WHEN t0.c32 THEN v0.c1 ELSE v0.c0 END THEN (NOT (v0.c2)) ELSE ((v0.c0) NOT BETWEEN (v0.c2) AND (t0.c13)) END ORDER BY v0.c0, ((((((((t0.c32 COLLATE NOCASE)AND((NULL IN ()))))OR(((v0.c1) ISNULL))))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM v0 CROSS JOIN t0 ON NULL RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(t0.c86 AS NUMERIC) THEN v0.c0 COLLATE RTRIM WHEN LIKELIHOOD(DISTINCT v0.c2, 0.840490595234251) THEN ((v0.c1) IS TRUE) WHEN CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c32 THEN t0.c86 WHEN t0.c32 THEN v0.c1 ELSE v0.c0 END THEN (NOT (v0.c2)) ELSE ((v0.c0) NOT BETWEEN (v0.c2) AND (t0.c13)) END WHERE (CAST((+ (v0.c1)) AS INTEGER)) ORDER BY v0.c0, ((((((((t0.c32 COLLATE NOCASE)AND((NULL IN ()))))OR(((v0.c1) ISNULL))))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c1)) AS INTEGER)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON NULL RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(t0.c86 AS NUMERIC) THEN v0.c0 COLLATE RTRIM WHEN LIKELIHOOD(DISTINCT v0.c2, 0.840490595234251) THEN ((v0.c1) IS TRUE) WHEN CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c32 THEN t0.c86 WHEN t0.c32 THEN v0.c1 ELSE v0.c0 END THEN (NOT (v0.c2)) ELSE ((v0.c0) NOT BETWEEN (v0.c2) AND (t0.c13)) END ORDER BY v0.c0, ((((((((t0.c32 COLLATE NOCASE)AND((NULL IN ()))))OR(((v0.c1) ISNULL))))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM v0 CROSS JOIN t0 ON NULL RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(t0.c86 AS NUMERIC) THEN v0.c0 COLLATE RTRIM WHEN LIKELIHOOD(DISTINCT v0.c2, 0.840490595234251) THEN ((v0.c1) IS TRUE) WHEN CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c32 THEN t0.c86 WHEN t0.c32 THEN v0.c1 ELSE v0.c0 END THEN (NOT (v0.c2)) ELSE ((v0.c0) NOT BETWEEN (v0.c2) AND (t0.c13)) END WHERE (CAST((+ (v0.c1)) AS INTEGER)) ORDER BY v0.c0, ((((((((t0.c32 COLLATE NOCASE)AND((NULL IN ()))))OR(((v0.c1) ISNULL))))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((((CAST(v0.c1 AS INTEGER), ((((((((v0.c1)AND(v0.c1)))AND(v0.c1)))AND(v0.c1)))AND(v0.c2)), ((v0.c2)*(v0.c0))))<((CASE WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END, ((v0.c2)-(v0.c0)), CAST(NULL AS TEXT))))) ORDER BY ((((((((v0.c2)OR(v0.c0)))OR(((v0.c2)&(x'e7dd')))))AND((((v0.c1, v0.c2, NULL))==(('-1976814658', v0.c0, v0.c2))))))AND(CAST(v0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c1 AS INTEGER), ((((((((v0.c1)AND(v0.c1)))AND(v0.c1)))AND(v0.c1)))AND(v0.c2)), ((v0.c2)*(v0.c0))))<((CASE WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END, ((v0.c2)-(v0.c0)), CAST(NULL AS TEXT))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c2)OR(v0.c0)))OR(((v0.c2)&(x'e7dd')))))AND((((v0.c1, v0.c2, NULL))=(('-1976814658', v0.c0, v0.c2))))))AND(CAST(v0.c0 AS TEXT))));
SELECT ALL * FROM v0 WHERE ((((CAST(v0.c1 AS INTEGER), ((((((((v0.c1)AND(v0.c1)))AND(v0.c1)))AND(v0.c1)))AND(v0.c2)), ((v0.c2)*(v0.c0))))<((CASE WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END, ((v0.c2)-(v0.c0)), CAST(NULL AS TEXT))))) ORDER BY ((((((((v0.c2)OR(v0.c0)))OR(((v0.c2)&(x'e7dd')))))AND((((v0.c1, v0.c2, NULL))==(('-1976814658', v0.c0, v0.c2))))))AND(CAST(v0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c1 AS INTEGER), ((((((((v0.c1)AND(v0.c1)))AND(v0.c1)))AND(v0.c1)))AND(v0.c2)), ((v0.c2)*(v0.c0))))<((CASE WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END, ((v0.c2)-(v0.c0)), CAST(NULL AS TEXT))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c2)OR(v0.c0)))OR(((v0.c2)&(x'e7dd')))))AND((((v0.c1, v0.c2, NULL))=(('-1976814658', v0.c0, v0.c2))))))AND(CAST(v0.c0 AS TEXT))));
SELECT ALL * FROM v0 WHERE ((((CAST(v0.c1 AS INTEGER), ((((((((v0.c1)AND(v0.c1)))AND(v0.c1)))AND(v0.c1)))AND(v0.c2)), ((v0.c2)*(v0.c0))))<((CASE WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END, ((v0.c2)-(v0.c0)), CAST(NULL AS TEXT))))) ORDER BY ((((((((v0.c2)OR(v0.c0)))OR(((v0.c2)&(x'e7dd')))))AND((((v0.c1, v0.c2, NULL))==(('-1976814658', v0.c0, v0.c2))))))AND(CAST(v0.c0 AS TEXT)));
SELECT ALL * FROM vt0 WHERE (LOWER(vt0.c0) COLLATE BINARY) ORDER BY (((vt0.c0 IN ()))==(vt0.c0 COLLATE NOCASE)), ((CAST(vt0.c0 AS BLOB)) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))==(vt0.c0 COLLATE NOCASE)), ((CAST(vt0.c0 AS BLOB)) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (LOWER(vt0.c0) COLLATE BINARY) ORDER BY (((vt0.c0 IN ()))==(vt0.c0 COLLATE NOCASE)), ((CAST(vt0.c0 AS BLOB)) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))==(vt0.c0 COLLATE NOCASE)), ((CAST(vt0.c0 AS BLOB)) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (LOWER(vt0.c0) COLLATE BINARY) ORDER BY (((vt0.c0 IN ()))==(vt0.c0 COLLATE NOCASE)), ((CAST(vt0.c0 AS BLOB)) IS FALSE) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE NULL COLLATE RTRIM  WHEN (- (x'')) THEN rtreenode(vt0.c0, vt0.c0) END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE NULL COLLATE RTRIM  WHEN (- (x'')) THEN rtreenode(vt0.c0, vt0.c0) END);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE NULL COLLATE RTRIM  WHEN (- (x'')) THEN rtreenode(vt0.c0, vt0.c0) END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE NULL COLLATE RTRIM  WHEN (- (x'')) THEN rtreenode(vt0.c0, vt0.c0) END);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE NULL COLLATE RTRIM  WHEN (- (x'')) THEN rtreenode(vt0.c0, vt0.c0) END;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL));
SELECT ALL * FROM v0, vt0, t0 WHERE (NULL) ORDER BY (((t0.c13) IS TRUE) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0 NOT INDEXED, t0 ORDER BY (((t0.c13) IS TRUE) IN ())  NULLS FIRST);
SELECT ALL * FROM v0, vt0, t0 WHERE (NULL) ORDER BY (((t0.c13) IS TRUE) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0 NOT INDEXED, t0 ORDER BY (((t0.c13) IS TRUE) IN ())  NULLS FIRST);
SELECT ALL * FROM v0, vt0, t0 WHERE (NULL) ORDER BY (((t0.c13) IS TRUE) IN ())  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ('jpH	c湷o\') ORDER BY ((t0.c32)>(((t0.c13)<<(t0.c32))));
SELECT SUM(count) FROM (SELECT (('jpH	c湷o\') IS TRUE)  as count FROM t0 ORDER BY ((t0.c32)>(((t0.c13)<<(t0.c32)))));
SELECT ALL * FROM t0 WHERE ('jpH	c湷o\') ORDER BY ((t0.c32)>(((t0.c13)<<(t0.c32))));
SELECT SUM(count) FROM (SELECT (('jpH	c湷o\') IS TRUE)  as count FROM t0 ORDER BY ((t0.c32)>(((t0.c13)<<(t0.c32)))));
SELECT ALL * FROM t0 WHERE ('jpH	c湷o\') ORDER BY ((t0.c32)>(((t0.c13)<<(t0.c32))));
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON ((LTRIM(v0.c2, t0.c86))&(((((((((v0.c0)OR(v0.c2)))OR(v0.c1)))OR(t0.c13)))AND(t0.c86)))) RIGHT OUTER JOIN vt0 ON ((t0.c13 IN ()) IN ()) WHERE (x'') ORDER BY ((CAST(x'' AS NUMERIC))IS((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((LTRIM(v0.c2, t0.c86))&(((((((((v0.c0)OR(v0.c2)))OR(v0.c1)))OR(t0.c13)))AND(t0.c86)))) RIGHT OUTER JOIN vt0 ON ((t0.c13 IN ()) IN ()) ORDER BY ((CAST(x'' AS NUMERIC))IS((NOT (vt0.c0)))));
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON ((LTRIM(v0.c2, t0.c86))&(((((((((v0.c0)OR(v0.c2)))OR(v0.c1)))OR(t0.c13)))AND(t0.c86)))) RIGHT OUTER JOIN vt0 ON ((t0.c13 IN ()) IN ()) WHERE (x'') ORDER BY ((CAST(x'' AS NUMERIC))IS((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((LTRIM(v0.c2, t0.c86))&(((((((((v0.c0)OR(v0.c2)))OR(v0.c1)))OR(t0.c13)))AND(t0.c86)))) RIGHT OUTER JOIN vt0 ON ((t0.c13 IN ()) IN ()) ORDER BY ((CAST(x'' AS NUMERIC))IS((NOT (vt0.c0)))));
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON ((LTRIM(v0.c2, t0.c86))&(((((((((v0.c0)OR(v0.c2)))OR(v0.c1)))OR(t0.c13)))AND(t0.c86)))) RIGHT OUTER JOIN vt0 ON ((t0.c13 IN ()) IN ()) WHERE (x'') ORDER BY ((CAST(x'' AS NUMERIC))IS((NOT (vt0.c0))));
SELECT * FROM vt0 NOT INDEXED WHERE (((((vt0.c0))==((vt0.c0))) IN (NULL, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0))=((vt0.c0))) IN (NULL, vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE (((((vt0.c0))==((vt0.c0))) IN (NULL, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0))=((vt0.c0))) IN (NULL, vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE (((((vt0.c0))==((vt0.c0))) IN (NULL, vt0.c0)));
SELECT COUNT(*) FROM t0 WHERE (((t0.c86 COLLATE BINARY) IS TRUE)) ORDER BY (NOT ((t0.c13 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c86 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY (NOT ((t0.c13 IN ()))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c86 COLLATE BINARY) IS TRUE)) ORDER BY (NOT ((t0.c13 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c86 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY (NOT ((t0.c13 IN ()))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c86 COLLATE BINARY) IS TRUE)) ORDER BY (NOT ((t0.c13 IN ())));
SELECT COUNT(*) FROM t0 WHERE (t0.c32) ORDER BY ((t0.c86)<=(t0.c32)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c32) IS TRUE)  as count FROM t0 ORDER BY ((t0.c86)<=(t0.c32)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (t0.c32) ORDER BY ((t0.c86)<=(t0.c32)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c32) IS TRUE)  as count FROM t0 ORDER BY ((t0.c86)<=(t0.c32)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (t0.c32) ORDER BY ((t0.c86)<=(t0.c32)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(UNLIKELY('c~'))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(UNLIKELY('c~'))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(UNLIKELY('c~'))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(UNLIKELY('c~'))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(UNLIKELY('c~'))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT NULL)) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)>>(vt0.c0)))) AND ((NULL)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)>>(vt0.c0)))) AND ((NULL))));
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT NULL)) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)>>(vt0.c0)))) AND ((NULL)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)>>(vt0.c0)))) AND ((NULL))));
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT NULL)) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)>>(vt0.c0)))) AND ((NULL)));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((t0.c32) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t0.c32) NOT NULL)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((t0.c32) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t0.c32) NOT NULL)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((t0.c32) NOT NULL));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, t0, vt0 WHERE (((((v0.c0)IS NOT(x'')))AND(SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS NOT(x'')))AND(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, t0, vt0 WHERE (((((v0.c0)IS NOT(x'')))AND(SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS NOT(x'')))AND(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, t0, vt0 WHERE (((((v0.c0)IS NOT(x'')))AND(SQLITE_SOURCE_ID())));
SELECT ALL * FROM t0, v0 WHERE (TOTAL_CHANGES() COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES() COLLATE RTRIM) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (TOTAL_CHANGES() COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES() COLLATE RTRIM) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (TOTAL_CHANGES() COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((((vt0.c0))<((v0.c1)))) NOT BETWEEN (CAST(v0.c2 AS BLOB)) AND ((((v0.c1)) BETWEEN ((t0.c86)) AND ((t0.c13)))))) ORDER BY (- (v0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((v0.c1)))) NOT BETWEEN (CAST(v0.c2 AS BLOB)) AND ((((v0.c1)) BETWEEN ((t0.c86)) AND ((t0.c13)))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (- (v0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((((vt0.c0))<((v0.c1)))) NOT BETWEEN (CAST(v0.c2 AS BLOB)) AND ((((v0.c1)) BETWEEN ((t0.c86)) AND ((t0.c13)))))) ORDER BY (- (v0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((v0.c1)))) NOT BETWEEN (CAST(v0.c2 AS BLOB)) AND ((((v0.c1)) BETWEEN ((t0.c86)) AND ((t0.c13)))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (- (v0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((((vt0.c0))<((v0.c1)))) NOT BETWEEN (CAST(v0.c2 AS BLOB)) AND ((((v0.c1)) BETWEEN ((t0.c86)) AND ((t0.c13)))))) ORDER BY (- (v0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((load_extension(t0.c32, t0.c86)) NOTNULL) WHERE (((t0.c32 COLLATE RTRIM)-(((vt0.c0) BETWEEN (t0.c13) AND (t0.c86)))));
SELECT SUM(count) FROM (SELECT ((((t0.c32 COLLATE RTRIM)-(((vt0.c0) BETWEEN (t0.c13) AND (t0.c86))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((load_extension(t0.c32, t0.c86)) NOTNULL));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((load_extension(t0.c32, t0.c86)) NOTNULL) WHERE (((t0.c32 COLLATE RTRIM)-(((vt0.c0) BETWEEN (t0.c13) AND (t0.c86)))));
SELECT SUM(count) FROM (SELECT ((((t0.c32 COLLATE RTRIM)-(((vt0.c0) BETWEEN (t0.c13) AND (t0.c86))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((load_extension(t0.c32, t0.c86)) NOTNULL));
SELECT ALL COUNT(*) FROM t0 WHERE (((((('1116637992') NOT BETWEEN (t0.c32) AND (t0.c13))))<>(((t0.c86 IN ()))))) ORDER BY ((t0.c86)&(t0.c32)) COLLATE BINARY DESC, ((((((t0.c13) BETWEEN (0X39aec14e) AND (t0.c32)))OR(CASE t0.c86  WHEN t0.c13 THEN t0.c86 WHEN t0.c32 THEN t0.c13 WHEN t0.c32 THEN t0.c32 END)))AND(CASE WHEN t0.c13 THEN t0.c32 ELSE t0.c32 END));
SELECT SUM(count) FROM (SELECT ALL ((((((('1116637992') NOT BETWEEN (t0.c32) AND (t0.c13))))!=(((t0.c86 IN ()))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c86)&(t0.c32)) COLLATE BINARY DESC, ((((((t0.c13) BETWEEN (0x39aec14e) AND (t0.c32)))OR(CASE t0.c86  WHEN t0.c13 THEN t0.c86 WHEN t0.c32 THEN t0.c13 WHEN t0.c32 THEN t0.c32 END)))AND(CASE WHEN t0.c13 THEN t0.c32 ELSE t0.c32 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((('1116637992') NOT BETWEEN (t0.c32) AND (t0.c13))))<>(((t0.c86 IN ()))))) ORDER BY ((t0.c86)&(t0.c32)) COLLATE BINARY DESC, ((((((t0.c13) BETWEEN (0X39aec14e) AND (t0.c32)))OR(CASE t0.c86  WHEN t0.c13 THEN t0.c86 WHEN t0.c32 THEN t0.c13 WHEN t0.c32 THEN t0.c32 END)))AND(CASE WHEN t0.c13 THEN t0.c32 ELSE t0.c32 END));
SELECT SUM(count) FROM (SELECT ALL ((((((('1116637992') NOT BETWEEN (t0.c32) AND (t0.c13))))!=(((t0.c86 IN ()))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c86)&(t0.c32)) COLLATE BINARY DESC, ((((((t0.c13) BETWEEN (0x39aec14e) AND (t0.c32)))OR(CASE t0.c86  WHEN t0.c13 THEN t0.c86 WHEN t0.c32 THEN t0.c13 WHEN t0.c32 THEN t0.c32 END)))AND(CASE WHEN t0.c13 THEN t0.c32 ELSE t0.c32 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((('1116637992') NOT BETWEEN (t0.c32) AND (t0.c13))))<>(((t0.c86 IN ()))))) ORDER BY ((t0.c86)&(t0.c32)) COLLATE BINARY DESC, ((((((t0.c13) BETWEEN (0X39aec14e) AND (t0.c32)))OR(CASE t0.c86  WHEN t0.c13 THEN t0.c86 WHEN t0.c32 THEN t0.c13 WHEN t0.c32 THEN t0.c32 END)))AND(CASE WHEN t0.c13 THEN t0.c32 ELSE t0.c32 END));
SELECT ALL * FROM v0 WHERE (((((v0.c0)AND(v0.c0)))OR(v0.c2)) COLLATE NOCASE) ORDER BY ((highlight(v0.c1, v0.c2, v0.c2, v0.c2)) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(v0.c0)))OR(v0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((highlight(v0.c1, v0.c2, v0.c2, v0.c2)) IS FALSE) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((v0.c0)AND(v0.c0)))OR(v0.c2)) COLLATE NOCASE) ORDER BY ((highlight(v0.c1, v0.c2, v0.c2, v0.c2)) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(v0.c0)))OR(v0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((highlight(v0.c1, v0.c2, v0.c2, v0.c2)) IS FALSE) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CASE WHEN NULL THEN 2.117550055E9 WHEN CAST(t0.c13 AS TEXT) THEN 1107232002 COLLATE NOCASE WHEN (t0.c86 IN ()) THEN ((t0.c86) BETWEEN (t0.c86) AND (t0.c32)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN 2.117550055E9 WHEN CAST(t0.c13 AS TEXT) THEN 1107232002 COLLATE NOCASE WHEN (t0.c86 IN ()) THEN ((t0.c86) BETWEEN (t0.c86) AND (t0.c32)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN NULL THEN 2.117550055E9 WHEN CAST(t0.c13 AS TEXT) THEN 1107232002 COLLATE NOCASE WHEN (t0.c86 IN ()) THEN ((t0.c86) BETWEEN (t0.c86) AND (t0.c32)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN 2.117550055E9 WHEN CAST(t0.c13 AS TEXT) THEN 1107232002 COLLATE NOCASE WHEN (t0.c86 IN ()) THEN ((t0.c86) BETWEEN (t0.c86) AND (t0.c32)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN NULL THEN 2.117550055E9 WHEN CAST(t0.c13 AS TEXT) THEN 1107232002 COLLATE NOCASE WHEN (t0.c86 IN ()) THEN ((t0.c86) BETWEEN (t0.c86) AND (t0.c32)) END);
SELECT COUNT(*) FROM t0, v0 WHERE (CAST(((t0.c32)*(v0.c1)) AS TEXT)) ORDER BY (v0.c2 COLLATE RTRIM IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c32)*(v0.c1)) AS TEXT)) IS TRUE)  as count FROM t0, v0 ORDER BY (v0.c2 COLLATE RTRIM IN ()) DESC);
SELECT COUNT(*) FROM t0, v0 WHERE (CAST(((t0.c32)*(v0.c1)) AS TEXT)) ORDER BY (v0.c2 COLLATE RTRIM IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c32)*(v0.c1)) AS TEXT)) IS TRUE)  as count FROM t0, v0 ORDER BY (v0.c2 COLLATE RTRIM IN ()) DESC);
SELECT COUNT(*) FROM t0, v0 WHERE (CAST(((t0.c32)*(v0.c1)) AS TEXT)) ORDER BY (v0.c2 COLLATE RTRIM IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0 IN ()))OR((vt0.c0 IN ()))))OR((vt0.c0 IN ()))))AND(((vt0.c0) NOTNULL))))AND(vt0.c0))) ORDER BY ((((vt0.c0)IS NOT(vt0.c0)))AND((~ (vt0.c0)))) DESC  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((LIKELIHOOD(DISTINCT vt0.c0, 0.46260890007650146))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ASC, CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN ()))OR((vt0.c0 IN ()))))OR((vt0.c0 IN ()))))AND(((vt0.c0) NOTNULL))))AND(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS NOT(vt0.c0)))AND((~ (vt0.c0)))) DESC  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((LIKELIHOOD(DISTINCT vt0.c0, 0.46260890007650146))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ASC, CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0 IN ()))OR((vt0.c0 IN ()))))OR((vt0.c0 IN ()))))AND(((vt0.c0) NOTNULL))))AND(vt0.c0))) ORDER BY ((((vt0.c0)IS NOT(vt0.c0)))AND((~ (vt0.c0)))) DESC  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((LIKELIHOOD(DISTINCT vt0.c0, 0.46260890007650146))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ASC, CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN ()))OR((vt0.c0 IN ()))))OR((vt0.c0 IN ()))))AND(((vt0.c0) NOTNULL))))AND(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS NOT(vt0.c0)))AND((~ (vt0.c0)))) DESC  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((LIKELIHOOD(DISTINCT vt0.c0, 0.46260890007650146))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ASC, CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0 IN ()))OR((vt0.c0 IN ()))))OR((vt0.c0 IN ()))))AND(((vt0.c0) NOTNULL))))AND(vt0.c0))) ORDER BY ((((vt0.c0)IS NOT(vt0.c0)))AND((~ (vt0.c0)))) DESC  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((LIKELIHOOD(DISTINCT vt0.c0, 0.46260890007650146))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ASC, CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC)  NULLS FIRST;
SELECT * FROM t0 WHERE (((((t0.c32)+(t0.c13)))<(SQLITE_SOURCE_ID()))) ORDER BY CASE ((((((((t0.c32)OR(t0.c32)))OR(t0.c86)))AND(t0.c32)))AND(t0.c32))  WHEN CAST(t0.c86 AS REAL) THEN CAST(t0.c13 AS INTEGER) ELSE (t0.c13 IN (t0.c13)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c32)+(t0.c13)))<(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM t0 ORDER BY CASE ((((((((t0.c32)OR(t0.c32)))OR(t0.c86)))AND(t0.c32)))AND(t0.c32))  WHEN CAST(t0.c86 AS REAL) THEN CAST(t0.c13 AS INTEGER) ELSE (t0.c13 IN (t0.c13)) END ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c32)+(t0.c13)))<(SQLITE_SOURCE_ID()))) ORDER BY CASE ((((((((t0.c32)OR(t0.c32)))OR(t0.c86)))AND(t0.c32)))AND(t0.c32))  WHEN CAST(t0.c86 AS REAL) THEN CAST(t0.c13 AS INTEGER) ELSE (t0.c13 IN (t0.c13)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c32)+(t0.c13)))<(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM t0 ORDER BY CASE ((((((((t0.c32)OR(t0.c32)))OR(t0.c86)))AND(t0.c32)))AND(t0.c32))  WHEN CAST(t0.c86 AS REAL) THEN CAST(t0.c13 AS INTEGER) ELSE (t0.c13 IN (t0.c13)) END ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c32)+(t0.c13)))<(SQLITE_SOURCE_ID()))) ORDER BY CASE ((((((((t0.c32)OR(t0.c32)))OR(t0.c86)))AND(t0.c32)))AND(t0.c32))  WHEN CAST(t0.c86 AS REAL) THEN CAST(t0.c13 AS INTEGER) ELSE (t0.c13 IN (t0.c13)) END ASC  NULLS FIRST;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON '' WHERE ((((((((((t0.c32 IN ()))OR(UNLIKELY(0.4283893436167183))))OR((+ (vt0.c0)))))AND((NOT (t0.c13)))))OR((((t0.c13, t0.c86, t0.c13, vt0.c0, t0.c13))<=((vt0.c0, t0.c32, t0.c13, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c32 IN ()))OR(UNLIKELY(0.4283893436167183))))OR((+ (vt0.c0)))))AND((NOT (t0.c13)))))OR((((t0.c13, t0.c86, t0.c13, vt0.c0, t0.c13))<=((vt0.c0, t0.c32, t0.c13, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON '');
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON '' WHERE ((((((((((t0.c32 IN ()))OR(UNLIKELY(0.4283893436167183))))OR((+ (vt0.c0)))))AND((NOT (t0.c13)))))OR((((t0.c13, t0.c86, t0.c13, vt0.c0, t0.c13))<=((vt0.c0, t0.c32, t0.c13, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c32 IN ()))OR(UNLIKELY(0.4283893436167183))))OR((+ (vt0.c0)))))AND((NOT (t0.c13)))))OR((((t0.c13, t0.c86, t0.c13, vt0.c0, t0.c13))<=((vt0.c0, t0.c32, t0.c13, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON '');
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON '' WHERE ((((((((((t0.c32 IN ()))OR(UNLIKELY(0.4283893436167183))))OR((+ (vt0.c0)))))AND((NOT (t0.c13)))))OR((((t0.c13, t0.c86, t0.c13, vt0.c0, t0.c13))<=((vt0.c0, t0.c32, t0.c13, vt0.c0, vt0.c0))))));
SELECT ALL * FROM t0, vt0, v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ABS(CASE t0.c32  WHEN t0.c86 THEN vt0.c0 WHEN 0.046812800861263715 THEN t0.c32 WHEN vt0.c0 THEN v0.c2 WHEN t0.c86 THEN vt0.c0 WHEN 0.024943215689456677 THEN v0.c1 ELSE t0.c13 END) INNER JOIN t0 ON ((CAST(v0.c1 AS REAL))/(CAST(v0.c1 AS REAL))) WHERE (NULLIF(load_extension(v0.c0, v0.c1), ((t0.c13)>=(v0.c0)))) ORDER BY ((vt0.c0) NOT NULL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((NULLIF(load_extension(v0.c0, v0.c1), ((t0.c13)>=(v0.c0)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ABS(CASE t0.c32  WHEN t0.c86 THEN vt0.c0 WHEN 0.046812800861263715 THEN t0.c32 WHEN vt0.c0 THEN v0.c2 WHEN t0.c86 THEN vt0.c0 WHEN 0.024943215689456677 THEN v0.c1 ELSE t0.c13 END) INNER JOIN t0 ON ((CAST(v0.c1 AS REAL))/(CAST(v0.c1 AS REAL))) ORDER BY ((vt0.c0) NOT NULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ABS(CASE t0.c32  WHEN t0.c86 THEN vt0.c0 WHEN 0.046812800861263715 THEN t0.c32 WHEN vt0.c0 THEN v0.c2 WHEN t0.c86 THEN vt0.c0 WHEN 0.024943215689456677 THEN v0.c1 ELSE t0.c13 END) INNER JOIN t0 ON ((CAST(v0.c1 AS REAL))/(CAST(v0.c1 AS REAL))) WHERE (NULLIF(load_extension(v0.c0, v0.c1), ((t0.c13)>=(v0.c0)))) ORDER BY ((vt0.c0) NOT NULL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((NULLIF(load_extension(v0.c0, v0.c1), ((t0.c13)>=(v0.c0)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ABS(CASE t0.c32  WHEN t0.c86 THEN vt0.c0 WHEN 0.046812800861263715 THEN t0.c32 WHEN vt0.c0 THEN v0.c2 WHEN t0.c86 THEN vt0.c0 WHEN 0.024943215689456677 THEN v0.c1 ELSE t0.c13 END) INNER JOIN t0 ON ((CAST(v0.c1 AS REAL))/(CAST(v0.c1 AS REAL))) ORDER BY ((vt0.c0) NOT NULL) COLLATE RTRIM);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (((- (t0.c13)))<=(CAST(vt0.c0 AS NUMERIC))) WHERE (((((((((((((x'6a31' COLLATE NOCASE)OR((((t0.c86, 0.7698371417522295, t0.c86))<=((t0.c32, t0.c86, t0.c32))))))AND(CASE WHEN t0.c86 THEN t0.c32 END)))OR('>[r1[b9')))OR(CASE NULL  WHEN t0.c32 THEN t0.c86 ELSE x'598a8360' END)))OR(t0.c86 COLLATE BINARY)))AND(((t0.c32) ISNULL)))) ORDER BY ((CASE WHEN t0.c86 THEN t0.c86 ELSE t0.c13 END) IS TRUE), (((((((((~ (vt0.c0)))OR(t0.c86 COLLATE RTRIM)))AND(((t0.c13) NOT BETWEEN (x'') AND (vt0.c0)))))OR(((t0.c13)LIKE(t0.c13)))))OR(TRIM(DISTINCT t0.c13, t0.c86))) DESC  NULLS LAST, ((((t0.c86)LIKE(t0.c32)))GLOB(((t0.c86)||(t0.c13)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((x'6a31' COLLATE NOCASE)OR((((t0.c86, 0.7698371417522295, t0.c86))<=((t0.c32, t0.c86, t0.c32))))))AND(CASE WHEN t0.c86 THEN t0.c32 END)))OR('>[r1[b9')))OR(CASE NULL  WHEN t0.c32 THEN t0.c86 ELSE x'598a8360' END)))OR(t0.c86 COLLATE BINARY)))AND(((t0.c32) ISNULL)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((- (t0.c13)))<=(CAST(vt0.c0 AS NUMERIC))) ORDER BY ((CASE WHEN t0.c86 THEN t0.c86 ELSE t0.c13 END) IS TRUE), (((((((((~ (vt0.c0)))OR(t0.c86 COLLATE RTRIM)))AND(((t0.c13) NOT BETWEEN (x'') AND (vt0.c0)))))OR(((t0.c13)LIKE(t0.c13)))))OR(TRIM(DISTINCT t0.c13, t0.c86))) DESC  NULLS LAST, ((((t0.c86)LIKE(t0.c32)))GLOB(((t0.c86)||(t0.c13)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (((- (t0.c13)))<=(CAST(vt0.c0 AS NUMERIC))) WHERE (((((((((((((x'6a31' COLLATE NOCASE)OR((((t0.c86, 0.7698371417522295, t0.c86))<=((t0.c32, t0.c86, t0.c32))))))AND(CASE WHEN t0.c86 THEN t0.c32 END)))OR('>[r1[b9')))OR(CASE NULL  WHEN t0.c32 THEN t0.c86 ELSE x'598a8360' END)))OR(t0.c86 COLLATE BINARY)))AND(((t0.c32) ISNULL)))) ORDER BY ((CASE WHEN t0.c86 THEN t0.c86 ELSE t0.c13 END) IS TRUE), (((((((((~ (vt0.c0)))OR(t0.c86 COLLATE RTRIM)))AND(((t0.c13) NOT BETWEEN (x'') AND (vt0.c0)))))OR(((t0.c13)LIKE(t0.c13)))))OR(TRIM(DISTINCT t0.c13, t0.c86))) DESC  NULLS LAST, ((((t0.c86)LIKE(t0.c32)))GLOB(((t0.c86)||(t0.c13)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((x'6a31' COLLATE NOCASE)OR((((t0.c86, 0.7698371417522295, t0.c86))<=((t0.c32, t0.c86, t0.c32))))))AND(CASE WHEN t0.c86 THEN t0.c32 END)))OR('>[r1[b9')))OR(CASE NULL  WHEN t0.c32 THEN t0.c86 ELSE x'598a8360' END)))OR(t0.c86 COLLATE BINARY)))AND(((t0.c32) ISNULL)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((- (t0.c13)))<=(CAST(vt0.c0 AS NUMERIC))) ORDER BY ((CASE WHEN t0.c86 THEN t0.c86 ELSE t0.c13 END) IS TRUE), (((((((((~ (vt0.c0)))OR(t0.c86 COLLATE RTRIM)))AND(((t0.c13) NOT BETWEEN (x'') AND (vt0.c0)))))OR(((t0.c13)LIKE(t0.c13)))))OR(TRIM(DISTINCT t0.c13, t0.c86))) DESC  NULLS LAST, ((((t0.c86)LIKE(t0.c32)))GLOB(((t0.c86)||(t0.c13)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (((- (t0.c13)))<=(CAST(vt0.c0 AS NUMERIC))) WHERE (((((((((((((x'6a31' COLLATE NOCASE)OR((((t0.c86, 0.7698371417522295, t0.c86))<=((t0.c32, t0.c86, t0.c32))))))AND(CASE WHEN t0.c86 THEN t0.c32 END)))OR('>[r1[b9')))OR(CASE NULL  WHEN t0.c32 THEN t0.c86 ELSE x'598a8360' END)))OR(t0.c86 COLLATE BINARY)))AND(((t0.c32) ISNULL)))) ORDER BY ((CASE WHEN t0.c86 THEN t0.c86 ELSE t0.c13 END) IS TRUE), (((((((((~ (vt0.c0)))OR(t0.c86 COLLATE RTRIM)))AND(((t0.c13) NOT BETWEEN (x'') AND (vt0.c0)))))OR(((t0.c13)LIKE(t0.c13)))))OR(TRIM(DISTINCT t0.c13, t0.c86))) DESC  NULLS LAST, ((((t0.c86)LIKE(t0.c32)))GLOB(((t0.c86)||(t0.c13)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (0.8038505671319405))) AND (((t0.c13)>>(t0.c13))))) ORDER BY ((((((((t0.c86)AND(vt0.c0)))AND(v0.c1)))OR(t0.c13)))OR(v0.c2)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (0.8038505671319405))) AND (((t0.c13)>>(t0.c13))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((((((t0.c86)AND(vt0.c0)))AND(v0.c1)))OR(t0.c13)))OR(v0.c2)) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (0.8038505671319405))) AND (((t0.c13)>>(t0.c13))))) ORDER BY ((((((((t0.c86)AND(vt0.c0)))AND(v0.c1)))OR(t0.c13)))OR(v0.c2)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (0.8038505671319405))) AND (((t0.c13)>>(t0.c13))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((((((t0.c86)AND(vt0.c0)))AND(v0.c1)))OR(t0.c13)))OR(v0.c2)) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (0.8038505671319405))) AND (((t0.c13)>>(t0.c13))))) ORDER BY ((((((((t0.c86)AND(vt0.c0)))AND(v0.c1)))OR(t0.c13)))OR(v0.c2)) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((((((((1965419129)AND(t0.c86)))OR(t0.c86)))AND(t0.c13)))OR(t0.c32))))>((((t0.c86)&(vt0.c0)))))) ORDER BY (((vt0.c0) NOTNULL) IN ((t0.c13 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((1965419129)AND(t0.c86)))OR(t0.c86)))AND(t0.c13)))OR(t0.c32))))>((((t0.c86)&(vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0) NOTNULL) IN ((t0.c13 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((((((((1965419129)AND(t0.c86)))OR(t0.c86)))AND(t0.c13)))OR(t0.c32))))>((((t0.c86)&(vt0.c0)))))) ORDER BY (((vt0.c0) NOTNULL) IN ((t0.c13 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((1965419129)AND(t0.c86)))OR(t0.c86)))AND(t0.c13)))OR(t0.c32))))>((((t0.c86)&(vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0) NOTNULL) IN ((t0.c13 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((((((((1965419129)AND(t0.c86)))OR(t0.c86)))AND(t0.c13)))OR(t0.c32))))>((((t0.c86)&(vt0.c0)))))) ORDER BY (((vt0.c0) NOTNULL) IN ((t0.c13 IN ()))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((((t0.c86, t0.c13, '1998416621', t0.c13, t0.c86))<((t0.c32, t0.c32, t0.c86, t0.c13, t0.c86))))GLOB(x'c707'))) ORDER BY highlight(t0.c32 COLLATE RTRIM, ((t0.c32) BETWEEN ('1998416621') AND (t0.c86)), (+ (t0.c13)), ''), CAST(t0.c13 COLLATE NOCASE AS TEXT) DESC, CASE WHEN t0.c32 COLLATE NOCASE THEN '_>~NS\nDVK' ELSE ((t0.c13)IS(t0.c86)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c86, t0.c13, '1998416621', t0.c13, t0.c86))<((t0.c32, t0.c32, t0.c86, t0.c13, t0.c86))))GLOB(x'c707'))) IS TRUE)  as count FROM t0 ORDER BY highlight(t0.c32 COLLATE RTRIM, ((t0.c32) BETWEEN ('1998416621') AND (t0.c86)), (+ (t0.c13)), ''), CAST(t0.c13 COLLATE NOCASE AS TEXT) DESC, CASE WHEN t0.c32 COLLATE NOCASE THEN '_>~NS\nDVK' ELSE ((t0.c13)IS(t0.c86)) END  NULLS LAST);
SELECT * FROM t0 WHERE ((((((t0.c86, t0.c13, '1998416621', t0.c13, t0.c86))<((t0.c32, t0.c32, t0.c86, t0.c13, t0.c86))))GLOB(x'c707'))) ORDER BY highlight(t0.c32 COLLATE RTRIM, ((t0.c32) BETWEEN ('1998416621') AND (t0.c86)), (+ (t0.c13)), ''), CAST(t0.c13 COLLATE NOCASE AS TEXT) DESC, CASE WHEN t0.c32 COLLATE NOCASE THEN '_>~NS\nDVK' ELSE ((t0.c13)IS(t0.c86)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c86, t0.c13, '1998416621', t0.c13, t0.c86))<((t0.c32, t0.c32, t0.c86, t0.c13, t0.c86))))GLOB(x'c707'))) IS TRUE)  as count FROM t0 ORDER BY highlight(t0.c32 COLLATE RTRIM, ((t0.c32) BETWEEN ('1998416621') AND (t0.c86)), (+ (t0.c13)), ''), CAST(t0.c13 COLLATE NOCASE AS TEXT) DESC, CASE WHEN t0.c32 COLLATE NOCASE THEN '_>~NS\nDVK' ELSE ((t0.c13)IS(t0.c86)) END  NULLS LAST);
SELECT ALL * FROM t0, v0, vt0 WHERE (((highlight(t0.c86, t0.c86, t0.c32, v0.c2))<(((v0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((highlight(t0.c86, t0.c86, t0.c32, v0.c2))<(((v0.c2) IS FALSE)))) IS TRUE)  as count FROM t0 NOT INDEXED, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((highlight(t0.c86, t0.c86, t0.c32, v0.c2))<(((v0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((highlight(t0.c86, t0.c86, t0.c32, v0.c2))<(((v0.c2) IS FALSE)))) IS TRUE)  as count FROM t0 NOT INDEXED, v0, vt0);
SELECT COUNT(*) FROM t0 WHERE (LOWER(((t0.c32)+(t0.c32)))) ORDER BY (- (')\neLM+gC' COLLATE RTRIM))  NULLS FIRST, ((t0.c32 COLLATE RTRIM) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((t0.c32)+(t0.c32)))) IS TRUE)  as count FROM t0 ORDER BY (- (')\neLM+gC' COLLATE RTRIM))  NULLS FIRST, ((t0.c32 COLLATE RTRIM) NOTNULL));
SELECT COUNT(*) FROM t0 WHERE (LOWER(((t0.c32)+(t0.c32)))) ORDER BY (- (')\neLM+gC' COLLATE RTRIM))  NULLS FIRST, ((t0.c32 COLLATE RTRIM) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((t0.c32)+(t0.c32)))) IS TRUE)  as count FROM t0 ORDER BY (- (')\neLM+gC' COLLATE RTRIM))  NULLS FIRST, ((t0.c32 COLLATE RTRIM) NOTNULL));
SELECT COUNT(*) FROM t0 WHERE (LOWER(((t0.c32)+(t0.c32)))) ORDER BY (- (')\neLM+gC' COLLATE RTRIM))  NULLS FIRST, ((t0.c32 COLLATE RTRIM) NOTNULL);
SELECT ALL * FROM t0 INNER JOIN v0 ON ((t0.c32) BETWEEN (((((t0.c13)AND(v0.c2)))AND(v0.c1))) AND ((((x'', v0.c1, 'ZPoy+嚙skf')) NOT BETWEEN ((t0.c86, v0.c2, t0.c32)) AND ((t0.c86, t0.c32, t0.c13))))) WHERE (CAST(v0.c0 AS TEXT) COLLATE BINARY COLLATE NOCASE) ORDER BY CASE t0.c32  WHEN QUOTE(v0.c0) THEN (~ (t0.c13)) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS TEXT) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((t0.c32) BETWEEN (((((t0.c13)AND(v0.c2)))AND(v0.c1))) AND ((((x'', v0.c1, 'ZPoy+嚙skf')) NOT BETWEEN ((t0.c86, v0.c2, t0.c32)) AND ((t0.c86, t0.c32, t0.c13))))) ORDER BY CASE t0.c32  WHEN QUOTE(v0.c0) THEN (~ (t0.c13)) END);
SELECT ALL * FROM t0 INNER JOIN v0 ON ((t0.c32) BETWEEN (((((t0.c13)AND(v0.c2)))AND(v0.c1))) AND ((((x'', v0.c1, 'ZPoy+嚙skf')) NOT BETWEEN ((t0.c86, v0.c2, t0.c32)) AND ((t0.c86, t0.c32, t0.c13))))) WHERE (CAST(v0.c0 AS TEXT) COLLATE BINARY COLLATE NOCASE) ORDER BY CASE t0.c32  WHEN QUOTE(v0.c0) THEN (~ (t0.c13)) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS TEXT) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((t0.c32) BETWEEN (((((t0.c13)AND(v0.c2)))AND(v0.c1))) AND ((((x'', v0.c1, 'ZPoy+嚙skf')) NOT BETWEEN ((t0.c86, v0.c2, t0.c32)) AND ((t0.c86, t0.c32, t0.c13))))) ORDER BY CASE t0.c32  WHEN QUOTE(v0.c0) THEN (~ (t0.c13)) END);
SELECT ALL * FROM t0 INNER JOIN v0 ON ((t0.c32) BETWEEN (((((t0.c13)AND(v0.c2)))AND(v0.c1))) AND ((((x'', v0.c1, 'ZPoy+嚙skf')) NOT BETWEEN ((t0.c86, v0.c2, t0.c32)) AND ((t0.c86, t0.c32, t0.c13))))) WHERE (CAST(v0.c0 AS TEXT) COLLATE BINARY COLLATE NOCASE) ORDER BY CASE t0.c32  WHEN QUOTE(v0.c0) THEN (~ (t0.c13)) END;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c1)<=(vt0.c0)))&(((v0.c0)||(v0.c0))))) ORDER BY ((((v0.c0)/(v0.c2))) BETWEEN (LOWER(v0.c2)) AND (v0.c2 COLLATE NOCASE)) ASC  NULLS FIRST, ((x'1937') BETWEEN (COALESCE(DISTINCT v0.c0, v0.c2, vt0.c0, v0.c0)) AND (((vt0.c0) BETWEEN (v0.c0) AND (v0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1)<=(vt0.c0)))&(((v0.c0)||(v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0)/(v0.c2))) BETWEEN (LOWER(v0.c2)) AND (v0.c2 COLLATE NOCASE)) ASC  NULLS FIRST, ((x'1937') BETWEEN (COALESCE(DISTINCT v0.c0, v0.c2, vt0.c0, v0.c0)) AND (((vt0.c0) BETWEEN (v0.c0) AND (v0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c1)<=(vt0.c0)))&(((v0.c0)||(v0.c0))))) ORDER BY ((((v0.c0)/(v0.c2))) BETWEEN (LOWER(v0.c2)) AND (v0.c2 COLLATE NOCASE)) ASC  NULLS FIRST, ((x'1937') BETWEEN (COALESCE(DISTINCT v0.c0, v0.c2, vt0.c0, v0.c0)) AND (((vt0.c0) BETWEEN (v0.c0) AND (v0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1)<=(vt0.c0)))&(((v0.c0)||(v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0)/(v0.c2))) BETWEEN (LOWER(v0.c2)) AND (v0.c2 COLLATE NOCASE)) ASC  NULLS FIRST, ((x'1937') BETWEEN (COALESCE(DISTINCT v0.c0, v0.c2, vt0.c0, v0.c0)) AND (((vt0.c0) BETWEEN (v0.c0) AND (v0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c1)<=(vt0.c0)))&(((v0.c0)||(v0.c0))))) ORDER BY ((((v0.c0)/(v0.c2))) BETWEEN (LOWER(v0.c2)) AND (v0.c2 COLLATE NOCASE)) ASC  NULLS FIRST, ((x'1937') BETWEEN (COALESCE(DISTINCT v0.c0, v0.c2, vt0.c0, v0.c0)) AND (((vt0.c0) BETWEEN (v0.c0) AND (v0.c1)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c86 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c86 IN ())) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c86 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c86 IN ())) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c86 IN ())) NOT NULL));
SELECT * FROM v0 WHERE ((((v0.c1 IN ()))+(v0.c2))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ()))+(v0.c2))) IS TRUE)  as count FROM v0 ORDER BY x'' DESC);
SELECT * FROM v0 WHERE ((((v0.c1 IN ()))+(v0.c2))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ()))+(v0.c2))) IS TRUE)  as count FROM v0 ORDER BY x'' DESC);
SELECT * FROM v0 WHERE ((((v0.c1 IN ()))+(v0.c2))) ORDER BY x'' DESC;
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (json(((t0.c86) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((json(((t0.c86) IS FALSE))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (json(((t0.c86) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((json(((t0.c86) IS FALSE))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (json(((t0.c86) IS FALSE)));
SELECT ALL * FROM v0 WHERE ((CAST('h\n&/' AS INTEGER) IN ())) ORDER BY CAST(((v0.c1)AND(v0.c2)) AS BLOB), v0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((CAST('h\n&/' AS INTEGER) IN ())) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c1)AND(v0.c2)) AS BLOB), v0.c0 DESC);
SELECT ALL * FROM v0 WHERE ((CAST('h\n&/' AS INTEGER) IN ())) ORDER BY CAST(((v0.c1)AND(v0.c2)) AS BLOB), v0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((CAST('h\n&/' AS INTEGER) IN ())) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c1)AND(v0.c2)) AS BLOB), v0.c0 DESC);
SELECT ALL * FROM v0 WHERE ((CAST('h\n&/' AS INTEGER) IN ())) ORDER BY CAST(((v0.c1)AND(v0.c2)) AS BLOB), v0.c0 DESC;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (CAST(((((((((v0.c2)OR(v0.c0)))OR(vt0.c0)))OR(v0.c2)))AND(v0.c0)) AS INTEGER)) ORDER BY (((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))))<>(((v0.c0)LIKE('^e+m')))) DESC  NULLS FIRST, (((((v0.c0)OR(v0.c1)))OR(v0.c0)) IN (v0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((v0.c2)OR(v0.c0)))OR(vt0.c0)))OR(v0.c2)))AND(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY (((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))))<>(((v0.c0)LIKE('^e+m')))) DESC  NULLS FIRST, (((((v0.c0)OR(v0.c1)))OR(v0.c0)) IN (v0.c2))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (CAST(((((((((v0.c2)OR(v0.c0)))OR(vt0.c0)))OR(v0.c2)))AND(v0.c0)) AS INTEGER)) ORDER BY (((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))))<>(((v0.c0)LIKE('^e+m')))) DESC  NULLS FIRST, (((((v0.c0)OR(v0.c1)))OR(v0.c0)) IN (v0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((v0.c2)OR(v0.c0)))OR(vt0.c0)))OR(v0.c2)))AND(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY (((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))))<>(((v0.c0)LIKE('^e+m')))) DESC  NULLS FIRST, (((((v0.c0)OR(v0.c1)))OR(v0.c0)) IN (v0.c2))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (CAST(((((((((v0.c2)OR(v0.c0)))OR(vt0.c0)))OR(v0.c2)))AND(v0.c0)) AS INTEGER)) ORDER BY (((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))))<>(((v0.c0)LIKE('^e+m')))) DESC  NULLS FIRST, (((((v0.c0)OR(v0.c1)))OR(v0.c0)) IN (v0.c2))  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE ((('-1976814658')GLOB(411943439)));
SELECT SUM(count) FROM (SELECT (((('-1976814658')GLOB(411943439))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((('-1976814658')GLOB(411943439)));
SELECT SUM(count) FROM (SELECT (((('-1976814658')GLOB(411943439))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((('-1976814658')GLOB(411943439)));
SELECT COUNT(*) FROM vt0, v0 WHERE (TYPEOF('-1602603693'));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF('-1602603693')) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (TYPEOF('-1602603693'));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF('-1602603693')) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (TYPEOF('-1602603693'));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((((~ (v0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c2))) IS FALSE)) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((((~ (v0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c2))) IS FALSE)) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((((~ (v0.c2))) IS FALSE));
SELECT ALL * FROM vt0 INNER JOIN v0 ON (CAST(vt0.c0 AS INTEGER) IN ()) WHERE (v0.c2) ORDER BY CAST(0.5720641829834173 AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (CAST(vt0.c0 AS INTEGER) IN ()) ORDER BY CAST(0.5720641829834173 AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN v0 ON (CAST(vt0.c0 AS INTEGER) IN ()) WHERE (v0.c2) ORDER BY CAST(0.5720641829834173 AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (CAST(vt0.c0 AS INTEGER) IN ()) ORDER BY CAST(0.5720641829834173 AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN v0 ON (CAST(vt0.c0 AS INTEGER) IN ()) WHERE (v0.c2) ORDER BY CAST(0.5720641829834173 AS INTEGER) DESC  NULLS FIRST;
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON HEX(DISTINCT CAST(t0.c13 AS BLOB)) WHERE ((vt0.c0 IN (t0.c13 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (t0.c13 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON HEX(DISTINCT CAST(t0.c13 AS BLOB)));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON HEX(DISTINCT CAST(t0.c13 AS BLOB)) WHERE ((vt0.c0 IN (t0.c13 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (t0.c13 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON HEX(DISTINCT CAST(t0.c13 AS BLOB)));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON HEX(DISTINCT CAST(t0.c13 AS BLOB)) WHERE ((vt0.c0 IN (t0.c13 COLLATE NOCASE)));
SELECT ALL * FROM v0, vt0 WHERE ((((('497480925') BETWEEN (v0.c1) AND (x'af97'))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((('497480925') BETWEEN (v0.c1) AND (x'af97'))) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((('497480925') BETWEEN (v0.c1) AND (x'af97'))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((('497480925') BETWEEN (v0.c1) AND (x'af97'))) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((('497480925') BETWEEN (v0.c1) AND (x'af97'))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((0.3131512832726293)) NOT BETWEEN (((((t0.c32)) NOT BETWEEN ((t0.c32)) AND ((vt0.c0))))) AND ((((((t0.c13)OR(t0.c13)))OR('-2062702671'))))));
SELECT SUM(count) FROM (SELECT (((((0.3131512832726293)) NOT BETWEEN (((((t0.c32)) NOT BETWEEN ((t0.c32)) AND ((vt0.c0))))) AND ((((((t0.c13)OR(t0.c13)))OR('-2062702671')))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((0.3131512832726293)) NOT BETWEEN (((((t0.c32)) NOT BETWEEN ((t0.c32)) AND ((vt0.c0))))) AND ((((((t0.c13)OR(t0.c13)))OR('-2062702671'))))));
SELECT SUM(count) FROM (SELECT (((((0.3131512832726293)) NOT BETWEEN (((((t0.c32)) NOT BETWEEN ((t0.c32)) AND ((vt0.c0))))) AND ((((((t0.c13)OR(t0.c13)))OR('-2062702671')))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((0.3131512832726293)) NOT BETWEEN (((((t0.c32)) NOT BETWEEN ((t0.c32)) AND ((vt0.c0))))) AND ((((((t0.c13)OR(t0.c13)))OR('-2062702671'))))));
SELECT * FROM v0 WHERE (x'8023') ORDER BY ((((CAST(v0.c0 AS TEXT))OR(((v0.c0)%(v0.c0)))))AND(((((v0.c2)AND(v0.c0)))AND(v0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'8023') IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c0 AS TEXT))OR(((v0.c0)%(v0.c0)))))AND(((((v0.c2)AND(v0.c0)))AND(v0.c2)))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (x'8023') ORDER BY ((((CAST(v0.c0 AS TEXT))OR(((v0.c0)%(v0.c0)))))AND(((((v0.c2)AND(v0.c0)))AND(v0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'8023') IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c0 AS TEXT))OR(((v0.c0)%(v0.c0)))))AND(((((v0.c2)AND(v0.c0)))AND(v0.c2)))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (x'8023') ORDER BY ((((CAST(v0.c0 AS TEXT))OR(((v0.c0)%(v0.c0)))))AND(((((v0.c2)AND(v0.c0)))AND(v0.c2)))) DESC  NULLS FIRST;
SELECT * FROM vt0, t0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (NULL);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR((~ (vt0.c0)))))OR(((vt0.c0)-(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((ABS(vt0.c0))) AND (((+ (vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR((~ (vt0.c0)))))OR(((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((ABS(vt0.c0))) AND (((+ (vt0.c0)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR((~ (vt0.c0)))))OR(((vt0.c0)-(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((ABS(vt0.c0))) AND (((+ (vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR((~ (vt0.c0)))))OR(((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((ABS(vt0.c0))) AND (((+ (vt0.c0)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR((~ (vt0.c0)))))OR(((vt0.c0)-(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((ABS(vt0.c0))) AND (((+ (vt0.c0)))))  NULLS FIRST;
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON NULL LEFT OUTER JOIN t0 ON v0.c0 WHERE (((((x'91ea', t0.c86, v0.c1)) BETWEEN ((t0.c86, t0.c13, t0.c32)) AND ((v0.c2, t0.c13, t0.c13))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((x'91ea', t0.c86, v0.c1)) BETWEEN ((t0.c86, t0.c13, t0.c32)) AND ((v0.c2, t0.c13, t0.c13))) IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON NULL LEFT OUTER JOIN t0 ON v0.c0);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON NULL LEFT OUTER JOIN t0 ON v0.c0 WHERE (((((x'91ea', t0.c86, v0.c1)) BETWEEN ((t0.c86, t0.c13, t0.c32)) AND ((v0.c2, t0.c13, t0.c13))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((x'91ea', t0.c86, v0.c1)) BETWEEN ((t0.c86, t0.c13, t0.c32)) AND ((v0.c2, t0.c13, t0.c13))) IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON NULL LEFT OUTER JOIN t0 ON v0.c0);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON NULL LEFT OUTER JOIN t0 ON v0.c0 WHERE (((((x'91ea', t0.c86, v0.c1)) BETWEEN ((t0.c86, t0.c13, t0.c32)) AND ((v0.c2, t0.c13, t0.c13))) IN ()));
SELECT * FROM vt0, v0 WHERE ((((((v0.c0)<<(v0.c0)), ((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((((((((v0.c0)AND(v0.c1)))OR(vt0.c0)))AND(v0.c2)))OR(vt0.c0))))>((((v0.c0)-(vt0.c0)), json_type(v0.c1), (('JhJNFA')IS(v0.c0)))))) ORDER BY (+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) ASC  NULLS FIRST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)<<(v0.c0)), ((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((((((((v0.c0)AND(v0.c1)))OR(vt0.c0)))AND(v0.c2)))OR(vt0.c0))))>((((v0.c0)-(vt0.c0)), json_type(v0.c1), (('JhJNFA')IS(v0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) ASC  NULLS FIRST, v0.c0  NULLS LAST);
SELECT * FROM vt0, v0 WHERE ((((((v0.c0)<<(v0.c0)), ((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((((((((v0.c0)AND(v0.c1)))OR(vt0.c0)))AND(v0.c2)))OR(vt0.c0))))>((((v0.c0)-(vt0.c0)), json_type(v0.c1), (('JhJNFA')IS(v0.c0)))))) ORDER BY (+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) ASC  NULLS FIRST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)<<(v0.c0)), ((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((((((((v0.c0)AND(v0.c1)))OR(vt0.c0)))AND(v0.c2)))OR(vt0.c0))))>((((v0.c0)-(vt0.c0)), json_type(v0.c1), (('JhJNFA')IS(v0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) ASC  NULLS FIRST, v0.c0  NULLS LAST);
SELECT * FROM vt0, v0 WHERE ((((((v0.c0)<<(v0.c0)), ((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((((((((v0.c0)AND(v0.c1)))OR(vt0.c0)))AND(v0.c2)))OR(vt0.c0))))>((((v0.c0)-(vt0.c0)), json_type(v0.c1), (('JhJNFA')IS(v0.c0)))))) ORDER BY (+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) ASC  NULLS FIRST, v0.c0  NULLS LAST;
SELECT ALL * FROM vt0, t0 NOT INDEXED WHERE ((((((t0.c13)%(t0.c32))))>=(((~ (t0.c86))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c13)%(t0.c32))))>=(((~ (t0.c86)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 NOT INDEXED WHERE ((((((t0.c13)%(t0.c32))))>=(((~ (t0.c86))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c13)%(t0.c32))))>=(((~ (t0.c86)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 NOT INDEXED WHERE ((((((t0.c13)%(t0.c32))))>=(((~ (t0.c86))))));
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON (((vt0.c0)GLOB(v0.c2)) IN ()) INNER JOIN vt0 ON ((((t0.c86)IS(v0.c1)))OR(((t0.c32) ISNULL))) WHERE (((t0.c86)+(v0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c86)+(v0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON (((vt0.c0)GLOB(v0.c2)) IN ()) INNER JOIN vt0 ON ((((t0.c86)IS(v0.c1)))OR(((t0.c32) ISNULL))));
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON (((vt0.c0)GLOB(v0.c2)) IN ()) INNER JOIN vt0 ON ((((t0.c86)IS(v0.c1)))OR(((t0.c32) ISNULL))) WHERE (((t0.c86)+(v0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c86)+(v0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON (((vt0.c0)GLOB(v0.c2)) IN ()) INNER JOIN vt0 ON ((((t0.c86)IS(v0.c1)))OR(((t0.c32) ISNULL))));
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON (((vt0.c0)GLOB(v0.c2)) IN ()) INNER JOIN vt0 ON ((((t0.c86)IS(v0.c1)))OR(((t0.c32) ISNULL))) WHERE (((t0.c86)+(v0.c2)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c1 AS TEXT))OR(((((v0.c0)AND(v0.c2)))OR(v0.c2)))))OR(SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c1 AS TEXT))OR(((((v0.c0)AND(v0.c2)))OR(v0.c2)))))OR(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c1 AS TEXT))OR(((((v0.c0)AND(v0.c2)))OR(v0.c2)))))OR(SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c1 AS TEXT))OR(((((v0.c0)AND(v0.c2)))OR(v0.c2)))))OR(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c1 AS TEXT))OR(((((v0.c0)AND(v0.c2)))OR(v0.c2)))))OR(SQLITE_SOURCE_ID())));
SELECT COUNT(*) FROM t0 WHERE (969721720);
SELECT SUM(count) FROM (SELECT ((969721720) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (969721720);
SELECT SUM(count) FROM (SELECT ((969721720) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (969721720);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))IS NOT(vt0.c0))) ORDER BY ((((vt0.c0) BETWEEN (x'7955') AND (0Xffffffff957da46f)))IS(((vt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))IS NOT(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (x'7955') AND (0Xffffffff957da46f)))IS(((vt0.c0) NOTNULL))) DESC);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))IS NOT(vt0.c0))) ORDER BY ((((vt0.c0) BETWEEN (x'7955') AND (0Xffffffff957da46f)))IS(((vt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))IS NOT(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (x'7955') AND (0Xffffffff957da46f)))IS(((vt0.c0) NOTNULL))) DESC);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))IS NOT(vt0.c0))) ORDER BY ((((vt0.c0) BETWEEN (x'7955') AND (0Xffffffff957da46f)))IS(((vt0.c0) NOTNULL))) DESC;
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON (+ (((v0.c1)>>(v0.c1)))) WHERE (v0.c1) ORDER BY (((1.905680079E9))=((((t0.c32)>>(t0.c86))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (+ (((v0.c1)>>(v0.c1)))) ORDER BY (((1.905680079E9))==((((t0.c32)>>(t0.c86))))) ASC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON (+ (((v0.c1)>>(v0.c1)))) WHERE (v0.c1) ORDER BY (((1.905680079E9))=((((t0.c32)>>(t0.c86))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (+ (((v0.c1)>>(v0.c1)))) ORDER BY (((1.905680079E9))==((((t0.c32)>>(t0.c86))))) ASC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON (+ (((v0.c1)>>(v0.c1)))) WHERE (v0.c1) ORDER BY (((1.905680079E9))=((((t0.c32)>>(t0.c86))))) ASC;
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOTNULL)) ORDER BY ((v0.c1 COLLATE NOCASE) BETWEEN (((v0.c1) IS TRUE)) AND (((((v0.c2)AND(v0.c2)))AND(v0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1 COLLATE NOCASE) BETWEEN (((v0.c1) IS TRUE)) AND (((((v0.c2)AND(v0.c2)))AND(v0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOTNULL)) ORDER BY ((v0.c1 COLLATE NOCASE) BETWEEN (((v0.c1) IS TRUE)) AND (((((v0.c2)AND(v0.c2)))AND(v0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1 COLLATE NOCASE) BETWEEN (((v0.c1) IS TRUE)) AND (((((v0.c2)AND(v0.c2)))AND(v0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOTNULL)) ORDER BY ((v0.c1 COLLATE NOCASE) BETWEEN (((v0.c1) IS TRUE)) AND (((((v0.c2)AND(v0.c2)))AND(v0.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((+ (json_quote(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((+ (json_quote(v0.c1)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (json_quote(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((+ (json_quote(v0.c1)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (json_quote(v0.c1))));
SELECT * FROM v0 WHERE (((((v0.c2))!=((v0.c0))) IN ())) ORDER BY (((((v0.c2) ISNULL), (((0.12647381792191414, v0.c2, v0.c2)) NOT BETWEEN ((v0.c1, v0.c0, v0.c2)) AND ((v0.c1, v0.c2, v0.c2))), ((1.115255487E9) BETWEEN (v0.c1) AND (v0.c1))))>=((CAST(v0.c2 AS REAL), load_extension(v0.c0), ((((v0.c2)AND(v0.c1)))AND(v0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2))!=((v0.c0))) IN ())) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c2) ISNULL), (((0.12647381792191414, v0.c2, v0.c2)) NOT BETWEEN ((v0.c1, v0.c0, v0.c2)) AND ((v0.c1, v0.c2, v0.c2))), ((1.115255487E9) BETWEEN (v0.c1) AND (v0.c1))))>=((CAST(v0.c2 AS REAL), load_extension(v0.c0), ((((v0.c2)AND(v0.c1)))AND(v0.c1))))) DESC);
SELECT * FROM v0 WHERE (((((v0.c2))!=((v0.c0))) IN ())) ORDER BY (((((v0.c2) ISNULL), (((0.12647381792191414, v0.c2, v0.c2)) NOT BETWEEN ((v0.c1, v0.c0, v0.c2)) AND ((v0.c1, v0.c2, v0.c2))), ((1.115255487E9) BETWEEN (v0.c1) AND (v0.c1))))>=((CAST(v0.c2 AS REAL), load_extension(v0.c0), ((((v0.c2)AND(v0.c1)))AND(v0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2))!=((v0.c0))) IN ())) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c2) ISNULL), (((0.12647381792191414, v0.c2, v0.c2)) NOT BETWEEN ((v0.c1, v0.c0, v0.c2)) AND ((v0.c1, v0.c2, v0.c2))), ((1.115255487E9) BETWEEN (v0.c1) AND (v0.c1))))>=((CAST(v0.c2 AS REAL), load_extension(v0.c0), ((((v0.c2)AND(v0.c1)))AND(v0.c1))))) DESC);
SELECT * FROM v0, vt0 WHERE (((((((v0.c0)>=(v0.c1)))AND(vt0.c0)))OR(CASE vt0.c0  WHEN v0.c0 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c0 ELSE '0.046812800861263715' END)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)>=(v0.c1)))AND(vt0.c0)))OR(CASE vt0.c0  WHEN v0.c0 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c0 ELSE '0.046812800861263715' END))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((((v0.c0)>=(v0.c1)))AND(vt0.c0)))OR(CASE vt0.c0  WHEN v0.c0 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c0 ELSE '0.046812800861263715' END)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)>=(v0.c1)))AND(vt0.c0)))OR(CASE vt0.c0  WHEN v0.c0 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c0 ELSE '0.046812800861263715' END))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((((v0.c0)>=(v0.c1)))AND(vt0.c0)))OR(CASE vt0.c0  WHEN v0.c0 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c0 ELSE '0.046812800861263715' END)));
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY LIKELIHOOD((~ (vt0.c0)), 0.4877806340738733)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD((~ (vt0.c0)), 0.4877806340738733)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY LIKELIHOOD((~ (vt0.c0)), 0.4877806340738733)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD((~ (vt0.c0)), 0.4877806340738733)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY LIKELIHOOD((~ (vt0.c0)), 0.4877806340738733)  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE ((vt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((vt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((vt0.c0 COLLATE BINARY IN ()));
SELECT ALL * FROM vt0, v0 WHERE ((+ (v0.c2 COLLATE NOCASE))) ORDER BY (((v0.c1)) NOT BETWEEN ((UNLIKELY(v0.c1))) AND ((((('DXfFR1y')) BETWEEN ((v0.c0)) AND ((v0.c1))))))  NULLS LAST, (~ (((((0.8293539501818412)OR(NULL)))OR(v0.c1)))) DESC  NULLS LAST, '-1205750561' ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c1)) NOT BETWEEN ((UNLIKELY(v0.c1))) AND ((((('DXfFR1y')) BETWEEN ((v0.c0)) AND ((v0.c1))))))  NULLS LAST, (~ (((((0.8293539501818412)OR(NULL)))OR(v0.c1)))) DESC  NULLS LAST, '-1205750561' ASC);
SELECT ALL * FROM vt0, v0 WHERE ((+ (v0.c2 COLLATE NOCASE))) ORDER BY (((v0.c1)) NOT BETWEEN ((UNLIKELY(v0.c1))) AND ((((('DXfFR1y')) BETWEEN ((v0.c0)) AND ((v0.c1))))))  NULLS LAST, (~ (((((0.8293539501818412)OR(NULL)))OR(v0.c1)))) DESC  NULLS LAST, '-1205750561' ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c1)) NOT BETWEEN ((UNLIKELY(v0.c1))) AND ((((('DXfFR1y')) BETWEEN ((v0.c0)) AND ((v0.c1))))))  NULLS LAST, (~ (((((0.8293539501818412)OR(NULL)))OR(v0.c1)))) DESC  NULLS LAST, '-1205750561' ASC);
SELECT ALL * FROM vt0, v0 WHERE ((+ (v0.c2 COLLATE NOCASE))) ORDER BY (((v0.c1)) NOT BETWEEN ((UNLIKELY(v0.c1))) AND ((((('DXfFR1y')) BETWEEN ((v0.c0)) AND ((v0.c1))))))  NULLS LAST, (~ (((((0.8293539501818412)OR(NULL)))OR(v0.c1)))) DESC  NULLS LAST, '-1205750561' ASC;
SELECT ALL * FROM t0, v0 WHERE ((((((t0.c32))<((t0.c86))))-(((t0.c32) NOT BETWEEN (t0.c86) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c32))<((t0.c86))))-(((t0.c32) NOT BETWEEN (t0.c86) AND (v0.c2))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((((((t0.c32))<((t0.c86))))-(((t0.c32) NOT BETWEEN (t0.c86) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c32))<((t0.c86))))-(((t0.c32) NOT BETWEEN (t0.c86) AND (v0.c2))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((((((t0.c32))<((t0.c86))))-(((t0.c32) NOT BETWEEN (t0.c86) AND (v0.c2)))));
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (CAST(v0.c2 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (CAST(v0.c2 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (CAST(v0.c2 COLLATE NOCASE AS NUMERIC));
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((((t0.c86)OR(t0.c13)))AND(t0.c32)) THEN ('' IN ()) WHEN NULL THEN CAST(t0.c32 AS BLOB) WHEN ((t0.c32) NOTNULL) THEN ((NULL)=(t0.c86)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t0.c86)OR(t0.c13)))AND(t0.c32)) THEN ('' IN ()) WHEN NULL THEN CAST(t0.c32 AS BLOB) WHEN ((t0.c32) NOTNULL) THEN ((NULL)=(t0.c86)) END) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((((t0.c86)OR(t0.c13)))AND(t0.c32)) THEN ('' IN ()) WHEN NULL THEN CAST(t0.c32 AS BLOB) WHEN ((t0.c32) NOTNULL) THEN ((NULL)=(t0.c86)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t0.c86)OR(t0.c13)))AND(t0.c32)) THEN ('' IN ()) WHEN NULL THEN CAST(t0.c32 AS BLOB) WHEN ((t0.c32) NOTNULL) THEN ((NULL)=(t0.c86)) END) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((((t0.c86)OR(t0.c13)))AND(t0.c32)) THEN ('' IN ()) WHEN NULL THEN CAST(t0.c32 AS BLOB) WHEN ((t0.c32) NOTNULL) THEN ((NULL)=(t0.c86)) END);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c13)IS(t0.c86)))=((- (vt0.c0))))) ORDER BY (LIKELIHOOD(t0.c86, 0.439340725449777) IN ())  NULLS LAST, (+ ((- (t0.c13)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c13)IS(t0.c86)))=((- (vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (LIKELIHOOD(t0.c86, 0.439340725449777) IN ())  NULLS LAST, (+ ((- (t0.c13)))) ASC);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c13)IS(t0.c86)))=((- (vt0.c0))))) ORDER BY (LIKELIHOOD(t0.c86, 0.439340725449777) IN ())  NULLS LAST, (+ ((- (t0.c13)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c13)IS(t0.c86)))=((- (vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (LIKELIHOOD(t0.c86, 0.439340725449777) IN ())  NULLS LAST, (+ ((- (t0.c13)))) ASC);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c13)IS(t0.c86)))=((- (vt0.c0))))) ORDER BY (LIKELIHOOD(t0.c86, 0.439340725449777) IN ())  NULLS LAST, (+ ((- (t0.c13)))) ASC;
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (CAST((+ (t0.c13)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (t0.c13)) AS BLOB)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (CAST((+ (t0.c13)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (t0.c13)) AS BLOB)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (CAST((+ (t0.c13)) AS BLOB));
SELECT COUNT(*) FROM v0, vt0 WHERE (0.46410820236813266) ORDER BY (CHAR(vt0.c0, v0.c1, v0.c1) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.46410820236813266) IS TRUE)  as count FROM v0, vt0 ORDER BY (CHAR(vt0.c0, v0.c1, v0.c1) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (0.46410820236813266) ORDER BY (CHAR(vt0.c0, v0.c1, v0.c1) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.46410820236813266) IS TRUE)  as count FROM v0, vt0 ORDER BY (CHAR(vt0.c0, v0.c1, v0.c1) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (0.46410820236813266) ORDER BY (CHAR(vt0.c0, v0.c1, v0.c1) IN ()) ASC  NULLS LAST;
SELECT * FROM t0, v0 WHERE ((('0.5720641829834173')IS NOT(v0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((('0.5720641829834173')IS NOT(v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((('0.5720641829834173')IS NOT(v0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((('0.5720641829834173')IS NOT(v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((('0.5720641829834173')IS NOT(v0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t0 NATURAL JOIN v0 WHERE (((((((((((vt0.c0)AND(t0.c13)))OR(t0.c13)))AND(t0.c13)))OR(t0.c13))) IS TRUE)) ORDER BY NULL ASC  NULLS LAST, ((((((t0.c32) NOT BETWEEN (vt0.c0) AND (v0.c0)))OR(((('', t0.c32, v0.c1, t0.c13, t0.c13)) BETWEEN ((vt0.c0, vt0.c0, v0.c1, t0.c13, t0.c32)) AND ((-1988404192, v0.c0, v0.c1, t0.c86, v0.c0))))))AND(SQLITE_SOURCE_ID())) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(t0.c13)))OR(t0.c13)))AND(t0.c13)))OR(t0.c13))) IS TRUE)) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN v0 ORDER BY NULL ASC  NULLS LAST, ((((((t0.c32) NOT BETWEEN (vt0.c0) AND (v0.c0)))OR(((('', t0.c32, v0.c1, t0.c13, t0.c13)) BETWEEN ((vt0.c0, vt0.c0, v0.c1, t0.c13, t0.c32)) AND ((-1988404192, v0.c0, v0.c1, t0.c86, v0.c0))))))AND(SQLITE_SOURCE_ID())) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 NATURAL JOIN v0 WHERE (((((((((((vt0.c0)AND(t0.c13)))OR(t0.c13)))AND(t0.c13)))OR(t0.c13))) IS TRUE)) ORDER BY NULL ASC  NULLS LAST, ((((((t0.c32) NOT BETWEEN (vt0.c0) AND (v0.c0)))OR(((('', t0.c32, v0.c1, t0.c13, t0.c13)) BETWEEN ((vt0.c0, vt0.c0, v0.c1, t0.c13, t0.c32)) AND ((-1988404192, v0.c0, v0.c1, t0.c86, v0.c0))))))AND(SQLITE_SOURCE_ID())) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(t0.c13)))OR(t0.c13)))AND(t0.c13)))OR(t0.c13))) IS TRUE)) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN v0 ORDER BY NULL ASC  NULLS LAST, ((((((t0.c32) NOT BETWEEN (vt0.c0) AND (v0.c0)))OR(((('', t0.c32, v0.c1, t0.c13, t0.c13)) BETWEEN ((vt0.c0, vt0.c0, v0.c1, t0.c13, t0.c32)) AND ((-1988404192, v0.c0, v0.c1, t0.c86, v0.c0))))))AND(SQLITE_SOURCE_ID())) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 NATURAL JOIN v0 WHERE (((((((((((vt0.c0)AND(t0.c13)))OR(t0.c13)))AND(t0.c13)))OR(t0.c13))) IS TRUE)) ORDER BY NULL ASC  NULLS LAST, ((((((t0.c32) NOT BETWEEN (vt0.c0) AND (v0.c0)))OR(((('', t0.c32, v0.c1, t0.c13, t0.c13)) BETWEEN ((vt0.c0, vt0.c0, v0.c1, t0.c13, t0.c32)) AND ((-1988404192, v0.c0, v0.c1, t0.c86, v0.c0))))))AND(SQLITE_SOURCE_ID())) ASC;
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (((((v0.c1)OR(((v0.c2)<<(v0.c1)))))OR(((v0.c1)>=(vt0.c0))))) ORDER BY ((vt0.c0)>=(vt0.c0)) COLLATE RTRIM, (- (v0.c0)) COLLATE RTRIM ASC  NULLS FIRST, UPPER((((1150019192))>=((x'9f96')))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c1)OR(((v0.c2)<<(v0.c1)))))OR(((v0.c1)>=(vt0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY ((vt0.c0)>=(vt0.c0)) COLLATE RTRIM, (- (v0.c0)) COLLATE RTRIM ASC  NULLS FIRST, UPPER((((1150019192))>=((x'9f96')))) ASC);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (((((v0.c1)OR(((v0.c2)<<(v0.c1)))))OR(((v0.c1)>=(vt0.c0))))) ORDER BY ((vt0.c0)>=(vt0.c0)) COLLATE RTRIM, (- (v0.c0)) COLLATE RTRIM ASC  NULLS FIRST, UPPER((((1150019192))>=((x'9f96')))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c1)OR(((v0.c2)<<(v0.c1)))))OR(((v0.c1)>=(vt0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY ((vt0.c0)>=(vt0.c0)) COLLATE RTRIM, (- (v0.c0)) COLLATE RTRIM ASC  NULLS FIRST, UPPER((((1150019192))>=((x'9f96')))) ASC);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (((((v0.c1)OR(((v0.c2)<<(v0.c1)))))OR(((v0.c1)>=(vt0.c0))))) ORDER BY ((vt0.c0)>=(vt0.c0)) COLLATE RTRIM, (- (v0.c0)) COLLATE RTRIM ASC  NULLS FIRST, UPPER((((1150019192))>=((x'9f96')))) ASC;
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (((((vt0.c0 IN ()), (v0.c0 IN (v0.c2)), ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0))))=((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, v0.c2, v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN ()), (v0.c0 IN (v0.c2)), ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0))))==((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, v0.c2, v0.c1)))) IS TRUE)  as count FROM vt0 NOT INDEXED NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (((((vt0.c0 IN ()), (v0.c0 IN (v0.c2)), ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0))))=((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, v0.c2, v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN ()), (v0.c0 IN (v0.c2)), ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0))))==((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, v0.c2, v0.c1)))) IS TRUE)  as count FROM vt0 NOT INDEXED NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (((((vt0.c0 IN ()), (v0.c0 IN (v0.c2)), ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0))))=((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, v0.c2, v0.c1))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((0.6142025507273936)%((t0.c32 IN ())))) ORDER BY (((t0.c86))!=((vt0.c0))) COLLATE BINARY, ((CAST(t0.c32 AS BLOB))+(COALESCE(DISTINCT vt0.c0, t0.c13))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.6142025507273936)%((t0.c32 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c86))!=((vt0.c0))) COLLATE BINARY, ((CAST(t0.c32 AS BLOB))+(COALESCE(DISTINCT vt0.c0, t0.c13))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((0.6142025507273936)%((t0.c32 IN ())))) ORDER BY (((t0.c86))!=((vt0.c0))) COLLATE BINARY, ((CAST(t0.c32 AS BLOB))+(COALESCE(DISTINCT vt0.c0, t0.c13))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.6142025507273936)%((t0.c32 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c86))!=((vt0.c0))) COLLATE BINARY, ((CAST(t0.c32 AS BLOB))+(COALESCE(DISTINCT vt0.c0, t0.c13))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((0.6142025507273936)%((t0.c32 IN ())))) ORDER BY (((t0.c86))!=((vt0.c0))) COLLATE BINARY, ((CAST(t0.c32 AS BLOB))+(COALESCE(DISTINCT vt0.c0, t0.c13))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (CASE CASE WHEN t0.c32 THEN t0.c86 ELSE '1345024291' END  WHEN CAST(t0.c86 AS INTEGER) THEN t0.c86 ELSE ((t0.c86) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN t0.c32 THEN t0.c86 ELSE '1345024291' END  WHEN CAST(t0.c86 AS INTEGER) THEN t0.c86 ELSE ((t0.c86) NOT NULL) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE CASE WHEN t0.c32 THEN t0.c86 ELSE '1345024291' END  WHEN CAST(t0.c86 AS INTEGER) THEN t0.c86 ELSE ((t0.c86) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN t0.c32 THEN t0.c86 ELSE '1345024291' END  WHEN CAST(t0.c86 AS INTEGER) THEN t0.c86 ELSE ((t0.c86) NOT NULL) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE CASE WHEN t0.c32 THEN t0.c86 ELSE '1345024291' END  WHEN CAST(t0.c86 AS INTEGER) THEN t0.c86 ELSE ((t0.c86) NOT NULL) END);
SELECT * FROM v0 WHERE (((((v0.c0)==(v0.c1)))%(((((((((v0.c0)OR(v0.c2)))OR(v0.c0)))AND(v0.c2)))AND(v0.c0))))) ORDER BY ((v0.c2)=(((v0.c1)GLOB(v0.c0)))) ASC  NULLS LAST, ((v0.c0 COLLATE NOCASE) IS FALSE) ASC  NULLS LAST, (((v0.c1 IN (v0.c2)))*(((v0.c0)IS NOT(0Xffffffffa167635a)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)=(v0.c1)))%(((((((((v0.c0)OR(v0.c2)))OR(v0.c0)))AND(v0.c2)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2)=(((v0.c1)GLOB(v0.c0)))) ASC  NULLS LAST, ((v0.c0 COLLATE NOCASE) IS FALSE) ASC  NULLS LAST, (((v0.c1 IN (v0.c2)))*(((v0.c0)IS NOT(0xffffffffa167635a)))) ASC);
SELECT * FROM v0 WHERE (((((v0.c0)==(v0.c1)))%(((((((((v0.c0)OR(v0.c2)))OR(v0.c0)))AND(v0.c2)))AND(v0.c0))))) ORDER BY ((v0.c2)=(((v0.c1)GLOB(v0.c0)))) ASC  NULLS LAST, ((v0.c0 COLLATE NOCASE) IS FALSE) ASC  NULLS LAST, (((v0.c1 IN (v0.c2)))*(((v0.c0)IS NOT(0Xffffffffa167635a)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)=(v0.c1)))%(((((((((v0.c0)OR(v0.c2)))OR(v0.c0)))AND(v0.c2)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2)=(((v0.c1)GLOB(v0.c0)))) ASC  NULLS LAST, ((v0.c0 COLLATE NOCASE) IS FALSE) ASC  NULLS LAST, (((v0.c1 IN (v0.c2)))*(((v0.c0)IS NOT(0xffffffffa167635a)))) ASC);
SELECT * FROM v0 WHERE (((((v0.c0)==(v0.c1)))%(((((((((v0.c0)OR(v0.c2)))OR(v0.c0)))AND(v0.c2)))AND(v0.c0))))) ORDER BY ((v0.c2)=(((v0.c1)GLOB(v0.c0)))) ASC  NULLS LAST, ((v0.c0 COLLATE NOCASE) IS FALSE) ASC  NULLS LAST, (((v0.c1 IN (v0.c2)))*(((v0.c0)IS NOT(0Xffffffffa167635a)))) ASC;
SELECT * FROM t0, v0, vt0 WHERE (((v0.c1 COLLATE NOCASE) BETWEEN (v0.c0 COLLATE BINARY) AND ((((vt0.c0)) NOT BETWEEN ((t0.c86)) AND ((vt0.c0)))))) ORDER BY CASE (NOT (t0.c86))  WHEN ((vt0.c0)%(t0.c32)) THEN t0.c32 END;
SELECT SUM(count) FROM (SELECT ((((v0.c1 COLLATE NOCASE) BETWEEN (v0.c0 COLLATE BINARY) AND ((((vt0.c0)) NOT BETWEEN ((t0.c86)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CASE (NOT (t0.c86))  WHEN ((vt0.c0)%(t0.c32)) THEN t0.c32 END);
SELECT * FROM t0, v0, vt0 WHERE (((v0.c1 COLLATE NOCASE) BETWEEN (v0.c0 COLLATE BINARY) AND ((((vt0.c0)) NOT BETWEEN ((t0.c86)) AND ((vt0.c0)))))) ORDER BY CASE (NOT (t0.c86))  WHEN ((vt0.c0)%(t0.c32)) THEN t0.c32 END;
SELECT SUM(count) FROM (SELECT ((((v0.c1 COLLATE NOCASE) BETWEEN (v0.c0 COLLATE BINARY) AND ((((vt0.c0)) NOT BETWEEN ((t0.c86)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CASE (NOT (t0.c86))  WHEN ((vt0.c0)%(t0.c32)) THEN t0.c32 END);
SELECT * FROM t0, v0, vt0 WHERE (((v0.c1 COLLATE NOCASE) BETWEEN (v0.c0 COLLATE BINARY) AND ((((vt0.c0)) NOT BETWEEN ((t0.c86)) AND ((vt0.c0)))))) ORDER BY CASE (NOT (t0.c86))  WHEN ((vt0.c0)%(t0.c32)) THEN t0.c32 END;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)GLOB(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)GLOB(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)GLOB(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)GLOB(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)GLOB(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM v0 WHERE ((((((v0.c0))>=((v0.c2))))IS(NULL))) ORDER BY ((x'') NOT BETWEEN (v0.c0) AND (v0.c1)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))>=((v0.c2))))IS(NULL))) IS TRUE)  as count FROM v0 ORDER BY ((x'') NOT BETWEEN (v0.c0) AND (v0.c1)) COLLATE RTRIM ASC);
SELECT ALL * FROM v0 WHERE ((((((v0.c0))>=((v0.c2))))IS(NULL))) ORDER BY ((x'') NOT BETWEEN (v0.c0) AND (v0.c1)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))>=((v0.c2))))IS(NULL))) IS TRUE)  as count FROM v0 ORDER BY ((x'') NOT BETWEEN (v0.c0) AND (v0.c1)) COLLATE RTRIM ASC);
SELECT ALL * FROM v0 WHERE ((((((v0.c0))>=((v0.c2))))IS(NULL))) ORDER BY ((x'') NOT BETWEEN (v0.c0) AND (v0.c1)) COLLATE RTRIM ASC;
SELECT * FROM v0 WHERE (v0.c1) ORDER BY (~ ((v0.c2 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY (~ ((v0.c2 IN ())))  NULLS FIRST);
SELECT * FROM v0 WHERE (v0.c1) ORDER BY (~ ((v0.c2 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY (~ ((v0.c2 IN ())))  NULLS FIRST);
SELECT * FROM v0 WHERE (v0.c1) ORDER BY (~ ((v0.c2 IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0 WHERE (((vt0.c0)<<(((vt0.c0) NOT BETWEEN (1.157146493E9) AND (t0.c32)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<<(((vt0.c0) NOT BETWEEN (1.157146493E9) AND (t0.c32))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0 WHERE (((vt0.c0)<<(((vt0.c0) NOT BETWEEN (1.157146493E9) AND (t0.c32)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<<(((vt0.c0) NOT BETWEEN (1.157146493E9) AND (t0.c32))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0 WHERE (((vt0.c0)<<(((vt0.c0) NOT BETWEEN (1.157146493E9) AND (t0.c32)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON t0.c13 WHERE (0.37061878934698433);
SELECT SUM(count) FROM (SELECT ALL ((0.37061878934698433) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON t0.c13);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON t0.c13 WHERE (0.37061878934698433);
SELECT SUM(count) FROM (SELECT ALL ((0.37061878934698433) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON t0.c13);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON t0.c13 WHERE (0.37061878934698433);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST((~ (v0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (v0.c1)) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST((~ (v0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (v0.c1)) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST((~ (v0.c1)) AS TEXT));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END  WHEN ((v0.c1)>>(v0.c2)) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c2)) ELSE CHAR(v0.c2, 0.5955123792953415, v0.c1, v0.c2, v0.c0) END) ORDER BY v0.c0, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END  WHEN ((v0.c1)>>(v0.c2)) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c2)) ELSE CHAR(v0.c2, 0.5955123792953415, v0.c1, v0.c2, v0.c0) END) IS TRUE)  as count FROM v0 ORDER BY v0.c0, v0.c0 DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END  WHEN ((v0.c1)>>(v0.c2)) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c2)) ELSE CHAR(v0.c2, 0.5955123792953415, v0.c1, v0.c2, v0.c0) END) ORDER BY v0.c0, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END  WHEN ((v0.c1)>>(v0.c2)) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c2)) ELSE CHAR(v0.c2, 0.5955123792953415, v0.c1, v0.c2, v0.c0) END) IS TRUE)  as count FROM v0 ORDER BY v0.c0, v0.c0 DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END  WHEN ((v0.c1)>>(v0.c2)) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c2)) ELSE CHAR(v0.c2, 0.5955123792953415, v0.c1, v0.c2, v0.c0) END) ORDER BY v0.c0, v0.c0 DESC;
SELECT * FROM v0 WHERE (CASE v0.c2  WHEN v0.c0 THEN v0.c2 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE v0.c2  WHEN v0.c0 THEN v0.c2 END COLLATE BINARY) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT * FROM v0 WHERE (CASE v0.c2  WHEN v0.c0 THEN v0.c2 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE v0.c2  WHEN v0.c0 THEN v0.c2 END COLLATE BINARY) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT * FROM v0 WHERE (CASE v0.c2  WHEN v0.c0 THEN v0.c2 END COLLATE BINARY);
SELECT ALL * FROM v0, vt0 NATURAL JOIN t0 WHERE (CASE (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((0.6786844731275609)))  WHEN (+ (t0.c32)) THEN CASE v0.c1  WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END END) ORDER BY vt0.c0 COLLATE NOCASE  NULLS FIRST, NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((0.6786844731275609)))  WHEN (+ (t0.c32)) THEN CASE v0.c1  WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END END) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN t0 ORDER BY vt0.c0 COLLATE NOCASE  NULLS FIRST, NULL DESC);
SELECT ALL * FROM v0, vt0 NATURAL JOIN t0 WHERE (CASE (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((0.6786844731275609)))  WHEN (+ (t0.c32)) THEN CASE v0.c1  WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END END) ORDER BY vt0.c0 COLLATE NOCASE  NULLS FIRST, NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((0.6786844731275609)))  WHEN (+ (t0.c32)) THEN CASE v0.c1  WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END END) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN t0 ORDER BY vt0.c0 COLLATE NOCASE  NULLS FIRST, NULL DESC);
SELECT ALL * FROM v0, vt0 NATURAL JOIN t0 WHERE (CASE (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((0.6786844731275609)))  WHEN (+ (t0.c32)) THEN CASE v0.c1  WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END END) ORDER BY vt0.c0 COLLATE NOCASE  NULLS FIRST, NULL DESC;
