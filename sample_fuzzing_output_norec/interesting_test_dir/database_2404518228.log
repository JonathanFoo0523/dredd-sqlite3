-- Time: 2024/06/09 20:20:44
-- Database: database28
-- Database version: 3.40.0
-- seed value: 2404518228
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 0ms;
COMMIT; -- 3ms;
ANALYZE; -- 0ms;
CREATE TEMP TABLE t0 (c0 BLOB , c1 BLOB , c2 BLOB ); -- 0ms;
PRAGMA main.busy_timeout = 843284056475275905; -- 0ms;
UPDATE OR IGNORE t0 SET c2='0'; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='K'; -- 0ms;
PRAGMA ignore_check_constraints = true; -- 4ms;
PRAGMA temp.checkpoint_fullfsync = false; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c2 TO c42; -- 0ms;
PRAGMA temp.journal_size_limit = 0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 5ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
CREATE UNIQUE INDEX i51 ON t0(c42,0.9877157898156876 COLLATE BINARY DESC,(- ((~ (c42)))) COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
ALTER TABLE t0 ADD COLUMN c67 BLOB COLLATE RTRIM; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX i51; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ANALYZE; -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
REINDEX  vt0; -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 788299395); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=14'); -- 0ms;
PRAGMA mmap_size; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '63174'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-22997979,15');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
REINDEX  vt0; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
CREATE INDEX i56 ON t0(((((COALESCE(DISTINCT c0, c42))AND(c42 COLLATE NOCASE)))AND(0.9105119889827002)),(~ (((((c67)AND(c0)))OR(c0)))) ASC,((((((((c0)OR((+ (c42)))))OR(CAST(c42 AS REAL))))OR((((c0)) NOT BETWEEN (('0.9877157898156876')) AND ((c1))))))AND(((((c1)OR(NULL)))AND(c0)))) DESC,JULIANDAY((((c42))<(('^p'))), (c0 IN ()), ((c1)<=(c67))) DESC); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 722123087); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 877098794); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ALTER TABLE t0 ADD COLUMN c87 REAL; -- 0ms;
REINDEX; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '' THEN x'' END)>=(CASE NULL  WHEN 0Xfffffffffea11425 THEN x'' END)); -- 0ms;
PRAGMA main.defer_foreign_keys = false; -- 0ms;
ANALYZE i56; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA optimize; -- 0ms;
PRAGMA temp.wal_autocheckpoint = 750215478184827883; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.automatic_index; -- 0ms;
COMMIT; -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '56321'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '42138'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 2ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX; -- 1ms;
DROP TABLE t1; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '52446'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=15'); -- 0ms;
PRAGMA temp.wal_autocheckpoint = 8303611951601663974; -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA main.secure_delete; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-563421381,2');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
PRAGMA main.optimize; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT ALL (- (((x'')-(vt0.c0)))), ((CAST(0.05697921186813737 AS REAL))AND(CAST(vt0.c0 AS REAL))), CAST(((rt0.c1) IS TRUE) AS NUMERIC) FROM vt0, rt0; -- 2ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA cache_spill; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM temp; -- 1ms;
REINDEX NOCASE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE rt0 SET (c1)=('0.9877157898156876') WHERE ((((rt0.c1)OR((rt0.c0 IN ()))))OR(((rt0.c2)%(0.9105119889827002)))); -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 3ms;
INSERT INTO vt0(vt0) VALUES('merge=-563421381,3');\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((NOT (v0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (v0.c2)) AS TEXT)) IS TRUE)  as count FROM v0 NOT INDEXED, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((NOT (v0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (v0.c2)) AS TEXT)) IS TRUE)  as count FROM v0 NOT INDEXED, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((NOT (v0.c2)) AS TEXT));
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN CAST(x'' AS NUMERIC) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN CAST(x'' AS NUMERIC) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN CAST(x'' AS NUMERIC) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN CAST(x'' AS NUMERIC) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN CAST(x'' AS NUMERIC) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 END);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((TRIM(vt0.c0)) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND ((((rt0.c2))<>((rt0.c0)))))) ORDER BY CASE ((v0.c2)IS NOT(v0.c2))  WHEN x'dd37c9e9' THEN (NOT (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(vt0.c0)) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND ((((rt0.c2))<>((rt0.c0)))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE ((v0.c2)IS NOT(v0.c2))  WHEN x'dd37c9e9' THEN (NOT (vt0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((TRIM(vt0.c0)) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND ((((rt0.c2))<>((rt0.c0)))))) ORDER BY CASE ((v0.c2)IS NOT(v0.c2))  WHEN x'dd37c9e9' THEN (NOT (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(vt0.c0)) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND ((((rt0.c2))<>((rt0.c0)))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE ((v0.c2)IS NOT(v0.c2))  WHEN x'dd37c9e9' THEN (NOT (vt0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((TRIM(vt0.c0)) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND ((((rt0.c2))<>((rt0.c0)))))) ORDER BY CASE ((v0.c2)IS NOT(v0.c2))  WHEN x'dd37c9e9' THEN (NOT (vt0.c0)) END  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((0.06704035076210124)<(x'')) IN ())) ORDER BY (v0.c1 COLLATE BINARY IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((0.06704035076210124)<(x'')) IN ())) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (v0.c1 COLLATE BINARY IN ()) ASC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((0.06704035076210124)<(x'')) IN ())) ORDER BY (v0.c1 COLLATE BINARY IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((0.06704035076210124)<(x'')) IN ())) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (v0.c1 COLLATE BINARY IN ()) ASC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((0.06704035076210124)<(x'')) IN ())) ORDER BY (v0.c1 COLLATE BINARY IN ()) ASC;
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON v0.c0 WHERE (x'') ORDER BY -5.63421381E8;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON v0.c0 ORDER BY -5.63421381E8);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON v0.c0 WHERE (x'') ORDER BY -5.63421381E8;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON v0.c0 ORDER BY -5.63421381E8);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON v0.c0 WHERE (x'') ORDER BY -5.63421381E8;
SELECT ALL * FROM rt0, v0, vt0 WHERE (GLOB(((((rt0.c1)OR(v0.c2)))OR(v0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((GLOB(((((rt0.c1)OR(v0.c2)))OR(v0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (GLOB(((((rt0.c1)OR(v0.c2)))OR(v0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((GLOB(((((rt0.c1)OR(v0.c2)))OR(v0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (GLOB(((((rt0.c1)OR(v0.c2)))OR(v0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0))));
SELECT ALL * FROM vt0, v0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) BETWEEN ((v0.c1 IN (rt0.c1))) AND (rt0.c0))) ORDER BY ((DATE(rt0.c0, rt0.c2, v0.c0))OR((((v0.c0))==((vt0.c0)))))  NULLS LAST, ((((((((((rt0.c0)IS(vt0.c0)))OR((rt0.c1 IN (v0.c2)))))OR(0.6414623951989835)))OR((((v0.c1))<>((v0.c1))))))OR('-22997979'));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER)) BETWEEN ((v0.c1 IN (rt0.c1))) AND (rt0.c0))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((DATE(rt0.c0, rt0.c2, v0.c0))OR((((v0.c0))=((vt0.c0)))))  NULLS LAST, ((((((((((rt0.c0)IS(vt0.c0)))OR((rt0.c1 IN (v0.c2)))))OR(0.6414623951989835)))OR((((v0.c1))<>((v0.c1))))))OR('-22997979')));
SELECT ALL * FROM vt0, v0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) BETWEEN ((v0.c1 IN (rt0.c1))) AND (rt0.c0))) ORDER BY ((DATE(rt0.c0, rt0.c2, v0.c0))OR((((v0.c0))==((vt0.c0)))))  NULLS LAST, ((((((((((rt0.c0)IS(vt0.c0)))OR((rt0.c1 IN (v0.c2)))))OR(0.6414623951989835)))OR((((v0.c1))<>((v0.c1))))))OR('-22997979'));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER)) BETWEEN ((v0.c1 IN (rt0.c1))) AND (rt0.c0))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((DATE(rt0.c0, rt0.c2, v0.c0))OR((((v0.c0))=((vt0.c0)))))  NULLS LAST, ((((((((((rt0.c0)IS(vt0.c0)))OR((rt0.c1 IN (v0.c2)))))OR(0.6414623951989835)))OR((((v0.c1))<>((v0.c1))))))OR('-22997979')));
SELECT ALL * FROM vt0, v0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) BETWEEN ((v0.c1 IN (rt0.c1))) AND (rt0.c0))) ORDER BY ((DATE(rt0.c0, rt0.c2, v0.c0))OR((((v0.c0))==((vt0.c0)))))  NULLS LAST, ((((((((((rt0.c0)IS(vt0.c0)))OR((rt0.c1 IN (v0.c2)))))OR(0.6414623951989835)))OR((((v0.c1))<>((v0.c1))))))OR('-22997979'));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((((rt0.c0)<=(rt0.c0)))>(((((rt0.c2)OR(rt0.c1)))OR(v0.c2))))) ORDER BY (CASE rt0.c0  WHEN v0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN v0.c0 END IN (CASE 0.010993812652406398  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END, ((((((((v0.c2)OR(v0.c2)))OR(v0.c2)))AND(rt0.c2)))OR(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<=(rt0.c0)))>(((((rt0.c2)OR(rt0.c1)))OR(v0.c2))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (CASE rt0.c0  WHEN v0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN v0.c0 END IN (CASE 0.010993812652406398  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END, ((((((((v0.c2)OR(v0.c2)))OR(v0.c2)))AND(rt0.c2)))OR(v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((((rt0.c0)<=(rt0.c0)))>(((((rt0.c2)OR(rt0.c1)))OR(v0.c2))))) ORDER BY (CASE rt0.c0  WHEN v0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN v0.c0 END IN (CASE 0.010993812652406398  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END, ((((((((v0.c2)OR(v0.c2)))OR(v0.c2)))AND(rt0.c2)))OR(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<=(rt0.c0)))>(((((rt0.c2)OR(rt0.c1)))OR(v0.c2))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (CASE rt0.c0  WHEN v0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN v0.c0 END IN (CASE 0.010993812652406398  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END, ((((((((v0.c2)OR(v0.c2)))OR(v0.c2)))AND(rt0.c2)))OR(v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((((rt0.c0)<=(rt0.c0)))>(((((rt0.c2)OR(rt0.c1)))OR(v0.c2))))) ORDER BY (CASE rt0.c0  WHEN v0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN v0.c0 END IN (CASE 0.010993812652406398  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END, ((((((((v0.c2)OR(v0.c2)))OR(v0.c2)))AND(rt0.c2)))OR(v0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN ((vt0.c0 IN ('ls', rt0.c2))) AND (LIKE(v0.c0, rt0.c0, '-')))) ORDER BY (NOT (NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) BETWEEN ((vt0.c0 IN ('ls', rt0.c2))) AND (LIKE(v0.c0, rt0.c0, '-')))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (NOT (NULL)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN ((vt0.c0 IN ('ls', rt0.c2))) AND (LIKE(v0.c0, rt0.c0, '-')))) ORDER BY (NOT (NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) BETWEEN ((vt0.c0 IN ('ls', rt0.c2))) AND (LIKE(v0.c0, rt0.c0, '-')))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (NOT (NULL)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN ((vt0.c0 IN ('ls', rt0.c2))) AND (LIKE(v0.c0, rt0.c0, '-')))) ORDER BY (NOT (NULL)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((+ (CASE vt0.c0  WHEN x'4111' THEN vt0.c0 ELSE v0.c0 END))) ORDER BY (CASE WHEN v0.c1 THEN vt0.c0 END IN (json_array(v0.c1, v0.c2))), CAST(((((v0.c2)OR(v0.c2)))OR(v0.c2)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE vt0.c0  WHEN x'4111' THEN vt0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY (CASE WHEN v0.c1 THEN vt0.c0 END IN (json_array(v0.c1, v0.c2))), CAST(((((v0.c2)OR(v0.c2)))OR(v0.c2)) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((+ (CASE vt0.c0  WHEN x'4111' THEN vt0.c0 ELSE v0.c0 END))) ORDER BY (CASE WHEN v0.c1 THEN vt0.c0 END IN (json_array(v0.c1, v0.c2))), CAST(((((v0.c2)OR(v0.c2)))OR(v0.c2)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE vt0.c0  WHEN x'4111' THEN vt0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY (CASE WHEN v0.c1 THEN vt0.c0 END IN (json_array(v0.c1, v0.c2))), CAST(((((v0.c2)OR(v0.c2)))OR(v0.c2)) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((+ (CASE vt0.c0  WHEN x'4111' THEN vt0.c0 ELSE v0.c0 END))) ORDER BY (CASE WHEN v0.c1 THEN vt0.c0 END IN (json_array(v0.c1, v0.c2))), CAST(((((v0.c2)OR(v0.c2)))OR(v0.c2)) AS REAL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(vt0.c0)) ORDER BY vt0.c0 ASC  NULLS LAST, IFNULL(((vt0.c0) IS FALSE), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('9'))) DESC  NULLS LAST, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST, IFNULL(((vt0.c0) IS FALSE), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('9'))) DESC  NULLS LAST, vt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(vt0.c0)) ORDER BY vt0.c0 ASC  NULLS LAST, IFNULL(((vt0.c0) IS FALSE), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('9'))) DESC  NULLS LAST, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST, IFNULL(((vt0.c0) IS FALSE), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('9'))) DESC  NULLS LAST, vt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(vt0.c0)) ORDER BY vt0.c0 ASC  NULLS LAST, IFNULL(((vt0.c0) IS FALSE), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('9'))) DESC  NULLS LAST, vt0.c0 DESC;
SELECT * FROM v0 WHERE (((((CASE v0.c2  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(NULL)))OR(CASE WHEN NULL THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((CASE v0.c2  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(NULL)))OR(CASE WHEN NULL THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((CASE v0.c2  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(NULL)))OR(CASE WHEN NULL THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((CASE v0.c2  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(NULL)))OR(CASE WHEN NULL THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((CASE v0.c2  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(NULL)))OR(CASE WHEN NULL THEN v0.c0 END)));
SELECT * FROM v0, vt0, rt0 WHERE ((- (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0))))) ORDER BY ((LIKELIHOOD(rt0.c1, 0.3136602020724063)) NOT BETWEEN ((v0.c1 IN ())) AND ((((-563421381)) NOT BETWEEN ((v0.c1)) AND ((rt0.c2)))))  NULLS LAST, json((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((LIKELIHOOD(rt0.c1, 0.3136602020724063)) NOT BETWEEN ((v0.c1 IN ())) AND ((((-563421381)) NOT BETWEEN ((v0.c1)) AND ((rt0.c2)))))  NULLS LAST, json((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))));
SELECT * FROM v0, vt0, rt0 WHERE ((- (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0))))) ORDER BY ((LIKELIHOOD(rt0.c1, 0.3136602020724063)) NOT BETWEEN ((v0.c1 IN ())) AND ((((-563421381)) NOT BETWEEN ((v0.c1)) AND ((rt0.c2)))))  NULLS LAST, json((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((LIKELIHOOD(rt0.c1, 0.3136602020724063)) NOT BETWEEN ((v0.c1 IN ())) AND ((((-563421381)) NOT BETWEEN ((v0.c1)) AND ((rt0.c2)))))  NULLS LAST, json((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))));
SELECT * FROM v0, vt0, rt0 WHERE ((- (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0))))) ORDER BY ((LIKELIHOOD(rt0.c1, 0.3136602020724063)) NOT BETWEEN ((v0.c1 IN ())) AND ((((-563421381)) NOT BETWEEN ((v0.c1)) AND ((rt0.c2)))))  NULLS LAST, json((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))));
SELECT ALL * FROM v0 WHERE ((NOT (v0.c0 COLLATE RTRIM))) ORDER BY (- (0.8030869402944095)), CASE WHEN (- (v0.c2)) THEN ((v0.c0) IS TRUE) WHEN COALESCE(x'', v0.c1) THEN (((v0.c2, v0.c1, NULL, v0.c2, v0.c1))>=((v0.c0, v0.c1, v0.c2, v0.c1, v0.c1))) WHEN ((((((((((((v0.c0)OR(v0.c1)))OR(v0.c2)))AND(v0.c2)))OR(v0.c2)))OR(v0.c1)))OR(v0.c2)) THEN (((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) ELSE CASE v0.c1  WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY (- (0.8030869402944095)), CASE WHEN (- (v0.c2)) THEN ((v0.c0) IS TRUE) WHEN COALESCE(x'', v0.c1) THEN (((v0.c2, v0.c1, NULL, v0.c2, v0.c1))>=((v0.c0, v0.c1, v0.c2, v0.c1, v0.c1))) WHEN ((((((((((((v0.c0)OR(v0.c1)))OR(v0.c2)))AND(v0.c2)))OR(v0.c2)))OR(v0.c1)))OR(v0.c2)) THEN (((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) ELSE CASE v0.c1  WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END END ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((NOT (v0.c0 COLLATE RTRIM))) ORDER BY (- (0.8030869402944095)), CASE WHEN (- (v0.c2)) THEN ((v0.c0) IS TRUE) WHEN COALESCE(x'', v0.c1) THEN (((v0.c2, v0.c1, NULL, v0.c2, v0.c1))>=((v0.c0, v0.c1, v0.c2, v0.c1, v0.c1))) WHEN ((((((((((((v0.c0)OR(v0.c1)))OR(v0.c2)))AND(v0.c2)))OR(v0.c2)))OR(v0.c1)))OR(v0.c2)) THEN (((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) ELSE CASE v0.c1  WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY (- (0.8030869402944095)), CASE WHEN (- (v0.c2)) THEN ((v0.c0) IS TRUE) WHEN COALESCE(x'', v0.c1) THEN (((v0.c2, v0.c1, NULL, v0.c2, v0.c1))>=((v0.c0, v0.c1, v0.c2, v0.c1, v0.c1))) WHEN ((((((((((((v0.c0)OR(v0.c1)))OR(v0.c2)))AND(v0.c2)))OR(v0.c2)))OR(v0.c1)))OR(v0.c2)) THEN (((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) ELSE CASE v0.c1  WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END END ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((NOT (v0.c0 COLLATE RTRIM))) ORDER BY (- (0.8030869402944095)), CASE WHEN (- (v0.c2)) THEN ((v0.c0) IS TRUE) WHEN COALESCE(x'', v0.c1) THEN (((v0.c2, v0.c1, NULL, v0.c2, v0.c1))>=((v0.c0, v0.c1, v0.c2, v0.c1, v0.c1))) WHEN ((((((((((((v0.c0)OR(v0.c1)))OR(v0.c2)))AND(v0.c2)))OR(v0.c2)))OR(v0.c1)))OR(v0.c2)) THEN (((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) ELSE CASE v0.c1  WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END END ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)==(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)==(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)*(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((UNLIKELY(vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((UNLIKELY(vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((UNLIKELY(vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) IS TRUE))));
SELECT * FROM rt0 NOT INDEXED WHERE (rt0.c0) ORDER BY (+ ((((rt0.c2))>=((rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (+ ((((rt0.c2))>=((rt0.c1))))) ASC  NULLS LAST);
SELECT * FROM rt0 NOT INDEXED WHERE (rt0.c0) ORDER BY (+ ((((rt0.c2))>=((rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (+ ((((rt0.c2))>=((rt0.c1))))) ASC  NULLS LAST);
SELECT * FROM rt0 NOT INDEXED WHERE (rt0.c0) ORDER BY (+ ((((rt0.c2))>=((rt0.c1))))) ASC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (((((((((((rt0.c1)AND(v0.c2)))AND(v0.c0)))OR(v0.c1)))OR(rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(v0.c2)))AND(v0.c0)))OR(v0.c1)))OR(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((((((((rt0.c1)AND(v0.c2)))AND(v0.c0)))OR(v0.c1)))OR(rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(v0.c2)))AND(v0.c0)))OR(v0.c1)))OR(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((((((((rt0.c1)AND(v0.c2)))AND(v0.c0)))OR(v0.c1)))OR(rt0.c1))) NOT NULL));
SELECT ALL * FROM vt0, v0, rt0 WHERE ((+ ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((+ ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((+ ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT * FROM vt0 WHERE (CAST((~ (NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (NULL)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((~ (NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (NULL)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((~ (NULL)) AS INTEGER));
SELECT * FROM v0 WHERE (((v0.c2 COLLATE BINARY) BETWEEN ((~ (v0.c0))) AND (v0.c1))) ORDER BY ((('522662679')) BETWEEN ((((v0.c2)<=(v0.c2)))) AND ((CAST(v0.c0 AS INTEGER)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE BINARY) BETWEEN ((~ (v0.c0))) AND (v0.c1))) IS TRUE)  as count FROM v0 ORDER BY ((('522662679')) BETWEEN ((((v0.c2)<=(v0.c2)))) AND ((CAST(v0.c0 AS INTEGER)))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((v0.c2 COLLATE BINARY) BETWEEN ((~ (v0.c0))) AND (v0.c1))) ORDER BY ((('522662679')) BETWEEN ((((v0.c2)<=(v0.c2)))) AND ((CAST(v0.c0 AS INTEGER)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE BINARY) BETWEEN ((~ (v0.c0))) AND (v0.c1))) IS TRUE)  as count FROM v0 ORDER BY ((('522662679')) BETWEEN ((((v0.c2)<=(v0.c2)))) AND ((CAST(v0.c0 AS INTEGER)))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((v0.c2 COLLATE BINARY) BETWEEN ((~ (v0.c0))) AND (v0.c1))) ORDER BY ((('522662679')) BETWEEN ((((v0.c2)<=(v0.c2)))) AND ((CAST(v0.c0 AS INTEGER)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), vt0.c0 COLLATE BINARY, SQLITE_COMPILEOPTION_GET(NULL))) AND ((((vt0.c0)|(vt0.c0)), ((vt0.c0)/(vt0.c0)), vt0.c0)))) ORDER BY (+ (((vt0.c0)GLOB(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), vt0.c0 COLLATE BINARY, SQLITE_COMPILEOPTION_GET(NULL))) AND ((((vt0.c0)|(vt0.c0)), ((vt0.c0)/(vt0.c0)), vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0)GLOB(vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), vt0.c0 COLLATE BINARY, SQLITE_COMPILEOPTION_GET(NULL))) AND ((((vt0.c0)|(vt0.c0)), ((vt0.c0)/(vt0.c0)), vt0.c0)))) ORDER BY (+ (((vt0.c0)GLOB(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), vt0.c0 COLLATE BINARY, SQLITE_COMPILEOPTION_GET(NULL))) AND ((((vt0.c0)|(vt0.c0)), ((vt0.c0)/(vt0.c0)), vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0)GLOB(vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), vt0.c0 COLLATE BINARY, SQLITE_COMPILEOPTION_GET(NULL))) AND ((((vt0.c0)|(vt0.c0)), ((vt0.c0)/(vt0.c0)), vt0.c0)))) ORDER BY (+ (((vt0.c0)GLOB(vt0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)%(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)%(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)%(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)%(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)%(vt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0)>>((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>>((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0)>>((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>>((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0)>>((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((CAST(rt0.c2 AS TEXT))<(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((((vt0.c0)=(rt0.c1)))OR(((vt0.c0) BETWEEN (v0.c2) AND (rt0.c2)))))AND(((v0.c1) BETWEEN (rt0.c2) AND (v0.c0)))), ((('-1176158208', v0.c2, rt0.c1)) BETWEEN ((((-1054508058)&(rt0.c1)), ((vt0.c0) BETWEEN (v0.c2) AND (v0.c0)), ((((((((vt0.c0)AND(NULL)))OR(v0.c2)))OR(v0.c1)))AND(v0.c0)))) AND ((((((v0.c2)AND(v0.c1)))OR(rt0.c1)), STRFTIME(vt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c1), CAST(v0.c0 AS REAL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS TEXT))<(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((((vt0.c0)==(rt0.c1)))OR(((vt0.c0) BETWEEN (v0.c2) AND (rt0.c2)))))AND(((v0.c1) BETWEEN (rt0.c2) AND (v0.c0)))), ((('-1176158208', v0.c2, rt0.c1)) BETWEEN ((((-1054508058)&(rt0.c1)), ((vt0.c0) BETWEEN (v0.c2) AND (v0.c0)), ((((((((vt0.c0)AND(NULL)))OR(v0.c2)))OR(v0.c1)))AND(v0.c0)))) AND ((((((v0.c2)AND(v0.c1)))OR(rt0.c1)), STRFTIME(vt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c1), CAST(v0.c0 AS REAL))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((CAST(rt0.c2 AS TEXT))<(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((((vt0.c0)=(rt0.c1)))OR(((vt0.c0) BETWEEN (v0.c2) AND (rt0.c2)))))AND(((v0.c1) BETWEEN (rt0.c2) AND (v0.c0)))), ((('-1176158208', v0.c2, rt0.c1)) BETWEEN ((((-1054508058)&(rt0.c1)), ((vt0.c0) BETWEEN (v0.c2) AND (v0.c0)), ((((((((vt0.c0)AND(NULL)))OR(v0.c2)))OR(v0.c1)))AND(v0.c0)))) AND ((((((v0.c2)AND(v0.c1)))OR(rt0.c1)), STRFTIME(vt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c1), CAST(v0.c0 AS REAL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS TEXT))<(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((((vt0.c0)==(rt0.c1)))OR(((vt0.c0) BETWEEN (v0.c2) AND (rt0.c2)))))AND(((v0.c1) BETWEEN (rt0.c2) AND (v0.c0)))), ((('-1176158208', v0.c2, rt0.c1)) BETWEEN ((((-1054508058)&(rt0.c1)), ((vt0.c0) BETWEEN (v0.c2) AND (v0.c0)), ((((((((vt0.c0)AND(NULL)))OR(v0.c2)))OR(v0.c1)))AND(v0.c0)))) AND ((((((v0.c2)AND(v0.c1)))OR(rt0.c1)), STRFTIME(vt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c1), CAST(v0.c0 AS REAL))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((CAST(rt0.c2 AS TEXT))<(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((((vt0.c0)=(rt0.c1)))OR(((vt0.c0) BETWEEN (v0.c2) AND (rt0.c2)))))AND(((v0.c1) BETWEEN (rt0.c2) AND (v0.c0)))), ((('-1176158208', v0.c2, rt0.c1)) BETWEEN ((((-1054508058)&(rt0.c1)), ((vt0.c0) BETWEEN (v0.c2) AND (v0.c0)), ((((((((vt0.c0)AND(NULL)))OR(v0.c2)))OR(v0.c1)))AND(v0.c0)))) AND ((((((v0.c2)AND(v0.c1)))OR(rt0.c1)), STRFTIME(vt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c1), CAST(v0.c0 AS REAL))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND ((((x'') NOTNULL)))) ASC  NULLS LAST, LTRIM(vt0.c0, vt0.c0) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND ((((x'') NOTNULL)))) ASC  NULLS LAST, LTRIM(vt0.c0, vt0.c0) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND ((((x'') NOTNULL)))) ASC  NULLS LAST, LTRIM(vt0.c0, vt0.c0) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND ((((x'') NOTNULL)))) ASC  NULLS LAST, LTRIM(vt0.c0, vt0.c0) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND ((((x'') NOTNULL)))) ASC  NULLS LAST, LTRIM(vt0.c0, vt0.c0) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(IFNULL(v0.c2, rt0.c0) AS BLOB) LEFT OUTER JOIN v0 ON rt0.c2 WHERE ((NOT ((rt0.c1 IN (rt0.c2, rt0.c1, '^p')))));
SELECT SUM(count) FROM (SELECT (((NOT ((rt0.c1 IN (rt0.c2, rt0.c1, '^p'))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(IFNULL(v0.c2, rt0.c0) AS BLOB) LEFT OUTER JOIN v0 ON rt0.c2);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(IFNULL(v0.c2, rt0.c0) AS BLOB) LEFT OUTER JOIN v0 ON rt0.c2 WHERE ((NOT ((rt0.c1 IN (rt0.c2, rt0.c1, '^p')))));
SELECT SUM(count) FROM (SELECT (((NOT ((rt0.c1 IN (rt0.c2, rt0.c1, '^p'))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(IFNULL(v0.c2, rt0.c0) AS BLOB) LEFT OUTER JOIN v0 ON rt0.c2);
SELECT COUNT(*) FROM v0 WHERE (CAST(CASE WHEN v0.c1 THEN v0.c1 END AS REAL)) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c1 THEN v0.c1 END AS REAL)) IS TRUE)  as count FROM v0 ORDER BY v0.c0);
SELECT COUNT(*) FROM v0 WHERE (CAST(CASE WHEN v0.c1 THEN v0.c1 END AS REAL)) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c1 THEN v0.c1 END AS REAL)) IS TRUE)  as count FROM v0 ORDER BY v0.c0);
SELECT COUNT(*) FROM v0 WHERE (CAST(CASE WHEN v0.c1 THEN v0.c1 END AS REAL)) ORDER BY v0.c0;
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((((((((v0.c1))<>((rt0.c2))))AND((((rt0.c0, x'', rt0.c2))<((vt0.c0, rt0.c2, v0.c1))))))OR(((v0.c2) BETWEEN (vt0.c0) AND (v0.c2)))))OR((NOT (v0.c1)))))OR(NULL COLLATE RTRIM))) ORDER BY (((((vt0.c0)OR(v0.c0)))AND(rt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((v0.c1))!=((rt0.c2))))AND((((rt0.c0, x'', rt0.c2))<((vt0.c0, rt0.c2, v0.c1))))))OR(((v0.c2) BETWEEN (vt0.c0) AND (v0.c2)))))OR((NOT (v0.c1)))))OR(NULL COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((((vt0.c0)OR(v0.c0)))AND(rt0.c0)) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((((((((v0.c1))<>((rt0.c2))))AND((((rt0.c0, x'', rt0.c2))<((vt0.c0, rt0.c2, v0.c1))))))OR(((v0.c2) BETWEEN (vt0.c0) AND (v0.c2)))))OR((NOT (v0.c1)))))OR(NULL COLLATE RTRIM))) ORDER BY (((((vt0.c0)OR(v0.c0)))AND(rt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((v0.c1))!=((rt0.c2))))AND((((rt0.c0, x'', rt0.c2))<((vt0.c0, rt0.c2, v0.c1))))))OR(((v0.c2) BETWEEN (vt0.c0) AND (v0.c2)))))OR((NOT (v0.c1)))))OR(NULL COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((((vt0.c0)OR(v0.c0)))AND(rt0.c0)) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((((((((v0.c1))<>((rt0.c2))))AND((((rt0.c0, x'', rt0.c2))<((vt0.c0, rt0.c2, v0.c1))))))OR(((v0.c2) BETWEEN (vt0.c0) AND (v0.c2)))))OR((NOT (v0.c1)))))OR(NULL COLLATE RTRIM))) ORDER BY (((((vt0.c0)OR(v0.c0)))AND(rt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE (((CAST(v0.c0 AS TEXT))<<(((vt0.c0)+(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT))<<(((vt0.c0)+(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((CAST(v0.c0 AS TEXT))<<(((vt0.c0)+(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT))<<(((vt0.c0)+(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((CAST(v0.c0 AS TEXT))<<(((vt0.c0)+(v0.c0)))));
SELECT ALL * FROM v0, rt0 WHERE ((v0.c2 IN ()) COLLATE RTRIM) ORDER BY CASE (+ (v0.c1))  WHEN ((rt0.c1)LIKE(v0.c0)) THEN (x'964f97a4' IN ()) END DESC, CASE WHEN UPPER(v0.c2) THEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) ELSE rt0.c2 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE (+ (v0.c1))  WHEN ((rt0.c1)LIKE(v0.c0)) THEN (x'964f97a4' IN ()) END DESC, CASE WHEN UPPER(v0.c2) THEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) ELSE rt0.c2 COLLATE BINARY END  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((v0.c2 IN ()) COLLATE RTRIM) ORDER BY CASE (+ (v0.c1))  WHEN ((rt0.c1)LIKE(v0.c0)) THEN (x'964f97a4' IN ()) END DESC, CASE WHEN UPPER(v0.c2) THEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) ELSE rt0.c2 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE (+ (v0.c1))  WHEN ((rt0.c1)LIKE(v0.c0)) THEN (x'964f97a4' IN ()) END DESC, CASE WHEN UPPER(v0.c2) THEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) ELSE rt0.c2 COLLATE BINARY END  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((v0.c2 IN ()) COLLATE RTRIM) ORDER BY CASE (+ (v0.c1))  WHEN ((rt0.c1)LIKE(v0.c0)) THEN (x'964f97a4' IN ()) END DESC, CASE WHEN UPPER(v0.c2) THEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) ELSE rt0.c2 COLLATE BINARY END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (json_insert(rt0.c0 COLLATE RTRIM, 0.18840183803022403, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_insert(rt0.c0 COLLATE RTRIM, 0.18840183803022403, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (json_insert(rt0.c0 COLLATE RTRIM, 0.18840183803022403, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_insert(rt0.c0 COLLATE RTRIM, 0.18840183803022403, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (json_insert(rt0.c0 COLLATE RTRIM, 0.18840183803022403, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))));
SELECT * FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) NOT NULL)))) ORDER BY (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((-1054508058)));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((-1054508058))));
SELECT * FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) NOT NULL)))) ORDER BY (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((-1054508058)));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((-1054508058))));
SELECT * FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0)) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) NOT NULL)))) ORDER BY (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((-1054508058)));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((('-1176158208' IN (v0.c0, v0.c2)))<>(((((((((rt0.c0)OR(-1276003464)))AND(0.5456529904053729)))AND(v0.c0)))OR(v0.c1))))) ORDER BY ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN ((((v0.c2, v0.c0, v0.c1, v0.c2, v0.c0))<((v0.c0, rt0.c0, rt0.c2, v0.c1, v0.c1)))) AND (CAST(v0.c2 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('-1176158208' IN (v0.c0, v0.c2)))!=(((((((((rt0.c0)OR(-1276003464)))AND(0.5456529904053729)))AND(v0.c0)))OR(v0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN ((((v0.c2, v0.c0, v0.c1, v0.c2, v0.c0))<((v0.c0, rt0.c0, rt0.c2, v0.c1, v0.c1)))) AND (CAST(v0.c2 AS NUMERIC))) ASC);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((('-1176158208' IN (v0.c0, v0.c2)))<>(((((((((rt0.c0)OR(-1276003464)))AND(0.5456529904053729)))AND(v0.c0)))OR(v0.c1))))) ORDER BY ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN ((((v0.c2, v0.c0, v0.c1, v0.c2, v0.c0))<((v0.c0, rt0.c0, rt0.c2, v0.c1, v0.c1)))) AND (CAST(v0.c2 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('-1176158208' IN (v0.c0, v0.c2)))!=(((((((((rt0.c0)OR(-1276003464)))AND(0.5456529904053729)))AND(v0.c0)))OR(v0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN ((((v0.c2, v0.c0, v0.c1, v0.c2, v0.c0))<((v0.c0, rt0.c0, rt0.c2, v0.c1, v0.c1)))) AND (CAST(v0.c2 AS NUMERIC))) ASC);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((('-1176158208' IN (v0.c0, v0.c2)))<>(((((((((rt0.c0)OR(-1276003464)))AND(0.5456529904053729)))AND(v0.c0)))OR(v0.c1))))) ORDER BY ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN ((((v0.c2, v0.c0, v0.c1, v0.c2, v0.c0))<((v0.c0, rt0.c0, rt0.c2, v0.c1, v0.c1)))) AND (CAST(v0.c2 AS NUMERIC))) ASC;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((~ (rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((~ (rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((~ (rt0.c0))) ISNULL));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON 0Xffffffff992c96df WHERE (((CAST(v0.c0 AS REAL)) NOT BETWEEN (CAST(v0.c2 AS REAL)) AND (((v0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL)) NOT BETWEEN (CAST(v0.c2 AS REAL)) AND (((v0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON 0Xffffffff992c96df);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON 0Xffffffff992c96df WHERE (((CAST(v0.c0 AS REAL)) NOT BETWEEN (CAST(v0.c2 AS REAL)) AND (((v0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL)) NOT BETWEEN (CAST(v0.c2 AS REAL)) AND (((v0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON 0Xffffffff992c96df);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON 0Xffffffff992c96df WHERE (((CAST(v0.c0 AS REAL)) NOT BETWEEN (CAST(v0.c2 AS REAL)) AND (((v0.c1) NOT NULL))));
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.6414623951989835 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)<=(vt0.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.6414623951989835 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)<=(vt0.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.6414623951989835 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)<=(vt0.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.6414623951989835 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)<=(vt0.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.6414623951989835 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)<=(vt0.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT ALL * FROM v0 WHERE ('-1365969047') ORDER BY ((((v0.c2) BETWEEN (v0.c2) AND (v0.c0))) IS FALSE), SUBSTR((((v0.c2))>=(('&띘'))), LTRIM(v0.c0)) ASC  NULLS FIRST, v0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1365969047') IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2) BETWEEN (v0.c2) AND (v0.c0))) IS FALSE), SUBSTR((((v0.c2))>=(('&띘'))), LTRIM(v0.c0)) ASC  NULLS FIRST, v0.c2 DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ('-1365969047') ORDER BY ((((v0.c2) BETWEEN (v0.c2) AND (v0.c0))) IS FALSE), SUBSTR((((v0.c2))>=(('&띘'))), LTRIM(v0.c0)) ASC  NULLS FIRST, v0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1365969047') IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2) BETWEEN (v0.c2) AND (v0.c0))) IS FALSE), SUBSTR((((v0.c2))>=(('&띘'))), LTRIM(v0.c0)) ASC  NULLS FIRST, v0.c2 DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ('-1365969047') ORDER BY ((((v0.c2) BETWEEN (v0.c2) AND (v0.c0))) IS FALSE), SUBSTR((((v0.c2))>=(('&띘'))), LTRIM(v0.c0)) ASC  NULLS FIRST, v0.c2 DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((((x'', v0.c0, v0.c2)) BETWEEN ((NULL, v0.c0, v0.c0)) AND ((v0.c2, v0.c1, v0.c1))))/(((v0.c0)*(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((x'', v0.c0, v0.c2)) BETWEEN ((NULL, v0.c0, v0.c0)) AND ((v0.c2, v0.c1, v0.c1))))/(((v0.c0)*(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((x'', v0.c0, v0.c2)) BETWEEN ((NULL, v0.c0, v0.c0)) AND ((v0.c2, v0.c1, v0.c1))))/(((v0.c0)*(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((x'', v0.c0, v0.c2)) BETWEEN ((NULL, v0.c0, v0.c0)) AND ((v0.c2, v0.c1, v0.c1))))/(((v0.c0)*(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((x'', v0.c0, v0.c2)) BETWEEN ((NULL, v0.c0, v0.c0)) AND ((v0.c2, v0.c1, v0.c1))))/(((v0.c0)*(v0.c1)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c2) ORDER BY CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c2) ORDER BY CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c2) ORDER BY CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC);
SELECT * FROM v0, rt0, vt0 WHERE (CASE WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM v0 NOT INDEXED, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (CASE WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM v0 NOT INDEXED, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (CASE WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((~ ((((rt0.c1, vt0.c0, vt0.c0, vt0.c0, v0.c1))=((v0.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c1)))))) ORDER BY NULLIF(v0.c1, vt0.c0) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c1, vt0.c0, vt0.c0, vt0.c0, v0.c1))=((v0.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY NULLIF(v0.c1, vt0.c0) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((~ ((((rt0.c1, vt0.c0, vt0.c0, vt0.c0, v0.c1))=((v0.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c1)))))) ORDER BY NULLIF(v0.c1, vt0.c0) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c1, vt0.c0, vt0.c0, vt0.c0, v0.c1))=((v0.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY NULLIF(v0.c1, vt0.c0) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((~ ((((rt0.c1, vt0.c0, vt0.c0, vt0.c0, v0.c1))=((v0.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c1)))))) ORDER BY NULLIF(v0.c1, vt0.c0) COLLATE NOCASE DESC;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2))<=((vt0.c0)))) IS FALSE) WHERE ((~ (x'86b2')) COLLATE NOCASE) ORDER BY ((rt0.c2)/('㌗8'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (x'86b2')) COLLATE NOCASE) IS TRUE)  as count FROM vt0 NOT INDEXED RIGHT OUTER JOIN rt0 ON (((((rt0.c2))<=((vt0.c0)))) IS FALSE) ORDER BY ((rt0.c2)/('㌗8'))  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2))<=((vt0.c0)))) IS FALSE) WHERE ((~ (x'86b2')) COLLATE NOCASE) ORDER BY ((rt0.c2)/('㌗8'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (x'86b2')) COLLATE NOCASE) IS TRUE)  as count FROM vt0 NOT INDEXED RIGHT OUTER JOIN rt0 ON (((((rt0.c2))<=((vt0.c0)))) IS FALSE) ORDER BY ((rt0.c2)/('㌗8'))  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2))<=((vt0.c0)))) IS FALSE) WHERE ((~ (x'86b2')) COLLATE NOCASE) ORDER BY ((rt0.c2)/('㌗8'))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0)>=(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)>=(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0)>=(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)>=(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0)>=(vt0.c0)) AS REAL));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c1, rt0.c0, rt0.c1))<((rt0.c2, rt0.c1, v0.c1))) COLLATE NOCASE) ORDER BY ((0xffffffffe0eafb0e)/((NOT (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c0, rt0.c1))<((rt0.c2, rt0.c1, v0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY ((0xffffffffe0eafb0e)/((NOT (rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c1, rt0.c0, rt0.c1))<((rt0.c2, rt0.c1, v0.c1))) COLLATE NOCASE) ORDER BY ((0xffffffffe0eafb0e)/((NOT (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c0, rt0.c1))<((rt0.c2, rt0.c1, v0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY ((0xffffffffe0eafb0e)/((NOT (rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c1, rt0.c0, rt0.c1))<((rt0.c2, rt0.c1, v0.c1))) COLLATE NOCASE) ORDER BY ((0xffffffffe0eafb0e)/((NOT (rt0.c0))))  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE ((v0.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c2 IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((v0.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c2 IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((v0.c2 IN ()));
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c1 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS REAL)) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c1 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS REAL)) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c1 AS REAL)) IS FALSE));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON CAST(rt0.c2 AS TEXT) WHERE (v0.c1) ORDER BY ((0.9053999734595035) BETWEEN ((rt0.c0 IN ())) AND (COALESCE(DISTINCT rt0.c0, v0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CAST(rt0.c2 AS TEXT) ORDER BY ((0.9053999734595035) BETWEEN ((rt0.c0 IN ())) AND (COALESCE(DISTINCT rt0.c0, v0.c1)))  NULLS LAST);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON CAST(rt0.c2 AS TEXT) WHERE (v0.c1) ORDER BY ((0.9053999734595035) BETWEEN ((rt0.c0 IN ())) AND (COALESCE(DISTINCT rt0.c0, v0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CAST(rt0.c2 AS TEXT) ORDER BY ((0.9053999734595035) BETWEEN ((rt0.c0 IN ())) AND (COALESCE(DISTINCT rt0.c0, v0.c1)))  NULLS LAST);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON CAST(rt0.c2 AS TEXT) WHERE (v0.c1) ORDER BY ((0.9053999734595035) BETWEEN ((rt0.c0 IN ())) AND (COALESCE(DISTINCT rt0.c0, v0.c1)))  NULLS LAST;
SELECT * FROM v0 WHERE (CASE ((x'') IS TRUE)  WHEN ((v0.c1)IS NOT(v0.c1)) THEN v0.c2 WHEN (NOT (v0.c2)) THEN v0.c0 COLLATE BINARY WHEN v0.c1 COLLATE NOCASE THEN 0.9877157898156876 END);
SELECT SUM(count) FROM (SELECT ((CASE ((x'') IS TRUE)  WHEN ((v0.c1)IS NOT(v0.c1)) THEN v0.c2 WHEN (NOT (v0.c2)) THEN v0.c0 COLLATE BINARY WHEN v0.c1 COLLATE NOCASE THEN 0.9877157898156876 END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE ((x'') IS TRUE)  WHEN ((v0.c1)IS NOT(v0.c1)) THEN v0.c2 WHEN (NOT (v0.c2)) THEN v0.c0 COLLATE BINARY WHEN v0.c1 COLLATE NOCASE THEN 0.9877157898156876 END);
SELECT SUM(count) FROM (SELECT ((CASE ((x'') IS TRUE)  WHEN ((v0.c1)IS NOT(v0.c1)) THEN v0.c2 WHEN (NOT (v0.c2)) THEN v0.c0 COLLATE BINARY WHEN v0.c1 COLLATE NOCASE THEN 0.9877157898156876 END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE ((x'') IS TRUE)  WHEN ((v0.c1)IS NOT(v0.c1)) THEN v0.c2 WHEN (NOT (v0.c2)) THEN v0.c0 COLLATE BINARY WHEN v0.c1 COLLATE NOCASE THEN 0.9877157898156876 END);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2) IS TRUE))));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (rt0.c2) ORDER BY (((((v0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))*(((rt0.c1)>(v0.c0)))) DESC  NULLS LAST, (+ (((v0.c1) BETWEEN (v0.c2) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((((v0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))*(((rt0.c1)>(v0.c0)))) DESC  NULLS LAST, (+ (((v0.c1) BETWEEN (v0.c2) AND (rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (rt0.c2) ORDER BY (((((v0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))*(((rt0.c1)>(v0.c0)))) DESC  NULLS LAST, (+ (((v0.c1) BETWEEN (v0.c2) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((((v0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))*(((rt0.c1)>(v0.c0)))) DESC  NULLS LAST, (+ (((v0.c1) BETWEEN (v0.c2) AND (rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (rt0.c2) ORDER BY (((((v0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))*(((rt0.c1)>(v0.c0)))) DESC  NULLS LAST, (+ (((v0.c1) BETWEEN (v0.c2) AND (rt0.c0)))) ASC;
SELECT ALL * FROM vt0, rt0 WHERE ((((((vt0.c0))=((rt0.c0)))) BETWEEN (-1365969047) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))=((rt0.c0)))) BETWEEN (-1365969047) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((vt0.c0))=((rt0.c0)))) BETWEEN (-1365969047) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))=((rt0.c0)))) BETWEEN (-1365969047) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((vt0.c0))=((rt0.c0)))) BETWEEN (-1365969047) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (+ (rt0.c2)) THEN COALESCE(DISTINCT '-22997979', rt0.c2, x'3188291f', rt0.c2) WHEN ((((rt0.c1)AND(rt0.c0)))AND('')) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END THEN (rt0.c1 IN ()) ELSE (rt0.c0 IN ()) END) ORDER BY (((((((((((((rt0.c1 IN ('')))OR((((rt0.c1))>((rt0.c0))))))OR(((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))))OR(rt0.c2)))OR((('-1725131041') IS FALSE))))AND((rt0.c2 IN (rt0.c2)))))AND(rt0.c2 COLLATE RTRIM)), ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (rt0.c2)) THEN COALESCE(DISTINCT '-22997979', rt0.c2, x'3188291f', rt0.c2) WHEN ((((rt0.c1)AND(rt0.c0)))AND('')) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END THEN (rt0.c1 IN ()) ELSE (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((((rt0.c1 IN ('')))OR((((rt0.c1))>((rt0.c0))))))OR(((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))))OR(rt0.c2)))OR((('-1725131041') IS FALSE))))AND((rt0.c2 IN (rt0.c2)))))AND(rt0.c2 COLLATE RTRIM)), ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (+ (rt0.c2)) THEN COALESCE(DISTINCT '-22997979', rt0.c2, x'3188291f', rt0.c2) WHEN ((((rt0.c1)AND(rt0.c0)))AND('')) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END THEN (rt0.c1 IN ()) ELSE (rt0.c0 IN ()) END) ORDER BY (((((((((((((rt0.c1 IN ('')))OR((((rt0.c1))>((rt0.c0))))))OR(((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))))OR(rt0.c2)))OR((('-1725131041') IS FALSE))))AND((rt0.c2 IN (rt0.c2)))))AND(rt0.c2 COLLATE RTRIM)), ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (rt0.c2)) THEN COALESCE(DISTINCT '-22997979', rt0.c2, x'3188291f', rt0.c2) WHEN ((((rt0.c1)AND(rt0.c0)))AND('')) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END THEN (rt0.c1 IN ()) ELSE (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((((rt0.c1 IN ('')))OR((((rt0.c1))>((rt0.c0))))))OR(((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))))OR(rt0.c2)))OR((('-1725131041') IS FALSE))))AND((rt0.c2 IN (rt0.c2)))))AND(rt0.c2 COLLATE RTRIM)), ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (+ (rt0.c2)) THEN COALESCE(DISTINCT '-22997979', rt0.c2, x'3188291f', rt0.c2) WHEN ((((rt0.c1)AND(rt0.c0)))AND('')) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END THEN (rt0.c1 IN ()) ELSE (rt0.c0 IN ()) END) ORDER BY (((((((((((((rt0.c1 IN ('')))OR((((rt0.c1))>((rt0.c0))))))OR(((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))))OR(rt0.c2)))OR((('-1725131041') IS FALSE))))AND((rt0.c2 IN (rt0.c2)))))AND(rt0.c2 COLLATE RTRIM)), ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY ((((NOT (rt0.c0))))==(((((rt0.c1)) NOT BETWEEN (('-1176158208')) AND ((rt0.c2))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((NOT (rt0.c0))))==(((((rt0.c1)) NOT BETWEEN (('-1176158208')) AND ((rt0.c2))))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY ((((NOT (rt0.c0))))==(((((rt0.c1)) NOT BETWEEN (('-1176158208')) AND ((rt0.c2))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((NOT (rt0.c0))))==(((((rt0.c1)) NOT BETWEEN (('-1176158208')) AND ((rt0.c2))))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY ((((NOT (rt0.c0))))==(((((rt0.c1)) NOT BETWEEN (('-1176158208')) AND ((rt0.c2))))))  NULLS FIRST;
SELECT * FROM v0 WHERE ((~ (((((v0.c2)AND(0.8020568269839198)))AND(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((v0.c2)AND(0.8020568269839198)))AND(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((~ (((((v0.c2)AND(0.8020568269839198)))AND(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((v0.c2)AND(0.8020568269839198)))AND(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((~ (((((v0.c2)AND(0.8020568269839198)))AND(v0.c1)))));
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((v0.c2 COLLATE BINARY)IS(v0.c1)) INNER JOIN v0 ON x'' WHERE (((((v0.c2) IS TRUE))>(v0.c1))) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) IS TRUE))>(v0.c1))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((v0.c2 COLLATE BINARY)IS(v0.c1)) INNER JOIN v0 ON x'' ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((v0.c2 COLLATE BINARY)IS(v0.c1)) INNER JOIN v0 ON x'' WHERE (((((v0.c2) IS TRUE))>(v0.c1))) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) IS TRUE))>(v0.c1))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((v0.c2 COLLATE BINARY)IS(v0.c1)) INNER JOIN v0 ON x'' ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS TEXT) ASC);
SELECT COUNT(*) FROM v0 WHERE ((((+ (v0.c2)))>>(CAST(v0.c2 AS BLOB)))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c2)))>>(CAST(v0.c2 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((+ (v0.c2)))>>(CAST(v0.c2 AS BLOB)))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c2)))>>(CAST(v0.c2 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((+ (v0.c2)))>>(CAST(v0.c2 AS BLOB)))) ORDER BY v0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (UNLIKELY(DISTINCT CAST(v0.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CAST(v0.c2 AS BLOB))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (UNLIKELY(DISTINCT CAST(v0.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CAST(v0.c2 AS BLOB))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (UNLIKELY(DISTINCT CAST(v0.c2 AS BLOB)));
SELECT * FROM rt0, v0 WHERE (((((((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)))AND(((v0.c2)>(v0.c0)))))OR(UPPER(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)))AND(((v0.c2)>(v0.c0)))))OR(UPPER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)))AND(((v0.c2)>(v0.c0)))))OR(UPPER(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)))AND(((v0.c2)>(v0.c0)))))OR(UPPER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)))AND(((v0.c2)>(v0.c0)))))OR(UPPER(DISTINCT rt0.c2))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((QUOTE(vt0.c0))<=(CAST(vt0.c0 AS REAL)))) ORDER BY (((((((vt0.c0))>((vt0.c0))))AND(CAST(vt0.c0 AS NUMERIC))))OR(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((QUOTE(vt0.c0))<=(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0))>((vt0.c0))))AND(CAST(vt0.c0 AS NUMERIC))))OR(vt0.c0)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((QUOTE(vt0.c0))<=(CAST(vt0.c0 AS REAL)))) ORDER BY (((((((vt0.c0))>((vt0.c0))))AND(CAST(vt0.c0 AS NUMERIC))))OR(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((QUOTE(vt0.c0))<=(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0))>((vt0.c0))))AND(CAST(vt0.c0 AS NUMERIC))))OR(vt0.c0)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((QUOTE(vt0.c0))<=(CAST(vt0.c0 AS REAL)))) ORDER BY (((((((vt0.c0))>((vt0.c0))))AND(CAST(vt0.c0 AS NUMERIC))))OR(vt0.c0)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON HEX(DISTINCT NULL) CROSS JOIN v0 ON ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN v0.c1 WHEN v0.c2 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN 440746582 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)AND(((v0.c2) NOT BETWEEN (v0.c1) AND (rt0.c1)))) WHERE (CASE WHEN CAST(v0.c1 AS BLOB) THEN rt0.c1 COLLATE RTRIM WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END THEN NULL WHEN vt0.c0 THEN ((rt0.c0) NOT NULL) ELSE ((rt0.c2) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(v0.c1 AS BLOB) THEN rt0.c1 COLLATE RTRIM WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END THEN NULL WHEN vt0.c0 THEN ((rt0.c0) NOT NULL) ELSE ((rt0.c2) ISNULL) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON HEX(DISTINCT NULL) CROSS JOIN v0 ON ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN v0.c1 WHEN v0.c2 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN 440746582 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)AND(((v0.c2) NOT BETWEEN (v0.c1) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON HEX(DISTINCT NULL) CROSS JOIN v0 ON ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN v0.c1 WHEN v0.c2 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN 440746582 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)AND(((v0.c2) NOT BETWEEN (v0.c1) AND (rt0.c1)))) WHERE (CASE WHEN CAST(v0.c1 AS BLOB) THEN rt0.c1 COLLATE RTRIM WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END THEN NULL WHEN vt0.c0 THEN ((rt0.c0) NOT NULL) ELSE ((rt0.c2) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(v0.c1 AS BLOB) THEN rt0.c1 COLLATE RTRIM WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END THEN NULL WHEN vt0.c0 THEN ((rt0.c0) NOT NULL) ELSE ((rt0.c2) ISNULL) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON HEX(DISTINCT NULL) CROSS JOIN v0 ON ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN v0.c1 WHEN v0.c2 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN 440746582 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)AND(((v0.c2) NOT BETWEEN (v0.c1) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON HEX(DISTINCT NULL) CROSS JOIN v0 ON ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN v0.c1 WHEN v0.c2 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN 440746582 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)AND(((v0.c2) NOT BETWEEN (v0.c1) AND (rt0.c1)))) WHERE (CASE WHEN CAST(v0.c1 AS BLOB) THEN rt0.c1 COLLATE RTRIM WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END THEN NULL WHEN vt0.c0 THEN ((rt0.c0) NOT NULL) ELSE ((rt0.c2) ISNULL) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c0))<((rt0.c1, '', rt0.c2)))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) AND ((+ (rt0.c0))))) ORDER BY rt0.c1  NULLS FIRST, CAST(((rt0.c0)>=(0.8975059107462604)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c0, rt0.c0))<((rt0.c1, '', rt0.c2)))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) AND ((+ (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1  NULLS FIRST, CAST(((rt0.c0)>=(0.8975059107462604)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c0))<((rt0.c1, '', rt0.c2)))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) AND ((+ (rt0.c0))))) ORDER BY rt0.c1  NULLS FIRST, CAST(((rt0.c0)>=(0.8975059107462604)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c0, rt0.c0))<((rt0.c1, '', rt0.c2)))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) AND ((+ (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1  NULLS FIRST, CAST(((rt0.c0)>=(0.8975059107462604)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c0))<((rt0.c1, '', rt0.c2)))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) AND ((+ (rt0.c0))))) ORDER BY rt0.c1  NULLS FIRST, CAST(((rt0.c0)>=(0.8975059107462604)) AS TEXT);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NOT (vt0.c0)))AND(((vt0.c0) NOT NULL))))OR(CASE WHEN 'Hq4<' THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((((vt0.c0) IS FALSE))AND((vt0.c0 IN (vt0.c0)))))AND(CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (vt0.c0)))AND(((vt0.c0) NOT NULL))))OR(CASE WHEN 'Hq4<' THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) IS FALSE))AND((vt0.c0 IN (vt0.c0)))))AND(CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NOT (vt0.c0)))AND(((vt0.c0) NOT NULL))))OR(CASE WHEN 'Hq4<' THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((((vt0.c0) IS FALSE))AND((vt0.c0 IN (vt0.c0)))))AND(CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (vt0.c0)))AND(((vt0.c0) NOT NULL))))OR(CASE WHEN 'Hq4<' THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) IS FALSE))AND((vt0.c0 IN (vt0.c0)))))AND(CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NOT (vt0.c0)))AND(((vt0.c0) NOT NULL))))OR(CASE WHEN 'Hq4<' THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((((vt0.c0) IS FALSE))AND((vt0.c0 IN (vt0.c0)))))AND(CAST(vt0.c0 AS TEXT)));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT * FROM v0, vt0, rt0 WHERE ((((((rt0.c0) IS FALSE), ((vt0.c0)IS(rt0.c2)), (((v0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c2))), CASE v0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN v0.c1 WHEN 714577320 THEN rt0.c1 ELSE v0.c1 END, (NOT (rt0.c2))))>((NULL, UNLIKELY(v0.c1), ((vt0.c0)<<(v0.c0)), ((v0.c0)<>(v0.c1)), CAST(v0.c2 AS INTEGER))))) ORDER BY ((((((v0.c1) ISNULL))OR(((rt0.c1)IS(rt0.c0)))))OR(((rt0.c2)OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) IS FALSE), ((vt0.c0)IS(rt0.c2)), (((v0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c2))), CASE v0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN v0.c1 WHEN 714577320 THEN rt0.c1 ELSE v0.c1 END, (NOT (rt0.c2))))>((NULL, UNLIKELY(v0.c1), ((vt0.c0)<<(v0.c0)), ((v0.c0)<>(v0.c1)), CAST(v0.c2 AS INTEGER))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((((v0.c1) ISNULL))OR(((rt0.c1)IS(rt0.c0)))))OR(((rt0.c2)OR(vt0.c0))))  NULLS FIRST);
SELECT * FROM v0, vt0, rt0 WHERE ((((((rt0.c0) IS FALSE), ((vt0.c0)IS(rt0.c2)), (((v0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c2))), CASE v0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN v0.c1 WHEN 714577320 THEN rt0.c1 ELSE v0.c1 END, (NOT (rt0.c2))))>((NULL, UNLIKELY(v0.c1), ((vt0.c0)<<(v0.c0)), ((v0.c0)<>(v0.c1)), CAST(v0.c2 AS INTEGER))))) ORDER BY ((((((v0.c1) ISNULL))OR(((rt0.c1)IS(rt0.c0)))))OR(((rt0.c2)OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) IS FALSE), ((vt0.c0)IS(rt0.c2)), (((v0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c2))), CASE v0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN v0.c1 WHEN 714577320 THEN rt0.c1 ELSE v0.c1 END, (NOT (rt0.c2))))>((NULL, UNLIKELY(v0.c1), ((vt0.c0)<<(v0.c0)), ((v0.c0)<>(v0.c1)), CAST(v0.c2 AS INTEGER))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((((v0.c1) ISNULL))OR(((rt0.c1)IS(rt0.c0)))))OR(((rt0.c2)OR(vt0.c0))))  NULLS FIRST);
SELECT * FROM v0, vt0, rt0 WHERE ((((((rt0.c0) IS FALSE), ((vt0.c0)IS(rt0.c2)), (((v0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c2))), CASE v0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN v0.c1 WHEN 714577320 THEN rt0.c1 ELSE v0.c1 END, (NOT (rt0.c2))))>((NULL, UNLIKELY(v0.c1), ((vt0.c0)<<(v0.c0)), ((v0.c0)<>(v0.c1)), CAST(v0.c2 AS INTEGER))))) ORDER BY ((((((v0.c1) ISNULL))OR(((rt0.c1)IS(rt0.c0)))))OR(((rt0.c2)OR(vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE ((v0.c0 IN ())) ORDER BY ((((v0.c1)OR(v0.c1))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c1)OR(v0.c1))) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((v0.c0 IN ())) ORDER BY ((((v0.c1)OR(v0.c1))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c1)OR(v0.c1))) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((v0.c0 IN ())) ORDER BY ((((v0.c1)OR(v0.c1))) NOTNULL) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)|(vt0.c0)) ELSE 0xffffffffb67ad660 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)|(vt0.c0)) ELSE 0xffffffffb67ad660 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)|(vt0.c0)) ELSE 0xffffffffb67ad660 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)|(vt0.c0)) ELSE 0xffffffffb67ad660 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)|(vt0.c0)) ELSE 0xffffffffb67ad660 END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1) NOT NULL) COLLATE NOCASE);
SELECT * FROM vt0, rt0, v0 WHERE ((((((v0.c2)|(v0.c0))))>((((rt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c2)|(v0.c0))))>((((rt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE ((((((v0.c2)|(v0.c0))))>((((rt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c2)|(v0.c0))))>((((rt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE ((((((v0.c2)|(v0.c0))))>((((rt0.c0) IS TRUE)))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (((rt0.c1 IN ())) IS FALSE) FULL OUTER JOIN v0 ON (((v0.c1, rt0.c0, rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END, (NOT (rt0.c1)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((((((rt0.c0)OR(vt0.c0)))OR(v0.c2)), (+ (v0.c1)), HEX(DISTINCT v0.c1)))) WHERE ((((rt0.c0)) NOT BETWEEN (((+ (v0.c2)))) AND ((((rt0.c2) NOT BETWEEN (v0.c2) AND (rt0.c2)))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN v0.c2 WHEN rt0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (ABS(v0.c2)) AND (v0.c0)), CAST((rt0.c2 IN (rt0.c0, rt0.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN (((+ (v0.c2)))) AND ((((rt0.c2) NOT BETWEEN (v0.c2) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((rt0.c1 IN ())) IS FALSE) FULL OUTER JOIN v0 ON (((v0.c1, rt0.c0, rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END, (NOT (rt0.c1)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((((((rt0.c0)OR(vt0.c0)))OR(v0.c2)), (+ (v0.c1)), HEX(DISTINCT v0.c1)))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN v0.c2 WHEN rt0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (ABS(v0.c2)) AND (v0.c0)), CAST((rt0.c2 IN (rt0.c0, rt0.c0)) AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (((rt0.c1 IN ())) IS FALSE) FULL OUTER JOIN v0 ON (((v0.c1, rt0.c0, rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END, (NOT (rt0.c1)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((((((rt0.c0)OR(vt0.c0)))OR(v0.c2)), (+ (v0.c1)), HEX(DISTINCT v0.c1)))) WHERE ((((rt0.c0)) NOT BETWEEN (((+ (v0.c2)))) AND ((((rt0.c2) NOT BETWEEN (v0.c2) AND (rt0.c2)))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN v0.c2 WHEN rt0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (ABS(v0.c2)) AND (v0.c0)), CAST((rt0.c2 IN (rt0.c0, rt0.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN (((+ (v0.c2)))) AND ((((rt0.c2) NOT BETWEEN (v0.c2) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((rt0.c1 IN ())) IS FALSE) FULL OUTER JOIN v0 ON (((v0.c1, rt0.c0, rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END, (NOT (rt0.c1)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((((((rt0.c0)OR(vt0.c0)))OR(v0.c2)), (+ (v0.c1)), HEX(DISTINCT v0.c1)))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN v0.c2 WHEN rt0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (ABS(v0.c2)) AND (v0.c0)), CAST((rt0.c2 IN (rt0.c0, rt0.c0)) AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (((rt0.c1 IN ())) IS FALSE) FULL OUTER JOIN v0 ON (((v0.c1, rt0.c0, rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END, (NOT (rt0.c1)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((((((rt0.c0)OR(vt0.c0)))OR(v0.c2)), (+ (v0.c1)), HEX(DISTINCT v0.c1)))) WHERE ((((rt0.c0)) NOT BETWEEN (((+ (v0.c2)))) AND ((((rt0.c2) NOT BETWEEN (v0.c2) AND (rt0.c2)))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN v0.c2 WHEN rt0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (ABS(v0.c2)) AND (v0.c0)), CAST((rt0.c2 IN (rt0.c0, rt0.c0)) AS REAL) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (rt0.c0) ORDER BY CASE WHEN (((x'95d3'))>((rt0.c0))) THEN CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN v0.c1 THEN v0.c0 ELSE rt0.c0 END END ASC, vt0.c0 DESC  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE WHEN (((x'95d3'))>((rt0.c0))) THEN CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN v0.c1 THEN v0.c0 ELSE rt0.c0 END END ASC, vt0.c0 DESC  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (rt0.c0) ORDER BY CASE WHEN (((x'95d3'))>((rt0.c0))) THEN CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN v0.c1 THEN v0.c0 ELSE rt0.c0 END END ASC, vt0.c0 DESC  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE WHEN (((x'95d3'))>((rt0.c0))) THEN CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN v0.c1 THEN v0.c0 ELSE rt0.c0 END END ASC, vt0.c0 DESC  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (rt0.c0) ORDER BY CASE WHEN (((x'95d3'))>((rt0.c0))) THEN CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN v0.c1 THEN v0.c0 ELSE rt0.c0 END END ASC, vt0.c0 DESC  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2 IN (rt0.c0)))*((rt0.c1 IN (vt0.c0, rt0.c2))))) ORDER BY CASE ((rt0.c2) ISNULL)  WHEN TYPEOF(DISTINCT vt0.c0) THEN ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)) WHEN (NOT (vt0.c0)) THEN ((-22997979) IS TRUE) WHEN ((rt0.c2)AND(rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END DESC  NULLS FIRST, CAST(((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt0.c0)))*((rt0.c1 IN (vt0.c0, rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((rt0.c2) ISNULL)  WHEN TYPEOF(DISTINCT vt0.c0) THEN ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)) WHEN (NOT (vt0.c0)) THEN ((-22997979) IS TRUE) WHEN ((rt0.c2)AND(rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END DESC  NULLS FIRST, CAST(((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)) AS TEXT) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2 IN (rt0.c0)))*((rt0.c1 IN (vt0.c0, rt0.c2))))) ORDER BY CASE ((rt0.c2) ISNULL)  WHEN TYPEOF(DISTINCT vt0.c0) THEN ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)) WHEN (NOT (vt0.c0)) THEN ((-22997979) IS TRUE) WHEN ((rt0.c2)AND(rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END DESC  NULLS FIRST, CAST(((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt0.c0)))*((rt0.c1 IN (vt0.c0, rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((rt0.c2) ISNULL)  WHEN TYPEOF(DISTINCT vt0.c0) THEN ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)) WHEN (NOT (vt0.c0)) THEN ((-22997979) IS TRUE) WHEN ((rt0.c2)AND(rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END DESC  NULLS FIRST, CAST(((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)) AS TEXT) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2 IN (rt0.c0)))*((rt0.c1 IN (vt0.c0, rt0.c2))))) ORDER BY CASE ((rt0.c2) ISNULL)  WHEN TYPEOF(DISTINCT vt0.c0) THEN ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)) WHEN (NOT (vt0.c0)) THEN ((-22997979) IS TRUE) WHEN ((rt0.c2)AND(rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END DESC  NULLS FIRST, CAST(((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)) AS TEXT) ASC;
SELECT ALL COUNT(*) FROM v0, rt0 NATURAL JOIN vt0 WHERE (-1447521677) ORDER BY ((((vt0.c0)OR(rt0.c2)))AND(((vt0.c0) BETWEEN (rt0.c1) AND (x''))));
SELECT SUM(count) FROM (SELECT ALL ((-1447521677) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN vt0 ORDER BY ((((vt0.c0)OR(rt0.c2)))AND(((vt0.c0) BETWEEN (rt0.c1) AND (x'')))));
SELECT ALL COUNT(*) FROM v0, rt0 NATURAL JOIN vt0 WHERE (-1447521677) ORDER BY ((((vt0.c0)OR(rt0.c2)))AND(((vt0.c0) BETWEEN (rt0.c1) AND (x''))));
SELECT SUM(count) FROM (SELECT ALL ((-1447521677) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN vt0 ORDER BY ((((vt0.c0)OR(rt0.c2)))AND(((vt0.c0) BETWEEN (rt0.c1) AND (x'')))));
SELECT ALL COUNT(*) FROM v0, rt0 NATURAL JOIN vt0 WHERE (-1447521677) ORDER BY ((((vt0.c0)OR(rt0.c2)))AND(((vt0.c0) BETWEEN (rt0.c1) AND (x''))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT ALL * FROM v0 WHERE (((-1.054508058E9)%(((x'3446')||(v0.c1))))) ORDER BY CASE ((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))OR(v0.c2)))AND(v0.c0))  WHEN ((v0.c1) IS TRUE) THEN (v0.c0 IN ()) WHEN x'' THEN CAST(0.745745294741398 AS BLOB) WHEN TRIM(v0.c0) THEN CASE WHEN v0.c2 THEN NULL ELSE v0.c2 END ELSE (~ (v0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-1.054508058E9)%(((x'3446')||(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY CASE ((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))OR(v0.c2)))AND(v0.c0))  WHEN ((v0.c1) IS TRUE) THEN (v0.c0 IN ()) WHEN x'' THEN CAST(0.745745294741398 AS BLOB) WHEN TRIM(v0.c0) THEN CASE WHEN v0.c2 THEN NULL ELSE v0.c2 END ELSE (~ (v0.c1)) END ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((-1.054508058E9)%(((x'3446')||(v0.c1))))) ORDER BY CASE ((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))OR(v0.c2)))AND(v0.c0))  WHEN ((v0.c1) IS TRUE) THEN (v0.c0 IN ()) WHEN x'' THEN CAST(0.745745294741398 AS BLOB) WHEN TRIM(v0.c0) THEN CASE WHEN v0.c2 THEN NULL ELSE v0.c2 END ELSE (~ (v0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-1.054508058E9)%(((x'3446')||(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY CASE ((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))OR(v0.c2)))AND(v0.c0))  WHEN ((v0.c1) IS TRUE) THEN (v0.c0 IN ()) WHEN x'' THEN CAST(0.745745294741398 AS BLOB) WHEN TRIM(v0.c0) THEN CASE WHEN v0.c2 THEN NULL ELSE v0.c2 END ELSE (~ (v0.c1)) END ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((-1.054508058E9)%(((x'3446')||(v0.c1))))) ORDER BY CASE ((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))OR(v0.c2)))AND(v0.c0))  WHEN ((v0.c1) IS TRUE) THEN (v0.c0 IN ()) WHEN x'' THEN CAST(0.745745294741398 AS BLOB) WHEN TRIM(v0.c0) THEN CASE WHEN v0.c2 THEN NULL ELSE v0.c2 END ELSE (~ (v0.c1)) END ASC  NULLS LAST;
SELECT * FROM vt0 INNER JOIN v0 ON ((((v0.c2) BETWEEN (v0.c1) AND (v0.c0))) IS FALSE) WHERE (((v0.c1 COLLATE BINARY)IS NOT(COALESCE(DISTINCT -2079723297, v0.c0, v0.c1, v0.c1)))) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE BINARY)IS NOT(COALESCE(DISTINCT -2079723297, v0.c0, v0.c1, v0.c1)))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((v0.c2) BETWEEN (v0.c1) AND (v0.c0))) IS FALSE) ORDER BY v0.c0 DESC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN v0 ON ((((v0.c2) BETWEEN (v0.c1) AND (v0.c0))) IS FALSE) WHERE (((v0.c1 COLLATE BINARY)IS NOT(COALESCE(DISTINCT -2079723297, v0.c0, v0.c1, v0.c1)))) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE BINARY)IS NOT(COALESCE(DISTINCT -2079723297, v0.c0, v0.c1, v0.c1)))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((v0.c2) BETWEEN (v0.c1) AND (v0.c0))) IS FALSE) ORDER BY v0.c0 DESC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN v0 ON ((((v0.c2) BETWEEN (v0.c1) AND (v0.c0))) IS FALSE) WHERE (((v0.c1 COLLATE BINARY)IS NOT(COALESCE(DISTINCT -2079723297, v0.c0, v0.c1, v0.c1)))) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((((((((v0.c1)AND(rt0.c2)))AND(v0.c2)))AND(rt0.c1)))OR(NULL)))<(CASE rt0.c0  WHEN v0.c1 THEN v0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c1)AND(rt0.c2)))AND(v0.c2)))AND(rt0.c1)))OR(NULL)))<(CASE rt0.c0  WHEN v0.c1 THEN v0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((((((((v0.c1)AND(rt0.c2)))AND(v0.c2)))AND(rt0.c1)))OR(NULL)))<(CASE rt0.c0  WHEN v0.c1 THEN v0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c1)AND(rt0.c2)))AND(v0.c2)))AND(rt0.c1)))OR(NULL)))<(CASE rt0.c0  WHEN v0.c1 THEN v0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((((((((v0.c1)AND(rt0.c2)))AND(v0.c2)))AND(rt0.c1)))OR(NULL)))<(CASE rt0.c0  WHEN v0.c1 THEN v0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) BETWEEN (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((CAST(rt0.c1 AS TEXT))))) ORDER BY ((((NOT (rt0.c0)), ((rt0.c0)OR(rt0.c1)), (+ (NULL))))>((CAST(rt0.c2 AS TEXT), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), TRIM(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((NOT (rt0.c0)), ((rt0.c0)OR(rt0.c1)), (+ (NULL))))>((CAST(rt0.c2 AS TEXT), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), TRIM(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) BETWEEN (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((CAST(rt0.c1 AS TEXT))))) ORDER BY ((((NOT (rt0.c0)), ((rt0.c0)OR(rt0.c1)), (+ (NULL))))>((CAST(rt0.c2 AS TEXT), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), TRIM(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((NOT (rt0.c0)), ((rt0.c0)OR(rt0.c1)), (+ (NULL))))>((CAST(rt0.c2 AS TEXT), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), TRIM(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) BETWEEN (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((CAST(rt0.c1 AS TEXT))))) ORDER BY ((((NOT (rt0.c0)), ((rt0.c0)OR(rt0.c1)), (+ (NULL))))>((CAST(rt0.c2 AS TEXT), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), TRIM(rt0.c2)))) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (DATETIME(((0.16712023813989185) ISNULL), (((rt0.c0))!=((rt0.c1))), (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(((0.16712023813989185) ISNULL), (((rt0.c0))!=((rt0.c1))), (vt0.c0 IN ()))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (DATETIME(((0.16712023813989185) ISNULL), (((rt0.c0))!=((rt0.c1))), (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(((0.16712023813989185) ISNULL), (((rt0.c0))!=((rt0.c1))), (vt0.c0 IN ()))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (DATETIME(((0.16712023813989185) ISNULL), (((rt0.c0))!=((rt0.c1))), (vt0.c0 IN ())));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) ORDER BY ((CAST('_ᐥl➗Vu{' AS NUMERIC)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((CAST('_ᐥl➗Vu{' AS NUMERIC)) NOT NULL) ASC);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) ORDER BY ((CAST('_ᐥl➗Vu{' AS NUMERIC)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((CAST('_ᐥl➗Vu{' AS NUMERIC)) NOT NULL) ASC);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) ORDER BY ((CAST('_ᐥl➗Vu{' AS NUMERIC)) NOT NULL) ASC;
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST('-1231308968' AS NUMERIC) AS INTEGER)) ORDER BY 0.9877157898156876 ASC, ((((((vt0.c0))<((vt0.c0)))))!=(((+ (vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST('-1231308968' AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY 0.9877157898156876 ASC, ((((((vt0.c0))<((vt0.c0)))))<>(((+ (vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST('-1231308968' AS NUMERIC) AS INTEGER)) ORDER BY 0.9877157898156876 ASC, ((((((vt0.c0))<((vt0.c0)))))!=(((+ (vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST('-1231308968' AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY 0.9877157898156876 ASC, ((((((vt0.c0))<((vt0.c0)))))<>(((+ (vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST('-1231308968' AS NUMERIC) AS INTEGER)) ORDER BY 0.9877157898156876 ASC, ((((((vt0.c0))<((vt0.c0)))))!=(((+ (vt0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (((((~ (vt0.c0)))OR(((rt0.c2)<(rt0.c0)))))AND(CASE rt0.c2  WHEN x'e92e0caa' THEN rt0.c0 END))  NULLS LAST, ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE 0.06704035076210124 END)LIKE(((rt0.c0)>=(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((~ (vt0.c0)))OR(((rt0.c2)<(rt0.c0)))))AND(CASE rt0.c2  WHEN x'e92e0caa' THEN rt0.c0 END))  NULLS LAST, ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE 0.06704035076210124 END)LIKE(((rt0.c0)>=(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (((((~ (vt0.c0)))OR(((rt0.c2)<(rt0.c0)))))AND(CASE rt0.c2  WHEN x'e92e0caa' THEN rt0.c0 END))  NULLS LAST, ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE 0.06704035076210124 END)LIKE(((rt0.c0)>=(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((~ (vt0.c0)))OR(((rt0.c2)<(rt0.c0)))))AND(CASE rt0.c2  WHEN x'e92e0caa' THEN rt0.c0 END))  NULLS LAST, ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE 0.06704035076210124 END)LIKE(((rt0.c0)>=(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (((((~ (vt0.c0)))OR(((rt0.c2)<(rt0.c0)))))AND(CASE rt0.c2  WHEN x'e92e0caa' THEN rt0.c0 END))  NULLS LAST, ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE 0.06704035076210124 END)LIKE(((rt0.c0)>=(vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))) NOT BETWEEN (((x'') BETWEEN (rt0.c2) AND (rt0.c0))) AND (((vt0.c0)AND(rt0.c0))))) ORDER BY SQLITE_COMPILEOPTION_USED((~ (rt0.c0))) DESC  NULLS LAST, ((((vt0.c0) NOTNULL)) NOTNULL)  NULLS LAST, (((NOT (rt0.c2)))<=(CAST(rt0.c2 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))) NOT BETWEEN (((x'') BETWEEN (rt0.c2) AND (rt0.c0))) AND (((vt0.c0)AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY SQLITE_COMPILEOPTION_USED((~ (rt0.c0))) DESC  NULLS LAST, ((((vt0.c0) NOTNULL)) NOTNULL)  NULLS LAST, (((NOT (rt0.c2)))<=(CAST(rt0.c2 AS REAL))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))) NOT BETWEEN (((x'') BETWEEN (rt0.c2) AND (rt0.c0))) AND (((vt0.c0)AND(rt0.c0))))) ORDER BY SQLITE_COMPILEOPTION_USED((~ (rt0.c0))) DESC  NULLS LAST, ((((vt0.c0) NOTNULL)) NOTNULL)  NULLS LAST, (((NOT (rt0.c2)))<=(CAST(rt0.c2 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))) NOT BETWEEN (((x'') BETWEEN (rt0.c2) AND (rt0.c0))) AND (((vt0.c0)AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY SQLITE_COMPILEOPTION_USED((~ (rt0.c0))) DESC  NULLS LAST, ((((vt0.c0) NOTNULL)) NOTNULL)  NULLS LAST, (((NOT (rt0.c2)))<=(CAST(rt0.c2 AS REAL))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))) NOT BETWEEN (((x'') BETWEEN (rt0.c2) AND (rt0.c0))) AND (((vt0.c0)AND(rt0.c0))))) ORDER BY SQLITE_COMPILEOPTION_USED((~ (rt0.c0))) DESC  NULLS LAST, ((((vt0.c0) NOTNULL)) NOTNULL)  NULLS LAST, (((NOT (rt0.c2)))<=(CAST(rt0.c2 AS REAL))) ASC;
SELECT * FROM rt0, vt0 WHERE ((((x'' IN ()))|(LIKELIHOOD(rt0.c0, 0.4728574682984239))));
SELECT SUM(count) FROM (SELECT (((((x'' IN ()))|(LIKELIHOOD(rt0.c0, 0.4728574682984239)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((x'' IN ()))|(LIKELIHOOD(rt0.c0, 0.4728574682984239))));
SELECT SUM(count) FROM (SELECT (((((x'' IN ()))|(LIKELIHOOD(rt0.c0, 0.4728574682984239)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((x'' IN ()))|(LIKELIHOOD(rt0.c0, 0.4728574682984239))));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (rt0.c1 IN ()) WHERE (((((vt0.c0) NOT NULL))<<(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))))) ORDER BY ABS(((rt0.c2)-('+%i-')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))<<(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (rt0.c1 IN ()) ORDER BY ABS(((rt0.c2)-('+%i-'))));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (rt0.c1 IN ()) WHERE (((((vt0.c0) NOT NULL))<<(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))))) ORDER BY ABS(((rt0.c2)-('+%i-')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))<<(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (rt0.c1 IN ()) ORDER BY ABS(((rt0.c2)-('+%i-'))));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (rt0.c1 IN ()) WHERE (((((vt0.c0) NOT NULL))<<(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))))) ORDER BY ABS(((rt0.c2)-('+%i-')));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)>(vt0.c0)) COLLATE BINARY) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)>(vt0.c0)) COLLATE BINARY) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)>(vt0.c0)) COLLATE BINARY) ORDER BY vt0.c0 ASC;
SELECT * FROM rt0, v0, vt0 WHERE (v0.c2) ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c2) BETWEEN (NULL) AND (rt0.c2)))) AND ((CAST(rt0.c1 AS TEXT)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c2) BETWEEN (NULL) AND (rt0.c2)))) AND ((CAST(rt0.c1 AS TEXT)))) ASC  NULLS LAST);
SELECT * FROM rt0, v0, vt0 WHERE (v0.c2) ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c2) BETWEEN (NULL) AND (rt0.c2)))) AND ((CAST(rt0.c1 AS TEXT)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c2) BETWEEN (NULL) AND (rt0.c2)))) AND ((CAST(rt0.c1 AS TEXT)))) ASC  NULLS LAST);
SELECT * FROM rt0, v0, vt0 WHERE (v0.c2) ORDER BY (((v0.c1)) NOT BETWEEN ((((v0.c2) BETWEEN (NULL) AND (rt0.c2)))) AND ((CAST(rt0.c1 AS TEXT)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c2)OR(rt0.c2)))OR(NULL)))&(((v0.c2)>=(v0.c1)))) FULL OUTER JOIN vt0 ON (((((vt0.c0))<=((vt0.c0))))%((((rt0.c1, rt0.c2, v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, v0.c1, vt0.c0, v0.c0, rt0.c1)) AND ((v0.c2, v0.c0, rt0.c1, vt0.c0, vt0.c0))))) WHERE ((0.592806023009402 IN ())) ORDER BY (((v0.c2)) BETWEEN ((TYPEOF(DISTINCT rt0.c2))) AND ((v0.c0)))  NULLS LAST, ((CAST(v0.c0 AS INTEGER))AND(((rt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT (((0.592806023009402 IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c2)OR(rt0.c2)))OR(NULL)))&(((v0.c2)>=(v0.c1)))) FULL OUTER JOIN vt0 ON (((((vt0.c0))<=((vt0.c0))))%((((rt0.c1, rt0.c2, v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, v0.c1, vt0.c0, v0.c0, rt0.c1)) AND ((v0.c2, v0.c0, rt0.c1, vt0.c0, vt0.c0))))) ORDER BY (((v0.c2)) BETWEEN ((TYPEOF(DISTINCT rt0.c2))) AND ((v0.c0)))  NULLS LAST, ((CAST(v0.c0 AS INTEGER))AND(((rt0.c1) ISNULL))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c2)OR(rt0.c2)))OR(NULL)))&(((v0.c2)>=(v0.c1)))) FULL OUTER JOIN vt0 ON (((((vt0.c0))<=((vt0.c0))))%((((rt0.c1, rt0.c2, v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, v0.c1, vt0.c0, v0.c0, rt0.c1)) AND ((v0.c2, v0.c0, rt0.c1, vt0.c0, vt0.c0))))) WHERE ((0.592806023009402 IN ())) ORDER BY (((v0.c2)) BETWEEN ((TYPEOF(DISTINCT rt0.c2))) AND ((v0.c0)))  NULLS LAST, ((CAST(v0.c0 AS INTEGER))AND(((rt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT (((0.592806023009402 IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c2)OR(rt0.c2)))OR(NULL)))&(((v0.c2)>=(v0.c1)))) FULL OUTER JOIN vt0 ON (((((vt0.c0))<=((vt0.c0))))%((((rt0.c1, rt0.c2, v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, v0.c1, vt0.c0, v0.c0, rt0.c1)) AND ((v0.c2, v0.c0, rt0.c1, vt0.c0, vt0.c0))))) ORDER BY (((v0.c2)) BETWEEN ((TYPEOF(DISTINCT rt0.c2))) AND ((v0.c0)))  NULLS LAST, ((CAST(v0.c0 AS INTEGER))AND(((rt0.c1) ISNULL))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((((rt0.c2)OR(rt0.c2)))OR(NULL)))&(((v0.c2)>=(v0.c1)))) FULL OUTER JOIN vt0 ON (((((vt0.c0))<=((vt0.c0))))%((((rt0.c1, rt0.c2, v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, v0.c1, vt0.c0, v0.c0, rt0.c1)) AND ((v0.c2, v0.c0, rt0.c1, vt0.c0, vt0.c0))))) WHERE ((0.592806023009402 IN ())) ORDER BY (((v0.c2)) BETWEEN ((TYPEOF(DISTINCT rt0.c2))) AND ((v0.c0)))  NULLS LAST, ((CAST(v0.c0 AS INTEGER))AND(((rt0.c1) ISNULL)));
SELECT * FROM v0 WHERE (((((v0.c1 COLLATE RTRIM)OR(CAST(v0.c1 AS NUMERIC))))AND(((((v0.c1)AND(v0.c0)))AND(v0.c2))))) ORDER BY ((((((((CAST(v0.c1 AS TEXT))OR(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)))))OR((+ (v0.c1)))))OR(v0.c2)))AND(CAST(v0.c0 AS TEXT))), CASE WHEN (- (v0.c1)) THEN v0.c2 WHEN ((v0.c0)<<(v0.c0)) THEN CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END WHEN v0.c0 COLLATE BINARY THEN (- (v0.c1)) END DESC  NULLS LAST, ((((~ (v0.c1))))>=((v0.c0 COLLATE NOCASE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1 COLLATE RTRIM)OR(CAST(v0.c1 AS NUMERIC))))AND(((((v0.c1)AND(v0.c0)))AND(v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((CAST(v0.c1 AS TEXT))OR(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)))))OR((+ (v0.c1)))))OR(v0.c2)))AND(CAST(v0.c0 AS TEXT))), CASE WHEN (- (v0.c1)) THEN v0.c2 WHEN ((v0.c0)<<(v0.c0)) THEN CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END WHEN v0.c0 COLLATE BINARY THEN (- (v0.c1)) END DESC  NULLS LAST, ((((~ (v0.c1))))>=((v0.c0 COLLATE NOCASE))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c1 COLLATE RTRIM)OR(CAST(v0.c1 AS NUMERIC))))AND(((((v0.c1)AND(v0.c0)))AND(v0.c2))))) ORDER BY ((((((((CAST(v0.c1 AS TEXT))OR(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)))))OR((+ (v0.c1)))))OR(v0.c2)))AND(CAST(v0.c0 AS TEXT))), CASE WHEN (- (v0.c1)) THEN v0.c2 WHEN ((v0.c0)<<(v0.c0)) THEN CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END WHEN v0.c0 COLLATE BINARY THEN (- (v0.c1)) END DESC  NULLS LAST, ((((~ (v0.c1))))>=((v0.c0 COLLATE NOCASE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1 COLLATE RTRIM)OR(CAST(v0.c1 AS NUMERIC))))AND(((((v0.c1)AND(v0.c0)))AND(v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((CAST(v0.c1 AS TEXT))OR(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)))))OR((+ (v0.c1)))))OR(v0.c2)))AND(CAST(v0.c0 AS TEXT))), CASE WHEN (- (v0.c1)) THEN v0.c2 WHEN ((v0.c0)<<(v0.c0)) THEN CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END WHEN v0.c0 COLLATE BINARY THEN (- (v0.c1)) END DESC  NULLS LAST, ((((~ (v0.c1))))>=((v0.c0 COLLATE NOCASE))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c1 COLLATE RTRIM)OR(CAST(v0.c1 AS NUMERIC))))AND(((((v0.c1)AND(v0.c0)))AND(v0.c2))))) ORDER BY ((((((((CAST(v0.c1 AS TEXT))OR(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)))))OR((+ (v0.c1)))))OR(v0.c2)))AND(CAST(v0.c0 AS TEXT))), CASE WHEN (- (v0.c1)) THEN v0.c2 WHEN ((v0.c0)<<(v0.c0)) THEN CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END WHEN v0.c0 COLLATE BINARY THEN (- (v0.c1)) END DESC  NULLS LAST, ((((~ (v0.c1))))>=((v0.c0 COLLATE NOCASE))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0.14460523052124963) ISNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((0.14460523052124963) ISNULL)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0.14460523052124963) ISNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((0.14460523052124963) ISNULL)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0.14460523052124963) ISNULL)) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c1 AS REAL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS REAL) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c1 AS REAL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS REAL) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c1 AS REAL) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (LIKELY(DISTINCT ((((v0.c1)AND(v0.c0)))AND(rt0.c1)))) ORDER BY (x'4637ef13' IN (CAST(v0.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((((v0.c1)AND(v0.c0)))AND(rt0.c1)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (x'4637ef13' IN (CAST(v0.c2 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (LIKELY(DISTINCT ((((v0.c1)AND(v0.c0)))AND(rt0.c1)))) ORDER BY (x'4637ef13' IN (CAST(v0.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((((v0.c1)AND(v0.c0)))AND(rt0.c1)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (x'4637ef13' IN (CAST(v0.c2 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (LIKELY(DISTINCT ((((v0.c1)AND(v0.c0)))AND(rt0.c1)))) ORDER BY (x'4637ef13' IN (CAST(v0.c2 AS BLOB)));
SELECT * FROM rt0, vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((0.9225651170243188) IS TRUE))) AND ((0.44055694247594457)))) ORDER BY CASE json_extract(v0.c0, v0.c0)  WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c1)<(rt0.c1)) WHEN (~ (vt0.c0)) THEN CAST(rt0.c1 AS BLOB) WHEN x'' THEN ((v0.c2) IS FALSE) ELSE (v0.c1 IN ('0.010993812652406398')) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((0.9225651170243188) IS TRUE))) AND ((0.44055694247594457)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CASE json_extract(v0.c0, v0.c0)  WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c1)<(rt0.c1)) WHEN (~ (vt0.c0)) THEN CAST(rt0.c1 AS BLOB) WHEN x'' THEN ((v0.c2) IS FALSE) ELSE (v0.c1 IN ('0.010993812652406398')) END  NULLS FIRST);
SELECT * FROM rt0, vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((0.9225651170243188) IS TRUE))) AND ((0.44055694247594457)))) ORDER BY CASE json_extract(v0.c0, v0.c0)  WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c1)<(rt0.c1)) WHEN (~ (vt0.c0)) THEN CAST(rt0.c1 AS BLOB) WHEN x'' THEN ((v0.c2) IS FALSE) ELSE (v0.c1 IN ('0.010993812652406398')) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((0.9225651170243188) IS TRUE))) AND ((0.44055694247594457)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CASE json_extract(v0.c0, v0.c0)  WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c1)<(rt0.c1)) WHEN (~ (vt0.c0)) THEN CAST(rt0.c1 AS BLOB) WHEN x'' THEN ((v0.c2) IS FALSE) ELSE (v0.c1 IN ('0.010993812652406398')) END  NULLS FIRST);
SELECT * FROM rt0, vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((0.9225651170243188) IS TRUE))) AND ((0.44055694247594457)))) ORDER BY CASE json_extract(v0.c0, v0.c0)  WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c1)<(rt0.c1)) WHEN (~ (vt0.c0)) THEN CAST(rt0.c1 AS BLOB) WHEN x'' THEN ((v0.c2) IS FALSE) ELSE (v0.c1 IN ('0.010993812652406398')) END  NULLS FIRST;
SELECT ALL * FROM v0, vt0, rt0 WHERE (CHAR(CASE WHEN v0.c1 THEN rt0.c2 END)) ORDER BY ((((rt0.c0)>=(v0.c2)))=(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHAR(CASE WHEN v0.c1 THEN rt0.c2 END)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((rt0.c0)>=(v0.c2)))=(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CHAR(CASE WHEN v0.c1 THEN rt0.c2 END)) ORDER BY ((((rt0.c0)>=(v0.c2)))=(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHAR(CASE WHEN v0.c1 THEN rt0.c2 END)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((rt0.c0)>=(v0.c2)))=(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CHAR(CASE WHEN v0.c1 THEN rt0.c2 END)) ORDER BY ((((rt0.c0)>=(v0.c2)))=(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c1 THEN 'c9E_' END) NOTNULL)) ORDER BY ((((((v0.c1)-(v0.c2)))AND(v0.c2)))OR(v0.c0 COLLATE BINARY))  NULLS FIRST, ((CASE v0.c1  WHEN v0.c1 THEN v0.c1 END) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c1 THEN 'c9E_' END) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c1)-(v0.c2)))AND(v0.c2)))OR(v0.c0 COLLATE BINARY))  NULLS FIRST, ((CASE v0.c1  WHEN v0.c1 THEN v0.c1 END) NOTNULL) DESC);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c1 THEN 'c9E_' END) NOTNULL)) ORDER BY ((((((v0.c1)-(v0.c2)))AND(v0.c2)))OR(v0.c0 COLLATE BINARY))  NULLS FIRST, ((CASE v0.c1  WHEN v0.c1 THEN v0.c1 END) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c1 THEN 'c9E_' END) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c1)-(v0.c2)))AND(v0.c2)))OR(v0.c0 COLLATE BINARY))  NULLS FIRST, ((CASE v0.c1  WHEN v0.c1 THEN v0.c1 END) NOTNULL) DESC);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c1 THEN 'c9E_' END) NOTNULL)) ORDER BY ((((((v0.c1)-(v0.c2)))AND(v0.c2)))OR(v0.c0 COLLATE BINARY))  NULLS FIRST, ((CASE v0.c1  WHEN v0.c1 THEN v0.c1 END) NOTNULL) DESC;
SELECT * FROM v0, rt0 WHERE ((((((rt0.c0)AND(v0.c1)))AND(v0.c1)) IN ())) ORDER BY ((x'') NOT BETWEEN (CASE v0.c1  WHEN v0.c1 THEN v0.c0 END) AND ((+ (-2.079723297E9)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)AND(v0.c1)))AND(v0.c1)) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((x'') NOT BETWEEN (CASE v0.c1  WHEN v0.c1 THEN v0.c0 END) AND ((+ (-2.079723297E9)))) DESC);
SELECT * FROM v0, rt0 WHERE ((((((rt0.c0)AND(v0.c1)))AND(v0.c1)) IN ())) ORDER BY ((x'') NOT BETWEEN (CASE v0.c1  WHEN v0.c1 THEN v0.c0 END) AND ((+ (-2.079723297E9)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)AND(v0.c1)))AND(v0.c1)) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((x'') NOT BETWEEN (CASE v0.c1  WHEN v0.c1 THEN v0.c0 END) AND ((+ (-2.079723297E9)))) DESC);
SELECT * FROM v0, rt0 WHERE ((((((rt0.c0)AND(v0.c1)))AND(v0.c1)) IN ())) ORDER BY ((x'') NOT BETWEEN (CASE v0.c1  WHEN v0.c1 THEN v0.c0 END) AND ((+ (-2.079723297E9)))) DESC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((((('440746582')OR(((((v0.c2)OR(rt0.c2)))AND(x'')))))OR(((((v0.c0)AND(rt0.c1)))AND('-1233463712')))))AND(((v0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((((('440746582')OR(((((v0.c2)OR(rt0.c2)))AND(x'')))))OR(((((v0.c0)AND(rt0.c1)))AND('-1233463712')))))AND(((v0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((((('440746582')OR(((((v0.c2)OR(rt0.c2)))AND(x'')))))OR(((((v0.c0)AND(rt0.c1)))AND('-1233463712')))))AND(((v0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((((('440746582')OR(((((v0.c2)OR(rt0.c2)))AND(x'')))))OR(((((v0.c0)AND(rt0.c1)))AND('-1233463712')))))AND(((v0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((((('440746582')OR(((((v0.c2)OR(rt0.c2)))AND(x'')))))OR(((((v0.c0)AND(rt0.c1)))AND('-1233463712')))))AND(((v0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(CAST(rt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (CASE ((rt0.c1)<=(rt0.c1))  WHEN ((0Xffffffffb28053f1) IS FALSE) THEN v0.c1 COLLATE BINARY ELSE TRIM(v0.c2, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1)<=(rt0.c1))  WHEN ((0Xffffffffb28053f1) IS FALSE) THEN v0.c1 COLLATE BINARY ELSE TRIM(v0.c2, rt0.c0) END) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (CASE ((rt0.c1)<=(rt0.c1))  WHEN ((0Xffffffffb28053f1) IS FALSE) THEN v0.c1 COLLATE BINARY ELSE TRIM(v0.c2, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1)<=(rt0.c1))  WHEN ((0Xffffffffb28053f1) IS FALSE) THEN v0.c1 COLLATE BINARY ELSE TRIM(v0.c2, rt0.c0) END) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (CASE ((rt0.c1)<=(rt0.c1))  WHEN ((0Xffffffffb28053f1) IS FALSE) THEN v0.c1 COLLATE BINARY ELSE TRIM(v0.c2, rt0.c0) END);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((((((rt0.c2)AND(rt0.c2)))OR(v0.c1)))AND(v0.c2)))OR(rt0.c1)) COLLATE BINARY) ORDER BY (+ (rt0.c1 COLLATE BINARY))  NULLS FIRST, (((v0.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN NULL WHEN x'be28' THEN rt0.c1 END)) AND ((((0xffffffffaeef84f1)=(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2)AND(rt0.c2)))OR(v0.c1)))AND(v0.c2)))OR(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (+ (rt0.c1 COLLATE BINARY))  NULLS FIRST, (((v0.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN NULL WHEN x'be28' THEN rt0.c1 END)) AND ((((0xffffffffaeef84f1)==(vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((((((rt0.c2)AND(rt0.c2)))OR(v0.c1)))AND(v0.c2)))OR(rt0.c1)) COLLATE BINARY) ORDER BY (+ (rt0.c1 COLLATE BINARY))  NULLS FIRST, (((v0.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN NULL WHEN x'be28' THEN rt0.c1 END)) AND ((((0xffffffffaeef84f1)=(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2)AND(rt0.c2)))OR(v0.c1)))AND(v0.c2)))OR(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (+ (rt0.c1 COLLATE BINARY))  NULLS FIRST, (((v0.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN NULL WHEN x'be28' THEN rt0.c1 END)) AND ((((0xffffffffaeef84f1)==(vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((((((rt0.c2)AND(rt0.c2)))OR(v0.c1)))AND(v0.c2)))OR(rt0.c1)) COLLATE BINARY) ORDER BY (+ (rt0.c1 COLLATE BINARY))  NULLS FIRST, (((v0.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN NULL WHEN x'be28' THEN rt0.c1 END)) AND ((((0xffffffffaeef84f1)=(vt0.c0)))))  NULLS LAST;
SELECT * FROM rt0, v0 WHERE ((((('-1447521677')OR((rt0.c1 IN (rt0.c2)))))OR(((rt0.c2)<('0.44055694247594457'))))) ORDER BY CASE ((rt0.c0) NOT NULL)  WHEN ((v0.c0) IS FALSE) THEN (v0.c1 IN (v0.c2)) ELSE ((v0.c2) ISNULL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('-1447521677')OR((rt0.c1 IN (rt0.c2)))))OR(((rt0.c2)<('0.44055694247594457'))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE ((rt0.c0) NOT NULL)  WHEN ((v0.c0) IS FALSE) THEN (v0.c1 IN (v0.c2)) ELSE ((v0.c2) ISNULL) END DESC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((((('-1447521677')OR((rt0.c1 IN (rt0.c2)))))OR(((rt0.c2)<('0.44055694247594457'))))) ORDER BY CASE ((rt0.c0) NOT NULL)  WHEN ((v0.c0) IS FALSE) THEN (v0.c1 IN (v0.c2)) ELSE ((v0.c2) ISNULL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('-1447521677')OR((rt0.c1 IN (rt0.c2)))))OR(((rt0.c2)<('0.44055694247594457'))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE ((rt0.c0) NOT NULL)  WHEN ((v0.c0) IS FALSE) THEN (v0.c1 IN (v0.c2)) ELSE ((v0.c2) ISNULL) END DESC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((((('-1447521677')OR((rt0.c1 IN (rt0.c2)))))OR(((rt0.c2)<('0.44055694247594457'))))) ORDER BY CASE ((rt0.c0) NOT NULL)  WHEN ((v0.c0) IS FALSE) THEN (v0.c1 IN (v0.c2)) ELSE ((v0.c2) ISNULL) END DESC  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (((v0.c1)&(v0.c1)) COLLATE RTRIM) ORDER BY CASE WHEN ((((((((v0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN CASE rt0.c2  WHEN v0.c0 THEN v0.c1 END ELSE ((rt0.c1)<=(v0.c1)) END ASC, NULLIF(DISTINCT x'', CAST(v0.c1 AS BLOB)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1)&(v0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN ((((((((v0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN CASE rt0.c2  WHEN v0.c0 THEN v0.c1 END ELSE ((rt0.c1)<=(v0.c1)) END ASC, NULLIF(DISTINCT x'', CAST(v0.c1 AS BLOB)) DESC);
SELECT ALL * FROM rt0, v0 WHERE (((v0.c1)&(v0.c1)) COLLATE RTRIM) ORDER BY CASE WHEN ((((((((v0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN CASE rt0.c2  WHEN v0.c0 THEN v0.c1 END ELSE ((rt0.c1)<=(v0.c1)) END ASC, NULLIF(DISTINCT x'', CAST(v0.c1 AS BLOB)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1)&(v0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN ((((((((v0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN CASE rt0.c2  WHEN v0.c0 THEN v0.c1 END ELSE ((rt0.c1)<=(v0.c1)) END ASC, NULLIF(DISTINCT x'', CAST(v0.c1 AS BLOB)) DESC);
SELECT ALL * FROM rt0, v0 WHERE (((v0.c1)&(v0.c1)) COLLATE RTRIM) ORDER BY CASE WHEN ((((((((v0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN CASE rt0.c2  WHEN v0.c0 THEN v0.c1 END ELSE ((rt0.c1)<=(v0.c1)) END ASC, NULLIF(DISTINCT x'', CAST(v0.c1 AS BLOB)) DESC;
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON LIKELIHOOD(DISTINCT vt0.c0, 0.07093666778662577) LEFT OUTER JOIN vt0 ON (- (((vt0.c0)||(vt0.c0)))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON LIKELIHOOD(DISTINCT vt0.c0, 0.07093666778662577) LEFT OUTER JOIN vt0 ON (- (((vt0.c0)||(vt0.c0)))));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON LIKELIHOOD(DISTINCT vt0.c0, 0.07093666778662577) LEFT OUTER JOIN vt0 ON (- (((vt0.c0)||(vt0.c0)))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON LIKELIHOOD(DISTINCT vt0.c0, 0.07093666778662577) LEFT OUTER JOIN vt0 ON (- (((vt0.c0)||(vt0.c0)))));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON LIKELIHOOD(DISTINCT vt0.c0, 0.07093666778662577) LEFT OUTER JOIN vt0 ON (- (((vt0.c0)||(vt0.c0)))) WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)*(rt0.c2)) COLLATE NOCASE) ORDER BY CASE (rt0.c2 IN ())  WHEN rt0.c1 COLLATE NOCASE THEN rt0.c0 WHEN x'' COLLATE NOCASE THEN ((rt0.c1)OR(rt0.c2)) WHEN (rt0.c2 IN ()) THEN ((rt0.c0)+(rt0.c0)) ELSE CAST(rt0.c2 AS INTEGER) END ASC  NULLS FIRST, (((rt0.c0) ISNULL) IN ()) DESC  NULLS FIRST, NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)*(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c2 IN ())  WHEN rt0.c1 COLLATE NOCASE THEN rt0.c0 WHEN x'' COLLATE NOCASE THEN ((rt0.c1)OR(rt0.c2)) WHEN (rt0.c2 IN ()) THEN ((rt0.c0)+(rt0.c0)) ELSE CAST(rt0.c2 AS INTEGER) END ASC  NULLS FIRST, (((rt0.c0) ISNULL) IN ()) DESC  NULLS FIRST, NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)*(rt0.c2)) COLLATE NOCASE) ORDER BY CASE (rt0.c2 IN ())  WHEN rt0.c1 COLLATE NOCASE THEN rt0.c0 WHEN x'' COLLATE NOCASE THEN ((rt0.c1)OR(rt0.c2)) WHEN (rt0.c2 IN ()) THEN ((rt0.c0)+(rt0.c0)) ELSE CAST(rt0.c2 AS INTEGER) END ASC  NULLS FIRST, (((rt0.c0) ISNULL) IN ()) DESC  NULLS FIRST, NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)*(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c2 IN ())  WHEN rt0.c1 COLLATE NOCASE THEN rt0.c0 WHEN x'' COLLATE NOCASE THEN ((rt0.c1)OR(rt0.c2)) WHEN (rt0.c2 IN ()) THEN ((rt0.c0)+(rt0.c0)) ELSE CAST(rt0.c2 AS INTEGER) END ASC  NULLS FIRST, (((rt0.c0) ISNULL) IN ()) DESC  NULLS FIRST, NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)*(rt0.c2)) COLLATE NOCASE) ORDER BY CASE (rt0.c2 IN ())  WHEN rt0.c1 COLLATE NOCASE THEN rt0.c0 WHEN x'' COLLATE NOCASE THEN ((rt0.c1)OR(rt0.c2)) WHEN (rt0.c2 IN ()) THEN ((rt0.c0)+(rt0.c0)) ELSE CAST(rt0.c2 AS INTEGER) END ASC  NULLS FIRST, (((rt0.c0) ISNULL) IN ()) DESC  NULLS FIRST, NULL DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((x'') ISNULL) COLLATE NOCASE  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((x'') ISNULL) COLLATE NOCASE  NULLS LAST, NULL);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((x'') ISNULL) COLLATE NOCASE  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((x'') ISNULL) COLLATE NOCASE  NULLS LAST, NULL);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((x'') ISNULL) COLLATE NOCASE  NULLS LAST, NULL;
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((NULL)||((('1997695471') ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((NULL)||((('1997695471') ISNULL))));
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((NULL)||((('1997695471') ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((NULL)||((('1997695471') ISNULL))));
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((NULL)||((('1997695471') ISNULL)));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CASE ((v0.c0)<=(vt0.c0))  WHEN rt0.c1 COLLATE NOCASE THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c2)) ELSE ABS(v0.c1) END) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)<=(vt0.c0))  WHEN rt0.c1 COLLATE NOCASE THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c2)) ELSE ABS(v0.c1) END) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CASE ((v0.c0)<=(vt0.c0))  WHEN rt0.c1 COLLATE NOCASE THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c2)) ELSE ABS(v0.c1) END) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)<=(vt0.c0))  WHEN rt0.c1 COLLATE NOCASE THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c2)) ELSE ABS(v0.c1) END) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CASE ((v0.c0)<=(vt0.c0))  WHEN rt0.c1 COLLATE NOCASE THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c2)) ELSE ABS(v0.c1) END) ORDER BY NULL;
SELECT ALL * FROM rt0, vt0 WHERE (CASE TYPEOF(DISTINCT rt0.c0)  WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN '' END) ORDER BY ((vt0.c0 COLLATE RTRIM) IS FALSE) DESC, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE TYPEOF(DISTINCT rt0.c0)  WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN '' END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) IS FALSE) DESC, rt0.c0  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CASE TYPEOF(DISTINCT rt0.c0)  WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN '' END) ORDER BY ((vt0.c0 COLLATE RTRIM) IS FALSE) DESC, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE TYPEOF(DISTINCT rt0.c0)  WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN '' END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) IS FALSE) DESC, rt0.c0  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CASE TYPEOF(DISTINCT rt0.c0)  WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN '' END) ORDER BY ((vt0.c0 COLLATE RTRIM) IS FALSE) DESC, rt0.c0  NULLS FIRST;
SELECT * FROM vt0, rt0, v0 WHERE ((((v0.c2)) BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((v0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))))) ORDER BY CASE rt0.c1  WHEN CASE WHEN rt0.c2 THEN vt0.c0 END THEN ((((((((NULL)AND(rt0.c2)))OR(v0.c2)))OR(rt0.c0)))OR(v0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((v0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CASE rt0.c1  WHEN CASE WHEN rt0.c2 THEN vt0.c0 END THEN ((((((((NULL)AND(rt0.c2)))OR(v0.c2)))OR(rt0.c0)))OR(v0.c0)) END DESC);
SELECT * FROM vt0, rt0, v0 WHERE ((((v0.c2)) BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((v0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))))) ORDER BY CASE rt0.c1  WHEN CASE WHEN rt0.c2 THEN vt0.c0 END THEN ((((((((NULL)AND(rt0.c2)))OR(v0.c2)))OR(rt0.c0)))OR(v0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((v0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CASE rt0.c1  WHEN CASE WHEN rt0.c2 THEN vt0.c0 END THEN ((((((((NULL)AND(rt0.c2)))OR(v0.c2)))OR(rt0.c0)))OR(v0.c0)) END DESC);
SELECT * FROM vt0, rt0, v0 WHERE ((((v0.c2)) BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((v0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))))) ORDER BY CASE rt0.c1  WHEN CASE WHEN rt0.c2 THEN vt0.c0 END THEN ((((((((NULL)AND(rt0.c2)))OR(v0.c2)))OR(rt0.c0)))OR(v0.c0)) END DESC;
SELECT * FROM v0, rt0 WHERE (((((((((MAX(rt0.c0, rt0.c2))OR(UPPER(NULL))))OR((~ (rt0.c0)))))OR(((rt0.c2) BETWEEN (v0.c2) AND (rt0.c0)))))AND(SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT ALL ((((((((((MAX(rt0.c0, rt0.c2))OR(UPPER(NULL))))OR((~ (rt0.c0)))))OR(((rt0.c2) BETWEEN (v0.c2) AND (rt0.c0)))))AND(SQLITE_VERSION()))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((((MAX(rt0.c0, rt0.c2))OR(UPPER(NULL))))OR((~ (rt0.c0)))))OR(((rt0.c2) BETWEEN (v0.c2) AND (rt0.c0)))))AND(SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT ALL ((((((((((MAX(rt0.c0, rt0.c2))OR(UPPER(NULL))))OR((~ (rt0.c0)))))OR(((rt0.c2) BETWEEN (v0.c2) AND (rt0.c0)))))AND(SQLITE_VERSION()))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((((MAX(rt0.c0, rt0.c2))OR(UPPER(NULL))))OR((~ (rt0.c0)))))OR(((rt0.c2) BETWEEN (v0.c2) AND (rt0.c0)))))AND(SQLITE_VERSION())));
SELECT ALL * FROM vt0 WHERE (((0.8576309901169406)+(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((0.8576309901169406)+(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((0.8576309901169406)+(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((0.8576309901169406)+(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((0.8576309901169406)+(vt0.c0 COLLATE NOCASE)));
SELECT * FROM v0 INNER JOIN vt0 ON ((((v0.c0)/(vt0.c0)))=(NULL)) WHERE (v0.c2) ORDER BY (((~ (v0.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((v0.c0)/(vt0.c0)))==(NULL)) ORDER BY (((~ (v0.c0))) IS TRUE) ASC  NULLS FIRST);
SELECT * FROM v0 INNER JOIN vt0 ON ((((v0.c0)/(vt0.c0)))=(NULL)) WHERE (v0.c2) ORDER BY (((~ (v0.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((v0.c0)/(vt0.c0)))==(NULL)) ORDER BY (((~ (v0.c0))) IS TRUE) ASC  NULLS FIRST);
SELECT * FROM v0 INNER JOIN vt0 ON ((((v0.c0)/(vt0.c0)))=(NULL)) WHERE (v0.c2) ORDER BY (((~ (v0.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN v0 ON NULLIF(((v0.c1)*(v0.c2)), rt0.c0 COLLATE RTRIM) WHERE (CASE WHEN 0.5205022044193804 COLLATE BINARY THEN (x'' IN ()) ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.5205022044193804 COLLATE BINARY THEN (x'' IN ()) ELSE v0.c0 END) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON NULLIF(((v0.c1)*(v0.c2)), rt0.c0 COLLATE RTRIM));
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN v0 ON NULLIF(((v0.c1)*(v0.c2)), rt0.c0 COLLATE RTRIM) WHERE (CASE WHEN 0.5205022044193804 COLLATE BINARY THEN (x'' IN ()) ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.5205022044193804 COLLATE BINARY THEN (x'' IN ()) ELSE v0.c0 END) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON NULLIF(((v0.c1)*(v0.c2)), rt0.c0 COLLATE RTRIM));
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN v0 ON NULLIF(((v0.c1)*(v0.c2)), rt0.c0 COLLATE RTRIM) WHERE (CASE WHEN 0.5205022044193804 COLLATE BINARY THEN (x'' IN ()) ELSE v0.c0 END);
SELECT * FROM rt0 INNER JOIN vt0 ON ((CAST(v0.c2 AS REAL)) BETWEEN (CAST(v0.c1 AS BLOB)) AND (vt0.c0 COLLATE NOCASE)) INNER JOIN v0 ON (~ (CAST(rt0.c2 AS BLOB))) WHERE (((((rt0.c0)OR('-484183447')))OR(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR('-484183447')))OR(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((CAST(v0.c2 AS REAL)) BETWEEN (CAST(v0.c1 AS BLOB)) AND (vt0.c0 COLLATE NOCASE)) INNER JOIN v0 ON (~ (CAST(rt0.c2 AS BLOB))));
SELECT * FROM rt0 INNER JOIN vt0 ON ((CAST(v0.c2 AS REAL)) BETWEEN (CAST(v0.c1 AS BLOB)) AND (vt0.c0 COLLATE NOCASE)) INNER JOIN v0 ON (~ (CAST(rt0.c2 AS BLOB))) WHERE (((((rt0.c0)OR('-484183447')))OR(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR('-484183447')))OR(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((CAST(v0.c2 AS REAL)) BETWEEN (CAST(v0.c1 AS BLOB)) AND (vt0.c0 COLLATE NOCASE)) INNER JOIN v0 ON (~ (CAST(rt0.c2 AS BLOB))));
SELECT * FROM rt0 INNER JOIN vt0 ON ((CAST(v0.c2 AS REAL)) BETWEEN (CAST(v0.c1 AS BLOB)) AND (vt0.c0 COLLATE NOCASE)) INNER JOIN v0 ON (~ (CAST(rt0.c2 AS BLOB))) WHERE (((((rt0.c0)OR('-484183447')))OR(v0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ('-410780943') ORDER BY LENGTH(((((rt0.c1)OR(v0.c2)))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT (('-410780943') IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY LENGTH(((((rt0.c1)OR(v0.c2)))OR(vt0.c0))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ('-410780943') ORDER BY LENGTH(((((rt0.c1)OR(v0.c2)))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT (('-410780943') IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY LENGTH(((((rt0.c1)OR(v0.c2)))OR(vt0.c0))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ('-410780943') ORDER BY LENGTH(((((rt0.c1)OR(v0.c2)))OR(vt0.c0)));
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<(vt0.c0)) COLLATE BINARY) ORDER BY '-1e500' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY '-1e500' ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<(vt0.c0)) COLLATE BINARY) ORDER BY '-1e500' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY '-1e500' ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<(vt0.c0)) COLLATE BINARY) ORDER BY '-1e500' ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c0))<=((rt0.c0, '666330666', rt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c2, rt0.c0))<=((rt0.c0, '666330666', rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c0))<=((rt0.c0, '666330666', rt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c2, rt0.c0))<=((rt0.c0, '666330666', rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c0))<=((rt0.c0, '666330666', rt0.c0))) COLLATE RTRIM);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON -1047108256 WHERE (((((v0.c0)%(rt0.c1)))IS NOT('714577320'))) ORDER BY (((((((((v0.c1)AND(rt0.c0)))AND(v0.c0)))AND(rt0.c0)))OR(v0.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)%(rt0.c1)))IS NOT('714577320'))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON -1047108256 ORDER BY (((((((((v0.c1)AND(rt0.c0)))AND(v0.c0)))AND(rt0.c0)))OR(v0.c1)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON -1047108256 WHERE (((((v0.c0)%(rt0.c1)))IS NOT('714577320'))) ORDER BY (((((((((v0.c1)AND(rt0.c0)))AND(v0.c0)))AND(rt0.c0)))OR(v0.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)%(rt0.c1)))IS NOT('714577320'))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON -1047108256 ORDER BY (((((((((v0.c1)AND(rt0.c0)))AND(v0.c0)))AND(rt0.c0)))OR(v0.c1)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON -1047108256 WHERE (((((v0.c0)%(rt0.c1)))IS NOT('714577320'))) ORDER BY (((((((((v0.c1)AND(rt0.c0)))AND(v0.c0)))AND(rt0.c0)))OR(v0.c1)) IN ())  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((0.5196617343339812)/(rt0.c0)) WHEN (NOT (rt0.c0)) THEN (rt0.c0 IN ()) WHEN ((rt0.c1)<(rt0.c2)) THEN ABS(rt0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((0.5196617343339812)/(rt0.c0)) WHEN (NOT (rt0.c0)) THEN (rt0.c0 IN ()) WHEN ((rt0.c1)<(rt0.c2)) THEN ABS(rt0.c1) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((0.5196617343339812)/(rt0.c0)) WHEN (NOT (rt0.c0)) THEN (rt0.c0 IN ()) WHEN ((rt0.c1)<(rt0.c2)) THEN ABS(rt0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((0.5196617343339812)/(rt0.c0)) WHEN (NOT (rt0.c0)) THEN (rt0.c0 IN ()) WHEN ((rt0.c1)<(rt0.c2)) THEN ABS(rt0.c1) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((0.5196617343339812)/(rt0.c0)) WHEN (NOT (rt0.c0)) THEN (rt0.c0 IN ()) WHEN ((rt0.c1)<(rt0.c2)) THEN ABS(rt0.c1) END);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN ('k') AND (vt0.c0)) THEN LIKELIHOOD(vt0.c0, 0.6959538072600782) WHEN (((rt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, rt0.c2, vt0.c0))) THEN ((rt0.c2)LIKE(rt0.c1)) WHEN (((('i>wZz}Rq6')OR(vt0.c0)))AND(rt0.c2)) THEN TRIM(DISTINCT NULL) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) NOT BETWEEN ('k') AND (vt0.c0)) THEN LIKELIHOOD(vt0.c0, 0.6959538072600782) WHEN (((rt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, rt0.c2, vt0.c0))) THEN ((rt0.c2)LIKE(rt0.c1)) WHEN (((('i>wZz}Rq6')OR(vt0.c0)))AND(rt0.c2)) THEN TRIM(DISTINCT NULL) ELSE NULL END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN ('k') AND (vt0.c0)) THEN LIKELIHOOD(vt0.c0, 0.6959538072600782) WHEN (((rt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, rt0.c2, vt0.c0))) THEN ((rt0.c2)LIKE(rt0.c1)) WHEN (((('i>wZz}Rq6')OR(vt0.c0)))AND(rt0.c2)) THEN TRIM(DISTINCT NULL) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) NOT BETWEEN ('k') AND (vt0.c0)) THEN LIKELIHOOD(vt0.c0, 0.6959538072600782) WHEN (((rt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, rt0.c2, vt0.c0))) THEN ((rt0.c2)LIKE(rt0.c1)) WHEN (((('i>wZz}Rq6')OR(vt0.c0)))AND(rt0.c2)) THEN TRIM(DISTINCT NULL) ELSE NULL END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN ('k') AND (vt0.c0)) THEN LIKELIHOOD(vt0.c0, 0.6959538072600782) WHEN (((rt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, rt0.c2, vt0.c0))) THEN ((rt0.c2)LIKE(rt0.c1)) WHEN (((('i>wZz}Rq6')OR(vt0.c0)))AND(rt0.c2)) THEN TRIM(DISTINCT NULL) ELSE NULL END);
SELECT * FROM rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM)IS(((rt0.c0) IS TRUE)))) ORDER BY (NOT ((NOT ('-2079723297')))) DESC  NULLS FIRST, ((vt0.c0) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END) AND (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)IS(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT ((NOT ('-2079723297')))) DESC  NULLS FIRST, ((vt0.c0) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END) AND (vt0.c0))  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM)IS(((rt0.c0) IS TRUE)))) ORDER BY (NOT ((NOT ('-2079723297')))) DESC  NULLS FIRST, ((vt0.c0) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END) AND (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)IS(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT ((NOT ('-2079723297')))) DESC  NULLS FIRST, ((vt0.c0) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END) AND (vt0.c0))  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM)IS(((rt0.c0) IS TRUE)))) ORDER BY (NOT ((NOT ('-2079723297')))) DESC  NULLS FIRST, ((vt0.c0) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END) AND (vt0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))AND(vt0.c0)))OR(((rt0.c0)<>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))AND(vt0.c0)))OR(((rt0.c0)<>(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))AND(vt0.c0)))OR(((rt0.c0)<>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))AND(vt0.c0)))OR(((rt0.c0)<>(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))AND(vt0.c0)))OR(((rt0.c0)<>(rt0.c2)))));
SELECT * FROM v0 WHERE (CAST((NOT (v0.c0)) AS NUMERIC)) ORDER BY CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) THEN v0.c1 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) THEN v0.c1 END  NULLS LAST);
SELECT * FROM v0 WHERE (CAST((NOT (v0.c0)) AS NUMERIC)) ORDER BY CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) THEN v0.c1 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) THEN v0.c1 END  NULLS LAST);
SELECT * FROM v0 WHERE (CAST((NOT (v0.c0)) AS NUMERIC)) ORDER BY CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) THEN v0.c1 END  NULLS LAST;
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((('')OR((v0.c0 IN ()))))OR(((v0.c1)IS(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('')OR((v0.c0 IN ()))))OR(((v0.c1)IS(v0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((('')OR((v0.c0 IN ()))))OR(((v0.c1)IS(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('')OR((v0.c0 IN ()))))OR(((v0.c1)IS(v0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((('')OR((v0.c0 IN ()))))OR(((v0.c1)IS(v0.c0)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c2 AS BLOB))>(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(NULL)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB))>(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(NULL)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c2 AS BLOB))>(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(NULL)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB))>(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(NULL)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c2 AS BLOB))>(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(NULL)))OR(rt0.c0)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((CASE WHEN v0.c2 THEN rt0.c0 END)) AND (((rt0.c1 IN ())))) WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN v0.c1 ELSE rt0.c1 END)||(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN v0.c1 ELSE rt0.c1 END)||(rt0.c1))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((CASE WHEN v0.c2 THEN rt0.c0 END)) AND (((rt0.c1 IN ())))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((CASE WHEN v0.c2 THEN rt0.c0 END)) AND (((rt0.c1 IN ())))) WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN v0.c1 ELSE rt0.c1 END)||(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN v0.c1 ELSE rt0.c1 END)||(rt0.c1))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((CASE WHEN v0.c2 THEN rt0.c0 END)) AND (((rt0.c1 IN ())))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((CASE WHEN v0.c2 THEN rt0.c0 END)) AND (((rt0.c1 IN ())))) WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN v0.c1 ELSE rt0.c1 END)||(rt0.c1)));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((((((rt0.c1) BETWEEN (rt0.c1) AND (v0.c1)))OR(((rt0.c2) ISNULL))))OR((v0.c2 IN (v0.c0)))) FULL OUTER JOIN v0 ON '' WHERE (((((rt0.c0)IS(vt0.c0)))GLOB(v0.c0 COLLATE RTRIM))) ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN v0.c1 END)>>(vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)IS(vt0.c0)))GLOB(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((((rt0.c1) BETWEEN (rt0.c1) AND (v0.c1)))OR(((rt0.c2) ISNULL))))OR((v0.c2 IN (v0.c0)))) FULL OUTER JOIN v0 ON '' ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN v0.c1 END)>>(vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((((((rt0.c1) BETWEEN (rt0.c1) AND (v0.c1)))OR(((rt0.c2) ISNULL))))OR((v0.c2 IN (v0.c0)))) FULL OUTER JOIN v0 ON '' WHERE (((((rt0.c0)IS(vt0.c0)))GLOB(v0.c0 COLLATE RTRIM))) ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN v0.c1 END)>>(vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)IS(vt0.c0)))GLOB(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((((rt0.c1) BETWEEN (rt0.c1) AND (v0.c1)))OR(((rt0.c2) ISNULL))))OR((v0.c2 IN (v0.c0)))) FULL OUTER JOIN v0 ON '' ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN v0.c1 END)>>(vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON CAST(rt0.c0 COLLATE RTRIM AS REAL) WHERE (CAST(((((((((((((rt0.c1)OR(rt0.c0)))OR('UT')))AND(rt0.c0)))OR(rt0.c1)))AND(v0.c2)))OR(rt0.c2)) AS TEXT)) ORDER BY ((((rt0.c2)&(v0.c0)))IS NOT((v0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((rt0.c1)OR(rt0.c0)))OR('UT')))AND(rt0.c0)))OR(rt0.c1)))AND(v0.c2)))OR(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CAST(rt0.c0 COLLATE RTRIM AS REAL) ORDER BY ((((rt0.c2)&(v0.c0)))IS NOT((v0.c1 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON CAST(rt0.c0 COLLATE RTRIM AS REAL) WHERE (CAST(((((((((((((rt0.c1)OR(rt0.c0)))OR('UT')))AND(rt0.c0)))OR(rt0.c1)))AND(v0.c2)))OR(rt0.c2)) AS TEXT)) ORDER BY ((((rt0.c2)&(v0.c0)))IS NOT((v0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((rt0.c1)OR(rt0.c0)))OR('UT')))AND(rt0.c0)))OR(rt0.c1)))AND(v0.c2)))OR(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CAST(rt0.c0 COLLATE RTRIM AS REAL) ORDER BY ((((rt0.c2)&(v0.c0)))IS NOT((v0.c1 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON CAST(rt0.c0 COLLATE RTRIM AS REAL) WHERE (CAST(((((((((((((rt0.c1)OR(rt0.c0)))OR('UT')))AND(rt0.c0)))OR(rt0.c1)))AND(v0.c2)))OR(rt0.c2)) AS TEXT)) ORDER BY ((((rt0.c2)&(v0.c0)))IS NOT((v0.c1 IN ())))  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE ((rt0.c0 IN ())) ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN 0xffffffff8c342797 END THEN (((rt0.c1)) NOT BETWEEN ((0.20312851825234524)) AND ((rt0.c2))) ELSE (NOT (rt0.c1)) END DESC, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN 0Xffffffff8c342797 END THEN (((rt0.c1)) NOT BETWEEN ((0.20312851825234524)) AND ((rt0.c2))) ELSE (NOT (rt0.c1)) END DESC, vt0.c0 DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((rt0.c0 IN ())) ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN 0xffffffff8c342797 END THEN (((rt0.c1)) NOT BETWEEN ((0.20312851825234524)) AND ((rt0.c2))) ELSE (NOT (rt0.c1)) END DESC, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN 0Xffffffff8c342797 END THEN (((rt0.c1)) NOT BETWEEN ((0.20312851825234524)) AND ((rt0.c2))) ELSE (NOT (rt0.c1)) END DESC, vt0.c0 DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((rt0.c0 IN ())) ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN 0xffffffff8c342797 END THEN (((rt0.c1)) NOT BETWEEN ((0.20312851825234524)) AND ((rt0.c2))) ELSE (NOT (rt0.c1)) END DESC, vt0.c0 DESC;
SELECT * FROM vt0, v0, rt0 WHERE (((((((((v0.c2 COLLATE NOCASE)OR(((((rt0.c0)OR(v0.c1)))AND(v0.c0)))))AND(-1.360034575E9)))OR(((rt0.c2)<(v0.c1)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))) ORDER BY ((v0.c1 COLLATE RTRIM)>(STRFTIME(rt0.c2, v0.c2, rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c2 COLLATE NOCASE)OR(((((rt0.c0)OR(v0.c1)))AND(v0.c0)))))AND(-1.360034575E9)))OR(((rt0.c2)<(v0.c1)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((v0.c1 COLLATE RTRIM)>(STRFTIME(rt0.c2, v0.c2, rt0.c2))));
SELECT * FROM vt0, v0, rt0 WHERE (((((((((v0.c2 COLLATE NOCASE)OR(((((rt0.c0)OR(v0.c1)))AND(v0.c0)))))AND(-1.360034575E9)))OR(((rt0.c2)<(v0.c1)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))) ORDER BY ((v0.c1 COLLATE RTRIM)>(STRFTIME(rt0.c2, v0.c2, rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c2 COLLATE NOCASE)OR(((((rt0.c0)OR(v0.c1)))AND(v0.c0)))))AND(-1.360034575E9)))OR(((rt0.c2)<(v0.c1)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((v0.c1 COLLATE RTRIM)>(STRFTIME(rt0.c2, v0.c2, rt0.c2))));
SELECT * FROM vt0, v0, rt0 WHERE (((((((((v0.c2 COLLATE NOCASE)OR(((((rt0.c0)OR(v0.c1)))AND(v0.c0)))))AND(-1.360034575E9)))OR(((rt0.c2)<(v0.c1)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))) ORDER BY ((v0.c1 COLLATE RTRIM)>(STRFTIME(rt0.c2, v0.c2, rt0.c2)));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((('440746582') NOT NULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((('440746582') NOT NULL)) NOTNULL)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((('440746582') NOT NULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((('440746582') NOT NULL)) NOTNULL)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((('440746582') NOT NULL)) NOTNULL));
SELECT * FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) BETWEEN ((((rt0.c1))<=((rt0.c2)))) AND (rt0.c1))) ORDER BY (((IFNULL(DISTINCT rt0.c1, rt0.c0), NULL, ('i>wZz}Rq6' IN (rt0.c1))))==(((NOT (rt0.c1)), (((x'676af213')) NOT BETWEEN ((x'ecd7')) AND ((rt0.c2))), ((rt0.c2)GLOB(rt0.c1))))), rt0.c2 ASC, (~ (((rt0.c0)AND(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN ((((rt0.c1))<=((rt0.c2)))) AND (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY (((IFNULL(DISTINCT rt0.c1, rt0.c0), NULL, ('i>wZz}Rq6' IN (rt0.c1))))=(((NOT (rt0.c1)), (((x'676af213')) NOT BETWEEN ((x'ecd7')) AND ((rt0.c2))), ((rt0.c2)GLOB(rt0.c1))))), rt0.c2 ASC, (~ (((rt0.c0)AND(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) BETWEEN ((((rt0.c1))<=((rt0.c2)))) AND (rt0.c1))) ORDER BY (((IFNULL(DISTINCT rt0.c1, rt0.c0), NULL, ('i>wZz}Rq6' IN (rt0.c1))))==(((NOT (rt0.c1)), (((x'676af213')) NOT BETWEEN ((x'ecd7')) AND ((rt0.c2))), ((rt0.c2)GLOB(rt0.c1))))), rt0.c2 ASC, (~ (((rt0.c0)AND(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN ((((rt0.c1))<=((rt0.c2)))) AND (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY (((IFNULL(DISTINCT rt0.c1, rt0.c0), NULL, ('i>wZz}Rq6' IN (rt0.c1))))=(((NOT (rt0.c1)), (((x'676af213')) NOT BETWEEN ((x'ecd7')) AND ((rt0.c2))), ((rt0.c2)GLOB(rt0.c1))))), rt0.c2 ASC, (~ (((rt0.c0)AND(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) BETWEEN ((((rt0.c1))<=((rt0.c2)))) AND (rt0.c1))) ORDER BY (((IFNULL(DISTINCT rt0.c1, rt0.c0), NULL, ('i>wZz}Rq6' IN (rt0.c1))))==(((NOT (rt0.c1)), (((x'676af213')) NOT BETWEEN ((x'ecd7')) AND ((rt0.c2))), ((rt0.c2)GLOB(rt0.c1))))), rt0.c2 ASC, (~ (((rt0.c0)AND(rt0.c0))))  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE ((CAST(rt0.c2 AS TEXT) IN (((((v0.c0)OR(rt0.c2)))OR(rt0.c2)), ((0x5ae3c1fc) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS TEXT) IN (((((v0.c0)OR(rt0.c2)))OR(rt0.c2)), ((0x5ae3c1fc) NOT NULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((CAST(rt0.c2 AS TEXT) IN (((((v0.c0)OR(rt0.c2)))OR(rt0.c2)), ((0x5ae3c1fc) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS TEXT) IN (((((v0.c0)OR(rt0.c2)))OR(rt0.c2)), ((0x5ae3c1fc) NOT NULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((CAST(rt0.c2 AS TEXT) IN (((((v0.c0)OR(rt0.c2)))OR(rt0.c2)), ((0x5ae3c1fc) NOT NULL))));
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))<=((load_extension(rt0.c1, rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))<=((load_extension(rt0.c1, rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))<=((load_extension(rt0.c1, rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))<=((load_extension(rt0.c1, rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))<=((load_extension(rt0.c1, rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, v0 WHERE (TRIM(DISTINCT (((rt0.c2, vt0.c0, rt0.c1))=((v0.c1, rt0.c2, x''))), CASE WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c1 THEN rt0.c2 END)) ORDER BY ((((rt0.c2) NOT NULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((v0.c2) NOT BETWEEN (rt0.c0) AND (v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (((rt0.c2, vt0.c0, rt0.c1))==((v0.c1, rt0.c2, x''))), CASE WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c1 THEN rt0.c2 END)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c2) NOT NULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((v0.c2) NOT BETWEEN (rt0.c0) AND (v0.c2)))));
SELECT ALL * FROM rt0, vt0, v0 WHERE (TRIM(DISTINCT (((rt0.c2, vt0.c0, rt0.c1))=((v0.c1, rt0.c2, x''))), CASE WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c1 THEN rt0.c2 END)) ORDER BY ((((rt0.c2) NOT NULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((v0.c2) NOT BETWEEN (rt0.c0) AND (v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (((rt0.c2, vt0.c0, rt0.c1))==((v0.c1, rt0.c2, x''))), CASE WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c1 THEN rt0.c2 END)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c2) NOT NULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((v0.c2) NOT BETWEEN (rt0.c0) AND (v0.c2)))));
SELECT ALL * FROM rt0, vt0, v0 WHERE (TRIM(DISTINCT (((rt0.c2, vt0.c0, rt0.c1))=((v0.c1, rt0.c2, x''))), CASE WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c1 THEN rt0.c2 END)) ORDER BY ((((rt0.c2) NOT NULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((v0.c2) NOT BETWEEN (rt0.c0) AND (v0.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ()));
SELECT * FROM vt0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON v0.c1 WHERE (((((vt0.c0)=(vt0.c0))) BETWEEN (((vt0.c0)>=(v0.c2))) AND ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)=(vt0.c0))) BETWEEN (((vt0.c0)>=(v0.c2))) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON v0.c1);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON v0.c1 WHERE (((((vt0.c0)=(vt0.c0))) BETWEEN (((vt0.c0)>=(v0.c2))) AND ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)=(vt0.c0))) BETWEEN (((vt0.c0)>=(v0.c2))) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON v0.c1);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON v0.c1 WHERE (((((vt0.c0)=(vt0.c0))) BETWEEN (((vt0.c0)>=(v0.c2))) AND ((- (vt0.c0)))));
SELECT ALL * FROM vt0, rt0 NATURAL JOIN v0 WHERE (((LIKELY(v0.c2))GLOB((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(v0.c2))GLOB((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN v0 WHERE (((LIKELY(v0.c2))GLOB((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(v0.c2))GLOB((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN v0 WHERE (((LIKELY(v0.c2))GLOB((rt0.c2 IN ()))));
SELECT ALL * FROM vt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))*(TRIM(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))*(TRIM(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))*(TRIM(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))*(TRIM(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))*(TRIM(rt0.c0))));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((((rt0.c2 IN ()))||(CASE -1447521677  WHEN v0.c1 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))||(CASE -1447521677  WHEN v0.c1 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((((rt0.c2 IN ()))||(CASE -1447521677  WHEN v0.c1 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))||(CASE -1447521677  WHEN v0.c1 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((((rt0.c2 IN ()))||(CASE -1447521677  WHEN v0.c1 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((NULL) NOT NULL) ASC  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)IS NOT(vt0.c0));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) NOT NULL) ASC  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)IS NOT(vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((NULL) NOT NULL) ASC  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)IS NOT(vt0.c0));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) NOT NULL) ASC  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)IS NOT(vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((NULL) NOT NULL) ASC  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)IS NOT(vt0.c0));
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ (CAST(v0.c2 AS INTEGER)))) ORDER BY ((((((((CAST(v0.c2 AS TEXT))OR(((v0.c2)LIKE('-1233667052')))))AND(JULIANDAY(vt0.c0, v0.c2, vt0.c0))))AND(v0.c2 COLLATE BINARY)))OR(LOWER(DISTINCT vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(v0.c2 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((CAST(v0.c2 AS TEXT))OR(((v0.c2)LIKE('-1233667052')))))AND(JULIANDAY(vt0.c0, v0.c2, vt0.c0))))AND(v0.c2 COLLATE BINARY)))OR(LOWER(DISTINCT vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ (CAST(v0.c2 AS INTEGER)))) ORDER BY ((((((((CAST(v0.c2 AS TEXT))OR(((v0.c2)LIKE('-1233667052')))))AND(JULIANDAY(vt0.c0, v0.c2, vt0.c0))))AND(v0.c2 COLLATE BINARY)))OR(LOWER(DISTINCT vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(v0.c2 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((CAST(v0.c2 AS TEXT))OR(((v0.c2)LIKE('-1233667052')))))AND(JULIANDAY(vt0.c0, v0.c2, vt0.c0))))AND(v0.c2 COLLATE BINARY)))OR(LOWER(DISTINCT vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ (CAST(v0.c2 AS INTEGER)))) ORDER BY ((((((((CAST(v0.c2 AS TEXT))OR(((v0.c2)LIKE('-1233667052')))))AND(JULIANDAY(vt0.c0, v0.c2, vt0.c0))))AND(v0.c2 COLLATE BINARY)))OR(LOWER(DISTINCT vt0.c0)))  NULLS LAST;
SELECT * FROM v0 WHERE (((((v0.c1) NOTNULL)) ISNULL)) ORDER BY TYPEOF(((v0.c2) BETWEEN (v0.c2) AND (v0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) NOTNULL)) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY TYPEOF(((v0.c2) BETWEEN (v0.c2) AND (v0.c1)))  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c1) NOTNULL)) ISNULL)) ORDER BY TYPEOF(((v0.c2) BETWEEN (v0.c2) AND (v0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) NOTNULL)) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY TYPEOF(((v0.c2) BETWEEN (v0.c2) AND (v0.c1)))  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c1) NOTNULL)) ISNULL)) ORDER BY TYPEOF(((v0.c2) BETWEEN (v0.c2) AND (v0.c1)))  NULLS LAST;
SELECT ALL * FROM v0, vt0, rt0 WHERE (CASE TOTAL_CHANGES()  WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (x'')) THEN ((((((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(v0.c0)))AND(v0.c1)) ELSE x'9641' END) ORDER BY (+ ('0.6414623951989835')) ASC;
SELECT SUM(count) FROM (SELECT ((CASE TOTAL_CHANGES()  WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (x'')) THEN ((((((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(v0.c0)))AND(v0.c1)) ELSE x'9641' END) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (+ ('0.6414623951989835')) ASC);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CASE TOTAL_CHANGES()  WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (x'')) THEN ((((((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(v0.c0)))AND(v0.c1)) ELSE x'9641' END) ORDER BY (+ ('0.6414623951989835')) ASC;
SELECT SUM(count) FROM (SELECT ((CASE TOTAL_CHANGES()  WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (x'')) THEN ((((((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(v0.c0)))AND(v0.c1)) ELSE x'9641' END) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (+ ('0.6414623951989835')) ASC);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CASE TOTAL_CHANGES()  WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (x'')) THEN ((((((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(v0.c0)))AND(v0.c1)) ELSE x'9641' END) ORDER BY (+ ('0.6414623951989835')) ASC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN rt0.c2 THEN (- (rt0.c0)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CASE v0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN '-563421381' THEN v0.c2 ELSE v0.c0 END THEN ((v0.c1)-(v0.c2)) END) ORDER BY TYPEOF(CASE WHEN v0.c1 THEN v0.c2 END) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN (- (rt0.c0)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CASE v0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN '-563421381' THEN v0.c2 ELSE v0.c0 END THEN ((v0.c1)-(v0.c2)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY TYPEOF(CASE WHEN v0.c1 THEN v0.c2 END) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN rt0.c2 THEN (- (rt0.c0)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CASE v0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN '-563421381' THEN v0.c2 ELSE v0.c0 END THEN ((v0.c1)-(v0.c2)) END) ORDER BY TYPEOF(CASE WHEN v0.c1 THEN v0.c2 END) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN (- (rt0.c0)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CASE v0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN '-563421381' THEN v0.c2 ELSE v0.c0 END THEN ((v0.c1)-(v0.c2)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY TYPEOF(CASE WHEN v0.c1 THEN v0.c2 END) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN rt0.c2 THEN (- (rt0.c0)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CASE v0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN '-563421381' THEN v0.c2 ELSE v0.c0 END THEN ((v0.c1)-(v0.c2)) END) ORDER BY TYPEOF(CASE WHEN v0.c1 THEN v0.c2 END) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY (((((((((NOT (rt0.c2)))AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(LIKELIHOOD(DISTINCT rt0.c0, 0.4513451103704974))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((((((((((((rt0.c2)OR('0.8975059107462604')))OR(x'')))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((((((((NOT (rt0.c2)))AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(LIKELIHOOD(DISTINCT rt0.c0, 0.4513451103704974))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((((((((((((rt0.c2)OR('0.8975059107462604')))OR(x'')))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY (((((((((NOT (rt0.c2)))AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(LIKELIHOOD(DISTINCT rt0.c0, 0.4513451103704974))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((((((((((((rt0.c2)OR('0.8975059107462604')))OR(x'')))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((((((((NOT (rt0.c2)))AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(LIKELIHOOD(DISTINCT rt0.c0, 0.4513451103704974))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((((((((((((rt0.c2)OR('0.8975059107462604')))OR(x'')))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY (((((((((NOT (rt0.c2)))AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(LIKELIHOOD(DISTINCT rt0.c0, 0.4513451103704974))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((((((((((((rt0.c2)OR('0.8975059107462604')))OR(x'')))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))))  NULLS LAST;
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((((CASE v0.c0  WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END)AND((+ (rt0.c0)))))OR(0Xffffffff8133293c)) WHERE ((('-1233667052')AND(vt0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN rt0.c2 THEN v0.c2 END COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((('-1233667052')AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((((CASE v0.c0  WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END)AND((+ (rt0.c0)))))OR(0xffffffff8133293c)) ORDER BY CASE WHEN rt0.c2 THEN v0.c2 END COLLATE NOCASE ASC);
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((((CASE v0.c0  WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END)AND((+ (rt0.c0)))))OR(0Xffffffff8133293c)) WHERE ((('-1233667052')AND(vt0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN rt0.c2 THEN v0.c2 END COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((('-1233667052')AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((((CASE v0.c0  WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END)AND((+ (rt0.c0)))))OR(0xffffffff8133293c)) ORDER BY CASE WHEN rt0.c2 THEN v0.c2 END COLLATE NOCASE ASC);
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((((CASE v0.c0  WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END)AND((+ (rt0.c0)))))OR(0Xffffffff8133293c)) WHERE ((('-1233667052')AND(vt0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN rt0.c2 THEN v0.c2 END COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((+ (v0.c0))) ORDER BY ((((vt0.c0)>=(vt0.c0)))LIKE((rt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (v0.c0))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((vt0.c0)>=(vt0.c0)))LIKE((rt0.c1 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((+ (v0.c0))) ORDER BY ((((vt0.c0)>=(vt0.c0)))LIKE((rt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (v0.c0))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((vt0.c0)>=(vt0.c0)))LIKE((rt0.c1 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((+ (v0.c0))) ORDER BY ((((vt0.c0)>=(vt0.c0)))LIKE((rt0.c1 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((((NOT (vt0.c0)))OR(((((rt0.c0)OR(v0.c1)))AND(vt0.c0)))))OR(((rt0.c2)&(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c0)))OR(((((rt0.c0)OR(v0.c1)))AND(vt0.c0)))))OR(((rt0.c2)&(rt0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((((NOT (vt0.c0)))OR(((((rt0.c0)OR(v0.c1)))AND(vt0.c0)))))OR(((rt0.c2)&(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c0)))OR(((((rt0.c0)OR(v0.c1)))AND(vt0.c0)))))OR(((rt0.c2)&(rt0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((((NOT (vt0.c0)))OR(((((rt0.c0)OR(v0.c1)))AND(vt0.c0)))))OR(((rt0.c2)&(rt0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (NULL) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND ('')) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND ('')) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND ('')) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND ('')) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND ('')) AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((((x'')OR(((x'')|(0.979789456305703)))))AND(x'')) WHERE ((~ (((v0.c1)<<(0.26979388218393396)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c1)<<(0.26979388218393396))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((x'')OR(((x'')|(0.979789456305703)))))AND(x'')));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((((x'')OR(((x'')|(0.979789456305703)))))AND(x'')) WHERE ((~ (((v0.c1)<<(0.26979388218393396)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c1)<<(0.26979388218393396))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((x'')OR(((x'')|(0.979789456305703)))))AND(x'')));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((((x'')OR(((x'')|(0.979789456305703)))))AND(x'')) WHERE ((~ (((v0.c1)<<(0.26979388218393396)))));
SELECT ALL * FROM v0 WHERE ((((v0.c1)) BETWEEN (((((v0.c0))>=((v0.c2))))) AND (((((NULL))==((v0.c0))))))) ORDER BY CASE WHEN ((v0.c2) ISNULL) THEN v0.c2 COLLATE RTRIM ELSE ((v0.c1)=(v0.c0)) END ASC  NULLS FIRST, ((v0.c0) NOT BETWEEN ((v0.c1 IN (v0.c2))) AND ((((v0.c2))>((v0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c1)) BETWEEN (((((v0.c0))>=((v0.c2))))) AND (((((NULL))=((v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c2) ISNULL) THEN v0.c2 COLLATE RTRIM ELSE ((v0.c1)==(v0.c0)) END ASC  NULLS FIRST, ((v0.c0) NOT BETWEEN ((v0.c1 IN (v0.c2))) AND ((((v0.c2))>((v0.c2)))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((v0.c1)) BETWEEN (((((v0.c0))>=((v0.c2))))) AND (((((NULL))==((v0.c0))))))) ORDER BY CASE WHEN ((v0.c2) ISNULL) THEN v0.c2 COLLATE RTRIM ELSE ((v0.c1)=(v0.c0)) END ASC  NULLS FIRST, ((v0.c0) NOT BETWEEN ((v0.c1 IN (v0.c2))) AND ((((v0.c2))>((v0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c1)) BETWEEN (((((v0.c0))>=((v0.c2))))) AND (((((NULL))=((v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c2) ISNULL) THEN v0.c2 COLLATE RTRIM ELSE ((v0.c1)==(v0.c0)) END ASC  NULLS FIRST, ((v0.c0) NOT BETWEEN ((v0.c1 IN (v0.c2))) AND ((((v0.c2))>((v0.c2)))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((v0.c1)) BETWEEN (((((v0.c0))>=((v0.c2))))) AND (((((NULL))==((v0.c0))))))) ORDER BY CASE WHEN ((v0.c2) ISNULL) THEN v0.c2 COLLATE RTRIM ELSE ((v0.c1)=(v0.c0)) END ASC  NULLS FIRST, ((v0.c0) NOT BETWEEN ((v0.c1 IN (v0.c2))) AND ((((v0.c2))>((v0.c2)))))  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE ((((~ (rt0.c0)))<(COALESCE(v0.c0, -1176158208))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0)))<(COALESCE(v0.c0, -1176158208)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((~ (rt0.c0)))<(COALESCE(v0.c0, -1176158208))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0)))<(COALESCE(v0.c0, -1176158208)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((~ (rt0.c0)))<(COALESCE(v0.c0, -1176158208))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON '3 쇼' WHERE (CASE ((((((((v0.c1)AND(vt0.c0)))OR(v0.c1)))AND(v0.c0)))OR(vt0.c0))  WHEN ((v0.c1)<(0x738985f5)) THEN CASE WHEN vt0.c0 THEN '0.745745294741398' WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN -2.2997979E7 ELSE v0.c1 END WHEN ('-2079723297' IN (v0.c0, x'')) THEN (((v0.c0, v0.c1, vt0.c0, v0.c0, 0.18197813325537893)) BETWEEN ((v0.c0, vt0.c0, vt0.c0, v0.c2, v0.c2)) AND ((0.4493932376065847, v0.c0, v0.c2, v0.c1, v0.c1))) WHEN ((v0.c1)OR(v0.c2)) THEN (~ (v0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((v0.c1)AND(vt0.c0)))OR(v0.c1)))AND(v0.c0)))OR(vt0.c0))  WHEN ((v0.c1)<(0x738985f5)) THEN CASE WHEN vt0.c0 THEN '0.745745294741398' WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN -2.2997979E7 ELSE v0.c1 END WHEN ('-2079723297' IN (v0.c0, x'')) THEN (((v0.c0, v0.c1, vt0.c0, v0.c0, 0.18197813325537893)) BETWEEN ((v0.c0, vt0.c0, vt0.c0, v0.c2, v0.c2)) AND ((0.4493932376065847, v0.c0, v0.c2, v0.c1, v0.c1))) WHEN ((v0.c1)OR(v0.c2)) THEN (~ (v0.c1)) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON '3 쇼');
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON '3 쇼' WHERE (CASE ((((((((v0.c1)AND(vt0.c0)))OR(v0.c1)))AND(v0.c0)))OR(vt0.c0))  WHEN ((v0.c1)<(0x738985f5)) THEN CASE WHEN vt0.c0 THEN '0.745745294741398' WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN -2.2997979E7 ELSE v0.c1 END WHEN ('-2079723297' IN (v0.c0, x'')) THEN (((v0.c0, v0.c1, vt0.c0, v0.c0, 0.18197813325537893)) BETWEEN ((v0.c0, vt0.c0, vt0.c0, v0.c2, v0.c2)) AND ((0.4493932376065847, v0.c0, v0.c2, v0.c1, v0.c1))) WHEN ((v0.c1)OR(v0.c2)) THEN (~ (v0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((v0.c1)AND(vt0.c0)))OR(v0.c1)))AND(v0.c0)))OR(vt0.c0))  WHEN ((v0.c1)<(0x738985f5)) THEN CASE WHEN vt0.c0 THEN '0.745745294741398' WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN -2.2997979E7 ELSE v0.c1 END WHEN ('-2079723297' IN (v0.c0, x'')) THEN (((v0.c0, v0.c1, vt0.c0, v0.c0, 0.18197813325537893)) BETWEEN ((v0.c0, vt0.c0, vt0.c0, v0.c2, v0.c2)) AND ((0.4493932376065847, v0.c0, v0.c2, v0.c1, v0.c1))) WHEN ((v0.c1)OR(v0.c2)) THEN (~ (v0.c1)) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON '3 쇼');
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON '3 쇼' WHERE (CASE ((((((((v0.c1)AND(vt0.c0)))OR(v0.c1)))AND(v0.c0)))OR(vt0.c0))  WHEN ((v0.c1)<(0x738985f5)) THEN CASE WHEN vt0.c0 THEN '0.745745294741398' WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN -2.2997979E7 ELSE v0.c1 END WHEN ('-2079723297' IN (v0.c0, x'')) THEN (((v0.c0, v0.c1, vt0.c0, v0.c0, 0.18197813325537893)) BETWEEN ((v0.c0, vt0.c0, vt0.c0, v0.c2, v0.c2)) AND ((0.4493932376065847, v0.c0, v0.c2, v0.c1, v0.c1))) WHEN ((v0.c1)OR(v0.c2)) THEN (~ (v0.c1)) END);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON CASE WHEN ((v0.c2) NOT BETWEEN (rt0.c1) AND (v0.c2)) THEN (- (v0.c0)) WHEN '5M\j^鉳b' THEN ((rt0.c0)<<(v0.c2)) WHEN rt0.c0 THEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) ELSE -2.079723297E9 END FULL OUTER JOIN vt0 ON ((((((((((v0.c1)AND(v0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(v0.c1))) BETWEEN (rt0.c1) AND ((((v0.c0, vt0.c0, v0.c2))=((vt0.c0, v0.c2, v0.c1))))) WHERE (((LENGTH(v0.c2)) NOT BETWEEN (((v0.c1) BETWEEN (vt0.c0) AND (v0.c1))) AND ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((LENGTH(v0.c2)) NOT BETWEEN (((v0.c1) BETWEEN (vt0.c0) AND (v0.c1))) AND ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CASE WHEN ((v0.c2) NOT BETWEEN (rt0.c1) AND (v0.c2)) THEN (- (v0.c0)) WHEN '5M\j^鉳b' THEN ((rt0.c0)<<(v0.c2)) WHEN rt0.c0 THEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) ELSE -2.079723297E9 END FULL OUTER JOIN vt0 ON ((((((((((v0.c1)AND(v0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(v0.c1))) BETWEEN (rt0.c1) AND ((((v0.c0, vt0.c0, v0.c2))=((vt0.c0, v0.c2, v0.c1))))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON CASE WHEN ((v0.c2) NOT BETWEEN (rt0.c1) AND (v0.c2)) THEN (- (v0.c0)) WHEN '5M\j^鉳b' THEN ((rt0.c0)<<(v0.c2)) WHEN rt0.c0 THEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) ELSE -2.079723297E9 END FULL OUTER JOIN vt0 ON ((((((((((v0.c1)AND(v0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(v0.c1))) BETWEEN (rt0.c1) AND ((((v0.c0, vt0.c0, v0.c2))=((vt0.c0, v0.c2, v0.c1))))) WHERE (((LENGTH(v0.c2)) NOT BETWEEN (((v0.c1) BETWEEN (vt0.c0) AND (v0.c1))) AND ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((LENGTH(v0.c2)) NOT BETWEEN (((v0.c1) BETWEEN (vt0.c0) AND (v0.c1))) AND ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CASE WHEN ((v0.c2) NOT BETWEEN (rt0.c1) AND (v0.c2)) THEN (- (v0.c0)) WHEN '5M\j^鉳b' THEN ((rt0.c0)<<(v0.c2)) WHEN rt0.c0 THEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) ELSE -2.079723297E9 END FULL OUTER JOIN vt0 ON ((((((((((v0.c1)AND(v0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(v0.c1))) BETWEEN (rt0.c1) AND ((((v0.c0, vt0.c0, v0.c2))=((vt0.c0, v0.c2, v0.c1))))));
SELECT ALL COUNT(*) FROM v0 WHERE ('' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (('' COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (('' COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('' COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt0 WHERE (UPPER(x'')) ORDER BY (+ (COALESCE(rt0.c2, rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(x'')) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ (COALESCE(rt0.c2, rt0.c1)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (UPPER(x'')) ORDER BY (+ (COALESCE(rt0.c2, rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(x'')) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ (COALESCE(rt0.c2, rt0.c1)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (UPPER(x'')) ORDER BY (+ (COALESCE(rt0.c2, rt0.c1)))  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (SQLITE_VERSION() COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION() COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (SQLITE_VERSION() COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION() COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (SQLITE_VERSION() COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON (('') NOT BETWEEN (v0.c2 COLLATE RTRIM) AND (CASE v0.c0  WHEN rt0.c1 THEN v0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c1 THEN rt0.c0 END)) WHERE (v0.c1) ORDER BY CAST(((rt0.c2) IS FALSE) AS BLOB), CASE ((v0.c2) NOT NULL)  WHEN CASE WHEN v0.c1 THEN v0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c1))) ELSE (rt0.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (('') NOT BETWEEN (v0.c2 COLLATE RTRIM) AND (CASE v0.c0  WHEN rt0.c1 THEN v0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c1 THEN rt0.c0 END)) ORDER BY CAST(((rt0.c2) IS FALSE) AS BLOB), CASE ((v0.c2) NOT NULL)  WHEN CASE WHEN v0.c1 THEN v0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c1))) ELSE (rt0.c0 IN ()) END);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON (('') NOT BETWEEN (v0.c2 COLLATE RTRIM) AND (CASE v0.c0  WHEN rt0.c1 THEN v0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c1 THEN rt0.c0 END)) WHERE (v0.c1) ORDER BY CAST(((rt0.c2) IS FALSE) AS BLOB), CASE ((v0.c2) NOT NULL)  WHEN CASE WHEN v0.c1 THEN v0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c1))) ELSE (rt0.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (('') NOT BETWEEN (v0.c2 COLLATE RTRIM) AND (CASE v0.c0  WHEN rt0.c1 THEN v0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c1 THEN rt0.c0 END)) ORDER BY CAST(((rt0.c2) IS FALSE) AS BLOB), CASE ((v0.c2) NOT NULL)  WHEN CASE WHEN v0.c1 THEN v0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c1))) ELSE (rt0.c0 IN ()) END);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON (('') NOT BETWEEN (v0.c2 COLLATE RTRIM) AND (CASE v0.c0  WHEN rt0.c1 THEN v0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c1 THEN rt0.c0 END)) WHERE (v0.c1) ORDER BY CAST(((rt0.c2) IS FALSE) AS BLOB), CASE ((v0.c2) NOT NULL)  WHEN CASE WHEN v0.c1 THEN v0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c1))) ELSE (rt0.c0 IN ()) END;
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN rt0 ON (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ()) WHERE (CAST(((((((((vt0.c0)OR(rt0.c0)))OR(v0.c2)))AND(v0.c1)))AND(v0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c0)OR(rt0.c0)))OR(v0.c2)))AND(v0.c1)))AND(v0.c1)) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ()));
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN rt0 ON (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ()) WHERE (CAST(((((((((vt0.c0)OR(rt0.c0)))OR(v0.c2)))AND(v0.c1)))AND(v0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c0)OR(rt0.c0)))OR(v0.c2)))AND(v0.c1)))AND(v0.c1)) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ()));
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN rt0 ON (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ()) WHERE (CAST(((((((((vt0.c0)OR(rt0.c0)))OR(v0.c2)))AND(v0.c1)))AND(v0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM rt0, vt0 WHERE (-22997979) ORDER BY CAST(x'' AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((-22997979) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(x'' AS NUMERIC) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (-22997979) ORDER BY CAST(x'' AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((-22997979) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(x'' AS NUMERIC) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (-22997979) ORDER BY CAST(x'' AS NUMERIC) DESC;
SELECT * FROM rt0, v0 WHERE (((rt0.c1) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((rt0.c1) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((rt0.c1) ISNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)IS NOT(rt0.c2)) AS BLOB)) ORDER BY CAST(((rt0.c1) BETWEEN (x'') AND (rt0.c1)) AS REAL) ASC  NULLS FIRST, ((((rt0.c0)AND(rt0.c0)))%((((rt0.c2))<=((rt0.c2))))) DESC  NULLS LAST, '' ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)IS NOT(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1) BETWEEN (x'') AND (rt0.c1)) AS REAL) ASC  NULLS FIRST, ((((rt0.c0)AND(rt0.c0)))%((((rt0.c2))<=((rt0.c2))))) DESC  NULLS LAST, '' ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)IS NOT(rt0.c2)) AS BLOB)) ORDER BY CAST(((rt0.c1) BETWEEN (x'') AND (rt0.c1)) AS REAL) ASC  NULLS FIRST, ((((rt0.c0)AND(rt0.c0)))%((((rt0.c2))<=((rt0.c2))))) DESC  NULLS LAST, '' ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)IS NOT(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1) BETWEEN (x'') AND (rt0.c1)) AS REAL) ASC  NULLS FIRST, ((((rt0.c0)AND(rt0.c0)))%((((rt0.c2))<=((rt0.c2))))) DESC  NULLS LAST, '' ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)IS NOT(rt0.c2)) AS BLOB)) ORDER BY CAST(((rt0.c1) BETWEEN (x'') AND (rt0.c1)) AS REAL) ASC  NULLS FIRST, ((((rt0.c0)AND(rt0.c0)))%((((rt0.c2))<=((rt0.c2))))) DESC  NULLS LAST, '' ASC;
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0))) NOTNULL)) ORDER BY x'', ROUND(vt0.c0, (('Nx') ISNULL))  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) IS FALSE), (NOT (vt0.c0)))) AND ((((vt0.c0)<(vt0.c0)), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY x'', ROUND(vt0.c0, (('Nx') ISNULL))  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) IS FALSE), (NOT (vt0.c0)))) AND ((((vt0.c0)<(vt0.c0)), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0))) NOTNULL)) ORDER BY x'', ROUND(vt0.c0, (('Nx') ISNULL))  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) IS FALSE), (NOT (vt0.c0)))) AND ((((vt0.c0)<(vt0.c0)), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY x'', ROUND(vt0.c0, (('Nx') ISNULL))  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) IS FALSE), (NOT (vt0.c0)))) AND ((((vt0.c0)<(vt0.c0)), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0))) NOTNULL)) ORDER BY x'', ROUND(vt0.c0, (('Nx') ISNULL))  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) IS FALSE), (NOT (vt0.c0)))) AND ((((vt0.c0)<(vt0.c0)), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((v0.c1 IN (rt0.c2)) IN (UPPER(DISTINCT vt0.c0), v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((v0.c1 IN (rt0.c2)) IN (UPPER(DISTINCT vt0.c0), v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, v0, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((v0.c1 IN (rt0.c2)) IN (UPPER(DISTINCT vt0.c0), v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((v0.c1 IN (rt0.c2)) IN (UPPER(DISTINCT vt0.c0), v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, v0, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((v0.c1 IN (rt0.c2)) IN (UPPER(DISTINCT vt0.c0), v0.c0 COLLATE RTRIM)));
SELECT * FROM rt0 WHERE (((rt0.c1) BETWEEN (((rt0.c2)=(0.8587403636845469))) AND ('0.44055694247594457')));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (((rt0.c2)==(0.8587403636845469))) AND ('0.44055694247594457'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1) BETWEEN (((rt0.c2)=(0.8587403636845469))) AND ('0.44055694247594457')));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (((rt0.c2)==(0.8587403636845469))) AND ('0.44055694247594457'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1) BETWEEN (((rt0.c2)=(0.8587403636845469))) AND ('0.44055694247594457')));
SELECT * FROM v0, rt0, vt0 WHERE (CASE v0.c2 COLLATE NOCASE  WHEN ((rt0.c2) BETWEEN (v0.c0) AND (0.85952128122818)) THEN (NOT (rt0.c2)) ELSE (((v0.c2))<>((v0.c2))) END) ORDER BY (((+ (x''))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c2 COLLATE NOCASE  WHEN ((rt0.c2) BETWEEN (v0.c0) AND (0.85952128122818)) THEN (NOT (rt0.c2)) ELSE (((v0.c2))<>((v0.c2))) END) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((+ (x''))) IS FALSE));
SELECT * FROM v0, rt0, vt0 WHERE (CASE v0.c2 COLLATE NOCASE  WHEN ((rt0.c2) BETWEEN (v0.c0) AND (0.85952128122818)) THEN (NOT (rt0.c2)) ELSE (((v0.c2))<>((v0.c2))) END) ORDER BY (((+ (x''))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c2 COLLATE NOCASE  WHEN ((rt0.c2) BETWEEN (v0.c0) AND (0.85952128122818)) THEN (NOT (rt0.c2)) ELSE (((v0.c2))<>((v0.c2))) END) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((+ (x''))) IS FALSE));
SELECT * FROM v0, rt0, vt0 WHERE (CASE v0.c2 COLLATE NOCASE  WHEN ((rt0.c2) BETWEEN (v0.c0) AND (0.85952128122818)) THEN (NOT (rt0.c2)) ELSE (((v0.c2))<>((v0.c2))) END) ORDER BY (((+ (x''))) IS FALSE);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)<=(vt0.c0))) IS TRUE)) ORDER BY ((((vt0.c0)&(rt0.c0)))<>(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END))  NULLS LAST, (((vt0.c0 IN ()))LIKE(((vt0.c0)OR(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<=(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0)&(rt0.c0)))<>(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END))  NULLS LAST, (((vt0.c0 IN ()))LIKE(((vt0.c0)OR(rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)<=(vt0.c0))) IS TRUE)) ORDER BY ((((vt0.c0)&(rt0.c0)))<>(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END))  NULLS LAST, (((vt0.c0 IN ()))LIKE(((vt0.c0)OR(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<=(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0)&(rt0.c0)))<>(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END))  NULLS LAST, (((vt0.c0 IN ()))LIKE(((vt0.c0)OR(rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)<=(vt0.c0))) IS TRUE)) ORDER BY ((((vt0.c0)&(rt0.c0)))<>(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END))  NULLS LAST, (((vt0.c0 IN ()))LIKE(((vt0.c0)OR(rt0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CASE ABS(rt0.c0)  WHEN CAST(vt0.c0 AS TEXT) THEN ((rt0.c1) NOT NULL) END WHERE ((((- (vt0.c0))) BETWEEN ((~ (rt0.c1))) AND (CASE WHEN rt0.c2 THEN 0.37359958304565 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN x'7523' ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) BETWEEN ((~ (rt0.c1))) AND (CASE WHEN rt0.c2 THEN 0.37359958304565 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN x'7523' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CASE ABS(rt0.c0)  WHEN CAST(vt0.c0 AS TEXT) THEN ((rt0.c1) NOT NULL) END);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CASE ABS(rt0.c0)  WHEN CAST(vt0.c0 AS TEXT) THEN ((rt0.c1) NOT NULL) END WHERE ((((- (vt0.c0))) BETWEEN ((~ (rt0.c1))) AND (CASE WHEN rt0.c2 THEN 0.37359958304565 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN x'7523' ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) BETWEEN ((~ (rt0.c1))) AND (CASE WHEN rt0.c2 THEN 0.37359958304565 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN x'7523' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CASE ABS(rt0.c0)  WHEN CAST(vt0.c0 AS TEXT) THEN ((rt0.c1) NOT NULL) END);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CASE ABS(rt0.c0)  WHEN CAST(vt0.c0 AS TEXT) THEN ((rt0.c1) NOT NULL) END WHERE ((((- (vt0.c0))) BETWEEN ((~ (rt0.c1))) AND (CASE WHEN rt0.c2 THEN 0.37359958304565 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN x'7523' ELSE vt0.c0 END)));
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0 IN ()))&(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))&(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0 IN ()))&(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))&(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0 IN ()))&(vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1)OR((- (rt0.c1)))))AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))) WHERE ((((((((rt0.c0))<=((vt0.c0))))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0))<=((vt0.c0))))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1)OR((- (rt0.c1)))))AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1)OR((- (rt0.c1)))))AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))) WHERE ((((((((rt0.c0))<=((vt0.c0))))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0))<=((vt0.c0))))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1)OR((- (rt0.c1)))))AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1)OR((- (rt0.c1)))))AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))) WHERE ((((((((rt0.c0))<=((vt0.c0))))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE '1997695471'  WHEN ((vt0.c0)AND(vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '1997695471'  WHEN ((vt0.c0)AND(vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE NULL END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE '1997695471'  WHEN ((vt0.c0)AND(vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '1997695471'  WHEN ((vt0.c0)AND(vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE NULL END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE '1997695471'  WHEN ((vt0.c0)AND(vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE NULL END);
SELECT * FROM rt0 CROSS JOIN v0 ON (((((rt0.c1, v0.c1, v0.c2, v0.c0, v0.c1))<>((rt0.c1, v0.c2, ' \n', v0.c0, v0.c2))))>(CASE rt0.c1  WHEN rt0.c1 THEN 1524875772 WHEN rt0.c0 THEN v0.c2 WHEN rt0.c0 THEN v0.c0 ELSE '-1176158208' END)) WHERE (CASE (((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c1)) AND ((v0.c1, v0.c1, rt0.c0)))  WHEN CASE v0.c1  WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END THEN ((((v0.c1)OR(v0.c0)))AND(rt0.c0)) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))) THEN 0Xffffffff8409f0df WHEN ((v0.c1) NOT BETWEEN (rt0.c2) AND (v0.c1)) THEN IFNULL(DISTINCT rt0.c2, rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c1)) AND ((v0.c1, v0.c1, rt0.c0)))  WHEN CASE v0.c1  WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END THEN ((((v0.c1)OR(v0.c0)))AND(rt0.c0)) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))) THEN 0Xffffffff8409f0df WHEN ((v0.c1) NOT BETWEEN (rt0.c2) AND (v0.c1)) THEN IFNULL(DISTINCT rt0.c2, rt0.c2) END) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((((rt0.c1, v0.c1, v0.c2, v0.c0, v0.c1))<>((rt0.c1, v0.c2, ' \n', v0.c0, v0.c2))))>(CASE rt0.c1  WHEN rt0.c1 THEN 1524875772 WHEN rt0.c0 THEN v0.c2 WHEN rt0.c0 THEN v0.c0 ELSE '-1176158208' END)));
SELECT * FROM rt0 CROSS JOIN v0 ON (((((rt0.c1, v0.c1, v0.c2, v0.c0, v0.c1))<>((rt0.c1, v0.c2, ' \n', v0.c0, v0.c2))))>(CASE rt0.c1  WHEN rt0.c1 THEN 1524875772 WHEN rt0.c0 THEN v0.c2 WHEN rt0.c0 THEN v0.c0 ELSE '-1176158208' END)) WHERE (CASE (((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c1)) AND ((v0.c1, v0.c1, rt0.c0)))  WHEN CASE v0.c1  WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END THEN ((((v0.c1)OR(v0.c0)))AND(rt0.c0)) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))) THEN 0Xffffffff8409f0df WHEN ((v0.c1) NOT BETWEEN (rt0.c2) AND (v0.c1)) THEN IFNULL(DISTINCT rt0.c2, rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c1)) AND ((v0.c1, v0.c1, rt0.c0)))  WHEN CASE v0.c1  WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END THEN ((((v0.c1)OR(v0.c0)))AND(rt0.c0)) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))) THEN 0Xffffffff8409f0df WHEN ((v0.c1) NOT BETWEEN (rt0.c2) AND (v0.c1)) THEN IFNULL(DISTINCT rt0.c2, rt0.c2) END) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((((rt0.c1, v0.c1, v0.c2, v0.c0, v0.c1))<>((rt0.c1, v0.c2, ' \n', v0.c0, v0.c2))))>(CASE rt0.c1  WHEN rt0.c1 THEN 1524875772 WHEN rt0.c0 THEN v0.c2 WHEN rt0.c0 THEN v0.c0 ELSE '-1176158208' END)));
SELECT * FROM rt0 CROSS JOIN v0 ON (((((rt0.c1, v0.c1, v0.c2, v0.c0, v0.c1))<>((rt0.c1, v0.c2, ' \n', v0.c0, v0.c2))))>(CASE rt0.c1  WHEN rt0.c1 THEN 1524875772 WHEN rt0.c0 THEN v0.c2 WHEN rt0.c0 THEN v0.c0 ELSE '-1176158208' END)) WHERE (CASE (((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c1)) AND ((v0.c1, v0.c1, rt0.c0)))  WHEN CASE v0.c1  WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END THEN ((((v0.c1)OR(v0.c0)))AND(rt0.c0)) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))) THEN 0Xffffffff8409f0df WHEN ((v0.c1) NOT BETWEEN (rt0.c2) AND (v0.c1)) THEN IFNULL(DISTINCT rt0.c2, rt0.c2) END);
SELECT * FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((((CAST(v0.c1 AS REAL))AND(vt0.c0 COLLATE NOCASE)))OR(CAST(v0.c0 AS BLOB))) WHERE ((+ (v0.c2)));
SELECT SUM(count) FROM (SELECT (((+ (v0.c2))) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((((CAST(v0.c1 AS REAL))AND(vt0.c0 COLLATE NOCASE)))OR(CAST(v0.c0 AS BLOB))));
SELECT * FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((((CAST(v0.c1 AS REAL))AND(vt0.c0 COLLATE NOCASE)))OR(CAST(v0.c0 AS BLOB))) WHERE ((+ (v0.c2)));
SELECT SUM(count) FROM (SELECT (((+ (v0.c2))) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((((CAST(v0.c1 AS REAL))AND(vt0.c0 COLLATE NOCASE)))OR(CAST(v0.c0 AS BLOB))));
SELECT * FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((((CAST(v0.c1 AS REAL))AND(vt0.c0 COLLATE NOCASE)))OR(CAST(v0.c0 AS BLOB))) WHERE ((+ (v0.c2)));
SELECT * FROM rt0 WHERE (((((rt0.c2) IS TRUE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE)) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2) IS TRUE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE)) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2) IS TRUE)) ISNULL));
SELECT * FROM rt0, vt0, v0 WHERE ('jt');
SELECT SUM(count) FROM (SELECT ALL (('jt') IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE ('jt');
SELECT SUM(count) FROM (SELECT ALL (('jt') IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE ('jt');
SELECT * FROM vt0, v0, rt0 WHERE (UNLIKELY(((rt0.c1)>>(v0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((rt0.c1)>>(v0.c0)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (UNLIKELY(((rt0.c1)>>(v0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((rt0.c1)>>(v0.c0)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (UNLIKELY(((rt0.c1)>>(v0.c0))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((NULL) IS FALSE) THEN NULL ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) END) ORDER BY (((rt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND (((0.010993812652406398 IN ()))))  NULLS FIRST, (rt0.c2 IN ()) COLLATE BINARY DESC  NULLS FIRST, (rt0.c1 IN ()) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL) IS FALSE) THEN NULL ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND (((0.010993812652406398 IN ()))))  NULLS FIRST, (rt0.c2 IN ()) COLLATE BINARY DESC  NULLS FIRST, (rt0.c1 IN ()) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((NULL) IS FALSE) THEN NULL ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) END) ORDER BY (((rt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND (((0.010993812652406398 IN ()))))  NULLS FIRST, (rt0.c2 IN ()) COLLATE BINARY DESC  NULLS FIRST, (rt0.c1 IN ()) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL) IS FALSE) THEN NULL ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND (((0.010993812652406398 IN ()))))  NULLS FIRST, (rt0.c2 IN ()) COLLATE BINARY DESC  NULLS FIRST, (rt0.c1 IN ()) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((NULL) IS FALSE) THEN NULL ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) END) ORDER BY (((rt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND (((0.010993812652406398 IN ()))))  NULLS FIRST, (rt0.c2 IN ()) COLLATE BINARY DESC  NULLS FIRST, (rt0.c1 IN ()) COLLATE BINARY ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(LIKELIHOOD(DISTINCT vt0.c0, 0.6396624761874316) AS BLOB)) ORDER BY json(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELIHOOD(DISTINCT vt0.c0, 0.6396624761874316) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY json(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(LIKELIHOOD(DISTINCT vt0.c0, 0.6396624761874316) AS BLOB)) ORDER BY json(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELIHOOD(DISTINCT vt0.c0, 0.6396624761874316) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY json(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(LIKELIHOOD(DISTINCT vt0.c0, 0.6396624761874316) AS BLOB)) ORDER BY json(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST;
SELECT * FROM v0, rt0, vt0 WHERE ((- (v0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE ((- (v0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE ((- (v0.c1)) COLLATE NOCASE);
SELECT ALL * FROM vt0, rt0, v0 WHERE (NULL) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY x'');
SELECT ALL * FROM vt0, rt0, v0 WHERE (NULL) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY x'');
SELECT ALL * FROM vt0, rt0, v0 WHERE (NULL) ORDER BY x'';
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, '-948073951'))))*((vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, '-948073951'))))*((vt0.c0 IN (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, '-948073951'))))*((vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, '-948073951'))))*((vt0.c0 IN (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL)) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, '-948073951'))))*((vt0.c0 IN (vt0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE (STRFTIME((- (v0.c1)), NULL COLLATE NOCASE, ((v0.c0) NOT BETWEEN (-1233667052) AND (v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME((- (v0.c1)), NULL COLLATE NOCASE, ((v0.c0) NOT BETWEEN (-1233667052) AND (v0.c2)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (STRFTIME((- (v0.c1)), NULL COLLATE NOCASE, ((v0.c0) NOT BETWEEN (-1233667052) AND (v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME((- (v0.c1)), NULL COLLATE NOCASE, ((v0.c0) NOT BETWEEN (-1233667052) AND (v0.c2)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (STRFTIME((- (v0.c1)), NULL COLLATE NOCASE, ((v0.c0) NOT BETWEEN (-1233667052) AND (v0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NULL IN (1776327185)));
SELECT SUM(count) FROM (SELECT (((NULL IN (1776327185))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NULL IN (1776327185)));
SELECT SUM(count) FROM (SELECT (((NULL IN (1776327185))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NULL IN (1776327185)));
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE)) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND('-2079723297')))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0)))IS('FmN{䩣z5x')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND('-2079723297')))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0)))IS('FmN{䩣z5x')) ASC);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE)) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND('-2079723297')))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0)))IS('FmN{䩣z5x')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND('-2079723297')))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0)))IS('FmN{䩣z5x')) ASC);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE)) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND('-2079723297')))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0)))IS('FmN{䩣z5x')) ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY CAST(((rt0.c2)IS(rt0.c1)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c2)IS(rt0.c1)) AS NUMERIC) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY CAST(((rt0.c2)IS(rt0.c1)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c2)IS(rt0.c1)) AS NUMERIC) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY CAST(((rt0.c2)IS(rt0.c1)) AS NUMERIC) DESC;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((((((vt0.c0 COLLATE RTRIM)AND((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS NUMERIC))))AND(UNLIKELY(v0.c0))))AND(((v0.c2) ISNULL))) WHERE (CAST('217853853' COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST('217853853' COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((((((vt0.c0 COLLATE RTRIM)AND((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS NUMERIC))))AND(UNLIKELY(v0.c0))))AND(((v0.c2) ISNULL))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((((((vt0.c0 COLLATE RTRIM)AND((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS NUMERIC))))AND(UNLIKELY(v0.c0))))AND(((v0.c2) ISNULL))) WHERE (CAST('217853853' COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST('217853853' COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((((((vt0.c0 COLLATE RTRIM)AND((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS NUMERIC))))AND(UNLIKELY(v0.c0))))AND(((v0.c2) ISNULL))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((((((vt0.c0 COLLATE RTRIM)AND((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS NUMERIC))))AND(UNLIKELY(v0.c0))))AND(((v0.c2) ISNULL))) WHERE (CAST('217853853' COLLATE RTRIM AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN ((((rt0.c1, x'', rt0.c0))=((rt0.c0, rt0.c1, rt0.c0))), '-2127353540'))) ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)), 848529761, (((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, x'b254')) AND ((rt0.c0, rt0.c0, rt0.c0)))))>((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)), CAST(rt0.c0 AS TEXT), ((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN ((((rt0.c1, x'', rt0.c0))==((rt0.c0, rt0.c1, rt0.c0))), '-2127353540'))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)), 848529761, (((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, x'b254')) AND ((rt0.c0, rt0.c0, rt0.c0)))))>((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)), CAST(rt0.c0 AS TEXT), ((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2))))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN ((((rt0.c1, x'', rt0.c0))=((rt0.c0, rt0.c1, rt0.c0))), '-2127353540'))) ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)), 848529761, (((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, x'b254')) AND ((rt0.c0, rt0.c0, rt0.c0)))))>((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)), CAST(rt0.c0 AS TEXT), ((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN ((((rt0.c1, x'', rt0.c0))==((rt0.c0, rt0.c1, rt0.c0))), '-2127353540'))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)), 848529761, (((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, x'b254')) AND ((rt0.c0, rt0.c0, rt0.c0)))))>((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)), CAST(rt0.c0 AS TEXT), ((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2))))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN ((((rt0.c1, x'', rt0.c0))=((rt0.c0, rt0.c1, rt0.c0))), '-2127353540'))) ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)), 848529761, (((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, x'b254')) AND ((rt0.c0, rt0.c0, rt0.c0)))))>((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)), CAST(rt0.c0 AS TEXT), ((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (-1952214353) ORDER BY ((NULL) BETWEEN (0X738985f5) AND (rt0.c1)), ((((rt0.c2)<=(rt0.c0))) BETWEEN (((rt0.c0)-(rt0.c0))) AND (CAST(rt0.c1 AS INTEGER)))  NULLS LAST, ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) IS TRUE) DESC, CASE WHEN MAX(NULL, vt0.c0) THEN ((rt0.c0)!=(rt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((-1952214353) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((NULL) BETWEEN (0x738985f5) AND (rt0.c1)), ((((rt0.c2)<=(rt0.c0))) BETWEEN (((rt0.c0)-(rt0.c0))) AND (CAST(rt0.c1 AS INTEGER)))  NULLS LAST, ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) IS TRUE) DESC, CASE WHEN MAX(NULL, vt0.c0) THEN ((rt0.c0)!=(rt0.c1)) END DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (-1952214353) ORDER BY ((NULL) BETWEEN (0X738985f5) AND (rt0.c1)), ((((rt0.c2)<=(rt0.c0))) BETWEEN (((rt0.c0)-(rt0.c0))) AND (CAST(rt0.c1 AS INTEGER)))  NULLS LAST, ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) IS TRUE) DESC, CASE WHEN MAX(NULL, vt0.c0) THEN ((rt0.c0)!=(rt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((-1952214353) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((NULL) BETWEEN (0x738985f5) AND (rt0.c1)), ((((rt0.c2)<=(rt0.c0))) BETWEEN (((rt0.c0)-(rt0.c0))) AND (CAST(rt0.c1 AS INTEGER)))  NULLS LAST, ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) IS TRUE) DESC, CASE WHEN MAX(NULL, vt0.c0) THEN ((rt0.c0)!=(rt0.c1)) END DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (-1952214353) ORDER BY ((NULL) BETWEEN (0X738985f5) AND (rt0.c1)), ((((rt0.c2)<=(rt0.c0))) BETWEEN (((rt0.c0)-(rt0.c0))) AND (CAST(rt0.c1 AS INTEGER)))  NULLS LAST, ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) IS TRUE) DESC, CASE WHEN MAX(NULL, vt0.c0) THEN ((rt0.c0)!=(rt0.c1)) END DESC;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((v0.c1)IS('+%I-'))) ORDER BY TRIM(ROUND(vt0.c0, rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c1)IS('+%I-'))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY TRIM(ROUND(vt0.c0, rt0.c2)) ASC);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((v0.c1)IS('+%I-'))) ORDER BY TRIM(ROUND(vt0.c0, rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c1)IS('+%I-'))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY TRIM(ROUND(vt0.c0, rt0.c2)) ASC);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((v0.c1)IS('+%I-'))) ORDER BY TRIM(ROUND(vt0.c0, rt0.c2)) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE))OR(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE))OR(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE))OR(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE))OR(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE))OR(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((CASE v0.c2  WHEN rt0.c0 THEN '429883401' WHEN v0.c2 THEN 0X63a927b7 WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END) NOT NULL)) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c2  WHEN rt0.c0 THEN '429883401' WHEN v0.c2 THEN 0X63a927b7 WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END) NOT NULL)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY vt0.c0 ASC);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((CASE v0.c2  WHEN rt0.c0 THEN '429883401' WHEN v0.c2 THEN 0X63a927b7 WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END) NOT NULL)) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c2  WHEN rt0.c0 THEN '429883401' WHEN v0.c2 THEN 0X63a927b7 WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END) NOT NULL)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY vt0.c0 ASC);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((CASE v0.c2  WHEN rt0.c0 THEN '429883401' WHEN v0.c2 THEN 0X63a927b7 WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END) NOT NULL)) ORDER BY vt0.c0 ASC;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ('728202393');
SELECT SUM(count) FROM (SELECT (('728202393') IS TRUE)  as count FROM rt0 NOT INDEXED NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ('728202393');
SELECT SUM(count) FROM (SELECT (('728202393') IS TRUE)  as count FROM rt0 NOT INDEXED NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ('728202393');
SELECT * FROM v0, vt0, rt0 WHERE ((((HEX(v0.c1), '0.14460523052124963', UNLIKELY(DISTINCT v0.c2)))<>(((((rt0.c1))>=((vt0.c0))), CASE v0.c1  WHEN v0.c1 THEN rt0.c1 WHEN v0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 ELSE v0.c0 END, rt0.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((HEX(v0.c1), '0.14460523052124963', UNLIKELY(DISTINCT v0.c2)))<>(((((rt0.c1))>=((vt0.c0))), CASE v0.c1  WHEN v0.c1 THEN rt0.c1 WHEN v0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 ELSE v0.c0 END, rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE ((((HEX(v0.c1), '0.14460523052124963', UNLIKELY(DISTINCT v0.c2)))<>(((((rt0.c1))>=((vt0.c0))), CASE v0.c1  WHEN v0.c1 THEN rt0.c1 WHEN v0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 ELSE v0.c0 END, rt0.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((HEX(v0.c1), '0.14460523052124963', UNLIKELY(DISTINCT v0.c2)))<>(((((rt0.c1))>=((vt0.c0))), CASE v0.c1  WHEN v0.c1 THEN rt0.c1 WHEN v0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 ELSE v0.c0 END, rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE ((((HEX(v0.c1), '0.14460523052124963', UNLIKELY(DISTINCT v0.c2)))<>(((((rt0.c1))>=((vt0.c0))), CASE v0.c1  WHEN v0.c1 THEN rt0.c1 WHEN v0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 ELSE v0.c0 END, rt0.c2 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM v0 WHERE ((('0.979789456305703') BETWEEN (TRIM(DISTINCT v0.c1, v0.c1)) AND (((v0.c2)<(v0.c0))))) ORDER BY ((json_object(v0.c2, v0.c0, v0.c0, v0.c2, v0.c2, v0.c2, v0.c0, v0.c0))||(((v0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL (((('0.979789456305703') BETWEEN (TRIM(DISTINCT v0.c1, v0.c1)) AND (((v0.c2)<(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((json_object(v0.c2, v0.c0, v0.c0, v0.c2, v0.c2, v0.c2, v0.c0, v0.c0))||(((v0.c2) ISNULL))));
SELECT ALL COUNT(*) FROM v0 WHERE ((('0.979789456305703') BETWEEN (TRIM(DISTINCT v0.c1, v0.c1)) AND (((v0.c2)<(v0.c0))))) ORDER BY ((json_object(v0.c2, v0.c0, v0.c0, v0.c2, v0.c2, v0.c2, v0.c0, v0.c0))||(((v0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL (((('0.979789456305703') BETWEEN (TRIM(DISTINCT v0.c1, v0.c1)) AND (((v0.c2)<(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((json_object(v0.c2, v0.c0, v0.c0, v0.c2, v0.c2, v0.c2, v0.c0, v0.c0))||(((v0.c2) ISNULL))));
SELECT ALL COUNT(*) FROM v0 WHERE ((('0.979789456305703') BETWEEN (TRIM(DISTINCT v0.c1, v0.c1)) AND (((v0.c2)<(v0.c0))))) ORDER BY ((json_object(v0.c2, v0.c0, v0.c0, v0.c2, v0.c2, v0.c2, v0.c0, v0.c0))||(((v0.c2) ISNULL)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((+ (rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END, x''))<((JULIANDAY(rt0.c2, rt0.c2, rt0.c0, rt0.c0, rt0.c0), COALESCE(rt0.c2, vt0.c0, vt0.c0, x''), CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((+ (rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END, x''))<((JULIANDAY(rt0.c2, rt0.c2, rt0.c0, rt0.c0, rt0.c0), COALESCE(rt0.c2, vt0.c0, vt0.c0, x''), CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((+ (rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END, x''))<((JULIANDAY(rt0.c2, rt0.c2, rt0.c0, rt0.c0, rt0.c0), COALESCE(rt0.c2, vt0.c0, vt0.c0, x''), CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((+ (rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END, x''))<((JULIANDAY(rt0.c2, rt0.c2, rt0.c0, rt0.c0, rt0.c0), COALESCE(rt0.c2, vt0.c0, vt0.c0, x''), CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((+ (rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END, x''))<((JULIANDAY(rt0.c2, rt0.c2, rt0.c0, rt0.c0, rt0.c0), COALESCE(rt0.c2, vt0.c0, vt0.c0, x''), CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))) ORDER BY rt0.c1  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN v0 WHERE (v0.c2) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) ASC, ((((vt0.c0)*(0.2816885367750227)))-(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN v0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) ASC, ((((vt0.c0)*(0.2816885367750227)))-(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN v0 WHERE (v0.c2) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) ASC, ((((vt0.c0)*(0.2816885367750227)))-(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN v0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) ASC, ((((vt0.c0)*(0.2816885367750227)))-(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN v0 WHERE (v0.c2) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) ASC, ((((vt0.c0)*(0.2816885367750227)))-(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) DESC;
SELECT ALL * FROM v0, rt0 WHERE (NULL) ORDER BY (- (((0.7714470844421683)>>(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (((0.7714470844421683)>>(rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (NULL) ORDER BY (- (((0.7714470844421683)>>(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (((0.7714470844421683)>>(rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (NULL) ORDER BY (- (((0.7714470844421683)>>(rt0.c1)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ()) INNER JOIN v0 ON v0.c2 WHERE (CASE WHEN ((0X2863eabc)OR(vt0.c0)) THEN ((rt0.c1) BETWEEN (v0.c0) AND (v0.c1)) WHEN (NOT (rt0.c1)) THEN CAST(v0.c0 AS REAL) WHEN ((rt0.c1)IS NOT(v0.c0)) THEN CAST(v0.c0 AS INTEGER) ELSE (rt0.c1 IN ()) END) ORDER BY 1.776327185E9  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((0x2863eabc)OR(vt0.c0)) THEN ((rt0.c1) BETWEEN (v0.c0) AND (v0.c1)) WHEN (NOT (rt0.c1)) THEN CAST(v0.c0 AS REAL) WHEN ((rt0.c1)IS NOT(v0.c0)) THEN CAST(v0.c0 AS INTEGER) ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ()) INNER JOIN v0 ON v0.c2 ORDER BY 1.776327185E9  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ()) INNER JOIN v0 ON v0.c2 WHERE (CASE WHEN ((0X2863eabc)OR(vt0.c0)) THEN ((rt0.c1) BETWEEN (v0.c0) AND (v0.c1)) WHEN (NOT (rt0.c1)) THEN CAST(v0.c0 AS REAL) WHEN ((rt0.c1)IS NOT(v0.c0)) THEN CAST(v0.c0 AS INTEGER) ELSE (rt0.c1 IN ()) END) ORDER BY 1.776327185E9  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((0x2863eabc)OR(vt0.c0)) THEN ((rt0.c1) BETWEEN (v0.c0) AND (v0.c1)) WHEN (NOT (rt0.c1)) THEN CAST(v0.c0 AS REAL) WHEN ((rt0.c1)IS NOT(v0.c0)) THEN CAST(v0.c0 AS INTEGER) ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ()) INNER JOIN v0 ON v0.c2 ORDER BY 1.776327185E9  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ()) INNER JOIN v0 ON v0.c2 WHERE (CASE WHEN ((0X2863eabc)OR(vt0.c0)) THEN ((rt0.c1) BETWEEN (v0.c0) AND (v0.c1)) WHEN (NOT (rt0.c1)) THEN CAST(v0.c0 AS REAL) WHEN ((rt0.c1)IS NOT(v0.c0)) THEN CAST(v0.c0 AS INTEGER) ELSE (rt0.c1 IN ()) END) ORDER BY 1.776327185E9  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((((rt0.c0)OR(rt0.c2)), CAST(rt0.c1 AS BLOB), (((rt0.c1, rt0.c0, rt0.c2))>((rt0.c0, rt0.c0, rt0.c2))))) AND ((rt0.c0, CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, ((rt0.c1)LIKE(NULL)))))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((((rt0.c0)OR(rt0.c2)), CAST(rt0.c1 AS BLOB), (((rt0.c1, rt0.c0, rt0.c2))>((rt0.c0, rt0.c0, rt0.c2))))) AND ((rt0.c0, CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, ((rt0.c1)LIKE(NULL)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((((rt0.c0)OR(rt0.c2)), CAST(rt0.c1 AS BLOB), (((rt0.c1, rt0.c0, rt0.c2))>((rt0.c0, rt0.c0, rt0.c2))))) AND ((rt0.c0, CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, ((rt0.c1)LIKE(NULL)))))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((((rt0.c0)OR(rt0.c2)), CAST(rt0.c1 AS BLOB), (((rt0.c1, rt0.c0, rt0.c2))>((rt0.c0, rt0.c0, rt0.c2))))) AND ((rt0.c0, CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, ((rt0.c1)LIKE(NULL)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((((rt0.c0)OR(rt0.c2)), CAST(rt0.c1 AS BLOB), (((rt0.c1, rt0.c0, rt0.c2))>((rt0.c0, rt0.c0, rt0.c2))))) AND ((rt0.c0, CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, ((rt0.c1)LIKE(NULL)))))) ORDER BY rt0.c2 ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(vt0.c0 AS REAL) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY (NOT (x'')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE RTRIM  WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(vt0.c0 AS REAL) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (NOT (x'')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(vt0.c0 AS REAL) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY (NOT (x'')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE RTRIM  WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(vt0.c0 AS REAL) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (NOT (x'')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(vt0.c0 AS REAL) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY (NOT (x'')) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c2);
SELECT ALL * FROM v0, rt0, vt0 WHERE (COALESCE(((vt0.c0) NOT NULL), ((rt0.c0)<<(NULL)))) ORDER BY ((vt0.c0 COLLATE NOCASE)<>((~ (0.9225651170243188))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(((vt0.c0) NOT NULL), ((rt0.c0)<<(NULL)))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)<>((~ (0.9225651170243188))))  NULLS LAST);
SELECT ALL * FROM v0, rt0, vt0 WHERE (COALESCE(((vt0.c0) NOT NULL), ((rt0.c0)<<(NULL)))) ORDER BY ((vt0.c0 COLLATE NOCASE)<>((~ (0.9225651170243188))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(((vt0.c0) NOT NULL), ((rt0.c0)<<(NULL)))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)<>((~ (0.9225651170243188))))  NULLS LAST);
SELECT ALL * FROM v0, rt0, vt0 WHERE (COALESCE(((vt0.c0) NOT NULL), ((rt0.c0)<<(NULL)))) ORDER BY ((vt0.c0 COLLATE NOCASE)<>((~ (0.9225651170243188))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)+(((((vt0.c0)AND(NULL)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)+(((((vt0.c0)AND(NULL)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)+(((((vt0.c0)AND(NULL)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)+(((((vt0.c0)AND(NULL)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)+(((((vt0.c0)AND(NULL)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((~ (((v0.c2) BETWEEN (rt0.c1) AND (-1.233667052E9))))) ORDER BY ((CASE rt0.c2  WHEN 0.4731480124662948 THEN rt0.c2 WHEN rt0.c1 THEN v0.c1 WHEN v0.c1 THEN rt0.c1 END) IS FALSE) DESC, ((CAST(rt0.c2 AS TEXT))OR((('oN0<փi閨e>') NOT BETWEEN (rt0.c0) AND (v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c2) BETWEEN (rt0.c1) AND (-1.233667052E9))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CASE rt0.c2  WHEN 0.4731480124662948 THEN rt0.c2 WHEN rt0.c1 THEN v0.c1 WHEN v0.c1 THEN rt0.c1 END) IS FALSE) DESC, ((CAST(rt0.c2 AS TEXT))OR((('oN0<փi閨e>') NOT BETWEEN (rt0.c0) AND (v0.c1)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((~ (((v0.c2) BETWEEN (rt0.c1) AND (-1.233667052E9))))) ORDER BY ((CASE rt0.c2  WHEN 0.4731480124662948 THEN rt0.c2 WHEN rt0.c1 THEN v0.c1 WHEN v0.c1 THEN rt0.c1 END) IS FALSE) DESC, ((CAST(rt0.c2 AS TEXT))OR((('oN0<փi閨e>') NOT BETWEEN (rt0.c0) AND (v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c2) BETWEEN (rt0.c1) AND (-1.233667052E9))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CASE rt0.c2  WHEN 0.4731480124662948 THEN rt0.c2 WHEN rt0.c1 THEN v0.c1 WHEN v0.c1 THEN rt0.c1 END) IS FALSE) DESC, ((CAST(rt0.c2 AS TEXT))OR((('oN0<փi閨e>') NOT BETWEEN (rt0.c0) AND (v0.c1)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((~ (((v0.c2) BETWEEN (rt0.c1) AND (-1.233667052E9))))) ORDER BY ((CASE rt0.c2  WHEN 0.4731480124662948 THEN rt0.c2 WHEN rt0.c1 THEN v0.c1 WHEN v0.c1 THEN rt0.c1 END) IS FALSE) DESC, ((CAST(rt0.c2 AS TEXT))OR((('oN0<փi閨e>') NOT BETWEEN (rt0.c0) AND (v0.c1))));
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c2 COLLATE NOCASE))));
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((rt0.c2)>(v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>(v0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((rt0.c2)>(v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>(v0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((rt0.c2)>(v0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON v0.c2 RIGHT OUTER JOIN vt0 ON (- (COALESCE(DISTINCT rt0.c0, v0.c2))) WHERE (LIKELY((rt0.c1 IN ()))) ORDER BY x'3eb2' DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((rt0.c1 IN ()))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON v0.c2 RIGHT OUTER JOIN vt0 ON (- (COALESCE(DISTINCT rt0.c0, v0.c2))) ORDER BY x'3eb2' DESC);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON v0.c2 RIGHT OUTER JOIN vt0 ON (- (COALESCE(DISTINCT rt0.c0, v0.c2))) WHERE (LIKELY((rt0.c1 IN ()))) ORDER BY x'3eb2' DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((rt0.c1 IN ()))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON v0.c2 RIGHT OUTER JOIN vt0 ON (- (COALESCE(DISTINCT rt0.c0, v0.c2))) ORDER BY x'3eb2' DESC);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON v0.c2 RIGHT OUTER JOIN vt0 ON (- (COALESCE(DISTINCT rt0.c0, v0.c2))) WHERE (LIKELY((rt0.c1 IN ()))) ORDER BY x'3eb2' DESC;
SELECT * FROM rt0, vt0, v0 WHERE (((((rt0.c0 IN ()), (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((x''))), ((v0.c0) NOT BETWEEN (v0.c1) AND (rt0.c1))))=((((rt0.c2)GLOB(v0.c2)), ((rt0.c0)-(v0.c0)), rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN ()), (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((x''))), ((v0.c0) NOT BETWEEN (v0.c1) AND (rt0.c1))))=((((rt0.c2)GLOB(v0.c2)), ((rt0.c0)-(v0.c0)), rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (((((rt0.c0 IN ()), (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((x''))), ((v0.c0) NOT BETWEEN (v0.c1) AND (rt0.c1))))=((((rt0.c2)GLOB(v0.c2)), ((rt0.c0)-(v0.c0)), rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN ()), (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((x''))), ((v0.c0) NOT BETWEEN (v0.c1) AND (rt0.c1))))=((((rt0.c2)GLOB(v0.c2)), ((rt0.c0)-(v0.c0)), rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (((((rt0.c0 IN ()), (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((x''))), ((v0.c0) NOT BETWEEN (v0.c1) AND (rt0.c1))))=((((rt0.c2)GLOB(v0.c2)), ((rt0.c0)-(v0.c0)), rt0.c2 COLLATE NOCASE))));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (NOT (0xffffffffaaa91689)) WHERE (CAST(CASE v0.c2  WHEN v0.c2 THEN vt0.c0 END AS REAL)) ORDER BY TRIM(((v0.c2)<(v0.c2)), CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 ELSE v0.c2 END) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE v0.c2  WHEN v0.c2 THEN vt0.c0 END AS REAL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (NOT (0xffffffffaaa91689)) ORDER BY TRIM(((v0.c2)<(v0.c2)), CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 ELSE v0.c2 END) ASC);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (NOT (0xffffffffaaa91689)) WHERE (CAST(CASE v0.c2  WHEN v0.c2 THEN vt0.c0 END AS REAL)) ORDER BY TRIM(((v0.c2)<(v0.c2)), CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 ELSE v0.c2 END) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE v0.c2  WHEN v0.c2 THEN vt0.c0 END AS REAL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (NOT (0xffffffffaaa91689)) ORDER BY TRIM(((v0.c2)<(v0.c2)), CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 ELSE v0.c2 END) ASC);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (NOT (0xffffffffaaa91689)) WHERE (CAST(CASE v0.c2  WHEN v0.c2 THEN vt0.c0 END AS REAL)) ORDER BY TRIM(((v0.c2)<(v0.c2)), CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 WHEN vt0.c0 THEN v0.c0 ELSE v0.c2 END) ASC;
SELECT * FROM vt0, rt0, v0 WHERE (SQLITE_COMPILEOPTION_GET((~ (v0.c2)))) ORDER BY ((v0.c0) NOT NULL), (NOT (((v0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET((~ (v0.c2)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((v0.c0) NOT NULL), (NOT (((v0.c1) IS TRUE))));
SELECT * FROM vt0, rt0, v0 WHERE (SQLITE_COMPILEOPTION_GET((~ (v0.c2)))) ORDER BY ((v0.c0) NOT NULL), (NOT (((v0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET((~ (v0.c2)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((v0.c0) NOT NULL), (NOT (((v0.c1) IS TRUE))));
SELECT * FROM vt0, rt0, v0 WHERE (SQLITE_COMPILEOPTION_GET((~ (v0.c2)))) ORDER BY ((v0.c0) NOT NULL), (NOT (((v0.c1) IS TRUE)));
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT (+ (rt0.c1)), UNLIKELY(rt0.c2))) ORDER BY ((((rt0.c2)GLOB(rt0.c1)))-(NULL COLLATE RTRIM)), ((((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))OR(CAST(rt0.c0 AS NUMERIC))))OR(((x'de30') NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c2)<=(rt0.c0)))))AND(LTRIM(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (+ (rt0.c1)), UNLIKELY(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)GLOB(rt0.c1)))-(NULL COLLATE RTRIM)), ((((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))OR(CAST(rt0.c0 AS NUMERIC))))OR(((x'de30') NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c2)<=(rt0.c0)))))AND(LTRIM(rt0.c2))));
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT (+ (rt0.c1)), UNLIKELY(rt0.c2))) ORDER BY ((((rt0.c2)GLOB(rt0.c1)))-(NULL COLLATE RTRIM)), ((((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))OR(CAST(rt0.c0 AS NUMERIC))))OR(((x'de30') NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c2)<=(rt0.c0)))))AND(LTRIM(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (+ (rt0.c1)), UNLIKELY(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)GLOB(rt0.c1)))-(NULL COLLATE RTRIM)), ((((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))OR(CAST(rt0.c0 AS NUMERIC))))OR(((x'de30') NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c2)<=(rt0.c0)))))AND(LTRIM(rt0.c2))));
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT (+ (rt0.c1)), UNLIKELY(rt0.c2))) ORDER BY ((((rt0.c2)GLOB(rt0.c1)))-(NULL COLLATE RTRIM)), ((((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))OR(CAST(rt0.c0 AS NUMERIC))))OR(((x'de30') NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c2)<=(rt0.c0)))))AND(LTRIM(rt0.c2)));
SELECT ALL * FROM rt0, v0 WHERE (UPPER(DISTINCT -521471218));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT -521471218)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (UPPER(DISTINCT -521471218));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT -521471218)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (UPPER(DISTINCT -521471218));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c2)) BETWEEN (('1306959782')) AND ((v0.c1))))|(((v0.c2) NOTNULL)))) ORDER BY TRIM(DISTINCT ((rt0.c1)||(v0.c0)), ((v0.c0) BETWEEN (rt0.c1) AND (v0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN (('1306959782')) AND ((v0.c1))))|(((v0.c2) NOTNULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY TRIM(DISTINCT ((rt0.c1)||(v0.c0)), ((v0.c0) BETWEEN (rt0.c1) AND (v0.c2))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c2)) BETWEEN (('1306959782')) AND ((v0.c1))))|(((v0.c2) NOTNULL)))) ORDER BY TRIM(DISTINCT ((rt0.c1)||(v0.c0)), ((v0.c0) BETWEEN (rt0.c1) AND (v0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN (('1306959782')) AND ((v0.c1))))|(((v0.c2) NOTNULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY TRIM(DISTINCT ((rt0.c1)||(v0.c0)), ((v0.c0) BETWEEN (rt0.c1) AND (v0.c2))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c2)) BETWEEN (('1306959782')) AND ((v0.c1))))|(((v0.c2) NOTNULL)))) ORDER BY TRIM(DISTINCT ((rt0.c1)||(v0.c0)), ((v0.c0) BETWEEN (rt0.c1) AND (v0.c2))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CHANGES()) ORDER BY QUOTE(rt0.c2) ASC;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0, rt0 ORDER BY QUOTE(rt0.c2) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CHANGES()) ORDER BY QUOTE(rt0.c2) ASC;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0, rt0 ORDER BY QUOTE(rt0.c2) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CHANGES()) ORDER BY QUOTE(rt0.c2) ASC;
SELECT ALL * FROM vt0 WHERE (((x'')||(((vt0.c0)/('0.8576309901169406')))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')||(((vt0.c0)/('0.8576309901169406'))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((x'')||(((vt0.c0)/('0.8576309901169406')))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')||(((vt0.c0)/('0.8576309901169406'))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((x'')||(((vt0.c0)/('0.8576309901169406')))));
SELECT * FROM rt0 WHERE (MAX((~ (rt0.c0)), (((rt0.c1))==((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((MAX((~ (rt0.c0)), (((rt0.c1))=((rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (MAX((~ (rt0.c0)), (((rt0.c1))==((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((MAX((~ (rt0.c0)), (((rt0.c1))=((rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (MAX((~ (rt0.c0)), (((rt0.c1))==((rt0.c2)))));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c1 COLLATE BINARY) NOT BETWEEN ((rt0.c1 IN ())) AND (LOWER(DISTINCT v0.c1))) WHERE (((((rt0.c1)-(v0.c2))) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND (((rt0.c2) BETWEEN (v0.c2) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)-(v0.c2))) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND (((rt0.c2) BETWEEN (v0.c2) AND (v0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c1 COLLATE BINARY) NOT BETWEEN ((rt0.c1 IN ())) AND (LOWER(DISTINCT v0.c1))));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c1 COLLATE BINARY) NOT BETWEEN ((rt0.c1 IN ())) AND (LOWER(DISTINCT v0.c1))) WHERE (((((rt0.c1)-(v0.c2))) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND (((rt0.c2) BETWEEN (v0.c2) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)-(v0.c2))) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND (((rt0.c2) BETWEEN (v0.c2) AND (v0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c1 COLLATE BINARY) NOT BETWEEN ((rt0.c1 IN ())) AND (LOWER(DISTINCT v0.c1))));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c1 COLLATE BINARY) NOT BETWEEN ((rt0.c1 IN ())) AND (LOWER(DISTINCT v0.c1))) WHERE (((((rt0.c1)-(v0.c2))) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND (((rt0.c2) BETWEEN (v0.c2) AND (v0.c0)))));
SELECT * FROM rt0, vt0, v0 WHERE ((((v0.c1)) BETWEEN ((0.658840225430981 COLLATE NOCASE)) AND ((((rt0.c0)<(v0.c2)))))) ORDER BY ((x'') NOT BETWEEN (NULL) AND ((((('0.16712023813989185')AND(v0.c2)))AND(rt0.c1)))) ASC  NULLS FIRST, ((((v0.c1 IN ())))>=((((v0.c1) BETWEEN (vt0.c0) AND ('1672030135'))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c1)) BETWEEN ((0.658840225430981 COLLATE NOCASE)) AND ((((rt0.c0)<(v0.c2)))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((x'') NOT BETWEEN (NULL) AND ((((('0.16712023813989185')AND(v0.c2)))AND(rt0.c1)))) ASC  NULLS FIRST, ((((v0.c1 IN ())))>=((((v0.c1) BETWEEN (vt0.c0) AND ('1672030135'))))) DESC  NULLS LAST);
SELECT * FROM rt0, vt0, v0 WHERE ((((v0.c1)) BETWEEN ((0.658840225430981 COLLATE NOCASE)) AND ((((rt0.c0)<(v0.c2)))))) ORDER BY ((x'') NOT BETWEEN (NULL) AND ((((('0.16712023813989185')AND(v0.c2)))AND(rt0.c1)))) ASC  NULLS FIRST, ((((v0.c1 IN ())))>=((((v0.c1) BETWEEN (vt0.c0) AND ('1672030135'))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c1)) BETWEEN ((0.658840225430981 COLLATE NOCASE)) AND ((((rt0.c0)<(v0.c2)))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((x'') NOT BETWEEN (NULL) AND ((((('0.16712023813989185')AND(v0.c2)))AND(rt0.c1)))) ASC  NULLS FIRST, ((((v0.c1 IN ())))>=((((v0.c1) BETWEEN (vt0.c0) AND ('1672030135'))))) DESC  NULLS LAST);
SELECT * FROM rt0, vt0, v0 WHERE ((((v0.c1)) BETWEEN ((0.658840225430981 COLLATE NOCASE)) AND ((((rt0.c0)<(v0.c2)))))) ORDER BY ((x'') NOT BETWEEN (NULL) AND ((((('0.16712023813989185')AND(v0.c2)))AND(rt0.c1)))) ASC  NULLS FIRST, ((((v0.c1 IN ())))>=((((v0.c1) BETWEEN (vt0.c0) AND ('1672030135'))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)>(rt0.c1)))||(((((rt0.c1)OR(rt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>(rt0.c1)))||(((((rt0.c1)OR(rt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)>(rt0.c1)))||(((((rt0.c1)OR(rt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>(rt0.c1)))||(((((rt0.c1)OR(rt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)>(rt0.c1)))||(((((rt0.c1)OR(rt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 CROSS JOIN rt0 ON ((((((((((v0.c2)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(v0.c2))) NOTNULL) WHERE ((NOT (((NULL)|(rt0.c1))))) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((NULL)|(rt0.c1))))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN rt0 ON ((((((((((v0.c2)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(v0.c2))) NOTNULL) ORDER BY rt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 CROSS JOIN rt0 ON ((((((((((v0.c2)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(v0.c2))) NOTNULL) WHERE ((NOT (((NULL)|(rt0.c1))))) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((NULL)|(rt0.c1))))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN rt0 ON ((((((((((v0.c2)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(v0.c2))) NOTNULL) ORDER BY rt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 CROSS JOIN rt0 ON ((((((((((v0.c2)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(v0.c2))) NOTNULL) WHERE ((NOT (((NULL)|(rt0.c1))))) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 RIGHT OUTER JOIN vt0 ON NULLIF(((rt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)), (((v0.c0))>((v0.c1)))) WHERE ((((v0.c0) BETWEEN (v0.c0) AND (v0.c1)) IN ())) ORDER BY UPPER(DISTINCT (v0.c2 IN (rt0.c0, rt0.c0))), 0.48812606535768355;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) BETWEEN (v0.c0) AND (v0.c1)) IN ())) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt0 ON NULLIF(((rt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)), (((v0.c0))>((v0.c1)))) ORDER BY UPPER(DISTINCT (v0.c2 IN (rt0.c0, rt0.c0))), 0.48812606535768355);
SELECT ALL COUNT(*) FROM v0, rt0 RIGHT OUTER JOIN vt0 ON NULLIF(((rt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)), (((v0.c0))>((v0.c1)))) WHERE ((((v0.c0) BETWEEN (v0.c0) AND (v0.c1)) IN ())) ORDER BY UPPER(DISTINCT (v0.c2 IN (rt0.c0, rt0.c0))), 0.48812606535768355;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) BETWEEN (v0.c0) AND (v0.c1)) IN ())) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt0 ON NULLIF(((rt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)), (((v0.c0))>((v0.c1)))) ORDER BY UPPER(DISTINCT (v0.c2 IN (rt0.c0, rt0.c0))), 0.48812606535768355);
SELECT ALL COUNT(*) FROM v0, rt0 RIGHT OUTER JOIN vt0 ON NULLIF(((rt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)), (((v0.c0))>((v0.c1)))) WHERE ((((v0.c0) BETWEEN (v0.c0) AND (v0.c1)) IN ())) ORDER BY UPPER(DISTINCT (v0.c2 IN (rt0.c0, rt0.c0))), 0.48812606535768355;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON rt0.c1 FULL OUTER JOIN rt0 ON '1672030135' WHERE (LIKELY((x'' IN (-1.233667052E9, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((x'' IN (-1.233667052E9, v0.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON rt0.c1 FULL OUTER JOIN rt0 ON '1672030135');
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON rt0.c1 FULL OUTER JOIN rt0 ON '1672030135' WHERE (LIKELY((x'' IN (-1.233667052E9, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((x'' IN (-1.233667052E9, v0.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON rt0.c1 FULL OUTER JOIN rt0 ON '1672030135');
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (~ (((388983133) NOTNULL))) WHERE (CASE ((v0.c1)<(NULL))  WHEN ((((v0.c1)OR(-1942739049)))AND(vt0.c0)) THEN CAST(v0.c2 AS BLOB) ELSE '.g' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c1)<(NULL))  WHEN ((((v0.c1)OR(-1942739049)))AND(vt0.c0)) THEN CAST(v0.c2 AS BLOB) ELSE '.g' END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (~ (((388983133) NOTNULL))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (~ (((388983133) NOTNULL))) WHERE (CASE ((v0.c1)<(NULL))  WHEN ((((v0.c1)OR(-1942739049)))AND(vt0.c0)) THEN CAST(v0.c2 AS BLOB) ELSE '.g' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c1)<(NULL))  WHEN ((((v0.c1)OR(-1942739049)))AND(vt0.c0)) THEN CAST(v0.c2 AS BLOB) ELSE '.g' END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (~ (((388983133) NOTNULL))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (~ (((388983133) NOTNULL))) WHERE (CASE ((v0.c1)<(NULL))  WHEN ((((v0.c1)OR(-1942739049)))AND(vt0.c0)) THEN CAST(v0.c2 AS BLOB) ELSE '.g' END);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)IS NOT(vt0.c0)) IN (HEX(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)IS NOT(vt0.c0)) IN (HEX(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)IS NOT(vt0.c0)) IN (HEX(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)IS NOT(vt0.c0)) IN (HEX(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)IS NOT(vt0.c0)) IN (HEX(DISTINCT vt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE ('O') ORDER BY (NOT (CAST(rt0.c2 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('O') IS TRUE)  as count FROM rt0 ORDER BY (NOT (CAST(rt0.c2 AS INTEGER))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('O') ORDER BY (NOT (CAST(rt0.c2 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('O') IS TRUE)  as count FROM rt0 ORDER BY (NOT (CAST(rt0.c2 AS INTEGER))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('O') ORDER BY (NOT (CAST(rt0.c2 AS INTEGER))) ASC  NULLS LAST;
SELECT * FROM vt0, v0 WHERE (((((((v0.c0)>=(v0.c1)))AND(NULL)))AND(((((v0.c1)AND(x'')))OR(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)>=(v0.c1)))AND(NULL)))AND(((((v0.c1)AND(x'')))OR(v0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((((v0.c0)>=(v0.c1)))AND(NULL)))AND(((((v0.c1)AND(x'')))OR(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)>=(v0.c1)))AND(NULL)))AND(((((v0.c1)AND(x'')))OR(v0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((((v0.c0)>=(v0.c1)))AND(NULL)))AND(((((v0.c1)AND(x'')))OR(v0.c1)))));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((v0.c1, rt0.c0, v0.c1))<=((v0.c1, v0.c1, v0.c1))))AND(v0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1, rt0.c0, v0.c1))<=((v0.c1, v0.c1, v0.c1))))AND(v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((v0.c1, rt0.c0, v0.c1))<=((v0.c1, v0.c1, v0.c1))))AND(v0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1, rt0.c0, v0.c1))<=((v0.c1, v0.c1, v0.c1))))AND(v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((v0.c1, rt0.c0, v0.c1))<=((v0.c1, v0.c1, v0.c1))))AND(v0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c1)AND(rt0.c0)))) AND ((((vt0.c0)*(''))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c1)AND(rt0.c0)))) AND ((((vt0.c0)*('')))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c1)AND(rt0.c0)))) AND ((((vt0.c0)*(''))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c1)AND(rt0.c0)))) AND ((((vt0.c0)*('')))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c1)AND(rt0.c0)))) AND ((((vt0.c0)*(''))))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((((rt0.c0)AND(rt0.c2)))AND(v0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)AND(rt0.c2)))AND(v0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((((rt0.c0)AND(rt0.c2)))AND(v0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)AND(rt0.c2)))AND(v0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((((rt0.c0)AND(rt0.c2)))AND(v0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS TEXT)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS TEXT)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS TEXT)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((((+ (rt0.c0)))&((((vt0.c0))<((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0)))&((((vt0.c0))<((v0.c0)))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((((+ (rt0.c0)))&((((vt0.c0))<((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0)))&((((vt0.c0))<((v0.c0)))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((((+ (rt0.c0)))&((((vt0.c0))<((v0.c0))))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE ((((((((v0.c2)AND(v0.c1)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0))  WHEN 'now3N' THEN (NOT (v0.c2)) END) ORDER BY ((((((((v0.c0)AND(CAST(v0.c1 AS BLOB))))OR((+ (v0.c2)))))AND(v0.c1 COLLATE BINARY)))OR(((v0.c2) ISNULL))) DESC  NULLS LAST, ((((v0.c0) IS TRUE))%((((vt0.c0, vt0.c0, v0.c1))>((0.7782142665708653, v0.c2, v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((v0.c2)AND(v0.c1)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0))  WHEN 'now3N' THEN (NOT (v0.c2)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((v0.c0)AND(CAST(v0.c1 AS BLOB))))OR((+ (v0.c2)))))AND(v0.c1 COLLATE BINARY)))OR(((v0.c2) ISNULL))) DESC  NULLS LAST, ((((v0.c0) IS TRUE))%((((vt0.c0, vt0.c0, v0.c1))>((0.7782142665708653, v0.c2, v0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE ((((((((v0.c2)AND(v0.c1)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0))  WHEN 'now3N' THEN (NOT (v0.c2)) END) ORDER BY ((((((((v0.c0)AND(CAST(v0.c1 AS BLOB))))OR((+ (v0.c2)))))AND(v0.c1 COLLATE BINARY)))OR(((v0.c2) ISNULL))) DESC  NULLS LAST, ((((v0.c0) IS TRUE))%((((vt0.c0, vt0.c0, v0.c1))>((0.7782142665708653, v0.c2, v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((v0.c2)AND(v0.c1)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0))  WHEN 'now3N' THEN (NOT (v0.c2)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((v0.c0)AND(CAST(v0.c1 AS BLOB))))OR((+ (v0.c2)))))AND(v0.c1 COLLATE BINARY)))OR(((v0.c2) ISNULL))) DESC  NULLS LAST, ((((v0.c0) IS TRUE))%((((vt0.c0, vt0.c0, v0.c1))>((0.7782142665708653, v0.c2, v0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE ((((((((v0.c2)AND(v0.c1)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0))  WHEN 'now3N' THEN (NOT (v0.c2)) END) ORDER BY ((((((((v0.c0)AND(CAST(v0.c1 AS BLOB))))OR((+ (v0.c2)))))AND(v0.c1 COLLATE BINARY)))OR(((v0.c2) ISNULL))) DESC  NULLS LAST, ((((v0.c0) IS TRUE))%((((vt0.c0, vt0.c0, v0.c1))>((0.7782142665708653, v0.c2, v0.c0))))) DESC  NULLS LAST;
SELECT * FROM v0 WHERE ((((((((((((v0.c2)OR(v0.c2)))AND(v0.c0)))OR(v0.c1)))OR(v0.c0)), ((v0.c1)<<(v0.c1)), GLOB(v0.c0, v0.c0)))<(((v0.c2 IN ()), CASE v0.c1  WHEN v0.c1 THEN NULL WHEN v0.c1 THEN v0.c0 WHEN '-819287515' THEN v0.c2 END, v0.c1 COLLATE NOCASE)))) ORDER BY LIKELY(DISTINCT ((v0.c0)*(v0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((v0.c2)OR(v0.c2)))AND(v0.c0)))OR(v0.c1)))OR(v0.c0)), ((v0.c1)<<(v0.c1)), GLOB(v0.c0, v0.c0)))<(((v0.c2 IN ()), CASE v0.c1  WHEN v0.c1 THEN NULL WHEN v0.c1 THEN v0.c0 WHEN '-819287515' THEN v0.c2 END, v0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM v0 ORDER BY LIKELY(DISTINCT ((v0.c0)*(v0.c1))));
SELECT * FROM v0 WHERE ((((((((((((v0.c2)OR(v0.c2)))AND(v0.c0)))OR(v0.c1)))OR(v0.c0)), ((v0.c1)<<(v0.c1)), GLOB(v0.c0, v0.c0)))<(((v0.c2 IN ()), CASE v0.c1  WHEN v0.c1 THEN NULL WHEN v0.c1 THEN v0.c0 WHEN '-819287515' THEN v0.c2 END, v0.c1 COLLATE NOCASE)))) ORDER BY LIKELY(DISTINCT ((v0.c0)*(v0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((v0.c2)OR(v0.c2)))AND(v0.c0)))OR(v0.c1)))OR(v0.c0)), ((v0.c1)<<(v0.c1)), GLOB(v0.c0, v0.c0)))<(((v0.c2 IN ()), CASE v0.c1  WHEN v0.c1 THEN NULL WHEN v0.c1 THEN v0.c0 WHEN '-819287515' THEN v0.c2 END, v0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM v0 ORDER BY LIKELY(DISTINCT ((v0.c0)*(v0.c1))));
SELECT * FROM v0 WHERE ((((((((((((v0.c2)OR(v0.c2)))AND(v0.c0)))OR(v0.c1)))OR(v0.c0)), ((v0.c1)<<(v0.c1)), GLOB(v0.c0, v0.c0)))<(((v0.c2 IN ()), CASE v0.c1  WHEN v0.c1 THEN NULL WHEN v0.c1 THEN v0.c0 WHEN '-819287515' THEN v0.c2 END, v0.c1 COLLATE NOCASE)))) ORDER BY LIKELY(DISTINCT ((v0.c0)*(v0.c1)));
SELECT * FROM vt0 WHERE (IFNULL(DISTINCT ((vt0.c0)+(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((522662679)) AND ((vt0.c0))))) AND ((((x'') NOTNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((vt0.c0)+(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((522662679)) AND ((vt0.c0))))) AND ((((x'') NOTNULL)))) ASC);
SELECT * FROM vt0 WHERE (IFNULL(DISTINCT ((vt0.c0)+(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((522662679)) AND ((vt0.c0))))) AND ((((x'') NOTNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((vt0.c0)+(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((522662679)) AND ((vt0.c0))))) AND ((((x'') NOTNULL)))) ASC);
SELECT * FROM vt0 WHERE (IFNULL(DISTINCT ((vt0.c0)+(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((522662679)) AND ((vt0.c0))))) AND ((((x'') NOTNULL)))) ASC;
SELECT * FROM v0 WHERE (((((((v0.c2))>=((v0.c1)))))>(((v0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c2))>=((v0.c1)))))>(((v0.c2 IN ()))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c2))>=((v0.c1)))))>(((v0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c2))>=((v0.c1)))))>(((v0.c2 IN ()))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c2))>=((v0.c1)))))>(((v0.c2 IN ())))));
SELECT * FROM rt0, v0, vt0 WHERE (CAST(((vt0.c0)>(v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>(v0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (CAST(((vt0.c0)>(v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>(v0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (CAST(((vt0.c0)>(v0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS REAL)) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT NULL) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS REAL)) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT NULL) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS REAL)) ORDER BY vt0.c0  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (TRIM(DISTINCT CASE '-1300212751'  WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CASE '-1300212751'  WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (TRIM(DISTINCT CASE '-1300212751'  WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CASE '-1300212751'  WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (TRIM(DISTINCT CASE '-1300212751'  WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END));
SELECT * FROM vt0, v0, rt0 WHERE (CASE (v0.c2 IN ())  WHEN 0X418d475c THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0) IS TRUE) THEN (v0.c0 IN (rt0.c0)) WHEN ((v0.c1)>=(vt0.c0)) THEN ((rt0.c2) NOT NULL) ELSE TRIM(DISTINCT rt0.c2, rt0.c0) END) ORDER BY (- (((v0.c1) NOT BETWEEN (rt0.c0) AND (v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (v0.c2 IN ())  WHEN 0X418d475c THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0) IS TRUE) THEN (v0.c0 IN (rt0.c0)) WHEN ((v0.c1)>=(vt0.c0)) THEN ((rt0.c2) NOT NULL) ELSE TRIM(DISTINCT rt0.c2, rt0.c0) END) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (- (((v0.c1) NOT BETWEEN (rt0.c0) AND (v0.c2))))  NULLS FIRST);
SELECT * FROM vt0, v0, rt0 WHERE (CASE (v0.c2 IN ())  WHEN 0X418d475c THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0) IS TRUE) THEN (v0.c0 IN (rt0.c0)) WHEN ((v0.c1)>=(vt0.c0)) THEN ((rt0.c2) NOT NULL) ELSE TRIM(DISTINCT rt0.c2, rt0.c0) END) ORDER BY (- (((v0.c1) NOT BETWEEN (rt0.c0) AND (v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (v0.c2 IN ())  WHEN 0X418d475c THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0) IS TRUE) THEN (v0.c0 IN (rt0.c0)) WHEN ((v0.c1)>=(vt0.c0)) THEN ((rt0.c2) NOT NULL) ELSE TRIM(DISTINCT rt0.c2, rt0.c0) END) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (- (((v0.c1) NOT BETWEEN (rt0.c0) AND (v0.c2))))  NULLS FIRST);
SELECT * FROM vt0, v0, rt0 WHERE (CASE (v0.c2 IN ())  WHEN 0X418d475c THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0) IS TRUE) THEN (v0.c0 IN (rt0.c0)) WHEN ((v0.c1)>=(vt0.c0)) THEN ((rt0.c2) NOT NULL) ELSE TRIM(DISTINCT rt0.c2, rt0.c0) END) ORDER BY (- (((v0.c1) NOT BETWEEN (rt0.c0) AND (v0.c2))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (UPPER('217853853' COLLATE BINARY)) ORDER BY (- (LIKELY(DISTINCT rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER('217853853' COLLATE BINARY)) IS TRUE)  as count FROM rt0 ORDER BY (- (LIKELY(DISTINCT rt0.c0)))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (UPPER('217853853' COLLATE BINARY)) ORDER BY (- (LIKELY(DISTINCT rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER('217853853' COLLATE BINARY)) IS TRUE)  as count FROM rt0 ORDER BY (- (LIKELY(DISTINCT rt0.c0)))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (UPPER('217853853' COLLATE BINARY)) ORDER BY (- (LIKELY(DISTINCT rt0.c0)))  NULLS LAST;
SELECT ALL * FROM rt0 NOT INDEXED INNER JOIN v0 ON ((rt0.c1 COLLATE BINARY)>>((NOT (v0.c0)))) WHERE (LIKELY(DISTINCT CASE rt0.c2  WHEN NULL THEN rt0.c2 END)) ORDER BY ((rt0.c1)IS NOT((~ (v0.c1))))  NULLS FIRST, ((((rt0.c1)/('')))!=(rt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, ((((v0.c2)|(v0.c1))) NOT BETWEEN (v0.c1 COLLATE RTRIM) AND ((v0.c1 IN (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT CASE rt0.c2  WHEN NULL THEN rt0.c2 END)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((rt0.c1 COLLATE BINARY)>>((NOT (v0.c0)))) ORDER BY ((rt0.c1)IS NOT((~ (v0.c1))))  NULLS FIRST, ((((rt0.c1)/('')))!=(rt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, ((((v0.c2)|(v0.c1))) NOT BETWEEN (v0.c1 COLLATE RTRIM) AND ((v0.c1 IN (v0.c0)))) ASC);
SELECT ALL * FROM rt0 NOT INDEXED INNER JOIN v0 ON ((rt0.c1 COLLATE BINARY)>>((NOT (v0.c0)))) WHERE (LIKELY(DISTINCT CASE rt0.c2  WHEN NULL THEN rt0.c2 END)) ORDER BY ((rt0.c1)IS NOT((~ (v0.c1))))  NULLS FIRST, ((((rt0.c1)/('')))!=(rt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, ((((v0.c2)|(v0.c1))) NOT BETWEEN (v0.c1 COLLATE RTRIM) AND ((v0.c1 IN (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT CASE rt0.c2  WHEN NULL THEN rt0.c2 END)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((rt0.c1 COLLATE BINARY)>>((NOT (v0.c0)))) ORDER BY ((rt0.c1)IS NOT((~ (v0.c1))))  NULLS FIRST, ((((rt0.c1)/('')))!=(rt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, ((((v0.c2)|(v0.c1))) NOT BETWEEN (v0.c1 COLLATE RTRIM) AND ((v0.c1 IN (v0.c0)))) ASC);
SELECT ALL * FROM rt0 NOT INDEXED INNER JOIN v0 ON ((rt0.c1 COLLATE BINARY)>>((NOT (v0.c0)))) WHERE (LIKELY(DISTINCT CASE rt0.c2  WHEN NULL THEN rt0.c2 END)) ORDER BY ((rt0.c1)IS NOT((~ (v0.c1))))  NULLS FIRST, ((((rt0.c1)/('')))!=(rt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, ((((v0.c2)|(v0.c1))) NOT BETWEEN (v0.c1 COLLATE RTRIM) AND ((v0.c1 IN (v0.c0)))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL * FROM v0, rt0 WHERE (CASE v0.c2  WHEN ((((rt0.c0)OR(v0.c1)))AND(v0.c1)) THEN ((rt0.c0)+(v0.c0)) WHEN CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END THEN ((((((((v0.c2)OR(0.3309254077874748)))OR(v0.c2)))OR(v0.c0)))OR(rt0.c2)) WHEN ((x'')&(v0.c2)) THEN ((rt0.c1)|(v0.c1)) ELSE rt0.c1 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c2  WHEN ((((rt0.c0)OR(v0.c1)))AND(v0.c1)) THEN ((rt0.c0)+(v0.c0)) WHEN CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END THEN ((((((((v0.c2)OR(0.3309254077874748)))OR(v0.c2)))OR(v0.c0)))OR(rt0.c2)) WHEN ((x'')&(v0.c2)) THEN ((rt0.c1)|(v0.c1)) ELSE rt0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CASE v0.c2  WHEN ((((rt0.c0)OR(v0.c1)))AND(v0.c1)) THEN ((rt0.c0)+(v0.c0)) WHEN CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END THEN ((((((((v0.c2)OR(0.3309254077874748)))OR(v0.c2)))OR(v0.c0)))OR(rt0.c2)) WHEN ((x'')&(v0.c2)) THEN ((rt0.c1)|(v0.c1)) ELSE rt0.c1 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c2  WHEN ((((rt0.c0)OR(v0.c1)))AND(v0.c1)) THEN ((rt0.c0)+(v0.c0)) WHEN CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END THEN ((((((((v0.c2)OR(0.3309254077874748)))OR(v0.c2)))OR(v0.c0)))OR(rt0.c2)) WHEN ((x'')&(v0.c2)) THEN ((rt0.c1)|(v0.c1)) ELSE rt0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CASE v0.c2  WHEN ((((rt0.c0)OR(v0.c1)))AND(v0.c1)) THEN ((rt0.c0)+(v0.c0)) WHEN CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END THEN ((((((((v0.c2)OR(0.3309254077874748)))OR(v0.c2)))OR(v0.c0)))OR(rt0.c2)) WHEN ((x'')&(v0.c2)) THEN ((rt0.c1)|(v0.c1)) ELSE rt0.c1 COLLATE RTRIM END);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (NOT (((0.42022368302887325)%(v0.c2)))) LEFT OUTER JOIN v0 ON ((CAST(0.10985720072371563 AS BLOB)) ISNULL) WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE v0.c2 END)!=(((v0.c2) IS FALSE)))) ORDER BY '?dBF	' DESC  NULLS FIRST, (~ (CASE v0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN v0.c2 ELSE rt0.c0 END))  NULLS LAST, (((rt0.c1)) BETWEEN ((((((((((((((v0.c2)OR(rt0.c0)))OR(v0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(v0.c0)))AND(x'')))) AND ((((v0.c1) IS TRUE)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE v0.c2 END)<>(((v0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (NOT (((0.42022368302887325)%(v0.c2)))) LEFT OUTER JOIN v0 ON ((CAST(0.10985720072371563 AS BLOB)) ISNULL) ORDER BY '?dBF	' DESC  NULLS FIRST, (~ (CASE v0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN v0.c2 ELSE rt0.c0 END))  NULLS LAST, (((rt0.c1)) BETWEEN ((((((((((((((v0.c2)OR(rt0.c0)))OR(v0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(v0.c0)))AND(x'')))) AND ((((v0.c1) IS TRUE)))) ASC);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (NOT (((0.42022368302887325)%(v0.c2)))) LEFT OUTER JOIN v0 ON ((CAST(0.10985720072371563 AS BLOB)) ISNULL) WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE v0.c2 END)!=(((v0.c2) IS FALSE)))) ORDER BY '?dBF	' DESC  NULLS FIRST, (~ (CASE v0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN v0.c2 ELSE rt0.c0 END))  NULLS LAST, (((rt0.c1)) BETWEEN ((((((((((((((v0.c2)OR(rt0.c0)))OR(v0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(v0.c0)))AND(x'')))) AND ((((v0.c1) IS TRUE)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE v0.c2 END)<>(((v0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (NOT (((0.42022368302887325)%(v0.c2)))) LEFT OUTER JOIN v0 ON ((CAST(0.10985720072371563 AS BLOB)) ISNULL) ORDER BY '?dBF	' DESC  NULLS FIRST, (~ (CASE v0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN v0.c2 ELSE rt0.c0 END))  NULLS LAST, (((rt0.c1)) BETWEEN ((((((((((((((v0.c2)OR(rt0.c0)))OR(v0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(v0.c0)))AND(x'')))) AND ((((v0.c1) IS TRUE)))) ASC);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (NOT (((0.42022368302887325)%(v0.c2)))) LEFT OUTER JOIN v0 ON ((CAST(0.10985720072371563 AS BLOB)) ISNULL) WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE v0.c2 END)!=(((v0.c2) IS FALSE)))) ORDER BY '?dBF	' DESC  NULLS FIRST, (~ (CASE v0.c2  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN v0.c2 ELSE rt0.c0 END))  NULLS LAST, (((rt0.c1)) BETWEEN ((((((((((((((v0.c2)OR(rt0.c0)))OR(v0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(v0.c0)))AND(x'')))) AND ((((v0.c1) IS TRUE)))) ASC;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)+(((rt0.c0)IS NOT(rt0.c0))))) ORDER BY ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))) IS FALSE), ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))LIKE(json_array_length(rt0.c2, rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)+(((rt0.c0)IS NOT(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))) IS FALSE), ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))LIKE(json_array_length(rt0.c2, rt0.c0))) ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)+(((rt0.c0)IS NOT(rt0.c0))))) ORDER BY ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))) IS FALSE), ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))LIKE(json_array_length(rt0.c2, rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)+(((rt0.c0)IS NOT(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))) IS FALSE), ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))LIKE(json_array_length(rt0.c2, rt0.c0))) ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)+(((rt0.c0)IS NOT(rt0.c0))))) ORDER BY ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))) IS FALSE), ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))LIKE(json_array_length(rt0.c2, rt0.c0))) ASC;
SELECT * FROM vt0, v0 WHERE (((v0.c2) BETWEEN (NULL) AND ((v0.c0 IN (vt0.c0, v0.c2))))) ORDER BY ((((vt0.c0)<(v0.c1)))!=((~ (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2) BETWEEN (NULL) AND ((v0.c0 IN (vt0.c0, v0.c2))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0)<(v0.c1)))!=((~ (v0.c0))))  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (((v0.c2) BETWEEN (NULL) AND ((v0.c0 IN (vt0.c0, v0.c2))))) ORDER BY ((((vt0.c0)<(v0.c1)))!=((~ (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2) BETWEEN (NULL) AND ((v0.c0 IN (vt0.c0, v0.c2))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0)<(v0.c1)))!=((~ (v0.c0))))  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (((v0.c2) BETWEEN (NULL) AND ((v0.c0 IN (vt0.c0, v0.c2))))) ORDER BY ((((vt0.c0)<(v0.c1)))!=((~ (v0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2)OR(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2)OR(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2)OR(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<=(((((vt0.c0)OR(vt0.c0)))OR(0.2814780941099264))))) ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ('-837467032' IN ()) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.8428418399585745) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<=(((((vt0.c0)OR(vt0.c0)))OR(0.2814780941099264))))) IS TRUE)  as count FROM vt0 ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ('-837467032' IN ()) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.8428418399585745) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<=(((((vt0.c0)OR(vt0.c0)))OR(0.2814780941099264))))) ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ('-837467032' IN ()) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.8428418399585745) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<=(((((vt0.c0)OR(vt0.c0)))OR(0.2814780941099264))))) IS TRUE)  as count FROM vt0 ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ('-837467032' IN ()) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.8428418399585745) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<=(((((vt0.c0)OR(vt0.c0)))OR(0.2814780941099264))))) ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ('-837467032' IN ()) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.8428418399585745) END  NULLS FIRST;
SELECT * FROM vt0, v0, rt0 WHERE (CAST(((rt0.c2)IS NOT(rt0.c1)) AS INTEGER)) ORDER BY ((rt0.c1)>(rt0.c2 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)IS NOT(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0 NOT INDEXED, v0, rt0 ORDER BY ((rt0.c1)>(rt0.c2 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM vt0, v0, rt0 WHERE (CAST(((rt0.c2)IS NOT(rt0.c1)) AS INTEGER)) ORDER BY ((rt0.c1)>(rt0.c2 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)IS NOT(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0 NOT INDEXED, v0, rt0 ORDER BY ((rt0.c1)>(rt0.c2 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM vt0, v0, rt0 WHERE (CAST(((rt0.c2)IS NOT(rt0.c1)) AS INTEGER)) ORDER BY ((rt0.c1)>(rt0.c2 COLLATE NOCASE))  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE (((((CHAR(rt0.c1))OR(CAST(rt0.c0 AS REAL))))AND(((rt0.c2) BETWEEN (v0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CHAR(rt0.c1))OR(CAST(rt0.c0 AS REAL))))AND(((rt0.c2) BETWEEN (v0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((CHAR(rt0.c1))OR(CAST(rt0.c0 AS REAL))))AND(((rt0.c2) BETWEEN (v0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CHAR(rt0.c1))OR(CAST(rt0.c0 AS REAL))))AND(((rt0.c2) BETWEEN (v0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((CHAR(rt0.c1))OR(CAST(rt0.c0 AS REAL))))AND(((rt0.c2) BETWEEN (v0.c1) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((- (v0.c0)))OR(((((v0.c1)OR(v0.c0)))AND(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0)))OR(((((v0.c1)OR(v0.c0)))AND(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((- (v0.c0)))OR(((((v0.c1)OR(v0.c0)))AND(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0)))OR(((((v0.c1)OR(v0.c0)))AND(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((- (v0.c0)))OR(((((v0.c1)OR(v0.c0)))AND(v0.c2)))));
SELECT * FROM vt0, v0 WHERE ((CAST(vt0.c0 AS INTEGER) IN (((v0.c0)=(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN (((v0.c0)==(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((CAST(vt0.c0 AS INTEGER) IN (((v0.c0)=(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN (((v0.c0)==(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((CAST(vt0.c0 AS INTEGER) IN (((v0.c0)=(v0.c0)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((rt0.c0 COLLATE RTRIM)OR(rtreenode(rt0.c1, rt0.c0))))AND(CAST(0.8453144313037346 AS BLOB))) WHERE (((((rt0.c1) IS FALSE))/(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS FALSE))/(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((rt0.c0 COLLATE RTRIM)OR(rtreenode(rt0.c1, rt0.c0))))AND(CAST(0.8453144313037346 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((rt0.c0 COLLATE RTRIM)OR(rtreenode(rt0.c1, rt0.c0))))AND(CAST(0.8453144313037346 AS BLOB))) WHERE (((((rt0.c1) IS FALSE))/(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS FALSE))/(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((rt0.c0 COLLATE RTRIM)OR(rtreenode(rt0.c1, rt0.c0))))AND(CAST(0.8453144313037346 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((rt0.c0 COLLATE RTRIM)OR(rtreenode(rt0.c1, rt0.c0))))AND(CAST(0.8453144313037346 AS BLOB))) WHERE (((((rt0.c1) IS FALSE))/(rt0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS INTEGER)) ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS INTEGER)) ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS INTEGER)) ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)<<(rt0.c1)))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))))) ORDER BY CAST(((rt0.c2)GLOB(vt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<<(rt0.c1)))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c2)GLOB(vt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)<<(rt0.c1)))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))))) ORDER BY CAST(((rt0.c2)GLOB(vt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<<(rt0.c1)))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c2)GLOB(vt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)<<(rt0.c1)))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))))) ORDER BY CAST(((rt0.c2)GLOB(vt0.c0)) AS INTEGER);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((rt0.c1)) BETWEEN ((((v0.c0)>>(v0.c1)))) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((v0.c0)>>(v0.c1)))) AND ((NULL)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((rt0.c1)) BETWEEN ((((v0.c0)>>(v0.c1)))) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((v0.c0)>>(v0.c1)))) AND ((NULL)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((rt0.c1)) BETWEEN ((((v0.c0)>>(v0.c1)))) AND ((NULL))));
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN '0z' THEN vt0.c0 WHEN NULL THEN 'ﮘCbJbn' WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN '0z' THEN vt0.c0 WHEN NULL THEN 'ﮘCbJbn' WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN '0z' THEN vt0.c0 WHEN NULL THEN 'ﮘCbJbn' WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN '0z' THEN vt0.c0 WHEN NULL THEN 'ﮘCbJbn' WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN '0z' THEN vt0.c0 WHEN NULL THEN 'ﮘCbJbn' WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (CAST(vt0.c0 AS REAL))));
SELECT * FROM vt0, rt0 WHERE ((rt0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((rt0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((rt0.c0 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((('-135418048', x'b801', v0.c0))<((v0.c1, v0.c2, v0.c1))))-((~ (v0.c0))))) ORDER BY ((CAST(NULL AS REAL)) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c1))) AND (((((rt0.c1)AND(v0.c1)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((('-135418048', x'b801', v0.c0))<((v0.c1, v0.c2, v0.c1))))-((~ (v0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((CAST(NULL AS REAL)) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c1))) AND (((((rt0.c1)AND(v0.c1)))AND(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((('-135418048', x'b801', v0.c0))<((v0.c1, v0.c2, v0.c1))))-((~ (v0.c0))))) ORDER BY ((CAST(NULL AS REAL)) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c1))) AND (((((rt0.c1)AND(v0.c1)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((('-135418048', x'b801', v0.c0))<((v0.c1, v0.c2, v0.c1))))-((~ (v0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((CAST(NULL AS REAL)) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c1))) AND (((((rt0.c1)AND(v0.c1)))AND(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((('-135418048', x'b801', v0.c0))<((v0.c1, v0.c2, v0.c1))))-((~ (v0.c0))))) ORDER BY ((CAST(NULL AS REAL)) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c1))) AND (((((rt0.c1)AND(v0.c1)))AND(vt0.c0)))) ASC;
SELECT * FROM v0, rt0 WHERE (((((CAST(v0.c1 AS TEXT))AND(((v0.c0)GLOB(v0.c2)))))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c1 AS TEXT))AND(((v0.c0)GLOB(v0.c2)))))OR(v0.c0))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((CAST(v0.c1 AS TEXT))AND(((v0.c0)GLOB(v0.c2)))))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c1 AS TEXT))AND(((v0.c0)GLOB(v0.c2)))))OR(v0.c0))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((CAST(v0.c1 AS TEXT))AND(((v0.c0)GLOB(v0.c2)))))OR(v0.c0)));
SELECT * FROM vt0 WHERE ('1q c');
SELECT SUM(count) FROM (SELECT ALL (('1q c') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('1q c');
SELECT SUM(count) FROM (SELECT ALL (('1q c') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('1q c');
SELECT * FROM rt0, vt0, v0 WHERE (((rt0.c1)>(((rt0.c2)/(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>(((rt0.c2)/(v0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (((rt0.c1)>(((rt0.c2)/(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>(((rt0.c2)/(v0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (((rt0.c1)>(((rt0.c2)/(v0.c0)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON 0.47418300022604554 FULL OUTER JOIN rt0 ON (NOT (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON 0.47418300022604554 FULL OUTER JOIN rt0 ON (NOT (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON 0.47418300022604554 FULL OUTER JOIN rt0 ON (NOT (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON 0.47418300022604554 FULL OUTER JOIN rt0 ON (NOT (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON 0.47418300022604554 FULL OUTER JOIN rt0 ON (NOT (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE ((vt0.c0 IN ()));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((rt0.c1)>=(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)>=(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((rt0.c1)>=(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)>=(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((rt0.c1)>=(rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((v0.c1)OR(v0.c1)))AND(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)OR(v0.c1)))AND(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((v0.c1)OR(v0.c1)))AND(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)OR(v0.c1)))AND(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((v0.c1)OR(v0.c1)))AND(v0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 WHERE ('666330666') ORDER BY ((v0.c2)*(v0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('666330666') IS TRUE)  as count FROM v0 ORDER BY ((v0.c2)*(v0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ('666330666') ORDER BY ((v0.c2)*(v0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('666330666') IS TRUE)  as count FROM v0 ORDER BY ((v0.c2)*(v0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ('666330666') ORDER BY ((v0.c2)*(v0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (rt0.c0) ORDER BY ((x'') IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((x'') IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (rt0.c0) ORDER BY ((x'') IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((x'') IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (rt0.c0) ORDER BY ((x'') IS TRUE)  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c1)) BETWEEN ((CASE WHEN v0.c0 THEN x'ac73' END)) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c1)) BETWEEN ((CASE WHEN v0.c0 THEN x'ac73' END)) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c1)) BETWEEN ((CASE WHEN v0.c0 THEN x'ac73' END)) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c1)) BETWEEN ((CASE WHEN v0.c0 THEN x'ac73' END)) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c1)) BETWEEN ((CASE WHEN v0.c0 THEN x'ac73' END)) AND ((vt0.c0))));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CAST((rt0.c1 IN (x'')) AS BLOB)) ORDER BY (NOT ('1668623472' COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN (x'')) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (NOT ('1668623472' COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CAST((rt0.c1 IN (x'')) AS BLOB)) ORDER BY (NOT ('1668623472' COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN (x'')) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (NOT ('1668623472' COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CAST((rt0.c1 IN (x'')) AS BLOB)) ORDER BY (NOT ('1668623472' COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((((v0.c2) IS TRUE))OR((((((((('')OR(v0.c2)))OR(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))) WHERE ((CAST(rt0.c1 AS BLOB) IN (CASE WHEN rt0.c0 THEN v0.c1 ELSE -9.48073951E8 END, GLOB(v0.c2, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS BLOB) IN (CASE WHEN rt0.c0 THEN v0.c1 ELSE -9.48073951E8 END, GLOB(v0.c2, v0.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((v0.c2) IS TRUE))OR((((((((('')OR(v0.c2)))OR(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((((v0.c2) IS TRUE))OR((((((((('')OR(v0.c2)))OR(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))) WHERE ((CAST(rt0.c1 AS BLOB) IN (CASE WHEN rt0.c0 THEN v0.c1 ELSE -9.48073951E8 END, GLOB(v0.c2, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS BLOB) IN (CASE WHEN rt0.c0 THEN v0.c1 ELSE -9.48073951E8 END, GLOB(v0.c2, v0.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((v0.c2) IS TRUE))OR((((((((('')OR(v0.c2)))OR(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((((v0.c2) IS TRUE))OR((((((((('')OR(v0.c2)))OR(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))) WHERE ((CAST(rt0.c1 AS BLOB) IN (CASE WHEN rt0.c0 THEN v0.c1 ELSE -9.48073951E8 END, GLOB(v0.c2, v0.c0))));
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)) AS NUMERIC)) ORDER BY CASE WHEN (rt0.c0 IN (rt0.c1, rt0.c0)) THEN rt0.c1 ELSE rt0.c2 COLLATE BINARY END  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (rt0.c0 IN (rt0.c1, rt0.c0)) THEN rt0.c1 ELSE rt0.c2 COLLATE BINARY END  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)) AS NUMERIC)) ORDER BY CASE WHEN (rt0.c0 IN (rt0.c1, rt0.c0)) THEN rt0.c1 ELSE rt0.c2 COLLATE BINARY END  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (rt0.c0 IN (rt0.c1, rt0.c0)) THEN rt0.c1 ELSE rt0.c2 COLLATE BINARY END  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)) AS NUMERIC)) ORDER BY CASE WHEN (rt0.c0 IN (rt0.c1, rt0.c0)) THEN rt0.c1 ELSE rt0.c2 COLLATE BINARY END  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CAST(CAST(NULL AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(NULL AS BLOB) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(NULL AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(NULL AS BLOB) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(NULL AS BLOB) AS TEXT));
SELECT COUNT(*) FROM v0 WHERE (((('953285528')) BETWEEN ((((((v0.c1)AND(v0.c1)))AND(v0.c2)))) AND (((((v0.c0, v0.c1, v0.c2)) NOT BETWEEN ((v0.c0, v0.c2, v0.c0)) AND ((v0.c2, v0.c1, v0.c1))))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((((('953285528')) BETWEEN ((((((v0.c1)AND(v0.c1)))AND(v0.c2)))) AND (((((v0.c0, v0.c1, v0.c2)) NOT BETWEEN ((v0.c0, v0.c2, v0.c0)) AND ((v0.c2, v0.c1, v0.c1))))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0);
SELECT COUNT(*) FROM v0 WHERE (((('953285528')) BETWEEN ((((((v0.c1)AND(v0.c1)))AND(v0.c2)))) AND (((((v0.c0, v0.c1, v0.c2)) NOT BETWEEN ((v0.c0, v0.c2, v0.c0)) AND ((v0.c2, v0.c1, v0.c1))))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((((('953285528')) BETWEEN ((((((v0.c1)AND(v0.c1)))AND(v0.c2)))) AND (((((v0.c0, v0.c1, v0.c2)) NOT BETWEEN ((v0.c0, v0.c2, v0.c0)) AND ((v0.c2, v0.c1, v0.c1))))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0);
SELECT COUNT(*) FROM v0 WHERE (((('953285528')) BETWEEN ((((((v0.c1)AND(v0.c1)))AND(v0.c2)))) AND (((((v0.c0, v0.c1, v0.c2)) NOT BETWEEN ((v0.c0, v0.c2, v0.c0)) AND ((v0.c2, v0.c1, v0.c1))))))) ORDER BY v0.c0;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (((((((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))AND(CAST(rt0.c1 AS TEXT))))AND(((rt0.c1)*(vt0.c0)))))AND('')))AND(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))AND(CAST(rt0.c1 AS TEXT))))AND(((rt0.c1)*(vt0.c0)))))AND('')))AND(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (((((((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))AND(CAST(rt0.c1 AS TEXT))))AND(((rt0.c1)*(vt0.c0)))))AND('')))AND(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))AND(CAST(rt0.c1 AS TEXT))))AND(((rt0.c1)*(vt0.c0)))))AND('')))AND(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (((((((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))AND(CAST(rt0.c1 AS TEXT))))AND(((rt0.c1)*(vt0.c0)))))AND('')))AND(rt0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (HEX('1884147793'));
SELECT SUM(count) FROM (SELECT ALL ((HEX('1884147793')) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (HEX('1884147793'));
SELECT SUM(count) FROM (SELECT ALL ((HEX('1884147793')) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (HEX('1884147793'));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN (v0.c2) AND (rt0.c0))) ORDER BY ((CAST(v0.c2 AS REAL)) NOT BETWEEN (((((((((rt0.c0)AND(v0.c0)))AND(v0.c0)))OR(rt0.c1)))AND(v0.c2))) AND (((rt0.c2) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN (v0.c2) AND (rt0.c0))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CAST(v0.c2 AS REAL)) NOT BETWEEN (((((((((rt0.c0)AND(v0.c0)))AND(v0.c0)))OR(rt0.c1)))AND(v0.c2))) AND (((rt0.c2) ISNULL))) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN (v0.c2) AND (rt0.c0))) ORDER BY ((CAST(v0.c2 AS REAL)) NOT BETWEEN (((((((((rt0.c0)AND(v0.c0)))AND(v0.c0)))OR(rt0.c1)))AND(v0.c2))) AND (((rt0.c2) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN (v0.c2) AND (rt0.c0))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CAST(v0.c2 AS REAL)) NOT BETWEEN (((((((((rt0.c0)AND(v0.c0)))AND(v0.c0)))OR(rt0.c1)))AND(v0.c2))) AND (((rt0.c2) ISNULL))) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN (v0.c2) AND (rt0.c0))) ORDER BY ((CAST(v0.c2 AS REAL)) NOT BETWEEN (((((((((rt0.c0)AND(v0.c0)))AND(v0.c0)))OR(rt0.c1)))AND(v0.c2))) AND (((rt0.c2) ISNULL))) DESC;
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN x'3200' WHEN rt0.c0 THEN NULL WHEN NULL THEN rt0.c2 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c1 END THEN rt0.c2 END) ORDER BY v0.c1 DESC  NULLS FIRST, (((((NULL)) BETWEEN ((NULL)) AND ((rt0.c2)))) NOT BETWEEN (x'') AND (((rt0.c0) ISNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN v0.c0 THEN x'3200' WHEN rt0.c0 THEN NULL WHEN NULL THEN rt0.c2 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c1 END THEN rt0.c2 END) IS TRUE)  as count FROM rt0, v0 ORDER BY v0.c1 DESC  NULLS FIRST, (((((NULL)) BETWEEN ((NULL)) AND ((rt0.c2)))) NOT BETWEEN (x'') AND (((rt0.c0) ISNULL))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN x'3200' WHEN rt0.c0 THEN NULL WHEN NULL THEN rt0.c2 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c1 END THEN rt0.c2 END) ORDER BY v0.c1 DESC  NULLS FIRST, (((((NULL)) BETWEEN ((NULL)) AND ((rt0.c2)))) NOT BETWEEN (x'') AND (((rt0.c0) ISNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN v0.c0 THEN x'3200' WHEN rt0.c0 THEN NULL WHEN NULL THEN rt0.c2 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c1 END THEN rt0.c2 END) IS TRUE)  as count FROM rt0, v0 ORDER BY v0.c1 DESC  NULLS FIRST, (((((NULL)) BETWEEN ((NULL)) AND ((rt0.c2)))) NOT BETWEEN (x'') AND (((rt0.c0) ISNULL))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN x'3200' WHEN rt0.c0 THEN NULL WHEN NULL THEN rt0.c2 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c1 END THEN rt0.c2 END) ORDER BY v0.c1 DESC  NULLS FIRST, (((((NULL)) BETWEEN ((NULL)) AND ((rt0.c2)))) NOT BETWEEN (x'') AND (((rt0.c0) ISNULL))) DESC  NULLS LAST;
SELECT * FROM v0, rt0, vt0 WHERE (((((v0.c1) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((((v0.c1) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((((v0.c1) IS TRUE)) IS TRUE));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))>=(((((vt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, NULL, rt0.c1)) AND ((vt0.c0, 0.14460523052124963, 1.997695471E9)))))) WHERE ((((((rt0.c1)LIKE(rt0.c2))))<=(((rt0.c0 IN ()))))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)LIKE(rt0.c2))))<=(((rt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))>=(((((vt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, NULL, rt0.c1)) AND ((vt0.c0, 0.14460523052124963, 1.997695471E9)))))) ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))>=(((((vt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, NULL, rt0.c1)) AND ((vt0.c0, 0.14460523052124963, 1.997695471E9)))))) WHERE ((((((rt0.c1)LIKE(rt0.c2))))<=(((rt0.c0 IN ()))))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)LIKE(rt0.c2))))<=(((rt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))>=(((((vt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, NULL, rt0.c1)) AND ((vt0.c0, 0.14460523052124963, 1.997695471E9)))))) ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))>=(((((vt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, NULL, rt0.c1)) AND ((vt0.c0, 0.14460523052124963, 1.997695471E9)))))) WHERE ((((((rt0.c1)LIKE(rt0.c2))))<=(((rt0.c0 IN ()))))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((~ (rt0.c0)), NULL, (((('-1276003464')AND(v0.c2)))AND(vt0.c0))))<>((((v0.c1)IS(v0.c0)), (v0.c2 IN (vt0.c0)), CASE v0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY (((NOT (v0.c2)))|((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1))))) DESC, CASE WHEN ((v0.c2)%(v0.c1)) THEN ((x'') IS TRUE) ELSE v0.c0 END DESC  NULLS FIRST, (((((0.2412636935271465, rt0.c1, v0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c2)) AND ((v0.c2, v0.c0, rt0.c1))))IS NOT(((rt0.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((~ (rt0.c0)), NULL, (((('-1276003464')AND(v0.c2)))AND(vt0.c0))))<>((((v0.c1)IS(v0.c0)), (v0.c2 IN (vt0.c0)), CASE v0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((NOT (v0.c2)))|((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1))))) DESC, CASE WHEN ((v0.c2)%(v0.c1)) THEN ((x'') IS TRUE) ELSE v0.c0 END DESC  NULLS FIRST, (((((0.2412636935271465, rt0.c1, v0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c2)) AND ((v0.c2, v0.c0, rt0.c1))))IS NOT(((rt0.c0) IS TRUE)))  NULLS FIRST);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((~ (rt0.c0)), NULL, (((('-1276003464')AND(v0.c2)))AND(vt0.c0))))<>((((v0.c1)IS(v0.c0)), (v0.c2 IN (vt0.c0)), CASE v0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY (((NOT (v0.c2)))|((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1))))) DESC, CASE WHEN ((v0.c2)%(v0.c1)) THEN ((x'') IS TRUE) ELSE v0.c0 END DESC  NULLS FIRST, (((((0.2412636935271465, rt0.c1, v0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c2)) AND ((v0.c2, v0.c0, rt0.c1))))IS NOT(((rt0.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((~ (rt0.c0)), NULL, (((('-1276003464')AND(v0.c2)))AND(vt0.c0))))<>((((v0.c1)IS(v0.c0)), (v0.c2 IN (vt0.c0)), CASE v0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((NOT (v0.c2)))|((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1))))) DESC, CASE WHEN ((v0.c2)%(v0.c1)) THEN ((x'') IS TRUE) ELSE v0.c0 END DESC  NULLS FIRST, (((((0.2412636935271465, rt0.c1, v0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c2)) AND ((v0.c2, v0.c0, rt0.c1))))IS NOT(((rt0.c0) IS TRUE)))  NULLS FIRST);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((~ (rt0.c0)), NULL, (((('-1276003464')AND(v0.c2)))AND(vt0.c0))))<>((((v0.c1)IS(v0.c0)), (v0.c2 IN (vt0.c0)), CASE v0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY (((NOT (v0.c2)))|((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1))))) DESC, CASE WHEN ((v0.c2)%(v0.c1)) THEN ((x'') IS TRUE) ELSE v0.c0 END DESC  NULLS FIRST, (((((0.2412636935271465, rt0.c1, v0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c2)) AND ((v0.c2, v0.c0, rt0.c1))))IS NOT(((rt0.c0) IS TRUE)))  NULLS FIRST;
SELECT * FROM vt0, v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (v0.c0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((vt0.c0)GLOB(rt0.c2)))IS NOT(CASE v0.c0  WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(rt0.c2)))IS NOT(CASE v0.c0  WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((vt0.c0)GLOB(rt0.c2)))IS NOT(CASE v0.c0  WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(rt0.c2)))IS NOT(CASE v0.c0  WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((vt0.c0)GLOB(rt0.c2)))IS NOT(CASE v0.c0  WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN v0.c2 THEN v0.c1 ELSE vt0.c0 END)));
SELECT ALL * FROM rt0, v0 WHERE (((CASE v0.c0  WHEN rt0.c1 THEN '1610547215' ELSE v0.c1 END)IS(rt0.c2 COLLATE BINARY))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN rt0.c1 THEN '1610547215' ELSE v0.c1 END)IS(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (((CASE v0.c0  WHEN rt0.c1 THEN '1610547215' ELSE v0.c1 END)IS(rt0.c2 COLLATE BINARY))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN rt0.c1 THEN '1610547215' ELSE v0.c1 END)IS(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (((CASE v0.c0  WHEN rt0.c1 THEN '1610547215' ELSE v0.c1 END)IS(rt0.c2 COLLATE BINARY))) ORDER BY NULL ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((v0.c2)<(v0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(NULL))) ORDER BY (((v0.c0 IN ()))=(((vt0.c0)*(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)<(v0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(NULL))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0 IN ()))==(((vt0.c0)*(vt0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((v0.c2)<(v0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(NULL))) ORDER BY (((v0.c0 IN ()))=(((vt0.c0)*(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)<(v0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(NULL))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0 IN ()))==(((vt0.c0)*(vt0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((v0.c2)<(v0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(NULL))) ORDER BY (((v0.c0 IN ()))=(((vt0.c0)*(vt0.c0))));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((v0.c2)<>(rt0.c2))) IS FALSE)) ORDER BY (((((vt0.c0)<=(v0.c0))))=((v0.c0 COLLATE NOCASE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)<>(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((((vt0.c0)<=(v0.c0))))==((v0.c0 COLLATE NOCASE))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((v0.c2)<>(rt0.c2))) IS FALSE)) ORDER BY (((((vt0.c0)<=(v0.c0))))=((v0.c0 COLLATE NOCASE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)<>(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((((vt0.c0)<=(v0.c0))))==((v0.c0 COLLATE NOCASE))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((v0.c2)<>(rt0.c2))) IS FALSE)) ORDER BY (((((vt0.c0)<=(v0.c0))))=((v0.c0 COLLATE NOCASE))) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (((((((((v0.c1)OR(v0.c0)))AND(v0.c2)))OR(v0.c0)))OR(v0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c1)OR(v0.c0)))AND(v0.c2)))OR(v0.c0)))OR(v0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((v0.c1)OR(v0.c0)))AND(v0.c2)))OR(v0.c0)))OR(v0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c1)OR(v0.c0)))AND(v0.c2)))OR(v0.c0)))OR(v0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((v0.c1)OR(v0.c0)))AND(v0.c2)))OR(v0.c0)))OR(v0.c2)) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (((rt0.c2 IN (rt0.c0)) IN (CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN (rt0.c0)) IN (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2 IN (rt0.c0)) IN (CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN (rt0.c0)) IN (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2 IN (rt0.c0)) IN (CAST(rt0.c2 AS INTEGER))));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((v0.c1) IS TRUE) COLLATE NOCASE) ORDER BY 0.48516377357309726 DESC, ABS((v0.c1 IN ())) DESC  NULLS FIRST, (~ (SQLITE_VERSION())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY 0.48516377357309726 DESC, ABS((v0.c1 IN ())) DESC  NULLS FIRST, (~ (SQLITE_VERSION())) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((v0.c1) IS TRUE) COLLATE NOCASE) ORDER BY 0.48516377357309726 DESC, ABS((v0.c1 IN ())) DESC  NULLS FIRST, (~ (SQLITE_VERSION())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY 0.48516377357309726 DESC, ABS((v0.c1 IN ())) DESC  NULLS FIRST, (~ (SQLITE_VERSION())) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((v0.c1) IS TRUE) COLLATE NOCASE) ORDER BY 0.48516377357309726 DESC, ABS((v0.c1 IN ())) DESC  NULLS FIRST, (~ (SQLITE_VERSION())) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((- (((((rt0.c2)AND(v0.c1)))AND(v0.c0))))) ORDER BY (((((rt0.c2) BETWEEN (v0.c2) AND (v0.c1))))<=((((vt0.c0)||(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((rt0.c2)AND(v0.c1)))AND(v0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((((rt0.c2) BETWEEN (v0.c2) AND (v0.c1))))<=((((vt0.c0)||(v0.c0))))));
SELECT ALL * FROM vt0, v0, rt0 WHERE ((- (((((rt0.c2)AND(v0.c1)))AND(v0.c0))))) ORDER BY (((((rt0.c2) BETWEEN (v0.c2) AND (v0.c1))))<=((((vt0.c0)||(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((rt0.c2)AND(v0.c1)))AND(v0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((((rt0.c2) BETWEEN (v0.c2) AND (v0.c1))))<=((((vt0.c0)||(v0.c0))))));
SELECT ALL * FROM vt0, v0, rt0 WHERE ((- (((((rt0.c2)AND(v0.c1)))AND(v0.c0))))) ORDER BY (((((rt0.c2) BETWEEN (v0.c2) AND (v0.c1))))<=((((vt0.c0)||(v0.c0)))));
SELECT * FROM rt0, v0 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (NULL COLLATE BINARY);
SELECT * FROM rt0 WHERE (((rt0.c1)AND(rt0.c2)) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)AND(rt0.c2)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1)AND(rt0.c2)) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)AND(rt0.c2)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1)AND(rt0.c2)) COLLATE RTRIM COLLATE NOCASE);
SELECT * FROM vt0, rt0, v0 WHERE (v0.c2) ORDER BY ((((((rt0.c0))!=((v0.c0)))))<((((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((((rt0.c0))<>((v0.c0)))))<((((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))))  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE (v0.c2) ORDER BY ((((((rt0.c0))!=((v0.c0)))))<((((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((((rt0.c0))<>((v0.c0)))))<((((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))))  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE (v0.c2) ORDER BY ((((((rt0.c0))!=((v0.c0)))))<((((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((((v0.c0 COLLATE BINARY))<((CASE x''  WHEN v0.c2 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 COLLATE BINARY))<((CASE x''  WHEN v0.c2 THEN rt0.c0 END)))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((((v0.c0 COLLATE BINARY))<((CASE x''  WHEN v0.c2 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 COLLATE BINARY))<((CASE x''  WHEN v0.c2 THEN rt0.c0 END)))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE ((((v0.c0 COLLATE BINARY))<((CASE x''  WHEN v0.c2 THEN rt0.c0 END))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))) NOT NULL)) ORDER BY 0.6265883049372148  NULLS FIRST, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY 0.6265883049372148  NULLS FIRST, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))) NOT NULL)) ORDER BY 0.6265883049372148  NULLS FIRST, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY 0.6265883049372148  NULLS FIRST, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))) NOT NULL)) ORDER BY 0.6265883049372148  NULLS FIRST, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM;
SELECT ALL * FROM v0, rt0 CROSS JOIN vt0 ON ((((((v0.c0)+(v0.c0)))OR(0.5278425677055248)))OR(((rt0.c0)-(vt0.c0)))) WHERE (((((v0.c2)*(0.8049688022667849))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((0Xffffffffc1257be6)) AND ((vt0.c0)))) AND (((rt0.c0)>>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)*(0.8049688022667849))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((0Xffffffffc1257be6)) AND ((vt0.c0)))) AND (((rt0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON ((((((v0.c0)+(v0.c0)))OR(0.5278425677055248)))OR(((rt0.c0)-(vt0.c0)))));
SELECT ALL * FROM v0, rt0 CROSS JOIN vt0 ON ((((((v0.c0)+(v0.c0)))OR(0.5278425677055248)))OR(((rt0.c0)-(vt0.c0)))) WHERE (((((v0.c2)*(0.8049688022667849))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((0Xffffffffc1257be6)) AND ((vt0.c0)))) AND (((rt0.c0)>>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)*(0.8049688022667849))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((0Xffffffffc1257be6)) AND ((vt0.c0)))) AND (((rt0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON ((((((v0.c0)+(v0.c0)))OR(0.5278425677055248)))OR(((rt0.c0)-(vt0.c0)))));
SELECT ALL * FROM v0, rt0 CROSS JOIN vt0 ON ((((((v0.c0)+(v0.c0)))OR(0.5278425677055248)))OR(((rt0.c0)-(vt0.c0)))) WHERE (((((v0.c2)*(0.8049688022667849))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((0Xffffffffc1257be6)) AND ((vt0.c0)))) AND (((rt0.c0)>>(v0.c0)))));
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT * FROM rt0 CROSS JOIN v0 ON ((v0.c1) IS FALSE) COLLATE BINARY WHERE (((((rt0.c1) NOT NULL)) BETWEEN (CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END) AND (((v0.c2)>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT NULL)) BETWEEN (CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END) AND (((v0.c2)>(rt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((v0.c1) IS FALSE) COLLATE BINARY);
SELECT * FROM rt0 CROSS JOIN v0 ON ((v0.c1) IS FALSE) COLLATE BINARY WHERE (((((rt0.c1) NOT NULL)) BETWEEN (CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END) AND (((v0.c2)>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT NULL)) BETWEEN (CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END) AND (((v0.c2)>(rt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((v0.c1) IS FALSE) COLLATE BINARY);
SELECT * FROM rt0 CROSS JOIN v0 ON ((v0.c1) IS FALSE) COLLATE BINARY WHERE (((((rt0.c1) NOT NULL)) BETWEEN (CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END) AND (((v0.c2)>(rt0.c1)))));
SELECT ALL * FROM vt0 WHERE (0X78a13cbd);
SELECT SUM(count) FROM (SELECT ALL ((0X78a13cbd) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE (0X78a13cbd);
SELECT SUM(count) FROM (SELECT ALL ((0X78a13cbd) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE (0X78a13cbd);
SELECT ALL * FROM v0, rt0, vt0 WHERE (load_extension((((v0.c2))<>((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension((((v0.c2))<>((rt0.c1))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (load_extension((((v0.c2))<>((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension((((v0.c2))<>((rt0.c1))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (load_extension((((v0.c2))<>((rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (+ (vt0.c0)) ASC  NULLS LAST, ((((vt0.c0)>>(vt0.c0))) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)) ASC  NULLS LAST, ((((vt0.c0)>>(vt0.c0))) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (+ (vt0.c0)) ASC  NULLS LAST, ((((vt0.c0)>>(vt0.c0))) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)) ASC  NULLS LAST, ((((vt0.c0)>>(vt0.c0))) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (+ (vt0.c0)) ASC  NULLS LAST, ((((vt0.c0)>>(vt0.c0))) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (((v0.c1, v0.c2, v0.c1))<(('b]홠{', v0.c0, v0.c1))) THEN CAST('' AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((v0.c1, v0.c2, v0.c1))<(('b]홠{', v0.c0, v0.c1))) THEN CAST('' AS BLOB) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (((v0.c1, v0.c2, v0.c1))<(('b]홠{', v0.c0, v0.c1))) THEN CAST('' AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((v0.c1, v0.c2, v0.c1))<(('b]홠{', v0.c0, v0.c1))) THEN CAST('' AS BLOB) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (((v0.c1, v0.c2, v0.c1))<(('b]홠{', v0.c0, v0.c1))) THEN CAST('' AS BLOB) END);
SELECT COUNT(*) FROM vt0, rt0 WHERE (-1.365969047E9) ORDER BY CASE WHEN -2.061826685E9 THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END END  NULLS FIRST, (LTRIM(rt0.c0, rt0.c2) IN (((rt0.c2)>>(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((-1.365969047E9) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN -2.061826685E9 THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END END  NULLS FIRST, (LTRIM(rt0.c0, rt0.c2) IN (((rt0.c2)>>(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (-1.365969047E9) ORDER BY CASE WHEN -2.061826685E9 THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END END  NULLS FIRST, (LTRIM(rt0.c0, rt0.c2) IN (((rt0.c2)>>(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((-1.365969047E9) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN -2.061826685E9 THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END END  NULLS FIRST, (LTRIM(rt0.c0, rt0.c2) IN (((rt0.c2)>>(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (-1.365969047E9) ORDER BY CASE WHEN -2.061826685E9 THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END END  NULLS FIRST, (LTRIM(rt0.c0, rt0.c2) IN (((rt0.c2)>>(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c1) ORDER BY ROUND((~ (vt0.c0)), v0.c2)  NULLS FIRST, ((CAST(vt0.c0 AS BLOB))-(LIKELY(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0, vt0 ORDER BY ROUND((~ (vt0.c0)), v0.c2)  NULLS FIRST, ((CAST(vt0.c0 AS BLOB))-(LIKELY(v0.c0))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c1) ORDER BY ROUND((~ (vt0.c0)), v0.c2)  NULLS FIRST, ((CAST(vt0.c0 AS BLOB))-(LIKELY(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0, vt0 ORDER BY ROUND((~ (vt0.c0)), v0.c2)  NULLS FIRST, ((CAST(vt0.c0 AS BLOB))-(LIKELY(v0.c0))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c1) ORDER BY ROUND((~ (vt0.c0)), v0.c2)  NULLS FIRST, ((CAST(vt0.c0 AS BLOB))-(LIKELY(v0.c0))) DESC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TRIM(0X298eb4cc, ((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY CAST((~ (rt0.c2)) AS REAL)  NULLS LAST, (((rt0.c1, rt0.c1, v0.c2, v0.c1, rt0.c2)) BETWEEN ((rt0.c0 COLLATE RTRIM, ((v0.c1)>=(v0.c1)), ((rt0.c0)OR(v0.c0)), ((((((((v0.c1)AND(0.6074708982517688)))OR(rt0.c1)))OR(v0.c1)))OR(rt0.c0)), rt0.c0 COLLATE NOCASE)) AND ((((('ls', rt0.c2, v0.c1))>((rt0.c2, rt0.c0, v0.c1))), ((((0x7fffffffffffffff)OR(v0.c1)))AND(v0.c2)), ((rt0.c1)*(v0.c2)), CASE v0.c1  WHEN rt0.c2 THEN v0.c2 ELSE rt0.c1 END, (v0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(0x298eb4cc, ((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((~ (rt0.c2)) AS REAL)  NULLS LAST, (((rt0.c1, rt0.c1, v0.c2, v0.c1, rt0.c2)) BETWEEN ((rt0.c0 COLLATE RTRIM, ((v0.c1)>=(v0.c1)), ((rt0.c0)OR(v0.c0)), ((((((((v0.c1)AND(0.6074708982517688)))OR(rt0.c1)))OR(v0.c1)))OR(rt0.c0)), rt0.c0 COLLATE NOCASE)) AND ((((('ls', rt0.c2, v0.c1))>((rt0.c2, rt0.c0, v0.c1))), ((((0x7fffffffffffffff)OR(v0.c1)))AND(v0.c2)), ((rt0.c1)*(v0.c2)), CASE v0.c1  WHEN rt0.c2 THEN v0.c2 ELSE rt0.c1 END, (v0.c2 IN ())))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TRIM(0X298eb4cc, ((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY CAST((~ (rt0.c2)) AS REAL)  NULLS LAST, (((rt0.c1, rt0.c1, v0.c2, v0.c1, rt0.c2)) BETWEEN ((rt0.c0 COLLATE RTRIM, ((v0.c1)>=(v0.c1)), ((rt0.c0)OR(v0.c0)), ((((((((v0.c1)AND(0.6074708982517688)))OR(rt0.c1)))OR(v0.c1)))OR(rt0.c0)), rt0.c0 COLLATE NOCASE)) AND ((((('ls', rt0.c2, v0.c1))>((rt0.c2, rt0.c0, v0.c1))), ((((0x7fffffffffffffff)OR(v0.c1)))AND(v0.c2)), ((rt0.c1)*(v0.c2)), CASE v0.c1  WHEN rt0.c2 THEN v0.c2 ELSE rt0.c1 END, (v0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(0x298eb4cc, ((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((~ (rt0.c2)) AS REAL)  NULLS LAST, (((rt0.c1, rt0.c1, v0.c2, v0.c1, rt0.c2)) BETWEEN ((rt0.c0 COLLATE RTRIM, ((v0.c1)>=(v0.c1)), ((rt0.c0)OR(v0.c0)), ((((((((v0.c1)AND(0.6074708982517688)))OR(rt0.c1)))OR(v0.c1)))OR(rt0.c0)), rt0.c0 COLLATE NOCASE)) AND ((((('ls', rt0.c2, v0.c1))>((rt0.c2, rt0.c0, v0.c1))), ((((0x7fffffffffffffff)OR(v0.c1)))AND(v0.c2)), ((rt0.c1)*(v0.c2)), CASE v0.c1  WHEN rt0.c2 THEN v0.c2 ELSE rt0.c1 END, (v0.c2 IN ())))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TRIM(0X298eb4cc, ((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY CAST((~ (rt0.c2)) AS REAL)  NULLS LAST, (((rt0.c1, rt0.c1, v0.c2, v0.c1, rt0.c2)) BETWEEN ((rt0.c0 COLLATE RTRIM, ((v0.c1)>=(v0.c1)), ((rt0.c0)OR(v0.c0)), ((((((((v0.c1)AND(0.6074708982517688)))OR(rt0.c1)))OR(v0.c1)))OR(rt0.c0)), rt0.c0 COLLATE NOCASE)) AND ((((('ls', rt0.c2, v0.c1))>((rt0.c2, rt0.c0, v0.c1))), ((((0x7fffffffffffffff)OR(v0.c1)))AND(v0.c2)), ((rt0.c1)*(v0.c2)), CASE v0.c1  WHEN rt0.c2 THEN v0.c2 ELSE rt0.c1 END, (v0.c2 IN ()))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST((rt0.c0 IN (rt0.c2)) AS TEXT)) ORDER BY CASE (vt0.c0 IN ())  WHEN (rt0.c2 IN (rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c1 END ELSE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END END DESC, CASE CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 END  WHEN (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, '-1233667052')) AND ((vt0.c0, vt0.c0, rt0.c0))) THEN NULL END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE (vt0.c0 IN ())  WHEN (rt0.c2 IN (rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c1 END ELSE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END END DESC, CASE CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 END  WHEN (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, '-1233667052')) AND ((vt0.c0, vt0.c0, rt0.c0))) THEN NULL END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST((rt0.c0 IN (rt0.c2)) AS TEXT)) ORDER BY CASE (vt0.c0 IN ())  WHEN (rt0.c2 IN (rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c1 END ELSE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END END DESC, CASE CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 END  WHEN (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, '-1233667052')) AND ((vt0.c0, vt0.c0, rt0.c0))) THEN NULL END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE (vt0.c0 IN ())  WHEN (rt0.c2 IN (rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c1 END ELSE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END END DESC, CASE CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 END  WHEN (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, '-1233667052')) AND ((vt0.c0, vt0.c0, rt0.c0))) THEN NULL END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST((rt0.c0 IN (rt0.c2)) AS TEXT)) ORDER BY CASE (vt0.c0 IN ())  WHEN (rt0.c2 IN (rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c1 END ELSE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END END DESC, CASE CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 END  WHEN (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, '-1233667052')) AND ((vt0.c0, vt0.c0, rt0.c0))) THEN NULL END DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE RTRIM) IS TRUE)) ORDER BY ((((TIME(rt0.c1, rt0.c0, 0.8271938943583609))AND(CASE WHEN vt0.c0 THEN rt0.c2 END)))AND(CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((TIME(rt0.c1, rt0.c0, 0.8271938943583609))AND(CASE WHEN vt0.c0 THEN rt0.c2 END)))AND(CAST(rt0.c1 AS INTEGER))));
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE RTRIM) IS TRUE)) ORDER BY ((((TIME(rt0.c1, rt0.c0, 0.8271938943583609))AND(CASE WHEN vt0.c0 THEN rt0.c2 END)))AND(CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((TIME(rt0.c1, rt0.c0, 0.8271938943583609))AND(CASE WHEN vt0.c0 THEN rt0.c2 END)))AND(CAST(rt0.c1 AS INTEGER))));
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE RTRIM) IS TRUE)) ORDER BY ((((TIME(rt0.c1, rt0.c0, 0.8271938943583609))AND(CASE WHEN vt0.c0 THEN rt0.c2 END)))AND(CAST(rt0.c1 AS INTEGER)));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (x'') ORDER BY (- (v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (- (v0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (x'') ORDER BY (- (v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (- (v0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (x'') ORDER BY (- (v0.c0 COLLATE BINARY));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CAST((+ (v0.c1)) AS NUMERIC) WHERE ((((((((((vt0.c0 IN (v0.c2, vt0.c0)))OR(v0.c2)))AND(v0.c0)))OR(((vt0.c0)>=(v0.c1)))))OR(CASE v0.c2  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN (v0.c2, vt0.c0)))OR(v0.c2)))AND(v0.c0)))OR(((vt0.c0)>=(v0.c1)))))OR(CASE v0.c2  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST((+ (v0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CAST((+ (v0.c1)) AS NUMERIC) WHERE ((((((((((vt0.c0 IN (v0.c2, vt0.c0)))OR(v0.c2)))AND(v0.c0)))OR(((vt0.c0)>=(v0.c1)))))OR(CASE v0.c2  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN (v0.c2, vt0.c0)))OR(v0.c2)))AND(v0.c0)))OR(((vt0.c0)>=(v0.c1)))))OR(CASE v0.c2  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST((+ (v0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CAST((+ (v0.c1)) AS NUMERIC) WHERE ((((((((((vt0.c0 IN (v0.c2, vt0.c0)))OR(v0.c2)))AND(v0.c0)))OR(((vt0.c0)>=(v0.c1)))))OR(CASE v0.c2  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT * FROM v0, vt0 WHERE (((LIKELY(DISTINCT 9223372036854775807))&(((v0.c1) BETWEEN (vt0.c0) AND (v0.c2))))) ORDER BY CAST(HEX('1308283416') AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT 9223372036854775807))&(((v0.c1) BETWEEN (vt0.c0) AND (v0.c2))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(HEX('1308283416') AS TEXT) DESC);
SELECT * FROM v0, vt0 WHERE (((LIKELY(DISTINCT 9223372036854775807))&(((v0.c1) BETWEEN (vt0.c0) AND (v0.c2))))) ORDER BY CAST(HEX('1308283416') AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT 9223372036854775807))&(((v0.c1) BETWEEN (vt0.c0) AND (v0.c2))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(HEX('1308283416') AS TEXT) DESC);
SELECT * FROM v0, vt0 WHERE (((LIKELY(DISTINCT 9223372036854775807))&(((v0.c1) BETWEEN (vt0.c0) AND (v0.c2))))) ORDER BY CAST(HEX('1308283416') AS TEXT) DESC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((~ ('1891031021')))AND((- ('')))) WHERE (CASE (~ (347300716))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN (((NULL)) NOT BETWEEN ((x'')) AND ((rt0.c1))) END) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST, ((((NULL, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c2, rt0.c0, vt0.c0))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (~ (347300716))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN (((NULL)) NOT BETWEEN ((x'')) AND ((rt0.c1))) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((~ ('1891031021')))AND((- ('')))) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST, ((((NULL, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c2, rt0.c0, vt0.c0))) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((~ ('1891031021')))AND((- ('')))) WHERE (CASE (~ (347300716))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN (((NULL)) NOT BETWEEN ((x'')) AND ((rt0.c1))) END) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST, ((((NULL, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c2, rt0.c0, vt0.c0))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (~ (347300716))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN (((NULL)) NOT BETWEEN ((x'')) AND ((rt0.c1))) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((~ ('1891031021')))AND((- ('')))) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST, ((((NULL, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c2, rt0.c0, vt0.c0))) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((~ ('1891031021')))AND((- ('')))) WHERE (CASE (~ (347300716))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN (((NULL)) NOT BETWEEN ((x'')) AND ((rt0.c1))) END) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST, ((((NULL, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c2, rt0.c0, vt0.c0))) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c1, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM, CAST(rt0.c2 AS TEXT), ((rt0.c2)IS(rt0.c1)))) AND ((((((((((rt0.c2)AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)), (-1.300212751E9 IN (rt0.c0)), (rt0.c1 IN ()))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((rt0.c1, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM, CAST(rt0.c2 AS TEXT), ((rt0.c2)IS(rt0.c1)))) AND ((((((((((rt0.c2)AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)), (-1.300212751E9 IN (rt0.c0)), (rt0.c1 IN ()))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY x'');
SELECT * FROM vt0, rt0 WHERE ((((rt0.c1, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM, CAST(rt0.c2 AS TEXT), ((rt0.c2)IS(rt0.c1)))) AND ((((((((((rt0.c2)AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)), (-1.300212751E9 IN (rt0.c0)), (rt0.c1 IN ()))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((rt0.c1, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM, CAST(rt0.c2 AS TEXT), ((rt0.c2)IS(rt0.c1)))) AND ((((((((((rt0.c2)AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)), (-1.300212751E9 IN (rt0.c0)), (rt0.c1 IN ()))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY x'');
SELECT * FROM vt0, rt0 WHERE ((((rt0.c1, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM, CAST(rt0.c2 AS TEXT), ((rt0.c2)IS(rt0.c1)))) AND ((((((((((rt0.c2)AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)), (-1.300212751E9 IN (rt0.c0)), (rt0.c1 IN ()))))) ORDER BY x'';
SELECT * FROM rt0 WHERE (DATETIME(((rt0.c0)=(rt0.c1)), (~ (rt0.c0)), (rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(((rt0.c0)=(rt0.c1)), (~ (rt0.c0)), (rt0.c1 IN ()))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (DATETIME(((rt0.c0)=(rt0.c1)), (~ (rt0.c0)), (rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(((rt0.c0)=(rt0.c1)), (~ (rt0.c0)), (rt0.c1 IN ()))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (DATETIME(((rt0.c0)=(rt0.c1)), (~ (rt0.c0)), (rt0.c1 IN ())));
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)==(0.7657907093203438)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)=(0.7657907093203438))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)==(0.7657907093203438)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)=(0.7657907093203438))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)==(0.7657907093203438)))));
SELECT ALL * FROM rt0, v0 WHERE ((CAST(rt0.c2 AS BLOB) IN ())) ORDER BY CASE ((((rt0.c1)OR(v0.c2)))AND(rt0.c1))  WHEN LOWER(v0.c1) THEN ((v0.c1)<(v0.c2)) END  NULLS LAST, (((rt0.c1 IN (rt0.c0, v0.c0)))+(NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS BLOB) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE ((((rt0.c1)OR(v0.c2)))AND(rt0.c1))  WHEN LOWER(v0.c1) THEN ((v0.c1)<(v0.c2)) END  NULLS LAST, (((rt0.c1 IN (rt0.c0, v0.c0)))+(NULL)) ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((CAST(rt0.c2 AS BLOB) IN ())) ORDER BY CASE ((((rt0.c1)OR(v0.c2)))AND(rt0.c1))  WHEN LOWER(v0.c1) THEN ((v0.c1)<(v0.c2)) END  NULLS LAST, (((rt0.c1 IN (rt0.c0, v0.c0)))+(NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS BLOB) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE ((((rt0.c1)OR(v0.c2)))AND(rt0.c1))  WHEN LOWER(v0.c1) THEN ((v0.c1)<(v0.c2)) END  NULLS LAST, (((rt0.c1 IN (rt0.c0, v0.c0)))+(NULL)) ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((CAST(rt0.c2 AS BLOB) IN ())) ORDER BY CASE ((((rt0.c1)OR(v0.c2)))AND(rt0.c1))  WHEN LOWER(v0.c1) THEN ((v0.c1)<(v0.c2)) END  NULLS LAST, (((rt0.c1 IN (rt0.c0, v0.c0)))+(NULL)) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (NULL);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1) NOT NULL) IN ()) WHERE (CASE CAST(vt0.c0 AS INTEGER)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN (rt0.c0 IN (vt0.c0, rt0.c1)) WHEN (NOT (rt0.c1)) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.5402282342959609) WHEN (vt0.c0 IN (rt0.c2)) THEN (~ (rt0.c2)) WHEN vt0.c0 COLLATE RTRIM THEN (rt0.c2 IN (0.37359958304565, rt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN UNLIKELY(rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS INTEGER)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN (rt0.c0 IN (vt0.c0, rt0.c1)) WHEN (NOT (rt0.c1)) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.5402282342959609) WHEN (vt0.c0 IN (rt0.c2)) THEN (~ (rt0.c2)) WHEN vt0.c0 COLLATE RTRIM THEN (rt0.c2 IN (0.37359958304565, rt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN UNLIKELY(rt0.c0) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1) NOT NULL) IN ()));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1) NOT NULL) IN ()) WHERE (CASE CAST(vt0.c0 AS INTEGER)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN (rt0.c0 IN (vt0.c0, rt0.c1)) WHEN (NOT (rt0.c1)) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.5402282342959609) WHEN (vt0.c0 IN (rt0.c2)) THEN (~ (rt0.c2)) WHEN vt0.c0 COLLATE RTRIM THEN (rt0.c2 IN (0.37359958304565, rt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN UNLIKELY(rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS INTEGER)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN (rt0.c0 IN (vt0.c0, rt0.c1)) WHEN (NOT (rt0.c1)) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.5402282342959609) WHEN (vt0.c0 IN (rt0.c2)) THEN (~ (rt0.c2)) WHEN vt0.c0 COLLATE RTRIM THEN (rt0.c2 IN (0.37359958304565, rt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN UNLIKELY(rt0.c0) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1) NOT NULL) IN ()));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c1) NOT NULL) IN ()) WHERE (CASE CAST(vt0.c0 AS INTEGER)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN (rt0.c0 IN (vt0.c0, rt0.c1)) WHEN (NOT (rt0.c1)) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.5402282342959609) WHEN (vt0.c0 IN (rt0.c2)) THEN (~ (rt0.c2)) WHEN vt0.c0 COLLATE RTRIM THEN (rt0.c2 IN (0.37359958304565, rt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN UNLIKELY(rt0.c0) END);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((v0.c2) IS TRUE) THEN json_patch(v0.c0, v0.c2) WHEN v0.c0 COLLATE NOCASE THEN (v0.c1 IN (v0.c2)) WHEN x'' THEN v0.c1 ELSE ((v0.c2)AND(v0.c0)) END) ORDER BY NULLIF(DISTINCT (v0.c1 IN ()), CASE v0.c0  WHEN v0.c1 THEN v0.c2 END), TIME(CAST(vt0.c0 AS TEXT), CASE vt0.c0  WHEN v0.c2 THEN v0.c2 WHEN NULL THEN v0.c0 WHEN vt0.c0 THEN v0.c2 END, '1306959782', '', json_remove(v0.c2, v0.c1, x'', v0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c2) IS TRUE) THEN json_patch(v0.c0, v0.c2) WHEN v0.c0 COLLATE NOCASE THEN (v0.c1 IN (v0.c2)) WHEN x'' THEN v0.c1 ELSE ((v0.c2)AND(v0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY NULLIF(DISTINCT (v0.c1 IN ()), CASE v0.c0  WHEN v0.c1 THEN v0.c2 END), TIME(CAST(vt0.c0 AS TEXT), CASE vt0.c0  WHEN v0.c2 THEN v0.c2 WHEN NULL THEN v0.c0 WHEN vt0.c0 THEN v0.c2 END, '1306959782', '', json_remove(v0.c2, v0.c1, x'', v0.c2))  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((v0.c2) IS TRUE) THEN json_patch(v0.c0, v0.c2) WHEN v0.c0 COLLATE NOCASE THEN (v0.c1 IN (v0.c2)) WHEN x'' THEN v0.c1 ELSE ((v0.c2)AND(v0.c0)) END) ORDER BY NULLIF(DISTINCT (v0.c1 IN ()), CASE v0.c0  WHEN v0.c1 THEN v0.c2 END), TIME(CAST(vt0.c0 AS TEXT), CASE vt0.c0  WHEN v0.c2 THEN v0.c2 WHEN NULL THEN v0.c0 WHEN vt0.c0 THEN v0.c2 END, '1306959782', '', json_remove(v0.c2, v0.c1, x'', v0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c2) IS TRUE) THEN json_patch(v0.c0, v0.c2) WHEN v0.c0 COLLATE NOCASE THEN (v0.c1 IN (v0.c2)) WHEN x'' THEN v0.c1 ELSE ((v0.c2)AND(v0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY NULLIF(DISTINCT (v0.c1 IN ()), CASE v0.c0  WHEN v0.c1 THEN v0.c2 END), TIME(CAST(vt0.c0 AS TEXT), CASE vt0.c0  WHEN v0.c2 THEN v0.c2 WHEN NULL THEN v0.c0 WHEN vt0.c0 THEN v0.c2 END, '1306959782', '', json_remove(v0.c2, v0.c1, x'', v0.c2))  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((v0.c2) IS TRUE) THEN json_patch(v0.c0, v0.c2) WHEN v0.c0 COLLATE NOCASE THEN (v0.c1 IN (v0.c2)) WHEN x'' THEN v0.c1 ELSE ((v0.c2)AND(v0.c0)) END) ORDER BY NULLIF(DISTINCT (v0.c1 IN ()), CASE v0.c0  WHEN v0.c1 THEN v0.c2 END), TIME(CAST(vt0.c0 AS TEXT), CASE vt0.c0  WHEN v0.c2 THEN v0.c2 WHEN NULL THEN v0.c0 WHEN vt0.c0 THEN v0.c2 END, '1306959782', '', json_remove(v0.c2, v0.c1, x'', v0.c2))  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE NOCASE);
SELECT * FROM v0, rt0, vt0 WHERE (CASE WHEN v0.c1 COLLATE BINARY THEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0)) WHEN rt0.c1 COLLATE RTRIM THEN ((((rt0.c2)OR(v0.c0)))AND(rt0.c2)) WHEN rt0.c2 COLLATE NOCASE THEN (((x'3b1453bb3d2f')) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c1 COLLATE BINARY THEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0)) WHEN rt0.c1 COLLATE RTRIM THEN ((((rt0.c2)OR(v0.c0)))AND(rt0.c2)) WHEN rt0.c2 COLLATE NOCASE THEN (((x'3b1453bb3d2f')) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) END) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (CASE WHEN v0.c1 COLLATE BINARY THEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0)) WHEN rt0.c1 COLLATE RTRIM THEN ((((rt0.c2)OR(v0.c0)))AND(rt0.c2)) WHEN rt0.c2 COLLATE NOCASE THEN (((x'3b1453bb3d2f')) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c1 COLLATE BINARY THEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0)) WHEN rt0.c1 COLLATE RTRIM THEN ((((rt0.c2)OR(v0.c0)))AND(rt0.c2)) WHEN rt0.c2 COLLATE NOCASE THEN (((x'3b1453bb3d2f')) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) END) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (CASE WHEN v0.c1 COLLATE BINARY THEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0)) WHEN rt0.c1 COLLATE RTRIM THEN ((((rt0.c2)OR(v0.c0)))AND(rt0.c2)) WHEN rt0.c2 COLLATE NOCASE THEN (((x'3b1453bb3d2f')) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))*(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))*(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))*(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))*(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))*(vt0.c0)));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((rt0.c1) IS FALSE))/((((NULL)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS FALSE))/((((NULL)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((rt0.c1) IS FALSE))/((((NULL)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS FALSE))/((((NULL)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((rt0.c1) IS FALSE))/((((NULL)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c1)||(v0.c0)))%(CAST(rt0.c2 AS NUMERIC))) WHERE (CAST(CAST(v0.c0 AS INTEGER) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c1)||(v0.c0)))%(CAST(rt0.c2 AS NUMERIC))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c1)||(v0.c0)))%(CAST(rt0.c2 AS NUMERIC))) WHERE (CAST(CAST(v0.c0 AS INTEGER) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c1)||(v0.c0)))%(CAST(rt0.c2 AS NUMERIC))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c1)||(v0.c0)))%(CAST(rt0.c2 AS NUMERIC))) WHERE (CAST(CAST(v0.c0 AS INTEGER) AS TEXT));
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((((rt0.c2)!=(rt0.c2)))GLOB('-1791724076'))) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (rt0.c1 COLLATE BINARY)) DESC, (rt0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)!=(rt0.c2)))GLOB('-1791724076'))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (rt0.c1 COLLATE BINARY)) DESC, (rt0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((((rt0.c2)!=(rt0.c2)))GLOB('-1791724076'))) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (rt0.c1 COLLATE BINARY)) DESC, (rt0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)!=(rt0.c2)))GLOB('-1791724076'))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (rt0.c1 COLLATE BINARY)) DESC, (rt0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((((rt0.c2)!=(rt0.c2)))GLOB('-1791724076'))) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (rt0.c1 COLLATE BINARY)) DESC, (rt0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST;
SELECT * FROM rt0 INNER JOIN v0 ON CASE WHEN v0.c2 THEN rt0.c1 END COLLATE NOCASE INNER JOIN vt0 ON ((((rt0.c0)LIKE(v0.c1)))<<((((v0.c0, v0.c2, v0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((v0.c2, v0.c1, rt0.c1))))) WHERE (((CAST(rt0.c2 AS BLOB))-(LAST_INSERT_ROWID()))) ORDER BY rt0.c2 DESC  NULLS LAST, rt0.c1  NULLS FIRST, ((((((rt0.c1)AND(rt0.c2)))AND(v0.c0))) BETWEEN ((0X5d9c7dfc IN ())) AND (vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB))-(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CASE WHEN v0.c2 THEN rt0.c1 END COLLATE NOCASE INNER JOIN vt0 ON ((((rt0.c0)LIKE(v0.c1)))<<((((v0.c0, v0.c2, v0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((v0.c2, v0.c1, rt0.c1))))) ORDER BY rt0.c2 DESC  NULLS LAST, rt0.c1  NULLS FIRST, ((((((rt0.c1)AND(rt0.c2)))AND(v0.c0))) BETWEEN ((0x5d9c7dfc IN ())) AND (vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN v0 ON CASE WHEN v0.c2 THEN rt0.c1 END COLLATE NOCASE INNER JOIN vt0 ON ((((rt0.c0)LIKE(v0.c1)))<<((((v0.c0, v0.c2, v0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((v0.c2, v0.c1, rt0.c1))))) WHERE (((CAST(rt0.c2 AS BLOB))-(LAST_INSERT_ROWID()))) ORDER BY rt0.c2 DESC  NULLS LAST, rt0.c1  NULLS FIRST, ((((((rt0.c1)AND(rt0.c2)))AND(v0.c0))) BETWEEN ((0X5d9c7dfc IN ())) AND (vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB))-(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CASE WHEN v0.c2 THEN rt0.c1 END COLLATE NOCASE INNER JOIN vt0 ON ((((rt0.c0)LIKE(v0.c1)))<<((((v0.c0, v0.c2, v0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((v0.c2, v0.c1, rt0.c1))))) ORDER BY rt0.c2 DESC  NULLS LAST, rt0.c1  NULLS FIRST, ((((((rt0.c1)AND(rt0.c2)))AND(v0.c0))) BETWEEN ((0x5d9c7dfc IN ())) AND (vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN v0 ON CASE WHEN v0.c2 THEN rt0.c1 END COLLATE NOCASE INNER JOIN vt0 ON ((((rt0.c0)LIKE(v0.c1)))<<((((v0.c0, v0.c2, v0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((v0.c2, v0.c1, rt0.c1))))) WHERE (((CAST(rt0.c2 AS BLOB))-(LAST_INSERT_ROWID()))) ORDER BY rt0.c2 DESC  NULLS LAST, rt0.c1  NULLS FIRST, ((((((rt0.c1)AND(rt0.c2)))AND(v0.c0))) BETWEEN ((0X5d9c7dfc IN ())) AND (vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c2 ELSE v0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN vt0.c0 THEN v0.c2 ELSE v0.c2 END IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c2 ELSE v0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN vt0.c0 THEN v0.c2 ELSE v0.c2 END IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c2 ELSE v0.c2 END IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2 COLLATE BINARY)OR((NOT (v0.c0)))))OR(((v0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2 COLLATE BINARY)OR((NOT (v0.c0)))))OR(((v0.c1) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2 COLLATE BINARY)OR((NOT (v0.c0)))))OR(((v0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2 COLLATE BINARY)OR((NOT (v0.c0)))))OR(((v0.c1) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2 COLLATE BINARY)OR((NOT (v0.c0)))))OR(((v0.c1) IS FALSE))));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((vt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2)) COLLATE NOCASE) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY rt0.c1 DESC);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((vt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2)) COLLATE NOCASE) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY rt0.c1 DESC);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((vt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2)) COLLATE NOCASE) ORDER BY rt0.c1 DESC;
SELECT * FROM vt0 WHERE (((((vt0.c0)<<('4*'))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<<('4*'))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)<<('4*'))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<<('4*'))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)<<('4*'))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((((rt0.c1)/(v0.c2))))==((CAST(vt0.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)/(v0.c2))))=((CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((((rt0.c1)/(v0.c2))))==((CAST(vt0.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)/(v0.c2))))=((CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((((rt0.c1)/(v0.c2))))==((CAST(vt0.c0 AS INTEGER)))));
SELECT COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY CASE WHEN LIKELY(v0.c1) THEN '-1932538253' END DESC, ((((v0.c1) IS TRUE))IS NOT(v0.c1))  NULLS LAST, (((v0.c2)) BETWEEN (((NOT (v0.c1)))) AND ((LIKELY(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN LIKELY(v0.c1) THEN '-1932538253' END DESC, ((((v0.c1) IS TRUE))IS NOT(v0.c1))  NULLS LAST, (((v0.c2)) BETWEEN (((NOT (v0.c1)))) AND ((LIKELY(v0.c0)))) DESC);
SELECT COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY CASE WHEN LIKELY(v0.c1) THEN '-1932538253' END DESC, ((((v0.c1) IS TRUE))IS NOT(v0.c1))  NULLS LAST, (((v0.c2)) BETWEEN (((NOT (v0.c1)))) AND ((LIKELY(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN LIKELY(v0.c1) THEN '-1932538253' END DESC, ((((v0.c1) IS TRUE))IS NOT(v0.c1))  NULLS LAST, (((v0.c2)) BETWEEN (((NOT (v0.c1)))) AND ((LIKELY(v0.c0)))) DESC);
SELECT COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY CASE WHEN LIKELY(v0.c1) THEN '-1932538253' END DESC, ((((v0.c1) IS TRUE))IS NOT(v0.c1))  NULLS LAST, (((v0.c2)) BETWEEN (((NOT (v0.c1)))) AND ((LIKELY(v0.c0)))) DESC;
SELECT ALL * FROM v0, vt0 WHERE (((LAST_INSERT_ROWID()) NOT BETWEEN (((v0.c1)GLOB(vt0.c0))) AND (((x'c6ad')-(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID()) NOT BETWEEN (((v0.c1)GLOB(vt0.c0))) AND (((x'c6ad')-(v0.c2))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((LAST_INSERT_ROWID()) NOT BETWEEN (((v0.c1)GLOB(vt0.c0))) AND (((x'c6ad')-(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID()) NOT BETWEEN (((v0.c1)GLOB(vt0.c0))) AND (((x'c6ad')-(v0.c2))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((LAST_INSERT_ROWID()) NOT BETWEEN (((v0.c1)GLOB(vt0.c0))) AND (((x'c6ad')-(v0.c2)))));
SELECT * FROM vt0, rt0 NOT INDEXED, v0 WHERE (CASE WHEN ((v0.c0)IS(v0.c2)) THEN ((rt0.c0)IS(rt0.c1)) ELSE (- (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)IS(v0.c2)) THEN ((rt0.c0)IS(rt0.c1)) ELSE (- (rt0.c0)) END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0 NOT INDEXED, v0 WHERE (CASE WHEN ((v0.c0)IS(v0.c2)) THEN ((rt0.c0)IS(rt0.c1)) ELSE (- (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)IS(v0.c2)) THEN ((rt0.c0)IS(rt0.c1)) ELSE (- (rt0.c0)) END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0 NOT INDEXED, v0 WHERE (CASE WHEN ((v0.c0)IS(v0.c2)) THEN ((rt0.c0)IS(rt0.c1)) ELSE (- (rt0.c0)) END);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)) BETWEEN ((v0.c2)) AND ((rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)) BETWEEN ((v0.c2)) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)) BETWEEN ((v0.c2)) AND ((rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)) BETWEEN ((v0.c2)) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)) BETWEEN ((v0.c2)) AND ((rt0.c0))) IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE ((((v0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN vt0.c0 THEN ((v0.c0)GLOB(v0.c0)) END) ORDER BY (+ (NULLIF(v0.c1, '0.14460523052124963'))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((((v0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN vt0.c0 THEN ((v0.c0)GLOB(v0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (+ (NULLIF(v0.c1, '0.14460523052124963'))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE ((((v0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN vt0.c0 THEN ((v0.c0)GLOB(v0.c0)) END) ORDER BY (+ (NULLIF(v0.c1, '0.14460523052124963'))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((((v0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN vt0.c0 THEN ((v0.c0)GLOB(v0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (+ (NULLIF(v0.c1, '0.14460523052124963'))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE ((((v0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN vt0.c0 THEN ((v0.c0)GLOB(v0.c0)) END) ORDER BY (+ (NULLIF(v0.c1, '0.14460523052124963'))) DESC;
SELECT ALL * FROM rt0 WHERE ((- (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- (rt0.c1 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2)*(v0.c2)) IN ())) ORDER BY (((x'')-(v0.c0)) IN ((v0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c2)*(v0.c2)) IN ())) IS TRUE)  as count FROM v0 ORDER BY (((x'')-(v0.c0)) IN ((v0.c2 IN ()))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2)*(v0.c2)) IN ())) ORDER BY (((x'')-(v0.c0)) IN ((v0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c2)*(v0.c2)) IN ())) IS TRUE)  as count FROM v0 ORDER BY (((x'')-(v0.c0)) IN ((v0.c2 IN ()))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2)*(v0.c2)) IN ())) ORDER BY (((x'')-(v0.c0)) IN ((v0.c2 IN ()))) ASC;
SELECT ALL * FROM vt0 WHERE (ABS(DISTINCT ((vt0.c0)/(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((vt0.c0)/(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (ABS(DISTINCT ((vt0.c0)/(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((vt0.c0)/(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (ABS(DISTINCT ((vt0.c0)/(vt0.c0))));
SELECT * FROM vt0, rt0 WHERE ((~ ((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((~ ((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((~ ((NOT (rt0.c2)))));
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))) AND ((((rt0.c0) IS FALSE))))) ORDER BY (('640371162') BETWEEN ((rt0.c0 IN ())) AND (LTRIM(rt0.c1, rt0.c1))) DESC, '-1360034575' ASC, ((((((((NULL)OR(CAST(rt0.c1 AS INTEGER))))OR((- (rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)))OR(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))) AND ((((rt0.c0) IS FALSE))))) IS TRUE)  as count FROM rt0 ORDER BY (('640371162') BETWEEN ((rt0.c0 IN ())) AND (LTRIM(rt0.c1, rt0.c1))) DESC, '-1360034575' ASC, ((((((((NULL)OR(CAST(rt0.c1 AS INTEGER))))OR((- (rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)))OR(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))) AND ((((rt0.c0) IS FALSE))))) ORDER BY (('640371162') BETWEEN ((rt0.c0 IN ())) AND (LTRIM(rt0.c1, rt0.c1))) DESC, '-1360034575' ASC, ((((((((NULL)OR(CAST(rt0.c1 AS INTEGER))))OR((- (rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)))OR(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))) AND ((((rt0.c0) IS FALSE))))) IS TRUE)  as count FROM rt0 ORDER BY (('640371162') BETWEEN ((rt0.c0 IN ())) AND (LTRIM(rt0.c1, rt0.c1))) DESC, '-1360034575' ASC, ((((((((NULL)OR(CAST(rt0.c1 AS INTEGER))))OR((- (rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)))OR(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))) AND ((((rt0.c0) IS FALSE))))) ORDER BY (('640371162') BETWEEN ((rt0.c0 IN ())) AND (LTRIM(rt0.c1, rt0.c1))) DESC, '-1360034575' ASC, ((((((((NULL)OR(CAST(rt0.c1 AS INTEGER))))OR((- (rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)))OR(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN (NULL))) ORDER BY ((vt0.c0 COLLATE RTRIM)!=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS NUMERIC) IN (NULL))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)!=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN (NULL))) ORDER BY ((vt0.c0 COLLATE RTRIM)!=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS NUMERIC) IN (NULL))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)!=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN (NULL))) ORDER BY ((vt0.c0 COLLATE RTRIM)!=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (((((v0.c1) BETWEEN (v0.c2) AND (rt0.c0)))IS NOT(((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN (v0.c2) AND (rt0.c0)))IS NOT(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((v0.c1) BETWEEN (v0.c2) AND (rt0.c0)))IS NOT(((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN (v0.c2) AND (rt0.c0)))IS NOT(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((v0.c1) BETWEEN (v0.c2) AND (rt0.c0)))IS NOT(((rt0.c0) IS TRUE))));
SELECT ALL * FROM v0, vt0, rt0 WHERE (LOWER(v0.c2) COLLATE RTRIM) ORDER BY ((((((rt0.c1)%(vt0.c0)))OR(CASE WHEN rt0.c0 THEN v0.c2 ELSE v0.c2 END)))OR(((v0.c0)*(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(v0.c2) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((((rt0.c1)%(vt0.c0)))OR(CASE WHEN rt0.c0 THEN v0.c2 ELSE v0.c2 END)))OR(((v0.c0)*(rt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (LOWER(v0.c2) COLLATE RTRIM) ORDER BY ((((((rt0.c1)%(vt0.c0)))OR(CASE WHEN rt0.c0 THEN v0.c2 ELSE v0.c2 END)))OR(((v0.c0)*(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(v0.c2) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((((rt0.c1)%(vt0.c0)))OR(CASE WHEN rt0.c0 THEN v0.c2 ELSE v0.c2 END)))OR(((v0.c0)*(rt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (LOWER(v0.c2) COLLATE RTRIM) ORDER BY ((((((rt0.c1)%(vt0.c0)))OR(CASE WHEN rt0.c0 THEN v0.c2 ELSE v0.c2 END)))OR(((v0.c0)*(rt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 NATURAL JOIN v0 WHERE ('(#\n,8w');
SELECT SUM(count) FROM (SELECT (('(#\n,8w') IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0);
SELECT * FROM rt0, vt0 NATURAL JOIN v0 WHERE ('(#\n,8w');
SELECT SUM(count) FROM (SELECT (('(#\n,8w') IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0);
SELECT * FROM rt0, vt0 NATURAL JOIN v0 WHERE ('(#\n,8w');
SELECT ALL * FROM rt0 WHERE (((rt0.c0)*(rt0.c1 COLLATE RTRIM))) ORDER BY (rt0.c1 IN ()) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)*(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN ()) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)*(rt0.c1 COLLATE RTRIM))) ORDER BY (rt0.c1 IN ()) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)*(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN ()) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)*(rt0.c1 COLLATE RTRIM))) ORDER BY (rt0.c1 IN ()) COLLATE NOCASE;
SELECT COUNT(*) FROM vt0, rt0 WHERE ('1610547215') ORDER BY ((NOT (vt0.c0)) IN ()), TYPEOF(rt0.c2) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1610547215') IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 ORDER BY ((NOT (vt0.c0)) IN ()), TYPEOF(rt0.c2) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('1610547215') ORDER BY ((NOT (vt0.c0)) IN ()), TYPEOF(rt0.c2) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1610547215') IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 ORDER BY ((NOT (vt0.c0)) IN ()), TYPEOF(rt0.c2) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('1610547215') ORDER BY ((NOT (vt0.c0)) IN ()), TYPEOF(rt0.c2) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) AS BLOB)) ORDER BY rt0.c0 ASC, ((vt0.c0)<=(((v0.c2) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY rt0.c0 ASC, ((vt0.c0)<=(((v0.c2) NOT NULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) AS BLOB)) ORDER BY rt0.c0 ASC, ((vt0.c0)<=(((v0.c2) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY rt0.c0 ASC, ((vt0.c0)<=(((v0.c2) NOT NULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) AS BLOB)) ORDER BY rt0.c0 ASC, ((vt0.c0)<=(((v0.c2) NOT NULL)))  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE (((((NULL) IS FALSE)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) IS FALSE)) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((NULL) IS FALSE)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) IS FALSE)) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((NULL) IS FALSE)) ISNULL));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((((rt0.c1) NOT NULL))OR((((rt0.c0))<=((rt0.c0))))))AND(((vt0.c0) BETWEEN (v0.c2) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) NOT NULL))OR((((rt0.c0))<=((rt0.c0))))))AND(((vt0.c0) BETWEEN (v0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((((rt0.c1) NOT NULL))OR((((rt0.c0))<=((rt0.c0))))))AND(((vt0.c0) BETWEEN (v0.c2) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) NOT NULL))OR((((rt0.c0))<=((rt0.c0))))))AND(((vt0.c0) BETWEEN (v0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((((rt0.c1) NOT NULL))OR((((rt0.c0))<=((rt0.c0))))))AND(((vt0.c0) BETWEEN (v0.c2) AND (vt0.c0)))));
SELECT * FROM vt0, v0 WHERE ((((v0.c2 IN ()))<(((NULL)IS(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((((v0.c2 IN ()))<(((NULL)IS(v0.c2))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((v0.c2 IN ()))<(((NULL)IS(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((((v0.c2 IN ()))<(((NULL)IS(v0.c2))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((v0.c2 IN ()))<(((NULL)IS(v0.c2)))));
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c0) NOT NULL))OR(NULLIF(vt0.c0, vt0.c0))))AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT NULL))OR(NULLIF(vt0.c0, vt0.c0))))AND(rt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c0) NOT NULL))OR(NULLIF(vt0.c0, vt0.c0))))AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT NULL))OR(NULLIF(vt0.c0, vt0.c0))))AND(rt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c0) NOT NULL))OR(NULLIF(vt0.c0, vt0.c0))))AND(rt0.c1)));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((((((((v0.c0)AND('> iy5㝗')))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)) COLLATE BINARY INNER JOIN rt0 ON CASE ((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0))  WHEN ((rt0.c1)GLOB(v0.c2)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))) WHEN ('-1605165438' IN ()) THEN CASE WHEN rt0.c1 THEN 0.5484199494090396 WHEN vt0.c0 THEN v0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE v0.c0 END WHEN ((((v0.c0)AND(rt0.c2)))OR(rt0.c2)) THEN vt0.c0 COLLATE RTRIM END WHERE ((((- (rt0.c1)))<<(RTRIM(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1)))<<(RTRIM(rt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((((((v0.c0)AND('> iy5㝗')))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)) COLLATE BINARY INNER JOIN rt0 ON CASE ((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0))  WHEN ((rt0.c1)GLOB(v0.c2)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))) WHEN ('-1605165438' IN ()) THEN CASE WHEN rt0.c1 THEN 0.5484199494090396 WHEN vt0.c0 THEN v0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE v0.c0 END WHEN ((((v0.c0)AND(rt0.c2)))OR(rt0.c2)) THEN vt0.c0 COLLATE RTRIM END);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((((((((v0.c0)AND('> iy5㝗')))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)) COLLATE BINARY INNER JOIN rt0 ON CASE ((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0))  WHEN ((rt0.c1)GLOB(v0.c2)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))) WHEN ('-1605165438' IN ()) THEN CASE WHEN rt0.c1 THEN 0.5484199494090396 WHEN vt0.c0 THEN v0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE v0.c0 END WHEN ((((v0.c0)AND(rt0.c2)))OR(rt0.c2)) THEN vt0.c0 COLLATE RTRIM END WHERE ((((- (rt0.c1)))<<(RTRIM(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1)))<<(RTRIM(rt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((((((v0.c0)AND('> iy5㝗')))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)) COLLATE BINARY INNER JOIN rt0 ON CASE ((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0))  WHEN ((rt0.c1)GLOB(v0.c2)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))) WHEN ('-1605165438' IN ()) THEN CASE WHEN rt0.c1 THEN 0.5484199494090396 WHEN vt0.c0 THEN v0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE v0.c0 END WHEN ((((v0.c0)AND(rt0.c2)))OR(rt0.c2)) THEN vt0.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((0.23074901178033103)IS(json_extract(v0.c2, v0.c2))));
SELECT SUM(count) FROM (SELECT ((((0.23074901178033103)IS(json_extract(v0.c2, v0.c2)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((0.23074901178033103)IS(json_extract(v0.c2, v0.c2))));
SELECT SUM(count) FROM (SELECT ((((0.23074901178033103)IS(json_extract(v0.c2, v0.c2)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((0.23074901178033103)IS(json_extract(v0.c2, v0.c2))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((+ (CAST(rt0.c0 AS NUMERIC)))) ORDER BY CASE ((rt0.c1) BETWEEN (v0.c1) AND (vt0.c0))  WHEN x'3501' THEN ((rt0.c1) BETWEEN (v0.c2) AND (rt0.c0)) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) END;
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE ((rt0.c1) BETWEEN (v0.c1) AND (vt0.c0))  WHEN x'3501' THEN ((rt0.c1) BETWEEN (v0.c2) AND (rt0.c0)) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) END);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((+ (CAST(rt0.c0 AS NUMERIC)))) ORDER BY CASE ((rt0.c1) BETWEEN (v0.c1) AND (vt0.c0))  WHEN x'3501' THEN ((rt0.c1) BETWEEN (v0.c2) AND (rt0.c0)) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) END;
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE ((rt0.c1) BETWEEN (v0.c1) AND (vt0.c0))  WHEN x'3501' THEN ((rt0.c1) BETWEEN (v0.c2) AND (rt0.c0)) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) END);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((+ (CAST(rt0.c0 AS NUMERIC)))) ORDER BY CASE ((rt0.c1) BETWEEN (v0.c1) AND (vt0.c0))  WHEN x'3501' THEN ((rt0.c1) BETWEEN (v0.c2) AND (rt0.c0)) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) END;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((- (x'')));
SELECT SUM(count) FROM (SELECT ALL (((- (x''))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((- (x'')));
SELECT SUM(count) FROM (SELECT ALL (((- (x''))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((- (x'')));
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN rt0 ON vt0.c0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))))>((('640371162')IS NOT(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))))>((('640371162')IS NOT(v0.c0))))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON vt0.c0);
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN rt0 ON vt0.c0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))))>((('640371162')IS NOT(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))))>((('640371162')IS NOT(v0.c0))))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON vt0.c0);
SELECT ALL * FROM v0, vt0 FULL OUTER JOIN rt0 ON vt0.c0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))))>((('640371162')IS NOT(v0.c0)))));
SELECT * FROM v0, rt0, vt0 WHERE (v0.c1) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY v0.c0 ASC);
SELECT * FROM v0, rt0, vt0 WHERE (v0.c1) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY v0.c0 ASC);
SELECT * FROM v0, rt0, vt0 WHERE (v0.c1) ORDER BY v0.c0 ASC;
SELECT * FROM v0 CROSS JOIN vt0 ON v0.c0 INNER JOIN rt0 ON COALESCE(((v0.c0)AND(vt0.c0)), ((((((((v0.c2)OR(vt0.c0)))AND(rt0.c1)))OR('')))AND(v0.c1)), CASE rt0.c1  WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END, ((rt0.c0)=(v0.c2)), ((v0.c1)GLOB(rt0.c1)), ((((((((((((v0.c0)AND(rt0.c2)))AND(v0.c1)))AND('')))AND(v0.c1)))AND(rt0.c0)))AND(vt0.c0))) WHERE ((((((vt0.c0, v0.c2, v0.c1)) NOT BETWEEN ((v0.c2, '-948336440', rt0.c2)) AND ((rt0.c2, v0.c2, rt0.c0))))<=((((rt0.c0))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, v0.c2, v0.c1)) NOT BETWEEN ((v0.c2, '-948336440', rt0.c2)) AND ((rt0.c2, v0.c2, rt0.c0))))<=((((rt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON v0.c0 INNER JOIN rt0 ON COALESCE(((v0.c0)AND(vt0.c0)), ((((((((v0.c2)OR(vt0.c0)))AND(rt0.c1)))OR('')))AND(v0.c1)), CASE rt0.c1  WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END, ((rt0.c0)==(v0.c2)), ((v0.c1)GLOB(rt0.c1)), ((((((((((((v0.c0)AND(rt0.c2)))AND(v0.c1)))AND('')))AND(v0.c1)))AND(rt0.c0)))AND(vt0.c0))));
SELECT * FROM v0 CROSS JOIN vt0 ON v0.c0 INNER JOIN rt0 ON COALESCE(((v0.c0)AND(vt0.c0)), ((((((((v0.c2)OR(vt0.c0)))AND(rt0.c1)))OR('')))AND(v0.c1)), CASE rt0.c1  WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END, ((rt0.c0)=(v0.c2)), ((v0.c1)GLOB(rt0.c1)), ((((((((((((v0.c0)AND(rt0.c2)))AND(v0.c1)))AND('')))AND(v0.c1)))AND(rt0.c0)))AND(vt0.c0))) WHERE ((((((vt0.c0, v0.c2, v0.c1)) NOT BETWEEN ((v0.c2, '-948336440', rt0.c2)) AND ((rt0.c2, v0.c2, rt0.c0))))<=((((rt0.c0))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, v0.c2, v0.c1)) NOT BETWEEN ((v0.c2, '-948336440', rt0.c2)) AND ((rt0.c2, v0.c2, rt0.c0))))<=((((rt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON v0.c0 INNER JOIN rt0 ON COALESCE(((v0.c0)AND(vt0.c0)), ((((((((v0.c2)OR(vt0.c0)))AND(rt0.c1)))OR('')))AND(v0.c1)), CASE rt0.c1  WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END, ((rt0.c0)==(v0.c2)), ((v0.c1)GLOB(rt0.c1)), ((((((((((((v0.c0)AND(rt0.c2)))AND(v0.c1)))AND('')))AND(v0.c1)))AND(rt0.c0)))AND(vt0.c0))));
SELECT * FROM v0 CROSS JOIN vt0 ON v0.c0 INNER JOIN rt0 ON COALESCE(((v0.c0)AND(vt0.c0)), ((((((((v0.c2)OR(vt0.c0)))AND(rt0.c1)))OR('')))AND(v0.c1)), CASE rt0.c1  WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END, ((rt0.c0)=(v0.c2)), ((v0.c1)GLOB(rt0.c1)), ((((((((((((v0.c0)AND(rt0.c2)))AND(v0.c1)))AND('')))AND(v0.c1)))AND(rt0.c0)))AND(vt0.c0))) WHERE ((((((vt0.c0, v0.c2, v0.c1)) NOT BETWEEN ((v0.c2, '-948336440', rt0.c2)) AND ((rt0.c2, v0.c2, rt0.c0))))<=((((rt0.c0))>((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (UPPER(DISTINCT CASE WHEN v0.c2 THEN v0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE WHEN v0.c2 THEN v0.c2 END)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (UPPER(DISTINCT CASE WHEN v0.c2 THEN v0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE WHEN v0.c2 THEN v0.c2 END)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (UPPER(DISTINCT CASE WHEN v0.c2 THEN v0.c2 END));
SELECT ALL * FROM v0 WHERE ((((((NULL))>=((v0.c0)))) IS TRUE)) ORDER BY (((+ (v0.c1)))/(CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NULL))>=((v0.c0)))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY (((+ (v0.c1)))/(CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c0 END)) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((NULL))>=((v0.c0)))) IS TRUE)) ORDER BY (((+ (v0.c1)))/(CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NULL))>=((v0.c0)))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY (((+ (v0.c1)))/(CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c0 END)) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((NULL))>=((v0.c0)))) IS TRUE)) ORDER BY (((+ (v0.c1)))/(CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c0 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN CASE WHEN v0.c1 THEN 0.23074901178033103 WHEN vt0.c0 THEN rt0.c0 WHEN x'' THEN v0.c1 ELSE v0.c1 END THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END WHEN ((((vt0.c0)AND(v0.c0)))OR(rt0.c1)) THEN ((v0.c0) IS FALSE) WHEN ((v0.c2) ISNULL) THEN ((rt0.c2)>>(v0.c0)) END) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN v0.c1 THEN 0.23074901178033103 WHEN vt0.c0 THEN rt0.c0 WHEN x'' THEN v0.c1 ELSE v0.c1 END THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END WHEN ((((vt0.c0)AND(v0.c0)))OR(rt0.c1)) THEN ((v0.c0) IS FALSE) WHEN ((v0.c2) ISNULL) THEN ((rt0.c2)>>(v0.c0)) END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY x'' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN CASE WHEN v0.c1 THEN 0.23074901178033103 WHEN vt0.c0 THEN rt0.c0 WHEN x'' THEN v0.c1 ELSE v0.c1 END THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END WHEN ((((vt0.c0)AND(v0.c0)))OR(rt0.c1)) THEN ((v0.c0) IS FALSE) WHEN ((v0.c2) ISNULL) THEN ((rt0.c2)>>(v0.c0)) END) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN v0.c1 THEN 0.23074901178033103 WHEN vt0.c0 THEN rt0.c0 WHEN x'' THEN v0.c1 ELSE v0.c1 END THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END WHEN ((((vt0.c0)AND(v0.c0)))OR(rt0.c1)) THEN ((v0.c0) IS FALSE) WHEN ((v0.c2) ISNULL) THEN ((rt0.c2)>>(v0.c0)) END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY x'' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN CASE WHEN v0.c1 THEN 0.23074901178033103 WHEN vt0.c0 THEN rt0.c0 WHEN x'' THEN v0.c1 ELSE v0.c1 END THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END WHEN ((((vt0.c0)AND(v0.c0)))OR(rt0.c1)) THEN ((v0.c0) IS FALSE) WHEN ((v0.c2) ISNULL) THEN ((rt0.c2)>>(v0.c0)) END) ORDER BY x'' ASC  NULLS FIRST;
SELECT * FROM vt0, rt0, v0 WHERE ((((rt0.c1, rt0.c2, v0.c1)) NOT BETWEEN ((v0.c2, rt0.c0, v0.c2)) AND ((v0.c2, vt0.c0, v0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c2, v0.c1)) NOT BETWEEN ((v0.c2, rt0.c0, v0.c2)) AND ((v0.c2, vt0.c0, v0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE ((((rt0.c1, rt0.c2, v0.c1)) NOT BETWEEN ((v0.c2, rt0.c0, v0.c2)) AND ((v0.c2, vt0.c0, v0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c2, v0.c1)) NOT BETWEEN ((v0.c2, rt0.c0, v0.c2)) AND ((v0.c2, vt0.c0, v0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE ((((rt0.c1, rt0.c2, v0.c1)) NOT BETWEEN ((v0.c2, rt0.c0, v0.c2)) AND ((v0.c2, vt0.c0, v0.c0))) COLLATE NOCASE);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((UNLIKELY(v0.c2))))) ORDER BY ((((v0.c0)AND(v0.c2))) BETWEEN (rt0.c2) AND ((- (v0.c1))))  NULLS FIRST, CAST(((v0.c2)<(rt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((UNLIKELY(v0.c2))))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0, vt0 ORDER BY ((((v0.c0)AND(v0.c2))) BETWEEN (rt0.c2) AND ((- (v0.c1))))  NULLS FIRST, CAST(((v0.c2)<(rt0.c2)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((UNLIKELY(v0.c2))))) ORDER BY ((((v0.c0)AND(v0.c2))) BETWEEN (rt0.c2) AND ((- (v0.c1))))  NULLS FIRST, CAST(((v0.c2)<(rt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((UNLIKELY(v0.c2))))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0, vt0 ORDER BY ((((v0.c0)AND(v0.c2))) BETWEEN (rt0.c2) AND ((- (v0.c1))))  NULLS FIRST, CAST(((v0.c2)<(rt0.c2)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((UNLIKELY(v0.c2))))) ORDER BY ((((v0.c0)AND(v0.c2))) BETWEEN (rt0.c2) AND ((- (v0.c1))))  NULLS FIRST, CAST(((v0.c2)<(rt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(v0.c2 AS BLOB) COLLATE BINARY) ORDER BY ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)) COLLATE RTRIM DESC, ((((v0.c1)!=(v0.c0))) BETWEEN (UPPER(vt0.c0)) AND (((vt0.c0)GLOB(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)) COLLATE RTRIM DESC, ((((v0.c1)!=(v0.c0))) BETWEEN (UPPER(vt0.c0)) AND (((vt0.c0)GLOB(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(v0.c2 AS BLOB) COLLATE BINARY) ORDER BY ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)) COLLATE RTRIM DESC, ((((v0.c1)!=(v0.c0))) BETWEEN (UPPER(vt0.c0)) AND (((vt0.c0)GLOB(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)) COLLATE RTRIM DESC, ((((v0.c1)!=(v0.c0))) BETWEEN (UPPER(vt0.c0)) AND (((vt0.c0)GLOB(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(v0.c2 AS BLOB) COLLATE BINARY) ORDER BY ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)) COLLATE RTRIM DESC, ((((v0.c1)!=(v0.c0))) BETWEEN (UPPER(vt0.c0)) AND (((vt0.c0)GLOB(vt0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((CAST(v0.c2 AS REAL)) NOT NULL)) ORDER BY DATE((((NULL)) BETWEEN ((v0.c2)) AND ((NULL))), ((v0.c0)AND(v0.c1)), rt0.c1 COLLATE RTRIM) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS REAL)) NOT NULL)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY DATE((((NULL)) BETWEEN ((v0.c2)) AND ((NULL))), ((v0.c0)AND(v0.c1)), rt0.c1 COLLATE RTRIM) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((CAST(v0.c2 AS REAL)) NOT NULL)) ORDER BY DATE((((NULL)) BETWEEN ((v0.c2)) AND ((NULL))), ((v0.c0)AND(v0.c1)), rt0.c1 COLLATE RTRIM) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS REAL)) NOT NULL)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY DATE((((NULL)) BETWEEN ((v0.c2)) AND ((NULL))), ((v0.c0)AND(v0.c1)), rt0.c1 COLLATE RTRIM) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((CAST(v0.c2 AS REAL)) NOT NULL)) ORDER BY DATE((((NULL)) BETWEEN ((v0.c2)) AND ((NULL))), ((v0.c0)AND(v0.c1)), rt0.c1 COLLATE RTRIM) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 INNER JOIN vt0 ON CAST(json_remove(vt0.c0, rt0.c0, rt0.c2, rt0.c0) AS INTEGER) WHERE ((((((rt0.c0)=(rt0.c2))))<>(('0.14460523052124963')))) ORDER BY ((STRFTIME(rt0.c2, x'ec40', vt0.c0)) BETWEEN ((((rt0.c2))>((vt0.c0)))) AND ((~ (rt0.c2)))) ASC  NULLS FIRST, (((((x'')&(0.592806023009402))))<>((vt0.c0 COLLATE RTRIM))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)=(rt0.c2))))<>(('0.14460523052124963')))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CAST(json_remove(vt0.c0, rt0.c0, rt0.c2, rt0.c0) AS INTEGER) ORDER BY ((STRFTIME(rt0.c2, x'ec40', vt0.c0)) BETWEEN ((((rt0.c2))>((vt0.c0)))) AND ((~ (rt0.c2)))) ASC  NULLS FIRST, (((((x'')&(0.592806023009402))))!=((vt0.c0 COLLATE RTRIM))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON CAST(json_remove(vt0.c0, rt0.c0, rt0.c2, rt0.c0) AS INTEGER) WHERE ((((((rt0.c0)=(rt0.c2))))<>(('0.14460523052124963')))) ORDER BY ((STRFTIME(rt0.c2, x'ec40', vt0.c0)) BETWEEN ((((rt0.c2))>((vt0.c0)))) AND ((~ (rt0.c2)))) ASC  NULLS FIRST, (((((x'')&(0.592806023009402))))<>((vt0.c0 COLLATE RTRIM))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)=(rt0.c2))))<>(('0.14460523052124963')))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CAST(json_remove(vt0.c0, rt0.c0, rt0.c2, rt0.c0) AS INTEGER) ORDER BY ((STRFTIME(rt0.c2, x'ec40', vt0.c0)) BETWEEN ((((rt0.c2))>((vt0.c0)))) AND ((~ (rt0.c2)))) ASC  NULLS FIRST, (((((x'')&(0.592806023009402))))!=((vt0.c0 COLLATE RTRIM))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON CAST(json_remove(vt0.c0, rt0.c0, rt0.c2, rt0.c0) AS INTEGER) WHERE ((((((rt0.c0)=(rt0.c2))))<>(('0.14460523052124963')))) ORDER BY ((STRFTIME(rt0.c2, x'ec40', vt0.c0)) BETWEEN ((((rt0.c2))>((vt0.c0)))) AND ((~ (rt0.c2)))) ASC  NULLS FIRST, (((((x'')&(0.592806023009402))))<>((vt0.c0 COLLATE RTRIM))) ASC  NULLS FIRST;
SELECT ALL * FROM v0, vt0, rt0 WHERE ((json_extract(v0.c2, rt0.c2) IN ())) ORDER BY (((~ (v0.c1)))<<(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((json_extract(v0.c2, rt0.c2) IN ())) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((~ (v0.c1)))<<(NULL)) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((json_extract(v0.c2, rt0.c2) IN ())) ORDER BY (((~ (v0.c1)))<<(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((json_extract(v0.c2, rt0.c2) IN ())) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((~ (v0.c1)))<<(NULL)) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((json_extract(v0.c2, rt0.c2) IN ())) ORDER BY (((~ (v0.c1)))<<(NULL)) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((CASE v0.c2  WHEN -765910263 THEN rt0.c1 END)IS NOT(v0.c1))) ORDER BY (+ (((v0.c2)AND(v0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c2  WHEN -765910263 THEN rt0.c1 END)IS NOT(v0.c1))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (+ (((v0.c2)AND(v0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((CASE v0.c2  WHEN -765910263 THEN rt0.c1 END)IS NOT(v0.c1))) ORDER BY (+ (((v0.c2)AND(v0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c2  WHEN -765910263 THEN rt0.c1 END)IS NOT(v0.c1))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (+ (((v0.c2)AND(v0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((CASE v0.c2  WHEN -765910263 THEN rt0.c1 END)IS NOT(v0.c1))) ORDER BY (+ (((v0.c2)AND(v0.c2)))) ASC  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (((NULLIF(v0.c1, v0.c2)) NOT BETWEEN (((v0.c0)OR(rt0.c2))) AND (v0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((NULLIF(v0.c1, v0.c2)) NOT BETWEEN (((v0.c0)OR(rt0.c2))) AND (v0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((NULLIF(v0.c1, v0.c2)) NOT BETWEEN (((v0.c0)OR(rt0.c2))) AND (v0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((NULLIF(v0.c1, v0.c2)) NOT BETWEEN (((v0.c0)OR(rt0.c2))) AND (v0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((NULLIF(v0.c1, v0.c2)) NOT BETWEEN (((v0.c0)OR(rt0.c2))) AND (v0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c1)>>(v0.c1)))OR((((NULL))<=((x''))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)>>(v0.c1)))OR((((NULL))<=((x'')))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c1)>>(v0.c1)))OR((((NULL))<=((x''))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)>>(v0.c1)))OR((((NULL))<=((x'')))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c1)>>(v0.c1)))OR((((NULL))<=((x''))))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((QUOTE(rt0.c0))) AND ((NULL))) WHERE ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) IN ())) ORDER BY x'5fed' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((QUOTE(rt0.c0))) AND ((NULL))) ORDER BY x'5fed' DESC);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((QUOTE(rt0.c0))) AND ((NULL))) WHERE ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) IN ())) ORDER BY x'5fed' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((QUOTE(rt0.c0))) AND ((NULL))) ORDER BY x'5fed' DESC);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((QUOTE(rt0.c0))) AND ((NULL))) WHERE ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) IN ())) ORDER BY x'5fed' DESC;
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((((((rt0.c2)AND(rt0.c2)))AND(vt0.c0)))OR(((v0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c2)))AND(vt0.c0)))OR(((v0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((((((rt0.c2)AND(rt0.c2)))AND(vt0.c0)))OR(((v0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c2)))AND(vt0.c0)))OR(((v0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((((((rt0.c2)AND(rt0.c2)))AND(vt0.c0)))OR(((v0.c2) IS TRUE))));
SELECT * FROM vt0, rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END  WHEN vt0.c0 THEN vt0.c0 ELSE CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END END) ORDER BY COALESCE(((rt0.c1) IS FALSE), rt0.c1) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END  WHEN vt0.c0 THEN vt0.c0 ELSE CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END END) IS TRUE)  as count FROM vt0, rt0 ORDER BY COALESCE(((rt0.c1) IS FALSE), rt0.c1) ASC);
SELECT * FROM vt0, rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END  WHEN vt0.c0 THEN vt0.c0 ELSE CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END END) ORDER BY COALESCE(((rt0.c1) IS FALSE), rt0.c1) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END  WHEN vt0.c0 THEN vt0.c0 ELSE CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END END) IS TRUE)  as count FROM vt0, rt0 ORDER BY COALESCE(((rt0.c1) IS FALSE), rt0.c1) ASC);
SELECT * FROM vt0, rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END  WHEN vt0.c0 THEN vt0.c0 ELSE CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END END) ORDER BY COALESCE(((rt0.c1) IS FALSE), rt0.c1) ASC;
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON (((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c2))))>>(v0.c1 COLLATE NOCASE)) WHERE ((((((vt0.c0, v0.c2, vt0.c0))>=((vt0.c0, v0.c2, vt0.c0))))!=('' COLLATE RTRIM))) ORDER BY ((((((vt0.c0)<(v0.c0)))OR(((v0.c1)<<(v0.c2)))))OR(COALESCE(DISTINCT v0.c1, v0.c1))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, v0.c2, vt0.c0))>=((vt0.c0, v0.c2, vt0.c0))))<>('' COLLATE RTRIM))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c2))))>>(v0.c1 COLLATE NOCASE)) ORDER BY ((((((vt0.c0)<(v0.c0)))OR(((v0.c1)<<(v0.c2)))))OR(COALESCE(DISTINCT v0.c1, v0.c1))) DESC);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON (((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c2))))>>(v0.c1 COLLATE NOCASE)) WHERE ((((((vt0.c0, v0.c2, vt0.c0))>=((vt0.c0, v0.c2, vt0.c0))))!=('' COLLATE RTRIM))) ORDER BY ((((((vt0.c0)<(v0.c0)))OR(((v0.c1)<<(v0.c2)))))OR(COALESCE(DISTINCT v0.c1, v0.c1))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, v0.c2, vt0.c0))>=((vt0.c0, v0.c2, vt0.c0))))<>('' COLLATE RTRIM))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c2))))>>(v0.c1 COLLATE NOCASE)) ORDER BY ((((((vt0.c0)<(v0.c0)))OR(((v0.c1)<<(v0.c2)))))OR(COALESCE(DISTINCT v0.c1, v0.c1))) DESC);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON (((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c2))))>>(v0.c1 COLLATE NOCASE)) WHERE ((((((vt0.c0, v0.c2, vt0.c0))>=((vt0.c0, v0.c2, vt0.c0))))!=('' COLLATE RTRIM))) ORDER BY ((((((vt0.c0)<(v0.c0)))OR(((v0.c1)<<(v0.c2)))))OR(COALESCE(DISTINCT v0.c1, v0.c1))) DESC;
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (0Xffffffffce154468) ORDER BY ((('P茿')-(v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((0Xffffffffce154468) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((('P茿')-(v0.c0)) IN ()));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (0Xffffffffce154468) ORDER BY ((('P茿')-(v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((0Xffffffffce154468) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((('P茿')-(v0.c0)) IN ()));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (0Xffffffffce154468) ORDER BY ((('P茿')-(v0.c0)) IN ());
SELECT ALL * FROM v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c2);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(CAST(v0.c2 AS INTEGER) AS BLOB)) ORDER BY ((((v0.c2) ISNULL))OR((rt0.c1 IN (v0.c0, v0.c1, rt0.c2))))  NULLS FIRST, ((((((((((v0.c1)|(v0.c1)))AND(TYPEOF(DISTINCT rt0.c2))))OR((v0.c0 IN (rt0.c0)))))OR(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))))OR((NOT (v0.c2))))  NULLS FIRST, ((((json_quote(vt0.c0))OR(((v0.c1) NOTNULL))))OR((((v0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c2 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((v0.c2) ISNULL))OR((rt0.c1 IN (v0.c0, v0.c1, rt0.c2))))  NULLS FIRST, ((((((((((v0.c1)|(v0.c1)))AND(TYPEOF(DISTINCT rt0.c2))))OR((v0.c0 IN (rt0.c0)))))OR(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))))OR((NOT (v0.c2))))  NULLS FIRST, ((((json_quote(vt0.c0))OR(((v0.c1) NOTNULL))))OR((((v0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(CAST(v0.c2 AS INTEGER) AS BLOB)) ORDER BY ((((v0.c2) ISNULL))OR((rt0.c1 IN (v0.c0, v0.c1, rt0.c2))))  NULLS FIRST, ((((((((((v0.c1)|(v0.c1)))AND(TYPEOF(DISTINCT rt0.c2))))OR((v0.c0 IN (rt0.c0)))))OR(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))))OR((NOT (v0.c2))))  NULLS FIRST, ((((json_quote(vt0.c0))OR(((v0.c1) NOTNULL))))OR((((v0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c2 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((v0.c2) ISNULL))OR((rt0.c1 IN (v0.c0, v0.c1, rt0.c2))))  NULLS FIRST, ((((((((((v0.c1)|(v0.c1)))AND(TYPEOF(DISTINCT rt0.c2))))OR((v0.c0 IN (rt0.c0)))))OR(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))))OR((NOT (v0.c2))))  NULLS FIRST, ((((json_quote(vt0.c0))OR(((v0.c1) NOTNULL))))OR((((v0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(CAST(v0.c2 AS INTEGER) AS BLOB)) ORDER BY ((((v0.c2) ISNULL))OR((rt0.c1 IN (v0.c0, v0.c1, rt0.c2))))  NULLS FIRST, ((((((((((v0.c1)|(v0.c1)))AND(TYPEOF(DISTINCT rt0.c2))))OR((v0.c0 IN (rt0.c0)))))OR(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))))OR((NOT (v0.c2))))  NULLS FIRST, ((((json_quote(vt0.c0))OR(((v0.c1) NOTNULL))))OR((((v0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))));
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON (((x'7b70', v0.c1, NULL, v0.c1, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT), v0.c1, TRIM(DISTINCT v0.c1), x'366b', v0.c2)) AND ((((((v0.c0)OR(NULL)))AND(v0.c1)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), CASE NULL  WHEN v0.c2 THEN v0.c2 ELSE x'' END, ((v0.c2) IS TRUE), v0.c1 COLLATE NOCASE))) WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((x'7b70', v0.c1, NULL, v0.c1, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT), v0.c1, TRIM(DISTINCT v0.c1), x'366b', v0.c2)) AND ((((((v0.c0)OR(NULL)))AND(v0.c1)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), CASE NULL  WHEN v0.c2 THEN v0.c2 ELSE x'' END, ((v0.c2) IS TRUE), v0.c1 COLLATE NOCASE))));
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON (((x'7b70', v0.c1, NULL, v0.c1, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT), v0.c1, TRIM(DISTINCT v0.c1), x'366b', v0.c2)) AND ((((((v0.c0)OR(NULL)))AND(v0.c1)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), CASE NULL  WHEN v0.c2 THEN v0.c2 ELSE x'' END, ((v0.c2) IS TRUE), v0.c1 COLLATE NOCASE))) WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((x'7b70', v0.c1, NULL, v0.c1, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT), v0.c1, TRIM(DISTINCT v0.c1), x'366b', v0.c2)) AND ((((((v0.c0)OR(NULL)))AND(v0.c1)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), CASE NULL  WHEN v0.c2 THEN v0.c2 ELSE x'' END, ((v0.c2) IS TRUE), v0.c1 COLLATE NOCASE))));
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON (((x'7b70', v0.c1, NULL, v0.c1, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT), v0.c1, TRIM(DISTINCT v0.c1), x'366b', v0.c2)) AND ((((((v0.c0)OR(NULL)))AND(v0.c1)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), CASE NULL  WHEN v0.c2 THEN v0.c2 ELSE x'' END, ((v0.c2) IS TRUE), v0.c1 COLLATE NOCASE))) WHERE (v0.c1);
SELECT * FROM v0 WHERE (((((((v0.c1)>=(v0.c2)))OR((v0.c0 IN (v0.c1)))))OR(NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)>=(v0.c2)))OR((v0.c0 IN (v0.c1)))))OR(NULL COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c1)>=(v0.c2)))OR((v0.c0 IN (v0.c1)))))OR(NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)>=(v0.c2)))OR((v0.c0 IN (v0.c1)))))OR(NULL COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c1)>=(v0.c2)))OR((v0.c0 IN (v0.c1)))))OR(NULL COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c1 LEFT OUTER JOIN v0 ON CASE WHEN NULL THEN rt0.c2 COLLATE BINARY ELSE ((rt0.c1) NOT NULL) END WHERE (((((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))&((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))&((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c1 LEFT OUTER JOIN v0 ON CASE WHEN NULL THEN rt0.c2 COLLATE BINARY ELSE ((rt0.c1) NOT NULL) END);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c1 LEFT OUTER JOIN v0 ON CASE WHEN NULL THEN rt0.c2 COLLATE BINARY ELSE ((rt0.c1) NOT NULL) END WHERE (((((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))&((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))&((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c1 LEFT OUTER JOIN v0 ON CASE WHEN NULL THEN rt0.c2 COLLATE BINARY ELSE ((rt0.c1) NOT NULL) END);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c1 LEFT OUTER JOIN v0 ON CASE WHEN NULL THEN rt0.c2 COLLATE BINARY ELSE ((rt0.c1) NOT NULL) END WHERE (((((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))&((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON 0X353a520e WHERE (((((vt0.c0)OR((~ (vt0.c0)))))OR(rt0.c1))) ORDER BY (('714577320')IS(CASE WHEN vt0.c0 THEN rt0.c0 WHEN 0.23074901178033103 THEN NULL WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR((~ (vt0.c0)))))OR(rt0.c1))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON 0x353a520e ORDER BY (('714577320')IS(CASE WHEN vt0.c0 THEN rt0.c0 WHEN 0.23074901178033103 THEN NULL WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON 0X353a520e WHERE (((((vt0.c0)OR((~ (vt0.c0)))))OR(rt0.c1))) ORDER BY (('714577320')IS(CASE WHEN vt0.c0 THEN rt0.c0 WHEN 0.23074901178033103 THEN NULL WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR((~ (vt0.c0)))))OR(rt0.c1))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON 0x353a520e ORDER BY (('714577320')IS(CASE WHEN vt0.c0 THEN rt0.c0 WHEN 0.23074901178033103 THEN NULL WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON 0X353a520e WHERE (((((vt0.c0)OR((~ (vt0.c0)))))OR(rt0.c1))) ORDER BY (('714577320')IS(CASE WHEN vt0.c0 THEN rt0.c0 WHEN 0.23074901178033103 THEN NULL WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(vt0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((((- (v0.c0))) BETWEEN (((v0.c1) IS TRUE)) AND (((rt0.c1)/(NULL))))) ORDER BY (~ (NULL COLLATE NOCASE))  NULLS LAST, ((((((rt0.c1)<=(rt0.c0)))AND(((((vt0.c0)AND(7.28202393E8)))AND(rt0.c0)))))AND(((rt0.c2)/(rt0.c2)))), (((v0.c0, v0.c2, rt0.c1)) BETWEEN ((CASE WHEN rt0.c0 THEN v0.c0 END, (rt0.c0 IN ()), ABS(DISTINCT rt0.c2))) AND ((((((x'')AND(v0.c1)))AND(rt0.c1)), ((0Xffffffffa1f50ca5) NOTNULL), (NOT (vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (v0.c0))) BETWEEN (((v0.c1) IS TRUE)) AND (((rt0.c1)/(NULL))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (~ (NULL COLLATE NOCASE))  NULLS LAST, ((((((rt0.c1)<=(rt0.c0)))AND(((((vt0.c0)AND(7.28202393E8)))AND(rt0.c0)))))AND(((rt0.c2)/(rt0.c2)))), (((v0.c0, v0.c2, rt0.c1)) BETWEEN ((CASE WHEN rt0.c0 THEN v0.c0 END, (rt0.c0 IN ()), ABS(DISTINCT rt0.c2))) AND ((((((x'')AND(v0.c1)))AND(rt0.c1)), ((0Xffffffffa1f50ca5) NOTNULL), (NOT (vt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((((- (v0.c0))) BETWEEN (((v0.c1) IS TRUE)) AND (((rt0.c1)/(NULL))))) ORDER BY (~ (NULL COLLATE NOCASE))  NULLS LAST, ((((((rt0.c1)<=(rt0.c0)))AND(((((vt0.c0)AND(7.28202393E8)))AND(rt0.c0)))))AND(((rt0.c2)/(rt0.c2)))), (((v0.c0, v0.c2, rt0.c1)) BETWEEN ((CASE WHEN rt0.c0 THEN v0.c0 END, (rt0.c0 IN ()), ABS(DISTINCT rt0.c2))) AND ((((((x'')AND(v0.c1)))AND(rt0.c1)), ((0Xffffffffa1f50ca5) NOTNULL), (NOT (vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (v0.c0))) BETWEEN (((v0.c1) IS TRUE)) AND (((rt0.c1)/(NULL))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (~ (NULL COLLATE NOCASE))  NULLS LAST, ((((((rt0.c1)<=(rt0.c0)))AND(((((vt0.c0)AND(7.28202393E8)))AND(rt0.c0)))))AND(((rt0.c2)/(rt0.c2)))), (((v0.c0, v0.c2, rt0.c1)) BETWEEN ((CASE WHEN rt0.c0 THEN v0.c0 END, (rt0.c0 IN ()), ABS(DISTINCT rt0.c2))) AND ((((((x'')AND(v0.c1)))AND(rt0.c1)), ((0Xffffffffa1f50ca5) NOTNULL), (NOT (vt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((((- (v0.c0))) BETWEEN (((v0.c1) IS TRUE)) AND (((rt0.c1)/(NULL))))) ORDER BY (~ (NULL COLLATE NOCASE))  NULLS LAST, ((((((rt0.c1)<=(rt0.c0)))AND(((((vt0.c0)AND(7.28202393E8)))AND(rt0.c0)))))AND(((rt0.c2)/(rt0.c2)))), (((v0.c0, v0.c2, rt0.c1)) BETWEEN ((CASE WHEN rt0.c0 THEN v0.c0 END, (rt0.c0 IN ()), ABS(DISTINCT rt0.c2))) AND ((((((x'')AND(v0.c1)))AND(rt0.c1)), ((0Xffffffffa1f50ca5) NOTNULL), (NOT (vt0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)) IN ((((vt0.c0))<>((rt0.c1))), (((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)) IN ((((vt0.c0))!=((rt0.c1))), (((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)) IN ((((vt0.c0))<>((rt0.c1))), (((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)) IN ((((vt0.c0))!=((rt0.c1))), (((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)) IN ((((vt0.c0))<>((rt0.c1))), (((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c1))))));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((((((((v0.c2)OR(v0.c2)))AND(vt0.c0)))OR(v0.c1)))AND(v0.c0)) AS REAL)) ORDER BY CAST((- (v0.c1)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((v0.c2)OR(v0.c2)))AND(vt0.c0)))OR(v0.c1)))AND(v0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CAST((- (v0.c1)) AS TEXT) ASC);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((((((((v0.c2)OR(v0.c2)))AND(vt0.c0)))OR(v0.c1)))AND(v0.c0)) AS REAL)) ORDER BY CAST((- (v0.c1)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((v0.c2)OR(v0.c2)))AND(vt0.c0)))OR(v0.c1)))AND(v0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CAST((- (v0.c1)) AS TEXT) ASC);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((((((((v0.c2)OR(v0.c2)))AND(vt0.c0)))OR(v0.c1)))AND(v0.c0)) AS REAL)) ORDER BY CAST((- (v0.c1)) AS TEXT) ASC;
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c0 IN ())  WHEN rt0.c2 THEN (((rt0.c2, rt0.c0, rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((x'fdf4', rt0.c1, rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c2))) ELSE CAST(rt0.c1 AS TEXT) END) ORDER BY ((((rt0.c1)OR(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))))OR(rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c0 IN ())  WHEN rt0.c2 THEN (((rt0.c2, rt0.c0, rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((x'fdf4', rt0.c1, rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c2))) ELSE CAST(rt0.c1 AS TEXT) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)OR(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))))OR(rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c0 IN ())  WHEN rt0.c2 THEN (((rt0.c2, rt0.c0, rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((x'fdf4', rt0.c1, rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c2))) ELSE CAST(rt0.c1 AS TEXT) END) ORDER BY ((((rt0.c1)OR(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))))OR(rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c0 IN ())  WHEN rt0.c2 THEN (((rt0.c2, rt0.c0, rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((x'fdf4', rt0.c1, rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c2))) ELSE CAST(rt0.c1 AS TEXT) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)OR(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))))OR(rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c0 IN ())  WHEN rt0.c2 THEN (((rt0.c2, rt0.c0, rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((x'fdf4', rt0.c1, rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c2))) ELSE CAST(rt0.c1 AS TEXT) END) ORDER BY ((((rt0.c1)OR(((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))))OR(rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((+ (((v0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((+ (((v0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((+ (((v0.c1) NOTNULL))));
SELECT * FROM v0, vt0 WHERE ((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)) IN ()));
SELECT * FROM vt0 NOT INDEXED WHERE ((((vt0.c0)>>(vt0.c0)) IN (((-1547451387) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>>(vt0.c0)) IN (((-1547451387) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE ((((vt0.c0)>>(vt0.c0)) IN (((-1547451387) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>>(vt0.c0)) IN (((-1547451387) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE ((((vt0.c0)>>(vt0.c0)) IN (((-1547451387) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM v0 WHERE (0X6fb6456a);
SELECT SUM(count) FROM (SELECT ((0x6fb6456a) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (0X6fb6456a);
SELECT SUM(count) FROM (SELECT ((0x6fb6456a) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (0X6fb6456a);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0, v0 WHERE (CAST(((v0.c2) NOT BETWEEN (0.658840225430981) AND (v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2) NOT BETWEEN (0.658840225430981) AND (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0, v0 WHERE (CAST(((v0.c2) NOT BETWEEN (0.658840225430981) AND (v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2) NOT BETWEEN (0.658840225430981) AND (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0, v0 WHERE (CAST(((v0.c2) NOT BETWEEN (0.658840225430981) AND (v0.c0)) AS NUMERIC));
SELECT * FROM vt0 WHERE (0.0);
SELECT SUM(count) FROM (SELECT ALL ((0.0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.0);
SELECT SUM(count) FROM (SELECT ALL ((0.0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((vt0.c0)OR(CASE WHEN vt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))) ORDER BY (((~ (v0.c1))) IS FALSE) ASC  NULLS LAST, ((0.8453144313037346)|(NULL COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)OR(CASE WHEN vt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((~ (v0.c1))) IS FALSE) ASC  NULLS LAST, ((0.8453144313037346)|(NULL COLLATE BINARY)) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((vt0.c0)OR(CASE WHEN vt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))) ORDER BY (((~ (v0.c1))) IS FALSE) ASC  NULLS LAST, ((0.8453144313037346)|(NULL COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)OR(CASE WHEN vt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((~ (v0.c1))) IS FALSE) ASC  NULLS LAST, ((0.8453144313037346)|(NULL COLLATE BINARY)) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((vt0.c0)OR(CASE WHEN vt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))) ORDER BY (((~ (v0.c1))) IS FALSE) ASC  NULLS LAST, ((0.8453144313037346)|(NULL COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((- (((((vt0.c0)OR(0.9756166942990587)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c0)OR(0.9756166942990587)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (((((vt0.c0)OR(0.9756166942990587)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c0)OR(0.9756166942990587)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (((((vt0.c0)OR(0.9756166942990587)))AND(vt0.c0)))));
SELECT * FROM vt0 WHERE ((- (vt0.c0))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE ((- (vt0.c0))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE ((- (vt0.c0))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT * FROM rt0 WHERE (((((rt0.c0)AND((NOT (rt0.c0)))))AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND((NOT (rt0.c0)))))AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0)AND((NOT (rt0.c0)))))AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND((NOT (rt0.c0)))))AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0)AND((NOT (rt0.c0)))))AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)));
SELECT ALL * FROM rt0, vt0 WHERE ('0.4493932376065847' COLLATE BINARY) ORDER BY (((CAST(NULL AS NUMERIC), (rt0.c0 IN (0.762952205110198, rt0.c2)), CAST(rt0.c1 AS REAL)))!=((rt0.c0 COLLATE BINARY, ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)), (NOT (rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('0.4493932376065847' COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((CAST(NULL AS NUMERIC), (rt0.c0 IN (0.762952205110198, rt0.c2)), CAST(rt0.c1 AS REAL)))!=((rt0.c0 COLLATE BINARY, ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)), (NOT (rt0.c2))))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE ('0.4493932376065847' COLLATE BINARY) ORDER BY (((CAST(NULL AS NUMERIC), (rt0.c0 IN (0.762952205110198, rt0.c2)), CAST(rt0.c1 AS REAL)))!=((rt0.c0 COLLATE BINARY, ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)), (NOT (rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('0.4493932376065847' COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((CAST(NULL AS NUMERIC), (rt0.c0 IN (0.762952205110198, rt0.c2)), CAST(rt0.c1 AS REAL)))!=((rt0.c0 COLLATE BINARY, ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)), (NOT (rt0.c2))))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE ('0.4493932376065847' COLLATE BINARY) ORDER BY (((CAST(NULL AS NUMERIC), (rt0.c0 IN (0.762952205110198, rt0.c2)), CAST(rt0.c1 AS REAL)))!=((rt0.c0 COLLATE BINARY, ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)), (NOT (rt0.c2))))) DESC;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((NOT (rt0.c2)))%('0.762952205110198')));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2)))%('0.762952205110198'))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((NOT (rt0.c2)))%('0.762952205110198')));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2)))%('0.762952205110198'))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((NOT (rt0.c2)))%('0.762952205110198')));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((LIKE(rt0.c2, rt0.c2))>(((v0.c2) NOT BETWEEN (v0.c1) AND (rt0.c2)))) CROSS JOIN v0 ON CASE WHEN v0.c2 THEN v0.c2 END COLLATE RTRIM WHERE (HEX('-1872720033'));
SELECT SUM(count) FROM (SELECT ALL ((HEX('-1872720033')) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((LIKE(rt0.c2, rt0.c2))>(((v0.c2) NOT BETWEEN (v0.c1) AND (rt0.c2)))) CROSS JOIN v0 ON CASE WHEN v0.c2 THEN v0.c2 END COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((LIKE(rt0.c2, rt0.c2))>(((v0.c2) NOT BETWEEN (v0.c1) AND (rt0.c2)))) CROSS JOIN v0 ON CASE WHEN v0.c2 THEN v0.c2 END COLLATE RTRIM WHERE (HEX('-1872720033'));
SELECT SUM(count) FROM (SELECT ALL ((HEX('-1872720033')) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((LIKE(rt0.c2, rt0.c2))>(((v0.c2) NOT BETWEEN (v0.c1) AND (rt0.c2)))) CROSS JOIN v0 ON CASE WHEN v0.c2 THEN v0.c2 END COLLATE RTRIM);
SELECT COUNT(*) FROM v0, vt0 INNER JOIN rt0 ON (- (((rt0.c2) NOT NULL))) WHERE (((((((((((v0.c2)OR(v0.c1)))AND(vt0.c0)))OR(v0.c2)))AND(0.0604628295274936))) NOT NULL)) ORDER BY (+ (677636796))  NULLS LAST, NULL DESC, v0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c2)OR(v0.c1)))AND(vt0.c0)))OR(v0.c2)))AND(0.0604628295274936))) NOT NULL)) IS TRUE)  as count FROM v0, vt0 INNER JOIN rt0 ON (- (((rt0.c2) NOT NULL))) ORDER BY (+ (677636796))  NULLS LAST, NULL DESC, v0.c2 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 INNER JOIN rt0 ON (- (((rt0.c2) NOT NULL))) WHERE (((((((((((v0.c2)OR(v0.c1)))AND(vt0.c0)))OR(v0.c2)))AND(0.0604628295274936))) NOT NULL)) ORDER BY (+ (677636796))  NULLS LAST, NULL DESC, v0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c2)OR(v0.c1)))AND(vt0.c0)))OR(v0.c2)))AND(0.0604628295274936))) NOT NULL)) IS TRUE)  as count FROM v0, vt0 INNER JOIN rt0 ON (- (((rt0.c2) NOT NULL))) ORDER BY (+ (677636796))  NULLS LAST, NULL DESC, v0.c2 ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((~ ((NOT (vt0.c0))))) ORDER BY ((((((((CAST(vt0.c0 AS REAL))AND(vt0.c0)))OR(LIKELY(vt0.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CAST(vt0.c0 AS REAL))AND(vt0.c0)))OR(LIKELY(vt0.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((~ ((NOT (vt0.c0))))) ORDER BY ((((((((CAST(vt0.c0 AS REAL))AND(vt0.c0)))OR(LIKELY(vt0.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CAST(vt0.c0 AS REAL))AND(vt0.c0)))OR(LIKELY(vt0.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((~ ((NOT (vt0.c0))))) ORDER BY ((((((((CAST(vt0.c0 AS REAL))AND(vt0.c0)))OR(LIKELY(vt0.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (IFNULL(((rt0.c0) BETWEEN (v0.c1) AND (v0.c2)), ((v0.c1)>=(v0.c2)))) ORDER BY rt0.c2, rt0.c1 DESC, (((0.4677160954184325)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((v0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((rt0.c0) BETWEEN (v0.c1) AND (v0.c2)), ((v0.c1)>=(v0.c2)))) IS TRUE)  as count FROM rt0, v0, vt0 NOT INDEXED ORDER BY rt0.c2, rt0.c1 DESC, (((0.4677160954184325)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((v0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (IFNULL(((rt0.c0) BETWEEN (v0.c1) AND (v0.c2)), ((v0.c1)>=(v0.c2)))) ORDER BY rt0.c2, rt0.c1 DESC, (((0.4677160954184325)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((v0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((rt0.c0) BETWEEN (v0.c1) AND (v0.c2)), ((v0.c1)>=(v0.c2)))) IS TRUE)  as count FROM rt0, v0, vt0 NOT INDEXED ORDER BY rt0.c2, rt0.c1 DESC, (((0.4677160954184325)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((v0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (IFNULL(((rt0.c0) BETWEEN (v0.c1) AND (v0.c2)), ((v0.c1)>=(v0.c2)))) ORDER BY rt0.c2, rt0.c1 DESC, (((0.4677160954184325)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((v0.c0))) DESC  NULLS FIRST;
SELECT * FROM vt0, v0 FULL OUTER JOIN rt0 ON json_valid(((v0.c0) NOT NULL)) WHERE ((ABS(v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((ABS(v0.c0) IN ())) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt0 ON json_valid(((v0.c0) NOT NULL)));
SELECT * FROM vt0, v0 FULL OUTER JOIN rt0 ON json_valid(((v0.c0) NOT NULL)) WHERE ((ABS(v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((ABS(v0.c0) IN ())) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt0 ON json_valid(((v0.c0) NOT NULL)));
SELECT * FROM vt0, v0 FULL OUTER JOIN rt0 ON json_valid(((v0.c0) NOT NULL)) WHERE ((ABS(v0.c0) IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))==((((rt0.c0) NOT NULL))))) ORDER BY CAST((((rt0.c2, rt0.c0, vt0.c0))<((rt0.c1, rt0.c2, rt0.c2))) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))=((((rt0.c0) NOT NULL))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((((rt0.c2, rt0.c0, vt0.c0))<((rt0.c1, rt0.c2, rt0.c2))) AS REAL) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))==((((rt0.c0) NOT NULL))))) ORDER BY CAST((((rt0.c2, rt0.c0, vt0.c0))<((rt0.c1, rt0.c2, rt0.c2))) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))=((((rt0.c0) NOT NULL))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((((rt0.c2, rt0.c0, vt0.c0))<((rt0.c1, rt0.c2, rt0.c2))) AS REAL) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))==((((rt0.c0) NOT NULL))))) ORDER BY CAST((((rt0.c2, rt0.c0, vt0.c0))<((rt0.c1, rt0.c2, rt0.c2))) AS REAL) ASC;
SELECT * FROM vt0, rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (rt0.c0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END IN ())) ORDER BY ((((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c0))), ((0x581cdde7) IS TRUE), (((vt0.c0))>((v0.c1))), LIKELY(DISTINCT vt0.c0), (+ (v0.c1))))>(((((v0.c0))<((v0.c0))), ((((((((((((v0.c2)OR(v0.c0)))AND(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))OR(0.7967333899319544)), LOWER(DISTINCT -1518786524), CASE v0.c2  WHEN vt0.c0 THEN 0.9756166942990587 ELSE v0.c0 END, v0.c2))) DESC  NULLS FIRST, (((v0.c2))>((CASE WHEN vt0.c0 THEN vt0.c0 END))) DESC  NULLS FIRST, ((((((v0.c2)AND(v0.c0)))OR(v0.c1))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c0))), ((0X581cdde7) IS TRUE), (((vt0.c0))>((v0.c1))), LIKELY(DISTINCT vt0.c0), (+ (v0.c1))))>(((((v0.c0))<((v0.c0))), ((((((((((((v0.c2)OR(v0.c0)))AND(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))OR(0.7967333899319544)), LOWER(DISTINCT -1518786524), CASE v0.c2  WHEN vt0.c0 THEN 0.9756166942990587 ELSE v0.c0 END, v0.c2))) DESC  NULLS FIRST, (((v0.c2))>((CASE WHEN vt0.c0 THEN vt0.c0 END))) DESC  NULLS FIRST, ((((((v0.c2)AND(v0.c0)))OR(v0.c1))) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END IN ())) ORDER BY ((((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c0))), ((0x581cdde7) IS TRUE), (((vt0.c0))>((v0.c1))), LIKELY(DISTINCT vt0.c0), (+ (v0.c1))))>(((((v0.c0))<((v0.c0))), ((((((((((((v0.c2)OR(v0.c0)))AND(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))OR(0.7967333899319544)), LOWER(DISTINCT -1518786524), CASE v0.c2  WHEN vt0.c0 THEN 0.9756166942990587 ELSE v0.c0 END, v0.c2))) DESC  NULLS FIRST, (((v0.c2))>((CASE WHEN vt0.c0 THEN vt0.c0 END))) DESC  NULLS FIRST, ((((((v0.c2)AND(v0.c0)))OR(v0.c1))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c0))), ((0X581cdde7) IS TRUE), (((vt0.c0))>((v0.c1))), LIKELY(DISTINCT vt0.c0), (+ (v0.c1))))>(((((v0.c0))<((v0.c0))), ((((((((((((v0.c2)OR(v0.c0)))AND(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))OR(0.7967333899319544)), LOWER(DISTINCT -1518786524), CASE v0.c2  WHEN vt0.c0 THEN 0.9756166942990587 ELSE v0.c0 END, v0.c2))) DESC  NULLS FIRST, (((v0.c2))>((CASE WHEN vt0.c0 THEN vt0.c0 END))) DESC  NULLS FIRST, ((((((v0.c2)AND(v0.c0)))OR(v0.c1))) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END IN ())) ORDER BY ((((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c0))), ((0x581cdde7) IS TRUE), (((vt0.c0))>((v0.c1))), LIKELY(DISTINCT vt0.c0), (+ (v0.c1))))>(((((v0.c0))<((v0.c0))), ((((((((((((v0.c2)OR(v0.c0)))AND(v0.c2)))OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))OR(0.7967333899319544)), LOWER(DISTINCT -1518786524), CASE v0.c2  WHEN vt0.c0 THEN 0.9756166942990587 ELSE v0.c0 END, v0.c2))) DESC  NULLS FIRST, (((v0.c2))>((CASE WHEN vt0.c0 THEN vt0.c0 END))) DESC  NULLS FIRST, ((((((v0.c2)AND(v0.c0)))OR(v0.c1))) IS FALSE)  NULLS LAST;
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)|(UNICODE(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)|(UNICODE(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)|(UNICODE(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)|(UNICODE(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)|(UNICODE(rt0.c1))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2)OR(((((v0.c2)AND(NULL)))AND(v0.c0)))))AND((v0.c1 IN (v0.c2, v0.c1))))) ORDER BY ((((((((((v0.c1)OR(v0.c2)))AND(v0.c1)))OR(v0.c0)))OR(v0.c1))) NOT BETWEEN (x'') AND (IFNULL(DISTINCT v0.c0, v0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)OR(((((v0.c2)AND(NULL)))AND(v0.c0)))))AND((v0.c1 IN (v0.c2, v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c1)OR(v0.c2)))AND(v0.c1)))OR(v0.c0)))OR(v0.c1))) NOT BETWEEN (x'') AND (IFNULL(DISTINCT v0.c0, v0.c2))) DESC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2)OR(((((v0.c2)AND(NULL)))AND(v0.c0)))))AND((v0.c1 IN (v0.c2, v0.c1))))) ORDER BY ((((((((((v0.c1)OR(v0.c2)))AND(v0.c1)))OR(v0.c0)))OR(v0.c1))) NOT BETWEEN (x'') AND (IFNULL(DISTINCT v0.c0, v0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)OR(((((v0.c2)AND(NULL)))AND(v0.c0)))))AND((v0.c1 IN (v0.c2, v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c1)OR(v0.c2)))AND(v0.c1)))OR(v0.c0)))OR(v0.c1))) NOT BETWEEN (x'') AND (IFNULL(DISTINCT v0.c0, v0.c2))) DESC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2)OR(((((v0.c2)AND(NULL)))AND(v0.c0)))))AND((v0.c1 IN (v0.c2, v0.c1))))) ORDER BY ((((((((((v0.c1)OR(v0.c2)))AND(v0.c1)))OR(v0.c0)))OR(v0.c1))) NOT BETWEEN (x'') AND (IFNULL(DISTINCT v0.c0, v0.c2))) DESC;
SELECT ALL * FROM v0, vt0 WHERE (COALESCE(DISTINCT (NOT (0.17653537378986872)), ((v0.c2) ISNULL), (v0.c2 IN (v0.c1)), (((x'')) BETWEEN ((v0.c0)) AND (('-1872720033')))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (NOT (0.17653537378986872)), ((v0.c2) ISNULL), (v0.c2 IN (v0.c1)), (((x'')) BETWEEN ((v0.c0)) AND (('-1872720033'))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (COALESCE(DISTINCT (NOT (0.17653537378986872)), ((v0.c2) ISNULL), (v0.c2 IN (v0.c1)), (((x'')) BETWEEN ((v0.c0)) AND (('-1872720033')))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (NOT (0.17653537378986872)), ((v0.c2) ISNULL), (v0.c2 IN (v0.c1)), (((x'')) BETWEEN ((v0.c0)) AND (('-1872720033'))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (COALESCE(DISTINCT (NOT (0.17653537378986872)), ((v0.c2) ISNULL), (v0.c2 IN (v0.c1)), (((x'')) BETWEEN ((v0.c0)) AND (('-1872720033')))));
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c1)))>=(((((v0.c2)OR(rt0.c1)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c1)))>=(((((v0.c2)OR(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c1)))>=(((((v0.c2)OR(rt0.c1)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c1)))>=(((((v0.c2)OR(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c1)))>=(((((v0.c2)OR(rt0.c1)))AND(rt0.c1)))));
SELECT * FROM rt0 WHERE (((UNLIKELY(rt0.c1))OR((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(rt0.c1))OR((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((UNLIKELY(rt0.c1))OR((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(rt0.c1))OR((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((UNLIKELY(rt0.c1))OR((NOT (rt0.c0)))));
SELECT ALL * FROM rt0, v0 WHERE ((((((~ (v0.c1)))OR(CAST(rt0.c2 AS NUMERIC))))AND('162117743')));
SELECT SUM(count) FROM (SELECT (((((((~ (v0.c1)))OR(CAST(rt0.c2 AS NUMERIC))))AND('162117743'))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((((~ (v0.c1)))OR(CAST(rt0.c2 AS NUMERIC))))AND('162117743')));
SELECT SUM(count) FROM (SELECT (((((((~ (v0.c1)))OR(CAST(rt0.c2 AS NUMERIC))))AND('162117743'))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((((~ (v0.c1)))OR(CAST(rt0.c2 AS NUMERIC))))AND('162117743')));
SELECT ALL * FROM vt0, rt0 WHERE (UNLIKELY(DISTINCT rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (UNLIKELY(DISTINCT rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (UNLIKELY(DISTINCT rt0.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((SQLITE_SOURCE_ID()) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((SQLITE_SOURCE_ID()) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((SQLITE_SOURCE_ID()) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((SQLITE_SOURCE_ID()) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((SQLITE_SOURCE_ID()) IS TRUE));
SELECT ALL * FROM rt0, vt0, v0 WHERE (rt0.c0 COLLATE RTRIM) ORDER BY ((CASE v0.c2  WHEN v0.c0 THEN '565752867' WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 END)-(((v0.c2)LIKE(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((CASE v0.c2  WHEN v0.c0 THEN '565752867' WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 END)-(((v0.c2)LIKE(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (rt0.c0 COLLATE RTRIM) ORDER BY ((CASE v0.c2  WHEN v0.c0 THEN '565752867' WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 END)-(((v0.c2)LIKE(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((CASE v0.c2  WHEN v0.c0 THEN '565752867' WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 END)-(((v0.c2)LIKE(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (rt0.c0 COLLATE RTRIM) ORDER BY ((CASE v0.c2  WHEN v0.c0 THEN '565752867' WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 END)-(((v0.c2)LIKE(vt0.c0))))  NULLS LAST;
SELECT * FROM v0, vt0 WHERE ((((v0.c1, 0.5342157347138352, x'')) NOT BETWEEN (((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c2))), ((((v0.c1)OR(vt0.c0)))AND(v0.c0)), v0.c1 COLLATE BINARY)) AND ((((vt0.c0)IS(v0.c2)), ((((v0.c0)AND(v0.c1)))OR(v0.c1)), (v0.c1 IN (v0.c2)))))) ORDER BY CASE WHEN ((v0.c1)+(v0.c1)) THEN v0.c1 COLLATE BINARY ELSE ((NULL)*(v0.c1)) END;
SELECT SUM(count) FROM (SELECT (((((v0.c1, 0.5342157347138352, x'')) NOT BETWEEN (((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c2))), ((((v0.c1)OR(vt0.c0)))AND(v0.c0)), v0.c1 COLLATE BINARY)) AND ((((vt0.c0)IS(v0.c2)), ((((v0.c0)AND(v0.c1)))OR(v0.c1)), (v0.c1 IN (v0.c2)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((v0.c1)+(v0.c1)) THEN v0.c1 COLLATE BINARY ELSE ((NULL)*(v0.c1)) END);
SELECT * FROM v0, vt0 WHERE ((((v0.c1, 0.5342157347138352, x'')) NOT BETWEEN (((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c2))), ((((v0.c1)OR(vt0.c0)))AND(v0.c0)), v0.c1 COLLATE BINARY)) AND ((((vt0.c0)IS(v0.c2)), ((((v0.c0)AND(v0.c1)))OR(v0.c1)), (v0.c1 IN (v0.c2)))))) ORDER BY CASE WHEN ((v0.c1)+(v0.c1)) THEN v0.c1 COLLATE BINARY ELSE ((NULL)*(v0.c1)) END;
SELECT SUM(count) FROM (SELECT (((((v0.c1, 0.5342157347138352, x'')) NOT BETWEEN (((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c2))), ((((v0.c1)OR(vt0.c0)))AND(v0.c0)), v0.c1 COLLATE BINARY)) AND ((((vt0.c0)IS(v0.c2)), ((((v0.c0)AND(v0.c1)))OR(v0.c1)), (v0.c1 IN (v0.c2)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((v0.c1)+(v0.c1)) THEN v0.c1 COLLATE BINARY ELSE ((NULL)*(v0.c1)) END);
SELECT * FROM v0, vt0 WHERE ((((v0.c1, 0.5342157347138352, x'')) NOT BETWEEN (((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c2))), ((((v0.c1)OR(vt0.c0)))AND(v0.c0)), v0.c1 COLLATE BINARY)) AND ((((vt0.c0)IS(v0.c2)), ((((v0.c0)AND(v0.c1)))OR(v0.c1)), (v0.c1 IN (v0.c2)))))) ORDER BY CASE WHEN ((v0.c1)+(v0.c1)) THEN v0.c1 COLLATE BINARY ELSE ((NULL)*(v0.c1)) END;
SELECT ALL * FROM v0, vt0 WHERE (((((((((((v0.c0)OR(0.06704035076210124)))OR(-1.365969047E9)))OR(v0.c2)))OR(vt0.c0)))GLOB((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((LTRIM(vt0.c0, vt0.c0)) BETWEEN ((v0.c2 IN ())) AND ((- (v0.c2)))) DESC  NULLS FIRST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(0.06704035076210124)))OR(-1.365969047E9)))OR(v0.c2)))OR(vt0.c0)))GLOB((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((LTRIM(vt0.c0, vt0.c0)) BETWEEN ((v0.c2 IN ())) AND ((- (v0.c2)))) DESC  NULLS FIRST, v0.c0  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((v0.c0)OR(0.06704035076210124)))OR(-1.365969047E9)))OR(v0.c2)))OR(vt0.c0)))GLOB((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((LTRIM(vt0.c0, vt0.c0)) BETWEEN ((v0.c2 IN ())) AND ((- (v0.c2)))) DESC  NULLS FIRST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(0.06704035076210124)))OR(-1.365969047E9)))OR(v0.c2)))OR(vt0.c0)))GLOB((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((LTRIM(vt0.c0, vt0.c0)) BETWEEN ((v0.c2 IN ())) AND ((- (v0.c2)))) DESC  NULLS FIRST, v0.c0  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((v0.c0)OR(0.06704035076210124)))OR(-1.365969047E9)))OR(v0.c2)))OR(vt0.c0)))GLOB((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((LTRIM(vt0.c0, vt0.c0)) BETWEEN ((v0.c2 IN ())) AND ((- (v0.c2)))) DESC  NULLS FIRST, v0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((rt0.c1 IN (rt0.c1, rt0.c0, rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c1 IN (rt0.c1, rt0.c0, rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((rt0.c1 IN (rt0.c1, rt0.c0, rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c1 IN (rt0.c1, rt0.c0, rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((rt0.c1 IN (rt0.c1, rt0.c0, rt0.c2)))));
SELECT ALL * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (rt0.c0) AND (((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (rt0.c0) AND (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (rt0.c0) AND (((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (rt0.c0) AND (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (rt0.c0) AND (((rt0.c2) ISNULL))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((v0.c0))!=((rt0.c0)))) BETWEEN ((rt0.c1 IN ())) AND ((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((0.7967333899319544)))))) ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c1)))) NOT BETWEEN (((v0.c0) ISNULL)) AND (CASE WHEN v0.c1 THEN rt0.c2 ELSE v0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))!=((rt0.c0)))) BETWEEN ((rt0.c1 IN ())) AND ((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((0.7967333899319544)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c1)))) NOT BETWEEN (((v0.c0) ISNULL)) AND (CASE WHEN v0.c1 THEN rt0.c2 ELSE v0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((v0.c0))!=((rt0.c0)))) BETWEEN ((rt0.c1 IN ())) AND ((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((0.7967333899319544)))))) ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c1)))) NOT BETWEEN (((v0.c0) ISNULL)) AND (CASE WHEN v0.c1 THEN rt0.c2 ELSE v0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))!=((rt0.c0)))) BETWEEN ((rt0.c1 IN ())) AND ((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((0.7967333899319544)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c1)))) NOT BETWEEN (((v0.c0) ISNULL)) AND (CASE WHEN v0.c1 THEN rt0.c2 ELSE v0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((v0.c0))!=((rt0.c0)))) BETWEEN ((rt0.c1 IN ())) AND ((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((0.7967333899319544)))))) ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c1)))) NOT BETWEEN (((v0.c0) ISNULL)) AND (CASE WHEN v0.c1 THEN rt0.c2 ELSE v0.c1 END)) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 END))<=((((vt0.c0)LIKE(vt0.c0)))))) ORDER BY (vt0.c0 IN ()), CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)  NULLS LAST, ((SQLITE_VERSION()) BETWEEN (((vt0.c0)%(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c0 THEN vt0.c0 END))<=((((vt0.c0)LIKE(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()), CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)  NULLS LAST, ((SQLITE_VERSION()) BETWEEN (((vt0.c0)%(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 END))<=((((vt0.c0)LIKE(vt0.c0)))))) ORDER BY (vt0.c0 IN ()), CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)  NULLS LAST, ((SQLITE_VERSION()) BETWEEN (((vt0.c0)%(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c0 THEN vt0.c0 END))<=((((vt0.c0)LIKE(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()), CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)  NULLS LAST, ((SQLITE_VERSION()) BETWEEN (((vt0.c0)%(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 END))<=((((vt0.c0)LIKE(vt0.c0)))))) ORDER BY (vt0.c0 IN ()), CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)  NULLS LAST, ((SQLITE_VERSION()) BETWEEN (((vt0.c0)%(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))  NULLS LAST;
SELECT * FROM v0 NOT INDEXED WHERE (UPPER(v0.c1));
SELECT SUM(count) FROM (SELECT ((UPPER(v0.c1)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 NOT INDEXED WHERE (UPPER(v0.c1));
SELECT SUM(count) FROM (SELECT ((UPPER(v0.c1)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 NOT INDEXED WHERE (UPPER(v0.c1));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (v0.c1)))>>(CAST(rt0.c1 AS BLOB)))) ORDER BY ((((((NULL)AND(vt0.c0)))AND(rt0.c2)))<((+ ('275259729')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c0) AND (v0.c1)))>>(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((((NULL)AND(vt0.c0)))AND(rt0.c2)))<((+ ('275259729')))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (v0.c1)))>>(CAST(rt0.c1 AS BLOB)))) ORDER BY ((((((NULL)AND(vt0.c0)))AND(rt0.c2)))<((+ ('275259729')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c0) AND (v0.c1)))>>(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((((NULL)AND(vt0.c0)))AND(rt0.c2)))<((+ ('275259729')))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (v0.c1)))>>(CAST(rt0.c1 AS BLOB)))) ORDER BY ((((((NULL)AND(vt0.c0)))AND(rt0.c2)))<((+ ('275259729')))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (NULL) ORDER BY ((rt0.c1)<>(CAST(rt0.c1 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)<>(CAST(rt0.c1 AS REAL))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (NULL) ORDER BY ((rt0.c1)<>(CAST(rt0.c1 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)<>(CAST(rt0.c1 AS REAL))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (NULL) ORDER BY ((rt0.c1)<>(CAST(rt0.c1 AS REAL))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY (NULL IN ('> IY5㝗', CAST(vt0.c0 AS REAL))), CASE WHEN CAST(vt0.c0 AS TEXT) THEN LIKELY(DISTINCT vt0.c0) ELSE CASE vt0.c0  WHEN vt0.c0 THEN -1258668249 END END ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (NULL IN ('> IY5㝗', CAST(vt0.c0 AS REAL))), CASE WHEN CAST(vt0.c0 AS TEXT) THEN LIKELY(DISTINCT vt0.c0) ELSE CASE vt0.c0  WHEN vt0.c0 THEN -1258668249 END END ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY (NULL IN ('> IY5㝗', CAST(vt0.c0 AS REAL))), CASE WHEN CAST(vt0.c0 AS TEXT) THEN LIKELY(DISTINCT vt0.c0) ELSE CASE vt0.c0  WHEN vt0.c0 THEN -1258668249 END END ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (NULL IN ('> IY5㝗', CAST(vt0.c0 AS REAL))), CASE WHEN CAST(vt0.c0 AS TEXT) THEN LIKELY(DISTINCT vt0.c0) ELSE CASE vt0.c0  WHEN vt0.c0 THEN -1258668249 END END ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY (NULL IN ('> IY5㝗', CAST(vt0.c0 AS REAL))), CASE WHEN CAST(vt0.c0 AS TEXT) THEN LIKELY(DISTINCT vt0.c0) ELSE CASE vt0.c0  WHEN vt0.c0 THEN -1258668249 END END ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)  NULLS FIRST;
SELECT * FROM v0 WHERE ((((v0.c2 IN (v0.c2, v0.c1)))GLOB(((v0.c0)&(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN (v0.c2, v0.c1)))GLOB(((v0.c0)&(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c2 IN (v0.c2, v0.c1)))GLOB(((v0.c0)&(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN (v0.c2, v0.c1)))GLOB(((v0.c0)&(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c2 IN (v0.c2, v0.c1)))GLOB(((v0.c0)&(v0.c2)))));
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c0) IS FALSE)) NOTNULL)) ORDER BY (NOT (rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY (NOT (rt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c0) IS FALSE)) NOTNULL)) ORDER BY (NOT (rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY (NOT (rt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c0) IS FALSE)) NOTNULL)) ORDER BY (NOT (rt0.c1 COLLATE RTRIM));
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((x'')IS(TYPEOF(rt0.c0))) DESC, ((rt0.c1)AND(CHAR(rt0.c2)))  NULLS LAST, (((((((((rt0.c0 IN (rt0.c0)))AND(((rt0.c1)!=(rt0.c1)))))OR(((rt0.c2) NOTNULL))))OR((rt0.c1 IN (rt0.c0)))))OR((rt0.c2 IN (rt0.c0, rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((x'')IS(TYPEOF(rt0.c0))) DESC, ((rt0.c1)AND(CHAR(rt0.c2)))  NULLS LAST, (((((((((rt0.c0 IN (rt0.c0)))AND(((rt0.c1)!=(rt0.c1)))))OR(((rt0.c2) NOTNULL))))OR((rt0.c1 IN (rt0.c0)))))OR((rt0.c2 IN (rt0.c0, rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((x'')IS(TYPEOF(rt0.c0))) DESC, ((rt0.c1)AND(CHAR(rt0.c2)))  NULLS LAST, (((((((((rt0.c0 IN (rt0.c0)))AND(((rt0.c1)!=(rt0.c1)))))OR(((rt0.c2) NOTNULL))))OR((rt0.c1 IN (rt0.c0)))))OR((rt0.c2 IN (rt0.c0, rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((x'')IS(TYPEOF(rt0.c0))) DESC, ((rt0.c1)AND(CHAR(rt0.c2)))  NULLS LAST, (((((((((rt0.c0 IN (rt0.c0)))AND(((rt0.c1)!=(rt0.c1)))))OR(((rt0.c2) NOTNULL))))OR((rt0.c1 IN (rt0.c0)))))OR((rt0.c2 IN (rt0.c0, rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((x'')IS(TYPEOF(rt0.c0))) DESC, ((rt0.c1)AND(CHAR(rt0.c2)))  NULLS LAST, (((((((((rt0.c0 IN (rt0.c0)))AND(((rt0.c1)!=(rt0.c1)))))OR(((rt0.c2) NOTNULL))))OR((rt0.c1 IN (rt0.c0)))))OR((rt0.c2 IN (rt0.c0, rt0.c2))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0)IS(x'')))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0)IS(x''))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0)IS(x'')))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0)IS(x''))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0)IS(x'')))));
SELECT ALL * FROM rt0, v0 WHERE ((~ (CAST(v0.c0 AS REAL)))) ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))<<((- (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))<<((- (rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE ((~ (CAST(v0.c0 AS REAL)))) ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))<<((- (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))<<((- (rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE ((~ (CAST(v0.c0 AS REAL)))) ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))<<((- (rt0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY('275259729')) ORDER BY ((((((rt0.c0)GLOB(rt0.c0)))OR(((rt0.c1)<<(rt0.c0)))))AND(((rt0.c0)AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY('275259729')) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)GLOB(rt0.c0)))OR(((rt0.c1)<<(rt0.c0)))))AND(((rt0.c0)AND(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY('275259729')) ORDER BY ((((((rt0.c0)GLOB(rt0.c0)))OR(((rt0.c1)<<(rt0.c0)))))AND(((rt0.c0)AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY('275259729')) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)GLOB(rt0.c0)))OR(((rt0.c1)<<(rt0.c0)))))AND(((rt0.c0)AND(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY('275259729')) ORDER BY ((((((rt0.c0)GLOB(rt0.c0)))OR(((rt0.c1)<<(rt0.c0)))))AND(((rt0.c0)AND(rt0.c2))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN (((((v0.c1))<((rt0.c2))))) AND ((((v0.c2) NOT BETWEEN (rt0.c0) AND (v0.c1))))) LEFT OUTER JOIN vt0 ON CASE ((v0.c0) BETWEEN (v0.c1) AND (vt0.c0))  WHEN rt0.c0 COLLATE NOCASE THEN v0.c2 END WHERE (SQLITE_COMPILEOPTION_USED(v0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(v0.c2 COLLATE BINARY)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN (((((v0.c1))<((rt0.c2))))) AND ((((v0.c2) NOT BETWEEN (rt0.c0) AND (v0.c1))))) LEFT OUTER JOIN vt0 ON CASE ((v0.c0) BETWEEN (v0.c1) AND (vt0.c0))  WHEN rt0.c0 COLLATE NOCASE THEN v0.c2 END);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN (((((v0.c1))<((rt0.c2))))) AND ((((v0.c2) NOT BETWEEN (rt0.c0) AND (v0.c1))))) LEFT OUTER JOIN vt0 ON CASE ((v0.c0) BETWEEN (v0.c1) AND (vt0.c0))  WHEN rt0.c0 COLLATE NOCASE THEN v0.c2 END WHERE (SQLITE_COMPILEOPTION_USED(v0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(v0.c2 COLLATE BINARY)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN (((((v0.c1))<((rt0.c2))))) AND ((((v0.c2) NOT BETWEEN (rt0.c0) AND (v0.c1))))) LEFT OUTER JOIN vt0 ON CASE ((v0.c0) BETWEEN (v0.c1) AND (vt0.c0))  WHEN rt0.c0 COLLATE NOCASE THEN v0.c2 END);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN (((((v0.c1))<((rt0.c2))))) AND ((((v0.c2) NOT BETWEEN (rt0.c0) AND (v0.c1))))) LEFT OUTER JOIN vt0 ON CASE ((v0.c0) BETWEEN (v0.c1) AND (vt0.c0))  WHEN rt0.c0 COLLATE NOCASE THEN v0.c2 END WHERE (SQLITE_COMPILEOPTION_USED(v0.c2 COLLATE BINARY));
SELECT COUNT(*) FROM vt0 WHERE (TYPEOF(((vt0.c0)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0)<<(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (TYPEOF(((vt0.c0)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0)<<(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (TYPEOF(((vt0.c0)<<(vt0.c0))));
SELECT ALL * FROM rt0 WHERE (CASE CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END  WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c0)>=(rt0.c1)) ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) END) ORDER BY (((rt0.c1 IN (rt0.c0)))=(((rt0.c1) BETWEEN ('-788541007') AND (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END  WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c0)>=(rt0.c1)) ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN (rt0.c0)))=(((rt0.c1) BETWEEN ('-788541007') AND (rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END  WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c0)>=(rt0.c1)) ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) END) ORDER BY (((rt0.c1 IN (rt0.c0)))=(((rt0.c1) BETWEEN ('-788541007') AND (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END  WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c0)>=(rt0.c1)) ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN (rt0.c0)))=(((rt0.c1) BETWEEN ('-788541007') AND (rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END  WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c0)>=(rt0.c1)) ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) END) ORDER BY (((rt0.c1 IN (rt0.c0)))=(((rt0.c1) BETWEEN ('-788541007') AND (rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (CASE v0.c0  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END))) ORDER BY (((v0.c1)/(v0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE v0.c0  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1)/(v0.c1)) IN ()) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (CASE v0.c0  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END))) ORDER BY (((v0.c1)/(v0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE v0.c0  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1)/(v0.c1)) IN ()) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (CASE v0.c0  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END))) ORDER BY (((v0.c1)/(v0.c1)) IN ()) ASC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((v0.c2)) NOT BETWEEN (('217853853')) AND ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))) WHERE ((LIKELY(v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LIKELY(v0.c0) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((v0.c2)) NOT BETWEEN (('217853853')) AND ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((v0.c2)) NOT BETWEEN (('217853853')) AND ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))) WHERE ((LIKELY(v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LIKELY(v0.c0) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((v0.c2)) NOT BETWEEN (('217853853')) AND ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((v0.c2)) NOT BETWEEN (('217853853')) AND ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))) WHERE ((LIKELY(v0.c0) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (0Xffffffffc77988c8 COLLATE RTRIM) ORDER BY (~ ((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffc77988c8 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (~ ((rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (0Xffffffffc77988c8 COLLATE RTRIM) ORDER BY (~ ((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffc77988c8 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (~ ((rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (0Xffffffffc77988c8 COLLATE RTRIM) ORDER BY (~ ((rt0.c2 IN ())));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (rt0.c2) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY v0.c0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (rt0.c2) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY v0.c0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (rt0.c2) ORDER BY v0.c0;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((vt0.c0) IS FALSE)))) ORDER BY (~ (json_object(rt0.c0, NULL, rt0.c2, NULL)))  NULLS FIRST, ((((rt0.c0)+(rt0.c1))) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))) AND (0x62b21a43)), ((rt0.c0) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (json_object(rt0.c0, NULL, rt0.c2, NULL)))  NULLS FIRST, ((((rt0.c0)+(rt0.c1))) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))) AND (0x62b21a43)), ((rt0.c0) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((vt0.c0) IS FALSE)))) ORDER BY (~ (json_object(rt0.c0, NULL, rt0.c2, NULL)))  NULLS FIRST, ((((rt0.c0)+(rt0.c1))) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))) AND (0x62b21a43)), ((rt0.c0) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (json_object(rt0.c0, NULL, rt0.c2, NULL)))  NULLS FIRST, ((((rt0.c0)+(rt0.c1))) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))) AND (0x62b21a43)), ((rt0.c0) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((vt0.c0) IS FALSE)))) ORDER BY (~ (json_object(rt0.c0, NULL, rt0.c2, NULL)))  NULLS FIRST, ((((rt0.c0)+(rt0.c1))) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))) AND (0x62b21a43)), ((rt0.c0) IS FALSE) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (v0.c0);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c1)))AND(v0.c1)))AND(v0.c1)))AND(x'f7aa')))|(HEX(v0.c2)))) ORDER BY IFNULL((v0.c1 IN ()), ((v0.c0)+(x'8c7a')));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(v0.c1)))AND(v0.c1)))AND(v0.c1)))AND(x'f7aa')))|(HEX(v0.c2)))) IS TRUE)  as count FROM v0 ORDER BY IFNULL((v0.c1 IN ()), ((v0.c0)+(x'8c7a'))));
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c1)))AND(v0.c1)))AND(v0.c1)))AND(x'f7aa')))|(HEX(v0.c2)))) ORDER BY IFNULL((v0.c1 IN ()), ((v0.c0)+(x'8c7a')));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(v0.c1)))AND(v0.c1)))AND(v0.c1)))AND(x'f7aa')))|(HEX(v0.c2)))) IS TRUE)  as count FROM v0 ORDER BY IFNULL((v0.c1 IN ()), ((v0.c0)+(x'8c7a'))));
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c1)))AND(v0.c1)))AND(v0.c1)))AND(x'f7aa')))|(HEX(v0.c2)))) ORDER BY IFNULL((v0.c1 IN ()), ((v0.c0)+(x'8c7a')));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CAST((v0.c0 IN (v0.c2)) AS INTEGER) WHERE ((~ ('FALSE')) COLLATE BINARY) ORDER BY (((((((((+ (v0.c0)))OR('677636796')))OR(v0.c2)))AND((- (vt0.c0)))))AND((- (v0.c2))));
SELECT SUM(count) FROM (SELECT (((~ ('FALSE')) COLLATE BINARY) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST((v0.c0 IN (v0.c2)) AS INTEGER) ORDER BY (((((((((+ (v0.c0)))OR('677636796')))OR(v0.c2)))AND((- (vt0.c0)))))AND((- (v0.c2)))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CAST((v0.c0 IN (v0.c2)) AS INTEGER) WHERE ((~ ('FALSE')) COLLATE BINARY) ORDER BY (((((((((+ (v0.c0)))OR('677636796')))OR(v0.c2)))AND((- (vt0.c0)))))AND((- (v0.c2))));
SELECT SUM(count) FROM (SELECT (((~ ('FALSE')) COLLATE BINARY) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST((v0.c0 IN (v0.c2)) AS INTEGER) ORDER BY (((((((((+ (v0.c0)))OR('677636796')))OR(v0.c2)))AND((- (vt0.c0)))))AND((- (v0.c2)))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CAST((v0.c0 IN (v0.c2)) AS INTEGER) WHERE ((~ ('FALSE')) COLLATE BINARY) ORDER BY (((((((((+ (v0.c0)))OR('677636796')))OR(v0.c2)))AND((- (vt0.c0)))))AND((- (v0.c2))));
SELECT ALL * FROM vt0 WHERE ((((((x'') NOT NULL), LIKE(vt0.c0, vt0.c0), ((vt0.c0)>=(vt0.c0))))==(((vt0.c0 IN (vt0.c0)), (771910215 IN (vt0.c0)), CAST(vt0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'') NOT NULL), LIKE(vt0.c0, vt0.c0), ((vt0.c0)>=(vt0.c0))))==(((vt0.c0 IN (vt0.c0)), (771910215 IN (vt0.c0)), CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((x'') NOT NULL), LIKE(vt0.c0, vt0.c0), ((vt0.c0)>=(vt0.c0))))==(((vt0.c0 IN (vt0.c0)), (771910215 IN (vt0.c0)), CAST(vt0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'') NOT NULL), LIKE(vt0.c0, vt0.c0), ((vt0.c0)>=(vt0.c0))))==(((vt0.c0 IN (vt0.c0)), (771910215 IN (vt0.c0)), CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((x'') NOT NULL), LIKE(vt0.c0, vt0.c0), ((vt0.c0)>=(vt0.c0))))==(((vt0.c0 IN (vt0.c0)), (771910215 IN (vt0.c0)), CAST(vt0.c0 AS TEXT)))));
SELECT COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM) BETWEEN (((rt0.c0)|(v0.c0))) AND (((v0.c1) NOTNULL))) WHERE (((((v0.c0) BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN ((((v0.c2))<((vt0.c0)))) AND (((((v0.c2)AND(v0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN ((((v0.c2))<((vt0.c0)))) AND (((((v0.c2)AND(v0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0 LEFT OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM) BETWEEN (((rt0.c0)|(v0.c0))) AND (((v0.c1) NOTNULL))));
SELECT COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM) BETWEEN (((rt0.c0)|(v0.c0))) AND (((v0.c1) NOTNULL))) WHERE (((((v0.c0) BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN ((((v0.c2))<((vt0.c0)))) AND (((((v0.c2)AND(v0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN ((((v0.c2))<((vt0.c0)))) AND (((((v0.c2)AND(v0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0 LEFT OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM) BETWEEN (((rt0.c0)|(v0.c0))) AND (((v0.c1) NOTNULL))));
SELECT COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM) BETWEEN (((rt0.c0)|(v0.c0))) AND (((v0.c1) NOTNULL))) WHERE (((((v0.c0) BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN ((((v0.c2))<((vt0.c0)))) AND (((((v0.c2)AND(v0.c0)))OR(rt0.c1)))));
SELECT ALL * FROM v0, rt0, vt0 WHERE (0.036941937191060426) ORDER BY UNLIKELY((((rt0.c1))<((rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.036941937191060426) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY UNLIKELY((((rt0.c1))<((rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0, vt0 WHERE (0.036941937191060426) ORDER BY UNLIKELY((((rt0.c1))<((rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.036941937191060426) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY UNLIKELY((((rt0.c1))<((rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0, vt0 WHERE (0.036941937191060426) ORDER BY UNLIKELY((((rt0.c1))<((rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((CHANGES())IS NOT(rt0.c2 COLLATE RTRIM))) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES())IS NOT(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY v0.c2);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((CHANGES())IS NOT(rt0.c2 COLLATE RTRIM))) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES())IS NOT(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY v0.c2);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((CHANGES())IS NOT(rt0.c2 COLLATE RTRIM))) ORDER BY v0.c2;
SELECT ALL * FROM vt0 WHERE ((('-1258668249')=(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((('-1258668249')==(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('-1258668249')=(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((('-1258668249')==(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('-1258668249')=(vt0.c0)));
SELECT * FROM vt0 NOT INDEXED, rt0, v0 WHERE (((v0.c0 COLLATE NOCASE) BETWEEN (((v0.c1)&(v0.c2))) AND (highlight(vt0.c0, v0.c2, '', vt0.c0)))) ORDER BY ((((v0.c0) ISNULL)) IS TRUE) ASC, (v0.c2 IN (HEX(DISTINCT v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) BETWEEN (((v0.c1)&(v0.c2))) AND (highlight(vt0.c0, v0.c2, '', vt0.c0)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((v0.c0) ISNULL)) IS TRUE) ASC, (v0.c2 IN (HEX(DISTINCT v0.c0)))  NULLS FIRST);
SELECT * FROM vt0 NOT INDEXED, rt0, v0 WHERE (((v0.c0 COLLATE NOCASE) BETWEEN (((v0.c1)&(v0.c2))) AND (highlight(vt0.c0, v0.c2, '', vt0.c0)))) ORDER BY ((((v0.c0) ISNULL)) IS TRUE) ASC, (v0.c2 IN (HEX(DISTINCT v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) BETWEEN (((v0.c1)&(v0.c2))) AND (highlight(vt0.c0, v0.c2, '', vt0.c0)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((v0.c0) ISNULL)) IS TRUE) ASC, (v0.c2 IN (HEX(DISTINCT v0.c0)))  NULLS FIRST);
SELECT * FROM vt0 NOT INDEXED, rt0, v0 WHERE (((v0.c0 COLLATE NOCASE) BETWEEN (((v0.c1)&(v0.c2))) AND (highlight(vt0.c0, v0.c2, '', vt0.c0)))) ORDER BY ((((v0.c0) ISNULL)) IS TRUE) ASC, (v0.c2 IN (HEX(DISTINCT v0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((json_object(v0.c0, vt0.c0, rt0.c1, rt0.c0)) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (v0.c1 COLLATE RTRIM)) INNER JOIN v0 ON ((((((vt0.c0) ISNULL))AND(NULL)))AND((v0.c2 IN ()))) WHERE (((((v0.c2) BETWEEN (v0.c2) AND (vt0.c0)))|(((vt0.c0)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2) BETWEEN (v0.c2) AND (vt0.c0)))|(((vt0.c0)<=(rt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((json_object(v0.c0, vt0.c0, rt0.c1, rt0.c0)) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (v0.c1 COLLATE RTRIM)) INNER JOIN v0 ON ((((((vt0.c0) ISNULL))AND(NULL)))AND((v0.c2 IN ()))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((json_object(v0.c0, vt0.c0, rt0.c1, rt0.c0)) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (v0.c1 COLLATE RTRIM)) INNER JOIN v0 ON ((((((vt0.c0) ISNULL))AND(NULL)))AND((v0.c2 IN ()))) WHERE (((((v0.c2) BETWEEN (v0.c2) AND (vt0.c0)))|(((vt0.c0)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2) BETWEEN (v0.c2) AND (vt0.c0)))|(((vt0.c0)<=(rt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((json_object(v0.c0, vt0.c0, rt0.c1, rt0.c0)) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (v0.c1 COLLATE RTRIM)) INNER JOIN v0 ON ((((((vt0.c0) ISNULL))AND(NULL)))AND((v0.c2 IN ()))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((json_object(v0.c0, vt0.c0, rt0.c1, rt0.c0)) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (v0.c1 COLLATE RTRIM)) INNER JOIN v0 ON ((((((vt0.c0) ISNULL))AND(NULL)))AND((v0.c2 IN ()))) WHERE (((((v0.c2) BETWEEN (v0.c2) AND (vt0.c0)))|(((vt0.c0)<=(rt0.c0)))));
SELECT * FROM vt0, rt0 WHERE ((~ (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))) ORDER BY ((rt0.c1) ISNULL) COLLATE BINARY  NULLS FIRST, (((((NOT (rt0.c1)))OR(CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)))OR('')) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1) ISNULL) COLLATE BINARY  NULLS FIRST, (((((NOT (rt0.c1)))OR(CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)))OR('')) DESC);
SELECT * FROM vt0, rt0 WHERE ((~ (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))) ORDER BY ((rt0.c1) ISNULL) COLLATE BINARY  NULLS FIRST, (((((NOT (rt0.c1)))OR(CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)))OR('')) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1) ISNULL) COLLATE BINARY  NULLS FIRST, (((((NOT (rt0.c1)))OR(CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)))OR('')) DESC);
SELECT * FROM vt0, rt0 WHERE ((~ (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))) ORDER BY ((rt0.c1) ISNULL) COLLATE BINARY  NULLS FIRST, (((((NOT (rt0.c1)))OR(CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)))OR('')) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN IFNULL(DISTINCT v0.c0, v0.c1) THEN (v0.c2 IN ('㌗8')) ELSE ((v0.c1) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN IFNULL(DISTINCT v0.c0, v0.c1) THEN (v0.c2 IN ('㌗8')) ELSE ((v0.c1) IS FALSE) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN IFNULL(DISTINCT v0.c0, v0.c1) THEN (v0.c2 IN ('㌗8')) ELSE ((v0.c1) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN IFNULL(DISTINCT v0.c0, v0.c1) THEN (v0.c2 IN ('㌗8')) ELSE ((v0.c1) IS FALSE) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN IFNULL(DISTINCT v0.c0, v0.c1) THEN (v0.c2 IN ('㌗8')) ELSE ((v0.c1) IS FALSE) END);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (QUOTE('')) ORDER BY -1.605165438E9, CASE ((v0.c0) IS FALSE)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (v0.c2) AND (rt0.c1)) WHEN ((x'')OR(rt0.c0)) THEN ((v0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) WHEN 0.658840225430981 THEN NULLIF(DISTINCT rt0.c0, rt0.c2) ELSE rt0.c0 END DESC  NULLS FIRST, STRFTIME(((rt0.c1)IS NOT(v0.c2)), ((x'')>>(rt0.c0)), ((((((((v0.c1)AND(rt0.c0)))OR(rt0.c1)))OR(v0.c0)))OR(v0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((QUOTE('')) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY -1.605165438E9, CASE ((v0.c0) IS FALSE)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (v0.c2) AND (rt0.c1)) WHEN ((x'')OR(rt0.c0)) THEN ((v0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) WHEN 0.658840225430981 THEN NULLIF(DISTINCT rt0.c0, rt0.c2) ELSE rt0.c0 END DESC  NULLS FIRST, STRFTIME(((rt0.c1)IS NOT(v0.c2)), ((x'')>>(rt0.c0)), ((((((((v0.c1)AND(rt0.c0)))OR(rt0.c1)))OR(v0.c0)))OR(v0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (QUOTE('')) ORDER BY -1.605165438E9, CASE ((v0.c0) IS FALSE)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (v0.c2) AND (rt0.c1)) WHEN ((x'')OR(rt0.c0)) THEN ((v0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) WHEN 0.658840225430981 THEN NULLIF(DISTINCT rt0.c0, rt0.c2) ELSE rt0.c0 END DESC  NULLS FIRST, STRFTIME(((rt0.c1)IS NOT(v0.c2)), ((x'')>>(rt0.c0)), ((((((((v0.c1)AND(rt0.c0)))OR(rt0.c1)))OR(v0.c0)))OR(v0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((QUOTE('')) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY -1.605165438E9, CASE ((v0.c0) IS FALSE)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (v0.c2) AND (rt0.c1)) WHEN ((x'')OR(rt0.c0)) THEN ((v0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) WHEN 0.658840225430981 THEN NULLIF(DISTINCT rt0.c0, rt0.c2) ELSE rt0.c0 END DESC  NULLS FIRST, STRFTIME(((rt0.c1)IS NOT(v0.c2)), ((x'')>>(rt0.c0)), ((((((((v0.c1)AND(rt0.c0)))OR(rt0.c1)))OR(v0.c0)))OR(v0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (QUOTE('')) ORDER BY -1.605165438E9, CASE ((v0.c0) IS FALSE)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (v0.c2) AND (rt0.c1)) WHEN ((x'')OR(rt0.c0)) THEN ((v0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) WHEN 0.658840225430981 THEN NULLIF(DISTINCT rt0.c0, rt0.c2) ELSE rt0.c0 END DESC  NULLS FIRST, STRFTIME(((rt0.c1)IS NOT(v0.c2)), ((x'')>>(rt0.c0)), ((((((((v0.c1)AND(rt0.c0)))OR(rt0.c1)))OR(v0.c0)))OR(v0.c0))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2)LIKE(rt0.c0)) COLLATE BINARY) ORDER BY ((((((vt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, rt0.c2)) AND ((rt0.c2, rt0.c2, ')>,敠')))))!=((x'')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)LIKE(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((vt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, rt0.c2)) AND ((rt0.c2, rt0.c2, ')>,敠')))))<>((x''))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2)LIKE(rt0.c0)) COLLATE BINARY) ORDER BY ((((((vt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, rt0.c2)) AND ((rt0.c2, rt0.c2, ')>,敠')))))!=((x'')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)LIKE(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((vt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, rt0.c2)) AND ((rt0.c2, rt0.c2, ')>,敠')))))<>((x''))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2)LIKE(rt0.c0)) COLLATE BINARY) ORDER BY ((((((vt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, rt0.c2)) AND ((rt0.c2, rt0.c2, ')>,敠')))))!=((x'')));
SELECT COUNT(*) FROM vt0, v0 NATURAL JOIN rt0 WHERE ('-1354831173');
SELECT SUM(count) FROM (SELECT (('-1354831173') IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0, v0 NATURAL JOIN rt0 WHERE ('-1354831173');
SELECT SUM(count) FROM (SELECT (('-1354831173') IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0, v0 NATURAL JOIN rt0 WHERE ('-1354831173');
SELECT ALL * FROM vt0 NOT INDEXED, v0 WHERE (v0.c2) ORDER BY ((CAST(0.612410218796048 AS REAL)) NOT BETWEEN (((v0.c2)||(v0.c2))) AND (640371162))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(0.612410218796048 AS REAL)) NOT BETWEEN (((v0.c2)||(v0.c2))) AND (640371162))  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED, v0 WHERE (v0.c2) ORDER BY ((CAST(0.612410218796048 AS REAL)) NOT BETWEEN (((v0.c2)||(v0.c2))) AND (640371162))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(0.612410218796048 AS REAL)) NOT BETWEEN (((v0.c2)||(v0.c2))) AND (640371162))  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED, v0 WHERE (v0.c2) ORDER BY ((CAST(0.612410218796048 AS REAL)) NOT BETWEEN (((v0.c2)||(v0.c2))) AND (640371162))  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((- (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((- (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((- (rt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE (CASE (((rt0.c1))<((rt0.c0)))  WHEN ((rt0.c0)AND(rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c1) ISNULL) THEN rt0.c1 COLLATE RTRIM WHEN (rt0.c0 IN ()) THEN ((('', rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c2))) ELSE ((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) END) ORDER BY CASE (- (rt0.c2))  WHEN NULL COLLATE NOCASE THEN (+ (rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c1))<((rt0.c0)))  WHEN ((rt0.c0)AND(rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c1) ISNULL) THEN rt0.c1 COLLATE RTRIM WHEN (rt0.c0 IN ()) THEN ((('', rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c2))) ELSE ((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY CASE (- (rt0.c2))  WHEN NULL COLLATE NOCASE THEN (+ (rt0.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE (((rt0.c1))<((rt0.c0)))  WHEN ((rt0.c0)AND(rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c1) ISNULL) THEN rt0.c1 COLLATE RTRIM WHEN (rt0.c0 IN ()) THEN ((('', rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c2))) ELSE ((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) END) ORDER BY CASE (- (rt0.c2))  WHEN NULL COLLATE NOCASE THEN (+ (rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c1))<((rt0.c0)))  WHEN ((rt0.c0)AND(rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c1) ISNULL) THEN rt0.c1 COLLATE RTRIM WHEN (rt0.c0 IN ()) THEN ((('', rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c2))) ELSE ((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY CASE (- (rt0.c2))  WHEN NULL COLLATE NOCASE THEN (+ (rt0.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE (((rt0.c1))<((rt0.c0)))  WHEN ((rt0.c0)AND(rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c1) ISNULL) THEN rt0.c1 COLLATE RTRIM WHEN (rt0.c0 IN ()) THEN ((('', rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c2))) ELSE ((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) END) ORDER BY CASE (- (rt0.c2))  WHEN NULL COLLATE NOCASE THEN (+ (rt0.c0)) END  NULLS LAST;
SELECT * FROM rt0, v0 FULL OUTER JOIN vt0 ON 0.005234560972281699 WHERE ('2#ipx');
SELECT SUM(count) FROM (SELECT ALL (('2#ipx') IS TRUE)  as count FROM rt0, v0 NOT INDEXED FULL OUTER JOIN vt0 ON 0.005234560972281699);
SELECT * FROM rt0, v0 FULL OUTER JOIN vt0 ON 0.005234560972281699 WHERE ('2#ipx');
SELECT SUM(count) FROM (SELECT ALL (('2#ipx') IS TRUE)  as count FROM rt0, v0 NOT INDEXED FULL OUTER JOIN vt0 ON 0.005234560972281699);
SELECT * FROM rt0, v0 FULL OUTER JOIN vt0 ON 0.005234560972281699 WHERE ('2#ipx');
SELECT ALL * FROM rt0 WHERE (-1047108256 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((-1047108256 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (-1047108256 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((-1047108256 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (-1047108256 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)==(rt0.c0)))-(''))) ORDER BY rt0.c0 DESC  NULLS LAST, ((('.㫙GanD/') IS FALSE) IN ()), CAST(x'' AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)=(rt0.c0)))-(''))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0 DESC  NULLS LAST, ((('.㫙GanD/') IS FALSE) IN ()), CAST(x'' AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)==(rt0.c0)))-(''))) ORDER BY rt0.c0 DESC  NULLS LAST, ((('.㫙GanD/') IS FALSE) IN ()), CAST(x'' AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)=(rt0.c0)))-(''))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0 DESC  NULLS LAST, ((('.㫙GanD/') IS FALSE) IN ()), CAST(x'' AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)==(rt0.c0)))-(''))) ORDER BY rt0.c0 DESC  NULLS LAST, ((('.㫙GanD/') IS FALSE) IN ()), CAST(x'' AS INTEGER) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c0 IN ()))OR(((rt0.c2)LIKE(rt0.c2)))))OR(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN ()))OR(((rt0.c2)LIKE(rt0.c2)))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c0 IN ()))OR(((rt0.c2)LIKE(rt0.c2)))))OR(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN ()))OR(((rt0.c2)LIKE(rt0.c2)))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c0 IN ()))OR(((rt0.c2)LIKE(rt0.c2)))))OR(vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN 0x704dd051 THEN ((rt0.c0)&(rt0.c0)) WHEN (((rt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, 'f&jpMb', rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c2))) THEN (+ (rt0.c1)) WHEN '-1725131041' THEN rt0.c2 WHEN rt0.c1 THEN (((rt0.c2))==((rt0.c2))) WHEN ((rt0.c1) BETWEEN (2003256777) AND (rt0.c1)) THEN (((rt0.c2))>((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0X704dd051 THEN ((rt0.c0)&(rt0.c0)) WHEN (((rt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, 'f&jpMb', rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c2))) THEN (+ (rt0.c1)) WHEN '-1725131041' THEN rt0.c2 WHEN rt0.c1 THEN (((rt0.c2))==((rt0.c2))) WHEN ((rt0.c1) BETWEEN (2003256777) AND (rt0.c1)) THEN (((rt0.c2))>((rt0.c0))) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN 0x704dd051 THEN ((rt0.c0)&(rt0.c0)) WHEN (((rt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, 'f&jpMb', rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c2))) THEN (+ (rt0.c1)) WHEN '-1725131041' THEN rt0.c2 WHEN rt0.c1 THEN (((rt0.c2))==((rt0.c2))) WHEN ((rt0.c1) BETWEEN (2003256777) AND (rt0.c1)) THEN (((rt0.c2))>((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0X704dd051 THEN ((rt0.c0)&(rt0.c0)) WHEN (((rt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, 'f&jpMb', rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c2))) THEN (+ (rt0.c1)) WHEN '-1725131041' THEN rt0.c2 WHEN rt0.c1 THEN (((rt0.c2))==((rt0.c2))) WHEN ((rt0.c1) BETWEEN (2003256777) AND (rt0.c1)) THEN (((rt0.c2))>((rt0.c0))) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN 0x704dd051 THEN ((rt0.c0)&(rt0.c0)) WHEN (((rt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, 'f&jpMb', rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c2))) THEN (+ (rt0.c1)) WHEN '-1725131041' THEN rt0.c2 WHEN rt0.c1 THEN (((rt0.c2))==((rt0.c2))) WHEN ((rt0.c1) BETWEEN (2003256777) AND (rt0.c1)) THEN (((rt0.c2))>((rt0.c0))) END);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)) IN ())) ORDER BY CASE WHEN (+ (v0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CASE WHEN (+ (v0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)) IN ())) ORDER BY CASE WHEN (+ (v0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CASE WHEN (+ (v0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)) IN ())) ORDER BY CASE WHEN (+ (v0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END;
SELECT ALL * FROM vt0, rt0 WHERE (CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE RTRIM THEN ((rt0.c1) ISNULL) WHEN UPPER(rt0.c0) THEN ((rt0.c1)<=(rt0.c1)) WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c0)<>(rt0.c0)) WHEN TRIM(DISTINCT rt0.c1) THEN ((rt0.c2) NOT BETWEEN ('-1519827529') AND (vt0.c0)) WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE RTRIM THEN ((rt0.c1) ISNULL) WHEN UPPER(rt0.c0) THEN ((rt0.c1)<=(rt0.c1)) WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c0)<>(rt0.c0)) WHEN TRIM(DISTINCT rt0.c1) THEN ((rt0.c2) NOT BETWEEN ('-1519827529') AND (vt0.c0)) WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE RTRIM THEN ((rt0.c1) ISNULL) WHEN UPPER(rt0.c0) THEN ((rt0.c1)<=(rt0.c1)) WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c0)<>(rt0.c0)) WHEN TRIM(DISTINCT rt0.c1) THEN ((rt0.c2) NOT BETWEEN ('-1519827529') AND (vt0.c0)) WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE RTRIM THEN ((rt0.c1) ISNULL) WHEN UPPER(rt0.c0) THEN ((rt0.c1)<=(rt0.c1)) WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c0)<>(rt0.c0)) WHEN TRIM(DISTINCT rt0.c1) THEN ((rt0.c2) NOT BETWEEN ('-1519827529') AND (vt0.c0)) WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE RTRIM THEN ((rt0.c1) ISNULL) WHEN UPPER(rt0.c0) THEN ((rt0.c1)<=(rt0.c1)) WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c0)<>(rt0.c0)) WHEN TRIM(DISTINCT rt0.c1) THEN ((rt0.c2) NOT BETWEEN ('-1519827529') AND (vt0.c0)) WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) END);
SELECT * FROM v0, vt0 WHERE ((((~ ('-1431759223'))) BETWEEN (v0.c2) AND (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((~ ('-1431759223'))) BETWEEN (v0.c2) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((~ ('-1431759223'))) BETWEEN (v0.c2) AND (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((~ ('-1431759223'))) BETWEEN (v0.c2) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((~ ('-1431759223'))) BETWEEN (v0.c2) AND (v0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN vt0.c0 THEN v0.c0 WHEN '1556698365' THEN v0.c2 WHEN vt0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN v0.c0 WHEN '1556698365' THEN v0.c2 WHEN vt0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN vt0.c0 THEN v0.c0 WHEN '1556698365' THEN v0.c2 WHEN vt0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN v0.c0 WHEN '1556698365' THEN v0.c2 WHEN vt0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN vt0.c0 THEN v0.c0 WHEN '1556698365' THEN v0.c2 WHEN vt0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM v0 WHERE ((- (CASE v0.c0  WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END))) ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END)LIKE(v0.c0)), ((((v0.c1)IS NOT(v0.c1)))IS((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))) DESC, ((v0.c1) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE v0.c0  WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END)LIKE(v0.c0)), ((((v0.c1)IS NOT(v0.c1)))IS((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))) DESC, ((v0.c1) NOT NULL) ASC);
SELECT COUNT(*) FROM v0 WHERE ((- (CASE v0.c0  WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END))) ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END)LIKE(v0.c0)), ((((v0.c1)IS NOT(v0.c1)))IS((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))) DESC, ((v0.c1) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE v0.c0  WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END)LIKE(v0.c0)), ((((v0.c1)IS NOT(v0.c1)))IS((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))) DESC, ((v0.c1) NOT NULL) ASC);
SELECT COUNT(*) FROM v0 WHERE ((- (CASE v0.c0  WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END))) ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END)LIKE(v0.c0)), ((((v0.c1)IS NOT(v0.c1)))IS((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))) DESC, ((v0.c1) NOT NULL) ASC;
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(1263863394)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) WHEN (~ (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN (('-788541007') IS FALSE) THEN ((vt0.c0)+(vt0.c0)) END DESC, (((((vt0.c0)AND(0.5508133584584095)))AND(vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))OR(1263863394)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) WHEN (~ (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN (('-788541007') IS FALSE) THEN ((vt0.c0)+(vt0.c0)) END DESC, (((((vt0.c0)AND(0.5508133584584095)))AND(vt0.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(1263863394)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) WHEN (~ (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN (('-788541007') IS FALSE) THEN ((vt0.c0)+(vt0.c0)) END DESC, (((((vt0.c0)AND(0.5508133584584095)))AND(vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))OR(1263863394)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) WHEN (~ (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN (('-788541007') IS FALSE) THEN ((vt0.c0)+(vt0.c0)) END DESC, (((((vt0.c0)AND(0.5508133584584095)))AND(vt0.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(1263863394)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) WHEN (~ (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN (('-788541007') IS FALSE) THEN ((vt0.c0)+(vt0.c0)) END DESC, (((((vt0.c0)AND(0.5508133584584095)))AND(vt0.c0)) IN ())  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c0 COLLATE BINARY))<((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 COLLATE BINARY))<((vt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c0 COLLATE BINARY))<((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 COLLATE BINARY))<((vt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c0 COLLATE BINARY))<((vt0.c0))));
SELECT ALL * FROM v0, vt0, rt0 WHERE (v0.c1) ORDER BY (((NULL, v0.c0, rt0.c2)) NOT BETWEEN (((vt0.c0 IN ()), rt0.c2, ((rt0.c1)>(rt0.c2)))) AND ((v0.c2 COLLATE NOCASE, (((v0.c1, v0.c1, rt0.c1))>((v0.c1, NULL, rt0.c2))), ((0Xffffffff9990be02)LIKE(v0.c1))))), vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((NULL, v0.c0, rt0.c2)) NOT BETWEEN (((vt0.c0 IN ()), rt0.c2, ((rt0.c1)>(rt0.c2)))) AND ((v0.c2 COLLATE NOCASE, (((v0.c1, v0.c1, rt0.c1))>((v0.c1, NULL, rt0.c2))), ((0xffffffff9990be02)LIKE(v0.c1))))), vt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (v0.c1) ORDER BY (((NULL, v0.c0, rt0.c2)) NOT BETWEEN (((vt0.c0 IN ()), rt0.c2, ((rt0.c1)>(rt0.c2)))) AND ((v0.c2 COLLATE NOCASE, (((v0.c1, v0.c1, rt0.c1))>((v0.c1, NULL, rt0.c2))), ((0Xffffffff9990be02)LIKE(v0.c1))))), vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((NULL, v0.c0, rt0.c2)) NOT BETWEEN (((vt0.c0 IN ()), rt0.c2, ((rt0.c1)>(rt0.c2)))) AND ((v0.c2 COLLATE NOCASE, (((v0.c1, v0.c1, rt0.c1))>((v0.c1, NULL, rt0.c2))), ((0xffffffff9990be02)LIKE(v0.c1))))), vt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (v0.c1) ORDER BY (((NULL, v0.c0, rt0.c2)) NOT BETWEEN (((vt0.c0 IN ()), rt0.c2, ((rt0.c1)>(rt0.c2)))) AND ((v0.c2 COLLATE NOCASE, (((v0.c1, v0.c1, rt0.c1))>((v0.c1, NULL, rt0.c2))), ((0Xffffffff9990be02)LIKE(v0.c1))))), vt0.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(x'f052'));
SELECT SUM(count) FROM (SELECT ((LIKELY(x'f052')) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(x'f052'));
SELECT SUM(count) FROM (SELECT ((LIKELY(x'f052')) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(x'f052'));
SELECT ALL * FROM rt0, v0 INNER JOIN vt0 ON CAST(((vt0.c0)|(vt0.c0)) AS NUMERIC) WHERE ((((((((((v0.c2)AND(rt0.c1)))AND(v0.c2)))AND(NULL)))AND(rt0.c1)) IN (((0.5571336357173988)<(rt0.c2))))) ORDER BY CASE WHEN NULL THEN ((rt0.c1)%(x'3074')) END;
SELECT SUM(count) FROM (SELECT ALL (((((((((((v0.c2)AND(rt0.c1)))AND(v0.c2)))AND(NULL)))AND(rt0.c1)) IN (((0.5571336357173988)<(rt0.c2))))) IS TRUE)  as count FROM rt0, v0 INNER JOIN vt0 ON CAST(((vt0.c0)|(vt0.c0)) AS NUMERIC) ORDER BY CASE WHEN NULL THEN ((rt0.c1)%(x'3074')) END);
SELECT ALL * FROM rt0, v0 INNER JOIN vt0 ON CAST(((vt0.c0)|(vt0.c0)) AS NUMERIC) WHERE ((((((((((v0.c2)AND(rt0.c1)))AND(v0.c2)))AND(NULL)))AND(rt0.c1)) IN (((0.5571336357173988)<(rt0.c2))))) ORDER BY CASE WHEN NULL THEN ((rt0.c1)%(x'3074')) END;
SELECT SUM(count) FROM (SELECT ALL (((((((((((v0.c2)AND(rt0.c1)))AND(v0.c2)))AND(NULL)))AND(rt0.c1)) IN (((0.5571336357173988)<(rt0.c2))))) IS TRUE)  as count FROM rt0, v0 INNER JOIN vt0 ON CAST(((vt0.c0)|(vt0.c0)) AS NUMERIC) ORDER BY CASE WHEN NULL THEN ((rt0.c1)%(x'3074')) END);
SELECT ALL * FROM rt0, v0 INNER JOIN vt0 ON CAST(((vt0.c0)|(vt0.c0)) AS NUMERIC) WHERE ((((((((((v0.c2)AND(rt0.c1)))AND(v0.c2)))AND(NULL)))AND(rt0.c1)) IN (((0.5571336357173988)<(rt0.c2))))) ORDER BY CASE WHEN NULL THEN ((rt0.c1)%(x'3074')) END;
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)>(vt0.c0))  WHEN ((vt0.c0)<<(vt0.c0)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE RTRIM WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) IS TRUE) END) ORDER BY MIN(x'', ((vt0.c0) ISNULL), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)*(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)>(vt0.c0))  WHEN ((vt0.c0)<<(vt0.c0)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE RTRIM WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0 ORDER BY MIN(x'', ((vt0.c0) ISNULL), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)*(vt0.c0))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)>(vt0.c0))  WHEN ((vt0.c0)<<(vt0.c0)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE RTRIM WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) IS TRUE) END) ORDER BY MIN(x'', ((vt0.c0) ISNULL), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)*(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)>(vt0.c0))  WHEN ((vt0.c0)<<(vt0.c0)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE RTRIM WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0 ORDER BY MIN(x'', ((vt0.c0) ISNULL), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)*(vt0.c0))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)>(vt0.c0))  WHEN ((vt0.c0)<<(vt0.c0)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE RTRIM WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) IS TRUE) END) ORDER BY MIN(x'', ((vt0.c0) ISNULL), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)*(vt0.c0))) ASC;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY NULL ASC, (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC, (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY NULL ASC, (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC, (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY NULL ASC, (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT * FROM vt0 WHERE (0.3551236330694386);
SELECT SUM(count) FROM (SELECT ALL ((0.3551236330694386) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.3551236330694386);
SELECT SUM(count) FROM (SELECT ALL ((0.3551236330694386) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.3551236330694386);
SELECT * FROM v0, rt0 WHERE (IFNULL((((rt0.c1)) NOT BETWEEN (('-98715199')) AND ((rt0.c2))), v0.c1 COLLATE NOCASE)) ORDER BY ((((x'')<<(rt0.c0)))>=(((rt0.c0)<=(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((((rt0.c1)) NOT BETWEEN (('-98715199')) AND ((rt0.c2))), v0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((x'')<<(rt0.c0)))>=(((rt0.c0)<=(rt0.c1))))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (IFNULL((((rt0.c1)) NOT BETWEEN (('-98715199')) AND ((rt0.c2))), v0.c1 COLLATE NOCASE)) ORDER BY ((((x'')<<(rt0.c0)))>=(((rt0.c0)<=(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((((rt0.c1)) NOT BETWEEN (('-98715199')) AND ((rt0.c2))), v0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((x'')<<(rt0.c0)))>=(((rt0.c0)<=(rt0.c1))))  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (IFNULL((((rt0.c1)) NOT BETWEEN (('-98715199')) AND ((rt0.c2))), v0.c1 COLLATE NOCASE)) ORDER BY ((((x'')<<(rt0.c0)))>=(((rt0.c0)<=(rt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((NULLIF(rt0.c2, v0.c2))AND(CASE v0.c0  WHEN x'' THEN v0.c2 ELSE rt0.c2 END)))AND(CASE WHEN v0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(rt0.c2, v0.c2))AND(CASE v0.c0  WHEN x'' THEN v0.c2 ELSE rt0.c2 END)))AND(CASE WHEN v0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((NULLIF(rt0.c2, v0.c2))AND(CASE v0.c0  WHEN x'' THEN v0.c2 ELSE rt0.c2 END)))AND(CASE WHEN v0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(rt0.c2, v0.c2))AND(CASE v0.c0  WHEN x'' THEN v0.c2 ELSE rt0.c2 END)))AND(CASE WHEN v0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((NULLIF(rt0.c2, v0.c2))AND(CASE v0.c0  WHEN x'' THEN v0.c2 ELSE rt0.c2 END)))AND(CASE WHEN v0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c1 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((vt0.c0, v0.c1, vt0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM, rt0.c2 COLLATE BINARY, (((rt0.c2, rt0.c1, vt0.c0))<=((v0.c1, v0.c2, rt0.c0))))) AND ((((v0.c1)LIKE(v0.c1)), ((v0.c2) BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c1)*(v0.c2)))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((vt0.c0, v0.c1, vt0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM, rt0.c2 COLLATE BINARY, (((rt0.c2, rt0.c1, vt0.c0))<=((v0.c1, v0.c2, rt0.c0))))) AND ((((v0.c1)LIKE(v0.c1)), ((v0.c2) BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c1)*(v0.c2)))))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0, v0 ORDER BY x'');
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((vt0.c0, v0.c1, vt0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM, rt0.c2 COLLATE BINARY, (((rt0.c2, rt0.c1, vt0.c0))<=((v0.c1, v0.c2, rt0.c0))))) AND ((((v0.c1)LIKE(v0.c1)), ((v0.c2) BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c1)*(v0.c2)))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((vt0.c0, v0.c1, vt0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM, rt0.c2 COLLATE BINARY, (((rt0.c2, rt0.c1, vt0.c0))<=((v0.c1, v0.c2, rt0.c0))))) AND ((((v0.c1)LIKE(v0.c1)), ((v0.c2) BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c1)*(v0.c2)))))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0, v0 ORDER BY x'');
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((vt0.c0, v0.c1, vt0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM, rt0.c2 COLLATE BINARY, (((rt0.c2, rt0.c1, vt0.c0))<=((v0.c1, v0.c2, rt0.c0))))) AND ((((v0.c1)LIKE(v0.c1)), ((v0.c2) BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c1)*(v0.c2)))))) ORDER BY x'';
SELECT * FROM rt0, vt0, v0 WHERE (((((((((((((rt0.c0)AND((- (vt0.c0)))))AND(((0.4869999084670721) IS FALSE))))AND(((((((((v0.c0)AND(v0.c0)))OR(x'abcca3f3')))AND(vt0.c0)))OR(rt0.c1)))))AND(ABS(v0.c2))))OR(v0.c1 COLLATE NOCASE)))AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c0)AND((- (vt0.c0)))))AND(((0.4869999084670721) IS FALSE))))AND(((((((((v0.c0)AND(v0.c0)))OR(x'abcca3f3')))AND(vt0.c0)))OR(rt0.c1)))))AND(ABS(v0.c2))))OR(v0.c1 COLLATE NOCASE)))AND(rt0.c1))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (((((((((((((rt0.c0)AND((- (vt0.c0)))))AND(((0.4869999084670721) IS FALSE))))AND(((((((((v0.c0)AND(v0.c0)))OR(x'abcca3f3')))AND(vt0.c0)))OR(rt0.c1)))))AND(ABS(v0.c2))))OR(v0.c1 COLLATE NOCASE)))AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c0)AND((- (vt0.c0)))))AND(((0.4869999084670721) IS FALSE))))AND(((((((((v0.c0)AND(v0.c0)))OR(x'abcca3f3')))AND(vt0.c0)))OR(rt0.c1)))))AND(ABS(v0.c2))))OR(v0.c1 COLLATE NOCASE)))AND(rt0.c1))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (((((((((((((rt0.c0)AND((- (vt0.c0)))))AND(((0.4869999084670721) IS FALSE))))AND(((((((((v0.c0)AND(v0.c0)))OR(x'abcca3f3')))AND(vt0.c0)))OR(rt0.c1)))))AND(ABS(v0.c2))))OR(v0.c1 COLLATE NOCASE)))AND(rt0.c1)));
SELECT * FROM vt0 INNER JOIN rt0 ON json_array_length(CASE WHEN rt0.c0 THEN v0.c1 WHEN v0.c2 THEN rt0.c1 WHEN v0.c1 THEN rt0.c1 END, ((rt0.c2)>=(rt0.c0))) RIGHT OUTER JOIN v0 ON CASE INSTR(rt0.c0, rt0.c1)  WHEN ((rt0.c1)AND(rt0.c2)) THEN CASE WHEN v0.c2 THEN v0.c2 END WHEN ABS(DISTINCT v0.c1) THEN SQLITE_COMPILEOPTION_GET(rt0.c1) WHEN (('')<=(0.32455425284211736)) THEN rt0.c1 END WHERE (rt0.c1) ORDER BY NULL DESC  NULLS FIRST, ((((rt0.c0)!=(v0.c1))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (CASE rt0.c2  WHEN v0.c1 THEN vt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON json_array_length(CASE WHEN rt0.c0 THEN v0.c1 WHEN v0.c2 THEN rt0.c1 WHEN v0.c1 THEN rt0.c1 END, ((rt0.c2)>=(rt0.c0))) RIGHT OUTER JOIN v0 ON CASE INSTR(rt0.c0, rt0.c1)  WHEN ((rt0.c1)AND(rt0.c2)) THEN CASE WHEN v0.c2 THEN v0.c2 END WHEN ABS(DISTINCT v0.c1) THEN SQLITE_COMPILEOPTION_GET(rt0.c1) WHEN (('')<=(0.32455425284211736)) THEN rt0.c1 END ORDER BY NULL DESC  NULLS FIRST, ((((rt0.c0)<>(v0.c1))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (CASE rt0.c2  WHEN v0.c1 THEN vt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c2 END))  NULLS LAST);
SELECT * FROM vt0 INNER JOIN rt0 ON json_array_length(CASE WHEN rt0.c0 THEN v0.c1 WHEN v0.c2 THEN rt0.c1 WHEN v0.c1 THEN rt0.c1 END, ((rt0.c2)>=(rt0.c0))) RIGHT OUTER JOIN v0 ON CASE INSTR(rt0.c0, rt0.c1)  WHEN ((rt0.c1)AND(rt0.c2)) THEN CASE WHEN v0.c2 THEN v0.c2 END WHEN ABS(DISTINCT v0.c1) THEN SQLITE_COMPILEOPTION_GET(rt0.c1) WHEN (('')<=(0.32455425284211736)) THEN rt0.c1 END WHERE (rt0.c1) ORDER BY NULL DESC  NULLS FIRST, ((((rt0.c0)!=(v0.c1))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (CASE rt0.c2  WHEN v0.c1 THEN vt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON json_array_length(CASE WHEN rt0.c0 THEN v0.c1 WHEN v0.c2 THEN rt0.c1 WHEN v0.c1 THEN rt0.c1 END, ((rt0.c2)>=(rt0.c0))) RIGHT OUTER JOIN v0 ON CASE INSTR(rt0.c0, rt0.c1)  WHEN ((rt0.c1)AND(rt0.c2)) THEN CASE WHEN v0.c2 THEN v0.c2 END WHEN ABS(DISTINCT v0.c1) THEN SQLITE_COMPILEOPTION_GET(rt0.c1) WHEN (('')<=(0.32455425284211736)) THEN rt0.c1 END ORDER BY NULL DESC  NULLS FIRST, ((((rt0.c0)<>(v0.c1))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (CASE rt0.c2  WHEN v0.c1 THEN vt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c2 END))  NULLS LAST);
SELECT * FROM vt0, v0 WHERE ((((((((vt0.c0)OR(v0.c2)))OR(NULL)), ((v0.c2) IS TRUE), 'T^,Ht'))==(((v0.c2 IN ()), CAST(vt0.c0 AS BLOB), CASE WHEN v0.c0 THEN v0.c2 WHEN '-1197782429' THEN v0.c2 WHEN v0.c1 THEN v0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)OR(v0.c2)))OR(NULL)), ((v0.c2) IS TRUE), 'T^,Ht'))=(((v0.c2 IN ()), CAST(vt0.c0 AS BLOB), CASE WHEN v0.c0 THEN v0.c2 WHEN '-1197782429' THEN v0.c2 WHEN v0.c1 THEN v0.c0 END)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((((vt0.c0)OR(v0.c2)))OR(NULL)), ((v0.c2) IS TRUE), 'T^,Ht'))==(((v0.c2 IN ()), CAST(vt0.c0 AS BLOB), CASE WHEN v0.c0 THEN v0.c2 WHEN '-1197782429' THEN v0.c2 WHEN v0.c1 THEN v0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)OR(v0.c2)))OR(NULL)), ((v0.c2) IS TRUE), 'T^,Ht'))=(((v0.c2 IN ()), CAST(vt0.c0 AS BLOB), CASE WHEN v0.c0 THEN v0.c2 WHEN '-1197782429' THEN v0.c2 WHEN v0.c1 THEN v0.c0 END)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((((vt0.c0)OR(v0.c2)))OR(NULL)), ((v0.c2) IS TRUE), 'T^,Ht'))==(((v0.c2 IN ()), CAST(vt0.c0 AS BLOB), CASE WHEN v0.c0 THEN v0.c2 WHEN '-1197782429' THEN v0.c2 WHEN v0.c1 THEN v0.c0 END))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((CAST(v0.c0 AS REAL))GLOB((v0.c0 IN ())))) ORDER BY CASE WHEN (~ (v0.c1)) THEN '0.18840183803022403' ELSE ((v0.c0)|(rt0.c1)) END  NULLS FIRST, 0xffffffffe5844b01 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL))GLOB((v0.c0 IN ())))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CASE WHEN (~ (v0.c1)) THEN '0.18840183803022403' ELSE ((v0.c0)|(rt0.c1)) END  NULLS FIRST, 0Xffffffffe5844b01 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((CAST(v0.c0 AS REAL))GLOB((v0.c0 IN ())))) ORDER BY CASE WHEN (~ (v0.c1)) THEN '0.18840183803022403' ELSE ((v0.c0)|(rt0.c1)) END  NULLS FIRST, 0xffffffffe5844b01 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL))GLOB((v0.c0 IN ())))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CASE WHEN (~ (v0.c1)) THEN '0.18840183803022403' ELSE ((v0.c0)|(rt0.c1)) END  NULLS FIRST, 0Xffffffffe5844b01 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((CAST(v0.c0 AS REAL))GLOB((v0.c0 IN ())))) ORDER BY CASE WHEN (~ (v0.c1)) THEN '0.18840183803022403' ELSE ((v0.c0)|(rt0.c1)) END  NULLS FIRST, 0xffffffffe5844b01 ASC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2)<<(vt0.c0)))+(CASE WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<<(vt0.c0)))+(CASE WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2)<<(vt0.c0)))+(CASE WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<<(vt0.c0)))+(CASE WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2)<<(vt0.c0)))+(CASE WHEN rt0.c0 THEN rt0.c1 END)));
SELECT * FROM vt0, v0, rt0 WHERE (((v0.c0)<(v0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0)<(v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (((v0.c0)<(v0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0)<(v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (((v0.c0)<(v0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c0 AS REAL)) ISNULL) WHERE (((v0.c0)IS((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)IS((v0.c0 IN ())))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c0 AS REAL)) ISNULL));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c0 AS REAL)) ISNULL) WHERE (((v0.c0)IS((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)IS((v0.c0 IN ())))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c0 AS REAL)) ISNULL));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c0 AS REAL)) ISNULL) WHERE (((v0.c0)IS((v0.c0 IN ()))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((- (vt0.c0)))OR(rt0.c1 COLLATE NOCASE))) ORDER BY CAST(vt0.c0 AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))OR(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(vt0.c0 AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((- (vt0.c0)))OR(rt0.c1 COLLATE NOCASE))) ORDER BY CAST(vt0.c0 AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))OR(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(vt0.c0 AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((- (vt0.c0)))OR(rt0.c1 COLLATE NOCASE))) ORDER BY CAST(vt0.c0 AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ('-1811752541');
SELECT SUM(count) FROM (SELECT ALL (('-1811752541') IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ('-1811752541');
SELECT SUM(count) FROM (SELECT ALL (('-1811752541') IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ('-1811752541');
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c2 COLLATE RTRIM) NOT BETWEEN (CASE v0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN -1872720033 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 END) AND (((v0.c2) IS TRUE)))) ORDER BY TRIM((- (v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE RTRIM) NOT BETWEEN (CASE v0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN -1872720033 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 END) AND (((v0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0, v0 ORDER BY TRIM((- (v0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c2 COLLATE RTRIM) NOT BETWEEN (CASE v0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN -1872720033 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 END) AND (((v0.c2) IS TRUE)))) ORDER BY TRIM((- (v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE RTRIM) NOT BETWEEN (CASE v0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN -1872720033 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 END) AND (((v0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0, v0 ORDER BY TRIM((- (v0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c2 COLLATE RTRIM) NOT BETWEEN (CASE v0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN -1872720033 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 END) AND (((v0.c2) IS TRUE)))) ORDER BY TRIM((- (v0.c0))) ASC;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN CAST(v0.c2 AS REAL) THEN ((v0.c0)GLOB(v0.c2)) ELSE (v0.c0 IN ()) END WHERE (((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN CAST(v0.c2 AS REAL) THEN ((v0.c0)GLOB(v0.c2)) ELSE (v0.c0 IN ()) END);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN CAST(v0.c2 AS REAL) THEN ((v0.c0)GLOB(v0.c2)) ELSE (v0.c0 IN ()) END WHERE (((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN CAST(v0.c2 AS REAL) THEN ((v0.c0)GLOB(v0.c2)) ELSE (v0.c0 IN ()) END);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN CAST(v0.c2 AS REAL) THEN ((v0.c0)GLOB(v0.c2)) ELSE (v0.c0 IN ()) END WHERE (((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((+ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((+ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((+ (vt0.c0)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN ((rt0.c1 IN ())) AND (x'' COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN ((rt0.c1 IN ())) AND (x'' COLLATE BINARY)));
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN ((rt0.c1 IN ())) AND (x'' COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN ((rt0.c1 IN ())) AND (x'' COLLATE BINARY)));
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN ((rt0.c1 IN ())) AND (x'' COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((highlight(rt0.c0, NULL, 'Y?i7', rt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT (((highlight(rt0.c0, NULL, 'Y?i7', rt0.c1) IN ())) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((highlight(rt0.c0, NULL, 'Y?i7', rt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT (((highlight(rt0.c0, NULL, 'Y?i7', rt0.c1) IN ())) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((highlight(rt0.c0, NULL, 'Y?i7', rt0.c1) IN ()));
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((v0.c1)) BETWEEN ((((rt0.c0)IS(rt0.c0)))) AND ((rt0.c2)))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c1)) BETWEEN ((((rt0.c0)IS(rt0.c0)))) AND ((rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((v0.c1)) BETWEEN ((((rt0.c0)IS(rt0.c0)))) AND ((rt0.c2)))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c1)) BETWEEN ((((rt0.c0)IS(rt0.c0)))) AND ((rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((v0.c1)) BETWEEN ((((rt0.c0)IS(rt0.c0)))) AND ((rt0.c2)))) ORDER BY v0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((+ (rt0.c0))) NOT BETWEEN (((((((((v0.c2)OR(v0.c1)))AND(rt0.c2)))AND(v0.c2)))AND(v0.c1))) AND (NULL)) CROSS JOIN rt0 ON v0.c1 WHERE (((((x'')*(v0.c0)))==(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')*(v0.c0)))==(v0.c0))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((+ (rt0.c0))) NOT BETWEEN (((((((((v0.c2)OR(v0.c1)))AND(rt0.c2)))AND(v0.c2)))AND(v0.c1))) AND (NULL)) CROSS JOIN rt0 ON v0.c1);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((+ (rt0.c0))) NOT BETWEEN (((((((((v0.c2)OR(v0.c1)))AND(rt0.c2)))AND(v0.c2)))AND(v0.c1))) AND (NULL)) CROSS JOIN rt0 ON v0.c1 WHERE (((((x'')*(v0.c0)))==(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')*(v0.c0)))==(v0.c0))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((+ (rt0.c0))) NOT BETWEEN (((((((((v0.c2)OR(v0.c1)))AND(rt0.c2)))AND(v0.c2)))AND(v0.c1))) AND (NULL)) CROSS JOIN rt0 ON v0.c1);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((+ (rt0.c0))) NOT BETWEEN (((((((((v0.c2)OR(v0.c1)))AND(rt0.c2)))AND(v0.c2)))AND(v0.c1))) AND (NULL)) CROSS JOIN rt0 ON v0.c1 WHERE (((((x'')*(v0.c0)))==(v0.c0)));
