-- Time: 2024/06/09 13:18:00
-- Database: database3
-- Database version: 3.40.0
-- seed value: 3388810703
PRAGMA cache_size = 50000; -- 10ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 REAL ); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (0.16577122127180977), (x'54cb'), (0.12264798898974538); -- 0ms;
DELETE FROM vt1; -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 AFTER INSERT ON t0 WHEN (((((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0))))<(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))) BEGIN SELECT RAISE(FAIL, 'asdf');UPDATE OR IGNORE t0 SET c0=0.14157258927014205, c0=NULL WHERE t0.c0;END; -- 1ms;
ANALYZE temp; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t0 ADD COLUMN c54 BLOB; -- 1ms;
ROLLBACK TRANSACTION; -- 2ms;
COMMIT; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 10); -- 0ms;
VACUUM; -- 1ms;
PRAGMA journal_mode = PERSIST; -- 0ms;
UPDATE vt1 SET c0=NULL WHERE CASE ((vt1.c0) IS TRUE)  WHEN ((vt1.c0)<=('1012621558')) THEN ((((((((vt1.c0)OR(1012621558)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) ELSE (vt1.c0 IN ()) END; -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (0.5319750959026655); -- 1ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=12'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1012621558);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1000170763); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '43311'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0X3c5b60f6); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '43151'); -- 0ms;
PRAGMA main.auto_vacuum; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1505568322);\n; -- 2ms;
ALTER TABLE t0 ADD COLUMN c77 INT; -- 1ms;
UPDATE OR IGNORE t0 SET c0='', c0='-1505568322' WHERE t0.c0; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.011924735240444795, x'c526'); -- 0ms;
INSERT OR FAIL INTO t0(c77) VALUES (0.8844006883543547); -- 0ms;
ANALYZE vt1; -- 0ms;
PRAGMA main.application_id; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA stats; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA auto_vacuum = FULL; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c77 TO c20; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
ANALYZE t1; -- 0ms;
PRAGMA cache_size = 5558734512621049491; -- 0ms;
COMMIT; -- 0ms;
ANALYZE t1; -- 1ms;
PRAGMA cache_spill = 8462814121289629404; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA secure_delete = FAST; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE vt1; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (1.012621558E9); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c50; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA automatic_index; -- 0ms;
CREATE INDEX IF NOT EXISTS i2 ON t0(((CASE WHEN c20 THEN c50 WHEN c20 THEN c20 WHEN c20 THEN c20 END) BETWEEN (CASE c50  WHEN c20 THEN c20 ELSE c50 END) AND (c20)) ASC,(((c50)IS(c20)) IN ()) COLLATE NOCASE ASC); -- 3ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1 UNINDEXED, content=''); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1186716624); -- 0ms;
PRAGMA main.ignore_check_constraints = false; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '4186'); -- 0ms;
INSERT OR ABORT INTO t1(c20, c50) VALUES ('0.16577122127180977', x''); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(0.15754459895518635) WHERE (((vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) AND (((vt1.c0 IN ())))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 70774741); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR FAIL INTO vt1 VALUES (x''), (''), (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1031660029); -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES ('293442936'); -- 0ms;
INSERT OR ABORT INTO t1(c20) VALUES ('0.8844006883543547'), (x''), ('293442936'); -- 1ms;
UPDATE OR IGNORE vt1 SET c0='1012621558' WHERE (- (((0.3197495435834844)IS(vt1.c0)))); -- 0ms;
INSERT OR IGNORE INTO t1(c20) VALUES (x'3fbf'); -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
INSERT OR IGNORE INTO t0(c50) VALUES (x'4bb269e4'); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES ('#1', x''), (0.3977955548510981, 0X117d9578), ('-1045787126', 0.5363233894318449); -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (NULL), (-1045787126), (NULL), (0x45c84366), (0.663282073130098); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0 INDEXED BY i2, t0, vt1 WHERE ((((~ (vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 INDEXED BY i2, t0, vt1);
SELECT ALL * FROM vt0 INDEXED BY i2, t0, vt1 WHERE ((((~ (vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 INDEXED BY i2, t0, vt1);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON vt1.c0 WHERE ((NOT ((t0.c50 IN (t0.c20)))));
SELECT SUM(count) FROM (SELECT (((NOT ((t0.c50 IN (t0.c20))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON vt1.c0);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON vt1.c0 WHERE ((NOT ((t0.c50 IN (t0.c20)))));
SELECT SUM(count) FROM (SELECT (((NOT ((t0.c50 IN (t0.c20))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON vt1.c0);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON vt1.c0 WHERE ((NOT ((t0.c50 IN (t0.c20)))));
SELECT ALL * FROM t0 WHERE ((((((((((t0.c20)OR(t0.c20)))OR(t0.c50)))AND(t0.c50)))OR(t0.c20)) IN ())) ORDER BY CAST(((t0.c20)>=(t0.c50)) AS NUMERIC) ASC, TRIM(NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c20)OR(t0.c20)))OR(t0.c50)))AND(t0.c50)))OR(t0.c20)) IN ())) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c20)>=(t0.c50)) AS NUMERIC) ASC, TRIM(NULL) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((((((t0.c20)OR(t0.c20)))OR(t0.c50)))AND(t0.c50)))OR(t0.c20)) IN ())) ORDER BY CAST(((t0.c20)>=(t0.c50)) AS NUMERIC) ASC, TRIM(NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c20)OR(t0.c20)))OR(t0.c50)))AND(t0.c50)))OR(t0.c20)) IN ())) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c20)>=(t0.c50)) AS NUMERIC) ASC, TRIM(NULL) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((((((t0.c20)OR(t0.c20)))OR(t0.c50)))AND(t0.c50)))OR(t0.c20)) IN ())) ORDER BY CAST(((t0.c20)>=(t0.c50)) AS NUMERIC) ASC, TRIM(NULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN ()) WHERE (((((vt0.c0)||(vt0.c1)))>>(CASE WHEN t0.c50 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST(t0.c20 COLLATE RTRIM AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)||(vt0.c1)))>>(CASE WHEN t0.c50 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN ()) ORDER BY CAST(t0.c20 COLLATE RTRIM AS REAL) DESC);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN ()) WHERE (((((vt0.c0)||(vt0.c1)))>>(CASE WHEN t0.c50 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST(t0.c20 COLLATE RTRIM AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)||(vt0.c1)))>>(CASE WHEN t0.c50 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN ()) ORDER BY CAST(t0.c20 COLLATE RTRIM AS REAL) DESC);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN ()) WHERE (((((vt0.c0)||(vt0.c1)))>>(CASE WHEN t0.c50 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST(t0.c20 COLLATE RTRIM AS REAL) DESC;
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON CASE WHEN (+ (t0.c50)) THEN CAST(0.3197495435834844 AS NUMERIC) END INNER JOIN t0 ON t0.c20 COLLATE BINARY WHERE ((NOT (CASE t0.c50  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c50 END))) ORDER BY ((CAST(vt0.c1 AS REAL)) ISNULL) ASC  NULLS FIRST, ((CAST(t0.c20 AS TEXT)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE t0.c50  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c50 END))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CASE WHEN (+ (t0.c50)) THEN CAST(0.3197495435834844 AS NUMERIC) END INNER JOIN t0 ON t0.c20 COLLATE BINARY ORDER BY ((CAST(vt0.c1 AS REAL)) ISNULL) ASC  NULLS FIRST, ((CAST(t0.c20 AS TEXT)) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON CASE WHEN (+ (t0.c50)) THEN CAST(0.3197495435834844 AS NUMERIC) END INNER JOIN t0 ON t0.c20 COLLATE BINARY WHERE ((NOT (CASE t0.c50  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c50 END))) ORDER BY ((CAST(vt0.c1 AS REAL)) ISNULL) ASC  NULLS FIRST, ((CAST(t0.c20 AS TEXT)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE t0.c50  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c50 END))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CASE WHEN (+ (t0.c50)) THEN CAST(0.3197495435834844 AS NUMERIC) END INNER JOIN t0 ON t0.c20 COLLATE BINARY ORDER BY ((CAST(vt0.c1 AS REAL)) ISNULL) ASC  NULLS FIRST, ((CAST(t0.c20 AS TEXT)) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON CASE WHEN (+ (t0.c50)) THEN CAST(0.3197495435834844 AS NUMERIC) END INNER JOIN t0 ON t0.c20 COLLATE BINARY WHERE ((NOT (CASE t0.c50  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c50 END))) ORDER BY ((CAST(vt0.c1 AS REAL)) ISNULL) ASC  NULLS FIRST, ((CAST(t0.c20 AS TEXT)) IS FALSE)  NULLS FIRST;
SELECT * FROM vt1 INDEXED BY i2 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT NULL)) IS TRUE)  as count FROM vt1 INDEXED BY i2);
SELECT * FROM vt1 INDEXED BY i2 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT NULL)) IS TRUE)  as count FROM vt1 INDEXED BY i2);
SELECT ALL COUNT(*) FROM t0 WHERE ('518407666') ORDER BY 0x45c84366;
SELECT SUM(count) FROM (SELECT (('518407666') IS TRUE)  as count FROM t0 ORDER BY 0X45c84366);
SELECT ALL COUNT(*) FROM t0 WHERE ('518407666') ORDER BY 0x45c84366;
SELECT SUM(count) FROM (SELECT (('518407666') IS TRUE)  as count FROM t0 ORDER BY 0X45c84366);
SELECT ALL * FROM t0, vt1 WHERE (CASE WHEN t0.c20 THEN vt1.c0 WHEN t0.c20 THEN t0.c50 WHEN t0.c50 THEN t0.c50 END COLLATE BINARY) ORDER BY (((((((((((((NULL)OR(t0.c50)))OR(t0.c50)))OR(t0.c20)))OR(t0.c50)))AND(t0.c20)))AND(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c20 THEN vt1.c0 WHEN t0.c20 THEN t0.c50 WHEN t0.c50 THEN t0.c50 END COLLATE BINARY) IS TRUE)  as count FROM t0, vt1 ORDER BY (((((((((((((NULL)OR(t0.c50)))OR(t0.c50)))OR(t0.c20)))OR(t0.c50)))AND(t0.c20)))AND(vt1.c0)) IN ()));
SELECT ALL * FROM t0, vt1 WHERE (CASE WHEN t0.c20 THEN vt1.c0 WHEN t0.c20 THEN t0.c50 WHEN t0.c50 THEN t0.c50 END COLLATE BINARY) ORDER BY (((((((((((((NULL)OR(t0.c50)))OR(t0.c50)))OR(t0.c20)))OR(t0.c50)))AND(t0.c20)))AND(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c20 THEN vt1.c0 WHEN t0.c20 THEN t0.c50 WHEN t0.c50 THEN t0.c50 END COLLATE BINARY) IS TRUE)  as count FROM t0, vt1 ORDER BY (((((((((((((NULL)OR(t0.c50)))OR(t0.c50)))OR(t0.c20)))OR(t0.c50)))AND(t0.c20)))AND(vt1.c0)) IN ()));
SELECT ALL * FROM t0, vt1 WHERE (CASE WHEN t0.c20 THEN vt1.c0 WHEN t0.c20 THEN t0.c50 WHEN t0.c50 THEN t0.c50 END COLLATE BINARY) ORDER BY (((((((((((((NULL)OR(t0.c50)))OR(t0.c50)))OR(t0.c20)))OR(t0.c50)))AND(t0.c20)))AND(vt1.c0)) IN ());
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (- (((((t0.c20)OR(vt1.c0)))AND(vt1.c0)))) WHERE ((CAST(t0.c20 AS REAL) IN ())) ORDER BY (((NOT (t0.c50)))<>(vt1.c0)) DESC  NULLS FIRST, (((vt1.c0)) BETWEEN ((((t0.c20) NOT NULL))) AND (((t0.c20 IN ()))))  NULLS LAST, CAST(vt1.c0 AS REAL) COLLATE RTRIM  NULLS LAST, CASE 1.170752358E9  WHEN ((t0.c20) BETWEEN (t0.c50) AND (vt1.c0)) THEN vt1.c0 COLLATE BINARY END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c20 AS REAL) IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (- (((((t0.c20)OR(vt1.c0)))AND(vt1.c0)))) ORDER BY (((NOT (t0.c50)))!=(vt1.c0)) DESC  NULLS FIRST, (((vt1.c0)) BETWEEN ((((t0.c20) NOT NULL))) AND (((t0.c20 IN ()))))  NULLS LAST, CAST(vt1.c0 AS REAL) COLLATE RTRIM  NULLS LAST, CASE 1.170752358E9  WHEN ((t0.c20) BETWEEN (t0.c50) AND (vt1.c0)) THEN vt1.c0 COLLATE BINARY END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (- (((((t0.c20)OR(vt1.c0)))AND(vt1.c0)))) WHERE ((CAST(t0.c20 AS REAL) IN ())) ORDER BY (((NOT (t0.c50)))<>(vt1.c0)) DESC  NULLS FIRST, (((vt1.c0)) BETWEEN ((((t0.c20) NOT NULL))) AND (((t0.c20 IN ()))))  NULLS LAST, CAST(vt1.c0 AS REAL) COLLATE RTRIM  NULLS LAST, CASE 1.170752358E9  WHEN ((t0.c20) BETWEEN (t0.c50) AND (vt1.c0)) THEN vt1.c0 COLLATE BINARY END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c20 AS REAL) IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (- (((((t0.c20)OR(vt1.c0)))AND(vt1.c0)))) ORDER BY (((NOT (t0.c50)))!=(vt1.c0)) DESC  NULLS FIRST, (((vt1.c0)) BETWEEN ((((t0.c20) NOT NULL))) AND (((t0.c20 IN ()))))  NULLS LAST, CAST(vt1.c0 AS REAL) COLLATE RTRIM  NULLS LAST, CASE 1.170752358E9  WHEN ((t0.c20) BETWEEN (t0.c50) AND (vt1.c0)) THEN vt1.c0 COLLATE BINARY END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (- (((((t0.c20)OR(vt1.c0)))AND(vt1.c0)))) WHERE ((CAST(t0.c20 AS REAL) IN ())) ORDER BY (((NOT (t0.c50)))<>(vt1.c0)) DESC  NULLS FIRST, (((vt1.c0)) BETWEEN ((((t0.c20) NOT NULL))) AND (((t0.c20 IN ()))))  NULLS LAST, CAST(vt1.c0 AS REAL) COLLATE RTRIM  NULLS LAST, CASE 1.170752358E9  WHEN ((t0.c20) BETWEEN (t0.c50) AND (vt1.c0)) THEN vt1.c0 COLLATE BINARY END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((((vt0.c1, '-497076227', vt0.c0)) NOT BETWEEN ((0.7240575452403386, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0)))) BETWEEN ((((vt0.c0, NULL, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c1)))) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))), highlight(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END, 0Xffffffff87e977e0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1, '-497076227', vt0.c0)) NOT BETWEEN ((0.7240575452403386, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0)))) BETWEEN ((((vt0.c0, NULL, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c1)))) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))), highlight(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END, 0Xffffffff87e977e0)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((((vt0.c1, '-497076227', vt0.c0)) NOT BETWEEN ((0.7240575452403386, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0)))) BETWEEN ((((vt0.c0, NULL, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c1)))) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))), highlight(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END, 0Xffffffff87e977e0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1, '-497076227', vt0.c0)) NOT BETWEEN ((0.7240575452403386, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0)))) BETWEEN ((((vt0.c0, NULL, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c1)))) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))), highlight(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END, 0Xffffffff87e977e0)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((((vt0.c1, '-497076227', vt0.c0)) NOT BETWEEN ((0.7240575452403386, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0)))) BETWEEN ((((vt0.c0, NULL, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c1)))) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))), highlight(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END, 0Xffffffff87e977e0)  NULLS LAST;
SELECT * FROM vt0, vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1, t0 NOT INDEXED, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0 NOT INDEXED, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0 NOT INDEXED, vt0 WHERE (x'');
SELECT ALL * FROM t0, vt0, vt1 WHERE (CAST(((t0.c50) BETWEEN (x'') AND (vt1.c0)) AS NUMERIC)) ORDER BY (- (vt1.c0 COLLATE RTRIM)), ((((vt0.c0)<=(t0.c50))) NOT BETWEEN (((t0.c20) BETWEEN (t0.c50) AND (vt1.c0))) AND ((((vt1.c0, t0.c20, t0.c20, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, t0.c50, t0.c20, vt0.c0, 0.8844006883543547)) AND ((t0.c50, vt0.c0, vt0.c1, t0.c50, vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c50) BETWEEN (x'') AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (- (vt1.c0 COLLATE RTRIM)), ((((vt0.c0)<=(t0.c50))) NOT BETWEEN (((t0.c20) BETWEEN (t0.c50) AND (vt1.c0))) AND ((((vt1.c0, t0.c20, t0.c20, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, t0.c50, t0.c20, vt0.c0, 0.8844006883543547)) AND ((t0.c50, vt0.c0, vt0.c1, t0.c50, vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (CAST(((t0.c50) BETWEEN (x'') AND (vt1.c0)) AS NUMERIC)) ORDER BY (- (vt1.c0 COLLATE RTRIM)), ((((vt0.c0)<=(t0.c50))) NOT BETWEEN (((t0.c20) BETWEEN (t0.c50) AND (vt1.c0))) AND ((((vt1.c0, t0.c20, t0.c20, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, t0.c50, t0.c20, vt0.c0, 0.8844006883543547)) AND ((t0.c50, vt0.c0, vt0.c1, t0.c50, vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c50) BETWEEN (x'') AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (- (vt1.c0 COLLATE RTRIM)), ((((vt0.c0)<=(t0.c50))) NOT BETWEEN (((t0.c20) BETWEEN (t0.c50) AND (vt1.c0))) AND ((((vt1.c0, t0.c20, t0.c20, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, t0.c50, t0.c20, vt0.c0, 0.8844006883543547)) AND ((t0.c50, vt0.c0, vt0.c1, t0.c50, vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (CAST(((t0.c50) BETWEEN (x'') AND (vt1.c0)) AS NUMERIC)) ORDER BY (- (vt1.c0 COLLATE RTRIM)), ((((vt0.c0)<=(t0.c50))) NOT BETWEEN (((t0.c20) BETWEEN (t0.c50) AND (vt1.c0))) AND ((((vt1.c0, t0.c20, t0.c20, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, t0.c50, t0.c20, vt0.c0, 0.8844006883543547)) AND ((t0.c50, vt0.c0, vt0.c1, t0.c50, vt0.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON CASE ((t0.c50)>=(t0.c20))  WHEN UNLIKELY(t0.c20) THEN (- (t0.c50)) WHEN (((vt1.c0, t0.c50, vt1.c0)) NOT BETWEEN ((t0.c20, t0.c50, t0.c20)) AND ((t0.c50, t0.c20, t0.c20))) THEN ((((t0.c50)AND(vt1.c0)))OR(t0.c20)) WHEN vt1.c0 COLLATE BINARY THEN ((t0.c20)=(t0.c50)) END WHERE ((((((((((((t0.c50)) NOT BETWEEN ((t0.c20)) AND ((vt1.c0))))OR((('-195461895') IS FALSE))))OR(((t0.c50) IS TRUE))))OR(((NULL) BETWEEN (t0.c20) AND (t0.c50)))))OR(CASE WHEN t0.c20 THEN t0.c50 END)));
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c50)) NOT BETWEEN ((t0.c20)) AND ((vt1.c0))))OR((('-195461895') IS FALSE))))OR(((t0.c50) IS TRUE))))OR(((NULL) BETWEEN (t0.c20) AND (t0.c50)))))OR(CASE WHEN t0.c20 THEN t0.c50 END))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON CASE ((t0.c50)>=(t0.c20))  WHEN UNLIKELY(t0.c20) THEN (- (t0.c50)) WHEN (((vt1.c0, t0.c50, vt1.c0)) NOT BETWEEN ((t0.c20, t0.c50, t0.c20)) AND ((t0.c50, t0.c20, t0.c20))) THEN ((((t0.c50)AND(vt1.c0)))OR(t0.c20)) WHEN vt1.c0 COLLATE BINARY THEN ((t0.c20)=(t0.c50)) END);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON CASE ((t0.c50)>=(t0.c20))  WHEN UNLIKELY(t0.c20) THEN (- (t0.c50)) WHEN (((vt1.c0, t0.c50, vt1.c0)) NOT BETWEEN ((t0.c20, t0.c50, t0.c20)) AND ((t0.c50, t0.c20, t0.c20))) THEN ((((t0.c50)AND(vt1.c0)))OR(t0.c20)) WHEN vt1.c0 COLLATE BINARY THEN ((t0.c20)=(t0.c50)) END WHERE ((((((((((((t0.c50)) NOT BETWEEN ((t0.c20)) AND ((vt1.c0))))OR((('-195461895') IS FALSE))))OR(((t0.c50) IS TRUE))))OR(((NULL) BETWEEN (t0.c20) AND (t0.c50)))))OR(CASE WHEN t0.c20 THEN t0.c50 END)));
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c50)) NOT BETWEEN ((t0.c20)) AND ((vt1.c0))))OR((('-195461895') IS FALSE))))OR(((t0.c50) IS TRUE))))OR(((NULL) BETWEEN (t0.c20) AND (t0.c50)))))OR(CASE WHEN t0.c20 THEN t0.c50 END))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON CASE ((t0.c50)>=(t0.c20))  WHEN UNLIKELY(t0.c20) THEN (- (t0.c50)) WHEN (((vt1.c0, t0.c50, vt1.c0)) NOT BETWEEN ((t0.c20, t0.c50, t0.c20)) AND ((t0.c50, t0.c20, t0.c20))) THEN ((((t0.c50)AND(vt1.c0)))OR(t0.c20)) WHEN vt1.c0 COLLATE BINARY THEN ((t0.c20)=(t0.c50)) END);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON CASE ((t0.c50)>=(t0.c20))  WHEN UNLIKELY(t0.c20) THEN (- (t0.c50)) WHEN (((vt1.c0, t0.c50, vt1.c0)) NOT BETWEEN ((t0.c20, t0.c50, t0.c20)) AND ((t0.c50, t0.c20, t0.c20))) THEN ((((t0.c50)AND(vt1.c0)))OR(t0.c20)) WHEN vt1.c0 COLLATE BINARY THEN ((t0.c20)=(t0.c50)) END WHERE ((((((((((((t0.c50)) NOT BETWEEN ((t0.c20)) AND ((vt1.c0))))OR((('-195461895') IS FALSE))))OR(((t0.c50) IS TRUE))))OR(((NULL) BETWEEN (t0.c20) AND (t0.c50)))))OR(CASE WHEN t0.c20 THEN t0.c50 END)));
SELECT ALL * FROM t0 WHERE (t0.c20);
SELECT SUM(count) FROM (SELECT ((t0.c20) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c20);
SELECT SUM(count) FROM (SELECT ((t0.c20) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c20);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (('293442936')) AND ((((vt1.c0) NOT BETWEEN (0.6505881738331635) AND (vt1.c0)))))) ORDER BY CASE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, '-195461895') WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0) ISNULL) ELSE vt1.c0 END  NULLS LAST, CASE WHEN UNLIKELY(vt1.c0) THEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN (('293442936')) AND ((((vt1.c0) NOT BETWEEN (0.6505881738331635) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, '-195461895') WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0) ISNULL) ELSE vt1.c0 END  NULLS LAST, CASE WHEN UNLIKELY(vt1.c0) THEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (('293442936')) AND ((((vt1.c0) NOT BETWEEN (0.6505881738331635) AND (vt1.c0)))))) ORDER BY CASE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, '-195461895') WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0) ISNULL) ELSE vt1.c0 END  NULLS LAST, CASE WHEN UNLIKELY(vt1.c0) THEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN (('293442936')) AND ((((vt1.c0) NOT BETWEEN (0.6505881738331635) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, '-195461895') WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0) ISNULL) ELSE vt1.c0 END  NULLS LAST, CASE WHEN UNLIKELY(vt1.c0) THEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (('293442936')) AND ((((vt1.c0) NOT BETWEEN (0.6505881738331635) AND (vt1.c0)))))) ORDER BY CASE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, '-195461895') WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0) ISNULL) ELSE vt1.c0 END  NULLS LAST, CASE WHEN UNLIKELY(vt1.c0) THEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) END ASC;
SELECT * FROM vt0, vt1, t0 WHERE (((((((((((vt1.c0)OR(0.5189402320317449)))OR(t0.c20)))OR(vt0.c0)))OR(vt1.c0)))IS NOT((+ (t0.c50))))) ORDER BY (NOT (((((t0.c50)OR(0.663282073130098)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(0.5189402320317449)))OR(t0.c20)))OR(vt0.c0)))OR(vt1.c0)))IS NOT((+ (t0.c50))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (NOT (((((t0.c50)OR(0.663282073130098)))AND(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0, vt1, t0 WHERE (((((((((((vt1.c0)OR(0.5189402320317449)))OR(t0.c20)))OR(vt0.c0)))OR(vt1.c0)))IS NOT((+ (t0.c50))))) ORDER BY (NOT (((((t0.c50)OR(0.663282073130098)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(0.5189402320317449)))OR(t0.c20)))OR(vt0.c0)))OR(vt1.c0)))IS NOT((+ (t0.c50))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (NOT (((((t0.c50)OR(0.663282073130098)))AND(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0, vt1, t0 WHERE (((((((((((vt1.c0)OR(0.5189402320317449)))OR(t0.c20)))OR(vt0.c0)))OR(vt1.c0)))IS NOT((+ (t0.c50))))) ORDER BY (NOT (((((t0.c50)OR(0.663282073130098)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (CASE (vt1.c0 IN ())  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN (vt1.c0 IN ()) END) ORDER BY CASE ((((vt1.c0)AND(0.5025990206122687)))OR(vt1.c0))  WHEN CAST('0.011924735240444795' AS INTEGER) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN NULL THEN CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 END  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (vt1.c0 IN ())  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1 ORDER BY CASE ((((vt1.c0)AND(0.5025990206122687)))OR(vt1.c0))  WHEN CAST('0.011924735240444795' AS INTEGER) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN NULL THEN CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 END  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CASE (vt1.c0 IN ())  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN (vt1.c0 IN ()) END) ORDER BY CASE ((((vt1.c0)AND(0.5025990206122687)))OR(vt1.c0))  WHEN CAST('0.011924735240444795' AS INTEGER) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN NULL THEN CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 END  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (vt1.c0 IN ())  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1 ORDER BY CASE ((((vt1.c0)AND(0.5025990206122687)))OR(vt1.c0))  WHEN CAST('0.011924735240444795' AS INTEGER) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN NULL THEN CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 END  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CASE (vt1.c0 IN ())  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN (vt1.c0 IN ()) END) ORDER BY CASE ((((vt1.c0)AND(0.5025990206122687)))OR(vt1.c0))  WHEN CAST('0.011924735240444795' AS INTEGER) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN NULL THEN CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 END  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (IFNULL(((((t0.c20)OR(t0.c50)))AND(t0.c50)), (- (t0.c50)))) ORDER BY ((t0.c50 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((((t0.c20)OR(t0.c50)))AND(t0.c50)), (- (t0.c50)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c50 COLLATE RTRIM) IS FALSE)  NULLS LAST);
SELECT * FROM t0 WHERE (IFNULL(((((t0.c20)OR(t0.c50)))AND(t0.c50)), (- (t0.c50)))) ORDER BY ((t0.c50 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((((t0.c20)OR(t0.c50)))AND(t0.c50)), (- (t0.c50)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c50 COLLATE RTRIM) IS FALSE)  NULLS LAST);
SELECT * FROM t0 WHERE (IFNULL(((((t0.c20)OR(t0.c50)))AND(t0.c50)), (- (t0.c50)))) ORDER BY ((t0.c50 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE ((+ ((- (vt0.c0))))) ORDER BY CASE ((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c20))  WHEN (- (t0.c50)) THEN (+ (vt0.c1)) ELSE ((('279932831'))<=((vt0.c1))) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE ((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c20))  WHEN (- (t0.c50)) THEN (+ (vt0.c1)) ELSE ((('279932831'))<=((vt0.c1))) END ASC);
SELECT ALL * FROM vt0, t0 WHERE ((+ ((- (vt0.c0))))) ORDER BY CASE ((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c20))  WHEN (- (t0.c50)) THEN (+ (vt0.c1)) ELSE ((('279932831'))<=((vt0.c1))) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE ((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c20))  WHEN (- (t0.c50)) THEN (+ (vt0.c1)) ELSE ((('279932831'))<=((vt0.c1))) END ASC);
SELECT ALL * FROM vt0, t0 WHERE ((+ ((- (vt0.c0))))) ORDER BY CASE ((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c20))  WHEN (- (t0.c50)) THEN (+ (vt0.c1)) ELSE ((('279932831'))<=((vt0.c1))) END ASC;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((CASE vt1.c0  WHEN t0.c50 THEN '0.5189402320317449' WHEN t0.c50 THEN t0.c20 WHEN t0.c20 THEN t0.c20 WHEN t0.c20 THEN vt1.c0 WHEN t0.c50 THEN t0.c20 ELSE t0.c50 END) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((NOT (vt1.c0))))) ORDER BY ((CAST(t0.c20 AS BLOB))>>(((t0.c20) NOT BETWEEN (t0.c20) AND (vt1.c0)))), CASE CASE WHEN t0.c20 THEN t0.c20 WHEN vt1.c0 THEN t0.c20 WHEN '-497076227' THEN vt1.c0 END  WHEN (~ (t0.c50)) THEN ((vt1.c0)/(t0.c20)) ELSE ((vt1.c0) NOT NULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN t0.c50 THEN '0.5189402320317449' WHEN t0.c50 THEN t0.c20 WHEN t0.c20 THEN t0.c20 WHEN t0.c20 THEN vt1.c0 WHEN t0.c50 THEN t0.c20 ELSE t0.c50 END) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((NOT (vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((CAST(t0.c20 AS BLOB))>>(((t0.c20) NOT BETWEEN (t0.c20) AND (vt1.c0)))), CASE CASE WHEN t0.c20 THEN t0.c20 WHEN vt1.c0 THEN t0.c20 WHEN '-497076227' THEN vt1.c0 END  WHEN (~ (t0.c50)) THEN ((vt1.c0)/(t0.c20)) ELSE ((vt1.c0) NOT NULL) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((CASE vt1.c0  WHEN t0.c50 THEN '0.5189402320317449' WHEN t0.c50 THEN t0.c20 WHEN t0.c20 THEN t0.c20 WHEN t0.c20 THEN vt1.c0 WHEN t0.c50 THEN t0.c20 ELSE t0.c50 END) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((NOT (vt1.c0))))) ORDER BY ((CAST(t0.c20 AS BLOB))>>(((t0.c20) NOT BETWEEN (t0.c20) AND (vt1.c0)))), CASE CASE WHEN t0.c20 THEN t0.c20 WHEN vt1.c0 THEN t0.c20 WHEN '-497076227' THEN vt1.c0 END  WHEN (~ (t0.c50)) THEN ((vt1.c0)/(t0.c20)) ELSE ((vt1.c0) NOT NULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN t0.c50 THEN '0.5189402320317449' WHEN t0.c50 THEN t0.c20 WHEN t0.c20 THEN t0.c20 WHEN t0.c20 THEN vt1.c0 WHEN t0.c50 THEN t0.c20 ELSE t0.c50 END) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((NOT (vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((CAST(t0.c20 AS BLOB))>>(((t0.c20) NOT BETWEEN (t0.c20) AND (vt1.c0)))), CASE CASE WHEN t0.c20 THEN t0.c20 WHEN vt1.c0 THEN t0.c20 WHEN '-497076227' THEN vt1.c0 END  WHEN (~ (t0.c50)) THEN ((vt1.c0)/(t0.c20)) ELSE ((vt1.c0) NOT NULL) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((CASE vt1.c0  WHEN t0.c50 THEN '0.5189402320317449' WHEN t0.c50 THEN t0.c20 WHEN t0.c20 THEN t0.c20 WHEN t0.c20 THEN vt1.c0 WHEN t0.c50 THEN t0.c20 ELSE t0.c50 END) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND ((NOT (vt1.c0))))) ORDER BY ((CAST(t0.c20 AS BLOB))>>(((t0.c20) NOT BETWEEN (t0.c20) AND (vt1.c0)))), CASE CASE WHEN t0.c20 THEN t0.c20 WHEN vt1.c0 THEN t0.c20 WHEN '-497076227' THEN vt1.c0 END  WHEN (~ (t0.c50)) THEN ((vt1.c0)/(t0.c20)) ELSE ((vt1.c0) NOT NULL) END  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1 WHERE (t0.c20);
SELECT SUM(count) FROM (SELECT ((t0.c20) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (t0.c20);
SELECT SUM(count) FROM (SELECT ((t0.c20) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (t0.c20);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END, (- (vt0.c1)), (~ (vt0.c1)))) AND ((CASE WHEN t0.c50 THEN vt0.c0 ELSE t0.c20 END, NULL, ((t0.c20) NOT BETWEEN (x'') AND (t0.c50)))))) ORDER BY (~ (vt1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END, (- (vt0.c1)), (~ (vt0.c1)))) AND ((CASE WHEN t0.c50 THEN vt0.c0 ELSE t0.c20 END, NULL, ((t0.c20) NOT BETWEEN (x'') AND (t0.c50)))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (~ (vt1.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END, (- (vt0.c1)), (~ (vt0.c1)))) AND ((CASE WHEN t0.c50 THEN vt0.c0 ELSE t0.c20 END, NULL, ((t0.c20) NOT BETWEEN (x'') AND (t0.c50)))))) ORDER BY (~ (vt1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END, (- (vt0.c1)), (~ (vt0.c1)))) AND ((CASE WHEN t0.c50 THEN vt0.c0 ELSE t0.c20 END, NULL, ((t0.c20) NOT BETWEEN (x'') AND (t0.c50)))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (~ (vt1.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END, (- (vt0.c1)), (~ (vt0.c1)))) AND ((CASE WHEN t0.c50 THEN vt0.c0 ELSE t0.c20 END, NULL, ((t0.c20) NOT BETWEEN (x'') AND (t0.c50)))))) ORDER BY (~ (vt1.c0)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN 0.44871112737577123 THEN CAST(t0.c20 AS TEXT) WHEN vt0.c1 COLLATE BINARY THEN ((0.32868702718366527) BETWEEN (t0.c20) AND (t0.c50)) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN CAST(t0.c20 AS INTEGER) ELSE ((t0.c20)+(t0.c20)) END) ORDER BY t0.c50 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.44871112737577123 THEN CAST(t0.c20 AS TEXT) WHEN vt0.c1 COLLATE BINARY THEN ((0.32868702718366527) BETWEEN (t0.c20) AND (t0.c50)) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN CAST(t0.c20 AS INTEGER) ELSE ((t0.c20)+(t0.c20)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c50 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN 0.44871112737577123 THEN CAST(t0.c20 AS TEXT) WHEN vt0.c1 COLLATE BINARY THEN ((0.32868702718366527) BETWEEN (t0.c20) AND (t0.c50)) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN CAST(t0.c20 AS INTEGER) ELSE ((t0.c20)+(t0.c20)) END) ORDER BY t0.c50 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.44871112737577123 THEN CAST(t0.c20 AS TEXT) WHEN vt0.c1 COLLATE BINARY THEN ((0.32868702718366527) BETWEEN (t0.c20) AND (t0.c50)) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN CAST(t0.c20 AS INTEGER) ELSE ((t0.c20)+(t0.c20)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c50 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN 0.44871112737577123 THEN CAST(t0.c20 AS TEXT) WHEN vt0.c1 COLLATE BINARY THEN ((0.32868702718366527) BETWEEN (t0.c20) AND (t0.c50)) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN CAST(t0.c20 AS INTEGER) ELSE ((t0.c20)+(t0.c20)) END) ORDER BY t0.c50 ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((NULL) ISNULL));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0)) NOT BETWEEN (('㻅 4')) AND ((((vt0.c0) IS TRUE)))) WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0)) NOT BETWEEN (('㻅 4')) AND ((((vt0.c0) IS TRUE)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0)) NOT BETWEEN (('㻅 4')) AND ((((vt0.c0) IS TRUE)))) WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0)) NOT BETWEEN (('㻅 4')) AND ((((vt0.c0) IS TRUE)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0)) NOT BETWEEN (('㻅 4')) AND ((((vt0.c0) IS TRUE)))) WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS TEXT));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)/(vt0.c0)))<=((vt0.c0 IN (vt0.c0))))) ORDER BY ((((vt1.c0) ISNULL)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt0.c0)))<=((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0) ISNULL)) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)/(vt0.c0)))<=((vt0.c0 IN (vt0.c0))))) ORDER BY ((((vt1.c0) ISNULL)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt0.c0)))<=((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0) ISNULL)) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)/(vt0.c0)))<=((vt0.c0 IN (vt0.c0))))) ORDER BY ((((vt1.c0) ISNULL)) IS FALSE)  NULLS LAST;
SELECT * FROM vt0, vt1 NATURAL JOIN t0 WHERE (((- (t0.c20)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (t0.c20)) IN ())) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN t0);
SELECT * FROM vt0, vt1 NATURAL JOIN t0 WHERE (((- (t0.c20)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (t0.c20)) IN ())) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN t0);
SELECT * FROM vt0, vt1 NATURAL JOIN t0 WHERE (((- (t0.c20)) IN ()));
SELECT * FROM vt1 WHERE ((((+ (vt1.c0))) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) AND (((((vt1.c0)AND('t')))OR(vt1.c0))))) ORDER BY (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))<=((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) AND (((((vt1.c0)AND('t')))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))<=((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))));
SELECT * FROM vt1 WHERE ((((+ (vt1.c0))) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) AND (((((vt1.c0)AND('t')))OR(vt1.c0))))) ORDER BY (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))<=((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) AND (((((vt1.c0)AND('t')))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))<=((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))));
SELECT * FROM vt1 WHERE ((((+ (vt1.c0))) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) AND (((((vt1.c0)AND('t')))OR(vt1.c0))))) ORDER BY (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))<=((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(1791434573 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(1791434573 AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(1791434573 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(1791434573 AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(1791434573 AS INTEGER));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(0.27092022275142447)) IN ()) WHERE (((((((vt0.c0)IS(vt0.c1)))OR((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))))))AND(((vt0.c1)>=(vt1.c0))))) ORDER BY vt1.c0 COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)IS(vt0.c1)))OR((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))))))AND(((vt0.c1)>=(vt1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(0.27092022275142447)) IN ()) ORDER BY vt1.c0 COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(0.27092022275142447)) IN ()) WHERE (((((((vt0.c0)IS(vt0.c1)))OR((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))))))AND(((vt0.c1)>=(vt1.c0))))) ORDER BY vt1.c0 COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)IS(vt0.c1)))OR((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))))))AND(((vt0.c1)>=(vt1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(0.27092022275142447)) IN ()) ORDER BY vt1.c0 COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(0.27092022275142447)) IN ()) WHERE (((((((vt0.c0)IS(vt0.c1)))OR((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))))))AND(((vt0.c1)>=(vt1.c0))))) ORDER BY vt1.c0 COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((x'625e5676')) BETWEEN ((((t0.c20)IS NOT(t0.c20)))) AND ((((((t0.c20)OR(t0.c20)))OR('t')))))) ORDER BY ((t0.c50) NOT BETWEEN (CASE WHEN t0.c50 THEN t0.c50 ELSE t0.c20 END) AND (t0.c50)) ASC, ((t0.c50 COLLATE BINARY) NOT BETWEEN (((t0.c20)LIKE(t0.c20))) AND (t0.c50 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'625e5676')) BETWEEN ((((t0.c20)IS NOT(t0.c20)))) AND ((((((t0.c20)OR(t0.c20)))OR('t')))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c50) NOT BETWEEN (CASE WHEN t0.c50 THEN t0.c50 ELSE t0.c20 END) AND (t0.c50)) ASC, ((t0.c50 COLLATE BINARY) NOT BETWEEN (((t0.c20)LIKE(t0.c20))) AND (t0.c50 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((x'625e5676')) BETWEEN ((((t0.c20)IS NOT(t0.c20)))) AND ((((((t0.c20)OR(t0.c20)))OR('t')))))) ORDER BY ((t0.c50) NOT BETWEEN (CASE WHEN t0.c50 THEN t0.c50 ELSE t0.c20 END) AND (t0.c50)) ASC, ((t0.c50 COLLATE BINARY) NOT BETWEEN (((t0.c20)LIKE(t0.c20))) AND (t0.c50 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'625e5676')) BETWEEN ((((t0.c20)IS NOT(t0.c20)))) AND ((((((t0.c20)OR(t0.c20)))OR('t')))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c50) NOT BETWEEN (CASE WHEN t0.c50 THEN t0.c50 ELSE t0.c20 END) AND (t0.c50)) ASC, ((t0.c50 COLLATE BINARY) NOT BETWEEN (((t0.c20)LIKE(t0.c20))) AND (t0.c50 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((x'625e5676')) BETWEEN ((((t0.c20)IS NOT(t0.c20)))) AND ((((((t0.c20)OR(t0.c20)))OR('t')))))) ORDER BY ((t0.c50) NOT BETWEEN (CASE WHEN t0.c50 THEN t0.c50 ELSE t0.c20 END) AND (t0.c50)) ASC, ((t0.c50 COLLATE BINARY) NOT BETWEEN (((t0.c20)LIKE(t0.c20))) AND (t0.c50 COLLATE RTRIM))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((TYPEOF(vt1.c0)) BETWEEN (CASE vt1.c0  WHEN x'' THEN vt1.c0 END) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(vt1.c0)) BETWEEN (CASE vt1.c0  WHEN x'' THEN vt1.c0 END) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((TYPEOF(vt1.c0)) BETWEEN (CASE vt1.c0  WHEN x'' THEN vt1.c0 END) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(vt1.c0)) BETWEEN (CASE vt1.c0  WHEN x'' THEN vt1.c0 END) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((TYPEOF(vt1.c0)) BETWEEN (CASE vt1.c0  WHEN x'' THEN vt1.c0 END) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT * FROM vt1, vt0 WHERE (UPPER(vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(vt1.c0)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (UPPER(vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(vt1.c0)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (UPPER(vt1.c0));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((((vt1.c0)-(t0.c50))) BETWEEN ((NULL IN ())) AND (((t0.c50)*(vt1.c0)))) INNER JOIN vt1 ON ((t0.c20 IN (vt0.c0, vt1.c0)) IN (((((vt0.c1)AND(t0.c20)))AND(vt0.c0)), vt0.c0)) WHERE ((((((((0xffffffff87e977e0, vt0.c1, vt0.c1)) BETWEEN ((t0.c20, vt0.c0, t0.c50)) AND ((vt0.c0, vt1.c0, t0.c20))))AND((NOT (vt0.c1)))))OR(CASE WHEN vt0.c1 THEN t0.c50 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((((0xffffffff87e977e0, vt0.c1, vt0.c1)) BETWEEN ((t0.c20, vt0.c0, t0.c50)) AND ((vt0.c0, vt1.c0, t0.c20))))AND((NOT (vt0.c1)))))OR(CASE WHEN vt0.c1 THEN t0.c50 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((vt1.c0)-(t0.c50))) BETWEEN ((NULL IN ())) AND (((t0.c50)*(vt1.c0)))) INNER JOIN vt1 ON ((t0.c20 IN (vt0.c0, vt1.c0)) IN (((((vt0.c1)AND(t0.c20)))AND(vt0.c0)), vt0.c0)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((((vt1.c0)-(t0.c50))) BETWEEN ((NULL IN ())) AND (((t0.c50)*(vt1.c0)))) INNER JOIN vt1 ON ((t0.c20 IN (vt0.c0, vt1.c0)) IN (((((vt0.c1)AND(t0.c20)))AND(vt0.c0)), vt0.c0)) WHERE ((((((((0xffffffff87e977e0, vt0.c1, vt0.c1)) BETWEEN ((t0.c20, vt0.c0, t0.c50)) AND ((vt0.c0, vt1.c0, t0.c20))))AND((NOT (vt0.c1)))))OR(CASE WHEN vt0.c1 THEN t0.c50 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((((0xffffffff87e977e0, vt0.c1, vt0.c1)) BETWEEN ((t0.c20, vt0.c0, t0.c50)) AND ((vt0.c0, vt1.c0, t0.c20))))AND((NOT (vt0.c1)))))OR(CASE WHEN vt0.c1 THEN t0.c50 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((vt1.c0)-(t0.c50))) BETWEEN ((NULL IN ())) AND (((t0.c50)*(vt1.c0)))) INNER JOIN vt1 ON ((t0.c20 IN (vt0.c0, vt1.c0)) IN (((((vt0.c1)AND(t0.c20)))AND(vt0.c0)), vt0.c0)));
SELECT * FROM vt0, t0, vt1 WHERE ((CAST(vt0.c1 AS BLOB) IN ())) ORDER BY ((t0.c20)<(vt0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((t0.c20)<(vt0.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM vt0, t0, vt1 WHERE ((CAST(vt0.c1 AS BLOB) IN ())) ORDER BY ((t0.c20)<(vt0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((t0.c20)<(vt0.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM vt0, t0, vt1 WHERE ((CAST(vt0.c1 AS BLOB) IN ())) ORDER BY ((t0.c20)<(vt0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN vt1 ON (- (NULL)) WHERE (((((vt0.c0)/(vt0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND ((((vt0.c1, vt1.c0, t0.c50))>=((vt1.c0, vt0.c0, vt0.c1)))))) ORDER BY CASE WHEN ((vt0.c1)<<(vt0.c0)) THEN vt1.c0 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND ((((vt0.c1, vt1.c0, t0.c50))>=((vt1.c0, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN vt1 ON (- (NULL)) ORDER BY CASE WHEN ((vt0.c1)<<(vt0.c0)) THEN vt1.c0 COLLATE BINARY END ASC);
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN vt1 ON (- (NULL)) WHERE (((((vt0.c0)/(vt0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND ((((vt0.c1, vt1.c0, t0.c50))>=((vt1.c0, vt0.c0, vt0.c1)))))) ORDER BY CASE WHEN ((vt0.c1)<<(vt0.c0)) THEN vt1.c0 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND ((((vt0.c1, vt1.c0, t0.c50))>=((vt1.c0, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN vt1 ON (- (NULL)) ORDER BY CASE WHEN ((vt0.c1)<<(vt0.c0)) THEN vt1.c0 COLLATE BINARY END ASC);
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN vt1 ON (- (NULL)) WHERE (((((vt0.c0)/(vt0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND ((((vt0.c1, vt1.c0, t0.c50))>=((vt1.c0, vt0.c0, vt0.c1)))))) ORDER BY CASE WHEN ((vt0.c1)<<(vt0.c0)) THEN vt1.c0 COLLATE BINARY END ASC;
SELECT COUNT(*) FROM vt1 WHERE ((- (CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((- (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((- (CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((- (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((- (CAST(vt1.c0 AS REAL))));
SELECT COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN t0 ON (((+ (t0.c20))) NOT BETWEEN (CAST(NULL AS BLOB)) AND (CAST(vt0.c0 AS REAL))) WHERE ((((+ (vt0.c0))) NOTNULL)) ORDER BY (vt0.c0 COLLATE RTRIM IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON (((+ (t0.c20))) NOT BETWEEN (CAST(NULL AS BLOB)) AND (CAST(vt0.c0 AS REAL))) ORDER BY (vt0.c0 COLLATE RTRIM IN ()) DESC);
SELECT COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN t0 ON (((+ (t0.c20))) NOT BETWEEN (CAST(NULL AS BLOB)) AND (CAST(vt0.c0 AS REAL))) WHERE ((((+ (vt0.c0))) NOTNULL)) ORDER BY (vt0.c0 COLLATE RTRIM IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON (((+ (t0.c20))) NOT BETWEEN (CAST(NULL AS BLOB)) AND (CAST(vt0.c0 AS REAL))) ORDER BY (vt0.c0 COLLATE RTRIM IN ()) DESC);
SELECT COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN t0 ON (((+ (t0.c20))) NOT BETWEEN (CAST(NULL AS BLOB)) AND (CAST(vt0.c0 AS REAL))) WHERE ((((+ (vt0.c0))) NOTNULL)) ORDER BY (vt0.c0 COLLATE RTRIM IN ()) DESC;
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN TRIM(DISTINCT vt1.c0, vt1.c0) THEN CHAR(vt1.c0) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) ORDER BY (((vt1.c0 COLLATE NOCASE))>=((((x'')<>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(DISTINCT vt1.c0, vt1.c0) THEN CHAR(vt1.c0) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 COLLATE NOCASE))>=((((x'')<>(vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN TRIM(DISTINCT vt1.c0, vt1.c0) THEN CHAR(vt1.c0) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) ORDER BY (((vt1.c0 COLLATE NOCASE))>=((((x'')<>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(DISTINCT vt1.c0, vt1.c0) THEN CHAR(vt1.c0) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 COLLATE NOCASE))>=((((x'')<>(vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN TRIM(DISTINCT vt1.c0, vt1.c0) THEN CHAR(vt1.c0) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) ORDER BY (((vt1.c0 COLLATE NOCASE))>=((((x'')<>(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) ISNULL)) IS FALSE)) ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE NOCASE ASC, ((vt1.c0 COLLATE NOCASE) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE NOCASE ASC, ((vt1.c0 COLLATE NOCASE) ISNULL)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) ISNULL)) IS FALSE)) ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE NOCASE ASC, ((vt1.c0 COLLATE NOCASE) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE NOCASE ASC, ((vt1.c0 COLLATE NOCASE) ISNULL)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) ISNULL)) IS FALSE)) ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE NOCASE ASC, ((vt1.c0 COLLATE NOCASE) ISNULL)  NULLS FIRST;
SELECT * FROM vt0, vt1, t0 WHERE ((NOT (CAST(t0.c50 AS NUMERIC)))) ORDER BY ((vt0.c1)==(vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(t0.c50 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((vt0.c1)=(vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0, vt1, t0 WHERE ((NOT (CAST(t0.c50 AS NUMERIC)))) ORDER BY ((vt0.c1)==(vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(t0.c50 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((vt0.c1)=(vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0, vt1, t0 WHERE ((NOT (CAST(t0.c50 AS NUMERIC)))) ORDER BY ((vt0.c1)==(vt0.c0)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((((vt1.c0 IN ()))AND(CAST(t0.c50 AS TEXT))))OR((((t0.c50))>((t0.c20)))))) ORDER BY (NOT (t0.c20)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))AND(CAST(t0.c50 AS TEXT))))OR((((t0.c50))>((t0.c20)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (NOT (t0.c20)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((((vt1.c0 IN ()))AND(CAST(t0.c50 AS TEXT))))OR((((t0.c50))>((t0.c20)))))) ORDER BY (NOT (t0.c20)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))AND(CAST(t0.c50 AS TEXT))))OR((((t0.c50))>((t0.c20)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (NOT (t0.c20)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((((vt1.c0 IN ()))AND(CAST(t0.c50 AS TEXT))))OR((((t0.c50))>((t0.c20)))))) ORDER BY (NOT (t0.c20)) ASC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (((CASE vt1.c0  WHEN '1791434573' THEN vt0.c1 ELSE vt0.c1 END)*((vt1.c0 IN ())))) ORDER BY CASE WHEN (vt1.c0 IN (vt0.c0, vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c1) BETWEEN ('镸dV+}3%[') AND (vt0.c1)) WHEN ((vt1.c0)&(vt0.c0)) THEN (- (vt1.c0)) ELSE (NOT (vt1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN '1791434573' THEN vt0.c1 ELSE vt0.c1 END)*((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN (vt1.c0 IN (vt0.c0, vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c1) BETWEEN ('镸dV+}3%[') AND (vt0.c1)) WHEN ((vt1.c0)&(vt0.c0)) THEN (- (vt1.c0)) ELSE (NOT (vt1.c0)) END DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (((CASE vt1.c0  WHEN '1791434573' THEN vt0.c1 ELSE vt0.c1 END)*((vt1.c0 IN ())))) ORDER BY CASE WHEN (vt1.c0 IN (vt0.c0, vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c1) BETWEEN ('镸dV+}3%[') AND (vt0.c1)) WHEN ((vt1.c0)&(vt0.c0)) THEN (- (vt1.c0)) ELSE (NOT (vt1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN '1791434573' THEN vt0.c1 ELSE vt0.c1 END)*((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN (vt1.c0 IN (vt0.c0, vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c1) BETWEEN ('镸dV+}3%[') AND (vt0.c1)) WHEN ((vt1.c0)&(vt0.c0)) THEN (- (vt1.c0)) ELSE (NOT (vt1.c0)) END DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (((CASE vt1.c0  WHEN '1791434573' THEN vt0.c1 ELSE vt0.c1 END)*((vt1.c0 IN ())))) ORDER BY CASE WHEN (vt1.c0 IN (vt0.c0, vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c1) BETWEEN ('镸dV+}3%[') AND (vt0.c1)) WHEN ((vt1.c0)&(vt0.c0)) THEN (- (vt1.c0)) ELSE (NOT (vt1.c0)) END DESC  NULLS LAST;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON SQLITE_VERSION() WHERE (((((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))GLOB(((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))GLOB(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON SQLITE_VERSION());
SELECT ALL * FROM vt1 INNER JOIN vt0 ON SQLITE_VERSION() WHERE (((((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))GLOB(((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))GLOB(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON SQLITE_VERSION());
SELECT ALL * FROM vt1 INNER JOIN vt0 ON SQLITE_VERSION() WHERE (((((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))GLOB(((vt1.c0) IS TRUE))));
SELECT * FROM vt1, vt0 INDEXED BY i2 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE RTRIM) ORDER BY (((NOT (vt1.c0))) BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt1.c0))) AND (0.2170132390946513)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 INDEXED BY i2 ORDER BY (((NOT (vt1.c0))) BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt1.c0))) AND (0.2170132390946513)) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 INDEXED BY i2 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE RTRIM) ORDER BY (((NOT (vt1.c0))) BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt1.c0))) AND (0.2170132390946513)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 INDEXED BY i2 ORDER BY (((NOT (vt1.c0))) BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt1.c0))) AND (0.2170132390946513)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE ((((vt1.c0) NOTNULL) IN ())) ORDER BY LIKE(vt1.c0 COLLATE RTRIM, CAST(vt1.c0 AS NUMERIC), 'H') ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt1 ORDER BY LIKE(vt1.c0 COLLATE RTRIM, CAST(vt1.c0 AS NUMERIC), 'H') ASC);
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE ((((vt1.c0) NOTNULL) IN ())) ORDER BY LIKE(vt1.c0 COLLATE RTRIM, CAST(vt1.c0 AS NUMERIC), 'H') ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt1 ORDER BY LIKE(vt1.c0 COLLATE RTRIM, CAST(vt1.c0 AS NUMERIC), 'H') ASC);
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE ((((vt1.c0) NOTNULL) IN ())) ORDER BY LIKE(vt1.c0 COLLATE RTRIM, CAST(vt1.c0 AS NUMERIC), 'H') ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((((((((((vt0.c0 IN ()))AND(CAST(vt1.c0 AS REAL))))AND((vt0.c1 IN ()))))OR(ABS(vt1.c0))))AND(vt0.c1)))OR(((vt0.c0)LIKE(vt1.c0)))))AND(TYPEOF(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c0 IN ()))AND(CAST(vt1.c0 AS REAL))))AND((vt0.c1 IN ()))))OR(ABS(vt1.c0))))AND(vt0.c1)))OR(((vt0.c0)LIKE(vt1.c0)))))AND(TYPEOF(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((((((((((vt0.c0 IN ()))AND(CAST(vt1.c0 AS REAL))))AND((vt0.c1 IN ()))))OR(ABS(vt1.c0))))AND(vt0.c1)))OR(((vt0.c0)LIKE(vt1.c0)))))AND(TYPEOF(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c0 IN ()))AND(CAST(vt1.c0 AS REAL))))AND((vt0.c1 IN ()))))OR(ABS(vt1.c0))))AND(vt0.c1)))OR(((vt0.c0)LIKE(vt1.c0)))))AND(TYPEOF(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((((((((((vt0.c0 IN ()))AND(CAST(vt1.c0 AS REAL))))AND((vt0.c1 IN ()))))OR(ABS(vt1.c0))))AND(vt0.c1)))OR(((vt0.c0)LIKE(vt1.c0)))))AND(TYPEOF(vt1.c0))));
SELECT * FROM t0 WHERE (t0.c20) ORDER BY (((((t0.c20)) NOT BETWEEN ((x'')) AND ((t0.c50))))>(x'')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c20) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c20)) NOT BETWEEN ((x'')) AND ((t0.c50))))>(x'')) DESC);
SELECT * FROM t0 WHERE (t0.c20) ORDER BY (((((t0.c20)) NOT BETWEEN ((x'')) AND ((t0.c50))))>(x'')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c20) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c20)) NOT BETWEEN ((x'')) AND ((t0.c50))))>(x'')) DESC);
SELECT * FROM t0 WHERE (t0.c20) ORDER BY (((((t0.c20)) NOT BETWEEN ((x'')) AND ((t0.c50))))>(x'')) DESC;
SELECT ALL * FROM vt1 WHERE (((vt1.c0)IS(NULL)) COLLATE RTRIM) ORDER BY COALESCE(DISTINCT (((vt1.c0))>=((vt1.c0))), vt1.c0 COLLATE RTRIM)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)IS(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY COALESCE(DISTINCT (((vt1.c0))>=((vt1.c0))), vt1.c0 COLLATE RTRIM)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)IS(NULL)) COLLATE RTRIM) ORDER BY COALESCE(DISTINCT (((vt1.c0))>=((vt1.c0))), vt1.c0 COLLATE RTRIM)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)IS(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY COALESCE(DISTINCT (((vt1.c0))>=((vt1.c0))), vt1.c0 COLLATE RTRIM)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)IS(NULL)) COLLATE RTRIM) ORDER BY COALESCE(DISTINCT (((vt1.c0))>=((vt1.c0))), vt1.c0 COLLATE RTRIM)  NULLS LAST;
SELECT ALL * FROM vt0, vt1, t0 WHERE ((LIKELIHOOD(t0.c50, 0.9419646866932374) IN (t0.c20 COLLATE BINARY, vt0.c0)));
SELECT SUM(count) FROM (SELECT (((LIKELIHOOD(t0.c50, 0.9419646866932374) IN (t0.c20 COLLATE BINARY, vt0.c0))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((LIKELIHOOD(t0.c50, 0.9419646866932374) IN (t0.c20 COLLATE BINARY, vt0.c0)));
SELECT SUM(count) FROM (SELECT (((LIKELIHOOD(t0.c50, 0.9419646866932374) IN (t0.c20 COLLATE BINARY, vt0.c0))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((LIKELIHOOD(t0.c50, 0.9419646866932374) IN (t0.c20 COLLATE BINARY, vt0.c0)));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c20)-(vt0.c0)) IN ())) ORDER BY (((vt0.c0, vt0.c0, t0.c50)) NOT BETWEEN ((t0.c20 COLLATE BINARY, CASE WHEN vt0.c1 THEN vt0.c1 END, (((vt0.c1)) BETWEEN ((t0.c20)) AND ((t0.c20))))) AND ((CAST(vt0.c0 AS NUMERIC), vt0.c1 COLLATE NOCASE, ((((((((t0.c20)OR(vt0.c0)))AND(vt0.c0)))AND(t0.c50)))AND(t0.c50))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c20)-(vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0, vt0.c0, t0.c50)) NOT BETWEEN ((t0.c20 COLLATE BINARY, CASE WHEN vt0.c1 THEN vt0.c1 END, (((vt0.c1)) BETWEEN ((t0.c20)) AND ((t0.c20))))) AND ((CAST(vt0.c0 AS NUMERIC), vt0.c1 COLLATE NOCASE, ((((((((t0.c20)OR(vt0.c0)))AND(vt0.c0)))AND(t0.c50)))AND(t0.c50))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c20)-(vt0.c0)) IN ())) ORDER BY (((vt0.c0, vt0.c0, t0.c50)) NOT BETWEEN ((t0.c20 COLLATE BINARY, CASE WHEN vt0.c1 THEN vt0.c1 END, (((vt0.c1)) BETWEEN ((t0.c20)) AND ((t0.c20))))) AND ((CAST(vt0.c0 AS NUMERIC), vt0.c1 COLLATE NOCASE, ((((((((t0.c20)OR(vt0.c0)))AND(vt0.c0)))AND(t0.c50)))AND(t0.c50))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c20)-(vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0, vt0.c0, t0.c50)) NOT BETWEEN ((t0.c20 COLLATE BINARY, CASE WHEN vt0.c1 THEN vt0.c1 END, (((vt0.c1)) BETWEEN ((t0.c20)) AND ((t0.c20))))) AND ((CAST(vt0.c0 AS NUMERIC), vt0.c1 COLLATE NOCASE, ((((((((t0.c20)OR(vt0.c0)))AND(vt0.c0)))AND(t0.c50)))AND(t0.c50))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c20)-(vt0.c0)) IN ())) ORDER BY (((vt0.c0, vt0.c0, t0.c50)) NOT BETWEEN ((t0.c20 COLLATE BINARY, CASE WHEN vt0.c1 THEN vt0.c1 END, (((vt0.c1)) BETWEEN ((t0.c20)) AND ((t0.c20))))) AND ((CAST(vt0.c0 AS NUMERIC), vt0.c1 COLLATE NOCASE, ((((((((t0.c20)OR(vt0.c0)))AND(vt0.c0)))AND(t0.c50)))AND(t0.c50))))) ASC  NULLS LAST;
SELECT ALL * FROM t0 CROSS JOIN vt1 ON (((~ (t0.c20))) BETWEEN (CAST(t0.c20 AS NUMERIC)) AND (vt0.c1)) CROSS JOIN vt0 ON (((vt1.c0)%(vt1.c0)) IN ()) WHERE (((((((t0.c50) IS FALSE))AND(((NULL)==('-195461895')))))OR(((t0.c50) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c50) IS FALSE))AND(((NULL)==('-195461895')))))OR(((t0.c50) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((~ (t0.c20))) BETWEEN (CAST(t0.c20 AS NUMERIC)) AND (vt0.c1)) CROSS JOIN vt0 ON (((vt1.c0)%(vt1.c0)) IN ()));
SELECT ALL * FROM t0 CROSS JOIN vt1 ON (((~ (t0.c20))) BETWEEN (CAST(t0.c20 AS NUMERIC)) AND (vt0.c1)) CROSS JOIN vt0 ON (((vt1.c0)%(vt1.c0)) IN ()) WHERE (((((((t0.c50) IS FALSE))AND(((NULL)==('-195461895')))))OR(((t0.c50) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c50) IS FALSE))AND(((NULL)==('-195461895')))))OR(((t0.c50) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((~ (t0.c20))) BETWEEN (CAST(t0.c20 AS NUMERIC)) AND (vt0.c1)) CROSS JOIN vt0 ON (((vt1.c0)%(vt1.c0)) IN ()));
SELECT ALL * FROM t0 CROSS JOIN vt1 ON (((~ (t0.c20))) BETWEEN (CAST(t0.c20 AS NUMERIC)) AND (vt0.c1)) CROSS JOIN vt0 ON (((vt1.c0)%(vt1.c0)) IN ()) WHERE (((((((t0.c50) IS FALSE))AND(((NULL)==('-195461895')))))OR(((t0.c50) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))>(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))>(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))>(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))>(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))>(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))));
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((vt0.c1)) BETWEEN ((rtreenode(t0.c20, vt0.c0))) AND (((((t0.c50))<=((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((rtreenode(t0.c20, vt0.c0))) AND (((((t0.c50))<=((vt0.c0))))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((vt0.c1)) BETWEEN ((rtreenode(t0.c20, vt0.c0))) AND (((((t0.c50))<=((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((rtreenode(t0.c20, vt0.c0))) AND (((((t0.c50))<=((vt0.c0))))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((vt0.c1)) BETWEEN ((rtreenode(t0.c20, vt0.c0))) AND (((((t0.c50))<=((vt0.c0)))))));
SELECT * FROM vt1, t0 WHERE (((((((t0.c20) NOTNULL))OR((NOT (t0.c20)))))AND(CAST(t0.c50 AS NUMERIC)))) ORDER BY (TYPEOF(t0.c20) IN ());
SELECT SUM(count) FROM (SELECT ((((((((t0.c20) NOTNULL))OR((NOT (t0.c20)))))AND(CAST(t0.c50 AS NUMERIC)))) IS TRUE)  as count FROM vt1, t0 ORDER BY (TYPEOF(t0.c20) IN ()));
SELECT * FROM vt1, t0 WHERE (((((((t0.c20) NOTNULL))OR((NOT (t0.c20)))))AND(CAST(t0.c50 AS NUMERIC)))) ORDER BY (TYPEOF(t0.c20) IN ());
SELECT SUM(count) FROM (SELECT ((((((((t0.c20) NOTNULL))OR((NOT (t0.c20)))))AND(CAST(t0.c50 AS NUMERIC)))) IS TRUE)  as count FROM vt1, t0 ORDER BY (TYPEOF(t0.c20) IN ()));
SELECT * FROM vt1, t0 WHERE (((((((t0.c20) NOTNULL))OR((NOT (t0.c20)))))AND(CAST(t0.c50 AS NUMERIC)))) ORDER BY (TYPEOF(t0.c20) IN ());
SELECT ALL * FROM t0, vt1, vt0 WHERE ((0.42812229140177427 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.42812229140177427 IN ())) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((0.42812229140177427 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.42812229140177427 IN ())) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((0.42812229140177427 IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT))!=(((vt0.c0)>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS TEXT))!=(((vt0.c0)>(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT))!=(((vt0.c0)>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS TEXT))!=(((vt0.c0)>(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT))!=(((vt0.c0)>(vt0.c1)))));
SELECT * FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((vt0.c1)OR(((vt0.c0) BETWEEN (t0.c20) AND (vt0.c0)))))OR((+ (vt1.c0)))) WHERE (NULL) ORDER BY ((CAST(t0.c50 AS BLOB))*(((vt1.c0) BETWEEN (t0.c50) AND (t0.c50))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((vt0.c1)OR(((vt0.c0) BETWEEN (t0.c20) AND (vt0.c0)))))OR((+ (vt1.c0)))) ORDER BY ((CAST(t0.c50 AS BLOB))*(((vt1.c0) BETWEEN (t0.c50) AND (t0.c50)))));
SELECT * FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((vt0.c1)OR(((vt0.c0) BETWEEN (t0.c20) AND (vt0.c0)))))OR((+ (vt1.c0)))) WHERE (NULL) ORDER BY ((CAST(t0.c50 AS BLOB))*(((vt1.c0) BETWEEN (t0.c50) AND (t0.c50))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((vt0.c1)OR(((vt0.c0) BETWEEN (t0.c20) AND (vt0.c0)))))OR((+ (vt1.c0)))) ORDER BY ((CAST(t0.c50 AS BLOB))*(((vt1.c0) BETWEEN (t0.c50) AND (t0.c50)))));
SELECT * FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((vt0.c1)OR(((vt0.c0) BETWEEN (t0.c20) AND (vt0.c0)))))OR((+ (vt1.c0)))) WHERE (NULL) ORDER BY ((CAST(t0.c50 AS BLOB))*(((vt1.c0) BETWEEN (t0.c50) AND (t0.c50))));
SELECT * FROM vt0 CROSS JOIN t0 ON (((((+ (NULL)))AND((NULL IN (vt0.c0)))))AND(vt0.c0 COLLATE BINARY)) WHERE ((((vt0.c1)-(t0.c50)) IN ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)-(t0.c50)) IN ((+ (vt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((((+ (NULL)))AND((NULL IN (vt0.c0)))))AND(vt0.c0 COLLATE BINARY)));
SELECT * FROM vt0 CROSS JOIN t0 ON (((((+ (NULL)))AND((NULL IN (vt0.c0)))))AND(vt0.c0 COLLATE BINARY)) WHERE ((((vt0.c1)-(t0.c50)) IN ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)-(t0.c50)) IN ((+ (vt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((((+ (NULL)))AND((NULL IN (vt0.c0)))))AND(vt0.c0 COLLATE BINARY)));
SELECT * FROM vt0 CROSS JOIN t0 ON (((((+ (NULL)))AND((NULL IN (vt0.c0)))))AND(vt0.c0 COLLATE BINARY)) WHERE ((((vt0.c1)-(t0.c50)) IN ((+ (vt0.c1)))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (vt0.c1 COLLATE BINARY IN ()) ASC, ((((((((((vt0.c0)!=(vt0.c0)))AND(((((vt0.c1)OR(NULL)))AND(vt0.c1)))))OR(((vt0.c0)*(vt0.c0)))))OR(((vt0.c0) IS FALSE))))AND((- (vt0.c0))))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((vt0.c0)==(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 COLLATE BINARY IN ()) ASC, ((((((((((vt0.c0)<>(vt0.c0)))AND(((((vt0.c1)OR(NULL)))AND(vt0.c1)))))OR(((vt0.c0)*(vt0.c0)))))OR(((vt0.c0) IS FALSE))))AND((- (vt0.c0))))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((vt0.c0)=(vt0.c1))))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (vt0.c1 COLLATE BINARY IN ()) ASC, ((((((((((vt0.c0)!=(vt0.c0)))AND(((((vt0.c1)OR(NULL)))AND(vt0.c1)))))OR(((vt0.c0)*(vt0.c0)))))OR(((vt0.c0) IS FALSE))))AND((- (vt0.c0))))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((vt0.c0)==(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 COLLATE BINARY IN ()) ASC, ((((((((((vt0.c0)<>(vt0.c0)))AND(((((vt0.c1)OR(NULL)))AND(vt0.c1)))))OR(((vt0.c0)*(vt0.c0)))))OR(((vt0.c0) IS FALSE))))AND((- (vt0.c0))))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((vt0.c0)=(vt0.c1))))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (vt0.c1 COLLATE BINARY IN ()) ASC, ((((((((((vt0.c0)!=(vt0.c0)))AND(((((vt0.c1)OR(NULL)))AND(vt0.c1)))))OR(((vt0.c0)*(vt0.c0)))))OR(((vt0.c0) IS FALSE))))AND((- (vt0.c0))))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((vt0.c0)==(vt0.c1)))));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (x'') ORDER BY (('-1024704827') NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (('-1024704827') NOT NULL) DESC);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (x'') ORDER BY (('-1024704827') NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (('-1024704827') NOT NULL) DESC);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (x'') ORDER BY (('-1024704827') NOT NULL) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((HEX(vt0.c1)) NOT BETWEEN (JULIANDAY(vt0.c1, vt0.c0, '#1')) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((vt0.c1) ISNULL))=((NOT (vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt0.c1)) NOT BETWEEN (JULIANDAY(vt0.c1, vt0.c0, '#1')) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) ISNULL))=((NOT (vt0.c1)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((HEX(vt0.c1)) NOT BETWEEN (JULIANDAY(vt0.c1, vt0.c0, '#1')) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((vt0.c1) ISNULL))=((NOT (vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt0.c1)) NOT BETWEEN (JULIANDAY(vt0.c1, vt0.c0, '#1')) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) ISNULL))=((NOT (vt0.c1)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((HEX(vt0.c1)) NOT BETWEEN (JULIANDAY(vt0.c1, vt0.c0, '#1')) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((vt0.c1) ISNULL))=((NOT (vt0.c1)))) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON COALESCE((((t0.c20))>=((vt0.c1))), ((vt0.c0) NOT BETWEEN (t0.c50) AND (NULL))) WHERE (((((((((((((((vt1.c0) NOT NULL))OR((vt1.c0 IN (vt1.c0)))))AND((~ (vt0.c1)))))OR(((t0.c50)-(vt1.c0)))))OR(0X4d69b129)))AND((('') IS TRUE))))OR(t0.c20 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt1.c0) NOT NULL))OR((vt1.c0 IN (vt1.c0)))))AND((~ (vt0.c1)))))OR(((t0.c50)-(vt1.c0)))))OR(0X4d69b129)))AND((('') IS TRUE))))OR(t0.c20 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON COALESCE((((t0.c20))>=((vt0.c1))), ((vt0.c0) NOT BETWEEN (t0.c50) AND (NULL))));
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON COALESCE((((t0.c20))>=((vt0.c1))), ((vt0.c0) NOT BETWEEN (t0.c50) AND (NULL))) WHERE (((((((((((((((vt1.c0) NOT NULL))OR((vt1.c0 IN (vt1.c0)))))AND((~ (vt0.c1)))))OR(((t0.c50)-(vt1.c0)))))OR(0X4d69b129)))AND((('') IS TRUE))))OR(t0.c20 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt1.c0) NOT NULL))OR((vt1.c0 IN (vt1.c0)))))AND((~ (vt0.c1)))))OR(((t0.c50)-(vt1.c0)))))OR(0X4d69b129)))AND((('') IS TRUE))))OR(t0.c20 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON COALESCE((((t0.c20))>=((vt0.c1))), ((vt0.c0) NOT BETWEEN (t0.c50) AND (NULL))));
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON COALESCE((((t0.c20))>=((vt0.c1))), ((vt0.c0) NOT BETWEEN (t0.c50) AND (NULL))) WHERE (((((((((((((((vt1.c0) NOT NULL))OR((vt1.c0 IN (vt1.c0)))))AND((~ (vt0.c1)))))OR(((t0.c50)-(vt1.c0)))))OR(0X4d69b129)))AND((('') IS TRUE))))OR(t0.c20 COLLATE BINARY)));
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END) AND ('279932831'))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (NULL)))+(((((vt0.c1)OR('')))OR(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END) AND ('279932831'))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (NULL)))+(((((vt0.c1)OR('')))OR(vt0.c1))))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END) AND ('279932831'))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (NULL)))+(((((vt0.c1)OR('')))OR(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END) AND ('279932831'))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (NULL)))+(((((vt0.c1)OR('')))OR(vt0.c1))))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END) AND ('279932831'))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (NULL)))+(((((vt0.c1)OR('')))OR(vt0.c1))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT * FROM vt0, vt1, t0 WHERE (vt1.c0) ORDER BY 0.6329177510296301 ASC  NULLS FIRST, ((((((vt0.c1)<(t0.c50)))AND((((t0.c50)) NOT BETWEEN ((t0.c50)) AND ((t0.c20))))))AND(((((vt1.c0)OR(vt1.c0)))AND(t0.c50))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY 0.6329177510296301 ASC  NULLS FIRST, ((((((vt0.c1)<(t0.c50)))AND((((t0.c50)) NOT BETWEEN ((t0.c50)) AND ((t0.c20))))))AND(((((vt1.c0)OR(vt1.c0)))AND(t0.c50)))));
SELECT * FROM vt0, vt1, t0 WHERE (vt1.c0) ORDER BY 0.6329177510296301 ASC  NULLS FIRST, ((((((vt0.c1)<(t0.c50)))AND((((t0.c50)) NOT BETWEEN ((t0.c50)) AND ((t0.c20))))))AND(((((vt1.c0)OR(vt1.c0)))AND(t0.c50))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY 0.6329177510296301 ASC  NULLS FIRST, ((((((vt0.c1)<(t0.c50)))AND((((t0.c50)) NOT BETWEEN ((t0.c50)) AND ((t0.c20))))))AND(((((vt1.c0)OR(vt1.c0)))AND(t0.c50)))));
SELECT * FROM vt0, vt1, t0 WHERE (vt1.c0) ORDER BY 0.6329177510296301 ASC  NULLS FIRST, ((((((vt0.c1)<(t0.c50)))AND((((t0.c50)) NOT BETWEEN ((t0.c50)) AND ((t0.c20))))))AND(((((vt1.c0)OR(vt1.c0)))AND(t0.c50))));
SELECT * FROM vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY highlight(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((x''))), (((vt0.c0))>=((vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY highlight(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((x''))), (((vt0.c0))>=((vt0.c1))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY highlight(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((x''))), (((vt0.c0))>=((vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY highlight(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((x''))), (((vt0.c0))>=((vt0.c1))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY highlight(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((x''))), (((vt0.c0))>=((vt0.c1))))  NULLS LAST;
SELECT ALL * FROM vt1, t0 NATURAL JOIN vt0 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN vt0);
SELECT ALL * FROM vt1, t0 NATURAL JOIN vt0 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN vt0);
SELECT ALL * FROM vt1, t0 NATURAL JOIN vt0 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE BINARY);
SELECT ALL * FROM vt1, t0 WHERE (CAST((+ (t0.c50)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((+ (t0.c50)) AS TEXT)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (CAST((+ (t0.c50)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((+ (t0.c50)) AS TEXT)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (CAST((+ (t0.c50)) AS TEXT));
SELECT ALL * FROM t0 WHERE (((((t0.c50) BETWEEN (t0.c20) AND (t0.c20)))OR(t0.c50)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c50) BETWEEN (t0.c20) AND (t0.c20)))OR(t0.c50))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c50) BETWEEN (t0.c20) AND (t0.c20)))OR(t0.c50)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c50) BETWEEN (t0.c20) AND (t0.c20)))OR(t0.c50))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c50) BETWEEN (t0.c20) AND (t0.c20)))OR(t0.c50)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM t0 WHERE ((((((((((((t0.c20))=((t0.c50))))OR(ABS(DISTINCT t0.c20))))OR(SQLITE_COMPILEOPTION_USED(t0.c20))))OR(x'' COLLATE NOCASE)))OR(0.826332733299194)));
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c20))==((t0.c50))))OR(ABS(DISTINCT t0.c20))))OR(SQLITE_COMPILEOPTION_USED(t0.c20))))OR(x'' COLLATE NOCASE)))OR(0.826332733299194))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((((((t0.c20))=((t0.c50))))OR(ABS(DISTINCT t0.c20))))OR(SQLITE_COMPILEOPTION_USED(t0.c20))))OR(x'' COLLATE NOCASE)))OR(0.826332733299194)));
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c20))==((t0.c50))))OR(ABS(DISTINCT t0.c20))))OR(SQLITE_COMPILEOPTION_USED(t0.c20))))OR(x'' COLLATE NOCASE)))OR(0.826332733299194))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((((((t0.c20))=((t0.c50))))OR(ABS(DISTINCT t0.c20))))OR(SQLITE_COMPILEOPTION_USED(t0.c20))))OR(x'' COLLATE NOCASE)))OR(0.826332733299194)));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((TRIM(DISTINCT vt1.c0, vt0.c0))IS NOT(((t0.c50) BETWEEN (t0.c50) AND (vt0.c1))))) ORDER BY CAST(NULLIF(vt0.c1, 0.27092022275142447) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt1.c0, vt0.c0))IS NOT(((t0.c50) BETWEEN (t0.c50) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CAST(NULLIF(vt0.c1, 0.27092022275142447) AS REAL) DESC);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((TRIM(DISTINCT vt1.c0, vt0.c0))IS NOT(((t0.c50) BETWEEN (t0.c50) AND (vt0.c1))))) ORDER BY CAST(NULLIF(vt0.c1, 0.27092022275142447) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt1.c0, vt0.c0))IS NOT(((t0.c50) BETWEEN (t0.c50) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CAST(NULLIF(vt0.c1, 0.27092022275142447) AS REAL) DESC);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((TRIM(DISTINCT vt1.c0, vt0.c0))IS NOT(((t0.c50) BETWEEN (t0.c50) AND (vt0.c1))))) ORDER BY CAST(NULLIF(vt0.c1, 0.27092022275142447) AS REAL) DESC;
SELECT COUNT(*) FROM vt1 INDEXED BY i2 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 INDEXED BY i2);
SELECT COUNT(*) FROM vt1 INDEXED BY i2 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 INDEXED BY i2);
SELECT ALL * FROM vt1, vt0, t0 WHERE (t0.c20);
SELECT SUM(count) FROM (SELECT ((t0.c20) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (t0.c20);
SELECT SUM(count) FROM (SELECT ((t0.c20) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (t0.c20);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((+ (CAST(t0.c50 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(t0.c50 AS REAL)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((+ (CAST(t0.c50 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(t0.c50 AS REAL)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((+ (CAST(t0.c50 AS REAL))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)) COLLATE RTRIM) ORDER BY CASE t0.c50 COLLATE BINARY  WHEN ((t0.c50)>=(t0.c50)) THEN (((t0.c20)) BETWEEN ((t0.c20)) AND ((t0.c20))) ELSE (((t0.c20)) BETWEEN ((t0.c20)) AND ((t0.c50))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c50 COLLATE BINARY  WHEN ((t0.c50)>=(t0.c50)) THEN (((t0.c20)) BETWEEN ((t0.c20)) AND ((t0.c20))) ELSE (((t0.c20)) BETWEEN ((t0.c20)) AND ((t0.c50))) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)) COLLATE RTRIM) ORDER BY CASE t0.c50 COLLATE BINARY  WHEN ((t0.c50)>=(t0.c50)) THEN (((t0.c20)) BETWEEN ((t0.c20)) AND ((t0.c20))) ELSE (((t0.c20)) BETWEEN ((t0.c20)) AND ((t0.c50))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c50 COLLATE BINARY  WHEN ((t0.c50)>=(t0.c50)) THEN (((t0.c20)) BETWEEN ((t0.c20)) AND ((t0.c20))) ELSE (((t0.c20)) BETWEEN ((t0.c20)) AND ((t0.c50))) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)) COLLATE RTRIM) ORDER BY CASE t0.c50 COLLATE BINARY  WHEN ((t0.c50)>=(t0.c50)) THEN (((t0.c20)) BETWEEN ((t0.c20)) AND ((t0.c20))) ELSE (((t0.c20)) BETWEEN ((t0.c20)) AND ((t0.c50))) END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1)AND(vt0.c1))))) ORDER BY ((CAST('' AS NUMERIC)) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1)AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST('' AS NUMERIC)) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1)AND(vt0.c1))))) ORDER BY ((CAST('' AS NUMERIC)) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1)AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST('' AS NUMERIC)) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1)AND(vt0.c1))))) ORDER BY ((CAST('' AS NUMERIC)) NOT NULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))*(LIKELY(vt0.c0)))) ORDER BY (((((vt0.c0)<=(vt1.c0))))=(((vt0.c1 IN ())))) DESC, CASE WHEN ((vt0.c0)&(vt1.c0)) THEN (('鼮*')AND(vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))*(LIKELY(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0)<=(vt1.c0))))=(((vt0.c1 IN ())))) DESC, CASE WHEN ((vt0.c0)&(vt1.c0)) THEN (('鼮*')AND(vt0.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))*(LIKELY(vt0.c0)))) ORDER BY (((((vt0.c0)<=(vt1.c0))))=(((vt0.c1 IN ())))) DESC, CASE WHEN ((vt0.c0)&(vt1.c0)) THEN (('鼮*')AND(vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))*(LIKELY(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0)<=(vt1.c0))))=(((vt0.c1 IN ())))) DESC, CASE WHEN ((vt0.c0)&(vt1.c0)) THEN (('鼮*')AND(vt0.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))*(LIKELY(vt0.c0)))) ORDER BY (((((vt0.c0)<=(vt1.c0))))=(((vt0.c1 IN ())))) DESC, CASE WHEN ((vt0.c0)&(vt1.c0)) THEN (('鼮*')AND(vt0.c0)) END DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)IS(((vt1.c0)==(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)IS(((vt1.c0)=(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)IS(((vt1.c0)==(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)IS(((vt1.c0)=(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)IS(((vt1.c0)==(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON vt0.c1 CROSS JOIN vt0 ON CAST((- (vt0.c1)) AS REAL) WHERE (t0.c20);
SELECT SUM(count) FROM (SELECT ((t0.c20) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON vt0.c1 CROSS JOIN vt0 ON CAST((- (vt0.c1)) AS REAL));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON vt0.c1 CROSS JOIN vt0 ON CAST((- (vt0.c1)) AS REAL) WHERE (t0.c20);
SELECT SUM(count) FROM (SELECT ((t0.c20) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON vt0.c1 CROSS JOIN vt0 ON CAST((- (vt0.c1)) AS REAL));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON vt0.c1 CROSS JOIN vt0 ON CAST((- (vt0.c1)) AS REAL) WHERE (t0.c20);
SELECT COUNT(*) FROM t0 WHERE (x'8967' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((x'8967' COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'8967' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((x'8967' COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'8967' COLLATE RTRIM);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((CAST(vt0.c0 AS NUMERIC), (((vt1.c0, vt0.c1, vt1.c0))>=((t0.c50, vt0.c0, vt0.c0))), ((t0.c50)&(vt1.c0))))=((((vt1.c0)*(vt0.c1)), ((t0.c20) BETWEEN (vt1.c0) AND (t0.c50)), CAST(t0.c50 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS NUMERIC), (((vt1.c0, vt0.c1, vt1.c0))>=((t0.c50, vt0.c0, vt0.c0))), ((t0.c50)&(vt1.c0))))==((((vt1.c0)*(vt0.c1)), ((t0.c20) BETWEEN (vt1.c0) AND (t0.c50)), CAST(t0.c50 AS BLOB))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((CAST(vt0.c0 AS NUMERIC), (((vt1.c0, vt0.c1, vt1.c0))>=((t0.c50, vt0.c0, vt0.c0))), ((t0.c50)&(vt1.c0))))=((((vt1.c0)*(vt0.c1)), ((t0.c20) BETWEEN (vt1.c0) AND (t0.c50)), CAST(t0.c50 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS NUMERIC), (((vt1.c0, vt0.c1, vt1.c0))>=((t0.c50, vt0.c0, vt0.c0))), ((t0.c50)&(vt1.c0))))==((((vt1.c0)*(vt0.c1)), ((t0.c20) BETWEEN (vt1.c0) AND (t0.c50)), CAST(t0.c50 AS BLOB))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((CAST(vt0.c0 AS NUMERIC), (((vt1.c0, vt0.c1, vt1.c0))>=((t0.c50, vt0.c0, vt0.c0))), ((t0.c50)&(vt1.c0))))=((((vt1.c0)*(vt0.c1)), ((t0.c20) BETWEEN (vt1.c0) AND (t0.c50)), CAST(t0.c50 AS BLOB)))));
SELECT * FROM t0, vt0 WHERE (((CAST(vt0.c1 AS INTEGER))IS NOT(((vt0.c1)IS NOT(t0.c50))))) ORDER BY CASE (t0.c50 IN ())  WHEN ((vt0.c1)||(vt0.c1)) THEN CASE ''  WHEN vt0.c0 THEN t0.c50 WHEN t0.c20 THEN x'2bc7' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END ELSE CAST(NULL AS INTEGER) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS INTEGER))IS NOT(((vt0.c1)IS NOT(t0.c50))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE (t0.c50 IN ())  WHEN ((vt0.c1)||(vt0.c1)) THEN CASE ''  WHEN vt0.c0 THEN t0.c50 WHEN t0.c20 THEN x'2bc7' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END ELSE CAST(NULL AS INTEGER) END  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((CAST(vt0.c1 AS INTEGER))IS NOT(((vt0.c1)IS NOT(t0.c50))))) ORDER BY CASE (t0.c50 IN ())  WHEN ((vt0.c1)||(vt0.c1)) THEN CASE ''  WHEN vt0.c0 THEN t0.c50 WHEN t0.c20 THEN x'2bc7' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END ELSE CAST(NULL AS INTEGER) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS INTEGER))IS NOT(((vt0.c1)IS NOT(t0.c50))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE (t0.c50 IN ())  WHEN ((vt0.c1)||(vt0.c1)) THEN CASE ''  WHEN vt0.c0 THEN t0.c50 WHEN t0.c20 THEN x'2bc7' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END ELSE CAST(NULL AS INTEGER) END  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((CAST(vt0.c1 AS INTEGER))IS NOT(((vt0.c1)IS NOT(t0.c50))))) ORDER BY CASE (t0.c50 IN ())  WHEN ((vt0.c1)||(vt0.c1)) THEN CASE ''  WHEN vt0.c0 THEN t0.c50 WHEN t0.c20 THEN x'2bc7' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END ELSE CAST(NULL AS INTEGER) END  NULLS FIRST;
SELECT * FROM vt0 FULL OUTER JOIN t0 ON UNICODE(((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0))) WHERE ((~ (CASE t0.c50  WHEN t0.c50 THEN vt0.c0 WHEN vt0.c0 THEN t0.c50 WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE t0.c50  WHEN t0.c50 THEN vt0.c0 WHEN vt0.c0 THEN t0.c50 WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON UNICODE(((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON UNICODE(((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0))) WHERE ((~ (CASE t0.c50  WHEN t0.c50 THEN vt0.c0 WHEN vt0.c0 THEN t0.c50 WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE t0.c50  WHEN t0.c50 THEN vt0.c0 WHEN vt0.c0 THEN t0.c50 WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON UNICODE(((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON UNICODE(((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0))) WHERE ((~ (CASE t0.c50  WHEN t0.c50 THEN vt0.c0 WHEN vt0.c0 THEN t0.c50 WHEN vt0.c0 THEN vt0.c1 END)));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((((((CHANGES())OR((NOT (t0.c50)))))AND((((vt1.c0))<>((vt1.c0))))))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(t0.c50)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CHANGES())OR((NOT (t0.c50)))))AND((((vt1.c0))<>((vt1.c0))))))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(t0.c50))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((((((CHANGES())OR((NOT (t0.c50)))))AND((((vt1.c0))<>((vt1.c0))))))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(t0.c50)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CHANGES())OR((NOT (t0.c50)))))AND((((vt1.c0))<>((vt1.c0))))))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(t0.c50))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((((((CHANGES())OR((NOT (t0.c50)))))AND((((vt1.c0))<>((vt1.c0))))))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(t0.c50)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LIKE(vt0.c1, (vt0.c1 IN (vt0.c0, vt0.c0)), '2'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(vt0.c1, (vt0.c1 IN (vt0.c0, vt0.c0)), '2')) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LIKE(vt0.c1, (vt0.c1 IN (vt0.c0, vt0.c0)), '2'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(vt0.c1, (vt0.c1 IN (vt0.c0, vt0.c0)), '2')) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LIKE(vt0.c1, (vt0.c1 IN (vt0.c0, vt0.c0)), '2'));
SELECT * FROM vt0, t0, vt1 WHERE ((CAST(t0.c20 AS NUMERIC) IN ())) ORDER BY (((vt0.c0)) BETWEEN ((CAST(t0.c50 AS TEXT))) AND ((CASE WHEN t0.c50 THEN vt0.c0 ELSE t0.c20 END)));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c20 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((vt0.c0)) BETWEEN ((CAST(t0.c50 AS TEXT))) AND ((CASE WHEN t0.c50 THEN vt0.c0 ELSE t0.c20 END))));
SELECT * FROM vt0, t0, vt1 WHERE ((CAST(t0.c20 AS NUMERIC) IN ())) ORDER BY (((vt0.c0)) BETWEEN ((CAST(t0.c50 AS TEXT))) AND ((CASE WHEN t0.c50 THEN vt0.c0 ELSE t0.c20 END)));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c20 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((vt0.c0)) BETWEEN ((CAST(t0.c50 AS TEXT))) AND ((CASE WHEN t0.c50 THEN vt0.c0 ELSE t0.c20 END))));
SELECT * FROM vt0, t0, vt1 WHERE ((CAST(t0.c20 AS NUMERIC) IN ())) ORDER BY (((vt0.c0)) BETWEEN ((CAST(t0.c50 AS TEXT))) AND ((CASE WHEN t0.c50 THEN vt0.c0 ELSE t0.c20 END)));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM) ORDER BY CAST(vt1.c0 AS NUMERIC)  NULLS LAST, ((t0.c50)<=(CASE WHEN 1012621558 THEN t0.c20 WHEN '-2014742560' THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CAST(vt1.c0 AS NUMERIC)  NULLS LAST, ((t0.c50)<=(CASE WHEN 1012621558 THEN t0.c20 WHEN '-2014742560' THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM) ORDER BY CAST(vt1.c0 AS NUMERIC)  NULLS LAST, ((t0.c50)<=(CASE WHEN 1012621558 THEN t0.c20 WHEN '-2014742560' THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CAST(vt1.c0 AS NUMERIC)  NULLS LAST, ((t0.c50)<=(CASE WHEN 1012621558 THEN t0.c20 WHEN '-2014742560' THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM) ORDER BY CAST(vt1.c0 AS NUMERIC)  NULLS LAST, ((t0.c50)<=(CASE WHEN 1012621558 THEN t0.c20 WHEN '-2014742560' THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON ((((((t0.c50)AND(vt0.c0)))AND(vt0.c1)))AND(t0.c50 COLLATE BINARY)) FULL OUTER JOIN vt0 ON ((((((((vt1.c0)OR(vt0.c0)))AND(t0.c20)))AND(vt0.c1)))OR(((vt0.c1)/(t0.c50)))) WHERE (((CAST(vt1.c0 AS TEXT)) NOT BETWEEN ((vt0.c1 IN (t0.c50))) AND (TRIM(DISTINCT t0.c20, t0.c50)))) ORDER BY TRIM(CASE t0.c50  WHEN vt0.c1 THEN t0.c50 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT)) NOT BETWEEN ((vt0.c1 IN (t0.c50))) AND (TRIM(DISTINCT t0.c20, t0.c50)))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((((((t0.c50)AND(vt0.c0)))AND(vt0.c1)))AND(t0.c50 COLLATE BINARY)) FULL OUTER JOIN vt0 ON ((((((((vt1.c0)OR(vt0.c0)))AND(t0.c20)))AND(vt0.c1)))OR(((vt0.c1)/(t0.c50)))) ORDER BY TRIM(CASE t0.c50  WHEN vt0.c1 THEN t0.c50 END) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON ((((((t0.c50)AND(vt0.c0)))AND(vt0.c1)))AND(t0.c50 COLLATE BINARY)) FULL OUTER JOIN vt0 ON ((((((((vt1.c0)OR(vt0.c0)))AND(t0.c20)))AND(vt0.c1)))OR(((vt0.c1)/(t0.c50)))) WHERE (((CAST(vt1.c0 AS TEXT)) NOT BETWEEN ((vt0.c1 IN (t0.c50))) AND (TRIM(DISTINCT t0.c20, t0.c50)))) ORDER BY TRIM(CASE t0.c50  WHEN vt0.c1 THEN t0.c50 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT)) NOT BETWEEN ((vt0.c1 IN (t0.c50))) AND (TRIM(DISTINCT t0.c20, t0.c50)))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((((((t0.c50)AND(vt0.c0)))AND(vt0.c1)))AND(t0.c50 COLLATE BINARY)) FULL OUTER JOIN vt0 ON ((((((((vt1.c0)OR(vt0.c0)))AND(t0.c20)))AND(vt0.c1)))OR(((vt0.c1)/(t0.c50)))) ORDER BY TRIM(CASE t0.c50  WHEN vt0.c1 THEN t0.c50 END) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(CASE WHEN t0.c20 THEN t0.c50 WHEN t0.c20 THEN t0.c50 WHEN t0.c20 THEN t0.c20 ELSE t0.c50 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c20 THEN t0.c50 WHEN t0.c20 THEN t0.c50 WHEN t0.c20 THEN t0.c20 ELSE t0.c50 END AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(CASE WHEN t0.c20 THEN t0.c50 WHEN t0.c20 THEN t0.c50 WHEN t0.c20 THEN t0.c20 ELSE t0.c50 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c20 THEN t0.c50 WHEN t0.c20 THEN t0.c50 WHEN t0.c20 THEN t0.c20 ELSE t0.c50 END AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(CASE WHEN t0.c20 THEN t0.c50 WHEN t0.c20 THEN t0.c50 WHEN t0.c20 THEN t0.c20 ELSE t0.c50 END AS INTEGER));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CAST(UPPER(vt0.c0) AS BLOB) WHERE (CAST(vt0.c0 AS TEXT)) ORDER BY vt0.c0 COLLATE BINARY COLLATE BINARY COLLATE NOCASE DESC  NULLS FIRST, (((NULL, vt1.c0, vt0.c0)) BETWEEN ((((vt0.c1)LIKE(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), (((vt0.c0, 2.93442936E8, vt0.c0))<((vt0.c0, vt0.c1, NULL))))) AND ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (0.9018480999868985)), CAST(vt0.c0 AS NUMERIC), x'34ce'))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CAST(UPPER(vt0.c0) AS BLOB) ORDER BY vt0.c0 COLLATE BINARY COLLATE BINARY COLLATE NOCASE DESC  NULLS FIRST, (((NULL, vt1.c0, vt0.c0)) BETWEEN ((((vt0.c1)LIKE(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), (((vt0.c0, 2.93442936E8, vt0.c0))<((vt0.c0, vt0.c1, NULL))))) AND ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (0.9018480999868985)), CAST(vt0.c0 AS NUMERIC), x'34ce'))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CAST(UPPER(vt0.c0) AS BLOB) WHERE (CAST(vt0.c0 AS TEXT)) ORDER BY vt0.c0 COLLATE BINARY COLLATE BINARY COLLATE NOCASE DESC  NULLS FIRST, (((NULL, vt1.c0, vt0.c0)) BETWEEN ((((vt0.c1)LIKE(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), (((vt0.c0, 2.93442936E8, vt0.c0))<((vt0.c0, vt0.c1, NULL))))) AND ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (0.9018480999868985)), CAST(vt0.c0 AS NUMERIC), x'34ce'))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CAST(UPPER(vt0.c0) AS BLOB) ORDER BY vt0.c0 COLLATE BINARY COLLATE BINARY COLLATE NOCASE DESC  NULLS FIRST, (((NULL, vt1.c0, vt0.c0)) BETWEEN ((((vt0.c1)LIKE(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), (((vt0.c0, 2.93442936E8, vt0.c0))<((vt0.c0, vt0.c1, NULL))))) AND ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (0.9018480999868985)), CAST(vt0.c0 AS NUMERIC), x'34ce'))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CAST(UPPER(vt0.c0) AS BLOB) WHERE (CAST(vt0.c0 AS TEXT)) ORDER BY vt0.c0 COLLATE BINARY COLLATE BINARY COLLATE NOCASE DESC  NULLS FIRST, (((NULL, vt1.c0, vt0.c0)) BETWEEN ((((vt0.c1)LIKE(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), (((vt0.c0, 2.93442936E8, vt0.c0))<((vt0.c0, vt0.c1, NULL))))) AND ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (0.9018480999868985)), CAST(vt0.c0 AS NUMERIC), x'34ce'))) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('');
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c20 AS TEXT)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c20 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c20 AS TEXT)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c20 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c20 AS TEXT)) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE ((~ (('-2083553424' IN ())))) ORDER BY ((TOTAL_CHANGES())>(((t0.c20) NOT BETWEEN (t0.c50) AND (t0.c50)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (('-2083553424' IN ())))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY ((TOTAL_CHANGES())>(((t0.c20) NOT BETWEEN (t0.c50) AND (t0.c50)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE ((~ (('-2083553424' IN ())))) ORDER BY ((TOTAL_CHANGES())>(((t0.c20) NOT BETWEEN (t0.c50) AND (t0.c50)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (('-2083553424' IN ())))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY ((TOTAL_CHANGES())>(((t0.c20) NOT BETWEEN (t0.c50) AND (t0.c50)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE ((~ (('-2083553424' IN ())))) ORDER BY ((TOTAL_CHANGES())>(((t0.c20) NOT BETWEEN (t0.c50) AND (t0.c50)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON ABS(((vt1.c0) NOT BETWEEN (t0.c50) AND (vt1.c0))) WHERE (((((((t0.c50)OR(vt1.c0)))AND(t0.c50))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c50)OR(vt1.c0)))AND(t0.c50))) ISNULL)) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ABS(((vt1.c0) NOT BETWEEN (t0.c50) AND (vt1.c0))));
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON ABS(((vt1.c0) NOT BETWEEN (t0.c50) AND (vt1.c0))) WHERE (((((((t0.c50)OR(vt1.c0)))AND(t0.c50))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c50)OR(vt1.c0)))AND(t0.c50))) ISNULL)) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ABS(((vt1.c0) NOT BETWEEN (t0.c50) AND (vt1.c0))));
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON ABS(((vt1.c0) NOT BETWEEN (t0.c50) AND (vt1.c0))) WHERE (((((((t0.c50)OR(vt1.c0)))AND(t0.c50))) ISNULL));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((+ (vt0.c0)))/(((((((((vt0.c0)OR(t0.c20)))OR(t0.c50)))AND(t0.c50)))AND(NULL)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))/(((((((((vt0.c0)OR(t0.c20)))OR(t0.c50)))AND(t0.c50)))AND(NULL))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((+ (vt0.c0)))/(((((((((vt0.c0)OR(t0.c20)))OR(t0.c50)))AND(t0.c50)))AND(NULL)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))/(((((((((vt0.c0)OR(t0.c20)))OR(t0.c50)))AND(t0.c50)))AND(NULL))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((+ (vt0.c0)))/(((((((((vt0.c0)OR(t0.c20)))OR(t0.c50)))AND(t0.c50)))AND(NULL)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1))<((vt0.c1))), ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)), ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))))<((((vt0.c1)==(vt0.c0)), vt0.c0, ((NULL)<(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1))<((vt0.c1))), ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)), ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))))<((((vt0.c1)==(vt0.c0)), vt0.c0, ((NULL)<(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1))<((vt0.c1))), ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)), ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))))<((((vt0.c1)==(vt0.c0)), vt0.c0, ((NULL)<(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1))<((vt0.c1))), ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)), ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))))<((((vt0.c1)==(vt0.c0)), vt0.c0, ((NULL)<(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1))<((vt0.c1))), ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)), ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))))<((((vt0.c1)==(vt0.c0)), vt0.c0, ((NULL)<(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(x'')))AND(vt1.c0)))OR(vt1.c0))) AND (vt1.c0 COLLATE BINARY))) ORDER BY CAST((~ (vt1.c0)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(x'')))AND(vt1.c0)))OR(vt1.c0))) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY CAST((~ (vt1.c0)) AS TEXT) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(x'')))AND(vt1.c0)))OR(vt1.c0))) AND (vt1.c0 COLLATE BINARY))) ORDER BY CAST((~ (vt1.c0)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(x'')))AND(vt1.c0)))OR(vt1.c0))) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY CAST((~ (vt1.c0)) AS TEXT) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(x'')))AND(vt1.c0)))OR(vt1.c0))) AND (vt1.c0 COLLATE BINARY))) ORDER BY CAST((~ (vt1.c0)) AS TEXT) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON HEX(DISTINCT 0.2306447153405835) COLLATE NOCASE WHERE ((~ (t0.c50)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c50)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON HEX(DISTINCT 0.2306447153405835) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON HEX(DISTINCT 0.2306447153405835) COLLATE NOCASE WHERE ((~ (t0.c50)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c50)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON HEX(DISTINCT 0.2306447153405835) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON HEX(DISTINCT 0.2306447153405835) COLLATE NOCASE WHERE ((~ (t0.c50)) COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE (CASE WHEN (1.840029486E9 IN ()) THEN CAST(t0.c50 AS NUMERIC) END) ORDER BY TOTAL_CHANGES() ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (1.840029486E9 IN ()) THEN CAST(t0.c50 AS NUMERIC) END) IS TRUE)  as count FROM t0 ORDER BY TOTAL_CHANGES() ASC);
SELECT ALL * FROM t0 WHERE (CASE WHEN (1.840029486E9 IN ()) THEN CAST(t0.c50 AS NUMERIC) END) ORDER BY TOTAL_CHANGES() ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (1.840029486E9 IN ()) THEN CAST(t0.c50 AS NUMERIC) END) IS TRUE)  as count FROM t0 ORDER BY TOTAL_CHANGES() ASC);
SELECT ALL * FROM t0 WHERE (CASE WHEN (1.840029486E9 IN ()) THEN CAST(t0.c50 AS NUMERIC) END) ORDER BY TOTAL_CHANGES() ASC;
SELECT * FROM vt1 INDEXED BY i2, vt0, t0 WHERE ((((((vt0.c1)OR(vt1.c0)))AND(vt1.c0)) IN (COALESCE(DISTINCT t0.c20, NULL), ((vt1.c0)/(vt0.c0)), ((vt1.c0)&(t0.c20)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)OR(vt1.c0)))AND(vt1.c0)) IN (COALESCE(DISTINCT t0.c20, NULL), ((vt1.c0)/(vt0.c0)), ((vt1.c0)&(t0.c20))))) IS TRUE)  as count FROM vt1 INDEXED BY i2, vt0, t0);
SELECT * FROM vt1 INDEXED BY i2, vt0, t0 WHERE ((((((vt0.c1)OR(vt1.c0)))AND(vt1.c0)) IN (COALESCE(DISTINCT t0.c20, NULL), ((vt1.c0)/(vt0.c0)), ((vt1.c0)&(t0.c20)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)OR(vt1.c0)))AND(vt1.c0)) IN (COALESCE(DISTINCT t0.c20, NULL), ((vt1.c0)/(vt0.c0)), ((vt1.c0)&(t0.c20))))) IS TRUE)  as count FROM vt1 INDEXED BY i2, vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, t0.c20)) AND ((t0.c50, '1170752358', vt0.c1))))GLOB(vt0.c1)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, t0.c20)) AND ((t0.c50, '1170752358', vt0.c1))))GLOB(vt0.c1))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, t0.c20)) AND ((t0.c50, '1170752358', vt0.c1))))GLOB(vt0.c1)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, t0.c20)) AND ((t0.c50, '1170752358', vt0.c1))))GLOB(vt0.c1))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, t0.c20)) AND ((t0.c50, '1170752358', vt0.c1))))GLOB(vt0.c1)));
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON vt1.c0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON vt1.c0);
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON vt1.c0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON vt1.c0);
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON vt1.c0 WHERE ('');
SELECT * FROM vt1 WHERE (CAST(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) AS NUMERIC)) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT NULL))) AND ((vt1.c0 COLLATE BINARY))) DESC, json_valid(CAST(vt1.c0 AS NUMERIC))  NULLS FIRST, CAST(((vt1.c0)IS(vt1.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT NULL))) AND ((vt1.c0 COLLATE BINARY))) DESC, json_valid(CAST(vt1.c0 AS NUMERIC))  NULLS FIRST, CAST(((vt1.c0)IS(vt1.c0)) AS REAL)  NULLS LAST);
SELECT * FROM vt1 WHERE (CAST(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) AS NUMERIC)) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT NULL))) AND ((vt1.c0 COLLATE BINARY))) DESC, json_valid(CAST(vt1.c0 AS NUMERIC))  NULLS FIRST, CAST(((vt1.c0)IS(vt1.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT NULL))) AND ((vt1.c0 COLLATE BINARY))) DESC, json_valid(CAST(vt1.c0 AS NUMERIC))  NULLS FIRST, CAST(((vt1.c0)IS(vt1.c0)) AS REAL)  NULLS LAST);
SELECT * FROM vt1 WHERE (CAST(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) AS NUMERIC)) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT NULL))) AND ((vt1.c0 COLLATE BINARY))) DESC, json_valid(CAST(vt1.c0 AS NUMERIC))  NULLS FIRST, CAST(((vt1.c0)IS(vt1.c0)) AS REAL)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 FULL OUTER JOIN vt1 ON (- (((vt0.c1)IS(vt0.c0)))) WHERE (((((t0.c20)OR(CASE t0.c20  WHEN vt1.c0 THEN t0.c50 ELSE '-221122791' END)))OR(((vt1.c0)=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c20)OR(CASE t0.c20  WHEN vt1.c0 THEN t0.c50 ELSE '-221122791' END)))OR(((vt1.c0)=(vt0.c1))))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON (- (((vt0.c1)IS(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0 FULL OUTER JOIN vt1 ON (- (((vt0.c1)IS(vt0.c0)))) WHERE (((((t0.c20)OR(CASE t0.c20  WHEN vt1.c0 THEN t0.c50 ELSE '-221122791' END)))OR(((vt1.c0)=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c20)OR(CASE t0.c20  WHEN vt1.c0 THEN t0.c50 ELSE '-221122791' END)))OR(((vt1.c0)=(vt0.c1))))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON (- (((vt0.c1)IS(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0 FULL OUTER JOIN vt1 ON (- (((vt0.c1)IS(vt0.c0)))) WHERE (((((t0.c20)OR(CASE t0.c20  WHEN vt1.c0 THEN t0.c50 ELSE '-221122791' END)))OR(((vt1.c0)=(vt0.c1)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt0.c1) NOTNULL))) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((vt0.c1) NOTNULL))) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt0.c1) NOTNULL))) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((vt0.c1) NOTNULL))) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt0.c1) NOTNULL))) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))))));
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN vt1 WHERE (json_remove(t0.c50, (~ (t0.c50))));
SELECT SUM(count) FROM (SELECT ((json_remove(t0.c50, (~ (t0.c50)))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN vt1 WHERE (json_remove(t0.c50, (~ (t0.c50))));
SELECT SUM(count) FROM (SELECT ((json_remove(t0.c50, (~ (t0.c50)))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN vt1 WHERE (json_remove(t0.c50, (~ (t0.c50))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c20)AND(((t0.c20)>=(t0.c20)))) WHERE ((((x'')>>(t0.c50)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((x'')>>(t0.c50)) IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c20)AND(((t0.c20)>=(t0.c20)))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c20)AND(((t0.c20)>=(t0.c20)))) WHERE ((((x'')>>(t0.c50)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((x'')>>(t0.c50)) IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c20)AND(((t0.c20)>=(t0.c20)))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c20)AND(((t0.c20)>=(t0.c20)))) WHERE ((((x'')>>(t0.c50)) IN ()));
SELECT * FROM vt0 WHERE (CASE LIKELY(vt0.c1)  WHEN LOWER(vt0.c0) THEN LIKELY(DISTINCT vt0.c0) ELSE CAST(vt0.c1 AS NUMERIC) END) ORDER BY ((0.37574454051568473 COLLATE RTRIM)IS NOT((((vt0.c1, vt0.c0, vt0.c0))>((vt0.c1, vt0.c0, vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE LIKELY(vt0.c1)  WHEN LOWER(vt0.c0) THEN LIKELY(DISTINCT vt0.c0) ELSE CAST(vt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt0 ORDER BY ((0.37574454051568473 COLLATE RTRIM)IS NOT((((vt0.c1, vt0.c0, vt0.c0))>((vt0.c1, vt0.c0, vt0.c0))))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE LIKELY(vt0.c1)  WHEN LOWER(vt0.c0) THEN LIKELY(DISTINCT vt0.c0) ELSE CAST(vt0.c1 AS NUMERIC) END) ORDER BY ((0.37574454051568473 COLLATE RTRIM)IS NOT((((vt0.c1, vt0.c0, vt0.c0))>((vt0.c1, vt0.c0, vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE LIKELY(vt0.c1)  WHEN LOWER(vt0.c0) THEN LIKELY(DISTINCT vt0.c0) ELSE CAST(vt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt0 ORDER BY ((0.37574454051568473 COLLATE RTRIM)IS NOT((((vt0.c1, vt0.c0, vt0.c0))>((vt0.c1, vt0.c0, vt0.c0))))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE LIKELY(vt0.c1)  WHEN LOWER(vt0.c0) THEN LIKELY(DISTINCT vt0.c0) ELSE CAST(vt0.c1 AS NUMERIC) END) ORDER BY ((0.37574454051568473 COLLATE RTRIM)IS NOT((((vt0.c1, vt0.c0, vt0.c0))>((vt0.c1, vt0.c0, vt0.c0))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0 WHERE (((NULL)<(((vt1.c0) ISNULL)))) ORDER BY ((CAST(vt1.c0 AS TEXT))<=((vt1.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((NULL)<(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((CAST(vt1.c0 AS TEXT))<=((vt1.c0 IN ()))) ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE (((NULL)<(((vt1.c0) ISNULL)))) ORDER BY ((CAST(vt1.c0 AS TEXT))<=((vt1.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((NULL)<(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((CAST(vt1.c0 AS TEXT))<=((vt1.c0 IN ()))) ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE (((NULL)<(((vt1.c0) ISNULL)))) ORDER BY ((CAST(vt1.c0 AS TEXT))<=((vt1.c0 IN ()))) ASC;
SELECT * FROM t0 INNER JOIN vt0 ON (((((t0.c20) IS TRUE)))>((vt0.c0))) RIGHT OUTER JOIN vt1 ON CASE ((t0.c20) NOT NULL)  WHEN ((t0.c20) BETWEEN (t0.c20) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (t0.c50) AND (vt0.c1)) END WHERE (CAST(((t0.c20)-(NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c20)-(NULL)) AS INTEGER)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((((t0.c20) IS TRUE)))>((vt0.c0))) RIGHT OUTER JOIN vt1 ON CASE ((t0.c20) NOT NULL)  WHEN ((t0.c20) BETWEEN (t0.c20) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (t0.c50) AND (vt0.c1)) END);
SELECT * FROM t0 INNER JOIN vt0 ON (((((t0.c20) IS TRUE)))>((vt0.c0))) RIGHT OUTER JOIN vt1 ON CASE ((t0.c20) NOT NULL)  WHEN ((t0.c20) BETWEEN (t0.c20) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (t0.c50) AND (vt0.c1)) END WHERE (CAST(((t0.c20)-(NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c20)-(NULL)) AS INTEGER)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((((t0.c20) IS TRUE)))>((vt0.c0))) RIGHT OUTER JOIN vt1 ON CASE ((t0.c20) NOT NULL)  WHEN ((t0.c20) BETWEEN (t0.c20) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (t0.c50) AND (vt0.c1)) END);
SELECT * FROM t0 INNER JOIN vt0 ON (((((t0.c20) IS TRUE)))>((vt0.c0))) RIGHT OUTER JOIN vt1 ON CASE ((t0.c20) NOT NULL)  WHEN ((t0.c20) BETWEEN (t0.c20) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (t0.c50) AND (vt0.c1)) END WHERE (CAST(((t0.c20)-(NULL)) AS INTEGER));
SELECT * FROM t0 WHERE (CAST(((((((((x'')OR(t0.c20)))OR(t0.c20)))AND(t0.c20)))AND(t0.c20)) AS INTEGER)) ORDER BY (((t0.c20 COLLATE NOCASE))>(((((t0.c20)) BETWEEN ((t0.c50)) AND ((t0.c20)))))), CAST(((t0.c20)IS NOT(t0.c20)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((x'')OR(t0.c20)))OR(t0.c20)))AND(t0.c20)))AND(t0.c20)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c20 COLLATE NOCASE))>(((((t0.c20)) BETWEEN ((t0.c50)) AND ((t0.c20)))))), CAST(((t0.c20)IS NOT(t0.c20)) AS NUMERIC)  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(((((((((x'')OR(t0.c20)))OR(t0.c20)))AND(t0.c20)))AND(t0.c20)) AS INTEGER)) ORDER BY (((t0.c20 COLLATE NOCASE))>(((((t0.c20)) BETWEEN ((t0.c50)) AND ((t0.c20)))))), CAST(((t0.c20)IS NOT(t0.c20)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((x'')OR(t0.c20)))OR(t0.c20)))AND(t0.c20)))AND(t0.c20)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c20 COLLATE NOCASE))>(((((t0.c20)) BETWEEN ((t0.c50)) AND ((t0.c20)))))), CAST(((t0.c20)IS NOT(t0.c20)) AS NUMERIC)  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(((((((((x'')OR(t0.c20)))OR(t0.c20)))AND(t0.c20)))AND(t0.c20)) AS INTEGER)) ORDER BY (((t0.c20 COLLATE NOCASE))>(((((t0.c20)) BETWEEN ((t0.c50)) AND ((t0.c20)))))), CAST(((t0.c20)IS NOT(t0.c20)) AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON ((((((((CASE t0.c20  WHEN t0.c50 THEN vt0.c1 END)AND(((((((((vt1.c0)AND(NULL)))OR(vt0.c0)))AND(t0.c20)))AND(vt1.c0)))))AND(((vt0.c1)%(vt0.c1)))))AND((+ (t0.c50)))))AND(((vt0.c1)&(vt0.c1)))) WHERE (((((((vt0.c1)IS NOT(vt0.c0)))AND(0.40520526809347945)))OR(CAST('899169598' AS TEXT)))) ORDER BY ((((0.714271201412261 COLLATE BINARY)OR((((vt0.c0))<((vt0.c0))))))OR(((t0.c20) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)IS NOT(vt0.c0)))AND(0.40520526809347945)))OR(CAST('899169598' AS TEXT)))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON ((((((((CASE t0.c20  WHEN t0.c50 THEN vt0.c1 END)AND(((((((((vt1.c0)AND(NULL)))OR(vt0.c0)))AND(t0.c20)))AND(vt1.c0)))))AND(((vt0.c1)%(vt0.c1)))))AND((+ (t0.c50)))))AND(((vt0.c1)&(vt0.c1)))) ORDER BY ((((0.714271201412261 COLLATE BINARY)OR((((vt0.c0))<((vt0.c0))))))OR(((t0.c20) IS FALSE))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON ((((((((CASE t0.c20  WHEN t0.c50 THEN vt0.c1 END)AND(((((((((vt1.c0)AND(NULL)))OR(vt0.c0)))AND(t0.c20)))AND(vt1.c0)))))AND(((vt0.c1)%(vt0.c1)))))AND((+ (t0.c50)))))AND(((vt0.c1)&(vt0.c1)))) WHERE (((((((vt0.c1)IS NOT(vt0.c0)))AND(0.40520526809347945)))OR(CAST('899169598' AS TEXT)))) ORDER BY ((((0.714271201412261 COLLATE BINARY)OR((((vt0.c0))<((vt0.c0))))))OR(((t0.c20) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)IS NOT(vt0.c0)))AND(0.40520526809347945)))OR(CAST('899169598' AS TEXT)))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON ((((((((CASE t0.c20  WHEN t0.c50 THEN vt0.c1 END)AND(((((((((vt1.c0)AND(NULL)))OR(vt0.c0)))AND(t0.c20)))AND(vt1.c0)))))AND(((vt0.c1)%(vt0.c1)))))AND((+ (t0.c50)))))AND(((vt0.c1)&(vt0.c1)))) ORDER BY ((((0.714271201412261 COLLATE BINARY)OR((((vt0.c0))<((vt0.c0))))))OR(((t0.c20) IS FALSE))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON ((((((((CASE t0.c20  WHEN t0.c50 THEN vt0.c1 END)AND(((((((((vt1.c0)AND(NULL)))OR(vt0.c0)))AND(t0.c20)))AND(vt1.c0)))))AND(((vt0.c1)%(vt0.c1)))))AND((+ (t0.c50)))))AND(((vt0.c1)&(vt0.c1)))) WHERE (((((((vt0.c1)IS NOT(vt0.c0)))AND(0.40520526809347945)))OR(CAST('899169598' AS TEXT)))) ORDER BY ((((0.714271201412261 COLLATE BINARY)OR((((vt0.c0))<((vt0.c0))))))OR(((t0.c20) IS FALSE))) DESC;
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((vt0.c1) BETWEEN (NULL) AND (vt0.c0)) IN (((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) BETWEEN (NULL) AND (vt0.c0)) IN (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((vt0.c1) BETWEEN (NULL) AND (vt0.c0)) IN (((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) BETWEEN (NULL) AND (vt0.c0)) IN (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((vt0.c1) BETWEEN (NULL) AND (vt0.c0)) IN (((vt0.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c20 AS BLOB))AND(((vt0.c0)>=(x'')))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c20 AS BLOB))AND(((vt0.c0)>=(x''))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c20 AS BLOB))AND(((vt0.c0)>=(x'')))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c20 AS BLOB))AND(((vt0.c0)>=(x''))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c20 AS BLOB))AND(((vt0.c0)>=(x'')))));
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((vt0.c1)<(t0.c20)))LIKE(STRFTIME(vt1.c0, t0.c20, '-1024704827')))) ORDER BY (~ (((vt1.c0)/(t0.c50))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<(t0.c20)))LIKE(STRFTIME(vt1.c0, t0.c20, '-1024704827')))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (~ (((vt1.c0)/(t0.c50))))  NULLS LAST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((vt0.c1)<(t0.c20)))LIKE(STRFTIME(vt1.c0, t0.c20, '-1024704827')))) ORDER BY (~ (((vt1.c0)/(t0.c50))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<(t0.c20)))LIKE(STRFTIME(vt1.c0, t0.c20, '-1024704827')))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (~ (((vt1.c0)/(t0.c50))))  NULLS LAST);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((vt0.c1)<(t0.c20)))LIKE(STRFTIME(vt1.c0, t0.c20, '-1024704827')))) ORDER BY (~ (((vt1.c0)/(t0.c50))))  NULLS LAST;
SELECT * FROM t0, vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN (((t0.c50 IN ()))) AND (((- (t0.c50))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((t0.c50 IN ()))) AND (((- (t0.c50)))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN (((t0.c50 IN ()))) AND (((- (t0.c50))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((t0.c50 IN ()))) AND (((- (t0.c50)))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN (((t0.c50 IN ()))) AND (((- (t0.c50))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c1 COLLATE BINARY))));
SELECT ALL * FROM vt1, t0 WHERE ('鼮*');
SELECT SUM(count) FROM (SELECT (('鼮*') IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ('鼮*');
SELECT SUM(count) FROM (SELECT (('鼮*') IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ('鼮*');
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))|(vt1.c0))) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))>=(((vt1.c0) IS TRUE)))  NULLS FIRST, (((NOT (NULL)))<=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST, ((((vt1.c0) ISNULL))||(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))|(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))>=(((vt1.c0) IS TRUE)))  NULLS FIRST, (((NOT (NULL)))<=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST, ((((vt1.c0) ISNULL))||(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))|(vt1.c0))) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))>=(((vt1.c0) IS TRUE)))  NULLS FIRST, (((NOT (NULL)))<=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST, ((((vt1.c0) ISNULL))||(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))|(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))>=(((vt1.c0) IS TRUE)))  NULLS FIRST, (((NOT (NULL)))<=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST, ((((vt1.c0) ISNULL))||(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))|(vt1.c0))) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))>=(((vt1.c0) IS TRUE)))  NULLS FIRST, (((NOT (NULL)))<=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST, ((((vt1.c0) ISNULL))||(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT ALL COUNT(*) FROM t0, vt1 INNER JOIN vt0 ON t0.c50 WHERE (CASE ((vt1.c0) BETWEEN (t0.c20) AND (t0.c50))  WHEN ((t0.c50) ISNULL) THEN ((vt0.c0)>(vt0.c0)) ELSE ((t0.c20)!=(vt1.c0)) END) ORDER BY CASE vt1.c0  WHEN vt1.c0 THEN t0.c50 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c20 THEN vt1.c0 END COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) BETWEEN (t0.c20) AND (t0.c50))  WHEN ((t0.c50) ISNULL) THEN ((vt0.c0)>(vt0.c0)) ELSE ((t0.c20)<>(vt1.c0)) END) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON t0.c50 ORDER BY CASE vt1.c0  WHEN vt1.c0 THEN t0.c50 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c20 THEN vt1.c0 END COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM t0, vt1 INNER JOIN vt0 ON t0.c50 WHERE (CASE ((vt1.c0) BETWEEN (t0.c20) AND (t0.c50))  WHEN ((t0.c50) ISNULL) THEN ((vt0.c0)>(vt0.c0)) ELSE ((t0.c20)!=(vt1.c0)) END) ORDER BY CASE vt1.c0  WHEN vt1.c0 THEN t0.c50 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c20 THEN vt1.c0 END COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) BETWEEN (t0.c20) AND (t0.c50))  WHEN ((t0.c50) ISNULL) THEN ((vt0.c0)>(vt0.c0)) ELSE ((t0.c20)<>(vt1.c0)) END) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON t0.c50 ORDER BY CASE vt1.c0  WHEN vt1.c0 THEN t0.c50 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c20 THEN vt1.c0 END COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM t0, vt1 INNER JOIN vt0 ON t0.c50 WHERE (CASE ((vt1.c0) BETWEEN (t0.c20) AND (t0.c50))  WHEN ((t0.c50) ISNULL) THEN ((vt0.c0)>(vt0.c0)) ELSE ((t0.c20)!=(vt1.c0)) END) ORDER BY CASE vt1.c0  WHEN vt1.c0 THEN t0.c50 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN t0.c20 THEN vt1.c0 END COLLATE NOCASE ASC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM t0, vt1 WHERE (((((((0x2e0f2c8a)OR(vt1.c0)))AND(vt1.c0))) NOTNULL)) ORDER BY (((- (t0.c20)))>>(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.714271201412261))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((0X2e0f2c8a)OR(vt1.c0)))AND(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt1 ORDER BY (((- (t0.c20)))>>(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.714271201412261))))  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE (((((((0x2e0f2c8a)OR(vt1.c0)))AND(vt1.c0))) NOTNULL)) ORDER BY (((- (t0.c20)))>>(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.714271201412261))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((0X2e0f2c8a)OR(vt1.c0)))AND(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt1 ORDER BY (((- (t0.c20)))>>(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.714271201412261))))  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE (((((((0x2e0f2c8a)OR(vt1.c0)))AND(vt1.c0))) NOTNULL)) ORDER BY (((- (t0.c20)))>>(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.714271201412261))))  NULLS FIRST;
SELECT * FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((t0.c20 COLLATE RTRIM)>(((t0.c20)=(t0.c50)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((t0.c20 COLLATE RTRIM)>(((t0.c20)==(t0.c50)))));
SELECT * FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((t0.c20 COLLATE RTRIM)>(((t0.c20)=(t0.c50)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((t0.c20 COLLATE RTRIM)>(((t0.c20)==(t0.c50)))));
SELECT * FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((t0.c20 COLLATE RTRIM)>(((t0.c20)=(t0.c50)))) WHERE (NULL);
SELECT ALL * FROM vt0, t0 INNER JOIN vt1 ON (((vt0.c0 IN ()))||(CASE WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN t0.c50 WHEN t0.c20 THEN t0.c50 WHEN t0.c20 THEN t0.c50 WHEN t0.c20 THEN 0.7528009226353902 ELSE vt0.c0 END)) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t0 INNER JOIN vt1 ON (((vt0.c0 IN ()))||(CASE WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN t0.c50 WHEN t0.c20 THEN t0.c50 WHEN t0.c20 THEN t0.c50 WHEN t0.c20 THEN 0.7528009226353902 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0, t0 INNER JOIN vt1 ON (((vt0.c0 IN ()))||(CASE WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN t0.c50 WHEN t0.c20 THEN t0.c50 WHEN t0.c20 THEN t0.c50 WHEN t0.c20 THEN 0.7528009226353902 ELSE vt0.c0 END)) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t0 INNER JOIN vt1 ON (((vt0.c0 IN ()))||(CASE WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN t0.c50 WHEN t0.c20 THEN t0.c50 WHEN t0.c20 THEN t0.c50 WHEN t0.c20 THEN 0.7528009226353902 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0, t0 INNER JOIN vt1 ON (((vt0.c0 IN ()))||(CASE WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN t0.c50 WHEN t0.c20 THEN t0.c50 WHEN t0.c20 THEN t0.c50 WHEN t0.c20 THEN 0.7528009226353902 ELSE vt0.c0 END)) WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON CAST((((t0.c20, vt0.c0, NULL))>((vt1.c0, 5.183821107084263E-4, vt1.c0))) AS TEXT) LEFT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS TEXT)) BETWEEN (TIME(vt0.c1, -1.505568322E9, vt0.c0, vt0.c0, t0.c50)) AND (((vt0.c1) NOT BETWEEN (vt1.c0) AND (t0.c20)))) WHERE ((((vt0.c1 IN ())) ISNULL)) ORDER BY (((vt0.c0) BETWEEN (vt0.c1) AND (t0.c20)) IN (t0.c20))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) ISNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CAST((((t0.c20, vt0.c0, NULL))>((vt1.c0, 5.183821107084263E-4, vt1.c0))) AS TEXT) LEFT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS TEXT)) BETWEEN (TIME(vt0.c1, -1.505568322E9, vt0.c0, vt0.c0, t0.c50)) AND (((vt0.c1) NOT BETWEEN (vt1.c0) AND (t0.c20)))) ORDER BY (((vt0.c0) BETWEEN (vt0.c1) AND (t0.c20)) IN (t0.c20))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON CAST((((t0.c20, vt0.c0, NULL))>((vt1.c0, 5.183821107084263E-4, vt1.c0))) AS TEXT) LEFT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS TEXT)) BETWEEN (TIME(vt0.c1, -1.505568322E9, vt0.c0, vt0.c0, t0.c50)) AND (((vt0.c1) NOT BETWEEN (vt1.c0) AND (t0.c20)))) WHERE ((((vt0.c1 IN ())) ISNULL)) ORDER BY (((vt0.c0) BETWEEN (vt0.c1) AND (t0.c20)) IN (t0.c20))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) ISNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CAST((((t0.c20, vt0.c0, NULL))>((vt1.c0, 5.183821107084263E-4, vt1.c0))) AS TEXT) LEFT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS TEXT)) BETWEEN (TIME(vt0.c1, -1.505568322E9, vt0.c0, vt0.c0, t0.c50)) AND (((vt0.c1) NOT BETWEEN (vt1.c0) AND (t0.c20)))) ORDER BY (((vt0.c0) BETWEEN (vt0.c1) AND (t0.c20)) IN (t0.c20))  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt1 INDEXED BY i2 WHERE ((((((vt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN ((NULL, vt1.c0, t0.c20)) AND ((t0.c20, vt0.c1, vt0.c1))))%(CAST(x'' AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN ((NULL, vt1.c0, t0.c20)) AND ((t0.c20, vt0.c1, vt0.c1))))%(CAST(x'' AS BLOB)))) IS TRUE)  as count FROM t0, vt0, vt1 INDEXED BY i2);
SELECT ALL * FROM t0, vt0, vt1 INDEXED BY i2 WHERE ((((((vt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN ((NULL, vt1.c0, t0.c20)) AND ((t0.c20, vt0.c1, vt0.c1))))%(CAST(x'' AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN ((NULL, vt1.c0, t0.c20)) AND ((t0.c20, vt0.c1, vt0.c1))))%(CAST(x'' AS BLOB)))) IS TRUE)  as count FROM t0, vt0, vt1 INDEXED BY i2);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((((vt0.c1)) BETWEEN ((t0.c20)) AND ((vt0.c1)))) BETWEEN ((((t0.c20))<>((vt0.c1)))) AND (((((((((t0.c50)OR(t0.c50)))AND(t0.c50)))AND(vt0.c0)))OR(t0.c50)))) WHERE (((t0.c50)|(t0.c20)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c50)|(t0.c20)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((((vt0.c1)) BETWEEN ((t0.c20)) AND ((vt0.c1)))) BETWEEN ((((t0.c20))<>((vt0.c1)))) AND (((((((((t0.c50)OR(t0.c50)))AND(t0.c50)))AND(vt0.c0)))OR(t0.c50)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((((vt0.c1)) BETWEEN ((t0.c20)) AND ((vt0.c1)))) BETWEEN ((((t0.c20))<>((vt0.c1)))) AND (((((((((t0.c50)OR(t0.c50)))AND(t0.c50)))AND(vt0.c0)))OR(t0.c50)))) WHERE (((t0.c50)|(t0.c20)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c50)|(t0.c20)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((((vt0.c1)) BETWEEN ((t0.c20)) AND ((vt0.c1)))) BETWEEN ((((t0.c20))<>((vt0.c1)))) AND (((((((((t0.c50)OR(t0.c50)))AND(t0.c50)))AND(vt0.c0)))OR(t0.c50)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((((vt0.c1)) BETWEEN ((t0.c20)) AND ((vt0.c1)))) BETWEEN ((((t0.c20))<>((vt0.c1)))) AND (((((((((t0.c50)OR(t0.c50)))AND(t0.c50)))AND(vt0.c0)))OR(t0.c50)))) WHERE (((t0.c50)|(t0.c20)) COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE ('yo72!I\ ') ORDER BY ((((t0.c20)>=(t0.c50))) NOT BETWEEN (CAST(t0.c50 AS INTEGER)) AND (((((((((t0.c20)AND(t0.c20)))AND(t0.c50)))OR(t0.c20)))OR(t0.c50)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('yo72!I\ ') IS TRUE)  as count FROM t0 ORDER BY ((((t0.c20)>=(t0.c50))) NOT BETWEEN (CAST(t0.c50 AS INTEGER)) AND (((((((((t0.c20)AND(t0.c20)))AND(t0.c50)))OR(t0.c20)))OR(t0.c50)))) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ('yo72!I\ ') ORDER BY ((((t0.c20)>=(t0.c50))) NOT BETWEEN (CAST(t0.c50 AS INTEGER)) AND (((((((((t0.c20)AND(t0.c20)))AND(t0.c50)))OR(t0.c20)))OR(t0.c50)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('yo72!I\ ') IS TRUE)  as count FROM t0 ORDER BY ((((t0.c20)>=(t0.c50))) NOT BETWEEN (CAST(t0.c50 AS INTEGER)) AND (((((((((t0.c20)AND(t0.c20)))AND(t0.c50)))OR(t0.c20)))OR(t0.c50)))) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ('yo72!I\ ') ORDER BY ((((t0.c20)>=(t0.c50))) NOT BETWEEN (CAST(t0.c50 AS INTEGER)) AND (((((((((t0.c20)AND(t0.c20)))AND(t0.c50)))OR(t0.c20)))OR(t0.c50)))) ASC  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (((CASE x''  WHEN vt0.c1 THEN vt0.c0 ELSE -1.505568322E9 END)+(json_insert(vt0.c0, vt0.c0, vt0.c1, t0.c50, vt0.c1, t0.c20, '1679022038'))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x''  WHEN vt0.c1 THEN vt0.c0 ELSE -1.505568322E9 END)+(json_insert(vt0.c0, vt0.c0, vt0.c1, t0.c50, vt0.c1, t0.c20, '1679022038')))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((CASE x''  WHEN vt0.c1 THEN vt0.c0 ELSE -1.505568322E9 END)+(json_insert(vt0.c0, vt0.c0, vt0.c1, t0.c50, vt0.c1, t0.c20, '1679022038'))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x''  WHEN vt0.c1 THEN vt0.c0 ELSE -1.505568322E9 END)+(json_insert(vt0.c0, vt0.c0, vt0.c1, t0.c50, vt0.c1, t0.c20, '1679022038')))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((CASE x''  WHEN vt0.c1 THEN vt0.c0 ELSE -1.505568322E9 END)+(json_insert(vt0.c0, vt0.c0, vt0.c1, t0.c50, vt0.c1, t0.c20, '1679022038'))));
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN t0.c20 THEN t0.c20 WHEN t0.c50 THEN vt0.c0 WHEN t0.c50 THEN vt1.c0 ELSE vt0.c1 END)/(((x'')>=(vt1.c0)))) WHERE (json_insert(((((vt0.c1)AND(t0.c20)))AND(vt0.c0)), '1388255140', 0.3694396199932236)) ORDER BY UNLIKELY(DISTINCT ((t0.c20)>>(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((((vt0.c1)AND(t0.c20)))AND(vt0.c0)), '1388255140', 0.3694396199932236)) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN t0.c20 THEN t0.c20 WHEN t0.c50 THEN vt0.c0 WHEN t0.c50 THEN vt1.c0 ELSE vt0.c1 END)/(((x'')>=(vt1.c0)))) ORDER BY UNLIKELY(DISTINCT ((t0.c20)>>(vt1.c0))));
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN t0.c20 THEN t0.c20 WHEN t0.c50 THEN vt0.c0 WHEN t0.c50 THEN vt1.c0 ELSE vt0.c1 END)/(((x'')>=(vt1.c0)))) WHERE (json_insert(((((vt0.c1)AND(t0.c20)))AND(vt0.c0)), '1388255140', 0.3694396199932236)) ORDER BY UNLIKELY(DISTINCT ((t0.c20)>>(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((((vt0.c1)AND(t0.c20)))AND(vt0.c0)), '1388255140', 0.3694396199932236)) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN t0.c20 THEN t0.c20 WHEN t0.c50 THEN vt0.c0 WHEN t0.c50 THEN vt1.c0 ELSE vt0.c1 END)/(((x'')>=(vt1.c0)))) ORDER BY UNLIKELY(DISTINCT ((t0.c20)>>(vt1.c0))));
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((((vt1.c0)OR(vt0.c0)))AND('t')) IN ())) ORDER BY ((x'') BETWEEN (CASE WHEN t0.c20 THEN vt0.c0 ELSE t0.c50 END) AND ((((1170752358))<=((t0.c50))))), ((x'') BETWEEN (vt0.c0) AND (CASE WHEN vt1.c0 THEN t0.c50 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)OR(vt0.c0)))AND('t')) IN ())) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((x'') BETWEEN (CASE WHEN t0.c20 THEN vt0.c0 ELSE t0.c50 END) AND ((((1170752358))<=((t0.c50))))), ((x'') BETWEEN (vt0.c0) AND (CASE WHEN vt1.c0 THEN t0.c50 END))  NULLS LAST);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((((vt1.c0)OR(vt0.c0)))AND('t')) IN ())) ORDER BY ((x'') BETWEEN (CASE WHEN t0.c20 THEN vt0.c0 ELSE t0.c50 END) AND ((((1170752358))<=((t0.c50))))), ((x'') BETWEEN (vt0.c0) AND (CASE WHEN vt1.c0 THEN t0.c50 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)OR(vt0.c0)))AND('t')) IN ())) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((x'') BETWEEN (CASE WHEN t0.c20 THEN vt0.c0 ELSE t0.c50 END) AND ((((1170752358))<=((t0.c50))))), ((x'') BETWEEN (vt0.c0) AND (CASE WHEN vt1.c0 THEN t0.c50 END))  NULLS LAST);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((((((vt1.c0)OR(vt0.c0)))AND('t')) IN ())) ORDER BY ((x'') BETWEEN (CASE WHEN t0.c20 THEN vt0.c0 ELSE t0.c50 END) AND ((((1170752358))<=((t0.c50))))), ((x'') BETWEEN (vt0.c0) AND (CASE WHEN vt1.c0 THEN t0.c50 END))  NULLS LAST;
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((t0.c20)/(t0.c50)))>((0Xffffffffc1aa8e0a IN ()))));
SELECT SUM(count) FROM (SELECT ((((((t0.c20)/(t0.c50)))>((0xffffffffc1aa8e0a IN ())))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((t0.c20)/(t0.c50)))>((0Xffffffffc1aa8e0a IN ()))));
SELECT SUM(count) FROM (SELECT ((((((t0.c20)/(t0.c50)))>((0xffffffffc1aa8e0a IN ())))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((t0.c20)/(t0.c50)))>((0Xffffffffc1aa8e0a IN ()))));
SELECT * FROM vt1 WHERE ('1840029486');
SELECT SUM(count) FROM (SELECT (('1840029486') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('1840029486');
SELECT SUM(count) FROM (SELECT (('1840029486') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('1840029486');
SELECT ALL * FROM vt0, vt1, t0 WHERE ((+ ((NOT (x''))))) ORDER BY CASE ((vt1.c0) BETWEEN (0.37574454051568473) AND (NULL))  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)) THEN x'' ELSE (~ (t0.c50)) END;
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (x''))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CASE ((vt1.c0) BETWEEN (0.37574454051568473) AND (NULL))  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)) THEN x'' ELSE (~ (t0.c50)) END);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((+ ((NOT (x''))))) ORDER BY CASE ((vt1.c0) BETWEEN (0.37574454051568473) AND (NULL))  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)) THEN x'' ELSE (~ (t0.c50)) END;
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (x''))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CASE ((vt1.c0) BETWEEN (0.37574454051568473) AND (NULL))  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)) THEN x'' ELSE (~ (t0.c50)) END);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((+ ((NOT (x''))))) ORDER BY CASE ((vt1.c0) BETWEEN (0.37574454051568473) AND (NULL))  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)) THEN x'' ELSE (~ (t0.c50)) END;
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (~ ('')) INNER JOIN vt1 ON vt1.c0 WHERE (t0.c20 COLLATE BINARY) ORDER BY IFNULL(DISTINCT (((vt0.c0, '1XwAdW題K', 0Xffffffffb2032fa7)) NOT BETWEEN ((t0.c50, vt0.c0, vt0.c1)) AND ((x'', t0.c50, vt1.c0))), CASE t0.c50  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE 0.5319750959026655 END)  NULLS LAST, INSTR(t0.c20, t0.c50) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((t0.c20 COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (~ ('')) INNER JOIN vt1 ON vt1.c0 ORDER BY IFNULL(DISTINCT (((vt0.c0, '1XwAdW題K', 0xffffffffb2032fa7)) NOT BETWEEN ((t0.c50, vt0.c0, vt0.c1)) AND ((x'', t0.c50, vt1.c0))), CASE t0.c50  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE 0.5319750959026655 END)  NULLS LAST, INSTR(t0.c20, t0.c50) COLLATE NOCASE);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (~ ('')) INNER JOIN vt1 ON vt1.c0 WHERE (t0.c20 COLLATE BINARY) ORDER BY IFNULL(DISTINCT (((vt0.c0, '1XwAdW題K', 0Xffffffffb2032fa7)) NOT BETWEEN ((t0.c50, vt0.c0, vt0.c1)) AND ((x'', t0.c50, vt1.c0))), CASE t0.c50  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE 0.5319750959026655 END)  NULLS LAST, INSTR(t0.c20, t0.c50) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((t0.c20 COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (~ ('')) INNER JOIN vt1 ON vt1.c0 ORDER BY IFNULL(DISTINCT (((vt0.c0, '1XwAdW題K', 0xffffffffb2032fa7)) NOT BETWEEN ((t0.c50, vt0.c0, vt0.c1)) AND ((x'', t0.c50, vt1.c0))), CASE t0.c50  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE 0.5319750959026655 END)  NULLS LAST, INSTR(t0.c20, t0.c50) COLLATE NOCASE);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (~ ('')) INNER JOIN vt1 ON vt1.c0 WHERE (t0.c20 COLLATE BINARY) ORDER BY IFNULL(DISTINCT (((vt0.c0, '1XwAdW題K', 0Xffffffffb2032fa7)) NOT BETWEEN ((t0.c50, vt0.c0, vt0.c1)) AND ((x'', t0.c50, vt1.c0))), CASE t0.c50  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE 0.5319750959026655 END)  NULLS LAST, INSTR(t0.c20, t0.c50) COLLATE NOCASE;
SELECT * FROM t0, vt1, vt0 WHERE (((((((t0.c50)||(vt1.c0)))AND((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))))OR(((((((((t0.c50)AND(t0.c20)))OR(vt0.c1)))AND(t0.c50)))OR(t0.c20))))) ORDER BY ((0x61df76a2)AND(0xffffffff83cf7f70)) ASC  NULLS LAST, CASE WHEN ((vt0.c1) NOT NULL) THEN (~ ('899169598')) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c50)||(vt1.c0)))AND((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))))OR(((((((((t0.c50)AND(t0.c20)))OR(vt0.c1)))AND(t0.c50)))OR(t0.c20))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((0x61df76a2)AND(0Xffffffff83cf7f70)) ASC  NULLS LAST, CASE WHEN ((vt0.c1) NOT NULL) THEN (~ ('899169598')) END ASC);
SELECT * FROM t0, vt1, vt0 WHERE (((((((t0.c50)||(vt1.c0)))AND((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))))OR(((((((((t0.c50)AND(t0.c20)))OR(vt0.c1)))AND(t0.c50)))OR(t0.c20))))) ORDER BY ((0x61df76a2)AND(0xffffffff83cf7f70)) ASC  NULLS LAST, CASE WHEN ((vt0.c1) NOT NULL) THEN (~ ('899169598')) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c50)||(vt1.c0)))AND((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))))OR(((((((((t0.c50)AND(t0.c20)))OR(vt0.c1)))AND(t0.c50)))OR(t0.c20))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((0x61df76a2)AND(0Xffffffff83cf7f70)) ASC  NULLS LAST, CASE WHEN ((vt0.c1) NOT NULL) THEN (~ ('899169598')) END ASC);
SELECT * FROM t0, vt1, vt0 WHERE (((((((t0.c50)||(vt1.c0)))AND((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))))OR(((((((((t0.c50)AND(t0.c20)))OR(vt0.c1)))AND(t0.c50)))OR(t0.c20))))) ORDER BY ((0x61df76a2)AND(0xffffffff83cf7f70)) ASC  NULLS LAST, CASE WHEN ((vt0.c1) NOT NULL) THEN (~ ('899169598')) END ASC;
SELECT ALL * FROM vt1 WHERE (ROUND(0.3276032418578555, vt1.c0)) ORDER BY (((vt1.c0) IS TRUE) IN ());
SELECT SUM(count) FROM (SELECT ((ROUND(0.3276032418578555, vt1.c0)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) IS TRUE) IN ()));
SELECT ALL * FROM vt1 WHERE (ROUND(0.3276032418578555, vt1.c0)) ORDER BY (((vt1.c0) IS TRUE) IN ());
SELECT SUM(count) FROM (SELECT ((ROUND(0.3276032418578555, vt1.c0)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) IS TRUE) IN ()));
SELECT ALL * FROM vt1 WHERE (ROUND(0.3276032418578555, vt1.c0)) ORDER BY (((vt1.c0) IS TRUE) IN ());
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN (vt0.c0, (((vt0.c1))<((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN (vt0.c0, (((vt0.c1))<((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN (vt0.c0, (((vt0.c1))<((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN (vt0.c0, (((vt0.c1))<((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN (vt0.c0, (((vt0.c1))<((vt0.c0))))));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((t0.c50) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c50) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((t0.c50) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c50) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((t0.c50) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c50) BETWEEN (((0.7710310173988686) IS TRUE)) AND ((t0.c50 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c50) BETWEEN (((0.7710310173988686) IS TRUE)) AND ((t0.c50 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c50) BETWEEN (((0.7710310173988686) IS TRUE)) AND ((t0.c50 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c50) BETWEEN (((0.7710310173988686) IS TRUE)) AND ((t0.c50 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c50) BETWEEN (((0.7710310173988686) IS TRUE)) AND ((t0.c50 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0.9873846006169571)AND(vt0.c0)))AND(ABS(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.9873846006169571)AND(vt0.c0)))AND(ABS(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0.9873846006169571)AND(vt0.c0)))AND(ABS(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.9873846006169571)AND(vt0.c0)))AND(ABS(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0.9873846006169571)AND(vt0.c0)))AND(ABS(vt0.c1))));
SELECT * FROM vt1, vt0 WHERE (CASE ((vt1.c0) IS TRUE)  WHEN ((x'') BETWEEN (vt0.c1) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) END) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN ((0.7737245682185407 IN (vt0.c0))) AND (((vt0.c0)%(vt0.c0))))  NULLS FIRST, (- ((('')||(vt1.c0)))) DESC  NULLS LAST, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) IS TRUE)  WHEN ((x'') BETWEEN (vt0.c1) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN ((0.7737245682185407 IN (vt0.c0))) AND (((vt0.c0)%(vt0.c0))))  NULLS FIRST, (- ((('')||(vt1.c0)))) DESC  NULLS LAST, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) DESC);
SELECT * FROM vt1, vt0 WHERE (CASE ((vt1.c0) IS TRUE)  WHEN ((x'') BETWEEN (vt0.c1) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) END) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN ((0.7737245682185407 IN (vt0.c0))) AND (((vt0.c0)%(vt0.c0))))  NULLS FIRST, (- ((('')||(vt1.c0)))) DESC  NULLS LAST, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) IS TRUE)  WHEN ((x'') BETWEEN (vt0.c1) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN ((0.7737245682185407 IN (vt0.c0))) AND (((vt0.c0)%(vt0.c0))))  NULLS FIRST, (- ((('')||(vt1.c0)))) DESC  NULLS LAST, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) DESC);
SELECT * FROM vt1, vt0 WHERE (CASE ((vt1.c0) IS TRUE)  WHEN ((x'') BETWEEN (vt0.c1) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) END) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN ((0.7737245682185407 IN (vt0.c0))) AND (((vt0.c0)%(vt0.c0))))  NULLS FIRST, (- ((('')||(vt1.c0)))) DESC  NULLS LAST, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) DESC;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON (((NOT (t0.c50))) NOT BETWEEN ((((t0.c50)) BETWEEN ((t0.c20)) AND ((t0.c50)))) AND (((((vt1.c0)AND(vt1.c0)))OR(t0.c20)))) WHERE (TIME(((((t0.c20)OR(NULL)))OR(t0.c20)), t0.c20, ((0.3303014365049486) NOT BETWEEN (vt1.c0) AND (t0.c50)))) ORDER BY ((CAST(t0.c20 AS REAL)) NOTNULL);
SELECT SUM(count) FROM (SELECT ((TIME(((((t0.c20)OR(NULL)))OR(t0.c20)), t0.c20, ((0.3303014365049486) NOT BETWEEN (vt1.c0) AND (t0.c50)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (((NOT (t0.c50))) NOT BETWEEN ((((t0.c50)) BETWEEN ((t0.c20)) AND ((t0.c50)))) AND (((((vt1.c0)AND(vt1.c0)))OR(t0.c20)))) ORDER BY ((CAST(t0.c20 AS REAL)) NOTNULL));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON (((NOT (t0.c50))) NOT BETWEEN ((((t0.c50)) BETWEEN ((t0.c20)) AND ((t0.c50)))) AND (((((vt1.c0)AND(vt1.c0)))OR(t0.c20)))) WHERE (TIME(((((t0.c20)OR(NULL)))OR(t0.c20)), t0.c20, ((0.3303014365049486) NOT BETWEEN (vt1.c0) AND (t0.c50)))) ORDER BY ((CAST(t0.c20 AS REAL)) NOTNULL);
SELECT SUM(count) FROM (SELECT ((TIME(((((t0.c20)OR(NULL)))OR(t0.c20)), t0.c20, ((0.3303014365049486) NOT BETWEEN (vt1.c0) AND (t0.c50)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (((NOT (t0.c50))) NOT BETWEEN ((((t0.c50)) BETWEEN ((t0.c20)) AND ((t0.c50)))) AND (((((vt1.c0)AND(vt1.c0)))OR(t0.c20)))) ORDER BY ((CAST(t0.c20 AS REAL)) NOTNULL));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON (((NOT (t0.c50))) NOT BETWEEN ((((t0.c50)) BETWEEN ((t0.c20)) AND ((t0.c50)))) AND (((((vt1.c0)AND(vt1.c0)))OR(t0.c20)))) WHERE (TIME(((((t0.c20)OR(NULL)))OR(t0.c20)), t0.c20, ((0.3303014365049486) NOT BETWEEN (vt1.c0) AND (t0.c50)))) ORDER BY ((CAST(t0.c20 AS REAL)) NOTNULL);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((((vt1.c0)OR(vt0.c1)))OR(vt0.c1)) AS NUMERIC)) ORDER BY (('-887153263') BETWEEN (((0.08311565226317219) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(vt0.c1)))OR(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (('-887153263') BETWEEN (((0.08311565226317219) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((((vt1.c0)OR(vt0.c1)))OR(vt0.c1)) AS NUMERIC)) ORDER BY (('-887153263') BETWEEN (((0.08311565226317219) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(vt0.c1)))OR(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (('-887153263') BETWEEN (((0.08311565226317219) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((((vt1.c0)OR(vt0.c1)))OR(vt0.c1)) AS NUMERIC)) ORDER BY (('-887153263') BETWEEN (((0.08311565226317219) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((((t0.c20, t0.c50, vt0.c0)) BETWEEN ((t0.c20, t0.c50, t0.c50)) AND ((vt0.c0, vt0.c0, t0.c50))))&((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c20, t0.c50, vt0.c0)) BETWEEN ((t0.c20, t0.c50, t0.c50)) AND ((vt0.c0, vt0.c0, t0.c50))))&((NOT (vt1.c0))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((((t0.c20, t0.c50, vt0.c0)) BETWEEN ((t0.c20, t0.c50, t0.c50)) AND ((vt0.c0, vt0.c0, t0.c50))))&((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c20, t0.c50, vt0.c0)) BETWEEN ((t0.c20, t0.c50, t0.c50)) AND ((vt0.c0, vt0.c0, t0.c50))))&((NOT (vt1.c0))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((((t0.c20, t0.c50, vt0.c0)) BETWEEN ((t0.c20, t0.c50, t0.c50)) AND ((vt0.c0, vt0.c0, t0.c50))))&((NOT (vt1.c0)))));
SELECT * FROM vt0, vt1 INNER JOIN t0 ON (((+ (t0.c50))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (CASE t0.c20  WHEN vt0.c0 THEN vt0.c1 WHEN t0.c50 THEN 0.2319861355585855 WHEN 0.8844006883543547 THEN vt0.c0 END)) WHERE (CASE ((t0.c50) IS TRUE)  WHEN ((t0.c50) NOT BETWEEN (vt0.c1) AND (x'')) THEN (((vt0.c0))>((t0.c50))) END) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c50) IS TRUE)  WHEN ((t0.c50) NOT BETWEEN (vt0.c1) AND (x'')) THEN (((vt0.c0))>((t0.c50))) END) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON (((+ (t0.c50))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (CASE t0.c20  WHEN vt0.c0 THEN vt0.c1 WHEN t0.c50 THEN 0.2319861355585855 WHEN 0.8844006883543547 THEN vt0.c0 END)) ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 INNER JOIN t0 ON (((+ (t0.c50))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (CASE t0.c20  WHEN vt0.c0 THEN vt0.c1 WHEN t0.c50 THEN 0.2319861355585855 WHEN 0.8844006883543547 THEN vt0.c0 END)) WHERE (CASE ((t0.c50) IS TRUE)  WHEN ((t0.c50) NOT BETWEEN (vt0.c1) AND (x'')) THEN (((vt0.c0))>((t0.c50))) END) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c50) IS TRUE)  WHEN ((t0.c50) NOT BETWEEN (vt0.c1) AND (x'')) THEN (((vt0.c0))>((t0.c50))) END) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON (((+ (t0.c50))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (CASE t0.c20  WHEN vt0.c0 THEN vt0.c1 WHEN t0.c50 THEN 0.2319861355585855 WHEN 0.8844006883543547 THEN vt0.c0 END)) ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 INNER JOIN t0 ON (((+ (t0.c50))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (CASE t0.c20  WHEN vt0.c0 THEN vt0.c1 WHEN t0.c50 THEN 0.2319861355585855 WHEN 0.8844006883543547 THEN vt0.c0 END)) WHERE (CASE ((t0.c50) IS TRUE)  WHEN ((t0.c50) NOT BETWEEN (vt0.c1) AND (x'')) THEN (((vt0.c0))>((t0.c50))) END) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON (~ (x'')) WHERE (((0x1639b1ee) BETWEEN (((vt1.c0)>=(vt0.c0))) AND ((- (vt1.c0))))) ORDER BY 0x60c99948  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0X1639b1ee) BETWEEN (((vt1.c0)>=(vt0.c0))) AND ((- (vt1.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (~ (x'')) ORDER BY 0X60c99948  NULLS FIRST);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON (~ (x'')) WHERE (((0x1639b1ee) BETWEEN (((vt1.c0)>=(vt0.c0))) AND ((- (vt1.c0))))) ORDER BY 0x60c99948  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0X1639b1ee) BETWEEN (((vt1.c0)>=(vt0.c0))) AND ((- (vt1.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (~ (x'')) ORDER BY 0X60c99948  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))>=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))>=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))>=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))>=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))>=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON (NOT ((~ (t0.c50)))) WHERE (UPPER(DISTINCT (+ (t0.c20))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (+ (t0.c20)))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON (NOT ((~ (t0.c50)))));
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON (NOT ((~ (t0.c50)))) WHERE (UPPER(DISTINCT (+ (t0.c20))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (+ (t0.c20)))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON (NOT ((~ (t0.c50)))));
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON (NOT ((~ (t0.c50)))) WHERE (UPPER(DISTINCT (+ (t0.c20))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((CASE WHEN t0.c50 THEN t0.c20 END))<=((t0.c20))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t0.c50 THEN t0.c20 END))<=((t0.c20)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((CASE WHEN t0.c50 THEN t0.c20 END))<=((t0.c20))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t0.c50 THEN t0.c20 END))<=((t0.c20)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((CASE WHEN t0.c50 THEN t0.c20 END))<=((t0.c20))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (((t0.c20 IN ())) IS TRUE) INNER JOIN vt0 ON (((((vt0.c1, t0.c20, vt1.c0, vt1.c0, vt0.c1)) BETWEEN ((vt0.c0, '1679022038', t0.c20, t0.c50, t0.c20)) AND ((-2014742560, vt0.c0, t0.c50, vt0.c0, t0.c50))))!=((~ (vt1.c0)))) WHERE (CASE WHEN -21376714 THEN vt1.c0 WHEN '' THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE t0.c50 END COLLATE NOCASE) ORDER BY CAST(((((t0.c20)AND(vt1.c0)))AND(t0.c20)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN -21376714 THEN vt1.c0 WHEN '' THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE t0.c50 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (((t0.c20 IN ())) IS TRUE) INNER JOIN vt0 ON (((((vt0.c1, t0.c20, vt1.c0, vt1.c0, vt0.c1)) BETWEEN ((vt0.c0, '1679022038', t0.c20, t0.c50, t0.c20)) AND ((-2014742560, vt0.c0, t0.c50, vt0.c0, t0.c50))))!=((~ (vt1.c0)))) ORDER BY CAST(((((t0.c20)AND(vt1.c0)))AND(t0.c20)) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (((t0.c20 IN ())) IS TRUE) INNER JOIN vt0 ON (((((vt0.c1, t0.c20, vt1.c0, vt1.c0, vt0.c1)) BETWEEN ((vt0.c0, '1679022038', t0.c20, t0.c50, t0.c20)) AND ((-2014742560, vt0.c0, t0.c50, vt0.c0, t0.c50))))!=((~ (vt1.c0)))) WHERE (CASE WHEN -21376714 THEN vt1.c0 WHEN '' THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE t0.c50 END COLLATE NOCASE) ORDER BY CAST(((((t0.c20)AND(vt1.c0)))AND(t0.c20)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN -21376714 THEN vt1.c0 WHEN '' THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE t0.c50 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (((t0.c20 IN ())) IS TRUE) INNER JOIN vt0 ON (((((vt0.c1, t0.c20, vt1.c0, vt1.c0, vt0.c1)) BETWEEN ((vt0.c0, '1679022038', t0.c20, t0.c50, t0.c20)) AND ((-2014742560, vt0.c0, t0.c50, vt0.c0, t0.c50))))!=((~ (vt1.c0)))) ORDER BY CAST(((((t0.c20)AND(vt1.c0)))AND(t0.c20)) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (((t0.c20 IN ())) IS TRUE) INNER JOIN vt0 ON (((((vt0.c1, t0.c20, vt1.c0, vt1.c0, vt0.c1)) BETWEEN ((vt0.c0, '1679022038', t0.c20, t0.c50, t0.c20)) AND ((-2014742560, vt0.c0, t0.c50, vt0.c0, t0.c50))))!=((~ (vt1.c0)))) WHERE (CASE WHEN -21376714 THEN vt1.c0 WHEN '' THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE t0.c50 END COLLATE NOCASE) ORDER BY CAST(((((t0.c20)AND(vt1.c0)))AND(t0.c20)) AS TEXT)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((t0.c50, t0.c50, vt0.c0)) BETWEEN ((SUBSTR(t0.c20, vt0.c1), NULL COLLATE BINARY, ((((t0.c20)AND(t0.c50)))AND(vt1.c0)))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c20)), (NOT (t0.c50)), (vt0.c0 IN ()))))) ORDER BY '-1441934427' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c50, t0.c50, vt0.c0)) BETWEEN ((SUBSTR(t0.c20, vt0.c1), NULL COLLATE BINARY, ((((t0.c20)AND(t0.c50)))AND(vt1.c0)))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c20)), (NOT (t0.c50)), (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY '-1441934427' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((t0.c50, t0.c50, vt0.c0)) BETWEEN ((SUBSTR(t0.c20, vt0.c1), NULL COLLATE BINARY, ((((t0.c20)AND(t0.c50)))AND(vt1.c0)))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c20)), (NOT (t0.c50)), (vt0.c0 IN ()))))) ORDER BY '-1441934427' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c50, t0.c50, vt0.c0)) BETWEEN ((SUBSTR(t0.c20, vt0.c1), NULL COLLATE BINARY, ((((t0.c20)AND(t0.c50)))AND(vt1.c0)))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c20)), (NOT (t0.c50)), (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY '-1441934427' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((t0.c50, t0.c50, vt0.c0)) BETWEEN ((SUBSTR(t0.c20, vt0.c1), NULL COLLATE BINARY, ((((t0.c20)AND(t0.c50)))AND(vt1.c0)))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c20)), (NOT (t0.c50)), (vt0.c0 IN ()))))) ORDER BY '-1441934427' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((((vt0.c0) NOT BETWEEN (-483829544) AND (t0.c50))) IS FALSE)) ORDER BY (+ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (-483829544) AND (t0.c50))) IS FALSE)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (+ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((((vt0.c0) NOT BETWEEN (-483829544) AND (t0.c50))) IS FALSE)) ORDER BY (+ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (-483829544) AND (t0.c50))) IS FALSE)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (+ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((((vt0.c0) NOT BETWEEN (-483829544) AND (t0.c50))) IS FALSE)) ORDER BY (+ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((t0.c20)) NOT BETWEEN ((((((((((((((t0.c50)OR(vt1.c0)))OR(vt0.c1)))AND(t0.c50)))OR(t0.c20)))OR(0.958663500946904)))OR(0.27092022275142447)))) AND ((ABS(DISTINCT t0.c50)))) INNER JOIN vt1 ON vt0.c0 WHERE ((- ('6z')));
SELECT SUM(count) FROM (SELECT (((- ('6z'))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((t0.c20)) NOT BETWEEN ((((((((((((((t0.c50)OR(vt1.c0)))OR(vt0.c1)))AND(t0.c50)))OR(t0.c20)))OR(0.958663500946904)))OR(0.27092022275142447)))) AND ((ABS(DISTINCT t0.c50)))) INNER JOIN vt1 ON vt0.c0);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((t0.c20)) NOT BETWEEN ((((((((((((((t0.c50)OR(vt1.c0)))OR(vt0.c1)))AND(t0.c50)))OR(t0.c20)))OR(0.958663500946904)))OR(0.27092022275142447)))) AND ((ABS(DISTINCT t0.c50)))) INNER JOIN vt1 ON vt0.c0 WHERE ((- ('6z')));
SELECT SUM(count) FROM (SELECT (((- ('6z'))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((t0.c20)) NOT BETWEEN ((((((((((((((t0.c50)OR(vt1.c0)))OR(vt0.c1)))AND(t0.c50)))OR(t0.c20)))OR(0.958663500946904)))OR(0.27092022275142447)))) AND ((ABS(DISTINCT t0.c50)))) INNER JOIN vt1 ON vt0.c0);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((t0.c20)) NOT BETWEEN ((((((((((((((t0.c50)OR(vt1.c0)))OR(vt0.c1)))AND(t0.c50)))OR(t0.c20)))OR(0.958663500946904)))OR(0.27092022275142447)))) AND ((ABS(DISTINCT t0.c50)))) INNER JOIN vt1 ON vt0.c0 WHERE ((- ('6z')));
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT BETWEEN (1408521987) AND (((vt0.c1)IS(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY) NOT BETWEEN (1408521987) AND (((vt0.c1)IS(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT BETWEEN (1408521987) AND (((vt0.c1)IS(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY) NOT BETWEEN (1408521987) AND (((vt0.c1)IS(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT BETWEEN (1408521987) AND (((vt0.c1)IS(vt1.c0)))));
SELECT COUNT(*) FROM vt1, t0 WHERE (CASE t0.c20  WHEN x'' THEN ((vt1.c0)=(t0.c50)) WHEN LIKELIHOOD(DISTINCT t0.c50, 0.9587366009268756) THEN CAST(t0.c20 AS NUMERIC) WHEN ((((vt1.c0)AND(t0.c20)))AND(t0.c20)) THEN ((t0.c50)LIKE(t0.c20)) ELSE ((((((((t0.c20)AND(vt1.c0)))AND(t0.c50)))OR(vt1.c0)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c20  WHEN x'' THEN ((vt1.c0)=(t0.c50)) WHEN LIKELIHOOD(DISTINCT t0.c50, 0.9587366009268756) THEN CAST(t0.c20 AS NUMERIC) WHEN ((((vt1.c0)AND(t0.c20)))AND(t0.c20)) THEN ((t0.c50)LIKE(t0.c20)) ELSE ((((((((t0.c20)AND(vt1.c0)))AND(t0.c50)))OR(vt1.c0)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CASE t0.c20  WHEN x'' THEN ((vt1.c0)=(t0.c50)) WHEN LIKELIHOOD(DISTINCT t0.c50, 0.9587366009268756) THEN CAST(t0.c20 AS NUMERIC) WHEN ((((vt1.c0)AND(t0.c20)))AND(t0.c20)) THEN ((t0.c50)LIKE(t0.c20)) ELSE ((((((((t0.c20)AND(vt1.c0)))AND(t0.c50)))OR(vt1.c0)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c20  WHEN x'' THEN ((vt1.c0)=(t0.c50)) WHEN LIKELIHOOD(DISTINCT t0.c50, 0.9587366009268756) THEN CAST(t0.c20 AS NUMERIC) WHEN ((((vt1.c0)AND(t0.c20)))AND(t0.c20)) THEN ((t0.c50)LIKE(t0.c20)) ELSE ((((((((t0.c20)AND(vt1.c0)))AND(t0.c50)))OR(vt1.c0)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CASE t0.c20  WHEN x'' THEN ((vt1.c0)=(t0.c50)) WHEN LIKELIHOOD(DISTINCT t0.c50, 0.9587366009268756) THEN CAST(t0.c20 AS NUMERIC) WHEN ((((vt1.c0)AND(t0.c20)))AND(t0.c20)) THEN ((t0.c50)LIKE(t0.c20)) ELSE ((((((((t0.c20)AND(vt1.c0)))AND(t0.c50)))OR(vt1.c0)))OR(vt1.c0)) END);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END IN ())) ORDER BY (((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0))))>=((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0))))>=((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END IN ())) ORDER BY (((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0))))>=((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0))))>=((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END IN ())) ORDER BY (((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0))))>=((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (((vt1.c0) NOTNULL) COLLATE BINARY) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC);
SELECT * FROM vt1 WHERE (((vt1.c0) NOTNULL) COLLATE BINARY) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC);
SELECT * FROM vt1 WHERE (((vt1.c0) NOTNULL) COLLATE BINARY) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC;
SELECT * FROM t0, vt1 INDEXED BY i2, vt0 WHERE (((((vt1.c0)IS NOT(vt0.c1)))+(((vt0.c0)IS NOT(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS NOT(vt0.c1)))+(((vt0.c0)IS NOT(vt0.c1))))) IS TRUE)  as count FROM t0, vt1 INDEXED BY i2, vt0);
SELECT * FROM t0, vt1 INDEXED BY i2, vt0 WHERE (((((vt1.c0)IS NOT(vt0.c1)))+(((vt0.c0)IS NOT(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS NOT(vt0.c1)))+(((vt0.c0)IS NOT(vt0.c1))))) IS TRUE)  as count FROM t0, vt1 INDEXED BY i2, vt0);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((~ (CASE t0.c20  WHEN x'' THEN '' END))) ORDER BY ((t0.c50) BETWEEN (((t0.c50)*(t0.c20))) AND (CAST(t0.c50 AS TEXT)));
SELECT SUM(count) FROM (SELECT (((~ (CASE t0.c20  WHEN x'' THEN '' END))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((t0.c50) BETWEEN (((t0.c50)*(t0.c20))) AND (CAST(t0.c50 AS TEXT))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((~ (CASE t0.c20  WHEN x'' THEN '' END))) ORDER BY ((t0.c50) BETWEEN (((t0.c50)*(t0.c20))) AND (CAST(t0.c50 AS TEXT)));
SELECT SUM(count) FROM (SELECT (((~ (CASE t0.c20  WHEN x'' THEN '' END))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((t0.c50) BETWEEN (((t0.c50)*(t0.c20))) AND (CAST(t0.c50 AS TEXT))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((~ (CASE t0.c20  WHEN x'' THEN '' END))) ORDER BY ((t0.c50) BETWEEN (((t0.c50)*(t0.c20))) AND (CAST(t0.c50 AS TEXT)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON t0.c20 WHERE ((((((t0.c20)||(vt0.c0))))<=((vt0.c0)))) ORDER BY (((((t0.c20, t0.c20, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, t0.c20)))) BETWEEN (x'd4dd') AND (t0.c20)) DESC;
SELECT SUM(count) FROM (SELECT (((((((t0.c20)||(vt0.c0))))<=((vt0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON t0.c20 ORDER BY (((((t0.c20, t0.c20, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, t0.c20)))) BETWEEN (x'd4dd') AND (t0.c20)) DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON t0.c20 WHERE ((((((t0.c20)||(vt0.c0))))<=((vt0.c0)))) ORDER BY (((((t0.c20, t0.c20, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, t0.c20)))) BETWEEN (x'd4dd') AND (t0.c20)) DESC;
SELECT SUM(count) FROM (SELECT (((((((t0.c20)||(vt0.c0))))<=((vt0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON t0.c20 ORDER BY (((((t0.c20, t0.c20, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, t0.c20)))) BETWEEN (x'd4dd') AND (t0.c20)) DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON t0.c20 WHERE ((((((t0.c20)||(vt0.c0))))<=((vt0.c0)))) ORDER BY (((((t0.c20, t0.c20, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, t0.c20)))) BETWEEN (x'd4dd') AND (t0.c20)) DESC;
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((vt0.c0)<(vt0.c0)))-(((t0.c20) NOT BETWEEN (t0.c50) AND (t0.c50)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(vt0.c0)))-(((t0.c20) NOT BETWEEN (t0.c50) AND (t0.c50))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((vt0.c0)<(vt0.c0)))-(((t0.c20) NOT BETWEEN (t0.c50) AND (t0.c50)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(vt0.c0)))-(((t0.c20) NOT BETWEEN (t0.c50) AND (t0.c50))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((vt0.c0)<(vt0.c0)))-(((t0.c20) NOT BETWEEN (t0.c50) AND (t0.c50)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((~ (vt1.c0)))*(vt1.c0 COLLATE NOCASE))) ORDER BY (NOT (vt1.c0));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))*(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (vt1.c0)));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((~ (vt1.c0)))*(vt1.c0 COLLATE NOCASE))) ORDER BY (NOT (vt1.c0));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))*(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (vt1.c0)));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((~ (vt1.c0)))*(vt1.c0 COLLATE NOCASE))) ORDER BY (NOT (vt1.c0));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((CAST(vt0.c1 AS REAL))IS(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 0Xffffffffed380fcb THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)) WHERE (json((((vt1.c0))<((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((json((((vt1.c0))<((vt1.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((CAST(vt0.c1 AS REAL))IS(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 0Xffffffffed380fcb THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((CAST(vt0.c1 AS REAL))IS(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 0Xffffffffed380fcb THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)) WHERE (json((((vt1.c0))<((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((json((((vt1.c0))<((vt1.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((CAST(vt0.c1 AS REAL))IS(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 0Xffffffffed380fcb THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((CAST(vt0.c1 AS REAL))IS(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 0Xffffffffed380fcb THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)) WHERE (json((((vt1.c0))<((vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((vt1.c0) ISNULL)) NOT NULL)) ORDER BY t0.c50 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) NOT NULL)) IS TRUE)  as count FROM vt1, t0 ORDER BY t0.c50 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((vt1.c0) ISNULL)) NOT NULL)) ORDER BY t0.c50 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) NOT NULL)) IS TRUE)  as count FROM vt1, t0 ORDER BY t0.c50 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((vt1.c0) ISNULL)) NOT NULL)) ORDER BY t0.c50 ASC  NULLS LAST;
SELECT * FROM vt0, t0, vt1 WHERE (((((((((((t0.c20)AND(vt0.c1)))OR(t0.c20)))OR(t0.c20)))AND(t0.c20))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c20)AND(vt0.c1)))OR(t0.c20)))OR(t0.c20)))AND(t0.c20))) IS TRUE)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (((((((((((t0.c20)AND(vt0.c1)))OR(t0.c20)))OR(t0.c20)))AND(t0.c20))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c20)AND(vt0.c1)))OR(t0.c20)))OR(t0.c20)))AND(t0.c20))) IS TRUE)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (((((((((((t0.c20)AND(vt0.c1)))OR(t0.c20)))OR(t0.c20)))AND(t0.c20))) IS TRUE));
SELECT COUNT(*) FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((t0.c50, vt0.c0, x'', vt1.c0, t0.c20)) BETWEEN ((vt0.c0 COLLATE RTRIM, vt1.c0 COLLATE RTRIM, (('-1034441949') NOT BETWEEN (vt0.c0) AND (t0.c20)), TRIM(DISTINCT 0Xffffffffbb20269f, x''), 0.7188281574617768)) AND ((vt1.c0 COLLATE BINARY, ((vt0.c0)<=(t0.c50)), (t0.c20 IN ()), (((t0.c20)) BETWEEN ((t0.c50)) AND ((vt0.c0))), ((t0.c50)>(5.18407666E8))))) WHERE (CASE 'G1e500000Y'  WHEN ((((vt1.c0)OR(vt0.c0)))AND(t0.c20)) THEN (((t0.c20, vt1.c0, t0.c50)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt1.c0, t0.c50, vt0.c0))) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 'G1e500000Y'  WHEN ((((vt1.c0)OR(vt0.c0)))AND(t0.c20)) THEN (((t0.c20, vt1.c0, t0.c50)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt1.c0, t0.c50, vt0.c0))) ELSE CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((t0.c50, vt0.c0, x'', vt1.c0, t0.c20)) BETWEEN ((vt0.c0 COLLATE RTRIM, vt1.c0 COLLATE RTRIM, (('-1034441949') NOT BETWEEN (vt0.c0) AND (t0.c20)), TRIM(DISTINCT 0xffffffffbb20269f, x''), 0.7188281574617768)) AND ((vt1.c0 COLLATE BINARY, ((vt0.c0)<=(t0.c50)), (t0.c20 IN ()), (((t0.c20)) BETWEEN ((t0.c50)) AND ((vt0.c0))), ((t0.c50)>(5.18407666E8))))));
SELECT COUNT(*) FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((t0.c50, vt0.c0, x'', vt1.c0, t0.c20)) BETWEEN ((vt0.c0 COLLATE RTRIM, vt1.c0 COLLATE RTRIM, (('-1034441949') NOT BETWEEN (vt0.c0) AND (t0.c20)), TRIM(DISTINCT 0Xffffffffbb20269f, x''), 0.7188281574617768)) AND ((vt1.c0 COLLATE BINARY, ((vt0.c0)<=(t0.c50)), (t0.c20 IN ()), (((t0.c20)) BETWEEN ((t0.c50)) AND ((vt0.c0))), ((t0.c50)>(5.18407666E8))))) WHERE (CASE 'G1e500000Y'  WHEN ((((vt1.c0)OR(vt0.c0)))AND(t0.c20)) THEN (((t0.c20, vt1.c0, t0.c50)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt1.c0, t0.c50, vt0.c0))) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 'G1e500000Y'  WHEN ((((vt1.c0)OR(vt0.c0)))AND(t0.c20)) THEN (((t0.c20, vt1.c0, t0.c50)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt1.c0, t0.c50, vt0.c0))) ELSE CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((t0.c50, vt0.c0, x'', vt1.c0, t0.c20)) BETWEEN ((vt0.c0 COLLATE RTRIM, vt1.c0 COLLATE RTRIM, (('-1034441949') NOT BETWEEN (vt0.c0) AND (t0.c20)), TRIM(DISTINCT 0xffffffffbb20269f, x''), 0.7188281574617768)) AND ((vt1.c0 COLLATE BINARY, ((vt0.c0)<=(t0.c50)), (t0.c20 IN ()), (((t0.c20)) BETWEEN ((t0.c50)) AND ((vt0.c0))), ((t0.c50)>(5.18407666E8))))));
SELECT COUNT(*) FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((t0.c50, vt0.c0, x'', vt1.c0, t0.c20)) BETWEEN ((vt0.c0 COLLATE RTRIM, vt1.c0 COLLATE RTRIM, (('-1034441949') NOT BETWEEN (vt0.c0) AND (t0.c20)), TRIM(DISTINCT 0Xffffffffbb20269f, x''), 0.7188281574617768)) AND ((vt1.c0 COLLATE BINARY, ((vt0.c0)<=(t0.c50)), (t0.c20 IN ()), (((t0.c20)) BETWEEN ((t0.c50)) AND ((vt0.c0))), ((t0.c50)>(5.18407666E8))))) WHERE (CASE 'G1e500000Y'  WHEN ((((vt1.c0)OR(vt0.c0)))AND(t0.c20)) THEN (((t0.c20, vt1.c0, t0.c50)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt1.c0, t0.c50, vt0.c0))) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (CAST(((t0.c50) NOT BETWEEN (vt1.c0) AND (t0.c20)) AS INTEGER)) ORDER BY ((CASE WHEN vt1.c0 THEN t0.c20 WHEN t0.c50 THEN 0.2319861355585855 WHEN vt1.c0 THEN t0.c50 WHEN 0.7240575452403386 THEN t0.c50 WHEN vt1.c0 THEN t0.c50 ELSE vt1.c0 END)<(((t0.c20)<>(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c50) NOT BETWEEN (vt1.c0) AND (t0.c20)) AS INTEGER)) IS TRUE)  as count FROM vt1, t0 ORDER BY ((CASE WHEN vt1.c0 THEN t0.c20 WHEN t0.c50 THEN 0.2319861355585855 WHEN vt1.c0 THEN t0.c50 WHEN 0.7240575452403386 THEN t0.c50 WHEN vt1.c0 THEN t0.c50 ELSE vt1.c0 END)<(((t0.c20)!=(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (CAST(((t0.c50) NOT BETWEEN (vt1.c0) AND (t0.c20)) AS INTEGER)) ORDER BY ((CASE WHEN vt1.c0 THEN t0.c20 WHEN t0.c50 THEN 0.2319861355585855 WHEN vt1.c0 THEN t0.c50 WHEN 0.7240575452403386 THEN t0.c50 WHEN vt1.c0 THEN t0.c50 ELSE vt1.c0 END)<(((t0.c20)<>(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c50) NOT BETWEEN (vt1.c0) AND (t0.c20)) AS INTEGER)) IS TRUE)  as count FROM vt1, t0 ORDER BY ((CASE WHEN vt1.c0 THEN t0.c20 WHEN t0.c50 THEN 0.2319861355585855 WHEN vt1.c0 THEN t0.c50 WHEN 0.7240575452403386 THEN t0.c50 WHEN vt1.c0 THEN t0.c50 ELSE vt1.c0 END)<(((t0.c20)!=(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (CAST(((t0.c50) NOT BETWEEN (vt1.c0) AND (t0.c20)) AS INTEGER)) ORDER BY ((CASE WHEN vt1.c0 THEN t0.c20 WHEN t0.c50 THEN 0.2319861355585855 WHEN vt1.c0 THEN t0.c50 WHEN 0.7240575452403386 THEN t0.c50 WHEN vt1.c0 THEN t0.c50 ELSE vt1.c0 END)<(((t0.c20)<>(vt1.c0)))) ASC;
SELECT ALL * FROM t0 WHERE ((t0.c50 IN ())) ORDER BY CASE WHEN ((t0.c50)=(t0.c50)) THEN ((t0.c20)%(t0.c50)) ELSE ((t0.c50) IS FALSE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c50 IN ())) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c50)=(t0.c50)) THEN ((t0.c20)%(t0.c50)) ELSE ((t0.c50) IS FALSE) END  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((t0.c50 IN ())) ORDER BY CASE WHEN ((t0.c50)=(t0.c50)) THEN ((t0.c20)%(t0.c50)) ELSE ((t0.c50) IS FALSE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c50 IN ())) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c50)=(t0.c50)) THEN ((t0.c20)%(t0.c50)) ELSE ((t0.c50) IS FALSE) END  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((t0.c50 IN ())) ORDER BY CASE WHEN ((t0.c50)=(t0.c50)) THEN ((t0.c20)%(t0.c50)) ELSE ((t0.c50) IS FALSE) END  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY COALESCE(x'' COLLATE NOCASE, CAST(vt0.c1 AS NUMERIC)) ASC  NULLS LAST, TRIM(DISTINCT ((x'') IS TRUE), ((vt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(x'' COLLATE NOCASE, CAST(vt0.c1 AS NUMERIC)) ASC  NULLS LAST, TRIM(DISTINCT ((x'') IS TRUE), ((vt0.c1) NOTNULL)));
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY COALESCE(x'' COLLATE NOCASE, CAST(vt0.c1 AS NUMERIC)) ASC  NULLS LAST, TRIM(DISTINCT ((x'') IS TRUE), ((vt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(x'' COLLATE NOCASE, CAST(vt0.c1 AS NUMERIC)) ASC  NULLS LAST, TRIM(DISTINCT ((x'') IS TRUE), ((vt0.c1) NOTNULL)));
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY COALESCE(x'' COLLATE NOCASE, CAST(vt0.c1 AS NUMERIC)) ASC  NULLS LAST, TRIM(DISTINCT ((x'') IS TRUE), ((vt0.c1) NOTNULL));
SELECT ALL * FROM vt1 CROSS JOIN t0 ON ((t0.c20)LIKE(t0.c20)) COLLATE NOCASE WHERE (((CASE t0.c20  WHEN t0.c20 THEN t0.c50 ELSE t0.c20 END)>=(CAST(t0.c20 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c20  WHEN t0.c20 THEN t0.c50 ELSE t0.c20 END)>=(CAST(t0.c20 AS BLOB)))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((t0.c20)LIKE(t0.c20)) COLLATE NOCASE);
SELECT ALL * FROM vt1 CROSS JOIN t0 ON ((t0.c20)LIKE(t0.c20)) COLLATE NOCASE WHERE (((CASE t0.c20  WHEN t0.c20 THEN t0.c50 ELSE t0.c20 END)>=(CAST(t0.c20 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c20  WHEN t0.c20 THEN t0.c50 ELSE t0.c20 END)>=(CAST(t0.c20 AS BLOB)))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((t0.c20)LIKE(t0.c20)) COLLATE NOCASE);
SELECT ALL * FROM vt1 CROSS JOIN t0 ON ((t0.c20)LIKE(t0.c20)) COLLATE NOCASE WHERE (((CASE t0.c20  WHEN t0.c20 THEN t0.c50 ELSE t0.c20 END)>=(CAST(t0.c20 AS BLOB))));
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0 COLLATE BINARY)-((((t0.c50, 3.72879854E8, vt0.c1, t0.c50, t0.c50))>((t0.c20, t0.c20, 'QhjmeRV*', vt0.c0, t0.c50))))) WHERE (((- (t0.c20)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c20)) IN ())) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0 COLLATE BINARY)-((((t0.c50, 3.72879854E8, vt0.c1, t0.c50, t0.c50))>((t0.c20, t0.c20, 'QhjmeRV*', vt0.c0, t0.c50))))));
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0 COLLATE BINARY)-((((t0.c50, 3.72879854E8, vt0.c1, t0.c50, t0.c50))>((t0.c20, t0.c20, 'QhjmeRV*', vt0.c0, t0.c50))))) WHERE (((- (t0.c20)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c20)) IN ())) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0 COLLATE BINARY)-((((t0.c50, 3.72879854E8, vt0.c1, t0.c50, t0.c50))>((t0.c20, t0.c20, 'QhjmeRV*', vt0.c0, t0.c50))))));
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0 COLLATE BINARY)-((((t0.c50, 3.72879854E8, vt0.c1, t0.c50, t0.c50))>((t0.c20, t0.c20, 'QhjmeRV*', vt0.c0, t0.c50))))) WHERE (((- (t0.c20)) IN ()));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CASE CAST(vt0.c1 AS NUMERIC)  WHEN x'499fbb54' THEN ((vt0.c1)>=(vt1.c0)) WHEN t0.c20 COLLATE BINARY THEN vt0.c1 WHEN (((vt1.c0))>=((0.6931880487605377))) THEN CASE WHEN t0.c50 THEN t0.c20 WHEN t0.c50 THEN t0.c50 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END ELSE ((vt0.c0)<=(t0.c50)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c1 AS NUMERIC)  WHEN x'499fbb54' THEN ((vt0.c1)>=(vt1.c0)) WHEN t0.c20 COLLATE BINARY THEN vt0.c1 WHEN (((vt1.c0))>=((0.6931880487605377))) THEN CASE WHEN t0.c50 THEN t0.c20 WHEN t0.c50 THEN t0.c50 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END ELSE ((vt0.c0)<=(t0.c50)) END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CASE CAST(vt0.c1 AS NUMERIC)  WHEN x'499fbb54' THEN ((vt0.c1)>=(vt1.c0)) WHEN t0.c20 COLLATE BINARY THEN vt0.c1 WHEN (((vt1.c0))>=((0.6931880487605377))) THEN CASE WHEN t0.c50 THEN t0.c20 WHEN t0.c50 THEN t0.c50 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END ELSE ((vt0.c0)<=(t0.c50)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c1 AS NUMERIC)  WHEN x'499fbb54' THEN ((vt0.c1)>=(vt1.c0)) WHEN t0.c20 COLLATE BINARY THEN vt0.c1 WHEN (((vt1.c0))>=((0.6931880487605377))) THEN CASE WHEN t0.c50 THEN t0.c20 WHEN t0.c50 THEN t0.c50 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END ELSE ((vt0.c0)<=(t0.c50)) END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CASE CAST(vt0.c1 AS NUMERIC)  WHEN x'499fbb54' THEN ((vt0.c1)>=(vt1.c0)) WHEN t0.c20 COLLATE BINARY THEN vt0.c1 WHEN (((vt1.c0))>=((0.6931880487605377))) THEN CASE WHEN t0.c50 THEN t0.c20 WHEN t0.c50 THEN t0.c50 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END ELSE ((vt0.c0)<=(t0.c50)) END);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c1 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN ()) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c1 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN ()) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c1 IN ()) AS REAL));
SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN t0 ON CAST(((vt1.c0) ISNULL) AS NUMERIC) WHERE (0.5287946355740514) ORDER BY (((DATE(0.9018480999868985, vt0.c0, '-2014742560', t0.c50, vt0.c0)))!=((((vt1.c0) NOT NULL))))  NULLS LAST, (((vt0.c1) BETWEEN (t0.c50) AND (vt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.5287946355740514) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t0 ON CAST(((vt1.c0) ISNULL) AS NUMERIC) ORDER BY (((DATE(0.9018480999868985, vt0.c0, '-2014742560', t0.c50, vt0.c0)))!=((((vt1.c0) NOT NULL))))  NULLS LAST, (((vt0.c1) BETWEEN (t0.c50) AND (vt0.c0)) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN t0 ON CAST(((vt1.c0) ISNULL) AS NUMERIC) WHERE (0.5287946355740514) ORDER BY (((DATE(0.9018480999868985, vt0.c0, '-2014742560', t0.c50, vt0.c0)))!=((((vt1.c0) NOT NULL))))  NULLS LAST, (((vt0.c1) BETWEEN (t0.c50) AND (vt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.5287946355740514) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t0 ON CAST(((vt1.c0) ISNULL) AS NUMERIC) ORDER BY (((DATE(0.9018480999868985, vt0.c0, '-2014742560', t0.c50, vt0.c0)))!=((((vt1.c0) NOT NULL))))  NULLS LAST, (((vt0.c1) BETWEEN (t0.c50) AND (vt0.c0)) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN t0 ON CAST(((vt1.c0) ISNULL) AS NUMERIC) WHERE (0.5287946355740514) ORDER BY (((DATE(0.9018480999868985, vt0.c0, '-2014742560', t0.c50, vt0.c0)))!=((((vt1.c0) NOT NULL))))  NULLS LAST, (((vt0.c1) BETWEEN (t0.c50) AND (vt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((t0.c20)|(t0.c50)))<=((((vt0.c0)) BETWEEN ((t0.c50)) AND ((t0.c20))))) WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((t0.c20)|(t0.c50)))<=((((vt0.c0)) BETWEEN ((t0.c50)) AND ((t0.c20))))));
SELECT COUNT(*) FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((t0.c20)|(t0.c50)))<=((((vt0.c0)) BETWEEN ((t0.c50)) AND ((t0.c20))))) WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((t0.c20)|(t0.c50)))<=((((vt0.c0)) BETWEEN ((t0.c50)) AND ((t0.c20))))));
SELECT COUNT(*) FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((t0.c20)|(t0.c50)))<=((((vt0.c0)) BETWEEN ((t0.c50)) AND ((t0.c20))))) WHERE ((NULL IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (((((0.8637641151411805)!=(t0.c20)))/(((t0.c20) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((0.8637641151411805)!=(t0.c20)))/(((t0.c20) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((0.8637641151411805)!=(t0.c20)))/(((t0.c20) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((0.8637641151411805)!=(t0.c20)))/(((t0.c20) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((0.8637641151411805)!=(t0.c20)))/(((t0.c20) IS FALSE))));
SELECT * FROM t0, vt0 CROSS JOIN vt1 ON ((('-210669104') NOT NULL) IN ()) WHERE ((((NOT (x''))) BETWEEN (((t0.c50) NOT NULL)) AND (((vt0.c1)|('-1983867488')))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (x''))) BETWEEN (((t0.c50) NOT NULL)) AND (((vt0.c1)|('-1983867488'))))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON ((('-210669104') NOT NULL) IN ()));
SELECT * FROM t0, vt0 CROSS JOIN vt1 ON ((('-210669104') NOT NULL) IN ()) WHERE ((((NOT (x''))) BETWEEN (((t0.c50) NOT NULL)) AND (((vt0.c1)|('-1983867488')))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (x''))) BETWEEN (((t0.c50) NOT NULL)) AND (((vt0.c1)|('-1983867488'))))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON ((('-210669104') NOT NULL) IN ()));
SELECT * FROM t0, vt0 CROSS JOIN vt1 ON ((('-210669104') NOT NULL) IN ()) WHERE ((((NOT (x''))) BETWEEN (((t0.c50) NOT NULL)) AND (((vt0.c1)|('-1983867488')))));
SELECT ALL * FROM t0 WHERE (((((t0.c20)<(t0.c50)))>>((((t0.c20, t0.c50, t0.c50))==((t0.c50, t0.c20, t0.c50)))))) ORDER BY (~ (((t0.c50)<<(t0.c20))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c20)<(t0.c50)))>>((((t0.c20, t0.c50, t0.c50))==((t0.c50, t0.c20, t0.c50)))))) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c50)<<(t0.c20))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c20)<(t0.c50)))>>((((t0.c20, t0.c50, t0.c50))==((t0.c50, t0.c20, t0.c50)))))) ORDER BY (~ (((t0.c50)<<(t0.c20))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c20)<(t0.c50)))>>((((t0.c20, t0.c50, t0.c50))==((t0.c50, t0.c20, t0.c50)))))) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c50)<<(t0.c20))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c20)<(t0.c50)))>>((((t0.c20, t0.c50, t0.c50))==((t0.c50, t0.c20, t0.c50)))))) ORDER BY (~ (((t0.c50)<<(t0.c20))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt0.c1 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt0.c1 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt0.c1 IN ())) NOTNULL));
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE (CASE WHEN UPPER(DISTINCT vt1.c0) THEN CAST(t0.c50 AS INTEGER) ELSE (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UPPER(DISTINCT vt1.c0) THEN CAST(t0.c50 AS INTEGER) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE (CASE WHEN UPPER(DISTINCT vt1.c0) THEN CAST(t0.c50 AS INTEGER) ELSE (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UPPER(DISTINCT vt1.c0) THEN CAST(t0.c50 AS INTEGER) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE (CASE WHEN UPPER(DISTINCT vt1.c0) THEN CAST(t0.c50 AS INTEGER) ELSE (vt0.c0 IN ()) END);
SELECT * FROM t0 NATURAL JOIN vt1 WHERE (((CAST(NULL AS NUMERIC)) NOT BETWEEN (json_type(vt1.c0)) AND (((t0.c20) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS NUMERIC)) NOT BETWEEN (json_type(vt1.c0)) AND (((t0.c20) ISNULL)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT * FROM t0 NATURAL JOIN vt1 WHERE (((CAST(NULL AS NUMERIC)) NOT BETWEEN (json_type(vt1.c0)) AND (((t0.c20) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS NUMERIC)) NOT BETWEEN (json_type(vt1.c0)) AND (((t0.c20) ISNULL)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT * FROM vt0 WHERE (CASE WHEN highlight(vt0.c0, vt0.c1, vt0.c1, vt0.c0) THEN 1645643121 WHEN (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) THEN ((vt0.c0)<=(vt0.c0)) WHEN (x'b204' IN ()) THEN ((vt0.c0)>(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN highlight(vt0.c0, vt0.c1, vt0.c1, vt0.c0) THEN 1645643121 WHEN (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) THEN ((vt0.c0)<=(vt0.c0)) WHEN (x'b204' IN ()) THEN ((vt0.c0)>(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN highlight(vt0.c0, vt0.c1, vt0.c1, vt0.c0) THEN 1645643121 WHEN (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) THEN ((vt0.c0)<=(vt0.c0)) WHEN (x'b204' IN ()) THEN ((vt0.c0)>(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN highlight(vt0.c0, vt0.c1, vt0.c1, vt0.c0) THEN 1645643121 WHEN (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) THEN ((vt0.c0)<=(vt0.c0)) WHEN (x'b204' IN ()) THEN ((vt0.c0)>(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN highlight(vt0.c0, vt0.c1, vt0.c1, vt0.c0) THEN 1645643121 WHEN (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) THEN ((vt0.c0)<=(vt0.c0)) WHEN (x'b204' IN ()) THEN ((vt0.c0)>(vt0.c0)) END);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (json_remove(((t0.c50)<(t0.c20)), CAST(vt0.c1 AS INTEGER), x'', ((vt0.c0) BETWEEN (vt0.c1) AND (t0.c20))));
SELECT SUM(count) FROM (SELECT ((json_remove(((t0.c50)<(t0.c20)), CAST(vt0.c1 AS INTEGER), x'', ((vt0.c0) BETWEEN (vt0.c1) AND (t0.c20)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (json_remove(((t0.c50)<(t0.c20)), CAST(vt0.c1 AS INTEGER), x'', ((vt0.c0) BETWEEN (vt0.c1) AND (t0.c20))));
SELECT SUM(count) FROM (SELECT ((json_remove(((t0.c50)<(t0.c20)), CAST(vt0.c1 AS INTEGER), x'', ((vt0.c0) BETWEEN (vt0.c1) AND (t0.c20)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (json_remove(((t0.c50)<(t0.c20)), CAST(vt0.c1 AS INTEGER), x'', ((vt0.c0) BETWEEN (vt0.c1) AND (t0.c20))));
SELECT COUNT(*) FROM vt1, t0 WHERE (CAST(vt1.c0 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CAST(vt1.c0 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CAST(vt1.c0 COLLATE RTRIM AS NUMERIC));
SELECT COUNT(*) FROM t0, vt1 INDEXED BY i2 WHERE (((SQLITE_VERSION()) BETWEEN (((((NULL)OR(vt1.c0)))AND(t0.c20))) AND (((((((((t0.c20)OR('v5-Oq')))AND(t0.c20)))AND(t0.c50)))AND(t0.c20)))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION()) BETWEEN (((((NULL)OR(vt1.c0)))AND(t0.c20))) AND (((((((((t0.c20)OR('v5-Oq')))AND(t0.c20)))AND(t0.c50)))AND(t0.c20))))) IS TRUE)  as count FROM t0, vt1 INDEXED BY i2);
SELECT COUNT(*) FROM t0, vt1 INDEXED BY i2 WHERE (((SQLITE_VERSION()) BETWEEN (((((NULL)OR(vt1.c0)))AND(t0.c20))) AND (((((((((t0.c20)OR('v5-Oq')))AND(t0.c20)))AND(t0.c50)))AND(t0.c20)))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION()) BETWEEN (((((NULL)OR(vt1.c0)))AND(t0.c20))) AND (((((((((t0.c20)OR('v5-Oq')))AND(t0.c20)))AND(t0.c50)))AND(t0.c20))))) IS TRUE)  as count FROM t0, vt1 INDEXED BY i2);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((LIKELY(DISTINCT x''))AND(((vt1.c0)LIKE(vt1.c0)))))AND(LIKELIHOOD(DISTINCT t0.c20, 0.6034043564782576))));
SELECT SUM(count) FROM (SELECT ((((((LIKELY(DISTINCT x''))AND(((vt1.c0)LIKE(vt1.c0)))))AND(LIKELIHOOD(DISTINCT t0.c20, 0.6034043564782576)))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((LIKELY(DISTINCT x''))AND(((vt1.c0)LIKE(vt1.c0)))))AND(LIKELIHOOD(DISTINCT t0.c20, 0.6034043564782576))));
SELECT SUM(count) FROM (SELECT ((((((LIKELY(DISTINCT x''))AND(((vt1.c0)LIKE(vt1.c0)))))AND(LIKELIHOOD(DISTINCT t0.c20, 0.6034043564782576)))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((LIKELY(DISTINCT x''))AND(((vt1.c0)LIKE(vt1.c0)))))AND(LIKELIHOOD(DISTINCT t0.c20, 0.6034043564782576))));
SELECT ALL * FROM vt0, t0, vt1 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (NULL COLLATE NOCASE);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((t0.c20) NOT NULL) IN (t0.c20))) ORDER BY ((CAST(vt1.c0 AS INTEGER))>(t0.c50 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c20) NOT NULL) IN (t0.c20))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER))>(t0.c50 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((t0.c20) NOT NULL) IN (t0.c20))) ORDER BY ((CAST(vt1.c0 AS INTEGER))>(t0.c50 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c20) NOT NULL) IN (t0.c20))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER))>(t0.c50 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((t0.c20) NOT NULL) IN (t0.c20))) ORDER BY ((CAST(vt1.c0 AS INTEGER))>(t0.c50 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT * FROM vt1, t0 WHERE (MIN(vt1.c0, t0.c50) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((MIN(vt1.c0, t0.c50) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (MIN(vt1.c0, t0.c50) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((MIN(vt1.c0, t0.c50) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (MIN(vt1.c0, t0.c50) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)) IN ())) ORDER BY LOWER(((vt0.c1)%(t0.c50))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)) IN ())) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY LOWER(((vt0.c1)%(t0.c50))) DESC);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)) IN ())) ORDER BY LOWER(((vt0.c1)%(t0.c50))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)) IN ())) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY LOWER(((vt0.c1)%(t0.c50))) DESC);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((((t0.c50) NOT BETWEEN (t0.c50) AND (t0.c50)) IN ())) ORDER BY LOWER(((vt0.c1)%(t0.c50))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN -1983540634 COLLATE BINARY THEN (+ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN -1983540634 COLLATE BINARY THEN (+ (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN -1983540634 COLLATE BINARY THEN (+ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN -1983540634 COLLATE BINARY THEN (+ (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN -1983540634 COLLATE BINARY THEN (+ (vt1.c0)) END);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((vt0.c1, vt1.c0, t0.c50))>((vt0.c0, t0.c20, t0.c20))))IS((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt1.c0, t0.c50))>((vt0.c0, t0.c20, t0.c20))))IS((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((vt0.c1, vt1.c0, t0.c50))>((vt0.c0, t0.c20, t0.c20))))IS((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt1.c0, t0.c50))>((vt0.c0, t0.c20, t0.c20))))IS((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((vt0.c1, vt1.c0, t0.c50))>((vt0.c0, t0.c20, t0.c20))))IS((vt0.c1 IN ()))));
SELECT COUNT(*) FROM t0 NOT INDEXED, vt1 WHERE (((((368436505)OR(((t0.c20) IS TRUE))))OR(vt1.c0))) ORDER BY (((((t0.c50)OR(t0.c20)))AND(t0.c20)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((368436505)OR(((t0.c20) IS TRUE))))OR(vt1.c0))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((((t0.c50)OR(t0.c20)))AND(t0.c20)) IN ()) DESC);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt1 WHERE (((((368436505)OR(((t0.c20) IS TRUE))))OR(vt1.c0))) ORDER BY (((((t0.c50)OR(t0.c20)))AND(t0.c20)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((368436505)OR(((t0.c20) IS TRUE))))OR(vt1.c0))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((((t0.c50)OR(t0.c20)))AND(t0.c20)) IN ()) DESC);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt1 WHERE (((((368436505)OR(((t0.c20) IS TRUE))))OR(vt1.c0))) ORDER BY (((((t0.c50)OR(t0.c20)))AND(t0.c20)) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((t0.c50) IS FALSE)) ORDER BY 0xffffffffeac5622b  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c50) IS FALSE)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY 0xffffffffeac5622b  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((t0.c50) IS FALSE)) ORDER BY 0xffffffffeac5622b  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c50) IS FALSE)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY 0xffffffffeac5622b  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((t0.c50) IS FALSE)) ORDER BY 0xffffffffeac5622b  NULLS LAST;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((x'')LIKE(((vt0.c1) IS TRUE))) WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE 0.874479333000655 END)>(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE 0.874479333000655 END)>(vt0.c0))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((x'')LIKE(((vt0.c1) IS TRUE))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((x'')LIKE(((vt0.c1) IS TRUE))) WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE 0.874479333000655 END)>(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE 0.874479333000655 END)>(vt0.c0))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((x'')LIKE(((vt0.c1) IS TRUE))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((x'')LIKE(((vt0.c1) IS TRUE))) WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE 0.874479333000655 END)>(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)IS(vt0.c0))) IS FALSE)) ORDER BY CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)IS(vt0.c0))) IS FALSE)) ORDER BY CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)IS(vt0.c0))) IS FALSE)) ORDER BY CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((LOWER(t0.c20)) NOT NULL) LEFT OUTER JOIN t0 ON (t0.c50 IN ()) WHERE (LIKE(t0.c20 COLLATE BINARY, UPPER(DISTINCT vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(t0.c20 COLLATE BINARY, UPPER(DISTINCT vt0.c1))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((LOWER(t0.c20)) NOT NULL) LEFT OUTER JOIN t0 ON (t0.c50 IN ()));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((LOWER(t0.c20)) NOT NULL) LEFT OUTER JOIN t0 ON (t0.c50 IN ()) WHERE (LIKE(t0.c20 COLLATE BINARY, UPPER(DISTINCT vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(t0.c20 COLLATE BINARY, UPPER(DISTINCT vt0.c1))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((LOWER(t0.c20)) NOT NULL) LEFT OUTER JOIN t0 ON (t0.c50 IN ()));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((LOWER(t0.c20)) NOT NULL) LEFT OUTER JOIN t0 ON (t0.c50 IN ()) WHERE (LIKE(t0.c20 COLLATE BINARY, UPPER(DISTINCT vt0.c1)));
SELECT ALL * FROM vt0, t0 WHERE ((((((((((((((((t0.c20))>=((vt0.c1))))AND(((t0.c50) NOT BETWEEN (t0.c20) AND (t0.c50)))))OR(((vt0.c0)==(t0.c50)))))OR(vt0.c0)))OR(x'735e')))AND(((((x'844b')AND(vt0.c1)))OR(vt0.c0)))))OR((((x'08a3'))<=((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((t0.c20))>=((vt0.c1))))AND(((t0.c50) NOT BETWEEN (t0.c20) AND (t0.c50)))))OR(((vt0.c0)==(t0.c50)))))OR(vt0.c0)))OR(x'735e')))AND(((((x'844b')AND(vt0.c1)))OR(vt0.c0)))))OR((((x'08a3'))<=((vt0.c1)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((((((((((((t0.c20))>=((vt0.c1))))AND(((t0.c50) NOT BETWEEN (t0.c20) AND (t0.c50)))))OR(((vt0.c0)==(t0.c50)))))OR(vt0.c0)))OR(x'735e')))AND(((((x'844b')AND(vt0.c1)))OR(vt0.c0)))))OR((((x'08a3'))<=((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((t0.c20))>=((vt0.c1))))AND(((t0.c50) NOT BETWEEN (t0.c20) AND (t0.c50)))))OR(((vt0.c0)==(t0.c50)))))OR(vt0.c0)))OR(x'735e')))AND(((((x'844b')AND(vt0.c1)))OR(vt0.c0)))))OR((((x'08a3'))<=((vt0.c1)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((((((((((((t0.c20))>=((vt0.c1))))AND(((t0.c50) NOT BETWEEN (t0.c20) AND (t0.c50)))))OR(((vt0.c0)==(t0.c50)))))OR(vt0.c0)))OR(x'735e')))AND(((((x'844b')AND(vt0.c1)))OR(vt0.c0)))))OR((((x'08a3'))<=((vt0.c1))))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((((t0.c20) NOT BETWEEN (t0.c50) AND (vt1.c0)))|(LTRIM(t0.c50))) WHERE ((~ ('1787701769'))) ORDER BY 0Xffffffff90ba9377;
SELECT SUM(count) FROM (SELECT (((~ ('1787701769'))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((t0.c20) NOT BETWEEN (t0.c50) AND (vt1.c0)))|(LTRIM(t0.c50))) ORDER BY 0xffffffff90ba9377);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((((t0.c20) NOT BETWEEN (t0.c50) AND (vt1.c0)))|(LTRIM(t0.c50))) WHERE ((~ ('1787701769'))) ORDER BY 0Xffffffff90ba9377;
SELECT SUM(count) FROM (SELECT (((~ ('1787701769'))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((t0.c20) NOT BETWEEN (t0.c50) AND (vt1.c0)))|(LTRIM(t0.c50))) ORDER BY 0xffffffff90ba9377);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((((t0.c20) NOT BETWEEN (t0.c50) AND (vt1.c0)))|(LTRIM(t0.c50))) WHERE ((~ ('1787701769'))) ORDER BY 0Xffffffff90ba9377;
SELECT ALL * FROM vt1 CROSS JOIN t0 ON 0.465609060051943 LEFT OUTER JOIN vt0 ON (((((((((((t0.c50))=((400624636))))OR(CASE t0.c50  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))OR(vt0.c0)))OR(((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))))OR(((((t0.c20)OR(t0.c20)))AND(t0.c20)))) WHERE (CASE x'65e6'  WHEN (('')LIKE(0.3755993798191072)) THEN 'SmZRc' WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN t0.c20 THEN vt0.c0 WHEN t0.c50 THEN t0.c20 END THEN ((((vt1.c0)OR(vt0.c0)))OR(-1505568322)) WHEN CAST(-337779426 AS BLOB) THEN CAST(vt0.c1 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x'65e6'  WHEN (('')LIKE(0.3755993798191072)) THEN 'SmZRc' WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN t0.c20 THEN vt0.c0 WHEN t0.c50 THEN t0.c20 END THEN ((((vt1.c0)OR(vt0.c0)))OR(-1505568322)) WHEN CAST(-337779426 AS BLOB) THEN CAST(vt0.c1 AS INTEGER) END) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON 0.465609060051943 LEFT OUTER JOIN vt0 ON (((((((((((t0.c50))=((400624636))))OR(CASE t0.c50  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))OR(vt0.c0)))OR(((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))))OR(((((t0.c20)OR(t0.c20)))AND(t0.c20)))));
SELECT ALL * FROM vt1 CROSS JOIN t0 ON 0.465609060051943 LEFT OUTER JOIN vt0 ON (((((((((((t0.c50))=((400624636))))OR(CASE t0.c50  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))OR(vt0.c0)))OR(((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))))OR(((((t0.c20)OR(t0.c20)))AND(t0.c20)))) WHERE (CASE x'65e6'  WHEN (('')LIKE(0.3755993798191072)) THEN 'SmZRc' WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN t0.c20 THEN vt0.c0 WHEN t0.c50 THEN t0.c20 END THEN ((((vt1.c0)OR(vt0.c0)))OR(-1505568322)) WHEN CAST(-337779426 AS BLOB) THEN CAST(vt0.c1 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x'65e6'  WHEN (('')LIKE(0.3755993798191072)) THEN 'SmZRc' WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN t0.c20 THEN vt0.c0 WHEN t0.c50 THEN t0.c20 END THEN ((((vt1.c0)OR(vt0.c0)))OR(-1505568322)) WHEN CAST(-337779426 AS BLOB) THEN CAST(vt0.c1 AS INTEGER) END) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON 0.465609060051943 LEFT OUTER JOIN vt0 ON (((((((((((t0.c50))=((400624636))))OR(CASE t0.c50  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))OR(vt0.c0)))OR(((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))))OR(((((t0.c20)OR(t0.c20)))AND(t0.c20)))));
SELECT ALL * FROM vt1 CROSS JOIN t0 ON 0.465609060051943 LEFT OUTER JOIN vt0 ON (((((((((((t0.c50))=((400624636))))OR(CASE t0.c50  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))OR(vt0.c0)))OR(((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))))OR(((((t0.c20)OR(t0.c20)))AND(t0.c20)))) WHERE (CASE x'65e6'  WHEN (('')LIKE(0.3755993798191072)) THEN 'SmZRc' WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN t0.c20 THEN vt0.c0 WHEN t0.c50 THEN t0.c20 END THEN ((((vt1.c0)OR(vt0.c0)))OR(-1505568322)) WHEN CAST(-337779426 AS BLOB) THEN CAST(vt0.c1 AS INTEGER) END);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, vt0 WHERE (((((((x'')LIKE(vt0.c1)))OR((((vt1.c0, vt0.c1, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c1, vt0.c1, 'r䣷㧸 ឤJ'))))))AND(CAST(vt1.c0 AS REAL)))) ORDER BY CAST(TYPEOF(vt0.c1) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((x'')LIKE(vt0.c1)))OR((((vt1.c0, vt0.c1, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c1, vt0.c1, 'r䣷㧸 ឤJ'))))))AND(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(TYPEOF(vt0.c1) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, vt0 WHERE (((((((x'')LIKE(vt0.c1)))OR((((vt1.c0, vt0.c1, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c1, vt0.c1, 'r䣷㧸 ឤJ'))))))AND(CAST(vt1.c0 AS REAL)))) ORDER BY CAST(TYPEOF(vt0.c1) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((x'')LIKE(vt0.c1)))OR((((vt1.c0, vt0.c1, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c1, vt0.c1, 'r䣷㧸 ឤJ'))))))AND(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(TYPEOF(vt0.c1) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, vt0 WHERE (((((((x'')LIKE(vt0.c1)))OR((((vt1.c0, vt0.c1, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c1, vt0.c1, 'r䣷㧸 ឤJ'))))))AND(CAST(vt1.c0 AS REAL)))) ORDER BY CAST(TYPEOF(vt0.c1) AS NUMERIC) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((('')LIKE(0.28539104445234353)))>((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY ((vt0.c0)>=(('896694147' IN (vt0.c0, vt0.c1)))), ((('1222557754' IN (vt0.c0, vt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('')LIKE(0.28539104445234353)))>((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)>=(('896694147' IN (vt0.c0, vt0.c1)))), ((('1222557754' IN (vt0.c0, vt0.c0))) NOT NULL) ASC);
SELECT * FROM vt0 WHERE ((((('')LIKE(0.28539104445234353)))>((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY ((vt0.c0)>=(('896694147' IN (vt0.c0, vt0.c1)))), ((('1222557754' IN (vt0.c0, vt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('')LIKE(0.28539104445234353)))>((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)>=(('896694147' IN (vt0.c0, vt0.c1)))), ((('1222557754' IN (vt0.c0, vt0.c0))) NOT NULL) ASC);
SELECT * FROM vt0 WHERE ((((('')LIKE(0.28539104445234353)))>((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY ((vt0.c0)>=(('896694147' IN (vt0.c0, vt0.c1)))), ((('1222557754' IN (vt0.c0, vt0.c0))) NOT NULL) ASC;
SELECT ALL * FROM vt1, vt0, t0 WHERE (((CAST(vt0.c1 AS TEXT))<(vt0.c1))) ORDER BY ((((((((((((vt0.c0)OR(((t0.c50) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c1))<=((-0.0))))))AND(TRIM(t0.c20, vt1.c0))))AND(CASE vt0.c0  WHEN vt0.c1 THEN '1341693618' ELSE NULL END)))OR(SQLITE_SOURCE_ID())))OR((vt0.c1 IN (vt0.c0)))), vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS TEXT))<(vt0.c1))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((((((((((vt0.c0)OR(((t0.c50) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c1))<=((-0.0))))))AND(TRIM(t0.c20, vt1.c0))))AND(CASE vt0.c0  WHEN vt0.c1 THEN '1341693618' ELSE NULL END)))OR(SQLITE_SOURCE_ID())))OR((vt0.c1 IN (vt0.c0)))), vt0.c0  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((CAST(vt0.c1 AS TEXT))<(vt0.c1))) ORDER BY ((((((((((((vt0.c0)OR(((t0.c50) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c1))<=((-0.0))))))AND(TRIM(t0.c20, vt1.c0))))AND(CASE vt0.c0  WHEN vt0.c1 THEN '1341693618' ELSE NULL END)))OR(SQLITE_SOURCE_ID())))OR((vt0.c1 IN (vt0.c0)))), vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS TEXT))<(vt0.c1))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((((((((((vt0.c0)OR(((t0.c50) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c1))<=((-0.0))))))AND(TRIM(t0.c20, vt1.c0))))AND(CASE vt0.c0  WHEN vt0.c1 THEN '1341693618' ELSE NULL END)))OR(SQLITE_SOURCE_ID())))OR((vt0.c1 IN (vt0.c0)))), vt0.c0  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((CAST(vt0.c1 AS TEXT))<(vt0.c1))) ORDER BY ((((((((((((vt0.c0)OR(((t0.c50) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c1))<=((-0.0))))))AND(TRIM(t0.c20, vt1.c0))))AND(CASE vt0.c0  WHEN vt0.c1 THEN '1341693618' ELSE NULL END)))OR(SQLITE_SOURCE_ID())))OR((vt0.c1 IN (vt0.c0)))), vt0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c20)) NOT BETWEEN (((((t0.c20, t0.c20, t0.c50))<=((t0.c50, t0.c20, t0.c50))))) AND ((t0.c50)))) ORDER BY (('') ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c20)) NOT BETWEEN (((((t0.c20, t0.c20, t0.c50))<=((t0.c50, t0.c20, t0.c50))))) AND ((t0.c50)))) IS TRUE)  as count FROM t0 ORDER BY (('') ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c20)) NOT BETWEEN (((((t0.c20, t0.c20, t0.c50))<=((t0.c50, t0.c20, t0.c50))))) AND ((t0.c50)))) ORDER BY (('') ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c20)) NOT BETWEEN (((((t0.c20, t0.c20, t0.c50))<=((t0.c50, t0.c20, t0.c50))))) AND ((t0.c50)))) IS TRUE)  as count FROM t0 ORDER BY (('') ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c20)) NOT BETWEEN (((((t0.c20, t0.c20, t0.c50))<=((t0.c50, t0.c20, t0.c50))))) AND ((t0.c50)))) ORDER BY (('') ISNULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON CHAR(CAST(t0.c20 AS NUMERIC)) WHERE (x'') ORDER BY ((((((t0.c20)) BETWEEN ((vt1.c0)) AND ((t0.c50))), CAST(NULL AS INTEGER), ((vt1.c0) ISNULL)))==((t0.c20, (NOT (t0.c20)), t0.c50))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON CHAR(CAST(t0.c20 AS NUMERIC)) ORDER BY ((((((t0.c20)) BETWEEN ((vt1.c0)) AND ((t0.c50))), CAST(NULL AS INTEGER), ((vt1.c0) ISNULL)))=((t0.c20, (NOT (t0.c20)), t0.c50))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON CHAR(CAST(t0.c20 AS NUMERIC)) WHERE (x'') ORDER BY ((((((t0.c20)) BETWEEN ((vt1.c0)) AND ((t0.c50))), CAST(NULL AS INTEGER), ((vt1.c0) ISNULL)))==((t0.c20, (NOT (t0.c20)), t0.c50))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON CHAR(CAST(t0.c20 AS NUMERIC)) ORDER BY ((((((t0.c20)) BETWEEN ((vt1.c0)) AND ((t0.c50))), CAST(NULL AS INTEGER), ((vt1.c0) ISNULL)))=((t0.c20, (NOT (t0.c20)), t0.c50))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON CHAR(CAST(t0.c20 AS NUMERIC)) WHERE (x'') ORDER BY ((((((t0.c20)) BETWEEN ((vt1.c0)) AND ((t0.c50))), CAST(NULL AS INTEGER), ((vt1.c0) ISNULL)))==((t0.c20, (NOT (t0.c20)), t0.c50))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN ())) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 IN ()) IN (((vt0.c1) NOTNULL), ((vt0.c1)|(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 IN ()) IN (((vt0.c1) NOTNULL), ((vt0.c1)|(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 IN ()) IN (((vt0.c1) NOTNULL), ((vt0.c1)|(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 IN ()) IN (((vt0.c1) NOTNULL), ((vt0.c1)|(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 IN ()) IN (((vt0.c1) NOTNULL), ((vt0.c1)|(vt0.c1)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c20, NULL, t0.c20)) BETWEEN ((t0.c20, '-21376714', CAST(t0.c20 AS NUMERIC))) AND ((0.7760856152878136 COLLATE RTRIM, t0.c20, (- (t0.c50)))))) ORDER BY ((0x6ad2730e COLLATE BINARY)|(CAST(t0.c50 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((((t0.c20, NULL, t0.c20)) BETWEEN ((t0.c20, '-21376714', CAST(t0.c20 AS NUMERIC))) AND ((0.7760856152878136 COLLATE RTRIM, t0.c20, (- (t0.c50)))))) IS TRUE)  as count FROM t0 ORDER BY ((0X6ad2730e COLLATE BINARY)|(CAST(t0.c50 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c20, NULL, t0.c20)) BETWEEN ((t0.c20, '-21376714', CAST(t0.c20 AS NUMERIC))) AND ((0.7760856152878136 COLLATE RTRIM, t0.c20, (- (t0.c50)))))) ORDER BY ((0x6ad2730e COLLATE BINARY)|(CAST(t0.c50 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((((t0.c20, NULL, t0.c20)) BETWEEN ((t0.c20, '-21376714', CAST(t0.c20 AS NUMERIC))) AND ((0.7760856152878136 COLLATE RTRIM, t0.c20, (- (t0.c50)))))) IS TRUE)  as count FROM t0 ORDER BY ((0X6ad2730e COLLATE BINARY)|(CAST(t0.c50 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c20, NULL, t0.c20)) BETWEEN ((t0.c20, '-21376714', CAST(t0.c20 AS NUMERIC))) AND ((0.7760856152878136 COLLATE RTRIM, t0.c20, (- (t0.c50)))))) ORDER BY ((0x6ad2730e COLLATE BINARY)|(CAST(t0.c50 AS NUMERIC)));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON ((((vt1.c0)-(-210669104))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (0.33956737364255485))) AND (CASE t0.c50  WHEN vt1.c0 THEN NULL ELSE t0.c50 END)) WHERE ((((NOT (t0.c20))) NOT BETWEEN (TRIM(vt1.c0, t0.c20)) AND ((+ (t0.c20))))) ORDER BY ((((t0.c20) NOT BETWEEN (t0.c20) AND (t0.c50)))>=(CASE t0.c20  WHEN vt1.c0 THEN t0.c50 ELSE x'' END)) ASC  NULLS LAST, ((((0Xffffffffbdf1f728)AND(vt1.c0 COLLATE NOCASE)))AND((((t0.c50))<((t0.c50)))))  NULLS LAST, (((t0.c50)) NOT BETWEEN ((t0.c20 COLLATE NOCASE)) AND (((~ (t0.c20)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c20))) NOT BETWEEN (TRIM(vt1.c0, t0.c20)) AND ((+ (t0.c20))))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((vt1.c0)-(-210669104))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (0.33956737364255485))) AND (CASE t0.c50  WHEN vt1.c0 THEN NULL ELSE t0.c50 END)) ORDER BY ((((t0.c20) NOT BETWEEN (t0.c20) AND (t0.c50)))>=(CASE t0.c20  WHEN vt1.c0 THEN t0.c50 ELSE x'' END)) ASC  NULLS LAST, ((((0Xffffffffbdf1f728)AND(vt1.c0 COLLATE NOCASE)))AND((((t0.c50))<((t0.c50)))))  NULLS LAST, (((t0.c50)) NOT BETWEEN ((t0.c20 COLLATE NOCASE)) AND (((~ (t0.c20)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON ((((vt1.c0)-(-210669104))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (0.33956737364255485))) AND (CASE t0.c50  WHEN vt1.c0 THEN NULL ELSE t0.c50 END)) WHERE ((((NOT (t0.c20))) NOT BETWEEN (TRIM(vt1.c0, t0.c20)) AND ((+ (t0.c20))))) ORDER BY ((((t0.c20) NOT BETWEEN (t0.c20) AND (t0.c50)))>=(CASE t0.c20  WHEN vt1.c0 THEN t0.c50 ELSE x'' END)) ASC  NULLS LAST, ((((0Xffffffffbdf1f728)AND(vt1.c0 COLLATE NOCASE)))AND((((t0.c50))<((t0.c50)))))  NULLS LAST, (((t0.c50)) NOT BETWEEN ((t0.c20 COLLATE NOCASE)) AND (((~ (t0.c20)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c20))) NOT BETWEEN (TRIM(vt1.c0, t0.c20)) AND ((+ (t0.c20))))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((vt1.c0)-(-210669104))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (0.33956737364255485))) AND (CASE t0.c50  WHEN vt1.c0 THEN NULL ELSE t0.c50 END)) ORDER BY ((((t0.c20) NOT BETWEEN (t0.c20) AND (t0.c50)))>=(CASE t0.c20  WHEN vt1.c0 THEN t0.c50 ELSE x'' END)) ASC  NULLS LAST, ((((0Xffffffffbdf1f728)AND(vt1.c0 COLLATE NOCASE)))AND((((t0.c50))<((t0.c50)))))  NULLS LAST, (((t0.c50)) NOT BETWEEN ((t0.c20 COLLATE NOCASE)) AND (((~ (t0.c20)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON ((((vt1.c0)-(-210669104))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (0.33956737364255485))) AND (CASE t0.c50  WHEN vt1.c0 THEN NULL ELSE t0.c50 END)) WHERE ((((NOT (t0.c20))) NOT BETWEEN (TRIM(vt1.c0, t0.c20)) AND ((+ (t0.c20))))) ORDER BY ((((t0.c20) NOT BETWEEN (t0.c20) AND (t0.c50)))>=(CASE t0.c20  WHEN vt1.c0 THEN t0.c50 ELSE x'' END)) ASC  NULLS LAST, ((((0Xffffffffbdf1f728)AND(vt1.c0 COLLATE NOCASE)))AND((((t0.c50))<((t0.c50)))))  NULLS LAST, (((t0.c50)) NOT BETWEEN ((t0.c20 COLLATE NOCASE)) AND (((~ (t0.c20)))))  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE ((((((((t0.c20)) NOT BETWEEN ((vt0.c1)) AND ((t0.c20))))OR((vt0.c1 IN (vt0.c1)))))OR(((t0.c20)+(t0.c20))))) ORDER BY (+ (((t0.c50) BETWEEN (t0.c50) AND (t0.c50)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c20)) NOT BETWEEN ((vt0.c1)) AND ((t0.c20))))OR((vt0.c1 IN (vt0.c1)))))OR(((t0.c20)+(t0.c20))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ (((t0.c50) BETWEEN (t0.c50) AND (t0.c50)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((((((t0.c20)) NOT BETWEEN ((vt0.c1)) AND ((t0.c20))))OR((vt0.c1 IN (vt0.c1)))))OR(((t0.c20)+(t0.c20))))) ORDER BY (+ (((t0.c50) BETWEEN (t0.c50) AND (t0.c50)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c20)) NOT BETWEEN ((vt0.c1)) AND ((t0.c20))))OR((vt0.c1 IN (vt0.c1)))))OR(((t0.c20)+(t0.c20))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ (((t0.c50) BETWEEN (t0.c50) AND (t0.c50)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((((((t0.c20)) NOT BETWEEN ((vt0.c1)) AND ((t0.c20))))OR((vt0.c1 IN (vt0.c1)))))OR(((t0.c20)+(t0.c20))))) ORDER BY (+ (((t0.c50) BETWEEN (t0.c50) AND (t0.c50)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE BINARY) ORDER BY load_extension(((vt1.c0) IS FALSE), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))  NULLS LAST, ((vt1.c0)||(vt1.c0)) COLLATE RTRIM, 'l.Lt1Ca9&' COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY load_extension(((vt1.c0) IS FALSE), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))  NULLS LAST, ((vt1.c0)||(vt1.c0)) COLLATE RTRIM, 'l.Lt1Ca9&' COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE BINARY) ORDER BY load_extension(((vt1.c0) IS FALSE), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))  NULLS LAST, ((vt1.c0)||(vt1.c0)) COLLATE RTRIM, 'l.Lt1Ca9&' COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY load_extension(((vt1.c0) IS FALSE), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))  NULLS LAST, ((vt1.c0)||(vt1.c0)) COLLATE RTRIM, 'l.Lt1Ca9&' COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt1, t0 WHERE (((((x'd048')!=(t0.c20))) NOTNULL)) ORDER BY (((t0.c50 IN ())) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'd048')!=(t0.c20))) NOTNULL)) IS TRUE)  as count FROM vt1, t0 ORDER BY (((t0.c50 IN ())) NOTNULL) ASC  NULLS LAST);
SELECT * FROM vt1, t0 WHERE (((((x'd048')!=(t0.c20))) NOTNULL)) ORDER BY (((t0.c50 IN ())) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'd048')!=(t0.c20))) NOTNULL)) IS TRUE)  as count FROM vt1, t0 ORDER BY (((t0.c50 IN ())) NOTNULL) ASC  NULLS LAST);
SELECT * FROM vt1, t0 WHERE (((((x'd048')!=(t0.c20))) NOTNULL)) ORDER BY (((t0.c50 IN ())) NOTNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON LOWER(DISTINCT ((t0.c20)<(vt1.c0))) FULL OUTER JOIN vt0 ON (- (((((((((vt1.c0)AND(t0.c20)))AND(t0.c20)))AND(vt0.c1)))AND(t0.c50)))) WHERE ((((vt1.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((vt1.c0)))) ORDER BY ((((vt0.c0) IS FALSE))>(t0.c50)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((vt1.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON LOWER(DISTINCT ((t0.c20)<(vt1.c0))) FULL OUTER JOIN vt0 ON (- (((((((((vt1.c0)AND(t0.c20)))AND(t0.c20)))AND(vt0.c1)))AND(t0.c50)))) ORDER BY ((((vt0.c0) IS FALSE))>(t0.c50)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON LOWER(DISTINCT ((t0.c20)<(vt1.c0))) FULL OUTER JOIN vt0 ON (- (((((((((vt1.c0)AND(t0.c20)))AND(t0.c20)))AND(vt0.c1)))AND(t0.c50)))) WHERE ((((vt1.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((vt1.c0)))) ORDER BY ((((vt0.c0) IS FALSE))>(t0.c50)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((vt1.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON LOWER(DISTINCT ((t0.c20)<(vt1.c0))) FULL OUTER JOIN vt0 ON (- (((((((((vt1.c0)AND(t0.c20)))AND(t0.c20)))AND(vt0.c1)))AND(t0.c50)))) ORDER BY ((((vt0.c0) IS FALSE))>(t0.c50)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON LOWER(DISTINCT ((t0.c20)<(vt1.c0))) FULL OUTER JOIN vt0 ON (- (((((((((vt1.c0)AND(t0.c20)))AND(t0.c20)))AND(vt0.c1)))AND(t0.c50)))) WHERE ((((vt1.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((vt1.c0)))) ORDER BY ((((vt0.c0) IS FALSE))>(t0.c50)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((((((vt0.c1))>((vt0.c1))))|(CAST(t0.c20 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))>((vt0.c1))))|(CAST(t0.c20 AS TEXT)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((((((vt0.c1))>((vt0.c1))))|(CAST(t0.c20 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))>((vt0.c1))))|(CAST(t0.c20 AS TEXT)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((((((vt0.c1))>((vt0.c1))))|(CAST(t0.c20 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM) ORDER BY (((7.72746378E8, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), (+ (vt1.c0)), ((vt1.c0) ISNULL))) AND ((((vt1.c0)+(x'ad25')), (vt1.c0 IN (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC  NULLS FIRST, ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0Xffffffffe43e39f8 END)>=(vt1.c0)) DESC, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))+(vt1.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (((7.72746378E8, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), (+ (vt1.c0)), ((vt1.c0) ISNULL))) AND ((((vt1.c0)+(x'ad25')), (vt1.c0 IN (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC  NULLS FIRST, ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0xffffffffe43e39f8 END)>=(vt1.c0)) DESC, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))+(vt1.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM) ORDER BY (((7.72746378E8, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), (+ (vt1.c0)), ((vt1.c0) ISNULL))) AND ((((vt1.c0)+(x'ad25')), (vt1.c0 IN (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC  NULLS FIRST, ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0Xffffffffe43e39f8 END)>=(vt1.c0)) DESC, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))+(vt1.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (((7.72746378E8, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), (+ (vt1.c0)), ((vt1.c0) ISNULL))) AND ((((vt1.c0)+(x'ad25')), (vt1.c0 IN (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC  NULLS FIRST, ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0xffffffffe43e39f8 END)>=(vt1.c0)) DESC, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))+(vt1.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM) ORDER BY (((7.72746378E8, vt1.c0, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), (+ (vt1.c0)), ((vt1.c0) ISNULL))) AND ((((vt1.c0)+(x'ad25')), (vt1.c0 IN (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC  NULLS FIRST, ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0Xffffffffe43e39f8 END)>=(vt1.c0)) DESC, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))+(vt1.c0)) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((NULL IN ()) COLLATE BINARY) ORDER BY (((t0.c50 IN ())) NOT BETWEEN (0.7765401902770567) AND (((t0.c20)>=(t0.c50)))) DESC, 'y㟽{J' DESC;
SELECT SUM(count) FROM (SELECT (((NULL IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY (((t0.c50 IN ())) NOT BETWEEN (0.7765401902770567) AND (((t0.c20)>=(t0.c50)))) DESC, 'y㟽{J' DESC);
SELECT ALL * FROM t0 WHERE ((NULL IN ()) COLLATE BINARY) ORDER BY (((t0.c50 IN ())) NOT BETWEEN (0.7765401902770567) AND (((t0.c20)>=(t0.c50)))) DESC, 'y㟽{J' DESC;
SELECT SUM(count) FROM (SELECT (((NULL IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY (((t0.c50 IN ())) NOT BETWEEN (0.7765401902770567) AND (((t0.c20)>=(t0.c50)))) DESC, 'y㟽{J' DESC);
SELECT ALL * FROM t0 WHERE ((NULL IN ()) COLLATE BINARY) ORDER BY (((t0.c50 IN ())) NOT BETWEEN (0.7765401902770567) AND (((t0.c20)>=(t0.c50)))) DESC, 'y㟽{J' DESC;
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c1) ISNULL) IN ())) ORDER BY (((((t0.c20)) NOT BETWEEN ((vt0.c0)) AND ((t0.c20))))<=(CAST(t0.c50 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) ISNULL) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((t0.c20)) NOT BETWEEN ((vt0.c0)) AND ((t0.c20))))<=(CAST(t0.c50 AS REAL))) ASC);
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c1) ISNULL) IN ())) ORDER BY (((((t0.c20)) NOT BETWEEN ((vt0.c0)) AND ((t0.c20))))<=(CAST(t0.c50 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) ISNULL) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((t0.c20)) NOT BETWEEN ((vt0.c0)) AND ((t0.c20))))<=(CAST(t0.c50 AS REAL))) ASC);
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c1) ISNULL) IN ())) ORDER BY (((((t0.c20)) NOT BETWEEN ((vt0.c0)) AND ((t0.c20))))<=(CAST(t0.c50 AS REAL))) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1)=(vt0.c1))))<((((vt0.c1) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)==(vt0.c1))))<((((vt0.c1) ISNULL))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1)=(vt0.c1))))<((((vt0.c1) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)==(vt0.c1))))<((((vt0.c1) ISNULL))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1)=(vt0.c1))))<((((vt0.c1) ISNULL)))));
SELECT * FROM t0 WHERE (((((t0.c20)=(t0.c50))) NOTNULL)) ORDER BY (NOT (t0.c50));
SELECT SUM(count) FROM (SELECT ((((((t0.c20)==(t0.c50))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c50)));
SELECT * FROM t0 WHERE (((((t0.c20)=(t0.c50))) NOTNULL)) ORDER BY (NOT (t0.c50));
SELECT SUM(count) FROM (SELECT ((((((t0.c20)==(t0.c50))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c50)));
SELECT * FROM t0 WHERE (((((t0.c20)=(t0.c50))) NOTNULL)) ORDER BY (NOT (t0.c50));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0) NOT NULL) COLLATE NOCASE) ORDER BY CASE WHEN -819532736 THEN '' WHEN (((((((((((('-0.0')OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN ((vt0.c1)>(vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN -819532736 THEN '' WHEN (((((((((((('-0.0')OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN ((vt0.c1)>(vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0) NOT NULL) COLLATE NOCASE) ORDER BY CASE WHEN -819532736 THEN '' WHEN (((((((((((('-0.0')OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN ((vt0.c1)>(vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN -819532736 THEN '' WHEN (((((((((((('-0.0')OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN ((vt0.c1)>(vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0) NOT NULL) COLLATE NOCASE) ORDER BY CASE WHEN -819532736 THEN '' WHEN (((((((((((('-0.0')OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN ((vt0.c1)>(vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) END DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c0)/(vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE)))) ORDER BY (((vt1.c0) IS FALSE) IN (vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((vt0.c0)/(vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0) IS FALSE) IN (vt1.c0)) ASC);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c0)/(vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE)))) ORDER BY (((vt1.c0) IS FALSE) IN (vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((vt0.c0)/(vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0) IS FALSE) IN (vt1.c0)) ASC);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c0)/(vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE)))) ORDER BY (((vt1.c0) IS FALSE) IN (vt1.c0)) ASC;
SELECT * FROM vt0 WHERE (NULL) ORDER BY '87619501'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY '87619501'  NULLS LAST);
SELECT * FROM vt0 WHERE (NULL) ORDER BY '87619501'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY '87619501'  NULLS LAST);
SELECT * FROM vt0 WHERE (NULL) ORDER BY '87619501'  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (TRIM(((((t0.c20)OR('1659456015')))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(((((t0.c20)OR('1659456015')))OR(vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (TRIM(((((t0.c20)OR('1659456015')))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(((((t0.c20)OR('1659456015')))OR(vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (TRIM(((((t0.c20)OR('1659456015')))OR(vt0.c0))));
SELECT * FROM t0 WHERE (TYPEOF(DISTINCT ((t0.c20)IS(t0.c20)))) ORDER BY (NOT (t0.c20))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((t0.c20)IS(t0.c20)))) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c20))  NULLS FIRST);
SELECT * FROM t0 WHERE (TYPEOF(DISTINCT ((t0.c20)IS(t0.c20)))) ORDER BY (NOT (t0.c20))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((t0.c20)IS(t0.c20)))) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c20))  NULLS FIRST);
SELECT * FROM t0 WHERE (TYPEOF(DISTINCT ((t0.c20)IS(t0.c20)))) ORDER BY (NOT (t0.c20))  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE ((((('', t0.c50, vt0.c0))>=((t0.c50, vt0.c1, vt0.c0))) IN (vt0.c1 COLLATE NOCASE))) ORDER BY ((((0.8395713074222284 IN (vt0.c1))))=(((t0.c20 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT (((((('', t0.c50, vt0.c0))>=((t0.c50, vt0.c1, vt0.c0))) IN (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((0.8395713074222284 IN (vt0.c1))))=(((t0.c20 IN ())))) DESC);
SELECT ALL * FROM t0, vt0 WHERE ((((('', t0.c50, vt0.c0))>=((t0.c50, vt0.c1, vt0.c0))) IN (vt0.c1 COLLATE NOCASE))) ORDER BY ((((0.8395713074222284 IN (vt0.c1))))=(((t0.c20 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT (((((('', t0.c50, vt0.c0))>=((t0.c50, vt0.c1, vt0.c0))) IN (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((0.8395713074222284 IN (vt0.c1))))=(((t0.c20 IN ())))) DESC);
SELECT ALL * FROM t0, vt0 WHERE ((((('', t0.c50, vt0.c0))>=((t0.c50, vt0.c1, vt0.c0))) IN (vt0.c1 COLLATE NOCASE))) ORDER BY ((((0.8395713074222284 IN (vt0.c1))))=(((t0.c20 IN ())))) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON ((vt0.c0)IS NOT(t0.c20)) WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt1.c0 END THEN ((vt0.c0) IS FALSE) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN t0.c50 THEN t0.c50 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c0 THEN vt1.c0 END THEN ((vt0.c0) IS FALSE) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN t0.c50 THEN t0.c50 END END) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON ((vt0.c0)IS NOT(t0.c20)));
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON ((vt0.c0)IS NOT(t0.c20)) WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt1.c0 END THEN ((vt0.c0) IS FALSE) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN t0.c50 THEN t0.c50 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c0 THEN vt1.c0 END THEN ((vt0.c0) IS FALSE) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN t0.c50 THEN t0.c50 END END) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON ((vt0.c0)IS NOT(t0.c20)));
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON ((vt0.c0)IS NOT(t0.c20)) WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt1.c0 END THEN ((vt0.c0) IS FALSE) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN t0.c50 THEN t0.c50 END END);
SELECT * FROM vt1, t0, vt0 WHERE (0.22442101731183828) ORDER BY CASE WHEN CASE t0.c50  WHEN t0.c50 THEN vt0.c1 ELSE x'' END THEN UNLIKELY(t0.c20) ELSE x'' END;
SELECT SUM(count) FROM (SELECT ALL ((0.22442101731183828) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CASE WHEN CASE t0.c50  WHEN t0.c50 THEN vt0.c1 ELSE x'' END THEN UNLIKELY(t0.c20) ELSE x'' END);
SELECT * FROM vt1, t0, vt0 WHERE (0.22442101731183828) ORDER BY CASE WHEN CASE t0.c50  WHEN t0.c50 THEN vt0.c1 ELSE x'' END THEN UNLIKELY(t0.c20) ELSE x'' END;
SELECT SUM(count) FROM (SELECT ALL ((0.22442101731183828) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CASE WHEN CASE t0.c50  WHEN t0.c50 THEN vt0.c1 ELSE x'' END THEN UNLIKELY(t0.c20) ELSE x'' END);
SELECT * FROM vt1, t0, vt0 WHERE (0.22442101731183828) ORDER BY CASE WHEN CASE t0.c50  WHEN t0.c50 THEN vt0.c1 ELSE x'' END THEN UNLIKELY(t0.c20) ELSE x'' END;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((NOT (t0.c50)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c50)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((NOT (t0.c50)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c50)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((NOT (t0.c50)) COLLATE NOCASE);
SELECT * FROM vt0, vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN (vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE RTRIM))) ORDER BY ((((vt1.c0) NOT NULL))>(((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN (vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT NULL))>(((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN (vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE RTRIM))) ORDER BY ((((vt1.c0) NOT NULL))>(((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN (vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT NULL))>(((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN (vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE RTRIM))) ORDER BY ((((vt1.c0) NOT NULL))>(((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))) ASC;
SELECT ALL * FROM t0, vt1, vt0 WHERE ('H_	JD');
SELECT SUM(count) FROM (SELECT (('H_	JD') IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE ('H_	JD');
SELECT SUM(count) FROM (SELECT (('H_	JD') IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE ('H_	JD');
SELECT ALL * FROM t0, vt0 WHERE ((- (-1.441934427E9))) ORDER BY 0xffffffff8ee97079 DESC  NULLS FIRST, ((((vt0.c0) IS FALSE))AND(NULL));
SELECT SUM(count) FROM (SELECT ALL (((- (-1.441934427E9))) IS TRUE)  as count FROM t0, vt0 ORDER BY 0Xffffffff8ee97079 DESC  NULLS FIRST, ((((vt0.c0) IS FALSE))AND(NULL)));
SELECT ALL * FROM t0, vt0 WHERE ((- (-1.441934427E9))) ORDER BY 0xffffffff8ee97079 DESC  NULLS FIRST, ((((vt0.c0) IS FALSE))AND(NULL));
SELECT SUM(count) FROM (SELECT ALL (((- (-1.441934427E9))) IS TRUE)  as count FROM t0, vt0 ORDER BY 0Xffffffff8ee97079 DESC  NULLS FIRST, ((((vt0.c0) IS FALSE))AND(NULL)));
SELECT ALL * FROM t0, vt0 WHERE ((- (-1.441934427E9))) ORDER BY 0xffffffff8ee97079 DESC  NULLS FIRST, ((((vt0.c0) IS FALSE))AND(NULL));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (+ (t0.c20 COLLATE NOCASE)) WHERE (t0.c50) ORDER BY CHANGES() ASC  NULLS FIRST, '\S G饈㉁' ASC;
SELECT SUM(count) FROM (SELECT ((t0.c50) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (+ (t0.c20 COLLATE NOCASE)) ORDER BY CHANGES() ASC  NULLS FIRST, '\S G饈㉁' ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (+ (t0.c20 COLLATE NOCASE)) WHERE (t0.c50) ORDER BY CHANGES() ASC  NULLS FIRST, '\S G饈㉁' ASC;
SELECT SUM(count) FROM (SELECT ((t0.c50) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (+ (t0.c20 COLLATE NOCASE)) ORDER BY CHANGES() ASC  NULLS FIRST, '\S G饈㉁' ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (+ (t0.c20 COLLATE NOCASE)) WHERE (t0.c50) ORDER BY CHANGES() ASC  NULLS FIRST, '\S G饈㉁' ASC;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON LIKELY(DISTINCT ((t0.c50) BETWEEN (vt0.c1) AND (vt1.c0))) FULL OUTER JOIN t0 ON ((rtreenode(vt0.c0, vt1.c0))||(((t0.c20) NOT NULL))) WHERE ('2055313484');
SELECT SUM(count) FROM (SELECT (('2055313484') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON LIKELY(DISTINCT ((t0.c50) BETWEEN (vt0.c1) AND (vt1.c0))) FULL OUTER JOIN t0 ON ((rtreenode(vt0.c0, vt1.c0))||(((t0.c20) NOT NULL))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON LIKELY(DISTINCT ((t0.c50) BETWEEN (vt0.c1) AND (vt1.c0))) FULL OUTER JOIN t0 ON ((rtreenode(vt0.c0, vt1.c0))||(((t0.c20) NOT NULL))) WHERE ('2055313484');
SELECT SUM(count) FROM (SELECT (('2055313484') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON LIKELY(DISTINCT ((t0.c50) BETWEEN (vt0.c1) AND (vt1.c0))) FULL OUTER JOIN t0 ON ((rtreenode(vt0.c0, vt1.c0))||(((t0.c20) NOT NULL))));
SELECT * FROM vt0 WHERE ((- (((vt0.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (((vt0.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (((vt0.c0)<<(vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((- (x'')) COLLATE NOCASE) ORDER BY LIKELY(((vt0.c1)AND(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (x'')) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY LIKELY(((vt0.c1)AND(vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((- (x'')) COLLATE NOCASE) ORDER BY LIKELY(((vt0.c1)AND(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (x'')) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY LIKELY(((vt0.c1)AND(vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((- (x'')) COLLATE NOCASE) ORDER BY LIKELY(((vt0.c1)AND(vt0.c0)))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((CAST(vt1.c0 AS BLOB) IN ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS BLOB) IN ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((CAST(vt1.c0 AS BLOB) IN ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS BLOB) IN ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((CAST(vt1.c0 AS BLOB) IN ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON CASE x''  WHEN (t0.c50 IN ()) THEN (- (t0.c50)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c50)) THEN (+ (vt1.c0)) WHEN ((t0.c20)%(vt1.c0)) THEN CASE t0.c20  WHEN '1623824712' THEN vt1.c0 ELSE t0.c50 END END WHERE ((((t0.c20) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ORDER BY ((((t0.c20) BETWEEN (t0.c50) AND (t0.c50))) NOT BETWEEN (x'') AND (t0.c20 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c20) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CASE x''  WHEN (t0.c50 IN ()) THEN (- (t0.c50)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c50)) THEN (+ (vt1.c0)) WHEN ((t0.c20)%(vt1.c0)) THEN CASE t0.c20  WHEN '1623824712' THEN vt1.c0 ELSE t0.c50 END END ORDER BY ((((t0.c20) BETWEEN (t0.c50) AND (t0.c50))) NOT BETWEEN (x'') AND (t0.c20 COLLATE RTRIM)) DESC);
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON CASE x''  WHEN (t0.c50 IN ()) THEN (- (t0.c50)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c50)) THEN (+ (vt1.c0)) WHEN ((t0.c20)%(vt1.c0)) THEN CASE t0.c20  WHEN '1623824712' THEN vt1.c0 ELSE t0.c50 END END WHERE ((((t0.c20) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ORDER BY ((((t0.c20) BETWEEN (t0.c50) AND (t0.c50))) NOT BETWEEN (x'') AND (t0.c20 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c20) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CASE x''  WHEN (t0.c50 IN ()) THEN (- (t0.c50)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c50)) THEN (+ (vt1.c0)) WHEN ((t0.c20)%(vt1.c0)) THEN CASE t0.c20  WHEN '1623824712' THEN vt1.c0 ELSE t0.c50 END END ORDER BY ((((t0.c20) BETWEEN (t0.c50) AND (t0.c50))) NOT BETWEEN (x'') AND (t0.c20 COLLATE RTRIM)) DESC);
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON CASE x''  WHEN (t0.c50 IN ()) THEN (- (t0.c50)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c50)) THEN (+ (vt1.c0)) WHEN ((t0.c20)%(vt1.c0)) THEN CASE t0.c20  WHEN '1623824712' THEN vt1.c0 ELSE t0.c50 END END WHERE ((((t0.c20) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ORDER BY ((((t0.c20) BETWEEN (t0.c50) AND (t0.c50))) NOT BETWEEN (x'') AND (t0.c20 COLLATE RTRIM)) DESC;
SELECT COUNT(*) FROM vt0, vt1 INDEXED BY i2 WHERE (vt1.c0) ORDER BY (- ('Tf')) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 INDEXED BY i2 ORDER BY (- ('Tf')) ASC);
SELECT COUNT(*) FROM vt0, vt1 INDEXED BY i2 WHERE (vt1.c0) ORDER BY (- ('Tf')) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 INDEXED BY i2 ORDER BY (- ('Tf')) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ ((+ (t0.c20)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (t0.c20))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ ((+ (t0.c20)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (t0.c20))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ ((+ (t0.c20)))));
SELECT ALL * FROM vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (QUOTE(vt0.c1) IN (((vt0.c0)IS NOT(NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (QUOTE(vt0.c1) IN (((vt0.c0)IS NOT(NULL)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (QUOTE(vt0.c1) IN (((vt0.c0)IS NOT(NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (QUOTE(vt0.c1) IN (((vt0.c0)IS NOT(NULL)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (QUOTE(vt0.c1) IN (((vt0.c0)IS NOT(NULL)))) ASC;
SELECT ALL COUNT(*) FROM vt1, t0 RIGHT OUTER JOIN vt0 ON NULL WHERE ((((((vt0.c0)&(vt1.c0))))<=((((t0.c20)+(vt1.c0)))))) ORDER BY '1170752358' DESC, CAST(NULL AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)&(vt1.c0))))<=((((t0.c20)+(vt1.c0)))))) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON NULL ORDER BY '1170752358' DESC, CAST(NULL AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 RIGHT OUTER JOIN vt0 ON NULL WHERE ((((((vt0.c0)&(vt1.c0))))<=((((t0.c20)+(vt1.c0)))))) ORDER BY '1170752358' DESC, CAST(NULL AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)&(vt1.c0))))<=((((t0.c20)+(vt1.c0)))))) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON NULL ORDER BY '1170752358' DESC, CAST(NULL AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 RIGHT OUTER JOIN vt0 ON NULL WHERE ((((((vt0.c0)&(vt1.c0))))<=((((t0.c20)+(vt1.c0)))))) ORDER BY '1170752358' DESC, CAST(NULL AS TEXT) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1 IN (vt0.c0))))<((((vt0.c0) NOTNULL))))) ORDER BY (+ (CAST(vt0.c1 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 IN (vt0.c0))))<((((vt0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c1 AS INTEGER))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1 IN (vt0.c0))))<((((vt0.c0) NOTNULL))))) ORDER BY (+ (CAST(vt0.c1 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 IN (vt0.c0))))<((((vt0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c1 AS INTEGER))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1 IN (vt0.c0))))<((((vt0.c0) NOTNULL))))) ORDER BY (+ (CAST(vt0.c1 AS INTEGER))) DESC;
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((((((vt0.c0)>>(t0.c20)))AND((vt0.c1 IN ()))))AND(CASE t0.c20  WHEN vt0.c1 THEN t0.c50 ELSE vt0.c0 END)) WHERE (((((vt0.c0)|(t0.c50))) ISNULL)) ORDER BY ((vt0.c1 COLLATE RTRIM) BETWEEN ('GA') AND (vt0.c1)) ASC, ((CAST(t0.c20 AS TEXT))|((((('772746378')OR(vt0.c0)))OR(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)|(t0.c50))) ISNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((((vt0.c0)>>(t0.c20)))AND((vt0.c1 IN ()))))AND(CASE t0.c20  WHEN vt0.c1 THEN t0.c50 ELSE vt0.c0 END)) ORDER BY ((vt0.c1 COLLATE RTRIM) BETWEEN ('GA') AND (vt0.c1)) ASC, ((CAST(t0.c20 AS TEXT))|((((('772746378')OR(vt0.c0)))OR(vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((((((vt0.c0)>>(t0.c20)))AND((vt0.c1 IN ()))))AND(CASE t0.c20  WHEN vt0.c1 THEN t0.c50 ELSE vt0.c0 END)) WHERE (((((vt0.c0)|(t0.c50))) ISNULL)) ORDER BY ((vt0.c1 COLLATE RTRIM) BETWEEN ('GA') AND (vt0.c1)) ASC, ((CAST(t0.c20 AS TEXT))|((((('772746378')OR(vt0.c0)))OR(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)|(t0.c50))) ISNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((((vt0.c0)>>(t0.c20)))AND((vt0.c1 IN ()))))AND(CASE t0.c20  WHEN vt0.c1 THEN t0.c50 ELSE vt0.c0 END)) ORDER BY ((vt0.c1 COLLATE RTRIM) BETWEEN ('GA') AND (vt0.c1)) ASC, ((CAST(t0.c20 AS TEXT))|((((('772746378')OR(vt0.c0)))OR(vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((((((vt0.c0)>>(t0.c20)))AND((vt0.c1 IN ()))))AND(CASE t0.c20  WHEN vt0.c1 THEN t0.c50 ELSE vt0.c0 END)) WHERE (((((vt0.c0)|(t0.c50))) ISNULL)) ORDER BY ((vt0.c1 COLLATE RTRIM) BETWEEN ('GA') AND (vt0.c1)) ASC, ((CAST(t0.c20 AS TEXT))|((((('772746378')OR(vt0.c0)))OR(vt0.c1))))  NULLS FIRST;
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1))) IS FALSE)) ORDER BY 'D?G>8c!' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY 'D?G>8c!' ASC);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1))) IS FALSE)) ORDER BY 'D?G>8c!' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY 'D?G>8c!' ASC);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1))) IS FALSE)) ORDER BY 'D?G>8c!' ASC;
SELECT * FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN (vt1.c0))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>=((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOTNULL) IN (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>=((vt1.c0 IN ()))));
SELECT * FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN (vt1.c0))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>=((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOTNULL) IN (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>=((vt1.c0 IN ()))));
SELECT * FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN (vt1.c0))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>=((vt1.c0 IN ())));
SELECT COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((CASE t0.c20  WHEN vt0.c1 THEN 0.6329177510296301 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c50 THEN vt0.c0 ELSE '' END)IS NOT(((vt0.c1)>(vt1.c0)))) WHERE (ABS(TRIM(vt1.c0))) ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))<>(CAST(t0.c20 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ((ABS(TRIM(vt1.c0))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((CASE t0.c20  WHEN vt0.c1 THEN 0.6329177510296301 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c50 THEN vt0.c0 ELSE '' END)IS NOT(((vt0.c1)>(vt1.c0)))) ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))<>(CAST(t0.c20 AS TEXT))) ASC);
SELECT COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((CASE t0.c20  WHEN vt0.c1 THEN 0.6329177510296301 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c50 THEN vt0.c0 ELSE '' END)IS NOT(((vt0.c1)>(vt1.c0)))) WHERE (ABS(TRIM(vt1.c0))) ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))<>(CAST(t0.c20 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ((ABS(TRIM(vt1.c0))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((CASE t0.c20  WHEN vt0.c1 THEN 0.6329177510296301 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c50 THEN vt0.c0 ELSE '' END)IS NOT(((vt0.c1)>(vt1.c0)))) ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))<>(CAST(t0.c20 AS TEXT))) ASC);
SELECT COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((CASE t0.c20  WHEN vt0.c1 THEN 0.6329177510296301 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c50 THEN vt0.c0 ELSE '' END)IS NOT(((vt0.c1)>(vt1.c0)))) WHERE (ABS(TRIM(vt1.c0))) ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))<>(CAST(t0.c20 AS TEXT))) ASC;
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))IS NOT((+ (vt1.c0)))) DESC, vt1.c0  NULLS FIRST, (((((vt1.c0)>>(vt1.c0))))<=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))IS NOT((+ (vt1.c0)))) DESC, vt1.c0  NULLS FIRST, (((((vt1.c0)>>(vt1.c0))))<=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))IS NOT((+ (vt1.c0)))) DESC, vt1.c0  NULLS FIRST, (((((vt1.c0)>>(vt1.c0))))<=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))IS NOT((+ (vt1.c0)))) DESC, vt1.c0  NULLS FIRST, (((((vt1.c0)>>(vt1.c0))))<=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))IS NOT((+ (vt1.c0)))) DESC, vt1.c0  NULLS FIRST, (((((vt1.c0)>>(vt1.c0))))<=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC;
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c20)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c20)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c20)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c20)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c20)) COLLATE NOCASE);
SELECT ALL * FROM vt1, vt0, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON COALESCE(((t0.c50) NOT NULL), ((t0.c50)>>(t0.c50))) WHERE (1.840029486E9) ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (vt1.c0) AND (((t0.c20) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((1.840029486E9) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON COALESCE(((t0.c50) NOT NULL), ((t0.c50)>>(t0.c50))) ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (vt1.c0) AND (((t0.c20) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON COALESCE(((t0.c50) NOT NULL), ((t0.c50)>>(t0.c50))) WHERE (1.840029486E9) ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (vt1.c0) AND (((t0.c20) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((1.840029486E9) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON COALESCE(((t0.c50) NOT NULL), ((t0.c50)>>(t0.c50))) ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (vt1.c0) AND (((t0.c20) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON COALESCE(((t0.c50) NOT NULL), ((t0.c50)>>(t0.c50))) WHERE (1.840029486E9) ORDER BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (vt1.c0) AND (((t0.c20) IS TRUE))) DESC;
SELECT * FROM vt0, t0 WHERE ((((vt0.c1) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1) ISNULL) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((vt0.c1) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1) ISNULL) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((vt0.c1) ISNULL) IN ()));
SELECT ALL * FROM t0, vt1 WHERE ((((vt1.c0, t0.c50, t0.c50)) NOT BETWEEN ((LIKELIHOOD(DISTINCT '1341693618', 0.37716203801532766), CAST(x'66eb' AS NUMERIC), CASE WHEN vt1.c0 THEN t0.c20 END)) AND ((vt1.c0, x'', vt1.c0)))) ORDER BY (((t0.c50)) BETWEEN (((vt1.c0 IN ()))) AND ((LOWER(t0.c50))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, t0.c50, t0.c50)) NOT BETWEEN ((LIKELIHOOD(DISTINCT '1341693618', 0.37716203801532766), CAST(x'66eb' AS NUMERIC), CASE WHEN vt1.c0 THEN t0.c20 END)) AND ((vt1.c0, x'', vt1.c0)))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c50)) BETWEEN (((vt1.c0 IN ()))) AND ((LOWER(t0.c50)))));
SELECT ALL * FROM t0, vt1 WHERE ((((vt1.c0, t0.c50, t0.c50)) NOT BETWEEN ((LIKELIHOOD(DISTINCT '1341693618', 0.37716203801532766), CAST(x'66eb' AS NUMERIC), CASE WHEN vt1.c0 THEN t0.c20 END)) AND ((vt1.c0, x'', vt1.c0)))) ORDER BY (((t0.c50)) BETWEEN (((vt1.c0 IN ()))) AND ((LOWER(t0.c50))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, t0.c50, t0.c50)) NOT BETWEEN ((LIKELIHOOD(DISTINCT '1341693618', 0.37716203801532766), CAST(x'66eb' AS NUMERIC), CASE WHEN vt1.c0 THEN t0.c20 END)) AND ((vt1.c0, x'', vt1.c0)))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c50)) BETWEEN (((vt1.c0 IN ()))) AND ((LOWER(t0.c50)))));
SELECT ALL * FROM t0, vt1 WHERE ((((vt1.c0, t0.c50, t0.c50)) NOT BETWEEN ((LIKELIHOOD(DISTINCT '1341693618', 0.37716203801532766), CAST(x'66eb' AS NUMERIC), CASE WHEN vt1.c0 THEN t0.c20 END)) AND ((vt1.c0, x'', vt1.c0)))) ORDER BY (((t0.c50)) BETWEEN (((vt1.c0 IN ()))) AND ((LOWER(t0.c50))));
SELECT ALL * FROM vt0 WHERE (((x'' COLLATE RTRIM)||(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE RTRIM)||(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((x'' COLLATE RTRIM)||(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE RTRIM)||(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((x'' COLLATE RTRIM)||(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT * FROM t0, vt1 INDEXED BY i2, vt0 WHERE (x'7802') ORDER BY (((((vt1.c0)OR(t0.c50)))OR(vt0.c0)) IN (((((t0.c20)AND(t0.c50)))AND(vt0.c1))))  NULLS FIRST, (+ (((vt1.c0)>>(t0.c20)))) ASC;
SELECT SUM(count) FROM (SELECT ((x'7802') IS TRUE)  as count FROM t0, vt1 INDEXED BY i2, vt0 ORDER BY (((((vt1.c0)OR(t0.c50)))OR(vt0.c0)) IN (((((t0.c20)AND(t0.c50)))AND(vt0.c1))))  NULLS FIRST, (+ (((vt1.c0)>>(t0.c20)))) ASC);
SELECT * FROM t0, vt1 INDEXED BY i2, vt0 WHERE (x'7802') ORDER BY (((((vt1.c0)OR(t0.c50)))OR(vt0.c0)) IN (((((t0.c20)AND(t0.c50)))AND(vt0.c1))))  NULLS FIRST, (+ (((vt1.c0)>>(t0.c20)))) ASC;
SELECT SUM(count) FROM (SELECT ((x'7802') IS TRUE)  as count FROM t0, vt1 INDEXED BY i2, vt0 ORDER BY (((((vt1.c0)OR(t0.c50)))OR(vt0.c0)) IN (((((t0.c20)AND(t0.c50)))AND(vt0.c1))))  NULLS FIRST, (+ (((vt1.c0)>>(t0.c20)))) ASC);
SELECT ALL * FROM t0 WHERE ((0.7491643061093148 IN ())) ORDER BY (((t0.c50)) BETWEEN ((t0.c50)) AND ((((NULL) NOT BETWEEN (t0.c50) AND (t0.c50)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((0.7491643061093148 IN ())) IS TRUE)  as count FROM t0 ORDER BY (((t0.c50)) BETWEEN ((t0.c50)) AND ((((NULL) NOT BETWEEN (t0.c50) AND (t0.c50)))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((0.7491643061093148 IN ())) ORDER BY (((t0.c50)) BETWEEN ((t0.c50)) AND ((((NULL) NOT BETWEEN (t0.c50) AND (t0.c50)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((0.7491643061093148 IN ())) IS TRUE)  as count FROM t0 ORDER BY (((t0.c50)) BETWEEN ((t0.c50)) AND ((((NULL) NOT BETWEEN (t0.c50) AND (t0.c50)))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((0.7491643061093148 IN ())) ORDER BY (((t0.c50)) BETWEEN ((t0.c50)) AND ((((NULL) NOT BETWEEN (t0.c50) AND (t0.c50)))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (x'');
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((+ (0X35522712))) ORDER BY ((0xffffffff89e7582d) BETWEEN ((('~m7簷H-G4)')&(t0.c50))) AND (vt0.c1)) DESC  NULLS LAST, (((((vt1.c0)&(vt0.c1))))!=((CASE t0.c50  WHEN t0.c50 THEN vt1.c0 END))) ASC, vt1.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (0X35522712))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((0xffffffff89e7582d) BETWEEN ((('~m7簷H-G4)')&(t0.c50))) AND (vt0.c1)) DESC  NULLS LAST, (((((vt1.c0)&(vt0.c1))))<>((CASE t0.c50  WHEN t0.c50 THEN vt1.c0 END))) ASC, vt1.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((+ (0X35522712))) ORDER BY ((0xffffffff89e7582d) BETWEEN ((('~m7簷H-G4)')&(t0.c50))) AND (vt0.c1)) DESC  NULLS LAST, (((((vt1.c0)&(vt0.c1))))!=((CASE t0.c50  WHEN t0.c50 THEN vt1.c0 END))) ASC, vt1.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (0X35522712))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((0xffffffff89e7582d) BETWEEN ((('~m7簷H-G4)')&(t0.c50))) AND (vt0.c1)) DESC  NULLS LAST, (((((vt1.c0)&(vt0.c1))))<>((CASE t0.c50  WHEN t0.c50 THEN vt1.c0 END))) ASC, vt1.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((+ (0X35522712))) ORDER BY ((0xffffffff89e7582d) BETWEEN ((('~m7簷H-G4)')&(t0.c50))) AND (vt0.c1)) DESC  NULLS LAST, (((((vt1.c0)&(vt0.c1))))!=((CASE t0.c50  WHEN t0.c50 THEN vt1.c0 END))) ASC, vt1.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY ASC;
SELECT * FROM t0 WHERE (((CASE WHEN 0.7962157660263974 THEN t0.c50 ELSE t0.c50 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0.7962157660263974 THEN t0.c50 ELSE t0.c50 END) ISNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CASE WHEN 0.7962157660263974 THEN t0.c50 ELSE t0.c50 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0.7962157660263974 THEN t0.c50 ELSE t0.c50 END) ISNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CASE WHEN 0.7962157660263974 THEN t0.c50 ELSE t0.c50 END) ISNULL));
SELECT * FROM vt1 NATURAL JOIN t0 WHERE (json_patch(((((t0.c50)OR(vt1.c0)))AND(t0.c20)), CASE WHEN t0.c20 THEN t0.c20 ELSE vt1.c0 END)) ORDER BY 0.6126323733319006 ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(((((t0.c50)OR(vt1.c0)))AND(t0.c20)), CASE WHEN t0.c20 THEN t0.c20 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY 0.6126323733319006 ASC);
SELECT * FROM vt1 NATURAL JOIN t0 WHERE (json_patch(((((t0.c50)OR(vt1.c0)))AND(t0.c20)), CASE WHEN t0.c20 THEN t0.c20 ELSE vt1.c0 END)) ORDER BY 0.6126323733319006 ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(((((t0.c50)OR(vt1.c0)))AND(t0.c20)), CASE WHEN t0.c20 THEN t0.c20 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY 0.6126323733319006 ASC);
SELECT * FROM t0, vt0 WHERE ((((CAST(vt0.c0 AS REAL), (('-1910473810') BETWEEN (t0.c20) AND (vt0.c0)), CAST(t0.c50 AS INTEGER)))>((CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS BLOB), ((t0.c50) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS REAL), (('-1910473810') BETWEEN (t0.c20) AND (vt0.c0)), CAST(t0.c50 AS INTEGER)))>((CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS BLOB), ((t0.c50) NOT NULL))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((CAST(vt0.c0 AS REAL), (('-1910473810') BETWEEN (t0.c20) AND (vt0.c0)), CAST(t0.c50 AS INTEGER)))>((CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS BLOB), ((t0.c50) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS REAL), (('-1910473810') BETWEEN (t0.c20) AND (vt0.c0)), CAST(t0.c50 AS INTEGER)))>((CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS BLOB), ((t0.c50) NOT NULL))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((CAST(vt0.c0 AS REAL), (('-1910473810') BETWEEN (t0.c20) AND (vt0.c0)), CAST(t0.c50 AS INTEGER)))>((CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS BLOB), ((t0.c50) NOT NULL)))));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((x'c428' IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((x'c428' IN ())) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((x'c428' IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((x'c428' IN ())) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((x'c428' IN ())) NOT NULL));
SELECT ALL COUNT(*) FROM t0, vt0 FULL OUTER JOIN vt1 ON (((((vt0.c0) ISNULL)))==((((vt0.c0)>=(t0.c50))))) WHERE ((~ ((((t0.c20, vt0.c1, t0.c20, t0.c50, vt1.c0)) NOT BETWEEN ((vt0.c0, t0.c20, vt0.c1, '-145369109', vt0.c1)) AND ((vt1.c0, t0.c20, vt1.c0, vt0.c1, t0.c20)))))) ORDER BY CASE WHEN CASE t0.c20  WHEN vt0.c1 THEN t0.c50 END THEN (t0.c50 IN ()) ELSE vt1.c0 END, CAST(vt0.c1 AS TEXT) COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST, ((((vt1.c0)OR(vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t0.c20, vt0.c1, t0.c20, t0.c50, vt1.c0)) NOT BETWEEN ((vt0.c0, t0.c20, vt0.c1, '-145369109', vt0.c1)) AND ((vt1.c0, t0.c20, vt1.c0, vt0.c1, t0.c20)))))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON (((((vt0.c0) ISNULL)))==((((vt0.c0)>=(t0.c50))))) ORDER BY CASE WHEN CASE t0.c20  WHEN vt0.c1 THEN t0.c50 END THEN (t0.c50 IN ()) ELSE vt1.c0 END, CAST(vt0.c1 AS TEXT) COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST, ((((vt1.c0)OR(vt0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM t0, vt0 FULL OUTER JOIN vt1 ON (((((vt0.c0) ISNULL)))==((((vt0.c0)>=(t0.c50))))) WHERE ((~ ((((t0.c20, vt0.c1, t0.c20, t0.c50, vt1.c0)) NOT BETWEEN ((vt0.c0, t0.c20, vt0.c1, '-145369109', vt0.c1)) AND ((vt1.c0, t0.c20, vt1.c0, vt0.c1, t0.c20)))))) ORDER BY CASE WHEN CASE t0.c20  WHEN vt0.c1 THEN t0.c50 END THEN (t0.c50 IN ()) ELSE vt1.c0 END, CAST(vt0.c1 AS TEXT) COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST, ((((vt1.c0)OR(vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t0.c20, vt0.c1, t0.c20, t0.c50, vt1.c0)) NOT BETWEEN ((vt0.c0, t0.c20, vt0.c1, '-145369109', vt0.c1)) AND ((vt1.c0, t0.c20, vt1.c0, vt0.c1, t0.c20)))))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON (((((vt0.c0) ISNULL)))==((((vt0.c0)>=(t0.c50))))) ORDER BY CASE WHEN CASE t0.c20  WHEN vt0.c1 THEN t0.c50 END THEN (t0.c50 IN ()) ELSE vt1.c0 END, CAST(vt0.c1 AS TEXT) COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST, ((((vt1.c0)OR(vt0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM t0, vt0 FULL OUTER JOIN vt1 ON (((((vt0.c0) ISNULL)))==((((vt0.c0)>=(t0.c50))))) WHERE ((~ ((((t0.c20, vt0.c1, t0.c20, t0.c50, vt1.c0)) NOT BETWEEN ((vt0.c0, t0.c20, vt0.c1, '-145369109', vt0.c1)) AND ((vt1.c0, t0.c20, vt1.c0, vt0.c1, t0.c20)))))) ORDER BY CASE WHEN CASE t0.c20  WHEN vt0.c1 THEN t0.c50 END THEN (t0.c50 IN ()) ELSE vt1.c0 END, CAST(vt0.c1 AS TEXT) COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST, ((((vt1.c0)OR(vt0.c0))) NOT NULL);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON 'f踊R}' WHERE ((((vt0.c0 IN (t0.c20))) NOTNULL)) ORDER BY TRIM(vt0.c1 COLLATE NOCASE, ((vt0.c1)OR(vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (t0.c20))) NOTNULL)) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON 'f踊R}' ORDER BY TRIM(vt0.c1 COLLATE NOCASE, ((vt0.c1)OR(vt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON 'f踊R}' WHERE ((((vt0.c0 IN (t0.c20))) NOTNULL)) ORDER BY TRIM(vt0.c1 COLLATE NOCASE, ((vt0.c1)OR(vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (t0.c20))) NOTNULL)) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON 'f踊R}' ORDER BY TRIM(vt0.c1 COLLATE NOCASE, ((vt0.c1)OR(vt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON 'f踊R}' WHERE ((((vt0.c0 IN (t0.c20))) NOTNULL)) ORDER BY TRIM(vt0.c1 COLLATE NOCASE, ((vt0.c1)OR(vt0.c0))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN (((((vt0.c0)OR(vt1.c0)))AND(t0.c50))) AND (HEX(DISTINCT t0.c50))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN (((((vt0.c0)OR(vt1.c0)))AND(t0.c50))) AND (HEX(DISTINCT t0.c50)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN (((((vt0.c0)OR(vt1.c0)))AND(t0.c50))) AND (HEX(DISTINCT t0.c50))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN (((((vt0.c0)OR(vt1.c0)))AND(t0.c50))) AND (HEX(DISTINCT t0.c50)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN (((((vt0.c0)OR(vt1.c0)))AND(t0.c50))) AND (HEX(DISTINCT t0.c50))));
SELECT COUNT(*) FROM vt1, t0 WHERE ((~ (-1505568322))) ORDER BY (((((t0.c20))<=((NULL)))) BETWEEN (LOWER(DISTINCT t0.c20)) AND (((((t0.c50)AND(t0.c20)))OR(t0.c20))));
SELECT SUM(count) FROM (SELECT (((~ (-1505568322))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((t0.c20))<=((NULL)))) BETWEEN (LOWER(DISTINCT t0.c20)) AND (((((t0.c50)AND(t0.c20)))OR(t0.c20)))));
SELECT COUNT(*) FROM vt1, t0 WHERE ((~ (-1505568322))) ORDER BY (((((t0.c20))<=((NULL)))) BETWEEN (LOWER(DISTINCT t0.c20)) AND (((((t0.c50)AND(t0.c20)))OR(t0.c20))));
SELECT SUM(count) FROM (SELECT (((~ (-1505568322))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((t0.c20))<=((NULL)))) BETWEEN (LOWER(DISTINCT t0.c20)) AND (((((t0.c50)AND(t0.c20)))OR(t0.c20)))));
SELECT COUNT(*) FROM vt1, t0 WHERE ((~ (-1505568322))) ORDER BY (((((t0.c20))<=((NULL)))) BETWEEN (LOWER(DISTINCT t0.c20)) AND (((((t0.c50)AND(t0.c20)))OR(t0.c20))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))!=((vt0.c0)))) ORDER BY vt0.c1 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))<>((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))!=((vt0.c0)))) ORDER BY vt0.c1 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))<>((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))!=((vt0.c0)))) ORDER BY vt0.c1 COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN ()));
SELECT * FROM vt1, vt0, t0 WHERE (((((t0.c20 COLLATE RTRIM)OR((- (vt1.c0)))))AND(((t0.c20) IS TRUE)))) ORDER BY (+ ((NOT ('1448385795')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c20 COLLATE RTRIM)OR((- (vt1.c0)))))AND(((t0.c20) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (+ ((NOT ('1448385795')))) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0, t0 WHERE (((((t0.c20 COLLATE RTRIM)OR((- (vt1.c0)))))AND(((t0.c20) IS TRUE)))) ORDER BY (+ ((NOT ('1448385795')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c20 COLLATE RTRIM)OR((- (vt1.c0)))))AND(((t0.c20) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (+ ((NOT ('1448385795')))) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0, t0 WHERE (((((t0.c20 COLLATE RTRIM)OR((- (vt1.c0)))))AND(((t0.c20) IS TRUE)))) ORDER BY (+ ((NOT ('1448385795')))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((TRIM(vt0.c1)) BETWEEN ((NOT (x''))) AND ((vt0.c0 IN ())))) ORDER BY CASE WHEN (vt0.c1 IN (vt1.c0)) THEN UPPER(vt1.c0) ELSE CAST(-3.37779426E8 AS INTEGER) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(vt0.c1)) BETWEEN ((NOT (x''))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN (vt0.c1 IN (vt1.c0)) THEN UPPER(vt1.c0) ELSE CAST(-3.37779426E8 AS INTEGER) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((TRIM(vt0.c1)) BETWEEN ((NOT (x''))) AND ((vt0.c0 IN ())))) ORDER BY CASE WHEN (vt0.c1 IN (vt1.c0)) THEN UPPER(vt1.c0) ELSE CAST(-3.37779426E8 AS INTEGER) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(vt0.c1)) BETWEEN ((NOT (x''))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN (vt0.c1 IN (vt1.c0)) THEN UPPER(vt1.c0) ELSE CAST(-3.37779426E8 AS INTEGER) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((TRIM(vt0.c1)) BETWEEN ((NOT (x''))) AND ((vt0.c0 IN ())))) ORDER BY CASE WHEN (vt0.c1 IN (vt1.c0)) THEN UPPER(vt1.c0) ELSE CAST(-3.37779426E8 AS INTEGER) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((vt1.c0 COLLATE NOCASE)OR((((vt1.c0))>((vt1.c0))))))AND(((vt1.c0)<<(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0)GLOB(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0 COLLATE NOCASE)OR((((vt1.c0))>((vt1.c0))))))AND(((vt1.c0)<<(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((vt1.c0 COLLATE NOCASE)OR((((vt1.c0))>((vt1.c0))))))AND(((vt1.c0)<<(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0)GLOB(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0 COLLATE NOCASE)OR((((vt1.c0))>((vt1.c0))))))AND(((vt1.c0)<<(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((vt1.c0 COLLATE NOCASE)OR((((vt1.c0))>((vt1.c0))))))AND(((vt1.c0)<<(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0)GLOB(vt1.c0)))));
SELECT * FROM vt0 WHERE ((((((((((((vt0.c1))<((vt0.c0))))OR(vt0.c1)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CAST(vt0.c0 AS INTEGER))))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN 0X4a7419b7 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c1 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((vt0.c0 COLLATE RTRIM)OR((+ (vt0.c0)))))OR((NOT (vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c1))<((vt0.c0))))OR(vt0.c1)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CAST(vt0.c0 AS INTEGER))))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN 0x4a7419b7 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c1 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE RTRIM)OR((+ (vt0.c0)))))OR((NOT (vt0.c1)))));
SELECT * FROM vt0 WHERE ((((((((((((vt0.c1))<((vt0.c0))))OR(vt0.c1)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CAST(vt0.c0 AS INTEGER))))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN 0X4a7419b7 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c1 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((vt0.c0 COLLATE RTRIM)OR((+ (vt0.c0)))))OR((NOT (vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c1))<((vt0.c0))))OR(vt0.c1)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CAST(vt0.c0 AS INTEGER))))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN 0x4a7419b7 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c1 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE RTRIM)OR((+ (vt0.c0)))))OR((NOT (vt0.c1)))));
SELECT * FROM vt0 WHERE ((((((((((((vt0.c1))<((vt0.c0))))OR(vt0.c1)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CAST(vt0.c0 AS INTEGER))))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN 0X4a7419b7 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c1 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((vt0.c0 COLLATE RTRIM)OR((+ (vt0.c0)))))OR((NOT (vt0.c1))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((((vt0.c1)IS NOT(t0.c50)), t0.c20, LTRIM(vt0.c0))) AND ((t0.c20 COLLATE RTRIM, CASE WHEN '' THEN t0.c50 ELSE t0.c50 END, t0.c20))) WHERE ('f盤+c큀&') ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN 0.7491643061093148 THEN vt0.c0 WHEN t0.c50 THEN vt0.c0 END THEN ((((vt0.c1)OR(vt0.c0)))OR(t0.c20)) ELSE vt0.c1 END DESC  NULLS LAST, CAST(((vt0.c0)&(vt0.c1)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('f盤+c큀&') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((((vt0.c1)IS NOT(t0.c50)), t0.c20, LTRIM(vt0.c0))) AND ((t0.c20 COLLATE RTRIM, CASE WHEN '' THEN t0.c50 ELSE t0.c50 END, t0.c20))) ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN 0.7491643061093148 THEN vt0.c0 WHEN t0.c50 THEN vt0.c0 END THEN ((((vt0.c1)OR(vt0.c0)))OR(t0.c20)) ELSE vt0.c1 END DESC  NULLS LAST, CAST(((vt0.c0)&(vt0.c1)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((((vt0.c1)IS NOT(t0.c50)), t0.c20, LTRIM(vt0.c0))) AND ((t0.c20 COLLATE RTRIM, CASE WHEN '' THEN t0.c50 ELSE t0.c50 END, t0.c20))) WHERE ('f盤+c큀&') ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN 0.7491643061093148 THEN vt0.c0 WHEN t0.c50 THEN vt0.c0 END THEN ((((vt0.c1)OR(vt0.c0)))OR(t0.c20)) ELSE vt0.c1 END DESC  NULLS LAST, CAST(((vt0.c0)&(vt0.c1)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('f盤+c큀&') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((((vt0.c1)IS NOT(t0.c50)), t0.c20, LTRIM(vt0.c0))) AND ((t0.c20 COLLATE RTRIM, CASE WHEN '' THEN t0.c50 ELSE t0.c50 END, t0.c20))) ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN 0.7491643061093148 THEN vt0.c0 WHEN t0.c50 THEN vt0.c0 END THEN ((((vt0.c1)OR(vt0.c0)))OR(t0.c20)) ELSE vt0.c1 END DESC  NULLS LAST, CAST(((vt0.c0)&(vt0.c1)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((((vt0.c1)IS NOT(t0.c50)), t0.c20, LTRIM(vt0.c0))) AND ((t0.c20 COLLATE RTRIM, CASE WHEN '' THEN t0.c50 ELSE t0.c50 END, t0.c20))) WHERE ('f盤+c큀&') ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN 0.7491643061093148 THEN vt0.c0 WHEN t0.c50 THEN vt0.c0 END THEN ((((vt0.c1)OR(vt0.c0)))OR(t0.c20)) ELSE vt0.c1 END DESC  NULLS LAST, CAST(((vt0.c0)&(vt0.c1)) AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((TYPEOF(DISTINCT vt1.c0))OR((vt0.c1 IN ()))))OR(((vt0.c0)<(vt0.c1))))) ORDER BY ((vt0.c0 COLLATE NOCASE)AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((TYPEOF(DISTINCT vt1.c0))OR((vt0.c1 IN ()))))OR(((vt0.c0)<(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0 COLLATE NOCASE)AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((TYPEOF(DISTINCT vt1.c0))OR((vt0.c1 IN ()))))OR(((vt0.c0)<(vt0.c1))))) ORDER BY ((vt0.c0 COLLATE NOCASE)AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((TYPEOF(DISTINCT vt1.c0))OR((vt0.c1 IN ()))))OR(((vt0.c0)<(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0 COLLATE NOCASE)AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((TYPEOF(DISTINCT vt1.c0))OR((vt0.c1 IN ()))))OR(((vt0.c0)<(vt0.c1))))) ORDER BY ((vt0.c0 COLLATE NOCASE)AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((t0.c50)) BETWEEN ((((t0.c50)<=(t0.c50)))) AND ((((vt0.c0)>=('')))))) ORDER BY (CASE vt0.c1  WHEN t0.c20 THEN t0.c20 WHEN NULL THEN vt0.c1 WHEN t0.c20 THEN vt0.c1 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c50)) BETWEEN ((((t0.c50)<=(t0.c50)))) AND ((((vt0.c0)>=('')))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (CASE vt0.c1  WHEN t0.c20 THEN t0.c20 WHEN NULL THEN vt0.c1 WHEN t0.c20 THEN vt0.c1 END IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((t0.c50)) BETWEEN ((((t0.c50)<=(t0.c50)))) AND ((((vt0.c0)>=('')))))) ORDER BY (CASE vt0.c1  WHEN t0.c20 THEN t0.c20 WHEN NULL THEN vt0.c1 WHEN t0.c20 THEN vt0.c1 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c50)) BETWEEN ((((t0.c50)<=(t0.c50)))) AND ((((vt0.c0)>=('')))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (CASE vt0.c1  WHEN t0.c20 THEN t0.c20 WHEN NULL THEN vt0.c1 WHEN t0.c20 THEN vt0.c1 END IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((t0.c50)) BETWEEN ((((t0.c50)<=(t0.c50)))) AND ((((vt0.c0)>=('')))))) ORDER BY (CASE vt0.c1  WHEN t0.c20 THEN t0.c20 WHEN NULL THEN vt0.c1 WHEN t0.c20 THEN vt0.c1 END IN ())  NULLS LAST;
SELECT * FROM t0 INNER JOIN vt1 ON (((t0.c50) IS FALSE) IN ()) FULL OUTER JOIN vt0 ON ((NULLIF(vt1.c0, vt0.c1))<=(((vt0.c1)&(vt0.c0)))) WHERE ((+ ((+ (vt0.c1))))) ORDER BY (NOT (((vt1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (vt0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON (((t0.c50) IS FALSE) IN ()) FULL OUTER JOIN vt0 ON ((NULLIF(vt1.c0, vt0.c1))<=(((vt0.c1)&(vt0.c0)))) ORDER BY (NOT (((vt1.c0) IS FALSE))));
SELECT * FROM t0 INNER JOIN vt1 ON (((t0.c50) IS FALSE) IN ()) FULL OUTER JOIN vt0 ON ((NULLIF(vt1.c0, vt0.c1))<=(((vt0.c1)&(vt0.c0)))) WHERE ((+ ((+ (vt0.c1))))) ORDER BY (NOT (((vt1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (vt0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON (((t0.c50) IS FALSE) IN ()) FULL OUTER JOIN vt0 ON ((NULLIF(vt1.c0, vt0.c1))<=(((vt0.c1)&(vt0.c0)))) ORDER BY (NOT (((vt1.c0) IS FALSE))));
SELECT * FROM t0 INNER JOIN vt1 ON (((t0.c50) IS FALSE) IN ()) FULL OUTER JOIN vt0 ON ((NULLIF(vt1.c0, vt0.c1))<=(((vt0.c1)&(vt0.c0)))) WHERE ((+ ((+ (vt0.c1))))) ORDER BY (NOT (((vt1.c0) IS FALSE)));
SELECT ALL * FROM vt1 INNER JOIN t0 ON (('0.44871112737577123' COLLATE RTRIM)>>(vt0.c1)) RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((((t0.c20) BETWEEN (t0.c50) AND (vt0.c1)))) AND ((((((896694147)AND(NULL)))OR(t0.c50))))) WHERE (((((((t0.c20)GLOB(t0.c20)))OR(CASE t0.c50  WHEN t0.c20 THEN vt1.c0 END)))OR((vt0.c1 IN (t0.c50, t0.c20)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c20)GLOB(t0.c20)))OR(CASE t0.c50  WHEN t0.c20 THEN vt1.c0 END)))OR((vt0.c1 IN (t0.c50, t0.c20))))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (('0.44871112737577123' COLLATE RTRIM)>>(vt0.c1)) RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((((t0.c20) BETWEEN (t0.c50) AND (vt0.c1)))) AND ((((((896694147)AND(NULL)))OR(t0.c50))))));
SELECT ALL * FROM vt1 INNER JOIN t0 ON (('0.44871112737577123' COLLATE RTRIM)>>(vt0.c1)) RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((((t0.c20) BETWEEN (t0.c50) AND (vt0.c1)))) AND ((((((896694147)AND(NULL)))OR(t0.c50))))) WHERE (((((((t0.c20)GLOB(t0.c20)))OR(CASE t0.c50  WHEN t0.c20 THEN vt1.c0 END)))OR((vt0.c1 IN (t0.c50, t0.c20)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c20)GLOB(t0.c20)))OR(CASE t0.c50  WHEN t0.c20 THEN vt1.c0 END)))OR((vt0.c1 IN (t0.c50, t0.c20))))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (('0.44871112737577123' COLLATE RTRIM)>>(vt0.c1)) RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((((t0.c20) BETWEEN (t0.c50) AND (vt0.c1)))) AND ((((((896694147)AND(NULL)))OR(t0.c50))))));
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c1 AS TEXT)))<(((NOT (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c1 AS TEXT)))<(((NOT (vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c1 AS TEXT)))<(((NOT (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c1 AS TEXT)))<(((NOT (vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c1 AS TEXT)))<(((NOT (vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((CAST(-930433213 AS TEXT) IN (((t0.c20) IS FALSE)))) ORDER BY TRIM(((vt1.c0)|('8C1Kz[12'))) ASC, (((vt1.c0)) BETWEEN ((CASE x''  WHEN NULL THEN vt1.c0 WHEN t0.c20 THEN vt0.c1 WHEN t0.c20 THEN NULL END)) AND ((vt1.c0 COLLATE BINARY)))  NULLS FIRST, CASE vt0.c0  WHEN vt0.c1 COLLATE RTRIM THEN LOWER(DISTINCT t0.c50) ELSE x'' END, ((((CASE vt0.c1  WHEN 0x4f35cf71 THEN vt1.c0 END)OR((((vt1.c0))=((t0.c50))))))OR(((vt0.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(-930433213 AS TEXT) IN (((t0.c20) IS FALSE)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY TRIM(((vt1.c0)|('8C1Kz[12'))) ASC, (((vt1.c0)) BETWEEN ((CASE x''  WHEN NULL THEN vt1.c0 WHEN t0.c20 THEN vt0.c1 WHEN t0.c20 THEN NULL END)) AND ((vt1.c0 COLLATE BINARY)))  NULLS FIRST, CASE vt0.c0  WHEN vt0.c1 COLLATE RTRIM THEN LOWER(DISTINCT t0.c50) ELSE x'' END, ((((CASE vt0.c1  WHEN 0X4f35cf71 THEN vt1.c0 END)OR((((vt1.c0))=((t0.c50))))))OR(((vt0.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((CAST(-930433213 AS TEXT) IN (((t0.c20) IS FALSE)))) ORDER BY TRIM(((vt1.c0)|('8C1Kz[12'))) ASC, (((vt1.c0)) BETWEEN ((CASE x''  WHEN NULL THEN vt1.c0 WHEN t0.c20 THEN vt0.c1 WHEN t0.c20 THEN NULL END)) AND ((vt1.c0 COLLATE BINARY)))  NULLS FIRST, CASE vt0.c0  WHEN vt0.c1 COLLATE RTRIM THEN LOWER(DISTINCT t0.c50) ELSE x'' END, ((((CASE vt0.c1  WHEN 0x4f35cf71 THEN vt1.c0 END)OR((((vt1.c0))=((t0.c50))))))OR(((vt0.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(-930433213 AS TEXT) IN (((t0.c20) IS FALSE)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY TRIM(((vt1.c0)|('8C1Kz[12'))) ASC, (((vt1.c0)) BETWEEN ((CASE x''  WHEN NULL THEN vt1.c0 WHEN t0.c20 THEN vt0.c1 WHEN t0.c20 THEN NULL END)) AND ((vt1.c0 COLLATE BINARY)))  NULLS FIRST, CASE vt0.c0  WHEN vt0.c1 COLLATE RTRIM THEN LOWER(DISTINCT t0.c50) ELSE x'' END, ((((CASE vt0.c1  WHEN 0X4f35cf71 THEN vt1.c0 END)OR((((vt1.c0))=((t0.c50))))))OR(((vt0.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((CAST(-930433213 AS TEXT) IN (((t0.c20) IS FALSE)))) ORDER BY TRIM(((vt1.c0)|('8C1Kz[12'))) ASC, (((vt1.c0)) BETWEEN ((CASE x''  WHEN NULL THEN vt1.c0 WHEN t0.c20 THEN vt0.c1 WHEN t0.c20 THEN NULL END)) AND ((vt1.c0 COLLATE BINARY)))  NULLS FIRST, CASE vt0.c0  WHEN vt0.c1 COLLATE RTRIM THEN LOWER(DISTINCT t0.c50) ELSE x'' END, ((((CASE vt0.c1  WHEN 0x4f35cf71 THEN vt1.c0 END)OR((((vt1.c0))=((t0.c50))))))OR(((vt0.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((x'')==(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')=(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((x'')==(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')=(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((x'')==(vt0.c0))) ISNULL));
SELECT ALL * FROM t0, vt0 WHERE (((((HEX(vt0.c1))OR((((vt0.c1))>=((t0.c50))))))OR(((t0.c20)IS NOT(t0.c50)))));
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(vt0.c1))OR((((vt0.c1))>=((t0.c50))))))OR(((t0.c20)IS NOT(t0.c50))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((HEX(vt0.c1))OR((((vt0.c1))>=((t0.c50))))))OR(((t0.c20)IS NOT(t0.c50)))));
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(vt0.c1))OR((((vt0.c1))>=((t0.c50))))))OR(((t0.c20)IS NOT(t0.c50))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((HEX(vt0.c1))OR((((vt0.c1))>=((t0.c50))))))OR(((t0.c20)IS NOT(t0.c50)))));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON TRIM(UPPER(vt1.c0)) INNER JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) NOT BETWEEN ((((t0.c20))==((t0.c20)))) AND (((t0.c50) BETWEEN (t0.c20) AND (t0.c20)))) WHERE (x'7c7c') ORDER BY (NOT (vt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((x'7c7c') IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON TRIM(UPPER(vt1.c0)) INNER JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) NOT BETWEEN ((((t0.c20))=((t0.c20)))) AND (((t0.c50) BETWEEN (t0.c20) AND (t0.c20)))) ORDER BY (NOT (vt0.c1 COLLATE BINARY)));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON TRIM(UPPER(vt1.c0)) INNER JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) NOT BETWEEN ((((t0.c20))==((t0.c20)))) AND (((t0.c50) BETWEEN (t0.c20) AND (t0.c20)))) WHERE (x'7c7c') ORDER BY (NOT (vt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((x'7c7c') IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON TRIM(UPPER(vt1.c0)) INNER JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) NOT BETWEEN ((((t0.c20))=((t0.c20)))) AND (((t0.c50) BETWEEN (t0.c20) AND (t0.c20)))) ORDER BY (NOT (vt0.c1 COLLATE BINARY)));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON TRIM(UPPER(vt1.c0)) INNER JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) NOT BETWEEN ((((t0.c20))==((t0.c20)))) AND (((t0.c50) BETWEEN (t0.c20) AND (t0.c20)))) WHERE (x'7c7c') ORDER BY (NOT (vt0.c1 COLLATE BINARY));
SELECT * FROM vt0, t0, vt1 WHERE (t0.c50);
SELECT SUM(count) FROM (SELECT ((t0.c50) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (t0.c50);
SELECT SUM(count) FROM (SELECT ((t0.c50) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (t0.c50);
SELECT * FROM t0, vt0, vt1 WHERE ((((((((((((vt0.c0, t0.c20, vt1.c0, 0.46545835767131294, vt1.c0))<=((vt1.c0, vt1.c0, vt0.c0, t0.c50, vt0.c1))))OR(((((vt1.c0)AND(vt0.c0)))AND(t0.c50)))))OR(((t0.c20) BETWEEN (vt0.c1) AND (vt1.c0)))))AND((+ (t0.c50)))))OR((- (t0.c50))))) ORDER BY 0.3187009571848265 COLLATE RTRIM, ((t0.c20 COLLATE BINARY) IS TRUE)  NULLS LAST, (~ (((vt1.c0)<(t0.c50))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c0, t0.c20, vt1.c0, 0.46545835767131294, vt1.c0))<=((vt1.c0, vt1.c0, vt0.c0, t0.c50, vt0.c1))))OR(((((vt1.c0)AND(vt0.c0)))AND(t0.c50)))))OR(((t0.c20) BETWEEN (vt0.c1) AND (vt1.c0)))))AND((+ (t0.c50)))))OR((- (t0.c50))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY 0.3187009571848265 COLLATE RTRIM, ((t0.c20 COLLATE BINARY) IS TRUE)  NULLS LAST, (~ (((vt1.c0)<(t0.c50)))));
SELECT * FROM t0, vt0, vt1 WHERE ((((((((((((vt0.c0, t0.c20, vt1.c0, 0.46545835767131294, vt1.c0))<=((vt1.c0, vt1.c0, vt0.c0, t0.c50, vt0.c1))))OR(((((vt1.c0)AND(vt0.c0)))AND(t0.c50)))))OR(((t0.c20) BETWEEN (vt0.c1) AND (vt1.c0)))))AND((+ (t0.c50)))))OR((- (t0.c50))))) ORDER BY 0.3187009571848265 COLLATE RTRIM, ((t0.c20 COLLATE BINARY) IS TRUE)  NULLS LAST, (~ (((vt1.c0)<(t0.c50))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c0, t0.c20, vt1.c0, 0.46545835767131294, vt1.c0))<=((vt1.c0, vt1.c0, vt0.c0, t0.c50, vt0.c1))))OR(((((vt1.c0)AND(vt0.c0)))AND(t0.c50)))))OR(((t0.c20) BETWEEN (vt0.c1) AND (vt1.c0)))))AND((+ (t0.c50)))))OR((- (t0.c50))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY 0.3187009571848265 COLLATE RTRIM, ((t0.c20 COLLATE BINARY) IS TRUE)  NULLS LAST, (~ (((vt1.c0)<(t0.c50)))));
SELECT * FROM t0, vt0, vt1 WHERE ((((((((((((vt0.c0, t0.c20, vt1.c0, 0.46545835767131294, vt1.c0))<=((vt1.c0, vt1.c0, vt0.c0, t0.c50, vt0.c1))))OR(((((vt1.c0)AND(vt0.c0)))AND(t0.c50)))))OR(((t0.c20) BETWEEN (vt0.c1) AND (vt1.c0)))))AND((+ (t0.c50)))))OR((- (t0.c50))))) ORDER BY 0.3187009571848265 COLLATE RTRIM, ((t0.c20 COLLATE BINARY) IS TRUE)  NULLS LAST, (~ (((vt1.c0)<(t0.c50))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))<<(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) ORDER BY ((vt0.c1)<>('')) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))<<(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1)<>('')) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))<<(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) ORDER BY ((vt0.c1)<>('')) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))<<(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1)<>('')) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))<<(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) ORDER BY ((vt0.c1)<>('')) ASC;
SELECT * FROM t0 WHERE ('Ὅq[t6!') ORDER BY ((((((t0.c20)AND(t0.c50)))AND(t0.c20))) IS FALSE)  NULLS LAST, CASE CAST(t0.c50 AS BLOB)  WHEN ((t0.c20) NOT BETWEEN (0.8772028808225172) AND (0.8738192678826386)) THEN 0.5319750959026655 ELSE (t0.c20 IN ()) END  NULLS FIRST, t0.c50 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('Ὅq[t6!') IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c20)AND(t0.c50)))AND(t0.c20))) IS FALSE)  NULLS LAST, CASE CAST(t0.c50 AS BLOB)  WHEN ((t0.c20) NOT BETWEEN (0.8772028808225172) AND (0.8738192678826386)) THEN 0.5319750959026655 ELSE (t0.c20 IN ()) END  NULLS FIRST, t0.c50 DESC  NULLS LAST);
SELECT * FROM t0 WHERE ('Ὅq[t6!') ORDER BY ((((((t0.c20)AND(t0.c50)))AND(t0.c20))) IS FALSE)  NULLS LAST, CASE CAST(t0.c50 AS BLOB)  WHEN ((t0.c20) NOT BETWEEN (0.8772028808225172) AND (0.8738192678826386)) THEN 0.5319750959026655 ELSE (t0.c20 IN ()) END  NULLS FIRST, t0.c50 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('Ὅq[t6!') IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c20)AND(t0.c50)))AND(t0.c20))) IS FALSE)  NULLS LAST, CASE CAST(t0.c50 AS BLOB)  WHEN ((t0.c20) NOT BETWEEN (0.8772028808225172) AND (0.8738192678826386)) THEN 0.5319750959026655 ELSE (t0.c20 IN ()) END  NULLS FIRST, t0.c50 DESC  NULLS LAST);
SELECT * FROM t0 WHERE ('Ὅq[t6!') ORDER BY ((((((t0.c20)AND(t0.c50)))AND(t0.c20))) IS FALSE)  NULLS LAST, CASE CAST(t0.c50 AS BLOB)  WHEN ((t0.c20) NOT BETWEEN (0.8772028808225172) AND (0.8738192678826386)) THEN 0.5319750959026655 ELSE (t0.c20 IN ()) END  NULLS FIRST, t0.c50 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN ()));
SELECT * FROM t0, vt0 NATURAL JOIN vt1 WHERE (CAST((- (vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1);
SELECT * FROM t0, vt0 NATURAL JOIN vt1 WHERE (CAST((- (vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1);
SELECT * FROM t0, vt0 NATURAL JOIN vt1 WHERE (CAST((- (vt1.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((((t0.c20)*(vt0.c1))))!=((((vt0.c1)<(t0.c50)))))) ORDER BY CAST(t0.c20 AS TEXT) COLLATE BINARY  NULLS LAST, (CAST(vt0.c1 AS BLOB) IN ()) ASC  NULLS LAST, CASE CAST(vt0.c1 AS NUMERIC)  WHEN (('MQaL\') NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN NULL END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c20)*(vt0.c1))))!=((((vt0.c1)<(t0.c50)))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CAST(t0.c20 AS TEXT) COLLATE BINARY  NULLS LAST, (CAST(vt0.c1 AS BLOB) IN ()) ASC  NULLS LAST, CASE CAST(vt0.c1 AS NUMERIC)  WHEN (('MQaL\') NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN NULL END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((((t0.c20)*(vt0.c1))))!=((((vt0.c1)<(t0.c50)))))) ORDER BY CAST(t0.c20 AS TEXT) COLLATE BINARY  NULLS LAST, (CAST(vt0.c1 AS BLOB) IN ()) ASC  NULLS LAST, CASE CAST(vt0.c1 AS NUMERIC)  WHEN (('MQaL\') NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN NULL END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c20)*(vt0.c1))))!=((((vt0.c1)<(t0.c50)))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CAST(t0.c20 AS TEXT) COLLATE BINARY  NULLS LAST, (CAST(vt0.c1 AS BLOB) IN ()) ASC  NULLS LAST, CASE CAST(vt0.c1 AS NUMERIC)  WHEN (('MQaL\') NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN NULL END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((((t0.c20)*(vt0.c1))))!=((((vt0.c1)<(t0.c50)))))) ORDER BY CAST(t0.c20 AS TEXT) COLLATE BINARY  NULLS LAST, (CAST(vt0.c1 AS BLOB) IN ()) ASC  NULLS LAST, CASE CAST(vt0.c1 AS NUMERIC)  WHEN (('MQaL\') NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN NULL END DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((t0.c50, t0.c50, t0.c50)) BETWEEN ((t0.c50, (- (t0.c20)), ((t0.c20)>>(t0.c50)))) AND ((((t0.c50)>=(t0.c50)), CAST(t0.c20 AS TEXT), ((t0.c20) NOT BETWEEN (t0.c20) AND (t0.c50))))));
SELECT SUM(count) FROM (SELECT (((((t0.c50, t0.c50, t0.c50)) BETWEEN ((t0.c50, (- (t0.c20)), ((t0.c20)>>(t0.c50)))) AND ((((t0.c50)>=(t0.c50)), CAST(t0.c20 AS TEXT), ((t0.c20) NOT BETWEEN (t0.c20) AND (t0.c50)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c50, t0.c50, t0.c50)) BETWEEN ((t0.c50, (- (t0.c20)), ((t0.c20)>>(t0.c50)))) AND ((((t0.c50)>=(t0.c50)), CAST(t0.c20 AS TEXT), ((t0.c20) NOT BETWEEN (t0.c20) AND (t0.c50))))));
SELECT SUM(count) FROM (SELECT (((((t0.c50, t0.c50, t0.c50)) BETWEEN ((t0.c50, (- (t0.c20)), ((t0.c20)>>(t0.c50)))) AND ((((t0.c50)>=(t0.c50)), CAST(t0.c20 AS TEXT), ((t0.c20) NOT BETWEEN (t0.c20) AND (t0.c50)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c50, t0.c50, t0.c50)) BETWEEN ((t0.c50, (- (t0.c20)), ((t0.c20)>>(t0.c50)))) AND ((((t0.c50)>=(t0.c50)), CAST(t0.c20 AS TEXT), ((t0.c20) NOT BETWEEN (t0.c20) AND (t0.c50))))));
SELECT ALL * FROM vt0, t0 WHERE (((((0.04225108725846449)OR((((vt0.c0))<((t0.c50))))))AND(t0.c20 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.04225108725846449)OR((((vt0.c0))<((t0.c50))))))AND(t0.c20 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((0.04225108725846449)OR((((vt0.c0))<((t0.c50))))))AND(t0.c20 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.04225108725846449)OR((((vt0.c0))<((t0.c50))))))AND(t0.c20 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((0.04225108725846449)OR((((vt0.c0))<((t0.c50))))))AND(t0.c20 COLLATE NOCASE)));
SELECT * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY (NOT ((((vt1.c0))>=((vt1.c0))))), ((((vt0.c0)GLOB(vt0.c1)))/((((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT ((((vt1.c0))>=((vt1.c0))))), ((((vt0.c0)GLOB(vt0.c1)))/((((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt1.c0))))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY (NOT ((((vt1.c0))>=((vt1.c0))))), ((((vt0.c0)GLOB(vt0.c1)))/((((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT ((((vt1.c0))>=((vt1.c0))))), ((((vt0.c0)GLOB(vt0.c1)))/((((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt1.c0))))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY (NOT ((((vt1.c0))>=((vt1.c0))))), ((((vt0.c0)GLOB(vt0.c1)))/((((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt1.c0))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))OR(t0.c20)))OR(vt0.c1)))OR((((vt0.c0, vt0.c1, 0.8172534353421017)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((x'', t0.c20, vt0.c1))))))AND((NOT (vt0.c1))))) ORDER BY ((vt0.c1)&((~ (t0.c20)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))OR(t0.c20)))OR(vt0.c1)))OR((((vt0.c0, vt0.c1, 0.8172534353421017)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((x'', t0.c20, vt0.c1))))))AND((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c1)&((~ (t0.c20)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))OR(t0.c20)))OR(vt0.c1)))OR((((vt0.c0, vt0.c1, 0.8172534353421017)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((x'', t0.c20, vt0.c1))))))AND((NOT (vt0.c1))))) ORDER BY ((vt0.c1)&((~ (t0.c20)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))OR(t0.c20)))OR(vt0.c1)))OR((((vt0.c0, vt0.c1, 0.8172534353421017)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((x'', t0.c20, vt0.c1))))))AND((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c1)&((~ (t0.c20)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))OR(t0.c20)))OR(vt0.c1)))OR((((vt0.c0, vt0.c1, 0.8172534353421017)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((x'', t0.c20, vt0.c1))))))AND((NOT (vt0.c1))))) ORDER BY ((vt0.c1)&((~ (t0.c20)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (vt1.c0)) COLLATE BINARY) ORDER BY (((vt1.c0 COLLATE BINARY))<=(((((vt1.c0))<=((vt1.c0)))))) ASC  NULLS LAST, (((vt1.c0 IN ())) IS FALSE) ASC  NULLS FIRST, (LIKELIHOOD(DISTINCT vt1.c0, 0.991310765562408) IN ());
SELECT SUM(count) FROM (SELECT ALL (((- (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 COLLATE BINARY))<=(((((vt1.c0))<=((vt1.c0)))))) ASC  NULLS LAST, (((vt1.c0 IN ())) IS FALSE) ASC  NULLS FIRST, (LIKELIHOOD(DISTINCT vt1.c0, 0.991310765562408) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (vt1.c0)) COLLATE BINARY) ORDER BY (((vt1.c0 COLLATE BINARY))<=(((((vt1.c0))<=((vt1.c0)))))) ASC  NULLS LAST, (((vt1.c0 IN ())) IS FALSE) ASC  NULLS FIRST, (LIKELIHOOD(DISTINCT vt1.c0, 0.991310765562408) IN ());
SELECT SUM(count) FROM (SELECT ALL (((- (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 COLLATE BINARY))<=(((((vt1.c0))<=((vt1.c0)))))) ASC  NULLS LAST, (((vt1.c0 IN ())) IS FALSE) ASC  NULLS FIRST, (LIKELIHOOD(DISTINCT vt1.c0, 0.991310765562408) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (vt1.c0)) COLLATE BINARY) ORDER BY (((vt1.c0 COLLATE BINARY))<=(((((vt1.c0))<=((vt1.c0)))))) ASC  NULLS LAST, (((vt1.c0 IN ())) IS FALSE) ASC  NULLS FIRST, (LIKELIHOOD(DISTINCT vt1.c0, 0.991310765562408) IN ());
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (vt1.c0) ORDER BY ((((((((CAST(vt1.c0 AS TEXT))OR(((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))))AND(((vt1.c0)+(t0.c20)))))OR(((vt0.c1)==(t0.c20)))))OR(((t0.c20) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST, x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED, t0 ORDER BY ((((((((CAST(vt1.c0 AS TEXT))OR(((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))))AND(((vt1.c0)+(t0.c20)))))OR(((vt0.c1)=(t0.c20)))))OR(((t0.c20) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST, x'' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (vt1.c0) ORDER BY ((((((((CAST(vt1.c0 AS TEXT))OR(((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))))AND(((vt1.c0)+(t0.c20)))))OR(((vt0.c1)==(t0.c20)))))OR(((t0.c20) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST, x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED, t0 ORDER BY ((((((((CAST(vt1.c0 AS TEXT))OR(((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))))AND(((vt1.c0)+(t0.c20)))))OR(((vt0.c1)=(t0.c20)))))OR(((t0.c20) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST, x'' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (vt1.c0) ORDER BY ((((((((CAST(vt1.c0 AS TEXT))OR(((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))))AND(((vt1.c0)+(t0.c20)))))OR(((vt0.c1)==(t0.c20)))))OR(((t0.c20) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST, x'' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(vt0.c1 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(vt0.c1 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(vt0.c1 AS BLOB) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1 COLLATE NOCASE)OR(0.6844048609068178)))OR(((vt0.c0)|(x'')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 COLLATE NOCASE)OR(0.6844048609068178)))OR(((vt0.c0)|(x''))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1 COLLATE NOCASE)OR(0.6844048609068178)))OR(((vt0.c0)|(x'')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 COLLATE NOCASE)OR(0.6844048609068178)))OR(((vt0.c0)|(x''))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1 COLLATE NOCASE)OR(0.6844048609068178)))OR(((vt0.c0)|(x'')))));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c50 IN (t0.c50, '~m7簷h-g4)')))OR((t0.c50 IN ()))))OR(CASE t0.c50  WHEN t0.c50 THEN t0.c20 WHEN t0.c20 THEN t0.c20 WHEN t0.c20 THEN t0.c20 ELSE t0.c20 END)));
SELECT SUM(count) FROM (SELECT (((((((t0.c50 IN (t0.c50, '~m7簷h-g4)')))OR((t0.c50 IN ()))))OR(CASE t0.c50  WHEN t0.c50 THEN t0.c20 WHEN t0.c20 THEN t0.c20 WHEN t0.c20 THEN t0.c20 ELSE t0.c20 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c50 IN (t0.c50, '~m7簷h-g4)')))OR((t0.c50 IN ()))))OR(CASE t0.c50  WHEN t0.c50 THEN t0.c20 WHEN t0.c20 THEN t0.c20 WHEN t0.c20 THEN t0.c20 ELSE t0.c20 END)));
SELECT SUM(count) FROM (SELECT (((((((t0.c50 IN (t0.c50, '~m7簷h-g4)')))OR((t0.c50 IN ()))))OR(CASE t0.c50  WHEN t0.c50 THEN t0.c20 WHEN t0.c20 THEN t0.c20 WHEN t0.c20 THEN t0.c20 ELSE t0.c20 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c50 IN (t0.c50, '~m7簷h-g4)')))OR((t0.c50 IN ()))))OR(CASE t0.c50  WHEN t0.c50 THEN t0.c20 WHEN t0.c20 THEN t0.c20 WHEN t0.c20 THEN t0.c20 ELSE t0.c20 END)));
SELECT * FROM vt1, t0, vt0 WHERE (TYPEOF(CASE WHEN vt1.c0 THEN t0.c50 END)) ORDER BY (((((vt0.c0))>=((t0.c20)))) BETWEEN (((t0.c50)>=(t0.c20))) AND (((vt0.c0)-('⨉镸⾧磃m''TAa')))) ASC  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT ((TYPEOF(CASE WHEN vt1.c0 THEN t0.c50 END)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((((vt0.c0))>=((t0.c20)))) BETWEEN (((t0.c50)>=(t0.c20))) AND (((vt0.c0)-('⨉镸⾧磃m''TAa')))) ASC  NULLS FIRST, vt0.c0);
SELECT * FROM vt1, t0, vt0 WHERE (TYPEOF(CASE WHEN vt1.c0 THEN t0.c50 END)) ORDER BY (((((vt0.c0))>=((t0.c20)))) BETWEEN (((t0.c50)>=(t0.c20))) AND (((vt0.c0)-('⨉镸⾧磃m''TAa')))) ASC  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT ((TYPEOF(CASE WHEN vt1.c0 THEN t0.c50 END)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((((vt0.c0))>=((t0.c20)))) BETWEEN (((t0.c50)>=(t0.c20))) AND (((vt0.c0)-('⨉镸⾧磃m''TAa')))) ASC  NULLS FIRST, vt0.c0);
SELECT * FROM vt1, t0, vt0 WHERE (TYPEOF(CASE WHEN vt1.c0 THEN t0.c50 END)) ORDER BY (((((vt0.c0))>=((t0.c20)))) BETWEEN (((t0.c50)>=(t0.c20))) AND (((vt0.c0)-('⨉镸⾧磃m''TAa')))) ASC  NULLS FIRST, vt0.c0;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c20) NOT BETWEEN (t0.c20) AND (t0.c50)))<(t0.c20))) ORDER BY t0.c50;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c20) NOT BETWEEN (t0.c20) AND (t0.c50)))<(t0.c20))) IS TRUE)  as count FROM t0 ORDER BY t0.c50);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c20) NOT BETWEEN (t0.c20) AND (t0.c50)))<(t0.c20))) ORDER BY t0.c50;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c20) NOT BETWEEN (t0.c20) AND (t0.c50)))<(t0.c20))) IS TRUE)  as count FROM t0 ORDER BY t0.c50);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c20) NOT BETWEEN (t0.c20) AND (t0.c50)))<(t0.c20))) ORDER BY t0.c50;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)+(NULL))) ORDER BY (((vt1.c0 IN ()))=((((vt1.c0))<>((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)+(NULL))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ()))=((((vt1.c0))!=((vt1.c0))))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)+(NULL))) ORDER BY (((vt1.c0 IN ()))=((((vt1.c0))<>((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)+(NULL))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ()))=((((vt1.c0))!=((vt1.c0))))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)+(NULL))) ORDER BY (((vt1.c0 IN ()))=((((vt1.c0))<>((vt1.c0))))) ASC;
SELECT ALL * FROM vt0 WHERE ((+ ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c50 THEN t0.c50 ELSE vt1.c0 END, CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END, ((t0.c50)IS(vt1.c0))))>=((((t0.c50) BETWEEN (vt1.c0) AND (vt1.c0)), ((((t0.c50)OR(t0.c50)))OR(t0.c50)), CAST(t0.c50 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c50 THEN t0.c50 ELSE vt1.c0 END, CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END, ((t0.c50)IS(vt1.c0))))>=((((t0.c50) BETWEEN (vt1.c0) AND (vt1.c0)), ((((t0.c50)OR(t0.c50)))OR(t0.c50)), CAST(t0.c50 AS TEXT))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c50 THEN t0.c50 ELSE vt1.c0 END, CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END, ((t0.c50)IS(vt1.c0))))>=((((t0.c50) BETWEEN (vt1.c0) AND (vt1.c0)), ((((t0.c50)OR(t0.c50)))OR(t0.c50)), CAST(t0.c50 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c50 THEN t0.c50 ELSE vt1.c0 END, CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END, ((t0.c50)IS(vt1.c0))))>=((((t0.c50) BETWEEN (vt1.c0) AND (vt1.c0)), ((((t0.c50)OR(t0.c50)))OR(t0.c50)), CAST(t0.c50 AS TEXT))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c50 THEN t0.c50 ELSE vt1.c0 END, CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END, ((t0.c50)IS(vt1.c0))))>=((((t0.c50) BETWEEN (vt1.c0) AND (vt1.c0)), ((((t0.c50)OR(t0.c50)))OR(t0.c50)), CAST(t0.c50 AS TEXT)))));
SELECT ALL * FROM t0 WHERE (((CASE t0.c20  WHEN t0.c50 THEN t0.c20 END)<(((((t0.c20)AND(t0.c20)))OR(t0.c50))))) ORDER BY ((((((t0.c50) ISNULL))AND(t0.c20)))OR(t0.c20 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c20  WHEN t0.c50 THEN t0.c20 END)<(((((t0.c20)AND(t0.c20)))OR(t0.c50))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c50) ISNULL))AND(t0.c20)))OR(t0.c20 COLLATE BINARY)));
SELECT ALL * FROM t0 WHERE (((CASE t0.c20  WHEN t0.c50 THEN t0.c20 END)<(((((t0.c20)AND(t0.c20)))OR(t0.c50))))) ORDER BY ((((((t0.c50) ISNULL))AND(t0.c20)))OR(t0.c20 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c20  WHEN t0.c50 THEN t0.c20 END)<(((((t0.c20)AND(t0.c20)))OR(t0.c50))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c50) ISNULL))AND(t0.c20)))OR(t0.c20 COLLATE BINARY)));
SELECT ALL * FROM t0 WHERE (((CASE t0.c20  WHEN t0.c50 THEN t0.c20 END)<(((((t0.c20)AND(t0.c20)))OR(t0.c50))))) ORDER BY ((((((t0.c50) ISNULL))AND(t0.c20)))OR(t0.c20 COLLATE BINARY));
SELECT ALL COUNT(*) FROM t0 WHERE (0.08311565226317219 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((0.08311565226317219 COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (0.08311565226317219 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((0.08311565226317219 COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (0.08311565226317219 COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE (((((0.28539104445234353)AND(CASE WHEN t0.c20 THEN 0.18059706600933934 WHEN 0.6329177510296301 THEN t0.c20 WHEN t0.c50 THEN 0Xffffffffd97defb9 ELSE t0.c50 END)))OR(((t0.c50) NOT NULL)))) ORDER BY ((((NULL) NOT BETWEEN (t0.c50) AND (t0.c20)))LIKE((((t0.c50, t0.c50, t0.c20))>((t0.c20, t0.c50, t0.c50))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.28539104445234353)AND(CASE WHEN t0.c20 THEN 0.18059706600933934 WHEN 0.6329177510296301 THEN t0.c20 WHEN t0.c50 THEN 0Xffffffffd97defb9 ELSE t0.c50 END)))OR(((t0.c50) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((NULL) NOT BETWEEN (t0.c50) AND (t0.c20)))LIKE((((t0.c50, t0.c50, t0.c20))>((t0.c20, t0.c50, t0.c50))))) ASC);
SELECT ALL * FROM t0 WHERE (((((0.28539104445234353)AND(CASE WHEN t0.c20 THEN 0.18059706600933934 WHEN 0.6329177510296301 THEN t0.c20 WHEN t0.c50 THEN 0Xffffffffd97defb9 ELSE t0.c50 END)))OR(((t0.c50) NOT NULL)))) ORDER BY ((((NULL) NOT BETWEEN (t0.c50) AND (t0.c20)))LIKE((((t0.c50, t0.c50, t0.c20))>((t0.c20, t0.c50, t0.c50))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.28539104445234353)AND(CASE WHEN t0.c20 THEN 0.18059706600933934 WHEN 0.6329177510296301 THEN t0.c20 WHEN t0.c50 THEN 0Xffffffffd97defb9 ELSE t0.c50 END)))OR(((t0.c50) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((NULL) NOT BETWEEN (t0.c50) AND (t0.c20)))LIKE((((t0.c50, t0.c50, t0.c20))>((t0.c20, t0.c50, t0.c50))))) ASC);
SELECT ALL * FROM t0 WHERE (((((0.28539104445234353)AND(CASE WHEN t0.c20 THEN 0.18059706600933934 WHEN 0.6329177510296301 THEN t0.c20 WHEN t0.c50 THEN 0Xffffffffd97defb9 ELSE t0.c50 END)))OR(((t0.c50) NOT NULL)))) ORDER BY ((((NULL) NOT BETWEEN (t0.c50) AND (t0.c20)))LIKE((((t0.c50, t0.c50, t0.c20))>((t0.c20, t0.c50, t0.c50))))) ASC;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((vt0.c1, t0.c50, vt0.c1)) NOT BETWEEN ((vt0.c1, (vt0.c0 IN ()), CASE WHEN t0.c20 THEN vt0.c1 END)) AND ((TOTAL_CHANGES(), ABS(DISTINCT 0.021185052570801832), (vt1.c0 IN ())))) CROSS JOIN t0 ON CAST(t0.c50 COLLATE BINARY AS BLOB) WHERE (CAST(UPPER(vt0.c1) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(vt0.c1) AS BLOB)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt0.c1, t0.c50, vt0.c1)) NOT BETWEEN ((vt0.c1, (vt0.c0 IN ()), CASE WHEN t0.c20 THEN vt0.c1 END)) AND ((TOTAL_CHANGES(), ABS(DISTINCT 0.021185052570801832), (vt1.c0 IN ())))) CROSS JOIN t0 ON CAST(t0.c50 COLLATE BINARY AS BLOB));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((vt0.c1, t0.c50, vt0.c1)) NOT BETWEEN ((vt0.c1, (vt0.c0 IN ()), CASE WHEN t0.c20 THEN vt0.c1 END)) AND ((TOTAL_CHANGES(), ABS(DISTINCT 0.021185052570801832), (vt1.c0 IN ())))) CROSS JOIN t0 ON CAST(t0.c50 COLLATE BINARY AS BLOB) WHERE (CAST(UPPER(vt0.c1) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(vt0.c1) AS BLOB)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt0.c1, t0.c50, vt0.c1)) NOT BETWEEN ((vt0.c1, (vt0.c0 IN ()), CASE WHEN t0.c20 THEN vt0.c1 END)) AND ((TOTAL_CHANGES(), ABS(DISTINCT 0.021185052570801832), (vt1.c0 IN ())))) CROSS JOIN t0 ON CAST(t0.c50 COLLATE BINARY AS BLOB));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((vt0.c1, t0.c50, vt0.c1)) NOT BETWEEN ((vt0.c1, (vt0.c0 IN ()), CASE WHEN t0.c20 THEN vt0.c1 END)) AND ((TOTAL_CHANGES(), ABS(DISTINCT 0.021185052570801832), (vt1.c0 IN ())))) CROSS JOIN t0 ON CAST(t0.c50 COLLATE BINARY AS BLOB) WHERE (CAST(UPPER(vt0.c1) AS BLOB));
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((('0.5287946355740514')AND(t0.c20)))AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((('0.5287946355740514')AND(t0.c20)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((('0.5287946355740514')AND(t0.c20)))AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((('0.5287946355740514')AND(t0.c20)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((('0.5287946355740514')AND(t0.c20)))AND(vt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (t0.c20) ORDER BY vt1.c0 DESC, ((((('\rum', t0.c20, vt0.c1, vt0.c0, vt0.c1))!=((vt0.c1, vt0.c1, vt1.c0, t0.c50, t0.c50))))-(CASE WHEN t0.c50 THEN t0.c20 ELSE vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c20) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY vt1.c0 DESC, ((((('\rum', t0.c20, vt0.c1, vt0.c0, vt0.c1))<>((vt0.c1, vt0.c1, vt1.c0, t0.c50, t0.c50))))-(CASE WHEN t0.c50 THEN t0.c20 ELSE vt0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (t0.c20) ORDER BY vt1.c0 DESC, ((((('\rum', t0.c20, vt0.c1, vt0.c0, vt0.c1))!=((vt0.c1, vt0.c1, vt1.c0, t0.c50, t0.c50))))-(CASE WHEN t0.c50 THEN t0.c20 ELSE vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c20) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY vt1.c0 DESC, ((((('\rum', t0.c20, vt0.c1, vt0.c0, vt0.c1))<>((vt0.c1, vt0.c1, vt1.c0, t0.c50, t0.c50))))-(CASE WHEN t0.c50 THEN t0.c20 ELSE vt0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (t0.c20) ORDER BY vt1.c0 DESC, ((((('\rum', t0.c20, vt0.c1, vt0.c0, vt0.c1))!=((vt0.c1, vt0.c1, vt1.c0, t0.c50, t0.c50))))-(CASE WHEN t0.c50 THEN t0.c20 ELSE vt0.c0 END))  NULLS FIRST;
SELECT * FROM t0 WHERE (((TRIM(DISTINCT t0.c20))-(t0.c50 COLLATE BINARY))) ORDER BY CASE ((t0.c50) BETWEEN (t0.c20) AND (t0.c50))  WHEN CAST(t0.c50 AS REAL) THEN ((((t0.c20)OR(t0.c50)))AND(t0.c50)) ELSE ((((t0.c20)OR(t0.c50)))OR(t0.c50)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t0.c20))-(t0.c50 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c50) BETWEEN (t0.c20) AND (t0.c50))  WHEN CAST(t0.c50 AS REAL) THEN ((((t0.c20)OR(t0.c50)))AND(t0.c50)) ELSE ((((t0.c20)OR(t0.c50)))OR(t0.c50)) END  NULLS LAST);
SELECT * FROM t0 WHERE (((TRIM(DISTINCT t0.c20))-(t0.c50 COLLATE BINARY))) ORDER BY CASE ((t0.c50) BETWEEN (t0.c20) AND (t0.c50))  WHEN CAST(t0.c50 AS REAL) THEN ((((t0.c20)OR(t0.c50)))AND(t0.c50)) ELSE ((((t0.c20)OR(t0.c50)))OR(t0.c50)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t0.c20))-(t0.c50 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c50) BETWEEN (t0.c20) AND (t0.c50))  WHEN CAST(t0.c50 AS REAL) THEN ((((t0.c20)OR(t0.c50)))AND(t0.c50)) ELSE ((((t0.c20)OR(t0.c50)))OR(t0.c50)) END  NULLS LAST);
SELECT * FROM t0 WHERE (((TRIM(DISTINCT t0.c20))-(t0.c50 COLLATE BINARY))) ORDER BY CASE ((t0.c50) BETWEEN (t0.c20) AND (t0.c50))  WHEN CAST(t0.c50 AS REAL) THEN ((((t0.c20)OR(t0.c50)))AND(t0.c50)) ELSE ((((t0.c20)OR(t0.c50)))OR(t0.c50)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS TEXT) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)GLOB(vt1.c0)))-(NULL))) ORDER BY ((((vt1.c0) IS TRUE)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)GLOB(vt1.c0)))-(NULL))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) IS TRUE)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)GLOB(vt1.c0)))-(NULL))) ORDER BY ((((vt1.c0) IS TRUE)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)GLOB(vt1.c0)))-(NULL))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) IS TRUE)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)GLOB(vt1.c0)))-(NULL))) ORDER BY ((((vt1.c0) IS TRUE)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))));
SELECT ALL * FROM vt0, t0 WHERE ((+ (t0.c20)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c20))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((+ (t0.c20)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c20))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((+ (t0.c20)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((- (NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (NULL)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((- (NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (NULL)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((- (NULL)) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE ((((t0.c20)) BETWEEN (((t0.c50 IN ()))) AND (((((t0.c20, t0.c50, t0.c20))<((t0.c20, t0.c50, t0.c50)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c20)) BETWEEN (((t0.c50 IN ()))) AND (((((t0.c20, t0.c50, t0.c20))<((t0.c20, t0.c50, t0.c50))))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c20)) BETWEEN (((t0.c50 IN ()))) AND (((((t0.c20, t0.c50, t0.c20))<((t0.c20, t0.c50, t0.c50)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c20)) BETWEEN (((t0.c50 IN ()))) AND (((((t0.c20, t0.c50, t0.c20))<((t0.c20, t0.c50, t0.c50))))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c20)) BETWEEN (((t0.c50 IN ()))) AND (((((t0.c20, t0.c50, t0.c20))<((t0.c20, t0.c50, t0.c50)))))));
SELECT ALL * FROM vt1, vt0, t0 NOT INDEXED WHERE ('ꄂ6礈AQg');
SELECT SUM(count) FROM (SELECT (('ꄂ6礈AQg') IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 NOT INDEXED WHERE ('ꄂ6礈AQg');
SELECT SUM(count) FROM (SELECT (('ꄂ6礈AQg') IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 NOT INDEXED WHERE ('ꄂ6礈AQg');
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((x'')||(''))) ORDER BY (((t0.c20, t0.c20, -1497524530)) BETWEEN ((((((t0.c20)OR(vt0.c0)))AND(t0.c20)), CAST(vt0.c1 AS REAL), ((t0.c20)IS(vt0.c1)))) AND ((CAST(vt0.c1 AS NUMERIC), CAST(vt0.c0 AS NUMERIC), (((vt0.c0, t0.c50, t0.c20))<=((x'', t0.c50, vt0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')||(''))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c20, t0.c20, -1497524530)) BETWEEN ((((((t0.c20)OR(vt0.c0)))AND(t0.c20)), CAST(vt0.c1 AS REAL), ((t0.c20)IS(vt0.c1)))) AND ((CAST(vt0.c1 AS NUMERIC), CAST(vt0.c0 AS NUMERIC), (((vt0.c0, t0.c50, t0.c20))<=((x'', t0.c50, vt0.c0)))))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((x'')||(''))) ORDER BY (((t0.c20, t0.c20, -1497524530)) BETWEEN ((((((t0.c20)OR(vt0.c0)))AND(t0.c20)), CAST(vt0.c1 AS REAL), ((t0.c20)IS(vt0.c1)))) AND ((CAST(vt0.c1 AS NUMERIC), CAST(vt0.c0 AS NUMERIC), (((vt0.c0, t0.c50, t0.c20))<=((x'', t0.c50, vt0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')||(''))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c20, t0.c20, -1497524530)) BETWEEN ((((((t0.c20)OR(vt0.c0)))AND(t0.c20)), CAST(vt0.c1 AS REAL), ((t0.c20)IS(vt0.c1)))) AND ((CAST(vt0.c1 AS NUMERIC), CAST(vt0.c0 AS NUMERIC), (((vt0.c0, t0.c50, t0.c20))<=((x'', t0.c50, vt0.c0)))))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((x'')||(''))) ORDER BY (((t0.c20, t0.c20, -1497524530)) BETWEEN ((((((t0.c20)OR(vt0.c0)))AND(t0.c20)), CAST(vt0.c1 AS REAL), ((t0.c20)IS(vt0.c1)))) AND ((CAST(vt0.c1 AS NUMERIC), CAST(vt0.c0 AS NUMERIC), (((vt0.c0, t0.c50, t0.c20))<=((x'', t0.c50, vt0.c0)))))) ASC;
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON (- (LAST_INSERT_ROWID())) WHERE (((LIKE(t0.c20, vt1.c0)) BETWEEN (((t0.c50)==(vt1.c0))) AND (x'' COLLATE NOCASE))) ORDER BY ((((t0.c20)||(vt1.c0))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(t0.c20, vt1.c0)) BETWEEN (((t0.c50)==(vt1.c0))) AND (x'' COLLATE NOCASE))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (- (LAST_INSERT_ROWID())) ORDER BY ((((t0.c20)||(vt1.c0))) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON (- (LAST_INSERT_ROWID())) WHERE (((LIKE(t0.c20, vt1.c0)) BETWEEN (((t0.c50)==(vt1.c0))) AND (x'' COLLATE NOCASE))) ORDER BY ((((t0.c20)||(vt1.c0))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(t0.c20, vt1.c0)) BETWEEN (((t0.c50)==(vt1.c0))) AND (x'' COLLATE NOCASE))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (- (LAST_INSERT_ROWID())) ORDER BY ((((t0.c20)||(vt1.c0))) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON (- (LAST_INSERT_ROWID())) WHERE (((LIKE(t0.c20, vt1.c0)) BETWEEN (((t0.c50)==(vt1.c0))) AND (x'' COLLATE NOCASE))) ORDER BY ((((t0.c20)||(vt1.c0))) NOT NULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON (((t0.c50)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((t0.c20 IN ())))) INNER JOIN vt0 ON CAST(x'' AS REAL) WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN t0.c50 THEN vt1.c0 WHEN x'3d15' THEN x'' ELSE t0.c20 END) NOT BETWEEN (((t0.c50)||(t0.c50))) AND (t0.c50))) ORDER BY ((json_quote(x'')) BETWEEN ((- (t0.c50))) AND (LIKELY(DISTINCT vt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN t0.c50 THEN vt1.c0 WHEN x'3d15' THEN x'' ELSE t0.c20 END) NOT BETWEEN (((t0.c50)||(t0.c50))) AND (t0.c50))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (((t0.c50)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((t0.c20 IN ())))) INNER JOIN vt0 ON CAST(x'' AS REAL) ORDER BY ((json_quote(x'')) BETWEEN ((- (t0.c50))) AND (LIKELY(DISTINCT vt0.c1))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON (((t0.c50)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((t0.c20 IN ())))) INNER JOIN vt0 ON CAST(x'' AS REAL) WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN t0.c50 THEN vt1.c0 WHEN x'3d15' THEN x'' ELSE t0.c20 END) NOT BETWEEN (((t0.c50)||(t0.c50))) AND (t0.c50))) ORDER BY ((json_quote(x'')) BETWEEN ((- (t0.c50))) AND (LIKELY(DISTINCT vt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN t0.c50 THEN vt1.c0 WHEN x'3d15' THEN x'' ELSE t0.c20 END) NOT BETWEEN (((t0.c50)||(t0.c50))) AND (t0.c50))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (((t0.c50)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((t0.c20 IN ())))) INNER JOIN vt0 ON CAST(x'' AS REAL) ORDER BY ((json_quote(x'')) BETWEEN ((- (t0.c50))) AND (LIKELY(DISTINCT vt0.c1))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON (((t0.c50)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((t0.c20 IN ())))) INNER JOIN vt0 ON CAST(x'' AS REAL) WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN t0.c50 THEN vt1.c0 WHEN x'3d15' THEN x'' ELSE t0.c20 END) NOT BETWEEN (((t0.c50)||(t0.c50))) AND (t0.c50))) ORDER BY ((json_quote(x'')) BETWEEN ((- (t0.c50))) AND (LIKELY(DISTINCT vt0.c1))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0 COLLATE NOCASE);
SELECT * FROM vt1, vt0, t0 WHERE ((NOT (((t0.c20) NOT BETWEEN (vt0.c0) AND ('0.958663500946904'))))) ORDER BY (CASE WHEN 0.3414785249754366 THEN vt0.c0 ELSE t0.c50 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c20) NOT BETWEEN (vt0.c0) AND ('0.958663500946904'))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (CASE WHEN 0.3414785249754366 THEN vt0.c0 ELSE t0.c50 END IN ())  NULLS FIRST);
SELECT * FROM vt1, vt0, t0 WHERE ((NOT (((t0.c20) NOT BETWEEN (vt0.c0) AND ('0.958663500946904'))))) ORDER BY (CASE WHEN 0.3414785249754366 THEN vt0.c0 ELSE t0.c50 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c20) NOT BETWEEN (vt0.c0) AND ('0.958663500946904'))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (CASE WHEN 0.3414785249754366 THEN vt0.c0 ELSE t0.c50 END IN ())  NULLS FIRST);
SELECT * FROM vt1, vt0, t0 WHERE ((NOT (((t0.c20) NOT BETWEEN (vt0.c0) AND ('0.958663500946904'))))) ORDER BY (CASE WHEN 0.3414785249754366 THEN vt0.c0 ELSE t0.c50 END IN ())  NULLS FIRST;
SELECT ALL * FROM vt1, t0, vt0 WHERE (((CASE vt1.c0  WHEN t0.c20 THEN vt0.c1 ELSE vt1.c0 END) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE WHEN vt1.c0 THEN t0.c20 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN t0.c20 THEN vt0.c1 ELSE vt1.c0 END) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE WHEN vt1.c0 THEN t0.c20 END))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((CASE vt1.c0  WHEN t0.c20 THEN vt0.c1 ELSE vt1.c0 END) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE WHEN vt1.c0 THEN t0.c20 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN t0.c20 THEN vt0.c1 ELSE vt1.c0 END) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE WHEN vt1.c0 THEN t0.c20 END))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((CASE vt1.c0  WHEN t0.c20 THEN vt0.c1 ELSE vt1.c0 END) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE WHEN vt1.c0 THEN t0.c20 END)));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((ABS(vt0.c1)) ISNULL)) ORDER BY (((t0.c50)+(t0.c20)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((ABS(vt0.c1)) ISNULL)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (((t0.c50)+(t0.c20)) IN ()));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((ABS(vt0.c1)) ISNULL)) ORDER BY (((t0.c50)+(t0.c20)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((ABS(vt0.c1)) ISNULL)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (((t0.c50)+(t0.c20)) IN ()));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((ABS(vt0.c1)) ISNULL)) ORDER BY (((t0.c50)+(t0.c20)) IN ());
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((CAST(vt0.c1 AS BLOB))LIKE(((t0.c20) IS TRUE)))) ORDER BY (((vt0.c1)) NOT BETWEEN ((((t0.c20)|(vt1.c0)))) AND ((((t0.c20) NOT BETWEEN (t0.c50) AND (t0.c20)))))  NULLS LAST, CASE ((vt0.c1)IS NOT(t0.c50))  WHEN PRINTF(t0.c20, NULL, vt1.c0) THEN ((vt1.c0) BETWEEN ('d?') AND (t0.c50)) ELSE ((t0.c50) BETWEEN (vt0.c1) AND (t0.c20)) END DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS BLOB))LIKE(((t0.c20) IS TRUE)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((vt0.c1)) NOT BETWEEN ((((t0.c20)|(vt1.c0)))) AND ((((t0.c20) NOT BETWEEN (t0.c50) AND (t0.c20)))))  NULLS LAST, CASE ((vt0.c1)IS NOT(t0.c50))  WHEN PRINTF(t0.c20, NULL, vt1.c0) THEN ((vt1.c0) BETWEEN ('d?') AND (t0.c50)) ELSE ((t0.c50) BETWEEN (vt0.c1) AND (t0.c20)) END DESC);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((CAST(vt0.c1 AS BLOB))LIKE(((t0.c20) IS TRUE)))) ORDER BY (((vt0.c1)) NOT BETWEEN ((((t0.c20)|(vt1.c0)))) AND ((((t0.c20) NOT BETWEEN (t0.c50) AND (t0.c20)))))  NULLS LAST, CASE ((vt0.c1)IS NOT(t0.c50))  WHEN PRINTF(t0.c20, NULL, vt1.c0) THEN ((vt1.c0) BETWEEN ('d?') AND (t0.c50)) ELSE ((t0.c50) BETWEEN (vt0.c1) AND (t0.c20)) END DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS BLOB))LIKE(((t0.c20) IS TRUE)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((vt0.c1)) NOT BETWEEN ((((t0.c20)|(vt1.c0)))) AND ((((t0.c20) NOT BETWEEN (t0.c50) AND (t0.c20)))))  NULLS LAST, CASE ((vt0.c1)IS NOT(t0.c50))  WHEN PRINTF(t0.c20, NULL, vt1.c0) THEN ((vt1.c0) BETWEEN ('d?') AND (t0.c50)) ELSE ((t0.c50) BETWEEN (vt0.c1) AND (t0.c20)) END DESC);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((CAST(vt0.c1 AS BLOB))LIKE(((t0.c20) IS TRUE)))) ORDER BY (((vt0.c1)) NOT BETWEEN ((((t0.c20)|(vt1.c0)))) AND ((((t0.c20) NOT BETWEEN (t0.c50) AND (t0.c20)))))  NULLS LAST, CASE ((vt0.c1)IS NOT(t0.c50))  WHEN PRINTF(t0.c20, NULL, vt1.c0) THEN ((vt1.c0) BETWEEN ('d?') AND (t0.c50)) ELSE ((t0.c50) BETWEEN (vt0.c1) AND (t0.c20)) END DESC;
SELECT ALL * FROM t0, vt0 INNER JOIN vt1 ON NULL WHERE (GLOB(((vt0.c1) IS FALSE), ((('-822398245', x'', t0.c20))>((vt0.c1, t0.c20, t0.c20))))) ORDER BY ((vt1.c0)<>(vt0.c1)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((vt0.c1) IS FALSE), ((('-822398245', x'', t0.c20))>((vt0.c1, t0.c20, t0.c20))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON NULL ORDER BY ((vt1.c0)!=(vt0.c1)) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 INNER JOIN vt1 ON NULL WHERE (GLOB(((vt0.c1) IS FALSE), ((('-822398245', x'', t0.c20))>((vt0.c1, t0.c20, t0.c20))))) ORDER BY ((vt1.c0)<>(vt0.c1)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((vt0.c1) IS FALSE), ((('-822398245', x'', t0.c20))>((vt0.c1, t0.c20, t0.c20))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON NULL ORDER BY ((vt1.c0)!=(vt0.c1)) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 INNER JOIN vt1 ON NULL WHERE (GLOB(((vt0.c1) IS FALSE), ((('-822398245', x'', t0.c20))>((vt0.c1, t0.c20, t0.c20))))) ORDER BY ((vt1.c0)<>(vt0.c1)) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((vt1.c0) NOT BETWEEN (t0.c50) AND (vt0.c0))) NOT NULL)) ORDER BY ((((UNLIKELY(DISTINCT vt1.c0))AND(((vt1.c0)>(vt1.c0)))))AND(vt1.c0)) DESC  NULLS LAST, '''\ns' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (t0.c50) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((UNLIKELY(DISTINCT vt1.c0))AND(((vt1.c0)>(vt1.c0)))))AND(vt1.c0)) DESC  NULLS LAST, '''\ns' ASC  NULLS LAST);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((vt1.c0) NOT BETWEEN (t0.c50) AND (vt0.c0))) NOT NULL)) ORDER BY ((((UNLIKELY(DISTINCT vt1.c0))AND(((vt1.c0)>(vt1.c0)))))AND(vt1.c0)) DESC  NULLS LAST, '''\ns' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (t0.c50) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((UNLIKELY(DISTINCT vt1.c0))AND(((vt1.c0)>(vt1.c0)))))AND(vt1.c0)) DESC  NULLS LAST, '''\ns' ASC  NULLS LAST);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((vt1.c0) NOT BETWEEN (t0.c50) AND (vt0.c0))) NOT NULL)) ORDER BY ((((UNLIKELY(DISTINCT vt1.c0))AND(((vt1.c0)>(vt1.c0)))))AND(vt1.c0)) DESC  NULLS LAST, '''\ns' ASC  NULLS LAST;
SELECT ALL * FROM vt0, t0 NATURAL JOIN vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) BETWEEN (CASE t0.c20  WHEN vt0.c1 THEN t0.c50 END) AND (CASE WHEN t0.c20 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS INTEGER)) BETWEEN (CASE t0.c20  WHEN vt0.c1 THEN t0.c50 END) AND (CASE WHEN t0.c20 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0, t0 NATURAL JOIN vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) BETWEEN (CASE t0.c20  WHEN vt0.c1 THEN t0.c50 END) AND (CASE WHEN t0.c20 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS INTEGER)) BETWEEN (CASE t0.c20  WHEN vt0.c1 THEN t0.c50 END) AND (CASE WHEN t0.c20 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0, t0 NATURAL JOIN vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) BETWEEN (CASE t0.c20  WHEN vt0.c1 THEN t0.c50 END) AND (CASE WHEN t0.c20 THEN vt0.c1 END)));
SELECT ALL * FROM vt1 WHERE ((~ (CHAR(vt1.c0)))) ORDER BY (((vt1.c0 IN (vt1.c0)))>=(vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((~ (CHAR(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0)))>=(vt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt1 WHERE ((~ (CHAR(vt1.c0)))) ORDER BY (((vt1.c0 IN (vt1.c0)))>=(vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((~ (CHAR(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0)))>=(vt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt1 WHERE ((~ (CHAR(vt1.c0)))) ORDER BY (((vt1.c0 IN (vt1.c0)))>=(vt1.c0 COLLATE RTRIM));
SELECT * FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c1)!=(vt0.c1)))GLOB(vt1.c0)) WHERE (((IFNULL(vt1.c0, vt0.c0))-(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN 0.7483203166091796 THEN t0.c50 WHEN vt1.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt1.c0, vt0.c0))-(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN 0.7483203166091796 THEN t0.c50 WHEN vt1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c1)!=(vt0.c1)))GLOB(vt1.c0)));
SELECT * FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c1)!=(vt0.c1)))GLOB(vt1.c0)) WHERE (((IFNULL(vt1.c0, vt0.c0))-(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN 0.7483203166091796 THEN t0.c50 WHEN vt1.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt1.c0, vt0.c0))-(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN 0.7483203166091796 THEN t0.c50 WHEN vt1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c1)!=(vt0.c1)))GLOB(vt1.c0)));
SELECT * FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c1)!=(vt0.c1)))GLOB(vt1.c0)) WHERE (((IFNULL(vt1.c0, vt0.c0))-(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN 0.7483203166091796 THEN t0.c50 WHEN vt1.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((IFNULL(DISTINCT vt0.c0, 1.623824712E9))%(x''))) ORDER BY ((((vt0.c0)OR(vt0.c1)))>(json_quote(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT vt0.c0, 1.623824712E9))%(x''))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)OR(vt0.c1)))>(json_quote(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((IFNULL(DISTINCT vt0.c0, 1.623824712E9))%(x''))) ORDER BY ((((vt0.c0)OR(vt0.c1)))>(json_quote(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT vt0.c0, 1.623824712E9))%(x''))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)OR(vt0.c1)))>(json_quote(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((IFNULL(DISTINCT vt0.c0, 1.623824712E9))%(x''))) ORDER BY ((((vt0.c0)OR(vt0.c1)))>(json_quote(vt0.c0))) DESC;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('C	'))))&(((vt1.c0)GLOB(t0.c50)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('C	'))))&(((vt1.c0)GLOB(t0.c50))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('C	'))))&(((vt1.c0)GLOB(t0.c50)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('C	'))))&(((vt1.c0)GLOB(t0.c50))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('C	'))))&(((vt1.c0)GLOB(t0.c50)))));
SELECT COUNT(*) FROM vt1 WHERE ((((~ (0.7356145067521932))) NOT BETWEEN (ABS(vt1.c0)) AND (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((~ (0.7356145067521932))) NOT BETWEEN (ABS(vt1.c0)) AND (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((~ (0.7356145067521932))) NOT BETWEEN (ABS(vt1.c0)) AND (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((~ (0.7356145067521932))) NOT BETWEEN (ABS(vt1.c0)) AND (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((~ (0.7356145067521932))) NOT BETWEEN (ABS(vt1.c0)) AND (vt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((vt0.c0)<<(((vt0.c1) BETWEEN (NULL) AND (vt1.c0)))) WHERE (CASE ((vt0.c1) NOTNULL)  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN SQLITE_SOURCE_ID() WHEN ((vt0.c1)>(vt0.c1)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE 0.6510528094184936 END WHEN '1341693618' THEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND (('2055313484'))) ELSE (((vt1.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((vt0.c1, vt1.c0, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))) END) ORDER BY ((LIKELIHOOD(NULL, 0.034516020099025435))>=(((((vt0.c0)AND(vt1.c0)))AND('-201119784'))));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1) NOTNULL)  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN SQLITE_SOURCE_ID() WHEN ((vt0.c1)>(vt0.c1)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE 0.6510528094184936 END WHEN '1341693618' THEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND (('2055313484'))) ELSE (((vt1.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((vt0.c1, vt1.c0, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))) END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((vt0.c0)<<(((vt0.c1) BETWEEN (NULL) AND (vt1.c0)))) ORDER BY ((LIKELIHOOD(NULL, 0.034516020099025435))>=(((((vt0.c0)AND(vt1.c0)))AND('-201119784')))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((vt0.c0)<<(((vt0.c1) BETWEEN (NULL) AND (vt1.c0)))) WHERE (CASE ((vt0.c1) NOTNULL)  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN SQLITE_SOURCE_ID() WHEN ((vt0.c1)>(vt0.c1)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE 0.6510528094184936 END WHEN '1341693618' THEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND (('2055313484'))) ELSE (((vt1.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((vt0.c1, vt1.c0, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))) END) ORDER BY ((LIKELIHOOD(NULL, 0.034516020099025435))>=(((((vt0.c0)AND(vt1.c0)))AND('-201119784'))));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1) NOTNULL)  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN SQLITE_SOURCE_ID() WHEN ((vt0.c1)>(vt0.c1)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE 0.6510528094184936 END WHEN '1341693618' THEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND (('2055313484'))) ELSE (((vt1.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((vt0.c1, vt1.c0, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))) END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((vt0.c0)<<(((vt0.c1) BETWEEN (NULL) AND (vt1.c0)))) ORDER BY ((LIKELIHOOD(NULL, 0.034516020099025435))>=(((((vt0.c0)AND(vt1.c0)))AND('-201119784')))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((vt0.c0)<<(((vt0.c1) BETWEEN (NULL) AND (vt1.c0)))) WHERE (CASE ((vt0.c1) NOTNULL)  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN SQLITE_SOURCE_ID() WHEN ((vt0.c1)>(vt0.c1)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE 0.6510528094184936 END WHEN '1341693618' THEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND (('2055313484'))) ELSE (((vt1.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((vt0.c1, vt1.c0, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))) END) ORDER BY ((LIKELIHOOD(NULL, 0.034516020099025435))>=(((((vt0.c0)AND(vt1.c0)))AND('-201119784'))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((NOT (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((NOT (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((NOT (vt1.c0 COLLATE BINARY)));
SELECT * FROM vt0 CROSS JOIN t0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c50)))) IS FALSE) WHERE (LOWER(DISTINCT ((vt0.c0)>(t0.c50))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((vt0.c0)>(t0.c50)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c50)))) IS FALSE));
SELECT * FROM vt0 CROSS JOIN t0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c50)))) IS FALSE) WHERE (LOWER(DISTINCT ((vt0.c0)>(t0.c50))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((vt0.c0)>(t0.c50)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c50)))) IS FALSE));
SELECT * FROM vt0 CROSS JOIN t0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c50)))) IS FALSE) WHERE (LOWER(DISTINCT ((vt0.c0)>(t0.c50))));
SELECT ALL COUNT(*) FROM vt1 WHERE ('1448385795');
SELECT SUM(count) FROM (SELECT ALL (('1448385795') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('1448385795');
SELECT SUM(count) FROM (SELECT ALL (('1448385795') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('1448385795');
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt0.c1) IS FALSE)) NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS FALSE)) NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt0.c1) IS FALSE)) NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS FALSE)) NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt0.c1) IS FALSE)) NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT NULL))));
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((vt0.c0, vt0.c1, t0.c50, t0.c20, t0.c50))>((vt0.c0, vt0.c0, -477012606, vt0.c1, t0.c20))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c1, t0.c50, t0.c20, t0.c50))>((vt0.c0, vt0.c0, -477012606, vt0.c1, t0.c20))) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((vt0.c0, vt0.c1, t0.c50, t0.c20, t0.c50))>((vt0.c0, vt0.c0, -477012606, vt0.c1, t0.c20))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c1, t0.c50, t0.c20, t0.c50))>((vt0.c0, vt0.c0, -477012606, vt0.c1, t0.c20))) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((vt0.c0, vt0.c1, t0.c50, t0.c20, t0.c50))>((vt0.c0, vt0.c0, -477012606, vt0.c1, t0.c20))) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON t0.c50 LEFT OUTER JOIN t0 ON CASE t0.c50 COLLATE RTRIM  WHEN ((t0.c20)>>(vt0.c1)) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt1.c0) ISNULL) END WHERE (((COALESCE(DISTINCT t0.c20, t0.c20))IS(vt0.c0))) ORDER BY ((CASE t0.c20  WHEN x'9ccdbe7c' THEN vt0.c1 END)>(vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT t0.c20, t0.c20))IS(vt0.c0))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON t0.c50 LEFT OUTER JOIN t0 ON CASE t0.c50 COLLATE RTRIM  WHEN ((t0.c20)>>(vt0.c1)) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt1.c0) ISNULL) END ORDER BY ((CASE t0.c20  WHEN x'9ccdbe7c' THEN vt0.c1 END)>(vt1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON t0.c50 LEFT OUTER JOIN t0 ON CASE t0.c50 COLLATE RTRIM  WHEN ((t0.c20)>>(vt0.c1)) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt1.c0) ISNULL) END WHERE (((COALESCE(DISTINCT t0.c20, t0.c20))IS(vt0.c0))) ORDER BY ((CASE t0.c20  WHEN x'9ccdbe7c' THEN vt0.c1 END)>(vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT t0.c20, t0.c20))IS(vt0.c0))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON t0.c50 LEFT OUTER JOIN t0 ON CASE t0.c50 COLLATE RTRIM  WHEN ((t0.c20)>>(vt0.c1)) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt1.c0) ISNULL) END ORDER BY ((CASE t0.c20  WHEN x'9ccdbe7c' THEN vt0.c1 END)>(vt1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON t0.c50 LEFT OUTER JOIN t0 ON CASE t0.c50 COLLATE RTRIM  WHEN ((t0.c20)>>(vt0.c1)) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt1.c0) ISNULL) END WHERE (((COALESCE(DISTINCT t0.c20, t0.c20))IS(vt0.c0))) ORDER BY ((CASE t0.c20  WHEN x'9ccdbe7c' THEN vt0.c1 END)>(vt1.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (vt0.c1 IN ())  WHEN (+ (NULL)) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND('')) END) ORDER BY (((((vt0.c1)OR('')))AND(vt0.c1)) IN (((vt0.c1)LIKE(vt0.c0)))) ASC  NULLS FIRST, (('368436505')IS NOT(((vt0.c0)IS NOT(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c1 IN ())  WHEN (+ (NULL)) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND('')) END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)OR('')))AND(vt0.c1)) IN (((vt0.c1)LIKE(vt0.c0)))) ASC  NULLS FIRST, (('368436505')IS NOT(((vt0.c0)IS NOT(vt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (vt0.c1 IN ())  WHEN (+ (NULL)) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND('')) END) ORDER BY (((((vt0.c1)OR('')))AND(vt0.c1)) IN (((vt0.c1)LIKE(vt0.c0)))) ASC  NULLS FIRST, (('368436505')IS NOT(((vt0.c0)IS NOT(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c1 IN ())  WHEN (+ (NULL)) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND('')) END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)OR('')))AND(vt0.c1)) IN (((vt0.c1)LIKE(vt0.c0)))) ASC  NULLS FIRST, (('368436505')IS NOT(((vt0.c0)IS NOT(vt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (vt0.c1 IN ())  WHEN (+ (NULL)) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND('')) END) ORDER BY (((((vt0.c1)OR('')))AND(vt0.c1)) IN (((vt0.c1)LIKE(vt0.c0)))) ASC  NULLS FIRST, (('368436505')IS NOT(((vt0.c0)IS NOT(vt0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM);
SELECT COUNT(*) FROM t0, vt1 WHERE ((+ (((((t0.c50)OR(vt1.c0)))AND(t0.c20))))) ORDER BY ((((((t0.c50)OR(vt1.c0)))OR(t0.c20)))>((((0.25841736895813383)) BETWEEN ((t0.c20)) AND ((t0.c20))))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((((t0.c50)OR(vt1.c0)))AND(t0.c20))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((((t0.c50)OR(vt1.c0)))OR(t0.c20)))>((((0.25841736895813383)) BETWEEN ((t0.c20)) AND ((t0.c20))))) DESC);
SELECT COUNT(*) FROM t0, vt1 WHERE ((+ (((((t0.c50)OR(vt1.c0)))AND(t0.c20))))) ORDER BY ((((((t0.c50)OR(vt1.c0)))OR(t0.c20)))>((((0.25841736895813383)) BETWEEN ((t0.c20)) AND ((t0.c20))))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((((t0.c50)OR(vt1.c0)))AND(t0.c20))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((((t0.c50)OR(vt1.c0)))OR(t0.c20)))>((((0.25841736895813383)) BETWEEN ((t0.c20)) AND ((t0.c20))))) DESC);
SELECT COUNT(*) FROM t0, vt1 WHERE ((+ (((((t0.c50)OR(vt1.c0)))AND(t0.c20))))) ORDER BY ((((((t0.c50)OR(vt1.c0)))OR(t0.c20)))>((((0.25841736895813383)) BETWEEN ((t0.c20)) AND ((t0.c20))))) DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE (((CASE WHEN t0.c50 THEN vt0.c0 END) BETWEEN ((t0.c50 IN ())) AND (((vt0.c0)>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c50 THEN vt0.c0 END) BETWEEN ((t0.c50 IN ())) AND (((vt0.c0)>(vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CASE WHEN t0.c50 THEN vt0.c0 END) BETWEEN ((t0.c50 IN ())) AND (((vt0.c0)>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c50 THEN vt0.c0 END) BETWEEN ((t0.c50 IN ())) AND (((vt0.c0)>(vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CASE WHEN t0.c50 THEN vt0.c0 END) BETWEEN ((t0.c50 IN ())) AND (((vt0.c0)>(vt0.c1)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON (NOT (((vt1.c0)&(vt0.c1)))) WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)OR('-325859823')))AND(vt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c0)+(vt1.c0))) BETWEEN ((('') NOTNULL)) AND (((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)))), ((CAST(vt0.c1 AS BLOB))OR(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)OR('-325859823')))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (NOT (((vt1.c0)&(vt0.c1)))) ORDER BY ((((vt0.c0)+(vt1.c0))) BETWEEN ((('') NOTNULL)) AND (((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)))), ((CAST(vt0.c1 AS BLOB))OR(vt0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON (NOT (((vt1.c0)&(vt0.c1)))) WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)OR('-325859823')))AND(vt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c0)+(vt1.c0))) BETWEEN ((('') NOTNULL)) AND (((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)))), ((CAST(vt0.c1 AS BLOB))OR(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)OR('-325859823')))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (NOT (((vt1.c0)&(vt0.c1)))) ORDER BY ((((vt0.c0)+(vt1.c0))) BETWEEN ((('') NOTNULL)) AND (((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)))), ((CAST(vt0.c1 AS BLOB))OR(vt0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON (NOT (((vt1.c0)&(vt0.c1)))) WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)OR('-325859823')))AND(vt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c0)+(vt1.c0))) BETWEEN ((('') NOTNULL)) AND (((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)))), ((CAST(vt0.c1 AS BLOB))OR(vt0.c0)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)*('My')));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)*('My'))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)*('My')));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)*('My'))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)*('My')));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c20);
SELECT SUM(count) FROM (SELECT ALL ((t0.c20) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c20);
SELECT SUM(count) FROM (SELECT ALL ((t0.c20) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c20);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (t0.c50) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c50) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (t0.c50) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c50) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (t0.c50) ORDER BY vt1.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON ((vt1.c0)>>(CAST(t0.c50 AS TEXT))) WHERE (((t0.c20) NOT BETWEEN (t0.c50) AND (t0.c50)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c20) NOT BETWEEN (t0.c50) AND (t0.c50)) COLLATE BINARY) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((vt1.c0)>>(CAST(t0.c50 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON ((vt1.c0)>>(CAST(t0.c50 AS TEXT))) WHERE (((t0.c20) NOT BETWEEN (t0.c50) AND (t0.c50)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c20) NOT BETWEEN (t0.c50) AND (t0.c50)) COLLATE BINARY) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((vt1.c0)>>(CAST(t0.c50 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON ((vt1.c0)>>(CAST(t0.c50 AS TEXT))) WHERE (((t0.c20) NOT BETWEEN (t0.c50) AND (t0.c50)) COLLATE BINARY);
SELECT COUNT(*) FROM t0 WHERE ((NOT (('' IN (t0.c50, t0.c20)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (('' IN (t0.c50, t0.c20))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (('' IN (t0.c50, t0.c20)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (('' IN (t0.c50, t0.c20))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (('' IN (t0.c50, t0.c20)))));
SELECT ALL * FROM t0 WHERE (((t0.c50) NOT BETWEEN (t0.c20) AND (t0.c20)) COLLATE BINARY) ORDER BY t0.c50  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c50) NOT BETWEEN (t0.c20) AND (t0.c20)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY t0.c50  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((t0.c50) NOT BETWEEN (t0.c20) AND (t0.c20)) COLLATE BINARY) ORDER BY t0.c50  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c50) NOT BETWEEN (t0.c20) AND (t0.c20)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY t0.c50  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((t0.c50) NOT BETWEEN (t0.c20) AND (t0.c20)) COLLATE BINARY) ORDER BY t0.c50  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 CROSS JOIN vt1 ON '0.7760856152878136' WHERE (((((vt0.c0) IS FALSE))-((vt1.c0 IN ())))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS NUMERIC) ASC  NULLS LAST, t0.c20 ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))-((vt1.c0 IN ())))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON '0.7760856152878136' ORDER BY CAST(vt0.c1 COLLATE NOCASE AS NUMERIC) ASC  NULLS LAST, t0.c20 ASC);
SELECT ALL COUNT(*) FROM t0, vt0 CROSS JOIN vt1 ON '0.7760856152878136' WHERE (((((vt0.c0) IS FALSE))-((vt1.c0 IN ())))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS NUMERIC) ASC  NULLS LAST, t0.c20 ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))-((vt1.c0 IN ())))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON '0.7760856152878136' ORDER BY CAST(vt0.c1 COLLATE NOCASE AS NUMERIC) ASC  NULLS LAST, t0.c20 ASC);
SELECT ALL COUNT(*) FROM t0, vt0 CROSS JOIN vt1 ON '0.7760856152878136' WHERE (((((vt0.c0) IS FALSE))-((vt1.c0 IN ())))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS NUMERIC) ASC  NULLS LAST, t0.c20 ASC;
SELECT COUNT(*) FROM t0 WHERE (((((json_array_length(t0.c50, t0.c20))AND(((t0.c20) NOT BETWEEN (t0.c20) AND ('87619501')))))AND(((t0.c20) NOTNULL)))) ORDER BY ((NULLIF(t0.c50, t0.c20)) NOT BETWEEN (load_extension(t0.c50, t0.c20)) AND (((NULL) NOT BETWEEN (t0.c20) AND (t0.c20))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((json_array_length(t0.c50, t0.c20))AND(((t0.c20) NOT BETWEEN (t0.c20) AND ('87619501')))))AND(((t0.c20) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((NULLIF(t0.c50, t0.c20)) NOT BETWEEN (load_extension(t0.c50, t0.c20)) AND (((NULL) NOT BETWEEN (t0.c20) AND (t0.c20))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((json_array_length(t0.c50, t0.c20))AND(((t0.c20) NOT BETWEEN (t0.c20) AND ('87619501')))))AND(((t0.c20) NOTNULL)))) ORDER BY ((NULLIF(t0.c50, t0.c20)) NOT BETWEEN (load_extension(t0.c50, t0.c20)) AND (((NULL) NOT BETWEEN (t0.c20) AND (t0.c20))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((json_array_length(t0.c50, t0.c20))AND(((t0.c20) NOT BETWEEN (t0.c20) AND ('87619501')))))AND(((t0.c20) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((NULLIF(t0.c50, t0.c20)) NOT BETWEEN (load_extension(t0.c50, t0.c20)) AND (((NULL) NOT BETWEEN (t0.c20) AND (t0.c20))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(vt0.c0 COLLATE NOCASE)))AND(0Xffffffff9c644488)))OR('p' COLLATE BINARY)))OR(((vt0.c1)IS(vt0.c1))))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(vt0.c0 COLLATE NOCASE)))AND(0Xffffffff9c644488)))OR('p' COLLATE BINARY)))OR(((vt0.c1)IS(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(vt0.c0 COLLATE NOCASE)))AND(0Xffffffff9c644488)))OR('p' COLLATE BINARY)))OR(((vt0.c1)IS(vt0.c1))))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(vt0.c0 COLLATE NOCASE)))AND(0Xffffffff9c644488)))OR('p' COLLATE BINARY)))OR(((vt0.c1)IS(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(vt0.c0 COLLATE NOCASE)))AND(0Xffffffff9c644488)))OR('p' COLLATE BINARY)))OR(((vt0.c1)IS(vt0.c1))))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS INTEGER);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) NOT NULL));
SELECT * FROM vt0, vt1, t0 INDEXED BY i2 WHERE (((vt1.c0 COLLATE BINARY)%(CASE WHEN vt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)%(CASE WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1, t0 INDEXED BY i2);
SELECT * FROM vt0, vt1, t0 INDEXED BY i2 WHERE (((vt1.c0 COLLATE BINARY)%(CASE WHEN vt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)%(CASE WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1, t0 INDEXED BY i2);
SELECT * FROM vt0, vt1, t0 INDEXED BY i2 WHERE (((vt1.c0 COLLATE BINARY)%(CASE WHEN vt0.c1 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (CAST(((((t0.c20)OR(vt1.c0)))OR(0.5622631146499079)) AS INTEGER)) ORDER BY (HEX(t0.c20) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c20)OR(vt1.c0)))OR(0.5622631146499079)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (HEX(t0.c20) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (CAST(((((t0.c20)OR(vt1.c0)))OR(0.5622631146499079)) AS INTEGER)) ORDER BY (HEX(t0.c20) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c20)OR(vt1.c0)))OR(0.5622631146499079)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (HEX(t0.c20) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (CAST(((((t0.c20)OR(vt1.c0)))OR(0.5622631146499079)) AS INTEGER)) ORDER BY (HEX(t0.c20) IN ()) DESC;
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN vt0 ON (NOT (CAST(vt0.c0 AS TEXT))) WHERE (CAST((NOT (vt0.c1)) AS INTEGER)) ORDER BY (NOT (COALESCE(DISTINCT t0.c50, t0.c50, t0.c20, vt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON (NOT (CAST(vt0.c0 AS TEXT))) ORDER BY (NOT (COALESCE(DISTINCT t0.c50, t0.c50, t0.c20, vt0.c1)))  NULLS LAST);
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN vt0 ON (NOT (CAST(vt0.c0 AS TEXT))) WHERE (CAST((NOT (vt0.c1)) AS INTEGER)) ORDER BY (NOT (COALESCE(DISTINCT t0.c50, t0.c50, t0.c20, vt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON (NOT (CAST(vt0.c0 AS TEXT))) ORDER BY (NOT (COALESCE(DISTINCT t0.c50, t0.c50, t0.c20, vt0.c1)))  NULLS LAST);
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN vt0 ON (NOT (CAST(vt0.c0 AS TEXT))) WHERE (CAST((NOT (vt0.c1)) AS INTEGER)) ORDER BY (NOT (COALESCE(DISTINCT t0.c50, t0.c50, t0.c20, vt0.c1)))  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN vt1 ON (((('Q)')AND(vt0.c1)))OR(t0.c50 COLLATE NOCASE)) CROSS JOIN t0 ON ((0.004793541323642625) NOTNULL) COLLATE NOCASE WHERE (CAST(((((t0.c50)AND(vt0.c0)))AND(vt0.c1)) AS INTEGER)) ORDER BY CAST(((vt0.c0) NOTNULL) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c50)AND(vt0.c0)))AND(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((('Q)')AND(vt0.c1)))OR(t0.c50 COLLATE NOCASE)) CROSS JOIN t0 ON ((0.004793541323642625) NOTNULL) COLLATE NOCASE ORDER BY CAST(((vt0.c0) NOTNULL) AS INTEGER) ASC);
SELECT * FROM vt0 CROSS JOIN vt1 ON (((('Q)')AND(vt0.c1)))OR(t0.c50 COLLATE NOCASE)) CROSS JOIN t0 ON ((0.004793541323642625) NOTNULL) COLLATE NOCASE WHERE (CAST(((((t0.c50)AND(vt0.c0)))AND(vt0.c1)) AS INTEGER)) ORDER BY CAST(((vt0.c0) NOTNULL) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c50)AND(vt0.c0)))AND(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((('Q)')AND(vt0.c1)))OR(t0.c50 COLLATE NOCASE)) CROSS JOIN t0 ON ((0.004793541323642625) NOTNULL) COLLATE NOCASE ORDER BY CAST(((vt0.c0) NOTNULL) AS INTEGER) ASC);
SELECT * FROM vt0 CROSS JOIN vt1 ON (((('Q)')AND(vt0.c1)))OR(t0.c50 COLLATE NOCASE)) CROSS JOIN t0 ON ((0.004793541323642625) NOTNULL) COLLATE NOCASE WHERE (CAST(((((t0.c50)AND(vt0.c0)))AND(vt0.c1)) AS INTEGER)) ORDER BY CAST(((vt0.c0) NOTNULL) AS INTEGER) ASC;
SELECT * FROM t0 WHERE (((((t0.c50)OR((t0.c50 IN ()))))AND(CASE WHEN t0.c20 THEN x'9318' WHEN t0.c50 THEN t0.c50 WHEN t0.c20 THEN t0.c20 ELSE t0.c20 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c50)OR((t0.c50 IN ()))))AND(CASE WHEN t0.c20 THEN x'9318' WHEN t0.c50 THEN t0.c50 WHEN t0.c20 THEN t0.c20 ELSE t0.c20 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c50)OR((t0.c50 IN ()))))AND(CASE WHEN t0.c20 THEN x'9318' WHEN t0.c50 THEN t0.c50 WHEN t0.c20 THEN t0.c20 ELSE t0.c20 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c50)OR((t0.c50 IN ()))))AND(CASE WHEN t0.c20 THEN x'9318' WHEN t0.c50 THEN t0.c50 WHEN t0.c20 THEN t0.c20 ELSE t0.c20 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c50)OR((t0.c50 IN ()))))AND(CASE WHEN t0.c20 THEN x'9318' WHEN t0.c50 THEN t0.c50 WHEN t0.c20 THEN t0.c20 ELSE t0.c20 END)));
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c0 IN ()))OR(HEX(vt0.c1))))AND(vt0.c0))) ORDER BY ((((NULL)AND(vt0.c0)))OR(CASE WHEN vt1.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))OR(HEX(vt0.c1))))AND(vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((NULL)AND(vt0.c0)))OR(CASE WHEN vt1.c0 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c0 IN ()))OR(HEX(vt0.c1))))AND(vt0.c0))) ORDER BY ((((NULL)AND(vt0.c0)))OR(CASE WHEN vt1.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))OR(HEX(vt0.c1))))AND(vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((NULL)AND(vt0.c0)))OR(CASE WHEN vt1.c0 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c0 IN ()))OR(HEX(vt0.c1))))AND(vt0.c0))) ORDER BY ((((NULL)AND(vt0.c0)))OR(CASE WHEN vt1.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT * FROM t0 INDEXED BY i2 WHERE (((NULL) ISNULL)) ORDER BY IFNULL(DISTINCT 0xffffffffc43b8145, t0.c50) ASC, json_patch(((((((((t0.c20)OR('')))AND(t0.c20)))AND(t0.c50)))AND(t0.c20)), CASE WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c20 ELSE t0.c50 END) DESC;
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM t0 INDEXED BY i2 ORDER BY IFNULL(DISTINCT 0Xffffffffc43b8145, t0.c50) ASC, json_patch(((((((((t0.c20)OR('')))AND(t0.c20)))AND(t0.c50)))AND(t0.c20)), CASE WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c20 ELSE t0.c50 END) DESC);
SELECT * FROM t0 INDEXED BY i2 WHERE (((NULL) ISNULL)) ORDER BY IFNULL(DISTINCT 0xffffffffc43b8145, t0.c50) ASC, json_patch(((((((((t0.c20)OR('')))AND(t0.c20)))AND(t0.c50)))AND(t0.c20)), CASE WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c20 ELSE t0.c50 END) DESC;
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM t0 INDEXED BY i2 ORDER BY IFNULL(DISTINCT 0Xffffffffc43b8145, t0.c50) ASC, json_patch(((((((((t0.c20)OR('')))AND(t0.c20)))AND(t0.c50)))AND(t0.c20)), CASE WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c50 WHEN t0.c50 THEN t0.c20 ELSE t0.c50 END) DESC);
SELECT * FROM vt1, vt0 WHERE (0Xffffffffa53aba83);
SELECT SUM(count) FROM (SELECT ((0xffffffffa53aba83) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (0Xffffffffa53aba83);
SELECT SUM(count) FROM (SELECT ((0xffffffffa53aba83) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (0Xffffffffa53aba83);
SELECT COUNT(*) FROM t0 WHERE (((0.4102475288255868)==(((((((((t0.c50)AND(t0.c50)))OR(t0.c50)))OR(t0.c50)))OR(t0.c20)))));
SELECT SUM(count) FROM (SELECT ((((0.4102475288255868)=(((((((((t0.c50)AND(t0.c50)))OR(t0.c50)))OR(t0.c50)))OR(t0.c20))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((0.4102475288255868)==(((((((((t0.c50)AND(t0.c50)))OR(t0.c50)))OR(t0.c50)))OR(t0.c20)))));
SELECT SUM(count) FROM (SELECT ((((0.4102475288255868)=(((((((((t0.c50)AND(t0.c50)))OR(t0.c50)))OR(t0.c50)))OR(t0.c20))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((0.4102475288255868)==(((((((((t0.c50)AND(t0.c50)))OR(t0.c50)))OR(t0.c50)))OR(t0.c20)))));
SELECT ALL * FROM vt0, vt1, t0 WHERE (MIN(HEX(t0.c50), ((vt1.c0) NOT NULL), ((((t0.c50)AND(t0.c50)))OR(vt1.c0)), ((t0.c20)<<(vt1.c0)))) ORDER BY COALESCE(((vt1.c0) NOT NULL), ((vt0.c0)==(vt0.c1)), ((vt1.c0)IS('g ')), ((((((((x'6ee35769')AND(t0.c50)))OR(t0.c20)))OR(t0.c50)))AND(t0.c20))) DESC;
SELECT SUM(count) FROM (SELECT ((MIN(HEX(t0.c50), ((vt1.c0) NOT NULL), ((((t0.c50)AND(t0.c50)))OR(vt1.c0)), ((t0.c20)<<(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY COALESCE(((vt1.c0) NOT NULL), ((vt0.c0)=(vt0.c1)), ((vt1.c0)IS('g ')), ((((((((x'6ee35769')AND(t0.c50)))OR(t0.c20)))OR(t0.c50)))AND(t0.c20))) DESC);
SELECT ALL * FROM vt0, vt1, t0 WHERE (MIN(HEX(t0.c50), ((vt1.c0) NOT NULL), ((((t0.c50)AND(t0.c50)))OR(vt1.c0)), ((t0.c20)<<(vt1.c0)))) ORDER BY COALESCE(((vt1.c0) NOT NULL), ((vt0.c0)==(vt0.c1)), ((vt1.c0)IS('g ')), ((((((((x'6ee35769')AND(t0.c50)))OR(t0.c20)))OR(t0.c50)))AND(t0.c20))) DESC;
SELECT SUM(count) FROM (SELECT ((MIN(HEX(t0.c50), ((vt1.c0) NOT NULL), ((((t0.c50)AND(t0.c50)))OR(vt1.c0)), ((t0.c20)<<(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY COALESCE(((vt1.c0) NOT NULL), ((vt0.c0)=(vt0.c1)), ((vt1.c0)IS('g ')), ((((((((x'6ee35769')AND(t0.c50)))OR(t0.c20)))OR(t0.c50)))AND(t0.c20))) DESC);
SELECT ALL * FROM vt0, vt1, t0 WHERE (MIN(HEX(t0.c50), ((vt1.c0) NOT NULL), ((((t0.c50)AND(t0.c50)))OR(vt1.c0)), ((t0.c20)<<(vt1.c0)))) ORDER BY COALESCE(((vt1.c0) NOT NULL), ((vt0.c0)==(vt0.c1)), ((vt1.c0)IS('g ')), ((((((((x'6ee35769')AND(t0.c50)))OR(t0.c20)))OR(t0.c50)))AND(t0.c20))) DESC;
SELECT * FROM t0 WHERE (0.2234901686486096);
SELECT SUM(count) FROM (SELECT ALL ((0.2234901686486096) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (0.2234901686486096);
SELECT SUM(count) FROM (SELECT ALL ((0.2234901686486096) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (0.2234901686486096);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT)) ORDER BY (((('-1522877821')OR(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC, ((CAST(vt1.c0 AS BLOB))IS NOT(((vt1.c0)LIKE(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY (((('-1522877821')OR(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC, ((CAST(vt1.c0 AS BLOB))IS NOT(((vt1.c0)LIKE(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT)) ORDER BY (((('-1522877821')OR(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC, ((CAST(vt1.c0 AS BLOB))IS NOT(((vt1.c0)LIKE(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY (((('-1522877821')OR(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC, ((CAST(vt1.c0 AS BLOB))IS NOT(((vt1.c0)LIKE(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT)) ORDER BY (((('-1522877821')OR(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC, ((CAST(vt1.c0 AS BLOB))IS NOT(((vt1.c0)LIKE(vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((vt0.c1, vt0.c1, vt1.c0))<=((vt0.c0, vt0.c0, t0.c20))))|(SQLITE_COMPILEOPTION_USED(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt0.c1, vt1.c0))<=((vt0.c0, vt0.c0, t0.c20))))|(SQLITE_COMPILEOPTION_USED(vt0.c0)))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((vt0.c1, vt0.c1, vt1.c0))<=((vt0.c0, vt0.c0, t0.c20))))|(SQLITE_COMPILEOPTION_USED(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt0.c1, vt1.c0))<=((vt0.c0, vt0.c0, t0.c20))))|(SQLITE_COMPILEOPTION_USED(vt0.c0)))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((vt0.c1, vt0.c1, vt1.c0))<=((vt0.c0, vt0.c0, t0.c20))))|(SQLITE_COMPILEOPTION_USED(vt0.c0))));
SELECT ALL * FROM t0 WHERE (((CAST(t0.c20 AS TEXT))%(((t0.c20) NOT BETWEEN (t0.c20) AND (1622416258)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c20 AS TEXT))%(((t0.c20) NOT BETWEEN (t0.c20) AND (1622416258))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c20 AS TEXT))%(((t0.c20) NOT BETWEEN (t0.c20) AND (1622416258)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c20 AS TEXT))%(((t0.c20) NOT BETWEEN (t0.c20) AND (1622416258))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c20 AS TEXT))%(((t0.c20) NOT BETWEEN (t0.c20) AND (1622416258)))));
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((((t0.c20 IN ()))AND(vt0.c0)))AND((NOT (vt1.c0))))) ORDER BY ((((('-536515997' IN ()))AND(((t0.c50) ISNULL))))OR(t0.c50)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c20 IN ()))AND(vt0.c0)))AND((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((('-536515997' IN ()))AND(((t0.c50) ISNULL))))OR(t0.c50)) ASC);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((((t0.c20 IN ()))AND(vt0.c0)))AND((NOT (vt1.c0))))) ORDER BY ((((('-536515997' IN ()))AND(((t0.c50) ISNULL))))OR(t0.c50)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c20 IN ()))AND(vt0.c0)))AND((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((('-536515997' IN ()))AND(((t0.c50) ISNULL))))OR(t0.c50)) ASC);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((((t0.c20 IN ()))AND(vt0.c0)))AND((NOT (vt1.c0))))) ORDER BY ((((('-536515997' IN ()))AND(((t0.c50) ISNULL))))OR(t0.c50)) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))/(vt0.c1 COLLATE BINARY))) ORDER BY CAST(x'bb39' AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))/(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY CAST(x'bb39' AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))/(vt0.c1 COLLATE BINARY))) ORDER BY CAST(x'bb39' AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))/(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY CAST(x'bb39' AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))/(vt0.c1 COLLATE BINARY))) ORDER BY CAST(x'bb39' AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (-2.01119784E8);
SELECT SUM(count) FROM (SELECT ALL ((-2.01119784E8) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (-2.01119784E8);
SELECT SUM(count) FROM (SELECT ALL ((-2.01119784E8) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (-2.01119784E8);
SELECT * FROM vt0 INNER JOIN t0 ON ((((vt0.c0 IN ())))<((t0.c50))) WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) ORDER BY t0.c20 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((vt0.c0 IN ())))<((t0.c50))) ORDER BY t0.c20 COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0 INNER JOIN t0 ON ((((vt0.c0 IN ())))<((t0.c50))) WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) ORDER BY t0.c20 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((vt0.c0 IN ())))<((t0.c50))) ORDER BY t0.c20 COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0 INNER JOIN t0 ON ((((vt0.c0 IN ())))<((t0.c50))) WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) ORDER BY t0.c20 COLLATE NOCASE  NULLS LAST;
SELECT * FROM vt0, t0, vt1 WHERE ((((vt1.c0))<=((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))) ORDER BY TRIM(0.46743679853065)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))<=((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY TRIM(0.46743679853065)  NULLS LAST);
SELECT * FROM vt0, t0, vt1 WHERE ((((vt1.c0))<=((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))) ORDER BY TRIM(0.46743679853065)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))<=((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY TRIM(0.46743679853065)  NULLS LAST);
SELECT * FROM vt0, t0, vt1 WHERE ((((vt1.c0))<=((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))) ORDER BY TRIM(0.46743679853065)  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c20)IS(t0.c50)))AND(CAST(t0.c20 AS NUMERIC))))OR((t0.c50 IN (t0.c50)))))AND((t0.c20 IN ()))))OR((t0.c50 IN ())))) ORDER BY LIKELIHOOD(0.2306447153405835, 0.9308897075016542);
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c20)IS(t0.c50)))AND(CAST(t0.c20 AS NUMERIC))))OR((t0.c50 IN (t0.c50)))))AND((t0.c20 IN ()))))OR((t0.c50 IN ())))) IS TRUE)  as count FROM t0 ORDER BY LIKELIHOOD(0.2306447153405835, 0.9308897075016542));
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c20)IS(t0.c50)))AND(CAST(t0.c20 AS NUMERIC))))OR((t0.c50 IN (t0.c50)))))AND((t0.c20 IN ()))))OR((t0.c50 IN ())))) ORDER BY LIKELIHOOD(0.2306447153405835, 0.9308897075016542);
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c20)IS(t0.c50)))AND(CAST(t0.c20 AS NUMERIC))))OR((t0.c50 IN (t0.c50)))))AND((t0.c20 IN ()))))OR((t0.c50 IN ())))) IS TRUE)  as count FROM t0 ORDER BY LIKELIHOOD(0.2306447153405835, 0.9308897075016542));
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c20)IS(t0.c50)))AND(CAST(t0.c20 AS NUMERIC))))OR((t0.c50 IN (t0.c50)))))AND((t0.c20 IN ()))))OR((t0.c50 IN ())))) ORDER BY LIKELIHOOD(0.2306447153405835, 0.9308897075016542);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c50)IS NOT(t0.c50)))/(NULL))) ORDER BY CASE WHEN LIKELY(DISTINCT t0.c20) THEN (((t0.c20))>=((t0.c50))) WHEN (NOT (t0.c20)) THEN (((t0.c20))<=((t0.c50))) WHEN (NOT (t0.c20)) THEN '-616222143' ELSE ((t0.c20) NOTNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c50)IS NOT(t0.c50)))/(NULL))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN LIKELY(DISTINCT t0.c20) THEN (((t0.c20))>=((t0.c50))) WHEN (NOT (t0.c20)) THEN (((t0.c20))<=((t0.c50))) WHEN (NOT (t0.c20)) THEN '-616222143' ELSE ((t0.c20) NOTNULL) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c50)IS NOT(t0.c50)))/(NULL))) ORDER BY CASE WHEN LIKELY(DISTINCT t0.c20) THEN (((t0.c20))>=((t0.c50))) WHEN (NOT (t0.c20)) THEN (((t0.c20))<=((t0.c50))) WHEN (NOT (t0.c20)) THEN '-616222143' ELSE ((t0.c20) NOTNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c50)IS NOT(t0.c50)))/(NULL))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN LIKELY(DISTINCT t0.c20) THEN (((t0.c20))>=((t0.c50))) WHEN (NOT (t0.c20)) THEN (((t0.c20))<=((t0.c50))) WHEN (NOT (t0.c20)) THEN '-616222143' ELSE ((t0.c20) NOTNULL) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c50)IS NOT(t0.c50)))/(NULL))) ORDER BY CASE WHEN LIKELY(DISTINCT t0.c20) THEN (((t0.c20))>=((t0.c50))) WHEN (NOT (t0.c20)) THEN (((t0.c20))<=((t0.c50))) WHEN (NOT (t0.c20)) THEN '-616222143' ELSE ((t0.c20) NOTNULL) END  NULLS LAST;
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((+ (QUOTE(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((+ (QUOTE(vt0.c1)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((+ (QUOTE(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((+ (QUOTE(vt0.c1)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((+ (QUOTE(vt0.c1))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c0)AND(t0.c50 COLLATE NOCASE)))AND(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(t0.c50 COLLATE NOCASE)))AND(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c0)AND(t0.c50 COLLATE NOCASE)))AND(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(t0.c50 COLLATE NOCASE)))AND(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c0)AND(t0.c50 COLLATE NOCASE)))AND(vt1.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY (((((((vt0.c0))<>((vt1.c0))))AND(((vt1.c0) IS FALSE))))OR('閠g' COLLATE BINARY)) DESC, (- (((vt0.c0)&(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((vt0.c0))<>((vt1.c0))))AND(((vt1.c0) IS FALSE))))OR('閠g' COLLATE BINARY)) DESC, (- (((vt0.c0)&(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY (((((((vt0.c0))<>((vt1.c0))))AND(((vt1.c0) IS FALSE))))OR('閠g' COLLATE BINARY)) DESC, (- (((vt0.c0)&(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((vt0.c0))<>((vt1.c0))))AND(((vt1.c0) IS FALSE))))OR('閠g' COLLATE BINARY)) DESC, (- (((vt0.c0)&(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY (((((((vt0.c0))<>((vt1.c0))))AND(((vt1.c0) IS FALSE))))OR('閠g' COLLATE BINARY)) DESC, (- (((vt0.c0)&(vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (UPPER(DISTINCT (~ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (~ (vt1.c0)))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (UPPER(DISTINCT (~ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (~ (vt1.c0)))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (UPPER(DISTINCT (~ (vt1.c0))));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt0.c0) BETWEEN (NULL) AND (vt0.c1))) NOT BETWEEN (((t0.c20) NOT BETWEEN (t0.c20) AND (t0.c20))) AND (vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (NULL) AND (vt0.c1))) NOT BETWEEN (((t0.c20) NOT BETWEEN (t0.c20) AND (t0.c20))) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt0.c0) BETWEEN (NULL) AND (vt0.c1))) NOT BETWEEN (((t0.c20) NOT BETWEEN (t0.c20) AND (t0.c20))) AND (vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (NULL) AND (vt0.c1))) NOT BETWEEN (((t0.c20) NOT BETWEEN (t0.c20) AND (t0.c20))) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt0.c0) BETWEEN (NULL) AND (vt0.c1))) NOT BETWEEN (((t0.c20) NOT BETWEEN (t0.c20) AND (t0.c20))) AND (vt0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN json_quote(x'') THEN COALESCE(DISTINCT vt0.c0, vt0.c0) ELSE CAST(vt0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN json_quote(x'') THEN COALESCE(DISTINCT vt0.c0, vt0.c0) ELSE CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN json_quote(x'') THEN COALESCE(DISTINCT vt0.c0, vt0.c0) ELSE CAST(vt0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN json_quote(x'') THEN COALESCE(DISTINCT vt0.c0, vt0.c0) ELSE CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN json_quote(x'') THEN COALESCE(DISTINCT vt0.c0, vt0.c0) ELSE CAST(vt0.c0 AS NUMERIC) END);
SELECT * FROM vt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (x'');
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(((vt0.c1)>=(vt0.c1)), LIKELY(DISTINCT vt0.c0))) ORDER BY LOWER(DISTINCT (~ (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((IFNULL(((vt0.c1)>=(vt0.c1)), LIKELY(DISTINCT vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY LOWER(DISTINCT (~ (vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(((vt0.c1)>=(vt0.c1)), LIKELY(DISTINCT vt0.c0))) ORDER BY LOWER(DISTINCT (~ (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((IFNULL(((vt0.c1)>=(vt0.c1)), LIKELY(DISTINCT vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY LOWER(DISTINCT (~ (vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(((vt0.c1)>=(vt0.c1)), LIKELY(DISTINCT vt0.c0))) ORDER BY LOWER(DISTINCT (~ (vt0.c1)));
SELECT ALL COUNT(*) FROM t0 WHERE (((-694861604)&(CAST(0.42812229140177427 AS NUMERIC)))) ORDER BY t0.c20 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((-694861604)&(CAST(0.42812229140177427 AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY t0.c20 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 WHERE (((-694861604)&(CAST(0.42812229140177427 AS NUMERIC)))) ORDER BY t0.c20 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((-694861604)&(CAST(0.42812229140177427 AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY t0.c20 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 WHERE (((-694861604)&(CAST(0.42812229140177427 AS NUMERIC)))) ORDER BY t0.c20 COLLATE NOCASE;
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ ((vt1.c0 IN ())))) ORDER BY vt1.c0 COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ ((vt1.c0 IN ())))) ORDER BY vt1.c0 COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ ((vt1.c0 IN ())))) ORDER BY vt1.c0 COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE ('-1910473810') ORDER BY (~ (((vt0.c1) BETWEEN (t0.c50) AND (t0.c50))));
SELECT SUM(count) FROM (SELECT ALL (('-1910473810') IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (((vt0.c1) BETWEEN (t0.c50) AND (t0.c50)))));
SELECT ALL * FROM t0, vt0 WHERE ('-1910473810') ORDER BY (~ (((vt0.c1) BETWEEN (t0.c50) AND (t0.c50))));
SELECT SUM(count) FROM (SELECT ALL (('-1910473810') IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (((vt0.c1) BETWEEN (t0.c50) AND (t0.c50)))));
SELECT ALL * FROM t0, vt0 WHERE ('-1910473810') ORDER BY (~ (((vt0.c1) BETWEEN (t0.c50) AND (t0.c50))));
SELECT ALL * FROM vt0 WHERE (((vt0.c1)>(vt0.c1)) COLLATE NOCASE) ORDER BY (vt0.c1 COLLATE BINARY IN (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 COLLATE BINARY IN (vt0.c0)) ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)>(vt0.c1)) COLLATE NOCASE) ORDER BY (vt0.c1 COLLATE BINARY IN (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 COLLATE BINARY IN (vt0.c0)) ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)>(vt0.c1)) COLLATE NOCASE) ORDER BY (vt0.c1 COLLATE BINARY IN (vt0.c0)) ASC;
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY vt0.c0 DESC;
SELECT ALL * FROM t0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((+ (NULL)));
SELECT * FROM vt1, t0 WHERE (UPPER(((t0.c50)=(t0.c20))));
SELECT SUM(count) FROM (SELECT ((UPPER(((t0.c50)=(t0.c20)))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (UPPER(((t0.c50)=(t0.c20))));
SELECT SUM(count) FROM (SELECT ((UPPER(((t0.c50)=(t0.c20)))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (UPPER(((t0.c50)=(t0.c20))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((((((((('0.5189402320317449')OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))AND(t0.c20)))/((((vt0.c1))>=((vt1.c0))))) CROSS JOIN vt1 ON ((CAST(t0.c50 AS BLOB))IS(UPPER(vt0.c0))) WHERE ((((t0.c50)GLOB(t0.c20)) IN (CAST(t0.c50 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c50)GLOB(t0.c20)) IN (CAST(t0.c50 AS NUMERIC)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((((((((('0.5189402320317449')OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))AND(t0.c20)))/((((vt0.c1))>=((vt1.c0))))) CROSS JOIN vt1 ON ((CAST(t0.c50 AS BLOB))IS(UPPER(vt0.c0))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((((((((('0.5189402320317449')OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))AND(t0.c20)))/((((vt0.c1))>=((vt1.c0))))) CROSS JOIN vt1 ON ((CAST(t0.c50 AS BLOB))IS(UPPER(vt0.c0))) WHERE ((((t0.c50)GLOB(t0.c20)) IN (CAST(t0.c50 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c50)GLOB(t0.c20)) IN (CAST(t0.c50 AS NUMERIC)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((((((((('0.5189402320317449')OR(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))AND(t0.c20)))/((((vt0.c1))>=((vt1.c0))))) CROSS JOIN vt1 ON ((CAST(t0.c50 AS BLOB))IS(UPPER(vt0.c0))));
SELECT * FROM vt1 WHERE (json_quote(vt1.c0) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((json_quote(vt1.c0) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (json_quote(vt1.c0) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((json_quote(vt1.c0) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c1))) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (((LOWER(vt1.c0)) NOT BETWEEN ((NOT ('355804888'))) AND (vt1.c0 COLLATE RTRIM))) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN 0X60c99948 END AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt1.c0)) NOT BETWEEN ((NOT ('355804888'))) AND (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN 0x60c99948 END AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((LOWER(vt1.c0)) NOT BETWEEN ((NOT ('355804888'))) AND (vt1.c0 COLLATE RTRIM))) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN 0X60c99948 END AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt1.c0)) NOT BETWEEN ((NOT ('355804888'))) AND (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN 0x60c99948 END AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((LOWER(vt1.c0)) NOT BETWEEN ((NOT ('355804888'))) AND (vt1.c0 COLLATE RTRIM))) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN 0X60c99948 END AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c50 IN (t0.c50))))<>((((t0.c20) ISNULL))))) ORDER BY ((((((487606061) NOT NULL))AND(((((t0.c20)AND(t0.c50)))OR(t0.c50)))))AND((~ (t0.c50))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c50 IN (t0.c50))))!=((((t0.c20) ISNULL))))) IS TRUE)  as count FROM t0 ORDER BY ((((((487606061) NOT NULL))AND(((((t0.c20)AND(t0.c50)))OR(t0.c50)))))AND((~ (t0.c50))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c50 IN (t0.c50))))<>((((t0.c20) ISNULL))))) ORDER BY ((((((487606061) NOT NULL))AND(((((t0.c20)AND(t0.c50)))OR(t0.c50)))))AND((~ (t0.c50))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c50 IN (t0.c50))))!=((((t0.c20) ISNULL))))) IS TRUE)  as count FROM t0 ORDER BY ((((((487606061) NOT NULL))AND(((((t0.c20)AND(t0.c50)))OR(t0.c50)))))AND((~ (t0.c50))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c50 IN (t0.c50))))<>((((t0.c20) ISNULL))))) ORDER BY ((((((487606061) NOT NULL))AND(((((t0.c20)AND(t0.c50)))OR(t0.c50)))))AND((~ (t0.c50))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c20);
SELECT SUM(count) FROM (SELECT ((t0.c20) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c20);
SELECT SUM(count) FROM (SELECT ((t0.c20) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c20);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON x'ca62' WHERE (((t0.c50)LIKE(vt0.c0)) COLLATE RTRIM) ORDER BY -2.083553424E9 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c50)LIKE(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON x'ca62' ORDER BY -2.083553424E9 DESC  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON x'ca62' WHERE (((t0.c50)LIKE(vt0.c0)) COLLATE RTRIM) ORDER BY -2.083553424E9 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c50)LIKE(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON x'ca62' ORDER BY -2.083553424E9 DESC  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON x'ca62' WHERE (((t0.c50)LIKE(vt0.c0)) COLLATE RTRIM) ORDER BY -2.083553424E9 DESC  NULLS LAST;
SELECT * FROM t0, vt1 WHERE (CAST(((t0.c50) BETWEEN (t0.c20) AND (vt1.c0)) AS TEXT)) ORDER BY CAST(t0.c50 COLLATE NOCASE AS REAL) DESC, CASE CASE WHEN 0.2521697118704469 THEN t0.c50 END  WHEN x'' THEN ((t0.c50)<(t0.c50)) END  NULLS FIRST, ((t0.c50 COLLATE RTRIM) BETWEEN (((((vt1.c0)AND(t0.c50)))AND(t0.c20))) AND (CAST(t0.c50 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c50) BETWEEN (t0.c20) AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(t0.c50 COLLATE NOCASE AS REAL) DESC, CASE CASE WHEN 0.2521697118704469 THEN t0.c50 END  WHEN x'' THEN ((t0.c50)<(t0.c50)) END  NULLS FIRST, ((t0.c50 COLLATE RTRIM) BETWEEN (((((vt1.c0)AND(t0.c50)))AND(t0.c20))) AND (CAST(t0.c50 AS REAL))) DESC  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (CAST(((t0.c50) BETWEEN (t0.c20) AND (vt1.c0)) AS TEXT)) ORDER BY CAST(t0.c50 COLLATE NOCASE AS REAL) DESC, CASE CASE WHEN 0.2521697118704469 THEN t0.c50 END  WHEN x'' THEN ((t0.c50)<(t0.c50)) END  NULLS FIRST, ((t0.c50 COLLATE RTRIM) BETWEEN (((((vt1.c0)AND(t0.c50)))AND(t0.c20))) AND (CAST(t0.c50 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c50) BETWEEN (t0.c20) AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(t0.c50 COLLATE NOCASE AS REAL) DESC, CASE CASE WHEN 0.2521697118704469 THEN t0.c50 END  WHEN x'' THEN ((t0.c50)<(t0.c50)) END  NULLS FIRST, ((t0.c50 COLLATE RTRIM) BETWEEN (((((vt1.c0)AND(t0.c50)))AND(t0.c20))) AND (CAST(t0.c50 AS REAL))) DESC  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (CAST(((t0.c50) BETWEEN (t0.c20) AND (vt1.c0)) AS TEXT)) ORDER BY CAST(t0.c50 COLLATE NOCASE AS REAL) DESC, CASE CASE WHEN 0.2521697118704469 THEN t0.c50 END  WHEN x'' THEN ((t0.c50)<(t0.c50)) END  NULLS FIRST, ((t0.c50 COLLATE RTRIM) BETWEEN (((((vt1.c0)AND(t0.c50)))AND(t0.c20))) AND (CAST(t0.c50 AS REAL))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c1 THEN (NOT (vt0.c1)) ELSE ((vt0.c0)OR(vt0.c0)) END) ORDER BY ((vt0.c0 COLLATE NOCASE) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN (NOT (vt0.c1)) ELSE ((vt0.c0)OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) IS TRUE));
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c1 THEN (NOT (vt0.c1)) ELSE ((vt0.c0)OR(vt0.c0)) END) ORDER BY ((vt0.c0 COLLATE NOCASE) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN (NOT (vt0.c1)) ELSE ((vt0.c0)OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) IS TRUE));
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c1 THEN (NOT (vt0.c1)) ELSE ((vt0.c0)OR(vt0.c0)) END) ORDER BY ((vt0.c0 COLLATE NOCASE) IS TRUE);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)>>(((('', vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)IS(CAST(x'ae0d' AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)>>(((('', vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)IS(CAST(x'ae0d' AS BLOB)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)>>(((('', vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)IS(CAST(x'ae0d' AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)>>(((('', vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)IS(CAST(x'ae0d' AS BLOB)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)>>(((('', vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)IS(CAST(x'ae0d' AS BLOB)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (t0.c20) ORDER BY ((CASE WHEN vt0.c0 THEN vt1.c0 END) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c20) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt1.c0 END) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (t0.c20) ORDER BY ((CASE WHEN vt0.c0 THEN vt1.c0 END) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c20) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt1.c0 END) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (t0.c20) ORDER BY ((CASE WHEN vt0.c0 THEN vt1.c0 END) NOT NULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((STRFTIME(vt0.c1, vt0.c0, vt0.c1, vt1.c0, vt0.c0))AND(CASE WHEN vt0.c0 THEN t0.c20 END)))OR(((t0.c20) NOT NULL)))) ORDER BY CAST((((vt0.c0)) NOT BETWEEN (('hC')) AND ((t0.c50))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((STRFTIME(vt0.c1, vt0.c0, vt0.c1, vt1.c0, vt0.c0))AND(CASE WHEN vt0.c0 THEN t0.c20 END)))OR(((t0.c20) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CAST((((vt0.c0)) NOT BETWEEN (('hC')) AND ((t0.c50))) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((STRFTIME(vt0.c1, vt0.c0, vt0.c1, vt1.c0, vt0.c0))AND(CASE WHEN vt0.c0 THEN t0.c20 END)))OR(((t0.c20) NOT NULL)))) ORDER BY CAST((((vt0.c0)) NOT BETWEEN (('hC')) AND ((t0.c50))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((STRFTIME(vt0.c1, vt0.c0, vt0.c1, vt1.c0, vt0.c0))AND(CASE WHEN vt0.c0 THEN t0.c20 END)))OR(((t0.c20) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CAST((((vt0.c0)) NOT BETWEEN (('hC')) AND ((t0.c50))) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((STRFTIME(vt0.c1, vt0.c0, vt0.c1, vt1.c0, vt0.c0))AND(CASE WHEN vt0.c0 THEN t0.c20 END)))OR(((t0.c20) NOT NULL)))) ORDER BY CAST((((vt0.c0)) NOT BETWEEN (('hC')) AND ((t0.c50))) AS NUMERIC);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (x'');
SELECT * FROM vt1, vt0, t0 WHERE (((NOT (t0.c20)) IN ())) ORDER BY LIKELIHOOD(DISTINCT t0.c20 COLLATE NOCASE, 0.21080067763165566) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (t0.c20)) IN ())) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY LIKELIHOOD(DISTINCT t0.c20 COLLATE NOCASE, 0.21080067763165566) ASC  NULLS LAST);
SELECT * FROM vt1, vt0, t0 WHERE (((NOT (t0.c20)) IN ())) ORDER BY LIKELIHOOD(DISTINCT t0.c20 COLLATE NOCASE, 0.21080067763165566) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (t0.c20)) IN ())) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY LIKELIHOOD(DISTINCT t0.c20 COLLATE NOCASE, 0.21080067763165566) ASC  NULLS LAST);
SELECT * FROM vt1, vt0, t0 WHERE (((NOT (t0.c20)) IN ())) ORDER BY LIKELIHOOD(DISTINCT t0.c20 COLLATE NOCASE, 0.21080067763165566) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CASE ((((((((t0.c20)OR(0.28000779470721204)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c20))  WHEN ((0.3900305964684384)%(vt0.c0)) THEN ((vt0.c0)LIKE(vt1.c0)) END) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((t0.c20)OR(0.28000779470721204)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c20))  WHEN ((0.3900305964684384)%(vt0.c0)) THEN ((vt0.c0)LIKE(vt1.c0)) END) IS TRUE)  as count FROM t0, vt1, vt0 NOT INDEXED ORDER BY vt0.c0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CASE ((((((((t0.c20)OR(0.28000779470721204)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c20))  WHEN ((0.3900305964684384)%(vt0.c0)) THEN ((vt0.c0)LIKE(vt1.c0)) END) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((t0.c20)OR(0.28000779470721204)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c20))  WHEN ((0.3900305964684384)%(vt0.c0)) THEN ((vt0.c0)LIKE(vt1.c0)) END) IS TRUE)  as count FROM t0, vt1, vt0 NOT INDEXED ORDER BY vt0.c0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CASE ((((((((t0.c20)OR(0.28000779470721204)))OR(vt0.c0)))OR(vt0.c0)))OR(t0.c20))  WHEN ((0.3900305964684384)%(vt0.c0)) THEN ((vt0.c0)LIKE(vt1.c0)) END) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM vt1 WHERE (UNLIKELY((- (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY((- (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (UNLIKELY((- (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY((- (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (UNLIKELY((- (vt1.c0))));
SELECT * FROM vt1 INDEXED BY i2 WHERE (vt1.c0) ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)) AND ((((vt1.c0)<=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 INDEXED BY i2 ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)) AND ((((vt1.c0)<=(vt1.c0))))));
SELECT * FROM vt1 INDEXED BY i2 WHERE (vt1.c0) ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)) AND ((((vt1.c0)<=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 INDEXED BY i2 ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)) AND ((((vt1.c0)<=(vt1.c0))))));
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN t0 ON t0.c20 WHERE ((~ ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON t0.c20);
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN t0 ON t0.c20 WHERE ((~ ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON t0.c20);
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN t0 ON t0.c20 WHERE ((~ ((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((CAST(vt0.c0 AS TEXT), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), ((((0.4471614763976739)OR(vt1.c0)))AND(vt0.c1)), ((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)), 'NCxk'''))<=(((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)IS(vt1.c0)), '', CASE WHEN vt0.c1 THEN vt0.c0 END, (vt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS TEXT), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), ((((0.4471614763976739)OR(vt1.c0)))AND(vt0.c1)), ((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)), 'NCxk'''))<=(((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)IS(vt1.c0)), '', CASE WHEN vt0.c1 THEN vt0.c0 END, (vt0.c1 IN ()))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((CAST(vt0.c0 AS TEXT), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), ((((0.4471614763976739)OR(vt1.c0)))AND(vt0.c1)), ((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)), 'NCxk'''))<=(((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)IS(vt1.c0)), '', CASE WHEN vt0.c1 THEN vt0.c0 END, (vt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS TEXT), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), ((((0.4471614763976739)OR(vt1.c0)))AND(vt0.c1)), ((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)), 'NCxk'''))<=(((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)IS(vt1.c0)), '', CASE WHEN vt0.c1 THEN vt0.c0 END, (vt0.c1 IN ()))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((CAST(vt0.c0 AS TEXT), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), ((((0.4471614763976739)OR(vt1.c0)))AND(vt0.c1)), ((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)), 'NCxk'''))<=(((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)IS(vt1.c0)), '', CASE WHEN vt0.c1 THEN vt0.c0 END, (vt0.c1 IN ())))));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((t0.c20)==(t0.c20)) COLLATE NOCASE) ORDER BY CASE ((vt0.c1) IS TRUE)  WHEN (((vt1.c0))<=((vt0.c1))) THEN vt0.c1 COLLATE NOCASE ELSE (((t0.c50)) NOT BETWEEN ((vt0.c1)) AND ((t0.c50))) END, NULLIF(DISTINCT ((((t0.c50)OR(0.7838997191559073)))AND(t0.c20)), (- (t0.c20))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c20)=(t0.c20)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CASE ((vt0.c1) IS TRUE)  WHEN (((vt1.c0))<=((vt0.c1))) THEN vt0.c1 COLLATE NOCASE ELSE (((t0.c50)) NOT BETWEEN ((vt0.c1)) AND ((t0.c50))) END, NULLIF(DISTINCT ((((t0.c50)OR(0.7838997191559073)))AND(t0.c20)), (- (t0.c20))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((t0.c20)==(t0.c20)) COLLATE NOCASE) ORDER BY CASE ((vt0.c1) IS TRUE)  WHEN (((vt1.c0))<=((vt0.c1))) THEN vt0.c1 COLLATE NOCASE ELSE (((t0.c50)) NOT BETWEEN ((vt0.c1)) AND ((t0.c50))) END, NULLIF(DISTINCT ((((t0.c50)OR(0.7838997191559073)))AND(t0.c20)), (- (t0.c20))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c20)=(t0.c20)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CASE ((vt0.c1) IS TRUE)  WHEN (((vt1.c0))<=((vt0.c1))) THEN vt0.c1 COLLATE NOCASE ELSE (((t0.c50)) NOT BETWEEN ((vt0.c1)) AND ((t0.c50))) END, NULLIF(DISTINCT ((((t0.c50)OR(0.7838997191559073)))AND(t0.c20)), (- (t0.c20))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((t0.c20)==(t0.c20)) COLLATE NOCASE) ORDER BY CASE ((vt0.c1) IS TRUE)  WHEN (((vt1.c0))<=((vt0.c1))) THEN vt0.c1 COLLATE NOCASE ELSE (((t0.c50)) NOT BETWEEN ((vt0.c1)) AND ((t0.c50))) END, NULLIF(DISTINCT ((((t0.c50)OR(0.7838997191559073)))AND(t0.c20)), (- (t0.c20))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (CASE t0.c20  WHEN t0.c50 THEN t0.c20 ELSE t0.c50 END COLLATE NOCASE) ORDER BY CASE WHEN (t0.c20 IN ()) THEN t0.c20 WHEN t0.c20 THEN ((t0.c20)==(t0.c50)) WHEN ((t0.c20)<<(t0.c50)) THEN (NOT (t0.c20)) WHEN x'' THEN CASE WHEN t0.c20 THEN t0.c20 END WHEN LTRIM(t0.c20) THEN (((t0.c20)) BETWEEN ((t0.c50)) AND ((t0.c20))) ELSE ((x'')-(x'')) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c20  WHEN t0.c50 THEN t0.c20 ELSE t0.c50 END COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (t0.c20 IN ()) THEN t0.c20 WHEN t0.c20 THEN ((t0.c20)=(t0.c50)) WHEN ((t0.c20)<<(t0.c50)) THEN (NOT (t0.c20)) WHEN x'' THEN CASE WHEN t0.c20 THEN t0.c20 END WHEN LTRIM(t0.c20) THEN (((t0.c20)) BETWEEN ((t0.c50)) AND ((t0.c20))) ELSE ((x'')-(x'')) END DESC);
SELECT * FROM t0 WHERE (CASE t0.c20  WHEN t0.c50 THEN t0.c20 ELSE t0.c50 END COLLATE NOCASE) ORDER BY CASE WHEN (t0.c20 IN ()) THEN t0.c20 WHEN t0.c20 THEN ((t0.c20)==(t0.c50)) WHEN ((t0.c20)<<(t0.c50)) THEN (NOT (t0.c20)) WHEN x'' THEN CASE WHEN t0.c20 THEN t0.c20 END WHEN LTRIM(t0.c20) THEN (((t0.c20)) BETWEEN ((t0.c50)) AND ((t0.c20))) ELSE ((x'')-(x'')) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c20  WHEN t0.c50 THEN t0.c20 ELSE t0.c50 END COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (t0.c20 IN ()) THEN t0.c20 WHEN t0.c20 THEN ((t0.c20)=(t0.c50)) WHEN ((t0.c20)<<(t0.c50)) THEN (NOT (t0.c20)) WHEN x'' THEN CASE WHEN t0.c20 THEN t0.c20 END WHEN LTRIM(t0.c20) THEN (((t0.c20)) BETWEEN ((t0.c50)) AND ((t0.c20))) ELSE ((x'')-(x'')) END DESC);
SELECT * FROM t0 WHERE (CASE t0.c20  WHEN t0.c50 THEN t0.c20 ELSE t0.c50 END COLLATE NOCASE) ORDER BY CASE WHEN (t0.c20 IN ()) THEN t0.c20 WHEN t0.c20 THEN ((t0.c20)==(t0.c50)) WHEN ((t0.c20)<<(t0.c50)) THEN (NOT (t0.c20)) WHEN x'' THEN CASE WHEN t0.c20 THEN t0.c20 END WHEN LTRIM(t0.c20) THEN (((t0.c20)) BETWEEN ((t0.c50)) AND ((t0.c20))) ELSE ((x'')-(x'')) END DESC;
SELECT COUNT(*) FROM vt1 WHERE ((('-1749297788') NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0)<<(vt1.c0))))) ORDER BY (((x'' IN ())) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (vt1.c0))  NULLS FIRST, vt1.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((('-1749297788') NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0)<<(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((x'' IN ())) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (vt1.c0))  NULLS FIRST, vt1.c0 COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE ((('-1749297788') NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0)<<(vt1.c0))))) ORDER BY (((x'' IN ())) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (vt1.c0))  NULLS FIRST, vt1.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((('-1749297788') NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0)<<(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((x'' IN ())) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (vt1.c0))  NULLS FIRST, vt1.c0 COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE ((('-1749297788') NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0)<<(vt1.c0))))) ORDER BY (((x'' IN ())) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (vt1.c0))  NULLS FIRST, vt1.c0 COLLATE RTRIM;
SELECT ALL * FROM t0 WHERE ((~ ((((t0.c50)) NOT BETWEEN ((t0.c20)) AND ((t0.c50))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t0.c50)) NOT BETWEEN ((t0.c20)) AND ((t0.c50)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ ((((t0.c50)) NOT BETWEEN ((t0.c20)) AND ((t0.c50))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t0.c50)) NOT BETWEEN ((t0.c20)) AND ((t0.c50)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ ((((t0.c50)) NOT BETWEEN ((t0.c20)) AND ((t0.c50))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN NULL THEN (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) WHEN CAST(vt0.c1 AS BLOB) THEN vt0.c0 COLLATE RTRIM WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((1789739532))) THEN ((vt0.c1) IS FALSE) END) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) WHEN CAST(vt0.c1 AS BLOB) THEN vt0.c0 COLLATE RTRIM WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((1789739532))) THEN ((vt0.c1) IS FALSE) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY x'' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN NULL THEN (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) WHEN CAST(vt0.c1 AS BLOB) THEN vt0.c0 COLLATE RTRIM WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((1789739532))) THEN ((vt0.c1) IS FALSE) END) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) WHEN CAST(vt0.c1 AS BLOB) THEN vt0.c0 COLLATE RTRIM WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((1789739532))) THEN ((vt0.c1) IS FALSE) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY x'' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN NULL THEN (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) WHEN CAST(vt0.c1 AS BLOB) THEN vt0.c0 COLLATE RTRIM WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((1789739532))) THEN ((vt0.c1) IS FALSE) END) ORDER BY x'' DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CAST((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, x'')) AND ((vt0.c1, vt0.c0, vt0.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, x'')) AND ((vt0.c1, vt0.c0, vt0.c1))) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, x'')) AND ((vt0.c1, vt0.c0, vt0.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, x'')) AND ((vt0.c1, vt0.c0, vt0.c1))) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, x'')) AND ((vt0.c1, vt0.c0, vt0.c1))) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (UPPER(((NULL) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((NULL) IS TRUE))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (UPPER(((NULL) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((NULL) IS TRUE))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (UPPER(((NULL) IS TRUE)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0)||(vt1.c0))))) ORDER BY NULLIF((('-356163029') IS FALSE), LOWER(vt1.c0))  NULLS LAST, (vt1.c0 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0)||(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY NULLIF((('-356163029') IS FALSE), LOWER(vt1.c0))  NULLS LAST, (vt1.c0 IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0)||(vt1.c0))))) ORDER BY NULLIF((('-356163029') IS FALSE), LOWER(vt1.c0))  NULLS LAST, (vt1.c0 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0)||(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY NULLIF((('-356163029') IS FALSE), LOWER(vt1.c0))  NULLS LAST, (vt1.c0 IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0)||(vt1.c0))))) ORDER BY NULLIF((('-356163029') IS FALSE), LOWER(vt1.c0))  NULLS LAST, (vt1.c0 IN ()) DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE (((CAST(vt0.c1 AS REAL))>(NULLIF(vt0.c0, '吅y')))) ORDER BY (((((vt0.c1)<=(t0.c50))))<=((vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL))>(NULLIF(vt0.c0, '吅y')))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((vt0.c1)<=(t0.c50))))<=((vt0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CAST(vt0.c1 AS REAL))>(NULLIF(vt0.c0, '吅y')))) ORDER BY (((((vt0.c1)<=(t0.c50))))<=((vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL))>(NULLIF(vt0.c0, '吅y')))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((vt0.c1)<=(t0.c50))))<=((vt0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CAST(vt0.c1 AS REAL))>(NULLIF(vt0.c0, '吅y')))) ORDER BY (((((vt0.c1)<=(t0.c50))))<=((vt0.c0))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c20) ISNULL) AS TEXT)) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c20) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c1 ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c20) ISNULL) AS TEXT)) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c20) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c1 ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c20) ISNULL) AS TEXT)) ORDER BY vt0.c1 ASC;
SELECT ALL * FROM vt0, t0 WHERE (((CAST(t0.c50 AS REAL))|(CAST(0.6226231279273864 AS INTEGER)))) ORDER BY 0.8208688026095109  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c50 AS REAL))|(CAST(0.6226231279273864 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.8208688026095109  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((CAST(t0.c50 AS REAL))|(CAST(0.6226231279273864 AS INTEGER)))) ORDER BY 0.8208688026095109  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c50 AS REAL))|(CAST(0.6226231279273864 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.8208688026095109  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((CAST(t0.c50 AS REAL))|(CAST(0.6226231279273864 AS INTEGER)))) ORDER BY 0.8208688026095109  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c20 COLLATE NOCASE) NOT NULL)) ORDER BY ((CAST(t0.c50 AS NUMERIC))%(t0.c50 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((t0.c20 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c50 AS NUMERIC))%(t0.c50 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c20 COLLATE NOCASE) NOT NULL)) ORDER BY ((CAST(t0.c50 AS NUMERIC))%(t0.c50 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((t0.c20 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c50 AS NUMERIC))%(t0.c50 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c20 COLLATE NOCASE) NOT NULL)) ORDER BY ((CAST(t0.c50 AS NUMERIC))%(t0.c50 COLLATE BINARY));
SELECT COUNT(*) FROM t0 WHERE (CASE CAST(t0.c50 AS NUMERIC)  WHEN ((((((((t0.c50)OR(t0.c20)))OR(t0.c50)))AND(t0.c20)))AND(t0.c50)) THEN CAST(t0.c50 AS REAL) END) ORDER BY CASE ((t0.c50) BETWEEN (0Xffffffffaed9d250) AND (t0.c50))  WHEN LIKELIHOOD(DISTINCT t0.c20, 0.379686514011489) THEN (((t0.c50))<((t0.c20))) END  NULLS FIRST, (- ('a')), (((NOT (t0.c20)))<(t0.c50 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c50 AS NUMERIC)  WHEN ((((((((t0.c50)OR(t0.c20)))OR(t0.c50)))AND(t0.c20)))AND(t0.c50)) THEN CAST(t0.c50 AS REAL) END) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c50) BETWEEN (0xffffffffaed9d250) AND (t0.c50))  WHEN LIKELIHOOD(DISTINCT t0.c20, 0.379686514011489) THEN (((t0.c50))<((t0.c20))) END  NULLS FIRST, (- ('a')), (((NOT (t0.c20)))<(t0.c50 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE CAST(t0.c50 AS NUMERIC)  WHEN ((((((((t0.c50)OR(t0.c20)))OR(t0.c50)))AND(t0.c20)))AND(t0.c50)) THEN CAST(t0.c50 AS REAL) END) ORDER BY CASE ((t0.c50) BETWEEN (0Xffffffffaed9d250) AND (t0.c50))  WHEN LIKELIHOOD(DISTINCT t0.c20, 0.379686514011489) THEN (((t0.c50))<((t0.c20))) END  NULLS FIRST, (- ('a')), (((NOT (t0.c20)))<(t0.c50 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c50 AS NUMERIC)  WHEN ((((((((t0.c50)OR(t0.c20)))OR(t0.c50)))AND(t0.c20)))AND(t0.c50)) THEN CAST(t0.c50 AS REAL) END) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c50) BETWEEN (0xffffffffaed9d250) AND (t0.c50))  WHEN LIKELIHOOD(DISTINCT t0.c20, 0.379686514011489) THEN (((t0.c50))<((t0.c20))) END  NULLS FIRST, (- ('a')), (((NOT (t0.c20)))<(t0.c50 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE CAST(t0.c50 AS NUMERIC)  WHEN ((((((((t0.c50)OR(t0.c20)))OR(t0.c50)))AND(t0.c20)))AND(t0.c50)) THEN CAST(t0.c50 AS REAL) END) ORDER BY CASE ((t0.c50) BETWEEN (0Xffffffffaed9d250) AND (t0.c50))  WHEN LIKELIHOOD(DISTINCT t0.c20, 0.379686514011489) THEN (((t0.c50))<((t0.c20))) END  NULLS FIRST, (- ('a')), (((NOT (t0.c20)))<(t0.c50 COLLATE BINARY)) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE MAX(t0.c50, t0.c50)  WHEN ((((t0.c50)AND(t0.c50)))AND(t0.c20)) THEN ((t0.c50) NOT NULL) WHEN (((t0.c50))=((t0.c50))) THEN t0.c50 WHEN ((((t0.c50)AND(t0.c50)))AND(t0.c20)) THEN (((t0.c20, t0.c50, t0.c50))<>((t0.c20, t0.c20, t0.c20))) WHEN LIKELY(DISTINCT t0.c50) THEN -819532736 WHEN ABS(t0.c20) THEN CASE t0.c20  WHEN t0.c20 THEN t0.c20 WHEN NULL THEN t0.c20 WHEN t0.c50 THEN t0.c50 END ELSE CAST(t0.c50 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE MAX(t0.c50, t0.c50)  WHEN ((((t0.c50)AND(t0.c50)))AND(t0.c20)) THEN ((t0.c50) NOT NULL) WHEN (((t0.c50))=((t0.c50))) THEN t0.c50 WHEN ((((t0.c50)AND(t0.c50)))AND(t0.c20)) THEN (((t0.c20, t0.c50, t0.c50))!=((t0.c20, t0.c20, t0.c20))) WHEN LIKELY(DISTINCT t0.c50) THEN -819532736 WHEN ABS(t0.c20) THEN CASE t0.c20  WHEN t0.c20 THEN t0.c20 WHEN NULL THEN t0.c20 WHEN t0.c50 THEN t0.c50 END ELSE CAST(t0.c50 AS BLOB) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE MAX(t0.c50, t0.c50)  WHEN ((((t0.c50)AND(t0.c50)))AND(t0.c20)) THEN ((t0.c50) NOT NULL) WHEN (((t0.c50))=((t0.c50))) THEN t0.c50 WHEN ((((t0.c50)AND(t0.c50)))AND(t0.c20)) THEN (((t0.c20, t0.c50, t0.c50))<>((t0.c20, t0.c20, t0.c20))) WHEN LIKELY(DISTINCT t0.c50) THEN -819532736 WHEN ABS(t0.c20) THEN CASE t0.c20  WHEN t0.c20 THEN t0.c20 WHEN NULL THEN t0.c20 WHEN t0.c50 THEN t0.c50 END ELSE CAST(t0.c50 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE MAX(t0.c50, t0.c50)  WHEN ((((t0.c50)AND(t0.c50)))AND(t0.c20)) THEN ((t0.c50) NOT NULL) WHEN (((t0.c50))=((t0.c50))) THEN t0.c50 WHEN ((((t0.c50)AND(t0.c50)))AND(t0.c20)) THEN (((t0.c20, t0.c50, t0.c50))!=((t0.c20, t0.c20, t0.c20))) WHEN LIKELY(DISTINCT t0.c50) THEN -819532736 WHEN ABS(t0.c20) THEN CASE t0.c20  WHEN t0.c20 THEN t0.c20 WHEN NULL THEN t0.c20 WHEN t0.c50 THEN t0.c50 END ELSE CAST(t0.c50 AS BLOB) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE MAX(t0.c50, t0.c50)  WHEN ((((t0.c50)AND(t0.c50)))AND(t0.c20)) THEN ((t0.c50) NOT NULL) WHEN (((t0.c50))=((t0.c50))) THEN t0.c50 WHEN ((((t0.c50)AND(t0.c50)))AND(t0.c20)) THEN (((t0.c20, t0.c50, t0.c50))<>((t0.c20, t0.c20, t0.c20))) WHEN LIKELY(DISTINCT t0.c50) THEN -819532736 WHEN ABS(t0.c20) THEN CASE t0.c20  WHEN t0.c20 THEN t0.c20 WHEN NULL THEN t0.c20 WHEN t0.c50 THEN t0.c50 END ELSE CAST(t0.c50 AS BLOB) END);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0 COLLATE BINARY);
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON t0.c50 WHERE ('bW]RVT\rk') ORDER BY (+ ((((vt1.c0))<((t0.c50))))), 0xffffffffa9e96b07  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('bW]RVT\rk') IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON t0.c50 ORDER BY (+ ((((vt1.c0))<((t0.c50))))), 0Xffffffffa9e96b07  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON t0.c50 WHERE ('bW]RVT\rk') ORDER BY (+ ((((vt1.c0))<((t0.c50))))), 0xffffffffa9e96b07  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('bW]RVT\rk') IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON t0.c50 ORDER BY (+ ((((vt1.c0))<((t0.c50))))), 0Xffffffffa9e96b07  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON t0.c50 WHERE ('bW]RVT\rk') ORDER BY (+ ((((vt1.c0))<((t0.c50))))), 0xffffffffa9e96b07  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c20) BETWEEN ('-246672961') AND (t0.c50)))OR((('wn') IS TRUE)))) ORDER BY CASE WHEN (((t0.c50))<((x''))) THEN ((t0.c50) NOTNULL) WHEN t0.c20 THEN ((t0.c50)*(t0.c20)) WHEN CAST(t0.c50 AS BLOB) THEN 'T햄' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c20) BETWEEN ('-246672961') AND (t0.c50)))OR((('wn') IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (((t0.c50))<((x''))) THEN ((t0.c50) NOTNULL) WHEN t0.c20 THEN ((t0.c50)*(t0.c20)) WHEN CAST(t0.c50 AS BLOB) THEN 'T햄' END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c20) BETWEEN ('-246672961') AND (t0.c50)))OR((('wn') IS TRUE)))) ORDER BY CASE WHEN (((t0.c50))<((x''))) THEN ((t0.c50) NOTNULL) WHEN t0.c20 THEN ((t0.c50)*(t0.c20)) WHEN CAST(t0.c50 AS BLOB) THEN 'T햄' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c20) BETWEEN ('-246672961') AND (t0.c50)))OR((('wn') IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (((t0.c50))<((x''))) THEN ((t0.c50) NOTNULL) WHEN t0.c20 THEN ((t0.c50)*(t0.c20)) WHEN CAST(t0.c50 AS BLOB) THEN 'T햄' END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c20) BETWEEN ('-246672961') AND (t0.c50)))OR((('wn') IS TRUE)))) ORDER BY CASE WHEN (((t0.c50))<((x''))) THEN ((t0.c50) NOTNULL) WHEN t0.c20 THEN ((t0.c50)*(t0.c20)) WHEN CAST(t0.c50 AS BLOB) THEN 'T햄' END  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN (((t0.c20) IS TRUE)) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) BETWEEN (((t0.c20) IS TRUE)) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN (((t0.c20) IS TRUE)) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) BETWEEN (((t0.c20) IS TRUE)) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN (((t0.c20) IS TRUE)) AND (vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt1 NOT INDEXED WHERE (((((vt1.c0)OR(vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (((((vt1.c0)OR(vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (((((vt1.c0)OR(vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((vt0.c1)>>(vt0.c1))) AND (0.004793541323642625))) ORDER BY (((vt0.c0 IN (0.8238462334684667)))>(vt0.c0)) DESC  NULLS FIRST, (vt0.c1 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((vt0.c1)>>(vt0.c1))) AND (0.004793541323642625))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (0.8238462334684667)))>(vt0.c0)) DESC  NULLS FIRST, (vt0.c1 IN ()) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((vt0.c1)>>(vt0.c1))) AND (0.004793541323642625))) ORDER BY (((vt0.c0 IN (0.8238462334684667)))>(vt0.c0)) DESC  NULLS FIRST, (vt0.c1 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((vt0.c1)>>(vt0.c1))) AND (0.004793541323642625))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (0.8238462334684667)))>(vt0.c0)) DESC  NULLS FIRST, (vt0.c1 IN ()) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((vt0.c1)>>(vt0.c1))) AND (0.004793541323642625))) ORDER BY (((vt0.c0 IN (0.8238462334684667)))>(vt0.c0)) DESC  NULLS FIRST, (vt0.c1 IN ()) ASC;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (json_remove((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), t0.c50)) ORDER BY (+ (((t0.c20) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((json_remove((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), t0.c50)) IS TRUE)  as count FROM t0, vt1 ORDER BY (+ (((t0.c20) ISNULL))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (json_remove((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), t0.c50)) ORDER BY (+ (((t0.c20) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((json_remove((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), t0.c50)) IS TRUE)  as count FROM t0, vt1 ORDER BY (+ (((t0.c20) ISNULL))));
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, t0, vt0 WHERE ((((vt0.c1)&(vt1.c0)) IN ())) ORDER BY ((((((t0.c50)AND(vt0.c1)))OR(t0.c50))) NOT BETWEEN (0x101c5e75) AND (t0.c20))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)&(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((((t0.c50)AND(vt0.c1)))OR(t0.c50))) NOT BETWEEN (0X101c5e75) AND (t0.c20))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, t0, vt0 WHERE ((((vt0.c1)&(vt1.c0)) IN ())) ORDER BY ((((((t0.c50)AND(vt0.c1)))OR(t0.c50))) NOT BETWEEN (0x101c5e75) AND (t0.c20))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)&(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((((t0.c50)AND(vt0.c1)))OR(t0.c50))) NOT BETWEEN (0X101c5e75) AND (t0.c20))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, t0, vt0 WHERE ((((vt0.c1)&(vt1.c0)) IN ())) ORDER BY ((((((t0.c50)AND(vt0.c1)))OR(t0.c50))) NOT BETWEEN (0x101c5e75) AND (t0.c20))  NULLS LAST;
SELECT * FROM vt0, t0, vt1 WHERE (MAX(CAST(vt0.c0 AS BLOB), ((vt1.c0)LIKE(vt0.c0)))) ORDER BY (+ ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c1, vt0.c1)) AND (('NCXK''', vt1.c0, vt0.c1))))), ((((((t0.c20) BETWEEN (t0.c20) AND (vt0.c0)))OR((+ (t0.c20)))))AND(vt1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((MAX(CAST(vt0.c0 AS BLOB), ((vt1.c0)LIKE(vt0.c0)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (+ ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c1, vt0.c1)) AND (('NCXK''', vt1.c0, vt0.c1))))), ((((((t0.c20) BETWEEN (t0.c20) AND (vt0.c0)))OR((+ (t0.c20)))))AND(vt1.c0 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM vt0, t0, vt1 WHERE (MAX(CAST(vt0.c0 AS BLOB), ((vt1.c0)LIKE(vt0.c0)))) ORDER BY (+ ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c1, vt0.c1)) AND (('NCXK''', vt1.c0, vt0.c1))))), ((((((t0.c20) BETWEEN (t0.c20) AND (vt0.c0)))OR((+ (t0.c20)))))AND(vt1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((MAX(CAST(vt0.c0 AS BLOB), ((vt1.c0)LIKE(vt0.c0)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (+ ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c1, vt0.c1)) AND (('NCXK''', vt1.c0, vt0.c1))))), ((((((t0.c20) BETWEEN (t0.c20) AND (vt0.c0)))OR((+ (t0.c20)))))AND(vt1.c0 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM vt0, t0, vt1 WHERE (MAX(CAST(vt0.c0 AS BLOB), ((vt1.c0)LIKE(vt0.c0)))) ORDER BY (+ ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c1, vt0.c1)) AND (('NCXK''', vt1.c0, vt0.c1))))), ((((((t0.c20) BETWEEN (t0.c20) AND (vt0.c0)))OR((+ (t0.c20)))))AND(vt1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c20  WHEN t0.c20 THEN t0.c20 END) BETWEEN (((t0.c20) IS TRUE)) AND (CASE -1.108216024E9  WHEN t0.c50 THEN t0.c50 WHEN t0.c20 THEN t0.c20 WHEN t0.c20 THEN t0.c20 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c20  WHEN t0.c20 THEN t0.c20 END) BETWEEN (((t0.c20) IS TRUE)) AND (CASE -1.108216024E9  WHEN t0.c50 THEN t0.c50 WHEN t0.c20 THEN t0.c20 WHEN t0.c20 THEN t0.c20 ELSE x'' END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c20  WHEN t0.c20 THEN t0.c20 END) BETWEEN (((t0.c20) IS TRUE)) AND (CASE -1.108216024E9  WHEN t0.c50 THEN t0.c50 WHEN t0.c20 THEN t0.c20 WHEN t0.c20 THEN t0.c20 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c20  WHEN t0.c20 THEN t0.c20 END) BETWEEN (((t0.c20) IS TRUE)) AND (CASE -1.108216024E9  WHEN t0.c50 THEN t0.c50 WHEN t0.c20 THEN t0.c20 WHEN t0.c20 THEN t0.c20 ELSE x'' END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c20  WHEN t0.c20 THEN t0.c20 END) BETWEEN (((t0.c20) IS TRUE)) AND (CASE -1.108216024E9  WHEN t0.c50 THEN t0.c50 WHEN t0.c20 THEN t0.c20 WHEN t0.c20 THEN t0.c20 ELSE x'' END)));
SELECT ALL * FROM t0 WHERE ((((t0.c50) BETWEEN (t0.c50) AND (t0.c20)) IN ())) ORDER BY ((((CAST(t0.c50 AS BLOB))OR(((t0.c50)<>(t0.c50)))))OR(((((t0.c20)AND(t0.c50)))OR(t0.c50))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c50) BETWEEN (t0.c50) AND (t0.c20)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((CAST(t0.c50 AS BLOB))OR(((t0.c50)<>(t0.c50)))))OR(((((t0.c20)AND(t0.c50)))OR(t0.c50))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((t0.c50) BETWEEN (t0.c50) AND (t0.c20)) IN ())) ORDER BY ((((CAST(t0.c50 AS BLOB))OR(((t0.c50)<>(t0.c50)))))OR(((((t0.c20)AND(t0.c50)))OR(t0.c50))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c50) BETWEEN (t0.c50) AND (t0.c20)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((CAST(t0.c50 AS BLOB))OR(((t0.c50)<>(t0.c50)))))OR(((((t0.c20)AND(t0.c50)))OR(t0.c50))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((t0.c50) BETWEEN (t0.c50) AND (t0.c20)) IN ())) ORDER BY ((((CAST(t0.c50 AS BLOB))OR(((t0.c50)<>(t0.c50)))))OR(((((t0.c20)AND(t0.c50)))OR(t0.c50))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((0.9673875989190303 IN (vt1.c0, vt1.c0)) COLLATE NOCASE) ORDER BY (MAX(vt1.c0, vt1.c0) IN (vt1.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((0.9673875989190303 IN (vt1.c0, vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (MAX(vt1.c0, vt1.c0) IN (vt1.c0 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((0.9673875989190303 IN (vt1.c0, vt1.c0)) COLLATE NOCASE) ORDER BY (MAX(vt1.c0, vt1.c0) IN (vt1.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((0.9673875989190303 IN (vt1.c0, vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (MAX(vt1.c0, vt1.c0) IN (vt1.c0 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((0.9673875989190303 IN (vt1.c0, vt1.c0)) COLLATE NOCASE) ORDER BY (MAX(vt1.c0, vt1.c0) IN (vt1.c0 COLLATE BINARY)) ASC;
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY -210669104, CAST(CAST(vt0.c0 AS BLOB) AS REAL) DESC, (((((vt0.c1, vt0.c1, vt0.c0))=((vt0.c0, vt0.c1, vt0.c1))))%(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY -210669104, CAST(CAST(vt0.c0 AS BLOB) AS REAL) DESC, (((((vt0.c1, vt0.c1, vt0.c0))=((vt0.c0, vt0.c1, vt0.c1))))%(vt0.c0)));
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY -210669104, CAST(CAST(vt0.c0 AS BLOB) AS REAL) DESC, (((((vt0.c1, vt0.c1, vt0.c0))=((vt0.c0, vt0.c1, vt0.c1))))%(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY -210669104, CAST(CAST(vt0.c0 AS BLOB) AS REAL) DESC, (((((vt0.c1, vt0.c1, vt0.c0))=((vt0.c0, vt0.c1, vt0.c1))))%(vt0.c0)));
SELECT * FROM vt1, vt0, t0 WHERE (COALESCE(DISTINCT CAST(vt0.c0 AS BLOB), ((t0.c50)IS NOT(t0.c20))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT CAST(vt0.c0 AS BLOB), ((t0.c50)IS NOT(t0.c20)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (COALESCE(DISTINCT CAST(vt0.c0 AS BLOB), ((t0.c50)IS NOT(t0.c20))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT CAST(vt0.c0 AS BLOB), ((t0.c50)IS NOT(t0.c20)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (COALESCE(DISTINCT CAST(vt0.c0 AS BLOB), ((t0.c50)IS NOT(t0.c20))));
SELECT * FROM vt1, t0, vt0 WHERE ((((((((((t0.c20)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(t0.c50)) IN ())) ORDER BY ((t0.c20)*(vt0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((t0.c20)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(t0.c50)) IN ())) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((t0.c20)*(vt0.c1)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt1, t0, vt0 WHERE ((((((((((t0.c20)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(t0.c50)) IN ())) ORDER BY ((t0.c20)*(vt0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((t0.c20)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(t0.c50)) IN ())) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((t0.c20)*(vt0.c1)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt1, t0, vt0 WHERE ((((((((((t0.c20)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(t0.c50)) IN ())) ORDER BY ((t0.c20)*(vt0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (vt0.c0) ORDER BY (((((vt0.c0)AND(vt0.c0))))<=((((t0.c50) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS FIRST, (((x'' COLLATE NOCASE))<=((CAST(t0.c50 AS BLOB)))) ASC  NULLS FIRST, (((vt0.c0 IN ()))/(CAST(x'' AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((((vt0.c0)AND(vt0.c0))))<=((((t0.c50) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS FIRST, (((x'' COLLATE NOCASE))<=((CAST(t0.c50 AS BLOB)))) ASC  NULLS FIRST, (((vt0.c0 IN ()))/(CAST(x'' AS NUMERIC)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (vt0.c0) ORDER BY (((((vt0.c0)AND(vt0.c0))))<=((((t0.c50) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS FIRST, (((x'' COLLATE NOCASE))<=((CAST(t0.c50 AS BLOB)))) ASC  NULLS FIRST, (((vt0.c0 IN ()))/(CAST(x'' AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((((vt0.c0)AND(vt0.c0))))<=((((t0.c50) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS FIRST, (((x'' COLLATE NOCASE))<=((CAST(t0.c50 AS BLOB)))) ASC  NULLS FIRST, (((vt0.c0 IN ()))/(CAST(x'' AS NUMERIC)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (vt0.c0) ORDER BY (((((vt0.c0)AND(vt0.c0))))<=((((t0.c50) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS FIRST, (((x'' COLLATE NOCASE))<=((CAST(t0.c50 AS BLOB)))) ASC  NULLS FIRST, (((vt0.c0 IN ()))/(CAST(x'' AS NUMERIC)))  NULLS LAST;
SELECT * FROM vt0, t0 FULL OUTER JOIN vt1 ON (~ (vt1.c0 COLLATE NOCASE)) WHERE (t0.c20);
SELECT SUM(count) FROM (SELECT ALL ((t0.c20) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON (~ (vt1.c0 COLLATE NOCASE)));
SELECT * FROM vt0, t0 FULL OUTER JOIN vt1 ON (~ (vt1.c0 COLLATE NOCASE)) WHERE (t0.c20);
SELECT SUM(count) FROM (SELECT ALL ((t0.c20) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON (~ (vt1.c0 COLLATE NOCASE)));
SELECT * FROM vt0, t0 FULL OUTER JOIN vt1 ON (~ (vt1.c0 COLLATE NOCASE)) WHERE (t0.c20);
SELECT * FROM vt0, t0 WHERE (((((t0.c20) NOT BETWEEN (t0.c50) AND (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c20) NOT BETWEEN (t0.c50) AND (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c20) NOT BETWEEN (t0.c50) AND (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c20) NOT BETWEEN (t0.c50) AND (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c20) NOT BETWEEN (t0.c50) AND (vt0.c0))) NOTNULL));
SELECT COUNT(*) FROM vt1 WHERE (((LOWER(DISTINCT vt1.c0)) BETWEEN (TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (((vt1.c0)GLOB(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT vt1.c0)) BETWEEN (TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (((vt1.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((LOWER(DISTINCT vt1.c0)) BETWEEN (TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (((vt1.c0)GLOB(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT vt1.c0)) BETWEEN (TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (((vt1.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((LOWER(DISTINCT vt1.c0)) BETWEEN (TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (((vt1.c0)GLOB(vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE ((((0Xffffffffe7235f23))<((vt0.c1))) COLLATE NOCASE) ORDER BY ((((vt1.c0)OR(vt0.c0))) NOT BETWEEN (((vt0.c0)OR(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0Xffffffffe7235f23))<((vt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0)OR(vt0.c0))) NOT BETWEEN (((vt0.c0)OR(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((0Xffffffffe7235f23))<((vt0.c1))) COLLATE NOCASE) ORDER BY ((((vt1.c0)OR(vt0.c0))) NOT BETWEEN (((vt0.c0)OR(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0Xffffffffe7235f23))<((vt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0)OR(vt0.c0))) NOT BETWEEN (((vt0.c0)OR(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((0Xffffffffe7235f23))<((vt0.c1))) COLLATE NOCASE) ORDER BY ((((vt1.c0)OR(vt0.c0))) NOT BETWEEN (((vt0.c0)OR(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c20)OR(t0.c20)))OR(t0.c50))) NOT BETWEEN (CAST(t0.c20 AS TEXT)) AND ((t0.c50 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c20)OR(t0.c20)))OR(t0.c50))) NOT BETWEEN (CAST(t0.c20 AS TEXT)) AND ((t0.c50 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c20)OR(t0.c20)))OR(t0.c50))) NOT BETWEEN (CAST(t0.c20 AS TEXT)) AND ((t0.c50 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c20)OR(t0.c20)))OR(t0.c50))) NOT BETWEEN (CAST(t0.c20 AS TEXT)) AND ((t0.c50 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c20)OR(t0.c20)))OR(t0.c50))) NOT BETWEEN (CAST(t0.c20 AS TEXT)) AND ((t0.c50 IN ()))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON CAST(vt1.c0 AS TEXT) WHERE (((vt1.c0 COLLATE BINARY) IS TRUE)) ORDER BY (t0.c20 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CAST(vt1.c0 AS TEXT) ORDER BY (t0.c20 IN ()) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON CAST(vt1.c0 AS TEXT) WHERE (((vt1.c0 COLLATE BINARY) IS TRUE)) ORDER BY (t0.c20 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CAST(vt1.c0 AS TEXT) ORDER BY (t0.c20 IN ()) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON CAST(vt1.c0 AS TEXT) WHERE (((vt1.c0 COLLATE BINARY) IS TRUE)) ORDER BY (t0.c20 IN ()) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((t0.c20, CAST(vt1.c0 AS INTEGER), CAST(vt0.c0 AS TEXT))) AND ((UNLIKELY(vt1.c0), '' COLLATE BINARY, ((vt0.c1)+(x''))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((t0.c20, CAST(vt1.c0 AS INTEGER), CAST(vt0.c0 AS TEXT))) AND ((UNLIKELY(vt1.c0), '' COLLATE BINARY, ((vt0.c1)+(x'')))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((t0.c20, CAST(vt1.c0 AS INTEGER), CAST(vt0.c0 AS TEXT))) AND ((UNLIKELY(vt1.c0), '' COLLATE BINARY, ((vt0.c1)+(x''))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((t0.c20, CAST(vt1.c0 AS INTEGER), CAST(vt0.c0 AS TEXT))) AND ((UNLIKELY(vt1.c0), '' COLLATE BINARY, ((vt0.c1)+(x'')))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((t0.c20, CAST(vt1.c0 AS INTEGER), CAST(vt0.c0 AS TEXT))) AND ((UNLIKELY(vt1.c0), '' COLLATE BINARY, ((vt0.c1)+(x''))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE t0.c20 COLLATE NOCASE  WHEN json_object(vt0.c0, NULL) THEN (((t0.c50, vt0.c1, vt0.c0))<>((t0.c50, vt0.c0, t0.c50))) END) ORDER BY CHANGES()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE t0.c20 COLLATE NOCASE  WHEN json_object(vt0.c0, NULL) THEN (((t0.c50, vt0.c1, vt0.c0))!=((t0.c50, vt0.c0, t0.c50))) END) IS TRUE)  as count FROM t0, vt0 ORDER BY CHANGES()  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE t0.c20 COLLATE NOCASE  WHEN json_object(vt0.c0, NULL) THEN (((t0.c50, vt0.c1, vt0.c0))<>((t0.c50, vt0.c0, t0.c50))) END) ORDER BY CHANGES()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE t0.c20 COLLATE NOCASE  WHEN json_object(vt0.c0, NULL) THEN (((t0.c50, vt0.c1, vt0.c0))!=((t0.c50, vt0.c0, t0.c50))) END) IS TRUE)  as count FROM t0, vt0 ORDER BY CHANGES()  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE t0.c20 COLLATE NOCASE  WHEN json_object(vt0.c0, NULL) THEN (((t0.c50, vt0.c1, vt0.c0))<>((t0.c50, vt0.c0, t0.c50))) END) ORDER BY CHANGES()  NULLS LAST;
SELECT ALL * FROM vt1, t0 NATURAL JOIN vt0 WHERE (((((((((((t0.c50) BETWEEN (vt0.c1) AND (t0.c20)))AND(x'' COLLATE BINARY)))OR((~ (t0.c20)))))OR(TRIM(vt0.c1))))OR(UNLIKELY(t0.c50)))) ORDER BY ('2143143885' IN ()) DESC  NULLS LAST, (('') NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c50) BETWEEN (vt0.c1) AND (t0.c20)))AND(x'' COLLATE BINARY)))OR((~ (t0.c20)))))OR(TRIM(vt0.c1))))OR(UNLIKELY(t0.c50)))) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN vt0 ORDER BY ('2143143885' IN ()) DESC  NULLS LAST, (('') NOT NULL)  NULLS FIRST);
SELECT ALL * FROM vt1, t0 NATURAL JOIN vt0 WHERE (((((((((((t0.c50) BETWEEN (vt0.c1) AND (t0.c20)))AND(x'' COLLATE BINARY)))OR((~ (t0.c20)))))OR(TRIM(vt0.c1))))OR(UNLIKELY(t0.c50)))) ORDER BY ('2143143885' IN ()) DESC  NULLS LAST, (('') NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c50) BETWEEN (vt0.c1) AND (t0.c20)))AND(x'' COLLATE BINARY)))OR((~ (t0.c20)))))OR(TRIM(vt0.c1))))OR(UNLIKELY(t0.c50)))) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN vt0 ORDER BY ('2143143885' IN ()) DESC  NULLS LAST, (('') NOT NULL)  NULLS FIRST);
SELECT ALL * FROM vt1, t0 NATURAL JOIN vt0 WHERE (((((((((((t0.c50) BETWEEN (vt0.c1) AND (t0.c20)))AND(x'' COLLATE BINARY)))OR((~ (t0.c20)))))OR(TRIM(vt0.c1))))OR(UNLIKELY(t0.c50)))) ORDER BY ('2143143885' IN ()) DESC  NULLS LAST, (('') NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE ((~ (t0.c20)) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (t0.c20)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE ((~ (t0.c20)) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (t0.c20)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE ((~ (t0.c20)) COLLATE BINARY COLLATE RTRIM);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (NOT (((vt1.c0)<<(t0.c50)))) RIGHT OUTER JOIN t0 ON vt0.c1 WHERE ((- (((vt0.c1)>>(vt0.c1))))) ORDER BY ((json_array_length(t0.c20)) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1)>>(vt0.c1))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (NOT (((vt1.c0)<<(t0.c50)))) RIGHT OUTER JOIN t0 ON vt0.c1 ORDER BY ((json_array_length(t0.c20)) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (NOT (((vt1.c0)<<(t0.c50)))) RIGHT OUTER JOIN t0 ON vt0.c1 WHERE ((- (((vt0.c1)>>(vt0.c1))))) ORDER BY ((json_array_length(t0.c20)) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1)>>(vt0.c1))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (NOT (((vt1.c0)<<(t0.c50)))) RIGHT OUTER JOIN t0 ON vt0.c1 ORDER BY ((json_array_length(t0.c20)) IS FALSE) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (CASE (+ (vt1.c0))  WHEN (vt1.c0 IN ()) THEN ((vt1.c0)||(vt1.c0)) END) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (vt1.c0))  WHEN (vt1.c0 IN ()) THEN ((vt1.c0)||(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE (+ (vt1.c0))  WHEN (vt1.c0 IN ()) THEN ((vt1.c0)||(vt1.c0)) END) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (vt1.c0))  WHEN (vt1.c0 IN ()) THEN ((vt1.c0)||(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE (+ (vt1.c0))  WHEN (vt1.c0 IN ()) THEN ((vt1.c0)||(vt1.c0)) END) ORDER BY vt1.c0  NULLS FIRST;
SELECT ALL * FROM t0, vt1, vt0 WHERE (CASE TRIM(vt0.c1)  WHEN (((t0.c20, t0.c50, vt0.c0)) NOT BETWEEN ((t0.c20, t0.c50, vt0.c0)) AND ((t0.c50, t0.c20, t0.c50))) THEN (vt1.c0 IN (t0.c20)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(vt0.c1)  WHEN (((t0.c20, t0.c50, vt0.c0)) NOT BETWEEN ((t0.c20, t0.c50, vt0.c0)) AND ((t0.c50, t0.c20, t0.c50))) THEN (vt1.c0 IN (t0.c20)) END) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (CASE TRIM(vt0.c1)  WHEN (((t0.c20, t0.c50, vt0.c0)) NOT BETWEEN ((t0.c20, t0.c50, vt0.c0)) AND ((t0.c50, t0.c20, t0.c50))) THEN (vt1.c0 IN (t0.c20)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(vt0.c1)  WHEN (((t0.c20, t0.c50, vt0.c0)) NOT BETWEEN ((t0.c20, t0.c50, vt0.c0)) AND ((t0.c50, t0.c20, t0.c50))) THEN (vt1.c0 IN (t0.c20)) END) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (CASE TRIM(vt0.c1)  WHEN (((t0.c20, t0.c50, vt0.c0)) NOT BETWEEN ((t0.c20, t0.c50, vt0.c0)) AND ((t0.c50, t0.c20, t0.c50))) THEN (vt1.c0 IN (t0.c20)) END);
SELECT COUNT(*) FROM vt0 WHERE (CASE (vt0.c1 IN ())  WHEN 0xffffffffeb2caf6e THEN TYPEOF(DISTINCT x'3cec') ELSE ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) END) ORDER BY ((((0.42812229140177427)AND(vt0.c1)))OR(vt0.c1)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c1 IN ())  WHEN 0xffffffffeb2caf6e THEN TYPEOF(DISTINCT x'3cec') ELSE ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((0.42812229140177427)AND(vt0.c1)))OR(vt0.c1)) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE (vt0.c1 IN ())  WHEN 0xffffffffeb2caf6e THEN TYPEOF(DISTINCT x'3cec') ELSE ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) END) ORDER BY ((((0.42812229140177427)AND(vt0.c1)))OR(vt0.c1)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c1 IN ())  WHEN 0xffffffffeb2caf6e THEN TYPEOF(DISTINCT x'3cec') ELSE ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((0.42812229140177427)AND(vt0.c1)))OR(vt0.c1)) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE (vt0.c1 IN ())  WHEN 0xffffffffeb2caf6e THEN TYPEOF(DISTINCT x'3cec') ELSE ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) END) ORDER BY ((((0.42812229140177427)AND(vt0.c1)))OR(vt0.c1)) COLLATE BINARY ASC  NULLS LAST;
SELECT * FROM vt1, vt0, t0 WHERE (((((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(t0.c20)))>>(CASE WHEN t0.c50 THEN t0.c20 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN t0.c50 END))) ORDER BY (('1XwAdW題K')=(LENGTH(t0.c20))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(t0.c20)))>>(CASE WHEN t0.c50 THEN t0.c20 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN t0.c50 END))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (('1XwAdW題K')==(LENGTH(t0.c20))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0, t0 WHERE (((((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(t0.c20)))>>(CASE WHEN t0.c50 THEN t0.c20 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN t0.c50 END))) ORDER BY (('1XwAdW題K')=(LENGTH(t0.c20))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(t0.c20)))>>(CASE WHEN t0.c50 THEN t0.c20 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN t0.c50 END))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (('1XwAdW題K')==(LENGTH(t0.c20))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0, t0 WHERE (((((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(t0.c20)))>>(CASE WHEN t0.c50 THEN t0.c20 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN t0.c50 END))) ORDER BY (('1XwAdW題K')=(LENGTH(t0.c20))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (x'') ORDER BY 0.3977955548510981  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 ORDER BY 0.3977955548510981  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (x'') ORDER BY 0.3977955548510981  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 ORDER BY 0.3977955548510981  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (x'') ORDER BY 0.3977955548510981  NULLS LAST;
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((t0.c20) BETWEEN (vt0.c1) AND (1490728931))) NOTNULL)) ORDER BY CASE WHEN t0.c50 COLLATE BINARY THEN ((((vt0.c1)AND(t0.c50)))AND(vt1.c0)) ELSE ((t0.c20)>(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c20) BETWEEN (vt0.c1) AND (1490728931))) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE WHEN t0.c50 COLLATE BINARY THEN ((((vt0.c1)AND(t0.c50)))AND(vt1.c0)) ELSE ((t0.c20)>(vt1.c0)) END);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((t0.c20) BETWEEN (vt0.c1) AND (1490728931))) NOTNULL)) ORDER BY CASE WHEN t0.c50 COLLATE BINARY THEN ((((vt0.c1)AND(t0.c50)))AND(vt1.c0)) ELSE ((t0.c20)>(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c20) BETWEEN (vt0.c1) AND (1490728931))) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE WHEN t0.c50 COLLATE BINARY THEN ((((vt0.c1)AND(t0.c50)))AND(vt1.c0)) ELSE ((t0.c20)>(vt1.c0)) END);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((t0.c20) BETWEEN (vt0.c1) AND (1490728931))) NOTNULL)) ORDER BY CASE WHEN t0.c50 COLLATE BINARY THEN ((((vt0.c1)AND(t0.c50)))AND(vt1.c0)) ELSE ((t0.c20)>(vt1.c0)) END;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON (((t0.c50) NOT BETWEEN (vt1.c0) AND (t0.c20)) IN ()) WHERE (CAST('0.8738192678826386' AS TEXT)) ORDER BY (+ ((((t0.c50))!=((t0.c20))))) DESC, SQLITE_VERSION()  NULLS LAST, (((((((((t0.c50 IN ()))OR(CASE x''  WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END)))OR(((t0.c20)GLOB(t0.c20)))))AND((((t0.c50)) BETWEEN ((vt1.c0)) AND ((NULL))))))OR((((t0.c20))>((t0.c50))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST('0.8738192678826386' AS TEXT)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (((t0.c50) NOT BETWEEN (vt1.c0) AND (t0.c20)) IN ()) ORDER BY (+ ((((t0.c50))!=((t0.c20))))) DESC, SQLITE_VERSION()  NULLS LAST, (((((((((t0.c50 IN ()))OR(CASE x''  WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END)))OR(((t0.c20)GLOB(t0.c20)))))AND((((t0.c50)) BETWEEN ((vt1.c0)) AND ((NULL))))))OR((((t0.c20))>((t0.c50))))) DESC);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON (((t0.c50) NOT BETWEEN (vt1.c0) AND (t0.c20)) IN ()) WHERE (CAST('0.8738192678826386' AS TEXT)) ORDER BY (+ ((((t0.c50))!=((t0.c20))))) DESC, SQLITE_VERSION()  NULLS LAST, (((((((((t0.c50 IN ()))OR(CASE x''  WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END)))OR(((t0.c20)GLOB(t0.c20)))))AND((((t0.c50)) BETWEEN ((vt1.c0)) AND ((NULL))))))OR((((t0.c20))>((t0.c50))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST('0.8738192678826386' AS TEXT)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (((t0.c50) NOT BETWEEN (vt1.c0) AND (t0.c20)) IN ()) ORDER BY (+ ((((t0.c50))!=((t0.c20))))) DESC, SQLITE_VERSION()  NULLS LAST, (((((((((t0.c50 IN ()))OR(CASE x''  WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END)))OR(((t0.c20)GLOB(t0.c20)))))AND((((t0.c50)) BETWEEN ((vt1.c0)) AND ((NULL))))))OR((((t0.c20))>((t0.c50))))) DESC);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON (((t0.c50) NOT BETWEEN (vt1.c0) AND (t0.c20)) IN ()) WHERE (CAST('0.8738192678826386' AS TEXT)) ORDER BY (+ ((((t0.c50))!=((t0.c20))))) DESC, SQLITE_VERSION()  NULLS LAST, (((((((((t0.c50 IN ()))OR(CASE x''  WHEN t0.c50 THEN t0.c50 ELSE t0.c50 END)))OR(((t0.c20)GLOB(t0.c20)))))AND((((t0.c50)) BETWEEN ((vt1.c0)) AND ((NULL))))))OR((((t0.c20))>((t0.c50))))) DESC;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN vt0.c1 THEN vt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN vt0.c1 THEN vt0.c1 END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN vt0.c1 THEN vt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN vt0.c1 THEN vt0.c1 END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN vt0.c1 THEN vt0.c1 END);
SELECT * FROM t0 WHERE ((((((t0.c20)IS NOT(0Xffffffffaed6eb31))))<=((((t0.c20)!=(t0.c20))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c20)IS NOT(0xffffffffaed6eb31))))<=((((t0.c20)<>(t0.c20)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c20)IS NOT(0Xffffffffaed6eb31))))<=((((t0.c20)!=(t0.c20))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c20)IS NOT(0xffffffffaed6eb31))))<=((((t0.c20)<>(t0.c20)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c20)IS NOT(0Xffffffffaed6eb31))))<=((((t0.c20)!=(t0.c20))))));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((((CAST(t0.c50 AS BLOB)))<=(((t0.c50 IN ())))));
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c50 AS BLOB)))<=(((t0.c50 IN ()))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((((CAST(t0.c50 AS BLOB)))<=(((t0.c50 IN ())))));
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c50 AS BLOB)))<=(((t0.c50 IN ()))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((((CAST(t0.c50 AS BLOB)))<=(((t0.c50 IN ())))));
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT NULL));
SELECT COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0)GLOB(vt1.c0))))) ORDER BY (((('L]r*')|(vt1.c0))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((('L]r*')|(vt1.c0))) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0)GLOB(vt1.c0))))) ORDER BY (((('L]r*')|(vt1.c0))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((('L]r*')|(vt1.c0))) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0)GLOB(vt1.c0))))) ORDER BY (((('L]r*')|(vt1.c0))) IS TRUE) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((x'') NOTNULL))) AND (((vt1.c0 IN ()))))) ORDER BY ((((vt1.c0)<(vt1.c0)))>>(((vt1.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((x'') NOTNULL))) AND (((vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)<(vt1.c0)))>>(((vt1.c0) NOT NULL))) ASC);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((x'') NOTNULL))) AND (((vt1.c0 IN ()))))) ORDER BY ((((vt1.c0)<(vt1.c0)))>>(((vt1.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((x'') NOTNULL))) AND (((vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)<(vt1.c0)))>>(((vt1.c0) NOT NULL))) ASC);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((x'') NOTNULL))) AND (((vt1.c0 IN ()))))) ORDER BY ((((vt1.c0)<(vt1.c0)))>>(((vt1.c0) NOT NULL))) ASC;
SELECT COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON (((NOT ('0.958663500946904'))) ISNULL) WHERE ((((vt1.c0 IN ())) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((t0.c20 IN ())))) ORDER BY CAST((~ (t0.c20)) AS BLOB)  NULLS FIRST, rtreenode(LOWER(DISTINCT 0.7804708669175028), (x'' IN ())) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((t0.c20 IN ())))) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON (((NOT ('0.958663500946904'))) ISNULL) ORDER BY CAST((~ (t0.c20)) AS BLOB)  NULLS FIRST, rtreenode(LOWER(DISTINCT 0.7804708669175028), (x'' IN ())) DESC);
SELECT COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON (((NOT ('0.958663500946904'))) ISNULL) WHERE ((((vt1.c0 IN ())) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((t0.c20 IN ())))) ORDER BY CAST((~ (t0.c20)) AS BLOB)  NULLS FIRST, rtreenode(LOWER(DISTINCT 0.7804708669175028), (x'' IN ())) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((t0.c20 IN ())))) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON (((NOT ('0.958663500946904'))) ISNULL) ORDER BY CAST((~ (t0.c20)) AS BLOB)  NULLS FIRST, rtreenode(LOWER(DISTINCT 0.7804708669175028), (x'' IN ())) DESC);
SELECT COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON (((NOT ('0.958663500946904'))) ISNULL) WHERE ((((vt1.c0 IN ())) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((t0.c20 IN ())))) ORDER BY CAST((~ (t0.c20)) AS BLOB)  NULLS FIRST, rtreenode(LOWER(DISTINCT 0.7804708669175028), (x'' IN ())) DESC;
SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC));
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((((vt1.c0)<>(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((((vt1.c0)<>(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((((vt1.c0)<>(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((((vt1.c0)<>(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((((vt1.c0)<>(vt1.c0))))));
SELECT * FROM t0, vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN CAST(t0.c20 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c0 IN ()) THEN CAST(t0.c20 AS NUMERIC) END) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN CAST(t0.c20 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c0 IN ()) THEN CAST(t0.c20 AS NUMERIC) END) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN CAST(t0.c20 AS NUMERIC) END);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0) BETWEEN (t0.c20) AND (0.9054382680534258)))AND((((vt1.c0)) NOT BETWEEN ((t0.c50)) AND ((NULL))))))AND(TYPEOF(t0.c50))) WHERE (((CASE WHEN t0.c20 THEN t0.c50 ELSE t0.c20 END)IS(UNICODE(t0.c20))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c20 THEN t0.c50 ELSE t0.c20 END)IS(UNICODE(t0.c20)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0) BETWEEN (t0.c20) AND (0.9054382680534258)))AND((((vt1.c0)) NOT BETWEEN ((t0.c50)) AND ((NULL))))))AND(TYPEOF(t0.c50))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0) BETWEEN (t0.c20) AND (0.9054382680534258)))AND((((vt1.c0)) NOT BETWEEN ((t0.c50)) AND ((NULL))))))AND(TYPEOF(t0.c50))) WHERE (((CASE WHEN t0.c20 THEN t0.c50 ELSE t0.c20 END)IS(UNICODE(t0.c20))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c20 THEN t0.c50 ELSE t0.c20 END)IS(UNICODE(t0.c20)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0) BETWEEN (t0.c20) AND (0.9054382680534258)))AND((((vt1.c0)) NOT BETWEEN ((t0.c50)) AND ((NULL))))))AND(TYPEOF(t0.c50))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0) BETWEEN (t0.c20) AND (0.9054382680534258)))AND((((vt1.c0)) NOT BETWEEN ((t0.c50)) AND ((NULL))))))AND(TYPEOF(t0.c50))) WHERE (((CASE WHEN t0.c20 THEN t0.c50 ELSE t0.c20 END)IS(UNICODE(t0.c20))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (~ ((((vt0.c0)) NOT BETWEEN ((t0.c20)) AND ((t0.c20))))) WHERE (((((vt0.c1) IS FALSE))>=(CASE t0.c20  WHEN vt0.c0 THEN t0.c50 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS FALSE))>=(CASE t0.c20  WHEN vt0.c0 THEN t0.c50 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (~ ((((vt0.c0)) NOT BETWEEN ((t0.c20)) AND ((t0.c20))))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (~ ((((vt0.c0)) NOT BETWEEN ((t0.c20)) AND ((t0.c20))))) WHERE (((((vt0.c1) IS FALSE))>=(CASE t0.c20  WHEN vt0.c0 THEN t0.c50 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS FALSE))>=(CASE t0.c20  WHEN vt0.c0 THEN t0.c50 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (~ ((((vt0.c0)) NOT BETWEEN ((t0.c20)) AND ((t0.c20))))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (~ ((((vt0.c0)) NOT BETWEEN ((t0.c20)) AND ((t0.c20))))) WHERE (((((vt0.c1) IS FALSE))>=(CASE t0.c20  WHEN vt0.c0 THEN t0.c50 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((t0.c50)<=(vt1.c0)) AS REAL) RIGHT OUTER JOIN t0 ON LOWER(rtreenode(t0.c50, t0.c50)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((t0.c50)<=(vt1.c0)) AS REAL) RIGHT OUTER JOIN t0 ON LOWER(rtreenode(t0.c50, t0.c50)));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((t0.c50)<=(vt1.c0)) AS REAL) RIGHT OUTER JOIN t0 ON LOWER(rtreenode(t0.c50, t0.c50)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((t0.c50)<=(vt1.c0)) AS REAL) RIGHT OUTER JOIN t0 ON LOWER(rtreenode(t0.c50, t0.c50)));
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN 0.05556266499840046 COLLATE NOCASE THEN vt0.c1 ELSE ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE RTRIM  WHEN 0.05556266499840046 COLLATE NOCASE THEN vt0.c1 ELSE ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN 0.05556266499840046 COLLATE NOCASE THEN vt0.c1 ELSE ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE RTRIM  WHEN 0.05556266499840046 COLLATE NOCASE THEN vt0.c1 ELSE ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN 0.05556266499840046 COLLATE NOCASE THEN vt0.c1 ELSE ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) END);
SELECT ALL * FROM vt1, vt0 WHERE ((((((- (vt1.c0)))AND(((vt0.c1)%(vt0.c0)))))AND(HEX(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt1.c0)))AND(((vt0.c1)%(vt0.c0)))))AND(HEX(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((- (vt1.c0)))AND(((vt0.c1)%(vt0.c0)))))AND(HEX(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt1.c0)))AND(((vt0.c1)%(vt0.c0)))))AND(HEX(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((- (vt1.c0)))AND(((vt0.c1)%(vt0.c0)))))AND(HEX(vt1.c0))));
SELECT ALL * FROM vt1, vt0 WHERE (CAST(1298772265 AS NUMERIC)) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(1298772265 AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(1298772265 AS NUMERIC)) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(1298772265 AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(1298772265 AS NUMERIC)) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((((x'4223') NOT NULL)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((x'4223') NOT NULL)) IS FALSE));
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((((x'4223') NOT NULL)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((x'4223') NOT NULL)) IS FALSE));
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((((x'4223') NOT NULL)) IS FALSE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c1))=((vt0.c1, vt0.c1, vt0.c0)))) NOT BETWEEN ((~ (vt0.c0))) AND (((vt0.c0)+(vt0.c1))))) ORDER BY '970570328';
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c1, vt0.c1))==((vt0.c1, vt0.c1, vt0.c0)))) NOT BETWEEN ((~ (vt0.c0))) AND (((vt0.c0)+(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY '970570328');
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c1))=((vt0.c1, vt0.c1, vt0.c0)))) NOT BETWEEN ((~ (vt0.c0))) AND (((vt0.c0)+(vt0.c1))))) ORDER BY '970570328';
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c1, vt0.c1))==((vt0.c1, vt0.c1, vt0.c0)))) NOT BETWEEN ((~ (vt0.c0))) AND (((vt0.c0)+(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY '970570328');
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c1))=((vt0.c1, vt0.c1, vt0.c0)))) NOT BETWEEN ((~ (vt0.c0))) AND (((vt0.c0)+(vt0.c1))))) ORDER BY '970570328';
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY CASE WHEN json_array(vt0.c0, vt0.c0) THEN ((0Xffffffffcc526519)|(vt0.c1)) ELSE ((vt0.c1)&(vt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN json_array(vt0.c0, vt0.c0) THEN ((0xffffffffcc526519)|(vt0.c1)) ELSE ((vt0.c1)&(vt0.c1)) END);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY CASE WHEN json_array(vt0.c0, vt0.c0) THEN ((0Xffffffffcc526519)|(vt0.c1)) ELSE ((vt0.c1)&(vt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN json_array(vt0.c0, vt0.c0) THEN ((0xffffffffcc526519)|(vt0.c1)) ELSE ((vt0.c1)&(vt0.c1)) END);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY CASE WHEN json_array(vt0.c0, vt0.c0) THEN ((0Xffffffffcc526519)|(vt0.c1)) ELSE ((vt0.c1)&(vt0.c1)) END;
SELECT COUNT(*) FROM vt0 WHERE (CAST((((('')AND(vt0.c0)))OR(vt0.c0)) AS BLOB)) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((('')AND(vt0.c0)))OR(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((('')AND(vt0.c0)))OR(vt0.c0)) AS BLOB)) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((('')AND(vt0.c0)))OR(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((('')AND(vt0.c0)))OR(vt0.c0)) AS BLOB)) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON ((((((vt1.c0)OR(vt1.c0)))AND(0.8389197376063561)))IS NOT(((t0.c20)|(t0.c20)))) WHERE ((((- (0.5523048833068095)))!=(((vt1.c0)LIKE(t0.c50))))) ORDER BY ((CAST(vt1.c0 AS BLOB))<<(((((((((vt1.c0)OR(t0.c20)))OR(t0.c20)))AND(t0.c50)))AND(t0.c50)))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (0.5523048833068095)))!=(((vt1.c0)LIKE(t0.c50))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON ((((((vt1.c0)OR(vt1.c0)))AND(0.8389197376063561)))IS NOT(((t0.c20)|(t0.c20)))) ORDER BY ((CAST(vt1.c0 AS BLOB))<<(((((((((vt1.c0)OR(t0.c20)))OR(t0.c20)))AND(t0.c50)))AND(t0.c50)))) DESC);
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON ((((((vt1.c0)OR(vt1.c0)))AND(0.8389197376063561)))IS NOT(((t0.c20)|(t0.c20)))) WHERE ((((- (0.5523048833068095)))!=(((vt1.c0)LIKE(t0.c50))))) ORDER BY ((CAST(vt1.c0 AS BLOB))<<(((((((((vt1.c0)OR(t0.c20)))OR(t0.c20)))AND(t0.c50)))AND(t0.c50)))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (0.5523048833068095)))!=(((vt1.c0)LIKE(t0.c50))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON ((((((vt1.c0)OR(vt1.c0)))AND(0.8389197376063561)))IS NOT(((t0.c20)|(t0.c20)))) ORDER BY ((CAST(vt1.c0 AS BLOB))<<(((((((((vt1.c0)OR(t0.c20)))OR(t0.c20)))AND(t0.c50)))AND(t0.c50)))) DESC);
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON ((((((vt1.c0)OR(vt1.c0)))AND(0.8389197376063561)))IS NOT(((t0.c20)|(t0.c20)))) WHERE ((((- (0.5523048833068095)))!=(((vt1.c0)LIKE(t0.c50))))) ORDER BY ((CAST(vt1.c0 AS BLOB))<<(((((((((vt1.c0)OR(t0.c20)))OR(t0.c20)))AND(t0.c50)))AND(t0.c50)))) DESC;
SELECT ALL * FROM vt1 WHERE (CASE WHEN (- (vt1.c0)) THEN vt1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (vt1.c0)) THEN vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (- (vt1.c0)) THEN vt1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (vt1.c0)) THEN vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (- (vt1.c0)) THEN vt1.c0 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM t0 WHERE ((((((((t0.c20)OR(t0.c50)))OR(t0.c50)), ((t0.c20) ISNULL), ((t0.c50) ISNULL), ((t0.c50)<<(t0.c20)), (((t0.c20, t0.c50, t0.c50, t0.c20, t0.c20)) BETWEEN ((x'', t0.c20, t0.c20, '', t0.c20)) AND ((t0.c20, t0.c50, t0.c20, t0.c20, t0.c50)))))>=(((+ (t0.c20)), (('') BETWEEN (t0.c50) AND (t0.c50)), t0.c20, ((t0.c20)||(t0.c20)), ((((t0.c50)OR(t0.c50)))AND(t0.c20)))))) ORDER BY (((- ('-930433213')))/(t0.c20));
SELECT SUM(count) FROM (SELECT (((((((((t0.c20)OR(t0.c50)))OR(t0.c50)), ((t0.c20) ISNULL), ((t0.c50) ISNULL), ((t0.c50)<<(t0.c20)), (((t0.c20, t0.c50, t0.c50, t0.c20, t0.c20)) BETWEEN ((x'', t0.c20, t0.c20, '', t0.c20)) AND ((t0.c20, t0.c50, t0.c20, t0.c20, t0.c50)))))>=(((+ (t0.c20)), (('') BETWEEN (t0.c50) AND (t0.c50)), t0.c20, ((t0.c20)||(t0.c20)), ((((t0.c50)OR(t0.c50)))AND(t0.c20)))))) IS TRUE)  as count FROM t0 ORDER BY (((- ('-930433213')))/(t0.c20)));
SELECT COUNT(*) FROM t0 WHERE ((((((((t0.c20)OR(t0.c50)))OR(t0.c50)), ((t0.c20) ISNULL), ((t0.c50) ISNULL), ((t0.c50)<<(t0.c20)), (((t0.c20, t0.c50, t0.c50, t0.c20, t0.c20)) BETWEEN ((x'', t0.c20, t0.c20, '', t0.c20)) AND ((t0.c20, t0.c50, t0.c20, t0.c20, t0.c50)))))>=(((+ (t0.c20)), (('') BETWEEN (t0.c50) AND (t0.c50)), t0.c20, ((t0.c20)||(t0.c20)), ((((t0.c50)OR(t0.c50)))AND(t0.c20)))))) ORDER BY (((- ('-930433213')))/(t0.c20));
SELECT SUM(count) FROM (SELECT (((((((((t0.c20)OR(t0.c50)))OR(t0.c50)), ((t0.c20) ISNULL), ((t0.c50) ISNULL), ((t0.c50)<<(t0.c20)), (((t0.c20, t0.c50, t0.c50, t0.c20, t0.c20)) BETWEEN ((x'', t0.c20, t0.c20, '', t0.c20)) AND ((t0.c20, t0.c50, t0.c20, t0.c20, t0.c50)))))>=(((+ (t0.c20)), (('') BETWEEN (t0.c50) AND (t0.c50)), t0.c20, ((t0.c20)||(t0.c20)), ((((t0.c50)OR(t0.c50)))AND(t0.c20)))))) IS TRUE)  as count FROM t0 ORDER BY (((- ('-930433213')))/(t0.c20)));
SELECT COUNT(*) FROM t0 WHERE ((((((((t0.c20)OR(t0.c50)))OR(t0.c50)), ((t0.c20) ISNULL), ((t0.c50) ISNULL), ((t0.c50)<<(t0.c20)), (((t0.c20, t0.c50, t0.c50, t0.c20, t0.c20)) BETWEEN ((x'', t0.c20, t0.c20, '', t0.c20)) AND ((t0.c20, t0.c50, t0.c20, t0.c20, t0.c50)))))>=(((+ (t0.c20)), (('') BETWEEN (t0.c50) AND (t0.c50)), t0.c20, ((t0.c20)||(t0.c20)), ((((t0.c50)OR(t0.c50)))AND(t0.c20)))))) ORDER BY (((- ('-930433213')))/(t0.c20));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt0.c0)-(t0.c20)))>=(((((vt0.c1)AND(t0.c20)))AND(x'7be7'))))) ORDER BY ((vt1.c0 COLLATE BINARY)-(HEX(DISTINCT vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(t0.c20)))>=(((((vt0.c1)AND(t0.c20)))AND(x'7be7'))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((vt1.c0 COLLATE BINARY)-(HEX(DISTINCT vt1.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt0.c0)-(t0.c20)))>=(((((vt0.c1)AND(t0.c20)))AND(x'7be7'))))) ORDER BY ((vt1.c0 COLLATE BINARY)-(HEX(DISTINCT vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(t0.c20)))>=(((((vt0.c1)AND(t0.c20)))AND(x'7be7'))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((vt1.c0 COLLATE BINARY)-(HEX(DISTINCT vt1.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt0.c0)-(t0.c20)))>=(((((vt0.c1)AND(t0.c20)))AND(x'7be7'))))) ORDER BY ((vt1.c0 COLLATE BINARY)-(HEX(DISTINCT vt1.c0)));
SELECT * FROM vt1, t0, vt0 WHERE (((DATETIME(vt0.c0, vt0.c1, x'')) BETWEEN (vt0.c0) AND (((t0.c50) NOT BETWEEN (vt1.c0) AND (t0.c20)))));
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(vt0.c0, vt0.c1, x'')) BETWEEN (vt0.c0) AND (((t0.c50) NOT BETWEEN (vt1.c0) AND (t0.c20))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (((DATETIME(vt0.c0, vt0.c1, x'')) BETWEEN (vt0.c0) AND (((t0.c50) NOT BETWEEN (vt1.c0) AND (t0.c20)))));
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(vt0.c0, vt0.c1, x'')) BETWEEN (vt0.c0) AND (((t0.c50) NOT BETWEEN (vt1.c0) AND (t0.c20))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (((DATETIME(vt0.c0, vt0.c1, x'')) BETWEEN (vt0.c0) AND (((t0.c50) NOT BETWEEN (vt1.c0) AND (t0.c20)))));
SELECT * FROM vt0, t0 WHERE (TRIM(t0.c50) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((TRIM(t0.c50) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (TRIM(t0.c50) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((TRIM(t0.c50) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (TRIM(t0.c50) COLLATE BINARY);
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST(((vt0.c0) NOT NULL) AS REAL)) ORDER BY ((CASE WHEN NULL THEN t0.c20 WHEN vt1.c0 THEN t0.c50 WHEN 'KtRI|헸ঀ' THEN vt0.c0 END)OR((t0.c50 IN ())));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT NULL) AS REAL)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((CASE WHEN NULL THEN t0.c20 WHEN vt1.c0 THEN t0.c50 WHEN 'KtRI|헸ঀ' THEN vt0.c0 END)OR((t0.c50 IN ()))));
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST(((vt0.c0) NOT NULL) AS REAL)) ORDER BY ((CASE WHEN NULL THEN t0.c20 WHEN vt1.c0 THEN t0.c50 WHEN 'KtRI|헸ঀ' THEN vt0.c0 END)OR((t0.c50 IN ())));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT NULL) AS REAL)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((CASE WHEN NULL THEN t0.c20 WHEN vt1.c0 THEN t0.c50 WHEN 'KtRI|헸ঀ' THEN vt0.c0 END)OR((t0.c50 IN ()))));
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST(((vt0.c0) NOT NULL) AS REAL)) ORDER BY ((CASE WHEN NULL THEN t0.c20 WHEN vt1.c0 THEN t0.c50 WHEN 'KtRI|헸ঀ' THEN vt0.c0 END)OR((t0.c50 IN ())));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0;
SELECT ALL COUNT(*) FROM vt1 WHERE (((~ (vt1.c0)) IN (CAST(vt1.c0 AS INTEGER)))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt1.c0)) IN (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((~ (vt1.c0)) IN (CAST(vt1.c0 AS INTEGER)))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt1.c0)) IN (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((~ (vt1.c0)) IN (CAST(vt1.c0 AS INTEGER)))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (t0.c20) ORDER BY LIKELIHOOD((((t0.c50))<=((t0.c20))), 0.450402706989807)  NULLS FIRST, LIKELIHOOD(((vt1.c0) IS TRUE), 0.19264795817462466) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c20) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY LIKELIHOOD((((t0.c50))<=((t0.c20))), 0.450402706989807)  NULLS FIRST, LIKELIHOOD(((vt1.c0) IS TRUE), 0.19264795817462466) DESC);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (t0.c20) ORDER BY LIKELIHOOD((((t0.c50))<=((t0.c20))), 0.450402706989807)  NULLS FIRST, LIKELIHOOD(((vt1.c0) IS TRUE), 0.19264795817462466) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c20) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY LIKELIHOOD((((t0.c50))<=((t0.c20))), 0.450402706989807)  NULLS FIRST, LIKELIHOOD(((vt1.c0) IS TRUE), 0.19264795817462466) DESC);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (t0.c20) ORDER BY LIKELIHOOD((((t0.c50))<=((t0.c20))), 0.450402706989807)  NULLS FIRST, LIKELIHOOD(((vt1.c0) IS TRUE), 0.19264795817462466) DESC;
SELECT COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (vt0.c0) ORDER BY (+ (vt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ (vt0.c1)) DESC);
SELECT COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (vt0.c0) ORDER BY (+ (vt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ (vt0.c1)) DESC);
SELECT COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (vt0.c0) ORDER BY (+ (vt0.c1)) DESC;
SELECT * FROM vt1 NOT INDEXED INNER JOIN t0 ON NULL WHERE (NULLIF(t0.c50, vt1.c0) COLLATE RTRIM) ORDER BY CASE (((t0.c50))>((t0.c50)))  WHEN ((0x43fe45bf)IS(t0.c50)) THEN (t0.c20 IN ()) ELSE (((t0.c20, vt1.c0, t0.c20))<((vt1.c0, t0.c50, 'Ci'))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(t0.c50, vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON NULL ORDER BY CASE (((t0.c50))>((t0.c50)))  WHEN ((0X43fe45bf)IS(t0.c50)) THEN (t0.c20 IN ()) ELSE (((t0.c20, vt1.c0, t0.c20))<((vt1.c0, t0.c50, 'Ci'))) END  NULLS FIRST);
SELECT * FROM vt1 NOT INDEXED INNER JOIN t0 ON NULL WHERE (NULLIF(t0.c50, vt1.c0) COLLATE RTRIM) ORDER BY CASE (((t0.c50))>((t0.c50)))  WHEN ((0x43fe45bf)IS(t0.c50)) THEN (t0.c20 IN ()) ELSE (((t0.c20, vt1.c0, t0.c20))<((vt1.c0, t0.c50, 'Ci'))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(t0.c50, vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON NULL ORDER BY CASE (((t0.c50))>((t0.c50)))  WHEN ((0X43fe45bf)IS(t0.c50)) THEN (t0.c20 IN ()) ELSE (((t0.c20, vt1.c0, t0.c20))<((vt1.c0, t0.c50, 'Ci'))) END  NULLS FIRST);
SELECT * FROM vt1 NOT INDEXED INNER JOIN t0 ON NULL WHERE (NULLIF(t0.c50, vt1.c0) COLLATE RTRIM) ORDER BY CASE (((t0.c50))>((t0.c50)))  WHEN ((0x43fe45bf)IS(t0.c50)) THEN (t0.c20 IN ()) ELSE (((t0.c20, vt1.c0, t0.c20))<((vt1.c0, t0.c50, 'Ci'))) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON ((((((((t0.c20)AND(t0.c20)))AND(vt1.c0)))AND(t0.c20)))AND(vt0.c1)) COLLATE BINARY WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON ((((((((t0.c20)AND(t0.c20)))AND(vt1.c0)))AND(t0.c20)))AND(vt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON ((((((((t0.c20)AND(t0.c20)))AND(vt1.c0)))AND(t0.c20)))AND(vt0.c1)) COLLATE BINARY WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON ((((((((t0.c20)AND(t0.c20)))AND(vt1.c0)))AND(t0.c20)))AND(vt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON ((((((((t0.c20)AND(t0.c20)))AND(vt1.c0)))AND(t0.c20)))AND(vt0.c1)) COLLATE BINARY WHERE (((NULL) NOTNULL));
SELECT COUNT(*) FROM t0, vt1 NATURAL JOIN vt0 WHERE (CASE WHEN (vt1.c0 IN ('0.46743679853065')) THEN json_patch(vt0.c1, vt0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c0 IN ('0.46743679853065')) THEN json_patch(vt0.c1, vt0.c1) END) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0, vt1 NATURAL JOIN vt0 WHERE (CASE WHEN (vt1.c0 IN ('0.46743679853065')) THEN json_patch(vt0.c1, vt0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c0 IN ('0.46743679853065')) THEN json_patch(vt0.c1, vt0.c1) END) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0, vt1 NATURAL JOIN vt0 WHERE (CASE WHEN (vt1.c0 IN ('0.46743679853065')) THEN json_patch(vt0.c1, vt0.c1) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-246672961') ORDER BY ((TRIM(vt0.c1))||('-1268647560')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-246672961') IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(vt0.c1))||('-1268647560')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-246672961') ORDER BY ((TRIM(vt0.c1))||('-1268647560')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-246672961') IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(vt0.c1))||('-1268647560')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-246672961') ORDER BY ((TRIM(vt0.c1))||('-1268647560')) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((((vt0.c0)AND(t0.c20)))AND(t0.c20)))<>(CASE WHEN t0.c20 THEN t0.c50 END)) WHERE ((((t0.c50, t0.c20, vt0.c0)) NOT BETWEEN ((((t0.c20)>(-1.045787126E9)), CASE '-820535154'  WHEN vt1.c0 THEN t0.c20 END, CASE WHEN vt0.c0 THEN vt0.c1 ELSE t0.c50 END)) AND ((((vt1.c0)&(vt0.c0)), (vt0.c1 IN ()), ((t0.c20) NOTNULL))))) ORDER BY (('-356163029')IS((((((((('-1243331831')OR(vt1.c0)))OR(t0.c50)))AND(vt1.c0)))OR(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c50, t0.c20, vt0.c0)) NOT BETWEEN ((((t0.c20)>(-1.045787126E9)), CASE '-820535154'  WHEN vt1.c0 THEN t0.c20 END, CASE WHEN vt0.c0 THEN vt0.c1 ELSE t0.c50 END)) AND ((((vt1.c0)&(vt0.c0)), (vt0.c1 IN ()), ((t0.c20) NOTNULL))))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((((vt0.c0)AND(t0.c20)))AND(t0.c20)))!=(CASE WHEN t0.c20 THEN t0.c50 END)) ORDER BY (('-356163029')IS((((((((('-1243331831')OR(vt1.c0)))OR(t0.c50)))AND(vt1.c0)))OR(vt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((((vt0.c0)AND(t0.c20)))AND(t0.c20)))<>(CASE WHEN t0.c20 THEN t0.c50 END)) WHERE ((((t0.c50, t0.c20, vt0.c0)) NOT BETWEEN ((((t0.c20)>(-1.045787126E9)), CASE '-820535154'  WHEN vt1.c0 THEN t0.c20 END, CASE WHEN vt0.c0 THEN vt0.c1 ELSE t0.c50 END)) AND ((((vt1.c0)&(vt0.c0)), (vt0.c1 IN ()), ((t0.c20) NOTNULL))))) ORDER BY (('-356163029')IS((((((((('-1243331831')OR(vt1.c0)))OR(t0.c50)))AND(vt1.c0)))OR(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c50, t0.c20, vt0.c0)) NOT BETWEEN ((((t0.c20)>(-1.045787126E9)), CASE '-820535154'  WHEN vt1.c0 THEN t0.c20 END, CASE WHEN vt0.c0 THEN vt0.c1 ELSE t0.c50 END)) AND ((((vt1.c0)&(vt0.c0)), (vt0.c1 IN ()), ((t0.c20) NOTNULL))))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((((vt0.c0)AND(t0.c20)))AND(t0.c20)))!=(CASE WHEN t0.c20 THEN t0.c50 END)) ORDER BY (('-356163029')IS((((((((('-1243331831')OR(vt1.c0)))OR(t0.c50)))AND(vt1.c0)))OR(vt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((((vt0.c0)AND(t0.c20)))AND(t0.c20)))<>(CASE WHEN t0.c20 THEN t0.c50 END)) WHERE ((((t0.c50, t0.c20, vt0.c0)) NOT BETWEEN ((((t0.c20)>(-1.045787126E9)), CASE '-820535154'  WHEN vt1.c0 THEN t0.c20 END, CASE WHEN vt0.c0 THEN vt0.c1 ELSE t0.c50 END)) AND ((((vt1.c0)&(vt0.c0)), (vt0.c1 IN ()), ((t0.c20) NOTNULL))))) ORDER BY (('-356163029')IS((((((((('-1243331831')OR(vt1.c0)))OR(t0.c50)))AND(vt1.c0)))OR(vt0.c1)))) ASC;
SELECT * FROM t0, vt0 WHERE (((((vt0.c0)GLOB(t0.c50))) NOT NULL)) ORDER BY (((('-902965184')OR(((vt0.c1)>(t0.c20)))))OR((~ (t0.c20))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(t0.c50))) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((('-902965184')OR(((vt0.c1)>(t0.c20)))))OR((~ (t0.c20)))));
SELECT * FROM t0, vt0 WHERE (((((vt0.c0)GLOB(t0.c50))) NOT NULL)) ORDER BY (((('-902965184')OR(((vt0.c1)>(t0.c20)))))OR((~ (t0.c20))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(t0.c50))) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((('-902965184')OR(((vt0.c1)>(t0.c20)))))OR((~ (t0.c20)))));
SELECT * FROM t0, vt0 WHERE (((((vt0.c0)GLOB(t0.c50))) NOT NULL)) ORDER BY (((('-902965184')OR(((vt0.c1)>(t0.c20)))))OR((~ (t0.c20))));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (((((vt1.c0) NOT NULL))-(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY CASE ((vt1.c0) NOT NULL)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN (vt1.c0 IN ()) ELSE CASE WHEN vt1.c0 THEN 0.5845200695102236 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL))-(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0) NOT NULL)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN (vt1.c0 IN ()) ELSE CASE WHEN vt1.c0 THEN 0.5845200695102236 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (((((vt1.c0) NOT NULL))-(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY CASE ((vt1.c0) NOT NULL)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN (vt1.c0 IN ()) ELSE CASE WHEN vt1.c0 THEN 0.5845200695102236 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL))-(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0) NOT NULL)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN (vt1.c0 IN ()) ELSE CASE WHEN vt1.c0 THEN 0.5845200695102236 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (((((vt1.c0) NOT NULL))-(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY CASE ((vt1.c0) NOT NULL)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN (vt1.c0 IN ()) ELSE CASE WHEN vt1.c0 THEN 0.5845200695102236 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (NULL);
SELECT COUNT(*) FROM t0, vt1 FULL OUTER JOIN vt0 ON t0.c20 WHERE (((((((((CAST(vt1.c0 AS REAL))OR(CASE WHEN vt0.c1 THEN t0.c50 END)))OR(((t0.c50) NOT BETWEEN (t0.c50) AND (vt0.c0)))))OR(vt0.c1)))AND((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt1.c0 AS REAL))OR(CASE WHEN vt0.c1 THEN t0.c50 END)))OR(((t0.c50) NOT BETWEEN (t0.c50) AND (vt0.c0)))))OR(vt0.c1)))AND((+ (vt0.c1))))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON t0.c20);
SELECT COUNT(*) FROM t0, vt1 FULL OUTER JOIN vt0 ON t0.c20 WHERE (((((((((CAST(vt1.c0 AS REAL))OR(CASE WHEN vt0.c1 THEN t0.c50 END)))OR(((t0.c50) NOT BETWEEN (t0.c50) AND (vt0.c0)))))OR(vt0.c1)))AND((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt1.c0 AS REAL))OR(CASE WHEN vt0.c1 THEN t0.c50 END)))OR(((t0.c50) NOT BETWEEN (t0.c50) AND (vt0.c0)))))OR(vt0.c1)))AND((+ (vt0.c1))))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON t0.c20);
SELECT COUNT(*) FROM t0, vt1 FULL OUTER JOIN vt0 ON t0.c20 WHERE (((((((((CAST(vt1.c0 AS REAL))OR(CASE WHEN vt0.c1 THEN t0.c50 END)))OR(((t0.c50) NOT BETWEEN (t0.c50) AND (vt0.c0)))))OR(vt0.c1)))AND((+ (vt0.c1)))));
SELECT * FROM t0 NATURAL JOIN vt1 WHERE (CAST(CASE t0.c20  WHEN t0.c20 THEN t0.c50 WHEN NULL THEN vt1.c0 WHEN t0.c20 THEN t0.c20 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE t0.c20  WHEN t0.c20 THEN t0.c50 WHEN NULL THEN vt1.c0 WHEN t0.c20 THEN t0.c20 END AS REAL)) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT * FROM t0 NATURAL JOIN vt1 WHERE (CAST(CASE t0.c20  WHEN t0.c20 THEN t0.c50 WHEN NULL THEN vt1.c0 WHEN t0.c20 THEN t0.c20 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE t0.c20  WHEN t0.c20 THEN t0.c50 WHEN NULL THEN vt1.c0 WHEN t0.c20 THEN t0.c20 END AS REAL)) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT * FROM t0 NATURAL JOIN vt1 WHERE (CAST(CASE t0.c20  WHEN t0.c20 THEN t0.c50 WHEN NULL THEN vt1.c0 WHEN t0.c20 THEN t0.c20 END AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c1)) COLLATE BINARY);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((t0.c50 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c50 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((t0.c50 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c50 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((t0.c50 COLLATE RTRIM IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((((vt0.c0))<((vt0.c1))))OR(((((vt0.c0)OR(NULL)))OR(vt1.c0)))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0))<((vt0.c1))))OR(((((vt0.c0)OR(NULL)))OR(vt1.c0)))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((((vt0.c0))<((vt0.c1))))OR(((((vt0.c0)OR(NULL)))OR(vt1.c0)))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0))<((vt0.c1))))OR(((((vt0.c0)OR(NULL)))OR(vt1.c0)))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((((vt0.c0))<((vt0.c1))))OR(((((vt0.c0)OR(NULL)))OR(vt1.c0)))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY CAST((~ (vt1.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST((~ (vt1.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY CAST((~ (vt1.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST((~ (vt1.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY CAST((~ (vt1.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON '	dXL' RIGHT OUTER JOIN vt1 ON (((((vt1.c0) ISNULL)))==((vt0.c0))) WHERE (ABS(vt0.c1));
SELECT SUM(count) FROM (SELECT ((ABS(vt0.c1)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON '	dXL' RIGHT OUTER JOIN vt1 ON (((((vt1.c0) ISNULL)))==((vt0.c0))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON '	dXL' RIGHT OUTER JOIN vt1 ON (((((vt1.c0) ISNULL)))==((vt0.c0))) WHERE (ABS(vt0.c1));
SELECT SUM(count) FROM (SELECT ((ABS(vt0.c1)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON '	dXL' RIGHT OUTER JOIN vt1 ON (((((vt1.c0) ISNULL)))==((vt0.c0))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON '	dXL' RIGHT OUTER JOIN vt1 ON (((((vt1.c0) ISNULL)))==((vt0.c0))) WHERE (ABS(vt0.c1));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (vt0.c0 COLLATE BINARY) AND (UNLIKELY(vt0.c0)))) ORDER BY (((vt0.c1 IN ())) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (vt0.c0 COLLATE BINARY) AND (UNLIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ())) ISNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (vt0.c0 COLLATE BINARY) AND (UNLIKELY(vt0.c0)))) ORDER BY (((vt0.c1 IN ())) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (vt0.c0 COLLATE BINARY) AND (UNLIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ())) ISNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (vt0.c0 COLLATE BINARY) AND (UNLIKELY(vt0.c0)))) ORDER BY (((vt0.c1 IN ())) ISNULL) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c0, vt0.c0)))IS(NULL))) ORDER BY CAST(vt0.c0 AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (vt0.c0, vt0.c0)))IS(NULL))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS TEXT) DESC);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c0, vt0.c0)))IS(NULL))) ORDER BY CAST(vt0.c0 AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (vt0.c0, vt0.c0)))IS(NULL))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS TEXT) DESC);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c0, vt0.c0)))IS(NULL))) ORDER BY CAST(vt0.c0 AS TEXT) DESC;
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON CASE NULL  WHEN LIKELIHOOD(t0.c20, 0.9064540468210838) THEN MIN(vt0.c0, vt0.c0) END WHERE (((CAST(vt1.c0 AS INTEGER))<(((t0.c50)*(t0.c50))))) ORDER BY '-0.0'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER))<(((t0.c50)*(t0.c50))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON CASE NULL  WHEN LIKELIHOOD(t0.c20, 0.9064540468210838) THEN MIN(vt0.c0, vt0.c0) END ORDER BY '-0.0'  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON CASE NULL  WHEN LIKELIHOOD(t0.c20, 0.9064540468210838) THEN MIN(vt0.c0, vt0.c0) END WHERE (((CAST(vt1.c0 AS INTEGER))<(((t0.c50)*(t0.c50))))) ORDER BY '-0.0'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER))<(((t0.c50)*(t0.c50))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON CASE NULL  WHEN LIKELIHOOD(t0.c20, 0.9064540468210838) THEN MIN(vt0.c0, vt0.c0) END ORDER BY '-0.0'  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON CASE NULL  WHEN LIKELIHOOD(t0.c20, 0.9064540468210838) THEN MIN(vt0.c0, vt0.c0) END WHERE (((CAST(vt1.c0 AS INTEGER))<(((t0.c50)*(t0.c50))))) ORDER BY '-0.0'  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN '0.8395713074222284' ELSE vt1.c0 END)-(((vt1.c0)==(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN '0.8395713074222284' ELSE vt1.c0 END)-(((vt1.c0)==(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN '0.8395713074222284' ELSE vt1.c0 END)-(((vt1.c0)==(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN '0.8395713074222284' ELSE vt1.c0 END)-(((vt1.c0)==(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN '0.8395713074222284' ELSE vt1.c0 END)-(((vt1.c0)==(vt1.c0))));
SELECT * FROM t0, vt0 WHERE (((((t0.c50) IS FALSE)) NOT BETWEEN (CAST(t0.c20 AS BLOB)) AND ('513229362'))) ORDER BY (vt0.c1 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c50) IS FALSE)) NOT BETWEEN (CAST(t0.c20 AS BLOB)) AND ('513229362'))) IS TRUE)  as count FROM t0, vt0 ORDER BY (vt0.c1 IN ()));
SELECT * FROM t0, vt0 WHERE (((((t0.c50) IS FALSE)) NOT BETWEEN (CAST(t0.c20 AS BLOB)) AND ('513229362'))) ORDER BY (vt0.c1 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c50) IS FALSE)) NOT BETWEEN (CAST(t0.c20 AS BLOB)) AND ('513229362'))) IS TRUE)  as count FROM t0, vt0 ORDER BY (vt0.c1 IN ()));
SELECT * FROM t0, vt0 WHERE (((((t0.c50) IS FALSE)) NOT BETWEEN (CAST(t0.c20 AS BLOB)) AND ('513229362'))) ORDER BY (vt0.c1 IN ());
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (((t0.c50 COLLATE BINARY))<=(((vt0.c0 IN (t0.c20))))) WHERE ((~ (t0.c50)) COLLATE BINARY) ORDER BY (t0.c50 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c50)) COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((t0.c50 COLLATE BINARY))<=(((vt0.c0 IN (t0.c20))))) ORDER BY (t0.c50 IN ())  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (((t0.c50 COLLATE BINARY))<=(((vt0.c0 IN (t0.c20))))) WHERE ((~ (t0.c50)) COLLATE BINARY) ORDER BY (t0.c50 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c50)) COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((t0.c50 COLLATE BINARY))<=(((vt0.c0 IN (t0.c20))))) ORDER BY (t0.c50 IN ())  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (((t0.c50 COLLATE BINARY))<=(((vt0.c0 IN (t0.c20))))) WHERE ((~ (t0.c50)) COLLATE BINARY) ORDER BY (t0.c50 IN ())  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((vt1.c0)GLOB(x'8205')) COLLATE NOCASE) ORDER BY TYPEOF(TRIM(DISTINCT 1.659456015E9, vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)GLOB(x'8205')) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY TYPEOF(TRIM(DISTINCT 1.659456015E9, vt1.c0)) ASC);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)GLOB(x'8205')) COLLATE NOCASE) ORDER BY TYPEOF(TRIM(DISTINCT 1.659456015E9, vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)GLOB(x'8205')) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY TYPEOF(TRIM(DISTINCT 1.659456015E9, vt1.c0)) ASC);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)GLOB(x'8205')) COLLATE NOCASE) ORDER BY TYPEOF(TRIM(DISTINCT 1.659456015E9, vt1.c0)) ASC;
SELECT * FROM vt0, t0, vt1 WHERE (((t0.c50)<>(t0.c20)) COLLATE RTRIM) ORDER BY IFNULL(vt0.c0, vt0.c1) COLLATE NOCASE ASC, ((((vt0.c1)|(vt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((t0.c50)!=(t0.c20)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY IFNULL(vt0.c0, vt0.c1) COLLATE NOCASE ASC, ((((vt0.c1)|(vt1.c0))) NOTNULL));
SELECT * FROM vt0, t0, vt1 WHERE (((t0.c50)<>(t0.c20)) COLLATE RTRIM) ORDER BY IFNULL(vt0.c0, vt0.c1) COLLATE NOCASE ASC, ((((vt0.c1)|(vt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((t0.c50)!=(t0.c20)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY IFNULL(vt0.c0, vt0.c1) COLLATE NOCASE ASC, ((((vt0.c1)|(vt1.c0))) NOTNULL));
SELECT * FROM vt0, t0, vt1 WHERE (((t0.c50)<>(t0.c20)) COLLATE RTRIM) ORDER BY IFNULL(vt0.c0, vt0.c1) COLLATE NOCASE ASC, ((((vt0.c1)|(vt1.c0))) NOTNULL);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON t0.c50 WHERE (((((((((t0.c50)AND(((vt0.c0) BETWEEN (t0.c50) AND (vt0.c1)))))AND(TRIM(DISTINCT vt0.c0))))AND(CAST(vt0.c0 AS REAL))))AND(NULLIF(vt0.c0, vt0.c1)))) ORDER BY (CAST(vt0.c1 AS TEXT) IN (x'4152'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c50)AND(((vt0.c0) BETWEEN (t0.c50) AND (vt0.c1)))))AND(TRIM(DISTINCT vt0.c0))))AND(CAST(vt0.c0 AS REAL))))AND(NULLIF(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON t0.c50 ORDER BY (CAST(vt0.c1 AS TEXT) IN (x'4152'))  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON t0.c50 WHERE (((((((((t0.c50)AND(((vt0.c0) BETWEEN (t0.c50) AND (vt0.c1)))))AND(TRIM(DISTINCT vt0.c0))))AND(CAST(vt0.c0 AS REAL))))AND(NULLIF(vt0.c0, vt0.c1)))) ORDER BY (CAST(vt0.c1 AS TEXT) IN (x'4152'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c50)AND(((vt0.c0) BETWEEN (t0.c50) AND (vt0.c1)))))AND(TRIM(DISTINCT vt0.c0))))AND(CAST(vt0.c0 AS REAL))))AND(NULLIF(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON t0.c50 ORDER BY (CAST(vt0.c1 AS TEXT) IN (x'4152'))  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON t0.c50 WHERE (((((((((t0.c50)AND(((vt0.c0) BETWEEN (t0.c50) AND (vt0.c1)))))AND(TRIM(DISTINCT vt0.c0))))AND(CAST(vt0.c0 AS REAL))))AND(NULLIF(vt0.c0, vt0.c1)))) ORDER BY (CAST(vt0.c1 AS TEXT) IN (x'4152'))  NULLS FIRST;
