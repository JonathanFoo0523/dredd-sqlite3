-- Time: 2024/06/11 00:21:37
-- Database: database81
-- Database version: 3.40.0
-- seed value: 3546733181
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
CREATE TABLE t1 (c0 TEXT ); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t1 VALUES (x''); -- 0ms;
PRAGMA integrity_check; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL); -- 0ms;
PRAGMA temp.checkpoint_fullfsync = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2112007227); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '44317'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (0.3825095419761695); -- 1ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1155620042); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0=x'48044e5d', c0=NULL WHERE (((((((((((x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR(((vt0.c0) IS FALSE))))OR(CAST(vt0.c0 AS TEXT))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)); -- 0ms;
UPDATE t0 SET (c0)=(0xffffffff9931dcb9) WHERE ((((t0.c0)+(t0.c0)))OR(((t0.c0)+(t0.c0)))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR FAIL t0 SET (c0)=('h'); -- 0ms;
REINDEX; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1385955716); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 408038999); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '56666'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE vt0 SET (c0)=(NULL) WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c0) AND (((vt0.c0) NOTNULL))); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE t0 SET c0=0.3046798100565128; -- 0ms;
UPDATE OR REPLACE vt0 SET c0='}6'; -- 0ms;
REINDEX; -- 0ms;
CREATE TABLE IF NOT EXISTS t1 (c0 INTEGER ); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0X3f60a436), (NULL), ('1063298102'); -- 0ms;
UPDATE t0 SET c0='1063298102', c0=x'' WHERE ((0.5360878873444591)LIKE(t0.c0)) COLLATE BINARY; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 BEFORE DELETE ON t0 WHEN CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '-1724785479' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS BLOB) BEGIN DELETE FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN ((t0.c0 IN (t0.c0))) AND (UNLIKELY(t0.c0)));DELETE FROM t0;END; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '63266'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1629048495); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1043383076);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '37373'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR ABORT vt0 SET (c0, c0, c0)=('}6', 0.6367490521328952, NULL); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX  t0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA journal_mode = WAL; -- 0ms;
REINDEX; -- 0ms;
UPDATE t0 SET c0=1063298102 WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)AND(t0.c0 COLLATE RTRIM)); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 831348212); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA default_cache_size; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.004614144197637615); -- 0ms;
REINDEX; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0, c0)=(0.3648226884901987, NULL) WHERE (((vt0.c0)-(vt0.c0)) IN ()); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='-1666084358'; -- 0ms;
UPDATE t0 SET (c0, c0)=('1449371700', x''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.application_id; -- 0ms;
UPDATE t0 SET (c0)=(NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL, c0=NULL, c0=0.10094982719347234 WHERE (t0.c0 IN ()) COLLATE RTRIM; -- 0ms;
PRAGMA main.soft_heap_limit; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE vt0 SET (c0)=(1.063298102E9) WHERE CAST((vt0.c0 IN ()) AS INTEGER); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i44 ON t0((((c0)) NOT BETWEEN ((LOWER(DISTINCT c0))) AND ((((c0)>=(NULL))))) COLLATE RTRIM) WHERE ((c0)%((~ (c0)))); -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=(x'9013') WHERE ((((t0.c0) NOT BETWEEN (0.13956447504717207) AND (t0.c0))) BETWEEN ((((('.x')OR(t0.c0)))OR(-1.724785479E9))) AND (((t0.c0) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN highlight('92460871', 0X6eb0c32c, '}6', NULL) THEN TRIM('2041289249', x'') END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1857078060; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(LIKELY('-541485668'), ((((((((0.5360878873444591)AND('685472035')))AND(0.6775742292181979)))OR(0X79ab9a21)))AND(x'eda9')), 'B'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-345333286 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN (0Xffffffffcaa0f8bd)))&(TYPEOF(DISTINCT 1579568689))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1510110112 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', '-345333286 sz=1579568689'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=1554187565 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('2041289249') AND (0.8420231859548577))) NOT BETWEEN (LTRIM(NULL)) AND (((-1e500)<>(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=360229121'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1686962359 503260297 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('.X') BETWEEN ('}܈vNeCl') AND (x''))  WHEN ((NULL) BETWEEN ('0.0') AND ('1991260265')) THEN (+ (0.3942580043153948)) WHEN (NOT (1.579568689E9)) THEN '' WHEN (((x'4366b5a6')) NOT BETWEEN (('360229121')) AND ((NULL))) THEN ((((x'')AND(-895420227)))OR(0.8134213969884195)) WHEN ((x'')/(0.9150897344701495)) THEN (x'' IN (0.10094982719347234)) WHEN ABS('1686962359') THEN ((NULL)/('-378650050')) ELSE ((0.5360878873444591)>(x'665b')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1914164944 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', '2 sz=-1210841336 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6924113978867427)!=(NULL))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE))OR(CASE '9)S\r^v㥯'  WHEN x'' THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-1069390257 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE TYPEOF(DISTINCT x'')  WHEN ((0.13956447504717207)<=(0.6912460017107849)) THEN (~ (0.40398115646894184)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', '-1336378198 sz=-1182866384'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-1182866384 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6658036395786806) ISNULL)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '0 sz=1449371700 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 sz=-1431649014 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NULL IN ()) THEN CAST(NULL AS BLOB) ELSE (NOT (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-325956791'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (LIKELY(x'd90d'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 sz=-86563693 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '*KP#d'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULLIF('', '쌬B')))>=(((+ (-1750228217))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.04116700495651726)%(x'')) THEN ((NULL)&(0.6865773182421455)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(x''))<=(LIKELIHOOD(DISTINCT NULL, 0.5530077724053271))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1661306313 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(9.2460871E7 AS TEXT) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-1666084358 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1036699281')AND('aL>㒚dFৱMꨆ')))AND(x'1820')))>>((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-539310818'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN ('441654834') AND (x'2532')))<>((988724598 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=503260297 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', '-587815464 sz=-302758397 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.3199902606816136 COLLATE RTRIM) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '0 0 988724598'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '360229121 sz=-1352421730 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=861127623 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=-1582978481 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('638203574' IN ()), (((''))>=((0.4248254947528882))), x'' COLLATE BINARY))>=(((0.47961370423007 IN ()), (((x'')) NOT BETWEEN ((x'')) AND ((0.2641273307079792))), x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=669642830 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '988724598 sz=1686962359 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=432146929 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-1889914835 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 sz=-656149888 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1855368578 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1800157927'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8893844257777198) BETWEEN (-1289941962) AND ('495070113')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-272303590'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((NULL)AND(0.03085393307897699)))OR(x'a57f'))  WHEN '' THEN ((x'') IS TRUE) WHEN (('739029056') NOT BETWEEN (NULL) AND (x'')) THEN (((('')OR(0xffffffffaaaac50a)))AND(0.7130995570650835)) WHEN 0.3956955668554393 COLLATE NOCASE THEN ((NULL)GLOB(NULL)) ELSE (- (0X65463851)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0x630585c9  WHEN 3.60229121E8 THEN NULL WHEN '' THEN 0.6865773182421455 WHEN -968198409 THEN 843299024 END) BETWEEN ((('95785340') NOTNULL)) AND ((NOT ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(1.914164944E9 AS INTEGER) THEN (~ (NULL)) WHEN ((0.055834894511264443)==('-1366723588')) THEN (~ ('-0.0')) WHEN (((0Xffffffffac310c90)) NOT BETWEEN ((0.3825095419761695)) AND ((NULL))) THEN MAX(0.8298366011096117, '', 'qRFM7*n', x'dbdd') ELSE ((((1.85707806E9)OR(NULL)))AND(0.7082189931156369)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '52302006 sz=-68510747 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((4.41654834E8)) BETWEEN (('')) AND ((x''))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=351116265 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1507523808 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1780132358 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=-2110039267'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1710589478 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1666084358 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL)))/((('')<=('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.63429810056573)OR('-242278265'))) BETWEEN (((0.05349175379678672) BETWEEN ('-1336378198') AND ('KttTvzN'))) AND (x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7046498263933402 IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LIKELIHOOD(DISTINCT 0x43fc31c5, 0.7840633343807363) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('' AS INTEGER)))<>(((NOT (-1173021877))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ (HEX(DISTINCT '-1210841336'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-895420227 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((''))==((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1536408950 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST('盭l' AS TEXT))AND((+ (0.41005555961793994)))))AND(((x'')<(NULL)))))OR(((x'26fdf9f9') IS FALSE))))AND(x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('寒6zRSEZJ') NOT NULL) THEN x'' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1192674272 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=-1660791269 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0xffffffff9174f5d0 AS BLOB))GLOB(0.6001299231683386)); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '503260297'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE x''  WHEN NULL THEN NULL END))>(((('-1829734675') IS FALSE)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((('')AND(0.8625660722188759)))AND('1289598964')))OR(0.9155411805584902)))AND(NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2074408158'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN NULL THEN x'184b' ELSE '' END  WHEN ((x'271a')%(0.2917088633086503)) THEN LOWER(0.6227605772320662) ELSE CAST(x'' AS REAL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.386842163107217 COLLATE BINARY THEN 'ᭋa' COLLATE NOCASE ELSE CASE WHEN NULL THEN 0.526954072227253 WHEN '351116265' THEN 'fD' WHEN NULL THEN NULL END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=777013757'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(0.20880136074723665 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-541485668')>>(2.939661467051824E-4))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1152045374 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)%(0X5b93bd76)))>>(-1609373972 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN NULL END) NOT BETWEEN (NULL COLLATE RTRIM) AND (((x'88fe') NOT BETWEEN (0.25576990421847845) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1588899742'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)-(x'7b30')))AND(CAST(NULL AS INTEGER))))AND(x'0b26' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '2008945863 1510110112 sz=-242278265 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=441654834 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT ((NULL) ISNULL), (x'' IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1878532129 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=1136627433'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((- (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.10897272338101449; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT STRFTIME(NULL, NULL, x'', 0.9691352466508681, '9)S\r^v㥯'), CASE WHEN x'' THEN 0.8056260936988098 END); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', '2047490865 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '360229121 0 sz=359585526 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '571900570 sz=-14221904'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('52302006')AND(0.5594436958116585)))OR('寒6zrsezj')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('789901038') NOTNULL)))=((((NULL)>>(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' sz=1989621474 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(IFNULL(x'', '-1598007554') AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(0x3e30c324 AS REAL))OR(SQLITE_COMPILEOPTION_GET(-1.829734675E9))))OR(((0x260a36b6)>=(0.260398615240395)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1829734675 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-5.39310818E8)AND(NULL)))OR('TZ')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1044741577 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=1137851646 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x'c922f128')))/((+ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', '0 0 sz=-1 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1078908899 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 8.43299024E8; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('Z{')) NOT BETWEEN (((((0.3437954347235589))<(('-1598007554'))))) AND (((('-342837301') NOTNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1349523586 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) BETWEEN ('-947473339') AND ('2118554317')), ((x'')-(x'8290')), ((x'') BETWEEN (x'') AND ('-491607946'))))>=(((x'89c8' IN (0.25219723961070817)), (+ ('-1609373972')), 'tz'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((1.579568689E9, 0.42780002579985454, 0.25219723961070817)) NOT BETWEEN (('*&', 'c&Sl', '')) AND ((1140601285, 'U8kbI?', NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.53640895E9)OR('[]'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1885001276 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE UPPER(DISTINCT 'T|㕴4o')  WHEN CASE 0.9675035231861255  WHEN NULL THEN '-1818611979' ELSE '-1036699281' END THEN x'' END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=189265514 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((' 迟0iKIS+X')%('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SUBSTR(CAST(NULL AS REAL), ((NULL)-(-1433648699))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL) BETWEEN (x'') AND (0.7046498263933402)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2138949720'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '-1466705934 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=432146929'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0Xfffffffff5b0686a))<=((0.42780002579985454))) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=390416120'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') NOT NULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '-1107614262 1210283125 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) BETWEEN (x'') AND (0.8094922971841451)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('-2122677462'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.6336446736983796  WHEN '' THEN '' WHEN NULL THEN 0.8468521130246062 WHEN NULL THEN 0.7881020925856701 ELSE '' END)AND((((0.22127591683095094, -1.609373972E9, 0.5837906422613875))>((NULL, NULL, x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6054324038147936) ISNULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6918786238155689))=((NULL))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('F씞')&(NULL)))+(CAST(0.3942580043153948 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((((((('w')AND(NULL)))AND('-130713687')))OR(x'')))AND(x'6f35')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-587815464')OR(0.5360878873444591))  WHEN ((x'') BETWEEN ('JCS{/.t7<') AND ('-1391393113')) THEN ((0.6924113978867427) BETWEEN (NULL) AND (NULL)) ELSE (((((((('-2110039267')OR(x'd4c5')))OR(x'')))AND(NULL)))OR(x'47ff')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1940922073 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', '2 sz=-917247234 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('#jq<0', 0.4041657909096058, '-874799893')) BETWEEN ((0.13481068302494292, NULL, 0.3474744299872934)) AND ((NULL, -1322491800, 0.7482074839814733)))) NOT BETWEEN (NULL) AND (((x'') NOT BETWEEN (x'b52bfafe') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=2118554317 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-337616488 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-1569804245')IS(0.5223482542469848)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1714362888'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '1371517069'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1282770974 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1818611979 sz=-904152721 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0x14e8d820 IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((((('䎣p')OR(0.5610045284975734)))OR(NULL)))AND(NULL)))AND('2041289249')))OR('-1036699281')))AND(0x2c0cb040)))OR(CASE WHEN x'' THEN 0xffffffff8f5a302d WHEN '0.10897272338101449' THEN NULL WHEN x'' THEN 0.257200473367059 END)))AND(CAST(0.9159924642888162 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN 'JCS{/.t7<' THEN NULL ELSE '1289598964' END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=1521372266 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '0 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=-929946011 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1764187090 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '-1512854589 sz=540307092 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('908353579'))) BETWEEN (((x'') BETWEEN (x'') AND (NULL))) AND (CASE WHEN NULL THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((-2110039267, 0.19477648016713278, '-1210841336')) BETWEEN ((x'', x'', x'')) AND ((0.6775742292181979, NULL, x'7fe8'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL IN ('1764187090')))AND(((0.04293321407561179) BETWEEN (x'') AND (1.76418709E9)))))OR((+ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('%V', 0xffffffffd8e3f280, x'c548')) BETWEEN (('', '-?WW', 0.2945591055412291)) AND ((2008945863, NULL, x''))))GLOB(CAST('-1173021877' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((~ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((STRFTIME(x'f2ba15f8', -57372262, -1289941962, NULL, '-1321847097')) NOT BETWEEN ((((NULL)) BETWEEN ((0.25606371306578857)) AND ((NULL)))) AND ((((1e500))<((638203574))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '1989621474 sz=-2113227602 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE -2066210053; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-774205587 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1083878733 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (54395003 IN ())  WHEN ((-1036699281) BETWEEN (0.4278662166193732) AND (0.9891960990020321)) THEN (x'' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-2097338738 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=708051679 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN NULL THEN x'6efb' ELSE NULL END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=-895420227 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1686962359 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1582978481 sz=-1372500054 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0.8794472372162362)))%((+ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1206327054'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN ((NULL) IS FALSE) THEN (NOT (NULL)) ELSE (+ (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1914164944 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-770004164 sz=-1977284008 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=1536408950'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('-229166771')) BETWEEN ((0.1805557542437749)) AND ((x'')))  WHEN CAST(NULL AS BLOB) THEN ((NULL)<=(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL))>((0.3364155623168199))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1785199691'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=199519091 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE QUOTE(((0.7046498263933402) NOTNULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.22971003294586123; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')>(1331966899))))>=(('\rt' COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((NULL)AND('1659481021')))AND('b\r')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=942923577'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=777013757 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.2591049635679642) NOT NULL) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '532028374 sz=-975108182'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, 1137851646, -1.666084358E9))<=((NULL, 0.6367490521328952, NULL)))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('600611797')OR(x'9caf19cd')))AND('')))GLOB(CASE x''  WHEN x'' THEN x'' ELSE 0.33194525715823475 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' sz=1511938599 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1724785479 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=571900570'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=92460871 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=880967577 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-1362424242 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-484755771 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('h聩Zo0,U\n', '', '')) NOT BETWEEN ((0.776127644611568, 'A}D#', x'')) AND (('pDBhk', 0.257200473367059, 1.780132358E9))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-2072505854'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1710589478 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(0.334590417045488 AS REAL)))=(((((x''))<((0xffffffffc0e985d8)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1044741577 sz=333382517 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('gG' COLLATE RTRIM AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '460256434 sz=-272303590 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (NULL)) IN ((((x'1bca7b88')) BETWEEN ((x'')) AND ((5.7190057E8))), ((x'f151a3ab')AND('Gf5')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=1043383076'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-874540626 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'901c') NOT NULL))AND((((x'')) BETWEEN ((NULL)) AND (('Hjfg%p(s'''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1289598964; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT (x'483a')))AND((((NULL)) NOT BETWEEN (('0.5594436958116585')) AND ((0.3195893029109572))))))OR((0.863653629540429 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((4.32146929E8, -1241169919, '\na')) BETWEEN ((NULL, '', NULL)) AND ((x'', '\+N8Ey8', 0.5367896124497533)))) BETWEEN (((('2118554317'))<((NULL)))) AND (NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1005654446 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9196731177296672; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.6810494618374043) NOTNULL))OR(((0xffffffffbbe12076) NOTNULL))))AND(CAST(x'' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-867526967 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0X2c1fe282))<=((NULL))))AND(((0.14625506542895184)&(0.5054792577890713)))))OR((+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(-299479340, NULL)) NOT BETWEEN ((('R\r') NOT BETWEEN (0.63429810056573) AND (0.20920048795907342))) AND (x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN (CAST(x'' AS TEXT)) AND ((((0Xfffffffff558a058))<=((0.8195552134410486))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' sz=932334088 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=-968198409 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1796918937'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.04293321407561179)>(x'')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', '-1582978481'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 62621402 COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1975391318'))<>((x'')))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1699100753 -1366723588 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('c&Sl')) NOT BETWEEN (((- (x'04a5')))) AND ((x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('')<=('#_4')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1077257213 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((0.5763714843170645)OR(NULL)))AND(NULL)))AND(95785340)))OR(NULL)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NULL IN ()) THEN (NOT (x'')) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2002051934 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=2086719117 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=302434232 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((0.2058997021989366)OR(x'c3a5')))OR(NULL))  WHEN x'5045' COLLATE BINARY THEN CAST('1\n' AS REAL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', '2 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', '0 sz=1105468389 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=359846462'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=360229121 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', '466651398 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.31425145340823046, 8.61127623E8, 0.3474744299872934, NULL, ''))>((1139325179, '-1854605872', -6.56149888E8, NULL, x''))))-(CASE WHEN x'' THEN 0Xffffffffad5ad721 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '!n'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL)-(x'f68a')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=699728283'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '-1182866384 1043383076'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=300083567'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-1.182866384E9 AS BLOB) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(((0.6030404890739474) BETWEEN ('-1213005859') AND (NULL)), x''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2118554317'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9891960990020321)+(x'')))!=(((((NULL)OR(1570742990)))OR(0.6150152951788351)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' sz=-971124240'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-1 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((TRIM(0xffffffffe90378b8))AND(((x'') NOT NULL))))AND((((0X2790b2f, 0.6214512499343219, NULL))<=(('{}', 0.020152299761796222, NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '1780132358 sz=374083339 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '4 sz=198402497 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=453957796 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2021804927 sz=1087286159 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' sz=-2139603357 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=690895383 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(DISTINCT x'')) BETWEEN (((NULL)%(0.6918786238155689))) AND ((('-166526840') NOT BETWEEN (7.89901038E8) AND ('-1793804694')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'4146', '', 0.9891960990020321, x'f2da', x'')) NOT BETWEEN (('M?]r〵zs', '-1699465500', '', 1612363419, -1463225949)) AND ((x'', '', '', 1.137851646E9, '0.33194525715823475')))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2104652720'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=774698958'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 1167479466 sz=1449371700 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-2079888498 sz=-1062432725 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((NULL)AND('1588899742')))OR(x'')) THEN 0.8094922971841451 ELSE LIKELY(0.05001644881468936) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOTNULL))OR(((225887707) NOT BETWEEN (NULL) AND (0Xffffffffb7d40708)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('1070399955' AS REAL)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-413626505 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (SQLITE_COMPILEOPTION_GET('1136627433') IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '1699100753 -1878532129 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=38070628 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1991260265'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-429603879'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6001299231683386 COLLATE BINARY)<<(((((NULL)OR(0.28313942705603967)))OR(-1.7976931348623157E308)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((((('790457746', x'ebade653', 9.578534E7)) BETWEEN (('432146929', '899626356', NULL)) AND (('1554187565', x'', x''))))) AND (((x'39af' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<>('669642830'))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '-345333286 sz=1579568689 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=-716074437 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.24470333943309097)%('')))AND((('432146929')||('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('0.8056260936988098') NOTNULL) THEN ((0x5da5def9) NOT NULL) WHEN IFNULL(x'', x'2b9a1257') THEN (('')>=('')) WHEN (('-1406071664')/(NULL)) THEN CASE 0.45202042023723177  WHEN '' THEN 0xfffffffff7f5da22 WHEN NULL THEN '9)s\r^v㥯' WHEN NULL THEN NULL END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' sz=1330980701 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-1289941962 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1693926369 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('\oNv' AS TEXT) COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('Q\.'))<>((0xffffffff930b9393))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '212497208 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', '1293189929 sz=-2105349219 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', '-1991986074 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-242278265'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(x'' AS TEXT)  WHEN (('') NOTNULL) THEN 0.6367490521328952 COLLATE RTRIM ELSE NULLIF(NULL, '1136627433') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', '1800157927 2 sz=503260297 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.31432362376254586)) BETWEEN (((('')>>(0x6eb0c32c)))) AND ((((x'')+(0x49726286))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-1054628690'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('') NOT BETWEEN (x'9791') AND (2.77361818E8)))OR(0xffffffff891289ee)))AND(x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.40496376611172824 AS BLOB))-(json('-1701188422'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=1574326003 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1724785479 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'd89143bd' AS NUMERIC))>=(((NULL) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=615505280 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '0 sz=527001951 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=796221025 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.8204921375640958 COLLATE BINARY AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((1417237471)OR(NULL)))AND(0.5241558816209361)))OR((((0Xffffffff80579fc4, 0.07279970754383336, '-73610582')) BETWEEN (('U	/yV{', -242278265, '503260297')) AND ((x'', '727867918', 0.5521807803304907))))))OR(CASE 0X75a036e4  WHEN '' THEN 0Xfffffffff3f6382a END)))AND(CAST('1136627433' AS INTEGER))))OR(highlight('141732455', NULL, NULL, x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.819522069585092) NOT BETWEEN (0x6b125ace) AND ('-1173021877')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=-1615783584 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1344172546 IN ()))|(((NULL)LIKE(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' sz=1347091831 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '-1069390257 sz=-1582978481 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=736141628'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=373961792 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-491607946 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(0Xffffffffa213dcd7 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', '1989621474 0 sz=1988967813'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1559766510') NOT NULL) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' sz=1078908899'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') IS TRUE) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL)>>(0.7046498263933402)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1427983797'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('52302006')<(NULL)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '-1916453026 1065515908 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0xffffffffac310c90 AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6998965068084035; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json(''))>=((- (-378650050)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1800157927; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1.724785479E9)|((- (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '1816697641 sz=-86563693 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' sz=-1366723588'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', '-2047958019 sz=1554187565 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('-1609373972' AS TEXT) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.30280457913735226) NOTNULL))GLOB(PRINTF('-1582978481', '-371997055', -657268464))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NULL IN ()) THEN ((0.6016247785903751)<=(NULL)) WHEN ',{&1(p\H' THEN (('0.260398615240395') BETWEEN (0.5391100512811934) AND ('1449371700')) WHEN ((-2.074408158E9)>=(NULL)) THEN UNLIKELY(DISTINCT 0.8457045953289372) ELSE ((NULL)OR(0.05001644881468936)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT '₎<(6') COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '757927687 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -21694263 sz=-724308943 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((MAX('', x'7202', NULL, '358318181'))OR(((x'45d4') NOT NULL))))AND(CAST(x'' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=1699100753 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=2008945863'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('d혽' AS INTEGER) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0.5837906422613875)))|((((('')AND(-302758397)))AND('-1889914835')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS BLOB))+(CASE WHEN NULL THEN '6%/2谾z' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('qrfm7*n', x'8a55', '1510110112', 'iq5웖tAR', x'c136'))<(('', '', NULL, 0.18658781758429677, 556974815))) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 657242820 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '-2107316400 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=35993143 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1864398913 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)*((('JJsB()') NOT BETWEEN ('8篍') AND ('Z{')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1824883197 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN (0.1718587972209774)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.8830976986851492 AS TEXT) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')&(x'05de'))) NOT BETWEEN ((('9)S\r^v㥯')<=('-1046241237'))) AND (x'cf29' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)|(2.77361818E8)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-345333286 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=685766543 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-345333286 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1044741577 sz=1989621474'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(CASE WHEN 0.24350016801468144 THEN 0.9149049309566548 WHEN x'' THEN NULL WHEN 0.19967579180159611 THEN ',{&1(p\H' ELSE 0.27756304012204525 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', '0 sz=705706351 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('0.9691352466508681' COLLATE BINARY) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=1078908899 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '2673915 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-342837301)OR((('2104322379') BETWEEN (0.9317529589524525) AND ('0.2917088633086503')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-397091744'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY(0.07948057833787314))!=(((-242278265)LIKE(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=410309928'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.39557483527573667; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=163317895 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'4451')-(0.13008615024216064)) IN ((((0.008980940309964436, x'', 0X7cfec86e))<=((x'c9ba', x'', 0.23569560503879217))), (((('\rXgLVAXb')AND('-701259935')))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC)) NOT BETWEEN (CAST(x'' AS TEXT)) AND ((('1618405099')/('1681739058')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS BLOB) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-134873609 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'cb6d' COLLATE BINARY)<<(((((x'6a01')OR('-1173021877')))OR(0.6870211463649976)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'D3~''*sPMy'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1554187565 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1117537455 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-939642804' IN ()))>((((x''))>((0X14ed9be9))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=1105498411 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1724785479 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=92460871'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 sz=-130847815'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-2122354397'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((4.41654834E8) IS TRUE)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1513296771 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')LIKE(-3.7865005E8)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xfffffffffad7ff07, 0Xffffffffc3775a39, NULL)) BETWEEN ((CASE WHEN 0.20920048795907342 THEN NULL END, (('95785340')*(x'')), (('1265572245') NOTNULL))) AND ((('351116265' IN ('1043383076', x'e64e')), (('5r0%댳⻵2')OR(NULL)), x'' COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1204069748 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=789901038'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1736142085 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-1676353673 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0x7e4692cd COLLATE NOCASE  WHEN (((x'')) NOT BETWEEN ((x'')) AND ((x'98f3'))) THEN ((0.11928902595361246)<<(1140601285)) WHEN ((NULL) ISNULL) THEN ((x'4407')GLOB('')) WHEN (0.898094437144124 IN ()) THEN ((x'2e58')||('669642830')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '670662078 sz=571900570 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '4 sz=49477095'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', '-2053248797 711573568 sz=-2011997703 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN x'4f30' THEN 0.25576990421847845 ELSE '' END)AND((+ (0.2618411545838959)))))AND((((('595641264')AND('-345333286')))AND('-1889914835')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((((((x'71a0')OR('-1854605872')))OR(0.6918786238155689)))AND(x'')))AND(0X2e5049fd))  WHEN ((0.3588497508062125) IS TRUE) THEN x'' WHEN (((NULL))==((0.24876427621461772))) THEN (NULL IN (-284391950)) WHEN ((1345275560)IS(NULL)) THEN (0x69275bd2 IN ()) ELSE (x'' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '2 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1724785479 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=1044741577'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-985234683'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1585892859 sz=1095641381'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('h7ls' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(x'', x'53ea'))|(141184919 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1292219788 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('⟦2vY㕴＇')-(3.59585526E8)))>=(('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1182866384 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN NULL THEN '711018631' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=244485923'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT NULL)) BETWEEN (((x'')OR(NULL))) AND ((((x'', x'', NULL))<>((x'', NULL, NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('495280191')*(NULL))) BETWEEN (CASE WHEN NULL THEN NULL WHEN NULL THEN '>Y' WHEN '2067731638' THEN x'' END) AND ((NOT (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', '0 -2027247796 sz=-587815464 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', '934587595 sz=1536408950 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1875105021 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.030945432510421922)AND(0.2591049635679642)))OR('')))GLOB(((0.6054324038147936)<=(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=506562423'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 sz=-919317783 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1863402027 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=1044741577 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '-1222971637 1044741577 sz=-1414720887'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' sz=277361818 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (NULL) AND ('*gX''')))GLOB(((NULL) NOT BETWEEN (NULL) AND (0.9379395749899313)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '-306126343 4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((CASE -262630128  WHEN '\na' THEN NULL WHEN x'' THEN x'' WHEN '' THEN '988724598' END)) AND ((((NULL) NOT BETWEEN ('sMRB') AND (''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-647187787 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1727434886 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-1176988170' AS TEXT))IS NOT(CAST(0.19477648016713278 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN ((x'')) AND ((0.6001299231683386))))&(CASE WHEN NULL THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(TYPEOF('1e500000v43Uk-5!K') AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1724785479 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((NULL)) BETWEEN (('935215369')) AND ((NULL))) THEN (('2.939661467051824E-4') IS TRUE) ELSE 0.061285525165251875 COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x'476a'))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-842728288') NOT BETWEEN (x'') AND (-1666084358)) IN (x'a7e5')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE UPPER(DISTINCT x'6d4b')  WHEN (0x7bde7841 IN ()) THEN (('0.8298366011096117') IS FALSE) ELSE ((0.15206934869782684)*('432146929')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', '-1171668297 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((('TRUE')AND('-1352421730')))AND(NULL)))OR(0x79ab9a21)))OR('z5*aMQ}')) IN ((((('-134297349')AND(0.3178558826771454)))OR(NULL)), LIKELY(0.8579394618815596))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', '0 -1660791269 sz=0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', '-577610848 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=579622594 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (SQLITE_COMPILEOPTION_USED(NULL) IN ((('<扼hO,Ft') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' sz=-899664522 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((1.044741577E9) NOT BETWEEN ('-655285106') AND (0.6598728363196195)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=-1316523671 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((((((('432146929')OR('t*')))AND(x'')))OR('aL>㒚dFৱMꨆ')))AND(-2095220654)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT rtreenode(0X6947cedb, '.t9^㖔ꗘ]')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-242278265 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -1366723588 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'dcde') NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1043383076'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-399883734 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=773585609'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.0')) NOT BETWEEN ((((x'')IS NOT(NULL)))) AND (((((((((('1136627433')OR(NULL)))AND(NULL)))AND('Dm)')))AND(0Xffffffffc042664f))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' sz=1448200346'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1787210921 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '-657615646 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.22971003294586123 AS BLOB) IN (((((((((x'')AND(-1.750228217E9)))OR(NULL)))AND('')))AND(0.9333238622887214)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', '0 sz=1546189426'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((340833181)IS(NULL))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST('EQcZ,\nᭋ0*' AS INTEGER)  WHEN ((x'')>(7.39029056E8)) THEN (('-1889914835') IS FALSE) ELSE ((((((((x'')OR(NULL)))AND(-1784809679)))AND('278624727')))AND('')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '1507523808 sz=-455221568 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1256626194 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-763253024 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('e?' IN (0.39704508506974123)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-758207056'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-251776998 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(((((NULL)OR('1602700088')))AND('1043383076')), 0.4544024047733074); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', '0 sz=459552616 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((((x'')OR(x'86c8')))AND(0.15736482092067827)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-510912973 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('1405510347')<>('fd')))OR(((0.3116555979389797)LIKE(0xffffffffe6df2d9e)))))AND((('')*(NULL)))))AND(IFNULL(NULL, x''))))AND('1536408950')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-199140705 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((NULL)AND(NULL)))OR(NULL)))OR(0Xffffffffb60be61c)))OR(0xffffffffe64dc5f8)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3399422977585814)) BETWEEN (((x'4bb2' IN ()))) AND (((('k)')&(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN (0.6918786238155689) AND ((~ (x'29c4')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' sz=-882554294 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', '-404814925 sz=-656149888 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1855368578 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' sz=-378650050 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '569495217'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-115177072'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1519836158 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 0 sz=-1173021877 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((((x'')AND(0.9414742891866844)))OR(0.7371546576482217)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKE(0.23838522493023429, -1152045374, 'U'))==(((((((((0Xffffffffc13ece67)OR(x'')))AND(x'')))OR(x'b7e8')))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', '0 2008945863 sz=1554187565'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.807812912872125  WHEN x'2047' THEN 0x3f60a436 END COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1638881290 sz=-968198409 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1854605872 sz=895041551'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.4873002125053264)AND(NULL)))AND('1554187565')))AND(NULL)))OR(x''))) NOT BETWEEN (CAST(x'6a0c' AS NUMERIC)) AND ((-781035934 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1217034262 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-1165870166 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=277361818 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.431649014E9, 0.8776050220206035, 0.6001299231683386)) NOT BETWEEN (((((('')OR('-1057434648')))AND(x'')), ((1220215806) BETWEEN (-1243342852) AND (0.9713102137571809)), ((NULL)OR('1526098883')))) AND ((((((((((0.33194525715823475)OR('685472035')))AND(NULL)))OR(x'6399')))AND(NULL)), CAST(NULL AS TEXT), ((x'6516') BETWEEN (NULL) AND ('m'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-378650050 sz=441654834'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((TRIM(x'5db4', x'2b40'))AND(CASE WHEN 0x5000fd9e THEN x'a07e2aa0' ELSE x'' END)))OR(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=87355399 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '718451392'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('#_4') IS FALSE))AND((NULL IN (x'65de', x'')))))OR((((('-1724785479')AND('TRUE')))OR(0x3d8b623c)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 0 sz=-1036699281 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('1289598964')>=('1417564750')) THEN ((0X6f39b67d)%(x'')) ELSE ((x'')=(0X77be14c7)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'' IN ()) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X2817e52) BETWEEN (0.055693294407994975) AND (''))) NOT BETWEEN (((NULL)OR(x'c897'))) AND ((('XB81[ﶰ')IS(0.448058562796225)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', ' sz=-17732196 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 sz=-342837301 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT))<(CAST(36737975 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(x'872b' AS BLOB))OR(((x'') NOT BETWEEN (x'a5c3') AND ('\rŦ1u')))))AND(((((NULL)OR(x'e7bd')))AND(x'')))))OR((((']*ri')) NOT BETWEEN ((0.14446209571412072)) AND ((x'59c9'))))))OR(CASE '441654834'  WHEN 0.9833146857443783 THEN NULL WHEN 133012559 THEN x'20eb' WHEN 'S.' THEN '1270388916' ELSE '326067405' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN ('266273076') AND (''))) BETWEEN (CAST(0.8985136074709333 AS NUMERIC)) AND (LOWER(DISTINCT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1829734675 sz=-690852448 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i44', '2 4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-2124656792' AS BLOB)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(DISTINCT 0.23022274654585284, '寒6zRSEZJ'))*(((NULL) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2074408158 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-325956791 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=794525211 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-78549924 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=948551854 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.08407422175327117 COLLATE NOCASE)>>(((((x'70cc')AND(NULL)))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1554187565 sz=-2057876405 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('/?') ISNULL) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (json_patch('Y8T|O', 0.8886669548245442) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('899626356')*(x'5cfe'))) NOT BETWEEN ((~ ('ᇑ娈 Or\n'))) AND (((x'')<=(x'c3bb')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-211915785 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN NULL THEN NULL ELSE NULL END)AND((0.329366690310403 IN ()))))AND(('' IN ()))))OR(((x'3b7d')GLOB(0.260398615240395)))))OR(((0.44083392896798035) NOT BETWEEN (0.1805557542437749) AND (0x6f1c329e)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')>>('gf5'))) BETWEEN ((NULL IN (625052545))) AND (((x'') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-1236659337 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' sz=928068810 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=1223874972 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' sz=-9223372036854775808 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1519878690'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'' IN ()) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.08783944548528166; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE 0.05313217786754476  WHEN 1.507523808E9 THEN NULL ELSE NULL END)OR(CHAR(0.9837797444630318))))OR(((x'')%('1e500000v43uk-5!k')))))OR(((((0.4697339863008334)OR(92460871)))OR(NULL)))))AND(UPPER(0.06438758063442007))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1855368578 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x79ab9a21; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '-299454488 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i44', ' sz=-760811243 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.07312415118863713), (x''), (1011711504); -- 0ms;
ALTER TABLE t0 ADD COLUMN c91 BLOB; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '46161'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=12'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='899626356' WHERE (((vt0.c0 IN ())) BETWEEN ((- (vt0.c0))) AND (((NULL)<=(vt0.c0)))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '57613'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (x'9128'); -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 255615013); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=4'); -- 0ms;
UPDATE OR REPLACE t0 SET c0='', c91=x'', c0=NULL WHERE ((((t0.c0) IS FALSE))OR((+ (t0.c0)))); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE vt0 SET c0='899626356' WHERE (+ ((+ (vt0.c0)))); -- 0ms;
PRAGMA busy_timeout; -- 0ms;
PRAGMA threads = -6915385430934400395; -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ('-780609553'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
DROP TABLE IF EXISTS t0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1080509767,7');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-2136119558,15');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((('509337201')AND(x'')))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (0.8680997989282733)))OR(((861127623)AND('1192674272')))))OR((((NULL))==((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1784216154'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE)>=(((NULL)%(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-2043580326')&(x'')))OR(CAST(455669912 AS INTEGER))))OR((((('')AND('1220071136')))OR(0.4027861035065611)))))AND(NULLIF(DISTINCT x'', x'7cff'))))AND((~ (0.06486126841857964)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1991260265 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-?WW', 2118554317, 0.5610045284975734))>=((0.3629824635973742, x'', 0.629350500622293))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.643678534455978)IS NOT(0.03085393307897699))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 2 sz=1800157927 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1780132358 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((-1069390257)OR('-1336378198')))OR('-oc_ig.O혽'))))==((((x'') BETWEEN ('Y]Eya&[') AND (0x453dd99))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '351116265 0 sz=-1724785479 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1742095631 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1570557589'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-325956791 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-253192391 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.9631669750045025, -1055285039, '-1423292046')) BETWEEN (('-2076215743', '寒6zRSEZJ', '-1724785479')) AND (('', x'f4d4', NULL)))) IS FALSE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1889914835'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((GLOB(x'', '%V')) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1563633678 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('301215959' AS TEXT) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -1490067943 sz=-1889914835'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=124326833 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('' IN ()))AND(((NULL) IS FALSE))))AND(((x'87c5') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('qQD2')) NOT BETWEEN ((((((0.745349714769053)OR(x'67693182')))OR('AF')))) AND ((SQLITE_COMPILEOPTION_GET('gz')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('1989621474' AS REAL))OR('-86013867' COLLATE NOCASE)))OR(UPPER(DISTINCT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'25f1' AS NUMERIC) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-890495802 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('53')||(x'0678'))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1696974212 sz=717137910'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-6.8510747E7) NOT BETWEEN (0.9262273996979368) AND (NULL)))AND((+ ('-1750228217')))))AND(CASE WHEN 0.605898788107159 THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>(''))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('⟦2vY㕴＇' COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.35667136043468173; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2126424702 -1521431315 sz=-331109971 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1257176535 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-998308756 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(((x'fc3a')|(NULL)), 0.4841471824299597); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1914164944 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1768074148 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'066e'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-611840756 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1589666299 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2133327836 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '789901038 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(((NULL) ISNULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- ('360229121')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1780132358'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1325396293'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '276798742 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('m,I') BETWEEN (x'') AND (0X71e29990)))AND(314035309 COLLATE RTRIM)))OR('1996010675' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-71209775 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((NULL, 0.3265923637250998, -1.609373972E9)) NOT BETWEEN ((-140204432, '1\rcrCA', '-1069390257')) AND (('1855368578', '1044285485', '>鳋')))  WHEN (NOT (1.53640895E9)) THEN '{e' COLLATE NOCASE ELSE CAST('5zH·ⲟS⻵' AS INTEGER) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.5407903243816813 IN ()))AND(((-2066527091) IS FALSE))))OR(((NULL) NOT BETWEEN (NULL) AND (0.2791601177388404)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=71488902 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE 0X12a06cfc  WHEN '0.0' THEN '-2074408158' WHEN 'FQ쵖f	A' THEN '-1818611979' WHEN x'' THEN '1156104072' WHEN x'' THEN x'' WHEN x'' THEN '0.6924113978867427' ELSE 0.9579304492536971 END))>((((x'') ISNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('-86563693')LIKE('-448978684')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1918829635 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('1629982161')))||(CASE WHEN x'' THEN '' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=899626356'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((0.7074437842901654)) BETWEEN (('{aa1匲L')) AND (('}3*Fr'))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR('')))|(((0.1662321127106946)<<('t䄓QRu镯1jf')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-905412514 sz=-326450678 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1233846314'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1336157503 sz=1710589478 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.848327532334475 COLLATE NOCASE)AND((('\rt')+(0.5610045284975734)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-587559871 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'')OR(NULL)))AND('432146929')))OR('1789488227')))OR((((NULL, 3.60229121E8, NULL))<=((0.9679111679947916, '1554187565', '0.4041657909096058'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-711994030 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=311650831 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('uK', NULL, '2118554317', NULL, x''))>=((0.5251886855424417, NULL, NULL, NULL, NULL))) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '899626356 0 sz=2008945863 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('-1433402362')AND('x93|4%4|죍')))AND('1214098763')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1818611979 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1747482370)=(0.6214512499343219))) BETWEEN (CASE WHEN 0x260a36b6 THEN NULL END) AND ((('-1829734675')=('-268392409')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- (7.77013757E8))  WHEN ((NULL)GLOB(NULL)) THEN (('549339005') ISNULL) WHEN CAST('1686962359' AS REAL) THEN ((-1366723588)>=(x'')) WHEN ((0.6336446736983796)||(0.1869614132524401)) THEN CAST(x'' AS REAL) ELSE (((-1677463495)) BETWEEN ((NULL)) AND ((0.9050281834641779))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '473836086 0 sz=-345333286 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((8.61127623E8 IN ()))=((('jGS') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2138099602 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5608431926194969 COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('0.3825095419761695')) NOT BETWEEN ((x'')) AND (('902790478'))))IS NOT(json(899626356))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1235073821 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-302758397 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1554062698'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ' '; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-505369916 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('1089435813' IN ()) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1587391893 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1026119708'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1758936354 sz=2124056399 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=390870738 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1664124764'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5763714843170645; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1598007554'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('K?p&')<<('Gf5')))>((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1784097906 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 sz=-913399750'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-342837301 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-579016667'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=789901038 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0xffffffff88272c5a)))LIKE(((x'832b') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((1884249793 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.25489035346414546, '', x'279b')) BETWEEN ((0.1970415813425591, 'e?', 0.3942580043153948)) AND (('-0.0', 0.6369658160007075, '')))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1344667602 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 1338700438 sz=351116265 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-305327809'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=1129844748 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1554187565 sz=447108639 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 853694956'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 423502989'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1409101014 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2074408158 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN '-302758397' ELSE x'' END)OR('1554187565' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=777013757'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=328715734 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1007481842'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1336378198 sz=287689557 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 5.2302006E7; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1270719223 sz=1860209124'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-272303590') ISNULL)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (json_patch(x'c0ba', x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-947473339 -1069390257'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2127703426 0 sz=-192380880'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-914570183 sz=866200948 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=736552132 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1210841336 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0Xffffffffd832cec1) NOT BETWEEN (x'') AND (0X647e622e))))>=((NULL COLLATE BINARY))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-2135322402)>=(x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '944631542 27176925 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(1.686962359E9 AS NUMERIC) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-242278265 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(((x'0ef0') NOT BETWEEN (NULL) AND ('0.05001644881468936'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1540760730'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-648003530 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 589781099 1525121183 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '785225560 0 sz=217850996 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1724351133 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (0.2992527626058281 IN ()) THEN CAST(NULL AS TEXT) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=58693009 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((((((NULL)OR(NULL)))AND('311955969')))) AND ((CAST(0xfffffffff81b7b47 AS BLOB)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-213037118 sz=604640890 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1078303240'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffd31eccdb; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>('*￿')))IS NOT(((((NULL)OR(x'')))OR('⻵Hq')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-302758397 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (1.914164944E9)) COLLATE RTRIM COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('>y' COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=25611280 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (0.5621668459541441) AND (x'')))*(((NULL)||(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 4 sz=766041812 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1914164944'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-829606902 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-250225012 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1224379440 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=92460871 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1349523586'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-68510747 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-1609373972' AS BLOB))-((('jb')IS(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5844517205024135, NULL, NULL)) NOT BETWEEN ((TRIM(0.790791541102023, x'c7f2'), ((('.t9^㖔ꗘ]', 2.008945863E9, ''))>=((1137851646, 0.6918786238155689, 0.2039154293283898))), TYPEOF(x''))) AND ((load_extension(NULL), TYPEOF(0.791284375703117), '843299024' COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('qQD2') NOT BETWEEN (NULL) AND (NULL)), ((x'') NOT BETWEEN (NULL) AND (0.8474992505611981)), -1724785479 COLLATE NOCASE))<=(((NULL IN ()), ((('789901038', '-656149888', 'C[[G/3'))<>((NULL, 1.85707806E9, NULL))), 0X705ad63c COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=757053871 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '686432390 sz=-1750228217 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=611898300 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1529789533 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('	yJ*2Yu' COLLATE BINARY)>(NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'' IN (x'', x'')))OR(((((957313877)AND('0.2945591055412291')))OR('~q_<fT_j')))))OR(ROUND('>Ykr', x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.2348078804663113, x'5d58', x'', -539310818, '1991260265'))==((x'dc40', 'B₇', 0X79ab9a21, x'', 0.2197528018045588)))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(TRIM(x'b920', -2.074408158E9), 0.5542252989098908); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.8195552134410486') NOT BETWEEN (NULL) AND ('''D')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-968198409 sz=1533732952 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('+l') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-799988304'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'aac8c56a') BETWEEN (NULL) AND ('53')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1485884387 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1901095795 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1198197688 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-3.7865005E8) ISNULL)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=638203574 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=631859807'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1173021877 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<<(''))) NOT BETWEEN (((x'') NOT BETWEEN ('yzNu') AND (0.15453676102558123))) AND ((~ (0.8022709516408522)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 1477832156 sz=2106025716'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN ('1137851646') AND (x'2bd0')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1962497726 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN ABS(0.5658065761337443) THEN NULLIF(DISTINCT NULL, '277361818') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 302084940 sz=503260297 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1818160646 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-968198409 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.07275730557373317 COLLATE RTRIM))<>(((('A,wE0,fv') NOT BETWEEN ('b芚 xgR') AND (0.2464679414117853))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=503260297'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT 'gJ'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1536408950 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=638203574'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=777013757 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.1805557542437749)) BETWEEN ((NULL)) AND (('-950501638')))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS INTEGER) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1152822140 sz=1997709929 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('H%+藉?A7Lz' IN (ABS('0.9691352466508681'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((''))<((((6883762) NOTNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=917595418 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '185718011'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1241711927 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.666084358E9)==(x''))) NOT BETWEEN ((('1661306313') IS FALSE)) AND (0.2641273307079792)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('r\r') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1468923065') ISNULL))&(((NULL) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=420122938 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1024201712 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) BETWEEN ((((1.579568689E9) BETWEEN (0.8195552134410486) AND (x'')))) AND ((((0.9456481223084617)OR(0.37390444685337787))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5214069419265116; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN (((('-1366723588')>(803850394)))) AND ((((NULL) NOT BETWEEN (x'') AND (4.41654834E8))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '928837023 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1224839409 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-925658510 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1339429090 sz=95785340 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=623360438 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1162985678 sz=1455847998 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('ᇑ娈 Or\n'))<>((x'df0b' COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1655132148 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (x'' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(0.006278772393380039)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST('-789720217' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '382947276 sz=678402583 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)>(NULL)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('-989371790' AS BLOB) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1989621474 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL) NOT BETWEEN ('965027117') AND (x'f542')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffbd38bef9)%(277361818))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2040490828 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN ('-613942969') AND (NULL)))LIKE(x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('52302006' IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1699100753'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.2477726417558942; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1136627433 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.878282753185856)AND('Sኯ')))OR('1080110214')))AND(1991260265)))OR('932201783')))==(((0.386842163107217) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('Gf5' AS REAL)) BETWEEN ((((('oK')OR(0.26953549913499397)))OR('6ĹJ3*⒓'))) AND (x'10c4')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 0Xffffffffd1959be6 THEN '0.004614144197637615' WHEN '䛸btD' THEN 0.25606371306578857 WHEN x'' THEN '351116265' END)OR(((x'') BETWEEN (0.40398115646894184) AND (NULL)))))OR(QUOTE('1710589478'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1793285874' COLLATE BINARY)OR((x'3574' IN ('	*O0Z')))))OR(x'' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-242278265'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1900621742 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((JULIANDAY(x'', '?\!|', '-1036699281')) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-342837301 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-642627021 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=441654834'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1793153520 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(NULL)))AND('277361818'))) BETWEEN ((x'a0f9' IN ())) AND (((0x43bf8ee9)>(0.2058997021989366)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'')+(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE)>=(-236480125 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-270793915 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((936598798 IN ()))*(CASE WHEN 0.854767250522411 THEN 0.062018915433299626 WHEN 0xffffffff849367a3 THEN '-1' WHEN 0.47235137726909093 THEN 'F# S^kSkX' ELSE 0.6924113978867427 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(UNLIKELY(DISTINCT 'E.qI[敞') AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((((((0X5b5917c)AND('w')))OR('-1324495098')))OR('')))AND(0.6650401922999348)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -68510747 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-431656698 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1366139374'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(CASE WHEN 0.670360916915466 THEN '-1582978481' WHEN '1699100753' THEN '899626356' WHEN 'DilLMa磕,' THEN '-1069390257' ELSE 0.06687013210340509 END, CAST(0X514fc655 AS REAL), (((NULL, '-624823176', 0x1d1fdd0f))<=(('%S', '', NULL))), ((NULL) IS TRUE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-180841333 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1935741645 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.6001299231683386) IS TRUE) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.5743942028579753)IS NOT('342709434')))OR(0X6254b85e)))AND((('1110439386')>>('60051826')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2036529461'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') ISNULL))OR(((0.526954072227253) NOTNULL))))OR(x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=694183559'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1889914835 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8581273694163156)) NOT BETWEEN ((CHAR(-1.336378198E9, '', NULL, x'', x''))) AND (((0Xffffffffda1af71c IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)OR('1686962359')))AND('843299024')))AND((((0.09093964343015204, x'', '-622297622'))<=((x'', x'dbfb', x''))))))OR(CASE WHEN 0.3825095419761695 THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('d혽')>('/?')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((((((('-1750228217')AND('KU!H,k騡C')))OR(NULL)))OR(NULL)))AND('xk\n> \CX5')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((709001862) BETWEEN (x'') AND (0.8195552134410486))) BETWEEN ((0.27425811608498785 IN (x'17e59df0'))) AND (json_remove(NULL, 0.164194395906887))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1449371700 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '777013757 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=945054305 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-6855263'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1013803085 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1841382623 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(')0' AS NUMERIC) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (x'e5e0' IN (x'', x'')) THEN (((('烞㗔R9PSS')AND('')))OR(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-1092627422)OR('R\r')))OR(0Xffffffff8ca1a0c1)))<(((((0.04062073929261312)OR('![W뢃')))OR(0X1578a901)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 2 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL((('772976864')OR('-325956791')), x'9a4b'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('2060165795' IN ()) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1507523808' IN ('d0OBtl5', -55798280)))OR((('^\r') IS FALSE))))AND(((((((((',{&1(p\h')OR(x'c41b')))AND(x'9e80')))OR(0Xffffffffbb552ec2)))OR(0x6eb0c32c)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1020210835 0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1495465653 -1477571991'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('1\n' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1497710362'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'2c59')+('2041289249')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 1510110112'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE(CAST('2101707560' AS INTEGER)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 843299024 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=559935131 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '778228141 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1855368578 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT ((x'') NOT NULL), ((NULL)&(x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('Gf5') BETWEEN (NULL) AND ('S.')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '351116265 1158266459 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'94d16010')AND('߲')))OR(x'ec42')))AND(x'428a')))OR(NULL)))<=('z&?G5EZ>' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1431649014 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-435990199 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'9b28e48c' IN ()))&((-1.854605872E9 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0x648d00b7 AS BLOB))AND(((((x'7299')AND(NULL)))AND(-1574821698)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST('v*Z!-vsc자' AS NUMERIC)  WHEN CASE '-1609373972'  WHEN x'' THEN '寒6zRSEZJ' END THEN NULL COLLATE NOCASE ELSE ((NULL) NOT BETWEEN (0.9174432113216011) AND (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT (((('2041289249')OR(NULL)))OR('}a'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (0.6288652707231258) AND (x'')))+(0.7677299400027817)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-345333286'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-570158135 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1046585386 sz=-1608204797 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-895420227 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-86563693'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('-1278823421')))>>(((1857078060)GLOB(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))<=(('H聩ZO0,U\n'))))OR('!B')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((0.49640029615330605)AND('1%')))OR(0.5824500467812351)))AND(NULL)))AND('-26573637')))OR('SK')))AND(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1857078060 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')=(NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1078908899'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1810905094 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1656536904'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=899626356 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)AND(x'')))OR(x'')) IN (((-2087749010)==('v')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=375486304 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1303058795'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-14221904 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2104266105 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1449371700 sz=171328657 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1368734472 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN x'fec3' THEN NULL ELSE '㒚㬱鰁0㦾' END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-68510747' IN ()) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) NOT NULL)  WHEN ((0.10364279069992322) IS TRUE) THEN json_valid(NULL) WHEN ((x'')GLOB(x'dc6f')) THEN ((('1764187090'))>((0.4948342341860522))) WHEN ((((0.7997554431844937)OR(x'')))OR(x'b86f')) THEN ((NULL) NOT BETWEEN (-739599537) AND (NULL)) ELSE CASE WHEN 0xffffffff8bd8f7f2 THEN NULL END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1578206543 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-968285494 -378650050 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(CAST(0.0024456771089905738 AS REAL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-839583116 1513505163 sz=1122278892 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ('aw0淬' IN ()) THEN ('' IN ('al>㒚dfৱmꨆ')) ELSE ((x'')<('495070113')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1507828038'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '892549690 sz=-1952578637 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (x'4fec')))AND(((x'')LIKE(NULL)))))AND(x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<=(NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1138818489 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.610154686469394) NOTNULL))OR((((-1378139238)) BETWEEN ((0Xfffffffffacab668)) AND (('b-'))))))OR(CAST(NULL AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1799778644 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '209600834 sz=1926557822 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'792b') IS FALSE))*(NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1661306313 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=626827275 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('ZfW' COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) NOT BETWEEN ((NULL)) AND ((0.8751248313351925)))) BETWEEN ((NULL IN ())) AND ((('hF歮nꕃ〭咛G')IS NOT(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x''))) NOT BETWEEN (((x'')AND(0x590bcb5b))) AND (CAST(x'ca7f' AS BLOB))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1899060608 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((NULL)AND(x'')))OR(0.863653629540429))  WHEN ((1.078908899E9)-(0.5944110108645569)) THEN -2089176942 COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (1965663859))) BETWEEN (((((0.5826983314495313)OR('1808708363')))OR(0.08316947564325217))) AND (CASE WHEN x'' THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((NULL)OR(NULL)))AND(8.43299024E8)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=988724598'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9143303858952522; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- (x'7321'))  WHEN ((5.2302006E7)IS(NULL)) THEN (((''))>((x''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-1106909569 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 sz=-521173127 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=797352594 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('1983840725')))OR((+ (0.8463446256101396)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '1579568689'  WHEN x'' THEN x'' WHEN x'35ef' THEN NULL WHEN '	뱒tb' THEN NULL WHEN 0.5367896124497533 THEN NULL WHEN NULL THEN x'9272' END)<(((NULL)GLOB(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1658639583 sz=1711559543 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATETIME((((((((('xf')OR('1078908899')))AND(NULL)))OR(0xffffffffeb6aa1da)))OR(NULL)), CASE NULL  WHEN 0.48559176413206107 THEN x'' WHEN 0.257200473367059 THEN NULL WHEN x'' THEN '-1357987903' END, 0.3364155623168199); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2118554317 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1638085884 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1043383076 sz=-25860320 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2025278393'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '223409224 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN (x'5370bfb1') AND (NULL))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'ec45') ISNULL), '' COLLATE NOCASE, ((((0x77be14c7)AND(NULL)))OR(NULL)), (((('-539310818')AND(1808150596)))OR(x'')), 'ԕd<KB'))>((json_type(NULL), ((('{F', NULL, 0.06848045995816865)) NOT BETWEEN (('1536408950', '1153621798', 1.588899742E9)) AND (('0.8056260936988098', -2077000709, x''))), (x'23ee' IN ()), (0.010975398967736139 IN ()), ((('1279881410'))<=(('1914164944')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1991260265 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (UPPER(NULL) IN (((0.3750650662173487) IS TRUE), NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(ABS(DISTINCT NULL) AS TEXT); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-345333286') NOTNULL))AND(((0.4815936498290968) BETWEEN (0x79ab9a21) AND (0.7759833554848048)))))OR('')))AND(CAST(382005593 AS INTEGER))))AND('~W럴r')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.9891960990020321) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2111105205 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1854605872 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1536408950'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1822674611 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1889419575 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<=(NULL))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-276991091 sz=-302758397 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-242278265 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=270635814 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-465278897 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 326238458; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffff939a2ef5, '', NULL)) NOT BETWEEN ((CAST(x'ac670f39' AS INTEGER), 0.7965333368176123, CASE WHEN '787818618' THEN 'k)' END)) AND ((((x'5b7c') IS TRUE), CASE NULL  WHEN 1.53640895E9 THEN NULL WHEN NULL THEN ',d꠴6s1' WHEN 0Xffffffffb44173fc THEN x'' ELSE NULL END, (((x'')) BETWEEN ((-1846402204)) AND ((0.020152299761796222)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2033763382 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'a2d3', '-1951074469', 0x43bf8ee9, x'', '-1410022344')) NOT BETWEEN (((((NULL)) NOT BETWEEN ((NULL)) AND ((x'd9db'))), CASE NULL  WHEN -1152045374 THEN -5.87815464E8 END, (((''))>=((0.7771488191381052))), (NOT (0.46516420391115587)), -1696068360)) AND (((+ (0X56e0184e)), (('-1833613159')>=(9.88724598E8)), CASE WHEN 0x393b7059 THEN x'' ELSE NULL END, (('M鹢a') BETWEEN (NULL) AND (x'2d45')), ((NULL) NOT NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.34044606822588375) NOT BETWEEN (x'') AND (0.2058997021989366)))IS NOT(CASE x'de29'  WHEN 0.5223482542469848 THEN NULL WHEN '1945299004' THEN '' WHEN NULL THEN '' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=669642830 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1857078060'))>=((NULL))))GLOB(CASE WHEN NULL THEN 0.5367896124497533 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((LIKELY('7'))OR((((x'', 'je', 'nK'))<=((-1967662507, NULL, NULL))))))OR(((NULL)>(x'aa62efef')))))AND(CASE '360229121'  WHEN x'' THEN x'6100' END)))AND(x'30b3')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1406071664 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-879945982 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffdcc5cf66 IN ()))%((((x'62c1')) BETWEEN (('-D.꼬,A|gJ')) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.295949001864936; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1988188375 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE '5C97Y~[8v'  WHEN '861127623' THEN x'4ff2' ELSE 2012155011 END THEN 0.745077243216257 ELSE CAST('' AS TEXT) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.6367104812688714)OR('')))OR('81G?t	'))) BETWEEN (((NULL) BETWEEN ('988724598') AND (x''))) AND (((0.9245206282603302)/(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2008945863'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=452801317 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=1914164944 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1289941962 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '786985495 sz=1158861108'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1686962359 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-191588135'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((-68510747)OR(51794771)))OR('')))AND(NULL)))OR(0.019107067997725435)))AND(((((x'f08e863c')AND(x'')))AND('1479342838')))))OR((((1140601285))>((0.20338147485397728))))))AND(NULL COLLATE NOCASE)))AND(CASE NULL  WHEN NULL THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '276261897 sz=-302758397 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)/(CASE NULL  WHEN 2120756234 THEN '1983900861' WHEN 0.5957123769804229 THEN 0.872797669532759 WHEN x'' THEN 899626356 ELSE 0.6058339336517968 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')<=(((x'') BETWEEN ('훐%|d/N䡴R') AND ('₎<(6')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.867184485829653)AND(NULL)))AND(load_extension(4.32146929E8))))OR(CASE WHEN 0X43d23cfe THEN '-646033902' END)))OR(NULL COLLATE RTRIM)))AND(CAST(x'' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x'')))OR(LIKELY(x'0743'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)>>('')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0X630585c9)) BETWEEN ((0.7421431067500085)) AND ((x''))))>(((0.1438553306653061) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5590134847678608)) BETWEEN ((((NULL)IS NOT('Ps_X^#/f?')))) AND (((('UR훐') NOT BETWEEN (0.9390850268240878) AND (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1750228217 1136550160 sz=699212766 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-55334430 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1210841336 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS NUMERIC))GLOB((('W9')||('Ow''_vhp>J')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-820841273 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('DM+2!7%> ') NOT BETWEEN (NULL) AND ('h')) COLLATE NOCASE COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) BETWEEN (-14221904) AND (x'5a7c')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'')))IS NOT(((x'') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) ISNULL) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0x782c5ac5 AS NUMERIC) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1598027852 sz=-33901930 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('717700350' IN ('1600376797'))) BETWEEN (('-464929589' IN ())) AND ((NOT (-9.68198409E8)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NULL IN ())  WHEN (('-587815464') NOT BETWEEN ('95785340') AND (0.04293321407561179)) THEN '1834194044' COLLATE NOCASE ELSE TRIM(0.932575444083161) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-1173021877 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.9227546599082317 IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5957307766598982 IN ())) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '220411588 2 sz=1855368578'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2053808845 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY(NULL))*(COALESCE(DISTINCT 0.7046498263933402, NULL, '\nbucU7-ﴛO', '}!g?~/!^'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8348015789871164)>(x''))) BETWEEN (((-198215327) BETWEEN ('-302758397') AND (x''))) AND (((NULL)IS('638203574')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1034059640 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-923309 sz=1078908899 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1970570026 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, NULL, -826241880))>=((x'', x'', x'')))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('') NOT BETWEEN (x'') AND (NULL)), ((x'') NOT NULL), ((x'5ddc')<=('0.3364155623168199'))))<=((((((NULL)AND('f,dwִn')))AND(NULL)), (x'' IN ()), CAST(0.9155411805584902 AS NUMERIC)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) NOT NULL) THEN ((x'997c')>>(NULL)) ELSE (('()')LIKE(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'e898')<=('-2074408158')) THEN x'' END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ('{E' IN (((0.7313892547789017)IS NOT(0.14104085410235134)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')&('o(')))&(('*xdFhkADy' IN (0.19188035761798405, 'xl9DD W')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1767670831 sz=-559644460 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1415286086 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=65368336 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1151711630 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-9223372036854775808 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN x'8a25d51e' THEN NULL WHEN '-272030830' THEN x'' WHEN x'' THEN NULL END AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=485031242'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7149114936684557 COLLATE BINARY)+((('503260297') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') ISNULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)!=('7C*6'))) BETWEEN (CAST(x'' AS NUMERIC)) AND (NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN NULL THEN '\n4' END)AND((((x'')) BETWEEN ((0.8653764361481002)) AND (('0.1805557542437749'))))))AND(((NULL)>=(0.4000386258116092)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1858733544; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.22715772713252458 THEN x'12e6' ELSE '1800157927' END) BETWEEN ((('?]')AND(0X14ed9be9))) AND (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffff9249d3d5; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)LIKE(0X3e30c324)))AND(CAST(0.3873084073508416 AS BLOB))))AND(((0.4044742593638485) NOT BETWEEN ('') AND ('[tFꀂ5')))))OR(((((')*wc2%r䂍%Hu')AND(0x27e9f04e)))OR(0Xffffffffb97ee430)))))AND(((x'') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-930738538 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1336378198'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 6.6964283E8 COLLATE BINARY  WHEN CAST(0.6865773182421455 AS REAL) THEN CASE WHEN '-1969788034' THEN x'' WHEN NULL THEN 0xffffffffd51a631f WHEN 0.5064985570941217 THEN x'' ELSE 843280033 END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-457532983 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=707660190 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '92460871 sz=-302758397 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1430959734 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((((x'1fdc')OR(-6.56149888E8)))OR(0.3167487277952641)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1 sz=1164007530 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) BETWEEN ((((((NULL)AND(x'')))OR('2118554317')))) AND ((((x'43f24730') NOTNULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL)<(0.08959243323104304)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN NULL THEN '' END THEN ((-8.6563693E7) IS TRUE) ELSE (0.8386632532005134 IN ('1507523808', NULL, 0xffffffffda62c776)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('R^&s]%' AS TEXT) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2141333008 sz=-826134426 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-302758397 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'f12c' THEN NULL ELSE 0.9915505967195131 END)<>((NOT (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND(x'', x'') COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2 sz=-1434938253 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-536297319 sz=-592940223'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-539310818 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('0.3942580043153948')AND('鯩Z')))AND('1710589478'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-325956791 sz=1981657154 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '636836233 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1588899742 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1958428139'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -1366723588 sz=-2002939577 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE x''  WHEN NULL THEN x'795a' END IN ((((('{-4zAᨫ')OR(NULL)))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2074408158 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1143539666 0 sz=101773778 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=432146929'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1346519876' IN ()))=(((((0Xffffffffe23649da)OR(NULL)))AND(0xffffffffd162383f)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.33005931455193105))=(((- (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1829734675 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1547882148 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1471793808 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-919325130'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')>>('495471160')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-687419343'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF(x'89df')) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1149790506'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-272303590 1510110112 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 8.99626356E8; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT ('495070113' IN ()), 0.007926419408881391); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((145805115)OR('359585526')))AND(x'')))%(0.5106882128357182)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'8dbb2551')<<('-302758397')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND(CASE 'p搴]'  WHEN '-1843659954' THEN '-113057364' WHEN 0.3195893029109572 THEN 0.10094982719347234 WHEN 0.7566290583366994 THEN x'9843' ELSE '' END, ((NULL) NOT BETWEEN ('') AND ('0.5594436958116585'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' COLLATE BINARY THEN (~ (-2.42278265E8)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '172605398' THEN x'' ELSE x'' END COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('\oNv')AND('0.6150152951788351')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1979842340 sz=-1244410699 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1036699281 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((x'')OR('-1829734675')))AND('-1352421730')) THEN '0.4248254947528882' COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1991260265'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(x'0e12', CAST(0.7389076763178268 AS REAL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.0027048804557939787)<(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=-342837301 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'7ff0') NOT NULL) IN (TRIM(0.15395394535017015, '(|팭_7'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE 0xffffffffba14c02a  WHEN '' THEN NULL ELSE '0.6924113978867427' END  WHEN (0.4807712515060857 IN ()) THEN CASE -1.366723588E9  WHEN NULL THEN -1.854605872E9 ELSE '' END WHEN (~ (0.6979401333336439)) THEN HEX('o띖') WHEN (('jb8') NOTNULL) THEN GLOB('z5*aMQ}', '0J') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1069390257'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 152337930 sz=1167742833 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'4d4d')OR(x'')))OR(NULL)))IS NOT((('-1878532129') BETWEEN (NULL) AND (1.588899742E9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8375525118164634)|(CAST(x'7d06' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL)))IS((('359585526')<<('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7444258088289949)AND(0.606369787444802 COLLATE RTRIM)))AND(NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1784191478 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(((x'')+(''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1780132358'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-802196171 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1588899742 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT UNLIKELY(0.9316421520612908)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1339844975'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1629490759'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE '-296448113'  WHEN NULL THEN 0.889415638268939 END)OR(((('155626578', 0.7846389933167734, NULL))<>((x'd9ba', NULL, NULL))))))OR((((NULL, x'', 1231831287))=((NULL, '95785340', '1417766676'))))))OR(((x'5d9e')>(NULL)))))AND(((NULL) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1829734675'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-440036132'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffaf63ae9e)IS('YOp-1,C4')))!=(CAST('-1431649014' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-273923730'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x''))>((NULL))))OR((('tY<')<(0xffffffffaaaac50a)))))AND((((''))>((351116265))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1084921604 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('934947106') NOT BETWEEN ('') AND (NULL))) NOT BETWEEN (x'53ba08ae' COLLATE RTRIM) AND (((-3.02758397E8)!=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=786585505 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB))%(((-1829734675) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('988724598' IN ()) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((0X59ba156 IN ()))OR(((((x'08b3')AND(0x55bdfef1)))OR('c_{b')))))AND(CAST(0.5837906422613875 AS REAL))))OR((('')<<(-3.02758397E8)))))AND((((NULL, 0.4450122621281607, x''))<(('-491607946', -1.829734675E9, '-491607946'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT (NULL)))OR(('' IN (1.554187565E9)))))OR((0.7414609377265147 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1460080135 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-809347888 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1983434633 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1991260265 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1152045374 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.5763714843170645) NOT BETWEEN (x'aa32') AND (x'abfa')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=405279160 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 1370315515'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(json(x'ff7e') AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -352943680);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 419610446); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA temp.auto_vacuum = FULL; -- 0ms;
ANALYZE vt0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT DISTINCT (((vt0.c0)) BETWEEN (('-810744435')) AND (((((NULL, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0)))))), vt0.c0, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (-1.660791269E9)))) FROM vt0; -- 0ms;
PRAGMA recursive_triggers = true; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x''); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL), (NULL), (x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'bbf6'); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES ('-1526742034'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE ((((vt0.c0 COLLATE BINARY)OR(vt0.c0)))OR((vt0.c0 IN ()))); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '2164'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('h'); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 1ms;
PRAGMA temp.shrink_memory; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0 WHERE ((((('1e500') NOTNULL)) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0) ISNULL)))) ORDER BY CASE WHEN ((vt0.c0)LIKE(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC, (((NOT (vt0.c0)))&(LENGTH(vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('1e500') NOTNULL)) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)LIKE(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC, (((NOT (vt0.c0)))&(LENGTH(vt0.c0))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((('1e500') NOTNULL)) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0) ISNULL)))) ORDER BY CASE WHEN ((vt0.c0)LIKE(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC, (((NOT (vt0.c0)))&(LENGTH(vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('1e500') NOTNULL)) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)LIKE(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC, (((NOT (vt0.c0)))&(LENGTH(vt0.c0))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((('1e500') NOTNULL)) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0) ISNULL)))) ORDER BY CASE WHEN ((vt0.c0)LIKE(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC, (((NOT (vt0.c0)))&(LENGTH(vt0.c0))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN '1' WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN '1' WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c0 END IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN '1' WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN '1' WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c0 END IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN '1' WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c0 END IN ()));
SELECT * FROM v0, vt0 WHERE (((((NULL) NOT NULL)) BETWEEN (CASE x''  WHEN vt0.c0 THEN v0.c2 END) AND (((v0.c1)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT NULL)) BETWEEN (CASE x''  WHEN vt0.c0 THEN v0.c2 END) AND (((v0.c1)-(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((NULL) NOT NULL)) BETWEEN (CASE x''  WHEN vt0.c0 THEN v0.c2 END) AND (((v0.c1)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT NULL)) BETWEEN (CASE x''  WHEN vt0.c0 THEN v0.c2 END) AND (((v0.c1)-(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((NULL) NOT NULL)) BETWEEN (CASE x''  WHEN vt0.c0 THEN v0.c2 END) AND (((v0.c1)-(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER));
SELECT ALL * FROM v0, vt0 WHERE (CASE ((x'')OR(v0.c2))  WHEN ((v0.c1)>>(v0.c2)) THEN (+ (v0.c2)) ELSE v0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE ((x'')OR(v0.c2))  WHEN ((v0.c1)>>(v0.c2)) THEN (+ (v0.c2)) ELSE v0.c2 END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CASE ((x'')OR(v0.c2))  WHEN ((v0.c1)>>(v0.c2)) THEN (+ (v0.c2)) ELSE v0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE ((x'')OR(v0.c2))  WHEN ((v0.c1)>>(v0.c2)) THEN (+ (v0.c2)) ELSE v0.c2 END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CASE ((x'')OR(v0.c2))  WHEN ((v0.c1)>>(v0.c2)) THEN (+ (v0.c2)) ELSE v0.c2 END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)*(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END END) ORDER BY ((((((((json_remove(vt0.c0, vt0.c0, -1431649014, vt0.c0))OR(((vt0.c0)*(vt0.c0)))))OR(((vt0.c0)+(vt0.c0)))))AND(((vt0.c0) IS FALSE))))AND(LIKELIHOOD('-oc_ig.O혽', 0.24156976537123886)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)*(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((json_remove(vt0.c0, vt0.c0, -1431649014, vt0.c0))OR(((vt0.c0)*(vt0.c0)))))OR(((vt0.c0)+(vt0.c0)))))AND(((vt0.c0) IS FALSE))))AND(LIKELIHOOD('-oc_ig.O혽', 0.24156976537123886)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)*(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END END) ORDER BY ((((((((json_remove(vt0.c0, vt0.c0, -1431649014, vt0.c0))OR(((vt0.c0)*(vt0.c0)))))OR(((vt0.c0)+(vt0.c0)))))AND(((vt0.c0) IS FALSE))))AND(LIKELIHOOD('-oc_ig.O혽', 0.24156976537123886)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)*(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((json_remove(vt0.c0, vt0.c0, -1431649014, vt0.c0))OR(((vt0.c0)*(vt0.c0)))))OR(((vt0.c0)+(vt0.c0)))))AND(((vt0.c0) IS FALSE))))AND(LIKELIHOOD('-oc_ig.O혽', 0.24156976537123886)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)*(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END END) ORDER BY ((((((((json_remove(vt0.c0, vt0.c0, -1431649014, vt0.c0))OR(((vt0.c0)*(vt0.c0)))))OR(((vt0.c0)+(vt0.c0)))))AND(((vt0.c0) IS FALSE))))AND(LIKELIHOOD('-oc_ig.O혽', 0.24156976537123886)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))+(vt0.c0))) ORDER BY NULL COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))+(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY NULL COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))+(vt0.c0))) ORDER BY NULL COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))+(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY NULL COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))+(vt0.c0))) ORDER BY NULL COLLATE BINARY  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE ((- ((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((~ (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((- ((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((~ (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((- ((~ (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)%(v0.c0))) NOT NULL)) ORDER BY ((CAST(v0.c2 AS BLOB))*(v0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)%(v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c2 AS BLOB))*(v0.c1))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)%(v0.c0))) NOT NULL)) ORDER BY ((CAST(v0.c2 AS BLOB))*(v0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)%(v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c2 AS BLOB))*(v0.c1))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)%(v0.c0))) NOT NULL)) ORDER BY ((CAST(v0.c2 AS BLOB))*(v0.c1))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) ORDER BY (vt0.c0 IN (NULL)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (NULL)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) ORDER BY (vt0.c0 IN (NULL)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (NULL)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)) ORDER BY (vt0.c0 IN (NULL)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0)<(vt0.c0)))))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('V鳔')))) NOT NULL)  NULLS FIRST, ((((vt0.c0)IS(vt0.c0)))<=(((((NULL)AND(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0)<(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('V鳔')))) NOT NULL)  NULLS FIRST, ((((vt0.c0)IS(vt0.c0)))<=(((((NULL)AND(vt0.c0)))AND(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0)<(vt0.c0)))))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('V鳔')))) NOT NULL)  NULLS FIRST, ((((vt0.c0)IS(vt0.c0)))<=(((((NULL)AND(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0)<(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('V鳔')))) NOT NULL)  NULLS FIRST, ((((vt0.c0)IS(vt0.c0)))<=(((((NULL)AND(vt0.c0)))AND(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0)<(vt0.c0)))))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('V鳔')))) NOT NULL)  NULLS FIRST, ((((vt0.c0)IS(vt0.c0)))<=(((((NULL)AND(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((NOT (v0.c1)))AND(v0.c0)))OR((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((NOT (v0.c1)))AND(v0.c0)))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((NOT (v0.c1)))AND(v0.c0)))OR((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((NOT (v0.c1)))AND(v0.c0)))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((NOT (v0.c1)))AND(v0.c0)))OR((- (vt0.c0)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (x'bc57');
SELECT SUM(count) FROM (SELECT ALL ((x'bc57') IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (x'bc57');
SELECT SUM(count) FROM (SELECT ALL ((x'bc57') IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (x'bc57');
SELECT * FROM v0, vt0 WHERE ((((v0.c0, v0.c1, NULL)) NOT BETWEEN ((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)), (('侍)ꨆa솗Gq') NOT BETWEEN (vt0.c0) AND (0.1510559344701108)), ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))) AND ((((((v0.c0)OR(v0.c1)))AND(v0.c2)), ((v0.c1)/(v0.c1)), ((0.6524708440914264)<<(v0.c2)))))) ORDER BY ((((vt0.c0)&(0.7291307101218034))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c1, NULL)) NOT BETWEEN ((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)), (('侍)ꨆa솗Gq') NOT BETWEEN (vt0.c0) AND (0.1510559344701108)), ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))) AND ((((((v0.c0)OR(v0.c1)))AND(v0.c2)), ((v0.c1)/(v0.c1)), ((0.6524708440914264)<<(v0.c2)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0)&(0.7291307101218034))) NOTNULL)  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE ((((v0.c0, v0.c1, NULL)) NOT BETWEEN ((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)), (('侍)ꨆa솗Gq') NOT BETWEEN (vt0.c0) AND (0.1510559344701108)), ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))) AND ((((((v0.c0)OR(v0.c1)))AND(v0.c2)), ((v0.c1)/(v0.c1)), ((0.6524708440914264)<<(v0.c2)))))) ORDER BY ((((vt0.c0)&(0.7291307101218034))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c1, NULL)) NOT BETWEEN ((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)), (('侍)ꨆa솗Gq') NOT BETWEEN (vt0.c0) AND (0.1510559344701108)), ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))) AND ((((((v0.c0)OR(v0.c1)))AND(v0.c2)), ((v0.c1)/(v0.c1)), ((0.6524708440914264)<<(v0.c2)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0)&(0.7291307101218034))) NOTNULL)  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE ((((v0.c0, v0.c1, NULL)) NOT BETWEEN ((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)), (('侍)ꨆa솗Gq') NOT BETWEEN (vt0.c0) AND (0.1510559344701108)), ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))) AND ((((((v0.c0)OR(v0.c1)))AND(v0.c2)), ((v0.c1)/(v0.c1)), ((0.6524708440914264)<<(v0.c2)))))) ORDER BY ((((vt0.c0)&(0.7291307101218034))) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE (TRIM(UNICODE(vt0.c0), ((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((TRIM(UNICODE(vt0.c0), ((vt0.c0) ISNULL))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (TRIM(UNICODE(vt0.c0), ((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((TRIM(UNICODE(vt0.c0), ((vt0.c0) ISNULL))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (TRIM(UNICODE(vt0.c0), ((vt0.c0) ISNULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (~ (vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (~ (vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (~ (vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE (v0.c0 IN (0.5973774443380722))  WHEN 1855368578 THEN ((vt0.c0) IS TRUE) ELSE (((v0.c1))<((v0.c0))) END) ORDER BY (- (vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (v0.c0 IN (0.5973774443380722))  WHEN 1855368578 THEN ((vt0.c0) IS TRUE) ELSE (((v0.c1))<((v0.c0))) END) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (vt0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE (v0.c0 IN (0.5973774443380722))  WHEN 1855368578 THEN ((vt0.c0) IS TRUE) ELSE (((v0.c1))<((v0.c0))) END) ORDER BY (- (vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (v0.c0 IN (0.5973774443380722))  WHEN 1855368578 THEN ((vt0.c0) IS TRUE) ELSE (((v0.c1))<((v0.c0))) END) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (vt0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE (v0.c0 IN (0.5973774443380722))  WHEN 1855368578 THEN ((vt0.c0) IS TRUE) ELSE (((v0.c1))<((v0.c0))) END) ORDER BY (- (vt0.c0)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN ((((vt0.c0))<=((-1692482065)))) AND (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0))) NOT BETWEEN ((((vt0.c0))<=((-1692482065)))) AND (vt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN ((((vt0.c0))<=((-1692482065)))) AND (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0))) NOT BETWEEN ((((vt0.c0))<=((-1692482065)))) AND (vt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN ((((vt0.c0))<=((-1692482065)))) AND (vt0.c0))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0 IN ())))<=(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))) ORDER BY 90220630  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 IN ())))<=(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))) IS TRUE)  as count FROM v0, vt0 ORDER BY 90220630  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0 IN ())))<=(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))) ORDER BY 90220630  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 IN ())))<=(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))) IS TRUE)  as count FROM v0, vt0 ORDER BY 90220630  NULLS LAST);
SELECT * FROM v0 WHERE ((NOT (0.03243307518726801)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NOT (0.03243307518726801)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT (0.03243307518726801)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NOT (0.03243307518726801)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT (0.03243307518726801)) COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE (CAST((v0.c2 IN ()) AS NUMERIC)) ORDER BY UNLIKELY(DISTINCT ((((((((v0.c0)AND(NULL)))AND(v0.c2)))AND(v0.c0)))AND(v0.c1)))  NULLS LAST, CAST(v0.c2 COLLATE BINARY AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((v0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY UNLIKELY(DISTINCT ((((((((v0.c0)AND(NULL)))AND(v0.c2)))AND(v0.c0)))AND(v0.c1)))  NULLS LAST, CAST(v0.c2 COLLATE BINARY AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CAST((v0.c2 IN ()) AS NUMERIC)) ORDER BY UNLIKELY(DISTINCT ((((((((v0.c0)AND(NULL)))AND(v0.c2)))AND(v0.c0)))AND(v0.c1)))  NULLS LAST, CAST(v0.c2 COLLATE BINARY AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((v0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY UNLIKELY(DISTINCT ((((((((v0.c0)AND(NULL)))AND(v0.c2)))AND(v0.c0)))AND(v0.c1)))  NULLS LAST, CAST(v0.c2 COLLATE BINARY AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CAST((v0.c2 IN ()) AS NUMERIC)) ORDER BY UNLIKELY(DISTINCT ((((((((v0.c0)AND(NULL)))AND(v0.c2)))AND(v0.c0)))AND(v0.c1)))  NULLS LAST, CAST(v0.c2 COLLATE BINARY AS TEXT) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(v0.c1 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(v0.c1 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(v0.c1 COLLATE RTRIM AS INTEGER));
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN v0.c0 COLLATE RTRIM ELSE ((vt0.c0)<=(x'')) END) ORDER BY (v0.c0 COLLATE BINARY IN ((('wfA&tc')>=(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN v0.c0 COLLATE RTRIM ELSE ((vt0.c0)<=(x'')) END) IS TRUE)  as count FROM vt0, v0 ORDER BY (v0.c0 COLLATE BINARY IN ((('wfA&tc')>=(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN v0.c0 COLLATE RTRIM ELSE ((vt0.c0)<=(x'')) END) ORDER BY (v0.c0 COLLATE BINARY IN ((('wfA&tc')>=(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN v0.c0 COLLATE RTRIM ELSE ((vt0.c0)<=(x'')) END) IS TRUE)  as count FROM vt0, v0 ORDER BY (v0.c0 COLLATE BINARY IN ((('wfA&tc')>=(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN v0.c0 COLLATE RTRIM ELSE ((vt0.c0)<=(x'')) END) ORDER BY (v0.c0 COLLATE BINARY IN ((('wfA&tc')>=(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (CASE WHEN NULL THEN vt0.c0 END) AND (vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c0)OR(((vt0.c0) NOT BETWEEN (x'da20') AND (vt0.c0)))), (NOT ((- (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOT BETWEEN (CASE WHEN NULL THEN vt0.c0 END) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)OR(((vt0.c0) NOT BETWEEN (x'da20') AND (vt0.c0)))), (NOT ((- (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (CASE WHEN NULL THEN vt0.c0 END) AND (vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c0)OR(((vt0.c0) NOT BETWEEN (x'da20') AND (vt0.c0)))), (NOT ((- (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOT BETWEEN (CASE WHEN NULL THEN vt0.c0 END) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)OR(((vt0.c0) NOT BETWEEN (x'da20') AND (vt0.c0)))), (NOT ((- (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (CASE WHEN NULL THEN vt0.c0 END) AND (vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c0)OR(((vt0.c0) NOT BETWEEN (x'da20') AND (vt0.c0)))), (NOT ((- (vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((~ ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ ((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (NULL) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (NULL) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (NULL) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT (NOT (vt0.c0)), 0.1073436108412652)) ORDER BY ((vt0.c0 IN (vt0.c0)) IN ())  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (NOT (vt0.c0)), 0.1073436108412652)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN (vt0.c0)) IN ())  NULLS FIRST, NULL);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT (NOT (vt0.c0)), 0.1073436108412652)) ORDER BY ((vt0.c0 IN (vt0.c0)) IN ())  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (NOT (vt0.c0)), 0.1073436108412652)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN (vt0.c0)) IN ())  NULLS FIRST, NULL);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT (NOT (vt0.c0)), 0.1073436108412652)) ORDER BY ((vt0.c0 IN (vt0.c0)) IN ())  NULLS FIRST, NULL;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0)))) ISNULL));
SELECT * FROM vt0 WHERE ((((- (vt0.c0))) BETWEEN (0.6658474526939846 COLLATE NOCASE) AND ((+ (vt0.c0))))) ORDER BY (+ (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE ASC  NULLS LAST, ((CASE WHEN vt0.c0 THEN NULL ELSE NULL END)<=(((vt0.c0)|(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) BETWEEN (0.6658474526939846 COLLATE NOCASE) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE ASC  NULLS LAST, ((CASE WHEN vt0.c0 THEN NULL ELSE NULL END)<=(((vt0.c0)|(vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((- (vt0.c0))) BETWEEN (0.6658474526939846 COLLATE NOCASE) AND ((+ (vt0.c0))))) ORDER BY (+ (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE ASC  NULLS LAST, ((CASE WHEN vt0.c0 THEN NULL ELSE NULL END)<=(((vt0.c0)|(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) BETWEEN (0.6658474526939846 COLLATE NOCASE) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE ASC  NULLS LAST, ((CASE WHEN vt0.c0 THEN NULL ELSE NULL END)<=(((vt0.c0)|(vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((- (vt0.c0))) BETWEEN (0.6658474526939846 COLLATE NOCASE) AND ((+ (vt0.c0))))) ORDER BY (+ (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE ASC  NULLS LAST, ((CASE WHEN vt0.c0 THEN NULL ELSE NULL END)<=(((vt0.c0)|(vt0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((TRIM(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((TRIM(vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((TRIM(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((TRIM(vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((TRIM(vt0.c0) IN ()));
SELECT ALL * FROM v0, vt0 WHERE (((NULLIF(DISTINCT vt0.c0, v0.c2))<>(((((((((v0.c0)AND(x'a16e')))OR(v0.c2)))OR(0X18ccd9b2)))OR(v0.c1))))) ORDER BY ((CAST(v0.c2 AS REAL))%(v0.c0)) ASC  NULLS FIRST, '';
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT vt0.c0, v0.c2))<>(((((((((v0.c0)AND(x'a16e')))OR(v0.c2)))OR(0x18ccd9b2)))OR(v0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(v0.c2 AS REAL))%(v0.c0)) ASC  NULLS FIRST, '');
SELECT ALL * FROM v0, vt0 WHERE (((NULLIF(DISTINCT vt0.c0, v0.c2))<>(((((((((v0.c0)AND(x'a16e')))OR(v0.c2)))OR(0X18ccd9b2)))OR(v0.c1))))) ORDER BY ((CAST(v0.c2 AS REAL))%(v0.c0)) ASC  NULLS FIRST, '';
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT vt0.c0, v0.c2))<>(((((((((v0.c0)AND(x'a16e')))OR(v0.c2)))OR(0x18ccd9b2)))OR(v0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(v0.c2 AS REAL))%(v0.c0)) ASC  NULLS FIRST, '');
SELECT ALL * FROM v0, vt0 WHERE (((NULLIF(DISTINCT vt0.c0, v0.c2))<>(((((((((v0.c0)AND(x'a16e')))OR(v0.c2)))OR(0X18ccd9b2)))OR(v0.c1))))) ORDER BY ((CAST(v0.c2 AS REAL))%(v0.c0)) ASC  NULLS FIRST, '';
SELECT ALL * FROM v0 WHERE (CASE WHEN CASE v0.c1  WHEN v0.c2 THEN v0.c2 END THEN CAST(v0.c1 AS INTEGER) WHEN 0.875705122308625 THEN ((((v0.c0)AND(v0.c1)))AND(v0.c1)) WHEN CASE v0.c0  WHEN v0.c0 THEN NULL END THEN NULL END) ORDER BY ((((v0.c1) NOT NULL)) BETWEEN (CAST(v0.c1 AS INTEGER)) AND (((NULL) BETWEEN (v0.c1) AND (v0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE v0.c1  WHEN v0.c2 THEN v0.c2 END THEN CAST(v0.c1 AS INTEGER) WHEN 0.875705122308625 THEN ((((v0.c0)AND(v0.c1)))AND(v0.c1)) WHEN CASE v0.c0  WHEN v0.c0 THEN NULL END THEN NULL END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) NOT NULL)) BETWEEN (CAST(v0.c1 AS INTEGER)) AND (((NULL) BETWEEN (v0.c1) AND (v0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CASE WHEN CASE v0.c1  WHEN v0.c2 THEN v0.c2 END THEN CAST(v0.c1 AS INTEGER) WHEN 0.875705122308625 THEN ((((v0.c0)AND(v0.c1)))AND(v0.c1)) WHEN CASE v0.c0  WHEN v0.c0 THEN NULL END THEN NULL END) ORDER BY ((((v0.c1) NOT NULL)) BETWEEN (CAST(v0.c1 AS INTEGER)) AND (((NULL) BETWEEN (v0.c1) AND (v0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE v0.c1  WHEN v0.c2 THEN v0.c2 END THEN CAST(v0.c1 AS INTEGER) WHEN 0.875705122308625 THEN ((((v0.c0)AND(v0.c1)))AND(v0.c1)) WHEN CASE v0.c0  WHEN v0.c0 THEN NULL END THEN NULL END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) NOT NULL)) BETWEEN (CAST(v0.c1 AS INTEGER)) AND (((NULL) BETWEEN (v0.c1) AND (v0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CASE WHEN CASE v0.c1  WHEN v0.c2 THEN v0.c2 END THEN CAST(v0.c1 AS INTEGER) WHEN 0.875705122308625 THEN ((((v0.c0)AND(v0.c1)))AND(v0.c1)) WHEN CASE v0.c0  WHEN v0.c0 THEN NULL END THEN NULL END) ORDER BY ((((v0.c1) NOT NULL)) BETWEEN (CAST(v0.c1 AS INTEGER)) AND (((NULL) BETWEEN (v0.c1) AND (v0.c1)))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (ABS(CAST(x'' AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(x'' AS BLOB))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (ABS(CAST(x'' AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(x'' AS BLOB))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (ABS(CAST(x'' AS BLOB)));
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c1 COLLATE RTRIM IN (((v0.c0) NOT NULL), ROUND(v0.c0, v0.c1)))) ORDER BY ((CAST(v0.c1 AS TEXT))/(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c1 COLLATE RTRIM IN (((v0.c0) NOT NULL), ROUND(v0.c0, v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c1 AS TEXT))/(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c1 COLLATE RTRIM IN (((v0.c0) NOT NULL), ROUND(v0.c0, v0.c1)))) ORDER BY ((CAST(v0.c1 AS TEXT))/(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c1 COLLATE RTRIM IN (((v0.c0) NOT NULL), ROUND(v0.c0, v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c1 AS TEXT))/(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c1 COLLATE RTRIM IN (((v0.c0) NOT NULL), ROUND(v0.c0, v0.c1)))) ORDER BY ((CAST(v0.c1 AS TEXT))/(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON v0.c2 WHERE (CAST((v0.c1 IN ()) AS NUMERIC)) ORDER BY ((((vt0.c0)AND((((v0.c0)) BETWEEN ((v0.c2)) AND ((NULL))))))OR((v0.c0 IN (v0.c2)))) DESC  NULLS LAST, CAST(v0.c0 AS INTEGER)  NULLS FIRST, ((NULL)OR(((('8(5	')) BETWEEN ((v0.c0)) AND ((v0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c1 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON v0.c2 ORDER BY ((((vt0.c0)AND((((v0.c0)) BETWEEN ((v0.c2)) AND ((NULL))))))OR((v0.c0 IN (v0.c2)))) DESC  NULLS LAST, CAST(v0.c0 AS INTEGER)  NULLS FIRST, ((NULL)OR(((('8(5	')) BETWEEN ((v0.c0)) AND ((v0.c1))))) ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON v0.c2 WHERE (CAST((v0.c1 IN ()) AS NUMERIC)) ORDER BY ((((vt0.c0)AND((((v0.c0)) BETWEEN ((v0.c2)) AND ((NULL))))))OR((v0.c0 IN (v0.c2)))) DESC  NULLS LAST, CAST(v0.c0 AS INTEGER)  NULLS FIRST, ((NULL)OR(((('8(5	')) BETWEEN ((v0.c0)) AND ((v0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c1 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON v0.c2 ORDER BY ((((vt0.c0)AND((((v0.c0)) BETWEEN ((v0.c2)) AND ((NULL))))))OR((v0.c0 IN (v0.c2)))) DESC  NULLS LAST, CAST(v0.c0 AS INTEGER)  NULLS FIRST, ((NULL)OR(((('8(5	')) BETWEEN ((v0.c0)) AND ((v0.c1))))) ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON v0.c2 WHERE (CAST((v0.c1 IN ()) AS NUMERIC)) ORDER BY ((((vt0.c0)AND((((v0.c0)) BETWEEN ((v0.c2)) AND ((NULL))))))OR((v0.c0 IN (v0.c2)))) DESC  NULLS LAST, CAST(v0.c0 AS INTEGER)  NULLS FIRST, ((NULL)OR(((('8(5	')) BETWEEN ((v0.c0)) AND ((v0.c1))))) ASC;
SELECT * FROM v0 WHERE (v0.c2) ORDER BY x'e8cb'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY x'e8cb'  NULLS LAST);
SELECT * FROM v0 WHERE (v0.c2) ORDER BY x'e8cb'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY x'e8cb'  NULLS LAST);
SELECT * FROM v0 WHERE (v0.c2) ORDER BY x'e8cb'  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END) NOT BETWEEN (((v0.c2)|(v0.c1))) AND (((v0.c1) BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END) NOT BETWEEN (((v0.c2)|(v0.c1))) AND (((v0.c1) BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END) NOT BETWEEN (((v0.c2)|(v0.c1))) AND (((v0.c1) BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END) NOT BETWEEN (((v0.c2)|(v0.c1))) AND (((v0.c1) BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END) NOT BETWEEN (((v0.c2)|(v0.c1))) AND (((v0.c1) BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((('-1' COLLATE BINARY) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('-1' COLLATE BINARY) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('-1' COLLATE BINARY) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('-1' COLLATE BINARY) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('-1' COLLATE BINARY) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)&(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT * FROM v0 CROSS JOIN vt0 ON CAST((((vt0.c0))<=((vt0.c0))) AS INTEGER) WHERE (CAST(((v0.c1)!=(v0.c2)) AS TEXT)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c1)!=(v0.c2)) AS TEXT)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST((((vt0.c0))<=((vt0.c0))) AS INTEGER) ORDER BY NULL DESC);
SELECT * FROM v0 CROSS JOIN vt0 ON CAST((((vt0.c0))<=((vt0.c0))) AS INTEGER) WHERE (CAST(((v0.c1)!=(v0.c2)) AS TEXT)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c1)!=(v0.c2)) AS TEXT)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST((((vt0.c0))<=((vt0.c0))) AS INTEGER) ORDER BY NULL DESC);
SELECT * FROM v0 CROSS JOIN vt0 ON CAST((((vt0.c0))<=((vt0.c0))) AS INTEGER) WHERE (CAST(((v0.c1)!=(v0.c2)) AS TEXT)) ORDER BY NULL DESC;
SELECT ALL * FROM v0 WHERE (((~ (v0.c1)) IN (json_valid(888664428)))) ORDER BY (('403267158')IS NOT((((('')AND(v0.c1)))AND('-979572081'))));
SELECT SUM(count) FROM (SELECT ((((~ (v0.c1)) IN (json_valid(888664428)))) IS TRUE)  as count FROM v0 ORDER BY (('403267158')IS NOT((((('')AND(v0.c1)))AND('-979572081')))));
SELECT ALL * FROM v0 WHERE (((~ (v0.c1)) IN (json_valid(888664428)))) ORDER BY (('403267158')IS NOT((((('')AND(v0.c1)))AND('-979572081'))));
SELECT SUM(count) FROM (SELECT ((((~ (v0.c1)) IN (json_valid(888664428)))) IS TRUE)  as count FROM v0 ORDER BY (('403267158')IS NOT((((('')AND(v0.c1)))AND('-979572081')))));
SELECT ALL * FROM v0 WHERE (((~ (v0.c1)) IN (json_valid(888664428)))) ORDER BY (('403267158')IS NOT((((('')AND(v0.c1)))AND('-979572081'))));
SELECT * FROM v0, vt0 WHERE ((((json_quote(v0.c1)))<(((((v0.c1))<((v0.c2))))))) ORDER BY (((json_object(v0.c1, v0.c0)))<((v0.c2 COLLATE BINARY)))  NULLS FIRST, ((((v0.c2) BETWEEN (v0.c2) AND (v0.c2))) NOT BETWEEN (v0.c2) AND (((vt0.c0)IS(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((json_quote(v0.c1)))<(((((v0.c1))<((v0.c2))))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((json_object(v0.c1, v0.c0)))<((v0.c2 COLLATE BINARY)))  NULLS FIRST, ((((v0.c2) BETWEEN (v0.c2) AND (v0.c2))) NOT BETWEEN (v0.c2) AND (((vt0.c0)IS(v0.c0)))));
SELECT * FROM v0, vt0 WHERE ((((json_quote(v0.c1)))<(((((v0.c1))<((v0.c2))))))) ORDER BY (((json_object(v0.c1, v0.c0)))<((v0.c2 COLLATE BINARY)))  NULLS FIRST, ((((v0.c2) BETWEEN (v0.c2) AND (v0.c2))) NOT BETWEEN (v0.c2) AND (((vt0.c0)IS(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((json_quote(v0.c1)))<(((((v0.c1))<((v0.c2))))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((json_object(v0.c1, v0.c0)))<((v0.c2 COLLATE BINARY)))  NULLS FIRST, ((((v0.c2) BETWEEN (v0.c2) AND (v0.c2))) NOT BETWEEN (v0.c2) AND (((vt0.c0)IS(v0.c0)))));
SELECT ALL * FROM v0 WHERE (CAST(((((((((((((((((v0.c1)OR(v0.c0)))OR(v0.c2)))AND(v0.c0)))AND(v0.c0)))AND(v0.c2)))OR('1131969957')))AND(v0.c2)))OR(v0.c1)) AS BLOB)) ORDER BY CASE WHEN CAST(v0.c1 AS INTEGER) THEN v0.c2 END, CAST(v0.c2 AS INTEGER) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((((((((((v0.c1)OR(v0.c0)))OR(v0.c2)))AND(v0.c0)))AND(v0.c0)))AND(v0.c2)))OR('1131969957')))AND(v0.c2)))OR(v0.c1)) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(v0.c1 AS INTEGER) THEN v0.c2 END, CAST(v0.c2 AS INTEGER) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST(((((((((((((((((v0.c1)OR(v0.c0)))OR(v0.c2)))AND(v0.c0)))AND(v0.c0)))AND(v0.c2)))OR('1131969957')))AND(v0.c2)))OR(v0.c1)) AS BLOB)) ORDER BY CASE WHEN CAST(v0.c1 AS INTEGER) THEN v0.c2 END, CAST(v0.c2 AS INTEGER) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((((((((((v0.c1)OR(v0.c0)))OR(v0.c2)))AND(v0.c0)))AND(v0.c0)))AND(v0.c2)))OR('1131969957')))AND(v0.c2)))OR(v0.c1)) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(v0.c1 AS INTEGER) THEN v0.c2 END, CAST(v0.c2 AS INTEGER) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST(((((((((((((((((v0.c1)OR(v0.c0)))OR(v0.c2)))AND(v0.c0)))AND(v0.c0)))AND(v0.c2)))OR('1131969957')))AND(v0.c2)))OR(v0.c1)) AS BLOB)) ORDER BY CASE WHEN CAST(v0.c1 AS INTEGER) THEN v0.c2 END, CAST(v0.c2 AS INTEGER) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST((v0.c1 IN ()) AS INTEGER)) ORDER BY (((v0.c2)!=(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CAST((v0.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c2)!=(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST((v0.c1 IN ()) AS INTEGER)) ORDER BY (((v0.c2)!=(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CAST((v0.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c2)!=(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST((v0.c1 IN ()) AS INTEGER)) ORDER BY (((v0.c2)!=(vt0.c0)) IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY ((((vt0.c0) IS TRUE))/(UNLIKELY(vt0.c0))) ASC  NULLS LAST, (+ (((vt0.c0)*(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS TRUE))/(UNLIKELY(vt0.c0))) ASC  NULLS LAST, (+ (((vt0.c0)*(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY ((((vt0.c0) IS TRUE))/(UNLIKELY(vt0.c0))) ASC  NULLS LAST, (+ (((vt0.c0)*(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS TRUE))/(UNLIKELY(vt0.c0))) ASC  NULLS LAST, (+ (((vt0.c0)*(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY ((((vt0.c0) IS TRUE))/(UNLIKELY(vt0.c0))) ASC  NULLS LAST, (+ (((vt0.c0)*(vt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE ((~ ((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c1)))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((~ ((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c1)))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((~ ((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c1))))));
SELECT * FROM v0, vt0 WHERE (((vt0.c0 COLLATE RTRIM)IS(0X3e457dc9))) ORDER BY ((((((vt0.c0)OR(v0.c1)))AND(v0.c1)))IS((- (v0.c0))))  NULLS FIRST, (((v0.c2)*(vt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)IS(0x3e457dc9))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((vt0.c0)OR(v0.c1)))AND(v0.c1)))IS((- (v0.c0))))  NULLS FIRST, (((v0.c2)*(vt0.c0)) IN ())  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((vt0.c0 COLLATE RTRIM)IS(0X3e457dc9))) ORDER BY ((((((vt0.c0)OR(v0.c1)))AND(v0.c1)))IS((- (v0.c0))))  NULLS FIRST, (((v0.c2)*(vt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)IS(0x3e457dc9))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((vt0.c0)OR(v0.c1)))AND(v0.c1)))IS((- (v0.c0))))  NULLS FIRST, (((v0.c2)*(vt0.c0)) IN ())  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((vt0.c0 COLLATE RTRIM)IS(0X3e457dc9))) ORDER BY ((((((vt0.c0)OR(v0.c1)))AND(v0.c1)))IS((- (v0.c0))))  NULLS FIRST, (((v0.c2)*(vt0.c0)) IN ())  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((v0.c0 COLLATE NOCASE IN (((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))AND(v0.c2)))OR(v0.c2))))) ORDER BY (((((v0.c1, v0.c2, v0.c2))<((v0.c2, v0.c2, v0.c0))))>>(((v0.c2)>=(v0.c0))));
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE NOCASE IN (((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))AND(v0.c2)))OR(v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c1, v0.c2, v0.c2))<((v0.c2, v0.c2, v0.c0))))>>(((v0.c2)>=(v0.c0)))));
SELECT ALL * FROM v0 WHERE ((v0.c0 COLLATE NOCASE IN (((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))AND(v0.c2)))OR(v0.c2))))) ORDER BY (((((v0.c1, v0.c2, v0.c2))<((v0.c2, v0.c2, v0.c0))))>>(((v0.c2)>=(v0.c0))));
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE NOCASE IN (((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))AND(v0.c2)))OR(v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c1, v0.c2, v0.c2))<((v0.c2, v0.c2, v0.c0))))>>(((v0.c2)>=(v0.c0)))));
SELECT ALL * FROM v0 WHERE ((v0.c0 COLLATE NOCASE IN (((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))AND(v0.c2)))OR(v0.c2))))) ORDER BY (((((v0.c1, v0.c2, v0.c2))<((v0.c2, v0.c2, v0.c0))))>>(((v0.c2)>=(v0.c0))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((v0.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((v0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((v0.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((v0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((v0.c1 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0))) NOT BETWEEN ((~ (vt0.c0))) AND ((NULL IN ())))) ORDER BY (~ ((vt0.c0 IN (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c0))) NOT BETWEEN ((~ (vt0.c0))) AND ((NULL IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((vt0.c0 IN (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0))) NOT BETWEEN ((~ (vt0.c0))) AND ((NULL IN ())))) ORDER BY (~ ((vt0.c0 IN (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c0))) NOT BETWEEN ((~ (vt0.c0))) AND ((NULL IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((vt0.c0 IN (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0))) NOT BETWEEN ((~ (vt0.c0))) AND ((NULL IN ())))) ORDER BY (~ ((vt0.c0 IN (vt0.c0)))) ASC;
SELECT ALL * FROM vt0 WHERE (((IFNULL(vt0.c0, vt0.c0))&(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(vt0.c0, vt0.c0))&(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((IFNULL(vt0.c0, vt0.c0))&(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(vt0.c0, vt0.c0))&(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((IFNULL(vt0.c0, vt0.c0))&(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt0, v0 WHERE (INSTR(0.7762617444599189, ((v0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((INSTR(0.7762617444599189, ((v0.c0) ISNULL))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (INSTR(0.7762617444599189, ((v0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((INSTR(0.7762617444599189, ((v0.c0) ISNULL))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (INSTR(0.7762617444599189, ((v0.c0) ISNULL)));
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0))) IS FALSE));
SELECT ALL * FROM vt0, v0 WHERE (((((((((((v0.c1)OR(v0.c2)))AND((((v0.c0))<>((vt0.c0))))))OR(((v0.c1) ISNULL))))AND(TYPEOF(vt0.c0))))AND((((v0.c1)) NOT BETWEEN (('now) .M*}9LO')) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c1)OR(v0.c2)))AND((((v0.c0))<>((vt0.c0))))))OR(((v0.c1) ISNULL))))AND(TYPEOF(vt0.c0))))AND((((v0.c1)) NOT BETWEEN (('now) .M*}9LO')) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((((((((v0.c1)OR(v0.c2)))AND((((v0.c0))<>((vt0.c0))))))OR(((v0.c1) ISNULL))))AND(TYPEOF(vt0.c0))))AND((((v0.c1)) NOT BETWEEN (('now) .M*}9LO')) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c1)OR(v0.c2)))AND((((v0.c0))<>((vt0.c0))))))OR(((v0.c1) ISNULL))))AND(TYPEOF(vt0.c0))))AND((((v0.c1)) NOT BETWEEN (('now) .M*}9LO')) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((((((((v0.c1)OR(v0.c2)))AND((((v0.c0))<>((vt0.c0))))))OR(((v0.c1) ISNULL))))AND(TYPEOF(vt0.c0))))AND((((v0.c1)) NOT BETWEEN (('now) .M*}9LO')) AND ((vt0.c0))))));
SELECT COUNT(*) FROM v0, vt0 NOT INDEXED WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c1))) BETWEEN ('' COLLATE NOCASE) AND (COALESCE(DISTINCT vt0.c0, v0.c2, v0.c2, v0.c1))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (v0.c0) AND (v0.c1))) BETWEEN ('' COLLATE NOCASE) AND (COALESCE(DISTINCT vt0.c0, v0.c2, v0.c2, v0.c1)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 NOT INDEXED WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c1))) BETWEEN ('' COLLATE NOCASE) AND (COALESCE(DISTINCT vt0.c0, v0.c2, v0.c2, v0.c1))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (v0.c0) AND (v0.c1))) BETWEEN ('' COLLATE NOCASE) AND (COALESCE(DISTINCT vt0.c0, v0.c2, v0.c2, v0.c1)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 NOT INDEXED WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c1))) BETWEEN ('' COLLATE NOCASE) AND (COALESCE(DISTINCT vt0.c0, v0.c2, v0.c2, v0.c1))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (NOT ((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((x''))))) WHERE (CAST(CASE WHEN v0.c2 THEN v0.c2 END AS NUMERIC)) ORDER BY ((((((((((v0.c0)==(v0.c0)))OR(((((v0.c1)OR(v0.c0)))OR(v0.c2)))))OR(((((v0.c1)AND(v0.c0)))AND(v0.c0)))))OR(CAST(v0.c1 AS INTEGER))))AND(CAST(v0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c2 THEN v0.c2 END AS NUMERIC)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (NOT ((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((x''))))) ORDER BY ((((((((((v0.c0)=(v0.c0)))OR(((((v0.c1)OR(v0.c0)))OR(v0.c2)))))OR(((((v0.c1)AND(v0.c0)))AND(v0.c0)))))OR(CAST(v0.c1 AS INTEGER))))AND(CAST(v0.c1 AS REAL))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (NOT ((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((x''))))) WHERE (CAST(CASE WHEN v0.c2 THEN v0.c2 END AS NUMERIC)) ORDER BY ((((((((((v0.c0)==(v0.c0)))OR(((((v0.c1)OR(v0.c0)))OR(v0.c2)))))OR(((((v0.c1)AND(v0.c0)))AND(v0.c0)))))OR(CAST(v0.c1 AS INTEGER))))AND(CAST(v0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c2 THEN v0.c2 END AS NUMERIC)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (NOT ((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((x''))))) ORDER BY ((((((((((v0.c0)=(v0.c0)))OR(((((v0.c1)OR(v0.c0)))OR(v0.c2)))))OR(((((v0.c1)AND(v0.c0)))AND(v0.c0)))))OR(CAST(v0.c1 AS INTEGER))))AND(CAST(v0.c1 AS REAL))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (NOT ((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((x''))))) WHERE (CAST(CASE WHEN v0.c2 THEN v0.c2 END AS NUMERIC)) ORDER BY ((((((((((v0.c0)==(v0.c0)))OR(((((v0.c1)OR(v0.c0)))OR(v0.c2)))))OR(((((v0.c1)AND(v0.c0)))AND(v0.c0)))))OR(CAST(v0.c1 AS INTEGER))))AND(CAST(v0.c1 AS REAL)));
SELECT COUNT(*) FROM v0 WHERE (((((0.285566728441877)=(NULL))) ISNULL)) ORDER BY (((((v0.c0)>=(v0.c2))))<((v0.c0 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.285566728441877)=(NULL))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)>=(v0.c2))))<((v0.c0 COLLATE BINARY)))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((0.285566728441877)=(NULL))) ISNULL)) ORDER BY (((((v0.c0)>=(v0.c2))))<((v0.c0 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.285566728441877)=(NULL))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)>=(v0.c2))))<((v0.c0 COLLATE BINARY)))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((0.285566728441877)=(NULL))) ISNULL)) ORDER BY (((((v0.c0)>=(v0.c2))))<((v0.c0 COLLATE BINARY)))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (ABS(0x28db7923) COLLATE NOCASE COLLATE RTRIM) ORDER BY CASE WHEN v0.c2 COLLATE NOCASE THEN (v0.c0 IN ()) END DESC  NULLS LAST, CAST(((v0.c0)%(v0.c0)) AS TEXT) ASC, ((v0.c2) BETWEEN ((((v0.c0, v0.c2, x'')) NOT BETWEEN ((v0.c1, v0.c1, v0.c2)) AND ((v0.c1, v0.c1, v0.c2)))) AND ((((v0.c0, v0.c0, v0.c1))>=((v0.c0, v0.c0, v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((ABS(0X28db7923) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c2 COLLATE NOCASE THEN (v0.c0 IN ()) END DESC  NULLS LAST, CAST(((v0.c0)%(v0.c0)) AS TEXT) ASC, ((v0.c2) BETWEEN ((((v0.c0, v0.c2, x'')) NOT BETWEEN ((v0.c1, v0.c1, v0.c2)) AND ((v0.c1, v0.c1, v0.c2)))) AND ((((v0.c0, v0.c0, v0.c1))>=((v0.c0, v0.c0, v0.c0))))) ASC);
SELECT COUNT(*) FROM v0 WHERE (ABS(0x28db7923) COLLATE NOCASE COLLATE RTRIM) ORDER BY CASE WHEN v0.c2 COLLATE NOCASE THEN (v0.c0 IN ()) END DESC  NULLS LAST, CAST(((v0.c0)%(v0.c0)) AS TEXT) ASC, ((v0.c2) BETWEEN ((((v0.c0, v0.c2, x'')) NOT BETWEEN ((v0.c1, v0.c1, v0.c2)) AND ((v0.c1, v0.c1, v0.c2)))) AND ((((v0.c0, v0.c0, v0.c1))>=((v0.c0, v0.c0, v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((ABS(0X28db7923) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c2 COLLATE NOCASE THEN (v0.c0 IN ()) END DESC  NULLS LAST, CAST(((v0.c0)%(v0.c0)) AS TEXT) ASC, ((v0.c2) BETWEEN ((((v0.c0, v0.c2, x'')) NOT BETWEEN ((v0.c1, v0.c1, v0.c2)) AND ((v0.c1, v0.c1, v0.c2)))) AND ((((v0.c0, v0.c0, v0.c1))>=((v0.c0, v0.c0, v0.c0))))) ASC);
SELECT COUNT(*) FROM v0 WHERE (ABS(0x28db7923) COLLATE NOCASE COLLATE RTRIM) ORDER BY CASE WHEN v0.c2 COLLATE NOCASE THEN (v0.c0 IN ()) END DESC  NULLS LAST, CAST(((v0.c0)%(v0.c0)) AS TEXT) ASC, ((v0.c2) BETWEEN ((((v0.c0, v0.c2, x'')) NOT BETWEEN ((v0.c1, v0.c1, v0.c2)) AND ((v0.c1, v0.c1, v0.c2)))) AND ((((v0.c0, v0.c0, v0.c1))>=((v0.c0, v0.c0, v0.c0))))) ASC;
SELECT * FROM vt0 WHERE ((((('2047490865') NOT NULL))&((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY (((((vt0.c0) ISNULL)))>((((x'0cda')IS(vt0.c0)))))  NULLS LAST, CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN JULIANDAY(vt0.c0, vt0.c0, vt0.c0, '', vt0.c0) ELSE NULL END, (- ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((('2047490865') NOT NULL))&((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) ISNULL)))>((((x'0cda')IS(vt0.c0)))))  NULLS LAST, CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN JULIANDAY(vt0.c0, vt0.c0, vt0.c0, '', vt0.c0) ELSE NULL END, (- ((vt0.c0 IN ()))));
SELECT * FROM vt0 WHERE ((((('2047490865') NOT NULL))&((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY (((((vt0.c0) ISNULL)))>((((x'0cda')IS(vt0.c0)))))  NULLS LAST, CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN JULIANDAY(vt0.c0, vt0.c0, vt0.c0, '', vt0.c0) ELSE NULL END, (- ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((('2047490865') NOT NULL))&((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) ISNULL)))>((((x'0cda')IS(vt0.c0)))))  NULLS LAST, CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN JULIANDAY(vt0.c0, vt0.c0, vt0.c0, '', vt0.c0) ELSE NULL END, (- ((vt0.c0 IN ()))));
SELECT * FROM vt0 WHERE ((((('2047490865') NOT NULL))&((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY (((((vt0.c0) ISNULL)))>((((x'0cda')IS(vt0.c0)))))  NULLS LAST, CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN JULIANDAY(vt0.c0, vt0.c0, vt0.c0, '', vt0.c0) ELSE NULL END, (- ((vt0.c0 IN ())));
SELECT COUNT(*) FROM v0 WHERE (((CASE 0.6658036395786806  WHEN v0.c1 THEN v0.c2 END) ISNULL)) ORDER BY json_array_length((('')<(v0.c0))) DESC, CAST(CAST(v0.c2 AS BLOB) AS REAL) DESC, ((((((((((v0.c0)OR(v0.c1)))AND(v0.c2)))AND(v0.c2)))OR(v0.c0)))GLOB(CAST(v0.c2 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.6658036395786806  WHEN v0.c1 THEN v0.c2 END) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY json_array_length((('')<(v0.c0))) DESC, CAST(CAST(v0.c2 AS BLOB) AS REAL) DESC, ((((((((((v0.c0)OR(v0.c1)))AND(v0.c2)))AND(v0.c2)))OR(v0.c0)))GLOB(CAST(v0.c2 AS REAL))) DESC);
SELECT COUNT(*) FROM v0 WHERE (((CASE 0.6658036395786806  WHEN v0.c1 THEN v0.c2 END) ISNULL)) ORDER BY json_array_length((('')<(v0.c0))) DESC, CAST(CAST(v0.c2 AS BLOB) AS REAL) DESC, ((((((((((v0.c0)OR(v0.c1)))AND(v0.c2)))AND(v0.c2)))OR(v0.c0)))GLOB(CAST(v0.c2 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.6658036395786806  WHEN v0.c1 THEN v0.c2 END) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY json_array_length((('')<(v0.c0))) DESC, CAST(CAST(v0.c2 AS BLOB) AS REAL) DESC, ((((((((((v0.c0)OR(v0.c1)))AND(v0.c2)))AND(v0.c2)))OR(v0.c0)))GLOB(CAST(v0.c2 AS REAL))) DESC);
SELECT COUNT(*) FROM v0 WHERE (((CASE 0.6658036395786806  WHEN v0.c1 THEN v0.c2 END) ISNULL)) ORDER BY json_array_length((('')<(v0.c0))) DESC, CAST(CAST(v0.c2 AS BLOB) AS REAL) DESC, ((((((((((v0.c0)OR(v0.c1)))AND(v0.c2)))AND(v0.c2)))OR(v0.c0)))GLOB(CAST(v0.c2 AS REAL))) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((0.055834894511264443, vt0.c0, vt0.c0))<=((vt0.c0, '2118554317', vt0.c0))) COLLATE NOCASE) ORDER BY (((vt0.c0) NOTNULL) IN ()), (vt0.c0 IN ()) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((0.055834894511264443, vt0.c0, vt0.c0))<=((vt0.c0, '2118554317', vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOTNULL) IN ()), (vt0.c0 IN ()) COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((0.055834894511264443, vt0.c0, vt0.c0))<=((vt0.c0, '2118554317', vt0.c0))) COLLATE NOCASE) ORDER BY (((vt0.c0) NOTNULL) IN ()), (vt0.c0 IN ()) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((0.055834894511264443, vt0.c0, vt0.c0))<=((vt0.c0, '2118554317', vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOTNULL) IN ()), (vt0.c0 IN ()) COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((0.055834894511264443, vt0.c0, vt0.c0))<=((vt0.c0, '2118554317', vt0.c0))) COLLATE NOCASE) ORDER BY (((vt0.c0) NOTNULL) IN ()), (vt0.c0 IN ()) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)%(v0.c1)))>=((((v0.c2))<=((v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)%(v0.c1)))>=((((v0.c2))<=((v0.c1)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)%(v0.c1)))>=((((v0.c2))<=((v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)%(v0.c1)))>=((((v0.c2))<=((v0.c1)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)%(v0.c1)))>=((((v0.c2))<=((v0.c1))))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON RTRIM(((v0.c2) BETWEEN (v0.c1) AND (v0.c2))) WHERE (CASE WHEN 0Xffffffffbfdfb3c8 THEN (v0.c0 IN (vt0.c0)) WHEN ((v0.c0) IS TRUE) THEN v0.c2 COLLATE RTRIM WHEN v0.c0 COLLATE BINARY THEN ((v0.c2)OR(vt0.c0)) ELSE (v0.c1 IN (vt0.c0)) END) ORDER BY CAST((NULL IN ()) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0xffffffffbfdfb3c8 THEN (v0.c0 IN (vt0.c0)) WHEN ((v0.c0) IS TRUE) THEN v0.c2 COLLATE RTRIM WHEN v0.c0 COLLATE BINARY THEN ((v0.c2)OR(vt0.c0)) ELSE (v0.c1 IN (vt0.c0)) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON RTRIM(((v0.c2) BETWEEN (v0.c1) AND (v0.c2))) ORDER BY CAST((NULL IN ()) AS TEXT) ASC);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON RTRIM(((v0.c2) BETWEEN (v0.c1) AND (v0.c2))) WHERE (CASE WHEN 0Xffffffffbfdfb3c8 THEN (v0.c0 IN (vt0.c0)) WHEN ((v0.c0) IS TRUE) THEN v0.c2 COLLATE RTRIM WHEN v0.c0 COLLATE BINARY THEN ((v0.c2)OR(vt0.c0)) ELSE (v0.c1 IN (vt0.c0)) END) ORDER BY CAST((NULL IN ()) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0xffffffffbfdfb3c8 THEN (v0.c0 IN (vt0.c0)) WHEN ((v0.c0) IS TRUE) THEN v0.c2 COLLATE RTRIM WHEN v0.c0 COLLATE BINARY THEN ((v0.c2)OR(vt0.c0)) ELSE (v0.c1 IN (vt0.c0)) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON RTRIM(((v0.c2) BETWEEN (v0.c1) AND (v0.c2))) ORDER BY CAST((NULL IN ()) AS TEXT) ASC);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON RTRIM(((v0.c2) BETWEEN (v0.c1) AND (v0.c2))) WHERE (CASE WHEN 0Xffffffffbfdfb3c8 THEN (v0.c0 IN (vt0.c0)) WHEN ((v0.c0) IS TRUE) THEN v0.c2 COLLATE RTRIM WHEN v0.c0 COLLATE BINARY THEN ((v0.c2)OR(vt0.c0)) ELSE (v0.c1 IN (vt0.c0)) END) ORDER BY CAST((NULL IN ()) AS TEXT) ASC;
SELECT ALL * FROM v0 WHERE (((((((v0.c0)AND(v0.c2)))OR(v0.c2))) NOT BETWEEN ((('-1934530096') NOT NULL)) AND (json_object(v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c2)))OR(v0.c2))) NOT BETWEEN ((('-1934530096') NOT NULL)) AND (json_object(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)AND(v0.c2)))OR(v0.c2))) NOT BETWEEN ((('-1934530096') NOT NULL)) AND (json_object(v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c2)))OR(v0.c2))) NOT BETWEEN ((('-1934530096') NOT NULL)) AND (json_object(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0, vt0 WHERE ((NULL COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL COLLATE BINARY IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((NULL COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL COLLATE BINARY IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((NULL COLLATE BINARY IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT NULL));
SELECT * FROM v0 NOT INDEXED, vt0 WHERE ((((v0.c1, v0.c0, v0.c2)) NOT BETWEEN ((((NULL) IS TRUE), ((v0.c1)AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)))) AND (((~ (v0.c1)), ((vt0.c0)>=(v0.c0)), (~ (v0.c2)))))) ORDER BY (((((('0.14625506542895184')AND(vt0.c0)))AND(v0.c0)))IS(((v0.c0) NOT NULL))) DESC, ((((CAST(vt0.c0 AS REAL))OR((~ (v0.c1)))))OR(((vt0.c0) BETWEEN (v0.c1) AND (v0.c1))));
SELECT SUM(count) FROM (SELECT (((((v0.c1, v0.c0, v0.c2)) NOT BETWEEN ((((NULL) IS TRUE), ((v0.c1)AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)))) AND (((~ (v0.c1)), ((vt0.c0)>=(v0.c0)), (~ (v0.c2)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((('0.14625506542895184')AND(vt0.c0)))AND(v0.c0)))IS(((v0.c0) NOT NULL))) DESC, ((((CAST(vt0.c0 AS REAL))OR((~ (v0.c1)))))OR(((vt0.c0) BETWEEN (v0.c1) AND (v0.c1)))));
SELECT * FROM v0 NOT INDEXED, vt0 WHERE ((((v0.c1, v0.c0, v0.c2)) NOT BETWEEN ((((NULL) IS TRUE), ((v0.c1)AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)))) AND (((~ (v0.c1)), ((vt0.c0)>=(v0.c0)), (~ (v0.c2)))))) ORDER BY (((((('0.14625506542895184')AND(vt0.c0)))AND(v0.c0)))IS(((v0.c0) NOT NULL))) DESC, ((((CAST(vt0.c0 AS REAL))OR((~ (v0.c1)))))OR(((vt0.c0) BETWEEN (v0.c1) AND (v0.c1))));
SELECT SUM(count) FROM (SELECT (((((v0.c1, v0.c0, v0.c2)) NOT BETWEEN ((((NULL) IS TRUE), ((v0.c1)AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)))) AND (((~ (v0.c1)), ((vt0.c0)>=(v0.c0)), (~ (v0.c2)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((('0.14625506542895184')AND(vt0.c0)))AND(v0.c0)))IS(((v0.c0) NOT NULL))) DESC, ((((CAST(vt0.c0 AS REAL))OR((~ (v0.c1)))))OR(((vt0.c0) BETWEEN (v0.c1) AND (v0.c1)))));
SELECT * FROM v0 NOT INDEXED, vt0 WHERE ((((v0.c1, v0.c0, v0.c2)) NOT BETWEEN ((((NULL) IS TRUE), ((v0.c1)AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)))) AND (((~ (v0.c1)), ((vt0.c0)>=(v0.c0)), (~ (v0.c2)))))) ORDER BY (((((('0.14625506542895184')AND(vt0.c0)))AND(v0.c0)))IS(((v0.c0) NOT NULL))) DESC, ((((CAST(vt0.c0 AS REAL))OR((~ (v0.c1)))))OR(((vt0.c0) BETWEEN (v0.c1) AND (v0.c1))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)!=(v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<>(v0.c1)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)!=(v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<>(v0.c1)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)!=(v0.c1)) IN ()));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (CAST(v0.c0 AS INTEGER))) WHERE ((((NOT ('KTTTVZN')))>=((((v0.c0)) BETWEEN ((v0.c2)) AND ((0X5e264e31))))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT ('KTTTVZN')))>=((((v0.c0)) BETWEEN ((v0.c2)) AND ((0X5e264e31)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (CAST(v0.c0 AS INTEGER))));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (CAST(v0.c0 AS INTEGER))) WHERE ((((NOT ('KTTTVZN')))>=((((v0.c0)) BETWEEN ((v0.c2)) AND ((0X5e264e31))))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT ('KTTTVZN')))>=((((v0.c0)) BETWEEN ((v0.c2)) AND ((0X5e264e31)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (CAST(v0.c0 AS INTEGER))));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (CAST(v0.c0 AS INTEGER))) WHERE ((((NOT ('KTTTVZN')))>=((((v0.c0)) BETWEEN ((v0.c2)) AND ((0X5e264e31))))));
SELECT * FROM v0 WHERE ((((v0.c1 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c1 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c1 IN ())) NOTNULL));
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1 COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1 COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c1 COLLATE NOCASE);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(((v0.c2)>(v0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c2)>(v0.c2)) AS REAL)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(((v0.c2)>(v0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c2)>(v0.c2)) AS REAL)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(((v0.c2)>(v0.c2)) AS REAL));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (CAST(x'' AS REAL) IN ()) WHERE ((+ ((vt0.c0 IN ())))) ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))) IN (CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (CAST(x'' AS REAL) IN ()) ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))) IN (CAST(vt0.c0 AS BLOB))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (CAST(x'' AS REAL) IN ()) WHERE ((+ ((vt0.c0 IN ())))) ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))) IN (CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (CAST(x'' AS REAL) IN ()) ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))) IN (CAST(vt0.c0 AS BLOB))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (CAST(x'' AS REAL) IN ()) WHERE ((+ ((vt0.c0 IN ())))) ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))) IN (CAST(vt0.c0 AS BLOB)));
SELECT * FROM v0, vt0 WHERE (CAST(((v0.c0)|(v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)|(v0.c0)) AS REAL)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST(((v0.c0)|(v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)|(v0.c0)) AS REAL)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST(((v0.c0)|(v0.c0)) AS REAL));
SELECT ALL * FROM vt0, v0 WHERE (((x'8fe1') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((v0.c1) BETWEEN (v0.c2) AND (v0.c1))))) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((x'8fe1') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((v0.c1) BETWEEN (v0.c2) AND (v0.c1))))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c2);
SELECT ALL * FROM vt0, v0 WHERE (((x'8fe1') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((v0.c1) BETWEEN (v0.c2) AND (v0.c1))))) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((x'8fe1') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((v0.c1) BETWEEN (v0.c2) AND (v0.c1))))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c2);
SELECT ALL * FROM vt0, v0 WHERE (((x'8fe1') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((v0.c1) BETWEEN (v0.c2) AND (v0.c1))))) ORDER BY v0.c2;
SELECT COUNT(*) FROM v0 WHERE (CAST(x'' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(x'' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(x'' AS REAL));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((CASE v0.c2  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c1 END)<(((v0.c0)|(v0.c0)))) WHERE ((((vt0.c0 IN (vt0.c0)))>(NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))>(NULL COLLATE BINARY))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((CASE v0.c2  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c1 END)<(((v0.c0)|(v0.c0)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((CASE v0.c2  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c1 END)<(((v0.c0)|(v0.c0)))) WHERE ((((vt0.c0 IN (vt0.c0)))>(NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))>(NULL COLLATE BINARY))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((CASE v0.c2  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c1 END)<(((v0.c0)|(v0.c0)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((CASE v0.c2  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c1 END)<(((v0.c0)|(v0.c0)))) WHERE ((((vt0.c0 IN (vt0.c0)))>(NULL COLLATE BINARY)));
SELECT * FROM v0, vt0 WHERE (CAST((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (NULL) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))*(CAST(v0.c1 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))*(CAST(v0.c1 AS TEXT)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (NULL) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))*(CAST(v0.c1 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))*(CAST(v0.c1 AS TEXT)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (NULL) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))*(CAST(v0.c1 AS TEXT)))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (v0.c1) ORDER BY CAST(v0.c1 AS NUMERIC) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c1 AS NUMERIC) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (v0.c1) ORDER BY CAST(v0.c1 AS NUMERIC) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c1 AS NUMERIC) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (v0.c1) ORDER BY CAST(v0.c1 AS NUMERIC) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0, x'9e4d', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))AND((- (vt0.c0)))))OR((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0, x'9e4d', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))AND((- (vt0.c0)))))OR((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0, x'9e4d', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))AND((- (vt0.c0)))))OR((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0, x'9e4d', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))AND((- (vt0.c0)))))OR((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0, x'9e4d', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))AND((- (vt0.c0)))))OR((NOT (vt0.c0)))));
SELECT * FROM vt0, v0 WHERE ((((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0))))OR(((v0.c2)IS NOT(v0.c2))))) ORDER BY TRIM(DISTINCT json_object(v0.c0, vt0.c0, vt0.c0, v0.c0), ((((vt0.c0)AND(vt0.c0)))AND(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0))))OR(((v0.c2)IS NOT(v0.c2))))) IS TRUE)  as count FROM vt0, v0 ORDER BY TRIM(DISTINCT json_object(v0.c0, vt0.c0, vt0.c0, v0.c0), ((((vt0.c0)AND(vt0.c0)))AND(v0.c0))) DESC);
SELECT * FROM vt0, v0 WHERE ((((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0))))OR(((v0.c2)IS NOT(v0.c2))))) ORDER BY TRIM(DISTINCT json_object(v0.c0, vt0.c0, vt0.c0, v0.c0), ((((vt0.c0)AND(vt0.c0)))AND(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0))))OR(((v0.c2)IS NOT(v0.c2))))) IS TRUE)  as count FROM vt0, v0 ORDER BY TRIM(DISTINCT json_object(v0.c0, vt0.c0, vt0.c0, v0.c0), ((((vt0.c0)AND(vt0.c0)))AND(v0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) ORDER BY ((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LIKELIHOOD(vt0.c0, 0.1486025877304551))))AND(((0xffffffff9931dcb9)&(vt0.c0)))))OR(((vt0.c0)GLOB(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LIKELIHOOD(vt0.c0, 0.1486025877304551))))AND(((0xffffffff9931dcb9)&(vt0.c0)))))OR(((vt0.c0)GLOB(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) ORDER BY ((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LIKELIHOOD(vt0.c0, 0.1486025877304551))))AND(((0xffffffff9931dcb9)&(vt0.c0)))))OR(((vt0.c0)GLOB(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LIKELIHOOD(vt0.c0, 0.1486025877304551))))AND(((0xffffffff9931dcb9)&(vt0.c0)))))OR(((vt0.c0)GLOB(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) ORDER BY ((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LIKELIHOOD(vt0.c0, 0.1486025877304551))))AND(((0xffffffff9931dcb9)&(vt0.c0)))))OR(((vt0.c0)GLOB(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ (((0.23097573032202579) BETWEEN ('0.20920048795907342') AND (v0.c1))))) ORDER BY LIKELY(((((v0.c1)AND(vt0.c0)))OR(v0.c1)));
SELECT SUM(count) FROM (SELECT (((+ (((0.23097573032202579) BETWEEN ('0.20920048795907342') AND (v0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY LIKELY(((((v0.c1)AND(vt0.c0)))OR(v0.c1))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ (((0.23097573032202579) BETWEEN ('0.20920048795907342') AND (v0.c1))))) ORDER BY LIKELY(((((v0.c1)AND(vt0.c0)))OR(v0.c1)));
SELECT SUM(count) FROM (SELECT (((+ (((0.23097573032202579) BETWEEN ('0.20920048795907342') AND (v0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY LIKELY(((((v0.c1)AND(vt0.c0)))OR(v0.c1))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ (((0.23097573032202579) BETWEEN ('0.20920048795907342') AND (v0.c1))))) ORDER BY LIKELY(((((v0.c1)AND(vt0.c0)))OR(v0.c1)));
SELECT COUNT(*) FROM v0, vt0 WHERE (((v0.c1 COLLATE NOCASE)<=((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE NOCASE)<=((NOT (vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((v0.c1 COLLATE NOCASE)<=((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE NOCASE)<=((NOT (vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((v0.c1 COLLATE NOCASE)<=((NOT (vt0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((~ (CASE v0.c0  WHEN -1.750228217E9 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE v0.c0  WHEN -1.750228217E9 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (CASE v0.c0  WHEN -1.750228217E9 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE v0.c0  WHEN -1.750228217E9 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (CASE v0.c0  WHEN -1.750228217E9 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END)));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (((~ (v0.c0))) NOTNULL) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((~ (v0.c0))) NOTNULL));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (((~ (v0.c0))) NOTNULL) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((~ (v0.c0))) NOTNULL));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (((~ (v0.c0))) NOTNULL) WHERE ('');
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((CAST(v0.c2 AS TEXT))OR(((x'9f59bb69') NOT BETWEEN (v0.c1) AND (v0.c1)))))OR((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))))AND(((v0.c2) NOT NULL))))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((((v0.c1)AND(v0.c2)))OR(v0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(v0.c2 AS TEXT))OR(((x'9f59bb69') NOT BETWEEN (v0.c1) AND (v0.c1)))))OR((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))))AND(((v0.c2) NOT NULL))))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1)AND(v0.c2)))OR(v0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((CAST(v0.c2 AS TEXT))OR(((x'9f59bb69') NOT BETWEEN (v0.c1) AND (v0.c1)))))OR((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))))AND(((v0.c2) NOT NULL))))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((((v0.c1)AND(v0.c2)))OR(v0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(v0.c2 AS TEXT))OR(((x'9f59bb69') NOT BETWEEN (v0.c1) AND (v0.c1)))))OR((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))))AND(((v0.c2) NOT NULL))))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1)AND(v0.c2)))OR(v0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((CAST(v0.c2 AS TEXT))OR(((x'9f59bb69') NOT BETWEEN (v0.c1) AND (v0.c1)))))OR((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))))AND(((v0.c2) NOT NULL))))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((((v0.c1)AND(v0.c2)))OR(v0.c0)) COLLATE BINARY;
SELECT COUNT(*) FROM v0, vt0 WHERE ((((NOT (v0.c0)))<=(LIKELIHOOD(vt0.c0, 0.9161464623025463)))) ORDER BY json_array_length((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0))));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))<=(LIKELIHOOD(vt0.c0, 0.9161464623025463)))) IS TRUE)  as count FROM v0, vt0 ORDER BY json_array_length((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((NOT (v0.c0)))<=(LIKELIHOOD(vt0.c0, 0.9161464623025463)))) ORDER BY json_array_length((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0))));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))<=(LIKELIHOOD(vt0.c0, 0.9161464623025463)))) IS TRUE)  as count FROM v0, vt0 ORDER BY json_array_length((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((NOT (v0.c0)))<=(LIKELIHOOD(vt0.c0, 0.9161464623025463)))) ORDER BY json_array_length((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0))));
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT COUNT(*) FROM v0 WHERE (-1173021877) ORDER BY ((v0.c0) BETWEEN ((~ (v0.c2))) AND (((v0.c0) BETWEEN (v0.c2) AND (v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((-1173021877) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) BETWEEN ((~ (v0.c2))) AND (((v0.c0) BETWEEN (v0.c2) AND (v0.c2)))));
SELECT COUNT(*) FROM v0 WHERE (-1173021877) ORDER BY ((v0.c0) BETWEEN ((~ (v0.c2))) AND (((v0.c0) BETWEEN (v0.c2) AND (v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((-1173021877) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) BETWEEN ((~ (v0.c2))) AND (((v0.c0) BETWEEN (v0.c2) AND (v0.c2)))));
SELECT COUNT(*) FROM v0 WHERE (-1173021877) ORDER BY ((v0.c0) BETWEEN ((~ (v0.c2))) AND (((v0.c0) BETWEEN (v0.c2) AND (v0.c2))));
SELECT * FROM vt0, v0 WHERE (((((v0.c0) NOTNULL)) ISNULL)) ORDER BY CAST(vt0.c0 AS REAL) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL)) ISNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(vt0.c0 AS REAL) COLLATE BINARY);
SELECT * FROM vt0, v0 WHERE (((((v0.c0) NOTNULL)) ISNULL)) ORDER BY CAST(vt0.c0 AS REAL) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL)) ISNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(vt0.c0 AS REAL) COLLATE BINARY);
SELECT * FROM vt0, v0 WHERE (((((v0.c0) NOTNULL)) ISNULL)) ORDER BY CAST(vt0.c0 AS REAL) COLLATE BINARY;
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((('-275817985', v0.c1, vt0.c0))>((v0.c1, '-9223372036854775808', v0.c2)))))>((((v0.c2)-(v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((('-275817985', v0.c1, vt0.c0))>((v0.c1, '-9223372036854775808', v0.c2)))))>((((v0.c2)-(v0.c1)))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((('-275817985', v0.c1, vt0.c0))>((v0.c1, '-9223372036854775808', v0.c2)))))>((((v0.c2)-(v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((('-275817985', v0.c1, vt0.c0))>((v0.c1, '-9223372036854775808', v0.c2)))))>((((v0.c2)-(v0.c1)))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((('-275817985', v0.c1, vt0.c0))>((v0.c1, '-9223372036854775808', v0.c2)))))>((((v0.c2)-(v0.c1))))));
SELECT * FROM v0, vt0 WHERE (((((CASE WHEN v0.c1 THEN v0.c2 END)AND((((v0.c1, '0.47961370423007', 0.45031564665707924)) NOT BETWEEN ((v0.c1, vt0.c0, 0.9899924090019255)) AND ((0.8420231859548577, v0.c2, v0.c0))))))OR(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c1 THEN v0.c2 END)AND((((v0.c1, '0.47961370423007', 0.45031564665707924)) NOT BETWEEN ((v0.c1, vt0.c0, 0.9899924090019255)) AND ((0.8420231859548577, v0.c2, v0.c0))))))OR(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((CASE WHEN v0.c1 THEN v0.c2 END)AND((((v0.c1, '0.47961370423007', 0.45031564665707924)) NOT BETWEEN ((v0.c1, vt0.c0, 0.9899924090019255)) AND ((0.8420231859548577, v0.c2, v0.c0))))))OR(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c1 THEN v0.c2 END)AND((((v0.c1, '0.47961370423007', 0.45031564665707924)) NOT BETWEEN ((v0.c1, vt0.c0, 0.9899924090019255)) AND ((0.8420231859548577, v0.c2, v0.c0))))))OR(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((CASE WHEN v0.c1 THEN v0.c2 END)AND((((v0.c1, '0.47961370423007', 0.45031564665707924)) NOT BETWEEN ((v0.c1, vt0.c0, 0.9899924090019255)) AND ((0.8420231859548577, v0.c2, v0.c0))))))OR(CAST(vt0.c0 AS INTEGER))));
SELECT * FROM v0 WHERE (((NULL)>>(CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END))) ORDER BY ((((v0.c2) IS FALSE)) BETWEEN (((((v0.c1)OR(v0.c0)))OR(NULL))) AND ((- (v0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)>>(CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2) IS FALSE)) BETWEEN (((((v0.c1)OR(v0.c0)))OR(NULL))) AND ((- (v0.c1)))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((NULL)>>(CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END))) ORDER BY ((((v0.c2) IS FALSE)) BETWEEN (((((v0.c1)OR(v0.c0)))OR(NULL))) AND ((- (v0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)>>(CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2) IS FALSE)) BETWEEN (((((v0.c1)OR(v0.c0)))OR(NULL))) AND ((- (v0.c1)))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((NULL)>>(CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c1 END))) ORDER BY ((((v0.c2) IS FALSE)) BETWEEN (((((v0.c1)OR(v0.c0)))OR(NULL))) AND ((- (v0.c1)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (~ (CAST(v0.c1 AS NUMERIC))) WHERE ((((v0.c2 IN (v0.c0, v0.c1))) NOT BETWEEN (v0.c0) AND ((((vt0.c0)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c2 IN (v0.c0, v0.c1))) NOT BETWEEN (v0.c0) AND ((((vt0.c0)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (~ (CAST(v0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (~ (CAST(v0.c1 AS NUMERIC))) WHERE ((((v0.c2 IN (v0.c0, v0.c1))) NOT BETWEEN (v0.c0) AND ((((vt0.c0)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c2 IN (v0.c0, v0.c1))) NOT BETWEEN (v0.c0) AND ((((vt0.c0)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (~ (CAST(v0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (~ (CAST(v0.c1 AS NUMERIC))) WHERE ((((v0.c2 IN (v0.c0, v0.c1))) NOT BETWEEN (v0.c0) AND ((((vt0.c0)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0))))));
SELECT * FROM v0 WHERE (((((v0.c2)<>(v0.c2)))+(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1))))) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN 'abT 䎥''?U~' THEN v0.c2 ELSE v0.c0 END AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)!=(v0.c2)))+(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN 'abT 䎥''?U~' THEN v0.c2 ELSE v0.c0 END AS BLOB) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c2)<>(v0.c2)))+(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1))))) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN 'abT 䎥''?U~' THEN v0.c2 ELSE v0.c0 END AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)!=(v0.c2)))+(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN 'abT 䎥''?U~' THEN v0.c2 ELSE v0.c0 END AS BLOB) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c2)<>(v0.c2)))+(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1))))) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN 'abT 䎥''?U~' THEN v0.c2 ELSE v0.c0 END AS BLOB) ASC  NULLS LAST;
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (NOT (CASE v0.c2  WHEN v0.c1 THEN vt0.c0 ELSE NULL END)) WHERE (CAST(CASE WHEN v0.c2 THEN v0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c2 THEN vt0.c0 ELSE v0.c2 END AS TEXT)) ORDER BY LTRIM((+ (v0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c2 THEN v0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c2 THEN vt0.c0 ELSE v0.c2 END AS TEXT)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (NOT (CASE v0.c2  WHEN v0.c1 THEN vt0.c0 ELSE NULL END)) ORDER BY LTRIM((+ (v0.c2))) ASC  NULLS FIRST);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (NOT (CASE v0.c2  WHEN v0.c1 THEN vt0.c0 ELSE NULL END)) WHERE (CAST(CASE WHEN v0.c2 THEN v0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c2 THEN vt0.c0 ELSE v0.c2 END AS TEXT)) ORDER BY LTRIM((+ (v0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c2 THEN v0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c2 THEN vt0.c0 ELSE v0.c2 END AS TEXT)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (NOT (CASE v0.c2  WHEN v0.c1 THEN vt0.c0 ELSE NULL END)) ORDER BY LTRIM((+ (v0.c2))) ASC  NULLS FIRST);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (NOT (CASE v0.c2  WHEN v0.c1 THEN vt0.c0 ELSE NULL END)) WHERE (CAST(CASE WHEN v0.c2 THEN v0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c2 THEN vt0.c0 ELSE v0.c2 END AS TEXT)) ORDER BY LTRIM((+ (v0.c2))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD('495070113', 0.2575920828916446));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD('495070113', 0.2575920828916446)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD('495070113', 0.2575920828916446));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD('495070113', 0.2575920828916446)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD('495070113', 0.2575920828916446));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (~ (((((v0.c2)AND(vt0.c0)))OR(v0.c2)))) WHERE (((vt0.c0)GLOB(CASE v0.c1  WHEN v0.c1 THEN v0.c0 ELSE vt0.c0 END))) ORDER BY CAST(vt0.c0 AS INTEGER)  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))=(((v0.c2)OR(v0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB(CASE v0.c1  WHEN v0.c1 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (~ (((((v0.c2)AND(vt0.c0)))OR(v0.c2)))) ORDER BY CAST(vt0.c0 AS INTEGER)  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))=(((v0.c2)OR(v0.c1)))) ASC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (~ (((((v0.c2)AND(vt0.c0)))OR(v0.c2)))) WHERE (((vt0.c0)GLOB(CASE v0.c1  WHEN v0.c1 THEN v0.c0 ELSE vt0.c0 END))) ORDER BY CAST(vt0.c0 AS INTEGER)  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))=(((v0.c2)OR(v0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB(CASE v0.c1  WHEN v0.c1 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (~ (((((v0.c2)AND(vt0.c0)))OR(v0.c2)))) ORDER BY CAST(vt0.c0 AS INTEGER)  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))=(((v0.c2)OR(v0.c1)))) ASC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (~ (((((v0.c2)AND(vt0.c0)))OR(v0.c2)))) WHERE (((vt0.c0)GLOB(CASE v0.c1  WHEN v0.c1 THEN v0.c0 ELSE vt0.c0 END))) ORDER BY CAST(vt0.c0 AS INTEGER)  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))=(((v0.c2)OR(v0.c1)))) ASC;
SELECT * FROM vt0 WHERE (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 'rE')) AND ((vt0.c0, vt0.c0, '-63282961'))), CAST(vt0.c0 AS TEXT), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), IFNULL(vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 'rE')) AND ((vt0.c0, vt0.c0, '-63282961'))), CAST(vt0.c0 AS TEXT), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), IFNULL(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 'rE')) AND ((vt0.c0, vt0.c0, '-63282961'))), CAST(vt0.c0 AS TEXT), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), IFNULL(vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 'rE')) AND ((vt0.c0, vt0.c0, '-63282961'))), CAST(vt0.c0 AS TEXT), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), IFNULL(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 'rE')) AND ((vt0.c0, vt0.c0, '-63282961'))), CAST(vt0.c0 AS TEXT), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), IFNULL(vt0.c0, vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c1) NOT BETWEEN (vt0.c0) AND ('1697128104')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c1) NOT BETWEEN (vt0.c0) AND ('1697128104')) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c1) NOT BETWEEN (vt0.c0) AND ('1697128104')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c1) NOT BETWEEN (vt0.c0) AND ('1697128104')) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c1) NOT BETWEEN (vt0.c0) AND ('1697128104')) COLLATE BINARY);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON v0.c1 WHERE (json_array_length(((vt0.c0) BETWEEN (v0.c2) AND (v0.c1)), (((NULL))<((vt0.c0))))) ORDER BY CAST(CASE v0.c1  WHEN vt0.c0 THEN x'' END AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((vt0.c0) BETWEEN (v0.c2) AND (v0.c1)), (((NULL))<((vt0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON v0.c1 ORDER BY CAST(CASE v0.c1  WHEN vt0.c0 THEN x'' END AS REAL));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON v0.c1 WHERE (json_array_length(((vt0.c0) BETWEEN (v0.c2) AND (v0.c1)), (((NULL))<((vt0.c0))))) ORDER BY CAST(CASE v0.c1  WHEN vt0.c0 THEN x'' END AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((vt0.c0) BETWEEN (v0.c2) AND (v0.c1)), (((NULL))<((vt0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON v0.c1 ORDER BY CAST(CASE v0.c1  WHEN vt0.c0 THEN x'' END AS REAL));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON v0.c1 WHERE (json_array_length(((vt0.c0) BETWEEN (v0.c2) AND (v0.c1)), (((NULL))<((vt0.c0))))) ORDER BY CAST(CASE v0.c1  WHEN vt0.c0 THEN x'' END AS REAL);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((v0.c0)LIKE(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (0X260a36b6)))))OR((('988724598')IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)LIKE(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (0x260a36b6)))))OR((('988724598')IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((v0.c0)LIKE(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (0X260a36b6)))))OR((('988724598')IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)LIKE(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (0x260a36b6)))))OR((('988724598')IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((v0.c0)LIKE(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (0X260a36b6)))))OR((('988724598')IS NOT(vt0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (CHANGES()) ORDER BY ((((((v0.c0) IS FALSE))OR((~ (v0.c2)))))AND(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) IS FALSE))OR((~ (v0.c2)))))AND(x''))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CHANGES()) ORDER BY ((((((v0.c0) IS FALSE))OR((~ (v0.c2)))))AND(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) IS FALSE))OR((~ (v0.c2)))))AND(x''))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CHANGES()) ORDER BY ((((((v0.c0) IS FALSE))OR((~ (v0.c2)))))AND(x''))  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (((((((((CAST(v0.c2 AS REAL))OR(NULL)))AND(((v0.c2)+(v0.c0)))))AND(v0.c0 COLLATE BINARY)))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(v0.c2 AS REAL))OR(NULL)))AND(((v0.c2)+(v0.c0)))))AND(v0.c0 COLLATE BINARY)))AND(v0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((((((CAST(v0.c2 AS REAL))OR(NULL)))AND(((v0.c2)+(v0.c0)))))AND(v0.c0 COLLATE BINARY)))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(v0.c2 AS REAL))OR(NULL)))AND(((v0.c2)+(v0.c0)))))AND(v0.c0 COLLATE BINARY)))AND(v0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((((((CAST(v0.c2 AS REAL))OR(NULL)))AND(((v0.c2)+(v0.c0)))))AND(v0.c0 COLLATE BINARY)))AND(v0.c0)));
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY (~ (json_type(x'7922'))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ (json_type(x'7922'))) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY (~ (json_type(x'7922'))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ (json_type(x'7922'))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((v0.c1)AND(vt0.c0)))OR(v0.c0)))%(((v0.c0)GLOB(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)AND(vt0.c0)))OR(v0.c0)))%(((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((v0.c1)AND(vt0.c0)))OR(v0.c0)))%(((v0.c0)GLOB(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)AND(vt0.c0)))OR(v0.c0)))%(((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((v0.c1)AND(vt0.c0)))OR(v0.c0)))%(((v0.c0)GLOB(v0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c1) BETWEEN (vt0.c0) AND (v0.c2)))>(CAST(v0.c2 AS BLOB)))) ORDER BY x'', (((v0.c1)) BETWEEN ((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))) AND ((rtreenode(v0.c2, v0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) BETWEEN (vt0.c0) AND (v0.c2)))>(CAST(v0.c2 AS BLOB)))) IS TRUE)  as count FROM v0, vt0 ORDER BY x'', (((v0.c1)) BETWEEN ((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))) AND ((rtreenode(v0.c2, v0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c1) BETWEEN (vt0.c0) AND (v0.c2)))>(CAST(v0.c2 AS BLOB)))) ORDER BY x'', (((v0.c1)) BETWEEN ((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))) AND ((rtreenode(v0.c2, v0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) BETWEEN (vt0.c0) AND (v0.c2)))>(CAST(v0.c2 AS BLOB)))) IS TRUE)  as count FROM v0, vt0 ORDER BY x'', (((v0.c1)) BETWEEN ((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))) AND ((rtreenode(v0.c2, v0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c1) BETWEEN (vt0.c0) AND (v0.c2)))>(CAST(v0.c2 AS BLOB)))) ORDER BY x'', (((v0.c1)) BETWEEN ((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))) AND ((rtreenode(v0.c2, v0.c1)))) ASC  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE (vt0.c0) ORDER BY (((CASE WHEN v0.c0 THEN v0.c2 END))>((v0.c1 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY (((CASE WHEN v0.c0 THEN v0.c2 END))>((v0.c1 COLLATE RTRIM))) ASC);
SELECT * FROM vt0, v0 WHERE (vt0.c0) ORDER BY (((CASE WHEN v0.c0 THEN v0.c2 END))>((v0.c1 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY (((CASE WHEN v0.c0 THEN v0.c2 END))>((v0.c1 COLLATE RTRIM))) ASC);
SELECT * FROM vt0, v0 WHERE (vt0.c0) ORDER BY (((CASE WHEN v0.c0 THEN v0.c2 END))>((v0.c1 COLLATE RTRIM))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY ((((vt0.c0)%(vt0.c0))) NOTNULL)  NULLS LAST, CASE ((((vt0.c0)AND('')))AND(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 1.7976931348623157E308 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)IS(vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)%(vt0.c0))) NOTNULL)  NULLS LAST, CASE ((((vt0.c0)AND('')))AND(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 1.7976931348623157E308 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)IS(vt0.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY ((((vt0.c0)%(vt0.c0))) NOTNULL)  NULLS LAST, CASE ((((vt0.c0)AND('')))AND(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 1.7976931348623157E308 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)IS(vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)%(vt0.c0))) NOTNULL)  NULLS LAST, CASE ((((vt0.c0)AND('')))AND(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 1.7976931348623157E308 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)IS(vt0.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY ((((vt0.c0)%(vt0.c0))) NOTNULL)  NULLS LAST, CASE ((((vt0.c0)AND('')))AND(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 1.7976931348623157E308 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)IS(vt0.c0)) END ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c2);
SELECT COUNT(*) FROM vt0, v0 WHERE ((- ((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((0.5626621214830773)))))) ORDER BY (('1510110112')IS(CAST(v0.c2 AS NUMERIC))) ASC, CAST(((v0.c1)&(vt0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((- ((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((0.5626621214830773)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (('1510110112')IS(CAST(v0.c2 AS NUMERIC))) ASC, CAST(((v0.c1)&(vt0.c0)) AS BLOB) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((- ((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((0.5626621214830773)))))) ORDER BY (('1510110112')IS(CAST(v0.c2 AS NUMERIC))) ASC, CAST(((v0.c1)&(vt0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((- ((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((0.5626621214830773)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (('1510110112')IS(CAST(v0.c2 AS NUMERIC))) ASC, CAST(((v0.c1)&(vt0.c0)) AS BLOB) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((- ((((v0.c1)) NOT BETWEEN ((vt0.c0)) AND ((0.5626621214830773)))))) ORDER BY (('1510110112')IS(CAST(v0.c2 AS NUMERIC))) ASC, CAST(((v0.c1)&(vt0.c0)) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (LIKELIHOOD(((((v0.c2)OR(v0.c1)))OR(v0.c1)), 0.9343087650339623)) ORDER BY (((vt0.c0 IN ())) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((((v0.c2)OR(v0.c1)))OR(v0.c1)), 0.9343087650339623)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0 IN ())) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (LIKELIHOOD(((((v0.c2)OR(v0.c1)))OR(v0.c1)), 0.9343087650339623)) ORDER BY (((vt0.c0 IN ())) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((((v0.c2)OR(v0.c1)))OR(v0.c1)), 0.9343087650339623)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0 IN ())) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (LIKELIHOOD(((((v0.c2)OR(v0.c1)))OR(v0.c1)), 0.9343087650339623)) ORDER BY (((vt0.c0 IN ())) NOTNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c1)) NOT BETWEEN (((~ (v0.c0)))) AND ((((v0.c2)<>(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN (((~ (v0.c0)))) AND ((((v0.c2)!=(v0.c2)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c1)) NOT BETWEEN (((~ (v0.c0)))) AND ((((v0.c2)<>(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN (((~ (v0.c0)))) AND ((((v0.c2)!=(v0.c2)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c1)) NOT BETWEEN (((~ (v0.c0)))) AND ((((v0.c2)<>(v0.c2))))));
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))LIKE(2118554317))) ORDER BY ('-1171260928' IN ());
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))LIKE(2118554317))) IS TRUE)  as count FROM vt0 ORDER BY ('-1171260928' IN ()));
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))LIKE(2118554317))) ORDER BY ('-1171260928' IN ());
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))LIKE(2118554317))) IS TRUE)  as count FROM vt0 ORDER BY ('-1171260928' IN ()));
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))LIKE(2118554317))) ORDER BY ('-1171260928' IN ());
SELECT COUNT(*) FROM vt0, v0 WHERE (((CAST(v0.c0 AS BLOB)) ISNULL)) ORDER BY CAST(((((((((v0.c0)OR(v0.c2)))OR(v0.c2)))OR(vt0.c0)))OR(vt0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((((((((v0.c0)OR(v0.c2)))OR(v0.c2)))OR(vt0.c0)))OR(vt0.c0)) AS INTEGER) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((CAST(v0.c0 AS BLOB)) ISNULL)) ORDER BY CAST(((((((((v0.c0)OR(v0.c2)))OR(v0.c2)))OR(vt0.c0)))OR(vt0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((((((((v0.c0)OR(v0.c2)))OR(v0.c2)))OR(vt0.c0)))OR(vt0.c0)) AS INTEGER) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((CAST(v0.c0 AS BLOB)) ISNULL)) ORDER BY CAST(((((((((v0.c0)OR(v0.c2)))OR(v0.c2)))OR(vt0.c0)))OR(vt0.c0)) AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))>(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0)))>(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))>(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0)))>(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))>(((v0.c0) NOTNULL))));
SELECT ALL * FROM v0 WHERE (ABS(((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))AND(v0.c2)))OR(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))AND(v0.c2)))OR(v0.c1)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (ABS(((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))AND(v0.c2)))OR(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))AND(v0.c2)))OR(v0.c1)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (ABS(((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))AND(v0.c2)))OR(v0.c1))));
SELECT ALL * FROM v0, vt0 WHERE (CASE ((v0.c2) NOT NULL)  WHEN ((vt0.c0) NOT NULL) THEN ((v0.c1)<=(v0.c2)) WHEN (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c2, v0.c2)) AND ((v0.c0, vt0.c0, v0.c2))) THEN CASE WHEN -273500719 THEN v0.c1 END WHEN 0.25576990421847845 THEN UNLIKELY(v0.c1) WHEN ((vt0.c0)=(v0.c0)) THEN (((v0.c2))>=((v0.c2))) WHEN 0.7016043803020836 THEN ((v0.c0)<<(v0.c0)) END) ORDER BY (~ (((v0.c0)<(v0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c2) NOT NULL)  WHEN ((vt0.c0) NOT NULL) THEN ((v0.c1)<=(v0.c2)) WHEN (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c2, v0.c2)) AND ((v0.c0, vt0.c0, v0.c2))) THEN CASE WHEN -273500719 THEN v0.c1 END WHEN 0.25576990421847845 THEN UNLIKELY(v0.c1) WHEN ((vt0.c0)=(v0.c0)) THEN (((v0.c2))>=((v0.c2))) WHEN 0.7016043803020836 THEN ((v0.c0)<<(v0.c0)) END) IS TRUE)  as count FROM v0 NOT INDEXED, vt0 ORDER BY (~ (((v0.c0)<(v0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (CASE ((v0.c2) NOT NULL)  WHEN ((vt0.c0) NOT NULL) THEN ((v0.c1)<=(v0.c2)) WHEN (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c2, v0.c2)) AND ((v0.c0, vt0.c0, v0.c2))) THEN CASE WHEN -273500719 THEN v0.c1 END WHEN 0.25576990421847845 THEN UNLIKELY(v0.c1) WHEN ((vt0.c0)=(v0.c0)) THEN (((v0.c2))>=((v0.c2))) WHEN 0.7016043803020836 THEN ((v0.c0)<<(v0.c0)) END) ORDER BY (~ (((v0.c0)<(v0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c2) NOT NULL)  WHEN ((vt0.c0) NOT NULL) THEN ((v0.c1)<=(v0.c2)) WHEN (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c2, v0.c2)) AND ((v0.c0, vt0.c0, v0.c2))) THEN CASE WHEN -273500719 THEN v0.c1 END WHEN 0.25576990421847845 THEN UNLIKELY(v0.c1) WHEN ((vt0.c0)=(v0.c0)) THEN (((v0.c2))>=((v0.c2))) WHEN 0.7016043803020836 THEN ((v0.c0)<<(v0.c0)) END) IS TRUE)  as count FROM v0 NOT INDEXED, vt0 ORDER BY (~ (((v0.c0)<(v0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (CASE ((v0.c2) NOT NULL)  WHEN ((vt0.c0) NOT NULL) THEN ((v0.c1)<=(v0.c2)) WHEN (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c2, v0.c2)) AND ((v0.c0, vt0.c0, v0.c2))) THEN CASE WHEN -273500719 THEN v0.c1 END WHEN 0.25576990421847845 THEN UNLIKELY(v0.c1) WHEN ((vt0.c0)=(v0.c0)) THEN (((v0.c2))>=((v0.c2))) WHEN 0.7016043803020836 THEN ((v0.c0)<<(v0.c0)) END) ORDER BY (~ (((v0.c0)<(v0.c1)))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((+ (vt0.c0))) ORDER BY (((vt0.c0)) BETWEEN (((((vt0.c0))<((vt0.c0))))) AND (((NULL IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (((((vt0.c0))<((vt0.c0))))) AND (((NULL IN ())))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((+ (vt0.c0))) ORDER BY (((vt0.c0)) BETWEEN (((((vt0.c0))<((vt0.c0))))) AND (((NULL IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (((((vt0.c0))<((vt0.c0))))) AND (((NULL IN ())))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((+ (vt0.c0))) ORDER BY (((vt0.c0)) BETWEEN (((((vt0.c0))<((vt0.c0))))) AND (((NULL IN ())))) ASC  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE (CAST(CASE ''  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c1 ELSE v0.c0 END AS INTEGER)) ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END)AND(((v0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((CAST(CASE ''  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c1 ELSE v0.c0 END AS INTEGER)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END)AND(((v0.c2) NOT NULL))));
SELECT ALL * FROM v0, vt0 WHERE (CAST(CASE ''  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c1 ELSE v0.c0 END AS INTEGER)) ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END)AND(((v0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((CAST(CASE ''  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c1 ELSE v0.c0 END AS INTEGER)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END)AND(((v0.c2) NOT NULL))));
SELECT ALL * FROM v0, vt0 WHERE (CAST(CASE ''  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c1 ELSE v0.c0 END AS INTEGER)) ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END)AND(((v0.c2) NOT NULL)));
SELECT COUNT(*) FROM v0 WHERE ((- ((v0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((v0.c2 IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- ((v0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((v0.c2 IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- ((v0.c2 IN ()))));
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (highlight((- (v0.c1)), ((vt0.c0)AND(v0.c0)), ((v0.c1)==(v0.c1)), v0.c0)) ORDER BY (((vt0.c0 COLLATE NOCASE))!=((vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((highlight((- (v0.c1)), ((vt0.c0)AND(v0.c0)), ((v0.c1)==(v0.c1)), v0.c0)) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY (((vt0.c0 COLLATE NOCASE))<>((vt0.c0)))  NULLS LAST);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (highlight((- (v0.c1)), ((vt0.c0)AND(v0.c0)), ((v0.c1)==(v0.c1)), v0.c0)) ORDER BY (((vt0.c0 COLLATE NOCASE))!=((vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((highlight((- (v0.c1)), ((vt0.c0)AND(v0.c0)), ((v0.c1)==(v0.c1)), v0.c0)) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY (((vt0.c0 COLLATE NOCASE))<>((vt0.c0)))  NULLS LAST);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (highlight((- (v0.c1)), ((vt0.c0)AND(v0.c0)), ((v0.c1)==(v0.c1)), v0.c0)) ORDER BY (((vt0.c0 COLLATE NOCASE))!=((vt0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((NULL)<(CASE WHEN x'7ab9' THEN v0.c2 END))) ORDER BY (((v0.c2)) NOT BETWEEN ((x'eb4f')) AND ((((v0.c1)+(v0.c0))))) ASC, (((((((((v0.c1 IN ()))OR(CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN vt0.c0 THEN v0.c2 ELSE x'' END)))AND(UPPER(v0.c0))))AND((x'c643' IN (v0.c0, v0.c0)))))AND(((((((((v0.c0)AND(v0.c1)))OR(v0.c2)))AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((NULL)<(CASE WHEN x'7ab9' THEN v0.c2 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c2)) NOT BETWEEN ((x'eb4f')) AND ((((v0.c1)+(v0.c0))))) ASC, (((((((((v0.c1 IN ()))OR(CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN vt0.c0 THEN v0.c2 ELSE x'' END)))AND(UPPER(v0.c0))))AND((x'c643' IN (v0.c0, v0.c0)))))AND(((((((((v0.c0)AND(v0.c1)))OR(v0.c2)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((NULL)<(CASE WHEN x'7ab9' THEN v0.c2 END))) ORDER BY (((v0.c2)) NOT BETWEEN ((x'eb4f')) AND ((((v0.c1)+(v0.c0))))) ASC, (((((((((v0.c1 IN ()))OR(CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN vt0.c0 THEN v0.c2 ELSE x'' END)))AND(UPPER(v0.c0))))AND((x'c643' IN (v0.c0, v0.c0)))))AND(((((((((v0.c0)AND(v0.c1)))OR(v0.c2)))AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((NULL)<(CASE WHEN x'7ab9' THEN v0.c2 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c2)) NOT BETWEEN ((x'eb4f')) AND ((((v0.c1)+(v0.c0))))) ASC, (((((((((v0.c1 IN ()))OR(CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN vt0.c0 THEN v0.c2 ELSE x'' END)))AND(UPPER(v0.c0))))AND((x'c643' IN (v0.c0, v0.c0)))))AND(((((((((v0.c0)AND(v0.c1)))OR(v0.c2)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((NULL)<(CASE WHEN x'7ab9' THEN v0.c2 END))) ORDER BY (((v0.c2)) NOT BETWEEN ((x'eb4f')) AND ((((v0.c1)+(v0.c0))))) ASC, (((((((((v0.c1 IN ()))OR(CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN vt0.c0 THEN v0.c2 ELSE x'' END)))AND(UPPER(v0.c0))))AND((x'c643' IN (v0.c0, v0.c0)))))AND(((((((((v0.c0)AND(v0.c1)))OR(v0.c2)))AND(vt0.c0)))AND(vt0.c0))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS BLOB));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS BLOB));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS BLOB);
SELECT ALL * FROM v0 WHERE (0xffffffffb31d0c36) ORDER BY ((CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c0 END)>>(v0.c0 COLLATE NOCASE)) ASC  NULLS LAST, CAST(((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))OR(v0.c1)))OR(v0.c2)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffb31d0c36) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c0 END)>>(v0.c0 COLLATE NOCASE)) ASC  NULLS LAST, CAST(((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))OR(v0.c1)))OR(v0.c2)) AS REAL)  NULLS LAST);
SELECT ALL * FROM v0 WHERE (0xffffffffb31d0c36) ORDER BY ((CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c0 END)>>(v0.c0 COLLATE NOCASE)) ASC  NULLS LAST, CAST(((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))OR(v0.c1)))OR(v0.c2)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffb31d0c36) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c0 END)>>(v0.c0 COLLATE NOCASE)) ASC  NULLS LAST, CAST(((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))OR(v0.c1)))OR(v0.c2)) AS REAL)  NULLS LAST);
SELECT ALL * FROM v0 WHERE (0xffffffffb31d0c36) ORDER BY ((CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c0 END)>>(v0.c0 COLLATE NOCASE)) ASC  NULLS LAST, CAST(((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))OR(v0.c1)))OR(v0.c2)) AS REAL)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((TRIM('-1152045374', vt0.c0)))!=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((TRIM('-1152045374', vt0.c0)))!=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((TRIM('-1152045374', vt0.c0)))!=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((TRIM('-1152045374', vt0.c0)))!=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((TRIM('-1152045374', vt0.c0)))!=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))));
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE '' END)|(((v0.c2)>=(v0.c1))))) ORDER BY CASE WHEN (('')>(v0.c1)) THEN (v0.c2 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE '' END)|(((v0.c2)>=(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (('')>(v0.c1)) THEN (v0.c2 IN ()) END);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE '' END)|(((v0.c2)>=(v0.c1))))) ORDER BY CASE WHEN (('')>(v0.c1)) THEN (v0.c2 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE '' END)|(((v0.c2)>=(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (('')>(v0.c1)) THEN (v0.c2 IN ()) END);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE '' END)|(((v0.c2)>=(v0.c1))))) ORDER BY CASE WHEN (('')>(v0.c1)) THEN (v0.c2 IN ()) END;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((((((((v0.c1 IN ()))AND(((vt0.c0)IS NOT(v0.c2)))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c2)))AND('-225229324')))OR(v0.c0)))))AND(((v0.c2) IS TRUE))))AND('sMRB')) WHERE (vt0.c0) ORDER BY (((((((vt0.c0)OR(v0.c2)))AND(v0.c2)), 1536408950, v0.c1))<((((vt0.c0)/(vt0.c0)), LIKELY(v0.c1), ((((((((0.08826916407554442)AND(v0.c2)))OR(v0.c2)))AND(v0.c2)))AND(v0.c0)))))  NULLS LAST, (- ((('636330021') NOT BETWEEN (v0.c1) AND (vt0.c0)))), (((((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c2))))AND(CAST(v0.c0 AS REAL))))OR((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((((((((v0.c1 IN ()))AND(((vt0.c0)IS NOT(v0.c2)))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c2)))AND('-225229324')))OR(v0.c0)))))AND(((v0.c2) IS TRUE))))AND('sMRB')) ORDER BY (((((((vt0.c0)OR(v0.c2)))AND(v0.c2)), 1536408950, v0.c1))<((((vt0.c0)/(vt0.c0)), LIKELY(v0.c1), ((((((((0.08826916407554442)AND(v0.c2)))OR(v0.c2)))AND(v0.c2)))AND(v0.c0)))))  NULLS LAST, (- ((('636330021') NOT BETWEEN (v0.c1) AND (vt0.c0)))), (((((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c2))))AND(CAST(v0.c0 AS REAL))))OR((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0))))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((((((((v0.c1 IN ()))AND(((vt0.c0)IS NOT(v0.c2)))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c2)))AND('-225229324')))OR(v0.c0)))))AND(((v0.c2) IS TRUE))))AND('sMRB')) WHERE (vt0.c0) ORDER BY (((((((vt0.c0)OR(v0.c2)))AND(v0.c2)), 1536408950, v0.c1))<((((vt0.c0)/(vt0.c0)), LIKELY(v0.c1), ((((((((0.08826916407554442)AND(v0.c2)))OR(v0.c2)))AND(v0.c2)))AND(v0.c0)))))  NULLS LAST, (- ((('636330021') NOT BETWEEN (v0.c1) AND (vt0.c0)))), (((((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c2))))AND(CAST(v0.c0 AS REAL))))OR((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((((((((v0.c1 IN ()))AND(((vt0.c0)IS NOT(v0.c2)))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c2)))AND('-225229324')))OR(v0.c0)))))AND(((v0.c2) IS TRUE))))AND('sMRB')) ORDER BY (((((((vt0.c0)OR(v0.c2)))AND(v0.c2)), 1536408950, v0.c1))<((((vt0.c0)/(vt0.c0)), LIKELY(v0.c1), ((((((((0.08826916407554442)AND(v0.c2)))OR(v0.c2)))AND(v0.c2)))AND(v0.c0)))))  NULLS LAST, (- ((('636330021') NOT BETWEEN (v0.c1) AND (vt0.c0)))), (((((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c2))))AND(CAST(v0.c0 AS REAL))))OR((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0))))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((((((((v0.c1 IN ()))AND(((vt0.c0)IS NOT(v0.c2)))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c2)))AND('-225229324')))OR(v0.c0)))))AND(((v0.c2) IS TRUE))))AND('sMRB')) WHERE (vt0.c0) ORDER BY (((((((vt0.c0)OR(v0.c2)))AND(v0.c2)), 1536408950, v0.c1))<((((vt0.c0)/(vt0.c0)), LIKELY(v0.c1), ((((((((0.08826916407554442)AND(v0.c2)))OR(v0.c2)))AND(v0.c2)))AND(v0.c0)))))  NULLS LAST, (- ((('636330021') NOT BETWEEN (v0.c1) AND (vt0.c0)))), (((((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c2))))AND(CAST(v0.c0 AS REAL))))OR((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0)))));
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)) BETWEEN (((+ (v0.c2)))) AND ((vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN (((+ (v0.c2)))) AND ((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)) BETWEEN (((+ (v0.c2)))) AND ((vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN (((+ (v0.c2)))) AND ((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)) BETWEEN (((+ (v0.c2)))) AND ((vt0.c0 COLLATE NOCASE))));
SELECT * FROM v0, vt0 WHERE (((((v0.c1)>>('נּ')))>(((((v0.c1)AND(v0.c1)))OR(vt0.c0))))) ORDER BY 0.1767518668862924 ASC, ((('9p'))<>((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)>>('נּ')))>(((((v0.c1)AND(v0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY 0.1767518668862924 ASC, ((('9p'))<>((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END))));
SELECT * FROM v0, vt0 WHERE (((((v0.c1)>>('נּ')))>(((((v0.c1)AND(v0.c1)))OR(vt0.c0))))) ORDER BY 0.1767518668862924 ASC, ((('9p'))<>((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)>>('נּ')))>(((((v0.c1)AND(v0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY 0.1767518668862924 ASC, ((('9p'))<>((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END))));
SELECT * FROM v0, vt0 WHERE (((((v0.c1)>>('נּ')))>(((((v0.c1)AND(v0.c1)))OR(vt0.c0))))) ORDER BY 0.1767518668862924 ASC, ((('9p'))<>((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END)));
SELECT ALL * FROM vt0, v0 WHERE ((NOT ((((v0.c2, vt0.c0, v0.c1)) NOT BETWEEN ((v0.c2, v0.c2, v0.c1)) AND ((v0.c0, v0.c1, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((v0.c2, vt0.c0, v0.c1)) NOT BETWEEN ((v0.c2, v0.c2, v0.c1)) AND ((v0.c0, v0.c1, v0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((NOT ((((v0.c2, vt0.c0, v0.c1)) NOT BETWEEN ((v0.c2, v0.c2, v0.c1)) AND ((v0.c0, v0.c1, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((v0.c2, vt0.c0, v0.c1)) NOT BETWEEN ((v0.c2, v0.c2, v0.c1)) AND ((v0.c0, v0.c1, v0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((NOT ((((v0.c2, vt0.c0, v0.c1)) NOT BETWEEN ((v0.c2, v0.c2, v0.c1)) AND ((v0.c0, v0.c1, v0.c0))))));
SELECT ALL * FROM v0 WHERE (LIKELY(DISTINCT 0.055834894511264443));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT 0.055834894511264443)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LIKELY(DISTINCT 0.055834894511264443));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT 0.055834894511264443)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LIKELY(DISTINCT 0.055834894511264443));
SELECT * FROM v0, vt0 WHERE (CASE WHEN ((((((((v0.c0)OR(vt0.c0)))AND(v0.c2)))OR(v0.c2)))OR(v0.c0)) THEN (((v0.c1))>((v0.c2))) WHEN ((v0.c2)==(v0.c2)) THEN ((v0.c2) NOT BETWEEN (v0.c2) AND (vt0.c0)) WHEN (((v0.c2))>((v0.c0))) THEN (((NULL))<>((v0.c1))) ELSE (vt0.c0 IN ()) END) ORDER BY (((NOT (v0.c1))) NOT NULL) DESC  NULLS FIRST, (((vt0.c0 IN ()))=(CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((v0.c0)OR(vt0.c0)))AND(v0.c2)))OR(v0.c2)))OR(v0.c0)) THEN (((v0.c1))>((v0.c2))) WHEN ((v0.c2)==(v0.c2)) THEN ((v0.c2) NOT BETWEEN (v0.c2) AND (vt0.c0)) WHEN (((v0.c2))>((v0.c0))) THEN (((NULL))<>((v0.c1))) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (((NOT (v0.c1))) NOT NULL) DESC  NULLS FIRST, (((vt0.c0 IN ()))=(CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END))  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (CASE WHEN ((((((((v0.c0)OR(vt0.c0)))AND(v0.c2)))OR(v0.c2)))OR(v0.c0)) THEN (((v0.c1))>((v0.c2))) WHEN ((v0.c2)==(v0.c2)) THEN ((v0.c2) NOT BETWEEN (v0.c2) AND (vt0.c0)) WHEN (((v0.c2))>((v0.c0))) THEN (((NULL))<>((v0.c1))) ELSE (vt0.c0 IN ()) END) ORDER BY (((NOT (v0.c1))) NOT NULL) DESC  NULLS FIRST, (((vt0.c0 IN ()))=(CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((v0.c0)OR(vt0.c0)))AND(v0.c2)))OR(v0.c2)))OR(v0.c0)) THEN (((v0.c1))>((v0.c2))) WHEN ((v0.c2)==(v0.c2)) THEN ((v0.c2) NOT BETWEEN (v0.c2) AND (vt0.c0)) WHEN (((v0.c2))>((v0.c0))) THEN (((NULL))<>((v0.c1))) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (((NOT (v0.c1))) NOT NULL) DESC  NULLS FIRST, (((vt0.c0 IN ()))=(CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END))  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (CASE WHEN ((((((((v0.c0)OR(vt0.c0)))AND(v0.c2)))OR(v0.c2)))OR(v0.c0)) THEN (((v0.c1))>((v0.c2))) WHEN ((v0.c2)==(v0.c2)) THEN ((v0.c2) NOT BETWEEN (v0.c2) AND (vt0.c0)) WHEN (((v0.c2))>((v0.c0))) THEN (((NULL))<>((v0.c1))) ELSE (vt0.c0 IN ()) END) ORDER BY (((NOT (v0.c1))) NOT NULL) DESC  NULLS FIRST, (((vt0.c0 IN ()))=(CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((CASE v0.c2  WHEN vt0.c0 THEN v0.c2 WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 END)&(((((v0.c0)OR(v0.c2)))AND(v0.c0))))) ORDER BY (NOT (CASE WHEN vt0.c0 THEN v0.c0 END)) ASC  NULLS FIRST, ((x'') NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c2  WHEN vt0.c0 THEN v0.c2 WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 END)&(((((v0.c0)OR(v0.c2)))AND(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (NOT (CASE WHEN vt0.c0 THEN v0.c0 END)) ASC  NULLS FIRST, ((x'') NOTNULL) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((CASE v0.c2  WHEN vt0.c0 THEN v0.c2 WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 END)&(((((v0.c0)OR(v0.c2)))AND(v0.c0))))) ORDER BY (NOT (CASE WHEN vt0.c0 THEN v0.c0 END)) ASC  NULLS FIRST, ((x'') NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c2  WHEN vt0.c0 THEN v0.c2 WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 END)&(((((v0.c0)OR(v0.c2)))AND(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (NOT (CASE WHEN vt0.c0 THEN v0.c0 END)) ASC  NULLS FIRST, ((x'') NOTNULL) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((CASE v0.c2  WHEN vt0.c0 THEN v0.c2 WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c2 END)&(((((v0.c0)OR(v0.c2)))AND(v0.c0))))) ORDER BY (NOT (CASE WHEN vt0.c0 THEN v0.c0 END)) ASC  NULLS FIRST, ((x'') NOTNULL) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<(0Xffffffffeb6aa1da)))+((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(0xffffffffeb6aa1da)))+((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<(0Xffffffffeb6aa1da)))+((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(0xffffffffeb6aa1da)))+((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<(0Xffffffffeb6aa1da)))+((+ (vt0.c0)))));
SELECT ALL * FROM v0 WHERE (CASE WHEN LOWER(DISTINCT v0.c2) THEN v0.c1 ELSE 'm#' END) ORDER BY ((('124420277'))=((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LOWER(DISTINCT v0.c2) THEN v0.c1 ELSE 'm#' END) IS TRUE)  as count FROM v0 ORDER BY ((('124420277'))==((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2)))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CASE WHEN LOWER(DISTINCT v0.c2) THEN v0.c1 ELSE 'm#' END) ORDER BY ((('124420277'))=((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LOWER(DISTINCT v0.c2) THEN v0.c1 ELSE 'm#' END) IS TRUE)  as count FROM v0 ORDER BY ((('124420277'))==((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2)))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CASE WHEN LOWER(DISTINCT v0.c2) THEN v0.c1 ELSE 'm#' END) ORDER BY ((('124420277'))=((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (x'') ORDER BY CASE WHEN ((vt0.c0)LIKE('')) THEN ((vt0.c0)>>(v0.c2)) END;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((vt0.c0)LIKE('')) THEN ((vt0.c0)>>(v0.c2)) END);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (x'') ORDER BY CASE WHEN ((vt0.c0)LIKE('')) THEN ((vt0.c0)>>(v0.c2)) END;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((vt0.c0)LIKE('')) THEN ((vt0.c0)>>(v0.c2)) END);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (x'') ORDER BY CASE WHEN ((vt0.c0)LIKE('')) THEN ((vt0.c0)>>(v0.c2)) END;
SELECT * FROM v0, vt0 WHERE (CAST(STRFTIME(vt0.c0, v0.c1, vt0.c0) AS BLOB)) ORDER BY ((CASE '{[.W^&]5\n'  WHEN NULL THEN v0.c1 ELSE v0.c2 END)<>(((v0.c1) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(STRFTIME(vt0.c0, v0.c1, vt0.c0) AS BLOB)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE '{[.W^&]5\n'  WHEN NULL THEN v0.c1 ELSE v0.c2 END)<>(((v0.c1) IS TRUE))) ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (CAST(STRFTIME(vt0.c0, v0.c1, vt0.c0) AS BLOB)) ORDER BY ((CASE '{[.W^&]5\n'  WHEN NULL THEN v0.c1 ELSE v0.c2 END)<>(((v0.c1) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(STRFTIME(vt0.c0, v0.c1, vt0.c0) AS BLOB)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE '{[.W^&]5\n'  WHEN NULL THEN v0.c1 ELSE v0.c2 END)<>(((v0.c1) IS TRUE))) ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (CAST(STRFTIME(vt0.c0, v0.c1, vt0.c0) AS BLOB)) ORDER BY ((CASE '{[.W^&]5\n'  WHEN NULL THEN v0.c1 ELSE v0.c2 END)<>(((v0.c1) IS TRUE))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ('' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('' COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('' COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('' COLLATE NOCASE);
SELECT ALL * FROM vt0, v0 WHERE (0.5810602810384792) ORDER BY (((v0.c1 IN (v0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((0.5810602810384792) IS TRUE)  as count FROM vt0 NOT INDEXED, v0 ORDER BY (((v0.c1 IN (v0.c0))) ISNULL));
SELECT ALL * FROM vt0, v0 WHERE (0.5810602810384792) ORDER BY (((v0.c1 IN (v0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((0.5810602810384792) IS TRUE)  as count FROM vt0 NOT INDEXED, v0 ORDER BY (((v0.c1 IN (v0.c0))) ISNULL));
SELECT ALL * FROM vt0, v0 WHERE (0.5810602810384792) ORDER BY (((v0.c1 IN (v0.c0))) ISNULL);
SELECT * FROM vt0, v0 WHERE (((((x'') NOT NULL)) BETWEEN (((v0.c2)-(v0.c2))) AND (((v0.c0)<<(v0.c0))))) ORDER BY (((v0.c1)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((CASE v0.c1  WHEN '4￿' THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT NULL)) BETWEEN (((v0.c2)-(v0.c2))) AND (((v0.c0)<<(v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c1)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((CASE v0.c1  WHEN '4￿' THEN v0.c0 ELSE v0.c0 END))));
SELECT * FROM vt0, v0 WHERE (((((x'') NOT NULL)) BETWEEN (((v0.c2)-(v0.c2))) AND (((v0.c0)<<(v0.c0))))) ORDER BY (((v0.c1)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((CASE v0.c1  WHEN '4￿' THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT NULL)) BETWEEN (((v0.c2)-(v0.c2))) AND (((v0.c0)<<(v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c1)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((CASE v0.c1  WHEN '4￿' THEN v0.c0 ELSE v0.c0 END))));
SELECT * FROM vt0, v0 WHERE (((((x'') NOT NULL)) BETWEEN (((v0.c2)-(v0.c2))) AND (((v0.c0)<<(v0.c0))))) ORDER BY (((v0.c1)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((CASE v0.c1  WHEN '4￿' THEN v0.c0 ELSE v0.c0 END)));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON CASE (v0.c0 IN (v0.c0))  WHEN ((v0.c1) IS FALSE) THEN (((v0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c2))) END WHERE ((((v0.c1 IN (v0.c2, v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN (v0.c2, v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CASE (v0.c0 IN (v0.c0))  WHEN ((v0.c1) IS FALSE) THEN (((v0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c2))) END);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON CASE (v0.c0 IN (v0.c0))  WHEN ((v0.c1) IS FALSE) THEN (((v0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c2))) END WHERE ((((v0.c1 IN (v0.c2, v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN (v0.c2, v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CASE (v0.c0 IN (v0.c0))  WHEN ((v0.c1) IS FALSE) THEN (((v0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c2))) END);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON CASE (v0.c0 IN (v0.c0))  WHEN ((v0.c1) IS FALSE) THEN (((v0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c2))) END WHERE ((((v0.c1 IN (v0.c2, v0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))%(((1661306313) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY LIKELIHOOD(vt0.c0, 0.3532708005680609) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))%(((1661306313) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(vt0.c0, 0.3532708005680609) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))%(((1661306313) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY LIKELIHOOD(vt0.c0, 0.3532708005680609) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))%(((1661306313) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(vt0.c0, 0.3532708005680609) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))%(((1661306313) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY LIKELIHOOD(vt0.c0, 0.3532708005680609) ASC;
SELECT ALL * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (vt0.c0, (('')|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (vt0.c0, (('')|(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (vt0.c0, (('')|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (vt0.c0, (('')|(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (vt0.c0, (('')|(vt0.c0)))));
SELECT * FROM vt0 WHERE (highlight((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), '1063298102', CAST(vt0.c0 AS TEXT), CAST(vt0.c0 AS TEXT))) ORDER BY 75310627 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((highlight((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), '1063298102', CAST(vt0.c0 AS TEXT), CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM vt0 ORDER BY 75310627 ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (highlight((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), '1063298102', CAST(vt0.c0 AS TEXT), CAST(vt0.c0 AS TEXT))) ORDER BY 75310627 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((highlight((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), '1063298102', CAST(vt0.c0 AS TEXT), CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM vt0 ORDER BY 75310627 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON NULL WHERE ((((v0.c1 IN (v0.c0)))IS(((vt0.c0)+(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN (v0.c0)))IS(((vt0.c0)+(v0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON NULL);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON NULL WHERE ((((v0.c1 IN (v0.c0)))IS(((vt0.c0)+(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN (v0.c0)))IS(((vt0.c0)+(v0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON NULL);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON NULL WHERE ((((v0.c1 IN (v0.c0)))IS(((vt0.c0)+(v0.c0)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((((~ (v0.c2)))OR(((((vt0.c0)AND(v0.c1)))AND(v0.c0)))))OR(CAST(vt0.c0 AS TEXT))) WHERE ((((v0.c2 COLLATE NOCASE))>((TRIM(DISTINCT v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((v0.c2 COLLATE NOCASE))>((TRIM(DISTINCT v0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((((~ (v0.c2)))OR(((((vt0.c0)AND(v0.c1)))AND(v0.c0)))))OR(CAST(vt0.c0 AS TEXT))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((((~ (v0.c2)))OR(((((vt0.c0)AND(v0.c1)))AND(v0.c0)))))OR(CAST(vt0.c0 AS TEXT))) WHERE ((((v0.c2 COLLATE NOCASE))>((TRIM(DISTINCT v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((v0.c2 COLLATE NOCASE))>((TRIM(DISTINCT v0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((((~ (v0.c2)))OR(((((vt0.c0)AND(v0.c1)))AND(v0.c0)))))OR(CAST(vt0.c0 AS TEXT))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((((~ (v0.c2)))OR(((((vt0.c0)AND(v0.c1)))AND(v0.c0)))))OR(CAST(vt0.c0 AS TEXT))) WHERE ((((v0.c2 COLLATE NOCASE))>((TRIM(DISTINCT v0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((((((((((((((v0.c1)*(0.6362166578516791)))OR(((((((((v0.c0)OR(v0.c0)))OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))))OR((+ (v0.c1)))))AND(((((v0.c1)AND(v0.c2)))OR(v0.c1)))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c2)))))AND(CAST(500568235 AS REAL))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (NULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((((v0.c1)*(0.6362166578516791)))OR(((((((((v0.c0)OR(v0.c0)))OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))))OR((+ (v0.c1)))))AND(((((v0.c1)AND(v0.c2)))OR(v0.c1)))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c2)))))AND(CAST(500568235 AS REAL))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (NULL)))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((((((((((((((v0.c1)*(0.6362166578516791)))OR(((((((((v0.c0)OR(v0.c0)))OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))))OR((+ (v0.c1)))))AND(((((v0.c1)AND(v0.c2)))OR(v0.c1)))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c2)))))AND(CAST(500568235 AS REAL))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (NULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((((v0.c1)*(0.6362166578516791)))OR(((((((((v0.c0)OR(v0.c0)))OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))))OR((+ (v0.c1)))))AND(((((v0.c1)AND(v0.c2)))OR(v0.c1)))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c2)))))AND(CAST(500568235 AS REAL))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (NULL)))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((((((((((((((v0.c1)*(0.6362166578516791)))OR(((((((((v0.c0)OR(v0.c0)))OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))))OR((+ (v0.c1)))))AND(((((v0.c1)AND(v0.c2)))OR(v0.c1)))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c2)))))AND(CAST(500568235 AS REAL))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (NULL)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (CASE (- (v0.c2))  WHEN ((((v0.c2)AND(v0.c1)))OR(v0.c2)) THEN ((v0.c0)%(v0.c2)) WHEN (((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) THEN (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))) WHEN ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)) THEN CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN 0Xffffffff83c8d10f ELSE v0.c0 END ELSE ((((v0.c1)OR(v0.c2)))OR(v0.c2)) END) ORDER BY ((v0.c0) ISNULL)  NULLS FIRST, (((v0.c2)) NOT BETWEEN (((NOT (v0.c0)))) AND ((((v0.c1)==(NULL)))));
SELECT SUM(count) FROM (SELECT ((CASE (- (v0.c2))  WHEN ((((v0.c2)AND(v0.c1)))OR(v0.c2)) THEN ((v0.c0)%(v0.c2)) WHEN (((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) THEN (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))) WHEN ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)) THEN CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN 0xffffffff83c8d10f ELSE v0.c0 END ELSE ((((v0.c1)OR(v0.c2)))OR(v0.c2)) END) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) ISNULL)  NULLS FIRST, (((v0.c2)) NOT BETWEEN (((NOT (v0.c0)))) AND ((((v0.c1)==(NULL))))));
SELECT COUNT(*) FROM v0 WHERE (CASE (- (v0.c2))  WHEN ((((v0.c2)AND(v0.c1)))OR(v0.c2)) THEN ((v0.c0)%(v0.c2)) WHEN (((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) THEN (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))) WHEN ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)) THEN CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN 0Xffffffff83c8d10f ELSE v0.c0 END ELSE ((((v0.c1)OR(v0.c2)))OR(v0.c2)) END) ORDER BY ((v0.c0) ISNULL)  NULLS FIRST, (((v0.c2)) NOT BETWEEN (((NOT (v0.c0)))) AND ((((v0.c1)==(NULL)))));
SELECT SUM(count) FROM (SELECT ((CASE (- (v0.c2))  WHEN ((((v0.c2)AND(v0.c1)))OR(v0.c2)) THEN ((v0.c0)%(v0.c2)) WHEN (((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) THEN (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))) WHEN ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)) THEN CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN 0xffffffff83c8d10f ELSE v0.c0 END ELSE ((((v0.c1)OR(v0.c2)))OR(v0.c2)) END) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) ISNULL)  NULLS FIRST, (((v0.c2)) NOT BETWEEN (((NOT (v0.c0)))) AND ((((v0.c1)==(NULL))))));
SELECT COUNT(*) FROM v0 WHERE (CASE (- (v0.c2))  WHEN ((((v0.c2)AND(v0.c1)))OR(v0.c2)) THEN ((v0.c0)%(v0.c2)) WHEN (((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) THEN (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))) WHEN ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)) THEN CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN 0Xffffffff83c8d10f ELSE v0.c0 END ELSE ((((v0.c1)OR(v0.c2)))OR(v0.c2)) END) ORDER BY ((v0.c0) ISNULL)  NULLS FIRST, (((v0.c2)) NOT BETWEEN (((NOT (v0.c0)))) AND ((((v0.c1)==(NULL)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c0)AND(v0.c2)))AND(vt0.c0)))GLOB(((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c2))))) ORDER BY CAST((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(v0.c2)))AND(vt0.c0)))GLOB(((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c2))))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c0)AND(v0.c2)))AND(vt0.c0)))GLOB(((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c2))))) ORDER BY CAST((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(v0.c2)))AND(vt0.c0)))GLOB(((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c2))))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c0)AND(v0.c2)))AND(vt0.c0)))GLOB(((v0.c1) NOT BETWEEN (vt0.c0) AND (v0.c2))))) ORDER BY CAST((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) AS TEXT);
SELECT COUNT(*) FROM v0 WHERE ((((NULL COLLATE RTRIM))<((((v0.c1) BETWEEN (v0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((NULL COLLATE RTRIM))<((((v0.c1) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT COUNT(*) FROM v0 WHERE ((((NULL COLLATE RTRIM))<((((v0.c1) BETWEEN (v0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((NULL COLLATE RTRIM))<((((v0.c1) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT COUNT(*) FROM v0 WHERE ((((NULL COLLATE RTRIM))<((((v0.c1) BETWEEN (v0.c0) AND (v0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY vt0.c0 DESC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((+ ((v0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((v0.c2 IN ())))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((+ ((v0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((v0.c2 IN ())))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((+ ((v0.c2 IN ()))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (UPPER(((v0.c2)|(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER(((v0.c2)|(vt0.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (UPPER(((v0.c2)|(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER(((v0.c2)|(vt0.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (UPPER(((v0.c2)|(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c0 AS NUMERIC)))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY '' ASC);
SELECT COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c0 AS NUMERIC)))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY '' ASC);
SELECT COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c0 AS NUMERIC)))) ORDER BY '' ASC;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON 0X1dff2489 WHERE (CASE TYPEOF(v0.c1)  WHEN (((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((0.10776877144091057, 1510110112, v0.c1)) AND ((vt0.c0, v0.c2, vt0.c0))) THEN ((v0.c0)IS(vt0.c0)) ELSE CASE vt0.c0  WHEN '-1666084358' THEN v0.c2 ELSE vt0.c0 END END) ORDER BY ((((((((((v0.c1) ISNULL))OR(CAST(v0.c0 AS NUMERIC))))OR((v0.c0 IN (v0.c2, v0.c0)))))AND(((vt0.c0)>=(v0.c0)))))AND((v0.c2 IN ())))  NULLS LAST, (~ (((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE TYPEOF(v0.c1)  WHEN (((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((0.10776877144091057, 1510110112, v0.c1)) AND ((vt0.c0, v0.c2, vt0.c0))) THEN ((v0.c0)IS(vt0.c0)) ELSE CASE vt0.c0  WHEN '-1666084358' THEN v0.c2 ELSE vt0.c0 END END) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON 0x1dff2489 ORDER BY ((((((((((v0.c1) ISNULL))OR(CAST(v0.c0 AS NUMERIC))))OR((v0.c0 IN (v0.c2, v0.c0)))))AND(((vt0.c0)>=(v0.c0)))))AND((v0.c2 IN ())))  NULLS LAST, (~ (((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON 0X1dff2489 WHERE (CASE TYPEOF(v0.c1)  WHEN (((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((0.10776877144091057, 1510110112, v0.c1)) AND ((vt0.c0, v0.c2, vt0.c0))) THEN ((v0.c0)IS(vt0.c0)) ELSE CASE vt0.c0  WHEN '-1666084358' THEN v0.c2 ELSE vt0.c0 END END) ORDER BY ((((((((((v0.c1) ISNULL))OR(CAST(v0.c0 AS NUMERIC))))OR((v0.c0 IN (v0.c2, v0.c0)))))AND(((vt0.c0)>=(v0.c0)))))AND((v0.c2 IN ())))  NULLS LAST, (~ (((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE TYPEOF(v0.c1)  WHEN (((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((0.10776877144091057, 1510110112, v0.c1)) AND ((vt0.c0, v0.c2, vt0.c0))) THEN ((v0.c0)IS(vt0.c0)) ELSE CASE vt0.c0  WHEN '-1666084358' THEN v0.c2 ELSE vt0.c0 END END) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON 0x1dff2489 ORDER BY ((((((((((v0.c1) ISNULL))OR(CAST(v0.c0 AS NUMERIC))))OR((v0.c0 IN (v0.c2, v0.c0)))))AND(((vt0.c0)>=(v0.c0)))))AND((v0.c2 IN ())))  NULLS LAST, (~ (((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))) ASC  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON TRIM(DISTINCT CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN 'Db' WHEN vt0.c0 THEN vt0.c0 END, ((v0.c1) BETWEEN (v0.c2) AND (v0.c1))) WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))OR(vt0.c0 COLLATE RTRIM)))OR(v0.c1)));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))OR(vt0.c0 COLLATE RTRIM)))OR(v0.c1))) IS TRUE)  as count FROM vt0 NOT INDEXED RIGHT OUTER JOIN v0 ON TRIM(DISTINCT CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN 'Db' WHEN vt0.c0 THEN vt0.c0 END, ((v0.c1) BETWEEN (v0.c2) AND (v0.c1))));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON TRIM(DISTINCT CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN 'Db' WHEN vt0.c0 THEN vt0.c0 END, ((v0.c1) BETWEEN (v0.c2) AND (v0.c1))) WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))OR(vt0.c0 COLLATE RTRIM)))OR(v0.c1)));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))OR(vt0.c0 COLLATE RTRIM)))OR(v0.c1))) IS TRUE)  as count FROM vt0 NOT INDEXED RIGHT OUTER JOIN v0 ON TRIM(DISTINCT CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN 'Db' WHEN vt0.c0 THEN vt0.c0 END, ((v0.c1) BETWEEN (v0.c2) AND (v0.c1))));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON TRIM(DISTINCT CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN 'Db' WHEN vt0.c0 THEN vt0.c0 END, ((v0.c1) BETWEEN (v0.c2) AND (v0.c1))) WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))))OR(vt0.c0 COLLATE RTRIM)))OR(v0.c1)));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)>>(v0.c1)))<(v0.c0))) ORDER BY (~ (CASE WHEN vt0.c0 THEN v0.c2 WHEN 'xg+條z]+' THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(v0.c1)))<(v0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ (CASE WHEN vt0.c0 THEN v0.c2 WHEN 'xg+條z]+' THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)>>(v0.c1)))<(v0.c0))) ORDER BY (~ (CASE WHEN vt0.c0 THEN v0.c2 WHEN 'xg+條z]+' THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(v0.c1)))<(v0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ (CASE WHEN vt0.c0 THEN v0.c2 WHEN 'xg+條z]+' THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)>>(v0.c1)))<(v0.c0))) ORDER BY (~ (CASE WHEN vt0.c0 THEN v0.c2 WHEN 'xg+條z]+' THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END)) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (((((((((CAST(v0.c2 AS BLOB))AND(((v0.c0)<<(v0.c1)))))OR(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)))))OR(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)))))AND(v0.c0))) ORDER BY (((v0.c2)) NOT BETWEEN ((((v0.c2)*(v0.c2)))) AND ((v0.c1))) ASC, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(v0.c2 AS BLOB))AND(((v0.c0)<<(v0.c1)))))OR(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)))))OR(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)))))AND(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2)) NOT BETWEEN ((((v0.c2)*(v0.c2)))) AND ((v0.c1))) ASC, NULL  NULLS LAST);
SELECT * FROM v0 WHERE (((((((((CAST(v0.c2 AS BLOB))AND(((v0.c0)<<(v0.c1)))))OR(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)))))OR(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)))))AND(v0.c0))) ORDER BY (((v0.c2)) NOT BETWEEN ((((v0.c2)*(v0.c2)))) AND ((v0.c1))) ASC, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(v0.c2 AS BLOB))AND(((v0.c0)<<(v0.c1)))))OR(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)))))OR(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)))))AND(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2)) NOT BETWEEN ((((v0.c2)*(v0.c2)))) AND ((v0.c1))) ASC, NULL  NULLS LAST);
SELECT * FROM v0 WHERE (((((((((CAST(v0.c2 AS BLOB))AND(((v0.c0)<<(v0.c1)))))OR(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)))))OR(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)))))AND(v0.c0))) ORDER BY (((v0.c2)) NOT BETWEEN ((((v0.c2)*(v0.c2)))) AND ((v0.c1))) ASC, NULL  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)&(0X65f58626))  WHEN ((x'')%(vt0.c0)) THEN (- (vt0.c0)) WHEN '1913949358' THEN CAST(vt0.c0 AS NUMERIC) WHEN (((vt0.c0))!=((vt0.c0))) THEN '5zH·ⲟS⻵' END) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((x'') IS FALSE)));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)&(0X65f58626))  WHEN ((x'')%(vt0.c0)) THEN (- (vt0.c0)) WHEN '1913949358' THEN CAST(vt0.c0 AS NUMERIC) WHEN (((vt0.c0))!=((vt0.c0))) THEN '5zH·ⲟS⻵' END) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((x'') IS FALSE))));
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)&(0X65f58626))  WHEN ((x'')%(vt0.c0)) THEN (- (vt0.c0)) WHEN '1913949358' THEN CAST(vt0.c0 AS NUMERIC) WHEN (((vt0.c0))!=((vt0.c0))) THEN '5zH·ⲟS⻵' END) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((x'') IS FALSE)));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)&(0X65f58626))  WHEN ((x'')%(vt0.c0)) THEN (- (vt0.c0)) WHEN '1913949358' THEN CAST(vt0.c0 AS NUMERIC) WHEN (((vt0.c0))!=((vt0.c0))) THEN '5zH·ⲟS⻵' END) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((x'') IS FALSE))));
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)&(0X65f58626))  WHEN ((x'')%(vt0.c0)) THEN (- (vt0.c0)) WHEN '1913949358' THEN CAST(vt0.c0 AS NUMERIC) WHEN (((vt0.c0))!=((vt0.c0))) THEN '5zH·ⲟS⻵' END) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((x'') IS FALSE)));
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ORDER BY ((((x'')OR(((vt0.c0)>>(vt0.c0)))))OR(((vt0.c0) NOT NULL))), CASE vt0.c0 COLLATE BINARY  WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)/('1078908899')) WHEN ((vt0.c0)/(vt0.c0)) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((x'')OR(((vt0.c0)>>(vt0.c0)))))OR(((vt0.c0) NOT NULL))), CASE vt0.c0 COLLATE BINARY  WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)/('1078908899')) WHEN ((vt0.c0)/(vt0.c0)) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ORDER BY ((((x'')OR(((vt0.c0)>>(vt0.c0)))))OR(((vt0.c0) NOT NULL))), CASE vt0.c0 COLLATE BINARY  WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)/('1078908899')) WHEN ((vt0.c0)/(vt0.c0)) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((x'')OR(((vt0.c0)>>(vt0.c0)))))OR(((vt0.c0) NOT NULL))), CASE vt0.c0 COLLATE BINARY  WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)/('1078908899')) WHEN ((vt0.c0)/(vt0.c0)) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ORDER BY ((((x'')OR(((vt0.c0)>>(vt0.c0)))))OR(((vt0.c0) NOT NULL))), CASE vt0.c0 COLLATE BINARY  WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)/('1078908899')) WHEN ((vt0.c0)/(vt0.c0)) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((('-1088207421' COLLATE BINARY)&(CAST(v0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((('-1088207421' COLLATE BINARY)&(CAST(v0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((('-1088207421' COLLATE BINARY)&(CAST(v0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((('-1088207421' COLLATE BINARY)&(CAST(v0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((('-1088207421' COLLATE BINARY)&(CAST(v0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (load_extension(((v0.c2) NOT BETWEEN (v0.c0) AND ('861127623')), ((((vt0.c0)OR(vt0.c0)))OR(v0.c2))));
SELECT SUM(count) FROM (SELECT ((load_extension(((v0.c2) NOT BETWEEN (v0.c0) AND ('861127623')), ((((vt0.c0)OR(vt0.c0)))OR(v0.c2)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (load_extension(((v0.c2) NOT BETWEEN (v0.c0) AND ('861127623')), ((((vt0.c0)OR(vt0.c0)))OR(v0.c2))));
SELECT SUM(count) FROM (SELECT ((load_extension(((v0.c2) NOT BETWEEN (v0.c0) AND ('861127623')), ((((vt0.c0)OR(vt0.c0)))OR(v0.c2)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST((~ (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST((~ (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST((~ (vt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CASE WHEN '-1829734675' THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC), vt0.c0 COLLATE NOCASE))<>((((vt0.c0)+(vt0.c0)), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN '-1829734675' THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC), vt0.c0 COLLATE NOCASE))<>((((vt0.c0)+(vt0.c0)), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CASE WHEN '-1829734675' THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC), vt0.c0 COLLATE NOCASE))<>((((vt0.c0)+(vt0.c0)), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN '-1829734675' THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC), vt0.c0 COLLATE NOCASE))<>((((vt0.c0)+(vt0.c0)), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CASE WHEN '-1829734675' THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC), vt0.c0 COLLATE NOCASE))<>((((vt0.c0)+(vt0.c0)), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT ALL * FROM vt0 WHERE (((CASE ''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)|(0X49f9d542)));
SELECT SUM(count) FROM (SELECT ((((CASE ''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)|(0X49f9d542))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE ''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)|(0X49f9d542)));
SELECT SUM(count) FROM (SELECT ((((CASE ''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)|(0X49f9d542))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE ''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)|(0X49f9d542)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((((((((v0.c1)OR(vt0.c0)))OR('1289598964')))OR(vt0.c0)))OR(v0.c2)))AND(v0.c1 COLLATE BINARY)))OR(CASE vt0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 END)))AND(0Xffffffff856f4e42)))AND(((v0.c2) BETWEEN (v0.c2) AND (vt0.c0))))) ORDER BY (- (v0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((v0.c1)OR(vt0.c0)))OR('1289598964')))OR(vt0.c0)))OR(v0.c2)))AND(v0.c1 COLLATE BINARY)))OR(CASE vt0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 END)))AND(0Xffffffff856f4e42)))AND(((v0.c2) BETWEEN (v0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (- (v0.c0 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((((((((v0.c1)OR(vt0.c0)))OR('1289598964')))OR(vt0.c0)))OR(v0.c2)))AND(v0.c1 COLLATE BINARY)))OR(CASE vt0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 END)))AND(0Xffffffff856f4e42)))AND(((v0.c2) BETWEEN (v0.c2) AND (vt0.c0))))) ORDER BY (- (v0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((v0.c1)OR(vt0.c0)))OR('1289598964')))OR(vt0.c0)))OR(v0.c2)))AND(v0.c1 COLLATE BINARY)))OR(CASE vt0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 END)))AND(0Xffffffff856f4e42)))AND(((v0.c2) BETWEEN (v0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (- (v0.c0 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((((((((v0.c1)OR(vt0.c0)))OR('1289598964')))OR(vt0.c0)))OR(v0.c2)))AND(v0.c1 COLLATE BINARY)))OR(CASE vt0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 END)))AND(0Xffffffff856f4e42)))AND(((v0.c2) BETWEEN (v0.c2) AND (vt0.c0))))) ORDER BY (- (v0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (LOWER(DISTINCT vt0.c0)) ORDER BY json_array(x'', 0.6871723515397818) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY json_array(x'', 0.6871723515397818) ASC);
SELECT * FROM vt0 WHERE (LOWER(DISTINCT vt0.c0)) ORDER BY json_array(x'', 0.6871723515397818) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY json_array(x'', 0.6871723515397818) ASC);
SELECT * FROM v0, vt0 WHERE ((((+ (v0.c1))) IS TRUE)) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c1))) IS TRUE)) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE ((((+ (v0.c1))) IS TRUE)) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c1))) IS TRUE)) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE ((((+ (v0.c1))) IS TRUE)) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))>((vt0.c0))))LIKE('1136627433'))) ORDER BY ((0.23386186286711674) NOTNULL), NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>((vt0.c0))))LIKE('1136627433'))) IS TRUE)  as count FROM vt0 ORDER BY ((0.23386186286711674) NOTNULL), NULL ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))>((vt0.c0))))LIKE('1136627433'))) ORDER BY ((0.23386186286711674) NOTNULL), NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>((vt0.c0))))LIKE('1136627433'))) IS TRUE)  as count FROM vt0 ORDER BY ((0.23386186286711674) NOTNULL), NULL ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))>((vt0.c0))))LIKE('1136627433'))) ORDER BY ((0.23386186286711674) NOTNULL), NULL ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)LIKE(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)>=(x'0a47')) ELSE vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)LIKE(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)>=(x'0a47')) ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)LIKE(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)>=(x'0a47')) ELSE vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)LIKE(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)>=(x'0a47')) ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)LIKE(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)>=(x'0a47')) ELSE vt0.c0 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))&(((vt0.c0)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))&(((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))&(((vt0.c0)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))&(((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))&(((vt0.c0)OR(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) IS FALSE))AND(x'')))OR((vt0.c0 IN ())))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS FALSE))AND(x'')))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) IS FALSE))AND(x'')))OR((vt0.c0 IN ())))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS FALSE))AND(x'')))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) IS FALSE))AND(x'')))OR((vt0.c0 IN ())))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (NULL);
SELECT * FROM v0, vt0 WHERE (((((v0.c0)AND(NULL)))GLOB(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(NULL)))GLOB(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((v0.c0)AND(NULL)))GLOB(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(NULL)))GLOB(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((v0.c0)AND(NULL)))GLOB(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c2)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((v0.c0))) WHERE (((((((vt0.c0)&(v0.c1)))AND(v0.c1 COLLATE BINARY)))OR((((v0.c2))<=((v0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)&(v0.c1)))AND(v0.c1 COLLATE BINARY)))OR((((v0.c2))<=((v0.c1)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c2)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((v0.c0))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c2)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((v0.c0))) WHERE (((((((vt0.c0)&(v0.c1)))AND(v0.c1 COLLATE BINARY)))OR((((v0.c2))<=((v0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)&(v0.c1)))AND(v0.c1 COLLATE BINARY)))OR((((v0.c2))<=((v0.c1)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c2)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((v0.c0))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c2)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((v0.c0))) WHERE (((((((vt0.c0)&(v0.c1)))AND(v0.c1 COLLATE BINARY)))OR((((v0.c2))<=((v0.c1))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)IS(vt0.c0)))OR(((vt0.c0) IS FALSE))))AND((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)IS(vt0.c0)))OR(((vt0.c0) IS FALSE))))AND((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)IS(vt0.c0)))OR(((vt0.c0) IS FALSE))))AND((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)IS(vt0.c0)))OR(((vt0.c0) IS FALSE))))AND((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)IS(vt0.c0)))OR(((vt0.c0) IS FALSE))))AND((vt0.c0 IN (vt0.c0)))));
SELECT ALL * FROM v0 WHERE (((((v0.c2)AND(v0.c1)))LIKE(GLOB(v0.c0, -1.660791269E9)))) ORDER BY (((v0.c2, v0.c0, 'h7ls')) NOT BETWEEN ((v0.c1 COLLATE NOCASE, CAST(v0.c2 AS BLOB), (- (0.1761935833835968)))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c1 END, 0.9209576246909067, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)AND(v0.c1)))LIKE(GLOB(v0.c0, -1.660791269E9)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2, v0.c0, 'h7ls')) NOT BETWEEN ((v0.c1 COLLATE NOCASE, CAST(v0.c2 AS BLOB), (- (0.1761935833835968)))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c1 END, 0.9209576246909067, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2)))))));
SELECT ALL * FROM v0 WHERE (((((v0.c2)AND(v0.c1)))LIKE(GLOB(v0.c0, -1.660791269E9)))) ORDER BY (((v0.c2, v0.c0, 'h7ls')) NOT BETWEEN ((v0.c1 COLLATE NOCASE, CAST(v0.c2 AS BLOB), (- (0.1761935833835968)))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c1 END, 0.9209576246909067, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)AND(v0.c1)))LIKE(GLOB(v0.c0, -1.660791269E9)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2, v0.c0, 'h7ls')) NOT BETWEEN ((v0.c1 COLLATE NOCASE, CAST(v0.c2 AS BLOB), (- (0.1761935833835968)))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c1 END, 0.9209576246909067, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2)))))));
SELECT ALL * FROM v0 WHERE (((((v0.c2)AND(v0.c1)))LIKE(GLOB(v0.c0, -1.660791269E9)))) ORDER BY (((v0.c2, v0.c0, 'h7ls')) NOT BETWEEN ((v0.c1 COLLATE NOCASE, CAST(v0.c2 AS BLOB), (- (0.1761935833835968)))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c1 END, 0.9209576246909067, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON (NOT (CAST(vt0.c0 AS NUMERIC))) WHERE (NULLIF(DISTINCT (((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))), (NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))), (NOT (v0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (NOT (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON (NOT (CAST(vt0.c0 AS NUMERIC))) WHERE (NULLIF(DISTINCT (((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))), (NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))), (NOT (v0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (NOT (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON (NOT (CAST(vt0.c0 AS NUMERIC))) WHERE (NULLIF(DISTINCT (((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))), (NOT (v0.c0))));
SELECT ALL * FROM vt0, v0 WHERE (0x5be95741);
SELECT SUM(count) FROM (SELECT ALL ((0x5be95741) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (0x5be95741);
SELECT SUM(count) FROM (SELECT ALL ((0x5be95741) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (0x5be95741);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON x'' WHERE ('	&/9冓%vJS');
SELECT SUM(count) FROM (SELECT (('	&/9冓%vJS') IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON x'');
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON x'' WHERE ('	&/9冓%vJS');
SELECT SUM(count) FROM (SELECT (('	&/9冓%vJS') IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON x'');
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON x'' WHERE ('	&/9冓%vJS');
SELECT * FROM v0, vt0 WHERE ((((('474154158')OR(LENGTH(v0.c2))))AND('-954659512')));
SELECT SUM(count) FROM (SELECT (((((('474154158')OR(LENGTH(v0.c2))))AND('-954659512'))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((('474154158')OR(LENGTH(v0.c2))))AND('-954659512')));
SELECT SUM(count) FROM (SELECT (((((('474154158')OR(LENGTH(v0.c2))))AND('-954659512'))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((('474154158')OR(LENGTH(v0.c2))))AND('-954659512')));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN CAST(v0.c0 AS REAL) THEN ((v0.c1) NOTNULL) WHEN CHAR(v0.c2, v0.c1, v0.c1) THEN (- (v0.c0)) WHEN (~ (NULL)) THEN ((((v0.c2)AND(v0.c0)))AND('AIhas*K#p')) ELSE (x'' IN (v0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c0 AS REAL) THEN ((v0.c1) NOTNULL) WHEN CHAR(v0.c2, v0.c1, v0.c1) THEN (- (v0.c0)) WHEN (~ (NULL)) THEN ((((v0.c2)AND(v0.c0)))AND('AIhas*K#p')) ELSE (x'' IN (v0.c1)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN CAST(v0.c0 AS REAL) THEN ((v0.c1) NOTNULL) WHEN CHAR(v0.c2, v0.c1, v0.c1) THEN (- (v0.c0)) WHEN (~ (NULL)) THEN ((((v0.c2)AND(v0.c0)))AND('AIhas*K#p')) ELSE (x'' IN (v0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c0 AS REAL) THEN ((v0.c1) NOTNULL) WHEN CHAR(v0.c2, v0.c1, v0.c1) THEN (- (v0.c0)) WHEN (~ (NULL)) THEN ((((v0.c2)AND(v0.c0)))AND('AIhas*K#p')) ELSE (x'' IN (v0.c1)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN CAST(v0.c0 AS REAL) THEN ((v0.c1) NOTNULL) WHEN CHAR(v0.c2, v0.c1, v0.c1) THEN (- (v0.c0)) WHEN (~ (NULL)) THEN ((((v0.c2)AND(v0.c0)))AND('AIhas*K#p')) ELSE (x'' IN (v0.c1)) END);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c1 IN (v0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN (v0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c1 IN (v0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN (v0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c1 IN (v0.c1))) IS TRUE));
SELECT ALL * FROM vt0, v0 WHERE (HEX(CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN vt0.c0 WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END)) ORDER BY ((((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))<<(((v0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN vt0.c0 WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))<<(((v0.c0) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (HEX(CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN vt0.c0 WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END)) ORDER BY ((((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))<<(((v0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN vt0.c0 WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))<<(((v0.c0) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (HEX(CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN vt0.c0 WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END)) ORDER BY ((((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))<<(((v0.c0) NOTNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0)>(vt0.c0))))) ORDER BY CASE WHEN (~ (vt0.c0)) THEN (((0.10555706466434733)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (~ (vt0.c0)) THEN (((0.10555706466434733)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0)>(vt0.c0))))) ORDER BY CASE WHEN (~ (vt0.c0)) THEN (((0.10555706466434733)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (~ (vt0.c0)) THEN (((0.10555706466434733)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0)>(vt0.c0))))) ORDER BY CASE WHEN (~ (vt0.c0)) THEN (((0.10555706466434733)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(((v0.c1)*(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1)*(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(((v0.c1)*(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1)*(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(((v0.c1)*(vt0.c0)) AS TEXT));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON NULL COLLATE RTRIM WHERE (UNICODE(RTRIM(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(RTRIM(v0.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON NULL COLLATE RTRIM);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON NULL COLLATE RTRIM WHERE (UNICODE(RTRIM(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(RTRIM(v0.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON NULL COLLATE RTRIM);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON NULL COLLATE RTRIM WHERE (UNICODE(RTRIM(v0.c0)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.6036883738902689));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.6036883738902689)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.6036883738902689));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.6036883738902689)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.6036883738902689));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0) ORDER BY NULL;
SELECT * FROM vt0, v0 WHERE (((((v0.c1)|(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)|(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((v0.c1)|(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)|(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((v0.c1)|(vt0.c0))) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (((('495070113' IN (vt0.c0, vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((('495070113' IN (vt0.c0, vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((('495070113' IN (vt0.c0, vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((('495070113' IN (vt0.c0, vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((('495070113' IN (vt0.c0, vt0.c0))) NOT NULL));
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))+(x''))) ORDER BY highlight((vt0.c0 IN ()), vt0.c0, CASE WHEN vt0.c0 THEN -1881299343 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)==(vt0.c0))) ASC, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))+(x''))) IS TRUE)  as count FROM vt0 ORDER BY highlight((vt0.c0 IN ()), vt0.c0, CASE WHEN vt0.c0 THEN -1881299343 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)=(vt0.c0))) ASC, NULL  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))+(x''))) ORDER BY highlight((vt0.c0 IN ()), vt0.c0, CASE WHEN vt0.c0 THEN -1881299343 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)==(vt0.c0))) ASC, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))+(x''))) IS TRUE)  as count FROM vt0 ORDER BY highlight((vt0.c0 IN ()), vt0.c0, CASE WHEN vt0.c0 THEN -1881299343 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)=(vt0.c0))) ASC, NULL  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE ((((x'a087' IN ())) BETWEEN (((v0.c2)||(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c1))))) ORDER BY ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (LIKELIHOOD(DISTINCT v0.c2, 0.9782979194786493)) AND (CAST(v0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((((x'a087' IN ())) BETWEEN (((v0.c2)||(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c1))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (LIKELIHOOD(DISTINCT v0.c2, 0.9782979194786493)) AND (CAST(v0.c2 AS REAL))));
SELECT * FROM vt0, v0 WHERE ((((x'a087' IN ())) BETWEEN (((v0.c2)||(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c1))))) ORDER BY ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (LIKELIHOOD(DISTINCT v0.c2, 0.9782979194786493)) AND (CAST(v0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((((x'a087' IN ())) BETWEEN (((v0.c2)||(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c1))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (LIKELIHOOD(DISTINCT v0.c2, 0.9782979194786493)) AND (CAST(v0.c2 AS REAL))));
SELECT * FROM vt0, v0 WHERE ((((x'a087' IN ())) BETWEEN (((v0.c2)||(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c1))))) ORDER BY ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (LIKELIHOOD(DISTINCT v0.c2, 0.9782979194786493)) AND (CAST(v0.c2 AS REAL)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c2 COLLATE RTRIM))!=((((vt0.c0)>(vt0.c0)))))) ORDER BY (NOT (((((v0.c1)OR(v0.c2)))AND(v0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c2 COLLATE RTRIM))!=((((vt0.c0)>(vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT (((((v0.c1)OR(v0.c2)))AND(v0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c2 COLLATE RTRIM))!=((((vt0.c0)>(vt0.c0)))))) ORDER BY (NOT (((((v0.c1)OR(v0.c2)))AND(v0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c2 COLLATE RTRIM))!=((((vt0.c0)>(vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT (((((v0.c1)OR(v0.c2)))AND(v0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c2 COLLATE RTRIM))!=((((vt0.c0)>(vt0.c0)))))) ORDER BY (NOT (((((v0.c1)OR(v0.c2)))AND(v0.c1)))) DESC;
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((NOT (vt0.c0)))>((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((('-1310257069', vt0.c0, vt0.c0)) BETWEEN ((x'', UPPER(DISTINCT vt0.c0), '')) AND ((((vt0.c0)%(x'')), CAST(vt0.c0 AS NUMERIC), vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))>((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((('-1310257069', vt0.c0, vt0.c0)) BETWEEN ((x'', UPPER(DISTINCT vt0.c0), '')) AND ((((vt0.c0)%(x'')), CAST(vt0.c0 AS NUMERIC), vt0.c0))) ASC);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((NOT (vt0.c0)))>((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((('-1310257069', vt0.c0, vt0.c0)) BETWEEN ((x'', UPPER(DISTINCT vt0.c0), '')) AND ((((vt0.c0)%(x'')), CAST(vt0.c0 AS NUMERIC), vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))>((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((('-1310257069', vt0.c0, vt0.c0)) BETWEEN ((x'', UPPER(DISTINCT vt0.c0), '')) AND ((((vt0.c0)%(x'')), CAST(vt0.c0 AS NUMERIC), vt0.c0))) ASC);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((NOT (vt0.c0)))>((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((('-1310257069', vt0.c0, vt0.c0)) BETWEEN ((x'', UPPER(DISTINCT vt0.c0), '')) AND ((((vt0.c0)%(x'')), CAST(vt0.c0 AS NUMERIC), vt0.c0))) ASC;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=(LOWER(vt0.c0)))) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC  NULLS LAST, x'afb5' COLLATE NOCASE  NULLS LAST, ABS(DISTINCT (('0.9159924642888162')>(vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC  NULLS LAST, x'afb5' COLLATE NOCASE  NULLS LAST, ABS(DISTINCT (('0.9159924642888162')>(vt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=(LOWER(vt0.c0)))) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC  NULLS LAST, x'afb5' COLLATE NOCASE  NULLS LAST, ABS(DISTINCT (('0.9159924642888162')>(vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC  NULLS LAST, x'afb5' COLLATE NOCASE  NULLS LAST, ABS(DISTINCT (('0.9159924642888162')>(vt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=(LOWER(vt0.c0)))) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC  NULLS LAST, x'afb5' COLLATE NOCASE  NULLS LAST, ABS(DISTINCT (('0.9159924642888162')>(vt0.c0))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((LIKELIHOOD(v0.c1, 0.36878048618990567))AND(((v0.c2)|(v0.c1)))))AND((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((LIKELIHOOD(v0.c1, 0.36878048618990567))AND(((v0.c2)|(v0.c1)))))AND((v0.c1 IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((LIKELIHOOD(v0.c1, 0.36878048618990567))AND(((v0.c2)|(v0.c1)))))AND((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((LIKELIHOOD(v0.c1, 0.36878048618990567))AND(((v0.c2)|(v0.c1)))))AND((v0.c1 IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((LIKELIHOOD(v0.c1, 0.36878048618990567))AND(((v0.c2)|(v0.c1)))))AND((v0.c1 IN ()))));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CAST(((v0.c0) IS TRUE) AS BLOB) WHERE (((((NOT (v0.c2))))=((((((v0.c2)AND(v0.c2)))OR(v0.c0)))))) ORDER BY (((vt0.c0)) BETWEEN (((+ (0.24839714035285387)))) AND ((((v0.c2) IS TRUE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (v0.c2))))=((((((v0.c2)AND(v0.c2)))OR(v0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST(((v0.c0) IS TRUE) AS BLOB) ORDER BY (((vt0.c0)) BETWEEN (((+ (0.24839714035285387)))) AND ((((v0.c2) IS TRUE))))  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CAST(((v0.c0) IS TRUE) AS BLOB) WHERE (((((NOT (v0.c2))))=((((((v0.c2)AND(v0.c2)))OR(v0.c0)))))) ORDER BY (((vt0.c0)) BETWEEN (((+ (0.24839714035285387)))) AND ((((v0.c2) IS TRUE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (v0.c2))))=((((((v0.c2)AND(v0.c2)))OR(v0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST(((v0.c0) IS TRUE) AS BLOB) ORDER BY (((vt0.c0)) BETWEEN (((+ (0.24839714035285387)))) AND ((((v0.c2) IS TRUE))))  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CAST(((v0.c0) IS TRUE) AS BLOB) WHERE (((((NOT (v0.c2))))=((((((v0.c2)AND(v0.c2)))OR(v0.c0)))))) ORDER BY (((vt0.c0)) BETWEEN (((+ (0.24839714035285387)))) AND ((((v0.c2) IS TRUE))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((((v0.c0, v0.c0, v0.c0, v0.c1, '2'))<=((v0.c1, v0.c0, vt0.c0, 0.07776802993961063, vt0.c0))))OR(v0.c2 COLLATE RTRIM)))AND(CASE v0.c0  WHEN v0.c1 THEN vt0.c0 WHEN v0.c1 THEN v0.c2 WHEN 'ᭋA' THEN v0.c2 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0, v0.c0, v0.c0, v0.c1, '2'))<=((v0.c1, v0.c0, vt0.c0, 0.07776802993961063, vt0.c0))))OR(v0.c2 COLLATE RTRIM)))AND(CASE v0.c0  WHEN v0.c1 THEN vt0.c0 WHEN v0.c1 THEN v0.c2 WHEN 'ᭋA' THEN v0.c2 ELSE x'' END))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((((v0.c0, v0.c0, v0.c0, v0.c1, '2'))<=((v0.c1, v0.c0, vt0.c0, 0.07776802993961063, vt0.c0))))OR(v0.c2 COLLATE RTRIM)))AND(CASE v0.c0  WHEN v0.c1 THEN vt0.c0 WHEN v0.c1 THEN v0.c2 WHEN 'ᭋA' THEN v0.c2 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0, v0.c0, v0.c0, v0.c1, '2'))<=((v0.c1, v0.c0, vt0.c0, 0.07776802993961063, vt0.c0))))OR(v0.c2 COLLATE RTRIM)))AND(CASE v0.c0  WHEN v0.c1 THEN vt0.c0 WHEN v0.c1 THEN v0.c2 WHEN 'ᭋA' THEN v0.c2 ELSE x'' END))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((((v0.c0, v0.c0, v0.c0, v0.c1, '2'))<=((v0.c1, v0.c0, vt0.c0, 0.07776802993961063, vt0.c0))))OR(v0.c2 COLLATE RTRIM)))AND(CASE v0.c0  WHEN v0.c1 THEN vt0.c0 WHEN v0.c1 THEN v0.c2 WHEN 'ᭋA' THEN v0.c2 ELSE x'' END)));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (NOT (v0.c0 COLLATE BINARY)) WHERE (((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN ((NOT (vt0.c0))) AND (((((((((v0.c0)AND(vt0.c0)))OR(v0.c1)))OR(vt0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN ((NOT (vt0.c0))) AND (((((((((v0.c0)AND(vt0.c0)))OR(v0.c1)))OR(vt0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (NOT (v0.c0 COLLATE BINARY)));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (NOT (v0.c0 COLLATE BINARY)) WHERE (((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN ((NOT (vt0.c0))) AND (((((((((v0.c0)AND(vt0.c0)))OR(v0.c1)))OR(vt0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN ((NOT (vt0.c0))) AND (((((((((v0.c0)AND(vt0.c0)))OR(v0.c1)))OR(vt0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (NOT (v0.c0 COLLATE BINARY)));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (NOT (v0.c0 COLLATE BINARY)) WHERE (((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN ((NOT (vt0.c0))) AND (((((((((v0.c0)AND(vt0.c0)))OR(v0.c1)))OR(vt0.c0)))OR(v0.c0)))));
SELECT * FROM vt0, v0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END COLLATE RTRIM) ORDER BY ((v0.c0 COLLATE RTRIM) NOT BETWEEN (CASE v0.c2  WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END) AND (((v0.c2)>>(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c0 COLLATE RTRIM) NOT BETWEEN (CASE v0.c2  WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END) AND (((v0.c2)>>(v0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END COLLATE RTRIM) ORDER BY ((v0.c0 COLLATE RTRIM) NOT BETWEEN (CASE v0.c2  WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END) AND (((v0.c2)>>(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c0 COLLATE RTRIM) NOT BETWEEN (CASE v0.c2  WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END) AND (((v0.c2)>>(v0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END COLLATE RTRIM) ORDER BY ((v0.c0 COLLATE RTRIM) NOT BETWEEN (CASE v0.c2  WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END) AND (((v0.c2)>>(v0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (-767361645);
SELECT SUM(count) FROM (SELECT ALL ((-767361645) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (-767361645);
SELECT SUM(count) FROM (SELECT ALL ((-767361645) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (-767361645);
SELECT ALL * FROM vt0 WHERE ((((((((((- (x'3ee7')))OR((+ (0.8600890190946641)))))AND(vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(LAST_INSERT_ROWID())));
SELECT SUM(count) FROM (SELECT (((((((((((- (x'3ee7')))OR((+ (0.8600890190946641)))))AND(vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((- (x'3ee7')))OR((+ (0.8600890190946641)))))AND(vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(LAST_INSERT_ROWID())));
SELECT SUM(count) FROM (SELECT (((((((((((- (x'3ee7')))OR((+ (0.8600890190946641)))))AND(vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((- (x'3ee7')))OR((+ (0.8600890190946641)))))AND(vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(LAST_INSERT_ROWID())));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL));
SELECT * FROM v0 WHERE ((v0.c1 IN (((v0.c0)<>(0X5e264e31)), ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((v0.c1 IN (((v0.c0)!=(0X5e264e31)), ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((v0.c1 IN (((v0.c0)<>(0X5e264e31)), ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((v0.c1 IN (((v0.c0)!=(0X5e264e31)), ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((v0.c1 IN (((v0.c0)<>(0X5e264e31)), ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))));
SELECT * FROM vt0 WHERE ((((0xffffffffd51e12b3))!=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((0Xffffffffd51e12b3))<>((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT * FROM vt0 WHERE ((((0xffffffffd51e12b3))!=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((0Xffffffffd51e12b3))<>((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT * FROM vt0 WHERE ((((0xffffffffd51e12b3))!=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY vt0.c0 DESC;
SELECT ALL * FROM vt0, v0 WHERE (((CASE WHEN vt0.c0 THEN v0.c2 END)*((v0.c0 IN (vt0.c0))))) ORDER BY v0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN v0.c2 END)*((v0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c1 ASC);
SELECT ALL * FROM vt0, v0 WHERE (((CASE WHEN vt0.c0 THEN v0.c2 END)*((v0.c0 IN (vt0.c0))))) ORDER BY v0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN v0.c2 END)*((v0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c1 ASC);
SELECT ALL * FROM vt0, v0 WHERE (((CASE WHEN vt0.c0 THEN v0.c2 END)*((v0.c0 IN (vt0.c0))))) ORDER BY v0.c1 ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c1) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) NOT NULL)) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c1) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) NOT NULL)) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c1) NOT NULL));
SELECT * FROM vt0, v0 WHERE ('1063298102');
SELECT SUM(count) FROM (SELECT ALL (('1063298102') IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ('1063298102');
SELECT SUM(count) FROM (SELECT ALL (('1063298102') IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ('1063298102');
SELECT ALL * FROM v0, vt0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0 NOT INDEXED, vt0);
SELECT ALL * FROM v0, vt0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0 NOT INDEXED, vt0);
SELECT ALL * FROM v0, vt0 WHERE (v0.c2);
SELECT * FROM v0, vt0 WHERE (((CASE v0.c2  WHEN v0.c2 THEN vt0.c0 END)LIKE(((((v0.c0)OR(v0.c1)))AND('1005026213')))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c2  WHEN v0.c2 THEN vt0.c0 END)LIKE(((((v0.c0)OR(v0.c1)))AND('1005026213'))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((CASE v0.c2  WHEN v0.c2 THEN vt0.c0 END)LIKE(((((v0.c0)OR(v0.c1)))AND('1005026213')))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c2  WHEN v0.c2 THEN vt0.c0 END)LIKE(((((v0.c0)OR(v0.c1)))AND('1005026213'))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((CASE v0.c2  WHEN v0.c2 THEN vt0.c0 END)LIKE(((((v0.c0)OR(v0.c1)))AND('1005026213')))));
SELECT * FROM v0, vt0 WHERE (MIN((NOT (v0.c0)), '1043383076')) ORDER BY (((v0.c1 IN ()))/('d혽')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((MIN((NOT (v0.c0)), '1043383076')) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c1 IN ()))/('d혽')) ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (MIN((NOT (v0.c0)), '1043383076')) ORDER BY (((v0.c1 IN ()))/('d혽')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((MIN((NOT (v0.c0)), '1043383076')) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c1 IN ()))/('d혽')) ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (MIN((NOT (v0.c0)), '1043383076')) ORDER BY (((v0.c1 IN ()))/('d혽')) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c1  WHEN v0.c0 THEN v0.c2 END) NOTNULL)) ORDER BY CAST((v0.c0 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((CASE v0.c1  WHEN v0.c0 THEN v0.c2 END) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY CAST((v0.c0 IN ()) AS BLOB));
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c1  WHEN v0.c0 THEN v0.c2 END) NOTNULL)) ORDER BY CAST((v0.c0 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((CASE v0.c1  WHEN v0.c0 THEN v0.c2 END) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY CAST((v0.c0 IN ()) AS BLOB));
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c1  WHEN v0.c0 THEN v0.c2 END) NOTNULL)) ORDER BY CAST((v0.c0 IN ()) AS BLOB);
SELECT COUNT(*) FROM vt0 WHERE (UNICODE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (UNICODE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (UNICODE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT COUNT(*) FROM v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c2);
SELECT ALL * FROM v0 WHERE (((((v0.c2) BETWEEN (v0.c0) AND (v0.c0))) IS TRUE)) ORDER BY (('-1666084358') IS FALSE) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) BETWEEN (v0.c0) AND (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY (('-1666084358') IS FALSE) COLLATE BINARY ASC);
SELECT ALL * FROM v0 WHERE (((((v0.c2) BETWEEN (v0.c0) AND (v0.c0))) IS TRUE)) ORDER BY (('-1666084358') IS FALSE) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) BETWEEN (v0.c0) AND (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY (('-1666084358') IS FALSE) COLLATE BINARY ASC);
SELECT ALL * FROM v0 WHERE (((((v0.c2) BETWEEN (v0.c0) AND (v0.c0))) IS TRUE)) ORDER BY (('-1666084358') IS FALSE) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((0x6a1aaa06))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((0x6a1aaa06)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((0x6a1aaa06))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((0x6a1aaa06)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((0x6a1aaa06))));
SELECT * FROM v0 WHERE (CASE -1.366723588E9  WHEN v0.c1 THEN '' WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE -1.366723588E9  WHEN v0.c1 THEN '' WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE -1.366723588E9  WHEN v0.c1 THEN '' WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE -1.366723588E9  WHEN v0.c1 THEN '' WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE -1.366723588E9  WHEN v0.c1 THEN '' WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c0 END COLLATE RTRIM);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON CAST(((((vt0.c0)AND(v0.c0)))AND(0.7523410201296086)) AS REAL) WHERE ((((v0.c0))>=((v0.c2))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((v0.c0))>=((v0.c2))) COLLATE BINARY) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST(((((vt0.c0)AND(v0.c0)))AND(0.7523410201296086)) AS REAL));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON CAST(((((vt0.c0)AND(v0.c0)))AND(0.7523410201296086)) AS REAL) WHERE ((((v0.c0))>=((v0.c2))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((v0.c0))>=((v0.c2))) COLLATE BINARY) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST(((((vt0.c0)AND(v0.c0)))AND(0.7523410201296086)) AS REAL));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON CAST(((((vt0.c0)AND(v0.c0)))AND(0.7523410201296086)) AS REAL) WHERE ((((v0.c0))>=((v0.c2))) COLLATE BINARY);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN v0.c1 THEN v0.c2 END COLLATE NOCASE) ORDER BY v0.c1 DESC  NULLS LAST, ((CASE WHEN v0.c1 THEN v0.c0 WHEN 1349240294 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END)||(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c1 THEN v0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c1 DESC  NULLS LAST, ((CASE WHEN v0.c1 THEN v0.c0 WHEN 1349240294 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END)||(vt0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN v0.c1 THEN v0.c2 END COLLATE NOCASE) ORDER BY v0.c1 DESC  NULLS LAST, ((CASE WHEN v0.c1 THEN v0.c0 WHEN 1349240294 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END)||(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c1 THEN v0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c1 DESC  NULLS LAST, ((CASE WHEN v0.c1 THEN v0.c0 WHEN 1349240294 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END)||(vt0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN v0.c1 THEN v0.c2 END COLLATE NOCASE) ORDER BY v0.c1 DESC  NULLS LAST, ((CASE WHEN v0.c1 THEN v0.c0 WHEN 1349240294 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END)||(vt0.c0)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (((CASE v0.c1  WHEN v0.c2 THEN vt0.c0 ELSE NULL END)<(v0.c2))) ORDER BY v0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c1  WHEN v0.c2 THEN vt0.c0 ELSE NULL END)<(v0.c2))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c1  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((CASE v0.c1  WHEN v0.c2 THEN vt0.c0 ELSE NULL END)<(v0.c2))) ORDER BY v0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c1  WHEN v0.c2 THEN vt0.c0 ELSE NULL END)<(v0.c2))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c1  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((CASE v0.c1  WHEN v0.c2 THEN vt0.c0 ELSE NULL END)<(v0.c2))) ORDER BY v0.c1  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((CAST(v0.c1 AS REAL))AND(((NULL)<=(v0.c2)))))AND(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c1 AS REAL))AND(((NULL)<=(v0.c2)))))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((CAST(v0.c1 AS REAL))AND(((NULL)<=(v0.c2)))))AND(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c1 AS REAL))AND(((NULL)<=(v0.c2)))))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((CAST(v0.c1 AS REAL))AND(((NULL)<=(v0.c2)))))AND(CAST(vt0.c0 AS INTEGER))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))&(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.9170183853771158))))) ORDER BY ((NOT (vt0.c0)) IN ((NOT (vt0.c0)))), ((vt0.c0)<(vt0.c0)) COLLATE BINARY DESC, (((((- (vt0.c0)))AND(HEX(vt0.c0))))OR(CAST(vt0.c0 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))&(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.9170183853771158))))) IS TRUE)  as count FROM vt0 ORDER BY ((NOT (vt0.c0)) IN ((NOT (vt0.c0)))), ((vt0.c0)<(vt0.c0)) COLLATE BINARY DESC, (((((- (vt0.c0)))AND(HEX(vt0.c0))))OR(CAST(vt0.c0 AS REAL))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))&(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.9170183853771158))))) ORDER BY ((NOT (vt0.c0)) IN ((NOT (vt0.c0)))), ((vt0.c0)<(vt0.c0)) COLLATE BINARY DESC, (((((- (vt0.c0)))AND(HEX(vt0.c0))))OR(CAST(vt0.c0 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))&(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.9170183853771158))))) IS TRUE)  as count FROM vt0 ORDER BY ((NOT (vt0.c0)) IN ((NOT (vt0.c0)))), ((vt0.c0)<(vt0.c0)) COLLATE BINARY DESC, (((((- (vt0.c0)))AND(HEX(vt0.c0))))OR(CAST(vt0.c0 AS REAL))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))&(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.9170183853771158))))) ORDER BY ((NOT (vt0.c0)) IN ((NOT (vt0.c0)))), ((vt0.c0)<(vt0.c0)) COLLATE BINARY DESC, (((((- (vt0.c0)))AND(HEX(vt0.c0))))OR(CAST(vt0.c0 AS REAL))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(v0.c1 COLLATE NOCASE AS REAL)) ORDER BY GLOB((v0.c1 IN ()), CASE v0.c1  WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM v0, vt0 ORDER BY GLOB((v0.c1 IN ()), CASE v0.c1  WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(v0.c1 COLLATE NOCASE AS REAL)) ORDER BY GLOB((v0.c1 IN ()), CASE v0.c1  WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM v0, vt0 ORDER BY GLOB((v0.c1 IN ()), CASE v0.c1  WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(v0.c1 COLLATE NOCASE AS REAL)) ORDER BY GLOB((v0.c1 IN ()), CASE v0.c1  WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (UPPER(vt0.c0)) ORDER BY '0.5837906422613875' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY '0.5837906422613875' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (UPPER(vt0.c0)) ORDER BY '0.5837906422613875' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY '0.5837906422613875' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (UPPER(vt0.c0)) ORDER BY '0.5837906422613875' DESC  NULLS FIRST;
SELECT * FROM v0 WHERE ((((+ (v0.c2)))=((- (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c2)))==((- (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((+ (v0.c2)))=((- (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c2)))==((- (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((+ (v0.c2)))=((- (v0.c1)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (1539128659 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((1539128659 COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (1539128659 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((1539128659 COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (1539128659 COLLATE NOCASE);
SELECT * FROM v0 WHERE (CAST(TRIM(DISTINCT 0.8139197889923111) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(DISTINCT 0.8139197889923111) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(TRIM(DISTINCT 0.8139197889923111) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(DISTINCT 0.8139197889923111) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(TRIM(DISTINCT 0.8139197889923111) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND((vt0.c0 IN ()))))OR(0Xffffffff9a4d0576))) ORDER BY ((CAST('b_}now49' AS BLOB)) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND((vt0.c0 IN ()))))OR(0Xffffffff9a4d0576))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST('b_}now49' AS BLOB)) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND((vt0.c0 IN ()))))OR(0Xffffffff9a4d0576))) ORDER BY ((CAST('b_}now49' AS BLOB)) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND((vt0.c0 IN ()))))OR(0Xffffffff9a4d0576))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST('b_}now49' AS BLOB)) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND((vt0.c0 IN ()))))OR(0Xffffffff9a4d0576))) ORDER BY ((CAST('b_}now49' AS BLOB)) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0)OR(v0.c2)))AND('HDT''C')))OR(v0.c0)))AND(v0.c1)))>=((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(v0.c2)))AND('HDT''C')))OR(v0.c0)))AND(v0.c1)))>=((- (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0)OR(v0.c2)))AND('HDT''C')))OR(v0.c0)))AND(v0.c1)))>=((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(v0.c2)))AND('HDT''C')))OR(v0.c0)))AND(v0.c1)))>=((- (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0)OR(v0.c2)))AND('HDT''C')))OR(v0.c0)))AND(v0.c1)))>=((- (v0.c0)))));
SELECT * FROM vt0 WHERE (CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)&(vt0.c0)) THEN CAST(vt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)&(vt0.c0)) THEN CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)&(vt0.c0)) THEN CAST(vt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)&(vt0.c0)) THEN CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)&(vt0.c0)) THEN CAST(vt0.c0 AS REAL) END);
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c2)))*((NOT (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c2)))*((NOT (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c2)))*((NOT (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c2)))*((NOT (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c2)))*((NOT (v0.c2)))));
SELECT * FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)||(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN (- (vt0.c0)) THEN (vt0.c0 IN ()) ELSE CAST(vt0.c0 AS REAL) END) ORDER BY (+ (vt0.c0));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)||(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN (- (vt0.c0)) THEN (vt0.c0 IN ()) ELSE CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)));
SELECT * FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)||(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN (- (vt0.c0)) THEN (vt0.c0 IN ()) ELSE CAST(vt0.c0 AS REAL) END) ORDER BY (+ (vt0.c0));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)||(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN (- (vt0.c0)) THEN (vt0.c0 IN ()) ELSE CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)));
SELECT * FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)||(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN (- (vt0.c0)) THEN (vt0.c0 IN ()) ELSE CAST(vt0.c0 AS REAL) END) ORDER BY (+ (vt0.c0));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (v0.c0 IN ()) COLLATE RTRIM WHERE ((((v0.c2 IN (vt0.c0, v0.c0))) IS FALSE)) ORDER BY ((((v0.c0) NOT BETWEEN ('-1107278876') AND (v0.c1)))<=((NOT (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN (vt0.c0, v0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (v0.c0 IN ()) COLLATE RTRIM ORDER BY ((((v0.c0) NOT BETWEEN ('-1107278876') AND (v0.c1)))<=((NOT (v0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (v0.c0 IN ()) COLLATE RTRIM WHERE ((((v0.c2 IN (vt0.c0, v0.c0))) IS FALSE)) ORDER BY ((((v0.c0) NOT BETWEEN ('-1107278876') AND (v0.c1)))<=((NOT (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN (vt0.c0, v0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (v0.c0 IN ()) COLLATE RTRIM ORDER BY ((((v0.c0) NOT BETWEEN ('-1107278876') AND (v0.c1)))<=((NOT (v0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (v0.c0 IN ()) COLLATE RTRIM WHERE ((((v0.c2 IN (vt0.c0, v0.c0))) IS FALSE)) ORDER BY ((((v0.c0) NOT BETWEEN ('-1107278876') AND (v0.c1)))<=((NOT (v0.c0)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL));
SELECT * FROM v0 WHERE (((((v0.c2) IS FALSE))<<(CASE WHEN v0.c1 THEN v0.c0 END))) ORDER BY (((v0.c0)) NOT BETWEEN ((LIKE(v0.c1, v0.c1, '	'))) AND ((((v0.c1)<<(v0.c2))))) ASC  NULLS FIRST, ((((v0.c0)IS(v0.c2))) BETWEEN (((((v0.c1)AND(v0.c0)))OR(v0.c2))) AND (CASE v0.c2  WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) IS FALSE))<<(CASE WHEN v0.c1 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((LIKE(v0.c1, v0.c1, '	'))) AND ((((v0.c1)<<(v0.c2))))) ASC  NULLS FIRST, ((((v0.c0)IS(v0.c2))) BETWEEN (((((v0.c1)AND(v0.c0)))OR(v0.c2))) AND (CASE v0.c2  WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END)) ASC);
SELECT * FROM v0 WHERE (((((v0.c2) IS FALSE))<<(CASE WHEN v0.c1 THEN v0.c0 END))) ORDER BY (((v0.c0)) NOT BETWEEN ((LIKE(v0.c1, v0.c1, '	'))) AND ((((v0.c1)<<(v0.c2))))) ASC  NULLS FIRST, ((((v0.c0)IS(v0.c2))) BETWEEN (((((v0.c1)AND(v0.c0)))OR(v0.c2))) AND (CASE v0.c2  WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) IS FALSE))<<(CASE WHEN v0.c1 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((LIKE(v0.c1, v0.c1, '	'))) AND ((((v0.c1)<<(v0.c2))))) ASC  NULLS FIRST, ((((v0.c0)IS(v0.c2))) BETWEEN (((((v0.c1)AND(v0.c0)))OR(v0.c2))) AND (CASE v0.c2  WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END)) ASC);
SELECT * FROM v0 WHERE (((((v0.c2) IS FALSE))<<(CASE WHEN v0.c1 THEN v0.c0 END))) ORDER BY (((v0.c0)) NOT BETWEEN ((LIKE(v0.c1, v0.c1, '	'))) AND ((((v0.c1)<<(v0.c2))))) ASC  NULLS FIRST, ((((v0.c0)IS(v0.c2))) BETWEEN (((((v0.c1)AND(v0.c0)))OR(v0.c2))) AND (CASE v0.c2  WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END)) ASC;
SELECT * FROM v0 WHERE (IFNULL(DISTINCT CAST(v0.c1 AS INTEGER), v0.c0));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CAST(v0.c1 AS INTEGER), v0.c0)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (IFNULL(DISTINCT CAST(v0.c1 AS INTEGER), v0.c0));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CAST(v0.c1 AS INTEGER), v0.c0)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (IFNULL(DISTINCT CAST(v0.c1 AS INTEGER), v0.c0));
SELECT * FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c2) BETWEEN (v0.c0) AND (NULL)))) AND ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((v0.c2) BETWEEN (v0.c0) AND (NULL)))) AND ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c2) BETWEEN (v0.c0) AND (NULL)))) AND ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((v0.c2) BETWEEN (v0.c0) AND (NULL)))) AND ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c2) BETWEEN (v0.c0) AND (NULL)))) AND ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2))))));
SELECT * FROM v0 WHERE (((NULL)<(((((v0.c0)AND(v0.c2)))OR(v0.c1))))) ORDER BY (((v0.c0 IN ()))>>(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<(((((v0.c0)AND(v0.c2)))OR(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ()))>>(x''))  NULLS FIRST);
SELECT * FROM v0 WHERE (((NULL)<(((((v0.c0)AND(v0.c2)))OR(v0.c1))))) ORDER BY (((v0.c0 IN ()))>>(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<(((((v0.c0)AND(v0.c2)))OR(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ()))>>(x''))  NULLS FIRST);
SELECT * FROM v0 WHERE (((NULL)<(((((v0.c0)AND(v0.c2)))OR(v0.c1))))) ORDER BY (((v0.c0 IN ()))>>(x''))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT NULL));
SELECT * FROM vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (vt0.c0);
SELECT COUNT(*) FROM v0 WHERE (((CASE '-1040556871'  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END) ISNULL)) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((CASE '-1040556871'  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY v0.c2);
SELECT COUNT(*) FROM v0 WHERE (((CASE '-1040556871'  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END) ISNULL)) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((CASE '-1040556871'  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY v0.c2);
SELECT COUNT(*) FROM v0 WHERE (((CASE '-1040556871'  WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END) ISNULL)) ORDER BY v0.c2;
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE ((NOT (v0.c1 COLLATE BINARY))) ORDER BY (v0.c1 IN ());
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY (v0.c1 IN ()));
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE ((NOT (v0.c1 COLLATE BINARY))) ORDER BY (v0.c1 IN ());
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY (v0.c1 IN ()));
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE ((NOT (v0.c1 COLLATE BINARY))) ORDER BY (v0.c1 IN ());
SELECT COUNT(*) FROM v0, vt0 WHERE ((v0.c1 IN (x'')) COLLATE BINARY) ORDER BY (v0.c2 COLLATE BINARY IN ())  NULLS FIRST, CAST(v0.c2 AS TEXT)  NULLS LAST, ((((v0.c1) IS TRUE))<=(((((vt0.c0)OR(vt0.c0)))AND(v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c1 IN (x'')) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 ORDER BY (v0.c2 COLLATE BINARY IN ())  NULLS FIRST, CAST(v0.c2 AS TEXT)  NULLS LAST, ((((v0.c1) IS TRUE))<=(((((vt0.c0)OR(vt0.c0)))AND(v0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((v0.c1 IN (x'')) COLLATE BINARY) ORDER BY (v0.c2 COLLATE BINARY IN ())  NULLS FIRST, CAST(v0.c2 AS TEXT)  NULLS LAST, ((((v0.c1) IS TRUE))<=(((((vt0.c0)OR(vt0.c0)))AND(v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c1 IN (x'')) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 ORDER BY (v0.c2 COLLATE BINARY IN ())  NULLS FIRST, CAST(v0.c2 AS TEXT)  NULLS LAST, ((((v0.c1) IS TRUE))<=(((((vt0.c0)OR(vt0.c0)))AND(v0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((v0.c1 IN (x'')) COLLATE BINARY) ORDER BY (v0.c2 COLLATE BINARY IN ())  NULLS FIRST, CAST(v0.c2 AS TEXT)  NULLS LAST, ((((v0.c1) IS TRUE))<=(((((vt0.c0)OR(vt0.c0)))AND(v0.c2))))  NULLS LAST;
SELECT * FROM v0 WHERE (COALESCE(0.37872471884679904, ((v0.c1) BETWEEN (v0.c0) AND (v0.c1)), ((v0.c0)GLOB(v0.c1)), CAST(v0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ((COALESCE(0.37872471884679904, ((v0.c1) BETWEEN (v0.c0) AND (v0.c1)), ((v0.c0)GLOB(v0.c1)), CAST(v0.c1 AS REAL))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (COALESCE(0.37872471884679904, ((v0.c1) BETWEEN (v0.c0) AND (v0.c1)), ((v0.c0)GLOB(v0.c1)), CAST(v0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ((COALESCE(0.37872471884679904, ((v0.c1) BETWEEN (v0.c0) AND (v0.c1)), ((v0.c0)GLOB(v0.c1)), CAST(v0.c1 AS REAL))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (COALESCE(0.37872471884679904, ((v0.c1) BETWEEN (v0.c0) AND (v0.c1)), ((v0.c0)GLOB(v0.c1)), CAST(v0.c1 AS REAL)));
SELECT ALL * FROM vt0, v0 WHERE (((CAST(v0.c0 AS REAL))LIKE(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS REAL))LIKE(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((CAST(v0.c0 AS REAL))LIKE(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS REAL))LIKE(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((CAST(v0.c0 AS REAL))LIKE(v0.c0 COLLATE BINARY)));
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c2)OR(v0.c0)))AND(v0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)OR(v0.c0)))AND(v0.c2))) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c2)OR(v0.c0)))AND(v0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)OR(v0.c0)))AND(v0.c2))) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c2)OR(v0.c0)))AND(v0.c2))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (-393587955) AND (v0.c0)))||(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (-393587955) AND (v0.c0)))||(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (-393587955) AND (v0.c0)))||(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (-393587955) AND (v0.c0)))||(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (-393587955) AND (v0.c0)))||(((vt0.c0) ISNULL))));
SELECT ALL * FROM v0, vt0 WHERE ((((- (vt0.c0))) BETWEEN ((v0.c0 IN (v0.c1))) AND (vt0.c0 COLLATE BINARY))) ORDER BY (CAST(v0.c0 AS NUMERIC) IN ()), (((v0.c2)) BETWEEN ((CAST(v0.c2 AS INTEGER))) AND ((v0.c2))) ASC, (+ (v0.c1));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) BETWEEN ((v0.c0 IN (v0.c1))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0 ORDER BY (CAST(v0.c0 AS NUMERIC) IN ()), (((v0.c2)) BETWEEN ((CAST(v0.c2 AS INTEGER))) AND ((v0.c2))) ASC, (+ (v0.c1)));
SELECT ALL * FROM v0, vt0 WHERE ((((- (vt0.c0))) BETWEEN ((v0.c0 IN (v0.c1))) AND (vt0.c0 COLLATE BINARY))) ORDER BY (CAST(v0.c0 AS NUMERIC) IN ()), (((v0.c2)) BETWEEN ((CAST(v0.c2 AS INTEGER))) AND ((v0.c2))) ASC, (+ (v0.c1));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) BETWEEN ((v0.c0 IN (v0.c1))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0 ORDER BY (CAST(v0.c0 AS NUMERIC) IN ()), (((v0.c2)) BETWEEN ((CAST(v0.c2 AS INTEGER))) AND ((v0.c2))) ASC, (+ (v0.c1)));
SELECT ALL * FROM v0, vt0 WHERE ((((- (vt0.c0))) BETWEEN ((v0.c0 IN (v0.c1))) AND (vt0.c0 COLLATE BINARY))) ORDER BY (CAST(v0.c0 AS NUMERIC) IN ()), (((v0.c2)) BETWEEN ((CAST(v0.c2 AS INTEGER))) AND ((v0.c2))) ASC, (+ (v0.c1));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON CAST((+ (vt0.c0)) AS REAL) WHERE (((((((((v0.c0)AND(v0.c2)))OR(v0.c1)))OR((v0.c0 IN ()))))AND(((v0.c1)LIKE('+C	''3?K|r')))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(v0.c2)))OR(v0.c1)))OR((v0.c0 IN ()))))AND(((v0.c1)LIKE('+C	''3?K|r'))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CAST((+ (vt0.c0)) AS REAL));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON CAST((+ (vt0.c0)) AS REAL) WHERE (((((((((v0.c0)AND(v0.c2)))OR(v0.c1)))OR((v0.c0 IN ()))))AND(((v0.c1)LIKE('+C	''3?K|r')))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(v0.c2)))OR(v0.c1)))OR((v0.c0 IN ()))))AND(((v0.c1)LIKE('+C	''3?K|r'))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CAST((+ (vt0.c0)) AS REAL));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON CAST((+ (vt0.c0)) AS REAL) WHERE (((((((((v0.c0)AND(v0.c2)))OR(v0.c1)))OR((v0.c0 IN ()))))AND(((v0.c1)LIKE('+C	''3?K|r')))));
SELECT * FROM vt0 WHERE (((((vt0.c0)+(vt0.c0)))>>(((vt0.c0)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(vt0.c0)))>>(((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)+(vt0.c0)))>>(((vt0.c0)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(vt0.c0)))>>(((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)+(vt0.c0)))>>(((vt0.c0)>(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((- (v0.c0))) NOT BETWEEN ((((v0.c2))>=(('O!]zF-b?~')))) AND (CASE WHEN -1.289941962E9 THEN vt0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN 0.9805905135110319 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) NOT BETWEEN ((((v0.c2))>=(('O!]zF-b?~')))) AND (CASE WHEN -1.289941962E9 THEN vt0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN 0.9805905135110319 END))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((- (v0.c0))) NOT BETWEEN ((((v0.c2))>=(('O!]zF-b?~')))) AND (CASE WHEN -1.289941962E9 THEN vt0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN 0.9805905135110319 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) NOT BETWEEN ((((v0.c2))>=(('O!]zF-b?~')))) AND (CASE WHEN -1.289941962E9 THEN vt0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN 0.9805905135110319 END))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((- (v0.c0))) NOT BETWEEN ((((v0.c2))>=(('O!]zF-b?~')))) AND (CASE WHEN -1.289941962E9 THEN vt0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN 0.9805905135110319 END)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((NOT ((+ (NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (NULL))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((NOT ((+ (NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (NULL))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((NOT ((+ (NULL)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), vt0.c0, COALESCE(DISTINCT x'8811', vt0.c0))) AND (((NOT (vt0.c0)), (vt0.c0 IN ()), ((vt0.c0)GLOB(vt0.c0)))))) ORDER BY ((vt0.c0 IN ()) IN (((NULL)/(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), vt0.c0, COALESCE(DISTINCT x'8811', vt0.c0))) AND (((NOT (vt0.c0)), (vt0.c0 IN ()), ((vt0.c0)GLOB(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN (((NULL)/(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), vt0.c0, COALESCE(DISTINCT x'8811', vt0.c0))) AND (((NOT (vt0.c0)), (vt0.c0 IN ()), ((vt0.c0)GLOB(vt0.c0)))))) ORDER BY ((vt0.c0 IN ()) IN (((NULL)/(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), vt0.c0, COALESCE(DISTINCT x'8811', vt0.c0))) AND (((NOT (vt0.c0)), (vt0.c0 IN ()), ((vt0.c0)GLOB(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN (((NULL)/(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), vt0.c0, COALESCE(DISTINCT x'8811', vt0.c0))) AND (((NOT (vt0.c0)), (vt0.c0 IN ()), ((vt0.c0)GLOB(vt0.c0)))))) ORDER BY ((vt0.c0 IN ()) IN (((NULL)/(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (v0.c2) ORDER BY (v0.c1 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0, vt0 ORDER BY (v0.c1 IN ()) ASC);
SELECT ALL * FROM v0, vt0 WHERE (v0.c2) ORDER BY (v0.c1 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0, vt0 ORDER BY (v0.c1 IN ()) ASC);
SELECT ALL * FROM v0, vt0 WHERE (v0.c2) ORDER BY (v0.c1 IN ()) ASC;
SELECT * FROM v0 WHERE (((((x'') IS TRUE))-(IFNULL(DISTINCT v0.c0, v0.c1))));
SELECT SUM(count) FROM (SELECT ((((((x'') IS TRUE))-(IFNULL(DISTINCT v0.c0, v0.c1)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((x'') IS TRUE))-(IFNULL(DISTINCT v0.c0, v0.c1))));
SELECT SUM(count) FROM (SELECT ((((((x'') IS TRUE))-(IFNULL(DISTINCT v0.c0, v0.c1)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((x'') IS TRUE))-(IFNULL(DISTINCT v0.c0, v0.c1))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((v0.c0)AND(v0.c2)))OR(v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)AND(v0.c2)))OR(v0.c0)) AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((v0.c0)AND(v0.c2)))OR(v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)AND(v0.c2)))OR(v0.c0)) AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((v0.c0)AND(v0.c2)))OR(v0.c0)) AS REAL));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((((((v0.c2)<<(vt0.c0)))OR(((v0.c0) IS FALSE))))OR(((v0.c0) BETWEEN (v0.c1) AND ('777013757')))))AND(0.2930726692957677)))OR(0.4503548096908172))) ORDER BY NULL DESC, ((((((v0.c0)AND(vt0.c0)))AND(v0.c2)))||(((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c2)<<(vt0.c0)))OR(((v0.c0) IS FALSE))))OR(((v0.c0) BETWEEN (v0.c1) AND ('777013757')))))AND(0.2930726692957677)))OR(0.4503548096908172))) IS TRUE)  as count FROM v0, vt0 ORDER BY NULL DESC, ((((((v0.c0)AND(vt0.c0)))AND(v0.c2)))||(((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((((((v0.c2)<<(vt0.c0)))OR(((v0.c0) IS FALSE))))OR(((v0.c0) BETWEEN (v0.c1) AND ('777013757')))))AND(0.2930726692957677)))OR(0.4503548096908172))) ORDER BY NULL DESC, ((((((v0.c0)AND(vt0.c0)))AND(v0.c2)))||(((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c2)<<(vt0.c0)))OR(((v0.c0) IS FALSE))))OR(((v0.c0) BETWEEN (v0.c1) AND ('777013757')))))AND(0.2930726692957677)))OR(0.4503548096908172))) IS TRUE)  as count FROM v0, vt0 ORDER BY NULL DESC, ((((((v0.c0)AND(vt0.c0)))AND(v0.c2)))||(((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((((((v0.c2)<<(vt0.c0)))OR(((v0.c0) IS FALSE))))OR(((v0.c0) BETWEEN (v0.c1) AND ('777013757')))))AND(0.2930726692957677)))OR(0.4503548096908172))) ORDER BY NULL DESC, ((((((v0.c0)AND(vt0.c0)))AND(v0.c2)))||(((vt0.c0) IS TRUE)));
SELECT * FROM v0, vt0 WHERE (((vt0.c0) NOT BETWEEN (0.8972360074031703) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (0.8972360074031703) AND (NULL))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((vt0.c0) NOT BETWEEN (0.8972360074031703) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (0.8972360074031703) AND (NULL))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((vt0.c0) NOT BETWEEN (0.8972360074031703) AND (NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(((vt0.c0)AND(vt0.c0)))))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(((vt0.c0)AND(vt0.c0)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(((vt0.c0)AND(vt0.c0)))))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(((vt0.c0)AND(vt0.c0)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(((vt0.c0)AND(vt0.c0)))))AND((vt0.c0 IN ()))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)GLOB('-526552229')))>(CHANGES()))) ORDER BY (((+ (v0.c1))) NOT BETWEEN ((v0.c2 IN ())) AND (((vt0.c0)+(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)GLOB('-526552229')))>(CHANGES()))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((+ (v0.c1))) NOT BETWEEN ((v0.c2 IN ())) AND (((vt0.c0)+(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)GLOB('-526552229')))>(CHANGES()))) ORDER BY (((+ (v0.c1))) NOT BETWEEN ((v0.c2 IN ())) AND (((vt0.c0)+(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)GLOB('-526552229')))>(CHANGES()))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((+ (v0.c1))) NOT BETWEEN ((v0.c2 IN ())) AND (((vt0.c0)+(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)GLOB('-526552229')))>(CHANGES()))) ORDER BY (((+ (v0.c1))) NOT BETWEEN ((v0.c2 IN ())) AND (((vt0.c0)+(vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (x'c811934b');
SELECT SUM(count) FROM (SELECT ALL ((x'c811934b') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (x'c811934b');
SELECT SUM(count) FROM (SELECT ALL ((x'c811934b') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (x'c811934b');
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((rtreenode(v0.c0, v0.c1)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN v0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END) AND (CHAR(v0.c0, v0.c1, v0.c1))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((rtreenode(v0.c0, v0.c1)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN v0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END) AND (CHAR(v0.c0, v0.c1, v0.c1))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((rtreenode(v0.c0, v0.c1)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN v0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END) AND (CHAR(v0.c0, v0.c1, v0.c1))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((rtreenode(v0.c0, v0.c1)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN v0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END) AND (CHAR(v0.c0, v0.c1, v0.c1))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((rtreenode(v0.c0, v0.c1)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN v0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END) AND (CHAR(v0.c0, v0.c1, v0.c1))) WHERE (v0.c0);
SELECT * FROM vt0 INNER JOIN v0 ON (((((((((((v0.c0))<=((v0.c2))))OR(((((((((vt0.c0)OR(v0.c0)))AND(v0.c1)))AND(v0.c0)))OR(v0.c2)))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)))))OR((v0.c2 IN ()))))AND((((v0.c1))>=((v0.c0))))) WHERE (((((v0.c0)IS NOT(v0.c2)))<(v0.c0 COLLATE NOCASE))) ORDER BY (~ (1.686962359E9)) COLLATE BINARY  NULLS LAST, '-378650050' ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS NOT(v0.c2)))<(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((((((((((v0.c0))<=((v0.c2))))OR(((((((((vt0.c0)OR(v0.c0)))AND(v0.c1)))AND(v0.c0)))OR(v0.c2)))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)))))OR((v0.c2 IN ()))))AND((((v0.c1))>=((v0.c0))))) ORDER BY (~ (1.686962359E9)) COLLATE BINARY  NULLS LAST, '-378650050' ASC);
SELECT * FROM vt0 INNER JOIN v0 ON (((((((((((v0.c0))<=((v0.c2))))OR(((((((((vt0.c0)OR(v0.c0)))AND(v0.c1)))AND(v0.c0)))OR(v0.c2)))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)))))OR((v0.c2 IN ()))))AND((((v0.c1))>=((v0.c0))))) WHERE (((((v0.c0)IS NOT(v0.c2)))<(v0.c0 COLLATE NOCASE))) ORDER BY (~ (1.686962359E9)) COLLATE BINARY  NULLS LAST, '-378650050' ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS NOT(v0.c2)))<(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((((((((((v0.c0))<=((v0.c2))))OR(((((((((vt0.c0)OR(v0.c0)))AND(v0.c1)))AND(v0.c0)))OR(v0.c2)))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)))))OR((v0.c2 IN ()))))AND((((v0.c1))>=((v0.c0))))) ORDER BY (~ (1.686962359E9)) COLLATE BINARY  NULLS LAST, '-378650050' ASC);
SELECT * FROM vt0 INNER JOIN v0 ON (((((((((((v0.c0))<=((v0.c2))))OR(((((((((vt0.c0)OR(v0.c0)))AND(v0.c1)))AND(v0.c0)))OR(v0.c2)))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)))))OR((v0.c2 IN ()))))AND((((v0.c1))>=((v0.c0))))) WHERE (((((v0.c0)IS NOT(v0.c2)))<(v0.c0 COLLATE NOCASE))) ORDER BY (~ (1.686962359E9)) COLLATE BINARY  NULLS LAST, '-378650050' ASC;
SELECT COUNT(*) FROM v0 WHERE (TYPEOF((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))))) ORDER BY (~ (((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY (~ (((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))));
SELECT COUNT(*) FROM v0 WHERE (TYPEOF((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))))) ORDER BY (~ (((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY (~ (((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))));
SELECT COUNT(*) FROM v0 WHERE (TYPEOF((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))))) ORDER BY (~ (((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1))));
SELECT ALL * FROM v0 WHERE (LIKE(CASE v0.c2  WHEN v0.c1 THEN v0.c0 END, v0.c0, '1')) ORDER BY CASE WHEN v0.c2 THEN v0.c0 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(CASE v0.c2  WHEN v0.c1 THEN v0.c0 END, v0.c0, '1')) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c2 THEN v0.c0 END COLLATE NOCASE DESC);
SELECT ALL * FROM v0 WHERE (LIKE(CASE v0.c2  WHEN v0.c1 THEN v0.c0 END, v0.c0, '1')) ORDER BY CASE WHEN v0.c2 THEN v0.c0 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(CASE v0.c2  WHEN v0.c1 THEN v0.c0 END, v0.c0, '1')) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c2 THEN v0.c0 END COLLATE NOCASE DESC);
SELECT ALL * FROM v0 WHERE (LIKE(CASE v0.c2  WHEN v0.c1 THEN v0.c0 END, v0.c0, '1')) ORDER BY CASE WHEN v0.c2 THEN v0.c0 END COLLATE NOCASE DESC;
SELECT COUNT(*) FROM vt0 WHERE (0.17653047808307465);
SELECT SUM(count) FROM (SELECT ((0.17653047808307465) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.17653047808307465);
SELECT SUM(count) FROM (SELECT ((0.17653047808307465) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.17653047808307465);
SELECT ALL COUNT(*) FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.777100698111081))|((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt0.c0, 0.777100698111081))|((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.777100698111081))|((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt0.c0, 0.777100698111081))|((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.777100698111081))|((~ (vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c2)) NOT BETWEEN ((((v0.c0)IS NOT(v0.c2)))) AND ((JULIANDAY(v0.c2, vt0.c0, x'', v0.c1, v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) NOT BETWEEN ((((v0.c0)IS NOT(v0.c2)))) AND ((JULIANDAY(v0.c2, vt0.c0, x'', v0.c1, v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c2)) NOT BETWEEN ((((v0.c0)IS NOT(v0.c2)))) AND ((JULIANDAY(v0.c2, vt0.c0, x'', v0.c1, v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) NOT BETWEEN ((((v0.c0)IS NOT(v0.c2)))) AND ((JULIANDAY(v0.c2, vt0.c0, x'', v0.c1, v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c2)) NOT BETWEEN ((((v0.c0)IS NOT(v0.c2)))) AND ((JULIANDAY(v0.c2, vt0.c0, x'', v0.c1, v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (json_valid(CASE WHEN v0.c2 THEN v0.c2 END)) ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (((((((((v0.c1)OR(v0.c1)))OR(v0.c1)))OR(v0.c0)))AND(v0.c0))) AND (x''))  NULLS FIRST, CASE WHEN ((v0.c2)GLOB(v0.c2)) THEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) ELSE CASE v0.c2  WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END END DESC  NULLS LAST, v0.c2;
SELECT SUM(count) FROM (SELECT ((json_valid(CASE WHEN v0.c2 THEN v0.c2 END)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (((((((((v0.c1)OR(v0.c1)))OR(v0.c1)))OR(v0.c0)))AND(v0.c0))) AND (x''))  NULLS FIRST, CASE WHEN ((v0.c2)GLOB(v0.c2)) THEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) ELSE CASE v0.c2  WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END END DESC  NULLS LAST, v0.c2);
SELECT COUNT(*) FROM v0 WHERE (json_valid(CASE WHEN v0.c2 THEN v0.c2 END)) ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (((((((((v0.c1)OR(v0.c1)))OR(v0.c1)))OR(v0.c0)))AND(v0.c0))) AND (x''))  NULLS FIRST, CASE WHEN ((v0.c2)GLOB(v0.c2)) THEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) ELSE CASE v0.c2  WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END END DESC  NULLS LAST, v0.c2;
SELECT SUM(count) FROM (SELECT ((json_valid(CASE WHEN v0.c2 THEN v0.c2 END)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (((((((((v0.c1)OR(v0.c1)))OR(v0.c1)))OR(v0.c0)))AND(v0.c0))) AND (x''))  NULLS FIRST, CASE WHEN ((v0.c2)GLOB(v0.c2)) THEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) ELSE CASE v0.c2  WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END END DESC  NULLS LAST, v0.c2);
SELECT COUNT(*) FROM v0 WHERE (json_valid(CASE WHEN v0.c2 THEN v0.c2 END)) ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (((((((((v0.c1)OR(v0.c1)))OR(v0.c1)))OR(v0.c0)))AND(v0.c0))) AND (x''))  NULLS FIRST, CASE WHEN ((v0.c2)GLOB(v0.c2)) THEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) ELSE CASE v0.c2  WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END END DESC  NULLS LAST, v0.c2;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((+ (v0.c0))) IS FALSE) WHERE ((((v0.c2, NULL, v0.c2)) BETWEEN ((CASE WHEN v0.c2 THEN x'' END, CAST(vt0.c0 AS REAL), (v0.c2 IN ()))) AND ((CAST(v0.c0 AS TEXT), LIKELIHOOD(DISTINCT vt0.c0, 0.34390316796943987), v0.c2)))) ORDER BY ((((((v0.c1)AND(x'98aa')))OR(v0.c0)))!=(((v0.c2) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c2, NULL, v0.c2)) BETWEEN ((CASE WHEN v0.c2 THEN x'' END, CAST(vt0.c0 AS REAL), (v0.c2 IN ()))) AND ((CAST(v0.c0 AS TEXT), LIKELIHOOD(DISTINCT vt0.c0, 0.34390316796943987), v0.c2)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((+ (v0.c0))) IS FALSE) ORDER BY ((((((v0.c1)AND(x'98aa')))OR(v0.c0)))<>(((v0.c2) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((+ (v0.c0))) IS FALSE) WHERE ((((v0.c2, NULL, v0.c2)) BETWEEN ((CASE WHEN v0.c2 THEN x'' END, CAST(vt0.c0 AS REAL), (v0.c2 IN ()))) AND ((CAST(v0.c0 AS TEXT), LIKELIHOOD(DISTINCT vt0.c0, 0.34390316796943987), v0.c2)))) ORDER BY ((((((v0.c1)AND(x'98aa')))OR(v0.c0)))!=(((v0.c2) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c2, NULL, v0.c2)) BETWEEN ((CASE WHEN v0.c2 THEN x'' END, CAST(vt0.c0 AS REAL), (v0.c2 IN ()))) AND ((CAST(v0.c0 AS TEXT), LIKELIHOOD(DISTINCT vt0.c0, 0.34390316796943987), v0.c2)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((+ (v0.c0))) IS FALSE) ORDER BY ((((((v0.c1)AND(x'98aa')))OR(v0.c0)))<>(((v0.c2) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((+ (v0.c0))) IS FALSE) WHERE ((((v0.c2, NULL, v0.c2)) BETWEEN ((CASE WHEN v0.c2 THEN x'' END, CAST(vt0.c0 AS REAL), (v0.c2 IN ()))) AND ((CAST(v0.c0 AS TEXT), LIKELIHOOD(DISTINCT vt0.c0, 0.34390316796943987), v0.c2)))) ORDER BY ((((((v0.c1)AND(x'98aa')))OR(v0.c0)))!=(((v0.c2) NOT NULL))) ASC;
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) IS TRUE));
SELECT * FROM v0 WHERE (((((((((v0.c2)AND(((v0.c2)IS NOT('-1359897442')))))OR(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))AND(UPPER(v0.c2))))OR(v0.c2))) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)))!=((v0.c2 IN (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c2)AND(((v0.c2)IS NOT('-1359897442')))))OR(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))AND(UPPER(v0.c2))))OR(v0.c2))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)))!=((v0.c2 IN (v0.c0)))) DESC);
SELECT * FROM v0 WHERE (((((((((v0.c2)AND(((v0.c2)IS NOT('-1359897442')))))OR(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))AND(UPPER(v0.c2))))OR(v0.c2))) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)))!=((v0.c2 IN (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c2)AND(((v0.c2)IS NOT('-1359897442')))))OR(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))AND(UPPER(v0.c2))))OR(v0.c2))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)))!=((v0.c2 IN (v0.c0)))) DESC);
SELECT * FROM v0 WHERE (((((((((v0.c2)AND(((v0.c2)IS NOT('-1359897442')))))OR(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))AND(UPPER(v0.c2))))OR(v0.c2))) ORDER BY ((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)))!=((v0.c2 IN (v0.c0)))) DESC;
SELECT ALL * FROM vt0, v0 WHERE ((((((v0.c1)>=(v0.c0))))<>((NULL)))) ORDER BY (((v0.c1 IN (v0.c1)))/(((vt0.c0) IS FALSE))) ASC  NULLS FIRST, CAST(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE '' END AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c1)>=(v0.c0))))!=((NULL)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c1 IN (v0.c1)))/(((vt0.c0) IS FALSE))) ASC  NULLS FIRST, CAST(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE '' END AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE ((((((v0.c1)>=(v0.c0))))<>((NULL)))) ORDER BY (((v0.c1 IN (v0.c1)))/(((vt0.c0) IS FALSE))) ASC  NULLS FIRST, CAST(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE '' END AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c1)>=(v0.c0))))!=((NULL)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c1 IN (v0.c1)))/(((vt0.c0) IS FALSE))) ASC  NULLS FIRST, CAST(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE '' END AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE ((((((v0.c1)>=(v0.c0))))<>((NULL)))) ORDER BY (((v0.c1 IN (v0.c1)))/(((vt0.c0) IS FALSE))) ASC  NULLS FIRST, CAST(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE '' END AS REAL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)&(0xffffffff845b0b22)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0)&(0xffffffff845b0b22)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)&(0xffffffff845b0b22)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0)&(0xffffffff845b0b22)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)&(0xffffffff845b0b22)) COLLATE BINARY);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(((v0.c2)!=(v0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c2)<>(v0.c1)) AS BLOB)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(((v0.c2)!=(v0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c2)<>(v0.c1)) AS BLOB)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(((v0.c2)!=(v0.c1)) AS BLOB));
SELECT ALL * FROM v0 WHERE (((((((((CHAR(v0.c1))OR((((v0.c2))!=((v0.c0))))))AND(((v0.c2) BETWEEN (v0.c2) AND (v0.c1)))))AND(((v0.c1) ISNULL))))OR(((v0.c2) IS TRUE)))) ORDER BY CAST(0.8477203533371469 AS TEXT) ASC, (((v0.c2)<<(v0.c2)) IN ()) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT ((((((((v0.c1)OR(v0.c0)))AND(v0.c2)))AND(v0.c1)))OR(v0.c1)), 0.39842442307856807)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CHAR(v0.c1))OR((((v0.c2))<>((v0.c0))))))AND(((v0.c2) BETWEEN (v0.c2) AND (v0.c1)))))AND(((v0.c1) ISNULL))))OR(((v0.c2) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY CAST(0.8477203533371469 AS TEXT) ASC, (((v0.c2)<<(v0.c2)) IN ()) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT ((((((((v0.c1)OR(v0.c0)))AND(v0.c2)))AND(v0.c1)))OR(v0.c1)), 0.39842442307856807)  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((((CHAR(v0.c1))OR((((v0.c2))!=((v0.c0))))))AND(((v0.c2) BETWEEN (v0.c2) AND (v0.c1)))))AND(((v0.c1) ISNULL))))OR(((v0.c2) IS TRUE)))) ORDER BY CAST(0.8477203533371469 AS TEXT) ASC, (((v0.c2)<<(v0.c2)) IN ()) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT ((((((((v0.c1)OR(v0.c0)))AND(v0.c2)))AND(v0.c1)))OR(v0.c1)), 0.39842442307856807)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CHAR(v0.c1))OR((((v0.c2))<>((v0.c0))))))AND(((v0.c2) BETWEEN (v0.c2) AND (v0.c1)))))AND(((v0.c1) ISNULL))))OR(((v0.c2) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY CAST(0.8477203533371469 AS TEXT) ASC, (((v0.c2)<<(v0.c2)) IN ()) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT ((((((((v0.c1)OR(v0.c0)))AND(v0.c2)))AND(v0.c1)))OR(v0.c1)), 0.39842442307856807)  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((((CHAR(v0.c1))OR((((v0.c2))!=((v0.c0))))))AND(((v0.c2) BETWEEN (v0.c2) AND (v0.c1)))))AND(((v0.c1) ISNULL))))OR(((v0.c2) IS TRUE)))) ORDER BY CAST(0.8477203533371469 AS TEXT) ASC, (((v0.c2)<<(v0.c2)) IN ()) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT ((((((((v0.c1)OR(v0.c0)))AND(v0.c2)))AND(v0.c1)))OR(v0.c1)), 0.39842442307856807)  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (CAST(((((v0.c0)OR(v0.c2)))OR(v0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)OR(v0.c2)))OR(v0.c2)) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((((v0.c0)OR(v0.c2)))OR(v0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)OR(v0.c2)))OR(v0.c2)) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((((v0.c0)OR(v0.c2)))OR(v0.c2)) AS NUMERIC));
SELECT * FROM vt0 NOT INDEXED, v0 WHERE (((((UPPER(vt0.c0))OR((~ (v0.c0)))))OR(((v0.c1) ISNULL)))) ORDER BY ((((NULLIF(vt0.c0, v0.c0))AND(0.3825095419761695 COLLATE BINARY)))OR((- (v0.c2))));
SELECT SUM(count) FROM (SELECT ((((((UPPER(vt0.c0))OR((~ (v0.c0)))))OR(((v0.c1) ISNULL)))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED ORDER BY ((((NULLIF(vt0.c0, v0.c0))AND(0.3825095419761695 COLLATE BINARY)))OR((- (v0.c2)))));
SELECT * FROM vt0 NOT INDEXED, v0 WHERE (((((UPPER(vt0.c0))OR((~ (v0.c0)))))OR(((v0.c1) ISNULL)))) ORDER BY ((((NULLIF(vt0.c0, v0.c0))AND(0.3825095419761695 COLLATE BINARY)))OR((- (v0.c2))));
SELECT SUM(count) FROM (SELECT ((((((UPPER(vt0.c0))OR((~ (v0.c0)))))OR(((v0.c1) ISNULL)))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED ORDER BY ((((NULLIF(vt0.c0, v0.c0))AND(0.3825095419761695 COLLATE BINARY)))OR((- (v0.c2)))));
SELECT * FROM vt0 NOT INDEXED, v0 WHERE (((((UPPER(vt0.c0))OR((~ (v0.c0)))))OR(((v0.c1) ISNULL)))) ORDER BY ((((NULLIF(vt0.c0, v0.c0))AND(0.3825095419761695 COLLATE BINARY)))OR((- (v0.c2))));
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(json_array_length(vt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_array_length(vt0.c0) AS BLOB)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(json_array_length(vt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_array_length(vt0.c0) AS BLOB)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(json_array_length(vt0.c0) AS BLOB));
SELECT * FROM vt0 WHERE ((((vt0.c0) IS FALSE) IN ('1289598964' COLLATE RTRIM))) ORDER BY NULL  NULLS FIRST, (+ ('1686962359')) DESC, ((((((((0.2997207196861954)AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'1f99'))))))OR(vt0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS INTEGER))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) IS FALSE) IN ('1289598964' COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST, (+ ('1686962359')) DESC, ((((((((0.2997207196861954)AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'1f99'))))))OR(vt0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS INTEGER))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT * FROM vt0 WHERE ((((vt0.c0) IS FALSE) IN ('1289598964' COLLATE RTRIM))) ORDER BY NULL  NULLS FIRST, (+ ('1686962359')) DESC, ((((((((0.2997207196861954)AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'1f99'))))))OR(vt0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS INTEGER))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) IS FALSE) IN ('1289598964' COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST, (+ ('1686962359')) DESC, ((((((((0.2997207196861954)AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'1f99'))))))OR(vt0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS INTEGER))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT * FROM vt0 WHERE ((((vt0.c0) IS FALSE) IN ('1289598964' COLLATE RTRIM))) ORDER BY NULL  NULLS FIRST, (+ ('1686962359')) DESC, ((((((((0.2997207196861954)AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'1f99'))))))OR(vt0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS INTEGER))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.9159924642888162))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.9159924642888162))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.9159924642888162))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.9159924642888162))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.9159924642888162))) NOT NULL));
SELECT ALL * FROM vt0, v0 WHERE (0.010538455081822273) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((0.010538455081822273) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0 DESC);
SELECT ALL * FROM vt0, v0 WHERE (0.010538455081822273) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((0.010538455081822273) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0 DESC);
SELECT ALL * FROM vt0, v0 WHERE (0.010538455081822273) ORDER BY vt0.c0 DESC;
SELECT ALL * FROM v0 WHERE ((((((v0.c0, v0.c2, v0.c0))>=((v0.c2, v0.c0, v0.c2))))<=((v0.c2 IN ())))) ORDER BY (((+ (v0.c2))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0, v0.c2, v0.c0))>=((v0.c2, v0.c0, v0.c2))))<=((v0.c2 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (((+ (v0.c2))) IS FALSE) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((((v0.c0, v0.c2, v0.c0))>=((v0.c2, v0.c0, v0.c2))))<=((v0.c2 IN ())))) ORDER BY (((+ (v0.c2))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0, v0.c2, v0.c0))>=((v0.c2, v0.c0, v0.c2))))<=((v0.c2 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (((+ (v0.c2))) IS FALSE) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((((v0.c0, v0.c2, v0.c0))>=((v0.c2, v0.c0, v0.c2))))<=((v0.c2 IN ())))) ORDER BY (((+ (v0.c2))) IS FALSE) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)>(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR((NOT (vt0.c0)))))OR('贊4')))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)>(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR((NOT (vt0.c0)))))OR('贊4')))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)>(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR((NOT (vt0.c0)))))OR('贊4')))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)>(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR((NOT (vt0.c0)))))OR('贊4')))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)>(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR((NOT (vt0.c0)))))OR('贊4')))AND((vt0.c0 IN ()))));
SELECT * FROM vt0, v0 WHERE (((0.5224265140627965)>=(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((0.5224265140627965)>=(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((0.5224265140627965)>=(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((0.5224265140627965)>=(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((0.5224265140627965)>=(((v0.c0) NOT NULL))));
SELECT COUNT(*) FROM v0 WHERE ('-968198409');
SELECT SUM(count) FROM (SELECT (('-968198409') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('-968198409');
SELECT SUM(count) FROM (SELECT (('-968198409') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('-968198409');
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN QUOTE(vt0.c0) THEN ((vt0.c0) NOT NULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN QUOTE(vt0.c0) THEN ((vt0.c0) NOT NULL) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN QUOTE(vt0.c0) THEN ((vt0.c0) NOT NULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN QUOTE(vt0.c0) THEN ((vt0.c0) NOT NULL) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN QUOTE(vt0.c0) THEN ((vt0.c0) NOT NULL) END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY (((vt0.c0 IN ()))&((((vt0.c0))!=((vt0.c0))))) ASC  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))&((((vt0.c0))<>((vt0.c0))))) ASC  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(vt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY (((vt0.c0 IN ()))&((((vt0.c0))!=((vt0.c0))))) ASC  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))&((((vt0.c0))<>((vt0.c0))))) ASC  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(vt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY (((vt0.c0 IN ()))&((((vt0.c0))!=((vt0.c0))))) ASC  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(vt0.c0))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2)+(v0.c2))) ISNULL)) ORDER BY v0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)+(v0.c2))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY v0.c1);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2)+(v0.c2))) ISNULL)) ORDER BY v0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)+(v0.c2))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY v0.c1);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2)+(v0.c2))) ISNULL)) ORDER BY v0.c1;
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))GLOB(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2))))) ORDER BY LOWER(DISTINCT ((v0.c0) NOT NULL)) DESC  NULLS FIRST, SUBSTR(v0.c1, v0.c0) COLLATE BINARY DESC  NULLS FIRST, (((CASE v0.c0  WHEN v0.c2 THEN v0.c2 WHEN vt0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 END))!=(((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))GLOB(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2))))) IS TRUE)  as count FROM v0, vt0 ORDER BY LOWER(DISTINCT ((v0.c0) NOT NULL)) DESC  NULLS FIRST, SUBSTR(v0.c1, v0.c0) COLLATE BINARY DESC  NULLS FIRST, (((CASE v0.c0  WHEN v0.c2 THEN v0.c2 WHEN vt0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 END))!=(((- (v0.c0))))));
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))GLOB(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2))))) ORDER BY LOWER(DISTINCT ((v0.c0) NOT NULL)) DESC  NULLS FIRST, SUBSTR(v0.c1, v0.c0) COLLATE BINARY DESC  NULLS FIRST, (((CASE v0.c0  WHEN v0.c2 THEN v0.c2 WHEN vt0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 END))!=(((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))GLOB(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2))))) IS TRUE)  as count FROM v0, vt0 ORDER BY LOWER(DISTINCT ((v0.c0) NOT NULL)) DESC  NULLS FIRST, SUBSTR(v0.c1, v0.c0) COLLATE BINARY DESC  NULLS FIRST, (((CASE v0.c0  WHEN v0.c2 THEN v0.c2 WHEN vt0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 END))!=(((- (v0.c0))))));
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))GLOB(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2))))) ORDER BY LOWER(DISTINCT ((v0.c0) NOT NULL)) DESC  NULLS FIRST, SUBSTR(v0.c1, v0.c0) COLLATE BINARY DESC  NULLS FIRST, (((CASE v0.c0  WHEN v0.c2 THEN v0.c2 WHEN vt0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 END))!=(((- (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (CASE WHEN (v0.c1 IN ()) THEN CAST(v0.c1 AS INTEGER) WHEN (((v0.c1, v0.c0, v0.c0)) NOT BETWEEN ((v0.c1, '#W', v0.c0)) AND ((0.05349175379678672, x'6d62', v0.c2))) THEN (((v0.c2))<=((v0.c2))) WHEN ((v0.c1) IS TRUE) THEN v0.c0 COLLATE NOCASE ELSE x'9f88' END) ORDER BY ((((vt0.c0)|(v0.c0)))LIKE(((v0.c1)||(v0.c1)))) DESC, (NOT ((- (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c1 IN ()) THEN CAST(v0.c1 AS INTEGER) WHEN (((v0.c1, v0.c0, v0.c0)) NOT BETWEEN ((v0.c1, '#W', v0.c0)) AND ((0.05349175379678672, x'6d62', v0.c2))) THEN (((v0.c2))<=((v0.c2))) WHEN ((v0.c1) IS TRUE) THEN v0.c0 COLLATE NOCASE ELSE x'9f88' END) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY ((((vt0.c0)|(v0.c0)))LIKE(((v0.c1)||(v0.c1)))) DESC, (NOT ((- (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (CASE WHEN (v0.c1 IN ()) THEN CAST(v0.c1 AS INTEGER) WHEN (((v0.c1, v0.c0, v0.c0)) NOT BETWEEN ((v0.c1, '#W', v0.c0)) AND ((0.05349175379678672, x'6d62', v0.c2))) THEN (((v0.c2))<=((v0.c2))) WHEN ((v0.c1) IS TRUE) THEN v0.c0 COLLATE NOCASE ELSE x'9f88' END) ORDER BY ((((vt0.c0)|(v0.c0)))LIKE(((v0.c1)||(v0.c1)))) DESC, (NOT ((- (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c1 IN ()) THEN CAST(v0.c1 AS INTEGER) WHEN (((v0.c1, v0.c0, v0.c0)) NOT BETWEEN ((v0.c1, '#W', v0.c0)) AND ((0.05349175379678672, x'6d62', v0.c2))) THEN (((v0.c2))<=((v0.c2))) WHEN ((v0.c1) IS TRUE) THEN v0.c0 COLLATE NOCASE ELSE x'9f88' END) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY ((((vt0.c0)|(v0.c0)))LIKE(((v0.c1)||(v0.c1)))) DESC, (NOT ((- (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (CASE WHEN (v0.c1 IN ()) THEN CAST(v0.c1 AS INTEGER) WHEN (((v0.c1, v0.c0, v0.c0)) NOT BETWEEN ((v0.c1, '#W', v0.c0)) AND ((0.05349175379678672, x'6d62', v0.c2))) THEN (((v0.c2))<=((v0.c2))) WHEN ((v0.c1) IS TRUE) THEN v0.c0 COLLATE NOCASE ELSE x'9f88' END) ORDER BY ((((vt0.c0)|(v0.c0)))LIKE(((v0.c1)||(v0.c1)))) DESC, (NOT ((- (vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM v0 WHERE ((('-1225830016') NOT BETWEEN (v0.c1 COLLATE NOCASE) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((('-1225830016') NOT BETWEEN (v0.c1 COLLATE NOCASE) AND (NULL))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((('-1225830016') NOT BETWEEN (v0.c1 COLLATE NOCASE) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((('-1225830016') NOT BETWEEN (v0.c1 COLLATE NOCASE) AND (NULL))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((('-1225830016') NOT BETWEEN (v0.c1 COLLATE NOCASE) AND (NULL)));
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c2) AND (v0.c1)))*(((v0.c1)-(v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c2) AND (v0.c1)))*(((v0.c1)-(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c2) AND (v0.c1)))*(((v0.c1)-(v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c2) AND (v0.c1)))*(((v0.c1)-(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c2) AND (v0.c1)))*(((v0.c1)-(v0.c2)))));
SELECT * FROM v0 CROSS JOIN vt0 ON CAST(((((((((0Xffffffffc80c6e3e)AND(v0.c1)))AND(v0.c1)))AND(v0.c1)))OR(vt0.c0)) AS BLOB) WHERE (STRFTIME((((v0.c2))<=((v0.c2))), (((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))), ((vt0.c0)GLOB(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((STRFTIME((((v0.c2))<=((v0.c2))), (((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))), ((vt0.c0)GLOB(vt0.c0)))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST(((((((((0xffffffffc80c6e3e)AND(v0.c1)))AND(v0.c1)))AND(v0.c1)))OR(vt0.c0)) AS BLOB));
SELECT * FROM v0 CROSS JOIN vt0 ON CAST(((((((((0Xffffffffc80c6e3e)AND(v0.c1)))AND(v0.c1)))AND(v0.c1)))OR(vt0.c0)) AS BLOB) WHERE (STRFTIME((((v0.c2))<=((v0.c2))), (((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))), ((vt0.c0)GLOB(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((STRFTIME((((v0.c2))<=((v0.c2))), (((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))), ((vt0.c0)GLOB(vt0.c0)))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST(((((((((0xffffffffc80c6e3e)AND(v0.c1)))AND(v0.c1)))AND(v0.c1)))OR(vt0.c0)) AS BLOB));
SELECT * FROM v0 CROSS JOIN vt0 ON CAST(((((((((0Xffffffffc80c6e3e)AND(v0.c1)))AND(v0.c1)))AND(v0.c1)))OR(vt0.c0)) AS BLOB) WHERE (STRFTIME((((v0.c2))<=((v0.c2))), (((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))), ((vt0.c0)GLOB(vt0.c0))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((CAST(v0.c1 AS INTEGER)) NOT BETWEEN (v0.c1) AND ((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS INTEGER)) NOT BETWEEN (v0.c1) AND ((NOT (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((CAST(v0.c1 AS INTEGER)) NOT BETWEEN (v0.c1) AND ((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS INTEGER)) NOT BETWEEN (v0.c1) AND ((NOT (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((CAST(v0.c1 AS INTEGER)) NOT BETWEEN (v0.c1) AND ((NOT (v0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((((v0.c2)AND(v0.c1)))OR(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c2)AND(v0.c1)))OR(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((((v0.c2)AND(v0.c1)))OR(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c2)AND(v0.c1)))OR(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((((v0.c2)AND(v0.c1)))OR(vt0.c0)) AS REAL));
SELECT * FROM vt0 WHERE (((((vt0.c0))=((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))==((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0))=((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))==((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0))=((vt0.c0))) IN ()));
SELECT * FROM v0, vt0 WHERE (((((COALESCE(DISTINCT v0.c1, v0.c0))AND(((v0.c2)<<(vt0.c0)))))AND(v0.c0 COLLATE BINARY))) ORDER BY (NOT (v0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((COALESCE(DISTINCT v0.c1, v0.c0))AND(((v0.c2)<<(vt0.c0)))))AND(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0 ORDER BY (NOT (v0.c1)) ASC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((((COALESCE(DISTINCT v0.c1, v0.c0))AND(((v0.c2)<<(vt0.c0)))))AND(v0.c0 COLLATE BINARY))) ORDER BY (NOT (v0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((COALESCE(DISTINCT v0.c1, v0.c0))AND(((v0.c2)<<(vt0.c0)))))AND(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0 ORDER BY (NOT (v0.c1)) ASC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((((COALESCE(DISTINCT v0.c1, v0.c0))AND(((v0.c2)<<(vt0.c0)))))AND(v0.c0 COLLATE BINARY))) ORDER BY (NOT (v0.c1)) ASC  NULLS FIRST;
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((NULL) NOT BETWEEN ((+ (v0.c1))) AND (((v0.c2) BETWEEN (vt0.c0) AND (v0.c0)))) WHERE (x'8a7e');
SELECT SUM(count) FROM (SELECT ((x'8a7e') IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((NULL) NOT BETWEEN ((+ (v0.c1))) AND (((v0.c2) BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((NULL) NOT BETWEEN ((+ (v0.c1))) AND (((v0.c2) BETWEEN (vt0.c0) AND (v0.c0)))) WHERE (x'8a7e');
SELECT SUM(count) FROM (SELECT ((x'8a7e') IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((NULL) NOT BETWEEN ((+ (v0.c1))) AND (((v0.c2) BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((NULL) NOT BETWEEN ((+ (v0.c1))) AND (((v0.c2) BETWEEN (vt0.c0) AND (v0.c0)))) WHERE (x'8a7e');
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0), vt0.c0, '777013757')) AND (((vt0.c0 IN ()), (vt0.c0 IN ()), ((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0), vt0.c0, '777013757')) AND (((vt0.c0 IN ()), (vt0.c0 IN ()), ((vt0.c0)/(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0), vt0.c0, '777013757')) AND (((vt0.c0 IN ()), (vt0.c0 IN ()), ((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0), vt0.c0, '777013757')) AND (((vt0.c0 IN ()), (vt0.c0 IN ()), ((vt0.c0)/(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0), vt0.c0, '777013757')) AND (((vt0.c0 IN ()), (vt0.c0 IN ()), ((vt0.c0)/(vt0.c0)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(SQLITE_COMPILEOPTION_GET(v0.c1) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(SQLITE_COMPILEOPTION_GET(v0.c1) AS REAL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(SQLITE_COMPILEOPTION_GET(v0.c1) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(SQLITE_COMPILEOPTION_GET(v0.c1) AS REAL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(SQLITE_COMPILEOPTION_GET(v0.c1) AS REAL));
SELECT COUNT(*) FROM v0, vt0 WHERE ((CAST('-539310818' AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST('-539310818' AS NUMERIC) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((CAST('-539310818' AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST('-539310818' AS NUMERIC) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((CAST('-539310818' AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)/((v0.c1 IN (v0.c2))))) ORDER BY ((v0.c2 COLLATE BINARY) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)/((v0.c1 IN (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2 COLLATE BINARY) NOTNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)/((v0.c1 IN (v0.c2))))) ORDER BY ((v0.c2 COLLATE BINARY) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)/((v0.c1 IN (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2 COLLATE BINARY) NOTNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)/((v0.c1 IN (v0.c2))))) ORDER BY ((v0.c2 COLLATE BINARY) NOTNULL);
SELECT * FROM vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0)<<(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0)<<(v0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0)<<(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0)<<(v0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0)<<(v0.c0))))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END))==((json_type(v0.c0))))) ORDER BY ((CAST(v0.c1 AS REAL))>=(((v0.c0) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END))==((json_type(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(v0.c1 AS REAL))>=(((v0.c0) NOT NULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END))==((json_type(v0.c0))))) ORDER BY ((CAST(v0.c1 AS REAL))>=(((v0.c0) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END))==((json_type(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(v0.c1 AS REAL))>=(((v0.c0) NOT NULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END))==((json_type(v0.c0))))) ORDER BY ((CAST(v0.c1 AS REAL))>=(((v0.c0) NOT NULL))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (GLOB(((vt0.c0)<>(vt0.c0)), (- (vt0.c0)))) ORDER BY CASE (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))  WHEN DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN NULL END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((GLOB(((vt0.c0)<>(vt0.c0)), (- (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))  WHEN DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN NULL END ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (GLOB(((vt0.c0)<>(vt0.c0)), (- (vt0.c0)))) ORDER BY CASE (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))  WHEN DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN NULL END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((GLOB(((vt0.c0)<>(vt0.c0)), (- (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))  WHEN DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN NULL END ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (GLOB(((vt0.c0)<>(vt0.c0)), (- (vt0.c0)))) ORDER BY CASE (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))  WHEN DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN NULL END ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON 0X16eaa4b5 WHERE ((v0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON 0x16eaa4b5);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON 0X16eaa4b5 WHERE ((v0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON 0x16eaa4b5);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON 0X16eaa4b5 WHERE ((v0.c0 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))GLOB('-587815464' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))GLOB('-587815464' COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))GLOB('-587815464' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))GLOB('-587815464' COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))GLOB('-587815464' COLLATE RTRIM)));
SELECT ALL * FROM vt0 INNER JOIN v0 ON v0.c0 WHERE (((v0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS FALSE)) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON v0.c0);
SELECT ALL * FROM vt0 INNER JOIN v0 ON v0.c0 WHERE (((v0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS FALSE)) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON v0.c0);
SELECT ALL * FROM vt0 INNER JOIN v0 ON v0.c0 WHERE (((v0.c0) IS FALSE));
SELECT * FROM v0 WHERE (((((v0.c0)-(v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)-(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)-(v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)-(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)-(v0.c0))) IS TRUE));
SELECT ALL * FROM v0, vt0 WHERE ((+ ((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((v0.c1 IN ())))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((+ ((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((v0.c1 IN ())))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((+ ((v0.c1 IN ()))));
SELECT ALL * FROM v0, vt0 NOT INDEXED WHERE ('534753284');
SELECT SUM(count) FROM (SELECT ALL (('534753284') IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 NOT INDEXED WHERE ('534753284');
SELECT SUM(count) FROM (SELECT ALL (('534753284') IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 NOT INDEXED WHERE ('534753284');
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0) BETWEEN (x'') AND (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (x'') AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0) BETWEEN (x'') AND (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (x'') AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0) BETWEEN (x'') AND (v0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM v0, vt0 WHERE ((- (v0.c1 COLLATE BINARY))) ORDER BY CASE WHEN NULL THEN CASE WHEN v0.c0 THEN v0.c1 ELSE vt0.c0 END WHEN ((v0.c1) NOTNULL) THEN (NOT (v0.c1)) WHEN ((vt0.c0)-(v0.c1)) THEN (~ (v0.c1)) END  NULLS FIRST, v0.c2;
SELECT SUM(count) FROM (SELECT (((- (v0.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0 ORDER BY CASE WHEN NULL THEN CASE WHEN v0.c0 THEN v0.c1 ELSE vt0.c0 END WHEN ((v0.c1) NOTNULL) THEN (NOT (v0.c1)) WHEN ((vt0.c0)-(v0.c1)) THEN (~ (v0.c1)) END  NULLS FIRST, v0.c2);
SELECT COUNT(*) FROM v0, vt0 WHERE ((- (v0.c1 COLLATE BINARY))) ORDER BY CASE WHEN NULL THEN CASE WHEN v0.c0 THEN v0.c1 ELSE vt0.c0 END WHEN ((v0.c1) NOTNULL) THEN (NOT (v0.c1)) WHEN ((vt0.c0)-(v0.c1)) THEN (~ (v0.c1)) END  NULLS FIRST, v0.c2;
SELECT SUM(count) FROM (SELECT (((- (v0.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0 ORDER BY CASE WHEN NULL THEN CASE WHEN v0.c0 THEN v0.c1 ELSE vt0.c0 END WHEN ((v0.c1) NOTNULL) THEN (NOT (v0.c1)) WHEN ((vt0.c0)-(v0.c1)) THEN (~ (v0.c1)) END  NULLS FIRST, v0.c2);
SELECT COUNT(*) FROM v0, vt0 WHERE ((- (v0.c1 COLLATE BINARY))) ORDER BY CASE WHEN NULL THEN CASE WHEN v0.c0 THEN v0.c1 ELSE vt0.c0 END WHEN ((v0.c1) NOTNULL) THEN (NOT (v0.c1)) WHEN ((vt0.c0)-(v0.c1)) THEN (~ (v0.c1)) END  NULLS FIRST, v0.c2;
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS REAL)) ORDER BY ((((CAST(vt0.c0 AS REAL))OR(CAST(vt0.c0 AS NUMERIC))))OR(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS REAL))OR(CAST(vt0.c0 AS NUMERIC))))OR(vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS REAL)) ORDER BY ((((CAST(vt0.c0 AS REAL))OR(CAST(vt0.c0 AS NUMERIC))))OR(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS REAL))OR(CAST(vt0.c0 AS NUMERIC))))OR(vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS REAL)) ORDER BY ((((CAST(vt0.c0 AS REAL))OR(CAST(vt0.c0 AS NUMERIC))))OR(vt0.c0 COLLATE RTRIM));
SELECT * FROM vt0 WHERE ((- (((vt0.c0) IS TRUE)))) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (+ (vt0.c0)) ELSE vt0.c0 END ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (+ (vt0.c0)) ELSE vt0.c0 END ASC);
SELECT * FROM vt0 WHERE ((- (((vt0.c0) IS TRUE)))) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (+ (vt0.c0)) ELSE vt0.c0 END ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (+ (vt0.c0)) ELSE vt0.c0 END ASC);
SELECT * FROM vt0 WHERE ((- (((vt0.c0) IS TRUE)))) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (+ (vt0.c0)) ELSE vt0.c0 END ASC;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)<<(vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN CAST(vt0.c0 AS INTEGER) END) ORDER BY ((vt0.c0)-(vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)<<(vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)-(vt0.c0)) COLLATE BINARY ASC);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)<<(vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN CAST(vt0.c0 AS INTEGER) END) ORDER BY ((vt0.c0)-(vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)<<(vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)-(vt0.c0)) COLLATE BINARY ASC);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)<<(vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN CAST(vt0.c0 AS INTEGER) END) ORDER BY ((vt0.c0)-(vt0.c0)) COLLATE BINARY ASC;
SELECT ALL * FROM v0 NOT INDEXED WHERE (((v0.c1 COLLATE NOCASE) NOTNULL)) ORDER BY ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) COLLATE RTRIM DESC);
SELECT ALL * FROM v0 NOT INDEXED WHERE (((v0.c1 COLLATE NOCASE) NOTNULL)) ORDER BY ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) COLLATE RTRIM DESC);
SELECT ALL * FROM v0 NOT INDEXED WHERE (((v0.c1 COLLATE NOCASE) NOTNULL)) ORDER BY ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM v0, vt0 WHERE (((v0.c0) ISNULL)) ORDER BY (CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c2 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c2 END IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((v0.c0) ISNULL)) ORDER BY (CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c2 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c2 END IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((v0.c0) ISNULL)) ORDER BY (CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c2 END IN ())  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE ((CAST(v0.c2 AS REAL) IN ())) ORDER BY (((((v0.c1 IN ()))AND(CAST(vt0.c0 AS REAL))))AND(CAST(v0.c1 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(v0.c2 AS REAL) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((v0.c1 IN ()))AND(CAST(vt0.c0 AS REAL))))AND(CAST(v0.c1 AS TEXT))) DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE ((CAST(v0.c2 AS REAL) IN ())) ORDER BY (((((v0.c1 IN ()))AND(CAST(vt0.c0 AS REAL))))AND(CAST(v0.c1 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(v0.c2 AS REAL) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((v0.c1 IN ()))AND(CAST(vt0.c0 AS REAL))))AND(CAST(v0.c1 AS TEXT))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '-1431649014', vt0.c0)) AND ((vt0.c0, 'C/縼5Q&W*''', vt0.c0))))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '-1431649014', vt0.c0)) AND ((vt0.c0, 'C/縼5Q&W*''', vt0.c0))))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '-1431649014', vt0.c0)) AND ((vt0.c0, 'C/縼5Q&W*''', vt0.c0))))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '-1431649014', vt0.c0)) AND ((vt0.c0, 'C/縼5Q&W*''', vt0.c0))))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '-1431649014', vt0.c0)) AND ((vt0.c0, 'C/縼5Q&W*''', vt0.c0))))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((v0.c2)OR(v0.c0)))AND(((v0.c2)>>(v0.c0)))))AND((((v0.c0, v0.c0, v0.c2, vt0.c0, v0.c2)) NOT BETWEEN ((v0.c2, v0.c0, v0.c0, vt0.c0, v0.c1)) AND ((v0.c2, v0.c0, v0.c1, v0.c1, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)OR(v0.c0)))AND(((v0.c2)>>(v0.c0)))))AND((((v0.c0, v0.c0, v0.c2, vt0.c0, v0.c2)) NOT BETWEEN ((v0.c2, v0.c0, v0.c0, vt0.c0, v0.c1)) AND ((v0.c2, v0.c0, v0.c1, v0.c1, vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((v0.c2)OR(v0.c0)))AND(((v0.c2)>>(v0.c0)))))AND((((v0.c0, v0.c0, v0.c2, vt0.c0, v0.c2)) NOT BETWEEN ((v0.c2, v0.c0, v0.c0, vt0.c0, v0.c1)) AND ((v0.c2, v0.c0, v0.c1, v0.c1, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)OR(v0.c0)))AND(((v0.c2)>>(v0.c0)))))AND((((v0.c0, v0.c0, v0.c2, vt0.c0, v0.c2)) NOT BETWEEN ((v0.c2, v0.c0, v0.c0, vt0.c0, v0.c1)) AND ((v0.c2, v0.c0, v0.c1, v0.c1, vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((v0.c2)OR(v0.c0)))AND(((v0.c2)>>(v0.c0)))))AND((((v0.c0, v0.c0, v0.c2, vt0.c0, v0.c2)) NOT BETWEEN ((v0.c2, v0.c0, v0.c0, vt0.c0, v0.c1)) AND ((v0.c2, v0.c0, v0.c1, v0.c1, vt0.c0))))));
SELECT * FROM vt0 CROSS JOIN v0 ON (- ((((v0.c0, vt0.c0, v0.c1))=((vt0.c0, v0.c2, vt0.c0))))) WHERE (CASE WHEN (NOT (v0.c1)) THEN CAST(vt0.c0 AS NUMERIC) END) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (v0.c1)) THEN CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (- ((((v0.c0, vt0.c0, v0.c1))=((vt0.c0, v0.c2, vt0.c0))))) ORDER BY vt0.c0 DESC);
SELECT * FROM vt0 CROSS JOIN v0 ON (- ((((v0.c0, vt0.c0, v0.c1))=((vt0.c0, v0.c2, vt0.c0))))) WHERE (CASE WHEN (NOT (v0.c1)) THEN CAST(vt0.c0 AS NUMERIC) END) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (v0.c1)) THEN CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (- ((((v0.c0, vt0.c0, v0.c1))=((vt0.c0, v0.c2, vt0.c0))))) ORDER BY vt0.c0 DESC);
SELECT * FROM vt0 CROSS JOIN v0 ON (- ((((v0.c0, vt0.c0, v0.c1))=((vt0.c0, v0.c2, vt0.c0))))) WHERE (CASE WHEN (NOT (v0.c1)) THEN CAST(vt0.c0 AS NUMERIC) END) ORDER BY vt0.c0 DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c0 IN ()))))OR(((vt0.c0)*('-355783355')))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c0 IN ()))))OR(((vt0.c0)*('-355783355'))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c0 IN ()))))OR(((vt0.c0)*('-355783355')))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c0 IN ()))))OR(((vt0.c0)*('-355783355'))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c0 IN ()))))OR(((vt0.c0)*('-355783355')))));
SELECT * FROM v0 WHERE (((((v0.c2)+(0.022051147120003778)))-(((v0.c0)>>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)+(0.022051147120003778)))-(((v0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c2)+(0.022051147120003778)))-(((v0.c0)>>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)+(0.022051147120003778)))-(((v0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c2)+(0.022051147120003778)))-(((v0.c0)>>(v0.c0)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((((((CASE vt0.c0  WHEN vt0.c0 THEN v0.c1 END)OR(((((v0.c1)AND(v0.c0)))OR(v0.c0)))))OR(CAST(v0.c0 AS INTEGER))))AND(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))))AND(((v0.c2)/(v0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE vt0.c0  WHEN vt0.c0 THEN v0.c1 END)OR(((((v0.c1)AND(v0.c0)))OR(v0.c0)))))OR(CAST(v0.c0 AS INTEGER))))AND(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))))AND(((v0.c2)/(v0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2)))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((((((CASE vt0.c0  WHEN vt0.c0 THEN v0.c1 END)OR(((((v0.c1)AND(v0.c0)))OR(v0.c0)))))OR(CAST(v0.c0 AS INTEGER))))AND(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))))AND(((v0.c2)/(v0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE vt0.c0  WHEN vt0.c0 THEN v0.c1 END)OR(((((v0.c1)AND(v0.c0)))OR(v0.c0)))))OR(CAST(v0.c0 AS INTEGER))))AND(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))))AND(((v0.c2)/(v0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2)))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((((((CASE vt0.c0  WHEN vt0.c0 THEN v0.c1 END)OR(((((v0.c1)AND(v0.c0)))OR(v0.c0)))))OR(CAST(v0.c0 AS INTEGER))))AND(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))))AND(((v0.c2)/(v0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))))));
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS TEXT)) ORDER BY (((v0.c2)) NOT BETWEEN ((((v0.c2)<(v0.c2)))) AND ((load_extension('Tsv\pzvR9', vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS TEXT)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c2)) NOT BETWEEN ((((v0.c2)<(v0.c2)))) AND ((load_extension('Tsv\pzvR9', vt0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS TEXT)) ORDER BY (((v0.c2)) NOT BETWEEN ((((v0.c2)<(v0.c2)))) AND ((load_extension('Tsv\pzvR9', vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS TEXT)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c2)) NOT BETWEEN ((((v0.c2)<(v0.c2)))) AND ((load_extension('Tsv\pzvR9', vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0)))>>(((vt0.c0)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(vt0.c0)))>>(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0)))>>(((vt0.c0)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(vt0.c0)))>>(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0)))>>(((vt0.c0)*(vt0.c0)))));
SELECT * FROM vt0, v0 WHERE ((((((x'e38b', 0xffffffffc9fb7105, v0.c0))==((v0.c2, '', vt0.c0)))) ISNULL)) ORDER BY CASE ''  WHEN ((v0.c2)>(v0.c1)) THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c2))) WHEN 0.22971003294586123 THEN v0.c2 COLLATE NOCASE WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) THEN CASE WHEN v0.c2 THEN v0.c1 END ELSE CAST(v0.c0 AS REAL) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((x'e38b', 0xffffffffc9fb7105, v0.c0))==((v0.c2, '', vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE ''  WHEN ((v0.c2)>(v0.c1)) THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c2))) WHEN 0.22971003294586123 THEN v0.c2 COLLATE NOCASE WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) THEN CASE WHEN v0.c2 THEN v0.c1 END ELSE CAST(v0.c0 AS REAL) END ASC);
SELECT * FROM vt0, v0 WHERE ((((((x'e38b', 0xffffffffc9fb7105, v0.c0))==((v0.c2, '', vt0.c0)))) ISNULL)) ORDER BY CASE ''  WHEN ((v0.c2)>(v0.c1)) THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c2))) WHEN 0.22971003294586123 THEN v0.c2 COLLATE NOCASE WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) THEN CASE WHEN v0.c2 THEN v0.c1 END ELSE CAST(v0.c0 AS REAL) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((x'e38b', 0xffffffffc9fb7105, v0.c0))==((v0.c2, '', vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE ''  WHEN ((v0.c2)>(v0.c1)) THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c2))) WHEN 0.22971003294586123 THEN v0.c2 COLLATE NOCASE WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) THEN CASE WHEN v0.c2 THEN v0.c1 END ELSE CAST(v0.c0 AS REAL) END ASC);
SELECT * FROM vt0, v0 WHERE ((((((x'e38b', 0xffffffffc9fb7105, v0.c0))==((v0.c2, '', vt0.c0)))) ISNULL)) ORDER BY CASE ''  WHEN ((v0.c2)>(v0.c1)) THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c2))) WHEN 0.22971003294586123 THEN v0.c2 COLLATE NOCASE WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) THEN CASE WHEN v0.c2 THEN v0.c1 END ELSE CAST(v0.c0 AS REAL) END ASC;
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c2) ORDER BY ((((v0.c0) NOT BETWEEN (0.44204892017911623) AND (v0.c2))) BETWEEN ((v0.c0 IN (v0.c1))) AND (((vt0.c0)/(v0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) NOT BETWEEN (0.44204892017911623) AND (v0.c2))) BETWEEN ((v0.c0 IN (v0.c1))) AND (((vt0.c0)/(v0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c2) ORDER BY ((((v0.c0) NOT BETWEEN (0.44204892017911623) AND (v0.c2))) BETWEEN ((v0.c0 IN (v0.c1))) AND (((vt0.c0)/(v0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) NOT BETWEEN (0.44204892017911623) AND (v0.c2))) BETWEEN ((v0.c0 IN (v0.c1))) AND (((vt0.c0)/(v0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c2) ORDER BY ((((v0.c0) NOT BETWEEN (0.44204892017911623) AND (v0.c2))) BETWEEN ((v0.c0 IN (v0.c1))) AND (((vt0.c0)/(v0.c2)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c0);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC))||(((v0.c0) NOTNULL))) WHERE (PRINTF(((((v0.c2)OR(vt0.c0)))OR(v0.c0)), UNLIKELY(vt0.c0), (('!n')<<(vt0.c0)))) ORDER BY (((((+ (v0.c2)))AND(((v0.c0)|(v0.c1)))))AND((- (NULL))))  NULLS LAST, ((((((((((((-1381751600)OR(v0.c0)))AND(v0.c1)))OR((((v0.c2))<((v0.c1))))))AND('-1e500')))OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)!=(v0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((PRINTF(((((v0.c2)OR(vt0.c0)))OR(v0.c0)), UNLIKELY(vt0.c0), (('!n')<<(vt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC))||(((v0.c0) NOTNULL))) ORDER BY (((((+ (v0.c2)))AND(((v0.c0)|(v0.c1)))))AND((- (NULL))))  NULLS LAST, ((((((((((((-1381751600)OR(v0.c0)))AND(v0.c1)))OR((((v0.c2))<((v0.c1))))))AND('-1e500')))OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)<>(v0.c2)))) DESC);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC))||(((v0.c0) NOTNULL))) WHERE (PRINTF(((((v0.c2)OR(vt0.c0)))OR(v0.c0)), UNLIKELY(vt0.c0), (('!n')<<(vt0.c0)))) ORDER BY (((((+ (v0.c2)))AND(((v0.c0)|(v0.c1)))))AND((- (NULL))))  NULLS LAST, ((((((((((((-1381751600)OR(v0.c0)))AND(v0.c1)))OR((((v0.c2))<((v0.c1))))))AND('-1e500')))OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)!=(v0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((PRINTF(((((v0.c2)OR(vt0.c0)))OR(v0.c0)), UNLIKELY(vt0.c0), (('!n')<<(vt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC))||(((v0.c0) NOTNULL))) ORDER BY (((((+ (v0.c2)))AND(((v0.c0)|(v0.c1)))))AND((- (NULL))))  NULLS LAST, ((((((((((((-1381751600)OR(v0.c0)))AND(v0.c1)))OR((((v0.c2))<((v0.c1))))))AND('-1e500')))OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)<>(v0.c2)))) DESC);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC))||(((v0.c0) NOTNULL))) WHERE (PRINTF(((((v0.c2)OR(vt0.c0)))OR(v0.c0)), UNLIKELY(vt0.c0), (('!n')<<(vt0.c0)))) ORDER BY (((((+ (v0.c2)))AND(((v0.c0)|(v0.c1)))))AND((- (NULL))))  NULLS LAST, ((((((((((((-1381751600)OR(v0.c0)))AND(v0.c1)))OR((((v0.c2))<((v0.c1))))))AND('-1e500')))OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)!=(v0.c2)))) DESC;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1)) NOT BETWEEN ((CAST(v0.c2 AS NUMERIC))) AND ((v0.c2 COLLATE BINARY)))) ORDER BY (((((v0.c0))<=((v0.c0))))<<(x'')), CASE CAST(v0.c0 AS REAL)  WHEN ((v0.c2) ISNULL) THEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) END DESC, CASE WHEN ((v0.c0)<<(v0.c0)) THEN (((v0.c2, v0.c2, v0.c2, v0.c1, v0.c2))!=((NULL, v0.c0, v0.c2, v0.c1, v0.c0))) ELSE CASE v0.c2  WHEN NULL THEN v0.c0 WHEN v0.c2 THEN 'LR' WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c1)) NOT BETWEEN ((CAST(v0.c2 AS NUMERIC))) AND ((v0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0))<=((v0.c0))))<<(x'')), CASE CAST(v0.c0 AS REAL)  WHEN ((v0.c2) ISNULL) THEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) END DESC, CASE WHEN ((v0.c0)<<(v0.c0)) THEN (((v0.c2, v0.c2, v0.c2, v0.c1, v0.c2))!=((NULL, v0.c0, v0.c2, v0.c1, v0.c0))) ELSE CASE v0.c2  WHEN NULL THEN v0.c0 WHEN v0.c2 THEN 'LR' WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END END DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1)) NOT BETWEEN ((CAST(v0.c2 AS NUMERIC))) AND ((v0.c2 COLLATE BINARY)))) ORDER BY (((((v0.c0))<=((v0.c0))))<<(x'')), CASE CAST(v0.c0 AS REAL)  WHEN ((v0.c2) ISNULL) THEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) END DESC, CASE WHEN ((v0.c0)<<(v0.c0)) THEN (((v0.c2, v0.c2, v0.c2, v0.c1, v0.c2))!=((NULL, v0.c0, v0.c2, v0.c1, v0.c0))) ELSE CASE v0.c2  WHEN NULL THEN v0.c0 WHEN v0.c2 THEN 'LR' WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c1)) NOT BETWEEN ((CAST(v0.c2 AS NUMERIC))) AND ((v0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0))<=((v0.c0))))<<(x'')), CASE CAST(v0.c0 AS REAL)  WHEN ((v0.c2) ISNULL) THEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) END DESC, CASE WHEN ((v0.c0)<<(v0.c0)) THEN (((v0.c2, v0.c2, v0.c2, v0.c1, v0.c2))!=((NULL, v0.c0, v0.c2, v0.c1, v0.c0))) ELSE CASE v0.c2  WHEN NULL THEN v0.c0 WHEN v0.c2 THEN 'LR' WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END END DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1)) NOT BETWEEN ((CAST(v0.c2 AS NUMERIC))) AND ((v0.c2 COLLATE BINARY)))) ORDER BY (((((v0.c0))<=((v0.c0))))<<(x'')), CASE CAST(v0.c0 AS REAL)  WHEN ((v0.c2) ISNULL) THEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) END DESC, CASE WHEN ((v0.c0)<<(v0.c0)) THEN (((v0.c2, v0.c2, v0.c2, v0.c1, v0.c2))!=((NULL, v0.c0, v0.c2, v0.c1, v0.c0))) ELSE CASE v0.c2  WHEN NULL THEN v0.c0 WHEN v0.c2 THEN 'LR' WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (((v0.c0)|(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0)|(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (((v0.c0)|(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0)|(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (((v0.c0)|(v0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE ((((((NULL))==((vt0.c0))))GLOB(((vt0.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL))=((vt0.c0))))GLOB(((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((NULL))==((vt0.c0))))GLOB(((vt0.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL))=((vt0.c0))))GLOB(((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((NULL))==((vt0.c0))))GLOB(((vt0.c0)IS NOT(vt0.c0)))));
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c2 THEN json_valid(v0.c1) ELSE v0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c2 THEN json_valid(v0.c1) ELSE v0.c1 END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c2 THEN json_valid(v0.c1) ELSE v0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c2 THEN json_valid(v0.c1) ELSE v0.c1 END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c2 THEN json_valid(v0.c1) ELSE v0.c1 END);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) ISNULL));
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT * FROM v0, vt0 WHERE ((~ (((v0.c0)>=(vt0.c0))))) ORDER BY ((x'350b') BETWEEN (SQLITE_VERSION()) AND (v0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((x'350b') BETWEEN (SQLITE_VERSION()) AND (v0.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE ((~ (((v0.c0)>=(vt0.c0))))) ORDER BY ((x'350b') BETWEEN (SQLITE_VERSION()) AND (v0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((x'350b') BETWEEN (SQLITE_VERSION()) AND (v0.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE ((~ (((v0.c0)>=(vt0.c0))))) ORDER BY ((x'350b') BETWEEN (SQLITE_VERSION()) AND (v0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (CASE CAST(v0.c2 AS REAL)  WHEN ((((v0.c2)AND(v0.c2)))AND(v0.c1)) THEN (v0.c0 IN ()) WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c0)) THEN ((v0.c1)>>(v0.c0)) WHEN (v0.c0 IN (v0.c2, v0.c1)) THEN x'' END) ORDER BY ((((((v0.c2))>=((v0.c2))), ((v0.c0)+(v0.c0)), ((v0.c0) NOTNULL)))>((((v0.c1)>=(v0.c2)), CAST(v0.c1 AS INTEGER), (v0.c1 IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c2 AS REAL)  WHEN ((((v0.c2)AND(v0.c2)))AND(v0.c1)) THEN (v0.c0 IN ()) WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c0)) THEN ((v0.c1)>>(v0.c0)) WHEN (v0.c0 IN (v0.c2, v0.c1)) THEN x'' END) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c2))>=((v0.c2))), ((v0.c0)+(v0.c0)), ((v0.c0) NOTNULL)))>((((v0.c1)>=(v0.c2)), CAST(v0.c1 AS INTEGER), (v0.c1 IN ())))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE CAST(v0.c2 AS REAL)  WHEN ((((v0.c2)AND(v0.c2)))AND(v0.c1)) THEN (v0.c0 IN ()) WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c0)) THEN ((v0.c1)>>(v0.c0)) WHEN (v0.c0 IN (v0.c2, v0.c1)) THEN x'' END) ORDER BY ((((((v0.c2))>=((v0.c2))), ((v0.c0)+(v0.c0)), ((v0.c0) NOTNULL)))>((((v0.c1)>=(v0.c2)), CAST(v0.c1 AS INTEGER), (v0.c1 IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c2 AS REAL)  WHEN ((((v0.c2)AND(v0.c2)))AND(v0.c1)) THEN (v0.c0 IN ()) WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c0)) THEN ((v0.c1)>>(v0.c0)) WHEN (v0.c0 IN (v0.c2, v0.c1)) THEN x'' END) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c2))>=((v0.c2))), ((v0.c0)+(v0.c0)), ((v0.c0) NOTNULL)))>((((v0.c1)>=(v0.c2)), CAST(v0.c1 AS INTEGER), (v0.c1 IN ())))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE CAST(v0.c2 AS REAL)  WHEN ((((v0.c2)AND(v0.c2)))AND(v0.c1)) THEN (v0.c0 IN ()) WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c0)) THEN ((v0.c1)>>(v0.c0)) WHEN (v0.c0 IN (v0.c2, v0.c1)) THEN x'' END) ORDER BY ((((((v0.c2))>=((v0.c2))), ((v0.c0)+(v0.c0)), ((v0.c0) NOTNULL)))>((((v0.c1)>=(v0.c2)), CAST(v0.c1 AS INTEGER), (v0.c1 IN ())))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)-(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)-(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)-(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)-(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)-(v0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) NOTNULL))LIKE((~ (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL))LIKE((~ (v0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) NOTNULL))LIKE((~ (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL))LIKE((~ (v0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) NOTNULL))LIKE((~ (v0.c1)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c0))>=((vt0.c0))))) AND (('-895420227'))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((((vt0.c0))>=((vt0.c0))))) AND (('-895420227')))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c0))>=((vt0.c0))))) AND (('-895420227'))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((((vt0.c0))>=((vt0.c0))))) AND (('-895420227')))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c0))>=((vt0.c0))))) AND (('-895420227'))));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM v0 WHERE (MIN(CAST(v0.c2 AS INTEGER), v0.c0, v0.c0, ((v0.c1) BETWEEN (v0.c2) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((MIN(CAST(v0.c2 AS INTEGER), v0.c0, v0.c0, ((v0.c1) BETWEEN (v0.c2) AND (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (MIN(CAST(v0.c2 AS INTEGER), v0.c0, v0.c0, ((v0.c1) BETWEEN (v0.c2) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((MIN(CAST(v0.c2 AS INTEGER), v0.c0, v0.c0, ((v0.c1) BETWEEN (v0.c2) AND (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (MIN(CAST(v0.c2 AS INTEGER), v0.c0, v0.c0, ((v0.c1) BETWEEN (v0.c2) AND (v0.c0))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c1)+(v0.c1))) NOTNULL)) ORDER BY ((((v0.c2)AND(vt0.c0)))OR(v0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)+(v0.c1))) NOTNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c2)AND(vt0.c0)))OR(v0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c1)+(v0.c1))) NOTNULL)) ORDER BY ((((v0.c2)AND(vt0.c0)))OR(v0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)+(v0.c1))) NOTNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c2)AND(vt0.c0)))OR(v0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c1)+(v0.c1))) NOTNULL)) ORDER BY ((((v0.c2)AND(vt0.c0)))OR(v0.c0)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt0 WHERE (0.886946553995756 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0.886946553995756 COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.886946553995756 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0.886946553995756 COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.886946553995756 COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(x'')))AND(((vt0.c0)>=(vt0.c0)))))AND((NOT ('-1867897000')))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c0)))OR(x'')))AND(((vt0.c0)>=(vt0.c0)))))AND((NOT ('-1867897000'))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(x'')))AND(((vt0.c0)>=(vt0.c0)))))AND((NOT ('-1867897000')))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c0)))OR(x'')))AND(((vt0.c0)>=(vt0.c0)))))AND((NOT ('-1867897000'))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(x'')))AND(((vt0.c0)>=(vt0.c0)))))AND((NOT ('-1867897000')))));
SELECT ALL * FROM v0, vt0 WHERE (CAST(CAST(v0.c1 AS NUMERIC) AS TEXT)) ORDER BY (((v0.c0 IN (v0.c0, v0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c1 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0 IN (v0.c0, v0.c0))) IS FALSE));
SELECT ALL * FROM v0, vt0 WHERE (CAST(CAST(v0.c1 AS NUMERIC) AS TEXT)) ORDER BY (((v0.c0 IN (v0.c0, v0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c1 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0 IN (v0.c0, v0.c0))) IS FALSE));
SELECT ALL * FROM v0, vt0 WHERE (CAST(CAST(v0.c1 AS NUMERIC) AS TEXT)) ORDER BY (((v0.c0 IN (v0.c0, v0.c0))) IS FALSE);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c2);
SELECT * FROM v0 WHERE ((0.3732413757392168 COLLATE RTRIM IN ())) ORDER BY (((x'2461')) NOT BETWEEN ((v0.c0)) AND ((x''))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((0.3732413757392168 COLLATE RTRIM IN ())) IS TRUE)  as count FROM v0 ORDER BY (((x'2461')) NOT BETWEEN ((v0.c0)) AND ((x''))) COLLATE RTRIM);
SELECT * FROM v0 WHERE ((0.3732413757392168 COLLATE RTRIM IN ())) ORDER BY (((x'2461')) NOT BETWEEN ((v0.c0)) AND ((x''))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((0.3732413757392168 COLLATE RTRIM IN ())) IS TRUE)  as count FROM v0 ORDER BY (((x'2461')) NOT BETWEEN ((v0.c0)) AND ((x''))) COLLATE RTRIM);
SELECT * FROM v0 WHERE ((0.3732413757392168 COLLATE RTRIM IN ())) ORDER BY (((x'2461')) NOT BETWEEN ((v0.c0)) AND ((x''))) COLLATE RTRIM;
SELECT * FROM v0 WHERE ((((((v0.c2) NOT BETWEEN (v0.c0) AND ('zF|+Z^g<p'))))>((v0.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((((v0.c2) NOT BETWEEN (v0.c0) AND ('zF|+Z^g<p'))))>((v0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c2) NOT BETWEEN (v0.c0) AND ('zF|+Z^g<p'))))>((v0.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((((v0.c2) NOT BETWEEN (v0.c0) AND ('zF|+Z^g<p'))))>((v0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c2) NOT BETWEEN (v0.c0) AND ('zF|+Z^g<p'))))>((v0.c1 COLLATE NOCASE))));
SELECT * FROM v0 WHERE ((((((((x'')) BETWEEN ((v0.c1)) AND ((v0.c2))))AND(NULL)))AND(v0.c2)));
SELECT SUM(count) FROM (SELECT (((((((((x'')) BETWEEN ((v0.c1)) AND ((v0.c2))))AND(NULL)))AND(v0.c2))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((((x'')) BETWEEN ((v0.c1)) AND ((v0.c2))))AND(NULL)))AND(v0.c2)));
SELECT SUM(count) FROM (SELECT (((((((((x'')) BETWEEN ((v0.c1)) AND ((v0.c2))))AND(NULL)))AND(v0.c2))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((((x'')) BETWEEN ((v0.c1)) AND ((v0.c2))))AND(NULL)))AND(v0.c2)));
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)) BETWEEN ((LENGTH(v0.c1))) AND ((((((vt0.c0)AND(v0.c2)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((LENGTH(v0.c1))) AND ((((((vt0.c0)AND(v0.c2)))AND(v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)) BETWEEN ((LENGTH(v0.c1))) AND ((((((vt0.c0)AND(v0.c2)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((LENGTH(v0.c1))) AND ((((((vt0.c0)AND(v0.c2)))AND(v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)) BETWEEN ((LENGTH(v0.c1))) AND ((((((vt0.c0)AND(v0.c2)))AND(v0.c0))))));
SELECT ALL * FROM vt0, v0 WHERE (((((((((LIKELY(DISTINCT v0.c1))OR(((v0.c0) IS FALSE))))OR((((v0.c1))<>((vt0.c0))))))OR((~ (v0.c2)))))AND(x''))) ORDER BY ((TRIM('a<', v0.c0)) NOT NULL) DESC, ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN '1940797559' ELSE v0.c1 END) NOT NULL)  NULLS LAST, (((((v0.c0 IN ()))OR(vt0.c0)))OR(((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((LIKELY(DISTINCT v0.c1))OR(((v0.c0) IS FALSE))))OR((((v0.c1))<>((vt0.c0))))))OR((~ (v0.c2)))))AND(x''))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((TRIM('a<', v0.c0)) NOT NULL) DESC, ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN '1940797559' ELSE v0.c1 END) NOT NULL)  NULLS LAST, (((((v0.c0 IN ()))OR(vt0.c0)))OR(((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (((((((((LIKELY(DISTINCT v0.c1))OR(((v0.c0) IS FALSE))))OR((((v0.c1))<>((vt0.c0))))))OR((~ (v0.c2)))))AND(x''))) ORDER BY ((TRIM('a<', v0.c0)) NOT NULL) DESC, ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN '1940797559' ELSE v0.c1 END) NOT NULL)  NULLS LAST, (((((v0.c0 IN ()))OR(vt0.c0)))OR(((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((LIKELY(DISTINCT v0.c1))OR(((v0.c0) IS FALSE))))OR((((v0.c1))<>((vt0.c0))))))OR((~ (v0.c2)))))AND(x''))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((TRIM('a<', v0.c0)) NOT NULL) DESC, ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN '1940797559' ELSE v0.c1 END) NOT NULL)  NULLS LAST, (((((v0.c0 IN ()))OR(vt0.c0)))OR(((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (((((((((LIKELY(DISTINCT v0.c1))OR(((v0.c0) IS FALSE))))OR((((v0.c1))<>((vt0.c0))))))OR((~ (v0.c2)))))AND(x''))) ORDER BY ((TRIM('a<', v0.c0)) NOT NULL) DESC, ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN '1940797559' ELSE v0.c1 END) NOT NULL)  NULLS LAST, (((((v0.c0 IN ()))OR(vt0.c0)))OR(((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c2)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE ((((+ (v0.c0)))GLOB((NOT (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0)))GLOB((NOT (v0.c2))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((+ (v0.c0)))GLOB((NOT (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0)))GLOB((NOT (v0.c2))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((+ (v0.c0)))GLOB((NOT (v0.c2)))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((((v0.c1) ISNULL))/(((((v0.c2)OR(vt0.c0)))AND(v0.c0)))) WHERE ((('1I\nlEdd') IS TRUE));
SELECT SUM(count) FROM (SELECT (((('1I\nlEdd') IS TRUE)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((v0.c1) ISNULL))/(((((v0.c2)OR(vt0.c0)))AND(v0.c0)))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((((v0.c1) ISNULL))/(((((v0.c2)OR(vt0.c0)))AND(v0.c0)))) WHERE ((('1I\nlEdd') IS TRUE));
SELECT SUM(count) FROM (SELECT (((('1I\nlEdd') IS TRUE)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((v0.c1) ISNULL))/(((((v0.c2)OR(vt0.c0)))AND(v0.c0)))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((((v0.c1) ISNULL))/(((((v0.c2)OR(vt0.c0)))AND(v0.c0)))) WHERE ((('1I\nlEdd') IS TRUE));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (x'') AND (v0.c0))) NOT BETWEEN (((((((((((((v0.c1)AND(v0.c2)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(v0.c1)))AND(v0.c1))) AND (((vt0.c0)IS('-1667029153'))))) ORDER BY (~ ('685472035'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (x'') AND (v0.c0))) NOT BETWEEN (((((((((((((v0.c1)AND(v0.c2)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(v0.c1)))AND(v0.c1))) AND (((vt0.c0)IS('-1667029153'))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ ('685472035'))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (x'') AND (v0.c0))) NOT BETWEEN (((((((((((((v0.c1)AND(v0.c2)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(v0.c1)))AND(v0.c1))) AND (((vt0.c0)IS('-1667029153'))))) ORDER BY (~ ('685472035'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (x'') AND (v0.c0))) NOT BETWEEN (((((((((((((v0.c1)AND(v0.c2)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(v0.c1)))AND(v0.c1))) AND (((vt0.c0)IS('-1667029153'))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ ('685472035'))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (x'') AND (v0.c0))) NOT BETWEEN (((((((((((((v0.c1)AND(v0.c2)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(v0.c1)))AND(v0.c1))) AND (((vt0.c0)IS('-1667029153'))))) ORDER BY (~ ('685472035'))  NULLS FIRST;
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON (((0.41519623638030423))==((CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END))) WHERE ((((v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((((v0.c1)OR(v0.c2)))AND(v0.c1)))))) ORDER BY 0Xffffffffd64b9e02  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((((v0.c1)OR(v0.c2)))AND(v0.c1)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((0.41519623638030423))==((CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY 0xffffffffd64b9e02  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON (((0.41519623638030423))==((CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END))) WHERE ((((v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((((v0.c1)OR(v0.c2)))AND(v0.c1)))))) ORDER BY 0Xffffffffd64b9e02  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((((v0.c1)OR(v0.c2)))AND(v0.c1)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((0.41519623638030423))==((CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY 0xffffffffd64b9e02  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON (((0.41519623638030423))==((CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END))) WHERE ((((v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((((v0.c1)OR(v0.c2)))AND(v0.c1)))))) ORDER BY 0Xffffffffd64b9e02  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ('IN6a') ORDER BY ((((((((((((((((CAST(v0.c0 AS BLOB))OR(CAST(0.6925838494415179 AS INTEGER))))OR(((v0.c1) ISNULL))))AND((- (v0.c0)))))AND(CAST(v0.c1 AS REAL))))OR(NULL)))AND(((v0.c1) IS TRUE))))OR(LIKELY(v0.c2))))OR(v0.c0 COLLATE RTRIM)) DESC, v0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('IN6a') IS TRUE)  as count FROM v0 ORDER BY ((((((((((((((((CAST(v0.c0 AS BLOB))OR(CAST(0.6925838494415179 AS INTEGER))))OR(((v0.c1) ISNULL))))AND((- (v0.c0)))))AND(CAST(v0.c1 AS REAL))))OR(NULL)))AND(((v0.c1) IS TRUE))))OR(LIKELY(v0.c2))))OR(v0.c0 COLLATE RTRIM)) DESC, v0.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ('IN6a') ORDER BY ((((((((((((((((CAST(v0.c0 AS BLOB))OR(CAST(0.6925838494415179 AS INTEGER))))OR(((v0.c1) ISNULL))))AND((- (v0.c0)))))AND(CAST(v0.c1 AS REAL))))OR(NULL)))AND(((v0.c1) IS TRUE))))OR(LIKELY(v0.c2))))OR(v0.c0 COLLATE RTRIM)) DESC, v0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('IN6a') IS TRUE)  as count FROM v0 ORDER BY ((((((((((((((((CAST(v0.c0 AS BLOB))OR(CAST(0.6925838494415179 AS INTEGER))))OR(((v0.c1) ISNULL))))AND((- (v0.c0)))))AND(CAST(v0.c1 AS REAL))))OR(NULL)))AND(((v0.c1) IS TRUE))))OR(LIKELY(v0.c2))))OR(v0.c0 COLLATE RTRIM)) DESC, v0.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ('IN6a') ORDER BY ((((((((((((((((CAST(v0.c0 AS BLOB))OR(CAST(0.6925838494415179 AS INTEGER))))OR(((v0.c1) ISNULL))))AND((- (v0.c0)))))AND(CAST(v0.c1 AS REAL))))OR(NULL)))AND(((v0.c1) IS TRUE))))OR(LIKELY(v0.c2))))OR(v0.c0 COLLATE RTRIM)) DESC, v0.c2 DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)LIKE(v0.c0)))AND(CASE v0.c1  WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c1 WHEN 0Xffffffffba151b4b THEN v0.c0 END)))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)LIKE(v0.c0)))AND(CASE v0.c1  WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c1 WHEN 0Xffffffffba151b4b THEN v0.c0 END)))OR(NULL))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)LIKE(v0.c0)))AND(CASE v0.c1  WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c1 WHEN 0Xffffffffba151b4b THEN v0.c0 END)))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)LIKE(v0.c0)))AND(CASE v0.c1  WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c1 WHEN 0Xffffffffba151b4b THEN v0.c0 END)))OR(NULL))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)LIKE(v0.c0)))AND(CASE v0.c1  WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c1 WHEN 0Xffffffffba151b4b THEN v0.c0 END)))OR(NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)) ORDER BY (~ (CAST(vt0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (~ (CAST(vt0.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)) ORDER BY (~ (CAST(vt0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (~ (CAST(vt0.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)) ORDER BY (~ (CAST(vt0.c0 AS TEXT)))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((-6.8510747E7)AND(v0.c1)))OR(v0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((-6.8510747E7)AND(v0.c1)))OR(v0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((-6.8510747E7)AND(v0.c1)))OR(v0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((-6.8510747E7)AND(v0.c1)))OR(v0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((-6.8510747E7)AND(v0.c1)))OR(v0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0) BETWEEN (v0.c1) AND (v0.c1)) IN ())) ORDER BY CAST((vt0.c0 IN ()) AS INTEGER) ASC, ((CASE v0.c1  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END)+(CAST(v0.c0 AS INTEGER))) DESC, ABS(CAST(v0.c2 AS NUMERIC)) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0) BETWEEN (v0.c1) AND (v0.c1)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((vt0.c0 IN ()) AS INTEGER) ASC, ((CASE v0.c1  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END)+(CAST(v0.c0 AS INTEGER))) DESC, ABS(CAST(v0.c2 AS NUMERIC)) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0) BETWEEN (v0.c1) AND (v0.c1)) IN ())) ORDER BY CAST((vt0.c0 IN ()) AS INTEGER) ASC, ((CASE v0.c1  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END)+(CAST(v0.c0 AS INTEGER))) DESC, ABS(CAST(v0.c2 AS NUMERIC)) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0) BETWEEN (v0.c1) AND (v0.c1)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((vt0.c0 IN ()) AS INTEGER) ASC, ((CASE v0.c1  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END)+(CAST(v0.c0 AS INTEGER))) DESC, ABS(CAST(v0.c2 AS NUMERIC)) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0) BETWEEN (v0.c1) AND (v0.c1)) IN ())) ORDER BY CAST((vt0.c0 IN ()) AS INTEGER) ASC, ((CASE v0.c1  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END)+(CAST(v0.c0 AS INTEGER))) DESC, ABS(CAST(v0.c2 AS NUMERIC)) ASC;
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c2);
SELECT * FROM vt0, v0 WHERE (HEX(((((x'')OR(v0.c1)))OR(vt0.c0)))) ORDER BY CASE NULL  WHEN ((v0.c1) NOT NULL) THEN ((NULL)>(v0.c0)) WHEN CAST(v0.c0 AS NUMERIC) THEN (NOT (v0.c0)) WHEN CAST(v0.c1 AS BLOB) THEN ((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c1)))OR(v0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(((((x'')OR(v0.c1)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE NULL  WHEN ((v0.c1) NOT NULL) THEN ((NULL)>(v0.c0)) WHEN CAST(v0.c0 AS NUMERIC) THEN (NOT (v0.c0)) WHEN CAST(v0.c1 AS BLOB) THEN ((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c1)))OR(v0.c1)) END DESC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (HEX(((((x'')OR(v0.c1)))OR(vt0.c0)))) ORDER BY CASE NULL  WHEN ((v0.c1) NOT NULL) THEN ((NULL)>(v0.c0)) WHEN CAST(v0.c0 AS NUMERIC) THEN (NOT (v0.c0)) WHEN CAST(v0.c1 AS BLOB) THEN ((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c1)))OR(v0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(((((x'')OR(v0.c1)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE NULL  WHEN ((v0.c1) NOT NULL) THEN ((NULL)>(v0.c0)) WHEN CAST(v0.c0 AS NUMERIC) THEN (NOT (v0.c0)) WHEN CAST(v0.c1 AS BLOB) THEN ((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c1)))OR(v0.c1)) END DESC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (HEX(((((x'')OR(v0.c1)))OR(vt0.c0)))) ORDER BY CASE NULL  WHEN ((v0.c1) NOT NULL) THEN ((NULL)>(v0.c0)) WHEN CAST(v0.c0 AS NUMERIC) THEN (NOT (v0.c0)) WHEN CAST(v0.c1 AS BLOB) THEN ((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c1)))OR(v0.c1)) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (LTRIM(vt0.c0)))) ORDER BY (+ ((((('0.47961370423007')OR(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT (((+ (LTRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((((('0.47961370423007')OR(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (LTRIM(vt0.c0)))) ORDER BY (+ ((((('0.47961370423007')OR(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT (((+ (LTRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((((('0.47961370423007')OR(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (LTRIM(vt0.c0)))) ORDER BY (+ ((((('0.47961370423007')OR(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, vt0.c0;
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (TRIM(DISTINCT ((v0.c1)>=(vt0.c0)), v0.c0));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((v0.c1)>=(vt0.c0)), v0.c0)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (TRIM(DISTINCT ((v0.c1)>=(vt0.c0)), v0.c0));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((v0.c1)>=(vt0.c0)), v0.c0)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (TRIM(DISTINCT ((v0.c1)>=(vt0.c0)), v0.c0));
SELECT * FROM v0 INNER JOIN vt0 ON 1.579568689E9 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON 1.579568689E9);
SELECT * FROM v0 INNER JOIN vt0 ON 1.579568689E9 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON 1.579568689E9);
SELECT * FROM v0 INNER JOIN vt0 ON 1.579568689E9 WHERE (v0.c0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT NULL));
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0 IN ()))IS NOT(NULLIF(v0.c0, v0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))IS NOT(NULLIF(v0.c0, v0.c2)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0 IN ()))IS NOT(NULLIF(v0.c0, v0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))IS NOT(NULLIF(v0.c0, v0.c2)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0 IN ()))IS NOT(NULLIF(v0.c0, v0.c2))));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0))>(((((vt0.c0))>((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))>(((((vt0.c0))>((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0))>(((((vt0.c0))>((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))>(((((vt0.c0))>((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0))>(((((vt0.c0))>((vt0.c0)))))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))<=((vt0.c0))) COLLATE BINARY) ORDER BY ((((((((((((NULL)OR(vt0.c0)))OR(vt0.c0)))AND('I')))OR(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(vt0.c0 COLLATE NOCASE)), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND ((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<=((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((NULL)OR(vt0.c0)))OR(vt0.c0)))AND('I')))OR(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(vt0.c0 COLLATE NOCASE)), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND ((vt0.c0 IN ()))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))<=((vt0.c0))) COLLATE BINARY) ORDER BY ((((((((((((NULL)OR(vt0.c0)))OR(vt0.c0)))AND('I')))OR(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(vt0.c0 COLLATE NOCASE)), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND ((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<=((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((NULL)OR(vt0.c0)))OR(vt0.c0)))AND('I')))OR(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(vt0.c0 COLLATE NOCASE)), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND ((vt0.c0 IN ()))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))<=((vt0.c0))) COLLATE BINARY) ORDER BY ((((((((((((NULL)OR(vt0.c0)))OR(vt0.c0)))AND('I')))OR(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(vt0.c0 COLLATE NOCASE)), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND ((vt0.c0 IN ()))) DESC;
SELECT ALL * FROM vt0 INNER JOIN v0 ON (((((((((- (v0.c2)))OR((v0.c2 IN ()))))OR(((v0.c1)IS(v0.c0)))))AND(((v0.c2)AND(v0.c2)))))AND(((0.012134360206591643)AND(x'b978')))) WHERE ('t䄓QRu镯1jf');
SELECT SUM(count) FROM (SELECT (('t䄓QRu镯1jf') IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((((((((- (v0.c2)))OR((v0.c2 IN ()))))OR(((v0.c1)IS(v0.c0)))))AND(((v0.c2)AND(v0.c2)))))AND(((0.012134360206591643)AND(x'b978')))));
SELECT ALL * FROM vt0 INNER JOIN v0 ON (((((((((- (v0.c2)))OR((v0.c2 IN ()))))OR(((v0.c1)IS(v0.c0)))))AND(((v0.c2)AND(v0.c2)))))AND(((0.012134360206591643)AND(x'b978')))) WHERE ('t䄓QRu镯1jf');
SELECT SUM(count) FROM (SELECT (('t䄓QRu镯1jf') IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((((((((- (v0.c2)))OR((v0.c2 IN ()))))OR(((v0.c1)IS(v0.c0)))))AND(((v0.c2)AND(v0.c2)))))AND(((0.012134360206591643)AND(x'b978')))));
SELECT ALL * FROM vt0 INNER JOIN v0 ON (((((((((- (v0.c2)))OR((v0.c2 IN ()))))OR(((v0.c1)IS(v0.c0)))))AND(((v0.c2)AND(v0.c2)))))AND(((0.012134360206591643)AND(x'b978')))) WHERE ('t䄓QRu镯1jf');
SELECT ALL * FROM v0, vt0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (v0.c1);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY CASE ((vt0.c0)OR(vt0.c0))  WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE NULL END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)OR(vt0.c0))  WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE NULL END DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY CASE ((vt0.c0)OR(vt0.c0))  WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE NULL END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)OR(vt0.c0))  WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE NULL END DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY CASE ((vt0.c0)OR(vt0.c0))  WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE NULL END DESC  NULLS LAST;
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))IS NOT(CASE v0.c2  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END))) ORDER BY (CAST(v0.c0 AS REAL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))IS NOT(CASE v0.c2  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END))) IS TRUE)  as count FROM v0 ORDER BY (CAST(v0.c0 AS REAL) IN ()) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))IS NOT(CASE v0.c2  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END))) ORDER BY (CAST(v0.c0 AS REAL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))IS NOT(CASE v0.c2  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END))) IS TRUE)  as count FROM v0 ORDER BY (CAST(v0.c0 AS REAL) IN ()) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))IS NOT(CASE v0.c2  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END))) ORDER BY (CAST(v0.c0 AS REAL) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((((v0.c0) IS FALSE))AND(v0.c0)))AND(((x'') NOT NULL))))OR(CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END)))OR((((v0.c2, v0.c0, vt0.c0))<(('1800157927', v0.c0, v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0) IS FALSE))AND(v0.c0)))AND(((x'') NOT NULL))))OR(CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END)))OR((((v0.c2, v0.c0, vt0.c0))<(('1800157927', v0.c0, v0.c1)))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((((v0.c0) IS FALSE))AND(v0.c0)))AND(((x'') NOT NULL))))OR(CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END)))OR((((v0.c2, v0.c0, vt0.c0))<(('1800157927', v0.c0, v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0) IS FALSE))AND(v0.c0)))AND(((x'') NOT NULL))))OR(CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END)))OR((((v0.c2, v0.c0, vt0.c0))<(('1800157927', v0.c0, v0.c1)))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((((v0.c0) IS FALSE))AND(v0.c0)))AND(((x'') NOT NULL))))OR(CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END)))OR((((v0.c2, v0.c0, vt0.c0))<(('1800157927', v0.c0, v0.c1))))));
SELECT * FROM vt0, v0 WHERE (UNLIKELY(v0.c0) COLLATE RTRIM) ORDER BY (~ (CAST(NULL AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (CAST(NULL AS BLOB)))  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (UNLIKELY(v0.c0) COLLATE RTRIM) ORDER BY (~ (CAST(NULL AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (CAST(NULL AS BLOB)))  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (UNLIKELY(v0.c0) COLLATE RTRIM) ORDER BY (~ (CAST(NULL AS BLOB)))  NULLS LAST;
SELECT * FROM v0 WHERE (((v0.c1 COLLATE NOCASE) NOT BETWEEN (v0.c1) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE NOCASE) NOT BETWEEN (v0.c1) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c1 COLLATE NOCASE) NOT BETWEEN (v0.c1) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE NOCASE) NOT BETWEEN (v0.c1) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c1 COLLATE NOCASE) NOT BETWEEN (v0.c1) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)));
SELECT ALL * FROM vt0, v0 WHERE ((((0Xfffffffff3913d6c IN ('98581404')))|(((v0.c1)LIKE(vt0.c0))))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((0xfffffffff3913d6c IN ('98581404')))|(((v0.c1)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((((0Xfffffffff3913d6c IN ('98581404')))|(((v0.c1)LIKE(vt0.c0))))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((0xfffffffff3913d6c IN ('98581404')))|(((v0.c1)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((((0Xfffffffff3913d6c IN ('98581404')))|(((v0.c1)LIKE(vt0.c0))))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) IN ()) WHERE (((IFNULL(DISTINCT v0.c1, vt0.c0)) IS TRUE)) ORDER BY (~ (((v0.c1)<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT v0.c1, vt0.c0)) IS TRUE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) IN ()) ORDER BY (~ (((v0.c1)<(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) IN ()) WHERE (((IFNULL(DISTINCT v0.c1, vt0.c0)) IS TRUE)) ORDER BY (~ (((v0.c1)<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT v0.c1, vt0.c0)) IS TRUE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) IN ()) ORDER BY (~ (((v0.c1)<(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) IN ()) WHERE (((IFNULL(DISTINCT v0.c1, vt0.c0)) IS TRUE)) ORDER BY (~ (((v0.c1)<(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c1)<('*KP#d')));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1)<('*KP#d'))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c1)<('*KP#d')));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1)<('*KP#d'))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c1)<('*KP#d')));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN (vt0.c0, ((vt0.c0)AND(vt0.c0))))) ORDER BY CAST(vt0.c0 AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN (vt0.c0, ((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN (vt0.c0, ((vt0.c0)AND(vt0.c0))))) ORDER BY CAST(vt0.c0 AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN (vt0.c0, ((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN (vt0.c0, ((vt0.c0)AND(vt0.c0))))) ORDER BY CAST(vt0.c0 AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)>>(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)>>(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)>>(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)>>(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)>>(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))));
SELECT ALL * FROM v0, vt0 WHERE ('0.0');
SELECT SUM(count) FROM (SELECT ALL (('0.0') IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ('0.0');
SELECT SUM(count) FROM (SELECT ALL (('0.0') IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ('0.0');
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((vt0.c0 IN ())))) ORDER BY '㚶rp5' ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY '㚶rp5' ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((vt0.c0 IN ())))) ORDER BY '㚶rp5' ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY '㚶rp5' ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((vt0.c0 IN ())))) ORDER BY '㚶rp5' ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((CAST(v0.c2 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((CAST(v0.c2 AS TEXT))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((CAST(v0.c2 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((CAST(v0.c2 AS TEXT))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((CAST(v0.c2 AS TEXT)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c2)>=(v0.c0)))%(((vt0.c0)|(vt0.c0))))) ORDER BY (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))AND((~ (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)>=(v0.c0)))%(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))AND((~ (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c2)>=(v0.c0)))%(((vt0.c0)|(vt0.c0))))) ORDER BY (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))AND((~ (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)>=(v0.c0)))%(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))AND((~ (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c2)>=(v0.c0)))%(((vt0.c0)|(vt0.c0))))) ORDER BY (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))AND((~ (vt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((((((((v0.c2) NOTNULL))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)))OR(CASE WHEN v0.c1 THEN v0.c2 END)))OR(v0.c2)))OR(CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c2) NOTNULL))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)))OR(CASE WHEN v0.c1 THEN v0.c2 END)))OR(v0.c2)))OR(CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c2) NOTNULL))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)))OR(CASE WHEN v0.c1 THEN v0.c2 END)))OR(v0.c2)))OR(CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c2) NOTNULL))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)))OR(CASE WHEN v0.c1 THEN v0.c2 END)))OR(v0.c2)))OR(CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c2) NOTNULL))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)))OR(CASE WHEN v0.c1 THEN v0.c2 END)))OR(v0.c2)))OR(CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END)));
SELECT ALL * FROM v0, vt0 WHERE ((~ (((v0.c1) BETWEEN (vt0.c0) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c1) BETWEEN (vt0.c0) AND (v0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((~ (((v0.c1) BETWEEN (vt0.c0) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c1) BETWEEN (vt0.c0) AND (v0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((~ (((v0.c1) BETWEEN (vt0.c0) AND (v0.c1)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((8.99626356E8)AND(vt0.c0)))OR(v0.c1)))AND(((vt0.c0)GLOB(v0.c2)))))AND(((v0.c1)/(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((8.99626356E8)AND(vt0.c0)))OR(v0.c1)))AND(((vt0.c0)GLOB(v0.c2)))))AND(((v0.c1)/(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((8.99626356E8)AND(vt0.c0)))OR(v0.c1)))AND(((vt0.c0)GLOB(v0.c2)))))AND(((v0.c1)/(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((8.99626356E8)AND(vt0.c0)))OR(v0.c1)))AND(((vt0.c0)GLOB(v0.c2)))))AND(((v0.c1)/(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((8.99626356E8)AND(vt0.c0)))OR(v0.c1)))AND(((vt0.c0)GLOB(v0.c2)))))AND(((v0.c1)/(v0.c0)))));
SELECT * FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN -369875612 THEN 'n*V\nE[Y' WHEN CAST(vt0.c0 AS INTEGER) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)&(vt0.c0)) ELSE json_type(vt0.c0) END) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (vt0.c0))  WHEN -369875612 THEN 'n*V\nE[Y' WHEN CAST(vt0.c0 AS INTEGER) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)&(vt0.c0)) ELSE json_type(vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC)  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN -369875612 THEN 'n*V\nE[Y' WHEN CAST(vt0.c0 AS INTEGER) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)&(vt0.c0)) ELSE json_type(vt0.c0) END) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (vt0.c0))  WHEN -369875612 THEN 'n*V\nE[Y' WHEN CAST(vt0.c0 AS INTEGER) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)&(vt0.c0)) ELSE json_type(vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC)  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN -369875612 THEN 'n*V\nE[Y' WHEN CAST(vt0.c0 AS INTEGER) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)&(vt0.c0)) ELSE json_type(vt0.c0) END) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC)  NULLS LAST;
SELECT * FROM v0 WHERE ((((((v0.c1))=((v0.c0)))) IS TRUE)) ORDER BY ((CAST(v0.c2 AS NUMERIC))+(CASE v0.c0  WHEN v0.c2 THEN v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1))==((v0.c0)))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c2 AS NUMERIC))+(CASE v0.c0  WHEN v0.c2 THEN v0.c0 END))  NULLS LAST);
SELECT * FROM v0 WHERE ((((((v0.c1))=((v0.c0)))) IS TRUE)) ORDER BY ((CAST(v0.c2 AS NUMERIC))+(CASE v0.c0  WHEN v0.c2 THEN v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1))==((v0.c0)))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c2 AS NUMERIC))+(CASE v0.c0  WHEN v0.c2 THEN v0.c0 END))  NULLS LAST);
SELECT * FROM v0 WHERE ((((((v0.c1))=((v0.c0)))) IS TRUE)) ORDER BY ((CAST(v0.c2 AS NUMERIC))+(CASE v0.c0  WHEN v0.c2 THEN v0.c0 END))  NULLS LAST;
SELECT * FROM vt0, v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (v0.c1);
SELECT ALL * FROM v0 WHERE (COALESCE(CAST(v0.c1 AS BLOB), CAST('\nBBgh' AS NUMERIC))) ORDER BY (((- (v0.c1)))+((((0.5230696474091012, v0.c2, v0.c0))<>((-1416002926, v0.c1, v0.c2))))) ASC, (~ (LIKELIHOOD(DISTINCT v0.c0, 0.01647048906323323))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(v0.c1 AS BLOB), CAST('\nBBgh' AS NUMERIC))) IS TRUE)  as count FROM v0 ORDER BY (((- (v0.c1)))+((((0.5230696474091012, v0.c2, v0.c0))!=((-1416002926, v0.c1, v0.c2))))) ASC, (~ (LIKELIHOOD(DISTINCT v0.c0, 0.01647048906323323))) DESC);
SELECT ALL * FROM v0 WHERE (COALESCE(CAST(v0.c1 AS BLOB), CAST('\nBBgh' AS NUMERIC))) ORDER BY (((- (v0.c1)))+((((0.5230696474091012, v0.c2, v0.c0))<>((-1416002926, v0.c1, v0.c2))))) ASC, (~ (LIKELIHOOD(DISTINCT v0.c0, 0.01647048906323323))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(v0.c1 AS BLOB), CAST('\nBBgh' AS NUMERIC))) IS TRUE)  as count FROM v0 ORDER BY (((- (v0.c1)))+((((0.5230696474091012, v0.c2, v0.c0))!=((-1416002926, v0.c1, v0.c2))))) ASC, (~ (LIKELIHOOD(DISTINCT v0.c0, 0.01647048906323323))) DESC);
SELECT ALL * FROM v0 WHERE (COALESCE(CAST(v0.c1 AS BLOB), CAST('\nBBgh' AS NUMERIC))) ORDER BY (((- (v0.c1)))+((((0.5230696474091012, v0.c2, v0.c0))<>((-1416002926, v0.c1, v0.c2))))) ASC, (~ (LIKELIHOOD(DISTINCT v0.c0, 0.01647048906323323))) DESC;
SELECT * FROM v0 WHERE ((NOT ((v0.c2 IN (v0.c2, '')))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((v0.c2 IN (v0.c2, ''))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT ((v0.c2 IN (v0.c2, '')))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((v0.c2 IN (v0.c2, ''))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT ((v0.c2 IN (v0.c2, '')))));
SELECT * FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND (((- (v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND (((- (v0.c1)))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND (((- (v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND (((- (v0.c1)))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND (((- (v0.c1))))));
SELECT * FROM v0 NATURAL JOIN vt0 WHERE ((v0.c2 IN ()) COLLATE BINARY) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY v0.c0);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE ((v0.c2 IN ()) COLLATE BINARY) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY v0.c0);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE ((v0.c2 IN ()) COLLATE BINARY) ORDER BY v0.c0;
SELECT ALL * FROM v0, vt0 WHERE ((((+ (0.06381202758848215)))AND((((v0.c1, v0.c1, v0.c1, vt0.c0, v0.c1)) BETWEEN ((v0.c0, vt0.c0, vt0.c0, x'', v0.c2)) AND ((v0.c0, vt0.c0, vt0.c0, v0.c1, v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((+ (0.06381202758848215)))AND((((v0.c1, v0.c1, v0.c1, vt0.c0, v0.c1)) BETWEEN ((v0.c0, vt0.c0, vt0.c0, x'', v0.c2)) AND ((v0.c0, vt0.c0, vt0.c0, v0.c1, v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((+ (0.06381202758848215)))AND((((v0.c1, v0.c1, v0.c1, vt0.c0, v0.c1)) BETWEEN ((v0.c0, vt0.c0, vt0.c0, x'', v0.c2)) AND ((v0.c0, vt0.c0, vt0.c0, v0.c1, v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((+ (0.06381202758848215)))AND((((v0.c1, v0.c1, v0.c1, vt0.c0, v0.c1)) BETWEEN ((v0.c0, vt0.c0, vt0.c0, x'', v0.c2)) AND ((v0.c0, vt0.c0, vt0.c0, v0.c1, v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((+ (0.06381202758848215)))AND((((v0.c1, v0.c1, v0.c1, vt0.c0, v0.c1)) BETWEEN ((v0.c0, vt0.c0, vt0.c0, x'', v0.c2)) AND ((v0.c0, vt0.c0, vt0.c0, v0.c1, v0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (load_extension(vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(vt0.c0)))AND(NULL))));
SELECT SUM(count) FROM (SELECT ((load_extension(vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(vt0.c0)))AND(NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (load_extension(vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(vt0.c0)))AND(NULL))));
SELECT SUM(count) FROM (SELECT ((load_extension(vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(vt0.c0)))AND(NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM v0 WHERE (SQLITE_VERSION() COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION() COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (SQLITE_VERSION() COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION() COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (SQLITE_VERSION() COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE ('1415569182');
SELECT SUM(count) FROM (SELECT ALL (('1415569182') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('1415569182');
SELECT SUM(count) FROM (SELECT ALL (('1415569182') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('1415569182');
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST(((vt0.c0)&(vt0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)&(vt0.c0)) AS INTEGER) DESC);
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST(((vt0.c0)&(vt0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)&(vt0.c0)) AS INTEGER) DESC);
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST(((vt0.c0)&(vt0.c0)) AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY (((v0.c1)) BETWEEN ((json_type(v0.c1))) AND ((((v0.c0)IS NOT(v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c1)) BETWEEN ((json_type(v0.c1))) AND ((((v0.c0)IS NOT(v0.c0))))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY (((v0.c1)) BETWEEN ((json_type(v0.c1))) AND ((((v0.c0)IS NOT(v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c1)) BETWEEN ((json_type(v0.c1))) AND ((((v0.c0)IS NOT(v0.c0))))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY (((v0.c1)) BETWEEN ((json_type(v0.c1))) AND ((((v0.c0)IS NOT(v0.c0))))) DESC;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c1)OR(v0.c1)))<=(COALESCE(v0.c1, vt0.c0))) WHERE (CASE WHEN ((((vt0.c0)AND(v0.c1)))AND(v0.c2)) THEN ((v0.c1) NOT BETWEEN (v0.c2) AND (vt0.c0)) ELSE 0Xffffffffbb552ec2 END) ORDER BY UPPER(TOTAL_CHANGES()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)AND(v0.c1)))AND(v0.c2)) THEN ((v0.c1) NOT BETWEEN (v0.c2) AND (vt0.c0)) ELSE 0Xffffffffbb552ec2 END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c1)OR(v0.c1)))<=(COALESCE(v0.c1, vt0.c0))) ORDER BY UPPER(TOTAL_CHANGES()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c1)OR(v0.c1)))<=(COALESCE(v0.c1, vt0.c0))) WHERE (CASE WHEN ((((vt0.c0)AND(v0.c1)))AND(v0.c2)) THEN ((v0.c1) NOT BETWEEN (v0.c2) AND (vt0.c0)) ELSE 0Xffffffffbb552ec2 END) ORDER BY UPPER(TOTAL_CHANGES()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)AND(v0.c1)))AND(v0.c2)) THEN ((v0.c1) NOT BETWEEN (v0.c2) AND (vt0.c0)) ELSE 0Xffffffffbb552ec2 END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c1)OR(v0.c1)))<=(COALESCE(v0.c1, vt0.c0))) ORDER BY UPPER(TOTAL_CHANGES()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c1)OR(v0.c1)))<=(COALESCE(v0.c1, vt0.c0))) WHERE (CASE WHEN ((((vt0.c0)AND(v0.c1)))AND(v0.c2)) THEN ((v0.c1) NOT BETWEEN (v0.c2) AND (vt0.c0)) ELSE 0Xffffffffbb552ec2 END) ORDER BY UPPER(TOTAL_CHANGES()) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((((((CAST(vt0.c0 AS REAL))AND(((vt0.c0)GLOB(vt0.c0)))))AND(vt0.c0)))OR(CAST(vt0.c0 AS NUMERIC))))AND(((0.48785130027234236)<<(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CAST(vt0.c0 AS REAL))AND(((vt0.c0)GLOB(vt0.c0)))))AND(vt0.c0)))OR(CAST(vt0.c0 AS NUMERIC))))AND(((0.48785130027234236)<<(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE ((~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((((((CAST(vt0.c0 AS REAL))AND(((vt0.c0)GLOB(vt0.c0)))))AND(vt0.c0)))OR(CAST(vt0.c0 AS NUMERIC))))AND(((0.48785130027234236)<<(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CAST(vt0.c0 AS REAL))AND(((vt0.c0)GLOB(vt0.c0)))))AND(vt0.c0)))OR(CAST(vt0.c0 AS NUMERIC))))AND(((0.48785130027234236)<<(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE ((~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((((((CAST(vt0.c0 AS REAL))AND(((vt0.c0)GLOB(vt0.c0)))))AND(vt0.c0)))OR(CAST(vt0.c0 AS NUMERIC))))AND(((0.48785130027234236)<<(vt0.c0)))) DESC;
SELECT ALL * FROM v0 WHERE (CASE (+ (v0.c0))  WHEN ((v0.c1) NOT NULL) THEN v0.c0 COLLATE RTRIM WHEN CAST(v0.c2 AS NUMERIC) THEN v0.c0 WHEN NULL THEN v0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (v0.c0))  WHEN ((v0.c1) NOT NULL) THEN v0.c0 COLLATE RTRIM WHEN CAST(v0.c2 AS NUMERIC) THEN v0.c0 WHEN NULL THEN v0.c2 END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE (+ (v0.c0))  WHEN ((v0.c1) NOT NULL) THEN v0.c0 COLLATE RTRIM WHEN CAST(v0.c2 AS NUMERIC) THEN v0.c0 WHEN NULL THEN v0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (v0.c0))  WHEN ((v0.c1) NOT NULL) THEN v0.c0 COLLATE RTRIM WHEN CAST(v0.c2 AS NUMERIC) THEN v0.c0 WHEN NULL THEN v0.c2 END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE (+ (v0.c0))  WHEN ((v0.c1) NOT NULL) THEN v0.c0 COLLATE RTRIM WHEN CAST(v0.c2 AS NUMERIC) THEN v0.c0 WHEN NULL THEN v0.c2 END);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<(vt0.c0)))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (vt0.c0 COLLATE NOCASE IN (CAST(vt0.c0 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(vt0.c0)))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE NOCASE IN (CAST(vt0.c0 AS REAL))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<(vt0.c0)))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (vt0.c0 COLLATE NOCASE IN (CAST(vt0.c0 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(vt0.c0)))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE NOCASE IN (CAST(vt0.c0 AS REAL))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<(vt0.c0)))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (vt0.c0 COLLATE NOCASE IN (CAST(vt0.c0 AS REAL))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) ORDER BY ((vt0.c0) IS FALSE), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC, ((vt0.c0) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS FALSE), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC, ((vt0.c0) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) ORDER BY ((vt0.c0) IS FALSE), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC, ((vt0.c0) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS FALSE), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC, ((vt0.c0) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) ORDER BY ((vt0.c0) IS FALSE), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC, ((vt0.c0) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON (NOT ('191-378-103 1195 1789:-974264836686639-735-NE1qx%\')) WHERE (((((v0.c2) IS TRUE))*(CASE WHEN v0.c0 THEN vt0.c0 END))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) IS TRUE))*(CASE WHEN v0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (NOT ('191-378-103 1195 1789:-974264836686639-735-NE1qx%\')) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON (NOT ('191-378-103 1195 1789:-974264836686639-735-NE1qx%\')) WHERE (((((v0.c2) IS TRUE))*(CASE WHEN v0.c0 THEN vt0.c0 END))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) IS TRUE))*(CASE WHEN v0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (NOT ('191-378-103 1195 1789:-974264836686639-735-NE1qx%\')) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON (NOT ('191-378-103 1195 1789:-974264836686639-735-NE1qx%\')) WHERE (((((v0.c2) IS TRUE))*(CASE WHEN v0.c0 THEN vt0.c0 END))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS REAL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((vt0.c0)GLOB((((('0.3942580043153948')AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)GLOB((((('0.3942580043153948')AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((vt0.c0)GLOB((((('0.3942580043153948')AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)GLOB((((('0.3942580043153948')AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((vt0.c0)GLOB((((('0.3942580043153948')AND(v0.c0)))OR(v0.c0)))));
SELECT ALL * FROM vt0, v0 NOT INDEXED WHERE ((((v0.c1)) NOT BETWEEN ((SQLITE_VERSION())) AND ((((v0.c2)>(v0.c1)))))) ORDER BY LIKELY(((v0.c2)IS NOT(v0.c1)))  NULLS LAST, CASE WHEN ((vt0.c0)%(v0.c1)) THEN ((v0.c2)<=(v0.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN ((SQLITE_VERSION())) AND ((((v0.c2)>(v0.c1)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY LIKELY(((v0.c2)IS NOT(v0.c1)))  NULLS LAST, CASE WHEN ((vt0.c0)%(v0.c1)) THEN ((v0.c2)<=(v0.c2)) END DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 NOT INDEXED WHERE ((((v0.c1)) NOT BETWEEN ((SQLITE_VERSION())) AND ((((v0.c2)>(v0.c1)))))) ORDER BY LIKELY(((v0.c2)IS NOT(v0.c1)))  NULLS LAST, CASE WHEN ((vt0.c0)%(v0.c1)) THEN ((v0.c2)<=(v0.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN ((SQLITE_VERSION())) AND ((((v0.c2)>(v0.c1)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY LIKELY(((v0.c2)IS NOT(v0.c1)))  NULLS LAST, CASE WHEN ((vt0.c0)%(v0.c1)) THEN ((v0.c2)<=(v0.c2)) END DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 NOT INDEXED WHERE ((((v0.c1)) NOT BETWEEN ((SQLITE_VERSION())) AND ((((v0.c2)>(v0.c1)))))) ORDER BY LIKELY(((v0.c2)IS NOT(v0.c1)))  NULLS LAST, CASE WHEN ((vt0.c0)%(v0.c1)) THEN ((v0.c2)<=(v0.c2)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE ('-86563693') ORDER BY (((v0.c0, v0.c2, v0.c2)) BETWEEN ((((v0.c0) IS FALSE), (~ (vt0.c0)), vt0.c0)) AND (((vt0.c0 IN ()), vt0.c0 COLLATE RTRIM, v0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-86563693') IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0, v0.c2, v0.c2)) BETWEEN ((((v0.c0) IS FALSE), (~ (vt0.c0)), vt0.c0)) AND (((vt0.c0 IN ()), vt0.c0 COLLATE RTRIM, v0.c2))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ('-86563693') ORDER BY (((v0.c0, v0.c2, v0.c2)) BETWEEN ((((v0.c0) IS FALSE), (~ (vt0.c0)), vt0.c0)) AND (((vt0.c0 IN ()), vt0.c0 COLLATE RTRIM, v0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-86563693') IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0, v0.c2, v0.c2)) BETWEEN ((((v0.c0) IS FALSE), (~ (vt0.c0)), vt0.c0)) AND (((vt0.c0 IN ()), vt0.c0 COLLATE RTRIM, v0.c2))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ('-86563693') ORDER BY (((v0.c0, v0.c2, v0.c2)) BETWEEN ((((v0.c0) IS FALSE), (~ (vt0.c0)), vt0.c0)) AND (((vt0.c0 IN ()), vt0.c0 COLLATE RTRIM, v0.c2))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((vt0.c0)OR(v0.c2)))AND(vt0.c0)))OR(((v0.c0) ISNULL))))AND(((vt0.c0)!=(vt0.c0))))) ORDER BY ((((v0.c0) BETWEEN (v0.c2) AND (v0.c1))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(v0.c2)))AND(vt0.c0)))OR(((v0.c0) ISNULL))))AND(((vt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) BETWEEN (v0.c2) AND (v0.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((vt0.c0)OR(v0.c2)))AND(vt0.c0)))OR(((v0.c0) ISNULL))))AND(((vt0.c0)!=(vt0.c0))))) ORDER BY ((((v0.c0) BETWEEN (v0.c2) AND (v0.c1))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(v0.c2)))AND(vt0.c0)))OR(((v0.c0) ISNULL))))AND(((vt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) BETWEEN (v0.c2) AND (v0.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((vt0.c0)OR(v0.c2)))AND(vt0.c0)))OR(((v0.c0) ISNULL))))AND(((vt0.c0)!=(vt0.c0))))) ORDER BY ((((v0.c0) BETWEEN (v0.c2) AND (v0.c1))) IS TRUE);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c2) ORDER BY ((((((v0.c2)%(-487072746)))AND(CAST(v0.c2 AS BLOB))))OR(CAST(v0.c1 AS NUMERIC))) DESC  NULLS LAST, 0.37169441015732896 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c2)%(-487072746)))AND(CAST(v0.c2 AS BLOB))))OR(CAST(v0.c1 AS NUMERIC))) DESC  NULLS LAST, 0.37169441015732896 ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c2) ORDER BY ((((((v0.c2)%(-487072746)))AND(CAST(v0.c2 AS BLOB))))OR(CAST(v0.c1 AS NUMERIC))) DESC  NULLS LAST, 0.37169441015732896 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c2)%(-487072746)))AND(CAST(v0.c2 AS BLOB))))OR(CAST(v0.c1 AS NUMERIC))) DESC  NULLS LAST, 0.37169441015732896 ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c2) ORDER BY ((((((v0.c2)%(-487072746)))AND(CAST(v0.c2 AS BLOB))))OR(CAST(v0.c1 AS NUMERIC))) DESC  NULLS LAST, 0.37169441015732896 ASC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE ((('(/⮵_')<=(CAST(0.2908988385638336 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((('(/⮵_')<=(CAST(0.2908988385638336 AS TEXT)))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED);
SELECT ALL * FROM v0, vt0 WHERE ((('(/⮵_')<=(CAST(0.2908988385638336 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((('(/⮵_')<=(CAST(0.2908988385638336 AS TEXT)))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED);
SELECT ALL * FROM v0, vt0 WHERE ((('(/⮵_')<=(CAST(0.2908988385638336 AS TEXT))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER)) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER)) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER)) ORDER BY vt0.c0 ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (x''))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (x''))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (x''))  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL));
SELECT ALL * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS TEXT)))) ORDER BY CASE (vt0.c0 IN ())  WHEN (((vt0.c0))<((vt0.c0))) THEN IFNULL(vt0.c0, vt0.c0) ELSE (NOT (vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY CASE (vt0.c0 IN ())  WHEN (((vt0.c0))<((vt0.c0))) THEN IFNULL(vt0.c0, vt0.c0) ELSE (NOT (vt0.c0)) END ASC);
SELECT ALL * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS TEXT)))) ORDER BY CASE (vt0.c0 IN ())  WHEN (((vt0.c0))<((vt0.c0))) THEN IFNULL(vt0.c0, vt0.c0) ELSE (NOT (vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY CASE (vt0.c0 IN ())  WHEN (((vt0.c0))<((vt0.c0))) THEN IFNULL(vt0.c0, vt0.c0) ELSE (NOT (vt0.c0)) END ASC);
SELECT ALL * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS TEXT)))) ORDER BY CASE (vt0.c0 IN ())  WHEN (((vt0.c0))<((vt0.c0))) THEN IFNULL(vt0.c0, vt0.c0) ELSE (NOT (vt0.c0)) END ASC;
SELECT COUNT(*) FROM v0, vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((NULL IN ()));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((- ((((v0.c1, vt0.c0, v0.c0))<((v0.c1, v0.c0, v0.c1)))))) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (CASE WHEN v0.c1 THEN v0.c2 ELSE 621734494 END) AND (((1.136627433E9)>(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((((v0.c1, vt0.c0, v0.c0))<((v0.c1, v0.c0, v0.c1)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (CASE WHEN v0.c1 THEN v0.c2 ELSE 621734494 END) AND (((1.136627433E9)>(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((- ((((v0.c1, vt0.c0, v0.c0))<((v0.c1, v0.c0, v0.c1)))))) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (CASE WHEN v0.c1 THEN v0.c2 ELSE 621734494 END) AND (((1.136627433E9)>(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((((v0.c1, vt0.c0, v0.c0))<((v0.c1, v0.c0, v0.c1)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (CASE WHEN v0.c1 THEN v0.c2 ELSE 621734494 END) AND (((1.136627433E9)>(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((- ((((v0.c1, vt0.c0, v0.c0))<((v0.c1, v0.c0, v0.c1)))))) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (CASE WHEN v0.c1 THEN v0.c2 ELSE 621734494 END) AND (((1.136627433E9)>(vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE (json_extract(((v0.c1)OR(v0.c2)), HEX(v0.c2), (((v0.c1))>=((vt0.c0))), (- (v0.c2)))) ORDER BY (((NOT (v0.c0)))<((vt0.c0 IN (v0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((json_extract(((v0.c1)OR(v0.c2)), HEX(v0.c2), (((v0.c1))>=((vt0.c0))), (- (v0.c2)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((NOT (v0.c0)))<((vt0.c0 IN (v0.c2)))) DESC);
SELECT ALL * FROM vt0, v0 WHERE (json_extract(((v0.c1)OR(v0.c2)), HEX(v0.c2), (((v0.c1))>=((vt0.c0))), (- (v0.c2)))) ORDER BY (((NOT (v0.c0)))<((vt0.c0 IN (v0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((json_extract(((v0.c1)OR(v0.c2)), HEX(v0.c2), (((v0.c1))>=((vt0.c0))), (- (v0.c2)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((NOT (v0.c0)))<((vt0.c0 IN (v0.c2)))) DESC);
SELECT ALL * FROM vt0, v0 WHERE (json_extract(((v0.c1)OR(v0.c2)), HEX(v0.c2), (((v0.c1))>=((vt0.c0))), (- (v0.c2)))) ORDER BY (((NOT (v0.c0)))<((vt0.c0 IN (v0.c2)))) DESC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((0.36783424004686205 IN ()));
SELECT SUM(count) FROM (SELECT (((0.36783424004686205 IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((0.36783424004686205 IN ()));
SELECT SUM(count) FROM (SELECT (((0.36783424004686205 IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((0.36783424004686205 IN ()));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)IS(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (~ ((- (vt0.c0)))) DESC  NULLS FIRST, ((((((vt0.c0)&(vt0.c0)))OR(NULL)))OR('2047490865'));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)IS(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((- (vt0.c0)))) DESC  NULLS FIRST, ((((((vt0.c0)&(vt0.c0)))OR(NULL)))OR('2047490865')));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)IS(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (~ ((- (vt0.c0)))) DESC  NULLS FIRST, ((((((vt0.c0)&(vt0.c0)))OR(NULL)))OR('2047490865'));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)IS(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((- (vt0.c0)))) DESC  NULLS FIRST, ((((((vt0.c0)&(vt0.c0)))OR(NULL)))OR('2047490865')));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)IS(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (~ ((- (vt0.c0)))) DESC  NULLS FIRST, ((((((vt0.c0)&(vt0.c0)))OR(NULL)))OR('2047490865'));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0))))!=((LAST_INSERT_ROWID())))) ORDER BY (((+ (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)%(vt0.c0))))<>((LAST_INSERT_ROWID())))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0))))!=((LAST_INSERT_ROWID())))) ORDER BY (((+ (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)%(vt0.c0))))<>((LAST_INSERT_ROWID())))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0))))!=((LAST_INSERT_ROWID())))) ORDER BY (((+ (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY ((((((((((v0.c1)AND(v0.c2)))AND(v0.c0)))AND(v0.c0)))AND(v0.c2)))&(LOWER(v0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c1)AND(v0.c2)))AND(v0.c0)))AND(v0.c0)))AND(v0.c2)))&(LOWER(v0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY ((((((((((v0.c1)AND(v0.c2)))AND(v0.c0)))AND(v0.c0)))AND(v0.c2)))&(LOWER(v0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c1)AND(v0.c2)))AND(v0.c0)))AND(v0.c0)))AND(v0.c2)))&(LOWER(v0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY ((((((((((v0.c1)AND(v0.c2)))AND(v0.c0)))AND(v0.c0)))AND(v0.c2)))&(LOWER(v0.c1)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (('vDGh') NOT NULL) WHERE (((((((((v0.c2)OR((vt0.c0 IN ()))))OR(v0.c2 COLLATE BINARY)))AND(CASE vt0.c0  WHEN v0.c2 THEN 0.9635302730426436 WHEN vt0.c0 THEN '\>lB|' WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)))OR((v0.c2 IN ())))) ORDER BY v0.c1  NULLS FIRST, CAST((((v0.c1, x'', v0.c0))<=((v0.c1, vt0.c0, v0.c2))) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((v0.c2)OR((vt0.c0 IN ()))))OR(v0.c2 COLLATE BINARY)))AND(CASE vt0.c0  WHEN v0.c2 THEN 0.9635302730426436 WHEN vt0.c0 THEN '\>lB|' WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)))OR((v0.c2 IN ())))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (('vDGh') NOT NULL) ORDER BY v0.c1  NULLS FIRST, CAST((((v0.c1, x'', v0.c0))<=((v0.c1, vt0.c0, v0.c2))) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (('vDGh') NOT NULL) WHERE (((((((((v0.c2)OR((vt0.c0 IN ()))))OR(v0.c2 COLLATE BINARY)))AND(CASE vt0.c0  WHEN v0.c2 THEN 0.9635302730426436 WHEN vt0.c0 THEN '\>lB|' WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)))OR((v0.c2 IN ())))) ORDER BY v0.c1  NULLS FIRST, CAST((((v0.c1, x'', v0.c0))<=((v0.c1, vt0.c0, v0.c2))) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((v0.c2)OR((vt0.c0 IN ()))))OR(v0.c2 COLLATE BINARY)))AND(CASE vt0.c0  WHEN v0.c2 THEN 0.9635302730426436 WHEN vt0.c0 THEN '\>lB|' WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)))OR((v0.c2 IN ())))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (('vDGh') NOT NULL) ORDER BY v0.c1  NULLS FIRST, CAST((((v0.c1, x'', v0.c0))<=((v0.c1, vt0.c0, v0.c2))) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (('vDGh') NOT NULL) WHERE (((((((((v0.c2)OR((vt0.c0 IN ()))))OR(v0.c2 COLLATE BINARY)))AND(CASE vt0.c0  WHEN v0.c2 THEN 0.9635302730426436 WHEN vt0.c0 THEN '\>lB|' WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)))OR((v0.c2 IN ())))) ORDER BY v0.c1  NULLS FIRST, CAST((((v0.c1, x'', v0.c0))<=((v0.c1, vt0.c0, v0.c2))) AS BLOB)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1);
SELECT COUNT(*) FROM vt0 WHERE ((~ (vt0.c0)) COLLATE NOCASE COLLATE RTRIM) ORDER BY ((TRIM(vt0.c0))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(vt0.c0))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((~ (vt0.c0)) COLLATE NOCASE COLLATE RTRIM) ORDER BY ((TRIM(vt0.c0))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(vt0.c0))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((~ (vt0.c0)) COLLATE NOCASE COLLATE RTRIM) ORDER BY ((TRIM(vt0.c0))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE (((CAST(v0.c0 AS NUMERIC))&(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))&(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((CAST(v0.c0 AS NUMERIC))&(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))&(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((CAST(v0.c0 AS NUMERIC))&(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (CAST('-1460772780' AS INTEGER)) AND (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) BETWEEN (CAST('-1460772780' AS INTEGER)) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (CAST('-1460772780' AS INTEGER)) AND (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) BETWEEN (CAST('-1460772780' AS INTEGER)) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (CAST('-1460772780' AS INTEGER)) AND (((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((v0.c2)OR('qG]p	'))) ORDER BY ((CAST(v0.c1 AS TEXT)) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((v0.c2)OR('qG]p	'))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(v0.c1 AS TEXT)) NOT NULL));
SELECT COUNT(*) FROM vt0, v0 WHERE (((v0.c2)OR('qG]p	'))) ORDER BY ((CAST(v0.c1 AS TEXT)) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((v0.c2)OR('qG]p	'))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(v0.c1 AS TEXT)) NOT NULL));
SELECT COUNT(*) FROM vt0, v0 WHERE (((v0.c2)OR('qG]p	'))) ORDER BY ((CAST(v0.c1 AS TEXT)) NOT NULL);
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c1))>((v0.c2)))))<((((v0.c2) BETWEEN (vt0.c0) AND (v0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1))>((v0.c2)))))<((((v0.c2) BETWEEN (vt0.c0) AND (v0.c2)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c1))>((v0.c2)))))<((((v0.c2) BETWEEN (vt0.c0) AND (v0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1))>((v0.c2)))))<((((v0.c2) BETWEEN (vt0.c0) AND (v0.c2)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c1))>((v0.c2)))))<((((v0.c2) BETWEEN (vt0.c0) AND (v0.c2))))));
SELECT * FROM v0 WHERE (LIKELIHOOD(DISTINCT 0x79cb664f, 0.01186200963854711)) ORDER BY (((v0.c2, v0.c2, v0.c2)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END, ((v0.c2) NOT NULL), ((v0.c0)AND(v0.c0)))) AND ((((v0.c0)=(v0.c0)), (x'd31f' IN (v0.c2)), (v0.c1 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT 0X79cb664f, 0.01186200963854711)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2, v0.c2, v0.c2)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END, ((v0.c2) NOT NULL), ((v0.c0)AND(v0.c0)))) AND ((((v0.c0)==(v0.c0)), (x'd31f' IN (v0.c2)), (v0.c1 IN ())))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (LIKELIHOOD(DISTINCT 0x79cb664f, 0.01186200963854711)) ORDER BY (((v0.c2, v0.c2, v0.c2)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END, ((v0.c2) NOT NULL), ((v0.c0)AND(v0.c0)))) AND ((((v0.c0)=(v0.c0)), (x'd31f' IN (v0.c2)), (v0.c1 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT 0X79cb664f, 0.01186200963854711)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2, v0.c2, v0.c2)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END, ((v0.c2) NOT NULL), ((v0.c0)AND(v0.c0)))) AND ((((v0.c0)==(v0.c0)), (x'd31f' IN (v0.c2)), (v0.c1 IN ())))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (LIKELIHOOD(DISTINCT 0x79cb664f, 0.01186200963854711)) ORDER BY (((v0.c2, v0.c2, v0.c2)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END, ((v0.c2) NOT NULL), ((v0.c0)AND(v0.c0)))) AND ((((v0.c0)=(v0.c0)), (x'd31f' IN (v0.c2)), (v0.c1 IN ())))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((v0.c2)OR(((v0.c2)&(v0.c1)))))AND((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((x''))))))AND(((((v0.c2)AND(v0.c0)))OR(v0.c1)))))OR(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c2)OR(((v0.c2)&(v0.c1)))))AND((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((x''))))))AND(((((v0.c2)AND(v0.c0)))OR(v0.c1)))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((v0.c2)OR(((v0.c2)&(v0.c1)))))AND((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((x''))))))AND(((((v0.c2)AND(v0.c0)))OR(v0.c1)))))OR(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c2)OR(((v0.c2)&(v0.c1)))))AND((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((x''))))))AND(((((v0.c2)AND(v0.c0)))OR(v0.c1)))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((v0.c2)OR(((v0.c2)&(v0.c1)))))AND((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((x''))))))AND(((((v0.c2)AND(v0.c0)))OR(v0.c1)))))OR(vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)<=(v0.c1))) NOT BETWEEN ((('') BETWEEN ('-2094120635') AND (v0.c2))) AND ((((v0.c2))>((v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)<=(v0.c1))) NOT BETWEEN ((('') BETWEEN ('-2094120635') AND (v0.c2))) AND ((((v0.c2))>((v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)<=(v0.c1))) NOT BETWEEN ((('') BETWEEN ('-2094120635') AND (v0.c2))) AND ((((v0.c2))>((v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)<=(v0.c1))) NOT BETWEEN ((('') BETWEEN ('-2094120635') AND (v0.c2))) AND ((((v0.c2))>((v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)<=(v0.c1))) NOT BETWEEN ((('') BETWEEN ('-2094120635') AND (v0.c2))) AND ((((v0.c2))>((v0.c2))))));
SELECT * FROM vt0 WHERE (TRIM(vt0.c0) COLLATE RTRIM) ORDER BY CAST((vt0.c0 IN ()) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS REAL)  NULLS FIRST);
SELECT * FROM vt0 WHERE (TRIM(vt0.c0) COLLATE RTRIM) ORDER BY CAST((vt0.c0 IN ()) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS REAL)  NULLS FIRST);
SELECT * FROM vt0 WHERE (TRIM(vt0.c0) COLLATE RTRIM) ORDER BY CAST((vt0.c0 IN ()) AS REAL)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((NOT ('2008945863'))) ORDER BY json_patch(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.3043093678289607) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ('2008945863'))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY json_patch(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.3043093678289607) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((NOT ('2008945863'))) ORDER BY json_patch(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.3043093678289607) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ('2008945863'))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY json_patch(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.3043093678289607) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((NOT ('2008945863'))) ORDER BY json_patch(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.3043093678289607) ASC  NULLS FIRST;
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON CAST((v0.c0 IN ()) AS INTEGER) WHERE (((v0.c2)AND(((v0.c2)==(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c2)AND(((v0.c2)=(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CAST((v0.c0 IN ()) AS INTEGER));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON CAST((v0.c0 IN ()) AS INTEGER) WHERE (((v0.c2)AND(((v0.c2)==(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c2)AND(((v0.c2)=(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CAST((v0.c0 IN ()) AS INTEGER));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON CAST((v0.c0 IN ()) AS INTEGER) WHERE (((v0.c2)AND(((v0.c2)==(vt0.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((((v0.c0)|(v0.c1))))=(((v0.c0 IN ())))) WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN (((v0.c1))>((v0.c2))) THEN v0.c1 ELSE (((v0.c0, v0.c1, vt0.c0))<>((v0.c1, v0.c2, ''))) END) ORDER BY LTRIM(((v0.c2) NOT BETWEEN (x'') AND (v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS BLOB)  WHEN (((v0.c1))>((v0.c2))) THEN v0.c1 ELSE (((v0.c0, v0.c1, vt0.c0))<>((v0.c1, v0.c2, ''))) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((((v0.c0)|(v0.c1))))=(((v0.c0 IN ())))) ORDER BY LTRIM(((v0.c2) NOT BETWEEN (x'') AND (v0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((((v0.c0)|(v0.c1))))=(((v0.c0 IN ())))) WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN (((v0.c1))>((v0.c2))) THEN v0.c1 ELSE (((v0.c0, v0.c1, vt0.c0))<>((v0.c1, v0.c2, ''))) END) ORDER BY LTRIM(((v0.c2) NOT BETWEEN (x'') AND (v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS BLOB)  WHEN (((v0.c1))>((v0.c2))) THEN v0.c1 ELSE (((v0.c0, v0.c1, vt0.c0))<>((v0.c1, v0.c2, ''))) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((((v0.c0)|(v0.c1))))=(((v0.c0 IN ())))) ORDER BY LTRIM(((v0.c2) NOT BETWEEN (x'') AND (v0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((((v0.c0)|(v0.c1))))=(((v0.c0 IN ())))) WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN (((v0.c1))>((v0.c2))) THEN v0.c1 ELSE (((v0.c0, v0.c1, vt0.c0))<>((v0.c1, v0.c2, ''))) END) ORDER BY LTRIM(((v0.c2) NOT BETWEEN (x'') AND (v0.c0)))  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((CASE WHEN v0.c0 THEN v0.c2 END))<((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1))))) WHERE (((((((v0.c1)+(vt0.c0)))AND(NULL)))OR(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c1)+(vt0.c0)))AND(NULL)))OR(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((CASE WHEN v0.c0 THEN v0.c2 END))<((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((CASE WHEN v0.c0 THEN v0.c2 END))<((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1))))) WHERE (((((((v0.c1)+(vt0.c0)))AND(NULL)))OR(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c1)+(vt0.c0)))AND(NULL)))OR(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((CASE WHEN v0.c0 THEN v0.c2 END))<((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((CASE WHEN v0.c0 THEN v0.c2 END))<((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1))))) WHERE (((((((v0.c1)+(vt0.c0)))AND(NULL)))OR(((v0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0 WHERE (0X42b77e38) ORDER BY (((~ (x'a605'))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((0X42b77e38) IS TRUE)  as count FROM vt0 ORDER BY (((~ (x'a605'))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (0X42b77e38) ORDER BY (((~ (x'a605'))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((0X42b77e38) IS TRUE)  as count FROM vt0 ORDER BY (((~ (x'a605'))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (0X42b77e38) ORDER BY (((~ (x'a605'))) IS FALSE);
SELECT * FROM v0 WHERE (((CASE v0.c1  WHEN v0.c2 THEN 'n훐i}' END)-((v0.c0 IN ())))) ORDER BY -1.069390257E9, ((v0.c0)%(v0.c0)) COLLATE RTRIM DESC, ((((HEX(DISTINCT v0.c1))OR(v0.c0)))OR(v0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c1  WHEN v0.c2 THEN 'n훐i}' END)-((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY -1.069390257E9, ((v0.c0)%(v0.c0)) COLLATE RTRIM DESC, ((((HEX(DISTINCT v0.c1))OR(v0.c0)))OR(v0.c2))  NULLS FIRST);
SELECT * FROM v0 WHERE (((CASE v0.c1  WHEN v0.c2 THEN 'n훐i}' END)-((v0.c0 IN ())))) ORDER BY -1.069390257E9, ((v0.c0)%(v0.c0)) COLLATE RTRIM DESC, ((((HEX(DISTINCT v0.c1))OR(v0.c0)))OR(v0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c1  WHEN v0.c2 THEN 'n훐i}' END)-((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY -1.069390257E9, ((v0.c0)%(v0.c0)) COLLATE RTRIM DESC, ((((HEX(DISTINCT v0.c1))OR(v0.c0)))OR(v0.c2))  NULLS FIRST);
SELECT * FROM v0 WHERE (((CASE v0.c1  WHEN v0.c2 THEN 'n훐i}' END)-((v0.c0 IN ())))) ORDER BY -1.069390257E9, ((v0.c0)%(v0.c0)) COLLATE RTRIM DESC, ((((HEX(DISTINCT v0.c1))OR(v0.c0)))OR(v0.c2))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0.6771999267339065)>=(vt0.c0)))>>(((vt0.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((0.6771999267339065)>=(vt0.c0)))>>(((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0.6771999267339065)>=(vt0.c0)))>>(((vt0.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((0.6771999267339065)>=(vt0.c0)))>>(((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0.6771999267339065)>=(vt0.c0)))>>(((vt0.c0)<<(vt0.c0)))));
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN ((((vt0.c0))=((vt0.c0)))) AND (1857078060)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN ((((vt0.c0))==((vt0.c0)))) AND (1857078060))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN ((((vt0.c0))=((vt0.c0)))) AND (1857078060)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN ((((vt0.c0))==((vt0.c0)))) AND (1857078060))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN ((((vt0.c0))=((vt0.c0)))) AND (1857078060)));
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT * FROM v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM) ORDER BY (((('1136627433')AND(LAST_INSERT_ROWID())))OR(x'00d3' COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (((('1136627433')AND(LAST_INSERT_ROWID())))OR(x'00d3' COLLATE BINARY)) ASC);
SELECT * FROM v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM) ORDER BY (((('1136627433')AND(LAST_INSERT_ROWID())))OR(x'00d3' COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (((('1136627433')AND(LAST_INSERT_ROWID())))OR(x'00d3' COLLATE BINARY)) ASC);
SELECT * FROM v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM) ORDER BY (((('1136627433')AND(LAST_INSERT_ROWID())))OR(x'00d3' COLLATE BINARY)) ASC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT * FROM vt0, v0 WHERE ((((((v0.c1)GLOB(v0.c2)), CAST(x'cced' AS NUMERIC), json_insert(v0.c2, vt0.c0, vt0.c0)))<=(((vt0.c0 IN (v0.c2)), ((((v0.c0)OR(vt0.c0)))OR(v0.c2)), ((((vt0.c0)OR(v0.c0)))OR(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1)GLOB(v0.c2)), CAST(x'cced' AS NUMERIC), json_insert(v0.c2, vt0.c0, vt0.c0)))<=(((vt0.c0 IN (v0.c2)), ((((v0.c0)OR(vt0.c0)))OR(v0.c2)), ((((vt0.c0)OR(v0.c0)))OR(v0.c2)))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((v0.c1)GLOB(v0.c2)), CAST(x'cced' AS NUMERIC), json_insert(v0.c2, vt0.c0, vt0.c0)))<=(((vt0.c0 IN (v0.c2)), ((((v0.c0)OR(vt0.c0)))OR(v0.c2)), ((((vt0.c0)OR(v0.c0)))OR(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1)GLOB(v0.c2)), CAST(x'cced' AS NUMERIC), json_insert(v0.c2, vt0.c0, vt0.c0)))<=(((vt0.c0 IN (v0.c2)), ((((v0.c0)OR(vt0.c0)))OR(v0.c2)), ((((vt0.c0)OR(v0.c0)))OR(v0.c2)))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((v0.c1)GLOB(v0.c2)), CAST(x'cced' AS NUMERIC), json_insert(v0.c2, vt0.c0, vt0.c0)))<=(((vt0.c0 IN (v0.c2)), ((((v0.c0)OR(vt0.c0)))OR(v0.c2)), ((((vt0.c0)OR(v0.c0)))OR(v0.c2))))));
SELECT ALL COUNT(*) FROM v0 WHERE (((load_extension(v0.c0)) NOT BETWEEN (((v0.c2)>=(v0.c0))) AND (CAST(v0.c2 AS BLOB)))) ORDER BY (+ (((v0.c2)>>(v0.c0))))  NULLS FIRST, '-968198409' COLLATE RTRIM DESC  NULLS FIRST, TRIM(DISTINCT v0.c1)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(v0.c0)) NOT BETWEEN (((v0.c2)>=(v0.c0))) AND (CAST(v0.c2 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c2)>>(v0.c0))))  NULLS FIRST, '-968198409' COLLATE RTRIM DESC  NULLS FIRST, TRIM(DISTINCT v0.c1)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((load_extension(v0.c0)) NOT BETWEEN (((v0.c2)>=(v0.c0))) AND (CAST(v0.c2 AS BLOB)))) ORDER BY (+ (((v0.c2)>>(v0.c0))))  NULLS FIRST, '-968198409' COLLATE RTRIM DESC  NULLS FIRST, TRIM(DISTINCT v0.c1)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(v0.c0)) NOT BETWEEN (((v0.c2)>=(v0.c0))) AND (CAST(v0.c2 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c2)>>(v0.c0))))  NULLS FIRST, '-968198409' COLLATE RTRIM DESC  NULLS FIRST, TRIM(DISTINCT v0.c1)  NULLS LAST);
SELECT * FROM vt0, v0 WHERE ((LOWER(v0.c0) IN ())) ORDER BY (((v0.c0)==(v0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((LOWER(v0.c0) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0)=(v0.c2)) IN ())  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE ((LOWER(v0.c0) IN ())) ORDER BY (((v0.c0)==(v0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((LOWER(v0.c0) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0)=(v0.c2)) IN ())  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE ((LOWER(v0.c0) IN ())) ORDER BY (((v0.c0)==(v0.c2)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c0 AS INTEGER))AND(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR((+ (vt0.c0)))))OR(((vt0.c0) IS FALSE)))) ORDER BY ((((((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0) NOTNULL))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(vt0.c0)))AND((((vt0.c0))==((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c0 AS INTEGER))AND(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR((+ (vt0.c0)))))OR(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0) NOTNULL))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(vt0.c0)))AND((((vt0.c0))=((vt0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c0 AS INTEGER))AND(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR((+ (vt0.c0)))))OR(((vt0.c0) IS FALSE)))) ORDER BY ((((((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0) NOTNULL))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(vt0.c0)))AND((((vt0.c0))==((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c0 AS INTEGER))AND(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR((+ (vt0.c0)))))OR(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0) NOTNULL))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(vt0.c0)))AND((((vt0.c0))=((vt0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c0 AS INTEGER))AND(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR((+ (vt0.c0)))))OR(((vt0.c0) IS FALSE)))) ORDER BY ((((((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0) NOTNULL))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(vt0.c0)))AND((((vt0.c0))==((vt0.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS INTEGER))))OR(((((((((v0.c1)AND(v0.c1)))OR(v0.c2)))AND(v0.c0)))AND(v0.c2))))) ORDER BY UNLIKELY(((vt0.c0)OR(v0.c0))) ASC, ((((((vt0.c0)AND(v0.c2)))OR(v0.c2)))<=(TRIM(DISTINCT v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS INTEGER))))OR(((((((((v0.c1)AND(v0.c1)))OR(v0.c2)))AND(v0.c0)))AND(v0.c2))))) IS TRUE)  as count FROM v0, vt0 ORDER BY UNLIKELY(((vt0.c0)OR(v0.c0))) ASC, ((((((vt0.c0)AND(v0.c2)))OR(v0.c2)))<=(TRIM(DISTINCT v0.c0))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS INTEGER))))OR(((((((((v0.c1)AND(v0.c1)))OR(v0.c2)))AND(v0.c0)))AND(v0.c2))))) ORDER BY UNLIKELY(((vt0.c0)OR(v0.c0))) ASC, ((((((vt0.c0)AND(v0.c2)))OR(v0.c2)))<=(TRIM(DISTINCT v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS INTEGER))))OR(((((((((v0.c1)AND(v0.c1)))OR(v0.c2)))AND(v0.c0)))AND(v0.c2))))) IS TRUE)  as count FROM v0, vt0 ORDER BY UNLIKELY(((vt0.c0)OR(v0.c0))) ASC, ((((((vt0.c0)AND(v0.c2)))OR(v0.c2)))<=(TRIM(DISTINCT v0.c0))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS INTEGER))))OR(((((((((v0.c1)AND(v0.c1)))OR(v0.c2)))AND(v0.c0)))AND(v0.c2))))) ORDER BY UNLIKELY(((vt0.c0)OR(v0.c0))) ASC, ((((((vt0.c0)AND(v0.c2)))OR(v0.c2)))<=(TRIM(DISTINCT v0.c0)));
SELECT COUNT(*) FROM v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c2);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)!=(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)!=(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)!=(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)!=(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)!=(vt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN '' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((x'') NOTNULL) THEN vt0.c0 END) ORDER BY ((((('')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0) NOT NULL)) AND ((NOT (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN '' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((x'') NOTNULL) THEN vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY ((((('')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0) NOT NULL)) AND ((NOT (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN '' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((x'') NOTNULL) THEN vt0.c0 END) ORDER BY ((((('')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0) NOT NULL)) AND ((NOT (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN '' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((x'') NOTNULL) THEN vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY ((((('')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0) NOT NULL)) AND ((NOT (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN '' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((x'') NOTNULL) THEN vt0.c0 END) ORDER BY ((((('')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0) NOT NULL)) AND ((NOT (vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (0.7243257754126863)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (0.7243257754126863)) AS INTEGER)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (0.7243257754126863)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (0.7243257754126863)) AS INTEGER)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (0.7243257754126863)) AS INTEGER));
SELECT * FROM v0, vt0 WHERE ((x'' IN (((vt0.c0)LIKE(v0.c1)), CHAR(vt0.c0)))) ORDER BY (LENGTH(vt0.c0) IN ()) DESC, ((v0.c0 COLLATE NOCASE)/(TRIM(DISTINCT v0.c1)))  NULLS FIRST, CAST(((vt0.c0)<(v0.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'' IN (((vt0.c0)LIKE(v0.c1)), CHAR(vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (LENGTH(vt0.c0) IN ()) DESC, ((v0.c0 COLLATE NOCASE)/(TRIM(DISTINCT v0.c1)))  NULLS FIRST, CAST(((vt0.c0)<(v0.c0)) AS REAL)  NULLS LAST);
SELECT * FROM v0, vt0 WHERE ((x'' IN (((vt0.c0)LIKE(v0.c1)), CHAR(vt0.c0)))) ORDER BY (LENGTH(vt0.c0) IN ()) DESC, ((v0.c0 COLLATE NOCASE)/(TRIM(DISTINCT v0.c1)))  NULLS FIRST, CAST(((vt0.c0)<(v0.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'' IN (((vt0.c0)LIKE(v0.c1)), CHAR(vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (LENGTH(vt0.c0) IN ()) DESC, ((v0.c0 COLLATE NOCASE)/(TRIM(DISTINCT v0.c1)))  NULLS FIRST, CAST(((vt0.c0)<(v0.c0)) AS REAL)  NULLS LAST);
SELECT * FROM v0, vt0 WHERE ((x'' IN (((vt0.c0)LIKE(v0.c1)), CHAR(vt0.c0)))) ORDER BY (LENGTH(vt0.c0) IN ()) DESC, ((v0.c0 COLLATE NOCASE)/(TRIM(DISTINCT v0.c1)))  NULLS FIRST, CAST(((vt0.c0)<(v0.c0)) AS REAL)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c2)) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c2)) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c2 THEN v0.c0 END)LIKE((((v0.c1))==(('-345333286'))))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c2 THEN v0.c0 END)LIKE((((v0.c1))=(('-345333286')))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c2 THEN v0.c0 END)LIKE((((v0.c1))==(('-345333286'))))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c2 THEN v0.c0 END)LIKE((((v0.c1))=(('-345333286')))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c2 THEN v0.c0 END)LIKE((((v0.c1))==(('-345333286'))))));
SELECT ALL * FROM vt0, v0 WHERE (((v0.c1)>=((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((v0.c1)>=((v0.c1 IN ())))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((v0.c1)>=((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((v0.c1)>=((v0.c1 IN ())))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((v0.c1)>=((v0.c1 IN ()))));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE (((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN ((v0.c0)&(v0.c2)) THEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) WHEN (v0.c2 IN (v0.c2)) THEN (((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c1))) WHEN ((v0.c1)>=(v0.c0)) THEN (+ (v0.c0)) WHEN v0.c2 COLLATE NOCASE THEN ((v0.c1) IS FALSE) WHEN ((v0.c0)>=(v0.c0)) THEN (v0.c1 IN ('449431594')) END);
SELECT SUM(count) FROM (SELECT ((CASE (((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN ((v0.c0)&(v0.c2)) THEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) WHEN (v0.c2 IN (v0.c2)) THEN (((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c1))) WHEN ((v0.c1)>=(v0.c0)) THEN (+ (v0.c0)) WHEN v0.c2 COLLATE NOCASE THEN ((v0.c1) IS FALSE) WHEN ((v0.c0)>=(v0.c0)) THEN (v0.c1 IN ('449431594')) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE (((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN ((v0.c0)&(v0.c2)) THEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) WHEN (v0.c2 IN (v0.c2)) THEN (((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c1))) WHEN ((v0.c1)>=(v0.c0)) THEN (+ (v0.c0)) WHEN v0.c2 COLLATE NOCASE THEN ((v0.c1) IS FALSE) WHEN ((v0.c0)>=(v0.c0)) THEN (v0.c1 IN ('449431594')) END);
SELECT SUM(count) FROM (SELECT ((CASE (((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN ((v0.c0)&(v0.c2)) THEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) WHEN (v0.c2 IN (v0.c2)) THEN (((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c1))) WHEN ((v0.c1)>=(v0.c0)) THEN (+ (v0.c0)) WHEN v0.c2 COLLATE NOCASE THEN ((v0.c1) IS FALSE) WHEN ((v0.c0)>=(v0.c0)) THEN (v0.c1 IN ('449431594')) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE (((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN ((v0.c0)&(v0.c2)) THEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) WHEN (v0.c2 IN (v0.c2)) THEN (((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c1))) WHEN ((v0.c1)>=(v0.c0)) THEN (+ (v0.c0)) WHEN v0.c2 COLLATE NOCASE THEN ((v0.c1) IS FALSE) WHEN ((v0.c0)>=(v0.c0)) THEN (v0.c1 IN ('449431594')) END);
SELECT ALL * FROM v0 WHERE ((json_valid(v0.c1) IN ()));
SELECT SUM(count) FROM (SELECT (((json_valid(v0.c1) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((json_valid(v0.c1) IN ()));
SELECT SUM(count) FROM (SELECT (((json_valid(v0.c1) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((json_valid(v0.c1) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0 COLLATE BINARY)+(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (((NOT (v0.c0)))>=(((v0.c2) BETWEEN (v0.c2) AND (v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY)+(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((NOT (v0.c0)))>=(((v0.c2) BETWEEN (v0.c2) AND (v0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0 COLLATE BINARY)+(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (((NOT (v0.c0)))>=(((v0.c2) BETWEEN (v0.c2) AND (v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY)+(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((NOT (v0.c0)))>=(((v0.c2) BETWEEN (v0.c2) AND (v0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0 COLLATE BINARY)+(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (((NOT (v0.c0)))>=(((v0.c2) BETWEEN (v0.c2) AND (v0.c2))))  NULLS LAST;
SELECT * FROM v0 WHERE (v0.c0) ORDER BY -1242190434  NULLS LAST, ((((+ (v0.c2))))==(((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))))));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY -1242190434  NULLS LAST, ((((+ (v0.c2))))==(((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c1)))))));
SELECT * FROM v0 WHERE (v0.c0) ORDER BY -1242190434  NULLS LAST, ((((+ (v0.c2))))==(((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))))));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY -1242190434  NULLS LAST, ((((+ (v0.c2))))==(((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c1)))))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((x'78866777')OR(v0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((x'78866777')OR(v0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((x'78866777')OR(v0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((x'78866777')OR(v0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((x'78866777')OR(v0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE ((((vt0.c0)<=(0Xffffffffd86dac5b)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<=(0xffffffffd86dac5b)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)<=(0Xffffffffd86dac5b)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<=(0xffffffffd86dac5b)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)<=(0Xffffffffd86dac5b)) IN ()));
SELECT * FROM vt0, v0 WHERE (((v0.c1) BETWEEN (v0.c2) AND (vt0.c0)) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c1) BETWEEN (v0.c2) AND (vt0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((v0.c1) BETWEEN (v0.c2) AND (vt0.c0)) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c1) BETWEEN (v0.c2) AND (vt0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((v0.c1) BETWEEN (v0.c2) AND (vt0.c0)) COLLATE NOCASE COLLATE NOCASE);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ()))>(CHAR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))>(CHAR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ()))>(CHAR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))>(CHAR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ()))>(CHAR(v0.c0))));
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)IS NOT((~ (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM)IS NOT((~ (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)IS NOT((~ (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM)IS NOT((~ (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)IS NOT((~ (v0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((((TRIM(DISTINCT v0.c0))AND(((v0.c0)*(v0.c2)))))AND(TRIM(DISTINCT v0.c1, ''))))AND(CAST(v0.c0 AS BLOB))))OR((v0.c0 IN ()))))AND(((v0.c2)-(v0.c0)))))AND(x'')));
SELECT SUM(count) FROM (SELECT ((((((((((((((TRIM(DISTINCT v0.c0))AND(((v0.c0)*(v0.c2)))))AND(TRIM(DISTINCT v0.c1, ''))))AND(CAST(v0.c0 AS BLOB))))OR((v0.c0 IN ()))))AND(((v0.c2)-(v0.c0)))))AND(x''))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((((TRIM(DISTINCT v0.c0))AND(((v0.c0)*(v0.c2)))))AND(TRIM(DISTINCT v0.c1, ''))))AND(CAST(v0.c0 AS BLOB))))OR((v0.c0 IN ()))))AND(((v0.c2)-(v0.c0)))))AND(x'')));
SELECT SUM(count) FROM (SELECT ((((((((((((((TRIM(DISTINCT v0.c0))AND(((v0.c0)*(v0.c2)))))AND(TRIM(DISTINCT v0.c1, ''))))AND(CAST(v0.c0 AS BLOB))))OR((v0.c0 IN ()))))AND(((v0.c2)-(v0.c0)))))AND(x''))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((((TRIM(DISTINCT v0.c0))AND(((v0.c0)*(v0.c2)))))AND(TRIM(DISTINCT v0.c1, ''))))AND(CAST(v0.c0 AS BLOB))))OR((v0.c0 IN ()))))AND(((v0.c2)-(v0.c0)))))AND(x'')));
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((vt0.c0)))) ORDER BY '%Un9ꙪzR'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY '%Un9ꙪzR'  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((vt0.c0)))) ORDER BY '%Un9ꙪzR'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY '%Un9ꙪzR'  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((vt0.c0)))) ORDER BY '%Un9ꙪzR'  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c2))) IN ())) ORDER BY (((((v0.c0)OR('cB')))AND(v0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c2))) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((v0.c0)OR('cB')))AND(v0.c1)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c2))) IN ())) ORDER BY (((((v0.c0)OR('cB')))AND(v0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c2))) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((v0.c0)OR('cB')))AND(v0.c1)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c2))) IN ())) ORDER BY (((((v0.c0)OR('cB')))AND(v0.c1)) IN ())  NULLS LAST;
SELECT * FROM v0 WHERE (CAST(6.85472035E8 AS TEXT)) ORDER BY (('-237476993') NOT BETWEEN (v0.c1) AND (v0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(6.85472035E8 AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY (('-237476993') NOT BETWEEN (v0.c1) AND (v0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM v0 WHERE (CAST(6.85472035E8 AS TEXT)) ORDER BY (('-237476993') NOT BETWEEN (v0.c1) AND (v0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(6.85472035E8 AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY (('-237476993') NOT BETWEEN (v0.c1) AND (v0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM v0 WHERE (CAST(6.85472035E8 AS TEXT)) ORDER BY (('-237476993') NOT BETWEEN (v0.c1) AND (v0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1914164944' ELSE vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1914164944' ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1914164944' ELSE vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1914164944' ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1914164944' ELSE vt0.c0 END IN ()));
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c2) ORDER BY CAST(v0.c2 AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(v0.c2 AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c2) ORDER BY CAST(v0.c2 AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(v0.c2 AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c2) ORDER BY CAST(v0.c2 AS TEXT) ASC  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE ((((((- (v0.c2)))AND(CAST(0xffffffffe901a6a0 AS NUMERIC))))OR(((v0.c1)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((- (v0.c2)))AND(CAST(0xffffffffe901a6a0 AS NUMERIC))))OR(((v0.c1)/(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((((- (v0.c2)))AND(CAST(0xffffffffe901a6a0 AS NUMERIC))))OR(((v0.c1)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((- (v0.c2)))AND(CAST(0xffffffffe901a6a0 AS NUMERIC))))OR(((v0.c1)/(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((((- (v0.c2)))AND(CAST(0xffffffffe901a6a0 AS NUMERIC))))OR(((v0.c1)/(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (CASE ((((vt0.c0)OR(vt0.c0)))OR(1.989621474E9))  WHEN ((9223372036854775807) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)<(vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) ORDER BY '', (+ (vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c0)OR(vt0.c0)))OR(1.989621474E9))  WHEN ((9223372036854775807) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)<(vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY '', (+ (vt0.c0)) COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((((vt0.c0)OR(vt0.c0)))OR(1.989621474E9))  WHEN ((9223372036854775807) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)<(vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) ORDER BY '', (+ (vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c0)OR(vt0.c0)))OR(1.989621474E9))  WHEN ((9223372036854775807) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)<(vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY '', (+ (vt0.c0)) COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((((vt0.c0)OR(vt0.c0)))OR(1.989621474E9))  WHEN ((9223372036854775807) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)<(vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) ORDER BY '', (+ (vt0.c0)) COLLATE BINARY ASC;
SELECT ALL * FROM vt0 WHERE (((highlight(vt0.c0, NULL, vt0.c0, vt0.c0))-(vt0.c0))) ORDER BY CAST(((vt0.c0)||(vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((highlight(vt0.c0, NULL, vt0.c0, vt0.c0))-(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)||(vt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((highlight(vt0.c0, NULL, vt0.c0, vt0.c0))-(vt0.c0))) ORDER BY CAST(((vt0.c0)||(vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((highlight(vt0.c0, NULL, vt0.c0, vt0.c0))-(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)||(vt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (CAST(v0.c2 AS REAL) IN ()) WHERE (v0.c0) ORDER BY CAST(v0.c2 AS NUMERIC) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (CAST(v0.c2 AS REAL) IN ()) ORDER BY CAST(v0.c2 AS NUMERIC) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (CAST(v0.c2 AS REAL) IN ()) WHERE (v0.c0) ORDER BY CAST(v0.c2 AS NUMERIC) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (CAST(v0.c2 AS REAL) IN ()) ORDER BY CAST(v0.c2 AS NUMERIC) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (CAST(v0.c2 AS REAL) IN ()) WHERE (v0.c0) ORDER BY CAST(v0.c2 AS NUMERIC) COLLATE RTRIM  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE WHEN (((vt0.c0))<((vt0.c0))) THEN x'' END) ORDER BY vt0.c0 DESC, CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE CAST(NULL AS REAL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0))<((vt0.c0))) THEN x'' END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC, CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE CAST(NULL AS REAL) END  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN (((vt0.c0))<((vt0.c0))) THEN x'' END) ORDER BY vt0.c0 DESC, CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE CAST(NULL AS REAL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0))<((vt0.c0))) THEN x'' END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC, CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE CAST(NULL AS REAL) END  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN (((vt0.c0))<((vt0.c0))) THEN x'' END) ORDER BY vt0.c0 DESC, CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE CAST(NULL AS REAL) END  NULLS FIRST;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))%((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))%((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))%((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))%((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))%((vt0.c0 IN (vt0.c0)))));
SELECT ALL * FROM v0 WHERE (((((((v0.c2) IS FALSE))OR(((((((((v0.c2)AND(v0.c0)))AND(v0.c0)))AND(v0.c1)))OR(v0.c0)))))AND(0.2402398386495913)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2) IS FALSE))OR(((((((((v0.c2)AND(v0.c0)))AND(v0.c0)))AND(v0.c1)))OR(v0.c0)))))AND(0.2402398386495913))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((v0.c2) IS FALSE))OR(((((((((v0.c2)AND(v0.c0)))AND(v0.c0)))AND(v0.c1)))OR(v0.c0)))))AND(0.2402398386495913)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2) IS FALSE))OR(((((((((v0.c2)AND(v0.c0)))AND(v0.c0)))AND(v0.c1)))OR(v0.c0)))))AND(0.2402398386495913))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((v0.c2) IS FALSE))OR(((((((((v0.c2)AND(v0.c0)))AND(v0.c0)))AND(v0.c1)))OR(v0.c0)))))AND(0.2402398386495913)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((NULL)) NOT BETWEEN ((CAST(v0.c1 AS INTEGER))) AND ((((v0.c0) NOT NULL))))) ORDER BY ABS((((vt0.c0, v0.c2, v0.c1)) BETWEEN ((v0.c2, v0.c2, x'')) AND ((v0.c1, v0.c2, vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) NOT BETWEEN ((CAST(v0.c1 AS INTEGER))) AND ((((v0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ABS((((vt0.c0, v0.c2, v0.c1)) BETWEEN ((v0.c2, v0.c2, x'')) AND ((v0.c1, v0.c2, vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((NULL)) NOT BETWEEN ((CAST(v0.c1 AS INTEGER))) AND ((((v0.c0) NOT NULL))))) ORDER BY ABS((((vt0.c0, v0.c2, v0.c1)) BETWEEN ((v0.c2, v0.c2, x'')) AND ((v0.c1, v0.c2, vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) NOT BETWEEN ((CAST(v0.c1 AS INTEGER))) AND ((((v0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ABS((((vt0.c0, v0.c2, v0.c1)) BETWEEN ((v0.c2, v0.c2, x'')) AND ((v0.c1, v0.c2, vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((NULL)) NOT BETWEEN ((CAST(v0.c1 AS INTEGER))) AND ((((v0.c0) NOT NULL))))) ORDER BY ABS((((vt0.c0, v0.c2, v0.c1)) BETWEEN ((v0.c2, v0.c2, x'')) AND ((v0.c1, v0.c2, vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)%(v0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)%(v0.c2)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)%(v0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)%(v0.c2)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)%(v0.c2)) IN ()));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c2)|(v0.c0)))GLOB(((vt0.c0)<=(v0.c2)))) WHERE (((vt0.c0 IN (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c2)|(v0.c0)))GLOB(((vt0.c0)<=(v0.c2)))));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c2)|(v0.c0)))GLOB(((vt0.c0)<=(v0.c2)))) WHERE (((vt0.c0 IN (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c2)|(v0.c0)))GLOB(((vt0.c0)<=(v0.c2)))));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c2)|(v0.c0)))GLOB(((vt0.c0)<=(v0.c2)))) WHERE (((vt0.c0 IN (vt0.c0)) IN ()));
SELECT * FROM vt0, v0 WHERE (((CAST(v0.c2 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS TEXT)) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((CAST(v0.c2 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS TEXT)) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((CAST(v0.c2 AS TEXT)) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0)*(v0.c2)) IN ()) DESC  NULLS LAST, (((v0.c1, v0.c2, v0.c1)) BETWEEN ((((v0.c1)<=(v0.c1)), ((v0.c2) NOTNULL), ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))) AND ((v0.c0, (((v0.c2, v0.c2, '|K')) NOT BETWEEN ((v0.c1, v0.c2, v0.c1)) AND ((v0.c1, v0.c0, v0.c1))), '3'))) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)*(v0.c2)) IN ()) DESC  NULLS LAST, (((v0.c1, v0.c2, v0.c1)) BETWEEN ((((v0.c1)<=(v0.c1)), ((v0.c2) NOTNULL), ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))) AND ((v0.c0, (((v0.c2, v0.c2, '|K')) NOT BETWEEN ((v0.c1, v0.c2, v0.c1)) AND ((v0.c1, v0.c0, v0.c1))), '3'))) ASC);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0)*(v0.c2)) IN ()) DESC  NULLS LAST, (((v0.c1, v0.c2, v0.c1)) BETWEEN ((((v0.c1)<=(v0.c1)), ((v0.c2) NOTNULL), ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))) AND ((v0.c0, (((v0.c2, v0.c2, '|K')) NOT BETWEEN ((v0.c1, v0.c2, v0.c1)) AND ((v0.c1, v0.c0, v0.c1))), '3'))) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)*(v0.c2)) IN ()) DESC  NULLS LAST, (((v0.c1, v0.c2, v0.c1)) BETWEEN ((((v0.c1)<=(v0.c1)), ((v0.c2) NOTNULL), ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))) AND ((v0.c0, (((v0.c2, v0.c2, '|K')) NOT BETWEEN ((v0.c1, v0.c2, v0.c1)) AND ((v0.c1, v0.c0, v0.c1))), '3'))) ASC);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0)*(v0.c2)) IN ()) DESC  NULLS LAST, (((v0.c1, v0.c2, v0.c1)) BETWEEN ((((v0.c1)<=(v0.c1)), ((v0.c2) NOTNULL), ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))) AND ((v0.c0, (((v0.c2, v0.c2, '|K')) NOT BETWEEN ((v0.c1, v0.c2, v0.c1)) AND ((v0.c1, v0.c0, v0.c1))), '3'))) ASC;
SELECT ALL * FROM v0, vt0 WHERE ((v0.c1 COLLATE NOCASE IN ())) ORDER BY CAST(CASE vt0.c0  WHEN v0.c0 THEN v0.c2 END AS NUMERIC) ASC, '-1944231397'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(CASE vt0.c0  WHEN v0.c0 THEN v0.c2 END AS NUMERIC) ASC, '-1944231397'  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE ((v0.c1 COLLATE NOCASE IN ())) ORDER BY CAST(CASE vt0.c0  WHEN v0.c0 THEN v0.c2 END AS NUMERIC) ASC, '-1944231397'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(CASE vt0.c0  WHEN v0.c0 THEN v0.c2 END AS NUMERIC) ASC, '-1944231397'  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE ((v0.c1 COLLATE NOCASE IN ())) ORDER BY CAST(CASE vt0.c0  WHEN v0.c0 THEN v0.c2 END AS NUMERIC) ASC, '-1944231397'  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c0, x'34f3', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '</(\r䫾Iz'))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, x'34f3', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '</(\r䫾Iz'))) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, x'34f3', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '</(\r䫾Iz'))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, x'34f3', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '</(\r䫾Iz'))) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, x'34f3', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '</(\r䫾Iz'))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE ((('p')OR(v0.c0))) ORDER BY ((v0.c2)/(v0.c1));
SELECT SUM(count) FROM (SELECT ALL (((('p')OR(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2)/(v0.c1)));
SELECT ALL COUNT(*) FROM v0 WHERE ((('p')OR(v0.c0))) ORDER BY ((v0.c2)/(v0.c1));
SELECT SUM(count) FROM (SELECT ALL (((('p')OR(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2)/(v0.c1)));
SELECT ALL COUNT(*) FROM v0 WHERE ((('p')OR(v0.c0))) ORDER BY ((v0.c2)/(v0.c1));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (CAST(v0.c0 AS TEXT) IN ()) WHERE (LOWER(NULL)) ORDER BY ((((0.8641389831889555) IS TRUE))*(((v0.c1)+(v0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (CAST(v0.c0 AS TEXT) IN ()) ORDER BY ((((0.8641389831889555) IS TRUE))*(((v0.c1)+(v0.c1)))) ASC);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (CAST(v0.c0 AS TEXT) IN ()) WHERE (LOWER(NULL)) ORDER BY ((((0.8641389831889555) IS TRUE))*(((v0.c1)+(v0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (CAST(v0.c0 AS TEXT) IN ()) ORDER BY ((((0.8641389831889555) IS TRUE))*(((v0.c1)+(v0.c1)))) ASC);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (CAST(v0.c0 AS TEXT) IN ()) WHERE (LOWER(NULL)) ORDER BY ((((0.8641389831889555) IS TRUE))*(((v0.c1)+(v0.c1)))) ASC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY v0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0 NOT INDEXED, v0 ORDER BY v0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY v0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0 NOT INDEXED, v0 ORDER BY v0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY v0.c1 DESC  NULLS FIRST;
